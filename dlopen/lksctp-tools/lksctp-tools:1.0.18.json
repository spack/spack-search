{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-lksctp-tools-1.0.18-febks7qgwhoga7yysvqnbzwcbpockper/spack-src/src/withsctp/sctp_socket.h": "/* Preprocessor definitions for withsctp and supporting scripts.\n *\n * Copyright 2003 La Monte HP Yarroll <piggy@acm.org>\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *    1. Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer. \n *    2. Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following\n * disclaimer in the documentation and/or other materials provided with\n * the distribution.\n *    3. The name of the author may not be used to endorse or promote\n * products derived from this software without specific prior written\n * permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\n * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n * Copyright 2003 La Monte HP Yarroll <piggy@acm.org>\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *    1. Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer. \n *    2. Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following\n * disclaimer in the documentation and/or other materials provided with\n * the distribution.\n *    3. The name of the author may not be used to endorse or promote\n * products derived from this software without specific prior written\n * permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\n * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n */\n#include <dlfcn.h> /* for dlopen() and company */\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <netinet/sctp.h>\n#include <netinet/tcp.h>\n\nextern int (*real_bind)(int  sockfd, const struct sockaddr *my_addr, socklen_t addrlen);\nextern int (*real_socket)(int domain, int type, int protocol);\nextern int (*real_setsockopt)(int s, int level, int optname, const void *optval,\n\t\t\t      socklen_t optlen);\nextern void _sctp_load_libs(void);\n",
        "/tmp/vanessa/spack-stage/spack-stage-lksctp-tools-1.0.18-febks7qgwhoga7yysvqnbzwcbpockper/spack-src/src/withsctp/sctp_load_libs.c": "/* Load the real underlying functions for withsctp and related scripts.\n *\n * Copyright 2003 La Monte HP Yarroll <piggy@acm.org>\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *    1. Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer. \n *    2. Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following\n * disclaimer in the documentation and/or other materials provided with\n * the distribution.\n *    3. The name of the author may not be used to endorse or promote\n * products derived from this software without specific prior written\n * permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\n * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n */\n#include <stdio.h>\n#include <stdlib.h>\n#include \"sctp_socket.h\"\n\nint (*real_bind)(int  sockfd, const struct sockaddr *my_addr, socklen_t addrlen);\nint (*real_socket)(int domain, int type, int protocol);\nint (*real_setsockopt)(int s, int level, int optname, const void *optval,\n\t\t       socklen_t optlen);\t\nstatic void *lib_handle = NULL;\n\nvoid\n_sctp_load_libs(void)\n{\n    if (NULL != lib_handle) return; /* Only init once.  */\n\n    if (!(lib_handle = dlopen(\"libc.so\", RTLD_LAZY))) {\n\tif (!(lib_handle = dlopen(\"libc.so.6\", RTLD_LAZY))) {\n\t    fprintf(stderr, \"error loading libc!\\n\");\n\t    exit (1);\n\t}\n    }\n    \n    if (!(real_socket = dlsym(lib_handle, \"socket\"))) {\n\tfprintf(stderr, \"socket() not found in libc!\\n\");\n\texit (1);\n    }\n\n    if (!(real_bind = dlsym(lib_handle, \"bind\"))) {\n\tfprintf(stderr, \"bind() not found in libc!\\n\");\n\texit (1);\n    }\n\n    if (!(real_setsockopt = dlsym(lib_handle, \"setsockopt\"))) {\n\tfprintf(stderr, \"setsockopt() not found in libc!\\n\");\n\texit (1);\n    }\n}\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-lksctp-tools-1.0.18-febks7qgwhoga7yysvqnbzwcbpockper/spack-src/configure.ac",
        "/tmp/vanessa/spack-stage/spack-stage-lksctp-tools-1.0.18-febks7qgwhoga7yysvqnbzwcbpockper/spack-src/src/apps/bindx_test.c"
    ],
    "total_files": 128
}