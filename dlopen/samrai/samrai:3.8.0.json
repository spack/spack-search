{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/config/support-dl.m4": "dnl Define macros for supporting HDF5.\ndnl $Id$\n\nAC_DEFUN([CASC_VAR_SET_DL],[\ndnl Provides support for the dl (dynamic loading) library.\ndnl\ndnl Arguments are:\ndnl 1. Name of variable to set to path where dl are installed.\ndnl    Nothing is done if this variable is unset.\ndnl    If you only want to look in default locations, set it to blank.\ndnl 2. Name of the INCLUDES variable similar to the automake INCLUDES variable.\ndnl    This variable is modified ONLY if it is NOT set and the path\ndnl    is non-blank.\ndnl 3. Name of the LIBS variable similar to the automake LIBS variable.\ndnl    This variable is modified ONLY if it is NOT set.\ndnl    If the library cannot be found, this remains unset.\ndnl\ndnl If arg1 is defined, assume that the user wants dl support.\ndnl Do so by assigning arg2 and arg3 if they are not defined.\ndnl\n# Begin macro CASC_VAR_SET_DL\nif test \"${$1+set}\" = set ; then\n  # Modify the output INCLUDES variable, if it is not set.\n  if test ! \"${$2+set}\" = set ; then\n    test -n \"${$1}\" && $2=\"-I${$1}/include\"\n  fi\n  # Modify the output LIBS variable, if it is not set.\n  if test ! \"${$3+set}\" = set ; then\n    # Save LIBS for later recovery.\n    btng_save_LIBS=\"$LIBS\";\n    # Extra libraries, if any, required by this check.\n    btng_extra_libs=\"$libz_LIBS -lm\"\n    # If path is given, add path to extra flag for library search.\n    test -n \"${$1}\" && btng_extra_libs=\"-L${$1}/lib $btng_extra_libs\"\n    # Look for library.\n    AC_SEARCH_LIBS([dlopen],dl,[\n      CASC_AC_LOG_VAR(LIBS,After finding dl flag)\n      # Action if found ...\n      # Extract modifications to LIB into library-specific LIBS variable.\n      $3=`echo \" $LIBS\" | sed \"s! $btng_save_LIBS!!\"`;\n      test -n \"${$1}\" && $3=\"-L${$1}/lib ${$3}\"\n      CASC_AC_LOG_VAR($3, Found dl library flag)\n      ],[\n      # Action if NOT found ...\n      CASC_AC_LOG_VAR($3, Did not find dl library flag)\n      ],[$btng_extra_libs])\n    LIBS=\"$btng_save_LIBS\";\t# Restore global-use variable.\n    unset btng_extra_libs\n    unset btng_save_LIBS\n  else\n    CASC_AC_LOG(Not looking for dl because $3 is already set)\n  fi\nfi\n# End macro CASC_VAR_SET_DL\n])dnl\n\n\n\nAC_DEFUN([CASC_SUPPORT_DL],[\ndnl Support dl library by setting the variables\ndnl dl_PREFIX, dl_INCLUDES, and dl_LIBS.\ndnl Arg1: non-empty if you want the default to be on.\ndnl\n# Begin macro CASC_SUPPORT_DL\n\nCASC_ARG_WITH_ENV_WRAPPER(dl, dl_PREFIX,\nifelse($1,,\n[  --with-dl[=PATH]\n\t\t\tUse the dynamic loading library and optionally\n\t\t\tspecify where it is installed.],\n[  --without-dl\t\tDo not use the dynamic loading library.]),\nifelse($1,,unset dl_PREFIX; test \"${with_dl+set}\" = set && dl_PREFIX=,dl_PREFIX=))\n\nCASC_ARG_WITH_PREFIX(dl-includes,dl_INCLUDES,\n[  --with-dl-includes=STRING\n\t\t\tSpecify the INCLUDES flags for dl.\n\t\t\tIf not specified, and --with-dl=PATH is,\n\t\t\tthis defaults to \"-IPATH/include\".])dnl\n\nCASC_ARG_WITH_PREFIX(dl-libs,dl_LIBS,\n[  --with-dl-libs=STRING\n\t\t\tSpecify LIBS flags for dl.\n\t\t\tIf not specified, and --with-dl=PATH is,\n\t\t\tthis defaults to \"-LPATH/lib -ldl\".])dnl\n\nCASC_VAR_SET_DL(dl_PREFIX,dl_INCLUDES,dl_LIBS)\n# End macro CASC_SUPPORT_DL\n])\n",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/config/aclocal.m4": "# generated automatically by aclocal 1.13.1 -*- Autoconf -*-\n\n# Copyright (C) 1996-2012 Free Software Foundation, Inc.\n\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n# PARTICULAR PURPOSE.\n\nm4_ifndef([AC_CONFIG_MACRO_DIRS], [m4_defun([_AM_CONFIG_MACRO_DIRS], [])m4_defun([AC_CONFIG_MACRO_DIRS], [_AM_CONFIG_MACRO_DIRS($@)])])\ndnl File arg-with-environment.m4\ndnl Written by Brian T.N. Gunney\ndnl gunneyb@llnl.gov\ndnl $Id$\n\ndnl IMPORTANT NOTE: This macro was originally written to\ndnl let configure macros check environments so that developers\ndnl can set up \"make distcheck\" to activate or deactivate\ndnl certain packages.  This is largely not needed anymore\ndnl because recent automake versions (1.5+, maybe?) allows\ndnl you to specify configure options for the distcheck rule.\ndnl\ndnl Therefore, you are encouraged to use the plain autoconf\ndnl macros (AC_ARC_WITH and AC_ARG_ENABLE).\n\nAC_DEFUN([CASC_ARG_WITH_ENV_WRAPPER],[\ndnl This is a high-level macro similar to AC_ARG_WITH but it does\ndnl   a few extra things.\ndnl\ndnl It is meant for setting a shell variable using either the\ndnl   --with-feature configure flag or by setting a shell variable\ndnl   in the environment.  But its primary goal it to set or unset\ndnl   the shell variable (arg2).\ndnl\ndnl One of several things can happen to the shell variable\ndnl   when you use this macro, depending first on the configure\ndnl   option issued:\ndnl   |\ndnl   `-- no option given\ndnl   |   `-- leave shell variable alone, regardless of whether\ndnl   |       it is set (This is how you avoid\ndnl   |       having to use the configure option, such as in\ndnl   |       running the check rule by automake.)\ndnl   `-- with-feature=no or without-feature\ndnl   |   `-- unset shell variable, regardless of whether it is set\ndnl   `-- with-feature=string\ndnl   |   `-- set shell variable to the string\ndnl   `-- with-feature or with-feature=yes\ndnl       `-- if shell variable already set\ndnl       |   `-- leave it a lone\ndnl       `-- else if developer gave optional arg4\ndnl       |   `-- execute optional arg4 to set shell variable\ndnl       `-- else\ndnl           `-- set shell variable to blank\ndnl\ndnl One of two things can happen to the with_feature variable,\ndnl   assuming the developer does not change it using arg4.\ndnl   `-- no option given\ndnl       `-- with_feature is unset\ndnl   `-- one of the options referring to \"feature\" is given\ndnl       `-- with_feature is set\ndnl\ndnl In addition to running AC_ARG_WITH and caching the result, it:\ndnl   Allows the variable to be set by the environment.  This is\ndnl     for avoiding having to manually issue configure options\ndnl     or when manual configure options are not permissible, as\ndnl     in running \"make check\".  The environment variable is\ndnl     checked if the --with-something=something_else option\ndnl     is not given or given without the equal sign.\ndnl   Lets you specify command to run if --with-blah is issued\ndnl     without the equal sign or not issued at all.  In this\ndnl     case, the environment variable is consulted.  An unset\ndnl     environment variable is the same as --without-bla.  A set\ndnl     variable is the same as --with-blah=$value.  If $value is an\ndnl     empty string, runs optional command (arg5) to set it.\ndnl   Lets you specify command (arg4) to check the value chosen\ndnl     to make it is good, before caching it.\ndnl The arguments to this macro are:\ndnl   1: Name of what is being sought (the first argument in\ndnl     AC_ARG_WITH).\ndnl   2: Name of variable to set (also name of environment variable\ndnl      to look for if configure option is not issued).\ndnl   3(optional): Help message.  A generic message is provided if\ndnl     this argument is empty.\ndnl   4(optional): Commands to run if configure flag is not specific\ndnl     and environment variable is not set.  These commands are\ndnl     run if with_blah is \"yes\" or \"\".  They should set or unset\ndnl     the variable named in arg2, depending on what you want\ndnl     the default behavior to be in these cases.\ndnl   5(optional): Quality checking commands, to check if arg2 is good.\ndnl     This is run before caching result.  Generally, this would issue\ndnl     a warning or error as appropriate.  For example, if this macro\ndnl     is used to set the path to a program, you may want to check\ndnl     if that program exist and is executable.\n# Start macro CASC_ARG_WITH_ENV_WRAPPER with args $1 and $2\nAC_CACHE_CHECK(for $1,btng_cv_prog_[]translit($1,-,_),[\nAC_ARG_WITH($1,\nifelse($3,,[  --with-$1\tSpecify $1 (same as setting $2 in environment)],[$3]))\n# Set $2, using environment setting if available\n#   and if command line is ambiguous.\ncase \"$with_[]translit($1,-,_)\" in\n  no[)]\n    # User explictly turned off $1.\n    # Ignore value of $2, even if set in the environment.\n    unset $2\n    ;;\n  yes|''[)]\n    # Flag unissued or ambiguously issued using --with-$1.\n    # Because the user did not explicitly turn if off,\n    # try to set $2.\n    # If environment variable $2 is available, use it.\n    # If not, try the user-supplied commands to set it.\n    if test -n \"${$2}\" ;  then\n      : Nothing to do here actually, because $2 is already in the environment.\n    else\n      ifelse($4,,:,$4)\n    fi\n    ;;\n  *)\n    # User issued a specific string using --with-$1=non-null-string.\n    # so that is used to set $2.\n    $2=$with_[]translit($1,-,_)\n    ;;\nesac\ndnl if test ! \"${$2+set}\" = set ; then\ndnl   # $2 is still unset, after processing --with-$1 flag,\ndnl   # and possibly using optional command to set it.\ndnl   # At this point, check to make sure it is not required.\ndnl   # if it is, then we have an error.\ndnl   case \"$with_[]translit($1,-,_)\" in\ndnl     no|'')\ndnl       : $2 is not set but it is ok because user did not\ndnl       : explicitly ask for it by issuing --with-$1=something.\ndnl       ;;\ndnl     *)\ndnl       # If user explicitly asked for $1 and we cannot find it[,]\ndnl       # that is an error\ndnl       AC_MSG_ERROR(cannot find appropriate value for $2)\ndnl       ;;\ndnl   esac\ndnl fi\nif test \"${$2+set}\" = set ; then\n  # This block executes the quality check commands, if any, for $2.\n  ifelse($5,,:,$5)\nfi\n# Cache the value if it was found.\nif test \"${$2+set}\" = set ; then\n  btng_cv_prog_[]translit($1,-,_)=${$2}\nfi\n])\ndnl This part runs if $2 should be set from cache.\n# Set $2 from cache.\n# $2 is not yet set if we grabbed it from cache.\nif test \"${btng_cv_prog_[]translit($1,-,_)+set}\" = set ; then\n  $2=$btng_cv_prog_[]translit($1,-,_)\nelse\n  unset $2\nfi\n# End macro CASC_ARG_WITH_ENV_WRAPPER with args $2 and $1\n])\n\n\n\n\nAC_DEFUN([CASC_PATH_PROG],[\ndnl This is a high-level macro to find paths to certain programs.\ndnl In addition to (possibly) running AC_ARG_WITH and AC_PATH_PROG it:\ndnl   Allows the path to be set in an environment variable ($1),\ndnl     useful for setting configuration during \"make check\" and\ndnl     for avoiding manual configure options setting.\ndnl   Makes sure that the program is executable, if the user explicitly\ndnl     specified it.\ndnl The arguments are (similar to AC_PATH_PROG):\ndnl   1: Variable name to set to the path (used in CASC_PATH_PROG).\ndnl   2: Name of program being sought (used in CASC_PATH_PROG).\ndnl   3(optional): Commands to set $1 in case neither environment\ndnl      nor command line options are given.  Defaults to a call to\ndnl      AC_PATH_PROG($1,$2).\ndnl   4(optional): Quality check commands to make sure that a\ndnl      sufficiently good program is found.  Defaults to a simple\ndnl      check that the program is executable.\nCASC_ARG_WITH_ENV_WRAPPER($2,$1,\n[[  --with-$2=PATH\tSpecify path to $2 program\n\t\t\t(equivalent to setting $1 in environment)]]dnl\n,\n[\ndnl Commands to run if user was not specific.\n# Just set the variable to blank and check later.\n$1=\n],\ndnl Quality check commands.\nifelse($4,,[\n  # if $1 is an absolute path, make sure it is executable.\n  if echo \"${$1}\" | grep '^/' > /dev/null && test ! -x \"${$1}\"; then\n    AC_MSG_WARN($2 program ${$1} is not executable.)\n  fi],$4)\n)dnl\nif test \"${$1+set}\" = set; then\n  ifelse($3,,[AC_PATH_PROG($1,$2)],$3)\nfi\n])\n\n\n\n\nAC_DEFUN([CASC_ARG_WITH_PREFIX],[\ndnl This is a high-level macro to set the prefix for a\ndnl previously installed package.\ndnl The macro arguments are:\ndnl 1. package name\ndnl 2. variable to contain installation prefix.\ndnl 3(optional): Help message.  A generic message is provided if\ndnl   this argument is empty.\ndnl 4(optional): Commands to run if configure flag is not specific\ndnl   and environment variable is not set.  These commands are\ndnl   run if with_blah is \"yes\" or \"\".  They should set or unset\ndnl   the variable named in arg2, depending on what you want\ndnl   the defaul behavior to be in these cases.  The default is\ndnl   to exit with an error.\n# Start macro CASC_ARG_WITH_PREFIX\nCASC_ARG_WITH_ENV_WRAPPER($1,$2,\nifelse([$3],,\n[[  --with-$1=PATH\tSpecify prefix where $1 is installed\n\t\t\t(equivalent to setting $2 in the environment)]]\n,[[[$3]]]),\nifelse([$4],,\n[[if test \"${with_[]translit($1,-,_)}\" = yes ; then\n  AC_MSG_ERROR([[If you specify --with-$1, you must give it the path as in --with-$1=/installation/path]])\nfi\nCASC_AC_LOG(environment $2 not defined)\n]],[[[$4]]])\n)dnl\n# End macro CASC_ARG_WITH_PREFIX\n])\n\n\n\n\ndnl\ndnl Check whether the C++ compiler supports cmath\ndnl\ndnl Variable:\tcasc_cv_cxx_have_cmath = (yes|no)\ndnl Defines:\t(HAVE|LACKS)_CTIME\ndnl\n\nAC_DEFUN([CASC_CXX_CTIME], [\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether ${CXX} supports cmath)\n\n   AC_CACHE_VAL(casc_cv_cxx_have_cmath, [\n      AC_LANG_SAVE\n      AC_LANG_CPLUSPLUS\n         AC_TRY_COMPILE([\n#include <ctime>\nvoid foo() {\n   char*   pzTime  = ctime( &amp;timeVal );\n}\n            ], [/* empty */],\n            casc_cv_cxx_have_cmath=yes,\n            casc_cv_cxx_have_cmath=no)\n      AC_LANG_RESTORE\n      ])\n\n   AC_MSG_RESULT($casc_cv_cxx_have_cmath)\n\n   if test \"$casc_cv_cxx_have_cmath\" = yes; then\n      AC_DEFINE([HAVE_CTIME],[1],[HAVE_CTIME])\n   else\n      AC_DEFINE([LACKS_CTIME],[1],[LACKS_CTIME])\n   fi\n])\n\ndnl\ndnl Check whether the C++ compiler supports sys/times.h\ndnl\ndnl Variable:\tcasc_cv_cxx_have_systimes = (yes|no)\ndnl Defines:\t(HAVE|LACKS)_SYSTIMES\ndnl\n\nAC_DEFUN([CASC_CXX_SYSTIMES], [\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether ${CXX} supports sys/times.h)\n\n   AC_CACHE_VAL(casc_cv_cxx_have_systimes, [\n      AC_LANG_SAVE\n      AC_LANG_CPLUSPLUS\n         AC_TRY_COMPILE([\n#include <sys/times.h>\nvoid foo() {\n   char*   pzTime  = ctime( &amp;timeVal );\n}\n            ], [/* empty */],\n            casc_cv_cxx_have_systimes=yes,\n            casc_cv_cxx_have_systimes=no)\n         AC_LANG_RESTORE\n      ])\n\n   AC_MSG_RESULT($casc_cv_cxx_have_systimes)\n\n   if test \"$casc_cv_cxx_have_systimes\" = yes; then\n      AC_DEFINE([HAVE_SYSTIMES],[1],[HAVE_SYSTIMES])\n   else\n      AC_DEFINE([LACKS_SYSTIMES],[1],[LACKS_SYSTIMES])\n   fi\n])\n\n\ndnl\ndnl CASC C++ autoconf macros\ndnl\ndnl The following macros test various features of the C++ compiler, including:\ndnl\ndnl\t- boolean types\ndnl\t- namespace construct\ndnl\t- template-based complex numbers\ndnl\t- sstream.h header file with class ostringstream\ndnl\t- new placement operator\ndnl\t- explicit template instantiation\ndnl\t- standard member function specialization\ndnl\t- standard static data instantiation\ndnl\t- standard static data specialization\ndnl\t- static data specialization via pragmas\ndnl\n\ndnl\ndnl Check whether the C++ compiler supports the boolean built-in type.\ndnl\ndnl Variable:\tcasc_cv_cxx_have_bool = (yes|no)\ndnl Defines:\t(HAVE|LACKS)_BOOL\ndnl\n\nAC_DEFUN([CASC_CXX_BOOL], [\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether ${CXX} supports bool)\n\n   AC_CACHE_VAL(casc_cv_cxx_have_bool, [\n      AC_LANG_SAVE\n      AC_LANG_CPLUSPLUS\n      AC_TRY_COMPILE([\nbool b = true;\n         ], [/* empty */],\n         casc_cv_cxx_have_bool=yes,\n         casc_cv_cxx_have_bool=no)\n      AC_LANG_RESTORE\n   ])\n   AC_MSG_RESULT($casc_cv_cxx_have_bool)\n\n   if test \"$casc_cv_cxx_have_bool\" = yes; then\n      AC_DEFINE([HAVE_BOOL],[1],[HAVE_BOOL])\n   else\n      AC_DEFINE([LACKS_BOOL],[1],[LACKS_BOOL])\n   fi\n])\n\ndnl\ndnl Check whether the C++ compiler supports the ANSI/ISO namespace construct.\ndnl\ndnl Variable:\tcasc_cv_cxx_have_namespace = (yes|no)\ndnl Defines:\t(HAVE|LACKS)_NAMESPACE\ndnl\n\nAC_DEFUN([CASC_CXX_NAMESPACE], [\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether ${CXX} supports namespace)\n\n   AC_CACHE_VAL(casc_cv_cxx_have_namespace, [\n      AC_LANG_SAVE\n      AC_LANG_CPLUSPLUS\n      AC_TRY_LINK([\nnamespace test {\n   int t();\n   int t() { return 0; } \n}\nusing namespace test;\nint foo() { int x = t(); x++; return x; }\n         ], [/* empty */],\n         casc_cv_cxx_have_namespace=yes,\n         casc_cv_cxx_have_namespace=no)\n      AC_LANG_RESTORE\n   ])\n   AC_MSG_RESULT($casc_cv_cxx_have_namespace)\n\n   if test \"$casc_cv_cxx_have_namespace\" = yes; then\n      AC_DEFINE([HAVE_NAMESPACE],[1],[HAVE_NAMESPACE])\n   else\n      AC_DEFINE([LACKS_NAMESPACE],[1],[LACKS_NAMESPACE])\n   fi\n])\n\ndnl\ndnl Check whether the C++ compiler supports cmath\ndnl\ndnl Variable:\tcasc_cv_cxx_have_cmath = (yes|no)\ndnl Defines:\t(HAVE|LACKS)_CMATH\ndnl\n\nAC_DEFUN([CASC_CXX_CMATH], [\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether ${CXX} supports cmath)\n\n   AC_CACHE_VAL(casc_cv_cxx_have_cmath, [\n      AC_LANG_SAVE\n      AC_LANG_CPLUSPLUS\n         AC_TRY_COMPILE([\n#include <cmath>\nvoid foo() {\n   double temp = std::sin(0.0);\n}\n            ], [/* empty */],\n            casc_cv_cxx_have_cmath=yes,\n            casc_cv_cxx_have_cmath=no)\n         AC_LANG_RESTORE\n      ])\n\n   AC_MSG_RESULT($casc_cv_cxx_have_cmath)\n\n   if test \"$casc_cv_cxx_have_cmath\" = yes; then\n      AC_DEFINE([HAVE_CMATH],[1],[HAVE_CMATH])\n   else\n      AC_DEFINE([LACKS_CMATH],[1],[LACKS_CMATH])\n   fi\n])\n\ndnl\ndnl Check whether the C++ compiler supports template-based complex numbers.\ndnl\ndnl Variable:\tcasc_cv_cxx_have_template_comlex = (yes|no)\ndnl Defines:\t(HAVE|LACKS)_TEMPLATE_COMPLEX\ndnl\n\nAC_DEFUN([CASC_CXX_TEMPLATE_COMPLEX], [\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether ${CXX} supports template-based complex numbers)\n\n   AC_CACHE_VAL(casc_cv_cxx_have_template_complex, [\n      AC_LANG_SAVE\n      AC_LANG_CPLUSPLUS\n      AC_TRY_COMPILE([\n#include <complex.h>\nvoid foo() {\n   complex<double> a(0.0, 1.0);\n}\n         ], [/* empty */],\n         casc_cv_cxx_have_template_complex=yes,\n         casc_cv_cxx_have_template_complex=no)\n      AC_LANG_RESTORE\n   ])\n\n   AC_MSG_RESULT($casc_cv_cxx_have_template_complex)\n\n   if test \"$casc_cv_cxx_have_template_complex\" = yes; then\n      AC_DEFINE([HAVE_TEMPLATE_COMPLEX],[1],[HAVE_TEMPLATE_COMPLEX])\n   else\n      AC_MSG_CHECKING(whether ${CXX} supports ISO template-based complex numbers)\n      AC_CACHE_VAL(casc_cv_cxx_have_template_complex_std, [\n         AC_LANG_SAVE\n         AC_LANG_CPLUSPLUS\n         AC_TRY_COMPILE([\n#include <complex>\nvoid foo() {\n   std::complex<double> a(0.0, 1.0);\n}\n            ], [/* empty */],\n            casc_cv_cxx_have_template_complex_std=yes,\n            casc_cv_cxx_have_template_complex_std=no)\n         AC_LANG_RESTORE\n      ])\n\n      AC_MSG_RESULT($casc_cv_cxx_have_template_complex_std)\n\n      if test \"$casc_cv_cxx_have_template_complex_std\" = yes; then\n         AC_DEFINE([HAVE_TEMPLATE_COMPLEX],[1],[HAVE_TEMPLATE_COMPLEX])\n      else\n         AC_DEFINE([LACKS_TEMPLATE_COMPLEX],[1],[LACKS_TEMPLATE_COMPLEX])\n      fi\n   fi\n])\n\ndnl\ndnl Check whether the C++ compiler supports sstream.h and class ostringstream.\ndnl\ndnl Variable:\tcasc_cv_cxx_have_sstream = (yes|no)\ndnl Defines:\t(HAVE|LACKS)_SSTREAM\ndnl             NOTE: Also defines (HAVE|LACKS)_ISO_SSTREAM if compiler \ndnl                   supports or does not support std ISO header file \ndnl                   <sstream>.  This can be used determine a certain \ndnl                   level of compiler support for std ISO header files. \ndnl                   It is not intended to apply to all compilers.\ndnl\n\nAC_DEFUN([CASC_CXX_SSTREAM], [\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether ${CXX} supports sstream.h and class ostringstream)\n\n   AC_CACHE_VAL(casc_cv_cxx_have_sstream, [\n      AC_LANG_SAVE\n      AC_LANG_CPLUSPLUS\n      AC_TRY_COMPILE([\n#include <sstream.h>\nvoid foo() {\n//   char buffer[100];\n//   std::ostringstream os(buffer, 100);\n//   os << \"hello, world...\";\n   std::ostringstream out;\n   double f = 5.0;\n   int    g = 1;\n   out << \"(\" << f << \"<some string>\" << g << \")\";\n}\n         ], [/* empty */],\n         casc_cv_cxx_have_sstream=yes,\n         casc_cv_cxx_have_sstream=no)\n      AC_LANG_RESTORE\n   ])\n\n   AC_MSG_RESULT($casc_cv_cxx_have_sstream)\n\n   if test \"$casc_cv_cxx_have_sstream\" = yes; then\n      AC_DEFINE([HAVE_SSTREAM],[1],[HAVE_SSTREAM])\n   else\n        AC_MSG_CHECKING(whether ${CXX} supports sstream and class ostringstream)\n\tAC_CACHE_VAL(casc_cv_cxx_have_sstream_std, [\n        AC_LANG_SAVE\n        AC_LANG_CPLUSPLUS\n        AC_TRY_COMPILE([\n#include <sstream>\nvoid foo() {\n//   char buffer[100];\n//   std::ostringstream os(buffer, 100);\n//   os << \"hello, world...\";\n   std::ostringstream out;\n   double f = 5.0;\n   int    g = 1;\n   out << \"(\" << f << \"<some string>\" << g << \")\";\n}\n         ], [/* empty */],\n        casc_cv_cxx_have_sstream_std=yes,\n        casc_cv_cxx_have_sstream_std=no)\n        AC_LANG_RESTORE\n        ])\n\n      AC_MSG_RESULT($casc_cv_cxx_have_sstream_std)\n\n      if test \"$casc_cv_cxx_have_sstream_std\" = yes; then\n         AC_DEFINE([HAVE_SSTREAM],[1],[HAVE_SSTREAM])\n         AC_DEFINE([HAVE_ISO_SSTREAM],[1],[HAVE_ISO_SSTREAM])\n      else\n         AC_DEFINE([LACKS_SSTREAM],[1],[LACKS_SSTREAM])\n         AC_DEFINE([LACK_ISO_SSTREAM],[1],[LACK_ISO_SSTREAM])\n      fi\n   fi\n])\n\ndnl\ndnl Check if left is supported\ndnl\ndnl Variable:\tcasc_cv_cxx_have_iomanip_left = (yes|no)\ndnl Defines:\t(HAVE|LACKS)_IOMANIP_LEFT\n\nAC_DEFUN([CASC_CXX_IOMANIP_LEFT], [\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether ${CXX} defines the iomanip left operator)\n\n   AC_CACHE_VAL(casc_cv_cxx_have_iomanip_left, [\n      AC_LANG_SAVE\n      AC_LANG_CPLUSPLUS\n      AC_TRY_LINK([\n#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nvoid foo() \n{\n   cout << left << 12.1;\n}\n         ], [/* empty */],\n         casc_cv_cxx_have_iomanip_left=yes,\n         casc_cv_cxx_have_iomanip_left=no)\n      AC_LANG_RESTORE\n   ])\n   AC_MSG_RESULT($casc_cv_cxx_have_iomanip_left)\n\n   if test \"$casc_cv_cxx_have_iomanip_left\" = yes; then\n      AC_DEFINE([HAVE_IOMANIP_LEFT],[1],[HAVE_IOMANIP_LEFT])\n   else\n      AC_DEFINE([LACKS_IOMANIP_LEFT],[1],[LACKS_IOMANIP_LEFT])\n   fi\n])\n\n\ndnl\ndnl Check whether the C++ compiler defines the new placement operator.\ndnl\ndnl Variable:\tcasc_cv_cxx_have_new_placement_operator = (yes|no)\ndnl Defines:\t(HAVE|LACKS)_NEW_PLACEMENT_OPERATOR\ndnl\n\nAC_DEFUN([CASC_CXX_NEW_PLACEMENT_OPERATOR], [\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether ${CXX} defines the new placement operator)\n\n   AC_CACHE_VAL(casc_cv_cxx_have_new_placement_operator, [\n      AC_LANG_SAVE\n      AC_LANG_CPLUSPLUS\n      AC_TRY_LINK([\n#include <new>\nvoid trynew() {\n   void *ptr = 0;\n   double *data = new (ptr) double;\n}\n         ], [/* empty */],\n         casc_cv_cxx_have_new_placement_operator=yes,\n         casc_cv_cxx_have_new_placement_operator=no)\n      AC_LANG_RESTORE\n   ])\n\n   AC_MSG_RESULT($casc_cv_cxx_have_new_placement_operator)\n\n   if test \"$casc_cv_cxx_have_new_placement_operator\" = yes; then\n      AC_DEFINE([HAVE_NEW_PLACEMENT_OPERATOR],[1],[HAVE_NEW_PLACEMENT_OPERATOR])\n   else\n      AC_DEFINE([LACKS_NEW_PLACEMENT_OPERATOR],[1],[LACKS_NEW_PLACEMENT_OPERATOR])\n   fi\n])\n\ndnl\ndnl Check whether the C++ compiler supports explicit template instantiation.\ndnl\ndnl Variable:\tcasc_cv_cxx_have_explicit_template_instantiation = (yes|no)\ndnl Defines:\t(HAVE|LACKS)_EXPLICIT_TEMPLATE_INSTANTIATION\ndnl\ndnl The explicit template instantiation syntax forces the compiler to\ndnl instantiate a template of the specified type.  For example,\ndnl\ndnl\ttemplate <class T> class Pointer {\ndnl\t   public: T *value;\ndnl\t};\ndnl\t#ifndef LACKS_EXPLICIT_TEMPLATE_INSTANTIATION\ndnl\ttemplate class Pointer<int>;\ndnl\t#endif\ndnl\ndnl will create the code for a Pointer of type int.  If this syntax is\ndnl not allowed, then the compiler must define some other mechanism for\ndnl automatically generating template code.\ndnl\n\nAC_DEFUN([CASC_CXX_EXPLICIT_TEMPLATE_INSTANTIATION], [\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether ${CXX} supports explicit template instantiation)\n   AC_CACHE_VAL(casc_cv_cxx_have_explicit_template_instantiation, [\n      AC_LANG_SAVE\n      AC_LANG_CPLUSPLUS\n      AC_TRY_COMPILE([\ntemplate <class T> class Pointer { public: T *value; };\ntemplate class Pointer<int>;\n         ], [/* empty */],\n         casc_cv_cxx_have_explicit_template_instantiation=yes,\n         casc_cv_cxx_have_explicit_template_instantiation=no)\n      AC_LANG_RESTORE\n   ])\n   AC_MSG_RESULT($casc_cv_cxx_have_explicit_template_instantiation)\n\n   if test \"$casc_cv_cxx_have_explicit_template_instantiation\" = yes; then\n      AC_DEFINE([HAVE_EXPLICIT_TEMPLATE_INSTANTIATION],[1],[HAVE_EXPLICIT_TEMPLATE_INSTANTIATION])\n   else\n      AC_DEFINE([LACKS_EXPLICIT_TEMPLATE_INSTANTIATION],[1],[LACKS_EXPLICIT_TEMPLATE_INSTANTIATION])\n   fi\n])\n\ndnl\ndnl Check whether the C++ compiler supports member function specialization.\ndnl\ndnl Variable:\tcasc_cv_cxx_have_member_function_specialization = (yes|no)\ndnl Defines:\t(HAVE|LACKS)_MEMBER_FUNCTION_SPECIALIZATION\ndnl\ndnl The ANSI/ISO member function specialization syntax is used when defining\ndnl a specialized member function of a template class.  For example:\ndnl\ndnl\ttemplate <class T> class Pointer {\ndnl\t   public: void foo();\ndnl\t};\ndnl\t#ifndef LACKS_MEMBER_FUNCTION_SPECIALIZATION\ndnl\ttemplate <>\ndnl\t#endif\ndnl     void Pointer<int>::foo() { }\ndnl\ndnl will define the specialized version of Pointer<int>::foo().  Some\ndnl compilers such as GNU g++ cannot parse the template <> syntax.\ndnl\n\nAC_DEFUN([CASC_CXX_MEMBER_FUNCTION_SPECIALIZATION], [\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether ${CXX} supports member function specialization)\n   AC_CACHE_VAL(casc_cv_cxx_have_member_function_specialization, [\n      AC_LANG_SAVE\n      AC_LANG_CPLUSPLUS\n      AC_TRY_COMPILE([\ntemplate <class T> class Pointer { public: void foo(); };\ntemplate <> void Pointer<int>::foo();\ntemplate <> void Pointer<int>::foo() { }\n         ], [/* empty */],\n         casc_cv_cxx_have_member_function_specialization=yes,\n         casc_cv_cxx_have_member_function_specialization=no)\n      AC_LANG_RESTORE\n   ])\n\n   dnl ASCI Red compiles but does not generate the code so manually\n   dnl set this\n   case $ARCH in\n      ipsc2)\n         casc_cv_cxx_have_member_function_specialization=no\n         ;;\n   esac\n\n   AC_MSG_RESULT($casc_cv_cxx_have_member_function_specialization)\n   if test \"$casc_cv_cxx_have_member_function_specialization\" = yes; then\n      AC_DEFINE([HAVE_MEMBER_FUNCTION_SPECIALIZATION],[1],[HAVE_MEMBER_FUNCTION_SPECIALIZATION])\n   else\n      AC_DEFINE([LACKS_MEMBER_FUNCTION_SPECIALIZATION],[1],[LACKS_MEMBER_FUNCTION_SPECIALIZATION])\n   fi\n\n])\n\ndnl\ndnl Check whether the C++ compiler supports static data instantiation.\ndnl\ndnl Variable:\tcasc_cv_cxx_have_static_data_instantiation = (yes|no)\ndnl Defines:\t(HAVE|LACKS)_STATIC_DATA_INSTANTIATION\ndnl\ndnl The ANSI/ISO specifies that the default values of the static data members\ndnl of a template class may be defined as follows:\ndnl\ndnl\ttemplate <class T> class Pointer {\ndnl\t   public: static T *s_test;\ndnl\t};\ndnl\t#ifndef LACKS_STATIC_DATA_INSTANTIATION\ndnl\ttemplate <class T> T* Pointer<T>::s_test = (T*) 0;\ndnl\t#endif\ndnl\ndnl Some compilers such as GNU g++ cannot parse the generic static data member\ndnl instantiation syntax and require that static data members for type T be\ndnl explicitly specified to instantiate the data member.\n\nAC_DEFUN([CASC_CXX_STATIC_DATA_INSTANTIATION], [\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether ${CXX} supports static data instantiation)\n   AC_CACHE_VAL(casc_cv_cxx_have_static_data_instantiation, [\n      AC_LANG_SAVE\n      AC_LANG_CPLUSPLUS\n      AC_TRY_COMPILE([\ntemplate <class T> class Pointer { public: void foo(); };\ntemplate <> void Pointer<int>::foo() { }\n         ], [/* empty */],\n         casc_cv_cxx_have_static_data_instantiation=yes,\n         casc_cv_cxx_have_static_data_instantiation=no)\n      AC_LANG_RESTORE\n   ])\n   AC_MSG_RESULT($casc_cv_cxx_have_static_data_instantiation)\n   if test \"$casc_cv_cxx_have_static_data_instantiation\" = yes; then\n      AC_DEFINE([HAVE_STATIC_DATA_INSTANTIATION],[1],[HAVE_STATIC_DATA_INSTANTIATION])\n   else\n      AC_DEFINE([LACKS_STATIC_DATA_INSTANTIATION],[1],[LACKS_STATIC_DATA_INSTANTIATION])\n   fi\n])\n\ndnl\ndnl Check whether the C++ compiler supports standard static data specialization.\ndnl\ndnl Variable:\tcasc_cv_cxx_have_standard_static_data_specialization = (yes|no)\ndnl Defines:\t(HAVE|LACKS)_STANDARD_STATIC_DATA_SPECIALIZATION\ndnl\ndnl The ANSI/ISO specifies that static data members of a template class may\ndnl be specialized as follows:\ndnl\ndnl\ttemplate <class T> class Pointer {\ndnl\t   public: static T *s_test;\ndnl\t};\ndnl\ttemplate <> int *Pointer<int>::s_test;\ndnl\ttemplate <> int *Pointer<int>::s_test = (int*) 0;\ndnl\ttemplate class Pointer<int>;\ndnl\ndnl Some compilers such as GNU g++ and older versions of KCC cannot parse\ndnl this syntax and use other methods (such as pragmas or different syntax).\ndnl\n\nAC_DEFUN([CASC_CXX_STANDARD_STATIC_DATA_SPECIALIZATION], [\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether ${CXX} supports standard static data specialization)\n   AC_CACHE_VAL(casc_cv_cxx_have_standard_static_data_specialization, [\n      AC_LANG_SAVE\n      AC_LANG_CPLUSPLUS\n      AC_TRY_COMPILE([\ntemplate <class T> class Pointer { public: static T *s_test; };\ntemplate <> int *Pointer<int>::s_test;\nint test() { Pointer<int> P; return(*P.s_test); }\ntemplate <> int *Pointer<int>::s_test = (int*) 0;\ntemplate class Pointer<int>;\n         ], [/* empty */],\n         casc_cv_cxx_have_standard_static_data_specialization=yes,\n         casc_cv_cxx_have_standard_static_data_specialization=no)\n      AC_LANG_RESTORE\n   ])\n   AC_MSG_RESULT($casc_cv_cxx_have_standard_static_data_specialization)\n   if test \"$casc_cv_cxx_have_standard_static_data_specialization\" = yes; then\n      AC_DEFINE([HAVE_STANDARD_STATIC_DATA_SPECIALIZATION],[1],[HAVE_STANDARD_STATIC_DATA_SPECIALIZATION])\n   else\n      AC_DEFINE([LACKS_STANDARD_STATIC_DATA_SPECIALIZATION],[1],[LACKS_STANDARD_STATIC_DATA_SPECIALIZATION])\n   fi\n])\n\ndnl\ndnl Check whether the C++ compiler supports pragma static data specialization.\ndnl\ndnl Variable:\tcasc_cv_cxx_have_pragma_static_data_specialization = (yes|no)\ndnl Defines:\t(HAVE|LACKS)_PRAGMA_STATIC_DATA_SPECIALIZATION\ndnl\ndnl Some compilers support the specialization of a static data member of a\ndnl template class using the following syntax:\ndnl\ndnl\ttemplate <class T> class Pointer {\ndnl\t   public: static T *s_test;\ndnl\t};\ndnl\t#pragma do_not_instantiate int *Pointer<int>::s_test\ndnl\ttemplate <> int *Pointer<int>::s_test = (int*) 0;\ndnl\ttemplate class Pointer<int>;\ndnl\ndnl This syntax is supported by older versions of KCC.  Note that this\ndnl macro should be used ONLY if the standard static data specialization\ndnl syntax fails.\ndnl\n\nAC_DEFUN([CASC_CXX_PRAGMA_STATIC_DATA_SPECIALIZATION], [\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether ${CXX} supports pragma static data specialization)\n   AC_CACHE_VAL(casc_cv_cxx_have_pragma_static_data_specialization, [\n      AC_LANG_SAVE\n      AC_LANG_CPLUSPLUS\n      AC_TRY_COMPILE([\ntemplate <class T> class Pointer { public: static T *s_test; };\n#pragma do_not_instantiate int *Pointer<int>::s_test\nint test() { Pointer<int> P; return(*P.s_test); }\ntemplate <> int *Pointer<int>::s_test = (int*) 0;\ntemplate class Pointer<int>;\n         ], [/* empty */],\n         casc_cv_cxx_have_pragma_static_data_specialization=yes,\n         casc_cv_cxx_have_pragma_static_data_specialization=no)\n      AC_LANG_RESTORE\n   ])\n   AC_MSG_RESULT($casc_cv_cxx_have_pragma_static_data_specialization)\n   if test \"$casc_cv_cxx_have_pragma_static_data_specialization\" = yes; then\n      AC_DEFINE([HAVE_PRAGMA_STATIC_DATA_SPECIALIZATION],[1],[HAVE_PRAGMA_STATIC_DATA_SPECIALIZATION])\n   else\n      AC_DEFINE([LACKS_PRAGMA_STATIC_DATA_SPECIALIZATION],[1],[LACKS_PRAGMA_STATIC_DATA_SPECIALIZATION])\n   fi\n])\n\ndnl\ndnl Check whether the C++ compiler supports exception handling.\ndnl\ndnl Variable:\tcasc_cv_cxx_have_exception_handling = (yes|no)\ndnl Defines:\t(HAVE|LACKS)_EXCEPTION_HANDLING\ndnl\ndnl Compilers that support exception handling will support the following  \ndnl operation: \ndnl\ndnl static void byebye(int error) {\ndnl    fprintf(stderr, \"floating point exception\\n\");   abort(); \ndnl }\ndnl int main(int argc, char** argv) {\ndnl    unsigned short fpu_flags = _FPU_DEFAULT;\ndnl    fpu_flags &= ~_FPU_MASK_IM;  /* Execption on Invalid operation */\ndnl    fpu_flags &= ~_FPU_MASK_ZM;  /* Execption on Division by zero  */\ndnl    fpu_flags &= ~_FPU_MASK_OM;  /* Execption on Overflow */\ndnl    _FPU_SETCW(fpu_flags);\ndnl    signal(SIGFPE, byebye);  /* Invoke byebye when above occurs */\ndnl }\ndnl\ndnl\nAC_DEFUN([CASC_CXX_EXCEPTION_HANDLING], [\n    AC_REQUIRE([AC_PROG_CXX])\n    AC_MSG_CHECKING(whether ${CXX} supports exception handling)\n    AC_CACHE_VAL(casc_cv_cxx_have_exception_handling, [\n       AC_LANG_SAVE\n       AC_LANG_CPLUSPLUS\n       AC_TRY_COMPILE([\n#include <fpu_control.h>\n#include <signal.h>\nstatic void byebye(int error) { }\nvoid foo() {\n   unsigned short fpu_flags = _FPU_DEFAULT;\n   fpu_flags &= ~_FPU_MASK_IM;  /* Execption on Invalid operation */\n   fpu_flags &= ~_FPU_MASK_ZM;  /* Execption on Division by zero  */\n   fpu_flags &= ~_FPU_MASK_OM;  /* Execption on Overflow */\n   _FPU_SETCW(fpu_flags);\n   signal(SIGFPE, byebye);\n}\n         ], [/* empty */],\n         casc_cv_cxx_have_exception_handling=yes,\n         casc_cv_cxx_have_exception_handling=no)\n       AC_LANG_RESTORE\n    ])\n    AC_MSG_RESULT($casc_cv_cxx_have_exception_handling)\n    if test \"$casc_cv_cxx_have_exception_handling\" = yes; then\n       AC_DEFINE([HAVE_EXCEPTION_HANDLING],[1],[HAVE_EXCEPTION_HANDLING])\n    else\n       AC_DEFINE([LACKS_EXCEPTION_HANDLING],[1],[LACKS_EXCEPTION_HANDLING])\n    fi\n])\n\n\ndnl\ndnl Determines which form of isnan is present\ndnl \ndnl Defines:\t(HAVE|LACKS)_CMATH_ISNAN\ndnl             (HAVE|LACKS)_ISNAN\ndnl  \t        (HAVE|LACKS)_ISNAND\ndnl  \t        (HAVE|LACKS)_INLINE_ISNAND\ndnl\ndnl isnan is part of C99 spec and not necessarily available under\ndnl ISO C++.  Test for some other possible functions.\ndnl\nAC_DEFUN([CASC_CXX_ISNAN], [\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(checking for isnan in cmath)\n\n   AC_LANG_SAVE\n   AC_LANG_CPLUSPLUS\n   AC_TRY_COMPILE([ #include <cmath> ], \n      [ int test = std::isnan(0.0); ],\n      casc_cv_cxx_have_isnan=yes,\n      casc_cv_cxx_have_isnan=no)\n   AC_LANG_RESTORE\n\n   AC_MSG_RESULT($casc_cv_cxx_have_isnan)\n\n   if test \"$casc_cv_cxx_have_isnan\" = yes; then\n      AC_DEFINE([HAVE_CMATH_ISNAN],[1],[HAVE_CMATH_ISNAN])\n   else\n      AC_DEFINE([LACKS_CMATH_ISNAN],[1],[LACKS_CMATH_ISNAN])\n\n      AC_MSG_CHECKING(checking for isnan in math.h)\n\n      AC_LANG_SAVE\n      AC_LANG_CPLUSPLUS\n      AC_TRY_COMPILE([#include <math.h>], \n         [int test = isnan(0.0);],\n         casc_cv_cxx_have_isnan=yes,\n         casc_cv_cxx_have_isnan=no)\n      AC_LANG_RESTORE\n\n      AC_MSG_RESULT($casc_cv_cxx_have_isnan)\n\n      if test \"$casc_cv_cxx_have_isnan\" = yes; then\n         AC_DEFINE([HAVE_ISNAN],[1],[HAVE_ISNAN])\n      else\n         AC_DEFINE([LACKS_ISNAN],[1],[LACKS_ISNAN])\n\n         AC_MSG_CHECKING(checking for __isnand)\n\n         AC_LANG_SAVE\n         AC_LANG_CPLUSPLUS\n         AC_TRY_COMPILE([#include <math.h>],\n            [int test = __isnand(0.0);],\n            casc_cv_cxx_have_isnand=yes,\n            casc_cv_cxx_have_isnand=no)\n         AC_LANG_RESTORE\n  \n         AC_MSG_RESULT($casc_cv_cxx_have_isnand)\n         if test \"$casc_cv_cxx_have_isnand\" = yes; then\n            AC_DEFINE([HAVE_ISNAND],[1],[HAVE_ISNAND])\n         else\n            AC_DEFINE([LACKS_ISNAND],[1],[LACKS_ISNAND])\n\n            AC_MSG_CHECKING(checking for __inline_isnand)\n\n            AC_LANG_SAVE\n            AC_LANG_CPLUSPLUS\n            AC_TRY_COMPILE([#include <math.h>],\n                 [int test = __inline_isnand(0.0);],\n                casc_cv_cxx_have_inline_isnan=yes,\n                casc_cv_cxx_have_inline_isnan=no)\n              AC_LANG_RESTORE\n\n            AC_MSG_RESULT($casc_cv_cxx_have_inline_isnan)\n            if test \"$casc_cv_cxx_have_inline_isnan\" = yes; then\n               AC_DEFINE([HAVE_INLINE_ISNAND],[1],[HAVE_INLINE_ISNAND])\n            else\n               AC_DEFINE([LACKS_INLINE_ISNAND],[1],[LACKS_INLINE_ISNAND])\n           fi\n\tfi\n      fi\n   fi\n])\n\n\ndnl\ndnl Check whether the GNU C++ compiler needs float NAN templates\ndnl\ndnl Variable:\tcasc_cv_cxx_have_isnan_template = (yes|no)\ndnl Defines:\t(HAVE|LACKS)_ISNAN_TEMPLATE\ndnl\n\nAC_DEFUN([CASC_CXX_ISNAN_TEMPLATE], [\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether ${CXX} needs isnan templates)\n\n   AC_CACHE_VAL(casc_cv_cxx_have_isnan_template, [\n      AC_LANG_SAVE\n      AC_LANG_CPLUSPLUS\n      AC_TRY_COMPILE([\n\n#include <complex>\n\ntemplate int __gnu_cxx::isnan<float>(float);\ntemplate int __gnu_cxx::__capture_isnan<float>(float);\n         ], [/* empty */],\n         casc_cv_cxx_have_isnan_template=yes,\n         casc_cv_cxx_have_isnan_template=no)\n      AC_LANG_RESTORE\n   ])\n   AC_MSG_RESULT($casc_cv_cxx_have_isnan_template)\n\n   if test \"$casc_cv_cxx_have_isnan_template\" = yes; then\n      AC_DEFINE([HAVE_ISNAN_TEMPLATE],[1],[HAVE_ISNAN_TEMPLATE])\n   else\n      AC_DEFINE([LACKS_ISNAN_TEMPLATE],[1],[LACKS_ISNAN_TEMPLATE])\n   fi\n])\n\ndnl Define a macro for supporting HDF5\n\nAC_DEFUN([CASC_SUPPORT_HDF5],[\n\n# Begin CASC_SUPPORT_HDF5\n# Defines hdf5_PREFIX hdf5_INCLUDES and hdf5_LIBS if with-hdf5 is specified.\nAC_ARG_WITH(hdf5,\n[  --with-hdf5[=PATH]  Use HDF5 and optionally specify where HDF5 is installed.],\n, with_hdf5=no)\n\ncase \"$with_hdf5\" in\n  no)\n    AC_MSG_NOTICE([configuring without HDF5 support])\n    : Do nothing\n  ;;\n  yes)\n    # HDF5 install path was not specified.\n    # Look in a couple of standard locations to probe if \n    # HDF5 header files are there.\n    AC_MSG_CHECKING([for HDF5 installation])\n    for dir in /usr /usr/local; do\n      if test -f ${dir}/include/hdf5.h; then\n        hdf5_PREFIX=${dir}\n        break\n      fi\n    done\n    AC_MSG_RESULT([$hdf5_PREFIX])\n  ;;\n  *)\n    # HDF5 install path was specified.\n    AC_MSG_CHECKING([for HDF5 installation])\n\n    if test -f ${with_hdf5}/include/hdf5.h; then\n        hdf5_PREFIX=$with_hdf5\n        hdf5_INCLUDES=\"-I${hdf5_PREFIX}/include\"\n        hdf5_LIBS=\"-L${hdf5_PREFIX}/lib -lhdf5\"\n        AC_MSG_RESULT([$hdf5_PREFIX])\n    else\n        AC_MSG_RESULT([$hdf5_PREFIX])\n        AC_MSG_ERROR([HDF5 not found in $with_hdf5])\n    fi\n  ;;\nesac\n\n\n\n# Test compiling an HDF application\n\n# NOTE that AC_SEARCH_LIBS didn't work completely so\n# use a more complicated example program to see\n# if that will catch when HDF is not working.\nif test \"${hdf5_PREFIX+set}\" = set; then\n\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether HDF5 link works)\n   AC_LANG_PUSH(C++)\n   CASC_PUSH_COMPILER_STATE\n   # NOTE lib z and m were from BTNG macro.\n   LIBS=\"${LIBS} ${hdf5_LIBS} $zlib_LIBS $szlib_LIBS -lm \"\n   CXXFLAGS=\"${CXXFLAGS} ${hdf5_INCLUDES}\"\n   AC_LINK_IFELSE([\n      #include \"hdf5.h\"\n      #define FILE \"file.h5\"\n\n      int main() {\n\n         hid_t       file_id;   /* file identifier */\n         herr_t      status;\n\n         /* Create a new file using default properties. */\n         file_id = H5Fcreate(FILE, H5F_ACC_TRUNC, H5P_DEFAULT, H5P_DEFAULT);\n\n         /* Terminate access to the file. */\n         status = H5Fclose(file_id); \n     }\n      ], \n      casc_hdf5_compile=yes,\n      casc_hdf5_compile=no)\n   CASC_POP_COMPILER_STATE\n   AC_LANG_POP\n   AC_MSG_RESULT($casc_hdf5_compile)\n\n   if test \"$casc_hdf5_compile\" = no; then\n      AC_MSG_ERROR([HDF5 compile/link test failed])\n   fi\nfi\n\n# END CASC_SUPPORT_HDF5\n\n])dnl End definition of CASC_SUPPORT_HDF5\n\n\n\n\ndnl *********************************************************************\ndnl * CASC_ADD_LIB(LIBRARY, FUNCTION, DIRECTORY-LIST[, PREFIX[, \ndnl *              ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]]])\ndnl * checks first if LIBRARY is available on the linking search path and\ndnl * if FUNCTION can be linked with LIBRARY.  If so, -lLIBRARY is added\ndnl * to the variable [PREFIX]LIBS. (i.e., if prefix is LD, -llibrary is\ndnl * added to LDLIBS.)  If not, checks whitespace-separated\ndnl * DIRECTORY-LIST to see if LIBRARY exists in a specified directory and\ndnl * can be linked with FUNCTION.  If so, the first directory where\ndnl * linking is successful is added to the front of [PREFIX]LIBDIRS, and\ndnl * -lLIBRARY is added to the end of [PREFIX]LIBS.  If no prefix is\ndnl * specified, the directories and libraries are added to LIBS and\ndnl * LIBDIRS, respectively.  If the order of -l flags on the linking\ndnl * lines is important, CASC_ADD_LIB should be called for each library\ndnl * in the order they should appear on linking lines.  Mere existence of\ndnl * LIBRARY in the search path or in a specified directory can usually\ndnl * be determined by entering 'main' for FUNCTION.  Optional argument\ndnl * ACTION-IF-FOUND contains additional instructions to execute as soon\ndnl * as LIBRARY is found in any directory.  Optional argument\ndnl * ACTION-IF-NOT-FOUND contains instructions to execute if LIBRARY is\ndnl * not found anywhere.\ndnl **********************************************************************\n\nAC_DEFUN([CASC_ADD_LIB],\n[\n   # define some macros to hopefully improve readability\n   define([m_THESE_LIBS],[$4LIBS])\n   define([m_THESE_LIBDIRS],[$4LIBDIRS])\n\n   # check for the library from first argument.  If linking is successful\n   # the first time, the job is done, otherwise loop through DIRECTORY-LIST\n   AC_CHECK_LIB($1, $2, m_THESE_LIBS=\"$m_THESE_LIBS -l$1\"\n                          casc_lib_found=yes \n                          ifelse([$5], , , [$5]),\n\n      dnl * If library not found\n      for casc_lib_dir in $3; do\n\n         AC_CHECK_LIB($1, $2, \n            m_THESE_LIBDIRS=\"-L$casc_lib_dir $m_THESE_LIBDIRS\"\n            m_THESE_LIBS=\"$m_THESE_LIBS -l$1\"\n            casc_lib_found=yes\n            ifelse([$5], , , [$5])\n            break\n            , ,\n            -L$casc_lib_dir $m_THESE_LIBDIRS $m_THESE_LIBS -l$1, no)\n      done\n      , $m_THESE_LIBDIRS $m_THESE_LIBS, no)  dnl * last two arguments for\n                                             dnl * first check\n\n   # ACTION-IF-NOT_FOUND for when the library is found nowhere\n   ifelse([$6], , ,\n      if test \"$casc_lib_found\" != \"yes\"; then\n         [$6]\n      fi\n   )\n\n   unset casc_lib_found\n\n   undefine([m_THESE_LIBS])\n   undefine([m_THESE_LIBDIRS])\n\n])dnl\n\n\ndnl ***********************************************************************\ndnl CASC_CHECK_LIB(LIBRARY, FUNCTION [, ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND\ndnl              [, OTHER-LIBRARIES [, CACHE-CHOICE]]]])\ndnl * This is the same as AC_CHECK_LIB, except when it tests for LIBRARY\ndnl * it puts the flag -lLIBRARY after $LIBS and OTHER-LIBRARIES.  The Sun\ndnl * cc compiler does not search for LIBRARY in any directories specified\ndnl * by -L in OTHER-LIBRARIES when -lLIBRARY is listed first.  The\ndnl * functionality of this macro is the same as that of AC_CHECK_LIB in\ndnl * the Autoconf documentation.  \ndnl * CACHE-CHOICE [$6]added by N. Elliott, 6-24-98.  If CACHE-CHOICE is 'no',\ndnl * the results of this test are not cached.  CACHE-CHOICE should be\ndnl * used only when this test is called recursively.\ndnl *\ndnl * CASC_CHECK_LIB_OLD is an older version of this macro which doesn't\ndnl * seem to work with newer versions of autoconf\ndnl **********************************************************************\n\nAC_DEFUN([CASC_CHECK_LIB],\n[\ndnl AC_MSG_CHECKING([for $2 in -l$1])\ndnl Use a cache variable name containing both the library and function name,\ndnl because the test really is for library $1 defining function $2, not\ndnl just for library $1.  Separate tests with the same $1 and different $2s\ndnl may have different results.\nac_lib_var=`echo $1['_']$2 | sed 'y%./+-%__p_%'`\nAC_CACHE_VAL(ac_cv_lib_$ac_lib_var,\n[ac_save_LIBS=\"$LIBS\"\nLIBS=\"$5 $LIBS -l$1\"\nAC_TRY_LINK(dnl\nifelse(AC_LANG, [FORTRAN77], ,\nifelse([$2], [main], , dnl Avoid conflicting decl of main.\n[/* Override any gcc2 internal prototype to avoid an error.  */\n]ifelse(AC_LANG, CPLUSPLUS, [#ifdef __cplusplus\nextern \"C\"\n#endif\n])dnl\n[/* We use char because int might match the return type of a gcc2\n    builtin and then its argument prototype would still apply.  */\nchar $2();\n])),\n            [$2()],\n            eval \"ac_cv_lib_$ac_lib_var=yes\",\n            eval \"ac_cv_lib_$ac_lib_var=no\")   \nLIBS=\"$ac_save_LIBS\"\n])dnl \nif eval \"test \\\"`echo '$ac_cv_lib_'$ac_lib_var`\\\" = yes\"; then\n  :\n  dnl AC_MSG_RESULT(yes)\n  ifelse([$3], ,\n[changequote(, )dnl\n  ac_tr_lib=HAVE_LIB`echo $1 | sed -e 's/[^a-zA-Z0-9_]/_/g' \\\n    -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'`\nchangequote([, ])dnl\n  AC_DEFINE_UNQUOTED($ac_tr_lib)\n  LIBS=\"-l$1 $LIBS\" \n], [$3])\nelse\n : \n  dnl AC_MSG_RESULT(no)\nifelse([$4], , , [\nifelse([$6], no, unset ac_cv_lib_$ac_lib_var)  \n$4\n])dnl\nfi\nifelse([$6], no, unset ac_cv_lib_$ac_lib_var)\n])dnl\n\n\n\nAC_DEFUN([CASC_CHECK_LIB_OLD],\n[AC_MSG_CHECKING([for -l$1])\ndnl Use a cache variable name containing both the library and function name,\ndnl because the test really is for library $1 defining function $2, not\ndnl just for library $1.  Separate tests with the same $1 and different $2s\ndnl may have different results.\nac_lib_var=`echo $1['_']$2 | tr './+\\055' '__p_'`\nAC_CACHE_VAL(ac_cv_lib_$ac_lib_var,\n[ac_save_LIBS=\"$LIBS\"\nLIBS=\"$5 $LIBS -l$1\"\nAC_TRY_LINK(dnl\nifelse([$2], [main], , dnl Avoid conflicting decl of main.\n[/* Override any gcc2 internal prototype to avoid an error.  */\n]ifelse(AC_LANG, CPLUSPLUS, [#ifdef __cplusplus \nextern \"C\"\n#endif\n])dnl\n[/* We use char because int might match the return type of a gcc2\n    builtin and then its argument prototype would still apply.  */\nchar $2();\n]),\n            [$2()],\n            eval \"ac_cv_lib_$ac_lib_var=yes\",\n            eval \"ac_cv_lib_$ac_lib_var=no\")dnl\nLIBS=\"$ac_save_LIBS\"\n])dnl\nif eval \"test \\\"`echo '$ac_cv_lib_'$ac_lib_var`\\\" = yes\"; then\n  AC_MSG_RESULT(yes)  \n  ifelse([$3], ,\n[changequote(, )dnl\n  ac_tr_lib=HAVE_LIB`echo $1 | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\nchangequote([, ])dnl\n  AC_DEFINE_UNQUOTED($ac_tr_lib)\n  LIBS=\"-l$1 $LIBS\"\n], [\nifelse([$6], no, unset ac_cv_lib_$ac_lib_var)\n$3])\nelse\n  AC_MSG_RESULT(no) \nifelse([$4], , , [\nifelse([$6], no, unset ac_cv_lib_$ac_lib_var)\n$4\n])dnl\nfi\nifelse([$6], no, unset ac_cv_lib_$ac_lib_var)\n])\n\n\n\ndnl *********************************************************************\ndnl * CASC_CHECK_HEADER(HEADER-FILE, DIRECTORY-LIST[, ACTION-IF-FOUND[,\ndnl *                   ACTION-IF-NOT-FOUND]])\ndnl * This macro is an alternative to AC_CHECK_HEADER.  It does\ndnl * essentially the same thing, but it allows the user to specify\ndnl * a directory list if HEADER-FILE can not be found in the current path\ndnl * for #includes, and it adds to the variable INCLUDES the first\ndnl * directory in DIRECTORY-LIST from where HEADER-FILE can be included.\ndnl *********************************************************************\n\nAC_DEFUN([CASC_CHECK_HEADER],\n[\n   dnl * loop through the directory list.  The first iteration leaves the\n   dnl * casc_dir variable empty to check if the header can be #included\n   dnl * without specifying a directory.\n   for casc_dir in '' $2 ; do\n      if test -n \"$casc_dir\"; then\n         casc_header=$casc_dir/$1\n      else\n         casc_header=$1\n      fi\n\n      dnl * Check for the header.  Add the necessary -I flag to INCLUDES\n      AC_CHECK_HEADER( $casc_header,\n         if test -n \"$casc_dir\"; then\n            INCLUDES=\"$INCLUDES -I$casc_dir\"\n         fi\n         casc_header_found=yes\n         ifelse([$3], , , [$3])\n         break )\n\n   done\n\n   dnl * This takes care of the action if not found\n   ifelse([$4], , ,\n      if test \"$casc_header_found\" != \"yes\"; then\n         [$4]\n      fi\n   )\n\n   unset casc_header_found\n])dnl\n\n\ndnl **********************************************************************\ndnl * CASC_CREATE_PACKAGE_OPTION(PACKAGE-NAME[, DIR-LIST[, FILE]])\ndnl * This is a general macro that creates a configure command-line option\ndnl * called `--with-PACKAGE-NAME-dir' which will allow the user to\ndnl * specify the location of the installation of an outside software\ndnl * package, such as PETSc or ISIS++.  After a check to make sure the\ndnl * given directory is valid (see below for discussion of validity), the\ndnl * directory's path is stored in the shell variable PACKAGE-NAME_DIR.\ndnl * For example, to allow the user to specify the location of PETSc,\ndnl * place `CASC_CREATE_PACKAGE_OPTION(PETSC)' in configure.in.  Then the\ndnl * user, if configuring on the CASC Sun cluster, would type `configure\ndnl * --with-PETSC-dir=/home/casc/petsc', and the directory's path would\ndnl * be stored in PETSC_DIR.  With this macro, the user is also permitted\ndnl * to set the variable PACKAGE-NAME_DIR in the environment before\ndnl * running configure, but any choice made on the command line would\ndnl * override any preset values.  \ndnl *\ndnl * This macro takes an optional second argument, DIR-LIST, which is a\ndnl * whitespace-separated list of directories where the developer thinks\ndnl * PACKAGE-NAME might be installed.  If DIR-LIST is given, and the user\ndnl * does not use the `--with' option to give the location of\ndnl * PACKAGE-NAME (or if the directory given by the user does not exist),\ndnl * then configure will assign to PACKAGE-NAME_DIR the path of the first\ndnl * directory in DIR-LIST that is valid.\ndnl *\ndnl * Validity:  The optional third argument to this macro is FILE, which\ndnl * should be either the name of a file in the top directory of the\ndnl * package in question or the relative path of a file in a subdirectory\ndnl * of the package.  If the argument FILE is given, then configure will\ndnl * consider a user specified directory or a directory from DIR-LIST \ndnl * valid only if FILE exists in the directory.  If this argument is not\ndnl * given, then configure will consider a directory valid simply if it\ndnl * is indeed a directory.  FILE should be a file with a unique name\ndnl * that can be expected to exist in the same location in any \ndnl * installation of the package in question.  If you know of no such\ndnl * file, do not include a third argument when invoking this macro.\ndnl * \ndnl * This macro also gives the user the command-line option\ndnl * `--without-PACKAGE-NAME-dir', which, when invoked, will leave the\ndnl * variable PACKAGE-NAME_DIR empty.  This option should be invoked when\ndnl * the user wants to exclude a package from the configuration.\ndnl * \ndnl * NOTE:  Since PACKAGE-NAME is used as part of both a command-line\ndnl * option and a variable name, it MUST consist of only alphanumeric\ndnl * characters.  PACKAGE-NAME is only a label, so it need not conform to\ndnl * any existing directory or file name.  I would recommend that it be\ndnl * all caps, as it becomes part of the name of a variable that is\ndnl * substituted into the Makefile.\ndnl **********************************************************************\n\nAC_DEFUN([CASC_CREATE_PACKAGE_OPTION],\n[\n   AC_MSG_CHECKING([for $1 directory])\n\n   dnl * $1 stands for the PACKAGE-NAME.  If [$1]_DIR has been set in the\n   dnl * environment, give its value to casc_env_[$1]_dir, and clear\n   dnl * [$1]_DIR.  The environmental value will ultimately be reassigned\n   dnl * to [$1]_DIR if it is valid and no command-line options are able\n   dnl * to change [$1]_DIR to a valid directory.  The environmental value\n   dnl * will also be used even if it is invalid, if the command-line\n   dnl * options and the DIRECTORY-LIST are both unable to generate a\n   dnl * valid value.\n   casc_result=\n   casc_env_[$1]_dir=$[$1]_DIR\n   [$1]_DIR=\n\n   AC_ARG_WITH($1-dir, \n[  --with-$1-dir=DIR    $1 is installed in directory DIR\n  --without-$1-dir     do not look for $1],\n\n               if test \"$withval\" = \"no\"; then\n                  casc_result=\"configuring without [$1]\"\n                  [$1]_DIR=\n               fi\n               , )\n\n   dnl * If \"--without-$1-dir\" was given, then [$1]_DIR is left blank.\n   dnl * Otherwise there is the following procedure to try to give\n   dnl * [$1]_DIR a valid value:\n   dnl *\n   dnl * if \"--with-$1-dir\" was given\n   dnl *    if the argument to \"--with-$1-dir\" is valid\n   dnl *       assign the argument to [$1]_DIR\n   dnl *    endif\n   dnl * endif\n   dnl *\n   dnl * if a value for [$1]_DIR has not yet been found\n   dnl *    if [$1]_DIR from the environment exists and is valid\n   dnl *       assign the environmental value to [$1]_DIR\n   dnl *    endif\n   dnl * endif\n   dnl *\n   dnl * if [$1]_DIR still has no value\n   dnl *    if the macro was given a DIRECTORY-LIST argument\n   dnl *       for each directory in the list\n   dnl *          if the directory is valid\n   dnl *             assign the directory to [$1]_DIR\n   dnl *             break loop\n   dnl *          else\n   dnl *             continue loop\n   dnl *          endif\n   dnl *       end loop\n   dnl *       if [$1]_DIR still doesn't have a value\n   dnl *          casc_result=\"none\"\n   dnl *       else\n   dnl *          casc_result=$[$1]_DIR\n   dnl *       endif\n   dnl *    else\n   dnl *       casc_result=\"none\"\n   dnl *    endif\n   dnl * endif\n\n   if test \"$with_[$1]_dir\" != \"no\"; then\n\n      if test -d \"$with_[$1]_dir\"; then\n\n         ifelse([$3], , ,\n            if test -f $with_[$1]_dir/[$3]; then)\n\n               casc_result=\"$with_[$1]_dir\"\n               [$1]_DIR=\"$casc_result\"\n\n         ifelse([$3], , ,\n            fi)\n      fi\n\n      if test -z \"$casc_result\"; then\n\n         if test -d \"$casc_env_[$1]_dir\"; then\n\n            ifelse([$3], , ,\n               if test -f $casc_env_[$1]_dir/[$3]; then)\n\n                  casc_result=\"$casc_env_[$1]_dir\"\n                  [$1]_DIR=\"$casc_result\"\n\n            ifelse([$3], , ,\n               fi)\n         fi\n      fi\n\n\n\n      if test -z \"$casc_result\"; then\n         [$1]_DIR=\n   \n         ifelse([$2], ,\n            casc_result=\"none\" ,\n\n            for casc_dir in $2; do\n\n               if test -d \"$casc_dir\"; then\n\n                  ifelse([$3], , ,\n                     if test -f $casc_dir/[$3]; then)\n\n                        $1_DIR=$casc_dir\n\n                        break\n\n                  ifelse([$3], , ,\n                     fi)\n               fi\n            done\n\n            if test -z \"$[$1]_DIR\"; then\n               casc_result=\"none\"\n\n            else\n               casc_result=\"$[$1]_DIR\"\n            fi\n         )\n      fi\n   fi\n\n   dnl * $casc_result either is a valid value for [$1]_DIR or \"none\".\n   dnl * if none, then assign the original environmental value of\n   dnl * [$1]_DIR, whatever it may be, to casc_result and [$1]_DIR.  If\n   dnl * there was no environmental value, then $casc_result remains\n   dnl * \"none\" and [$1]_DIR is left empty.\n\n   if test \"$casc_result\" = \"none\"; then\n\n      if test -n \"$casc_env_[$1]_dir\"; then\n\n         casc_result=\"$casc_env_[$1]_dir\"\n         [$1]_DIR=\"$casc_result\"\n      fi\n   fi\n\n   AC_MSG_RESULT($casc_result)\n   AC_SUBST([$1]_DIR)\n])\n\n\ndnl smr_ARG_WITHLIB from FVWM by S. Robbins \ndnl Allow argument for optional libraries; wraps AC_ARG_WITH, to\ndnl provide a \"--with-foo-lib\" option in the configure script, where foo\ndnl is presumed to be a library name.  The argument given by the user\ndnl (i.e. \"bar\" in ./configure --with-foo-lib=bar) may be one of four \ndnl things:\ndnl     * boolean (no, yes or blank): whether to use library or not\ndnl     * file: assumed to be the name of the library\ndnl     * directory: assumed to *contain* the library\ndnl     * a quoted, space-separated list of linker flags needed to link\ndnl       with this library.  (To be used if this library requires\ndnl       linker flags other than the normal `-L' and `-l' flags.)\ndnl \ndnl The argument is sanity-checked.  If all is well, two variables are\ndnl set: \"with_foo\" (value is yes, no, or maybe), and \"foo_LIBFLAGS\" (value\ndnl is either blank, a file, -lfoo, '-L/some/dir -lfoo', or whatever \ndnl linker flags the user gives). The idea is: the first tells you whether\ndnl the library is to be used or not (or the user didn't specify one way\ndnl or the other) and the second to put on the command line for linking\ndnl with the library.\ndnl\ndnl Usage:\ndnl smr_ARG_WITHLIB(name, libname, description)\ndnl \ndnl name                name for --with argument (\"foo\" for libfoo)\ndnl libname             (optional) actual name of library,\ndnl                     if different from name\ndnl description         (optional) used to construct help string\ndnl \ndnl Changes:  Changed some identifier names.\ndnl           --with-foo-library is now --with-foo-lib\ndnl           foo_LIBS is now foo_LIBFLAGS\ndnl           Fourth posibility for argument to --with-foo-lib added\ndnl           Documentation above changed to reflect these changes\ndnl           Noah Elliott, October 1998\n\n\nAC_DEFUN([CASC_SMR_ARG_WITHLIB],\n[\n   smr_ARG_WITHLIB([$1],[$2],[$3])\n])dnl\n\nAC_DEFUN([smr_ARG_WITHLIB], [\n\nifelse($2, , smr_lib=[$1], smr_lib=[$2]) \n    \nAC_ARG_WITH([$1]-lib,\nifelse($3, ,\n[  --with-$1-lib[=PATH]       use $1 library], \n[  --with-$1-lib[=PATH]       use $1 library ($3)]),\n[\n    if test \"$withval\" = yes; then\n        with_[$1]=yes\n        [$1]_LIBFLAGS=\"-l${smr_lib}\"\n    elif test \"$withval\" = no; then\n        with_[$1]=no\n        [$1]_LIBFLAGS=\n    else\n        with_[$1]=yes\n        if test -f \"$withval\"; then\n            [$1]_LIBFLAGS=$withval\n        elif test -d \"$withval\"; then\n            [$1]_LIBFLAGS=\"-L$withval -l${smr_lib}\"\n        else\n            case $withval in\n            -*)\n               [$1]_LIBFLAGS=\"$withval\"\n            ;;\n            *)\n               AC_MSG_ERROR(\n                  [argument must be boolean, file, directory, or compiler flags]\n                           )\n            ;;\n            esac\n        fi\n    fi\n], [\n    with_[$1]=maybe\n    [$1]_LIBFLAGS=\"-l${smr_lib}\"\n])])\n\n    \ndnl smr_ARG_WITHINCLUDES from FVWM by S. Robbins\ndnl Check if the include files for a library are accessible, and\ndnl define the variable \"name_INCLUDE\" with the proper \"-I\" flag for\ndnl the compiler.  The user has a chance to specify the includes\ndnl location, using \"--with-foo-include\".\ndnl \ndnl This should be used *after* smr_ARG_WITHLIB *and* AC_CHECK_LIB are\ndnl successful.\ndnl \ndnl Usage:\ndnl smr_ARG_WITHINCLUDES(name, header, extra-flags)\ndnl \ndnl name                library name, MUST same as used with smr_ARG_WITHLIB\ndnl header              a header file required for using the lib\ndnl extra-flags         (optional) flags required when compiling the\ndnl                     header, typically more includes; for ex. X_CFLAGS\ndnl\ndnl Changes:  Changed some identifier names.\ndnl           --with-foo-includes is now --with-foo-include\ndnl           name_CFLAGS is now name_INCLUDE\ndnl           Documentation above changed to reflect these changes\ndnl           Noah Elliott, October 1998\n\nAC_DEFUN([CASC_SMR_ARG_WITHINCLUDES],\n[\n   smr_ARG_WITHINCLUDES([$1], [$2], [$3])\n])dnl\n\nAC_DEFUN([smr_ARG_WITHINCLUDES], [\n\nAC_ARG_WITH([$1]-include,\n[  --with-$1-include=DIR  set directory for $1 headers],\n[\n    if test -d \"$withval\"; then\n        [$1]_INCLUDE=\"-I${withval}\"\n    else\n        AC_MSG_ERROR(argument must be a directory)\n    fi])\n\ndnl This bit of logic comes from autoconf's AC_PROG_CC macro.  We need\ndnl to put the given include directory into CPPFLAGS temporarily, but\ndnl then restore CPPFLAGS to its old value.\ndnl \nsmr_test_CPPFLAGS=\"${CPPFLAGS+set}\"\nsmr_save_CPPFLAGS=\"$CPPFLAGS\"\nCPPFLAGS=\"$CPPFLAGS ${[$1]_CFLAGS}\"\n\n    ifelse($3, , , CPPFLAGS=\"$CPPFLAGS [$3]\")\n    AC_CHECK_HEADERS($2)\n   \nif test \"$smr_test_CPPFLAGS\" = set; then\n    CPPFLAGS=$smr_save_CPPFLAGS\nelse\n    unset CPPFLAGS\nfi\n])\n    \n        \ndnl smr_CHECK_LIB from FVWM by S. Robbins\ndnl Probe for an optional library.  This macro creates both\ndnl --with-foo-lib and --with-foo-include options for the configure\ndnl script.  If --with-foo-lib is *not* specified, the default is to\ndnl probe for the library, and use it if found.\ndnl\ndnl Usage:\ndnl smr_CHECK_LIB(name, libname, desc, func, header, x-libs, x-flags)\ndnl \ndnl name        name for --with options\ndnl libname     (optional) real name of library, if different from\ndnl             above\ndnl desc        (optional) short descr. of library, for help string\ndnl func        function of library, to probe for\ndnl header      (optional) header required for using library\ndnl x-libs      (optional) extra libraries, if needed to link with lib\ndnl x-flags     (optional) extra flags, if needed to include header files\ndnl\ndnl Changes:  identifier names and documentation modified to reflect\ndnl           changes to smr_ARG_WITHLIB and smr_ARG_WITHINCLUDES\ndnl           Noah Elliott, October 1998\n\nAC_DEFUN([CASC_SMR_CHECK_LIB],\n[\n   smr_CHECK_LIB([$1], [$2], [$3], [$4], [$5], [$6], [$7])\n])dnl\n\nAC_DEFUN([smr_CHECK_LIB],\n[   \nifelse($2, , smr_lib=[$1], smr_lib=[$2])\nifelse($5, , , smr_header=[$5])\nsmr_ARG_WITHLIB($1,$2,$3)\nif test \"$with_$1\" != no; then\n    AC_CHECK_LIB($smr_lib, $4,\n        smr_havelib=yes, smr_havelib=no,\n        ifelse($6, , ${$1_LIBFLAGS}, [${$1_LIBFLAGS} $6]))\n    if test \"$smr_havelib\" = yes -a \"$smr_header\" != \"\"; then\n        smr_ARG_WITHINCLUDES($1, $smr_header, $7)\n        smr_safe=`echo \"$smr_header\" | sed 'y%./+-%__p_%'`\n        if eval \"test \\\"`echo '$ac_cv_header_'$smr_safe`\\\" != yes\"; then\n            smr_havelib=no\n        fi\n    fi\n    if test \"$smr_havelib\" = yes; then\n        AC_MSG_RESULT(Using $1 library)\n    else\n        $1_LIBFLAGS=\n        $1_INCLUDE=\n        if test \"$with_$1\" = maybe; then\n            AC_MSG_RESULT(Not using $1 library)\n        else\n            AC_MSG_WARN(Requested $1 library not found!)\n        fi\n    fi\nfi])\n\n\ndnl **********************************************************************\ndnl * CASC_CONFIG_OUTPUT_LIST(DIR-LIST[, OUTPUT-FILE])\ndnl *\ndnl * The intent of this macro is to make configure handle the possibility\ndnl * that a portion of the directory tree of a project may not be\ndnl * present.  This will modify the argument list of AC_OUTPUT to contain\ndnl * only output file names for which corresponding input files exist.\ndnl * If you are not concerned about the possible absence of the necessary\ndnl * input (.in) files, it is better to not use this macro and to\ndnl * explicitly list all of the output files in a call to AC_OUTPUT.\ndnl * Also, If you wish to create a file Foo from a file with a name\ndnl * other than Foo.in, this macro will not work, and you must use\ndnl * AC_OUTPUT.\ndnl *\ndnl * This macro checks for the existence of the file OUTPUT-FILE.in in\ndnl * each directory specified in the whitespace-separated DIR-LIST.  \ndnl * (Directories should be specified by relative path from the directory \ndnl * containing configure.in.) If OUTPUT-FILE is not specified, the\ndnl * default is 'Makefile'.  For each directory that contains \ndnl * OUTPUT-FILE.in, the relative path of OUTPUT-FILE is added to the \ndnl * shell variable OUTPUT-FILE_list.  When AC_OUTPUT is called,\ndnl * '$OUTPUT-FILE_list' should be included in the argument list.  So if\ndnl * you have a directory tree and each subdirectory contains a \ndnl * Makefile.in, DIR-LIST should be a list of every subdirectory and\ndnl * OUTPUT-FILE can be omitted, because 'Makefile' is the default.  When\ndnl * configure runs, it will check for the existence of a Makefile.in in\ndnl * each directory in DIR-LIST, and if so, the relative path of each\ndnl * intended Makefile will be added to the variable Makefile_list.\ndnl *\ndnl * This macro can be called multiple times, if there are files other\ndnl * than Makefile.in with a .in suffix other that are intended to be \ndnl * processed by configure. \ndnl *\ndnl * Example\ndnl *     If directories dir1 and dir2 both contain a file named Foo.in, \ndnl *     and you wish to use configure to create a file named Foo in each\ndnl *     directory, then call \ndnl *     CASC_CONFIG_OUTPUT_LIST(dir1 dir2, Foo)\ndnl *     If you also called this macro for Makefile as described above,\ndnl *     you should call\ndnl *     AC_OUTPUT($Makefile_list $Foo_list)\ndnl *     at the end of configure.in .\ndnl *********************************************************************\n\n\nAC_DEFUN([CASC_CONFIG_OUTPUT_LIST],\n[\n   dnl * m_OUTPUT_LIST is a macro to store the name of the variable\n   dnl * which will contain the list of output files\n   define([m_OUTPUT_LIST], ifelse([$2], , Makefile_list, [$2_list]))\n\n   if test -z \"$srcdir\"; then\n      srcdir=.\n   fi\n\n   dnl * use \"Makefile\" if second argument not given\n   if test -n \"$2\"; then\n      casc_output_file=$2\n   else   \n      casc_output_file=Makefile\n   fi   \n      \n   dnl * Add a file to the output list if its \".in\" file exists.\n   for casc_dir in $1; do\n      if test -f $srcdir/$casc_dir/$casc_output_file.in; then\n         m_OUTPUT_LIST=\"$m_OUTPUT_LIST $casc_dir/$casc_output_file\"\n      fi\n   done\n])dnl\n\n\ndnl **********************************************************************\ndnl * CASC_GUESS_ARCH\ndnl * Guesses a one-word name for the current architecture, unless ARCH\ndnl * has been preset.  This is an alternative to the built-in macro\ndnl * AC_CANONICAL_HOST, which gives a three-word name.  Uses the utility\ndnl * 'tarch', which is a Bourne shell script that should be in the same  \ndnl * directory as the configure script.  If tarch is not present or if it\ndnl * fails, ARCH is set to the value, if any, of shell variable HOSTTYPE,\ndnl * otherwise ARCH is set to \"unknown\".\ndnl **********************************************************************\n\nAC_DEFUN([CASC_GUESS_ARCH],\n[\n   AC_MSG_CHECKING(the architecture)\n\n   dnl * $ARCH could already be set in the environment or earlier in configure\n   dnl * Use the preset value if it exists, otherwise go throug the procedure\n   if test -z \"$ARCH\"; then\n\n      dnl * configure searches for the tool \"tarch\".  It should be in the\n      dnl * same directory as configure.in, but a couple of other places\n      dnl * will be checked.  casc_tarch stores a relative path for \"tarch\".\n      casc_tarch_dir=\n      for casc_dir in $srcdir $srcdir/.. $srcdir/../.. $srcdir/config; do\n         if test -f $casc_dir/tarch; then\n            casc_tarch_dir=$casc_dir\n            casc_tarch=$casc_tarch_dir/tarch\n            break\n         fi\n      done\n\n      dnl * if tarch was not found or doesn't work, try using env variable\n      dnl * $HOSTTYPE\n      if test -z \"$casc_tarch_dir\"; then\n         AC_MSG_WARN(cannot find tarch, using \\$HOSTTYPE as the architecture)\n         ARCH=$HOSTTYPE\n      else\n         ARCH=\"`$casc_tarch`\"\n\n         if test -z \"$ARCH\" || test \"$ARCH\" = \"unknown\"; then\n            ARCH=$HOSTTYPE\n         fi\n      fi\n\n      dnl * if $ARCH is still empty, give it the value \"unknown\".\n      if test -z \"$ARCH\"; then\n         ARCH=unknown\n         AC_MSG_WARN(architecture is unknown)\n      else\n         AC_MSG_RESULT($ARCH)\n      fi    \n   else\n      AC_MSG_RESULT($ARCH)\n   fi\n\n   AC_SUBST(ARCH)\n\n])dnl\n\n\ndnl **********************************************************************\ndnl * CASC_SET_SUFFIX_RULES is not like the other macros in aclocal.m4\ndnl * because it does not run any kind of test on the system on which it\ndnl * is running.  All it does is create several variables which contain\ndnl * the text of some simple implicit suffix rules that can be\ndnl * substituted into Makefile.in.  The suffix rules that come from the\ndnl * macro all deal with compiling a source file into an object file.  If\ndnl * this macro is called in configure.in, then if `@CRULE@' is placed in\ndnl * Makefile.in, the following will appear in the generated Makefile:\ndnl *\ndnl * .c.o:\ndnl *         @echo \"Making (c) \" $@ \ndnl *         @${CC} -o $@ -c ${CFLAGS} $<\t\ndnl *\ndnl * The following is a list of the variables created by this macro and\ndnl * the corresponding suffixes of the files that each implicit rule \ndnl * deals with.\ndnl *\ndnl * CRULE       --   .c\ndnl * CXXRULE     --   .cxx\ndnl * CPPRULE     --   .cpp\ndnl * CCRULE      --   .cc\ndnl * CAPCRULE    --   .C\ndnl * F77RULE     --   .f\ndnl *\ndnl * There are four suffix rules for C++ files because of the different\ndnl * suffixes that can be used for C++.  Only use the one which\ndnl * corresponds to the suffix you use for your C++ files.\ndnl *\ndnl * The rules created by this macro require you to use the following\ndnl * conventions for Makefile variables:\ndnl *\ndnl * CC        = C compiler\ndnl * CXX       = C++ compiler\ndnl * F77       = Fortran 77 compiler\ndnl * CFLAGS    = C compiler flags\ndnl * CXXFLAGS  = C++ compiler flags\ndnl * FFLAGS    = Fortran 77 compiler flags\ndnl **********************************************************************\n\nAC_DEFUN([CASC_SET_SUFFIX_RULES],\n[\n   dnl * Things weren't working whenever \"$@\" showed up in the script, so\n   dnl * I made the symbol $at_sign to signify '@'\n   at_sign=@\n\n   dnl * All of the backslashes are used to handle the $'s and the\n   dnl * newlines which get passed through echo and sed.\n\n   CRULE=`echo \".c.o:\\\\\\\\\n\\t@echo \\\"Making (c) \\\" \\\\$$at_sign \\\\\\\\\n\\t@\\\\${CC} -o \\\\$$at_sign -c \\\\${CFLAGS} \\$<\"`\n\n   AC_SUBST(CRULE)\n\n   CXXRULE=`echo \".cxx.o:\\\\\\\\\n\\t@echo \\\"Making (c++) \\\" \\\\$$at_sign \\\\\\\\\n\\t@\\\\${CXX} -o \\\\$$at_sign -c \\\\${CXXFLAGS} \\$<\"`\n\n   AC_SUBST(CXXRULE)\n\n   CPPRULE=`echo \".cpp.o:\\\\\\\\\n\\t@echo \\\"Making (c++) \\\" \\\\$$at_sign \\\\\\\\\n\\t@\\\\${CXX} -o \\\\$$at_sign -c \\\\${CXXFLAGS} \\$<\"`\n\n   AC_SUBST(CPPRULE)\n\n   CCRULE=`echo \".cc.o:\\\\\\\\\n\\t@echo \\\"Making (c++) \\\" \\\\$$at_sign \\\\\\\\\n\\t@\\\\${CXX} -o \\\\$$at_sign -c \\\\${CXXFLAGS} \\$<\"`\n\n   AC_SUBST(CCRULE)\n\n   CAPCRULE=`echo \".C.o:\\\\\\\\\n\\t@echo \\\"Making (c++) \\\" \\\\$$at_sign \\\\\\\\\n\\t@\\\\${CXX} -o \\\\$$at_sign -c \\\\${CXXFLAGS} \\$<\"`\n\n   AC_SUBST(CAPCRULE)\n\n   F77RULE=`echo \".f.o:\\\\\\\\\n\\t@echo \\\"Making (f) \\\" \\\\$$at_sign \\\\\\\\\n\\t@\\\\${F77} -o \\\\$$at_sign -c \\\\${FFLAGS} \\$<\"`\n\n   AC_SUBST(F77RULE)\n\n])\n\ndnl Macro to save compiler state flags for invoking dnl compiler tests\ndnl NOTE that this is NOT currently a stack so can dnl only be called\ndnl in push/pop order.  push push pop pop dnl will fail\nAC_DEFUN([CASC_PUSH_COMPILER_STATE],[\n   casc_save_LIBS=$LIBS\n   casc_save_CXXFLAGS=$CXXFLAGS\n])\n\ndnl Macro to restore compiler state flags for invoking\ndnl compiler tests\nAC_DEFUN([CASC_POP_COMPILER_STATE],[\n   LIBS=$casc_save_LIBS\n   unset casc_save_LIBS\n   CXXFLAGS=$casc_save_CXXFLAGS\n   unset casc_save_CXXFLAGS\n])\n\ndnl ********************************************************************\ndnl * CASC_PROG_MPICC searches the PATH for an available MPI C compiler\ndnl * wraparound.  It assigns the name to MPICC.\ndnl ********************************************************************\n\nAC_DEFUN([CASC_PROG_MPICC],\n[\n   AC_CHECK_PROGS(MPICC, mpcc mpicc tmcc hcc)\n   test -z \"$MPICC\" && AC_MSG_ERROR([no acceptable mpicc found in \\$PATH])\n])dnl\n\n\ndnl ********************************************************************\ndnl * CASC_PROG_MPICXX searches the PATH for an available MPI C++\ndnl * compiler wraparound.  It assigns the name to MPICXX.\ndnl ********************************************************************\n\nAC_DEFUN([CASC_PROG_MPICXX],\n[\n   AC_CHECK_PROGS(MPICXX, mpKCC mpCC mpig++ mpiCC hcp)\n   test -z \"$MPICXX\" && AC_MSG_ERROR([no acceptable mpic++ found in \\$PATH])\n])dnl\n\n\ndnl **********************************************************************\ndnl * CASC_PROG_MPIF77 searches the PATH for an available MPI Fortran 77\ndnl * compiler wraparound.  It assigns the name to MPIF77.\ndnl **********************************************************************\n\nAC_DEFUN([CASC_PROG_MPIF77],\n[\n   AC_CHECK_PROGS(MPIF77, mpf77 mpxlf mpif77 mpixlf tmf77 hf77)\n   test -z \"$MPIF77\" && AC_MSG_ERROR([no acceptable mpif77 found in \\$PATH])\n])dnl\n\n\ndnl ***********************************************************************\ndnl * CASC_CHECK_MPIF77_PP checks whether the preprocessor needs to\ndnl * be called before calling the compiler for Fortran files with\ndnl * preprocessor directives and MPI function calls.  If the preprocessor\ndnl * is necessary, MPIF77NEEDSPP is set to \"yes\", otherwise it is set to\ndnl * \"no\"\ndnl ***********************************************************************\n\nAC_DEFUN([CASC_CHECK_MPIF77_PP],\n[\n   AC_REQUIRE([CASC_PROG_MPIF77])\n\n   rm -f testppmp.o\n\n   AC_MSG_CHECKING(whether $FPP needs to be called before $MPIF77)\n\n   # This follows the same procedur as CASC_CHECK_F77_PP, except it tests\n   # $MPIF77 using a test program that includes MPI functions.\n\n   cat > testppmp.F <<EOF\n#define FOO 3\n\tprogram testppmp\n\tinclude 'mpif.h'\n\tinteger rank,size,mpierr,sum\n\tcall MPI_INIT(mpierr)\n\tcall MPI_COMM_SIZE(MPI_COMM_WORLD,size,mpierr)\n\tcall MPI_COMM_RANK(MPI_COMM_WORLD,rank,mpierr)\n#ifdef FORTRAN_NO_UNDERSCORE\n        sum = rank + size\n#else\n        sum = rank + rank\n#endif\n        call MPI_FINALIZE(mpierr)\n        end\nEOF\n\n   $MPIF77 -DBAR -c testppmp.F\n   if test -f testppmp.o; then\n      MPIF77NEEDSPP=no\n   else\n      MPIF77NEEDSPP=yes\n   fi\n\n   echo $MPIF77NEEDSPP\n   rm -f testppmp.o testppmp.F\n   AC_SUBST(MPIF77NEEDSPP)\n])dnl\n\n\ndnl *********************************************************************\ndnl * CASC_SET_MPI sets up the needed MPI library and directory flags.\ndnl * The location of the file mpi.h is put into the variable MPIINCLUDE\ndnl * as a -I flag.  The -l flags that specify the needed libraries and\ndnl * the -L flags that specify the paths of those libraries are placed in\ndnl * the variables MPILIBS and MPILIBDIRS, respectively.  To set the MPI\ndnl * libraries and directories manually, use the --with-mpi-include,\ndnl * --with-mpi-libs, and --with-mpi-lib-dirs command-line options when\ndnl * invoking configure.  Only one directory should be specified with\ndnl * --with-mpi-include, while any number of directories can be specified\ndnl * by --with-mpi-lib-dirs.  Any number of libraries can be specified\ndnl * with --with-mpi-libs, and the libraries must be referred to by their\ndnl * base names, so libmpi.a is just mpi.  It is adviseable to use all\ndnl * three --with flags whenever one is used, because it is likely that\ndnl * when one is chosen it will mess up the automatic choices for the\ndnl * other two.  If the architecture is unknown, or if the needed MPI\ndnl * settings for the current architecture are not known, then the naive\ndnl * settings of MPILIBS=\"-lmpi\" and MPILIBDIRS=\"-L/usr/local/mpi/lib\"\ndnl * are tested, and if they exist they are used, otherwise the MPILIB*\ndnl * variables are left blank.  In the case of rs6000, the variable\ndnl * MPIFLAGS is also set.\ndnl **********************************************************************\n\nAC_DEFUN([CASC_SET_MPI],\n        [\n\n   dnl * If called from within CASC_FIND_MPI, then the configure-line\n   dnl * options will already exist.  This ifdef creates them otherwise.\n   ifdef([AC_PROVIDE_CASC_FIND_MPI], ,\n      [AC_ARG_WITH(mpi-include, [  --with-mpi-include=DIR  mpi.h is in DIR],\n                  casc_mpi_include_dir=$withval)\n\n      AC_ARG_WITH(mpi-libs,\n[  --with-mpi-libs=LIBS    LIBS is space-separated list of library names\n                          needed for MPI, e.g. \\\"nsl socket mpi\\\"],\n                  casc_mpi_libs=$withval)\n\n      AC_ARG_WITH(mpi-lib-dirs,\n[  --with-mpi-lib-dirs=DIRS\n                          DIRS is space-separated list of directories\n                          containing the libraries specified by\n                          \\`--with-mpi-libs', e.g \\\"/usr/lib /usr/local/mpi/lib\\\"],\n                  casc_mpi_lib_dirs=$withval)]\n   )\n\n   if test -z \"$casc_mpi_libs\"; then\n      AC_REQUIRE([CASC_GUESS_ARCH])\n\n      dnl * Set everything to known values\n      case $ARCH in\n\n         sun4 | solaris)\n            case $F77 in\n               *g77)\n                   if test -z \"$casc_mpi_include_dir\"; then\n                      casc_mpi_include_dir=/usr/local/mpi/lam/h\n                   fi\n\n                   if test -z \"$casc_mpi_lib_dirs\"; then\n                      casc_mpi_lib_dirs=\"/usr/local/mpi/lam/lib\"\n                   fi\n\n                   casc_mpi_libs=\"socket mpi trillium args tstdio t\";;\n\n               *)\n\n                  if test -z \"$casc_mpi_include_dir\"; then\n                     MPIINCLUDE=\"-I/usr/local/mpi/mpich/include \\\n                                 -I/usr/local/mpi/mpich/lib/solaris/ch_p4\"\n                  fi\n\n                  if test -z \"$casc_mpi_lib_dirs\"; then\n                     casc_mpi_lib_dirs=\"/usr/local/mpi/mpich/lib/solaris/ch_p4 \\\n                                       /usr/lib\"\n                  fi\n\n               casc_mpi_libs=\"nsl socket mpi\";;\n               esac\n\n            if test -z \"$MPIINCLUDE\"; then\n               AC_CHECK_HEADER($casc_mpi_include_dir/mpi.h,\n                               MPIINCLUDE=\"-I$casc_mpi_include_dir\")\n            fi\n         ;;\n\n         alpha)\n            if test -z \"$casc_mpi_include_dir\"; then\n               casc_mpi_include_dir=/usr/local/mpi/include\n            fi\n            AC_CHECK_HEADER($casc_mpi_include_dir/mpi.h,\n                               MPIINCLUDE=\"-I$casc_mpi_include_dir\")\n\n            if test -z \"$casc_mpi_lib_dirs\"; then\n               casc_mpi_lib_dirs=\"/usr/local/mpi/lib/alpha/ch_shmem \\\n                                  /usr/local/lib\"\n            fi\n\n            casc_mpi_libs=\"mpich gs\";;\n\n         rs6000)\n\ndnl            if test -z \"$casc_mpi_include_dir\"; then\ndnl               casc_mpi_include_dir=/usr/lpp/ppe.poe/include\ndnl            fi\ndnl            AC_CHECK_HEADER($casc_mpi_include_dir/mpi.h,\ndnl                               MPIINCLUDE=\"-I$casc_mpi_include_dir\")\n\ndnl            if test -z \"$casc_mpi_lib_dirs\"; then\ndnl               casc_mpi_lib_dirs=/usr/lpp/ppe.poe/lib\ndnl            fi\n\n            casc_mpi_libs=mpi\n\n            MPIFLAGS=\"-binitfini:poe_remote_main\";;\n\n         IRIX64 | iris4d)\n            if test -z \"$casc_mpi_include_dir\"; then\n               casc_mpi_include_dir=/usr/local/mpi/include\n            fi\n            AC_CHECK_HEADER($casc_mpi_include_dir/mpi.h,\n                               MPIINCLUDE=\"-I$casc_mpi_include_dir\")\n\n            if test -z \"$casc_mpi_lib_dirs\"; then\n               casc_mpi_lib_dirs=/usr/local/mpi/lib/IRIX64/ch_p4\n            fi\n\n            casc_mpi_libs=mpi;;\n\n         *)\nAC_MSG_WARN([trying naive MPI settings - can use --with flags to change])\n            if test -z \"$casc_mpi_include_dir\"; then\n               casc_mpi_include_dir=/usr/local/mpi/include\n            fi\n            AC_CHECK_HEADER($casc_mpi_include_dir/mpi.h,\n                               MPIINCLUDE=\"-I$casc_mpi_include_dir\")\n\n            if test -z \"$casc_mpi_lib_dirs\"; then\n               casc_mpi_lib_dirs=/usr/local/mpi/lib\n            fi\n            casc_mpi_libs=mpi ;;\n      esac\n\n      for casc_lib in $casc_mpi_libs; do\n         CASC_ADD_LIB($casc_lib, main, $casc_mpi_lib_dirs, MPI)\n      done\n\n   else\n      if test -n \"$casc_mpi_include_dir\"; then\n         MPIINCLUDE=\"-I$casc_mpi_include_dir\"\n      else\n         MPIINCLUDE=\n      fi\n\n      if test -n \"$casc_mpi_lib_dirs\"; then\n         for casc_lib_dir in $casc_mpi_lib_dirs; do\n            MPILIBDIRS=\"-L$casc_lib_dir $MPILIBDIRS\"\n         done\n      else\n         MPILIBDIRS=\n      fi\n\n      for casc_lib in $casc_mpi_libs; do\n         MPILIBS=\"$MPILIBS -l$casc_lib\"\n      done\n   fi\n])dnl\n\n\ndnl ********************************************************************\ndnl * CASC_FIND_MPI will determine the libraries, directories, and other\ndnl * flags needed to compile and link programs with MPI function calls.\ndnl * This macro runs tests on the script found by the CASC_PROG_MPICC\ndnl * macro.  If there is no such mpicc-type script in the PATH and\ndnl * MPICC is not set manually, then this macro will not work.\ndnl *\ndnl * One may question why these settings would need to be determined if\ndnl * there already is mpicc available, and that is a valid question.  I\ndnl * can think of a couple of reasons one may want to use these settings\ndnl * rather than using mpicc directly.  First, these settings allow you\ndnl * to choose the C compiler you wish to use rather than using whatever\ndnl * compiler is written into mpicc.  Also, the settings determined by\ndnl * this macro should also work with C++ and Fortran compilers, so you\ndnl * won't need to have mpiCC and mpif77 alongside mpicc.  This is\ndnl * especially helpful on systems that don't have mpiCC.  The advantage\ndnl * of this macro over CASC_SET_MPI is that this one doesn't require\ndnl * a test of the machine type and thus will hopefully work on unknown\ndnl * architectures.  The main disadvantage is that it relies on mpicc.\ndnl *\ndnl * --with-mpi-include, --with-mpi-libs, and --with-mpi-lib-dirs can be\ndnl * used to manually override the automatic test, just as with\ndnl * CASC_SET_MPI.  If any one of these three options are used, the\ndnl * automatic test will not be run, so it is best to call all three\ndnl * whenever one is called.  In addition, the option --with-mpi-flags is\ndnl * available here to set any other flags that may be needed, but it\ndnl * does not override the automatic test.  Flags set by --with-mpi-flags\ndnl * will be added to the variable MPIFLAGS.  This way, if the macro, for\ndnl * whatever reason, leaves off a necessary flag, the flag can be added\ndnl * to MPIFLAGS without eliminating anything else.  The other variables\ndnl * set are MPIINCLUDE, MPILIBS, and MPILIBDIRS, just as in\ndnl * CASC_SET_MPI.  This macro also incorporates CASC_SET_MPI as a backup\ndnl * plan, where if there is no mpicc, it will use the settings\ndnl * determined by architecture name in CASC_SET_MPI\ndnl ********************************************************************\n\nAC_DEFUN([CASC_FIND_MPI],\n[\n\n   casc_find_mpi_cache_used=yes\n\n   AC_CACHE_VAL(casc_cv_mpi_include, casc_find_mpi_cache_used=no)\n   AC_CACHE_VAL(casc_cv_mpi_libs, casc_find_mpi_cache_used=no)\n   AC_CACHE_VAL(casc_cv_mpi_lib_dirs, casc_find_mpi_cache_used=no)\n   AC_CACHE_VAL(casc_cv_mpi_flags, casc_find_mpi_cache_used=no)\n\n   if test \"$casc_find_mpi_cache_used\" = \"yes\"; then\n      AC_MSG_CHECKING(for location of mpi.h)\n      MPIINCLUDE=$casc_cv_mpi_include\n      AC_MSG_RESULT(\"\\(cached\\) $MPIINCLUDE\")\n\n      AC_MSG_CHECKING(for MPI library directories)\n      MPILIBDIRS=$casc_cv_mpi_lib_dirs\n      AC_MSG_RESULT(\"\\(cached\\) $MPILIBDIRS\")\n\n      AC_MSG_CHECKING(for MPI libraries)\n      MPILIBS=$casc_cv_mpi_libs\n      AC_MSG_RESULT(\"\\(cached\\) $MPILIBS\")\n\n      AC_MSG_CHECKING(for other MPI-related flags)\n      MPIFLAGS=$casc_cv_mpi_flags\n      AC_MSG_RESULT(\"\\(cached\\) $MPIFLAGS\")\n   else\n\n\n      dnl * Set up user options.  If user uses any of the fist three options,\n      dnl * then automatic tests are not run.\n\n      casc_user_chose_mpi=no\n      AC_ARG_WITH(mpi-include, [  --with-mpi-include=DIR  mpi.h is in DIR],\n                  for mpi_dir in $withval; do\n                     MPIINCLUDE=\"$MPIINCLUDE -I$withval\"\n                  done; casc_user_chose_mpi=yes)\n\n      AC_ARG_WITH(mpi-libs,\n[  --with-mpi-libs=LIBS    LIBS is space-separated list of library names\n                          needed for MPI, e.g. \\\"nsl socket mpi\\\"],\n                  for mpi_lib in $withval; do\n                     MPILIBS=\"$MPILIBS -l$mpi_lib\"\n                  done; casc_user_chose_mpi=yes)\n\n\n      AC_ARG_WITH(mpi-lib-dirs,\n[  --with-mpi-lib-dirs=DIRS\n                          DIRS is space-separated list of directories\n                          containing the libraries specified by\n                          \\`--with-mpi-libs', e.g \\\"/usr/lib /usr/local/mpi/lib\\\"],\n                  for mpi_lib_dir in $withval; do\n                     MPILIBDIRS=\"-L$mpi_lib_dir $MPILIBDIRS\"\n                  done; casc_user_chose_mpi=yes)\n\n      dnl * --with-mpi-flags only adds to automatic selections,\n      dnl * does not override\n\n      AC_ARG_WITH(mpi-flags,\n[  --with-mpi-flags=FLAGS  FLAGS is space-separated list of whatever flags other\n                          than -l and -L are needed to link with mpi libraries],\n                          MPIFLAGS=$withval)\n\n\n      if test \"$casc_user_chose_mpi\" = \"no\"; then\n\n      dnl * Find an MPICC.  If there is none, call CASC_SET_MPI to choose MPI\n      dnl * settings based on architecture name.  If CASC_SET_MPI fails,\n      dnl * print warning message.  Manual MPI settings must be used.\n\n         AC_ARG_WITH(MPICC,\n[  --with-MPICC=ARG        ARG is mpicc or similar MPI C compiling tool],\n            MPICC=$withval,\n            [AC_CHECK_PROGS(MPICC, mpcc mpicc tmcc hcc)])\n\n         if test -z \"$MPICC\"; then\n            AC_MSG_WARN([no acceptable mpicc found in \\$PATH])\n            CASC_SET_MPI\n            if test -z \"$MPILIBS\"; then\n             AC_MSG_WARN([MPI not found - must set manually using --with flags])\n            fi\n\n         dnl * When $MPICC is there, run the automatic test\n         dnl * here begins the hairy stuff\n\n         else\n\n            dnl changequote(, )dnl\n\n            dnl * Create a minimal MPI program.  It will be compiled using\n            dnl * $MPICC with verbose output.\n            cat > mpconftest.c << EOF\n#include \"mpi.h\"\n\nmain(int argc, char **argv)\n{\n   int rank, size;\n   MPI_Init(&argc, &argv);\n   MPI_Comm_size(MPI_COMM_WORLD, &size);\n   MPI_Comm_rank(MPI_COMM_WORLD, &rank);\n   MPI_Finalize();\n   return 0;\n}\nEOF\n\n            casc_mplibs=\n            casc_mplibdirs=\n            casc_flags=\n            casc_lmpi_exists=no\n\n            dnl * These are various ways to produce verbose output from $MPICC\n            dnl * All of their outputs are stuffed into variable\n            dnl * $casc_mpoutput\n\n            for casc_command in \"$MPICC -show\"\\\n                                \"$MPICC -v\"\\\n                                \"$MPICC -#\"\\\n                                \"$MPICC\"; do\n\n               casc_this_output=`$casc_command mpconftest.c -o mpconftest 2>&1`\n\n               dnl * If $MPICC uses xlc, then commas must be removed from output\n               xlc_p=`echo $casc_this_output | grep xlcentry`\n               if test -n \"$xlc_p\"; then\n                  casc_this_output=`echo $casc_this_output | sed 's/,/ /g'`\n               fi\n\n               dnl * Turn on flag once -lmpi is found in output\n               lmpi_p=`echo $casc_this_output | grep \"\\-lmpi\"`\n               if test -n \"$lmpi_p\"; then\n                  casc_lmpi_exists=yes\n               fi\n\n               casc_mpoutput=\"$casc_mpoutput $casc_this_output\"\n               casc_this_output=\n\n            done\n\n            rm -rf mpconftest*\n\n            dnl * little test to identify $CC as IBM's xlc\n            echo \"main() {}\" > cc_conftest.c\n            cc_output=`${CC-cc} -v -o cc_conftest cc_conftest.c 2>&1`\n            xlc_p=`echo $cc_output | grep xlcentry`\n            if test -n \"$xlc_p\"; then\n               casc_compiler_is_xlc=yes\n            fi\n            rm -rf cc_conftest*\n\n            dnl * $MPICC might not produce '-lmpi', but we still need it.\n            dnl * Add -lmpi to $casc_mplibs if it was never found\n            if test \"$casc_lmpi_exists\" = \"no\"; then\n               casc_mplibs=\"-lmpi\"\n            else\n               casc_mplibs=\n            fi\n\n            casc_want_arg=\n\n            dnl * Loop through every word in output to find possible flags.\n            dnl * If the word is the absolute path of a library, it is added\n            dnl * to $casc_flags.  Any \"-llib\", \"-L/dir\", \"-R/dir\" and\n            dnl * \"-I/dir\" is kept.  If '-l', '-L', '-R', '-I', '-u', or '-Y'\n            dnl * appears alone, then the next word is checked.  If the next\n            dnl * word is another flag beginning with '-', then the first\n            dnl * word is discarded.  If the next word is anything else, then\n            dnl * the two words are coupled in the $casc_arg variable.\n            dnl * \"-binitfini:poe_remote_main\" is a flag needed especially\n            dnl * for IBM MPI, and it is always kept if it is found.\n            dnl * Any other word is discarded.  Also, after a word is found\n            dnl * and kept once, it is discarded if it appears again\n\n            for casc_arg in $casc_mpoutput; do\n\n               casc_old_want_arg=$casc_want_arg\n               casc_want_arg=\n\n               if test -n \"$casc_old_want_arg\"; then\n                  case \"$casc_arg\" in\n                  [-*)]\n                     casc_old_want_arg=\n                  ;;\n                  esac\n               fi\n\n               case \"$casc_old_want_arg\" in\n               ['')]\n                  case $casc_arg in\n                  [/*.a)]\n                     exists=false\n                     for f in $casc_flags; do\n                        if test x$casc_arg = x$f; then\n                           exists=true\n                        fi\n                     done\n                     if $exists; then\n                        casc_arg=\n                     else\n                        casc_flags=\"$casc_flags $casc_arg\"\n                     fi\n                  ;;\n                  [-binitfini:poe_remote_main)]\n                     exists=false\n                     for f in $casc_flags; do\n                        if test x$casc_arg = x$f; then\n                           exists=true\n                        fi\n                     done\n                     if $exists; then\n                        casc_arg=\n                     else\n                        casc_flags=\"$casc_flags $casc_arg\"\n                     fi\n                  ;;\n                  [-lang*)]\n                     casc_arg=\n                  ;;\n                  [-[lLR])]\n                     casc_want_arg=$casc_arg\n                     casc_arg=\n                  ;;\n                  [-[lLR]*)]\n                     exists=false\n                     for f in $casc_flags; do\n                        if test x$casc_arg = x$f; then\n                           exists=true\n                        fi\n                     done\n                     if $exists; then\n                        casc_arg=\n                     else\n                       casc_flags=\"$casc_flags $casc_arg\"\n                     fi\n                  ;;\n                 [-u)]\n                     casc_want_arg=$casc_arg\n                     casc_arg=\n                  ;;\n                  [-Y)]\n                     casc_want_arg=$casc_arg\n                     casc_arg=\n                  ;;\n                  [-I)]\n                     casc_want_arg=$casc_arg\n                     casc_arg=\n                  ;;\n                  [-I*)]\n                     exists=false\n                     for f in $casc_flags; do\n                        if test x$casc_arg = x$f; then\n                           exists=true\n                        fi\n                     done\n                     if $exists; then\n                        casc_arg=\n                     else\n                        casc_flags=\"$casc_flags $casc_arg\"\n                     fi\n                  ;;\n                  [*)]\n                     casc_arg=\n                  ;;\n                  esac\n\n               ;;\n               [-[lLRI])]\n                  casc_arg=\"casc_old_want_arg $casc_arg\"\n               ;;\n               [-u)]\n                  casc_arg=\"-u $casc_arg\"\n               ;;\n               [-Y)]\n                  casc_arg=`echo $casc_arg | sed -e 's%^P,%%'`\n                  SAVE_IFS=$IFS\n                  IFS=:\n                  casc_list=\n                  for casc_elt in $casc_arg; do\n                     casc_list=\"$casc_list -L$casc_elt\"\n                  done\n                  IFS=$SAVE_IFS\n                  casc_arg=\"$casc_list\"\n               ;;\n               esac\n\n               dnl * Still inside the big for loop, we separate each flag\n               dnl * into includes, libdirs, libs, flags\n               if test -n \"$casc_arg\"; then\n                  case $casc_arg in\n                  [-I*)]\n\n                     dnl * if the directory given in this flag contains mpi.h\n                     dnl * then the flag is assigned to $MPIINCLUDE\n                     if test -z \"$MPIINCLUDE\"; then\n                        casc_cppflags=\"$casc_cppflags $casc_arg\"\n                        casc_include_dir=`echo \"$casc_arg\" | sed 's/-I//g'`\n\n                        SAVE_CPPFLAGS=\"$CPPFLAGS\"\n                        CPPFLAGS=\"$casc_cppflags\"\n                        dnl changequote([, ])dnl\n\n                        unset ac_cv_header_mpi_h\n                        AC_CHECK_HEADER(mpi.h,\n                                        MPIINCLUDE=\"$casc_cppflags\")\n\n                        dnl changequote(, )dnl\n                        CPPFLAGS=\"$SAVE_CPPFLAGS\"\n\n                     else\n                        casc_arg=\n                     fi\n                  ;;\n                  [-[LR]*)]\n\n                     dnl * These are the lib directory flags\n                     casc_mplibdirs=\"$casc_mplibdirs $casc_arg\"\n                  ;;\n                  [-l* | /*)]\n\n                     dnl * These are the libraries\n                     casc_mplibs=\"$casc_mplibs $casc_arg\"\n                  ;;\n                  [-binitfini:poe_remote_main)]\n                     if test \"$casc_compiler_is_xlc\" = \"yes\"; then\n                        casc_mpflags=\"$casc_mpflags $casc_arg\"\n                     fi\n                  ;;\n                  [*)]\n                     dnl * any other flag that has been kept goes here\n                     casc_mpflags=\"$casc_mpflags $casc_arg\"\n                  ;;\n                  esac\n\n                  dnl * Upcoming test needs $LIBS to contain the flags\n                  dnl * we've found\n                  LIBS_SAVE=$LIBS\n                  LIBS=\"$MPIINCLUDE $casc_mpflags $casc_mplibdirs $casc_mplibs\"\n\n                  if test -n \"`echo $LIBS | grep '\\-R/'`\"; then\n                     LIBS=`echo $LIBS | sed 's/-R\\//-R \\//'`\n                  fi\n\n                  dnl changequote([, ])dnl\n\n\n                  dnl * Test to see if flags found up to this point are\n                  dnl * sufficient to compile and link test program.  If not,\n                  dnl * the loop keeps going to the next word\n                  AC_LANG_PUSH(C)\n                  AC_TRY_LINK(\ndnl                     ifelse(AC_LANG, [C++],\n\ndnl [#ifdef __cplusplus\ndnl extern \"C\"\ndnl #endif\ndnl ])dnl\n[#include \"mpi.h\"\n], [int rank, size;\n   int argc;\n   char **argv;\n   MPI_Init(&argc, &argv);\n   MPI_Comm_size(MPI_COMM_WORLD, &size);\n   MPI_Comm_rank(MPI_COMM_WORLD, &rank);\n   MPI_Finalize();\n],\n                     casc_result=yes)\n                  AC_LANG_POP(C)\n                  LIBS=$LIBS_SAVE\n\n                  if test \"$casc_result\" = yes; then\n                     casc_result=\n                     break\n                  fi\n               fi\n            done\n\n            dnl * After loop is done, set variables to be substituted\n            MPILIBS=$casc_mplibs\n            MPILIBDIRS=$casc_mplibdirs\n            MPIFLAGS=\"$MPIFLAGS $casc_mpflags\"\n\n            dnl * IBM MPI uses /usr/lpp/ppe.poe/libc.a instead of /lib/libc.a\n            dnl * so we need to make sure that -L/lib is not part of the\n            dnl * linking line when we use IBM MPI.  This only appears in\n            dnl * configure when CASC_FIND_MPI is called first.\n\t    dnl            ifdef([AC_PROVIDE_CASC_FIND_F77LIBS],\n            dnl               if test -n \"`echo $F77LIBFLAGS | grep '\\-L/lib '`\"; then\n            dnl                  if test -n \"`echo $F77LIBFLAGS | grep xlf`\"; then\n            dnl                     F77LIBFLAGS=`echo $F77LIBFLAGS | sed 's/-L\\/lib //g'`\n            dnl                  fi\n            dnl               fi\n            dnl            )\n\n            if test -n \"`echo $MPILIBS | grep pmpich`\" &&\n               test -z \"`echo $MPILIBS | grep pthread`\"; then\n                  LIBS_SAVE=$LIBS\n                  LIBS=\"$MPIINCLUDE $MPIFLAGS $MPILIBDIRS $MPILIBS -lpthread\"\n                  AC_LANG_PUSH(C)\n                  AC_TRY_LINK(\ndnl                     ifelse(AC_LANG, [C++],\n\ndnl [#ifdef __cplusplus\ndnl extern \"C\"\ndnl #endif\ndnl ])dnl\n[#include \"mpi.h\"\n], [int rank, size;\n   int argc;\n   char **argv;\n   MPI_Init(&argc, &argv);\n   MPI_Comm_size(MPI_COMM_WORLD, &size);\n   MPI_Comm_rank(MPI_COMM_WORLD, &rank);\n   MPI_Finalize();\n],\n                     MPILIBS=\"$MPILIBS -lpthread\")\n                  AC_LANG_POP(C)\n                  LIBS=$LIBS_SAVE\n            fi\n\n            AC_MSG_CHECKING(for MPI include directories)\n            AC_MSG_RESULT($MPIINCLUDE)\n            AC_MSG_CHECKING(for MPI library directories)\n            AC_MSG_RESULT($MPILIBDIRS)\n            AC_MSG_CHECKING(for MPI libraries)\n            AC_MSG_RESULT($MPILIBS)\n            AC_MSG_CHECKING(for other MPI-related flags)\n            AC_MSG_RESULT($MPIFLAGS)\n         fi\n      fi\n\n      AC_CACHE_VAL(casc_cv_mpi_include, casc_cv_mpi_include=$MPIINCLUDE)\n      AC_CACHE_VAL(casc_cv_mpi_lib_dirs, casc_cv_mpi_lib_dirs=$MPILIBDIRS)\n      AC_CACHE_VAL(casc_cv_mpi_libs, casc_cv_mpi_libs=$MPILIBS)\n      AC_CACHE_VAL(casc_cv_mpi_flags, casc_cv_mpi_flags=$MPIFLAGS)\n   fi\n\n   AC_SUBST(MPIINCLUDE)\n   AC_SUBST(MPILIBDIRS)\n   AC_SUBST(MPILIBS)\n   AC_SUBST(MPIFLAGS)\n\n])dnl\n\ndnl ********************************************************************\ndnl * CASC_FIND_MPI_ALPHA is a special case of CASC_FIND_MPI for the\ndnl * compass cluster.  The original CASC_FIND_MPI looks for existence\ndnl * of mpCC and mpiCC.  If the former is found it uses native (proprietary)\ndnl * mpi and if the latter is found, it uses mpich.  The DECs are a\ndnl * special case because mpCC does not exist and mpiCC does, but we want\ndnl * to use the native version by default.  Therefore, the original macro\ndnl * did not work for this case so I added this one to deal with it.\ndnl * AMW 9/00\ndnl ********************************************************************\n\nAC_DEFUN([CASC_FIND_MPI_ALPHA],\n[\n\n   casc_find_mpi_cache_used=yes\n\n   AC_CACHE_VAL(casc_cv_mpi_include, casc_find_mpi_cache_used=no)\n   AC_CACHE_VAL(casc_cv_mpi_libs, casc_find_mpi_cache_used=no)\n   AC_CACHE_VAL(casc_cv_mpi_lib_dirs, casc_find_mpi_cache_used=no)\n   AC_CACHE_VAL(casc_cv_mpi_flags, casc_find_mpi_cache_used=no)\n\n   if test \"$casc_find_mpi_cache_used\" = \"yes\"; then\n      AC_MSG_CHECKING(for location of mpi.h)\n      MPIINCLUDE=$casc_cv_mpi_include\n      AC_MSG_RESULT(\"\\(cached\\) $MPIINCLUDE\")\n\n      AC_MSG_CHECKING(for MPI library directories)\n      MPILIBDIRS=$casc_cv_mpi_lib_dirs\n      AC_MSG_RESULT(\"\\(cached\\) $MPILIBDIRS\")\n\n      AC_MSG_CHECKING(for MPI libraries)\n      MPILIBS=$casc_cv_mpi_libs\n      AC_MSG_RESULT(\"\\(cached\\) $MPILIBS\")\n\n      AC_MSG_CHECKING(for other MPI-related flags)\n      MPIFLAGS=$casc_cv_mpi_flags\n      AC_MSG_RESULT(\"\\(cached\\) $MPIFLAGS\")\n   else\n\n\n      dnl * Set up user options.  If user uses any of the fist three options,\n      dnl * then automatic tests are not run.\n\n      casc_user_chose_mpi=no\n      AC_ARG_WITH(mpi-include, [  --with-mpi-include=DIR  mpi.h is in DIR],\n                  for mpi_dir in $withval; do\n                     MPIINCLUDE=\"$MPIINCLUDE -I$withval\"\n                  done; casc_user_chose_mpi=yes)\n\n      AC_ARG_WITH(mpi-libs,\n[  --with-mpi-libs=LIBS    LIBS is space-separated list of library names\n                          needed for MPI, e.g. \\\"nsl socket mpi\\\"],\n                  for mpi_lib in $withval; do\n                     MPILIBS=\"$MPILIBS -l$mpi_lib\"\n                  done; casc_user_chose_mpi=yes)\n\n\n      AC_ARG_WITH(mpi-lib-dirs,\n[  --with-mpi-lib-dirs=DIRS\n                          DIRS is space-separated list of directories\n                          containing the libraries specified by\n                          \\`--with-mpi-libs', e.g \\\"/usr/lib /usr/local/mpi/lib\\\"],\n                  for mpi_lib_dir in $withval; do\n                     MPILIBDIRS=\"-L$mpi_lib_dir $MPILIBDIRS\"\n                  done; casc_user_chose_mpi=yes)\n\n      dnl * --with-mpi-flags only adds to automatic selections,\n      dnl * does not override\n\n      AC_ARG_WITH(mpi-flags,\n[  --with-mpi-flags=FLAGS  FLAGS is space-separated list of whatever flags other\n                          than -l and -L are needed to link with mpi libraries],\n                          MPIFLAGS=$withval)\n\n\n      if test \"$casc_user_chose_mpi\" = \"no\"; then\n\n         dnl * Set defaults for Compass cluster here.  This is the point where\n         dnl * we call CASC_SET_MPI in CASC_FIND_MPI macro.\n\n         casc_mpi_include_dir=\n         casc_mpi_lib_dirs=\n         casc_mpi_libs=\"mpi rt rpc gs pthread\"\n\n         for casc_incl_dir in $casc_mpi_include_dir; do\n            MPIINCLUDE=\"-I$casc_incl_dir $MPIINCLUDE\"\n         done\n         for casc_lib_dir in $casc_mpi_lib_dirs; do\n            MPILIBDIRS=\"-L$casc_lib_dir $MPILIBDIRS\"\n         done\n         for casc_lib in $casc_mpi_libs; do\n            MPILIBS=\"$MPILIBS -l$casc_lib\"\n         done\n      fi\n\n\n      AC_MSG_CHECKING(for MPI include directories)\n      AC_MSG_RESULT($MPIINCLUDE)\n      AC_MSG_CHECKING(for MPI library directories)\n      AC_MSG_RESULT($MPILIBDIRS)\n      AC_MSG_CHECKING(for MPI libraries)\n      AC_MSG_RESULT($MPILIBS)\n      AC_MSG_CHECKING(for other MPI-related flags)\n      AC_MSG_RESULT($MPIFLAGS)\n\n   fi\n\n])dnl\n\n\n\ndnl Define a macro for supporting SILO\n\nAC_DEFUN([CASC_SUPPORT_SILO],[\n\n# Begin CASC_SUPPORT_SILO\n# Defines silo_PREFIX silo_INCLUDES and silo_LIBS if with-silo is specified.\nAC_ARG_WITH(silo,\n[  --with-silo[=PATH]  Use SILO and optionally specify where SILO is installed.],\n, with_silo=no)\n\ncase \"$with_silo\" in\n  no)\n    AC_MSG_NOTICE([configuring without SILO support])\n    : Do nothing\n  ;;\n  yes)\n    # SILO install path was not specified.\n    # Look in a couple of standard locations to probe if \n    # SILO header files are there.\n    AC_MSG_CHECKING([for SILO installation])\n    for dir in /usr /usr/local; do\n      if test -f ${dir}/include/silo.h; then\n        silo_PREFIX=${dir}\n        break\n      fi\n    done\n    AC_MSG_RESULT([$silo_PREFIX])\n  ;;\n  *)\n    # SILO install path was specified.\n    AC_MSG_CHECKING([for SILO installation])\n    silo_PREFIX=$with_silo\n    silo_INCLUDES=\"-I${silo_PREFIX}/include\"\n    if test -f ${silo_PREFIX}/include/silo.h; then\n        AC_MSG_RESULT([$silo_PREFIX])\n    else\n        AC_MSG_RESULT([$silo_PREFIX])\n        AC_MSG_ERROR([SILO not found in $with_silo])\n    fi\n  ;;\nesac\n\n# Determine which SILO library is built\nif test \"${silo_PREFIX+set}\" = set; then\n   AC_MSG_CHECKING([for SILO library])\n   if test -f ${silo_PREFIX}/lib/libsilo.a; then\n      silo_LIBS='-lsilo'\n      AC_MSG_RESULT([using $silo_LIBS])\n   elif test -f ${silo_PREFIX}/lib/libsiloh5.a; then\n      silo_LIBS='-lsiloh5'\n      AC_MSG_RESULT([using $silo_LIBS])\n   else\n      AC_MSG_RESULT([using $silo_LIBS])\n      AC_MSG_ERROR([Could not fine silo library in $silo_PREFIX])\n   fi\n\n   silo_LIBS=\"-L${silo_PREFIX}/lib ${silo_LIBS}\"\nfi\n\n# END CASC_SUPPORT_SILO\n\n])dnl End definition of CASC_SUPPORT_SILO\n\ndnl Define a macro for supporting VALGRIND\n\nAC_DEFUN([CASC_SUPPORT_VALGRIND],[\n\n# Begin CASC_SUPPORT_VALGRIND\n# Defines valgrind_EXE\nAC_ARG_WITH(valgrind,\n[  --with-valgrind[=PATH]  Use VALGRIND and optionally specify where VALGRIND is installed.],\n, with_valgrind=no)\n\ncase \"$with_valgrind\" in\n  no)\n    AC_MSG_NOTICE([configuring without VALGRIND support])\n    : Do nothing\n  ;;\n  yes)\n    # VALGRIND install path was not specified.\n    # Look in a couple of standard locations to probe if \n    # VALGRIND header files are there.\n    AC_MSG_CHECKING([for VALGRIND installation])\n    for dir in /usr /usr/local; do\n      if test -f ${dir}/bin/valgrind; then\n        valgrind_PREFIX=${dir}\n        break\n      fi\n    done\n    AC_MSG_RESULT([$valgrind_PREFIX])\n  ;;\n  *)\n    # VALGRIND install path was specified.\n    AC_MSG_CHECKING([for VALGRIND installation])\n    valgrind_PREFIX=$with_valgrind\n    ;;\nesac\n\nif test \"${valgrind_PREFIX+set}\" = set \nthen\n   valgrind_EXE=\"${valgrind_PREFIX}/bin/valgrind\"\n   if test -f ${valgrind_PREFIX}/bin/valgrind; then\n      AC_MSG_RESULT([$valgrind_PREFIX])\n   else\n      AC_MSG_RESULT([$valgrind_PREFIX])\n      AC_MSG_ERROR([VALGRIND not found in $with_valgrind])\n   fi\nfi\n\n# END CASC_SUPPORT_VALGRIND\n\n])dnl End definition of CASC_SUPPORT_VALGRIND\n\ndnl Define macros for supporting XLC \n\nAC_DEFUN([CASC_CXX_STD_FILL_N_RETURNS_VOID],[\n\n# Begin CASC_CXX_STD_FILL_N_RETURNS_VOID\n# Defines CASC_STD_FILL_N_RETURNS_VOID\n\n# Check if std::fill_n returns a void, older XLC compilers do this.\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether std:fill_n returns void)\n   AC_LANG_PUSH(C++)\n   CASC_PUSH_COMPILER_STATE\n   AC_COMPILE_IFELSE([\n\n      #include <vector>\n\n      template void std::fill_n<unsigned int*, int, int>(unsigned int*, int, int const&);      \n\n      ], \n      casc_std_fill_n_returns_void=yes,\n      casc_std_fill_n_returns_void=no)\n   CASC_POP_COMPILER_STATE\n   AC_LANG_POP\n   AC_MSG_RESULT($casc_std_fill_n_returns_void)\n\n   if test \"$casc_std_fill_n_returns_void\" = yes; then\n      AC_DEFINE([CASC_STD_FILL_N_RETURNS_VOID], 1, [Define if std::fill_n returns void])\n   fi\n\n\n# END CASC_CXX_STD_FILL_N_RETURNS_VOID\n\n])dnl End definition of CASC_CXX_STD_FILL_N_RETURNS_VOID\n\n\n\n\n\n\n# ===========================================================================\n#\n# SYNOPSIS\n#\n#   CHECK_SZLIB()\n#\n# DESCRIPTION\n#\n#   This macro searches for an installed szlib library. If nothing was\n#   specified when calling configure, it searches first in /usr/local and\n#   then in /usr. If the --with-szlib=DIR is specified, it will try to find\n#   it in DIR/include/szlib.h and DIR/lib/libsz.a. If --without-szlib is\n#   specified, the library is not searched at all.\n#\n#   If either the header file (szlib.h) or the library (libsz) is not found,\n#   the configuration exits on error, asking for a valid szlib installation\n#   directory or --without-szlib.\n#\n#   The macro defines the symbol HAVE_LIBSZ if the library is found. You\n#   should use autoheader to include a definition for this symbol in a\n#   config.h file. Sample usage in a C/C++ source is as follows:\n#\n#     #ifdef HAVE_LIBSZ\n#     #include <szlib.h>\n#     #endif /* HAVE_LIBSZ */\n#\n\nAC_DEFUN([CHECK_SZLIB],\n#\n# DEFINES :\n#\t        szlib_PREFIX\n#\t\tszlib_INCLUDES\n#\t\tszlib_LIBS\n#\n[AC_MSG_CHECKING(if szlib is wanted)\nAC_ARG_WITH(szlib,\n[  --with-szlib=DIR root directory path of szlib installation [DIR defaults to\n                    /usr/local or /usr if not found in /usr/local]\n  --without-szlib to disable szlib usage completely [the default]],\n[if test \"$withval\" != no ; then\n  AC_MSG_RESULT(yes)\n  if test \"$withval\" == yes ;\n  then\n     SZLIB_HOME=/usr/local\n  else\n     SZLIB_HOME=\"$withval\"\n  fi\n  if test ! -d \"$SZLIB_HOME\"\n  then\n    AC_MSG_WARN([Sorry, $SZLIB_HOME does not exist, checking usual places])\n    SZLIB_HOME=/usr/local\n    if test ! -f \"${SZLIB_HOME}/include/szlib.h\"\n    then\n       SZLIB_HOME=/usr\n    fi\n  fi\nelse\n  AC_MSG_RESULT(no)\nfi])\n\n#\n# Locate szlib, if wanted\n#\nif test -n \"${SZLIB_HOME}\"\nthen\n        SZLIB_OLD_LDFLAGS=$LDFLAGS\n        SZLIB_OLD_CPPFLAGS=$LDFLAGS\n        LDFLAGS=\"$LDFLAGS -L${SZLIB_HOME}/lib\"\n        CPPFLAGS=\"$CPPFLAGS -I${SZLIB_HOME}/include\"\n        AC_LANG_SAVE\n        AC_LANG_C\n        AC_CHECK_LIB(z, inflateEnd, [szlib_cv_libsz=yes], [szlib_cv_libsz=no])\n        AC_CHECK_HEADER(szlib.h, [szlib_cv_szlib_h=yes], [szlib_cv_szlib_h=no])\n        AC_LANG_RESTORE\n        if test \"$szlib_cv_libsz\" = \"yes\" -a \"$szlib_cv_szlib_h\" = \"yes\"\n        then\n\t        szlib_PREFIX=\"${SZLIB_HOME}\"\n\t\tszlib_INCLUDES=\"-I${SZLIB_HOME}/include\"\n\t\tszlib_LIBS=\"-L${SZLIB_HOME}/lib -lsz\"\n                #\n                # If both library and header were found, use them\n                #\n                AC_CHECK_LIB(z, inflateEnd)\n                AC_MSG_CHECKING(szlib in ${SZLIB_HOME})\n                AC_MSG_RESULT(ok)\n        else\n                #\n                # If either header or library was not found, revert and bomb\n                #\n                AC_MSG_CHECKING(szlib in ${SZLIB_HOME})\n                LDFLAGS=\"$SZLIB_OLD_LDFLAGS\"\n                CPPFLAGS=\"$SZLIB_OLD_CPPFLAGS\"\n                AC_MSG_RESULT(failed)\n                AC_MSG_ERROR(either specify a valid szlib installation with --with-szlib=DIR or disable szlib usage with --without-szlib)\n        fi\nfi\n\n])\n\n# ===========================================================================\n#           http://www.nongnu.org/autoconf-archive/check_zlib.html\n# ===========================================================================\n#\n# SYNOPSIS\n#\n#   CHECK_ZLIB()\n#\n# DESCRIPTION\n#\n#   This macro searches for an installed zlib library. If nothing was\n#   specified when calling configure, it searches first in /usr/local and\n#   then in /usr. If the --with-zlib=DIR is specified, it will try to find\n#   it in DIR/include/zlib.h and DIR/lib/libz.a. If --without-zlib is\n#   specified, the library is not searched at all.\n#\n#   If either the header file (zlib.h) or the library (libz) is not found,\n#   the configuration exits on error, asking for a valid zlib installation\n#   directory or --without-zlib.\n#\n#   The macro defines the symbol HAVE_LIBZ if the library is found. You\n#   should use autoheader to include a definition for this symbol in a\n#   config.h file. Sample usage in a C/C++ source is as follows:\n#\n#     #ifdef HAVE_LIBZ\n#     #include <zlib.h>\n#     #endif /* HAVE_LIBZ */\n#\n# LICENSE\n#\n#   Copyright (c) 2008 Loic Dachary <loic@senga.org>\n#\n#   This program is free software; you can redistribute it and/or modify it\n#   under the terms of the GNU General Public License as published by the\n#   Free Software Foundation; either version 2 of the License, or (at your\n#   option) any later version.\n#\n#   This program is distributed in the hope that it will be useful, but\n#   WITHOUT ANY WARRANTY; without even the implied warranty of\n#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n#   Public License for more details.\n#\n#   You should have received a copy of the GNU General Public License along\n#   with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n#   As a special exception, the respective Autoconf Macro's copyright owner\n#   gives unlimited permission to copy, distribute and modify the configure\n#   scripts that are the output of Autoconf when processing the Macro. You\n#   need not follow the terms of the GNU General Public License when using\n#   or distributing such scripts, even though portions of the text of the\n#   Macro appear in them. The GNU General Public License (GPL) does govern\n#   all other use of the material that constitutes the Autoconf Macro.\n#\n#   This special exception to the GPL applies to versions of the Autoconf\n#   Macro released by the Autoconf Archive. When you make and distribute a\n#   modified version of the Autoconf Macro, you may extend this special\n#   exception to the GPL to apply to your modified version as well.\n\nAC_DEFUN([CHECK_ZLIB],\n#\n# DEFINES :\n#\t        zlib_PREFIX\n#\t\tzlib_INCLUDES\n#\t\tzlib_LIBS\n#\n[AC_MSG_CHECKING(if zlib is wanted)\nAC_ARG_WITH(zlib,\n[  --with-zlib=DIR root directory path of zlib installation [DIR defaults to\n                    /usr/local or /usr if not found in /usr/local]\n  --without-zlib to disable zlib usage completely [the default]],\n[if test \"$withval\" != no ; then\n  AC_MSG_RESULT(yes)\n  if test \"$withval\" == yes ;\n  then\n     ZLIB_HOME=/usr/local\n  else\n     ZLIB_HOME=\"$withval\"\n  fi\n  if test ! -d \"$ZLIB_HOME\"\n  then\n    AC_MSG_WARN([Sorry, $ZLIB_HOME does not exist, checking usual places])\n    ZLIB_HOME=/usr/local\n    if test ! -f \"${ZLIB_HOME}/include/zlib.h\"\n    then\n       ZLIB_HOME=/usr\n    fi\n  fi\nelse\n  AC_MSG_RESULT(no)\nfi],\n  [AC_MSG_RESULT(no)]\n)\n\n\n#\n# Locate zlib, if wanted\n#\nif test -n \"${ZLIB_HOME}\"\nthen\n        ZLIB_OLD_LDFLAGS=$LDFLAGS\n        ZLIB_OLD_CPPFLAGS=$LDFLAGS\n        LDFLAGS=\"$LDFLAGS -L${ZLIB_HOME}/lib\"\n        CPPFLAGS=\"$CPPFLAGS -I${ZLIB_HOME}/include\"\n        AC_LANG_SAVE\n        AC_LANG_C\n        AC_CHECK_LIB(z, inflateEnd, [zlib_cv_libz=yes], [zlib_cv_libz=no])\n        AC_CHECK_HEADER(zlib.h, [zlib_cv_zlib_h=yes], [zlib_cv_zlib_h=no])\n        AC_LANG_RESTORE\n        if test \"$zlib_cv_libz\" = \"yes\" -a \"$zlib_cv_zlib_h\" = \"yes\"\n        then\n\t        zlib_PREFIX=\"${ZLIB_HOME}\"\n\t\tzlib_INCLUDES=\"-I${ZLIB_HOME}/include\"\n\t\tzlib_LIBS=\"-L${ZLIB_HOME}/lib -lz\"\n                #\n                # If both library and header were found, use them\n                #\n                AC_CHECK_LIB(z, inflateEnd)\n                AC_MSG_CHECKING(zlib in ${ZLIB_HOME})\n                AC_MSG_RESULT(ok)\n        else\n                #\n                # If either header or library was not found, revert and bomb\n                #\n                AC_MSG_CHECKING(zlib in ${ZLIB_HOME})\n                LDFLAGS=\"$ZLIB_OLD_LDFLAGS\"\n                CPPFLAGS=\"$ZLIB_OLD_CPPFLAGS\"\n                AC_MSG_RESULT(failed)\n                AC_MSG_ERROR(either specify a valid zlib installation with --with-zlib=DIR or disable zlib usage with --without-zlib)\n        fi\nfi\n\n])\n\ndnl $Id$\n\ndnl Determines which compiler is being used.\ndnl This check uses the compiler behavior when possible.\ndnl For some compiler, we resort to a best guess,\ndnl because we do not know a foolproof way to get the info.\n\ndnl Much of the information used here came from the very\ndnl helpful predef project (http://predef.sourceforge.net/).\n\n\n\n\ndnl Simple wrappers to allow using CASC_INFO_CXX_ID_NAMES and\ndnl CASC_INFO_CC_ID_NAMES without arguments.\ndnl The names CC_ID and CC_VERSION are used for the C compiler id and version.\ndnl The names CXX_ID and CXX_VERSION are used for the C++ compiler id and version.\nAC_DEFUN([CASC_INFO_CXX_ID],[\n  CASC_INFO_CXX_ID_NAMES(CXX_ID,CXX_VERSION)\n])\nAC_DEFUN([CASC_INFO_CC_ID],[\n  CASC_INFO_CC_ID_NAMES(CC_ID,CC_VERSION)\n])\nAC_DEFUN([CASC_INFO_CC_CXX_ID],[\n  AC_REQUIRE([CASC_INFO_CC_ID])\n  AC_REQUIRE([CASC_INFO_CXX_ID])\n])\n\n\ndnl CASC_INFO_CXX_ID and CASC_INFO_C_ID determine which C or C++ compiler\ndnl is being used.\n# Set the variables CXX_ID or C_ID as follows:\n# Gnu\t\t-> gnu\n# SUNWspro\t-> sunpro\n# Dec\t\t-> dec\n# KCC\t\t-> kai\n# Intel\t\t-> intel\n# SGI\t\t-> sgi\n# IBM xlc\t-> xlc\n\n\nAC_DEFUN([CASC_INFO_CXX_ID_NAMES],\ndnl Arguments are:\ndnl 1. Name of variable to set to the ID string.\ndnl 2. Name of variable to set to the version number.\n[\n# Start macro CASC_INFO_CXX_ID_NAMES\n  AC_REQUIRE([AC_PROG_CXXCPP])\n  AC_LANG_SAVE\n  AC_LANG_CPLUSPLUS\n  CASC_AC_LOG(CXXP is $CXX)\n  CASC_AC_LOG(CXXCPP is $CXXCPP)\n\n  $1=unknown\n  $2=unknown\n\ndnl Do not change the following chain of if blocks into a case statement.\ndnl We may eventually have a compiler that must be tested in a different\ndnl method\n\n\n  # Check if it is a Sun compiler.\n  if test $$1 = unknown; then\n    CASC_AC_LOG(checking if $CXX is sunpro)\n    AC_EGREP_CPP([^0x[0-9]+],__SUNPRO_CC,\n      $1=sunpro\n      # SUN compiler defines __SUNPRO_CC to the version number.\n      echo __SUNPRO_CC > conftest.C\n      $2=`${CXXCPP} conftest.C | sed -n 2p`\n      rm -f conftest.C\n    )\n  fi\n\n\n  # Check if it is a Intel compiler.\n  if test $$1 = unknown; then\n    CASC_AC_LOG(checking if $CXX is intel)\n    AC_EGREP_CPP(^yes,\n#ifdef __INTEL_COMPILER\nyes;\n#endif\n,\n      $1=intel\n      # Intel compiler defines __INTEL_COMPILER to the version number.\n      echo __INTEL_COMPILER > conftest.C\n      $2=`${CXXCPP} conftest.C | sed -n 2p`\n      rm -f conftest.C\n    )\n  fi\n\n\n  # Check if it is a GNU compiler.\n  if test $$1 = unknown; then\n    CASC_AC_LOG(checking if $CXX is gnu)\n    AC_EGREP_CPP(^yes,\n#ifdef __GNUC__\nyes;\n#endif\n,\n    $1=gnu\n    # GNU compilers output version number with option --version.\n    # Alternatively, it also defines the macros __GNUC__,\n    # GNUC_MINOR__ and __GNUC_PATCHLEVEL__\n    [[$2=`$CXX --version | sed -e 's/[^0-9]\\{0,\\}\\([^ ]\\{1,\\}\\).\\{0,\\}/\\1/' -e 1q`]]\n    )\n  fi\n\n\n  # Check if it is a DEC compiler.\n  if test $$1 = unknown; then\n    CASC_AC_LOG(checking if $CXX is dec)\n    AC_EGREP_CPP(^1,__DECCXX,\n      $1=dec\n      # DEC compiler defines __DECCXX_VER to the version number.\n      echo __DECCXX_VER > conftest.C\n      $2=`${CXXCPP} conftest.C | sed -n 2p`\n      rm -f conftest.C\n    )\n  fi\n\n\n  # Check if it is a KAI compiler.\n  if test $$1 = unknown; then\n    CASC_AC_LOG(checking if $CXX is kai)\n    AC_EGREP_CPP(^1,__KCC,\n      $1=kai\n      # KCC compiler defines __KCC_VERSION to the version number.\n      echo __KCC_VERSION > conftest.C\n      $2=`${CXXCPP} conftest.C | sed -n 2p`\n      rm -f conftest.C\n    )\n  fi\n\n\n  # Check if it is a SGI compiler.\n  if test $$1 = unknown; then\n    CASC_AC_LOG(checking if $CXX is sgi)\n    AC_EGREP_CPP(^1,__sgi,\n      $1=sgi\n      # SGI compiler defines _COMPILER_VERSION to the version number.\n      echo _COMPILER_VERSION > conftest.C\n      $2=`${CXXCPP} conftest.C | sed /^\\\\#/d`\n      rm -f conftest.C\n    )\n  fi\n\n\n  # Check if it is a IBM compiler.\n  if test $$1 = unknown; then\n    CASC_AC_LOG(checking if $CXX is xlc)\n    AC_EGREP_CPP(^yes,\n#ifdef __xlC__\nyes;\n#endif\n,\n    $1=xlc\n    # IBM compiler defines __xlC__ to the version number.\n    echo __xlC__ > conftest.C\n    $2=`${CXXCPP} conftest.C | sed /^\\\\#/d`\n    rm -f conftest.C\n    )\n  fi\n\n\n  AC_LANG_RESTORE\n  CASC_AC_LOG_VAR(CXX_ID CXX_VERSION)\n# End macro CASC_INFO_CXX_ID_NAMES\n])\n\n\n\n\n\nAC_DEFUN([CASC_INFO_CC_ID_NAMES],\ndnl Arguments are:\ndnl 1. Name of variable to set to the ID string.\ndnl 2. Name of variable to set to the version number.\n[\n# Start macro CASC_INFO_CC_ID_NAMES\n  AC_REQUIRE([AC_PROG_CPP])\n  AC_LANG_SAVE\n  AC_LANG_C\n  CASC_AC_LOG(CC is $CC)\n  CASC_AC_LOG(CPP is $CPP)\n\n  $1=unknown\n  $2=unknown\n\ndnl Do not change the following chain of if blocks into a case statement.\ndnl We may eventually have a compiler that must be tested in a different\ndnl method\n\n\n  # Check if it is a Sun compiler.\n  if test $$1 = unknown; then\n    CASC_AC_LOG(checking if $CC is sunpro)\n    AC_EGREP_CPP([^ 0x[0-9]+],__SUNPRO_C,\n      $1=sunpro\n      # SUN compiler defines __SUNPRO_C to the version number.\n      echo __SUNPRO_C > conftest.c\n      $2=`${CPP} ${CPPFLAGS} conftest.c | sed -n -e 's/^ //' -e 2p`\n      rm -f conftest.c\n    )\n  fi\n\n\n  # Check if it is a Intel compiler.\n  if test $$1 = unknown; then\n    CASC_AC_LOG(checking if $CC is intel)\n    AC_EGREP_CPP(^yes,\n#ifdef __INTEL_COMPILER\nyes;\n#endif\n,\n      $1=intel\n      # Intel compiler defines __INTEL_COMPILER to the version number.\n      echo __INTEL_COMPILER > conftest.C\n      $2=`${CPP} conftest.C | sed -n 2p`\n      rm -f conftest.C\n    )\n  fi\n\n\n  # Check if it is a GNU compiler.\n  if test $$1 = unknown; then\n    CASC_AC_LOG(checking if $CC is gnu)\n    AC_EGREP_CPP(^yes,\n#ifdef __GNUC__\nyes;\n#endif\n,\n    $1=gnu\n    [[$2=`$CC --version | sed -e 's/[^0-9]\\{0,\\}\\([^ ]\\{1,\\}\\).\\{0,\\}/\\1/' -e 1q`]]\n    )\n  fi\n\n\n  # Check if it is a DEC compiler.\n  if test $$1 = unknown; then\n    CASC_AC_LOG(checking if $CC is dec)\n    AC_EGREP_CPP(^ 1,__DECC,\n      $1=dec\n      # DEC compiler defines __DECC_VER to the version number.\n      echo __DECC_VER > conftest.c\n      $2=`${CPP} ${CPPFLAGS} conftest.c | sed -n -e 's/^ //' -e 2p`\n      rm -f conftest.c\n    )\n  fi\n\n\n  # Check if it is a KAI compiler.\n  if test $$1 = unknown; then\n    CASC_AC_LOG(checking if $CC is kai)\n    AC_EGREP_CPP(^1,__KCC,\n      $1=kai\n      # KCC compiler defines __KCC_VERSION to the version number.\n      echo __KCC_VERSION > conftest.c\n      $2=`${CPP} ${CPPFLAGS} conftest.c | sed -n 2p`\n      rm -f conftest.c\n    )\n  fi\n\n\n  # Check if it is a SGI compiler.\n  if test $$1 = unknown; then\n    CASC_AC_LOG(checking if $CC is sgi)\n    AC_EGREP_CPP(^1,__sgi,\n      $1=sgi\n      # SGI compiler defines _COMPILER_VERSION to the version number.\n      echo _COMPILER_VERSION > conftest.c\n      $2=`${CPP} ${CPPFLAGS} conftest.c | sed /^\\\\#/d`\n      rm -f conftest.c\n    )\n  fi\n\n\n  # Check if it is a IBM compiler.\n  if test $$1 = unknown; then\n    CASC_AC_LOG(checking if $CC is xlc)\n    if echo \"$host_os\" | grep \"aix\" >/dev/null ; then\n      # The wretched IBM shell does not eval correctly,\n      # so we have to help it with a pre-eval eval statement.\n      ac_cpp=`eval \"echo $ac_cpp\"`\n      save_ac_cpp=$ac_cpp\n      CASC_AC_LOG(ac_cpp is temporarily set to $ac_cpp)\n    else\n      save_ac_cpp=\n    fi\n    CASC_AC_LOG(ac_cpp is $ac_cpp)\n    AC_EGREP_CPP(^yes,\n#ifdef __xlC__\nyes;\n#endif\n,\n    $1=xlc\n    # IBM compiler defines __xlC__ to the version number.\n    echo __xlC__ > conftest.C\n    $2=`${CPP} conftest.C | sed /^\\\\#/d`\n    rm -f conftest.C\n    )\n    test \"$save_ac_cpp\" && ac_cpp=$save_ac_cpp\n    CASC_AC_LOG(ac_cpp is restored to $ac_cpp)\n  fi\n\n\n  AC_LANG_RESTORE\n  CASC_AC_LOG_VAR(CC_ID CC_VERSION)\n# End macro CASC_INFO_CC_ID_NAMES\n])\n\ndnl $Id$\n\n\nAC_DEFUN([CASC_TYPE_BOOL],[\n\n# Start macro CASC_TYPE_BOOL\n\nAC_MSG_CHECKING(checking whether bool type is broken)\n\nAC_CACHE_VAL(btng_cv_type_bool_broken, [\n\n  AC_LANG_SAVE\n  AC_LANG_CPLUSPLUS\n\n  AC_TRY_COMPILE(, bool b = true; ,\n    # bool is not broken.\n    btng_cv_type_bool_broken=no\n    ,\n    # bool is broken.\n    btng_cv_type_bool_broken=yes\n  )\tdnl End AC_TRY_COMPILE call\n\n  AC_LANG_RESTORE\n\n])\tdnl End AC_CACHE_VAL call\n\nAC_MSG_RESULT($btng_cv_type_bool_broken)\n\nif test \"$btng_cv_type_bool_broken\" = yes; then\n  AC_DEFINE([BOOL_IS_BROKEN],1,Define if bool type is not properly supported)\nfi\n\n\n# End macro CASC_TYPE_BOOL\n\n])\tdnl End of COMPILE_BOOLEAN_MACRO definition.\n\nAC_DEFUN([CASC_AC_LOG],[echo \"configure:__oline__:\" $1 >&AC_FD_CC])\n\nAC_DEFUN([CASC_AC_LOG_VAR],[\ndnl arg1 is list of variables to log.\ndnl arg2 (optional) is a label.\ndnl\ndnl This macro makes code that write out at configure time\ndnl label: x is '...'\ndnl if x is set and\ndnl label: x is unset\ndnl otherwise.\ndefine([btng_log_label],ifelse($2,,,[$2: ]))\nbtng_log_vars=\"$1\"\nfor btng_log_vars_index in $btng_log_vars ; do\n  eval \"test \\\"\\${${btng_log_vars_index}+set}\\\" = set\"\n  if test $? = 0; then\n    btng_log_vars_value=\"'`eval echo \\\\${$btng_log_vars_index}`'\";\n  else\n    btng_log_vars_value=\"unset\";\n  fi\n  CASC_AC_LOG(\"btng_log_label$btng_log_vars_index is $btng_log_vars_value\");\ndnl\ndnl This is a shorter version, but it does not work for some Bourne shells\ndnl due to misinterpretation of the multiple backslashes\ndnl CASC_AC_LOG(\"btng_log_label$btng_log_vars_index is `eval if test \\\\\\\"\\$\\{$btng_log_vars_index+set\\}\\\\\\\"\\; then echo \\\\\\\"\"'\"\\$\\{$btng_log_vars_index\\}\"'\"\\\\\\\"\\; else echo 'unset'\\; fi`\")\ndone\nundefine([btng_log_label])\n])\n\ndnl Define a macro for supporting generalized serial-parallel run.\n\n\nAC_DEFUN([SAMRAI_SERPA],[\ndnl Support a generalized way to run a program in serial or parallel mode.\ndnl (serpa is serial + parallel).\ndnl\ndnl Arg1: name (may include relative path) to give to shell script created.\ndnl   If omitted, the name will be serpa-run, in the top level directory.\ndnl\ndnl This macro brings out an automake bug.  See \"IMPORTANT NOTE:\" below\ndnl for comments and how to circumvent.\n\n# Begin macro $0\n\n\n# The generalized script needs to know about the system\n# so it can form the appropriate parallel run command line.\nAC_REQUIRE([AC_CANONICAL_TARGET])\n\n\ndnl The parallel run program (usually mpirun) is hardwired for now,\ndnl but it should be more flexible.\ndnl I plan to eventualy use the following variable,\ndnl but it is not currently used.\nAC_ARG_WITH(parallel-run-bin,[\n  --with-parallel-run-bin=STRING\n\t\tSpecify the parallel run binary (i.e., mpirun, dmpirun,\n\t\tpoe, etc) to be used in the serial-parallel run script.\n],[\ncase \"$with_parallel_run_bin\" in\n  no)\n    # Set PARALLEL_RUN_BIN to blank to remove it from the serpa-run script.\n    PARALLEL_RUN_BIN=;;\n  yes)\n    # Unset the variable PARALLEL_RUN_BIN so it is guessed in the next step.\n    unset PARALLEL_RUN_BIN;\n    ;;\n  *)\n    # Set PARALLEL_RUN_BIN to user specification.\n    PARALLEL_RUN_BIN=\"$with_parallel_run_bin\"\n    ;;\nesac\nCASC_AC_LOG_VAR(with_parallel_run_bin PARALLEL_RUN_BIN target_os, with-parallel-run-bin given)\n\n],[\nunset PARALLEL_RUN_BIN;\nCASC_AC_LOG_VAR(with_parallel_run_bin PARALLEL_RUN_BIN target_os, with-parallel-run-bin NOT given)\n])\n# If PARALLEL_RUN_BIN is unset, guess it.\nif test ! \"${PARALLEL_RUN_BIN+set}\" = set; then\n  case \"$target_os\" in\n    osf*) PARALLEL_RUN_BIN=dmpirun\n    ;;\n    *) PARALLEL_RUN_BIN=mpirun\n    ;;\n  esac\n  CASC_AC_LOG_VAR(with_parallel_run_bin PARALLEL_RUN_BIN target_os, after setting PARALLEL_RUN_BIN)\nfi\nAC_SUBST(PARALLEL_RUN_BIN)\n\n\ndefine(btng_serpa_run_fn,ifelse($1,,serpa-run,$1))\ndnl Create serpa-run.in file (at autoconf time, before configure time)\ndnl File serpa-run.in will be used at configure time to create serpa-run\ndnl in the compile tree.\nsyscmd([ file_name=']btng_serpa_run_fn[' cat <<'__EOM__'> ${file_name}.in\n#!/bin/sh\n\n# This script runs an executable program serially or in parallel.\n\n# The syntax for running programs in parallel differs from platform to platform,\n# software to software.  This script automatically uses the correct syntax for\n# the environments that it knows about.  For the environments it does not know,\n# it has a default that may work.\n\n# This script defines the set of tests to put the program through.\n# This set is parametrized by these variables:\n# nproc_list: space- or comma-separated list of number of processors to use.\n\n\n# The name and directory of this script\n# (Do not rely on existence of dirname and basename programs.)\nscript_name=`echo ${0} | sed -e 's:.*/::'`;\ndir_name=`echo ${0} | sed -e 's:^\\([^/]*\\)$:./\\1:' -e 's:/[^/]*$::'`;\n\n# Define a way to gracefully die from within this script.\n# The die function is similar to Perl's.\n# Arguments are: <exit_value> <exit_message>\ndie () {\n    echo \"ERROR_MESSAGE_FROM ${script_name}:\"\n    if [ -n \"${2}\" ]; then echo \"Error ${2}\"; fi\n    if [ -n \"${1}\" ]; then exit ${1}; fi\n    exit 99\n}\n\n\n# When no argument is given, print the help message and exit.\nif [ \"${1}\" = '-h' ] || [ \"${1}\" = '--help' ] || [ ${#} -lt 2 ] ; then\n  cat <<-_EOF_\n\tUsage: ${script_name} <list of nproc> <program name>\n\n\tThis is a generalized script to run a program in serial\n\tand/or parallel.\n\n\tThe number of processors are given by <list of nproc>,\n\twhich must be a comma- or space-delimited list of integers.\n\tExample: \"${script_name} 1,2,5 parallel_program\" runs\n\tparallel_program 3 times with 1, 2 and 5 processors in turn.\n\n\tThe special case of number of processors = 0 means to run serially.\n\tThis differs from one processor in that one processor means to run\n\tin parallel, but with one processor.\n\n\tThis script exits with an error if any instance of\n\trunning the program fails.\n\n\tIf SERPA_REDIRECT_OUTPUT_TO is defined in the environment,\n\tstandard output of the program is redirected there.\n\tIf SERPA_REDIRECT_ERRORS_TO is defined in the environment,\n\terror output of the program is redirected there.\n\tOutputs directly from THIS script are NOT affected\n\tby these environment variables.\n\n\tIf SERPA_MAX_FAILS is defined, ${script_name} will\n\tcontinue until that many failures before exiting.\n\tThe default is 1 failure (${script_name} exits on the\n\tfirst failure).  The exit value will always be the\n\tfailure count.\n\n\tWhen a serial run os made, if SERPA_PERFORMANCE_FILE\n\tis defined and is the name of a file, that file is searched\n\tfor performance data.  The run is timed and the result\n\tis compared to the performance data found.\n\t_EOF_\nexit\nfi\n\n# How to invoke a GNU compatible time command\nif [ -z \"${SERPA_GNUTIME}\" ]; then\n    SERPA_GNUTIME=/usr/bin/time\nfi\n\n# Percent difference for performance comparisons\nif [ -z \"${SERPA_DIFFERENCE}\" ]; then\n    SERPA_DIFFERENCE=0.1\nfi\n\n\n# Check the redirection environment variables.\n# See the help message for how these are used.\nif [ -n \"${SERPA_REDIRECT_OUTPUT_TO}\" ]; then\n  output_redirection_string=\"1> ${SERPA_REDIRECT_OUTPUT_TO}\"\nelse\n  unset output_redirection_string\nfi\nif [ -n \"${SERPA_REDIRECT_ERRORS_TO}\" ]; then\n  errors_redirection_string=\"2> ${SERPA_REDIRECT_ERRORS_TO}\"\nelse\n  unset errors_redirection_string\nfi\n\n# Save the arguments for later reference.\nserpa_args=\"${@}\"\n\n\n# Get the number of processors from the first argument of this script.\nnproc_list=${1}; shift;\n# We allow comma-delimited lists, so we now remove those commas.\necho ${nproc_list} | grep '^[0-9 ,]\\{1,\\}$' > /dev/null\t\\\n  || die 1 \"Invalid number of processors list '${nproc_list}'\"\nnproc_list=`echo ${nproc_list} | sed 's/,/ /g'`\n\n# Get the program name from the next argument of this script.\nprogram=${1}; shift;\ntest -x ${program} || die 1 \"No execute permission on '${program}'\"\n\n\n# Determine host name for use below.\nif [ ${?}{HOST} ]; then\n  HOST=`uname -n`\n  export HOST\nfi\n\n\n# Use additional_env to specify additional environments that\n# should be set before running.  Although you can, do not use\n# this to set environments for programs.  It is meant to be\n# environments for the parallel execution program such as\n# mpirun.\nadditional_env=\n\n\n# Variables required for using parallelrun.  These may not be needed,\n# but if they are needed and unset, there will be an error.\n# Some of these strings are determined at configure time.\nparallelrun_prog=\"@PARALLEL_RUN_BIN@\";\t# Name of parallelrun program.\n\n\n# Determine what platform we are on.\ntarget_cpu=@target_cpu@\ntarget_os=@target_os@\ntarget_vendor=@target_vendor@\n\n\n# Determine the machine file name.\nserpa_machine_file='serpa.machines'\n\n\n# Define a function to run a program in parallel.\n# We have to do this because different environments require different syntaxes.\n# The function arguments are:\n#   program name\n#   number of processor\n#\n# We define the function in a big if-else statement based on the\n# target computer.  We assume that there is a one-to-one correspondence.\n# If there is not, there may have to be a nested if-structure.\n#\nif echo \"${HOST}\" | egrep '^(blue|frost)[0-9]' > /dev/null ; then\n\n  # For blue, a specific singleton platform.\n  run_multiproc () {\n    MP_RESD=\"YES\"\n    MP_HOSTFILE=\"\"\n    MP_EUILIB=us\n    MP_EUIDEVICE=css0\n    export MP_RESD MP_HOSTFILE MP_EUILIB MP_EUIDEVICE\n  # IBM shell functions eat their parameters after the first assignment\n  # from them so save the parameters first.\n    case \"${HOST}\" in\n      blue*) proc_per_node=4;;\n      frost*) proc_per_node=16;;\n    esac\n    program=${1}; nproc=${2}; shift 2\n    nodes=`expr 1 + \\( ${nproc} - 1 \\) / ${proc_per_node}`\n    com=\"${additional_env} ${parallelrun_prog} ${program}\"\n    com=\"${com} -rmpool 0 -nodes ${nodes} -procs ${nproc} ${@}\"\n    # com=\"${program} ${@} -procs ${nproc}\"\n    echo ${com}\n    eval ${com} ${output_redirection_string} ${errors_redirection_string}\n    return ${?}\n  }\n\nelif echo \"${HOST}\" | grep '^tc2k' > /dev/null ; then\n\n  # For tc2k, a specific singleton platform (contributed by Brian Miller).\n  run_multiproc () {\n    program=${1}; nproc=${2}; shift 2\n    com=\"${additional_env} prun -n ${nproc} ${program} ${@}\"\n    com=\"${program} ${@} -p ${nproc}\"\n    echo ${com}\n    eval ${com} ${output_redirection_string} ${errors_redirection_string}\n    return ${?}\n  }\n\nelif echo \"${HOST}\" | egrep '^(mcr|pengra|thunder)[0-9]' > /dev/null ; then\n\n  # For LC Linux clusters using srun.\n  run_multiproc () {\n    program=${1}; nproc=${2}; shift 2\n    com=\"${additional_env} srun -n${nproc} -p pdebug ${program} ${@}\"\n    echo ${com}\n    eval ${com} ${output_redirection_string} ${errors_redirection_string}\n    return ${?}\n  }\n\nelif echo \"${target_os}\" | grep '^osf'\t> /dev/null ; then\n\n  # For Dec OSF.\n  run_multiproc () {\n    program=${1}; nproc=${2}; shift 2\n    com=\"${additional_env} dmpirun -np ${nproc} ${program} ${@}\"\n    echo ${com}\n    eval ${com} ${output_redirection_string} ${errors_redirection_string}\n    return ${?}\n  }\n\nelif echo \"${target_os}\" | grep '^solaris' > /dev/null\t\\\n  || echo \"${target_os}\" | grep '^irix' > /dev/null\t\\\n  || echo \"${target_os}\" | grep '^linux' > /dev/null\t\\\n  ; then\n\n  # Most platforms fall into this case.\n  run_multiproc () {\n    program=${1}; nproc=${2}; shift 2\n    com=\"${additional_env} ${parallelrun_prog}\"\n    com=\"${com} -machinefile ${dir_name}/${serpa_machine_file} -np ${nproc} ${program} ${@}\"\n    echo ${com}\n    eval ${com} ${output_redirection_string} ${errors_redirection_string}\n    return ${?}\n  }\n\nelse\n\n  # Simplest case.\n  # This is generic.  It may not work, but it is our best guess\n  # without knowledge of the system.\n  run_multiproc () {\n    program=${1}; nproc=${2}; shift 2\n    com=\"${additional_env} ${program} -np ${nproc} ${@}\"\n    echo ${com}\n    eval ${com} ${output_redirection_string} ${errors_redirection_string}\n    return ${?}\n  }\n\nfi\n\n\n# Initialize the failure count.\nserpa_num_failures=0\ntest -z \"${SERPA_MAX_FAILS}\" && SERPA_MAX_FAILS=1\n\n# Run the program.\nfor nproc in ${nproc_list}; do\n  cat <<-_EOM_\n\t${script_name}================================================\n\tRUNNING: ${script_name} ${nproc} ${program} ${@}\n\t${script_name}::::::::::::::::::::::::::::::::::::::::::::::::\n\t_EOM_\n  if test \"${nproc}\" = 0 ; then\n    # Run serially.\n\n    # If performance file exists then with performance testing\n    # otherwise do a normal sequential run\n    if test \"${SERPA_PERFORMANCE_FILE+set}\" = set &&\n       test -f \"${SERPA_PERFORMANCE_FILE}\"; then\n\n\t# Run with performance check. \n\tcom=\"${additional_env} ${program} ${@}\"\n\techo \"${com}\"\n\t${SERPA_GNUTIME} -o $$.time -f \"%e %t\" ${com} \\\n\t    ${output_redirection_string} ${errors_redirection_string}\n\texit_value=${?}\n\n\t# Parse temporary file to get recorded time/memory usage\n\tread etime memory < $$.time\n\trm $$.time\n\t\n\t# Report the run time/memory usage \n\techo \"serpa-perf ${nproc} <${com}> ${etime} ${memory}\"\n\n\t# Check if time is out of bounds\n\tsearch=`grep \"serpa-perf ${nproc} <${com}>\" ${SERPA_PERFORMANCE_FILE}`\n\tif test \"$?\" = \"0\";then\n\t    search=`echo $search | sed 's/.*>//'`\n\t    read compare_time compare_memory <<EOF\t    \n$search\nEOF\n        else\n\t    compare_time=999999\n\t    compare_memory=0\n\tfi\n\n\tdifference=`bc -l <<EOF\na=${etime}\nb=${compare_time}\nt=${SERPA_DIFFERENCE}\nd=a-b\nif ( d < 0 ) {\n\td = -d\n}\np=d/b\nprint (p < t), \"\\n\"\nEOF`\n\tif test \"${difference}\" = \"1\"; then\n\t    echo \"PERFORMANCE PASSED: target ${compare_time} (seconds) current ${etime} sec\"\n\telse\n\t    echo \"PERFORMANCE FAIL: target ${compare_time} (seconds) current ${etime}\"\n\tfi\n\n\t# Currently don't do memory check since it is not reporting anything.\n\n    else\n\t# Run without performance testing\n\tcom=\"${additional_env} ${program} ${@}\"\n\techo \"${com}\"\n\teval ${com} ${output_redirection_string} ${errors_redirection_string}\n\texit_value=${?}\n    fi\n  else\n    # Because parallel runs sometimes fails due to problems unrelated\n    # to the program, we give it several tries before declaring failure.\n    if test -z \"${SERPA_PARALLEL_TRIES}\"; then SERPA_PARALLEL_TRIES=1; fi\n    c=1\n    while test ${c} -le ${SERPA_PARALLEL_TRIES} ; do\n      if test ${c} -gt 1 ; then\n        echo \"possibly failed.  TRY number ${c}\"\n      fi\n      run_multiproc ${program} ${nproc} \"${@}\"\n      exit_value=${?}\n      if [ ${exit_value} = 0 ]; then\n        break\n      fi\n      c=`expr ${c} + 1`\n    done\n  fi\n  # Report pass or fail.\n  # pf_string=FAILED; test \"${exit_value}\" = 0 && pf_string=PASSED\n  pf_string=FAILED; test \"${exit_value}\" = 0 && pf_string=COMPLETED\n  cat <<-_EOM_\n\t${script_name}::::::::::::::::::::::::::::::::::::::::::::::::\n\t${pf_string}: ${script_name} ${nproc} ${program} ${@}\n\t${script_name}================================================\n\t_EOM_\n  # Count failures and possibly exit.\n  if test ${exit_value} -ne 0 ; then\n    serpa_num_failures=`expr ${serpa_num_failures} + 1`;\n    if test ${serpa_num_failures} -eq ${SERPA_MAX_FAILS}; then\n      die 1 \"FAIL running ${program} with ${nproc} processors\"\n    fi\n  fi\ndone\n\nif test ${serpa_num_failures} -eq 0; then\n  echo \"${script_name} ${serpa_args} passed.\"\nelse\n  echo \"${script_name} ${serpa_args} had ${serpa_num_failures} failures.\"\nfi\nexit ${serpa_num_failures}\n\n# End of script.\n__EOM__\n])dnl End of macro to create serpa-run.in\n\n\ndnl Create the configured file from its .in version.\ndnl AC_CONFIG_FILES( btng_serpa_run_fn, chmod +x btng_serpa_run_fn )\ndnl IMPORTANT NOTE:\ndnl Using the defined symbol btng_serpa_run_fn in AC_CONFIG_FILES\ndnl causes automake to complain that btng_serpa_run_fn.in is not found.\ndnl Since that symbol is a defined m4 macro, this is an automake deficiency.\ndnl Until this is fixed, the above AC_CONFIG_FILES usage will not\ndnl work!  You must call AC_CONFIG_FILES with the actual names of\ndnl the file instead of the m4-defined symbol btng_serpa_run_fn.\n\n\n\nAC_CONFIG_COMMANDS([create-serpa-machine-file],[\n# Generate a machine file if needed.\nif test ! -r \"$serpa_machine_file\" ; then\n  # Set the serpa machine file name to be in the same directory as\n  # the serpa-run script.\n  btng_serpa_dir_name=`echo ']btng_serpa_run_fn[' | sed -e ['s:^\\([^/]*\\)$:./\\1:'] -e ['s:/[^/]*$::']`;\n  btng_serpa_machine_file=\"${btng_serpa_dir_name}/serpa.machines\"\n  hostname=\"`hostname`\"\n  cat <<-__EOF__>\"$btng_serpa_machine_file\"\n\t$hostname\n\t$hostname\n\t$hostname\n\t$hostname\n\t__EOF__\nfi\n],[\ndnl Settings to make before running the above.\n])\n\n\n# Add the serpa machine file to the clean list.\nbtng_serpa_dir_name=`echo ']btng_serpa_run_fn[' | sed -e ['s:^\\([^/]*\\)$:./\\1:'] -e ['s:/[^/]*$::']`;\nbtng_serpa_machine_file=\"${btng_serpa_dir_name}/serpa.machines\"\nDISTCLEANFILES=\"$DISTCLEANFILES ${btng_serpa_machine_file}\"\nCASC_AC_LOG_VAR(btng_serpa_machine_file DISTCLEANFILES, in support-serpa-run)\n\n\nundefine([btng_serpa_run_fn])\n\n\n# End macro $0\n])dnl End CASC_SUPPORT_SERPA macro.\n\ndnl Define a macro for supporting BOOST\n\nAC_DEFUN([CASC_SUPPORT_BOOST],[\n\n# Begin CASC_SUPPORT_BOOST\n# Defines boost_PREFIX boost_INCLUDES and boost_LIBS.\nAC_ARG_WITH(boost,\n[  --with-boost[=PATH]  Use BOOST and specify where BOOST is installed.],\n, with_boost=no)\n\ncase \"$with_boost\" in\n  no)\n    : Do nothing\n  ;;\n  yes)\n    # BOOST install path was not specified.\n    # Look in a couple of standard locations to probe if \n    # BOOST header files are there.\n    AC_MSG_CHECKING([for BOOST installation])\n    for dir in /usr /usr/local; do\n      if test -f ${dir}/include/boost/tr1/unordered_map.hpp; then\n        boost_PREFIX=${dir}\n        break\n      fi\n    done\n    AC_MSG_RESULT([$boost_PREFIX])\n  ;;\n  *)\n    # BOOST install path was specified.\n    AC_MSG_CHECKING([for BOOST installation])\n\n    if test -f ${with_boost}/include/boost/tr1/unordered_map.hpp; then\n        boost_PREFIX=$with_boost\n        boost_INCLUDES=\"-I${boost_PREFIX}/include\"\n        dnl Do not have to set boost_LIBS because SAMRAI does not need it (yet).\n        dnl boost_LIBS=\"-L${boost_PREFIX}/lib -lboost_regex\"\n        AC_MSG_RESULT([$boost_PREFIX])\n    else\n        AC_MSG_RESULT([$boost_PREFIX])\n        AC_MSG_ERROR([BOOST not found in $with_boost])\n    fi\n  ;;\nesac\n\n\n# END CASC_SUPPORT_BOOST\n\n])dnl End definition of CASC_SUPPORT_BOOST\n\n\ndnl\ndnl  File:           $HeadURL$\ndnl  Package:        SAMRAI\ndnl  Copyright:      (c) 1997-2010 Lawrence Livermore National Security, LLC\ndnl  Date:           $Date$\ndnl  Revision:       $LastChangedRevision$\ndnl  Description:    Misc SAMRAI macros\ndnl\n\nAC_DEFUN_ONCE([SAMRAI_MISC],[\n\nAC_ARG_ENABLE([box_counting],\n[AS_HELP_STRING([--enable-box_counting],\n   [Turns on Box and telemetry.])],\n   [\n      if test \"x$enableval\" = \"xyes\"; then\n         AC_DEFINE(BOX_TELEMETRY,1,Enable Box counting)\n      elif test \"x$enableval\" = \"x\"; then\n         AC_DEFINE(BOX_TELEMETRY,1,Enable Box counting)\n      fi\n   ],)\n]\n)\n\ndnl Define a macro for supporting Thread Building Blocks\n\nAC_DEFUN([SAMRAI_SUPPORT_TBB],[\n\n# Begin SAMRAI_SUPPORT_TBB\n# Defines tbb_PREFIX tbb_INCLUDES and tbb_LIBS.\nAC_ARG_WITH([tbb], \n   [AS_HELP_STRING([--with-tbb], \n      [Use Thread Building Blocks])],\n   [],\n   [with_tbb=no])\n\nAC_ARG_WITH([tbb-include],\n   AS_HELP_STRING([--with-tbb-include=DIR], [tbb.h is in DIR]), \n\n      for tbb_dir in $withval; do\n         TBBINCLUDE=\"$TBBINCLUDE -I$withval\"\n      done;\n      have_tbb=yes\n)\n   \nAC_ARG_WITH( [tbb-lib-dirs],\n   AS_HELP_STRING([--with-tbb-lib-dirs=DIRS],\n                  [DIRS is a space-separated list of directories containing the libraries specified by \\'--with-tbb-libs\\']),\n\n      for tbb_lib_dir in $withval; do\n         TBBLIBDIRS=\"-L$tbb_lib_dir $TBBLIBDIRS\"\n      done; \n      have_tbb=yes\n)\n\nAC_ARG_WITH([tbb-libs],\n   AS_HELP_STRING([--with-tbb-libs=LIBS], \n                  [LIBS is a space-separated list of library names needed for Thread Building Blocks, e.g., \\\"tbb tbbmalloc\\\"]),\n\n      for tbb_lib in $withval; do\n         TBBLIBS=\"$TBBLIBS -l$tbb_lib\"\n      done; \n      have_tbb=yes\n)\n\ndnl\ndnl check if we're disabling tbb support\ndnl\nif test \"$with_tbb\" = \"no\" ; then\n    AC_MSG_NOTICE([configuring without Thread Building Blocks support])\nelse\n    AC_MSG_CHECKING([for Thread Building Blocks installation])\n\n    if test -f ${with_tbb_include}/tbb.h; then\n        AC_MSG_RESULT([$TBBINCLUDE])\n    else\n        AC_MSG_RESULT([$TBBINCLUDE])\n        AC_MSG_ERROR([TBB not found in $with_tbb_include])\n    fi\n\n    if test -f ${with_tbb_lib_dirs}/libtbb.so; then\n        AC_MSG_RESULT([$TBBLIBDIRS])\n    else\n        AC_MSG_RESULT([$TBBLIBDIRS])\n        AC_MSG_ERROR([TBB libs not found in $with_tbb_lib_dirs])\n    fi\nfi\n\ndnl Test compiling an TBB application\ndnl\ndnl NOTE that AC_SEARCH_LIBS didn't work completely so\ndnl use a more complicated example program to see\ndnl if that will catch when TBB is not working.  Using one of the TBB\ndnl short tests for this.\n\nif test \"${TBBINCLUDE+set}\" = set; then\n\n   AC_REQUIRE([AC_PROG_CXX])\n   AC_MSG_CHECKING(whether Thread Building Blocks link works)\n   AC_LANG_PUSH(C++)\n   CASC_PUSH_COMPILER_STATE\n   LIBS=\"${LIBS} ${TBBLIBDIRS} ${TBBLIBS}\"\n   CXXFLAGS=\"${CXXFLAGS} ${TBBINCLUDE}\"\n   AC_LINK_IFELSE([\n/*\n    Copyright 2005-2011 Intel Corporation.  All Rights Reserved.\n\n    This file is part of Threading Building Blocks.\n\n    Threading Building Blocks is free software; you can redistribute it\n    and/or modify it under the terms of the GNU General Public License\n    version 2 as published by the Free Software Foundation.\n\n    Threading Building Blocks is distributed in the hope that it will be\n    useful, but WITHOUT ANY WARRANTY; without even the implied warranty\n    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with Threading Building Blocks; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n    As a special exception, you may use this file as part of a free software\n    library without restriction.  Specifically, if other files instantiate\n    templates or use macros or inline functions from this file, or you compile\n    this file and link it with other files to produce an executable, this\n    file does not by itself cause the resulting executable to be covered by\n    the GNU General Public License.  This exception does not however\n    invalidate any other reasons why the executable file might be covered by\n    the GNU General Public License.\n*/\n\n#include <iostream>\n#include <string>\n#include <algorithm>\n#include \"tbb/parallel_for.h\"\n#include \"tbb/blocked_range.h\"\n\nusing namespace tbb;\nusing namespace std;\nstatic const size_t N = 23;\n\nclass SubStringFinder {\n  const string str;\n  size_t *max_array;\n  size_t *pos_array;\npublic: \n  void operator() ( const blocked_range<size_t>& r ) const { \n    for ( size_t i = r.begin(); i != r.end(); ++i ) {\n      size_t max_size = 0, max_pos = 0;\n      for (size_t j = 0; j < str.size(); ++j)\n      if (j != i) {\n        size_t limit = str.size()-max(i,j);\n        for (size_t k = 0; k < limit; ++k) {\n          if (str[[i + k]] != str[[j + k]]) break;\n          if (k > max_size) {\n            max_size = k;\n            max_pos = j;\n          }\n        }\n      }\n      max_array[[i]] = max_size;\n      pos_array[[i]] = max_pos;\n    }\n  }\n  SubStringFinder(string &s, size_t *m, size_t *p) :\n    str(s), max_array(m), pos_array(p) { }\n};\n\nint main() {\n\n  string str[[N]] = { string(\"a\"), string(\"b\") };\n  for (size_t i = 2; i < N; ++i) str[[i]] = str[[i-1]]+str[[i-2]];\n  string &to_scan = str[[N-1]]; \n  size_t num_elem = to_scan.size();\n\n  size_t *max = new size_t[[num_elem]];\n  size_t *pos = new size_t[[num_elem]];\n\n  parallel_for(blocked_range<size_t>(0, num_elem ),\n               SubStringFinder( to_scan, max, pos ) );\n\n  for (size_t i = 0; i < num_elem; ++i)\n    cout << \" \" << max[[i]] << \"(\" << pos[[i]] << \")\" << endl;\n  delete[[]] pos;\n  delete[[]] max;\n  return 0;\n}\n      ], \n      samrai_tbb_compile=yes,\n      samrai_tbb_compile=no)\n   CASC_POP_COMPILER_STATE\n   AC_LANG_POP\n   AC_MSG_RESULT($samrai_tbb_compile)\n\n   if test \"$samrai_tbb_compile\" = no; then\n      AC_MSG_ERROR([TBB compile/link test failed])\n   fi\nfi\n\n# END SAMRAI_SUPPORT_TBB\n\n])dnl End definition of SAMRAI_SUPPORT_TBB\n\n\ndnl\ndnl  File:           $HeadURL$\ndnl  Package:        SAMRAI\ndnl  Copyright:      (c) 1997-2014 Lawrence Livermore National Security, LLC\ndnl  Date:           $Date$\ndnl  Revision:       $LastChangedRevision$\ndnl  Description:    Macro to control whether timers are compile into or\ndnl                  out of SAMRAI\ndnl               \ndnl                  Variable: samrai_enable_timers\ndnl                  DEFINES:  ENABLE_SAMRAI_TIMERS\ndnl\n\nAC_DEFUN_ONCE([SAMRAI_TIMERS],[\n\n# Begin SAMRAI_TIMERS\n# Defines ENABLE_SAMRAI_TIMERS if --enable-timers is specified.  This is\n# turned on by default \n\nAC_MSG_CHECKING([if SAMRAI Timers are enabled])\nAC_ARG_ENABLE([timers],\n[AS_HELP_STRING([--disable-timers],\n   [Disable SAMRAI Timers.])],\n   [\n      if test \"x$enableval\" = \"xno\"; then\n         samrai_enable_timers=\"$enableval\"\n      fi\n   ], [\n      samrai_enable_timers=\"yes\"\n   ])\n\ndnl By default, the timers are enabled.  Explicitly disabling them\ndnl means that we will not compile the timers into the code.  All\ndnl timer calls will essentially be no-ops.\ndnl\ndnl However, if timers are enabled, we'll define this symbol and\ndnl timers will be built into the code. \n\nAS_IF([test \"x$samrai_enable_timers\" = \"xyes\"], [\n   AC_DEFINE([ENABLE_SAMRAI_TIMERS],[1],[ENABLE_SAMRAI_TIMERS])\n])\nAC_MSG_RESULT([$samrai_enable_timers])\n]\n)\n\nAC_DEFUN([SAMRAI_SPLIT_LIBS_STRING],[\ndnl\ndnl Macro SAMRAI_SPLIT_LIBS_STRING\ndnl Written by Brian Gunney.\ndnl\ndnl This macro takes an automake-style LIBS string (arg1) and\ndnl splits it into the -L part (arg2, what SAMRAI usually calls\ndnl LIB_PATH) and -l part (arg3, what SAMRAI calls LIB_NAME).\ndnl The rest are also lumped into the LIB_NAME part, for lack\ndnl of generality in the SAMRAI distinction.\ndnl\ndnl I think the SAMRAI format is limitting because not all parts\ndnl if the LIBS strings can be recategorized into LIB_PATH and\ndnl LIB_NAME parts.  But this macro allows us to use macros that\ndnl conform to the standard automake format.  BTNG.\ndnl\n# Split $1 into the LIB_PATH part ($2) and the LIB_NAME part ($3)\nif test -n \"${$1}\"; then\n  for i in ${$1}; do\n    case \"$i\" in\n    -L*) $2=\"${$2} $i\" ;;\n    *) $3=\"${$3} $i\" ;;\n    esac\n  done\nfi\n])\n\ndnl $Id$\n\nAC_DEFUN([CASC_VAR_SET_BLAS],[\ndnl Provides support for the blas library.\ndnl\ndnl Arguments are:\ndnl 1. Name of variable to set to path where blas are installed.\ndnl    Nothing is done if this variable is unset.\ndnl    If you only want to look in default locations, set it to blank.\ndnl 2. Name of the INCLUDES variable similar to the automake INCLUDES variable.\ndnl    This variable is modified ONLY if it is NOT set.\ndnl 3. Name of the LIBS variable similar to the automake LIBS variable.\ndnl    This variable is modified ONLY if it is NOT set.\ndnl\ndnl If arg1 is defined, assume that the user wants blas\ndnl support.  Do so by assigning arg2 and arg3 if they are not defined.\ndnl\nif test \"${$1+set}\" = set ; then\n  # Modify the output INCLUDES variable, if it is not set.\n  if test ! \"${$2+set}\" = set ; then\n    test -n \"${$1}\" && $2=\"-I${$1}/include\"\n  fi\n  # Modify the output LIBS variable, if it is not set.\n  if test ! \"${$3+set}\" = set ; then\n    # Save LIBS for later recovery.\n    btng_save_LIBS=\"$LIBS\";\n    # Extra libraries, if any, required by this check.\n    btng_extra_libs=\"$libz_LIBS -lm\"\n    # If path is given, add path to extra flag for library search.\n    test -n \"${$1}\" && btng_extra_libs=\"-L${$1}/lib $btng_extra_libs\"\n    # Look for library.\n    AC_SEARCH_LIBS([daxpy_],blas,[\n      CASC_AC_LOG_VAR(LIBS,After finding blas flag)\n      # Action if found ...\n      # Extract modifications to LIB into library-specific LIBS variable.\n      $3=`echo \" $LIBS\" | sed \"s! $btng_save_LIBS!!\"`;\n      test -n \"${$1}\" && $3=\"-L${$1}/lib ${$3}\"\n      CASC_AC_LOG_VAR($3, Found blas library flag)\n      ],[\n      # Action if NOT found ...\n      CASC_AC_LOG_VAR($3, Did not find blas library flag)\n      AC_MSG_WARN(\n[I could not systematically find the name of\nthe blas library so I am using -lblas instead.])\n      $3=\"-lblas\"\n      test -n \"${$1}\" &&\t\\\n\t$3=\"-L${$1}/lib ${$3}\"\t# Add path flag to output variable.\n      ],[$btng_extra_libs])\n    LIBS=\"$btng_save_LIBS\";\t# Restore global-use variable.\n    unset btng_extra_libs\n    unset btng_save_LIBS\n  else\n    CASC_AC_LOG(Not looking for blas because $3 is already set)\n  fi\nfi\n])dnl\n\n\n\n\nAC_DEFUN([CASC_SUPPORT_BLAS],[\ndnl Support blas library by setting the variables\ndnl blas_PREFIX, blas_INCLUDES, and blas_LIBS.\ndnl Arg1: non-empty if you want the default to be on.\ndnl\n# Begin macro CASC_SUPPORT_BLAS\n\nCASC_ARG_WITH_ENV_WRAPPER(blas, blas_PREFIX,\nifelse($1,,\n[  --with-blas[=PATH]\n\t\t\tUse blas and optionally specify where\n\t\t\tthey are installed.],\n[  --without-blas\tDo not use the blas library.]),\nif test \"${with_blas+set}\" = set; then\n  blas_PREFIX=\nelse\nifelse($1,,unset blas_PREFIX,blas_PREFIX=)\nfi\n)\n\nCASC_ARG_WITH_PREFIX(blas-includes,blas_INCLUDES,\n[  --with-blas-includes=STRING\n\t\t\tSpecify the INCLUDES flags for blas.\n\t\t\tIf not specified, and --with-blas=PATH is,\n\t\t\tthis defaults to \"-IPATH/include\".])dnl\n\nCASC_ARG_WITH_PREFIX(blas-libs,blas_LIBS,\n[  --with-blas-libs=STRING\n\t\t\tSpecify LIBS flags for blas.\n\t\t\tIf not specified, and --with-blas=PATH is,\n\t\t\tthis defaults to \"-LPATH/lib -lblas\".])dnl\n\nCASC_VAR_SET_BLAS(blas_PREFIX,blas_INCLUDES,blas_LIBS)\n\nCASC_AC_LOG_VAR(blas_PREFIX blas_INCLUDES blas_LIBS)\n# End macro CASC_SUPPORT_BLAS\n])\n\ndnl Define macros for supporting HDF5.\ndnl $Id$\n\nAC_DEFUN([CASC_VAR_SET_DL],[\ndnl Provides support for the dl (dynamic loading) library.\ndnl\ndnl Arguments are:\ndnl 1. Name of variable to set to path where dl are installed.\ndnl    Nothing is done if this variable is unset.\ndnl    If you only want to look in default locations, set it to blank.\ndnl 2. Name of the INCLUDES variable similar to the automake INCLUDES variable.\ndnl    This variable is modified ONLY if it is NOT set and the path\ndnl    is non-blank.\ndnl 3. Name of the LIBS variable similar to the automake LIBS variable.\ndnl    This variable is modified ONLY if it is NOT set.\ndnl    If the library cannot be found, this remains unset.\ndnl\ndnl If arg1 is defined, assume that the user wants dl support.\ndnl Do so by assigning arg2 and arg3 if they are not defined.\ndnl\n# Begin macro CASC_VAR_SET_DL\nif test \"${$1+set}\" = set ; then\n  # Modify the output INCLUDES variable, if it is not set.\n  if test ! \"${$2+set}\" = set ; then\n    test -n \"${$1}\" && $2=\"-I${$1}/include\"\n  fi\n  # Modify the output LIBS variable, if it is not set.\n  if test ! \"${$3+set}\" = set ; then\n    # Save LIBS for later recovery.\n    btng_save_LIBS=\"$LIBS\";\n    # Extra libraries, if any, required by this check.\n    btng_extra_libs=\"$libz_LIBS -lm\"\n    # If path is given, add path to extra flag for library search.\n    test -n \"${$1}\" && btng_extra_libs=\"-L${$1}/lib $btng_extra_libs\"\n    # Look for library.\n    AC_SEARCH_LIBS([dlopen],dl,[\n      CASC_AC_LOG_VAR(LIBS,After finding dl flag)\n      # Action if found ...\n      # Extract modifications to LIB into library-specific LIBS variable.\n      $3=`echo \" $LIBS\" | sed \"s! $btng_save_LIBS!!\"`;\n      test -n \"${$1}\" && $3=\"-L${$1}/lib ${$3}\"\n      CASC_AC_LOG_VAR($3, Found dl library flag)\n      ],[\n      # Action if NOT found ...\n      CASC_AC_LOG_VAR($3, Did not find dl library flag)\n      ],[$btng_extra_libs])\n    LIBS=\"$btng_save_LIBS\";\t# Restore global-use variable.\n    unset btng_extra_libs\n    unset btng_save_LIBS\n  else\n    CASC_AC_LOG(Not looking for dl because $3 is already set)\n  fi\nfi\n# End macro CASC_VAR_SET_DL\n])dnl\n\n\n\nAC_DEFUN([CASC_SUPPORT_DL],[\ndnl Support dl library by setting the variables\ndnl dl_PREFIX, dl_INCLUDES, and dl_LIBS.\ndnl Arg1: non-empty if you want the default to be on.\ndnl\n# Begin macro CASC_SUPPORT_DL\n\nCASC_ARG_WITH_ENV_WRAPPER(dl, dl_PREFIX,\nifelse($1,,\n[  --with-dl[=PATH]\n\t\t\tUse the dynamic loading library and optionally\n\t\t\tspecify where it is installed.],\n[  --without-dl\t\tDo not use the dynamic loading library.]),\nifelse($1,,unset dl_PREFIX; test \"${with_dl+set}\" = set && dl_PREFIX=,dl_PREFIX=))\n\nCASC_ARG_WITH_PREFIX(dl-includes,dl_INCLUDES,\n[  --with-dl-includes=STRING\n\t\t\tSpecify the INCLUDES flags for dl.\n\t\t\tIf not specified, and --with-dl=PATH is,\n\t\t\tthis defaults to \"-IPATH/include\".])dnl\n\nCASC_ARG_WITH_PREFIX(dl-libs,dl_LIBS,\n[  --with-dl-libs=STRING\n\t\t\tSpecify LIBS flags for dl.\n\t\t\tIf not specified, and --with-dl=PATH is,\n\t\t\tthis defaults to \"-LPATH/lib -ldl\".])dnl\n\nCASC_VAR_SET_DL(dl_PREFIX,dl_INCLUDES,dl_LIBS)\n# End macro CASC_SUPPORT_DL\n])\n\ndnl $Id$\n\ndnl Define macros for supporting HYPRE.\n\n\nAC_DEFUN([CASC_SUPPORT_HYPRE],[\ndnl Support hypre libraries by setting the variables\ndnl hypre_PREFIX, hypre_INCLUDES, and hypre_LIBS.\ndnl Arg1: empty if you want the default to be off.\ndnl\n# Begin macro CASC_SUPPORT_HYPRE\nCASC_ARG_WITH_ENV_WRAPPER(hypre, hypre_PREFIX,\nifelse($1,,\n[  --with-hypre[=PATH]\tUse HYPRE and optionally specify where it is installed.],\n[  --without-hypre\tDo not use the HYPRe library.]),\nifelse($1,,if test \"$with_hypre\" = '' ; then unset hypre_PREFIX; else hypre_PREFIX=; fi, hypre_PREFIX=)\n)\nCASC_VAR_SET_HYPRE(hypre_PREFIX,hypre_INCLUDES,hypre_LIBS)\nCASC_AC_LOG_VAR(hypre_PREFIX hypre_INCLUDES hypre_LIBS)\nif test \"${hypre_PREFIX+set}\" = set; then\n  btng_save_cppflags=$CPPFLAGS\n\n  # Add hypre include flags to cpp so we can examine its header file.\n  CPPFLAGS=\"$hypre_INCLUDES $CPPFLAGS\"\n  CASC_AC_LOG_VAR(hypre_INCLUDES CPPFLAGS)\n\n  # Check if HYPRE header is ok.\n  AC_CHECK_HEADER(HYPRE_config.h,:,\n    [AC_MSG_ERROR(Problems checking HYPRE_config.h)])\n\n  # Check if HYPRE was compiled with parallelism.\n  AC_MSG_CHECKING(if hypre is serial or parallel)\n  AC_EGREP_CPP([^HYPRE_SEQUENTIAL_IS_DEFINED$], [\n#include <HYPRE_config.h>\n#ifdef HYPRE_SEQUENTIAL\nHYPRE_SEQUENTIAL_IS_DEFINED\n#endif\n    ],\n    hypre_PARALLELISM=serial,\n    hypre_PARALLELISM=parallel)\n  AC_MSG_RESULT($hypre_PARALLELISM)\n\n  # Reset cpp after checking hypre header file.\n  CPPFLAGS=$btng_save_cppflags\n  unset btng_save_cppflags\n\n  CASC_AC_LOG_VAR(CPPFLAGS)\n  CASC_AC_LOG_VAR(hypre_config_file hypre_PARALLELISM)\nfi\n# End macro CASC_SUPPORT_HYPRE\n])\n\n\nAC_DEFUN([CASC_VAR_SET_HYPRE],[\ndnl Provides support for the blas and lapack libraries.\ndnl\ndnl Arguments are:\ndnl 1. Name of variable to set to path where hypre is installed.\ndnl    Nothig is done if this variable is unset.\ndnl 2. Name of the INCLUDES variable similar to the automake INCLUDES variable.\ndnl    This variable is modified ONLY if it is NOT set.\ndnl 3. Name of the LIBS variable similar to the automake LIBS variable.\ndnl    This variable is modified ONLY if it is NOT set.\ndnl\ndnl If arg1 is defined, assume that the user wants blas and lapack\ndnl support.  Do so by assigning arg2 and arg3 if they are not defined.\ndnl\n# Begin macro CASC_VAR_SET_HYPRE\nif test \"${$1+set}\" = set ; then\n  if test ! \"${$2+set}\" = set ; then\n    test -n \"${$1}\" && $2=\"-I${$1}/include\"\n  fi\n  if test ! \"${$3+set}\" = set ; then\n    $3='-lHYPRE'\n    if test -n \"${$1}\" ; then\n      for i in ${$3} ; do\n\ttmp_name=`echo $i | sed 's/^-l//'`\n        if test ! -f \"${$1}/lib/lib${tmp_name}.a\" && \\\n          test ! -f \"${$1}/lib/lib${tmp_name}.so\"; then\n          AC_MSG_WARN(Library file for ${tmp_name} is missing from ${$1}/lib.)\n        fi\n      done\n      $3=\"-L${$1}/lib ${$3}\"\n    fi\n  fi\nfi\n# End macro CASC_VAR_SET_HYPRE\n])dnl\n\ndnl $Id$\n\nAC_DEFUN([CASC_C_IEEE_FLOAT],[\ndnl Check on certain declarations in the float.h file:\ndnl FLT_SNAN DBL_SNAN\ndnl\ndnl ac_define ..._IS_BROKEN for symbols that are not defined.\ndnl\n# Begin macro CASC_IEEE_FLOAT\n\nAC_LANG_C\n\nAC_EGREP_CPP([^nan is broken],\n[#include <float.h>\n#ifndef NAN\nnan is broken\n#endif],\nAC_DEFINE([NAN_IS_BROKEN],[1],[Define if NAN is not in float.h])\nCASC_AC_LOG([\"NAN is broken (not in float.h)\"]),\nCASC_AC_LOG([\"NAN is ok (in float.h)\"])\n)\n\nAC_EGREP_CPP([^flt snan is broken],\n[#include <float.h>\n#ifndef FLT_SNAN\nflt snan is broken\n#endif],\nAC_DEFINE([FLT_SNAN_IS_BROKEN],[1],[Define if FLT_SNAN is not in float.h])\nCASC_AC_LOG([\"FLT_NAN is broken (not in float.h)\"]),\nCASC_AC_LOG([\"FLT_NAN is ok (in float.h)\"])\n)\n\nAC_EGREP_CPP([^dbl snan is broken],\n[#include <float.h>\n#ifndef DBL_SNAN\ndbl snan is broken\n#endif],\nAC_DEFINE([DBL_SNAN_IS_BROKEN],[1],[Define if DBL_SNAN is not in float.h])\nCASC_AC_LOG([\"DBL_NAN is broken (not in float.h)\"]),\nCASC_AC_LOG([\"DBL_NAN is ok (in float.h)\"])\n)\n\nAC_EGREP_CPP([^flt snan is broken],\n[#include <float.h>\n#ifndef FLT_MAX\nflt snan is broken\n#endif],\nAC_DEFINE([FLT_MAX_IS_BROKEN],[1],[Define if FLT_MAX is not in float.h])\nCASC_AC_LOG([\"FLT_MAX is broken (not in float.h)\"]),\nCASC_AC_LOG([\"FLT_MAX is ok (in float.h)\"])\n)\n\nAC_EGREP_CPP([^dbl snan is broken],\n[#include <float.h>\n#ifndef DBL_MAX\ndbl snan is broken\n#endif],\nAC_DEFINE([DBL_MAX_IS_BROKEN],[1],[Define if DBL_MAX is not in float.h])\nCASC_AC_LOG([\"DBL_MAX is broken (not in float.h)\"]),\nCASC_AC_LOG([\"DBL_MAX is ok (in float.h)\"])\n)\n\n# End macro CASC_IEEE_FLOAT\n])dnl\n\ndnl $Id$\n\nAC_DEFUN([CASC_VAR_SET_LAPACK],[\ndnl Provides support for the lapack library.\ndnl\ndnl Arguments are:\ndnl 1. Name of variable to set to path where lapack are installed.\ndnl    Nothig is done if this variable is unset.\ndnl 2. Name of the INCLUDES variable similar to the automake INCLUDES variable.\ndnl    This variable is modified ONLY if it is NOT set.\ndnl 3. Name of the LIBS variable similar to the automake LIBS variable.\ndnl    This variable is modified ONLY if it is NOT set.\ndnl\ndnl If arg1 is defined, assume that the user wants lapack\ndnl support.  Do so by assigning arg2 and arg3 if they are not defined.\ndnl\nif test \"${$1+set}\" = set ; then\n  # Modify the output INCLUDES variable, if it is not set.\n  if test ! \"${$2+set}\" = set ; then\n    test -n \"${$1}\" && $2=\"-I${$1}/include\"\n  fi\n  # Modify the output LIBS variable, if it is not set.\n  if test ! \"${$3+set}\" = set ; then\n    # Save LIBS for later recovery.\n    btng_save_LIBS=\"$LIBS\";\n    # Extra libraries, if any, required by this check.\n    btng_extra_libs=\"$libz_LIBS -lm\"\n    # If path is given, add path to extra flag for library search.\n    test -n \"${$1}\" && btng_extra_libs=\"-L${$1}/lib $btng_extra_libs\"\n    # Look for library.\n    AC_SEARCH_LIBS([xerbla_],lapack,[\n      CASC_AC_LOG_VAR(LIBS,After finding lapack flag)\n      # Action if found ...\n      # Extract modifications to LIB into library-specific LIBS variable.\n      $3=`echo \" $LIBS\" | sed \"s! $btng_save_LIBS!!\"`;\n      test -n \"${$1}\" && $3=\"-L${$1}/lib ${$3}\"\n      CASC_AC_LOG_VAR($3, Found lapack library flag)\n      ],[\n      # Action if NOT found ...\n      CASC_AC_LOG_VAR($3, Did not find lapack library flag)\n      AC_MSG_WARN(\n[I could not systematically find the name of\nthe lapack library so I am using -llapack instead.])\n      $3=\"-llapack\"\n      test -n \"${$1}\" &&\t\\\n\t$3=\"-L${$1}/lib ${$3}\"\t# Add path flag to output variable.\n      ],[$btng_extra_libs])\n    LIBS=\"$btng_save_LIBS\";\t# Restore global-use variable.\n    unset btng_extra_libs\n    unset btng_save_LIBS\n  else\n    CASC_AC_LOG(Not looking for lapack because $3 is already set)\n  fi\nfi\n])dnl\n\n\n\n\nAC_DEFUN([CASC_SUPPORT_LAPACK],[\ndnl Support lapack library by setting the variables\ndnl lapack_PREFIX, lapack_INCLUDES, and lapack_LIBS.\ndnl Arg1: non-empty if you want the default to be on.\ndnl\n# Begin macro CASC_SUPPORT_LAPACK\n\nCASC_ARG_WITH_ENV_WRAPPER(lapack, lapack_PREFIX,\nifelse($1,,\n[  --with-lapack[=PATH]\n\t\t\tUse lapack and optionally specify where\n\t\t\tthey are installed.],\n[  --without-lapack\tDo not use the lapack library.]),\nif test \"${with_lapack+set}\" = set; then\n  lapack_PREFIX=\nelse\nifelse($1,,unset lapack_PREFIX,lapack_PREFIX=)\nfi\n)\n\nCASC_ARG_WITH_PREFIX(lapack-includes,lapack_INCLUDES,\n[  --with-lapack-includes=STRING\n\t\t\tSpecify the INCLUDES flags for lapack.\n\t\t\tIf not specified, and --with-lapack=PATH is,\n\t\t\tthis defaults to \"-IPATH/include\".])dnl\n\nCASC_ARG_WITH_PREFIX(lapack-libs,lapack_LIBS,\n[  --with-lapack-libs=STRING\n\t\t\tSpecify LIBS flags for lapack.\n\t\t\tIf not specified, and --with-lapack=PATH is,\n\t\t\tthis defaults to \"-LPATH/lib -llapack\".])dnl\n\nCASC_VAR_SET_LAPACK(lapack_PREFIX,lapack_INCLUDES,lapack_LIBS)\n\nCASC_AC_LOG_VAR(lapack_PREFIX lapack_INCLUDES lapack_LIBS)\n# End macro CASC_SUPPORT_LAPACK\n])\n\ndnl $Id$\n\nAC_DEFUN([CASC_VAR_SET_NSL],[\ndnl Provides support for the nsl library.\ndnl\ndnl Arguments are:\ndnl 1. Name of variable to set to path where nsl are installed.\ndnl    Nothing is done if this variable is unset.\ndnl    If you only want to look in default locations, set it to blank.\ndnl 2. Name of the INCLUDES variable similar to the automake INCLUDES variable.\ndnl    This variable is modified ONLY if it is NOT set and the path\ndnl    is non-blank.\ndnl 3. Name of the LIBS variable similar to the automake LIBS variable.\ndnl    This variable is modified ONLY if it is NOT set.\ndnl    If the library cannot be found, this remains unset.\ndnl\ndnl If arg1 is defined, assume that the user wants nsl support.\ndnl Do so by assigning arg2 and arg3 if they are not defined.\ndnl\nif test \"${$1+set}\" = set ; then\n  # Modify the output INCLUDES variable, if it is not set.\n  if test ! \"${$2+set}\" = set ; then\n    test -n \"${$1}\" && $2=\"-I${$1}/include\"\n  fi\n  # Modify the output LIBS variable, if it is not set.\n  if test ! \"${$3+set}\" = set ; then\n    # Save LIBS for later recovery.\n    btng_save_LIBS=\"$LIBS\";\n    # Extra libraries, if any, required by this check.\n    btng_extra_libs=\"$libz_LIBS -lm\"\n    # If path is given, add path to extra flag for library search.\n    test -n \"${$1}\" && btng_extra_libs=\"-L${$1}/lib $btng_extra_libs\"\n    # Look for library.\n    AC_SEARCH_LIBS([getnetname],nsl,[\n      CASC_AC_LOG_VAR(LIBS,After finding nsl flag)\n      # Action if found ...\n      # Extract modifications to LIB into library-specific LIBS variable.\n      $3=`echo \" $LIBS\" | sed \"s! $btng_save_LIBS!!\"`;\n      test -n \"${$1}\" && $3=\"-L${$1}/lib ${$3}\"\n      CASC_AC_LOG_VAR($3, Found nsl library flag)\n      ],[\n      # Action if NOT found ...\n      CASC_AC_LOG_VAR($3, Did not find nsl library flag)\n      ],[$btng_extra_libs])\n    LIBS=\"$btng_save_LIBS\";\t# Restore global-use variable.\n    unset btng_extra_libs\n    unset btng_save_LIBS\n  else\n    CASC_AC_LOG(Not looking for nsl because $3 is already set)\n  fi\nfi\n])dnl\n\n\n\nAC_DEFUN([CASC_SUPPORT_NSL],[\ndnl Support nsl library by setting the variables\ndnl nsl_PREFIX, nsl_INCLUDES, and nsl_LIBS.\ndnl Arg1: non-empty if you want the default to be on.\ndnl\n# Begin macro CASC_SUPPORT_NSL\n\nCASC_ARG_WITH_ENV_WRAPPER(nsl, nsl_PREFIX,\nifelse($1,,\n[  --with-nsl[=PATH]\n\t\t\tUse nsl and optionally specify where\n\t\t\tit is installed.],\n[  --without-nsl\tDo not use the nsl library.]),\nifelse($1,,unset nsl_PREFIX; test \"${with_nsl+set}\" = set && nsl_PREFIX=,nsl_PREFIX=))\nCASC_AC_LOG_VAR(nsl_PREFIX nsl_INCLUDES nsl_LIBS, before looking)\n\nCASC_ARG_WITH_PREFIX(nsl-includes,nsl_INCLUDES,\n[  --with-nsl-includes=STRING\n\t\t\tSpecify the INCLUDES flags for nsl.\n\t\t\tIf not specified, and --with-nsl=PATH is,\n\t\t\tthis defaults to \"-IPATH/include\".])dnl\n\nCASC_ARG_WITH_PREFIX(nsl-libs,nsl_LIBS,\n[  --with-nsl-libs=STRING\n\t\t\tSpecify LIBS flags for nsl.\n\t\t\tIf not specified, and --with-nsl=PATH is,\n\t\t\tthis defaults to \"-LPATH/lib -lnsl\".])dnl\n\nCASC_VAR_SET_NSL(nsl_PREFIX,nsl_INCLUDES,nsl_LIBS)\n# End macro CASC_SUPPORT_NSL\n])\n\ndnl $Id$\n\nAC_DEFUN([CASC_SUPPORT_PETSC],[\n# Begin macro SUPPORT_PETSC\ndnl Support PETSC by setting PETSC_DIR\ndnl petsc_INCLUDE and petsc_LIBS.\ndnl Also set PETSC_VERSION_MAJOR, PETSC_VERSION_MINOR and\ndnl PETSC_VERSION_SUBMINOR to indicate PETSc version.\ndnl\ndnl Support --with-petsc-mpiuni to use PETSC uniprocessor MPI library.\ndnl\ndnl Arg1: non-empty if you want the default to be on.\ndnl\ndnl This version supports PETSc-2.1.0 and later.\n\n# Set PETSC_DIR to the PETSC root directory.\nCASC_ARG_WITH_PREFIX(petsc,PETSC_DIR,\nifelse($1,,\n[[  --with-petsc=PATH\tSupport PETSc, and specify PETSC top-level directory.\n\t\t\tSetting PETSC_DIR is equivalent to this.]],\n[  --without-petsc\tDo not support PETSc.])\n,\n# User was not specific about specifying PETSc.\nifelse($1,,\n# PETSc should be off by default.\n# So if user specified --with-petsc, it should include a path or it is an error.\nif test \"${with_petsc+set}\" = set ; then\n  # User specified --with-petsc ambiguously.\n  AC_MSG_ERROR([You must specify a path with --with-petsc=...])\nelse\n  # User did not specify --with-petsc, so turn it off.\n  unset PETSC_DIR;\nfi\n,\n# PETSc should be on by default.\n# So require that user say where it is or turn it off.\nAC_MSG_ERROR([You must specify either --with-petsc=... or --without-petsc.])\n))\n\n# Set version numbers (PETSC_VERSION_...) for use by configure.\n# Users can directly access these from the PETSc header file.\nif test \"${PETSC_DIR+set}\" = set; then\n[\nPETSC_VERSION_MAJOR=`sed -e '/^[ \\t]\\{0,\\}#define PETSC_VERSION_MAJOR/!d' -e 's/.\\{0,\\}[ \\t]\\{1,\\}//' $PETSC_DIR/include/petscversion.h`\nPETSC_VERSION_MINOR=`sed -e '/^[ \\t]\\{0,\\}#define PETSC_VERSION_MINOR/!d' -e 's/.\\{0,\\}[ \\t]\\{1,\\}//' $PETSC_DIR/include/petscversion.h`\nPETSC_VERSION_SUBMINOR=`sed -e '/^[ \\t]\\{0,\\}#define PETSC_VERSION_SUBMINOR/!d' -e 's/.\\{0,\\}[ \\t]\\{1,\\}//' $PETSC_DIR/include/petscversion.h`\n]\nfi\nCASC_AC_LOG_VAR(PETSC_VERSION_MAJOR PETSC_VERSION_MINOR PETSC_VERSION_SUBMINOR)\n\n# Set PETSC_MPIUNI.\nCASC_ARG_WITH_ENV_WRAPPER(petsc-mpiuni,PETSC_MPIUNI,\n[  --with-petsc-mpiuni\tUse the PETSC uniprocessor MPI library],\n# By default, do not use the PETSC uniprocessor MPI library.\nunset PETSC_MPIUNI\n)\n\n# Set PETSC_LIBFILES\nunset PETSC_LIBFILES\nAC_ARG_WITH(petsc-libfiles,\n[  --with-petsc-libfiles\n\t\t\tSpecify explit PETSc library files instead\n\t\t\tof -L and -l flags (may help some debuggers)],\ntest \"$with_petsc_libfiles\" = yes && PETSC_LIBFILES=yes)\n\n\nif test \"${PETSC_DIR+set}\" = set; then\n  # Set up PETSC only if PETSC_DIR is defined.\n\n  if test ! -d \"$PETSC_DIR\"; then\n    AC_MSG_WARN([PETSC directory ($PETSC_DIR) does not look right])\n  fi\n  export PETSC_DIR\n\n  petsc_INCLUDES=\"-I$PETSC_DIR/include\"\n  # Currently, I'm not entirely sure why we have to explicitly specify\n  # the src/vec directory in the include path.  But there is at least\n  # one required file there that cannot be found in the include directory.\n\n# SGS Support latter version of PETSc\n# Try new structure and then old\n  if test -d \"${PETSC_DIR}/lib\"; then\n    petsc_LIBDIR=\"${PETSC_DIR}/lib\"\n  else \n    AC_MSG_WARN([PETSC lib directory does not look as expected])\n  fi\n\n\n  # Issue the -L flag if not specifying PETSc libraries by file names.\n  test ! \"${PETSC_LIBFILES+set}\" = set && petsc_LIBS=\"-L${petsc_LIBDIR}\"\n\n  # Build up a list of PETSC library files.\n# SGS\n  petsc_libs_ls1=`cd ${petsc_LIBDIR} && echo lib*.*`\n\n  if test -n \"$petsc_libs_ls1\"; then\n    unset petsc_libs_ls\n    for i in $petsc_libs_ls1; do\n      j=`echo $i | sed -e 's/lib//' -e 's/\\.a$//' -e 's/\\.so.*//'`\n      if echo \"$petsc_libs_ls\" | grep -v \" $j \" > /dev/null; then # Note padding!\n        petsc_libs_ls=\"$petsc_libs_ls $j \";\t# Note space padding!\n      fi\n    done\n  fi\n  # Remove mpiuni from the list of PETSC libraries unless user asked for it.\n  if test ! \"${PETSC_MPIUNI}\" = yes; then\n    petsc_libs_ls=`echo \"$petsc_libs_ls\" | sed 's/ mpiuni //g'`\n  fi\n  # Move some low-level libraries to the end to ensure resolution\n  # for linkers that only make one pass.\n  for i in petscmat petscvec petsc; do\n    petsc_libs_ls=`echo \"$petsc_libs_ls\" | sed 's/\\(.*\\)\\( \\{0,1\\}'\"$i\"'\\{0,1\\} \\)\\(.*\\)/\\1 \\3 \\2/g'`\n  done\n  # Build up petsc_LIBS string using library names.\n  CASC_AC_LOG_VAR(petsc_libs_ls1 petsc_libs_ls)\n  if test -n \"$petsc_libs_ls\"; then\n    if test \"${PETSC_LIBFILES+set}\" = set; then\n      for i in $petsc_libs_ls; do\n# SGS\n        petsc_LIBS=\"$petsc_LIBS ${petsc_LIBDIR}/lib${i}.a\"\n      done\n    else\n      for i in $petsc_libs_ls; do\n        petsc_LIBS=\"$petsc_LIBS -l$i\"\n      done\n    fi\n  fi\n\n  CASC_AC_LOG_VAR(PETSC_DIR petsc_INCLUDES petsc_LIBS PETSC_MPIUNI)\n\nfi\n# End macro SUPPORT_PETSC\n])\n\ndnl $Id$\n\n\n\nAC_DEFUN([CASC_C_RESTRICT],[\n\n# Start macro CASC_C_RESTRICT\n\nAC_MSG_CHECKING(checking whether restrict is broken)\n\nAC_CACHE_VAL(btng_cv_c_restrict_broken, [\n\n  AC_LANG_PUSH([C++])\n  AC_TRY_COMPILE([\nstruct array_test {\n  double *ptr;\n  int i0;\n  array_test(double *p, int i);\n  double &value(int i) const;\n};\narray_test::array_test(double *p, int i) : ptr(p), i0(i) {}\ndouble &array_test::value(int i) __restrict__ const {\n  return ptr[i-i0];\n}\n    ],[\ndouble a[10];\narray_test at(a,20);\nat.value(5) = 5;\n    ],\n    # restrict is not broken.\n    btng_cv_c_restrict_broken=no\n    ,\n    # restrict is broken.\n    btng_cv_c_restrict_broken=yes\n  )\tdnl End AC_TRY_COMPILE call\n\n  AC_LANG_POP([C++])\n\n])\tdnl End AC_CACHE_VAL call\n\nAC_MSG_RESULT($btng_cv_c_restrict_broken)\n\nif test \"$btng_cv_c_restrict_broken\" = yes; then\n  AC_DEFINE([RESTRICT_IS_BROKEN],1,Define if restrict is not properly supported)\nfi\n\n\n# End macro CASC_C_RESTRICT\n\n])\tdnl End of CASC_C_RESTRICT definition.\n\ndnl $Id$\n\n\nAC_DEFUN([CASC_LIBS_ADD_RPATH],[\n# Begin macro CASC_LIBS_ADD_RPATH\ndnl Support RPATH by going in a LIBS string and, for each -L flag,\ndnl add a flag immediately following it to set the RPATH, for\ndnl paths that contain shared libraries.\ndnl\ndnl arg1 is a LIBS string.\ndnl arg2 is the name of the variable to set to the new LIBS string.\ndnl arg3 is non-empty to use id of the C++ compiler instead of the C compiler.\n\n\ndnl Determine which compiler is being used, because\ndnl the syntax of the RPATH flag depends on the compiler.\ndnl Use the C++ compiler and assume the C compiler\ndnl is from the same family.\nAC_REQUIRE([CASC_INFO_CC_CXX_ID])\n\n\nAC_ARG_ENABLE(rpath,\n[  --enable-rpath=SYNTAX\tWhen linking add syntax for rpath for every\n\t\t\t-L option that points to a directory with .so\n\t\t\tfiles in it.  If SYNTAX is omitted, an attempt\n\t\t\tis made to find out the correct rpath syntax for\n\t\t\tthe compiler being used.]\n,,enable_rpath=yes)\n\nif test \"$enable_rpath\" = yes; then\n  # Determine the proper rpath syntax.\n\n  AC_LANG_SAVE\n\n  ifelse([$3],,\n  AC_LANG_C\n  btng_rpath_compiler_id=\"$CC_ID\",\n  AC_LANG_CPLUSPLUS\n  btng_rpath_compiler_id=\"$CXX_ID\"\n  )\n\n\n  # Unset the rpath syntax variable so we can check on whether we\n  # found a way to set it.\n  unset btng_rpath_beginning;\n\n  # Determine, based on the compiler, the syntax for specifying RPATH.\n  # It should be of the form \"$btng_rpath_beginning$the_path\", where\n  # btng_rpath_beginning is the compiler-dependent part.\n  case \"$btng_rpath_compiler_id\" in\n    gnu)\n      # This compiler may use a variable rpath syntax because it may use\n      # the native loader.\n      CASC_LIBS_FIND_RPATH(btng_rpath_beginning,\n\t['---bogus-flag-meant-to-cause-error' '-Wl,-rpath ' '-Wl,-R' '-Wl,-R '])\n    ;;\n    intel)\n      # This compiler may use a variable rpath syntax because it may use\n      # the native loader.\n      CASC_LIBS_FIND_RPATH(btng_rpath_beginning,\n\t['---bogus-flag-meant-to-cause-error' '-Wl,-rpath ' '-Wl,-R' '-Wl,-R '])\n      if test \"$btng_rpath_beginning\" = \"---bogus-flag-meant-to-cause-error\"; then\n        # Do not rely on the compiler return value to test for syntax\n        # Guess the syntax assuming the native loader will be used.\n        case \"$host_os\" in\n          linux*) btng_rpath_beginning='-Wl,-rpath ' ;;\n          sun*|solaris*) btng_rpath_beginning='-R' ;;\n          osf*) btng_rpath_beginning='-rpath ' ;;\n          *) btng_rpath_beginning='' ;;\n        esac\n        AC_MSG_WARN(\n  [Your compiler ifelse($3,,$CC,$CXX) returns 0 even when it is\n  given a bogus flag.  Therefore, I cannot find the proper syntax\n  for the rpath for this compiler.  I have resorted to a guess that\n  may not be correct: '$btng_rpath_beginning'.\n  You can override this by using --enable-rpath=SYNTAX])\n      fi\n    ;;\n    sunpro)\n      # This compiler may use a variable rpath syntax.\n      CASC_LIBS_FIND_RPATH(btng_rpath_beginning,['---bogus-flag-meant-to-cause-error' '-R' '-R '])\n    ;;\n    kai)\n      # The KAI compilers use the system native loader.\n      #\n      # On some platforms (PC/Linux at least), this compiler seems\n      # to return 0 even if it encounters error, thus it can return\n      # the first guess for the rpath syntax, even if the guess is\n      # wrong.  We try to catch this by making the first flag bogus.\n      # If the compiler accepts this flag (by returning 0), we know\n      # it is wrong and we resort to an alternative method for\n      # getting the rpath syntax.\n      CASC_LIBS_FIND_RPATH(btng_rpath_beginning,\n\t['---bogus-flag-meant-to-cause-error' '-R' '-R ' '-rpath ' '-Wl,-rpath ' '-Wl,-R' '-Wl,-R '])\n      if test \"$btng_rpath_beginning\" = \"---bogus-flag-meant-to-cause-error\"; then\n        # Do not rely on the compiler return value to test for syntax\n        # Guess the syntax assuming the native loader will be used.\n        case \"$host_os\" in\n          linux*) btng_rpath_beginning='-Wl,-rpath ' ;;\n          sun*|solaris*) btng_rpath_beginning='-R' ;;\n          osf*) btng_rpath_beginning='-rpath ' ;;\n          *) btng_rpath_beginning='' ;;\n        esac\n        AC_MSG_WARN(\n  [Your compiler ifelse($3,,$CC,$CXX) returns 0 even when it is\n  given a bogus flag.  Therefore, I cannot find the proper syntax\n  for the rpath for this compiler.  I have resorted to a guess that\n  may not be correct: '$btng_rpath_beginning'.\n  You can override this by using --enable-rpath=SYNTAX])\n      fi\n    ;;\n    *)\n      CASC_LIBS_FIND_RPATH(btng_rpath_beginning)\n    ;;\n  esac\n  CASC_AC_LOG_VAR(host_os CC_ID CXX_ID btng_rpath_compiler_id btng_rpath_beginning, forming rpaths)\n\n  AC_LANG_RESTORE\n\n  # It is valid to have btng_rpath_beginning be blank.\n  # but if it is unset, we could not find a way to set it.\n  if test ! \"${btng_rpath_beginning+set}\" = set; then\n    AC_MSG_WARN(I cannot find a working syntax for setting relocatable paths)\n  fi\n\nelif test ! \"${enable_rpath}\" = no; then\n\n  # User has provided the rpath syntax.\n  btng_rpath_beginning=$enable_rpath\n\nfi;\t# End block determining the proper rpath syntax.\n\n\n# Use the rpath syntax.\nif test \"${btng_rpath_beginning+set}\" = set\t\\\n  && test -n \"${btng_rpath_beginning}\" ; then\n  # Add the RPATH flags only if we know the syntax for it,\n  # and if it is needed as indicated by a non-empty btng_rpath_beginning.\n\n  # Loop through the flags in $1, looking for the -L flag,\n  # and append RPATH flag to each one found, if the the\n  # path specified by the flag includes shared libraries.\n  for i in ${$1}; do\n    btng_new_$2=\"${btng_new_$2} ${i}\"\n    btng_tmp_addl_string=`echo $i | sed 's/^-L//'`\n    test \"$btng_tmp_addl_string\" = \"$i\" && continue\t# does not contain -L.\n    test -d \"$btng_tmp_addl_string\" || continue;\t# directory nonexistent.\n    test \"`echo $btng_tmp_addl_string/*.so`\" = \"$btng_tmp_addl_string/*.so\" \\\n      && continue;\t# does not contain shared libraries.\n    echo \"${btng_new_$2}\"\t\\\n      | grep \".*${btng_rpath_beginning}[[ \t]]*${btng_tmp_addl_string}\"\t\\\n      > /dev/null\t\\\n      && continue\t# already contains the flag we want to add.\n    btng_new_$2=\"${btng_new_$2} ${btng_rpath_beginning}${btng_tmp_addl_string}\"\n  done\n  $2=\"${btng_new_$2}\"\n\nfi\n\ndnl Now, arg2 should be similar to arg1, but with the additional RPATH flags.\n\n# End macro CASC_LIBS_ADD_RPATH\n])\n\nAC_DEFUN([CASC_LIBS_FIND_RPATH],[\n# Begin macro CASC_LIBS_FIND_RPATH\ndnl Find the correct rpath syntax from the list given in arg1.\ndnl arg1: variable to set to the syntax string\ndnl arg2: list of syntaxes to try;\ndnl   if blank, a large number of syntaxes will be tried.\ndnl\ndnl arg1 is list of possible rpath syntaxes to try.\ndefine(btng_possible_rpaths,dnl\n[ifelse($2,,['-R ' '-R' '-rpath ' '-Wl,-rpath ' '-Wl,-R ' '-Wl,-R'],[[$2]])])\n  btng_save_LIBS=\"$LIBS\";\n  for i in btng_possible_rpaths; do\n    LIBS=\"${i}/usr/local\"\n    AC_TRY_LINK(,,$1=\"$i\", unset $1)\n    # Intel compiler does not fail on bad args but warning message is\n    # created. If warning is found in the log then continue searching\n    # for syntax as the current one is no good.  If warning is not\n    # found use return status of link attempt to determine if\n    # parameter was accepted by the compiler.\n    SEARCH=`echo \"ignoring unknown option '${LIBS}'\" | sed -e \"s/---/-f-/\"`\n    if ( grep \"$SEARCH\" config.log ) >/dev/null 2>&1\n    then \n\t:\n    else \n        if test \"${$1+set}\" = set; then break; fi\n    fi\n  done\n  LIBS=\"$btng_save_LIBS\"\nundefine([btng_possible_rpaths])\n# End macro CASC_LIBS_FIND_RPATH\n])\n\ndnl Define macros for supporting z compression library.\ndnl $Id$\n\n\nAC_DEFUN([CASC_SUPPORT_SPOOLES],[\ndnl Support spooles library by setting the variables\ndnl spooles_PREFIX, spooles_INCLUDES, and spooles_LIBS.\ndnl Arg1: non-empty if you want the default to be on.\ndnl\n# Begin macro CASC_SUPPORT_SPOOLES\n\nifelse($1,,unset spooles_PREFIX,spooles_PREFIX=)\n\nAC_ARG_WITH(spooles,\nifelse($1,,\n[  --with-spooles[=PATH]\n\t\t\tUse spooles library and optionally specify where\n\t\t\tit is installed.],\n[  --without-spooles\tDo not use the spooles library.]),\nif test \"${with_spooles+set}\" = yes ; then\n  spooles_PREFIX=\nelif test \"${with_spooles}\" = no; then\n  unset spooles_PREFIX;\nelse\n  spooles_PREFIX=\"${with_spooles}\"\nfi\n)\n\nif test \"${spooles_PREFIX+set}\" = set; then\n  # Set spooles_LIBS and spooles_INCLUDE if they are not already set.\n  # Note that we expect library archives and headers to be\n  # directly under spooles_PREFIX rather than subdirectories\n  # lib and include of spooles_PREFIX.\n  if test ! \"${spooles_LIBS+set}\" = set; then\n    if test ! \"${spooles_PREFIX}\" = ''; then\n      spooles_LIBS=\"-L${spooles_PREFIX}\"\n    fi\n    spooles_LIBS=\"${spooles_LIBS} -lspoolesMPI -lspooles\"\n  fi\n  if test ! \"${spooles_INCLUDES+set}\" = set ; then\n    if test ! \"${spooles_PREFIX}\" = ''; then\n      spooles_INCLUDES=\"-I${spooles_PREFIX}\"\n    fi\n  fi\nfi\n\nCASC_AC_LOG_VAR(spooles_PREFIX spooles_LIBS spooles_INCLUDES)\n\n# End macro CASC_SUPPORT_SPOOLES\n])\n\ndnl $Id$\n\nAC_DEFUN([CASC_FIND_CORRECT_HEADER_FILENAME],[\ndnl There is no standard naming convention for STL header files.\ndnl This macro helps to pick the right name out of a list.\ndnl Arg1 is the variable to set to the found file name.\ndnl Arg2 is the list of file names to search\ndnl Arg3 are additional headers to include (for use by AC_TRY_COMPILE)\ndnl Arg4 is the code body to test if the included file works.\n# Start macro $0\n  AC_LANG_SAVE\n  AC_LANG_CPLUSPLUS\n  $1=\n  AC_REQUIRE([CASC_TYPE_BOOL])\n  CPPFLAGS_SAVE=$CPPFLAGS\n  for file in $2; do\n    AC_CHECK_HEADER($file, btng_header_found=1, unset btng_header_found)\n    if test -n \"$btng_header_found\"; then\n      AC_MSG_CHECKING(whether $file is the header sought)\n      CASC_AC_LOG(found header file $file)\n      CPPFLAGS=\"$CPPFLAGS_SAVE $CXX_OPTIONS\"\n      AC_TRY_COMPILE(\n        [\n/* macro $0 checking for $file */\n#ifdef BOOL_IS_BROKEN\ntypedef int bool;\n#define true 1\n#define false 0\n#endif\n\t$3\n        #include <$file>\nusing namespace std;\n],\n        $4,\n\tAC_MSG_RESULT(yes)\n        $1=\"$file\",\n\tAC_MSG_RESULT(no)\n      )\n    fi\n    if test -n \"${$1}\"; then break; fi\n  done\n  AC_LANG_RESTORE\n  CPPFLAGS=$CPPFLAGS_SAVE\n# End macro $0\n])\n\n\n\n\nAC_DEFUN([CASC_TREAT_VARIABLE_HEADER_FILENAME],[\ndnl CASC_TREAT_VARIABLE_HEADER_FILENAME is a generic macro\ndnl used by (and using) other macros in this file.\ndnl It determines, from a given list, the correct name of\ndnl a header file required to compile a test code body.\ndnl It takes a list of possible of the header filenames.\ndnl It reports whether each header file is the one sought\ndnl until it finds the one that is.\ndnl If none of the header filenames work:\ndnl   It issues a warning.\ndnl   It defines a ...IS_BROKEN C macro saying so.\ndnl If it finds the first header filename that works:\ndnl   It assigns a variable (..._HEADER_FILE) to the\ndnl   correct filename and call AC_DEFINE for that variable.\ndnl Arguments are:\ndnl  1: a single name representing the header sought.\ndnl  2: a list of possible header filenames.\ndnl  3: other include lines (for use in AC_TRY_COMPILE).\ndnl  4: code to test if the header file is the one being sought.\ndnl\n# Start macro $0\nAC_CACHE_VAL(btng_cv_[]translit($1,[-],[_])[]_header_filename, [\n  AC_ARG_WITH($1-header-file,\n  [  --with-$1-header-file\tSpecify name of the $1 header file.],\n  btng_cv_[]translit($1,[-],[_])[]_header_filename=$with_[]translit($1,[-],[_])[]_header_file,\n  [CASC_FIND_CORRECT_HEADER_FILENAME(btng_cv_[]translit($1,[-],[_])[]_header_filename,$2,[$3],[[$4]])]\n  )\n])\tdnl End AC_CACHE_VAL call\n# We must be able to find the $1 header file or else.\ntranslit($1,[-a-z],[_A-Z])[]_HEADER_FILE=\"$btng_cv_[]translit($1,[-],[_])[]_header_filename\"\nif test -z \"$translit($1,[-a-z],[_A-Z])[]_HEADER_FILE\"; then\n  translit($1,[-],[_])[]_header_is_broken=1\n  AC_MSG_WARN([cannot find a working $1 header file.\n      Names tried: $2\n      If you know the correct hame of this header file,\n      use the option --with-[]$1[]-header-file=FILENAME\n      with configure.])\n  AC_DEFINE(translit($1,[-a-z],[_A-Z])[]_IS_BROKEN,[1],[The $1 header file is broken])\n  CASC_AC_LOG(header file $1 is broken)\nelse\n  unset translit($1,[-],[_])[]_header_is_broken\n  AC_DEFINE_UNQUOTED(translit($1,[-a-z],[_A-Z])[]_HEADER_FILE,<$translit($1,[-a-z],[_A-Z])[]_HEADER_FILE>,\n    [Header file for $1])\n  CASC_AC_LOG(header file $1 is ok)\nfi\n# End macro $0\n])\tdnl end of CASC_TREAT_VARIABLE_HEADER_FILENAME definition.\n\n\n\ndnl\ndnl These are some STL headers with uncertain names.\ndnl\n\n\nAC_DEFUN([CASC_STL_STRING_HEADER_FILENAME],[\n# Start macro $0\ndnl dnl AC_MSG_CHECKING(name of the STL string header file)\nCASC_TREAT_VARIABLE_HEADER_FILENAME([stl-string],\n  [string strings string.h strings.h string.hxx strings.hxx],,\n  [std::string s; s = \"sample string\";])\n# End macro $0\n])\tdnl end of CASC_STL_STRING_HEADER_FILENAME definition.\n\n\nAC_DEFUN([CASC_STL_SET_HEADER_FILENAME],[\n# Start macro $0\ndnl AC_MSG_CHECKING(name of the STL set header file)\nCASC_TREAT_VARIABLE_HEADER_FILENAME([stl-set], [set set.h set.hxx],,\n  [set<int> s; s.insert(1);])\n# End macro $0\n])\tdnl end of CASC_STL_SET_HEADER_FILENAME definition.\n\n\nAC_DEFUN([CASC_STL_STACK_HEADER_FILENAME],[\n# Start macro $0\ndnl AC_MSG_CHECKING(name of the STL stack header file)\nAC_REQUIRE([CASC_INFO_CXX_ID])\nAC_REQUIRE([CASC_STL_LIST_HEADER_FILENAME])\nbtng_stl_stack_test_body='[stack<int> s; s.push(1);]'\n# The Sun compiler version 5.2 does not treat default template\n# arguments correctly.  The STL standard states that for stack,\n# only the first argument is required but this Sun compiler\n# requires the second.\nif test \"$CXX_ID\" = \"sunpro\" && echo \"$CXX_VERSION\" | grep '^0x420' > /dev/null || test \"$CXX_ID\" = \"sunpro\" && echo \"$CXX_VERSION\" | grep '^0x520' > /dev/null ; then\nbtng_stl_stack_test_body='[stack<int,list<int> > s; s.push(1);]'\nfi\nCASC_TREAT_VARIABLE_HEADER_FILENAME([stl-stack], [stack stack.h stack.hxx],,\n  [$btng_stl_stack_test_body])\n# End macro $0\n])\tdnl end of CASC_STL_STACK_HEADER_FILENAME definition.\n\n\nAC_DEFUN([CASC_STL_VECTOR_HEADER_FILENAME],[\n# Start macro $0\nCASC_TREAT_VARIABLE_HEADER_FILENAME([stl-vector], [vector vector.h vector.hxx],,\n[vector<int> v; v.insert(v.begin(),1);\nvector<char> s; s.insert( s.end(), 10, '\\0' );])\n# End macro $0\n])\tdnl end of CASC_STL_VECTOR_HEADER_FILENAME definition.\n\n\nAC_DEFUN([CASC_STL_LIST_HEADER_FILENAME],[\n# Start macro $0\ndnl AC_MSG_CHECKING(name of the STL list header file)\nCASC_TREAT_VARIABLE_HEADER_FILENAME([stl-list], [list list.h list.hxx],,\n  [list<int> v; v.insert(v.begin(),1);])\n# End macro $0\n])\tdnl end of CASC_STL_LIST_HEADER_FILENAME definition.\n\n\nAC_DEFUN([CASC_STL_MAP_HEADER_FILENAME],[\n# Start macro $0\ndnl AC_MSG_CHECKING(name of the STL map header file)\nAC_REQUIRE([CASC_INFO_CXX_ID])\nbtng_stl_map_test_body='[map<int,int> v; v[0]=1;]'\n# The Sun compiler version 4.2 does not treat default template\n# arguments correctly.  The STL standard states that for map,\n# only the first two arguments are required but the Sun compiler\n# requires the third.\ntest \"$CXX_ID\" = \"sunpro\" && echo \"$CXX_VERSION\" | grep '^0x420' > /dev/null && \\\nbtng_stl_map_test_body='[map<int,int,less<int> > v; v[0]=1;]'\nCASC_TREAT_VARIABLE_HEADER_FILENAME([stl-map], [map map.h map.hxx],,\n  [$btng_stl_map_test_body])\n# End macro $0\n])\tdnl end of CASC_STL_MAP_HEADER_FILENAME definition.\n\n\nAC_DEFUN([CASC_STL_ITERATOR_HEADER_FILENAME],[\n# Start macro $0\ndnl AC_MSG_CHECKING(name of the STL iterator header file)\nCASC_TREAT_VARIABLE_HEADER_FILENAME([stl-iterator],\n  [iterator iterator.h iterator.hxx],,\n  [int a[10], size; size=distance(a,a+10);])\ndnl  [ostream_iterator<int> v(cout,\" \");])\n# End macro $0\n])\tdnl end of CASC_STL_ITERATOR_HEADER_FILENAME definition.\n\n\nAC_DEFUN([CASC_STL_ALGO_HEADER_FILENAME],[\n# Start macro $0\ndnl AC_MSG_CHECKING(name of the STL algo header file)\nCASC_TREAT_VARIABLE_HEADER_FILENAME([stl-algo],\n  [algo algorithm algo.h algorithm.h algo.hxx algorithm.hxx] ,,\n  [int n[10]; find(n,n+10,0);])\n# End macro $0\n])\tdnl end of CASC_STL_ALGO_HEADER_FILENAME definition.\n\n\nAC_DEFUN([CASC_STL_FUNCTION_HEADER_FILENAME],[\n# Start macro $0\ndnl AC_MSG_CHECKING(name of the STL numeric header file)\nCASC_TREAT_VARIABLE_HEADER_FILENAME([stl-function],\n  [function function.h function.hxx] ,,\n  [int a=1, b=2, c; plus<int> adder; c=adder(a,b);])\n# End macro $0\n])\tdnl end of CASC_STL_FUNCTION_HEADER_FILENAME definition.\n\n\nAC_DEFUN([CASC_STL_NUMERIC_HEADER_FILENAME],[\n# Start macro $0\ndnl AC_MSG_CHECKING(name of the STL numeric header file)\nCASC_TREAT_VARIABLE_HEADER_FILENAME([stl-numeric],\n  [numeric numeric.h numeric.hxx] ,,\n  [int n[10]; iota(n,n+10,0);])\n# End macro $0\n])\tdnl end of CASC_STL_NUMERIC_HEADER_FILENAME definition.\n\n\nAC_DEFUN([CASC_STL_SSTREAM_HEADER_FILENAME],[\n# Start macro $0\ndnl AC_MSG_CHECKING(name of the STL string stream header file)\nbtng_stl_sstream_test_body='/* New syntax */ istringstream ist(\"a string\");'\ndnl We think that the sun 4.2 compiler does not support the syntax,\ndnl but we're not absolutely sure.\ntest \"$CXX_ID\" = \"sunpro\" && echo \"$CXX_VERSION\" | grep '^0x420' > /dev/null && \\\nbtng_stl_sstream_test_body='/* Old syntax */ char i[[10]]; istrstream ist(i);'\ntest \"$CXX_ID\" = \"gnu\" && echo \"$CXX_VERSION\" | grep '^2.95.2' > /dev/null && \\\nbtng_stl_sstream_test_body='/* Old syntax */ char i[[10]]; istrstream ist(i);'\nCASC_TREAT_VARIABLE_HEADER_FILENAME([stl-sstream],\n  [sstream stringstream strstream sstream.h stringstream.h strstream.h sstream.hxx stringstream.hxx strstream.hxx] ,,\n  [$btng_stl_sstream_test_body] )\n# End macro $0\n])      dnl end of CASC_STL_SSTREAM_HEADER_FILENAME definition.\n\n\nAC_DEFUN([CASC_STL_MULTIMAP_HEADER_FILENAME],[\n# Start macro $0\ndnl AC_MSG_CHECKING(name of the STL multimap header file)\nAC_REQUIRE([CASC_INFO_CXX_ID])\nbtng_stl_multimap_test_body='[multimap<int,int > v; pair<const int,int> thePair(0,1); v.insert(thePair);]'\ntest \"$CXX_ID\" = \"sunpro\" && echo \"$CXX_VERSION\" | grep '^0x420' > /dev/null && \\\nbtng_stl_multimap_test_body='[multimap<int,int,less<int> > v; pair<const int,int> thePair(0,1); v.insert(thePair);]'\nCASC_TREAT_VARIABLE_HEADER_FILENAME([stl-multimap],\n    [multimap mmap multimap.h mmap.h multimap.hxx mmap.hxx map map.h map.hxx],,\n    [$btng_stl_multimap_test_body])\n# End macro $0\n])      dnl end of CASC_STL_MULTIMAP_HEADER_FILENAME definition.\n\n\nAC_DEFUN([CASC_STL_PAIR_HEADER_FILENAME],[\n# Start macro $0\ndnl AC_MSG_CHECKING(name of the STL pair header file)\nCASC_TREAT_VARIABLE_HEADER_FILENAME([stl-pair], [pair pair.h pair.hxx],,\n  [pair<int,int> s(0,1);])\n# End macro $0\n])      dnl end of CASC_STL_PAIR_HEADER_FILENAME definition.\n\n\n\n\ndnl\ndnl These are some stream-related headers with uncertain names.\ndnl\n\n\nAC_DEFUN([CASC_IOSTREAM_HEADER_FILENAME],[\n# Start macro $0\ndnl AC_MSG_CHECKING(name of the iostream header file)\nCASC_TREAT_VARIABLE_HEADER_FILENAME([iostream],\n  [iostream iostream.h iostream.hxx],,\n  [ostream &co=cout; // test ostream declaration\n   istream &ci=cin; // test istream declaration\n   cout<<\"test\"<<endl; // test extraction operator\n   ])\n# End macro $0\n])\tdnl end of CASC_IOSTREAM_HEADER_FILENAME definition.\n\n\nAC_DEFUN([CASC_FSTREAM_HEADER_FILENAME],[\n# Start macro $0\ndnl AC_MSG_CHECKING(name of the fstream header file)\nCASC_TREAT_VARIABLE_HEADER_FILENAME([fstream],\n  [fstream fstream.h fstream.hxx],,\n  [fstream iost(\"theStream\",ios::app);])\n# End macro $0\n])\tdnl end of CASC_FSTREAM_HEADER_FILENAME definition.\n\n\nAC_DEFUN([CASC_IOMANIP_HEADER_FILENAME],[\n# Start macro $0\ndnl AC_MSG_CHECKING(name of the iomanip header file)\nAC_REQUIRE([CASC_IOSTREAM_HEADER_FILENAME])\nCASC_TREAT_VARIABLE_HEADER_FILENAME([iomanip],\n  [iomanip iomanip.h iomanip.hxx],[#include IOSTREAM_HEADER_FILE],\n  [cout<<setw(13)<<endl;])\n# End macro $0\n])\tdnl end of CASC_IOMANIP_HEADER_FILENAME definition.\n\n\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/mblktree/test_inputs/mbtree.5blk.subdivided.2d.baselinedb",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/mblktree/test_inputs/mbtree.full.simple.3d.baselinedb",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/mblktree/test_inputs/mbtree.5blk.simple.2d.baselinedb",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/mblktree/test_inputs/mbtree.3blk.subdivided.2d.baselinedb",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/mblktree/test_inputs/mbtree.full.subdivided.3d.baselinedb",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/mblktree/test_inputs/mbtree.3blk.simple.2d.baselinedb",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/RP_test/testX-1-2d_0050.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/RP_test/testY-3-3d_0075.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/RP_test/testZ-6-3d_0060.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync_restart.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_restart.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync_restart.3d.boxes",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_restart.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_restart.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_restart.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync_restart.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync_restart.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_restart.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync_restart.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync_restart.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_restart.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_restart.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync_restart.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync_restart.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/test_sync.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync_restart.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_restart.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_restart.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_restart.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_restart.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync_restart.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync_restart.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_restart.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync_restart.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync_restart.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_restart.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_restart.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync_restart.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync_restart.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC/test_sync.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync_restart.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_restart.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_restart.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_restart.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_restart.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync_restart.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync_restart.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_restart.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync_restart.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync_restart.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_restart.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_restart.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync_restart.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync_restart.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/Euler/test_inputs/xlC_debug/test_sync.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/test.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/test.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/test.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/test.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/test.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/test.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/test.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/test.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/test.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/test.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/test.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/test.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/test.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/test.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC/test.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC/test.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC/test.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC/test.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC/test.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC/test.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC/test.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC/test.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC/test.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC/test.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC/test.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC/test.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC/test.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC/test.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC_debug/test.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC_debug/test.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC_debug/test.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC_debug/test.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC_debug/test.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC_debug/test.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC_debug/test.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC_debug/test.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC_debug/test.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC_debug/test.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC_debug/test.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC_debug/test.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC_debug/test.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/ConvDiff/test_inputs/xlC_debug/test.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync_restart.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync_restart.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync_restart.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync_restart.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync_restart.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync_restart.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync_restart.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/test_sync.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync_restart.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync_restart.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync_restart.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync_restart.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync_restart.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync_restart.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync_restart.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC/test_sync.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync_restart.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync_restart.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test.3d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync.3d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync_restart.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync_restart.2d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync.3d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test.3d.boxes.0000002.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync_restart.2d.boxes.0000001.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync_restart.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test.2d.boxes.0000004.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync_restart.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync.2d.boxes.0000004.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test.2d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync.2d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test.2d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test.3d.boxes.0000004.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test.3d.boxes.0000004.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/applications/LinAdv/test_inputs/xlC_debug/test_sync.3d.boxes.0000002.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.treelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.graphlb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.tilelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.tilelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.graphlb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.tilelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.graphlb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.treelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.graphlb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.treelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.tilecascade-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.cascade-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.cascade-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.tilelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.graphlb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.caplb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.caplb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.graphlb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.treelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.treelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.graphlb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.cascade-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.tilecascade-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.tilecascade-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.graphlb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.graphlb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.tilelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.tilelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.caplb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.caplb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.tilecascade-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.caplb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.caplb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.treelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.caplb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.cascade-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.cascade-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.tilelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.graphlb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.cascade-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.tilelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.treelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.graphlb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.treelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.graphlb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.tilelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.caplb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.cascade-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.tilelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.cascade-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.graphlb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.tilelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.caplb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.graphlb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.tilelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.graphlb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.cascade-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.treelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.tilelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.treelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.caplb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.graphlb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.caplb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.graphlb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.tilecascade-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.treelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.treelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.tilelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.graphlb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.caplb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.treelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.treelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.tilecascade-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.graphlb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.cascade-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.caplb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.cascade-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.tilecascade-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.tilecascade-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.tilelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.caplb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.caplb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.tilelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.tilelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.tilecascade-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.tilelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.graphlb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.treelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.caplb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.caplb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.tilelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.graphlb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.tilelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.cascade-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.treelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.cascade-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.caplb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.graphlb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.graphlb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.treelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.treelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.cascade-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.graphlb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.cascade-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.treelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.treelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.cascade-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.treelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.tilecascade-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.caplb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.treelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.tilelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.graphlb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.caplb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.tilecascade-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.tilelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.caplb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.graphlb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.caplb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.tilecascade-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.cascade-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.tilecascade-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.cascade-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.tilecascade-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.tilelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.tilelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.tilelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.graphlb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.caplb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.tilecascade-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.cascade-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.caplb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.graphlb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.cascade-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.treelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.caplb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.tilecascade-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.caplb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.treelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.tilecascade-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.tilecascade-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.treelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.tilecascade-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.tilecascade-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.graphlb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.tilecascade-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.tilelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.caplb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.cascade-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.treelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.tilelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.caplb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.graphlb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.cascade-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.treelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.treelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.caplb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.tilelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.tilecascade-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.tilelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.treelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.treelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.tilecascade-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.treelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.cascade-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.graphlb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.treelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.tilecascade-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.tilelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.tilelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.tilelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.tilecascade-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.caplb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.tilecascade-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.treelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.caplb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.tilecascade-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.tilelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.graphlb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.caplb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.tilecascade-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.caplb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.cascade-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.tilelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.tilelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.treelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.caplb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.graphlb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.graphlb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.cascade-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.caplb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.tilelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.caplb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.cascade-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.cascade-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.caplb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.tilelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.caplb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.graphlb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.treelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.tilelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.tilelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.graphlb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.graphlb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.graphlb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.caplb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.graphlb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.graphlb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.caplb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.treelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.graphlb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.tilelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.2d.caplb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.treelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.treelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.caplb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.2d.treelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.tilelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.graphlb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.treelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/box.3d.tilelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.2d.cascade-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/front.3d.treelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/lss.3d.treelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.treelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.graphlb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.tilelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.tilelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.graphlb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.tilelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.graphlb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.treelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.graphlb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.treelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.tilecascade-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.cascade-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.cascade-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.tilelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.graphlb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.caplb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.caplb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.graphlb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.treelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.treelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.graphlb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.cascade-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.tilecascade-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.tilecascade-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.graphlb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.graphlb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.tilelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.tilelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.caplb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.caplb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.tilecascade-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.caplb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.caplb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.treelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.caplb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.cascade-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.cascade-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.tilelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.graphlb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.cascade-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.tilelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.treelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.graphlb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.treelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.graphlb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.tilelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.caplb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.cascade-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.tilelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.cascade-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.graphlb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.tilelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.caplb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.graphlb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.tilelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.graphlb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.cascade-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.treelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.tilelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.treelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.caplb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.graphlb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.caplb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.graphlb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.tilecascade-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.treelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.treelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.tilelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.graphlb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.caplb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.treelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.treelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.tilecascade-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.graphlb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.cascade-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.caplb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.cascade-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.tilecascade-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.tilecascade-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.tilelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.caplb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.caplb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.tilelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.tilelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.tilecascade-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.tilelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.graphlb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.treelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.caplb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.caplb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.tilelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.graphlb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.tilelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.cascade-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.treelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.cascade-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.caplb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.graphlb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.graphlb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.treelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.treelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.cascade-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.graphlb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.cascade-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.treelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.treelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.cascade-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.treelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.tilecascade-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.caplb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.treelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.tilelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.graphlb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.caplb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.tilecascade-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.tilelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.caplb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.graphlb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.caplb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.tilecascade-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.cascade-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.tilecascade-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.cascade-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.tilecascade-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.tilelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.tilelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.tilelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.graphlb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.caplb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.tilecascade-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.cascade-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.caplb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.graphlb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.cascade-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.treelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.caplb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.tilecascade-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.caplb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.treelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.tilecascade-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.tilecascade-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.treelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.tilecascade-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.tilecascade-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.graphlb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.tilecascade-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.tilelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.caplb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.cascade-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.treelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.tilelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.caplb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.graphlb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.cascade-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.treelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.treelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.caplb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.tilelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.tilecascade-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.tilelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.treelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.treelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.tilecascade-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.treelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.cascade-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.graphlb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.treelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.tilecascade-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.tilelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.tilelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.tilelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.tilecascade-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.caplb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.tilecascade-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.treelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.caplb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.tilecascade-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.tilelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.graphlb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.caplb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.tilecascade-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.caplb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.cascade-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.tilelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.tilelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.treelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.caplb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.graphlb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.graphlb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.cascade-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.caplb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.tilelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.caplb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.cascade-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.cascade-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.caplb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.tilelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.caplb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.graphlb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.treelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.tilelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.tilelb-00004.baselinedb.0000002",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.graphlb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.graphlb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.graphlb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.caplb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.graphlb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.graphlb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.caplb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.treelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.graphlb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.tilelb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.2d.caplb-00002.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.treelb-00002.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.treelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.caplb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.2d.treelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.tilelb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.graphlb-00001.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.treelb-00004.baselinedb.0000000",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/box.3d.tilelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.2d.cascade-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/front.3d.treelb-00004.baselinedb.0000001",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/LoadBalanceCorrectness/test_inputs/xlC/lss.3d.treelb-00004.baselinedb.0000003",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/source/test/nonlinear/bratu-example.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/docs/userdocs/Laplacian-ex.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/docs/userdocs/Regridding-RichardsonExtrapolation.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/docs/userdocs/InputParametersAndRestart.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/docs/userdocs/Timing-Instrumentation.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/docs/userdocs/SAMRAI-Concepts_SoftwareDesign.docx",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/docs/userdocs/FAC-Preconditioner.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/docs/userdocs/Multiblock.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/docs/userdocs/Poisson.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-samrai-3.8.0-hzsqgs4cpdwzilosnwxgs3ppvg27sw2y/spack-src/docs/userdocs/Robin-Bc.pdf"
    ],
    "total_files": 2800
}