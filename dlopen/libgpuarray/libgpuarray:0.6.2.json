{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-libgpuarray-0.6.2-pxbmvl2ahyf74zvo44visyrfer4ewe2b/spack-src/src/loaders/dyn_load.c": "#include \"dyn_load.h\"\n\n#if defined(__unix__) || defined(__APPLE__)\n\n#include <dlfcn.h>\n#include <err.h>\n#include <stddef.h>\n#include <stdlib.h>\n#include <string.h>\n\nvoid *ga_load_library(const char *name) {\n  void *res = dlopen(name, RTLD_LAZY|RTLD_LOCAL);\n#ifdef DEBUG\n  if (res == NULL)\n    warn(\"dlopen: %s\", name);\n#endif\n  return res;\n}\n\nvoid *ga_func_ptr(void *h, const char *name) {\n  void *res = dlsym(h, name);\n#ifdef DEBUG\n  if (res == NULL)\n    warn(\"dlsym: %s\", name);\n#endif\n  return res;\n}\n\nfloat ga_lib_version(void *h, void *sym) {\n  Dl_info dli;\n  char *real_path;\n  char *dot1;\n  char *dot2;\n  char *end;\n  float res;\n\n  if (!dladdr(sym, &dli))\n    return -1;\n\n  real_path = realpath(dli.dli_fname, NULL);\n  if (real_path == NULL)\n    return -1;\n\n  dot1 = strrchr(real_path, '.');\n  if (dot1 == NULL) {\n    free(real_path);\n    return -1;\n  }\n  dot1[0] = '\\0';\n\n  dot2 = strrchr(real_path, '.');\n  if (dot2 == NULL) {\n    free(real_path);\n    return -1;\n  }\n  dot1[0] = '.';\n\n  res = strtof(dot2+1, &end);\n  if (*end != '\\0') {\n    free(real_path);\n    return -1;\n  }\n\n  free(real_path);\n  return res;\n}\n\n#else\n\n/* Should be windows */\n#include <windows.h>\n#pragma comment(lib,\"Version.lib\")\n\nvoid *ga_load_library(const char *name) {\n  return LoadLibrary(name);\n}\n\nvoid *ga_func_ptr(void *h, const char *name) {\n  return (void *)GetProcAddress(h, name);\n}\n\nfloat ga_lib_version(void *h, void *sym) {\n  char fname[1024];\n  char *vinfo;\n  size_t vsize;\n  VS_FIXEDFILEINFO *vp;\n  unsigned int ui;\n  float res;\n\n  if (GetModuleFileName(h, fname, sizeof(fname)) == sizeof(fname))\n    return -1;\n\n  vsize = GetFileVersionInfoSize(fname, NULL);\n  if (vsize == 0)\n    return -1;\n\n  vinfo = malloc(vsize);\n  if (vinfo == NULL)\n    return -1;\n\n  if (!GetFileVersionInfo(fname, 0, vsize, vinfo)) {\n    free(vinfo);\n    return -1;\n  }\n\n  if (!VerQueryValue(vinfo, \"\\\\\", &vp, &ui)) {\n    free(vinfo);\n    return -1;\n  }\n\n  res = ( ((HIWORD(vp->dwFileVersionLS) - 10) * 10000) + LOWORD(vp->dwFileVersionLS) ) / 100.0;\n\n  free(vinfo);\n  return res;\n}\n\n#endif\n"
    },
    "skipped": [],
    "total_files": 134
}