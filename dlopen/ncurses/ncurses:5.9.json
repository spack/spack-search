{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-ncurses-5.9-m7x2c5wpyxggrkhyvx74zvincghhkhvg/spack-src/aclocal.m4": "dnl***************************************************************************\ndnl Copyright (c) 1998-2010,2011 Free Software Foundation, Inc.              *\ndnl                                                                          *\ndnl Permission is hereby granted, free of charge, to any person obtaining a  *\ndnl copy of this software and associated documentation files (the            *\ndnl \"Software\"), to deal in the Software without restriction, including      *\ndnl without limitation the rights to use, copy, modify, merge, publish,      *\ndnl distribute, distribute with modifications, sublicense, and/or sell       *\ndnl copies of the Software, and to permit persons to whom the Software is    *\ndnl furnished to do so, subject to the following conditions:                 *\ndnl                                                                          *\ndnl The above copyright notice and this permission notice shall be included  *\ndnl in all copies or substantial portions of the Software.                   *\ndnl                                                                          *\ndnl THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *\ndnl OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *\ndnl MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *\ndnl IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *\ndnl DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *\ndnl OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *\ndnl THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *\ndnl                                                                          *\ndnl Except as contained in this notice, the name(s) of the above copyright   *\ndnl holders shall not be used in advertising or otherwise to promote the     *\ndnl sale, use or other dealings in this Software without prior written       *\ndnl authorization.                                                           *\ndnl***************************************************************************\ndnl\ndnl Author: Thomas E. Dickey 1995-on\ndnl\ndnl $Id: aclocal.m4,v 1.553 2011/03/31 23:35:38 tom Exp $\ndnl Macros used in NCURSES auto-configuration script.\ndnl\ndnl These macros are maintained separately from NCURSES.  The copyright on\ndnl this file applies to the aggregation of macros and does not affect use of\ndnl these macros in other applications.\ndnl\ndnl See http://invisible-island.net/autoconf/ for additional information.\ndnl\ndnl ---------------------------------------------------------------------------\ndnl ---------------------------------------------------------------------------\ndnl AM_LANGINFO_CODESET version: 3 updated: 2002/10/27 23:21:42\ndnl -------------------\ndnl Inserted as requested by gettext 0.10.40\ndnl File from /usr/share/aclocal\ndnl codeset.m4\ndnl ====================\ndnl serial AM1\ndnl\ndnl From Bruno Haible.\nAC_DEFUN([AM_LANGINFO_CODESET],\n[\n  AC_CACHE_CHECK([for nl_langinfo and CODESET], am_cv_langinfo_codeset,\n    [AC_TRY_LINK([#include <langinfo.h>],\n      [char* cs = nl_langinfo(CODESET);],\n      am_cv_langinfo_codeset=yes,\n      am_cv_langinfo_codeset=no)\n    ])\n  if test $am_cv_langinfo_codeset = yes; then\n    AC_DEFINE(HAVE_LANGINFO_CODESET, 1,\n      [Define if you have <langinfo.h> and nl_langinfo(CODESET).])\n  fi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ADA_INCLUDE_DIRS version: 6 updated: 2010/02/26 19:52:07\ndnl -------------------\ndnl Construct the list of include-options for the C programs in the Ada95\ndnl binding.\nAC_DEFUN([CF_ADA_INCLUDE_DIRS],\n[\nACPPFLAGS=\"-I. -I../include -I../../include $ACPPFLAGS\"\nif test \"$srcdir\" != \".\"; then\n\tACPPFLAGS=\"-I\\${srcdir}/../../include $ACPPFLAGS\"\nfi\nif test \"$GCC\" != yes; then\n\tACPPFLAGS=\"$ACPPFLAGS -I\\${includedir}\"\nelif test \"$includedir\" != \"/usr/include\"; then\n\tif test \"$includedir\" = '${prefix}/include' ; then\n\t\tif test $prefix != /usr ; then\n\t\t\tACPPFLAGS=\"$ACPPFLAGS -I\\${includedir}\"\n\t\tfi\n\telse\n\t\tACPPFLAGS=\"$ACPPFLAGS -I\\${includedir}\"\n\tfi\nfi\nAC_SUBST(ACPPFLAGS)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ADD_ADAFLAGS version: 1 updated: 2010/06/19 15:22:18\ndnl ---------------\ndnl Add to $ADAFLAGS, which is substituted into makefile and scripts.\nAC_DEFUN([CF_ADD_ADAFLAGS],[\n \tADAFLAGS=\"$ADAFLAGS $1\"\n\tAC_SUBST(ADAFLAGS)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ADD_CFLAGS version: 10 updated: 2010/05/26 05:38:42\ndnl -------------\ndnl Copy non-preprocessor flags to $CFLAGS, preprocessor flags to $CPPFLAGS\ndnl The second parameter if given makes this macro verbose.\ndnl\ndnl Put any preprocessor definitions that use quoted strings in $EXTRA_CPPFLAGS,\ndnl to simplify use of $CPPFLAGS in compiler checks, etc., that are easily\ndnl confused by the quotes (which require backslashes to keep them usable).\nAC_DEFUN([CF_ADD_CFLAGS],\n[\ncf_fix_cppflags=no\ncf_new_cflags=\ncf_new_cppflags=\ncf_new_extra_cppflags=\n\nfor cf_add_cflags in $1\ndo\ncase $cf_fix_cppflags in\nno)\n\tcase $cf_add_cflags in #(vi\n\t-undef|-nostdinc*|-I*|-D*|-U*|-E|-P|-C) #(vi\n\t\tcase $cf_add_cflags in\n\t\t-D*)\n\t\t\tcf_tst_cflags=`echo ${cf_add_cflags} |sed -e 's/^-D[[^=]]*='\\''\\\"[[^\"]]*//'`\n\n\t\t\ttest \"${cf_add_cflags}\" != \"${cf_tst_cflags}\" \\\n\t\t\t\t&& test -z \"${cf_tst_cflags}\" \\\n\t\t\t\t&& cf_fix_cppflags=yes\n\n\t\t\tif test $cf_fix_cppflags = yes ; then\n\t\t\t\tcf_new_extra_cppflags=\"$cf_new_extra_cppflags $cf_add_cflags\"\n\t\t\t\tcontinue\n\t\t\telif test \"${cf_tst_cflags}\" = \"\\\"'\" ; then\n\t\t\t\tcf_new_extra_cppflags=\"$cf_new_extra_cppflags $cf_add_cflags\"\n\t\t\t\tcontinue\n\t\t\tfi\n\t\t\t;;\n\t\tesac\n\t\tcase \"$CPPFLAGS\" in\n\t\t*$cf_add_cflags) #(vi\n\t\t\t;;\n\t\t*) #(vi\n\t\t\tcase $cf_add_cflags in #(vi\n\t\t\t-D*)\n\t\t\t\tcf_tst_cppflags=`echo \"x$cf_add_cflags\" | sed -e 's/^...//' -e 's/=.*//'`\n\t\t\t\tCF_REMOVE_DEFINE(CPPFLAGS,$CPPFLAGS,$cf_tst_cppflags)\n\t\t\t\t;;\n\t\t\tesac\n\t\t\tcf_new_cppflags=\"$cf_new_cppflags $cf_add_cflags\"\n\t\t\t;;\n\t\tesac\n\t\t;;\n\t*)\n\t\tcf_new_cflags=\"$cf_new_cflags $cf_add_cflags\"\n\t\t;;\n\tesac\n\t;;\nyes)\n\tcf_new_extra_cppflags=\"$cf_new_extra_cppflags $cf_add_cflags\"\n\n\tcf_tst_cflags=`echo ${cf_add_cflags} |sed -e 's/^[[^\"]]*\"'\\''//'`\n\n\ttest \"${cf_add_cflags}\" != \"${cf_tst_cflags}\" \\\n\t\t&& test -z \"${cf_tst_cflags}\" \\\n\t\t&& cf_fix_cppflags=no\n\t;;\nesac\ndone\n\nif test -n \"$cf_new_cflags\" ; then\n\tifelse([$2],,,[CF_VERBOSE(add to \\$CFLAGS $cf_new_cflags)])\n\tCFLAGS=\"$CFLAGS $cf_new_cflags\"\nfi\n\nif test -n \"$cf_new_cppflags\" ; then\n\tifelse([$2],,,[CF_VERBOSE(add to \\$CPPFLAGS $cf_new_cppflags)])\n\tCPPFLAGS=\"$CPPFLAGS $cf_new_cppflags\"\nfi\n\nif test -n \"$cf_new_extra_cppflags\" ; then\n\tifelse([$2],,,[CF_VERBOSE(add to \\$EXTRA_CPPFLAGS $cf_new_extra_cppflags)])\n\tEXTRA_CPPFLAGS=\"$cf_new_extra_cppflags $EXTRA_CPPFLAGS\"\nfi\n\nAC_SUBST(EXTRA_CPPFLAGS)\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ADD_INCDIR version: 13 updated: 2010/05/26 16:44:57\ndnl -------------\ndnl Add an include-directory to $CPPFLAGS.  Don't add /usr/include, since it's\ndnl redundant.  We don't normally need to add -I/usr/local/include for gcc,\ndnl but old versions (and some misinstalled ones) need that.  To make things\ndnl worse, gcc 3.x may give error messages if -I/usr/local/include is added to\ndnl the include-path).\nAC_DEFUN([CF_ADD_INCDIR],\n[\nif test -n \"$1\" ; then\n  for cf_add_incdir in $1\n  do\n\twhile test $cf_add_incdir != /usr/include\n\tdo\n\t  if test -d $cf_add_incdir\n\t  then\n\t\tcf_have_incdir=no\n\t\tif test -n \"$CFLAGS$CPPFLAGS\" ; then\n\t\t  # a loop is needed to ensure we can add subdirs of existing dirs\n\t\t  for cf_test_incdir in $CFLAGS $CPPFLAGS ; do\n\t\t\tif test \".$cf_test_incdir\" = \".-I$cf_add_incdir\" ; then\n\t\t\t  cf_have_incdir=yes; break\n\t\t\tfi\n\t\t  done\n\t\tfi\n\n\t\tif test \"$cf_have_incdir\" = no ; then\n\t\t  if test \"$cf_add_incdir\" = /usr/local/include ; then\n\t\t\tif test \"$GCC\" = yes\n\t\t\tthen\n\t\t\t  cf_save_CPPFLAGS=$CPPFLAGS\n\t\t\t  CPPFLAGS=\"$CPPFLAGS -I$cf_add_incdir\"\n\t\t\t  AC_TRY_COMPILE([#include <stdio.h>],\n\t\t\t\t  [printf(\"Hello\")],\n\t\t\t\t  [],\n\t\t\t\t  [cf_have_incdir=yes])\n\t\t\t  CPPFLAGS=$cf_save_CPPFLAGS\n\t\t\tfi\n\t\t  fi\n\t\tfi\n\n\t\tif test \"$cf_have_incdir\" = no ; then\n\t\t  CF_VERBOSE(adding $cf_add_incdir to include-path)\n\t\t  ifelse([$2],,CPPFLAGS,[$2])=\"$ifelse([$2],,CPPFLAGS,[$2]) -I$cf_add_incdir\"\n\n\t\t  cf_top_incdir=`echo $cf_add_incdir | sed -e 's%/include/.*$%/include%'`\n\t\t  test \"$cf_top_incdir\" = \"$cf_add_incdir\" && break\n\t\t  cf_add_incdir=\"$cf_top_incdir\"\n\t\telse\n\t\t  break\n\t\tfi\n\t  fi\n\tdone\n  done\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ADD_LIB version: 2 updated: 2010/06/02 05:03:05\ndnl ----------\ndnl Add a library, used to enforce consistency.\ndnl\ndnl $1 = library to add, without the \"-l\"\ndnl $2 = variable to update (default $LIBS)\nAC_DEFUN([CF_ADD_LIB],[CF_ADD_LIBS(-l$1,ifelse($2,,LIBS,[$2]))])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ADD_LIBDIR version: 9 updated: 2010/05/26 16:44:57\ndnl -------------\ndnl\tAdds to the library-path\ndnl\ndnl\tSome machines have trouble with multiple -L options.\ndnl\ndnl $1 is the (list of) directory(s) to add\ndnl $2 is the optional name of the variable to update (default LDFLAGS)\ndnl\nAC_DEFUN([CF_ADD_LIBDIR],\n[\nif test -n \"$1\" ; then\n  for cf_add_libdir in $1\n  do\n    if test $cf_add_libdir = /usr/lib ; then\n      :\n    elif test -d $cf_add_libdir\n    then\n      cf_have_libdir=no\n      if test -n \"$LDFLAGS$LIBS\" ; then\n        # a loop is needed to ensure we can add subdirs of existing dirs\n        for cf_test_libdir in $LDFLAGS $LIBS ; do\n          if test \".$cf_test_libdir\" = \".-L$cf_add_libdir\" ; then\n            cf_have_libdir=yes; break\n          fi\n        done\n      fi\n      if test \"$cf_have_libdir\" = no ; then\n        CF_VERBOSE(adding $cf_add_libdir to library-path)\n        ifelse([$2],,LDFLAGS,[$2])=\"-L$cf_add_libdir $ifelse([$2],,LDFLAGS,[$2])\"\n      fi\n    fi\n  done\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ADD_LIBS version: 1 updated: 2010/06/02 05:03:05\ndnl -----------\ndnl Add one or more libraries, used to enforce consistency.\ndnl\ndnl $1 = libraries to add, with the \"-l\", etc.\ndnl $2 = variable to update (default $LIBS)\nAC_DEFUN([CF_ADD_LIBS],[ifelse($2,,LIBS,[$2])=\"$1 [$]ifelse($2,,LIBS,[$2])\"])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ADD_SUBDIR_PATH version: 3 updated: 2010/07/03 20:58:12\ndnl ------------------\ndnl Append to a search-list for a nonstandard header/lib-file\ndnl\t$1 = the variable to return as result\ndnl\t$2 = the package name\ndnl\t$3 = the subdirectory, e.g., bin, include or lib\ndnl $4 = the directory under which we will test for subdirectories\ndnl $5 = a directory that we do not want $4 to match\nAC_DEFUN([CF_ADD_SUBDIR_PATH],\n[\ntest \"$4\" != \"$5\" && \\\ntest -d \"$4\" && \\\nifelse([$5],NONE,,[(test $5 = NONE || test \"$4\" != \"$5\") &&]) {\n\ttest -n \"$verbose\" && echo \"\t... testing for $3-directories under $4\"\n\ttest -d $4/$3 &&          $1=\"[$]$1 $4/$3\"\n\ttest -d $4/$3/$2 &&       $1=\"[$]$1 $4/$3/$2\"\n\ttest -d $4/$3/$2/$3 &&    $1=\"[$]$1 $4/$3/$2/$3\"\n\ttest -d $4/$2/$3 &&       $1=\"[$]$1 $4/$2/$3\"\n\ttest -d $4/$2/$3/$2 &&    $1=\"[$]$1 $4/$2/$3/$2\"\n}\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ANSI_CC_CHECK version: 10 updated: 2010/10/23 15:52:32\ndnl ----------------\ndnl This is adapted from the macros 'fp_PROG_CC_STDC' and 'fp_C_PROTOTYPES'\ndnl in the sharutils 4.2 distribution.\nAC_DEFUN([CF_ANSI_CC_CHECK],\n[\nAC_CACHE_CHECK(for ${CC:-cc} option to accept ANSI C, cf_cv_ansi_cc,[\ncf_cv_ansi_cc=no\ncf_save_CFLAGS=\"$CFLAGS\"\ncf_save_CPPFLAGS=\"$CPPFLAGS\"\n# Don't try gcc -ansi; that turns off useful extensions and\n# breaks some systems' header files.\n# AIX\t\t\t-qlanglvl=ansi\n# Ultrix and OSF/1\t-std1\n# HP-UX\t\t\t-Aa -D_HPUX_SOURCE\n# SVR4\t\t\t-Xc\n# UnixWare 1.2\t\t(cannot use -Xc, since ANSI/POSIX clashes)\nfor cf_arg in \"-DCC_HAS_PROTOS\" \\\n\t\"\" \\\n\t-qlanglvl=ansi \\\n\t-std1 \\\n\t-Ae \\\n\t\"-Aa -D_HPUX_SOURCE\" \\\n\t-Xc\ndo\n\tCF_ADD_CFLAGS($cf_arg)\n\tAC_TRY_COMPILE(\n[\n#ifndef CC_HAS_PROTOS\n#if !defined(__STDC__) || (__STDC__ != 1)\nchoke me\n#endif\n#endif\n],[\n\tint test (int i, double x);\n\tstruct s1 {int (*f) (int a);};\n\tstruct s2 {int (*f) (double a);};],\n\t[cf_cv_ansi_cc=\"$cf_arg\"; break])\ndone\nCFLAGS=\"$cf_save_CFLAGS\"\nCPPFLAGS=\"$cf_save_CPPFLAGS\"\n])\n\nif test \"$cf_cv_ansi_cc\" != \"no\"; then\nif test \".$cf_cv_ansi_cc\" != \".-DCC_HAS_PROTOS\"; then\n\tCF_ADD_CFLAGS($cf_cv_ansi_cc)\nelse\n\tAC_DEFINE(CC_HAS_PROTOS)\nfi\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ANSI_CC_REQD version: 4 updated: 2008/03/23 14:48:54\ndnl ---------------\ndnl For programs that must use an ANSI compiler, obtain compiler options that\ndnl will make it recognize prototypes.  We'll do preprocessor checks in other\ndnl macros, since tools such as unproto can fake prototypes, but only part of\ndnl the preprocessor.\nAC_DEFUN([CF_ANSI_CC_REQD],\n[AC_REQUIRE([CF_ANSI_CC_CHECK])\nif test \"$cf_cv_ansi_cc\" = \"no\"; then\n\tAC_MSG_ERROR(\n[Your compiler does not appear to recognize prototypes.\nYou have the following choices:\n\ta. adjust your compiler options\n\tb. get an up-to-date compiler\n\tc. use a wrapper such as unproto])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ARG_DISABLE version: 3 updated: 1999/03/30 17:24:31\ndnl --------------\ndnl Allow user to disable a normally-on option.\nAC_DEFUN([CF_ARG_DISABLE],\n[CF_ARG_OPTION($1,[$2],[$3],[$4],yes)])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ARG_OPTION version: 4 updated: 2010/05/26 05:38:42\ndnl -------------\ndnl Restricted form of AC_ARG_ENABLE that ensures user doesn't give bogus\ndnl values.\ndnl\ndnl Parameters:\ndnl $1 = option name\ndnl $2 = help-string\ndnl $3 = action to perform if option is not default\ndnl $4 = action if perform if option is default\ndnl $5 = default option value (either 'yes' or 'no')\nAC_DEFUN([CF_ARG_OPTION],\n[AC_ARG_ENABLE([$1],[$2],[test \"$enableval\" != ifelse([$5],no,yes,no) && enableval=ifelse([$5],no,no,yes)\n  if test \"$enableval\" != \"$5\" ; then\nifelse([$3],,[    :]dnl\n,[    $3]) ifelse([$4],,,[\n  else\n    $4])\n  fi],[enableval=$5 ifelse([$4],,,[\n  $4\n])dnl\n  ])])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_AR_FLAGS version: 5 updated: 2010/05/20 20:24:29\ndnl -----------\ndnl Check for suitable \"ar\" (archiver) options for updating an archive.\nAC_DEFUN([CF_AR_FLAGS],[\nAC_REQUIRE([CF_PROG_AR])\n\nAC_CACHE_CHECK(for options to update archives, cf_cv_ar_flags,[\n\tcf_cv_ar_flags=unknown\n\tfor cf_ar_flags in -curv curv -crv crv -cqv cqv -rv rv\n\tdo\n\n\t\t# check if $ARFLAGS already contains this choice\n\t\tif test \"x$ARFLAGS\" != \"x\" ; then\n\t\t\tcf_check_ar_flags=`echo \"x$ARFLAGS\" | sed -e \"s/$cf_ar_flags\\$//\" -e \"s/$cf_ar_flags / /\"`\n\t\t\tif test \"x$ARFLAGS\" != \"$cf_check_ar_flags\" ; then\n\t\t\t\tcf_cv_ar_flags=\n\t\t\t\tbreak\n\t\t\tfi\n\t\tfi\n\n\t\trm -f conftest.$ac_cv_objext\n\t\trm -f conftest.a\n\n\t\tcat >conftest.$ac_ext <<EOF\n#line __oline__ \"configure\"\nint\ttestdata[[3]] = { 123, 456, 789 };\nEOF\n\t\tif AC_TRY_EVAL(ac_compile) ; then\n\t\t\techo \"$AR $ARFLAGS $cf_ar_flags conftest.a conftest.$ac_cv_objext\" >&AC_FD_CC\n\t\t\t$AR $ARFLAGS $cf_ar_flags conftest.a conftest.$ac_cv_objext 2>&AC_FD_CC 1>/dev/null\n\t\t\tif test -f conftest.a ; then\n\t\t\t\tcf_cv_ar_flags=$cf_ar_flags\n\t\t\t\tbreak\n\t\t\tfi\n\t\telse\n\t\t\tCF_VERBOSE(cannot compile test-program)\n\t\t\tbreak\n\t\tfi\n\tdone\n\trm -f conftest.a conftest.$ac_ext conftest.$ac_cv_objext\n])\n\nif test -n \"$ARFLAGS\" ; then\n\tif test -n \"$cf_cv_ar_flags\" ; then\n\t\tARFLAGS=\"$ARFLAGS $cf_cv_ar_flags\"\n\tfi\nelse\n\tARFLAGS=$cf_cv_ar_flags\nfi\n\nAC_SUBST(ARFLAGS)\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_AWK_BIG_PRINTF version: 3 updated: 2008/12/27 12:30:03\ndnl -----------------\ndnl Check if awk can handle big strings using printf.  Some older versions of\ndnl awk choke on large strings passed via \"%s\".\ndnl\ndnl $1 = desired string size\ndnl $2 = variable to set with result\nAC_DEFUN([CF_AWK_BIG_PRINTF],\n[\n\tcase x$AWK in #(vi\n\tx)\n\t\teval $2=no\n\t\t;;\n\t*) #(vi\n\t\tif ( ${AWK} 'BEGIN { xx = \"x\"; while (length(xx) < $1) { xx = xx \"x\"; }; printf(\"%s\\n\", xx); }' \\\n\t\t\t| $AWK '{ printf \"%d\\n\", length([$]0); }' | $AWK 'BEGIN { eqls=0; recs=0; } { recs++; if ([$]0 == 12000) eqls++; } END { if (recs != 1 || eqls != 1) exit 1; }' 2>/dev/null >/dev/null ) ; then\n\t\t\teval $2=yes\n\t\telse\n\t\t\teval $2=no\n\t\tfi\n\t\t;;\n\tesac\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_BOOL_DECL version: 8 updated: 2004/01/30 15:51:18\ndnl ------------\ndnl Test if 'bool' is a builtin type in the configured C++ compiler.  Some\ndnl older compilers (e.g., gcc 2.5.8) don't support 'bool' directly; gcc\ndnl 2.6.3 does, in anticipation of the ANSI C++ standard.\ndnl\ndnl Treat the configuration-variable specially here, since we're directly\ndnl substituting its value (i.e., 1/0).\ndnl\ndnl $1 is the shell variable to store the result in, if not $cv_cv_builtin_bool\nAC_DEFUN([CF_BOOL_DECL],\n[\nAC_MSG_CHECKING(if we should include stdbool.h)\n\nAC_CACHE_VAL(cf_cv_header_stdbool_h,[\n\tAC_TRY_COMPILE([],[bool foo = false],\n\t\t[cf_cv_header_stdbool_h=0],\n\t\t[AC_TRY_COMPILE([\n#ifndef __BEOS__\n#include <stdbool.h>\n#endif\n],[bool foo = false],\n\t\t\t[cf_cv_header_stdbool_h=1],\n\t\t\t[cf_cv_header_stdbool_h=0])])])\n\nif test \"$cf_cv_header_stdbool_h\" = 1\nthen\tAC_MSG_RESULT(yes)\nelse\tAC_MSG_RESULT(no)\nfi\n\nAC_MSG_CHECKING([for builtin bool type])\n\nAC_CACHE_VAL(ifelse($1,,cf_cv_builtin_bool,[$1]),[\n\tAC_TRY_COMPILE([\n#include <stdio.h>\n#include <sys/types.h>\n],[bool x = false],\n\t\t[ifelse($1,,cf_cv_builtin_bool,[$1])=1],\n\t\t[ifelse($1,,cf_cv_builtin_bool,[$1])=0])\n\t])\n\nif test \"$ifelse($1,,cf_cv_builtin_bool,[$1])\" = 1\nthen\tAC_MSG_RESULT(yes)\nelse\tAC_MSG_RESULT(no)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_BOOL_SIZE version: 12 updated: 2006/12/16 12:33:30\ndnl ------------\ndnl Test for the size of 'bool' in the configured C++ compiler (e.g., a type).\ndnl Don't bother looking for bool.h, since it's been deprecated.\ndnl\ndnl If the current compiler is C rather than C++, we get the bool definition\ndnl from <stdbool.h>.\nAC_DEFUN([CF_BOOL_SIZE],\n[\nAC_MSG_CHECKING([for size of bool])\nAC_CACHE_VAL(cf_cv_type_of_bool,[\n\trm -f cf_test.out\n\tAC_TRY_RUN([\n#include <stdlib.h>\n#include <stdio.h>\n\n#if defined(__cplusplus)\n\n#ifdef HAVE_GXX_BUILTIN_H\n#include <g++/builtin.h>\n#elif HAVE_GPP_BUILTIN_H\n#include <gpp/builtin.h>\n#elif HAVE_BUILTIN_H\n#include <builtin.h>\n#endif\n\n#else\n\n#if $cf_cv_header_stdbool_h\n#include <stdbool.h>\n#endif\n\n#endif\n\nmain()\n{\n\tFILE *fp = fopen(\"cf_test.out\", \"w\");\n\tif (fp != 0) {\n\t\tbool x = true;\n\t\tif ((bool)(-x) >= 0)\n\t\t\tfputs(\"unsigned \", fp);\n\t\tif (sizeof(x) == sizeof(int))       fputs(\"int\",  fp);\n\t\telse if (sizeof(x) == sizeof(char)) fputs(\"char\", fp);\n\t\telse if (sizeof(x) == sizeof(short))fputs(\"short\",fp);\n\t\telse if (sizeof(x) == sizeof(long)) fputs(\"long\", fp);\n\t\tfclose(fp);\n\t}\n\t${cf_cv_main_return:-return}(0);\n}\n\t\t],\n\t\t[cf_cv_type_of_bool=`cat cf_test.out`\n\t\t if test -z \"$cf_cv_type_of_bool\"; then\n\t\t   cf_cv_type_of_bool=unknown\n\t\t fi],\n\t\t[cf_cv_type_of_bool=unknown],\n\t\t[cf_cv_type_of_bool=unknown])\n\t])\n\trm -f cf_test.out\nAC_MSG_RESULT($cf_cv_type_of_bool)\nif test \"$cf_cv_type_of_bool\" = unknown ; then\n\tcase .$NCURSES_BOOL in #(vi\n\t.auto|.) NCURSES_BOOL=unsigned;;\n\tesac\n\tAC_MSG_WARN(Assuming $NCURSES_BOOL for type of bool)\n\tcf_cv_type_of_bool=$NCURSES_BOOL\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_BUILD_CC version: 6 updated: 2006/10/14 15:23:15\ndnl -----------\ndnl If we're cross-compiling, allow the user to override the tools and their\ndnl options.  The configure script is oriented toward identifying the host\ndnl compiler, etc., but we need a build compiler to generate parts of the\ndnl source.\ndnl\ndnl $1 = default for $CPPFLAGS\ndnl $2 = default for $LIBS\nAC_DEFUN([CF_BUILD_CC],[\nAC_REQUIRE([CF_PROG_EXT])\nif test \"$cross_compiling\" = yes ; then\n\n\t# defaults that we might want to override\n\t: ${BUILD_CFLAGS:=''}\n\t: ${BUILD_CPPFLAGS:='ifelse([$1],,,[$1])'}\n\t: ${BUILD_LDFLAGS:=''}\n\t: ${BUILD_LIBS:='ifelse([$2],,,[$2])'}\n\t: ${BUILD_EXEEXT:='$x'}\n\t: ${BUILD_OBJEXT:='o'}\n\n\tAC_ARG_WITH(build-cc,\n\t\t[  --with-build-cc=XXX     the build C compiler ($BUILD_CC)],\n\t\t[BUILD_CC=\"$withval\"],\n\t\t[AC_CHECK_PROGS(BUILD_CC, gcc cc cl)])\n\tAC_MSG_CHECKING(for native build C compiler)\n\tAC_MSG_RESULT($BUILD_CC)\n\n\tAC_MSG_CHECKING(for native build C preprocessor)\n\tAC_ARG_WITH(build-cpp,\n\t\t[  --with-build-cpp=XXX    the build C preprocessor ($BUILD_CPP)],\n\t\t[BUILD_CPP=\"$withval\"],\n\t\t[BUILD_CPP='${BUILD_CC} -E'])\n\tAC_MSG_RESULT($BUILD_CPP)\n\n\tAC_MSG_CHECKING(for native build C flags)\n\tAC_ARG_WITH(build-cflags,\n\t\t[  --with-build-cflags=XXX the build C compiler-flags ($BUILD_CFLAGS)],\n\t\t[BUILD_CFLAGS=\"$withval\"])\n\tAC_MSG_RESULT($BUILD_CFLAGS)\n\n\tAC_MSG_CHECKING(for native build C preprocessor-flags)\n\tAC_ARG_WITH(build-cppflags,\n\t\t[  --with-build-cppflags=XXX the build C preprocessor-flags ($BUILD_CPPFLAGS)],\n\t\t[BUILD_CPPFLAGS=\"$withval\"])\n\tAC_MSG_RESULT($BUILD_CPPFLAGS)\n\n\tAC_MSG_CHECKING(for native build linker-flags)\n\tAC_ARG_WITH(build-ldflags,\n\t\t[  --with-build-ldflags=XXX the build linker-flags ($BUILD_LDFLAGS)],\n\t\t[BUILD_LDFLAGS=\"$withval\"])\n\tAC_MSG_RESULT($BUILD_LDFLAGS)\n\n\tAC_MSG_CHECKING(for native build linker-libraries)\n\tAC_ARG_WITH(build-libs,\n\t\t[  --with-build-libs=XXX   the build libraries (${BUILD_LIBS})],\n\t\t[BUILD_LIBS=\"$withval\"])\n\tAC_MSG_RESULT($BUILD_LIBS)\n\n\t# this assumes we're on Unix.\n\tBUILD_EXEEXT=\n\tBUILD_OBJEXT=o\n\n\t: ${BUILD_CC:='${CC}'}\n\n\tif ( test \"$BUILD_CC\" = \"$CC\" || test \"$BUILD_CC\" = '${CC}' ) ; then\n\t\tAC_MSG_ERROR([Cross-build requires two compilers.\nUse --with-build-cc to specify the native compiler.])\n\tfi\n\nelse\n\t: ${BUILD_CC:='${CC}'}\n\t: ${BUILD_CPP:='${CPP}'}\n\t: ${BUILD_CFLAGS:='${CFLAGS}'}\n\t: ${BUILD_CPPFLAGS:='${CPPFLAGS}'}\n\t: ${BUILD_LDFLAGS:='${LDFLAGS}'}\n\t: ${BUILD_LIBS:='${LIBS}'}\n\t: ${BUILD_EXEEXT:='$x'}\n\t: ${BUILD_OBJEXT:='o'}\nfi\n\nAC_SUBST(BUILD_CC)\nAC_SUBST(BUILD_CPP)\nAC_SUBST(BUILD_CFLAGS)\nAC_SUBST(BUILD_CPPFLAGS)\nAC_SUBST(BUILD_LDFLAGS)\nAC_SUBST(BUILD_LIBS)\nAC_SUBST(BUILD_EXEEXT)\nAC_SUBST(BUILD_OBJEXT)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CFG_DEFAULTS version: 7 updated: 2005/09/24 16:15:00\ndnl ---------------\ndnl Determine the default configuration into which we'll install ncurses.  This\ndnl can be overridden by the user's command-line options.  There's two items to\ndnl look for:\ndnl\t1. the prefix (e.g., /usr)\ndnl\t2. the header files (e.g., /usr/include/ncurses)\ndnl We'll look for a previous installation of ncurses and use the same defaults.\ndnl\ndnl We don't use AC_PREFIX_DEFAULT, because it gets evaluated too soon, and\ndnl we don't use AC_PREFIX_PROGRAM, because we cannot distinguish ncurses's\ndnl programs from a vendor's.\nAC_DEFUN([CF_CFG_DEFAULTS],\n[\nAC_MSG_CHECKING(for prefix)\nif test \"x$prefix\" = \"xNONE\" ; then\n\tcase \"$cf_cv_system_name\" in\n\t\t# non-vendor systems don't have a conflict\n\topenbsd*|freebsd*|linux*|cygwin*|k*bsd*-gnu)\n\t\tprefix=/usr\n\t\t;;\n\t*)\tprefix=$ac_default_prefix\n\t\t;;\n\tesac\nfi\nAC_MSG_RESULT($prefix)\n\nif test \"x$prefix\" = \"xNONE\" ; then\nAC_MSG_CHECKING(for default include-directory)\ntest -n \"$verbose\" && echo 1>&AC_FD_MSG\nfor cf_symbol in \\\n\t$includedir \\\n\t$includedir/ncurses \\\n\t$prefix/include \\\n\t$prefix/include/ncurses \\\n\t/usr/local/include \\\n\t/usr/local/include/ncurses \\\n\t/usr/include \\\n\t/usr/include/ncurses\ndo\n\tcf_dir=`eval echo $cf_symbol`\n\tif test -f $cf_dir/curses.h ; then\n\tif ( fgrep NCURSES_VERSION $cf_dir/curses.h 2>&1 >/dev/null ) ; then\n\t\tincludedir=\"$cf_symbol\"\n\t\ttest -n \"$verbose\"  && echo $ac_n \"\tfound \" 1>&AC_FD_MSG\n\t\tbreak\n\tfi\n\tfi\n\ttest -n \"$verbose\"  && echo \"\ttested $cf_dir\" 1>&AC_FD_MSG\ndone\nAC_MSG_RESULT($includedir)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CGETENT version: 3 updated: 2000/08/12 23:18:52\ndnl ----------\ndnl Check if the terminal-capability database functions are available.  If not,\ndnl ncurses has a much-reduced version.\nAC_DEFUN([CF_CGETENT],[\nAC_MSG_CHECKING(for terminal-capability database functions)\nAC_CACHE_VAL(cf_cv_cgetent,[\nAC_TRY_LINK([\n#include <stdlib.h>],[\n\tchar temp[128];\n\tchar *buf = temp;\n\tchar *db_array = temp;\n\tcgetent(&buf, /* int *, */ &db_array, \"vt100\");\n\tcgetcap(buf, \"tc\", '=');\n\tcgetmatch(buf, \"tc\");\n\t],\n\t[cf_cv_cgetent=yes],\n\t[cf_cv_cgetent=no])\n])\nAC_MSG_RESULT($cf_cv_cgetent)\ntest \"$cf_cv_cgetent\" = yes && AC_DEFINE(HAVE_BSD_CGETENT)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CHECK_CACHE version: 11 updated: 2008/03/23 14:45:59\ndnl --------------\ndnl Check if we're accidentally using a cache from a different machine.\ndnl Derive the system name, as a check for reusing the autoconf cache.\ndnl\ndnl If we've packaged config.guess and config.sub, run that (since it does a\ndnl better job than uname).  Normally we'll use AC_CANONICAL_HOST, but allow\ndnl an extra parameter that we may override, e.g., for AC_CANONICAL_SYSTEM\ndnl which is useful in cross-compiles.\ndnl\ndnl Note: we would use $ac_config_sub, but that is one of the places where\ndnl autoconf 2.5x broke compatibility with autoconf 2.13\nAC_DEFUN([CF_CHECK_CACHE],\n[\nif test -f $srcdir/config.guess || test -f $ac_aux_dir/config.guess ; then\n\tifelse([$1],,[AC_CANONICAL_HOST],[$1])\n\tsystem_name=\"$host_os\"\nelse\n\tsystem_name=\"`(uname -s -r) 2>/dev/null`\"\n\tif test -z \"$system_name\" ; then\n\t\tsystem_name=\"`(hostname) 2>/dev/null`\"\n\tfi\nfi\ntest -n \"$system_name\" && AC_DEFINE_UNQUOTED(SYSTEM_NAME,\"$system_name\")\nAC_CACHE_VAL(cf_cv_system_name,[cf_cv_system_name=\"$system_name\"])\n\ntest -z \"$system_name\" && system_name=\"$cf_cv_system_name\"\ntest -n \"$cf_cv_system_name\" && AC_MSG_RESULT(Configuring for $cf_cv_system_name)\n\nif test \".$system_name\" != \".$cf_cv_system_name\" ; then\n\tAC_MSG_RESULT(Cached system name ($system_name) does not agree with actual ($cf_cv_system_name))\n\tAC_MSG_ERROR(\"Please remove config.cache and try again.\")\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CHECK_ERRNO version: 11 updated: 2010/05/26 05:38:42\ndnl --------------\ndnl Check for data that is usually declared in <stdio.h> or <errno.h>, e.g.,\ndnl the 'errno' variable.  Define a DECL_xxx symbol if we must declare it\ndnl ourselves.\ndnl\ndnl $1 = the name to check\ndnl $2 = the assumed type\nAC_DEFUN([CF_CHECK_ERRNO],\n[\nAC_CACHE_CHECK(if external $1 is declared, cf_cv_dcl_$1,[\n    AC_TRY_COMPILE([\n#ifdef HAVE_STDLIB_H\n#include <stdlib.h>\n#endif\n#include <stdio.h>\n#include <sys/types.h>\n#include <errno.h> ],\n    ifelse([$2],,int,[$2]) x = (ifelse([$2],,int,[$2])) $1,\n    [cf_cv_dcl_$1=yes],\n    [cf_cv_dcl_$1=no])\n])\n\nif test \"$cf_cv_dcl_$1\" = no ; then\n    CF_UPPER(cf_result,decl_$1)\n    AC_DEFINE_UNQUOTED($cf_result)\nfi\n\n# It's possible (for near-UNIX clones) that the data doesn't exist\nCF_CHECK_EXTERN_DATA($1,ifelse([$2],,int,[$2]))\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CHECK_EXTERN_DATA version: 3 updated: 2001/12/30 18:03:23\ndnl --------------------\ndnl Check for existence of external data in the current set of libraries.  If\ndnl we can modify it, it's real enough.\ndnl $1 = the name to check\ndnl $2 = its type\nAC_DEFUN([CF_CHECK_EXTERN_DATA],\n[\nAC_CACHE_CHECK(if external $1 exists, cf_cv_have_$1,[\n    AC_TRY_LINK([\n#undef $1\nextern $2 $1;\n],\n    [$1 = 2],\n    [cf_cv_have_$1=yes],\n    [cf_cv_have_$1=no])\n])\n\nif test \"$cf_cv_have_$1\" = yes ; then\n    CF_UPPER(cf_result,have_$1)\n    AC_DEFINE_UNQUOTED($cf_result)\nfi\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CHECK_GPM_WGETCH version: 2 updated: 2010/08/14 18:25:37\ndnl -------------------\ndnl Check if GPM is already linked with curses.  If so - and if the linkage\ndnl is not \"weak\" - warn about this because it can create problems linking\ndnl applications with ncurses.\nAC_DEFUN([CF_CHECK_GPM_WGETCH],[\nAC_CHECK_LIB(gpm,Gpm_Wgetch,[\n\nAC_CACHE_CHECK(if GPM is weakly bound to curses library, cf_cv_check_gpm_wgetch,[\ncf_cv_check_gpm_wgetch=unknown\nif test \"$cross_compiling\" != yes ; then\n\ncat >conftest.$ac_ext <<CF_EOF\n#include <gpm.h>\nint main()\n{\n\tGpm_Wgetch();\n\t${cf_cv_main_return:-return}(0);\n}\nCF_EOF\n\n\tcf_save_LIBS=\"$LIBS\"\n\t# This only works if we can look at the symbol table.  If a shared\n\t# library is stripped for install, we cannot use that.  So we're forced\n\t# to rely on the static library, noting that some packagers may not\n\t# include it.\n\tLIBS=\"-static -lgpm -dynamic $LIBS\"\n\tif AC_TRY_EVAL(ac_compile) ; then\n\t\tif AC_TRY_EVAL(ac_link) ; then\n\t\t\tcf_cv_check_gpm_wgetch=`nm conftest$ac_exeext | egrep '\\<wgetch\\>' | egrep '\\<[[vVwW]]\\>'`\n\t\t\ttest -n \"$cf_cv_check_gpm_wgetch\" && cf_cv_check_gpm_wgetch=yes\n\t\t\ttest -z \"$cf_cv_check_gpm_wgetch\" && cf_cv_check_gpm_wgetch=no\n\t\tfi\n\tfi\n\trm -rf conftest*\n\tLIBS=\"$cf_save_LIBS\"\nfi\n])\n\nif test \"$cf_cv_check_gpm_wgetch\" != yes ; then\n\tAC_MSG_WARN(GPM library is already linked with curses - read the FAQ)\nfi\n])])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CPP_PARAM_INIT version: 4 updated: 2001/04/07 22:31:18\ndnl -----------------\ndnl Check if the C++ compiler accepts duplicate parameter initialization.  This\ndnl is a late feature for the standard and is not in some recent compilers\ndnl (1999/9/11).\nAC_DEFUN([CF_CPP_PARAM_INIT],\n[\nif test -n \"$CXX\"; then\nAC_CACHE_CHECK(if $CXX accepts parameter initialization,cf_cv_cpp_param_init,[\n\tAC_LANG_SAVE\n\tAC_LANG_CPLUSPLUS\n\tAC_TRY_RUN([\nclass TEST {\nprivate:\n\tint value;\npublic:\n\tTEST(int x = 1);\n\t~TEST();\n};\n\nTEST::TEST(int x = 1)\t// some compilers do not like second initializer\n{\n\tvalue = x;\n}\nvoid main() { }\n],\n\t[cf_cv_cpp_param_init=yes],\n\t[cf_cv_cpp_param_init=no],\n\t[cf_cv_cpp_param_init=unknown])\n\tAC_LANG_RESTORE\n])\nfi\ntest \"$cf_cv_cpp_param_init\" = yes && AC_DEFINE(CPP_HAS_PARAM_INIT)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_CPP_STATIC_CAST version: 1 updated: 2005/07/23 16:52:43\ndnl ------------------\ndnl Check if the C++ compiler accepts static_cast in generics.  This appears to\ndnl not be supported in g++ before 3.0\nAC_DEFUN([CF_CPP_STATIC_CAST],\n[\nif test -n \"$CXX\"; then\n\nAC_CACHE_CHECK(if $CXX accepts static_cast,cf_cv_cpp_static_cast,[\n\tAC_LANG_SAVE\n\tAC_LANG_CPLUSPLUS\n\n\tAC_TRY_COMPILE([\nclass NCursesPanel\n{\npublic:\n  NCursesPanel(int nlines,\n\t       int ncols,\n\t       int begin_y = 0,\n\t       int begin_x = 0)\n  {\n  }\n\n  ~NCursesPanel();\n};\n\ntemplate<class T> class NCursesUserPanel : public NCursesPanel\n{\npublic:\n  NCursesUserPanel (int nlines,\n\t\t    int ncols,\n\t\t    int begin_y = 0,\n\t\t    int begin_x = 0,\n\t\t    const T* p_UserData = static_cast<T*>(0))\n    : NCursesPanel (nlines, ncols, begin_y, begin_x)\n  {\n  };\n  NCursesUserPanel(const T* p_UserData = static_cast<T*>(0)) : NCursesPanel()\n  {\n  };\n\n  virtual ~NCursesUserPanel() {};\n};\n],[\n\tconst char* p_UserData = static_cast<char*>(0)],\n\t[cf_cv_cpp_static_cast=yes],\n\t[cf_cv_cpp_static_cast=no])\n\n\tAC_LANG_RESTORE\n])\n\nfi\n\ntest \"$cf_cv_cpp_static_cast\" = yes && AC_DEFINE(CPP_HAS_STATIC_CAST)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_C_INLINE version: 3 updated: 2010/05/01 15:14:41\ndnl -----------\ndnl Check if the C compiler supports \"inline\".\ndnl $1 is the name of a shell variable to set if inline is supported\ndnl $2 is the threshold for gcc 4.x's option controlling maximum inline size\nAC_DEFUN([CF_C_INLINE],[\nAC_C_INLINE\n$1=\nif test \"$ac_cv_c_inline\" != no ; then\n  $1=inline\n  if test \"$INTEL_COMPILER\" = yes\n  then\n    :\n  elif test \"$GCC\" = yes\n  then\n    AC_CACHE_CHECK(if $CC supports options to tune inlining,cf_cv_gcc_inline,[\n      cf_save_CFLAGS=$CFLAGS\n      CFLAGS=\"$CFLAGS --param max-inline-insns-single=$2\"\n      AC_TRY_COMPILE([inline int foo(void) { return 1; }],\n      [${cf_cv_main_return:-return} foo()],\n      [cf_cv_gcc_inline=yes],\n      [cf_cv_gcc_inline=no])\n      CFLAGS=$cf_save_CFLAGS\n    ])\n    if test \"$cf_cv_gcc_inline\" = yes ; then\n        CF_ADD_CFLAGS([--param max-inline-insns-single=$2])\n    fi\n  fi\nfi\nAC_SUBST($1)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_DIRNAME version: 4 updated: 2002/12/21 19:25:52\ndnl ----------\ndnl \"dirname\" is not portable, so we fake it with a shell script.\nAC_DEFUN([CF_DIRNAME],[$1=`echo $2 | sed -e 's%/[[^/]]*$%%'`])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_DIRS_TO_MAKE version: 3 updated: 2002/02/23 20:38:31\ndnl ---------------\nAC_DEFUN([CF_DIRS_TO_MAKE],\n[\nDIRS_TO_MAKE=\"lib\"\nfor cf_item in $cf_list_models\ndo\n\tCF_OBJ_SUBDIR($cf_item,cf_subdir)\n\tfor cf_item2 in $DIRS_TO_MAKE\n\tdo\n\t\ttest $cf_item2 = $cf_subdir && break\n\tdone\n\ttest \".$cf_item2\" != \".$cf_subdir\" && DIRS_TO_MAKE=\"$DIRS_TO_MAKE $cf_subdir\"\ndone\nfor cf_dir in $DIRS_TO_MAKE\ndo\n\ttest ! -d $cf_dir && mkdir $cf_dir\ndone\nAC_SUBST(DIRS_TO_MAKE)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_DISABLE_LEAKS version: 6 updated: 2010/07/23 04:14:32\ndnl ----------------\ndnl Combine no-leak checks with the libraries or tools that are used for the\ndnl checks.\nAC_DEFUN([CF_DISABLE_LEAKS],[\n\nAC_REQUIRE([CF_WITH_DMALLOC])\nAC_REQUIRE([CF_WITH_DBMALLOC])\nAC_REQUIRE([CF_WITH_VALGRIND])\n\nAC_MSG_CHECKING(if you want to perform memory-leak testing)\nAC_ARG_ENABLE(leaks,\n\t[  --disable-leaks         test: free permanent memory, analyze leaks],\n\t[if test \"x$enableval\" = xno; then with_no_leaks=yes; else with_no_leaks=no; fi],\n\t: ${with_no_leaks:=no})\nAC_MSG_RESULT($with_no_leaks)\n\nif test \"$with_no_leaks\" = yes ; then\n\tAC_DEFINE(NO_LEAKS)\n\tAC_DEFINE(YY_NO_LEAKS)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_DISABLE_LIBTOOL_VERSION version: 1 updated: 2010/05/15 15:45:59\ndnl --------------------------\ndnl Check if we should use the libtool 1.5 feature \"-version-number\" instead of\ndnl the older \"-version-info\" feature.  The newer feature allows us to use\ndnl version numbering on shared libraries which make them compatible with\ndnl various systems.\nAC_DEFUN([CF_DISABLE_LIBTOOL_VERSION],\n[\nAC_MSG_CHECKING(if libtool -version-number should be used)\nCF_ARG_DISABLE(libtool-version,\n\t[  --disable-libtool-version  enable to use libtool's incompatible naming scheme],\n\t[cf_libtool_version=no],\n\t[cf_libtool_version=yes])\nAC_MSG_RESULT($cf_libtool_version)\n\nif test \"$cf_libtool_version\" = yes ; then\n\tLIBTOOL_VERSION=\"-version-number\"\nelse\n\tLIBTOOL_VERSION=\"-version-info\"\nfi\n\nAC_SUBST(LIBTOOL_VERSION)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_DISABLE_RPATH_HACK version: 2 updated: 2011/02/13 13:31:33\ndnl ---------------------\ndnl The rpath-hack makes it simpler to build programs, particularly with the\ndnl *BSD ports which may have essential libraries in unusual places.  But it\ndnl can interfere with building an executable for the base system.  Use this\ndnl option in that case.\nAC_DEFUN([CF_DISABLE_RPATH_HACK],\n[\nAC_MSG_CHECKING(if rpath-hack should be disabled)\nCF_ARG_DISABLE(rpath-hack,\n\t[  --disable-rpath-hack    don't add rpath options for additional libraries],\n\t[cf_disable_rpath_hack=yes],\n\t[cf_disable_rpath_hack=no])\nAC_MSG_RESULT($cf_disable_rpath_hack)\nif test \"$cf_disable_rpath_hack\" = no ; then\n\tCF_RPATH_HACK\nfi\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_ENABLE_RPATH version: 2 updated: 2010/03/27 18:39:42\ndnl ---------------\ndnl Check if the rpath option should be used, setting cache variable\ndnl cf_cv_enable_rpath if so.\nAC_DEFUN([CF_ENABLE_RPATH],\n[\nAC_MSG_CHECKING(if rpath option should be used)\nAC_ARG_ENABLE(rpath,\n[  --enable-rpath          use rpath option when generating shared libraries],\n[cf_cv_enable_rpath=$enableval],\n[cf_cv_enable_rpath=no])\nAC_MSG_RESULT($cf_cv_enable_rpath)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ERRNO version: 5 updated: 1997/11/30 12:44:39\ndnl --------\ndnl Check if 'errno' is declared in <errno.h>\nAC_DEFUN([CF_ERRNO],\n[\nCF_CHECK_ERRNO(errno)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ETIP_DEFINES version: 3 updated: 2003/03/22 19:13:43\ndnl ---------------\ndnl Test for conflicting definitions of exception in gcc 2.8.0, etc., between\ndnl math.h and builtin.h, only for ncurses\nAC_DEFUN([CF_ETIP_DEFINES],\n[\nAC_MSG_CHECKING(for special defines needed for etip.h)\ncf_save_CXXFLAGS=\"$CXXFLAGS\"\ncf_result=\"none\"\nfor cf_math in \"\" MATH_H\ndo\nfor cf_excp in \"\" MATH_EXCEPTION\ndo\n\tCXXFLAGS=\"$cf_save_CXXFLAGS -I${srcdir}/c++ -I${srcdir}/menu -I${srcdir}/include\"\n\ttest -n \"$cf_math\" && CXXFLAGS=\"$CXXFLAGS -DETIP_NEEDS_${cf_math}\"\n\ttest -n \"$cf_excp\" && CXXFLAGS=\"$CXXFLAGS -DETIP_NEEDS_${cf_excp}\"\nAC_TRY_COMPILE([\n#include <etip.h.in>\n],[],[\n\ttest -n \"$cf_math\" && AC_DEFINE_UNQUOTED(ETIP_NEEDS_${cf_math})\n\ttest -n \"$cf_excp\" && AC_DEFINE_UNQUOTED(ETIP_NEEDS_${cf_excp})\n\tcf_result=\"$cf_math $cf_excp\"\n\tbreak\n],[])\ndone\ndone\nAC_MSG_RESULT($cf_result)\nCXXFLAGS=\"$cf_save_CXXFLAGS\"\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_FIND_LINKAGE version: 19 updated: 2010/05/29 16:31:02\ndnl ---------------\ndnl Find a library (specifically the linkage used in the code fragment),\ndnl searching for it if it is not already in the library path.\ndnl See also CF_ADD_SEARCHPATH.\ndnl\ndnl Parameters (4-on are optional):\ndnl     $1 = headers for library entrypoint\ndnl     $2 = code fragment for library entrypoint\ndnl     $3 = the library name without the \"-l\" option or \".so\" suffix.\ndnl     $4 = action to perform if successful (default: update CPPFLAGS, etc)\ndnl     $5 = action to perform if not successful\ndnl     $6 = module name, if not the same as the library name\ndnl     $7 = extra libraries\ndnl\ndnl Sets these variables:\ndnl     $cf_cv_find_linkage_$3 - yes/no according to whether linkage is found\ndnl     $cf_cv_header_path_$3 - include-directory if needed\ndnl     $cf_cv_library_path_$3 - library-directory if needed\ndnl     $cf_cv_library_file_$3 - library-file if needed, e.g., -l$3\nAC_DEFUN([CF_FIND_LINKAGE],[\n\n# If the linkage is not already in the $CPPFLAGS/$LDFLAGS configuration, these\n# will be set on completion of the AC_TRY_LINK below.\ncf_cv_header_path_$3=\ncf_cv_library_path_$3=\n\nCF_MSG_LOG([Starting [FIND_LINKAGE]($3,$6)])\n\ncf_save_LIBS=\"$LIBS\"\n\nAC_TRY_LINK([$1],[$2],[\n\tcf_cv_find_linkage_$3=yes\n\tcf_cv_header_path_$3=/usr/include\n\tcf_cv_library_path_$3=/usr/lib\n],[\n\nLIBS=\"-l$3 $7 $cf_save_LIBS\"\n\nAC_TRY_LINK([$1],[$2],[\n\tcf_cv_find_linkage_$3=yes\n\tcf_cv_header_path_$3=/usr/include\n\tcf_cv_library_path_$3=/usr/lib\n\tcf_cv_library_file_$3=\"-l$3\"\n],[\n\tcf_cv_find_linkage_$3=no\n\tLIBS=\"$cf_save_LIBS\"\n\n    CF_VERBOSE(find linkage for $3 library)\n    CF_MSG_LOG([Searching for headers in [FIND_LINKAGE]($3,$6)])\n\n    cf_save_CPPFLAGS=\"$CPPFLAGS\"\n    cf_test_CPPFLAGS=\"$CPPFLAGS\"\n\n    CF_HEADER_PATH(cf_search,ifelse([$6],,[$3],[$6]))\n    for cf_cv_header_path_$3 in $cf_search\n    do\n      if test -d $cf_cv_header_path_$3 ; then\n        CF_VERBOSE(... testing $cf_cv_header_path_$3)\n        CPPFLAGS=\"$cf_save_CPPFLAGS -I$cf_cv_header_path_$3\"\n        AC_TRY_COMPILE([$1],[$2],[\n            CF_VERBOSE(... found $3 headers in $cf_cv_header_path_$3)\n            cf_cv_find_linkage_$3=maybe\n            cf_test_CPPFLAGS=\"$CPPFLAGS\"\n            break],[\n            CPPFLAGS=\"$cf_save_CPPFLAGS\"\n            ])\n      fi\n    done\n\n    if test \"$cf_cv_find_linkage_$3\" = maybe ; then\n\n      CF_MSG_LOG([Searching for $3 library in [FIND_LINKAGE]($3,$6)])\n\n      cf_save_LIBS=\"$LIBS\"\n      cf_save_LDFLAGS=\"$LDFLAGS\"\n\n      ifelse([$6],,,[\n        CPPFLAGS=\"$cf_test_CPPFLAGS\"\n        LIBS=\"-l$3 $7 $cf_save_LIBS\"\n        AC_TRY_LINK([$1],[$2],[\n            CF_VERBOSE(... found $3 library in system)\n            cf_cv_find_linkage_$3=yes])\n            CPPFLAGS=\"$cf_save_CPPFLAGS\"\n            LIBS=\"$cf_save_LIBS\"\n            ])\n\n      if test \"$cf_cv_find_linkage_$3\" != yes ; then\n        CF_LIBRARY_PATH(cf_search,$3)\n        for cf_cv_library_path_$3 in $cf_search\n        do\n          if test -d $cf_cv_library_path_$3 ; then\n            CF_VERBOSE(... testing $cf_cv_library_path_$3)\n            CPPFLAGS=\"$cf_test_CPPFLAGS\"\n            LIBS=\"-l$3 $7 $cf_save_LIBS\"\n            LDFLAGS=\"$cf_save_LDFLAGS -L$cf_cv_library_path_$3\"\n            AC_TRY_LINK([$1],[$2],[\n                CF_VERBOSE(... found $3 library in $cf_cv_library_path_$3)\n                cf_cv_find_linkage_$3=yes\n                cf_cv_library_file_$3=\"-l$3\"\n                break],[\n                CPPFLAGS=\"$cf_save_CPPFLAGS\"\n                LIBS=\"$cf_save_LIBS\"\n                LDFLAGS=\"$cf_save_LDFLAGS\"\n                ])\n          fi\n        done\n        CPPFLAGS=\"$cf_save_CPPFLAGS\"\n        LDFLAGS=\"$cf_save_LDFLAGS\"\n      fi\n\n    else\n      cf_cv_find_linkage_$3=no\n    fi\n    ],$7)\n])\n\nLIBS=\"$cf_save_LIBS\"\n\nif test \"$cf_cv_find_linkage_$3\" = yes ; then\nifelse([$4],,[\n\tCF_ADD_INCDIR($cf_cv_header_path_$3)\n\tCF_ADD_LIBDIR($cf_cv_library_path_$3)\n\tCF_ADD_LIB($3)\n],[$4])\nelse\nifelse([$5],,AC_MSG_WARN(Cannot find $3 library),[$5])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_FUNC_DLSYM version: 2 updated: 2010/05/29 16:31:02\ndnl -------------\ndnl Test for dlsym() and related functions, as well as libdl.\ndnl\ndnl Sets\ndnl\t$cf_have_dlsym\ndnl\t$cf_have_libdl\nAC_DEFUN([CF_FUNC_DLSYM],[\ncf_have_dlsym=no\nAC_CHECK_FUNC(dlsym,cf_have_dlsym=yes,[\n\ncf_have_libdl=no\nAC_CHECK_LIB(dl,dlsym,[\n\tcf_have_dlsym=yes\n\tcf_have_libdl=yes])])\n\nif test \"$cf_have_dlsym\" = yes ; then\n\ttest \"$cf_have_libdl\" = yes && CF_ADD_LIB(dl)\n\n\tAC_MSG_CHECKING(whether able to link to dl*() functions)\n\tAC_TRY_LINK([#include <dlfcn.h>],[\n\t\tvoid *obj;\n\t\tif ((obj = dlopen(\"filename\", 0)) != 0) {\n\t\t\tif (dlsym(obj, \"symbolname\") == 0) {\n\t\t\tdlclose(obj);\n\t\t\t}\n\t\t}],[\n\t\tAC_DEFINE(HAVE_LIBDL)],[\n\t\tAC_MSG_ERROR(Cannot link test program for libdl)])\n\tAC_MSG_RESULT(ok)\nelse\n\tAC_MSG_ERROR(Cannot find dlsym function)\nfi\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_FUNC_MEMMOVE version: 7 updated: 2006/12/16 12:33:30\ndnl ---------------\ndnl Check for memmove, or a bcopy that can handle overlapping copy.  If neither\ndnl is found, add our own version of memmove to the list of objects.\nAC_DEFUN([CF_FUNC_MEMMOVE],\n[\nAC_CHECK_FUNC(memmove,,[\nAC_CHECK_FUNC(bcopy,[\n\tAC_CACHE_CHECK(if bcopy does overlapping moves,cf_cv_good_bcopy,[\n\t\tAC_TRY_RUN([\nint main() {\n\tstatic char data[] = \"abcdefghijklmnopqrstuwwxyz\";\n\tchar temp[40];\n\tbcopy(data, temp, sizeof(data));\n\tbcopy(temp+10, temp, 15);\n\tbcopy(temp+5, temp+15, 10);\n\t${cf_cv_main_return:-return} (strcmp(temp, \"klmnopqrstuwwxypqrstuwwxyz\"));\n}\n\t\t],\n\t\t[cf_cv_good_bcopy=yes],\n\t\t[cf_cv_good_bcopy=no],\n\t\t[cf_cv_good_bcopy=unknown])\n\t\t])\n\t],[cf_cv_good_bcopy=no])\n\tif test \"$cf_cv_good_bcopy\" = yes ; then\n\t\tAC_DEFINE(USE_OK_BCOPY)\n\telse\n\t\tAC_DEFINE(USE_MY_MEMMOVE)\n\tfi\n])])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_FUNC_NANOSLEEP version: 3 updated: 2006/12/16 12:33:30\ndnl -----------------\ndnl Check for existence of workable nanosleep() function.  Some systems, e.g.,\ndnl AIX 4.x, provide a non-working version.\nAC_DEFUN([CF_FUNC_NANOSLEEP],[\nAC_CACHE_CHECK(if nanosleep really works,cf_cv_func_nanosleep,[\nAC_TRY_RUN([\n#include <stdio.h>\n#include <errno.h>\n#include <time.h>\n\n#ifdef HAVE_SYS_TIME_H\n#include <sys/time.h>\n#endif\n\nint main() {\n\tstruct timespec ts1, ts2;\n\tint code;\n\tts1.tv_sec  = 0;\n\tts1.tv_nsec = 750000000;\n\tts2.tv_sec  = 0;\n\tts2.tv_nsec = 0;\n\terrno = 0;\n\tcode = nanosleep(&ts1, &ts2); /* on failure errno is ENOSYS. */\n\t${cf_cv_main_return:-return}(code != 0);\n}\n],\n\t[cf_cv_func_nanosleep=yes],\n\t[cf_cv_func_nanosleep=no],\n\t[cf_cv_func_nanosleep=unknown])])\n\ntest \"$cf_cv_func_nanosleep\" = \"yes\" && AC_DEFINE(HAVE_NANOSLEEP)\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_FUNC_OPENPTY version: 3 updated: 2010/05/29 16:31:02\ndnl ---------------\ndnl Check for openpty() function, along with <pty.h> header.  It may need the\ndnl \"util\" library as well.\nAC_DEFUN([CF_FUNC_OPENPTY],\n[\nAC_CHECK_LIB(util,openpty,cf_cv_lib_util=yes,cf_cv_lib_util=no)\nAC_CACHE_CHECK(for openpty header,cf_cv_func_openpty,[\n    cf_save_LIBS=\"$LIBS\"\n    test $cf_cv_lib_util = yes && CF_ADD_LIB(util)\n    for cf_header in pty.h libutil.h util.h\n    do\n    AC_TRY_LINK([\n#include <$cf_header>\n],[\n    int x = openpty((int *)0, (int *)0, (char *)0,\n                   (struct termios *)0, (struct winsize *)0);\n],[\n        cf_cv_func_openpty=$cf_header\n        break\n],[\n        cf_cv_func_openpty=no\n])\n    done\n    LIBS=\"$cf_save_LIBS\"\n])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_FUNC_POLL version: 4 updated: 2006/12/16 12:33:30\ndnl ------------\ndnl See if the poll function really works.  Some platforms have poll(), but\ndnl it does not work for terminals or files.\nAC_DEFUN([CF_FUNC_POLL],[\nAC_CACHE_CHECK(if poll really works,cf_cv_working_poll,[\nAC_TRY_RUN([\n#include <stdio.h>\n#ifdef HAVE_POLL_H\n#include <poll.h>\n#else\n#include <sys/poll.h>\n#endif\nint main() {\n\tstruct pollfd myfds;\n\tint ret;\n\n\tmyfds.fd = 0;\n\tmyfds.events = POLLIN;\n\n\tret = poll(&myfds, 1, 100);\n\t${cf_cv_main_return:-return}(ret != 0);\n}],\n\t[cf_cv_working_poll=yes],\n\t[cf_cv_working_poll=no],\n\t[cf_cv_working_poll=unknown])])\ntest \"$cf_cv_working_poll\" = \"yes\" && AC_DEFINE(HAVE_WORKING_POLL)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_FUNC_TERMIOS version: 2 updated: 2000/07/22 23:37:24\ndnl ---------------\ndnl Some old/broken variations define tcgetattr() only as a macro in\ndnl termio(s).h\nAC_DEFUN([CF_FUNC_TERMIOS],[\nAC_REQUIRE([CF_STRUCT_TERMIOS])\nAC_CACHE_CHECK(for tcgetattr, cf_cv_have_tcgetattr,[\nAC_TRY_LINK([\n#include <sys/types.h>\n#ifdef HAVE_UNISTD_H\n#include <unistd.h>\n#endif\n#ifdef HAVE_TERMIOS_H\n#include <termios.h>\n#define TTY struct termios\n#else\n#ifdef HAVE_TERMIO_H\n#include <termio.h>\n#define TTY struct termio\n#endif\n#endif\n],[\nTTY foo;\ntcgetattr(1, &foo);],\n[cf_cv_have_tcgetattr=yes],\n[cf_cv_have_tcgetattr=no])])\ntest \"$cf_cv_have_tcgetattr\" = yes && AC_DEFINE(HAVE_TCGETATTR)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_FUNC_VSSCANF version: 3 updated: 2001/12/19 00:50:10\ndnl ---------------\ndnl Check for vsscanf() function, which is in c9x but generally not in earlier\ndnl versions of C.  It is in the GNU C library, and can often be simulated by\ndnl other functions.\nAC_DEFUN([CF_FUNC_VSSCANF],\n[\nAC_CACHE_CHECK(for vsscanf function or workaround,cf_cv_func_vsscanf,[\nAC_TRY_LINK([\n#include <stdarg.h>\n#include <stdio.h>],[\n\tva_list ap;\n\tvsscanf(\"from\", \"%d\", ap)],[cf_cv_func_vsscanf=vsscanf],[\nAC_TRY_LINK([\n#include <stdarg.h>\n#include <stdio.h>],[\n    FILE strbuf;\n    char *str = \"from\";\n\n    strbuf._flag = _IOREAD;\n    strbuf._ptr = strbuf._base = (unsigned char *) str;\n    strbuf._cnt = strlen(str);\n    strbuf._file = _NFILE;\n    return (vfscanf(&strbuf, \"%d\", ap))],[cf_cv_func_vsscanf=vfscanf],[\nAC_TRY_LINK([\n#include <stdarg.h>\n#include <stdio.h>],[\n    FILE strbuf;\n    char *str = \"from\";\n\n    strbuf._flag = _IOREAD;\n    strbuf._ptr = strbuf._base = (unsigned char *) str;\n    strbuf._cnt = strlen(str);\n    strbuf._file = _NFILE;\n    return (_doscan(&strbuf, \"%d\", ap))],[cf_cv_func_vsscanf=_doscan],[\ncf_cv_func_vsscanf=no])])])])\n\ncase $cf_cv_func_vsscanf in #(vi\nvsscanf) AC_DEFINE(HAVE_VSSCANF);; #(vi\nvfscanf) AC_DEFINE(HAVE_VFSCANF);; #(vi\n_doscan) AC_DEFINE(HAVE__DOSCAN);;\nesac\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GCC_ATTRIBUTES version: 14 updated: 2010/10/23 15:52:32\ndnl -----------------\ndnl Test for availability of useful gcc __attribute__ directives to quiet\ndnl compiler warnings.  Though useful, not all are supported -- and contrary\ndnl to documentation, unrecognized directives cause older compilers to barf.\nAC_DEFUN([CF_GCC_ATTRIBUTES],\n[\nif test \"$GCC\" = yes\nthen\ncat > conftest.i <<EOF\n#ifndef GCC_PRINTF\n#define GCC_PRINTF 0\n#endif\n#ifndef GCC_SCANF\n#define GCC_SCANF 0\n#endif\n#ifndef GCC_NORETURN\n#define GCC_NORETURN /* nothing */\n#endif\n#ifndef GCC_UNUSED\n#define GCC_UNUSED /* nothing */\n#endif\nEOF\nif test \"$GCC\" = yes\nthen\n\tAC_CHECKING([for $CC __attribute__ directives])\ncat > conftest.$ac_ext <<EOF\n#line __oline__ \"${as_me:-configure}\"\n#include \"confdefs.h\"\n#include \"conftest.h\"\n#include \"conftest.i\"\n#if\tGCC_PRINTF\n#define GCC_PRINTFLIKE(fmt,var) __attribute__((format(printf,fmt,var)))\n#else\n#define GCC_PRINTFLIKE(fmt,var) /*nothing*/\n#endif\n#if\tGCC_SCANF\n#define GCC_SCANFLIKE(fmt,var)  __attribute__((format(scanf,fmt,var)))\n#else\n#define GCC_SCANFLIKE(fmt,var)  /*nothing*/\n#endif\nextern void wow(char *,...) GCC_SCANFLIKE(1,2);\nextern void oops(char *,...) GCC_PRINTFLIKE(1,2) GCC_NORETURN;\nextern void foo(void) GCC_NORETURN;\nint main(int argc GCC_UNUSED, char *argv[[]] GCC_UNUSED) { return 0; }\nEOF\n\tcf_printf_attribute=no\n\tcf_scanf_attribute=no\n\tfor cf_attribute in scanf printf unused noreturn\n\tdo\n\t\tCF_UPPER(cf_ATTRIBUTE,$cf_attribute)\n\t\tcf_directive=\"__attribute__(($cf_attribute))\"\n\t\techo \"checking for $CC $cf_directive\" 1>&AC_FD_CC\n\n\t\tcase $cf_attribute in #(vi\n\t\tprintf) #(vi\n\t\t\tcf_printf_attribute=yes\n\t\t\tcat >conftest.h <<EOF\n#define GCC_$cf_ATTRIBUTE 1\nEOF\n\t\t\t;;\n\t\tscanf) #(vi\n\t\t\tcf_scanf_attribute=yes\n\t\t\tcat >conftest.h <<EOF\n#define GCC_$cf_ATTRIBUTE 1\nEOF\n\t\t\t;;\n\t\t*) #(vi\n\t\t\tcat >conftest.h <<EOF\n#define GCC_$cf_ATTRIBUTE $cf_directive\nEOF\n\t\t\t;;\n\t\tesac\n\n\t\tif AC_TRY_EVAL(ac_compile); then\n\t\t\ttest -n \"$verbose\" && AC_MSG_RESULT(... $cf_attribute)\n\t\t\tcat conftest.h >>confdefs.h\n\t\t\tcase $cf_attribute in #(vi\n\t\t\tprintf) #(vi\n\t\t\t\tif test \"$cf_printf_attribute\" = no ; then\n\t\t\t\t\tcat >>confdefs.h <<EOF\n#define GCC_PRINTFLIKE(fmt,var) /* nothing */\nEOF\n\t\t\t\telse\n\t\t\t\t\tcat >>confdefs.h <<EOF\n#define GCC_PRINTFLIKE(fmt,var) __attribute__((format(printf,fmt,var)))\nEOF\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tscanf) #(vi\n\t\t\t\tif test \"$cf_scanf_attribute\" = no ; then\n\t\t\t\t\tcat >>confdefs.h <<EOF\n#define GCC_SCANFLIKE(fmt,var) /* nothing */\nEOF\n\t\t\t\telse\n\t\t\t\t\tcat >>confdefs.h <<EOF\n#define GCC_SCANFLIKE(fmt,var)  __attribute__((format(scanf,fmt,var)))\nEOF\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tesac\n\t\tfi\n\tdone\nelse\n\tfgrep define conftest.i >>confdefs.h\nfi\nrm -rf conftest*\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GCC_VERSION version: 5 updated: 2010/04/24 11:02:31\ndnl --------------\ndnl Find version of gcc\nAC_DEFUN([CF_GCC_VERSION],[\nAC_REQUIRE([AC_PROG_CC])\nGCC_VERSION=none\nif test \"$GCC\" = yes ; then\n\tAC_MSG_CHECKING(version of $CC)\n\tGCC_VERSION=\"`${CC} --version 2>/dev/null | sed -e '2,$d' -e 's/^.*(GCC) //' -e 's/^[[^0-9.]]*//' -e 's/[[^0-9.]].*//'`\"\n\ttest -z \"$GCC_VERSION\" && GCC_VERSION=unknown\n\tAC_MSG_RESULT($GCC_VERSION)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GCC_WARNINGS version: 27 updated: 2010/10/23 15:52:32\ndnl ---------------\ndnl Check if the compiler supports useful warning options.  There's a few that\ndnl we don't use, simply because they're too noisy:\ndnl\ndnl\t-Wconversion (useful in older versions of gcc, but not in gcc 2.7.x)\ndnl\t-Wredundant-decls (system headers make this too noisy)\ndnl\t-Wtraditional (combines too many unrelated messages, only a few useful)\ndnl\t-Wwrite-strings (too noisy, but should review occasionally).  This\ndnl\t\tis enabled for ncurses using \"--enable-const\".\ndnl\t-pedantic\ndnl\ndnl Parameter:\ndnl\t$1 is an optional list of gcc warning flags that a particular\ndnl\t\tapplication might want to use, e.g., \"no-unused\" for\ndnl\t\t-Wno-unused\ndnl Special:\ndnl\tIf $with_ext_const is \"yes\", add a check for -Wwrite-strings\ndnl\nAC_DEFUN([CF_GCC_WARNINGS],\n[\nAC_REQUIRE([CF_GCC_VERSION])\nCF_INTEL_COMPILER(GCC,INTEL_COMPILER,CFLAGS)\n\ncat > conftest.$ac_ext <<EOF\n#line __oline__ \"${as_me:-configure}\"\nint main(int argc, char *argv[[]]) { return (argv[[argc-1]] == 0) ; }\nEOF\n\nif test \"$INTEL_COMPILER\" = yes\nthen\n# The \"-wdXXX\" options suppress warnings:\n# remark #1419: external declaration in primary source file\n# remark #1683: explicit conversion of a 64-bit integral type to a smaller integral type (potential portability problem)\n# remark #1684: conversion from pointer to same-sized integral type (potential portability problem)\n# remark #193: zero used for undefined preprocessing identifier\n# remark #593: variable \"curs_sb_left_arrow\" was set but never used\n# remark #810: conversion from \"int\" to \"Dimension={unsigned short}\" may lose significant bits\n# remark #869: parameter \"tw\" was never referenced\n# remark #981: operands are evaluated in unspecified order\n# warning #279: controlling expression is constant\n\n\tAC_CHECKING([for $CC warning options])\n\tcf_save_CFLAGS=\"$CFLAGS\"\n\tEXTRA_CFLAGS=\"-Wall\"\n\tfor cf_opt in \\\n\t\twd1419 \\\n\t\twd1683 \\\n\t\twd1684 \\\n\t\twd193 \\\n\t\twd593 \\\n\t\twd279 \\\n\t\twd810 \\\n\t\twd869 \\\n\t\twd981\n\tdo\n\t\tCFLAGS=\"$cf_save_CFLAGS $EXTRA_CFLAGS -$cf_opt\"\n\t\tif AC_TRY_EVAL(ac_compile); then\n\t\t\ttest -n \"$verbose\" && AC_MSG_RESULT(... -$cf_opt)\n\t\t\tEXTRA_CFLAGS=\"$EXTRA_CFLAGS -$cf_opt\"\n\t\tfi\n\tdone\n\tCFLAGS=\"$cf_save_CFLAGS\"\n\nelif test \"$GCC\" = yes\nthen\n\tAC_CHECKING([for $CC warning options])\n\tcf_save_CFLAGS=\"$CFLAGS\"\n\tEXTRA_CFLAGS=\n\tcf_warn_CONST=\"\"\n\ttest \"$with_ext_const\" = yes && cf_warn_CONST=\"Wwrite-strings\"\n\tfor cf_opt in W Wall \\\n\t\tWbad-function-cast \\\n\t\tWcast-align \\\n\t\tWcast-qual \\\n\t\tWinline \\\n\t\tWmissing-declarations \\\n\t\tWmissing-prototypes \\\n\t\tWnested-externs \\\n\t\tWpointer-arith \\\n\t\tWshadow \\\n\t\tWstrict-prototypes \\\n\t\tWundef $cf_warn_CONST $1\n\tdo\n\t\tCFLAGS=\"$cf_save_CFLAGS $EXTRA_CFLAGS -$cf_opt\"\n\t\tif AC_TRY_EVAL(ac_compile); then\n\t\t\ttest -n \"$verbose\" && AC_MSG_RESULT(... -$cf_opt)\n\t\t\tcase $cf_opt in #(vi\n\t\t\tWcast-qual) #(vi\n\t\t\t\tCPPFLAGS=\"$CPPFLAGS -DXTSTRINGDEFINES\"\n\t\t\t\t;;\n\t\t\tWinline) #(vi\n\t\t\t\tcase $GCC_VERSION in\n\t\t\t\t[[34]].*)\n\t\t\t\t\tCF_VERBOSE(feature is broken in gcc $GCC_VERSION)\n\t\t\t\t\tcontinue;;\n\t\t\t\tesac\n\t\t\t\t;;\n\t\t\tesac\n\t\t\tEXTRA_CFLAGS=\"$EXTRA_CFLAGS -$cf_opt\"\n\t\tfi\n\tdone\n\tCFLAGS=\"$cf_save_CFLAGS\"\nfi\nrm -rf conftest*\n\nAC_SUBST(EXTRA_CFLAGS)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GNAT_GENERICS version: 2 updated: 2011/03/23 20:24:41\ndnl ----------------\nAC_DEFUN([CF_GNAT_GENERICS],\n[\nAC_REQUIRE([CF_GNAT_VERSION])\n\nAC_MSG_CHECKING(if GNAT supports generics)\ncase $cf_gnat_version in #(vi\n3.[[1-9]]*|[[4-9]].*) #(vi\n\tcf_gnat_generics=yes\n\t;;\n*)\n\tcf_gnat_generics=no\n\t;;\nesac\nAC_MSG_RESULT($cf_gnat_generics)\n\nif test \"$cf_gnat_generics\" = yes\nthen\n\tcf_compile_generics=generics\n\tcf_generic_objects=\"\\${GENOBJS}\"\nelse\n\tcf_compile_generics=\n\tcf_generic_objects=\nfi\n\nAC_SUBST(cf_compile_generics)\nAC_SUBST(cf_generic_objects)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GNAT_PRAGMA_UNREF version: 1 updated: 2010/06/19 15:22:18\ndnl --------------------\ndnl Check if the gnat pragma \"Unreferenced\" works.\nAC_DEFUN([CF_GNAT_PRAGMA_UNREF],[\nAC_CACHE_CHECK(if GNAT pragma Unreferenced works,cf_cv_pragma_unreferenced,[\nCF_GNAT_TRY_LINK([procedure conftest;],\n[with Text_IO;\nwith GNAT.OS_Lib;\nprocedure conftest is\n   test : Integer;\n   pragma Unreferenced (test);\nbegin\n   test := 1;\n   Text_IO.Put (\"Hello World\");\n   Text_IO.New_Line;\n   GNAT.OS_Lib.OS_Exit (0);\nend conftest;],\n\t[cf_cv_pragma_unreferenced=yes],\n\t[cf_cv_pragma_unreferenced=no])])\n\n# if the pragma is supported, use it (needed in the Trace code).\nif test $cf_cv_pragma_unreferenced = yes ; then\n\tPRAGMA_UNREF=TRUE\nelse\n\tPRAGMA_UNREF=FALSE\nfi\nAC_SUBST(PRAGMA_UNREF)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GNAT_PROJECTS version: 2 updated: 2011/03/23 20:24:41\ndnl ----------------\ndnl GNAT projects are configured with \".gpr\" project files.\ndnl GNAT libraries are a further development, using the project feature.\nAC_DEFUN([CF_GNAT_PROJECTS],\n[\nAC_REQUIRE([CF_GNAT_VERSION])\n\ncf_gnat_libraries=no\ncf_gnat_projects=no\n\nAC_MSG_CHECKING(if GNAT supports project files)\ncase $cf_gnat_version in #(vi\n3.[[0-9]]*) #(vi\n\t;;\n*)\n\tcase $cf_cv_system_name in #(vi\n\tcygwin*) #(vi\n\t\t;;\n\t*)\n\t\tmkdir conftest.src conftest.bin conftest.lib\n\t\tcd conftest.src\n\t\trm -rf conftest* *~conftest*\n\t\tcat >>library.gpr <<CF_EOF\nproject Library is\n  Kind := External (\"LIB_KIND\");\n  for Library_Name use \"ConfTest\";\n  for Object_Dir use \".\";\n  for Library_ALI_Dir use External(\"LIBRARY_DIR\");\n  for Library_Version use External (\"SONAME\");\n  for Library_Kind use Kind;\n  for Library_Dir use External(\"BUILD_DIR\");\n  Source_Dir := External (\"SOURCE_DIR\");\n  for Source_Dirs use (Source_Dir);\n  package Compiler is\n     for Default_Switches (\"Ada\") use\n       (\"-g\",\n        \"-O2\",\n        \"-gnatafno\",\n        \"-gnatVa\",   -- All validity checks\n        \"-gnatwa\");  -- Activate all optional errors\n  end Compiler;\nend Library;\nCF_EOF\n\t\tcat >>confpackage.ads <<CF_EOF\npackage ConfPackage is\n   procedure conftest;\nend ConfPackage;\nCF_EOF\n\t\tcat >>confpackage.adb <<CF_EOF\nwith Text_IO;\npackage body ConfPackage is\n   procedure conftest is\n   begin\n      Text_IO.Put (\"Hello World\");\n      Text_IO.New_Line;\n   end conftest;\nend ConfPackage;\nCF_EOF\n\t\tif ( $cf_ada_make $ADAFLAGS \\\n\t\t\t\t-Plibrary.gpr \\\n\t\t\t\t-XBUILD_DIR=`cd ../conftest.bin;pwd` \\\n\t\t\t\t-XLIBRARY_DIR=`cd ../conftest.lib;pwd` \\\n\t\t\t\t-XSOURCE_DIR=`pwd` \\\n\t\t\t\t-XSONAME=libConfTest.so.1 \\\n\t\t\t\t-XLIB_KIND=static 1>&AC_FD_CC 2>&1 ) ; then\n\t\t\tcf_gnat_projects=yes\n\t\tfi\n\t\tcd ..\n\t\tif test -f conftest.lib/confpackage.ali\n\t\tthen\n\t\t\tcf_gnat_libraries=yes\n\t\tfi\n\t\trm -rf conftest* *~conftest*\n\t\t;;\n\tesac\n\t;;\nesac\nAC_MSG_RESULT($cf_gnat_projects)\n\nif test $cf_gnat_projects = yes\nthen\n\tAC_MSG_CHECKING(if GNAT supports libraries)\n\tAC_MSG_RESULT($cf_gnat_libraries)\nfi\n\nif test \"$cf_gnat_projects\" = yes\nthen\n\tUSE_OLD_MAKERULES=\"#\"\n\tUSE_GNAT_PROJECTS=\"\"\nelse\n\tUSE_OLD_MAKERULES=\"\"\n\tUSE_GNAT_PROJECTS=\"#\"\nfi\n\nif test \"$cf_gnat_libraries\" = yes\nthen\n\tUSE_GNAT_LIBRARIES=\"\"\nelse\n\tUSE_GNAT_LIBRARIES=\"#\"\nfi\n\nAC_SUBST(USE_OLD_MAKERULES)\nAC_SUBST(USE_GNAT_PROJECTS)\nAC_SUBST(USE_GNAT_LIBRARIES)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GNAT_SIGINT version: 1 updated: 2011/03/27 20:07:59\ndnl --------------\ndnl Check if gnat supports SIGINT, and presumably tasking.  For the latter, it\ndnl is noted that gnat may compile a tasking unit even for configurations which\ndnl fail at runtime.\nAC_DEFUN([CF_GNAT_SIGINT],[\nAC_CACHE_CHECK(if GNAT supports SIGINT,cf_cv_gnat_sigint,[\nCF_GNAT_TRY_LINK([with Ada.Interrupts.Names;\n\npackage ConfTest is\n\n   pragma Warnings (Off);  --  the next pragma exists since 3.11p\n   pragma Unreserve_All_Interrupts;\n   pragma Warnings (On);\n\n   protected Process is\n      procedure Stop;\n      function Continue return Boolean;\n      pragma Attach_Handler (Stop, Ada.Interrupts.Names.SIGINT);\n   private\n      Done : Boolean := False;\n   end Process;\n\nend ConfTest;],\n[package body ConfTest is\n   protected body Process is\n      procedure Stop is\n      begin\n         Done := True;\n      end Stop;\n      function Continue return Boolean is\n      begin\n         return not Done;\n      end Continue;\n   end Process;\nend ConfTest;],\n\t[cf_cv_gnat_sigint=yes],\n\t[cf_cv_gnat_sigint=no])])\n\nif test $cf_cv_gnat_sigint = yes ; then\n\tUSE_GNAT_SIGINT=\"\"\nelse\n\tUSE_GNAT_SIGINT=\"#\"\nfi\nAC_SUBST(USE_GNAT_SIGINT)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GNAT_TRY_LINK version: 3 updated: 2011/03/19 14:47:45\ndnl ----------------\ndnl Verify that a test program compiles/links with GNAT.\ndnl $cf_ada_make is set to the program that compiles/links\ndnl $ADAFLAGS may be set to the GNAT flags.\ndnl\ndnl $1 is the text of the spec\ndnl $2 is the text of the body\ndnl $3 is the shell command to execute if successful\ndnl $4 is the shell command to execute if not successful\nAC_DEFUN([CF_GNAT_TRY_LINK],\n[\nrm -rf conftest* *~conftest*\ncat >>conftest.ads <<CF_EOF\n$1\nCF_EOF\ncat >>conftest.adb <<CF_EOF\n$2\nCF_EOF\nif ( $cf_ada_make $ADAFLAGS conftest 1>&AC_FD_CC 2>&1 ) ; then\nifelse($3,,      :,[      $3])\nifelse($4,,,[else\n   $4])\nfi\nrm -rf conftest* *~conftest*\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GNAT_TRY_RUN version: 5 updated: 2011/03/19 14:47:45\ndnl ---------------\ndnl Verify that a test program compiles and runs with GNAT\ndnl $cf_ada_make is set to the program that compiles/links\ndnl $ADAFLAGS may be set to the GNAT flags.\ndnl\ndnl $1 is the text of the spec\ndnl $2 is the text of the body\ndnl $3 is the shell command to execute if successful\ndnl $4 is the shell command to execute if not successful\nAC_DEFUN([CF_GNAT_TRY_RUN],\n[\nrm -rf conftest* *~conftest*\ncat >>conftest.ads <<CF_EOF\n$1\nCF_EOF\ncat >>conftest.adb <<CF_EOF\n$2\nCF_EOF\nif ( $cf_ada_make $ADAFLAGS conftest 1>&AC_FD_CC 2>&1 ) ; then\n   if ( ./conftest 1>&AC_FD_CC 2>&1 ) ; then\nifelse($3,,      :,[      $3])\nifelse($4,,,[   else\n      $4])\n   fi\nifelse($4,,,[else\n   $4])\nfi\nrm -rf conftest* *~conftest*\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GNAT_VERSION version: 17 updated: 2011/03/23 20:24:41\ndnl ---------------\ndnl Verify version of GNAT.\nAC_DEFUN([CF_GNAT_VERSION],\n[\nAC_MSG_CHECKING(for gnat version)\ncf_gnat_version=`${cf_ada_make:-gnatmake} -v 2>&1 | \\\n\tgrep '[[0-9]].[[0-9]][[0-9]]*' |\\\n    sed -e '2,$d' -e 's/[[^0-9 \\.]]//g' -e 's/^[[ ]]*//' -e 's/ .*//'`\nAC_MSG_RESULT($cf_gnat_version)\n\ncase $cf_gnat_version in #(vi\n3.1[[1-9]]*|3.[[2-9]]*|[[4-9]].*) #(vi\n\tcf_cv_prog_gnat_correct=yes\n\t;;\n*)\n\tAC_MSG_WARN(Unsupported GNAT version $cf_gnat_version. We require 3.11 or better. Disabling Ada95 binding.)\n\tcf_cv_prog_gnat_correct=no\n\t;;\nesac\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_GNU_SOURCE version: 6 updated: 2005/07/09 13:23:07\ndnl -------------\ndnl Check if we must define _GNU_SOURCE to get a reasonable value for\ndnl _XOPEN_SOURCE, upon which many POSIX definitions depend.  This is a defect\ndnl (or misfeature) of glibc2, which breaks portability of many applications,\ndnl since it is interwoven with GNU extensions.\ndnl\ndnl Well, yes we could work around it...\nAC_DEFUN([CF_GNU_SOURCE],\n[\nAC_CACHE_CHECK(if we must define _GNU_SOURCE,cf_cv_gnu_source,[\nAC_TRY_COMPILE([#include <sys/types.h>],[\n#ifndef _XOPEN_SOURCE\nmake an error\n#endif],\n\t[cf_cv_gnu_source=no],\n\t[cf_save=\"$CPPFLAGS\"\n\t CPPFLAGS=\"$CPPFLAGS -D_GNU_SOURCE\"\n\t AC_TRY_COMPILE([#include <sys/types.h>],[\n#ifdef _XOPEN_SOURCE\nmake an error\n#endif],\n\t[cf_cv_gnu_source=no],\n\t[cf_cv_gnu_source=yes])\n\tCPPFLAGS=\"$cf_save\"\n\t])\n])\ntest \"$cf_cv_gnu_source\" = yes && CPPFLAGS=\"$CPPFLAGS -D_GNU_SOURCE\"\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GPP_LIBRARY version: 10 updated: 2010/05/29 16:31:02\ndnl --------------\ndnl If we're trying to use g++, test if libg++ is installed (a rather common\ndnl problem :-).  If we have the compiler but no library, we'll be able to\ndnl configure, but won't be able to build the c++ demo program.\nAC_DEFUN([CF_GPP_LIBRARY],\n[\ncf_cxx_library=unknown\ncase $cf_cv_system_name in #(vi\nos2*) #(vi\n\tcf_gpp_libname=gpp\n\t;;\n*)\n\tcf_gpp_libname=g++\n\t;;\nesac\nif test \"$GXX\" = yes; then\n\tAC_MSG_CHECKING([for lib$cf_gpp_libname])\n\tcf_save=\"$LIBS\"\n\tCF_ADD_LIB($cf_gpp_libname)\n\tAC_TRY_LINK([\n#include <$cf_gpp_libname/builtin.h>\n\t],\n\t[two_arg_error_handler_t foo2 = lib_error_handler],\n\t[cf_cxx_library=yes\n\t CF_ADD_LIB($cf_gpp_libname,CXXLIBS)\n\t if test \"$cf_gpp_libname\" = cpp ; then\n\t    AC_DEFINE(HAVE_GPP_BUILTIN_H)\n\t else\n\t    AC_DEFINE(HAVE_GXX_BUILTIN_H)\n\t fi],\n\t[AC_TRY_LINK([\n#include <builtin.h>\n\t],\n\t[two_arg_error_handler_t foo2 = lib_error_handler],\n\t[cf_cxx_library=yes\n\t CF_ADD_LIB($cf_gpp_libname,CXXLIBS)\n\t AC_DEFINE(HAVE_BUILTIN_H)],\n\t[cf_cxx_library=no])])\n\tLIBS=\"$cf_save\"\n\tAC_MSG_RESULT($cf_cxx_library)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GXX_VERSION version: 6 updated: 2010/10/23 15:44:18\ndnl --------------\ndnl Check for version of g++\nAC_DEFUN([CF_GXX_VERSION],[\nAC_REQUIRE([AC_PROG_CPP])\nGXX_VERSION=none\nif test \"$GXX\" = yes; then\n\tAC_MSG_CHECKING(version of g++)\n\tGXX_VERSION=\"`${CXX:-g++} --version| sed -e '2,$d' -e 's/^.*(GCC) //' -e 's/^[[^0-9.]]*//' -e 's/[[^0-9.]].*//'`\"\n\ttest -z \"$GXX_VERSION\" && GXX_VERSION=unknown\n\tAC_MSG_RESULT($GXX_VERSION)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_GXX_WARNINGS version: 6 updated: 2010/08/14 18:25:37\ndnl ---------------\ndnl Check if the compiler supports useful warning options.\ndnl\ndnl Most of gcc's options apply to g++, except:\ndnl\t-Wbad-function-cast\ndnl\t-Wmissing-declarations\ndnl\t-Wnested-externs\ndnl\ndnl Omit a few (for now):\ndnl\t-Winline\ndnl\ndnl Parameter:\ndnl\t$1 is an optional list of g++ warning flags that a particular\ndnl\t\tapplication might want to use, e.g., \"no-unused\" for\ndnl\t\t-Wno-unused\ndnl Special:\ndnl\tIf $with_ext_const is \"yes\", add a check for -Wwrite-strings\ndnl\nAC_DEFUN([CF_GXX_WARNINGS],\n[\n\nCF_INTEL_COMPILER(GXX,INTEL_CPLUSPLUS,CXXFLAGS)\n\nAC_REQUIRE([CF_GXX_VERSION])\n\nAC_LANG_SAVE\nAC_LANG_CPLUSPLUS\n\ncat > conftest.$ac_ext <<EOF\n#line __oline__ \"configure\"\nint main(int argc, char *argv[[]]) { return (argv[[argc-1]] == 0) ; }\nEOF\n\nif test \"$INTEL_CPLUSPLUS\" = yes\nthen\n# The \"-wdXXX\" options suppress warnings:\n# remark #1419: external declaration in primary source file\n# remark #1682: implicit conversion of a 64-bit integral type to a smaller integral type (potential portability problem)\n# remark #1683: explicit conversion of a 64-bit integral type to a smaller integral type (potential portability problem)\n# remark #1684: conversion from pointer to same-sized integral type (potential portability problem)\n# remark #193: zero used for undefined preprocessing identifier\n# remark #593: variable \"curs_sb_left_arrow\" was set but never used\n# remark #810: conversion from \"int\" to \"Dimension={unsigned short}\" may lose significant bits\n# remark #869: parameter \"tw\" was never referenced\n# remark #981: operands are evaluated in unspecified order\n# warning #269: invalid format string conversion\n\n\tAC_CHECKING([for $CC warning options])\n\tcf_save_CXXFLAGS=\"$CXXFLAGS\"\n\tEXTRA_CXXFLAGS=\"-Wall\"\n\tfor cf_opt in \\\n\t\twd1419 \\\n\t\twd1682 \\\n\t\twd1683 \\\n\t\twd1684 \\\n\t\twd193 \\\n\t\twd279 \\\n\t\twd593 \\\n\t\twd810 \\\n\t\twd869 \\\n\t\twd981\n\tdo\n\t\tCXXFLAGS=\"$cf_save_CXXFLAGS $EXTRA_CXXFLAGS -$cf_opt\"\n\t\tif AC_TRY_EVAL(ac_compile); then\n\t\t\ttest -n \"$verbose\" && AC_MSG_RESULT(... -$cf_opt)\n\t\t\tEXTRA_CXXFLAGS=\"$EXTRA_CXXFLAGS -$cf_opt\"\n\t\tfi\n\tdone\n\tCXXFLAGS=\"$cf_save_CXXFLAGS\"\n\nelif test \"$GXX\" = yes\nthen\n\tAC_CHECKING([for $CXX warning options])\n\tcf_save_CXXFLAGS=\"$CXXFLAGS\"\n\tEXTRA_CXXFLAGS=\"-W -Wall\"\n\tcf_gxx_extra_warnings=\"\"\n\ttest \"$with_ext_const\" = yes && cf_gxx_extra_warnings=\"Wwrite-strings\"\n\tcase \"$GCC_VERSION\" in\n\t[[1-2]].*)\n\t\t;;\n\t*)\n\t\tcf_gxx_extra_warnings=\"$cf_gxx_extra_warnings Weffc++\"\n\t\t;;\n\tesac\n\tfor cf_opt in \\\n\t\tWabi \\\n\t\tfabi-version=0 \\\n\t\tWoverloaded-virtual \\\n\t\tWsign-promo \\\n\t\tWsynth \\\n\t\tWold-style-cast \\\n\t\tWcast-align \\\n\t\tWcast-qual \\\n\t\tWmissing-prototypes \\\n\t\tWpointer-arith \\\n\t\tWshadow \\\n\t\tWstrict-prototypes \\\n\t\tWundef $cf_gxx_extra_warnings $1\n\tdo\n\t\tCXXFLAGS=\"$cf_save_CXXFLAGS $EXTRA_CXXFLAGS -Werror -$cf_opt\"\n\t\tif AC_TRY_EVAL(ac_compile); then\n\t\t\ttest -n \"$verbose\" && AC_MSG_RESULT(... -$cf_opt)\n\t\t\tEXTRA_CXXFLAGS=\"$EXTRA_CXXFLAGS -$cf_opt\"\n\t\telse\n\t\t\ttest -n \"$verbose\" && AC_MSG_RESULT(... no -$cf_opt)\n\t\tfi\n\tdone\n\tCXXFLAGS=\"$cf_save_CXXFLAGS\"\nfi\n\nrm -rf conftest*\nAC_LANG_RESTORE\nAC_SUBST(EXTRA_CXXFLAGS)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_HASHED_DB version: 4 updated: 2010/05/29 16:31:02\ndnl ------------\ndnl Look for an instance of the Berkeley hashed database.\ndnl\ndnl $1 = optional parameter, to specify install-prefix for the database.\nAC_DEFUN([CF_HASHED_DB],\n[\nifelse([$1],,,[\ncase $1 in #(vi\nyes|*able*) #(vi\n    ;;\n*)\n    if test -d \"$1\" ; then\n        CF_ADD_INCDIR($1/include)\n        CF_ADD_LIBDIR($1/lib)\n    fi\nesac\n])\nAC_CHECK_HEADER(db.h,[\nCF_HASHED_DB_VERSION\nif test \"$cf_cv_hashed_db_version\" = unknown ; then\n\tAC_MSG_ERROR(Cannot determine version of db)\nelse\n\tCF_HASHED_DB_LIBS\n\tif test \"$cf_cv_hashed_db_libs\" = unknown ; then\n\t\tAC_MSG_ERROR(Cannot determine library for db)\n\telif test \"$cf_cv_hashed_db_libs\" != default ; then\n\t\tCF_ADD_LIB($cf_cv_hashed_db_libs)\n\tfi\nfi\n],[\n\tAC_MSG_ERROR(Cannot find db.h)\n])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_HASHED_DB_LIBS version: 9 updated: 2010/05/29 16:31:02\ndnl -----------------\ndnl Given that we have the header and version for hashed database, find the\ndnl library information.\nAC_DEFUN([CF_HASHED_DB_LIBS],\n[\nAC_CACHE_CHECK(for db libraries, cf_cv_hashed_db_libs,[\ncf_cv_hashed_db_libs=unknown\nfor cf_db_libs in \"\" db$cf_cv_hashed_db_version db-$cf_cv_hashed_db_version db ''\ndo\n\tcf_save_libs=\"$LIBS\"\n\tif test -n \"$cf_db_libs\"; then\n\t\tCF_ADD_LIB($cf_db_libs)\n\tfi\n\tCF_MSG_LOG(checking for library \"$cf_db_libs\")\n\tAC_TRY_LINK([\n$ac_includes_default\n#include <db.h>\n],[\n\tchar *path = \"/tmp/foo\";\n#ifdef DB_VERSION_MAJOR\n#if DB_VERSION_MAJOR >= 4\n\tDB *result = 0;\n\tdb_create(&result, NULL, 0);\n\tresult->open(result,\n\t\tNULL,\n\t\tpath,\n\t\tpath,\n\t\tDB_HASH,\n\t\tDB_CREATE,\n\t\t0644);\n#elif DB_VERSION_MAJOR >= 3\n\tDB *result = 0;\n\tdb_create(&result, NULL, 0);\n\tresult->open(result,\n\t\tpath,\n\t\tpath,\n\t\tDB_HASH,\n\t\tDB_CREATE,\n\t\t0644);\n#elif DB_VERSION_MAJOR >= 2\n\tDB *result = 0;\n\tdb_open(path,\n\t\tDB_HASH,\n\t\tDB_CREATE,\n\t\t0644,\n\t\t(DB_ENV *) 0,\n\t\t(DB_INFO *) 0,\n\t\t&result);\n#endif /* DB_VERSION_MAJOR */\n#else\n\tDB *result = dbopen(path,\n\t\t     2,\n\t\t     0644,\n\t\t     DB_HASH,\n\t\t     0);\n#endif\n\t${cf_cv_main_return:-return}(result != 0)\n],[\n\tif test -n \"$cf_db_libs\" ; then\n\t\tcf_cv_hashed_db_libs=$cf_db_libs\n\telse\n\t\tcf_cv_hashed_db_libs=default\n\tfi\n\tLIBS=\"$cf_save_libs\"\n\tbreak\n])\n\tLIBS=\"$cf_save_libs\"\ndone\n])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_HASHED_DB_VERSION version: 3 updated: 2007/12/01 15:01:37\ndnl --------------------\ndnl Given that we have the header file for hashed database, find the version\ndnl information.\nAC_DEFUN([CF_HASHED_DB_VERSION],\n[\nAC_CACHE_CHECK(for version of db, cf_cv_hashed_db_version,[\ncf_cv_hashed_db_version=unknown\n\nfor cf_db_version in 1 2 3 4 5\ndo\n\tCF_MSG_LOG(checking for db version $cf_db_version)\n\tAC_TRY_COMPILE([\n$ac_includes_default\n#include <db.h>\n\n#ifdef DB_VERSION_MAJOR\n\t/* db2 (DB_VERSION_MAJOR=2) has also DB_VERSION_MINOR, tested with 7 */\n#if $cf_db_version == DB_VERSION_MAJOR\n\t/* ok */\n#else\n\tmake an error\n#endif\n#else\n#if $cf_db_version == 1\n\t/* ok: assuming this is DB 1.8.5 */\n#else\n\tmake an error\n#endif\n#endif\n],[DBT *foo = 0],[\n\tcf_cv_hashed_db_version=$cf_db_version\n\tbreak\n\t])\ndone\n])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_HEADER_PATH version: 12 updated: 2010/05/05 05:22:40\ndnl --------------\ndnl Construct a search-list of directories for a nonstandard header-file\ndnl\ndnl Parameters\ndnl\t$1 = the variable to return as result\ndnl\t$2 = the package name\nAC_DEFUN([CF_HEADER_PATH],\n[\n$1=\n\n# collect the current set of include-directories from compiler flags\ncf_header_path_list=\"\"\nif test -n \"${CFLAGS}${CPPFLAGS}\" ; then\n\tfor cf_header_path in $CPPFLAGS $CFLAGS\n\tdo\n\t\tcase $cf_header_path in #(vi\n\t\t-I*)\n\t\t\tcf_header_path=`echo \".$cf_header_path\" |sed -e 's/^...//' -e 's,/include$,,'`\n\t\t\tCF_ADD_SUBDIR_PATH($1,$2,include,$cf_header_path,NONE)\n\t\t\tcf_header_path_list=\"$cf_header_path_list [$]$1\"\n\t\t\t;;\n\t\tesac\n\tdone\nfi\n\n# add the variations for the package we are looking for\nCF_SUBDIR_PATH($1,$2,include)\n\ntest \"$includedir\" != NONE && \\\ntest \"$includedir\" != \"/usr/include\" && \\\ntest -d \"$includedir\" && {\n\ttest -d $includedir &&    $1=\"[$]$1 $includedir\"\n\ttest -d $includedir/$2 && $1=\"[$]$1 $includedir/$2\"\n}\n\ntest \"$oldincludedir\" != NONE && \\\ntest \"$oldincludedir\" != \"/usr/include\" && \\\ntest -d \"$oldincludedir\" && {\n\ttest -d $oldincludedir    && $1=\"[$]$1 $oldincludedir\"\n\ttest -d $oldincludedir/$2 && $1=\"[$]$1 $oldincludedir/$2\"\n}\n\n$1=\"[$]$1 $cf_header_path_list\"\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_HELP_MESSAGE version: 3 updated: 1998/01/14 10:56:23\ndnl ---------------\ndnl Insert text into the help-message, for readability, from AC_ARG_WITH.\nAC_DEFUN([CF_HELP_MESSAGE],\n[AC_DIVERT_HELP([$1])dnl\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_INCLUDE_DIRS version: 6 updated: 2009/01/06 19:37:40\ndnl ---------------\ndnl Construct the list of include-options according to whether we're building\ndnl in the source directory or using '--srcdir=DIR' option.  If we're building\ndnl with gcc, don't append the includedir if it happens to be /usr/include,\ndnl since that usually breaks gcc's shadow-includes.\nAC_DEFUN([CF_INCLUDE_DIRS],\n[\nCPPFLAGS=\"$CPPFLAGS -I. -I../include\"\nif test \"$srcdir\" != \".\"; then\n\tCPPFLAGS=\"$CPPFLAGS -I\\${srcdir}/../include\"\nfi\nif test \"$GCC\" != yes; then\n\tCPPFLAGS=\"$CPPFLAGS -I\\${includedir}\"\nelif test \"$includedir\" != \"/usr/include\"; then\n\tif test \"$includedir\" = '${prefix}/include' ; then\n\t\tif test $prefix != /usr ; then\n\t\t\tCPPFLAGS=\"$CPPFLAGS -I\\${includedir}\"\n\t\tfi\n\telse\n\t\tCPPFLAGS=\"$CPPFLAGS -I\\${includedir}\"\n\tfi\nfi\nAC_SUBST(CPPFLAGS)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_INTEL_COMPILER version: 4 updated: 2010/05/26 05:38:42\ndnl -----------------\ndnl Check if the given compiler is really the Intel compiler for Linux.  It\ndnl tries to imitate gcc, but does not return an error when it finds a mismatch\ndnl between prototypes, e.g., as exercised by CF_MISSING_CHECK.\ndnl\ndnl This macro should be run \"soon\" after AC_PROG_CC or AC_PROG_CPLUSPLUS, to\ndnl ensure that it is not mistaken for gcc/g++.  It is normally invoked from\ndnl the wrappers for gcc and g++ warnings.\ndnl\ndnl $1 = GCC (default) or GXX\ndnl $2 = INTEL_COMPILER (default) or INTEL_CPLUSPLUS\ndnl $3 = CFLAGS (default) or CXXFLAGS\nAC_DEFUN([CF_INTEL_COMPILER],[\nifelse([$2],,INTEL_COMPILER,[$2])=no\n\nif test \"$ifelse([$1],,[$1],GCC)\" = yes ; then\n\tcase $host_os in\n\tlinux*|gnu*)\n\t\tAC_MSG_CHECKING(if this is really Intel ifelse([$1],GXX,C++,C) compiler)\n\t\tcf_save_CFLAGS=\"$ifelse([$3],,CFLAGS,[$3])\"\n\t\tifelse([$3],,CFLAGS,[$3])=\"$ifelse([$3],,CFLAGS,[$3]) -no-gcc\"\n\t\tAC_TRY_COMPILE([],[\n#ifdef __INTEL_COMPILER\n#else\nmake an error\n#endif\n],[ifelse([$2],,INTEL_COMPILER,[$2])=yes\ncf_save_CFLAGS=\"$cf_save_CFLAGS -we147 -no-gcc\"\n],[])\n\t\tifelse([$3],,CFLAGS,[$3])=\"$cf_save_CFLAGS\"\n\t\tAC_MSG_RESULT($ifelse([$2],,INTEL_COMPILER,[$2]))\n\t\t;;\n\tesac\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_ISASCII version: 3 updated: 2000/08/12 23:18:52\ndnl ----------\ndnl Check if we have either a function or macro for 'isascii()'.\nAC_DEFUN([CF_ISASCII],\n[\nAC_MSG_CHECKING(for isascii)\nAC_CACHE_VAL(cf_cv_have_isascii,[\n\tAC_TRY_LINK([#include <ctype.h>],[int x = isascii(' ')],\n\t[cf_cv_have_isascii=yes],\n\t[cf_cv_have_isascii=no])\n])dnl\nAC_MSG_RESULT($cf_cv_have_isascii)\ntest \"$cf_cv_have_isascii\" = yes && AC_DEFINE(HAVE_ISASCII)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_LARGEFILE version: 7 updated: 2007/06/02 11:58:50\ndnl ------------\ndnl Add checks for large file support.\nAC_DEFUN([CF_LARGEFILE],[\nifdef([AC_FUNC_FSEEKO],[\n    AC_SYS_LARGEFILE\n    if test \"$enable_largefile\" != no ; then\n\tAC_FUNC_FSEEKO\n\n\t# Normally we would collect these definitions in the config.h,\n\t# but (like _XOPEN_SOURCE), some environments rely on having these\n\t# defined before any of the system headers are included.  Another\n\t# case comes up with C++, e.g., on AIX the compiler compiles the\n\t# header files by themselves before looking at the body files it is\n\t# told to compile.  For ncurses, those header files do not include\n\t# the config.h\n\ttest \"$ac_cv_sys_large_files\"      != no && CPPFLAGS=\"$CPPFLAGS -D_LARGE_FILES \"\n\ttest \"$ac_cv_sys_largefile_source\" != no && CPPFLAGS=\"$CPPFLAGS -D_LARGEFILE_SOURCE \"\n\ttest \"$ac_cv_sys_file_offset_bits\" != no && CPPFLAGS=\"$CPPFLAGS -D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits \"\n\n\tAC_CACHE_CHECK(whether to use struct dirent64, cf_cv_struct_dirent64,[\n\t\tAC_TRY_COMPILE([\n#include <sys/types.h>\n#include <dirent.h>\n\t\t],[\n\t\t/* if transitional largefile support is setup, this is true */\n\t\textern struct dirent64 * readdir(DIR *);\n\t\tstruct dirent64 *x = readdir((DIR *)0);\n\t\tstruct dirent *y = readdir((DIR *)0);\n\t\tint z = x - y;\n\t\t],\n\t\t[cf_cv_struct_dirent64=yes],\n\t\t[cf_cv_struct_dirent64=no])\n\t])\n\ttest \"$cf_cv_struct_dirent64\" = yes && AC_DEFINE(HAVE_STRUCT_DIRENT64)\n    fi\n])\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_LDFLAGS_STATIC version: 8 updated: 2010/10/23 14:39:56\ndnl -----------------\ndnl Check for compiler/linker flags used to temporarily force usage of static\ndnl libraries.  This depends on the compiler and platform.  Use this to help\ndnl ensure that the linker picks up a given library based on its position in\ndnl the list of linker options and libraries.\nAC_DEFUN([CF_LDFLAGS_STATIC],[\n\nif test \"$GCC\" = yes ; then\n\tcase $cf_cv_system_name in #(\n\tOS/2*|os2*|aix[[4]]*|solaris2.1[[0-9]]|darwin*) \t#( vi\n\t\tLDFLAGS_STATIC=\n\t\tLDFLAGS_SHARED=\n\t\t;;\n    *) \t#( normally, except when broken\n        LDFLAGS_STATIC=-static\n        LDFLAGS_SHARED=-dynamic\n        ;;\n    esac\nelse\n\tcase $cf_cv_system_name in #(\n\taix[[456]]*) \t#( from ld manpage\n\t\tLDFLAGS_STATIC=-bstatic\n\t\tLDFLAGS_SHARED=-bdynamic\n\t\t;;\n\thpux*)\t\t#( from ld manpage for hpux10.20, hpux11.11\n\t\t# We could also use just \"archive\" and \"shared\".\n\t\tLDFLAGS_STATIC=-Wl,-a,archive_shared\n\t\tLDFLAGS_SHARED=-Wl,-a,shared_archive\n\t\t;;\n\tirix*)\t\t#( from ld manpage IRIX64\n\t\tLDFLAGS_STATIC=-Bstatic\n\t\tLDFLAGS_SHARED=-Bdynamic\n\t\t;;\n\tosf[[45]]*)\t#( from ld manpage osf4.0d, osf5.1\n\t\t# alternative \"-oldstyle_liblookup\" (not in cc manpage)\n\t\tLDFLAGS_STATIC=-noso\n\t\tLDFLAGS_SHARED=-so_archive\n\t\t;;\n\tsolaris2*)\n\t\tLDFLAGS_STATIC=-Bstatic\n\t\tLDFLAGS_SHARED=-Bdynamic\n\t\t;;\n\tesac\nfi\n\nif test -n \"$LDFLAGS_STATIC\" && test -n \"$LDFLAGS_SHARED\"\nthen\n\tAC_MSG_CHECKING(if linker supports switching between static/dynamic)\n\n\trm -f libconftest.a\n\tcat >conftest.$ac_ext <<EOF\n#line __oline__ \"configure\"\n#include <stdio.h>\nint cf_ldflags_static(FILE *fp) { return fflush(fp); }\nEOF\n\tif AC_TRY_EVAL(ac_compile) ; then\n\t\t( $AR $ARFLAGS libconftest.a conftest.o ) 2>&AC_FD_CC 1>/dev/null\n\t\t( eval $RANLIB libconftest.a ) 2>&AC_FD_CC >/dev/null\n\tfi\n\trm -f conftest.*\n\n\tcf_save_LIBS=\"$LIBS\"\n\n\tLIBS=\"$LDFLAGS_STATIC -L`pwd` -lconftest $LDFLAGS_DYNAMIC $LIBS\"\n\tAC_TRY_LINK([\n#line __oline__ \"configure\"\n#include <stdio.h>\nint cf_ldflags_static(FILE *fp);\n],[\n\treturn cf_ldflags_static(stdin);\n],[cf_ldflags_static=yes],[cf_ldflags_static=no])\n\n\trm -f libconftest.*\n\tLIBS=\"$cf_save_LIBS\"\n\n\tAC_MSG_RESULT($cf_ldflags_static)\n\n\tif test $cf_ldflags_static != yes\n\tthen\n\t\tLDFLAGS_STATIC=\n\t\tLDFLAGS_SHARED=\n\tfi\nelse\n\tLDFLAGS_STATIC=\n\tLDFLAGS_SHARED=\nfi\n\nAC_SUBST(LDFLAGS_STATIC)\nAC_SUBST(LDFLAGS_SHARED)\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_LD_RPATH_OPT version: 3 updated: 2010/06/02 05:03:05\ndnl ---------------\ndnl For the given system and compiler, find the compiler flags to pass to the\ndnl loader to use the \"rpath\" feature.\nAC_DEFUN([CF_LD_RPATH_OPT],\n[\nAC_REQUIRE([CF_CHECK_CACHE])\n\nLD_RPATH_OPT=\nAC_MSG_CHECKING(for an rpath option)\ncase $cf_cv_system_name in #(vi\nirix*) #(vi\n\tif test \"$GCC\" = yes; then\n\t\tLD_RPATH_OPT=\"-Wl,-rpath,\"\n\telse\n\t\tLD_RPATH_OPT=\"-rpath \"\n\tfi\n\t;;\nlinux*|gnu*|k*bsd*-gnu) #(vi\n\tLD_RPATH_OPT=\"-Wl,-rpath,\"\n\t;;\nopenbsd[[2-9]].*) #(vi\n\tLD_RPATH_OPT=\"-Wl,-rpath,\"\n\t;;\nfreebsd*) #(vi\n\tLD_RPATH_OPT=\"-rpath \"\n\t;;\nnetbsd*) #(vi\n\tLD_RPATH_OPT=\"-Wl,-rpath,\"\n\t;;\nosf*|mls+*) #(vi\n\tLD_RPATH_OPT=\"-rpath \"\n\t;;\nsolaris2*) #(vi\n\tLD_RPATH_OPT=\"-R\"\n\t;;\n*)\n\t;;\nesac\nAC_MSG_RESULT($LD_RPATH_OPT)\n\ncase \"x$LD_RPATH_OPT\" in #(vi\nx-R*)\n\tAC_MSG_CHECKING(if we need a space after rpath option)\n\tcf_save_LIBS=\"$LIBS\"\n\tCF_ADD_LIBS(${LD_RPATH_OPT}$libdir)\n\tAC_TRY_LINK(, , cf_rpath_space=no, cf_rpath_space=yes)\n\tLIBS=\"$cf_save_LIBS\"\n\tAC_MSG_RESULT($cf_rpath_space)\n\ttest \"$cf_rpath_space\" = yes && LD_RPATH_OPT=\"$LD_RPATH_OPT \"\n\t;;\nesac\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_LIBRARY_PATH version: 9 updated: 2010/03/28 12:52:50\ndnl ---------------\ndnl Construct a search-list of directories for a nonstandard library-file\ndnl\ndnl Parameters\ndnl\t$1 = the variable to return as result\ndnl\t$2 = the package name\nAC_DEFUN([CF_LIBRARY_PATH],\n[\n$1=\ncf_library_path_list=\"\"\nif test -n \"${LDFLAGS}${LIBS}\" ; then\n\tfor cf_library_path in $LDFLAGS $LIBS\n\tdo\n\t\tcase $cf_library_path in #(vi\n\t\t-L*)\n\t\t\tcf_library_path=`echo \".$cf_library_path\" |sed -e 's/^...//' -e 's,/lib$,,'`\n\t\t\tCF_ADD_SUBDIR_PATH($1,$2,lib,$cf_library_path,NONE)\n\t\t\tcf_library_path_list=\"$cf_library_path_list [$]$1\"\n\t\t\t;;\n\t\tesac\n\tdone\nfi\n\nCF_SUBDIR_PATH($1,$2,lib)\n\n$1=\"$cf_library_path_list [$]$1\"\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_LIB_PREFIX version: 8 updated: 2008/09/13 11:34:16\ndnl -------------\ndnl Compute the library-prefix for the given host system\ndnl $1 = variable to set\nAC_DEFUN([CF_LIB_PREFIX],\n[\n\tcase $cf_cv_system_name in #(vi\n\tOS/2*|os2*) #(vi\n        LIB_PREFIX=''\n        ;;\n\t*)\tLIB_PREFIX='lib'\n        ;;\n\tesac\nifelse($1,,,[$1=$LIB_PREFIX])\n\tAC_SUBST(LIB_PREFIX)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_LIB_RULES version: 61 updated: 2010/10/23 16:10:30\ndnl ------------\ndnl Append definitions and rules for the given models to the subdirectory\ndnl Makefiles, and the recursion rule for the top-level Makefile.  If the\ndnl subdirectory is a library-source directory, modify the LIBS_TO_MAKE list in\ndnl the corresponding makefile to list the models that we'll generate.\ndnl\ndnl For shared libraries, make a list of symbolic links to construct when\ndnl generating each library.  The convention used for Linux is the simplest\ndnl one:\ndnl\tlib<name>.so\t->\ndnl\tlib<name>.so.<major>\t->\ndnl\tlib<name>.so.<maj>.<minor>\nAC_DEFUN([CF_LIB_RULES],\n[\nCF_LIB_PREFIX(cf_prefix)\nAC_REQUIRE([CF_SUBST_NCURSES_VERSION])\n\nif test $cf_cv_shlib_version = cygdll ; then\n\tTINFO_NAME=$TINFO_ARG_SUFFIX\n\tTINFO_SUFFIX=.dll\nfi\n\nif test -n \"$TINFO_SUFFIX\" ; then\n\tcase $TINFO_SUFFIX in\n\ttw*)\n\t\tTINFO_NAME=\"${TINFO_NAME}tw\"\n\t\tTINFO_SUFFIX=`echo $TINFO_SUFFIX | sed 's/^tw//'`\n\t\t;;\n\tt*)\n\t\tTINFO_NAME=\"${TINFO_NAME}t\"\n\t\tTINFO_SUFFIX=`echo $TINFO_SUFFIX | sed 's/^t//'`\n\t\t;;\n\tw*)\n\t\tTINFO_NAME=\"${TINFO_NAME}w\"\n\t\tTINFO_SUFFIX=`echo $TINFO_SUFFIX | sed 's/^w//'`\n\t\t;;\n\tesac\nfi\n\nfor cf_dir in $SRC_SUBDIRS\ndo\n\tif test ! -d $srcdir/$cf_dir ; then\n\t\tcontinue\n\telif test -f $srcdir/$cf_dir/modules; then\n\n\t\tSHARED_LIB=\n\t\tLIBS_TO_MAKE=\n\t\tfor cf_item in $cf_LIST_MODELS\n\t\tdo\n\t\t\tCF_LIB_SUFFIX($cf_item,cf_suffix,cf_depsuf)\n\t\t\tif test $cf_item = shared ; then\n\t\t\tif test \"$cf_cv_do_symlinks\" = yes ; then\n\t\t\t\tcase \"$cf_cv_shlib_version\" in #(vi\n\t\t\t\trel) #(vi\n\t\t\t\t\tcase \"$cf_cv_system_name\" in #(vi\n\t\t\t\t\tdarwin*)\n\t\t\t\t\tcase .${LIB_SUFFIX} in\n\t\t\t\t\t.tw*)\n\t\t\t\t\t\tcf_suffix=`echo $cf_suffix | sed 's/^tw//'`\n\t\t\t\t\t\tcf_suffix=tw'.${REL_VERSION}'\"$cf_suffix\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t.t*)\n\t\t\t\t\t\tcf_suffix=`echo $cf_suffix | sed 's/^t//'`\n\t\t\t\t\t\tcf_suffix=t'.${REL_VERSION}'\"$cf_suffix\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t.w*)\n\t\t\t\t\t\tcf_suffix=`echo $cf_suffix | sed 's/^w//'`\n\t\t\t\t\t\tcf_suffix=w'.${REL_VERSION}'\"$cf_suffix\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t*)\n\t\t\t\t\t\tcf_suffix='.${REL_VERSION}'\"$cf_suffix\"\n\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\t\t;; #(vi\n\t\t\t\t\t*) cf_suffix=\"$cf_suffix\"'.${REL_VERSION}' ;;\n\t\t\t\t\tesac\n\t\t\t\t\t;;\n\t\t\t\tabi)\n\t\t\t\t\tcase \"$cf_cv_system_name\" in #(vi\n\t\t\t\t\tdarwin*)\n\t\t\t\t\tcase .${LIB_SUFFIX} in\n\t\t\t\t\t.tw*)\n\t\t\t\t\t\tcf_suffix=`echo $cf_suffix | sed 's/^tw//'`\n\t\t\t\t\t\tcf_suffix=tw'.${ABI_VERSION}'\"$cf_suffix\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t.t*)\n\t\t\t\t\t\tcf_suffix=`echo $cf_suffix | sed 's/^t//'`\n\t\t\t\t\t\tcf_suffix=t'.${ABI_VERSION}'\"$cf_suffix\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t.w*)\n\t\t\t\t\t\tcf_suffix=`echo $cf_suffix | sed 's/^w//'`\n\t\t\t\t\t\tcf_suffix=w'.${ABI_VERSION}'\"$cf_suffix\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t*)\n\t\t\t\t\t\tcf_suffix='.${ABI_VERSION}'\"$cf_suffix\"\n\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\t\t;; #(vi\n\t\t\t\t\t*) cf_suffix=\"$cf_suffix\"'.${ABI_VERSION}' ;;\n\t\t\t\t\tesac\n\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tfi\n\t\t\t# cygwin needs import library, and has unique naming convention\n\t\t\t# use autodetected ${cf_prefix} for import lib and static lib, but\n\t\t\t# use 'cyg' prefix for shared lib.\n\t\t\tif test $cf_cv_shlib_version = cygdll ; then\n\t\t\t\tcf_cygsuf=`echo \"$cf_suffix\" | sed -e 's/\\.dll/\\${ABI_VERSION}.dll/'`\n\t\t\t\tLIBS_TO_MAKE=\"$LIBS_TO_MAKE ../lib/cyg${cf_dir}${cf_cygsuf}\"\n\t\t\t\tcontinue\n\t\t\tfi\n\t\t\tfi\n\t\t\tLIBS_TO_MAKE=\"$LIBS_TO_MAKE ../lib/${cf_prefix}${cf_dir}${cf_suffix}\"\n\t\tdone\n\n\t\tif test $cf_dir = ncurses ; then\n\t\t\tcf_subsets=\"$LIB_SUBSETS\"\n\t\t\tcf_r_parts=\"$cf_subsets\"\n\t\t\tcf_liblist=\"$LIBS_TO_MAKE\"\n\n\t\t\twhile test -n \"$cf_r_parts\"\n\t\t\tdo\n\t\t\t\tcf_l_parts=`echo \"$cf_r_parts\" |sed -e 's/ .*$//'`\n\t\t\t\tcf_r_parts=`echo \"$cf_r_parts\" |sed -e 's/^[[^ ]]* //'`\n\t\t\t\tif test \"$cf_l_parts\" != \"$cf_r_parts\" ; then\n\t\t\t\t\tcf_item=\n\t\t\t\t\tcase $cf_l_parts in #(vi\n\t\t\t\t\t*termlib*) #(vi\n\t\t\t\t\t\tcf_item=`echo $cf_liblist |sed -e s%${LIB_NAME}${LIB_SUFFIX}%${TINFO_LIB_SUFFIX}%g`\n\t\t\t\t\t\t;;\n\t\t\t\t\t*ticlib*)\n\t\t\t\t\t\tcf_item=`echo $cf_liblist |sed -e s%${LIB_NAME}${LIB_SUFFIX}%${TICS_LIB_SUFFIX}%g`\n\t\t\t\t\t\t;;\n\t\t\t\t\t*)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\t\tif test -n \"$cf_item\"; then\n\t\t\t\t\t\tLIBS_TO_MAKE=\"$cf_item $LIBS_TO_MAKE\"\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tdone\n\t\telse\n\t\t\tcf_subsets=`echo \"$LIB_SUBSETS\" | sed -e 's/^termlib.* //'`\n\t\tfi\n\n\t\tsed -e \"s%@LIBS_TO_MAKE@%$LIBS_TO_MAKE%\" \\\n\t\t    -e \"s%@SHARED_LIB@%$SHARED_LIB%\" \\\n\t\t\t$cf_dir/Makefile >$cf_dir/Makefile.out\n\t\tmv $cf_dir/Makefile.out $cf_dir/Makefile\n\n\t\t$AWK -f $srcdir/mk-0th.awk \\\n\t\t\tlibname=\"${cf_dir}${LIB_SUFFIX}\" subsets=\"$LIB_SUBSETS\" \\\n\t\t\t$srcdir/$cf_dir/modules >>$cf_dir/Makefile\n\n\t\tfor cf_subset in $cf_subsets\n\t\tdo\n\t\t\tcf_subdirs=\n\t\t\tfor cf_item in $cf_LIST_MODELS\n\t\t\tdo\n\t\t\techo \"Appending rules for ${cf_item} model (${cf_dir}: ${cf_subset})\"\n\t\t\tCF_UPPER(cf_ITEM,$cf_item)\n\t\t\tCF_LIB_SUFFIX($cf_item,cf_suffix,cf_depsuf)\n\t\t\tCF_OBJ_SUBDIR($cf_item,cf_subdir)\n\n\t\t\t# Test for case where we build libtinfo with a different name.\n\t\t\tcf_libname=$cf_dir\n\t\t\tif test $cf_dir = ncurses ; then\n\t\t\t\tcase $cf_subset in\n\t\t\t\t*base*)\n\t\t\t\t\tcf_libname=${cf_libname}$LIB_SUFFIX\n\t\t\t\t\t;;\n\t\t\t\t*termlib*)\n\t\t\t\t\tcf_libname=$TINFO_LIB_SUFFIX\n\t\t\t\t\t;;\n\t\t\t\tticlib*)\n\t\t\t\t\tcf_libname=$TICS_LIB_SUFFIX\n\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\telse\n\t\t\t\tcf_libname=${cf_libname}$LIB_SUFFIX\n\t\t\tfi\n\t\t\tif test -n \"${DFT_ARG_SUFFIX}\" ; then\n\t\t\t\t# undo $LIB_SUFFIX add-on in CF_LIB_SUFFIX\n\t\t\t\tcf_suffix=`echo $cf_suffix |sed -e \"s%^${LIB_SUFFIX}%%\"`\n\t\t\tfi\n\n\t\t\t# These dependencies really are for development, not\n\t\t\t# builds, but they are useful in porting, too.\n\t\t\tcf_depend=\"../include/ncurses_cfg.h\"\n\t\t\tif test \"$srcdir\" = \".\"; then\n\t\t\t\tcf_reldir=\".\"\n\t\t\telse\n\t\t\t\tcf_reldir=\"\\${srcdir}\"\n\t\t\tfi\n\n\t\t\tif test -f $srcdir/$cf_dir/$cf_dir.priv.h; then\n\t\t\t\tcf_depend=\"$cf_depend $cf_reldir/$cf_dir.priv.h\"\n\t\t\telif test -f $srcdir/$cf_dir/curses.priv.h; then\n\t\t\t\tcf_depend=\"$cf_depend $cf_reldir/curses.priv.h\"\n\t\t\tfi\n\n \t\t\tcf_dir_suffix=\n \t\t\told_cf_suffix=\"$cf_suffix\"\n \t\t\tif test \"$cf_cv_shlib_version_infix\" = yes ; then\n\t\t\tif test -n \"$LIB_SUFFIX\" ; then\n\t\t\t\tcase $LIB_SUFFIX in\n\t\t\t\ttw*)\n\t\t\t\t\tcf_libname=`echo $cf_libname | sed 's/tw$//'`\n\t\t\t\t\tcf_suffix=`echo $cf_suffix | sed 's/^tw//'`\n\t\t\t\t\tcf_dir_suffix=tw\n\t\t\t\t\t;;\n\t\t\t\tt*)\n\t\t\t\t\tcf_libname=`echo $cf_libname | sed 's/t$//'`\n\t\t\t\t\tcf_suffix=`echo $cf_suffix | sed 's/^t//'`\n\t\t\t\t\tcf_dir_suffix=t\n\t\t\t\t\t;;\n\t\t\t\tw*)\n\t\t\t\t\tcf_libname=`echo $cf_libname | sed 's/w$//'`\n\t\t\t\t\tcf_suffix=`echo $cf_suffix | sed 's/^w//'`\n\t\t\t\t\tcf_dir_suffix=w\n\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tfi\n \t\t\tfi\n\n\t\t\t$AWK -f $srcdir/mk-1st.awk \\\n\t\t\t\tname=${cf_libname}${cf_dir_suffix} \\\n\t\t\t\ttraces=$LIB_TRACING \\\n\t\t\t\tMODEL=$cf_ITEM \\\n\t\t\t\tmodel=$cf_subdir \\\n\t\t\t\tprefix=$cf_prefix \\\n\t\t\t\tsuffix=$cf_suffix \\\n\t\t\t\tsubset=$cf_subset \\\n\t\t\t\tSymLink=\"$LN_S\" \\\n\t\t\t\tTermlibRoot=$TINFO_NAME \\\n\t\t\t\tTermlibSuffix=$TINFO_SUFFIX \\\n\t\t\t\tShlibVer=$cf_cv_shlib_version \\\n\t\t\t\tShlibVerInfix=$cf_cv_shlib_version_infix \\\n\t\t\t\tReLink=${cf_cv_do_relink:-no} \\\n\t\t\t\tDoLinks=$cf_cv_do_symlinks \\\n\t\t\t\trmSoLocs=$cf_cv_rm_so_locs \\\n\t\t\t\tldconfig=\"$LDCONFIG\" \\\n\t\t\t\toverwrite=$WITH_OVERWRITE \\\n\t\t\t\tdepend=\"$cf_depend\" \\\n\t\t\t\thost=\"$host\" \\\n\t\t\t\tlibtool_version=\"$LIBTOOL_VERSION\" \\\n\t\t\t\t$srcdir/$cf_dir/modules >>$cf_dir/Makefile\n\n\t\t\tcf_suffix=\"$old_cf_suffix\"\n\n\t\t\tfor cf_subdir2 in $cf_subdirs lib\n\t\t\tdo\n\t\t\t\ttest $cf_subdir = $cf_subdir2 && break\n\t\t\tdone\n\t\t\ttest \"${cf_subset}.${cf_subdir2}\" != \"${cf_subset}.${cf_subdir}\" && \\\n\t\t\t$AWK -f $srcdir/mk-2nd.awk \\\n\t\t\t\tname=$cf_dir \\\n\t\t\t\ttraces=$LIB_TRACING \\\n\t\t\t\tMODEL=$cf_ITEM \\\n\t\t\t\tmodel=$cf_subdir \\\n\t\t\t\tsubset=$cf_subset \\\n\t\t\t\tsrcdir=$srcdir \\\n\t\t\t\techo=$WITH_ECHO \\\n\t\t\t\tcrenames=$cf_cv_prog_CC_c_o \\\n\t\t\t\tcxxrenames=$cf_cv_prog_CXX_c_o \\\n\t\t\t\t$srcdir/$cf_dir/modules >>$cf_dir/Makefile\n\t\t\tcf_subdirs=\"$cf_subdirs $cf_subdir\"\n\t\t\tdone\n\t\tdone\n\tfi\n\n\techo '\tcd '$cf_dir' && ${MAKE} ${CF_MFLAGS} [$]@' >>Makefile\ndone\n\nfor cf_dir in $SRC_SUBDIRS\ndo\n\tif test ! -d $srcdir/$cf_dir ; then\n\t\tcontinue\n\tfi\n\n\tif test -f $cf_dir/Makefile ; then\n\t\tcase \"$cf_dir\" in\n\t\tAda95) #(vi\n\t\t\techo 'libs \\' >> Makefile\n\t\t\techo 'install.libs \\' >> Makefile\n\t\t\techo 'uninstall.libs ::' >> Makefile\n\t\t\techo '\tcd '$cf_dir' && ${MAKE} ${CF_MFLAGS} [$]@' >> Makefile\n\t\t\t;;\n\t\tesac\n\tfi\n\n\tif test -f $srcdir/$cf_dir/modules; then\n\t\techo >> Makefile\n\t\tif test -f $srcdir/$cf_dir/headers; then\ncat >> Makefile <<CF_EOF\ninstall.includes \\\\\nuninstall.includes \\\\\nCF_EOF\n\t\tfi\nif test \"$cf_dir\" != \"c++\" ; then\necho 'lint \\' >> Makefile\nfi\ncat >> Makefile <<CF_EOF\nlibs \\\\\nlintlib \\\\\ninstall.libs \\\\\nuninstall.libs \\\\\ninstall.$cf_dir \\\\\nuninstall.$cf_dir ::\n\tcd $cf_dir && \\${MAKE} \\${CF_MFLAGS} \\[$]@\nCF_EOF\n\telif test -f $srcdir/$cf_dir/headers; then\ncat >> Makefile <<CF_EOF\n\nlibs \\\\\ninstall.libs \\\\\nuninstall.libs \\\\\ninstall.includes \\\\\nuninstall.includes ::\n\tcd $cf_dir && \\${MAKE} \\${CF_MFLAGS} \\[$]@\nCF_EOF\nfi\ndone\n\ncat >> Makefile <<CF_EOF\n\ninstall.libs uninstall.libs \\\\\ninstall.data uninstall.data ::\n$MAKE_TERMINFO\tcd misc && \\${MAKE} \\${CF_MFLAGS} \\[$]@\nCF_EOF\n\nif test \"x$cf_with_manpages\" = xyes; then\ncat >> Makefile <<CF_EOF\n\ninstall.man \\\\\nuninstall.man ::\n\tcd man && \\${MAKE} \\${CF_MFLAGS} \\[$]@\nCF_EOF\nfi\n\ncat >> Makefile <<CF_EOF\n\ndistclean ::\n\trm -f config.cache config.log config.status Makefile include/ncurses_cfg.h\n\trm -f headers.sh headers.sed mk_shared_lib.sh\n\trm -f edit_man.* man_alias.*\n\trm -rf \\${DIRS_TO_MAKE}\nCF_EOF\n\n# Special case: tack's manpage lives in its own directory.\nif test \"x$cf_with_manpages\" = xyes; then\nif test -d tack ; then\nif test -f $srcdir/$tack.h; then\ncat >> Makefile <<CF_EOF\n\ninstall.man \\\\\nuninstall.man ::\n\tcd tack && \\${MAKE} \\${CF_MFLAGS} \\[$]@\nCF_EOF\nfi\nfi\nfi\n\ndnl If we're installing into a subdirectory of /usr/include, etc., we should\ndnl prepend the subdirectory's name to the \"#include\" paths.  It won't hurt\ndnl anything, and will make it more standardized.  It's awkward to decide this\ndnl at configuration because of quoting, so we'll simply make all headers\ndnl installed via a script that can do the right thing.\n\nrm -f headers.sed headers.sh\n\ndnl ( generating this script makes the makefiles a little tidier :-)\necho creating headers.sh\ncat >headers.sh <<CF_EOF\n#! /bin/sh\n# This shell script is generated by the 'configure' script.  It is invoked in a\n# subdirectory of the build tree.  It generates a sed-script in the parent\n# directory that is used to adjust includes for header files that reside in a\n# subdirectory of /usr/include, etc.\nPRG=\"\"\nwhile test \\[$]# != 3\ndo\nPRG=\"\\$PRG \\[$]1\"; shift\ndone\nDST=\\[$]1\nREF=\\[$]2\nSRC=\\[$]3\nTMPSRC=\\${TMPDIR:-/tmp}/\\`basename \\$SRC\\`\\$\\$\nTMPSED=\\${TMPDIR:-/tmp}/headers.sed\\$\\$\necho installing \\$SRC in \\$DST\nCF_EOF\n\nif test $WITH_CURSES_H = yes; then\n\tcat >>headers.sh <<CF_EOF\ncase \\$DST in\n/*/include/*)\n\tEND=\\`basename \\$DST\\`\n\tfor i in \\`cat \\$REF/../*/headers |fgrep -v \"#\"\\`\n\tdo\n\t\tNAME=\\`basename \\$i\\`\n\t\techo \"s/<\\$NAME>/<\\$END\\/\\$NAME>/\" >> \\$TMPSED\n\tdone\n\t;;\n*)\n\techo \"\" >> \\$TMPSED\n\t;;\nesac\nCF_EOF\n\nelse\n\tcat >>headers.sh <<CF_EOF\ncase \\$DST in\n/*/include/*)\n\tEND=\\`basename \\$DST\\`\n\tfor i in \\`cat \\$REF/../*/headers |fgrep -v \"#\"\\`\n\tdo\n\t\tNAME=\\`basename \\$i\\`\n\t\tif test \"\\$NAME\" = \"curses.h\"\n\t\tthen\n\t\t\techo \"s/<curses.h>/<ncurses.h>/\" >> \\$TMPSED\n\t\t\tNAME=ncurses.h\n\t\tfi\n\t\techo \"s/<\\$NAME>/<\\$END\\/\\$NAME>/\" >> \\$TMPSED\n\tdone\n\t;;\n*)\n\techo \"s/<curses.h>/<ncurses.h>/\" >> \\$TMPSED\n\t;;\nesac\nCF_EOF\nfi\ncat >>headers.sh <<CF_EOF\nrm -f \\$TMPSRC\nsed -f \\$TMPSED \\$SRC > \\$TMPSRC\nNAME=\\`basename \\$SRC\\`\nCF_EOF\nif test $WITH_CURSES_H != yes; then\n\tcat >>headers.sh <<CF_EOF\ntest \"\\$NAME\" = \"curses.h\" && NAME=ncurses.h\nCF_EOF\nfi\ncat >>headers.sh <<CF_EOF\n# Just in case someone gzip'd manpages, remove the conflicting copy.\ntest -f \\$DST/\\$NAME.gz && rm -f \\$DST/\\$NAME.gz\n\neval \\$PRG \\$TMPSRC \\$DST/\\$NAME\nrm -f \\$TMPSRC \\$TMPSED\nCF_EOF\n\nchmod 0755 headers.sh\n\nfor cf_dir in $SRC_SUBDIRS\ndo\n\tif test ! -d $srcdir/$cf_dir ; then\n\t\tcontinue\n\tfi\n\n\tif test -f $srcdir/$cf_dir/headers; then\n\t\t$AWK -f $srcdir/mk-hdr.awk \\\n\t\t\tsubset=\"$LIB_SUBSETS\" \\\n\t\t\tcompat=\"$WITH_CURSES_H\" \\\n\t\t\t$srcdir/$cf_dir/headers >>$cf_dir/Makefile\n\tfi\n\n\tif test -f $srcdir/$cf_dir/modules; then\n\t\tif test \"$cf_dir\" != \"c++\" ; then\n\t\t\tcat >>$cf_dir/Makefile <<\"CF_EOF\"\ndepend : ${AUTO_SRC}\n\tmakedepend -- ${CPPFLAGS} -- ${C_SRC}\n\n# DO NOT DELETE THIS LINE -- make depend depends on it.\nCF_EOF\n\t\tfi\n\tfi\ndone\nAC_SUBST(LIBS_TO_MAKE)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_LIB_SONAME version: 5 updated: 2010/08/14 18:25:37\ndnl -------------\ndnl Find the and soname for the given shared library.  Set the cache variable\ndnl cf_cv_$3_soname to this, unless it is not found.  Then set the cache\ndnl variable to \"unknown\".\ndnl\ndnl $1 = headers\ndnl $2 = code\ndnl $3 = library name\nAC_DEFUN([CF_LIB_SONAME],\n[\nAC_CACHE_CHECK(for soname of $3 library,cf_cv_$3_soname,[\n\ncf_cv_$3_soname=unknown\nif test \"$cross_compiling\" != yes ; then\ncat >conftest.$ac_ext <<CF_EOF\n$1\nint main()\n{\n$2\n\t${cf_cv_main_return:-return}(0);\n}\nCF_EOF\ncf_save_LIBS=\"$LIBS\"\n\tCF_ADD_LIB($3)\n\tif AC_TRY_EVAL(ac_compile) ; then\n\t\tif AC_TRY_EVAL(ac_link) ; then\n\t\t\tcf_cv_$3_soname=`ldd conftest$ac_exeext 2>/dev/null | sed -e 's,^.*/,,' -e 's, .*$,,' | fgrep lib$3.`\n\t\t\ttest -z \"$cf_cv_$3_soname\" && cf_cv_$3_soname=unknown\n\t\tfi\n\tfi\nrm -rf conftest*\nLIBS=\"$cf_save_LIBS\"\nfi\n])\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_LIB_SUFFIX version: 16 updated: 2008/12/27 12:30:03\ndnl -------------\ndnl Compute the library file-suffix from the given model name\ndnl $1 = model name\ndnl $2 = variable to set (the nominal library suffix)\ndnl $3 = dependency variable to set (actual filename)\ndnl The variable $LIB_SUFFIX, if set, prepends the variable to set.\nAC_DEFUN([CF_LIB_SUFFIX],\n[\n\tAC_REQUIRE([CF_SUBST_NCURSES_VERSION])\n\tcase $1 in #(vi\n\tlibtool) #(vi\n\t\t$2='.la'\n\t\t$3=[$]$2\n\t\t;;\n\tnormal) #(vi\n\t\t$2='.a'\n\t\t$3=[$]$2\n\t\t;;\n\tdebug) #(vi\n\t\t$2='_g.a'\n\t\t$3=[$]$2\n\t\t;;\n\tprofile) #(vi\n\t\t$2='_p.a'\n\t\t$3=[$]$2\n\t\t;;\n\tshared) #(vi\n\t\tcase $cf_cv_system_name in\n\t\taix[[56]]*) #(vi\n\t\t\t$2='.a'\n\t\t\t$3=[$]$2\n\t\t\t;;\n\t\tcygwin*) #(vi\n\t\t\t$2='.dll'\n\t\t\t$3='.dll.a'\n\t\t\t;;\n\t\tdarwin*) #(vi\n\t\t\t$2='.dylib'\n\t\t\t$3=[$]$2\n\t\t\t;;\n\t\thpux*) #(vi\n\t\t\tcase $target in\n\t\t\tia64*) #(vi\n\t\t\t\t$2='.so'\n\t\t\t\t$3=[$]$2\n\t\t\t\t;;\n\t\t\t*) #(vi\n\t\t\t\t$2='.sl'\n\t\t\t\t$3=[$]$2\n\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\t\t*)\t$2='.so'\n\t\t\t$3=[$]$2\n\t\t\t;;\n\t\tesac\n\tesac\n\ttest -n \"$LIB_SUFFIX\" && $2=\"${LIB_SUFFIX}[$]{$2}\"\n\ttest -n \"$LIB_SUFFIX\" && $3=\"${LIB_SUFFIX}[$]{$3}\"\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_LIB_TYPE version: 4 updated: 2000/10/20 22:57:49\ndnl -----------\ndnl Compute the string to append to -library from the given model name\ndnl $1 = model name\ndnl $2 = variable to set\ndnl The variable $LIB_SUFFIX, if set, prepends the variable to set.\nAC_DEFUN([CF_LIB_TYPE],\n[\n\tcase $1 in\n\tlibtool) $2=''   ;;\n\tnormal)  $2=''   ;;\n\tdebug)   $2='_g' ;;\n\tprofile) $2='_p' ;;\n\tshared)  $2=''   ;;\n\tesac\n\ttest -n \"$LIB_SUFFIX\" && $2=\"${LIB_SUFFIX}[$]{$2}\"\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_LINK_DATAONLY version: 9 updated: 2009/01/01 20:21:38\ndnl ----------------\ndnl Some systems have a non-ANSI linker that doesn't pull in modules that have\ndnl only data (i.e., no functions), for example NeXT.  On those systems we'll\ndnl have to provide wrappers for global tables to ensure they're linked\ndnl properly.\nAC_DEFUN([CF_LINK_DATAONLY],\n[\nAC_MSG_CHECKING([if data-only library module links])\nAC_CACHE_VAL(cf_cv_link_dataonly,[\n\trm -f conftest.a\n\tcat >conftest.$ac_ext <<EOF\n#line __oline__ \"configure\"\nint\ttestdata[[3]] = { 123, 456, 789 };\nEOF\n\tif AC_TRY_EVAL(ac_compile) ; then\n\t\tmv conftest.o data.o && \\\n\t\t( $AR $ARFLAGS conftest.a data.o ) 2>&AC_FD_CC 1>/dev/null\n\tfi\n\trm -f conftest.$ac_ext data.o\n\tcat >conftest.$ac_ext <<EOF\n#line __oline__ \"configure\"\nint\ttestfunc()\n{\n#if defined(NeXT)\n\t${cf_cv_main_return:-return}(1);\t/* I'm told this linker is broken */\n#else\n\textern int testdata[[3]];\n\treturn testdata[[0]] == 123\n\t   &&  testdata[[1]] == 456\n\t   &&  testdata[[2]] == 789;\n#endif\n}\nEOF\n\tif AC_TRY_EVAL(ac_compile); then\n\t\tmv conftest.o func.o && \\\n\t\t( $AR $ARFLAGS conftest.a func.o ) 2>&AC_FD_CC 1>/dev/null\n\tfi\n\trm -f conftest.$ac_ext func.o\n\t( eval $RANLIB conftest.a ) 2>&AC_FD_CC >/dev/null\n\tcf_saveLIBS=\"$LIBS\"\n\tLIBS=\"conftest.a $LIBS\"\n\tAC_TRY_RUN([\n\tint main()\n\t{\n\t\textern int testfunc();\n\t\t${cf_cv_main_return:-return} (!testfunc());\n\t}\n\t],\n\t[cf_cv_link_dataonly=yes],\n\t[cf_cv_link_dataonly=no],\n\t[cf_cv_link_dataonly=unknown])\n\tLIBS=\"$cf_saveLIBS\"\n\t])\nAC_MSG_RESULT($cf_cv_link_dataonly)\n\nif test \"$cf_cv_link_dataonly\" = no ; then\n\tAC_DEFINE(BROKEN_LINKER)\n\tBROKEN_LINKER=1\nfi\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_LINK_FUNCS version: 7 updated: 2006/12/16 12:33:30\ndnl -------------\ndnl Most Unix systems have both link and symlink, a few don't have symlink.\ndnl A few non-Unix systems implement symlink, but not link.\ndnl A few non-systems implement neither (or have nonfunctional versions).\nAC_DEFUN([CF_LINK_FUNCS],\n[\nAC_CHECK_FUNCS( \\\n\tremove \\\n\tunlink )\n\nif test \"$cross_compiling\" = yes ; then\n\tAC_CHECK_FUNCS( \\\n\t\tlink \\\n\t\tsymlink )\nelse\n\tAC_CACHE_CHECK(if link/symlink functions work,cf_cv_link_funcs,[\n\t\tcf_cv_link_funcs=\n\t\tfor cf_func in link symlink ; do\n\t\t\tAC_TRY_RUN([\n#include <sys/types.h>\n#include <sys/stat.h>\n#ifdef HAVE_UNISTD_H\n#include <unistd.h>\n#endif\nint main()\n{\n\tint fail = 0;\n\tchar *src = \"config.log\";\n\tchar *dst = \"conftest.chk\";\n\tstruct stat src_sb;\n\tstruct stat dst_sb;\n\n\tstat(src, &src_sb);\n\tfail = ($cf_func(\"config.log\", \"conftest.chk\") < 0)\n\t    || (stat(dst, &dst_sb) < 0)\n\t    || (dst_sb.st_mtime != src_sb.st_mtime);\n#ifdef HAVE_UNLINK\n\tunlink(dst);\n#else\n\tremove(dst);\n#endif\n\t${cf_cv_main_return:-return} (fail);\n}\n\t\t\t],[\n\t\t\tcf_cv_link_funcs=\"$cf_cv_link_funcs $cf_func\"\n\t\t\teval 'ac_cv_func_'$cf_func'=yes'],[\n\t\t\teval 'ac_cv_func_'$cf_func'=no'],[\n\t\t\teval 'ac_cv_func_'$cf_func'=error'])\n\t\tdone\n\t\ttest -z \"$cf_cv_link_funcs\" && cf_cv_link_funcs=no\n\t])\n\ttest \"$ac_cv_func_link\"    = yes && AC_DEFINE(HAVE_LINK)\n\ttest \"$ac_cv_func_symlink\" = yes && AC_DEFINE(HAVE_SYMLINK)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_MAIN_RETURN version: 1 updated: 2006/12/10 09:51:54\ndnl --------------\ndnl Check if a return from main to the shell actually returns the same exit\ndnl code.  This is true for almost any POSIX environment.\ndnl\ndnl Some very old environments did not flush stdout, etc., on an exit.  That\ndnl would be a useful case to test for also.\nAC_DEFUN([CF_MAIN_RETURN],\n[\ncf_cv_main_return=return\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_MAKEFLAGS version: 14 updated: 2011/03/31 19:29:46\ndnl ------------\ndnl Some 'make' programs support ${MAKEFLAGS}, some ${MFLAGS}, to pass 'make'\ndnl options to lower-levels.  It's very useful for \"make -n\" -- if we have it.\ndnl (GNU 'make' does both, something POSIX 'make', which happens to make the\ndnl ${MAKEFLAGS} variable incompatible because it adds the assignments :-)\nAC_DEFUN([CF_MAKEFLAGS],\n[\nAC_CACHE_CHECK(for makeflags variable, cf_cv_makeflags,[\n\tcf_cv_makeflags=''\n\tfor cf_option in '-${MAKEFLAGS}' '${MFLAGS}'\n\tdo\n\t\tcat >cf_makeflags.tmp <<CF_EOF\nSHELL = /bin/sh\nall :\n\t@ echo '.$cf_option'\nCF_EOF\n\t\tcf_result=`${MAKE:-make} -k -f cf_makeflags.tmp 2>/dev/null | fgrep -v \"ing directory\" | sed -e 's,[[ \t]]*$,,'`\n\t\tcase \"$cf_result\" in\n\t\t.*k)\n\t\t\tcf_result=`${MAKE:-make} -k -f cf_makeflags.tmp CC=cc 2>/dev/null`\n\t\t\tcase \"$cf_result\" in\n\t\t\t.*CC=*)\tcf_cv_makeflags=\n\t\t\t\t;;\n\t\t\t*)\tcf_cv_makeflags=$cf_option\n\t\t\t\t;;\n\t\t\tesac\n\t\t\tbreak\n\t\t\t;;\n\t\t.-)\t;;\n\t\t*)\techo \"given option \\\"$cf_option\\\", no match \\\"$cf_result\\\"\"\n\t\t\t;;\n\t\tesac\n\tdone\n\trm -f cf_makeflags.tmp\n])\n\nAC_SUBST(cf_cv_makeflags)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_MAKE_TAGS version: 6 updated: 2010/10/23 15:52:32\ndnl ------------\ndnl Generate tags/TAGS targets for makefiles.  Do not generate TAGS if we have\ndnl a monocase filesystem.\nAC_DEFUN([CF_MAKE_TAGS],[\nAC_REQUIRE([CF_MIXEDCASE_FILENAMES])\n\nAC_CHECK_PROGS(CTAGS, exctags ctags)\nAC_CHECK_PROGS(ETAGS, exetags etags)\n\nAC_CHECK_PROG(MAKE_LOWER_TAGS, ${CTAGS:-ctags}, yes, no)\n\nif test \"$cf_cv_mixedcase\" = yes ; then\n\tAC_CHECK_PROG(MAKE_UPPER_TAGS, ${ETAGS:-etags}, yes, no)\nelse\n\tMAKE_UPPER_TAGS=no\nfi\n\nif test \"$MAKE_UPPER_TAGS\" = yes ; then\n\tMAKE_UPPER_TAGS=\nelse\n\tMAKE_UPPER_TAGS=\"#\"\nfi\n\nif test \"$MAKE_LOWER_TAGS\" = yes ; then\n\tMAKE_LOWER_TAGS=\nelse\n\tMAKE_LOWER_TAGS=\"#\"\nfi\n\nAC_SUBST(CTAGS)\nAC_SUBST(ETAGS)\n\nAC_SUBST(MAKE_UPPER_TAGS)\nAC_SUBST(MAKE_LOWER_TAGS)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_MANPAGE_FORMAT version: 9 updated: 2010/10/23 16:10:30\ndnl -----------------\ndnl Option to allow user to override automatic configuration of manpage format.\ndnl There are several special cases:\ndnl\ndnl\tgzip - man checks for, can display gzip'd files\ndnl\tcompress - man checks for, can display compressed files\ndnl\tBSDI - files in the cat-directories are suffixed \".0\"\ndnl\tformatted - installer should format (put files in cat-directory)\ndnl\tcatonly - installer should only format, e.g., for a turnkey system.\ndnl\ndnl There are other configurations which this macro does not test, e.g., HPUX's\ndnl compressed manpages (but uncompressed manpages are fine, and HPUX's naming\ndnl convention would not match our use).\nAC_DEFUN([CF_MANPAGE_FORMAT],\n[\nAC_REQUIRE([CF_PATHSEP])\nAC_MSG_CHECKING(format of man-pages)\n\nAC_ARG_WITH(manpage-format,\n\t[  --with-manpage-format   specify manpage-format: gzip/compress/BSDI/normal and\n                          optionally formatted/catonly, e.g., gzip,formatted],\n\t[MANPAGE_FORMAT=$withval],\n\t[MANPAGE_FORMAT=unknown])\n\ntest -z \"$MANPAGE_FORMAT\" && MANPAGE_FORMAT=unknown\nMANPAGE_FORMAT=`echo \"$MANPAGE_FORMAT\" | sed -e 's/,/ /g'`\n\ncf_unknown=\n\ncase $MANPAGE_FORMAT in\nunknown)\n  if test -z \"$MANPATH\" ; then\n    MANPATH=\"/usr/man:/usr/share/man\"\n  fi\n\n  # look for the 'date' man-page (it's most likely to be installed!)\n  MANPAGE_FORMAT=\n  cf_preform=no\n  cf_catonly=yes\n  cf_example=date\n\n  IFS=\"${IFS:- \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}${PATH_SEPARATOR}\"\n  for cf_dir in $MANPATH; do\n    test -z \"$cf_dir\" && cf_dir=/usr/man\n    for cf_name in $cf_dir/man*/$cf_example.[[01]]* $cf_dir/cat*/$cf_example.[[01]]* $cf_dir/man*/$cf_example $cf_dir/cat*/$cf_example\n    do\n      cf_test=`echo $cf_name | sed -e 's/*//'`\n      if test \"x$cf_test\" = \"x$cf_name\" ; then\n\n\tcase \"$cf_name\" in\n\t*.gz) MANPAGE_FORMAT=\"$MANPAGE_FORMAT gzip\";;\n\t*.Z)  MANPAGE_FORMAT=\"$MANPAGE_FORMAT compress\";;\n\t*.0)\tMANPAGE_FORMAT=\"$MANPAGE_FORMAT BSDI\";;\n\t*)    MANPAGE_FORMAT=\"$MANPAGE_FORMAT normal\";;\n\tesac\n\n\tcase \"$cf_name\" in\n\t$cf_dir/man*)\n\t  cf_catonly=no\n\t  ;;\n\t$cf_dir/cat*)\n\t  cf_preform=yes\n\t  ;;\n\tesac\n\tbreak\n      fi\n\n      # if we found a match in either man* or cat*, stop looking\n      if test -n \"$MANPAGE_FORMAT\" ; then\n\tcf_found=no\n\ttest \"$cf_preform\" = yes && MANPAGE_FORMAT=\"$MANPAGE_FORMAT formatted\"\n\ttest \"$cf_catonly\" = yes && MANPAGE_FORMAT=\"$MANPAGE_FORMAT catonly\"\n\tcase \"$cf_name\" in\n\t$cf_dir/cat*)\n\t  cf_found=yes\n\t  ;;\n\tesac\n\ttest $cf_found=yes && break\n      fi\n    done\n    # only check the first directory in $MANPATH where we find manpages\n    if test -n \"$MANPAGE_FORMAT\" ; then\n       break\n    fi\n  done\n  # if we did not find the example, just assume it is normal\n  test -z \"$MANPAGE_FORMAT\" && MANPAGE_FORMAT=normal\n  IFS=\"$ac_save_ifs\"\n  ;;\n*)\n  for cf_option in $MANPAGE_FORMAT; do\n     case $cf_option in #(vi\n     gzip|compress|BSDI|normal|formatted|catonly)\n       ;;\n     *)\n       cf_unknown=\"$cf_unknown $cf_option\"\n       ;;\n     esac\n  done\n  ;;\nesac\n\nAC_MSG_RESULT($MANPAGE_FORMAT)\nif test -n \"$cf_unknown\" ; then\n  AC_MSG_WARN(Unexpected manpage-format $cf_unknown)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_MANPAGE_RENAMES version: 7 updated: 2005/06/18 18:51:57\ndnl ------------------\ndnl The Debian people have their own naming convention for manpages.  This\ndnl option lets us override the name of the file containing renaming, or\ndnl disable it altogether.\nAC_DEFUN([CF_MANPAGE_RENAMES],\n[\nAC_MSG_CHECKING(for manpage renaming)\n\nAC_ARG_WITH(manpage-renames,\n\t[  --with-manpage-renames  specify manpage-renaming],\n\t[MANPAGE_RENAMES=$withval],\n\t[MANPAGE_RENAMES=yes])\n\ncase \".$MANPAGE_RENAMES\" in #(vi\n.no) #(vi\n  ;;\n.|.yes)\n  # Debian 'man' program?\n  if test -f /etc/debian_version ; then\n    MANPAGE_RENAMES=`cd $srcdir && pwd`/man/man_db.renames\n  else\n    MANPAGE_RENAMES=no\n  fi\n  ;;\nesac\n\nif test \"$MANPAGE_RENAMES\" != no ; then\n  if test -f $srcdir/man/$MANPAGE_RENAMES ; then\n    MANPAGE_RENAMES=`cd $srcdir/man && pwd`/$MANPAGE_RENAMES\n  elif test ! -f $MANPAGE_RENAMES ; then\n    AC_MSG_ERROR(not a filename: $MANPAGE_RENAMES)\n  fi\n\n  test ! -d man && mkdir man\n\n  # Construct a sed-script to perform renaming within man-pages\n  if test -n \"$MANPAGE_RENAMES\" ; then\n    test ! -d man && mkdir man\n    sh $srcdir/man/make_sed.sh $MANPAGE_RENAMES >./edit_man.sed\n  fi\nfi\n\nAC_MSG_RESULT($MANPAGE_RENAMES)\nAC_SUBST(MANPAGE_RENAMES)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_MANPAGE_SYMLINKS version: 5 updated: 2010/07/24 17:12:40\ndnl -------------------\ndnl Some people expect each tool to make all aliases for manpages in the\ndnl man-directory.  This accommodates the older, less-capable implementations\ndnl of 'man', and is optional.\nAC_DEFUN([CF_MANPAGE_SYMLINKS],\n[\nAC_MSG_CHECKING(if manpage aliases will be installed)\n\nAC_ARG_WITH(manpage-aliases,\n\t[  --with-manpage-aliases  specify manpage-aliases using .so],\n\t[MANPAGE_ALIASES=$withval],\n\t[MANPAGE_ALIASES=yes])\n\nAC_MSG_RESULT($MANPAGE_ALIASES)\n\ncase \"x$LN_S\" in #(vi\nxln*) #(vi\n\tcf_use_symlinks=yes\n\t;;\n*)\n\tcf_use_symlinks=no\n\t;;\nesac\n\nMANPAGE_SYMLINKS=no\nif test \"$MANPAGE_ALIASES\" = yes ; then\nAC_MSG_CHECKING(if manpage symlinks should be used)\n\nAC_ARG_WITH(manpage-symlinks,\n\t[  --with-manpage-symlinks specify manpage-aliases using symlinks],\n\t[MANPAGE_SYMLINKS=$withval],\n\t[MANPAGE_SYMLINKS=$cf_use_symlinks])\n\nif test \"$$cf_use_symlinks\" = no; then\nif test \"$MANPAGE_SYMLINKS\" = yes ; then\n\tAC_MSG_WARN(cannot make symlinks, will use .so files)\n\tMANPAGE_SYMLINKS=no\nfi\nfi\n\nAC_MSG_RESULT($MANPAGE_SYMLINKS)\nfi\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_MANPAGE_TBL version: 3 updated: 2002/01/19 22:51:32\ndnl --------------\ndnl This option causes manpages to be run through tbl(1) to generate tables\ndnl correctly.\nAC_DEFUN([CF_MANPAGE_TBL],\n[\nAC_MSG_CHECKING(for manpage tbl)\n\nAC_ARG_WITH(manpage-tbl,\n\t[  --with-manpage-tbl      specify manpage processing with tbl],\n\t[MANPAGE_TBL=$withval],\n\t[MANPAGE_TBL=no])\n\nAC_MSG_RESULT($MANPAGE_TBL)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_MAN_PAGES version: 39 updated: 2010/10/23 15:44:18\ndnl ------------\ndnl Try to determine if the man-pages on the system are compressed, and if\ndnl so, what format is used.  Use this information to construct a script that\ndnl will install man-pages.\nAC_DEFUN([CF_MAN_PAGES],\n[\nCF_HELP_MESSAGE(Options to Specify How Manpages are Installed:)\nCF_MANPAGE_FORMAT\nCF_MANPAGE_RENAMES\nCF_MANPAGE_SYMLINKS\nCF_MANPAGE_TBL\n\n  if test \"$prefix\" = \"NONE\" ; then\n     cf_prefix=\"$ac_default_prefix\"\n  else\n     cf_prefix=\"$prefix\"\n  fi\n\n  case \"$MANPAGE_FORMAT\" in # (vi\n  *catonly*) # (vi\n    cf_format=yes\n    cf_inboth=no\n    ;;\n  *formatted*) # (vi\n    cf_format=yes\n    cf_inboth=yes\n    ;;\n  *)\n    cf_format=no\n    cf_inboth=no\n    ;;\n  esac\n\ntest ! -d man && mkdir man\n\ncf_so_strip=\ncf_compress=\ncase \"$MANPAGE_FORMAT\" in #(vi\n*compress*) #(vi\n\tcf_so_strip=\"Z\"\n\tcf_compress=compress\n  ;;\n*gzip*)\n\tcf_so_strip=\"gz\"\n\tcf_compress=gzip\n  ;;\nesac\n\ncf_edit_man=./edit_man.sh\ncf_man_alias=`pwd`/man_alias.sed\n\ncat >$cf_edit_man <<CF_EOF\n#! /bin/sh\n# this script is generated by the configure-script CF_MAN_PAGES macro.\n\nprefix=\"$cf_prefix\"\ndatadir=\"$datadir\"\n\nNCURSES_MAJOR=\"$NCURSES_MAJOR\"\nNCURSES_MINOR=\"$NCURSES_MINOR\"\nNCURSES_PATCH=\"$NCURSES_PATCH\"\n\nNCURSES_OSPEED=\"$NCURSES_OSPEED\"\nTERMINFO=\"$TERMINFO\"\n\nINSTALL=\"$INSTALL\"\nINSTALL_DATA=\"$INSTALL_DATA\"\n\ntransform=\"$program_transform_name\"\n\nTMP=\\${TMPDIR:=/tmp}/man\\$\\$\ntrap \"rm -f \\$TMP\" 0 1 2 5 15\n\nform=\\[$]1\nshift || exit 1\n\nverb=\\[$]1\nshift || exit 1\n\nmandir=\\[$]1\nshift || exit 1\n\nsrcdir=\\[$]1\ntop_srcdir=\\[$]srcdir/..\nshift || exit 1\n\nif test \"\\$form\" = normal ; then\n\tif test \"$cf_format\" = yes ; then\n\tif test \"$cf_inboth\" = no ; then\n\t\tsh \\[$]0 format \\$verb \\$mandir \\$srcdir \\[$]*\n\t\texit $?\n\tfi\n\tfi\n\tcf_subdir=\\$mandir/man\n\tcf_tables=$MANPAGE_TBL\nelse\n\tcf_subdir=\\$mandir/cat\n\tcf_tables=yes\nfi\n\n# process the list of source-files\nfor i in \\[$]* ; do\ncase \\$i in #(vi\n*.orig|*.rej) ;; #(vi\n*.[[0-9]]*)\n\tsection=\\`expr \"\\$i\" : '.*\\\\.\\\\([[0-9]]\\\\)[[xm]]*'\\`;\n\tif test \\$verb = installing ; then\n\tif test ! -d \\$cf_subdir\\${section} ; then\n\t\tmkdir -p \\$cf_subdir\\$section\n\tfi\n\tfi\n\n\t# replace variables in man page\n\tif test ! -f $cf_man_alias ; then\ncat >>$cf_man_alias <<-CF_EOF2\n\t\ts,@DATADIR@,\\$datadir,g\n\t\ts,@TERMINFO@,\\$TERMINFO,g\n\t\ts,@NCURSES_MAJOR@,\\$NCURSES_MAJOR,g\n\t\ts,@NCURSES_MINOR@,\\$NCURSES_MINOR,g\n\t\ts,@NCURSES_PATCH@,\\$NCURSES_PATCH,g\n\t\ts,@NCURSES_OSPEED@,\\$NCURSES_OSPEED,g\nCF_EOF\n\tifelse($1,,,[\n\tfor cf_name in $1\n\tdo\n\t\tcf_NAME=`echo \"$cf_name\" | sed y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%`\n\t\tcf_name=`echo $cf_name|sed \"$program_transform_name\"`\ncat >>$cf_edit_man <<-CF_EOF\n\t\ts,@$cf_NAME@,$cf_name,g\nCF_EOF\n\tdone\n\t])\ncat >>$cf_edit_man <<CF_EOF\nCF_EOF2\n\t\techo \"...made $cf_man_alias\"\n\tfi\n\n\taliases=\n\tcf_source=\\`basename \\$i\\`\n\tinalias=\\$cf_source\n\ttest ! -f \\$inalias && inalias=\"\\$srcdir/\\$inalias\"\n\tif test ! -f \\$inalias ; then\n\t\techo .. skipped \\$cf_source\n\t\tcontinue\n\tfi\nCF_EOF\n\nif test \"$MANPAGE_ALIASES\" != no ; then\ncat >>$cf_edit_man <<CF_EOF\n\taliases=\\`sed -f \\$top_srcdir/man/manlinks.sed \\$inalias |sed -f $cf_man_alias | sort -u\\`\nCF_EOF\nfi\n\nif test \"$MANPAGE_RENAMES\" = no ; then\ncat >>$cf_edit_man <<CF_EOF\n\t# perform program transformations for section 1 man pages\n\tif test \\$section = 1 ; then\n\t\tcf_target=\\$cf_subdir\\${section}/\\`echo \\$cf_source|sed \"\\${transform}\"\\`\n\telse\n\t\tcf_target=\\$cf_subdir\\${section}/\\$cf_source\n\tfi\nCF_EOF\nelse\ncat >>$cf_edit_man <<CF_EOF\n\tcf_target=\\`grep \"^\\$cf_source\" $MANPAGE_RENAMES | $AWK '{print \\[$]2}'\\`\n\tif test -z \"\\$cf_target\" ; then\n\t\techo '? missing rename for '\\$cf_source\n\t\tcf_target=\"\\$cf_source\"\n\tfi\n\tcf_target=\"\\$cf_subdir\\${section}/\\${cf_target}\"\n\nCF_EOF\nfi\n\ncat >>$cf_edit_man <<CF_EOF\n\tsed\t-f $cf_man_alias \\\\\nCF_EOF\n\nif test -f $MANPAGE_RENAMES ; then\ncat >>$cf_edit_man <<CF_EOF\n\t\t< \\$i | sed -f `pwd`/edit_man.sed >\\$TMP\nCF_EOF\nelse\ncat >>$cf_edit_man <<CF_EOF\n\t\t< \\$i >\\$TMP\nCF_EOF\nfi\n\ncat >>$cf_edit_man <<CF_EOF\nif test \\$cf_tables = yes ; then\n\ttbl \\$TMP >\\$TMP.out\n\tmv \\$TMP.out \\$TMP\nfi\nCF_EOF\n\nif test $with_curses_h != yes ; then\ncat >>$cf_edit_man <<CF_EOF\n\tsed -e \"/\\#[    ]*include/s,curses.h,ncurses.h,\" < \\$TMP >\\$TMP.out\n\tmv \\$TMP.out \\$TMP\nCF_EOF\nfi\n\ncat >>$cf_edit_man <<CF_EOF\n\tif test \\$form = format ; then\n\t\tnroff -man \\$TMP >\\$TMP.out\n\t\tmv \\$TMP.out \\$TMP\n\tfi\nCF_EOF\n\nif test -n \"$cf_compress\" ; then\ncat >>$cf_edit_man <<CF_EOF\n\tif test \\$verb = installing ; then\n\tif ( $cf_compress -f \\$TMP )\n\tthen\n\t\tmv \\$TMP.$cf_so_strip \\$TMP\n\tfi\n\tfi\n\tcf_target=\"\\$cf_target.$cf_so_strip\"\nCF_EOF\nfi\n\ncase \"$MANPAGE_FORMAT\" in #(vi\n*BSDI*)\ncat >>$cf_edit_man <<CF_EOF\n\tif test \\$form = format ; then\n\t\t# BSDI installs only .0 suffixes in the cat directories\n\t\tcf_target=\"\\`echo \\$cf_target|sed -e 's/\\.[[1-9]]\\+[[a-z]]*/.0/'\\`\"\n\tfi\nCF_EOF\n  ;;\nesac\n\ncat >>$cf_edit_man <<CF_EOF\n\tsuffix=\\`basename \\$cf_target | sed -e 's%^[[^.]]*%%'\\`\n\tif test \\$verb = installing ; then\n\t\techo \\$verb \\$cf_target\n\t\t\\$INSTALL_DATA \\$TMP \\$cf_target\n\t\ttest -d \\$cf_subdir\\${section} &&\n\t\ttest -n \"\\$aliases\" && (\n\t\t\tcd \\$cf_subdir\\${section} && (\n\t\t\t\tcf_source=\\`echo \\$cf_target |sed -e 's%^.*/\\([[^/]][[^/]]*/[[^/]][[^/]]*$\\)%\\1%'\\`\n\t\t\t\ttest -n \"$cf_so_strip\" && cf_source=\\`echo \\$cf_source |sed -e 's%\\.$cf_so_strip\\$%%'\\`\n\t\t\t\tcf_target=\\`basename \\$cf_target\\`\n\t\t\t\tfor cf_alias in \\$aliases\n\t\t\t\tdo\n\t\t\t\t\tif test \\$section = 1 ; then\n\t\t\t\t\t\tcf_alias=\\`echo \\$cf_alias|sed \"\\${transform}\"\\`\n\t\t\t\t\tfi\n\n\t\t\t\t\tif test \"$MANPAGE_SYMLINKS\" = yes ; then\n\t\t\t\t\t\tif test -f \\$cf_alias\\${suffix} ; then\n\t\t\t\t\t\t\tif ( cmp -s \\$cf_target \\$cf_alias\\${suffix} )\n\t\t\t\t\t\t\tthen\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi\n\t\t\t\t\t\techo .. \\$verb alias \\$cf_alias\\${suffix}\nCF_EOF\ncase \"x$LN_S\" in #(vi\n*-f) #(vi\ncat >>$cf_edit_man <<CF_EOF\n\t\t\t\t\t\t$LN_S \\$cf_target \\$cf_alias\\${suffix}\nCF_EOF\n\t;;\n*)\ncat >>$cf_edit_man <<CF_EOF\n\t\t\t\t\t\trm -f \\$cf_alias\\${suffix}\n\t\t\t\t\t\t$LN_S \\$cf_target \\$cf_alias\\${suffix}\nCF_EOF\n\t;;\nesac\ncat >>$cf_edit_man <<CF_EOF\n\t\t\t\t\telif test \"\\$cf_target\" != \"\\$cf_alias\\${suffix}\" ; then\n\t\t\t\t\t\techo \".so \\$cf_source\" >\\$TMP\nCF_EOF\nif test -n \"$cf_compress\" ; then\ncat >>$cf_edit_man <<CF_EOF\n\t\t\t\t\t\tif test -n \"$cf_so_strip\" ; then\n\t\t\t\t\t\t\t$cf_compress -f \\$TMP\n\t\t\t\t\t\t\tmv \\$TMP.$cf_so_strip \\$TMP\n\t\t\t\t\t\tfi\nCF_EOF\nfi\ncat >>$cf_edit_man <<CF_EOF\n\t\t\t\t\t\techo .. \\$verb alias \\$cf_alias\\${suffix}\n\t\t\t\t\t\trm -f \\$cf_alias\\${suffix}\n\t\t\t\t\t\t\\$INSTALL_DATA \\$TMP \\$cf_alias\\${suffix}\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\t)\n\t\t)\n\telif test \\$verb = removing ; then\n\t\ttest -f \\$cf_target && (\n\t\t\techo \\$verb \\$cf_target\n\t\t\trm -f \\$cf_target\n\t\t)\n\t\ttest -d \\$cf_subdir\\${section} &&\n\t\ttest -n \"\\$aliases\" && (\n\t\t\tcd \\$cf_subdir\\${section} && (\n\t\t\t\tfor cf_alias in \\$aliases\n\t\t\t\tdo\n\t\t\t\t\tif test \\$section = 1 ; then\n\t\t\t\t\t\tcf_alias=\\`echo \\$cf_alias|sed \"\\${transform}\"\\`\n\t\t\t\t\tfi\n\n\t\t\t\t\techo .. \\$verb alias \\$cf_alias\\${suffix}\n\t\t\t\t\trm -f \\$cf_alias\\${suffix}\n\t\t\t\tdone\n\t\t\t)\n\t\t)\n\telse\n#\t\techo \".hy 0\"\n\t\tcat \\$TMP\n\tfi\n\t;;\nesac\ndone\n\nif test $cf_inboth = yes ; then\nif test \\$form != format ; then\n\tsh \\[$]0 format \\$verb \\$mandir \\$srcdir \\[$]*\nfi\nfi\n\nexit 0\nCF_EOF\nchmod 755 $cf_edit_man\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_MATH_LIB version: 8 updated: 2010/05/29 16:31:02\ndnl -----------\ndnl Checks for libraries.  At least one UNIX system, Apple Macintosh\ndnl Rhapsody 5.5, does not have -lm.  We cannot use the simpler\ndnl AC_CHECK_LIB(m,sin), because that fails for C++.\nAC_DEFUN([CF_MATH_LIB],\n[\nAC_CACHE_CHECK(if -lm needed for math functions,\n\tcf_cv_need_libm,[\n\tAC_TRY_LINK([\n\t#include <stdio.h>\n\t#include <math.h>\n\t],\n\t[double x = rand(); printf(\"result = %g\\n\", ]ifelse([$2],,sin(x),$2)[)],\n\t[cf_cv_need_libm=no],\n\t[cf_cv_need_libm=yes])])\nif test \"$cf_cv_need_libm\" = yes\nthen\nifelse($1,,[\n\tCF_ADD_LIB(m)\n],[$1=-lm])\nfi\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_MIXEDCASE_FILENAMES version: 3 updated: 2003/09/20 17:07:55\ndnl ----------------------\ndnl Check if the file-system supports mixed-case filenames.  If we're able to\ndnl create a lowercase name and see it as uppercase, it doesn't support that.\nAC_DEFUN([CF_MIXEDCASE_FILENAMES],\n[\nAC_CACHE_CHECK(if filesystem supports mixed-case filenames,cf_cv_mixedcase,[\nif test \"$cross_compiling\" = yes ; then\n\tcase $target_alias in #(vi\n\t*-os2-emx*|*-msdosdjgpp*|*-cygwin*|*-mingw32*|*-uwin*) #(vi\n\t\tcf_cv_mixedcase=no\n\t\t;;\n\t*)\n\t\tcf_cv_mixedcase=yes\n\t\t;;\n\tesac\nelse\n\trm -f conftest CONFTEST\n\techo test >conftest\n\tif test -f CONFTEST ; then\n\t\tcf_cv_mixedcase=no\n\telse\n\t\tcf_cv_mixedcase=yes\n\tfi\n\trm -f conftest CONFTEST\nfi\n])\ntest \"$cf_cv_mixedcase\" = yes && AC_DEFINE(MIXEDCASE_FILENAMES)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_MKSTEMP version: 7 updated: 2010/08/14 18:25:37\ndnl ----------\ndnl Check for a working mkstemp.  This creates two files, checks that they are\ndnl successfully created and distinct (AmigaOS apparently fails on the last).\nAC_DEFUN([CF_MKSTEMP],[\nAC_CACHE_CHECK(for working mkstemp, cf_cv_func_mkstemp,[\nrm -rf conftest*\nAC_TRY_RUN([\n#include <sys/types.h>\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <sys/stat.h>\nint main()\n{\n\tchar *tmpl = \"conftestXXXXXX\";\n\tchar name[2][80];\n\tint n;\n\tint result = 0;\n\tint fd;\n\tstruct stat sb;\n\n\tumask(077);\n\tfor (n = 0; n < 2; ++n) {\n\t\tstrcpy(name[n], tmpl);\n\t\tif ((fd = mkstemp(name[n])) >= 0) {\n\t\t\tif (!strcmp(name[n], tmpl)\n\t\t\t || stat(name[n], &sb) != 0\n\t\t\t || (sb.st_mode & S_IFMT) != S_IFREG\n\t\t\t || (sb.st_mode & 077) != 0) {\n\t\t\t\tresult = 1;\n\t\t\t}\n\t\t\tclose(fd);\n\t\t}\n\t}\n\tif (result == 0\n\t && !strcmp(name[0], name[1]))\n\t\tresult = 1;\n\t${cf_cv_main_return:-return}(result);\n}\n],[cf_cv_func_mkstemp=yes\n],[cf_cv_func_mkstemp=no\n],[AC_CHECK_FUNC(mkstemp)\n])\n])\nif test \"x$cf_cv_func_mkstemp\" = xyes || test \"x$ac_cv_func_mkstemp\" = xyes ; then\n\tAC_DEFINE(HAVE_MKSTEMP)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_MSG_LOG version: 5 updated: 2010/10/23 15:52:32\ndnl ----------\ndnl Write a debug message to config.log, along with the line number in the\ndnl configure script.\nAC_DEFUN([CF_MSG_LOG],[\necho \"${as_me:-configure}:__oline__: testing $* ...\" 1>&AC_FD_CC\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_NCURSES_ABI_6 version: 1 updated: 2005/09/17 18:42:49\ndnl ----------------\ndnl Set ncurses' ABI to 6 unless overridden by explicit configure option, and\ndnl warn about this.\nAC_DEFUN([CF_NCURSES_ABI_6],[\nif test \"${with_abi_version+set}\" != set; then\n\tcase $cf_cv_rel_version in\n\t5.*)\n\t\tcf_cv_rel_version=6.0\n\t\tcf_cv_abi_version=6\n\t\tAC_MSG_WARN(Overriding ABI version to $cf_cv_abi_version)\n\t\t;;\n\tesac\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_NO_LEAKS_OPTION version: 4 updated: 2006/12/16 14:24:05\ndnl ------------------\ndnl see CF_WITH_NO_LEAKS\nAC_DEFUN([CF_NO_LEAKS_OPTION],[\nAC_MSG_CHECKING(if you want to use $1 for testing)\nAC_ARG_WITH($1,\n\t[$2],\n\t[AC_DEFINE($3)ifelse([$4],,[\n\t $4\n])\n\t: ${with_cflags:=-g}\n\t: ${with_no_leaks:=yes}\n\t with_$1=yes],\n\t[with_$1=])\nAC_MSG_RESULT(${with_$1:-no})\n\ncase .$with_cflags in #(vi\n.*-g*)\n\tcase .$CFLAGS in #(vi\n\t.*-g*) #(vi\n\t\t;;\n\t*)\n\t\tCF_ADD_CFLAGS([-g])\n\t\t;;\n\tesac\n\t;;\nesac\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_NUMBER_SYNTAX version: 1 updated: 2003/09/20 18:12:49\ndnl ----------------\ndnl Check if the given variable is a number.  If not, report an error.\ndnl $1 is the variable\ndnl $2 is the message\nAC_DEFUN([CF_NUMBER_SYNTAX],[\nif test -n \"$1\" ; then\n  case $1 in #(vi\n  [[0-9]]*) #(vi\n \t;;\n  *)\n\tAC_MSG_ERROR($2 is not a number: $1)\n \t;;\n  esac\nelse\n  AC_MSG_ERROR($2 value is empty)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_OBJ_SUBDIR version: 4 updated: 2002/02/23 20:38:31\ndnl -------------\ndnl Compute the object-directory name from the given model name\nAC_DEFUN([CF_OBJ_SUBDIR],\n[\n\tcase $1 in\n\tlibtool) $2='obj_lo'  ;;\n\tnormal)  $2='objects' ;;\n\tdebug)   $2='obj_g' ;;\n\tprofile) $2='obj_p' ;;\n\tshared)\n\t\tcase $cf_cv_system_name in #(vi\n\t\tcygwin) #(vi\n\t\t\t$2='objects' ;;\n\t\t*)\n\t\t\t$2='obj_s' ;;\n\t\tesac\n\tesac\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PATHSEP version: 5 updated: 2010/05/26 05:38:42\ndnl ----------\ndnl Provide a value for the $PATH and similar separator\nAC_DEFUN([CF_PATHSEP],\n[\n\tcase $cf_cv_system_name in\n\tos2*)\tPATH_SEPARATOR=';'  ;;\n\t*)\tPATH_SEPARATOR=':'  ;;\n\tesac\nifelse([$1],,,[$1=$PATH_SEPARATOR])\n\tAC_SUBST(PATH_SEPARATOR)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PATH_SYNTAX version: 13 updated: 2010/05/26 05:38:42\ndnl --------------\ndnl Check the argument to see that it looks like a pathname.  Rewrite it if it\ndnl begins with one of the prefix/exec_prefix variables, and then again if the\ndnl result begins with 'NONE'.  This is necessary to work around autoconf's\ndnl delayed evaluation of those symbols.\nAC_DEFUN([CF_PATH_SYNTAX],[\nif test \"x$prefix\" != xNONE; then\n  cf_path_syntax=\"$prefix\"\nelse\n  cf_path_syntax=\"$ac_default_prefix\"\nfi\n\ncase \".[$]$1\" in #(vi\n.\\[$]\\(*\\)*|.\\'*\\'*) #(vi\n  ;;\n..|./*|.\\\\*) #(vi\n  ;;\n.[[a-zA-Z]]:[[\\\\/]]*) #(vi OS/2 EMX\n  ;;\n.\\[$]{*prefix}*) #(vi\n  eval $1=\"[$]$1\"\n  case \".[$]$1\" in #(vi\n  .NONE/*)\n    $1=`echo [$]$1 | sed -e s%NONE%$cf_path_syntax%`\n    ;;\n  esac\n  ;; #(vi\n.no|.NONE/*)\n  $1=`echo [$]$1 | sed -e s%NONE%$cf_path_syntax%`\n  ;;\n*)\n  ifelse([$2],,[AC_MSG_ERROR([expected a pathname, not \\\"[$]$1\\\"])],$2)\n  ;;\nesac\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PKG_CONFIG version: 4 updated: 2011/02/18 20:26:24\ndnl -------------\ndnl Check for the package-config program, unless disabled by command-line.\nAC_DEFUN([CF_PKG_CONFIG],\n[\nAC_MSG_CHECKING(if you want to use pkg-config)\nAC_ARG_WITH(pkg-config,\n\t[  --with-pkg-config{=path} enable/disable use of pkg-config],\n\t[cf_pkg_config=$withval],\n\t[cf_pkg_config=yes])\nAC_MSG_RESULT($cf_pkg_config)\n\ncase $cf_pkg_config in #(vi\nno) #(vi\n\tPKG_CONFIG=none\n\t;;\nyes) #(vi\n\tAC_PATH_TOOL(PKG_CONFIG, pkg-config, none)\n\t;;\n*)\n\tPKG_CONFIG=$withval\n\t;;\nesac\n\ntest -z \"$PKG_CONFIG\" && PKG_CONFIG=none\nif test \"$PKG_CONFIG\" != none ; then\n\tCF_PATH_SYNTAX(PKG_CONFIG)\nfi\n\nAC_SUBST(PKG_CONFIG)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_POSIX_C_SOURCE version: 8 updated: 2010/05/26 05:38:42\ndnl -----------------\ndnl Define _POSIX_C_SOURCE to the given level, and _POSIX_SOURCE if needed.\ndnl\ndnl\tPOSIX.1-1990\t\t\t\t_POSIX_SOURCE\ndnl\tPOSIX.1-1990 and\t\t\t_POSIX_SOURCE and\ndnl\t\tPOSIX.2-1992 C-Language\t\t\t_POSIX_C_SOURCE=2\ndnl\t\tBindings Option\ndnl\tPOSIX.1b-1993\t\t\t\t_POSIX_C_SOURCE=199309L\ndnl\tPOSIX.1c-1996\t\t\t\t_POSIX_C_SOURCE=199506L\ndnl\tX/Open 2000\t\t\t\t_POSIX_C_SOURCE=200112L\ndnl\ndnl Parameters:\ndnl\t$1 is the nominal value for _POSIX_C_SOURCE\nAC_DEFUN([CF_POSIX_C_SOURCE],\n[\ncf_POSIX_C_SOURCE=ifelse([$1],,199506L,[$1])\n\ncf_save_CFLAGS=\"$CFLAGS\"\ncf_save_CPPFLAGS=\"$CPPFLAGS\"\n\nCF_REMOVE_DEFINE(cf_trim_CFLAGS,$cf_save_CFLAGS,_POSIX_C_SOURCE)\nCF_REMOVE_DEFINE(cf_trim_CPPFLAGS,$cf_save_CPPFLAGS,_POSIX_C_SOURCE)\n\nAC_CACHE_CHECK(if we should define _POSIX_C_SOURCE,cf_cv_posix_c_source,[\n\tCF_MSG_LOG(if the symbol is already defined go no further)\n\tAC_TRY_COMPILE([#include <sys/types.h>],[\n#ifndef _POSIX_C_SOURCE\nmake an error\n#endif],\n\t[cf_cv_posix_c_source=no],\n\t[cf_want_posix_source=no\n\t case .$cf_POSIX_C_SOURCE in #(vi\n\t .[[12]]??*) #(vi\n\t\tcf_cv_posix_c_source=\"-D_POSIX_C_SOURCE=$cf_POSIX_C_SOURCE\"\n\t\t;;\n\t .2) #(vi\n\t\tcf_cv_posix_c_source=\"-D_POSIX_C_SOURCE=$cf_POSIX_C_SOURCE\"\n\t\tcf_want_posix_source=yes\n\t\t;;\n\t .*)\n\t\tcf_want_posix_source=yes\n\t\t;;\n\t esac\n\t if test \"$cf_want_posix_source\" = yes ; then\n\t\tAC_TRY_COMPILE([#include <sys/types.h>],[\n#ifdef _POSIX_SOURCE\nmake an error\n#endif],[],\n\t\tcf_cv_posix_c_source=\"$cf_cv_posix_c_source -D_POSIX_SOURCE\")\n\t fi\n\t CF_MSG_LOG(ifdef from value $cf_POSIX_C_SOURCE)\n\t CFLAGS=\"$cf_trim_CFLAGS\"\n\t CPPFLAGS=\"$cf_trim_CPPFLAGS $cf_cv_posix_c_source\"\n\t CF_MSG_LOG(if the second compile does not leave our definition intact error)\n\t AC_TRY_COMPILE([#include <sys/types.h>],[\n#ifndef _POSIX_C_SOURCE\nmake an error\n#endif],,\n\t [cf_cv_posix_c_source=no])\n\t CFLAGS=\"$cf_save_CFLAGS\"\n\t CPPFLAGS=\"$cf_save_CPPFLAGS\"\n\t])\n])\n\nif test \"$cf_cv_posix_c_source\" != no ; then\n\tCFLAGS=\"$cf_trim_CFLAGS\"\n\tCPPFLAGS=\"$cf_trim_CPPFLAGS\"\n\tCF_ADD_CFLAGS($cf_cv_posix_c_source)\nfi\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PREDEFINE version: 2 updated: 2010/05/26 16:44:57\ndnl ------------\ndnl Add definitions to CPPFLAGS to ensure they're predefined for all compiles.\ndnl\ndnl $1 = symbol to test\ndnl $2 = value (if any) to use for a predefinition\nAC_DEFUN([CF_PREDEFINE],\n[\nAC_MSG_CHECKING(if we must define $1)\nAC_TRY_COMPILE([#include <sys/types.h>\n],[\n#ifndef $1\nmake an error\n#endif],[cf_result=no],[cf_result=yes])\nAC_MSG_RESULT($cf_result)\n\nif test \"$cf_result\" = yes ; then\n\tCPPFLAGS=\"$CPPFLAGS ifelse([$2],,-D$1,[-D$1=$2])\"\nelif test \"x$2\" != \"x\" ; then\n\tAC_MSG_CHECKING(checking for compatible value versus $2)\n\tAC_TRY_COMPILE([#include <sys/types.h>\n],[\n#if $1-$2 < 0\nmake an error\n#endif],[cf_result=yes],[cf_result=no])\n\tAC_MSG_RESULT($cf_result)\n\tif test \"$cf_result\" = no ; then\n\t\t# perhaps we can override it - try...\n\t\tCPPFLAGS=\"$CPPFLAGS -D$1=$2\"\n\tfi\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PRG_RULES version: 1 updated: 2006/06/03 11:45:08\ndnl ------------\ndnl Append definitions and rules for the given programs to the subdirectory\ndnl Makefiles, and the recursion rule for the top-level Makefile.\ndnl\ndnl parameters\ndnl\t$1 = script to run\ndnl\t$2 = list of subdirectories\ndnl\ndnl variables\ndnl\t$AWK\nAC_DEFUN([CF_PRG_RULES],\n[\nfor cf_dir in $2\ndo\n\tif test ! -d $srcdir/$cf_dir; then\n\t\tcontinue\n\telif test -f $srcdir/$cf_dir/programs; then\n\t\t$AWK -f $1 $srcdir/$cf_dir/programs >>$cf_dir/Makefile\n\tfi\ndone\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PROG_AR version: 1 updated: 2009/01/01 20:15:22\ndnl ----------\ndnl Check for archiver \"ar\".\nAC_DEFUN([CF_PROG_AR],[\nAC_CHECK_TOOL(AR, ar, ar)\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_PROG_AWK version: 1 updated: 2006/09/16 11:40:59\ndnl -----------\ndnl Check for awk, ensure that the check found something.\nAC_DEFUN([CF_PROG_AWK],\n[\nAC_PROG_AWK\ntest -z \"$AWK\" && AC_MSG_ERROR(No awk program found)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PROG_CC_C_O version: 3 updated: 2010/08/14 18:25:37\ndnl --------------\ndnl Analogous to AC_PROG_CC_C_O, but more useful: tests only $CC, ensures that\ndnl the output file can be renamed, and allows for a shell variable that can\ndnl be used later.  The parameter is either CC or CXX.  The result is the\ndnl cache variable:\ndnl\t$cf_cv_prog_CC_c_o\ndnl\t$cf_cv_prog_CXX_c_o\nAC_DEFUN([CF_PROG_CC_C_O],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_MSG_CHECKING([whether [$]$1 understands -c and -o together])\nAC_CACHE_VAL(cf_cv_prog_$1_c_o,\n[\ncat > conftest.$ac_ext <<CF_EOF\n#include <stdio.h>\nint main()\n{\n\t${cf_cv_main_return:-return}(0);\n}\nCF_EOF\n# We do the test twice because some compilers refuse to overwrite an\n# existing .o file with -o, though they will create one.\nac_try='[$]$1 -c conftest.$ac_ext -o conftest2.$ac_objext >&AC_FD_CC'\nif AC_TRY_EVAL(ac_try) &&\n  test -f conftest2.$ac_objext && AC_TRY_EVAL(ac_try);\nthen\n  eval cf_cv_prog_$1_c_o=yes\nelse\n  eval cf_cv_prog_$1_c_o=no\nfi\nrm -rf conftest*\n])dnl\nif test $cf_cv_prog_$1_c_o = yes; then\n  AC_MSG_RESULT([yes])\nelse\n  AC_MSG_RESULT([no])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PROG_CC_U_D version: 1 updated: 2005/07/14 16:59:30\ndnl --------------\ndnl Check if C (preprocessor) -U and -D options are processed in the order\ndnl given rather than by type of option.  Some compilers insist on apply all\ndnl of the -U options after all of the -D options.  Others allow mixing them,\ndnl and may predefine symbols that conflict with those we define.\nAC_DEFUN([CF_PROG_CC_U_D],\n[\nAC_CACHE_CHECK(if $CC -U and -D options work together,cf_cv_cc_u_d_options,[\n\tcf_save_CPPFLAGS=\"$CPPFLAGS\"\n\tCPPFLAGS=\"-UU_D_OPTIONS -DU_D_OPTIONS -DD_U_OPTIONS -UD_U_OPTIONS\"\n\tAC_TRY_COMPILE([],[\n#ifndef U_D_OPTIONS\nmake an undefined-error\n#endif\n#ifdef  D_U_OPTIONS\nmake a defined-error\n#endif\n\t],[\n\tcf_cv_cc_u_d_options=yes],[\n\tcf_cv_cc_u_d_options=no])\n\tCPPFLAGS=\"$cf_save_CPPFLAGS\"\n])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PROG_EGREP version: 1 updated: 2006/09/16 11:40:59\ndnl -------------\ndnl AC_PROG_EGREP was introduced in autoconf 2.53.\ndnl This macro adds a check to ensure the script found something.\nAC_DEFUN([CF_PROG_EGREP],\n[AC_CACHE_CHECK([for egrep], [ac_cv_prog_egrep],\n   [if echo a | (grep -E '(a|b)') >/dev/null 2>&1\n    then ac_cv_prog_egrep='grep -E'\n    else ac_cv_prog_egrep='egrep'\n    fi])\n EGREP=$ac_cv_prog_egrep\n AC_SUBST([EGREP])\ntest -z \"$EGREP\" && AC_MSG_ERROR(No egrep program found)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PROG_EXT version: 10 updated: 2004/01/03 19:28:18\ndnl -----------\ndnl Compute $PROG_EXT, used for non-Unix ports, such as OS/2 EMX.\nAC_DEFUN([CF_PROG_EXT],\n[\nAC_REQUIRE([CF_CHECK_CACHE])\ncase $cf_cv_system_name in\nos2*)\n    CFLAGS=\"$CFLAGS -Zmt\"\n    CPPFLAGS=\"$CPPFLAGS -D__ST_MT_ERRNO__\"\n    CXXFLAGS=\"$CXXFLAGS -Zmt\"\n    # autoconf's macro sets -Zexe and suffix both, which conflict:w\n    LDFLAGS=\"$LDFLAGS -Zmt -Zcrtdll\"\n    ac_cv_exeext=.exe\n    ;;\nesac\n\nAC_EXEEXT\nAC_OBJEXT\n\nPROG_EXT=\"$EXEEXT\"\nAC_SUBST(PROG_EXT)\ntest -n \"$PROG_EXT\" && AC_DEFINE_UNQUOTED(PROG_EXT,\"$PROG_EXT\")\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PROG_GNAT version: 1 updated: 2010/06/19 15:22:18\ndnl ------------\ndnl Check for gnatmake, ensure that it is complete.\nAC_DEFUN([CF_PROG_GNAT],[\ncf_ada_make=gnatmake\nAC_CHECK_PROG(gnat_exists, $cf_ada_make, yes, no)\nif test \"$ac_cv_prog_gnat_exists\" = no; then\n   cf_ada_make=\nelse\n   CF_GNAT_VERSION\n   AC_CHECK_PROG(M4_exists, m4, yes, no)\n   if test \"$ac_cv_prog_M4_exists\" = no; then\n      cf_cv_prog_gnat_correct=no\n      echo Ada95 binding required program m4 not found. Ada95 binding disabled.\n   fi\n   if test \"$cf_cv_prog_gnat_correct\" = yes; then\n      AC_MSG_CHECKING(if GNAT works)\n      CF_GNAT_TRY_RUN([procedure conftest;],\n[with Text_IO;\nwith GNAT.OS_Lib;\nprocedure conftest is\nbegin\n   Text_IO.Put (\"Hello World\");\n   Text_IO.New_Line;\n   GNAT.OS_Lib.OS_Exit (0);\nend conftest;],[cf_cv_prog_gnat_correct=yes],[cf_cv_prog_gnat_correct=no])\n      AC_MSG_RESULT($cf_cv_prog_gnat_correct)\n   fi\nfi\n\nAC_SUBST(cf_ada_make)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PROG_INSTALL version: 5 updated: 2002/12/21 22:46:07\ndnl ---------------\ndnl Force $INSTALL to be an absolute-path.  Otherwise, edit_man.sh and the\ndnl misc/tabset install won't work properly.  Usually this happens only when\ndnl using the fallback mkinstalldirs script\nAC_DEFUN([CF_PROG_INSTALL],\n[AC_PROG_INSTALL\ncase $INSTALL in\n/*)\n  ;;\n*)\n  CF_DIRNAME(cf_dir,$INSTALL)\n  test -z \"$cf_dir\" && cf_dir=.\n  INSTALL=`cd $cf_dir && pwd`/`echo $INSTALL | sed -e 's%^.*/%%'`\n  ;;\nesac\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PROG_LDCONFIG version: 2 updated: 2008/12/13 14:08:40\ndnl ----------------\ndnl Check for ldconfig, needed to fixup shared libraries that would be built\ndnl and then used in the install.\nAC_DEFUN([CF_PROG_LDCONFIG],[\nif test \"$cross_compiling\" = yes ; then\n  LDCONFIG=:\nelse\ncase \"$cf_cv_system_name\" in #(vi\ndragonfly*|freebsd*) #(vi\n  test -z \"$LDCONFIG\" && LDCONFIG=\"/sbin/ldconfig -R\"\n  ;;\n*) LDPATH=$PATH:/sbin:/usr/sbin\n  AC_PATH_PROG(LDCONFIG,ldconfig,,$LDPATH)\n  ;;\nesac\nfi\nAC_SUBST(LDCONFIG)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PROG_LINT version: 2 updated: 2009/08/12 04:43:14\ndnl ------------\nAC_DEFUN([CF_PROG_LINT],\n[\nAC_CHECK_PROGS(LINT, tdlint lint alint splint lclint)\nAC_SUBST(LINT_OPTS)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_PROG_LN_S version: 2 updated: 2010/08/14 18:25:37\ndnl ------------\ndnl Combine checks for \"ln -s\" and \"ln -sf\", updating $LN_S to include \"-f\"\ndnl option if it is supported.\nAC_DEFUN([CF_PROG_LN_S],[\nAC_PROG_LN_S\nAC_MSG_CHECKING(if $LN_S -f options work)\n\nrm -f conf$$.src conf$$dst\necho >conf$$.dst\necho first >conf$$.src\nif $LN_S -f conf$$.src conf$$.dst 2>/dev/null; then\n\tcf_prog_ln_sf=yes\nelse\n\tcf_prog_ln_sf=no\nfi\nrm -f conf$$.dst conf$$src\nAC_MSG_RESULT($cf_prog_ln_sf)\n\ntest \"$cf_prog_ln_sf\" = yes && LN_S=\"$LN_S -f\"\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_REGEX version: 8 updated: 2010/08/07 14:09:44\ndnl --------\ndnl Attempt to determine if we've got one of the flavors of regular-expression\ndnl code that we can support.\nAC_DEFUN([CF_REGEX],\n[\n\ncf_regex_func=no\n\ncf_regex_libs=\"regex re\"\ncase $host_os in #(vi\nmingw*)\n\tcf_regex_libs=\"regex.dll $cf_regex_libs\"\n\t;;\nesac\n\nAC_CHECK_FUNC(regcomp,[cf_regex_func=regcomp],[\n\tfor cf_regex_lib in $cf_regex_libs\n\tdo\n\t\tAC_CHECK_LIB($cf_regex_lib,regcomp,[\n\t\t\t\tCF_ADD_LIB($cf_regex_lib)\n\t\t\t\tcf_regex_func=regcomp\n\t\t\t\tbreak])\n\tdone\n])\n\nif test \"$cf_regex_func\" = no ; then\n\tAC_CHECK_FUNC(compile,[cf_regex_func=compile],[\n\t\tAC_CHECK_LIB(gen,compile,[\n\t\t\t\tCF_ADD_LIB(gen)\n\t\t\t\tcf_regex_func=compile])])\nfi\n\nif test \"$cf_regex_func\" = no ; then\n\tAC_MSG_WARN(cannot find regular expression library)\nfi\n\nAC_CACHE_CHECK(for regular-expression headers,cf_cv_regex_hdrs,[\n\ncf_cv_regex_hdrs=no\ncase $cf_regex_func in #(vi\ncompile) #(vi\n\tfor cf_regex_hdr in regexp.h regexpr.h\n\tdo\n\t\tAC_TRY_LINK([#include <$cf_regex_hdr>],[\n\t\t\tchar *p = compile(\"\", \"\", \"\", 0);\n\t\t\tint x = step(\"\", \"\");\n\t\t],[\n\t\t\tcf_cv_regex_hdrs=$cf_regex_hdr\n\t\t\tbreak\n\t\t])\n\tdone\n\t;;\n*)\n\tfor cf_regex_hdr in regex.h\n\tdo\n\t\tAC_TRY_LINK([#include <sys/types.h>\n#include <$cf_regex_hdr>],[\n\t\t\tregex_t *p;\n\t\t\tint x = regcomp(p, \"\", 0);\n\t\t\tint y = regexec(p, \"\", 0, 0, 0);\n\t\t\tregfree(p);\n\t\t],[\n\t\t\tcf_cv_regex_hdrs=$cf_regex_hdr\n\t\t\tbreak\n\t\t])\n\tdone\n\t;;\nesac\n\n])\n\ncase $cf_cv_regex_hdrs in #(vi\n    no)\t       AC_MSG_WARN(no regular expression header found) ;; #(vi\n    regex.h)   AC_DEFINE(HAVE_REGEX_H_FUNCS) ;; #(vi\n    regexp.h)  AC_DEFINE(HAVE_REGEXP_H_FUNCS) ;; #(vi\n    regexpr.h) AC_DEFINE(HAVE_REGEXPR_H_FUNCS) ;;\nesac\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_REMOVE_DEFINE version: 3 updated: 2010/01/09 11:05:50\ndnl ----------------\ndnl Remove all -U and -D options that refer to the given symbol from a list\ndnl of C compiler options.  This works around the problem that not all\ndnl compilers process -U and -D options from left-to-right, so a -U option\ndnl cannot be used to cancel the effect of a preceding -D option.\ndnl\ndnl $1 = target (which could be the same as the source variable)\ndnl $2 = source (including '$')\ndnl $3 = symbol to remove\ndefine([CF_REMOVE_DEFINE],\n[\n$1=`echo \"$2\" | \\\n\tsed\t-e 's/-[[UD]]'\"$3\"'\\(=[[^ \t]]*\\)\\?[[ \t]]/ /g' \\\n\t\t-e 's/-[[UD]]'\"$3\"'\\(=[[^ \t]]*\\)\\?[$]//g'`\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_REMOVE_LIB version: 1 updated: 2007/02/17 14:11:52\ndnl -------------\ndnl Remove the given library from the symbol\ndnl\ndnl $1 = target (which could be the same as the source variable)\ndnl $2 = source (including '$')\ndnl $3 = library to remove\ndefine([CF_REMOVE_LIB],\n[\n# remove $3 library from $2\n$1=`echo \"$2\" | sed -e 's/-l$3[[ \t]]//g' -e 's/-l$3[$]//'`\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_RPATH_HACK version: 9 updated: 2011/02/13 13:31:33\ndnl -------------\nAC_DEFUN([CF_RPATH_HACK],\n[\nAC_REQUIRE([CF_LD_RPATH_OPT])\nAC_MSG_CHECKING(for updated LDFLAGS)\nif test -n \"$LD_RPATH_OPT\" ; then\n\tAC_MSG_RESULT(maybe)\n\n\tAC_CHECK_PROGS(cf_ldd_prog,ldd,no)\n\tcf_rpath_list=\"/usr/lib /lib\"\n\tif test \"$cf_ldd_prog\" != no\n\tthen\n\t\tcf_rpath_oops=\n\nAC_TRY_LINK([#include <stdio.h>],\n\t\t[printf(\"Hello\");],\n\t\t[cf_rpath_oops=`$cf_ldd_prog conftest$ac_exeext | fgrep ' not found' | sed -e 's% =>.*$%%' |sort -u`\n\t\t cf_rpath_list=`$cf_ldd_prog conftest$ac_exeext | fgrep / | sed -e 's%^.*[[ \t]]/%/%' -e 's%/[[^/]][[^/]]*$%%' |sort -u`])\n\n\t\t# If we passed the link-test, but get a \"not found\" on a given library,\n\t\t# this could be due to inept reconfiguration of gcc to make it only\n\t\t# partly honor /usr/local/lib (or whatever).  Sometimes this behavior\n\t\t# is intentional, e.g., installing gcc in /usr/bin and suppressing the\n\t\t# /usr/local libraries.\n\t\tif test -n \"$cf_rpath_oops\"\n\t\tthen\n\t\t\tfor cf_rpath_src in $cf_rpath_oops\n\t\t\tdo\n\t\t\t\tfor cf_rpath_dir in \\\n\t\t\t\t\t/usr/local \\\n\t\t\t\t\t/usr/pkg \\\n\t\t\t\t\t/opt/sfw\n\t\t\t\tdo\n\t\t\t\t\tif test -f $cf_rpath_dir/lib/$cf_rpath_src\n\t\t\t\t\tthen\n\t\t\t\t\t\tCF_VERBOSE(...adding -L$cf_rpath_dir/lib to LDFLAGS for $cf_rpath_src)\n\t\t\t\t\t\tLDFLAGS=\"$LDFLAGS -L$cf_rpath_dir/lib\"\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\tdone\n\t\tfi\n\tfi\n\n\tCF_VERBOSE(...checking EXTRA_LDFLAGS $EXTRA_LDFLAGS)\n\n\tCF_RPATH_HACK_2(LDFLAGS)\n\tCF_RPATH_HACK_2(LIBS)\n\n\tCF_VERBOSE(...checked EXTRA_LDFLAGS $EXTRA_LDFLAGS)\nfi\nAC_SUBST(EXTRA_LDFLAGS)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_RPATH_HACK_2 version: 6 updated: 2010/04/17 16:31:24\ndnl ---------------\ndnl Do one set of substitutions for CF_RPATH_HACK, adding an rpath option to\ndnl EXTRA_LDFLAGS for each -L option found.\ndnl\ndnl $cf_rpath_list contains a list of directories to ignore.\ndnl\ndnl $1 = variable name to update.  The LDFLAGS variable should be the only one,\ndnl      but LIBS often has misplaced -L options.\nAC_DEFUN([CF_RPATH_HACK_2],\n[\nCF_VERBOSE(...checking $1 [$]$1)\n\ncf_rpath_dst=\nfor cf_rpath_src in [$]$1\ndo\n\tcase $cf_rpath_src in #(vi\n\t-L*) #(vi\n\n\t\t# check if this refers to a directory which we will ignore\n\t\tcf_rpath_skip=no\n\t\tif test -n \"$cf_rpath_list\"\n\t\tthen\n\t\t\tfor cf_rpath_item in $cf_rpath_list\n\t\t\tdo\n\t\t\t\tif test \"x$cf_rpath_src\" = \"x-L$cf_rpath_item\"\n\t\t\t\tthen\n\t\t\t\t\tcf_rpath_skip=yes\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tdone\n\t\tfi\n\n\t\tif test \"$cf_rpath_skip\" = no\n\t\tthen\n\t\t\t# transform the option\n\t\t\tif test \"$LD_RPATH_OPT\" = \"-R \" ; then\n\t\t\t\tcf_rpath_tmp=`echo \"$cf_rpath_src\" |sed -e \"s%-L%-R %\"`\n\t\t\telse\n\t\t\t\tcf_rpath_tmp=`echo \"$cf_rpath_src\" |sed -e \"s%-L%$LD_RPATH_OPT%\"`\n\t\t\tfi\n\n\t\t\t# if we have not already added this, add it now\n\t\t\tcf_rpath_tst=`echo \"$EXTRA_LDFLAGS\" | sed -e \"s%$cf_rpath_tmp %%\"`\n\t\t\tif test \"x$cf_rpath_tst\" = \"x$EXTRA_LDFLAGS\"\n\t\t\tthen\n\t\t\t\tCF_VERBOSE(...Filter $cf_rpath_src ->$cf_rpath_tmp)\n\t\t\t\tEXTRA_LDFLAGS=\"$cf_rpath_tmp $EXTRA_LDFLAGS\"\n\t\t\tfi\n\t\tfi\n\t\t;;\n\tesac\n\tcf_rpath_dst=\"$cf_rpath_dst $cf_rpath_src\"\ndone\n$1=$cf_rpath_dst\n\nCF_VERBOSE(...checked $1 [$]$1)\nAC_SUBST(EXTRA_LDFLAGS)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SHARED_OPTS version: 64 updated: 2010/06/05 16:51:16\ndnl --------------\ndnl --------------\ndnl Attempt to determine the appropriate CC/LD options for creating a shared\ndnl library.\ndnl\ndnl Note: ${LOCAL_LDFLAGS} is used to link executables that will run within the\ndnl build-tree, i.e., by making use of the libraries that are compiled in ../lib\ndnl We avoid compiling-in a ../lib path for the shared library since that can\ndnl lead to unexpected results at runtime.\ndnl ${LOCAL_LDFLAGS2} has the same intention but assumes that the shared libraries\ndnl are compiled in ../../lib\ndnl\ndnl The variable 'cf_cv_do_symlinks' is used to control whether we configure\ndnl to install symbolic links to the rel/abi versions of shared libraries.\ndnl\ndnl The variable 'cf_cv_shlib_version' controls whether we use the rel or abi\ndnl version when making symbolic links.\ndnl\ndnl The variable 'cf_cv_shlib_version_infix' controls whether shared library\ndnl version numbers are infix (ex: libncurses.<ver>.dylib) or postfix\ndnl (ex: libncurses.so.<ver>).\ndnl\ndnl Some loaders leave 'so_locations' lying around.  It's nice to clean up.\nAC_DEFUN([CF_SHARED_OPTS],\n[\n\tAC_REQUIRE([CF_SUBST_NCURSES_VERSION])\n\tAC_REQUIRE([CF_LD_RPATH_OPT])\n\tLOCAL_LDFLAGS=\n\tLOCAL_LDFLAGS2=\n\tLD_SHARED_OPTS=\n\tINSTALL_LIB=\"-m 644\"\n\n\tcf_cv_do_symlinks=no\n\tcf_ld_rpath_opt=\n\ttest \"$cf_cv_enable_rpath\" = yes && cf_ld_rpath_opt=\"$LD_RPATH_OPT\"\n\n\tAC_MSG_CHECKING(if release/abi version should be used for shared libs)\n\tAC_ARG_WITH(shlib-version,\n\t[  --with-shlib-version=X  Specify rel or abi version for shared libs],\n\t[test -z \"$withval\" && withval=auto\n\tcase $withval in #(vi\n\tyes) #(vi\n\t\tcf_cv_shlib_version=auto\n\t\t;;\n\trel|abi|auto|no) #(vi\n\t\tcf_cv_shlib_version=$withval\n\t\t;;\n\t*)\n\t\tAC_MSG_ERROR([option value must be one of: rel, abi, auto or no])\n\t\t;;\n\tesac\n\t],[cf_cv_shlib_version=auto])\n\tAC_MSG_RESULT($cf_cv_shlib_version)\n\n\tcf_cv_rm_so_locs=no\n\n\t# Some less-capable ports of gcc support only -fpic\n\tCC_SHARED_OPTS=\n\tif test \"$GCC\" = yes\n\tthen\n\t\tAC_MSG_CHECKING(which $CC option to use)\n\t\tcf_save_CFLAGS=\"$CFLAGS\"\n\t\tfor CC_SHARED_OPTS in -fPIC -fpic ''\n\t\tdo\n\t\t\tCFLAGS=\"$cf_save_CFLAGS $CC_SHARED_OPTS\"\n\t\t\tAC_TRY_COMPILE([#include <stdio.h>],[int x = 1],[break],[])\n\t\tdone\n\t\tAC_MSG_RESULT($CC_SHARED_OPTS)\n\t\tCFLAGS=\"$cf_save_CFLAGS\"\n\tfi\n\n\tcf_cv_shlib_version_infix=no\n\n\tcase $cf_cv_system_name in #(vi\n\taix[[56]]*) #(vi\n\t\tif test \"$GCC\" = yes; then\n\t\t\tCC_SHARED_OPTS=\n\t\t\tMK_SHARED_LIB='$(CC) -shared'\n\t\tfi\n\t\t;;\n\tbeos*) #(vi\n\t\tMK_SHARED_LIB='${CC} ${CFLAGS} -o $[@] -Xlinker -soname=`basename $[@]` -nostart -e 0'\n\t\t;;\n\tcygwin*) #(vi\n\t\tCC_SHARED_OPTS=\n\t\tMK_SHARED_LIB='sh ../mk_shared_lib.sh [$]@ [$]{CC} [$]{CFLAGS}'\n\t\tcf_cv_shlib_version=cygdll\n\t\tcf_cv_shlib_version_infix=cygdll\n\t\tcat >mk_shared_lib.sh <<-CF_EOF\n\t\t#!/bin/sh\n\t\tSHARED_LIB=\\[$]1\n\t\tIMPORT_LIB=\\`echo \"\\[$]1\" | sed -e 's/cyg/lib/' -e 's/[[0-9]]*\\.dll[$]/.dll.a/'\\`\n\t\tshift\n\t\tcat <<-EOF\n\t\tLinking shared library\n\t\t** SHARED_LIB \\[$]SHARED_LIB\n\t\t** IMPORT_LIB \\[$]IMPORT_LIB\nEOF\n\t\texec \\[$]* -shared -Wl,--out-implib=../lib/\\[$]{IMPORT_LIB} -Wl,--export-all-symbols -o ../lib/\\[$]{SHARED_LIB}\nCF_EOF\n\t\tchmod +x mk_shared_lib.sh\n\t\t;;\n\tdarwin*) #(vi\n\t\tEXTRA_CFLAGS=\"-no-cpp-precomp\"\n\t\tCC_SHARED_OPTS=\"-dynamic\"\n\t\tMK_SHARED_LIB='${CC} ${CFLAGS} -dynamiclib -install_name ${libdir}/`basename $[@]` -compatibility_version ${ABI_VERSION} -current_version ${ABI_VERSION} -o $[@]'\n\t\ttest \"$cf_cv_shlib_version\" = auto && cf_cv_shlib_version=abi\n\t\tcf_cv_shlib_version_infix=yes\n\t\tAC_CACHE_CHECK([if ld -search_paths_first works], cf_cv_ldflags_search_paths_first, [\n\t\t\tcf_save_LDFLAGS=$LDFLAGS\n\t\t\tLDFLAGS=\"$LDFLAGS -Wl,-search_paths_first\"\n\t\t\tAC_TRY_LINK(, [int i;], cf_cv_ldflags_search_paths_first=yes, cf_cv_ldflags_search_paths_first=no)\n\t\t\t\tLDFLAGS=$cf_save_LDFLAGS])\n\t\tif test $cf_cv_ldflags_search_paths_first = yes; then\n\t\t\tLDFLAGS=\"$LDFLAGS -Wl,-search_paths_first\"\n\t\tfi\n\t\t;;\n\thpux*) #(vi\n\t\t# (tested with gcc 2.7.2 -- I don't have c89)\n\t\tif test \"$GCC\" = yes; then\n\t\t\tLD_SHARED_OPTS='-Xlinker +b -Xlinker ${libdir}'\n\t\telse\n\t\t\tCC_SHARED_OPTS='+Z'\n\t\t\tLD_SHARED_OPTS='-Wl,+b,${libdir}'\n\t\tfi\n\t\tMK_SHARED_LIB='${LD} +b ${libdir} -b -o $[@]'\n\t\t# HP-UX shared libraries must be executable, and should be\n\t\t# readonly to exploit a quirk in the memory manager.\n\t\tINSTALL_LIB=\"-m 555\"\n\t\t;;\n\tirix*) #(vi\n\t\tif test \"$cf_cv_enable_rpath\" = yes ; then\n\t\t\tEXTRA_LDFLAGS=\"${cf_ld_rpath_opt}\\${libdir} $EXTRA_LDFLAGS\"\n\t\tfi\n\t\t# tested with IRIX 5.2 and 'cc'.\n\t\tif test \"$GCC\" != yes; then\n\t\t\tCC_SHARED_OPTS='-KPIC'\n\t\t\tMK_SHARED_LIB='${CC} -shared -rdata_shared -soname `basename $[@]` -o $[@]'\n\t\telse\n\t\t\tMK_SHARED_LIB='${CC} -shared -Wl,-soname,`basename $[@]` -o $[@]'\n\t\tfi\n\t\tcf_cv_rm_so_locs=yes\n\t\t;;\n\tlinux*|gnu*|k*bsd*-gnu) #(vi\n\t\tif test \"$DFT_LWR_MODEL\" = \"shared\" ; then\n\t\t\tLOCAL_LDFLAGS=\"${LD_RPATH_OPT}\\$(LOCAL_LIBDIR)\"\n\t\t\tLOCAL_LDFLAGS2=\"$LOCAL_LDFLAGS\"\n\t\tfi\n\t\tif test \"$cf_cv_enable_rpath\" = yes ; then\n\t\t\tEXTRA_LDFLAGS=\"${cf_ld_rpath_opt}\\${libdir} $EXTRA_LDFLAGS\"\n\t\tfi\n\t\tCF_SHARED_SONAME\n\t\tMK_SHARED_LIB='${CC} ${CFLAGS} -shared -Wl,-soname,'$cf_cv_shared_soname',-stats,-lc -o $[@]'\n\t\t;;\n\topenbsd[[2-9]].*) #(vi\n\t\tif test \"$DFT_LWR_MODEL\" = \"shared\" ; then\n\t\t\tLOCAL_LDFLAGS=\"${LD_RPATH_OPT}\\$(LOCAL_LIBDIR)\"\n\t\t\tLOCAL_LDFLAGS2=\"$LOCAL_LDFLAGS\"\n\t\tfi\n\t\tif test \"$cf_cv_enable_rpath\" = yes ; then\n\t\t\tEXTRA_LDFLAGS=\"${cf_ld_rpath_opt}\\${libdir} $EXTRA_LDFLAGS\"\n\t\tfi\n\t\tCC_SHARED_OPTS=\"$CC_SHARED_OPTS -DPIC\"\n\t\tCF_SHARED_SONAME\n\t\tMK_SHARED_LIB='${CC} ${CFLAGS} -shared -Wl,-Bshareable,-soname,'$cf_cv_shared_soname',-stats,-lc -o $[@]'\n\t\t;;\n\tnto-qnx*|openbsd*|freebsd[[12]].*) #(vi\n\t\tCC_SHARED_OPTS=\"$CC_SHARED_OPTS -DPIC\"\n\t\tMK_SHARED_LIB='${LD} -Bshareable -o $[@]'\n\t\ttest \"$cf_cv_shlib_version\" = auto && cf_cv_shlib_version=rel\n\t\t;;\n\tfreebsd*) #(vi\n\t\tCC_SHARED_OPTS=\"$CC_SHARED_OPTS -DPIC\"\n\t\tif test \"$DFT_LWR_MODEL\" = \"shared\" && test \"$cf_cv_enable_rpath\" = yes ; then\n\t\t\tLOCAL_LDFLAGS=\"${cf_ld_rpath_opt}\\$(LOCAL_LIBDIR)\"\n\t\t\tLOCAL_LDFLAGS2=\"${cf_ld_rpath_opt}\\${libdir} $LOCAL_LDFLAGS\"\n\t\t\tEXTRA_LDFLAGS=\"${cf_ld_rpath_opt}\\${libdir} $EXTRA_LDFLAGS\"\n\t\tfi\n\t\tCF_SHARED_SONAME\n\t\tMK_SHARED_LIB='${LD} -shared -Bshareable -soname=`basename $[@]` -o $[@]'\n\t\t;;\n\tnetbsd*) #(vi\n\t\tCC_SHARED_OPTS=\"$CC_SHARED_OPTS -DPIC\"\n\t\tif test \"$DFT_LWR_MODEL\" = \"shared\" && test \"$cf_cv_enable_rpath\" = yes ; then\n\t\t\tLOCAL_LDFLAGS=\"${cf_ld_rpath_opt}\\$(LOCAL_LIBDIR)\"\n\t\t\tLOCAL_LDFLAGS2=\"$LOCAL_LDFLAGS\"\n\t\t\tEXTRA_LDFLAGS=\"${cf_ld_rpath_opt}\\${libdir} $EXTRA_LDFLAGS\"\n\t\t\tif test \"$cf_cv_shlib_version\" = auto; then\n\t\t\tif test -f /usr/libexec/ld.elf_so; then\n\t\t\t\tcf_cv_shlib_version=abi\n\t\t\telse\n\t\t\t\tcf_cv_shlib_version=rel\n\t\t\tfi\n\t\t\tfi\n\t\t\tCF_SHARED_SONAME\n\t\t\tMK_SHARED_LIB='${CC} ${CFLAGS} -shared -Wl,-soname,'$cf_cv_shared_soname' -o $[@]'\n\t\telse\n\t\t\tMK_SHARED_LIB='${LD} -shared -Bshareable -o $[@]'\n\t\tfi\n\t\t;;\n\tosf*|mls+*) #(vi\n\t\t# tested with OSF/1 V3.2 and 'cc'\n\t\t# tested with OSF/1 V3.2 and gcc 2.6.3 (but the c++ demo didn't\n\t\t# link with shared libs).\n\t\tMK_SHARED_LIB='${LD} -set_version ${REL_VERSION}:${ABI_VERSION} -expect_unresolved \"*\" -shared -soname `basename $[@]`'\n\t\tcase $host_os in #(vi\n\t\tosf4*)\n\t\t\tMK_SHARED_LIB=\"${MK_SHARED_LIB} -msym\"\n\t\t\t;;\n\t\tesac\n\t\tMK_SHARED_LIB=\"${MK_SHARED_LIB}\"' -o $[@]'\n\t\tif test \"$DFT_LWR_MODEL\" = \"shared\" ; then\n\t\t\tLOCAL_LDFLAGS=\"${LD_RPATH_OPT}\\$(LOCAL_LIBDIR)\"\n\t\t\tLOCAL_LDFLAGS2=\"$LOCAL_LDFLAGS\"\n\t\tfi\n\t\tcf_cv_rm_so_locs=yes\n\t\t;;\n\tsco3.2v5*)  # (also uw2* and UW7: hops 13-Apr-98\n\t\t# tested with osr5.0.5\n\t\tif test \"$GCC\" != yes; then\n\t\t\tCC_SHARED_OPTS='-belf -KPIC'\n\t\tfi\n\t\tMK_SHARED_LIB='${LD} -dy -G -h `basename $[@] .${REL_VERSION}`.${ABI_VERSION} -o [$]@'\n\t\tif test \"$cf_cv_enable_rpath\" = yes ; then\n\t\t\t# only way is to set LD_RUN_PATH but no switch for it\n\t\t\tRUN_PATH=$libdir\n\t\tfi\n\t\ttest \"$cf_cv_shlib_version\" = auto && cf_cv_shlib_version=rel\n\t\tLINK_PROGS='LD_RUN_PATH=${libdir}'\n\t\tLINK_TESTS='Pwd=`pwd`;LD_RUN_PATH=`dirname $${Pwd}`/lib'\n\t\t;;\n\tsunos4*) #(vi\n\t\t# tested with SunOS 4.1.1 and gcc 2.7.0\n\t\tif test \"$GCC\" != yes; then\n\t\t\tCC_SHARED_OPTS='-KPIC'\n\t\tfi\n\t\tMK_SHARED_LIB='${LD} -assert pure-text -o $[@]'\n\t\ttest \"$cf_cv_shlib_version\" = auto && cf_cv_shlib_version=rel\n\t\t;;\n\tsolaris2*) #(vi\n\t\t# tested with SunOS 5.5.1 (solaris 2.5.1) and gcc 2.7.2\n\t\t# tested with SunOS 5.10 (solaris 10) and gcc 3.4.3\n\t\tif test \"$DFT_LWR_MODEL\" = \"shared\" ; then\n\t\t\tLOCAL_LDFLAGS=\"-R \\$(LOCAL_LIBDIR):\\${libdir}\"\n\t\t\tLOCAL_LDFLAGS2=\"$LOCAL_LDFLAGS\"\n\t\tfi\n\t\tif test \"$cf_cv_enable_rpath\" = yes ; then\n\t\t\tEXTRA_LDFLAGS=\"-R \\${libdir} $EXTRA_LDFLAGS\"\n\t\tfi\n\t\tCF_SHARED_SONAME\n\t\tif test \"$GCC\" != yes; then\n\t\t\tcf_save_CFLAGS=\"$CFLAGS\"\n\t\t\tfor cf_shared_opts in -xcode=pic32 -xcode=pic13 -KPIC -Kpic -O\n\t\t\tdo\n\t\t\t\tCFLAGS=\"$cf_shared_opts $cf_save_CFLAGS\"\n\t\t\t\tAC_TRY_COMPILE([#include <stdio.h>],[printf(\"Hello\\n\");],[break])\n\t\t\tdone\n\t\t\tCFLAGS=\"$cf_save_CFLAGS\"\n\t\t\tCC_SHARED_OPTS=$cf_shared_opts\n\t\t\tMK_SHARED_LIB='${CC} -dy -G -h '$cf_cv_shared_soname' -o $[@]'\n\t\telse\n\t\t\tMK_SHARED_LIB='${CC} -shared -dy -G -h '$cf_cv_shared_soname' -o $[@]'\n\t\tfi\n\t\t;;\n\tsysv5uw7*|unix_sv*) #(vi\n\t\t# tested with UnixWare 7.1.0 (gcc 2.95.2 and cc)\n\t\tif test \"$GCC\" != yes; then\n\t\t\tCC_SHARED_OPTS='-KPIC'\n\t\tfi\n\t\tMK_SHARED_LIB='${LD} -d y -G -o [$]@'\n\t\t;;\n\t*)\n\t\tCC_SHARED_OPTS='unknown'\n\t\tMK_SHARED_LIB='echo unknown'\n\t\t;;\n\tesac\n\n\t# This works if the last tokens in $MK_SHARED_LIB are the -o target.\n\tcase \"$cf_cv_shlib_version\" in #(vi\n\trel|abi)\n\t\tcase \"$MK_SHARED_LIB\" in #(vi\n\t\t*'-o $[@]') #(vi\n\t\t\ttest \"$cf_cv_do_symlinks\" = no && cf_cv_do_symlinks=yes\n\t\t\t;;\n\t\t*)\n\t\t\tAC_MSG_WARN(ignored --with-shlib-version)\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tesac\n\n\tif test -n \"$cf_ld_rpath_opt\" ; then\n\t\tMK_SHARED_LIB=\"$MK_SHARED_LIB $cf_ld_rpath_opt\\${libdir}\"\n\tfi\n\n\tAC_SUBST(CC_SHARED_OPTS)\n\tAC_SUBST(LD_RPATH_OPT)\n\tAC_SUBST(LD_SHARED_OPTS)\n\tAC_SUBST(MK_SHARED_LIB)\n\tAC_SUBST(LINK_PROGS)\n\tAC_SUBST(LINK_TESTS)\n\tAC_SUBST(EXTRA_LDFLAGS)\n\tAC_SUBST(LOCAL_LDFLAGS)\n\tAC_SUBST(LOCAL_LDFLAGS2)\n\tAC_SUBST(INSTALL_LIB)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SHARED_SONAME version: 3 updated: 2008/09/08 18:34:43\ndnl ----------------\ndnl utility macro for CF_SHARED_OPTS, constructs \"$cf_cv_shared_soname\" for\ndnl substitution into MK_SHARED_LIB string for the \"-soname\" (or similar)\ndnl option.\ndnl\ndnl $1 is the default that should be used for \"$cf_cv_shlib_version\".\ndnl If missing, use \"rel\".\ndefine([CF_SHARED_SONAME],\n[\n\ttest \"$cf_cv_shlib_version\" = auto && cf_cv_shlib_version=ifelse($1,,rel,$1)\n\tif test \"$cf_cv_shlib_version\" = rel; then\n\t\tcf_cv_shared_soname='`basename $[@] .${REL_VERSION}`.${ABI_VERSION}'\n\telse\n\t\tcf_cv_shared_soname='`basename $[@]`'\n\tfi\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_SIGWINCH version: 1 updated: 2006/04/02 16:41:09\ndnl -----------\ndnl Use this macro after CF_XOPEN_SOURCE, but do not require it (not all\ndnl programs need this test).\ndnl\ndnl This is really a MacOS X 10.4.3 workaround.  Defining _POSIX_C_SOURCE\ndnl forces SIGWINCH to be undefined (breaks xterm, ncurses).  Oddly, the struct\ndnl winsize declaration is left alone - we may revisit this if Apple choose to\ndnl break that part of the interface as well.\nAC_DEFUN([CF_SIGWINCH],\n[\nAC_CACHE_CHECK(if SIGWINCH is defined,cf_cv_define_sigwinch,[\n\tAC_TRY_COMPILE([\n#include <sys/types.h>\n#include <sys/signal.h>\n],[int x = SIGWINCH],\n\t[cf_cv_define_sigwinch=yes],\n\t[AC_TRY_COMPILE([\n#undef _XOPEN_SOURCE\n#undef _POSIX_SOURCE\n#undef _POSIX_C_SOURCE\n#include <sys/types.h>\n#include <sys/signal.h>\n],[int x = SIGWINCH],\n\t[cf_cv_define_sigwinch=maybe],\n\t[cf_cv_define_sigwinch=no])\n])\n])\n\nif test \"$cf_cv_define_sigwinch\" = maybe ; then\nAC_CACHE_CHECK(for actual SIGWINCH definition,cf_cv_fixup_sigwinch,[\ncf_cv_fixup_sigwinch=unknown\ncf_sigwinch=32\nwhile test $cf_sigwinch != 1\ndo\n\tAC_TRY_COMPILE([\n#undef _XOPEN_SOURCE\n#undef _POSIX_SOURCE\n#undef _POSIX_C_SOURCE\n#include <sys/types.h>\n#include <sys/signal.h>\n],[\n#if SIGWINCH != $cf_sigwinch\nmake an error\n#endif\nint x = SIGWINCH],\n\t[cf_cv_fixup_sigwinch=$cf_sigwinch\n\t break])\n\ncf_sigwinch=`expr $cf_sigwinch - 1`\ndone\n])\n\n\tif test \"$cf_cv_fixup_sigwinch\" != unknown ; then\n\t\tCPPFLAGS=\"$CPPFLAGS -DSIGWINCH=$cf_cv_fixup_sigwinch\"\n\tfi\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SIG_ATOMIC_T version: 2 updated: 2005/09/18 17:27:12\ndnl ---------------\ndnl signal handler, but there are some gcc depedencies in that recommendation.\ndnl Try anyway.\nAC_DEFUN([CF_SIG_ATOMIC_T],\n[\nAC_MSG_CHECKING(for signal global datatype)\nAC_CACHE_VAL(cf_cv_sig_atomic_t,[\n\tfor cf_type in \\\n\t\t\"volatile sig_atomic_t\" \\\n\t\t\"sig_atomic_t\" \\\n\t\t\"int\"\n\tdo\n\tAC_TRY_COMPILE([\n#include <sys/types.h>\n#include <signal.h>\n#include <stdio.h>\n\nextern $cf_type x;\n$cf_type x;\nstatic void handler(int sig)\n{\n\tx = 5;\n}],\n\t\t[signal(SIGINT, handler);\n\t\t x = 1],\n\t\t[cf_cv_sig_atomic_t=$cf_type],\n\t\t[cf_cv_sig_atomic_t=no])\n\t\ttest \"$cf_cv_sig_atomic_t\" != no && break\n\tdone\n\t])\nAC_MSG_RESULT($cf_cv_sig_atomic_t)\ntest \"$cf_cv_sig_atomic_t\" != no && AC_DEFINE_UNQUOTED(SIG_ATOMIC_T, $cf_cv_sig_atomic_t)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SIZECHANGE version: 8 updated: 2000/11/04 12:22:16\ndnl -------------\ndnl Check for definitions & structures needed for window size-changing\ndnl FIXME: check that this works with \"snake\" (HP-UX 10.x)\nAC_DEFUN([CF_SIZECHANGE],\n[\nAC_REQUIRE([CF_STRUCT_TERMIOS])\nAC_CACHE_CHECK(declaration of size-change, cf_cv_sizechange,[\n    cf_cv_sizechange=unknown\n    cf_save_CPPFLAGS=\"$CPPFLAGS\"\n\nfor cf_opts in \"\" \"NEED_PTEM_H\"\ndo\n\n    CPPFLAGS=\"$cf_save_CPPFLAGS\"\n    test -n \"$cf_opts\" && CPPFLAGS=\"$CPPFLAGS -D$cf_opts\"\n    AC_TRY_COMPILE([#include <sys/types.h>\n#ifdef HAVE_TERMIOS_H\n#include <termios.h>\n#else\n#ifdef HAVE_TERMIO_H\n#include <termio.h>\n#endif\n#endif\n#ifdef NEED_PTEM_H\n/* This is a workaround for SCO:  they neglected to define struct winsize in\n * termios.h -- it's only in termio.h and ptem.h\n */\n#include        <sys/stream.h>\n#include        <sys/ptem.h>\n#endif\n#if !defined(sun) || !defined(HAVE_TERMIOS_H)\n#include <sys/ioctl.h>\n#endif\n],[\n#ifdef TIOCGSIZE\n\tstruct ttysize win;\t/* FIXME: what system is this? */\n\tint y = win.ts_lines;\n\tint x = win.ts_cols;\n#else\n#ifdef TIOCGWINSZ\n\tstruct winsize win;\n\tint y = win.ws_row;\n\tint x = win.ws_col;\n#else\n\tno TIOCGSIZE or TIOCGWINSZ\n#endif /* TIOCGWINSZ */\n#endif /* TIOCGSIZE */\n\t],\n\t[cf_cv_sizechange=yes],\n\t[cf_cv_sizechange=no])\n\n\tCPPFLAGS=\"$cf_save_CPPFLAGS\"\n\tif test \"$cf_cv_sizechange\" = yes ; then\n\t\techo \"size-change succeeded ($cf_opts)\" >&AC_FD_CC\n\t\ttest -n \"$cf_opts\" && cf_cv_sizechange=\"$cf_opts\"\n\t\tbreak\n\tfi\ndone\n])\nif test \"$cf_cv_sizechange\" != no ; then\n\tAC_DEFINE(HAVE_SIZECHANGE)\n\tcase $cf_cv_sizechange in #(vi\n\tNEED*)\n\t\tAC_DEFINE_UNQUOTED($cf_cv_sizechange )\n\t\t;;\n\tesac\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SRC_MODULES version: 21 updated: 2010/09/04 17:37:40\ndnl --------------\ndnl For each parameter, test if the source-directory exists, and if it contains\ndnl a 'modules' file.  If so, add to the list $cf_cv_src_modules which we'll\ndnl use in CF_LIB_RULES.\ndnl\ndnl This uses the configured value to make the lists SRC_SUBDIRS and\ndnl SUB_MAKEFILES which are used in the makefile-generation scheme.\nAC_DEFUN([CF_SRC_MODULES],\n[\nAC_MSG_CHECKING(for src modules)\n\n# dependencies and linker-arguments for test-programs\nTEST_DEPS=\"${LIB_DIR}/${LIB_PREFIX}${LIB_NAME}${DFT_DEP_SUFFIX} $TEST_DEPS\"\nTEST_DEP2=\"${LIB_2ND}/${LIB_PREFIX}${LIB_NAME}${DFT_DEP_SUFFIX} $TEST_DEP2\"\nif test \"$DFT_LWR_MODEL\" = \"libtool\"; then\n\tTEST_ARGS=\"${TEST_DEPS}\"\n\tTEST_ARG2=\"${TEST_DEP2}\"\nelse\n\tTEST_ARGS=\"-l${LIB_NAME}${DFT_ARG_SUFFIX} $TEST_ARGS\"\n\tTEST_ARG2=\"-l${LIB_NAME}${DFT_ARG_SUFFIX} $TEST_ARG2\"\nfi\n\ncf_cv_src_modules=\nfor cf_dir in $1\ndo\n\tif test -f $srcdir/$cf_dir/modules; then\n\n\t\t# We may/may not have tack in the distribution, though the\n\t\t# makefile is.\n\t\tif test $cf_dir = tack ; then\n\t\t\tif test ! -f $srcdir/${cf_dir}/${cf_dir}.h; then\n\t\t\t\tcontinue\n\t\t\tfi\n\t\tfi\n\n\t\tif test -z \"$cf_cv_src_modules\"; then\n\t\t\tcf_cv_src_modules=$cf_dir\n\t\telse\n\t\t\tcf_cv_src_modules=\"$cf_cv_src_modules $cf_dir\"\n\t\tfi\n\n\t\t# Make the ncurses_cfg.h file record the library interface files as\n\t\t# well.  These are header files that are the same name as their\n\t\t# directory.  Ncurses is the only library that does not follow\n\t\t# that pattern.\n\t\tif test $cf_dir = tack ; then\n\t\t\tcontinue\n\t\telif test -f $srcdir/${cf_dir}/${cf_dir}.h; then\n\t\t\tCF_UPPER(cf_have_include,$cf_dir)\n\t\t\tAC_DEFINE_UNQUOTED(HAVE_${cf_have_include}_H)\n\t\t\tAC_DEFINE_UNQUOTED(HAVE_LIB${cf_have_include})\n\t\t\tTEST_DEPS=\"${LIB_DIR}/${LIB_PREFIX}${cf_dir}${DFT_DEP_SUFFIX} $TEST_DEPS\"\n\t\t\tTEST_DEP2=\"${LIB_2ND}/${LIB_PREFIX}${cf_dir}${DFT_DEP_SUFFIX} $TEST_DEP2\"\n\t\t\tif test \"$DFT_LWR_MODEL\" = \"libtool\"; then\n\t\t\t\tTEST_ARGS=\"${TEST_DEPS}\"\n\t\t\t\tTEST_ARG2=\"${TEST_DEP2}\"\n\t\t\telse\n\t\t\t\tTEST_ARGS=\"-l${cf_dir}${DFT_ARG_SUFFIX} $TEST_ARGS\"\n\t\t\t\tTEST_ARG2=\"-l${cf_dir}${DFT_ARG_SUFFIX} $TEST_ARG2\"\n\t\t\tfi\n\t\tfi\n\tfi\ndone\nAC_MSG_RESULT($cf_cv_src_modules)\n\nTEST_ARGS=\"-L${LIB_DIR} $TEST_ARGS\"\nTEST_ARG2=\"-L${LIB_2ND} $TEST_ARG2\"\n\nAC_SUBST(TEST_ARGS)\nAC_SUBST(TEST_DEPS)\n\nAC_SUBST(TEST_ARG2)\nAC_SUBST(TEST_DEP2)\n\nSRC_SUBDIRS=\nif test \"x$cf_with_manpages\" != xno ; then\n\tSRC_SUBDIRS=\"$SRC_SUBDIRS man\"\nfi\nSRC_SUBDIRS=\"$SRC_SUBDIRS include\"\nfor cf_dir in $cf_cv_src_modules\ndo\n\tSRC_SUBDIRS=\"$SRC_SUBDIRS $cf_dir\"\ndone\nif test \"x$cf_with_tests\" != \"xno\" ; then\n\tSRC_SUBDIRS=\"$SRC_SUBDIRS test\"\nfi\ntest -z \"$MAKE_TERMINFO\" && SRC_SUBDIRS=\"$SRC_SUBDIRS misc\"\ntest \"$cf_with_cxx_binding\" != no && SRC_SUBDIRS=\"$SRC_SUBDIRS c++\"\n\nADA_SUBDIRS=\nif test \"$cf_cv_prog_gnat_correct\" = yes && test -f $srcdir/Ada95/Makefile.in; then\n\tSRC_SUBDIRS=\"$SRC_SUBDIRS Ada95\"\n\tADA_SUBDIRS=\"gen src\"\n\tif test \"x$cf_with_tests\" != \"xno\" ; then\n\t\tADA_SUBDIRS=\"$ADA_SUBDIRS samples\"\n\tfi\nfi\n\nSUB_MAKEFILES=\nfor cf_dir in $SRC_SUBDIRS\ndo\n\tSUB_MAKEFILES=\"$SUB_MAKEFILES $cf_dir/Makefile\"\ndone\n\nif test -n \"$ADA_SUBDIRS\"; then\n\tfor cf_dir in $ADA_SUBDIRS\n\tdo\n\t\tSUB_MAKEFILES=\"$SUB_MAKEFILES Ada95/$cf_dir/Makefile\"\n\tdone\n\tAC_SUBST(ADA_SUBDIRS)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_STDCPP_LIBRARY version: 7 updated: 2010/05/29 16:31:02\ndnl -----------------\ndnl Check for -lstdc++, which is GNU's standard C++ library.\nAC_DEFUN([CF_STDCPP_LIBRARY],\n[\nif test -n \"$GXX\" ; then\ncase $cf_cv_system_name in #(vi\nos2*) #(vi\n\tcf_stdcpp_libname=stdcpp\n\t;;\n*)\n\tcf_stdcpp_libname=stdc++\n\t;;\nesac\nAC_CACHE_CHECK(for library $cf_stdcpp_libname,cf_cv_libstdcpp,[\n\tcf_save=\"$LIBS\"\n\tCF_ADD_LIB($cf_stdcpp_libname)\nAC_TRY_LINK([\n#include <strstream.h>],[\nchar buf[80];\nstrstreambuf foo(buf, sizeof(buf))\n],\n\t[cf_cv_libstdcpp=yes],\n\t[cf_cv_libstdcpp=no])\n\tLIBS=\"$cf_save\"\n])\ntest \"$cf_cv_libstdcpp\" = yes && CF_ADD_LIB($cf_stdcpp_libname,CXXLIBS)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_STRIP_G_OPT version: 3 updated: 2002/12/21 19:25:52\ndnl --------------\ndnl\tRemove \"-g\" option from the compiler options\nAC_DEFUN([CF_STRIP_G_OPT],\n[$1=`echo ${$1} | sed -e 's%-g %%' -e 's%-g$%%'`])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_STRUCT_SIGACTION version: 3 updated: 2000/08/12 23:18:52\ndnl -------------------\ndnl Check if we need _POSIX_SOURCE defined to use struct sigaction.  We'll only\ndnl do this if we've found the sigaction function.\ndnl\ndnl If needed, define SVR4_ACTION.\nAC_DEFUN([CF_STRUCT_SIGACTION],[\nif test \"$ac_cv_func_sigaction\" = yes; then\nAC_MSG_CHECKING(whether sigaction needs _POSIX_SOURCE)\nAC_TRY_COMPILE([\n#include <sys/types.h>\n#include <signal.h>],\n\t[struct sigaction act],\n\t[sigact_bad=no],\n\t[\nAC_TRY_COMPILE([\n#define _POSIX_SOURCE\n#include <sys/types.h>\n#include <signal.h>],\n\t[struct sigaction act],\n\t[sigact_bad=yes\n\t AC_DEFINE(SVR4_ACTION)],\n\t [sigact_bad=unknown])])\nAC_MSG_RESULT($sigact_bad)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_STRUCT_TERMIOS version: 5 updated: 2000/11/04 12:22:46\ndnl -----------------\ndnl Some machines require _POSIX_SOURCE to completely define struct termios.\ndnl If so, define SVR4_TERMIO\nAC_DEFUN([CF_STRUCT_TERMIOS],[\nAC_CHECK_HEADERS( \\\ntermio.h \\\ntermios.h \\\nunistd.h \\\n)\nif test \"$ISC\" = yes ; then\n\tAC_CHECK_HEADERS( sys/termio.h )\nfi\nif test \"$ac_cv_header_termios_h\" = yes ; then\n\tcase \"$CFLAGS $CPPFLAGS\" in\n\t*-D_POSIX_SOURCE*)\n\t\ttermios_bad=dunno ;;\n\t*)\ttermios_bad=maybe ;;\n\tesac\n\tif test \"$termios_bad\" = maybe ; then\n\tAC_MSG_CHECKING(whether termios.h needs _POSIX_SOURCE)\n\tAC_TRY_COMPILE([#include <termios.h>],\n\t\t[struct termios foo; int x = foo.c_iflag],\n\t\ttermios_bad=no, [\n\t\tAC_TRY_COMPILE([\n#define _POSIX_SOURCE\n#include <termios.h>],\n\t\t\t[struct termios foo; int x = foo.c_iflag],\n\t\t\ttermios_bad=unknown,\n\t\t\ttermios_bad=yes AC_DEFINE(SVR4_TERMIO))\n\t\t\t])\n\tAC_MSG_RESULT($termios_bad)\n\tfi\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SUBDIR_PATH version: 6 updated: 2010/04/21 06:20:50\ndnl --------------\ndnl Construct a search-list for a nonstandard header/lib-file\ndnl\t$1 = the variable to return as result\ndnl\t$2 = the package name\ndnl\t$3 = the subdirectory, e.g., bin, include or lib\nAC_DEFUN([CF_SUBDIR_PATH],\n[\n$1=\n\nCF_ADD_SUBDIR_PATH($1,$2,$3,/usr,$prefix)\nCF_ADD_SUBDIR_PATH($1,$2,$3,$prefix,NONE)\nCF_ADD_SUBDIR_PATH($1,$2,$3,/usr/local,$prefix)\nCF_ADD_SUBDIR_PATH($1,$2,$3,/opt,$prefix)\nCF_ADD_SUBDIR_PATH($1,$2,$3,[$]HOME,$prefix)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SUBST version: 4 updated: 2006/06/17 12:33:03\ndnl --------\ndnl\tShorthand macro for substituting things that the user may override\ndnl\twith an environment variable.\ndnl\ndnl\t$1 = long/descriptive name\ndnl\t$2 = environment variable\ndnl\t$3 = default value\nAC_DEFUN([CF_SUBST],\n[AC_CACHE_VAL(cf_cv_subst_$2,[\nAC_MSG_CHECKING(for $1 (symbol $2))\nCF_SUBST_IF([-z \"[$]$2\"], [$2], [$3])\ncf_cv_subst_$2=[$]$2\nAC_MSG_RESULT([$]$2)\n])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SUBST_IF version: 2 updated: 2006/06/17 12:33:03\ndnl -----------\ndnl\tShorthand macro for substituting things that the user may override\ndnl\twith an environment variable.\ndnl\ndnl\t$1 = condition to pass to \"test\"\ndnl\t$2 = environment variable\ndnl\t$3 = value if the test succeeds\ndnl\t$4 = value if the test fails\nAC_DEFUN([CF_SUBST_IF],\n[\nif test $1 ; then\n\t$2=$3\nifelse($4,,,[else\n\t$2=$4])\nfi\nAC_SUBST($2)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SUBST_NCURSES_VERSION version: 8 updated: 2006/09/16 11:40:59\ndnl ------------------------\ndnl Get the version-number for use in shared-library naming, etc.\nAC_DEFUN([CF_SUBST_NCURSES_VERSION],\n[\nAC_REQUIRE([CF_PROG_EGREP])\nNCURSES_MAJOR=\"`$ac_cv_prog_egrep '^NCURSES_MAJOR[[ \t]]*=' $srcdir/dist.mk | sed -e 's/^[[^0-9]]*//'`\"\nNCURSES_MINOR=\"`$ac_cv_prog_egrep '^NCURSES_MINOR[[ \t]]*=' $srcdir/dist.mk | sed -e 's/^[[^0-9]]*//'`\"\nNCURSES_PATCH=\"`$ac_cv_prog_egrep '^NCURSES_PATCH[[ \t]]*=' $srcdir/dist.mk | sed -e 's/^[[^0-9]]*//'`\"\ncf_cv_abi_version=${NCURSES_MAJOR}\ncf_cv_rel_version=${NCURSES_MAJOR}.${NCURSES_MINOR}\ndnl Show the computed version, for logging\ncf_cv_timestamp=`date`\nAC_MSG_RESULT(Configuring NCURSES $cf_cv_rel_version ABI $cf_cv_abi_version ($cf_cv_timestamp))\ndnl We need these values in the generated headers\nAC_SUBST(NCURSES_MAJOR)\nAC_SUBST(NCURSES_MINOR)\nAC_SUBST(NCURSES_PATCH)\ndnl We need these values in the generated makefiles\nAC_SUBST(cf_cv_rel_version)\nAC_SUBST(cf_cv_abi_version)\nAC_SUBST(cf_cv_builtin_bool)\nAC_SUBST(cf_cv_header_stdbool_h)\nAC_SUBST(cf_cv_type_of_bool)dnl\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_SYS_TIME_SELECT version: 4 updated: 2000/10/04 09:18:40\ndnl ------------------\ndnl Check if we can include <sys/time.h> with <sys/select.h>; this breaks on\ndnl older SCO configurations.\nAC_DEFUN([CF_SYS_TIME_SELECT],\n[\nAC_MSG_CHECKING(if sys/time.h works with sys/select.h)\nAC_CACHE_VAL(cf_cv_sys_time_select,[\nAC_TRY_COMPILE([\n#include <sys/types.h>\n#ifdef HAVE_SYS_TIME_H\n#include <sys/time.h>\n#endif\n#ifdef HAVE_SYS_SELECT_H\n#include <sys/select.h>\n#endif\n],[],[cf_cv_sys_time_select=yes],\n     [cf_cv_sys_time_select=no])\n     ])\nAC_MSG_RESULT($cf_cv_sys_time_select)\ntest \"$cf_cv_sys_time_select\" = yes && AC_DEFINE(HAVE_SYS_TIME_SELECT)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_TOP_BUILDDIR version: 1 updated: 2006/10/15 16:33:23\ndnl ---------------\ndnl Define a top_builddir symbol, for applications that need an absolute path.\nAC_DEFUN([CF_TOP_BUILDDIR],\n[\ntop_builddir=`pwd`\nAC_SUBST(top_builddir)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_TYPEOF_CHTYPE version: 8 updated: 2006/12/16 12:33:30\ndnl ----------------\ndnl Determine the type we should use for chtype (and attr_t, which is treated\ndnl as the same thing).  We want around 32 bits, so on most machines want a\ndnl long, but on newer 64-bit machines, probably want an int.  If we're using\ndnl wide characters, we have to have a type compatible with that, as well.\nAC_DEFUN([CF_TYPEOF_CHTYPE],\n[\nAC_MSG_CHECKING([for type of chtype])\nAC_CACHE_VAL(cf_cv_typeof_chtype,[\n\t\tAC_TRY_RUN([\n#define WANT_BITS 31\n#include <stdio.h>\nint main()\n{\n\tFILE *fp = fopen(\"cf_test.out\", \"w\");\n\tif (fp != 0) {\n\t\tchar *result = \"long\";\n\t\tif (sizeof(unsigned long) > sizeof(unsigned int)) {\n\t\t\tint n;\n\t\t\tunsigned int x, y;\n\t\t\tfor (n = 0; n < WANT_BITS; n++) {\n\t\t\t\tx = (1 << n);\n\t\t\t\ty = (x >> n);\n\t\t\t\tif (y != 1 || x == 0) {\n\t\t\t\t\tx = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*\n\t\t\t * If x is nonzero, an int is big enough for the bits\n\t\t\t * that we want.\n\t\t\t */\n\t\t\tresult = (x != 0) ? \"int\" : \"long\";\n\t\t}\n\t\tfputs(result, fp);\n\t\tfclose(fp);\n\t}\n\t${cf_cv_main_return:-return}(0);\n}\n\t\t],\n\t\t[cf_cv_typeof_chtype=`cat cf_test.out`],\n\t\t[cf_cv_typeof_chtype=long],\n\t\t[cf_cv_typeof_chtype=long])\n\t\trm -f cf_test.out\n\t])\nAC_MSG_RESULT($cf_cv_typeof_chtype)\n\nAC_SUBST(cf_cv_typeof_chtype)\nAC_DEFINE_UNQUOTED(TYPEOF_CHTYPE,$cf_cv_typeof_chtype)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_TYPE_SIGACTION version: 3 updated: 2000/08/12 23:18:52\ndnl -----------------\ndnl\nAC_DEFUN([CF_TYPE_SIGACTION],\n[\nAC_MSG_CHECKING([for type sigaction_t])\nAC_CACHE_VAL(cf_cv_type_sigaction,[\n\tAC_TRY_COMPILE([\n#include <signal.h>],\n\t\t[sigaction_t x],\n\t\t[cf_cv_type_sigaction=yes],\n\t\t[cf_cv_type_sigaction=no])])\nAC_MSG_RESULT($cf_cv_type_sigaction)\ntest \"$cf_cv_type_sigaction\" = yes && AC_DEFINE(HAVE_TYPE_SIGACTION)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_UNSIGNED_LITERALS version: 2 updated: 1998/02/07 22:10:16\ndnl --------------------\ndnl Test if the compiler supports 'U' and 'L' suffixes.  Only old compilers\ndnl won't, but they're still there.\nAC_DEFUN([CF_UNSIGNED_LITERALS],\n[\nAC_MSG_CHECKING([if unsigned literals are legal])\nAC_CACHE_VAL(cf_cv_unsigned_literals,[\n\tAC_TRY_COMPILE([],[long x = 1L + 1UL + 1U + 1],\n\t\t[cf_cv_unsigned_literals=yes],\n\t\t[cf_cv_unsigned_literals=no])\n\t])\nAC_MSG_RESULT($cf_cv_unsigned_literals)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_UPPER version: 5 updated: 2001/01/29 23:40:59\ndnl --------\ndnl Make an uppercase version of a variable\ndnl $1=uppercase($2)\nAC_DEFUN([CF_UPPER],\n[\n$1=`echo \"$2\" | sed y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%`\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_UTF8_LIB version: 7 updated: 2010/06/20 09:24:28\ndnl -----------\ndnl Check for multibyte support, and if not found, utf8 compatibility library\nAC_DEFUN([CF_UTF8_LIB],\n[\nAC_CACHE_CHECK(for multibyte character support,cf_cv_utf8_lib,[\n\tcf_save_LIBS=\"$LIBS\"\n\tAC_TRY_LINK([\n#include <stdlib.h>],[putwc(0,0);],\n\t[cf_cv_utf8_lib=yes],\n\t[CF_FIND_LINKAGE([\n#include <libutf8.h>],[putwc(0,0);],utf8,\n\t\t[cf_cv_utf8_lib=add-on],\n\t\t[cf_cv_utf8_lib=no])\n])])\n\n# HAVE_LIBUTF8_H is used by ncurses if curses.h is shared between\n# ncurses/ncursesw:\nif test \"$cf_cv_utf8_lib\" = \"add-on\" ; then\n\tAC_DEFINE(HAVE_LIBUTF8_H)\n\tCF_ADD_INCDIR($cf_cv_header_path_utf8)\n\tCF_ADD_LIBDIR($cf_cv_library_path_utf8)\n\tCF_ADD_LIBS($cf_cv_library_file_utf8)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_VA_COPY version: 2 updated: 2010/03/04 05:37:29\ndnl ----------\ndnl check for va_copy, part of stdarg.h\ndnl Also, workaround for glibc's __va_copy, by checking for both.\nAC_DEFUN([CF_VA_COPY],[\nAC_CACHE_CHECK(for va_copy, cf_cv_have_va_copy,[\nAC_TRY_LINK([\n#include <stdarg.h>\n],[\n\tstatic va_list dst;\n\tstatic va_list src;\n\tva_copy(dst, src)],\n\tcf_cv_have_va_copy=yes,\n\tcf_cv_have_va_copy=no)])\n\ntest \"$cf_cv_have_va_copy\" = yes && AC_DEFINE(HAVE_VA_COPY)\n\nAC_CACHE_CHECK(for __va_copy, cf_cv_have___va_copy,[\nAC_TRY_LINK([\n#include <stdarg.h>\n],[\n\tstatic va_list dst;\n\tstatic va_list src;\n\t__va_copy(dst, src)],\n\tcf_cv_have___va_copy=yes,\n\tcf_cv_have___va_copy=no)])\n\ntest \"$cf_cv_have___va_copy\" = yes && AC_DEFINE(HAVE___VA_COPY)\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_VERBOSE version: 3 updated: 2007/07/29 09:55:12\ndnl ----------\ndnl Use AC_VERBOSE w/o the warnings\nAC_DEFUN([CF_VERBOSE],\n[test -n \"$verbose\" && echo \"\t$1\" 1>&AC_FD_MSG\nCF_MSG_LOG([$1])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WCHAR_TYPE version: 3 updated: 2010/05/26 16:44:57\ndnl -------------\ndnl Check if type wide-character type $1 is declared, and if so, which header\ndnl file is needed.  The second parameter is used to set a shell variable when\ndnl the type is not found.  The first parameter sets a shell variable for the\ndnl opposite sense.\nAC_DEFUN([CF_WCHAR_TYPE],\n[\n# This is needed on Tru64 5.0 to declare $1\nAC_CACHE_CHECK(if we must include wchar.h to declare $1,cf_cv_$1,[\nAC_TRY_COMPILE([\n#include <stdlib.h>\n#include <stdarg.h>\n#include <stdio.h>\n#ifdef HAVE_LIBUTF8_H\n#include <libutf8.h>\n#endif],\n\t[$1 state],\n\t[cf_cv_$1=no],\n\t[AC_TRY_COMPILE([\n#include <stdlib.h>\n#include <stdarg.h>\n#include <stdio.h>\n#include <wchar.h>\n#ifdef HAVE_LIBUTF8_H\n#include <libutf8.h>\n#endif],\n\t[$1 value],\n\t[cf_cv_$1=yes],\n\t[cf_cv_$1=unknown])])])\n\nif test \"$cf_cv_$1\" = yes ; then\n\tAC_DEFINE(NEED_WCHAR_H)\n\tNEED_WCHAR_H=1\nfi\n\nifelse([$2],,,[\n# if we do not find $1 in either place, use substitution to provide a fallback.\nif test \"$cf_cv_$1\" = unknown ; then\n\t$2=1\nfi\n])\nifelse($3,,,[\n# if we find $1 in either place, use substitution to provide a fallback.\nif test \"$cf_cv_$1\" != unknown ; then\n\t$3=1\nfi\n])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WEAK_SYMBOLS version: 1 updated: 2008/08/16 19:18:06\ndnl ---------------\ndnl Check for compiler-support for weak symbols.\ndnl This works with \"recent\" gcc.\nAC_DEFUN([CF_WEAK_SYMBOLS],[\nAC_CACHE_CHECK(if $CC supports weak symbols,cf_cv_weak_symbols,[\n\nAC_TRY_COMPILE([\n#include <stdio.h>],\n[\n#if defined(__GNUC__)\n#  if defined __USE_ISOC99\n#    define _cat_pragma(exp)\t_Pragma(#exp)\n#    define _weak_pragma(exp)\t_cat_pragma(weak name)\n#  else\n#    define _weak_pragma(exp)\n#  endif\n#  define _declare(name)\t__extension__ extern __typeof__(name) name\n#  define weak_symbol(name)\t_weak_pragma(name) _declare(name) __attribute__((weak))\n#endif\n\nweak_symbol(fopen);\n],[cf_cv_weak_symbols=yes],[cf_cv_weak_symbols=no])\n])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_ABI_VERSION version: 1 updated: 2003/09/20 18:12:49\ndnl -------------------\ndnl Allow library's ABI to be overridden.  Generally this happens when a\ndnl packager has incremented the ABI past that used in the original package,\ndnl and wishes to keep doing this.\ndnl\ndnl $1 is the package name, if any, to derive a corresponding {package}_ABI\ndnl symbol.\nAC_DEFUN([CF_WITH_ABI_VERSION],[\ntest -z \"$cf_cv_abi_version\" && cf_cv_abi_version=0\nAC_ARG_WITH(abi-version,\n[  --with-abi-version=XXX  override derived ABI version],\n[AC_MSG_WARN(overriding ABI version $cf_cv_abi_version to $withval)\n cf_cv_abi_version=$withval])\n CF_NUMBER_SYNTAX($cf_cv_abi_version,ABI version)\nifelse($1,,,[\n$1_ABI=$cf_cv_abi_version\n])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_ADA_COMPILER version: 2 updated: 2010/06/26 17:35:58\ndnl --------------------\ndnl Command-line option to specify the Ada95 compiler.\nAC_DEFUN([CF_WITH_ADA_COMPILER],[\nAC_MSG_CHECKING(for ada-compiler)\nAC_ARG_WITH(ada-compiler,\n\t[  --with-ada-compiler=CMD specify Ada95 compiler command (default gnatmake)],\n\t[cf_ada_compiler=$withval],\n\t[cf_ada_compiler=gnatmake])\nAC_SUBST(cf_ada_compiler)\nAC_MSG_RESULT($cf_ada_compiler)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_ADA_INCLUDE version: 2 updated: 2010/06/26 17:35:58\ndnl -------------------\ndnl Command-line option to specify where Ada includes will install.\nAC_DEFUN([CF_WITH_ADA_INCLUDE],[\nAC_MSG_CHECKING(for ada-include)\nCF_WITH_PATH(ada-include,\n   [  --with-ada-include=DIR  Ada includes are in DIR],\n   ADA_INCLUDE,\n   PREFIX/share/ada/adainclude,\n   [$]prefix/share/ada/adainclude)\nAC_SUBST(ADA_INCLUDE)\nAC_MSG_RESULT($ADA_INCLUDE)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_ADA_OBJECTS version: 2 updated: 2010/06/26 17:35:58\ndnl -------------------\ndnl Command-line option to specify where Ada objects will install.\nAC_DEFUN([CF_WITH_ADA_OBJECTS],[\nAC_MSG_CHECKING(for ada-objects)\nCF_WITH_PATH(ada-objects,\n   [  --with-ada-objects=DIR  Ada objects are in DIR],\n   ADA_OBJECTS,\n   PREFIX/lib/ada/adalib,\n   [$]prefix/lib/ada/adalib)\nAC_SUBST(ADA_OBJECTS)\nAC_MSG_RESULT($ADA_OBJECTS)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_ADA_SHAREDLIB version: 2 updated: 2010/06/26 17:35:58\ndnl ---------------------\ndnl Command-line option to specify if an Ada95 shared-library should be built,\ndnl and optionally what its soname should be.\nAC_DEFUN([CF_WITH_ADA_SHAREDLIB],[\nAC_MSG_CHECKING(if an Ada95 shared-library should be built)\nAC_ARG_WITH(ada-sharedlib,\n\t[  --with-ada-sharedlib=XX build Ada95 shared-library],\n\t[with_ada_sharedlib=$withval],\n\t[with_ada_sharedlib=no])\nAC_MSG_RESULT($with_ada_sharedlib)\n\nADA_SHAREDLIB='lib$(LIB_NAME).so.1'\nMAKE_ADA_SHAREDLIB=\"#\"\n\nif test \"x$with_ada_sharedlib\" != xno\nthen\n\tMAKE_ADA_SHAREDLIB=\n\tif test \"x$with_ada_sharedlib\" != xyes\n\tthen\n\t\tADA_SHAREDLIB=\"$with_ada_sharedlib\"\n\tfi\nfi\n\nAC_SUBST(ADA_SHAREDLIB)\nAC_SUBST(MAKE_ADA_SHAREDLIB)\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_DBMALLOC version: 7 updated: 2010/06/21 17:26:47\ndnl ----------------\ndnl Configure-option for dbmalloc.  The optional parameter is used to override\ndnl the updating of $LIBS, e.g., to avoid conflict with subsequent tests.\nAC_DEFUN([CF_WITH_DBMALLOC],[\nCF_NO_LEAKS_OPTION(dbmalloc,\n\t[  --with-dbmalloc         test: use Conor Cahill's dbmalloc library],\n\t[USE_DBMALLOC])\n\nif test \"$with_dbmalloc\" = yes ; then\n\tAC_CHECK_HEADER(dbmalloc.h,\n\t\t[AC_CHECK_LIB(dbmalloc,[debug_malloc]ifelse([$1],,[],[,$1]))])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_DMALLOC version: 7 updated: 2010/06/21 17:26:47\ndnl ---------------\ndnl Configure-option for dmalloc.  The optional parameter is used to override\ndnl the updating of $LIBS, e.g., to avoid conflict with subsequent tests.\nAC_DEFUN([CF_WITH_DMALLOC],[\nCF_NO_LEAKS_OPTION(dmalloc,\n\t[  --with-dmalloc          test: use Gray Watson's dmalloc library],\n\t[USE_DMALLOC])\n\nif test \"$with_dmalloc\" = yes ; then\n\tAC_CHECK_HEADER(dmalloc.h,\n\t\t[AC_CHECK_LIB(dmalloc,[dmalloc_debug]ifelse([$1],,[],[,$1]))])\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_GPM version: 7 updated: 2008/03/23 14:48:54\ndnl -----------\ndnl\ndnl The option parameter (if neither yes/no) is assumed to be the name of\ndnl the gpm library, e.g., for dynamic loading.\nAC_DEFUN([CF_WITH_GPM],\n[\nAC_MSG_CHECKING(if you want to link with the GPM mouse library)\nAC_ARG_WITH(gpm,\n\t[  --with-gpm              use Alessandro Rubini's GPM library],\n\t[with_gpm=$withval],\n\t[with_gpm=maybe])\nAC_MSG_RESULT($with_gpm)\n\nif test \"$with_gpm\" != no ; then\n\tAC_CHECK_HEADER(gpm.h,[\n\t\tAC_DEFINE(HAVE_GPM_H)\n\t\tif test \"$with_gpm\" != yes && test \"$with_gpm\" != maybe ; then\n\t\t\tCF_VERBOSE(assuming we really have GPM library)\n\t\t\tAC_DEFINE(HAVE_LIBGPM)\n\t\telse\n\t\t\tAC_CHECK_LIB(gpm,Gpm_Open,[:],[\n\t\t\t\tAC_MSG_ERROR(Cannot link with GPM library)\n\t\tfi\n\t\twith_gpm=yes\n\t\t])\n\t],[\n\t\ttest \"$with_gpm\" != maybe && AC_MSG_WARN(Cannot find GPM header)\n\t\twith_gpm=no\n\t])\nfi\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_LIBTOOL version: 26 updated: 2010/10/23 15:55:24\ndnl ---------------\ndnl Provide a configure option to incorporate libtool.  Define several useful\ndnl symbols for the makefile rules.\ndnl\ndnl The reference to AC_PROG_LIBTOOL does not normally work, since it uses\ndnl macros from libtool.m4 which is in the aclocal directory of automake.\ndnl Following is a simple script which turns on the AC_PROG_LIBTOOL macro.\ndnl But that still does not work properly since the macro is expanded outside\ndnl the CF_WITH_LIBTOOL macro:\ndnl\ndnl\t#!/bin/sh\ndnl\tACLOCAL=`aclocal --print-ac-dir`\ndnl\tif test -z \"$ACLOCAL\" ; then\ndnl\t\techo cannot find aclocal directory\ndnl\t\texit 1\ndnl\telif test ! -f $ACLOCAL/libtool.m4 ; then\ndnl\t\techo cannot find libtool.m4 file\ndnl\t\texit 1\ndnl\tfi\ndnl\ndnl\tLOCAL=aclocal.m4\ndnl\tORIG=aclocal.m4.orig\ndnl\ndnl\ttrap \"mv $ORIG $LOCAL\" 0 1 2 5 15\ndnl\trm -f $ORIG\ndnl\tmv $LOCAL $ORIG\ndnl\ndnl\t# sed the LIBTOOL= assignment to omit the current directory?\ndnl\tsed -e 's/^LIBTOOL=.*/LIBTOOL=${LIBTOOL:-libtool}/' $ACLOCAL/libtool.m4 >>$LOCAL\ndnl\tcat $ORIG >>$LOCAL\ndnl\ndnl\tautoconf-257 $*\ndnl\nAC_DEFUN([CF_WITH_LIBTOOL],\n[\nAC_REQUIRE([CF_DISABLE_LIBTOOL_VERSION])\nifdef([AC_PROG_LIBTOOL],,[\nLIBTOOL=\n])\n# common library maintenance symbols that are convenient for libtool scripts:\nLIB_CREATE='${AR} -cr'\nLIB_OBJECT='${OBJECTS}'\nLIB_SUFFIX=.a\nLIB_PREP=\"$RANLIB\"\n\n# symbols used to prop libtool up to enable it to determine what it should be\n# doing:\nLIB_CLEAN=\nLIB_COMPILE=\nLIB_LINK='${CC}'\nLIB_INSTALL=\nLIB_UNINSTALL=\n\nAC_MSG_CHECKING(if you want to build libraries with libtool)\nAC_ARG_WITH(libtool,\n\t[  --with-libtool          generate libraries with libtool],\n\t[with_libtool=$withval],\n\t[with_libtool=no])\nAC_MSG_RESULT($with_libtool)\nif test \"$with_libtool\" != \"no\"; then\nifdef([AC_PROG_LIBTOOL],[\n\t# missing_content_AC_PROG_LIBTOOL{{\n\tAC_PROG_LIBTOOL\n\t# missing_content_AC_PROG_LIBTOOL}}\n],[\n\tif test \"$with_libtool\" != \"yes\" ; then\n\t\tCF_PATH_SYNTAX(with_libtool)\n\t\tLIBTOOL=$with_libtool\n\telse\n\t\tAC_PATH_PROG(LIBTOOL,libtool)\n\tfi\n\tif test -z \"$LIBTOOL\" ; then\n\t\tAC_MSG_ERROR(Cannot find libtool)\n\tfi\n])dnl\n\tLIB_CREATE='${LIBTOOL} --mode=link ${CC} -rpath ${DESTDIR}${libdir} ${LIBTOOL_VERSION} `cut -f1 ${srcdir}/VERSION` ${LIBTOOL_OPTS} ${LT_UNDEF} -o'\n\tLIB_OBJECT='${OBJECTS:.o=.lo}'\n\tLIB_SUFFIX=.la\n\tLIB_CLEAN='${LIBTOOL} --mode=clean'\n\tLIB_COMPILE='${LIBTOOL} --mode=compile'\n\tLIB_LINK='${LIBTOOL} --mode=link ${CC} ${LIBTOOL_OPTS}'\n\tLIB_INSTALL='${LIBTOOL} --mode=install'\n\tLIB_UNINSTALL='${LIBTOOL} --mode=uninstall'\n\tLIB_PREP=:\n\n\t# Show the version of libtool\n\tAC_MSG_CHECKING(version of libtool)\n\n\t# Save the version in a cache variable - this is not entirely a good\n\t# thing, but the version string from libtool is very ugly, and for\n\t# bug reports it might be useful to have the original string. \"(\"\n\tcf_cv_libtool_version=`$LIBTOOL --version 2>&1 | sed -e '/^$/d' |sed -e '2,$d' -e 's/([[^)]]*)//g' -e 's/^[[^1-9]]*//' -e 's/[[^0-9.]].*//'`\n\tAC_MSG_RESULT($cf_cv_libtool_version)\n\tif test -z \"$cf_cv_libtool_version\" ; then\n\t\tAC_MSG_ERROR(This is not GNU libtool)\n\tfi\n\n\t# special hack to add -no-undefined (which libtool should do for itself)\n\tLT_UNDEF=\n\tcase \"$cf_cv_system_name\" in #(vi\n\tcygwin*|mingw32*|uwin*|aix[[456]]) #(vi\n\t\tLT_UNDEF=-no-undefined\n\t\t;;\n\tesac\n\tAC_SUBST([LT_UNDEF])\n\n\t# special hack to add --tag option for C++ compiler\n\tcase $cf_cv_libtool_version in #(vi\n\t1.[[5-9]]*|[[2-9]].[[0-9.a-z]]*) #(vi\n\t\tLIBTOOL_CXX=\"$LIBTOOL --tag=CXX\"\n\t\tLIBTOOL=\"$LIBTOOL --tag=CC\"\n\t\t;;\n\t*)\n\t\tLIBTOOL_CXX=\"$LIBTOOL\"\n\t\t;;\n\tesac\nelse\n\tLIBTOOL=\"\"\n\tLIBTOOL_CXX=\"\"\nfi\n\ntest -z \"$LIBTOOL\" && ECHO_LT=\n\nAC_SUBST(LIBTOOL)\nAC_SUBST(LIBTOOL_CXX)\nAC_SUBST(LIBTOOL_OPTS)\n\nAC_SUBST(LIB_CREATE)\nAC_SUBST(LIB_OBJECT)\nAC_SUBST(LIB_SUFFIX)\nAC_SUBST(LIB_PREP)\n\nAC_SUBST(LIB_CLEAN)\nAC_SUBST(LIB_COMPILE)\nAC_SUBST(LIB_LINK)\nAC_SUBST(LIB_INSTALL)\nAC_SUBST(LIB_UNINSTALL)\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_PATH version: 10 updated: 2010/10/23 15:44:18\ndnl ------------\ndnl Wrapper for AC_ARG_WITH to ensure that user supplies a pathname, not just\ndnl defaulting to yes/no.\ndnl\ndnl $1 = option name\ndnl $2 = help-text\ndnl $3 = environment variable to set\ndnl $4 = default value, shown in the help-message, must be a constant\ndnl $5 = default value, if it's an expression & cannot be in the help-message\ndnl\nAC_DEFUN([CF_WITH_PATH],\n[AC_ARG_WITH($1,[$2 ](default: ifelse([$4],,empty,[$4])),,\nifelse([$4],,[withval=\"${$3}\"],[withval=\"${$3:-ifelse([$5],,[$4],[$5])}\"]))dnl\nif ifelse([$5],,true,[test -n \"$5\"]) ; then\nCF_PATH_SYNTAX(withval)\nfi\n$3=\"$withval\"\nAC_SUBST($3)dnl\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_PATHLIST version: 7 updated: 2010/10/23 16:10:30\ndnl ----------------\ndnl Process an option specifying a list of colon-separated paths.\ndnl\ndnl $1 = option name\ndnl $2 = help-text\ndnl $3 = environment variable to set\ndnl $4 = default value, shown in the help-message, must be a constant\ndnl $5 = default value, if it's an expression & cannot be in the help-message\ndnl $6 = flag to tell if we want to define or substitute\ndnl\nAC_DEFUN([CF_WITH_PATHLIST],[\nAC_REQUIRE([CF_PATHSEP])\nAC_ARG_WITH($1,[$2 ](default: ifelse($4,,empty,$4)),,\nifelse($4,,[withval=${$3}],[withval=${$3:-ifelse($5,,$4,$5)}]))dnl\n\nIFS=\"${IFS:- \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${PATH_SEPARATOR}\"\ncf_dst_path=\nfor cf_src_path in $withval\ndo\n  CF_PATH_SYNTAX(cf_src_path)\n  test -n \"$cf_dst_path\" && cf_dst_path=\"${cf_dst_path}:\"\n  cf_dst_path=\"${cf_dst_path}${cf_src_path}\"\ndone\nIFS=\"$ac_save_ifs\"\n\nifelse($6,define,[\n# Strip single quotes from the value, e.g., when it was supplied as a literal\n# for $4 or $5.\ncase $cf_dst_path in #(vi\n\\'*)\n  cf_dst_path=`echo $cf_dst_path |sed -e s/\\'// -e s/\\'\\$//`\n  ;;\nesac\ncf_dst_path=`echo \"$cf_dst_path\" | sed -e 's/\\\\\\\\/\\\\\\\\\\\\\\\\/g'`\n])\n\neval '$3=\"$cf_dst_path\"'\nAC_SUBST($3)dnl\n\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_PTHREAD version: 3 updated: 2010/05/29 16:31:02\ndnl ---------------\ndnl Check for POSIX thread library.\nAC_DEFUN([CF_WITH_PTHREAD],\n[\nAC_MSG_CHECKING(if you want to link with the pthread library)\nAC_ARG_WITH(pthread,\n    [  --with-pthread          use POSIX thread library],\n    [with_pthread=$withval],\n    [with_pthread=no])\nAC_MSG_RESULT($with_pthread)\n\nif test \"$with_pthread\" != no ; then\n    AC_CHECK_HEADER(pthread.h,[\n        AC_DEFINE(HAVE_PTHREADS_H)\n\n        AC_MSG_CHECKING(if we can link with the pthread library)\n        cf_save_LIBS=\"$LIBS\"\n        CF_ADD_LIB(pthread)\n        AC_TRY_LINK([\n#include <pthread.h>\n],[\n        int rc = pthread_create(0,0,0,0);\n],[with_pthread=yes],[with_pthread=no])\n        LIBS=\"$cf_save_LIBS\"\n        AC_MSG_RESULT($with_pthread)\n\n        if test \"$with_pthread\" = yes ; then\n            CF_ADD_LIB(pthread)\n            AC_DEFINE(HAVE_LIBPTHREADS)\n        else\n            AC_MSG_ERROR(Cannot link with pthread library)\n        fi\n    ])\nfi\n])\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_REL_VERSION version: 1 updated: 2003/09/20 18:12:49\ndnl -------------------\ndnl Allow library's release-version to be overridden.  Generally this happens when a\ndnl packager has incremented the release-version past that used in the original package,\ndnl and wishes to keep doing this.\ndnl\ndnl $1 is the package name, if any, to derive corresponding {package}_MAJOR\ndnl and {package}_MINOR symbols\ndnl symbol.\nAC_DEFUN([CF_WITH_REL_VERSION],[\ntest -z \"$cf_cv_rel_version\" && cf_cv_rel_version=0.0\nAC_ARG_WITH(rel-version,\n[  --with-rel-version=XXX  override derived release version],\n[AC_MSG_WARN(overriding release version $cf_cv_rel_version to $withval)\n cf_cv_rel_version=$withval])\nifelse($1,,[\n CF_NUMBER_SYNTAX($cf_cv_rel_version,Release version)\n],[\n $1_MAJOR=`echo \"$cf_cv_rel_version\" | sed -e 's/\\..*//'`\n $1_MINOR=`echo \"$cf_cv_rel_version\" | sed -e 's/^[[^.]]*//' -e 's/^\\.//' -e 's/\\..*//'`\n CF_NUMBER_SYNTAX([$]$1_MAJOR,Release major-version)\n CF_NUMBER_SYNTAX([$]$1_MINOR,Release minor-version)\n])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_SYSMOUSE version: 2 updated: 2003/03/22 19:13:43\ndnl ----------------\ndnl If we can compile with sysmouse, make it available unless it is not wanted.\nAC_DEFUN([CF_WITH_SYSMOUSE],[\n# not everyone has \"test -c\"\nif test -c /dev/sysmouse 2>/dev/null ; then\nAC_MSG_CHECKING(if you want to use sysmouse)\nAC_ARG_WITH(sysmouse,\n\t[  --with-sysmouse         use sysmouse (FreeBSD console)],\n\t[cf_with_sysmouse=$withval],\n\t[cf_with_sysmouse=maybe])\n\tif test \"$cf_with_sysmouse\" != no ; then\n\tAC_TRY_COMPILE([\n#include <osreldate.h>\n#if (__FreeBSD_version >= 400017)\n#include <sys/consio.h>\n#include <sys/fbio.h>\n#else\n#include <machine/console.h>\n#endif\n],[\n\tstruct mouse_info the_mouse;\n\tioctl(0, CONS_MOUSECTL, &the_mouse);\n],[cf_with_sysmouse=yes],[cf_with_sysmouse=no])\n\tfi\nAC_MSG_RESULT($cf_with_sysmouse)\ntest \"$cf_with_sysmouse\" = yes && AC_DEFINE(USE_SYSMOUSE)\nfi\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_WITH_VALGRIND version: 1 updated: 2006/12/14 18:00:21\ndnl ----------------\nAC_DEFUN([CF_WITH_VALGRIND],[\nCF_NO_LEAKS_OPTION(valgrind,\n\t[  --with-valgrind         test: use valgrind],\n\t[USE_VALGRIND])\n])dnl\ndnl ---------------------------------------------------------------------------\ndnl CF_XOPEN_SOURCE version: 35 updated: 2011/02/20 20:37:37\ndnl ---------------\ndnl Try to get _XOPEN_SOURCE defined properly that we can use POSIX functions,\ndnl or adapt to the vendor's definitions to get equivalent functionality,\ndnl without losing the common non-POSIX features.\ndnl\ndnl Parameters:\ndnl\t$1 is the nominal value for _XOPEN_SOURCE\ndnl\t$2 is the nominal value for _POSIX_C_SOURCE\nAC_DEFUN([CF_XOPEN_SOURCE],[\n\ncf_XOPEN_SOURCE=ifelse([$1],,500,[$1])\ncf_POSIX_C_SOURCE=ifelse([$2],,199506L,[$2])\ncf_xopen_source=\n\ncase $host_os in #(vi\naix[[456]]*) #(vi\n\tcf_xopen_source=\"-D_ALL_SOURCE\"\n\t;;\ncygwin) #(vi\n\tcf_XOPEN_SOURCE=600\n\t;;\ndarwin[[0-8]].*) #(vi\n\tcf_xopen_source=\"-D_APPLE_C_SOURCE\"\n\t;;\ndarwin*) #(vi\n\tcf_xopen_source=\"-D_DARWIN_C_SOURCE\"\n\t;;\nfreebsd*|dragonfly*) #(vi\n\t# 5.x headers associate\n\t#\t_XOPEN_SOURCE=600 with _POSIX_C_SOURCE=200112L\n\t#\t_XOPEN_SOURCE=500 with _POSIX_C_SOURCE=199506L\n\tcf_POSIX_C_SOURCE=200112L\n\tcf_XOPEN_SOURCE=600\n\tcf_xopen_source=\"-D_BSD_TYPES -D__BSD_VISIBLE -D_POSIX_C_SOURCE=$cf_POSIX_C_SOURCE -D_XOPEN_SOURCE=$cf_XOPEN_SOURCE\"\n\t;;\nhpux11*) #(vi\n\tcf_xopen_source=\"-D_HPUX_SOURCE -D_XOPEN_SOURCE=500\"\n\t;;\nhpux*) #(vi\n\tcf_xopen_source=\"-D_HPUX_SOURCE\"\n\t;;\nirix[[56]].*) #(vi\n\tcf_xopen_source=\"-D_SGI_SOURCE\"\n\t;;\nlinux*|gnu*|mint*|k*bsd*-gnu) #(vi\n\tCF_GNU_SOURCE\n\t;;\nmirbsd*) #(vi\n\t# setting _XOPEN_SOURCE or _POSIX_SOURCE breaks <arpa/inet.h>\n\t;;\nnetbsd*) #(vi\n\t# setting _XOPEN_SOURCE breaks IPv6 for lynx on NetBSD 1.6, breaks xterm, is not needed for ncursesw\n\t;;\nopenbsd*) #(vi\n\t# setting _XOPEN_SOURCE breaks xterm on OpenBSD 2.8, is not needed for ncursesw\n\t;;\nosf[[45]]*) #(vi\n\tcf_xopen_source=\"-D_OSF_SOURCE\"\n\t;;\nnto-qnx*) #(vi\n\tcf_xopen_source=\"-D_QNX_SOURCE\"\n\t;;\nsco*) #(vi\n\t# setting _XOPEN_SOURCE breaks Lynx on SCO Unix / OpenServer\n\t;;\nsolaris2.1[[0-9]]) #(vi\n\tcf_xopen_source=\"-D__EXTENSIONS__ -D_XOPEN_SOURCE=$cf_XOPEN_SOURCE\"\n\t;;\nsolaris2.[[1-9]]) #(vi\n\tcf_xopen_source=\"-D__EXTENSIONS__\"\n\t;;\n*)\n\tAC_CACHE_CHECK(if we should define _XOPEN_SOURCE,cf_cv_xopen_source,[\n\tAC_TRY_COMPILE([#include <sys/types.h>],[\n#ifndef _XOPEN_SOURCE\nmake an error\n#endif],\n\t[cf_cv_xopen_source=no],\n\t[cf_save=\"$CPPFLAGS\"\n\t CPPFLAGS=\"$CPPFLAGS -D_XOPEN_SOURCE=$cf_XOPEN_SOURCE\"\n\t AC_TRY_COMPILE([#include <sys/types.h>],[\n#ifdef _XOPEN_SOURCE\nmake an error\n#endif],\n\t[cf_cv_xopen_source=no],\n\t[cf_cv_xopen_source=$cf_XOPEN_SOURCE])\n\tCPPFLAGS=\"$cf_save\"\n\t])\n])\n\tif test \"$cf_cv_xopen_source\" != no ; then\n\t\tCF_REMOVE_DEFINE(CFLAGS,$CFLAGS,_XOPEN_SOURCE)\n\t\tCF_REMOVE_DEFINE(CPPFLAGS,$CPPFLAGS,_XOPEN_SOURCE)\n\t\tcf_temp_xopen_source=\"-D_XOPEN_SOURCE=$cf_cv_xopen_source\"\n\t\tCF_ADD_CFLAGS($cf_temp_xopen_source)\n\tfi\n\tCF_POSIX_C_SOURCE($cf_POSIX_C_SOURCE)\n\t;;\nesac\n\nif test -n \"$cf_xopen_source\" ; then\n\tCF_ADD_CFLAGS($cf_xopen_source)\nfi\n])\n",
        "/tmp/vanessa/spack-stage/spack-stage-ncurses-5.9-m7x2c5wpyxggrkhyvx74zvincghhkhvg/spack-src/ncurses/curses.priv.h": "/****************************************************************************\n * Copyright (c) 1998-2010,2011 Free Software Foundation, Inc.              *\n *                                                                          *\n * Permission is hereby granted, free of charge, to any person obtaining a  *\n * copy of this software and associated documentation files (the            *\n * \"Software\"), to deal in the Software without restriction, including      *\n * without limitation the rights to use, copy, modify, merge, publish,      *\n * distribute, distribute with modifications, sublicense, and/or sell       *\n * copies of the Software, and to permit persons to whom the Software is    *\n * furnished to do so, subject to the following conditions:                 *\n *                                                                          *\n * The above copyright notice and this permission notice shall be included  *\n * in all copies or substantial portions of the Software.                   *\n *                                                                          *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *\n * IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *\n * THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *\n *                                                                          *\n * Except as contained in this notice, the name(s) of the above copyright   *\n * holders shall not be used in advertising or otherwise to promote the     *\n * sale, use or other dealings in this Software without prior written       *\n * authorization.                                                           *\n ****************************************************************************/\n\n/****************************************************************************\n *  Author: Zeyd M. Ben-Halim <zmbenhal@netcom.com> 1992,1995               *\n *     and: Eric S. Raymond <esr@snark.thyrsus.com>                         *\n *     and: Thomas E. Dickey                        1996-on                 *\n *     and: Juergen Pfeifer                                                 *\n ****************************************************************************/\n\n/*\n * $Id: curses.priv.h,v 1.475 2011/01/22 21:10:19 tom Exp $\n *\n *\tcurses.priv.h\n *\n *\tHeader file for curses library objects which are private to\n *\tthe library.\n *\n */\n\n#ifndef CURSES_PRIV_H\n#define CURSES_PRIV_H 1\n/* *INDENT-OFF* */\n\n#include <ncurses_dll.h>\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n#include <ncurses_cfg.h>\n\n#if USE_RCS_IDS\n#define MODULE_ID(id) static const char Ident[] = id;\n#else\n#define MODULE_ID(id) /*nothing*/\n#endif\n\n#include <stddef.h>\t\t/* for offsetof */\n#include <stdlib.h>\n#include <string.h>\n#include <sys/types.h>\n\n#if HAVE_UNISTD_H\n#include <unistd.h>\n#endif\n\n#if HAVE_SYS_BSDTYPES_H\n#include <sys/bsdtypes.h>\t/* needed for ISC */\n#endif\n\n#if HAVE_LIMITS_H\n# include <limits.h>\n#elif HAVE_SYS_PARAM_H\n# include <sys/param.h>\n#endif\n\n#include <assert.h>\n#include <stdio.h>\n\n#include <errno.h>\n\n#ifndef PATH_MAX\n# if defined(_POSIX_PATH_MAX)\n#  define PATH_MAX _POSIX_PATH_MAX\n# elif defined(MAXPATHLEN)\n#  define PATH_MAX MAXPATHLEN\n# else\n#  define PATH_MAX 255\t/* the Posix minimum path-size */\n# endif\n#endif\n\n#if DECL_ERRNO\nextern int errno;\n#endif\n\n/* Some systems have a broken 'select()', but workable 'poll()'.  Use that */\n#if HAVE_WORKING_POLL\n#define USE_FUNC_POLL 1\n#if HAVE_POLL_H\n#include <poll.h>\n#else\n#include <sys/poll.h>\n#endif\n#else\n#define USE_FUNC_POLL 0\n#endif\n\n/* include signal.h before curses.h to work-around defect in glibc 2.1.3 */\n#include <signal.h>\n\n/* Alessandro Rubini's GPM (general-purpose mouse) */\n#if HAVE_LIBGPM && HAVE_GPM_H\n#define USE_GPM_SUPPORT 1\n#else\n#define USE_GPM_SUPPORT 0\n#endif\n\n/* QNX mouse support */\n#if defined(__QNX__) && !defined(__QNXNTO__)\n#define USE_QNX_MOUSE 1\n#else\n#define USE_QNX_MOUSE 0\n#endif\n\n/* EMX mouse support */\n#ifdef __EMX__\n#define USE_EMX_MOUSE 1\n#else\n#define USE_EMX_MOUSE 0\n#endif\n\n#define DEFAULT_MAXCLICK 166\n#define EV_MAX\t\t8\t/* size of mouse circular event queue */\n\n/*\n * If we don't have signals to support it, don't add a sigwinch handler.\n * In any case, resizing is an extended feature.  Use it if we've got it.\n */\n#if !NCURSES_EXT_FUNCS\n#undef HAVE_SIZECHANGE\n#define HAVE_SIZECHANGE 0\n#endif\n\n#if HAVE_SIZECHANGE && USE_SIGWINCH && defined(SIGWINCH)\n#define USE_SIZECHANGE 1\n#else\n#define USE_SIZECHANGE 0\n#undef USE_SIGWINCH\n#define USE_SIGWINCH 0\n#endif\n\n/*\n * If desired, one can configure this, disabling environment variables that\n * point to custom terminfo/termcap locations.\n */\n#ifdef USE_ROOT_ENVIRON\n#define use_terminfo_vars() 1\n#else\n#define use_terminfo_vars() _nc_env_access()\nextern NCURSES_EXPORT(int) _nc_env_access (void);\n#endif\n\n/*\n * Not all platforms have memmove; some have an equivalent bcopy.  (Some may\n * have neither).\n */\n#if USE_OK_BCOPY\n#define memmove(d,s,n) bcopy(s,d,n)\n#elif USE_MY_MEMMOVE\n#define memmove(d,s,n) _nc_memmove(d,s,n)\nextern NCURSES_EXPORT(void *) _nc_memmove (void *, const void *, size_t);\n#endif\n\n/*\n * If we have va_copy(), use it for assigning va_list's.\n */\n#if defined(HAVE___VA_COPY)\n#define begin_va_copy(dst,src)\t__va_copy(dst, src)\n#define end_va_copy(dst)\tva_end(dst)\n#elif defined(va_copy) || defined(HAVE_VA_COPY)\n#define begin_va_copy(dst,src)\tva_copy(dst, src)\n#define end_va_copy(dst)\tva_end(dst)\n#else\n#define begin_va_copy(dst,src) (dst) = (src)\n#define end_va_copy(dst)\t/* nothing */\n#endif\n\n/*\n * Scroll hints are useless when hashmap is used\n */\n#if !USE_SCROLL_HINTS\n#if !USE_HASHMAP\n#define USE_SCROLL_HINTS 1\n#else\n#define USE_SCROLL_HINTS 0\n#endif\n#endif\n\n#if USE_SCROLL_HINTS\n#define if_USE_SCROLL_HINTS(stmt) stmt\n#else\n#define if_USE_SCROLL_HINTS(stmt) /*nothing*/\n#endif\n\n/*\n * Options for terminal drivers, etc...\n */\n#ifdef USE_TERM_DRIVER\n#define USE_SP_RIPOFF     1\n#define USE_SP_TERMTYPE   1\n#define USE_SP_WINDOWLIST 1\n#endif\n\n/*\n * Note:  ht/cbt expansion flakes out randomly under Linux 1.1.47, but only\n * when we're throwing control codes at the screen at high volume.  To see\n * this, re-enable USE_HARD_TABS and run worm for a while.  Other systems\n * probably don't want to define this either due to uncertainties about tab\n * delays and expansion in raw mode.\n */\n\n#define TRIES struct tries\ntypedef TRIES {\n\tTRIES    *child;            /* ptr to child.  NULL if none          */\n\tTRIES    *sibling;          /* ptr to sibling.  NULL if none        */\n\tunsigned char    ch;        /* character at this node               */\n\tunsigned short   value;     /* code of string so far.  0 if none.   */\n#undef TRIES\n} TRIES;\n\n/*\n * Common/troublesome character definitions\n */\n#define StringOf(ch) {ch, 0}\n\n#define L_BRACE '{'\n#define R_BRACE '}'\n#define S_QUOTE '\\''\n#define D_QUOTE '\"'\n\n#define VT_ACSC \"``aaffggiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~\"\n\n/*\n * Structure for palette tables\n */\n\ntypedef struct\n{\n    short red, green, blue;\t/* what color_content() returns */\n    short r, g, b;\t\t/* params to init_color() */\n    int init;\t\t\t/* true if we called init_color() */\n}\ncolor_t;\n\n#define MAXCOLUMNS    135\n#define MAXLINES      66\n#define FIFO_SIZE     MAXCOLUMNS+2  /* for nocbreak mode input */\n\n#define ACS_LEN       128\n\n#define WINDOWLIST struct _win_list\n\n#if USE_WIDEC_SUPPORT\n#define _nc_bkgd    _bkgrnd\n#else\n#undef _XOPEN_SOURCE_EXTENDED\n#undef _XPG5\n#define _nc_bkgd    _bkgd\n#define wgetbkgrnd(win, wch)\t*wch = win->_bkgd\n#define wbkgrnd\t    wbkgd\n#endif\n\n#undef NCURSES_OPAQUE\n#define NCURSES_INTERNALS 1\n#define NCURSES_OPAQUE 0\n\n#include <curses.h>\t/* we'll use -Ipath directive to get the right one! */\n\n/*\n * If curses.h did not expose the SCREEN-functions, then we do not need the\n * parameter in the corresponding unextended functions.\n */\n\n#define USE_SP_FUNC_SUPPORT     NCURSES_SP_FUNCS\n#define USE_EXT_SP_FUNC_SUPPORT (NCURSES_SP_FUNCS && NCURSES_EXT_FUNCS)\n\n#if NCURSES_SP_FUNCS\n#define SP_PARM         sp\t/* use parameter */\n#define NCURSES_SP_ARG          SP_PARM\n#define NCURSES_SP_DCL  SCREEN *NCURSES_SP_ARG\n#define NCURSES_SP_DCL0 NCURSES_SP_DCL\n#define NCURSES_SP_ARGx         NCURSES_SP_ARG,\n#define NCURSES_SP_DCLx SCREEN *NCURSES_SP_ARGx\n#else\n#define SP_PARM         SP\t/* use global variable */\n#define NCURSES_SP_ARG\n#define NCURSES_SP_DCL\n#define NCURSES_SP_DCL0 void\n#define NCURSES_SP_ARGx\n#define NCURSES_SP_DCLx\n#endif\n\n#include <nc_panel.h>\n\n#define IsPreScreen(sp)      (((sp) != 0) && sp->_prescreen)\n#define HasTerminal(sp)      (((sp) != 0) && (0 != ((sp)->_term)))\n#define IsValidScreen(sp)    (HasTerminal(sp) && !IsPreScreen(sp))\n\n#if BROKEN_LINKER || USE_REENTRANT\n#define CurTerm              _nc_prescreen._cur_term\n#else\n#define CurTerm              cur_term\n#endif\n\n#if NCURSES_SP_FUNCS\n#define TerminalOf(sp)       ((sp) ? ((sp)->_term ? (sp)->_term : CurTerm) : CurTerm)\n#else\n#define TerminalOf(sp)       CurTerm\n#endif\n\n#include <term.h>\n\n/*\n * Reduce dependency on cur_term global by using terminfo data from SCREEN's\n * pointer to this data.\n */\n#ifdef USE_SP_TERMTYPE\n#undef CUR\n#endif\n\n#define SP_TERMTYPE TerminalOf(sp)->type.\n\n#include <term_entry.h>\n\n#include <nc_tparm.h>\n\n/*\n * Use these macros internally, to make tracing less verbose.  But leave the\n * option for compiling the tracing into the library.\n */\n#if 1\n#define ColorPair(n)\t\tNCURSES_BITS(n, 0)\n#define PairNumber(a)\t\t(NCURSES_CAST(int,(((unsigned long)(a) & A_COLOR) >> NCURSES_ATTR_SHIFT)))\n#else\n#define ColorPair(pair)\t\tCOLOR_PAIR(pair)\n#define PairNumber(attr)\tPAIR_NUMBER(attr)\n#endif\n\n#define unColor(n)\t\tunColor2(AttrOf(n))\n#define unColor2(a)\t\t((a) & ALL_BUT_COLOR)\n\n/*\n * Extended-colors stores the color pair in a separate struct-member than the\n * attributes.  But for compatibility, we handle most cases where a program\n * written for non-extended colors stores the color in the attributes by\n * checking for a color pair in both places.\n */\n#if NCURSES_EXT_COLORS\n#define if_EXT_COLORS(stmt)\tstmt\n#define SetPair(value,p)\tSetPair2((value).ext_color, AttrOf(value), p)\n#define SetPair2(c,a,p)\t\tc = (p), \\\n\t\t\t\ta = (unColor2(a) | (A_COLOR & ColorPair(oldColor(c))))\n#define GetPair(value)\t\tGetPair2((value).ext_color, AttrOf(value))\n#define GetPair2(c,a)\t\t((c) ? (c) : PairNumber(a))\n#define oldColor(p)\t\t(((p) > 255) ? 255 : (p))\n#define GET_WINDOW_PAIR(w)\tGetPair2((w)->_color, (w)->_attrs)\n#define SET_WINDOW_PAIR(w,p)\t(w)->_color = (p)\n#define SameAttrOf(a,b)\t\t(AttrOf(a) == AttrOf(b) && GetPair(a) == GetPair(b))\n\n#if NCURSES_SP_FUNCS\n#define VIDATTR(sp,attr,pair)\tNCURSES_SP_NAME(vid_attr)(sp, attr, pair, 0)\n#else\n#define VIDATTR(sp,attr,pair)\tvid_attr(attr, pair, 0)\n#endif\n\n#else /* !NCURSES_EXT_COLORS */\n\n#define if_EXT_COLORS(stmt)\t/* nothing */\n#define SetPair(value,p)\tRemAttr(value, A_COLOR), \\\n\t\t\t\tSetAttr(value, AttrOf(value) | (A_COLOR & (attr_t) ColorPair(p)))\n#define GetPair(value)\t\tPairNumber(AttrOf(value))\n#define GET_WINDOW_PAIR(w)\tPairNumber(WINDOW_ATTRS(w))\n#define SET_WINDOW_PAIR(w,p)\tWINDOW_ATTRS(w) &= ALL_BUT_COLOR, \\\n\t\t\t\tWINDOW_ATTRS(w) |= (A_COLOR & (attr_t) ColorPair(p))\n#define SameAttrOf(a,b)\t\t(AttrOf(a) == AttrOf(b))\n\n#if NCURSES_SP_FUNCS\n#define VIDATTR(sp,attr,pair)\tNCURSES_SP_NAME(vidattr)(sp, attr)\n#else\n#define VIDATTR(sp,attr,pair)\tvidattr(attr)\n#endif\n\n#endif /* NCURSES_EXT_COLORS */\n\n#if NCURSES_NO_PADDING\n#define GetNoPadding(sp)\t((sp) ? (sp)->_no_padding : _nc_prescreen._no_padding)\n#define SetNoPadding(sp)\t_nc_set_no_padding(sp)\nextern NCURSES_EXPORT(void)     _nc_set_no_padding(SCREEN *);\n#else\n#define GetNoPadding(sp)\tFALSE\n#define SetNoPadding(sp)\t/*nothing*/\n#endif\n\n#define WINDOW_ATTRS(w)\t\t((w)->_attrs)\n\n#define SCREEN_ATTRS(s)\t\t(*((s)->_current_attr))\n#define GET_SCREEN_PAIR(s)\tGetPair(SCREEN_ATTRS(s))\n#define SET_SCREEN_PAIR(s,p)\tSetPair(SCREEN_ATTRS(s), p)\n\n#if USE_REENTRANT || NCURSES_SP_FUNCS\nNCURSES_EXPORT(int *)        _nc_ptr_Lines (SCREEN *);\nNCURSES_EXPORT(int *)        _nc_ptr_Cols (SCREEN *);\nNCURSES_EXPORT(int *)        _nc_ptr_Tabsize (SCREEN *);\nNCURSES_EXPORT(int *)        _nc_ptr_Escdelay (SCREEN *);\n#endif\n\n#if USE_REENTRANT\n\n#define ptrLines(sp)         (sp ? &(sp->_LINES) : &(_nc_prescreen._LINES))\n#define ptrCols(sp)          (sp ? &(sp->_COLS) : &(_nc_prescreen._COLS))\n#define ptrTabsize(sp)       (sp ? &(sp->_TABSIZE) : &(_nc_prescreen._TABSIZE))\n#define ptrEscdelay(sp)      (sp ? &(sp->_ESCDELAY) : &(_nc_prescreen._ESCDELAY))\n\n#define SET_LINES(value)     *_nc_ptr_Lines(SP_PARM) = value\n#define SET_COLS(value)      *_nc_ptr_Cols(SP_PARM) = value\n#define SET_TABSIZE(value)   *_nc_ptr_Tabsize(SP_PARM) = value\n#define SET_ESCDELAY(value)  *_nc_ptr_Escdelay(SP_PARM) = value\n\n#else\n\n#define ptrLines(sp)         &LINES\n#define ptrCols(sp)          &COLS\n#define ptrTabsize(sp)       &TABSIZE\n#define ptrEscdelay(sp)      &ESCDELAY\n\n#define SET_LINES(value)     LINES = value\n#define SET_COLS(value)      COLS = value\n#define SET_TABSIZE(value)   TABSIZE = value\n#define SET_ESCDELAY(value)  ESCDELAY = value\n\n#endif\n\n#define TR_MUTEX(data) _tracef(\"%s@%d: me:%08lX COUNT:%2u/%2d/%6d/%2d/%s%9u: \" #data, \\\n\t    __FILE__, __LINE__, \\\n\t    (unsigned long) (pthread_self()), \\\n\t    data.__data.__lock, \\\n\t    data.__data.__count, \\\n\t    data.__data.__owner, \\\n\t    data.__data.__kind, \\\n\t    (data.__data.__nusers > 5) ? \" OOPS \" : \"\", \\\n\t    data.__data.__nusers)\n#define TR_GLOBAL_MUTEX(name) TR_MUTEX(_nc_globals.mutex_##name)\n\n#if USE_WEAK_SYMBOLS\n#if defined(__GNUC__)\n#  if defined __USE_ISOC99\n#    define _cat_pragma(exp)\t_Pragma(#exp)\n#    define _weak_pragma(exp)\t_cat_pragma(weak name)\n#  else\n#    define _weak_pragma(exp)\n#  endif\n#  define _declare(name)\t__extension__ extern __typeof__(name) name\n#  define weak_symbol(name)\t_weak_pragma(name) _declare(name) __attribute__((weak))\n#endif\n#endif\n\n#ifdef USE_PTHREADS\n\n#if USE_REENTRANT\n#include <pthread.h>\nextern NCURSES_EXPORT(void) _nc_init_pthreads(void);\nextern NCURSES_EXPORT(void) _nc_mutex_init(pthread_mutex_t *);\nextern NCURSES_EXPORT(int) _nc_mutex_lock(pthread_mutex_t *);\nextern NCURSES_EXPORT(int) _nc_mutex_trylock(pthread_mutex_t *);\nextern NCURSES_EXPORT(int) _nc_mutex_unlock(pthread_mutex_t *);\n#define _nc_lock_global(name)\t_nc_mutex_lock(&_nc_globals.mutex_##name)\n#define _nc_try_global(name)    _nc_mutex_trylock(&_nc_globals.mutex_##name)\n#define _nc_unlock_global(name)\t_nc_mutex_unlock(&_nc_globals.mutex_##name)\n\n#else\n#error POSIX threads requires --enable-reentrant option\n#endif\n\n#ifdef USE_PTHREADS\n#  if USE_WEAK_SYMBOLS\nweak_symbol(pthread_sigmask);\nweak_symbol(pthread_kill);\nweak_symbol(pthread_self);\nweak_symbol(pthread_equal);\nweak_symbol(pthread_mutex_init);\nweak_symbol(pthread_mutex_lock);\nweak_symbol(pthread_mutex_unlock);\nweak_symbol(pthread_mutex_trylock);\nweak_symbol(pthread_mutexattr_settype);\nweak_symbol(pthread_mutexattr_init);\nextern NCURSES_EXPORT(int) _nc_sigprocmask(int, const sigset_t *, sigset_t *);\n#    undef  sigprocmask\n#    define sigprocmask _nc_sigprocmask\n#  endif\n#endif\n\n#if HAVE_NANOSLEEP\n#undef HAVE_NANOSLEEP\n#define HAVE_NANOSLEEP 0\t/* nanosleep suspends all threads */\n#endif\n\n#else /* !USE_PTHREADS */\n\n#if USE_PTHREADS_EINTR\n#  if USE_WEAK_SYMBOLS\n#include <pthread.h>\nweak_symbol(pthread_sigmask);\nweak_symbol(pthread_kill);\nweak_symbol(pthread_self);\nweak_symbol(pthread_equal);\nextern NCURSES_EXPORT(int) _nc_sigprocmask(int, const sigset_t *, sigset_t *);\n#    undef  sigprocmask\n#    define sigprocmask _nc_sigprocmask\n#  endif\n#endif /* USE_PTHREADS_EINTR */\n\n#define _nc_init_pthreads()\t/* nothing */\n#define _nc_mutex_init(obj)\t/* nothing */\n\n#define _nc_lock_global(name)\t/* nothing */\n#define _nc_try_global(name)    0\n#define _nc_unlock_global(name)\t/* nothing */\n\n#endif /* USE_PTHREADS */\n\n/*\n * When using sp-funcs, locks are targeted to SCREEN-level granularity.\n * So the locking is done in the non-sp-func (which calls the sp-func) rather\n * than in the sp-func itself.\n *\n * Use the _nc_nonsp_XXX functions in the function using \"NCURSES_SP_NAME()\".\n * Use the _nc_sp_XXX functions in the function using \"#if NCURSES_SP_FUNCS\".\n */\n#if NCURSES_SP_FUNCS\n\n#define _nc_nonsp_lock_global(name)\t/* nothing */\n#define _nc_nonsp_try_global(name)    0\n#define _nc_nonsp_unlock_global(name)\t/* nothing */\n\n#define _nc_sp_lock_global(name)\t_nc_lock_global(name)\n#define _nc_sp_try_global(name)         _nc_try_global(name)\n#define _nc_sp_unlock_global(name)\t_nc_unlock_global(name)\n\n#else\n\n#define _nc_nonsp_lock_global(name)\t_nc_lock_global(name)\n#define _nc_nonsp_try_global(name)      _nc_try_global(name)\n#define _nc_nonsp_unlock_global(name)\t_nc_unlock_global(name)\n\n#define _nc_sp_lock_global(name)\t/* nothing */\n#define _nc_sp_try_global(name)    0\n#define _nc_sp_unlock_global(name)\t/* nothing */\n\n#endif\n\n#if HAVE_GETTIMEOFDAY\n# define PRECISE_GETTIME 1\n# define TimeType struct timeval\n#else\n# define PRECISE_GETTIME 0\n# define TimeType time_t\n#endif\n\n/*\n * Definitions for color pairs\n */\ntypedef unsigned colorpair_t;\t/* type big enough to store PAIR_OF() */\n#define C_SHIFT 9\t\t/* we need more bits than there are colors */\n#define C_MASK\t\t\t((1 << C_SHIFT) - 1)\n#define PAIR_OF(fg, bg)\t\t(colorpair_t) ((((fg) & C_MASK) << C_SHIFT) | ((bg) & C_MASK))\n#define FORE_OF(c)\t\t(((c) >> C_SHIFT) & C_MASK)\n#define BACK_OF(c)\t\t((c) & C_MASK)\n#define isDefaultColor(c)\t((c) >= COLOR_DEFAULT || (c) < 0)\n\n#define COLOR_DEFAULT\t\tC_MASK\n\n#if defined(USE_BUILD_CC) || (defined(USE_TERMLIB) && !defined(NEED_NCURSES_CH_T))\n\n#undef NCURSES_CH_T\t\t/* this is not a termlib feature */\n#define NCURSES_CH_T void\t/* ...but we need a pointer in SCREEN */\n\n#endif\t/* USE_TERMLIB */\n\n#ifndef USE_TERMLIB\nstruct ldat\n{\n\tNCURSES_CH_T\t*text;\t\t/* text of the line */\n\tNCURSES_SIZE_T\tfirstchar;\t/* first changed character in the line */\n\tNCURSES_SIZE_T\tlastchar;\t/* last changed character in the line */\n\tNCURSES_SIZE_T\toldindex;\t/* index of the line at last update */\n};\n#endif\t/* USE_TERMLIB */\n\ntypedef enum {\n\tM_XTERM\t= -1\t\t/* use xterm's mouse tracking? */\n\t,M_NONE = 0\t\t/* no mouse device */\n#if USE_GPM_SUPPORT\n\t,M_GPM\t\t\t/* use GPM */\n#endif\n#if USE_SYSMOUSE\n\t,M_SYSMOUSE\t\t/* FreeBSD sysmouse on console */\n#endif\n#ifdef USE_TERM_DRIVER\n\t,M_TERM_DRIVER\t\t/* Win32 console, etc */\n#endif\n} MouseType;\n\n/*\n * Structures for scrolling.\n */\n\ntypedef struct {\n\tunsigned long hashval;\n\tint oldcount, newcount;\n\tint oldindex, newindex;\n} HASHMAP;\n\n/*\n * Structures for soft labels.\n */\n\nstruct _SLK;\n\n#if !(defined(USE_TERMLIB) || defined(USE_BUILD_CC))\n\ntypedef struct\n{\n\tchar *ent_text;\t\t/* text for the label */\n\tchar *form_text;\t/* formatted text (left/center/...) */\n\tint ent_x;\t\t/* x coordinate of this field */\n\tchar dirty;\t\t/* this label has changed */\n\tchar visible;\t\t/* field is visible */\n} slk_ent;\n\ntypedef struct _SLK {\n\tbool    dirty;\t\t/* all labels have changed */\n\tbool    hidden;\t\t/* soft labels are hidden */\n\tWINDOW  *win;\n\tslk_ent *ent;\n\tshort   maxlab;\t\t/* number of available labels */\n\tshort   labcnt;\t\t/* number of allocated labels */\n\tshort   maxlen;\t\t/* length of labels */\n\tNCURSES_CH_T attr;\t/* soft label attribute */\n} SLK;\n\n#endif\t/* USE_TERMLIB */\n\ntypedef\tstruct {\n\tWINDOW *win;\t\t/* the window used in the hook      */\n\tint\tline;\t\t/* lines to take, < 0 => from bottom*/\n\tint\t(*hook)(WINDOW *, int); /* callback for user\t    */\n} ripoff_t;\n\n#if USE_GPM_SUPPORT\n#undef buttons\t\t\t/* term.h defines this, and gpm uses it! */\n#include <gpm.h>\n\n#ifdef HAVE_LIBDL\n/* link dynamically to GPM */\ntypedef int *TYPE_gpm_fd;\ntypedef int (*TYPE_Gpm_Open) (Gpm_Connect *, int);\ntypedef int (*TYPE_Gpm_Close) (void);\ntypedef int (*TYPE_Gpm_GetEvent) (Gpm_Event *);\n\n#define my_gpm_fd       SP_PARM->_mouse_gpm_fd\n#define my_Gpm_Open     SP_PARM->_mouse_Gpm_Open\n#define my_Gpm_Close    SP_PARM->_mouse_Gpm_Close\n#define my_Gpm_GetEvent SP_PARM->_mouse_Gpm_GetEvent\n#else\n/* link statically to GPM */\n#define my_gpm_fd       &gpm_fd\n#define my_Gpm_Open     Gpm_Open\n#define my_Gpm_Close    Gpm_Close\n#define my_Gpm_GetEvent Gpm_GetEvent\n#endif /* HAVE_LIBDL */\n#endif /* USE_GPM_SUPPORT */\n\ntypedef struct {\n    long sequence;\n    bool last_used;\n    char *fix_sgr0;\t\t/* this holds the filtered sgr0 string */\n    char *last_bufp;\t\t/* help with fix_sgr0 leak */\n    TERMINAL *last_term;\n} TGETENT_CACHE;\n\n#define TGETENT_MAX 4\n\n/*\n * State of tparm().\n */\n#define STACKSIZE 20\n\ntypedef struct {\n\tunion {\n\t\tint\tnum;\n\t\tchar\t*str;\n\t} data;\n\tbool num_type;\n} STACK_FRAME;\n\n#define NUM_VARS 26\n\ntypedef struct {\n#ifdef TRACE\n\tconst char\t*tname;\n#endif\n\tconst char\t*tparam_base;\n\n\tSTACK_FRAME\tstack[STACKSIZE];\n\tint\t\tstack_ptr;\n\n\tchar\t\t*out_buff;\n\tsize_t\t\tout_size;\n\tsize_t\t\tout_used;\n\n\tchar\t\t*fmt_buff;\n\tsize_t\t\tfmt_size;\n\n\tint\t\tdynamic_var[NUM_VARS];\n\tint\t\tstatic_vars[NUM_VARS];\n} TPARM_STATE;\n\ntypedef struct {\n    char *text;\n    size_t size;\n} TRACEBUF;\n\n/*\n * The filesystem database normally uses a single-letter for the lower level\n * of directories.  Use a hexadecimal code for filesystems which do not\n * preserve mixed-case names.\n */\n#if MIXEDCASE_FILENAMES\n#define LEAF_FMT \"%c\"\n#define LEAF_LEN 1\n#else\n#define LEAF_FMT \"%02x\"\n#define LEAF_LEN 2\n#endif\n\n/*\n * TRACEMSE_FMT is no longer than 80 columns, there are 5 numbers that\n * could at most have 10 digits, and the mask contains no more than 32 bits\n * with each bit representing less than 15 characters.  Usually the whole\n * string is less than 80 columns, but this buffer size is an absolute\n * limit.\n */\n#define TRACEMSE_MAX\t(80 + (5 * 10) + (32 * 15))\n#define TRACEMSE_FMT\t\"id %2d  at (%2d, %2d, %2d) state %4lx = {\" /* } */\n\n#ifdef USE_TERM_DRIVER\nstruct DriverTCB; /* Terminal Control Block forward declaration */\n#define INIT_TERM_DRIVER()\t_nc_globals.term_driver = _nc_get_driver\n#else\n#define INIT_TERM_DRIVER()\t/* nothing */\n#endif\n\n/*\n * Global data which is not specific to a screen.\n */\ntypedef struct {\n\tSIG_ATOMIC_T\thave_sigwinch;\n\tSIG_ATOMIC_T\tcleanup_nested;\n\n\tbool\t\tinit_signals;\n\tbool\t\tinit_screen;\n\n\tconst char\t*comp_sourcename;\n\tchar\t\t*comp_termtype;\n\n\tbool\t\thave_tic_directory;\n\tbool\t\tkeep_tic_directory;\n\tconst char\t*tic_directory;\n\n\tchar\t\t*dbi_list;\n\tint\t\tdbi_size;\n\n\tchar\t\t*first_name;\n\tchar\t\t**keyname_table;\n\n\tint\t\tslk_format;\n\n\tchar\t\t*safeprint_buf;\n\tsize_t\t\tsafeprint_used;\n\n\tTGETENT_CACHE\ttgetent_cache[TGETENT_MAX];\n\tint\t\ttgetent_index;\n\tlong\t\ttgetent_sequence;\n\n#ifndef USE_SP_WINDOWLIST\n\tWINDOWLIST\t*_nc_windowlist;\n#define WindowList(sp)\t_nc_globals._nc_windowlist\n#endif\n\n#if USE_HOME_TERMINFO\n\tchar\t\t*home_terminfo;\n#endif\n\n#if !USE_SAFE_SPRINTF\n\tint\t\tsafeprint_cols;\n\tint\t\tsafeprint_rows;\n#endif\n\n#ifdef USE_TERM_DRIVER\n\tint\t\t(*term_driver)(struct DriverTCB*, const char*, int*);\n#endif\n\n#ifdef TRACE\n\tbool\t\tinit_trace;\n\tchar\t\ttrace_fname[PATH_MAX];\n\tint\t\ttrace_level;\n\tFILE\t\t*trace_fp;\n\n\tchar\t\t*tracearg_buf;\n\tsize_t\t\ttracearg_used;\n\n\tTRACEBUF\t*tracebuf_ptr;\n\tsize_t\t\ttracebuf_used;\n\n\tchar\t\ttracechr_buf[40];\n\n\tchar\t\t*tracedmp_buf;\n\tsize_t\t\ttracedmp_used;\n\n\tunsigned char\t*tracetry_buf;\n\tsize_t\t\ttracetry_used;\n\n\tchar\t\ttraceatr_color_buf[2][80];\n\tint\t\ttraceatr_color_sel;\n\tint\t\ttraceatr_color_last;\n#if !defined(USE_PTHREADS) && USE_REENTRANT\n\tint\t\tnested_tracef;\n#endif\n#endif\t/* TRACE */\n\n#ifdef USE_PTHREADS\n\tpthread_mutex_t\tmutex_curses;\n\tpthread_mutex_t\tmutex_tst_tracef;\n\tpthread_mutex_t\tmutex_tracef;\n\tint\t\tnested_tracef;\n\tint\t\tuse_pthreads;\n#define _nc_use_pthreads\t_nc_globals.use_pthreads\n#endif\n#if USE_PTHREADS_EINTR\n\tpthread_t\tread_thread;\t\t/* The reading thread */\n#endif\n} NCURSES_GLOBALS;\n\nextern NCURSES_EXPORT_VAR(NCURSES_GLOBALS) _nc_globals;\n\n#define N_RIPS 5\n\n/*\n * Global data which can be swept up into a SCREEN when one is created.\n * It may be modified before the next SCREEN is created.\n */\ntypedef struct {\n\tbool\t\tuse_env;\n\tbool\t\tfilter_mode;\n\tattr_t\t\tprevious_attr;\n#ifndef USE_SP_RIPOFF\n\tripoff_t\trippedoff[N_RIPS];\n\tripoff_t\t*rsp;\n#endif\n\tTPARM_STATE\ttparm_state;\n\tTTY\t\t*saved_tty;\t/* savetty/resetty information\t    */\n#if NCURSES_NO_PADDING\n\tbool\t\t_no_padding;\t/* flag to set if padding disabled  */\n#endif\n\tNCURSES_SP_OUTC\t_outch;\t\t/* output handler if not putc */\n#if BROKEN_LINKER || USE_REENTRANT\n\tchtype\t\t*real_acs_map;\n\tint\t\t_LINES;\n\tint\t\t_COLS;\n\tint\t\t_TABSIZE;\n\tint\t\t_ESCDELAY;\n\tTERMINAL\t*_cur_term;\n#ifdef TRACE\n\tlong\t\t_outchars;\n\tconst char\t*_tputs_trace;\n#endif\n#endif\n} NCURSES_PRESCREEN;\n\n/*\n * Use screen-specific ripoff data (for softkeys) rather than global.\n */\n#ifdef USE_SP_RIPOFF\n#define safe_ripoff_sp     (sp)->rsp\n#define safe_ripoff_stack  (sp)->rippedoff\n#else\n#define safe_ripoff_sp\t   _nc_prescreen.rsp\n#define safe_ripoff_stack  _nc_prescreen.rippedoff\n#endif\n\nextern NCURSES_EXPORT_VAR(NCURSES_PRESCREEN) _nc_prescreen;\n\n/*\n * The SCREEN structure.\n */\n\nstruct screen {\n\tint\t\t_ifd;\t\t/* input file ptr for screen\t    */\n\tFILE\t\t*_ofp;\t\t/* output file ptr for screen\t    */\n\tchar\t\t*_setbuf;\t/* buffered I/O for output\t    */\n\tbool\t\t_filtered;\t/* filter() was called\t\t    */\n\tbool\t\t_buffered;\t/* setvbuf uses _setbuf data\t    */\n\tbool\t\t_prescreen;\t/* is in prescreen phase\t    */\n\tbool\t\t_use_env;\t/* LINES & COLS from environment?   */\n\tint\t\t_checkfd;\t/* filedesc for typeahead check\t    */\n\tTERMINAL\t*_term;\t\t/* terminal type information\t    */\n\tTTY\t\t_saved_tty;\t/* savetty/resetty information\t    */\n\tNCURSES_SIZE_T\t_lines;\t\t/* screen lines\t\t\t    */\n\tNCURSES_SIZE_T\t_columns;\t/* screen columns\t\t    */\n\n\tNCURSES_SIZE_T\t_lines_avail;\t/* lines available for stdscr\t    */\n\tNCURSES_SIZE_T\t_topstolen;\t/* lines stolen from top\t    */\n\n\tWINDOW\t\t*_curscr;\t/* current screen\t\t    */\n\tWINDOW\t\t*_newscr;\t/* virtual screen to be updated to  */\n\tWINDOW\t\t*_stdscr;\t/* screen's full-window context\t    */\n\n#define CurScreen(sp)  (sp)->_curscr\n#define NewScreen(sp)  (sp)->_newscr\n#define StdScreen(sp)  (sp)->_stdscr\n\n\tTRIES\t\t*_keytry;\t/* \"Try\" for use with keypad mode   */\n\tTRIES\t\t*_key_ok;\t/* Disabled keys via keyok(,FALSE)  */\n\tbool\t\t_tried;\t\t/* keypad mode was initialized\t    */\n\tbool\t\t_keypad_on;\t/* keypad mode is currently on\t    */\n\n\tbool\t\t_called_wgetch;\t/* check for recursion in wgetch()  */\n\tint\t\t_fifo[FIFO_SIZE];\t/* input push-back buffer   */\n\tshort\t\t_fifohead,\t/* head of fifo queue\t\t    */\n\t\t\t_fifotail,\t/* tail of fifo queue\t\t    */\n\t\t\t_fifopeek,\t/* where to peek for next char\t    */\n\t\t\t_fifohold;\t/* set if breakout marked\t    */\n\n\tint\t\t_endwin;\t/* are we out of window mode?\t    */\n\tNCURSES_CH_T\t*_current_attr; /* holds current attributes set\t    */\n\tint\t\t_coloron;\t/* is color enabled?\t\t    */\n\tint\t\t_color_defs;\t/* are colors modified\t\t    */\n\tint\t\t_cursor;\t/* visibility of the cursor\t    */\n\tint\t\t_cursrow;\t/* physical cursor row\t\t    */\n\tint\t\t_curscol;\t/* physical cursor column\t    */\n\tbool\t\t_notty;\t\t/* true if we cannot switch non-tty */\n\tint\t\t_nl;\t\t/* True if NL -> CR/NL is on\t    */\n\tint\t\t_raw;\t\t/* True if in raw mode\t\t    */\n\tint\t\t_cbreak;\t/* 1 if in cbreak mode\t\t    */\n\t\t\t\t\t/* > 1 if in halfdelay mode\t    */\n\tint\t\t_echo;\t\t/* True if echo on\t\t    */\n\tint\t\t_use_meta;\t/* use the meta key?\t\t    */\n\tstruct _SLK\t*_slk;\t\t/* ptr to soft key struct / NULL    */\n\tint\t\tslk_format;\t/* selected format for this screen  */\n\t/* cursor movement costs; units are 10ths of milliseconds */\n#if NCURSES_NO_PADDING\n\tbool\t\t_no_padding;\t/* flag to set if padding disabled  */\n#endif\n\tint\t\t_char_padding;\t/* cost of character put\t    */\n\tint\t\t_cr_cost;\t/* cost of (carriage_return)\t    */\n\tint\t\t_cup_cost;\t/* cost of (cursor_address)\t    */\n\tint\t\t_home_cost;\t/* cost of (cursor_home)\t    */\n\tint\t\t_ll_cost;\t/* cost of (cursor_to_ll)\t    */\n#if USE_HARD_TABS\n\tint\t\t_ht_cost;\t/* cost of (tab)\t\t    */\n\tint\t\t_cbt_cost;\t/* cost of (backtab)\t\t    */\n#endif /* USE_HARD_TABS */\n\tint\t\t_cub1_cost;\t/* cost of (cursor_left)\t    */\n\tint\t\t_cuf1_cost;\t/* cost of (cursor_right)\t    */\n\tint\t\t_cud1_cost;\t/* cost of (cursor_down)\t    */\n\tint\t\t_cuu1_cost;\t/* cost of (cursor_up)\t\t    */\n\tint\t\t_cub_cost;\t/* cost of (parm_cursor_left)\t    */\n\tint\t\t_cuf_cost;\t/* cost of (parm_cursor_right)\t    */\n\tint\t\t_cud_cost;\t/* cost of (parm_cursor_down)\t    */\n\tint\t\t_cuu_cost;\t/* cost of (parm_cursor_up)\t    */\n\tint\t\t_hpa_cost;\t/* cost of (column_address)\t    */\n\tint\t\t_vpa_cost;\t/* cost of (row_address)\t    */\n\t/* used in tty_update.c, must be chars */\n\tint\t\t_ed_cost;\t/* cost of (clr_eos)\t\t    */\n\tint\t\t_el_cost;\t/* cost of (clr_eol)\t\t    */\n\tint\t\t_el1_cost;\t/* cost of (clr_bol)\t\t    */\n\tint\t\t_dch1_cost;\t/* cost of (delete_character)\t    */\n\tint\t\t_ich1_cost;\t/* cost of (insert_character)\t    */\n\tint\t\t_dch_cost;\t/* cost of (parm_dch)\t\t    */\n\tint\t\t_ich_cost;\t/* cost of (parm_ich)\t\t    */\n\tint\t\t_ech_cost;\t/* cost of (erase_chars)\t    */\n\tint\t\t_rep_cost;\t/* cost of (repeat_char)\t    */\n\tint\t\t_hpa_ch_cost;\t/* cost of (column_address)\t    */\n\tint\t\t_cup_ch_cost;\t/* cost of (cursor_address)\t    */\n\tint\t\t_cuf_ch_cost;\t/* cost of (parm_cursor_right)\t    */\n\tint\t\t_inline_cost;\t/* cost of inline-move\t\t    */\n\tint\t\t_smir_cost;\t/* cost of (enter_insert_mode)\t    */\n\tint\t\t_rmir_cost;\t/* cost of (exit_insert_mode)\t    */\n\tint\t\t_ip_cost;\t/* cost of (insert_padding)\t    */\n\t/* used in lib_mvcur.c */\n\tchar *\t\t_address_cursor;\n\t/* used in tty_update.c */\n\tint\t\t_scrolling;\t/* 1 if terminal's smart enough to  */\n\n\t/* used in lib_color.c */\n\tcolor_t\t\t*_color_table;\t/* screen's color palette\t     */\n\tint\t\t_color_count;\t/* count of colors in palette\t     */\n\tcolorpair_t\t*_color_pairs;\t/* screen's color pair list\t     */\n\tint\t\t_pair_count;\t/* count of color pairs\t\t     */\n\tint\t\t_pair_limit;\t/* actual limit of color-pairs       */\n#if NCURSES_EXT_FUNCS\n\tbool\t\t_default_color; /* use default colors\t\t     */\n\tbool\t\t_has_sgr_39_49; /* has ECMA default color support    */\n\tint\t\t_default_fg;\t/* assumed default foreground\t     */\n\tint\t\t_default_bg;\t/* assumed default background\t     */\n\tint\t\t_default_pairs;\t/* count pairs using default color   */\n#endif\n\tchtype\t\t_ok_attributes; /* valid attributes for terminal     */\n\tchtype\t\t_xmc_suppress;\t/* attributes to suppress if xmc     */\n\tchtype\t\t_xmc_triggers;\t/* attributes to process if xmc\t     */\n\tchtype *\t_acs_map;\t/* the real alternate-charset map    */\n\tbool *\t\t_screen_acs_map;\n\n\n\t/* used in lib_vidattr.c */\n\tbool\t\t_use_rmso;\t/* true if we may use 'rmso'\t     */\n\tbool\t\t_use_rmul;\t/* true if we may use 'rmul'\t     */\n\n\t/*\n\t * These data correspond to the state of the idcok() and idlok()\n\t * functions.  A caveat is in order here:  the XSI and SVr4\n\t * documentation specify that these functions apply to the window which\n\t * is given as an argument.  However, ncurses implements this logic\n\t * only for the newscr/curscr update process, _not_ per-window.\n\t */\n\tbool\t\t_nc_sp_idlok;\n\tbool\t\t_nc_sp_idcok;\n\n\t/*\n\t * These are the data that support the mouse interface.\n\t */\n\tbool\t\t_mouse_initialized;\n\tMouseType\t_mouse_type;\n\tint\t\t_maxclick;\n\tbool\t\t(*_mouse_event) (SCREEN *);\n\tbool\t\t(*_mouse_inline)(SCREEN *);\n\tbool\t\t(*_mouse_parse) (SCREEN *, int);\n\tvoid\t\t(*_mouse_resume)(SCREEN *);\n\tvoid\t\t(*_mouse_wrap)\t(SCREEN *);\n\tint\t\t_mouse_fd;\t/* file-descriptor, if any */\n\tbool\t\t_mouse_active;\t/* true if initialized */\n\tmmask_t\t\t_mouse_mask;\n\tNCURSES_CONST char *_mouse_xtermcap; /* string to enable/disable mouse */\n\tMEVENT\t\t_mouse_events[EV_MAX];\t/* hold the last mouse event seen */\n\tMEVENT\t\t*_mouse_eventp;\t/* next free slot in event queue */\n\n#if USE_GPM_SUPPORT\n\tbool\t\t_mouse_gpm_loaded;\n\tbool\t\t_mouse_gpm_found;\n#ifdef HAVE_LIBDL\n\tvoid\t\t*_dlopen_gpm;\n\tTYPE_gpm_fd\t_mouse_gpm_fd;\n\tTYPE_Gpm_Open\t_mouse_Gpm_Open;\n\tTYPE_Gpm_Close\t_mouse_Gpm_Close;\n\tTYPE_Gpm_GetEvent _mouse_Gpm_GetEvent;\n#endif\n\tGpm_Connect\t_mouse_gpm_connect;\n#endif /* USE_GPM_SUPPORT */\n\n#if USE_EMX_MOUSE\n\tint\t\t_emxmouse_wfd;\n\tint\t\t_emxmouse_thread;\n\tint\t\t_emxmouse_activated;\n\tchar\t\t_emxmouse_buttons[4];\n#endif\n\n#if USE_SYSMOUSE\n\tMEVENT\t\t_sysmouse_fifo[FIFO_SIZE];\n\tint\t\t_sysmouse_head;\n\tint\t\t_sysmouse_tail;\n\tint\t\t_sysmouse_char_width;\t/* character width */\n\tint\t\t_sysmouse_char_height;\t/* character height */\n\tint\t\t_sysmouse_old_buttons;\n\tint\t\t_sysmouse_new_buttons;\n#endif\n\n#ifdef USE_TERM_DRIVER\n\tMEVENT\t\t_drv_mouse_fifo[FIFO_SIZE];\n\tint\t\t_drv_mouse_head;\n\tint\t\t_drv_mouse_tail;\n\tint\t\t_drv_mouse_old_buttons;\n\tint\t\t_drv_mouse_new_buttons;\n#endif\n\t/*\n\t * This supports automatic resizing\n\t */\n#if USE_SIZECHANGE\n\tint\t\t(*_resize)(NCURSES_SP_DCLx int y, int x);\n#endif\n\n\t/*\n\t * These are data that support the proper handling of the panel stack on an\n\t * per screen basis.\n\t */\n\tstruct panelhook _panelHook;\n\n\tbool\t\t_sig_winch;\n\tSCREEN\t\t*_next_screen;\n\n\t/* hashes for old and new lines */\n\tunsigned long\t*oldhash, *newhash;\n\tHASHMAP\t\t*hashtab;\n\tint\t\thashtab_len;\n\tint\t\t*_oldnum_list;\n\tint\t\t_oldnum_size;\n\n\tbool\t\t_cleanup;\t/* cleanup after int/quit signal */\n\tNCURSES_SP_OUTC\t_outch;\t\t/* output handler if not putc */\n\n\tint\t\t_legacy_coding;\t/* see use_legacy_coding() */\n\n#if USE_REENTRANT\n\tchar\t\t_ttytype[NAMESIZE];\n\tint\t\t_ESCDELAY;\n\tint\t\t_TABSIZE;\n\tint\t\t_LINES;\n\tint\t\t_COLS;\n#ifdef TRACE\n\tlong\t\t_outchars;\n\tconst char\t*_tputs_trace;\n#endif\n#endif\n\n#ifdef TRACE\n\tchar\t\ttracechr_buf[40];\n\tchar\t\ttracemse_buf[TRACEMSE_MAX];\n#endif\n#ifdef USE_SP_WINDOWLIST\n\tWINDOWLIST*\t_windowlist;\n#define WindowList(sp)  (sp)->_windowlist\n#endif\n\tNCURSES_OUTC\tjump;\n\n\tripoff_t\trippedoff[N_RIPS];\n\tripoff_t\t*rsp;\n\n\t/*\n\t * ncurses/ncursesw are the same up to this point.\n\t */\n#if USE_WIDEC_SUPPORT\n\t/* recent versions of 'screen' have partially-working support for\n\t * UTF-8, but do not permit ACS at the same time (see tty_update.c).\n\t */\n\tbool\t\t_screen_acs_fix;\n#endif\n};\n\nextern NCURSES_EXPORT_VAR(SCREEN *) _nc_screen_chain;\nextern NCURSES_EXPORT_VAR(SIG_ATOMIC_T) _nc_have_sigwinch;\n\n\tWINDOWLIST {\n\tWINDOWLIST *next;\n\tSCREEN *screen;\t\t/* screen containing the window */\n\tWINDOW\twin;\t\t/* WINDOW_EXT() needs to account for offset */\n#ifdef NCURSES_WIDECHAR\n\tchar addch_work[(MB_LEN_MAX * 9) + 1];\n\tunsigned addch_used;\t/* number of bytes in addch_work[] */\n\tint addch_x;\t\t/* x-position for addch_work[] */\n\tint addch_y;\t\t/* y-position for addch_work[] */\n#endif\n};\n\n#define WINDOW_EXT(w,m) (((WINDOWLIST *)((void *)((char *)(w) - offsetof(WINDOWLIST, win))))->m)\n\n#define SP_PRE_INIT(sp)                         \\\n    sp->_cursrow = -1;                          \\\n    sp->_curscol = -1;                          \\\n    sp->_nl = TRUE;                             \\\n    sp->_raw = FALSE;                           \\\n    sp->_cbreak = 0;                            \\\n    sp->_echo = TRUE;                           \\\n    sp->_fifohead = -1;                         \\\n    sp->_endwin = TRUE;                         \\\n    sp->_cursor = -1;                           \\\n    WindowList(sp) = 0;                         \\\n    sp->_outch = NCURSES_SP_NAME(_nc_outch);    \\\n    sp->jump = 0                                \\\n\n/* usually in <limits.h> */\n#ifndef UCHAR_MAX\n#define UCHAR_MAX 255\n#endif\n\n/* The terminfo source is assumed to be 7-bit ASCII */\n#define is7bits(c)\t((unsigned)(c) < 128)\n\n/* Checks for isprint() should be done on 8-bit characters (non-wide) */\n#define is8bits(c)\t((unsigned)(c) <= UCHAR_MAX)\n\n#ifndef min\n#define min(a,b)\t((a) > (b)  ?  (b)  :  (a))\n#endif\n\n#ifndef max\n#define max(a,b)\t((a) < (b)  ?  (b)  :  (a))\n#endif\n\n/* usually in <unistd.h> */\n#ifndef STDIN_FILENO\n#define STDIN_FILENO 0\n#endif\n\n#ifndef STDOUT_FILENO\n#define STDOUT_FILENO 1\n#endif\n\n#ifndef STDERR_FILENO\n#define STDERR_FILENO 2\n#endif\n\n#ifndef EXIT_SUCCESS\n#define EXIT_SUCCESS 0\n#endif\n\n#ifndef EXIT_FAILURE\n#define EXIT_FAILURE 1\n#endif\n\n#ifndef R_OK\n#define\tR_OK\t4\t\t/* Test for read permission.  */\n#endif\n#ifndef W_OK\n#define\tW_OK\t2\t\t/* Test for write permission.  */\n#endif\n#ifndef X_OK\n#define\tX_OK\t1\t\t/* Test for execute permission.  */\n#endif\n#ifndef F_OK\n#define\tF_OK\t0\t\t/* Test for existence.  */\n#endif\n\n#if HAVE_FCNTL_H\n#include <fcntl.h>\t\t/* may define O_BINARY\t*/\n#endif\n\n#ifndef O_BINARY\n#define O_BINARY 0\n#endif\n\n#ifdef TRACE\n#if USE_REENTRANT\n#define COUNT_OUTCHARS(n) _nc_count_outchars(n);\n#else\n#define COUNT_OUTCHARS(n) _nc_outchars += (n);\n#endif\n#else\n#define COUNT_OUTCHARS(n) /* nothing */\n#endif\n\n#define RESET_OUTCHARS() COUNT_OUTCHARS(-_nc_outchars)\n\n#define UChar(c)\t((unsigned char)(c))\n#define UShort(c)\t((unsigned short)(c))\n#define ChCharOf(c)\t((c) & (chtype)A_CHARTEXT)\n#define ChAttrOf(c)\t((c) & (chtype)A_ATTRIBUTES)\n\n#ifndef MB_LEN_MAX\n#define MB_LEN_MAX 8 /* should be >= MB_CUR_MAX, but that may be a function */\n#endif\n\n#if USE_WIDEC_SUPPORT /* { */\n#define isEILSEQ(status) (((size_t)status == (size_t)-1) && (errno == EILSEQ))\n\n#define init_mb(state)\tmemset(&state, 0, sizeof(state))\n\n#if NCURSES_EXT_COLORS\n#define NulColor\t, 0\n#else\n#define NulColor\t/* nothing */\n#endif\n\n#define NulChar\t\t0,0,0,0\t/* FIXME: see CCHARW_MAX */\n#define CharOf(c)\t((c).chars[0])\n#define AttrOf(c)\t((c).attr)\n\n#define AddAttr(c,a)\tAttrOf(c) |=  ((a) & A_ATTRIBUTES)\n#define RemAttr(c,a)\tAttrOf(c) &= ~((a) & A_ATTRIBUTES)\n#define SetAttr(c,a)\tAttrOf(c) =   ((a) & A_ATTRIBUTES) | WidecExt(c)\n\n#define NewChar2(c,a)\t{ a, { c, NulChar } NulColor }\n#define NewChar(ch)\tNewChar2(ChCharOf(ch), ChAttrOf(ch))\n\n#if CCHARW_MAX == 5\n#define CharEq(a,b)\t(((a).attr == (b).attr) \\\n\t\t       && (a).chars[0] == (b).chars[0] \\\n\t\t       && (a).chars[1] == (b).chars[1] \\\n\t\t       && (a).chars[2] == (b).chars[2] \\\n\t\t       && (a).chars[3] == (b).chars[3] \\\n\t\t       && (a).chars[4] == (b).chars[4] \\\n\t\t\tif_EXT_COLORS(&& (a).ext_color == (b).ext_color))\n#else\n#define CharEq(a,b)\t(!memcmp(&(a), &(b), sizeof(a)))\n#endif\n\n#define SetChar(ch,c,a) do {\t\t\t\t\t\t\t    \\\n\t\t\t    NCURSES_CH_T *_cp = &ch;\t\t\t\t    \\\n\t\t\t    memset(_cp, 0, sizeof(ch));\t\t\t\t    \\\n\t\t\t    _cp->chars[0] = (wchar_t) (c);\t\t\t    \\\n\t\t\t    _cp->attr = (a);\t\t\t\t\t    \\\n\t\t\t    if_EXT_COLORS(SetPair(ch, PairNumber(a)));\t\t    \\\n\t\t\t} while (0)\n#define CHREF(wch)\t(&wch)\n#define CHDEREF(wch)\t(*wch)\n#define ARG_CH_T\tNCURSES_CH_T *\n#define CARG_CH_T\tconst NCURSES_CH_T *\n#define PUTC_DATA\tchar PUTC_buf[MB_LEN_MAX]; int PUTC_i, PUTC_n; \\\n\t\t\tmbstate_t PUT_st; wchar_t PUTC_ch\n#define PUTC_INIT\tinit_mb (PUT_st)\n#define PUTC(ch,b)\tdo { if(!isWidecExt(ch)) {\t\t\t\t    \\\n\t\t\tif (Charable(ch)) {\t\t\t\t\t    \\\n\t\t\t    fputc(CharOf(ch), b);\t\t\t\t    \\\n\t\t\t    COUNT_OUTCHARS(1);\t\t\t\t\t    \\\n\t\t\t} else {\t\t\t\t\t\t    \\\n\t\t\t    PUTC_INIT;\t\t\t\t\t\t    \\\n\t\t\t    for (PUTC_i = 0; PUTC_i < CCHARW_MAX; ++PUTC_i) {\t    \\\n\t\t\t\tPUTC_ch = (ch).chars[PUTC_i];\t\t\t    \\\n\t\t\t\tif (PUTC_ch == L'\\0')\t\t\t\t    \\\n\t\t\t\t    break;\t\t\t\t\t    \\\n\t\t\t\tPUTC_n = (int) wcrtomb(PUTC_buf,\t\t    \\\n\t\t\t\t\t\t       (ch).chars[PUTC_i], &PUT_st); \\\n\t\t\t\tif (PUTC_n <= 0) {\t\t\t\t    \\\n\t\t\t\t    if (PUTC_ch && is8bits(PUTC_ch) && PUTC_i == 0) \\\n\t\t\t\t\tputc(PUTC_ch,b);\t\t\t    \\\n\t\t\t\t    break;\t\t\t\t\t    \\\n\t\t\t\t}\t\t\t\t\t\t    \\\n\t\t\t\tIGNORE_RC(fwrite(PUTC_buf, (unsigned) PUTC_n, 1, b)); \\\n\t\t\t    }\t\t\t\t\t\t\t    \\\n\t\t\t    COUNT_OUTCHARS(PUTC_i);\t\t\t\t    \\\n\t\t\t} } } while (0)\n\n#define BLANK\t\tNewChar2(' ', WA_NORMAL)\n#define ZEROS\t\tNewChar2('\\0', WA_NORMAL)\n#define ISBLANK(ch)\t((ch).chars[0] == L' ' && (ch).chars[1] == L'\\0')\n\n\t/*\n\t * Wide characters cannot be represented in the A_CHARTEXT mask of\n\t * attr_t's but an application might have set a narrow character there.\n\t * But even in that case, it would only be a printable character, or\n\t * zero.  Otherwise we can use those bits to tell if a cell is the\n\t * first or extension part of a wide character.\n\t */\n#define WidecExt(ch)\t(int) (AttrOf(ch) & A_CHARTEXT)\n#define isWidecBase(ch)\t(WidecExt(ch) == 1)\n#define isWidecExt(ch)\t(WidecExt(ch) > 1 && WidecExt(ch) < 32)\n#define SetWidecExt(dst, ext)\tAttrOf(dst) &= ~A_CHARTEXT,\t\t\\\n\t\t\t\tAttrOf(dst) |= (attr_t) (ext + 1)\n\n#define if_WIDEC(code)  code\n#define Charable(ch)\t((SP_PARM != 0 && SP_PARM->_legacy_coding)\t\\\n\t\t\t || (AttrOf(ch) & A_ALTCHARSET)\t\t\t\\\n\t\t\t || (!isWidecExt(ch) &&\t\t\t\t\\\n\t\t\t     (ch).chars[1] == L'\\0' &&\t\t\t\\\n\t\t\t     _nc_is_charable(CharOf(ch))))\n\n#define L(ch)\t\tL ## ch\n#else /* }{ */\n#define CharOf(c)\tChCharOf(c)\n#define AttrOf(c)\tChAttrOf(c)\n#define AddAttr(c,a)\tc |= (a)\n#define RemAttr(c,a)\tc &= ~((a) & A_ATTRIBUTES)\n#define SetAttr(c,a)\tc = ((c) & ~A_ATTRIBUTES) | (a)\n#define NewChar(ch)\t(ch)\n#define NewChar2(c,a)\t((c) | (a))\n#define CharEq(a,b)\t((a) == (b))\n#define SetChar(ch,c,a)\tch = (c) | (a)\n#define CHREF(wch)\twch\n#define CHDEREF(wch)\twch\n#define ARG_CH_T\tNCURSES_CH_T\n#define CARG_CH_T\tNCURSES_CH_T\n#define PUTC_DATA\tint data = 0\n#define PUTC(ch,b)\tdo { data = CharOf(ch); putc(data,b); } while (0)\n\n#define BLANK\t\t(' '|A_NORMAL)\n#define ZEROS\t\t('\\0'|A_NORMAL)\n#define ISBLANK(ch)\t(CharOf(ch) == ' ')\n\n#define isWidecExt(ch)\t(0)\n#define if_WIDEC(code) /* nothing */\n\n#define L(ch)\t\tch\n#endif /* } */\n\n#define AttrOfD(ch)\tAttrOf(CHDEREF(ch))\n#define CharOfD(ch)\tCharOf(CHDEREF(ch))\n#define SetChar2(wch,ch)    SetChar(wch,ChCharOf(ch),ChAttrOf(ch))\n\n#define BLANK_ATTR\tA_NORMAL\n#define BLANK_TEXT\tL(' ')\n\n#define CHANGED     -1\n\n#define LEGALYX(w, y, x) \\\n\t      ((w) != 0 && \\\n\t\t((x) >= 0 && (x) <= (w)->_maxx && \\\n\t\t (y) >= 0 && (y) <= (w)->_maxy))\n\n#define CHANGED_CELL(line,col) \\\n\tif (line->firstchar == _NOCHANGE) \\\n\t\tline->firstchar = line->lastchar = (NCURSES_SIZE_T) col; \\\n\telse if ((col) < line->firstchar) \\\n\t\tline->firstchar = (NCURSES_SIZE_T) col; \\\n\telse if ((col) > line->lastchar) \\\n\t\tline->lastchar = (NCURSES_SIZE_T) col\n\n#define CHANGED_RANGE(line,start,end) \\\n\tif (line->firstchar == _NOCHANGE \\\n\t || line->firstchar > (start)) \\\n\t\tline->firstchar = (NCURSES_SIZE_T) start; \\\n\tif (line->lastchar == _NOCHANGE \\\n\t || line->lastchar < (end)) \\\n\t\tline->lastchar = (NCURSES_SIZE_T) end\n\n#define CHANGED_TO_EOL(line,start,end) \\\n\tif (line->firstchar == _NOCHANGE \\\n\t || line->firstchar > (start)) \\\n\t\tline->firstchar = (NCURSES_SIZE_T) start; \\\n\tline->lastchar = (NCURSES_SIZE_T) end\n\n#define SIZEOF(v) (sizeof(v)/sizeof(v[0]))\n\n#define FreeIfNeeded(p)  if ((p) != 0) free(p)\n\n/* FreeAndNull() is not a comma-separated expression because some compilers\n * do not accept a mixture of void with values.\n */\n#define FreeAndNull(p)   free(p); p = 0\n\n#include <nc_alloc.h>\n\n/*\n * TTY bit definition for converting tabs to spaces.\n */\n#ifdef TAB3\n# define OFLAGS_TABS TAB3\t/* POSIX specifies TAB3 */\n#else\n# ifdef XTABS\n#  define OFLAGS_TABS XTABS\t/* XTABS is usually the \"same\" */\n# else\n#  ifdef OXTABS\n#   define OFLAGS_TABS OXTABS\t/* the traditional BSD equivalent */\n#  else\n#   define OFLAGS_TABS 0\n#  endif\n# endif\n#endif\n\n/*\n * Standardize/simplify common loops\n */\n#define each_screen(p) p = _nc_screen_chain; p != 0; p = (p)->_next_screen\n#define each_window(sp,p) p = WindowList(sp); p != 0; p = (p)->next\n#define each_ripoff(p) p = safe_ripoff_stack; (p - safe_ripoff_stack) < N_RIPS; ++p\n\n/*\n * Prefixes for call/return points of library function traces.  We use these to\n * instrument the public functions so that the traces can be easily transformed\n * into regression scripts.\n */\n#define T_CALLED(fmt) \"called {\" fmt\n#define T_CREATE(fmt) \"create :\" fmt\n#define T_RETURN(fmt) \"return }\" fmt\n\n#ifdef TRACE\n\n#if USE_REENTRANT\n#define TPUTS_TRACE(s)\t_nc_set_tputs_trace(s);\n#else\n#define TPUTS_TRACE(s)\t_nc_tputs_trace = s;\n#endif\n\n#define START_TRACE() \\\n\tif ((_nc_tracing & TRACE_MAXIMUM) == 0) { \\\n\t    int t = _nc_getenv_num(\"NCURSES_TRACE\"); \\\n\t    if (t >= 0) \\\n\t\ttrace((unsigned) t); \\\n\t}\n\n/*\n * Many of the _tracef() calls use static buffers; lock the trace state before\n * trying to fill them.\n */\n#if USE_REENTRANT\n#define USE_TRACEF(mask) _nc_use_tracef(mask)\nextern NCURSES_EXPORT(int)\t_nc_use_tracef (unsigned);\nextern NCURSES_EXPORT(void)\t_nc_locked_tracef (const char *, ...) GCC_PRINTFLIKE(1,2);\n#else\n#define USE_TRACEF(mask) (_nc_tracing & (mask))\n#define _nc_locked_tracef _tracef\n#endif\n\n#define TR(n, a)\tif (USE_TRACEF(n)) _nc_locked_tracef a\n#define T(a)\t\tTR(TRACE_CALLS, a)\n#define TRACE_RETURN(value,type)     return _nc_retrace_##type(value)\n#define TRACE_RETURN2(value,dst,src) return _nc_retrace_##dst##_##src(value)\n#define TRACE_RETURN_SP(value,type)  return _nc_retrace_##type(SP_PARM, value)\n\n#define NonNull(s)\t((s) != 0 ? s : \"<null>\")\n\n#define returnAttr(code)\tTRACE_RETURN(code,attr_t)\n#define returnBits(code)\tTRACE_RETURN(code,unsigned)\n#define returnBool(code)\tTRACE_RETURN(code,bool)\n#define returnCPtr(code)\tTRACE_RETURN(code,cptr)\n#define returnCVoidPtr(code)\tTRACE_RETURN(code,cvoid_ptr)\n#define returnChar(code)\tTRACE_RETURN(code,char)\n#define returnChtype(code)\tTRACE_RETURN(code,chtype)\n#define returnCode(code)\tTRACE_RETURN(code,int)\n#define returnIntAttr(code)\tTRACE_RETURN2(code,int,attr_t)\n#define returnMMask(code)\tTRACE_RETURN_SP(code,mmask_t)\n#define returnPtr(code)\t\tTRACE_RETURN(code,ptr)\n#define returnSP(code)\t\tTRACE_RETURN(code,sp)\n#define returnVoid\t\tT((T_RETURN(\"\"))); return\n#define returnVoidPtr(code)\tTRACE_RETURN(code,void_ptr)\n#define returnWin(code)\t\tTRACE_RETURN(code,win)\n\nextern NCURSES_EXPORT(NCURSES_BOOL)     _nc_retrace_bool (NCURSES_BOOL);\nextern NCURSES_EXPORT(NCURSES_CONST void *) _nc_retrace_cvoid_ptr (NCURSES_CONST void *);\nextern NCURSES_EXPORT(SCREEN *)         _nc_retrace_sp (SCREEN *);\nextern NCURSES_EXPORT(WINDOW *)         _nc_retrace_win (WINDOW *);\nextern NCURSES_EXPORT(attr_t)           _nc_retrace_attr_t (attr_t);\nextern NCURSES_EXPORT(char *)           _nc_retrace_ptr (char *);\nextern NCURSES_EXPORT(char *)           _nc_trace_ttymode(TTY *tty);\nextern NCURSES_EXPORT(char *)           _nc_varargs (const char *, va_list);\nextern NCURSES_EXPORT(chtype)           _nc_retrace_chtype (chtype);\nextern NCURSES_EXPORT(const char *)     _nc_altcharset_name(attr_t, chtype);\nextern NCURSES_EXPORT(const char *)     _nc_retrace_cptr (const char *);\nextern NCURSES_EXPORT(char)             _nc_retrace_char (char);\nextern NCURSES_EXPORT(int)              _nc_retrace_int (int);\nextern NCURSES_EXPORT(int)              _nc_retrace_int_attr_t (attr_t);\nextern NCURSES_EXPORT(mmask_t)          _nc_retrace_mmask_t (SCREEN *, mmask_t);\nextern NCURSES_EXPORT(unsigned)         _nc_retrace_unsigned (unsigned);\nextern NCURSES_EXPORT(void *)           _nc_retrace_void_ptr (void *);\nextern NCURSES_EXPORT(void)             _nc_fifo_dump (SCREEN *);\n\n#if USE_REENTRANT\nNCURSES_WRAPPED_VAR(long, _nc_outchars);\nNCURSES_WRAPPED_VAR(const char *, _nc_tputs_trace);\n#define _nc_outchars       NCURSES_PUBLIC_VAR(_nc_outchars())\n#define _nc_tputs_trace    NCURSES_PUBLIC_VAR(_nc_tputs_trace())\nextern NCURSES_EXPORT(void)\t\t_nc_set_tputs_trace (const char *);\nextern NCURSES_EXPORT(void)\t\t_nc_count_outchars (long);\n#else\nextern NCURSES_EXPORT_VAR(const char *) _nc_tputs_trace;\nextern NCURSES_EXPORT_VAR(long)         _nc_outchars;\n#endif\n\nextern NCURSES_EXPORT_VAR(unsigned)     _nc_tracing;\n\n#if USE_WIDEC_SUPPORT\nextern NCURSES_EXPORT(const char *) _nc_viswbuf2 (int, const wchar_t *);\nextern NCURSES_EXPORT(const char *) _nc_viswbufn (const wchar_t *, int);\n#endif\n\nextern NCURSES_EXPORT(const char *) _nc_viscbuf2 (int, const NCURSES_CH_T *, int);\nextern NCURSES_EXPORT(const char *) _nc_viscbuf (const NCURSES_CH_T *, int);\n\n#else /* !TRACE */\n\n#define START_TRACE() /* nothing */\n\n#define T(a)\n#define TR(n, a)\n#define TPUTS_TRACE(s)\n\n#define returnAttr(code)\treturn code\n#define returnBits(code)\treturn code\n#define returnBool(code)\treturn code\n#define returnCPtr(code)\treturn code\n#define returnCVoidPtr(code)\treturn code\n#define returnChar(code)\treturn ((char) code)\n#define returnChtype(code)\treturn code\n#define returnCode(code)\treturn code\n#define returnIntAttr(code)\treturn code\n#define returnMMask(code)\treturn code\n#define returnPtr(code)\t\treturn code\n#define returnSP(code)\t\treturn code\n#define returnVoid\t\treturn\n#define returnVoidPtr(code)\treturn code\n#define returnWin(code)\t\treturn code\n\n#endif /* TRACE/!TRACE */\n\n/*\n * Workaround for defective implementation of gcc attribute warn_unused_result\n */\n#if defined(__GNUC__) && defined(_FORTIFY_SOURCE)\n#define IGNORE_RC(func) errno = (int) func\n#else\n#define IGNORE_RC(func) (void) func\n#endif /* gcc workarounds */\n\n/*\n * Return-codes for tgetent() and friends.\n */\n#define TGETENT_YES  1\t\t/* entry is found */\n#define TGETENT_NO   0\t\t/* entry is not found */\n#define TGETENT_ERR -1\t\t/* an error occurred */\n\nextern NCURSES_EXPORT(const char *) _nc_visbuf2 (int, const char *);\nextern NCURSES_EXPORT(const char *) _nc_visbufn (const char *, int);\n\n#define EMPTY_MODULE(name) \\\nextern\tNCURSES_EXPORT(void) name (void); \\\n\tNCURSES_EXPORT(void) name (void) { }\n\n#define ALL_BUT_COLOR ((chtype)~(A_COLOR))\n#define NONBLANK_ATTR (A_NORMAL|A_BOLD|A_DIM|A_BLINK)\n#define XMC_CHANGES(c) ((c) & SP_PARM->_xmc_suppress)\n\n#define toggle_attr_on(S,at) {\\\n   if (PairNumber(at) > 0) {\\\n      (S) = ((S) & ALL_BUT_COLOR) | (attr_t) (at);\\\n   } else {\\\n      (S) |= (attr_t) (at);\\\n   }\\\n   TR(TRACE_ATTRS, (\"new attribute is %s\", _traceattr((S))));}\n\n\n#define toggle_attr_off(S,at) {\\\n   if (PairNumber(at) > 0) {\\\n      (S) &= ~(at|A_COLOR);\\\n   } else {\\\n      (S) &= ~(at);\\\n   }\\\n   TR(TRACE_ATTRS, (\"new attribute is %s\", _traceattr((S))));}\n\n#define DelCharCost(sp,count) \\\n\t\t((parm_dch != 0) \\\n\t\t? sp->_dch_cost \\\n\t\t: ((delete_character != 0) \\\n\t\t\t? (sp->_dch1_cost * count) \\\n\t\t\t: INFINITY))\n\n#define InsCharCost(sp,count) \\\n\t\t((parm_ich != 0) \\\n\t\t? sp->_ich_cost \\\n\t\t: ((enter_insert_mode && exit_insert_mode) \\\n\t\t  ? sp->_smir_cost + sp->_rmir_cost + (sp->_ip_cost * count) \\\n\t\t  : ((insert_character != 0) \\\n\t\t    ? ((sp->_ich1_cost + sp->_ip_cost) * count) \\\n\t\t    : INFINITY)))\n\n#if USE_XMC_SUPPORT\n#define UpdateAttrs(sp,c) if (!SameAttrOf(SCREEN_ATTRS(sp), c)) { \\\n\t\t\t\tattr_t chg = AttrOf(SCREEN_ATTRS(sp)); \\\n\t\t\t\tVIDATTR(sp, AttrOf(c), GetPair(c)); \\\n\t\t\t\tif (magic_cookie_glitch > 0 \\\n\t\t\t\t && XMC_CHANGES((chg ^ AttrOf(SCREEN_ATTRS(sp))))) { \\\n\t\t\t\t\tT((\"%s @%d before glitch %d,%d\", \\\n\t\t\t\t\t\t__FILE__, __LINE__, \\\n\t\t\t\t\t\tsp->_cursrow, \\\n\t\t\t\t\t\tsp->_curscol)); \\\n\t\t\t\t\tNCURSES_SP_NAME(_nc_do_xmc_glitch)(NCURSES_SP_ARGx chg); \\\n\t\t\t\t} \\\n\t\t\t}\n#else\n#define UpdateAttrs(sp,c) if (!SameAttrOf(SCREEN_ATTRS(sp), c)) { \\\n\t\t\t\t    VIDATTR(sp, AttrOf(c), GetPair(c)); \\\n\t\t\t}\n#endif\n\n/*\n * Macros to make additional parameter to implement wgetch_events()\n */\n#ifdef NCURSES_WGETCH_EVENTS\n#define EVENTLIST_0th(param) param\n#define EVENTLIST_1st(param) param\n#define EVENTLIST_2nd(param) , param\n#define TWAIT_MASK (TW_ANY | TW_EVENT)\n#else\n#define EVENTLIST_0th(param) void\n#define EVENTLIST_1st(param) /* nothing */\n#define EVENTLIST_2nd(param) /* nothing */\n#define TWAIT_MASK TW_ANY\n#endif\n\n#if NCURSES_EXPANDED && NCURSES_EXT_FUNCS\n\n#undef  toggle_attr_on\n#define toggle_attr_on(S,at) _nc_toggle_attr_on(&(S), at)\nextern NCURSES_EXPORT(void) _nc_toggle_attr_on (attr_t *, attr_t);\n\n#undef  toggle_attr_off\n#define toggle_attr_off(S,at) _nc_toggle_attr_off(&(S), at)\nextern NCURSES_EXPORT(void) _nc_toggle_attr_off (attr_t *, attr_t);\n\n#undef  DelCharCost\n#define DelCharCost(sp, count) NCURSES_SP_NAME(_nc_DelCharCost)(NCURSES_SP_ARGx count)\n\n#undef  InsCharCost\n#define InsCharCost(sp, count) NCURSES_SP_NAME(_nc_InsCharCost)(NCURSES_SP_ARGx count)\n\nextern NCURSES_EXPORT(int) NCURSES_SP_NAME(_nc_DelCharCost) (NCURSES_SP_DCLx int _c);\nextern NCURSES_EXPORT(int) NCURSES_SP_NAME(_nc_InsCharCost) (NCURSES_SP_DCLx int _c);\n\n#undef  UpdateAttrs\n#define UpdateAttrs(sp,c) NCURSES_SP_NAME(_nc_UpdateAttrs)(NCURSES_SP_ARGx CHREF(c))\n\n#if USE_WIDEC_SUPPORT || defined(NEED_NCURSES_CH_T)\nextern NCURSES_EXPORT(void) NCURSES_SP_NAME(_nc_UpdateAttrs) (NCURSES_SP_DCLx CARG_CH_T _c);\n#else\nextern NCURSES_EXPORT(void) NCURSES_SP_NAME(_nc_UpdateAttrs) (NCURSES_SP_DCLx chtype c);\n#endif\n\n#if NCURSES_SP_FUNCS\nextern NCURSES_EXPORT(int) _nc_DelCharCost (int);\nextern NCURSES_EXPORT(int) _nc_InsCharCost (int);\nextern NCURSES_EXPORT(void) _nc_UpdateAttrs (CARG_CH_T);\n#endif /* NCURSES_SP_FUNCS */\n\n#else\n\nextern NCURSES_EXPORT(void) _nc_expanded (void);\n\n#endif\n\n#if !NCURSES_EXT_FUNCS\n#define set_escdelay(value) ESCDELAY = value\n#endif\n\n#if !HAVE_GETCWD\n#define getcwd(buf,len) getwd(buf)\n#endif\n\n/* charable.c */\n#if USE_WIDEC_SUPPORT\nextern NCURSES_EXPORT(bool) _nc_is_charable(wchar_t);\nextern NCURSES_EXPORT(int) _nc_to_char(wint_t);\nextern NCURSES_EXPORT(wint_t) _nc_to_widechar(int);\n#endif\n\n/* comp_captab.c */\ntypedef struct {\n\tshort\tnte_name;\t/* offset of name to hash on */\n\tint\tnte_type;\t/* BOOLEAN, NUMBER or STRING */\n\tshort\tnte_index;\t/* index of associated variable in its array */\n\tshort\tnte_link;\t/* index in table of next hash, or -1 */\n} name_table_data;\n\ntypedef struct\n{\n\tshort\tfrom;\n\tshort\tto;\n\tshort\tsource;\n} alias_table_data;\n\n/* doupdate.c */\n#if USE_XMC_SUPPORT\nextern NCURSES_EXPORT(void) _nc_do_xmc_glitch (attr_t);\n#endif\n\n/* hardscroll.c */\n#if defined(TRACE) || defined(SCROLLDEBUG) || defined(HASHDEBUG)\nextern NCURSES_EXPORT(void) _nc_linedump (void);\n#endif\n\n/* lib_acs.c */\nextern NCURSES_EXPORT(void) _nc_init_acs (void); /* corresponds to traditional 'init_acs()' */\nextern NCURSES_EXPORT(int)  _nc_msec_cost (const char *const, int);  /* used by 'tack' program */\n\n/* lib_addch.c */\n#if USE_WIDEC_SUPPORT\nNCURSES_EXPORT(int) _nc_build_wch(WINDOW *win, ARG_CH_T ch);\n#endif\n\n/* lib_addstr.c */\n#if USE_WIDEC_SUPPORT && !(defined(USE_TERMLIB) || defined(USE_BUILD_CC))\nextern NCURSES_EXPORT(int) _nc_wchstrlen(const cchar_t *);\n#endif\n\n/* lib_color.c */\nextern NCURSES_EXPORT(bool) _nc_reset_colors(void);\n\n/* lib_getch.c */\nextern NCURSES_EXPORT(int) _nc_wgetch(WINDOW *, int *, int EVENTLIST_2nd(_nc_eventlist *));\n\n/* lib_insch.c */\nextern NCURSES_EXPORT(int) _nc_insert_ch(SCREEN *, WINDOW *, chtype);\n\n/* lib_mvcur.c */\n#define INFINITY\t1000000\t/* cost: too high to use */\n\nextern NCURSES_EXPORT(void) _nc_mvcur_init (void);\nextern NCURSES_EXPORT(void) _nc_mvcur_resume (void);\nextern NCURSES_EXPORT(void) _nc_mvcur_wrap (void);\n\nextern NCURSES_EXPORT(int) _nc_scrolln (int, int, int, int);\n\nextern NCURSES_EXPORT(void) _nc_screen_init (void);\nextern NCURSES_EXPORT(void) _nc_screen_resume (void);\nextern NCURSES_EXPORT(void) _nc_screen_wrap (void);\n\n/* lib_mouse.c */\nextern NCURSES_EXPORT(bool) _nc_has_mouse (SCREEN *);\n\n/* lib_mvcur.c */\n#define INFINITY\t1000000\t/* cost: too high to use */\n#define BAUDBYTE\t9\t/* 9 = 7 bits + 1 parity + 1 stop */\n\n/* lib_setup.c */\nextern NCURSES_EXPORT(char *) _nc_get_locale(void);\nextern NCURSES_EXPORT(int)    _nc_unicode_locale(void);\nextern NCURSES_EXPORT(int)    _nc_locale_breaks_acs(TERMINAL *);\nextern NCURSES_EXPORT(int)    _nc_setupterm(NCURSES_CONST char *, int, int *, bool);\nextern NCURSES_EXPORT(void)   _nc_tinfo_cmdch(TERMINAL *, char);\n\n/* lib_set_term.c */\nextern NCURSES_EXPORT(int)    _nc_ripoffline(int, int(*)(WINDOW*, int));\n\n/* lib_tstp.c */\n#if USE_SIGWINCH\nextern NCURSES_EXPORT(int) _nc_handle_sigwinch(SCREEN *);\n#else\n#define _nc_handle_sigwinch(a) /* nothing */\n#endif\n\n/* lib_wacs.c */\n#if USE_WIDEC_SUPPORT\nextern NCURSES_EXPORT(void) _nc_init_wacs(void);\n#endif\n\ntypedef struct {\n    char *s_head;\t/* beginning of the string (may be null) */\n    char *s_tail;\t/* end of the string (may be null) */\n    size_t s_size;\t/* current remaining size available */\n    size_t s_init;\t/* total size available */\n} string_desc;\n\n/* strings.c */\nextern NCURSES_EXPORT(string_desc *) _nc_str_init (string_desc *, char *, size_t);\nextern NCURSES_EXPORT(string_desc *) _nc_str_null (string_desc *, size_t);\nextern NCURSES_EXPORT(string_desc *) _nc_str_copy (string_desc *, string_desc *);\nextern NCURSES_EXPORT(bool) _nc_safe_strcat (string_desc *, const char *);\nextern NCURSES_EXPORT(bool) _nc_safe_strcpy (string_desc *, const char *);\n\n#if !HAVE_STRSTR\n#define strstr _nc_strstr\nextern NCURSES_EXPORT(char *) _nc_strstr (const char *, const char *);\n#endif\n\n/* safe_sprintf.c */\nextern NCURSES_EXPORT(char *) _nc_printf_string (const char *, va_list);\n\n/* tries.c */\nextern NCURSES_EXPORT(int) _nc_add_to_try (TRIES **, const char *, unsigned);\nextern NCURSES_EXPORT(char *) _nc_expand_try (TRIES *, unsigned, int *, size_t);\nextern NCURSES_EXPORT(int) _nc_remove_key (TRIES **, unsigned);\nextern NCURSES_EXPORT(int) _nc_remove_string (TRIES **, const char *);\n\n/* elsewhere ... */\nextern NCURSES_EXPORT(ENTRY *) _nc_delink_entry (ENTRY *, TERMTYPE *);\nextern NCURSES_EXPORT(SCREEN *) _nc_screen_of (WINDOW *);\nextern NCURSES_EXPORT(TERMINAL*) _nc_get_cur_term (void);\nextern NCURSES_EXPORT(WINDOW *) _nc_makenew (int, int, int, int, int);\nextern NCURSES_EXPORT(char *) _nc_trace_buf (int, size_t);\nextern NCURSES_EXPORT(char *) _nc_trace_bufcat (int, const char *);\nextern NCURSES_EXPORT(char *) _nc_tracechar (SCREEN *, int);\nextern NCURSES_EXPORT(char *) _nc_tracemouse (SCREEN *, MEVENT const *);\nextern NCURSES_EXPORT(int) _nc_access (const char *, int);\nextern NCURSES_EXPORT(int) _nc_baudrate (int);\nextern NCURSES_EXPORT(int) _nc_freewin (WINDOW *);\nextern NCURSES_EXPORT(int) _nc_getenv_num (const char *);\nextern NCURSES_EXPORT(int) _nc_keypad (SCREEN *, bool);\nextern NCURSES_EXPORT(int) _nc_ospeed (int);\nextern NCURSES_EXPORT(int) _nc_outch (int);\nextern NCURSES_EXPORT(int) _nc_putp(const char *, const char *);\nextern NCURSES_EXPORT(int) _nc_putp_flush(const char *, const char *);\nextern NCURSES_EXPORT(int) _nc_read_termcap_entry (const char *const, TERMTYPE *const);\nextern NCURSES_EXPORT(int) _nc_setupscreen (int, int, FILE *, bool, int);\nextern NCURSES_EXPORT(int) _nc_setup_tinfo(const char *, TERMTYPE *);\nextern NCURSES_EXPORT(int) _nc_timed_wait (SCREEN *, int, int, int * EVENTLIST_2nd(_nc_eventlist *));\nextern NCURSES_EXPORT(void) _nc_do_color (short, short, bool, NCURSES_OUTC);\nextern NCURSES_EXPORT(void) _nc_flush (void);\nextern NCURSES_EXPORT(void) _nc_free_and_exit (int) GCC_NORETURN;\nextern NCURSES_EXPORT(void) _nc_free_entry (ENTRY *, TERMTYPE *);\nextern NCURSES_EXPORT(void) _nc_freeall (void);\nextern NCURSES_EXPORT(void) _nc_hash_map (void);\nextern NCURSES_EXPORT(void) _nc_init_keytry (SCREEN *);\nextern NCURSES_EXPORT(void) _nc_keep_tic_dir (const char *);\nextern NCURSES_EXPORT(void) _nc_make_oldhash (int i);\nextern NCURSES_EXPORT(void) _nc_scroll_oldhash (int n, int top, int bot);\nextern NCURSES_EXPORT(void) _nc_scroll_optimize (void);\nextern NCURSES_EXPORT(void) _nc_set_buffer (FILE *, bool);\nextern NCURSES_EXPORT(void) _nc_signal_handler (bool);\nextern NCURSES_EXPORT(void) _nc_synchook (WINDOW *);\nextern NCURSES_EXPORT(void) _nc_trace_tries (TRIES *);\n\n#if NO_LEAKS\nextern NCURSES_EXPORT(void) _nc_alloc_entry_leaks(void);\nextern NCURSES_EXPORT(void) _nc_captoinfo_leaks(void);\nextern NCURSES_EXPORT(void) _nc_codes_leaks(void);\nextern NCURSES_EXPORT(void) _nc_comp_captab_leaks(void);\nextern NCURSES_EXPORT(void) _nc_comp_scan_leaks(void);\nextern NCURSES_EXPORT(void) _nc_keyname_leaks(void);\nextern NCURSES_EXPORT(void) _nc_names_leaks(void);\nextern NCURSES_EXPORT(void) _nc_tgetent_leaks(void);\n#endif\n\n#if !(defined(USE_TERMLIB) || defined(USE_BUILD_CC))\nextern NCURSES_EXPORT(NCURSES_CH_T) _nc_render (WINDOW *, NCURSES_CH_T);\nextern NCURSES_EXPORT(int) _nc_waddch_nosync (WINDOW *, const NCURSES_CH_T);\nextern NCURSES_EXPORT(void) _nc_scroll_window (WINDOW *, int const, NCURSES_SIZE_T const, NCURSES_SIZE_T const, NCURSES_CH_T);\n#endif\n\n#if USE_WIDEC_SUPPORT\nextern NCURSES_EXPORT(int) _nc_insert_wch(WINDOW *, const cchar_t *);\n#endif\n\n#if USE_WIDEC_SUPPORT && !(defined(USE_TERMLIB) || defined(USE_BUILD_CC))\nextern NCURSES_EXPORT(size_t) _nc_wcrtomb (char *, wchar_t, mbstate_t *);\n#endif\n\n#if USE_SIZECHANGE\nextern NCURSES_EXPORT(void) _nc_update_screensize (SCREEN *);\n#endif\n\n#if HAVE_RESIZETERM\nextern NCURSES_EXPORT(void) _nc_resize_margins (WINDOW *);\n#else\n#define _nc_resize_margins(wp) /* nothing */\n#endif\n\n#ifdef NCURSES_WGETCH_EVENTS\nextern NCURSES_EXPORT(int) _nc_eventlist_timeout(_nc_eventlist *);\n#else\n#define wgetch_events(win, evl) wgetch(win)\n#define wgetnstr_events(win, str, maxlen, evl) wgetnstr(win, str, maxlen)\n#endif\n\n/*\n * Wide-character macros to hide some platform-differences.\n */\n#if USE_WIDEC_SUPPORT\n#if HAVE_MBTOWC && HAVE_MBLEN\n#define reset_mbytes(state) IGNORE_RC(mblen(NULL, 0)), IGNORE_RC(mbtowc(NULL, NULL, 0))\n#define count_mbytes(buffer,length,state) mblen(buffer,length)\n#define check_mbytes(wch,buffer,length,state) \\\n\t(int) mbtowc(&wch, buffer, length)\n#define state_unused\n#elif HAVE_MBRTOWC && HAVE_MBRLEN\n#define reset_mbytes(state) init_mb(state)\n#define count_mbytes(buffer,length,state) mbrlen(buffer,length,&state)\n#define check_mbytes(wch,buffer,length,state) \\\n\t(int) mbrtowc(&wch, buffer, length, &state)\n#else\nmake an error\n#endif\n#endif\n\n/*\n * Not everyone has vsscanf(), but we'd like to use it for scanw().\n */\n#if !HAVE_VSSCANF\nextern int vsscanf(const char *str, const char *format, va_list __arg);\n#endif\n\n/* scroll indices */\nextern NCURSES_EXPORT_VAR(int *) _nc_oldnums;\n\n#define USE_SETBUF_0 0\n\n#define NC_BUFFERED(sp,flag) NCURSES_SP_NAME(_nc_set_buffer)(NCURSES_SP_ARGx sp->_ofp, flag)\n\n#define NC_OUTPUT(sp) ((sp != 0) ? sp->_ofp : stdout)\n\n/*\n * On systems with a broken linker, define 'SP' as a function to force the\n * linker to pull in the data-only module with 'SP'.\n */\n#define _nc_alloc_screen_sp() typeCalloc(SCREEN, 1)\n\n#if BROKEN_LINKER\n#define SP _nc_screen()\nextern NCURSES_EXPORT(SCREEN *) _nc_screen (void);\nextern NCURSES_EXPORT(int)      _nc_alloc_screen (void);\nextern NCURSES_EXPORT(void)     _nc_set_screen (SCREEN *);\n#define CURRENT_SCREEN          _nc_screen()\n#else\n/* current screen is private data; avoid possible linking conflicts too */\nextern NCURSES_EXPORT_VAR(SCREEN *) SP;\n#define CURRENT_SCREEN SP\n#define _nc_alloc_screen()      ((SP = _nc_alloc_screen_sp()) != 0)\n#define _nc_set_screen(sp)      SP = sp\n#endif\n\n#if NCURSES_SP_FUNCS\n#define CURRENT_SCREEN_PRE      (IsPreScreen(CURRENT_SCREEN) ? CURRENT_SCREEN : new_prescr())\n#else\n#define CURRENT_SCREEN_PRE      CURRENT_SCREEN\n#endif\n\n/*\n * We don't want to use the lines or columns capabilities internally, because\n * if the application is running multiple screens under X, it's quite possible\n * they could all have type xterm but have different sizes!  So...\n */\n#define screen_lines(sp)        (sp)->_lines\n#define screen_columns(sp)      (sp)->_columns\n\nextern NCURSES_EXPORT(int) _nc_slk_initialize (WINDOW *, int);\nextern NCURSES_EXPORT(int) _nc_format_slks (NCURSES_SP_DCLx int _c);\n\n/*\n * Some constants related to SLK's\n */\n#define MAX_SKEY_OLD\t   8\t/* count of soft keys */\n#define MAX_SKEY_LEN_OLD   8\t/* max length of soft key text */\n#define MAX_SKEY_PC       12    /* This is what most PC's have */\n#define MAX_SKEY_LEN_PC    5\n\n/* Macro to check whether or not we use a standard format */\n#define SLK_STDFMT(fmt) (fmt < 3)\n/* Macro to determine height of label window */\n#define SLK_LINES(fmt)  (SLK_STDFMT(fmt) ? 1 : ((fmt) - 2))\n\n#define MAX_SKEY(fmt)     (SLK_STDFMT(fmt)? MAX_SKEY_OLD : MAX_SKEY_PC)\n#define MAX_SKEY_LEN(fmt) (SLK_STDFMT(fmt)? MAX_SKEY_LEN_OLD : MAX_SKEY_LEN_PC)\n\n/*\n * Common error messages\n */\n#define MSG_NO_MEMORY \"Out of memory\"\n#define MSG_NO_INPUTS \"Premature EOF\"\n\nextern NCURSES_EXPORT(int) _nc_set_tty_mode(TTY *);\nextern NCURSES_EXPORT(int) _nc_get_tty_mode(TTY *);\n\n/* timed_wait flag definitions */\n#define TW_NONE    0\n#define TW_INPUT   1\n#define TW_MOUSE   2\n#define TW_ANY     (TW_INPUT | TW_MOUSE)\n#define TW_EVENT   4\n\n#define SetSafeOutcWrapper(outc)\t    \\\n    SCREEN* sp = CURRENT_SCREEN;            \\\n    if (sp==0) {                            \\\n\tstruct screen dummy;\t\t    \\\n\tsp = &dummy;                        \\\n\tmemset(sp,0,sizeof(struct screen)); \\\n\tsp->_outch = _nc_outc_wrapper;      \\\n    }\\\n    sp->jump = outc\n\n#ifdef USE_TERM_DRIVER\ntypedef void* TERM_HANDLE;\n\ntypedef struct _termInfo\n{\n    bool caninit;\n\n    bool hascolor;\n    bool initcolor;\n    bool canchange;\n\n    int  tabsize;\n\n    int  maxcolors;\n    int  maxpairs;\n    int  nocolorvideo;\n\n    int  numbuttons;\n    int  numlabels;\n    int  labelwidth;\n    int  labelheight;\n\n    const color_t* defaultPalette;\n} TerminalInfo;\n\ntypedef struct term_driver {\n    bool   isTerminfo;\n    bool   (*CanHandle)(struct DriverTCB*,const char*,int*);\n    void   (*init)(struct DriverTCB*);\n    void   (*release)(struct DriverTCB*);\n    int    (*size)(struct DriverTCB*, int* Line, int *Cols);\n    int    (*sgmode)(struct DriverTCB*, bool setFlag, TTY*);\n    chtype (*conattr)(struct DriverTCB*);\n    int    (*hwcur)(struct DriverTCB*, int yold, int xold, int y, int x);\n    int    (*mode)(struct DriverTCB*, bool progFlag, bool defFlag);\n    bool   (*rescol)(struct DriverTCB*);\n    bool   (*rescolors)(struct DriverTCB*);\n    void   (*color)(struct DriverTCB*,bool fore, int color, int(*)(SCREEN*,int));\n    int    (*doBeepOrFlash)(struct DriverTCB*, bool);\n    void   (*initpair)(struct DriverTCB*,short,short,short);\n    void   (*initcolor)(struct DriverTCB*,short,short,short,short);\n    void   (*docolor)(struct DriverTCB*,short,short,bool,int(*)(SCREEN*,int));\n    void   (*initmouse)(struct DriverTCB*);\n    int    (*testmouse)(struct DriverTCB*,int);\n    void   (*setfilter)(struct DriverTCB*);\n    void   (*hwlabel)(struct DriverTCB*,int,char*);\n    void   (*hwlabelOnOff)(struct DriverTCB*,bool);\n    int    (*update)(struct DriverTCB*);\n    int    (*defaultcolors)(struct DriverTCB*,int,int);\n    int    (*print)(struct DriverTCB*,char*,int);\n    int    (*getsize)(struct DriverTCB*,int*,int*);\n    int    (*setsize)(struct DriverTCB*,int,int);\n    void   (*initacs)(struct DriverTCB*,chtype*,chtype*);\n    void   (*scinit)(SCREEN *);\n    void   (*scexit)(SCREEN *);\n    int    (*twait)(struct DriverTCB*,int,int,int* EVENTLIST_2nd(_nc_eventlist*));\n    int    (*read)(struct DriverTCB*,int*);\n    int    (*nap)(struct DriverTCB*,int);\n    int    (*kpad)(struct DriverTCB*, bool);\n    int    (*kyOk)(struct DriverTCB*, int, bool);\n    bool   (*kyExist)(struct DriverTCB*, int);\n} TERM_DRIVER;\n\ntypedef struct DriverTCB\n{\n    TERMINAL      term;   /* needs to be the first Element !!! */\n    TERM_HANDLE   inp;    /* The input handle of the Terminal */\n    TERM_HANDLE   out;    /* The output handle of the Terminal in shell mode */\n    TERM_HANDLE   hdl;    /* The output handle of the Terminal in prog  mode */\n    TERM_DRIVER*  drv;    /* The driver for that Terminal */\n    SCREEN*       csp;    /* The screen that owns that Terminal */\n    TerminalInfo  info;   /* Driver independent core capabilities of the Terminal */\n    void*         prop;   /* Driver dependent property storage to be used by the Driver */\n    long          magic;\n} TERMINAL_CONTROL_BLOCK;\n\n#define NCDRV_MAGIC(id) (0x47110000 | (id&0xffff))\n#define NCDRV_TINFO      0x01\n#define NCDRV_WINCONSOLE 0x02\n\n#define TCBOf(sp)    ((TERMINAL_CONTROL_BLOCK*)(TerminalOf(sp)))\n#define InfoOf(sp)   TCBOf(sp)->info\n#define CallDriver(sp,method)                        TCBOf(sp)->drv->method(TCBOf(sp))\n#define CallDriver_1(sp,method,arg1)                 TCBOf(sp)->drv->method(TCBOf(sp),arg1)\n#define CallDriver_2(sp,method,arg1,arg2)            TCBOf(sp)->drv->method(TCBOf(sp),arg1,arg2)\n#define CallDriver_3(sp,method,arg1,arg2,arg3)       TCBOf(sp)->drv->method(TCBOf(sp),arg1,arg2,arg3)\n#define CallDriver_4(sp,method,arg1,arg2,arg3,arg4)  TCBOf(sp)->drv->method(TCBOf(sp),arg1,arg2,arg3,arg4)\n\nextern NCURSES_EXPORT_VAR(const color_t*) _nc_cga_palette;\nextern NCURSES_EXPORT_VAR(const color_t*) _nc_hls_palette;\n\nextern NCURSES_EXPORT(int)      _nc_get_driver(TERMINAL_CONTROL_BLOCK*, const char*, int*);\nextern NCURSES_EXPORT(void)     _nc_get_screensize_ex(SCREEN *, TERMINAL *, int *, int *);\n#endif /* USE_TERM_DRIVER */\n\n/*\n * Entrypoints which are actually provided in the terminal driver, which would\n * be an sp-name otherwise.\n */\n#ifdef USE_TERM_DRIVER\n#define TINFO_HAS_KEY           _nc_tinfo_has_key\n#define TINFO_DOUPDATE          _nc_tinfo_doupdate\n#define TINFO_MVCUR             _nc_tinfo_mvcur\nextern NCURSES_EXPORT(int)      TINFO_HAS_KEY(SCREEN*, int);\nextern NCURSES_EXPORT(int)      TINFO_DOUPDATE(SCREEN *);\nextern NCURSES_EXPORT(int)      TINFO_MVCUR(SCREEN*, int, int, int, int);\n#else\n#define TINFO_HAS_KEY           NCURSES_SP_NAME(has_key)\n#define TINFO_DOUPDATE          NCURSES_SP_NAME(doupdate)\n#define TINFO_MVCUR             NCURSES_SP_NAME(mvcur)\n#endif\n\n/*\n * Entrypoints using an extra parameter with the terminal driver.\n */\n#ifdef USE_TERM_DRIVER\nextern NCURSES_EXPORT(void)   _nc_get_screensize(SCREEN *, TERMINAL *, int *, int *);\nextern NCURSES_EXPORT(int)    _nc_setupterm_ex(TERMINAL **, NCURSES_CONST char *, int , int *, bool);\n#define TINFO_GET_SIZE(sp, tp, lp, cp) \\\n\t_nc_get_screensize(sp, tp, lp, cp)\n#define TINFO_SET_CURTERM(sp, tp) \\\n\tNCURSES_SP_NAME(set_curterm)(sp, tp)\n#define TINFO_SETUP_TERM(tpp, name, fd, err, reuse) \\\n\t_nc_setupterm_ex(tpp, name, fd, err, reuse)\n#else /* !USE_TERM_DRIVER */\nextern NCURSES_EXPORT(void)   _nc_get_screensize(SCREEN *, int *, int *);\n#define TINFO_GET_SIZE(sp, tp, lp, cp) \\\n\t_nc_get_screensize(sp, lp, cp)\n#define TINFO_SET_CURTERM(sp, tp) \\\n\tset_curterm(tp)\n#define TINFO_SETUP_TERM(tpp, name, fd, err, reuse) \\\n\t_nc_setupterm(name, fd, err, reuse)\n#endif /* !USE_TERM_DRIVER */\n\n#ifdef USE_TERM_DRIVER\n#ifdef __MINGW32__\n#include <nc_mingw.h>\nextern NCURSES_EXPORT_VAR(TERM_DRIVER) _nc_WIN_DRIVER;\n#endif\nextern NCURSES_EXPORT_VAR(TERM_DRIVER) _nc_TINFO_DRIVER;\n#endif\n\n#ifdef USE_TERM_DRIVER\n#define IsTermInfo(sp)       (TCBOf(sp) && ((TCBOf(sp)->drv->isTerminfo)))\n#else\n#define IsTermInfo(sp)       TRUE\n#endif\n\n#define HasTInfoTerminal(sp) ((0 != TerminalOf(sp)) && IsTermInfo(sp))\n#define IsValidTIScreen(sp)  (HasTInfoTerminal(sp))\n\n/*\n * Exported entrypoints beyond the published API\n */\n#if NCURSES_SP_FUNCS\nextern NCURSES_EXPORT(WINDOW *) _nc_curscr_of(SCREEN*);\nextern NCURSES_EXPORT(WINDOW *) _nc_newscr_of(SCREEN*);\nextern NCURSES_EXPORT(WINDOW *) _nc_stdscr_of(SCREEN*);\nextern NCURSES_EXPORT(int)      _nc_outc_wrapper(SCREEN*,int);\n\n#if USE_REENTRANT\nextern NCURSES_EXPORT(int)       NCURSES_SP_NAME(_nc_TABSIZE)(SCREEN*);\nextern NCURSES_EXPORT(char *)    NCURSES_SP_NAME(longname)(SCREEN*);\n#endif\n\n#if NCURSES_EXT_FUNCS\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_set_tabsize)(SCREEN*, int);\n#endif\n\n/*\n * We put the safe versions of various calls here as they are not published\n * part of the API up to now\n */\nextern NCURSES_EXPORT(TERMINAL*) NCURSES_SP_NAME(_nc_get_cur_term) (SCREEN *sp);\nextern NCURSES_EXPORT(WINDOW *) NCURSES_SP_NAME(_nc_makenew) (SCREEN*, int, int, int, int, int);\nextern NCURSES_EXPORT(bool)     NCURSES_SP_NAME(_nc_reset_colors)(SCREEN*);\nextern NCURSES_EXPORT(char *)   NCURSES_SP_NAME(_nc_printf_string)(SCREEN*, const char *, va_list);\nextern NCURSES_EXPORT(chtype)   NCURSES_SP_NAME(_nc_acs_char)(SCREEN*,int);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_curs_set)(SCREEN*,int);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_get_tty_mode)(SCREEN*,TTY*);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_mcprint)(SCREEN*,char*, int);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_msec_cost)(SCREEN*, const char *, int);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_outch)(SCREEN*, int);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_putp)(SCREEN*, const char *, const char*);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_putp_flush)(SCREEN*, const char *, const char *);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_resetty)(SCREEN*);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_resize_term)(SCREEN*,int,int);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_ripoffline)(SCREEN*, int, int (*)(WINDOW *,int));\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_savetty)(SCREEN*);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_scr_init)(SCREEN*,const char*);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_scr_restore)(SCREEN*, const char*);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_scrolln)(SCREEN*, int, int, int, int);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_set_tty_mode)(SCREEN*, TTY*);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_setupscreen)(SCREEN**, int, int, FILE *, bool, int);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_tgetent)(SCREEN*,char*,const char *);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_tigetnum)(SCREEN*,NCURSES_CONST char*);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_vid_attr)(SCREEN *, attr_t, short, void *);\nextern NCURSES_EXPORT(int)      NCURSES_SP_NAME(_nc_vidputs)(SCREEN*,chtype,int(*) (SCREEN*, int));\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_do_color)(SCREEN*, short, short, bool, NCURSES_SP_OUTC);\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_do_xmc_glitch)(SCREEN*, attr_t);\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_flush)(SCREEN*);\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_free_and_exit)(SCREEN*, int) GCC_NORETURN;\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_freeall)(SCREEN*);\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_hash_map)(SCREEN*);\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_init_acs)(SCREEN*);\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_make_oldhash)(SCREEN*, int i);\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_mvcur_init)(SCREEN*);\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_mvcur_resume)(SCREEN*);\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_mvcur_wrap)(SCREEN*);\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_screen_init)(SCREEN*);\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_screen_resume)(SCREEN*);\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_screen_wrap)(SCREEN*);\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_scroll_oldhash)(SCREEN*, int n, int top, int bot);\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_scroll_optimize)(SCREEN*);\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_set_buffer)(SCREEN*, FILE *, bool);\n\nextern NCURSES_EXPORT(void)     _nc_cookie_init(SCREEN *sp);\n\n#if defined(TRACE) || defined(SCROLLDEBUG) || defined(HASHDEBUG)\nextern NCURSES_EXPORT(void)     NCURSES_SP_NAME(_nc_linedump)(SCREEN*);\n#endif\n\n#if USE_WIDEC_SUPPORT\nextern NCURSES_EXPORT(wchar_t *) NCURSES_SP_NAME(_nc_wunctrl)(SCREEN*, cchar_t *);\n#endif\n\n#endif /* NCURSES_SP_FUNCS */\n\n#if NCURSES_SP_FUNCS\n\n#define safe_keyname NCURSES_SP_NAME(keyname)\n#define safe_unctrl  NCURSES_SP_NAME(unctrl)\n#define safe_ungetch NCURSES_SP_NAME(ungetch)\n\n#else\n\n#define safe_keyname _nc_keyname\n#define safe_unctrl  _nc_unctrl\n#define safe_ungetch _nc_ungetch\n\nextern NCURSES_EXPORT(NCURSES_CONST char *) _nc_keyname (SCREEN *, int);\nextern NCURSES_EXPORT(int) _nc_ungetch (SCREEN *, int);\nextern NCURSES_EXPORT(NCURSES_CONST char *) _nc_unctrl (SCREEN *, chtype);\n\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n\n/* *INDENT-ON* */\n\n#endif /* CURSES_PRIV_H */\n",
        "/tmp/vanessa/spack-stage/spack-stage-ncurses-5.9-m7x2c5wpyxggrkhyvx74zvincghhkhvg/spack-src/ncurses/base/lib_mouse.c": "/****************************************************************************\n * Copyright (c) 1998-2010,2011 Free Software Foundation, Inc.              *\n *                                                                          *\n * Permission is hereby granted, free of charge, to any person obtaining a  *\n * copy of this software and associated documentation files (the            *\n * \"Software\"), to deal in the Software without restriction, including      *\n * without limitation the rights to use, copy, modify, merge, publish,      *\n * distribute, distribute with modifications, sublicense, and/or sell       *\n * copies of the Software, and to permit persons to whom the Software is    *\n * furnished to do so, subject to the following conditions:                 *\n *                                                                          *\n * The above copyright notice and this permission notice shall be included  *\n * in all copies or substantial portions of the Software.                   *\n *                                                                          *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *\n * IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *\n * THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *\n *                                                                          *\n * Except as contained in this notice, the name(s) of the above copyright   *\n * holders shall not be used in advertising or otherwise to promote the     *\n * sale, use or other dealings in this Software without prior written       *\n * authorization.                                                           *\n ****************************************************************************/\n\n/****************************************************************************\n *  Author: Zeyd M. Ben-Halim <zmbenhal@netcom.com> 1992,1995               *\n *     and: Eric S. Raymond <esr@snark.thyrsus.com>                         *\n *     and: Thomas E. Dickey                        1996-on                 *\n *     and: Juergen Pfeifer                         2008                    *\n ****************************************************************************/\n\n/*\n * This module is intended to encapsulate ncurses's interface to pointing\n * devices.\n *\n * The primary method used is xterm's internal mouse-tracking facility.\n * Additional methods depend on the platform:\n *\tAlessandro Rubini's GPM server (Linux)\n *\tsysmouse (FreeBSD)\n *\tspecial-purpose mouse interface for OS/2 EMX.\n *\n * Notes for implementors of new mouse-interface methods:\n *\n * The code is logically split into a lower level that accepts event reports\n * in a device-dependent format and an upper level that parses mouse gestures\n * and filters events.  The mediating data structure is a circular queue of\n * MEVENT structures.\n *\n * Functionally, the lower level's job is to pick up primitive events and\n * put them on the circular queue.  This can happen in one of two ways:\n * either (a) _nc_mouse_event() detects a series of incoming mouse reports\n * and queues them, or (b) code in lib_getch.c detects the kmous prefix in\n * the keyboard input stream and calls _nc_mouse_inline to queue up a series\n * of adjacent mouse reports.\n *\n * In either case, _nc_mouse_parse() should be called after the series is\n * accepted to parse the digested mouse reports (low-level MEVENTs) into\n * a gesture (a high-level or composite MEVENT).\n *\n * Don't be too shy about adding new event types or modifiers, if you can find\n * room for them in the 32-bit mask.  The API is written so that users get\n * feedback on which theoretical event types they won't see when they call\n * mousemask. There's one bit per button (the RESERVED_EVENT bit) not being\n * used yet, and a couple of bits open at the high end.\n */\n\n#ifdef __EMX__\n#  include <io.h>\n#  define  INCL_DOS\n#  define  INCL_VIO\n#  define  INCL_KBD\n#  define  INCL_MOU\n#  define  INCL_DOSPROCESS\n#  include <os2.h>\t\t/* Need to include before the others */\n#endif\n\n#include <curses.priv.h>\n\n#ifndef CUR\n#define CUR SP_TERMTYPE\n#endif\n\nMODULE_ID(\"$Id: lib_mouse.c,v 1.121 2011/01/22 19:47:47 tom Exp $\")\n\n#include <tic.h>\n\n#if USE_GPM_SUPPORT\n#include <linux/keyboard.h>\t/* defines KG_* macros */\n\n#ifdef HAVE_LIBDL\n/* use dynamic loader to avoid linkage dependency */\n#include <dlfcn.h>\n\n#ifdef RTLD_NOW\n#define my_RTLD RTLD_NOW\n#else\n#ifdef RTLD_LAZY\n#define my_RTLD RTLD_LAZY\n#else\nmake an error\n#endif\n#endif\t\t\t\t/* RTLD_NOW */\n#endif\t\t\t\t/* HAVE_LIBDL */\n\n#endif\t\t\t\t/* USE_GPM_SUPPORT */\n\n#if USE_SYSMOUSE\n#undef buttons\t\t\t/* symbol conflict in consio.h */\n#undef mouse_info\t\t/* symbol conflict in consio.h */\n#include <osreldate.h>\n#if (__FreeBSD_version >= 400017)\n#include <sys/consio.h>\n#include <sys/fbio.h>\n#else\n#include <machine/console.h>\n#endif\n#endif\t\t\t\t/* use_SYSMOUSE */\n\n#define MY_TRACE TRACE_ICALLS|TRACE_IEVENT\n\n#define\tMASK_RELEASE(x)\t\t(mmask_t) NCURSES_MOUSE_MASK(x, 001)\n#define\tMASK_PRESS(x)\t\t(mmask_t) NCURSES_MOUSE_MASK(x, 002)\n#define\tMASK_CLICK(x)\t\t(mmask_t) NCURSES_MOUSE_MASK(x, 004)\n#define\tMASK_DOUBLE_CLICK(x)\t(mmask_t) NCURSES_MOUSE_MASK(x, 010)\n#define\tMASK_TRIPLE_CLICK(x)\t(mmask_t) NCURSES_MOUSE_MASK(x, 020)\n#define\tMASK_RESERVED_EVENT(x)\t(mmask_t) NCURSES_MOUSE_MASK(x, 040)\n\n#if NCURSES_MOUSE_VERSION == 1\n#define BUTTON_CLICKED        (BUTTON1_CLICKED        | BUTTON2_CLICKED        | BUTTON3_CLICKED        | BUTTON4_CLICKED)\n#define BUTTON_PRESSED        (BUTTON1_PRESSED        | BUTTON2_PRESSED        | BUTTON3_PRESSED        | BUTTON4_PRESSED)\n#define BUTTON_RELEASED       (BUTTON1_RELEASED       | BUTTON2_RELEASED       | BUTTON3_RELEASED       | BUTTON4_RELEASED)\n#define BUTTON_DOUBLE_CLICKED (BUTTON1_DOUBLE_CLICKED | BUTTON2_DOUBLE_CLICKED | BUTTON3_DOUBLE_CLICKED | BUTTON4_DOUBLE_CLICKED)\n#define BUTTON_TRIPLE_CLICKED (BUTTON1_TRIPLE_CLICKED | BUTTON2_TRIPLE_CLICKED | BUTTON3_TRIPLE_CLICKED | BUTTON4_TRIPLE_CLICKED)\n#define MAX_BUTTONS  4\n#else\n#define BUTTON_CLICKED        (BUTTON1_CLICKED        | BUTTON2_CLICKED        | BUTTON3_CLICKED        | BUTTON4_CLICKED        | BUTTON5_CLICKED)\n#define BUTTON_PRESSED        (BUTTON1_PRESSED        | BUTTON2_PRESSED        | BUTTON3_PRESSED        | BUTTON4_PRESSED        | BUTTON5_PRESSED)\n#define BUTTON_RELEASED       (BUTTON1_RELEASED       | BUTTON2_RELEASED       | BUTTON3_RELEASED       | BUTTON4_RELEASED       | BUTTON5_RELEASED)\n#define BUTTON_DOUBLE_CLICKED (BUTTON1_DOUBLE_CLICKED | BUTTON2_DOUBLE_CLICKED | BUTTON3_DOUBLE_CLICKED | BUTTON4_DOUBLE_CLICKED | BUTTON5_DOUBLE_CLICKED)\n#define BUTTON_TRIPLE_CLICKED (BUTTON1_TRIPLE_CLICKED | BUTTON2_TRIPLE_CLICKED | BUTTON3_TRIPLE_CLICKED | BUTTON4_TRIPLE_CLICKED | BUTTON5_TRIPLE_CLICKED)\n#define MAX_BUTTONS  5\n#endif\n\n#define INVALID_EVENT\t-1\n#define NORMAL_EVENT\t0\n\n#if USE_GPM_SUPPORT\n\n#ifndef LIBGPM_SONAME\n#define LIBGPM_SONAME \"libgpm.so\"\n#endif\n\n#define GET_DLSYM(name) (my_##name = (TYPE_##name) dlsym(sp->_dlopen_gpm, #name))\n\n#endif\t\t\t\t/* USE_GPM_SUPPORT */\n\nstatic bool _nc_mouse_parse(SCREEN *, int);\nstatic void _nc_mouse_resume(SCREEN *);\nstatic void _nc_mouse_wrap(SCREEN *);\n\n/* maintain a circular list of mouse events */\n\n#define FirstEV(sp)\t((sp)->_mouse_events)\n#define LastEV(sp)\t((sp)->_mouse_events + EV_MAX - 1)\n\n#undef  NEXT\n#define NEXT(ep)\t((ep >= LastEV(SP_PARM)) \\\n\t\t\t ? FirstEV(SP_PARM) \\\n\t\t\t : ep + 1)\n\n#undef  PREV\n#define PREV(ep)\t((ep <= FirstEV(SP_PARM)) \\\n\t\t\t ? LastEV(SP_PARM) \\\n\t\t\t : ep - 1)\n\n#define IndexEV(sp, ep)\t(ep - FirstEV(sp))\n\n#define RunParams(sp, eventp, runp) \\\n\t\t(long) IndexEV(sp, runp), \\\n\t\t(long) (IndexEV(sp, eventp) + (EV_MAX - 1)) % EV_MAX\n\n#ifdef TRACE\nstatic void\n_trace_slot(SCREEN *sp, const char *tag)\n{\n    MEVENT *ep;\n\n    _tracef(\"%s\", tag);\n\n    for (ep = FirstEV(sp); ep <= LastEV(sp); ep++)\n\t_tracef(\"mouse event queue slot %ld = %s\",\n\t\t(long) IndexEV(sp, ep),\n\t\t_nc_tracemouse(sp, ep));\n}\n#endif\n\n#if USE_EMX_MOUSE\n\n#  define TOP_ROW          0\n#  define LEFT_COL         0\n\n#  define M_FD(sp) sp->_mouse_fd\n\nstatic void\nwrite_event(SCREEN *sp, int down, int button, int x, int y)\n{\n    char buf[6];\n    unsigned long ignore;\n\n    strncpy(buf, key_mouse, 3);\t/* should be \"\\033[M\" */\n    buf[3] = ' ' + (button - 1) + (down ? 0 : 0x40);\n    buf[4] = ' ' + x - LEFT_COL + 1;\n    buf[5] = ' ' + y - TOP_ROW + 1;\n    DosWrite(sp->_emxmouse_wfd, buf, 6, &ignore);\n}\n\nstatic void\nmouse_server(unsigned long param)\n{\n    SCREEN *sp = (SCREEN *) param;\n    unsigned short fWait = MOU_WAIT;\n    /* NOPTRRECT mourt = { 0,0,24,79 }; */\n    MOUEVENTINFO mouev;\n    HMOU hmou;\n    unsigned short mask = MOUSE_BN1_DOWN | MOUSE_BN2_DOWN | MOUSE_BN3_DOWN;\n    int nbuttons = 3;\n    int oldstate = 0;\n    char err[80];\n    unsigned long rc;\n\n    /* open the handle for the mouse */\n    if (MouOpen(NULL, &hmou) == 0) {\n\trc = MouSetEventMask(&mask, hmou);\n\tif (rc) {\t\t/* retry with 2 buttons */\n\t    mask = MOUSE_BN1_DOWN | MOUSE_BN2_DOWN;\n\t    rc = MouSetEventMask(&mask, hmou);\n\t    nbuttons = 2;\n\t}\n\tif (rc == 0 && MouDrawPtr(hmou) == 0) {\n\t    for (;;) {\n\t\t/* sit and wait on the event queue */\n\t\trc = MouReadEventQue(&mouev, &fWait, hmou);\n\t\tif (rc) {\n\t\t    sprintf(err, \"Error reading mouse queue, rc=%lu.\\r\\n\", rc);\n\t\t    break;\n\t\t}\n\t\tif (!sp->_emxmouse_activated)\n\t\t    goto finish;\n\n\t\t/*\n\t\t * OS/2 numbers a 3-button mouse inconsistently from other\n\t\t * platforms:\n\t\t *      1 = left\n\t\t *      2 = right\n\t\t *      3 = middle.\n\t\t */\n\t\tif ((mouev.fs ^ oldstate) & MOUSE_BN1_DOWN)\n\t\t    write_event(sp, mouev.fs & MOUSE_BN1_DOWN,\n\t\t\t\tsp->_emxmouse_buttons[1], mouev.col, mouev.row);\n\t\tif ((mouev.fs ^ oldstate) & MOUSE_BN2_DOWN)\n\t\t    write_event(sp, mouev.fs & MOUSE_BN2_DOWN,\n\t\t\t\tsp->_emxmouse_buttons[3], mouev.col, mouev.row);\n\t\tif ((mouev.fs ^ oldstate) & MOUSE_BN3_DOWN)\n\t\t    write_event(sp, mouev.fs & MOUSE_BN3_DOWN,\n\t\t\t\tsp->_emxmouse_buttons[2], mouev.col, mouev.row);\n\n\t      finish:\n\t\toldstate = mouev.fs;\n\t    }\n\t} else\n\t    sprintf(err, \"Error setting event mask, buttons=%d, rc=%lu.\\r\\n\",\n\t\t    nbuttons, rc);\n\n\tDosWrite(2, err, strlen(err), &rc);\n\tMouClose(hmou);\n    }\n    DosExit(EXIT_THREAD, 0L);\n}\n\n#endif /* USE_EMX_MOUSE */\n\n#if USE_SYSMOUSE\nstatic void\nsysmouse_server(SCREEN *sp)\n{\n    struct mouse_info the_mouse;\n    MEVENT *work;\n\n    the_mouse.operation = MOUSE_GETINFO;\n    if (sp != 0\n\t&& sp->_mouse_fd >= 0\n\t&& sp->_sysmouse_tail < FIFO_SIZE\n\t&& ioctl(sp->_mouse_fd, CONS_MOUSECTL, &the_mouse) != -1) {\n\n\tif (sp->_sysmouse_head > sp->_sysmouse_tail) {\n\t    sp->_sysmouse_tail = 0;\n\t    sp->_sysmouse_head = 0;\n\t}\n\twork = &(sp->_sysmouse_fifo[sp->_sysmouse_tail]);\n\tmemset(work, 0, sizeof(*work));\n\twork->id = NORMAL_EVENT;\t/* there's only one mouse... */\n\n\tsp->_sysmouse_old_buttons = sp->_sysmouse_new_buttons;\n\tsp->_sysmouse_new_buttons = the_mouse.u.data.buttons & 0x7;\n\n\tif (sp->_sysmouse_new_buttons) {\n\t    if (sp->_sysmouse_new_buttons & 1)\n\t\twork->bstate |= BUTTON1_PRESSED;\n\t    if (sp->_sysmouse_new_buttons & 2)\n\t\twork->bstate |= BUTTON2_PRESSED;\n\t    if (sp->_sysmouse_new_buttons & 4)\n\t\twork->bstate |= BUTTON3_PRESSED;\n\t} else {\n\t    if (sp->_sysmouse_old_buttons & 1)\n\t\twork->bstate |= BUTTON1_RELEASED;\n\t    if (sp->_sysmouse_old_buttons & 2)\n\t\twork->bstate |= BUTTON2_RELEASED;\n\t    if (sp->_sysmouse_old_buttons & 4)\n\t\twork->bstate |= BUTTON3_RELEASED;\n\t}\n\n\t/* for cosmetic bug in syscons.c on FreeBSD 3.[34] */\n\tthe_mouse.operation = MOUSE_HIDE;\n\tioctl(sp->_mouse_fd, CONS_MOUSECTL, &the_mouse);\n\tthe_mouse.operation = MOUSE_SHOW;\n\tioctl(sp->_mouse_fd, CONS_MOUSECTL, &the_mouse);\n\n\t/*\n\t * We're only interested if the button is pressed or released.\n\t * FIXME: implement continuous event-tracking.\n\t */\n\tif (sp->_sysmouse_new_buttons != sp->_sysmouse_old_buttons) {\n\t    sp->_sysmouse_tail += 1;\n\t}\n\twork->x = the_mouse.u.data.x / sp->_sysmouse_char_width;\n\twork->y = the_mouse.u.data.y / sp->_sysmouse_char_height;\n    }\n}\n\nstatic void\nhandle_sysmouse(int sig GCC_UNUSED)\n{\n    sysmouse_server(CURRENT_SCREEN);\n}\n#endif /* USE_SYSMOUSE */\n\n#ifndef USE_TERM_DRIVER\n#define xterm_kmous \"\\033[M\"\n\nstatic void\ninit_xterm_mouse(SCREEN *sp)\n{\n    sp->_mouse_type = M_XTERM;\n    sp->_mouse_xtermcap = tigetstr(\"XM\");\n    if (!VALID_STRING(sp->_mouse_xtermcap))\n\tsp->_mouse_xtermcap = \"\\033[?1000%?%p1%{1}%=%th%el%;\";\n}\n#endif\n\nstatic void\nenable_xterm_mouse(SCREEN *sp, int enable)\n{\n#if USE_EMX_MOUSE\n    sp->_emxmouse_activated = enable;\n#else\n    NCURSES_SP_NAME(_nc_putp) (NCURSES_SP_ARGx\n\t\t\t       \"xterm-mouse\",\n\t\t\t       TPARM_1(sp->_mouse_xtermcap, enable));\n#endif\n    sp->_mouse_active = enable;\n}\n\n#if USE_GPM_SUPPORT\nstatic bool\nallow_gpm_mouse(void)\n{\n    bool result = FALSE;\n\n    /* GPM does printf's without checking if stdout is a terminal */\n    if (isatty(fileno(stdout))) {\n\tchar *list = getenv(\"NCURSES_GPM_TERMS\");\n\tchar *env = getenv(\"TERM\");\n\tif (list != 0) {\n\t    if (env != 0) {\n\t\tresult = _nc_name_match(list, env, \"|:\");\n\t    }\n\t} else {\n\t    /* GPM checks the beginning of the $TERM variable to decide if it\n\t     * should pass xterm events through.  There is no real advantage in\n\t     * allowing GPM to do this.  Recent versions relax that check, and\n\t     * pretend that GPM can work with any terminal having the kmous\n\t     * capability.  Perhaps that works for someone.  If so, they can\n\t     * set the environment variable (above).\n\t     */\n\t    if (env != 0 && strstr(env, \"linux\") != 0) {\n\t\tresult = TRUE;\n\t    }\n\t}\n    }\n    return result;\n}\n\n#ifdef HAVE_LIBDL\nstatic void\nunload_gpm_library(SCREEN *sp)\n{\n    if (sp->_dlopen_gpm != 0) {\n\tT((\"unload GPM library\"));\n\tsp->_mouse_gpm_loaded = FALSE;\n\tsp->_mouse_fd = -1;\n\tdlclose(sp->_dlopen_gpm);\n\tsp->_dlopen_gpm = 0;\n    }\n}\n\nstatic void\nload_gpm_library(SCREEN *sp)\n{\n    sp->_mouse_gpm_found = FALSE;\n    if ((sp->_dlopen_gpm = dlopen(LIBGPM_SONAME, my_RTLD)) != 0) {\n\tif (GET_DLSYM(gpm_fd) == 0 ||\n\t    GET_DLSYM(Gpm_Open) == 0 ||\n\t    GET_DLSYM(Gpm_Close) == 0 ||\n\t    GET_DLSYM(Gpm_GetEvent) == 0) {\n\t    T((\"GPM initialization failed: %s\", dlerror()));\n\t    unload_gpm_library(sp);\n\t} else {\n\t    sp->_mouse_gpm_found = TRUE;\n\t    sp->_mouse_gpm_loaded = TRUE;\n\t}\n    }\n}\n#endif\n\nstatic bool\nenable_gpm_mouse(SCREEN *sp, bool enable)\n{\n    bool result;\n\n    T((T_CALLED(\"enable_gpm_mouse(%d)\"), enable));\n\n    if (enable && !sp->_mouse_active) {\n#ifdef HAVE_LIBDL\n\tif (sp->_mouse_gpm_found && !sp->_mouse_gpm_loaded) {\n\t    load_gpm_library(sp);\n\t}\n#endif\n\tif (sp->_mouse_gpm_loaded) {\n\t    int code;\n\n\t    /* GPM: initialize connection to gpm server */\n\t    sp->_mouse_gpm_connect.eventMask = GPM_DOWN | GPM_UP;\n\t    sp->_mouse_gpm_connect.defaultMask =\n\t\t(unsigned short) (~(sp->_mouse_gpm_connect.eventMask | GPM_HARD));\n\t    sp->_mouse_gpm_connect.minMod = 0;\n\t    sp->_mouse_gpm_connect.maxMod =\n\t\t(unsigned short) (~((1 << KG_SHIFT) |\n\t\t\t\t    (1 << KG_SHIFTL) |\n\t\t\t\t    (1 << KG_SHIFTR)));\n\t    /*\n\t     * Note: GPM hardcodes \\E[?1001s and \\E[?1000h during its open.\n\t     * The former is recognized by wscons (SunOS), and the latter by\n\t     * xterm.  Those will not show up in ncurses' traces.\n\t     */\n\t    code = my_Gpm_Open(&sp->_mouse_gpm_connect, 0);\n\t    result = (code >= 0);\n\n\t    /*\n\t     * GPM can return a -2 if it is trying to do something with xterm.\n\t     * Ignore that, since it conflicts with our use of stdin.\n\t     */\n\t    if (code == -2) {\n\t\tmy_Gpm_Close();\n\t    }\n\t} else {\n\t    result = FALSE;\n\t}\n\tsp->_mouse_active = result;\n\tT((\"GPM open %s\", result ? \"succeeded\" : \"failed\"));\n    } else {\n\tif (!enable && sp->_mouse_active) {\n\t    /* GPM: close connection to gpm server */\n\t    my_Gpm_Close();\n\t    sp->_mouse_active = FALSE;\n\t    T((\"GPM closed\"));\n\t}\n\tresult = enable;\n    }\n#ifdef HAVE_LIBDL\n    if (!result) {\n\tunload_gpm_library(sp);\n    }\n#endif\n    returnBool(result);\n}\n#endif /* USE_GPM_SUPPORT */\n\nstatic void\ninitialize_mousetype(SCREEN *sp)\n{\n    T((T_CALLED(\"initialize_mousetype()\")));\n\n    /* Try gpm first, because gpm may be configured to run in xterm */\n#if USE_GPM_SUPPORT\n    if (allow_gpm_mouse()) {\n\tif (!sp->_mouse_gpm_loaded) {\n#ifdef HAVE_LIBDL\n\t    load_gpm_library(sp);\n#else /* !HAVE_LIBDL */\n\t    sp->_mouse_gpm_found = TRUE;\n\t    sp->_mouse_gpm_loaded = TRUE;\n#endif\n\t}\n\n\t/*\n\t * The gpm_fd file-descriptor may be negative (xterm).  So we have to\n\t * maintain our notion of whether the mouse connection is active\n\t * without testing the file-descriptor.\n\t */\n\tif (sp->_mouse_gpm_found && enable_gpm_mouse(sp, TRUE)) {\n\t    sp->_mouse_type = M_GPM;\n\t    sp->_mouse_fd = *(my_gpm_fd);\n\t    T((\"GPM mouse_fd %d\", sp->_mouse_fd));\n\t    returnVoid;\n\t}\n    }\n#endif /* USE_GPM_SUPPORT */\n\n    /* OS/2 VIO */\n#if USE_EMX_MOUSE\n    if (!sp->_emxmouse_thread\n\t&& strstr(TerminalOf(sp)->type.term_names, \"xterm\") == 0\n\t&& key_mouse) {\n\tint handles[2];\n\n\tif (pipe(handles) < 0) {\n\t    perror(\"mouse pipe error\");\n\t    returnVoid;\n\t} else {\n\t    int rc;\n\n\t    if (!sp->_emxmouse_buttons[0]) {\n\t\tchar *s = getenv(\"MOUSE_BUTTONS_123\");\n\n\t\tsp->_emxmouse_buttons[0] = 1;\n\t\tif (s && strlen(s) >= 3) {\n\t\t    sp->_emxmouse_buttons[1] = s[0] - '0';\n\t\t    sp->_emxmouse_buttons[2] = s[1] - '0';\n\t\t    sp->_emxmouse_buttons[3] = s[2] - '0';\n\t\t} else {\n\t\t    sp->_emxmouse_buttons[1] = 1;\n\t\t    sp->_emxmouse_buttons[2] = 3;\n\t\t    sp->_emxmouse_buttons[3] = 2;\n\t\t}\n\t    }\n\t    sp->_emxmouse_wfd = handles[1];\n\t    M_FD(sp) = handles[0];\n\t    /* Needed? */\n\t    setmode(handles[0], O_BINARY);\n\t    setmode(handles[1], O_BINARY);\n\t    /* Do not use CRT functions, we may single-threaded. */\n\t    rc = DosCreateThread((unsigned long *) &sp->_emxmouse_thread,\n\t\t\t\t mouse_server, (long) sp, 0, 8192);\n\t    if (rc) {\n\t\tprintf(\"mouse thread error %d=%#x\", rc, rc);\n\t    } else {\n\t\tsp->_mouse_type = M_XTERM;\n\t    }\n\t    returnVoid;\n\t}\n    }\n#endif /* USE_EMX_MOUSE */\n\n#if USE_SYSMOUSE\n    {\n\tstruct mouse_info the_mouse;\n\tchar *the_device = 0;\n\n\tif (isatty(sp->_ifd))\n\t    the_device = ttyname(sp->_ifd);\n\tif (the_device == 0)\n\t    the_device = \"/dev/tty\";\n\n\tsp->_mouse_fd = open(the_device, O_RDWR);\n\n\tif (sp->_mouse_fd >= 0) {\n\t    /*\n\t     * sysmouse does not have a usable user interface for obtaining\n\t     * mouse events.  The logical way to proceed (reading data on a\n\t     * stream) only works if one opens the device as root.  Even in\n\t     * that mode, careful examination shows we lose events\n\t     * occasionally.  The interface provided for user programs is to\n\t     * establish a signal handler.  really.\n\t     *\n\t     * Take over SIGUSR2 for this purpose since SIGUSR1 is more\n\t     * likely to be used by an application.  getch() will have to\n\t     * handle the misleading EINTR's.\n\t     */\n\t    signal(SIGUSR2, SIG_IGN);\n\t    the_mouse.operation = MOUSE_MODE;\n\t    the_mouse.u.mode.mode = 0;\n\t    the_mouse.u.mode.signal = SIGUSR2;\n\t    if (ioctl(sp->_mouse_fd, CONS_MOUSECTL, &the_mouse) != -1) {\n\t\tsignal(SIGUSR2, handle_sysmouse);\n\t\tthe_mouse.operation = MOUSE_SHOW;\n\t\tioctl(sp->_mouse_fd, CONS_MOUSECTL, &the_mouse);\n\n#if defined(FBIO_MODEINFO) || defined(CONS_MODEINFO)\t/* FreeBSD > 2.x */\n\t\t{\n#ifndef FBIO_GETMODE\t\t/* FreeBSD 3.x */\n#define FBIO_GETMODE    CONS_GET\n#define FBIO_MODEINFO   CONS_MODEINFO\n#endif /* FBIO_GETMODE */\n\t\t    video_info_t the_video;\n\n\t\t    if (ioctl(sp->_mouse_fd,\n\t\t\t      FBIO_GETMODE,\n\t\t\t      &the_video.vi_mode) != -1\n\t\t\t&& ioctl(sp->_mouse_fd,\n\t\t\t\t FBIO_MODEINFO,\n\t\t\t\t &the_video) != -1) {\n\t\t\tsp->_sysmouse_char_width = the_video.vi_cwidth;\n\t\t\tsp->_sysmouse_char_height = the_video.vi_cheight;\n\t\t    }\n\t\t}\n#endif /* defined(FBIO_MODEINFO) || defined(CONS_MODEINFO) */\n\n\t\tif (sp->_sysmouse_char_width <= 0)\n\t\t    sp->_sysmouse_char_width = 8;\n\t\tif (sp->_sysmouse_char_height <= 0)\n\t\t    sp->_sysmouse_char_height = 16;\n\t\tsp->_mouse_type = M_SYSMOUSE;\n\t\treturnVoid;\n\t    }\n\t}\n    }\n#endif /* USE_SYSMOUSE */\n\n#ifdef USE_TERM_DRIVER\n    CallDriver(sp, initmouse);\n#else\n    /* we know how to recognize mouse events under \"xterm\" */\n    if (key_mouse != 0) {\n\tif (!strcmp(key_mouse, xterm_kmous)\n\t    || strstr(TerminalOf(sp)->type.term_names, \"xterm\") != 0) {\n\t    init_xterm_mouse(sp);\n\t}\n    } else if (strstr(TerminalOf(sp)->type.term_names, \"xterm\") != 0) {\n\tif (_nc_add_to_try(&(sp->_keytry), xterm_kmous, KEY_MOUSE) == OK)\n\t    init_xterm_mouse(sp);\n    }\n#endif\n\n    returnVoid;\n}\n\nstatic bool\n_nc_mouse_init(SCREEN *sp)\n/* initialize the mouse */\n{\n    bool result = FALSE;\n    int i;\n\n    if (sp != 0) {\n\tif (!sp->_mouse_initialized) {\n\t    sp->_mouse_initialized = TRUE;\n\n\t    TR(MY_TRACE, (\"_nc_mouse_init() called\"));\n\n\t    sp->_mouse_eventp = FirstEV(sp);\n\t    for (i = 0; i < EV_MAX; i++)\n\t\tsp->_mouse_events[i].id = INVALID_EVENT;\n\n\t    initialize_mousetype(sp);\n\n\t    T((\"_nc_mouse_init() set mousetype to %d\", sp->_mouse_type));\n\t}\n\tresult = sp->_mouse_initialized;\n    }\n    return result;\n}\n\n/*\n * Query to see if there is a pending mouse event.  This is called from\n * fifo_push() in lib_getch.c\n */\nstatic bool\n_nc_mouse_event(SCREEN *sp)\n{\n    MEVENT *eventp = sp->_mouse_eventp;\n    bool result = FALSE;\n\n    (void) eventp;\n\n    switch (sp->_mouse_type) {\n    case M_XTERM:\n\t/* xterm: never have to query, mouse events are in the keyboard stream */\n#if USE_EMX_MOUSE\n\t{\n\t    char kbuf[3];\n\n\t    int i, res = read(M_FD(sp), &kbuf, 3);\t/* Eat the prefix */\n\t    if (res != 3)\n\t\tprintf(\"Got %d chars instead of 3 for prefix.\\n\", res);\n\t    for (i = 0; i < res; i++) {\n\t\tif (kbuf[i] != key_mouse[i])\n\t\t    printf(\"Got char %d instead of %d for prefix.\\n\",\n\t\t\t   (int) kbuf[i], (int) key_mouse[i]);\n\t    }\n\t    result = TRUE;\n\t}\n#endif /* USE_EMX_MOUSE */\n\tbreak;\n\n#if USE_GPM_SUPPORT\n    case M_GPM:\n\tif (sp->_mouse_fd >= 0) {\n\t    /* query server for event, return TRUE if we find one */\n\t    Gpm_Event ev;\n\n\t    switch (my_Gpm_GetEvent(&ev)) {\n\t    case 0:\n\t\t/* Connection closed, drop the mouse. */\n\t\tsp->_mouse_fd = -1;\n\t\tbreak;\n\t    case 1:\n\t\t/* there's only one mouse... */\n\t\teventp->id = NORMAL_EVENT;\n\n\t\teventp->bstate = 0;\n\t\tswitch (ev.type & 0x0f) {\n\t\tcase (GPM_DOWN):\n\t\t    if (ev.buttons & GPM_B_LEFT)\n\t\t\teventp->bstate |= BUTTON1_PRESSED;\n\t\t    if (ev.buttons & GPM_B_MIDDLE)\n\t\t\teventp->bstate |= BUTTON2_PRESSED;\n\t\t    if (ev.buttons & GPM_B_RIGHT)\n\t\t\teventp->bstate |= BUTTON3_PRESSED;\n\t\t    break;\n\t\tcase (GPM_UP):\n\t\t    if (ev.buttons & GPM_B_LEFT)\n\t\t\teventp->bstate |= BUTTON1_RELEASED;\n\t\t    if (ev.buttons & GPM_B_MIDDLE)\n\t\t\teventp->bstate |= BUTTON2_RELEASED;\n\t\t    if (ev.buttons & GPM_B_RIGHT)\n\t\t\teventp->bstate |= BUTTON3_RELEASED;\n\t\t    break;\n\t\tdefault:\n\t\t    break;\n\t\t}\n\n\t\teventp->x = ev.x - 1;\n\t\teventp->y = ev.y - 1;\n\t\teventp->z = 0;\n\n\t\t/* bump the next-free pointer into the circular list */\n\t\tsp->_mouse_eventp = NEXT(eventp);\n\t\tresult = TRUE;\n\t\tbreak;\n\t    }\n\t}\n\tbreak;\n#endif\n\n#if USE_SYSMOUSE\n    case M_SYSMOUSE:\n\tif (sp->_sysmouse_head < sp->_sysmouse_tail) {\n\t    *eventp = sp->_sysmouse_fifo[sp->_sysmouse_head];\n\n\t    /*\n\t     * Point the fifo-head to the next possible location.  If there\n\t     * are none, reset the indices.  This may be interrupted by the\n\t     * signal handler, doing essentially the same reset.\n\t     */\n\t    sp->_sysmouse_head += 1;\n\t    if (sp->_sysmouse_head == sp->_sysmouse_tail) {\n\t\tsp->_sysmouse_tail = 0;\n\t\tsp->_sysmouse_head = 0;\n\t    }\n\n\t    /* bump the next-free pointer into the circular list */\n\t    sp->_mouse_eventp = eventp = NEXT(eventp);\n\t    result = TRUE;\n\t}\n\tbreak;\n#endif /* USE_SYSMOUSE */\n\n#ifdef USE_TERM_DRIVER\n    case M_TERM_DRIVER:\n\twhile (sp->_drv_mouse_head < sp->_drv_mouse_tail) {\n\t    *eventp = sp->_drv_mouse_fifo[sp->_drv_mouse_head];\n\n\t    /*\n\t     * Point the fifo-head to the next possible location.  If there\n\t     * are none, reset the indices.\n\t     */\n\t    sp->_drv_mouse_head += 1;\n\t    if (sp->_drv_mouse_head == sp->_drv_mouse_tail) {\n\t\tsp->_drv_mouse_tail = 0;\n\t\tsp->_drv_mouse_head = 0;\n\t    }\n\n\t    /* bump the next-free pointer into the circular list */\n\t    sp->_mouse_eventp = eventp = NEXT(eventp);\n\t    result = TRUE;\n\t}\n\tbreak;\n#endif\n\n    case M_NONE:\n\tbreak;\n    }\n\n    return result;\t\t/* true if we found an event */\n}\n\nstatic bool\n_nc_mouse_inline(SCREEN *sp)\n/* mouse report received in the keyboard stream -- parse its info */\n{\n    int b;\n    bool result = FALSE;\n    MEVENT *eventp = sp->_mouse_eventp;\n\n    TR(MY_TRACE, (\"_nc_mouse_inline() called\"));\n\n    if (sp->_mouse_type == M_XTERM) {\n\tunsigned char kbuf[4];\n\tmmask_t prev;\n\tsize_t grabbed;\n\tint res;\n\n\t/* This code requires that your xterm entry contain the kmous\n\t * capability and that it be set to the \\E[M documented in the\n\t * Xterm Control Sequences reference.  This is how we\n\t * arrange for mouse events to be reported via a KEY_MOUSE\n\t * return value from wgetch().  After this value is received,\n\t * _nc_mouse_inline() gets called and is immediately\n\t * responsible for parsing the mouse status information\n\t * following the prefix.\n\t *\n\t * The following quotes from the ctrlseqs.ms document in the\n\t * X distribution, describing the X mouse tracking feature:\n\t *\n\t * Parameters for all mouse tracking escape sequences\n\t * generated by xterm encode numeric parameters in a single\n\t * character as value+040.  For example, !  is 1.\n\t *\n\t * On button press or release, xterm sends ESC [ M CbCxCy.\n\t * The low two bits of Cb encode button information: 0=MB1\n\t * pressed, 1=MB2 pressed, 2=MB3 pressed, 3=release.  The\n\t * upper bits encode what modifiers were down when the\n\t * button was pressed and are added together.  4=Shift,\n\t * 8=Meta, 16=Control.  Cx and Cy are the x and y coordinates\n\t * of the mouse event.  The upper left corner is (1,1).\n\t *\n\t * (End quote)  By the time we get here, we've eaten the\n\t * key prefix.  FYI, the loop below is necessary because\n\t * mouse click info isn't guaranteed to present as a\n\t * single clist item.\n\t *\n\t * Wheel mice may return buttons 4 and 5 when the wheel is turned.\n\t * We encode those as button presses.\n\t */\n# if USE_PTHREADS_EINTR\n#  if USE_WEAK_SYMBOLS\n\tif ((pthread_self) && (pthread_kill) && (pthread_equal))\n#  endif\n\t    _nc_globals.read_thread = pthread_self();\n# endif\n\tfor (grabbed = 0; grabbed < 3; grabbed += (size_t) res) {\n\n\t    /* For VIO mouse we add extra bit 64 to disambiguate button-up. */\n#if USE_EMX_MOUSE\n\t    res = (int) read(M_FD(sp) >= 0 ? M_FD(sp) : sp->_ifd, &kbuf, 3);\n#else\n\t    res = (int) read(sp->_ifd, kbuf + grabbed, 3 - grabbed);\n#endif\n\t    if (res == -1)\n\t\tbreak;\n\t}\n#if USE_PTHREADS_EINTR\n\t_nc_globals.read_thread = 0;\n#endif\n\tkbuf[3] = '\\0';\n\n\tTR(TRACE_IEVENT,\n\t   (\"_nc_mouse_inline sees the following xterm data: '%s'\", kbuf));\n\n\t/* there's only one mouse... */\n\teventp->id = NORMAL_EVENT;\n\n\t/* processing code goes here */\n\teventp->bstate = 0;\n\tprev = PREV(eventp)->bstate;\n\n#if USE_EMX_MOUSE\n#define PRESS_POSITION(n) \\\n\teventp->bstate = MASK_PRESS(n); \\\n\tif (kbuf[0] & 0x40) \\\n\t    eventp->bstate = MASK_RELEASE(n)\n#else\n#define PRESS_POSITION(n) \\\n\teventp->bstate = (mmask_t) (prev & MASK_PRESS(n) \\\n\t\t\t\t    ? REPORT_MOUSE_POSITION \\\n\t\t\t\t    : MASK_PRESS(n))\n#endif\n\n\tswitch (kbuf[0] & 0x3) {\n\tcase 0x0:\n\t    if (kbuf[0] & 64)\n\t\teventp->bstate = MASK_PRESS(4);\n\t    else\n\t\tPRESS_POSITION(1);\n\t    break;\n\n\tcase 0x1:\n#if NCURSES_MOUSE_VERSION == 2\n\t    if (kbuf[0] & 64)\n\t\teventp->bstate = MASK_PRESS(5);\n\t    else\n#endif\n\t\tPRESS_POSITION(2);\n\t    break;\n\n\tcase 0x2:\n\t    PRESS_POSITION(3);\n\t    break;\n\n\tcase 0x3:\n\t    /*\n\t     * Release events aren't reported for individual buttons, just for\n\t     * the button set as a whole.  However, because there are normally\n\t     * no mouse events under xterm that intervene between press and\n\t     * release, we can infer the button actually released by looking at\n\t     * the previous event.\n\t     */\n\t    if (prev & (BUTTON_PRESSED | BUTTON_RELEASED)) {\n\t\teventp->bstate = BUTTON_RELEASED;\n\t\tfor (b = 1; b <= MAX_BUTTONS; ++b) {\n\t\t    if (!(prev & MASK_PRESS(b)))\n\t\t\teventp->bstate &= ~MASK_RELEASE(b);\n\t\t}\n\t    } else {\n\t\t/*\n\t\t * XFree86 xterm will return a stream of release-events to\n\t\t * let the application know where the mouse is going, if the\n\t\t * private mode 1002 or 1003 is enabled.\n\t\t */\n\t\teventp->bstate = REPORT_MOUSE_POSITION;\n\t    }\n\t    break;\n\t}\n\tresult = (eventp->bstate & REPORT_MOUSE_POSITION) ? TRUE : FALSE;\n\n\tif (kbuf[0] & 4) {\n\t    eventp->bstate |= BUTTON_SHIFT;\n\t}\n\tif (kbuf[0] & 8) {\n\t    eventp->bstate |= BUTTON_ALT;\n\t}\n\tif (kbuf[0] & 16) {\n\t    eventp->bstate |= BUTTON_CTRL;\n\t}\n\n\teventp->x = (kbuf[1] - ' ') - 1;\n\teventp->y = (kbuf[2] - ' ') - 1;\n\tTR(MY_TRACE,\n\t   (\"_nc_mouse_inline: primitive mouse-event %s has slot %ld\",\n\t    _nc_tracemouse(sp, eventp),\n\t    (long) IndexEV(sp, eventp)));\n\n\t/* bump the next-free pointer into the circular list */\n\tsp->_mouse_eventp = NEXT(eventp);\n#if 0\t\t\t\t/* this return would be needed for QNX's mods to lib_getch.c */\n\treturn (TRUE);\n#endif\n    }\n\n    return (result);\n}\n\nstatic void\nmouse_activate(SCREEN *sp, bool on)\n{\n    if (!on && !sp->_mouse_initialized)\n\treturn;\n\n    if (!_nc_mouse_init(sp))\n\treturn;\n\n    if (on) {\n\n\tswitch (sp->_mouse_type) {\n\tcase M_XTERM:\n#if NCURSES_EXT_FUNCS\n\t    NCURSES_SP_NAME(keyok) (NCURSES_SP_ARGx KEY_MOUSE, on);\n#endif\n\t    TPUTS_TRACE(\"xterm mouse initialization\");\n\t    enable_xterm_mouse(sp, 1);\n\t    break;\n#if USE_GPM_SUPPORT\n\tcase M_GPM:\n\t    if (enable_gpm_mouse(sp, TRUE)) {\n\t\tsp->_mouse_fd = *(my_gpm_fd);\n\t\tT((\"GPM mouse_fd %d\", sp->_mouse_fd));\n\t    }\n\t    break;\n#endif\n#if USE_SYSMOUSE\n\tcase M_SYSMOUSE:\n\t    signal(SIGUSR2, handle_sysmouse);\n\t    sp->_mouse_active = TRUE;\n\t    break;\n#endif\n#ifdef USE_TERM_DRIVER\n\tcase M_TERM_DRIVER:\n\t    sp->_mouse_active = TRUE;\n\t    break;\n#endif\n\tcase M_NONE:\n\t    return;\n\t}\n\t/* Make runtime binding to cut down on object size of applications that\n\t * do not use the mouse (e.g., 'clear').\n\t */\n\tsp->_mouse_event = _nc_mouse_event;\n\tsp->_mouse_inline = _nc_mouse_inline;\n\tsp->_mouse_parse = _nc_mouse_parse;\n\tsp->_mouse_resume = _nc_mouse_resume;\n\tsp->_mouse_wrap = _nc_mouse_wrap;\n    } else {\n\n\tswitch (sp->_mouse_type) {\n\tcase M_XTERM:\n\t    TPUTS_TRACE(\"xterm mouse deinitialization\");\n\t    enable_xterm_mouse(sp, 0);\n\t    break;\n#if USE_GPM_SUPPORT\n\tcase M_GPM:\n\t    enable_gpm_mouse(sp, FALSE);\n\t    break;\n#endif\n#if USE_SYSMOUSE\n\tcase M_SYSMOUSE:\n\t    signal(SIGUSR2, SIG_IGN);\n\t    sp->_mouse_active = FALSE;\n\t    break;\n#endif\n#ifdef USE_TERM_DRIVER\n\tcase M_TERM_DRIVER:\n\t    sp->_mouse_active = FALSE;\n\t    break;\n#endif\n\tcase M_NONE:\n\t    return;\n\t}\n    }\n    NCURSES_SP_NAME(_nc_flush) (NCURSES_SP_ARG);\n}\n\n/**************************************************************************\n *\n * Device-independent code\n *\n **************************************************************************/\n\nstatic bool\n_nc_mouse_parse(SCREEN *sp, int runcount)\n/* parse a run of atomic mouse events into a gesture */\n{\n    MEVENT *eventp = sp->_mouse_eventp;\n    MEVENT *ep, *runp, *next, *prev = PREV(eventp);\n    int n;\n    int b;\n    bool merge;\n\n    TR(MY_TRACE, (\"_nc_mouse_parse(%d) called\", runcount));\n\n    /*\n     * When we enter this routine, the event list next-free pointer\n     * points just past a run of mouse events that we know were separated\n     * in time by less than the critical click interval. The job of this\n     * routine is to collapse this run into a single higher-level event\n     * or gesture.\n     *\n     * We accomplish this in two passes.  The first pass merges press/release\n     * pairs into click events.  The second merges runs of click events into\n     * double or triple-click events.\n     *\n     * It's possible that the run may not resolve to a single event (for\n     * example, if the user quadruple-clicks).  If so, leading events\n     * in the run are ignored.\n     *\n     * Note that this routine is independent of the format of the specific\n     * format of the pointing-device's reports.  We can use it to parse\n     * gestures on anything that reports press/release events on a per-\n     * button basis, as long as the device-dependent mouse code puts stuff\n     * on the queue in MEVENT format.\n     */\n    if (runcount == 1) {\n\tTR(MY_TRACE,\n\t   (\"_nc_mouse_parse: returning simple mouse event %s at slot %ld\",\n\t    _nc_tracemouse(sp, prev),\n\t    (long) IndexEV(sp, prev)));\n\treturn (prev->id >= NORMAL_EVENT)\n\t    ? ((prev->bstate & sp->_mouse_mask) ? TRUE : FALSE)\n\t    : FALSE;\n    }\n\n    /* find the start of the run */\n    runp = eventp;\n    for (n = runcount; n > 0; n--) {\n\trunp = PREV(runp);\n    }\n\n#ifdef TRACE\n    if (USE_TRACEF(TRACE_IEVENT)) {\n\t_trace_slot(sp, \"before mouse press/release merge:\");\n\t_tracef(\"_nc_mouse_parse: run starts at %ld, ends at %ld, count %d\",\n\t\tRunParams(sp, eventp, runp),\n\t\truncount);\n\t_nc_unlock_global(tracef);\n    }\n#endif /* TRACE */\n\n    /* first pass; merge press/release pairs */\n    do {\n\tmerge = FALSE;\n\tfor (ep = runp; (next = NEXT(ep)) != eventp; ep = next) {\n\n#define MASK_CHANGED(x) (!(ep->bstate & MASK_PRESS(x)) \\\n\t\t      == !(next->bstate & MASK_RELEASE(x)))\n\n\t    if (ep->x == next->x && ep->y == next->y\n\t\t&& (ep->bstate & BUTTON_PRESSED)\n\t\t&& MASK_CHANGED(1)\n\t\t&& MASK_CHANGED(2)\n\t\t&& MASK_CHANGED(3)\n\t\t&& MASK_CHANGED(4)\n#if NCURSES_MOUSE_VERSION == 2\n\t\t&& MASK_CHANGED(5)\n#endif\n\t\t) {\n\t\tfor (b = 1; b <= MAX_BUTTONS; ++b) {\n\t\t    if ((sp->_mouse_mask & MASK_CLICK(b))\n\t\t\t&& (ep->bstate & MASK_PRESS(b))) {\n\t\t\tep->bstate &= ~MASK_PRESS(b);\n\t\t\tep->bstate |= MASK_CLICK(b);\n\t\t\tmerge = TRUE;\n\t\t    }\n\t\t}\n\t\tif (merge)\n\t\t    next->id = INVALID_EVENT;\n\t    }\n\t}\n    } while\n\t(merge);\n\n#ifdef TRACE\n    if (USE_TRACEF(TRACE_IEVENT)) {\n\t_trace_slot(sp, \"before mouse click merge:\");\n\t_tracef(\"_nc_mouse_parse: run starts at %ld, ends at %ld, count %d\",\n\t\tRunParams(sp, eventp, runp),\n\t\truncount);\n\t_nc_unlock_global(tracef);\n    }\n#endif /* TRACE */\n\n    /*\n     * Second pass; merge click runs.  At this point, click events are\n     * each followed by one invalid event. We merge click events\n     * forward in the queue.\n     *\n     * NOTE: There is a problem with this design!  If the application\n     * allows enough click events to pile up in the circular queue so\n     * they wrap around, it will cheerfully merge the newest forward\n     * into the oldest, creating a bogus doubleclick and confusing\n     * the queue-traversal logic rather badly.  Generally this won't\n     * happen, because calling getmouse() marks old events invalid and\n     * ineligible for merges.  The true solution to this problem would\n     * be to timestamp each MEVENT and perform the obvious sanity check,\n     * but the timer element would have to have sub-second resolution,\n     * which would get us into portability trouble.\n     */\n    do {\n\tMEVENT *follower;\n\n\tmerge = FALSE;\n\tfor (ep = runp; (next = NEXT(ep)) != eventp; ep = next)\n\t    if (ep->id != INVALID_EVENT) {\n\t\tif (next->id != INVALID_EVENT)\n\t\t    continue;\n\t\tfollower = NEXT(next);\n\t\tif (follower->id == INVALID_EVENT)\n\t\t    continue;\n\n\t\t/* merge click events forward */\n\t\tif ((ep->bstate & BUTTON_CLICKED)\n\t\t    && (follower->bstate & BUTTON_CLICKED)) {\n\t\t    for (b = 1; b <= MAX_BUTTONS; ++b) {\n\t\t\tif ((sp->_mouse_mask & MASK_DOUBLE_CLICK(b))\n\t\t\t    && (follower->bstate & MASK_CLICK(b))) {\n\t\t\t    follower->bstate &= ~MASK_CLICK(b);\n\t\t\t    follower->bstate |= MASK_DOUBLE_CLICK(b);\n\t\t\t    merge = TRUE;\n\t\t\t}\n\t\t    }\n\t\t    if (merge)\n\t\t\tep->id = INVALID_EVENT;\n\t\t}\n\n\t\t/* merge double-click events forward */\n\t\tif ((ep->bstate & BUTTON_DOUBLE_CLICKED)\n\t\t    && (follower->bstate & BUTTON_CLICKED)) {\n\t\t    for (b = 1; b <= MAX_BUTTONS; ++b) {\n\t\t\tif ((sp->_mouse_mask & MASK_TRIPLE_CLICK(b))\n\t\t\t    && (follower->bstate & MASK_CLICK(b))) {\n\t\t\t    follower->bstate &= ~MASK_CLICK(b);\n\t\t\t    follower->bstate |= MASK_TRIPLE_CLICK(b);\n\t\t\t    merge = TRUE;\n\t\t\t}\n\t\t    }\n\t\t    if (merge)\n\t\t\tep->id = INVALID_EVENT;\n\t\t}\n\t    }\n    } while\n\t(merge);\n\n#ifdef TRACE\n    if (USE_TRACEF(TRACE_IEVENT)) {\n\t_trace_slot(sp, \"before mouse event queue compaction:\");\n\t_tracef(\"_nc_mouse_parse: run starts at %ld, ends at %ld, count %d\",\n\t\tRunParams(sp, eventp, runp),\n\t\truncount);\n\t_nc_unlock_global(tracef);\n    }\n#endif /* TRACE */\n\n    /*\n     * Now try to throw away trailing events flagged invalid, or that\n     * don't match the current event mask.\n     */\n    for (; runcount; prev = PREV(eventp), runcount--)\n\tif (prev->id == INVALID_EVENT || !(prev->bstate & sp->_mouse_mask)) {\n\t    sp->_mouse_eventp = eventp = prev;\n\t}\n#ifdef TRACE\n    if (USE_TRACEF(TRACE_IEVENT)) {\n\t_trace_slot(sp, \"after mouse event queue compaction:\");\n\t_tracef(\"_nc_mouse_parse: run starts at %ld, ends at %ld, count %d\",\n\t\tRunParams(sp, eventp, runp),\n\t\truncount);\n\t_nc_unlock_global(tracef);\n    }\n    for (ep = runp; ep != eventp; ep = NEXT(ep))\n\tif (ep->id != INVALID_EVENT)\n\t    TR(MY_TRACE,\n\t       (\"_nc_mouse_parse: returning composite mouse event %s at slot %ld\",\n\t\t_nc_tracemouse(sp, ep),\n\t\t(long) IndexEV(sp, ep)));\n#endif /* TRACE */\n\n    /* after all this, do we have a valid event? */\n    return (PREV(eventp)->id != INVALID_EVENT);\n}\n\nstatic void\n_nc_mouse_wrap(SCREEN *sp)\n/* release mouse -- called by endwin() before shellout/exit */\n{\n    TR(MY_TRACE, (\"_nc_mouse_wrap() called\"));\n\n    switch (sp->_mouse_type) {\n    case M_XTERM:\n\tif (sp->_mouse_mask)\n\t    mouse_activate(sp, FALSE);\n\tbreak;\n#if USE_GPM_SUPPORT\n\t/* GPM: pass all mouse events to next client */\n    case M_GPM:\n\tif (sp->_mouse_mask)\n\t    mouse_activate(sp, FALSE);\n\tbreak;\n#endif\n#if USE_SYSMOUSE\n    case M_SYSMOUSE:\n\tmouse_activate(sp, FALSE);\n\tbreak;\n#endif\n#ifdef USE_TERM_DRIVER\n    case M_TERM_DRIVER:\n\tmouse_activate(sp, FALSE);\n\tbreak;\n#endif\n    case M_NONE:\n\tbreak;\n    }\n}\n\nstatic void\n_nc_mouse_resume(SCREEN *sp)\n/* re-connect to mouse -- called by doupdate() after shellout */\n{\n    TR(MY_TRACE, (\"_nc_mouse_resume() called\"));\n\n    switch (sp->_mouse_type) {\n    case M_XTERM:\n\t/* xterm: re-enable reporting */\n\tif (sp->_mouse_mask)\n\t    mouse_activate(sp, TRUE);\n\tbreak;\n\n#if USE_GPM_SUPPORT\n    case M_GPM:\n\t/* GPM: reclaim our event set */\n\tif (sp->_mouse_mask)\n\t    mouse_activate(sp, TRUE);\n\tbreak;\n#endif\n\n#if USE_SYSMOUSE\n    case M_SYSMOUSE:\n\tmouse_activate(sp, TRUE);\n\tbreak;\n#endif\n\n#ifdef USE_TERM_DRIVER\n    case M_TERM_DRIVER:\n\tmouse_activate(sp, TRUE);\n\tbreak;\n#endif\n\n    case M_NONE:\n\tbreak;\n    }\n}\n\n/**************************************************************************\n *\n * Mouse interface entry points for the API\n *\n **************************************************************************/\n\nNCURSES_EXPORT(int)\nNCURSES_SP_NAME(getmouse) (NCURSES_SP_DCLx MEVENT * aevent)\n{\n    int result = ERR;\n\n    T((T_CALLED(\"getmouse(%p,%p)\"), (void *) SP_PARM, (void *) aevent));\n\n    if ((aevent != 0) && (SP_PARM != 0) && (SP_PARM->_mouse_type != M_NONE)) {\n\tMEVENT *eventp = SP_PARM->_mouse_eventp;\n\t/* compute the current-event pointer */\n\tMEVENT *prev = PREV(eventp);\n\n\tif (prev->id != INVALID_EVENT) {\n\t    /* copy the event we find there */\n\t    *aevent = *prev;\n\n\t    TR(TRACE_IEVENT, (\"getmouse: returning event %s from slot %ld\",\n\t\t\t      _nc_tracemouse(SP_PARM, prev),\n\t\t\t      (long) IndexEV(SP_PARM, prev)));\n\n\t    prev->id = INVALID_EVENT;\t/* so the queue slot becomes free */\n\t    SP_PARM->_mouse_eventp = PREV(prev);\n\t    result = OK;\n\t}\n    }\n    returnCode(result);\n}\n\n#if NCURSES_SP_FUNCS\n/* grab a copy of the current mouse event */\nNCURSES_EXPORT(int)\ngetmouse(MEVENT * aevent)\n{\n    return NCURSES_SP_NAME(getmouse) (CURRENT_SCREEN, aevent);\n}\n#endif\n\nNCURSES_EXPORT(int)\nNCURSES_SP_NAME(ungetmouse) (NCURSES_SP_DCLx MEVENT * aevent)\n{\n    int result = ERR;\n\n    T((T_CALLED(\"ungetmouse(%p,%p)\"), (void *) SP_PARM, (void *) aevent));\n\n    if (aevent != 0 && SP_PARM != 0) {\n\tMEVENT *eventp = SP_PARM->_mouse_eventp;\n\n\t/* stick the given event in the next-free slot */\n\t*eventp = *aevent;\n\n\t/* bump the next-free pointer into the circular list */\n\tSP_PARM->_mouse_eventp = NEXT(eventp);\n\n\t/* push back the notification event on the keyboard queue */\n\tresult = NCURSES_SP_NAME(ungetch) (NCURSES_SP_ARGx KEY_MOUSE);\n    }\n    returnCode(result);\n}\n\n#if NCURSES_SP_FUNCS\n/* enqueue a synthesized mouse event to be seen by the next wgetch() */\nNCURSES_EXPORT(int)\nungetmouse(MEVENT * aevent)\n{\n    return NCURSES_SP_NAME(ungetmouse) (CURRENT_SCREEN, aevent);\n}\n#endif\n\nNCURSES_EXPORT(mmask_t)\nNCURSES_SP_NAME(mousemask) (NCURSES_SP_DCLx mmask_t newmask, mmask_t * oldmask)\n/* set the mouse event mask */\n{\n    mmask_t result = 0;\n\n    T((T_CALLED(\"mousemask(%p,%#lx,%p)\"),\n       (void *) SP_PARM,\n       (unsigned long) newmask,\n       (void *) oldmask));\n\n    if (SP_PARM != 0) {\n\tif (oldmask)\n\t    *oldmask = SP_PARM->_mouse_mask;\n\n\tif (newmask || SP_PARM->_mouse_initialized) {\n\t    _nc_mouse_init(SP_PARM);\n\t    if (SP_PARM->_mouse_type != M_NONE) {\n\t\tresult = newmask &\n\t\t    (REPORT_MOUSE_POSITION\n\t\t     | BUTTON_ALT\n\t\t     | BUTTON_CTRL\n\t\t     | BUTTON_SHIFT\n\t\t     | BUTTON_PRESSED\n\t\t     | BUTTON_RELEASED\n\t\t     | BUTTON_CLICKED\n\t\t     | BUTTON_DOUBLE_CLICKED\n\t\t     | BUTTON_TRIPLE_CLICKED);\n\n\t\tmouse_activate(SP_PARM, (bool) (result != 0));\n\n\t\tSP_PARM->_mouse_mask = result;\n\t    }\n\t}\n    }\n    returnMMask(result);\n}\n\n#if NCURSES_SP_FUNCS\nNCURSES_EXPORT(mmask_t)\nmousemask(mmask_t newmask, mmask_t * oldmask)\n{\n    return NCURSES_SP_NAME(mousemask) (CURRENT_SCREEN, newmask, oldmask);\n}\n#endif\n\nNCURSES_EXPORT(bool)\nwenclose(const WINDOW *win, int y, int x)\n/* check to see if given window encloses given screen location */\n{\n    bool result = FALSE;\n\n    T((T_CALLED(\"wenclose(%p,%d,%d)\"), (const void *) win, y, x));\n\n    if (win != 0) {\n\ty -= win->_yoffset;\n\tresult = ((win->_begy <= y &&\n\t\t   win->_begx <= x &&\n\t\t   (win->_begx + win->_maxx) >= x &&\n\t\t   (win->_begy + win->_maxy) >= y) ? TRUE : FALSE);\n    }\n    returnBool(result);\n}\n\nNCURSES_EXPORT(int)\nNCURSES_SP_NAME(mouseinterval) (NCURSES_SP_DCLx int maxclick)\n/* set the maximum mouse interval within which to recognize a click */\n{\n    int oldval;\n\n    T((T_CALLED(\"mouseinterval(%p,%d)\"), (void *) SP_PARM, maxclick));\n\n    if (SP_PARM != 0) {\n\toldval = SP_PARM->_maxclick;\n\tif (maxclick >= 0)\n\t    SP_PARM->_maxclick = maxclick;\n    } else {\n\toldval = DEFAULT_MAXCLICK;\n    }\n\n    returnCode(oldval);\n}\n\n#if NCURSES_SP_FUNCS\nNCURSES_EXPORT(int)\nmouseinterval(int maxclick)\n{\n    return NCURSES_SP_NAME(mouseinterval) (CURRENT_SCREEN, maxclick);\n}\n#endif\n\n/* This may be used by other routines to ask for the existence of mouse\n   support */\nNCURSES_EXPORT(bool)\n_nc_has_mouse(SCREEN *sp)\n{\n    return (((0 == sp) || (sp->_mouse_type == M_NONE)) ? FALSE : TRUE);\n}\n\nNCURSES_EXPORT(bool)\nNCURSES_SP_NAME(has_mouse) (NCURSES_SP_DCL0)\n{\n    return _nc_has_mouse(SP_PARM);\n}\n\n#if NCURSES_SP_FUNCS\nNCURSES_EXPORT(bool)\nhas_mouse(void)\n{\n    return _nc_has_mouse(CURRENT_SCREEN);\n}\n#endif\n\nNCURSES_EXPORT(bool)\nwmouse_trafo(const WINDOW *win, int *pY, int *pX, bool to_screen)\n{\n    bool result = FALSE;\n\n    T((T_CALLED(\"wmouse_trafo(%p,%p,%p,%d)\"),\n       (const void *) win,\n       (void *) pY,\n       (void *) pX,\n       to_screen));\n\n    if (win && pY && pX) {\n\tint y = *pY;\n\tint x = *pX;\n\n\tif (to_screen) {\n\t    y += win->_begy + win->_yoffset;\n\t    x += win->_begx;\n\t    if (wenclose(win, y, x))\n\t\tresult = TRUE;\n\t} else {\n\t    if (wenclose(win, y, x)) {\n\t\ty -= (win->_begy + win->_yoffset);\n\t\tx -= win->_begx;\n\t\tresult = TRUE;\n\t    }\n\t}\n\tif (result) {\n\t    *pX = x;\n\t    *pY = y;\n\t}\n    }\n    returnBool(result);\n}\n"
    },
    "skipped": [],
    "total_files": 1026
}