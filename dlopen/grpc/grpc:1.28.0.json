{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/src/csharp/Grpc.Core/Internal/UnmanagedLibrary.cs": "#region Copyright notice and license\n\n// Copyright 2015 gRPC authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n#endregion\n\nusing System;\nusing System.IO;\nusing System.Reflection;\nusing System.Runtime.InteropServices;\nusing System.Threading;\n\nusing Grpc.Core.Logging;\nusing Grpc.Core.Utils;\n\nnamespace Grpc.Core.Internal\n{\n    /// <summary>\n    /// Represents a dynamically loaded unmanaged library in a (partially) platform independent manner.\n    /// First, the native library is loaded using dlopen (on Unix systems) or using LoadLibrary (on Windows).\n    /// dlsym or GetProcAddress are then used to obtain symbol addresses. <c>Marshal.GetDelegateForFunctionPointer</c>\n    /// transforms the addresses into delegates to native methods.\n    /// See http://stackoverflow.com/questions/13461989/p-invoke-to-dynamically-loaded-library-on-mono.\n    /// </summary>\n    internal class UnmanagedLibrary\n    {\n        static readonly ILogger Logger = GrpcEnvironment.Logger.ForType<UnmanagedLibrary>();\n\n        // flags for dlopen\n        const int RTLD_LAZY = 1;\n        const int RTLD_GLOBAL = 8;\n\n        readonly string libraryPath;\n        readonly IntPtr handle;\n\n        public UnmanagedLibrary(string[] libraryPathAlternatives)\n        {\n            this.libraryPath = FirstValidLibraryPath(libraryPathAlternatives);\n\n            Logger.Debug(\"Attempting to load native library \\\"{0}\\\"\", this.libraryPath);\n\n            this.handle = PlatformSpecificLoadLibrary(this.libraryPath, out string loadLibraryErrorDetail);\n\n            if (this.handle == IntPtr.Zero)\n            {\n                throw new IOException(string.Format(\"Error loading native library \\\"{0}\\\". {1}\",\n                                                    this.libraryPath, loadLibraryErrorDetail));\n            }\n        }\n\n        /// <summary>\n        /// Loads symbol in a platform specific way.\n        /// </summary>\n        /// <param name=\"symbolName\"></param>\n        /// <returns></returns>\n        private IntPtr LoadSymbol(string symbolName)\n        {\n            if (PlatformApis.IsWindows)\n            {\n                // See http://stackoverflow.com/questions/10473310 for background on this.\n                if (PlatformApis.Is64Bit)\n                {\n                    return Windows.GetProcAddress(this.handle, symbolName);\n                }\n                else\n                {\n                    // Yes, we could potentially predict the size... but it's a lot simpler to just try\n                    // all the candidates. Most functions have a suffix of @0, @4 or @8 so we won't be trying\n                    // many options - and if it takes a little bit longer to fail if we've really got the wrong\n                    // library, that's not a big problem. This is only called once per function in the native library.\n                    symbolName = \"_\" + symbolName + \"@\";\n                    for (int stackSize = 0; stackSize < 128; stackSize += 4)\n                    {\n                        IntPtr candidate = Windows.GetProcAddress(this.handle, symbolName + stackSize);\n                        if (candidate != IntPtr.Zero)\n                        {\n                            return candidate;\n                        }\n                    }\n                    // Fail.\n                    return IntPtr.Zero;\n                }\n            }\n            if (PlatformApis.IsLinux)\n            {\n                if (PlatformApis.IsMono)\n                {\n                    return Mono.dlsym(this.handle, symbolName);\n                }\n                if (PlatformApis.IsNetCore)\n                {\n                    return CoreCLR.dlsym(this.handle, symbolName);\n                }\n                return Linux.dlsym(this.handle, symbolName);\n            }\n            if (PlatformApis.IsMacOSX)\n            {\n                return MacOSX.dlsym(this.handle, symbolName);\n            }\n            throw new InvalidOperationException(\"Unsupported platform.\");\n        }\n\n        public T GetNativeMethodDelegate<T>(string methodName)\n            where T : class\n        {\n            var ptr = LoadSymbol(methodName);\n            if (ptr == IntPtr.Zero)\n            {\n                throw new MissingMethodException(string.Format(\"The native method \\\"{0}\\\" does not exist\", methodName));\n            }\n#if NETSTANDARD1_5 || NETSTANDARD2_0\n            return Marshal.GetDelegateForFunctionPointer<T>(ptr);  // non-generic version is obsolete\n#else\n            return Marshal.GetDelegateForFunctionPointer(ptr, typeof(T)) as T;  // generic version not available in .NET45\n#endif\n        }\n\n        /// <summary>\n        /// Loads library in a platform specific way.\n        /// </summary>\n        private static IntPtr PlatformSpecificLoadLibrary(string libraryPath, out string errorMsg)\n        {\n            if (PlatformApis.IsWindows)\n            {\n                // TODO(jtattermusch): populate the error on Windows\n                errorMsg = null;\n                return Windows.LoadLibrary(libraryPath);\n            }\n            if (PlatformApis.IsLinux)\n            {\n                if (PlatformApis.IsMono)\n                {\n                    return LoadLibraryPosix(Mono.dlopen, Mono.dlerror, libraryPath, out errorMsg);\n                }\n                if (PlatformApis.IsNetCore)\n                {\n                    return LoadLibraryPosix(CoreCLR.dlopen, CoreCLR.dlerror, libraryPath, out errorMsg);\n                }\n                return LoadLibraryPosix(Linux.dlopen, Linux.dlerror, libraryPath, out errorMsg);\n            }\n            if (PlatformApis.IsMacOSX)\n            {\n                return LoadLibraryPosix(MacOSX.dlopen, MacOSX.dlerror, libraryPath, out errorMsg);\n            }\n            throw new InvalidOperationException(\"Unsupported platform.\");\n        }\n\n        private static IntPtr LoadLibraryPosix(Func<string, int, IntPtr> dlopenFunc, Func<IntPtr> dlerrorFunc, string libraryPath, out string errorMsg)\n        {\n            errorMsg = null;\n            IntPtr ret = dlopenFunc(libraryPath, RTLD_GLOBAL + RTLD_LAZY);\n            if (ret == IntPtr.Zero)\n            {\n                errorMsg = Marshal.PtrToStringAnsi(dlerrorFunc());\n            }\n            return ret;\n        }\n\n        private static string FirstValidLibraryPath(string[] libraryPathAlternatives)\n        {\n            GrpcPreconditions.CheckArgument(libraryPathAlternatives.Length > 0, \"libraryPathAlternatives cannot be empty.\");\n            foreach (var path in libraryPathAlternatives)\n            {\n                if (File.Exists(path))\n                {\n                    return path;\n                }\n            }\n            throw new FileNotFoundException(\n                String.Format(\"Error loading native library. Not found in any of the possible locations: {0}\", \n                    string.Join(\",\", libraryPathAlternatives)));\n        }\n\n        private static class Windows\n        {\n            [DllImport(\"kernel32.dll\")]\n            internal static extern IntPtr LoadLibrary(string filename);\n\n            [DllImport(\"kernel32.dll\")]\n            internal static extern IntPtr GetProcAddress(IntPtr hModule, string procName);\n        }\n\n        private static class Linux\n        {\n            [DllImport(\"libdl.so\")]\n            internal static extern IntPtr dlopen(string filename, int flags);\n\n            [DllImport(\"libdl.so\")]\n            internal static extern IntPtr dlerror();\n\n            [DllImport(\"libdl.so\")]\n            internal static extern IntPtr dlsym(IntPtr handle, string symbol);\n        }\n\n        private static class MacOSX\n        {\n            [DllImport(\"libSystem.dylib\")]\n            internal static extern IntPtr dlopen(string filename, int flags);\n\n            [DllImport(\"libSystem.dylib\")]\n            internal static extern IntPtr dlerror();\n\n            [DllImport(\"libSystem.dylib\")]\n            internal static extern IntPtr dlsym(IntPtr handle, string symbol);\n        }\n\n        /// <summary>\n        /// On Linux systems, using using dlopen and dlsym results in\n        /// DllNotFoundException(\"libdl.so not found\") if libc6-dev\n        /// is not installed. As a workaround, we load symbols for\n        /// dlopen and dlsym from the current process as on Linux\n        /// Mono sure is linked against these symbols.\n        /// </summary>\n        private static class Mono\n        {\n            [DllImport(\"__Internal\")]\n            internal static extern IntPtr dlopen(string filename, int flags);\n\n            [DllImport(\"__Internal\")]\n            internal static extern IntPtr dlerror();\n\n            [DllImport(\"__Internal\")]\n            internal static extern IntPtr dlsym(IntPtr handle, string symbol);\n        }\n\n        /// <summary>\n        /// Similarly as for Mono on Linux, we load symbols for\n        /// dlopen and dlsym from the \"libcoreclr.so\",\n        /// to avoid the dependency on libc-dev Linux.\n        /// </summary>\n        private static class CoreCLR\n        {\n            [DllImport(\"libcoreclr.so\")]\n            internal static extern IntPtr dlopen(string filename, int flags);\n\n            [DllImport(\"libcoreclr.so\")]\n            internal static extern IntPtr dlerror();\n\n            [DllImport(\"libcoreclr.so\")]\n            internal static extern IntPtr dlsym(IntPtr handle, string symbol);\n        }\n    }\n}\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/third_party/upb/tests/google_message2.dat",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/third_party/upb/tests/test.proto.pb",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/third_party/upb/tests/google_message1.dat",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/third_party/upb/tests/json/test.proto.pb",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/src/android/test/interop/app/src/main/res/mipmap-xxhdpi/ic_launcher.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/src/android/test/interop/app/src/main/res/mipmap-hdpi/ic_launcher.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/src/android/test/interop/app/src/main/res/mipmap-mdpi/ic_launcher.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/src/android/test/interop/app/src/main/res/mipmap-xhdpi/ic_launcher.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/src/android/test/interop/gradle/wrapper/gradle-wrapper.jar",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/src/csharp/keys/Grpc.snk",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/src/csharp/keys/Grpc.public.snk",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/src/csharp/doc/integration.md-fig.2-sdk.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/src/csharp/doc/integration.md-fig.1-classic.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/client_fuzzer_corpus/hdr_frame.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/client_fuzzer_corpus/data_frame.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/cdba6c45.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/652bfdce.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/65099066.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/f74b9428.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/597fdab5.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/3de41f3f.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/7ffd05db.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/e3bab014.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/2c6660ba.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/f541d27e.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/11516d58.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/8338ebee.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/c66e84d1.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/0d10bb63.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/f5c877c4.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/90240c7c.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/0f700e05.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/1f992057.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/c4534867.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/88e1329b.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/69891e9f.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/e0d9a9a7.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/021ec59f.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/41b31ef0.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/6e050e98.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/34bba9e4.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/a7e64803.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/01c008fa.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/1cfdde7a.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/67b04816.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/b1128694.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/97aed4bd.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/aa8729d7.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/746715fe.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/c43d97f2.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/aa825693.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/1e92aaa5.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/93beeba2.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/a5348197.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/4eb269c3.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/3e787760.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/86e6dbf2.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/422fa704.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/0ff4d220.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/f3220426.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/ff227015.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/0384345c.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/be9b6e78.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/25ab638f.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/b829143b.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/330ad4b6.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/44f342a6.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/hope.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/dab172ff.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/0b275a7f.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/test/core/end2end/fuzzers/server_fuzzer_corpus/5429f0da.bin",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/examples/android/helloworld/app/src/main/res/mipmap-xxhdpi/ic_launcher.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/examples/android/helloworld/app/src/main/res/mipmap-hdpi/ic_launcher.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/examples/android/helloworld/app/src/main/res/mipmap-mdpi/ic_launcher.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/examples/android/helloworld/app/src/main/res/mipmap-xhdpi/ic_launcher.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/examples/android/helloworld/gradle/wrapper/gradle-wrapper.jar",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/examples/objective-c/route_guide/Misc/Images.xcassets/second.imageset/second.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/examples/objective-c/route_guide/Misc/Images.xcassets/first.imageset/first.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/examples/objective-c/auth_sample/Misc/Images.xcassets/second.imageset/second.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/examples/objective-c/auth_sample/Misc/Images.xcassets/first.imageset/first.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/examples/csharp/HelloworldXamarin/Droid/Resources/mipmap-xxhdpi/Icon.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/examples/csharp/HelloworldXamarin/Droid/Resources/mipmap-xxxhdpi/Icon.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/examples/csharp/HelloworldXamarin/Droid/Resources/mipmap-hdpi/Icon.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/examples/csharp/HelloworldXamarin/Droid/Resources/mipmap-mdpi/Icon.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/examples/csharp/HelloworldXamarin/Droid/Resources/mipmap-xhdpi/Icon.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/doc/grpc_security_audit.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/doc/images/grpc-pss.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/doc/images/grpc-epollex.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/doc/images/grpc-cq.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/doc/images/grpc-client-lb-pss.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/doc/images/load-balancing.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/doc/images/grpc-ps-pss-fd.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/doc/images/compression_cookbook_outgoing.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/doc/images/grpc-epoll1.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/doc/images/grpc-server-cq-fds.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/doc/images/compression_cookbook_incoming.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/doc/images/grpc-call-channel-cq.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/doc/images/stress_test_framework.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/doc/core/images/new_epoll_impl.png",
        "/tmp/vanessa/spack-stage/spack-stage-grpc-1.28.0-tbdtty7hp3gpmzizmxosy7pp6mrkwfio/spack-src/doc/core/images/old_epoll_impl.png"
    ],
    "total_files": 5251
}