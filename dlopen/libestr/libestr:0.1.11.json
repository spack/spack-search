{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-libestr-0.1.11-cpzvgpw6a7eps4wda6adtcgfht65dmuh/spack-src/configure.ac": "                                               -*- Autoconf -*-\n# Process this file with autoconf to produce a configure script.\n\nAC_PREREQ(2.59)\nAC_INIT([libestr], [0.1.11], [rgerhards@adiscon.com])\nAM_INIT_AUTOMAKE\n# AIXPORT START: Detect the underlying OS\nunamestr=$(uname)\nAM_CONDITIONAL([AIX], [test x$unamestr = xAIX])\n# AIXPORT : Set the required variables for AIX config script\nif test \"$unamestr\" = \"AIX\"; then\n\texport PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH:/usr/lib/pkgconfig\"\n\tCC=xlc\n\tCFLAGS=\"-qcpluscmt\"\n\tCPPFLAGS=\"-D_AIX -D_BSD=43 -D_THREAD_SAFE\"\n\tLIBS=\"-lbsd \"\n\tLDFLAGS=\"-brtl -bexpall\"\n\tAC_PREFIX_DEFAULT(/usr)\n\texport  ac_cv_func_malloc_0_nonnull=yes\n\texport ac_cv_func_realloc_0_nonnull=yes\n\nfi\n# AIXPORT End \n\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\nAC_CONFIG_SRCDIR([src/libestr.c])\nAC_CONFIG_HEADER([config.h])\n\n# Checks for programs.\nAC_PROG_CC\nAM_PROG_CC_C_O\n# AIXPORT START: enable dlopen\nif test \"$unamestr\" = \"AIX\"; then\n  AC_LIBTOOL_DLOPEN\nfi\n# AIXPORT end\nif test \"$GCC\" = \"yes\"; then\n\tmy_CFLAGS=\"-W -Wall -Wformat-security -Wshadow -Wcast-align -Wpointer-arith -Wmissing-format-attribute -g\"\nelse\n\tmy_CFLAGS=\"\"\nfi\nAC_SUBST([my_CFLAGS])\n\nAC_PROG_LIBTOOL\n\n# Checks for libraries.\nsave_LIBS=$LIBS\nLIBS=\n#AC_SEARCH_LIBS(clock_gettime, rt)\n#rt_libs=$LIBS\nLIBS=$save_LIBS\n\nAC_SUBST(rt_libs)\n\n\n# enable/disable the testbench (e.g. because some important parts\n# are missing)\nAC_ARG_ENABLE(testbench,\n        [AS_HELP_STRING([--enable-testbench],[file input module enabled @<:@default=yes@:>@])],\n        [case \"${enableval}\" in\n         yes) enable_testbench=\"yes\" ;;\n          no) enable_testbench=\"no\" ;;\n           *) AC_MSG_ERROR(bad value ${enableval} for --enable-testbench) ;;\n         esac],\n        [enable_testbench=yes]\n)\nAM_CONDITIONAL(ENABLE_TESTBENCH, test x$enable_testbench = xyes)\n\n\n# debug mode settings\nAC_ARG_ENABLE(debug,\n        [AS_HELP_STRING([--enable-debug],[Enable debug mode @<:@default=no@:>@])],\n        [case \"${enableval}\" in\n         yes) enable_debug=\"yes\" ;;\n          no) enable_debug=\"no\" ;;\n           *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;\n         esac],\n        [enable_debug=\"no\"]\n)\nif test \"$enable_debug\" = \"yes\"; then\n        AC_DEFINE(DEBUG, 1, [Defined if debug mode is enabled (it's easier to check in the code).])\nfi\nif test \"$enable_debug\" = \"no\"; then\n        AC_DEFINE(NDEBUG, 1, [Defined if debug mode is disabled.])\nfi\n\n\n\nAC_CONFIG_FILES([Makefile \\\n\t\tlibestr.pc \\\n\t\tinclude/Makefile \\\n\t\tsrc/Makefile \\\n\t\t])\nAC_OUTPUT\nAC_CONFIG_MACRO_DIR([m4])\n\n\necho \"*****************************************************\"\necho \"libestr will be compiled with the following settings:\"\necho\necho \"Debug mode enabled:          $enable_debug\"\necho \"Testbench enabled:           $enable_testbench\"\n"
    },
    "skipped": [],
    "total_files": 11
}