{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Wrapping/Generators/Java/JavaBase/javaBase.i": "%module javaBaseJava\n\n%include javaBase_ext.i\n\n\n%typemap(javacode) itkJavaLibraryLoader %{\n  public static void Load(String name) {\n    // System.loadLibrary() create the lib name by itself, but not GlobalLoad()\n    // so one must get lib and the other name\n    // Also, don't use GlobalLoad() for ITKJavaBase - it's not yet available\n    System.loadLibrary(name);\n    if(!name.equals(\"ITKJavaBaseJava\")) {\n      String lib = System.mapLibraryName(name);\n      GlobalLoad(lib);\n    }\n    System.loadLibrary(name);\n  }\n%}\n\n\n%inline %{\n\n#if !defined(_WIN32)\n#include <dlfcn.h>\n#endif\n\nclass itkJavaLibraryLoader {\n  public:\n  static void GlobalLoad(const char* lib)\n    {\n#if !defined(_WIN32)\n    dlopen(lib, RTLD_GLOBAL|RTLD_NOW);\n#endif\n    }\n\n};\n\n\n%}\n",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/CMake/InsightValgrind-Ubuntu1804.supp": "#\n# This Valgrind suppression file is for the Ubuntu 18.04 LTS system compiler and valgrind.\n#\n{\n   dlopen\n   Memcheck:Leak\n   match-leak-kinds: reachable\n   fun:calloc\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.?.?\n   fun:_ZN6itksys13DynamicLoader11OpenLibraryERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi\n}\n{\n   ioclt\n   Memcheck:Param\n   ioctl(generic)\n   fun:ioctl\n   fun:_ZN6itksysL16CloneFileContentERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_\n}\n# Offending line contains comment that the array may contain garbage\n{\n   zlib_uninitialized\n   Memcheck:Cond\n   fun:slide_hash\n   fun:fill_window\n   fun:deflate_fast\n   fun:itkzlib_deflate\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/CMake/InsightValgrind-RHEL6.supp": "#\n# This Valgrind suppression file has been developed for:\n# Red Hat Enterprise Linux Server release 6.3 (Santiago)\n# gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4)\n#\n# And should be maintained for The RHEL 6 linux distribution only.\n#\n{\n   NRDD String SSE42 1\n   Memcheck:Addr8\n   fun:__strspn_sse42\n   fun:itk_airStrtok\n   ...\n   fun:itk_nrrdRead\n}\n{\n   NRDD String SSE42 2\n   Memcheck:Value8\n   fun:__strspn_sse42\n   fun:itk_airStrtok\n\n   ...\n   fun:itk_nrrdRead\n}\n{\n   NRDD String SSE42 3\n   Memcheck:Cond\n   fun:__strspn_sse42\n   fun:itk_airStrtok\n   ...\n   fun:itk_nrrdRead\n}\n{\n   NRDD String 1\n   Memcheck:Value8\n   fun:itk_airStrtok\n   fun:itk_airStrntok\n   fun:itk__nrrdSpaceVectorParse\n   ...\n   fun:itk_nrrdRead\n}\n{\n   NRDD String 2\n   Memcheck:Value8\n   fun:strcspn\n   fun:itk_airStrtok\n   fun:itk_airStrntok\n   fun:itk__nrrdSpaceVectorParse\n   ...\n   fun:itk_nrrdRead\n}\n{\n   NRDD String 3\n   Memcheck:Cond\n   fun:itk_airStrntok\n   fun:itk__nrrdSpaceVectorParse\n   ...\n   fun:itk_nrrdRead\n}\n{\n   NRDD String 4\n   Memcheck:Cond\n   fun:itk_airStrlen\n   fun:itk_airStrtok\n   fun:itk_airStrntok\n   fun:itk__nrrdSpaceVectorParse\n   ...\n   fun:itk_nrrdRead\n}\n{\n   NRDD String 5\n   Memcheck:Value8\n   fun:strlen\n   fun:itk_airStrlen\n   fun:itk_airStrtok\n   fun:itk_airStrntok\n   fun:itk__nrrdSpaceVectorParse\n   ...\n   fun:itk_nrrdRead\n}\n{\n   NRRD Direction 1\n   Memcheck:Cond\n   ...\n   fun:_nrrdReadNrrdParse_space_directions\n   fun:_nrrdFormatNRRD_read\n   fun:itk__nrrdRead\n   fun:itk_nrrdRead\n}\n{\n   NRRD Direction 2\n   Memcheck:Value8\n   ...\n   fun:_nrrdReadNrrdParse_space_directions\n   fun:_nrrdFormatNRRD_read\n   fun:itk__nrrdRead\n   fun:itk_nrrdRead\n}\n{\n   NRRD Dimension 1\n   Memcheck:Cond\n   ...\n   fun:_nrrdReadNrrdParse_dimension\n   fun:_nrrdFormatNRRD_read\n   fun:itk__nrrdRead\n   fun:itk_nrrdRead\n}\n{\n   NRRD Dimension 2\n   Memcheck:Value8\n   ...\n   fun:_nrrdReadNrrdParse_dimension\n   fun:_nrrdFormatNRRD_read\n   fun:itk__nrrdRead\n   fun:itk_nrrdRead\n}\n{\n   NRRD ReadNrrdParseField\n   Memcheck:Cond\n   fun:__strspn_sse42\n   fun:itk__nrrdReadNrrdParseField\n   ...\n   fun:itk__nrrdRead\n   fun:itk_nrrdRead\n}\n{\n   NRRD ReadNrrdParse 1\n   Memcheck:Cond\n   ...\n   fun:itk_airEnumVal\n   fun:_nrrdReadNrrdParse_type\n   ...\n   fun:itk__nrrdRead\n   fun:itk_nrrdRead\n}\n{\n   NRRD ReadNrrdParse 2\n   Memcheck:Value8\n   ...\n   fun:itk_airStrdup\n   fun:itk_airEnumVal\n   fun:_nrrdReadNrrdParse_type\n   ...\n   fun:itk__nrrdRead\n   fun:itk_nrrdRead\n}\n{\n   NRRD EncodingAscii 1\n   Memcheck:Cond\n   fun:__strspn_sse42\n   fun:_nrrdEncodingAscii_read\n   ...\n   fun:itk__nrrdRead\n   fun:itk_nrrdRead\n}\n{\n   NRRD EncodingAscii 2\n   Memcheck:Cond\n   ...\n   fun:itk_airSingleSscanf\n   fun:_nrrdEncodingAscii_read\n   ...\n   fun:itk_nrrdRead\n   fun:itk_nrrdLoad\n}\n{\n   NRRD EncodingAscii 3\n   Memcheck:Value8\n   ...\n   fun:itk_airSingleSscanf\n   fun:_nrrdEncodingAscii_read\n   ...\n   fun:itk_nrrdRead\n   fun:itk_nrrdLoad\n}\n{\n   dlopen\n   Memcheck:Leak\n   fun:calloc\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.?.?\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/CMake/InsightValgrind-CentOS7.supp": "#\n# This Valgrind suppression file is for CentOS 7 system compiler and valgrind.\n#\n{\n   dlopen\n   Memcheck:Leak\n   match-leak-kinds: reachable\n   fun:calloc\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.?.?\n   fun:_ZN6itksys13DynamicLoader11OpenLibraryERKSsi\n}\n{\n   ioclt\n   Memcheck:Param\n   ioctl(generic)\n   fun:ioctl\n   fun:_ZN6itksysL16CloneFileContentERKSsS1_\n   fun:_ZN6itksys11SystemTools14CopyFileAlwaysERKSsS2_\n}\n# Offending line contains comment that the array may contain garbage\n{\n   zlib_uninitialized\n   Memcheck:Cond\n   fun:slide_hash\n   fun:fill_window\n   fun:deflate_fast\n   fun:itkzlib_deflate\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/CMake/InsightValgrind.supp": "{\n   Nrrd fflush 2.3\n   Memcheck:Param\n   write(buf)\n   fun:__write_nocancel\n   fun:_IO_file_write@@GLIBC_2.2.5\n   fun:_IO_do_write@@GLIBC_2.2.5\n   fun:_IO_file_sync@@GLIBC_2.2.5\n   fun:fflush\n   fun:itk__nrrdEncodingRaw_write\n   fun:itk__nrrdFormatNRRD_write\n   fun:itk_nrrdWrite\n   fun:itk_nrrdSave\n}\n{\n   Some 64 bit suppressions\n   Memcheck:Param\n   write(buf)\n   fun:__write_nocancel\n   obj:/usr/lib64/libstdc++.so.6.?.?\n}\n{\n   Some more 64 bit suppressions\n   Memcheck:Param\n   write(buf)\n   fun:__write_nocancel\n   fun:_IO_file_write@@GLIBC_2.2.5\n   fun:_IO_do_write@@GLIBC_2.2.5\n   fun:_IO_file_sync@@GLIBC_2.2.5\n   fun:fflush\n   fun:itk__nrrdEncodingRaw_write\n}\n{\n   zlib suppression\n   Memcheck:Cond\n   fun:longest_match\n   fun:deflate_slow\n   fun:itk_zlib_deflate\n}\n{\n   zlib suppression\n   Memcheck:Cond\n   fun:inflateReset2\n   fun:inflateInit2_\n   obj:/lib/x86_64-linux-gnu/libz.so.1.2.3.4\n}\n{\n   Some dl_relocate_object suppressions\n   Memcheck:Cond\n   fun:_dl_relocate_object\n}\n{\n   Some Error from the itk::MultiThreader::DispatchSingleMethodThread\n   Memcheck:Leak\n   fun:calloc\n   fun:_dl_allocate_tls\n   fun:pthread_create@@GLIBC_2.1\n   fun:_ZN3itk13MultiThreader26DispatchSingleMethodThreadEPNS0_16ThreadInfoStructE\n}\n{\n   Another Error from the itk::MultiThreader::DispatchSingleMethodThread\n   Memcheck:Leak\n   fun:calloc\n   fun:_dl_allocate_tls\n   fun:pthread_create@@GLIBC_2.2.5\n}\n{\n  Some Error from the itk::MultiThreader::SingleMethodExecute\n  Memcheck:Leak\n  fun:calloc\n  obj:/lib/ld-2.3.?.so\n  fun:_dl_allocate_tls\n  fun:allocate_stack\n  fun:pthread_create@@GLIBC_2.1\n  fun:_ZN3itk13MultiThreader26DispatchSingleMethodThreadEPNS0_16ThreadInfoStructE\n}\n{\n  Error2\n  Memcheck:Free\n  fun:calloc\n  obj:*/ld-2.3.?.so\n  fun:_dl_allocate_tls\n  fun:allocate_stack\n  fun:pthread_create@@GLIBC_2.1\n  fun:_ZN3itk13MultiThreader19SingleMethodExecuteEv\n  fun:_ZN3itk11ImageSourceINS_5ImageIfLj3EEEE12GenerateDataEv\n}\n\n{\n   <itk::MultiThreader::SpawnThread>\n   Memcheck:Leak\n   fun:calloc\n   fun:_dl_allocate_tls\n   fun:pthread_create@@GLIBC_2.1\n   fun:_ZN3itk13MultiThreader11SpawnThreadEPFPvS1_ES1_\n}\n\n{\n  lib/ld conditional jump errors\n  Memcheck:Cond\n  obj:*/ld-2.3.?.so\n  obj:*/ld-2.3.?.so\n  obj:*/ld-2.3.?.so\n}\n{\n  CrazyTclError1\n  Memcheck:Leak\n  fun:calloc\n  obj:/usr/lib/libtcl8.4.so.0\n  fun:TclpAlloc\n  fun:Tcl_Alloc\n  fun:Tcl_MutexLock\n  fun:TclInitObjSubsystem\n  fun:TclInitSubsystems\n  fun:Tcl_FindExecutable\n  fun:Tcl_Main\n}\n{\n  CrazyTclError2\n  Memcheck:Leak\n  fun:calloc\n  obj:/lib/ld-2.3.?.so\n  fun:_dl_allocate_tls\n  fun:allocate_stack\n  fun:pthread_create@@GLIBC_2.1\n  fun:TclpThreadCreate\n  fun:Tcl_InitNotifier\n  fun:TclInitNotifier\n  fun:TclInitSubsystems\n  fun:Tcl_FindExecutable\n  fun:Tcl_Main\n  fun:main\n}\n\n{\n  CrazyTclError3\n  Memcheck:Leak\n  fun:realloc\n  fun:TclpRealloc\n  fun:Tcl_Realloc\n  fun:Tcl_SetObjLength\n  obj:/usr/lib/libtcl8.4.so.0\n  obj:/usr/lib/libtcl8.4.so.0\n  fun:Tcl_FSEvalFile\n  fun:Tcl_Main\n}\n\n{\n  CrazyTclError4\n  Memcheck:Leak\n  fun:malloc\n  obj:/usr/lib/libtcl8.4.so.0\n  fun:TclpAlloc\n  fun:Tcl_Alloc\n  obj:/usr/lib/libtcl8.4.so.0\n  obj:/usr/lib/libtcl8.4.so.0\n  obj:/usr/lib/libtcl8.4.so.0\n  fun:Tcl_GetsObj\n  fun:Tcl_Gets\n  obj:/usr/lib/libtcl8.4.so.0\n  fun:Tcl_SetSystemEncoding\n  fun:TclpSetInitialEncodings\n  obj:/usr/lib/libtcl8.4.so.0\n  fun:Tcl_FindExecutable\n  fun:Tcl_Main\n}\n\n{\n  CrazyTclError5\n  Memcheck:Leak\n  fun:malloc\n  obj:/usr/lib/libtcl8.4.so.0\n  fun:TclpAlloc\n  fun:Tcl_Alloc\n  fun:Tcl_MutexLock\n  fun:TclInitObjSubsystem\n  fun:TclInitSubsystems\n  fun:Tcl_FindExecutable\n  fun:Tcl_Main\n}\n\n{\n  CrazyTclError6\n  Memcheck:Leak\n  fun:malloc\n  fun:TclThreadAllocObj\n  fun:Tcl_NewObj\n  fun:TclpInitLibraryPath\n  obj:/usr/lib/libtcl8.4.so.0\n  fun:Tcl_FindExecutable\n  fun:Tcl_Main\n}\n\n{\n  CrazyTclError7\n  Memcheck:Leak\n  fun:realloc\n  fun:Tcl_AttemptSetObjLength\n}\n\n{\n  CrazyTclError8\n  Memcheck:Leak\n  fun:malloc\n  fun:Tcl_Alloc\n  fun:TclCreateExecEnv\n  fun:Tcl_CreateInterp\n}\n\n{\n  CrazyTclError9\n  Memcheck:Leak\n  fun:realloc\n  fun:Tcl_Realloc\n  fun:Tcl_SetObjLength\n}\n\n{\n  CrazyTclError10\n  Memcheck:Leak\n  fun:malloc\n  fun:Tcl_Alloc\n  fun:TclAllocateFreeObjects\n}\n\n{\n  CrazyTclError11\n  Memcheck:Leak\n  fun:malloc\n  fun:realloc\n  fun:Tcl_Realloc\n  fun:Tcl_Export\n}\n\n{\n  CrazyTclError12\n  Memcheck:Leak\n  fun:malloc\n  ...\n  fun:getpwuid_r\n  fun:getpwuid\n  ...\n  fun:Tcl_CreateInterp\n}\n\n{\n  CrazyTclError13\n  Memcheck:Leak\n  fun:calloc\n  ...\n  fun:getpwuid_r\n  fun:getpwuid\n  ...\n  fun:Tcl_CreateInterp\n}\n\n{\n  CrazyTclError14\n  Memcheck:Leak\n  fun:realloc\n  fun:Tcl_Realloc\n  fun:Tcl_Export\n}\n\n{\n  CrazyTclError15\n  Memcheck:Leak\n  fun:malloc\n  ...\n  fun:Tcl_ListObjIndex\n  fun:Tcl_SetEnsembleMappingDict\n}\n\n{\n  CrazyTclEroor16\n  Memcheck:Leak\n  fun:malloc\n  fun:TclpAlloc\n  fun:Tcl_Alloc\n  fun:Tcl_GetThreadData\n  fun:Tcl_InitNotifier\n  fun:TclInitNotifier\n  fun:Tcl_FindExecutable\n  fun:Tcl_Main\n  fun:main\n}\n\n{\n   CrazyTclError17\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:TclCreateExecEnv\n   fun:Tcl_CreateInterp\n   fun:Tcl_Main\n   fun:main\n}\n\n{\n   CrazyTclError18\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:TclpRealloc\n   fun:Tcl_Realloc\n   fun:Tcl_DStringSetLength\n   fun:Tcl_ExternalToUtfDString\n   fun:TclpFindVariable\n   fun:TclGetEnv\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:TclVarTraceExists\n   obj:/usr/lib/libtcl8.4.so.0\n}\n\n{\n   CrazyTclError19\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_FSEvalFile\n   fun:TclEvalObjvInternal\n   fun:Tcl_EvalObjv\n   fun:Tcl_EvalObjEx\n   fun:Tcl_UplevelObjCmd\n   fun:TclEvalObjvInternal\n}\n\n{\n   CrazyTclError20\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:TclpRealloc\n   fun:Tcl_Realloc\n   fun:Tcl_SetObjLength\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_FSEvalFile\n   fun:TclEvalObjvInternal\n   fun:Tcl_EvalObjv\n   fun:Tcl_EvalObjEx\n   fun:Tcl_UplevelObjCmd\n}\n\n{\n   CrazyTclError21\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:TclCompileScript\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:TclCompileExpr\n   fun:TclCompileIfCmd\n   fun:TclCompileScript\n   fun:TclCompileIfCmd\n   fun:TclCompileScript\n   fun:TclCompileIfCmd\n}\n\n{\n   CrazyTclError22\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:Tcl_ListObjAppendElement\n   fun:TclGlob\n   fun:Tcl_GlobObjCmd\n   fun:TclEvalObjvInternal\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:TclCompEvalObj\n   fun:TclObjInterpProc\n   fun:TclEvalObjvInternal\n   obj:/usr/lib/libtcl8.4.so.0\n}\n\n{\n   CrazyTclError23\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:TclCompileScript\n   fun:TclCompileTokens\n   fun:TclCompileExprWords\n   fun:TclCompileScript\n   fun:TclCompileTokens\n   fun:TclCompileSetCmd\n   fun:TclCompileScript\n   fun:TclCompileIfCmd\n   fun:TclCompileScript\n}\n\n{\n   CrazyTclError24\n   Memcheck:Leak\n   fun:malloc\n   fun:TclThreadAllocObj\n   fun:Tcl_NewObj\n   fun:TclNewFSPathObj\n   fun:TclpMatchInDirectory\n   fun:Tcl_FSMatchInDirectory\n   fun:TclDoGlob\n   fun:TclDoGlob\n   fun:TclDoGlob\n   fun:TclDoGlob\n   fun:TclDoGlob\n   fun:TclDoGlob\n}\n\n{\n   CrayTclError25\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:TclpRealloc\n   fun:Tcl_AttemptSetObjLength\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_AppendObjToObj\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_GetStringFromObj\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_GetStringFromObj\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:TclCompEvalObj\n}\n\n{\n   CrazyTclError26\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:Tcl_ListObjAppendElement\n   fun:TclpMatchInDirectory\n   fun:Tcl_FSMatchInDirectory\n   fun:TclDoGlob\n   fun:TclDoGlob\n   fun:TclDoGlob\n   fun:TclDoGlob\n   fun:TclDoGlob\n   fun:TclDoGlob\n}\n\n{\n    CrazyTclError27\n    Memcheck:Leak\n    fun:malloc\n    fun:TclpAlloc\n    fun:Tcl_Alloc\n    obj:/usr/lib/libtcl8.4.so.0\n    obj:/usr/lib/libtcl8.4.so.0\n    fun:Tcl_WriteObj\n    fun:Tcl_PutsObjCmd\n    fun:TclEvalObjvInternal\n    obj:/usr/lib/libtcl8.4.so.0\n    fun:TclCompEvalObj\n    fun:TclObjInterpProc\n    fun:TclEvalObjvInternal\n}\n\n{\n    CrazyTclError28\n    Memcheck:Leak\n    fun:malloc\n    fun:TclThreadAllocObj\n    fun:Tcl_NewStringObj\n    fun:TclNewFSPathObj\n    fun:TclpMatchInDirectory\n    fun:Tcl_FSMatchInDirectory\n    fun:TclDoGlob\n    fun:TclDoGlob\n    fun:TclDoGlob\n    fun:TclDoGlob\n    fun:TclDoGlob\n    fun:TclDoGlob\n}\n\n{\n    CrazyTclError29\n    Memcheck:Leak\n    fun:malloc\n    fun:TclpAlloc\n    fun:Tcl_Alloc\n    fun:TclInitByteCodeObj\n    fun:TclSetByteCodeFromAny\n    obj:/usr/lib/libtcl8.4.so.0\n    fun:TclObjInterpProc\n    fun:TclEvalObjvInternal\n    obj:/usr/lib/libtcl8.4.so.0\n    fun:TclCompEvalObj\n    fun:TclObjInterpProc\n    fun:TclEvalObjvInternal\n}\n\n{\n    CrazyTclError30\n    Memcheck:Leak\n    fun:malloc\n    fun:TclpAlloc\n    fun:Tcl_Alloc\n    obj:/usr/lib/libtcl8.4.so.0\n    obj:/usr/lib/libtcl8.4.so.0\n    obj:/usr/lib/libtcl8.4.so.0\n    fun:Tcl_GetsObj\n    fun:Tcl_Gets\n    obj:/usr/lib/libtcl8.4.so.0\n    fun:Tcl_SetSystemEncoding\n    fun:TclpSetInitialEncodings\n    obj:/usr/lib/libtcl8.4.so.0\n}\n\n{\n  CrazyTclError31\n  Memcheck:Leak\n  fun:malloc\n  fun:TclpAlloc\n  fun:Tcl_Alloc\n  fun:TclCompileScript\n  fun:TclCompileIfCmd\n  fun:TclCompileScript\n  fun:TclCompileIfCmd\n  fun:TclCompileScript\n  fun:TclCompileWhileCmd\n  fun:TclCompileScript\n  fun:TclCompileIfCmd\n  fun:TclCompileScript\n}\n\n{\n  CrazyTclError32\n  Memcheck:Leak\n  fun:malloc\n  fun:TclpAlloc\n  fun:Tcl_Alloc\n  fun:TclExpandCodeArray\n  fun:TclCompileIncrCmd\n  fun:TclCompileScript\n  fun:TclCompileIfCmd\n  fun:TclCompileScript\n  fun:TclCompileWhileCmd\n  fun:TclCompileScript\n  fun:TclCompileIfCmd\n  fun:TclCompileScript\n}\n\n{\n  CrazyTclError33\n  Memcheck:Leak\n  fun:malloc\n  fun:TclpAlloc\n  fun:Tcl_Alloc\n  fun:Tcl_CreateHashEntry\n  fun:TclLookupArrayElement\n  obj:/usr/lib/libtcl8.4.so.0\n  fun:TclCompEvalObj\n  fun:TclObjInterpProc\n  fun:TclEvalObjvInternal\n  obj:/usr/lib/libtcl8.4.so.0\n  fun:TclCompEvalObj\n  fun:TclObjInterpProc\n}\n\n{\n  CrazyTclError34\n  Memcheck:Leak\n  fun:malloc\n  fun:TclThreadAllocObj\n  fun:Tcl_NewStringObj\n  fun:TclpNativeSplitPath\n  fun:Tcl_FSSplitPath\n  obj:/usr/lib/libtcl8.4.so.0\n  fun:TclFSEnsureEpochOk\n  fun:Tcl_FSGetFileSystemForPath\n  fun:Tcl_FSAccess\n  obj:/usr/lib/libtcl8.4.so.0\n  fun:Tcl_FileObjCmd\n}\n\n{\n  CrazyTclError35\n  Memcheck:Leak\n  fun:malloc\n  fun:TclThreadAllocObj\n  fun:Tcl_NewStringObj\n  fun:TclpNativeSplitPath\n  fun:Tcl_FSSplitPath\n  obj:/usr/lib/libtcl8.4.so.0\n  fun:Tcl_FSGetNormalizedPath\n  fun:TclFSEnsureEpochOk\n  fun:Tcl_FSGetFileSystemForPath\n  fun:Tcl_FSAccess\n  obj:/usr/lib/libtcl8.4.so.0\n  fun:Tcl_FileObjCmd\n}\n\n{\n  CrazyTclError36\n  Memcheck:Leak\n  fun:malloc\n  fun:TclThreadAllocObj\n  fun:Tcl_NewLongObj\n  obj:/usr/lib/libtcl8.4.so.0\n  fun:Tcl_ExprObj\n  obj:/usr/lib/libtcl8.4.so.0\n  fun:TclCompEvalObj\n  fun:TclObjInterpProc\n  fun:TclEvalObjvInternal\n  obj:/usr/lib/libtcl8.4.so.0\n  fun:TclCompEvalObj\n  fun:TclObjInterpProc\n}\n{\n   CrazyTclError37\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_SetSystemEncoding\n   fun:TclpSetInitialEncodings\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_FindExecutable\n   fun:Tcl_Main\n   fun:main\n}\n{\n   CrazyTclError38\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:TclCompileScript\n   fun:TclCompileTokens\n   fun:TclCompileExprWords\n   fun:TclCompileExprCmd\n   fun:TclCompileScript\n   fun:TclCompileTokens\n   fun:TclCompileSetCmd\n   fun:TclCompileScript\n   fun:TclCompileCmdWord\n}\n{\n   CrazyTclError39\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:TclCompileScript\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:TclCompileExpr\n   fun:TclCompileExprWords\n   fun:TclCompileIfCmd\n   fun:TclCompileScript\n   fun:TclCompileCmdWord\n   fun:TclCompileIfCmd\n}\n{\n   CrazyTclError40\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_SetSystemEncoding\n   fun:TclpSetInitialEncodings\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_FindExecutable\n   fun:Tcl_Main\n   fun:main\n}\n{\n   CrazyTclError41\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_SetSystemEncoding\n   fun:TclpSetInitialEncodings\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_FindExecutable\n   fun:Tcl_Main\n   fun:main\n}\n{\n   CrazyTclError42\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:TclpRealloc\n   fun:Tcl_AttemptRealloc\n   fun:Tcl_AttemptSetObjLength\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_AppendObjToObj\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_GetStringFromObj\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_GetStringFromObj\n   obj:/usr/lib/libtcl8.4.so.0\n}\n{\n   CrayTclError43\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:TclCompileScript\n   fun:TclCompileTokens\n   fun:TclCompileExprWords\n   fun:TclCompileExprCmd\n   fun:TclCompileScript\n   fun:TclCompileTokens\n   fun:TclCompileSetCmd\n   fun:TclCompileScript\n   fun:TclCompileCmdWord\n}\n{\n   CrazyTclError44\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:TclCompileScript\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:TclCompileExpr\n   fun:TclCompileExprWords\n   fun:TclCompileIfCmd\n   fun:TclCompileScript\n   fun:TclCompileCmdWord\n   fun:TclCompileIfCmd\n}\n{\n   CrazyTclError45\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_SetSystemEncoding\n   fun:TclpSetInitialEncodings\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_FindExecutable\n   fun:Tcl_Main\n   fun:main\n}\n{\n   CrazyTclError46\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:TclCompileScript\n   fun:TclCompileTokens\n   fun:TclCompileExprWords\n   fun:TclCompileExprCmd\n   fun:TclCompileScript\n   fun:TclCompileTokens\n   fun:TclCompileSetCmd\n   fun:TclCompileScript\n   fun:TclCompileCmdWord\n}\n{\n   CrazyTclError47\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:TclCompileScript\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:TclCompileExpr\n   fun:TclCompileExprWords\n   fun:TclCompileIfCmd\n   fun:TclCompileScript\n   fun:TclCompileCmdWord\n   fun:TclCompileIfCmd\n}\n{\n   CrazyTclError48\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:TclCompileScript\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:TclCompileExpr\n   fun:TclCompileExprWords\n   fun:TclCompileIfCmd\n   fun:TclCompileScript\n   fun:TclCompileCmdWord\n   fun:TclCompileIfCmd\n}\n{\n   CrazyTclError49\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_SetSystemEncoding\n   fun:TclpSetInitialEncodings\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_FindExecutable\n   fun:Tcl_Main\n   fun:main\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:malloc\n   fun:__cxa_get_globals\n   fun:_ZSt18uncaught_exceptionv\n   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc\n   fun:_Z63itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorTestiPPc\n   fun:main\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:calloc\n   obj:/lib/ld-2.3.?.so\n   fun:_dl_allocate_tls\n   fun:allocate_stack\n   fun:pthread_create@@GLIBC_2.1\n   fun:_ZN3itk13MultiThreader19SingleMethodExecuteEv\n   fun:_ZN3itk11ImageSourceINS_5ImageIdLj6EEEE12GenerateDataEv\n   fun:_ZN3itk13ProcessObject16UpdateOutputDataEPNS_10DataObjectE\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:malloc\n   fun:__cxa_get_globals\n   fun:_ZSt18uncaught_exceptionv\n   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc\n   fun:_ZN3itk12OutputWindow11DisplayTextEPKc\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:malloc\n   fun:__cxa_get_globals\n   fun:__cxa_throw\n}\n{\n   ostream stuff\n   Memcheck:Leak\n   fun:malloc\n   fun:__cxa_get_globals\n   fun:_ZSt18uncaught_exceptionv\n   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc\n}\n{\n   ostream stuff\n   Memcheck:Leak\n   fun:malloc\n   fun:__cxa_get_globals\n   fun:_ZSt18uncaught_exceptionv\n   fun:_ZNSolsEm\n   fun:_ZNSolsEj\n}\n{\n   basic_ostream From cumulative gaussian optimizer\n   Memcheck:Leak\n   fun:malloc\n   fun:__cxa_get_globals\n   fun:_ZSt18uncaught_exceptionv\n   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc\n}\n{\n   ostream stuff\n   Memcheck:Value4\n   obj:/usr/lib/libstdc++.so.6.0.3\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intImEES3_S3_RSt8ios_basecT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecm\n   fun:_ZNSolsEm\n}\n{\n   ostream stuff\n   Memcheck:Value8\n   fun:vfprintf\n   fun:vsnprintf\n   fun:snprintf\n   obj:/usr/lib/libstdc++.so.6.0.3\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n}\n{\n   itkThreadLoggerTest 1\n   Memcheck:Leak\n   fun:calloc\n   obj:/lib/ld-2.3.?.so\n   fun:_dl_allocate_tls\n   fun:allocate_stack\n   fun:pthread_create@@GLIBC_2.1\n   fun:_ZN3itk13MultiThreader11SpawnThreadEPFPvS1_ES1_\n   fun:_ZN3itk12ThreadLoggerC1Ev\n   fun:_ZN3itk12ThreadLogger3NewEv\n   fun:_Z19itkThreadLoggerTestiPPc\n   fun:main\n}\n{\n   itkThreadLoggerTest 1\n   Memcheck:Leak\n   fun:calloc\n   fun:_dl_allocate_tls\n   fun:pthread_create@@GLIBC_2.1\n   fun:_ZN3itk13MultiThreader11SpawnThreadEPFPvS1_ES1_\n   fun:_ZN3itk12ThreadLoggerC1Ev\n   fun:_ZN3itk12ThreadLogger3NewEv\n}\n{\n   itkCommonPrintTest\n   Memcheck:Cond\n   obj:/usr/lib/libstdc++.so.6.0.3\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intImEES3_S3_RSt8ios_basecT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecPKv\n   fun:_ZNSolsEPKv\n   fun:_ZNK3itk21KLMSegmentationBorder9PrintSelfERSoNS_6IndentE\n   fun:_ZNK3itk11LightObject5PrintERSoNS_6IndentE\n   fun:_ZNK3itk12SmartPointerINS_21KLMSegmentationBorderEE5PrintERSo\n   fun:_ZN3itklsINS_21KLMSegmentationBorderEEERSoS2_NS_12SmartPointerIT_EE\n   fun:_Z18itkCommonPrintTestiPPc\n   fun:main\n}\n{\n   itkCommonPrintTest\n   Memcheck:Value4\n   obj:/usr/lib/libstdc++.so.6.0.3\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE13_M_insert_intImEES3_S3_RSt8ios_basecT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecPKv\n   fun:_ZNSolsEPKv\n   fun:_ZNK3itk21KLMSegmentationBorder9PrintSelfERSoNS_6IndentE\n   fun:_ZNK3itk11LightObject5PrintERSoNS_6IndentE\n   fun:_ZNK3itk12SmartPointerINS_21KLMSegmentationBorderEE5PrintERSo\n   fun:_ZN3itklsINS_21KLMSegmentationBorderEEERSoS2_NS_12SmartPointerIT_EE\n   fun:_Z18itkCommonPrintTestiPPc\n   fun:main\n}\n{\n   Below block is after changes to Multithreader, Aug 05\n   Memcheck:Leak\n   fun:calloc\n   obj:/lib/ld-2.3.?.so\n   fun:_dl_allocate_tls\n   fun:allocate_stack\n   fun:pthread_create@@GLIBC_2.1\n   fun:_ZN3itk13MultiThreader26DispatchSingleMethodThreadEPNS0_16ThreadInfoStructE\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:calloc\n   obj:/lib/ld-2.3.?.so\n   fun:_dl_allocate_tls\n   fun:pthread_create@@GLIBC_2.1\n   fun:_ZN3itk13MultiThreader26DispatchSingleMethodThreadEPNS0_16ThreadInfoStructE\n   fun:_ZN3itk13MultiThreader19SingleMethodExecuteEv\n   fun:_ZN3itk11ImageSourceINS_5ImageIfLj2EEEE12GenerateDataEv\n   fun:_ZN3itk13ProcessObject16UpdateOutputDataEPNS_10DataObjectE\n   fun:_ZN3itk10DataObject16UpdateOutputDataEv\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:calloc\n   obj:/lib/ld-2.3.?.so\n   fun:_dl_allocate_tls\n   fun:pthread_create@@GLIBC_2.1\n   fun:_ZN3itk13MultiThreader26DispatchSingleMethodThreadEPNS0_16ThreadInfoStructE\n   fun:_ZN3itk13MultiThreader19SingleMethodExecuteEv\n}\n{\n   Exception allocation\n   Memcheck:Leak\n   fun:malloc\n   fun:__cxa_get_globals\n   fun:__cxa_allocate_exception\n}\n{\n   Exception allocation\n   Memcheck:Leak\n   fun:malloc\n   fun:__cxa_get_globals\n   fun:__cxa_allocate_exception\n}\n{\n  index(strchr.S)\n  Memcheck:Cond\n  fun:index\n}\n{\n  /lib/libz\n  Memcheck:Cond\n  obj:*/libz.so.1.2.3\n}\n\n{\n   dlopen leak1\n   Memcheck:Leak\n   fun:calloc\n   fun:_dlerror_run\n   fun:dlopen*\n}\n\n{\n   dlopen leak2\n   Memcheck:Leak\n   fun:calloc\n   obj:/lib/libdl-2.?.?.so\n   fun:dlopen*\n}\n{\n   dlopen leak3\n   Memcheck:Leak\n   fun:calloc\n   obj:/lib64/libdl-2.?.so\n   fun:dlopen\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:Tcl_GetThreadData\n   fun:Tcl_InitNotifier\n   fun:TclInitNotifier\n   fun:TclInitSubsystems\n   fun:Tcl_FindExecutable\n   fun:Tcl_Main\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:Tcl_CreateChannel\n   fun:Tcl_MakeFileChannel\n   fun:TclpGetDefaultStdChannel\n   fun:Tcl_GetStdChannel\n   fun:Tcl_GetChannel\n   fun:Tcl_PutsObjCmd\n   fun:TclEvalObjvInternal\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:TclCompEvalObj\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_GetStringFromObj\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:TclCompEvalObj\n   fun:TclObjInterpProc\n   fun:TclEvalObjvInternal\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:TclCompEvalObj\n   fun:TclObjInterpProc\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_GetsObj\n   fun:Tcl_GetsObjCmd\n   fun:TclEvalObjvInternal\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:TclCompEvalObj\n   fun:TclObjInterpProc\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_GetsObj\n   fun:Tcl_GetsObjCmd\n   fun:TclEvalObjvInternal\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:TclCompEvalObj\n   fun:TclObjInterpProc\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_GetsObj\n   fun:Tcl_GetsObjCmd\n   fun:TclEvalObjvInternal\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:TclCompEvalObj\n   fun:TclObjInterpProc\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:Tcl_MutexLock\n   fun:TclInitObjSubsystem\n   fun:TclInitSubsystems\n   fun:Tcl_FindExecutable\n   fun:Tcl_Main\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:Tcl_CreateHashEntry\n   fun:Tcl_RegisterObjType\n   fun:TclInitObjSubsystem\n   fun:TclInitSubsystems\n   fun:Tcl_FindExecutable\n   fun:Tcl_Main\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_GetsObj\n   fun:Tcl_Gets\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:TclpSetInitialEncodings\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_FindExecutable\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:TclpSetInitialEncodings\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_FindExecutable\n   fun:Tcl_Main\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_FSEvalFile\n   fun:Tcl_SourceObjCmd\n   fun:TclEvalObjvInternal\n   fun:Tcl_EvalObjv\n   fun:Tcl_EvalObjEx\n   fun:Tcl_UplevelObjCmd\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_FSEvalFile\n   fun:Tcl_SourceObjCmd\n   fun:TclEvalObjvInternal\n   fun:Tcl_EvalObjv\n   fun:Tcl_EvalObjEx\n   fun:Tcl_UplevelObjCmd\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:TclpRealloc\n   fun:Tcl_Realloc\n   fun:Tcl_SetObjLength\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_FSEvalFile\n   fun:Tcl_SourceObjCmd\n   fun:TclEvalObjvInternal\n   fun:Tcl_EvalObjv\n   fun:Tcl_EvalObjEx\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:Tcl_NewStringObj\n   fun:Tcl_EvalTokensStandard\n   fun:Tcl_EvalEx\n   fun:Tcl_FSEvalFile\n   fun:Tcl_SourceObjCmd\n   fun:TclEvalObjvInternal\n   fun:Tcl_EvalObjv\n   fun:Tcl_EvalObjEx\n   fun:Tcl_UplevelObjCmd\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:TclpRealloc\n   fun:Tcl_Realloc\n   fun:Tcl_SetObjLength\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_FSEvalFile\n   fun:Tcl_Main\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   fun:Tcl_CreateChannel\n   fun:Tcl_MakeFileChannel\n   fun:TclpGetDefaultStdChannel\n   fun:Tcl_GetStdChannel\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_GetChannel\n   fun:Tcl_PutsObjCmd\n   fun:TclEvalObjvInternal\n   obj:/usr/lib/libtcl8.4.so.0\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:Tcl_Alloc\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_GetsObj\n   fun:Tcl_GetsObjCmd\n   fun:TclEvalObjvInternal\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:TclCompEvalObj\n   fun:TclObjInterpProc\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   fun:malloc\n   fun:TclpAlloc\n   fun:TclpRealloc\n   fun:Tcl_AttemptRealloc\n   fun:Tcl_AttemptSetObjLength\n   obj:/usr/lib/libtcl8.4.so.0\n   fun:Tcl_EvalTokensStandard\n   fun:Tcl_EvalEx\n   fun:Tcl_FSEvalFile\n   fun:Tcl_SourceObjCmd\n   fun:TclEvalObjvInternal\n   fun:Tcl_EvalObjv\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Cond\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Cond\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Addr8\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/libc-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   fun:__libc_dlopen_mode\n   fun:pthread_cancel_init\n   fun:_Unwind_ForcedUnwind\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Cond\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:*\n   obj:*\n   obj:*\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Cond\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n   obj:/lib/ld-2.10.1.so\n}\n{\n   ExitFreeLibC brian.jouy.inra.fr\n   Memcheck:Free\n   fun:free\n   obj:/lib64/libc-2.9.so\n   obj:/lib64/libc-2.9.so\n   fun:_vgnU_freeres\n   fun:exit\n   fun:(below main)\n}\n{\n   ExitFreeLibC brian.jouy.inra.fr\n   Memcheck:Free\n   fun:free\n   obj:/lib64/libc-2.9.so\n   obj:/lib64/libc-2.9.so\n   fun:_vgnU_freeres\n   fun:exit\n   fun:fhdl\n   obj:/lib64/libpthread-2.9.so\n   fun:_Z30itkFloatingPointExceptionsTestiPPc\n   fun:main\n}\n{\n   itkFloatingPointExceptionsTest leak brian.jouy.inra.fr\n   Memcheck:Leak\n   fun:_Znwm\n   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE\n   obj:/usr/lib64/libstdc++.so.6.0.10\n   fun:_ZNSsC1EPKcRKSaIcE\n   fun:_Z30itkFloatingPointExceptionsTestiPPc\n   fun:main\n}\n{\n   CrazyTclError brian.jouy.inra.fr\n   Memcheck:Leak\n   fun:realloc\n   fun:Tcl_Realloc\n   obj:/usr/lib64/libtcl8.6.so.0\n   fun:Tcl_GetUnicodeFromObj\n   obj:/usr/lib64/libtcl8.6.so.0\n   fun:TclNRRunCallbacks\n   obj:/usr/lib64/libtcl8.6.so.0\n   fun:Tcl_FSEvalFileEx\n   fun:Tcl_Main\n   fun:main\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:malloc\n   fun:strdup\n   fun:Py_InitializeEx\n   fun:Py_Main\n   fun:(below main)\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:malloc\n   fun:PyList_New\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:Py_BuildValue\n   fun:PyImport_Import\n   fun:PyImport_ImportModule\n   fun:_PyExc_Init\n   fun:Py_InitializeEx\n   fun:Py_Main\n   fun:(below main)\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:malloc\n   fun:_dl_new_object\n   fun:_dl_map_object_from_fd\n   fun:_dl_map_object\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   obj:/lib64/libdl-2.9.so\n   fun:_dl_catch_error\n   obj:/lib64/libdl-2.9.so\n   fun:dlopen\n   fun:_PyImport_GetDynLoadFunc\n   fun:_PyImport_LoadDynamicModule\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyImport_ImportModuleLevel\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyObject_Call\n   fun:PyEval_CallObjectWithKeywords\n   fun:PyEval_EvalFrameEx\n   fun:PyEval_EvalCodeEx\n   fun:PyEval_EvalCode\n   obj:/usr/lib64/libpython2.6.so.1.0\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:malloc\n   fun:expand_dynamic_string_token\n   fun:_dl_map_object\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   obj:/lib64/libdl-2.9.so\n   fun:_dl_catch_error\n   obj:/lib64/libdl-2.9.so\n   fun:dlopen\n   fun:_PyImport_GetDynLoadFunc\n   fun:_PyImport_LoadDynamicModule\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyImport_ImportModuleLevel\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyObject_Call\n   fun:PyEval_CallObjectWithKeywords\n   fun:PyEval_EvalFrameEx\n   fun:PyEval_EvalCodeEx\n   fun:PyEval_EvalCode\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyRun_FileExFlags\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:calloc\n   fun:_dl_check_map_versions\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   obj:/lib64/libdl-2.9.so\n   fun:_dl_catch_error\n   obj:/lib64/libdl-2.9.so\n   fun:dlopen\n   fun:_PyImport_GetDynLoadFunc\n   fun:_PyImport_LoadDynamicModule\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyImport_ImportModuleLevel\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyObject_Call\n   fun:PyEval_CallObjectWithKeywords\n   fun:PyEval_EvalFrameEx\n   fun:PyEval_EvalCodeEx\n   fun:PyEval_EvalCode\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyRun_FileExFlags\n   fun:PyRun_SimpleFileExFlags\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:malloc\n   fun:PyThread_allocate_lock\n   fun:PyInterpreterState_New\n   fun:Py_InitializeEx\n   fun:Py_Main\n   fun:(below main)\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:malloc\n   fun:_dl_map_object_deps\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   obj:/lib64/libdl-2.9.so\n   fun:_dl_catch_error\n   obj:/lib64/libdl-2.9.so\n   fun:dlopen\n   fun:_PyImport_GetDynLoadFunc\n   fun:_PyImport_LoadDynamicModule\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyImport_ImportModuleLevel\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyObject_Call\n   fun:PyEval_CallObjectWithKeywords\n   fun:PyEval_EvalFrameEx\n   fun:PyEval_EvalCodeEx\n   fun:PyEval_EvalCode\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyRun_FileExFlags\n   fun:PyRun_SimpleFileExFlags\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:malloc\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:Py_GetProgramFullPath\n   fun:_PySys_Init\n   fun:Py_InitializeEx\n   fun:Py_Main\n   fun:(below main)\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:realloc\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyType_Ready\n   fun:_PyExc_Init\n   fun:Py_InitializeEx\n   fun:Py_Main\n   fun:(below main)\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:malloc\n   fun:realloc\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyType_Ready\n   fun:_Py_ReadyTypes\n   fun:Py_InitializeEx\n   fun:Py_Main\n   fun:(below main)\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:calloc\n   fun:_dl_new_object\n   fun:_dl_map_object_from_fd\n   fun:_dl_map_object\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   obj:/lib64/libdl-2.9.so\n   fun:_dl_catch_error\n   obj:/lib64/libdl-2.9.so\n   fun:dlopen\n   fun:_PyImport_GetDynLoadFunc\n   fun:_PyImport_LoadDynamicModule\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyImport_ImportModuleLevel\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyObject_Call\n   fun:PyEval_CallObjectWithKeywords\n   fun:PyEval_EvalFrameEx\n   fun:PyEval_EvalCodeEx\n   fun:PyEval_EvalCode\n   obj:/usr/lib64/libpython2.6.so.1.0\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:malloc\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:_PyInt_Init\n   fun:Py_InitializeEx\n   fun:Py_Main\n   fun:(below main)\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:malloc\n   fun:PyStructSequence_InitType\n   fun:_PyFloat_Init\n   fun:Py_InitializeEx\n   fun:Py_Main\n   fun:(below main)\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:malloc\n   fun:PyObject_Malloc\n   fun:_PyObject_GC_Malloc\n   fun:_PyObject_GC_NewVar\n   fun:PyFrame_New\n   fun:PyEval_EvalCodeEx\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyObject_Call\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyObject_Call\n   fun:PyObject_CallFunctionObjArgs\n   fun:PyEval_EvalFrameEx\n   fun:PyEval_EvalCodeEx\n   fun:PyEval_EvalCode\n   fun:PyImport_ExecCodeModuleEx\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyImport_ImportModuleLevel\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyObject_Call\n   fun:PyEval_CallObjectWithKeywords\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:malloc\n   obj:/usr/lib64/libpython2.6.so.1.0\n   fun:PyType_Ready\n   fun:PyType_Ready\n   fun:_Py_ReadyTypes\n   fun:Py_InitializeEx\n   fun:Py_Main\n   fun:(below main)\n}\n{\n   <insert a suppression name here>\n   Memcheck:Leak\n   fun:malloc\n   fun:PyObject_Malloc\n   fun:_PyObject_GC_Malloc\n   fun:_PyObject_GC_NewVar\n   fun:PyTuple_New\n   fun:PyType_Ready\n   fun:PyType_Ready\n   fun:_Py_ReadyTypes\n   fun:Py_InitializeEx\n   fun:Py_Main\n   fun:(below main)\n}\n{\n   NRDD String SSE42 1\n   Memcheck:Addr8\n   fun:__strspn_sse42\n   fun:itk_airStrtok\n   ...\n   fun:itk_nrrdRead\n}\n{\n   NRDD String SSE42 2\n   Memcheck:Value8\n   fun:__strspn_sse42\n   fun:itk_airStrtok\n   ...\n   fun:itk_nrrdRead\n}\n{\n   NRDD String SSE42 3\n   Memcheck:Cond\n   fun:__strspn_sse42\n   fun:itk_airStrtok\n   ...\n   fun:itk_nrrdRead\n}\n{\n   NRDD String 1\n   Memcheck:Value8\n   fun:itk_airStrtok\n   fun:itk_airStrntok\n   fun:itk__nrrdSpaceVectorParse\n   ...\n   fun:itk_nrrdRead\n}\n{\n   NRDD String 2\n   Memcheck:Value8\n   fun:strcspn\n   fun:itk_airStrtok\n   fun:itk_airStrntok\n   fun:itk__nrrdSpaceVectorParse\n   ...\n   fun:itk_nrrdRead\n}\n{\n   NRDD String 3\n   Memcheck:Cond\n   fun:itk_airStrntok\n   fun:itk__nrrdSpaceVectorParse\n   ...\n   fun:itk_nrrdRead\n}\n{\n   NRDD String 4\n   Memcheck:Cond\n   fun:itk_airStrlen\n   fun:itk_airStrtok\n   fun:itk_airStrntok\n   fun:itk__nrrdSpaceVectorParse\n   ...\n   fun:itk_nrrdRead\n}\n{\n   NRDD String 5\n   Memcheck:Value8\n   fun:strlen\n   fun:itk_airStrlen\n   fun:itk_airStrtok\n   fun:itk_airStrntok\n   fun:itk__nrrdSpaceVectorParse\n   ...\n   fun:itk_nrrdRead\n}\n{\n   NRRD Direction 1\n   Memcheck:Cond\n   ...\n   fun:_nrrdReadNrrdParse_space_directions\n   fun:_nrrdFormatNRRD_read\n   fun:itk__nrrdRead\n   fun:itk_nrrdRead\n}\n{\n   NRRD Direction 2\n   Memcheck:Value8\n   ...\n   fun:_nrrdReadNrrdParse_space_directions\n   fun:_nrrdFormatNRRD_read\n   fun:itk__nrrdRead\n   fun:itk_nrrdRead\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/ReleaseNotes/2.8.md": "ITK Release 2.8\n===============\n\nThis release covers the period March 15, 2006 through May 30, 2006.\n\nSchedule\n--------\n\n  Release Number                   Start Date     End Date\n  -------------------------------- -------------- --------------\n  Last period for adding classes   May 1 2006     May 12 2006\n  Feature freeze                   May 12 2006    May 26 2006\n  CVS Tagging                      May 27, 2006   May 27, 2006\n  Testing tarballs                 May 28, 2006   May 29, 2006\n  Posting tarballs                 May 29 2006    May 30 2006\n\nAdoption of CMake 2.2.3\n-----------------------\n\nITK 2.8 requires the use of CMake 2.2.3.\n\nIt is recommended that when moving into CMake 2.2 from CMake 2.0, the\ndeveloper should start with a fresh build process.\n\nNew Features in this Release\n----------------------------\n\n-   Concept Checking\n-   Explicit Instantiation\n\nNew Classes in this Release\n---------------------------\n\n    Code/Algorithms/itkThresholdMaximumConnectedComponentsImageFilter\n\n    Code/BasicFilters/itkSignedMaurerDistanceMapImageFilter\n\n    Code/Common/itkXMLFilterWatcher\n\n    Code/SpatialObject/itkContourSpatialObject\n    Code/SpatialObject/itkContourSpatialObjectPoint\n    Code/SpatialObject/itkMetaContourConverter\n\n    Code/Review/CMakeLists.txt\n    Code/Review/d1ma\n    Code/Review/d1mach.f\n    Code/Review/d9gmit\n    Code/Review/d9gmit.f\n    Code/Review/d9lgic\n    Code/Review/d9lgic.f\n    Code/Review/d9lgit\n    Code/Review/d9lgit.f\n    Code/Review/d9lgmc\n    Code/Review/d9lgmc.f\n    Code/Review/dbetai\n    Code/Review/dbetai.f\n    Code/Review/dcsevl\n    Code/Review/dcsevl.f\n    Code/Review/dgami\n    Code/Review/dgami.f\n    Code/Review/dgamit\n    Code/Review/dgamit.f\n    Code/Review/dgamlm\n    Code/Review/dgamlm.f\n    Code/Review/dgamma\n    Code/Review/dgamma.f\n    Code/Review/dgamr\n    Code/Review/dgamr.f\n    Code/Review/d_int\n    Code/Review/dlbeta\n    Code/Review/dlbeta.f\n    Code/Review/dlgams\n    Code/Review/dlgams.f\n    Code/Review/dlngam\n    Code/Review/dlngam.f\n    Code/Review/dlnrel\n    Code/Review/dlnrel.f\n    Code/Review/d_mod\n    Code/Review/initds\n    Code/Review/initds.f\n    Code/Review/itkChiSquareDistribution\n    Code/Review/itkGaussianDistribution\n    Code/Review/itkProbabilityDistribution\n    Code/Review/itkTDistribution\n    Code/Review/xermsg\n\nNew Tests in this Release\n-------------------------\n\n    Testing/Code/Common/itkDifferenceImageFilterTest\n    Testing/Code/Common/itkZeroFluxBoundaryConditionTest\n\n    Testing/Code/BasicFilters/itkSignedMaurerDistanceMapImageFilterTest\n    Testing/Code/BasicFilters/itkVectorIndexSelectionCastImageFilterTest\n\n    Testing/Code/Algorithms/itkThresholdMaximumConnectedComponentsImageFilterTest\n\n    Testing/Code/Review/CMakeLists.txt\n    Testing/Code/Review/itkChiSquareDistributionTest\n    Testing/Code/Review/itkGaussianDistributionTest\n    Testing/Code/Review/itkReviewHeaderTest\n    Testing/Code/Review/itkReviewPrintTest\n    Testing/Code/Review/itkReviewTests\n    Testing/Code/Review/itkTDistributionTest\n\nNew Examples in this Release\n----------------------------\n\n\n    Examples/IO/ImageReadDicomSeriesWrite\n\n    Examples/Registration/ModelToImageRegistration2\n\nNew Utilities in this Release\n-----------------------------\n\n    Utilities/Dart/BuildContinuousWithCTest.bat.in\n    Utilities/Dart/BuildContinuousWithCTest.sh.in\n    Utilities/KWStyle/ITKHeader\n    Utilities/KWStyle/ITK.kws.xml.in\n    Utilities/KWStyle/ITKOverwrite.txt\n    Utilities/kwsys/auto_ptr.hxx.in\n    Utilities/kwsys/DynamicLoader\n    Utilities/kwsys/DynamicLoader.hxx.in\n    Utilities/kwsys/Terminal\n    Utilities/kwsys/Terminal.h.in\n    Utilities/kwsys/testDynamicLoader\n    Utilities/kwsys/testDynload\n    Utilities/kwsys/testTerminal\n    Utilities/MetaIO/metaContour\n    Utilities/MetaIO/tests/testMeta10Contour\n\nChanges in this Release\n-----------------------\n\n\n    CMakeLists.txt\n        ENH: Updating the MINOR VERSION Number in preparation for release of ITK 2.8.\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n        ENH: Borland compiler flags must now be set to prevent too many warnings. Ths is due to a CMake change in default flags for Borland.\n        BUG: No quotes\n        ENH: Forcing Concept checking to be always disabled for the Borland compiler.\n        ENH: Added explicit instantiation support framework to itkMacro.h.  See this header for details and documentation of the support macros.  Added option ITK_EXPLICIT_INSTANTIATION to itkConfigure.h because it is used to determine whether ITK provides explicit instantiations, which does not change outside the project.  Added instantiations of some common core types.  Removed old explicit instantiation beta code.\n        ENH: Moving minor number to \"7\" after tagging for release ITK 2.6.\n\n    ITKConfig.cmake.in\n        ENH: Specify ITK_GDCM_DIR and ITK_USE_SYSTEM_GDCM in the export configuration so that projects using ITK know about it\n\n    UseITK.cmake.in\n        ENH: Allow ITK to be built against an installed version of GDCM with the ITK_USE_SYSTEM_GDCM option\n\n    itkConfigure.h.in\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n        ENH: begin introducing concept checking; introducing ITK_USE_CONCEPT_CHECKING CMake variable to determine whether concept checking is used\n\n    itkGenerateITKConfig.cmake\n        ENH: Allow ITK to be built against an installed version of GDCM with the ITK_USE_SYSTEM_GDCM option\n\n    itkIncludeDirectories.cmake\n        ENH: Do not add GDCM to the build tree if its ITK_USE_SYSTEM_GDCM is on\n\n    CMake/CheckCPPDirective.cmake\n        ENH: Allow ITK to be built against an installed version of GDCM with the ITK_USE_SYSTEM_GDCM option\n\n    CMake/Attic/FindGDCM.cmake\n        ENH: Remove confusing script that was written at the time where GDCM was build using autotools...\n\n    Code/CMakeLists.txt\n\n    Code/Algorithms/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Code/Algorithms/itkAntiAliasBinaryImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkBalloonForceFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkBayesianClassifierImageFilter\n\n    Code/Algorithms/itkBayesianClassifierInitializationImageFilter\n\n    Code/Algorithms/itkBinaryMask3DMeshSource\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkBinaryMedialNodeMetr\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkBinaryMinMaxCurvatureFlowImageFilter\n        ENH: adding concept-checking\n\n    Code/Algorithms/itkBinaryPruningImageFilter\n        STYLE: Updated filter description\n        ENH: adding concept-checking\n\n    Code/Algorithms/itkBinaryThinningImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkBioCell\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkBioGenome\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkCannySegmentationLevelSetFunction\n\n    Code/Algorithms/itkCannySegmentationLevelSetImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkCollidingFrontsImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkCorrelationCoefficientHistogramImageToImageMetr\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkCurvatureFlowImageFilter\n        ENH: adding concept-checking\n\n    Code/Algorithms/itkCurvatureRegistrationFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkCurvesLevelSetImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkDeformableMesh3DFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkDeformableSimplexMesh3DBalloonForceFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkDeformableSimplexMesh3DFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkDeformableSimplexMesh3DGradientConstraintForceFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkEuclideanDistancePointMetr\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkExtensionVelocitiesImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkFEMFiniteDifferenceFunctionLoad\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkFEMRegistrationFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkFastChamferDistanceImageFilter\n        COMP: fixing a compile error\n\n    Code/Algorithms/itkFastChamferDistanceImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkFastMarchingExtensionImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkFastMarchingImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkFastMarchingUpwindGradientImageFilter\n        BUG: Fixed the TargetReached modes of the algorithm\n\n    Code/Algorithms/itkFastMarchingUpwindGradientImageFilter\n        BUG: Fixed the TargetReached modes of the algorithm\n\n    Code/Algorithms/itkGradientVectorFlowImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkHistogramMatchingImageFilter\n        ENH: adding concept-checking\n\n    Code/Algorithms/itkImageKmeansModelEstimator\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkImageToSpatialObjectMetric\n\n    Code/Algorithms/itkImageToSpatialObjectMetr\n\n    Code/Algorithms/itkImageToSpatialObjectRegistrationMethod\n\n    Code/Algorithms/itkImageToSpatialObjectRegistrationMethod\n\n    Code/Algorithms/itkIsoContourDistanceImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkIsoContourDistanceImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkIsolatedWatershedImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkKLMRegionGrowImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkKullbackLeiblerCompareHistogramImageToImageMetric\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkKullbackLeiblerCompareHistogramImageToImageMetr\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkLabelVotingImageFilter\n        BUG: missing InputImageDimension.\n\n    Code/Algorithms/itkMIRegistrationFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkMRFImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkMRIBiasFieldCorrectionFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkMRIBiasFieldCorrectionFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkMattesMutualInformationImageToImageMetr\n        BUG: Stop looking for points if using an image mask if we try 10 times more than the requested number (helps with mistakes using empty mask images)\n\n    Code/Algorithms/itkMeanReciprocalSquareDifferencePointSetToImageMetr\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkMeanSquareRegistrationFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkMeanSquaresImageToImageMetric\n        ENH: adding concept checking to a metric as an example\n\n    Code/Algorithms/itkMinMaxCurvatureFlowFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkMinMaxCurvatureFlowImageFilter\n\n    Code/Algorithms/itkMultiResolutionImageRegistrationMethod\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkMultiResolutionPyramidImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkMultiResolutionPyramidImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkMutualInformationHistogramImageToImageMetr\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkMutualInformationImageToImageMetr\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkNCCRegistrationFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkNarrowBandCurvesLevelSetImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkNarrowBandLevelSetImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkNarrowBandThresholdSegmentationLevelSetImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkNormalizedCorrelationImageToImageMetr\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkNormalizedCorrelationPointSetToImageMetr\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkNormalizedMutualInformationHistogramImageToImageMetr\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkOtsuMultipleThresholdsImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkOtsuMultipleThresholdsImageFilter\n        BUG: 2786. Adding types for managing thresholds expressed in RealType.\n\n    Code/Algorithms/itkOtsuThresholdImageCalculator\n        ENH: Added Region to calculator.\n\n    Code/Algorithms/itkOtsuThresholdImageCalculator\n        ENH: Added Region to calculator.\n\n    Code/Algorithms/itkOtsuThresholdImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkRayCastInterpolateImageFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkRecursiveMultiResolutionPyramidImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkReinitializeLevelSetImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkSTAPLEImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkScalarImageKmeansImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkSegmentationLevelSetImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkSimplexMeshVolumeCalculator\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkThresholdMaximumConnectedComponentsImageFilter\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n\n    Code/Algorithms/itkThresholdMaximumConnectedComponentsImageFilter\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n\n    Code/Algorithms/itkThresholdSegmentationLevelSetFunction\n        STYLE: Cleaned up comments\n\n    Code/Algorithms/itkUnaryMedialNodeMetr\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkVectorThresholdSegmentationLevelSetFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkVnlFFTComplexConjugateToRealImageFilter\n\n    Code/Algorithms/itkVoronoiDiagram2DGenerator\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkVoronoiPartitioningImageFilter\n        ENH: adding concept checking\n\n    Code/Algorithms/itkVoronoiPartitioningImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkVoronoiSegmentationImageFilter\n        COMP: fixing compiler warnings\n\n    Code/Algorithms/itkVoronoiSegmentationImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkVoronoiSegmentationImageFilterBase\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkVoronoiSegmentationRGBImageFilter\n        COMP: fixing compiler warnings\n\n    Code/Algorithms/itkVoronoiSegmentationRGBImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Algorithms/itkWatershedImageFilter\n\n    Code/Algorithms/itkWatershedSegmenter\n        STYLE: Equations specified incorrectly\n\n    Code/BasicFilters/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Code/BasicFilters/itkAbsImageFilter\n        BUG: Signed concept is not required for AbsImageFilter\n        ENH: begin introducing concept checking; introducing ITK_USE_CONCEPT_CHECKING CMake variable to determine whether concept checking is used\n\n    Code/BasicFilters/itkAbsoluteValueDifferenceImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkAccumulateImageFilter\n        ENH: adding concept-checking\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkAcosImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkAdaptImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkAdaptiveHistogramEqualizationImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkAddImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkAndImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkAnisotropicDiffusionImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkApproximateSignedDistanceMapImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkAsinImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkAtan2ImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkAtanImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkBSplineCenteredResampleImageFilterBase\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkBSplineDecompositionImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkBSplineDecompositionImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkBSplineDownsampleImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkBSplineDownsampleImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkBSplineInterpolateImageFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkBSplineUpsampleImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkBSplineUpsampleImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkBilateralImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkBilateralImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkBinaryFunctorImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkBinaryMagnitudeImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkBinaryMaskToNarrowBandPointSetFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkBinaryMedianImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkBinaryMorphologyImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkBinaryThresholdImageFilter\n        ENH: More verbose documentation\n        ENH: begin introducing concept checking; introducing ITK_USE_CONCEPT_CHECKING CMake variable to determine whether concept checking is used\n\n    Code/BasicFilters/itkBinomialBlurImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkBloxBoundaryPointImageToBloxBoundaryProfileImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkBloxBoundaryPointImageToBloxBoundaryProfileImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkBloxBoundaryProfileImageToBloxCoreAtomImageFilter\n        ENH: remove redundant dim parameter from itkBloxBoundaryProfileImageToBloxCoreAtomImageFilter\n\n    Code/BasicFilters/itkBloxBoundaryProfileImageToBloxCoreAtomImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkBoundedReciprocalImageFilter\n        ENH: begin introducing concept checking; introducing ITK_USE_CONCEPT_CHECKING CMake variable to determine whether concept checking is used\n\n    Code/BasicFilters/itkCannyEdgeDetectionImageFilter\n        ENH: checking for SameDimension and IsFloatingPoint concepts\n\n    Code/BasicFilters/itkCastImageFilter\n        ENH: begin introducing concept checking; introducing ITK_USE_CONCEPT_CHECKING CMake variable to determine whether concept checking is used\n\n    Code/BasicFilters/itkChangeLabelImageFilter\n        ENH: begin introducing concept checking; introducing ITK_USE_CONCEPT_CHECKING CMake variable to determine whether concept checking is used\n\n    Code/BasicFilters/itkClosingByReconstructionImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkComplexToImaginaryImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkComplexToModulusImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkComplexToPhaseImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkComplexToRealImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkCompose2DCovariantVectorImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkCompose2DVectorImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkCompose3DCovariantVectorImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkCompose3DVectorImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkConfidenceConnectedImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkConfidenceConnectedImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkConnectedComponentFunctorImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkConnectedThresholdImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkConstantPadImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkConstrainedValueAdditionImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkConstrainedValueDifferenceImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkContourDirectedMeanDistanceImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkContourMeanDistanceImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkCosImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkCropImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkCurvatureAnisotropicDiffusionImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkDanielssonDistanceMapImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkDerivativeImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkDifferenceOfGaussiansGradientImageFilter\n        COMP: fixing compiler errors shown on cygwin\n\n    Code/BasicFilters/itkDiffusionTensor3DReconstructionImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkDilateObjectMorphologyImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkDirectedHausdorffDistanceImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkDiscreteGaussianImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkDivideImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkDoubleThresholdImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkEdgePotentialImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkEigenAnalysis2DImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkEigenAnalysis2DImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkErodeObjectMorphologyImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkExpImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkExpNegativeImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkExpandImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkExpandImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkExtractImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGradientAnisotropicDiffusionImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGradientImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGradientImageToBloxBoundaryPointImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkGradientMagnitudeImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGradientMagnitudeRecursiveGaussianImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGradientNDAnisotropicDiffusionFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkGradientRecursiveGaussianImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGradientToMagnitudeImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGrayscaleConnectedClosingImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGrayscaleConnectedOpeningImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGrayscaleDilateImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGrayscaleErodeImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGrayscaleFillholeImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGrayscaleFunctionDilateImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGrayscaleFunctionErodeImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGrayscaleGeodesicDilateImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGrayscaleGeodesicErodeImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGrayscaleGrindPeakImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGrayscaleMorphologicalClosingImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkGrayscaleMorphologicalOpeningImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkHConcaveImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkHConvexImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkHMaximaImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkHMinimaImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkHardConnectedComponentImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkHausdorffDistanceImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkHessian3DToVesselnessMeasureImageFilter\n        COMP: need StaticConstMacro for Borland.\n\n    Code/BasicFilters/itkHessian3DToVesselnessMeasureImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkHessianRecursiveGaussianImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkHoughTransform2DCirclesImageFilter\n        COMP: fixing compiler errors shown on cygwin\n\n    Code/BasicFilters/itkHoughTransform2DCirclesImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkHoughTransform2DLinesImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkHoughTransform2DLinesImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkIntensityWindowingImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkInterpolateImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkInterpolateImagePointsFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkInverseDeformationFieldImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkInvertIntensityImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkIsolatedConnectedImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkIsolatedConnectedImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkIterativeInverseDeformationFieldImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkIterativeInverseDeformationFieldImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkJoinImageFilter\n        COMP: missing typenames.\n\n    Code/BasicFilters/itkJoinSeriesImageFilter\n        ENH: adding more concept-checking\n\n    Code/BasicFilters/itkLabelStatisticsImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkLabelStatisticsImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkLaplacianImageFilter\n        ENH: adding more concept-checking\n\n    Code/BasicFilters/itkLog10ImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkLogImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkMaskImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkMaskNegatedImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkMaskNeighborhoodOperatorImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkMatrixIndexSelectionImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkMaximumImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkMeanImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkMedianImageFilter\n        ENH: adding more concept-checking\n\n    Code/BasicFilters/itkMinimumImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkMinimumMaximumImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkMirrorPadImageFilter\n        ENH: adding more concept-checking\n\n    Code/BasicFilters/itkModulusImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkMorphologicalGradientImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkMultiplyImageFilter\n\n    Code/BasicFilters/itkNaryAddImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkNaryFunctorImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkNaryMaximumImageFilter\n        ENH: adding more concept checking\n\n    Code/BasicFilters/itkNeighborhoodConnectedImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkNeighborhoodOperatorImageFilter\n        ENH: adding more concept-checking\n\n    Code/BasicFilters/itkNoiseImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkNonThreadedShrinkImageFilter\n        ENH: adding more concept-checking\n\n    Code/BasicFilters/itkNonThreadedShrinkImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkNormalizedCorrelationImageFilter\n        COMP: fixing compilation error\n\n    Code/BasicFilters/itkNormalizedCorrelationImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkNotImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkObjectMorphologyImageFilter\n        COMP: fixing a typo that was causing a compiler error on the dashboard\n\n    Code/BasicFilters/itkObjectMorphologyImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkOpeningByReconstructionImageFilter\n        ENH: adding more concept-checking\n\n    Code/BasicFilters/itkOrImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkOrientImageFilter\n        ENH: adding more concept-checking\n\n    Code/BasicFilters/itkParallelSparseFieldLevelSetImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkPolylineMask2DImageFilter\n        ENH: adding more concept-checking\n\n    Code/BasicFilters/itkPolylineMaskImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkRGBToLuminanceImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkReconstructionByDilationImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkReconstructionByErosionImageFilter\n        ENH: adding more concept-checking\n\n    Code/BasicFilters/itkRecursiveGaussianImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkReflectImageFilter\n        ENH: adding more concept-checking\n\n    Code/BasicFilters/itkRegionOfInterestImageFilter\n        ENH: adding more concept-checking\n\n    Code/BasicFilters/itkRelabelComponentImageFilter\n        ENH: adding more concept-checking\n\n    Code/BasicFilters/itkResampleImageFilter\n        BUG: #2672 fixed. m_OutputOrigin type was incorrect.\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkResampleImageFilter\n\n    Code/BasicFilters/itkRescaleIntensityImageFilter\n\n    Code/BasicFilters/itkScalarConnectedComponentImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkScalarToArrayCastImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkShiftScaleImageFilter\n\n    Code/BasicFilters/itkShiftScaleInPlaceImageFilter\n\n    Code/BasicFilters/itkShrinkImageFilter\n        ENH: adding more concept-checking\n\n    Code/BasicFilters/itkShrinkImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkSigmoidImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkSignedDanielssonDistanceMapImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkSignedMaurerDistanceMapImageFilter\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n\n    Code/BasicFilters/itkSignedMaurerDistanceMapImageFilter\n        BUG: renamed functor to avoid conflict.\n\n    Code/BasicFilters/itkSimilarityIndexImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkSimpleContourExtractorImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkSinImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkSmoothingRecursiveGaussianImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkSobelEdgeDetectionImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkSparseFieldFourthOrderLevelSetImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkSparseFieldLevelSetImageFilter\n        STYLE: Cleaned up comments\n        ENH: adding more concept-checking\n\n    Code/BasicFilters/itkSparseFieldLevelSetImageFilter\n        STYLE: Cleaned up comments\n\n    Code/BasicFilters/itkSqrtImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkSquareImageFilter\n\n    Code/BasicFilters/itkSquaredDifferenceImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkStatisticsImageFilter\n        ENH: more concept-checking\n\n    Code/BasicFilters/itkStatisticsImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkStreamingImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkSubtractImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkSymmetricEigenAnalysisImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkTanImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkTensorFractionalAnisotropyImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkTensorRelativeAnisotropyImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkTernaryFunctorImageFilter\n        COMP: fixing a typo that was causing a compiler error on the dashboard\n\n    Code/BasicFilters/itkTernaryMagnitudeImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkThresholdImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkThresholdLabelerImageFilter\n        ENH: adding concept checking\n        ENH: adding concept-checking\n        BUG: 2786. Adding types for managing thresholds expressed in RealType.\n\n    Code/BasicFilters/itkThresholdLabelerImageFilter\n        BUG: 2786. Adding types for managing thresholds expressed in RealType.\n\n    Code/BasicFilters/itkTileImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkTobogganImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkTwoOutputExampleImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkVectorCastImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkVectorConfidenceConnectedImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkVectorConnectedComponentImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkVectorCurvatureAnisotropicDiffusionImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkVectorExpandImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkVectorExpandImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkVectorGradientAnisotropicDiffusionImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkVectorGradientMagnitudeImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkVectorGradientMagnitudeImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkVectorIndexSelectionCastImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkVectorNeighborhoodOperatorImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkVectorResampleImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkVectorResampleImageFilter\n        COMP: Set threads to 1 if Borland.\n\n    Code/BasicFilters/itkVectorRescaleIntensityImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkVectorRescaleIntensityImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/BasicFilters/itkVotingBinaryHoleFillingImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkVotingBinaryImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkVotingBinaryIterativeHoleFillingImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkWarpImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkWarpVectorImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkWeightedAddImageFilter\n\n    Code/BasicFilters/itkWhiteTopHatImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkWrapPadImageFilter\n        ENH: adding concept-checking\n\n    Code/BasicFilters/itkXorImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkZeroCrossingBasedEdgeDetectionImageFilter\n        ENH: adding concept checking\n\n    Code/BasicFilters/itkZeroCrossingImageFilter\n        ENH: adding concept checking\n\n    Code/Common/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n        ENH: Added explicit instantiation support framework to itkMacro.h.  See this header for details and documentation of the support macros.  Added option ITK_EXPLICIT_INSTANTIATION to itkConfigure.h because it is used to determine whether ITK provides explicit instantiations, which does not change outside the project.  Added instantiations of some common core types.  Removed old explicit instantiation beta code.\n\n    Code/Common/itkAbsImageAdaptor\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n        STYLE: fixed style\n\n    Code/Common/itkAcosImageAdaptor\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkAddImageAdaptor\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkAddPixelAccessor\n        STYLE: fixed style\n\n    Code/Common/itkAffineTransform\n        ENH: Explicit Instantiation Support\n        STYLE: Fixed style\n        STYLE: fixed style\n\n    Code/Common/itkAffineTransform\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkAnnulusOperator\n        STYLE: Fixed style\n\n    Code/Common/itkAnnulusOperator\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkArray\n        STYLE: fixed style\n\n    Code/Common/itkArray\n        STYLE: fixed style\n\n    Code/Common/itkArray2D\n        STYLE: fixed style\n\n    Code/Common/itkAsinImageAdaptor\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkAtanImageAdaptor\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkAutoPointer\n        STYLE: Fixed style\n\n    Code/Common/itkAutoPointerDataObjectDecorator\n        STYLE: fixed style\n\n    Code/Common/itkAutoPointerDataObjectDecorator\n        STYLE: fixed style\n\n    Code/Common/itkAzimuthElevationToCartesianTransform\n        STYLE: indentation.\n        STYLE: Fixed style\n\n    Code/Common/itkAzimuthElevationToCartesianTransform\n        STYLE: Fixed style\n        STYLE: fixed style\n\n    Code/Common/itkBSplineDeformableTransform\n        STYLE: Fixed style\n\n    Code/Common/itkBSplineDeformableTransform\n        STYLE: line length and indentation.\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkBSplineDerivativeKernelFunction\n        STYLE: Fixed style\n\n    Code/Common/itkBSplineInterpolationWeightFunction\n        STYLE: Fixed style\n\n    Code/Common/itkBSplineInterpolationWeightFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkBSplineKernelFunction\n        STYLE: Fixed style\n\n    Code/Common/itkBackwardDifferenceOperator\n        STYLE: Fixed style\n\n    Code/Common/itkBackwardDifferenceOperator\n        STYLE: Fixed style\n\n    Code/Common/itkBarrier\n        STYLE: Fixed style\n\n    Code/Common/itkBarrier\n        STYLE: Fixed style\n\n    Code/Common/itkBinaryBallStructuringElement\n        STYLE: Fixed style\n\n    Code/Common/itkBinaryBallStructuringElement\n        STYLE: Fixed style\n\n    Code/Common/itkBinaryCrossStructuringElement\n        STYLE: Fixed style\n\n    Code/Common/itkBinaryCrossStructuringElement\n        STYLE: Fixed style\n\n    Code/Common/itkBinaryThresholdImageFunction\n        STYLE: Fixed style\n\n    Code/Common/itkBinaryThresholdSpatialFunction\n        STYLE: Fixed style\n\n    Code/Common/itkBloxBoundaryPointImage\n        STYLE: Fixed style\n\n    Code/Common/itkBloxBoundaryPointImage\n        STYLE: Fixed style\n\n    Code/Common/itkBloxBoundaryPointItem\n        STYLE: Fixed style\n\n    Code/Common/itkBloxBoundaryPointItem\n        STYLE: Fixed style\n\n    Code/Common/itkBloxBoundaryPointPixel\n        STYLE: Fixed style\n\n    Code/Common/itkBloxBoundaryProfileImage\n        STYLE: Fixed style\n\n    Code/Common/itkBloxBoundaryProfileImage\n        STYLE: Fixed style\n\n    Code/Common/itkBloxBoundaryProfileItem\n        STYLE: Fixed style\n\n    Code/Common/itkBloxBoundaryProfileItem\n        STYLE: Fixed style\n\n    Code/Common/itkBloxBoundaryProfilePixel\n        STYLE: Fixed style\n\n    Code/Common/itkBloxBoundaryProfilePixel\n        STYLE: Fixed style\n\n    Code/Common/itkBloxCoreAtomImage\n        COMP: Fixing template parameter\n\n    Code/Common/itkBloxCoreAtomImage\n        COMP: Fixing template parameter\n        STYLE: Fixed style\n\n    Code/Common/itkBloxCoreAtomPixel\n        STYLE: Fixed style\n\n    Code/Common/itkBloxCoreAtomPixel\n        STYLE: Fixed style\n\n    Code/Common/itkBloxImage\n        STYLE: Fixed style\n\n    Code/Common/itkBloxItem\n        STYLE: Fixed style\n\n    Code/Common/itkBloxPixel\n        STYLE: Fixed style\n\n    Code/Common/itkBluePixelAccessor\n        STYLE: Fixed style\n\n    Code/Common/itkBoundingBox\n        STYLE: Fixed style\n\n    Code/Common/itkBoundingBox\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkByteSwapper\n        STYLE: Fixed style\n\n    Code/Common/itkByteSwapper\n        STYLE: Fixed style\n\n    Code/Common/itkCellInterface\n        STYLE: Fixed style\n\n    Code/Common/itkCellInterface\n        STYLE: Fixed style\n\n    Code/Common/itkCellInterfaceVisitor\n        STYLE: Fixed style\n\n    Code/Common/itkCenteredAffineTransform\n        STYLE: Fixed style\n\n    Code/Common/itkCenteredAffineTransform\n        STYLE: Fixed style\n\n    Code/Common/itkCenteredEuler3DTransform\n        STYLE: Fixed style\n\n    Code/Common/itkCenteredEuler3DTransform\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkCenteredRigid2DTransform\n        STYLE: Fixed style\n\n    Code/Common/itkCenteredRigid2DTransform\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkCenteredSimilarity2DTransform\n        STYLE: Fixed style\n\n    Code/Common/itkCenteredSimilarity2DTransform\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkCenteredTransformInitializer\n        STYLE: Fixed style\n\n    Code/Common/itkCenteredTransformInitializer\n        STYLE: Fixed style\n\n    Code/Common/itkCenteredVersorTransformInitializer\n        STYLE: Fixed style\n\n    Code/Common/itkCenteredVersorTransformInitializer\n        STYLE: Fixed style\n\n    Code/Common/itkCentralDifferenceImageFunction\n        STYLE: Fixed style\n\n    Code/Common/itkCentralDifferenceImageFunction\n        STYLE: Fixed style\n\n    Code/Common/itkChainCodePath\n        STYLE: Fixed style\n\n    Code/Common/itkChainCodePa\n        STYLE: Fixed style\n\n    Code/Common/itkChainCodePath2D\n        STYLE: Fixed style\n\n    Code/Common/itkChainCodePath2D\n        STYLE: Fixed style\n\n    Code/Common/itkChildTreeIterator\n        STYLE: Fixed style\n\n    Code/Common/itkColorTable\n        STYLE: Fixed style\n\n    Code/Common/itkColorTable\n        STYLE: Fixed style\n\n    Code/Common/itkCommand\n        STYLE: Fixed style\n\n    Code/Common/itkComplexToImaginaryImageAdaptor\n        STYLE: Fixed style\n\n    Code/Common/itkComplexToModulusImageAdaptor\n        STYLE: indentation.\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkComplexToPhaseImageAdaptor\n        STYLE: Fixed style\n        STYLE: Fixed style\n\n    Code/Common/itkComplexToRealImageAdaptor\n        STYLE: Fixed style\n\n    Code/Common/itkConceptChecking\n        COMP: fixing dashboard warnings about assignment between different types\n        COMP: fixing typo\n        ENH: adding a comment about why the argument to sizeof is not enclosed in ()'s\n        COMP: #include for PixelTraits was missing.\n        ENH: adding new concepts; modify some existing ones to accept multiple types\n\n    Code/Common/itkConditionVariable\n        STYLE: Fixed style\n\n    Code/Common/itkConditionVariable\n        STYLE: Fixed style\n\n    Code/Common/itkConditionalConstIterator\n        STYLE: Fixed style\n\n    Code/Common/itkConditionalConstIterator\n        STYLE: Fixed style\n\n    Code/Common/itkConicShellInteriorExteriorSpatialFunction\n        STYLE: Fixed style\n\n    Code/Common/itkConicShellInteriorExteriorSpatialFunction\n        STYLE: Fixed style\n\n    Code/Common/itkConstNeighborhoodIterator\n        STYLE: Fixed style\n\n    Code/Common/itkConstNeighborhoodIterator\n        STYLE: Fixed style\n\n    Code/Common/itkConstShapedNeighborhoodIterator\n        STYLE: Fixed style\n\n    Code/Common/itkConstShapedNeighborhoodIterator\n        STYLE: long lines.\n        STYLE: Fixed style\n\n    Code/Common/itkConstSliceIterator\n        STYLE: Fixed style\n\n    Code/Common/itkConstantBoundaryCondition\n        BUG: #3151. Boundary conditions could access unactivated indices in shaped iterators.\"\n\n    Code/Common/itkContinuousIndex\n        STYLE: Fixed style\n\n    Code/Common/itkCoreAtomImageToDistanceMatrixProcess\n        STYLE: Fixed style\n\n    Code/Common/itkCoreAtomImageToDistanceMatrixProcess\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkCorrespondenceDataStructure\n        STYLE: Fixed style\n\n    Code/Common/itkCorrespondenceDataStructureIterator\n        STYLE: Fixed style\n\n    Code/Common/itkCorrespondenceDataStructureIterator\n        STYLE: Fixed style\n\n    Code/Common/itkCorrespondingMedialNodeClique\n        STYLE: Fixed style\n\n    Code/Common/itkCosImageAdaptor\n        STYLE: Fixed style\n\n    Code/Common/itkCovariantVector\n        BUG: Fix for bug 3152: Headers for compound pixel types now #include the appropriate NumericTraits specialization headers.\n\n    Code/Common/itkCovariantVector\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkCreateObjectFunction\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Code/Common/itkDefaultDynamicMeshTraits\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Code/Common/itkDenseFiniteDifferenceImageFilter\n        STYLE: Cleaned up comments\n\n    Code/Common/itkDifferenceImageFilter\n\n    Code/Common/itkDifferenceImageFilter\n\n    Code/Common/itkDiffusionTensor3D\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkDirectory\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n        ENH: Redo implementation of itkDirectory to use kwsys (avoid duplicating code). Also fix some minor style\n\n    Code/Common/itkDirectory\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n        ENH: Redo implementation of itkDirectory to use kwsys (avoid duplicating code). Also fix some minor style\n\n    Code/Common/itkDynamicLoader\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Code/Common/itkElasticBodyReciprocalSplineKernelTransform\n        BUG: incorrect type macro\n\n    Code/Common/itkEllipsoidInteriorExteriorSpatialFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkEquivalencyTable\n        STYLE: spacing.\n\n    Code/Common/itkEquivalencyTable\n        STYLE: spacing.\n\n    Code/Common/itkEuler3DTransform\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkExpImageAdaptor\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkExpNegativeImageAdaptor\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/Attic/itkExplicitInstantiations\n        ENH: Added explicit instantiation support framework to itkMacro.h.  See this header for details and documentation of the support macros.  Added option ITK_EXPLICIT_INSTANTIATION to itkConfigure.h because it is used to determine whether ITK provides explicit instantiations, which does not change outside the project.  Added instantiations of some common core types.  Removed old explicit instantiation beta code.\n\n    Code/Common/itkFastMutexLock\n        ENH: Redo implementation of itkDirectory to use kwsys (avoid duplicating code). Also fix some minor style\n\n    Code/Common/itkFiniteCylinderSpatialFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkFixedArray\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/itkFixedArray\n        ENH: Added explicit instantiation support framework to itkMacro.h.  See this header for details and documentation of the support macros.  Added option ITK_EXPLICIT_INSTANTIATION to itkConfigure.h because it is used to determine whether ITK provides explicit instantiations, which does not change outside the project.  Added instantiations of some common core types.  Removed old explicit instantiation beta code.\n\n    Code/Common/itkFloodFilledFunctionConditionalConstIterator\n        STYLE: various.\n\n    Code/Common/itkFloodFilledFunctionConditionalConstIterator\n        STYLE: various.\n\n    Code/Common/itkFloodFilledImageFunctionConditionalConstIterator\n        STYLE: various.\n\n    Code/Common/itkFloodFilledImageFunctionConditionalConstIterator\n        STYLE: various.\n\n    Code/Common/itkFloodFilledSpatialFunctionConditionalConstIterator\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkFourierSeriesPa\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkFrustumSpatialFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkGaussianDerivativeSpatialFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkGaussianKernelFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkGaussianOperator\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkGaussianSpatialFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkHexahedronCell\n\n    Code/Common/itkHexahedronCell\n\n    Code/Common/itkImage\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/itkImage\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Code/Common/itkImageAdaptor\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Code/Common/itkImageBase\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/itkImageBase\n        ENH: Added explicit instantiation support framework to itkMacro.h.  See this header for details and documentation of the support macros.  Added option ITK_EXPLICIT_INSTANTIATION to itkConfigure.h because it is used to determine whether ITK provides explicit instantiations, which does not change outside the project.  Added instantiations of some common core types.  Removed old explicit instantiation beta code.\n\n    Code/Common/itkImageBoundaryCondition\n        BUG: #3151. Boundary conditions could access unactivated indices in shaped iterators.\"\n\n    Code/Common/itkImageFunction\n        STYLE: spelling error.\n\n    Code/Common/itkImageRegion\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/itkImageRegion\n        ENH: Added explicit instantiation support framework to itkMacro.h.  See this header for details and documentation of the support macros.  Added option ITK_EXPLICIT_INSTANTIATION to itkConfigure.h because it is used to determine whether ITK provides explicit instantiations, which does not change outside the project.  Added instantiations of some common core types.  Removed old explicit instantiation beta code.\n\n    Code/Common/itkImageRegionMultidimensionalSplitter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkImageSource\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/itkImageToImageFilter\n        ENH: Added explicit instantiation support framework to itkMacro.h.  See this header for details and documentation of the support macros.  Added option ITK_EXPLICIT_INSTANTIATION to itkConfigure.h because it is used to determine whether ITK provides explicit instantiations, which does not change outside the project.  Added instantiations of some common core types.  Removed old explicit instantiation beta code.\n\n    Code/Common/itkImportImageContainer\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/itkImportImageContainer\n        ENH: Added explicit instantiation support framework to itkMacro.h.  See this header for details and documentation of the support macros.  Added option ITK_EXPLICIT_INSTANTIATION to itkConfigure.h because it is used to determine whether ITK provides explicit instantiations, which does not change outside the project.  Added instantiations of some common core types.  Removed old explicit instantiation beta code.\n\n    Code/Common/itkIndex\n        ENH: Added explicit instantiation support framework to itkMacro.h.  See this header for details and documentation of the support macros.  Added option ITK_EXPLICIT_INSTANTIATION to itkConfigure.h because it is used to determine whether ITK provides explicit instantiations, which does not change outside the project.  Added instantiations of some common core types.  Removed old explicit instantiation beta code.\n\n    Code/Common/itkLandmarkBasedTransformInitializer\n        ENH: Remove annoying warning macro. Not reason enough to throw a warning\n\n    Code/Common/itkLevelSetFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkLightObject\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Code/Common/itkLineConstIterator\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkLinearInterpolateImageFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkLog10ImageAdaptor\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkLogImageAdaptor\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkMacro\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n        ENH: Added explicit instantiation support framework to itkMacro.h.  See this header for details and documentation of the support macros.  Added option ITK_EXPLICIT_INSTANTIATION to itkConfigure.h because it is used to determine whether ITK provides explicit instantiations, which does not change outside the project.  Added instantiations of some common core types.  Removed old explicit instantiation beta code.\n\n    Code/Common/itkMahalanobisDistanceThresholdImageFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkMapContainer\n\n    Code/Common/itkMapContainer\n\n    Code/Common/itkMetaDataDictionary\n        PERF: switch to using itk_hash_map\n\n    Code/Common/itkMetaDataDictionary\n        BUG: switching to itk_hash_map results in an api change (no operator->()). unrolling change.\n\n    Code/Common/itkMetaDataObject\n        PERF: Bypass the factory mechanism for MetaDataObject\n\n    Code/Common/itkNumericTraits\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkNumericTraitsRGBPixel\n        COMP: WrapITK requires numeric traits for itk::RGB_Pixel<unsigned short>\n\n    Code/Common/itkNumericTraitsRGBPixel\n        COMP: WrapITK requires numeric traits for itk::RGB_Pixel<unsigned short>\n\n    Code/Common/itkNumericTraitsVectorPixel\n        BUG: typo\n\n    Code/Common/itkObject\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Code/Common/itkObject\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Code/Common/itkObjectFactoryBase\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Code/Common/itkObjectFactoryBase\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Code/Common/itkOrientedImage\n        ENH: Added explicit instantiation support framework to itkMacro.h.  See this header for details and documentation of the support macros.  Added option ITK_EXPLICIT_INSTANTIATION to itkConfigure.h because it is used to determine whether ITK provides explicit instantiations, which does not change outside the project.  Added instantiations of some common core types.  Removed old explicit instantiation beta code.\n\n    Code/Common/itkPeriodicBoundaryCondition\n        STYLE: removed debug statements.\n\n    Code/Common/itkPhasedArray3DSpecialCoordinatesImage\n        ENH: Added explicit instantiation support framework to itkMacro.h.  See this header for details and documentation of the support macros.  Added option ITK_EXPLICIT_INSTANTIATION to itkConfigure.h because it is used to determine whether ITK provides explicit instantiations, which does not change outside the project.  Added instantiations of some common core types.  Removed old explicit instantiation beta code.\n\n    Code/Common/itkPoint\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkPointLocator\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkQuaternionRigidTransform\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkRGBPixel\n        BUG: Fix for bug 3152: Headers for compound pixel types now #include the appropriate NumericTraits specialization headers.\n\n    Code/Common/itkRealTimeClock\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Code/Common/itkRigid2DTransform\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkRigid3DPerspectiveTransform\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkScaleLogarithmicTransform\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkScaleSkewVersor3DTransform\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkSimilarity2DTransform\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkSimilarity3DTransform\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkSimpleFastMutexLock\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Code/Common/itkSimpleFastMutexLock\n        ENH: Redo implementation of itkDirectory to use kwsys (avoid duplicating code). Also fix some minor style\n\n    Code/Common/itkSimpleFilterWatcher\n        ENH: allow new class access to private data.\n\n    Code/Common/itkSimplexMeshGeometry\n        STYLE: indentation.\n\n    Code/Common/itkSinImageAdaptor\n        STYLE: indentation.\n\n    Code/Common/itkSize\n        ENH: Added explicit instantiation support framework to itkMacro.h.  See this header for details and documentation of the support macros.  Added option ITK_EXPLICIT_INSTANTIATION to itkConfigure.h because it is used to determine whether ITK provides explicit instantiations, which does not change outside the project.  Added instantiations of some common core types.  Removed old explicit instantiation beta code.\n\n    Code/Common/itkSmartPointer\n        ENH: Redo implementation of itkDirectory to use kwsys (avoid duplicating code). Also fix some minor style\n\n    Code/Common/itkSmartPointerForwardReference\n        ENH: Redo implementation of itkDirectory to use kwsys (avoid duplicating code). Also fix some minor style\n\n    Code/Common/itkSmartPointerForwardReference\n        ENH: Redo implementation of itkDirectory to use kwsys (avoid duplicating code). Also fix some minor style\n\n    Code/Common/itkSpecialCoordinatesImage\n        ENH: Added explicit instantiation support framework to itkMacro.h.  See this header for details and documentation of the support macros.  Added option ITK_EXPLICIT_INSTANTIATION to itkConfigure.h because it is used to determine whether ITK provides explicit instantiations, which does not change outside the project.  Added instantiations of some common core types.  Removed old explicit instantiation beta code.\n\n    Code/Common/itkSqrtImageAdaptor\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkSymmetricEllipsoidInteriorExteriorSpatialFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkSymmetricSecondRankTensor\n        BUG: Fix for bug 3152: Headers for compound pixel types now #include the appropriate NumericTraits specialization headers.\n\n    Code/Common/itkTanImageAdaptor\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkThinPlateR2LogRSplineKernelTransform\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkThinPlateR2LogRSplineKernelTransform\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkTimeProbesCollectorBase\n\n    Code/Common/itkTimeProbesCollectorBase\n\n    Code/Common/itkTorusInteriorExteriorSpatialFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkTriangleCell\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkVariableLengthVector\n        BUG: Fix for bug 3152: Headers for compound pixel types now #include the appropriate NumericTraits specialization headers.\n\n    Code/Common/itkVariableLengthVector\n        ENH: Add GetSquaredNorm method to class\n\n    Code/Common/itkVector\n        BUG: Fix for bug 3152: Headers for compound pixel types now #include the appropriate NumericTraits specialization headers.\n        ENH: Added explicit instantiation support framework to itkMacro.h.  See this header for details and documentation of the support macros.  Added option ITK_EXPLICIT_INSTANTIATION to itkConfigure.h because it is used to determine whether ITK provides explicit instantiations, which does not change outside the project.  Added instantiations of some common core types.  Removed old explicit instantiation beta code.\n\n    Code/Common/itkVector\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkVectorContainer\n\n    Code/Common/itkVectorContainer\n\n    Code/Common/itkVectorImage\n        ENH: Make ImageBase the baseclass to avoid conflicting return types for the same function signature, with ImageBase\n        BUG: Incorrect superclass typedef. Pointed out by Gaetan on the developers list.\n\n    Code/Common/itkVectorImageToImageAdaptor\n        BUG: The vector image returns a pixel created on the stack, not a reference to a pixel\n\n    Code/Common/itkVectorLinearInterpolateImageFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/Attic/itkVectorNearestNeighborInterpolateImageFunction\n        BUG: obsolete file. All code is on .h file.\n\n    Code/Common/itkVersor\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkVersor\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkVersorRigid3DTransform\n        STYLE: Fixed style\n\n    Code/Common/itkVersorRigid3DTransform\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkVersorTransform\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n        STYLE: Fixed style\n\n    Code/Common/itkVersorTransform\n        STYLE: Fixed style\n\n    Code/Common/itkVertexCell\n        STYLE: Fixed style\n\n    Code/Common/itkVertexCell\n        STYLE: Fixed style\n\n    Code/Common/itkVolumeSplineKernelTransform\n        STYLE: Fixed style\n\n    Code/Common/itkVolumeSplineKernelTransform\n        STYLE: Fixed style\n\n    Code/Common/itkWeakPointer\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Code/Common/itkWin32Header\n        STYLE: Fixed style\n\n    Code/Common/itkWin32OutputWindow\n        STYLE: Fixed style\n\n    Code/Common/itkWin32OutputWindow\n        STYLE: Fixed style\n\n    Code/Common/itkWindowedSincInterpolateImageFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkWindowedSincInterpolateImageFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Common/itkWindows\n        STYLE: Fixed style\n\n    Code/Common/itkXMLFileOutputWindow\n        STYLE: Fixed style\n\n    Code/Common/itkXMLFilterWatcher\n        STYLE: various.\n\n    Code/Common/itkZeroFluxNeumannBoundaryCondition\n        STYLE: Fixed style\n\n    Code/Common/itkZeroFluxNeumannBoundaryCondition\n        STYLE: Fixed style\n\n    Code/Common/Templates/itkAffineTransform+-\n        ENH: Explicit Instantiation Support\n\n    Code/Common/Templates/itkAffineTransformD2\n        ENH: Explicit Instantiation Support\n\n    Code/Common/Templates/itkAffineTransformD2\n        ENH: Explicit Instantiation Support\n\n    Code/Common/Templates/itkAffineTransformD3\n        ENH: Explicit Instantiation Support\n\n    Code/Common/Templates/itkAffineTransformD3\n        ENH: Explicit Instantiation Support\n\n    Code/Common/Templates/itkAffineTransformF2\n        ENH: Explicit Instantiation Support\n\n    Code/Common/Templates/itkAffineTransformF2\n        ENH: Explicit Instantiation Support\n\n    Code/Common/Templates/itkAffineTransformF3\n        ENH: Explicit Instantiation Support\n\n    Code/Common/Templates/itkAffineTransformF3\n        ENH: Explicit Instantiation Support\n\n    Code/Common/Templates/itkFixedArray+-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkFixedArray+double.2-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkFixedArray+double.3-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkFixedArray+float.2-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkFixedArray+float.3-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkFixedArrayD2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkFixedArrayD2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkFixedArrayD3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkFixedArrayD3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkFixedArrayF2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkFixedArrayF2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkFixedArrayF3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkFixedArrayF3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImage+-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+double.2-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+double.3-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+float.2-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+float.3-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+int.2-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+int.3-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+long.2-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+long.3-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+short.2-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+short.3-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+unsigned_char.2-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+unsigned_char.3-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+unsigned_int.2-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+unsigned_int.3-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+unsigned_long.2-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+unsigned_long.3-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+unsigned_short.2-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImage+unsigned_short.3-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageBase+-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageBase+2-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageBase+3-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageBase2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageBase2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageBase3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageBase3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageD2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageD2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageD3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageD3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageF2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageF2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageF3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageF3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageI2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageI2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageI3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageI3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageL2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageL2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageL3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageL3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageRegion+-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageRegion+2-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageRegion+3-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageRegion2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageRegion2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageRegion3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageRegion3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageS2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageS2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageS3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageS3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSource+-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+double.2--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+double.3--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+float.2--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+float.3--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+int.2--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+int.3--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+long.2--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+long.3--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+short.2--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+short.3--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+unsigned_char.2--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+unsigned_char.3--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+unsigned_int.2--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+unsigned_int.3--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+unsigned_long.2--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+unsigned_long.3--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+unsigned_short.2--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImageSource+Image+unsigned_short.3--\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceD2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceD2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceD3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceD3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceF2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceF2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceF3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceF3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceI2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceI2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceI3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceI3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceL2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceL2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceL3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceL3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceS2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceS2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceS3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceS3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceUC2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceUC2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceUC3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceUC3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceUI2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceUI2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceUI3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceUI3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceUL2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceUL2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceUL3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceUL3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceUS2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceUS2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceUS3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageSourceUS3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageUC2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageUC2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageUC3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageUC3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageUI2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageUI2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageUI3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageUI3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageUL2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageUL2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageUL3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageUL3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageUS2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageUS2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageUS3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImageUS3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainer+-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImportImageContainer+unsigned_long.double-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImportImageContainer+unsigned_long.float-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImportImageContainer+unsigned_long.int-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImportImageContainer+unsigned_long.long-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImportImageContainer+unsigned_long.short-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImportImageContainer+unsigned_long.unsigned_char-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImportImageContainer+unsigned_long.unsigned_int-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImportImageContainer+unsigned_long.unsigned_long-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkImportImageContainer+unsigned_long.unsigned_short-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_D\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_D\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_F\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_F\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_I\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_I\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_L\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_L\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_S\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_S\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_UC\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_UC\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_UI\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_UI\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_UL\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_UL\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_US\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkImportImageContainerUL_US\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkPoint+-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkPoint+double.2-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkPoint+double.3-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkPoint+float.2-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkPoint+float.3-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkPointD2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkPointD2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkPointD3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkPointD3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkPointF2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkPointF2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkPointF3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkPointF3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkVector+-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkVector+double.2-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkVector+double.3-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkVector+float.2-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/Attic/itkVector+float.3-\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkVectorD2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkVectorD2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkVectorD3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkVectorD3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkVectorF2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkVectorF2\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkVectorF3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/Common/Templates/itkVectorF3\n        ENH: Added names for explicit template instantiations.  Each instantiation of a template is given a name which is typedef-ed in a Templates namespace.  These named instantiations are useful for passing arguments to other instantiations and avoiding nested comma problems with macro arguments.  Also providing a header to import each instantiation.\n\n    Code/IO/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Code/IO/itkAnalyzeImageIO\n        ENH: throw exception if invalid dimension is specified.\n\n    Code/IO/itkArchetypeSeriesFileNames\n        ENH: Allow filenames that include special characters\n\n    Code/IO/itkBrains2HeaderBase\n        ENH: replaced ExceptionObject witk ExceptionMacro.\n\n    Code/IO/itkBrains2MaskImageIO\n        ENH: replaced ExceptionObject witk ExceptionMacro.\n\n    Code/IO/itkGDCMImageIO\n        BUG: PrintSelf defects.\n        BUG: To much cached information is stored. Need to delete entire gdcm::File struct first.\n        ENH: Do not need to reread header a second time. Instead retain a copy of the parsed DICOM header and pass internal gdcm structure to the pixel reader.\n        STYLE: Remove old debug...\n        ENH: When writing 3D Image, the code is correct to put proper Origin and Direction\n        BUG: When writting 3D images, it allowed to access the 3d component of the ITK Spacing.\n        ENH: Provide an helper function around the MetaDataDictionary. Make it more user oriented.\n\n    Code/IO/itkGDCMImageIO\n        PERF: Reduced the number of times the file is read to two.\n        ENH: When writing 3D Image, the code is correct to put proper Origin and Direction\n\n    Code/IO/itkGDCMSeriesFileNames\n        BUG: PrintSelf defects.\n\n    Code/IO/itkGDCMSeriesFileNames\n        PERF: Reduced the number of times the file is read to two.\n\n    Code/IO/itkIOCommon\n\n    Code/IO/itkIOCommon\n\n    Code/IO/itkImageIOFactory\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Code/IO/itkImageSeriesWriter\n        ENH: better error checking on MetaDataDictonaryArray size.\n\n    Code/IO/itkMetaImageIO\n        COMP: fixed member object reference\n\n    Code/IO/itkNiftiImageIO\n        COMP: removed header include line for non-existent header\n\n    Code/IO/itkPNGImageIO\n        BUG: reader was not shifting data when it was encoded in the image.\n\n    Code/IO/itkStimulateImageIOFactory\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Code/IO/itkTIFFImageIO\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Code/IO/itkVTKImageIO\n\n    Code/Numerics/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/itkCumulativeGaussianCostFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/itkCumulativeGaussianOptimizer\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/itkFRPROptimizer\n\n    Code/Numerics/itkFRPROptimizer\n\n    Code/Numerics/itkMultipleValuedNonLinearVnlOptimizer\n        ENH: Adding support for reporting Iteration events from the VNL optimizers.\n\n    Code/Numerics/itkMultipleValuedNonLinearVnlOptimizer\n        ENH: Adding support for reporting Iteration events from the VNL optimizers.\n\n    Code/Numerics/itkMultipleValuedVnlCostFunctionAdaptor\n        ENH: Adding support for reporting Iteration events from the VNL optimizers.\n\n    Code/Numerics/itkMultipleValuedVnlCostFunctionAdaptor\n        ENH: Adding support for reporting Iteration events from the VNL optimizers.\n\n    Code/Numerics/itkOnePlusOneEvolutionaryOptimizer\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/itkSPSAOptimizer\n        ENH: Using the MersenneTwisterRandomVariateGenerator rather than VNL\n\n    Code/Numerics/itkSPSAOptimizer\n        ENH: Using the MersenneTwisterRandomVariateGenerator rather than VNL\n\n    Code/Numerics/itkSingleValuedNonLinearVnlOptimizer\n        ENH: Adding support for reporting Iteration events from the VNL optimizers.\n\n    Code/Numerics/itkSingleValuedVnlCostFunctionAdaptor\n        ENH: Adding support for reporting Iteration events from the VNL optimizers.\n\n    Code/Numerics/FEM/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Code/Numerics/FEM/itkFEMElement2DC0LinearQuadrilateral\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/FEM/itkFEMElement2DC1Beam\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/FEM/itkFEMElement3DC0LinearHexahedron\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/FEM/itkFEMElement3DC0LinearTetrahedron\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/FEM/itkFEMGenerateMe\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/FEM/itkFEMImageMetricLoad\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/FEM/itkFEMLoadImplementationGenericLandmarkLoad\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/FEM/itkFEMSolverCrankNicolson\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/FEM/itkFEMSolverCrankNicolson\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/NeuralNetworks/itkBackPropagationLayer\n        COMP: WinNT-bcc32 typename fixes\n\n    Code/Numerics/NeuralNetworks/itkBackPropagationLayer\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/NeuralNetworks/itkBatchSupervisedTrainingFunction\n\n    Code/Numerics/NeuralNetworks/itkBatchSupervisedTrainingFunction\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/NeuralNetworks/itkCompletelyConnectedWeightSet\n        BUG: size of connectivity matrix was reversed compared to the weight matrix\n\n    Code/Numerics/NeuralNetworks/itkErrorFunctionBase\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/NeuralNetworks/itkGaussianRadialBasisFunction\n\n    Code/Numerics/NeuralNetworks/itkIterativeSupervisedTrainingFunction\n\n    Code/Numerics/NeuralNetworks/itkIterativeSupervisedTrainingFunction\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/NeuralNetworks/itkLayerBase\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/NeuralNetworks/itkLayerBase\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/NeuralNetworks/itkLogSigmoidTransferFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/NeuralNetworks/itkMeanSquaredErrorFunction\n        COMP: WinNT-bcc32 typename fixes\n\n    Code/Numerics/NeuralNetworks/itkMeanSquaredErrorFunction\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/NeuralNetworks/itkMultilayerNeuralNetworkBase\n        COMP: WinNT-bcc32 typename fixes\n\n    Code/Numerics/NeuralNetworks/itkMultilayerNeuralNetworkBase\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/NeuralNetworks/itkMultiquadricRadialBasisFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/NeuralNetworks/itkNeuralNetworkObject\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/NeuralNetworks/itkOneHiddenLayerBackPropagationNeuralNetwork\n        COMP: WinNT-bcc32 typename fixes\n\n    Code/Numerics/NeuralNetworks/itkOneHiddenLayerBackPropagationNeuralNetwork\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/NeuralNetworks/itkRBFBackPropagationLearningFunction\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/NeuralNetworks/itkRBFLayer\n        COMP: WinNT-bcc32 typename fixes\n\n    Code/Numerics/NeuralNetworks/itkRBFLayer\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/NeuralNetworks/itkRBFNetwork\n\n    Code/Numerics/NeuralNetworks/itkRBFNetwork\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/NeuralNetworks/itkSigmoidTransferFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/NeuralNetworks/itkSquaredDifferenceErrorFunction\n        COMP: WinNT-bcc32 typename fixes\n\n    Code/Numerics/NeuralNetworks/itkSquaredDifferenceErrorFunction\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/NeuralNetworks/itkSymmetricSigmoidTransferFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/NeuralNetworks/itkTanHTransferFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/NeuralNetworks/itkTanSigmoidTransferFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/NeuralNetworks/itkTrainingFunctionBase\n\n    Code/Numerics/NeuralNetworks/itkTrainingFunctionBase\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/NeuralNetworks/itkTwoHiddenLayerBackPropagationNeuralNetwork\n\n    Code/Numerics/NeuralNetworks/itkTwoHiddenLayerBackPropagationNeuralNetwork\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/NeuralNetworks/itkWeightSetBase\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/NeuralNetworks/itkWeightSetBase\n        ENH: network topology can be set at runtime\n\n    Code/Numerics/Statistics/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Code/Numerics/Statistics/itkEuclideanDistance\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/Statistics/itkExpectationMaximizationMixtureModelEstimator\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/Statistics/itkGaussianDensityFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/Statistics/itkGaussianGoodnessOfFitComponent\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/Statistics/itkGaussianMixtureModelComponent\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/Statistics/itkGoodnessOfFitFunctionBase\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/Statistics/itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculator\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/Statistics/itkHistogramToEntropyImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/Statistics/itkHistogramToLogProbabilityImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/Statistics/itkListSampleToHistogramGenerator\n\n    Code/Numerics/Statistics/itkLogLikelihoodGoodnessOfFitFunction\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/Statistics/itkNormalVariateGenerator\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/Statistics/itkSampleToHistogramProjectionFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Numerics/Statistics/itkScalarImageToHistogramGenerator\n\n    Code/Numerics/Statistics/itkScalarImageToHistogramGenerator\n\n    Code/Patented/itkActiveShapeModelCalculator\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Patented/itkActiveShapeModelGradientSearchMethod\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Patented/itkSimpleFuzzyConnectednessRGBImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Patented/itkSimpleFuzzyConnectednessScalarImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Patented/itkVectorFuzzyConnectednessImageFilter\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/Review/CMakeLists.txt\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/d1ma\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/d1mach.f\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/d9gmit\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/d9gmit.f\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/d9lgic\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/d9lgic.f\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/d9lgit\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/d9lgit.f\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/d9lgmc\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/d9lgmc.f\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/d_int\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/d_mod\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dbetai\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dbetai.f\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dcsevl\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dcsevl.f\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dgami\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dgami.f\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dgamit\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dgamit.f\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dgamlm\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dgamlm.f\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dgamma\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dgamma.f\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dgamr\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dgamr.f\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dlbeta\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dlbeta.f\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dlgams\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dlgams.f\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dlngam\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dlngam.f\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dlnrel\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/dlnrel.f\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/initds\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/initds.f\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/itkChiSquareDistribution\n        STYLE: various.\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/Review/itkChiSquareDistribution\n        STYLE: various.\n\n    Code/Review/itkGaussianDistribution\n        STYLE: various.\n\n    Code/Review/itkGaussianDistribution\n        STYLE: various.\n\n    Code/Review/itkProbabilityDistribution\n        STYLE: various.\n\n    Code/Review/Attic/itkSignedMaurerDistanceMapImageFilter\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n        STYLE: More fixes according to messages from KWStyle.\n\n    Code/Review/Attic/itkSignedMaurerDistanceMapImageFilter\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n        STYLE: More fixes according to messages from KWStyle.\n\n    Code/Review/itkTDistribution\n        STYLE: various.\n\n    Code/Review/itkTDistribution\n        STYLE: various.\n\n    Code/Review/Attic/itkThresholdMaximumConnectedComponentsImageFilter\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n        STYLE: various KWSTYLE issues.\n        BUG: must use itkGetStaticConstMacro to access ImageDimension.\n        COMP: \"typename\" keywords missing.\n\n    Code/Review/Attic/itkThresholdMaximumConnectedComponentsImageFilter\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n        ENH: Use SetMinimumObjectSize of the RelabelComponentImageFilter instead of calculating it separately.  This changes results slightly because previously the algorithm found all objects *greater* than the minimum object size, not *greater than or equal to* as RelabelComponentImageFilter does.  Also, we now use a MinimumMaximumImageCalculator to find the range of possible thresholds to speed up the binary search and ensure that the found threshold is in this range.\n        STYLE: various KWSTYLE issues.\n        BUG: mid point was not computed correctly.\n        COMP: \"typename\" keywords missing.\n\n    Code/Review/xermsg\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Code/SpatialObject/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Code/SpatialObject/itkArrowSpatialObject\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/SpatialObject/itkBlobSpatialObject\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/SpatialObject/itkContourSpatialObject\n        COMP: Warning, removing const when returning enumeration\n        ENH: First checkin\n\n    Code/SpatialObject/itkContourSpatialObject\n        ENH: Added support to attach a slice to a contour and display orientation\n        ENH: First checkin\n\n    Code/SpatialObject/itkContourSpatialObjectPoint\n        ENH: First checkin\n\n    Code/SpatialObject/itkContourSpatialObjectPoint\n        ENH: First checkin\n\n    Code/SpatialObject/itkCylinderSpatialObject\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/SpatialObject/itkGaussianSpatialObject\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/SpatialObject/itkMetaContourConverter\n        ENH: First checkin\n\n    Code/SpatialObject/itkMetaContourConverter\n        ENH: Added support to attach a slice to a contour and display orientation\n\n    Code/SpatialObject/itkMetaSceneConverter\n        ENH: Added support for contours\n\n    Code/SpatialObject/itkPolygonSpatialObject\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Code/SpatialObject/itkTubeSpatialObject\n        STYLE:  Replaced math functions with vcl_ equivalent forms (i.e. sin with vcl_sin).\n\n    Examples/DataRepresentation/Image/CMakeLists.txt\n        COMP: Boland LME linker error.\n\n    Examples/Filtering/BinaryThresholdImageFilter\n        BUG: #2929. Writer template type was incorrect.\n\n    Examples/Filtering/CMakeLists.txt\n        COMP: Avoid Borland LME1518 linker error.\n        BUG: fix last checkin.\n        COMP: avoid Borland linker error.\n        COMP: Borland linker errors.\n\n    Examples/Filtering/FFTDirectInverse\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Filtering/FilteringExamples2\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Filtering/FilteringExamples4\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Filtering/FilteringExamples6\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Filtering/OtsuMultipleThresholdImageFilter\n        ENH: Also write out the image thresholded between the upper threshold and the max intensity\n\n    Examples/Filtering/OtsuThresholdImageFilter\n        BUG: #2929. Writer template type was incorrect.\n\n    Examples/Filtering/ResampleImageFilter\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Filtering/ResampleImageFilter2\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Filtering/ResampleImageFilter3\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Filtering/ResampleImageFilter4\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Filtering/ResampleImageFilter5\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Filtering/ResampleImageFilter7\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Filtering/ResampleImageFilter8\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Filtering/ResampleOrientedImageFilter\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/IO/CMakeLists.txt\n\n    Examples/IO/DicomImageReadPrintTags\n        ENH: Provide an helper function around the MetaDataDictionary. Make it more user oriented.\n\n    Examples/IO/DicomSeriesReadImageWrite\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Examples/IO/ImageReadDicomSeriesWrite\n\n    Examples/IO/ImageReadWrite\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Examples/IO/TransformReadWrite\n        BUG: BSpline transform was not registered into the factory by default\n\n    Examples/Iterators/CMakeLists.txt\n        COMP: Remove tests from Borland to avoid linker errors.\n\n    Examples/Patented/FuzzyConnectednessImageFilter\n        ENH: Fixing typos indicated by Alex Chekholko via email.\n\n    Examples/Patented/HybridSegmentationFuzzyVoronoi\n        ENH: Fixing typos indicated by Alex Chekholko via email.\n\n    Examples/Registration/BSplineWarping1\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Registration/CMakeLists.txt\n        ENH: Adding a nightly test for the ModelToImageRegistration2 example.\n\n    Examples/Registration/DeformableRegistration4\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Registration/DeformableRegistration6\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Registration/DeformableRegistration7\n\n    Examples/Registration/ImageRegistration12\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Registration/ImageRegistration13\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Registration/ImageRegistration14\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Registration/ImageRegistration5\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Registration/ImageRegistration6\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Registration/ImageRegistration7\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Registration/ImageRegistration9\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Registration/ModelToImageRegistration1\n        ENH: The metric was not using the interpolator for evaluating the image.\n\n    Examples/Registration/ModelToImageRegistration2\n        ENH: Adding the reader and the rasterization filter.\n\n    Examples/Registration/MultiResImageRegistration2\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Registration/RegistrationExamples3\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Registration/RegistrationExamples4\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Registration/RegistrationExamples6\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Registration/RegistrationExamples7\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Registration/RegistrationExamples9\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Registration/RegistrationExamplesO2\n        COMP: force a rebuild because of dependency problems.\n\n    Examples/Statistics/CMakeLists.txt\n        COMP: avoid borland linker error\n\n    Examples/Statistics/ImageHistogram1\n\n    Examples/Statistics/ImageHistogram2\n\n    Examples/Visualization/CannyEdgeDetectionImageFilterConnectVTKITK.py\n        ENH: Remove dos end of line\n\n    Testing/Code/CMakeLists.txt\n\n    Testing/Code/Algorithms/CMakeLists.txt\n        BUG: added TEMP.\n\n    Testing/Code/Algorithms/itkAlgorithmsTests4\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n\n    Testing/Code/Algorithms/itkFastMarchingUpwindGradientTest\n        ENH: Test the TargetReached modes of the algorithm\n\n    Testing/Code/Algorithms/itkHistogramImageToImageMetricTest\n        ENH: initialize upper and lower bound.\n\n    Testing/Code/Algorithms/itkThresholdMaximumConnectedComponentsImageFilterTest\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n\n    Testing/Code/BasicFilters/CMakeLists.txt\n        BUG: itkSignedMaurerDistanceMapImageFilterTest.cxx entered twice.\n\n    Testing/Code/BasicFilters/itkBasicFiltersPrintTest\n        ENH: remove redundant dim parameter from itkBloxBoundaryProfileImageToBloxCoreAtomImageFilter\n\n    Testing/Code/BasicFilters/itkBasicFiltersPrintTest2\n        COMP: force a rebuild because of dependency problems.\n\n    Testing/Code/BasicFilters/itkBasicFiltersTests4\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n\n    Testing/Code/BasicFilters/itkBloxBoundaryProfileImageToBloxCoreAtomImageFilterTest\n        ENH: remove redundant dim parameter from itkBloxBoundaryProfileImageToBloxCoreAtomImageFilter\n\n    Testing/Code/BasicFilters/itkDiffusionTensor3DReconstructionImageFilterTest\n        STYLE: missing copyright.\n\n    Testing/Code/BasicFilters/itkExpImageFilterAndAdaptorTest\n        COMP: trying to track down failure on vs 7. Set threads to 1.\n\n    Testing/Code/BasicFilters/itkMorphologicalGradientImageFilterTest\n        STYLE: missing copyright.\n\n    Testing/Code/BasicFilters/itkNormalizedCorrelationImageFilterTest\n        COMP: force a rebuild because of dependency problems.\n\n    Testing/Code/BasicFilters/itkRecursiveGaussianImageFiltersOnTensorsTest\n        STYLE: missing copyright.\n\n    Testing/Code/BasicFilters/itkResampleImageTest\n        COMP: force a rebuild because of dependency problems.\n\n    Testing/Code/BasicFilters/itkSignedMaurerDistanceMapImageFilterTest\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n\n    Testing/Code/BasicFilters/itkVectorIndexSelectionCastImageFilterTest\n\n    Testing/Code/Common/CMakeLists.txt\n        ENH: The DifferenceImageFilter was missing unit testing.\n\n    Testing/Code/Common/itkCommonTests2\n        ENH: The DifferenceImageFilter was missing unit testing.\n\n    Testing/Code/Common/itkDifferenceImageFilterTest\n        ENH: Fixing input connections to the DifferenceImageFilter.\n        ENH: The DifferenceImageFilter was missing unit testing.\n\n    Testing/Code/Common/itkFixedArrayTest\n        ENH: Added explicit instantiation support framework to itkMacro.h.  See this header for details and documentation of the support macros.  Added option ITK_EXPLICIT_INSTANTIATION to itkConfigure.h because it is used to determine whether ITK provides explicit instantiations, which does not change outside the project.  Added instantiations of some common core types.  Removed old explicit instantiation beta code.\n\n    Testing/Code/Common/itkPeriodicBoundaryConditionTest\n        ENH: added new test.\n\n    Testing/Code/Common/itkTimeProbesTest\n\n    Testing/Code/Common/itkZeroFluxBoundaryConditionTest\n        ENH: better testing of BC.\n\n    Testing/Code/IO/itkBMPImageIOTest\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Testing/Code/IO/itkIOTests\n\n    Testing/Code/IO/itkNiftiImageIOTest\n\n    Testing/Code/IO/itkRawImageIOTest5\n        COMP: warning.\n\n    Testing/Code/IO/itkReadWriteSpatialObjectTest\n        ENH: Added support to attach a slice to a contour and display orientation\n\n    Testing/Code/IO/itkTIFFImageIOTest\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Testing/Code/Numerics/itkFRPROptimizerTest\n\n    Testing/Code/Numerics/NeuralNetworks/NNetClassifierTest1\n        ENH: changed to incorporate runtime network topology setting, including use of different MeasurementVectorTypes such as itk::Array\n\n    Testing/Code/Numerics/NeuralNetworks/NNetClassifierTest2\n        ENH: changed to incorporate runtime network topology setting, including use of different MeasurementVectorTypes such as itk::Array\n\n    Testing/Code/Numerics/NeuralNetworks/NNetClassifierTest3\n        ENH: changed to incorporate runtime network topology setting, including use of different MeasurementVectorTypes such as itk::Array\n\n    Testing/Code/Numerics/NeuralNetworks/NNetClassifierTest4\n        ENH: changed to incorporate runtime network topology setting, including use of different MeasurementVectorTypes such as itk::Array\n\n    Testing/Code/Numerics/NeuralNetworks/QPropXORTest1\n        ENH: changed to incorporate runtime network topology setting, including use of different MeasurementVectorTypes such as itk::Array\n\n    Testing/Code/Numerics/NeuralNetworks/RBFTest1\n        ENH: changed to incorporate runtime network topology setting, including use of different MeasurementVectorTypes such as itk::Array\n\n    Testing/Code/Numerics/NeuralNetworks/XORTest1\n        ENH: changed to incorporate runtime network topology setting, including use of different MeasurementVectorTypes such as itk::Array\n\n    Testing/Code/Numerics/NeuralNetworks/XORTest2\n        ENH: changed to incorporate runtime network topology setting, including use of different MeasurementVectorTypes such as itk::Array\n\n    Testing/Code/Review/CMakeLists.txt\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n        ENH: Adding a second test for the itkThresholdMaximumConnectedComponentsImageFilter.\n        ENH: Adding returns FAILURE in the catch blocks of the tries.\n\n    Testing/Code/Review/itkChiSquareDistributionTest\n        STYLE: various.\n        ENH: Probability distribution library allowing for Student-t and Chi-Square pdf, cdf, and inverse cdf calculations.\n\n    Testing/Code/Review/itkGaussianDistributionTest\n        STYLE: various.\n\n    Testing/Code/Review/itkReviewHeaderTest\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n        STYLE: various KWSTYLE issues.\n\n    Testing/Code/Review/itkReviewPrintTest\n        STYLE: various KWSTYLE issues.\n        ENH: Support files for testing the classes that are under the review process.\n\n    Testing/Code/Review/itkReviewTests\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n        STYLE: Fixed style\n        COMP: Fixing the connections for the test driver.\n\n    Testing/Code/Review/Attic/itkSignedMaurerDistanceMapImageFilterTest\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n        STYLE: removing new line at the end of the file. Signaled by KWStyle.\n\n    Testing/Code/Review/itkTDistributionTest\n        STYLE: various.\n\n    Testing/Code/Review/Attic/itkThresholdMaximumConnectedComponentsImageFilterTest\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n        STYLE: various KWSTYLE issues.\n        ENH: Adding returns FAILURE in the catch blocks of the tries.\n\n    Testing/Data/Baseline/Algorithms/OtsuMultipleThresholdsImageFilterTest.png\n\n    Testing/Data/Baseline/Algorithms/itkThresholdMaximumConnectedComponentsImageFilterTest1.png\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n\n    Testing/Data/Baseline/Algorithms/itkThresholdMaximumConnectedComponentsImageFilterTest2.png\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n\n    Testing/Data/Baseline/BasicFilters/itkSignedMaurerDistanceMapImageFilterTest1.mhd\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n\n    Testing/Data/Baseline/BasicFilters/itkSignedMaurerDistanceMapImageFilterTest1.zraw\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n\n    Testing/Data/Baseline/BasicFilters/itkSignedMaurerDistanceMapImageFilterTest2.mhd\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n\n    Testing/Data/Baseline/BasicFilters/itkSignedMaurerDistanceMapImageFilterTest2.zraw\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n\n    Testing/Data/Baseline/BasicFilters/itkSignedMaurerDistanceMapImageFilterTest3.mhd\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n\n    Testing/Data/Baseline/BasicFilters/itkSignedMaurerDistanceMapImageFilterTest3.zraw\n        ENH: Moved code, tests and baselines from Review into Algorithms and BasicFilters.\n\n    Testing/Data/Baseline/BasicFilters/itkVectorIndexSelectionCastImageFilterTest1.mha\n        ENH: Baseline for the test itkVectorIndexSelectionCastImageFilterTest.\n\n    Testing/Data/Baseline/BasicFilters/itkVectorIndexSelectionCastImageFilterTest2.mha\n        ENH: Baseline for the test itkVectorIndexSelectionCastImageFilterTest.\n\n    Testing/Data/Baseline/BasicFilters/itkVectorIndexSelectionCastImageFilterTest3.mha\n        ENH: Baseline for the test itkVectorIndexSelectionCastImageFilterTest.\n\n    Testing/Data/Baseline/Common/itkDifferenceImageFilterTest.png\n        ENH: Baseline for the DifferenceImageFilterTest.\n\n    Testing/Data/Baseline/Filtering/OtsuMultipleThresholdOutput002.png\n\n    Testing/Data/Input/BrainSliceBinary.png\n        ENH: Images needed for testing the Maurer distance map filter.\n\n    Testing/Data/Input/CellsFluorescence1.png\n        ENH: Input test image for the threshold maximum connected components filter test.\n\n    Testing/Data/Input/CellsFluorescence2.png\n        ENH: Input image for the ThresholdMaximumConnectedComponentsImageFilterTest2.\n\n    Testing/Data/Input/LungSliceBinary.png\n        ENH: Images needed for testing the Maurer distance map filter.\n\n    Testing/Data/Input/SquareBinary201.png\n        ENH: Images needed for testing the Maurer distance map filter.\n\n    Utilities/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n        ENH: Allow ITK to be built against an installed version of GDCM with the ITK_USE_SYSTEM_GDCM option\n\n    Utilities/DICOMParser/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/Dart/BuildContinuousWithCTest.bat.in\n        ENH: bat script to do a continous build with ctest.\n\n    Utilities/Dart/BuildContinuousWithCTest.sh.in\n        ENH: generate script to run ctest continuous build.\n\n    Utilities/Dart/CMakeLists.txt\n        ENH: bat script to do a continous build with ctest.\n\n    Utilities/Doxygen/doxygen.config.in\n        ENH: Fixing the names of the concept in the typedef.\n        ENH: expanding the concept checking macro so it appears in the Doxygen documentation.\n\n    Utilities/KWStyle/ITK.kws.xml.in\n        ENH: Configurable file with the XML description of ITK coding style.\n\n    Utilities/KWStyle/ITKHeader\n        ENH: Template of the ITK header to be used for checking by KWStyle.\n\n    Utilities/KWStyle/ITKOverwrite.txt\n        ENH: File that define list of ITK files to exempt from code style checking.\n\n    Utilities/MetaIO/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/MetaIO/metaArrow\n\n    Utilities/MetaIO/metaArrow\n\n    Utilities/MetaIO/metaBlob\n\n    Utilities/MetaIO/metaBlob\n\n    Utilities/MetaIO/metaCommand\n        ENH: Remove unused termination tag\n\n    Utilities/MetaIO/metaCommand\n        ENH: Added support for Grid Application Description file. Fixed issues with parsing.\n\n    Utilities/MetaIO/metaContour\n        ENH: Added support to attach a slice to a contour and display orientation\n\n    Utilities/MetaIO/metaContour\n        ENH: Added support to attach a slice to a contour and display orientation\n\n    Utilities/MetaIO/metaDTITube\n\n    Utilities/MetaIO/metaDTITube\n\n    Utilities/MetaIO/metaEllipse\n\n    Utilities/MetaIO/metaEllipse\n\n    Utilities/MetaIO/metaGaussian\n\n    Utilities/MetaIO/metaGaussian\n\n    Utilities/MetaIO/metaGroup\n\n    Utilities/MetaIO/metaGroup\n\n    Utilities/MetaIO/metaITKUtils\n\n    Utilities/MetaIO/metaImage\n\n    Utilities/MetaIO/metaImage\n\n    Utilities/MetaIO/metaImageUtils\n\n    Utilities/MetaIO/metaImageUtils\n\n    Utilities/MetaIO/metaLandmark\n\n    Utilities/MetaIO/metaLandmark\n\n    Utilities/MetaIO/metaLine\n\n    Utilities/MetaIO/metaLine\n\n    Utilities/MetaIO/metaMe\n\n    Utilities/MetaIO/metaMesh\n\n    Utilities/MetaIO/metaObject\n\n    Utilities/MetaIO/metaObject\n\n    Utilities/MetaIO/metaScene\n        ENH: Added support for contours\n\n    Utilities/MetaIO/metaScene\n\n    Utilities/MetaIO/metaSurface\n\n    Utilities/MetaIO/metaSurface\n\n    Utilities/MetaIO/metaTransform\n\n    Utilities/MetaIO/metaTransform\n\n    Utilities/MetaIO/metaTube\n\n    Utilities/MetaIO/metaTube\n\n    Utilities/MetaIO/metaTubeGra\n\n    Utilities/MetaIO/metaTubeGraph\n\n    Utilities/MetaIO/metaTypes\n        BUG: Wrong typedef for unsigned long type\n\n    Utilities/MetaIO/metaUtils\n        ENH: Added support for contours\n\n    Utilities/MetaIO/metaUtils\n        ENH: Added more debugging information when pixeltype cannot be converted\n\n    Utilities/MetaIO/metaVesselTube\n\n    Utilities/MetaIO/metaVesselTube\n\n    Utilities/MetaIO/tests/CMakeLists.txt\n        ENH: Added metaContour test\n\n    Utilities/MetaIO/tests/testMeta10Contour\n        ENH: First checkin\n\n    Utilities/NrrdIO/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/expat/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/gdcm/CMakeLists.txt\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Utilities/gdcm/src/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/gdcm/src/gdcmBinEntry\n        ENH: Big PHAT bug in gdcm... DT is ASCII\n\n    Utilities/gdcm/src/gdcmDictSet\n        BUG: resultPath could be empty, cannot access char -1 in an array\n\n    Utilities/gdcm/src/gdcmDocEntry\n        ENH: Big PHAT bug in gdcm... DT is ASCII\n\n    Utilities/gdcm/src/gdcmDocument\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n        ENH: Big PHAT bug in gdcm... DT is ASCII\n\n    Utilities/gdcm/src/gdcmDocument\n        ENH: Extract CanRead from code\n\n    Utilities/gdcm/src/gdcmFile\n        ENH: Apply patch to allow ITK to be build against a system GDCM lib. At same time apply a couple of changes I had in my local dir\n\n    Utilities/gdcm/src/gdcmFileHelper\n        ENH: Big PHAT bug in gdcm... DT is ASCII\n        ENH: Properly set some default value: IOP (default to 100010), and Patient Orientation which is redundant...\n\n    Utilities/gdcm/src/gdcmSerieHelper\n        BUG: Fixed unitialized memory read\n\n    Utilities/gdcm/src/gdcmVR\n        COMP: intel compiler issue with sizeof a temporary\n        ENH: Big PHAT bug in gdcm... DT is ASCII\n\n    Utilities/itkjpeg/12/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/itkjpeg/16/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/itkjpeg/8/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/kwsys/CMakeLists.txt\n\n        ENH: remove test on cygwin since it randomly fails\n        ENH: Do not build the library if we are not doing Testing\n        BUG: Trying to get testDynamicLoader to work on Solaris and SunOS, where current directory is not lookup when doing dlopen\n        ENH: use CMAKE_DL_LIBS and not dl directly as it does not always exist\n        ENH: Still more coverage of the DynamicLoader\n        ENH: Compile DynamicLoader\n\n    Utilities/kwsys/CommandLineArguments\n        ENH: add support for win64 for visual studio 2005 ide and nmake, also fix warnings produced by building for win64\n\n    Utilities/kwsys/Directory\n        ENH: Use const char where it should have been. At same time fix Bug#2958\n        ENH: add missing cmake depend hacks\n        BUG: Need to reset internal structure in case of multiple calls to Load\n\n    Utilities/kwsys/Directory.hxx.in\n        ENH: Use const char where it should have been. At same time fix Bug#2958\n        ENH: Redo implementation of itkDirectory to use kwsys (avoid duplicating code).\n\n    Utilities/kwsys/DynamicLoader\n        ENH: remove warning\n        BUG: Fix problem on MacOSX, by disabling part of the test.\n        BUG: Fix for MINGW32\n        ENH: Also look into data segment (consistant with other implementation)\n        ENH: Make sure that we find the proper symbol and not the one that start with _. STYLE: Remove an old style cast\n        STYLE: Minor style\n        COMP: Fix compilation on MacOSX\n\n    Utilities/kwsys/DynamicLoader.hxx.in\n        COMP: Fix problem with namespace\n        ENH: Add documentation on the problem with system wide path for looking up dynamic libraries. STYLE: Fix trailing white spaces\n        ENH: Adding kwsys implementation for a DynamicLoader class. Copy from itkDynamicLoader, with patch from cmDynamicLoader\n\n    Utilities/kwsys/Glob\n        ENH: add support for win64 for visual studio 2005 ide and nmake, also fix warnings produced by building for win64\n        STYLE: Make sure to use the proper cast.\n\n    Utilities/kwsys/Glob.hxx.in\n        ENH: Add support for relative paths and cleanup\n\n    Utilities/kwsys/ProcessUNIX\n        BUG: Do not leak global table of processes.\n        BUG: Reverting previous change until it can be fixed on Cygwin.\n        ENH: Enabling process tree killing on Cygwin.\n        ENH: Enabled process tree killing on the SGI.\n        ENH: Enabled process tree killing on HP-UX.\n        ENH: Added implementation of process tree killing that runs \"ps\" to traverse the tree.\n\n    Utilities/kwsys/ProcessWin32\n        BUG: Fixed deadlock condition when grandchildren are running after the children exit.\n\n    Utilities/kwsys/Registry\n        ENH: add support for win64 for visual studio 2005 ide and nmake, also fix warnings produced by building for win64\n        STYLE: Minor style\n\n    Utilities/kwsys/Registry.hxx.in\n        STYLE: Minor style\n\n    Utilities/kwsys/RegularExpression\n        STYLE: Make sure to use the proper cast.\n\n    Utilities/kwsys/SystemTools\n        ENH: search for program without extensions\n        ENH: put the fix back in with abort\n        COMP: Fixing the the build for windows.\n        BUG: IsSubDirectory should use ComparePath to do platform-independent path comparison.\n        ENH: performance improvments\n        ENH: Improved implementation of FilesDiffer to avoid allocating enough memory for the entire file twice.  Instead using a block-at-a-time comparison.\n        ENH: add support for win64 for visual studio 2005 ide and nmake, also fix warnings produced by building for win64\n        ENH: Use const char where it should have been. At same time fix Bug#2958\n        ENH: try to clean up the search for programs\n        ENH: fix find program to look for .com and .exe correctly and not return files with no extension on windows\n        ENH: Add trailing whitespace\n\n    Utilities/kwsys/SystemTools.hxx.in\n\n        ENH: Use const char where it should have been. At same time fix Bug#2958\n\n    Utilities/kwsys/Terminal\n        ENH: Added rxvt-unicode and cygwin terminals for color support.\n        BUG: Fixed bug in check for vt100 assumption.\n        ENH: Adding 'Terminal' component to hold support routines for dealing with interactive terminals.  Currently only a cfprintf function is provided to print color messages.\n\n    Utilities/kwsys/Terminal.h.in\n        ENH: Adding 'Terminal' component to hold support routines for dealing with interactive terminals.  Currently only a cfprintf function is provided to print color messages.\n\n    Utilities/kwsys/auto_ptr.hxx.in\n        COMP: Skip trying to use native auto_ptr implementation and just provide a conforming one.\n\n    Utilities/kwsys/hashtable.hxx.in\n        ENH: add support for win64 for visual studio 2005 ide and nmake, also fix warnings produced by building for win64\n\n    Utilities/kwsys/testCommandLineArguments\n        STYLE: Make sure to use the proper cast.\n\n    Utilities/kwsys/testDynamicLoader\n        ENH: add support for win64 for visual studio 2005 ide and nmake, also fix warnings produced by building for win64\n        COMP: Fix warning\n        ENH: Make test usable from command line\n        BUG: Do the proper path\n        BUG: Fix problem with  in the path\n        ENH: Make sure that we find the proper symbol and not the one that start with _. STYLE: Remove an old style cast\n        BUG: Make sure to have proper dependencies\n        ENH: remove test temporarily\n        ENH: Improve test coverage\n\n    Utilities/kwsys/testDynload\n        ENH: Cleanup DynamicLoader so that the symbols have more consistent names, start using dynamic loader from kwsys in CMake\n        BUG: Remove comment\n        ENH: Add a file to generate the lib\n\n    Utilities/kwsys/testProcess\n        ENH: Added test 8 to test grandchildren running after children exit.\n\n    Utilities/kwsys/testSystemTools\n        STYLE: Minor style\n\n    Utilities/kwsys/testSystemTools.h.in\n        BUG: Do the proper path\n        BUG: Trying to get testDynamicLoader to work on Solaris and SunOS, where current directory is not lookup when doing dlopen\n\n    Utilities/kwsys/testTerminal\n\n    Utilities/nifti/fsliolib/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/nifti/niftilib/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/nifti/znzlib/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/openjpeg/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/png/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/tiff/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/vxl/core/vnl/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/vxl/core/vnl/vnl_matrix_fixed_ref\n\n    Utilities/vxl/core/vnl/vnl_scalar_join_iterator\n        BUG: wrong function signature\n\n    Utilities/vxl/core/vnl/vnl_vector_fixed_ref\n\n    Utilities/vxl/core/vnl/algo/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/vxl/v3p/netlib/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/vxl/vcl/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Utilities/zlib/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Wrapping/CSwig/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Wrapping/CSwig/SwigRuntime/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n\n    Wrapping/CSwig/Tcl/CMakeLists.txt\n        ENH: Adding ITK version number to the soname of shared libraries on linux.  This is a patch from Steve Robbins given in bug#3249.\n",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/ReleaseNotes/2.6.md": "ITK Release 2.6\n===============\n\nThis release covers the period December 1, 2005 through March 11, 2006.\n\nSchedule\n--------\n\n  Release Number                   Start Date         End Date\n  -------------------------------- ------------------ ------------------\n  Last period for adding classes   January 15 2006    February 11 2006\n  Feature freeze                   February 12 2006   February 26 2006\n  CVS Tagging                      March 11, 2006     March 11, 2006\n  Testing tarballs                 March 11, 2006     March 13, 2006\n  Posting tarballs                 March 14 2006      March 14 2006\n\nNew Classes in this Release\n---------------------------\n\n    Code/Algorithms/itkBayesianClassifierInitializationImageFilter\n\n    Code/BasicFilters/itkInvertIntensityImageFilter\n    Code/BasicFilters/itkModulusImageFilter\n    Code/BasicFilters/itkMorphologicalGradientImageFilter\n\n    Code/Common/itkCovariantVector\n    Code/Common/itkSumOfSquaresImageFunction\n\n    Code/Review/CMakeLists.txt\n    Code/Review/itkThresholdMaximumConnectedComponentsImageFilter\n    Code/Review/README.txt\n\nNew Tests in this Release\n-------------------------\n\n    Testing/Code/Common/itkMeshSourceGraftOutputTest\n    Testing/Code/Common/itkTransformsSetParametersTest\n\n    Testing/Code/BasicFilters/itkInvertIntensityImageFilterTest\n    Testing/Code/BasicFilters/itkMaskNeighborhoodOperatorImageFilterTest\n    Testing/Code/BasicFilters/itkMatrixIndexSelectionImageFilterTest\n    Testing/Code/BasicFilters/itkModulusImageFilterTest\n    Testing/Code/BasicFilters/itkMorphologicalGradientImageFilterTest\n    Testing/Code/BasicFilters/itkNotImageFilterTest\n    Testing/Code/BasicFilters/itkPushPopTileImageFilterTest\n    Testing/Code/BasicFilters/itkTernaryMagnitudeSquaredImageFilterTest\n    Testing/Code/BasicFilters/itkVectorConnectedComponentImageFilterTest\n\n    Testing/Code/IO/itkRawImageIOTest5\n\n    Testing/Code/Numerics/NeuralNetworks/itkNeuralNetworkTests3\n\n    Testing/Code/Review/CMakeLists.txt\n    Testing/Code/Review/itkReviewHeaderTest\n    Testing/Code/Review/itkReviewPrintTest\n    Testing/Code/Review/itkReviewTests\n    Testing/Code/Review/itkThresholdMaximumConnectedComponentsImageFilterTest\n    Testing/Code/Review/README.txt\n\nNew Examples in this Release\n----------------------------\n\n\n    Examples/Filtering/FilteringExamples8\n\n    Examples/IO/ImageReadExtractFilterInsertWrite\n\n    Examples/Statistics/BayesianClassifier\n    Examples/Statistics/BayesianClassifierInitializer\n    Examples/Statistics/StatisticsExamplesTests4\n\nNew Utilities in this Release\n-----------------------------\n\n    Utilities/Dart/NewSince.csh.in\n    Utilities/Dart/NewSince.gawk\n    Utilities/Doxygen/cvsVersionFilter.\n    Utilities/gdcm/CMake/CTestCustom.ctest.in\n    Utilities/gdcm/CMake/FindRsync.cmake\n    Utilities/gdcm/Dicts/ACUSON.d\n    Utilities/gdcm/Dicts/DictGroupName.d\n    Utilities/gdcm/Dicts/ELSCINT.d\n    Utilities/gdcm/Dicts/gdcm.dic.in\n    Utilities/gdcm/Dicts/GE-EchoPAC.d\n    Utilities/gdcm/Dicts/GEMS-Advance.d\n    Utilities/gdcm/Dicts/GEMS-Advantx.d\n    Utilities/gdcm/Dicts/GEMS-CR.d\n    Utilities/gdcm/Dicts/GEMS.d\n    Utilities/gdcm/Dicts/GEMS-DLX.d\n    Utilities/gdcm/Dicts/GEMS-Genie.d\n    Utilities/gdcm/Dicts/GEMS-HiSpeed.d\n    Utilities/gdcm/Dicts/GEMS-Infinia.d\n    Utilities/gdcm/Dicts/HITACHI-MR-pronto.d\n    Utilities/gdcm/Dicts/NIH.d\n    Utilities/gdcm/Dicts/Papyrus.d\n    Utilities/gdcm/Dicts/ParseDict.py\n    Utilities/gdcm/Dicts/PHILIPS-EasyVision.d\n    Utilities/gdcm/Dicts/PHILIPS-Intera.d\n    Utilities/gdcm/Dicts/SIEMENS.d\n    Utilities/gdcm/Dicts/SIEMENS-syngo.d\n    Utilities/gdcm/Dicts/SPI.d\n    Utilities/gdcm/src/gdcmArgMgr\n    Utilities/gdcm/src/gdcmDicomDirVisit\n    Utilities/gdcm/src/gdcmDictGroupName\n    Utilities/gdcm/src/gdcmMpeg\n    Utilities/gdcm/src/gdcmValidator\n    Utilities/kwsys/DynamicLoader\n    Utilities/kwsys/DynamicLoader.hxx.in\n    Utilities/kwsys/String.hxx.in\n    Utilities/kwsys/testDynamicLoader\n    Utilities/kwsys/testDynload\n    Utilities/openjpeg/bio\n    Utilities/openjpeg/cio\n    Utilities/openjpeg/CMakeLists.txt\n    Utilities/openjpeg/dwt\n    Utilities/openjpeg/event\n    Utilities/openjpeg/fix\n    Utilities/openjpeg/image\n    Utilities/openjpeg/int\n    Utilities/openjpeg/j2k\n    Utilities/openjpeg/j2k_lib\n    Utilities/openjpeg/jp2\n    Utilities/openjpeg/jpt\n    Utilities/openjpeg/mct\n    Utilities/openjpeg/mqc\n    Utilities/openjpeg/.NoDartCoverage\n    Utilities/openjpeg/openjpeg\n    Utilities/openjpeg/opj_includes\n    Utilities/openjpeg/pi\n    Utilities/openjpeg/raw\n    Utilities/openjpeg/README.ITK.txt\n    Utilities/openjpeg/t1\n    Utilities/openjpeg/t2\n    Utilities/openjpeg/tcd\n    Utilities/openjpeg/tgt\n\nChanges in this Release\n-----------------------\n\n\n    CMakeLists.txt\n        ENH: ExceptionObject now reports method name.\n\n    itkConfigure.h.in\n        ENH: ExceptionObject now reports method name.\n\n    itkIncludeDirectories.cmake\n        BUG: expat is installed, but ITK_INCLUDE_DIRS fail to report so, therefore any external projects trying to use an installed ITK will fail as soon as a file like itkXMLFile.h is included (it requires expat.h).\n\n    CMake/CheckCPPDirective.cmake\n\n        ENH: ExceptionObject now reports method name.\n\n    CMake/CheckCPPDirectiveExists.cxx.in\n        ENH: better Borland support.\n\n    CMake/InsightValgrind.supp\n        ENH: Valgrind suppressions with libstdc++.so.6\n\n    Code/CMakeLists.txt\n\n    Code/Algorithms/itkBayesianClassifierImageFilter\n        STYLE: Add NAMIC attribution\n        COMP: Stupid error. Calling things from typedef prior to declaring\n        COMP: Borland issues. Use the GetStaticConstMacro to fetch Dimension\n\n    Code/Algorithms/itkBayesianClassifierImageFilter\n        STYLE: indentation.\n\n    Code/Algorithms/itkBayesianClassifierInitializationImageFilter\n        STYLE: Add NAMIC attribution\n        COMP: Borland issues. Use the GetStaticConstMacro to fetch Dimension\n\n    Code/Algorithms/itkBayesianClassifierInitializationImageFilter\n        COMP: cannot assign a T to a Vector< T, 1 > on VS6 apparently\n        ENH: VS typename issues.\n        ENH: Filter to initialize the bayesian classifer filter with a membership image\n\n    Code/Algorithms/itkBinaryMedialNodeMetric\n        ENH: Move include from header to implementation\n\n    Code/Algorithms/itkBinaryMedialNodeMetr\n        ENH: Move include from header to implementation\n\n    Code/Algorithms/itkBioCell\n        STYLE: Some style cleanup\n\n    Code/Algorithms/itkBioCell\n        STYLE: Some style cleanup\n\n    Code/Algorithms/itkBioCellBase\n        STYLE: Some style cleanup\n\n    Code/Algorithms/itkBioCellularAggregate\n        STYLE: Some style cleanup\n\n    Code/Algorithms/itkBioCellularAggregate\n        STYLE: Some style cleanup\n\n    Code/Algorithms/itkBioCellularAggregateBase\n        STYLE: Some style cleanup\n\n    Code/Algorithms/itkBioGenome\n        STYLE: Some style cleanup\n\n    Code/Algorithms/itkClassifierBase\n        STYLE: Some style cleanup\n\n    Code/Algorithms/itkClassifierBase\n        STYLE: Some style cleanup\n\n    Code/Algorithms/itkCurvatureRegistrationFilter\n        STYLE: Some style cleanup\n\n    Code/Algorithms/itkDeformableSimplexMesh3DBalloonForceFilter\n        STYLE: Some style cleanup\n\n    Code/Algorithms/itkDeformableSimplexMesh3DBalloonForceFilter\n        STYLE: Some style cleanup\n\n    Code/Algorithms/itkDeformableSimplexMesh3DFilter\n        STYLE: Some style cleanup\n\n    Code/Algorithms/itkDeformableSimplexMesh3DFilter\n        STYLE: Some style cleanup\n\n    Code/Algorithms/itkDeformableSimplexMesh3DGradientConstraintForceFilter\n        COMP: warnings.\n\n    Code/Algorithms/itkFEMRegistrationFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Algorithms/itkFastMarchingImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Algorithms/itkGradientDifferenceImageToImageMetric\n        BUG: #2543. BoundaryCondotion objects are now ivars.\n\n    Code/Algorithms/itkGradientDifferenceImageToImageMetr\n        BUG: removed debugging statements.\n\n    Code/Algorithms/itkHistogramImageToImageMetr\n        BUG: throw exception before checking derivate sizes.\n\n    Code/Algorithms/itkHistogramMatchingImageFilter\n        COMP:  Fixed typecasting to remove compiler warnings for all histogram image types.\n\n    Code/Algorithms/itkImageGaussianModelEstimator\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Algorithms/itkImageKmeansModelEstimator\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Algorithms/itkImageRegistrationMethod\n        COMP: some intel compilers have trouble with data allocated in the catch (apparently).\n\n    Code/Algorithms/itkIsoContourDistanceImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Algorithms/itkKappaStatisticImageToImageMetric\n\n    Code/Algorithms/itkKappaStatisticImageToImageMetr\n\n    Code/Algorithms/itkMIRegistrationFunction\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Algorithms/itkMRFImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Algorithms/itkMeanSquareRegistrationFunction\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Algorithms/itkMinMaxCurvatureFlowFunction\n        BUG: Fix compiler errors when non-double pixel types are used. See InsightJournal review for MATITK\n\n    Code/Algorithms/itkMultiResolutionImageRegistrationMethod\n    stl/Vector.html) VS8 has stricter checks and managed to catch the bug.\n\n    Code/Algorithms/itkNCCRegistrationFunction\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Algorithms/itkRayCastInterpolateImageFunction\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Algorithms/itkRegularSphereMeshSource\n        STYLE: Some style cleanup\n\n    Code/Algorithms/itkRegularSphereMeshSource\n        STYLE: Some style cleanup\n\n    Code/Algorithms/itkStructHashFunction\n        STYLE: Some style cleanup\n\n    Code/Algorithms/itkVnlFFTRealToComplexConjugateImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Algorithms/itkVoronoiSegmentationImageFilterBase\n        BUG: compilation errors repaired.\n\n    Code/Algorithms/itkVoronoiSegmentationImageFilterBase\n        BUG: compilation errors repaired.\n\n    Code/Algorithms/itkVoronoiSegmentationRGBImageFilter\n\n    Code/BasicFilters/itkAbsImageFilter\n        COMP: warnings about unused parameter.\n        ENH: added operator==and operator!= methods.\n\n    Code/BasicFilters/itkAbsoluteValueDifferenceImageFilter\n        COMP: warnings about unused parameter.\n        ENH: added operator==and operator!= methods.\n\n    Code/BasicFilters/itkAccumulateImageFilter\n        STYLE: indentation.\n\n    Code/BasicFilters/itkAcosImageFilter\n        COMP: warnings about unused parameter.\n        ENH: added operator==and operator!= methods.\n\n    Code/BasicFilters/itkAdaptImageFilter\n        ENH: Added operator== and operator!=.\n\n    Code/BasicFilters/itkAdaptiveHistogramEqualizationImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkAddImageFilter\n        COMP: warnings about unused parameter.\n        ENH: added operator==and operator!= methods.\n\n    Code/BasicFilters/itkAndImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkAnisotropicDiffusionImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkAsinImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkAtan2ImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkAtanImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkBSplineCenteredL2ResampleImageFilterBase\n        ENH: better Exception description.\n\n    Code/BasicFilters/itkBSplineCenteredResampleImageFilterBase\n        ENH: better Exception description.\n\n    Code/BasicFilters/itkBSplineDecompositionImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkBSplineInterpolateImageFunction\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkBSplineL2ResampleImageFilterBase\n        ENH: better Exception description.\n\n    Code/BasicFilters/itkBSplineResampleImageFilterBase\n        ENH: better Exception description.\n\n    Code/BasicFilters/itkBilateralImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkBinaryErodeImageFilter\n        STYLE: removed dummy variable access.\n\n    Code/BasicFilters/itkBinaryFunctorImageFilter\n        ENH: Added operator== and operator!=.\n\n    Code/BasicFilters/itkBinaryMagnitudeImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkBinaryMedianImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkBinaryMorphologyImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkBinaryThresholdImageFilter\n        ENH: Added operator== and operator!=.\n\n    Code/BasicFilters/itkBloxBoundaryProfileImageToBloxCoreAtomImageFilter\n        ENH: remove redundant dim parameter from itkBloxBoundaryProfileImageToBloxCoreAtomImageFilter\n\n    Code/BasicFilters/itkBloxBoundaryProfileImageToBloxCoreAtomImageFilter\n        ENH: remove redundant dim parameter from itkBloxBoundaryProfileImageToBloxCoreAtomImageFilter\n\n    Code/BasicFilters/itkBoundedReciprocalImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkCastImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkChangeLabelImageFilter\n        COMP: Fix for bug 2753: itkChangeLabelImageFilter.h -- ChangeLabel::SetChangeMap not const-correct.\n\n    Code/BasicFilters/itkClosingByReconstructionImageFilter\n        ENH: added flag to preserve original intesities.\n\n    Code/BasicFilters/itkClosingByReconstructionImageFilter\n        BUG: PrintSelf defect.\n\n    Code/BasicFilters/itkComplexToImaginaryImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkComplexToModulusImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkComplexToPhaseImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkComplexToRealImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkCompose2DCovariantVectorImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkCompose2DVectorImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkCompose3DCovariantVectorImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkCompose3DVectorImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkComposeRGBImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkConfidenceConnectedImageFilter\n        STYLE: Spelling\n\n    Code/BasicFilters/itkConfidenceConnectedImageFilter\n        ENH: Corrected several calculations and improved performance\n\n    Code/BasicFilters/itkConnectedComponentFunctorImageFilter\n        BUG: must use NumericTraits to compare to non-zero.\n\n    Code/BasicFilters/itkConnectedComponentFunctorImageFilter\n        BUG: bad logic introduced in last checkin.\n\n    Code/BasicFilters/itkConnectedComponentImageFilter\n        BUG: must use NumericTraits to compare to non-zero.\n\n    Code/BasicFilters/itkConnectedComponentImageFilter\n        BUG: must use NumericTraits to compare to non-zero.\n\n    Code/BasicFilters/itkConstrainedValueAdditionImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkConstrainedValueDifferenceImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkCosImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkDeformationFieldJacobianDeterminantFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkDerivativeImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkDiffusionTensor3DReconstructionImageFilter\n        BUG: Sorry Bill. Didn't realize that you had commited a fix. Revert to Bills fix.\n        COMP: GetBValue is defined as a macro on windows. Need to undef it if present.\n        ENH: Allow for the DW gradient images to be specified as a single multi-component image (vectorimage) or as several itk::Images. The former is a convenient input from nrrd format for DWI images\n\n    Code/BasicFilters/itkDiffusionTensor3DReconstructionImageFilter\n        BUG: uninitialized ivar.\n        BUG: Check if container is null before printing it. (was causing print tests to segfault)\n\n    Code/BasicFilters/itkDiscreteGaussianImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkDivideImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkEdgePotentialImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkExpImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkExpNegativeImageFilter\n        ENH: Added operator== and operator!=.\n\n    Code/BasicFilters/itkExtractImageFilter\n\n    Code/BasicFilters/itkFastIncrementalBinaryDilateImageFilter\n        BUG: missing include file for superclass.\n\n    Code/BasicFilters/itkGetAverageSliceImageFilter\n        ENH: this class is equivalent to AccumulateImageFilter with AveragingOn and a slightly different api. It is now a subclass of AccumulateImageFilter.\n\n    Code/BasicFilters/itkGetAverageSliceImageFilter\n        ENH: this class is equivalent to AccumulateImageFilter with AveragingOn and a slightly different api. It is now a subclass of AccumulateImageFilter.\n\n    Code/BasicFilters/itkGradientImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkGradientMagnitudeImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkGradientToMagnitudeImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkGrayscaleGeodesicDilateImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkGrayscaleGeodesicErodeImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkHoughTransform2DLinesImageFilter\n\n    Code/BasicFilters/itkIntensityWindowingImageFilter\n        ENH: Added operator== and operator!=.\n\n    Code/BasicFilters/itkInteriorExteriorMeshFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkInvertIntensityImageFilter\n        ENH: new filters contributed by Gaetan Lehmann via the Insight Journal.\n\n    Code/BasicFilters/itkInvertIntensityImageFilter\n        ENH: new filters contributed by Gaetan Lehmann via the Insight Journal.\n\n    Code/BasicFilters/itkIterativeInverseDeformationFieldImageFilter\n        BUG: did not have progress. STYLE: did not have copyright. STYLE: indentation.\n\n    Code/BasicFilters/itkJoinImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkJoinSeriesImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkLaplacianImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkLaplacianSharpeningImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/Attic/itkLazyEdgeDetectionImageFilter3D\n        ENH: removed because it was a utility class for the removed class MidsagittalPlaneExtractionImageFilter.\n\n    Code/BasicFilters/Attic/itkLazyEdgeDetectionImageFilter3D\n        ENH: removed because it was a utility class for the removed class MidsagittalPlaneExtractionImageFilter.\n\n    Code/BasicFilters/itkLog10ImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkLogImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkMaskImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkMaskNegatedImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkMaskNeighborhoodOperatorImageFilter\n\n    Code/BasicFilters/itkMaskNeighborhoodOperatorImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkMatrixIndexSelectionImageFilter\n        ENH: Added operator== and operator!=.\n\n    Code/BasicFilters/itkMaximumImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkMeanImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkMedianImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkMinimumImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkModulusImageFilter\n        ENH: new filters contributed by Gaetan Lehmann via the Insight Journal.\n\n    Code/BasicFilters/itkModulusImageFilter\n        ENH: new filters contributed by Gaetan Lehmann via the Insight Journal.\n\n    Code/BasicFilters/itkMorphologicalGradientImageFilter\n        ENH: new filters contributed by Gaetan Lehmann via the Insight Journal.\n\n    Code/BasicFilters/itkMorphologicalGradientImageFilter\n        ENH: new filters contributed by Gaetan Lehmann via the Insight Journal.\n\n    Code/BasicFilters/itkMorphologyImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkMultiplyImageFilter\n        COMP: warnings about unused parameter.\n        ENH: added operator==and operator!= methods.\n\n    Code/BasicFilters/itkNarrowBandImageFilterBase\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkNaryAddImageFilter\n        ENH: Added operator== and operator!=.\n\n    Code/BasicFilters/itkNaryMaximumImageFilter\n        ENH: Added operator== and operator!=.\n\n    Code/BasicFilters/itkNeighborhoodOperatorImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkNoiseImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkNormalizedCorrelationImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkNotImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkObjectMorphologyImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkOpeningByReconstructionImageFilter\n        ENH: added flag to preserve original intesities.\n\n    Code/BasicFilters/itkOpeningByReconstructionImageFilter\n        ENH: added flag to preserve original intesities.\n\n    Code/BasicFilters/itkOrImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkParallelSparseFieldLevelSetImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkPasteImageFilter\n\n    Code/BasicFilters/itkPasteImageFilter\n        BUG: type in type names.\n\n    Code/BasicFilters/itkPermuteAxesImageFilter\n        ENH: better Exception description.\n\n    Code/BasicFilters/itkPolylineMask2DImageFilter\n        STYLE: Beef up the documentation (Andinet)\n\n    Code/BasicFilters/itkRGBToLuminanceImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkRecursiveSeparableImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkRegionOfInterestImageFilter\n        BUG: output region was not being set correctly.\n\n    Code/BasicFilters/itkRescaleIntensityImageFilter\n        ENH: Added operator== and operator!=.\n\n    Code/BasicFilters/itkScalarConnectedComponentImageFilter\n        ENH: Added operator== and operator!=.\n\n    Code/BasicFilters/itkShrinkImageFilter\n        BUG: Bug # 2811 A second call of Update() causes InvalidRequesedRegion Error.\n\n    Code/BasicFilters/itkShrinkImageFilter\n        BUG: Bug # 2811 A second call of Update() function causes InvalidRequesedRegion Error.\n\n    Code/BasicFilters/itkSigmoidImageFilter\n        ENH: Added operator== and operator!=.\n\n    Code/BasicFilters/itkSimpleContourExtractorImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkSimplexMeshAdaptTopologyFilter\n        STYLE: Some style cleanup\n\n    Code/BasicFilters/itkSimplexMeshAdaptTopologyFilter\n        STYLE: Some style cleanup\n\n    Code/BasicFilters/itkSinImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkSobelEdgeDetectionImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkSparseFieldLevelSetImageFilter\n        BUG: Fix compiler errors when non-double pixel types are used. See InsightJournal review for MATITK\n\n    Code/BasicFilters/itkSqrtImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkSquareImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkSquaredDifferenceImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkSubtractImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkSymmetricEigenAnalysisImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkTanImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkTensorFractionalAnisotropyImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkTensorRelativeAnisotropyImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkTernaryAddImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkTernaryFunctorImageFilter\n        ENH: Added operator== and operator!=.\n\n    Code/BasicFilters/itkTernaryMagnitudeImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkTernaryMagnitudeSquaredImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkThresholdLabelerImageFilter\n        ENH: Added operator== and operator!=.\n\n    Code/BasicFilters/itkTileImageFilter\n        BUG: Improper region calculation for output.\n\n    Code/BasicFilters/itkUnaryFunctorImageFilter\n        ENH: Added operator== and operator!=.\n\n    Code/BasicFilters/itkVectorCastImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkVectorConfidenceConnectedImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkVectorConnectedComponentImageFilter\n        COMP: warnings about unused parameter.\n        COMP: typename issues with VS6.\n\n    Code/BasicFilters/itkVectorExpandImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkVectorGradientMagnitudeImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkVectorIndexSelectionCastImageFilter\n        ENH: Added operator== and operator!=.\n\n    Code/BasicFilters/itkVectorNeighborhoodOperatorImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkVectorResampleImageFilter\n        ENH: Allow user to specify precision. STYLE: GetObject change to GetConstObject.\n        ENH: follows same logic as ResampleImageFilter. BUG: was not setting directions on output.\n\n    Code/BasicFilters/itkVectorResampleImageFilter\n        COMP: Set threads to 1 if Borland.\n        BUG: missing typedef. BUG: warnings.\n\n    Code/BasicFilters/itkVectorRescaleIntensityImageFilter\n        ENH: Added operator== and operator!=.\n\n    Code/BasicFilters/itkVotingBinaryImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkVotingBinaryIterativeHoleFillingImageFilter\n        STYLE: spelling.\n\n    Code/BasicFilters/itkWeightedAddImageFilter\n        ENH: added operator==and operator!= methods.\n\n    Code/BasicFilters/itkXorImageFilter\n        COMP: warnings about unused parameter.\n\n    Code/BasicFilters/itkZeroCrossingBasedEdgeDetectionImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/BasicFilters/itkZeroCrossingImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Common/CMakeLists.txt\n        ENH: Adding CrossProduct for 3D.\n\n    Code/Common/itkAnnulusOperator\n        BUG: Incorrect define prevents Sobel include\n\n    Code/Common/itkBSplineDerivativeKernelFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkBSplineInterpolationWeightFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkBSplineInterpolationWeightFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkBSplineKernelFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkBarrier\n\n    Code/Common/itkBarrier\n\n    Code/Common/itkBinaryBallStructuringElement\n        STYLE: no need for itk:: withing itk namespace.\n\n    Code/Common/itkBinaryThresholdImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkBinaryThresholdImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkBinaryThresholdSpatialFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkBloxBoundaryPointImage\n        COMP: Move traits around for the sun compilers\n\n    Code/Common/itkBloxBoundaryProfileItem\n        STYLE: Some style cleanup\n\n    Code/Common/itkBloxBoundaryProfileItem\n        STYLE: Some style cleanup\n\n    Code/Common/itkBloxImage\n        COMP: Move traits around for the sun compilers\n\n    Code/Common/itkBloxItem\n\n    Code/Common/itkBluePixelAccessor\n        ENH: Added operator== and operator!=.\n\n    Code/Common/itkCenteredAffineTransform\n        BUG: 2769. SetParameters() method was missing to invoke Modified().\n\n    Code/Common/itkCenteredEuler3DTransform\n\n    Code/Common/itkCenteredRigid2DTransform\n\n        ENH: simplify modified time computation.\n        BUG: was not setting modified times.\n\n    Code/Common/itkCenteredSimilarity2DTransform\n\n    Code/Common/itkCentralDifferenceImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkCentralDifferenceImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkChainCodePath\n        STYLE: Some style cleanup\n\n    Code/Common/itkChainCodePath2D\n        STYLE: Some style cleanup\n\n    Code/Common/itkChainCodePath2D\n        STYLE: Some style cleanup\n\n    Code/Common/itkConceptChecking\n        STYLE: Some style cleanup\n\n    Code/Common/itkConditionVariable\n        STYLE: Some style cleanup\n\n    Code/Common/itkConditionVariable\n        STYLE: Some style cleanup\n\n    Code/Common/itkCovarianceImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkCovarianceImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkCovariantVector\n        ENH: Adding CrossProduct for 3D.\n\n    Code/Common/itkCovariantVector\n        COMP: warnings regarding placement of inline modifier.\n        COMP: Keep vs60 happy\n        COMP: Borland gets confused by a templated premultiply operator.. Force it to be a scalar of the same scalar type as the vector is templated over, so borland is now forced to recognize it as a scalar\n        ENH: Adding CrossProduct for 3D.\n\n    Code/Common/itkCovariantVector\n\n    Code/Common/itkDataObject\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Common/itkDataObject\n        COMP: warnings.\n\n    Code/Common/itkDirectory\n        COMP: Fix compilation\n\n    Code/Common/itkDirectory\n        COMP: Fix compilation\n\n    Code/Common/itkEuler3DTransform\n        COMP: Warnings\n        BUG: 2769. SetParameters() method was missing to invoke Modified().\n\n    Code/Common/itkExceptionObject\n        COMP: __FUNCTION__ is only valid within a function.\n\n    Code/Common/itkExtrapolateImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkFastMutexLock\n        ENH: Redo implementation of itkDirectory to use kwsys (avoid duplicating code). Also fix some minor style\n\n    Code/Common/itkFiniteDifferenceImageFilter\n        STYLE: doxygen cleanups\n\n    Code/Common/itkFiniteDifferenceImageFilter\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Common/itkFourierSeriesPath\n        STYLE: Some style cleanup\n\n    Code/Common/itkFourierSeriesPa\n        STYLE: Some style cleanup\n\n    Code/Common/itkFunctionBase\n        STYLE: Some style cleanup\n\n    Code/Common/itkGaussianBlurImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkGaussianBlurImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkGaussianDerivativeImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkGaussianDerivativeImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkGaussianKernelFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkGaussianOperator\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Common/itkGreenPixelAccessor\n        ENH: Added operator== and operator!=.\n\n    Code/Common/itkHexahedronCell\n        ENH: Added EvaluatePosition()\n\n    Code/Common/itkHexahedronCell\n\n        ENH: Added EvaluatePosition()\n\n    Code/Common/itkImage\n        COMP: Move traits around for the sun compilers\n\n    Code/Common/itkImage\n        COMP: warnings.\n\n    Code/Common/itkImageAdaptor\n        COMP: Move traits around for the sun compilers\n\n    Code/Common/itkImageAdaptor\n\n    Code/Common/itkImageBase\n        COMP: Move traits around for the sun compilers\n\n    Code/Common/itkImageBase\n        COMP: warnings.\n\n    Code/Common/itkImageConstIteratorWithIndex\n        BUG: SetBegin should set the pointer to the begin of the buffer. was setting the one that pointed to the begin of the region instead\n\n    Code/Common/itkImageFunction\n        BUG: Wrong argument type was used for a continuous index output\n        STYLE: Some style cleanup\n\n    Code/Common/itkImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkImageRegionConstIterator\n        COMP: Fix for bug 2781, wherein some copy constructors for imageRegion[Const]Iterator do not compile.\n\n    Code/Common/itkImageRegionIterator\n        COMP: Fix for bug 2781, wherein some copy constructors for imageRegion[Const]Iterator do not compile.\n\n    Code/Common/itkImageRegionIterator\n        COMP: Fix for bug 2781, wherein some copy constructors for imageRegion[Const]Iterator do not compile.\n\n    Code/Common/itkImageSource\n\n    Code/Common/itkImageSource\n\n    Code/Common/itkImageToImageFilter\n        BUG: un-hide methods from superclass\n\n    Code/Common/itkImageToImageFilter\n\n    Code/Common/itkImportImageContainer\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Common/itkInterpolateImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkIterationReporter\n        STYLE: Some style cleanup\n\n    Code/Common/itkKLMSegmentationBorder\n        STYLE: Some style cleanup\n\n    Code/Common/itkKLMSegmentationBorder\n        STYLE: Some style cleanup\n\n    Code/Common/itkKLMSegmentationRegion\n        STYLE: Some style cleanup\n\n    Code/Common/itkKLMSegmentationRegion\n        STYLE: Some style cleanup\n\n    Code/Common/itkKernelFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkKernelTransform\n        BUG: 2769. SetParameters() method was missing to invoke Modified().\n\n    Code/Common/itkLandmarkBasedTransformInitializer\n        BUG: bug 2632. Else check should have set angle to 90 degrees\n\n    Code/Common/itkLevelSet\n        STYLE: Some style cleanup\n\n    Code/Common/itkLightObject\n        STYLE: Some style cleanup\n\n    Code/Common/itkLightObject\n        STYLE: Some style cleanup\n\n    Code/Common/itkLinearInterpolateImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkLinearInterpolateImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkLogOutput\n        STYLE: Some style cleanup\n\n    Code/Common/itkLogger\n        STYLE: Some style cleanup\n\n    Code/Common/itkLoggerBase\n        STYLE: Some style cleanup\n\n    Code/Common/itkLoggerManager\n        STYLE: Some style cleanup\n\n    Code/Common/itkLoggerThreadWrapper\n        STYLE: Some style cleanup\n\n    Code/Common/itkLoggerThreadWrapper\n        BUG: Did not have blockers for includes.\n\n    Code/Common/itkMacro\n        BUG: cygwin does not have __FUNCSIG__.\n        ENH: More descriptive ExceptionMacro.\n\n    Code/Common/itkMahalanobisDistanceThresholdImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkMahalanobisDistanceThresholdImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkMapContainer\n\n    Code/Common/itkMapContainer\n\n    Code/Common/itkMatrixOffsetTransformBase\n        BUG: 2769. SetParameters() method was missing to invoke Modified().\n\n    Code/Common/itkMeanImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkMeanImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkMedianImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkMedianImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkMeshSource\n\n    Code/Common/itkMeshSource\n\n    Code/Common/itkMetaDataObject\n        STYLE: Already within the itk namespace\n\n    Code/Common/itkMultipleLogOutput\n        STYLE: Some style cleanup\n\n    Code/Common/itkNearestNeighborExtrapolateImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkNearestNeighborInterpolateImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkNeighborhoodBinaryThresholdImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkNeighborhoodBinaryThresholdImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkNeighborhoodIterator\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Common/itkNeighborhoodOperatorImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkNeighborhoodOperatorImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkNumericTraitsCovariantVectorPixel\n        STYLE: Some style cleanup\n\n    Code/Common/itkNumericTraitsTensorPixel\n        STYLE: Some style cleanup\n\n    Code/Common/itkNumericTraitsVectorPixel\n        STYLE: Some style cleanup\n\n    Code/Common/itkObject\n        STYLE: Some style cleanup\n\n    Code/Common/itkOctree\n        STYLE: Some style cleanup\n\n    Code/Common/itkOctree\n        STYLE: Some style cleanup\n\n    Code/Common/itkOctreeNode\n        STYLE: Some style cleanup\n\n    Code/Common/itkOctreeNode\n        STYLE: Some style cleanup\n\n    Code/Common/itkOrientedImage\n        COMP: Move traits around for the sun compilers\n\n    Code/Common/itkPCAShapeSignedDistanceFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkPCAShapeSignedDistanceFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkParametricPa\n        STYLE: Some style cleanup\n\n    Code/Common/itkParametricPath\n        STYLE: Some style cleanup\n\n    Code/Common/itkPath\n        ENH: Fix for bug 2918. Add PathDimension static constant to class.\n\n    Code/Common/itkPa\n        STYLE: Some style cleanup\n\n    Code/Common/itkPathFunctions\n        STYLE: Some style cleanup\n\n    Code/Common/itkPathSource\n        STYLE: Some style cleanup\n\n    Code/Common/itkPathSource\n        STYLE: Some style cleanup\n\n    Code/Common/itkPathToPathFilter\n        STYLE: Some style cleanup\n\n    Code/Common/itkPathToPathFilter\n        STYLE: Some style cleanup\n\n    Code/Common/itkPhasedArray3DSpecialCoordinatesImage\n        COMP: Move traits around for the sun compilers\n\n    Code/Common/itkPointSet\n        STYLE: Some style cleanup\n\n    Code/Common/itkPolyLineParametricPath\n        STYLE: Some style cleanup\n\n    Code/Common/itkPolyLineParametricPa\n        STYLE: Some style cleanup\n\n    Code/Common/itkProcessObject\n\n    Code/Common/itkProcessObject\n\n    Code/Common/itkProgressReporter\n        STYLE: Some style cleanup\n\n    Code/Common/itkQuaternionRigidTransform\n        BUG: 2769. SetParameters() method was missing to invoke Modified().\n\n    Code/Common/itkRealTimeClock\n        STYLE: Already within the itk namespace\n\n    Code/Common/itkRedPixelAccessor\n        ENH: Added operator== and operator!=.\n\n    Code/Common/itkRigid2DTransform\n\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Common/itkRigid3DPerspectiveTransform\n\n    Code/Common/itkScalarToRGBPixelFunctor\n        STYLE: Some style cleanup\n\n    Code/Common/itkScalarToRGBPixelFunctor\n        STYLE: Some style cleanup\n\n    Code/Common/itkScaleLogarithmicTransform\n        BUG: 2769. SetParameters() method was missing to invoke Modified().\n\n    Code/Common/itkScaleSkewVersor3DTransform\n\n    Code/Common/itkScaleTransform\n        BUG: 2769. SetParameters() method was missing to invoke Modified().\n\n    Code/Common/itkScatterMatrixImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkScatterMatrixImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkSegmentationBorder\n        STYLE: Some style cleanup\n\n    Code/Common/itkSegmentationBorder\n        STYLE: Some style cleanup\n\n    Code/Common/itkSegmentationRegion\n        STYLE: Some style cleanup\n\n    Code/Common/itkSegmentationRegion\n        STYLE: Some style cleanup\n\n    Code/Common/itkSemaphore\n\n    Code/Common/itkShapeSignedDistanceFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkSimilarity2DTransform\n\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Common/itkSimilarity3DTransform\n\n    Code/Common/itkSimpleFastMutexLock\n        ENH: Redo implementation of itkDirectory to use kwsys (avoid duplicating code). Also fix some minor style\n\n    Code/Common/itkSimpleFilterWatcher\n        ENH: Now uses TimeProbe.\n\n    Code/Common/itkSimpleFilterWatcher\n        STYLE: Some style cleanup\n\n    Code/Common/itkSmartPointer\n        ENH: Redo implementation of itkDirectory to use kwsys (avoid duplicating code). Also fix some minor style\n\n    Code/Common/itkSmartPointerForwardReference\n        ENH: Redo implementation of itkDirectory to use kwsys (avoid duplicating code). Also fix some minor style\n\n    Code/Common/itkSmartPointerForwardReference\n        ENH: Redo implementation of itkDirectory to use kwsys (avoid duplicating code). Also fix some minor style\n\n    Code/Common/itkSparseImage\n        COMP: Move traits around for the sun compilers\n\n    Code/Common/itkSpecialCoordinatesImage\n        COMP: Move traits around for the sun compilers\n\n    Code/Common/itkSphereSignedDistanceFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkSphereSignedDistanceFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkStdStreamLogOutput\n        STYLE: Some style cleanup\n\n    Code/Common/itkSumOfSquaresImageFunction\n        COMP: warnings,\n        ENH: Function to calculate the sum of squares in a neighborhood\n\n    Code/Common/itkSumOfSquaresImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkTestMain\n        ENH: moved code into .h file.\n\n    Code/Common/itkTetrahedronCell\n        STYLE: indentation\n\n    Code/Common/itkThreadLogger\n        STYLE: Some style cleanup\n\n    Code/Common/itkTimeProbe\n        STYLE: Some style cleanup\n\n    Code/Common/itkTranslationTransform\n        STYLE: no need for this dereference.\n        COMP: Type mismatch on method.\n\n    Code/Common/itkTreeIteratorBase\n        ENH: more consistent use of ExceptionMacro and ExceptionObject.\n\n    Code/Common/itkVariableLengthVector\n        ENH: Add GetSquaredNorm method to class\n        ENH:  premultiplication with scalars\n\n    Code/Common/itkVariableLengthVector\n        ENH: Add GetSquaredNorm method to class\n\n    Code/Common/itkVarianceImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkVarianceImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkVector\n        COMP: warnings regarding placement of inline modifier.\n        COMP: Borland gets confused by a templated premultiply operator.. Force it to be a scalar of the same scalar type as the vector is templated over, so borland is now forced to recognize it as a scalar\n        ENH: Premultiply operator for product of scalar and a vector, from Casey Goodlett\n\n    Code/Common/itkVector\n\n    Code/Common/itkVectorContainer\n\n    Code/Common/itkVectorContainer\n\n    Code/Common/itkVectorImage\n        STYLE: More documentation\n        COMP: Move traits around for the sun compilers\n\n    Code/Common/itkVectorImage\n\n    Code/Common/itkVectorImageToImageAdaptor\n        BUG: The vector image returns a pixel created on the stack, not a reference to a pixel\n        COMP: Move traits around for the sun compilers\n\n    Code/Common/itkVectorInterpolateImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkVectorLinearInterpolateImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkVectorLinearInterpolateImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkVectorMeanImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkVectorMeanImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkVectorNearestNeighborInterpolateImageFunction\n        ENH: moved code into .h file.\n        STYLE: Some style cleanup\n\n    Code/Common/itkVectorNearestNeighborInterpolateImageFunction\n    private/insight-developers/2006-February/007646.html\n        STYLE: Some style cleanup\n\n    Code/Common/itkVersor\n\n    Code/Common/itkVersorRigid3DTransform\n\n    Code/Common/itkVersorTransform\n\n        ENH: Now invoking Modified() from SetIdentity().\n\n    Code/Common/itkWindowedSincInterpolateImageFunction\n        STYLE: Some style cleanup\n\n    Code/Common/itkWindowedSincInterpolateImageFunction\n        STYLE: Some style cleanup\n\n    Code/IO/itkAnalyzeImageIO\n        ENH: better exception reporting.\n\n    Code/IO/itkBMPImageIO\n        ENH: Better exception reporting.\n\n    Code/IO/itkBrains2HeaderBase\n        STYLE: Some style cleanup\n\n    Code/IO/itkBrains2HeaderBase\n        STYLE: Some style cleanup\n\n    Code/IO/itkBrains2IPLHeaderInfo\n        STYLE: Some style cleanup\n\n    Code/IO/itkBrains2IPLHeaderInfo\n        STYLE: Some style cleanup\n\n    Code/IO/itkBrains2MaskHeaderInfo\n        STYLE: Some style cleanup\n\n    Code/IO/itkBrains2MaskHeaderInfo\n        STYLE: Some style cleanup\n\n    Code/IO/itkConvertPixelBuffer\n\n    Code/IO/itkConvertPixelBuffer\n        COMP: signed unsigned comparison warnings\n\n    Code/IO/itkDefaultConvertPixelTraits\n        COMP: Fix for bug 2725, which prevented compliation of IO using signed char traits on some compilers.\n\n    Code/IO/itkGDCMImageIO\n        BUG: When writting 3D images, it allowed to access the 3d component of the ITK Spacing.\n        ENH: Provide an helper function around the MetaDataDictionary. Make it more user oriented.\n        BUG: Do not propagate group length as computation is not done\n        ENH: better exception reporting.\n        STYLE: more consistent use of types.\n\n    Code/IO/itkGDCMImageIO\n        ENH: Provide an helper function around the MetaDataDictionary. Make it more user oriented.\n        ENH: Bring AddRestriction from the gdcm level to the itkGDCM level. Update example to show usage, add more doc.\n\n    Code/IO/itkGDCMSeriesFileNames\n        ENH: Update gdcm version to 1.2\n\n    Code/IO/itkGDCMSeriesFileNames\n        ENH: Rename AddRestriction into AddSeriesRestriction\n\n    Code/IO/itkGE4ImageIO\n        STYLE: Some style cleanup\n\n    Code/IO/itkGEImageHeader\n        STYLE: Some style cleanup\n\n    Code/IO/itkIPLCommonImageIO\n        BUG: Report orientation in direction cosines\n\n    Code/IO/itkIPLFileNameList\n        STYLE: Some style cleanup\n\n    Code/IO/itkImageFileReader\n        ENH: Better exception reporting.\n        ENH: Make DefaultConvertPixelTraits a trait of the image to make IO support of VectorImage consistent. Forward declare it so it doesn't increase parsing time.\n\n    Code/IO/itkImageFileReader\n        COMP: previous fix does not work for all pixel types... defer until its made correct\n        ENH: Better exception reporting.\n\n    Code/IO/itkImageFileWriter\n        ENH: Better exception reporting.\n\n    Code/IO/itkImageFileWriter\n        ENH: better exception message.\n\n    Code/IO/itkImageSeriesReader\n        STYLE: minor style\n\n    Code/IO/itkMetaImageIO\n        BUG: Peter Cech found typo that produced incorrect index to physical transform for origin update with direction cosines.\n        BUG: MetaIO now supports 64bit int on platforms having 64bit ints.  Thanks to help from Robert Atwood at imperial.ac.uk\n\n    Code/IO/itkMetaImageIO\n        COMP: fixed member object reference\n\n    Code/IO/itkMvtSunf\n        STYLE: Some style cleanup\n\n    Code/IO/itkNiftiImageIO\n        BUG: suppress nifti library error messages\n\n    Code/IO/itkPNGImageIO\n        COMP: VS71 issues with exception macro.\n        ENH: better error messages\n\n    Code/IO/itkRawImageIO\n\n    Code/IO/itkTIFFImageIO\n        BUG: Remove previous commit, while avoiding compiler warning\n\n    Code/IO/itkVTKImageIO\n        ENH: Use the kwsys lib instead\n\n    Code/Numerics/Statistics/itkDenseFrequencyContainer\n        BUG: Minor.. remove \\#defines that were left when copied over from older txx code\n\n    Code/Numerics/Statistics/itkDensityFunction\n        BUG: Base and superclass had the same method and ivar. Bug 2880\n\n    Code/Numerics/Statistics/itkMembershipFunctionBase\n        BUG: Base and superclass had the same method and ivar. Bug 2880\n\n    Code/Numerics/Statistics/itkSample\n        BUG: Use traits to give a default length to the samples, so the user does not need to call SetMeasurementVectorSize( .. ) if TMeasurementVector is a FixedArray, Vector etc\n\n    Code/Numerics/Statistics/itkSparseFrequencyContainer\n        BUG: Minor.. remove \\#defines that were left when copied over from older txx code\n\n    Code/Review/CMakeLists.txt\n        ENH: CMakeLists.txt file for the classes that are in the review process.\n\n    Code/Review/README.txt\n        STYLE: Notice regarding the purpose of this directory.\n\n    Code/Review/itkThresholdMaximumConnectedComponentsImageFilter\n        BUG: must use itkGetStaticConstMacro to access ImageDimension.\n        COMP: \"typename\" keywords missing.\n\n    Code/Review/itkThresholdMaximumConnectedComponentsImageFilter\n        COMP: \"typename\" keywords missing.\n\n    Code/SpatialObject/itkBlobSpatialObject\n        COMP: Warnings\n\n    Code/SpatialObject/itkLandmarkSpatialObject\n        COMP: Warnings\n\n    Code/SpatialObject/itkMetaMeshConverter\n        BUG: Replaced SetElement() by InsertElement() so the array is allocated when using StaticMeshTrait\n        BUG: the ID was not set when writing the mesh\n\n    Code/SpatialObject/itkPolygonGroupOrientation\n        STYLE: doxygen cleanups\n\n    Code/SpatialObject/itkPolygonGroupSpatialObject\n        STYLE: Some style cleanup\n\n    Code/SpatialObject/itkPolygonSpatialObject\n        STYLE: Some style cleanup\n\n    Code/SpatialObject/itkSceneSpatialObject\n        STYLE: Improved comments\n\n    Code/SpatialObject/itkSceneSpatialObject\n        STYLE: Improved comments\n\n    Code/SpatialObject/itkSpatialObject\n        STYLE: Make TreeNode getters and setters use itk[Get|Set]ObjectMacro. Also affects compilation of wrappers, so it is a COMP issue too.\n\n    Code/SpatialObject/itkSpatialObject\n        COMP: Warnings\n\n    Code/SpatialObject/itkSpatialObjectTreeNode\n        ENH: Added private (unimplemented) copy constructor and = operator (reported by Zach Pincus)\n\n    Code/SpatialObject/itkSurfaceSpatialObject\n        COMP: Warnings\n\n    Code/SpatialObject/itkTubeSpatialObject\n        STYLE: Better documentation\n\n    Code/SpatialObject/itkTubeSpatialObject\n        COMP: Warnings\n\n    Documentation/Doxygen/DoxygenFooter.html\n        BUG: The link to Doxygen Home page was broken. Bad html extension.\n\n    Examples/Data/BayesianClassifierInitializerMemberships.mhd\n        ENH: new example input data.\n\n    Examples/Data/BayesianClassifierInitializerMemberships.raw\n        ENH: new example input data.\n\n    Examples/DataRepresentation/Image/CMakeLists.txt\n        COMP: removed tests from Borland.\n\n    Examples/Filtering/CMakeLists.txt\n        COMP: Borland LME linker.\n        COMP: Avoide borland LME1518 error.\n        ENH: Test and Example for the DiffusionTensor3DReconstructionImageFilter, TensorFractionalAnisotropyImageFilter, TensorRelativeAnisotropyImageFilter\n        COMP: removed tests to avoid Borland linker errors.\n\n    Examples/Filtering/DiffusionTensor3DReconstructionImageFilter\n        COMP: Unused var warnings\n\n    Examples/Filtering/DigitallyReconstructedRadiograph1\n        STYLE: Improving the coding style of the example.\n        ENH: Replacing old style #define for PI with a const double computed at run time.\n\n    Examples/Filtering/FilteringExamples\n        COMP: removed tests to avoid Borland linker errors.\n\n    Examples/Filtering/FilteringExamples5\n        ENH: Test and Example for the DiffusionTensor3DReconstructionImageFilter, TensorFractionalAnisotropyImageFilter, TensorRelativeAnisotropyImageFilter\n\n    Examples/Filtering/FilteringExamples8\n        COMP: removed tests to avoid Borland linker errors.\n\n    Examples/Filtering/ResampleImageFilter9\n        BUG: default pixel should be of type PixelType.\n        COMP: set threads to 1 to see if test passes on Borland.\n\n    Examples/Filtering/SecondDerivativeRecursiveGaussianImageFilter\n        STYLE: Shortening the error Usage line, so it fits the margins in the Software Guide.\n\n    Examples/IO/CMakeLists.txt\n\n    Examples/IO/DicomImageReadPrintTags\n        ENH: Provide an helper function around the MetaDataDictionary. Make it more user oriented.\n\n    Examples/IO/DicomSeriesReadImageWrite\n        ENH: signed short is more general for medical images.\n\n    Examples/IO/DicomSeriesReadImageWrite2\n        ENH: Rename AddRestriction into AddSeriesRestriction\n\n    Examples/IO/ImageReadExtractFilterInsertWrite\n\n    Examples/IO/ImageReadWrite\n        ENH: signed short is more general for medical images.\n\n    Examples/Iterators/CMakeLists.txt\n        COMP: Borland linker errors.\n        COMP: removed tests to avoid Borland linker errors.\n\n    Examples/Registration/CMakeLists.txt\n        COMP: Borland cannot link.\n\n    Examples/Registration/DeformableRegistration3\n        STYLE: Adding Hypenation for index entries. Software Guide.\n\n    Examples/Registration/ImageRegistration8\n        STYLE: Adding hypenations to index entries. Software Guide.\n\n    Examples/Registration/ModelToImageRegistration1\n        STYLE: latex typesetting issues\n\n    Examples/Registration/MultiResImageRegistration1\n        BUG: The Example require at least three arguments, so argc must be >= 4.\n\n    Examples/Registration/MultiResImageRegistration2\n        STYLE: Latex documentation fixes\n\n    Examples/SpatialObjects/SpatialObjectToImageStatisticsCalculator\n        STYLE: Adding hypenation for index entries. Software Guide.\n\n    Examples/Statistics/BayesianClassifier\n        COMP: Move traits around for the sun compilers\n\n    Examples/Statistics/BayesianClassifierInitializer\n        ENH: Examples and tests for the itk::BayesianClassifierInitializationImageFilter and  itk::BayesianClassifierImageFilter\n\n    Examples/Statistics/CMakeLists.txt\n        COMP: Avoid Borland LME1518 linker errors.\n        COMP: avoid borland linker errors.\n        BUG: tests should never depend upon another test output.\n\n    Examples/Statistics/ImageEntropy1\n        COMP:  LaTeX formatting was causing a compiler warning.  Table new lines need to be represented with \\cr instead of \\\n\n    Examples/Statistics/ImageHistogram1\n        STYLE: Adding hypenation for index entries. Software Guide.\n\n    Examples/Statistics/ImageHistogram2\n        STYLE: Adding hypenation to index entries.  Software Guide.\n\n    Examples/Statistics/ScalarImageKmeansClassifier\n        COMP: Missing semicolon.\n\n    Examples/Statistics/ScalarImageMarkovRandomField1\n        STYLE: Reformatting long lines of code that don't fit in the Software Guide margins.\n\n    Examples/Statistics/StatisticsExamplesTests4\n        ENH: Examples and tests for the itk::BayesianClassifierInitializationImageFilter and  itk::BayesianClassifierImageFilter\n\n    Testing/Code/CMakeLists.txt\n\n    Testing/Code/Algorithms/CMakeLists.txt\n\n    Testing/Code/Algorithms/itkAlgorithmsPrintTest3\n        COMP: too much for the borland compiler to handle.\n\n    Testing/Code/Algorithms/itkAlgorithmsTests4\n\n    Testing/Code/Algorithms/Attic/itkBayesianClassifierImageFilterTest\n\n    Testing/Code/Algorithms/itkGradientDifferenceImageToImageMetricTest\n        ENH: Better range for metrix overlap testing.\n\n    Testing/Code/BasicFilters/CMakeLists.txt\n        ENH: new test\n        ENH: new tests contributed by Gaetan Lehmann via the Insight Journal.\n        ENH: added test for itkMatrixIndexSelectionImageFilter\n        BUG: Tests should not rely on other test output.\n        ENH: added optional difference image.\n        ENH: new regression test.\n        ENH: new regression test.\n\n    Testing/Code/BasicFilters/itkAbsImageFilterAndAdaptorTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkAbsoluteValueDifferenceImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkAccumulateImageFilterTest\n        ENH: better coverage.\n\n    Testing/Code/BasicFilters/itkAcosImageFilterAndAdaptorTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkAdaptImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkAddImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkAndImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkAsinImageFilterAndAdaptorTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkAtanImageFilterAndAdaptorTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkBasicFiltersHeaderTest\n        ENH: Added missing classes.\n\n    Testing/Code/BasicFilters/itkBasicFiltersPrintTest\n        ENH: remove redundant dim parameter from itkBloxBoundaryProfileImageToBloxCoreAtomImageFilter\n\n    Testing/Code/BasicFilters/itkBasicFiltersTests2\n        ENH: new test\n\n    Testing/Code/BasicFilters/itkBasicFiltersTests4\n        ENH: new tests contributed by Gaetan Lehmann via the Insight Journal.\n        ENH: new test.\n        ENH: new regression test.\n        ENH: new regression test.\n\n    Testing/Code/BasicFilters/itkBinaryDilateImageFilterTest2\n        ENH: better coverage.\n\n    Testing/Code/BasicFilters/itkBinaryMagnitudeImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkBinaryThresholdImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkBloxBoundaryProfileImageToBloxCoreAtomImageFilterTest\n        ENH: remove redundant dim parameter from itkBloxBoundaryProfileImageToBloxCoreAtomImageFilter\n\n    Testing/Code/BasicFilters/itkChangeLabelImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkClosingByReconstructionImageFilterTest\n        ENH: new regression tests.\n        BUG: StructuringElement was uninitialized.\n\n    Testing/Code/BasicFilters/itkCompose2DCovariantVectorImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkCompose3DCovariantVectorImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkComposeRGBImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkConstrainedValueDifferenceImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkCosImageFilterAndAdaptorTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkDiffusionTensor3DReconstructionImageFilterTest\n        STYLE: missing copyright.\n        BUG: The filter normalizes the gradient directions when they are supplied now, this caused a slight precisoin issue. Although the gradient directions supplied with the test are almost of unit norm, the slight difference from 1 caused the failiure.\n\n    Testing/Code/BasicFilters/itkDivideImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkEdgePotentialImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkExpImageFilterAndAdaptorTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkExpNegativeImageFilterAndAdaptorTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkGetAverageSliceImageFilterTest\n        ENH: new regression test.\n\n    Testing/Code/BasicFilters/itkGradientToMagnitudeImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkGrayscaleFillholeImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkIntensityWindowingImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkInvertIntensityImageFilterTest\n        ENH: new tests contributed by Gaetan Lehmann via the Insight Journal.\n\n    Testing/Code/BasicFilters/itkIterativeInverseDeformationFieldImageFilterTest\n        BUG: did not exit with failure if exception occurred.\n\n    Testing/Code/BasicFilters/itkJoinImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkJoinSeriesImageFilterTest\n        BUG: tests should not depend on the text of the exception message.\n\n    Testing/Code/BasicFilters/itkLog10ImageFilterAndAdaptorTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkLogImageFilterAndAdaptorTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkMaskConnectedComponentImageFilterTest\n        BUG: type.\n\n    Testing/Code/BasicFilters/itkMaskImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkMaskNegatedImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkMaskNeighborhoodOperatorImageFilterTest\n        COMP: warnings.\n\n    Testing/Code/BasicFilters/itkMatrixIndexSelectionImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkMaximumImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkMinimumImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkModulusImageFilterTest\n        ENH: new tests contributed by Gaetan Lehmann via the Insight Journal.\n\n    Testing/Code/BasicFilters/itkMorphologicalGradientImageFilterTest\n        STYLE: missing copyright.\n\n    Testing/Code/BasicFilters/itkMultiplyImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkNaryAddImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkNaryMaximumImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkNotImageFilterTest\n        ENH: new test.\n\n    Testing/Code/BasicFilters/itkOpeningByReconstructionImageFilterTest\n        ENH: Added SimpleFilterWatcher.\n        ENH: added optional difference image.\n        ENH: new regression test.\n\n    Testing/Code/BasicFilters/itkOrImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkPushPopTileImageFilterTest\n        ENH: new test\n\n    Testing/Code/BasicFilters/itkRGBToLuminanceImageFilterAndAdaptorTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkRecursiveGaussianImageFiltersOnTensorsTest\n        STYLE: missing copyright.\n\n    Testing/Code/BasicFilters/itkRegionOfInterestImageFilterTest\n        ENH: Added filter watcher. Now uses OrientedImage.\n\n    Testing/Code/BasicFilters/itkRescaleIntensityImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkScalarConnectedComponentImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkSigmoidImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkSinImageFilterAndAdaptorTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkSqrtImageFilterAndAdaptorTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkSquareImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkSquaredDifferenceImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkSubtractImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkSymmetricEigenAnalysisImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkTanImageFilterAndAdaptorTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkTensorFractionalAnisotropyImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkTensorRelativeAnisotropyImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkTernaryMagnitudeImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkTernaryMagnitudeSquaredImageFilterTest\n        ENH: new test.\n\n    Testing/Code/BasicFilters/itkThresholdLabelerImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkTileImageFilterTest\n        ENH: now uses OrientedImage.\n\n    Testing/Code/BasicFilters/itkVectorConnectedComponentImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkVectorRescaleIntensityImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkVotingBinaryIterativeHoleFillingImageFilterTest\n        ENH: PrintSelf coverage.\n\n    Testing/Code/BasicFilters/itkWeightedAddImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/BasicFilters/itkXorImageFilterTest\n        ENH: Added operator== and operator!=.\n\n    Testing/Code/Common/CMakeLists.txt\n        BUG: 2769. SetParameters() are missing invocation of Modified().\n\n    Testing/Code/Common/itkCommonTests2\n        BUG: 2769. SetParameters() are missing invocation of Modified().\n\n    Testing/Code/Common/itkCovariantVectorGeometryTest\n        COMP: must use namespace on funciton call.\n\n    Testing/Code/Common/itkEuler2DTransformTest\n\n    Testing/Code/Common/itkMeshSourceGraftOutputTest\n        ENH: added a test for graft output method in mesh source\n\n    Testing/Code/Common/itkRealTimeClockTest\n        ENH: rename GetTimestamp into GetTimeStamp\n\n    Testing/Code/Common/itkTransformsSetParametersTest\n        COMP: Remove warning\n        BUG: 2769. SetParameters() are missing invocation of Modified().\n\n    Testing/Code/Common/itkVectorImageTest\n        ENH: Make DefaultConvertPixelTraits a trait of the image to make IO support of VectorImage consistent. Forward declare it so it doesn't increase parsing time.\n\n    Testing/Code/Common/itkVersorTest\n\n    Testing/Code/IO/CMakeLists.txt\n\n    Testing/Code/IO/itkBMPImageIOTest\n        ENH: better exception reporting.\n\n    Testing/Code/IO/itkGDCMSeriesReadImageWrite\n        ENH: Add more example on how to use restriction operation\n\n    Testing/Code/IO/itkIOTests\n\n    Testing/Code/IO/itkMeshSpatialObjectIOTest\n        ENH: Now testing the ID of the MeshSpatialObject\n\n    Testing/Code/IO/itkRawImageIOTest5\n        ENH: Adding setup code for the RawImageIO object.\n\n    Testing/Code/Numerics/NeuralNetworks/CMakeLists.txt\n        COMP: avoid Borland linker errors.\n\n    Testing/Code/Numerics/NeuralNetworks/itkNeuralNetworkTests\n        COMP: avoid Borland linker errors.\n\n    Testing/Code/Numerics/NeuralNetworks/itkNeuralNetworkTests3\n        COMP: avoid Borland linker errors.\n\n    Testing/Code/Review/CMakeLists.txt\n        ENH: Adding a second test for the itkThresholdMaximumConnectedComponentsImageFilter.\n        ENH: Adding returns FAILURE in the catch blocks of the tries.\n\n    Testing/Code/Review/README.txt\n        ENH: Notice describing the purpose of this directory.\n\n    Testing/Code/Review/itkReviewHeaderTest\n        ENH: Support files for testing the classes that are under the review process.\n\n    Testing/Code/Review/itkReviewPrintTest\n        ENH: Support files for testing the classes that are under the review process.\n\n    Testing/Code/Review/itkReviewTests\n        COMP: Fixing the connections for the test driver.\n\n    Testing/Code/Review/itkThresholdMaximumConnectedComponentsImageFilterTest\n        ENH: Fixing the configuration of the test for using the input and baseline images.\n        COMP: Fixing the connections for the test driver.\n\n    Testing/Data/Baseline/BasicFilters/ClosingByReconstructionImageFilterTest.png\n        BUG: StructuringElement was uninitialized.\n\n    Testing/Data/Baseline/BasicFilters/ClosingByReconstructionImageFilterTest2.png\n        ENH: new regression test.\n\n    Testing/Data/Baseline/BasicFilters/InvertIntensityImageFilterTest.png\n        ENH: new regression test.\n\n    Testing/Data/Baseline/BasicFilters/MaskNeighborhoodOperatorImageFilterTest.png\n        ENH: new regression test.\n\n    Testing/Data/Baseline/BasicFilters/MatrixIndexSelectionImageFilterTest.png\n        ENH: added\n\n    Testing/Data/Baseline/BasicFilters/ModulusImageFilterTest.png\n        ENH: new regression test.\n\n    Testing/Data/Baseline/BasicFilters/MorphologicalGradientImageFilterTest.png\n        ENH: new regression test.\n\n    Testing/Data/Baseline/BasicFilters/OpeningByReconstructionImageFilterTest.png\n        BUG: StructuringElement was uninitialized.\n\n    Testing/Data/Baseline/BasicFilters/OpeningByReconstructionImageFilterTest2.png\n        ENH: new regression test.\n\n    Testing/Data/Baseline/BasicFilters/PushPopTileImageFilterTest.png\n\n    Testing/Data/Baseline/BasicFilters/VectorConnectedComponentImageFilterTest.png\n        ENH: new regression test.\n\n    Testing/Data/Baseline/Filtering/FACorpusCallosum.mhd\n        ENH: Fractional Anisotropy baseline for DiffusionTensor3DReconstructionImageFilterTest\n\n    Testing/Data/Baseline/Filtering/FACorpusCallosum.raw\n        ENH: Fractional Anisotropy baseline for DiffusionTensor3DReconstructionImageFilterTest\n\n    Testing/Data/Baseline/Filtering/RACorpusCallosum.mhd\n        ENH: Relative Anisotropy baseline for DiffusionTensor3DReconstructionImageFilterTest\n\n    Testing/Data/Baseline/Filtering/RACorpusCallosum.raw\n        ENH: Relative Anisotropy baseline for DiffusionTensor3DReconstructionImageFilterTest\n\n    Testing/Data/Baseline/Filtering/ResampleImageFilter9Test.1.png\n        ENH: baseline for Borland.\n\n    Testing/Data/Baseline/Filtering/ResampleImageFilter9Test.png\n    private/insight-developers/2006-February/007646.html\n\n    Testing/Data/Baseline/Registration/DeformableRegistration3Test.5.png\n        ENH: baseline for solaris, darwin and sgi.\n\n    Testing/Data/Baseline/Registration/DeformableRegistration5Test.6.png\n        ENH: baseline for ICC8.0\n\n    Testing/Data/Baseline/Review/itkThresholdMaximumConnectedComponentsImageFilterTest1.png\n        ENH: Baseline image for the itkThresholdMaximumConnectedComponentsImageFilterTest1.\n\n    Testing/Data/Baseline/Review/itkThresholdMaximumConnectedComponentsImageFilterTest2.png\n        ENH: Baseline for the itkThresholdMaximumConnectedComponentsImageFilterTest2.\n\n    Testing/Data/Baseline/Statistics/BayesianClassifierInitializerClass2Output.png\n\n    Testing/Data/Baseline/Statistics/BayesianClassifierLabelMap.png\n\n    Testing/Data/Input/012345.002.050.README\n        ENH: Fix comment\n\n    Testing/Data/Input/CellsFluorescence1.png\n        ENH: Input test image for the threshold maximum connected components filter test.\n\n    Testing/Data/Input/CellsFluorescence2.png\n        ENH: Input image for the ThresholdMaximumConnectedComponentsImageFilterTest2.\n\n    Testing/Data/Input/DwiCorpusCallosum.nhdr\n    namic/DTI/Data/dwi.nhdr ftp://public.kitware.com/pub/namic/DTI/Data/dwi.img.gz (gunzip this)\n\n    Testing/Data/Input/DwiCorpusCallosum.raw\n    namic/DTI/Data/dwi.nhdr ftp://public.kitware.com/pub/namic/DTI/Data/dwi.img.gz (gunzip this)\n\n    Testing/Data/Input/TensorsCorpusCallosum.mhd\n\n    Testing/Data/Input/TensorsCorpusCallosum.raw\n\n    Testing/Data/Input/chondt.png\n        ENH: new input data.\n\n    Testing/Data/Input/closerec1.jpg\n        ENH: new input data.\n\n    Utilities/CMakeLists.txt\n        ENH: enable kwsys command line processing.\n        ENH: Properly handle library prefix. Also backport from openjpeg CVS to support mingw\n\n    Utilities/Dart/CMakeLists.txt\n        ENH: Added a script to generate a Wiki-compatible file to show new files between two dates.\n\n    Utilities/Dart/NewSince.csh.in\n        ENH: Add the range of dates covered by the release.\n        ENH: Added a script to generate a Wiki-compatible file to show new files between two dates.\n\n    Utilities/Dart/NewSince.gawk\n        ENH: Added a script to generate a Wiki-compatible file to show new files between two dates.\n\n    Utilities/Doxygen/cvsVersionFilter.\n\n    Utilities/Doxygen/doxygen.config.in\n        BUG: Address bug 2733.. For some reason, setting UML_LOOK to ON fails to generate full class inheritence diagrams. It only shows the first level of inheritence\n        ENH: Updating the configuration from Doxygen 1.1.4 to Doxygen 1.4.3\n\n    Utilities/MetaIO/metaCommand\n        ENH: Added SetOptionComplete() function\n\n    Utilities/MetaIO/metaCommand\n        ENH: Added SetOptionComplete() function\n\n    Utilities/MetaIO/metaEllipse\n        ENH: Bring AddRestriction from the gdcm level to the itkGDCM level. Update example to show usage, add more doc.\n\n    Utilities/MetaIO/metaImage\n        ENH: Bring AddRestriction from the gdcm level to the itkGDCM level. Update example to show usage, add more doc.\n\n    Utilities/MetaIO/metaMe\n        COMP: warnings.\n\n    Utilities/MetaIO/metaMesh\n        BUG: Now reading PointData and CellData correctly\n\n    Utilities/MetaIO/metaObject\n        BUG: MetaIO now supports 64bit int on platforms having 64bit ints.  Thanks to help from Robert Atwood at imperial.ac.uk\n\n    Utilities/MetaIO/metaTypes\n        BUG: MetaIO now supports 64bit int on platforms having 64bit ints.  Thanks to help from Robert Atwood at imperial.ac.uk\n\n    Utilities/MetaIO/metaUtils\n        BUG: More instances of unsigned __int64 conversion problems on vs6\n        BUG: MS-VS6 does not support writing __int64 using ostream <<\n\n    Utilities/MetaIO/metaUtils\n        BUG: MetaIO now supports 64bit int on platforms having 64bit ints.  Thanks to help from Robert Atwood at imperial.ac.uk\n\n    Utilities/expat/expatConfig.h.in\n\n    Utilities/expat/xmlparse\n\n    Utilities/expat/xmlrole\n\n    Utilities/expat/xmltok\n\n    Utilities/expat/xmltok_impl\n\n    Utilities/gdcm/AUTHORS\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/CMakeLists.txt\n        COMP: Fix compilation on win32 with static on\n        STYLE: Typo\n\n    Utilities/gdcm/ChangeLog\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/README\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/gdcmConfigure.h.in\n        COMP: Fix compilation on win32 with static on\n\n    Utilities/gdcm/CMake/CTestCustom.ctest.in\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/CMake/FindDicom3Tools.cmake\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/CMake/FindRsync.cmake\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/CMake/gdcmTestFUNCTION\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/ACUSON.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/CMakeLists.txt\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/DicomDir.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/DictGroupName.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/ELSCINT.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/GE-EchoPAC.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/GEMS-Advance.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/GEMS-Advantx.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/GEMS-CR.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/GEMS-DLX.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/GEMS-Genie.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/GEMS-HiSpeed.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/GEMS-Infinia.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/GEMS.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/HITACHI-MR-pronto.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/NIH.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/PHILIPS-EasyVision.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/PHILIPS-Intera.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/Papyrus.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/ParseDict.py\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/README\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/SIEMENS-syngo.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/SIEMENS.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/SPI.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/dicomTS.d\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/Dicts/dicomV3.d\n        ENH: changed VR of some tags from US to SS to permit signed shorts.\n\n    Utilities/gdcm/Dicts/gdcm.dic.in\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/CMakeLists.txt\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/gdcm\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmArgMgr\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmArgMgr\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmBase\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmBase\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmBinEntry\n        COMP: Fix compilation on SunOS\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/gdcmBinEntry\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmCommon\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmContentEntry\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmContentEntry\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDebug\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDebug\n        COMP: Fix compilation on SunOS\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/gdcmDefaultDicts.cxx.in\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDicomDir\n        COMP: Fix compilation on SunOS\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/gdcmDicomDir\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDicomDirElement\n        COMP: Fix compilation on SunOS\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/gdcmDicomDirElement\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDicomDirImage\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDicomDirImage\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDicomDirMeta\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDicomDirMeta\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDicomDirObject\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDicomDirObject\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDicomDirPatient\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDicomDirPatient\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDicomDirSerie\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDicomDirSerie\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDicomDirStudy\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDicomDirStudy\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDicomDirVisit\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDicomDirVisit\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDict\n        COMP: Fix compilation on SunOS\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/gdcmDict\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDictEntry\n        COMP: Fix compilation on SunOS\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/gdcmDictEntry\n        COMP: Fix warning\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/gdcmDictGroupName\n        COMP: Fix compilation on SunOS\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/gdcmDictGroupName\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDictSet\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDictSet\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDirList\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDirList\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDocEntry\n        COMP: Fix compilation on SunOS\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/gdcmDocEntry\n        COMP: Fix warning\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/gdcmDocEntryArchive\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDocEntryArchive\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDocEntrySet\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDocEntrySet\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmDocument\n        COMP: Fix compilation on SunOS\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/gdcmDocument\n        ENH: Backport gdcm1.2 to ITK-gdcm\n        COMP: Please a vendor specific compiler to work around deprecated method and virtual overload\n\n    Utilities/gdcm/src/gdcmElementSet\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmElementSet\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmException\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmException\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmFile\n        COMP: Fix compilation on SunOS\n        ENH: This should fix the LEGACY code\n\n    Utilities/gdcm/src/gdcmFile\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmFileHelper\n        ENH: Properly set some default value: IOP (default to 100010), and Patient Orientation which is redundant...\n        BUG: removed old secondary capture logic.\n\n        ENH: Backport gdcm1.2 to ITK-gdcm\n        BUG: should not remove Frame Of Reference UID.\n\n    Utilities/gdcm/src/gdcmFileHelper\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmGlobal\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmGlobal\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmJPEGFragment\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmJPEGFragment\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmJPEGFragmentsInfo\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmJPEGFragmentsInfo\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmJpeg\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmJpeg12\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmJpeg16\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmJpeg2000\n        ENH: In ITK openjpeg is outside\n        COMP: Fix warning on bcc551\n\n    Utilities/gdcm/src/gdcmJpeg8\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmJpegLS\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmMpeg\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmOrientation\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmOrientation\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmPixelReadConvert\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmPixelReadConvert\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmPixelWriteConvert\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmPixelWriteConvert\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmRLEFrame\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmRLEFrame\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmRLEFramesInfo\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmRLEFramesInfo\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmSQItem\n        COMP: Fix compilation on SunOS\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/gdcmSQItem\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmSeqEntry\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmSeqEntry\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmSerieHelper\n        ENH: Redo implementation to use Functor instead of Function, because of brain damage VS6. See Q240871\n        ENH: Backport gdcm1.2 to ITK-gdcm\n        ENH: Factor code into one single function\n        BUG: Clear was incomplete and was not deleting the coherent file list. Thanks to Patrick Cheng for bug report and patch\n        BUG: Could not reuse gdcmSerieHelper, now can call Clear before hand\n\n    Utilities/gdcm/src/gdcmSerieHelper\n        ENH: Redo implementation to use Functor instead of Function, because of brain damage VS6. See Q240871\n        COMP: Fix compilation on bcc\n        ENH: Provide backward compatibility\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/gdcmTS\n        COMP: Fix compilation on SunOS\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/gdcmTS\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmUtil\n        COMP: Fix compilation on SunOS\n        BUG: wrong value for FMIV.\n        COMP: Get Mac Address on SGI Irix\n\n    Utilities/gdcm/src/gdcmUtil\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmVR\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmVR\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmValEntry\n        COMP: Fix compilation on SunOS\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/gdcmValEntry\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/gdcmValidator\n        COMP: Fix compilation on SunOS\n        ENH: In order to sync with official CVS, remove as much ITKism as possible\n        ENH: Update gdcm version to 1.2\n\n    Utilities/gdcm/src/gdcmValidator\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/jdatadst\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/gdcm/src/jdatas\n        ENH: Backport gdcm1.2 to ITK-gdcm\n\n    Utilities/kwsys/CMakeLists.txt\n        BUG: Fix problem with  in the path\n        BUG: Fix DynamicLoader implementation on MacOSX (using old API)\n        COMP: Fix cygwin build\n        ENH: Carefully turn testing of DynamicLib on\n        ENH: Added kwsys::String class to shorten debugging symbols and error messages involving std::string.\n\n    Utilities/kwsys/CommandLineArguments\n        ENH: Add a method to remove remaining arguments\n\n    Utilities/kwsys/CommandLineArguments.hxx.in\n        ENH: Add a method to remove remaining arguments\n\n    Utilities/kwsys/Directory\n        STYLE: Minor style\n        COMP: Some STL implementation do not provide clear on std::string\n        ENH: Redo implementation of itkDirectory to use kwsys (avoid duplicating code).\n\n    Utilities/kwsys/Directory.hxx.in\n        BUG: Need to reset internal structure in case of multiple calls to Load\n\n    Utilities/kwsys/DynamicLoader\n        BUG: Fix DynamicLoader implementation on MacOSX (using old API)\n        ENH: Hopefully have the DynamicLoader to the proper thing.\n        BUG: Including file within a namespace{} is dangerous(unless symbols are within an extern C). Also update documentation about special case for MacOSX\n        ENH: Adding kwsys implementation for a DynamicLoader class. Copy from itkDynamicLoader, with patch from cmDynamicLoader\n\n    Utilities/kwsys/DynamicLoader.hxx.in\n        ENH: Add documentation on the problem with system wide path for looking up dynamic libraries. STYLE: Fix trailing white spaces\n        ENH: Adding kwsys implementation for a DynamicLoader class. Copy from itkDynamicLoader, with patch from cmDynamicLoader\n\n    Utilities/kwsys/EncodeExecutable\n        ENH: add support for watcom wmake and wcl386\n\n    Utilities/kwsys/Glob\n        STYLE: Make sure to use the proper cast.\n        ENH: add support for watcom wmake and wcl386\n\n    Utilities/kwsys/Glob.hxx.in\n        COMP: Fix the exporting so that it can actually be used\n\n    Utilities/kwsys/ProcessUNIX\n        ENH: Enabled process tree killing on AIX.\n        ENH: Enabled process tree killing for FreeBSD and Sun.\n        BUG: Do not leak ps FILE when the process starts but reading the header fails.\n        BUG: When more than one command is given and one of them fails to start and the rest are killed, do not forget to reap the killed children.\n\n    Utilities/kwsys/ProcessWin32\n        COMP: Fixed warnings for Borland 5.8.\n        ENH: Improved robustness of sharing parent pipes with children.  This ensures that the parent pipe handles are inherited by the children.  If a parent pipe handle is invalid a handle to an empty pipe is given to the child to make sure all pipes are defined for the children.\n\n    Utilities/kwsys/Registry\n        STYLE: Make sure to use the proper cast.\n        ENH: add missing cmake depend hacks\n        ENH: check in new find stuff\n\n    Utilities/kwsys/Registry.hxx.in\n        STYLE: Minor style\n\n    Utilities/kwsys/RegularExpression\n        STYLE: Make sure to use the proper cast.\n\n    Utilities/kwsys/String.hxx.in\n        ENH: Added kwsys::String class to shorten debugging symbols and error messages involving std::string.\n\n    Utilities/kwsys/SystemTools\n        ENH: undo last change because it broke the dashboard\n        STYLE: Remove trailing whitespaces\n        ENH: fix std in kwsys, has to be kwsys_stl\n        ENH: fix for bug 28618, cmake.exe can not find itself\n        COMP: Fix compile problem on windows and mac\n        ENH: Move relative path to kwsys\n        ENH: add support for watcom wmake and wcl386\n        BUG: Return if the file is in any directory not just in first one\n        ENH: Add another signature to FindProgram that matches more to the one from CMake\n\n    Utilities/kwsys/SystemTools.hxx.in\n        ENH: Add documentation on the problem with system wide path for looking up dynamic libraries. STYLE: Fix trailing white spaces\n        ENH: Move relative path to kwsys\n        ENH: fix for icc\n        ENH: Add another signature to FindProgram that matches more to the one from CMake\n\n    Utilities/kwsys/kwsysPlatformCxxTests\n        ENH: add support for watcom wmake and wcl386\n\n    Utilities/kwsys/testCommandLineArguments\n        STYLE: Make sure to use the proper cast.\n\n    Utilities/kwsys/testDynamicLoader\n\n        BUG: Need a trailing slash\n        BUG: Trying to get testDynamicLoader to work on Solaris and SunOS, where current directory is not lookup when doing dlopen\n        ENH: Hopefully have the DynamicLoader to the proper thing.\n        COMP: Add missing include\n        ENH: Still more coverage of the DynamicLoader\n        ENH: Adding initial test for DynamicLoader\n\n    Utilities/kwsys/testDynload\n        COMP: Fix compilation on MacOSX (common symbols not allowed with MH_DYLIB output format)\n        ENH: remove test temporarily\n\n    Utilities/kwsys/testProcess\n        ENH: Added a way to quickly enable manual testing of grandchild killing.\n\n    Utilities/kwsys/testRegistry\n        ENH: add support for watcom wmake and wcl386\n\n    Utilities/kwsys/testSystemTools\n        STYLE: Minor style\n\n    Utilities/kwsys/testSystemTools.h.in\n        BUG: Do the proper path\n        BUG: Trying to get testDynamicLoader to work on Solaris and SunOS, where current directory is not lookup when doing dlopen\n\n    Utilities/nifti/Testing/niftilib/nifti_test\n\n    Utilities/nifti/examples/CMakeLists.txt\n\n    Utilities/nifti/examples/fsl_api_driver\n\n    Utilities/nifti/fsliolib/fslio\n\n    Utilities/nifti/fsliolib/fslio\n\n    Utilities/nifti/niftilib/nifti1_io\n        COMP: warnings.\n\n    Utilities/nifti/niftilib/nifti1_io\n\n    Utilities/nifti/utils/CMakeLists.txt\n\n    Utilities/nifti/utils/nifti_stats\n\n    Utilities/nifti/utils/nifti_tool\n\n    Utilities/nifti/utils/nifti_tool\n\n    Utilities/openjpeg/.NoDartCoverage\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/CMakeLists.txt\n        ENH: Update openjpeg to match the one in gdcm 1.2. COMP: This should fix problem introduced yesterday\n        ENH: Update openjpeg lib from CVS (Fixes lots of warnings)\n        ENH: This is a C only project\n\n    Utilities/openjpeg/README.ITK.txt\n        ENH: Add a note for ITK-OpenJPEG\n\n    Utilities/openjpeg/bio\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/bio\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/cio\n        ENH: Backport from openjpeg CVS, even more warnings fixes. Change the build system from def file to declspec\n\n    Utilities/openjpeg/cio\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/dwt\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/dwt\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/event\n        ENH: Backport from openjpeg CVS, even more warnings fixes. Change the build system from def file to declspec\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/event\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/Attic/fix\n        ENH: Update openjpeg to match the one in gdcm 1.2. COMP: This should fix problem introduced yesterday\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/fix\n        ENH: Update openjpeg to match the one in gdcm 1.2. COMP: This should fix problem introduced yesterday\n\n    Utilities/openjpeg/image\n        ENH: Backport from openjpeg CVS, even more warnings fixes. Change the build system from def file to declspec\n\n    Utilities/openjpeg/image\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/Attic/int\n        ENH: Update openjpeg to match the one in gdcm 1.2. COMP: This should fix problem introduced yesterday\n\n    Utilities/openjpeg/int\n        ENH: Update openjpeg to match the one in gdcm 1.2. COMP: This should fix problem introduced yesterday\n\n    Utilities/openjpeg/j2k\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/j2k\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/j2k_lib\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/j2k_lib\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/jp2\n        ENH: Update openjpeg lib from CVS (Fixes lots of warnings)\n\n    Utilities/openjpeg/jp2\n        ENH: Update openjpeg lib from CVS (Fixes lots of warnings)\n\n    Utilities/openjpeg/jpt\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/jpt\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/mct\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/mct\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/mqc\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/mqc\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/openjpeg\n        ENH: Backport from openjpeg CVS, even more warnings fixes. Change the build system from def file to declspec\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/Attic/openjpeg.def.in\n        ENH: Backport from openjpeg CVS, even more warnings fixes. Change the build system from def file to declspec\n\n    Utilities/openjpeg/openjpeg\n        ENH: Update openjpeg to match the one in gdcm 1.2. COMP: This should fix problem introduced yesterday\n        ENH: Backport from openjpeg CVS, even more warnings fixes. Change the build system from def file to declspec\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/opj_includes\n        ENH: Update openjpeg to match the one in gdcm 1.2. COMP: This should fix problem introduced yesterday\n\n    Utilities/openjpeg/pi\n        ENH: Update openjpeg lib from CVS (Fixes lots of warnings)\n\n    Utilities/openjpeg/pi\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/raw\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/raw\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/t1\n        ENH: Update openjpeg lib from CVS (Fixes lots of warnings)\n\n    Utilities/openjpeg/t1\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/t2\n        ENH: Backport from openjpeg CVS, even more warnings fixes. Change the build system from def file to declspec\n\n    Utilities/openjpeg/t2\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/tcd\n        ENH: Backport from openjpeg CVS, even more warnings fixes. Change the build system from def file to declspec\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/tcd\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/tgt\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/openjpeg/tgt\n        ENH: Adding a JPEG2000 implementation (OpenJPEG) from Communications and remote sensing Laboratory, Universite catholique de Louvain\n\n    Utilities/tiff/itk_tiff_mangle\n        BUG: More external symbols need to be mangled.\n        COMP: Enabling mangling\n\n    Utilities/tiff/tif_dir\n        COMP: Enabling mangling\n\n    Utilities/tiff/tif_dirread\n        COMP: Enabling mangling\n\n    Utilities/tiff/tif_dirwrite\n        COMP: Enabling mangling\n\n    Utilities/tiff/tif_swab\n        COMP: Enabling mangling\n\n    Utilities/tiff/tiff\n        COMP: force to make tiff rebuild.\n        COMP: Enabling mangling\n        COMP: Missing include to itk_tiff_mangle.h\n\n    Utilities/vxl/vcl/CMakeLists.txt\n        STYLE: Removed code with incompatible license.\n\n    Utilities/vxl/vcl/vcl_string\n        STYLE: Removed code with incompatible license.\n\n    Utilities/vxl/vcl/vcl_string\n        STYLE: Removed code with incompatible license.\n\n    Utilities/vxl/vcl/emulation/vcl_algobase\n        STYLE: Removed code with incompatible license.\n\n    Utilities/vxl/vcl/emulation/Attic/vcl_straits\n        STYLE: Removed code with incompatible license.\n\n    Utilities/vxl/vcl/emulation/Attic/vcl_straits\n        STYLE: Removed code with incompatible license.\n\n    Utilities/vxl/vcl/emulation/Attic/vcl_string\n        STYLE: Removed code with incompatible license.\n\n    Utilities/vxl/vcl/emulation/Attic/vcl_string\n        STYLE: Removed code with incompatible license.\n\n    Utilities/zlib/zlib.def\n        ENH: Fix name\n",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/GoogleTest/src/itkgoogletest/googletest/cmake/libgtest.la.in": "# libgtest.la - a libtool library file\n# Generated by libtool (GNU libtool) 2.4.6\n\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Names of this library.\nlibrary_names='libgtest.so'\n\n# Is this an already installed library?\ninstalled=yes\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=no\n\n# Files to dlopen/dlpreopen\ndlopen=''\ndlpreopen=''\n\n# Directory that this library needs to be installed in:\nlibdir='@CMAKE_INSTALL_FULL_LIBDIR@'\n",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/HDF5/src/itkhdf5/config/cmake_ext_mod/ConfigureChecks.cmake": "#\n# Copyright by The HDF Group.\n# All rights reserved.\n#\n# This file is part of HDF5.  The full HDF5 copyright notice, including\n# terms governing use, modification, and redistribution, is contained in\n# the COPYING file, which can be found at the root of the source code\n# distribution tree, or in https://support.hdfgroup.org/ftp/HDF5/releases.\n# If you do not have access to either file, you may request a copy from\n# help@hdfgroup.org.\n#\n#-----------------------------------------------------------------------------\n# Include all the necessary files for macros\n#-----------------------------------------------------------------------------\ninclude (CheckFunctionExists)\ninclude (CheckIncludeFile)\ninclude (CheckIncludeFiles)\ninclude (CheckLibraryExists)\ninclude (CheckSymbolExists)\ninclude (CheckTypeSize)\ninclude (CheckVariableExists)\ninclude (TestBigEndian)\n\n#-----------------------------------------------------------------------------\n# APPLE/Darwin setup\n#-----------------------------------------------------------------------------\nif (APPLE)\n  list (LENGTH CMAKE_OSX_ARCHITECTURES ARCH_LENGTH)\n  if (ARCH_LENGTH GREATER 1)\n    set (CMAKE_OSX_ARCHITECTURES \"\" CACHE STRING \"\" FORCE)\n    message(FATAL_ERROR \"Building Universal Binaries on OS X is NOT supported by the HDF5 project. This is\"\n    \"due to technical reasons. The best approach would be build each architecture in separate directories\"\n    \"and use the 'lipo' tool to combine them into a single executable or library. The 'CMAKE_OSX_ARCHITECTURES'\"\n    \"variable has been set to a blank value which will build the default architecture for this system.\")\n  endif ()\n  set (${HDF_PREFIX}_AC_APPLE_UNIVERSAL_BUILD 0)\nendif ()\n\n# Check for Darwin (not just Apple - we also want to catch OpenDarwin)\nif (${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n    set (${HDF_PREFIX}_HAVE_DARWIN 1)\nendif ()\n\n# Check for Solaris\nif (${CMAKE_SYSTEM_NAME} MATCHES \"SunOS\")\n    set (${HDF_PREFIX}_HAVE_SOLARIS 1)\nendif ()\n\n#-----------------------------------------------------------------------------\n# This MACRO checks IF the symbol exists in the library and IF it\n# does, it appends library to the list.\n#-----------------------------------------------------------------------------\nset (LINK_LIBS \"\")\nmacro (CHECK_LIBRARY_EXISTS_CONCAT LIBRARY SYMBOL VARIABLE)\n  CHECK_LIBRARY_EXISTS (\"${LIBRARY};${LINK_LIBS}\" ${SYMBOL} \"\" ${VARIABLE})\n  if (${VARIABLE})\n    set (LINK_LIBS ${LINK_LIBS} ${LIBRARY})\n  endif ()\nendmacro ()\n\n# ----------------------------------------------------------------------\n# WINDOWS Hard code Values\n# ----------------------------------------------------------------------\n\nset (WINDOWS)\nif (WIN32)\n  if (MINGW)\n    set (${HDF_PREFIX}_HAVE_MINGW 1)\n    set (WINDOWS 1) # MinGW tries to imitate Windows\n    set (CMAKE_REQUIRED_FLAGS \"-DWIN32_LEAN_AND_MEAN=1 -DNOGDI=1\")\n  endif ()\n  set (${HDF_PREFIX}_HAVE_WIN32_API 1)\n  set (CMAKE_REQUIRED_LIBRARIES \"ws2_32.lib;wsock32.lib\")\n  if (NOT UNIX AND NOT MINGW)\n    set (WINDOWS 1)\n    set (CMAKE_REQUIRED_FLAGS \"/DWIN32_LEAN_AND_MEAN=1 /DNOGDI=1\")\n    if (MSVC)\n      set (${HDF_PREFIX}_HAVE_VISUAL_STUDIO 1)\n    endif ()\n  endif ()\nendif ()\n\nif (WINDOWS)\n  set (${HDF_PREFIX}_HAVE_STDDEF_H 1)\n  set (${HDF_PREFIX}_HAVE_SYS_STAT_H 1)\n  set (${HDF_PREFIX}_HAVE_SYS_TYPES_H 1)\n  set (${HDF_PREFIX}_HAVE_LIBM 1)\n  set (${HDF_PREFIX}_HAVE_STRDUP 1)\n  set (${HDF_PREFIX}_HAVE_SYSTEM 1)\n  set (${HDF_PREFIX}_HAVE_LONGJMP 1)\n  if (NOT MINGW)\n    set (${HDF_PREFIX}_HAVE_GETHOSTNAME 1)\n  endif ()\n  if (NOT UNIX AND NOT CYGWIN AND NOT MINGW)\n    set (${HDF_PREFIX}_HAVE_GETCONSOLESCREENBUFFERINFO 1)\n  endif ()\n  set (${HDF_PREFIX}_HAVE_FUNCTION 1)\n  set (${HDF_PREFIX}_GETTIMEOFDAY_GIVES_TZ 1)\n  set (${HDF_PREFIX}_HAVE_TIMEZONE 1)\n  set (${HDF_PREFIX}_HAVE_GETTIMEOFDAY 1)\n  if (MINGW)\n    set (${HDF_PREFIX}_HAVE_WINSOCK2_H 1)\n  endif ()\n  set (${HDF_PREFIX}_HAVE_LIBWS2_32 1)\n  set (${HDF_PREFIX}_HAVE_LIBWSOCK32 1)\nendif ()\n\n# ----------------------------------------------------------------------\n# END of WINDOWS Hard code Values\n# ----------------------------------------------------------------------\n\nif (CYGWIN)\n  set (${HDF_PREFIX}_HAVE_LSEEK64 0)\nendif ()\n\n#-----------------------------------------------------------------------------\n#  Check for the math library \"m\"\n#-----------------------------------------------------------------------------\nif (NOT WINDOWS)\n  CHECK_LIBRARY_EXISTS_CONCAT (\"m\" ceil     ${HDF_PREFIX}_HAVE_LIBM)\n  CHECK_LIBRARY_EXISTS_CONCAT (\"dl\" dlopen     ${HDF_PREFIX}_HAVE_LIBDL)\n  CHECK_LIBRARY_EXISTS_CONCAT (\"ws2_32\" WSAStartup  ${HDF_PREFIX}_HAVE_LIBWS2_32)\n  CHECK_LIBRARY_EXISTS_CONCAT (\"wsock32\" gethostbyname ${HDF_PREFIX}_HAVE_LIBWSOCK32)\nendif ()\n\n# UCB (BSD) compatibility library\nCHECK_LIBRARY_EXISTS_CONCAT (\"ucb\"    gethostname  ${HDF_PREFIX}_HAVE_LIBUCB)\n\n# For other tests to use the same libraries\nset (CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} ${LINK_LIBS})\n\nset (USE_INCLUDES \"\")\nif (WINDOWS)\n  set (USE_INCLUDES ${USE_INCLUDES} \"windows.h\")\nendif ()\n\nif (NOT WINDOWS)\n  TEST_BIG_ENDIAN (${HDF_PREFIX}_WORDS_BIGENDIAN)\nendif ()\n\n# For other specific tests, use this MACRO.\nmacro (HDF_FUNCTION_TEST OTHER_TEST)\n  if (NOT DEFINED ${HDF_PREFIX}_${OTHER_TEST})\n    set (MACRO_CHECK_FUNCTION_DEFINITIONS \"-D${OTHER_TEST} ${CMAKE_REQUIRED_FLAGS}\")\n\n    foreach (def\n        HAVE_SYS_TIME_H\n        HAVE_UNISTD_H\n        HAVE_SYS_TYPES_H\n        HAVE_SYS_SOCKET_H\n    )\n      if (\"${${HDF_PREFIX}_${def}}\")\n        set (MACRO_CHECK_FUNCTION_DEFINITIONS \"${MACRO_CHECK_FUNCTION_DEFINITIONS} -D${def}\")\n      endif ()\n    endforeach ()\n\n    if (LARGEFILE)\n      set (MACRO_CHECK_FUNCTION_DEFINITIONS\n          \"${MACRO_CHECK_FUNCTION_DEFINITIONS} -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE -D_LARGEFILE_SOURCE\"\n      )\n    endif ()\n\n    #message (STATUS \"Performing ${OTHER_TEST}\")\n    TRY_COMPILE (${OTHER_TEST}\n        ${CMAKE_BINARY_DIR}\n        ${HDF_RESOURCES_EXT_DIR}/HDFTests.c\n        COMPILE_DEFINITIONS \"${MACRO_CHECK_FUNCTION_DEFINITIONS}\"\n        LINK_LIBRARIES \"${CMAKE_REQUIRED_LIBRARIES}\"\n        OUTPUT_VARIABLE OUTPUT\n    )\n    if (${OTHER_TEST})\n      set (${HDF_PREFIX}_${OTHER_TEST} 1 CACHE INTERNAL \"Other test ${FUNCTION}\")\n      message (STATUS \"Performing Other Test ${OTHER_TEST} - Success\")\n    else ()\n      message (STATUS \"Performing Other Test ${OTHER_TEST} - Failed\")\n      set (${HDF_PREFIX}_${OTHER_TEST} \"\" CACHE INTERNAL \"Other test ${FUNCTION}\")\n      file (APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log\n          \"Performing Other Test ${OTHER_TEST} failed with the following output:\\n\"\n          \"${OUTPUT}\\n\"\n      )\n    endif ()\n  endif ()\nendmacro ()\n\n#-----------------------------------------------------------------------------\n# Check for these functions before the time headers are checked\n#-----------------------------------------------------------------------------\nHDF_FUNCTION_TEST (STDC_HEADERS)\n\n#-----------------------------------------------------------------------------\n# Check IF header file exists and add it to the list.\n#-----------------------------------------------------------------------------\nmacro (CHECK_INCLUDE_FILE_CONCAT FILE VARIABLE)\n  CHECK_INCLUDE_FILES (\"${USE_INCLUDES};${FILE}\" ${VARIABLE})\n  if (${VARIABLE})\n    set (USE_INCLUDES ${USE_INCLUDES} ${FILE})\n  endif ()\nendmacro ()\n\n#-----------------------------------------------------------------------------\n#  Check for the existence of certain header files\n#-----------------------------------------------------------------------------\nCHECK_INCLUDE_FILE_CONCAT (\"sys/file.h\"      ${HDF_PREFIX}_HAVE_SYS_FILE_H)\nCHECK_INCLUDE_FILE_CONCAT (\"sys/ioctl.h\"     ${HDF_PREFIX}_HAVE_SYS_IOCTL_H)\nCHECK_INCLUDE_FILE_CONCAT (\"sys/resource.h\"  ${HDF_PREFIX}_HAVE_SYS_RESOURCE_H)\nCHECK_INCLUDE_FILE_CONCAT (\"sys/socket.h\"    ${HDF_PREFIX}_HAVE_SYS_SOCKET_H)\nCHECK_INCLUDE_FILE_CONCAT (\"sys/stat.h\"      ${HDF_PREFIX}_HAVE_SYS_STAT_H)\nCHECK_INCLUDE_FILE_CONCAT (\"sys/time.h\"      ${HDF_PREFIX}_HAVE_SYS_TIME_H)\nCHECK_INCLUDE_FILE_CONCAT (\"sys/types.h\"     ${HDF_PREFIX}_HAVE_SYS_TYPES_H)\nCHECK_INCLUDE_FILE_CONCAT (\"features.h\"      ${HDF_PREFIX}_HAVE_FEATURES_H)\nCHECK_INCLUDE_FILE_CONCAT (\"dirent.h\"        ${HDF_PREFIX}_HAVE_DIRENT_H)\nCHECK_INCLUDE_FILE_CONCAT (\"setjmp.h\"        ${HDF_PREFIX}_HAVE_SETJMP_H)\nCHECK_INCLUDE_FILE_CONCAT (\"stddef.h\"        ${HDF_PREFIX}_HAVE_STDDEF_H)\nCHECK_INCLUDE_FILE_CONCAT (\"stdint.h\"        ${HDF_PREFIX}_HAVE_STDINT_H)\nCHECK_INCLUDE_FILE_CONCAT (\"unistd.h\"        ${HDF_PREFIX}_HAVE_UNISTD_H)\n\n# Darwin\nCHECK_INCLUDE_FILE_CONCAT (\"mach/mach_time.h\" ${HDF_PREFIX}_HAVE_MACH_MACH_TIME_H)\n\n# Windows\nCHECK_INCLUDE_FILE_CONCAT (\"io.h\"            ${HDF_PREFIX}_HAVE_IO_H)\nif (NOT CYGWIN)\n  CHECK_INCLUDE_FILE_CONCAT (\"winsock2.h\"      ${HDF_PREFIX}_HAVE_WINSOCK2_H)\nendif ()\nCHECK_INCLUDE_FILE_CONCAT (\"sys/timeb.h\"     ${HDF_PREFIX}_HAVE_SYS_TIMEB_H)\n\nif (CMAKE_SYSTEM_NAME MATCHES \"OSF\")\n  CHECK_INCLUDE_FILE_CONCAT (\"sys/sysinfo.h\" ${HDF_PREFIX}_HAVE_SYS_SYSINFO_H)\n  CHECK_INCLUDE_FILE_CONCAT (\"sys/proc.h\"    ${HDF_PREFIX}_HAVE_SYS_PROC_H)\nelse ()\n  set (${HDF_PREFIX}_HAVE_SYS_SYSINFO_H \"\" CACHE INTERNAL \"\" FORCE)\n  set (${HDF_PREFIX}_HAVE_SYS_PROC_H    \"\" CACHE INTERNAL \"\" FORCE)\nendif ()\n\nCHECK_INCLUDE_FILE_CONCAT (\"globus/common.h\" ${HDF_PREFIX}_HAVE_GLOBUS_COMMON_H)\nCHECK_INCLUDE_FILE_CONCAT (\"pdb.h\"           ${HDF_PREFIX}_HAVE_PDB_H)\nCHECK_INCLUDE_FILE_CONCAT (\"pthread.h\"       ${HDF_PREFIX}_HAVE_PTHREAD_H)\nCHECK_INCLUDE_FILE_CONCAT (\"srbclient.h\"     ${HDF_PREFIX}_HAVE_SRBCLIENT_H)\nCHECK_INCLUDE_FILE_CONCAT (\"string.h\"        ${HDF_PREFIX}_HAVE_STRING_H)\nCHECK_INCLUDE_FILE_CONCAT (\"strings.h\"       ${HDF_PREFIX}_HAVE_STRINGS_H)\nCHECK_INCLUDE_FILE_CONCAT (\"stdlib.h\"        ${HDF_PREFIX}_HAVE_STDLIB_H)\nCHECK_INCLUDE_FILE_CONCAT (\"memory.h\"        ${HDF_PREFIX}_HAVE_MEMORY_H)\nCHECK_INCLUDE_FILE_CONCAT (\"dlfcn.h\"         ${HDF_PREFIX}_HAVE_DLFCN_H)\nCHECK_INCLUDE_FILE_CONCAT (\"inttypes.h\"      ${HDF_PREFIX}_HAVE_INTTYPES_H)\nCHECK_INCLUDE_FILE_CONCAT (\"netinet/in.h\"    ${HDF_PREFIX}_HAVE_NETINET_IN_H)\n\n#-----------------------------------------------------------------------------\n#  Check for large file support\n#-----------------------------------------------------------------------------\n\n# The linux-lfs option is deprecated.\nset (LINUX_LFS 0)\n\nset (HDF_EXTRA_C_FLAGS)\nset (HDF_EXTRA_FLAGS)\nif (NOT WINDOWS)\n  # Might want to check explicitly for Linux and possibly Cygwin\n  # instead of checking for not Solaris or Darwin.\n  if (NOT ${HDF_PREFIX}_HAVE_SOLARIS AND NOT ${HDF_PREFIX}_HAVE_DARWIN)\n  # Linux Specific flags\n  # This was originally defined as _POSIX_SOURCE which was updated to\n  # _POSIX_C_SOURCE=199506L to expose a greater amount of POSIX\n  # functionality so clock_gettime and CLOCK_MONOTONIC are defined\n  # correctly. This was later updated to 200112L so that\n  # posix_memalign() is visible for the direct VFD code on Linux\n  # systems.\n  # POSIX feature information can be found in the gcc manual at:\n  # http://www.gnu.org/s/libc/manual/html_node/Feature-Test-Macros.html\n  set (HDF_EXTRA_C_FLAGS -D_POSIX_C_SOURCE=200112L)\n\n  # Need to add this so that O_DIRECT is visible for the direct\n  # VFD on Linux systems.\n  set (HDF_EXTRA_C_FLAGS -D_GNU_SOURCE)\n\n  option (HDF_ENABLE_LARGE_FILE \"Enable support for large (64-bit) files on Linux.\" ON)\n  if (HDF_ENABLE_LARGE_FILE AND NOT DEFINED TEST_LFS_WORKS)\n    set (msg \"Performing TEST_LFS_WORKS\")\n    TRY_RUN (TEST_LFS_WORKS_RUN   TEST_LFS_WORKS_COMPILE\n        ${CMAKE_BINARY_DIR}\n        ${HDF_RESOURCES_EXT_DIR}/HDFTests.c\n        COMPILE_DEFINITIONS \"-DTEST_LFS_WORKS\"\n    )\n\n    # The LARGEFILE definitions were from the transition period\n    # and are probably no longer needed. The FILE_OFFSET_BITS\n    # check should be generalized for all POSIX systems as it\n    # is in the Autotools.\n    if (TEST_LFS_WORKS_COMPILE)\n      if (TEST_LFS_WORKS_RUN MATCHES 0)\n        set (TEST_LFS_WORKS 1 CACHE INTERNAL ${msg})\n        set (LARGEFILE 1)\n        set (HDF_EXTRA_FLAGS ${HDF_EXTRA_FLAGS} -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE -D_LARGEFILE_SOURCE)\n        message (STATUS \"${msg}... yes\")\n      else ()\n        set (TEST_LFS_WORKS \"\" CACHE INTERNAL ${msg})\n        message (STATUS \"${msg}... no\")\n        file (APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log\n              \"Test TEST_LFS_WORKS Run failed with the following exit code:\\n ${TEST_LFS_WORKS_RUN}\\n\"\n        )\n      endif ()\n    else ()\n      set (TEST_LFS_WORKS \"\" CACHE INTERNAL ${msg})\n      message (STATUS \"${msg}... no\")\n      file (APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log\n          \"Test TEST_LFS_WORKS Compile failed\\n\"\n      )\n    endif ()\n  endif ()\n  set (CMAKE_REQUIRED_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS} ${HDF_EXTRA_FLAGS})\n  endif ()\nendif ()\n\n#-----------------------------------------------------------------------------\n# Check for HAVE_OFF64_T functionality\n#-----------------------------------------------------------------------------\nif (NOT WINDOWS OR MINGW)\n  HDF_FUNCTION_TEST (HAVE_OFF64_T)\n  if (${HDF_PREFIX}_HAVE_OFF64_T)\n    CHECK_FUNCTION_EXISTS (lseek64            ${HDF_PREFIX}_HAVE_LSEEK64)\n  endif ()\n\n  CHECK_FUNCTION_EXISTS (fseeko               ${HDF_PREFIX}_HAVE_FSEEKO)\n\n  HDF_FUNCTION_TEST (HAVE_STAT64_STRUCT)\n  if (HAVE_STAT64_STRUCT)\n    CHECK_FUNCTION_EXISTS (stat64             ${HDF_PREFIX}_HAVE_STAT64)\n  endif ()\nendif ()\n\n#-----------------------------------------------------------------------------\n#  Check the size in bytes of all the int and float types\n#-----------------------------------------------------------------------------\nmacro (HDF_CHECK_TYPE_SIZE type var)\n  set (aType ${type})\n  set (aVar  ${var})\n#  message (STATUS \"Checking size of ${aType} and storing into ${aVar}\")\n  CHECK_TYPE_SIZE (${aType}   ${aVar})\n  if (NOT ${aVar})\n    set (${aVar} 0 CACHE INTERNAL \"SizeOf for ${aType}\")\n#    message (STATUS \"Size of ${aType} was NOT Found\")\n  endif ()\nendmacro ()\n\nHDF_CHECK_TYPE_SIZE (char           ${HDF_PREFIX}_SIZEOF_CHAR)\nHDF_CHECK_TYPE_SIZE (short          ${HDF_PREFIX}_SIZEOF_SHORT)\nHDF_CHECK_TYPE_SIZE (int            ${HDF_PREFIX}_SIZEOF_INT)\nHDF_CHECK_TYPE_SIZE (unsigned       ${HDF_PREFIX}_SIZEOF_UNSIGNED)\nif (NOT APPLE)\n  HDF_CHECK_TYPE_SIZE (long         ${HDF_PREFIX}_SIZEOF_LONG)\nendif ()\nHDF_CHECK_TYPE_SIZE (\"long long\"    ${HDF_PREFIX}_SIZEOF_LONG_LONG)\nHDF_CHECK_TYPE_SIZE (__int64        ${HDF_PREFIX}_SIZEOF___INT64)\nif (NOT ${HDF_PREFIX}_SIZEOF___INT64)\n  set (${HDF_PREFIX}_SIZEOF___INT64 0)\nendif ()\n\nHDF_CHECK_TYPE_SIZE (float          ${HDF_PREFIX}_SIZEOF_FLOAT)\nHDF_CHECK_TYPE_SIZE (double         ${HDF_PREFIX}_SIZEOF_DOUBLE)\nHDF_CHECK_TYPE_SIZE (\"long double\"  ${HDF_PREFIX}_SIZEOF_LONG_DOUBLE)\n\nHDF_CHECK_TYPE_SIZE (int8_t         ${HDF_PREFIX}_SIZEOF_INT8_T)\nHDF_CHECK_TYPE_SIZE (uint8_t        ${HDF_PREFIX}_SIZEOF_UINT8_T)\nHDF_CHECK_TYPE_SIZE (int_least8_t   ${HDF_PREFIX}_SIZEOF_INT_LEAST8_T)\nHDF_CHECK_TYPE_SIZE (uint_least8_t  ${HDF_PREFIX}_SIZEOF_UINT_LEAST8_T)\nHDF_CHECK_TYPE_SIZE (int_fast8_t    ${HDF_PREFIX}_SIZEOF_INT_FAST8_T)\nHDF_CHECK_TYPE_SIZE (uint_fast8_t   ${HDF_PREFIX}_SIZEOF_UINT_FAST8_T)\n\nHDF_CHECK_TYPE_SIZE (int16_t        ${HDF_PREFIX}_SIZEOF_INT16_T)\nHDF_CHECK_TYPE_SIZE (uint16_t       ${HDF_PREFIX}_SIZEOF_UINT16_T)\nHDF_CHECK_TYPE_SIZE (int_least16_t  ${HDF_PREFIX}_SIZEOF_INT_LEAST16_T)\nHDF_CHECK_TYPE_SIZE (uint_least16_t ${HDF_PREFIX}_SIZEOF_UINT_LEAST16_T)\nHDF_CHECK_TYPE_SIZE (int_fast16_t   ${HDF_PREFIX}_SIZEOF_INT_FAST16_T)\nHDF_CHECK_TYPE_SIZE (uint_fast16_t  ${HDF_PREFIX}_SIZEOF_UINT_FAST16_T)\n\nHDF_CHECK_TYPE_SIZE (int32_t        ${HDF_PREFIX}_SIZEOF_INT32_T)\nHDF_CHECK_TYPE_SIZE (uint32_t       ${HDF_PREFIX}_SIZEOF_UINT32_T)\nHDF_CHECK_TYPE_SIZE (int_least32_t  ${HDF_PREFIX}_SIZEOF_INT_LEAST32_T)\nHDF_CHECK_TYPE_SIZE (uint_least32_t ${HDF_PREFIX}_SIZEOF_UINT_LEAST32_T)\nHDF_CHECK_TYPE_SIZE (int_fast32_t   ${HDF_PREFIX}_SIZEOF_INT_FAST32_T)\nHDF_CHECK_TYPE_SIZE (uint_fast32_t  ${HDF_PREFIX}_SIZEOF_UINT_FAST32_T)\n\nHDF_CHECK_TYPE_SIZE (int64_t        ${HDF_PREFIX}_SIZEOF_INT64_T)\nHDF_CHECK_TYPE_SIZE (uint64_t       ${HDF_PREFIX}_SIZEOF_UINT64_T)\nHDF_CHECK_TYPE_SIZE (int_least64_t  ${HDF_PREFIX}_SIZEOF_INT_LEAST64_T)\nHDF_CHECK_TYPE_SIZE (uint_least64_t ${HDF_PREFIX}_SIZEOF_UINT_LEAST64_T)\nHDF_CHECK_TYPE_SIZE (int_fast64_t   ${HDF_PREFIX}_SIZEOF_INT_FAST64_T)\nHDF_CHECK_TYPE_SIZE (uint_fast64_t  ${HDF_PREFIX}_SIZEOF_UINT_FAST64_T)\n\nif (NOT APPLE)\n  HDF_CHECK_TYPE_SIZE (size_t       ${HDF_PREFIX}_SIZEOF_SIZE_T)\n  HDF_CHECK_TYPE_SIZE (ssize_t      ${HDF_PREFIX}_SIZEOF_SSIZE_T)\n  if (NOT ${HDF_PREFIX}_SIZEOF_SSIZE_T)\n    set (${HDF_PREFIX}_SIZEOF_SSIZE_T 0)\n  endif ()\n  if (NOT WINDOWS)\n    HDF_CHECK_TYPE_SIZE (ptrdiff_t    ${HDF_PREFIX}_SIZEOF_PTRDIFF_T)\n  endif ()\nendif ()\n\nHDF_CHECK_TYPE_SIZE (off_t          ${HDF_PREFIX}_SIZEOF_OFF_T)\nHDF_CHECK_TYPE_SIZE (off64_t        ${HDF_PREFIX}_SIZEOF_OFF64_T)\nif (NOT ${HDF_PREFIX}_SIZEOF_OFF64_T)\n  set (${HDF_PREFIX}_SIZEOF_OFF64_T 0)\nendif ()\n\n#-----------------------------------------------------------------------------\n# Extra C99 types\n#-----------------------------------------------------------------------------\n\n# _Bool type support\nCHECK_INCLUDE_FILE_CONCAT (stdbool.h    ${HDF_PREFIX}_HAVE_STDBOOL_H)\nif (HAVE_STDBOOL_H)\n  set (CMAKE_EXTRA_INCLUDE_FILES stdbool.h)\n  HDF_CHECK_TYPE_SIZE (bool         ${HDF_PREFIX}_SIZEOF_BOOL)\nelse ()\n  HDF_CHECK_TYPE_SIZE (_Bool        ${HDF_PREFIX}_SIZEOF_BOOL)\nendif ()\n\nif (NOT WINDOWS)\n  #-----------------------------------------------------------------------------\n  # Check if the dev_t type is a scalar type\n  #-----------------------------------------------------------------------------\n  HDF_FUNCTION_TEST (DEV_T_IS_SCALAR)\n\n  # ----------------------------------------------------------------------\n  # Check for MONOTONIC_TIMER support (used in clock_gettime).  This has\n  # to be done after any POSIX/BSD defines to ensure that the test gets\n  # the correct POSIX level on linux.\n  CHECK_VARIABLE_EXISTS (CLOCK_MONOTONIC HAVE_CLOCK_MONOTONIC)\n\n  #-----------------------------------------------------------------------------\n  # Check a bunch of time functions\n  #-----------------------------------------------------------------------------\n  CHECK_FUNCTION_EXISTS (gettimeofday      ${HDF_PREFIX}_HAVE_GETTIMEOFDAY)\n  foreach (test\n      HAVE_TM_GMTOFF\n      HAVE___TM_GMTOFF\n#      HAVE_TIMEZONE\n      HAVE_STRUCT_TIMEZONE\n      GETTIMEOFDAY_GIVES_TZ\n      TIME_WITH_SYS_TIME\n      HAVE_TM_ZONE\n      HAVE_STRUCT_TM_TM_ZONE\n  )\n    HDF_FUNCTION_TEST (${test})\n  endforeach ()\n  if (NOT CYGWIN AND NOT MINGW)\n      HDF_FUNCTION_TEST (HAVE_TIMEZONE)\n#      HDF_FUNCTION_TEST (HAVE_STAT_ST_BLOCKS)\n  endif ()\n\n  # ----------------------------------------------------------------------\n  # Does the struct stat have the st_blocks field?  This field is not Posix.\n  #\n  HDF_FUNCTION_TEST (HAVE_STAT_ST_BLOCKS)\n\n  # ----------------------------------------------------------------------\n  # How do we figure out the width of a tty in characters?\n  #\n  CHECK_FUNCTION_EXISTS (ioctl             ${HDF_PREFIX}_HAVE_IOCTL)\n  HDF_FUNCTION_TEST (HAVE_STRUCT_VIDEOCONFIG)\n  HDF_FUNCTION_TEST (HAVE_STRUCT_TEXT_INFO)\n  CHECK_FUNCTION_EXISTS (_getvideoconfig   ${HDF_PREFIX}_HAVE__GETVIDEOCONFIG)\n  CHECK_FUNCTION_EXISTS (gettextinfo       ${HDF_PREFIX}_HAVE_GETTEXTINFO)\n  CHECK_FUNCTION_EXISTS (_scrsize          ${HDF_PREFIX}_HAVE__SCRSIZE)\n  if (NOT CYGWIN AND NOT MINGW)\n    CHECK_FUNCTION_EXISTS (GetConsoleScreenBufferInfo    ${HDF_PREFIX}_HAVE_GETCONSOLESCREENBUFFERINFO)\n  endif ()\n  CHECK_SYMBOL_EXISTS (TIOCGWINSZ \"sys/ioctl.h\" ${HDF_PREFIX}_HAVE_TIOCGWINSZ)\n  CHECK_SYMBOL_EXISTS (TIOCGETD   \"sys/ioctl.h\" ${HDF_PREFIX}_HAVE_TIOCGETD)\n\n  # ----------------------------------------------------------------------\n  # cygwin user credentials are different then on linux\n  #\n  if (NOT CYGWIN AND NOT MINGW)\n    CHECK_FUNCTION_EXISTS (getpwuid        ${HDF_PREFIX}_HAVE_GETPWUID)\n  endif ()\nendif ()\n\n#-----------------------------------------------------------------------------\n# Check for some functions that are used\n#\nCHECK_FUNCTION_EXISTS (alarm             ${HDF_PREFIX}_HAVE_ALARM)\nCHECK_FUNCTION_EXISTS (fcntl             ${HDF_PREFIX}_HAVE_FCNTL)\nCHECK_FUNCTION_EXISTS (flock             ${HDF_PREFIX}_HAVE_FLOCK)\nCHECK_FUNCTION_EXISTS (fork              ${HDF_PREFIX}_HAVE_FORK)\nCHECK_FUNCTION_EXISTS (frexpf            ${HDF_PREFIX}_HAVE_FREXPF)\nCHECK_FUNCTION_EXISTS (frexpl            ${HDF_PREFIX}_HAVE_FREXPL)\n\nCHECK_FUNCTION_EXISTS (gethostname       ${HDF_PREFIX}_HAVE_GETHOSTNAME)\nCHECK_FUNCTION_EXISTS (getrusage         ${HDF_PREFIX}_HAVE_GETRUSAGE)\nCHECK_FUNCTION_EXISTS (llround           ${HDF_PREFIX}_HAVE_LLROUND)\nCHECK_FUNCTION_EXISTS (llroundf          ${HDF_PREFIX}_HAVE_LLROUNDF)\nCHECK_FUNCTION_EXISTS (lround            ${HDF_PREFIX}_HAVE_LROUND)\nCHECK_FUNCTION_EXISTS (lroundf           ${HDF_PREFIX}_HAVE_LROUNDF)\nCHECK_FUNCTION_EXISTS (lstat             ${HDF_PREFIX}_HAVE_LSTAT)\n\nCHECK_FUNCTION_EXISTS (rand_r            ${HDF_PREFIX}_HAVE_RAND_R)\nCHECK_FUNCTION_EXISTS (random            ${HDF_PREFIX}_HAVE_RANDOM)\nCHECK_FUNCTION_EXISTS (round             ${HDF_PREFIX}_HAVE_ROUND)\nCHECK_FUNCTION_EXISTS (roundf            ${HDF_PREFIX}_HAVE_ROUNDF)\nCHECK_FUNCTION_EXISTS (setsysinfo        ${HDF_PREFIX}_HAVE_SETSYSINFO)\n\nCHECK_FUNCTION_EXISTS (signal            ${HDF_PREFIX}_HAVE_SIGNAL)\nCHECK_FUNCTION_EXISTS (longjmp           ${HDF_PREFIX}_HAVE_LONGJMP)\nCHECK_FUNCTION_EXISTS (setjmp            ${HDF_PREFIX}_HAVE_SETJMP)\nCHECK_FUNCTION_EXISTS (siglongjmp        ${HDF_PREFIX}_HAVE_SIGLONGJMP)\nCHECK_FUNCTION_EXISTS (sigsetjmp         ${HDF_PREFIX}_HAVE_SIGSETJMP)\nCHECK_FUNCTION_EXISTS (sigprocmask       ${HDF_PREFIX}_HAVE_SIGPROCMASK)\n\nCHECK_FUNCTION_EXISTS (snprintf          ${HDF_PREFIX}_HAVE_SNPRINTF)\nCHECK_FUNCTION_EXISTS (srandom           ${HDF_PREFIX}_HAVE_SRANDOM)\nCHECK_FUNCTION_EXISTS (strdup            ${HDF_PREFIX}_HAVE_STRDUP)\nCHECK_FUNCTION_EXISTS (strtoll           ${HDF_PREFIX}_HAVE_STRTOLL)\nCHECK_FUNCTION_EXISTS (strtoull          ${HDF_PREFIX}_HAVE_STRTOULL)\nCHECK_FUNCTION_EXISTS (symlink           ${HDF_PREFIX}_HAVE_SYMLINK)\nCHECK_FUNCTION_EXISTS (system            ${HDF_PREFIX}_HAVE_SYSTEM)\n\nCHECK_FUNCTION_EXISTS (tmpfile           ${HDF_PREFIX}_HAVE_TMPFILE)\nCHECK_FUNCTION_EXISTS (asprintf          ${HDF_PREFIX}_HAVE_ASPRINTF)\nCHECK_FUNCTION_EXISTS (vasprintf         ${HDF_PREFIX}_HAVE_VASPRINTF)\nCHECK_FUNCTION_EXISTS (waitpid           ${HDF_PREFIX}_HAVE_WAITPID)\n\nCHECK_FUNCTION_EXISTS (vsnprintf         ${HDF_PREFIX}_HAVE_VSNPRINTF)\nif (NOT WINDOWS)\n  if (${HDF_PREFIX}_HAVE_VSNPRINTF)\n    HDF_FUNCTION_TEST (VSNPRINTF_WORKS)\n  endif ()\nendif ()\n\n#-----------------------------------------------------------------------------\n# sigsetjmp is special; may actually be a macro\n#-----------------------------------------------------------------------------\nif (NOT ${HDF_PREFIX}_HAVE_SIGSETJMP)\n  if (${HDF_PREFIX}_HAVE_SETJMP_H)\n    CHECK_SYMBOL_EXISTS (sigsetjmp \"setjmp.h\" ${HDF_PREFIX}_HAVE_MACRO_SIGSETJMP)\n    if (${HDF_PREFIX}_HAVE_MACRO_SIGSETJMP)\n      set (${HDF_PREFIX}_HAVE_SIGSETJMP 1)\n    endif ()\n  endif ()\nendif ()\n\n#-----------------------------------------------------------------------------\n# Check a bunch of other functions\n#-----------------------------------------------------------------------------\nif (NOT WINDOWS)\n  foreach (test\n      HAVE_ATTRIBUTE\n      HAVE_C99_FUNC\n#      STDC_HEADERS\n      HAVE_FUNCTION\n      HAVE_C99_DESIGNATED_INITIALIZER\n      SYSTEM_SCOPE_THREADS\n      HAVE_SOCKLEN_T\n  )\n    HDF_FUNCTION_TEST (${test})\n  endforeach ()\nendif ()\n\n#-----------------------------------------------------------------------------\n# Check if InitOnceExecuteOnce is available\n#-----------------------------------------------------------------------------\nif (WINDOWS)\n  if (NOT HDF_NO_IOEO_TEST)\n  message (STATUS \"Checking for InitOnceExecuteOnce:\")\n  if (NOT DEFINED ${${HDF_PREFIX}_HAVE_IOEO})\n    if (LARGEFILE)\n      set (CMAKE_REQUIRED_DEFINITIONS\n          \"${CURRENT_TEST_DEFINITIONS} -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE -D_LARGEFILE_SOURCE\"\n      )\n    endif ()\n    set (MACRO_CHECK_FUNCTION_DEFINITIONS \"-DHAVE_IOEO ${CMAKE_REQUIRED_FLAGS}\")\n    if (CMAKE_REQUIRED_INCLUDES)\n      set (CHECK_C_SOURCE_COMPILES_ADD_INCLUDES \"-DINCLUDE_DIRECTORIES:STRING=${CMAKE_REQUIRED_INCLUDES}\")\n    else ()\n      set (CHECK_C_SOURCE_COMPILES_ADD_INCLUDES)\n    endif ()\n\n    TRY_RUN(HAVE_IOEO_EXITCODE HAVE_IOEO_COMPILED\n        ${CMAKE_BINARY_DIR}\n        ${HDF_RESOURCES_EXT_DIR}/HDFTests.c\n        COMPILE_DEFINITIONS \"${CMAKE_REQUIRED_DEFINITIONS} ${MACRO_CHECK_FUNCTION_DEFINITIONS}\"\n        LINK_LIBRARIES \"${CMAKE_REQUIRED_LIBRARIES}\"\n        CMAKE_FLAGS \"${CHECK_C_SOURCE_COMPILES_ADD_INCLUDES} -DCMAKE_SKIP_RPATH:BOOL=${CMAKE_SKIP_RPATH}\"\n        COMPILE_OUTPUT_VARIABLE OUTPUT\n    )\n    # if it did not compile make the return value fail code of 1\n    if (NOT HAVE_IOEO_COMPILED)\n      set (HAVE_IOEO_EXITCODE 1)\n    endif ()\n    # if the return value was 0 then it worked\n    if (\"${HAVE_IOEO_EXITCODE}\" EQUAL 0)\n      set (${HDF_PREFIX}_HAVE_IOEO 1 CACHE INTERNAL \"Test InitOnceExecuteOnce\")\n      message (STATUS \"Performing Test InitOnceExecuteOnce - Success\")\n      file (APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log\n        \"Performing C SOURCE FILE Test InitOnceExecuteOnce succeded with the following output:\\n\"\n        \"${OUTPUT}\\n\"\n        \"Return value: ${HAVE_IOEO}\\n\")\n    else ()\n      if (CMAKE_CROSSCOMPILING AND \"${HAVE_IOEO_EXITCODE}\" MATCHES  \"FAILED_TO_RUN\")\n        set (${HDF_PREFIX}_HAVE_IOEO \"${HAVE_IOEO_EXITCODE}\")\n      else ()\n        set (${HDF_PREFIX}_HAVE_IOEO \"\" CACHE INTERNAL \"Test InitOnceExecuteOnce\")\n      endif ()\n\n      message (STATUS \"Performing Test InitOnceExecuteOnce - Failed\")\n      file (APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log\n        \"Performing InitOnceExecuteOnce Test  failed with the following output:\\n\"\n        \"${OUTPUT}\\n\"\n        \"Return value: ${HAVE_IOEO_EXITCODE}\\n\")\n    endif ()\n  endif ()\n  endif ()\nendif ()\n\n#-----------------------------------------------------------------------------\n# Determine how 'inline' is used\n#-----------------------------------------------------------------------------\nforeach (inline_test inline __inline__ __inline)\n  string (TOUPPER ${inline_test} INLINE_TEST_MACRO)\n  HDF_FUNCTION_TEST (HAVE_${INLINE_TEST_MACRO})\nendforeach ()\n\n#-----------------------------------------------------------------------------\n# Check how to print a Long Long integer\n#-----------------------------------------------------------------------------\nif (NOT ${HDF_PREFIX}_PRINTF_LL_WIDTH OR ${HDF_PREFIX}_PRINTF_LL_WIDTH MATCHES \"unknown\")\n  set (PRINT_LL_FOUND 0)\n  message (STATUS \"Checking for appropriate format for 64 bit long:\")\n  set (CURRENT_TEST_DEFINITIONS \"-DPRINTF_LL_WIDTH\")\n  if (${HDF_PREFIX}_SIZEOF_LONG_LONG)\n    set (CURRENT_TEST_DEFINITIONS \"${CURRENT_TEST_DEFINITIONS} -DHAVE_LONG_LONG\")\n  endif ()\n  TRY_RUN (${HDF_PREFIX}_PRINTF_LL_TEST_RUN   ${HDF_PREFIX}_PRINTF_LL_TEST_COMPILE\n      ${CMAKE_BINARY_DIR}\n      ${HDF_RESOURCES_EXT_DIR}/HDFTests.c\n      COMPILE_DEFINITIONS \"${CURRENT_TEST_DEFINITIONS}\"\n      RUN_OUTPUT_VARIABLE OUTPUT\n  )\n  if (${HDF_PREFIX}_PRINTF_LL_TEST_COMPILE)\n    if (${HDF_PREFIX}_PRINTF_LL_TEST_RUN MATCHES 0)\n      string(REGEX REPLACE \".*PRINTF_LL_WIDTH=\\\\[(.*)\\\\].*\" \"\\\\1\" ${HDF_PREFIX}_PRINTF_LL \"${OUTPUT}\")\n      set (${HDF_PREFIX}_PRINTF_LL_WIDTH \"\\\"${${HDF_PREFIX}_PRINTF_LL}\\\"\" CACHE INTERNAL \"Width for printf for type `long long' or `__int64', us. `ll\")\n      set (PRINT_LL_FOUND 1)\n    else ()\n      message (\"Width test failed with result: ${${HDF_PREFIX}_PRINTF_LL_TEST_RUN}\")\n    endif ()\n  else ()\n    file (APPEND ${CMAKE_BINARY_DIR}/CMakeFiles/CMakeError.log\n        \"Test ${HDF_PREFIX}_PRINTF_LL_WIDTH failed\\n\"\n    )\n  endif ()\n\n  if (PRINT_LL_FOUND)\n    message (STATUS \"Checking for appropriate format for 64 bit long: found ${${HDF_PREFIX}_PRINTF_LL_WIDTH}\")\n  else ()\n    message (STATUS \"Checking for appropriate format for 64 bit long: not found\")\n    set (${HDF_PREFIX}_PRINTF_LL_WIDTH \"\\\"unknown\\\"\" CACHE INTERNAL\n        \"Width for printf for type `long long' or `__int64', us. `ll\"\n    )\n  endif ()\nendif ()\n\n# ----------------------------------------------------------------------\n# Set the flag to indicate that the machine can handle converting\n# denormalized floating-point values.\n# (This flag should be set for all machines, except for the Crays, where\n# the cache value is set in it's config file)\n#\nset (${HDF_PREFIX}_CONVERT_DENORMAL_FLOAT 1)\n",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/HDF5/src/itkhdf5/src/H5PLpkg.h": "/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Copyright by The HDF Group.                                               *\n * Copyright by the Board of Trustees of the University of Illinois.         *\n * All rights reserved.                                                      *\n *                                                                           *\n * This file is part of HDF5.  The full HDF5 copyright notice, including     *\n * terms governing use, modification, and redistribution, is contained in    *\n * the COPYING file, which can be found at the root of the source code       *\n * distribution tree, or in https://support.hdfgroup.org/ftp/HDF5/releases.  *\n * If you do not have access to either file, you may request a copy from     *\n * help@hdfgroup.org.                                                        *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n/*\n * Purpose: This file contains declarations which are visible only within\n *          the H5PL package.  Source files outside the H5PL package should\n *          include H5PLprivate.h instead.\n */\n\n#if !(defined H5PL_FRIEND || defined H5PL_MODULE)\n#error \"Do not include this file outside the H5PL package!\"\n#endif\n\n#ifndef _H5PLpkg_H\n#define _H5PLpkg_H\n\n/* Include private header file */\n#include \"H5PLprivate.h\"          /* Filter functions                */\n\n/* Other private headers needed by this file */\n\n/**************************/\n/* Package Private Macros */\n/**************************/\n\n/* Whether to pre-load pathnames for plugin libraries */\n#define H5PL_DEFAULT_PATH       H5_DEFAULT_PLUGINDIR\n\n\n/****************************/\n/* Macros for supporting    */\n/* both Windows and POSIX   */\n/****************************/\n\n/*******************/\n/* Windows support */\n/*******************/\n/*\n * SPECIAL WINDOWS NOTE\n *\n * Some of the Win32 API functions expand to fooA or fooW depending on\n * whether UNICODE or _UNICODE are defined. You MUST explicitly use\n * the A version of the functions to force char * behavior until we\n * work out a scheme for proper Windows Unicode support.\n *\n * If you do not do this, people will be unable to incorporate our\n * source code into their own CMake builds if they define UNICODE.\n */\n#ifdef H5_HAVE_WIN32_API\n\n    /* The path separator on this platform */\n#   define H5PL_PATH_SEPARATOR      \";\"\n\n    /* Handle for dynamic library */\n#   define H5PL_HANDLE HINSTANCE\n\n    /* Get a handle to a plugin library.  Windows: TEXT macro handles Unicode strings */\n#   define H5PL_OPEN_DLIB(S) LoadLibraryExA(S, NULL, LOAD_WITH_ALTERED_SEARCH_PATH)\n\n    /* Get the address of a symbol in dynamic library */\n#   define H5PL_GET_LIB_FUNC(H,N) GetProcAddress(H,N)\n\n    /* Close dynamic library */\n#   define H5PL_CLOSE_LIB(H) FreeLibrary(H)\n\n    /* Clear error - nothing to do */\n#   define H5PL_CLR_ERROR\n\n    /* maximum size for expanding env vars */\n#   define H5PL_EXPAND_BUFFER_SIZE 32767\n\n    typedef const void *(__cdecl *H5PL_get_plugin_info_t)(void);\n\n#else /* H5_HAVE_WIN32_API */\n\n    /*****************/\n    /* POSIX support */\n    /*****************/\n\n    /* The path separator on this platform */\n#   define H5PL_PATH_SEPARATOR     \":\"\n\n    /* Handle for dynamic library */\n#   define H5PL_HANDLE void *\n\n    /* Get a handle to a plugin library.  Windows: TEXT macro handles Unicode strings */\n#   define H5PL_OPEN_DLIB(S) dlopen(S, RTLD_LAZY)\n\n    /* Get the address of a symbol in dynamic library */\n#   define H5PL_GET_LIB_FUNC(H,N) dlsym(H,N)\n\n    /* Close dynamic library */\n#   define H5PL_CLOSE_LIB(H) dlclose(H)\n\n    /* Clear error */\n#   define H5PL_CLR_ERROR HERROR(H5E_PLUGIN, H5E_CANTGET, \"can't dlopen:%s\", dlerror())\n\n    typedef const void *(*H5PL_get_plugin_info_t)(void);\n#endif /* H5_HAVE_WIN32_API */\n\n\n/****************************/\n/* Package Private Typedefs */\n/****************************/\n\n/* Data used to search for plugins */\ntypedef struct H5PL_search_params_t {\n    H5PL_type_t         type;\n    H5PL_key_t          key;\n} H5PL_search_params_t;\n\n\n/*****************************/\n/* Package Private Variables */\n/*****************************/\n\n\n/******************************/\n/* Package Private Prototypes */\n/******************************/\n\n/* Accessors to global variables and flags */\nH5_DLL herr_t H5PL__get_plugin_control_mask(unsigned int *mask /*out*/);\nH5_DLL herr_t H5PL__set_plugin_control_mask(unsigned int mask);\n\n/* Plugin search and manipulation */\nH5_DLL herr_t H5PL__open(const char *libname, H5PL_type_t type, H5PL_key_t key, hbool_t *success /*out*/, const void **plugin_info /*out*/);\nH5_DLL herr_t H5PL__close(H5PL_HANDLE handle);\n\n/* Plugin cache calls */\nH5_DLL herr_t H5PL__create_plugin_cache(void);\nH5_DLL herr_t H5PL__close_plugin_cache(hbool_t *already_closed /*out*/);\nH5_DLL herr_t H5PL__add_plugin(H5PL_type_t type, H5PL_key_t key, H5PL_HANDLE handle);\nH5_DLL herr_t H5PL__find_plugin_in_cache(const H5PL_search_params_t *search_params, hbool_t *found /*out*/, const void **plugin_info /*out*/);\n\n/* Plugin search path calls */\nH5_DLL herr_t H5PL__create_path_table(void);\nH5_DLL herr_t H5PL__close_path_table(void);\nH5_DLL unsigned H5PL__get_num_paths(void);\nH5_DLL herr_t H5PL__append_path(const char *path);\nH5_DLL herr_t H5PL__prepend_path(const char *path);\nH5_DLL herr_t H5PL__replace_path(const char *path, unsigned int index);\nH5_DLL herr_t H5PL__insert_path(const char *path, unsigned int index);\nH5_DLL herr_t H5PL__remove_path(unsigned int index);\nH5_DLL const char *H5PL__get_path(unsigned int index);\nH5_DLL herr_t H5PL__find_plugin_in_path_table(const H5PL_search_params_t *search_params, hbool_t *found /*out*/, const void **plugin_info /*out*/);\n\n#endif /* _H5PLpkg_H */\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/KWSys/src/KWSys/DynamicLoader.cxx": "/* Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n   file Copyright.txt or https://cmake.org/licensing#kwsys for details.  */\n#if defined(_WIN32)\n#  define NOMINMAX // hide min,max to not conflict with <limits>\n#endif\n\n#include \"kwsysPrivate.h\"\n#include KWSYS_HEADER(DynamicLoader.hxx)\n\n#include KWSYS_HEADER(Configure.hxx)\n#include KWSYS_HEADER(Encoding.hxx)\n\n// Work-around CMake dependency scanning limitation.  This must\n// duplicate the above list of headers.\n#if 0\n#  include \"Configure.hxx.in\"\n#  include \"DynamicLoader.hxx.in\"\n#endif\n\n// This file actually contains several different implementations:\n// * NOOP for environments without dynamic libs\n// * HP machines which uses shl_load\n// * Mac OS X 10.2.x and earlier which uses NSLinkModule\n// * Windows which uses LoadLibrary\n// * BeOS / Haiku\n// * FreeMiNT for Atari\n// * Default implementation for *NIX systems (including Mac OS X 10.3 and\n//   later) which use dlopen\n//\n// Each part of the ifdef contains a complete implementation for\n// the static methods of DynamicLoader.\n\n#define CHECK_OPEN_FLAGS(var, supported, ret)                                 \\\n  do {                                                                        \\\n    /* Check for unknown flags. */                                            \\\n    if ((var & AllOpenFlags) != var) {                                        \\\n      return ret;                                                             \\\n    }                                                                         \\\n                                                                              \\\n    /* Check for unsupported flags. */                                        \\\n    if ((var & (supported)) != var) {                                         \\\n      return ret;                                                             \\\n    }                                                                         \\\n  } while (0)\n\nnamespace KWSYS_NAMESPACE {\n\nDynamicLoader::LibraryHandle DynamicLoader::OpenLibrary(\n  const std::string& libname)\n{\n  return DynamicLoader::OpenLibrary(libname, 0);\n}\n}\n\n#if !KWSYS_SUPPORTS_SHARED_LIBS\n// Implementation for environments without dynamic libs\n#  include <string.h> // for strerror()\n\nnamespace KWSYS_NAMESPACE {\n\nDynamicLoader::LibraryHandle DynamicLoader::OpenLibrary(\n  const std::string& libname, int flags)\n{\n  return 0;\n}\n\nint DynamicLoader::CloseLibrary(DynamicLoader::LibraryHandle lib)\n{\n  if (!lib) {\n    return 0;\n  }\n\n  return 1;\n}\n\nDynamicLoader::SymbolPointer DynamicLoader::GetSymbolAddress(\n  DynamicLoader::LibraryHandle lib, const std::string& sym)\n{\n  return 0;\n}\n\nconst char* DynamicLoader::LastError()\n{\n  return \"General error\";\n}\n\n} // namespace KWSYS_NAMESPACE\n\n#elif defined(__hpux)\n// Implementation for HPUX machines\n#  include <dl.h>\n#  include <errno.h>\n\nnamespace KWSYS_NAMESPACE {\n\nDynamicLoader::LibraryHandle DynamicLoader::OpenLibrary(\n  const std::string& libname, int flags)\n{\n  CHECK_OPEN_FLAGS(flags, 0, 0);\n\n  return shl_load(libname.c_str(), BIND_DEFERRED | DYNAMIC_PATH, 0L);\n}\n\nint DynamicLoader::CloseLibrary(DynamicLoader::LibraryHandle lib)\n{\n  if (!lib) {\n    return 0;\n  }\n  return !shl_unload(lib);\n}\n\nDynamicLoader::SymbolPointer DynamicLoader::GetSymbolAddress(\n  DynamicLoader::LibraryHandle lib, const std::string& sym)\n{\n  void* addr;\n  int status;\n\n  /* TYPE_PROCEDURE Look for a function or procedure. (This used to be default)\n   * TYPE_DATA      Look for a symbol in the data segment (for example,\n   * variables).\n   * TYPE_UNDEFINED Look for any symbol.\n   */\n  status = shl_findsym(&lib, sym.c_str(), TYPE_UNDEFINED, &addr);\n  void* result = (status < 0) ? (void*)0 : addr;\n\n  // Hack to cast pointer-to-data to pointer-to-function.\n  return *reinterpret_cast<DynamicLoader::SymbolPointer*>(&result);\n}\n\nconst char* DynamicLoader::LastError()\n{\n  // TODO: Need implementation with errno/strerror\n  /* If successful, shl_findsym returns an integer (int) value zero. If\n   * shl_findsym cannot find sym, it returns -1 and sets errno to zero.\n   * If any other errors occur, shl_findsym returns -1 and sets errno to one\n   * of these values (defined in <errno.h>):\n   * ENOEXEC\n   * A format error was detected in the specified library.\n   * ENOSYM\n   * A symbol on which sym depends could not be found.\n   * EINVAL\n   * The specified handle is invalid.\n   */\n\n  if (errno == ENOEXEC || errno == ENOSYM || errno == EINVAL) {\n    return strerror(errno);\n  }\n  // else\n  return 0;\n}\n\n} // namespace KWSYS_NAMESPACE\n\n#elif defined(__APPLE__) && (MAC_OS_X_VERSION_MAX_ALLOWED < 1030)\n// Implementation for Mac OS X 10.2.x and earlier\n#  include <mach-o/dyld.h>\n#  include <string.h> // for strlen\n\nnamespace KWSYS_NAMESPACE {\n\nDynamicLoader::LibraryHandle DynamicLoader::OpenLibrary(\n  const std::string& libname, int flags)\n{\n  CHECK_OPEN_FLAGS(flags, 0, 0);\n\n  NSObjectFileImageReturnCode rc;\n  NSObjectFileImage image = 0;\n\n  rc = NSCreateObjectFileImageFromFile(libname.c_str(), &image);\n  // rc == NSObjectFileImageInappropriateFile when trying to load a dylib file\n  if (rc != NSObjectFileImageSuccess) {\n    return 0;\n  }\n  NSModule handle = NSLinkModule(image, libname.c_str(),\n                                 NSLINKMODULE_OPTION_BINDNOW |\n                                   NSLINKMODULE_OPTION_RETURN_ON_ERROR);\n  NSDestroyObjectFileImage(image);\n  return handle;\n}\n\nint DynamicLoader::CloseLibrary(DynamicLoader::LibraryHandle lib)\n{\n  // NSUNLINKMODULE_OPTION_KEEP_MEMORY_MAPPED\n  // With  this  option  the memory for the module is not deallocated\n  // allowing pointers into the module to still be valid.\n  // You should use this option instead if your code experience some problems\n  // reported against Panther 10.3.9 (fixed in Tiger 10.4.2 and up)\n  bool success = NSUnLinkModule(lib, NSUNLINKMODULE_OPTION_NONE);\n  return success;\n}\n\nDynamicLoader::SymbolPointer DynamicLoader::GetSymbolAddress(\n  DynamicLoader::LibraryHandle lib, const std::string& sym)\n{\n  void* result = 0;\n  // Need to prepend symbols with '_' on Apple-gcc compilers\n  std::string rsym = '_' + sym;\n\n  NSSymbol symbol = NSLookupSymbolInModule(lib, rsym.c_str());\n  if (symbol) {\n    result = NSAddressOfSymbol(symbol);\n  }\n\n  // Hack to cast pointer-to-data to pointer-to-function.\n  return *reinterpret_cast<DynamicLoader::SymbolPointer*>(&result);\n}\n\nconst char* DynamicLoader::LastError()\n{\n  return 0;\n}\n\n} // namespace KWSYS_NAMESPACE\n\n#elif defined(_WIN32) && !defined(__CYGWIN__)\n// Implementation for Windows win32 code but not cygwin\n#  include <windows.h>\n\n#  include <stdio.h>\n\nnamespace KWSYS_NAMESPACE {\n\nDynamicLoader::LibraryHandle DynamicLoader::OpenLibrary(\n  const std::string& libname, int flags)\n{\n  CHECK_OPEN_FLAGS(flags, SearchBesideLibrary, nullptr);\n\n  DWORD llFlags = 0;\n  if (flags & SearchBesideLibrary) {\n    llFlags |= LOAD_WITH_ALTERED_SEARCH_PATH;\n  }\n\n  return LoadLibraryExW(Encoding::ToWindowsExtendedPath(libname).c_str(),\n                        nullptr, llFlags);\n}\n\nint DynamicLoader::CloseLibrary(DynamicLoader::LibraryHandle lib)\n{\n  return (int)FreeLibrary(lib);\n}\n\nDynamicLoader::SymbolPointer DynamicLoader::GetSymbolAddress(\n  DynamicLoader::LibraryHandle lib, const std::string& sym)\n{\n  // TODO: The calling convention affects the name of the symbol.  We\n  // should have a tool to help get the symbol with the desired\n  // calling convention.  Currently we assume cdecl.\n  //\n  // Borland:\n  //   __cdecl    = \"_func\" (default)\n  //   __fastcall = \"@_func\"\n  //   __stdcall  = \"func\"\n  //\n  // Watcom:\n  //   __cdecl    = \"_func\"\n  //   __fastcall = \"@_func@X\"\n  //   __stdcall  = \"_func@X\"\n  //   __watcall  = \"func_\" (default)\n  //\n  // MSVC:\n  //   __cdecl    = \"func\" (default)\n  //   __fastcall = \"@_func@X\"\n  //   __stdcall  = \"_func@X\"\n  //\n  // Note that the \"@X\" part of the name above is the total size (in\n  // bytes) of the arguments on the stack.\n  void* result;\n#  if defined(__BORLANDC__) || defined(__WATCOMC__)\n  // Need to prepend symbols with '_'\n  std::string ssym = '_' + sym;\n  const char* rsym = ssym.c_str();\n#  else\n  const char* rsym = sym.c_str();\n#  endif\n  result = (void*)GetProcAddress(lib, rsym);\n// Hack to cast pointer-to-data to pointer-to-function.\n#  ifdef __WATCOMC__\n  return *(DynamicLoader::SymbolPointer*)(&result);\n#  else\n  return *reinterpret_cast<DynamicLoader::SymbolPointer*>(&result);\n#  endif\n}\n\n#  define DYNLOAD_ERROR_BUFFER_SIZE 1024\n\nconst char* DynamicLoader::LastError()\n{\n  wchar_t lpMsgBuf[DYNLOAD_ERROR_BUFFER_SIZE + 1];\n\n  DWORD error = GetLastError();\n  DWORD length = FormatMessageW(\n    FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS, nullptr, error,\n    MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), // Default language\n    lpMsgBuf, DYNLOAD_ERROR_BUFFER_SIZE, nullptr);\n\n  static char str[DYNLOAD_ERROR_BUFFER_SIZE + 1];\n\n  if (length < 1) {\n    /* FormatMessage failed.  Use a default message.  */\n    _snprintf(str, DYNLOAD_ERROR_BUFFER_SIZE,\n              \"DynamicLoader encountered error 0x%X.  \"\n              \"FormatMessage failed with error 0x%X\",\n              error, GetLastError());\n    return str;\n  }\n\n  if (!WideCharToMultiByte(CP_UTF8, 0, lpMsgBuf, -1, str,\n                           DYNLOAD_ERROR_BUFFER_SIZE, nullptr, nullptr)) {\n    /* WideCharToMultiByte failed.  Use a default message.  */\n    _snprintf(str, DYNLOAD_ERROR_BUFFER_SIZE,\n              \"DynamicLoader encountered error 0x%X.  \"\n              \"WideCharToMultiByte failed with error 0x%X\",\n              error, GetLastError());\n  }\n\n  return str;\n}\n\n} // namespace KWSYS_NAMESPACE\n\n#elif defined(__BEOS__)\n// Implementation for BeOS / Haiku\n#  include <string.h> // for strerror()\n\n#  include <be/kernel/image.h>\n#  include <be/support/Errors.h>\n\nnamespace KWSYS_NAMESPACE {\n\nstatic image_id last_dynamic_err = B_OK;\n\nDynamicLoader::LibraryHandle DynamicLoader::OpenLibrary(\n  const std::string& libname, int flags)\n{\n  CHECK_OPEN_FLAGS(flags, 0, 0);\n\n  // image_id's are integers, errors are negative. Add one just in case we\n  //  get a valid image_id of zero (is that even possible?).\n  image_id rc = load_add_on(libname.c_str());\n  if (rc < 0) {\n    last_dynamic_err = rc;\n    return 0;\n  }\n\n  return rc + 1;\n}\n\nint DynamicLoader::CloseLibrary(DynamicLoader::LibraryHandle lib)\n{\n  if (!lib) {\n    last_dynamic_err = B_BAD_VALUE;\n    return 0;\n  } else {\n    // The function dlclose() returns 0 on success, and non-zero on error.\n    status_t rc = unload_add_on(lib - 1);\n    if (rc != B_OK) {\n      last_dynamic_err = rc;\n      return 0;\n    }\n  }\n\n  return 1;\n}\n\nDynamicLoader::SymbolPointer DynamicLoader::GetSymbolAddress(\n  DynamicLoader::LibraryHandle lib, const std::string& sym)\n{\n  // Hack to cast pointer-to-data to pointer-to-function.\n  union\n  {\n    void* pvoid;\n    DynamicLoader::SymbolPointer psym;\n  } result;\n\n  result.psym = nullptr;\n\n  if (!lib) {\n    last_dynamic_err = B_BAD_VALUE;\n  } else {\n    // !!! FIXME: BeOS can do function-only lookups...does this ever\n    // !!! FIXME:  actually _want_ a data symbol lookup, or was this union\n    // !!! FIXME:  a leftover of dlsym()? (s/ANY/TEXT for functions only).\n    status_t rc =\n      get_image_symbol(lib - 1, sym.c_str(), B_SYMBOL_TYPE_ANY, &result.pvoid);\n    if (rc != B_OK) {\n      last_dynamic_err = rc;\n      result.psym = nullptr;\n    }\n  }\n  return result.psym;\n}\n\nconst char* DynamicLoader::LastError()\n{\n  const char* retval = strerror(last_dynamic_err);\n  last_dynamic_err = B_OK;\n  return retval;\n}\n\n} // namespace KWSYS_NAMESPACE\n\n#elif defined(__MINT__)\n// Implementation for FreeMiNT on Atari\n#  define _GNU_SOURCE /* for program_invocation_name */\n#  include <dld.h>\n#  include <errno.h>\n#  include <malloc.h>\n#  include <string.h>\n\nnamespace KWSYS_NAMESPACE {\n\nDynamicLoader::LibraryHandle DynamicLoader::OpenLibrary(\n  const std::string& libname, int flags)\n{\n  CHECK_OPEN_FLAGS(flags, 0, nullptr);\n\n  char* name = (char*)calloc(1, libname.size() + 1);\n  dld_init(program_invocation_name);\n  strncpy(name, libname.c_str(), libname.size());\n  dld_link(libname.c_str());\n  return (void*)name;\n}\n\nint DynamicLoader::CloseLibrary(DynamicLoader::LibraryHandle lib)\n{\n  dld_unlink_by_file((char*)lib, 0);\n  free(lib);\n  return 0;\n}\n\nDynamicLoader::SymbolPointer DynamicLoader::GetSymbolAddress(\n  DynamicLoader::LibraryHandle lib, const std::string& sym)\n{\n  // Hack to cast pointer-to-data to pointer-to-function.\n  union\n  {\n    void* pvoid;\n    DynamicLoader::SymbolPointer psym;\n  } result;\n  result.pvoid = dld_get_symbol(sym.c_str());\n  return result.psym;\n}\n\nconst char* DynamicLoader::LastError()\n{\n  return dld_strerror(dld_errno);\n}\n\n} // namespace KWSYS_NAMESPACE\n\n#else\n// Default implementation for *NIX systems (including Mac OS X 10.3 and\n// later) which use dlopen\n#  include <dlfcn.h>\n\nnamespace KWSYS_NAMESPACE {\n\nDynamicLoader::LibraryHandle DynamicLoader::OpenLibrary(\n  const std::string& libname, int flags)\n{\n  CHECK_OPEN_FLAGS(flags, 0, nullptr);\n\n  return dlopen(libname.c_str(), RTLD_LAZY);\n}\n\nint DynamicLoader::CloseLibrary(DynamicLoader::LibraryHandle lib)\n{\n  if (lib) {\n    // The function dlclose() returns 0 on success, and non-zero on error.\n    return !dlclose(lib);\n  }\n  // else\n  return 0;\n}\n\nDynamicLoader::SymbolPointer DynamicLoader::GetSymbolAddress(\n  DynamicLoader::LibraryHandle lib, const std::string& sym)\n{\n  // Hack to cast pointer-to-data to pointer-to-function.\n  union\n  {\n    void* pvoid;\n    DynamicLoader::SymbolPointer psym;\n  } result;\n  result.pvoid = dlsym(lib, sym.c_str());\n  return result.psym;\n}\n\nconst char* DynamicLoader::LastError()\n{\n  return dlerror();\n}\n\n} // namespace KWSYS_NAMESPACE\n#endif\n",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/KWSys/src/KWSys/DynamicLoader.hxx.in": "/* Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n   file Copyright.txt or https://cmake.org/licensing#kwsys for details.  */\n#ifndef @KWSYS_NAMESPACE@_DynamicLoader_hxx\n#define @KWSYS_NAMESPACE@_DynamicLoader_hxx\n\n#include <@KWSYS_NAMESPACE@/Configure.hxx>\n\n#include <string>\n\n#if defined(__hpux)\n#  include <dl.h>\n#elif defined(_WIN32) && !defined(__CYGWIN__)\n#  include <windows.h>\n#elif defined(__APPLE__)\n#  include <AvailabilityMacros.h>\n#  if MAC_OS_X_VERSION_MAX_ALLOWED < 1030\n#    include <mach-o/dyld.h>\n#  endif\n#elif defined(__BEOS__)\n#  include <be/kernel/image.h>\n#endif\n\nnamespace @KWSYS_NAMESPACE@ {\n/** \\class DynamicLoader\n * \\brief Portable loading of dynamic libraries or dll's.\n *\n * DynamicLoader provides a portable interface to loading dynamic\n * libraries or dll's into a process.\n *\n * Directory currently works with Windows, Apple, HP-UX and Unix (POSIX)\n * operating systems\n *\n * \\warning dlopen on *nix system works the following way:\n * If filename contains a slash (\"/\"), then it is interpreted as a (relative\n * or absolute) pathname.  Otherwise, the dynamic linker searches for the\n * library as follows : see ld.so(8) for further details):\n * Whereas this distinction does not exist on Win32. Therefore ideally you\n * should be doing full path to guarantee to have a consistent way of dealing\n * with dynamic loading of shared library.\n *\n * \\warning the Cygwin implementation do not use the Win32 HMODULE. Put extra\n * condition so that we can include the correct declaration (POSIX)\n */\n\nclass @KWSYS_NAMESPACE@_EXPORT DynamicLoader\n{\npublic:\n// Ugly stuff for library handles\n// They are different on several different OS's\n#if defined(__hpux)\n  typedef shl_t LibraryHandle;\n#elif defined(_WIN32) && !defined(__CYGWIN__)\n  typedef HMODULE LibraryHandle;\n#elif defined(__APPLE__)\n#  if MAC_OS_X_VERSION_MAX_ALLOWED < 1030\n  typedef NSModule LibraryHandle;\n#  else\n  typedef void* LibraryHandle;\n#  endif\n#elif defined(__BEOS__)\n  typedef image_id LibraryHandle;\n#else // POSIX\n  typedef void* LibraryHandle;\n#endif\n\n  // Return type from DynamicLoader::GetSymbolAddress.\n  typedef void (*SymbolPointer)();\n\n  enum OpenFlags\n  {\n    // Search for dependent libraries beside the library being loaded.\n    //\n    // This is currently only supported on Windows.\n    SearchBesideLibrary = 0x00000001,\n\n    AllOpenFlags = SearchBesideLibrary\n  };\n\n  /** Load a dynamic library into the current process.\n   * The returned LibraryHandle can be used to access the symbols in the\n   * library. The optional second argument is a set of flags to use when\n   * opening the library. If unrecognized or unsupported flags are specified,\n   * the library is not opened. */\n  static LibraryHandle OpenLibrary(const std::string&);\n  static LibraryHandle OpenLibrary(const std::string&, int);\n\n  /** Attempt to detach a dynamic library from the\n   * process.  A value of true is returned if it is successful. */\n  static int CloseLibrary(LibraryHandle);\n\n  /** Find the address of the symbol in the given library. */\n  static SymbolPointer GetSymbolAddress(LibraryHandle, const std::string&);\n\n  /** Return the default module prefix for the current platform.  */\n  static const char* LibPrefix() { return \"@KWSYS_DynamicLoader_PREFIX@\"; }\n\n  /** Return the default module suffix for the current platform.  */\n  static const char* LibExtension() { return \"@KWSYS_DynamicLoader_SUFFIX@\"; }\n\n  /** Return the last error produced from a calls made on this class. */\n  static const char* LastError();\n}; // End Class: DynamicLoader\n\n} // namespace @KWSYS_NAMESPACE@\n\n#endif\n",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/KWSys/src/KWSys/testDynamicLoader.cxx": "/* Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n   file Copyright.txt or https://cmake.org/licensing#kwsys for details.  */\n#include \"kwsysPrivate.h\"\n\n#include KWSYS_HEADER(DynamicLoader.hxx)\n\n#if defined(__BEOS__) || defined(__HAIKU__)\n#  include <be/kernel/OS.h> /* disable_debugger() API. */\n#endif\n\n// Work-around CMake dependency scanning limitation.  This must\n// duplicate the above list of headers.\n#if 0\n#  include \"DynamicLoader.hxx.in\"\n#endif\n\n#include <iostream>\n#include <string>\n\n// Include with <> instead of \"\" to avoid getting any in-source copy\n// left on disk.\n#include <testSystemTools.h>\n\nstatic std::string GetLibName(const char* lname, const char* subdir = nullptr)\n{\n  // Construct proper name of lib\n  std::string slname;\n  slname = RUNTIME_OUTPUT_DIRECTORY;\n  if (subdir) {\n    slname += \"/\";\n    slname += subdir;\n  }\n#ifdef CMAKE_INTDIR\n  slname += \"/\";\n  slname += CMAKE_INTDIR;\n#endif\n  slname += \"/\";\n  slname += kwsys::DynamicLoader::LibPrefix();\n  slname += lname;\n  slname += kwsys::DynamicLoader::LibExtension();\n\n  return slname;\n}\n\n/* libname = Library name (proper prefix, proper extension)\n * System  = symbol to lookup in libname\n * r1: should OpenLibrary succeed ?\n * r2: should GetSymbolAddress succeed ?\n * r3: should CloseLibrary succeed ?\n */\nstatic int TestDynamicLoader(const char* libname, const char* symbol, int r1,\n                             int r2, int r3, int flags = 0)\n{\n  std::cerr << \"Testing: \" << libname << std::endl;\n  kwsys::DynamicLoader::LibraryHandle l =\n    kwsys::DynamicLoader::OpenLibrary(libname, flags);\n  // If result is incompatible with expectation just fails (xor):\n  if ((r1 && !l) || (!r1 && l)) {\n    std::cerr << \"OpenLibrary: \" << kwsys::DynamicLoader::LastError()\n              << std::endl;\n    return 1;\n  }\n  kwsys::DynamicLoader::SymbolPointer f =\n    kwsys::DynamicLoader::GetSymbolAddress(l, symbol);\n  if ((r2 && !f) || (!r2 && f)) {\n    std::cerr << \"GetSymbolAddress: \" << kwsys::DynamicLoader::LastError()\n              << std::endl;\n    return 1;\n  }\n#ifndef __APPLE__\n  int s = kwsys::DynamicLoader::CloseLibrary(l);\n  if ((r3 && !s) || (!r3 && s)) {\n    std::cerr << \"CloseLibrary: \" << kwsys::DynamicLoader::LastError()\n              << std::endl;\n    return 1;\n  }\n#else\n  (void)r3;\n#endif\n  return 0;\n}\n\nint testDynamicLoader(int argc, char* argv[])\n{\n#if defined(_WIN32)\n  SetErrorMode(SEM_FAILCRITICALERRORS | SEM_NOGPFAULTERRORBOX);\n#elif defined(__BEOS__) || defined(__HAIKU__)\n  disable_debugger(1);\n#endif\n  int res = 0;\n  if (argc == 3) {\n    // User specify a libname and symbol to check.\n    res = TestDynamicLoader(argv[1], argv[2], 1, 1, 1);\n    return res;\n  }\n\n// dlopen() on Syllable before 11/22/2007 doesn't return 0 on error\n#ifndef __SYLLABLE__\n  // Make sure that inexistent lib is giving correct result\n  res += TestDynamicLoader(\"azerty_\", \"foo_bar\", 0, 0, 0);\n  // Make sure that random binary file cannot be assimilated as dylib\n  res += TestDynamicLoader(TEST_SYSTEMTOOLS_SOURCE_DIR \"/testSystemTools.bin\",\n                           \"wp\", 0, 0, 0);\n#endif\n\n#ifdef __linux__\n  // This one is actually fun to test, since dlopen is by default\n  // loaded...wonder why :)\n  res += TestDynamicLoader(\"foobar.lib\", \"dlopen\", 0, 1, 0);\n  res += TestDynamicLoader(\"libdl.so\", \"dlopen\", 1, 1, 1);\n  res += TestDynamicLoader(\"libdl.so\", \"TestDynamicLoader\", 1, 0, 1);\n#endif\n  // Now try on the generated library\n  std::string libname = GetLibName(KWSYS_NAMESPACE_STRING \"TestDynload\");\n  res += TestDynamicLoader(libname.c_str(), \"dummy\", 1, 0, 1);\n  res += TestDynamicLoader(libname.c_str(), \"TestDynamicLoaderSymbolPointer\",\n                           1, 1, 1);\n  res += TestDynamicLoader(libname.c_str(), \"_TestDynamicLoaderSymbolPointer\",\n                           1, 0, 1);\n  res += TestDynamicLoader(libname.c_str(), \"TestDynamicLoaderData\", 1, 1, 1);\n  res += TestDynamicLoader(libname.c_str(), \"_TestDynamicLoaderData\", 1, 0, 1);\n\n#ifdef _WIN32\n  libname = GetLibName(KWSYS_NAMESPACE_STRING \"TestDynloadUse\", \"dynloaddir\");\n  res += TestDynamicLoader(libname.c_str(), \"dummy\", 0, 0, 0);\n  res += TestDynamicLoader(libname.c_str(), \"TestLoad\", 1, 1, 1,\n                           kwsys::DynamicLoader::SearchBesideLibrary);\n  res += TestDynamicLoader(libname.c_str(), \"_TestLoad\", 1, 0, 1,\n                           kwsys::DynamicLoader::SearchBesideLibrary);\n#endif\n\n  return res;\n}\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Testing/Data/Input/012345.002.050.README",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Wrapping/Generators/Ruby/module_ext.i.in",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Wrapping/Generators/Java/Tests/argparser.jar",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/GitCheatSheet.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/itkBanner.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/FaceBoundaryCalculator.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/CoolColormapFunction.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/SpringColormapFunction.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/itkBannerSmall.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/itkLogoSmallTransparentBackground.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/SummerColormapFunction.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/itkLogoSmall.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/ITKLogo_64px.ico",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/Threading.gif",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/Streaming.gif",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/PadImageFilter.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/WrapPadImageFilter.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/WinterColormapFunction.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/ITKLogo_32px.ico",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/itkLogoMedium.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/itkLogoMediumTransparentBackground.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/GreyColormapFunction.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/AutumnColormapFunction.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/MirrorPadImageFilter.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/itkLogoTransparentBackground.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/GreenColormapFunction.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/itkLogo.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/HotColormapFunction.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/OverUnderColormapFunction.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/HSVColormapFunction.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/CopperColormapFunction.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/JetColormapFunction.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/BinShrinkGrid.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/RedColormapFunction.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Documentation/Art/BlueColormapFunction.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/itkBrainSliceComplexPhase.mha",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainProtonDensitySliceBorder20.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/HoughTransformTwoLines.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainProtonDensitySliceBorder20.raw",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/FatMRISlice.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/FFTcenteredDC.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainProtonDensitySliceShifted13x17yDirectionPlus30.zraw",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainT1Slice.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainProtonDensitySliceRotated10.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainProtonDensitySlice.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/VisibleWomanHeadSlice.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/KmeansTest_T1KmeansPrelimSegmentation.nii.gz",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/HoughTransformTwoCircles.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainT1SliceBorder20.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/FFTCosinus.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/WatershedSegmentation.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/CorpusCallosumMode1.mha",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainProtonDensitySliceBSplined10.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/FivePoints.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainProtonDensitySliceBorder20Mask.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/itkBrainSliceComplex.mha",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/Circle.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/Point.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainProtonDensitySliceR10X13Y17.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/CorpusCallosumMode0.mha",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainProtonDensitySliceShifted13x17yDirectionPlus30.raw",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/CorpusCallosumMode2.mha",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainProtonDensitySlice256x256.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/CorpusCallosumMeanShape.mha",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainMidSagittalSlice.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/DiagonalLines.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/ResampleImageFilterInput2x3b.raw",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainProtonDensity3Slices.raw",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainProtonDensitySliceBorder20.zraw",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/RatLungSlice2.raw",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BayesianClassifierInitializerMemberships.raw",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/KmeansTest_T1UCharRaw.nii.gz",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/KmeansTest_T1RawSkullStrip.nii.gz",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/VentricleModel.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/itkBrainSliceComplexMagnitude.mha",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainProtonDensitySliceR10X13Y17S12.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainProtonDensitySliceShifted13x17y.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainProtonDensitySliceShifted13x17y.raw",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/FivePointsDilated.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BinaryImage.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainProtonDensitySliceBorder20DirectionPlus30.raw",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/RatLungSlice1.raw",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/VisibleWomanEyeSlice.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainT1SliceBorder20DirectionPlus30.zraw",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/ResampleImageFilterInput2x3.raw",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainT1SliceBorder20DirectionPlus30.raw",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/CircleSpikes.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/FFTcorneredDC.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Examples/Data/BrainProtonDensitySlice2x3.png",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/OpenJPEG/src/README-ITK.txt",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/OpenJPEG/src/openjpeg/event.h",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/OpenJPEG/src/openjpeg/image.c",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/OpenJPEG/src/openjpeg/openjpeg.c",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/OpenJPEG/src/openjpeg/event.c",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/OpenJPEG/src/openjpeg/opj_includes.h",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/OpenJPEG/src/openjpeg/image.h",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/OpenJPEG/src/openjpeg/j2k_lib.h",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/OpenJPEG/src/openjpeg/jp2.c",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/OpenJPEG/src/openjpeg/j2k_lib.c",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/GDCM/src/gdcm/Source/DataDictionary/06_03_list.txt",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/GDCM/src/gdcm/Source/DataDictionary/README.txt",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/GDCM/src/gdcm/Source/DataDictionary/dicomhdr.html",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/VNL/src/vxl/core/vnl/io/tests/golden_test_vnl_io.bvl",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/VNL/src/vxl/core/vnl/algo/amoeba_algorithm.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/HDF5/src/itkhdf5/config/cmake_ext_mod/hdf.ico",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/HDF5/src/itkhdf5/config/cmake_ext_mod/hdf.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/HDF5/src/itkhdf5/config/cmake_ext_mod/hdf.icns",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/HDF5/src/itkhdf5/c++/src/header.html",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/HDF5/src/itkhdf5/c++/src/header_files/image002.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/HDF5/src/itkhdf5/c++/src/header_files/help.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/HDF5/src/itkhdf5/c++/src/header_files/hdf_logo.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/HDF5/src/itkhdf5/c++/src/header_files/image001.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-itk-5.1.1-3j66b6dcyy5edwvlepz4xj7nhy7joe3p/spack-src/Modules/ThirdParty/KWSys/src/KWSys/testSystemTools.bin"
    ],
    "total_files": 15831
}