{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/common/sys/library.cpp": "// ======================================================================== //\n// Copyright 2009-2020 Intel Corporation                                    //\n//                                                                          //\n// Licensed under the Apache License, Version 2.0 (the \"License\");          //\n// you may not use this file except in compliance with the License.         //\n// You may obtain a copy of the License at                                  //\n//                                                                          //\n//     http://www.apache.org/licenses/LICENSE-2.0                           //\n//                                                                          //\n// Unless required by applicable law or agreed to in writing, software      //\n// distributed under the License is distributed on an \"AS IS\" BASIS,        //\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //\n// See the License for the specific language governing permissions and      //\n// limitations under the License.                                           //\n// ======================================================================== //\n\n#include \"library.h\"\n#include \"sysinfo.h\"\n#include \"filename.h\"\n\n////////////////////////////////////////////////////////////////////////////////\n/// Windows Platform\n////////////////////////////////////////////////////////////////////////////////\n\n#if defined(__WIN32__)\n\n#define WIN32_LEAN_AND_MEAN\n#include <windows.h>\n\nnamespace embree\n{\n  /* opens a shared library */\n  lib_t openLibrary(const std::string& file)\n  {\n    std::string fullName = file+\".dll\";\n    FileName executable = getExecutableFileName();\n    HANDLE handle = LoadLibrary((executable.path() + fullName).c_str());\n    return lib_t(handle);\n  }\n\n  /* returns address of a symbol from the library */\n  void* getSymbol(lib_t lib, const std::string& sym) {\n    return GetProcAddress(HMODULE(lib),sym.c_str());\n  }\n\n  /* closes the shared library */\n  void closeLibrary(lib_t lib) {\n    FreeLibrary(HMODULE(lib));\n  }\n}\n#endif\n\n////////////////////////////////////////////////////////////////////////////////\n/// Unix Platform\n////////////////////////////////////////////////////////////////////////////////\n\n#if defined(__UNIX__)\n\n#include <dlfcn.h>\n\nnamespace embree\n{\n  /* opens a shared library */\n  lib_t openLibrary(const std::string& file)\n  {\n#if defined(__MACOSX__)\n    std::string fullName = \"lib\"+file+\".dylib\";\n#else\n    std::string fullName = \"lib\"+file+\".so\";\n#endif\n    void* lib = dlopen(fullName.c_str(), RTLD_NOW);\n    if (lib) return lib_t(lib);\n    FileName executable = getExecutableFileName();\n    lib = dlopen((executable.path() + fullName).c_str(),RTLD_NOW);\n    if (lib == nullptr) {\n      const char* error = dlerror();\n      if (error) { \n        THROW_RUNTIME_ERROR(error);\n      } else {\n        THROW_RUNTIME_ERROR(\"could not load library \"+executable.str());\n      }\n    }\n    return lib_t(lib);\n  }\n\n  /* returns address of a symbol from the library */\n  void* getSymbol(lib_t lib, const std::string& sym) {\n    return dlsym(lib,sym.c_str());\n  }\n\n  /* closes the shared library */\n  void closeLibrary(lib_t lib) {\n    dlclose(lib);\n  }\n}\n#endif\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/readme.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/scripts/install_windows/icon32.ico",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/tutorials/common/glfw/Win32/vc14/glfw3.lib",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/tutorials/common/glfw/Win32/vc14/glfw3.dll",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/tutorials/common/glfw/Win32/vc14/glfw3dll.lib",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/tutorials/common/glfw/Win32/vc12/glfw3.lib",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/tutorials/common/glfw/Win32/vc12/glfw3.dll",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/tutorials/common/glfw/Win32/vc12/glfw3dll.lib",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/tutorials/common/glfw/x64/vc14/glfw3.lib",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/tutorials/common/glfw/x64/vc14/glfw3.dll",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/tutorials/common/glfw/x64/vc14/glfw3dll.lib",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/tutorials/common/glfw/x64/vc12/glfw3.lib",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/tutorials/common/glfw/x64/vc12/glfw3.dll",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/tutorials/common/glfw/x64/vc12/glfw3dll.lib",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/tutorials/models/cornell_box.xml.bin",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/tutorials/models/cornell_box_mblur.xml.bin",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/quaternion_motion_blur.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/dynamic_scene.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/subdivision_geometry.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/hair_geometry.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/icon32.ico",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/displacement_geometry.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/triangle_uv.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/multi_level_instancing.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/icon.png",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/user_geometry.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/viewer_stream.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/pathtracer.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/instanced_geometry.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/motion_blur_geometry.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/viewer.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/interpolation.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/triangle_geometry.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/quad_uv.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/grid_geometry.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/curve_geometry.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/triangle_uv.png",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/icon192.png",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/voronoi.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/point_geometry.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/intersection_filter.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/quad_uv.png",
        "/tmp/vanessa/spack-stage/spack-stage-embree-3.7.0-infqc6jk4ft3ahx2meddkileqq2khswr/spack-src/doc/images/closest_point.jpg"
    ],
    "total_files": 1017
}