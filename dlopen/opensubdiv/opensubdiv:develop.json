{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/glLoader/glApi.cpp": "//\n//   Copyright 2020 Pixar\n//\n//   Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n//   with the following modification; you may not use this file except in\n//   compliance with the Apache License and the following modification to it:\n//   Section 6. Trademarks. is deleted and replaced with:\n//\n//   6. Trademarks. This License does not grant permission to use the trade\n//      names, trademarks, service marks, or product names of the Licensor\n//      and its affiliates, except as required to comply with Section 4(c) of\n//      the License and to reproduce the content of the NOTICE file.\n//\n//   You may obtain a copy of the Apache License at\n//\n//       http://www.apache.org/licenses/LICENSE-2.0\n//\n//   Unless required by applicable law or agreed to in writing, software\n//   distributed under the Apache License with the above modification is\n//   distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n//   KIND, either express or implied. See the Apache License for the specific\n//   language governing permissions and limitations under the Apache License.\n//\n\n#include \"glApi.h\"\n\n#ifdef _WIN32\n#ifndef WIN32_LEAN_AND_MEAN\n#define WIN32_LEAN_AND_MEAN\n    #include <windows.h>\n#endif\n#else\n    #include <dlfcn.h>\n#endif\n\n#include <cstring>\n#include <cstdlib>\n#include <cassert>\n#include <vector>\n\n#ifdef _WIN32\n#define GLAPIENTRY __stdcall\n#else\n#define GLAPIENTRY\n#endif\n\n\nnamespace OpenSubdiv {\nnamespace internal {\nnamespace GLApi {\n\n\nbool GLAPILOADER_GL_VERSION_1_0 = false;\nbool GLAPILOADER_GL_VERSION_1_1 = false;\nbool GLAPILOADER_GL_VERSION_1_2 = false;\nbool GLAPILOADER_GL_VERSION_1_3 = false;\nbool GLAPILOADER_GL_VERSION_1_4 = false;\nbool GLAPILOADER_GL_VERSION_1_5 = false;\nbool GLAPILOADER_GL_VERSION_2_0 = false;\nbool GLAPILOADER_GL_VERSION_2_1 = false;\nbool GLAPILOADER_GL_VERSION_3_0 = false;\nbool GLAPILOADER_GL_VERSION_3_1 = false;\nbool GLAPILOADER_GL_VERSION_3_2 = false;\nbool GLAPILOADER_GL_VERSION_3_3 = false;\nbool GLAPILOADER_GL_VERSION_4_0 = false;\nbool GLAPILOADER_GL_VERSION_4_1 = false;\nbool GLAPILOADER_GL_VERSION_4_2 = false;\nbool GLAPILOADER_GL_VERSION_4_3 = false;\nbool GLAPILOADER_GL_VERSION_4_4 = false;\nbool GLAPILOADER_GL_VERSION_4_5 = false;\nbool GLAPILOADER_GL_VERSION_4_6 = false;\n\n\nbool GLAPILOADER_GL_AMD_blend_minmax_factor = false;\nbool GLAPILOADER_GL_AMD_conservative_depth = false;\nbool GLAPILOADER_GL_AMD_debug_output = false;\nbool GLAPILOADER_GL_AMD_depth_clamp_separate = false;\nbool GLAPILOADER_GL_AMD_draw_buffers_blend = false;\nbool GLAPILOADER_GL_AMD_framebuffer_multisample_advanced = false;\nbool GLAPILOADER_GL_AMD_framebuffer_sample_positions = false;\nbool GLAPILOADER_GL_AMD_gcn_shader = false;\nbool GLAPILOADER_GL_AMD_gpu_shader_half_float = false;\nbool GLAPILOADER_GL_AMD_gpu_shader_int16 = false;\nbool GLAPILOADER_GL_AMD_gpu_shader_int64 = false;\nbool GLAPILOADER_GL_AMD_interleaved_elements = false;\nbool GLAPILOADER_GL_AMD_multi_draw_indirect = false;\nbool GLAPILOADER_GL_AMD_name_gen_delete = false;\nbool GLAPILOADER_GL_AMD_occlusion_query_event = false;\nbool GLAPILOADER_GL_AMD_performance_monitor = false;\nbool GLAPILOADER_GL_AMD_pinned_memory = false;\nbool GLAPILOADER_GL_AMD_query_buffer_object = false;\nbool GLAPILOADER_GL_AMD_sample_positions = false;\nbool GLAPILOADER_GL_AMD_seamless_cubemap_per_texture = false;\nbool GLAPILOADER_GL_AMD_shader_atomic_counter_ops = false;\nbool GLAPILOADER_GL_AMD_shader_ballot = false;\nbool GLAPILOADER_GL_AMD_shader_gpu_shader_half_float_fetch = false;\nbool GLAPILOADER_GL_AMD_shader_image_load_store_lod = false;\nbool GLAPILOADER_GL_AMD_shader_stencil_export = false;\nbool GLAPILOADER_GL_AMD_shader_trinary_minmax = false;\nbool GLAPILOADER_GL_AMD_shader_explicit_vertex_parameter = false;\nbool GLAPILOADER_GL_AMD_sparse_texture = false;\nbool GLAPILOADER_GL_AMD_stencil_operation_extended = false;\nbool GLAPILOADER_GL_AMD_texture_gather_bias_lod = false;\nbool GLAPILOADER_GL_AMD_texture_texture4 = false;\nbool GLAPILOADER_GL_AMD_transform_feedback3_lines_triangles = false;\nbool GLAPILOADER_GL_AMD_transform_feedback4 = false;\nbool GLAPILOADER_GL_AMD_vertex_shader_layer = false;\nbool GLAPILOADER_GL_AMD_vertex_shader_tessellator = false;\nbool GLAPILOADER_GL_AMD_vertex_shader_viewport_index = false;\nbool GLAPILOADER_GL_APPLE_aux_depth_stencil = false;\nbool GLAPILOADER_GL_APPLE_client_storage = false;\nbool GLAPILOADER_GL_APPLE_element_array = false;\nbool GLAPILOADER_GL_APPLE_fence = false;\nbool GLAPILOADER_GL_APPLE_float_pixels = false;\nbool GLAPILOADER_GL_APPLE_flush_buffer_range = false;\nbool GLAPILOADER_GL_APPLE_object_purgeable = false;\nbool GLAPILOADER_GL_APPLE_rgb_422 = false;\nbool GLAPILOADER_GL_APPLE_row_bytes = false;\nbool GLAPILOADER_GL_APPLE_specular_vector = false;\nbool GLAPILOADER_GL_APPLE_texture_range = false;\nbool GLAPILOADER_GL_APPLE_transform_hint = false;\nbool GLAPILOADER_GL_APPLE_vertex_array_object = false;\nbool GLAPILOADER_GL_APPLE_vertex_array_range = false;\nbool GLAPILOADER_GL_APPLE_vertex_program_evaluators = false;\nbool GLAPILOADER_GL_APPLE_ycbcr_422 = false;\nbool GLAPILOADER_GL_ARB_ES2_compatibility = false;\nbool GLAPILOADER_GL_ARB_ES3_1_compatibility = false;\nbool GLAPILOADER_GL_ARB_ES3_2_compatibility = false;\nbool GLAPILOADER_GL_ARB_ES3_compatibility = false;\nbool GLAPILOADER_GL_ARB_arrays_of_arrays = false;\nbool GLAPILOADER_GL_ARB_base_instance = false;\nbool GLAPILOADER_GL_ARB_bindless_texture = false;\nbool GLAPILOADER_GL_ARB_blend_func_extended = false;\nbool GLAPILOADER_GL_ARB_buffer_storage = false;\nbool GLAPILOADER_GL_ARB_cl_event = false;\nbool GLAPILOADER_GL_ARB_clear_buffer_object = false;\nbool GLAPILOADER_GL_ARB_clear_texture = false;\nbool GLAPILOADER_GL_ARB_clip_control = false;\nbool GLAPILOADER_GL_ARB_color_buffer_float = false;\nbool GLAPILOADER_GL_ARB_compatibility = false;\nbool GLAPILOADER_GL_ARB_compressed_texture_pixel_storage = false;\nbool GLAPILOADER_GL_ARB_compute_shader = false;\nbool GLAPILOADER_GL_ARB_compute_variable_group_size = false;\nbool GLAPILOADER_GL_ARB_conditional_render_inverted = false;\nbool GLAPILOADER_GL_ARB_conservative_depth = false;\nbool GLAPILOADER_GL_ARB_copy_buffer = false;\nbool GLAPILOADER_GL_ARB_copy_image = false;\nbool GLAPILOADER_GL_ARB_cull_distance = false;\nbool GLAPILOADER_GL_ARB_debug_output = false;\nbool GLAPILOADER_GL_ARB_depth_buffer_float = false;\nbool GLAPILOADER_GL_ARB_depth_clamp = false;\nbool GLAPILOADER_GL_ARB_depth_texture = false;\nbool GLAPILOADER_GL_ARB_derivative_control = false;\nbool GLAPILOADER_GL_ARB_direct_state_access = false;\nbool GLAPILOADER_GL_ARB_draw_buffers = false;\nbool GLAPILOADER_GL_ARB_draw_buffers_blend = false;\nbool GLAPILOADER_GL_ARB_draw_elements_base_vertex = false;\nbool GLAPILOADER_GL_ARB_draw_indirect = false;\nbool GLAPILOADER_GL_ARB_draw_instanced = false;\nbool GLAPILOADER_GL_ARB_enhanced_layouts = false;\nbool GLAPILOADER_GL_ARB_explicit_attrib_location = false;\nbool GLAPILOADER_GL_ARB_explicit_uniform_location = false;\nbool GLAPILOADER_GL_ARB_fragment_coord_conventions = false;\nbool GLAPILOADER_GL_ARB_fragment_layer_viewport = false;\nbool GLAPILOADER_GL_ARB_fragment_program = false;\nbool GLAPILOADER_GL_ARB_fragment_program_shadow = false;\nbool GLAPILOADER_GL_ARB_fragment_shader = false;\nbool GLAPILOADER_GL_ARB_fragment_shader_interlock = false;\nbool GLAPILOADER_GL_ARB_framebuffer_no_attachments = false;\nbool GLAPILOADER_GL_ARB_framebuffer_object = false;\nbool GLAPILOADER_GL_ARB_framebuffer_sRGB = false;\nbool GLAPILOADER_GL_ARB_geometry_shader4 = false;\nbool GLAPILOADER_GL_ARB_get_program_binary = false;\nbool GLAPILOADER_GL_ARB_get_texture_sub_image = false;\nbool GLAPILOADER_GL_ARB_gl_spirv = false;\nbool GLAPILOADER_GL_ARB_gpu_shader5 = false;\nbool GLAPILOADER_GL_ARB_gpu_shader_fp64 = false;\nbool GLAPILOADER_GL_ARB_gpu_shader_int64 = false;\nbool GLAPILOADER_GL_ARB_half_float_pixel = false;\nbool GLAPILOADER_GL_ARB_half_float_vertex = false;\nbool GLAPILOADER_GL_ARB_imaging = false;\nbool GLAPILOADER_GL_ARB_indirect_parameters = false;\nbool GLAPILOADER_GL_ARB_instanced_arrays = false;\nbool GLAPILOADER_GL_ARB_internalformat_query = false;\nbool GLAPILOADER_GL_ARB_internalformat_query2 = false;\nbool GLAPILOADER_GL_ARB_invalidate_subdata = false;\nbool GLAPILOADER_GL_ARB_map_buffer_alignment = false;\nbool GLAPILOADER_GL_ARB_map_buffer_range = false;\nbool GLAPILOADER_GL_ARB_matrix_palette = false;\nbool GLAPILOADER_GL_ARB_multi_bind = false;\nbool GLAPILOADER_GL_ARB_multi_draw_indirect = false;\nbool GLAPILOADER_GL_ARB_multisample = false;\nbool GLAPILOADER_GL_ARB_multitexture = false;\nbool GLAPILOADER_GL_ARB_occlusion_query = false;\nbool GLAPILOADER_GL_ARB_occlusion_query2 = false;\nbool GLAPILOADER_GL_ARB_parallel_shader_compile = false;\nbool GLAPILOADER_GL_ARB_pipeline_statistics_query = false;\nbool GLAPILOADER_GL_ARB_pixel_buffer_object = false;\nbool GLAPILOADER_GL_ARB_point_parameters = false;\nbool GLAPILOADER_GL_ARB_point_sprite = false;\nbool GLAPILOADER_GL_ARB_polygon_offset_clamp = false;\nbool GLAPILOADER_GL_ARB_post_depth_coverage = false;\nbool GLAPILOADER_GL_ARB_program_interface_query = false;\nbool GLAPILOADER_GL_ARB_provoking_vertex = false;\nbool GLAPILOADER_GL_ARB_query_buffer_object = false;\nbool GLAPILOADER_GL_ARB_robust_buffer_access_behavior = false;\nbool GLAPILOADER_GL_ARB_robustness = false;\nbool GLAPILOADER_GL_ARB_robustness_isolation = false;\nbool GLAPILOADER_GL_ARB_sample_locations = false;\nbool GLAPILOADER_GL_ARB_sample_shading = false;\nbool GLAPILOADER_GL_ARB_sampler_objects = false;\nbool GLAPILOADER_GL_ARB_seamless_cube_map = false;\nbool GLAPILOADER_GL_ARB_seamless_cubemap_per_texture = false;\nbool GLAPILOADER_GL_ARB_separate_shader_objects = false;\nbool GLAPILOADER_GL_ARB_shader_atomic_counter_ops = false;\nbool GLAPILOADER_GL_ARB_shader_atomic_counters = false;\nbool GLAPILOADER_GL_ARB_shader_ballot = false;\nbool GLAPILOADER_GL_ARB_shader_bit_encoding = false;\nbool GLAPILOADER_GL_ARB_shader_clock = false;\nbool GLAPILOADER_GL_ARB_shader_draw_parameters = false;\nbool GLAPILOADER_GL_ARB_shader_group_vote = false;\nbool GLAPILOADER_GL_ARB_shader_image_load_store = false;\nbool GLAPILOADER_GL_ARB_shader_image_size = false;\nbool GLAPILOADER_GL_ARB_shader_objects = false;\nbool GLAPILOADER_GL_ARB_shader_precision = false;\nbool GLAPILOADER_GL_ARB_shader_stencil_export = false;\nbool GLAPILOADER_GL_ARB_shader_storage_buffer_object = false;\nbool GLAPILOADER_GL_ARB_shader_subroutine = false;\nbool GLAPILOADER_GL_ARB_shader_texture_image_samples = false;\nbool GLAPILOADER_GL_ARB_shader_texture_lod = false;\nbool GLAPILOADER_GL_ARB_shader_viewport_layer_array = false;\nbool GLAPILOADER_GL_ARB_shading_language_100 = false;\nbool GLAPILOADER_GL_ARB_shading_language_420pack = false;\nbool GLAPILOADER_GL_ARB_shading_language_include = false;\nbool GLAPILOADER_GL_ARB_shading_language_packing = false;\nbool GLAPILOADER_GL_ARB_shadow = false;\nbool GLAPILOADER_GL_ARB_shadow_ambient = false;\nbool GLAPILOADER_GL_ARB_sparse_buffer = false;\nbool GLAPILOADER_GL_ARB_sparse_texture = false;\nbool GLAPILOADER_GL_ARB_sparse_texture2 = false;\nbool GLAPILOADER_GL_ARB_sparse_texture_clamp = false;\nbool GLAPILOADER_GL_ARB_spirv_extensions = false;\nbool GLAPILOADER_GL_ARB_stencil_texturing = false;\nbool GLAPILOADER_GL_ARB_sync = false;\nbool GLAPILOADER_GL_ARB_tessellation_shader = false;\nbool GLAPILOADER_GL_ARB_texture_barrier = false;\nbool GLAPILOADER_GL_ARB_texture_border_clamp = false;\nbool GLAPILOADER_GL_ARB_texture_buffer_object = false;\nbool GLAPILOADER_GL_ARB_texture_buffer_object_rgb32 = false;\nbool GLAPILOADER_GL_ARB_texture_buffer_range = false;\nbool GLAPILOADER_GL_ARB_texture_compression = false;\nbool GLAPILOADER_GL_ARB_texture_compression_bptc = false;\nbool GLAPILOADER_GL_ARB_texture_compression_rgtc = false;\nbool GLAPILOADER_GL_ARB_texture_cube_map = false;\nbool GLAPILOADER_GL_ARB_texture_cube_map_array = false;\nbool GLAPILOADER_GL_ARB_texture_env_add = false;\nbool GLAPILOADER_GL_ARB_texture_env_combine = false;\nbool GLAPILOADER_GL_ARB_texture_env_crossbar = false;\nbool GLAPILOADER_GL_ARB_texture_env_dot3 = false;\nbool GLAPILOADER_GL_ARB_texture_filter_anisotropic = false;\nbool GLAPILOADER_GL_ARB_texture_filter_minmax = false;\nbool GLAPILOADER_GL_ARB_texture_float = false;\nbool GLAPILOADER_GL_ARB_texture_gather = false;\nbool GLAPILOADER_GL_ARB_texture_mirror_clamp_to_edge = false;\nbool GLAPILOADER_GL_ARB_texture_mirrored_repeat = false;\nbool GLAPILOADER_GL_ARB_texture_multisample = false;\nbool GLAPILOADER_GL_ARB_texture_non_power_of_two = false;\nbool GLAPILOADER_GL_ARB_texture_query_levels = false;\nbool GLAPILOADER_GL_ARB_texture_query_lod = false;\nbool GLAPILOADER_GL_ARB_texture_rectangle = false;\nbool GLAPILOADER_GL_ARB_texture_rg = false;\nbool GLAPILOADER_GL_ARB_texture_rgb10_a2ui = false;\nbool GLAPILOADER_GL_ARB_texture_stencil8 = false;\nbool GLAPILOADER_GL_ARB_texture_storage = false;\nbool GLAPILOADER_GL_ARB_texture_storage_multisample = false;\nbool GLAPILOADER_GL_ARB_texture_swizzle = false;\nbool GLAPILOADER_GL_ARB_texture_view = false;\nbool GLAPILOADER_GL_ARB_timer_query = false;\nbool GLAPILOADER_GL_ARB_transform_feedback2 = false;\nbool GLAPILOADER_GL_ARB_transform_feedback3 = false;\nbool GLAPILOADER_GL_ARB_transform_feedback_instanced = false;\nbool GLAPILOADER_GL_ARB_transform_feedback_overflow_query = false;\nbool GLAPILOADER_GL_ARB_transpose_matrix = false;\nbool GLAPILOADER_GL_ARB_uniform_buffer_object = false;\nbool GLAPILOADER_GL_ARB_vertex_array_bgra = false;\nbool GLAPILOADER_GL_ARB_vertex_array_object = false;\nbool GLAPILOADER_GL_ARB_vertex_attrib_64bit = false;\nbool GLAPILOADER_GL_ARB_vertex_attrib_binding = false;\nbool GLAPILOADER_GL_ARB_vertex_blend = false;\nbool GLAPILOADER_GL_ARB_vertex_buffer_object = false;\nbool GLAPILOADER_GL_ARB_vertex_program = false;\nbool GLAPILOADER_GL_ARB_vertex_shader = false;\nbool GLAPILOADER_GL_ARB_vertex_type_10f_11f_11f_rev = false;\nbool GLAPILOADER_GL_ARB_vertex_type_2_10_10_10_rev = false;\nbool GLAPILOADER_GL_ARB_viewport_array = false;\nbool GLAPILOADER_GL_ARB_window_pos = false;\nbool GLAPILOADER_GL_EXT_422_pixels = false;\nbool GLAPILOADER_GL_EXT_EGL_image_storage = false;\nbool GLAPILOADER_GL_EXT_EGL_sync = false;\nbool GLAPILOADER_GL_EXT_abgr = false;\nbool GLAPILOADER_GL_EXT_bgra = false;\nbool GLAPILOADER_GL_EXT_bindable_uniform = false;\nbool GLAPILOADER_GL_EXT_blend_color = false;\nbool GLAPILOADER_GL_EXT_blend_equation_separate = false;\nbool GLAPILOADER_GL_EXT_blend_func_separate = false;\nbool GLAPILOADER_GL_EXT_blend_logic_op = false;\nbool GLAPILOADER_GL_EXT_blend_minmax = false;\nbool GLAPILOADER_GL_EXT_blend_subtract = false;\nbool GLAPILOADER_GL_EXT_clip_volume_hint = false;\nbool GLAPILOADER_GL_EXT_cmyka = false;\nbool GLAPILOADER_GL_EXT_color_subtable = false;\nbool GLAPILOADER_GL_EXT_compiled_vertex_array = false;\nbool GLAPILOADER_GL_EXT_convolution = false;\nbool GLAPILOADER_GL_EXT_coordinate_frame = false;\nbool GLAPILOADER_GL_EXT_copy_texture = false;\nbool GLAPILOADER_GL_EXT_cull_vertex = false;\nbool GLAPILOADER_GL_EXT_debug_label = false;\nbool GLAPILOADER_GL_EXT_debug_marker = false;\nbool GLAPILOADER_GL_EXT_depth_bounds_test = false;\nbool GLAPILOADER_GL_EXT_direct_state_access = false;\nbool GLAPILOADER_GL_EXT_draw_buffers2 = false;\nbool GLAPILOADER_GL_EXT_draw_instanced = false;\nbool GLAPILOADER_GL_EXT_draw_range_elements = false;\nbool GLAPILOADER_GL_EXT_external_buffer = false;\nbool GLAPILOADER_GL_EXT_fog_coord = false;\nbool GLAPILOADER_GL_EXT_framebuffer_blit = false;\nbool GLAPILOADER_GL_EXT_framebuffer_multisample = false;\nbool GLAPILOADER_GL_EXT_framebuffer_multisample_blit_scaled = false;\nbool GLAPILOADER_GL_EXT_framebuffer_object = false;\nbool GLAPILOADER_GL_EXT_framebuffer_sRGB = false;\nbool GLAPILOADER_GL_EXT_geometry_shader4 = false;\nbool GLAPILOADER_GL_EXT_gpu_program_parameters = false;\nbool GLAPILOADER_GL_EXT_gpu_shader4 = false;\nbool GLAPILOADER_GL_EXT_histogram = false;\nbool GLAPILOADER_GL_EXT_index_array_formats = false;\nbool GLAPILOADER_GL_EXT_index_func = false;\nbool GLAPILOADER_GL_EXT_index_material = false;\nbool GLAPILOADER_GL_EXT_index_texture = false;\nbool GLAPILOADER_GL_EXT_light_texture = false;\nbool GLAPILOADER_GL_EXT_memory_object = false;\nbool GLAPILOADER_GL_EXT_memory_object_fd = false;\nbool GLAPILOADER_GL_EXT_memory_object_win32 = false;\nbool GLAPILOADER_GL_EXT_misc_attribute = false;\nbool GLAPILOADER_GL_EXT_multi_draw_arrays = false;\nbool GLAPILOADER_GL_EXT_multisample = false;\nbool GLAPILOADER_GL_EXT_multiview_tessellation_geometry_shader = false;\nbool GLAPILOADER_GL_EXT_multiview_texture_multisample = false;\nbool GLAPILOADER_GL_EXT_multiview_timer_query = false;\nbool GLAPILOADER_GL_EXT_packed_depth_stencil = false;\nbool GLAPILOADER_GL_EXT_packed_float = false;\nbool GLAPILOADER_GL_EXT_packed_pixels = false;\nbool GLAPILOADER_GL_EXT_paletted_texture = false;\nbool GLAPILOADER_GL_EXT_pixel_buffer_object = false;\nbool GLAPILOADER_GL_EXT_pixel_transform = false;\nbool GLAPILOADER_GL_EXT_pixel_transform_color_table = false;\nbool GLAPILOADER_GL_EXT_point_parameters = false;\nbool GLAPILOADER_GL_EXT_polygon_offset = false;\nbool GLAPILOADER_GL_EXT_polygon_offset_clamp = false;\nbool GLAPILOADER_GL_EXT_post_depth_coverage = false;\nbool GLAPILOADER_GL_EXT_provoking_vertex = false;\nbool GLAPILOADER_GL_EXT_raster_multisample = false;\nbool GLAPILOADER_GL_EXT_rescale_normal = false;\nbool GLAPILOADER_GL_EXT_semaphore = false;\nbool GLAPILOADER_GL_EXT_semaphore_fd = false;\nbool GLAPILOADER_GL_EXT_semaphore_win32 = false;\nbool GLAPILOADER_GL_EXT_secondary_color = false;\nbool GLAPILOADER_GL_EXT_separate_shader_objects = false;\nbool GLAPILOADER_GL_EXT_separate_specular_color = false;\nbool GLAPILOADER_GL_EXT_shader_framebuffer_fetch = false;\nbool GLAPILOADER_GL_EXT_shader_framebuffer_fetch_non_coherent = false;\nbool GLAPILOADER_GL_EXT_shader_image_load_formatted = false;\nbool GLAPILOADER_GL_EXT_shader_image_load_store = false;\nbool GLAPILOADER_GL_EXT_shader_integer_mix = false;\nbool GLAPILOADER_GL_EXT_shadow_funcs = false;\nbool GLAPILOADER_GL_EXT_shared_texture_palette = false;\nbool GLAPILOADER_GL_EXT_sparse_texture2 = false;\nbool GLAPILOADER_GL_EXT_stencil_clear_tag = false;\nbool GLAPILOADER_GL_EXT_stencil_two_side = false;\nbool GLAPILOADER_GL_EXT_stencil_wrap = false;\nbool GLAPILOADER_GL_EXT_subtexture = false;\nbool GLAPILOADER_GL_EXT_texture = false;\nbool GLAPILOADER_GL_EXT_texture3D = false;\nbool GLAPILOADER_GL_EXT_texture_array = false;\nbool GLAPILOADER_GL_EXT_texture_buffer_object = false;\nbool GLAPILOADER_GL_EXT_texture_compression_latc = false;\nbool GLAPILOADER_GL_EXT_texture_compression_rgtc = false;\nbool GLAPILOADER_GL_EXT_texture_compression_s3tc = false;\nbool GLAPILOADER_GL_EXT_texture_cube_map = false;\nbool GLAPILOADER_GL_EXT_texture_env_add = false;\nbool GLAPILOADER_GL_EXT_texture_env_combine = false;\nbool GLAPILOADER_GL_EXT_texture_env_dot3 = false;\nbool GLAPILOADER_GL_EXT_texture_filter_anisotropic = false;\nbool GLAPILOADER_GL_EXT_texture_filter_minmax = false;\nbool GLAPILOADER_GL_EXT_texture_integer = false;\nbool GLAPILOADER_GL_EXT_texture_lod_bias = false;\nbool GLAPILOADER_GL_EXT_texture_mirror_clamp = false;\nbool GLAPILOADER_GL_EXT_texture_object = false;\nbool GLAPILOADER_GL_EXT_texture_perturb_normal = false;\nbool GLAPILOADER_GL_EXT_texture_sRGB = false;\nbool GLAPILOADER_GL_EXT_texture_sRGB_R8 = false;\nbool GLAPILOADER_GL_EXT_texture_sRGB_decode = false;\nbool GLAPILOADER_GL_EXT_texture_shared_exponent = false;\nbool GLAPILOADER_GL_EXT_texture_snorm = false;\nbool GLAPILOADER_GL_EXT_texture_swizzle = false;\nbool GLAPILOADER_GL_EXT_timer_query = false;\nbool GLAPILOADER_GL_EXT_transform_feedback = false;\nbool GLAPILOADER_GL_EXT_vertex_array = false;\nbool GLAPILOADER_GL_EXT_vertex_array_bgra = false;\nbool GLAPILOADER_GL_EXT_vertex_attrib_64bit = false;\nbool GLAPILOADER_GL_EXT_vertex_shader = false;\nbool GLAPILOADER_GL_EXT_vertex_weighting = false;\nbool GLAPILOADER_GL_EXT_win32_keyed_mutex = false;\nbool GLAPILOADER_GL_EXT_window_rectangles = false;\nbool GLAPILOADER_GL_EXT_x11_sync_object = false;\nbool GLAPILOADER_GL_INTEL_conservative_rasterization = false;\nbool GLAPILOADER_GL_INTEL_fragment_shader_ordering = false;\nbool GLAPILOADER_GL_INTEL_framebuffer_CMAA = false;\nbool GLAPILOADER_GL_INTEL_map_texture = false;\nbool GLAPILOADER_GL_INTEL_blackhole_render = false;\nbool GLAPILOADER_GL_INTEL_parallel_arrays = false;\nbool GLAPILOADER_GL_INTEL_performance_query = false;\nbool GLAPILOADER_GL_KHR_blend_equation_advanced = false;\nbool GLAPILOADER_GL_KHR_blend_equation_advanced_coherent = false;\nbool GLAPILOADER_GL_KHR_context_flush_control = false;\nbool GLAPILOADER_GL_KHR_debug = false;\nbool GLAPILOADER_GL_KHR_no_error = false;\nbool GLAPILOADER_GL_KHR_robust_buffer_access_behavior = false;\nbool GLAPILOADER_GL_KHR_robustness = false;\nbool GLAPILOADER_GL_KHR_shader_subgroup = false;\nbool GLAPILOADER_GL_KHR_texture_compression_astc_hdr = false;\nbool GLAPILOADER_GL_KHR_texture_compression_astc_ldr = false;\nbool GLAPILOADER_GL_KHR_texture_compression_astc_sliced_3d = false;\nbool GLAPILOADER_GL_KHR_parallel_shader_compile = false;\nbool GLAPILOADER_GL_NV_alpha_to_coverage_dither_control = false;\nbool GLAPILOADER_GL_NV_bindless_multi_draw_indirect = false;\nbool GLAPILOADER_GL_NV_bindless_multi_draw_indirect_count = false;\nbool GLAPILOADER_GL_NV_bindless_texture = false;\nbool GLAPILOADER_GL_NV_blend_equation_advanced = false;\nbool GLAPILOADER_GL_NV_blend_equation_advanced_coherent = false;\nbool GLAPILOADER_GL_NV_blend_minmax_factor = false;\nbool GLAPILOADER_GL_NV_blend_square = false;\nbool GLAPILOADER_GL_NV_clip_space_w_scaling = false;\nbool GLAPILOADER_GL_NV_command_list = false;\nbool GLAPILOADER_GL_NV_compute_program5 = false;\nbool GLAPILOADER_GL_NV_compute_shader_derivatives = false;\nbool GLAPILOADER_GL_NV_conditional_render = false;\nbool GLAPILOADER_GL_NV_conservative_raster = false;\nbool GLAPILOADER_GL_NV_conservative_raster_dilate = false;\nbool GLAPILOADER_GL_NV_conservative_raster_pre_snap = false;\nbool GLAPILOADER_GL_NV_conservative_raster_pre_snap_triangles = false;\nbool GLAPILOADER_GL_NV_conservative_raster_underestimation = false;\nbool GLAPILOADER_GL_NV_copy_depth_to_color = false;\nbool GLAPILOADER_GL_NV_copy_image = false;\nbool GLAPILOADER_GL_NV_deep_texture3D = false;\nbool GLAPILOADER_GL_NV_depth_buffer_float = false;\nbool GLAPILOADER_GL_NV_depth_clamp = false;\nbool GLAPILOADER_GL_NV_draw_texture = false;\nbool GLAPILOADER_GL_NV_draw_vulkan_image = false;\nbool GLAPILOADER_GL_NV_evaluators = false;\nbool GLAPILOADER_GL_NV_explicit_multisample = false;\nbool GLAPILOADER_GL_NV_fence = false;\nbool GLAPILOADER_GL_NV_fill_rectangle = false;\nbool GLAPILOADER_GL_NV_float_buffer = false;\nbool GLAPILOADER_GL_NV_fog_distance = false;\nbool GLAPILOADER_GL_NV_fragment_coverage_to_color = false;\nbool GLAPILOADER_GL_NV_fragment_program = false;\nbool GLAPILOADER_GL_NV_fragment_program2 = false;\nbool GLAPILOADER_GL_NV_fragment_program4 = false;\nbool GLAPILOADER_GL_NV_fragment_program_option = false;\nbool GLAPILOADER_GL_NV_fragment_shader_barycentric = false;\nbool GLAPILOADER_GL_NV_fragment_shader_interlock = false;\nbool GLAPILOADER_GL_NV_framebuffer_mixed_samples = false;\nbool GLAPILOADER_GL_NV_framebuffer_multisample_coverage = false;\nbool GLAPILOADER_GL_NV_geometry_program4 = false;\nbool GLAPILOADER_GL_NV_geometry_shader4 = false;\nbool GLAPILOADER_GL_NV_geometry_shader_passthrough = false;\nbool GLAPILOADER_GL_NV_gpu_program4 = false;\nbool GLAPILOADER_GL_NV_gpu_program5 = false;\nbool GLAPILOADER_GL_NV_gpu_program5_mem_extended = false;\nbool GLAPILOADER_GL_NV_gpu_shader5 = false;\nbool GLAPILOADER_GL_NV_half_float = false;\nbool GLAPILOADER_GL_NV_internalformat_sample_query = false;\nbool GLAPILOADER_GL_NV_light_max_exponent = false;\nbool GLAPILOADER_GL_NV_gpu_multicast = false;\nbool GLAPILOADER_GL_NV_memory_attachment = false;\nbool GLAPILOADER_GL_NV_mesh_shader = false;\nbool GLAPILOADER_GL_NV_multisample_coverage = false;\nbool GLAPILOADER_GL_NV_multisample_filter_hint = false;\nbool GLAPILOADER_GL_NV_occlusion_query = false;\nbool GLAPILOADER_GL_NV_packed_depth_stencil = false;\nbool GLAPILOADER_GL_NV_parameter_buffer_object = false;\nbool GLAPILOADER_GL_NV_parameter_buffer_object2 = false;\nbool GLAPILOADER_GL_NV_path_rendering = false;\nbool GLAPILOADER_GL_NV_path_rendering_shared_edge = false;\nbool GLAPILOADER_GL_NV_pixel_data_range = false;\nbool GLAPILOADER_GL_NV_point_sprite = false;\nbool GLAPILOADER_GL_NV_present_video = false;\nbool GLAPILOADER_GL_NV_primitive_restart = false;\nbool GLAPILOADER_GL_NV_query_resource = false;\nbool GLAPILOADER_GL_NV_query_resource_tag = false;\nbool GLAPILOADER_GL_NV_register_combiners = false;\nbool GLAPILOADER_GL_NV_register_combiners2 = false;\nbool GLAPILOADER_GL_NV_representative_fragment_test = false;\nbool GLAPILOADER_GL_NV_robustness_video_memory_purge = false;\nbool GLAPILOADER_GL_NV_sample_locations = false;\nbool GLAPILOADER_GL_NV_sample_mask_override_coverage = false;\nbool GLAPILOADER_GL_NV_scissor_exclusive = false;\nbool GLAPILOADER_GL_NV_shader_atomic_counters = false;\nbool GLAPILOADER_GL_NV_shader_atomic_float = false;\nbool GLAPILOADER_GL_NV_shader_atomic_float64 = false;\nbool GLAPILOADER_GL_NV_shader_atomic_fp16_vector = false;\nbool GLAPILOADER_GL_NV_shader_atomic_int64 = false;\nbool GLAPILOADER_GL_NV_shader_buffer_load = false;\nbool GLAPILOADER_GL_NV_shader_buffer_store = false;\nbool GLAPILOADER_GL_NV_shader_storage_buffer_object = false;\nbool GLAPILOADER_GL_NV_shader_subgroup_partitioned = false;\nbool GLAPILOADER_GL_NV_shader_texture_footprint = false;\nbool GLAPILOADER_GL_NV_shader_thread_group = false;\nbool GLAPILOADER_GL_NV_shader_thread_shuffle = false;\nbool GLAPILOADER_GL_NV_shading_rate_image = false;\nbool GLAPILOADER_GL_NV_stereo_view_rendering = false;\nbool GLAPILOADER_GL_NV_tessellation_program5 = false;\nbool GLAPILOADER_GL_NV_texgen_emboss = false;\nbool GLAPILOADER_GL_NV_texgen_reflection = false;\nbool GLAPILOADER_GL_NV_texture_barrier = false;\nbool GLAPILOADER_GL_NV_texture_compression_vtc = false;\nbool GLAPILOADER_GL_NV_texture_env_combine4 = false;\nbool GLAPILOADER_GL_NV_texture_expand_normal = false;\nbool GLAPILOADER_GL_NV_texture_multisample = false;\nbool GLAPILOADER_GL_NV_texture_rectangle = false;\nbool GLAPILOADER_GL_NV_texture_rectangle_compressed = false;\nbool GLAPILOADER_GL_NV_texture_shader = false;\nbool GLAPILOADER_GL_NV_texture_shader2 = false;\nbool GLAPILOADER_GL_NV_texture_shader3 = false;\nbool GLAPILOADER_GL_NV_transform_feedback = false;\nbool GLAPILOADER_GL_NV_transform_feedback2 = false;\nbool GLAPILOADER_GL_NV_uniform_buffer_unified_memory = false;\nbool GLAPILOADER_GL_NV_vdpau_interop = false;\nbool GLAPILOADER_GL_NV_vdpau_interop2 = false;\nbool GLAPILOADER_GL_NV_vertex_array_range = false;\nbool GLAPILOADER_GL_NV_vertex_array_range2 = false;\nbool GLAPILOADER_GL_NV_vertex_attrib_integer_64bit = false;\nbool GLAPILOADER_GL_NV_vertex_buffer_unified_memory = false;\nbool GLAPILOADER_GL_NV_vertex_program = false;\nbool GLAPILOADER_GL_NV_vertex_program1_1 = false;\nbool GLAPILOADER_GL_NV_vertex_program2 = false;\nbool GLAPILOADER_GL_NV_vertex_program2_option = false;\nbool GLAPILOADER_GL_NV_vertex_program3 = false;\nbool GLAPILOADER_GL_NV_vertex_program4 = false;\nbool GLAPILOADER_GL_NV_video_capture = false;\nbool GLAPILOADER_GL_NV_viewport_array2 = false;\nbool GLAPILOADER_GL_NV_viewport_swizzle = false;\nbool GLAPILOADER_GL_EXT_texture_shadow_lod = false;\n\n\nvoid (GLAPIENTRY *glAccum) (GLenum  op, GLfloat  value) = NULL;\nvoid (GLAPIENTRY *glActiveProgramEXT) (GLuint  program) = NULL;\nvoid (GLAPIENTRY *glActiveShaderProgram) (GLuint  pipeline, GLuint  program) = NULL;\nvoid (GLAPIENTRY *glActiveShaderProgramEXT) (GLuint  pipeline, GLuint  program) = NULL;\nvoid (GLAPIENTRY *glActiveStencilFaceEXT) (GLenum  face) = NULL;\nvoid (GLAPIENTRY *glActiveTexture) (GLenum  texture) = NULL;\nvoid (GLAPIENTRY *glActiveTextureARB) (GLenum  texture) = NULL;\nvoid (GLAPIENTRY *glActiveVaryingNV) (GLuint  program, const GLchar * name) = NULL;\nvoid (GLAPIENTRY *glAlphaFunc) (GLenum  func, GLfloat  ref) = NULL;\nvoid (GLAPIENTRY *glAlphaToCoverageDitherControlNV) (GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glApplyFramebufferAttachmentCMAAINTEL) () = NULL;\nvoid (GLAPIENTRY *glApplyTextureEXT) (GLenum  mode) = NULL;\nGLboolean (GLAPIENTRY *glAcquireKeyedMutexWin32EXT) (GLuint  memory, GLuint64  key, GLuint  timeout) = NULL;\nGLboolean (GLAPIENTRY *glAreProgramsResidentNV) (GLsizei  n, const GLuint * programs, GLboolean * residences) = NULL;\nGLboolean (GLAPIENTRY *glAreTexturesResident) (GLsizei  n, const GLuint * textures, GLboolean * residences) = NULL;\nGLboolean (GLAPIENTRY *glAreTexturesResidentEXT) (GLsizei  n, const GLuint * textures, GLboolean * residences) = NULL;\nvoid (GLAPIENTRY *glArrayElement) (GLint  i) = NULL;\nvoid (GLAPIENTRY *glArrayElementEXT) (GLint  i) = NULL;\nvoid (GLAPIENTRY *glAttachObjectARB) (GLhandleARB  containerObj, GLhandleARB  obj) = NULL;\nvoid (GLAPIENTRY *glAttachShader) (GLuint  program, GLuint  shader) = NULL;\nvoid (GLAPIENTRY *glBegin) (GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glBeginConditionalRender) (GLuint  id, GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glBeginConditionalRenderNV) (GLuint  id, GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glBeginOcclusionQueryNV) (GLuint  id) = NULL;\nvoid (GLAPIENTRY *glBeginPerfMonitorAMD) (GLuint  monitor) = NULL;\nvoid (GLAPIENTRY *glBeginPerfQueryINTEL) (GLuint  queryHandle) = NULL;\nvoid (GLAPIENTRY *glBeginQuery) (GLenum  target, GLuint  id) = NULL;\nvoid (GLAPIENTRY *glBeginQueryARB) (GLenum  target, GLuint  id) = NULL;\nvoid (GLAPIENTRY *glBeginQueryIndexed) (GLenum  target, GLuint  index, GLuint  id) = NULL;\nvoid (GLAPIENTRY *glBeginTransformFeedback) (GLenum  primitiveMode) = NULL;\nvoid (GLAPIENTRY *glBeginTransformFeedbackEXT) (GLenum  primitiveMode) = NULL;\nvoid (GLAPIENTRY *glBeginTransformFeedbackNV) (GLenum  primitiveMode) = NULL;\nvoid (GLAPIENTRY *glBeginVertexShaderEXT) () = NULL;\nvoid (GLAPIENTRY *glBeginVideoCaptureNV) (GLuint  video_capture_slot) = NULL;\nvoid (GLAPIENTRY *glBindAttribLocation) (GLuint  program, GLuint  index, const GLchar * name) = NULL;\nvoid (GLAPIENTRY *glBindAttribLocationARB) (GLhandleARB  programObj, GLuint  index, const GLcharARB * name) = NULL;\nvoid (GLAPIENTRY *glBindBuffer) (GLenum  target, GLuint  buffer) = NULL;\nvoid (GLAPIENTRY *glBindBufferARB) (GLenum  target, GLuint  buffer) = NULL;\nvoid (GLAPIENTRY *glBindBufferBase) (GLenum  target, GLuint  index, GLuint  buffer) = NULL;\nvoid (GLAPIENTRY *glBindBufferBaseEXT) (GLenum  target, GLuint  index, GLuint  buffer) = NULL;\nvoid (GLAPIENTRY *glBindBufferBaseNV) (GLenum  target, GLuint  index, GLuint  buffer) = NULL;\nvoid (GLAPIENTRY *glBindBufferOffsetEXT) (GLenum  target, GLuint  index, GLuint  buffer, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glBindBufferOffsetNV) (GLenum  target, GLuint  index, GLuint  buffer, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glBindBufferRange) (GLenum  target, GLuint  index, GLuint  buffer, GLintptr  offset, GLsizeiptr  size) = NULL;\nvoid (GLAPIENTRY *glBindBufferRangeEXT) (GLenum  target, GLuint  index, GLuint  buffer, GLintptr  offset, GLsizeiptr  size) = NULL;\nvoid (GLAPIENTRY *glBindBufferRangeNV) (GLenum  target, GLuint  index, GLuint  buffer, GLintptr  offset, GLsizeiptr  size) = NULL;\nvoid (GLAPIENTRY *glBindBuffersBase) (GLenum  target, GLuint  first, GLsizei  count, const GLuint * buffers) = NULL;\nvoid (GLAPIENTRY *glBindBuffersRange) (GLenum  target, GLuint  first, GLsizei  count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes) = NULL;\nvoid (GLAPIENTRY *glBindFragDataLocation) (GLuint  program, GLuint  color, const GLchar * name) = NULL;\nvoid (GLAPIENTRY *glBindFragDataLocationEXT) (GLuint  program, GLuint  color, const GLchar * name) = NULL;\nvoid (GLAPIENTRY *glBindFragDataLocationIndexed) (GLuint  program, GLuint  colorNumber, GLuint  index, const GLchar * name) = NULL;\nvoid (GLAPIENTRY *glBindFramebuffer) (GLenum  target, GLuint  framebuffer) = NULL;\nvoid (GLAPIENTRY *glBindFramebufferEXT) (GLenum  target, GLuint  framebuffer) = NULL;\nvoid (GLAPIENTRY *glBindImageTexture) (GLuint  unit, GLuint  texture, GLint  level, GLboolean  layered, GLint  layer, GLenum  access, GLenum  format) = NULL;\nvoid (GLAPIENTRY *glBindImageTextureEXT) (GLuint  index, GLuint  texture, GLint  level, GLboolean  layered, GLint  layer, GLenum  access, GLint  format) = NULL;\nvoid (GLAPIENTRY *glBindImageTextures) (GLuint  first, GLsizei  count, const GLuint * textures) = NULL;\nGLuint (GLAPIENTRY *glBindLightParameterEXT) (GLenum  light, GLenum  value) = NULL;\nGLuint (GLAPIENTRY *glBindMaterialParameterEXT) (GLenum  face, GLenum  value) = NULL;\nvoid (GLAPIENTRY *glBindMultiTextureEXT) (GLenum  texunit, GLenum  target, GLuint  texture) = NULL;\nGLuint (GLAPIENTRY *glBindParameterEXT) (GLenum  value) = NULL;\nvoid (GLAPIENTRY *glBindProgramARB) (GLenum  target, GLuint  program) = NULL;\nvoid (GLAPIENTRY *glBindProgramNV) (GLenum  target, GLuint  id) = NULL;\nvoid (GLAPIENTRY *glBindProgramPipeline) (GLuint  pipeline) = NULL;\nvoid (GLAPIENTRY *glBindProgramPipelineEXT) (GLuint  pipeline) = NULL;\nvoid (GLAPIENTRY *glBindRenderbuffer) (GLenum  target, GLuint  renderbuffer) = NULL;\nvoid (GLAPIENTRY *glBindRenderbufferEXT) (GLenum  target, GLuint  renderbuffer) = NULL;\nvoid (GLAPIENTRY *glBindSampler) (GLuint  unit, GLuint  sampler) = NULL;\nvoid (GLAPIENTRY *glBindSamplers) (GLuint  first, GLsizei  count, const GLuint * samplers) = NULL;\nvoid (GLAPIENTRY *glBindShadingRateImageNV) (GLuint  texture) = NULL;\nGLuint (GLAPIENTRY *glBindTexGenParameterEXT) (GLenum  unit, GLenum  coord, GLenum  value) = NULL;\nvoid (GLAPIENTRY *glBindTexture) (GLenum  target, GLuint  texture) = NULL;\nvoid (GLAPIENTRY *glBindTextureEXT) (GLenum  target, GLuint  texture) = NULL;\nvoid (GLAPIENTRY *glBindTextureUnit) (GLuint  unit, GLuint  texture) = NULL;\nGLuint (GLAPIENTRY *glBindTextureUnitParameterEXT) (GLenum  unit, GLenum  value) = NULL;\nvoid (GLAPIENTRY *glBindTextures) (GLuint  first, GLsizei  count, const GLuint * textures) = NULL;\nvoid (GLAPIENTRY *glBindTransformFeedback) (GLenum  target, GLuint  id) = NULL;\nvoid (GLAPIENTRY *glBindTransformFeedbackNV) (GLenum  target, GLuint  id) = NULL;\nvoid (GLAPIENTRY *glBindVertexArray) (GLuint  array) = NULL;\nvoid (GLAPIENTRY *glBindVertexArrayAPPLE) (GLuint  array) = NULL;\nvoid (GLAPIENTRY *glBindVertexBuffer) (GLuint  bindingindex, GLuint  buffer, GLintptr  offset, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glBindVertexBuffers) (GLuint  first, GLsizei  count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides) = NULL;\nvoid (GLAPIENTRY *glBindVertexShaderEXT) (GLuint  id) = NULL;\nvoid (GLAPIENTRY *glBindVideoCaptureStreamBufferNV) (GLuint  video_capture_slot, GLuint  stream, GLenum  frame_region, GLintptrARB  offset) = NULL;\nvoid (GLAPIENTRY *glBindVideoCaptureStreamTextureNV) (GLuint  video_capture_slot, GLuint  stream, GLenum  frame_region, GLenum  target, GLuint  texture) = NULL;\nvoid (GLAPIENTRY *glBinormal3bEXT) (GLbyte  bx, GLbyte  by, GLbyte  bz) = NULL;\nvoid (GLAPIENTRY *glBinormal3bvEXT) (const GLbyte * v) = NULL;\nvoid (GLAPIENTRY *glBinormal3dEXT) (GLdouble  bx, GLdouble  by, GLdouble  bz) = NULL;\nvoid (GLAPIENTRY *glBinormal3dvEXT) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glBinormal3fEXT) (GLfloat  bx, GLfloat  by, GLfloat  bz) = NULL;\nvoid (GLAPIENTRY *glBinormal3fvEXT) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glBinormal3iEXT) (GLint  bx, GLint  by, GLint  bz) = NULL;\nvoid (GLAPIENTRY *glBinormal3ivEXT) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glBinormal3sEXT) (GLshort  bx, GLshort  by, GLshort  bz) = NULL;\nvoid (GLAPIENTRY *glBinormal3svEXT) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glBinormalPointerEXT) (GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glBitmap) (GLsizei  width, GLsizei  height, GLfloat  xorig, GLfloat  yorig, GLfloat  xmove, GLfloat  ymove, const GLubyte * bitmap) = NULL;\nvoid (GLAPIENTRY *glBlendBarrierKHR) () = NULL;\nvoid (GLAPIENTRY *glBlendBarrierNV) () = NULL;\nvoid (GLAPIENTRY *glBlendColor) (GLfloat  red, GLfloat  green, GLfloat  blue, GLfloat  alpha) = NULL;\nvoid (GLAPIENTRY *glBlendColorEXT) (GLfloat  red, GLfloat  green, GLfloat  blue, GLfloat  alpha) = NULL;\nvoid (GLAPIENTRY *glBlendEquation) (GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glBlendEquationEXT) (GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glBlendEquationIndexedAMD) (GLuint  buf, GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glBlendEquationSeparate) (GLenum  modeRGB, GLenum  modeAlpha) = NULL;\nvoid (GLAPIENTRY *glBlendEquationSeparateEXT) (GLenum  modeRGB, GLenum  modeAlpha) = NULL;\nvoid (GLAPIENTRY *glBlendEquationSeparateIndexedAMD) (GLuint  buf, GLenum  modeRGB, GLenum  modeAlpha) = NULL;\nvoid (GLAPIENTRY *glBlendEquationSeparatei) (GLuint  buf, GLenum  modeRGB, GLenum  modeAlpha) = NULL;\nvoid (GLAPIENTRY *glBlendEquationSeparateiARB) (GLuint  buf, GLenum  modeRGB, GLenum  modeAlpha) = NULL;\nvoid (GLAPIENTRY *glBlendEquationi) (GLuint  buf, GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glBlendEquationiARB) (GLuint  buf, GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glBlendFunc) (GLenum  sfactor, GLenum  dfactor) = NULL;\nvoid (GLAPIENTRY *glBlendFuncIndexedAMD) (GLuint  buf, GLenum  src, GLenum  dst) = NULL;\nvoid (GLAPIENTRY *glBlendFuncSeparate) (GLenum  sfactorRGB, GLenum  dfactorRGB, GLenum  sfactorAlpha, GLenum  dfactorAlpha) = NULL;\nvoid (GLAPIENTRY *glBlendFuncSeparateEXT) (GLenum  sfactorRGB, GLenum  dfactorRGB, GLenum  sfactorAlpha, GLenum  dfactorAlpha) = NULL;\nvoid (GLAPIENTRY *glBlendFuncSeparateIndexedAMD) (GLuint  buf, GLenum  srcRGB, GLenum  dstRGB, GLenum  srcAlpha, GLenum  dstAlpha) = NULL;\nvoid (GLAPIENTRY *glBlendFuncSeparatei) (GLuint  buf, GLenum  srcRGB, GLenum  dstRGB, GLenum  srcAlpha, GLenum  dstAlpha) = NULL;\nvoid (GLAPIENTRY *glBlendFuncSeparateiARB) (GLuint  buf, GLenum  srcRGB, GLenum  dstRGB, GLenum  srcAlpha, GLenum  dstAlpha) = NULL;\nvoid (GLAPIENTRY *glBlendFunci) (GLuint  buf, GLenum  src, GLenum  dst) = NULL;\nvoid (GLAPIENTRY *glBlendFunciARB) (GLuint  buf, GLenum  src, GLenum  dst) = NULL;\nvoid (GLAPIENTRY *glBlendParameteriNV) (GLenum  pname, GLint  value) = NULL;\nvoid (GLAPIENTRY *glBlitFramebuffer) (GLint  srcX0, GLint  srcY0, GLint  srcX1, GLint  srcY1, GLint  dstX0, GLint  dstY0, GLint  dstX1, GLint  dstY1, GLbitfield  mask, GLenum  filter) = NULL;\nvoid (GLAPIENTRY *glBlitFramebufferEXT) (GLint  srcX0, GLint  srcY0, GLint  srcX1, GLint  srcY1, GLint  dstX0, GLint  dstY0, GLint  dstX1, GLint  dstY1, GLbitfield  mask, GLenum  filter) = NULL;\nvoid (GLAPIENTRY *glBlitNamedFramebuffer) (GLuint  readFramebuffer, GLuint  drawFramebuffer, GLint  srcX0, GLint  srcY0, GLint  srcX1, GLint  srcY1, GLint  dstX0, GLint  dstY0, GLint  dstX1, GLint  dstY1, GLbitfield  mask, GLenum  filter) = NULL;\nvoid (GLAPIENTRY *glBufferAddressRangeNV) (GLenum  pname, GLuint  index, GLuint64EXT  address, GLsizeiptr  length) = NULL;\nvoid (GLAPIENTRY *glBufferAttachMemoryNV) (GLenum  target, GLuint  memory, GLuint64  offset) = NULL;\nvoid (GLAPIENTRY *glBufferData) (GLenum  target, GLsizeiptr  size, const void * data, GLenum  usage) = NULL;\nvoid (GLAPIENTRY *glBufferDataARB) (GLenum  target, GLsizeiptrARB  size, const void * data, GLenum  usage) = NULL;\nvoid (GLAPIENTRY *glBufferPageCommitmentARB) (GLenum  target, GLintptr  offset, GLsizeiptr  size, GLboolean  commit) = NULL;\nvoid (GLAPIENTRY *glBufferParameteriAPPLE) (GLenum  target, GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glBufferStorage) (GLenum  target, GLsizeiptr  size, const void * data, GLbitfield  flags) = NULL;\nvoid (GLAPIENTRY *glBufferStorageExternalEXT) (GLenum  target, GLintptr  offset, GLsizeiptr  size, GLeglClientBufferEXT  clientBuffer, GLbitfield  flags) = NULL;\nvoid (GLAPIENTRY *glBufferStorageMemEXT) (GLenum  target, GLsizeiptr  size, GLuint  memory, GLuint64  offset) = NULL;\nvoid (GLAPIENTRY *glBufferSubData) (GLenum  target, GLintptr  offset, GLsizeiptr  size, const void * data) = NULL;\nvoid (GLAPIENTRY *glBufferSubDataARB) (GLenum  target, GLintptrARB  offset, GLsizeiptrARB  size, const void * data) = NULL;\nvoid (GLAPIENTRY *glCallCommandListNV) (GLuint  list) = NULL;\nvoid (GLAPIENTRY *glCallList) (GLuint  list) = NULL;\nvoid (GLAPIENTRY *glCallLists) (GLsizei  n, GLenum  type, const void * lists) = NULL;\nGLenum (GLAPIENTRY *glCheckFramebufferStatus) (GLenum  target) = NULL;\nGLenum (GLAPIENTRY *glCheckFramebufferStatusEXT) (GLenum  target) = NULL;\nGLenum (GLAPIENTRY *glCheckNamedFramebufferStatus) (GLuint  framebuffer, GLenum  target) = NULL;\nGLenum (GLAPIENTRY *glCheckNamedFramebufferStatusEXT) (GLuint  framebuffer, GLenum  target) = NULL;\nvoid (GLAPIENTRY *glClampColor) (GLenum  target, GLenum  clamp) = NULL;\nvoid (GLAPIENTRY *glClampColorARB) (GLenum  target, GLenum  clamp) = NULL;\nvoid (GLAPIENTRY *glClear) (GLbitfield  mask) = NULL;\nvoid (GLAPIENTRY *glClearAccum) (GLfloat  red, GLfloat  green, GLfloat  blue, GLfloat  alpha) = NULL;\nvoid (GLAPIENTRY *glClearBufferData) (GLenum  target, GLenum  internalformat, GLenum  format, GLenum  type, const void * data) = NULL;\nvoid (GLAPIENTRY *glClearBufferSubData) (GLenum  target, GLenum  internalformat, GLintptr  offset, GLsizeiptr  size, GLenum  format, GLenum  type, const void * data) = NULL;\nvoid (GLAPIENTRY *glClearBufferfi) (GLenum  buffer, GLint  drawbuffer, GLfloat  depth, GLint  stencil) = NULL;\nvoid (GLAPIENTRY *glClearBufferfv) (GLenum  buffer, GLint  drawbuffer, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glClearBufferiv) (GLenum  buffer, GLint  drawbuffer, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glClearBufferuiv) (GLenum  buffer, GLint  drawbuffer, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glClearColor) (GLfloat  red, GLfloat  green, GLfloat  blue, GLfloat  alpha) = NULL;\nvoid (GLAPIENTRY *glClearColorIiEXT) (GLint  red, GLint  green, GLint  blue, GLint  alpha) = NULL;\nvoid (GLAPIENTRY *glClearColorIuiEXT) (GLuint  red, GLuint  green, GLuint  blue, GLuint  alpha) = NULL;\nvoid (GLAPIENTRY *glClearDepth) (GLdouble  depth) = NULL;\nvoid (GLAPIENTRY *glClearDepthdNV) (GLdouble  depth) = NULL;\nvoid (GLAPIENTRY *glClearDepthf) (GLfloat  d) = NULL;\nvoid (GLAPIENTRY *glClearIndex) (GLfloat  c) = NULL;\nvoid (GLAPIENTRY *glClearNamedBufferData) (GLuint  buffer, GLenum  internalformat, GLenum  format, GLenum  type, const void * data) = NULL;\nvoid (GLAPIENTRY *glClearNamedBufferDataEXT) (GLuint  buffer, GLenum  internalformat, GLenum  format, GLenum  type, const void * data) = NULL;\nvoid (GLAPIENTRY *glClearNamedBufferSubData) (GLuint  buffer, GLenum  internalformat, GLintptr  offset, GLsizeiptr  size, GLenum  format, GLenum  type, const void * data) = NULL;\nvoid (GLAPIENTRY *glClearNamedBufferSubDataEXT) (GLuint  buffer, GLenum  internalformat, GLsizeiptr  offset, GLsizeiptr  size, GLenum  format, GLenum  type, const void * data) = NULL;\nvoid (GLAPIENTRY *glClearNamedFramebufferfi) (GLuint  framebuffer, GLenum  buffer, GLint  drawbuffer, GLfloat  depth, GLint  stencil) = NULL;\nvoid (GLAPIENTRY *glClearNamedFramebufferfv) (GLuint  framebuffer, GLenum  buffer, GLint  drawbuffer, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glClearNamedFramebufferiv) (GLuint  framebuffer, GLenum  buffer, GLint  drawbuffer, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glClearNamedFramebufferuiv) (GLuint  framebuffer, GLenum  buffer, GLint  drawbuffer, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glClearStencil) (GLint  s) = NULL;\nvoid (GLAPIENTRY *glClearTexImage) (GLuint  texture, GLint  level, GLenum  format, GLenum  type, const void * data) = NULL;\nvoid (GLAPIENTRY *glClearTexSubImage) (GLuint  texture, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLenum  type, const void * data) = NULL;\nvoid (GLAPIENTRY *glClientActiveTexture) (GLenum  texture) = NULL;\nvoid (GLAPIENTRY *glClientActiveTextureARB) (GLenum  texture) = NULL;\nvoid (GLAPIENTRY *glClientAttribDefaultEXT) (GLbitfield  mask) = NULL;\nGLenum (GLAPIENTRY *glClientWaitSync) (GLsync  sync, GLbitfield  flags, GLuint64  timeout) = NULL;\nvoid (GLAPIENTRY *glClipControl) (GLenum  origin, GLenum  depth) = NULL;\nvoid (GLAPIENTRY *glClipPlane) (GLenum  plane, const GLdouble * equation) = NULL;\nvoid (GLAPIENTRY *glColor3b) (GLbyte  red, GLbyte  green, GLbyte  blue) = NULL;\nvoid (GLAPIENTRY *glColor3bv) (const GLbyte * v) = NULL;\nvoid (GLAPIENTRY *glColor3d) (GLdouble  red, GLdouble  green, GLdouble  blue) = NULL;\nvoid (GLAPIENTRY *glColor3dv) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glColor3f) (GLfloat  red, GLfloat  green, GLfloat  blue) = NULL;\nvoid (GLAPIENTRY *glColor3fv) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glColor3hNV) (GLhalfNV  red, GLhalfNV  green, GLhalfNV  blue) = NULL;\nvoid (GLAPIENTRY *glColor3hvNV) (const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glColor3i) (GLint  red, GLint  green, GLint  blue) = NULL;\nvoid (GLAPIENTRY *glColor3iv) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glColor3s) (GLshort  red, GLshort  green, GLshort  blue) = NULL;\nvoid (GLAPIENTRY *glColor3sv) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glColor3ub) (GLubyte  red, GLubyte  green, GLubyte  blue) = NULL;\nvoid (GLAPIENTRY *glColor3ubv) (const GLubyte * v) = NULL;\nvoid (GLAPIENTRY *glColor3ui) (GLuint  red, GLuint  green, GLuint  blue) = NULL;\nvoid (GLAPIENTRY *glColor3uiv) (const GLuint * v) = NULL;\nvoid (GLAPIENTRY *glColor3us) (GLushort  red, GLushort  green, GLushort  blue) = NULL;\nvoid (GLAPIENTRY *glColor3usv) (const GLushort * v) = NULL;\nvoid (GLAPIENTRY *glColor4b) (GLbyte  red, GLbyte  green, GLbyte  blue, GLbyte  alpha) = NULL;\nvoid (GLAPIENTRY *glColor4bv) (const GLbyte * v) = NULL;\nvoid (GLAPIENTRY *glColor4d) (GLdouble  red, GLdouble  green, GLdouble  blue, GLdouble  alpha) = NULL;\nvoid (GLAPIENTRY *glColor4dv) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glColor4f) (GLfloat  red, GLfloat  green, GLfloat  blue, GLfloat  alpha) = NULL;\nvoid (GLAPIENTRY *glColor4fv) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glColor4hNV) (GLhalfNV  red, GLhalfNV  green, GLhalfNV  blue, GLhalfNV  alpha) = NULL;\nvoid (GLAPIENTRY *glColor4hvNV) (const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glColor4i) (GLint  red, GLint  green, GLint  blue, GLint  alpha) = NULL;\nvoid (GLAPIENTRY *glColor4iv) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glColor4s) (GLshort  red, GLshort  green, GLshort  blue, GLshort  alpha) = NULL;\nvoid (GLAPIENTRY *glColor4sv) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glColor4ub) (GLubyte  red, GLubyte  green, GLubyte  blue, GLubyte  alpha) = NULL;\nvoid (GLAPIENTRY *glColor4ubv) (const GLubyte * v) = NULL;\nvoid (GLAPIENTRY *glColor4ui) (GLuint  red, GLuint  green, GLuint  blue, GLuint  alpha) = NULL;\nvoid (GLAPIENTRY *glColor4uiv) (const GLuint * v) = NULL;\nvoid (GLAPIENTRY *glColor4us) (GLushort  red, GLushort  green, GLushort  blue, GLushort  alpha) = NULL;\nvoid (GLAPIENTRY *glColor4usv) (const GLushort * v) = NULL;\nvoid (GLAPIENTRY *glColorFormatNV) (GLint  size, GLenum  type, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glColorMask) (GLboolean  red, GLboolean  green, GLboolean  blue, GLboolean  alpha) = NULL;\nvoid (GLAPIENTRY *glColorMaskIndexedEXT) (GLuint  index, GLboolean  r, GLboolean  g, GLboolean  b, GLboolean  a) = NULL;\nvoid (GLAPIENTRY *glColorMaski) (GLuint  index, GLboolean  r, GLboolean  g, GLboolean  b, GLboolean  a) = NULL;\nvoid (GLAPIENTRY *glColorMaterial) (GLenum  face, GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glColorP3ui) (GLenum  type, GLuint  color) = NULL;\nvoid (GLAPIENTRY *glColorP3uiv) (GLenum  type, const GLuint * color) = NULL;\nvoid (GLAPIENTRY *glColorP4ui) (GLenum  type, GLuint  color) = NULL;\nvoid (GLAPIENTRY *glColorP4uiv) (GLenum  type, const GLuint * color) = NULL;\nvoid (GLAPIENTRY *glColorPointer) (GLint  size, GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glColorPointerEXT) (GLint  size, GLenum  type, GLsizei  stride, GLsizei  count, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glColorPointervINTEL) (GLint  size, GLenum  type, const void ** pointer) = NULL;\nvoid (GLAPIENTRY *glColorSubTable) (GLenum  target, GLsizei  start, GLsizei  count, GLenum  format, GLenum  type, const void * data) = NULL;\nvoid (GLAPIENTRY *glColorSubTableEXT) (GLenum  target, GLsizei  start, GLsizei  count, GLenum  format, GLenum  type, const void * data) = NULL;\nvoid (GLAPIENTRY *glColorTable) (GLenum  target, GLenum  internalformat, GLsizei  width, GLenum  format, GLenum  type, const void * table) = NULL;\nvoid (GLAPIENTRY *glColorTableEXT) (GLenum  target, GLenum  internalFormat, GLsizei  width, GLenum  format, GLenum  type, const void * table) = NULL;\nvoid (GLAPIENTRY *glColorTableParameterfv) (GLenum  target, GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glColorTableParameteriv) (GLenum  target, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glCombinerInputNV) (GLenum  stage, GLenum  portion, GLenum  variable, GLenum  input, GLenum  mapping, GLenum  componentUsage) = NULL;\nvoid (GLAPIENTRY *glCombinerOutputNV) (GLenum  stage, GLenum  portion, GLenum  abOutput, GLenum  cdOutput, GLenum  sumOutput, GLenum  scale, GLenum  bias, GLboolean  abDotProduct, GLboolean  cdDotProduct, GLboolean  muxSum) = NULL;\nvoid (GLAPIENTRY *glCombinerParameterfNV) (GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glCombinerParameterfvNV) (GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glCombinerParameteriNV) (GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glCombinerParameterivNV) (GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glCombinerStageParameterfvNV) (GLenum  stage, GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glCommandListSegmentsNV) (GLuint  list, GLuint  segments) = NULL;\nvoid (GLAPIENTRY *glCompileCommandListNV) (GLuint  list) = NULL;\nvoid (GLAPIENTRY *glCompileShader) (GLuint  shader) = NULL;\nvoid (GLAPIENTRY *glCompileShaderARB) (GLhandleARB  shaderObj) = NULL;\nvoid (GLAPIENTRY *glCompileShaderIncludeARB) (GLuint  shader, GLsizei  count, const GLchar *const* path, const GLint * length) = NULL;\nvoid (GLAPIENTRY *glCompressedMultiTexImage1DEXT) (GLenum  texunit, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLint  border, GLsizei  imageSize, const void * bits) = NULL;\nvoid (GLAPIENTRY *glCompressedMultiTexImage2DEXT) (GLenum  texunit, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLint  border, GLsizei  imageSize, const void * bits) = NULL;\nvoid (GLAPIENTRY *glCompressedMultiTexImage3DEXT) (GLenum  texunit, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLint  border, GLsizei  imageSize, const void * bits) = NULL;\nvoid (GLAPIENTRY *glCompressedMultiTexSubImage1DEXT) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLsizei  imageSize, const void * bits) = NULL;\nvoid (GLAPIENTRY *glCompressedMultiTexSubImage2DEXT) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLsizei  width, GLsizei  height, GLenum  format, GLsizei  imageSize, const void * bits) = NULL;\nvoid (GLAPIENTRY *glCompressedMultiTexSubImage3DEXT) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLsizei  imageSize, const void * bits) = NULL;\nvoid (GLAPIENTRY *glCompressedTexImage1D) (GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLint  border, GLsizei  imageSize, const void * data) = NULL;\nvoid (GLAPIENTRY *glCompressedTexImage1DARB) (GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLint  border, GLsizei  imageSize, const void * data) = NULL;\nvoid (GLAPIENTRY *glCompressedTexImage2D) (GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLint  border, GLsizei  imageSize, const void * data) = NULL;\nvoid (GLAPIENTRY *glCompressedTexImage2DARB) (GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLint  border, GLsizei  imageSize, const void * data) = NULL;\nvoid (GLAPIENTRY *glCompressedTexImage3D) (GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLint  border, GLsizei  imageSize, const void * data) = NULL;\nvoid (GLAPIENTRY *glCompressedTexImage3DARB) (GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLint  border, GLsizei  imageSize, const void * data) = NULL;\nvoid (GLAPIENTRY *glCompressedTexSubImage1D) (GLenum  target, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLsizei  imageSize, const void * data) = NULL;\nvoid (GLAPIENTRY *glCompressedTexSubImage1DARB) (GLenum  target, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLsizei  imageSize, const void * data) = NULL;\nvoid (GLAPIENTRY *glCompressedTexSubImage2D) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLsizei  width, GLsizei  height, GLenum  format, GLsizei  imageSize, const void * data) = NULL;\nvoid (GLAPIENTRY *glCompressedTexSubImage2DARB) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLsizei  width, GLsizei  height, GLenum  format, GLsizei  imageSize, const void * data) = NULL;\nvoid (GLAPIENTRY *glCompressedTexSubImage3D) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLsizei  imageSize, const void * data) = NULL;\nvoid (GLAPIENTRY *glCompressedTexSubImage3DARB) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLsizei  imageSize, const void * data) = NULL;\nvoid (GLAPIENTRY *glCompressedTextureImage1DEXT) (GLuint  texture, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLint  border, GLsizei  imageSize, const void * bits) = NULL;\nvoid (GLAPIENTRY *glCompressedTextureImage2DEXT) (GLuint  texture, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLint  border, GLsizei  imageSize, const void * bits) = NULL;\nvoid (GLAPIENTRY *glCompressedTextureImage3DEXT) (GLuint  texture, GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLint  border, GLsizei  imageSize, const void * bits) = NULL;\nvoid (GLAPIENTRY *glCompressedTextureSubImage1D) (GLuint  texture, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLsizei  imageSize, const void * data) = NULL;\nvoid (GLAPIENTRY *glCompressedTextureSubImage1DEXT) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLsizei  imageSize, const void * bits) = NULL;\nvoid (GLAPIENTRY *glCompressedTextureSubImage2D) (GLuint  texture, GLint  level, GLint  xoffset, GLint  yoffset, GLsizei  width, GLsizei  height, GLenum  format, GLsizei  imageSize, const void * data) = NULL;\nvoid (GLAPIENTRY *glCompressedTextureSubImage2DEXT) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLsizei  width, GLsizei  height, GLenum  format, GLsizei  imageSize, const void * bits) = NULL;\nvoid (GLAPIENTRY *glCompressedTextureSubImage3D) (GLuint  texture, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLsizei  imageSize, const void * data) = NULL;\nvoid (GLAPIENTRY *glCompressedTextureSubImage3DEXT) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLsizei  imageSize, const void * bits) = NULL;\nvoid (GLAPIENTRY *glConservativeRasterParameterfNV) (GLenum  pname, GLfloat  value) = NULL;\nvoid (GLAPIENTRY *glConservativeRasterParameteriNV) (GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glConvolutionFilter1D) (GLenum  target, GLenum  internalformat, GLsizei  width, GLenum  format, GLenum  type, const void * image) = NULL;\nvoid (GLAPIENTRY *glConvolutionFilter1DEXT) (GLenum  target, GLenum  internalformat, GLsizei  width, GLenum  format, GLenum  type, const void * image) = NULL;\nvoid (GLAPIENTRY *glConvolutionFilter2D) (GLenum  target, GLenum  internalformat, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, const void * image) = NULL;\nvoid (GLAPIENTRY *glConvolutionFilter2DEXT) (GLenum  target, GLenum  internalformat, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, const void * image) = NULL;\nvoid (GLAPIENTRY *glConvolutionParameterf) (GLenum  target, GLenum  pname, GLfloat  params) = NULL;\nvoid (GLAPIENTRY *glConvolutionParameterfEXT) (GLenum  target, GLenum  pname, GLfloat  params) = NULL;\nvoid (GLAPIENTRY *glConvolutionParameterfv) (GLenum  target, GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glConvolutionParameterfvEXT) (GLenum  target, GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glConvolutionParameteri) (GLenum  target, GLenum  pname, GLint  params) = NULL;\nvoid (GLAPIENTRY *glConvolutionParameteriEXT) (GLenum  target, GLenum  pname, GLint  params) = NULL;\nvoid (GLAPIENTRY *glConvolutionParameteriv) (GLenum  target, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glConvolutionParameterivEXT) (GLenum  target, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glCopyBufferSubData) (GLenum  readTarget, GLenum  writeTarget, GLintptr  readOffset, GLintptr  writeOffset, GLsizeiptr  size) = NULL;\nvoid (GLAPIENTRY *glCopyColorSubTable) (GLenum  target, GLsizei  start, GLint  x, GLint  y, GLsizei  width) = NULL;\nvoid (GLAPIENTRY *glCopyColorSubTableEXT) (GLenum  target, GLsizei  start, GLint  x, GLint  y, GLsizei  width) = NULL;\nvoid (GLAPIENTRY *glCopyColorTable) (GLenum  target, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width) = NULL;\nvoid (GLAPIENTRY *glCopyConvolutionFilter1D) (GLenum  target, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width) = NULL;\nvoid (GLAPIENTRY *glCopyConvolutionFilter1DEXT) (GLenum  target, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width) = NULL;\nvoid (GLAPIENTRY *glCopyConvolutionFilter2D) (GLenum  target, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glCopyConvolutionFilter2DEXT) (GLenum  target, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glCopyImageSubData) (GLuint  srcName, GLenum  srcTarget, GLint  srcLevel, GLint  srcX, GLint  srcY, GLint  srcZ, GLuint  dstName, GLenum  dstTarget, GLint  dstLevel, GLint  dstX, GLint  dstY, GLint  dstZ, GLsizei  srcWidth, GLsizei  srcHeight, GLsizei  srcDepth) = NULL;\nvoid (GLAPIENTRY *glCopyImageSubDataNV) (GLuint  srcName, GLenum  srcTarget, GLint  srcLevel, GLint  srcX, GLint  srcY, GLint  srcZ, GLuint  dstName, GLenum  dstTarget, GLint  dstLevel, GLint  dstX, GLint  dstY, GLint  dstZ, GLsizei  width, GLsizei  height, GLsizei  depth) = NULL;\nvoid (GLAPIENTRY *glCopyMultiTexImage1DEXT) (GLenum  texunit, GLenum  target, GLint  level, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLint  border) = NULL;\nvoid (GLAPIENTRY *glCopyMultiTexImage2DEXT) (GLenum  texunit, GLenum  target, GLint  level, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLsizei  height, GLint  border) = NULL;\nvoid (GLAPIENTRY *glCopyMultiTexSubImage1DEXT) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLint  x, GLint  y, GLsizei  width) = NULL;\nvoid (GLAPIENTRY *glCopyMultiTexSubImage2DEXT) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  x, GLint  y, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glCopyMultiTexSubImage3DEXT) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLint  x, GLint  y, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glCopyNamedBufferSubData) (GLuint  readBuffer, GLuint  writeBuffer, GLintptr  readOffset, GLintptr  writeOffset, GLsizeiptr  size) = NULL;\nvoid (GLAPIENTRY *glCopyPathNV) (GLuint  resultPath, GLuint  srcPath) = NULL;\nvoid (GLAPIENTRY *glCopyPixels) (GLint  x, GLint  y, GLsizei  width, GLsizei  height, GLenum  type) = NULL;\nvoid (GLAPIENTRY *glCopyTexImage1D) (GLenum  target, GLint  level, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLint  border) = NULL;\nvoid (GLAPIENTRY *glCopyTexImage1DEXT) (GLenum  target, GLint  level, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLint  border) = NULL;\nvoid (GLAPIENTRY *glCopyTexImage2D) (GLenum  target, GLint  level, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLsizei  height, GLint  border) = NULL;\nvoid (GLAPIENTRY *glCopyTexImage2DEXT) (GLenum  target, GLint  level, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLsizei  height, GLint  border) = NULL;\nvoid (GLAPIENTRY *glCopyTexSubImage1D) (GLenum  target, GLint  level, GLint  xoffset, GLint  x, GLint  y, GLsizei  width) = NULL;\nvoid (GLAPIENTRY *glCopyTexSubImage1DEXT) (GLenum  target, GLint  level, GLint  xoffset, GLint  x, GLint  y, GLsizei  width) = NULL;\nvoid (GLAPIENTRY *glCopyTexSubImage2D) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  x, GLint  y, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glCopyTexSubImage2DEXT) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  x, GLint  y, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glCopyTexSubImage3D) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLint  x, GLint  y, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glCopyTexSubImage3DEXT) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLint  x, GLint  y, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glCopyTextureImage1DEXT) (GLuint  texture, GLenum  target, GLint  level, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLint  border) = NULL;\nvoid (GLAPIENTRY *glCopyTextureImage2DEXT) (GLuint  texture, GLenum  target, GLint  level, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width, GLsizei  height, GLint  border) = NULL;\nvoid (GLAPIENTRY *glCopyTextureSubImage1D) (GLuint  texture, GLint  level, GLint  xoffset, GLint  x, GLint  y, GLsizei  width) = NULL;\nvoid (GLAPIENTRY *glCopyTextureSubImage1DEXT) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLint  x, GLint  y, GLsizei  width) = NULL;\nvoid (GLAPIENTRY *glCopyTextureSubImage2D) (GLuint  texture, GLint  level, GLint  xoffset, GLint  yoffset, GLint  x, GLint  y, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glCopyTextureSubImage2DEXT) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  x, GLint  y, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glCopyTextureSubImage3D) (GLuint  texture, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLint  x, GLint  y, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glCopyTextureSubImage3DEXT) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLint  x, GLint  y, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glCoverFillPathInstancedNV) (GLsizei  numPaths, GLenum  pathNameType, const void * paths, GLuint  pathBase, GLenum  coverMode, GLenum  transformType, const GLfloat * transformValues) = NULL;\nvoid (GLAPIENTRY *glCoverFillPathNV) (GLuint  path, GLenum  coverMode) = NULL;\nvoid (GLAPIENTRY *glCoverStrokePathInstancedNV) (GLsizei  numPaths, GLenum  pathNameType, const void * paths, GLuint  pathBase, GLenum  coverMode, GLenum  transformType, const GLfloat * transformValues) = NULL;\nvoid (GLAPIENTRY *glCoverStrokePathNV) (GLuint  path, GLenum  coverMode) = NULL;\nvoid (GLAPIENTRY *glCoverageModulationNV) (GLenum  components) = NULL;\nvoid (GLAPIENTRY *glCoverageModulationTableNV) (GLsizei  n, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glCreateBuffers) (GLsizei  n, GLuint * buffers) = NULL;\nvoid (GLAPIENTRY *glCreateCommandListsNV) (GLsizei  n, GLuint * lists) = NULL;\nvoid (GLAPIENTRY *glCreateFramebuffers) (GLsizei  n, GLuint * framebuffers) = NULL;\nvoid (GLAPIENTRY *glCreateMemoryObjectsEXT) (GLsizei  n, GLuint * memoryObjects) = NULL;\nvoid (GLAPIENTRY *glCreatePerfQueryINTEL) (GLuint  queryId, GLuint * queryHandle) = NULL;\nGLuint (GLAPIENTRY *glCreateProgram) () = NULL;\nGLhandleARB (GLAPIENTRY *glCreateProgramObjectARB) () = NULL;\nvoid (GLAPIENTRY *glCreateProgramPipelines) (GLsizei  n, GLuint * pipelines) = NULL;\nvoid (GLAPIENTRY *glCreateQueries) (GLenum  target, GLsizei  n, GLuint * ids) = NULL;\nvoid (GLAPIENTRY *glCreateRenderbuffers) (GLsizei  n, GLuint * renderbuffers) = NULL;\nvoid (GLAPIENTRY *glCreateSamplers) (GLsizei  n, GLuint * samplers) = NULL;\nGLuint (GLAPIENTRY *glCreateShader) (GLenum  type) = NULL;\nGLhandleARB (GLAPIENTRY *glCreateShaderObjectARB) (GLenum  shaderType) = NULL;\nGLuint (GLAPIENTRY *glCreateShaderProgramEXT) (GLenum  type, const GLchar * string) = NULL;\nGLuint (GLAPIENTRY *glCreateShaderProgramv) (GLenum  type, GLsizei  count, const GLchar *const* strings) = NULL;\nGLuint (GLAPIENTRY *glCreateShaderProgramvEXT) (GLenum  type, GLsizei  count, const GLchar ** strings) = NULL;\nvoid (GLAPIENTRY *glCreateStatesNV) (GLsizei  n, GLuint * states) = NULL;\nGLsync (GLAPIENTRY *glCreateSyncFromCLeventARB) (struct _cl_context * context, struct _cl_event * event, GLbitfield  flags) = NULL;\nvoid (GLAPIENTRY *glCreateTextures) (GLenum  target, GLsizei  n, GLuint * textures) = NULL;\nvoid (GLAPIENTRY *glCreateTransformFeedbacks) (GLsizei  n, GLuint * ids) = NULL;\nvoid (GLAPIENTRY *glCreateVertexArrays) (GLsizei  n, GLuint * arrays) = NULL;\nvoid (GLAPIENTRY *glCullFace) (GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glCullParameterdvEXT) (GLenum  pname, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glCullParameterfvEXT) (GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glCurrentPaletteMatrixARB) (GLint  index) = NULL;\nvoid (GLAPIENTRY *glDebugMessageCallback) (GLDEBUGPROC  callback, const void * userParam) = NULL;\nvoid (GLAPIENTRY *glDebugMessageCallbackAMD) (GLDEBUGPROCAMD  callback, void * userParam) = NULL;\nvoid (GLAPIENTRY *glDebugMessageCallbackARB) (GLDEBUGPROCARB  callback, const void * userParam) = NULL;\nvoid (GLAPIENTRY *glDebugMessageCallbackKHR) (GLDEBUGPROCKHR  callback, const void * userParam) = NULL;\nvoid (GLAPIENTRY *glDebugMessageControl) (GLenum  source, GLenum  type, GLenum  severity, GLsizei  count, const GLuint * ids, GLboolean  enabled) = NULL;\nvoid (GLAPIENTRY *glDebugMessageControlARB) (GLenum  source, GLenum  type, GLenum  severity, GLsizei  count, const GLuint * ids, GLboolean  enabled) = NULL;\nvoid (GLAPIENTRY *glDebugMessageControlKHR) (GLenum  source, GLenum  type, GLenum  severity, GLsizei  count, const GLuint * ids, GLboolean  enabled) = NULL;\nvoid (GLAPIENTRY *glDebugMessageEnableAMD) (GLenum  category, GLenum  severity, GLsizei  count, const GLuint * ids, GLboolean  enabled) = NULL;\nvoid (GLAPIENTRY *glDebugMessageInsert) (GLenum  source, GLenum  type, GLuint  id, GLenum  severity, GLsizei  length, const GLchar * buf) = NULL;\nvoid (GLAPIENTRY *glDebugMessageInsertAMD) (GLenum  category, GLenum  severity, GLuint  id, GLsizei  length, const GLchar * buf) = NULL;\nvoid (GLAPIENTRY *glDebugMessageInsertARB) (GLenum  source, GLenum  type, GLuint  id, GLenum  severity, GLsizei  length, const GLchar * buf) = NULL;\nvoid (GLAPIENTRY *glDebugMessageInsertKHR) (GLenum  source, GLenum  type, GLuint  id, GLenum  severity, GLsizei  length, const GLchar * buf) = NULL;\nvoid (GLAPIENTRY *glDeleteBuffers) (GLsizei  n, const GLuint * buffers) = NULL;\nvoid (GLAPIENTRY *glDeleteBuffersARB) (GLsizei  n, const GLuint * buffers) = NULL;\nvoid (GLAPIENTRY *glDeleteCommandListsNV) (GLsizei  n, const GLuint * lists) = NULL;\nvoid (GLAPIENTRY *glDeleteFencesAPPLE) (GLsizei  n, const GLuint * fences) = NULL;\nvoid (GLAPIENTRY *glDeleteFencesNV) (GLsizei  n, const GLuint * fences) = NULL;\nvoid (GLAPIENTRY *glDeleteFramebuffers) (GLsizei  n, const GLuint * framebuffers) = NULL;\nvoid (GLAPIENTRY *glDeleteFramebuffersEXT) (GLsizei  n, const GLuint * framebuffers) = NULL;\nvoid (GLAPIENTRY *glDeleteLists) (GLuint  list, GLsizei  range) = NULL;\nvoid (GLAPIENTRY *glDeleteMemoryObjectsEXT) (GLsizei  n, const GLuint * memoryObjects) = NULL;\nvoid (GLAPIENTRY *glDeleteNamedStringARB) (GLint  namelen, const GLchar * name) = NULL;\nvoid (GLAPIENTRY *glDeleteNamesAMD) (GLenum  identifier, GLuint  num, const GLuint * names) = NULL;\nvoid (GLAPIENTRY *glDeleteObjectARB) (GLhandleARB  obj) = NULL;\nvoid (GLAPIENTRY *glDeleteOcclusionQueriesNV) (GLsizei  n, const GLuint * ids) = NULL;\nvoid (GLAPIENTRY *glDeletePathsNV) (GLuint  path, GLsizei  range) = NULL;\nvoid (GLAPIENTRY *glDeletePerfMonitorsAMD) (GLsizei  n, GLuint * monitors) = NULL;\nvoid (GLAPIENTRY *glDeletePerfQueryINTEL) (GLuint  queryHandle) = NULL;\nvoid (GLAPIENTRY *glDeleteProgram) (GLuint  program) = NULL;\nvoid (GLAPIENTRY *glDeleteProgramPipelines) (GLsizei  n, const GLuint * pipelines) = NULL;\nvoid (GLAPIENTRY *glDeleteProgramPipelinesEXT) (GLsizei  n, const GLuint * pipelines) = NULL;\nvoid (GLAPIENTRY *glDeleteProgramsARB) (GLsizei  n, const GLuint * programs) = NULL;\nvoid (GLAPIENTRY *glDeleteProgramsNV) (GLsizei  n, const GLuint * programs) = NULL;\nvoid (GLAPIENTRY *glDeleteQueries) (GLsizei  n, const GLuint * ids) = NULL;\nvoid (GLAPIENTRY *glDeleteQueriesARB) (GLsizei  n, const GLuint * ids) = NULL;\nvoid (GLAPIENTRY *glDeleteQueryResourceTagNV) (GLsizei  n, const GLint * tagIds) = NULL;\nvoid (GLAPIENTRY *glDeleteRenderbuffers) (GLsizei  n, const GLuint * renderbuffers) = NULL;\nvoid (GLAPIENTRY *glDeleteRenderbuffersEXT) (GLsizei  n, const GLuint * renderbuffers) = NULL;\nvoid (GLAPIENTRY *glDeleteSamplers) (GLsizei  count, const GLuint * samplers) = NULL;\nvoid (GLAPIENTRY *glDeleteSemaphoresEXT) (GLsizei  n, const GLuint * semaphores) = NULL;\nvoid (GLAPIENTRY *glDeleteShader) (GLuint  shader) = NULL;\nvoid (GLAPIENTRY *glDeleteStatesNV) (GLsizei  n, const GLuint * states) = NULL;\nvoid (GLAPIENTRY *glDeleteSync) (GLsync  sync) = NULL;\nvoid (GLAPIENTRY *glDeleteTextures) (GLsizei  n, const GLuint * textures) = NULL;\nvoid (GLAPIENTRY *glDeleteTexturesEXT) (GLsizei  n, const GLuint * textures) = NULL;\nvoid (GLAPIENTRY *glDeleteTransformFeedbacks) (GLsizei  n, const GLuint * ids) = NULL;\nvoid (GLAPIENTRY *glDeleteTransformFeedbacksNV) (GLsizei  n, const GLuint * ids) = NULL;\nvoid (GLAPIENTRY *glDeleteVertexArrays) (GLsizei  n, const GLuint * arrays) = NULL;\nvoid (GLAPIENTRY *glDeleteVertexArraysAPPLE) (GLsizei  n, const GLuint * arrays) = NULL;\nvoid (GLAPIENTRY *glDeleteVertexShaderEXT) (GLuint  id) = NULL;\nvoid (GLAPIENTRY *glDepthBoundsEXT) (GLclampd  zmin, GLclampd  zmax) = NULL;\nvoid (GLAPIENTRY *glDepthBoundsdNV) (GLdouble  zmin, GLdouble  zmax) = NULL;\nvoid (GLAPIENTRY *glDepthFunc) (GLenum  func) = NULL;\nvoid (GLAPIENTRY *glDepthMask) (GLboolean  flag) = NULL;\nvoid (GLAPIENTRY *glDepthRange) (GLdouble  n, GLdouble  f) = NULL;\nvoid (GLAPIENTRY *glDepthRangeArraydvNV) (GLuint  first, GLsizei  count, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glDepthRangeArrayv) (GLuint  first, GLsizei  count, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glDepthRangeIndexed) (GLuint  index, GLdouble  n, GLdouble  f) = NULL;\nvoid (GLAPIENTRY *glDepthRangeIndexeddNV) (GLuint  index, GLdouble  n, GLdouble  f) = NULL;\nvoid (GLAPIENTRY *glDepthRangedNV) (GLdouble  zNear, GLdouble  zFar) = NULL;\nvoid (GLAPIENTRY *glDepthRangef) (GLfloat  n, GLfloat  f) = NULL;\nvoid (GLAPIENTRY *glDetachObjectARB) (GLhandleARB  containerObj, GLhandleARB  attachedObj) = NULL;\nvoid (GLAPIENTRY *glDetachShader) (GLuint  program, GLuint  shader) = NULL;\nvoid (GLAPIENTRY *glDisable) (GLenum  cap) = NULL;\nvoid (GLAPIENTRY *glDisableClientState) (GLenum  array) = NULL;\nvoid (GLAPIENTRY *glDisableClientStateIndexedEXT) (GLenum  array, GLuint  index) = NULL;\nvoid (GLAPIENTRY *glDisableClientStateiEXT) (GLenum  array, GLuint  index) = NULL;\nvoid (GLAPIENTRY *glDisableIndexedEXT) (GLenum  target, GLuint  index) = NULL;\nvoid (GLAPIENTRY *glDisableVariantClientStateEXT) (GLuint  id) = NULL;\nvoid (GLAPIENTRY *glDisableVertexArrayAttrib) (GLuint  vaobj, GLuint  index) = NULL;\nvoid (GLAPIENTRY *glDisableVertexArrayAttribEXT) (GLuint  vaobj, GLuint  index) = NULL;\nvoid (GLAPIENTRY *glDisableVertexArrayEXT) (GLuint  vaobj, GLenum  array) = NULL;\nvoid (GLAPIENTRY *glDisableVertexAttribAPPLE) (GLuint  index, GLenum  pname) = NULL;\nvoid (GLAPIENTRY *glDisableVertexAttribArray) (GLuint  index) = NULL;\nvoid (GLAPIENTRY *glDisableVertexAttribArrayARB) (GLuint  index) = NULL;\nvoid (GLAPIENTRY *glDisablei) (GLenum  target, GLuint  index) = NULL;\nvoid (GLAPIENTRY *glDispatchCompute) (GLuint  num_groups_x, GLuint  num_groups_y, GLuint  num_groups_z) = NULL;\nvoid (GLAPIENTRY *glDispatchComputeGroupSizeARB) (GLuint  num_groups_x, GLuint  num_groups_y, GLuint  num_groups_z, GLuint  group_size_x, GLuint  group_size_y, GLuint  group_size_z) = NULL;\nvoid (GLAPIENTRY *glDispatchComputeIndirect) (GLintptr  indirect) = NULL;\nvoid (GLAPIENTRY *glDrawArrays) (GLenum  mode, GLint  first, GLsizei  count) = NULL;\nvoid (GLAPIENTRY *glDrawArraysEXT) (GLenum  mode, GLint  first, GLsizei  count) = NULL;\nvoid (GLAPIENTRY *glDrawArraysIndirect) (GLenum  mode, const void * indirect) = NULL;\nvoid (GLAPIENTRY *glDrawArraysInstanced) (GLenum  mode, GLint  first, GLsizei  count, GLsizei  instancecount) = NULL;\nvoid (GLAPIENTRY *glDrawArraysInstancedARB) (GLenum  mode, GLint  first, GLsizei  count, GLsizei  primcount) = NULL;\nvoid (GLAPIENTRY *glDrawArraysInstancedBaseInstance) (GLenum  mode, GLint  first, GLsizei  count, GLsizei  instancecount, GLuint  baseinstance) = NULL;\nvoid (GLAPIENTRY *glDrawArraysInstancedEXT) (GLenum  mode, GLint  start, GLsizei  count, GLsizei  primcount) = NULL;\nvoid (GLAPIENTRY *glDrawBuffer) (GLenum  buf) = NULL;\nvoid (GLAPIENTRY *glDrawBuffers) (GLsizei  n, const GLenum * bufs) = NULL;\nvoid (GLAPIENTRY *glDrawBuffersARB) (GLsizei  n, const GLenum * bufs) = NULL;\nvoid (GLAPIENTRY *glDrawCommandsAddressNV) (GLenum  primitiveMode, const GLuint64 * indirects, const GLsizei * sizes, GLuint  count) = NULL;\nvoid (GLAPIENTRY *glDrawCommandsNV) (GLenum  primitiveMode, GLuint  buffer, const GLintptr * indirects, const GLsizei * sizes, GLuint  count) = NULL;\nvoid (GLAPIENTRY *glDrawCommandsStatesAddressNV) (const GLuint64 * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint  count) = NULL;\nvoid (GLAPIENTRY *glDrawCommandsStatesNV) (GLuint  buffer, const GLintptr * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint  count) = NULL;\nvoid (GLAPIENTRY *glDrawElementArrayAPPLE) (GLenum  mode, GLint  first, GLsizei  count) = NULL;\nvoid (GLAPIENTRY *glDrawElements) (GLenum  mode, GLsizei  count, GLenum  type, const void * indices) = NULL;\nvoid (GLAPIENTRY *glDrawElementsBaseVertex) (GLenum  mode, GLsizei  count, GLenum  type, const void * indices, GLint  basevertex) = NULL;\nvoid (GLAPIENTRY *glDrawElementsIndirect) (GLenum  mode, GLenum  type, const void * indirect) = NULL;\nvoid (GLAPIENTRY *glDrawElementsInstanced) (GLenum  mode, GLsizei  count, GLenum  type, const void * indices, GLsizei  instancecount) = NULL;\nvoid (GLAPIENTRY *glDrawElementsInstancedARB) (GLenum  mode, GLsizei  count, GLenum  type, const void * indices, GLsizei  primcount) = NULL;\nvoid (GLAPIENTRY *glDrawElementsInstancedBaseInstance) (GLenum  mode, GLsizei  count, GLenum  type, const void * indices, GLsizei  instancecount, GLuint  baseinstance) = NULL;\nvoid (GLAPIENTRY *glDrawElementsInstancedBaseVertex) (GLenum  mode, GLsizei  count, GLenum  type, const void * indices, GLsizei  instancecount, GLint  basevertex) = NULL;\nvoid (GLAPIENTRY *glDrawElementsInstancedBaseVertexBaseInstance) (GLenum  mode, GLsizei  count, GLenum  type, const void * indices, GLsizei  instancecount, GLint  basevertex, GLuint  baseinstance) = NULL;\nvoid (GLAPIENTRY *glDrawElementsInstancedEXT) (GLenum  mode, GLsizei  count, GLenum  type, const void * indices, GLsizei  primcount) = NULL;\nvoid (GLAPIENTRY *glDrawMeshTasksNV) (GLuint  first, GLuint  count) = NULL;\nvoid (GLAPIENTRY *glDrawMeshTasksIndirectNV) (GLintptr  indirect) = NULL;\nvoid (GLAPIENTRY *glDrawPixels) (GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glDrawRangeElementArrayAPPLE) (GLenum  mode, GLuint  start, GLuint  end, GLint  first, GLsizei  count) = NULL;\nvoid (GLAPIENTRY *glDrawRangeElements) (GLenum  mode, GLuint  start, GLuint  end, GLsizei  count, GLenum  type, const void * indices) = NULL;\nvoid (GLAPIENTRY *glDrawRangeElementsBaseVertex) (GLenum  mode, GLuint  start, GLuint  end, GLsizei  count, GLenum  type, const void * indices, GLint  basevertex) = NULL;\nvoid (GLAPIENTRY *glDrawRangeElementsEXT) (GLenum  mode, GLuint  start, GLuint  end, GLsizei  count, GLenum  type, const void * indices) = NULL;\nvoid (GLAPIENTRY *glDrawTextureNV) (GLuint  texture, GLuint  sampler, GLfloat  x0, GLfloat  y0, GLfloat  x1, GLfloat  y1, GLfloat  z, GLfloat  s0, GLfloat  t0, GLfloat  s1, GLfloat  t1) = NULL;\nvoid (GLAPIENTRY *glDrawTransformFeedback) (GLenum  mode, GLuint  id) = NULL;\nvoid (GLAPIENTRY *glDrawTransformFeedbackInstanced) (GLenum  mode, GLuint  id, GLsizei  instancecount) = NULL;\nvoid (GLAPIENTRY *glDrawTransformFeedbackNV) (GLenum  mode, GLuint  id) = NULL;\nvoid (GLAPIENTRY *glDrawTransformFeedbackStream) (GLenum  mode, GLuint  id, GLuint  stream) = NULL;\nvoid (GLAPIENTRY *glDrawTransformFeedbackStreamInstanced) (GLenum  mode, GLuint  id, GLuint  stream, GLsizei  instancecount) = NULL;\nvoid (GLAPIENTRY *glEGLImageTargetTexStorageEXT) (GLenum  target, GLeglImageOES  image, const GLint*  attrib_list) = NULL;\nvoid (GLAPIENTRY *glEGLImageTargetTextureStorageEXT) (GLuint  texture, GLeglImageOES  image, const GLint*  attrib_list) = NULL;\nvoid (GLAPIENTRY *glEdgeFlag) (GLboolean  flag) = NULL;\nvoid (GLAPIENTRY *glEdgeFlagFormatNV) (GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glEdgeFlagPointer) (GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glEdgeFlagPointerEXT) (GLsizei  stride, GLsizei  count, const GLboolean * pointer) = NULL;\nvoid (GLAPIENTRY *glEdgeFlagv) (const GLboolean * flag) = NULL;\nvoid (GLAPIENTRY *glElementPointerAPPLE) (GLenum  type, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glEnable) (GLenum  cap) = NULL;\nvoid (GLAPIENTRY *glEnableClientState) (GLenum  array) = NULL;\nvoid (GLAPIENTRY *glEnableClientStateIndexedEXT) (GLenum  array, GLuint  index) = NULL;\nvoid (GLAPIENTRY *glEnableClientStateiEXT) (GLenum  array, GLuint  index) = NULL;\nvoid (GLAPIENTRY *glEnableIndexedEXT) (GLenum  target, GLuint  index) = NULL;\nvoid (GLAPIENTRY *glEnableVariantClientStateEXT) (GLuint  id) = NULL;\nvoid (GLAPIENTRY *glEnableVertexArrayAttrib) (GLuint  vaobj, GLuint  index) = NULL;\nvoid (GLAPIENTRY *glEnableVertexArrayAttribEXT) (GLuint  vaobj, GLuint  index) = NULL;\nvoid (GLAPIENTRY *glEnableVertexArrayEXT) (GLuint  vaobj, GLenum  array) = NULL;\nvoid (GLAPIENTRY *glEnableVertexAttribAPPLE) (GLuint  index, GLenum  pname) = NULL;\nvoid (GLAPIENTRY *glEnableVertexAttribArray) (GLuint  index) = NULL;\nvoid (GLAPIENTRY *glEnableVertexAttribArrayARB) (GLuint  index) = NULL;\nvoid (GLAPIENTRY *glEnablei) (GLenum  target, GLuint  index) = NULL;\nvoid (GLAPIENTRY *glEnd) () = NULL;\nvoid (GLAPIENTRY *glEndConditionalRender) () = NULL;\nvoid (GLAPIENTRY *glEndConditionalRenderNV) () = NULL;\nvoid (GLAPIENTRY *glEndList) () = NULL;\nvoid (GLAPIENTRY *glEndOcclusionQueryNV) () = NULL;\nvoid (GLAPIENTRY *glEndPerfMonitorAMD) (GLuint  monitor) = NULL;\nvoid (GLAPIENTRY *glEndPerfQueryINTEL) (GLuint  queryHandle) = NULL;\nvoid (GLAPIENTRY *glEndQuery) (GLenum  target) = NULL;\nvoid (GLAPIENTRY *glEndQueryARB) (GLenum  target) = NULL;\nvoid (GLAPIENTRY *glEndQueryIndexed) (GLenum  target, GLuint  index) = NULL;\nvoid (GLAPIENTRY *glEndTransformFeedback) () = NULL;\nvoid (GLAPIENTRY *glEndTransformFeedbackEXT) () = NULL;\nvoid (GLAPIENTRY *glEndTransformFeedbackNV) () = NULL;\nvoid (GLAPIENTRY *glEndVertexShaderEXT) () = NULL;\nvoid (GLAPIENTRY *glEndVideoCaptureNV) (GLuint  video_capture_slot) = NULL;\nvoid (GLAPIENTRY *glEvalCoord1d) (GLdouble  u) = NULL;\nvoid (GLAPIENTRY *glEvalCoord1dv) (const GLdouble * u) = NULL;\nvoid (GLAPIENTRY *glEvalCoord1f) (GLfloat  u) = NULL;\nvoid (GLAPIENTRY *glEvalCoord1fv) (const GLfloat * u) = NULL;\nvoid (GLAPIENTRY *glEvalCoord2d) (GLdouble  u, GLdouble  v) = NULL;\nvoid (GLAPIENTRY *glEvalCoord2dv) (const GLdouble * u) = NULL;\nvoid (GLAPIENTRY *glEvalCoord2f) (GLfloat  u, GLfloat  v) = NULL;\nvoid (GLAPIENTRY *glEvalCoord2fv) (const GLfloat * u) = NULL;\nvoid (GLAPIENTRY *glEvalMapsNV) (GLenum  target, GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glEvalMesh1) (GLenum  mode, GLint  i1, GLint  i2) = NULL;\nvoid (GLAPIENTRY *glEvalMesh2) (GLenum  mode, GLint  i1, GLint  i2, GLint  j1, GLint  j2) = NULL;\nvoid (GLAPIENTRY *glEvalPoint1) (GLint  i) = NULL;\nvoid (GLAPIENTRY *glEvalPoint2) (GLint  i, GLint  j) = NULL;\nvoid (GLAPIENTRY *glEvaluateDepthValuesARB) () = NULL;\nvoid (GLAPIENTRY *glExecuteProgramNV) (GLenum  target, GLuint  id, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glExtractComponentEXT) (GLuint  res, GLuint  src, GLuint  num) = NULL;\nvoid (GLAPIENTRY *glFeedbackBuffer) (GLsizei  size, GLenum  type, GLfloat * buffer) = NULL;\nGLsync (GLAPIENTRY *glFenceSync) (GLenum  condition, GLbitfield  flags) = NULL;\nvoid (GLAPIENTRY *glFinalCombinerInputNV) (GLenum  variable, GLenum  input, GLenum  mapping, GLenum  componentUsage) = NULL;\nvoid (GLAPIENTRY *glFinish) () = NULL;\nvoid (GLAPIENTRY *glFinishFenceAPPLE) (GLuint  fence) = NULL;\nvoid (GLAPIENTRY *glFinishFenceNV) (GLuint  fence) = NULL;\nvoid (GLAPIENTRY *glFinishObjectAPPLE) (GLenum  object, GLint  name) = NULL;\nvoid (GLAPIENTRY *glFlush) () = NULL;\nvoid (GLAPIENTRY *glFlushMappedBufferRange) (GLenum  target, GLintptr  offset, GLsizeiptr  length) = NULL;\nvoid (GLAPIENTRY *glFlushMappedBufferRangeAPPLE) (GLenum  target, GLintptr  offset, GLsizeiptr  size) = NULL;\nvoid (GLAPIENTRY *glFlushMappedNamedBufferRange) (GLuint  buffer, GLintptr  offset, GLsizeiptr  length) = NULL;\nvoid (GLAPIENTRY *glFlushMappedNamedBufferRangeEXT) (GLuint  buffer, GLintptr  offset, GLsizeiptr  length) = NULL;\nvoid (GLAPIENTRY *glFlushPixelDataRangeNV) (GLenum  target) = NULL;\nvoid (GLAPIENTRY *glFlushVertexArrayRangeAPPLE) (GLsizei  length, void * pointer) = NULL;\nvoid (GLAPIENTRY *glFlushVertexArrayRangeNV) () = NULL;\nvoid (GLAPIENTRY *glFogCoordFormatNV) (GLenum  type, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glFogCoordPointer) (GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glFogCoordPointerEXT) (GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glFogCoordd) (GLdouble  coord) = NULL;\nvoid (GLAPIENTRY *glFogCoorddEXT) (GLdouble  coord) = NULL;\nvoid (GLAPIENTRY *glFogCoorddv) (const GLdouble * coord) = NULL;\nvoid (GLAPIENTRY *glFogCoorddvEXT) (const GLdouble * coord) = NULL;\nvoid (GLAPIENTRY *glFogCoordf) (GLfloat  coord) = NULL;\nvoid (GLAPIENTRY *glFogCoordfEXT) (GLfloat  coord) = NULL;\nvoid (GLAPIENTRY *glFogCoordfv) (const GLfloat * coord) = NULL;\nvoid (GLAPIENTRY *glFogCoordfvEXT) (const GLfloat * coord) = NULL;\nvoid (GLAPIENTRY *glFogCoordhNV) (GLhalfNV  fog) = NULL;\nvoid (GLAPIENTRY *glFogCoordhvNV) (const GLhalfNV * fog) = NULL;\nvoid (GLAPIENTRY *glFogf) (GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glFogfv) (GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glFogi) (GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glFogiv) (GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glFragmentCoverageColorNV) (GLuint  color) = NULL;\nvoid (GLAPIENTRY *glFramebufferDrawBufferEXT) (GLuint  framebuffer, GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glFramebufferDrawBuffersEXT) (GLuint  framebuffer, GLsizei  n, const GLenum * bufs) = NULL;\nvoid (GLAPIENTRY *glFramebufferFetchBarrierEXT) () = NULL;\nvoid (GLAPIENTRY *glFramebufferParameteri) (GLenum  target, GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glFramebufferReadBufferEXT) (GLuint  framebuffer, GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glFramebufferRenderbuffer) (GLenum  target, GLenum  attachment, GLenum  renderbuffertarget, GLuint  renderbuffer) = NULL;\nvoid (GLAPIENTRY *glFramebufferRenderbufferEXT) (GLenum  target, GLenum  attachment, GLenum  renderbuffertarget, GLuint  renderbuffer) = NULL;\nvoid (GLAPIENTRY *glFramebufferSampleLocationsfvARB) (GLenum  target, GLuint  start, GLsizei  count, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glFramebufferSampleLocationsfvNV) (GLenum  target, GLuint  start, GLsizei  count, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glFramebufferSamplePositionsfvAMD) (GLenum  target, GLuint  numsamples, GLuint  pixelindex, const GLfloat * values) = NULL;\nvoid (GLAPIENTRY *glFramebufferTexture) (GLenum  target, GLenum  attachment, GLuint  texture, GLint  level) = NULL;\nvoid (GLAPIENTRY *glFramebufferTexture1D) (GLenum  target, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level) = NULL;\nvoid (GLAPIENTRY *glFramebufferTexture1DEXT) (GLenum  target, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level) = NULL;\nvoid (GLAPIENTRY *glFramebufferTexture2D) (GLenum  target, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level) = NULL;\nvoid (GLAPIENTRY *glFramebufferTexture2DEXT) (GLenum  target, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level) = NULL;\nvoid (GLAPIENTRY *glFramebufferTexture3D) (GLenum  target, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level, GLint  zoffset) = NULL;\nvoid (GLAPIENTRY *glFramebufferTexture3DEXT) (GLenum  target, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level, GLint  zoffset) = NULL;\nvoid (GLAPIENTRY *glFramebufferTextureARB) (GLenum  target, GLenum  attachment, GLuint  texture, GLint  level) = NULL;\nvoid (GLAPIENTRY *glFramebufferTextureEXT) (GLenum  target, GLenum  attachment, GLuint  texture, GLint  level) = NULL;\nvoid (GLAPIENTRY *glFramebufferTextureFaceARB) (GLenum  target, GLenum  attachment, GLuint  texture, GLint  level, GLenum  face) = NULL;\nvoid (GLAPIENTRY *glFramebufferTextureFaceEXT) (GLenum  target, GLenum  attachment, GLuint  texture, GLint  level, GLenum  face) = NULL;\nvoid (GLAPIENTRY *glFramebufferTextureLayer) (GLenum  target, GLenum  attachment, GLuint  texture, GLint  level, GLint  layer) = NULL;\nvoid (GLAPIENTRY *glFramebufferTextureLayerARB) (GLenum  target, GLenum  attachment, GLuint  texture, GLint  level, GLint  layer) = NULL;\nvoid (GLAPIENTRY *glFramebufferTextureLayerEXT) (GLenum  target, GLenum  attachment, GLuint  texture, GLint  level, GLint  layer) = NULL;\nvoid (GLAPIENTRY *glFrontFace) (GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glFrustum) (GLdouble  left, GLdouble  right, GLdouble  bottom, GLdouble  top, GLdouble  zNear, GLdouble  zFar) = NULL;\nvoid (GLAPIENTRY *glGenBuffers) (GLsizei  n, GLuint * buffers) = NULL;\nvoid (GLAPIENTRY *glGenBuffersARB) (GLsizei  n, GLuint * buffers) = NULL;\nvoid (GLAPIENTRY *glGenFencesAPPLE) (GLsizei  n, GLuint * fences) = NULL;\nvoid (GLAPIENTRY *glGenFencesNV) (GLsizei  n, GLuint * fences) = NULL;\nvoid (GLAPIENTRY *glGenFramebuffers) (GLsizei  n, GLuint * framebuffers) = NULL;\nvoid (GLAPIENTRY *glGenFramebuffersEXT) (GLsizei  n, GLuint * framebuffers) = NULL;\nGLuint (GLAPIENTRY *glGenLists) (GLsizei  range) = NULL;\nvoid (GLAPIENTRY *glGenNamesAMD) (GLenum  identifier, GLuint  num, GLuint * names) = NULL;\nvoid (GLAPIENTRY *glGenOcclusionQueriesNV) (GLsizei  n, GLuint * ids) = NULL;\nGLuint (GLAPIENTRY *glGenPathsNV) (GLsizei  range) = NULL;\nvoid (GLAPIENTRY *glGenPerfMonitorsAMD) (GLsizei  n, GLuint * monitors) = NULL;\nvoid (GLAPIENTRY *glGenProgramPipelines) (GLsizei  n, GLuint * pipelines) = NULL;\nvoid (GLAPIENTRY *glGenProgramPipelinesEXT) (GLsizei  n, GLuint * pipelines) = NULL;\nvoid (GLAPIENTRY *glGenProgramsARB) (GLsizei  n, GLuint * programs) = NULL;\nvoid (GLAPIENTRY *glGenProgramsNV) (GLsizei  n, GLuint * programs) = NULL;\nvoid (GLAPIENTRY *glGenQueries) (GLsizei  n, GLuint * ids) = NULL;\nvoid (GLAPIENTRY *glGenQueriesARB) (GLsizei  n, GLuint * ids) = NULL;\nvoid (GLAPIENTRY *glGenQueryResourceTagNV) (GLsizei  n, GLint * tagIds) = NULL;\nvoid (GLAPIENTRY *glGenRenderbuffers) (GLsizei  n, GLuint * renderbuffers) = NULL;\nvoid (GLAPIENTRY *glGenRenderbuffersEXT) (GLsizei  n, GLuint * renderbuffers) = NULL;\nvoid (GLAPIENTRY *glGenSamplers) (GLsizei  count, GLuint * samplers) = NULL;\nvoid (GLAPIENTRY *glGenSemaphoresEXT) (GLsizei  n, GLuint * semaphores) = NULL;\nGLuint (GLAPIENTRY *glGenSymbolsEXT) (GLenum  datatype, GLenum  storagetype, GLenum  range, GLuint  components) = NULL;\nvoid (GLAPIENTRY *glGenTextures) (GLsizei  n, GLuint * textures) = NULL;\nvoid (GLAPIENTRY *glGenTexturesEXT) (GLsizei  n, GLuint * textures) = NULL;\nvoid (GLAPIENTRY *glGenTransformFeedbacks) (GLsizei  n, GLuint * ids) = NULL;\nvoid (GLAPIENTRY *glGenTransformFeedbacksNV) (GLsizei  n, GLuint * ids) = NULL;\nvoid (GLAPIENTRY *glGenVertexArrays) (GLsizei  n, GLuint * arrays) = NULL;\nvoid (GLAPIENTRY *glGenVertexArraysAPPLE) (GLsizei  n, GLuint * arrays) = NULL;\nGLuint (GLAPIENTRY *glGenVertexShadersEXT) (GLuint  range) = NULL;\nvoid (GLAPIENTRY *glGenerateMipmap) (GLenum  target) = NULL;\nvoid (GLAPIENTRY *glGenerateMipmapEXT) (GLenum  target) = NULL;\nvoid (GLAPIENTRY *glGenerateMultiTexMipmapEXT) (GLenum  texunit, GLenum  target) = NULL;\nvoid (GLAPIENTRY *glGenerateTextureMipmap) (GLuint  texture) = NULL;\nvoid (GLAPIENTRY *glGenerateTextureMipmapEXT) (GLuint  texture, GLenum  target) = NULL;\nvoid (GLAPIENTRY *glGetActiveAtomicCounterBufferiv) (GLuint  program, GLuint  bufferIndex, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetActiveAttrib) (GLuint  program, GLuint  index, GLsizei  bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name) = NULL;\nvoid (GLAPIENTRY *glGetActiveAttribARB) (GLhandleARB  programObj, GLuint  index, GLsizei  maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name) = NULL;\nvoid (GLAPIENTRY *glGetActiveSubroutineName) (GLuint  program, GLenum  shadertype, GLuint  index, GLsizei  bufSize, GLsizei * length, GLchar * name) = NULL;\nvoid (GLAPIENTRY *glGetActiveSubroutineUniformName) (GLuint  program, GLenum  shadertype, GLuint  index, GLsizei  bufSize, GLsizei * length, GLchar * name) = NULL;\nvoid (GLAPIENTRY *glGetActiveSubroutineUniformiv) (GLuint  program, GLenum  shadertype, GLuint  index, GLenum  pname, GLint * values) = NULL;\nvoid (GLAPIENTRY *glGetActiveUniform) (GLuint  program, GLuint  index, GLsizei  bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name) = NULL;\nvoid (GLAPIENTRY *glGetActiveUniformARB) (GLhandleARB  programObj, GLuint  index, GLsizei  maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name) = NULL;\nvoid (GLAPIENTRY *glGetActiveUniformBlockName) (GLuint  program, GLuint  uniformBlockIndex, GLsizei  bufSize, GLsizei * length, GLchar * uniformBlockName) = NULL;\nvoid (GLAPIENTRY *glGetActiveUniformBlockiv) (GLuint  program, GLuint  uniformBlockIndex, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetActiveUniformName) (GLuint  program, GLuint  uniformIndex, GLsizei  bufSize, GLsizei * length, GLchar * uniformName) = NULL;\nvoid (GLAPIENTRY *glGetActiveUniformsiv) (GLuint  program, GLsizei  uniformCount, const GLuint * uniformIndices, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetActiveVaryingNV) (GLuint  program, GLuint  index, GLsizei  bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name) = NULL;\nvoid (GLAPIENTRY *glGetAttachedObjectsARB) (GLhandleARB  containerObj, GLsizei  maxCount, GLsizei * count, GLhandleARB * obj) = NULL;\nvoid (GLAPIENTRY *glGetAttachedShaders) (GLuint  program, GLsizei  maxCount, GLsizei * count, GLuint * shaders) = NULL;\nGLint (GLAPIENTRY *glGetAttribLocation) (GLuint  program, const GLchar * name) = NULL;\nGLint (GLAPIENTRY *glGetAttribLocationARB) (GLhandleARB  programObj, const GLcharARB * name) = NULL;\nvoid (GLAPIENTRY *glGetBooleanIndexedvEXT) (GLenum  target, GLuint  index, GLboolean * data) = NULL;\nvoid (GLAPIENTRY *glGetBooleani_v) (GLenum  target, GLuint  index, GLboolean * data) = NULL;\nvoid (GLAPIENTRY *glGetBooleanv) (GLenum  pname, GLboolean * data) = NULL;\nvoid (GLAPIENTRY *glGetBufferParameteri64v) (GLenum  target, GLenum  pname, GLint64 * params) = NULL;\nvoid (GLAPIENTRY *glGetBufferParameteriv) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetBufferParameterivARB) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetBufferParameterui64vNV) (GLenum  target, GLenum  pname, GLuint64EXT * params) = NULL;\nvoid (GLAPIENTRY *glGetBufferPointerv) (GLenum  target, GLenum  pname, void ** params) = NULL;\nvoid (GLAPIENTRY *glGetBufferPointervARB) (GLenum  target, GLenum  pname, void ** params) = NULL;\nvoid (GLAPIENTRY *glGetBufferSubData) (GLenum  target, GLintptr  offset, GLsizeiptr  size, void * data) = NULL;\nvoid (GLAPIENTRY *glGetBufferSubDataARB) (GLenum  target, GLintptrARB  offset, GLsizeiptrARB  size, void * data) = NULL;\nvoid (GLAPIENTRY *glGetClipPlane) (GLenum  plane, GLdouble * equation) = NULL;\nvoid (GLAPIENTRY *glGetColorTable) (GLenum  target, GLenum  format, GLenum  type, void * table) = NULL;\nvoid (GLAPIENTRY *glGetColorTableEXT) (GLenum  target, GLenum  format, GLenum  type, void * data) = NULL;\nvoid (GLAPIENTRY *glGetColorTableParameterfv) (GLenum  target, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetColorTableParameterfvEXT) (GLenum  target, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetColorTableParameteriv) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetColorTableParameterivEXT) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetCombinerInputParameterfvNV) (GLenum  stage, GLenum  portion, GLenum  variable, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetCombinerInputParameterivNV) (GLenum  stage, GLenum  portion, GLenum  variable, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetCombinerOutputParameterfvNV) (GLenum  stage, GLenum  portion, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetCombinerOutputParameterivNV) (GLenum  stage, GLenum  portion, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetCombinerStageParameterfvNV) (GLenum  stage, GLenum  pname, GLfloat * params) = NULL;\nGLuint (GLAPIENTRY *glGetCommandHeaderNV) (GLenum  tokenID, GLuint  size) = NULL;\nvoid (GLAPIENTRY *glGetCompressedMultiTexImageEXT) (GLenum  texunit, GLenum  target, GLint  lod, void * img) = NULL;\nvoid (GLAPIENTRY *glGetCompressedTexImage) (GLenum  target, GLint  level, void * img) = NULL;\nvoid (GLAPIENTRY *glGetCompressedTexImageARB) (GLenum  target, GLint  level, void * img) = NULL;\nvoid (GLAPIENTRY *glGetCompressedTextureImage) (GLuint  texture, GLint  level, GLsizei  bufSize, void * pixels) = NULL;\nvoid (GLAPIENTRY *glGetCompressedTextureImageEXT) (GLuint  texture, GLenum  target, GLint  lod, void * img) = NULL;\nvoid (GLAPIENTRY *glGetCompressedTextureSubImage) (GLuint  texture, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLsizei  bufSize, void * pixels) = NULL;\nvoid (GLAPIENTRY *glGetConvolutionFilter) (GLenum  target, GLenum  format, GLenum  type, void * image) = NULL;\nvoid (GLAPIENTRY *glGetConvolutionFilterEXT) (GLenum  target, GLenum  format, GLenum  type, void * image) = NULL;\nvoid (GLAPIENTRY *glGetConvolutionParameterfv) (GLenum  target, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetConvolutionParameterfvEXT) (GLenum  target, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetConvolutionParameteriv) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetConvolutionParameterivEXT) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetCoverageModulationTableNV) (GLsizei  bufSize, GLfloat * v) = NULL;\nGLuint (GLAPIENTRY *glGetDebugMessageLog) (GLuint  count, GLsizei  bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog) = NULL;\nGLuint (GLAPIENTRY *glGetDebugMessageLogAMD) (GLuint  count, GLsizei  bufSize, GLenum * categories, GLuint * severities, GLuint * ids, GLsizei * lengths, GLchar * message) = NULL;\nGLuint (GLAPIENTRY *glGetDebugMessageLogARB) (GLuint  count, GLsizei  bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog) = NULL;\nGLuint (GLAPIENTRY *glGetDebugMessageLogKHR) (GLuint  count, GLsizei  bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog) = NULL;\nvoid (GLAPIENTRY *glGetDoubleIndexedvEXT) (GLenum  target, GLuint  index, GLdouble * data) = NULL;\nvoid (GLAPIENTRY *glGetDoublei_v) (GLenum  target, GLuint  index, GLdouble * data) = NULL;\nvoid (GLAPIENTRY *glGetDoublei_vEXT) (GLenum  pname, GLuint  index, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glGetDoublev) (GLenum  pname, GLdouble * data) = NULL;\nGLenum (GLAPIENTRY *glGetError) () = NULL;\nvoid (GLAPIENTRY *glGetFenceivNV) (GLuint  fence, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetFinalCombinerInputParameterfvNV) (GLenum  variable, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetFinalCombinerInputParameterivNV) (GLenum  variable, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetFirstPerfQueryIdINTEL) (GLuint * queryId) = NULL;\nvoid (GLAPIENTRY *glGetFloatIndexedvEXT) (GLenum  target, GLuint  index, GLfloat * data) = NULL;\nvoid (GLAPIENTRY *glGetFloati_v) (GLenum  target, GLuint  index, GLfloat * data) = NULL;\nvoid (GLAPIENTRY *glGetFloati_vEXT) (GLenum  pname, GLuint  index, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetFloatv) (GLenum  pname, GLfloat * data) = NULL;\nGLint (GLAPIENTRY *glGetFragDataIndex) (GLuint  program, const GLchar * name) = NULL;\nGLint (GLAPIENTRY *glGetFragDataLocation) (GLuint  program, const GLchar * name) = NULL;\nGLint (GLAPIENTRY *glGetFragDataLocationEXT) (GLuint  program, const GLchar * name) = NULL;\nvoid (GLAPIENTRY *glGetFramebufferAttachmentParameteriv) (GLenum  target, GLenum  attachment, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetFramebufferAttachmentParameterivEXT) (GLenum  target, GLenum  attachment, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetFramebufferParameterfvAMD) (GLenum  target, GLenum  pname, GLuint  numsamples, GLuint  pixelindex, GLsizei  size, GLfloat * values) = NULL;\nvoid (GLAPIENTRY *glGetFramebufferParameteriv) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetFramebufferParameterivEXT) (GLuint  framebuffer, GLenum  pname, GLint * params) = NULL;\nGLenum (GLAPIENTRY *glGetGraphicsResetStatus) () = NULL;\nGLenum (GLAPIENTRY *glGetGraphicsResetStatusARB) () = NULL;\nGLenum (GLAPIENTRY *glGetGraphicsResetStatusKHR) () = NULL;\nGLhandleARB (GLAPIENTRY *glGetHandleARB) (GLenum  pname) = NULL;\nvoid (GLAPIENTRY *glGetHistogram) (GLenum  target, GLboolean  reset, GLenum  format, GLenum  type, void * values) = NULL;\nvoid (GLAPIENTRY *glGetHistogramEXT) (GLenum  target, GLboolean  reset, GLenum  format, GLenum  type, void * values) = NULL;\nvoid (GLAPIENTRY *glGetHistogramParameterfv) (GLenum  target, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetHistogramParameterfvEXT) (GLenum  target, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetHistogramParameteriv) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetHistogramParameterivEXT) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nGLuint64 (GLAPIENTRY *glGetImageHandleARB) (GLuint  texture, GLint  level, GLboolean  layered, GLint  layer, GLenum  format) = NULL;\nGLuint64 (GLAPIENTRY *glGetImageHandleNV) (GLuint  texture, GLint  level, GLboolean  layered, GLint  layer, GLenum  format) = NULL;\nvoid (GLAPIENTRY *glGetInfoLogARB) (GLhandleARB  obj, GLsizei  maxLength, GLsizei * length, GLcharARB * infoLog) = NULL;\nvoid (GLAPIENTRY *glGetInteger64i_v) (GLenum  target, GLuint  index, GLint64 * data) = NULL;\nvoid (GLAPIENTRY *glGetInteger64v) (GLenum  pname, GLint64 * data) = NULL;\nvoid (GLAPIENTRY *glGetIntegerIndexedvEXT) (GLenum  target, GLuint  index, GLint * data) = NULL;\nvoid (GLAPIENTRY *glGetIntegeri_v) (GLenum  target, GLuint  index, GLint * data) = NULL;\nvoid (GLAPIENTRY *glGetIntegerui64i_vNV) (GLenum  value, GLuint  index, GLuint64EXT * result) = NULL;\nvoid (GLAPIENTRY *glGetIntegerui64vNV) (GLenum  value, GLuint64EXT * result) = NULL;\nvoid (GLAPIENTRY *glGetIntegerv) (GLenum  pname, GLint * data) = NULL;\nvoid (GLAPIENTRY *glGetInternalformatSampleivNV) (GLenum  target, GLenum  internalformat, GLsizei  samples, GLenum  pname, GLsizei  count, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetInternalformati64v) (GLenum  target, GLenum  internalformat, GLenum  pname, GLsizei  count, GLint64 * params) = NULL;\nvoid (GLAPIENTRY *glGetInternalformativ) (GLenum  target, GLenum  internalformat, GLenum  pname, GLsizei  count, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetInvariantBooleanvEXT) (GLuint  id, GLenum  value, GLboolean * data) = NULL;\nvoid (GLAPIENTRY *glGetInvariantFloatvEXT) (GLuint  id, GLenum  value, GLfloat * data) = NULL;\nvoid (GLAPIENTRY *glGetInvariantIntegervEXT) (GLuint  id, GLenum  value, GLint * data) = NULL;\nvoid (GLAPIENTRY *glGetLightfv) (GLenum  light, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetLightiv) (GLenum  light, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetLocalConstantBooleanvEXT) (GLuint  id, GLenum  value, GLboolean * data) = NULL;\nvoid (GLAPIENTRY *glGetLocalConstantFloatvEXT) (GLuint  id, GLenum  value, GLfloat * data) = NULL;\nvoid (GLAPIENTRY *glGetLocalConstantIntegervEXT) (GLuint  id, GLenum  value, GLint * data) = NULL;\nvoid (GLAPIENTRY *glGetMapAttribParameterfvNV) (GLenum  target, GLuint  index, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetMapAttribParameterivNV) (GLenum  target, GLuint  index, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetMapControlPointsNV) (GLenum  target, GLuint  index, GLenum  type, GLsizei  ustride, GLsizei  vstride, GLboolean  packed, void * points) = NULL;\nvoid (GLAPIENTRY *glGetMapParameterfvNV) (GLenum  target, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetMapParameterivNV) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetMapdv) (GLenum  target, GLenum  query, GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glGetMapfv) (GLenum  target, GLenum  query, GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glGetMapiv) (GLenum  target, GLenum  query, GLint * v) = NULL;\nvoid (GLAPIENTRY *glGetMaterialfv) (GLenum  face, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetMaterialiv) (GLenum  face, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetMemoryObjectDetachedResourcesuivNV) (GLuint  memory, GLenum  pname, GLint  first, GLsizei  count, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetMemoryObjectParameterivEXT) (GLuint  memoryObject, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetMinmax) (GLenum  target, GLboolean  reset, GLenum  format, GLenum  type, void * values) = NULL;\nvoid (GLAPIENTRY *glGetMinmaxEXT) (GLenum  target, GLboolean  reset, GLenum  format, GLenum  type, void * values) = NULL;\nvoid (GLAPIENTRY *glGetMinmaxParameterfv) (GLenum  target, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetMinmaxParameterfvEXT) (GLenum  target, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetMinmaxParameteriv) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetMinmaxParameterivEXT) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetMultiTexEnvfvEXT) (GLenum  texunit, GLenum  target, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetMultiTexEnvivEXT) (GLenum  texunit, GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetMultiTexGendvEXT) (GLenum  texunit, GLenum  coord, GLenum  pname, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glGetMultiTexGenfvEXT) (GLenum  texunit, GLenum  coord, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetMultiTexGenivEXT) (GLenum  texunit, GLenum  coord, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetMultiTexImageEXT) (GLenum  texunit, GLenum  target, GLint  level, GLenum  format, GLenum  type, void * pixels) = NULL;\nvoid (GLAPIENTRY *glGetMultiTexLevelParameterfvEXT) (GLenum  texunit, GLenum  target, GLint  level, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetMultiTexLevelParameterivEXT) (GLenum  texunit, GLenum  target, GLint  level, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetMultiTexParameterIivEXT) (GLenum  texunit, GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetMultiTexParameterIuivEXT) (GLenum  texunit, GLenum  target, GLenum  pname, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetMultiTexParameterfvEXT) (GLenum  texunit, GLenum  target, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetMultiTexParameterivEXT) (GLenum  texunit, GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetMultisamplefv) (GLenum  pname, GLuint  index, GLfloat * val) = NULL;\nvoid (GLAPIENTRY *glGetMultisamplefvNV) (GLenum  pname, GLuint  index, GLfloat * val) = NULL;\nvoid (GLAPIENTRY *glGetNamedBufferParameteri64v) (GLuint  buffer, GLenum  pname, GLint64 * params) = NULL;\nvoid (GLAPIENTRY *glGetNamedBufferParameteriv) (GLuint  buffer, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetNamedBufferParameterivEXT) (GLuint  buffer, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetNamedBufferParameterui64vNV) (GLuint  buffer, GLenum  pname, GLuint64EXT * params) = NULL;\nvoid (GLAPIENTRY *glGetNamedBufferPointerv) (GLuint  buffer, GLenum  pname, void ** params) = NULL;\nvoid (GLAPIENTRY *glGetNamedBufferPointervEXT) (GLuint  buffer, GLenum  pname, void ** params) = NULL;\nvoid (GLAPIENTRY *glGetNamedBufferSubData) (GLuint  buffer, GLintptr  offset, GLsizeiptr  size, void * data) = NULL;\nvoid (GLAPIENTRY *glGetNamedBufferSubDataEXT) (GLuint  buffer, GLintptr  offset, GLsizeiptr  size, void * data) = NULL;\nvoid (GLAPIENTRY *glGetNamedFramebufferParameterfvAMD) (GLuint  framebuffer, GLenum  pname, GLuint  numsamples, GLuint  pixelindex, GLsizei  size, GLfloat * values) = NULL;\nvoid (GLAPIENTRY *glGetNamedFramebufferAttachmentParameteriv) (GLuint  framebuffer, GLenum  attachment, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetNamedFramebufferAttachmentParameterivEXT) (GLuint  framebuffer, GLenum  attachment, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetNamedFramebufferParameteriv) (GLuint  framebuffer, GLenum  pname, GLint * param) = NULL;\nvoid (GLAPIENTRY *glGetNamedFramebufferParameterivEXT) (GLuint  framebuffer, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetNamedProgramLocalParameterIivEXT) (GLuint  program, GLenum  target, GLuint  index, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetNamedProgramLocalParameterIuivEXT) (GLuint  program, GLenum  target, GLuint  index, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetNamedProgramLocalParameterdvEXT) (GLuint  program, GLenum  target, GLuint  index, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glGetNamedProgramLocalParameterfvEXT) (GLuint  program, GLenum  target, GLuint  index, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetNamedProgramStringEXT) (GLuint  program, GLenum  target, GLenum  pname, void * string) = NULL;\nvoid (GLAPIENTRY *glGetNamedProgramivEXT) (GLuint  program, GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetNamedRenderbufferParameteriv) (GLuint  renderbuffer, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetNamedRenderbufferParameterivEXT) (GLuint  renderbuffer, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetNamedStringARB) (GLint  namelen, const GLchar * name, GLsizei  bufSize, GLint * stringlen, GLchar * string) = NULL;\nvoid (GLAPIENTRY *glGetNamedStringivARB) (GLint  namelen, const GLchar * name, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetNextPerfQueryIdINTEL) (GLuint  queryId, GLuint * nextQueryId) = NULL;\nvoid (GLAPIENTRY *glGetObjectLabel) (GLenum  identifier, GLuint  name, GLsizei  bufSize, GLsizei * length, GLchar * label) = NULL;\nvoid (GLAPIENTRY *glGetObjectLabelEXT) (GLenum  type, GLuint  object, GLsizei  bufSize, GLsizei * length, GLchar * label) = NULL;\nvoid (GLAPIENTRY *glGetObjectLabelKHR) (GLenum  identifier, GLuint  name, GLsizei  bufSize, GLsizei * length, GLchar * label) = NULL;\nvoid (GLAPIENTRY *glGetObjectParameterfvARB) (GLhandleARB  obj, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetObjectParameterivAPPLE) (GLenum  objectType, GLuint  name, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetObjectParameterivARB) (GLhandleARB  obj, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetObjectPtrLabel) (const void * ptr, GLsizei  bufSize, GLsizei * length, GLchar * label) = NULL;\nvoid (GLAPIENTRY *glGetObjectPtrLabelKHR) (const void * ptr, GLsizei  bufSize, GLsizei * length, GLchar * label) = NULL;\nvoid (GLAPIENTRY *glGetOcclusionQueryivNV) (GLuint  id, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetOcclusionQueryuivNV) (GLuint  id, GLenum  pname, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetPathColorGenfvNV) (GLenum  color, GLenum  pname, GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glGetPathColorGenivNV) (GLenum  color, GLenum  pname, GLint * value) = NULL;\nvoid (GLAPIENTRY *glGetPathCommandsNV) (GLuint  path, GLubyte * commands) = NULL;\nvoid (GLAPIENTRY *glGetPathCoordsNV) (GLuint  path, GLfloat * coords) = NULL;\nvoid (GLAPIENTRY *glGetPathDashArrayNV) (GLuint  path, GLfloat * dashArray) = NULL;\nGLfloat (GLAPIENTRY *glGetPathLengthNV) (GLuint  path, GLsizei  startSegment, GLsizei  numSegments) = NULL;\nvoid (GLAPIENTRY *glGetPathMetricRangeNV) (GLbitfield  metricQueryMask, GLuint  firstPathName, GLsizei  numPaths, GLsizei  stride, GLfloat * metrics) = NULL;\nvoid (GLAPIENTRY *glGetPathMetricsNV) (GLbitfield  metricQueryMask, GLsizei  numPaths, GLenum  pathNameType, const void * paths, GLuint  pathBase, GLsizei  stride, GLfloat * metrics) = NULL;\nvoid (GLAPIENTRY *glGetPathParameterfvNV) (GLuint  path, GLenum  pname, GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glGetPathParameterivNV) (GLuint  path, GLenum  pname, GLint * value) = NULL;\nvoid (GLAPIENTRY *glGetPathSpacingNV) (GLenum  pathListMode, GLsizei  numPaths, GLenum  pathNameType, const void * paths, GLuint  pathBase, GLfloat  advanceScale, GLfloat  kerningScale, GLenum  transformType, GLfloat * returnedSpacing) = NULL;\nvoid (GLAPIENTRY *glGetPathTexGenfvNV) (GLenum  texCoordSet, GLenum  pname, GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glGetPathTexGenivNV) (GLenum  texCoordSet, GLenum  pname, GLint * value) = NULL;\nvoid (GLAPIENTRY *glGetPerfCounterInfoINTEL) (GLuint  queryId, GLuint  counterId, GLuint  counterNameLength, GLchar * counterName, GLuint  counterDescLength, GLchar * counterDesc, GLuint * counterOffset, GLuint * counterDataSize, GLuint * counterTypeEnum, GLuint * counterDataTypeEnum, GLuint64 * rawCounterMaxValue) = NULL;\nvoid (GLAPIENTRY *glGetPerfMonitorCounterDataAMD) (GLuint  monitor, GLenum  pname, GLsizei  dataSize, GLuint * data, GLint * bytesWritten) = NULL;\nvoid (GLAPIENTRY *glGetPerfMonitorCounterInfoAMD) (GLuint  group, GLuint  counter, GLenum  pname, void * data) = NULL;\nvoid (GLAPIENTRY *glGetPerfMonitorCounterStringAMD) (GLuint  group, GLuint  counter, GLsizei  bufSize, GLsizei * length, GLchar * counterString) = NULL;\nvoid (GLAPIENTRY *glGetPerfMonitorCountersAMD) (GLuint  group, GLint * numCounters, GLint * maxActiveCounters, GLsizei  counterSize, GLuint * counters) = NULL;\nvoid (GLAPIENTRY *glGetPerfMonitorGroupStringAMD) (GLuint  group, GLsizei  bufSize, GLsizei * length, GLchar * groupString) = NULL;\nvoid (GLAPIENTRY *glGetPerfMonitorGroupsAMD) (GLint * numGroups, GLsizei  groupsSize, GLuint * groups) = NULL;\nvoid (GLAPIENTRY *glGetPerfQueryDataINTEL) (GLuint  queryHandle, GLuint  flags, GLsizei  dataSize, void * data, GLuint * bytesWritten) = NULL;\nvoid (GLAPIENTRY *glGetPerfQueryIdByNameINTEL) (GLchar * queryName, GLuint * queryId) = NULL;\nvoid (GLAPIENTRY *glGetPerfQueryInfoINTEL) (GLuint  queryId, GLuint  queryNameLength, GLchar * queryName, GLuint * dataSize, GLuint * noCounters, GLuint * noInstances, GLuint * capsMask) = NULL;\nvoid (GLAPIENTRY *glGetPixelMapfv) (GLenum  map, GLfloat * values) = NULL;\nvoid (GLAPIENTRY *glGetPixelMapuiv) (GLenum  map, GLuint * values) = NULL;\nvoid (GLAPIENTRY *glGetPixelMapusv) (GLenum  map, GLushort * values) = NULL;\nvoid (GLAPIENTRY *glGetPixelTransformParameterfvEXT) (GLenum  target, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetPixelTransformParameterivEXT) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetPointerIndexedvEXT) (GLenum  target, GLuint  index, void ** data) = NULL;\nvoid (GLAPIENTRY *glGetPointeri_vEXT) (GLenum  pname, GLuint  index, void ** params) = NULL;\nvoid (GLAPIENTRY *glGetPointerv) (GLenum  pname, void ** params) = NULL;\nvoid (GLAPIENTRY *glGetPointervEXT) (GLenum  pname, void ** params) = NULL;\nvoid (GLAPIENTRY *glGetPointervKHR) (GLenum  pname, void ** params) = NULL;\nvoid (GLAPIENTRY *glGetPolygonStipple) (GLubyte * mask) = NULL;\nvoid (GLAPIENTRY *glGetProgramBinary) (GLuint  program, GLsizei  bufSize, GLsizei * length, GLenum * binaryFormat, void * binary) = NULL;\nvoid (GLAPIENTRY *glGetProgramEnvParameterIivNV) (GLenum  target, GLuint  index, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramEnvParameterIuivNV) (GLenum  target, GLuint  index, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramEnvParameterdvARB) (GLenum  target, GLuint  index, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramEnvParameterfvARB) (GLenum  target, GLuint  index, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramInfoLog) (GLuint  program, GLsizei  bufSize, GLsizei * length, GLchar * infoLog) = NULL;\nvoid (GLAPIENTRY *glGetProgramInterfaceiv) (GLuint  program, GLenum  programInterface, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramLocalParameterIivNV) (GLenum  target, GLuint  index, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramLocalParameterIuivNV) (GLenum  target, GLuint  index, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramLocalParameterdvARB) (GLenum  target, GLuint  index, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramLocalParameterfvARB) (GLenum  target, GLuint  index, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramNamedParameterdvNV) (GLuint  id, GLsizei  len, const GLubyte * name, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramNamedParameterfvNV) (GLuint  id, GLsizei  len, const GLubyte * name, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramParameterdvNV) (GLenum  target, GLuint  index, GLenum  pname, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramParameterfvNV) (GLenum  target, GLuint  index, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramPipelineInfoLog) (GLuint  pipeline, GLsizei  bufSize, GLsizei * length, GLchar * infoLog) = NULL;\nvoid (GLAPIENTRY *glGetProgramPipelineInfoLogEXT) (GLuint  pipeline, GLsizei  bufSize, GLsizei * length, GLchar * infoLog) = NULL;\nvoid (GLAPIENTRY *glGetProgramPipelineiv) (GLuint  pipeline, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramPipelineivEXT) (GLuint  pipeline, GLenum  pname, GLint * params) = NULL;\nGLuint (GLAPIENTRY *glGetProgramResourceIndex) (GLuint  program, GLenum  programInterface, const GLchar * name) = NULL;\nGLint (GLAPIENTRY *glGetProgramResourceLocation) (GLuint  program, GLenum  programInterface, const GLchar * name) = NULL;\nGLint (GLAPIENTRY *glGetProgramResourceLocationIndex) (GLuint  program, GLenum  programInterface, const GLchar * name) = NULL;\nvoid (GLAPIENTRY *glGetProgramResourceName) (GLuint  program, GLenum  programInterface, GLuint  index, GLsizei  bufSize, GLsizei * length, GLchar * name) = NULL;\nvoid (GLAPIENTRY *glGetProgramResourcefvNV) (GLuint  program, GLenum  programInterface, GLuint  index, GLsizei  propCount, const GLenum * props, GLsizei  count, GLsizei * length, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramResourceiv) (GLuint  program, GLenum  programInterface, GLuint  index, GLsizei  propCount, const GLenum * props, GLsizei  count, GLsizei * length, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramStageiv) (GLuint  program, GLenum  shadertype, GLenum  pname, GLint * values) = NULL;\nvoid (GLAPIENTRY *glGetProgramStringARB) (GLenum  target, GLenum  pname, void * string) = NULL;\nvoid (GLAPIENTRY *glGetProgramStringNV) (GLuint  id, GLenum  pname, GLubyte * program) = NULL;\nvoid (GLAPIENTRY *glGetProgramSubroutineParameteruivNV) (GLenum  target, GLuint  index, GLuint * param) = NULL;\nvoid (GLAPIENTRY *glGetProgramiv) (GLuint  program, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramivARB) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetProgramivNV) (GLuint  id, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetQueryBufferObjecti64v) (GLuint  id, GLuint  buffer, GLenum  pname, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glGetQueryBufferObjectiv) (GLuint  id, GLuint  buffer, GLenum  pname, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glGetQueryBufferObjectui64v) (GLuint  id, GLuint  buffer, GLenum  pname, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glGetQueryBufferObjectuiv) (GLuint  id, GLuint  buffer, GLenum  pname, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glGetQueryIndexediv) (GLenum  target, GLuint  index, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetQueryObjecti64v) (GLuint  id, GLenum  pname, GLint64 * params) = NULL;\nvoid (GLAPIENTRY *glGetQueryObjecti64vEXT) (GLuint  id, GLenum  pname, GLint64 * params) = NULL;\nvoid (GLAPIENTRY *glGetQueryObjectiv) (GLuint  id, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetQueryObjectivARB) (GLuint  id, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetQueryObjectui64v) (GLuint  id, GLenum  pname, GLuint64 * params) = NULL;\nvoid (GLAPIENTRY *glGetQueryObjectui64vEXT) (GLuint  id, GLenum  pname, GLuint64 * params) = NULL;\nvoid (GLAPIENTRY *glGetQueryObjectuiv) (GLuint  id, GLenum  pname, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetQueryObjectuivARB) (GLuint  id, GLenum  pname, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetQueryiv) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetQueryivARB) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetRenderbufferParameteriv) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetRenderbufferParameterivEXT) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetSamplerParameterIiv) (GLuint  sampler, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetSamplerParameterIuiv) (GLuint  sampler, GLenum  pname, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetSamplerParameterfv) (GLuint  sampler, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetSamplerParameteriv) (GLuint  sampler, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetSemaphoreParameterui64vEXT) (GLuint  semaphore, GLenum  pname, GLuint64 * params) = NULL;\nvoid (GLAPIENTRY *glGetSeparableFilter) (GLenum  target, GLenum  format, GLenum  type, void * row, void * column, void * span) = NULL;\nvoid (GLAPIENTRY *glGetSeparableFilterEXT) (GLenum  target, GLenum  format, GLenum  type, void * row, void * column, void * span) = NULL;\nvoid (GLAPIENTRY *glGetShaderInfoLog) (GLuint  shader, GLsizei  bufSize, GLsizei * length, GLchar * infoLog) = NULL;\nvoid (GLAPIENTRY *glGetShaderPrecisionFormat) (GLenum  shadertype, GLenum  precisiontype, GLint * range, GLint * precision) = NULL;\nvoid (GLAPIENTRY *glGetShaderSource) (GLuint  shader, GLsizei  bufSize, GLsizei * length, GLchar * source) = NULL;\nvoid (GLAPIENTRY *glGetShaderSourceARB) (GLhandleARB  obj, GLsizei  maxLength, GLsizei * length, GLcharARB * source) = NULL;\nvoid (GLAPIENTRY *glGetShaderiv) (GLuint  shader, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetShadingRateImagePaletteNV) (GLuint  viewport, GLuint  entry, GLenum * rate) = NULL;\nvoid (GLAPIENTRY *glGetShadingRateSampleLocationivNV) (GLenum  rate, GLuint  samples, GLuint  index, GLint * location) = NULL;\nGLushort (GLAPIENTRY *glGetStageIndexNV) (GLenum  shadertype) = NULL;\nconst GLubyte *(GLAPIENTRY *glGetString) (GLenum  name) = NULL;\nconst GLubyte *(GLAPIENTRY *glGetStringi) (GLenum  name, GLuint  index) = NULL;\nGLuint (GLAPIENTRY *glGetSubroutineIndex) (GLuint  program, GLenum  shadertype, const GLchar * name) = NULL;\nGLint (GLAPIENTRY *glGetSubroutineUniformLocation) (GLuint  program, GLenum  shadertype, const GLchar * name) = NULL;\nvoid (GLAPIENTRY *glGetSynciv) (GLsync  sync, GLenum  pname, GLsizei  count, GLsizei * length, GLint * values) = NULL;\nvoid (GLAPIENTRY *glGetTexEnvfv) (GLenum  target, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetTexEnviv) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetTexGendv) (GLenum  coord, GLenum  pname, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glGetTexGenfv) (GLenum  coord, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetTexGeniv) (GLenum  coord, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetTexImage) (GLenum  target, GLint  level, GLenum  format, GLenum  type, void * pixels) = NULL;\nvoid (GLAPIENTRY *glGetTexLevelParameterfv) (GLenum  target, GLint  level, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetTexLevelParameteriv) (GLenum  target, GLint  level, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetTexParameterIiv) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetTexParameterIivEXT) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetTexParameterIuiv) (GLenum  target, GLenum  pname, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetTexParameterIuivEXT) (GLenum  target, GLenum  pname, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetTexParameterPointervAPPLE) (GLenum  target, GLenum  pname, void ** params) = NULL;\nvoid (GLAPIENTRY *glGetTexParameterfv) (GLenum  target, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetTexParameteriv) (GLenum  target, GLenum  pname, GLint * params) = NULL;\nGLuint64 (GLAPIENTRY *glGetTextureHandleARB) (GLuint  texture) = NULL;\nGLuint64 (GLAPIENTRY *glGetTextureHandleNV) (GLuint  texture) = NULL;\nvoid (GLAPIENTRY *glGetTextureImage) (GLuint  texture, GLint  level, GLenum  format, GLenum  type, GLsizei  bufSize, void * pixels) = NULL;\nvoid (GLAPIENTRY *glGetTextureImageEXT) (GLuint  texture, GLenum  target, GLint  level, GLenum  format, GLenum  type, void * pixels) = NULL;\nvoid (GLAPIENTRY *glGetTextureLevelParameterfv) (GLuint  texture, GLint  level, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetTextureLevelParameterfvEXT) (GLuint  texture, GLenum  target, GLint  level, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetTextureLevelParameteriv) (GLuint  texture, GLint  level, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetTextureLevelParameterivEXT) (GLuint  texture, GLenum  target, GLint  level, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetTextureParameterIiv) (GLuint  texture, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetTextureParameterIivEXT) (GLuint  texture, GLenum  target, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetTextureParameterIuiv) (GLuint  texture, GLenum  pname, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetTextureParameterIuivEXT) (GLuint  texture, GLenum  target, GLenum  pname, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetTextureParameterfv) (GLuint  texture, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetTextureParameterfvEXT) (GLuint  texture, GLenum  target, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetTextureParameteriv) (GLuint  texture, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetTextureParameterivEXT) (GLuint  texture, GLenum  target, GLenum  pname, GLint * params) = NULL;\nGLuint64 (GLAPIENTRY *glGetTextureSamplerHandleARB) (GLuint  texture, GLuint  sampler) = NULL;\nGLuint64 (GLAPIENTRY *glGetTextureSamplerHandleNV) (GLuint  texture, GLuint  sampler) = NULL;\nvoid (GLAPIENTRY *glGetTextureSubImage) (GLuint  texture, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLenum  type, GLsizei  bufSize, void * pixels) = NULL;\nvoid (GLAPIENTRY *glGetTrackMatrixivNV) (GLenum  target, GLuint  address, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetTransformFeedbackVarying) (GLuint  program, GLuint  index, GLsizei  bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name) = NULL;\nvoid (GLAPIENTRY *glGetTransformFeedbackVaryingEXT) (GLuint  program, GLuint  index, GLsizei  bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name) = NULL;\nvoid (GLAPIENTRY *glGetTransformFeedbackVaryingNV) (GLuint  program, GLuint  index, GLint * location) = NULL;\nvoid (GLAPIENTRY *glGetTransformFeedbacki64_v) (GLuint  xfb, GLenum  pname, GLuint  index, GLint64 * param) = NULL;\nvoid (GLAPIENTRY *glGetTransformFeedbacki_v) (GLuint  xfb, GLenum  pname, GLuint  index, GLint * param) = NULL;\nvoid (GLAPIENTRY *glGetTransformFeedbackiv) (GLuint  xfb, GLenum  pname, GLint * param) = NULL;\nGLuint (GLAPIENTRY *glGetUniformBlockIndex) (GLuint  program, const GLchar * uniformBlockName) = NULL;\nGLint (GLAPIENTRY *glGetUniformBufferSizeEXT) (GLuint  program, GLint  location) = NULL;\nvoid (GLAPIENTRY *glGetUniformIndices) (GLuint  program, GLsizei  uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices) = NULL;\nGLint (GLAPIENTRY *glGetUniformLocation) (GLuint  program, const GLchar * name) = NULL;\nGLint (GLAPIENTRY *glGetUniformLocationARB) (GLhandleARB  programObj, const GLcharARB * name) = NULL;\nGLintptr (GLAPIENTRY *glGetUniformOffsetEXT) (GLuint  program, GLint  location) = NULL;\nvoid (GLAPIENTRY *glGetUniformSubroutineuiv) (GLenum  shadertype, GLint  location, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetUniformdv) (GLuint  program, GLint  location, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glGetUniformfv) (GLuint  program, GLint  location, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetUniformfvARB) (GLhandleARB  programObj, GLint  location, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetUniformi64vARB) (GLuint  program, GLint  location, GLint64 * params) = NULL;\nvoid (GLAPIENTRY *glGetUniformi64vNV) (GLuint  program, GLint  location, GLint64EXT * params) = NULL;\nvoid (GLAPIENTRY *glGetUniformiv) (GLuint  program, GLint  location, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetUniformivARB) (GLhandleARB  programObj, GLint  location, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetUniformui64vARB) (GLuint  program, GLint  location, GLuint64 * params) = NULL;\nvoid (GLAPIENTRY *glGetUniformui64vNV) (GLuint  program, GLint  location, GLuint64EXT * params) = NULL;\nvoid (GLAPIENTRY *glGetUniformuiv) (GLuint  program, GLint  location, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetUniformuivEXT) (GLuint  program, GLint  location, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetUnsignedBytevEXT) (GLenum  pname, GLubyte * data) = NULL;\nvoid (GLAPIENTRY *glGetUnsignedBytei_vEXT) (GLenum  target, GLuint  index, GLubyte * data) = NULL;\nvoid (GLAPIENTRY *glGetVariantBooleanvEXT) (GLuint  id, GLenum  value, GLboolean * data) = NULL;\nvoid (GLAPIENTRY *glGetVariantFloatvEXT) (GLuint  id, GLenum  value, GLfloat * data) = NULL;\nvoid (GLAPIENTRY *glGetVariantIntegervEXT) (GLuint  id, GLenum  value, GLint * data) = NULL;\nvoid (GLAPIENTRY *glGetVariantPointervEXT) (GLuint  id, GLenum  value, void ** data) = NULL;\nGLint (GLAPIENTRY *glGetVaryingLocationNV) (GLuint  program, const GLchar * name) = NULL;\nvoid (GLAPIENTRY *glGetVertexArrayIndexed64iv) (GLuint  vaobj, GLuint  index, GLenum  pname, GLint64 * param) = NULL;\nvoid (GLAPIENTRY *glGetVertexArrayIndexediv) (GLuint  vaobj, GLuint  index, GLenum  pname, GLint * param) = NULL;\nvoid (GLAPIENTRY *glGetVertexArrayIntegeri_vEXT) (GLuint  vaobj, GLuint  index, GLenum  pname, GLint * param) = NULL;\nvoid (GLAPIENTRY *glGetVertexArrayIntegervEXT) (GLuint  vaobj, GLenum  pname, GLint * param) = NULL;\nvoid (GLAPIENTRY *glGetVertexArrayPointeri_vEXT) (GLuint  vaobj, GLuint  index, GLenum  pname, void ** param) = NULL;\nvoid (GLAPIENTRY *glGetVertexArrayPointervEXT) (GLuint  vaobj, GLenum  pname, void ** param) = NULL;\nvoid (GLAPIENTRY *glGetVertexArrayiv) (GLuint  vaobj, GLenum  pname, GLint * param) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribIiv) (GLuint  index, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribIivEXT) (GLuint  index, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribIuiv) (GLuint  index, GLenum  pname, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribIuivEXT) (GLuint  index, GLenum  pname, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribLdv) (GLuint  index, GLenum  pname, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribLdvEXT) (GLuint  index, GLenum  pname, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribLi64vNV) (GLuint  index, GLenum  pname, GLint64EXT * params) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribLui64vARB) (GLuint  index, GLenum  pname, GLuint64EXT * params) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribLui64vNV) (GLuint  index, GLenum  pname, GLuint64EXT * params) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribPointerv) (GLuint  index, GLenum  pname, void ** pointer) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribPointervARB) (GLuint  index, GLenum  pname, void ** pointer) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribPointervNV) (GLuint  index, GLenum  pname, void ** pointer) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribdv) (GLuint  index, GLenum  pname, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribdvARB) (GLuint  index, GLenum  pname, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribdvNV) (GLuint  index, GLenum  pname, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribfv) (GLuint  index, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribfvARB) (GLuint  index, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribfvNV) (GLuint  index, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribiv) (GLuint  index, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribivARB) (GLuint  index, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetVertexAttribivNV) (GLuint  index, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetVideoCaptureStreamdvNV) (GLuint  video_capture_slot, GLuint  stream, GLenum  pname, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glGetVideoCaptureStreamfvNV) (GLuint  video_capture_slot, GLuint  stream, GLenum  pname, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetVideoCaptureStreamivNV) (GLuint  video_capture_slot, GLuint  stream, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetVideoCaptureivNV) (GLuint  video_capture_slot, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetVideoi64vNV) (GLuint  video_slot, GLenum  pname, GLint64EXT * params) = NULL;\nvoid (GLAPIENTRY *glGetVideoivNV) (GLuint  video_slot, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetVideoui64vNV) (GLuint  video_slot, GLenum  pname, GLuint64EXT * params) = NULL;\nvoid (GLAPIENTRY *glGetVideouivNV) (GLuint  video_slot, GLenum  pname, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetnColorTable) (GLenum  target, GLenum  format, GLenum  type, GLsizei  bufSize, void * table) = NULL;\nvoid (GLAPIENTRY *glGetnColorTableARB) (GLenum  target, GLenum  format, GLenum  type, GLsizei  bufSize, void * table) = NULL;\nvoid (GLAPIENTRY *glGetnCompressedTexImage) (GLenum  target, GLint  lod, GLsizei  bufSize, void * pixels) = NULL;\nvoid (GLAPIENTRY *glGetnCompressedTexImageARB) (GLenum  target, GLint  lod, GLsizei  bufSize, void * img) = NULL;\nvoid (GLAPIENTRY *glGetnConvolutionFilter) (GLenum  target, GLenum  format, GLenum  type, GLsizei  bufSize, void * image) = NULL;\nvoid (GLAPIENTRY *glGetnConvolutionFilterARB) (GLenum  target, GLenum  format, GLenum  type, GLsizei  bufSize, void * image) = NULL;\nvoid (GLAPIENTRY *glGetnHistogram) (GLenum  target, GLboolean  reset, GLenum  format, GLenum  type, GLsizei  bufSize, void * values) = NULL;\nvoid (GLAPIENTRY *glGetnHistogramARB) (GLenum  target, GLboolean  reset, GLenum  format, GLenum  type, GLsizei  bufSize, void * values) = NULL;\nvoid (GLAPIENTRY *glGetnMapdv) (GLenum  target, GLenum  query, GLsizei  bufSize, GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glGetnMapdvARB) (GLenum  target, GLenum  query, GLsizei  bufSize, GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glGetnMapfv) (GLenum  target, GLenum  query, GLsizei  bufSize, GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glGetnMapfvARB) (GLenum  target, GLenum  query, GLsizei  bufSize, GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glGetnMapiv) (GLenum  target, GLenum  query, GLsizei  bufSize, GLint * v) = NULL;\nvoid (GLAPIENTRY *glGetnMapivARB) (GLenum  target, GLenum  query, GLsizei  bufSize, GLint * v) = NULL;\nvoid (GLAPIENTRY *glGetnMinmax) (GLenum  target, GLboolean  reset, GLenum  format, GLenum  type, GLsizei  bufSize, void * values) = NULL;\nvoid (GLAPIENTRY *glGetnMinmaxARB) (GLenum  target, GLboolean  reset, GLenum  format, GLenum  type, GLsizei  bufSize, void * values) = NULL;\nvoid (GLAPIENTRY *glGetnPixelMapfv) (GLenum  map, GLsizei  bufSize, GLfloat * values) = NULL;\nvoid (GLAPIENTRY *glGetnPixelMapfvARB) (GLenum  map, GLsizei  bufSize, GLfloat * values) = NULL;\nvoid (GLAPIENTRY *glGetnPixelMapuiv) (GLenum  map, GLsizei  bufSize, GLuint * values) = NULL;\nvoid (GLAPIENTRY *glGetnPixelMapuivARB) (GLenum  map, GLsizei  bufSize, GLuint * values) = NULL;\nvoid (GLAPIENTRY *glGetnPixelMapusv) (GLenum  map, GLsizei  bufSize, GLushort * values) = NULL;\nvoid (GLAPIENTRY *glGetnPixelMapusvARB) (GLenum  map, GLsizei  bufSize, GLushort * values) = NULL;\nvoid (GLAPIENTRY *glGetnPolygonStipple) (GLsizei  bufSize, GLubyte * pattern) = NULL;\nvoid (GLAPIENTRY *glGetnPolygonStippleARB) (GLsizei  bufSize, GLubyte * pattern) = NULL;\nvoid (GLAPIENTRY *glGetnSeparableFilter) (GLenum  target, GLenum  format, GLenum  type, GLsizei  rowBufSize, void * row, GLsizei  columnBufSize, void * column, void * span) = NULL;\nvoid (GLAPIENTRY *glGetnSeparableFilterARB) (GLenum  target, GLenum  format, GLenum  type, GLsizei  rowBufSize, void * row, GLsizei  columnBufSize, void * column, void * span) = NULL;\nvoid (GLAPIENTRY *glGetnTexImage) (GLenum  target, GLint  level, GLenum  format, GLenum  type, GLsizei  bufSize, void * pixels) = NULL;\nvoid (GLAPIENTRY *glGetnTexImageARB) (GLenum  target, GLint  level, GLenum  format, GLenum  type, GLsizei  bufSize, void * img) = NULL;\nvoid (GLAPIENTRY *glGetnUniformdv) (GLuint  program, GLint  location, GLsizei  bufSize, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glGetnUniformdvARB) (GLuint  program, GLint  location, GLsizei  bufSize, GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glGetnUniformfv) (GLuint  program, GLint  location, GLsizei  bufSize, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetnUniformfvARB) (GLuint  program, GLint  location, GLsizei  bufSize, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetnUniformfvKHR) (GLuint  program, GLint  location, GLsizei  bufSize, GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glGetnUniformi64vARB) (GLuint  program, GLint  location, GLsizei  bufSize, GLint64 * params) = NULL;\nvoid (GLAPIENTRY *glGetnUniformiv) (GLuint  program, GLint  location, GLsizei  bufSize, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetnUniformivARB) (GLuint  program, GLint  location, GLsizei  bufSize, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetnUniformivKHR) (GLuint  program, GLint  location, GLsizei  bufSize, GLint * params) = NULL;\nvoid (GLAPIENTRY *glGetnUniformui64vARB) (GLuint  program, GLint  location, GLsizei  bufSize, GLuint64 * params) = NULL;\nvoid (GLAPIENTRY *glGetnUniformuiv) (GLuint  program, GLint  location, GLsizei  bufSize, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetnUniformuivARB) (GLuint  program, GLint  location, GLsizei  bufSize, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glGetnUniformuivKHR) (GLuint  program, GLint  location, GLsizei  bufSize, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glHint) (GLenum  target, GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glHistogram) (GLenum  target, GLsizei  width, GLenum  internalformat, GLboolean  sink) = NULL;\nvoid (GLAPIENTRY *glHistogramEXT) (GLenum  target, GLsizei  width, GLenum  internalformat, GLboolean  sink) = NULL;\nvoid (GLAPIENTRY *glImportMemoryFdEXT) (GLuint  memory, GLuint64  size, GLenum  handleType, GLint  fd) = NULL;\nvoid (GLAPIENTRY *glImportMemoryWin32HandleEXT) (GLuint  memory, GLuint64  size, GLenum  handleType, void * handle) = NULL;\nvoid (GLAPIENTRY *glImportMemoryWin32NameEXT) (GLuint  memory, GLuint64  size, GLenum  handleType, const void * name) = NULL;\nvoid (GLAPIENTRY *glImportSemaphoreFdEXT) (GLuint  semaphore, GLenum  handleType, GLint  fd) = NULL;\nvoid (GLAPIENTRY *glImportSemaphoreWin32HandleEXT) (GLuint  semaphore, GLenum  handleType, void * handle) = NULL;\nvoid (GLAPIENTRY *glImportSemaphoreWin32NameEXT) (GLuint  semaphore, GLenum  handleType, const void * name) = NULL;\nGLsync (GLAPIENTRY *glImportSyncEXT) (GLenum  external_sync_type, GLintptr  external_sync, GLbitfield  flags) = NULL;\nvoid (GLAPIENTRY *glIndexFormatNV) (GLenum  type, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glIndexFuncEXT) (GLenum  func, GLclampf  ref) = NULL;\nvoid (GLAPIENTRY *glIndexMask) (GLuint  mask) = NULL;\nvoid (GLAPIENTRY *glIndexMaterialEXT) (GLenum  face, GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glIndexPointer) (GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glIndexPointerEXT) (GLenum  type, GLsizei  stride, GLsizei  count, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glIndexd) (GLdouble  c) = NULL;\nvoid (GLAPIENTRY *glIndexdv) (const GLdouble * c) = NULL;\nvoid (GLAPIENTRY *glIndexf) (GLfloat  c) = NULL;\nvoid (GLAPIENTRY *glIndexfv) (const GLfloat * c) = NULL;\nvoid (GLAPIENTRY *glIndexi) (GLint  c) = NULL;\nvoid (GLAPIENTRY *glIndexiv) (const GLint * c) = NULL;\nvoid (GLAPIENTRY *glIndexs) (GLshort  c) = NULL;\nvoid (GLAPIENTRY *glIndexsv) (const GLshort * c) = NULL;\nvoid (GLAPIENTRY *glIndexub) (GLubyte  c) = NULL;\nvoid (GLAPIENTRY *glIndexubv) (const GLubyte * c) = NULL;\nvoid (GLAPIENTRY *glInitNames) () = NULL;\nvoid (GLAPIENTRY *glInsertComponentEXT) (GLuint  res, GLuint  src, GLuint  num) = NULL;\nvoid (GLAPIENTRY *glInsertEventMarkerEXT) (GLsizei  length, const GLchar * marker) = NULL;\nvoid (GLAPIENTRY *glInterleavedArrays) (GLenum  format, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glInterpolatePathsNV) (GLuint  resultPath, GLuint  pathA, GLuint  pathB, GLfloat  weight) = NULL;\nvoid (GLAPIENTRY *glInvalidateBufferData) (GLuint  buffer) = NULL;\nvoid (GLAPIENTRY *glInvalidateBufferSubData) (GLuint  buffer, GLintptr  offset, GLsizeiptr  length) = NULL;\nvoid (GLAPIENTRY *glInvalidateFramebuffer) (GLenum  target, GLsizei  numAttachments, const GLenum * attachments) = NULL;\nvoid (GLAPIENTRY *glInvalidateNamedFramebufferData) (GLuint  framebuffer, GLsizei  numAttachments, const GLenum * attachments) = NULL;\nvoid (GLAPIENTRY *glInvalidateNamedFramebufferSubData) (GLuint  framebuffer, GLsizei  numAttachments, const GLenum * attachments, GLint  x, GLint  y, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glInvalidateSubFramebuffer) (GLenum  target, GLsizei  numAttachments, const GLenum * attachments, GLint  x, GLint  y, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glInvalidateTexImage) (GLuint  texture, GLint  level) = NULL;\nvoid (GLAPIENTRY *glInvalidateTexSubImage) (GLuint  texture, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth) = NULL;\nGLboolean (GLAPIENTRY *glIsBuffer) (GLuint  buffer) = NULL;\nGLboolean (GLAPIENTRY *glIsBufferARB) (GLuint  buffer) = NULL;\nGLboolean (GLAPIENTRY *glIsBufferResidentNV) (GLenum  target) = NULL;\nGLboolean (GLAPIENTRY *glIsCommandListNV) (GLuint  list) = NULL;\nGLboolean (GLAPIENTRY *glIsEnabled) (GLenum  cap) = NULL;\nGLboolean (GLAPIENTRY *glIsEnabledIndexedEXT) (GLenum  target, GLuint  index) = NULL;\nGLboolean (GLAPIENTRY *glIsEnabledi) (GLenum  target, GLuint  index) = NULL;\nGLboolean (GLAPIENTRY *glIsFenceAPPLE) (GLuint  fence) = NULL;\nGLboolean (GLAPIENTRY *glIsFenceNV) (GLuint  fence) = NULL;\nGLboolean (GLAPIENTRY *glIsFramebuffer) (GLuint  framebuffer) = NULL;\nGLboolean (GLAPIENTRY *glIsFramebufferEXT) (GLuint  framebuffer) = NULL;\nGLboolean (GLAPIENTRY *glIsImageHandleResidentARB) (GLuint64  handle) = NULL;\nGLboolean (GLAPIENTRY *glIsImageHandleResidentNV) (GLuint64  handle) = NULL;\nGLboolean (GLAPIENTRY *glIsList) (GLuint  list) = NULL;\nGLboolean (GLAPIENTRY *glIsMemoryObjectEXT) (GLuint  memoryObject) = NULL;\nGLboolean (GLAPIENTRY *glIsNameAMD) (GLenum  identifier, GLuint  name) = NULL;\nGLboolean (GLAPIENTRY *glIsNamedBufferResidentNV) (GLuint  buffer) = NULL;\nGLboolean (GLAPIENTRY *glIsNamedStringARB) (GLint  namelen, const GLchar * name) = NULL;\nGLboolean (GLAPIENTRY *glIsOcclusionQueryNV) (GLuint  id) = NULL;\nGLboolean (GLAPIENTRY *glIsPathNV) (GLuint  path) = NULL;\nGLboolean (GLAPIENTRY *glIsPointInFillPathNV) (GLuint  path, GLuint  mask, GLfloat  x, GLfloat  y) = NULL;\nGLboolean (GLAPIENTRY *glIsPointInStrokePathNV) (GLuint  path, GLfloat  x, GLfloat  y) = NULL;\nGLboolean (GLAPIENTRY *glIsProgram) (GLuint  program) = NULL;\nGLboolean (GLAPIENTRY *glIsProgramARB) (GLuint  program) = NULL;\nGLboolean (GLAPIENTRY *glIsProgramNV) (GLuint  id) = NULL;\nGLboolean (GLAPIENTRY *glIsProgramPipeline) (GLuint  pipeline) = NULL;\nGLboolean (GLAPIENTRY *glIsProgramPipelineEXT) (GLuint  pipeline) = NULL;\nGLboolean (GLAPIENTRY *glIsQuery) (GLuint  id) = NULL;\nGLboolean (GLAPIENTRY *glIsQueryARB) (GLuint  id) = NULL;\nGLboolean (GLAPIENTRY *glIsRenderbuffer) (GLuint  renderbuffer) = NULL;\nGLboolean (GLAPIENTRY *glIsRenderbufferEXT) (GLuint  renderbuffer) = NULL;\nGLboolean (GLAPIENTRY *glIsSemaphoreEXT) (GLuint  semaphore) = NULL;\nGLboolean (GLAPIENTRY *glIsSampler) (GLuint  sampler) = NULL;\nGLboolean (GLAPIENTRY *glIsShader) (GLuint  shader) = NULL;\nGLboolean (GLAPIENTRY *glIsStateNV) (GLuint  state) = NULL;\nGLboolean (GLAPIENTRY *glIsSync) (GLsync  sync) = NULL;\nGLboolean (GLAPIENTRY *glIsTexture) (GLuint  texture) = NULL;\nGLboolean (GLAPIENTRY *glIsTextureEXT) (GLuint  texture) = NULL;\nGLboolean (GLAPIENTRY *glIsTextureHandleResidentARB) (GLuint64  handle) = NULL;\nGLboolean (GLAPIENTRY *glIsTextureHandleResidentNV) (GLuint64  handle) = NULL;\nGLboolean (GLAPIENTRY *glIsTransformFeedback) (GLuint  id) = NULL;\nGLboolean (GLAPIENTRY *glIsTransformFeedbackNV) (GLuint  id) = NULL;\nGLboolean (GLAPIENTRY *glIsVariantEnabledEXT) (GLuint  id, GLenum  cap) = NULL;\nGLboolean (GLAPIENTRY *glIsVertexArray) (GLuint  array) = NULL;\nGLboolean (GLAPIENTRY *glIsVertexArrayAPPLE) (GLuint  array) = NULL;\nGLboolean (GLAPIENTRY *glIsVertexAttribEnabledAPPLE) (GLuint  index, GLenum  pname) = NULL;\nvoid (GLAPIENTRY *glLabelObjectEXT) (GLenum  type, GLuint  object, GLsizei  length, const GLchar * label) = NULL;\nvoid (GLAPIENTRY *glLightModelf) (GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glLightModelfv) (GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glLightModeli) (GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glLightModeliv) (GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glLightf) (GLenum  light, GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glLightfv) (GLenum  light, GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glLighti) (GLenum  light, GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glLightiv) (GLenum  light, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glLineStipple) (GLint  factor, GLushort  pattern) = NULL;\nvoid (GLAPIENTRY *glLineWidth) (GLfloat  width) = NULL;\nvoid (GLAPIENTRY *glLinkProgram) (GLuint  program) = NULL;\nvoid (GLAPIENTRY *glLinkProgramARB) (GLhandleARB  programObj) = NULL;\nvoid (GLAPIENTRY *glListBase) (GLuint  base) = NULL;\nvoid (GLAPIENTRY *glListDrawCommandsStatesClientNV) (GLuint  list, GLuint  segment, const void ** indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint  count) = NULL;\nvoid (GLAPIENTRY *glLoadIdentity) () = NULL;\nvoid (GLAPIENTRY *glLoadMatrixd) (const GLdouble * m) = NULL;\nvoid (GLAPIENTRY *glLoadMatrixf) (const GLfloat * m) = NULL;\nvoid (GLAPIENTRY *glLoadName) (GLuint  name) = NULL;\nvoid (GLAPIENTRY *glLoadProgramNV) (GLenum  target, GLuint  id, GLsizei  len, const GLubyte * program) = NULL;\nvoid (GLAPIENTRY *glLoadTransposeMatrixd) (const GLdouble * m) = NULL;\nvoid (GLAPIENTRY *glLoadTransposeMatrixdARB) (const GLdouble * m) = NULL;\nvoid (GLAPIENTRY *glLoadTransposeMatrixf) (const GLfloat * m) = NULL;\nvoid (GLAPIENTRY *glLoadTransposeMatrixfARB) (const GLfloat * m) = NULL;\nvoid (GLAPIENTRY *glLockArraysEXT) (GLint  first, GLsizei  count) = NULL;\nvoid (GLAPIENTRY *glLogicOp) (GLenum  opcode) = NULL;\nvoid (GLAPIENTRY *glMakeBufferNonResidentNV) (GLenum  target) = NULL;\nvoid (GLAPIENTRY *glMakeBufferResidentNV) (GLenum  target, GLenum  access) = NULL;\nvoid (GLAPIENTRY *glMakeImageHandleNonResidentARB) (GLuint64  handle) = NULL;\nvoid (GLAPIENTRY *glMakeImageHandleNonResidentNV) (GLuint64  handle) = NULL;\nvoid (GLAPIENTRY *glMakeImageHandleResidentARB) (GLuint64  handle, GLenum  access) = NULL;\nvoid (GLAPIENTRY *glMakeImageHandleResidentNV) (GLuint64  handle, GLenum  access) = NULL;\nvoid (GLAPIENTRY *glMakeNamedBufferNonResidentNV) (GLuint  buffer) = NULL;\nvoid (GLAPIENTRY *glMakeNamedBufferResidentNV) (GLuint  buffer, GLenum  access) = NULL;\nvoid (GLAPIENTRY *glMakeTextureHandleNonResidentARB) (GLuint64  handle) = NULL;\nvoid (GLAPIENTRY *glMakeTextureHandleNonResidentNV) (GLuint64  handle) = NULL;\nvoid (GLAPIENTRY *glMakeTextureHandleResidentARB) (GLuint64  handle) = NULL;\nvoid (GLAPIENTRY *glMakeTextureHandleResidentNV) (GLuint64  handle) = NULL;\nvoid (GLAPIENTRY *glMap1d) (GLenum  target, GLdouble  u1, GLdouble  u2, GLint  stride, GLint  order, const GLdouble * points) = NULL;\nvoid (GLAPIENTRY *glMap1f) (GLenum  target, GLfloat  u1, GLfloat  u2, GLint  stride, GLint  order, const GLfloat * points) = NULL;\nvoid (GLAPIENTRY *glMap2d) (GLenum  target, GLdouble  u1, GLdouble  u2, GLint  ustride, GLint  uorder, GLdouble  v1, GLdouble  v2, GLint  vstride, GLint  vorder, const GLdouble * points) = NULL;\nvoid (GLAPIENTRY *glMap2f) (GLenum  target, GLfloat  u1, GLfloat  u2, GLint  ustride, GLint  uorder, GLfloat  v1, GLfloat  v2, GLint  vstride, GLint  vorder, const GLfloat * points) = NULL;\nvoid *(GLAPIENTRY *glMapBuffer) (GLenum  target, GLenum  access) = NULL;\nvoid *(GLAPIENTRY *glMapBufferARB) (GLenum  target, GLenum  access) = NULL;\nvoid *(GLAPIENTRY *glMapBufferRange) (GLenum  target, GLintptr  offset, GLsizeiptr  length, GLbitfield  access) = NULL;\nvoid (GLAPIENTRY *glMapControlPointsNV) (GLenum  target, GLuint  index, GLenum  type, GLsizei  ustride, GLsizei  vstride, GLint  uorder, GLint  vorder, GLboolean  packed, const void * points) = NULL;\nvoid (GLAPIENTRY *glMapGrid1d) (GLint  un, GLdouble  u1, GLdouble  u2) = NULL;\nvoid (GLAPIENTRY *glMapGrid1f) (GLint  un, GLfloat  u1, GLfloat  u2) = NULL;\nvoid (GLAPIENTRY *glMapGrid2d) (GLint  un, GLdouble  u1, GLdouble  u2, GLint  vn, GLdouble  v1, GLdouble  v2) = NULL;\nvoid (GLAPIENTRY *glMapGrid2f) (GLint  un, GLfloat  u1, GLfloat  u2, GLint  vn, GLfloat  v1, GLfloat  v2) = NULL;\nvoid *(GLAPIENTRY *glMapNamedBuffer) (GLuint  buffer, GLenum  access) = NULL;\nvoid *(GLAPIENTRY *glMapNamedBufferEXT) (GLuint  buffer, GLenum  access) = NULL;\nvoid *(GLAPIENTRY *glMapNamedBufferRange) (GLuint  buffer, GLintptr  offset, GLsizeiptr  length, GLbitfield  access) = NULL;\nvoid *(GLAPIENTRY *glMapNamedBufferRangeEXT) (GLuint  buffer, GLintptr  offset, GLsizeiptr  length, GLbitfield  access) = NULL;\nvoid (GLAPIENTRY *glMapParameterfvNV) (GLenum  target, GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glMapParameterivNV) (GLenum  target, GLenum  pname, const GLint * params) = NULL;\nvoid *(GLAPIENTRY *glMapTexture2DINTEL) (GLuint  texture, GLint  level, GLbitfield  access, GLint * stride, GLenum * layout) = NULL;\nvoid (GLAPIENTRY *glMapVertexAttrib1dAPPLE) (GLuint  index, GLuint  size, GLdouble  u1, GLdouble  u2, GLint  stride, GLint  order, const GLdouble * points) = NULL;\nvoid (GLAPIENTRY *glMapVertexAttrib1fAPPLE) (GLuint  index, GLuint  size, GLfloat  u1, GLfloat  u2, GLint  stride, GLint  order, const GLfloat * points) = NULL;\nvoid (GLAPIENTRY *glMapVertexAttrib2dAPPLE) (GLuint  index, GLuint  size, GLdouble  u1, GLdouble  u2, GLint  ustride, GLint  uorder, GLdouble  v1, GLdouble  v2, GLint  vstride, GLint  vorder, const GLdouble * points) = NULL;\nvoid (GLAPIENTRY *glMapVertexAttrib2fAPPLE) (GLuint  index, GLuint  size, GLfloat  u1, GLfloat  u2, GLint  ustride, GLint  uorder, GLfloat  v1, GLfloat  v2, GLint  vstride, GLint  vorder, const GLfloat * points) = NULL;\nvoid (GLAPIENTRY *glMaterialf) (GLenum  face, GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glMaterialfv) (GLenum  face, GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glMateriali) (GLenum  face, GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glMaterialiv) (GLenum  face, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glMatrixFrustumEXT) (GLenum  mode, GLdouble  left, GLdouble  right, GLdouble  bottom, GLdouble  top, GLdouble  zNear, GLdouble  zFar) = NULL;\nvoid (GLAPIENTRY *glMatrixIndexPointerARB) (GLint  size, GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glMatrixIndexubvARB) (GLint  size, const GLubyte * indices) = NULL;\nvoid (GLAPIENTRY *glMatrixIndexuivARB) (GLint  size, const GLuint * indices) = NULL;\nvoid (GLAPIENTRY *glMatrixIndexusvARB) (GLint  size, const GLushort * indices) = NULL;\nvoid (GLAPIENTRY *glMatrixLoad3x2fNV) (GLenum  matrixMode, const GLfloat * m) = NULL;\nvoid (GLAPIENTRY *glMatrixLoad3x3fNV) (GLenum  matrixMode, const GLfloat * m) = NULL;\nvoid (GLAPIENTRY *glMatrixLoadIdentityEXT) (GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glMatrixLoadTranspose3x3fNV) (GLenum  matrixMode, const GLfloat * m) = NULL;\nvoid (GLAPIENTRY *glMatrixLoadTransposedEXT) (GLenum  mode, const GLdouble * m) = NULL;\nvoid (GLAPIENTRY *glMatrixLoadTransposefEXT) (GLenum  mode, const GLfloat * m) = NULL;\nvoid (GLAPIENTRY *glMatrixLoaddEXT) (GLenum  mode, const GLdouble * m) = NULL;\nvoid (GLAPIENTRY *glMatrixLoadfEXT) (GLenum  mode, const GLfloat * m) = NULL;\nvoid (GLAPIENTRY *glMatrixMode) (GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glMatrixMult3x2fNV) (GLenum  matrixMode, const GLfloat * m) = NULL;\nvoid (GLAPIENTRY *glMatrixMult3x3fNV) (GLenum  matrixMode, const GLfloat * m) = NULL;\nvoid (GLAPIENTRY *glMatrixMultTranspose3x3fNV) (GLenum  matrixMode, const GLfloat * m) = NULL;\nvoid (GLAPIENTRY *glMatrixMultTransposedEXT) (GLenum  mode, const GLdouble * m) = NULL;\nvoid (GLAPIENTRY *glMatrixMultTransposefEXT) (GLenum  mode, const GLfloat * m) = NULL;\nvoid (GLAPIENTRY *glMatrixMultdEXT) (GLenum  mode, const GLdouble * m) = NULL;\nvoid (GLAPIENTRY *glMatrixMultfEXT) (GLenum  mode, const GLfloat * m) = NULL;\nvoid (GLAPIENTRY *glMatrixOrthoEXT) (GLenum  mode, GLdouble  left, GLdouble  right, GLdouble  bottom, GLdouble  top, GLdouble  zNear, GLdouble  zFar) = NULL;\nvoid (GLAPIENTRY *glMatrixPopEXT) (GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glMatrixPushEXT) (GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glMatrixRotatedEXT) (GLenum  mode, GLdouble  angle, GLdouble  x, GLdouble  y, GLdouble  z) = NULL;\nvoid (GLAPIENTRY *glMatrixRotatefEXT) (GLenum  mode, GLfloat  angle, GLfloat  x, GLfloat  y, GLfloat  z) = NULL;\nvoid (GLAPIENTRY *glMatrixScaledEXT) (GLenum  mode, GLdouble  x, GLdouble  y, GLdouble  z) = NULL;\nvoid (GLAPIENTRY *glMatrixScalefEXT) (GLenum  mode, GLfloat  x, GLfloat  y, GLfloat  z) = NULL;\nvoid (GLAPIENTRY *glMatrixTranslatedEXT) (GLenum  mode, GLdouble  x, GLdouble  y, GLdouble  z) = NULL;\nvoid (GLAPIENTRY *glMatrixTranslatefEXT) (GLenum  mode, GLfloat  x, GLfloat  y, GLfloat  z) = NULL;\nvoid (GLAPIENTRY *glMaxShaderCompilerThreadsKHR) (GLuint  count) = NULL;\nvoid (GLAPIENTRY *glMaxShaderCompilerThreadsARB) (GLuint  count) = NULL;\nvoid (GLAPIENTRY *glMemoryBarrier) (GLbitfield  barriers) = NULL;\nvoid (GLAPIENTRY *glMemoryBarrierByRegion) (GLbitfield  barriers) = NULL;\nvoid (GLAPIENTRY *glMemoryBarrierEXT) (GLbitfield  barriers) = NULL;\nvoid (GLAPIENTRY *glMemoryObjectParameterivEXT) (GLuint  memoryObject, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glMinSampleShading) (GLfloat  value) = NULL;\nvoid (GLAPIENTRY *glMinSampleShadingARB) (GLfloat  value) = NULL;\nvoid (GLAPIENTRY *glMinmax) (GLenum  target, GLenum  internalformat, GLboolean  sink) = NULL;\nvoid (GLAPIENTRY *glMinmaxEXT) (GLenum  target, GLenum  internalformat, GLboolean  sink) = NULL;\nvoid (GLAPIENTRY *glMultMatrixd) (const GLdouble * m) = NULL;\nvoid (GLAPIENTRY *glMultMatrixf) (const GLfloat * m) = NULL;\nvoid (GLAPIENTRY *glMultTransposeMatrixd) (const GLdouble * m) = NULL;\nvoid (GLAPIENTRY *glMultTransposeMatrixdARB) (const GLdouble * m) = NULL;\nvoid (GLAPIENTRY *glMultTransposeMatrixf) (const GLfloat * m) = NULL;\nvoid (GLAPIENTRY *glMultTransposeMatrixfARB) (const GLfloat * m) = NULL;\nvoid (GLAPIENTRY *glMultiDrawArrays) (GLenum  mode, const GLint * first, const GLsizei * count, GLsizei  drawcount) = NULL;\nvoid (GLAPIENTRY *glMultiDrawArraysEXT) (GLenum  mode, const GLint * first, const GLsizei * count, GLsizei  primcount) = NULL;\nvoid (GLAPIENTRY *glMultiDrawArraysIndirect) (GLenum  mode, const void * indirect, GLsizei  drawcount, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glMultiDrawArraysIndirectAMD) (GLenum  mode, const void * indirect, GLsizei  primcount, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glMultiDrawArraysIndirectBindlessCountNV) (GLenum  mode, const void * indirect, GLsizei  drawCount, GLsizei  maxDrawCount, GLsizei  stride, GLint  vertexBufferCount) = NULL;\nvoid (GLAPIENTRY *glMultiDrawArraysIndirectBindlessNV) (GLenum  mode, const void * indirect, GLsizei  drawCount, GLsizei  stride, GLint  vertexBufferCount) = NULL;\nvoid (GLAPIENTRY *glMultiDrawArraysIndirectCount) (GLenum  mode, const void * indirect, GLintptr  drawcount, GLsizei  maxdrawcount, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glMultiDrawArraysIndirectCountARB) (GLenum  mode, const void * indirect, GLintptr  drawcount, GLsizei  maxdrawcount, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glMultiDrawElementArrayAPPLE) (GLenum  mode, const GLint * first, const GLsizei * count, GLsizei  primcount) = NULL;\nvoid (GLAPIENTRY *glMultiDrawElements) (GLenum  mode, const GLsizei * count, GLenum  type, const void *const* indices, GLsizei  drawcount) = NULL;\nvoid (GLAPIENTRY *glMultiDrawElementsBaseVertex) (GLenum  mode, const GLsizei * count, GLenum  type, const void *const* indices, GLsizei  drawcount, const GLint * basevertex) = NULL;\nvoid (GLAPIENTRY *glMultiDrawElementsEXT) (GLenum  mode, const GLsizei * count, GLenum  type, const void *const* indices, GLsizei  primcount) = NULL;\nvoid (GLAPIENTRY *glMultiDrawElementsIndirect) (GLenum  mode, GLenum  type, const void * indirect, GLsizei  drawcount, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glMultiDrawElementsIndirectAMD) (GLenum  mode, GLenum  type, const void * indirect, GLsizei  primcount, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glMultiDrawElementsIndirectBindlessCountNV) (GLenum  mode, GLenum  type, const void * indirect, GLsizei  drawCount, GLsizei  maxDrawCount, GLsizei  stride, GLint  vertexBufferCount) = NULL;\nvoid (GLAPIENTRY *glMultiDrawElementsIndirectBindlessNV) (GLenum  mode, GLenum  type, const void * indirect, GLsizei  drawCount, GLsizei  stride, GLint  vertexBufferCount) = NULL;\nvoid (GLAPIENTRY *glMultiDrawElementsIndirectCount) (GLenum  mode, GLenum  type, const void * indirect, GLintptr  drawcount, GLsizei  maxdrawcount, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glMultiDrawElementsIndirectCountARB) (GLenum  mode, GLenum  type, const void * indirect, GLintptr  drawcount, GLsizei  maxdrawcount, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glMultiDrawMeshTasksIndirectNV) (GLintptr  indirect, GLsizei  drawcount, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glMultiDrawMeshTasksIndirectCountNV) (GLintptr  indirect, GLintptr  drawcount, GLsizei  maxdrawcount, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glMultiDrawRangeElementArrayAPPLE) (GLenum  mode, GLuint  start, GLuint  end, const GLint * first, const GLsizei * count, GLsizei  primcount) = NULL;\nvoid (GLAPIENTRY *glMultiTexBufferEXT) (GLenum  texunit, GLenum  target, GLenum  internalformat, GLuint  buffer) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1d) (GLenum  target, GLdouble  s) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1dARB) (GLenum  target, GLdouble  s) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1dv) (GLenum  target, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1dvARB) (GLenum  target, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1f) (GLenum  target, GLfloat  s) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1fARB) (GLenum  target, GLfloat  s) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1fv) (GLenum  target, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1fvARB) (GLenum  target, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1hNV) (GLenum  target, GLhalfNV  s) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1hvNV) (GLenum  target, const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1i) (GLenum  target, GLint  s) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1iARB) (GLenum  target, GLint  s) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1iv) (GLenum  target, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1ivARB) (GLenum  target, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1s) (GLenum  target, GLshort  s) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1sARB) (GLenum  target, GLshort  s) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1sv) (GLenum  target, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord1svARB) (GLenum  target, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2d) (GLenum  target, GLdouble  s, GLdouble  t) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2dARB) (GLenum  target, GLdouble  s, GLdouble  t) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2dv) (GLenum  target, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2dvARB) (GLenum  target, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2f) (GLenum  target, GLfloat  s, GLfloat  t) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2fARB) (GLenum  target, GLfloat  s, GLfloat  t) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2fv) (GLenum  target, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2fvARB) (GLenum  target, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2hNV) (GLenum  target, GLhalfNV  s, GLhalfNV  t) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2hvNV) (GLenum  target, const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2i) (GLenum  target, GLint  s, GLint  t) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2iARB) (GLenum  target, GLint  s, GLint  t) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2iv) (GLenum  target, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2ivARB) (GLenum  target, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2s) (GLenum  target, GLshort  s, GLshort  t) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2sARB) (GLenum  target, GLshort  s, GLshort  t) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2sv) (GLenum  target, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord2svARB) (GLenum  target, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3d) (GLenum  target, GLdouble  s, GLdouble  t, GLdouble  r) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3dARB) (GLenum  target, GLdouble  s, GLdouble  t, GLdouble  r) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3dv) (GLenum  target, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3dvARB) (GLenum  target, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3f) (GLenum  target, GLfloat  s, GLfloat  t, GLfloat  r) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3fARB) (GLenum  target, GLfloat  s, GLfloat  t, GLfloat  r) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3fv) (GLenum  target, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3fvARB) (GLenum  target, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3hNV) (GLenum  target, GLhalfNV  s, GLhalfNV  t, GLhalfNV  r) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3hvNV) (GLenum  target, const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3i) (GLenum  target, GLint  s, GLint  t, GLint  r) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3iARB) (GLenum  target, GLint  s, GLint  t, GLint  r) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3iv) (GLenum  target, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3ivARB) (GLenum  target, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3s) (GLenum  target, GLshort  s, GLshort  t, GLshort  r) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3sARB) (GLenum  target, GLshort  s, GLshort  t, GLshort  r) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3sv) (GLenum  target, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord3svARB) (GLenum  target, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4d) (GLenum  target, GLdouble  s, GLdouble  t, GLdouble  r, GLdouble  q) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4dARB) (GLenum  target, GLdouble  s, GLdouble  t, GLdouble  r, GLdouble  q) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4dv) (GLenum  target, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4dvARB) (GLenum  target, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4f) (GLenum  target, GLfloat  s, GLfloat  t, GLfloat  r, GLfloat  q) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4fARB) (GLenum  target, GLfloat  s, GLfloat  t, GLfloat  r, GLfloat  q) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4fv) (GLenum  target, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4fvARB) (GLenum  target, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4hNV) (GLenum  target, GLhalfNV  s, GLhalfNV  t, GLhalfNV  r, GLhalfNV  q) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4hvNV) (GLenum  target, const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4i) (GLenum  target, GLint  s, GLint  t, GLint  r, GLint  q) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4iARB) (GLenum  target, GLint  s, GLint  t, GLint  r, GLint  q) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4iv) (GLenum  target, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4ivARB) (GLenum  target, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4s) (GLenum  target, GLshort  s, GLshort  t, GLshort  r, GLshort  q) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4sARB) (GLenum  target, GLshort  s, GLshort  t, GLshort  r, GLshort  q) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4sv) (GLenum  target, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoord4svARB) (GLenum  target, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoordP1ui) (GLenum  texture, GLenum  type, GLuint  coords) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoordP1uiv) (GLenum  texture, GLenum  type, const GLuint * coords) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoordP2ui) (GLenum  texture, GLenum  type, GLuint  coords) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoordP2uiv) (GLenum  texture, GLenum  type, const GLuint * coords) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoordP3ui) (GLenum  texture, GLenum  type, GLuint  coords) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoordP3uiv) (GLenum  texture, GLenum  type, const GLuint * coords) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoordP4ui) (GLenum  texture, GLenum  type, GLuint  coords) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoordP4uiv) (GLenum  texture, GLenum  type, const GLuint * coords) = NULL;\nvoid (GLAPIENTRY *glMultiTexCoordPointerEXT) (GLenum  texunit, GLint  size, GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glMultiTexEnvfEXT) (GLenum  texunit, GLenum  target, GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glMultiTexEnvfvEXT) (GLenum  texunit, GLenum  target, GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glMultiTexEnviEXT) (GLenum  texunit, GLenum  target, GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glMultiTexEnvivEXT) (GLenum  texunit, GLenum  target, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glMultiTexGendEXT) (GLenum  texunit, GLenum  coord, GLenum  pname, GLdouble  param) = NULL;\nvoid (GLAPIENTRY *glMultiTexGendvEXT) (GLenum  texunit, GLenum  coord, GLenum  pname, const GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glMultiTexGenfEXT) (GLenum  texunit, GLenum  coord, GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glMultiTexGenfvEXT) (GLenum  texunit, GLenum  coord, GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glMultiTexGeniEXT) (GLenum  texunit, GLenum  coord, GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glMultiTexGenivEXT) (GLenum  texunit, GLenum  coord, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glMultiTexImage1DEXT) (GLenum  texunit, GLenum  target, GLint  level, GLint  internalformat, GLsizei  width, GLint  border, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glMultiTexImage2DEXT) (GLenum  texunit, GLenum  target, GLint  level, GLint  internalformat, GLsizei  width, GLsizei  height, GLint  border, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glMultiTexImage3DEXT) (GLenum  texunit, GLenum  target, GLint  level, GLint  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLint  border, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glMultiTexParameterIivEXT) (GLenum  texunit, GLenum  target, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glMultiTexParameterIuivEXT) (GLenum  texunit, GLenum  target, GLenum  pname, const GLuint * params) = NULL;\nvoid (GLAPIENTRY *glMultiTexParameterfEXT) (GLenum  texunit, GLenum  target, GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glMultiTexParameterfvEXT) (GLenum  texunit, GLenum  target, GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glMultiTexParameteriEXT) (GLenum  texunit, GLenum  target, GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glMultiTexParameterivEXT) (GLenum  texunit, GLenum  target, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glMultiTexRenderbufferEXT) (GLenum  texunit, GLenum  target, GLuint  renderbuffer) = NULL;\nvoid (GLAPIENTRY *glMultiTexSubImage1DEXT) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glMultiTexSubImage2DEXT) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glMultiTexSubImage3DEXT) (GLenum  texunit, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glMulticastBarrierNV) () = NULL;\nvoid (GLAPIENTRY *glMulticastBlitFramebufferNV) (GLuint  srcGpu, GLuint  dstGpu, GLint  srcX0, GLint  srcY0, GLint  srcX1, GLint  srcY1, GLint  dstX0, GLint  dstY0, GLint  dstX1, GLint  dstY1, GLbitfield  mask, GLenum  filter) = NULL;\nvoid (GLAPIENTRY *glMulticastBufferSubDataNV) (GLbitfield  gpuMask, GLuint  buffer, GLintptr  offset, GLsizeiptr  size, const void * data) = NULL;\nvoid (GLAPIENTRY *glMulticastCopyBufferSubDataNV) (GLuint  readGpu, GLbitfield  writeGpuMask, GLuint  readBuffer, GLuint  writeBuffer, GLintptr  readOffset, GLintptr  writeOffset, GLsizeiptr  size) = NULL;\nvoid (GLAPIENTRY *glMulticastCopyImageSubDataNV) (GLuint  srcGpu, GLbitfield  dstGpuMask, GLuint  srcName, GLenum  srcTarget, GLint  srcLevel, GLint  srcX, GLint  srcY, GLint  srcZ, GLuint  dstName, GLenum  dstTarget, GLint  dstLevel, GLint  dstX, GLint  dstY, GLint  dstZ, GLsizei  srcWidth, GLsizei  srcHeight, GLsizei  srcDepth) = NULL;\nvoid (GLAPIENTRY *glMulticastFramebufferSampleLocationsfvNV) (GLuint  gpu, GLuint  framebuffer, GLuint  start, GLsizei  count, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glMulticastGetQueryObjecti64vNV) (GLuint  gpu, GLuint  id, GLenum  pname, GLint64 * params) = NULL;\nvoid (GLAPIENTRY *glMulticastGetQueryObjectivNV) (GLuint  gpu, GLuint  id, GLenum  pname, GLint * params) = NULL;\nvoid (GLAPIENTRY *glMulticastGetQueryObjectui64vNV) (GLuint  gpu, GLuint  id, GLenum  pname, GLuint64 * params) = NULL;\nvoid (GLAPIENTRY *glMulticastGetQueryObjectuivNV) (GLuint  gpu, GLuint  id, GLenum  pname, GLuint * params) = NULL;\nvoid (GLAPIENTRY *glMulticastWaitSyncNV) (GLuint  signalGpu, GLbitfield  waitGpuMask) = NULL;\nvoid (GLAPIENTRY *glNamedBufferAttachMemoryNV) (GLuint  buffer, GLuint  memory, GLuint64  offset) = NULL;\nvoid (GLAPIENTRY *glNamedBufferData) (GLuint  buffer, GLsizeiptr  size, const void * data, GLenum  usage) = NULL;\nvoid (GLAPIENTRY *glNamedBufferDataEXT) (GLuint  buffer, GLsizeiptr  size, const void * data, GLenum  usage) = NULL;\nvoid (GLAPIENTRY *glNamedBufferPageCommitmentARB) (GLuint  buffer, GLintptr  offset, GLsizeiptr  size, GLboolean  commit) = NULL;\nvoid (GLAPIENTRY *glNamedBufferPageCommitmentEXT) (GLuint  buffer, GLintptr  offset, GLsizeiptr  size, GLboolean  commit) = NULL;\nvoid (GLAPIENTRY *glNamedBufferStorage) (GLuint  buffer, GLsizeiptr  size, const void * data, GLbitfield  flags) = NULL;\nvoid (GLAPIENTRY *glNamedBufferStorageExternalEXT) (GLuint  buffer, GLintptr  offset, GLsizeiptr  size, GLeglClientBufferEXT  clientBuffer, GLbitfield  flags) = NULL;\nvoid (GLAPIENTRY *glNamedBufferStorageEXT) (GLuint  buffer, GLsizeiptr  size, const void * data, GLbitfield  flags) = NULL;\nvoid (GLAPIENTRY *glNamedBufferStorageMemEXT) (GLuint  buffer, GLsizeiptr  size, GLuint  memory, GLuint64  offset) = NULL;\nvoid (GLAPIENTRY *glNamedBufferSubData) (GLuint  buffer, GLintptr  offset, GLsizeiptr  size, const void * data) = NULL;\nvoid (GLAPIENTRY *glNamedBufferSubDataEXT) (GLuint  buffer, GLintptr  offset, GLsizeiptr  size, const void * data) = NULL;\nvoid (GLAPIENTRY *glNamedCopyBufferSubDataEXT) (GLuint  readBuffer, GLuint  writeBuffer, GLintptr  readOffset, GLintptr  writeOffset, GLsizeiptr  size) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferDrawBuffer) (GLuint  framebuffer, GLenum  buf) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferDrawBuffers) (GLuint  framebuffer, GLsizei  n, const GLenum * bufs) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferParameteri) (GLuint  framebuffer, GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferParameteriEXT) (GLuint  framebuffer, GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferReadBuffer) (GLuint  framebuffer, GLenum  src) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferRenderbuffer) (GLuint  framebuffer, GLenum  attachment, GLenum  renderbuffertarget, GLuint  renderbuffer) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferRenderbufferEXT) (GLuint  framebuffer, GLenum  attachment, GLenum  renderbuffertarget, GLuint  renderbuffer) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferSampleLocationsfvARB) (GLuint  framebuffer, GLuint  start, GLsizei  count, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferSampleLocationsfvNV) (GLuint  framebuffer, GLuint  start, GLsizei  count, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferTexture) (GLuint  framebuffer, GLenum  attachment, GLuint  texture, GLint  level) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferSamplePositionsfvAMD) (GLuint  framebuffer, GLuint  numsamples, GLuint  pixelindex, const GLfloat * values) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferTexture1DEXT) (GLuint  framebuffer, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferTexture2DEXT) (GLuint  framebuffer, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferTexture3DEXT) (GLuint  framebuffer, GLenum  attachment, GLenum  textarget, GLuint  texture, GLint  level, GLint  zoffset) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferTextureEXT) (GLuint  framebuffer, GLenum  attachment, GLuint  texture, GLint  level) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferTextureFaceEXT) (GLuint  framebuffer, GLenum  attachment, GLuint  texture, GLint  level, GLenum  face) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferTextureLayer) (GLuint  framebuffer, GLenum  attachment, GLuint  texture, GLint  level, GLint  layer) = NULL;\nvoid (GLAPIENTRY *glNamedFramebufferTextureLayerEXT) (GLuint  framebuffer, GLenum  attachment, GLuint  texture, GLint  level, GLint  layer) = NULL;\nvoid (GLAPIENTRY *glNamedProgramLocalParameter4dEXT) (GLuint  program, GLenum  target, GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w) = NULL;\nvoid (GLAPIENTRY *glNamedProgramLocalParameter4dvEXT) (GLuint  program, GLenum  target, GLuint  index, const GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glNamedProgramLocalParameter4fEXT) (GLuint  program, GLenum  target, GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w) = NULL;\nvoid (GLAPIENTRY *glNamedProgramLocalParameter4fvEXT) (GLuint  program, GLenum  target, GLuint  index, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glNamedProgramLocalParameterI4iEXT) (GLuint  program, GLenum  target, GLuint  index, GLint  x, GLint  y, GLint  z, GLint  w) = NULL;\nvoid (GLAPIENTRY *glNamedProgramLocalParameterI4ivEXT) (GLuint  program, GLenum  target, GLuint  index, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glNamedProgramLocalParameterI4uiEXT) (GLuint  program, GLenum  target, GLuint  index, GLuint  x, GLuint  y, GLuint  z, GLuint  w) = NULL;\nvoid (GLAPIENTRY *glNamedProgramLocalParameterI4uivEXT) (GLuint  program, GLenum  target, GLuint  index, const GLuint * params) = NULL;\nvoid (GLAPIENTRY *glNamedProgramLocalParameters4fvEXT) (GLuint  program, GLenum  target, GLuint  index, GLsizei  count, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glNamedProgramLocalParametersI4ivEXT) (GLuint  program, GLenum  target, GLuint  index, GLsizei  count, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glNamedProgramLocalParametersI4uivEXT) (GLuint  program, GLenum  target, GLuint  index, GLsizei  count, const GLuint * params) = NULL;\nvoid (GLAPIENTRY *glNamedProgramStringEXT) (GLuint  program, GLenum  target, GLenum  format, GLsizei  len, const void * string) = NULL;\nvoid (GLAPIENTRY *glNamedRenderbufferStorage) (GLuint  renderbuffer, GLenum  internalformat, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glNamedRenderbufferStorageEXT) (GLuint  renderbuffer, GLenum  internalformat, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glNamedRenderbufferStorageMultisample) (GLuint  renderbuffer, GLsizei  samples, GLenum  internalformat, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glNamedRenderbufferStorageMultisampleAdvancedAMD) (GLuint  renderbuffer, GLsizei  samples, GLsizei  storageSamples, GLenum  internalformat, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glNamedRenderbufferStorageMultisampleCoverageEXT) (GLuint  renderbuffer, GLsizei  coverageSamples, GLsizei  colorSamples, GLenum  internalformat, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glNamedRenderbufferStorageMultisampleEXT) (GLuint  renderbuffer, GLsizei  samples, GLenum  internalformat, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glNamedStringARB) (GLenum  type, GLint  namelen, const GLchar * name, GLint  stringlen, const GLchar * string) = NULL;\nvoid (GLAPIENTRY *glNewList) (GLuint  list, GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glNormal3b) (GLbyte  nx, GLbyte  ny, GLbyte  nz) = NULL;\nvoid (GLAPIENTRY *glNormal3bv) (const GLbyte * v) = NULL;\nvoid (GLAPIENTRY *glNormal3d) (GLdouble  nx, GLdouble  ny, GLdouble  nz) = NULL;\nvoid (GLAPIENTRY *glNormal3dv) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glNormal3f) (GLfloat  nx, GLfloat  ny, GLfloat  nz) = NULL;\nvoid (GLAPIENTRY *glNormal3fv) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glNormal3hNV) (GLhalfNV  nx, GLhalfNV  ny, GLhalfNV  nz) = NULL;\nvoid (GLAPIENTRY *glNormal3hvNV) (const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glNormal3i) (GLint  nx, GLint  ny, GLint  nz) = NULL;\nvoid (GLAPIENTRY *glNormal3iv) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glNormal3s) (GLshort  nx, GLshort  ny, GLshort  nz) = NULL;\nvoid (GLAPIENTRY *glNormal3sv) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glNormalFormatNV) (GLenum  type, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glNormalP3ui) (GLenum  type, GLuint  coords) = NULL;\nvoid (GLAPIENTRY *glNormalP3uiv) (GLenum  type, const GLuint * coords) = NULL;\nvoid (GLAPIENTRY *glNormalPointer) (GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glNormalPointerEXT) (GLenum  type, GLsizei  stride, GLsizei  count, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glNormalPointervINTEL) (GLenum  type, const void ** pointer) = NULL;\nvoid (GLAPIENTRY *glObjectLabel) (GLenum  identifier, GLuint  name, GLsizei  length, const GLchar * label) = NULL;\nvoid (GLAPIENTRY *glObjectLabelKHR) (GLenum  identifier, GLuint  name, GLsizei  length, const GLchar * label) = NULL;\nvoid (GLAPIENTRY *glObjectPtrLabel) (const void * ptr, GLsizei  length, const GLchar * label) = NULL;\nvoid (GLAPIENTRY *glObjectPtrLabelKHR) (const void * ptr, GLsizei  length, const GLchar * label) = NULL;\nGLenum (GLAPIENTRY *glObjectPurgeableAPPLE) (GLenum  objectType, GLuint  name, GLenum  option) = NULL;\nGLenum (GLAPIENTRY *glObjectUnpurgeableAPPLE) (GLenum  objectType, GLuint  name, GLenum  option) = NULL;\nvoid (GLAPIENTRY *glOrtho) (GLdouble  left, GLdouble  right, GLdouble  bottom, GLdouble  top, GLdouble  zNear, GLdouble  zFar) = NULL;\nvoid (GLAPIENTRY *glPassThrough) (GLfloat  token) = NULL;\nvoid (GLAPIENTRY *glPatchParameterfv) (GLenum  pname, const GLfloat * values) = NULL;\nvoid (GLAPIENTRY *glPatchParameteri) (GLenum  pname, GLint  value) = NULL;\nvoid (GLAPIENTRY *glPathColorGenNV) (GLenum  color, GLenum  genMode, GLenum  colorFormat, const GLfloat * coeffs) = NULL;\nvoid (GLAPIENTRY *glPathCommandsNV) (GLuint  path, GLsizei  numCommands, const GLubyte * commands, GLsizei  numCoords, GLenum  coordType, const void * coords) = NULL;\nvoid (GLAPIENTRY *glPathCoordsNV) (GLuint  path, GLsizei  numCoords, GLenum  coordType, const void * coords) = NULL;\nvoid (GLAPIENTRY *glPathCoverDepthFuncNV) (GLenum  func) = NULL;\nvoid (GLAPIENTRY *glPathDashArrayNV) (GLuint  path, GLsizei  dashCount, const GLfloat * dashArray) = NULL;\nvoid (GLAPIENTRY *glPathFogGenNV) (GLenum  genMode) = NULL;\nGLenum (GLAPIENTRY *glPathGlyphIndexArrayNV) (GLuint  firstPathName, GLenum  fontTarget, const void * fontName, GLbitfield  fontStyle, GLuint  firstGlyphIndex, GLsizei  numGlyphs, GLuint  pathParameterTemplate, GLfloat  emScale) = NULL;\nGLenum (GLAPIENTRY *glPathGlyphIndexRangeNV) (GLenum  fontTarget, const void * fontName, GLbitfield  fontStyle, GLuint  pathParameterTemplate, GLfloat  emScale, GLuint  baseAndCount) = NULL;\nvoid (GLAPIENTRY *glPathGlyphRangeNV) (GLuint  firstPathName, GLenum  fontTarget, const void * fontName, GLbitfield  fontStyle, GLuint  firstGlyph, GLsizei  numGlyphs, GLenum  handleMissingGlyphs, GLuint  pathParameterTemplate, GLfloat  emScale) = NULL;\nvoid (GLAPIENTRY *glPathGlyphsNV) (GLuint  firstPathName, GLenum  fontTarget, const void * fontName, GLbitfield  fontStyle, GLsizei  numGlyphs, GLenum  type, const void * charcodes, GLenum  handleMissingGlyphs, GLuint  pathParameterTemplate, GLfloat  emScale) = NULL;\nGLenum (GLAPIENTRY *glPathMemoryGlyphIndexArrayNV) (GLuint  firstPathName, GLenum  fontTarget, GLsizeiptr  fontSize, const void * fontData, GLsizei  faceIndex, GLuint  firstGlyphIndex, GLsizei  numGlyphs, GLuint  pathParameterTemplate, GLfloat  emScale) = NULL;\nvoid (GLAPIENTRY *glPathParameterfNV) (GLuint  path, GLenum  pname, GLfloat  value) = NULL;\nvoid (GLAPIENTRY *glPathParameterfvNV) (GLuint  path, GLenum  pname, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glPathParameteriNV) (GLuint  path, GLenum  pname, GLint  value) = NULL;\nvoid (GLAPIENTRY *glPathParameterivNV) (GLuint  path, GLenum  pname, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glPathStencilDepthOffsetNV) (GLfloat  factor, GLfloat  units) = NULL;\nvoid (GLAPIENTRY *glPathStencilFuncNV) (GLenum  func, GLint  ref, GLuint  mask) = NULL;\nvoid (GLAPIENTRY *glPathStringNV) (GLuint  path, GLenum  format, GLsizei  length, const void * pathString) = NULL;\nvoid (GLAPIENTRY *glPathSubCommandsNV) (GLuint  path, GLsizei  commandStart, GLsizei  commandsToDelete, GLsizei  numCommands, const GLubyte * commands, GLsizei  numCoords, GLenum  coordType, const void * coords) = NULL;\nvoid (GLAPIENTRY *glPathSubCoordsNV) (GLuint  path, GLsizei  coordStart, GLsizei  numCoords, GLenum  coordType, const void * coords) = NULL;\nvoid (GLAPIENTRY *glPathTexGenNV) (GLenum  texCoordSet, GLenum  genMode, GLint  components, const GLfloat * coeffs) = NULL;\nvoid (GLAPIENTRY *glPauseTransformFeedback) () = NULL;\nvoid (GLAPIENTRY *glPauseTransformFeedbackNV) () = NULL;\nvoid (GLAPIENTRY *glPixelDataRangeNV) (GLenum  target, GLsizei  length, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glPixelMapfv) (GLenum  map, GLsizei  mapsize, const GLfloat * values) = NULL;\nvoid (GLAPIENTRY *glPixelMapuiv) (GLenum  map, GLsizei  mapsize, const GLuint * values) = NULL;\nvoid (GLAPIENTRY *glPixelMapusv) (GLenum  map, GLsizei  mapsize, const GLushort * values) = NULL;\nvoid (GLAPIENTRY *glPixelStoref) (GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glPixelStorei) (GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glPixelTransferf) (GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glPixelTransferi) (GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glPixelTransformParameterfEXT) (GLenum  target, GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glPixelTransformParameterfvEXT) (GLenum  target, GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glPixelTransformParameteriEXT) (GLenum  target, GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glPixelTransformParameterivEXT) (GLenum  target, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glPixelZoom) (GLfloat  xfactor, GLfloat  yfactor) = NULL;\nGLboolean (GLAPIENTRY *glPointAlongPathNV) (GLuint  path, GLsizei  startSegment, GLsizei  numSegments, GLfloat  distance, GLfloat * x, GLfloat * y, GLfloat * tangentX, GLfloat * tangentY) = NULL;\nvoid (GLAPIENTRY *glPointParameterf) (GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glPointParameterfARB) (GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glPointParameterfEXT) (GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glPointParameterfv) (GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glPointParameterfvARB) (GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glPointParameterfvEXT) (GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glPointParameteri) (GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glPointParameteriNV) (GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glPointParameteriv) (GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glPointParameterivNV) (GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glPointSize) (GLfloat  size) = NULL;\nvoid (GLAPIENTRY *glPolygonMode) (GLenum  face, GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glPolygonOffset) (GLfloat  factor, GLfloat  units) = NULL;\nvoid (GLAPIENTRY *glPolygonOffsetClamp) (GLfloat  factor, GLfloat  units, GLfloat  clamp) = NULL;\nvoid (GLAPIENTRY *glPolygonOffsetClampEXT) (GLfloat  factor, GLfloat  units, GLfloat  clamp) = NULL;\nvoid (GLAPIENTRY *glPolygonOffsetEXT) (GLfloat  factor, GLfloat  bias) = NULL;\nvoid (GLAPIENTRY *glPolygonStipple) (const GLubyte * mask) = NULL;\nvoid (GLAPIENTRY *glPopAttrib) () = NULL;\nvoid (GLAPIENTRY *glPopClientAttrib) () = NULL;\nvoid (GLAPIENTRY *glPopDebugGroup) () = NULL;\nvoid (GLAPIENTRY *glPopDebugGroupKHR) () = NULL;\nvoid (GLAPIENTRY *glPopGroupMarkerEXT) () = NULL;\nvoid (GLAPIENTRY *glPopMatrix) () = NULL;\nvoid (GLAPIENTRY *glPopName) () = NULL;\nvoid (GLAPIENTRY *glPresentFrameDualFillNV) (GLuint  video_slot, GLuint64EXT  minPresentTime, GLuint  beginPresentTimeId, GLuint  presentDurationId, GLenum  type, GLenum  target0, GLuint  fill0, GLenum  target1, GLuint  fill1, GLenum  target2, GLuint  fill2, GLenum  target3, GLuint  fill3) = NULL;\nvoid (GLAPIENTRY *glPresentFrameKeyedNV) (GLuint  video_slot, GLuint64EXT  minPresentTime, GLuint  beginPresentTimeId, GLuint  presentDurationId, GLenum  type, GLenum  target0, GLuint  fill0, GLuint  key0, GLenum  target1, GLuint  fill1, GLuint  key1) = NULL;\nvoid (GLAPIENTRY *glPrimitiveBoundingBoxARB) (GLfloat  minX, GLfloat  minY, GLfloat  minZ, GLfloat  minW, GLfloat  maxX, GLfloat  maxY, GLfloat  maxZ, GLfloat  maxW) = NULL;\nvoid (GLAPIENTRY *glPrimitiveRestartIndex) (GLuint  index) = NULL;\nvoid (GLAPIENTRY *glPrimitiveRestartIndexNV) (GLuint  index) = NULL;\nvoid (GLAPIENTRY *glPrimitiveRestartNV) () = NULL;\nvoid (GLAPIENTRY *glPrioritizeTextures) (GLsizei  n, const GLuint * textures, const GLfloat * priorities) = NULL;\nvoid (GLAPIENTRY *glPrioritizeTexturesEXT) (GLsizei  n, const GLuint * textures, const GLclampf * priorities) = NULL;\nvoid (GLAPIENTRY *glProgramBinary) (GLuint  program, GLenum  binaryFormat, const void * binary, GLsizei  length) = NULL;\nvoid (GLAPIENTRY *glProgramBufferParametersIivNV) (GLenum  target, GLuint  bindingIndex, GLuint  wordIndex, GLsizei  count, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glProgramBufferParametersIuivNV) (GLenum  target, GLuint  bindingIndex, GLuint  wordIndex, GLsizei  count, const GLuint * params) = NULL;\nvoid (GLAPIENTRY *glProgramBufferParametersfvNV) (GLenum  target, GLuint  bindingIndex, GLuint  wordIndex, GLsizei  count, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glProgramEnvParameter4dARB) (GLenum  target, GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w) = NULL;\nvoid (GLAPIENTRY *glProgramEnvParameter4dvARB) (GLenum  target, GLuint  index, const GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glProgramEnvParameter4fARB) (GLenum  target, GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w) = NULL;\nvoid (GLAPIENTRY *glProgramEnvParameter4fvARB) (GLenum  target, GLuint  index, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glProgramEnvParameterI4iNV) (GLenum  target, GLuint  index, GLint  x, GLint  y, GLint  z, GLint  w) = NULL;\nvoid (GLAPIENTRY *glProgramEnvParameterI4ivNV) (GLenum  target, GLuint  index, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glProgramEnvParameterI4uiNV) (GLenum  target, GLuint  index, GLuint  x, GLuint  y, GLuint  z, GLuint  w) = NULL;\nvoid (GLAPIENTRY *glProgramEnvParameterI4uivNV) (GLenum  target, GLuint  index, const GLuint * params) = NULL;\nvoid (GLAPIENTRY *glProgramEnvParameters4fvEXT) (GLenum  target, GLuint  index, GLsizei  count, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glProgramEnvParametersI4ivNV) (GLenum  target, GLuint  index, GLsizei  count, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glProgramEnvParametersI4uivNV) (GLenum  target, GLuint  index, GLsizei  count, const GLuint * params) = NULL;\nvoid (GLAPIENTRY *glProgramLocalParameter4dARB) (GLenum  target, GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w) = NULL;\nvoid (GLAPIENTRY *glProgramLocalParameter4dvARB) (GLenum  target, GLuint  index, const GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glProgramLocalParameter4fARB) (GLenum  target, GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w) = NULL;\nvoid (GLAPIENTRY *glProgramLocalParameter4fvARB) (GLenum  target, GLuint  index, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glProgramLocalParameterI4iNV) (GLenum  target, GLuint  index, GLint  x, GLint  y, GLint  z, GLint  w) = NULL;\nvoid (GLAPIENTRY *glProgramLocalParameterI4ivNV) (GLenum  target, GLuint  index, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glProgramLocalParameterI4uiNV) (GLenum  target, GLuint  index, GLuint  x, GLuint  y, GLuint  z, GLuint  w) = NULL;\nvoid (GLAPIENTRY *glProgramLocalParameterI4uivNV) (GLenum  target, GLuint  index, const GLuint * params) = NULL;\nvoid (GLAPIENTRY *glProgramLocalParameters4fvEXT) (GLenum  target, GLuint  index, GLsizei  count, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glProgramLocalParametersI4ivNV) (GLenum  target, GLuint  index, GLsizei  count, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glProgramLocalParametersI4uivNV) (GLenum  target, GLuint  index, GLsizei  count, const GLuint * params) = NULL;\nvoid (GLAPIENTRY *glProgramNamedParameter4dNV) (GLuint  id, GLsizei  len, const GLubyte * name, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w) = NULL;\nvoid (GLAPIENTRY *glProgramNamedParameter4dvNV) (GLuint  id, GLsizei  len, const GLubyte * name, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glProgramNamedParameter4fNV) (GLuint  id, GLsizei  len, const GLubyte * name, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w) = NULL;\nvoid (GLAPIENTRY *glProgramNamedParameter4fvNV) (GLuint  id, GLsizei  len, const GLubyte * name, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glProgramParameter4dNV) (GLenum  target, GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w) = NULL;\nvoid (GLAPIENTRY *glProgramParameter4dvNV) (GLenum  target, GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glProgramParameter4fNV) (GLenum  target, GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w) = NULL;\nvoid (GLAPIENTRY *glProgramParameter4fvNV) (GLenum  target, GLuint  index, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glProgramParameteri) (GLuint  program, GLenum  pname, GLint  value) = NULL;\nvoid (GLAPIENTRY *glProgramParameteriARB) (GLuint  program, GLenum  pname, GLint  value) = NULL;\nvoid (GLAPIENTRY *glProgramParameteriEXT) (GLuint  program, GLenum  pname, GLint  value) = NULL;\nvoid (GLAPIENTRY *glProgramParameters4dvNV) (GLenum  target, GLuint  index, GLsizei  count, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glProgramParameters4fvNV) (GLenum  target, GLuint  index, GLsizei  count, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glProgramPathFragmentInputGenNV) (GLuint  program, GLint  location, GLenum  genMode, GLint  components, const GLfloat * coeffs) = NULL;\nvoid (GLAPIENTRY *glProgramStringARB) (GLenum  target, GLenum  format, GLsizei  len, const void * string) = NULL;\nvoid (GLAPIENTRY *glProgramSubroutineParametersuivNV) (GLenum  target, GLsizei  count, const GLuint * params) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1d) (GLuint  program, GLint  location, GLdouble  v0) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1dEXT) (GLuint  program, GLint  location, GLdouble  x) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1dv) (GLuint  program, GLint  location, GLsizei  count, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1dvEXT) (GLuint  program, GLint  location, GLsizei  count, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1f) (GLuint  program, GLint  location, GLfloat  v0) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1fEXT) (GLuint  program, GLint  location, GLfloat  v0) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1fv) (GLuint  program, GLint  location, GLsizei  count, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1fvEXT) (GLuint  program, GLint  location, GLsizei  count, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1i) (GLuint  program, GLint  location, GLint  v0) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1i64ARB) (GLuint  program, GLint  location, GLint64  x) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1i64NV) (GLuint  program, GLint  location, GLint64EXT  x) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1i64vARB) (GLuint  program, GLint  location, GLsizei  count, const GLint64 * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1i64vNV) (GLuint  program, GLint  location, GLsizei  count, const GLint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1iEXT) (GLuint  program, GLint  location, GLint  v0) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1iv) (GLuint  program, GLint  location, GLsizei  count, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1ivEXT) (GLuint  program, GLint  location, GLsizei  count, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1ui) (GLuint  program, GLint  location, GLuint  v0) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1ui64ARB) (GLuint  program, GLint  location, GLuint64  x) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1ui64NV) (GLuint  program, GLint  location, GLuint64EXT  x) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1ui64vARB) (GLuint  program, GLint  location, GLsizei  count, const GLuint64 * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1ui64vNV) (GLuint  program, GLint  location, GLsizei  count, const GLuint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1uiEXT) (GLuint  program, GLint  location, GLuint  v0) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1uiv) (GLuint  program, GLint  location, GLsizei  count, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform1uivEXT) (GLuint  program, GLint  location, GLsizei  count, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2d) (GLuint  program, GLint  location, GLdouble  v0, GLdouble  v1) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2dEXT) (GLuint  program, GLint  location, GLdouble  x, GLdouble  y) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2dv) (GLuint  program, GLint  location, GLsizei  count, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2dvEXT) (GLuint  program, GLint  location, GLsizei  count, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2f) (GLuint  program, GLint  location, GLfloat  v0, GLfloat  v1) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2fEXT) (GLuint  program, GLint  location, GLfloat  v0, GLfloat  v1) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2fv) (GLuint  program, GLint  location, GLsizei  count, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2fvEXT) (GLuint  program, GLint  location, GLsizei  count, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2i) (GLuint  program, GLint  location, GLint  v0, GLint  v1) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2i64ARB) (GLuint  program, GLint  location, GLint64  x, GLint64  y) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2i64NV) (GLuint  program, GLint  location, GLint64EXT  x, GLint64EXT  y) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2i64vARB) (GLuint  program, GLint  location, GLsizei  count, const GLint64 * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2i64vNV) (GLuint  program, GLint  location, GLsizei  count, const GLint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2iEXT) (GLuint  program, GLint  location, GLint  v0, GLint  v1) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2iv) (GLuint  program, GLint  location, GLsizei  count, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2ivEXT) (GLuint  program, GLint  location, GLsizei  count, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2ui) (GLuint  program, GLint  location, GLuint  v0, GLuint  v1) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2ui64ARB) (GLuint  program, GLint  location, GLuint64  x, GLuint64  y) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2ui64NV) (GLuint  program, GLint  location, GLuint64EXT  x, GLuint64EXT  y) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2ui64vARB) (GLuint  program, GLint  location, GLsizei  count, const GLuint64 * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2ui64vNV) (GLuint  program, GLint  location, GLsizei  count, const GLuint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2uiEXT) (GLuint  program, GLint  location, GLuint  v0, GLuint  v1) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2uiv) (GLuint  program, GLint  location, GLsizei  count, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform2uivEXT) (GLuint  program, GLint  location, GLsizei  count, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3d) (GLuint  program, GLint  location, GLdouble  v0, GLdouble  v1, GLdouble  v2) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3dEXT) (GLuint  program, GLint  location, GLdouble  x, GLdouble  y, GLdouble  z) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3dv) (GLuint  program, GLint  location, GLsizei  count, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3dvEXT) (GLuint  program, GLint  location, GLsizei  count, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3f) (GLuint  program, GLint  location, GLfloat  v0, GLfloat  v1, GLfloat  v2) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3fEXT) (GLuint  program, GLint  location, GLfloat  v0, GLfloat  v1, GLfloat  v2) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3fv) (GLuint  program, GLint  location, GLsizei  count, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3fvEXT) (GLuint  program, GLint  location, GLsizei  count, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3i) (GLuint  program, GLint  location, GLint  v0, GLint  v1, GLint  v2) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3i64ARB) (GLuint  program, GLint  location, GLint64  x, GLint64  y, GLint64  z) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3i64NV) (GLuint  program, GLint  location, GLint64EXT  x, GLint64EXT  y, GLint64EXT  z) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3i64vARB) (GLuint  program, GLint  location, GLsizei  count, const GLint64 * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3i64vNV) (GLuint  program, GLint  location, GLsizei  count, const GLint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3iEXT) (GLuint  program, GLint  location, GLint  v0, GLint  v1, GLint  v2) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3iv) (GLuint  program, GLint  location, GLsizei  count, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3ivEXT) (GLuint  program, GLint  location, GLsizei  count, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3ui) (GLuint  program, GLint  location, GLuint  v0, GLuint  v1, GLuint  v2) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3ui64ARB) (GLuint  program, GLint  location, GLuint64  x, GLuint64  y, GLuint64  z) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3ui64NV) (GLuint  program, GLint  location, GLuint64EXT  x, GLuint64EXT  y, GLuint64EXT  z) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3ui64vARB) (GLuint  program, GLint  location, GLsizei  count, const GLuint64 * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3ui64vNV) (GLuint  program, GLint  location, GLsizei  count, const GLuint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3uiEXT) (GLuint  program, GLint  location, GLuint  v0, GLuint  v1, GLuint  v2) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3uiv) (GLuint  program, GLint  location, GLsizei  count, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform3uivEXT) (GLuint  program, GLint  location, GLsizei  count, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4d) (GLuint  program, GLint  location, GLdouble  v0, GLdouble  v1, GLdouble  v2, GLdouble  v3) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4dEXT) (GLuint  program, GLint  location, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4dv) (GLuint  program, GLint  location, GLsizei  count, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4dvEXT) (GLuint  program, GLint  location, GLsizei  count, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4f) (GLuint  program, GLint  location, GLfloat  v0, GLfloat  v1, GLfloat  v2, GLfloat  v3) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4fEXT) (GLuint  program, GLint  location, GLfloat  v0, GLfloat  v1, GLfloat  v2, GLfloat  v3) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4fv) (GLuint  program, GLint  location, GLsizei  count, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4fvEXT) (GLuint  program, GLint  location, GLsizei  count, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4i) (GLuint  program, GLint  location, GLint  v0, GLint  v1, GLint  v2, GLint  v3) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4i64ARB) (GLuint  program, GLint  location, GLint64  x, GLint64  y, GLint64  z, GLint64  w) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4i64NV) (GLuint  program, GLint  location, GLint64EXT  x, GLint64EXT  y, GLint64EXT  z, GLint64EXT  w) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4i64vARB) (GLuint  program, GLint  location, GLsizei  count, const GLint64 * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4i64vNV) (GLuint  program, GLint  location, GLsizei  count, const GLint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4iEXT) (GLuint  program, GLint  location, GLint  v0, GLint  v1, GLint  v2, GLint  v3) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4iv) (GLuint  program, GLint  location, GLsizei  count, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4ivEXT) (GLuint  program, GLint  location, GLsizei  count, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4ui) (GLuint  program, GLint  location, GLuint  v0, GLuint  v1, GLuint  v2, GLuint  v3) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4ui64ARB) (GLuint  program, GLint  location, GLuint64  x, GLuint64  y, GLuint64  z, GLuint64  w) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4ui64NV) (GLuint  program, GLint  location, GLuint64EXT  x, GLuint64EXT  y, GLuint64EXT  z, GLuint64EXT  w) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4ui64vARB) (GLuint  program, GLint  location, GLsizei  count, const GLuint64 * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4ui64vNV) (GLuint  program, GLint  location, GLsizei  count, const GLuint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4uiEXT) (GLuint  program, GLint  location, GLuint  v0, GLuint  v1, GLuint  v2, GLuint  v3) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4uiv) (GLuint  program, GLint  location, GLsizei  count, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniform4uivEXT) (GLuint  program, GLint  location, GLsizei  count, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformHandleui64ARB) (GLuint  program, GLint  location, GLuint64  value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformHandleui64NV) (GLuint  program, GLint  location, GLuint64  value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformHandleui64vARB) (GLuint  program, GLint  location, GLsizei  count, const GLuint64 * values) = NULL;\nvoid (GLAPIENTRY *glProgramUniformHandleui64vNV) (GLuint  program, GLint  location, GLsizei  count, const GLuint64 * values) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix2dv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix2dvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix2fv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix2fvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix2x3dv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix2x3dvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix2x3fv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix2x3fvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix2x4dv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix2x4dvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix2x4fv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix2x4fvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix3dv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix3dvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix3fv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix3fvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix3x2dv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix3x2dvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix3x2fv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix3x2fvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix3x4dv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix3x4dvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix3x4fv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix3x4fvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix4dv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix4dvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix4fv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix4fvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix4x2dv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix4x2dvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix4x2fv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix4x2fvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix4x3dv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix4x3dvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix4x3fv) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformMatrix4x3fvEXT) (GLuint  program, GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformui64NV) (GLuint  program, GLint  location, GLuint64EXT  value) = NULL;\nvoid (GLAPIENTRY *glProgramUniformui64vNV) (GLuint  program, GLint  location, GLsizei  count, const GLuint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glProgramVertexLimitNV) (GLenum  target, GLint  limit) = NULL;\nvoid (GLAPIENTRY *glProvokingVertex) (GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glProvokingVertexEXT) (GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glPushAttrib) (GLbitfield  mask) = NULL;\nvoid (GLAPIENTRY *glPushClientAttrib) (GLbitfield  mask) = NULL;\nvoid (GLAPIENTRY *glPushClientAttribDefaultEXT) (GLbitfield  mask) = NULL;\nvoid (GLAPIENTRY *glPushDebugGroup) (GLenum  source, GLuint  id, GLsizei  length, const GLchar * message) = NULL;\nvoid (GLAPIENTRY *glPushDebugGroupKHR) (GLenum  source, GLuint  id, GLsizei  length, const GLchar * message) = NULL;\nvoid (GLAPIENTRY *glPushGroupMarkerEXT) (GLsizei  length, const GLchar * marker) = NULL;\nvoid (GLAPIENTRY *glPushMatrix) () = NULL;\nvoid (GLAPIENTRY *glPushName) (GLuint  name) = NULL;\nvoid (GLAPIENTRY *glQueryCounter) (GLuint  id, GLenum  target) = NULL;\nvoid (GLAPIENTRY *glQueryObjectParameteruiAMD) (GLenum  target, GLuint  id, GLenum  pname, GLuint  param) = NULL;\nGLint (GLAPIENTRY *glQueryResourceNV) (GLenum  queryType, GLint  tagId, GLuint  count, GLint * buffer) = NULL;\nvoid (GLAPIENTRY *glQueryResourceTagNV) (GLint  tagId, const GLchar * tagString) = NULL;\nvoid (GLAPIENTRY *glRasterPos2d) (GLdouble  x, GLdouble  y) = NULL;\nvoid (GLAPIENTRY *glRasterPos2dv) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glRasterPos2f) (GLfloat  x, GLfloat  y) = NULL;\nvoid (GLAPIENTRY *glRasterPos2fv) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glRasterPos2i) (GLint  x, GLint  y) = NULL;\nvoid (GLAPIENTRY *glRasterPos2iv) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glRasterPos2s) (GLshort  x, GLshort  y) = NULL;\nvoid (GLAPIENTRY *glRasterPos2sv) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glRasterPos3d) (GLdouble  x, GLdouble  y, GLdouble  z) = NULL;\nvoid (GLAPIENTRY *glRasterPos3dv) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glRasterPos3f) (GLfloat  x, GLfloat  y, GLfloat  z) = NULL;\nvoid (GLAPIENTRY *glRasterPos3fv) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glRasterPos3i) (GLint  x, GLint  y, GLint  z) = NULL;\nvoid (GLAPIENTRY *glRasterPos3iv) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glRasterPos3s) (GLshort  x, GLshort  y, GLshort  z) = NULL;\nvoid (GLAPIENTRY *glRasterPos3sv) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glRasterPos4d) (GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w) = NULL;\nvoid (GLAPIENTRY *glRasterPos4dv) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glRasterPos4f) (GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w) = NULL;\nvoid (GLAPIENTRY *glRasterPos4fv) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glRasterPos4i) (GLint  x, GLint  y, GLint  z, GLint  w) = NULL;\nvoid (GLAPIENTRY *glRasterPos4iv) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glRasterPos4s) (GLshort  x, GLshort  y, GLshort  z, GLshort  w) = NULL;\nvoid (GLAPIENTRY *glRasterPos4sv) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glRasterSamplesEXT) (GLuint  samples, GLboolean  fixedsamplelocations) = NULL;\nvoid (GLAPIENTRY *glReadBuffer) (GLenum  src) = NULL;\nvoid (GLAPIENTRY *glReadPixels) (GLint  x, GLint  y, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, void * pixels) = NULL;\nvoid (GLAPIENTRY *glReadnPixels) (GLint  x, GLint  y, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, GLsizei  bufSize, void * data) = NULL;\nvoid (GLAPIENTRY *glReadnPixelsARB) (GLint  x, GLint  y, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, GLsizei  bufSize, void * data) = NULL;\nvoid (GLAPIENTRY *glReadnPixelsKHR) (GLint  x, GLint  y, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, GLsizei  bufSize, void * data) = NULL;\nGLboolean (GLAPIENTRY *glReleaseKeyedMutexWin32EXT) (GLuint  memory, GLuint64  key) = NULL;\nvoid (GLAPIENTRY *glRectd) (GLdouble  x1, GLdouble  y1, GLdouble  x2, GLdouble  y2) = NULL;\nvoid (GLAPIENTRY *glRectdv) (const GLdouble * v1, const GLdouble * v2) = NULL;\nvoid (GLAPIENTRY *glRectf) (GLfloat  x1, GLfloat  y1, GLfloat  x2, GLfloat  y2) = NULL;\nvoid (GLAPIENTRY *glRectfv) (const GLfloat * v1, const GLfloat * v2) = NULL;\nvoid (GLAPIENTRY *glRecti) (GLint  x1, GLint  y1, GLint  x2, GLint  y2) = NULL;\nvoid (GLAPIENTRY *glRectiv) (const GLint * v1, const GLint * v2) = NULL;\nvoid (GLAPIENTRY *glRects) (GLshort  x1, GLshort  y1, GLshort  x2, GLshort  y2) = NULL;\nvoid (GLAPIENTRY *glRectsv) (const GLshort * v1, const GLshort * v2) = NULL;\nvoid (GLAPIENTRY *glReleaseShaderCompiler) () = NULL;\nvoid (GLAPIENTRY *glRenderGpuMaskNV) (GLbitfield  mask) = NULL;\nGLint (GLAPIENTRY *glRenderMode) (GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glRenderbufferStorage) (GLenum  target, GLenum  internalformat, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glRenderbufferStorageEXT) (GLenum  target, GLenum  internalformat, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glRenderbufferStorageMultisample) (GLenum  target, GLsizei  samples, GLenum  internalformat, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glRenderbufferStorageMultisampleAdvancedAMD) (GLenum  target, GLsizei  samples, GLsizei  storageSamples, GLenum  internalformat, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glRenderbufferStorageMultisampleCoverageNV) (GLenum  target, GLsizei  coverageSamples, GLsizei  colorSamples, GLenum  internalformat, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glRenderbufferStorageMultisampleEXT) (GLenum  target, GLsizei  samples, GLenum  internalformat, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glRequestResidentProgramsNV) (GLsizei  n, const GLuint * programs) = NULL;\nvoid (GLAPIENTRY *glResetHistogram) (GLenum  target) = NULL;\nvoid (GLAPIENTRY *glResetHistogramEXT) (GLenum  target) = NULL;\nvoid (GLAPIENTRY *glResetMemoryObjectParameterNV) (GLuint  memory, GLenum  pname) = NULL;\nvoid (GLAPIENTRY *glResetMinmax) (GLenum  target) = NULL;\nvoid (GLAPIENTRY *glResetMinmaxEXT) (GLenum  target) = NULL;\nvoid (GLAPIENTRY *glResolveDepthValuesNV) () = NULL;\nvoid (GLAPIENTRY *glResumeTransformFeedback) () = NULL;\nvoid (GLAPIENTRY *glResumeTransformFeedbackNV) () = NULL;\nvoid (GLAPIENTRY *glRotated) (GLdouble  angle, GLdouble  x, GLdouble  y, GLdouble  z) = NULL;\nvoid (GLAPIENTRY *glRotatef) (GLfloat  angle, GLfloat  x, GLfloat  y, GLfloat  z) = NULL;\nvoid (GLAPIENTRY *glSampleCoverage) (GLfloat  value, GLboolean  invert) = NULL;\nvoid (GLAPIENTRY *glSampleCoverageARB) (GLfloat  value, GLboolean  invert) = NULL;\nvoid (GLAPIENTRY *glSampleMaskEXT) (GLclampf  value, GLboolean  invert) = NULL;\nvoid (GLAPIENTRY *glSampleMaskIndexedNV) (GLuint  index, GLbitfield  mask) = NULL;\nvoid (GLAPIENTRY *glSampleMaski) (GLuint  maskNumber, GLbitfield  mask) = NULL;\nvoid (GLAPIENTRY *glSamplePatternEXT) (GLenum  pattern) = NULL;\nvoid (GLAPIENTRY *glSamplerParameterIiv) (GLuint  sampler, GLenum  pname, const GLint * param) = NULL;\nvoid (GLAPIENTRY *glSamplerParameterIuiv) (GLuint  sampler, GLenum  pname, const GLuint * param) = NULL;\nvoid (GLAPIENTRY *glSamplerParameterf) (GLuint  sampler, GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glSamplerParameterfv) (GLuint  sampler, GLenum  pname, const GLfloat * param) = NULL;\nvoid (GLAPIENTRY *glSamplerParameteri) (GLuint  sampler, GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glSamplerParameteriv) (GLuint  sampler, GLenum  pname, const GLint * param) = NULL;\nvoid (GLAPIENTRY *glScaled) (GLdouble  x, GLdouble  y, GLdouble  z) = NULL;\nvoid (GLAPIENTRY *glScalef) (GLfloat  x, GLfloat  y, GLfloat  z) = NULL;\nvoid (GLAPIENTRY *glScissor) (GLint  x, GLint  y, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glScissorArrayv) (GLuint  first, GLsizei  count, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glScissorExclusiveArrayvNV) (GLuint  first, GLsizei  count, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glScissorExclusiveNV) (GLint  x, GLint  y, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glScissorIndexed) (GLuint  index, GLint  left, GLint  bottom, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glScissorIndexedv) (GLuint  index, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3b) (GLbyte  red, GLbyte  green, GLbyte  blue) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3bEXT) (GLbyte  red, GLbyte  green, GLbyte  blue) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3bv) (const GLbyte * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3bvEXT) (const GLbyte * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3d) (GLdouble  red, GLdouble  green, GLdouble  blue) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3dEXT) (GLdouble  red, GLdouble  green, GLdouble  blue) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3dv) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3dvEXT) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3f) (GLfloat  red, GLfloat  green, GLfloat  blue) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3fEXT) (GLfloat  red, GLfloat  green, GLfloat  blue) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3fv) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3fvEXT) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3hNV) (GLhalfNV  red, GLhalfNV  green, GLhalfNV  blue) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3hvNV) (const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3i) (GLint  red, GLint  green, GLint  blue) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3iEXT) (GLint  red, GLint  green, GLint  blue) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3iv) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3ivEXT) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3s) (GLshort  red, GLshort  green, GLshort  blue) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3sEXT) (GLshort  red, GLshort  green, GLshort  blue) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3sv) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3svEXT) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3ub) (GLubyte  red, GLubyte  green, GLubyte  blue) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3ubEXT) (GLubyte  red, GLubyte  green, GLubyte  blue) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3ubv) (const GLubyte * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3ubvEXT) (const GLubyte * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3ui) (GLuint  red, GLuint  green, GLuint  blue) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3uiEXT) (GLuint  red, GLuint  green, GLuint  blue) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3uiv) (const GLuint * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3uivEXT) (const GLuint * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3us) (GLushort  red, GLushort  green, GLushort  blue) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3usEXT) (GLushort  red, GLushort  green, GLushort  blue) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3usv) (const GLushort * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColor3usvEXT) (const GLushort * v) = NULL;\nvoid (GLAPIENTRY *glSecondaryColorFormatNV) (GLint  size, GLenum  type, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glSecondaryColorP3ui) (GLenum  type, GLuint  color) = NULL;\nvoid (GLAPIENTRY *glSecondaryColorP3uiv) (GLenum  type, const GLuint * color) = NULL;\nvoid (GLAPIENTRY *glSecondaryColorPointer) (GLint  size, GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glSecondaryColorPointerEXT) (GLint  size, GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glSelectBuffer) (GLsizei  size, GLuint * buffer) = NULL;\nvoid (GLAPIENTRY *glSelectPerfMonitorCountersAMD) (GLuint  monitor, GLboolean  enable, GLuint  group, GLint  numCounters, GLuint * counterList) = NULL;\nvoid (GLAPIENTRY *glSemaphoreParameterui64vEXT) (GLuint  semaphore, GLenum  pname, const GLuint64 * params) = NULL;\nvoid (GLAPIENTRY *glSeparableFilter2D) (GLenum  target, GLenum  internalformat, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, const void * row, const void * column) = NULL;\nvoid (GLAPIENTRY *glSeparableFilter2DEXT) (GLenum  target, GLenum  internalformat, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, const void * row, const void * column) = NULL;\nvoid (GLAPIENTRY *glSetFenceAPPLE) (GLuint  fence) = NULL;\nvoid (GLAPIENTRY *glSetFenceNV) (GLuint  fence, GLenum  condition) = NULL;\nvoid (GLAPIENTRY *glSetInvariantEXT) (GLuint  id, GLenum  type, const void * addr) = NULL;\nvoid (GLAPIENTRY *glSetLocalConstantEXT) (GLuint  id, GLenum  type, const void * addr) = NULL;\nvoid (GLAPIENTRY *glSetMultisamplefvAMD) (GLenum  pname, GLuint  index, const GLfloat * val) = NULL;\nvoid (GLAPIENTRY *glShadeModel) (GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glShaderBinary) (GLsizei  count, const GLuint * shaders, GLenum  binaryformat, const void * binary, GLsizei  length) = NULL;\nvoid (GLAPIENTRY *glShaderOp1EXT) (GLenum  op, GLuint  res, GLuint  arg1) = NULL;\nvoid (GLAPIENTRY *glShaderOp2EXT) (GLenum  op, GLuint  res, GLuint  arg1, GLuint  arg2) = NULL;\nvoid (GLAPIENTRY *glShaderOp3EXT) (GLenum  op, GLuint  res, GLuint  arg1, GLuint  arg2, GLuint  arg3) = NULL;\nvoid (GLAPIENTRY *glShaderSource) (GLuint  shader, GLsizei  count, const GLchar *const* string, const GLint * length) = NULL;\nvoid (GLAPIENTRY *glShaderSourceARB) (GLhandleARB  shaderObj, GLsizei  count, const GLcharARB ** string, const GLint * length) = NULL;\nvoid (GLAPIENTRY *glShaderStorageBlockBinding) (GLuint  program, GLuint  storageBlockIndex, GLuint  storageBlockBinding) = NULL;\nvoid (GLAPIENTRY *glShadingRateImageBarrierNV) (GLboolean  synchronize) = NULL;\nvoid (GLAPIENTRY *glShadingRateImagePaletteNV) (GLuint  viewport, GLuint  first, GLsizei  count, const GLenum * rates) = NULL;\nvoid (GLAPIENTRY *glShadingRateSampleOrderNV) (GLenum  order) = NULL;\nvoid (GLAPIENTRY *glShadingRateSampleOrderCustomNV) (GLenum  rate, GLuint  samples, const GLint * locations) = NULL;\nvoid (GLAPIENTRY *glSignalSemaphoreEXT) (GLuint  semaphore, GLuint  numBufferBarriers, const GLuint * buffers, GLuint  numTextureBarriers, const GLuint * textures, const GLenum * dstLayouts) = NULL;\nvoid (GLAPIENTRY *glSpecializeShader) (GLuint  shader, const GLchar * pEntryPoint, GLuint  numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue) = NULL;\nvoid (GLAPIENTRY *glSpecializeShaderARB) (GLuint  shader, const GLchar * pEntryPoint, GLuint  numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue) = NULL;\nvoid (GLAPIENTRY *glStateCaptureNV) (GLuint  state, GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glStencilClearTagEXT) (GLsizei  stencilTagBits, GLuint  stencilClearTag) = NULL;\nvoid (GLAPIENTRY *glStencilFillPathInstancedNV) (GLsizei  numPaths, GLenum  pathNameType, const void * paths, GLuint  pathBase, GLenum  fillMode, GLuint  mask, GLenum  transformType, const GLfloat * transformValues) = NULL;\nvoid (GLAPIENTRY *glStencilFillPathNV) (GLuint  path, GLenum  fillMode, GLuint  mask) = NULL;\nvoid (GLAPIENTRY *glStencilFunc) (GLenum  func, GLint  ref, GLuint  mask) = NULL;\nvoid (GLAPIENTRY *glStencilFuncSeparate) (GLenum  face, GLenum  func, GLint  ref, GLuint  mask) = NULL;\nvoid (GLAPIENTRY *glStencilMask) (GLuint  mask) = NULL;\nvoid (GLAPIENTRY *glStencilMaskSeparate) (GLenum  face, GLuint  mask) = NULL;\nvoid (GLAPIENTRY *glStencilOp) (GLenum  fail, GLenum  zfail, GLenum  zpass) = NULL;\nvoid (GLAPIENTRY *glStencilOpSeparate) (GLenum  face, GLenum  sfail, GLenum  dpfail, GLenum  dppass) = NULL;\nvoid (GLAPIENTRY *glStencilOpValueAMD) (GLenum  face, GLuint  value) = NULL;\nvoid (GLAPIENTRY *glStencilStrokePathInstancedNV) (GLsizei  numPaths, GLenum  pathNameType, const void * paths, GLuint  pathBase, GLint  reference, GLuint  mask, GLenum  transformType, const GLfloat * transformValues) = NULL;\nvoid (GLAPIENTRY *glStencilStrokePathNV) (GLuint  path, GLint  reference, GLuint  mask) = NULL;\nvoid (GLAPIENTRY *glStencilThenCoverFillPathInstancedNV) (GLsizei  numPaths, GLenum  pathNameType, const void * paths, GLuint  pathBase, GLenum  fillMode, GLuint  mask, GLenum  coverMode, GLenum  transformType, const GLfloat * transformValues) = NULL;\nvoid (GLAPIENTRY *glStencilThenCoverFillPathNV) (GLuint  path, GLenum  fillMode, GLuint  mask, GLenum  coverMode) = NULL;\nvoid (GLAPIENTRY *glStencilThenCoverStrokePathInstancedNV) (GLsizei  numPaths, GLenum  pathNameType, const void * paths, GLuint  pathBase, GLint  reference, GLuint  mask, GLenum  coverMode, GLenum  transformType, const GLfloat * transformValues) = NULL;\nvoid (GLAPIENTRY *glStencilThenCoverStrokePathNV) (GLuint  path, GLint  reference, GLuint  mask, GLenum  coverMode) = NULL;\nvoid (GLAPIENTRY *glSubpixelPrecisionBiasNV) (GLuint  xbits, GLuint  ybits) = NULL;\nvoid (GLAPIENTRY *glSwizzleEXT) (GLuint  res, GLuint  in, GLenum  outX, GLenum  outY, GLenum  outZ, GLenum  outW) = NULL;\nvoid (GLAPIENTRY *glSyncTextureINTEL) (GLuint  texture) = NULL;\nvoid (GLAPIENTRY *glTangent3bEXT) (GLbyte  tx, GLbyte  ty, GLbyte  tz) = NULL;\nvoid (GLAPIENTRY *glTangent3bvEXT) (const GLbyte * v) = NULL;\nvoid (GLAPIENTRY *glTangent3dEXT) (GLdouble  tx, GLdouble  ty, GLdouble  tz) = NULL;\nvoid (GLAPIENTRY *glTangent3dvEXT) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glTangent3fEXT) (GLfloat  tx, GLfloat  ty, GLfloat  tz) = NULL;\nvoid (GLAPIENTRY *glTangent3fvEXT) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glTangent3iEXT) (GLint  tx, GLint  ty, GLint  tz) = NULL;\nvoid (GLAPIENTRY *glTangent3ivEXT) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glTangent3sEXT) (GLshort  tx, GLshort  ty, GLshort  tz) = NULL;\nvoid (GLAPIENTRY *glTangent3svEXT) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glTangentPointerEXT) (GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glTessellationFactorAMD) (GLfloat  factor) = NULL;\nvoid (GLAPIENTRY *glTessellationModeAMD) (GLenum  mode) = NULL;\nGLboolean (GLAPIENTRY *glTestFenceAPPLE) (GLuint  fence) = NULL;\nGLboolean (GLAPIENTRY *glTestFenceNV) (GLuint  fence) = NULL;\nGLboolean (GLAPIENTRY *glTestObjectAPPLE) (GLenum  object, GLuint  name) = NULL;\nvoid (GLAPIENTRY *glTexAttachMemoryNV) (GLenum  target, GLuint  memory, GLuint64  offset) = NULL;\nvoid (GLAPIENTRY *glTexBuffer) (GLenum  target, GLenum  internalformat, GLuint  buffer) = NULL;\nvoid (GLAPIENTRY *glTexBufferARB) (GLenum  target, GLenum  internalformat, GLuint  buffer) = NULL;\nvoid (GLAPIENTRY *glTexBufferEXT) (GLenum  target, GLenum  internalformat, GLuint  buffer) = NULL;\nvoid (GLAPIENTRY *glTexBufferRange) (GLenum  target, GLenum  internalformat, GLuint  buffer, GLintptr  offset, GLsizeiptr  size) = NULL;\nvoid (GLAPIENTRY *glTexCoord1d) (GLdouble  s) = NULL;\nvoid (GLAPIENTRY *glTexCoord1dv) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord1f) (GLfloat  s) = NULL;\nvoid (GLAPIENTRY *glTexCoord1fv) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord1hNV) (GLhalfNV  s) = NULL;\nvoid (GLAPIENTRY *glTexCoord1hvNV) (const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord1i) (GLint  s) = NULL;\nvoid (GLAPIENTRY *glTexCoord1iv) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord1s) (GLshort  s) = NULL;\nvoid (GLAPIENTRY *glTexCoord1sv) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord2d) (GLdouble  s, GLdouble  t) = NULL;\nvoid (GLAPIENTRY *glTexCoord2dv) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord2f) (GLfloat  s, GLfloat  t) = NULL;\nvoid (GLAPIENTRY *glTexCoord2fv) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord2hNV) (GLhalfNV  s, GLhalfNV  t) = NULL;\nvoid (GLAPIENTRY *glTexCoord2hvNV) (const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord2i) (GLint  s, GLint  t) = NULL;\nvoid (GLAPIENTRY *glTexCoord2iv) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord2s) (GLshort  s, GLshort  t) = NULL;\nvoid (GLAPIENTRY *glTexCoord2sv) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord3d) (GLdouble  s, GLdouble  t, GLdouble  r) = NULL;\nvoid (GLAPIENTRY *glTexCoord3dv) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord3f) (GLfloat  s, GLfloat  t, GLfloat  r) = NULL;\nvoid (GLAPIENTRY *glTexCoord3fv) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord3hNV) (GLhalfNV  s, GLhalfNV  t, GLhalfNV  r) = NULL;\nvoid (GLAPIENTRY *glTexCoord3hvNV) (const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord3i) (GLint  s, GLint  t, GLint  r) = NULL;\nvoid (GLAPIENTRY *glTexCoord3iv) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord3s) (GLshort  s, GLshort  t, GLshort  r) = NULL;\nvoid (GLAPIENTRY *glTexCoord3sv) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord4d) (GLdouble  s, GLdouble  t, GLdouble  r, GLdouble  q) = NULL;\nvoid (GLAPIENTRY *glTexCoord4dv) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord4f) (GLfloat  s, GLfloat  t, GLfloat  r, GLfloat  q) = NULL;\nvoid (GLAPIENTRY *glTexCoord4fv) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord4hNV) (GLhalfNV  s, GLhalfNV  t, GLhalfNV  r, GLhalfNV  q) = NULL;\nvoid (GLAPIENTRY *glTexCoord4hvNV) (const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord4i) (GLint  s, GLint  t, GLint  r, GLint  q) = NULL;\nvoid (GLAPIENTRY *glTexCoord4iv) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glTexCoord4s) (GLshort  s, GLshort  t, GLshort  r, GLshort  q) = NULL;\nvoid (GLAPIENTRY *glTexCoord4sv) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glTexCoordFormatNV) (GLint  size, GLenum  type, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glTexCoordP1ui) (GLenum  type, GLuint  coords) = NULL;\nvoid (GLAPIENTRY *glTexCoordP1uiv) (GLenum  type, const GLuint * coords) = NULL;\nvoid (GLAPIENTRY *glTexCoordP2ui) (GLenum  type, GLuint  coords) = NULL;\nvoid (GLAPIENTRY *glTexCoordP2uiv) (GLenum  type, const GLuint * coords) = NULL;\nvoid (GLAPIENTRY *glTexCoordP3ui) (GLenum  type, GLuint  coords) = NULL;\nvoid (GLAPIENTRY *glTexCoordP3uiv) (GLenum  type, const GLuint * coords) = NULL;\nvoid (GLAPIENTRY *glTexCoordP4ui) (GLenum  type, GLuint  coords) = NULL;\nvoid (GLAPIENTRY *glTexCoordP4uiv) (GLenum  type, const GLuint * coords) = NULL;\nvoid (GLAPIENTRY *glTexCoordPointer) (GLint  size, GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glTexCoordPointerEXT) (GLint  size, GLenum  type, GLsizei  stride, GLsizei  count, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glTexCoordPointervINTEL) (GLint  size, GLenum  type, const void ** pointer) = NULL;\nvoid (GLAPIENTRY *glTexEnvf) (GLenum  target, GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glTexEnvfv) (GLenum  target, GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glTexEnvi) (GLenum  target, GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glTexEnviv) (GLenum  target, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glTexGend) (GLenum  coord, GLenum  pname, GLdouble  param) = NULL;\nvoid (GLAPIENTRY *glTexGendv) (GLenum  coord, GLenum  pname, const GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glTexGenf) (GLenum  coord, GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glTexGenfv) (GLenum  coord, GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glTexGeni) (GLenum  coord, GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glTexGeniv) (GLenum  coord, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glTexImage1D) (GLenum  target, GLint  level, GLint  internalformat, GLsizei  width, GLint  border, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTexImage2D) (GLenum  target, GLint  level, GLint  internalformat, GLsizei  width, GLsizei  height, GLint  border, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTexImage2DMultisample) (GLenum  target, GLsizei  samples, GLenum  internalformat, GLsizei  width, GLsizei  height, GLboolean  fixedsamplelocations) = NULL;\nvoid (GLAPIENTRY *glTexImage2DMultisampleCoverageNV) (GLenum  target, GLsizei  coverageSamples, GLsizei  colorSamples, GLint  internalFormat, GLsizei  width, GLsizei  height, GLboolean  fixedSampleLocations) = NULL;\nvoid (GLAPIENTRY *glTexImage3D) (GLenum  target, GLint  level, GLint  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLint  border, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTexImage3DEXT) (GLenum  target, GLint  level, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLint  border, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTexImage3DMultisample) (GLenum  target, GLsizei  samples, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLboolean  fixedsamplelocations) = NULL;\nvoid (GLAPIENTRY *glTexImage3DMultisampleCoverageNV) (GLenum  target, GLsizei  coverageSamples, GLsizei  colorSamples, GLint  internalFormat, GLsizei  width, GLsizei  height, GLsizei  depth, GLboolean  fixedSampleLocations) = NULL;\nvoid (GLAPIENTRY *glTexPageCommitmentARB) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLboolean  commit) = NULL;\nvoid (GLAPIENTRY *glTexParameterIiv) (GLenum  target, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glTexParameterIivEXT) (GLenum  target, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glTexParameterIuiv) (GLenum  target, GLenum  pname, const GLuint * params) = NULL;\nvoid (GLAPIENTRY *glTexParameterIuivEXT) (GLenum  target, GLenum  pname, const GLuint * params) = NULL;\nvoid (GLAPIENTRY *glTexParameterf) (GLenum  target, GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glTexParameterfv) (GLenum  target, GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glTexParameteri) (GLenum  target, GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glTexParameteriv) (GLenum  target, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glTexRenderbufferNV) (GLenum  target, GLuint  renderbuffer) = NULL;\nvoid (GLAPIENTRY *glTexStorage1D) (GLenum  target, GLsizei  levels, GLenum  internalformat, GLsizei  width) = NULL;\nvoid (GLAPIENTRY *glTexStorage2D) (GLenum  target, GLsizei  levels, GLenum  internalformat, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glTexStorage2DMultisample) (GLenum  target, GLsizei  samples, GLenum  internalformat, GLsizei  width, GLsizei  height, GLboolean  fixedsamplelocations) = NULL;\nvoid (GLAPIENTRY *glTexStorage3D) (GLenum  target, GLsizei  levels, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth) = NULL;\nvoid (GLAPIENTRY *glTexStorage3DMultisample) (GLenum  target, GLsizei  samples, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLboolean  fixedsamplelocations) = NULL;\nvoid (GLAPIENTRY *glTexStorageMem1DEXT) (GLenum  target, GLsizei  levels, GLenum  internalFormat, GLsizei  width, GLuint  memory, GLuint64  offset) = NULL;\nvoid (GLAPIENTRY *glTexStorageMem2DEXT) (GLenum  target, GLsizei  levels, GLenum  internalFormat, GLsizei  width, GLsizei  height, GLuint  memory, GLuint64  offset) = NULL;\nvoid (GLAPIENTRY *glTexStorageMem2DMultisampleEXT) (GLenum  target, GLsizei  samples, GLenum  internalFormat, GLsizei  width, GLsizei  height, GLboolean  fixedSampleLocations, GLuint  memory, GLuint64  offset) = NULL;\nvoid (GLAPIENTRY *glTexStorageMem3DEXT) (GLenum  target, GLsizei  levels, GLenum  internalFormat, GLsizei  width, GLsizei  height, GLsizei  depth, GLuint  memory, GLuint64  offset) = NULL;\nvoid (GLAPIENTRY *glTexStorageMem3DMultisampleEXT) (GLenum  target, GLsizei  samples, GLenum  internalFormat, GLsizei  width, GLsizei  height, GLsizei  depth, GLboolean  fixedSampleLocations, GLuint  memory, GLuint64  offset) = NULL;\nvoid (GLAPIENTRY *glTexStorageSparseAMD) (GLenum  target, GLenum  internalFormat, GLsizei  width, GLsizei  height, GLsizei  depth, GLsizei  layers, GLbitfield  flags) = NULL;\nvoid (GLAPIENTRY *glTexSubImage1D) (GLenum  target, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTexSubImage1DEXT) (GLenum  target, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTexSubImage2D) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTexSubImage2DEXT) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTexSubImage3D) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTexSubImage3DEXT) (GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTextureAttachMemoryNV) (GLuint  texture, GLuint  memory, GLuint64  offset) = NULL;\nvoid (GLAPIENTRY *glTextureBarrier) () = NULL;\nvoid (GLAPIENTRY *glTextureBarrierNV) () = NULL;\nvoid (GLAPIENTRY *glTextureBuffer) (GLuint  texture, GLenum  internalformat, GLuint  buffer) = NULL;\nvoid (GLAPIENTRY *glTextureBufferEXT) (GLuint  texture, GLenum  target, GLenum  internalformat, GLuint  buffer) = NULL;\nvoid (GLAPIENTRY *glTextureBufferRange) (GLuint  texture, GLenum  internalformat, GLuint  buffer, GLintptr  offset, GLsizeiptr  size) = NULL;\nvoid (GLAPIENTRY *glTextureBufferRangeEXT) (GLuint  texture, GLenum  target, GLenum  internalformat, GLuint  buffer, GLintptr  offset, GLsizeiptr  size) = NULL;\nvoid (GLAPIENTRY *glTextureImage1DEXT) (GLuint  texture, GLenum  target, GLint  level, GLint  internalformat, GLsizei  width, GLint  border, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTextureImage2DEXT) (GLuint  texture, GLenum  target, GLint  level, GLint  internalformat, GLsizei  width, GLsizei  height, GLint  border, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTextureImage2DMultisampleCoverageNV) (GLuint  texture, GLenum  target, GLsizei  coverageSamples, GLsizei  colorSamples, GLint  internalFormat, GLsizei  width, GLsizei  height, GLboolean  fixedSampleLocations) = NULL;\nvoid (GLAPIENTRY *glTextureImage2DMultisampleNV) (GLuint  texture, GLenum  target, GLsizei  samples, GLint  internalFormat, GLsizei  width, GLsizei  height, GLboolean  fixedSampleLocations) = NULL;\nvoid (GLAPIENTRY *glTextureImage3DEXT) (GLuint  texture, GLenum  target, GLint  level, GLint  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLint  border, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTextureImage3DMultisampleCoverageNV) (GLuint  texture, GLenum  target, GLsizei  coverageSamples, GLsizei  colorSamples, GLint  internalFormat, GLsizei  width, GLsizei  height, GLsizei  depth, GLboolean  fixedSampleLocations) = NULL;\nvoid (GLAPIENTRY *glTextureImage3DMultisampleNV) (GLuint  texture, GLenum  target, GLsizei  samples, GLint  internalFormat, GLsizei  width, GLsizei  height, GLsizei  depth, GLboolean  fixedSampleLocations) = NULL;\nvoid (GLAPIENTRY *glTextureLightEXT) (GLenum  pname) = NULL;\nvoid (GLAPIENTRY *glTextureMaterialEXT) (GLenum  face, GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glTextureNormalEXT) (GLenum  mode) = NULL;\nvoid (GLAPIENTRY *glTexturePageCommitmentEXT) (GLuint  texture, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLboolean  commit) = NULL;\nvoid (GLAPIENTRY *glTextureParameterIiv) (GLuint  texture, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glTextureParameterIivEXT) (GLuint  texture, GLenum  target, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glTextureParameterIuiv) (GLuint  texture, GLenum  pname, const GLuint * params) = NULL;\nvoid (GLAPIENTRY *glTextureParameterIuivEXT) (GLuint  texture, GLenum  target, GLenum  pname, const GLuint * params) = NULL;\nvoid (GLAPIENTRY *glTextureParameterf) (GLuint  texture, GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glTextureParameterfEXT) (GLuint  texture, GLenum  target, GLenum  pname, GLfloat  param) = NULL;\nvoid (GLAPIENTRY *glTextureParameterfv) (GLuint  texture, GLenum  pname, const GLfloat * param) = NULL;\nvoid (GLAPIENTRY *glTextureParameterfvEXT) (GLuint  texture, GLenum  target, GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glTextureParameteri) (GLuint  texture, GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glTextureParameteriEXT) (GLuint  texture, GLenum  target, GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glTextureParameteriv) (GLuint  texture, GLenum  pname, const GLint * param) = NULL;\nvoid (GLAPIENTRY *glTextureParameterivEXT) (GLuint  texture, GLenum  target, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glTextureRangeAPPLE) (GLenum  target, GLsizei  length, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glTextureRenderbufferEXT) (GLuint  texture, GLenum  target, GLuint  renderbuffer) = NULL;\nvoid (GLAPIENTRY *glTextureStorage1D) (GLuint  texture, GLsizei  levels, GLenum  internalformat, GLsizei  width) = NULL;\nvoid (GLAPIENTRY *glTextureStorage1DEXT) (GLuint  texture, GLenum  target, GLsizei  levels, GLenum  internalformat, GLsizei  width) = NULL;\nvoid (GLAPIENTRY *glTextureStorage2D) (GLuint  texture, GLsizei  levels, GLenum  internalformat, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glTextureStorage2DEXT) (GLuint  texture, GLenum  target, GLsizei  levels, GLenum  internalformat, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glTextureStorage2DMultisample) (GLuint  texture, GLsizei  samples, GLenum  internalformat, GLsizei  width, GLsizei  height, GLboolean  fixedsamplelocations) = NULL;\nvoid (GLAPIENTRY *glTextureStorage2DMultisampleEXT) (GLuint  texture, GLenum  target, GLsizei  samples, GLenum  internalformat, GLsizei  width, GLsizei  height, GLboolean  fixedsamplelocations) = NULL;\nvoid (GLAPIENTRY *glTextureStorage3D) (GLuint  texture, GLsizei  levels, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth) = NULL;\nvoid (GLAPIENTRY *glTextureStorage3DEXT) (GLuint  texture, GLenum  target, GLsizei  levels, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth) = NULL;\nvoid (GLAPIENTRY *glTextureStorage3DMultisample) (GLuint  texture, GLsizei  samples, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLboolean  fixedsamplelocations) = NULL;\nvoid (GLAPIENTRY *glTextureStorage3DMultisampleEXT) (GLuint  texture, GLenum  target, GLsizei  samples, GLenum  internalformat, GLsizei  width, GLsizei  height, GLsizei  depth, GLboolean  fixedsamplelocations) = NULL;\nvoid (GLAPIENTRY *glTextureStorageMem1DEXT) (GLuint  texture, GLsizei  levels, GLenum  internalFormat, GLsizei  width, GLuint  memory, GLuint64  offset) = NULL;\nvoid (GLAPIENTRY *glTextureStorageMem2DEXT) (GLuint  texture, GLsizei  levels, GLenum  internalFormat, GLsizei  width, GLsizei  height, GLuint  memory, GLuint64  offset) = NULL;\nvoid (GLAPIENTRY *glTextureStorageMem2DMultisampleEXT) (GLuint  texture, GLsizei  samples, GLenum  internalFormat, GLsizei  width, GLsizei  height, GLboolean  fixedSampleLocations, GLuint  memory, GLuint64  offset) = NULL;\nvoid (GLAPIENTRY *glTextureStorageMem3DEXT) (GLuint  texture, GLsizei  levels, GLenum  internalFormat, GLsizei  width, GLsizei  height, GLsizei  depth, GLuint  memory, GLuint64  offset) = NULL;\nvoid (GLAPIENTRY *glTextureStorageMem3DMultisampleEXT) (GLuint  texture, GLsizei  samples, GLenum  internalFormat, GLsizei  width, GLsizei  height, GLsizei  depth, GLboolean  fixedSampleLocations, GLuint  memory, GLuint64  offset) = NULL;\nvoid (GLAPIENTRY *glTextureStorageSparseAMD) (GLuint  texture, GLenum  target, GLenum  internalFormat, GLsizei  width, GLsizei  height, GLsizei  depth, GLsizei  layers, GLbitfield  flags) = NULL;\nvoid (GLAPIENTRY *glTextureSubImage1D) (GLuint  texture, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTextureSubImage1DEXT) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTextureSubImage2D) (GLuint  texture, GLint  level, GLint  xoffset, GLint  yoffset, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTextureSubImage2DEXT) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLsizei  width, GLsizei  height, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTextureSubImage3D) (GLuint  texture, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTextureSubImage3DEXT) (GLuint  texture, GLenum  target, GLint  level, GLint  xoffset, GLint  yoffset, GLint  zoffset, GLsizei  width, GLsizei  height, GLsizei  depth, GLenum  format, GLenum  type, const void * pixels) = NULL;\nvoid (GLAPIENTRY *glTextureView) (GLuint  texture, GLenum  target, GLuint  origtexture, GLenum  internalformat, GLuint  minlevel, GLuint  numlevels, GLuint  minlayer, GLuint  numlayers) = NULL;\nvoid (GLAPIENTRY *glTrackMatrixNV) (GLenum  target, GLuint  address, GLenum  matrix, GLenum  transform) = NULL;\nvoid (GLAPIENTRY *glTransformFeedbackAttribsNV) (GLsizei  count, const GLint * attribs, GLenum  bufferMode) = NULL;\nvoid (GLAPIENTRY *glTransformFeedbackBufferBase) (GLuint  xfb, GLuint  index, GLuint  buffer) = NULL;\nvoid (GLAPIENTRY *glTransformFeedbackBufferRange) (GLuint  xfb, GLuint  index, GLuint  buffer, GLintptr  offset, GLsizeiptr  size) = NULL;\nvoid (GLAPIENTRY *glTransformFeedbackStreamAttribsNV) (GLsizei  count, const GLint * attribs, GLsizei  nbuffers, const GLint * bufstreams, GLenum  bufferMode) = NULL;\nvoid (GLAPIENTRY *glTransformFeedbackVaryings) (GLuint  program, GLsizei  count, const GLchar *const* varyings, GLenum  bufferMode) = NULL;\nvoid (GLAPIENTRY *glTransformFeedbackVaryingsEXT) (GLuint  program, GLsizei  count, const GLchar *const* varyings, GLenum  bufferMode) = NULL;\nvoid (GLAPIENTRY *glTransformFeedbackVaryingsNV) (GLuint  program, GLsizei  count, const GLint * locations, GLenum  bufferMode) = NULL;\nvoid (GLAPIENTRY *glTransformPathNV) (GLuint  resultPath, GLuint  srcPath, GLenum  transformType, const GLfloat * transformValues) = NULL;\nvoid (GLAPIENTRY *glTranslated) (GLdouble  x, GLdouble  y, GLdouble  z) = NULL;\nvoid (GLAPIENTRY *glTranslatef) (GLfloat  x, GLfloat  y, GLfloat  z) = NULL;\nvoid (GLAPIENTRY *glUniform1d) (GLint  location, GLdouble  x) = NULL;\nvoid (GLAPIENTRY *glUniform1dv) (GLint  location, GLsizei  count, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glUniform1f) (GLint  location, GLfloat  v0) = NULL;\nvoid (GLAPIENTRY *glUniform1fARB) (GLint  location, GLfloat  v0) = NULL;\nvoid (GLAPIENTRY *glUniform1fv) (GLint  location, GLsizei  count, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniform1fvARB) (GLint  location, GLsizei  count, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniform1i) (GLint  location, GLint  v0) = NULL;\nvoid (GLAPIENTRY *glUniform1i64ARB) (GLint  location, GLint64  x) = NULL;\nvoid (GLAPIENTRY *glUniform1i64NV) (GLint  location, GLint64EXT  x) = NULL;\nvoid (GLAPIENTRY *glUniform1i64vARB) (GLint  location, GLsizei  count, const GLint64 * value) = NULL;\nvoid (GLAPIENTRY *glUniform1i64vNV) (GLint  location, GLsizei  count, const GLint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glUniform1iARB) (GLint  location, GLint  v0) = NULL;\nvoid (GLAPIENTRY *glUniform1iv) (GLint  location, GLsizei  count, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glUniform1ivARB) (GLint  location, GLsizei  count, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glUniform1ui) (GLint  location, GLuint  v0) = NULL;\nvoid (GLAPIENTRY *glUniform1ui64ARB) (GLint  location, GLuint64  x) = NULL;\nvoid (GLAPIENTRY *glUniform1ui64NV) (GLint  location, GLuint64EXT  x) = NULL;\nvoid (GLAPIENTRY *glUniform1ui64vARB) (GLint  location, GLsizei  count, const GLuint64 * value) = NULL;\nvoid (GLAPIENTRY *glUniform1ui64vNV) (GLint  location, GLsizei  count, const GLuint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glUniform1uiEXT) (GLint  location, GLuint  v0) = NULL;\nvoid (GLAPIENTRY *glUniform1uiv) (GLint  location, GLsizei  count, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glUniform1uivEXT) (GLint  location, GLsizei  count, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glUniform2d) (GLint  location, GLdouble  x, GLdouble  y) = NULL;\nvoid (GLAPIENTRY *glUniform2dv) (GLint  location, GLsizei  count, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glUniform2f) (GLint  location, GLfloat  v0, GLfloat  v1) = NULL;\nvoid (GLAPIENTRY *glUniform2fARB) (GLint  location, GLfloat  v0, GLfloat  v1) = NULL;\nvoid (GLAPIENTRY *glUniform2fv) (GLint  location, GLsizei  count, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniform2fvARB) (GLint  location, GLsizei  count, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniform2i) (GLint  location, GLint  v0, GLint  v1) = NULL;\nvoid (GLAPIENTRY *glUniform2i64ARB) (GLint  location, GLint64  x, GLint64  y) = NULL;\nvoid (GLAPIENTRY *glUniform2i64NV) (GLint  location, GLint64EXT  x, GLint64EXT  y) = NULL;\nvoid (GLAPIENTRY *glUniform2i64vARB) (GLint  location, GLsizei  count, const GLint64 * value) = NULL;\nvoid (GLAPIENTRY *glUniform2i64vNV) (GLint  location, GLsizei  count, const GLint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glUniform2iARB) (GLint  location, GLint  v0, GLint  v1) = NULL;\nvoid (GLAPIENTRY *glUniform2iv) (GLint  location, GLsizei  count, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glUniform2ivARB) (GLint  location, GLsizei  count, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glUniform2ui) (GLint  location, GLuint  v0, GLuint  v1) = NULL;\nvoid (GLAPIENTRY *glUniform2ui64ARB) (GLint  location, GLuint64  x, GLuint64  y) = NULL;\nvoid (GLAPIENTRY *glUniform2ui64NV) (GLint  location, GLuint64EXT  x, GLuint64EXT  y) = NULL;\nvoid (GLAPIENTRY *glUniform2ui64vARB) (GLint  location, GLsizei  count, const GLuint64 * value) = NULL;\nvoid (GLAPIENTRY *glUniform2ui64vNV) (GLint  location, GLsizei  count, const GLuint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glUniform2uiEXT) (GLint  location, GLuint  v0, GLuint  v1) = NULL;\nvoid (GLAPIENTRY *glUniform2uiv) (GLint  location, GLsizei  count, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glUniform2uivEXT) (GLint  location, GLsizei  count, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glUniform3d) (GLint  location, GLdouble  x, GLdouble  y, GLdouble  z) = NULL;\nvoid (GLAPIENTRY *glUniform3dv) (GLint  location, GLsizei  count, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glUniform3f) (GLint  location, GLfloat  v0, GLfloat  v1, GLfloat  v2) = NULL;\nvoid (GLAPIENTRY *glUniform3fARB) (GLint  location, GLfloat  v0, GLfloat  v1, GLfloat  v2) = NULL;\nvoid (GLAPIENTRY *glUniform3fv) (GLint  location, GLsizei  count, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniform3fvARB) (GLint  location, GLsizei  count, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniform3i) (GLint  location, GLint  v0, GLint  v1, GLint  v2) = NULL;\nvoid (GLAPIENTRY *glUniform3i64ARB) (GLint  location, GLint64  x, GLint64  y, GLint64  z) = NULL;\nvoid (GLAPIENTRY *glUniform3i64NV) (GLint  location, GLint64EXT  x, GLint64EXT  y, GLint64EXT  z) = NULL;\nvoid (GLAPIENTRY *glUniform3i64vARB) (GLint  location, GLsizei  count, const GLint64 * value) = NULL;\nvoid (GLAPIENTRY *glUniform3i64vNV) (GLint  location, GLsizei  count, const GLint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glUniform3iARB) (GLint  location, GLint  v0, GLint  v1, GLint  v2) = NULL;\nvoid (GLAPIENTRY *glUniform3iv) (GLint  location, GLsizei  count, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glUniform3ivARB) (GLint  location, GLsizei  count, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glUniform3ui) (GLint  location, GLuint  v0, GLuint  v1, GLuint  v2) = NULL;\nvoid (GLAPIENTRY *glUniform3ui64ARB) (GLint  location, GLuint64  x, GLuint64  y, GLuint64  z) = NULL;\nvoid (GLAPIENTRY *glUniform3ui64NV) (GLint  location, GLuint64EXT  x, GLuint64EXT  y, GLuint64EXT  z) = NULL;\nvoid (GLAPIENTRY *glUniform3ui64vARB) (GLint  location, GLsizei  count, const GLuint64 * value) = NULL;\nvoid (GLAPIENTRY *glUniform3ui64vNV) (GLint  location, GLsizei  count, const GLuint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glUniform3uiEXT) (GLint  location, GLuint  v0, GLuint  v1, GLuint  v2) = NULL;\nvoid (GLAPIENTRY *glUniform3uiv) (GLint  location, GLsizei  count, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glUniform3uivEXT) (GLint  location, GLsizei  count, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glUniform4d) (GLint  location, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w) = NULL;\nvoid (GLAPIENTRY *glUniform4dv) (GLint  location, GLsizei  count, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glUniform4f) (GLint  location, GLfloat  v0, GLfloat  v1, GLfloat  v2, GLfloat  v3) = NULL;\nvoid (GLAPIENTRY *glUniform4fARB) (GLint  location, GLfloat  v0, GLfloat  v1, GLfloat  v2, GLfloat  v3) = NULL;\nvoid (GLAPIENTRY *glUniform4fv) (GLint  location, GLsizei  count, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniform4fvARB) (GLint  location, GLsizei  count, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniform4i) (GLint  location, GLint  v0, GLint  v1, GLint  v2, GLint  v3) = NULL;\nvoid (GLAPIENTRY *glUniform4i64ARB) (GLint  location, GLint64  x, GLint64  y, GLint64  z, GLint64  w) = NULL;\nvoid (GLAPIENTRY *glUniform4i64NV) (GLint  location, GLint64EXT  x, GLint64EXT  y, GLint64EXT  z, GLint64EXT  w) = NULL;\nvoid (GLAPIENTRY *glUniform4i64vARB) (GLint  location, GLsizei  count, const GLint64 * value) = NULL;\nvoid (GLAPIENTRY *glUniform4i64vNV) (GLint  location, GLsizei  count, const GLint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glUniform4iARB) (GLint  location, GLint  v0, GLint  v1, GLint  v2, GLint  v3) = NULL;\nvoid (GLAPIENTRY *glUniform4iv) (GLint  location, GLsizei  count, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glUniform4ivARB) (GLint  location, GLsizei  count, const GLint * value) = NULL;\nvoid (GLAPIENTRY *glUniform4ui) (GLint  location, GLuint  v0, GLuint  v1, GLuint  v2, GLuint  v3) = NULL;\nvoid (GLAPIENTRY *glUniform4ui64ARB) (GLint  location, GLuint64  x, GLuint64  y, GLuint64  z, GLuint64  w) = NULL;\nvoid (GLAPIENTRY *glUniform4ui64NV) (GLint  location, GLuint64EXT  x, GLuint64EXT  y, GLuint64EXT  z, GLuint64EXT  w) = NULL;\nvoid (GLAPIENTRY *glUniform4ui64vARB) (GLint  location, GLsizei  count, const GLuint64 * value) = NULL;\nvoid (GLAPIENTRY *glUniform4ui64vNV) (GLint  location, GLsizei  count, const GLuint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glUniform4uiEXT) (GLint  location, GLuint  v0, GLuint  v1, GLuint  v2, GLuint  v3) = NULL;\nvoid (GLAPIENTRY *glUniform4uiv) (GLint  location, GLsizei  count, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glUniform4uivEXT) (GLint  location, GLsizei  count, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glUniformBlockBinding) (GLuint  program, GLuint  uniformBlockIndex, GLuint  uniformBlockBinding) = NULL;\nvoid (GLAPIENTRY *glUniformBufferEXT) (GLuint  program, GLint  location, GLuint  buffer) = NULL;\nvoid (GLAPIENTRY *glUniformHandleui64ARB) (GLint  location, GLuint64  value) = NULL;\nvoid (GLAPIENTRY *glUniformHandleui64NV) (GLint  location, GLuint64  value) = NULL;\nvoid (GLAPIENTRY *glUniformHandleui64vARB) (GLint  location, GLsizei  count, const GLuint64 * value) = NULL;\nvoid (GLAPIENTRY *glUniformHandleui64vNV) (GLint  location, GLsizei  count, const GLuint64 * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix2dv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix2fv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix2fvARB) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix2x3dv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix2x3fv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix2x4dv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix2x4fv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix3dv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix3fv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix3fvARB) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix3x2dv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix3x2fv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix3x4dv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix3x4fv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix4dv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix4fv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix4fvARB) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix4x2dv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix4x2fv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix4x3dv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLdouble * value) = NULL;\nvoid (GLAPIENTRY *glUniformMatrix4x3fv) (GLint  location, GLsizei  count, GLboolean  transpose, const GLfloat * value) = NULL;\nvoid (GLAPIENTRY *glUniformSubroutinesuiv) (GLenum  shadertype, GLsizei  count, const GLuint * indices) = NULL;\nvoid (GLAPIENTRY *glUniformui64NV) (GLint  location, GLuint64EXT  value) = NULL;\nvoid (GLAPIENTRY *glUniformui64vNV) (GLint  location, GLsizei  count, const GLuint64EXT * value) = NULL;\nvoid (GLAPIENTRY *glUnlockArraysEXT) () = NULL;\nGLboolean (GLAPIENTRY *glUnmapBuffer) (GLenum  target) = NULL;\nGLboolean (GLAPIENTRY *glUnmapBufferARB) (GLenum  target) = NULL;\nGLboolean (GLAPIENTRY *glUnmapNamedBuffer) (GLuint  buffer) = NULL;\nGLboolean (GLAPIENTRY *glUnmapNamedBufferEXT) (GLuint  buffer) = NULL;\nvoid (GLAPIENTRY *glUnmapTexture2DINTEL) (GLuint  texture, GLint  level) = NULL;\nvoid (GLAPIENTRY *glUseProgram) (GLuint  program) = NULL;\nvoid (GLAPIENTRY *glUseProgramObjectARB) (GLhandleARB  programObj) = NULL;\nvoid (GLAPIENTRY *glUseProgramStages) (GLuint  pipeline, GLbitfield  stages, GLuint  program) = NULL;\nvoid (GLAPIENTRY *glUseProgramStagesEXT) (GLuint  pipeline, GLbitfield  stages, GLuint  program) = NULL;\nvoid (GLAPIENTRY *glUseShaderProgramEXT) (GLenum  type, GLuint  program) = NULL;\nvoid (GLAPIENTRY *glVDPAUFiniNV) () = NULL;\nvoid (GLAPIENTRY *glVDPAUGetSurfaceivNV) (GLvdpauSurfaceNV  surface, GLenum  pname, GLsizei  count, GLsizei * length, GLint * values) = NULL;\nvoid (GLAPIENTRY *glVDPAUInitNV) (const void * vdpDevice, const void * getProcAddress) = NULL;\nGLboolean (GLAPIENTRY *glVDPAUIsSurfaceNV) (GLvdpauSurfaceNV  surface) = NULL;\nvoid (GLAPIENTRY *glVDPAUMapSurfacesNV) (GLsizei  numSurfaces, const GLvdpauSurfaceNV * surfaces) = NULL;\nGLvdpauSurfaceNV (GLAPIENTRY *glVDPAURegisterOutputSurfaceNV) (const void * vdpSurface, GLenum  target, GLsizei  numTextureNames, const GLuint * textureNames) = NULL;\nGLvdpauSurfaceNV (GLAPIENTRY *glVDPAURegisterVideoSurfaceNV) (const void * vdpSurface, GLenum  target, GLsizei  numTextureNames, const GLuint * textureNames) = NULL;\nGLvdpauSurfaceNV (GLAPIENTRY *glVDPAURegisterVideoSurfaceWithPictureStructureNV) (const void * vdpSurface, GLenum  target, GLsizei  numTextureNames, const GLuint * textureNames, GLboolean  isFrameStructure) = NULL;\nvoid (GLAPIENTRY *glVDPAUSurfaceAccessNV) (GLvdpauSurfaceNV  surface, GLenum  access) = NULL;\nvoid (GLAPIENTRY *glVDPAUUnmapSurfacesNV) (GLsizei  numSurface, const GLvdpauSurfaceNV * surfaces) = NULL;\nvoid (GLAPIENTRY *glVDPAUUnregisterSurfaceNV) (GLvdpauSurfaceNV  surface) = NULL;\nvoid (GLAPIENTRY *glValidateProgram) (GLuint  program) = NULL;\nvoid (GLAPIENTRY *glValidateProgramARB) (GLhandleARB  programObj) = NULL;\nvoid (GLAPIENTRY *glValidateProgramPipeline) (GLuint  pipeline) = NULL;\nvoid (GLAPIENTRY *glValidateProgramPipelineEXT) (GLuint  pipeline) = NULL;\nvoid (GLAPIENTRY *glVariantPointerEXT) (GLuint  id, GLenum  type, GLuint  stride, const void * addr) = NULL;\nvoid (GLAPIENTRY *glVariantbvEXT) (GLuint  id, const GLbyte * addr) = NULL;\nvoid (GLAPIENTRY *glVariantdvEXT) (GLuint  id, const GLdouble * addr) = NULL;\nvoid (GLAPIENTRY *glVariantfvEXT) (GLuint  id, const GLfloat * addr) = NULL;\nvoid (GLAPIENTRY *glVariantivEXT) (GLuint  id, const GLint * addr) = NULL;\nvoid (GLAPIENTRY *glVariantsvEXT) (GLuint  id, const GLshort * addr) = NULL;\nvoid (GLAPIENTRY *glVariantubvEXT) (GLuint  id, const GLubyte * addr) = NULL;\nvoid (GLAPIENTRY *glVariantuivEXT) (GLuint  id, const GLuint * addr) = NULL;\nvoid (GLAPIENTRY *glVariantusvEXT) (GLuint  id, const GLushort * addr) = NULL;\nvoid (GLAPIENTRY *glVertex2d) (GLdouble  x, GLdouble  y) = NULL;\nvoid (GLAPIENTRY *glVertex2dv) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertex2f) (GLfloat  x, GLfloat  y) = NULL;\nvoid (GLAPIENTRY *glVertex2fv) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertex2hNV) (GLhalfNV  x, GLhalfNV  y) = NULL;\nvoid (GLAPIENTRY *glVertex2hvNV) (const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glVertex2i) (GLint  x, GLint  y) = NULL;\nvoid (GLAPIENTRY *glVertex2iv) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glVertex2s) (GLshort  x, GLshort  y) = NULL;\nvoid (GLAPIENTRY *glVertex2sv) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertex3d) (GLdouble  x, GLdouble  y, GLdouble  z) = NULL;\nvoid (GLAPIENTRY *glVertex3dv) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertex3f) (GLfloat  x, GLfloat  y, GLfloat  z) = NULL;\nvoid (GLAPIENTRY *glVertex3fv) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertex3hNV) (GLhalfNV  x, GLhalfNV  y, GLhalfNV  z) = NULL;\nvoid (GLAPIENTRY *glVertex3hvNV) (const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glVertex3i) (GLint  x, GLint  y, GLint  z) = NULL;\nvoid (GLAPIENTRY *glVertex3iv) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glVertex3s) (GLshort  x, GLshort  y, GLshort  z) = NULL;\nvoid (GLAPIENTRY *glVertex3sv) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertex4d) (GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w) = NULL;\nvoid (GLAPIENTRY *glVertex4dv) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertex4f) (GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w) = NULL;\nvoid (GLAPIENTRY *glVertex4fv) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertex4hNV) (GLhalfNV  x, GLhalfNV  y, GLhalfNV  z, GLhalfNV  w) = NULL;\nvoid (GLAPIENTRY *glVertex4hvNV) (const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glVertex4i) (GLint  x, GLint  y, GLint  z, GLint  w) = NULL;\nvoid (GLAPIENTRY *glVertex4iv) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glVertex4s) (GLshort  x, GLshort  y, GLshort  z, GLshort  w) = NULL;\nvoid (GLAPIENTRY *glVertex4sv) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexArrayAttribBinding) (GLuint  vaobj, GLuint  attribindex, GLuint  bindingindex) = NULL;\nvoid (GLAPIENTRY *glVertexArrayAttribFormat) (GLuint  vaobj, GLuint  attribindex, GLint  size, GLenum  type, GLboolean  normalized, GLuint  relativeoffset) = NULL;\nvoid (GLAPIENTRY *glVertexArrayAttribIFormat) (GLuint  vaobj, GLuint  attribindex, GLint  size, GLenum  type, GLuint  relativeoffset) = NULL;\nvoid (GLAPIENTRY *glVertexArrayAttribLFormat) (GLuint  vaobj, GLuint  attribindex, GLint  size, GLenum  type, GLuint  relativeoffset) = NULL;\nvoid (GLAPIENTRY *glVertexArrayBindVertexBufferEXT) (GLuint  vaobj, GLuint  bindingindex, GLuint  buffer, GLintptr  offset, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glVertexArrayBindingDivisor) (GLuint  vaobj, GLuint  bindingindex, GLuint  divisor) = NULL;\nvoid (GLAPIENTRY *glVertexArrayColorOffsetEXT) (GLuint  vaobj, GLuint  buffer, GLint  size, GLenum  type, GLsizei  stride, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glVertexArrayEdgeFlagOffsetEXT) (GLuint  vaobj, GLuint  buffer, GLsizei  stride, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glVertexArrayElementBuffer) (GLuint  vaobj, GLuint  buffer) = NULL;\nvoid (GLAPIENTRY *glVertexArrayFogCoordOffsetEXT) (GLuint  vaobj, GLuint  buffer, GLenum  type, GLsizei  stride, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glVertexArrayIndexOffsetEXT) (GLuint  vaobj, GLuint  buffer, GLenum  type, GLsizei  stride, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glVertexArrayMultiTexCoordOffsetEXT) (GLuint  vaobj, GLuint  buffer, GLenum  texunit, GLint  size, GLenum  type, GLsizei  stride, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glVertexArrayNormalOffsetEXT) (GLuint  vaobj, GLuint  buffer, GLenum  type, GLsizei  stride, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glVertexArrayParameteriAPPLE) (GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glVertexArrayRangeAPPLE) (GLsizei  length, void * pointer) = NULL;\nvoid (GLAPIENTRY *glVertexArrayRangeNV) (GLsizei  length, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glVertexArraySecondaryColorOffsetEXT) (GLuint  vaobj, GLuint  buffer, GLint  size, GLenum  type, GLsizei  stride, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glVertexArrayTexCoordOffsetEXT) (GLuint  vaobj, GLuint  buffer, GLint  size, GLenum  type, GLsizei  stride, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glVertexArrayVertexAttribBindingEXT) (GLuint  vaobj, GLuint  attribindex, GLuint  bindingindex) = NULL;\nvoid (GLAPIENTRY *glVertexArrayVertexAttribDivisorEXT) (GLuint  vaobj, GLuint  index, GLuint  divisor) = NULL;\nvoid (GLAPIENTRY *glVertexArrayVertexAttribFormatEXT) (GLuint  vaobj, GLuint  attribindex, GLint  size, GLenum  type, GLboolean  normalized, GLuint  relativeoffset) = NULL;\nvoid (GLAPIENTRY *glVertexArrayVertexAttribIFormatEXT) (GLuint  vaobj, GLuint  attribindex, GLint  size, GLenum  type, GLuint  relativeoffset) = NULL;\nvoid (GLAPIENTRY *glVertexArrayVertexAttribIOffsetEXT) (GLuint  vaobj, GLuint  buffer, GLuint  index, GLint  size, GLenum  type, GLsizei  stride, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glVertexArrayVertexAttribLFormatEXT) (GLuint  vaobj, GLuint  attribindex, GLint  size, GLenum  type, GLuint  relativeoffset) = NULL;\nvoid (GLAPIENTRY *glVertexArrayVertexAttribLOffsetEXT) (GLuint  vaobj, GLuint  buffer, GLuint  index, GLint  size, GLenum  type, GLsizei  stride, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glVertexArrayVertexAttribOffsetEXT) (GLuint  vaobj, GLuint  buffer, GLuint  index, GLint  size, GLenum  type, GLboolean  normalized, GLsizei  stride, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glVertexArrayVertexBindingDivisorEXT) (GLuint  vaobj, GLuint  bindingindex, GLuint  divisor) = NULL;\nvoid (GLAPIENTRY *glVertexArrayVertexBuffer) (GLuint  vaobj, GLuint  bindingindex, GLuint  buffer, GLintptr  offset, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glVertexArrayVertexBuffers) (GLuint  vaobj, GLuint  first, GLsizei  count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides) = NULL;\nvoid (GLAPIENTRY *glVertexArrayVertexOffsetEXT) (GLuint  vaobj, GLuint  buffer, GLint  size, GLenum  type, GLsizei  stride, GLintptr  offset) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1d) (GLuint  index, GLdouble  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1dARB) (GLuint  index, GLdouble  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1dNV) (GLuint  index, GLdouble  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1dv) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1dvARB) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1dvNV) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1f) (GLuint  index, GLfloat  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1fARB) (GLuint  index, GLfloat  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1fNV) (GLuint  index, GLfloat  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1fv) (GLuint  index, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1fvARB) (GLuint  index, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1fvNV) (GLuint  index, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1hNV) (GLuint  index, GLhalfNV  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1hvNV) (GLuint  index, const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1s) (GLuint  index, GLshort  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1sARB) (GLuint  index, GLshort  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1sNV) (GLuint  index, GLshort  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1sv) (GLuint  index, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1svARB) (GLuint  index, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib1svNV) (GLuint  index, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2d) (GLuint  index, GLdouble  x, GLdouble  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2dARB) (GLuint  index, GLdouble  x, GLdouble  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2dNV) (GLuint  index, GLdouble  x, GLdouble  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2dv) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2dvARB) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2dvNV) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2f) (GLuint  index, GLfloat  x, GLfloat  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2fARB) (GLuint  index, GLfloat  x, GLfloat  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2fNV) (GLuint  index, GLfloat  x, GLfloat  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2fv) (GLuint  index, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2fvARB) (GLuint  index, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2fvNV) (GLuint  index, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2hNV) (GLuint  index, GLhalfNV  x, GLhalfNV  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2hvNV) (GLuint  index, const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2s) (GLuint  index, GLshort  x, GLshort  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2sARB) (GLuint  index, GLshort  x, GLshort  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2sNV) (GLuint  index, GLshort  x, GLshort  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2sv) (GLuint  index, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2svARB) (GLuint  index, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib2svNV) (GLuint  index, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3d) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3dARB) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3dNV) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3dv) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3dvARB) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3dvNV) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3f) (GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3fARB) (GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3fNV) (GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3fv) (GLuint  index, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3fvARB) (GLuint  index, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3fvNV) (GLuint  index, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3hNV) (GLuint  index, GLhalfNV  x, GLhalfNV  y, GLhalfNV  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3hvNV) (GLuint  index, const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3s) (GLuint  index, GLshort  x, GLshort  y, GLshort  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3sARB) (GLuint  index, GLshort  x, GLshort  y, GLshort  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3sNV) (GLuint  index, GLshort  x, GLshort  y, GLshort  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3sv) (GLuint  index, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3svARB) (GLuint  index, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib3svNV) (GLuint  index, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4Nbv) (GLuint  index, const GLbyte * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4NbvARB) (GLuint  index, const GLbyte * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4Niv) (GLuint  index, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4NivARB) (GLuint  index, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4Nsv) (GLuint  index, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4NsvARB) (GLuint  index, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4Nub) (GLuint  index, GLubyte  x, GLubyte  y, GLubyte  z, GLubyte  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4NubARB) (GLuint  index, GLubyte  x, GLubyte  y, GLubyte  z, GLubyte  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4Nubv) (GLuint  index, const GLubyte * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4NubvARB) (GLuint  index, const GLubyte * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4Nuiv) (GLuint  index, const GLuint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4NuivARB) (GLuint  index, const GLuint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4Nusv) (GLuint  index, const GLushort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4NusvARB) (GLuint  index, const GLushort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4bv) (GLuint  index, const GLbyte * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4bvARB) (GLuint  index, const GLbyte * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4d) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4dARB) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4dNV) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4dv) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4dvARB) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4dvNV) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4f) (GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4fARB) (GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4fNV) (GLuint  index, GLfloat  x, GLfloat  y, GLfloat  z, GLfloat  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4fv) (GLuint  index, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4fvARB) (GLuint  index, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4fvNV) (GLuint  index, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4hNV) (GLuint  index, GLhalfNV  x, GLhalfNV  y, GLhalfNV  z, GLhalfNV  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4hvNV) (GLuint  index, const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4iv) (GLuint  index, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4ivARB) (GLuint  index, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4s) (GLuint  index, GLshort  x, GLshort  y, GLshort  z, GLshort  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4sARB) (GLuint  index, GLshort  x, GLshort  y, GLshort  z, GLshort  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4sNV) (GLuint  index, GLshort  x, GLshort  y, GLshort  z, GLshort  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4sv) (GLuint  index, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4svARB) (GLuint  index, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4svNV) (GLuint  index, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4ubNV) (GLuint  index, GLubyte  x, GLubyte  y, GLubyte  z, GLubyte  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4ubv) (GLuint  index, const GLubyte * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4ubvARB) (GLuint  index, const GLubyte * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4ubvNV) (GLuint  index, const GLubyte * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4uiv) (GLuint  index, const GLuint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4uivARB) (GLuint  index, const GLuint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4usv) (GLuint  index, const GLushort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttrib4usvARB) (GLuint  index, const GLushort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribBinding) (GLuint  attribindex, GLuint  bindingindex) = NULL;\nvoid (GLAPIENTRY *glVertexAttribDivisor) (GLuint  index, GLuint  divisor) = NULL;\nvoid (GLAPIENTRY *glVertexAttribDivisorARB) (GLuint  index, GLuint  divisor) = NULL;\nvoid (GLAPIENTRY *glVertexAttribFormat) (GLuint  attribindex, GLint  size, GLenum  type, GLboolean  normalized, GLuint  relativeoffset) = NULL;\nvoid (GLAPIENTRY *glVertexAttribFormatNV) (GLuint  index, GLint  size, GLenum  type, GLboolean  normalized, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI1i) (GLuint  index, GLint  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI1iEXT) (GLuint  index, GLint  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI1iv) (GLuint  index, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI1ivEXT) (GLuint  index, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI1ui) (GLuint  index, GLuint  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI1uiEXT) (GLuint  index, GLuint  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI1uiv) (GLuint  index, const GLuint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI1uivEXT) (GLuint  index, const GLuint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI2i) (GLuint  index, GLint  x, GLint  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI2iEXT) (GLuint  index, GLint  x, GLint  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI2iv) (GLuint  index, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI2ivEXT) (GLuint  index, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI2ui) (GLuint  index, GLuint  x, GLuint  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI2uiEXT) (GLuint  index, GLuint  x, GLuint  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI2uiv) (GLuint  index, const GLuint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI2uivEXT) (GLuint  index, const GLuint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI3i) (GLuint  index, GLint  x, GLint  y, GLint  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI3iEXT) (GLuint  index, GLint  x, GLint  y, GLint  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI3iv) (GLuint  index, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI3ivEXT) (GLuint  index, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI3ui) (GLuint  index, GLuint  x, GLuint  y, GLuint  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI3uiEXT) (GLuint  index, GLuint  x, GLuint  y, GLuint  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI3uiv) (GLuint  index, const GLuint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI3uivEXT) (GLuint  index, const GLuint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI4bv) (GLuint  index, const GLbyte * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI4bvEXT) (GLuint  index, const GLbyte * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI4i) (GLuint  index, GLint  x, GLint  y, GLint  z, GLint  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI4iEXT) (GLuint  index, GLint  x, GLint  y, GLint  z, GLint  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI4iv) (GLuint  index, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI4ivEXT) (GLuint  index, const GLint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI4sv) (GLuint  index, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI4svEXT) (GLuint  index, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI4ubv) (GLuint  index, const GLubyte * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI4ubvEXT) (GLuint  index, const GLubyte * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI4ui) (GLuint  index, GLuint  x, GLuint  y, GLuint  z, GLuint  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI4uiEXT) (GLuint  index, GLuint  x, GLuint  y, GLuint  z, GLuint  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI4uiv) (GLuint  index, const GLuint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI4uivEXT) (GLuint  index, const GLuint * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI4usv) (GLuint  index, const GLushort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribI4usvEXT) (GLuint  index, const GLushort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribIFormat) (GLuint  attribindex, GLint  size, GLenum  type, GLuint  relativeoffset) = NULL;\nvoid (GLAPIENTRY *glVertexAttribIFormatNV) (GLuint  index, GLint  size, GLenum  type, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glVertexAttribIPointer) (GLuint  index, GLint  size, GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glVertexAttribIPointerEXT) (GLuint  index, GLint  size, GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL1d) (GLuint  index, GLdouble  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL1dEXT) (GLuint  index, GLdouble  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL1dv) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL1dvEXT) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL1i64NV) (GLuint  index, GLint64EXT  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL1i64vNV) (GLuint  index, const GLint64EXT * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL1ui64ARB) (GLuint  index, GLuint64EXT  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL1ui64NV) (GLuint  index, GLuint64EXT  x) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL1ui64vARB) (GLuint  index, const GLuint64EXT * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL1ui64vNV) (GLuint  index, const GLuint64EXT * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL2d) (GLuint  index, GLdouble  x, GLdouble  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL2dEXT) (GLuint  index, GLdouble  x, GLdouble  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL2dv) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL2dvEXT) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL2i64NV) (GLuint  index, GLint64EXT  x, GLint64EXT  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL2i64vNV) (GLuint  index, const GLint64EXT * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL2ui64NV) (GLuint  index, GLuint64EXT  x, GLuint64EXT  y) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL2ui64vNV) (GLuint  index, const GLuint64EXT * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL3d) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL3dEXT) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL3dv) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL3dvEXT) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL3i64NV) (GLuint  index, GLint64EXT  x, GLint64EXT  y, GLint64EXT  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL3i64vNV) (GLuint  index, const GLint64EXT * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL3ui64NV) (GLuint  index, GLuint64EXT  x, GLuint64EXT  y, GLuint64EXT  z) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL3ui64vNV) (GLuint  index, const GLuint64EXT * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL4d) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL4dEXT) (GLuint  index, GLdouble  x, GLdouble  y, GLdouble  z, GLdouble  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL4dv) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL4dvEXT) (GLuint  index, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL4i64NV) (GLuint  index, GLint64EXT  x, GLint64EXT  y, GLint64EXT  z, GLint64EXT  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL4i64vNV) (GLuint  index, const GLint64EXT * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL4ui64NV) (GLuint  index, GLuint64EXT  x, GLuint64EXT  y, GLuint64EXT  z, GLuint64EXT  w) = NULL;\nvoid (GLAPIENTRY *glVertexAttribL4ui64vNV) (GLuint  index, const GLuint64EXT * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribLFormat) (GLuint  attribindex, GLint  size, GLenum  type, GLuint  relativeoffset) = NULL;\nvoid (GLAPIENTRY *glVertexAttribLFormatNV) (GLuint  index, GLint  size, GLenum  type, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glVertexAttribLPointer) (GLuint  index, GLint  size, GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glVertexAttribLPointerEXT) (GLuint  index, GLint  size, GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glVertexAttribP1ui) (GLuint  index, GLenum  type, GLboolean  normalized, GLuint  value) = NULL;\nvoid (GLAPIENTRY *glVertexAttribP1uiv) (GLuint  index, GLenum  type, GLboolean  normalized, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glVertexAttribP2ui) (GLuint  index, GLenum  type, GLboolean  normalized, GLuint  value) = NULL;\nvoid (GLAPIENTRY *glVertexAttribP2uiv) (GLuint  index, GLenum  type, GLboolean  normalized, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glVertexAttribP3ui) (GLuint  index, GLenum  type, GLboolean  normalized, GLuint  value) = NULL;\nvoid (GLAPIENTRY *glVertexAttribP3uiv) (GLuint  index, GLenum  type, GLboolean  normalized, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glVertexAttribP4ui) (GLuint  index, GLenum  type, GLboolean  normalized, GLuint  value) = NULL;\nvoid (GLAPIENTRY *glVertexAttribP4uiv) (GLuint  index, GLenum  type, GLboolean  normalized, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glVertexAttribParameteriAMD) (GLuint  index, GLenum  pname, GLint  param) = NULL;\nvoid (GLAPIENTRY *glVertexAttribPointer) (GLuint  index, GLint  size, GLenum  type, GLboolean  normalized, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glVertexAttribPointerARB) (GLuint  index, GLint  size, GLenum  type, GLboolean  normalized, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glVertexAttribPointerNV) (GLuint  index, GLint  fsize, GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glVertexAttribs1dvNV) (GLuint  index, GLsizei  count, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribs1fvNV) (GLuint  index, GLsizei  count, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribs1hvNV) (GLuint  index, GLsizei  n, const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribs1svNV) (GLuint  index, GLsizei  count, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribs2dvNV) (GLuint  index, GLsizei  count, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribs2fvNV) (GLuint  index, GLsizei  count, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribs2hvNV) (GLuint  index, GLsizei  n, const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribs2svNV) (GLuint  index, GLsizei  count, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribs3dvNV) (GLuint  index, GLsizei  count, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribs3fvNV) (GLuint  index, GLsizei  count, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribs3hvNV) (GLuint  index, GLsizei  n, const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribs3svNV) (GLuint  index, GLsizei  count, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribs4dvNV) (GLuint  index, GLsizei  count, const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribs4fvNV) (GLuint  index, GLsizei  count, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribs4hvNV) (GLuint  index, GLsizei  n, const GLhalfNV * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribs4svNV) (GLuint  index, GLsizei  count, const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glVertexAttribs4ubvNV) (GLuint  index, GLsizei  count, const GLubyte * v) = NULL;\nvoid (GLAPIENTRY *glVertexBindingDivisor) (GLuint  bindingindex, GLuint  divisor) = NULL;\nvoid (GLAPIENTRY *glVertexBlendARB) (GLint  count) = NULL;\nvoid (GLAPIENTRY *glVertexFormatNV) (GLint  size, GLenum  type, GLsizei  stride) = NULL;\nvoid (GLAPIENTRY *glVertexP2ui) (GLenum  type, GLuint  value) = NULL;\nvoid (GLAPIENTRY *glVertexP2uiv) (GLenum  type, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glVertexP3ui) (GLenum  type, GLuint  value) = NULL;\nvoid (GLAPIENTRY *glVertexP3uiv) (GLenum  type, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glVertexP4ui) (GLenum  type, GLuint  value) = NULL;\nvoid (GLAPIENTRY *glVertexP4uiv) (GLenum  type, const GLuint * value) = NULL;\nvoid (GLAPIENTRY *glVertexPointer) (GLint  size, GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glVertexPointerEXT) (GLint  size, GLenum  type, GLsizei  stride, GLsizei  count, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glVertexPointervINTEL) (GLint  size, GLenum  type, const void ** pointer) = NULL;\nvoid (GLAPIENTRY *glVertexWeightPointerEXT) (GLint  size, GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glVertexWeightfEXT) (GLfloat  weight) = NULL;\nvoid (GLAPIENTRY *glVertexWeightfvEXT) (const GLfloat * weight) = NULL;\nvoid (GLAPIENTRY *glVertexWeighthNV) (GLhalfNV  weight) = NULL;\nvoid (GLAPIENTRY *glVertexWeighthvNV) (const GLhalfNV * weight) = NULL;\nGLenum (GLAPIENTRY *glVideoCaptureNV) (GLuint  video_capture_slot, GLuint * sequence_num, GLuint64EXT * capture_time) = NULL;\nvoid (GLAPIENTRY *glVideoCaptureStreamParameterdvNV) (GLuint  video_capture_slot, GLuint  stream, GLenum  pname, const GLdouble * params) = NULL;\nvoid (GLAPIENTRY *glVideoCaptureStreamParameterfvNV) (GLuint  video_capture_slot, GLuint  stream, GLenum  pname, const GLfloat * params) = NULL;\nvoid (GLAPIENTRY *glVideoCaptureStreamParameterivNV) (GLuint  video_capture_slot, GLuint  stream, GLenum  pname, const GLint * params) = NULL;\nvoid (GLAPIENTRY *glViewport) (GLint  x, GLint  y, GLsizei  width, GLsizei  height) = NULL;\nvoid (GLAPIENTRY *glViewportArrayv) (GLuint  first, GLsizei  count, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glViewportIndexedf) (GLuint  index, GLfloat  x, GLfloat  y, GLfloat  w, GLfloat  h) = NULL;\nvoid (GLAPIENTRY *glViewportIndexedfv) (GLuint  index, const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glViewportPositionWScaleNV) (GLuint  index, GLfloat  xcoeff, GLfloat  ycoeff) = NULL;\nvoid (GLAPIENTRY *glViewportSwizzleNV) (GLuint  index, GLenum  swizzlex, GLenum  swizzley, GLenum  swizzlez, GLenum  swizzlew) = NULL;\nvoid (GLAPIENTRY *glWaitSemaphoreEXT) (GLuint  semaphore, GLuint  numBufferBarriers, const GLuint * buffers, GLuint  numTextureBarriers, const GLuint * textures, const GLenum * srcLayouts) = NULL;\nvoid (GLAPIENTRY *glWaitSync) (GLsync  sync, GLbitfield  flags, GLuint64  timeout) = NULL;\nvoid (GLAPIENTRY *glWeightPathsNV) (GLuint  resultPath, GLsizei  numPaths, const GLuint * paths, const GLfloat * weights) = NULL;\nvoid (GLAPIENTRY *glWeightPointerARB) (GLint  size, GLenum  type, GLsizei  stride, const void * pointer) = NULL;\nvoid (GLAPIENTRY *glWeightbvARB) (GLint  size, const GLbyte * weights) = NULL;\nvoid (GLAPIENTRY *glWeightdvARB) (GLint  size, const GLdouble * weights) = NULL;\nvoid (GLAPIENTRY *glWeightfvARB) (GLint  size, const GLfloat * weights) = NULL;\nvoid (GLAPIENTRY *glWeightivARB) (GLint  size, const GLint * weights) = NULL;\nvoid (GLAPIENTRY *glWeightsvARB) (GLint  size, const GLshort * weights) = NULL;\nvoid (GLAPIENTRY *glWeightubvARB) (GLint  size, const GLubyte * weights) = NULL;\nvoid (GLAPIENTRY *glWeightuivARB) (GLint  size, const GLuint * weights) = NULL;\nvoid (GLAPIENTRY *glWeightusvARB) (GLint  size, const GLushort * weights) = NULL;\nvoid (GLAPIENTRY *glWindowPos2d) (GLdouble  x, GLdouble  y) = NULL;\nvoid (GLAPIENTRY *glWindowPos2dARB) (GLdouble  x, GLdouble  y) = NULL;\nvoid (GLAPIENTRY *glWindowPos2dv) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glWindowPos2dvARB) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glWindowPos2f) (GLfloat  x, GLfloat  y) = NULL;\nvoid (GLAPIENTRY *glWindowPos2fARB) (GLfloat  x, GLfloat  y) = NULL;\nvoid (GLAPIENTRY *glWindowPos2fv) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glWindowPos2fvARB) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glWindowPos2i) (GLint  x, GLint  y) = NULL;\nvoid (GLAPIENTRY *glWindowPos2iARB) (GLint  x, GLint  y) = NULL;\nvoid (GLAPIENTRY *glWindowPos2iv) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glWindowPos2ivARB) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glWindowPos2s) (GLshort  x, GLshort  y) = NULL;\nvoid (GLAPIENTRY *glWindowPos2sARB) (GLshort  x, GLshort  y) = NULL;\nvoid (GLAPIENTRY *glWindowPos2sv) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glWindowPos2svARB) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glWindowPos3d) (GLdouble  x, GLdouble  y, GLdouble  z) = NULL;\nvoid (GLAPIENTRY *glWindowPos3dARB) (GLdouble  x, GLdouble  y, GLdouble  z) = NULL;\nvoid (GLAPIENTRY *glWindowPos3dv) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glWindowPos3dvARB) (const GLdouble * v) = NULL;\nvoid (GLAPIENTRY *glWindowPos3f) (GLfloat  x, GLfloat  y, GLfloat  z) = NULL;\nvoid (GLAPIENTRY *glWindowPos3fARB) (GLfloat  x, GLfloat  y, GLfloat  z) = NULL;\nvoid (GLAPIENTRY *glWindowPos3fv) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glWindowPos3fvARB) (const GLfloat * v) = NULL;\nvoid (GLAPIENTRY *glWindowPos3i) (GLint  x, GLint  y, GLint  z) = NULL;\nvoid (GLAPIENTRY *glWindowPos3iARB) (GLint  x, GLint  y, GLint  z) = NULL;\nvoid (GLAPIENTRY *glWindowPos3iv) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glWindowPos3ivARB) (const GLint * v) = NULL;\nvoid (GLAPIENTRY *glWindowPos3s) (GLshort  x, GLshort  y, GLshort  z) = NULL;\nvoid (GLAPIENTRY *glWindowPos3sARB) (GLshort  x, GLshort  y, GLshort  z) = NULL;\nvoid (GLAPIENTRY *glWindowPos3sv) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glWindowPos3svARB) (const GLshort * v) = NULL;\nvoid (GLAPIENTRY *glWindowRectanglesEXT) (GLenum  mode, GLsizei  count, const GLint * box) = NULL;\nvoid (GLAPIENTRY *glWriteMaskEXT) (GLuint  res, GLuint  in, GLenum  outX, GLenum  outY, GLenum  outZ, GLenum  outW) = NULL;\nvoid (GLAPIENTRY *glDrawVkImageNV) (GLuint64  vkImage, GLuint  sampler, GLfloat  x0, GLfloat  y0, GLfloat  x1, GLfloat  y1, GLfloat  z, GLfloat  s0, GLfloat  t0, GLfloat  s1, GLfloat  t1) = NULL;\nGLVULKANPROCNV (GLAPIENTRY *glGetVkProcAddrNV) (const GLchar * name) = NULL;\nvoid (GLAPIENTRY *glWaitVkSemaphoreNV) (GLuint64  vkSemaphore) = NULL;\nvoid (GLAPIENTRY *glSignalVkSemaphoreNV) (GLuint64  vkSemaphore) = NULL;\nvoid (GLAPIENTRY *glSignalVkFenceNV) (GLuint64  vkFence) = NULL;\n\n\n\n#ifdef _WIN32\n    static HMODULE libGL;\n#else\n    static void* libGL = NULL;\n#endif\n#ifndef __APPLE__\n    typedef void * (GLAPIENTRY * PFNGETPROCADDRESS)(const char*);\n    PFNGETPROCADDRESS getProcAddress = NULL;\n#endif\n\nstatic bool loadLibrary()\n{\n#ifdef _WIN32\n    libGL = LoadLibraryW(L\"opengl32.dll\");\n#elif __APPLE__\n    libGL = dlopen(\"/System/Library/Frameworks/OpenGL.framework/Versions/Current/OpenGL\", RTLD_LAZY | RTLD_LOCAL);\n#else\n    libGL = dlopen(\"libGL.so.1\", RTLD_LAZY | RTLD_LOCAL);\n#endif\n#ifndef __APPLE__\n#ifdef _WIN32\n    getProcAddress = (PFNGETPROCADDRESS) GetProcAddress(libGL, \"wglGetProcAddress\");\n#else\n    getProcAddress = (PFNGETPROCADDRESS) dlsym(libGL, \"glXGetProcAddressARB\");\n#endif\n#endif\n    return true;\n}\n\nstatic void unloadLibrary(void)\n{\n    if(libGL != NULL)\n    {\n        #ifdef _WIN32\n            FreeLibrary((HMODULE) libGL);\n        #else\n            dlclose(libGL);\n        #endif\n        libGL = NULL;\n    }\n}\n\nstatic void* loadFunction(const char *name)\n{\n    void* result = NULL;\n    assert(libGL != NULL);\n\n#ifndef __APPLE__\n    if(getProcAddress != NULL)\n    {\n        result = (void*)getProcAddress(name);\n    }\n#endif\n\n    if(result == NULL)\n    {\n        #ifdef _WIN32\n            result = (void*)GetProcAddress(libGL, name);\n        #else\n            result = dlsym(libGL, name);\n        #endif\n    }\n    return result;\n}\n\nstatic bool hasExt(const char * ext,\n                   const std::vector<const char *> & extensions)\n{\n    for (size_t i=0; i<extensions.size(); ++i) {\n        if (strcmp(ext, extensions[i]) == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\nstatic bool loadSymbols()\n{\n    glGetIntegerv = (PFNGLGETINTEGERVPROC) loadFunction(\"glGetIntegerv\");\n    glGetString = (PFNGLGETSTRINGPROC) loadFunction(\"glGetString\");\n    glGetStringi = (PFNGLGETSTRINGIPROC) loadFunction(\"glGetStringi\");\n\n    GLint major = 0, minor = 0;\n\n    // direct version query is supported only for versions 3.x and greater\n    const char * versionStr = (const char *) glGetString(GL_VERSION);\n    if (versionStr && versionStr[0] == '1' && versionStr[1] == '.') {\n        major = 1;\n        minor = versionStr[2] - '0';\n    } else if (versionStr && versionStr[0] == '2' && versionStr[1] == '.') {\n        major = 2;\n        minor = versionStr[2] - '0';\n    } else {\n        glGetIntegerv(GL_MAJOR_VERSION, &major);\n        glGetIntegerv(GL_MINOR_VERSION, &minor);\n    }\n\n    std::vector<const char *> extensions;\n    std::vector<char> extensionsBuffer; // used when parsing extensions string\n\n    // direct extension query is supported only for versions 3.x and greater\n    if (major >= 3) {\n        GLint numExtensions = 0;\n        glGetIntegerv(GL_NUM_EXTENSIONS, &numExtensions);\n        extensions.resize(numExtensions);\n        for (size_t i=0; i<extensions.size(); ++i) {\n           extensions[i] = (const char *) glGetStringi(GL_EXTENSIONS,(GLuint)i);\n        }\n    } else if (major > 0) {\n        const char * extStr = (const char *) glGetString(GL_EXTENSIONS);\n        const size_t extStrLen = strlen(extStr);\n\n        // make a copy so that we can terminate substrings\n        extensionsBuffer.assign(extStr, extStr+extStrLen+1);\n\n        // identify and terminate substrings\n        bool inSubstring = false;\n        for (size_t i=0; i<extStrLen; ++i) {\n            if (extensionsBuffer[i] == ' ') {\n                extensionsBuffer[i] = '\\0';\n                inSubstring = false;\n            } else if (!inSubstring) {\n                extensions.push_back(&extensionsBuffer[i]);\n                inSubstring = true;\n            }\n        }\n    }\n\n    GLAPILOADER_GL_VERSION_1_0 = (major == 1 && minor >= 0) || major > 1;\n    GLAPILOADER_GL_VERSION_1_1 = (major == 1 && minor >= 1) || major > 1;\n    GLAPILOADER_GL_VERSION_1_2 = (major == 1 && minor >= 2) || major > 1;\n    GLAPILOADER_GL_VERSION_1_3 = (major == 1 && minor >= 3) || major > 1;\n    GLAPILOADER_GL_VERSION_1_4 = (major == 1 && minor >= 4) || major > 1;\n    GLAPILOADER_GL_VERSION_1_5 = (major == 1 && minor >= 5) || major > 1;\n    GLAPILOADER_GL_VERSION_2_0 = (major == 2 && minor >= 0) || major > 2;\n    GLAPILOADER_GL_VERSION_2_1 = (major == 2 && minor >= 1) || major > 2;\n    GLAPILOADER_GL_VERSION_3_0 = (major == 3 && minor >= 0) || major > 3;\n    GLAPILOADER_GL_VERSION_3_1 = (major == 3 && minor >= 1) || major > 3;\n    GLAPILOADER_GL_VERSION_3_2 = (major == 3 && minor >= 2) || major > 3;\n    GLAPILOADER_GL_VERSION_3_3 = (major == 3 && minor >= 3) || major > 3;\n    GLAPILOADER_GL_VERSION_4_0 = (major == 4 && minor >= 0) || major > 4;\n    GLAPILOADER_GL_VERSION_4_1 = (major == 4 && minor >= 1) || major > 4;\n    GLAPILOADER_GL_VERSION_4_2 = (major == 4 && minor >= 2) || major > 4;\n    GLAPILOADER_GL_VERSION_4_3 = (major == 4 && minor >= 3) || major > 4;\n    GLAPILOADER_GL_VERSION_4_4 = (major == 4 && minor >= 4) || major > 4;\n    GLAPILOADER_GL_VERSION_4_5 = (major == 4 && minor >= 5) || major > 4;\n    GLAPILOADER_GL_VERSION_4_6 = (major == 4 && minor >= 6) || major > 4;\n\n    GLAPILOADER_GL_AMD_blend_minmax_factor = hasExt(\"GL_AMD_blend_minmax_factor\", extensions);\n    GLAPILOADER_GL_AMD_conservative_depth = hasExt(\"GL_AMD_conservative_depth\", extensions);\n    GLAPILOADER_GL_AMD_debug_output = hasExt(\"GL_AMD_debug_output\", extensions);\n    GLAPILOADER_GL_AMD_depth_clamp_separate = hasExt(\"GL_AMD_depth_clamp_separate\", extensions);\n    GLAPILOADER_GL_AMD_draw_buffers_blend = hasExt(\"GL_AMD_draw_buffers_blend\", extensions);\n    GLAPILOADER_GL_AMD_framebuffer_multisample_advanced = hasExt(\"GL_AMD_framebuffer_multisample_advanced\", extensions);\n    GLAPILOADER_GL_AMD_framebuffer_sample_positions = hasExt(\"GL_AMD_framebuffer_sample_positions\", extensions);\n    GLAPILOADER_GL_AMD_gcn_shader = hasExt(\"GL_AMD_gcn_shader\", extensions);\n    GLAPILOADER_GL_AMD_gpu_shader_half_float = hasExt(\"GL_AMD_gpu_shader_half_float\", extensions);\n    GLAPILOADER_GL_AMD_gpu_shader_int16 = hasExt(\"GL_AMD_gpu_shader_int16\", extensions);\n    GLAPILOADER_GL_AMD_gpu_shader_int64 = hasExt(\"GL_AMD_gpu_shader_int64\", extensions);\n    GLAPILOADER_GL_AMD_interleaved_elements = hasExt(\"GL_AMD_interleaved_elements\", extensions);\n    GLAPILOADER_GL_AMD_multi_draw_indirect = hasExt(\"GL_AMD_multi_draw_indirect\", extensions);\n    GLAPILOADER_GL_AMD_name_gen_delete = hasExt(\"GL_AMD_name_gen_delete\", extensions);\n    GLAPILOADER_GL_AMD_occlusion_query_event = hasExt(\"GL_AMD_occlusion_query_event\", extensions);\n    GLAPILOADER_GL_AMD_performance_monitor = hasExt(\"GL_AMD_performance_monitor\", extensions);\n    GLAPILOADER_GL_AMD_pinned_memory = hasExt(\"GL_AMD_pinned_memory\", extensions);\n    GLAPILOADER_GL_AMD_query_buffer_object = hasExt(\"GL_AMD_query_buffer_object\", extensions);\n    GLAPILOADER_GL_AMD_sample_positions = hasExt(\"GL_AMD_sample_positions\", extensions);\n    GLAPILOADER_GL_AMD_seamless_cubemap_per_texture = hasExt(\"GL_AMD_seamless_cubemap_per_texture\", extensions);\n    GLAPILOADER_GL_AMD_shader_atomic_counter_ops = hasExt(\"GL_AMD_shader_atomic_counter_ops\", extensions);\n    GLAPILOADER_GL_AMD_shader_ballot = hasExt(\"GL_AMD_shader_ballot\", extensions);\n    GLAPILOADER_GL_AMD_shader_gpu_shader_half_float_fetch = hasExt(\"GL_AMD_shader_gpu_shader_half_float_fetch\", extensions);\n    GLAPILOADER_GL_AMD_shader_image_load_store_lod = hasExt(\"GL_AMD_shader_image_load_store_lod\", extensions);\n    GLAPILOADER_GL_AMD_shader_stencil_export = hasExt(\"GL_AMD_shader_stencil_export\", extensions);\n    GLAPILOADER_GL_AMD_shader_trinary_minmax = hasExt(\"GL_AMD_shader_trinary_minmax\", extensions);\n    GLAPILOADER_GL_AMD_shader_explicit_vertex_parameter = hasExt(\"GL_AMD_shader_explicit_vertex_parameter\", extensions);\n    GLAPILOADER_GL_AMD_sparse_texture = hasExt(\"GL_AMD_sparse_texture\", extensions);\n    GLAPILOADER_GL_AMD_stencil_operation_extended = hasExt(\"GL_AMD_stencil_operation_extended\", extensions);\n    GLAPILOADER_GL_AMD_texture_gather_bias_lod = hasExt(\"GL_AMD_texture_gather_bias_lod\", extensions);\n    GLAPILOADER_GL_AMD_texture_texture4 = hasExt(\"GL_AMD_texture_texture4\", extensions);\n    GLAPILOADER_GL_AMD_transform_feedback3_lines_triangles = hasExt(\"GL_AMD_transform_feedback3_lines_triangles\", extensions);\n    GLAPILOADER_GL_AMD_transform_feedback4 = hasExt(\"GL_AMD_transform_feedback4\", extensions);\n    GLAPILOADER_GL_AMD_vertex_shader_layer = hasExt(\"GL_AMD_vertex_shader_layer\", extensions);\n    GLAPILOADER_GL_AMD_vertex_shader_tessellator = hasExt(\"GL_AMD_vertex_shader_tessellator\", extensions);\n    GLAPILOADER_GL_AMD_vertex_shader_viewport_index = hasExt(\"GL_AMD_vertex_shader_viewport_index\", extensions);\n    GLAPILOADER_GL_APPLE_aux_depth_stencil = hasExt(\"GL_APPLE_aux_depth_stencil\", extensions);\n    GLAPILOADER_GL_APPLE_client_storage = hasExt(\"GL_APPLE_client_storage\", extensions);\n    GLAPILOADER_GL_APPLE_element_array = hasExt(\"GL_APPLE_element_array\", extensions);\n    GLAPILOADER_GL_APPLE_fence = hasExt(\"GL_APPLE_fence\", extensions);\n    GLAPILOADER_GL_APPLE_float_pixels = hasExt(\"GL_APPLE_float_pixels\", extensions);\n    GLAPILOADER_GL_APPLE_flush_buffer_range = hasExt(\"GL_APPLE_flush_buffer_range\", extensions);\n    GLAPILOADER_GL_APPLE_object_purgeable = hasExt(\"GL_APPLE_object_purgeable\", extensions);\n    GLAPILOADER_GL_APPLE_rgb_422 = hasExt(\"GL_APPLE_rgb_422\", extensions);\n    GLAPILOADER_GL_APPLE_row_bytes = hasExt(\"GL_APPLE_row_bytes\", extensions);\n    GLAPILOADER_GL_APPLE_specular_vector = hasExt(\"GL_APPLE_specular_vector\", extensions);\n    GLAPILOADER_GL_APPLE_texture_range = hasExt(\"GL_APPLE_texture_range\", extensions);\n    GLAPILOADER_GL_APPLE_transform_hint = hasExt(\"GL_APPLE_transform_hint\", extensions);\n    GLAPILOADER_GL_APPLE_vertex_array_object = hasExt(\"GL_APPLE_vertex_array_object\", extensions);\n    GLAPILOADER_GL_APPLE_vertex_array_range = hasExt(\"GL_APPLE_vertex_array_range\", extensions);\n    GLAPILOADER_GL_APPLE_vertex_program_evaluators = hasExt(\"GL_APPLE_vertex_program_evaluators\", extensions);\n    GLAPILOADER_GL_APPLE_ycbcr_422 = hasExt(\"GL_APPLE_ycbcr_422\", extensions);\n    GLAPILOADER_GL_ARB_ES2_compatibility = hasExt(\"GL_ARB_ES2_compatibility\", extensions);\n    GLAPILOADER_GL_ARB_ES3_1_compatibility = hasExt(\"GL_ARB_ES3_1_compatibility\", extensions);\n    GLAPILOADER_GL_ARB_ES3_2_compatibility = hasExt(\"GL_ARB_ES3_2_compatibility\", extensions);\n    GLAPILOADER_GL_ARB_ES3_compatibility = hasExt(\"GL_ARB_ES3_compatibility\", extensions);\n    GLAPILOADER_GL_ARB_arrays_of_arrays = hasExt(\"GL_ARB_arrays_of_arrays\", extensions);\n    GLAPILOADER_GL_ARB_base_instance = hasExt(\"GL_ARB_base_instance\", extensions);\n    GLAPILOADER_GL_ARB_bindless_texture = hasExt(\"GL_ARB_bindless_texture\", extensions);\n    GLAPILOADER_GL_ARB_blend_func_extended = hasExt(\"GL_ARB_blend_func_extended\", extensions);\n    GLAPILOADER_GL_ARB_buffer_storage = hasExt(\"GL_ARB_buffer_storage\", extensions);\n    GLAPILOADER_GL_ARB_cl_event = hasExt(\"GL_ARB_cl_event\", extensions);\n    GLAPILOADER_GL_ARB_clear_buffer_object = hasExt(\"GL_ARB_clear_buffer_object\", extensions);\n    GLAPILOADER_GL_ARB_clear_texture = hasExt(\"GL_ARB_clear_texture\", extensions);\n    GLAPILOADER_GL_ARB_clip_control = hasExt(\"GL_ARB_clip_control\", extensions);\n    GLAPILOADER_GL_ARB_color_buffer_float = hasExt(\"GL_ARB_color_buffer_float\", extensions);\n    GLAPILOADER_GL_ARB_compatibility = hasExt(\"GL_ARB_compatibility\", extensions);\n    GLAPILOADER_GL_ARB_compressed_texture_pixel_storage = hasExt(\"GL_ARB_compressed_texture_pixel_storage\", extensions);\n    GLAPILOADER_GL_ARB_compute_shader = hasExt(\"GL_ARB_compute_shader\", extensions);\n    GLAPILOADER_GL_ARB_compute_variable_group_size = hasExt(\"GL_ARB_compute_variable_group_size\", extensions);\n    GLAPILOADER_GL_ARB_conditional_render_inverted = hasExt(\"GL_ARB_conditional_render_inverted\", extensions);\n    GLAPILOADER_GL_ARB_conservative_depth = hasExt(\"GL_ARB_conservative_depth\", extensions);\n    GLAPILOADER_GL_ARB_copy_buffer = hasExt(\"GL_ARB_copy_buffer\", extensions);\n    GLAPILOADER_GL_ARB_copy_image = hasExt(\"GL_ARB_copy_image\", extensions);\n    GLAPILOADER_GL_ARB_cull_distance = hasExt(\"GL_ARB_cull_distance\", extensions);\n    GLAPILOADER_GL_ARB_debug_output = hasExt(\"GL_ARB_debug_output\", extensions);\n    GLAPILOADER_GL_ARB_depth_buffer_float = hasExt(\"GL_ARB_depth_buffer_float\", extensions);\n    GLAPILOADER_GL_ARB_depth_clamp = hasExt(\"GL_ARB_depth_clamp\", extensions);\n    GLAPILOADER_GL_ARB_depth_texture = hasExt(\"GL_ARB_depth_texture\", extensions);\n    GLAPILOADER_GL_ARB_derivative_control = hasExt(\"GL_ARB_derivative_control\", extensions);\n    GLAPILOADER_GL_ARB_direct_state_access = hasExt(\"GL_ARB_direct_state_access\", extensions);\n    GLAPILOADER_GL_ARB_draw_buffers = hasExt(\"GL_ARB_draw_buffers\", extensions);\n    GLAPILOADER_GL_ARB_draw_buffers_blend = hasExt(\"GL_ARB_draw_buffers_blend\", extensions);\n    GLAPILOADER_GL_ARB_draw_elements_base_vertex = hasExt(\"GL_ARB_draw_elements_base_vertex\", extensions);\n    GLAPILOADER_GL_ARB_draw_indirect = hasExt(\"GL_ARB_draw_indirect\", extensions);\n    GLAPILOADER_GL_ARB_draw_instanced = hasExt(\"GL_ARB_draw_instanced\", extensions);\n    GLAPILOADER_GL_ARB_enhanced_layouts = hasExt(\"GL_ARB_enhanced_layouts\", extensions);\n    GLAPILOADER_GL_ARB_explicit_attrib_location = hasExt(\"GL_ARB_explicit_attrib_location\", extensions);\n    GLAPILOADER_GL_ARB_explicit_uniform_location = hasExt(\"GL_ARB_explicit_uniform_location\", extensions);\n    GLAPILOADER_GL_ARB_fragment_coord_conventions = hasExt(\"GL_ARB_fragment_coord_conventions\", extensions);\n    GLAPILOADER_GL_ARB_fragment_layer_viewport = hasExt(\"GL_ARB_fragment_layer_viewport\", extensions);\n    GLAPILOADER_GL_ARB_fragment_program = hasExt(\"GL_ARB_fragment_program\", extensions);\n    GLAPILOADER_GL_ARB_fragment_program_shadow = hasExt(\"GL_ARB_fragment_program_shadow\", extensions);\n    GLAPILOADER_GL_ARB_fragment_shader = hasExt(\"GL_ARB_fragment_shader\", extensions);\n    GLAPILOADER_GL_ARB_fragment_shader_interlock = hasExt(\"GL_ARB_fragment_shader_interlock\", extensions);\n    GLAPILOADER_GL_ARB_framebuffer_no_attachments = hasExt(\"GL_ARB_framebuffer_no_attachments\", extensions);\n    GLAPILOADER_GL_ARB_framebuffer_object = hasExt(\"GL_ARB_framebuffer_object\", extensions);\n    GLAPILOADER_GL_ARB_framebuffer_sRGB = hasExt(\"GL_ARB_framebuffer_sRGB\", extensions);\n    GLAPILOADER_GL_ARB_geometry_shader4 = hasExt(\"GL_ARB_geometry_shader4\", extensions);\n    GLAPILOADER_GL_ARB_get_program_binary = hasExt(\"GL_ARB_get_program_binary\", extensions);\n    GLAPILOADER_GL_ARB_get_texture_sub_image = hasExt(\"GL_ARB_get_texture_sub_image\", extensions);\n    GLAPILOADER_GL_ARB_gl_spirv = hasExt(\"GL_ARB_gl_spirv\", extensions);\n    GLAPILOADER_GL_ARB_gpu_shader5 = hasExt(\"GL_ARB_gpu_shader5\", extensions);\n    GLAPILOADER_GL_ARB_gpu_shader_fp64 = hasExt(\"GL_ARB_gpu_shader_fp64\", extensions);\n    GLAPILOADER_GL_ARB_gpu_shader_int64 = hasExt(\"GL_ARB_gpu_shader_int64\", extensions);\n    GLAPILOADER_GL_ARB_half_float_pixel = hasExt(\"GL_ARB_half_float_pixel\", extensions);\n    GLAPILOADER_GL_ARB_half_float_vertex = hasExt(\"GL_ARB_half_float_vertex\", extensions);\n    GLAPILOADER_GL_ARB_imaging = hasExt(\"GL_ARB_imaging\", extensions);\n    GLAPILOADER_GL_ARB_indirect_parameters = hasExt(\"GL_ARB_indirect_parameters\", extensions);\n    GLAPILOADER_GL_ARB_instanced_arrays = hasExt(\"GL_ARB_instanced_arrays\", extensions);\n    GLAPILOADER_GL_ARB_internalformat_query = hasExt(\"GL_ARB_internalformat_query\", extensions);\n    GLAPILOADER_GL_ARB_internalformat_query2 = hasExt(\"GL_ARB_internalformat_query2\", extensions);\n    GLAPILOADER_GL_ARB_invalidate_subdata = hasExt(\"GL_ARB_invalidate_subdata\", extensions);\n    GLAPILOADER_GL_ARB_map_buffer_alignment = hasExt(\"GL_ARB_map_buffer_alignment\", extensions);\n    GLAPILOADER_GL_ARB_map_buffer_range = hasExt(\"GL_ARB_map_buffer_range\", extensions);\n    GLAPILOADER_GL_ARB_matrix_palette = hasExt(\"GL_ARB_matrix_palette\", extensions);\n    GLAPILOADER_GL_ARB_multi_bind = hasExt(\"GL_ARB_multi_bind\", extensions);\n    GLAPILOADER_GL_ARB_multi_draw_indirect = hasExt(\"GL_ARB_multi_draw_indirect\", extensions);\n    GLAPILOADER_GL_ARB_multisample = hasExt(\"GL_ARB_multisample\", extensions);\n    GLAPILOADER_GL_ARB_multitexture = hasExt(\"GL_ARB_multitexture\", extensions);\n    GLAPILOADER_GL_ARB_occlusion_query = hasExt(\"GL_ARB_occlusion_query\", extensions);\n    GLAPILOADER_GL_ARB_occlusion_query2 = hasExt(\"GL_ARB_occlusion_query2\", extensions);\n    GLAPILOADER_GL_ARB_parallel_shader_compile = hasExt(\"GL_ARB_parallel_shader_compile\", extensions);\n    GLAPILOADER_GL_ARB_pipeline_statistics_query = hasExt(\"GL_ARB_pipeline_statistics_query\", extensions);\n    GLAPILOADER_GL_ARB_pixel_buffer_object = hasExt(\"GL_ARB_pixel_buffer_object\", extensions);\n    GLAPILOADER_GL_ARB_point_parameters = hasExt(\"GL_ARB_point_parameters\", extensions);\n    GLAPILOADER_GL_ARB_point_sprite = hasExt(\"GL_ARB_point_sprite\", extensions);\n    GLAPILOADER_GL_ARB_polygon_offset_clamp = hasExt(\"GL_ARB_polygon_offset_clamp\", extensions);\n    GLAPILOADER_GL_ARB_post_depth_coverage = hasExt(\"GL_ARB_post_depth_coverage\", extensions);\n    GLAPILOADER_GL_ARB_program_interface_query = hasExt(\"GL_ARB_program_interface_query\", extensions);\n    GLAPILOADER_GL_ARB_provoking_vertex = hasExt(\"GL_ARB_provoking_vertex\", extensions);\n    GLAPILOADER_GL_ARB_query_buffer_object = hasExt(\"GL_ARB_query_buffer_object\", extensions);\n    GLAPILOADER_GL_ARB_robust_buffer_access_behavior = hasExt(\"GL_ARB_robust_buffer_access_behavior\", extensions);\n    GLAPILOADER_GL_ARB_robustness = hasExt(\"GL_ARB_robustness\", extensions);\n    GLAPILOADER_GL_ARB_robustness_isolation = hasExt(\"GL_ARB_robustness_isolation\", extensions);\n    GLAPILOADER_GL_ARB_sample_locations = hasExt(\"GL_ARB_sample_locations\", extensions);\n    GLAPILOADER_GL_ARB_sample_shading = hasExt(\"GL_ARB_sample_shading\", extensions);\n    GLAPILOADER_GL_ARB_sampler_objects = hasExt(\"GL_ARB_sampler_objects\", extensions);\n    GLAPILOADER_GL_ARB_seamless_cube_map = hasExt(\"GL_ARB_seamless_cube_map\", extensions);\n    GLAPILOADER_GL_ARB_seamless_cubemap_per_texture = hasExt(\"GL_ARB_seamless_cubemap_per_texture\", extensions);\n    GLAPILOADER_GL_ARB_separate_shader_objects = hasExt(\"GL_ARB_separate_shader_objects\", extensions);\n    GLAPILOADER_GL_ARB_shader_atomic_counter_ops = hasExt(\"GL_ARB_shader_atomic_counter_ops\", extensions);\n    GLAPILOADER_GL_ARB_shader_atomic_counters = hasExt(\"GL_ARB_shader_atomic_counters\", extensions);\n    GLAPILOADER_GL_ARB_shader_ballot = hasExt(\"GL_ARB_shader_ballot\", extensions);\n    GLAPILOADER_GL_ARB_shader_bit_encoding = hasExt(\"GL_ARB_shader_bit_encoding\", extensions);\n    GLAPILOADER_GL_ARB_shader_clock = hasExt(\"GL_ARB_shader_clock\", extensions);\n    GLAPILOADER_GL_ARB_shader_draw_parameters = hasExt(\"GL_ARB_shader_draw_parameters\", extensions);\n    GLAPILOADER_GL_ARB_shader_group_vote = hasExt(\"GL_ARB_shader_group_vote\", extensions);\n    GLAPILOADER_GL_ARB_shader_image_load_store = hasExt(\"GL_ARB_shader_image_load_store\", extensions);\n    GLAPILOADER_GL_ARB_shader_image_size = hasExt(\"GL_ARB_shader_image_size\", extensions);\n    GLAPILOADER_GL_ARB_shader_objects = hasExt(\"GL_ARB_shader_objects\", extensions);\n    GLAPILOADER_GL_ARB_shader_precision = hasExt(\"GL_ARB_shader_precision\", extensions);\n    GLAPILOADER_GL_ARB_shader_stencil_export = hasExt(\"GL_ARB_shader_stencil_export\", extensions);\n    GLAPILOADER_GL_ARB_shader_storage_buffer_object = hasExt(\"GL_ARB_shader_storage_buffer_object\", extensions);\n    GLAPILOADER_GL_ARB_shader_subroutine = hasExt(\"GL_ARB_shader_subroutine\", extensions);\n    GLAPILOADER_GL_ARB_shader_texture_image_samples = hasExt(\"GL_ARB_shader_texture_image_samples\", extensions);\n    GLAPILOADER_GL_ARB_shader_texture_lod = hasExt(\"GL_ARB_shader_texture_lod\", extensions);\n    GLAPILOADER_GL_ARB_shader_viewport_layer_array = hasExt(\"GL_ARB_shader_viewport_layer_array\", extensions);\n    GLAPILOADER_GL_ARB_shading_language_100 = hasExt(\"GL_ARB_shading_language_100\", extensions);\n    GLAPILOADER_GL_ARB_shading_language_420pack = hasExt(\"GL_ARB_shading_language_420pack\", extensions);\n    GLAPILOADER_GL_ARB_shading_language_include = hasExt(\"GL_ARB_shading_language_include\", extensions);\n    GLAPILOADER_GL_ARB_shading_language_packing = hasExt(\"GL_ARB_shading_language_packing\", extensions);\n    GLAPILOADER_GL_ARB_shadow = hasExt(\"GL_ARB_shadow\", extensions);\n    GLAPILOADER_GL_ARB_shadow_ambient = hasExt(\"GL_ARB_shadow_ambient\", extensions);\n    GLAPILOADER_GL_ARB_sparse_buffer = hasExt(\"GL_ARB_sparse_buffer\", extensions);\n    GLAPILOADER_GL_ARB_sparse_texture = hasExt(\"GL_ARB_sparse_texture\", extensions);\n    GLAPILOADER_GL_ARB_sparse_texture2 = hasExt(\"GL_ARB_sparse_texture2\", extensions);\n    GLAPILOADER_GL_ARB_sparse_texture_clamp = hasExt(\"GL_ARB_sparse_texture_clamp\", extensions);\n    GLAPILOADER_GL_ARB_spirv_extensions = hasExt(\"GL_ARB_spirv_extensions\", extensions);\n    GLAPILOADER_GL_ARB_stencil_texturing = hasExt(\"GL_ARB_stencil_texturing\", extensions);\n    GLAPILOADER_GL_ARB_sync = hasExt(\"GL_ARB_sync\", extensions);\n    GLAPILOADER_GL_ARB_tessellation_shader = hasExt(\"GL_ARB_tessellation_shader\", extensions);\n    GLAPILOADER_GL_ARB_texture_barrier = hasExt(\"GL_ARB_texture_barrier\", extensions);\n    GLAPILOADER_GL_ARB_texture_border_clamp = hasExt(\"GL_ARB_texture_border_clamp\", extensions);\n    GLAPILOADER_GL_ARB_texture_buffer_object = hasExt(\"GL_ARB_texture_buffer_object\", extensions);\n    GLAPILOADER_GL_ARB_texture_buffer_object_rgb32 = hasExt(\"GL_ARB_texture_buffer_object_rgb32\", extensions);\n    GLAPILOADER_GL_ARB_texture_buffer_range = hasExt(\"GL_ARB_texture_buffer_range\", extensions);\n    GLAPILOADER_GL_ARB_texture_compression = hasExt(\"GL_ARB_texture_compression\", extensions);\n    GLAPILOADER_GL_ARB_texture_compression_bptc = hasExt(\"GL_ARB_texture_compression_bptc\", extensions);\n    GLAPILOADER_GL_ARB_texture_compression_rgtc = hasExt(\"GL_ARB_texture_compression_rgtc\", extensions);\n    GLAPILOADER_GL_ARB_texture_cube_map = hasExt(\"GL_ARB_texture_cube_map\", extensions);\n    GLAPILOADER_GL_ARB_texture_cube_map_array = hasExt(\"GL_ARB_texture_cube_map_array\", extensions);\n    GLAPILOADER_GL_ARB_texture_env_add = hasExt(\"GL_ARB_texture_env_add\", extensions);\n    GLAPILOADER_GL_ARB_texture_env_combine = hasExt(\"GL_ARB_texture_env_combine\", extensions);\n    GLAPILOADER_GL_ARB_texture_env_crossbar = hasExt(\"GL_ARB_texture_env_crossbar\", extensions);\n    GLAPILOADER_GL_ARB_texture_env_dot3 = hasExt(\"GL_ARB_texture_env_dot3\", extensions);\n    GLAPILOADER_GL_ARB_texture_filter_anisotropic = hasExt(\"GL_ARB_texture_filter_anisotropic\", extensions);\n    GLAPILOADER_GL_ARB_texture_filter_minmax = hasExt(\"GL_ARB_texture_filter_minmax\", extensions);\n    GLAPILOADER_GL_ARB_texture_float = hasExt(\"GL_ARB_texture_float\", extensions);\n    GLAPILOADER_GL_ARB_texture_gather = hasExt(\"GL_ARB_texture_gather\", extensions);\n    GLAPILOADER_GL_ARB_texture_mirror_clamp_to_edge = hasExt(\"GL_ARB_texture_mirror_clamp_to_edge\", extensions);\n    GLAPILOADER_GL_ARB_texture_mirrored_repeat = hasExt(\"GL_ARB_texture_mirrored_repeat\", extensions);\n    GLAPILOADER_GL_ARB_texture_multisample = hasExt(\"GL_ARB_texture_multisample\", extensions);\n    GLAPILOADER_GL_ARB_texture_non_power_of_two = hasExt(\"GL_ARB_texture_non_power_of_two\", extensions);\n    GLAPILOADER_GL_ARB_texture_query_levels = hasExt(\"GL_ARB_texture_query_levels\", extensions);\n    GLAPILOADER_GL_ARB_texture_query_lod = hasExt(\"GL_ARB_texture_query_lod\", extensions);\n    GLAPILOADER_GL_ARB_texture_rectangle = hasExt(\"GL_ARB_texture_rectangle\", extensions);\n    GLAPILOADER_GL_ARB_texture_rg = hasExt(\"GL_ARB_texture_rg\", extensions);\n    GLAPILOADER_GL_ARB_texture_rgb10_a2ui = hasExt(\"GL_ARB_texture_rgb10_a2ui\", extensions);\n    GLAPILOADER_GL_ARB_texture_stencil8 = hasExt(\"GL_ARB_texture_stencil8\", extensions);\n    GLAPILOADER_GL_ARB_texture_storage = hasExt(\"GL_ARB_texture_storage\", extensions);\n    GLAPILOADER_GL_ARB_texture_storage_multisample = hasExt(\"GL_ARB_texture_storage_multisample\", extensions);\n    GLAPILOADER_GL_ARB_texture_swizzle = hasExt(\"GL_ARB_texture_swizzle\", extensions);\n    GLAPILOADER_GL_ARB_texture_view = hasExt(\"GL_ARB_texture_view\", extensions);\n    GLAPILOADER_GL_ARB_timer_query = hasExt(\"GL_ARB_timer_query\", extensions);\n    GLAPILOADER_GL_ARB_transform_feedback2 = hasExt(\"GL_ARB_transform_feedback2\", extensions);\n    GLAPILOADER_GL_ARB_transform_feedback3 = hasExt(\"GL_ARB_transform_feedback3\", extensions);\n    GLAPILOADER_GL_ARB_transform_feedback_instanced = hasExt(\"GL_ARB_transform_feedback_instanced\", extensions);\n    GLAPILOADER_GL_ARB_transform_feedback_overflow_query = hasExt(\"GL_ARB_transform_feedback_overflow_query\", extensions);\n    GLAPILOADER_GL_ARB_transpose_matrix = hasExt(\"GL_ARB_transpose_matrix\", extensions);\n    GLAPILOADER_GL_ARB_uniform_buffer_object = hasExt(\"GL_ARB_uniform_buffer_object\", extensions);\n    GLAPILOADER_GL_ARB_vertex_array_bgra = hasExt(\"GL_ARB_vertex_array_bgra\", extensions);\n    GLAPILOADER_GL_ARB_vertex_array_object = hasExt(\"GL_ARB_vertex_array_object\", extensions);\n    GLAPILOADER_GL_ARB_vertex_attrib_64bit = hasExt(\"GL_ARB_vertex_attrib_64bit\", extensions);\n    GLAPILOADER_GL_ARB_vertex_attrib_binding = hasExt(\"GL_ARB_vertex_attrib_binding\", extensions);\n    GLAPILOADER_GL_ARB_vertex_blend = hasExt(\"GL_ARB_vertex_blend\", extensions);\n    GLAPILOADER_GL_ARB_vertex_buffer_object = hasExt(\"GL_ARB_vertex_buffer_object\", extensions);\n    GLAPILOADER_GL_ARB_vertex_program = hasExt(\"GL_ARB_vertex_program\", extensions);\n    GLAPILOADER_GL_ARB_vertex_shader = hasExt(\"GL_ARB_vertex_shader\", extensions);\n    GLAPILOADER_GL_ARB_vertex_type_10f_11f_11f_rev = hasExt(\"GL_ARB_vertex_type_10f_11f_11f_rev\", extensions);\n    GLAPILOADER_GL_ARB_vertex_type_2_10_10_10_rev = hasExt(\"GL_ARB_vertex_type_2_10_10_10_rev\", extensions);\n    GLAPILOADER_GL_ARB_viewport_array = hasExt(\"GL_ARB_viewport_array\", extensions);\n    GLAPILOADER_GL_ARB_window_pos = hasExt(\"GL_ARB_window_pos\", extensions);\n    GLAPILOADER_GL_EXT_422_pixels = hasExt(\"GL_EXT_422_pixels\", extensions);\n    GLAPILOADER_GL_EXT_EGL_image_storage = hasExt(\"GL_EXT_EGL_image_storage\", extensions);\n    GLAPILOADER_GL_EXT_EGL_sync = hasExt(\"GL_EXT_EGL_sync\", extensions);\n    GLAPILOADER_GL_EXT_abgr = hasExt(\"GL_EXT_abgr\", extensions);\n    GLAPILOADER_GL_EXT_bgra = hasExt(\"GL_EXT_bgra\", extensions);\n    GLAPILOADER_GL_EXT_bindable_uniform = hasExt(\"GL_EXT_bindable_uniform\", extensions);\n    GLAPILOADER_GL_EXT_blend_color = hasExt(\"GL_EXT_blend_color\", extensions);\n    GLAPILOADER_GL_EXT_blend_equation_separate = hasExt(\"GL_EXT_blend_equation_separate\", extensions);\n    GLAPILOADER_GL_EXT_blend_func_separate = hasExt(\"GL_EXT_blend_func_separate\", extensions);\n    GLAPILOADER_GL_EXT_blend_logic_op = hasExt(\"GL_EXT_blend_logic_op\", extensions);\n    GLAPILOADER_GL_EXT_blend_minmax = hasExt(\"GL_EXT_blend_minmax\", extensions);\n    GLAPILOADER_GL_EXT_blend_subtract = hasExt(\"GL_EXT_blend_subtract\", extensions);\n    GLAPILOADER_GL_EXT_clip_volume_hint = hasExt(\"GL_EXT_clip_volume_hint\", extensions);\n    GLAPILOADER_GL_EXT_cmyka = hasExt(\"GL_EXT_cmyka\", extensions);\n    GLAPILOADER_GL_EXT_color_subtable = hasExt(\"GL_EXT_color_subtable\", extensions);\n    GLAPILOADER_GL_EXT_compiled_vertex_array = hasExt(\"GL_EXT_compiled_vertex_array\", extensions);\n    GLAPILOADER_GL_EXT_convolution = hasExt(\"GL_EXT_convolution\", extensions);\n    GLAPILOADER_GL_EXT_coordinate_frame = hasExt(\"GL_EXT_coordinate_frame\", extensions);\n    GLAPILOADER_GL_EXT_copy_texture = hasExt(\"GL_EXT_copy_texture\", extensions);\n    GLAPILOADER_GL_EXT_cull_vertex = hasExt(\"GL_EXT_cull_vertex\", extensions);\n    GLAPILOADER_GL_EXT_debug_label = hasExt(\"GL_EXT_debug_label\", extensions);\n    GLAPILOADER_GL_EXT_debug_marker = hasExt(\"GL_EXT_debug_marker\", extensions);\n    GLAPILOADER_GL_EXT_depth_bounds_test = hasExt(\"GL_EXT_depth_bounds_test\", extensions);\n    GLAPILOADER_GL_EXT_direct_state_access = hasExt(\"GL_EXT_direct_state_access\", extensions);\n    GLAPILOADER_GL_EXT_draw_buffers2 = hasExt(\"GL_EXT_draw_buffers2\", extensions);\n    GLAPILOADER_GL_EXT_draw_instanced = hasExt(\"GL_EXT_draw_instanced\", extensions);\n    GLAPILOADER_GL_EXT_draw_range_elements = hasExt(\"GL_EXT_draw_range_elements\", extensions);\n    GLAPILOADER_GL_EXT_external_buffer = hasExt(\"GL_EXT_external_buffer\", extensions);\n    GLAPILOADER_GL_EXT_fog_coord = hasExt(\"GL_EXT_fog_coord\", extensions);\n    GLAPILOADER_GL_EXT_framebuffer_blit = hasExt(\"GL_EXT_framebuffer_blit\", extensions);\n    GLAPILOADER_GL_EXT_framebuffer_multisample = hasExt(\"GL_EXT_framebuffer_multisample\", extensions);\n    GLAPILOADER_GL_EXT_framebuffer_multisample_blit_scaled = hasExt(\"GL_EXT_framebuffer_multisample_blit_scaled\", extensions);\n    GLAPILOADER_GL_EXT_framebuffer_object = hasExt(\"GL_EXT_framebuffer_object\", extensions);\n    GLAPILOADER_GL_EXT_framebuffer_sRGB = hasExt(\"GL_EXT_framebuffer_sRGB\", extensions);\n    GLAPILOADER_GL_EXT_geometry_shader4 = hasExt(\"GL_EXT_geometry_shader4\", extensions);\n    GLAPILOADER_GL_EXT_gpu_program_parameters = hasExt(\"GL_EXT_gpu_program_parameters\", extensions);\n    GLAPILOADER_GL_EXT_gpu_shader4 = hasExt(\"GL_EXT_gpu_shader4\", extensions);\n    GLAPILOADER_GL_EXT_histogram = hasExt(\"GL_EXT_histogram\", extensions);\n    GLAPILOADER_GL_EXT_index_array_formats = hasExt(\"GL_EXT_index_array_formats\", extensions);\n    GLAPILOADER_GL_EXT_index_func = hasExt(\"GL_EXT_index_func\", extensions);\n    GLAPILOADER_GL_EXT_index_material = hasExt(\"GL_EXT_index_material\", extensions);\n    GLAPILOADER_GL_EXT_index_texture = hasExt(\"GL_EXT_index_texture\", extensions);\n    GLAPILOADER_GL_EXT_light_texture = hasExt(\"GL_EXT_light_texture\", extensions);\n    GLAPILOADER_GL_EXT_memory_object = hasExt(\"GL_EXT_memory_object\", extensions);\n    GLAPILOADER_GL_EXT_memory_object_fd = hasExt(\"GL_EXT_memory_object_fd\", extensions);\n    GLAPILOADER_GL_EXT_memory_object_win32 = hasExt(\"GL_EXT_memory_object_win32\", extensions);\n    GLAPILOADER_GL_EXT_misc_attribute = hasExt(\"GL_EXT_misc_attribute\", extensions);\n    GLAPILOADER_GL_EXT_multi_draw_arrays = hasExt(\"GL_EXT_multi_draw_arrays\", extensions);\n    GLAPILOADER_GL_EXT_multisample = hasExt(\"GL_EXT_multisample\", extensions);\n    GLAPILOADER_GL_EXT_multiview_tessellation_geometry_shader = hasExt(\"GL_EXT_multiview_tessellation_geometry_shader\", extensions);\n    GLAPILOADER_GL_EXT_multiview_texture_multisample = hasExt(\"GL_EXT_multiview_texture_multisample\", extensions);\n    GLAPILOADER_GL_EXT_multiview_timer_query = hasExt(\"GL_EXT_multiview_timer_query\", extensions);\n    GLAPILOADER_GL_EXT_packed_depth_stencil = hasExt(\"GL_EXT_packed_depth_stencil\", extensions);\n    GLAPILOADER_GL_EXT_packed_float = hasExt(\"GL_EXT_packed_float\", extensions);\n    GLAPILOADER_GL_EXT_packed_pixels = hasExt(\"GL_EXT_packed_pixels\", extensions);\n    GLAPILOADER_GL_EXT_paletted_texture = hasExt(\"GL_EXT_paletted_texture\", extensions);\n    GLAPILOADER_GL_EXT_pixel_buffer_object = hasExt(\"GL_EXT_pixel_buffer_object\", extensions);\n    GLAPILOADER_GL_EXT_pixel_transform = hasExt(\"GL_EXT_pixel_transform\", extensions);\n    GLAPILOADER_GL_EXT_pixel_transform_color_table = hasExt(\"GL_EXT_pixel_transform_color_table\", extensions);\n    GLAPILOADER_GL_EXT_point_parameters = hasExt(\"GL_EXT_point_parameters\", extensions);\n    GLAPILOADER_GL_EXT_polygon_offset = hasExt(\"GL_EXT_polygon_offset\", extensions);\n    GLAPILOADER_GL_EXT_polygon_offset_clamp = hasExt(\"GL_EXT_polygon_offset_clamp\", extensions);\n    GLAPILOADER_GL_EXT_post_depth_coverage = hasExt(\"GL_EXT_post_depth_coverage\", extensions);\n    GLAPILOADER_GL_EXT_provoking_vertex = hasExt(\"GL_EXT_provoking_vertex\", extensions);\n    GLAPILOADER_GL_EXT_raster_multisample = hasExt(\"GL_EXT_raster_multisample\", extensions);\n    GLAPILOADER_GL_EXT_rescale_normal = hasExt(\"GL_EXT_rescale_normal\", extensions);\n    GLAPILOADER_GL_EXT_semaphore = hasExt(\"GL_EXT_semaphore\", extensions);\n    GLAPILOADER_GL_EXT_semaphore_fd = hasExt(\"GL_EXT_semaphore_fd\", extensions);\n    GLAPILOADER_GL_EXT_semaphore_win32 = hasExt(\"GL_EXT_semaphore_win32\", extensions);\n    GLAPILOADER_GL_EXT_secondary_color = hasExt(\"GL_EXT_secondary_color\", extensions);\n    GLAPILOADER_GL_EXT_separate_shader_objects = hasExt(\"GL_EXT_separate_shader_objects\", extensions);\n    GLAPILOADER_GL_EXT_separate_specular_color = hasExt(\"GL_EXT_separate_specular_color\", extensions);\n    GLAPILOADER_GL_EXT_shader_framebuffer_fetch = hasExt(\"GL_EXT_shader_framebuffer_fetch\", extensions);\n    GLAPILOADER_GL_EXT_shader_framebuffer_fetch_non_coherent = hasExt(\"GL_EXT_shader_framebuffer_fetch_non_coherent\", extensions);\n    GLAPILOADER_GL_EXT_shader_image_load_formatted = hasExt(\"GL_EXT_shader_image_load_formatted\", extensions);\n    GLAPILOADER_GL_EXT_shader_image_load_store = hasExt(\"GL_EXT_shader_image_load_store\", extensions);\n    GLAPILOADER_GL_EXT_shader_integer_mix = hasExt(\"GL_EXT_shader_integer_mix\", extensions);\n    GLAPILOADER_GL_EXT_shadow_funcs = hasExt(\"GL_EXT_shadow_funcs\", extensions);\n    GLAPILOADER_GL_EXT_shared_texture_palette = hasExt(\"GL_EXT_shared_texture_palette\", extensions);\n    GLAPILOADER_GL_EXT_sparse_texture2 = hasExt(\"GL_EXT_sparse_texture2\", extensions);\n    GLAPILOADER_GL_EXT_stencil_clear_tag = hasExt(\"GL_EXT_stencil_clear_tag\", extensions);\n    GLAPILOADER_GL_EXT_stencil_two_side = hasExt(\"GL_EXT_stencil_two_side\", extensions);\n    GLAPILOADER_GL_EXT_stencil_wrap = hasExt(\"GL_EXT_stencil_wrap\", extensions);\n    GLAPILOADER_GL_EXT_subtexture = hasExt(\"GL_EXT_subtexture\", extensions);\n    GLAPILOADER_GL_EXT_texture = hasExt(\"GL_EXT_texture\", extensions);\n    GLAPILOADER_GL_EXT_texture3D = hasExt(\"GL_EXT_texture3D\", extensions);\n    GLAPILOADER_GL_EXT_texture_array = hasExt(\"GL_EXT_texture_array\", extensions);\n    GLAPILOADER_GL_EXT_texture_buffer_object = hasExt(\"GL_EXT_texture_buffer_object\", extensions);\n    GLAPILOADER_GL_EXT_texture_compression_latc = hasExt(\"GL_EXT_texture_compression_latc\", extensions);\n    GLAPILOADER_GL_EXT_texture_compression_rgtc = hasExt(\"GL_EXT_texture_compression_rgtc\", extensions);\n    GLAPILOADER_GL_EXT_texture_compression_s3tc = hasExt(\"GL_EXT_texture_compression_s3tc\", extensions);\n    GLAPILOADER_GL_EXT_texture_cube_map = hasExt(\"GL_EXT_texture_cube_map\", extensions);\n    GLAPILOADER_GL_EXT_texture_env_add = hasExt(\"GL_EXT_texture_env_add\", extensions);\n    GLAPILOADER_GL_EXT_texture_env_combine = hasExt(\"GL_EXT_texture_env_combine\", extensions);\n    GLAPILOADER_GL_EXT_texture_env_dot3 = hasExt(\"GL_EXT_texture_env_dot3\", extensions);\n    GLAPILOADER_GL_EXT_texture_filter_anisotropic = hasExt(\"GL_EXT_texture_filter_anisotropic\", extensions);\n    GLAPILOADER_GL_EXT_texture_filter_minmax = hasExt(\"GL_EXT_texture_filter_minmax\", extensions);\n    GLAPILOADER_GL_EXT_texture_integer = hasExt(\"GL_EXT_texture_integer\", extensions);\n    GLAPILOADER_GL_EXT_texture_lod_bias = hasExt(\"GL_EXT_texture_lod_bias\", extensions);\n    GLAPILOADER_GL_EXT_texture_mirror_clamp = hasExt(\"GL_EXT_texture_mirror_clamp\", extensions);\n    GLAPILOADER_GL_EXT_texture_object = hasExt(\"GL_EXT_texture_object\", extensions);\n    GLAPILOADER_GL_EXT_texture_perturb_normal = hasExt(\"GL_EXT_texture_perturb_normal\", extensions);\n    GLAPILOADER_GL_EXT_texture_sRGB = hasExt(\"GL_EXT_texture_sRGB\", extensions);\n    GLAPILOADER_GL_EXT_texture_sRGB_R8 = hasExt(\"GL_EXT_texture_sRGB_R8\", extensions);\n    GLAPILOADER_GL_EXT_texture_sRGB_decode = hasExt(\"GL_EXT_texture_sRGB_decode\", extensions);\n    GLAPILOADER_GL_EXT_texture_shared_exponent = hasExt(\"GL_EXT_texture_shared_exponent\", extensions);\n    GLAPILOADER_GL_EXT_texture_snorm = hasExt(\"GL_EXT_texture_snorm\", extensions);\n    GLAPILOADER_GL_EXT_texture_swizzle = hasExt(\"GL_EXT_texture_swizzle\", extensions);\n    GLAPILOADER_GL_EXT_timer_query = hasExt(\"GL_EXT_timer_query\", extensions);\n    GLAPILOADER_GL_EXT_transform_feedback = hasExt(\"GL_EXT_transform_feedback\", extensions);\n    GLAPILOADER_GL_EXT_vertex_array = hasExt(\"GL_EXT_vertex_array\", extensions);\n    GLAPILOADER_GL_EXT_vertex_array_bgra = hasExt(\"GL_EXT_vertex_array_bgra\", extensions);\n    GLAPILOADER_GL_EXT_vertex_attrib_64bit = hasExt(\"GL_EXT_vertex_attrib_64bit\", extensions);\n    GLAPILOADER_GL_EXT_vertex_shader = hasExt(\"GL_EXT_vertex_shader\", extensions);\n    GLAPILOADER_GL_EXT_vertex_weighting = hasExt(\"GL_EXT_vertex_weighting\", extensions);\n    GLAPILOADER_GL_EXT_win32_keyed_mutex = hasExt(\"GL_EXT_win32_keyed_mutex\", extensions);\n    GLAPILOADER_GL_EXT_window_rectangles = hasExt(\"GL_EXT_window_rectangles\", extensions);\n    GLAPILOADER_GL_EXT_x11_sync_object = hasExt(\"GL_EXT_x11_sync_object\", extensions);\n    GLAPILOADER_GL_INTEL_conservative_rasterization = hasExt(\"GL_INTEL_conservative_rasterization\", extensions);\n    GLAPILOADER_GL_INTEL_fragment_shader_ordering = hasExt(\"GL_INTEL_fragment_shader_ordering\", extensions);\n    GLAPILOADER_GL_INTEL_framebuffer_CMAA = hasExt(\"GL_INTEL_framebuffer_CMAA\", extensions);\n    GLAPILOADER_GL_INTEL_map_texture = hasExt(\"GL_INTEL_map_texture\", extensions);\n    GLAPILOADER_GL_INTEL_blackhole_render = hasExt(\"GL_INTEL_blackhole_render\", extensions);\n    GLAPILOADER_GL_INTEL_parallel_arrays = hasExt(\"GL_INTEL_parallel_arrays\", extensions);\n    GLAPILOADER_GL_INTEL_performance_query = hasExt(\"GL_INTEL_performance_query\", extensions);\n    GLAPILOADER_GL_KHR_blend_equation_advanced = hasExt(\"GL_KHR_blend_equation_advanced\", extensions);\n    GLAPILOADER_GL_KHR_blend_equation_advanced_coherent = hasExt(\"GL_KHR_blend_equation_advanced_coherent\", extensions);\n    GLAPILOADER_GL_KHR_context_flush_control = hasExt(\"GL_KHR_context_flush_control\", extensions);\n    GLAPILOADER_GL_KHR_debug = hasExt(\"GL_KHR_debug\", extensions);\n    GLAPILOADER_GL_KHR_no_error = hasExt(\"GL_KHR_no_error\", extensions);\n    GLAPILOADER_GL_KHR_robust_buffer_access_behavior = hasExt(\"GL_KHR_robust_buffer_access_behavior\", extensions);\n    GLAPILOADER_GL_KHR_robustness = hasExt(\"GL_KHR_robustness\", extensions);\n    GLAPILOADER_GL_KHR_shader_subgroup = hasExt(\"GL_KHR_shader_subgroup\", extensions);\n    GLAPILOADER_GL_KHR_texture_compression_astc_hdr = hasExt(\"GL_KHR_texture_compression_astc_hdr\", extensions);\n    GLAPILOADER_GL_KHR_texture_compression_astc_ldr = hasExt(\"GL_KHR_texture_compression_astc_ldr\", extensions);\n    GLAPILOADER_GL_KHR_texture_compression_astc_sliced_3d = hasExt(\"GL_KHR_texture_compression_astc_sliced_3d\", extensions);\n    GLAPILOADER_GL_KHR_parallel_shader_compile = hasExt(\"GL_KHR_parallel_shader_compile\", extensions);\n    GLAPILOADER_GL_NV_alpha_to_coverage_dither_control = hasExt(\"GL_NV_alpha_to_coverage_dither_control\", extensions);\n    GLAPILOADER_GL_NV_bindless_multi_draw_indirect = hasExt(\"GL_NV_bindless_multi_draw_indirect\", extensions);\n    GLAPILOADER_GL_NV_bindless_multi_draw_indirect_count = hasExt(\"GL_NV_bindless_multi_draw_indirect_count\", extensions);\n    GLAPILOADER_GL_NV_bindless_texture = hasExt(\"GL_NV_bindless_texture\", extensions);\n    GLAPILOADER_GL_NV_blend_equation_advanced = hasExt(\"GL_NV_blend_equation_advanced\", extensions);\n    GLAPILOADER_GL_NV_blend_equation_advanced_coherent = hasExt(\"GL_NV_blend_equation_advanced_coherent\", extensions);\n    GLAPILOADER_GL_NV_blend_minmax_factor = hasExt(\"GL_NV_blend_minmax_factor\", extensions);\n    GLAPILOADER_GL_NV_blend_square = hasExt(\"GL_NV_blend_square\", extensions);\n    GLAPILOADER_GL_NV_clip_space_w_scaling = hasExt(\"GL_NV_clip_space_w_scaling\", extensions);\n    GLAPILOADER_GL_NV_command_list = hasExt(\"GL_NV_command_list\", extensions);\n    GLAPILOADER_GL_NV_compute_program5 = hasExt(\"GL_NV_compute_program5\", extensions);\n    GLAPILOADER_GL_NV_compute_shader_derivatives = hasExt(\"GL_NV_compute_shader_derivatives\", extensions);\n    GLAPILOADER_GL_NV_conditional_render = hasExt(\"GL_NV_conditional_render\", extensions);\n    GLAPILOADER_GL_NV_conservative_raster = hasExt(\"GL_NV_conservative_raster\", extensions);\n    GLAPILOADER_GL_NV_conservative_raster_dilate = hasExt(\"GL_NV_conservative_raster_dilate\", extensions);\n    GLAPILOADER_GL_NV_conservative_raster_pre_snap = hasExt(\"GL_NV_conservative_raster_pre_snap\", extensions);\n    GLAPILOADER_GL_NV_conservative_raster_pre_snap_triangles = hasExt(\"GL_NV_conservative_raster_pre_snap_triangles\", extensions);\n    GLAPILOADER_GL_NV_conservative_raster_underestimation = hasExt(\"GL_NV_conservative_raster_underestimation\", extensions);\n    GLAPILOADER_GL_NV_copy_depth_to_color = hasExt(\"GL_NV_copy_depth_to_color\", extensions);\n    GLAPILOADER_GL_NV_copy_image = hasExt(\"GL_NV_copy_image\", extensions);\n    GLAPILOADER_GL_NV_deep_texture3D = hasExt(\"GL_NV_deep_texture3D\", extensions);\n    GLAPILOADER_GL_NV_depth_buffer_float = hasExt(\"GL_NV_depth_buffer_float\", extensions);\n    GLAPILOADER_GL_NV_depth_clamp = hasExt(\"GL_NV_depth_clamp\", extensions);\n    GLAPILOADER_GL_NV_draw_texture = hasExt(\"GL_NV_draw_texture\", extensions);\n    GLAPILOADER_GL_NV_draw_vulkan_image = hasExt(\"GL_NV_draw_vulkan_image\", extensions);\n    GLAPILOADER_GL_NV_evaluators = hasExt(\"GL_NV_evaluators\", extensions);\n    GLAPILOADER_GL_NV_explicit_multisample = hasExt(\"GL_NV_explicit_multisample\", extensions);\n    GLAPILOADER_GL_NV_fence = hasExt(\"GL_NV_fence\", extensions);\n    GLAPILOADER_GL_NV_fill_rectangle = hasExt(\"GL_NV_fill_rectangle\", extensions);\n    GLAPILOADER_GL_NV_float_buffer = hasExt(\"GL_NV_float_buffer\", extensions);\n    GLAPILOADER_GL_NV_fog_distance = hasExt(\"GL_NV_fog_distance\", extensions);\n    GLAPILOADER_GL_NV_fragment_coverage_to_color = hasExt(\"GL_NV_fragment_coverage_to_color\", extensions);\n    GLAPILOADER_GL_NV_fragment_program = hasExt(\"GL_NV_fragment_program\", extensions);\n    GLAPILOADER_GL_NV_fragment_program2 = hasExt(\"GL_NV_fragment_program2\", extensions);\n    GLAPILOADER_GL_NV_fragment_program4 = hasExt(\"GL_NV_fragment_program4\", extensions);\n    GLAPILOADER_GL_NV_fragment_program_option = hasExt(\"GL_NV_fragment_program_option\", extensions);\n    GLAPILOADER_GL_NV_fragment_shader_barycentric = hasExt(\"GL_NV_fragment_shader_barycentric\", extensions);\n    GLAPILOADER_GL_NV_fragment_shader_interlock = hasExt(\"GL_NV_fragment_shader_interlock\", extensions);\n    GLAPILOADER_GL_NV_framebuffer_mixed_samples = hasExt(\"GL_NV_framebuffer_mixed_samples\", extensions);\n    GLAPILOADER_GL_NV_framebuffer_multisample_coverage = hasExt(\"GL_NV_framebuffer_multisample_coverage\", extensions);\n    GLAPILOADER_GL_NV_geometry_program4 = hasExt(\"GL_NV_geometry_program4\", extensions);\n    GLAPILOADER_GL_NV_geometry_shader4 = hasExt(\"GL_NV_geometry_shader4\", extensions);\n    GLAPILOADER_GL_NV_geometry_shader_passthrough = hasExt(\"GL_NV_geometry_shader_passthrough\", extensions);\n    GLAPILOADER_GL_NV_gpu_program4 = hasExt(\"GL_NV_gpu_program4\", extensions);\n    GLAPILOADER_GL_NV_gpu_program5 = hasExt(\"GL_NV_gpu_program5\", extensions);\n    GLAPILOADER_GL_NV_gpu_program5_mem_extended = hasExt(\"GL_NV_gpu_program5_mem_extended\", extensions);\n    GLAPILOADER_GL_NV_gpu_shader5 = hasExt(\"GL_NV_gpu_shader5\", extensions);\n    GLAPILOADER_GL_NV_half_float = hasExt(\"GL_NV_half_float\", extensions);\n    GLAPILOADER_GL_NV_internalformat_sample_query = hasExt(\"GL_NV_internalformat_sample_query\", extensions);\n    GLAPILOADER_GL_NV_light_max_exponent = hasExt(\"GL_NV_light_max_exponent\", extensions);\n    GLAPILOADER_GL_NV_gpu_multicast = hasExt(\"GL_NV_gpu_multicast\", extensions);\n    GLAPILOADER_GL_NV_memory_attachment = hasExt(\"GL_NV_memory_attachment\", extensions);\n    GLAPILOADER_GL_NV_mesh_shader = hasExt(\"GL_NV_mesh_shader\", extensions);\n    GLAPILOADER_GL_NV_multisample_coverage = hasExt(\"GL_NV_multisample_coverage\", extensions);\n    GLAPILOADER_GL_NV_multisample_filter_hint = hasExt(\"GL_NV_multisample_filter_hint\", extensions);\n    GLAPILOADER_GL_NV_occlusion_query = hasExt(\"GL_NV_occlusion_query\", extensions);\n    GLAPILOADER_GL_NV_packed_depth_stencil = hasExt(\"GL_NV_packed_depth_stencil\", extensions);\n    GLAPILOADER_GL_NV_parameter_buffer_object = hasExt(\"GL_NV_parameter_buffer_object\", extensions);\n    GLAPILOADER_GL_NV_parameter_buffer_object2 = hasExt(\"GL_NV_parameter_buffer_object2\", extensions);\n    GLAPILOADER_GL_NV_path_rendering = hasExt(\"GL_NV_path_rendering\", extensions);\n    GLAPILOADER_GL_NV_path_rendering_shared_edge = hasExt(\"GL_NV_path_rendering_shared_edge\", extensions);\n    GLAPILOADER_GL_NV_pixel_data_range = hasExt(\"GL_NV_pixel_data_range\", extensions);\n    GLAPILOADER_GL_NV_point_sprite = hasExt(\"GL_NV_point_sprite\", extensions);\n    GLAPILOADER_GL_NV_present_video = hasExt(\"GL_NV_present_video\", extensions);\n    GLAPILOADER_GL_NV_primitive_restart = hasExt(\"GL_NV_primitive_restart\", extensions);\n    GLAPILOADER_GL_NV_query_resource = hasExt(\"GL_NV_query_resource\", extensions);\n    GLAPILOADER_GL_NV_query_resource_tag = hasExt(\"GL_NV_query_resource_tag\", extensions);\n    GLAPILOADER_GL_NV_register_combiners = hasExt(\"GL_NV_register_combiners\", extensions);\n    GLAPILOADER_GL_NV_register_combiners2 = hasExt(\"GL_NV_register_combiners2\", extensions);\n    GLAPILOADER_GL_NV_representative_fragment_test = hasExt(\"GL_NV_representative_fragment_test\", extensions);\n    GLAPILOADER_GL_NV_robustness_video_memory_purge = hasExt(\"GL_NV_robustness_video_memory_purge\", extensions);\n    GLAPILOADER_GL_NV_sample_locations = hasExt(\"GL_NV_sample_locations\", extensions);\n    GLAPILOADER_GL_NV_sample_mask_override_coverage = hasExt(\"GL_NV_sample_mask_override_coverage\", extensions);\n    GLAPILOADER_GL_NV_scissor_exclusive = hasExt(\"GL_NV_scissor_exclusive\", extensions);\n    GLAPILOADER_GL_NV_shader_atomic_counters = hasExt(\"GL_NV_shader_atomic_counters\", extensions);\n    GLAPILOADER_GL_NV_shader_atomic_float = hasExt(\"GL_NV_shader_atomic_float\", extensions);\n    GLAPILOADER_GL_NV_shader_atomic_float64 = hasExt(\"GL_NV_shader_atomic_float64\", extensions);\n    GLAPILOADER_GL_NV_shader_atomic_fp16_vector = hasExt(\"GL_NV_shader_atomic_fp16_vector\", extensions);\n    GLAPILOADER_GL_NV_shader_atomic_int64 = hasExt(\"GL_NV_shader_atomic_int64\", extensions);\n    GLAPILOADER_GL_NV_shader_buffer_load = hasExt(\"GL_NV_shader_buffer_load\", extensions);\n    GLAPILOADER_GL_NV_shader_buffer_store = hasExt(\"GL_NV_shader_buffer_store\", extensions);\n    GLAPILOADER_GL_NV_shader_storage_buffer_object = hasExt(\"GL_NV_shader_storage_buffer_object\", extensions);\n    GLAPILOADER_GL_NV_shader_subgroup_partitioned = hasExt(\"GL_NV_shader_subgroup_partitioned\", extensions);\n    GLAPILOADER_GL_NV_shader_texture_footprint = hasExt(\"GL_NV_shader_texture_footprint\", extensions);\n    GLAPILOADER_GL_NV_shader_thread_group = hasExt(\"GL_NV_shader_thread_group\", extensions);\n    GLAPILOADER_GL_NV_shader_thread_shuffle = hasExt(\"GL_NV_shader_thread_shuffle\", extensions);\n    GLAPILOADER_GL_NV_shading_rate_image = hasExt(\"GL_NV_shading_rate_image\", extensions);\n    GLAPILOADER_GL_NV_stereo_view_rendering = hasExt(\"GL_NV_stereo_view_rendering\", extensions);\n    GLAPILOADER_GL_NV_tessellation_program5 = hasExt(\"GL_NV_tessellation_program5\", extensions);\n    GLAPILOADER_GL_NV_texgen_emboss = hasExt(\"GL_NV_texgen_emboss\", extensions);\n    GLAPILOADER_GL_NV_texgen_reflection = hasExt(\"GL_NV_texgen_reflection\", extensions);\n    GLAPILOADER_GL_NV_texture_barrier = hasExt(\"GL_NV_texture_barrier\", extensions);\n    GLAPILOADER_GL_NV_texture_compression_vtc = hasExt(\"GL_NV_texture_compression_vtc\", extensions);\n    GLAPILOADER_GL_NV_texture_env_combine4 = hasExt(\"GL_NV_texture_env_combine4\", extensions);\n    GLAPILOADER_GL_NV_texture_expand_normal = hasExt(\"GL_NV_texture_expand_normal\", extensions);\n    GLAPILOADER_GL_NV_texture_multisample = hasExt(\"GL_NV_texture_multisample\", extensions);\n    GLAPILOADER_GL_NV_texture_rectangle = hasExt(\"GL_NV_texture_rectangle\", extensions);\n    GLAPILOADER_GL_NV_texture_rectangle_compressed = hasExt(\"GL_NV_texture_rectangle_compressed\", extensions);\n    GLAPILOADER_GL_NV_texture_shader = hasExt(\"GL_NV_texture_shader\", extensions);\n    GLAPILOADER_GL_NV_texture_shader2 = hasExt(\"GL_NV_texture_shader2\", extensions);\n    GLAPILOADER_GL_NV_texture_shader3 = hasExt(\"GL_NV_texture_shader3\", extensions);\n    GLAPILOADER_GL_NV_transform_feedback = hasExt(\"GL_NV_transform_feedback\", extensions);\n    GLAPILOADER_GL_NV_transform_feedback2 = hasExt(\"GL_NV_transform_feedback2\", extensions);\n    GLAPILOADER_GL_NV_uniform_buffer_unified_memory = hasExt(\"GL_NV_uniform_buffer_unified_memory\", extensions);\n    GLAPILOADER_GL_NV_vdpau_interop = hasExt(\"GL_NV_vdpau_interop\", extensions);\n    GLAPILOADER_GL_NV_vdpau_interop2 = hasExt(\"GL_NV_vdpau_interop2\", extensions);\n    GLAPILOADER_GL_NV_vertex_array_range = hasExt(\"GL_NV_vertex_array_range\", extensions);\n    GLAPILOADER_GL_NV_vertex_array_range2 = hasExt(\"GL_NV_vertex_array_range2\", extensions);\n    GLAPILOADER_GL_NV_vertex_attrib_integer_64bit = hasExt(\"GL_NV_vertex_attrib_integer_64bit\", extensions);\n    GLAPILOADER_GL_NV_vertex_buffer_unified_memory = hasExt(\"GL_NV_vertex_buffer_unified_memory\", extensions);\n    GLAPILOADER_GL_NV_vertex_program = hasExt(\"GL_NV_vertex_program\", extensions);\n    GLAPILOADER_GL_NV_vertex_program1_1 = hasExt(\"GL_NV_vertex_program1_1\", extensions);\n    GLAPILOADER_GL_NV_vertex_program2 = hasExt(\"GL_NV_vertex_program2\", extensions);\n    GLAPILOADER_GL_NV_vertex_program2_option = hasExt(\"GL_NV_vertex_program2_option\", extensions);\n    GLAPILOADER_GL_NV_vertex_program3 = hasExt(\"GL_NV_vertex_program3\", extensions);\n    GLAPILOADER_GL_NV_vertex_program4 = hasExt(\"GL_NV_vertex_program4\", extensions);\n    GLAPILOADER_GL_NV_video_capture = hasExt(\"GL_NV_video_capture\", extensions);\n    GLAPILOADER_GL_NV_viewport_array2 = hasExt(\"GL_NV_viewport_array2\", extensions);\n    GLAPILOADER_GL_NV_viewport_swizzle = hasExt(\"GL_NV_viewport_swizzle\", extensions);\n    GLAPILOADER_GL_EXT_texture_shadow_lod = hasExt(\"GL_EXT_texture_shadow_lod\", extensions);\n\n    glAccum = (PFNGLACCUMPROC) loadFunction(\"glAccum\");\n    glActiveProgramEXT = (PFNGLACTIVEPROGRAMEXTPROC) loadFunction(\"glActiveProgramEXT\");\n    glActiveShaderProgram = (PFNGLACTIVESHADERPROGRAMPROC) loadFunction(\"glActiveShaderProgram\");\n    glActiveShaderProgramEXT = (PFNGLACTIVESHADERPROGRAMEXTPROC) loadFunction(\"glActiveShaderProgramEXT\");\n    glActiveStencilFaceEXT = (PFNGLACTIVESTENCILFACEEXTPROC) loadFunction(\"glActiveStencilFaceEXT\");\n    glActiveTexture = (PFNGLACTIVETEXTUREPROC) loadFunction(\"glActiveTexture\");\n    glActiveTextureARB = (PFNGLACTIVETEXTUREARBPROC) loadFunction(\"glActiveTextureARB\");\n    glActiveVaryingNV = (PFNGLACTIVEVARYINGNVPROC) loadFunction(\"glActiveVaryingNV\");\n    glAlphaFunc = (PFNGLALPHAFUNCPROC) loadFunction(\"glAlphaFunc\");\n    glAlphaToCoverageDitherControlNV = (PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC) loadFunction(\"glAlphaToCoverageDitherControlNV\");\n    glApplyFramebufferAttachmentCMAAINTEL = (PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC) loadFunction(\"glApplyFramebufferAttachmentCMAAINTEL\");\n    glApplyTextureEXT = (PFNGLAPPLYTEXTUREEXTPROC) loadFunction(\"glApplyTextureEXT\");\n    glAcquireKeyedMutexWin32EXT = (PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC) loadFunction(\"glAcquireKeyedMutexWin32EXT\");\n    glAreProgramsResidentNV = (PFNGLAREPROGRAMSRESIDENTNVPROC) loadFunction(\"glAreProgramsResidentNV\");\n    glAreTexturesResident = (PFNGLARETEXTURESRESIDENTPROC) loadFunction(\"glAreTexturesResident\");\n    glAreTexturesResidentEXT = (PFNGLARETEXTURESRESIDENTEXTPROC) loadFunction(\"glAreTexturesResidentEXT\");\n    glArrayElement = (PFNGLARRAYELEMENTPROC) loadFunction(\"glArrayElement\");\n    glArrayElementEXT = (PFNGLARRAYELEMENTEXTPROC) loadFunction(\"glArrayElementEXT\");\n    glAttachObjectARB = (PFNGLATTACHOBJECTARBPROC) loadFunction(\"glAttachObjectARB\");\n    glAttachShader = (PFNGLATTACHSHADERPROC) loadFunction(\"glAttachShader\");\n    glBegin = (PFNGLBEGINPROC) loadFunction(\"glBegin\");\n    glBeginConditionalRender = (PFNGLBEGINCONDITIONALRENDERPROC) loadFunction(\"glBeginConditionalRender\");\n    glBeginConditionalRenderNV = (PFNGLBEGINCONDITIONALRENDERNVPROC) loadFunction(\"glBeginConditionalRenderNV\");\n    glBeginOcclusionQueryNV = (PFNGLBEGINOCCLUSIONQUERYNVPROC) loadFunction(\"glBeginOcclusionQueryNV\");\n    glBeginPerfMonitorAMD = (PFNGLBEGINPERFMONITORAMDPROC) loadFunction(\"glBeginPerfMonitorAMD\");\n    glBeginPerfQueryINTEL = (PFNGLBEGINPERFQUERYINTELPROC) loadFunction(\"glBeginPerfQueryINTEL\");\n    glBeginQuery = (PFNGLBEGINQUERYPROC) loadFunction(\"glBeginQuery\");\n    glBeginQueryARB = (PFNGLBEGINQUERYARBPROC) loadFunction(\"glBeginQueryARB\");\n    glBeginQueryIndexed = (PFNGLBEGINQUERYINDEXEDPROC) loadFunction(\"glBeginQueryIndexed\");\n    glBeginTransformFeedback = (PFNGLBEGINTRANSFORMFEEDBACKPROC) loadFunction(\"glBeginTransformFeedback\");\n    glBeginTransformFeedbackEXT = (PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) loadFunction(\"glBeginTransformFeedbackEXT\");\n    glBeginTransformFeedbackNV = (PFNGLBEGINTRANSFORMFEEDBACKNVPROC) loadFunction(\"glBeginTransformFeedbackNV\");\n    glBeginVertexShaderEXT = (PFNGLBEGINVERTEXSHADEREXTPROC) loadFunction(\"glBeginVertexShaderEXT\");\n    glBeginVideoCaptureNV = (PFNGLBEGINVIDEOCAPTURENVPROC) loadFunction(\"glBeginVideoCaptureNV\");\n    glBindAttribLocation = (PFNGLBINDATTRIBLOCATIONPROC) loadFunction(\"glBindAttribLocation\");\n    glBindAttribLocationARB = (PFNGLBINDATTRIBLOCATIONARBPROC) loadFunction(\"glBindAttribLocationARB\");\n    glBindBuffer = (PFNGLBINDBUFFERPROC) loadFunction(\"glBindBuffer\");\n    glBindBufferARB = (PFNGLBINDBUFFERARBPROC) loadFunction(\"glBindBufferARB\");\n    glBindBufferBase = (PFNGLBINDBUFFERBASEPROC) loadFunction(\"glBindBufferBase\");\n    glBindBufferBaseEXT = (PFNGLBINDBUFFERBASEEXTPROC) loadFunction(\"glBindBufferBaseEXT\");\n    glBindBufferBaseNV = (PFNGLBINDBUFFERBASENVPROC) loadFunction(\"glBindBufferBaseNV\");\n    glBindBufferOffsetEXT = (PFNGLBINDBUFFEROFFSETEXTPROC) loadFunction(\"glBindBufferOffsetEXT\");\n    glBindBufferOffsetNV = (PFNGLBINDBUFFEROFFSETNVPROC) loadFunction(\"glBindBufferOffsetNV\");\n    glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC) loadFunction(\"glBindBufferRange\");\n    glBindBufferRangeEXT = (PFNGLBINDBUFFERRANGEEXTPROC) loadFunction(\"glBindBufferRangeEXT\");\n    glBindBufferRangeNV = (PFNGLBINDBUFFERRANGENVPROC) loadFunction(\"glBindBufferRangeNV\");\n    glBindBuffersBase = (PFNGLBINDBUFFERSBASEPROC) loadFunction(\"glBindBuffersBase\");\n    glBindBuffersRange = (PFNGLBINDBUFFERSRANGEPROC) loadFunction(\"glBindBuffersRange\");\n    glBindFragDataLocation = (PFNGLBINDFRAGDATALOCATIONPROC) loadFunction(\"glBindFragDataLocation\");\n    glBindFragDataLocationEXT = (PFNGLBINDFRAGDATALOCATIONEXTPROC) loadFunction(\"glBindFragDataLocationEXT\");\n    glBindFragDataLocationIndexed = (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) loadFunction(\"glBindFragDataLocationIndexed\");\n    glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC) loadFunction(\"glBindFramebuffer\");\n    glBindFramebufferEXT = (PFNGLBINDFRAMEBUFFEREXTPROC) loadFunction(\"glBindFramebufferEXT\");\n    glBindImageTexture = (PFNGLBINDIMAGETEXTUREPROC) loadFunction(\"glBindImageTexture\");\n    glBindImageTextureEXT = (PFNGLBINDIMAGETEXTUREEXTPROC) loadFunction(\"glBindImageTextureEXT\");\n    glBindImageTextures = (PFNGLBINDIMAGETEXTURESPROC) loadFunction(\"glBindImageTextures\");\n    glBindLightParameterEXT = (PFNGLBINDLIGHTPARAMETEREXTPROC) loadFunction(\"glBindLightParameterEXT\");\n    glBindMaterialParameterEXT = (PFNGLBINDMATERIALPARAMETEREXTPROC) loadFunction(\"glBindMaterialParameterEXT\");\n    glBindMultiTextureEXT = (PFNGLBINDMULTITEXTUREEXTPROC) loadFunction(\"glBindMultiTextureEXT\");\n    glBindParameterEXT = (PFNGLBINDPARAMETEREXTPROC) loadFunction(\"glBindParameterEXT\");\n    glBindProgramARB = (PFNGLBINDPROGRAMARBPROC) loadFunction(\"glBindProgramARB\");\n    glBindProgramNV = (PFNGLBINDPROGRAMNVPROC) loadFunction(\"glBindProgramNV\");\n    glBindProgramPipeline = (PFNGLBINDPROGRAMPIPELINEPROC) loadFunction(\"glBindProgramPipeline\");\n    glBindProgramPipelineEXT = (PFNGLBINDPROGRAMPIPELINEEXTPROC) loadFunction(\"glBindProgramPipelineEXT\");\n    glBindRenderbuffer = (PFNGLBINDRENDERBUFFERPROC) loadFunction(\"glBindRenderbuffer\");\n    glBindRenderbufferEXT = (PFNGLBINDRENDERBUFFEREXTPROC) loadFunction(\"glBindRenderbufferEXT\");\n    glBindSampler = (PFNGLBINDSAMPLERPROC) loadFunction(\"glBindSampler\");\n    glBindSamplers = (PFNGLBINDSAMPLERSPROC) loadFunction(\"glBindSamplers\");\n    glBindShadingRateImageNV = (PFNGLBINDSHADINGRATEIMAGENVPROC) loadFunction(\"glBindShadingRateImageNV\");\n    glBindTexGenParameterEXT = (PFNGLBINDTEXGENPARAMETEREXTPROC) loadFunction(\"glBindTexGenParameterEXT\");\n    glBindTexture = (PFNGLBINDTEXTUREPROC) loadFunction(\"glBindTexture\");\n    glBindTextureEXT = (PFNGLBINDTEXTUREEXTPROC) loadFunction(\"glBindTextureEXT\");\n    glBindTextureUnit = (PFNGLBINDTEXTUREUNITPROC) loadFunction(\"glBindTextureUnit\");\n    glBindTextureUnitParameterEXT = (PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) loadFunction(\"glBindTextureUnitParameterEXT\");\n    glBindTextures = (PFNGLBINDTEXTURESPROC) loadFunction(\"glBindTextures\");\n    glBindTransformFeedback = (PFNGLBINDTRANSFORMFEEDBACKPROC) loadFunction(\"glBindTransformFeedback\");\n    glBindTransformFeedbackNV = (PFNGLBINDTRANSFORMFEEDBACKNVPROC) loadFunction(\"glBindTransformFeedbackNV\");\n    glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC) loadFunction(\"glBindVertexArray\");\n    glBindVertexArrayAPPLE = (PFNGLBINDVERTEXARRAYAPPLEPROC) loadFunction(\"glBindVertexArrayAPPLE\");\n    glBindVertexBuffer = (PFNGLBINDVERTEXBUFFERPROC) loadFunction(\"glBindVertexBuffer\");\n    glBindVertexBuffers = (PFNGLBINDVERTEXBUFFERSPROC) loadFunction(\"glBindVertexBuffers\");\n    glBindVertexShaderEXT = (PFNGLBINDVERTEXSHADEREXTPROC) loadFunction(\"glBindVertexShaderEXT\");\n    glBindVideoCaptureStreamBufferNV = (PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) loadFunction(\"glBindVideoCaptureStreamBufferNV\");\n    glBindVideoCaptureStreamTextureNV = (PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) loadFunction(\"glBindVideoCaptureStreamTextureNV\");\n    glBinormal3bEXT = (PFNGLBINORMAL3BEXTPROC) loadFunction(\"glBinormal3bEXT\");\n    glBinormal3bvEXT = (PFNGLBINORMAL3BVEXTPROC) loadFunction(\"glBinormal3bvEXT\");\n    glBinormal3dEXT = (PFNGLBINORMAL3DEXTPROC) loadFunction(\"glBinormal3dEXT\");\n    glBinormal3dvEXT = (PFNGLBINORMAL3DVEXTPROC) loadFunction(\"glBinormal3dvEXT\");\n    glBinormal3fEXT = (PFNGLBINORMAL3FEXTPROC) loadFunction(\"glBinormal3fEXT\");\n    glBinormal3fvEXT = (PFNGLBINORMAL3FVEXTPROC) loadFunction(\"glBinormal3fvEXT\");\n    glBinormal3iEXT = (PFNGLBINORMAL3IEXTPROC) loadFunction(\"glBinormal3iEXT\");\n    glBinormal3ivEXT = (PFNGLBINORMAL3IVEXTPROC) loadFunction(\"glBinormal3ivEXT\");\n    glBinormal3sEXT = (PFNGLBINORMAL3SEXTPROC) loadFunction(\"glBinormal3sEXT\");\n    glBinormal3svEXT = (PFNGLBINORMAL3SVEXTPROC) loadFunction(\"glBinormal3svEXT\");\n    glBinormalPointerEXT = (PFNGLBINORMALPOINTEREXTPROC) loadFunction(\"glBinormalPointerEXT\");\n    glBitmap = (PFNGLBITMAPPROC) loadFunction(\"glBitmap\");\n    glBlendBarrierKHR = (PFNGLBLENDBARRIERKHRPROC) loadFunction(\"glBlendBarrierKHR\");\n    glBlendBarrierNV = (PFNGLBLENDBARRIERNVPROC) loadFunction(\"glBlendBarrierNV\");\n    glBlendColor = (PFNGLBLENDCOLORPROC) loadFunction(\"glBlendColor\");\n    glBlendColorEXT = (PFNGLBLENDCOLOREXTPROC) loadFunction(\"glBlendColorEXT\");\n    glBlendEquation = (PFNGLBLENDEQUATIONPROC) loadFunction(\"glBlendEquation\");\n    glBlendEquationEXT = (PFNGLBLENDEQUATIONEXTPROC) loadFunction(\"glBlendEquationEXT\");\n    glBlendEquationIndexedAMD = (PFNGLBLENDEQUATIONINDEXEDAMDPROC) loadFunction(\"glBlendEquationIndexedAMD\");\n    glBlendEquationSeparate = (PFNGLBLENDEQUATIONSEPARATEPROC) loadFunction(\"glBlendEquationSeparate\");\n    glBlendEquationSeparateEXT = (PFNGLBLENDEQUATIONSEPARATEEXTPROC) loadFunction(\"glBlendEquationSeparateEXT\");\n    glBlendEquationSeparateIndexedAMD = (PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) loadFunction(\"glBlendEquationSeparateIndexedAMD\");\n    glBlendEquationSeparatei = (PFNGLBLENDEQUATIONSEPARATEIPROC) loadFunction(\"glBlendEquationSeparatei\");\n    glBlendEquationSeparateiARB = (PFNGLBLENDEQUATIONSEPARATEIARBPROC) loadFunction(\"glBlendEquationSeparateiARB\");\n    glBlendEquationi = (PFNGLBLENDEQUATIONIPROC) loadFunction(\"glBlendEquationi\");\n    glBlendEquationiARB = (PFNGLBLENDEQUATIONIARBPROC) loadFunction(\"glBlendEquationiARB\");\n    glBlendFunc = (PFNGLBLENDFUNCPROC) loadFunction(\"glBlendFunc\");\n    glBlendFuncIndexedAMD = (PFNGLBLENDFUNCINDEXEDAMDPROC) loadFunction(\"glBlendFuncIndexedAMD\");\n    glBlendFuncSeparate = (PFNGLBLENDFUNCSEPARATEPROC) loadFunction(\"glBlendFuncSeparate\");\n    glBlendFuncSeparateEXT = (PFNGLBLENDFUNCSEPARATEEXTPROC) loadFunction(\"glBlendFuncSeparateEXT\");\n    glBlendFuncSeparateIndexedAMD = (PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) loadFunction(\"glBlendFuncSeparateIndexedAMD\");\n    glBlendFuncSeparatei = (PFNGLBLENDFUNCSEPARATEIPROC) loadFunction(\"glBlendFuncSeparatei\");\n    glBlendFuncSeparateiARB = (PFNGLBLENDFUNCSEPARATEIARBPROC) loadFunction(\"glBlendFuncSeparateiARB\");\n    glBlendFunci = (PFNGLBLENDFUNCIPROC) loadFunction(\"glBlendFunci\");\n    glBlendFunciARB = (PFNGLBLENDFUNCIARBPROC) loadFunction(\"glBlendFunciARB\");\n    glBlendParameteriNV = (PFNGLBLENDPARAMETERINVPROC) loadFunction(\"glBlendParameteriNV\");\n    glBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC) loadFunction(\"glBlitFramebuffer\");\n    glBlitFramebufferEXT = (PFNGLBLITFRAMEBUFFEREXTPROC) loadFunction(\"glBlitFramebufferEXT\");\n    glBlitNamedFramebuffer = (PFNGLBLITNAMEDFRAMEBUFFERPROC) loadFunction(\"glBlitNamedFramebuffer\");\n    glBufferAddressRangeNV = (PFNGLBUFFERADDRESSRANGENVPROC) loadFunction(\"glBufferAddressRangeNV\");\n    glBufferAttachMemoryNV = (PFNGLBUFFERATTACHMEMORYNVPROC) loadFunction(\"glBufferAttachMemoryNV\");\n    glBufferData = (PFNGLBUFFERDATAPROC) loadFunction(\"glBufferData\");\n    glBufferDataARB = (PFNGLBUFFERDATAARBPROC) loadFunction(\"glBufferDataARB\");\n    glBufferPageCommitmentARB = (PFNGLBUFFERPAGECOMMITMENTARBPROC) loadFunction(\"glBufferPageCommitmentARB\");\n    glBufferParameteriAPPLE = (PFNGLBUFFERPARAMETERIAPPLEPROC) loadFunction(\"glBufferParameteriAPPLE\");\n    glBufferStorage = (PFNGLBUFFERSTORAGEPROC) loadFunction(\"glBufferStorage\");\n    glBufferStorageExternalEXT = (PFNGLBUFFERSTORAGEEXTERNALEXTPROC) loadFunction(\"glBufferStorageExternalEXT\");\n    glBufferStorageMemEXT = (PFNGLBUFFERSTORAGEMEMEXTPROC) loadFunction(\"glBufferStorageMemEXT\");\n    glBufferSubData = (PFNGLBUFFERSUBDATAPROC) loadFunction(\"glBufferSubData\");\n    glBufferSubDataARB = (PFNGLBUFFERSUBDATAARBPROC) loadFunction(\"glBufferSubDataARB\");\n    glCallCommandListNV = (PFNGLCALLCOMMANDLISTNVPROC) loadFunction(\"glCallCommandListNV\");\n    glCallList = (PFNGLCALLLISTPROC) loadFunction(\"glCallList\");\n    glCallLists = (PFNGLCALLLISTSPROC) loadFunction(\"glCallLists\");\n    glCheckFramebufferStatus = (PFNGLCHECKFRAMEBUFFERSTATUSPROC) loadFunction(\"glCheckFramebufferStatus\");\n    glCheckFramebufferStatusEXT = (PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) loadFunction(\"glCheckFramebufferStatusEXT\");\n    glCheckNamedFramebufferStatus = (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) loadFunction(\"glCheckNamedFramebufferStatus\");\n    glCheckNamedFramebufferStatusEXT = (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) loadFunction(\"glCheckNamedFramebufferStatusEXT\");\n    glClampColor = (PFNGLCLAMPCOLORPROC) loadFunction(\"glClampColor\");\n    glClampColorARB = (PFNGLCLAMPCOLORARBPROC) loadFunction(\"glClampColorARB\");\n    glClear = (PFNGLCLEARPROC) loadFunction(\"glClear\");\n    glClearAccum = (PFNGLCLEARACCUMPROC) loadFunction(\"glClearAccum\");\n    glClearBufferData = (PFNGLCLEARBUFFERDATAPROC) loadFunction(\"glClearBufferData\");\n    glClearBufferSubData = (PFNGLCLEARBUFFERSUBDATAPROC) loadFunction(\"glClearBufferSubData\");\n    glClearBufferfi = (PFNGLCLEARBUFFERFIPROC) loadFunction(\"glClearBufferfi\");\n    glClearBufferfv = (PFNGLCLEARBUFFERFVPROC) loadFunction(\"glClearBufferfv\");\n    glClearBufferiv = (PFNGLCLEARBUFFERIVPROC) loadFunction(\"glClearBufferiv\");\n    glClearBufferuiv = (PFNGLCLEARBUFFERUIVPROC) loadFunction(\"glClearBufferuiv\");\n    glClearColor = (PFNGLCLEARCOLORPROC) loadFunction(\"glClearColor\");\n    glClearColorIiEXT = (PFNGLCLEARCOLORIIEXTPROC) loadFunction(\"glClearColorIiEXT\");\n    glClearColorIuiEXT = (PFNGLCLEARCOLORIUIEXTPROC) loadFunction(\"glClearColorIuiEXT\");\n    glClearDepth = (PFNGLCLEARDEPTHPROC) loadFunction(\"glClearDepth\");\n    glClearDepthdNV = (PFNGLCLEARDEPTHDNVPROC) loadFunction(\"glClearDepthdNV\");\n    glClearDepthf = (PFNGLCLEARDEPTHFPROC) loadFunction(\"glClearDepthf\");\n    glClearIndex = (PFNGLCLEARINDEXPROC) loadFunction(\"glClearIndex\");\n    glClearNamedBufferData = (PFNGLCLEARNAMEDBUFFERDATAPROC) loadFunction(\"glClearNamedBufferData\");\n    glClearNamedBufferDataEXT = (PFNGLCLEARNAMEDBUFFERDATAEXTPROC) loadFunction(\"glClearNamedBufferDataEXT\");\n    glClearNamedBufferSubData = (PFNGLCLEARNAMEDBUFFERSUBDATAPROC) loadFunction(\"glClearNamedBufferSubData\");\n    glClearNamedBufferSubDataEXT = (PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) loadFunction(\"glClearNamedBufferSubDataEXT\");\n    glClearNamedFramebufferfi = (PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) loadFunction(\"glClearNamedFramebufferfi\");\n    glClearNamedFramebufferfv = (PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) loadFunction(\"glClearNamedFramebufferfv\");\n    glClearNamedFramebufferiv = (PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) loadFunction(\"glClearNamedFramebufferiv\");\n    glClearNamedFramebufferuiv = (PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) loadFunction(\"glClearNamedFramebufferuiv\");\n    glClearStencil = (PFNGLCLEARSTENCILPROC) loadFunction(\"glClearStencil\");\n    glClearTexImage = (PFNGLCLEARTEXIMAGEPROC) loadFunction(\"glClearTexImage\");\n    glClearTexSubImage = (PFNGLCLEARTEXSUBIMAGEPROC) loadFunction(\"glClearTexSubImage\");\n    glClientActiveTexture = (PFNGLCLIENTACTIVETEXTUREPROC) loadFunction(\"glClientActiveTexture\");\n    glClientActiveTextureARB = (PFNGLCLIENTACTIVETEXTUREARBPROC) loadFunction(\"glClientActiveTextureARB\");\n    glClientAttribDefaultEXT = (PFNGLCLIENTATTRIBDEFAULTEXTPROC) loadFunction(\"glClientAttribDefaultEXT\");\n    glClientWaitSync = (PFNGLCLIENTWAITSYNCPROC) loadFunction(\"glClientWaitSync\");\n    glClipControl = (PFNGLCLIPCONTROLPROC) loadFunction(\"glClipControl\");\n    glClipPlane = (PFNGLCLIPPLANEPROC) loadFunction(\"glClipPlane\");\n    glColor3b = (PFNGLCOLOR3BPROC) loadFunction(\"glColor3b\");\n    glColor3bv = (PFNGLCOLOR3BVPROC) loadFunction(\"glColor3bv\");\n    glColor3d = (PFNGLCOLOR3DPROC) loadFunction(\"glColor3d\");\n    glColor3dv = (PFNGLCOLOR3DVPROC) loadFunction(\"glColor3dv\");\n    glColor3f = (PFNGLCOLOR3FPROC) loadFunction(\"glColor3f\");\n    glColor3fv = (PFNGLCOLOR3FVPROC) loadFunction(\"glColor3fv\");\n    glColor3hNV = (PFNGLCOLOR3HNVPROC) loadFunction(\"glColor3hNV\");\n    glColor3hvNV = (PFNGLCOLOR3HVNVPROC) loadFunction(\"glColor3hvNV\");\n    glColor3i = (PFNGLCOLOR3IPROC) loadFunction(\"glColor3i\");\n    glColor3iv = (PFNGLCOLOR3IVPROC) loadFunction(\"glColor3iv\");\n    glColor3s = (PFNGLCOLOR3SPROC) loadFunction(\"glColor3s\");\n    glColor3sv = (PFNGLCOLOR3SVPROC) loadFunction(\"glColor3sv\");\n    glColor3ub = (PFNGLCOLOR3UBPROC) loadFunction(\"glColor3ub\");\n    glColor3ubv = (PFNGLCOLOR3UBVPROC) loadFunction(\"glColor3ubv\");\n    glColor3ui = (PFNGLCOLOR3UIPROC) loadFunction(\"glColor3ui\");\n    glColor3uiv = (PFNGLCOLOR3UIVPROC) loadFunction(\"glColor3uiv\");\n    glColor3us = (PFNGLCOLOR3USPROC) loadFunction(\"glColor3us\");\n    glColor3usv = (PFNGLCOLOR3USVPROC) loadFunction(\"glColor3usv\");\n    glColor4b = (PFNGLCOLOR4BPROC) loadFunction(\"glColor4b\");\n    glColor4bv = (PFNGLCOLOR4BVPROC) loadFunction(\"glColor4bv\");\n    glColor4d = (PFNGLCOLOR4DPROC) loadFunction(\"glColor4d\");\n    glColor4dv = (PFNGLCOLOR4DVPROC) loadFunction(\"glColor4dv\");\n    glColor4f = (PFNGLCOLOR4FPROC) loadFunction(\"glColor4f\");\n    glColor4fv = (PFNGLCOLOR4FVPROC) loadFunction(\"glColor4fv\");\n    glColor4hNV = (PFNGLCOLOR4HNVPROC) loadFunction(\"glColor4hNV\");\n    glColor4hvNV = (PFNGLCOLOR4HVNVPROC) loadFunction(\"glColor4hvNV\");\n    glColor4i = (PFNGLCOLOR4IPROC) loadFunction(\"glColor4i\");\n    glColor4iv = (PFNGLCOLOR4IVPROC) loadFunction(\"glColor4iv\");\n    glColor4s = (PFNGLCOLOR4SPROC) loadFunction(\"glColor4s\");\n    glColor4sv = (PFNGLCOLOR4SVPROC) loadFunction(\"glColor4sv\");\n    glColor4ub = (PFNGLCOLOR4UBPROC) loadFunction(\"glColor4ub\");\n    glColor4ubv = (PFNGLCOLOR4UBVPROC) loadFunction(\"glColor4ubv\");\n    glColor4ui = (PFNGLCOLOR4UIPROC) loadFunction(\"glColor4ui\");\n    glColor4uiv = (PFNGLCOLOR4UIVPROC) loadFunction(\"glColor4uiv\");\n    glColor4us = (PFNGLCOLOR4USPROC) loadFunction(\"glColor4us\");\n    glColor4usv = (PFNGLCOLOR4USVPROC) loadFunction(\"glColor4usv\");\n    glColorFormatNV = (PFNGLCOLORFORMATNVPROC) loadFunction(\"glColorFormatNV\");\n    glColorMask = (PFNGLCOLORMASKPROC) loadFunction(\"glColorMask\");\n    glColorMaskIndexedEXT = (PFNGLCOLORMASKINDEXEDEXTPROC) loadFunction(\"glColorMaskIndexedEXT\");\n    glColorMaski = (PFNGLCOLORMASKIPROC) loadFunction(\"glColorMaski\");\n    glColorMaterial = (PFNGLCOLORMATERIALPROC) loadFunction(\"glColorMaterial\");\n    glColorP3ui = (PFNGLCOLORP3UIPROC) loadFunction(\"glColorP3ui\");\n    glColorP3uiv = (PFNGLCOLORP3UIVPROC) loadFunction(\"glColorP3uiv\");\n    glColorP4ui = (PFNGLCOLORP4UIPROC) loadFunction(\"glColorP4ui\");\n    glColorP4uiv = (PFNGLCOLORP4UIVPROC) loadFunction(\"glColorP4uiv\");\n    glColorPointer = (PFNGLCOLORPOINTERPROC) loadFunction(\"glColorPointer\");\n    glColorPointerEXT = (PFNGLCOLORPOINTEREXTPROC) loadFunction(\"glColorPointerEXT\");\n    glColorPointervINTEL = (PFNGLCOLORPOINTERVINTELPROC) loadFunction(\"glColorPointervINTEL\");\n    glColorSubTable = (PFNGLCOLORSUBTABLEPROC) loadFunction(\"glColorSubTable\");\n    glColorSubTableEXT = (PFNGLCOLORSUBTABLEEXTPROC) loadFunction(\"glColorSubTableEXT\");\n    glColorTable = (PFNGLCOLORTABLEPROC) loadFunction(\"glColorTable\");\n    glColorTableEXT = (PFNGLCOLORTABLEEXTPROC) loadFunction(\"glColorTableEXT\");\n    glColorTableParameterfv = (PFNGLCOLORTABLEPARAMETERFVPROC) loadFunction(\"glColorTableParameterfv\");\n    glColorTableParameteriv = (PFNGLCOLORTABLEPARAMETERIVPROC) loadFunction(\"glColorTableParameteriv\");\n    glCombinerInputNV = (PFNGLCOMBINERINPUTNVPROC) loadFunction(\"glCombinerInputNV\");\n    glCombinerOutputNV = (PFNGLCOMBINEROUTPUTNVPROC) loadFunction(\"glCombinerOutputNV\");\n    glCombinerParameterfNV = (PFNGLCOMBINERPARAMETERFNVPROC) loadFunction(\"glCombinerParameterfNV\");\n    glCombinerParameterfvNV = (PFNGLCOMBINERPARAMETERFVNVPROC) loadFunction(\"glCombinerParameterfvNV\");\n    glCombinerParameteriNV = (PFNGLCOMBINERPARAMETERINVPROC) loadFunction(\"glCombinerParameteriNV\");\n    glCombinerParameterivNV = (PFNGLCOMBINERPARAMETERIVNVPROC) loadFunction(\"glCombinerParameterivNV\");\n    glCombinerStageParameterfvNV = (PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) loadFunction(\"glCombinerStageParameterfvNV\");\n    glCommandListSegmentsNV = (PFNGLCOMMANDLISTSEGMENTSNVPROC) loadFunction(\"glCommandListSegmentsNV\");\n    glCompileCommandListNV = (PFNGLCOMPILECOMMANDLISTNVPROC) loadFunction(\"glCompileCommandListNV\");\n    glCompileShader = (PFNGLCOMPILESHADERPROC) loadFunction(\"glCompileShader\");\n    glCompileShaderARB = (PFNGLCOMPILESHADERARBPROC) loadFunction(\"glCompileShaderARB\");\n    glCompileShaderIncludeARB = (PFNGLCOMPILESHADERINCLUDEARBPROC) loadFunction(\"glCompileShaderIncludeARB\");\n    glCompressedMultiTexImage1DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) loadFunction(\"glCompressedMultiTexImage1DEXT\");\n    glCompressedMultiTexImage2DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) loadFunction(\"glCompressedMultiTexImage2DEXT\");\n    glCompressedMultiTexImage3DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) loadFunction(\"glCompressedMultiTexImage3DEXT\");\n    glCompressedMultiTexSubImage1DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) loadFunction(\"glCompressedMultiTexSubImage1DEXT\");\n    glCompressedMultiTexSubImage2DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) loadFunction(\"glCompressedMultiTexSubImage2DEXT\");\n    glCompressedMultiTexSubImage3DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) loadFunction(\"glCompressedMultiTexSubImage3DEXT\");\n    glCompressedTexImage1D = (PFNGLCOMPRESSEDTEXIMAGE1DPROC) loadFunction(\"glCompressedTexImage1D\");\n    glCompressedTexImage1DARB = (PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) loadFunction(\"glCompressedTexImage1DARB\");\n    glCompressedTexImage2D = (PFNGLCOMPRESSEDTEXIMAGE2DPROC) loadFunction(\"glCompressedTexImage2D\");\n    glCompressedTexImage2DARB = (PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) loadFunction(\"glCompressedTexImage2DARB\");\n    glCompressedTexImage3D = (PFNGLCOMPRESSEDTEXIMAGE3DPROC) loadFunction(\"glCompressedTexImage3D\");\n    glCompressedTexImage3DARB = (PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) loadFunction(\"glCompressedTexImage3DARB\");\n    glCompressedTexSubImage1D = (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) loadFunction(\"glCompressedTexSubImage1D\");\n    glCompressedTexSubImage1DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) loadFunction(\"glCompressedTexSubImage1DARB\");\n    glCompressedTexSubImage2D = (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) loadFunction(\"glCompressedTexSubImage2D\");\n    glCompressedTexSubImage2DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) loadFunction(\"glCompressedTexSubImage2DARB\");\n    glCompressedTexSubImage3D = (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) loadFunction(\"glCompressedTexSubImage3D\");\n    glCompressedTexSubImage3DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) loadFunction(\"glCompressedTexSubImage3DARB\");\n    glCompressedTextureImage1DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) loadFunction(\"glCompressedTextureImage1DEXT\");\n    glCompressedTextureImage2DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) loadFunction(\"glCompressedTextureImage2DEXT\");\n    glCompressedTextureImage3DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) loadFunction(\"glCompressedTextureImage3DEXT\");\n    glCompressedTextureSubImage1D = (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) loadFunction(\"glCompressedTextureSubImage1D\");\n    glCompressedTextureSubImage1DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) loadFunction(\"glCompressedTextureSubImage1DEXT\");\n    glCompressedTextureSubImage2D = (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) loadFunction(\"glCompressedTextureSubImage2D\");\n    glCompressedTextureSubImage2DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) loadFunction(\"glCompressedTextureSubImage2DEXT\");\n    glCompressedTextureSubImage3D = (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) loadFunction(\"glCompressedTextureSubImage3D\");\n    glCompressedTextureSubImage3DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) loadFunction(\"glCompressedTextureSubImage3DEXT\");\n    glConservativeRasterParameterfNV = (PFNGLCONSERVATIVERASTERPARAMETERFNVPROC) loadFunction(\"glConservativeRasterParameterfNV\");\n    glConservativeRasterParameteriNV = (PFNGLCONSERVATIVERASTERPARAMETERINVPROC) loadFunction(\"glConservativeRasterParameteriNV\");\n    glConvolutionFilter1D = (PFNGLCONVOLUTIONFILTER1DPROC) loadFunction(\"glConvolutionFilter1D\");\n    glConvolutionFilter1DEXT = (PFNGLCONVOLUTIONFILTER1DEXTPROC) loadFunction(\"glConvolutionFilter1DEXT\");\n    glConvolutionFilter2D = (PFNGLCONVOLUTIONFILTER2DPROC) loadFunction(\"glConvolutionFilter2D\");\n    glConvolutionFilter2DEXT = (PFNGLCONVOLUTIONFILTER2DEXTPROC) loadFunction(\"glConvolutionFilter2DEXT\");\n    glConvolutionParameterf = (PFNGLCONVOLUTIONPARAMETERFPROC) loadFunction(\"glConvolutionParameterf\");\n    glConvolutionParameterfEXT = (PFNGLCONVOLUTIONPARAMETERFEXTPROC) loadFunction(\"glConvolutionParameterfEXT\");\n    glConvolutionParameterfv = (PFNGLCONVOLUTIONPARAMETERFVPROC) loadFunction(\"glConvolutionParameterfv\");\n    glConvolutionParameterfvEXT = (PFNGLCONVOLUTIONPARAMETERFVEXTPROC) loadFunction(\"glConvolutionParameterfvEXT\");\n    glConvolutionParameteri = (PFNGLCONVOLUTIONPARAMETERIPROC) loadFunction(\"glConvolutionParameteri\");\n    glConvolutionParameteriEXT = (PFNGLCONVOLUTIONPARAMETERIEXTPROC) loadFunction(\"glConvolutionParameteriEXT\");\n    glConvolutionParameteriv = (PFNGLCONVOLUTIONPARAMETERIVPROC) loadFunction(\"glConvolutionParameteriv\");\n    glConvolutionParameterivEXT = (PFNGLCONVOLUTIONPARAMETERIVEXTPROC) loadFunction(\"glConvolutionParameterivEXT\");\n    glCopyBufferSubData = (PFNGLCOPYBUFFERSUBDATAPROC) loadFunction(\"glCopyBufferSubData\");\n    glCopyColorSubTable = (PFNGLCOPYCOLORSUBTABLEPROC) loadFunction(\"glCopyColorSubTable\");\n    glCopyColorSubTableEXT = (PFNGLCOPYCOLORSUBTABLEEXTPROC) loadFunction(\"glCopyColorSubTableEXT\");\n    glCopyColorTable = (PFNGLCOPYCOLORTABLEPROC) loadFunction(\"glCopyColorTable\");\n    glCopyConvolutionFilter1D = (PFNGLCOPYCONVOLUTIONFILTER1DPROC) loadFunction(\"glCopyConvolutionFilter1D\");\n    glCopyConvolutionFilter1DEXT = (PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) loadFunction(\"glCopyConvolutionFilter1DEXT\");\n    glCopyConvolutionFilter2D = (PFNGLCOPYCONVOLUTIONFILTER2DPROC) loadFunction(\"glCopyConvolutionFilter2D\");\n    glCopyConvolutionFilter2DEXT = (PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) loadFunction(\"glCopyConvolutionFilter2DEXT\");\n    glCopyImageSubData = (PFNGLCOPYIMAGESUBDATAPROC) loadFunction(\"glCopyImageSubData\");\n    glCopyImageSubDataNV = (PFNGLCOPYIMAGESUBDATANVPROC) loadFunction(\"glCopyImageSubDataNV\");\n    glCopyMultiTexImage1DEXT = (PFNGLCOPYMULTITEXIMAGE1DEXTPROC) loadFunction(\"glCopyMultiTexImage1DEXT\");\n    glCopyMultiTexImage2DEXT = (PFNGLCOPYMULTITEXIMAGE2DEXTPROC) loadFunction(\"glCopyMultiTexImage2DEXT\");\n    glCopyMultiTexSubImage1DEXT = (PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) loadFunction(\"glCopyMultiTexSubImage1DEXT\");\n    glCopyMultiTexSubImage2DEXT = (PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) loadFunction(\"glCopyMultiTexSubImage2DEXT\");\n    glCopyMultiTexSubImage3DEXT = (PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) loadFunction(\"glCopyMultiTexSubImage3DEXT\");\n    glCopyNamedBufferSubData = (PFNGLCOPYNAMEDBUFFERSUBDATAPROC) loadFunction(\"glCopyNamedBufferSubData\");\n    glCopyPathNV = (PFNGLCOPYPATHNVPROC) loadFunction(\"glCopyPathNV\");\n    glCopyPixels = (PFNGLCOPYPIXELSPROC) loadFunction(\"glCopyPixels\");\n    glCopyTexImage1D = (PFNGLCOPYTEXIMAGE1DPROC) loadFunction(\"glCopyTexImage1D\");\n    glCopyTexImage1DEXT = (PFNGLCOPYTEXIMAGE1DEXTPROC) loadFunction(\"glCopyTexImage1DEXT\");\n    glCopyTexImage2D = (PFNGLCOPYTEXIMAGE2DPROC) loadFunction(\"glCopyTexImage2D\");\n    glCopyTexImage2DEXT = (PFNGLCOPYTEXIMAGE2DEXTPROC) loadFunction(\"glCopyTexImage2DEXT\");\n    glCopyTexSubImage1D = (PFNGLCOPYTEXSUBIMAGE1DPROC) loadFunction(\"glCopyTexSubImage1D\");\n    glCopyTexSubImage1DEXT = (PFNGLCOPYTEXSUBIMAGE1DEXTPROC) loadFunction(\"glCopyTexSubImage1DEXT\");\n    glCopyTexSubImage2D = (PFNGLCOPYTEXSUBIMAGE2DPROC) loadFunction(\"glCopyTexSubImage2D\");\n    glCopyTexSubImage2DEXT = (PFNGLCOPYTEXSUBIMAGE2DEXTPROC) loadFunction(\"glCopyTexSubImage2DEXT\");\n    glCopyTexSubImage3D = (PFNGLCOPYTEXSUBIMAGE3DPROC) loadFunction(\"glCopyTexSubImage3D\");\n    glCopyTexSubImage3DEXT = (PFNGLCOPYTEXSUBIMAGE3DEXTPROC) loadFunction(\"glCopyTexSubImage3DEXT\");\n    glCopyTextureImage1DEXT = (PFNGLCOPYTEXTUREIMAGE1DEXTPROC) loadFunction(\"glCopyTextureImage1DEXT\");\n    glCopyTextureImage2DEXT = (PFNGLCOPYTEXTUREIMAGE2DEXTPROC) loadFunction(\"glCopyTextureImage2DEXT\");\n    glCopyTextureSubImage1D = (PFNGLCOPYTEXTURESUBIMAGE1DPROC) loadFunction(\"glCopyTextureSubImage1D\");\n    glCopyTextureSubImage1DEXT = (PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) loadFunction(\"glCopyTextureSubImage1DEXT\");\n    glCopyTextureSubImage2D = (PFNGLCOPYTEXTURESUBIMAGE2DPROC) loadFunction(\"glCopyTextureSubImage2D\");\n    glCopyTextureSubImage2DEXT = (PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) loadFunction(\"glCopyTextureSubImage2DEXT\");\n    glCopyTextureSubImage3D = (PFNGLCOPYTEXTURESUBIMAGE3DPROC) loadFunction(\"glCopyTextureSubImage3D\");\n    glCopyTextureSubImage3DEXT = (PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) loadFunction(\"glCopyTextureSubImage3DEXT\");\n    glCoverFillPathInstancedNV = (PFNGLCOVERFILLPATHINSTANCEDNVPROC) loadFunction(\"glCoverFillPathInstancedNV\");\n    glCoverFillPathNV = (PFNGLCOVERFILLPATHNVPROC) loadFunction(\"glCoverFillPathNV\");\n    glCoverStrokePathInstancedNV = (PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) loadFunction(\"glCoverStrokePathInstancedNV\");\n    glCoverStrokePathNV = (PFNGLCOVERSTROKEPATHNVPROC) loadFunction(\"glCoverStrokePathNV\");\n    glCoverageModulationNV = (PFNGLCOVERAGEMODULATIONNVPROC) loadFunction(\"glCoverageModulationNV\");\n    glCoverageModulationTableNV = (PFNGLCOVERAGEMODULATIONTABLENVPROC) loadFunction(\"glCoverageModulationTableNV\");\n    glCreateBuffers = (PFNGLCREATEBUFFERSPROC) loadFunction(\"glCreateBuffers\");\n    glCreateCommandListsNV = (PFNGLCREATECOMMANDLISTSNVPROC) loadFunction(\"glCreateCommandListsNV\");\n    glCreateFramebuffers = (PFNGLCREATEFRAMEBUFFERSPROC) loadFunction(\"glCreateFramebuffers\");\n    glCreateMemoryObjectsEXT = (PFNGLCREATEMEMORYOBJECTSEXTPROC) loadFunction(\"glCreateMemoryObjectsEXT\");\n    glCreatePerfQueryINTEL = (PFNGLCREATEPERFQUERYINTELPROC) loadFunction(\"glCreatePerfQueryINTEL\");\n    glCreateProgram = (PFNGLCREATEPROGRAMPROC) loadFunction(\"glCreateProgram\");\n    glCreateProgramObjectARB = (PFNGLCREATEPROGRAMOBJECTARBPROC) loadFunction(\"glCreateProgramObjectARB\");\n    glCreateProgramPipelines = (PFNGLCREATEPROGRAMPIPELINESPROC) loadFunction(\"glCreateProgramPipelines\");\n    glCreateQueries = (PFNGLCREATEQUERIESPROC) loadFunction(\"glCreateQueries\");\n    glCreateRenderbuffers = (PFNGLCREATERENDERBUFFERSPROC) loadFunction(\"glCreateRenderbuffers\");\n    glCreateSamplers = (PFNGLCREATESAMPLERSPROC) loadFunction(\"glCreateSamplers\");\n    glCreateShader = (PFNGLCREATESHADERPROC) loadFunction(\"glCreateShader\");\n    glCreateShaderObjectARB = (PFNGLCREATESHADEROBJECTARBPROC) loadFunction(\"glCreateShaderObjectARB\");\n    glCreateShaderProgramEXT = (PFNGLCREATESHADERPROGRAMEXTPROC) loadFunction(\"glCreateShaderProgramEXT\");\n    glCreateShaderProgramv = (PFNGLCREATESHADERPROGRAMVPROC) loadFunction(\"glCreateShaderProgramv\");\n    glCreateShaderProgramvEXT = (PFNGLCREATESHADERPROGRAMVEXTPROC) loadFunction(\"glCreateShaderProgramvEXT\");\n    glCreateStatesNV = (PFNGLCREATESTATESNVPROC) loadFunction(\"glCreateStatesNV\");\n    glCreateSyncFromCLeventARB = (PFNGLCREATESYNCFROMCLEVENTARBPROC) loadFunction(\"glCreateSyncFromCLeventARB\");\n    glCreateTextures = (PFNGLCREATETEXTURESPROC) loadFunction(\"glCreateTextures\");\n    glCreateTransformFeedbacks = (PFNGLCREATETRANSFORMFEEDBACKSPROC) loadFunction(\"glCreateTransformFeedbacks\");\n    glCreateVertexArrays = (PFNGLCREATEVERTEXARRAYSPROC) loadFunction(\"glCreateVertexArrays\");\n    glCullFace = (PFNGLCULLFACEPROC) loadFunction(\"glCullFace\");\n    glCullParameterdvEXT = (PFNGLCULLPARAMETERDVEXTPROC) loadFunction(\"glCullParameterdvEXT\");\n    glCullParameterfvEXT = (PFNGLCULLPARAMETERFVEXTPROC) loadFunction(\"glCullParameterfvEXT\");\n    glCurrentPaletteMatrixARB = (PFNGLCURRENTPALETTEMATRIXARBPROC) loadFunction(\"glCurrentPaletteMatrixARB\");\n    glDebugMessageCallback = (PFNGLDEBUGMESSAGECALLBACKPROC) loadFunction(\"glDebugMessageCallback\");\n    glDebugMessageCallbackAMD = (PFNGLDEBUGMESSAGECALLBACKAMDPROC) loadFunction(\"glDebugMessageCallbackAMD\");\n    glDebugMessageCallbackARB = (PFNGLDEBUGMESSAGECALLBACKARBPROC) loadFunction(\"glDebugMessageCallbackARB\");\n    glDebugMessageCallbackKHR = (PFNGLDEBUGMESSAGECALLBACKKHRPROC) loadFunction(\"glDebugMessageCallbackKHR\");\n    glDebugMessageControl = (PFNGLDEBUGMESSAGECONTROLPROC) loadFunction(\"glDebugMessageControl\");\n    glDebugMessageControlARB = (PFNGLDEBUGMESSAGECONTROLARBPROC) loadFunction(\"glDebugMessageControlARB\");\n    glDebugMessageControlKHR = (PFNGLDEBUGMESSAGECONTROLKHRPROC) loadFunction(\"glDebugMessageControlKHR\");\n    glDebugMessageEnableAMD = (PFNGLDEBUGMESSAGEENABLEAMDPROC) loadFunction(\"glDebugMessageEnableAMD\");\n    glDebugMessageInsert = (PFNGLDEBUGMESSAGEINSERTPROC) loadFunction(\"glDebugMessageInsert\");\n    glDebugMessageInsertAMD = (PFNGLDEBUGMESSAGEINSERTAMDPROC) loadFunction(\"glDebugMessageInsertAMD\");\n    glDebugMessageInsertARB = (PFNGLDEBUGMESSAGEINSERTARBPROC) loadFunction(\"glDebugMessageInsertARB\");\n    glDebugMessageInsertKHR = (PFNGLDEBUGMESSAGEINSERTKHRPROC) loadFunction(\"glDebugMessageInsertKHR\");\n    glDeleteBuffers = (PFNGLDELETEBUFFERSPROC) loadFunction(\"glDeleteBuffers\");\n    glDeleteBuffersARB = (PFNGLDELETEBUFFERSARBPROC) loadFunction(\"glDeleteBuffersARB\");\n    glDeleteCommandListsNV = (PFNGLDELETECOMMANDLISTSNVPROC) loadFunction(\"glDeleteCommandListsNV\");\n    glDeleteFencesAPPLE = (PFNGLDELETEFENCESAPPLEPROC) loadFunction(\"glDeleteFencesAPPLE\");\n    glDeleteFencesNV = (PFNGLDELETEFENCESNVPROC) loadFunction(\"glDeleteFencesNV\");\n    glDeleteFramebuffers = (PFNGLDELETEFRAMEBUFFERSPROC) loadFunction(\"glDeleteFramebuffers\");\n    glDeleteFramebuffersEXT = (PFNGLDELETEFRAMEBUFFERSEXTPROC) loadFunction(\"glDeleteFramebuffersEXT\");\n    glDeleteLists = (PFNGLDELETELISTSPROC) loadFunction(\"glDeleteLists\");\n    glDeleteMemoryObjectsEXT = (PFNGLDELETEMEMORYOBJECTSEXTPROC) loadFunction(\"glDeleteMemoryObjectsEXT\");\n    glDeleteNamedStringARB = (PFNGLDELETENAMEDSTRINGARBPROC) loadFunction(\"glDeleteNamedStringARB\");\n    glDeleteNamesAMD = (PFNGLDELETENAMESAMDPROC) loadFunction(\"glDeleteNamesAMD\");\n    glDeleteObjectARB = (PFNGLDELETEOBJECTARBPROC) loadFunction(\"glDeleteObjectARB\");\n    glDeleteOcclusionQueriesNV = (PFNGLDELETEOCCLUSIONQUERIESNVPROC) loadFunction(\"glDeleteOcclusionQueriesNV\");\n    glDeletePathsNV = (PFNGLDELETEPATHSNVPROC) loadFunction(\"glDeletePathsNV\");\n    glDeletePerfMonitorsAMD = (PFNGLDELETEPERFMONITORSAMDPROC) loadFunction(\"glDeletePerfMonitorsAMD\");\n    glDeletePerfQueryINTEL = (PFNGLDELETEPERFQUERYINTELPROC) loadFunction(\"glDeletePerfQueryINTEL\");\n    glDeleteProgram = (PFNGLDELETEPROGRAMPROC) loadFunction(\"glDeleteProgram\");\n    glDeleteProgramPipelines = (PFNGLDELETEPROGRAMPIPELINESPROC) loadFunction(\"glDeleteProgramPipelines\");\n    glDeleteProgramPipelinesEXT = (PFNGLDELETEPROGRAMPIPELINESEXTPROC) loadFunction(\"glDeleteProgramPipelinesEXT\");\n    glDeleteProgramsARB = (PFNGLDELETEPROGRAMSARBPROC) loadFunction(\"glDeleteProgramsARB\");\n    glDeleteProgramsNV = (PFNGLDELETEPROGRAMSNVPROC) loadFunction(\"glDeleteProgramsNV\");\n    glDeleteQueries = (PFNGLDELETEQUERIESPROC) loadFunction(\"glDeleteQueries\");\n    glDeleteQueriesARB = (PFNGLDELETEQUERIESARBPROC) loadFunction(\"glDeleteQueriesARB\");\n    glDeleteQueryResourceTagNV = (PFNGLDELETEQUERYRESOURCETAGNVPROC) loadFunction(\"glDeleteQueryResourceTagNV\");\n    glDeleteRenderbuffers = (PFNGLDELETERENDERBUFFERSPROC) loadFunction(\"glDeleteRenderbuffers\");\n    glDeleteRenderbuffersEXT = (PFNGLDELETERENDERBUFFERSEXTPROC) loadFunction(\"glDeleteRenderbuffersEXT\");\n    glDeleteSamplers = (PFNGLDELETESAMPLERSPROC) loadFunction(\"glDeleteSamplers\");\n    glDeleteSemaphoresEXT = (PFNGLDELETESEMAPHORESEXTPROC) loadFunction(\"glDeleteSemaphoresEXT\");\n    glDeleteShader = (PFNGLDELETESHADERPROC) loadFunction(\"glDeleteShader\");\n    glDeleteStatesNV = (PFNGLDELETESTATESNVPROC) loadFunction(\"glDeleteStatesNV\");\n    glDeleteSync = (PFNGLDELETESYNCPROC) loadFunction(\"glDeleteSync\");\n    glDeleteTextures = (PFNGLDELETETEXTURESPROC) loadFunction(\"glDeleteTextures\");\n    glDeleteTexturesEXT = (PFNGLDELETETEXTURESEXTPROC) loadFunction(\"glDeleteTexturesEXT\");\n    glDeleteTransformFeedbacks = (PFNGLDELETETRANSFORMFEEDBACKSPROC) loadFunction(\"glDeleteTransformFeedbacks\");\n    glDeleteTransformFeedbacksNV = (PFNGLDELETETRANSFORMFEEDBACKSNVPROC) loadFunction(\"glDeleteTransformFeedbacksNV\");\n    glDeleteVertexArrays = (PFNGLDELETEVERTEXARRAYSPROC) loadFunction(\"glDeleteVertexArrays\");\n    glDeleteVertexArraysAPPLE = (PFNGLDELETEVERTEXARRAYSAPPLEPROC) loadFunction(\"glDeleteVertexArraysAPPLE\");\n    glDeleteVertexShaderEXT = (PFNGLDELETEVERTEXSHADEREXTPROC) loadFunction(\"glDeleteVertexShaderEXT\");\n    glDepthBoundsEXT = (PFNGLDEPTHBOUNDSEXTPROC) loadFunction(\"glDepthBoundsEXT\");\n    glDepthBoundsdNV = (PFNGLDEPTHBOUNDSDNVPROC) loadFunction(\"glDepthBoundsdNV\");\n    glDepthFunc = (PFNGLDEPTHFUNCPROC) loadFunction(\"glDepthFunc\");\n    glDepthMask = (PFNGLDEPTHMASKPROC) loadFunction(\"glDepthMask\");\n    glDepthRange = (PFNGLDEPTHRANGEPROC) loadFunction(\"glDepthRange\");\n    glDepthRangeArraydvNV = (PFNGLDEPTHRANGEARRAYDVNVPROC) loadFunction(\"glDepthRangeArraydvNV\");\n    glDepthRangeArrayv = (PFNGLDEPTHRANGEARRAYVPROC) loadFunction(\"glDepthRangeArrayv\");\n    glDepthRangeIndexed = (PFNGLDEPTHRANGEINDEXEDPROC) loadFunction(\"glDepthRangeIndexed\");\n    glDepthRangeIndexeddNV = (PFNGLDEPTHRANGEINDEXEDDNVPROC) loadFunction(\"glDepthRangeIndexeddNV\");\n    glDepthRangedNV = (PFNGLDEPTHRANGEDNVPROC) loadFunction(\"glDepthRangedNV\");\n    glDepthRangef = (PFNGLDEPTHRANGEFPROC) loadFunction(\"glDepthRangef\");\n    glDetachObjectARB = (PFNGLDETACHOBJECTARBPROC) loadFunction(\"glDetachObjectARB\");\n    glDetachShader = (PFNGLDETACHSHADERPROC) loadFunction(\"glDetachShader\");\n    glDisable = (PFNGLDISABLEPROC) loadFunction(\"glDisable\");\n    glDisableClientState = (PFNGLDISABLECLIENTSTATEPROC) loadFunction(\"glDisableClientState\");\n    glDisableClientStateIndexedEXT = (PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) loadFunction(\"glDisableClientStateIndexedEXT\");\n    glDisableClientStateiEXT = (PFNGLDISABLECLIENTSTATEIEXTPROC) loadFunction(\"glDisableClientStateiEXT\");\n    glDisableIndexedEXT = (PFNGLDISABLEINDEXEDEXTPROC) loadFunction(\"glDisableIndexedEXT\");\n    glDisableVariantClientStateEXT = (PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) loadFunction(\"glDisableVariantClientStateEXT\");\n    glDisableVertexArrayAttrib = (PFNGLDISABLEVERTEXARRAYATTRIBPROC) loadFunction(\"glDisableVertexArrayAttrib\");\n    glDisableVertexArrayAttribEXT = (PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) loadFunction(\"glDisableVertexArrayAttribEXT\");\n    glDisableVertexArrayEXT = (PFNGLDISABLEVERTEXARRAYEXTPROC) loadFunction(\"glDisableVertexArrayEXT\");\n    glDisableVertexAttribAPPLE = (PFNGLDISABLEVERTEXATTRIBAPPLEPROC) loadFunction(\"glDisableVertexAttribAPPLE\");\n    glDisableVertexAttribArray = (PFNGLDISABLEVERTEXATTRIBARRAYPROC) loadFunction(\"glDisableVertexAttribArray\");\n    glDisableVertexAttribArrayARB = (PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) loadFunction(\"glDisableVertexAttribArrayARB\");\n    glDisablei = (PFNGLDISABLEIPROC) loadFunction(\"glDisablei\");\n    glDispatchCompute = (PFNGLDISPATCHCOMPUTEPROC) loadFunction(\"glDispatchCompute\");\n    glDispatchComputeGroupSizeARB = (PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) loadFunction(\"glDispatchComputeGroupSizeARB\");\n    glDispatchComputeIndirect = (PFNGLDISPATCHCOMPUTEINDIRECTPROC) loadFunction(\"glDispatchComputeIndirect\");\n    glDrawArrays = (PFNGLDRAWARRAYSPROC) loadFunction(\"glDrawArrays\");\n    glDrawArraysEXT = (PFNGLDRAWARRAYSEXTPROC) loadFunction(\"glDrawArraysEXT\");\n    glDrawArraysIndirect = (PFNGLDRAWARRAYSINDIRECTPROC) loadFunction(\"glDrawArraysIndirect\");\n    glDrawArraysInstanced = (PFNGLDRAWARRAYSINSTANCEDPROC) loadFunction(\"glDrawArraysInstanced\");\n    glDrawArraysInstancedARB = (PFNGLDRAWARRAYSINSTANCEDARBPROC) loadFunction(\"glDrawArraysInstancedARB\");\n    glDrawArraysInstancedBaseInstance = (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) loadFunction(\"glDrawArraysInstancedBaseInstance\");\n    glDrawArraysInstancedEXT = (PFNGLDRAWARRAYSINSTANCEDEXTPROC) loadFunction(\"glDrawArraysInstancedEXT\");\n    glDrawBuffer = (PFNGLDRAWBUFFERPROC) loadFunction(\"glDrawBuffer\");\n    glDrawBuffers = (PFNGLDRAWBUFFERSPROC) loadFunction(\"glDrawBuffers\");\n    glDrawBuffersARB = (PFNGLDRAWBUFFERSARBPROC) loadFunction(\"glDrawBuffersARB\");\n    glDrawCommandsAddressNV = (PFNGLDRAWCOMMANDSADDRESSNVPROC) loadFunction(\"glDrawCommandsAddressNV\");\n    glDrawCommandsNV = (PFNGLDRAWCOMMANDSNVPROC) loadFunction(\"glDrawCommandsNV\");\n    glDrawCommandsStatesAddressNV = (PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC) loadFunction(\"glDrawCommandsStatesAddressNV\");\n    glDrawCommandsStatesNV = (PFNGLDRAWCOMMANDSSTATESNVPROC) loadFunction(\"glDrawCommandsStatesNV\");\n    glDrawElementArrayAPPLE = (PFNGLDRAWELEMENTARRAYAPPLEPROC) loadFunction(\"glDrawElementArrayAPPLE\");\n    glDrawElements = (PFNGLDRAWELEMENTSPROC) loadFunction(\"glDrawElements\");\n    glDrawElementsBaseVertex = (PFNGLDRAWELEMENTSBASEVERTEXPROC) loadFunction(\"glDrawElementsBaseVertex\");\n    glDrawElementsIndirect = (PFNGLDRAWELEMENTSINDIRECTPROC) loadFunction(\"glDrawElementsIndirect\");\n    glDrawElementsInstanced = (PFNGLDRAWELEMENTSINSTANCEDPROC) loadFunction(\"glDrawElementsInstanced\");\n    glDrawElementsInstancedARB = (PFNGLDRAWELEMENTSINSTANCEDARBPROC) loadFunction(\"glDrawElementsInstancedARB\");\n    glDrawElementsInstancedBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) loadFunction(\"glDrawElementsInstancedBaseInstance\");\n    glDrawElementsInstancedBaseVertex = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) loadFunction(\"glDrawElementsInstancedBaseVertex\");\n    glDrawElementsInstancedBaseVertexBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) loadFunction(\"glDrawElementsInstancedBaseVertexBaseInstance\");\n    glDrawElementsInstancedEXT = (PFNGLDRAWELEMENTSINSTANCEDEXTPROC) loadFunction(\"glDrawElementsInstancedEXT\");\n    glDrawMeshTasksNV = (PFNGLDRAWMESHTASKSNVPROC) loadFunction(\"glDrawMeshTasksNV\");\n    glDrawMeshTasksIndirectNV = (PFNGLDRAWMESHTASKSINDIRECTNVPROC) loadFunction(\"glDrawMeshTasksIndirectNV\");\n    glDrawPixels = (PFNGLDRAWPIXELSPROC) loadFunction(\"glDrawPixels\");\n    glDrawRangeElementArrayAPPLE = (PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) loadFunction(\"glDrawRangeElementArrayAPPLE\");\n    glDrawRangeElements = (PFNGLDRAWRANGEELEMENTSPROC) loadFunction(\"glDrawRangeElements\");\n    glDrawRangeElementsBaseVertex = (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) loadFunction(\"glDrawRangeElementsBaseVertex\");\n    glDrawRangeElementsEXT = (PFNGLDRAWRANGEELEMENTSEXTPROC) loadFunction(\"glDrawRangeElementsEXT\");\n    glDrawTextureNV = (PFNGLDRAWTEXTURENVPROC) loadFunction(\"glDrawTextureNV\");\n    glDrawTransformFeedback = (PFNGLDRAWTRANSFORMFEEDBACKPROC) loadFunction(\"glDrawTransformFeedback\");\n    glDrawTransformFeedbackInstanced = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) loadFunction(\"glDrawTransformFeedbackInstanced\");\n    glDrawTransformFeedbackNV = (PFNGLDRAWTRANSFORMFEEDBACKNVPROC) loadFunction(\"glDrawTransformFeedbackNV\");\n    glDrawTransformFeedbackStream = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) loadFunction(\"glDrawTransformFeedbackStream\");\n    glDrawTransformFeedbackStreamInstanced = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) loadFunction(\"glDrawTransformFeedbackStreamInstanced\");\n    glEGLImageTargetTexStorageEXT = (PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC) loadFunction(\"glEGLImageTargetTexStorageEXT\");\n    glEGLImageTargetTextureStorageEXT = (PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC) loadFunction(\"glEGLImageTargetTextureStorageEXT\");\n    glEdgeFlag = (PFNGLEDGEFLAGPROC) loadFunction(\"glEdgeFlag\");\n    glEdgeFlagFormatNV = (PFNGLEDGEFLAGFORMATNVPROC) loadFunction(\"glEdgeFlagFormatNV\");\n    glEdgeFlagPointer = (PFNGLEDGEFLAGPOINTERPROC) loadFunction(\"glEdgeFlagPointer\");\n    glEdgeFlagPointerEXT = (PFNGLEDGEFLAGPOINTEREXTPROC) loadFunction(\"glEdgeFlagPointerEXT\");\n    glEdgeFlagv = (PFNGLEDGEFLAGVPROC) loadFunction(\"glEdgeFlagv\");\n    glElementPointerAPPLE = (PFNGLELEMENTPOINTERAPPLEPROC) loadFunction(\"glElementPointerAPPLE\");\n    glEnable = (PFNGLENABLEPROC) loadFunction(\"glEnable\");\n    glEnableClientState = (PFNGLENABLECLIENTSTATEPROC) loadFunction(\"glEnableClientState\");\n    glEnableClientStateIndexedEXT = (PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) loadFunction(\"glEnableClientStateIndexedEXT\");\n    glEnableClientStateiEXT = (PFNGLENABLECLIENTSTATEIEXTPROC) loadFunction(\"glEnableClientStateiEXT\");\n    glEnableIndexedEXT = (PFNGLENABLEINDEXEDEXTPROC) loadFunction(\"glEnableIndexedEXT\");\n    glEnableVariantClientStateEXT = (PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) loadFunction(\"glEnableVariantClientStateEXT\");\n    glEnableVertexArrayAttrib = (PFNGLENABLEVERTEXARRAYATTRIBPROC) loadFunction(\"glEnableVertexArrayAttrib\");\n    glEnableVertexArrayAttribEXT = (PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) loadFunction(\"glEnableVertexArrayAttribEXT\");\n    glEnableVertexArrayEXT = (PFNGLENABLEVERTEXARRAYEXTPROC) loadFunction(\"glEnableVertexArrayEXT\");\n    glEnableVertexAttribAPPLE = (PFNGLENABLEVERTEXATTRIBAPPLEPROC) loadFunction(\"glEnableVertexAttribAPPLE\");\n    glEnableVertexAttribArray = (PFNGLENABLEVERTEXATTRIBARRAYPROC) loadFunction(\"glEnableVertexAttribArray\");\n    glEnableVertexAttribArrayARB = (PFNGLENABLEVERTEXATTRIBARRAYARBPROC) loadFunction(\"glEnableVertexAttribArrayARB\");\n    glEnablei = (PFNGLENABLEIPROC) loadFunction(\"glEnablei\");\n    glEnd = (PFNGLENDPROC) loadFunction(\"glEnd\");\n    glEndConditionalRender = (PFNGLENDCONDITIONALRENDERPROC) loadFunction(\"glEndConditionalRender\");\n    glEndConditionalRenderNV = (PFNGLENDCONDITIONALRENDERNVPROC) loadFunction(\"glEndConditionalRenderNV\");\n    glEndList = (PFNGLENDLISTPROC) loadFunction(\"glEndList\");\n    glEndOcclusionQueryNV = (PFNGLENDOCCLUSIONQUERYNVPROC) loadFunction(\"glEndOcclusionQueryNV\");\n    glEndPerfMonitorAMD = (PFNGLENDPERFMONITORAMDPROC) loadFunction(\"glEndPerfMonitorAMD\");\n    glEndPerfQueryINTEL = (PFNGLENDPERFQUERYINTELPROC) loadFunction(\"glEndPerfQueryINTEL\");\n    glEndQuery = (PFNGLENDQUERYPROC) loadFunction(\"glEndQuery\");\n    glEndQueryARB = (PFNGLENDQUERYARBPROC) loadFunction(\"glEndQueryARB\");\n    glEndQueryIndexed = (PFNGLENDQUERYINDEXEDPROC) loadFunction(\"glEndQueryIndexed\");\n    glEndTransformFeedback = (PFNGLENDTRANSFORMFEEDBACKPROC) loadFunction(\"glEndTransformFeedback\");\n    glEndTransformFeedbackEXT = (PFNGLENDTRANSFORMFEEDBACKEXTPROC) loadFunction(\"glEndTransformFeedbackEXT\");\n    glEndTransformFeedbackNV = (PFNGLENDTRANSFORMFEEDBACKNVPROC) loadFunction(\"glEndTransformFeedbackNV\");\n    glEndVertexShaderEXT = (PFNGLENDVERTEXSHADEREXTPROC) loadFunction(\"glEndVertexShaderEXT\");\n    glEndVideoCaptureNV = (PFNGLENDVIDEOCAPTURENVPROC) loadFunction(\"glEndVideoCaptureNV\");\n    glEvalCoord1d = (PFNGLEVALCOORD1DPROC) loadFunction(\"glEvalCoord1d\");\n    glEvalCoord1dv = (PFNGLEVALCOORD1DVPROC) loadFunction(\"glEvalCoord1dv\");\n    glEvalCoord1f = (PFNGLEVALCOORD1FPROC) loadFunction(\"glEvalCoord1f\");\n    glEvalCoord1fv = (PFNGLEVALCOORD1FVPROC) loadFunction(\"glEvalCoord1fv\");\n    glEvalCoord2d = (PFNGLEVALCOORD2DPROC) loadFunction(\"glEvalCoord2d\");\n    glEvalCoord2dv = (PFNGLEVALCOORD2DVPROC) loadFunction(\"glEvalCoord2dv\");\n    glEvalCoord2f = (PFNGLEVALCOORD2FPROC) loadFunction(\"glEvalCoord2f\");\n    glEvalCoord2fv = (PFNGLEVALCOORD2FVPROC) loadFunction(\"glEvalCoord2fv\");\n    glEvalMapsNV = (PFNGLEVALMAPSNVPROC) loadFunction(\"glEvalMapsNV\");\n    glEvalMesh1 = (PFNGLEVALMESH1PROC) loadFunction(\"glEvalMesh1\");\n    glEvalMesh2 = (PFNGLEVALMESH2PROC) loadFunction(\"glEvalMesh2\");\n    glEvalPoint1 = (PFNGLEVALPOINT1PROC) loadFunction(\"glEvalPoint1\");\n    glEvalPoint2 = (PFNGLEVALPOINT2PROC) loadFunction(\"glEvalPoint2\");\n    glEvaluateDepthValuesARB = (PFNGLEVALUATEDEPTHVALUESARBPROC) loadFunction(\"glEvaluateDepthValuesARB\");\n    glExecuteProgramNV = (PFNGLEXECUTEPROGRAMNVPROC) loadFunction(\"glExecuteProgramNV\");\n    glExtractComponentEXT = (PFNGLEXTRACTCOMPONENTEXTPROC) loadFunction(\"glExtractComponentEXT\");\n    glFeedbackBuffer = (PFNGLFEEDBACKBUFFERPROC) loadFunction(\"glFeedbackBuffer\");\n    glFenceSync = (PFNGLFENCESYNCPROC) loadFunction(\"glFenceSync\");\n    glFinalCombinerInputNV = (PFNGLFINALCOMBINERINPUTNVPROC) loadFunction(\"glFinalCombinerInputNV\");\n    glFinish = (PFNGLFINISHPROC) loadFunction(\"glFinish\");\n    glFinishFenceAPPLE = (PFNGLFINISHFENCEAPPLEPROC) loadFunction(\"glFinishFenceAPPLE\");\n    glFinishFenceNV = (PFNGLFINISHFENCENVPROC) loadFunction(\"glFinishFenceNV\");\n    glFinishObjectAPPLE = (PFNGLFINISHOBJECTAPPLEPROC) loadFunction(\"glFinishObjectAPPLE\");\n    glFlush = (PFNGLFLUSHPROC) loadFunction(\"glFlush\");\n    glFlushMappedBufferRange = (PFNGLFLUSHMAPPEDBUFFERRANGEPROC) loadFunction(\"glFlushMappedBufferRange\");\n    glFlushMappedBufferRangeAPPLE = (PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) loadFunction(\"glFlushMappedBufferRangeAPPLE\");\n    glFlushMappedNamedBufferRange = (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) loadFunction(\"glFlushMappedNamedBufferRange\");\n    glFlushMappedNamedBufferRangeEXT = (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) loadFunction(\"glFlushMappedNamedBufferRangeEXT\");\n    glFlushPixelDataRangeNV = (PFNGLFLUSHPIXELDATARANGENVPROC) loadFunction(\"glFlushPixelDataRangeNV\");\n    glFlushVertexArrayRangeAPPLE = (PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) loadFunction(\"glFlushVertexArrayRangeAPPLE\");\n    glFlushVertexArrayRangeNV = (PFNGLFLUSHVERTEXARRAYRANGENVPROC) loadFunction(\"glFlushVertexArrayRangeNV\");\n    glFogCoordFormatNV = (PFNGLFOGCOORDFORMATNVPROC) loadFunction(\"glFogCoordFormatNV\");\n    glFogCoordPointer = (PFNGLFOGCOORDPOINTERPROC) loadFunction(\"glFogCoordPointer\");\n    glFogCoordPointerEXT = (PFNGLFOGCOORDPOINTEREXTPROC) loadFunction(\"glFogCoordPointerEXT\");\n    glFogCoordd = (PFNGLFOGCOORDDPROC) loadFunction(\"glFogCoordd\");\n    glFogCoorddEXT = (PFNGLFOGCOORDDEXTPROC) loadFunction(\"glFogCoorddEXT\");\n    glFogCoorddv = (PFNGLFOGCOORDDVPROC) loadFunction(\"glFogCoorddv\");\n    glFogCoorddvEXT = (PFNGLFOGCOORDDVEXTPROC) loadFunction(\"glFogCoorddvEXT\");\n    glFogCoordf = (PFNGLFOGCOORDFPROC) loadFunction(\"glFogCoordf\");\n    glFogCoordfEXT = (PFNGLFOGCOORDFEXTPROC) loadFunction(\"glFogCoordfEXT\");\n    glFogCoordfv = (PFNGLFOGCOORDFVPROC) loadFunction(\"glFogCoordfv\");\n    glFogCoordfvEXT = (PFNGLFOGCOORDFVEXTPROC) loadFunction(\"glFogCoordfvEXT\");\n    glFogCoordhNV = (PFNGLFOGCOORDHNVPROC) loadFunction(\"glFogCoordhNV\");\n    glFogCoordhvNV = (PFNGLFOGCOORDHVNVPROC) loadFunction(\"glFogCoordhvNV\");\n    glFogf = (PFNGLFOGFPROC) loadFunction(\"glFogf\");\n    glFogfv = (PFNGLFOGFVPROC) loadFunction(\"glFogfv\");\n    glFogi = (PFNGLFOGIPROC) loadFunction(\"glFogi\");\n    glFogiv = (PFNGLFOGIVPROC) loadFunction(\"glFogiv\");\n    glFragmentCoverageColorNV = (PFNGLFRAGMENTCOVERAGECOLORNVPROC) loadFunction(\"glFragmentCoverageColorNV\");\n    glFramebufferDrawBufferEXT = (PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) loadFunction(\"glFramebufferDrawBufferEXT\");\n    glFramebufferDrawBuffersEXT = (PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) loadFunction(\"glFramebufferDrawBuffersEXT\");\n    glFramebufferFetchBarrierEXT = (PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC) loadFunction(\"glFramebufferFetchBarrierEXT\");\n    glFramebufferParameteri = (PFNGLFRAMEBUFFERPARAMETERIPROC) loadFunction(\"glFramebufferParameteri\");\n    glFramebufferReadBufferEXT = (PFNGLFRAMEBUFFERREADBUFFEREXTPROC) loadFunction(\"glFramebufferReadBufferEXT\");\n    glFramebufferRenderbuffer = (PFNGLFRAMEBUFFERRENDERBUFFERPROC) loadFunction(\"glFramebufferRenderbuffer\");\n    glFramebufferRenderbufferEXT = (PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) loadFunction(\"glFramebufferRenderbufferEXT\");\n    glFramebufferSampleLocationsfvARB = (PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) loadFunction(\"glFramebufferSampleLocationsfvARB\");\n    glFramebufferSampleLocationsfvNV = (PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) loadFunction(\"glFramebufferSampleLocationsfvNV\");\n    glFramebufferSamplePositionsfvAMD = (PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC) loadFunction(\"glFramebufferSamplePositionsfvAMD\");\n    glFramebufferTexture = (PFNGLFRAMEBUFFERTEXTUREPROC) loadFunction(\"glFramebufferTexture\");\n    glFramebufferTexture1D = (PFNGLFRAMEBUFFERTEXTURE1DPROC) loadFunction(\"glFramebufferTexture1D\");\n    glFramebufferTexture1DEXT = (PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) loadFunction(\"glFramebufferTexture1DEXT\");\n    glFramebufferTexture2D = (PFNGLFRAMEBUFFERTEXTURE2DPROC) loadFunction(\"glFramebufferTexture2D\");\n    glFramebufferTexture2DEXT = (PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) loadFunction(\"glFramebufferTexture2DEXT\");\n    glFramebufferTexture3D = (PFNGLFRAMEBUFFERTEXTURE3DPROC) loadFunction(\"glFramebufferTexture3D\");\n    glFramebufferTexture3DEXT = (PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) loadFunction(\"glFramebufferTexture3DEXT\");\n    glFramebufferTextureARB = (PFNGLFRAMEBUFFERTEXTUREARBPROC) loadFunction(\"glFramebufferTextureARB\");\n    glFramebufferTextureEXT = (PFNGLFRAMEBUFFERTEXTUREEXTPROC) loadFunction(\"glFramebufferTextureEXT\");\n    glFramebufferTextureFaceARB = (PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) loadFunction(\"glFramebufferTextureFaceARB\");\n    glFramebufferTextureFaceEXT = (PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) loadFunction(\"glFramebufferTextureFaceEXT\");\n    glFramebufferTextureLayer = (PFNGLFRAMEBUFFERTEXTURELAYERPROC) loadFunction(\"glFramebufferTextureLayer\");\n    glFramebufferTextureLayerARB = (PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) loadFunction(\"glFramebufferTextureLayerARB\");\n    glFramebufferTextureLayerEXT = (PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) loadFunction(\"glFramebufferTextureLayerEXT\");\n    glFrontFace = (PFNGLFRONTFACEPROC) loadFunction(\"glFrontFace\");\n    glFrustum = (PFNGLFRUSTUMPROC) loadFunction(\"glFrustum\");\n    glGenBuffers = (PFNGLGENBUFFERSPROC) loadFunction(\"glGenBuffers\");\n    glGenBuffersARB = (PFNGLGENBUFFERSARBPROC) loadFunction(\"glGenBuffersARB\");\n    glGenFencesAPPLE = (PFNGLGENFENCESAPPLEPROC) loadFunction(\"glGenFencesAPPLE\");\n    glGenFencesNV = (PFNGLGENFENCESNVPROC) loadFunction(\"glGenFencesNV\");\n    glGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC) loadFunction(\"glGenFramebuffers\");\n    glGenFramebuffersEXT = (PFNGLGENFRAMEBUFFERSEXTPROC) loadFunction(\"glGenFramebuffersEXT\");\n    glGenLists = (PFNGLGENLISTSPROC) loadFunction(\"glGenLists\");\n    glGenNamesAMD = (PFNGLGENNAMESAMDPROC) loadFunction(\"glGenNamesAMD\");\n    glGenOcclusionQueriesNV = (PFNGLGENOCCLUSIONQUERIESNVPROC) loadFunction(\"glGenOcclusionQueriesNV\");\n    glGenPathsNV = (PFNGLGENPATHSNVPROC) loadFunction(\"glGenPathsNV\");\n    glGenPerfMonitorsAMD = (PFNGLGENPERFMONITORSAMDPROC) loadFunction(\"glGenPerfMonitorsAMD\");\n    glGenProgramPipelines = (PFNGLGENPROGRAMPIPELINESPROC) loadFunction(\"glGenProgramPipelines\");\n    glGenProgramPipelinesEXT = (PFNGLGENPROGRAMPIPELINESEXTPROC) loadFunction(\"glGenProgramPipelinesEXT\");\n    glGenProgramsARB = (PFNGLGENPROGRAMSARBPROC) loadFunction(\"glGenProgramsARB\");\n    glGenProgramsNV = (PFNGLGENPROGRAMSNVPROC) loadFunction(\"glGenProgramsNV\");\n    glGenQueries = (PFNGLGENQUERIESPROC) loadFunction(\"glGenQueries\");\n    glGenQueriesARB = (PFNGLGENQUERIESARBPROC) loadFunction(\"glGenQueriesARB\");\n    glGenQueryResourceTagNV = (PFNGLGENQUERYRESOURCETAGNVPROC) loadFunction(\"glGenQueryResourceTagNV\");\n    glGenRenderbuffers = (PFNGLGENRENDERBUFFERSPROC) loadFunction(\"glGenRenderbuffers\");\n    glGenRenderbuffersEXT = (PFNGLGENRENDERBUFFERSEXTPROC) loadFunction(\"glGenRenderbuffersEXT\");\n    glGenSamplers = (PFNGLGENSAMPLERSPROC) loadFunction(\"glGenSamplers\");\n    glGenSemaphoresEXT = (PFNGLGENSEMAPHORESEXTPROC) loadFunction(\"glGenSemaphoresEXT\");\n    glGenSymbolsEXT = (PFNGLGENSYMBOLSEXTPROC) loadFunction(\"glGenSymbolsEXT\");\n    glGenTextures = (PFNGLGENTEXTURESPROC) loadFunction(\"glGenTextures\");\n    glGenTexturesEXT = (PFNGLGENTEXTURESEXTPROC) loadFunction(\"glGenTexturesEXT\");\n    glGenTransformFeedbacks = (PFNGLGENTRANSFORMFEEDBACKSPROC) loadFunction(\"glGenTransformFeedbacks\");\n    glGenTransformFeedbacksNV = (PFNGLGENTRANSFORMFEEDBACKSNVPROC) loadFunction(\"glGenTransformFeedbacksNV\");\n    glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC) loadFunction(\"glGenVertexArrays\");\n    glGenVertexArraysAPPLE = (PFNGLGENVERTEXARRAYSAPPLEPROC) loadFunction(\"glGenVertexArraysAPPLE\");\n    glGenVertexShadersEXT = (PFNGLGENVERTEXSHADERSEXTPROC) loadFunction(\"glGenVertexShadersEXT\");\n    glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC) loadFunction(\"glGenerateMipmap\");\n    glGenerateMipmapEXT = (PFNGLGENERATEMIPMAPEXTPROC) loadFunction(\"glGenerateMipmapEXT\");\n    glGenerateMultiTexMipmapEXT = (PFNGLGENERATEMULTITEXMIPMAPEXTPROC) loadFunction(\"glGenerateMultiTexMipmapEXT\");\n    glGenerateTextureMipmap = (PFNGLGENERATETEXTUREMIPMAPPROC) loadFunction(\"glGenerateTextureMipmap\");\n    glGenerateTextureMipmapEXT = (PFNGLGENERATETEXTUREMIPMAPEXTPROC) loadFunction(\"glGenerateTextureMipmapEXT\");\n    glGetActiveAtomicCounterBufferiv = (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) loadFunction(\"glGetActiveAtomicCounterBufferiv\");\n    glGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC) loadFunction(\"glGetActiveAttrib\");\n    glGetActiveAttribARB = (PFNGLGETACTIVEATTRIBARBPROC) loadFunction(\"glGetActiveAttribARB\");\n    glGetActiveSubroutineName = (PFNGLGETACTIVESUBROUTINENAMEPROC) loadFunction(\"glGetActiveSubroutineName\");\n    glGetActiveSubroutineUniformName = (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) loadFunction(\"glGetActiveSubroutineUniformName\");\n    glGetActiveSubroutineUniformiv = (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) loadFunction(\"glGetActiveSubroutineUniformiv\");\n    glGetActiveUniform = (PFNGLGETACTIVEUNIFORMPROC) loadFunction(\"glGetActiveUniform\");\n    glGetActiveUniformARB = (PFNGLGETACTIVEUNIFORMARBPROC) loadFunction(\"glGetActiveUniformARB\");\n    glGetActiveUniformBlockName = (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) loadFunction(\"glGetActiveUniformBlockName\");\n    glGetActiveUniformBlockiv = (PFNGLGETACTIVEUNIFORMBLOCKIVPROC) loadFunction(\"glGetActiveUniformBlockiv\");\n    glGetActiveUniformName = (PFNGLGETACTIVEUNIFORMNAMEPROC) loadFunction(\"glGetActiveUniformName\");\n    glGetActiveUniformsiv = (PFNGLGETACTIVEUNIFORMSIVPROC) loadFunction(\"glGetActiveUniformsiv\");\n    glGetActiveVaryingNV = (PFNGLGETACTIVEVARYINGNVPROC) loadFunction(\"glGetActiveVaryingNV\");\n    glGetAttachedObjectsARB = (PFNGLGETATTACHEDOBJECTSARBPROC) loadFunction(\"glGetAttachedObjectsARB\");\n    glGetAttachedShaders = (PFNGLGETATTACHEDSHADERSPROC) loadFunction(\"glGetAttachedShaders\");\n    glGetAttribLocation = (PFNGLGETATTRIBLOCATIONPROC) loadFunction(\"glGetAttribLocation\");\n    glGetAttribLocationARB = (PFNGLGETATTRIBLOCATIONARBPROC) loadFunction(\"glGetAttribLocationARB\");\n    glGetBooleanIndexedvEXT = (PFNGLGETBOOLEANINDEXEDVEXTPROC) loadFunction(\"glGetBooleanIndexedvEXT\");\n    glGetBooleani_v = (PFNGLGETBOOLEANI_VPROC) loadFunction(\"glGetBooleani_v\");\n    glGetBooleanv = (PFNGLGETBOOLEANVPROC) loadFunction(\"glGetBooleanv\");\n    glGetBufferParameteri64v = (PFNGLGETBUFFERPARAMETERI64VPROC) loadFunction(\"glGetBufferParameteri64v\");\n    glGetBufferParameteriv = (PFNGLGETBUFFERPARAMETERIVPROC) loadFunction(\"glGetBufferParameteriv\");\n    glGetBufferParameterivARB = (PFNGLGETBUFFERPARAMETERIVARBPROC) loadFunction(\"glGetBufferParameterivARB\");\n    glGetBufferParameterui64vNV = (PFNGLGETBUFFERPARAMETERUI64VNVPROC) loadFunction(\"glGetBufferParameterui64vNV\");\n    glGetBufferPointerv = (PFNGLGETBUFFERPOINTERVPROC) loadFunction(\"glGetBufferPointerv\");\n    glGetBufferPointervARB = (PFNGLGETBUFFERPOINTERVARBPROC) loadFunction(\"glGetBufferPointervARB\");\n    glGetBufferSubData = (PFNGLGETBUFFERSUBDATAPROC) loadFunction(\"glGetBufferSubData\");\n    glGetBufferSubDataARB = (PFNGLGETBUFFERSUBDATAARBPROC) loadFunction(\"glGetBufferSubDataARB\");\n    glGetClipPlane = (PFNGLGETCLIPPLANEPROC) loadFunction(\"glGetClipPlane\");\n    glGetColorTable = (PFNGLGETCOLORTABLEPROC) loadFunction(\"glGetColorTable\");\n    glGetColorTableEXT = (PFNGLGETCOLORTABLEEXTPROC) loadFunction(\"glGetColorTableEXT\");\n    glGetColorTableParameterfv = (PFNGLGETCOLORTABLEPARAMETERFVPROC) loadFunction(\"glGetColorTableParameterfv\");\n    glGetColorTableParameterfvEXT = (PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) loadFunction(\"glGetColorTableParameterfvEXT\");\n    glGetColorTableParameteriv = (PFNGLGETCOLORTABLEPARAMETERIVPROC) loadFunction(\"glGetColorTableParameteriv\");\n    glGetColorTableParameterivEXT = (PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) loadFunction(\"glGetColorTableParameterivEXT\");\n    glGetCombinerInputParameterfvNV = (PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) loadFunction(\"glGetCombinerInputParameterfvNV\");\n    glGetCombinerInputParameterivNV = (PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) loadFunction(\"glGetCombinerInputParameterivNV\");\n    glGetCombinerOutputParameterfvNV = (PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) loadFunction(\"glGetCombinerOutputParameterfvNV\");\n    glGetCombinerOutputParameterivNV = (PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) loadFunction(\"glGetCombinerOutputParameterivNV\");\n    glGetCombinerStageParameterfvNV = (PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) loadFunction(\"glGetCombinerStageParameterfvNV\");\n    glGetCommandHeaderNV = (PFNGLGETCOMMANDHEADERNVPROC) loadFunction(\"glGetCommandHeaderNV\");\n    glGetCompressedMultiTexImageEXT = (PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) loadFunction(\"glGetCompressedMultiTexImageEXT\");\n    glGetCompressedTexImage = (PFNGLGETCOMPRESSEDTEXIMAGEPROC) loadFunction(\"glGetCompressedTexImage\");\n    glGetCompressedTexImageARB = (PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) loadFunction(\"glGetCompressedTexImageARB\");\n    glGetCompressedTextureImage = (PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) loadFunction(\"glGetCompressedTextureImage\");\n    glGetCompressedTextureImageEXT = (PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) loadFunction(\"glGetCompressedTextureImageEXT\");\n    glGetCompressedTextureSubImage = (PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) loadFunction(\"glGetCompressedTextureSubImage\");\n    glGetConvolutionFilter = (PFNGLGETCONVOLUTIONFILTERPROC) loadFunction(\"glGetConvolutionFilter\");\n    glGetConvolutionFilterEXT = (PFNGLGETCONVOLUTIONFILTEREXTPROC) loadFunction(\"glGetConvolutionFilterEXT\");\n    glGetConvolutionParameterfv = (PFNGLGETCONVOLUTIONPARAMETERFVPROC) loadFunction(\"glGetConvolutionParameterfv\");\n    glGetConvolutionParameterfvEXT = (PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) loadFunction(\"glGetConvolutionParameterfvEXT\");\n    glGetConvolutionParameteriv = (PFNGLGETCONVOLUTIONPARAMETERIVPROC) loadFunction(\"glGetConvolutionParameteriv\");\n    glGetConvolutionParameterivEXT = (PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) loadFunction(\"glGetConvolutionParameterivEXT\");\n    glGetCoverageModulationTableNV = (PFNGLGETCOVERAGEMODULATIONTABLENVPROC) loadFunction(\"glGetCoverageModulationTableNV\");\n    glGetDebugMessageLog = (PFNGLGETDEBUGMESSAGELOGPROC) loadFunction(\"glGetDebugMessageLog\");\n    glGetDebugMessageLogAMD = (PFNGLGETDEBUGMESSAGELOGAMDPROC) loadFunction(\"glGetDebugMessageLogAMD\");\n    glGetDebugMessageLogARB = (PFNGLGETDEBUGMESSAGELOGARBPROC) loadFunction(\"glGetDebugMessageLogARB\");\n    glGetDebugMessageLogKHR = (PFNGLGETDEBUGMESSAGELOGKHRPROC) loadFunction(\"glGetDebugMessageLogKHR\");\n    glGetDoubleIndexedvEXT = (PFNGLGETDOUBLEINDEXEDVEXTPROC) loadFunction(\"glGetDoubleIndexedvEXT\");\n    glGetDoublei_v = (PFNGLGETDOUBLEI_VPROC) loadFunction(\"glGetDoublei_v\");\n    glGetDoublei_vEXT = (PFNGLGETDOUBLEI_VEXTPROC) loadFunction(\"glGetDoublei_vEXT\");\n    glGetDoublev = (PFNGLGETDOUBLEVPROC) loadFunction(\"glGetDoublev\");\n    glGetError = (PFNGLGETERRORPROC) loadFunction(\"glGetError\");\n    glGetFenceivNV = (PFNGLGETFENCEIVNVPROC) loadFunction(\"glGetFenceivNV\");\n    glGetFinalCombinerInputParameterfvNV = (PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) loadFunction(\"glGetFinalCombinerInputParameterfvNV\");\n    glGetFinalCombinerInputParameterivNV = (PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) loadFunction(\"glGetFinalCombinerInputParameterivNV\");\n    glGetFirstPerfQueryIdINTEL = (PFNGLGETFIRSTPERFQUERYIDINTELPROC) loadFunction(\"glGetFirstPerfQueryIdINTEL\");\n    glGetFloatIndexedvEXT = (PFNGLGETFLOATINDEXEDVEXTPROC) loadFunction(\"glGetFloatIndexedvEXT\");\n    glGetFloati_v = (PFNGLGETFLOATI_VPROC) loadFunction(\"glGetFloati_v\");\n    glGetFloati_vEXT = (PFNGLGETFLOATI_VEXTPROC) loadFunction(\"glGetFloati_vEXT\");\n    glGetFloatv = (PFNGLGETFLOATVPROC) loadFunction(\"glGetFloatv\");\n    glGetFragDataIndex = (PFNGLGETFRAGDATAINDEXPROC) loadFunction(\"glGetFragDataIndex\");\n    glGetFragDataLocation = (PFNGLGETFRAGDATALOCATIONPROC) loadFunction(\"glGetFragDataLocation\");\n    glGetFragDataLocationEXT = (PFNGLGETFRAGDATALOCATIONEXTPROC) loadFunction(\"glGetFragDataLocationEXT\");\n    glGetFramebufferAttachmentParameteriv = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) loadFunction(\"glGetFramebufferAttachmentParameteriv\");\n    glGetFramebufferAttachmentParameterivEXT = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) loadFunction(\"glGetFramebufferAttachmentParameterivEXT\");\n    glGetFramebufferParameterfvAMD = (PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC) loadFunction(\"glGetFramebufferParameterfvAMD\");\n    glGetFramebufferParameteriv = (PFNGLGETFRAMEBUFFERPARAMETERIVPROC) loadFunction(\"glGetFramebufferParameteriv\");\n    glGetFramebufferParameterivEXT = (PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) loadFunction(\"glGetFramebufferParameterivEXT\");\n    glGetGraphicsResetStatus = (PFNGLGETGRAPHICSRESETSTATUSPROC) loadFunction(\"glGetGraphicsResetStatus\");\n    glGetGraphicsResetStatusARB = (PFNGLGETGRAPHICSRESETSTATUSARBPROC) loadFunction(\"glGetGraphicsResetStatusARB\");\n    glGetGraphicsResetStatusKHR = (PFNGLGETGRAPHICSRESETSTATUSKHRPROC) loadFunction(\"glGetGraphicsResetStatusKHR\");\n    glGetHandleARB = (PFNGLGETHANDLEARBPROC) loadFunction(\"glGetHandleARB\");\n    glGetHistogram = (PFNGLGETHISTOGRAMPROC) loadFunction(\"glGetHistogram\");\n    glGetHistogramEXT = (PFNGLGETHISTOGRAMEXTPROC) loadFunction(\"glGetHistogramEXT\");\n    glGetHistogramParameterfv = (PFNGLGETHISTOGRAMPARAMETERFVPROC) loadFunction(\"glGetHistogramParameterfv\");\n    glGetHistogramParameterfvEXT = (PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) loadFunction(\"glGetHistogramParameterfvEXT\");\n    glGetHistogramParameteriv = (PFNGLGETHISTOGRAMPARAMETERIVPROC) loadFunction(\"glGetHistogramParameteriv\");\n    glGetHistogramParameterivEXT = (PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) loadFunction(\"glGetHistogramParameterivEXT\");\n    glGetImageHandleARB = (PFNGLGETIMAGEHANDLEARBPROC) loadFunction(\"glGetImageHandleARB\");\n    glGetImageHandleNV = (PFNGLGETIMAGEHANDLENVPROC) loadFunction(\"glGetImageHandleNV\");\n    glGetInfoLogARB = (PFNGLGETINFOLOGARBPROC) loadFunction(\"glGetInfoLogARB\");\n    glGetInteger64i_v = (PFNGLGETINTEGER64I_VPROC) loadFunction(\"glGetInteger64i_v\");\n    glGetInteger64v = (PFNGLGETINTEGER64VPROC) loadFunction(\"glGetInteger64v\");\n    glGetIntegerIndexedvEXT = (PFNGLGETINTEGERINDEXEDVEXTPROC) loadFunction(\"glGetIntegerIndexedvEXT\");\n    glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC) loadFunction(\"glGetIntegeri_v\");\n    glGetIntegerui64i_vNV = (PFNGLGETINTEGERUI64I_VNVPROC) loadFunction(\"glGetIntegerui64i_vNV\");\n    glGetIntegerui64vNV = (PFNGLGETINTEGERUI64VNVPROC) loadFunction(\"glGetIntegerui64vNV\");\n    glGetIntegerv = (PFNGLGETINTEGERVPROC) loadFunction(\"glGetIntegerv\");\n    glGetInternalformatSampleivNV = (PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) loadFunction(\"glGetInternalformatSampleivNV\");\n    glGetInternalformati64v = (PFNGLGETINTERNALFORMATI64VPROC) loadFunction(\"glGetInternalformati64v\");\n    glGetInternalformativ = (PFNGLGETINTERNALFORMATIVPROC) loadFunction(\"glGetInternalformativ\");\n    glGetInvariantBooleanvEXT = (PFNGLGETINVARIANTBOOLEANVEXTPROC) loadFunction(\"glGetInvariantBooleanvEXT\");\n    glGetInvariantFloatvEXT = (PFNGLGETINVARIANTFLOATVEXTPROC) loadFunction(\"glGetInvariantFloatvEXT\");\n    glGetInvariantIntegervEXT = (PFNGLGETINVARIANTINTEGERVEXTPROC) loadFunction(\"glGetInvariantIntegervEXT\");\n    glGetLightfv = (PFNGLGETLIGHTFVPROC) loadFunction(\"glGetLightfv\");\n    glGetLightiv = (PFNGLGETLIGHTIVPROC) loadFunction(\"glGetLightiv\");\n    glGetLocalConstantBooleanvEXT = (PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) loadFunction(\"glGetLocalConstantBooleanvEXT\");\n    glGetLocalConstantFloatvEXT = (PFNGLGETLOCALCONSTANTFLOATVEXTPROC) loadFunction(\"glGetLocalConstantFloatvEXT\");\n    glGetLocalConstantIntegervEXT = (PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) loadFunction(\"glGetLocalConstantIntegervEXT\");\n    glGetMapAttribParameterfvNV = (PFNGLGETMAPATTRIBPARAMETERFVNVPROC) loadFunction(\"glGetMapAttribParameterfvNV\");\n    glGetMapAttribParameterivNV = (PFNGLGETMAPATTRIBPARAMETERIVNVPROC) loadFunction(\"glGetMapAttribParameterivNV\");\n    glGetMapControlPointsNV = (PFNGLGETMAPCONTROLPOINTSNVPROC) loadFunction(\"glGetMapControlPointsNV\");\n    glGetMapParameterfvNV = (PFNGLGETMAPPARAMETERFVNVPROC) loadFunction(\"glGetMapParameterfvNV\");\n    glGetMapParameterivNV = (PFNGLGETMAPPARAMETERIVNVPROC) loadFunction(\"glGetMapParameterivNV\");\n    glGetMapdv = (PFNGLGETMAPDVPROC) loadFunction(\"glGetMapdv\");\n    glGetMapfv = (PFNGLGETMAPFVPROC) loadFunction(\"glGetMapfv\");\n    glGetMapiv = (PFNGLGETMAPIVPROC) loadFunction(\"glGetMapiv\");\n    glGetMaterialfv = (PFNGLGETMATERIALFVPROC) loadFunction(\"glGetMaterialfv\");\n    glGetMaterialiv = (PFNGLGETMATERIALIVPROC) loadFunction(\"glGetMaterialiv\");\n    glGetMemoryObjectDetachedResourcesuivNV = (PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC) loadFunction(\"glGetMemoryObjectDetachedResourcesuivNV\");\n    glGetMemoryObjectParameterivEXT = (PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC) loadFunction(\"glGetMemoryObjectParameterivEXT\");\n    glGetMinmax = (PFNGLGETMINMAXPROC) loadFunction(\"glGetMinmax\");\n    glGetMinmaxEXT = (PFNGLGETMINMAXEXTPROC) loadFunction(\"glGetMinmaxEXT\");\n    glGetMinmaxParameterfv = (PFNGLGETMINMAXPARAMETERFVPROC) loadFunction(\"glGetMinmaxParameterfv\");\n    glGetMinmaxParameterfvEXT = (PFNGLGETMINMAXPARAMETERFVEXTPROC) loadFunction(\"glGetMinmaxParameterfvEXT\");\n    glGetMinmaxParameteriv = (PFNGLGETMINMAXPARAMETERIVPROC) loadFunction(\"glGetMinmaxParameteriv\");\n    glGetMinmaxParameterivEXT = (PFNGLGETMINMAXPARAMETERIVEXTPROC) loadFunction(\"glGetMinmaxParameterivEXT\");\n    glGetMultiTexEnvfvEXT = (PFNGLGETMULTITEXENVFVEXTPROC) loadFunction(\"glGetMultiTexEnvfvEXT\");\n    glGetMultiTexEnvivEXT = (PFNGLGETMULTITEXENVIVEXTPROC) loadFunction(\"glGetMultiTexEnvivEXT\");\n    glGetMultiTexGendvEXT = (PFNGLGETMULTITEXGENDVEXTPROC) loadFunction(\"glGetMultiTexGendvEXT\");\n    glGetMultiTexGenfvEXT = (PFNGLGETMULTITEXGENFVEXTPROC) loadFunction(\"glGetMultiTexGenfvEXT\");\n    glGetMultiTexGenivEXT = (PFNGLGETMULTITEXGENIVEXTPROC) loadFunction(\"glGetMultiTexGenivEXT\");\n    glGetMultiTexImageEXT = (PFNGLGETMULTITEXIMAGEEXTPROC) loadFunction(\"glGetMultiTexImageEXT\");\n    glGetMultiTexLevelParameterfvEXT = (PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) loadFunction(\"glGetMultiTexLevelParameterfvEXT\");\n    glGetMultiTexLevelParameterivEXT = (PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) loadFunction(\"glGetMultiTexLevelParameterivEXT\");\n    glGetMultiTexParameterIivEXT = (PFNGLGETMULTITEXPARAMETERIIVEXTPROC) loadFunction(\"glGetMultiTexParameterIivEXT\");\n    glGetMultiTexParameterIuivEXT = (PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) loadFunction(\"glGetMultiTexParameterIuivEXT\");\n    glGetMultiTexParameterfvEXT = (PFNGLGETMULTITEXPARAMETERFVEXTPROC) loadFunction(\"glGetMultiTexParameterfvEXT\");\n    glGetMultiTexParameterivEXT = (PFNGLGETMULTITEXPARAMETERIVEXTPROC) loadFunction(\"glGetMultiTexParameterivEXT\");\n    glGetMultisamplefv = (PFNGLGETMULTISAMPLEFVPROC) loadFunction(\"glGetMultisamplefv\");\n    glGetMultisamplefvNV = (PFNGLGETMULTISAMPLEFVNVPROC) loadFunction(\"glGetMultisamplefvNV\");\n    glGetNamedBufferParameteri64v = (PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) loadFunction(\"glGetNamedBufferParameteri64v\");\n    glGetNamedBufferParameteriv = (PFNGLGETNAMEDBUFFERPARAMETERIVPROC) loadFunction(\"glGetNamedBufferParameteriv\");\n    glGetNamedBufferParameterivEXT = (PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) loadFunction(\"glGetNamedBufferParameterivEXT\");\n    glGetNamedBufferParameterui64vNV = (PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) loadFunction(\"glGetNamedBufferParameterui64vNV\");\n    glGetNamedBufferPointerv = (PFNGLGETNAMEDBUFFERPOINTERVPROC) loadFunction(\"glGetNamedBufferPointerv\");\n    glGetNamedBufferPointervEXT = (PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) loadFunction(\"glGetNamedBufferPointervEXT\");\n    glGetNamedBufferSubData = (PFNGLGETNAMEDBUFFERSUBDATAPROC) loadFunction(\"glGetNamedBufferSubData\");\n    glGetNamedBufferSubDataEXT = (PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) loadFunction(\"glGetNamedBufferSubDataEXT\");\n    glGetNamedFramebufferParameterfvAMD = (PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC) loadFunction(\"glGetNamedFramebufferParameterfvAMD\");\n    glGetNamedFramebufferAttachmentParameteriv = (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) loadFunction(\"glGetNamedFramebufferAttachmentParameteriv\");\n    glGetNamedFramebufferAttachmentParameterivEXT = (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) loadFunction(\"glGetNamedFramebufferAttachmentParameterivEXT\");\n    glGetNamedFramebufferParameteriv = (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) loadFunction(\"glGetNamedFramebufferParameteriv\");\n    glGetNamedFramebufferParameterivEXT = (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) loadFunction(\"glGetNamedFramebufferParameterivEXT\");\n    glGetNamedProgramLocalParameterIivEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) loadFunction(\"glGetNamedProgramLocalParameterIivEXT\");\n    glGetNamedProgramLocalParameterIuivEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) loadFunction(\"glGetNamedProgramLocalParameterIuivEXT\");\n    glGetNamedProgramLocalParameterdvEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) loadFunction(\"glGetNamedProgramLocalParameterdvEXT\");\n    glGetNamedProgramLocalParameterfvEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) loadFunction(\"glGetNamedProgramLocalParameterfvEXT\");\n    glGetNamedProgramStringEXT = (PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) loadFunction(\"glGetNamedProgramStringEXT\");\n    glGetNamedProgramivEXT = (PFNGLGETNAMEDPROGRAMIVEXTPROC) loadFunction(\"glGetNamedProgramivEXT\");\n    glGetNamedRenderbufferParameteriv = (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) loadFunction(\"glGetNamedRenderbufferParameteriv\");\n    glGetNamedRenderbufferParameterivEXT = (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) loadFunction(\"glGetNamedRenderbufferParameterivEXT\");\n    glGetNamedStringARB = (PFNGLGETNAMEDSTRINGARBPROC) loadFunction(\"glGetNamedStringARB\");\n    glGetNamedStringivARB = (PFNGLGETNAMEDSTRINGIVARBPROC) loadFunction(\"glGetNamedStringivARB\");\n    glGetNextPerfQueryIdINTEL = (PFNGLGETNEXTPERFQUERYIDINTELPROC) loadFunction(\"glGetNextPerfQueryIdINTEL\");\n    glGetObjectLabel = (PFNGLGETOBJECTLABELPROC) loadFunction(\"glGetObjectLabel\");\n    glGetObjectLabelEXT = (PFNGLGETOBJECTLABELEXTPROC) loadFunction(\"glGetObjectLabelEXT\");\n    glGetObjectLabelKHR = (PFNGLGETOBJECTLABELKHRPROC) loadFunction(\"glGetObjectLabelKHR\");\n    glGetObjectParameterfvARB = (PFNGLGETOBJECTPARAMETERFVARBPROC) loadFunction(\"glGetObjectParameterfvARB\");\n    glGetObjectParameterivAPPLE = (PFNGLGETOBJECTPARAMETERIVAPPLEPROC) loadFunction(\"glGetObjectParameterivAPPLE\");\n    glGetObjectParameterivARB = (PFNGLGETOBJECTPARAMETERIVARBPROC) loadFunction(\"glGetObjectParameterivARB\");\n    glGetObjectPtrLabel = (PFNGLGETOBJECTPTRLABELPROC) loadFunction(\"glGetObjectPtrLabel\");\n    glGetObjectPtrLabelKHR = (PFNGLGETOBJECTPTRLABELKHRPROC) loadFunction(\"glGetObjectPtrLabelKHR\");\n    glGetOcclusionQueryivNV = (PFNGLGETOCCLUSIONQUERYIVNVPROC) loadFunction(\"glGetOcclusionQueryivNV\");\n    glGetOcclusionQueryuivNV = (PFNGLGETOCCLUSIONQUERYUIVNVPROC) loadFunction(\"glGetOcclusionQueryuivNV\");\n    glGetPathColorGenfvNV = (PFNGLGETPATHCOLORGENFVNVPROC) loadFunction(\"glGetPathColorGenfvNV\");\n    glGetPathColorGenivNV = (PFNGLGETPATHCOLORGENIVNVPROC) loadFunction(\"glGetPathColorGenivNV\");\n    glGetPathCommandsNV = (PFNGLGETPATHCOMMANDSNVPROC) loadFunction(\"glGetPathCommandsNV\");\n    glGetPathCoordsNV = (PFNGLGETPATHCOORDSNVPROC) loadFunction(\"glGetPathCoordsNV\");\n    glGetPathDashArrayNV = (PFNGLGETPATHDASHARRAYNVPROC) loadFunction(\"glGetPathDashArrayNV\");\n    glGetPathLengthNV = (PFNGLGETPATHLENGTHNVPROC) loadFunction(\"glGetPathLengthNV\");\n    glGetPathMetricRangeNV = (PFNGLGETPATHMETRICRANGENVPROC) loadFunction(\"glGetPathMetricRangeNV\");\n    glGetPathMetricsNV = (PFNGLGETPATHMETRICSNVPROC) loadFunction(\"glGetPathMetricsNV\");\n    glGetPathParameterfvNV = (PFNGLGETPATHPARAMETERFVNVPROC) loadFunction(\"glGetPathParameterfvNV\");\n    glGetPathParameterivNV = (PFNGLGETPATHPARAMETERIVNVPROC) loadFunction(\"glGetPathParameterivNV\");\n    glGetPathSpacingNV = (PFNGLGETPATHSPACINGNVPROC) loadFunction(\"glGetPathSpacingNV\");\n    glGetPathTexGenfvNV = (PFNGLGETPATHTEXGENFVNVPROC) loadFunction(\"glGetPathTexGenfvNV\");\n    glGetPathTexGenivNV = (PFNGLGETPATHTEXGENIVNVPROC) loadFunction(\"glGetPathTexGenivNV\");\n    glGetPerfCounterInfoINTEL = (PFNGLGETPERFCOUNTERINFOINTELPROC) loadFunction(\"glGetPerfCounterInfoINTEL\");\n    glGetPerfMonitorCounterDataAMD = (PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) loadFunction(\"glGetPerfMonitorCounterDataAMD\");\n    glGetPerfMonitorCounterInfoAMD = (PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) loadFunction(\"glGetPerfMonitorCounterInfoAMD\");\n    glGetPerfMonitorCounterStringAMD = (PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) loadFunction(\"glGetPerfMonitorCounterStringAMD\");\n    glGetPerfMonitorCountersAMD = (PFNGLGETPERFMONITORCOUNTERSAMDPROC) loadFunction(\"glGetPerfMonitorCountersAMD\");\n    glGetPerfMonitorGroupStringAMD = (PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) loadFunction(\"glGetPerfMonitorGroupStringAMD\");\n    glGetPerfMonitorGroupsAMD = (PFNGLGETPERFMONITORGROUPSAMDPROC) loadFunction(\"glGetPerfMonitorGroupsAMD\");\n    glGetPerfQueryDataINTEL = (PFNGLGETPERFQUERYDATAINTELPROC) loadFunction(\"glGetPerfQueryDataINTEL\");\n    glGetPerfQueryIdByNameINTEL = (PFNGLGETPERFQUERYIDBYNAMEINTELPROC) loadFunction(\"glGetPerfQueryIdByNameINTEL\");\n    glGetPerfQueryInfoINTEL = (PFNGLGETPERFQUERYINFOINTELPROC) loadFunction(\"glGetPerfQueryInfoINTEL\");\n    glGetPixelMapfv = (PFNGLGETPIXELMAPFVPROC) loadFunction(\"glGetPixelMapfv\");\n    glGetPixelMapuiv = (PFNGLGETPIXELMAPUIVPROC) loadFunction(\"glGetPixelMapuiv\");\n    glGetPixelMapusv = (PFNGLGETPIXELMAPUSVPROC) loadFunction(\"glGetPixelMapusv\");\n    glGetPixelTransformParameterfvEXT = (PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC) loadFunction(\"glGetPixelTransformParameterfvEXT\");\n    glGetPixelTransformParameterivEXT = (PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC) loadFunction(\"glGetPixelTransformParameterivEXT\");\n    glGetPointerIndexedvEXT = (PFNGLGETPOINTERINDEXEDVEXTPROC) loadFunction(\"glGetPointerIndexedvEXT\");\n    glGetPointeri_vEXT = (PFNGLGETPOINTERI_VEXTPROC) loadFunction(\"glGetPointeri_vEXT\");\n    glGetPointerv = (PFNGLGETPOINTERVPROC) loadFunction(\"glGetPointerv\");\n    glGetPointervEXT = (PFNGLGETPOINTERVEXTPROC) loadFunction(\"glGetPointervEXT\");\n    glGetPointervKHR = (PFNGLGETPOINTERVKHRPROC) loadFunction(\"glGetPointervKHR\");\n    glGetPolygonStipple = (PFNGLGETPOLYGONSTIPPLEPROC) loadFunction(\"glGetPolygonStipple\");\n    glGetProgramBinary = (PFNGLGETPROGRAMBINARYPROC) loadFunction(\"glGetProgramBinary\");\n    glGetProgramEnvParameterIivNV = (PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) loadFunction(\"glGetProgramEnvParameterIivNV\");\n    glGetProgramEnvParameterIuivNV = (PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) loadFunction(\"glGetProgramEnvParameterIuivNV\");\n    glGetProgramEnvParameterdvARB = (PFNGLGETPROGRAMENVPARAMETERDVARBPROC) loadFunction(\"glGetProgramEnvParameterdvARB\");\n    glGetProgramEnvParameterfvARB = (PFNGLGETPROGRAMENVPARAMETERFVARBPROC) loadFunction(\"glGetProgramEnvParameterfvARB\");\n    glGetProgramInfoLog = (PFNGLGETPROGRAMINFOLOGPROC) loadFunction(\"glGetProgramInfoLog\");\n    glGetProgramInterfaceiv = (PFNGLGETPROGRAMINTERFACEIVPROC) loadFunction(\"glGetProgramInterfaceiv\");\n    glGetProgramLocalParameterIivNV = (PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) loadFunction(\"glGetProgramLocalParameterIivNV\");\n    glGetProgramLocalParameterIuivNV = (PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) loadFunction(\"glGetProgramLocalParameterIuivNV\");\n    glGetProgramLocalParameterdvARB = (PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) loadFunction(\"glGetProgramLocalParameterdvARB\");\n    glGetProgramLocalParameterfvARB = (PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) loadFunction(\"glGetProgramLocalParameterfvARB\");\n    glGetProgramNamedParameterdvNV = (PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) loadFunction(\"glGetProgramNamedParameterdvNV\");\n    glGetProgramNamedParameterfvNV = (PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) loadFunction(\"glGetProgramNamedParameterfvNV\");\n    glGetProgramParameterdvNV = (PFNGLGETPROGRAMPARAMETERDVNVPROC) loadFunction(\"glGetProgramParameterdvNV\");\n    glGetProgramParameterfvNV = (PFNGLGETPROGRAMPARAMETERFVNVPROC) loadFunction(\"glGetProgramParameterfvNV\");\n    glGetProgramPipelineInfoLog = (PFNGLGETPROGRAMPIPELINEINFOLOGPROC) loadFunction(\"glGetProgramPipelineInfoLog\");\n    glGetProgramPipelineInfoLogEXT = (PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC) loadFunction(\"glGetProgramPipelineInfoLogEXT\");\n    glGetProgramPipelineiv = (PFNGLGETPROGRAMPIPELINEIVPROC) loadFunction(\"glGetProgramPipelineiv\");\n    glGetProgramPipelineivEXT = (PFNGLGETPROGRAMPIPELINEIVEXTPROC) loadFunction(\"glGetProgramPipelineivEXT\");\n    glGetProgramResourceIndex = (PFNGLGETPROGRAMRESOURCEINDEXPROC) loadFunction(\"glGetProgramResourceIndex\");\n    glGetProgramResourceLocation = (PFNGLGETPROGRAMRESOURCELOCATIONPROC) loadFunction(\"glGetProgramResourceLocation\");\n    glGetProgramResourceLocationIndex = (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) loadFunction(\"glGetProgramResourceLocationIndex\");\n    glGetProgramResourceName = (PFNGLGETPROGRAMRESOURCENAMEPROC) loadFunction(\"glGetProgramResourceName\");\n    glGetProgramResourcefvNV = (PFNGLGETPROGRAMRESOURCEFVNVPROC) loadFunction(\"glGetProgramResourcefvNV\");\n    glGetProgramResourceiv = (PFNGLGETPROGRAMRESOURCEIVPROC) loadFunction(\"glGetProgramResourceiv\");\n    glGetProgramStageiv = (PFNGLGETPROGRAMSTAGEIVPROC) loadFunction(\"glGetProgramStageiv\");\n    glGetProgramStringARB = (PFNGLGETPROGRAMSTRINGARBPROC) loadFunction(\"glGetProgramStringARB\");\n    glGetProgramStringNV = (PFNGLGETPROGRAMSTRINGNVPROC) loadFunction(\"glGetProgramStringNV\");\n    glGetProgramSubroutineParameteruivNV = (PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC) loadFunction(\"glGetProgramSubroutineParameteruivNV\");\n    glGetProgramiv = (PFNGLGETPROGRAMIVPROC) loadFunction(\"glGetProgramiv\");\n    glGetProgramivARB = (PFNGLGETPROGRAMIVARBPROC) loadFunction(\"glGetProgramivARB\");\n    glGetProgramivNV = (PFNGLGETPROGRAMIVNVPROC) loadFunction(\"glGetProgramivNV\");\n    glGetQueryBufferObjecti64v = (PFNGLGETQUERYBUFFEROBJECTI64VPROC) loadFunction(\"glGetQueryBufferObjecti64v\");\n    glGetQueryBufferObjectiv = (PFNGLGETQUERYBUFFEROBJECTIVPROC) loadFunction(\"glGetQueryBufferObjectiv\");\n    glGetQueryBufferObjectui64v = (PFNGLGETQUERYBUFFEROBJECTUI64VPROC) loadFunction(\"glGetQueryBufferObjectui64v\");\n    glGetQueryBufferObjectuiv = (PFNGLGETQUERYBUFFEROBJECTUIVPROC) loadFunction(\"glGetQueryBufferObjectuiv\");\n    glGetQueryIndexediv = (PFNGLGETQUERYINDEXEDIVPROC) loadFunction(\"glGetQueryIndexediv\");\n    glGetQueryObjecti64v = (PFNGLGETQUERYOBJECTI64VPROC) loadFunction(\"glGetQueryObjecti64v\");\n    glGetQueryObjecti64vEXT = (PFNGLGETQUERYOBJECTI64VEXTPROC) loadFunction(\"glGetQueryObjecti64vEXT\");\n    glGetQueryObjectiv = (PFNGLGETQUERYOBJECTIVPROC) loadFunction(\"glGetQueryObjectiv\");\n    glGetQueryObjectivARB = (PFNGLGETQUERYOBJECTIVARBPROC) loadFunction(\"glGetQueryObjectivARB\");\n    glGetQueryObjectui64v = (PFNGLGETQUERYOBJECTUI64VPROC) loadFunction(\"glGetQueryObjectui64v\");\n    glGetQueryObjectui64vEXT = (PFNGLGETQUERYOBJECTUI64VEXTPROC) loadFunction(\"glGetQueryObjectui64vEXT\");\n    glGetQueryObjectuiv = (PFNGLGETQUERYOBJECTUIVPROC) loadFunction(\"glGetQueryObjectuiv\");\n    glGetQueryObjectuivARB = (PFNGLGETQUERYOBJECTUIVARBPROC) loadFunction(\"glGetQueryObjectuivARB\");\n    glGetQueryiv = (PFNGLGETQUERYIVPROC) loadFunction(\"glGetQueryiv\");\n    glGetQueryivARB = (PFNGLGETQUERYIVARBPROC) loadFunction(\"glGetQueryivARB\");\n    glGetRenderbufferParameteriv = (PFNGLGETRENDERBUFFERPARAMETERIVPROC) loadFunction(\"glGetRenderbufferParameteriv\");\n    glGetRenderbufferParameterivEXT = (PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) loadFunction(\"glGetRenderbufferParameterivEXT\");\n    glGetSamplerParameterIiv = (PFNGLGETSAMPLERPARAMETERIIVPROC) loadFunction(\"glGetSamplerParameterIiv\");\n    glGetSamplerParameterIuiv = (PFNGLGETSAMPLERPARAMETERIUIVPROC) loadFunction(\"glGetSamplerParameterIuiv\");\n    glGetSamplerParameterfv = (PFNGLGETSAMPLERPARAMETERFVPROC) loadFunction(\"glGetSamplerParameterfv\");\n    glGetSamplerParameteriv = (PFNGLGETSAMPLERPARAMETERIVPROC) loadFunction(\"glGetSamplerParameteriv\");\n    glGetSemaphoreParameterui64vEXT = (PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC) loadFunction(\"glGetSemaphoreParameterui64vEXT\");\n    glGetSeparableFilter = (PFNGLGETSEPARABLEFILTERPROC) loadFunction(\"glGetSeparableFilter\");\n    glGetSeparableFilterEXT = (PFNGLGETSEPARABLEFILTEREXTPROC) loadFunction(\"glGetSeparableFilterEXT\");\n    glGetShaderInfoLog = (PFNGLGETSHADERINFOLOGPROC) loadFunction(\"glGetShaderInfoLog\");\n    glGetShaderPrecisionFormat = (PFNGLGETSHADERPRECISIONFORMATPROC) loadFunction(\"glGetShaderPrecisionFormat\");\n    glGetShaderSource = (PFNGLGETSHADERSOURCEPROC) loadFunction(\"glGetShaderSource\");\n    glGetShaderSourceARB = (PFNGLGETSHADERSOURCEARBPROC) loadFunction(\"glGetShaderSourceARB\");\n    glGetShaderiv = (PFNGLGETSHADERIVPROC) loadFunction(\"glGetShaderiv\");\n    glGetShadingRateImagePaletteNV = (PFNGLGETSHADINGRATEIMAGEPALETTENVPROC) loadFunction(\"glGetShadingRateImagePaletteNV\");\n    glGetShadingRateSampleLocationivNV = (PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC) loadFunction(\"glGetShadingRateSampleLocationivNV\");\n    glGetStageIndexNV = (PFNGLGETSTAGEINDEXNVPROC) loadFunction(\"glGetStageIndexNV\");\n    glGetString = (PFNGLGETSTRINGPROC) loadFunction(\"glGetString\");\n    glGetStringi = (PFNGLGETSTRINGIPROC) loadFunction(\"glGetStringi\");\n    glGetSubroutineIndex = (PFNGLGETSUBROUTINEINDEXPROC) loadFunction(\"glGetSubroutineIndex\");\n    glGetSubroutineUniformLocation = (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) loadFunction(\"glGetSubroutineUniformLocation\");\n    glGetSynciv = (PFNGLGETSYNCIVPROC) loadFunction(\"glGetSynciv\");\n    glGetTexEnvfv = (PFNGLGETTEXENVFVPROC) loadFunction(\"glGetTexEnvfv\");\n    glGetTexEnviv = (PFNGLGETTEXENVIVPROC) loadFunction(\"glGetTexEnviv\");\n    glGetTexGendv = (PFNGLGETTEXGENDVPROC) loadFunction(\"glGetTexGendv\");\n    glGetTexGenfv = (PFNGLGETTEXGENFVPROC) loadFunction(\"glGetTexGenfv\");\n    glGetTexGeniv = (PFNGLGETTEXGENIVPROC) loadFunction(\"glGetTexGeniv\");\n    glGetTexImage = (PFNGLGETTEXIMAGEPROC) loadFunction(\"glGetTexImage\");\n    glGetTexLevelParameterfv = (PFNGLGETTEXLEVELPARAMETERFVPROC) loadFunction(\"glGetTexLevelParameterfv\");\n    glGetTexLevelParameteriv = (PFNGLGETTEXLEVELPARAMETERIVPROC) loadFunction(\"glGetTexLevelParameteriv\");\n    glGetTexParameterIiv = (PFNGLGETTEXPARAMETERIIVPROC) loadFunction(\"glGetTexParameterIiv\");\n    glGetTexParameterIivEXT = (PFNGLGETTEXPARAMETERIIVEXTPROC) loadFunction(\"glGetTexParameterIivEXT\");\n    glGetTexParameterIuiv = (PFNGLGETTEXPARAMETERIUIVPROC) loadFunction(\"glGetTexParameterIuiv\");\n    glGetTexParameterIuivEXT = (PFNGLGETTEXPARAMETERIUIVEXTPROC) loadFunction(\"glGetTexParameterIuivEXT\");\n    glGetTexParameterPointervAPPLE = (PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) loadFunction(\"glGetTexParameterPointervAPPLE\");\n    glGetTexParameterfv = (PFNGLGETTEXPARAMETERFVPROC) loadFunction(\"glGetTexParameterfv\");\n    glGetTexParameteriv = (PFNGLGETTEXPARAMETERIVPROC) loadFunction(\"glGetTexParameteriv\");\n    glGetTextureHandleARB = (PFNGLGETTEXTUREHANDLEARBPROC) loadFunction(\"glGetTextureHandleARB\");\n    glGetTextureHandleNV = (PFNGLGETTEXTUREHANDLENVPROC) loadFunction(\"glGetTextureHandleNV\");\n    glGetTextureImage = (PFNGLGETTEXTUREIMAGEPROC) loadFunction(\"glGetTextureImage\");\n    glGetTextureImageEXT = (PFNGLGETTEXTUREIMAGEEXTPROC) loadFunction(\"glGetTextureImageEXT\");\n    glGetTextureLevelParameterfv = (PFNGLGETTEXTURELEVELPARAMETERFVPROC) loadFunction(\"glGetTextureLevelParameterfv\");\n    glGetTextureLevelParameterfvEXT = (PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) loadFunction(\"glGetTextureLevelParameterfvEXT\");\n    glGetTextureLevelParameteriv = (PFNGLGETTEXTURELEVELPARAMETERIVPROC) loadFunction(\"glGetTextureLevelParameteriv\");\n    glGetTextureLevelParameterivEXT = (PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) loadFunction(\"glGetTextureLevelParameterivEXT\");\n    glGetTextureParameterIiv = (PFNGLGETTEXTUREPARAMETERIIVPROC) loadFunction(\"glGetTextureParameterIiv\");\n    glGetTextureParameterIivEXT = (PFNGLGETTEXTUREPARAMETERIIVEXTPROC) loadFunction(\"glGetTextureParameterIivEXT\");\n    glGetTextureParameterIuiv = (PFNGLGETTEXTUREPARAMETERIUIVPROC) loadFunction(\"glGetTextureParameterIuiv\");\n    glGetTextureParameterIuivEXT = (PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) loadFunction(\"glGetTextureParameterIuivEXT\");\n    glGetTextureParameterfv = (PFNGLGETTEXTUREPARAMETERFVPROC) loadFunction(\"glGetTextureParameterfv\");\n    glGetTextureParameterfvEXT = (PFNGLGETTEXTUREPARAMETERFVEXTPROC) loadFunction(\"glGetTextureParameterfvEXT\");\n    glGetTextureParameteriv = (PFNGLGETTEXTUREPARAMETERIVPROC) loadFunction(\"glGetTextureParameteriv\");\n    glGetTextureParameterivEXT = (PFNGLGETTEXTUREPARAMETERIVEXTPROC) loadFunction(\"glGetTextureParameterivEXT\");\n    glGetTextureSamplerHandleARB = (PFNGLGETTEXTURESAMPLERHANDLEARBPROC) loadFunction(\"glGetTextureSamplerHandleARB\");\n    glGetTextureSamplerHandleNV = (PFNGLGETTEXTURESAMPLERHANDLENVPROC) loadFunction(\"glGetTextureSamplerHandleNV\");\n    glGetTextureSubImage = (PFNGLGETTEXTURESUBIMAGEPROC) loadFunction(\"glGetTextureSubImage\");\n    glGetTrackMatrixivNV = (PFNGLGETTRACKMATRIXIVNVPROC) loadFunction(\"glGetTrackMatrixivNV\");\n    glGetTransformFeedbackVarying = (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) loadFunction(\"glGetTransformFeedbackVarying\");\n    glGetTransformFeedbackVaryingEXT = (PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) loadFunction(\"glGetTransformFeedbackVaryingEXT\");\n    glGetTransformFeedbackVaryingNV = (PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) loadFunction(\"glGetTransformFeedbackVaryingNV\");\n    glGetTransformFeedbacki64_v = (PFNGLGETTRANSFORMFEEDBACKI64_VPROC) loadFunction(\"glGetTransformFeedbacki64_v\");\n    glGetTransformFeedbacki_v = (PFNGLGETTRANSFORMFEEDBACKI_VPROC) loadFunction(\"glGetTransformFeedbacki_v\");\n    glGetTransformFeedbackiv = (PFNGLGETTRANSFORMFEEDBACKIVPROC) loadFunction(\"glGetTransformFeedbackiv\");\n    glGetUniformBlockIndex = (PFNGLGETUNIFORMBLOCKINDEXPROC) loadFunction(\"glGetUniformBlockIndex\");\n    glGetUniformBufferSizeEXT = (PFNGLGETUNIFORMBUFFERSIZEEXTPROC) loadFunction(\"glGetUniformBufferSizeEXT\");\n    glGetUniformIndices = (PFNGLGETUNIFORMINDICESPROC) loadFunction(\"glGetUniformIndices\");\n    glGetUniformLocation = (PFNGLGETUNIFORMLOCATIONPROC) loadFunction(\"glGetUniformLocation\");\n    glGetUniformLocationARB = (PFNGLGETUNIFORMLOCATIONARBPROC) loadFunction(\"glGetUniformLocationARB\");\n    glGetUniformOffsetEXT = (PFNGLGETUNIFORMOFFSETEXTPROC) loadFunction(\"glGetUniformOffsetEXT\");\n    glGetUniformSubroutineuiv = (PFNGLGETUNIFORMSUBROUTINEUIVPROC) loadFunction(\"glGetUniformSubroutineuiv\");\n    glGetUniformdv = (PFNGLGETUNIFORMDVPROC) loadFunction(\"glGetUniformdv\");\n    glGetUniformfv = (PFNGLGETUNIFORMFVPROC) loadFunction(\"glGetUniformfv\");\n    glGetUniformfvARB = (PFNGLGETUNIFORMFVARBPROC) loadFunction(\"glGetUniformfvARB\");\n    glGetUniformi64vARB = (PFNGLGETUNIFORMI64VARBPROC) loadFunction(\"glGetUniformi64vARB\");\n    glGetUniformi64vNV = (PFNGLGETUNIFORMI64VNVPROC) loadFunction(\"glGetUniformi64vNV\");\n    glGetUniformiv = (PFNGLGETUNIFORMIVPROC) loadFunction(\"glGetUniformiv\");\n    glGetUniformivARB = (PFNGLGETUNIFORMIVARBPROC) loadFunction(\"glGetUniformivARB\");\n    glGetUniformui64vARB = (PFNGLGETUNIFORMUI64VARBPROC) loadFunction(\"glGetUniformui64vARB\");\n    glGetUniformui64vNV = (PFNGLGETUNIFORMUI64VNVPROC) loadFunction(\"glGetUniformui64vNV\");\n    glGetUniformuiv = (PFNGLGETUNIFORMUIVPROC) loadFunction(\"glGetUniformuiv\");\n    glGetUniformuivEXT = (PFNGLGETUNIFORMUIVEXTPROC) loadFunction(\"glGetUniformuivEXT\");\n    glGetUnsignedBytevEXT = (PFNGLGETUNSIGNEDBYTEVEXTPROC) loadFunction(\"glGetUnsignedBytevEXT\");\n    glGetUnsignedBytei_vEXT = (PFNGLGETUNSIGNEDBYTEI_VEXTPROC) loadFunction(\"glGetUnsignedBytei_vEXT\");\n    glGetVariantBooleanvEXT = (PFNGLGETVARIANTBOOLEANVEXTPROC) loadFunction(\"glGetVariantBooleanvEXT\");\n    glGetVariantFloatvEXT = (PFNGLGETVARIANTFLOATVEXTPROC) loadFunction(\"glGetVariantFloatvEXT\");\n    glGetVariantIntegervEXT = (PFNGLGETVARIANTINTEGERVEXTPROC) loadFunction(\"glGetVariantIntegervEXT\");\n    glGetVariantPointervEXT = (PFNGLGETVARIANTPOINTERVEXTPROC) loadFunction(\"glGetVariantPointervEXT\");\n    glGetVaryingLocationNV = (PFNGLGETVARYINGLOCATIONNVPROC) loadFunction(\"glGetVaryingLocationNV\");\n    glGetVertexArrayIndexed64iv = (PFNGLGETVERTEXARRAYINDEXED64IVPROC) loadFunction(\"glGetVertexArrayIndexed64iv\");\n    glGetVertexArrayIndexediv = (PFNGLGETVERTEXARRAYINDEXEDIVPROC) loadFunction(\"glGetVertexArrayIndexediv\");\n    glGetVertexArrayIntegeri_vEXT = (PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) loadFunction(\"glGetVertexArrayIntegeri_vEXT\");\n    glGetVertexArrayIntegervEXT = (PFNGLGETVERTEXARRAYINTEGERVEXTPROC) loadFunction(\"glGetVertexArrayIntegervEXT\");\n    glGetVertexArrayPointeri_vEXT = (PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) loadFunction(\"glGetVertexArrayPointeri_vEXT\");\n    glGetVertexArrayPointervEXT = (PFNGLGETVERTEXARRAYPOINTERVEXTPROC) loadFunction(\"glGetVertexArrayPointervEXT\");\n    glGetVertexArrayiv = (PFNGLGETVERTEXARRAYIVPROC) loadFunction(\"glGetVertexArrayiv\");\n    glGetVertexAttribIiv = (PFNGLGETVERTEXATTRIBIIVPROC) loadFunction(\"glGetVertexAttribIiv\");\n    glGetVertexAttribIivEXT = (PFNGLGETVERTEXATTRIBIIVEXTPROC) loadFunction(\"glGetVertexAttribIivEXT\");\n    glGetVertexAttribIuiv = (PFNGLGETVERTEXATTRIBIUIVPROC) loadFunction(\"glGetVertexAttribIuiv\");\n    glGetVertexAttribIuivEXT = (PFNGLGETVERTEXATTRIBIUIVEXTPROC) loadFunction(\"glGetVertexAttribIuivEXT\");\n    glGetVertexAttribLdv = (PFNGLGETVERTEXATTRIBLDVPROC) loadFunction(\"glGetVertexAttribLdv\");\n    glGetVertexAttribLdvEXT = (PFNGLGETVERTEXATTRIBLDVEXTPROC) loadFunction(\"glGetVertexAttribLdvEXT\");\n    glGetVertexAttribLi64vNV = (PFNGLGETVERTEXATTRIBLI64VNVPROC) loadFunction(\"glGetVertexAttribLi64vNV\");\n    glGetVertexAttribLui64vARB = (PFNGLGETVERTEXATTRIBLUI64VARBPROC) loadFunction(\"glGetVertexAttribLui64vARB\");\n    glGetVertexAttribLui64vNV = (PFNGLGETVERTEXATTRIBLUI64VNVPROC) loadFunction(\"glGetVertexAttribLui64vNV\");\n    glGetVertexAttribPointerv = (PFNGLGETVERTEXATTRIBPOINTERVPROC) loadFunction(\"glGetVertexAttribPointerv\");\n    glGetVertexAttribPointervARB = (PFNGLGETVERTEXATTRIBPOINTERVARBPROC) loadFunction(\"glGetVertexAttribPointervARB\");\n    glGetVertexAttribPointervNV = (PFNGLGETVERTEXATTRIBPOINTERVNVPROC) loadFunction(\"glGetVertexAttribPointervNV\");\n    glGetVertexAttribdv = (PFNGLGETVERTEXATTRIBDVPROC) loadFunction(\"glGetVertexAttribdv\");\n    glGetVertexAttribdvARB = (PFNGLGETVERTEXATTRIBDVARBPROC) loadFunction(\"glGetVertexAttribdvARB\");\n    glGetVertexAttribdvNV = (PFNGLGETVERTEXATTRIBDVNVPROC) loadFunction(\"glGetVertexAttribdvNV\");\n    glGetVertexAttribfv = (PFNGLGETVERTEXATTRIBFVPROC) loadFunction(\"glGetVertexAttribfv\");\n    glGetVertexAttribfvARB = (PFNGLGETVERTEXATTRIBFVARBPROC) loadFunction(\"glGetVertexAttribfvARB\");\n    glGetVertexAttribfvNV = (PFNGLGETVERTEXATTRIBFVNVPROC) loadFunction(\"glGetVertexAttribfvNV\");\n    glGetVertexAttribiv = (PFNGLGETVERTEXATTRIBIVPROC) loadFunction(\"glGetVertexAttribiv\");\n    glGetVertexAttribivARB = (PFNGLGETVERTEXATTRIBIVARBPROC) loadFunction(\"glGetVertexAttribivARB\");\n    glGetVertexAttribivNV = (PFNGLGETVERTEXATTRIBIVNVPROC) loadFunction(\"glGetVertexAttribivNV\");\n    glGetVideoCaptureStreamdvNV = (PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) loadFunction(\"glGetVideoCaptureStreamdvNV\");\n    glGetVideoCaptureStreamfvNV = (PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) loadFunction(\"glGetVideoCaptureStreamfvNV\");\n    glGetVideoCaptureStreamivNV = (PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) loadFunction(\"glGetVideoCaptureStreamivNV\");\n    glGetVideoCaptureivNV = (PFNGLGETVIDEOCAPTUREIVNVPROC) loadFunction(\"glGetVideoCaptureivNV\");\n    glGetVideoi64vNV = (PFNGLGETVIDEOI64VNVPROC) loadFunction(\"glGetVideoi64vNV\");\n    glGetVideoivNV = (PFNGLGETVIDEOIVNVPROC) loadFunction(\"glGetVideoivNV\");\n    glGetVideoui64vNV = (PFNGLGETVIDEOUI64VNVPROC) loadFunction(\"glGetVideoui64vNV\");\n    glGetVideouivNV = (PFNGLGETVIDEOUIVNVPROC) loadFunction(\"glGetVideouivNV\");\n    glGetnColorTable = (PFNGLGETNCOLORTABLEPROC) loadFunction(\"glGetnColorTable\");\n    glGetnColorTableARB = (PFNGLGETNCOLORTABLEARBPROC) loadFunction(\"glGetnColorTableARB\");\n    glGetnCompressedTexImage = (PFNGLGETNCOMPRESSEDTEXIMAGEPROC) loadFunction(\"glGetnCompressedTexImage\");\n    glGetnCompressedTexImageARB = (PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) loadFunction(\"glGetnCompressedTexImageARB\");\n    glGetnConvolutionFilter = (PFNGLGETNCONVOLUTIONFILTERPROC) loadFunction(\"glGetnConvolutionFilter\");\n    glGetnConvolutionFilterARB = (PFNGLGETNCONVOLUTIONFILTERARBPROC) loadFunction(\"glGetnConvolutionFilterARB\");\n    glGetnHistogram = (PFNGLGETNHISTOGRAMPROC) loadFunction(\"glGetnHistogram\");\n    glGetnHistogramARB = (PFNGLGETNHISTOGRAMARBPROC) loadFunction(\"glGetnHistogramARB\");\n    glGetnMapdv = (PFNGLGETNMAPDVPROC) loadFunction(\"glGetnMapdv\");\n    glGetnMapdvARB = (PFNGLGETNMAPDVARBPROC) loadFunction(\"glGetnMapdvARB\");\n    glGetnMapfv = (PFNGLGETNMAPFVPROC) loadFunction(\"glGetnMapfv\");\n    glGetnMapfvARB = (PFNGLGETNMAPFVARBPROC) loadFunction(\"glGetnMapfvARB\");\n    glGetnMapiv = (PFNGLGETNMAPIVPROC) loadFunction(\"glGetnMapiv\");\n    glGetnMapivARB = (PFNGLGETNMAPIVARBPROC) loadFunction(\"glGetnMapivARB\");\n    glGetnMinmax = (PFNGLGETNMINMAXPROC) loadFunction(\"glGetnMinmax\");\n    glGetnMinmaxARB = (PFNGLGETNMINMAXARBPROC) loadFunction(\"glGetnMinmaxARB\");\n    glGetnPixelMapfv = (PFNGLGETNPIXELMAPFVPROC) loadFunction(\"glGetnPixelMapfv\");\n    glGetnPixelMapfvARB = (PFNGLGETNPIXELMAPFVARBPROC) loadFunction(\"glGetnPixelMapfvARB\");\n    glGetnPixelMapuiv = (PFNGLGETNPIXELMAPUIVPROC) loadFunction(\"glGetnPixelMapuiv\");\n    glGetnPixelMapuivARB = (PFNGLGETNPIXELMAPUIVARBPROC) loadFunction(\"glGetnPixelMapuivARB\");\n    glGetnPixelMapusv = (PFNGLGETNPIXELMAPUSVPROC) loadFunction(\"glGetnPixelMapusv\");\n    glGetnPixelMapusvARB = (PFNGLGETNPIXELMAPUSVARBPROC) loadFunction(\"glGetnPixelMapusvARB\");\n    glGetnPolygonStipple = (PFNGLGETNPOLYGONSTIPPLEPROC) loadFunction(\"glGetnPolygonStipple\");\n    glGetnPolygonStippleARB = (PFNGLGETNPOLYGONSTIPPLEARBPROC) loadFunction(\"glGetnPolygonStippleARB\");\n    glGetnSeparableFilter = (PFNGLGETNSEPARABLEFILTERPROC) loadFunction(\"glGetnSeparableFilter\");\n    glGetnSeparableFilterARB = (PFNGLGETNSEPARABLEFILTERARBPROC) loadFunction(\"glGetnSeparableFilterARB\");\n    glGetnTexImage = (PFNGLGETNTEXIMAGEPROC) loadFunction(\"glGetnTexImage\");\n    glGetnTexImageARB = (PFNGLGETNTEXIMAGEARBPROC) loadFunction(\"glGetnTexImageARB\");\n    glGetnUniformdv = (PFNGLGETNUNIFORMDVPROC) loadFunction(\"glGetnUniformdv\");\n    glGetnUniformdvARB = (PFNGLGETNUNIFORMDVARBPROC) loadFunction(\"glGetnUniformdvARB\");\n    glGetnUniformfv = (PFNGLGETNUNIFORMFVPROC) loadFunction(\"glGetnUniformfv\");\n    glGetnUniformfvARB = (PFNGLGETNUNIFORMFVARBPROC) loadFunction(\"glGetnUniformfvARB\");\n    glGetnUniformfvKHR = (PFNGLGETNUNIFORMFVKHRPROC) loadFunction(\"glGetnUniformfvKHR\");\n    glGetnUniformi64vARB = (PFNGLGETNUNIFORMI64VARBPROC) loadFunction(\"glGetnUniformi64vARB\");\n    glGetnUniformiv = (PFNGLGETNUNIFORMIVPROC) loadFunction(\"glGetnUniformiv\");\n    glGetnUniformivARB = (PFNGLGETNUNIFORMIVARBPROC) loadFunction(\"glGetnUniformivARB\");\n    glGetnUniformivKHR = (PFNGLGETNUNIFORMIVKHRPROC) loadFunction(\"glGetnUniformivKHR\");\n    glGetnUniformui64vARB = (PFNGLGETNUNIFORMUI64VARBPROC) loadFunction(\"glGetnUniformui64vARB\");\n    glGetnUniformuiv = (PFNGLGETNUNIFORMUIVPROC) loadFunction(\"glGetnUniformuiv\");\n    glGetnUniformuivARB = (PFNGLGETNUNIFORMUIVARBPROC) loadFunction(\"glGetnUniformuivARB\");\n    glGetnUniformuivKHR = (PFNGLGETNUNIFORMUIVKHRPROC) loadFunction(\"glGetnUniformuivKHR\");\n    glHint = (PFNGLHINTPROC) loadFunction(\"glHint\");\n    glHistogram = (PFNGLHISTOGRAMPROC) loadFunction(\"glHistogram\");\n    glHistogramEXT = (PFNGLHISTOGRAMEXTPROC) loadFunction(\"glHistogramEXT\");\n    glImportMemoryFdEXT = (PFNGLIMPORTMEMORYFDEXTPROC) loadFunction(\"glImportMemoryFdEXT\");\n    glImportMemoryWin32HandleEXT = (PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC) loadFunction(\"glImportMemoryWin32HandleEXT\");\n    glImportMemoryWin32NameEXT = (PFNGLIMPORTMEMORYWIN32NAMEEXTPROC) loadFunction(\"glImportMemoryWin32NameEXT\");\n    glImportSemaphoreFdEXT = (PFNGLIMPORTSEMAPHOREFDEXTPROC) loadFunction(\"glImportSemaphoreFdEXT\");\n    glImportSemaphoreWin32HandleEXT = (PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC) loadFunction(\"glImportSemaphoreWin32HandleEXT\");\n    glImportSemaphoreWin32NameEXT = (PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC) loadFunction(\"glImportSemaphoreWin32NameEXT\");\n    glImportSyncEXT = (PFNGLIMPORTSYNCEXTPROC) loadFunction(\"glImportSyncEXT\");\n    glIndexFormatNV = (PFNGLINDEXFORMATNVPROC) loadFunction(\"glIndexFormatNV\");\n    glIndexFuncEXT = (PFNGLINDEXFUNCEXTPROC) loadFunction(\"glIndexFuncEXT\");\n    glIndexMask = (PFNGLINDEXMASKPROC) loadFunction(\"glIndexMask\");\n    glIndexMaterialEXT = (PFNGLINDEXMATERIALEXTPROC) loadFunction(\"glIndexMaterialEXT\");\n    glIndexPointer = (PFNGLINDEXPOINTERPROC) loadFunction(\"glIndexPointer\");\n    glIndexPointerEXT = (PFNGLINDEXPOINTEREXTPROC) loadFunction(\"glIndexPointerEXT\");\n    glIndexd = (PFNGLINDEXDPROC) loadFunction(\"glIndexd\");\n    glIndexdv = (PFNGLINDEXDVPROC) loadFunction(\"glIndexdv\");\n    glIndexf = (PFNGLINDEXFPROC) loadFunction(\"glIndexf\");\n    glIndexfv = (PFNGLINDEXFVPROC) loadFunction(\"glIndexfv\");\n    glIndexi = (PFNGLINDEXIPROC) loadFunction(\"glIndexi\");\n    glIndexiv = (PFNGLINDEXIVPROC) loadFunction(\"glIndexiv\");\n    glIndexs = (PFNGLINDEXSPROC) loadFunction(\"glIndexs\");\n    glIndexsv = (PFNGLINDEXSVPROC) loadFunction(\"glIndexsv\");\n    glIndexub = (PFNGLINDEXUBPROC) loadFunction(\"glIndexub\");\n    glIndexubv = (PFNGLINDEXUBVPROC) loadFunction(\"glIndexubv\");\n    glInitNames = (PFNGLINITNAMESPROC) loadFunction(\"glInitNames\");\n    glInsertComponentEXT = (PFNGLINSERTCOMPONENTEXTPROC) loadFunction(\"glInsertComponentEXT\");\n    glInsertEventMarkerEXT = (PFNGLINSERTEVENTMARKEREXTPROC) loadFunction(\"glInsertEventMarkerEXT\");\n    glInterleavedArrays = (PFNGLINTERLEAVEDARRAYSPROC) loadFunction(\"glInterleavedArrays\");\n    glInterpolatePathsNV = (PFNGLINTERPOLATEPATHSNVPROC) loadFunction(\"glInterpolatePathsNV\");\n    glInvalidateBufferData = (PFNGLINVALIDATEBUFFERDATAPROC) loadFunction(\"glInvalidateBufferData\");\n    glInvalidateBufferSubData = (PFNGLINVALIDATEBUFFERSUBDATAPROC) loadFunction(\"glInvalidateBufferSubData\");\n    glInvalidateFramebuffer = (PFNGLINVALIDATEFRAMEBUFFERPROC) loadFunction(\"glInvalidateFramebuffer\");\n    glInvalidateNamedFramebufferData = (PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) loadFunction(\"glInvalidateNamedFramebufferData\");\n    glInvalidateNamedFramebufferSubData = (PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) loadFunction(\"glInvalidateNamedFramebufferSubData\");\n    glInvalidateSubFramebuffer = (PFNGLINVALIDATESUBFRAMEBUFFERPROC) loadFunction(\"glInvalidateSubFramebuffer\");\n    glInvalidateTexImage = (PFNGLINVALIDATETEXIMAGEPROC) loadFunction(\"glInvalidateTexImage\");\n    glInvalidateTexSubImage = (PFNGLINVALIDATETEXSUBIMAGEPROC) loadFunction(\"glInvalidateTexSubImage\");\n    glIsBuffer = (PFNGLISBUFFERPROC) loadFunction(\"glIsBuffer\");\n    glIsBufferARB = (PFNGLISBUFFERARBPROC) loadFunction(\"glIsBufferARB\");\n    glIsBufferResidentNV = (PFNGLISBUFFERRESIDENTNVPROC) loadFunction(\"glIsBufferResidentNV\");\n    glIsCommandListNV = (PFNGLISCOMMANDLISTNVPROC) loadFunction(\"glIsCommandListNV\");\n    glIsEnabled = (PFNGLISENABLEDPROC) loadFunction(\"glIsEnabled\");\n    glIsEnabledIndexedEXT = (PFNGLISENABLEDINDEXEDEXTPROC) loadFunction(\"glIsEnabledIndexedEXT\");\n    glIsEnabledi = (PFNGLISENABLEDIPROC) loadFunction(\"glIsEnabledi\");\n    glIsFenceAPPLE = (PFNGLISFENCEAPPLEPROC) loadFunction(\"glIsFenceAPPLE\");\n    glIsFenceNV = (PFNGLISFENCENVPROC) loadFunction(\"glIsFenceNV\");\n    glIsFramebuffer = (PFNGLISFRAMEBUFFERPROC) loadFunction(\"glIsFramebuffer\");\n    glIsFramebufferEXT = (PFNGLISFRAMEBUFFEREXTPROC) loadFunction(\"glIsFramebufferEXT\");\n    glIsImageHandleResidentARB = (PFNGLISIMAGEHANDLERESIDENTARBPROC) loadFunction(\"glIsImageHandleResidentARB\");\n    glIsImageHandleResidentNV = (PFNGLISIMAGEHANDLERESIDENTNVPROC) loadFunction(\"glIsImageHandleResidentNV\");\n    glIsList = (PFNGLISLISTPROC) loadFunction(\"glIsList\");\n    glIsMemoryObjectEXT = (PFNGLISMEMORYOBJECTEXTPROC) loadFunction(\"glIsMemoryObjectEXT\");\n    glIsNameAMD = (PFNGLISNAMEAMDPROC) loadFunction(\"glIsNameAMD\");\n    glIsNamedBufferResidentNV = (PFNGLISNAMEDBUFFERRESIDENTNVPROC) loadFunction(\"glIsNamedBufferResidentNV\");\n    glIsNamedStringARB = (PFNGLISNAMEDSTRINGARBPROC) loadFunction(\"glIsNamedStringARB\");\n    glIsOcclusionQueryNV = (PFNGLISOCCLUSIONQUERYNVPROC) loadFunction(\"glIsOcclusionQueryNV\");\n    glIsPathNV = (PFNGLISPATHNVPROC) loadFunction(\"glIsPathNV\");\n    glIsPointInFillPathNV = (PFNGLISPOINTINFILLPATHNVPROC) loadFunction(\"glIsPointInFillPathNV\");\n    glIsPointInStrokePathNV = (PFNGLISPOINTINSTROKEPATHNVPROC) loadFunction(\"glIsPointInStrokePathNV\");\n    glIsProgram = (PFNGLISPROGRAMPROC) loadFunction(\"glIsProgram\");\n    glIsProgramARB = (PFNGLISPROGRAMARBPROC) loadFunction(\"glIsProgramARB\");\n    glIsProgramNV = (PFNGLISPROGRAMNVPROC) loadFunction(\"glIsProgramNV\");\n    glIsProgramPipeline = (PFNGLISPROGRAMPIPELINEPROC) loadFunction(\"glIsProgramPipeline\");\n    glIsProgramPipelineEXT = (PFNGLISPROGRAMPIPELINEEXTPROC) loadFunction(\"glIsProgramPipelineEXT\");\n    glIsQuery = (PFNGLISQUERYPROC) loadFunction(\"glIsQuery\");\n    glIsQueryARB = (PFNGLISQUERYARBPROC) loadFunction(\"glIsQueryARB\");\n    glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC) loadFunction(\"glIsRenderbuffer\");\n    glIsRenderbufferEXT = (PFNGLISRENDERBUFFEREXTPROC) loadFunction(\"glIsRenderbufferEXT\");\n    glIsSemaphoreEXT = (PFNGLISSEMAPHOREEXTPROC) loadFunction(\"glIsSemaphoreEXT\");\n    glIsSampler = (PFNGLISSAMPLERPROC) loadFunction(\"glIsSampler\");\n    glIsShader = (PFNGLISSHADERPROC) loadFunction(\"glIsShader\");\n    glIsStateNV = (PFNGLISSTATENVPROC) loadFunction(\"glIsStateNV\");\n    glIsSync = (PFNGLISSYNCPROC) loadFunction(\"glIsSync\");\n    glIsTexture = (PFNGLISTEXTUREPROC) loadFunction(\"glIsTexture\");\n    glIsTextureEXT = (PFNGLISTEXTUREEXTPROC) loadFunction(\"glIsTextureEXT\");\n    glIsTextureHandleResidentARB = (PFNGLISTEXTUREHANDLERESIDENTARBPROC) loadFunction(\"glIsTextureHandleResidentARB\");\n    glIsTextureHandleResidentNV = (PFNGLISTEXTUREHANDLERESIDENTNVPROC) loadFunction(\"glIsTextureHandleResidentNV\");\n    glIsTransformFeedback = (PFNGLISTRANSFORMFEEDBACKPROC) loadFunction(\"glIsTransformFeedback\");\n    glIsTransformFeedbackNV = (PFNGLISTRANSFORMFEEDBACKNVPROC) loadFunction(\"glIsTransformFeedbackNV\");\n    glIsVariantEnabledEXT = (PFNGLISVARIANTENABLEDEXTPROC) loadFunction(\"glIsVariantEnabledEXT\");\n    glIsVertexArray = (PFNGLISVERTEXARRAYPROC) loadFunction(\"glIsVertexArray\");\n    glIsVertexArrayAPPLE = (PFNGLISVERTEXARRAYAPPLEPROC) loadFunction(\"glIsVertexArrayAPPLE\");\n    glIsVertexAttribEnabledAPPLE = (PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) loadFunction(\"glIsVertexAttribEnabledAPPLE\");\n    glLabelObjectEXT = (PFNGLLABELOBJECTEXTPROC) loadFunction(\"glLabelObjectEXT\");\n    glLightModelf = (PFNGLLIGHTMODELFPROC) loadFunction(\"glLightModelf\");\n    glLightModelfv = (PFNGLLIGHTMODELFVPROC) loadFunction(\"glLightModelfv\");\n    glLightModeli = (PFNGLLIGHTMODELIPROC) loadFunction(\"glLightModeli\");\n    glLightModeliv = (PFNGLLIGHTMODELIVPROC) loadFunction(\"glLightModeliv\");\n    glLightf = (PFNGLLIGHTFPROC) loadFunction(\"glLightf\");\n    glLightfv = (PFNGLLIGHTFVPROC) loadFunction(\"glLightfv\");\n    glLighti = (PFNGLLIGHTIPROC) loadFunction(\"glLighti\");\n    glLightiv = (PFNGLLIGHTIVPROC) loadFunction(\"glLightiv\");\n    glLineStipple = (PFNGLLINESTIPPLEPROC) loadFunction(\"glLineStipple\");\n    glLineWidth = (PFNGLLINEWIDTHPROC) loadFunction(\"glLineWidth\");\n    glLinkProgram = (PFNGLLINKPROGRAMPROC) loadFunction(\"glLinkProgram\");\n    glLinkProgramARB = (PFNGLLINKPROGRAMARBPROC) loadFunction(\"glLinkProgramARB\");\n    glListBase = (PFNGLLISTBASEPROC) loadFunction(\"glListBase\");\n    glListDrawCommandsStatesClientNV = (PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC) loadFunction(\"glListDrawCommandsStatesClientNV\");\n    glLoadIdentity = (PFNGLLOADIDENTITYPROC) loadFunction(\"glLoadIdentity\");\n    glLoadMatrixd = (PFNGLLOADMATRIXDPROC) loadFunction(\"glLoadMatrixd\");\n    glLoadMatrixf = (PFNGLLOADMATRIXFPROC) loadFunction(\"glLoadMatrixf\");\n    glLoadName = (PFNGLLOADNAMEPROC) loadFunction(\"glLoadName\");\n    glLoadProgramNV = (PFNGLLOADPROGRAMNVPROC) loadFunction(\"glLoadProgramNV\");\n    glLoadTransposeMatrixd = (PFNGLLOADTRANSPOSEMATRIXDPROC) loadFunction(\"glLoadTransposeMatrixd\");\n    glLoadTransposeMatrixdARB = (PFNGLLOADTRANSPOSEMATRIXDARBPROC) loadFunction(\"glLoadTransposeMatrixdARB\");\n    glLoadTransposeMatrixf = (PFNGLLOADTRANSPOSEMATRIXFPROC) loadFunction(\"glLoadTransposeMatrixf\");\n    glLoadTransposeMatrixfARB = (PFNGLLOADTRANSPOSEMATRIXFARBPROC) loadFunction(\"glLoadTransposeMatrixfARB\");\n    glLockArraysEXT = (PFNGLLOCKARRAYSEXTPROC) loadFunction(\"glLockArraysEXT\");\n    glLogicOp = (PFNGLLOGICOPPROC) loadFunction(\"glLogicOp\");\n    glMakeBufferNonResidentNV = (PFNGLMAKEBUFFERNONRESIDENTNVPROC) loadFunction(\"glMakeBufferNonResidentNV\");\n    glMakeBufferResidentNV = (PFNGLMAKEBUFFERRESIDENTNVPROC) loadFunction(\"glMakeBufferResidentNV\");\n    glMakeImageHandleNonResidentARB = (PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) loadFunction(\"glMakeImageHandleNonResidentARB\");\n    glMakeImageHandleNonResidentNV = (PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) loadFunction(\"glMakeImageHandleNonResidentNV\");\n    glMakeImageHandleResidentARB = (PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) loadFunction(\"glMakeImageHandleResidentARB\");\n    glMakeImageHandleResidentNV = (PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) loadFunction(\"glMakeImageHandleResidentNV\");\n    glMakeNamedBufferNonResidentNV = (PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) loadFunction(\"glMakeNamedBufferNonResidentNV\");\n    glMakeNamedBufferResidentNV = (PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) loadFunction(\"glMakeNamedBufferResidentNV\");\n    glMakeTextureHandleNonResidentARB = (PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) loadFunction(\"glMakeTextureHandleNonResidentARB\");\n    glMakeTextureHandleNonResidentNV = (PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) loadFunction(\"glMakeTextureHandleNonResidentNV\");\n    glMakeTextureHandleResidentARB = (PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) loadFunction(\"glMakeTextureHandleResidentARB\");\n    glMakeTextureHandleResidentNV = (PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) loadFunction(\"glMakeTextureHandleResidentNV\");\n    glMap1d = (PFNGLMAP1DPROC) loadFunction(\"glMap1d\");\n    glMap1f = (PFNGLMAP1FPROC) loadFunction(\"glMap1f\");\n    glMap2d = (PFNGLMAP2DPROC) loadFunction(\"glMap2d\");\n    glMap2f = (PFNGLMAP2FPROC) loadFunction(\"glMap2f\");\n    glMapBuffer = (PFNGLMAPBUFFERPROC) loadFunction(\"glMapBuffer\");\n    glMapBufferARB = (PFNGLMAPBUFFERARBPROC) loadFunction(\"glMapBufferARB\");\n    glMapBufferRange = (PFNGLMAPBUFFERRANGEPROC) loadFunction(\"glMapBufferRange\");\n    glMapControlPointsNV = (PFNGLMAPCONTROLPOINTSNVPROC) loadFunction(\"glMapControlPointsNV\");\n    glMapGrid1d = (PFNGLMAPGRID1DPROC) loadFunction(\"glMapGrid1d\");\n    glMapGrid1f = (PFNGLMAPGRID1FPROC) loadFunction(\"glMapGrid1f\");\n    glMapGrid2d = (PFNGLMAPGRID2DPROC) loadFunction(\"glMapGrid2d\");\n    glMapGrid2f = (PFNGLMAPGRID2FPROC) loadFunction(\"glMapGrid2f\");\n    glMapNamedBuffer = (PFNGLMAPNAMEDBUFFERPROC) loadFunction(\"glMapNamedBuffer\");\n    glMapNamedBufferEXT = (PFNGLMAPNAMEDBUFFEREXTPROC) loadFunction(\"glMapNamedBufferEXT\");\n    glMapNamedBufferRange = (PFNGLMAPNAMEDBUFFERRANGEPROC) loadFunction(\"glMapNamedBufferRange\");\n    glMapNamedBufferRangeEXT = (PFNGLMAPNAMEDBUFFERRANGEEXTPROC) loadFunction(\"glMapNamedBufferRangeEXT\");\n    glMapParameterfvNV = (PFNGLMAPPARAMETERFVNVPROC) loadFunction(\"glMapParameterfvNV\");\n    glMapParameterivNV = (PFNGLMAPPARAMETERIVNVPROC) loadFunction(\"glMapParameterivNV\");\n    glMapTexture2DINTEL = (PFNGLMAPTEXTURE2DINTELPROC) loadFunction(\"glMapTexture2DINTEL\");\n    glMapVertexAttrib1dAPPLE = (PFNGLMAPVERTEXATTRIB1DAPPLEPROC) loadFunction(\"glMapVertexAttrib1dAPPLE\");\n    glMapVertexAttrib1fAPPLE = (PFNGLMAPVERTEXATTRIB1FAPPLEPROC) loadFunction(\"glMapVertexAttrib1fAPPLE\");\n    glMapVertexAttrib2dAPPLE = (PFNGLMAPVERTEXATTRIB2DAPPLEPROC) loadFunction(\"glMapVertexAttrib2dAPPLE\");\n    glMapVertexAttrib2fAPPLE = (PFNGLMAPVERTEXATTRIB2FAPPLEPROC) loadFunction(\"glMapVertexAttrib2fAPPLE\");\n    glMaterialf = (PFNGLMATERIALFPROC) loadFunction(\"glMaterialf\");\n    glMaterialfv = (PFNGLMATERIALFVPROC) loadFunction(\"glMaterialfv\");\n    glMateriali = (PFNGLMATERIALIPROC) loadFunction(\"glMateriali\");\n    glMaterialiv = (PFNGLMATERIALIVPROC) loadFunction(\"glMaterialiv\");\n    glMatrixFrustumEXT = (PFNGLMATRIXFRUSTUMEXTPROC) loadFunction(\"glMatrixFrustumEXT\");\n    glMatrixIndexPointerARB = (PFNGLMATRIXINDEXPOINTERARBPROC) loadFunction(\"glMatrixIndexPointerARB\");\n    glMatrixIndexubvARB = (PFNGLMATRIXINDEXUBVARBPROC) loadFunction(\"glMatrixIndexubvARB\");\n    glMatrixIndexuivARB = (PFNGLMATRIXINDEXUIVARBPROC) loadFunction(\"glMatrixIndexuivARB\");\n    glMatrixIndexusvARB = (PFNGLMATRIXINDEXUSVARBPROC) loadFunction(\"glMatrixIndexusvARB\");\n    glMatrixLoad3x2fNV = (PFNGLMATRIXLOAD3X2FNVPROC) loadFunction(\"glMatrixLoad3x2fNV\");\n    glMatrixLoad3x3fNV = (PFNGLMATRIXLOAD3X3FNVPROC) loadFunction(\"glMatrixLoad3x3fNV\");\n    glMatrixLoadIdentityEXT = (PFNGLMATRIXLOADIDENTITYEXTPROC) loadFunction(\"glMatrixLoadIdentityEXT\");\n    glMatrixLoadTranspose3x3fNV = (PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC) loadFunction(\"glMatrixLoadTranspose3x3fNV\");\n    glMatrixLoadTransposedEXT = (PFNGLMATRIXLOADTRANSPOSEDEXTPROC) loadFunction(\"glMatrixLoadTransposedEXT\");\n    glMatrixLoadTransposefEXT = (PFNGLMATRIXLOADTRANSPOSEFEXTPROC) loadFunction(\"glMatrixLoadTransposefEXT\");\n    glMatrixLoaddEXT = (PFNGLMATRIXLOADDEXTPROC) loadFunction(\"glMatrixLoaddEXT\");\n    glMatrixLoadfEXT = (PFNGLMATRIXLOADFEXTPROC) loadFunction(\"glMatrixLoadfEXT\");\n    glMatrixMode = (PFNGLMATRIXMODEPROC) loadFunction(\"glMatrixMode\");\n    glMatrixMult3x2fNV = (PFNGLMATRIXMULT3X2FNVPROC) loadFunction(\"glMatrixMult3x2fNV\");\n    glMatrixMult3x3fNV = (PFNGLMATRIXMULT3X3FNVPROC) loadFunction(\"glMatrixMult3x3fNV\");\n    glMatrixMultTranspose3x3fNV = (PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC) loadFunction(\"glMatrixMultTranspose3x3fNV\");\n    glMatrixMultTransposedEXT = (PFNGLMATRIXMULTTRANSPOSEDEXTPROC) loadFunction(\"glMatrixMultTransposedEXT\");\n    glMatrixMultTransposefEXT = (PFNGLMATRIXMULTTRANSPOSEFEXTPROC) loadFunction(\"glMatrixMultTransposefEXT\");\n    glMatrixMultdEXT = (PFNGLMATRIXMULTDEXTPROC) loadFunction(\"glMatrixMultdEXT\");\n    glMatrixMultfEXT = (PFNGLMATRIXMULTFEXTPROC) loadFunction(\"glMatrixMultfEXT\");\n    glMatrixOrthoEXT = (PFNGLMATRIXORTHOEXTPROC) loadFunction(\"glMatrixOrthoEXT\");\n    glMatrixPopEXT = (PFNGLMATRIXPOPEXTPROC) loadFunction(\"glMatrixPopEXT\");\n    glMatrixPushEXT = (PFNGLMATRIXPUSHEXTPROC) loadFunction(\"glMatrixPushEXT\");\n    glMatrixRotatedEXT = (PFNGLMATRIXROTATEDEXTPROC) loadFunction(\"glMatrixRotatedEXT\");\n    glMatrixRotatefEXT = (PFNGLMATRIXROTATEFEXTPROC) loadFunction(\"glMatrixRotatefEXT\");\n    glMatrixScaledEXT = (PFNGLMATRIXSCALEDEXTPROC) loadFunction(\"glMatrixScaledEXT\");\n    glMatrixScalefEXT = (PFNGLMATRIXSCALEFEXTPROC) loadFunction(\"glMatrixScalefEXT\");\n    glMatrixTranslatedEXT = (PFNGLMATRIXTRANSLATEDEXTPROC) loadFunction(\"glMatrixTranslatedEXT\");\n    glMatrixTranslatefEXT = (PFNGLMATRIXTRANSLATEFEXTPROC) loadFunction(\"glMatrixTranslatefEXT\");\n    glMaxShaderCompilerThreadsKHR = (PFNGLMAXSHADERCOMPILERTHREADSKHRPROC) loadFunction(\"glMaxShaderCompilerThreadsKHR\");\n    glMaxShaderCompilerThreadsARB = (PFNGLMAXSHADERCOMPILERTHREADSARBPROC) loadFunction(\"glMaxShaderCompilerThreadsARB\");\n    glMemoryBarrier = (PFNGLMEMORYBARRIERPROC) loadFunction(\"glMemoryBarrier\");\n    glMemoryBarrierByRegion = (PFNGLMEMORYBARRIERBYREGIONPROC) loadFunction(\"glMemoryBarrierByRegion\");\n    glMemoryBarrierEXT = (PFNGLMEMORYBARRIEREXTPROC) loadFunction(\"glMemoryBarrierEXT\");\n    glMemoryObjectParameterivEXT = (PFNGLMEMORYOBJECTPARAMETERIVEXTPROC) loadFunction(\"glMemoryObjectParameterivEXT\");\n    glMinSampleShading = (PFNGLMINSAMPLESHADINGPROC) loadFunction(\"glMinSampleShading\");\n    glMinSampleShadingARB = (PFNGLMINSAMPLESHADINGARBPROC) loadFunction(\"glMinSampleShadingARB\");\n    glMinmax = (PFNGLMINMAXPROC) loadFunction(\"glMinmax\");\n    glMinmaxEXT = (PFNGLMINMAXEXTPROC) loadFunction(\"glMinmaxEXT\");\n    glMultMatrixd = (PFNGLMULTMATRIXDPROC) loadFunction(\"glMultMatrixd\");\n    glMultMatrixf = (PFNGLMULTMATRIXFPROC) loadFunction(\"glMultMatrixf\");\n    glMultTransposeMatrixd = (PFNGLMULTTRANSPOSEMATRIXDPROC) loadFunction(\"glMultTransposeMatrixd\");\n    glMultTransposeMatrixdARB = (PFNGLMULTTRANSPOSEMATRIXDARBPROC) loadFunction(\"glMultTransposeMatrixdARB\");\n    glMultTransposeMatrixf = (PFNGLMULTTRANSPOSEMATRIXFPROC) loadFunction(\"glMultTransposeMatrixf\");\n    glMultTransposeMatrixfARB = (PFNGLMULTTRANSPOSEMATRIXFARBPROC) loadFunction(\"glMultTransposeMatrixfARB\");\n    glMultiDrawArrays = (PFNGLMULTIDRAWARRAYSPROC) loadFunction(\"glMultiDrawArrays\");\n    glMultiDrawArraysEXT = (PFNGLMULTIDRAWARRAYSEXTPROC) loadFunction(\"glMultiDrawArraysEXT\");\n    glMultiDrawArraysIndirect = (PFNGLMULTIDRAWARRAYSINDIRECTPROC) loadFunction(\"glMultiDrawArraysIndirect\");\n    glMultiDrawArraysIndirectAMD = (PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) loadFunction(\"glMultiDrawArraysIndirectAMD\");\n    glMultiDrawArraysIndirectBindlessCountNV = (PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC) loadFunction(\"glMultiDrawArraysIndirectBindlessCountNV\");\n    glMultiDrawArraysIndirectBindlessNV = (PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) loadFunction(\"glMultiDrawArraysIndirectBindlessNV\");\n    glMultiDrawArraysIndirectCount = (PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC) loadFunction(\"glMultiDrawArraysIndirectCount\");\n    glMultiDrawArraysIndirectCountARB = (PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) loadFunction(\"glMultiDrawArraysIndirectCountARB\");\n    glMultiDrawElementArrayAPPLE = (PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) loadFunction(\"glMultiDrawElementArrayAPPLE\");\n    glMultiDrawElements = (PFNGLMULTIDRAWELEMENTSPROC) loadFunction(\"glMultiDrawElements\");\n    glMultiDrawElementsBaseVertex = (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) loadFunction(\"glMultiDrawElementsBaseVertex\");\n    glMultiDrawElementsEXT = (PFNGLMULTIDRAWELEMENTSEXTPROC) loadFunction(\"glMultiDrawElementsEXT\");\n    glMultiDrawElementsIndirect = (PFNGLMULTIDRAWELEMENTSINDIRECTPROC) loadFunction(\"glMultiDrawElementsIndirect\");\n    glMultiDrawElementsIndirectAMD = (PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) loadFunction(\"glMultiDrawElementsIndirectAMD\");\n    glMultiDrawElementsIndirectBindlessCountNV = (PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC) loadFunction(\"glMultiDrawElementsIndirectBindlessCountNV\");\n    glMultiDrawElementsIndirectBindlessNV = (PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) loadFunction(\"glMultiDrawElementsIndirectBindlessNV\");\n    glMultiDrawElementsIndirectCount = (PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC) loadFunction(\"glMultiDrawElementsIndirectCount\");\n    glMultiDrawElementsIndirectCountARB = (PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) loadFunction(\"glMultiDrawElementsIndirectCountARB\");\n    glMultiDrawMeshTasksIndirectNV = (PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC) loadFunction(\"glMultiDrawMeshTasksIndirectNV\");\n    glMultiDrawMeshTasksIndirectCountNV = (PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC) loadFunction(\"glMultiDrawMeshTasksIndirectCountNV\");\n    glMultiDrawRangeElementArrayAPPLE = (PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) loadFunction(\"glMultiDrawRangeElementArrayAPPLE\");\n    glMultiTexBufferEXT = (PFNGLMULTITEXBUFFEREXTPROC) loadFunction(\"glMultiTexBufferEXT\");\n    glMultiTexCoord1d = (PFNGLMULTITEXCOORD1DPROC) loadFunction(\"glMultiTexCoord1d\");\n    glMultiTexCoord1dARB = (PFNGLMULTITEXCOORD1DARBPROC) loadFunction(\"glMultiTexCoord1dARB\");\n    glMultiTexCoord1dv = (PFNGLMULTITEXCOORD1DVPROC) loadFunction(\"glMultiTexCoord1dv\");\n    glMultiTexCoord1dvARB = (PFNGLMULTITEXCOORD1DVARBPROC) loadFunction(\"glMultiTexCoord1dvARB\");\n    glMultiTexCoord1f = (PFNGLMULTITEXCOORD1FPROC) loadFunction(\"glMultiTexCoord1f\");\n    glMultiTexCoord1fARB = (PFNGLMULTITEXCOORD1FARBPROC) loadFunction(\"glMultiTexCoord1fARB\");\n    glMultiTexCoord1fv = (PFNGLMULTITEXCOORD1FVPROC) loadFunction(\"glMultiTexCoord1fv\");\n    glMultiTexCoord1fvARB = (PFNGLMULTITEXCOORD1FVARBPROC) loadFunction(\"glMultiTexCoord1fvARB\");\n    glMultiTexCoord1hNV = (PFNGLMULTITEXCOORD1HNVPROC) loadFunction(\"glMultiTexCoord1hNV\");\n    glMultiTexCoord1hvNV = (PFNGLMULTITEXCOORD1HVNVPROC) loadFunction(\"glMultiTexCoord1hvNV\");\n    glMultiTexCoord1i = (PFNGLMULTITEXCOORD1IPROC) loadFunction(\"glMultiTexCoord1i\");\n    glMultiTexCoord1iARB = (PFNGLMULTITEXCOORD1IARBPROC) loadFunction(\"glMultiTexCoord1iARB\");\n    glMultiTexCoord1iv = (PFNGLMULTITEXCOORD1IVPROC) loadFunction(\"glMultiTexCoord1iv\");\n    glMultiTexCoord1ivARB = (PFNGLMULTITEXCOORD1IVARBPROC) loadFunction(\"glMultiTexCoord1ivARB\");\n    glMultiTexCoord1s = (PFNGLMULTITEXCOORD1SPROC) loadFunction(\"glMultiTexCoord1s\");\n    glMultiTexCoord1sARB = (PFNGLMULTITEXCOORD1SARBPROC) loadFunction(\"glMultiTexCoord1sARB\");\n    glMultiTexCoord1sv = (PFNGLMULTITEXCOORD1SVPROC) loadFunction(\"glMultiTexCoord1sv\");\n    glMultiTexCoord1svARB = (PFNGLMULTITEXCOORD1SVARBPROC) loadFunction(\"glMultiTexCoord1svARB\");\n    glMultiTexCoord2d = (PFNGLMULTITEXCOORD2DPROC) loadFunction(\"glMultiTexCoord2d\");\n    glMultiTexCoord2dARB = (PFNGLMULTITEXCOORD2DARBPROC) loadFunction(\"glMultiTexCoord2dARB\");\n    glMultiTexCoord2dv = (PFNGLMULTITEXCOORD2DVPROC) loadFunction(\"glMultiTexCoord2dv\");\n    glMultiTexCoord2dvARB = (PFNGLMULTITEXCOORD2DVARBPROC) loadFunction(\"glMultiTexCoord2dvARB\");\n    glMultiTexCoord2f = (PFNGLMULTITEXCOORD2FPROC) loadFunction(\"glMultiTexCoord2f\");\n    glMultiTexCoord2fARB = (PFNGLMULTITEXCOORD2FARBPROC) loadFunction(\"glMultiTexCoord2fARB\");\n    glMultiTexCoord2fv = (PFNGLMULTITEXCOORD2FVPROC) loadFunction(\"glMultiTexCoord2fv\");\n    glMultiTexCoord2fvARB = (PFNGLMULTITEXCOORD2FVARBPROC) loadFunction(\"glMultiTexCoord2fvARB\");\n    glMultiTexCoord2hNV = (PFNGLMULTITEXCOORD2HNVPROC) loadFunction(\"glMultiTexCoord2hNV\");\n    glMultiTexCoord2hvNV = (PFNGLMULTITEXCOORD2HVNVPROC) loadFunction(\"glMultiTexCoord2hvNV\");\n    glMultiTexCoord2i = (PFNGLMULTITEXCOORD2IPROC) loadFunction(\"glMultiTexCoord2i\");\n    glMultiTexCoord2iARB = (PFNGLMULTITEXCOORD2IARBPROC) loadFunction(\"glMultiTexCoord2iARB\");\n    glMultiTexCoord2iv = (PFNGLMULTITEXCOORD2IVPROC) loadFunction(\"glMultiTexCoord2iv\");\n    glMultiTexCoord2ivARB = (PFNGLMULTITEXCOORD2IVARBPROC) loadFunction(\"glMultiTexCoord2ivARB\");\n    glMultiTexCoord2s = (PFNGLMULTITEXCOORD2SPROC) loadFunction(\"glMultiTexCoord2s\");\n    glMultiTexCoord2sARB = (PFNGLMULTITEXCOORD2SARBPROC) loadFunction(\"glMultiTexCoord2sARB\");\n    glMultiTexCoord2sv = (PFNGLMULTITEXCOORD2SVPROC) loadFunction(\"glMultiTexCoord2sv\");\n    glMultiTexCoord2svARB = (PFNGLMULTITEXCOORD2SVARBPROC) loadFunction(\"glMultiTexCoord2svARB\");\n    glMultiTexCoord3d = (PFNGLMULTITEXCOORD3DPROC) loadFunction(\"glMultiTexCoord3d\");\n    glMultiTexCoord3dARB = (PFNGLMULTITEXCOORD3DARBPROC) loadFunction(\"glMultiTexCoord3dARB\");\n    glMultiTexCoord3dv = (PFNGLMULTITEXCOORD3DVPROC) loadFunction(\"glMultiTexCoord3dv\");\n    glMultiTexCoord3dvARB = (PFNGLMULTITEXCOORD3DVARBPROC) loadFunction(\"glMultiTexCoord3dvARB\");\n    glMultiTexCoord3f = (PFNGLMULTITEXCOORD3FPROC) loadFunction(\"glMultiTexCoord3f\");\n    glMultiTexCoord3fARB = (PFNGLMULTITEXCOORD3FARBPROC) loadFunction(\"glMultiTexCoord3fARB\");\n    glMultiTexCoord3fv = (PFNGLMULTITEXCOORD3FVPROC) loadFunction(\"glMultiTexCoord3fv\");\n    glMultiTexCoord3fvARB = (PFNGLMULTITEXCOORD3FVARBPROC) loadFunction(\"glMultiTexCoord3fvARB\");\n    glMultiTexCoord3hNV = (PFNGLMULTITEXCOORD3HNVPROC) loadFunction(\"glMultiTexCoord3hNV\");\n    glMultiTexCoord3hvNV = (PFNGLMULTITEXCOORD3HVNVPROC) loadFunction(\"glMultiTexCoord3hvNV\");\n    glMultiTexCoord3i = (PFNGLMULTITEXCOORD3IPROC) loadFunction(\"glMultiTexCoord3i\");\n    glMultiTexCoord3iARB = (PFNGLMULTITEXCOORD3IARBPROC) loadFunction(\"glMultiTexCoord3iARB\");\n    glMultiTexCoord3iv = (PFNGLMULTITEXCOORD3IVPROC) loadFunction(\"glMultiTexCoord3iv\");\n    glMultiTexCoord3ivARB = (PFNGLMULTITEXCOORD3IVARBPROC) loadFunction(\"glMultiTexCoord3ivARB\");\n    glMultiTexCoord3s = (PFNGLMULTITEXCOORD3SPROC) loadFunction(\"glMultiTexCoord3s\");\n    glMultiTexCoord3sARB = (PFNGLMULTITEXCOORD3SARBPROC) loadFunction(\"glMultiTexCoord3sARB\");\n    glMultiTexCoord3sv = (PFNGLMULTITEXCOORD3SVPROC) loadFunction(\"glMultiTexCoord3sv\");\n    glMultiTexCoord3svARB = (PFNGLMULTITEXCOORD3SVARBPROC) loadFunction(\"glMultiTexCoord3svARB\");\n    glMultiTexCoord4d = (PFNGLMULTITEXCOORD4DPROC) loadFunction(\"glMultiTexCoord4d\");\n    glMultiTexCoord4dARB = (PFNGLMULTITEXCOORD4DARBPROC) loadFunction(\"glMultiTexCoord4dARB\");\n    glMultiTexCoord4dv = (PFNGLMULTITEXCOORD4DVPROC) loadFunction(\"glMultiTexCoord4dv\");\n    glMultiTexCoord4dvARB = (PFNGLMULTITEXCOORD4DVARBPROC) loadFunction(\"glMultiTexCoord4dvARB\");\n    glMultiTexCoord4f = (PFNGLMULTITEXCOORD4FPROC) loadFunction(\"glMultiTexCoord4f\");\n    glMultiTexCoord4fARB = (PFNGLMULTITEXCOORD4FARBPROC) loadFunction(\"glMultiTexCoord4fARB\");\n    glMultiTexCoord4fv = (PFNGLMULTITEXCOORD4FVPROC) loadFunction(\"glMultiTexCoord4fv\");\n    glMultiTexCoord4fvARB = (PFNGLMULTITEXCOORD4FVARBPROC) loadFunction(\"glMultiTexCoord4fvARB\");\n    glMultiTexCoord4hNV = (PFNGLMULTITEXCOORD4HNVPROC) loadFunction(\"glMultiTexCoord4hNV\");\n    glMultiTexCoord4hvNV = (PFNGLMULTITEXCOORD4HVNVPROC) loadFunction(\"glMultiTexCoord4hvNV\");\n    glMultiTexCoord4i = (PFNGLMULTITEXCOORD4IPROC) loadFunction(\"glMultiTexCoord4i\");\n    glMultiTexCoord4iARB = (PFNGLMULTITEXCOORD4IARBPROC) loadFunction(\"glMultiTexCoord4iARB\");\n    glMultiTexCoord4iv = (PFNGLMULTITEXCOORD4IVPROC) loadFunction(\"glMultiTexCoord4iv\");\n    glMultiTexCoord4ivARB = (PFNGLMULTITEXCOORD4IVARBPROC) loadFunction(\"glMultiTexCoord4ivARB\");\n    glMultiTexCoord4s = (PFNGLMULTITEXCOORD4SPROC) loadFunction(\"glMultiTexCoord4s\");\n    glMultiTexCoord4sARB = (PFNGLMULTITEXCOORD4SARBPROC) loadFunction(\"glMultiTexCoord4sARB\");\n    glMultiTexCoord4sv = (PFNGLMULTITEXCOORD4SVPROC) loadFunction(\"glMultiTexCoord4sv\");\n    glMultiTexCoord4svARB = (PFNGLMULTITEXCOORD4SVARBPROC) loadFunction(\"glMultiTexCoord4svARB\");\n    glMultiTexCoordP1ui = (PFNGLMULTITEXCOORDP1UIPROC) loadFunction(\"glMultiTexCoordP1ui\");\n    glMultiTexCoordP1uiv = (PFNGLMULTITEXCOORDP1UIVPROC) loadFunction(\"glMultiTexCoordP1uiv\");\n    glMultiTexCoordP2ui = (PFNGLMULTITEXCOORDP2UIPROC) loadFunction(\"glMultiTexCoordP2ui\");\n    glMultiTexCoordP2uiv = (PFNGLMULTITEXCOORDP2UIVPROC) loadFunction(\"glMultiTexCoordP2uiv\");\n    glMultiTexCoordP3ui = (PFNGLMULTITEXCOORDP3UIPROC) loadFunction(\"glMultiTexCoordP3ui\");\n    glMultiTexCoordP3uiv = (PFNGLMULTITEXCOORDP3UIVPROC) loadFunction(\"glMultiTexCoordP3uiv\");\n    glMultiTexCoordP4ui = (PFNGLMULTITEXCOORDP4UIPROC) loadFunction(\"glMultiTexCoordP4ui\");\n    glMultiTexCoordP4uiv = (PFNGLMULTITEXCOORDP4UIVPROC) loadFunction(\"glMultiTexCoordP4uiv\");\n    glMultiTexCoordPointerEXT = (PFNGLMULTITEXCOORDPOINTEREXTPROC) loadFunction(\"glMultiTexCoordPointerEXT\");\n    glMultiTexEnvfEXT = (PFNGLMULTITEXENVFEXTPROC) loadFunction(\"glMultiTexEnvfEXT\");\n    glMultiTexEnvfvEXT = (PFNGLMULTITEXENVFVEXTPROC) loadFunction(\"glMultiTexEnvfvEXT\");\n    glMultiTexEnviEXT = (PFNGLMULTITEXENVIEXTPROC) loadFunction(\"glMultiTexEnviEXT\");\n    glMultiTexEnvivEXT = (PFNGLMULTITEXENVIVEXTPROC) loadFunction(\"glMultiTexEnvivEXT\");\n    glMultiTexGendEXT = (PFNGLMULTITEXGENDEXTPROC) loadFunction(\"glMultiTexGendEXT\");\n    glMultiTexGendvEXT = (PFNGLMULTITEXGENDVEXTPROC) loadFunction(\"glMultiTexGendvEXT\");\n    glMultiTexGenfEXT = (PFNGLMULTITEXGENFEXTPROC) loadFunction(\"glMultiTexGenfEXT\");\n    glMultiTexGenfvEXT = (PFNGLMULTITEXGENFVEXTPROC) loadFunction(\"glMultiTexGenfvEXT\");\n    glMultiTexGeniEXT = (PFNGLMULTITEXGENIEXTPROC) loadFunction(\"glMultiTexGeniEXT\");\n    glMultiTexGenivEXT = (PFNGLMULTITEXGENIVEXTPROC) loadFunction(\"glMultiTexGenivEXT\");\n    glMultiTexImage1DEXT = (PFNGLMULTITEXIMAGE1DEXTPROC) loadFunction(\"glMultiTexImage1DEXT\");\n    glMultiTexImage2DEXT = (PFNGLMULTITEXIMAGE2DEXTPROC) loadFunction(\"glMultiTexImage2DEXT\");\n    glMultiTexImage3DEXT = (PFNGLMULTITEXIMAGE3DEXTPROC) loadFunction(\"glMultiTexImage3DEXT\");\n    glMultiTexParameterIivEXT = (PFNGLMULTITEXPARAMETERIIVEXTPROC) loadFunction(\"glMultiTexParameterIivEXT\");\n    glMultiTexParameterIuivEXT = (PFNGLMULTITEXPARAMETERIUIVEXTPROC) loadFunction(\"glMultiTexParameterIuivEXT\");\n    glMultiTexParameterfEXT = (PFNGLMULTITEXPARAMETERFEXTPROC) loadFunction(\"glMultiTexParameterfEXT\");\n    glMultiTexParameterfvEXT = (PFNGLMULTITEXPARAMETERFVEXTPROC) loadFunction(\"glMultiTexParameterfvEXT\");\n    glMultiTexParameteriEXT = (PFNGLMULTITEXPARAMETERIEXTPROC) loadFunction(\"glMultiTexParameteriEXT\");\n    glMultiTexParameterivEXT = (PFNGLMULTITEXPARAMETERIVEXTPROC) loadFunction(\"glMultiTexParameterivEXT\");\n    glMultiTexRenderbufferEXT = (PFNGLMULTITEXRENDERBUFFEREXTPROC) loadFunction(\"glMultiTexRenderbufferEXT\");\n    glMultiTexSubImage1DEXT = (PFNGLMULTITEXSUBIMAGE1DEXTPROC) loadFunction(\"glMultiTexSubImage1DEXT\");\n    glMultiTexSubImage2DEXT = (PFNGLMULTITEXSUBIMAGE2DEXTPROC) loadFunction(\"glMultiTexSubImage2DEXT\");\n    glMultiTexSubImage3DEXT = (PFNGLMULTITEXSUBIMAGE3DEXTPROC) loadFunction(\"glMultiTexSubImage3DEXT\");\n    glMulticastBarrierNV = (PFNGLMULTICASTBARRIERNVPROC) loadFunction(\"glMulticastBarrierNV\");\n    glMulticastBlitFramebufferNV = (PFNGLMULTICASTBLITFRAMEBUFFERNVPROC) loadFunction(\"glMulticastBlitFramebufferNV\");\n    glMulticastBufferSubDataNV = (PFNGLMULTICASTBUFFERSUBDATANVPROC) loadFunction(\"glMulticastBufferSubDataNV\");\n    glMulticastCopyBufferSubDataNV = (PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC) loadFunction(\"glMulticastCopyBufferSubDataNV\");\n    glMulticastCopyImageSubDataNV = (PFNGLMULTICASTCOPYIMAGESUBDATANVPROC) loadFunction(\"glMulticastCopyImageSubDataNV\");\n    glMulticastFramebufferSampleLocationsfvNV = (PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) loadFunction(\"glMulticastFramebufferSampleLocationsfvNV\");\n    glMulticastGetQueryObjecti64vNV = (PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC) loadFunction(\"glMulticastGetQueryObjecti64vNV\");\n    glMulticastGetQueryObjectivNV = (PFNGLMULTICASTGETQUERYOBJECTIVNVPROC) loadFunction(\"glMulticastGetQueryObjectivNV\");\n    glMulticastGetQueryObjectui64vNV = (PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC) loadFunction(\"glMulticastGetQueryObjectui64vNV\");\n    glMulticastGetQueryObjectuivNV = (PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC) loadFunction(\"glMulticastGetQueryObjectuivNV\");\n    glMulticastWaitSyncNV = (PFNGLMULTICASTWAITSYNCNVPROC) loadFunction(\"glMulticastWaitSyncNV\");\n    glNamedBufferAttachMemoryNV = (PFNGLNAMEDBUFFERATTACHMEMORYNVPROC) loadFunction(\"glNamedBufferAttachMemoryNV\");\n    glNamedBufferData = (PFNGLNAMEDBUFFERDATAPROC) loadFunction(\"glNamedBufferData\");\n    glNamedBufferDataEXT = (PFNGLNAMEDBUFFERDATAEXTPROC) loadFunction(\"glNamedBufferDataEXT\");\n    glNamedBufferPageCommitmentARB = (PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC) loadFunction(\"glNamedBufferPageCommitmentARB\");\n    glNamedBufferPageCommitmentEXT = (PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC) loadFunction(\"glNamedBufferPageCommitmentEXT\");\n    glNamedBufferStorage = (PFNGLNAMEDBUFFERSTORAGEPROC) loadFunction(\"glNamedBufferStorage\");\n    glNamedBufferStorageExternalEXT = (PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC) loadFunction(\"glNamedBufferStorageExternalEXT\");\n    glNamedBufferStorageEXT = (PFNGLNAMEDBUFFERSTORAGEEXTPROC) loadFunction(\"glNamedBufferStorageEXT\");\n    glNamedBufferStorageMemEXT = (PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC) loadFunction(\"glNamedBufferStorageMemEXT\");\n    glNamedBufferSubData = (PFNGLNAMEDBUFFERSUBDATAPROC) loadFunction(\"glNamedBufferSubData\");\n    glNamedBufferSubDataEXT = (PFNGLNAMEDBUFFERSUBDATAEXTPROC) loadFunction(\"glNamedBufferSubDataEXT\");\n    glNamedCopyBufferSubDataEXT = (PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) loadFunction(\"glNamedCopyBufferSubDataEXT\");\n    glNamedFramebufferDrawBuffer = (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) loadFunction(\"glNamedFramebufferDrawBuffer\");\n    glNamedFramebufferDrawBuffers = (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) loadFunction(\"glNamedFramebufferDrawBuffers\");\n    glNamedFramebufferParameteri = (PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) loadFunction(\"glNamedFramebufferParameteri\");\n    glNamedFramebufferParameteriEXT = (PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) loadFunction(\"glNamedFramebufferParameteriEXT\");\n    glNamedFramebufferReadBuffer = (PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) loadFunction(\"glNamedFramebufferReadBuffer\");\n    glNamedFramebufferRenderbuffer = (PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) loadFunction(\"glNamedFramebufferRenderbuffer\");\n    glNamedFramebufferRenderbufferEXT = (PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) loadFunction(\"glNamedFramebufferRenderbufferEXT\");\n    glNamedFramebufferSampleLocationsfvARB = (PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) loadFunction(\"glNamedFramebufferSampleLocationsfvARB\");\n    glNamedFramebufferSampleLocationsfvNV = (PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) loadFunction(\"glNamedFramebufferSampleLocationsfvNV\");\n    glNamedFramebufferTexture = (PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) loadFunction(\"glNamedFramebufferTexture\");\n    glNamedFramebufferSamplePositionsfvAMD = (PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC) loadFunction(\"glNamedFramebufferSamplePositionsfvAMD\");\n    glNamedFramebufferTexture1DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) loadFunction(\"glNamedFramebufferTexture1DEXT\");\n    glNamedFramebufferTexture2DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) loadFunction(\"glNamedFramebufferTexture2DEXT\");\n    glNamedFramebufferTexture3DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) loadFunction(\"glNamedFramebufferTexture3DEXT\");\n    glNamedFramebufferTextureEXT = (PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) loadFunction(\"glNamedFramebufferTextureEXT\");\n    glNamedFramebufferTextureFaceEXT = (PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) loadFunction(\"glNamedFramebufferTextureFaceEXT\");\n    glNamedFramebufferTextureLayer = (PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) loadFunction(\"glNamedFramebufferTextureLayer\");\n    glNamedFramebufferTextureLayerEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) loadFunction(\"glNamedFramebufferTextureLayerEXT\");\n    glNamedProgramLocalParameter4dEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) loadFunction(\"glNamedProgramLocalParameter4dEXT\");\n    glNamedProgramLocalParameter4dvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) loadFunction(\"glNamedProgramLocalParameter4dvEXT\");\n    glNamedProgramLocalParameter4fEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) loadFunction(\"glNamedProgramLocalParameter4fEXT\");\n    glNamedProgramLocalParameter4fvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) loadFunction(\"glNamedProgramLocalParameter4fvEXT\");\n    glNamedProgramLocalParameterI4iEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) loadFunction(\"glNamedProgramLocalParameterI4iEXT\");\n    glNamedProgramLocalParameterI4ivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) loadFunction(\"glNamedProgramLocalParameterI4ivEXT\");\n    glNamedProgramLocalParameterI4uiEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) loadFunction(\"glNamedProgramLocalParameterI4uiEXT\");\n    glNamedProgramLocalParameterI4uivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) loadFunction(\"glNamedProgramLocalParameterI4uivEXT\");\n    glNamedProgramLocalParameters4fvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) loadFunction(\"glNamedProgramLocalParameters4fvEXT\");\n    glNamedProgramLocalParametersI4ivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) loadFunction(\"glNamedProgramLocalParametersI4ivEXT\");\n    glNamedProgramLocalParametersI4uivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) loadFunction(\"glNamedProgramLocalParametersI4uivEXT\");\n    glNamedProgramStringEXT = (PFNGLNAMEDPROGRAMSTRINGEXTPROC) loadFunction(\"glNamedProgramStringEXT\");\n    glNamedRenderbufferStorage = (PFNGLNAMEDRENDERBUFFERSTORAGEPROC) loadFunction(\"glNamedRenderbufferStorage\");\n    glNamedRenderbufferStorageEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) loadFunction(\"glNamedRenderbufferStorageEXT\");\n    glNamedRenderbufferStorageMultisample = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) loadFunction(\"glNamedRenderbufferStorageMultisample\");\n    glNamedRenderbufferStorageMultisampleAdvancedAMD = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC) loadFunction(\"glNamedRenderbufferStorageMultisampleAdvancedAMD\");\n    glNamedRenderbufferStorageMultisampleCoverageEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) loadFunction(\"glNamedRenderbufferStorageMultisampleCoverageEXT\");\n    glNamedRenderbufferStorageMultisampleEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) loadFunction(\"glNamedRenderbufferStorageMultisampleEXT\");\n    glNamedStringARB = (PFNGLNAMEDSTRINGARBPROC) loadFunction(\"glNamedStringARB\");\n    glNewList = (PFNGLNEWLISTPROC) loadFunction(\"glNewList\");\n    glNormal3b = (PFNGLNORMAL3BPROC) loadFunction(\"glNormal3b\");\n    glNormal3bv = (PFNGLNORMAL3BVPROC) loadFunction(\"glNormal3bv\");\n    glNormal3d = (PFNGLNORMAL3DPROC) loadFunction(\"glNormal3d\");\n    glNormal3dv = (PFNGLNORMAL3DVPROC) loadFunction(\"glNormal3dv\");\n    glNormal3f = (PFNGLNORMAL3FPROC) loadFunction(\"glNormal3f\");\n    glNormal3fv = (PFNGLNORMAL3FVPROC) loadFunction(\"glNormal3fv\");\n    glNormal3hNV = (PFNGLNORMAL3HNVPROC) loadFunction(\"glNormal3hNV\");\n    glNormal3hvNV = (PFNGLNORMAL3HVNVPROC) loadFunction(\"glNormal3hvNV\");\n    glNormal3i = (PFNGLNORMAL3IPROC) loadFunction(\"glNormal3i\");\n    glNormal3iv = (PFNGLNORMAL3IVPROC) loadFunction(\"glNormal3iv\");\n    glNormal3s = (PFNGLNORMAL3SPROC) loadFunction(\"glNormal3s\");\n    glNormal3sv = (PFNGLNORMAL3SVPROC) loadFunction(\"glNormal3sv\");\n    glNormalFormatNV = (PFNGLNORMALFORMATNVPROC) loadFunction(\"glNormalFormatNV\");\n    glNormalP3ui = (PFNGLNORMALP3UIPROC) loadFunction(\"glNormalP3ui\");\n    glNormalP3uiv = (PFNGLNORMALP3UIVPROC) loadFunction(\"glNormalP3uiv\");\n    glNormalPointer = (PFNGLNORMALPOINTERPROC) loadFunction(\"glNormalPointer\");\n    glNormalPointerEXT = (PFNGLNORMALPOINTEREXTPROC) loadFunction(\"glNormalPointerEXT\");\n    glNormalPointervINTEL = (PFNGLNORMALPOINTERVINTELPROC) loadFunction(\"glNormalPointervINTEL\");\n    glObjectLabel = (PFNGLOBJECTLABELPROC) loadFunction(\"glObjectLabel\");\n    glObjectLabelKHR = (PFNGLOBJECTLABELKHRPROC) loadFunction(\"glObjectLabelKHR\");\n    glObjectPtrLabel = (PFNGLOBJECTPTRLABELPROC) loadFunction(\"glObjectPtrLabel\");\n    glObjectPtrLabelKHR = (PFNGLOBJECTPTRLABELKHRPROC) loadFunction(\"glObjectPtrLabelKHR\");\n    glObjectPurgeableAPPLE = (PFNGLOBJECTPURGEABLEAPPLEPROC) loadFunction(\"glObjectPurgeableAPPLE\");\n    glObjectUnpurgeableAPPLE = (PFNGLOBJECTUNPURGEABLEAPPLEPROC) loadFunction(\"glObjectUnpurgeableAPPLE\");\n    glOrtho = (PFNGLORTHOPROC) loadFunction(\"glOrtho\");\n    glPassThrough = (PFNGLPASSTHROUGHPROC) loadFunction(\"glPassThrough\");\n    glPatchParameterfv = (PFNGLPATCHPARAMETERFVPROC) loadFunction(\"glPatchParameterfv\");\n    glPatchParameteri = (PFNGLPATCHPARAMETERIPROC) loadFunction(\"glPatchParameteri\");\n    glPathColorGenNV = (PFNGLPATHCOLORGENNVPROC) loadFunction(\"glPathColorGenNV\");\n    glPathCommandsNV = (PFNGLPATHCOMMANDSNVPROC) loadFunction(\"glPathCommandsNV\");\n    glPathCoordsNV = (PFNGLPATHCOORDSNVPROC) loadFunction(\"glPathCoordsNV\");\n    glPathCoverDepthFuncNV = (PFNGLPATHCOVERDEPTHFUNCNVPROC) loadFunction(\"glPathCoverDepthFuncNV\");\n    glPathDashArrayNV = (PFNGLPATHDASHARRAYNVPROC) loadFunction(\"glPathDashArrayNV\");\n    glPathFogGenNV = (PFNGLPATHFOGGENNVPROC) loadFunction(\"glPathFogGenNV\");\n    glPathGlyphIndexArrayNV = (PFNGLPATHGLYPHINDEXARRAYNVPROC) loadFunction(\"glPathGlyphIndexArrayNV\");\n    glPathGlyphIndexRangeNV = (PFNGLPATHGLYPHINDEXRANGENVPROC) loadFunction(\"glPathGlyphIndexRangeNV\");\n    glPathGlyphRangeNV = (PFNGLPATHGLYPHRANGENVPROC) loadFunction(\"glPathGlyphRangeNV\");\n    glPathGlyphsNV = (PFNGLPATHGLYPHSNVPROC) loadFunction(\"glPathGlyphsNV\");\n    glPathMemoryGlyphIndexArrayNV = (PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) loadFunction(\"glPathMemoryGlyphIndexArrayNV\");\n    glPathParameterfNV = (PFNGLPATHPARAMETERFNVPROC) loadFunction(\"glPathParameterfNV\");\n    glPathParameterfvNV = (PFNGLPATHPARAMETERFVNVPROC) loadFunction(\"glPathParameterfvNV\");\n    glPathParameteriNV = (PFNGLPATHPARAMETERINVPROC) loadFunction(\"glPathParameteriNV\");\n    glPathParameterivNV = (PFNGLPATHPARAMETERIVNVPROC) loadFunction(\"glPathParameterivNV\");\n    glPathStencilDepthOffsetNV = (PFNGLPATHSTENCILDEPTHOFFSETNVPROC) loadFunction(\"glPathStencilDepthOffsetNV\");\n    glPathStencilFuncNV = (PFNGLPATHSTENCILFUNCNVPROC) loadFunction(\"glPathStencilFuncNV\");\n    glPathStringNV = (PFNGLPATHSTRINGNVPROC) loadFunction(\"glPathStringNV\");\n    glPathSubCommandsNV = (PFNGLPATHSUBCOMMANDSNVPROC) loadFunction(\"glPathSubCommandsNV\");\n    glPathSubCoordsNV = (PFNGLPATHSUBCOORDSNVPROC) loadFunction(\"glPathSubCoordsNV\");\n    glPathTexGenNV = (PFNGLPATHTEXGENNVPROC) loadFunction(\"glPathTexGenNV\");\n    glPauseTransformFeedback = (PFNGLPAUSETRANSFORMFEEDBACKPROC) loadFunction(\"glPauseTransformFeedback\");\n    glPauseTransformFeedbackNV = (PFNGLPAUSETRANSFORMFEEDBACKNVPROC) loadFunction(\"glPauseTransformFeedbackNV\");\n    glPixelDataRangeNV = (PFNGLPIXELDATARANGENVPROC) loadFunction(\"glPixelDataRangeNV\");\n    glPixelMapfv = (PFNGLPIXELMAPFVPROC) loadFunction(\"glPixelMapfv\");\n    glPixelMapuiv = (PFNGLPIXELMAPUIVPROC) loadFunction(\"glPixelMapuiv\");\n    glPixelMapusv = (PFNGLPIXELMAPUSVPROC) loadFunction(\"glPixelMapusv\");\n    glPixelStoref = (PFNGLPIXELSTOREFPROC) loadFunction(\"glPixelStoref\");\n    glPixelStorei = (PFNGLPIXELSTOREIPROC) loadFunction(\"glPixelStorei\");\n    glPixelTransferf = (PFNGLPIXELTRANSFERFPROC) loadFunction(\"glPixelTransferf\");\n    glPixelTransferi = (PFNGLPIXELTRANSFERIPROC) loadFunction(\"glPixelTransferi\");\n    glPixelTransformParameterfEXT = (PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) loadFunction(\"glPixelTransformParameterfEXT\");\n    glPixelTransformParameterfvEXT = (PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) loadFunction(\"glPixelTransformParameterfvEXT\");\n    glPixelTransformParameteriEXT = (PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) loadFunction(\"glPixelTransformParameteriEXT\");\n    glPixelTransformParameterivEXT = (PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) loadFunction(\"glPixelTransformParameterivEXT\");\n    glPixelZoom = (PFNGLPIXELZOOMPROC) loadFunction(\"glPixelZoom\");\n    glPointAlongPathNV = (PFNGLPOINTALONGPATHNVPROC) loadFunction(\"glPointAlongPathNV\");\n    glPointParameterf = (PFNGLPOINTPARAMETERFPROC) loadFunction(\"glPointParameterf\");\n    glPointParameterfARB = (PFNGLPOINTPARAMETERFARBPROC) loadFunction(\"glPointParameterfARB\");\n    glPointParameterfEXT = (PFNGLPOINTPARAMETERFEXTPROC) loadFunction(\"glPointParameterfEXT\");\n    glPointParameterfv = (PFNGLPOINTPARAMETERFVPROC) loadFunction(\"glPointParameterfv\");\n    glPointParameterfvARB = (PFNGLPOINTPARAMETERFVARBPROC) loadFunction(\"glPointParameterfvARB\");\n    glPointParameterfvEXT = (PFNGLPOINTPARAMETERFVEXTPROC) loadFunction(\"glPointParameterfvEXT\");\n    glPointParameteri = (PFNGLPOINTPARAMETERIPROC) loadFunction(\"glPointParameteri\");\n    glPointParameteriNV = (PFNGLPOINTPARAMETERINVPROC) loadFunction(\"glPointParameteriNV\");\n    glPointParameteriv = (PFNGLPOINTPARAMETERIVPROC) loadFunction(\"glPointParameteriv\");\n    glPointParameterivNV = (PFNGLPOINTPARAMETERIVNVPROC) loadFunction(\"glPointParameterivNV\");\n    glPointSize = (PFNGLPOINTSIZEPROC) loadFunction(\"glPointSize\");\n    glPolygonMode = (PFNGLPOLYGONMODEPROC) loadFunction(\"glPolygonMode\");\n    glPolygonOffset = (PFNGLPOLYGONOFFSETPROC) loadFunction(\"glPolygonOffset\");\n    glPolygonOffsetClamp = (PFNGLPOLYGONOFFSETCLAMPPROC) loadFunction(\"glPolygonOffsetClamp\");\n    glPolygonOffsetClampEXT = (PFNGLPOLYGONOFFSETCLAMPEXTPROC) loadFunction(\"glPolygonOffsetClampEXT\");\n    glPolygonOffsetEXT = (PFNGLPOLYGONOFFSETEXTPROC) loadFunction(\"glPolygonOffsetEXT\");\n    glPolygonStipple = (PFNGLPOLYGONSTIPPLEPROC) loadFunction(\"glPolygonStipple\");\n    glPopAttrib = (PFNGLPOPATTRIBPROC) loadFunction(\"glPopAttrib\");\n    glPopClientAttrib = (PFNGLPOPCLIENTATTRIBPROC) loadFunction(\"glPopClientAttrib\");\n    glPopDebugGroup = (PFNGLPOPDEBUGGROUPPROC) loadFunction(\"glPopDebugGroup\");\n    glPopDebugGroupKHR = (PFNGLPOPDEBUGGROUPKHRPROC) loadFunction(\"glPopDebugGroupKHR\");\n    glPopGroupMarkerEXT = (PFNGLPOPGROUPMARKEREXTPROC) loadFunction(\"glPopGroupMarkerEXT\");\n    glPopMatrix = (PFNGLPOPMATRIXPROC) loadFunction(\"glPopMatrix\");\n    glPopName = (PFNGLPOPNAMEPROC) loadFunction(\"glPopName\");\n    glPresentFrameDualFillNV = (PFNGLPRESENTFRAMEDUALFILLNVPROC) loadFunction(\"glPresentFrameDualFillNV\");\n    glPresentFrameKeyedNV = (PFNGLPRESENTFRAMEKEYEDNVPROC) loadFunction(\"glPresentFrameKeyedNV\");\n    glPrimitiveBoundingBoxARB = (PFNGLPRIMITIVEBOUNDINGBOXARBPROC) loadFunction(\"glPrimitiveBoundingBoxARB\");\n    glPrimitiveRestartIndex = (PFNGLPRIMITIVERESTARTINDEXPROC) loadFunction(\"glPrimitiveRestartIndex\");\n    glPrimitiveRestartIndexNV = (PFNGLPRIMITIVERESTARTINDEXNVPROC) loadFunction(\"glPrimitiveRestartIndexNV\");\n    glPrimitiveRestartNV = (PFNGLPRIMITIVERESTARTNVPROC) loadFunction(\"glPrimitiveRestartNV\");\n    glPrioritizeTextures = (PFNGLPRIORITIZETEXTURESPROC) loadFunction(\"glPrioritizeTextures\");\n    glPrioritizeTexturesEXT = (PFNGLPRIORITIZETEXTURESEXTPROC) loadFunction(\"glPrioritizeTexturesEXT\");\n    glProgramBinary = (PFNGLPROGRAMBINARYPROC) loadFunction(\"glProgramBinary\");\n    glProgramBufferParametersIivNV = (PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) loadFunction(\"glProgramBufferParametersIivNV\");\n    glProgramBufferParametersIuivNV = (PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) loadFunction(\"glProgramBufferParametersIuivNV\");\n    glProgramBufferParametersfvNV = (PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) loadFunction(\"glProgramBufferParametersfvNV\");\n    glProgramEnvParameter4dARB = (PFNGLPROGRAMENVPARAMETER4DARBPROC) loadFunction(\"glProgramEnvParameter4dARB\");\n    glProgramEnvParameter4dvARB = (PFNGLPROGRAMENVPARAMETER4DVARBPROC) loadFunction(\"glProgramEnvParameter4dvARB\");\n    glProgramEnvParameter4fARB = (PFNGLPROGRAMENVPARAMETER4FARBPROC) loadFunction(\"glProgramEnvParameter4fARB\");\n    glProgramEnvParameter4fvARB = (PFNGLPROGRAMENVPARAMETER4FVARBPROC) loadFunction(\"glProgramEnvParameter4fvARB\");\n    glProgramEnvParameterI4iNV = (PFNGLPROGRAMENVPARAMETERI4INVPROC) loadFunction(\"glProgramEnvParameterI4iNV\");\n    glProgramEnvParameterI4ivNV = (PFNGLPROGRAMENVPARAMETERI4IVNVPROC) loadFunction(\"glProgramEnvParameterI4ivNV\");\n    glProgramEnvParameterI4uiNV = (PFNGLPROGRAMENVPARAMETERI4UINVPROC) loadFunction(\"glProgramEnvParameterI4uiNV\");\n    glProgramEnvParameterI4uivNV = (PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) loadFunction(\"glProgramEnvParameterI4uivNV\");\n    glProgramEnvParameters4fvEXT = (PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) loadFunction(\"glProgramEnvParameters4fvEXT\");\n    glProgramEnvParametersI4ivNV = (PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) loadFunction(\"glProgramEnvParametersI4ivNV\");\n    glProgramEnvParametersI4uivNV = (PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) loadFunction(\"glProgramEnvParametersI4uivNV\");\n    glProgramLocalParameter4dARB = (PFNGLPROGRAMLOCALPARAMETER4DARBPROC) loadFunction(\"glProgramLocalParameter4dARB\");\n    glProgramLocalParameter4dvARB = (PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) loadFunction(\"glProgramLocalParameter4dvARB\");\n    glProgramLocalParameter4fARB = (PFNGLPROGRAMLOCALPARAMETER4FARBPROC) loadFunction(\"glProgramLocalParameter4fARB\");\n    glProgramLocalParameter4fvARB = (PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) loadFunction(\"glProgramLocalParameter4fvARB\");\n    glProgramLocalParameterI4iNV = (PFNGLPROGRAMLOCALPARAMETERI4INVPROC) loadFunction(\"glProgramLocalParameterI4iNV\");\n    glProgramLocalParameterI4ivNV = (PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) loadFunction(\"glProgramLocalParameterI4ivNV\");\n    glProgramLocalParameterI4uiNV = (PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) loadFunction(\"glProgramLocalParameterI4uiNV\");\n    glProgramLocalParameterI4uivNV = (PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) loadFunction(\"glProgramLocalParameterI4uivNV\");\n    glProgramLocalParameters4fvEXT = (PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) loadFunction(\"glProgramLocalParameters4fvEXT\");\n    glProgramLocalParametersI4ivNV = (PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) loadFunction(\"glProgramLocalParametersI4ivNV\");\n    glProgramLocalParametersI4uivNV = (PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) loadFunction(\"glProgramLocalParametersI4uivNV\");\n    glProgramNamedParameter4dNV = (PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) loadFunction(\"glProgramNamedParameter4dNV\");\n    glProgramNamedParameter4dvNV = (PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) loadFunction(\"glProgramNamedParameter4dvNV\");\n    glProgramNamedParameter4fNV = (PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) loadFunction(\"glProgramNamedParameter4fNV\");\n    glProgramNamedParameter4fvNV = (PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) loadFunction(\"glProgramNamedParameter4fvNV\");\n    glProgramParameter4dNV = (PFNGLPROGRAMPARAMETER4DNVPROC) loadFunction(\"glProgramParameter4dNV\");\n    glProgramParameter4dvNV = (PFNGLPROGRAMPARAMETER4DVNVPROC) loadFunction(\"glProgramParameter4dvNV\");\n    glProgramParameter4fNV = (PFNGLPROGRAMPARAMETER4FNVPROC) loadFunction(\"glProgramParameter4fNV\");\n    glProgramParameter4fvNV = (PFNGLPROGRAMPARAMETER4FVNVPROC) loadFunction(\"glProgramParameter4fvNV\");\n    glProgramParameteri = (PFNGLPROGRAMPARAMETERIPROC) loadFunction(\"glProgramParameteri\");\n    glProgramParameteriARB = (PFNGLPROGRAMPARAMETERIARBPROC) loadFunction(\"glProgramParameteriARB\");\n    glProgramParameteriEXT = (PFNGLPROGRAMPARAMETERIEXTPROC) loadFunction(\"glProgramParameteriEXT\");\n    glProgramParameters4dvNV = (PFNGLPROGRAMPARAMETERS4DVNVPROC) loadFunction(\"glProgramParameters4dvNV\");\n    glProgramParameters4fvNV = (PFNGLPROGRAMPARAMETERS4FVNVPROC) loadFunction(\"glProgramParameters4fvNV\");\n    glProgramPathFragmentInputGenNV = (PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) loadFunction(\"glProgramPathFragmentInputGenNV\");\n    glProgramStringARB = (PFNGLPROGRAMSTRINGARBPROC) loadFunction(\"glProgramStringARB\");\n    glProgramSubroutineParametersuivNV = (PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC) loadFunction(\"glProgramSubroutineParametersuivNV\");\n    glProgramUniform1d = (PFNGLPROGRAMUNIFORM1DPROC) loadFunction(\"glProgramUniform1d\");\n    glProgramUniform1dEXT = (PFNGLPROGRAMUNIFORM1DEXTPROC) loadFunction(\"glProgramUniform1dEXT\");\n    glProgramUniform1dv = (PFNGLPROGRAMUNIFORM1DVPROC) loadFunction(\"glProgramUniform1dv\");\n    glProgramUniform1dvEXT = (PFNGLPROGRAMUNIFORM1DVEXTPROC) loadFunction(\"glProgramUniform1dvEXT\");\n    glProgramUniform1f = (PFNGLPROGRAMUNIFORM1FPROC) loadFunction(\"glProgramUniform1f\");\n    glProgramUniform1fEXT = (PFNGLPROGRAMUNIFORM1FEXTPROC) loadFunction(\"glProgramUniform1fEXT\");\n    glProgramUniform1fv = (PFNGLPROGRAMUNIFORM1FVPROC) loadFunction(\"glProgramUniform1fv\");\n    glProgramUniform1fvEXT = (PFNGLPROGRAMUNIFORM1FVEXTPROC) loadFunction(\"glProgramUniform1fvEXT\");\n    glProgramUniform1i = (PFNGLPROGRAMUNIFORM1IPROC) loadFunction(\"glProgramUniform1i\");\n    glProgramUniform1i64ARB = (PFNGLPROGRAMUNIFORM1I64ARBPROC) loadFunction(\"glProgramUniform1i64ARB\");\n    glProgramUniform1i64NV = (PFNGLPROGRAMUNIFORM1I64NVPROC) loadFunction(\"glProgramUniform1i64NV\");\n    glProgramUniform1i64vARB = (PFNGLPROGRAMUNIFORM1I64VARBPROC) loadFunction(\"glProgramUniform1i64vARB\");\n    glProgramUniform1i64vNV = (PFNGLPROGRAMUNIFORM1I64VNVPROC) loadFunction(\"glProgramUniform1i64vNV\");\n    glProgramUniform1iEXT = (PFNGLPROGRAMUNIFORM1IEXTPROC) loadFunction(\"glProgramUniform1iEXT\");\n    glProgramUniform1iv = (PFNGLPROGRAMUNIFORM1IVPROC) loadFunction(\"glProgramUniform1iv\");\n    glProgramUniform1ivEXT = (PFNGLPROGRAMUNIFORM1IVEXTPROC) loadFunction(\"glProgramUniform1ivEXT\");\n    glProgramUniform1ui = (PFNGLPROGRAMUNIFORM1UIPROC) loadFunction(\"glProgramUniform1ui\");\n    glProgramUniform1ui64ARB = (PFNGLPROGRAMUNIFORM1UI64ARBPROC) loadFunction(\"glProgramUniform1ui64ARB\");\n    glProgramUniform1ui64NV = (PFNGLPROGRAMUNIFORM1UI64NVPROC) loadFunction(\"glProgramUniform1ui64NV\");\n    glProgramUniform1ui64vARB = (PFNGLPROGRAMUNIFORM1UI64VARBPROC) loadFunction(\"glProgramUniform1ui64vARB\");\n    glProgramUniform1ui64vNV = (PFNGLPROGRAMUNIFORM1UI64VNVPROC) loadFunction(\"glProgramUniform1ui64vNV\");\n    glProgramUniform1uiEXT = (PFNGLPROGRAMUNIFORM1UIEXTPROC) loadFunction(\"glProgramUniform1uiEXT\");\n    glProgramUniform1uiv = (PFNGLPROGRAMUNIFORM1UIVPROC) loadFunction(\"glProgramUniform1uiv\");\n    glProgramUniform1uivEXT = (PFNGLPROGRAMUNIFORM1UIVEXTPROC) loadFunction(\"glProgramUniform1uivEXT\");\n    glProgramUniform2d = (PFNGLPROGRAMUNIFORM2DPROC) loadFunction(\"glProgramUniform2d\");\n    glProgramUniform2dEXT = (PFNGLPROGRAMUNIFORM2DEXTPROC) loadFunction(\"glProgramUniform2dEXT\");\n    glProgramUniform2dv = (PFNGLPROGRAMUNIFORM2DVPROC) loadFunction(\"glProgramUniform2dv\");\n    glProgramUniform2dvEXT = (PFNGLPROGRAMUNIFORM2DVEXTPROC) loadFunction(\"glProgramUniform2dvEXT\");\n    glProgramUniform2f = (PFNGLPROGRAMUNIFORM2FPROC) loadFunction(\"glProgramUniform2f\");\n    glProgramUniform2fEXT = (PFNGLPROGRAMUNIFORM2FEXTPROC) loadFunction(\"glProgramUniform2fEXT\");\n    glProgramUniform2fv = (PFNGLPROGRAMUNIFORM2FVPROC) loadFunction(\"glProgramUniform2fv\");\n    glProgramUniform2fvEXT = (PFNGLPROGRAMUNIFORM2FVEXTPROC) loadFunction(\"glProgramUniform2fvEXT\");\n    glProgramUniform2i = (PFNGLPROGRAMUNIFORM2IPROC) loadFunction(\"glProgramUniform2i\");\n    glProgramUniform2i64ARB = (PFNGLPROGRAMUNIFORM2I64ARBPROC) loadFunction(\"glProgramUniform2i64ARB\");\n    glProgramUniform2i64NV = (PFNGLPROGRAMUNIFORM2I64NVPROC) loadFunction(\"glProgramUniform2i64NV\");\n    glProgramUniform2i64vARB = (PFNGLPROGRAMUNIFORM2I64VARBPROC) loadFunction(\"glProgramUniform2i64vARB\");\n    glProgramUniform2i64vNV = (PFNGLPROGRAMUNIFORM2I64VNVPROC) loadFunction(\"glProgramUniform2i64vNV\");\n    glProgramUniform2iEXT = (PFNGLPROGRAMUNIFORM2IEXTPROC) loadFunction(\"glProgramUniform2iEXT\");\n    glProgramUniform2iv = (PFNGLPROGRAMUNIFORM2IVPROC) loadFunction(\"glProgramUniform2iv\");\n    glProgramUniform2ivEXT = (PFNGLPROGRAMUNIFORM2IVEXTPROC) loadFunction(\"glProgramUniform2ivEXT\");\n    glProgramUniform2ui = (PFNGLPROGRAMUNIFORM2UIPROC) loadFunction(\"glProgramUniform2ui\");\n    glProgramUniform2ui64ARB = (PFNGLPROGRAMUNIFORM2UI64ARBPROC) loadFunction(\"glProgramUniform2ui64ARB\");\n    glProgramUniform2ui64NV = (PFNGLPROGRAMUNIFORM2UI64NVPROC) loadFunction(\"glProgramUniform2ui64NV\");\n    glProgramUniform2ui64vARB = (PFNGLPROGRAMUNIFORM2UI64VARBPROC) loadFunction(\"glProgramUniform2ui64vARB\");\n    glProgramUniform2ui64vNV = (PFNGLPROGRAMUNIFORM2UI64VNVPROC) loadFunction(\"glProgramUniform2ui64vNV\");\n    glProgramUniform2uiEXT = (PFNGLPROGRAMUNIFORM2UIEXTPROC) loadFunction(\"glProgramUniform2uiEXT\");\n    glProgramUniform2uiv = (PFNGLPROGRAMUNIFORM2UIVPROC) loadFunction(\"glProgramUniform2uiv\");\n    glProgramUniform2uivEXT = (PFNGLPROGRAMUNIFORM2UIVEXTPROC) loadFunction(\"glProgramUniform2uivEXT\");\n    glProgramUniform3d = (PFNGLPROGRAMUNIFORM3DPROC) loadFunction(\"glProgramUniform3d\");\n    glProgramUniform3dEXT = (PFNGLPROGRAMUNIFORM3DEXTPROC) loadFunction(\"glProgramUniform3dEXT\");\n    glProgramUniform3dv = (PFNGLPROGRAMUNIFORM3DVPROC) loadFunction(\"glProgramUniform3dv\");\n    glProgramUniform3dvEXT = (PFNGLPROGRAMUNIFORM3DVEXTPROC) loadFunction(\"glProgramUniform3dvEXT\");\n    glProgramUniform3f = (PFNGLPROGRAMUNIFORM3FPROC) loadFunction(\"glProgramUniform3f\");\n    glProgramUniform3fEXT = (PFNGLPROGRAMUNIFORM3FEXTPROC) loadFunction(\"glProgramUniform3fEXT\");\n    glProgramUniform3fv = (PFNGLPROGRAMUNIFORM3FVPROC) loadFunction(\"glProgramUniform3fv\");\n    glProgramUniform3fvEXT = (PFNGLPROGRAMUNIFORM3FVEXTPROC) loadFunction(\"glProgramUniform3fvEXT\");\n    glProgramUniform3i = (PFNGLPROGRAMUNIFORM3IPROC) loadFunction(\"glProgramUniform3i\");\n    glProgramUniform3i64ARB = (PFNGLPROGRAMUNIFORM3I64ARBPROC) loadFunction(\"glProgramUniform3i64ARB\");\n    glProgramUniform3i64NV = (PFNGLPROGRAMUNIFORM3I64NVPROC) loadFunction(\"glProgramUniform3i64NV\");\n    glProgramUniform3i64vARB = (PFNGLPROGRAMUNIFORM3I64VARBPROC) loadFunction(\"glProgramUniform3i64vARB\");\n    glProgramUniform3i64vNV = (PFNGLPROGRAMUNIFORM3I64VNVPROC) loadFunction(\"glProgramUniform3i64vNV\");\n    glProgramUniform3iEXT = (PFNGLPROGRAMUNIFORM3IEXTPROC) loadFunction(\"glProgramUniform3iEXT\");\n    glProgramUniform3iv = (PFNGLPROGRAMUNIFORM3IVPROC) loadFunction(\"glProgramUniform3iv\");\n    glProgramUniform3ivEXT = (PFNGLPROGRAMUNIFORM3IVEXTPROC) loadFunction(\"glProgramUniform3ivEXT\");\n    glProgramUniform3ui = (PFNGLPROGRAMUNIFORM3UIPROC) loadFunction(\"glProgramUniform3ui\");\n    glProgramUniform3ui64ARB = (PFNGLPROGRAMUNIFORM3UI64ARBPROC) loadFunction(\"glProgramUniform3ui64ARB\");\n    glProgramUniform3ui64NV = (PFNGLPROGRAMUNIFORM3UI64NVPROC) loadFunction(\"glProgramUniform3ui64NV\");\n    glProgramUniform3ui64vARB = (PFNGLPROGRAMUNIFORM3UI64VARBPROC) loadFunction(\"glProgramUniform3ui64vARB\");\n    glProgramUniform3ui64vNV = (PFNGLPROGRAMUNIFORM3UI64VNVPROC) loadFunction(\"glProgramUniform3ui64vNV\");\n    glProgramUniform3uiEXT = (PFNGLPROGRAMUNIFORM3UIEXTPROC) loadFunction(\"glProgramUniform3uiEXT\");\n    glProgramUniform3uiv = (PFNGLPROGRAMUNIFORM3UIVPROC) loadFunction(\"glProgramUniform3uiv\");\n    glProgramUniform3uivEXT = (PFNGLPROGRAMUNIFORM3UIVEXTPROC) loadFunction(\"glProgramUniform3uivEXT\");\n    glProgramUniform4d = (PFNGLPROGRAMUNIFORM4DPROC) loadFunction(\"glProgramUniform4d\");\n    glProgramUniform4dEXT = (PFNGLPROGRAMUNIFORM4DEXTPROC) loadFunction(\"glProgramUniform4dEXT\");\n    glProgramUniform4dv = (PFNGLPROGRAMUNIFORM4DVPROC) loadFunction(\"glProgramUniform4dv\");\n    glProgramUniform4dvEXT = (PFNGLPROGRAMUNIFORM4DVEXTPROC) loadFunction(\"glProgramUniform4dvEXT\");\n    glProgramUniform4f = (PFNGLPROGRAMUNIFORM4FPROC) loadFunction(\"glProgramUniform4f\");\n    glProgramUniform4fEXT = (PFNGLPROGRAMUNIFORM4FEXTPROC) loadFunction(\"glProgramUniform4fEXT\");\n    glProgramUniform4fv = (PFNGLPROGRAMUNIFORM4FVPROC) loadFunction(\"glProgramUniform4fv\");\n    glProgramUniform4fvEXT = (PFNGLPROGRAMUNIFORM4FVEXTPROC) loadFunction(\"glProgramUniform4fvEXT\");\n    glProgramUniform4i = (PFNGLPROGRAMUNIFORM4IPROC) loadFunction(\"glProgramUniform4i\");\n    glProgramUniform4i64ARB = (PFNGLPROGRAMUNIFORM4I64ARBPROC) loadFunction(\"glProgramUniform4i64ARB\");\n    glProgramUniform4i64NV = (PFNGLPROGRAMUNIFORM4I64NVPROC) loadFunction(\"glProgramUniform4i64NV\");\n    glProgramUniform4i64vARB = (PFNGLPROGRAMUNIFORM4I64VARBPROC) loadFunction(\"glProgramUniform4i64vARB\");\n    glProgramUniform4i64vNV = (PFNGLPROGRAMUNIFORM4I64VNVPROC) loadFunction(\"glProgramUniform4i64vNV\");\n    glProgramUniform4iEXT = (PFNGLPROGRAMUNIFORM4IEXTPROC) loadFunction(\"glProgramUniform4iEXT\");\n    glProgramUniform4iv = (PFNGLPROGRAMUNIFORM4IVPROC) loadFunction(\"glProgramUniform4iv\");\n    glProgramUniform4ivEXT = (PFNGLPROGRAMUNIFORM4IVEXTPROC) loadFunction(\"glProgramUniform4ivEXT\");\n    glProgramUniform4ui = (PFNGLPROGRAMUNIFORM4UIPROC) loadFunction(\"glProgramUniform4ui\");\n    glProgramUniform4ui64ARB = (PFNGLPROGRAMUNIFORM4UI64ARBPROC) loadFunction(\"glProgramUniform4ui64ARB\");\n    glProgramUniform4ui64NV = (PFNGLPROGRAMUNIFORM4UI64NVPROC) loadFunction(\"glProgramUniform4ui64NV\");\n    glProgramUniform4ui64vARB = (PFNGLPROGRAMUNIFORM4UI64VARBPROC) loadFunction(\"glProgramUniform4ui64vARB\");\n    glProgramUniform4ui64vNV = (PFNGLPROGRAMUNIFORM4UI64VNVPROC) loadFunction(\"glProgramUniform4ui64vNV\");\n    glProgramUniform4uiEXT = (PFNGLPROGRAMUNIFORM4UIEXTPROC) loadFunction(\"glProgramUniform4uiEXT\");\n    glProgramUniform4uiv = (PFNGLPROGRAMUNIFORM4UIVPROC) loadFunction(\"glProgramUniform4uiv\");\n    glProgramUniform4uivEXT = (PFNGLPROGRAMUNIFORM4UIVEXTPROC) loadFunction(\"glProgramUniform4uivEXT\");\n    glProgramUniformHandleui64ARB = (PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) loadFunction(\"glProgramUniformHandleui64ARB\");\n    glProgramUniformHandleui64NV = (PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) loadFunction(\"glProgramUniformHandleui64NV\");\n    glProgramUniformHandleui64vARB = (PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) loadFunction(\"glProgramUniformHandleui64vARB\");\n    glProgramUniformHandleui64vNV = (PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) loadFunction(\"glProgramUniformHandleui64vNV\");\n    glProgramUniformMatrix2dv = (PFNGLPROGRAMUNIFORMMATRIX2DVPROC) loadFunction(\"glProgramUniformMatrix2dv\");\n    glProgramUniformMatrix2dvEXT = (PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) loadFunction(\"glProgramUniformMatrix2dvEXT\");\n    glProgramUniformMatrix2fv = (PFNGLPROGRAMUNIFORMMATRIX2FVPROC) loadFunction(\"glProgramUniformMatrix2fv\");\n    glProgramUniformMatrix2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) loadFunction(\"glProgramUniformMatrix2fvEXT\");\n    glProgramUniformMatrix2x3dv = (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) loadFunction(\"glProgramUniformMatrix2x3dv\");\n    glProgramUniformMatrix2x3dvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) loadFunction(\"glProgramUniformMatrix2x3dvEXT\");\n    glProgramUniformMatrix2x3fv = (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) loadFunction(\"glProgramUniformMatrix2x3fv\");\n    glProgramUniformMatrix2x3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) loadFunction(\"glProgramUniformMatrix2x3fvEXT\");\n    glProgramUniformMatrix2x4dv = (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) loadFunction(\"glProgramUniformMatrix2x4dv\");\n    glProgramUniformMatrix2x4dvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) loadFunction(\"glProgramUniformMatrix2x4dvEXT\");\n    glProgramUniformMatrix2x4fv = (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) loadFunction(\"glProgramUniformMatrix2x4fv\");\n    glProgramUniformMatrix2x4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) loadFunction(\"glProgramUniformMatrix2x4fvEXT\");\n    glProgramUniformMatrix3dv = (PFNGLPROGRAMUNIFORMMATRIX3DVPROC) loadFunction(\"glProgramUniformMatrix3dv\");\n    glProgramUniformMatrix3dvEXT = (PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) loadFunction(\"glProgramUniformMatrix3dvEXT\");\n    glProgramUniformMatrix3fv = (PFNGLPROGRAMUNIFORMMATRIX3FVPROC) loadFunction(\"glProgramUniformMatrix3fv\");\n    glProgramUniformMatrix3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) loadFunction(\"glProgramUniformMatrix3fvEXT\");\n    glProgramUniformMatrix3x2dv = (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) loadFunction(\"glProgramUniformMatrix3x2dv\");\n    glProgramUniformMatrix3x2dvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) loadFunction(\"glProgramUniformMatrix3x2dvEXT\");\n    glProgramUniformMatrix3x2fv = (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) loadFunction(\"glProgramUniformMatrix3x2fv\");\n    glProgramUniformMatrix3x2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) loadFunction(\"glProgramUniformMatrix3x2fvEXT\");\n    glProgramUniformMatrix3x4dv = (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) loadFunction(\"glProgramUniformMatrix3x4dv\");\n    glProgramUniformMatrix3x4dvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) loadFunction(\"glProgramUniformMatrix3x4dvEXT\");\n    glProgramUniformMatrix3x4fv = (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) loadFunction(\"glProgramUniformMatrix3x4fv\");\n    glProgramUniformMatrix3x4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) loadFunction(\"glProgramUniformMatrix3x4fvEXT\");\n    glProgramUniformMatrix4dv = (PFNGLPROGRAMUNIFORMMATRIX4DVPROC) loadFunction(\"glProgramUniformMatrix4dv\");\n    glProgramUniformMatrix4dvEXT = (PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) loadFunction(\"glProgramUniformMatrix4dvEXT\");\n    glProgramUniformMatrix4fv = (PFNGLPROGRAMUNIFORMMATRIX4FVPROC) loadFunction(\"glProgramUniformMatrix4fv\");\n    glProgramUniformMatrix4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) loadFunction(\"glProgramUniformMatrix4fvEXT\");\n    glProgramUniformMatrix4x2dv = (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) loadFunction(\"glProgramUniformMatrix4x2dv\");\n    glProgramUniformMatrix4x2dvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) loadFunction(\"glProgramUniformMatrix4x2dvEXT\");\n    glProgramUniformMatrix4x2fv = (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) loadFunction(\"glProgramUniformMatrix4x2fv\");\n    glProgramUniformMatrix4x2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) loadFunction(\"glProgramUniformMatrix4x2fvEXT\");\n    glProgramUniformMatrix4x3dv = (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) loadFunction(\"glProgramUniformMatrix4x3dv\");\n    glProgramUniformMatrix4x3dvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) loadFunction(\"glProgramUniformMatrix4x3dvEXT\");\n    glProgramUniformMatrix4x3fv = (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) loadFunction(\"glProgramUniformMatrix4x3fv\");\n    glProgramUniformMatrix4x3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) loadFunction(\"glProgramUniformMatrix4x3fvEXT\");\n    glProgramUniformui64NV = (PFNGLPROGRAMUNIFORMUI64NVPROC) loadFunction(\"glProgramUniformui64NV\");\n    glProgramUniformui64vNV = (PFNGLPROGRAMUNIFORMUI64VNVPROC) loadFunction(\"glProgramUniformui64vNV\");\n    glProgramVertexLimitNV = (PFNGLPROGRAMVERTEXLIMITNVPROC) loadFunction(\"glProgramVertexLimitNV\");\n    glProvokingVertex = (PFNGLPROVOKINGVERTEXPROC) loadFunction(\"glProvokingVertex\");\n    glProvokingVertexEXT = (PFNGLPROVOKINGVERTEXEXTPROC) loadFunction(\"glProvokingVertexEXT\");\n    glPushAttrib = (PFNGLPUSHATTRIBPROC) loadFunction(\"glPushAttrib\");\n    glPushClientAttrib = (PFNGLPUSHCLIENTATTRIBPROC) loadFunction(\"glPushClientAttrib\");\n    glPushClientAttribDefaultEXT = (PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) loadFunction(\"glPushClientAttribDefaultEXT\");\n    glPushDebugGroup = (PFNGLPUSHDEBUGGROUPPROC) loadFunction(\"glPushDebugGroup\");\n    glPushDebugGroupKHR = (PFNGLPUSHDEBUGGROUPKHRPROC) loadFunction(\"glPushDebugGroupKHR\");\n    glPushGroupMarkerEXT = (PFNGLPUSHGROUPMARKEREXTPROC) loadFunction(\"glPushGroupMarkerEXT\");\n    glPushMatrix = (PFNGLPUSHMATRIXPROC) loadFunction(\"glPushMatrix\");\n    glPushName = (PFNGLPUSHNAMEPROC) loadFunction(\"glPushName\");\n    glQueryCounter = (PFNGLQUERYCOUNTERPROC) loadFunction(\"glQueryCounter\");\n    glQueryObjectParameteruiAMD = (PFNGLQUERYOBJECTPARAMETERUIAMDPROC) loadFunction(\"glQueryObjectParameteruiAMD\");\n    glQueryResourceNV = (PFNGLQUERYRESOURCENVPROC) loadFunction(\"glQueryResourceNV\");\n    glQueryResourceTagNV = (PFNGLQUERYRESOURCETAGNVPROC) loadFunction(\"glQueryResourceTagNV\");\n    glRasterPos2d = (PFNGLRASTERPOS2DPROC) loadFunction(\"glRasterPos2d\");\n    glRasterPos2dv = (PFNGLRASTERPOS2DVPROC) loadFunction(\"glRasterPos2dv\");\n    glRasterPos2f = (PFNGLRASTERPOS2FPROC) loadFunction(\"glRasterPos2f\");\n    glRasterPos2fv = (PFNGLRASTERPOS2FVPROC) loadFunction(\"glRasterPos2fv\");\n    glRasterPos2i = (PFNGLRASTERPOS2IPROC) loadFunction(\"glRasterPos2i\");\n    glRasterPos2iv = (PFNGLRASTERPOS2IVPROC) loadFunction(\"glRasterPos2iv\");\n    glRasterPos2s = (PFNGLRASTERPOS2SPROC) loadFunction(\"glRasterPos2s\");\n    glRasterPos2sv = (PFNGLRASTERPOS2SVPROC) loadFunction(\"glRasterPos2sv\");\n    glRasterPos3d = (PFNGLRASTERPOS3DPROC) loadFunction(\"glRasterPos3d\");\n    glRasterPos3dv = (PFNGLRASTERPOS3DVPROC) loadFunction(\"glRasterPos3dv\");\n    glRasterPos3f = (PFNGLRASTERPOS3FPROC) loadFunction(\"glRasterPos3f\");\n    glRasterPos3fv = (PFNGLRASTERPOS3FVPROC) loadFunction(\"glRasterPos3fv\");\n    glRasterPos3i = (PFNGLRASTERPOS3IPROC) loadFunction(\"glRasterPos3i\");\n    glRasterPos3iv = (PFNGLRASTERPOS3IVPROC) loadFunction(\"glRasterPos3iv\");\n    glRasterPos3s = (PFNGLRASTERPOS3SPROC) loadFunction(\"glRasterPos3s\");\n    glRasterPos3sv = (PFNGLRASTERPOS3SVPROC) loadFunction(\"glRasterPos3sv\");\n    glRasterPos4d = (PFNGLRASTERPOS4DPROC) loadFunction(\"glRasterPos4d\");\n    glRasterPos4dv = (PFNGLRASTERPOS4DVPROC) loadFunction(\"glRasterPos4dv\");\n    glRasterPos4f = (PFNGLRASTERPOS4FPROC) loadFunction(\"glRasterPos4f\");\n    glRasterPos4fv = (PFNGLRASTERPOS4FVPROC) loadFunction(\"glRasterPos4fv\");\n    glRasterPos4i = (PFNGLRASTERPOS4IPROC) loadFunction(\"glRasterPos4i\");\n    glRasterPos4iv = (PFNGLRASTERPOS4IVPROC) loadFunction(\"glRasterPos4iv\");\n    glRasterPos4s = (PFNGLRASTERPOS4SPROC) loadFunction(\"glRasterPos4s\");\n    glRasterPos4sv = (PFNGLRASTERPOS4SVPROC) loadFunction(\"glRasterPos4sv\");\n    glRasterSamplesEXT = (PFNGLRASTERSAMPLESEXTPROC) loadFunction(\"glRasterSamplesEXT\");\n    glReadBuffer = (PFNGLREADBUFFERPROC) loadFunction(\"glReadBuffer\");\n    glReadPixels = (PFNGLREADPIXELSPROC) loadFunction(\"glReadPixels\");\n    glReadnPixels = (PFNGLREADNPIXELSPROC) loadFunction(\"glReadnPixels\");\n    glReadnPixelsARB = (PFNGLREADNPIXELSARBPROC) loadFunction(\"glReadnPixelsARB\");\n    glReadnPixelsKHR = (PFNGLREADNPIXELSKHRPROC) loadFunction(\"glReadnPixelsKHR\");\n    glReleaseKeyedMutexWin32EXT = (PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC) loadFunction(\"glReleaseKeyedMutexWin32EXT\");\n    glRectd = (PFNGLRECTDPROC) loadFunction(\"glRectd\");\n    glRectdv = (PFNGLRECTDVPROC) loadFunction(\"glRectdv\");\n    glRectf = (PFNGLRECTFPROC) loadFunction(\"glRectf\");\n    glRectfv = (PFNGLRECTFVPROC) loadFunction(\"glRectfv\");\n    glRecti = (PFNGLRECTIPROC) loadFunction(\"glRecti\");\n    glRectiv = (PFNGLRECTIVPROC) loadFunction(\"glRectiv\");\n    glRects = (PFNGLRECTSPROC) loadFunction(\"glRects\");\n    glRectsv = (PFNGLRECTSVPROC) loadFunction(\"glRectsv\");\n    glReleaseShaderCompiler = (PFNGLRELEASESHADERCOMPILERPROC) loadFunction(\"glReleaseShaderCompiler\");\n    glRenderGpuMaskNV = (PFNGLRENDERGPUMASKNVPROC) loadFunction(\"glRenderGpuMaskNV\");\n    glRenderMode = (PFNGLRENDERMODEPROC) loadFunction(\"glRenderMode\");\n    glRenderbufferStorage = (PFNGLRENDERBUFFERSTORAGEPROC) loadFunction(\"glRenderbufferStorage\");\n    glRenderbufferStorageEXT = (PFNGLRENDERBUFFERSTORAGEEXTPROC) loadFunction(\"glRenderbufferStorageEXT\");\n    glRenderbufferStorageMultisample = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) loadFunction(\"glRenderbufferStorageMultisample\");\n    glRenderbufferStorageMultisampleAdvancedAMD = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC) loadFunction(\"glRenderbufferStorageMultisampleAdvancedAMD\");\n    glRenderbufferStorageMultisampleCoverageNV = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) loadFunction(\"glRenderbufferStorageMultisampleCoverageNV\");\n    glRenderbufferStorageMultisampleEXT = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) loadFunction(\"glRenderbufferStorageMultisampleEXT\");\n    glRequestResidentProgramsNV = (PFNGLREQUESTRESIDENTPROGRAMSNVPROC) loadFunction(\"glRequestResidentProgramsNV\");\n    glResetHistogram = (PFNGLRESETHISTOGRAMPROC) loadFunction(\"glResetHistogram\");\n    glResetHistogramEXT = (PFNGLRESETHISTOGRAMEXTPROC) loadFunction(\"glResetHistogramEXT\");\n    glResetMemoryObjectParameterNV = (PFNGLRESETMEMORYOBJECTPARAMETERNVPROC) loadFunction(\"glResetMemoryObjectParameterNV\");\n    glResetMinmax = (PFNGLRESETMINMAXPROC) loadFunction(\"glResetMinmax\");\n    glResetMinmaxEXT = (PFNGLRESETMINMAXEXTPROC) loadFunction(\"glResetMinmaxEXT\");\n    glResolveDepthValuesNV = (PFNGLRESOLVEDEPTHVALUESNVPROC) loadFunction(\"glResolveDepthValuesNV\");\n    glResumeTransformFeedback = (PFNGLRESUMETRANSFORMFEEDBACKPROC) loadFunction(\"glResumeTransformFeedback\");\n    glResumeTransformFeedbackNV = (PFNGLRESUMETRANSFORMFEEDBACKNVPROC) loadFunction(\"glResumeTransformFeedbackNV\");\n    glRotated = (PFNGLROTATEDPROC) loadFunction(\"glRotated\");\n    glRotatef = (PFNGLROTATEFPROC) loadFunction(\"glRotatef\");\n    glSampleCoverage = (PFNGLSAMPLECOVERAGEPROC) loadFunction(\"glSampleCoverage\");\n    glSampleCoverageARB = (PFNGLSAMPLECOVERAGEARBPROC) loadFunction(\"glSampleCoverageARB\");\n    glSampleMaskEXT = (PFNGLSAMPLEMASKEXTPROC) loadFunction(\"glSampleMaskEXT\");\n    glSampleMaskIndexedNV = (PFNGLSAMPLEMASKINDEXEDNVPROC) loadFunction(\"glSampleMaskIndexedNV\");\n    glSampleMaski = (PFNGLSAMPLEMASKIPROC) loadFunction(\"glSampleMaski\");\n    glSamplePatternEXT = (PFNGLSAMPLEPATTERNEXTPROC) loadFunction(\"glSamplePatternEXT\");\n    glSamplerParameterIiv = (PFNGLSAMPLERPARAMETERIIVPROC) loadFunction(\"glSamplerParameterIiv\");\n    glSamplerParameterIuiv = (PFNGLSAMPLERPARAMETERIUIVPROC) loadFunction(\"glSamplerParameterIuiv\");\n    glSamplerParameterf = (PFNGLSAMPLERPARAMETERFPROC) loadFunction(\"glSamplerParameterf\");\n    glSamplerParameterfv = (PFNGLSAMPLERPARAMETERFVPROC) loadFunction(\"glSamplerParameterfv\");\n    glSamplerParameteri = (PFNGLSAMPLERPARAMETERIPROC) loadFunction(\"glSamplerParameteri\");\n    glSamplerParameteriv = (PFNGLSAMPLERPARAMETERIVPROC) loadFunction(\"glSamplerParameteriv\");\n    glScaled = (PFNGLSCALEDPROC) loadFunction(\"glScaled\");\n    glScalef = (PFNGLSCALEFPROC) loadFunction(\"glScalef\");\n    glScissor = (PFNGLSCISSORPROC) loadFunction(\"glScissor\");\n    glScissorArrayv = (PFNGLSCISSORARRAYVPROC) loadFunction(\"glScissorArrayv\");\n    glScissorExclusiveArrayvNV = (PFNGLSCISSOREXCLUSIVEARRAYVNVPROC) loadFunction(\"glScissorExclusiveArrayvNV\");\n    glScissorExclusiveNV = (PFNGLSCISSOREXCLUSIVENVPROC) loadFunction(\"glScissorExclusiveNV\");\n    glScissorIndexed = (PFNGLSCISSORINDEXEDPROC) loadFunction(\"glScissorIndexed\");\n    glScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC) loadFunction(\"glScissorIndexedv\");\n    glSecondaryColor3b = (PFNGLSECONDARYCOLOR3BPROC) loadFunction(\"glSecondaryColor3b\");\n    glSecondaryColor3bEXT = (PFNGLSECONDARYCOLOR3BEXTPROC) loadFunction(\"glSecondaryColor3bEXT\");\n    glSecondaryColor3bv = (PFNGLSECONDARYCOLOR3BVPROC) loadFunction(\"glSecondaryColor3bv\");\n    glSecondaryColor3bvEXT = (PFNGLSECONDARYCOLOR3BVEXTPROC) loadFunction(\"glSecondaryColor3bvEXT\");\n    glSecondaryColor3d = (PFNGLSECONDARYCOLOR3DPROC) loadFunction(\"glSecondaryColor3d\");\n    glSecondaryColor3dEXT = (PFNGLSECONDARYCOLOR3DEXTPROC) loadFunction(\"glSecondaryColor3dEXT\");\n    glSecondaryColor3dv = (PFNGLSECONDARYCOLOR3DVPROC) loadFunction(\"glSecondaryColor3dv\");\n    glSecondaryColor3dvEXT = (PFNGLSECONDARYCOLOR3DVEXTPROC) loadFunction(\"glSecondaryColor3dvEXT\");\n    glSecondaryColor3f = (PFNGLSECONDARYCOLOR3FPROC) loadFunction(\"glSecondaryColor3f\");\n    glSecondaryColor3fEXT = (PFNGLSECONDARYCOLOR3FEXTPROC) loadFunction(\"glSecondaryColor3fEXT\");\n    glSecondaryColor3fv = (PFNGLSECONDARYCOLOR3FVPROC) loadFunction(\"glSecondaryColor3fv\");\n    glSecondaryColor3fvEXT = (PFNGLSECONDARYCOLOR3FVEXTPROC) loadFunction(\"glSecondaryColor3fvEXT\");\n    glSecondaryColor3hNV = (PFNGLSECONDARYCOLOR3HNVPROC) loadFunction(\"glSecondaryColor3hNV\");\n    glSecondaryColor3hvNV = (PFNGLSECONDARYCOLOR3HVNVPROC) loadFunction(\"glSecondaryColor3hvNV\");\n    glSecondaryColor3i = (PFNGLSECONDARYCOLOR3IPROC) loadFunction(\"glSecondaryColor3i\");\n    glSecondaryColor3iEXT = (PFNGLSECONDARYCOLOR3IEXTPROC) loadFunction(\"glSecondaryColor3iEXT\");\n    glSecondaryColor3iv = (PFNGLSECONDARYCOLOR3IVPROC) loadFunction(\"glSecondaryColor3iv\");\n    glSecondaryColor3ivEXT = (PFNGLSECONDARYCOLOR3IVEXTPROC) loadFunction(\"glSecondaryColor3ivEXT\");\n    glSecondaryColor3s = (PFNGLSECONDARYCOLOR3SPROC) loadFunction(\"glSecondaryColor3s\");\n    glSecondaryColor3sEXT = (PFNGLSECONDARYCOLOR3SEXTPROC) loadFunction(\"glSecondaryColor3sEXT\");\n    glSecondaryColor3sv = (PFNGLSECONDARYCOLOR3SVPROC) loadFunction(\"glSecondaryColor3sv\");\n    glSecondaryColor3svEXT = (PFNGLSECONDARYCOLOR3SVEXTPROC) loadFunction(\"glSecondaryColor3svEXT\");\n    glSecondaryColor3ub = (PFNGLSECONDARYCOLOR3UBPROC) loadFunction(\"glSecondaryColor3ub\");\n    glSecondaryColor3ubEXT = (PFNGLSECONDARYCOLOR3UBEXTPROC) loadFunction(\"glSecondaryColor3ubEXT\");\n    glSecondaryColor3ubv = (PFNGLSECONDARYCOLOR3UBVPROC) loadFunction(\"glSecondaryColor3ubv\");\n    glSecondaryColor3ubvEXT = (PFNGLSECONDARYCOLOR3UBVEXTPROC) loadFunction(\"glSecondaryColor3ubvEXT\");\n    glSecondaryColor3ui = (PFNGLSECONDARYCOLOR3UIPROC) loadFunction(\"glSecondaryColor3ui\");\n    glSecondaryColor3uiEXT = (PFNGLSECONDARYCOLOR3UIEXTPROC) loadFunction(\"glSecondaryColor3uiEXT\");\n    glSecondaryColor3uiv = (PFNGLSECONDARYCOLOR3UIVPROC) loadFunction(\"glSecondaryColor3uiv\");\n    glSecondaryColor3uivEXT = (PFNGLSECONDARYCOLOR3UIVEXTPROC) loadFunction(\"glSecondaryColor3uivEXT\");\n    glSecondaryColor3us = (PFNGLSECONDARYCOLOR3USPROC) loadFunction(\"glSecondaryColor3us\");\n    glSecondaryColor3usEXT = (PFNGLSECONDARYCOLOR3USEXTPROC) loadFunction(\"glSecondaryColor3usEXT\");\n    glSecondaryColor3usv = (PFNGLSECONDARYCOLOR3USVPROC) loadFunction(\"glSecondaryColor3usv\");\n    glSecondaryColor3usvEXT = (PFNGLSECONDARYCOLOR3USVEXTPROC) loadFunction(\"glSecondaryColor3usvEXT\");\n    glSecondaryColorFormatNV = (PFNGLSECONDARYCOLORFORMATNVPROC) loadFunction(\"glSecondaryColorFormatNV\");\n    glSecondaryColorP3ui = (PFNGLSECONDARYCOLORP3UIPROC) loadFunction(\"glSecondaryColorP3ui\");\n    glSecondaryColorP3uiv = (PFNGLSECONDARYCOLORP3UIVPROC) loadFunction(\"glSecondaryColorP3uiv\");\n    glSecondaryColorPointer = (PFNGLSECONDARYCOLORPOINTERPROC) loadFunction(\"glSecondaryColorPointer\");\n    glSecondaryColorPointerEXT = (PFNGLSECONDARYCOLORPOINTEREXTPROC) loadFunction(\"glSecondaryColorPointerEXT\");\n    glSelectBuffer = (PFNGLSELECTBUFFERPROC) loadFunction(\"glSelectBuffer\");\n    glSelectPerfMonitorCountersAMD = (PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) loadFunction(\"glSelectPerfMonitorCountersAMD\");\n    glSemaphoreParameterui64vEXT = (PFNGLSEMAPHOREPARAMETERUI64VEXTPROC) loadFunction(\"glSemaphoreParameterui64vEXT\");\n    glSeparableFilter2D = (PFNGLSEPARABLEFILTER2DPROC) loadFunction(\"glSeparableFilter2D\");\n    glSeparableFilter2DEXT = (PFNGLSEPARABLEFILTER2DEXTPROC) loadFunction(\"glSeparableFilter2DEXT\");\n    glSetFenceAPPLE = (PFNGLSETFENCEAPPLEPROC) loadFunction(\"glSetFenceAPPLE\");\n    glSetFenceNV = (PFNGLSETFENCENVPROC) loadFunction(\"glSetFenceNV\");\n    glSetInvariantEXT = (PFNGLSETINVARIANTEXTPROC) loadFunction(\"glSetInvariantEXT\");\n    glSetLocalConstantEXT = (PFNGLSETLOCALCONSTANTEXTPROC) loadFunction(\"glSetLocalConstantEXT\");\n    glSetMultisamplefvAMD = (PFNGLSETMULTISAMPLEFVAMDPROC) loadFunction(\"glSetMultisamplefvAMD\");\n    glShadeModel = (PFNGLSHADEMODELPROC) loadFunction(\"glShadeModel\");\n    glShaderBinary = (PFNGLSHADERBINARYPROC) loadFunction(\"glShaderBinary\");\n    glShaderOp1EXT = (PFNGLSHADEROP1EXTPROC) loadFunction(\"glShaderOp1EXT\");\n    glShaderOp2EXT = (PFNGLSHADEROP2EXTPROC) loadFunction(\"glShaderOp2EXT\");\n    glShaderOp3EXT = (PFNGLSHADEROP3EXTPROC) loadFunction(\"glShaderOp3EXT\");\n    glShaderSource = (PFNGLSHADERSOURCEPROC) loadFunction(\"glShaderSource\");\n    glShaderSourceARB = (PFNGLSHADERSOURCEARBPROC) loadFunction(\"glShaderSourceARB\");\n    glShaderStorageBlockBinding = (PFNGLSHADERSTORAGEBLOCKBINDINGPROC) loadFunction(\"glShaderStorageBlockBinding\");\n    glShadingRateImageBarrierNV = (PFNGLSHADINGRATEIMAGEBARRIERNVPROC) loadFunction(\"glShadingRateImageBarrierNV\");\n    glShadingRateImagePaletteNV = (PFNGLSHADINGRATEIMAGEPALETTENVPROC) loadFunction(\"glShadingRateImagePaletteNV\");\n    glShadingRateSampleOrderNV = (PFNGLSHADINGRATESAMPLEORDERNVPROC) loadFunction(\"glShadingRateSampleOrderNV\");\n    glShadingRateSampleOrderCustomNV = (PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC) loadFunction(\"glShadingRateSampleOrderCustomNV\");\n    glSignalSemaphoreEXT = (PFNGLSIGNALSEMAPHOREEXTPROC) loadFunction(\"glSignalSemaphoreEXT\");\n    glSpecializeShader = (PFNGLSPECIALIZESHADERPROC) loadFunction(\"glSpecializeShader\");\n    glSpecializeShaderARB = (PFNGLSPECIALIZESHADERARBPROC) loadFunction(\"glSpecializeShaderARB\");\n    glStateCaptureNV = (PFNGLSTATECAPTURENVPROC) loadFunction(\"glStateCaptureNV\");\n    glStencilClearTagEXT = (PFNGLSTENCILCLEARTAGEXTPROC) loadFunction(\"glStencilClearTagEXT\");\n    glStencilFillPathInstancedNV = (PFNGLSTENCILFILLPATHINSTANCEDNVPROC) loadFunction(\"glStencilFillPathInstancedNV\");\n    glStencilFillPathNV = (PFNGLSTENCILFILLPATHNVPROC) loadFunction(\"glStencilFillPathNV\");\n    glStencilFunc = (PFNGLSTENCILFUNCPROC) loadFunction(\"glStencilFunc\");\n    glStencilFuncSeparate = (PFNGLSTENCILFUNCSEPARATEPROC) loadFunction(\"glStencilFuncSeparate\");\n    glStencilMask = (PFNGLSTENCILMASKPROC) loadFunction(\"glStencilMask\");\n    glStencilMaskSeparate = (PFNGLSTENCILMASKSEPARATEPROC) loadFunction(\"glStencilMaskSeparate\");\n    glStencilOp = (PFNGLSTENCILOPPROC) loadFunction(\"glStencilOp\");\n    glStencilOpSeparate = (PFNGLSTENCILOPSEPARATEPROC) loadFunction(\"glStencilOpSeparate\");\n    glStencilOpValueAMD = (PFNGLSTENCILOPVALUEAMDPROC) loadFunction(\"glStencilOpValueAMD\");\n    glStencilStrokePathInstancedNV = (PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) loadFunction(\"glStencilStrokePathInstancedNV\");\n    glStencilStrokePathNV = (PFNGLSTENCILSTROKEPATHNVPROC) loadFunction(\"glStencilStrokePathNV\");\n    glStencilThenCoverFillPathInstancedNV = (PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) loadFunction(\"glStencilThenCoverFillPathInstancedNV\");\n    glStencilThenCoverFillPathNV = (PFNGLSTENCILTHENCOVERFILLPATHNVPROC) loadFunction(\"glStencilThenCoverFillPathNV\");\n    glStencilThenCoverStrokePathInstancedNV = (PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) loadFunction(\"glStencilThenCoverStrokePathInstancedNV\");\n    glStencilThenCoverStrokePathNV = (PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) loadFunction(\"glStencilThenCoverStrokePathNV\");\n    glSubpixelPrecisionBiasNV = (PFNGLSUBPIXELPRECISIONBIASNVPROC) loadFunction(\"glSubpixelPrecisionBiasNV\");\n    glSwizzleEXT = (PFNGLSWIZZLEEXTPROC) loadFunction(\"glSwizzleEXT\");\n    glSyncTextureINTEL = (PFNGLSYNCTEXTUREINTELPROC) loadFunction(\"glSyncTextureINTEL\");\n    glTangent3bEXT = (PFNGLTANGENT3BEXTPROC) loadFunction(\"glTangent3bEXT\");\n    glTangent3bvEXT = (PFNGLTANGENT3BVEXTPROC) loadFunction(\"glTangent3bvEXT\");\n    glTangent3dEXT = (PFNGLTANGENT3DEXTPROC) loadFunction(\"glTangent3dEXT\");\n    glTangent3dvEXT = (PFNGLTANGENT3DVEXTPROC) loadFunction(\"glTangent3dvEXT\");\n    glTangent3fEXT = (PFNGLTANGENT3FEXTPROC) loadFunction(\"glTangent3fEXT\");\n    glTangent3fvEXT = (PFNGLTANGENT3FVEXTPROC) loadFunction(\"glTangent3fvEXT\");\n    glTangent3iEXT = (PFNGLTANGENT3IEXTPROC) loadFunction(\"glTangent3iEXT\");\n    glTangent3ivEXT = (PFNGLTANGENT3IVEXTPROC) loadFunction(\"glTangent3ivEXT\");\n    glTangent3sEXT = (PFNGLTANGENT3SEXTPROC) loadFunction(\"glTangent3sEXT\");\n    glTangent3svEXT = (PFNGLTANGENT3SVEXTPROC) loadFunction(\"glTangent3svEXT\");\n    glTangentPointerEXT = (PFNGLTANGENTPOINTEREXTPROC) loadFunction(\"glTangentPointerEXT\");\n    glTessellationFactorAMD = (PFNGLTESSELLATIONFACTORAMDPROC) loadFunction(\"glTessellationFactorAMD\");\n    glTessellationModeAMD = (PFNGLTESSELLATIONMODEAMDPROC) loadFunction(\"glTessellationModeAMD\");\n    glTestFenceAPPLE = (PFNGLTESTFENCEAPPLEPROC) loadFunction(\"glTestFenceAPPLE\");\n    glTestFenceNV = (PFNGLTESTFENCENVPROC) loadFunction(\"glTestFenceNV\");\n    glTestObjectAPPLE = (PFNGLTESTOBJECTAPPLEPROC) loadFunction(\"glTestObjectAPPLE\");\n    glTexAttachMemoryNV = (PFNGLTEXATTACHMEMORYNVPROC) loadFunction(\"glTexAttachMemoryNV\");\n    glTexBuffer = (PFNGLTEXBUFFERPROC) loadFunction(\"glTexBuffer\");\n    glTexBufferARB = (PFNGLTEXBUFFERARBPROC) loadFunction(\"glTexBufferARB\");\n    glTexBufferEXT = (PFNGLTEXBUFFEREXTPROC) loadFunction(\"glTexBufferEXT\");\n    glTexBufferRange = (PFNGLTEXBUFFERRANGEPROC) loadFunction(\"glTexBufferRange\");\n    glTexCoord1d = (PFNGLTEXCOORD1DPROC) loadFunction(\"glTexCoord1d\");\n    glTexCoord1dv = (PFNGLTEXCOORD1DVPROC) loadFunction(\"glTexCoord1dv\");\n    glTexCoord1f = (PFNGLTEXCOORD1FPROC) loadFunction(\"glTexCoord1f\");\n    glTexCoord1fv = (PFNGLTEXCOORD1FVPROC) loadFunction(\"glTexCoord1fv\");\n    glTexCoord1hNV = (PFNGLTEXCOORD1HNVPROC) loadFunction(\"glTexCoord1hNV\");\n    glTexCoord1hvNV = (PFNGLTEXCOORD1HVNVPROC) loadFunction(\"glTexCoord1hvNV\");\n    glTexCoord1i = (PFNGLTEXCOORD1IPROC) loadFunction(\"glTexCoord1i\");\n    glTexCoord1iv = (PFNGLTEXCOORD1IVPROC) loadFunction(\"glTexCoord1iv\");\n    glTexCoord1s = (PFNGLTEXCOORD1SPROC) loadFunction(\"glTexCoord1s\");\n    glTexCoord1sv = (PFNGLTEXCOORD1SVPROC) loadFunction(\"glTexCoord1sv\");\n    glTexCoord2d = (PFNGLTEXCOORD2DPROC) loadFunction(\"glTexCoord2d\");\n    glTexCoord2dv = (PFNGLTEXCOORD2DVPROC) loadFunction(\"glTexCoord2dv\");\n    glTexCoord2f = (PFNGLTEXCOORD2FPROC) loadFunction(\"glTexCoord2f\");\n    glTexCoord2fv = (PFNGLTEXCOORD2FVPROC) loadFunction(\"glTexCoord2fv\");\n    glTexCoord2hNV = (PFNGLTEXCOORD2HNVPROC) loadFunction(\"glTexCoord2hNV\");\n    glTexCoord2hvNV = (PFNGLTEXCOORD2HVNVPROC) loadFunction(\"glTexCoord2hvNV\");\n    glTexCoord2i = (PFNGLTEXCOORD2IPROC) loadFunction(\"glTexCoord2i\");\n    glTexCoord2iv = (PFNGLTEXCOORD2IVPROC) loadFunction(\"glTexCoord2iv\");\n    glTexCoord2s = (PFNGLTEXCOORD2SPROC) loadFunction(\"glTexCoord2s\");\n    glTexCoord2sv = (PFNGLTEXCOORD2SVPROC) loadFunction(\"glTexCoord2sv\");\n    glTexCoord3d = (PFNGLTEXCOORD3DPROC) loadFunction(\"glTexCoord3d\");\n    glTexCoord3dv = (PFNGLTEXCOORD3DVPROC) loadFunction(\"glTexCoord3dv\");\n    glTexCoord3f = (PFNGLTEXCOORD3FPROC) loadFunction(\"glTexCoord3f\");\n    glTexCoord3fv = (PFNGLTEXCOORD3FVPROC) loadFunction(\"glTexCoord3fv\");\n    glTexCoord3hNV = (PFNGLTEXCOORD3HNVPROC) loadFunction(\"glTexCoord3hNV\");\n    glTexCoord3hvNV = (PFNGLTEXCOORD3HVNVPROC) loadFunction(\"glTexCoord3hvNV\");\n    glTexCoord3i = (PFNGLTEXCOORD3IPROC) loadFunction(\"glTexCoord3i\");\n    glTexCoord3iv = (PFNGLTEXCOORD3IVPROC) loadFunction(\"glTexCoord3iv\");\n    glTexCoord3s = (PFNGLTEXCOORD3SPROC) loadFunction(\"glTexCoord3s\");\n    glTexCoord3sv = (PFNGLTEXCOORD3SVPROC) loadFunction(\"glTexCoord3sv\");\n    glTexCoord4d = (PFNGLTEXCOORD4DPROC) loadFunction(\"glTexCoord4d\");\n    glTexCoord4dv = (PFNGLTEXCOORD4DVPROC) loadFunction(\"glTexCoord4dv\");\n    glTexCoord4f = (PFNGLTEXCOORD4FPROC) loadFunction(\"glTexCoord4f\");\n    glTexCoord4fv = (PFNGLTEXCOORD4FVPROC) loadFunction(\"glTexCoord4fv\");\n    glTexCoord4hNV = (PFNGLTEXCOORD4HNVPROC) loadFunction(\"glTexCoord4hNV\");\n    glTexCoord4hvNV = (PFNGLTEXCOORD4HVNVPROC) loadFunction(\"glTexCoord4hvNV\");\n    glTexCoord4i = (PFNGLTEXCOORD4IPROC) loadFunction(\"glTexCoord4i\");\n    glTexCoord4iv = (PFNGLTEXCOORD4IVPROC) loadFunction(\"glTexCoord4iv\");\n    glTexCoord4s = (PFNGLTEXCOORD4SPROC) loadFunction(\"glTexCoord4s\");\n    glTexCoord4sv = (PFNGLTEXCOORD4SVPROC) loadFunction(\"glTexCoord4sv\");\n    glTexCoordFormatNV = (PFNGLTEXCOORDFORMATNVPROC) loadFunction(\"glTexCoordFormatNV\");\n    glTexCoordP1ui = (PFNGLTEXCOORDP1UIPROC) loadFunction(\"glTexCoordP1ui\");\n    glTexCoordP1uiv = (PFNGLTEXCOORDP1UIVPROC) loadFunction(\"glTexCoordP1uiv\");\n    glTexCoordP2ui = (PFNGLTEXCOORDP2UIPROC) loadFunction(\"glTexCoordP2ui\");\n    glTexCoordP2uiv = (PFNGLTEXCOORDP2UIVPROC) loadFunction(\"glTexCoordP2uiv\");\n    glTexCoordP3ui = (PFNGLTEXCOORDP3UIPROC) loadFunction(\"glTexCoordP3ui\");\n    glTexCoordP3uiv = (PFNGLTEXCOORDP3UIVPROC) loadFunction(\"glTexCoordP3uiv\");\n    glTexCoordP4ui = (PFNGLTEXCOORDP4UIPROC) loadFunction(\"glTexCoordP4ui\");\n    glTexCoordP4uiv = (PFNGLTEXCOORDP4UIVPROC) loadFunction(\"glTexCoordP4uiv\");\n    glTexCoordPointer = (PFNGLTEXCOORDPOINTERPROC) loadFunction(\"glTexCoordPointer\");\n    glTexCoordPointerEXT = (PFNGLTEXCOORDPOINTEREXTPROC) loadFunction(\"glTexCoordPointerEXT\");\n    glTexCoordPointervINTEL = (PFNGLTEXCOORDPOINTERVINTELPROC) loadFunction(\"glTexCoordPointervINTEL\");\n    glTexEnvf = (PFNGLTEXENVFPROC) loadFunction(\"glTexEnvf\");\n    glTexEnvfv = (PFNGLTEXENVFVPROC) loadFunction(\"glTexEnvfv\");\n    glTexEnvi = (PFNGLTEXENVIPROC) loadFunction(\"glTexEnvi\");\n    glTexEnviv = (PFNGLTEXENVIVPROC) loadFunction(\"glTexEnviv\");\n    glTexGend = (PFNGLTEXGENDPROC) loadFunction(\"glTexGend\");\n    glTexGendv = (PFNGLTEXGENDVPROC) loadFunction(\"glTexGendv\");\n    glTexGenf = (PFNGLTEXGENFPROC) loadFunction(\"glTexGenf\");\n    glTexGenfv = (PFNGLTEXGENFVPROC) loadFunction(\"glTexGenfv\");\n    glTexGeni = (PFNGLTEXGENIPROC) loadFunction(\"glTexGeni\");\n    glTexGeniv = (PFNGLTEXGENIVPROC) loadFunction(\"glTexGeniv\");\n    glTexImage1D = (PFNGLTEXIMAGE1DPROC) loadFunction(\"glTexImage1D\");\n    glTexImage2D = (PFNGLTEXIMAGE2DPROC) loadFunction(\"glTexImage2D\");\n    glTexImage2DMultisample = (PFNGLTEXIMAGE2DMULTISAMPLEPROC) loadFunction(\"glTexImage2DMultisample\");\n    glTexImage2DMultisampleCoverageNV = (PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) loadFunction(\"glTexImage2DMultisampleCoverageNV\");\n    glTexImage3D = (PFNGLTEXIMAGE3DPROC) loadFunction(\"glTexImage3D\");\n    glTexImage3DEXT = (PFNGLTEXIMAGE3DEXTPROC) loadFunction(\"glTexImage3DEXT\");\n    glTexImage3DMultisample = (PFNGLTEXIMAGE3DMULTISAMPLEPROC) loadFunction(\"glTexImage3DMultisample\");\n    glTexImage3DMultisampleCoverageNV = (PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) loadFunction(\"glTexImage3DMultisampleCoverageNV\");\n    glTexPageCommitmentARB = (PFNGLTEXPAGECOMMITMENTARBPROC) loadFunction(\"glTexPageCommitmentARB\");\n    glTexParameterIiv = (PFNGLTEXPARAMETERIIVPROC) loadFunction(\"glTexParameterIiv\");\n    glTexParameterIivEXT = (PFNGLTEXPARAMETERIIVEXTPROC) loadFunction(\"glTexParameterIivEXT\");\n    glTexParameterIuiv = (PFNGLTEXPARAMETERIUIVPROC) loadFunction(\"glTexParameterIuiv\");\n    glTexParameterIuivEXT = (PFNGLTEXPARAMETERIUIVEXTPROC) loadFunction(\"glTexParameterIuivEXT\");\n    glTexParameterf = (PFNGLTEXPARAMETERFPROC) loadFunction(\"glTexParameterf\");\n    glTexParameterfv = (PFNGLTEXPARAMETERFVPROC) loadFunction(\"glTexParameterfv\");\n    glTexParameteri = (PFNGLTEXPARAMETERIPROC) loadFunction(\"glTexParameteri\");\n    glTexParameteriv = (PFNGLTEXPARAMETERIVPROC) loadFunction(\"glTexParameteriv\");\n    glTexRenderbufferNV = (PFNGLTEXRENDERBUFFERNVPROC) loadFunction(\"glTexRenderbufferNV\");\n    glTexStorage1D = (PFNGLTEXSTORAGE1DPROC) loadFunction(\"glTexStorage1D\");\n    glTexStorage2D = (PFNGLTEXSTORAGE2DPROC) loadFunction(\"glTexStorage2D\");\n    glTexStorage2DMultisample = (PFNGLTEXSTORAGE2DMULTISAMPLEPROC) loadFunction(\"glTexStorage2DMultisample\");\n    glTexStorage3D = (PFNGLTEXSTORAGE3DPROC) loadFunction(\"glTexStorage3D\");\n    glTexStorage3DMultisample = (PFNGLTEXSTORAGE3DMULTISAMPLEPROC) loadFunction(\"glTexStorage3DMultisample\");\n    glTexStorageMem1DEXT = (PFNGLTEXSTORAGEMEM1DEXTPROC) loadFunction(\"glTexStorageMem1DEXT\");\n    glTexStorageMem2DEXT = (PFNGLTEXSTORAGEMEM2DEXTPROC) loadFunction(\"glTexStorageMem2DEXT\");\n    glTexStorageMem2DMultisampleEXT = (PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC) loadFunction(\"glTexStorageMem2DMultisampleEXT\");\n    glTexStorageMem3DEXT = (PFNGLTEXSTORAGEMEM3DEXTPROC) loadFunction(\"glTexStorageMem3DEXT\");\n    glTexStorageMem3DMultisampleEXT = (PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC) loadFunction(\"glTexStorageMem3DMultisampleEXT\");\n    glTexStorageSparseAMD = (PFNGLTEXSTORAGESPARSEAMDPROC) loadFunction(\"glTexStorageSparseAMD\");\n    glTexSubImage1D = (PFNGLTEXSUBIMAGE1DPROC) loadFunction(\"glTexSubImage1D\");\n    glTexSubImage1DEXT = (PFNGLTEXSUBIMAGE1DEXTPROC) loadFunction(\"glTexSubImage1DEXT\");\n    glTexSubImage2D = (PFNGLTEXSUBIMAGE2DPROC) loadFunction(\"glTexSubImage2D\");\n    glTexSubImage2DEXT = (PFNGLTEXSUBIMAGE2DEXTPROC) loadFunction(\"glTexSubImage2DEXT\");\n    glTexSubImage3D = (PFNGLTEXSUBIMAGE3DPROC) loadFunction(\"glTexSubImage3D\");\n    glTexSubImage3DEXT = (PFNGLTEXSUBIMAGE3DEXTPROC) loadFunction(\"glTexSubImage3DEXT\");\n    glTextureAttachMemoryNV = (PFNGLTEXTUREATTACHMEMORYNVPROC) loadFunction(\"glTextureAttachMemoryNV\");\n    glTextureBarrier = (PFNGLTEXTUREBARRIERPROC) loadFunction(\"glTextureBarrier\");\n    glTextureBarrierNV = (PFNGLTEXTUREBARRIERNVPROC) loadFunction(\"glTextureBarrierNV\");\n    glTextureBuffer = (PFNGLTEXTUREBUFFERPROC) loadFunction(\"glTextureBuffer\");\n    glTextureBufferEXT = (PFNGLTEXTUREBUFFEREXTPROC) loadFunction(\"glTextureBufferEXT\");\n    glTextureBufferRange = (PFNGLTEXTUREBUFFERRANGEPROC) loadFunction(\"glTextureBufferRange\");\n    glTextureBufferRangeEXT = (PFNGLTEXTUREBUFFERRANGEEXTPROC) loadFunction(\"glTextureBufferRangeEXT\");\n    glTextureImage1DEXT = (PFNGLTEXTUREIMAGE1DEXTPROC) loadFunction(\"glTextureImage1DEXT\");\n    glTextureImage2DEXT = (PFNGLTEXTUREIMAGE2DEXTPROC) loadFunction(\"glTextureImage2DEXT\");\n    glTextureImage2DMultisampleCoverageNV = (PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) loadFunction(\"glTextureImage2DMultisampleCoverageNV\");\n    glTextureImage2DMultisampleNV = (PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) loadFunction(\"glTextureImage2DMultisampleNV\");\n    glTextureImage3DEXT = (PFNGLTEXTUREIMAGE3DEXTPROC) loadFunction(\"glTextureImage3DEXT\");\n    glTextureImage3DMultisampleCoverageNV = (PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) loadFunction(\"glTextureImage3DMultisampleCoverageNV\");\n    glTextureImage3DMultisampleNV = (PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) loadFunction(\"glTextureImage3DMultisampleNV\");\n    glTextureLightEXT = (PFNGLTEXTURELIGHTEXTPROC) loadFunction(\"glTextureLightEXT\");\n    glTextureMaterialEXT = (PFNGLTEXTUREMATERIALEXTPROC) loadFunction(\"glTextureMaterialEXT\");\n    glTextureNormalEXT = (PFNGLTEXTURENORMALEXTPROC) loadFunction(\"glTextureNormalEXT\");\n    glTexturePageCommitmentEXT = (PFNGLTEXTUREPAGECOMMITMENTEXTPROC) loadFunction(\"glTexturePageCommitmentEXT\");\n    glTextureParameterIiv = (PFNGLTEXTUREPARAMETERIIVPROC) loadFunction(\"glTextureParameterIiv\");\n    glTextureParameterIivEXT = (PFNGLTEXTUREPARAMETERIIVEXTPROC) loadFunction(\"glTextureParameterIivEXT\");\n    glTextureParameterIuiv = (PFNGLTEXTUREPARAMETERIUIVPROC) loadFunction(\"glTextureParameterIuiv\");\n    glTextureParameterIuivEXT = (PFNGLTEXTUREPARAMETERIUIVEXTPROC) loadFunction(\"glTextureParameterIuivEXT\");\n    glTextureParameterf = (PFNGLTEXTUREPARAMETERFPROC) loadFunction(\"glTextureParameterf\");\n    glTextureParameterfEXT = (PFNGLTEXTUREPARAMETERFEXTPROC) loadFunction(\"glTextureParameterfEXT\");\n    glTextureParameterfv = (PFNGLTEXTUREPARAMETERFVPROC) loadFunction(\"glTextureParameterfv\");\n    glTextureParameterfvEXT = (PFNGLTEXTUREPARAMETERFVEXTPROC) loadFunction(\"glTextureParameterfvEXT\");\n    glTextureParameteri = (PFNGLTEXTUREPARAMETERIPROC) loadFunction(\"glTextureParameteri\");\n    glTextureParameteriEXT = (PFNGLTEXTUREPARAMETERIEXTPROC) loadFunction(\"glTextureParameteriEXT\");\n    glTextureParameteriv = (PFNGLTEXTUREPARAMETERIVPROC) loadFunction(\"glTextureParameteriv\");\n    glTextureParameterivEXT = (PFNGLTEXTUREPARAMETERIVEXTPROC) loadFunction(\"glTextureParameterivEXT\");\n    glTextureRangeAPPLE = (PFNGLTEXTURERANGEAPPLEPROC) loadFunction(\"glTextureRangeAPPLE\");\n    glTextureRenderbufferEXT = (PFNGLTEXTURERENDERBUFFEREXTPROC) loadFunction(\"glTextureRenderbufferEXT\");\n    glTextureStorage1D = (PFNGLTEXTURESTORAGE1DPROC) loadFunction(\"glTextureStorage1D\");\n    glTextureStorage1DEXT = (PFNGLTEXTURESTORAGE1DEXTPROC) loadFunction(\"glTextureStorage1DEXT\");\n    glTextureStorage2D = (PFNGLTEXTURESTORAGE2DPROC) loadFunction(\"glTextureStorage2D\");\n    glTextureStorage2DEXT = (PFNGLTEXTURESTORAGE2DEXTPROC) loadFunction(\"glTextureStorage2DEXT\");\n    glTextureStorage2DMultisample = (PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) loadFunction(\"glTextureStorage2DMultisample\");\n    glTextureStorage2DMultisampleEXT = (PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) loadFunction(\"glTextureStorage2DMultisampleEXT\");\n    glTextureStorage3D = (PFNGLTEXTURESTORAGE3DPROC) loadFunction(\"glTextureStorage3D\");\n    glTextureStorage3DEXT = (PFNGLTEXTURESTORAGE3DEXTPROC) loadFunction(\"glTextureStorage3DEXT\");\n    glTextureStorage3DMultisample = (PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) loadFunction(\"glTextureStorage3DMultisample\");\n    glTextureStorage3DMultisampleEXT = (PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) loadFunction(\"glTextureStorage3DMultisampleEXT\");\n    glTextureStorageMem1DEXT = (PFNGLTEXTURESTORAGEMEM1DEXTPROC) loadFunction(\"glTextureStorageMem1DEXT\");\n    glTextureStorageMem2DEXT = (PFNGLTEXTURESTORAGEMEM2DEXTPROC) loadFunction(\"glTextureStorageMem2DEXT\");\n    glTextureStorageMem2DMultisampleEXT = (PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC) loadFunction(\"glTextureStorageMem2DMultisampleEXT\");\n    glTextureStorageMem3DEXT = (PFNGLTEXTURESTORAGEMEM3DEXTPROC) loadFunction(\"glTextureStorageMem3DEXT\");\n    glTextureStorageMem3DMultisampleEXT = (PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC) loadFunction(\"glTextureStorageMem3DMultisampleEXT\");\n    glTextureStorageSparseAMD = (PFNGLTEXTURESTORAGESPARSEAMDPROC) loadFunction(\"glTextureStorageSparseAMD\");\n    glTextureSubImage1D = (PFNGLTEXTURESUBIMAGE1DPROC) loadFunction(\"glTextureSubImage1D\");\n    glTextureSubImage1DEXT = (PFNGLTEXTURESUBIMAGE1DEXTPROC) loadFunction(\"glTextureSubImage1DEXT\");\n    glTextureSubImage2D = (PFNGLTEXTURESUBIMAGE2DPROC) loadFunction(\"glTextureSubImage2D\");\n    glTextureSubImage2DEXT = (PFNGLTEXTURESUBIMAGE2DEXTPROC) loadFunction(\"glTextureSubImage2DEXT\");\n    glTextureSubImage3D = (PFNGLTEXTURESUBIMAGE3DPROC) loadFunction(\"glTextureSubImage3D\");\n    glTextureSubImage3DEXT = (PFNGLTEXTURESUBIMAGE3DEXTPROC) loadFunction(\"glTextureSubImage3DEXT\");\n    glTextureView = (PFNGLTEXTUREVIEWPROC) loadFunction(\"glTextureView\");\n    glTrackMatrixNV = (PFNGLTRACKMATRIXNVPROC) loadFunction(\"glTrackMatrixNV\");\n    glTransformFeedbackAttribsNV = (PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) loadFunction(\"glTransformFeedbackAttribsNV\");\n    glTransformFeedbackBufferBase = (PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) loadFunction(\"glTransformFeedbackBufferBase\");\n    glTransformFeedbackBufferRange = (PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) loadFunction(\"glTransformFeedbackBufferRange\");\n    glTransformFeedbackStreamAttribsNV = (PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) loadFunction(\"glTransformFeedbackStreamAttribsNV\");\n    glTransformFeedbackVaryings = (PFNGLTRANSFORMFEEDBACKVARYINGSPROC) loadFunction(\"glTransformFeedbackVaryings\");\n    glTransformFeedbackVaryingsEXT = (PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) loadFunction(\"glTransformFeedbackVaryingsEXT\");\n    glTransformFeedbackVaryingsNV = (PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) loadFunction(\"glTransformFeedbackVaryingsNV\");\n    glTransformPathNV = (PFNGLTRANSFORMPATHNVPROC) loadFunction(\"glTransformPathNV\");\n    glTranslated = (PFNGLTRANSLATEDPROC) loadFunction(\"glTranslated\");\n    glTranslatef = (PFNGLTRANSLATEFPROC) loadFunction(\"glTranslatef\");\n    glUniform1d = (PFNGLUNIFORM1DPROC) loadFunction(\"glUniform1d\");\n    glUniform1dv = (PFNGLUNIFORM1DVPROC) loadFunction(\"glUniform1dv\");\n    glUniform1f = (PFNGLUNIFORM1FPROC) loadFunction(\"glUniform1f\");\n    glUniform1fARB = (PFNGLUNIFORM1FARBPROC) loadFunction(\"glUniform1fARB\");\n    glUniform1fv = (PFNGLUNIFORM1FVPROC) loadFunction(\"glUniform1fv\");\n    glUniform1fvARB = (PFNGLUNIFORM1FVARBPROC) loadFunction(\"glUniform1fvARB\");\n    glUniform1i = (PFNGLUNIFORM1IPROC) loadFunction(\"glUniform1i\");\n    glUniform1i64ARB = (PFNGLUNIFORM1I64ARBPROC) loadFunction(\"glUniform1i64ARB\");\n    glUniform1i64NV = (PFNGLUNIFORM1I64NVPROC) loadFunction(\"glUniform1i64NV\");\n    glUniform1i64vARB = (PFNGLUNIFORM1I64VARBPROC) loadFunction(\"glUniform1i64vARB\");\n    glUniform1i64vNV = (PFNGLUNIFORM1I64VNVPROC) loadFunction(\"glUniform1i64vNV\");\n    glUniform1iARB = (PFNGLUNIFORM1IARBPROC) loadFunction(\"glUniform1iARB\");\n    glUniform1iv = (PFNGLUNIFORM1IVPROC) loadFunction(\"glUniform1iv\");\n    glUniform1ivARB = (PFNGLUNIFORM1IVARBPROC) loadFunction(\"glUniform1ivARB\");\n    glUniform1ui = (PFNGLUNIFORM1UIPROC) loadFunction(\"glUniform1ui\");\n    glUniform1ui64ARB = (PFNGLUNIFORM1UI64ARBPROC) loadFunction(\"glUniform1ui64ARB\");\n    glUniform1ui64NV = (PFNGLUNIFORM1UI64NVPROC) loadFunction(\"glUniform1ui64NV\");\n    glUniform1ui64vARB = (PFNGLUNIFORM1UI64VARBPROC) loadFunction(\"glUniform1ui64vARB\");\n    glUniform1ui64vNV = (PFNGLUNIFORM1UI64VNVPROC) loadFunction(\"glUniform1ui64vNV\");\n    glUniform1uiEXT = (PFNGLUNIFORM1UIEXTPROC) loadFunction(\"glUniform1uiEXT\");\n    glUniform1uiv = (PFNGLUNIFORM1UIVPROC) loadFunction(\"glUniform1uiv\");\n    glUniform1uivEXT = (PFNGLUNIFORM1UIVEXTPROC) loadFunction(\"glUniform1uivEXT\");\n    glUniform2d = (PFNGLUNIFORM2DPROC) loadFunction(\"glUniform2d\");\n    glUniform2dv = (PFNGLUNIFORM2DVPROC) loadFunction(\"glUniform2dv\");\n    glUniform2f = (PFNGLUNIFORM2FPROC) loadFunction(\"glUniform2f\");\n    glUniform2fARB = (PFNGLUNIFORM2FARBPROC) loadFunction(\"glUniform2fARB\");\n    glUniform2fv = (PFNGLUNIFORM2FVPROC) loadFunction(\"glUniform2fv\");\n    glUniform2fvARB = (PFNGLUNIFORM2FVARBPROC) loadFunction(\"glUniform2fvARB\");\n    glUniform2i = (PFNGLUNIFORM2IPROC) loadFunction(\"glUniform2i\");\n    glUniform2i64ARB = (PFNGLUNIFORM2I64ARBPROC) loadFunction(\"glUniform2i64ARB\");\n    glUniform2i64NV = (PFNGLUNIFORM2I64NVPROC) loadFunction(\"glUniform2i64NV\");\n    glUniform2i64vARB = (PFNGLUNIFORM2I64VARBPROC) loadFunction(\"glUniform2i64vARB\");\n    glUniform2i64vNV = (PFNGLUNIFORM2I64VNVPROC) loadFunction(\"glUniform2i64vNV\");\n    glUniform2iARB = (PFNGLUNIFORM2IARBPROC) loadFunction(\"glUniform2iARB\");\n    glUniform2iv = (PFNGLUNIFORM2IVPROC) loadFunction(\"glUniform2iv\");\n    glUniform2ivARB = (PFNGLUNIFORM2IVARBPROC) loadFunction(\"glUniform2ivARB\");\n    glUniform2ui = (PFNGLUNIFORM2UIPROC) loadFunction(\"glUniform2ui\");\n    glUniform2ui64ARB = (PFNGLUNIFORM2UI64ARBPROC) loadFunction(\"glUniform2ui64ARB\");\n    glUniform2ui64NV = (PFNGLUNIFORM2UI64NVPROC) loadFunction(\"glUniform2ui64NV\");\n    glUniform2ui64vARB = (PFNGLUNIFORM2UI64VARBPROC) loadFunction(\"glUniform2ui64vARB\");\n    glUniform2ui64vNV = (PFNGLUNIFORM2UI64VNVPROC) loadFunction(\"glUniform2ui64vNV\");\n    glUniform2uiEXT = (PFNGLUNIFORM2UIEXTPROC) loadFunction(\"glUniform2uiEXT\");\n    glUniform2uiv = (PFNGLUNIFORM2UIVPROC) loadFunction(\"glUniform2uiv\");\n    glUniform2uivEXT = (PFNGLUNIFORM2UIVEXTPROC) loadFunction(\"glUniform2uivEXT\");\n    glUniform3d = (PFNGLUNIFORM3DPROC) loadFunction(\"glUniform3d\");\n    glUniform3dv = (PFNGLUNIFORM3DVPROC) loadFunction(\"glUniform3dv\");\n    glUniform3f = (PFNGLUNIFORM3FPROC) loadFunction(\"glUniform3f\");\n    glUniform3fARB = (PFNGLUNIFORM3FARBPROC) loadFunction(\"glUniform3fARB\");\n    glUniform3fv = (PFNGLUNIFORM3FVPROC) loadFunction(\"glUniform3fv\");\n    glUniform3fvARB = (PFNGLUNIFORM3FVARBPROC) loadFunction(\"glUniform3fvARB\");\n    glUniform3i = (PFNGLUNIFORM3IPROC) loadFunction(\"glUniform3i\");\n    glUniform3i64ARB = (PFNGLUNIFORM3I64ARBPROC) loadFunction(\"glUniform3i64ARB\");\n    glUniform3i64NV = (PFNGLUNIFORM3I64NVPROC) loadFunction(\"glUniform3i64NV\");\n    glUniform3i64vARB = (PFNGLUNIFORM3I64VARBPROC) loadFunction(\"glUniform3i64vARB\");\n    glUniform3i64vNV = (PFNGLUNIFORM3I64VNVPROC) loadFunction(\"glUniform3i64vNV\");\n    glUniform3iARB = (PFNGLUNIFORM3IARBPROC) loadFunction(\"glUniform3iARB\");\n    glUniform3iv = (PFNGLUNIFORM3IVPROC) loadFunction(\"glUniform3iv\");\n    glUniform3ivARB = (PFNGLUNIFORM3IVARBPROC) loadFunction(\"glUniform3ivARB\");\n    glUniform3ui = (PFNGLUNIFORM3UIPROC) loadFunction(\"glUniform3ui\");\n    glUniform3ui64ARB = (PFNGLUNIFORM3UI64ARBPROC) loadFunction(\"glUniform3ui64ARB\");\n    glUniform3ui64NV = (PFNGLUNIFORM3UI64NVPROC) loadFunction(\"glUniform3ui64NV\");\n    glUniform3ui64vARB = (PFNGLUNIFORM3UI64VARBPROC) loadFunction(\"glUniform3ui64vARB\");\n    glUniform3ui64vNV = (PFNGLUNIFORM3UI64VNVPROC) loadFunction(\"glUniform3ui64vNV\");\n    glUniform3uiEXT = (PFNGLUNIFORM3UIEXTPROC) loadFunction(\"glUniform3uiEXT\");\n    glUniform3uiv = (PFNGLUNIFORM3UIVPROC) loadFunction(\"glUniform3uiv\");\n    glUniform3uivEXT = (PFNGLUNIFORM3UIVEXTPROC) loadFunction(\"glUniform3uivEXT\");\n    glUniform4d = (PFNGLUNIFORM4DPROC) loadFunction(\"glUniform4d\");\n    glUniform4dv = (PFNGLUNIFORM4DVPROC) loadFunction(\"glUniform4dv\");\n    glUniform4f = (PFNGLUNIFORM4FPROC) loadFunction(\"glUniform4f\");\n    glUniform4fARB = (PFNGLUNIFORM4FARBPROC) loadFunction(\"glUniform4fARB\");\n    glUniform4fv = (PFNGLUNIFORM4FVPROC) loadFunction(\"glUniform4fv\");\n    glUniform4fvARB = (PFNGLUNIFORM4FVARBPROC) loadFunction(\"glUniform4fvARB\");\n    glUniform4i = (PFNGLUNIFORM4IPROC) loadFunction(\"glUniform4i\");\n    glUniform4i64ARB = (PFNGLUNIFORM4I64ARBPROC) loadFunction(\"glUniform4i64ARB\");\n    glUniform4i64NV = (PFNGLUNIFORM4I64NVPROC) loadFunction(\"glUniform4i64NV\");\n    glUniform4i64vARB = (PFNGLUNIFORM4I64VARBPROC) loadFunction(\"glUniform4i64vARB\");\n    glUniform4i64vNV = (PFNGLUNIFORM4I64VNVPROC) loadFunction(\"glUniform4i64vNV\");\n    glUniform4iARB = (PFNGLUNIFORM4IARBPROC) loadFunction(\"glUniform4iARB\");\n    glUniform4iv = (PFNGLUNIFORM4IVPROC) loadFunction(\"glUniform4iv\");\n    glUniform4ivARB = (PFNGLUNIFORM4IVARBPROC) loadFunction(\"glUniform4ivARB\");\n    glUniform4ui = (PFNGLUNIFORM4UIPROC) loadFunction(\"glUniform4ui\");\n    glUniform4ui64ARB = (PFNGLUNIFORM4UI64ARBPROC) loadFunction(\"glUniform4ui64ARB\");\n    glUniform4ui64NV = (PFNGLUNIFORM4UI64NVPROC) loadFunction(\"glUniform4ui64NV\");\n    glUniform4ui64vARB = (PFNGLUNIFORM4UI64VARBPROC) loadFunction(\"glUniform4ui64vARB\");\n    glUniform4ui64vNV = (PFNGLUNIFORM4UI64VNVPROC) loadFunction(\"glUniform4ui64vNV\");\n    glUniform4uiEXT = (PFNGLUNIFORM4UIEXTPROC) loadFunction(\"glUniform4uiEXT\");\n    glUniform4uiv = (PFNGLUNIFORM4UIVPROC) loadFunction(\"glUniform4uiv\");\n    glUniform4uivEXT = (PFNGLUNIFORM4UIVEXTPROC) loadFunction(\"glUniform4uivEXT\");\n    glUniformBlockBinding = (PFNGLUNIFORMBLOCKBINDINGPROC) loadFunction(\"glUniformBlockBinding\");\n    glUniformBufferEXT = (PFNGLUNIFORMBUFFEREXTPROC) loadFunction(\"glUniformBufferEXT\");\n    glUniformHandleui64ARB = (PFNGLUNIFORMHANDLEUI64ARBPROC) loadFunction(\"glUniformHandleui64ARB\");\n    glUniformHandleui64NV = (PFNGLUNIFORMHANDLEUI64NVPROC) loadFunction(\"glUniformHandleui64NV\");\n    glUniformHandleui64vARB = (PFNGLUNIFORMHANDLEUI64VARBPROC) loadFunction(\"glUniformHandleui64vARB\");\n    glUniformHandleui64vNV = (PFNGLUNIFORMHANDLEUI64VNVPROC) loadFunction(\"glUniformHandleui64vNV\");\n    glUniformMatrix2dv = (PFNGLUNIFORMMATRIX2DVPROC) loadFunction(\"glUniformMatrix2dv\");\n    glUniformMatrix2fv = (PFNGLUNIFORMMATRIX2FVPROC) loadFunction(\"glUniformMatrix2fv\");\n    glUniformMatrix2fvARB = (PFNGLUNIFORMMATRIX2FVARBPROC) loadFunction(\"glUniformMatrix2fvARB\");\n    glUniformMatrix2x3dv = (PFNGLUNIFORMMATRIX2X3DVPROC) loadFunction(\"glUniformMatrix2x3dv\");\n    glUniformMatrix2x3fv = (PFNGLUNIFORMMATRIX2X3FVPROC) loadFunction(\"glUniformMatrix2x3fv\");\n    glUniformMatrix2x4dv = (PFNGLUNIFORMMATRIX2X4DVPROC) loadFunction(\"glUniformMatrix2x4dv\");\n    glUniformMatrix2x4fv = (PFNGLUNIFORMMATRIX2X4FVPROC) loadFunction(\"glUniformMatrix2x4fv\");\n    glUniformMatrix3dv = (PFNGLUNIFORMMATRIX3DVPROC) loadFunction(\"glUniformMatrix3dv\");\n    glUniformMatrix3fv = (PFNGLUNIFORMMATRIX3FVPROC) loadFunction(\"glUniformMatrix3fv\");\n    glUniformMatrix3fvARB = (PFNGLUNIFORMMATRIX3FVARBPROC) loadFunction(\"glUniformMatrix3fvARB\");\n    glUniformMatrix3x2dv = (PFNGLUNIFORMMATRIX3X2DVPROC) loadFunction(\"glUniformMatrix3x2dv\");\n    glUniformMatrix3x2fv = (PFNGLUNIFORMMATRIX3X2FVPROC) loadFunction(\"glUniformMatrix3x2fv\");\n    glUniformMatrix3x4dv = (PFNGLUNIFORMMATRIX3X4DVPROC) loadFunction(\"glUniformMatrix3x4dv\");\n    glUniformMatrix3x4fv = (PFNGLUNIFORMMATRIX3X4FVPROC) loadFunction(\"glUniformMatrix3x4fv\");\n    glUniformMatrix4dv = (PFNGLUNIFORMMATRIX4DVPROC) loadFunction(\"glUniformMatrix4dv\");\n    glUniformMatrix4fv = (PFNGLUNIFORMMATRIX4FVPROC) loadFunction(\"glUniformMatrix4fv\");\n    glUniformMatrix4fvARB = (PFNGLUNIFORMMATRIX4FVARBPROC) loadFunction(\"glUniformMatrix4fvARB\");\n    glUniformMatrix4x2dv = (PFNGLUNIFORMMATRIX4X2DVPROC) loadFunction(\"glUniformMatrix4x2dv\");\n    glUniformMatrix4x2fv = (PFNGLUNIFORMMATRIX4X2FVPROC) loadFunction(\"glUniformMatrix4x2fv\");\n    glUniformMatrix4x3dv = (PFNGLUNIFORMMATRIX4X3DVPROC) loadFunction(\"glUniformMatrix4x3dv\");\n    glUniformMatrix4x3fv = (PFNGLUNIFORMMATRIX4X3FVPROC) loadFunction(\"glUniformMatrix4x3fv\");\n    glUniformSubroutinesuiv = (PFNGLUNIFORMSUBROUTINESUIVPROC) loadFunction(\"glUniformSubroutinesuiv\");\n    glUniformui64NV = (PFNGLUNIFORMUI64NVPROC) loadFunction(\"glUniformui64NV\");\n    glUniformui64vNV = (PFNGLUNIFORMUI64VNVPROC) loadFunction(\"glUniformui64vNV\");\n    glUnlockArraysEXT = (PFNGLUNLOCKARRAYSEXTPROC) loadFunction(\"glUnlockArraysEXT\");\n    glUnmapBuffer = (PFNGLUNMAPBUFFERPROC) loadFunction(\"glUnmapBuffer\");\n    glUnmapBufferARB = (PFNGLUNMAPBUFFERARBPROC) loadFunction(\"glUnmapBufferARB\");\n    glUnmapNamedBuffer = (PFNGLUNMAPNAMEDBUFFERPROC) loadFunction(\"glUnmapNamedBuffer\");\n    glUnmapNamedBufferEXT = (PFNGLUNMAPNAMEDBUFFEREXTPROC) loadFunction(\"glUnmapNamedBufferEXT\");\n    glUnmapTexture2DINTEL = (PFNGLUNMAPTEXTURE2DINTELPROC) loadFunction(\"glUnmapTexture2DINTEL\");\n    glUseProgram = (PFNGLUSEPROGRAMPROC) loadFunction(\"glUseProgram\");\n    glUseProgramObjectARB = (PFNGLUSEPROGRAMOBJECTARBPROC) loadFunction(\"glUseProgramObjectARB\");\n    glUseProgramStages = (PFNGLUSEPROGRAMSTAGESPROC) loadFunction(\"glUseProgramStages\");\n    glUseProgramStagesEXT = (PFNGLUSEPROGRAMSTAGESEXTPROC) loadFunction(\"glUseProgramStagesEXT\");\n    glUseShaderProgramEXT = (PFNGLUSESHADERPROGRAMEXTPROC) loadFunction(\"glUseShaderProgramEXT\");\n    glVDPAUFiniNV = (PFNGLVDPAUFININVPROC) loadFunction(\"glVDPAUFiniNV\");\n    glVDPAUGetSurfaceivNV = (PFNGLVDPAUGETSURFACEIVNVPROC) loadFunction(\"glVDPAUGetSurfaceivNV\");\n    glVDPAUInitNV = (PFNGLVDPAUINITNVPROC) loadFunction(\"glVDPAUInitNV\");\n    glVDPAUIsSurfaceNV = (PFNGLVDPAUISSURFACENVPROC) loadFunction(\"glVDPAUIsSurfaceNV\");\n    glVDPAUMapSurfacesNV = (PFNGLVDPAUMAPSURFACESNVPROC) loadFunction(\"glVDPAUMapSurfacesNV\");\n    glVDPAURegisterOutputSurfaceNV = (PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) loadFunction(\"glVDPAURegisterOutputSurfaceNV\");\n    glVDPAURegisterVideoSurfaceNV = (PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) loadFunction(\"glVDPAURegisterVideoSurfaceNV\");\n    glVDPAURegisterVideoSurfaceWithPictureStructureNV = (PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC) loadFunction(\"glVDPAURegisterVideoSurfaceWithPictureStructureNV\");\n    glVDPAUSurfaceAccessNV = (PFNGLVDPAUSURFACEACCESSNVPROC) loadFunction(\"glVDPAUSurfaceAccessNV\");\n    glVDPAUUnmapSurfacesNV = (PFNGLVDPAUUNMAPSURFACESNVPROC) loadFunction(\"glVDPAUUnmapSurfacesNV\");\n    glVDPAUUnregisterSurfaceNV = (PFNGLVDPAUUNREGISTERSURFACENVPROC) loadFunction(\"glVDPAUUnregisterSurfaceNV\");\n    glValidateProgram = (PFNGLVALIDATEPROGRAMPROC) loadFunction(\"glValidateProgram\");\n    glValidateProgramARB = (PFNGLVALIDATEPROGRAMARBPROC) loadFunction(\"glValidateProgramARB\");\n    glValidateProgramPipeline = (PFNGLVALIDATEPROGRAMPIPELINEPROC) loadFunction(\"glValidateProgramPipeline\");\n    glValidateProgramPipelineEXT = (PFNGLVALIDATEPROGRAMPIPELINEEXTPROC) loadFunction(\"glValidateProgramPipelineEXT\");\n    glVariantPointerEXT = (PFNGLVARIANTPOINTEREXTPROC) loadFunction(\"glVariantPointerEXT\");\n    glVariantbvEXT = (PFNGLVARIANTBVEXTPROC) loadFunction(\"glVariantbvEXT\");\n    glVariantdvEXT = (PFNGLVARIANTDVEXTPROC) loadFunction(\"glVariantdvEXT\");\n    glVariantfvEXT = (PFNGLVARIANTFVEXTPROC) loadFunction(\"glVariantfvEXT\");\n    glVariantivEXT = (PFNGLVARIANTIVEXTPROC) loadFunction(\"glVariantivEXT\");\n    glVariantsvEXT = (PFNGLVARIANTSVEXTPROC) loadFunction(\"glVariantsvEXT\");\n    glVariantubvEXT = (PFNGLVARIANTUBVEXTPROC) loadFunction(\"glVariantubvEXT\");\n    glVariantuivEXT = (PFNGLVARIANTUIVEXTPROC) loadFunction(\"glVariantuivEXT\");\n    glVariantusvEXT = (PFNGLVARIANTUSVEXTPROC) loadFunction(\"glVariantusvEXT\");\n    glVertex2d = (PFNGLVERTEX2DPROC) loadFunction(\"glVertex2d\");\n    glVertex2dv = (PFNGLVERTEX2DVPROC) loadFunction(\"glVertex2dv\");\n    glVertex2f = (PFNGLVERTEX2FPROC) loadFunction(\"glVertex2f\");\n    glVertex2fv = (PFNGLVERTEX2FVPROC) loadFunction(\"glVertex2fv\");\n    glVertex2hNV = (PFNGLVERTEX2HNVPROC) loadFunction(\"glVertex2hNV\");\n    glVertex2hvNV = (PFNGLVERTEX2HVNVPROC) loadFunction(\"glVertex2hvNV\");\n    glVertex2i = (PFNGLVERTEX2IPROC) loadFunction(\"glVertex2i\");\n    glVertex2iv = (PFNGLVERTEX2IVPROC) loadFunction(\"glVertex2iv\");\n    glVertex2s = (PFNGLVERTEX2SPROC) loadFunction(\"glVertex2s\");\n    glVertex2sv = (PFNGLVERTEX2SVPROC) loadFunction(\"glVertex2sv\");\n    glVertex3d = (PFNGLVERTEX3DPROC) loadFunction(\"glVertex3d\");\n    glVertex3dv = (PFNGLVERTEX3DVPROC) loadFunction(\"glVertex3dv\");\n    glVertex3f = (PFNGLVERTEX3FPROC) loadFunction(\"glVertex3f\");\n    glVertex3fv = (PFNGLVERTEX3FVPROC) loadFunction(\"glVertex3fv\");\n    glVertex3hNV = (PFNGLVERTEX3HNVPROC) loadFunction(\"glVertex3hNV\");\n    glVertex3hvNV = (PFNGLVERTEX3HVNVPROC) loadFunction(\"glVertex3hvNV\");\n    glVertex3i = (PFNGLVERTEX3IPROC) loadFunction(\"glVertex3i\");\n    glVertex3iv = (PFNGLVERTEX3IVPROC) loadFunction(\"glVertex3iv\");\n    glVertex3s = (PFNGLVERTEX3SPROC) loadFunction(\"glVertex3s\");\n    glVertex3sv = (PFNGLVERTEX3SVPROC) loadFunction(\"glVertex3sv\");\n    glVertex4d = (PFNGLVERTEX4DPROC) loadFunction(\"glVertex4d\");\n    glVertex4dv = (PFNGLVERTEX4DVPROC) loadFunction(\"glVertex4dv\");\n    glVertex4f = (PFNGLVERTEX4FPROC) loadFunction(\"glVertex4f\");\n    glVertex4fv = (PFNGLVERTEX4FVPROC) loadFunction(\"glVertex4fv\");\n    glVertex4hNV = (PFNGLVERTEX4HNVPROC) loadFunction(\"glVertex4hNV\");\n    glVertex4hvNV = (PFNGLVERTEX4HVNVPROC) loadFunction(\"glVertex4hvNV\");\n    glVertex4i = (PFNGLVERTEX4IPROC) loadFunction(\"glVertex4i\");\n    glVertex4iv = (PFNGLVERTEX4IVPROC) loadFunction(\"glVertex4iv\");\n    glVertex4s = (PFNGLVERTEX4SPROC) loadFunction(\"glVertex4s\");\n    glVertex4sv = (PFNGLVERTEX4SVPROC) loadFunction(\"glVertex4sv\");\n    glVertexArrayAttribBinding = (PFNGLVERTEXARRAYATTRIBBINDINGPROC) loadFunction(\"glVertexArrayAttribBinding\");\n    glVertexArrayAttribFormat = (PFNGLVERTEXARRAYATTRIBFORMATPROC) loadFunction(\"glVertexArrayAttribFormat\");\n    glVertexArrayAttribIFormat = (PFNGLVERTEXARRAYATTRIBIFORMATPROC) loadFunction(\"glVertexArrayAttribIFormat\");\n    glVertexArrayAttribLFormat = (PFNGLVERTEXARRAYATTRIBLFORMATPROC) loadFunction(\"glVertexArrayAttribLFormat\");\n    glVertexArrayBindVertexBufferEXT = (PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) loadFunction(\"glVertexArrayBindVertexBufferEXT\");\n    glVertexArrayBindingDivisor = (PFNGLVERTEXARRAYBINDINGDIVISORPROC) loadFunction(\"glVertexArrayBindingDivisor\");\n    glVertexArrayColorOffsetEXT = (PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) loadFunction(\"glVertexArrayColorOffsetEXT\");\n    glVertexArrayEdgeFlagOffsetEXT = (PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) loadFunction(\"glVertexArrayEdgeFlagOffsetEXT\");\n    glVertexArrayElementBuffer = (PFNGLVERTEXARRAYELEMENTBUFFERPROC) loadFunction(\"glVertexArrayElementBuffer\");\n    glVertexArrayFogCoordOffsetEXT = (PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) loadFunction(\"glVertexArrayFogCoordOffsetEXT\");\n    glVertexArrayIndexOffsetEXT = (PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) loadFunction(\"glVertexArrayIndexOffsetEXT\");\n    glVertexArrayMultiTexCoordOffsetEXT = (PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) loadFunction(\"glVertexArrayMultiTexCoordOffsetEXT\");\n    glVertexArrayNormalOffsetEXT = (PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) loadFunction(\"glVertexArrayNormalOffsetEXT\");\n    glVertexArrayParameteriAPPLE = (PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) loadFunction(\"glVertexArrayParameteriAPPLE\");\n    glVertexArrayRangeAPPLE = (PFNGLVERTEXARRAYRANGEAPPLEPROC) loadFunction(\"glVertexArrayRangeAPPLE\");\n    glVertexArrayRangeNV = (PFNGLVERTEXARRAYRANGENVPROC) loadFunction(\"glVertexArrayRangeNV\");\n    glVertexArraySecondaryColorOffsetEXT = (PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) loadFunction(\"glVertexArraySecondaryColorOffsetEXT\");\n    glVertexArrayTexCoordOffsetEXT = (PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) loadFunction(\"glVertexArrayTexCoordOffsetEXT\");\n    glVertexArrayVertexAttribBindingEXT = (PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) loadFunction(\"glVertexArrayVertexAttribBindingEXT\");\n    glVertexArrayVertexAttribDivisorEXT = (PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) loadFunction(\"glVertexArrayVertexAttribDivisorEXT\");\n    glVertexArrayVertexAttribFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) loadFunction(\"glVertexArrayVertexAttribFormatEXT\");\n    glVertexArrayVertexAttribIFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) loadFunction(\"glVertexArrayVertexAttribIFormatEXT\");\n    glVertexArrayVertexAttribIOffsetEXT = (PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) loadFunction(\"glVertexArrayVertexAttribIOffsetEXT\");\n    glVertexArrayVertexAttribLFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) loadFunction(\"glVertexArrayVertexAttribLFormatEXT\");\n    glVertexArrayVertexAttribLOffsetEXT = (PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) loadFunction(\"glVertexArrayVertexAttribLOffsetEXT\");\n    glVertexArrayVertexAttribOffsetEXT = (PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) loadFunction(\"glVertexArrayVertexAttribOffsetEXT\");\n    glVertexArrayVertexBindingDivisorEXT = (PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) loadFunction(\"glVertexArrayVertexBindingDivisorEXT\");\n    glVertexArrayVertexBuffer = (PFNGLVERTEXARRAYVERTEXBUFFERPROC) loadFunction(\"glVertexArrayVertexBuffer\");\n    glVertexArrayVertexBuffers = (PFNGLVERTEXARRAYVERTEXBUFFERSPROC) loadFunction(\"glVertexArrayVertexBuffers\");\n    glVertexArrayVertexOffsetEXT = (PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) loadFunction(\"glVertexArrayVertexOffsetEXT\");\n    glVertexAttrib1d = (PFNGLVERTEXATTRIB1DPROC) loadFunction(\"glVertexAttrib1d\");\n    glVertexAttrib1dARB = (PFNGLVERTEXATTRIB1DARBPROC) loadFunction(\"glVertexAttrib1dARB\");\n    glVertexAttrib1dNV = (PFNGLVERTEXATTRIB1DNVPROC) loadFunction(\"glVertexAttrib1dNV\");\n    glVertexAttrib1dv = (PFNGLVERTEXATTRIB1DVPROC) loadFunction(\"glVertexAttrib1dv\");\n    glVertexAttrib1dvARB = (PFNGLVERTEXATTRIB1DVARBPROC) loadFunction(\"glVertexAttrib1dvARB\");\n    glVertexAttrib1dvNV = (PFNGLVERTEXATTRIB1DVNVPROC) loadFunction(\"glVertexAttrib1dvNV\");\n    glVertexAttrib1f = (PFNGLVERTEXATTRIB1FPROC) loadFunction(\"glVertexAttrib1f\");\n    glVertexAttrib1fARB = (PFNGLVERTEXATTRIB1FARBPROC) loadFunction(\"glVertexAttrib1fARB\");\n    glVertexAttrib1fNV = (PFNGLVERTEXATTRIB1FNVPROC) loadFunction(\"glVertexAttrib1fNV\");\n    glVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC) loadFunction(\"glVertexAttrib1fv\");\n    glVertexAttrib1fvARB = (PFNGLVERTEXATTRIB1FVARBPROC) loadFunction(\"glVertexAttrib1fvARB\");\n    glVertexAttrib1fvNV = (PFNGLVERTEXATTRIB1FVNVPROC) loadFunction(\"glVertexAttrib1fvNV\");\n    glVertexAttrib1hNV = (PFNGLVERTEXATTRIB1HNVPROC) loadFunction(\"glVertexAttrib1hNV\");\n    glVertexAttrib1hvNV = (PFNGLVERTEXATTRIB1HVNVPROC) loadFunction(\"glVertexAttrib1hvNV\");\n    glVertexAttrib1s = (PFNGLVERTEXATTRIB1SPROC) loadFunction(\"glVertexAttrib1s\");\n    glVertexAttrib1sARB = (PFNGLVERTEXATTRIB1SARBPROC) loadFunction(\"glVertexAttrib1sARB\");\n    glVertexAttrib1sNV = (PFNGLVERTEXATTRIB1SNVPROC) loadFunction(\"glVertexAttrib1sNV\");\n    glVertexAttrib1sv = (PFNGLVERTEXATTRIB1SVPROC) loadFunction(\"glVertexAttrib1sv\");\n    glVertexAttrib1svARB = (PFNGLVERTEXATTRIB1SVARBPROC) loadFunction(\"glVertexAttrib1svARB\");\n    glVertexAttrib1svNV = (PFNGLVERTEXATTRIB1SVNVPROC) loadFunction(\"glVertexAttrib1svNV\");\n    glVertexAttrib2d = (PFNGLVERTEXATTRIB2DPROC) loadFunction(\"glVertexAttrib2d\");\n    glVertexAttrib2dARB = (PFNGLVERTEXATTRIB2DARBPROC) loadFunction(\"glVertexAttrib2dARB\");\n    glVertexAttrib2dNV = (PFNGLVERTEXATTRIB2DNVPROC) loadFunction(\"glVertexAttrib2dNV\");\n    glVertexAttrib2dv = (PFNGLVERTEXATTRIB2DVPROC) loadFunction(\"glVertexAttrib2dv\");\n    glVertexAttrib2dvARB = (PFNGLVERTEXATTRIB2DVARBPROC) loadFunction(\"glVertexAttrib2dvARB\");\n    glVertexAttrib2dvNV = (PFNGLVERTEXATTRIB2DVNVPROC) loadFunction(\"glVertexAttrib2dvNV\");\n    glVertexAttrib2f = (PFNGLVERTEXATTRIB2FPROC) loadFunction(\"glVertexAttrib2f\");\n    glVertexAttrib2fARB = (PFNGLVERTEXATTRIB2FARBPROC) loadFunction(\"glVertexAttrib2fARB\");\n    glVertexAttrib2fNV = (PFNGLVERTEXATTRIB2FNVPROC) loadFunction(\"glVertexAttrib2fNV\");\n    glVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC) loadFunction(\"glVertexAttrib2fv\");\n    glVertexAttrib2fvARB = (PFNGLVERTEXATTRIB2FVARBPROC) loadFunction(\"glVertexAttrib2fvARB\");\n    glVertexAttrib2fvNV = (PFNGLVERTEXATTRIB2FVNVPROC) loadFunction(\"glVertexAttrib2fvNV\");\n    glVertexAttrib2hNV = (PFNGLVERTEXATTRIB2HNVPROC) loadFunction(\"glVertexAttrib2hNV\");\n    glVertexAttrib2hvNV = (PFNGLVERTEXATTRIB2HVNVPROC) loadFunction(\"glVertexAttrib2hvNV\");\n    glVertexAttrib2s = (PFNGLVERTEXATTRIB2SPROC) loadFunction(\"glVertexAttrib2s\");\n    glVertexAttrib2sARB = (PFNGLVERTEXATTRIB2SARBPROC) loadFunction(\"glVertexAttrib2sARB\");\n    glVertexAttrib2sNV = (PFNGLVERTEXATTRIB2SNVPROC) loadFunction(\"glVertexAttrib2sNV\");\n    glVertexAttrib2sv = (PFNGLVERTEXATTRIB2SVPROC) loadFunction(\"glVertexAttrib2sv\");\n    glVertexAttrib2svARB = (PFNGLVERTEXATTRIB2SVARBPROC) loadFunction(\"glVertexAttrib2svARB\");\n    glVertexAttrib2svNV = (PFNGLVERTEXATTRIB2SVNVPROC) loadFunction(\"glVertexAttrib2svNV\");\n    glVertexAttrib3d = (PFNGLVERTEXATTRIB3DPROC) loadFunction(\"glVertexAttrib3d\");\n    glVertexAttrib3dARB = (PFNGLVERTEXATTRIB3DARBPROC) loadFunction(\"glVertexAttrib3dARB\");\n    glVertexAttrib3dNV = (PFNGLVERTEXATTRIB3DNVPROC) loadFunction(\"glVertexAttrib3dNV\");\n    glVertexAttrib3dv = (PFNGLVERTEXATTRIB3DVPROC) loadFunction(\"glVertexAttrib3dv\");\n    glVertexAttrib3dvARB = (PFNGLVERTEXATTRIB3DVARBPROC) loadFunction(\"glVertexAttrib3dvARB\");\n    glVertexAttrib3dvNV = (PFNGLVERTEXATTRIB3DVNVPROC) loadFunction(\"glVertexAttrib3dvNV\");\n    glVertexAttrib3f = (PFNGLVERTEXATTRIB3FPROC) loadFunction(\"glVertexAttrib3f\");\n    glVertexAttrib3fARB = (PFNGLVERTEXATTRIB3FARBPROC) loadFunction(\"glVertexAttrib3fARB\");\n    glVertexAttrib3fNV = (PFNGLVERTEXATTRIB3FNVPROC) loadFunction(\"glVertexAttrib3fNV\");\n    glVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC) loadFunction(\"glVertexAttrib3fv\");\n    glVertexAttrib3fvARB = (PFNGLVERTEXATTRIB3FVARBPROC) loadFunction(\"glVertexAttrib3fvARB\");\n    glVertexAttrib3fvNV = (PFNGLVERTEXATTRIB3FVNVPROC) loadFunction(\"glVertexAttrib3fvNV\");\n    glVertexAttrib3hNV = (PFNGLVERTEXATTRIB3HNVPROC) loadFunction(\"glVertexAttrib3hNV\");\n    glVertexAttrib3hvNV = (PFNGLVERTEXATTRIB3HVNVPROC) loadFunction(\"glVertexAttrib3hvNV\");\n    glVertexAttrib3s = (PFNGLVERTEXATTRIB3SPROC) loadFunction(\"glVertexAttrib3s\");\n    glVertexAttrib3sARB = (PFNGLVERTEXATTRIB3SARBPROC) loadFunction(\"glVertexAttrib3sARB\");\n    glVertexAttrib3sNV = (PFNGLVERTEXATTRIB3SNVPROC) loadFunction(\"glVertexAttrib3sNV\");\n    glVertexAttrib3sv = (PFNGLVERTEXATTRIB3SVPROC) loadFunction(\"glVertexAttrib3sv\");\n    glVertexAttrib3svARB = (PFNGLVERTEXATTRIB3SVARBPROC) loadFunction(\"glVertexAttrib3svARB\");\n    glVertexAttrib3svNV = (PFNGLVERTEXATTRIB3SVNVPROC) loadFunction(\"glVertexAttrib3svNV\");\n    glVertexAttrib4Nbv = (PFNGLVERTEXATTRIB4NBVPROC) loadFunction(\"glVertexAttrib4Nbv\");\n    glVertexAttrib4NbvARB = (PFNGLVERTEXATTRIB4NBVARBPROC) loadFunction(\"glVertexAttrib4NbvARB\");\n    glVertexAttrib4Niv = (PFNGLVERTEXATTRIB4NIVPROC) loadFunction(\"glVertexAttrib4Niv\");\n    glVertexAttrib4NivARB = (PFNGLVERTEXATTRIB4NIVARBPROC) loadFunction(\"glVertexAttrib4NivARB\");\n    glVertexAttrib4Nsv = (PFNGLVERTEXATTRIB4NSVPROC) loadFunction(\"glVertexAttrib4Nsv\");\n    glVertexAttrib4NsvARB = (PFNGLVERTEXATTRIB4NSVARBPROC) loadFunction(\"glVertexAttrib4NsvARB\");\n    glVertexAttrib4Nub = (PFNGLVERTEXATTRIB4NUBPROC) loadFunction(\"glVertexAttrib4Nub\");\n    glVertexAttrib4NubARB = (PFNGLVERTEXATTRIB4NUBARBPROC) loadFunction(\"glVertexAttrib4NubARB\");\n    glVertexAttrib4Nubv = (PFNGLVERTEXATTRIB4NUBVPROC) loadFunction(\"glVertexAttrib4Nubv\");\n    glVertexAttrib4NubvARB = (PFNGLVERTEXATTRIB4NUBVARBPROC) loadFunction(\"glVertexAttrib4NubvARB\");\n    glVertexAttrib4Nuiv = (PFNGLVERTEXATTRIB4NUIVPROC) loadFunction(\"glVertexAttrib4Nuiv\");\n    glVertexAttrib4NuivARB = (PFNGLVERTEXATTRIB4NUIVARBPROC) loadFunction(\"glVertexAttrib4NuivARB\");\n    glVertexAttrib4Nusv = (PFNGLVERTEXATTRIB4NUSVPROC) loadFunction(\"glVertexAttrib4Nusv\");\n    glVertexAttrib4NusvARB = (PFNGLVERTEXATTRIB4NUSVARBPROC) loadFunction(\"glVertexAttrib4NusvARB\");\n    glVertexAttrib4bv = (PFNGLVERTEXATTRIB4BVPROC) loadFunction(\"glVertexAttrib4bv\");\n    glVertexAttrib4bvARB = (PFNGLVERTEXATTRIB4BVARBPROC) loadFunction(\"glVertexAttrib4bvARB\");\n    glVertexAttrib4d = (PFNGLVERTEXATTRIB4DPROC) loadFunction(\"glVertexAttrib4d\");\n    glVertexAttrib4dARB = (PFNGLVERTEXATTRIB4DARBPROC) loadFunction(\"glVertexAttrib4dARB\");\n    glVertexAttrib4dNV = (PFNGLVERTEXATTRIB4DNVPROC) loadFunction(\"glVertexAttrib4dNV\");\n    glVertexAttrib4dv = (PFNGLVERTEXATTRIB4DVPROC) loadFunction(\"glVertexAttrib4dv\");\n    glVertexAttrib4dvARB = (PFNGLVERTEXATTRIB4DVARBPROC) loadFunction(\"glVertexAttrib4dvARB\");\n    glVertexAttrib4dvNV = (PFNGLVERTEXATTRIB4DVNVPROC) loadFunction(\"glVertexAttrib4dvNV\");\n    glVertexAttrib4f = (PFNGLVERTEXATTRIB4FPROC) loadFunction(\"glVertexAttrib4f\");\n    glVertexAttrib4fARB = (PFNGLVERTEXATTRIB4FARBPROC) loadFunction(\"glVertexAttrib4fARB\");\n    glVertexAttrib4fNV = (PFNGLVERTEXATTRIB4FNVPROC) loadFunction(\"glVertexAttrib4fNV\");\n    glVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC) loadFunction(\"glVertexAttrib4fv\");\n    glVertexAttrib4fvARB = (PFNGLVERTEXATTRIB4FVARBPROC) loadFunction(\"glVertexAttrib4fvARB\");\n    glVertexAttrib4fvNV = (PFNGLVERTEXATTRIB4FVNVPROC) loadFunction(\"glVertexAttrib4fvNV\");\n    glVertexAttrib4hNV = (PFNGLVERTEXATTRIB4HNVPROC) loadFunction(\"glVertexAttrib4hNV\");\n    glVertexAttrib4hvNV = (PFNGLVERTEXATTRIB4HVNVPROC) loadFunction(\"glVertexAttrib4hvNV\");\n    glVertexAttrib4iv = (PFNGLVERTEXATTRIB4IVPROC) loadFunction(\"glVertexAttrib4iv\");\n    glVertexAttrib4ivARB = (PFNGLVERTEXATTRIB4IVARBPROC) loadFunction(\"glVertexAttrib4ivARB\");\n    glVertexAttrib4s = (PFNGLVERTEXATTRIB4SPROC) loadFunction(\"glVertexAttrib4s\");\n    glVertexAttrib4sARB = (PFNGLVERTEXATTRIB4SARBPROC) loadFunction(\"glVertexAttrib4sARB\");\n    glVertexAttrib4sNV = (PFNGLVERTEXATTRIB4SNVPROC) loadFunction(\"glVertexAttrib4sNV\");\n    glVertexAttrib4sv = (PFNGLVERTEXATTRIB4SVPROC) loadFunction(\"glVertexAttrib4sv\");\n    glVertexAttrib4svARB = (PFNGLVERTEXATTRIB4SVARBPROC) loadFunction(\"glVertexAttrib4svARB\");\n    glVertexAttrib4svNV = (PFNGLVERTEXATTRIB4SVNVPROC) loadFunction(\"glVertexAttrib4svNV\");\n    glVertexAttrib4ubNV = (PFNGLVERTEXATTRIB4UBNVPROC) loadFunction(\"glVertexAttrib4ubNV\");\n    glVertexAttrib4ubv = (PFNGLVERTEXATTRIB4UBVPROC) loadFunction(\"glVertexAttrib4ubv\");\n    glVertexAttrib4ubvARB = (PFNGLVERTEXATTRIB4UBVARBPROC) loadFunction(\"glVertexAttrib4ubvARB\");\n    glVertexAttrib4ubvNV = (PFNGLVERTEXATTRIB4UBVNVPROC) loadFunction(\"glVertexAttrib4ubvNV\");\n    glVertexAttrib4uiv = (PFNGLVERTEXATTRIB4UIVPROC) loadFunction(\"glVertexAttrib4uiv\");\n    glVertexAttrib4uivARB = (PFNGLVERTEXATTRIB4UIVARBPROC) loadFunction(\"glVertexAttrib4uivARB\");\n    glVertexAttrib4usv = (PFNGLVERTEXATTRIB4USVPROC) loadFunction(\"glVertexAttrib4usv\");\n    glVertexAttrib4usvARB = (PFNGLVERTEXATTRIB4USVARBPROC) loadFunction(\"glVertexAttrib4usvARB\");\n    glVertexAttribBinding = (PFNGLVERTEXATTRIBBINDINGPROC) loadFunction(\"glVertexAttribBinding\");\n    glVertexAttribDivisor = (PFNGLVERTEXATTRIBDIVISORPROC) loadFunction(\"glVertexAttribDivisor\");\n    glVertexAttribDivisorARB = (PFNGLVERTEXATTRIBDIVISORARBPROC) loadFunction(\"glVertexAttribDivisorARB\");\n    glVertexAttribFormat = (PFNGLVERTEXATTRIBFORMATPROC) loadFunction(\"glVertexAttribFormat\");\n    glVertexAttribFormatNV = (PFNGLVERTEXATTRIBFORMATNVPROC) loadFunction(\"glVertexAttribFormatNV\");\n    glVertexAttribI1i = (PFNGLVERTEXATTRIBI1IPROC) loadFunction(\"glVertexAttribI1i\");\n    glVertexAttribI1iEXT = (PFNGLVERTEXATTRIBI1IEXTPROC) loadFunction(\"glVertexAttribI1iEXT\");\n    glVertexAttribI1iv = (PFNGLVERTEXATTRIBI1IVPROC) loadFunction(\"glVertexAttribI1iv\");\n    glVertexAttribI1ivEXT = (PFNGLVERTEXATTRIBI1IVEXTPROC) loadFunction(\"glVertexAttribI1ivEXT\");\n    glVertexAttribI1ui = (PFNGLVERTEXATTRIBI1UIPROC) loadFunction(\"glVertexAttribI1ui\");\n    glVertexAttribI1uiEXT = (PFNGLVERTEXATTRIBI1UIEXTPROC) loadFunction(\"glVertexAttribI1uiEXT\");\n    glVertexAttribI1uiv = (PFNGLVERTEXATTRIBI1UIVPROC) loadFunction(\"glVertexAttribI1uiv\");\n    glVertexAttribI1uivEXT = (PFNGLVERTEXATTRIBI1UIVEXTPROC) loadFunction(\"glVertexAttribI1uivEXT\");\n    glVertexAttribI2i = (PFNGLVERTEXATTRIBI2IPROC) loadFunction(\"glVertexAttribI2i\");\n    glVertexAttribI2iEXT = (PFNGLVERTEXATTRIBI2IEXTPROC) loadFunction(\"glVertexAttribI2iEXT\");\n    glVertexAttribI2iv = (PFNGLVERTEXATTRIBI2IVPROC) loadFunction(\"glVertexAttribI2iv\");\n    glVertexAttribI2ivEXT = (PFNGLVERTEXATTRIBI2IVEXTPROC) loadFunction(\"glVertexAttribI2ivEXT\");\n    glVertexAttribI2ui = (PFNGLVERTEXATTRIBI2UIPROC) loadFunction(\"glVertexAttribI2ui\");\n    glVertexAttribI2uiEXT = (PFNGLVERTEXATTRIBI2UIEXTPROC) loadFunction(\"glVertexAttribI2uiEXT\");\n    glVertexAttribI2uiv = (PFNGLVERTEXATTRIBI2UIVPROC) loadFunction(\"glVertexAttribI2uiv\");\n    glVertexAttribI2uivEXT = (PFNGLVERTEXATTRIBI2UIVEXTPROC) loadFunction(\"glVertexAttribI2uivEXT\");\n    glVertexAttribI3i = (PFNGLVERTEXATTRIBI3IPROC) loadFunction(\"glVertexAttribI3i\");\n    glVertexAttribI3iEXT = (PFNGLVERTEXATTRIBI3IEXTPROC) loadFunction(\"glVertexAttribI3iEXT\");\n    glVertexAttribI3iv = (PFNGLVERTEXATTRIBI3IVPROC) loadFunction(\"glVertexAttribI3iv\");\n    glVertexAttribI3ivEXT = (PFNGLVERTEXATTRIBI3IVEXTPROC) loadFunction(\"glVertexAttribI3ivEXT\");\n    glVertexAttribI3ui = (PFNGLVERTEXATTRIBI3UIPROC) loadFunction(\"glVertexAttribI3ui\");\n    glVertexAttribI3uiEXT = (PFNGLVERTEXATTRIBI3UIEXTPROC) loadFunction(\"glVertexAttribI3uiEXT\");\n    glVertexAttribI3uiv = (PFNGLVERTEXATTRIBI3UIVPROC) loadFunction(\"glVertexAttribI3uiv\");\n    glVertexAttribI3uivEXT = (PFNGLVERTEXATTRIBI3UIVEXTPROC) loadFunction(\"glVertexAttribI3uivEXT\");\n    glVertexAttribI4bv = (PFNGLVERTEXATTRIBI4BVPROC) loadFunction(\"glVertexAttribI4bv\");\n    glVertexAttribI4bvEXT = (PFNGLVERTEXATTRIBI4BVEXTPROC) loadFunction(\"glVertexAttribI4bvEXT\");\n    glVertexAttribI4i = (PFNGLVERTEXATTRIBI4IPROC) loadFunction(\"glVertexAttribI4i\");\n    glVertexAttribI4iEXT = (PFNGLVERTEXATTRIBI4IEXTPROC) loadFunction(\"glVertexAttribI4iEXT\");\n    glVertexAttribI4iv = (PFNGLVERTEXATTRIBI4IVPROC) loadFunction(\"glVertexAttribI4iv\");\n    glVertexAttribI4ivEXT = (PFNGLVERTEXATTRIBI4IVEXTPROC) loadFunction(\"glVertexAttribI4ivEXT\");\n    glVertexAttribI4sv = (PFNGLVERTEXATTRIBI4SVPROC) loadFunction(\"glVertexAttribI4sv\");\n    glVertexAttribI4svEXT = (PFNGLVERTEXATTRIBI4SVEXTPROC) loadFunction(\"glVertexAttribI4svEXT\");\n    glVertexAttribI4ubv = (PFNGLVERTEXATTRIBI4UBVPROC) loadFunction(\"glVertexAttribI4ubv\");\n    glVertexAttribI4ubvEXT = (PFNGLVERTEXATTRIBI4UBVEXTPROC) loadFunction(\"glVertexAttribI4ubvEXT\");\n    glVertexAttribI4ui = (PFNGLVERTEXATTRIBI4UIPROC) loadFunction(\"glVertexAttribI4ui\");\n    glVertexAttribI4uiEXT = (PFNGLVERTEXATTRIBI4UIEXTPROC) loadFunction(\"glVertexAttribI4uiEXT\");\n    glVertexAttribI4uiv = (PFNGLVERTEXATTRIBI4UIVPROC) loadFunction(\"glVertexAttribI4uiv\");\n    glVertexAttribI4uivEXT = (PFNGLVERTEXATTRIBI4UIVEXTPROC) loadFunction(\"glVertexAttribI4uivEXT\");\n    glVertexAttribI4usv = (PFNGLVERTEXATTRIBI4USVPROC) loadFunction(\"glVertexAttribI4usv\");\n    glVertexAttribI4usvEXT = (PFNGLVERTEXATTRIBI4USVEXTPROC) loadFunction(\"glVertexAttribI4usvEXT\");\n    glVertexAttribIFormat = (PFNGLVERTEXATTRIBIFORMATPROC) loadFunction(\"glVertexAttribIFormat\");\n    glVertexAttribIFormatNV = (PFNGLVERTEXATTRIBIFORMATNVPROC) loadFunction(\"glVertexAttribIFormatNV\");\n    glVertexAttribIPointer = (PFNGLVERTEXATTRIBIPOINTERPROC) loadFunction(\"glVertexAttribIPointer\");\n    glVertexAttribIPointerEXT = (PFNGLVERTEXATTRIBIPOINTEREXTPROC) loadFunction(\"glVertexAttribIPointerEXT\");\n    glVertexAttribL1d = (PFNGLVERTEXATTRIBL1DPROC) loadFunction(\"glVertexAttribL1d\");\n    glVertexAttribL1dEXT = (PFNGLVERTEXATTRIBL1DEXTPROC) loadFunction(\"glVertexAttribL1dEXT\");\n    glVertexAttribL1dv = (PFNGLVERTEXATTRIBL1DVPROC) loadFunction(\"glVertexAttribL1dv\");\n    glVertexAttribL1dvEXT = (PFNGLVERTEXATTRIBL1DVEXTPROC) loadFunction(\"glVertexAttribL1dvEXT\");\n    glVertexAttribL1i64NV = (PFNGLVERTEXATTRIBL1I64NVPROC) loadFunction(\"glVertexAttribL1i64NV\");\n    glVertexAttribL1i64vNV = (PFNGLVERTEXATTRIBL1I64VNVPROC) loadFunction(\"glVertexAttribL1i64vNV\");\n    glVertexAttribL1ui64ARB = (PFNGLVERTEXATTRIBL1UI64ARBPROC) loadFunction(\"glVertexAttribL1ui64ARB\");\n    glVertexAttribL1ui64NV = (PFNGLVERTEXATTRIBL1UI64NVPROC) loadFunction(\"glVertexAttribL1ui64NV\");\n    glVertexAttribL1ui64vARB = (PFNGLVERTEXATTRIBL1UI64VARBPROC) loadFunction(\"glVertexAttribL1ui64vARB\");\n    glVertexAttribL1ui64vNV = (PFNGLVERTEXATTRIBL1UI64VNVPROC) loadFunction(\"glVertexAttribL1ui64vNV\");\n    glVertexAttribL2d = (PFNGLVERTEXATTRIBL2DPROC) loadFunction(\"glVertexAttribL2d\");\n    glVertexAttribL2dEXT = (PFNGLVERTEXATTRIBL2DEXTPROC) loadFunction(\"glVertexAttribL2dEXT\");\n    glVertexAttribL2dv = (PFNGLVERTEXATTRIBL2DVPROC) loadFunction(\"glVertexAttribL2dv\");\n    glVertexAttribL2dvEXT = (PFNGLVERTEXATTRIBL2DVEXTPROC) loadFunction(\"glVertexAttribL2dvEXT\");\n    glVertexAttribL2i64NV = (PFNGLVERTEXATTRIBL2I64NVPROC) loadFunction(\"glVertexAttribL2i64NV\");\n    glVertexAttribL2i64vNV = (PFNGLVERTEXATTRIBL2I64VNVPROC) loadFunction(\"glVertexAttribL2i64vNV\");\n    glVertexAttribL2ui64NV = (PFNGLVERTEXATTRIBL2UI64NVPROC) loadFunction(\"glVertexAttribL2ui64NV\");\n    glVertexAttribL2ui64vNV = (PFNGLVERTEXATTRIBL2UI64VNVPROC) loadFunction(\"glVertexAttribL2ui64vNV\");\n    glVertexAttribL3d = (PFNGLVERTEXATTRIBL3DPROC) loadFunction(\"glVertexAttribL3d\");\n    glVertexAttribL3dEXT = (PFNGLVERTEXATTRIBL3DEXTPROC) loadFunction(\"glVertexAttribL3dEXT\");\n    glVertexAttribL3dv = (PFNGLVERTEXATTRIBL3DVPROC) loadFunction(\"glVertexAttribL3dv\");\n    glVertexAttribL3dvEXT = (PFNGLVERTEXATTRIBL3DVEXTPROC) loadFunction(\"glVertexAttribL3dvEXT\");\n    glVertexAttribL3i64NV = (PFNGLVERTEXATTRIBL3I64NVPROC) loadFunction(\"glVertexAttribL3i64NV\");\n    glVertexAttribL3i64vNV = (PFNGLVERTEXATTRIBL3I64VNVPROC) loadFunction(\"glVertexAttribL3i64vNV\");\n    glVertexAttribL3ui64NV = (PFNGLVERTEXATTRIBL3UI64NVPROC) loadFunction(\"glVertexAttribL3ui64NV\");\n    glVertexAttribL3ui64vNV = (PFNGLVERTEXATTRIBL3UI64VNVPROC) loadFunction(\"glVertexAttribL3ui64vNV\");\n    glVertexAttribL4d = (PFNGLVERTEXATTRIBL4DPROC) loadFunction(\"glVertexAttribL4d\");\n    glVertexAttribL4dEXT = (PFNGLVERTEXATTRIBL4DEXTPROC) loadFunction(\"glVertexAttribL4dEXT\");\n    glVertexAttribL4dv = (PFNGLVERTEXATTRIBL4DVPROC) loadFunction(\"glVertexAttribL4dv\");\n    glVertexAttribL4dvEXT = (PFNGLVERTEXATTRIBL4DVEXTPROC) loadFunction(\"glVertexAttribL4dvEXT\");\n    glVertexAttribL4i64NV = (PFNGLVERTEXATTRIBL4I64NVPROC) loadFunction(\"glVertexAttribL4i64NV\");\n    glVertexAttribL4i64vNV = (PFNGLVERTEXATTRIBL4I64VNVPROC) loadFunction(\"glVertexAttribL4i64vNV\");\n    glVertexAttribL4ui64NV = (PFNGLVERTEXATTRIBL4UI64NVPROC) loadFunction(\"glVertexAttribL4ui64NV\");\n    glVertexAttribL4ui64vNV = (PFNGLVERTEXATTRIBL4UI64VNVPROC) loadFunction(\"glVertexAttribL4ui64vNV\");\n    glVertexAttribLFormat = (PFNGLVERTEXATTRIBLFORMATPROC) loadFunction(\"glVertexAttribLFormat\");\n    glVertexAttribLFormatNV = (PFNGLVERTEXATTRIBLFORMATNVPROC) loadFunction(\"glVertexAttribLFormatNV\");\n    glVertexAttribLPointer = (PFNGLVERTEXATTRIBLPOINTERPROC) loadFunction(\"glVertexAttribLPointer\");\n    glVertexAttribLPointerEXT = (PFNGLVERTEXATTRIBLPOINTEREXTPROC) loadFunction(\"glVertexAttribLPointerEXT\");\n    glVertexAttribP1ui = (PFNGLVERTEXATTRIBP1UIPROC) loadFunction(\"glVertexAttribP1ui\");\n    glVertexAttribP1uiv = (PFNGLVERTEXATTRIBP1UIVPROC) loadFunction(\"glVertexAttribP1uiv\");\n    glVertexAttribP2ui = (PFNGLVERTEXATTRIBP2UIPROC) loadFunction(\"glVertexAttribP2ui\");\n    glVertexAttribP2uiv = (PFNGLVERTEXATTRIBP2UIVPROC) loadFunction(\"glVertexAttribP2uiv\");\n    glVertexAttribP3ui = (PFNGLVERTEXATTRIBP3UIPROC) loadFunction(\"glVertexAttribP3ui\");\n    glVertexAttribP3uiv = (PFNGLVERTEXATTRIBP3UIVPROC) loadFunction(\"glVertexAttribP3uiv\");\n    glVertexAttribP4ui = (PFNGLVERTEXATTRIBP4UIPROC) loadFunction(\"glVertexAttribP4ui\");\n    glVertexAttribP4uiv = (PFNGLVERTEXATTRIBP4UIVPROC) loadFunction(\"glVertexAttribP4uiv\");\n    glVertexAttribParameteriAMD = (PFNGLVERTEXATTRIBPARAMETERIAMDPROC) loadFunction(\"glVertexAttribParameteriAMD\");\n    glVertexAttribPointer = (PFNGLVERTEXATTRIBPOINTERPROC) loadFunction(\"glVertexAttribPointer\");\n    glVertexAttribPointerARB = (PFNGLVERTEXATTRIBPOINTERARBPROC) loadFunction(\"glVertexAttribPointerARB\");\n    glVertexAttribPointerNV = (PFNGLVERTEXATTRIBPOINTERNVPROC) loadFunction(\"glVertexAttribPointerNV\");\n    glVertexAttribs1dvNV = (PFNGLVERTEXATTRIBS1DVNVPROC) loadFunction(\"glVertexAttribs1dvNV\");\n    glVertexAttribs1fvNV = (PFNGLVERTEXATTRIBS1FVNVPROC) loadFunction(\"glVertexAttribs1fvNV\");\n    glVertexAttribs1hvNV = (PFNGLVERTEXATTRIBS1HVNVPROC) loadFunction(\"glVertexAttribs1hvNV\");\n    glVertexAttribs1svNV = (PFNGLVERTEXATTRIBS1SVNVPROC) loadFunction(\"glVertexAttribs1svNV\");\n    glVertexAttribs2dvNV = (PFNGLVERTEXATTRIBS2DVNVPROC) loadFunction(\"glVertexAttribs2dvNV\");\n    glVertexAttribs2fvNV = (PFNGLVERTEXATTRIBS2FVNVPROC) loadFunction(\"glVertexAttribs2fvNV\");\n    glVertexAttribs2hvNV = (PFNGLVERTEXATTRIBS2HVNVPROC) loadFunction(\"glVertexAttribs2hvNV\");\n    glVertexAttribs2svNV = (PFNGLVERTEXATTRIBS2SVNVPROC) loadFunction(\"glVertexAttribs2svNV\");\n    glVertexAttribs3dvNV = (PFNGLVERTEXATTRIBS3DVNVPROC) loadFunction(\"glVertexAttribs3dvNV\");\n    glVertexAttribs3fvNV = (PFNGLVERTEXATTRIBS3FVNVPROC) loadFunction(\"glVertexAttribs3fvNV\");\n    glVertexAttribs3hvNV = (PFNGLVERTEXATTRIBS3HVNVPROC) loadFunction(\"glVertexAttribs3hvNV\");\n    glVertexAttribs3svNV = (PFNGLVERTEXATTRIBS3SVNVPROC) loadFunction(\"glVertexAttribs3svNV\");\n    glVertexAttribs4dvNV = (PFNGLVERTEXATTRIBS4DVNVPROC) loadFunction(\"glVertexAttribs4dvNV\");\n    glVertexAttribs4fvNV = (PFNGLVERTEXATTRIBS4FVNVPROC) loadFunction(\"glVertexAttribs4fvNV\");\n    glVertexAttribs4hvNV = (PFNGLVERTEXATTRIBS4HVNVPROC) loadFunction(\"glVertexAttribs4hvNV\");\n    glVertexAttribs4svNV = (PFNGLVERTEXATTRIBS4SVNVPROC) loadFunction(\"glVertexAttribs4svNV\");\n    glVertexAttribs4ubvNV = (PFNGLVERTEXATTRIBS4UBVNVPROC) loadFunction(\"glVertexAttribs4ubvNV\");\n    glVertexBindingDivisor = (PFNGLVERTEXBINDINGDIVISORPROC) loadFunction(\"glVertexBindingDivisor\");\n    glVertexBlendARB = (PFNGLVERTEXBLENDARBPROC) loadFunction(\"glVertexBlendARB\");\n    glVertexFormatNV = (PFNGLVERTEXFORMATNVPROC) loadFunction(\"glVertexFormatNV\");\n    glVertexP2ui = (PFNGLVERTEXP2UIPROC) loadFunction(\"glVertexP2ui\");\n    glVertexP2uiv = (PFNGLVERTEXP2UIVPROC) loadFunction(\"glVertexP2uiv\");\n    glVertexP3ui = (PFNGLVERTEXP3UIPROC) loadFunction(\"glVertexP3ui\");\n    glVertexP3uiv = (PFNGLVERTEXP3UIVPROC) loadFunction(\"glVertexP3uiv\");\n    glVertexP4ui = (PFNGLVERTEXP4UIPROC) loadFunction(\"glVertexP4ui\");\n    glVertexP4uiv = (PFNGLVERTEXP4UIVPROC) loadFunction(\"glVertexP4uiv\");\n    glVertexPointer = (PFNGLVERTEXPOINTERPROC) loadFunction(\"glVertexPointer\");\n    glVertexPointerEXT = (PFNGLVERTEXPOINTEREXTPROC) loadFunction(\"glVertexPointerEXT\");\n    glVertexPointervINTEL = (PFNGLVERTEXPOINTERVINTELPROC) loadFunction(\"glVertexPointervINTEL\");\n    glVertexWeightPointerEXT = (PFNGLVERTEXWEIGHTPOINTEREXTPROC) loadFunction(\"glVertexWeightPointerEXT\");\n    glVertexWeightfEXT = (PFNGLVERTEXWEIGHTFEXTPROC) loadFunction(\"glVertexWeightfEXT\");\n    glVertexWeightfvEXT = (PFNGLVERTEXWEIGHTFVEXTPROC) loadFunction(\"glVertexWeightfvEXT\");\n    glVertexWeighthNV = (PFNGLVERTEXWEIGHTHNVPROC) loadFunction(\"glVertexWeighthNV\");\n    glVertexWeighthvNV = (PFNGLVERTEXWEIGHTHVNVPROC) loadFunction(\"glVertexWeighthvNV\");\n    glVideoCaptureNV = (PFNGLVIDEOCAPTURENVPROC) loadFunction(\"glVideoCaptureNV\");\n    glVideoCaptureStreamParameterdvNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) loadFunction(\"glVideoCaptureStreamParameterdvNV\");\n    glVideoCaptureStreamParameterfvNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) loadFunction(\"glVideoCaptureStreamParameterfvNV\");\n    glVideoCaptureStreamParameterivNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) loadFunction(\"glVideoCaptureStreamParameterivNV\");\n    glViewport = (PFNGLVIEWPORTPROC) loadFunction(\"glViewport\");\n    glViewportArrayv = (PFNGLVIEWPORTARRAYVPROC) loadFunction(\"glViewportArrayv\");\n    glViewportIndexedf = (PFNGLVIEWPORTINDEXEDFPROC) loadFunction(\"glViewportIndexedf\");\n    glViewportIndexedfv = (PFNGLVIEWPORTINDEXEDFVPROC) loadFunction(\"glViewportIndexedfv\");\n    glViewportPositionWScaleNV = (PFNGLVIEWPORTPOSITIONWSCALENVPROC) loadFunction(\"glViewportPositionWScaleNV\");\n    glViewportSwizzleNV = (PFNGLVIEWPORTSWIZZLENVPROC) loadFunction(\"glViewportSwizzleNV\");\n    glWaitSemaphoreEXT = (PFNGLWAITSEMAPHOREEXTPROC) loadFunction(\"glWaitSemaphoreEXT\");\n    glWaitSync = (PFNGLWAITSYNCPROC) loadFunction(\"glWaitSync\");\n    glWeightPathsNV = (PFNGLWEIGHTPATHSNVPROC) loadFunction(\"glWeightPathsNV\");\n    glWeightPointerARB = (PFNGLWEIGHTPOINTERARBPROC) loadFunction(\"glWeightPointerARB\");\n    glWeightbvARB = (PFNGLWEIGHTBVARBPROC) loadFunction(\"glWeightbvARB\");\n    glWeightdvARB = (PFNGLWEIGHTDVARBPROC) loadFunction(\"glWeightdvARB\");\n    glWeightfvARB = (PFNGLWEIGHTFVARBPROC) loadFunction(\"glWeightfvARB\");\n    glWeightivARB = (PFNGLWEIGHTIVARBPROC) loadFunction(\"glWeightivARB\");\n    glWeightsvARB = (PFNGLWEIGHTSVARBPROC) loadFunction(\"glWeightsvARB\");\n    glWeightubvARB = (PFNGLWEIGHTUBVARBPROC) loadFunction(\"glWeightubvARB\");\n    glWeightuivARB = (PFNGLWEIGHTUIVARBPROC) loadFunction(\"glWeightuivARB\");\n    glWeightusvARB = (PFNGLWEIGHTUSVARBPROC) loadFunction(\"glWeightusvARB\");\n    glWindowPos2d = (PFNGLWINDOWPOS2DPROC) loadFunction(\"glWindowPos2d\");\n    glWindowPos2dARB = (PFNGLWINDOWPOS2DARBPROC) loadFunction(\"glWindowPos2dARB\");\n    glWindowPos2dv = (PFNGLWINDOWPOS2DVPROC) loadFunction(\"glWindowPos2dv\");\n    glWindowPos2dvARB = (PFNGLWINDOWPOS2DVARBPROC) loadFunction(\"glWindowPos2dvARB\");\n    glWindowPos2f = (PFNGLWINDOWPOS2FPROC) loadFunction(\"glWindowPos2f\");\n    glWindowPos2fARB = (PFNGLWINDOWPOS2FARBPROC) loadFunction(\"glWindowPos2fARB\");\n    glWindowPos2fv = (PFNGLWINDOWPOS2FVPROC) loadFunction(\"glWindowPos2fv\");\n    glWindowPos2fvARB = (PFNGLWINDOWPOS2FVARBPROC) loadFunction(\"glWindowPos2fvARB\");\n    glWindowPos2i = (PFNGLWINDOWPOS2IPROC) loadFunction(\"glWindowPos2i\");\n    glWindowPos2iARB = (PFNGLWINDOWPOS2IARBPROC) loadFunction(\"glWindowPos2iARB\");\n    glWindowPos2iv = (PFNGLWINDOWPOS2IVPROC) loadFunction(\"glWindowPos2iv\");\n    glWindowPos2ivARB = (PFNGLWINDOWPOS2IVARBPROC) loadFunction(\"glWindowPos2ivARB\");\n    glWindowPos2s = (PFNGLWINDOWPOS2SPROC) loadFunction(\"glWindowPos2s\");\n    glWindowPos2sARB = (PFNGLWINDOWPOS2SARBPROC) loadFunction(\"glWindowPos2sARB\");\n    glWindowPos2sv = (PFNGLWINDOWPOS2SVPROC) loadFunction(\"glWindowPos2sv\");\n    glWindowPos2svARB = (PFNGLWINDOWPOS2SVARBPROC) loadFunction(\"glWindowPos2svARB\");\n    glWindowPos3d = (PFNGLWINDOWPOS3DPROC) loadFunction(\"glWindowPos3d\");\n    glWindowPos3dARB = (PFNGLWINDOWPOS3DARBPROC) loadFunction(\"glWindowPos3dARB\");\n    glWindowPos3dv = (PFNGLWINDOWPOS3DVPROC) loadFunction(\"glWindowPos3dv\");\n    glWindowPos3dvARB = (PFNGLWINDOWPOS3DVARBPROC) loadFunction(\"glWindowPos3dvARB\");\n    glWindowPos3f = (PFNGLWINDOWPOS3FPROC) loadFunction(\"glWindowPos3f\");\n    glWindowPos3fARB = (PFNGLWINDOWPOS3FARBPROC) loadFunction(\"glWindowPos3fARB\");\n    glWindowPos3fv = (PFNGLWINDOWPOS3FVPROC) loadFunction(\"glWindowPos3fv\");\n    glWindowPos3fvARB = (PFNGLWINDOWPOS3FVARBPROC) loadFunction(\"glWindowPos3fvARB\");\n    glWindowPos3i = (PFNGLWINDOWPOS3IPROC) loadFunction(\"glWindowPos3i\");\n    glWindowPos3iARB = (PFNGLWINDOWPOS3IARBPROC) loadFunction(\"glWindowPos3iARB\");\n    glWindowPos3iv = (PFNGLWINDOWPOS3IVPROC) loadFunction(\"glWindowPos3iv\");\n    glWindowPos3ivARB = (PFNGLWINDOWPOS3IVARBPROC) loadFunction(\"glWindowPos3ivARB\");\n    glWindowPos3s = (PFNGLWINDOWPOS3SPROC) loadFunction(\"glWindowPos3s\");\n    glWindowPos3sARB = (PFNGLWINDOWPOS3SARBPROC) loadFunction(\"glWindowPos3sARB\");\n    glWindowPos3sv = (PFNGLWINDOWPOS3SVPROC) loadFunction(\"glWindowPos3sv\");\n    glWindowPos3svARB = (PFNGLWINDOWPOS3SVARBPROC) loadFunction(\"glWindowPos3svARB\");\n    glWindowRectanglesEXT = (PFNGLWINDOWRECTANGLESEXTPROC) loadFunction(\"glWindowRectanglesEXT\");\n    glWriteMaskEXT = (PFNGLWRITEMASKEXTPROC) loadFunction(\"glWriteMaskEXT\");\n    glDrawVkImageNV = (PFNGLDRAWVKIMAGENVPROC) loadFunction(\"glDrawVkImageNV\");\n    glGetVkProcAddrNV = (PFNGLGETVKPROCADDRNVPROC) loadFunction(\"glGetVkProcAddrNV\");\n    glWaitVkSemaphoreNV = (PFNGLWAITVKSEMAPHORENVPROC) loadFunction(\"glWaitVkSemaphoreNV\");\n    glSignalVkSemaphoreNV = (PFNGLSIGNALVKSEMAPHORENVPROC) loadFunction(\"glSignalVkSemaphoreNV\");\n    glSignalVkFenceNV = (PFNGLSIGNALVKFENCENVPROC) loadFunction(\"glSignalVkFenceNV\");\n\n    return true;\n}\n\nbool glApiLoad()\n{\n    static bool initialized = false;\n    if (initialized) { return true; }\n    initialized = true;\n\n    return loadLibrary() && loadSymbols();\n}\n\nvoid glApiUnload(void)\n{\n    unloadLibrary();\n}\n\n\n}  // namespace GLApi\n}  // namespace internal\n}  // namespace OpenSubdiv\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/OpenSubdivCLA_corporate.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/OpenSubdivCLA_individual.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/diagrams.odg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osd_shader_param_remap.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/mod_notes.5.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osd_eval_2nd_deriv_curvature.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/ptex_quadrangulated.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/data_fvar_uv.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/val6_regular.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/data_mesh_2.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/loop_surface.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/vtr_refinement.1.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/glsharetopology.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/construction.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/usecase1.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/mtlviewer.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/sec_level_on.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/ptex_coarse.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/fvar_corners_plus1.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/usecase2.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/mtlviewer_ios.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/val5_iso_sub1.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/fvar_patch_linearnone.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/tetra.2.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/fvar_hbr_integer.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/api_workflows.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/half_edge_cycle.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osd_shader_gregory.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osd_refinement.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/nonman_vert_surface.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/param_uv.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/surface_bspline_complex.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/patch_bspline.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/mod_notes.0.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/hbr_tutorial_2.0.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/api_serialized_data.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/sec_level_off.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/fvar_corners_only.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/walk_interior.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/gtruck.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/loop_sub1.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/nonmanifold_fan.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/hedit_example5.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/loop_rel_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/basis_bezier.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/tetra.3.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/hedit_example4.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/edge_loops.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_stencil4.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/api_layers.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osd_modules.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/chaikin.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/icon.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/opensubdiv_logo_dark_hires.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/surface_bspline_tess2.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/tess_snap1.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/inf_sharp_b.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/OsdCreateSequence.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/uvviewer.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/data_varying_uv.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/half_edge.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/val5_iso_sub2.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_patchtables.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/loop_rel_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/data_vertex_uv.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/hedit_path.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_tutorial_5_1.0.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/crease_editor.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/glevallimit.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/mod_notes.4.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/hedit_example1.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/face_winding.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/nonman_fan_cage.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/evalLimit_hedit0.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/basis_bspline.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/loop_rel_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osd_splash.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osd_shader_transition.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/fvar_boundaries.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/glviewer.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/api_osd_modules.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/vertex_subdivide.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/uniform.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/mod_notes.1.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/tetra.0.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/inf_sharp_a.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/val6_cage.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/api_representations.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_legacy_sharp_corner_patch_false.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/data_top_shape.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_stencil1.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/tess_snap2.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/painttest.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/val5_iso_cage.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/studio-tools.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_stencil7.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/loop_sub2.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osd_metal_tess.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/data_mesh_top.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_patchTransition.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/surface_bspline_cage.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_patchtransitions.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/toggler1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_stencil8.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_stencil5.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_stencil0.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/mod_notes.3.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_stencil6.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/data_mesh_1.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/data_patch_1.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/topology_refiner.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/barb_1.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/vertex_boundary.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/mtlptexviewer.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/walk_boundary.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osd_draw.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/data_patch_top.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/data_top_fvary.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/subdiv_faceindex.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/api_layers_3_0.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/data_top_vertex.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_tutorial_2_1.0.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/hedit_example2.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/data_patch_2.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_stencil2.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/efficient_subdivision.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/data_pose_3.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osdpolysmooth.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/val6_irregular.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/fvar_patch_linearall.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_patchUV.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/nonmanifold_vert.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_stencil3.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/eval_varying.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/data_fvar_xyz.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/mod_notes.2.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osd_limiteval.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/tetra.1.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/surface_bezier.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/smoothtriangles.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osd_shader_patch.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osd_eval_1st_deriv_normal.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/surface_bspline.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/dxviewer.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osd_limitstencil.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/hedit_example3.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/torus.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/data_pose_2.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/opensubdiv_logo_light_hires.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osd_metal_eval.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/data_pose_1.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/inf_sharp_c.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/adaptive.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_legacy_sharp_corner_patch_true.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/nonman_fan_surface.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_tutorial_1_1.0.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/surface_bspline_tess1.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/gitflow.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/toggler0.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osd_shader_bspline.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/surface_bspline_sub1.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/opensubdiv_logo_header.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/dxptexviewer.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/glstencilviewer.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/val6_surface.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/OsdRefineDrawSequence.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/nonman_vert_cage.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/patch_bezier.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/api_mesh_data.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/api_data_flow.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_patchtypes.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/git_flow.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_patchBoundary.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/bowtie_vertex.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/eval_position.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osd_layers.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/loop_cage.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/fvar_hbr_dart.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/osd_shader_legacy_gregory.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/far_tutorial_2_2.0.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/surface_bspline_sub2.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/param_uv2xyz.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/eval_facevarying.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/background.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/usecase1_image.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/images/loop_rel_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/tipuesearch/img/search.png",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/documentation/tipuesearch/img/loader.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/.git/objects/pack/pack-dc6c89eefe125b7e8130306adef72c3aec59597c.idx",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/.git/objects/pack/pack-dc6c89eefe125b7e8130306adef72c3aec59597c.pack",
        "/tmp/vanessa/spack-stage/spack-stage-opensubdiv-develop-dhv6uby5ezoj6er23imvldfnbvxebkc5/spack-src/examples/common/font.png"
    ],
    "total_files": 1027
}