{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/config.h.in": "/* config.h.in.  Generated from configure.ac by autoheader.  */\n\n/* Define to 1 if the `closedir' function returns void instead of `int'. */\n#undef CLOSEDIR_VOID\n\n/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP\n   systems. This function is required for `alloca.c' support on those systems.\n   */\n#undef CRAY_STACKSEG_END\n\n/* Define to 1 if using `alloca.c'. */\n#undef C_ALLOCA\n\n/* Define to 1 if using `getloadavg.c'. */\n#undef C_GETLOADAVG\n\n/* Define to 1 for DGUX with <sys/dg_sys_info.h>. */\n#undef DGUX\n\n/* Define to 1 if translation of program messages to the user's native\n   language is requested. */\n#undef ENABLE_NLS\n\n/* Use high resolution file timestamps if nonzero. */\n#undef FILE_TIMESTAMP_HI_RES\n\n/* Define to 1 if the `getloadavg' function needs to be run setuid or setgid.\n   */\n#undef GETLOADAVG_PRIVILEGED\n\n/* Define to 1 if you have `alloca', as a function or macro. */\n#undef HAVE_ALLOCA\n\n/* Define to 1 if you have <alloca.h> and it should be used (not on Ultrix).\n   */\n#undef HAVE_ALLOCA_H\n\n/* Define to 1 if you have the `atexit' function. */\n#undef HAVE_ATEXIT\n\n/* Use case insensitive file names */\n#undef HAVE_CASE_INSENSITIVE_FS\n\n/* Define to 1 if you have the Mac OS X function CFLocaleCopyCurrent in the\n   CoreFoundation framework. */\n#undef HAVE_CFLOCALECOPYCURRENT\n\n/* Define to 1 if you have the Mac OS X function CFPreferencesCopyAppValue in\n   the CoreFoundation framework. */\n#undef HAVE_CFPREFERENCESCOPYAPPVALUE\n\n/* Define to 1 if you have the clock_gettime function. */\n#undef HAVE_CLOCK_GETTIME\n\n/* Define if the GNU dcgettext() function is already present or preinstalled.\n   */\n#undef HAVE_DCGETTEXT\n\n/* Define to 1 if you have the declaration of `bsd_signal', and to 0 if you\n   don't. */\n#undef HAVE_DECL_BSD_SIGNAL\n\n/* Define to 1 if you have the declaration of `dlerror', and to 0 if you\n   don't. */\n#undef HAVE_DECL_DLERROR\n\n/* Define to 1 if you have the declaration of `dlopen', and to 0 if you don't.\n   */\n#undef HAVE_DECL_DLOPEN\n\n/* Define to 1 if you have the declaration of `dlsym', and to 0 if you don't.\n   */\n#undef HAVE_DECL_DLSYM\n\n/* Define to 1 if you have the declaration of `sys_siglist', and to 0 if you\n   don't. */\n#undef HAVE_DECL_SYS_SIGLIST\n\n/* Define to 1 if you have the declaration of `_sys_siglist', and to 0 if you\n   don't. */\n#undef HAVE_DECL__SYS_SIGLIST\n\n/* Define to 1 if you have the declaration of `__sys_siglist', and to 0 if you\n   don't. */\n#undef HAVE_DECL___SYS_SIGLIST\n\n/* Define to 1 if you have the <dirent.h> header file, and it defines `DIR'.\n   */\n#undef HAVE_DIRENT_H\n\n/* Use platform specific coding */\n#undef HAVE_DOS_PATHS\n\n/* Define to 1 if you have the `dup' function. */\n#undef HAVE_DUP\n\n/* Define to 1 if you have the `dup2' function. */\n#undef HAVE_DUP2\n\n/* Define to 1 if you have the <fcntl.h> header file. */\n#undef HAVE_FCNTL_H\n\n/* Define to 1 if you have the `fdopen' function. */\n#undef HAVE_FDOPEN\n\n/* Define to 1 if you have the `fileno' function. */\n#undef HAVE_FILENO\n\n/* Define to 1 if you have the `fork' function. */\n#undef HAVE_FORK\n\n/* Define to 1 if you have the `getcwd' function. */\n#undef HAVE_GETCWD\n\n/* Define to 1 if you have the `getgroups' function. */\n#undef HAVE_GETGROUPS\n\n/* Define to 1 if you have the `gethostbyname' function. */\n#undef HAVE_GETHOSTBYNAME\n\n/* Define to 1 if you have the `gethostname' function. */\n#undef HAVE_GETHOSTNAME\n\n/* Define to 1 if you have the `getloadavg' function. */\n#undef HAVE_GETLOADAVG\n\n/* Define to 1 if you have the `getrlimit' function. */\n#undef HAVE_GETRLIMIT\n\n/* Define if the GNU gettext() function is already present or preinstalled. */\n#undef HAVE_GETTEXT\n\n/* Define to 1 if you have a standard gettimeofday function */\n#undef HAVE_GETTIMEOFDAY\n\n/* Embed GNU Guile support */\n#undef HAVE_GUILE\n\n/* Define if you have the iconv() function and it works. */\n#undef HAVE_ICONV\n\n/* Define to 1 if you have the <inttypes.h> header file. */\n#undef HAVE_INTTYPES_H\n\n/* Define to 1 if you have the `isatty' function. */\n#undef HAVE_ISATTY\n\n/* Define to 1 if you have the `dgc' library (-ldgc). */\n#undef HAVE_LIBDGC\n\n/* Define to 1 if you have the `kstat' library (-lkstat). */\n#undef HAVE_LIBKSTAT\n\n/* Define to 1 if you have the <limits.h> header file. */\n#undef HAVE_LIMITS_H\n\n/* Define to 1 if you have the <locale.h> header file. */\n#undef HAVE_LOCALE_H\n\n/* Define to 1 if you have the `lstat' function. */\n#undef HAVE_LSTAT\n\n/* Define to 1 if you have the <mach/mach.h> header file. */\n#undef HAVE_MACH_MACH_H\n\n/* Define to 1 if you have the <memory.h> header file. */\n#undef HAVE_MEMORY_H\n\n/* Define to 1 if you have the `mkstemp' function. */\n#undef HAVE_MKSTEMP\n\n/* Define to 1 if you have the `mktemp' function. */\n#undef HAVE_MKTEMP\n\n/* Define to 1 if you have the <ndir.h> header file, and it defines `DIR'. */\n#undef HAVE_NDIR_H\n\n/* Define to 1 if you have the <nlist.h> header file. */\n#undef HAVE_NLIST_H\n\n/* Define to 1 if you have the `pipe' function. */\n#undef HAVE_PIPE\n\n/* Define to 1 if you have the `pselect' function. */\n#undef HAVE_PSELECT\n\n/* Define to 1 if you have the `pstat_getdynamic' function. */\n#undef HAVE_PSTAT_GETDYNAMIC\n\n/* Define to 1 if you have the `readlink' function. */\n#undef HAVE_READLINK\n\n/* Define to 1 if you have the `realpath' function. */\n#undef HAVE_REALPATH\n\n/* Define to 1 if <signal.h> defines the SA_RESTART constant. */\n#undef HAVE_SA_RESTART\n\n/* Define to 1 if you have the `setegid' function. */\n#undef HAVE_SETEGID\n\n/* Define to 1 if you have the `seteuid' function. */\n#undef HAVE_SETEUID\n\n/* Define to 1 if you have the `setlinebuf' function. */\n#undef HAVE_SETLINEBUF\n\n/* Define to 1 if you have the `setlocale' function. */\n#undef HAVE_SETLOCALE\n\n/* Define to 1 if you have the `setregid' function. */\n#undef HAVE_SETREGID\n\n/* Define to 1 if you have the `setreuid' function. */\n#undef HAVE_SETREUID\n\n/* Define to 1 if you have the `setrlimit' function. */\n#undef HAVE_SETRLIMIT\n\n/* Define to 1 if you have the `setvbuf' function. */\n#undef HAVE_SETVBUF\n\n/* Define to 1 if you have the `sigaction' function. */\n#undef HAVE_SIGACTION\n\n/* Define to 1 if you have the `sigsetmask' function. */\n#undef HAVE_SIGSETMASK\n\n/* Define to 1 if you have the `socket' function. */\n#undef HAVE_SOCKET\n\n/* Define to 1 if you have the <stdint.h> header file. */\n#undef HAVE_STDINT_H\n\n/* Define to 1 if you have the <stdlib.h> header file. */\n#undef HAVE_STDLIB_H\n\n/* Define to 1 if you have the `strcasecmp' function. */\n#undef HAVE_STRCASECMP\n\n/* Define to 1 if you have the `strcmpi' function. */\n#undef HAVE_STRCMPI\n\n/* Define to 1 if you have the `strcoll' function and it is properly defined.\n   */\n#undef HAVE_STRCOLL\n\n/* Define to 1 if you have the `strdup' function. */\n#undef HAVE_STRDUP\n\n/* Define to 1 if you have the `strerror' function. */\n#undef HAVE_STRERROR\n\n/* Define to 1 if you have the `stricmp' function. */\n#undef HAVE_STRICMP\n\n/* Define to 1 if you have the <strings.h> header file. */\n#undef HAVE_STRINGS_H\n\n/* Define to 1 if you have the <string.h> header file. */\n#undef HAVE_STRING_H\n\n/* Define to 1 if you have the `strncasecmp' function. */\n#undef HAVE_STRNCASECMP\n\n/* Define to 1 if you have the `strncmpi' function. */\n#undef HAVE_STRNCMPI\n\n/* Define to 1 if you have the `strndup' function. */\n#undef HAVE_STRNDUP\n\n/* Define to 1 if you have the `strnicmp' function. */\n#undef HAVE_STRNICMP\n\n/* Define to 1 if you have the `strsignal' function. */\n#undef HAVE_STRSIGNAL\n\n/* Define to 1 if `n_un.n_name' is a member of `struct nlist'. */\n#undef HAVE_STRUCT_NLIST_N_UN_N_NAME\n\n/* Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR'.\n   */\n#undef HAVE_SYS_DIR_H\n\n/* Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR'.\n   */\n#undef HAVE_SYS_NDIR_H\n\n/* Define to 1 if you have the <sys/param.h> header file. */\n#undef HAVE_SYS_PARAM_H\n\n/* Define to 1 if you have the <sys/resource.h> header file. */\n#undef HAVE_SYS_RESOURCE_H\n\n/* Define to 1 if you have the <sys/select.h> header file. */\n#undef HAVE_SYS_SELECT_H\n\n/* Define to 1 if you have the <sys/stat.h> header file. */\n#undef HAVE_SYS_STAT_H\n\n/* Define to 1 if you have the <sys/timeb.h> header file. */\n#undef HAVE_SYS_TIMEB_H\n\n/* Define to 1 if you have the <sys/time.h> header file. */\n#undef HAVE_SYS_TIME_H\n\n/* Define to 1 if you have the <sys/types.h> header file. */\n#undef HAVE_SYS_TYPES_H\n\n/* Define to 1 if you have the <sys/wait.h> header file. */\n#undef HAVE_SYS_WAIT_H\n\n/* Define to 1 if you have the `ttyname' function. */\n#undef HAVE_TTYNAME\n\n/* Define to 1 if the system has the type `uintmax_t'. */\n#undef HAVE_UINTMAX_T\n\n/* Define to 1 if you have the 'union wait' type in <sys/wait.h>. */\n#undef HAVE_UNION_WAIT\n\n/* Define to 1 if you have the <unistd.h> header file. */\n#undef HAVE_UNISTD_H\n\n/* Define to 1 if the system has the type 'unsigned long long int'. */\n#undef HAVE_UNSIGNED_LONG_LONG_INT\n\n/* Define to 1 if you have the `vfork' function. */\n#undef HAVE_VFORK\n\n/* Define to 1 if you have the <vfork.h> header file. */\n#undef HAVE_VFORK_H\n\n/* Define to 1 if you have the `wait3' function. */\n#undef HAVE_WAIT3\n\n/* Define to 1 if you have the `waitpid' function. */\n#undef HAVE_WAITPID\n\n/* Define to 1 if `fork' works. */\n#undef HAVE_WORKING_FORK\n\n/* Define to 1 if `vfork' works. */\n#undef HAVE_WORKING_VFORK\n\n/* Build host information. */\n#undef MAKE_HOST\n\n/* Define to 1 to enable job server support in GNU make. */\n#undef MAKE_JOBSERVER\n\n/* Define to 1 to enable 'load' support in GNU make. */\n#undef MAKE_LOAD\n\n/* Define to 1 to enable symbolic link timestamp checking. */\n#undef MAKE_SYMLINKS\n\n/* Define to 1 if your `struct nlist' has an `n_un' member. Obsolete, depend\n   on `HAVE_STRUCT_NLIST_N_UN_N_NAME */\n#undef NLIST_NAME_UNION\n\n/* Define to 1 if struct nlist.n_name is a pointer rather than an array. */\n#undef NLIST_STRUCT\n\n/* Name of package */\n#undef PACKAGE\n\n/* Define to the address where bug reports for this package should be sent. */\n#undef PACKAGE_BUGREPORT\n\n/* Define to the full name of this package. */\n#undef PACKAGE_NAME\n\n/* Define to the full name and version of this package. */\n#undef PACKAGE_STRING\n\n/* Define to the one symbol short name of this package. */\n#undef PACKAGE_TARNAME\n\n/* Define to the home page for this package. */\n#undef PACKAGE_URL\n\n/* Define to the version of this package. */\n#undef PACKAGE_VERSION\n\n/* Define to the character that separates directories in PATH. */\n#undef PATH_SEPARATOR_CHAR\n\n/* Define as the return type of signal handlers (`int' or `void'). */\n#undef RETSIGTYPE\n\n/* Define to the name of the SCCS 'get' command. */\n#undef SCCS_GET\n\n/* Define to 1 if the SCCS 'get' command understands the '-G<file>' option. */\n#undef SCCS_GET_MINUS_G\n\n/* If using the C implementation of alloca, define if you know the\n   direction of stack growth for your system; otherwise it will be\n   automatically deduced at runtime.\n\tSTACK_DIRECTION > 0 => grows toward higher addresses\n\tSTACK_DIRECTION < 0 => grows toward lower addresses\n\tSTACK_DIRECTION = 0 => direction of growth unknown */\n#undef STACK_DIRECTION\n\n/* Define to 1 if the `S_IS*' macros in <sys/stat.h> do not work properly. */\n#undef STAT_MACROS_BROKEN\n\n/* Define to 1 if you have the ANSI C header files. */\n#undef STDC_HEADERS\n\n/* Define if struct stat contains a nanoseconds field */\n#undef ST_MTIM_NSEC\n\n/* Define to 1 on System V Release 4. */\n#undef SVR4\n\n/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */\n#undef TIME_WITH_SYS_TIME\n\n/* Define to 1 for Encore UMAX. */\n#undef UMAX\n\n/* Define to 1 for Encore UMAX 4.3 that has <inq_status/cpustats.h> instead of\n   <sys/cpustats.h>. */\n#undef UMAX4_3\n\n/* Enable extensions on AIX 3, Interix.  */\n#ifndef _ALL_SOURCE\n# undef _ALL_SOURCE\n#endif\n/* Enable GNU extensions on systems that have them.  */\n#ifndef _GNU_SOURCE\n# undef _GNU_SOURCE\n#endif\n/* Enable threading extensions on Solaris.  */\n#ifndef _POSIX_PTHREAD_SEMANTICS\n# undef _POSIX_PTHREAD_SEMANTICS\n#endif\n/* Enable extensions on HP NonStop.  */\n#ifndef _TANDEM_SOURCE\n# undef _TANDEM_SOURCE\n#endif\n/* Enable general extensions on Solaris.  */\n#ifndef __EXTENSIONS__\n# undef __EXTENSIONS__\n#endif\n\n\n/* Version number of package */\n#undef VERSION\n\n/* Use platform specific coding */\n#undef WINDOWS32\n\n/* Define if using the dmalloc debugging malloc package */\n#undef WITH_DMALLOC\n\n/* Enable large inode numbers on Mac OS X 10.5.  */\n#ifndef _DARWIN_USE_64_BIT_INODE\n# define _DARWIN_USE_64_BIT_INODE 1\n#endif\n\n/* Number of bits in a file offset, on hosts where this is settable. */\n#undef _FILE_OFFSET_BITS\n\n/* Define for large files, on AIX-style hosts. */\n#undef _LARGE_FILES\n\n/* Define to 1 if on MINIX. */\n#undef _MINIX\n\n/* Define to 2 if the system does not provide POSIX.1 features except with\n   this defined. */\n#undef _POSIX_1_SOURCE\n\n/* Define to 1 if you need to in order for `stat' and other things to work. */\n#undef _POSIX_SOURCE\n\n/* Define to empty if `const' does not conform to ANSI C. */\n#undef const\n\n/* Define to `int' if <sys/types.h> doesn't define. */\n#undef gid_t\n\n/* Define to `long int' if <sys/types.h> does not define. */\n#undef off_t\n\n/* Define to `int' if <sys/types.h> does not define. */\n#undef pid_t\n\n/* Define to `unsigned int' if <sys/types.h> does not define. */\n#undef size_t\n\n/* Define to `int' if <sys/types.h> does not define. */\n#undef ssize_t\n\n/* Define to `int' if <sys/types.h> doesn't define. */\n#undef uid_t\n\n/* Define to the widest unsigned integer type if <stdint.h> and <inttypes.h>\n   do not define. */\n#undef uintmax_t\n\n/* Define as `fork' if `vfork' does not work. */\n#undef vfork\n",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/configure.ac": "# Process this file with autoconf to produce a configure script.\n#\n# Copyright (C) 1993-2016 Free Software Foundation, Inc.\n# This file is part of GNU Make.\n#\n# GNU Make is free software; you can redistribute it and/or modify it under\n# the terms of the GNU General Public License as published by the Free Software\n# Foundation; either version 3 of the License, or (at your option) any later\n# version.\n#\n# GNU Make is distributed in the hope that it will be useful, but WITHOUT ANY\n# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n# details.\n#\n# You should have received a copy of the GNU General Public License along with\n# this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAC_INIT([GNU make],[4.2.1],[bug-make@gnu.org])\n\nAC_PREREQ([2.69])\n\n# Autoconf setup\nAC_CONFIG_AUX_DIR([config])\nAC_CONFIG_SRCDIR([vpath.c])\nAC_CONFIG_HEADERS([config.h])\n\n# Automake setup\n# We have to enable \"foreign\" because ChangeLog is auto-generated\n# We cannot enable -Werror because gettext 0.18.1 has invalid content\n# When we update gettext to 0.18.3 or better we can add it again.\nAM_INIT_AUTOMAKE([1.15 foreign -Werror -Wall])\n\n# Checks for programs.\nAC_USE_SYSTEM_EXTENSIONS\nAC_PROG_CC\nAC_PROG_INSTALL\nAC_PROG_RANLIB\nAC_PROG_CPP\nAC_CHECK_PROG([AR], [ar], [ar], [ar])\n# Perl is needed for the test suite (only)\nAC_CHECK_PROG([PERL], [perl], [perl], [perl])\n\n# Needed for w32/Makefile.am\nAM_PROG_AR\n\n# Specialized system macros\nAC_CANONICAL_HOST\nAC_AIX\nAC_ISC_POSIX\nAC_MINIX\n\n# Enable gettext, in \"external\" mode.\nAM_GNU_GETTEXT_VERSION([0.19.4])\nAM_GNU_GETTEXT([external])\n\n# This test must come as early as possible after the compiler configuration\n# tests, because the choice of the file model can (in principle) affect\n# whether functions and headers are available, whether they work, etc.\nAC_SYS_LARGEFILE\n\n# Checks for libraries.\nAC_SEARCH_LIBS([getpwnam], [sun])\n\n# Checks for header files.\nAC_HEADER_STDC\nAC_HEADER_DIRENT\nAC_HEADER_STAT\nAC_HEADER_TIME\nAC_CHECK_HEADERS([stdlib.h locale.h unistd.h limits.h fcntl.h string.h \\\n                  memory.h sys/param.h sys/resource.h sys/time.h sys/timeb.h \\\n                  sys/select.h])\n\nAM_PROG_CC_C_O\nAC_C_CONST\nAC_TYPE_SIGNAL\nAC_TYPE_UID_T\nAC_TYPE_PID_T\nAC_TYPE_OFF_T\nAC_TYPE_SIZE_T\nAC_TYPE_SSIZE_T\nAC_TYPE_UINTMAX_T\n\n# Find out whether our struct stat returns nanosecond resolution timestamps.\n\nAC_STRUCT_ST_MTIM_NSEC\nAC_CACHE_CHECK([whether to use high resolution file timestamps],\n               [make_cv_file_timestamp_hi_res],\n[ make_cv_file_timestamp_hi_res=no\n  AS_IF([test \"$ac_cv_struct_st_mtim_nsec\" != no],\n        [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n#if HAVE_INTTYPES_H\n# include <inttypes.h>\n#endif]],\n                      [[char a[0x7fffffff < (uintmax_t)-1 >> 30 ? 1 : -1];]])],\n        [make_cv_file_timestamp_hi_res=yes])\n  ])])\nAS_IF([test \"$make_cv_file_timestamp_hi_res\" = yes], [val=1], [val=0])\nAC_DEFINE_UNQUOTED([FILE_TIMESTAMP_HI_RES], [$val],\n                   [Use high resolution file timestamps if nonzero.])\n\nAS_IF([test \"$make_cv_file_timestamp_hi_res\" = yes],\n[ # Solaris 2.5.1 needs -lposix4 to get the clock_gettime function.\n  # Solaris 7 prefers the library name -lrt to the obsolescent name -lposix4.\n  AC_SEARCH_LIBS([clock_gettime], [rt posix4])\n  AS_IF([test \"$ac_cv_search_clock_gettime\" != no],\n  [ AC_DEFINE([HAVE_CLOCK_GETTIME], [1],\n              [Define to 1 if you have the clock_gettime function.])\n  ])\n])\n\n# Check for DOS-style pathnames.\npds_AC_DOS_PATHS\n\n# See if we have a standard version of gettimeofday().  Since actual\n# implementations can differ, just make sure we have the most common\n# one.\nAC_CACHE_CHECK([for standard gettimeofday], [ac_cv_func_gettimeofday],\n  [ac_cv_func_gettimeofday=no\n   AC_RUN_IFELSE([AC_LANG_SOURCE([[#include <sys/time.h>\n                  int main ()\n                  {\n                    struct timeval t; t.tv_sec = -1; t.tv_usec = -1;\n                    exit (gettimeofday (&t, 0) != 0\n                          || t.tv_sec < 0 || t.tv_usec < 0);\n                  }]])],\n                  [ac_cv_func_gettimeofday=yes],\n                  [ac_cv_func_gettimeofday=no],\n                  [ac_cv_func_gettimeofday=\"no (cross-compiling)\"])])\nAS_IF([test \"$ac_cv_func_gettimeofday\" = yes],\n[ AC_DEFINE([HAVE_GETTIMEOFDAY], [1],\n            [Define to 1 if you have a standard gettimeofday function])\n])\n\nAC_CHECK_FUNCS([strdup strndup mkstemp mktemp fdopen fileno \\\n                dup dup2 getcwd realpath sigsetmask sigaction \\\n                getgroups seteuid setegid setlinebuf setreuid setregid \\\n                getrlimit setrlimit setvbuf pipe strerror strsignal \\\n                lstat readlink atexit isatty ttyname pselect])\n\n# We need to check declarations, not just existence, because on Tru64 this\n# function is not declared without special flags, which themselves cause\n# other problems.  We'll just use our own.\nAC_CHECK_DECLS([bsd_signal], [], [], [[#define _GNU_SOURCE 1\n#include <signal.h>]])\n\nAC_FUNC_FORK\n\nAC_FUNC_SETVBUF_REVERSED\n\n# Rumor has it that strcasecmp lives in -lresolv on some odd systems.\n# It doesn't hurt much to use our own if we can't find it so I don't\n# make the effort here.\nAC_CHECK_FUNCS([strcasecmp strncasecmp strcmpi strncmpi stricmp strnicmp])\n\n# strcoll() is used by the GNU glob library\nAC_FUNC_STRCOLL\n\nAC_FUNC_ALLOCA\nAC_FUNC_CLOSEDIR_VOID\n\n# See if the user wants to add (or not) GNU Guile support\nPKG_PROG_PKG_CONFIG\nAC_ARG_WITH([guile], [AS_HELP_STRING([--with-guile],\n            [Support GNU Guile for embedded scripting])])\n\n# For some strange reason, at least on Ubuntu, each version of Guile\n# comes with it's own PC file so we have to specify them as individual\n# packages.  Ugh.\nAS_IF([test \"x$with_guile\" != xno],\n[ PKG_CHECK_MODULES([GUILE], [guile-2.0], [have_guile=yes],\n  [PKG_CHECK_MODULES([GUILE], [guile-1.8], [have_guile=yes],\n    [have_guile=no])])\n])\n\nAS_IF([test \"$have_guile\" = yes],\n      [AC_DEFINE([HAVE_GUILE], [1], [Embed GNU Guile support])])\n\nAM_CONDITIONAL([HAVE_GUILE], [test \"$have_guile\" = yes])\n\nAC_FUNC_GETLOADAVG\n\n# AC_FUNC_GETLOADAVG is documented to set the NLIST_STRUCT value, but it\n# doesn't.  So, we will.\n\nAS_IF([test \"$ac_cv_header_nlist_h\" = yes],\n[ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <nlist.h>]],\n        [[struct nlist nl;\n          nl.n_name = \"string\";\n          return 0;]])],\n        [make_cv_nlist_struct=yes],\n        [make_cv_nlist_struct=no])\n  AS_IF([test \"$make_cv_nlist_struct\" = yes],\n  [ AC_DEFINE([NLIST_STRUCT], [1],\n       [Define to 1 if struct nlist.n_name is a pointer rather than an array.])\n  ])\n])\n\nAC_CHECK_DECLS([sys_siglist, _sys_siglist, __sys_siglist], , ,\n  [AC_INCLUDES_DEFAULT\n#include <signal.h>\n/* NetBSD declares sys_siglist in unistd.h.  */\n#if HAVE_UNISTD_H\n# include <unistd.h>\n#endif\n])\n\n\n# Check out the wait reality.\nAC_CHECK_HEADERS([sys/wait.h],[],[],[[#include <sys/types.h>]])\nAC_CHECK_FUNCS([waitpid wait3])\nAC_CACHE_CHECK([for union wait], [make_cv_union_wait],\n[ AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n#include <sys/wait.h>]],\n     [[union wait status; int pid; pid = wait (&status);\n#ifdef WEXITSTATUS\n/* Some POSIXoid systems have both the new-style macros and the old\n   union wait type, and they do not work together.  If union wait\n   conflicts with WEXITSTATUS et al, we don't want to use it at all.  */\n        if (WEXITSTATUS (status) != 0) pid = -1;\n#ifdef WTERMSIG\n        /* If we have WEXITSTATUS and WTERMSIG, just use them on ints.  */\n        -- blow chunks here --\n#endif\n#endif\n#ifdef HAVE_WAITPID\n        /* Make sure union wait works with waitpid.  */\n        pid = waitpid (-1, &status, 0);\n#endif\n      ]])],\n    [make_cv_union_wait=yes],\n    [make_cv_union_wait=no])\n])\nAS_IF([test \"$make_cv_union_wait\" = yes],\n[ AC_DEFINE([HAVE_UNION_WAIT], [1],\n            [Define to 1 if you have the 'union wait' type in <sys/wait.h>.])\n])\n\n\n# If we're building on Windows/DOS/OS/2, add some support for DOS drive specs.\nAS_IF([test \"$PATH_SEPARATOR\" = ';'],\n[ AC_DEFINE([HAVE_DOS_PATHS], [1],\n            [Define to 1 if your system requires backslashes or drive specs in pathnames.])\n])\n\n# See if the user wants to use pmake's \"customs\" distributed build capability\nAC_SUBST([REMOTE]) REMOTE=stub\nuse_customs=false\nAC_ARG_WITH([customs],\n[AC_HELP_STRING([--with-customs=DIR],\n                [enable remote jobs via Customs--see README.customs])],\n[ AS_CASE([$withval], [n|no], [:],\n    [make_cppflags=\"$CPPFLAGS\"\n     AS_CASE([$withval],\n             [y|ye|yes], [:],\n             [CPPFLAGS=\"$CPPFLAGS -I$with_customs/include/customs\"\n              make_ldflags=\"$LDFLAGS -L$with_customs/lib\"])\n     CF_NETLIBS\n     AC_CHECK_HEADER([customs.h],\n                     [use_customs=true\n                      REMOTE=cstms\n                      LIBS=\"$LIBS -lcustoms\" LDFLAGS=\"$make_ldflags\"],\n                     [with_customs=no\n                      CPPFLAGS=\"$make_cppflags\" make_badcust=yes])\n    ])\n])\n\n# Tell automake about this, so it can include the right .c files.\nAM_CONDITIONAL([USE_CUSTOMS], [test \"$use_customs\" = true])\n\n# See if the user asked to handle case insensitive file systems.\nAH_TEMPLATE([HAVE_CASE_INSENSITIVE_FS], [Use case insensitive file names])\nAC_ARG_ENABLE([case-insensitive-file-system],\n  AC_HELP_STRING([--enable-case-insensitive-file-system],\n                 [assume file systems are case insensitive]),\n  [AS_IF([test \"$enableval\" = yes], [AC_DEFINE([HAVE_CASE_INSENSITIVE_FS])])])\n\n# See if we can handle the job server feature, and if the user wants it.\nAC_ARG_ENABLE([job-server],\n  AC_HELP_STRING([--disable-job-server],\n                 [disallow recursive make communication during -jN]),\n  [make_cv_job_server=\"$enableval\" user_job_server=\"$enableval\"],\n  [make_cv_job_server=\"yes\"])\n\nAS_IF([test \"$ac_cv_func_waitpid\" = no && test \"$ac_cv_func_wait3\" = no],\n      [has_wait_nohang=no],\n      [has_wait_nohang=yes])\n\nAC_CACHE_CHECK([for SA_RESTART], [make_cv_sa_restart], [\n  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <signal.h>]],\n      [[return SA_RESTART;]])],\n    [make_cv_sa_restart=yes],\n    [make_cv_sa_restart=no])])\n\nAS_IF([test \"$make_cv_sa_restart\" != no],\n[ AC_DEFINE([HAVE_SA_RESTART], [1],\n     [Define to 1 if <signal.h> defines the SA_RESTART constant.])\n])\n\n# Only allow jobserver on systems that support it\nAS_CASE([/$ac_cv_func_pipe/$ac_cv_func_sigaction/$make_cv_sa_restart/$has_wait_nohang/],\n  [*/no/*], [make_cv_job_server=no])\n\n# Also supported on OS2 and MinGW\nAS_CASE([$host_os], [os2*|mingw*], [make_cv_job_server=yes])\n\n# If we support it and the user didn't disable it, build with jobserver\nAS_CASE([/$make_cv_job_server/$user_job_server/],\n  [*/no/*], [: no jobserver],\n  [AC_DEFINE(MAKE_JOBSERVER, 1,\n             [Define to 1 to enable job server support in GNU make.])\n  ])\n\n# If dl*() functions are supported we can enable the load operation\nAC_CHECK_DECLS([dlopen, dlsym, dlerror], [], [],\n  [[#include <dlfcn.h>]])\n\nAC_ARG_ENABLE([load],\n  AC_HELP_STRING([--disable-load],\n                 [disable support for the 'load' operation]),\n  [make_cv_load=\"$enableval\" user_load=\"$enableval\"],\n  [make_cv_load=\"yes\"])\n\nAS_CASE([/$ac_cv_have_decl_dlopen/$ac_cv_have_decl_dlsym/$ac_cv_have_decl_dlerror/],\n  [*/no/*], [make_cv_load=no])\n\n# We might need -ldl\nAS_IF([test \"$make_cv_load\" = yes], [\n  AC_SEARCH_LIBS([dlopen], [dl], [], [make_cv_load=])\n  ])\n\nAS_CASE([/$make_cv_load/$user_load/],\n  [*/no/*], [make_cv_load=no],\n  [AC_DEFINE(MAKE_LOAD, 1,\n             [Define to 1 to enable 'load' support in GNU make.])\n  ])\n\n# If we want load support, we might need to link with export-dynamic.\n# See if we can figure it out.  Unfortunately this is very difficult.\n# For example passing -rdynamic to the SunPRO linker gives a warning\n# but succeeds and creates a shared object, not an executable!\nAS_IF([test \"$make_cv_load\" = yes], [\n  AC_MSG_CHECKING([If the linker accepts -Wl,--export-dynamic])\n  old_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS -Wl,--export-dynamic\"\n  AC_LINK_IFELSE([AC_LANG_SOURCE([int main(){}])],\n    [AC_MSG_RESULT([yes])\n     AC_SUBST([AM_LDFLAGS], [-Wl,--export-dynamic])],\n    [AC_MSG_RESULT([no])\n     AC_MSG_CHECKING([If the linker accepts -rdynamic])\n     LDFLAGS=\"$old_LDFLAGS -rdynamic\"\n     AC_LINK_IFELSE([AC_LANG_SOURCE([int main(){}])],\n       [AC_MSG_RESULT([yes])\n        AC_SUBST([AM_LDFLAGS], [-rdynamic])],\n       [AC_MSG_RESULT([no])])\n   ])\n  LDFLAGS=\"$old_LDFLAGS\"\n])\n\n# if we have both lstat() and readlink() then we can support symlink\n# timechecks.\nAS_IF([test \"$ac_cv_func_lstat\" = yes && test \"$ac_cv_func_readlink\" = yes],\n  [ AC_DEFINE([MAKE_SYMLINKS], [1],\n              [Define to 1 to enable symbolic link timestamp checking.])\n])\n\n# Find the SCCS commands, so we can include them in our default rules.\n\nAC_CACHE_CHECK([for location of SCCS get command], [make_cv_path_sccs_get], [\n  AS_IF([test -f /usr/sccs/get],\n        [make_cv_path_sccs_get=/usr/sccs/get],\n        [make_cv_path_sccs_get=get])\n])\nAC_DEFINE_UNQUOTED([SCCS_GET], [\"$make_cv_path_sccs_get\"],\n                   [Define to the name of the SCCS 'get' command.])\n\nac_clean_files=\"$ac_clean_files s.conftest conftoast\" # Remove these later.\nAS_IF([(/usr/sccs/admin -n s.conftest || admin -n s.conftest) >/dev/null 2>&1 &&\n   test -f s.conftest],\n[ # We successfully created an SCCS file.\n  AC_CACHE_CHECK([if SCCS get command understands -G], [make_cv_sys_get_minus_G],\n    [AS_IF([$make_cv_path_sccs_get -Gconftoast s.conftest >/dev/null 2>&1 &&\n            test -f conftoast],\n           [make_cv_sys_get_minus_G=yes],\n           [make_cv_sys_get_minus_G=no])\n    ])\n  AS_IF([test \"$make_cv_sys_get_minus_G\" = yes],\n    [AC_DEFINE([SCCS_GET_MINUS_G], [1],\n     [Define to 1 if the SCCS 'get' command understands the '-G<file>' option.])\n    ])\n])\nrm -f s.conftest conftoast\n\n# Check the system to see if it provides GNU glob.  If not, use our\n# local version.\nAC_CACHE_CHECK([if system libc has GNU glob], [make_cv_sys_gnu_glob],\n[ AC_EGREP_CPP([gnu glob],[\n#include <features.h>\n#include <glob.h>\n#include <fnmatch.h>\n\n#define GLOB_INTERFACE_VERSION 1\n#if !defined _LIBC && defined __GNU_LIBRARY__ && __GNU_LIBRARY__ > 1\n# include <gnu-versions.h>\n# if _GNU_GLOB_INTERFACE_VERSION == GLOB_INTERFACE_VERSION\n   gnu glob\n# endif\n#endif],\n        [make_cv_sys_gnu_glob=yes],\n        [make_cv_sys_gnu_glob=no])])\nAS_IF([test \"$make_cv_sys_gnu_glob\" = no],\n[ GLOBINC='-I$(srcdir)/glob'\n  GLOBLIB=glob/libglob.a\n])\nAC_SUBST([GLOBINC])\nAC_SUBST([GLOBLIB])\n\n# Tell automake about this, so it can build the right .c files.\nAM_CONDITIONAL([USE_LOCAL_GLOB], [test \"$make_cv_sys_gnu_glob\" = no])\n\n# Let the makefile know what our build host is\n\nAC_DEFINE_UNQUOTED([MAKE_HOST],[\"$host\"],[Build host information.])\nMAKE_HOST=\"$host\"\nAC_SUBST([MAKE_HOST])\n\nw32_target_env=no\nAM_CONDITIONAL([WINDOWSENV], [false])\n\nAS_CASE([$host],\n  [*-*-mingw32],\n   [AM_CONDITIONAL([WINDOWSENV], [true])\n    w32_target_env=yes\n    AC_DEFINE([WINDOWS32], [1], [Use platform specific coding])\n    AC_DEFINE([HAVE_DOS_PATHS], [1], [Use platform specific coding])\n  ])\n\nAC_DEFINE_UNQUOTED([PATH_SEPARATOR_CHAR],['$PATH_SEPARATOR'],\n        [Define to the character that separates directories in PATH.])\n\n# Include the Maintainer's Makefile section, if it's here.\n\nMAINT_MAKEFILE=/dev/null\nAS_IF([test -r \"$srcdir/maintMakefile\"],\n[ MAINT_MAKEFILE=\"$srcdir/maintMakefile\"\n])\nAC_SUBST_FILE([MAINT_MAKEFILE])\n\n# Allow building with dmalloc\nAM_WITH_DMALLOC\n\n# Forcibly disable SET_MAKE.  If it's set it breaks things like the test\n# scripts, etc.\nSET_MAKE=\n\n# Sanity check and inform the user of what we found\n\nAS_IF([test \"x$make_badcust\" = xyes], [\necho\necho \"WARNING: --with-customs specified but no customs.h could be found;\"\necho \"         disabling Customs support.\"\necho\n])\n\nAS_CASE([$with_customs],\n[\"\"|n|no|y|ye|yes], [:],\n[AS_IF([test -f \"$with_customs/lib/libcustoms.a\"], [:],\n[ echo\n  echo \"WARNING: '$with_customs/lib' does not appear to contain the\"\n  echo \"         Customs library.  You must build and install Customs\"\n  echo \"         before compiling GNU make.\"\n  echo\n])])\n\nAS_IF([test \"x$has_wait_nohang\" = xno],\n[ echo\n  echo \"WARNING: Your system has neither waitpid() nor wait3().\"\n  echo \"         Without one of these, signal handling is unreliable.\"\n  echo \"         You should be aware that running GNU make with -j\"\n  echo \"         could result in erratic behavior.\"\n  echo\n])\n\nAS_IF([test \"x$make_cv_job_server\" = xno && test \"x$user_job_server\" = xyes],\n[ echo\n  echo \"WARNING: Make job server requires a POSIX-ish system that\"\n  echo \"         supports the pipe(), sigaction(), and either\"\n  echo \"         waitpid() or wait3() functions.  Your system doesn't\"\n  echo \"         appear to provide one or more of those.\"\n  echo \"         Disabling job server support.\"\n  echo\n])\n\nAS_IF([test \"x$make_cv_load\" = xno && test \"x$user_load\" = xyes],\n[ echo\n  echo \"WARNING: 'load' support requires a POSIX-ish system that\"\n  echo \"         supports the dlopen(), dlsym(), and dlerror() functions.\"\n  echo \"         Your system doesn't appear to provide one or more of these.\"\n  echo \"         Disabling 'load' support.\"\n  echo\n])\n\n# Specify what files are to be created.\nAC_CONFIG_FILES([Makefile glob/Makefile po/Makefile.in config/Makefile \\\n                 doc/Makefile w32/Makefile tests/config-flags.pm])\n\n# OK, do it!\n\nAC_OUTPUT\n\n# We only generate the build.sh if we have a build.sh.in; we won't have\n# one before we've created a distribution.\nAS_IF([test -f \"$srcdir/build.sh.in\"],\n[ ./config.status --file build.sh\n  chmod +x build.sh\n])\n\ndnl Local Variables:\ndnl comment-start: \"dnl \"\ndnl comment-end: \"\"\ndnl comment-start-skip: \"\\\\bdnl\\\\b\\\\s *\"\ndnl compile-command: \"make configure config.h.in\"\ndnl End:\n",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/load.c": "/* Loading dynamic objects for GNU Make.\nCopyright (C) 2012-2016 Free Software Foundation, Inc.\nThis file is part of GNU Make.\n\nGNU Make is free software; you can redistribute it and/or modify it under the\nterms of the GNU General Public License as published by the Free Software\nFoundation; either version 3 of the License, or (at your option) any later\nversion.\n\nGNU Make is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\nA PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with\nthis program.  If not, see <http://www.gnu.org/licenses/>.  */\n\n#include \"makeint.h\"\n\n#if MAKE_LOAD\n\n#include <string.h>\n#include <ctype.h>\n#include <stdlib.h>\n#include <dlfcn.h>\n#include <errno.h>\n\n#define SYMBOL_EXTENSION        \"_gmk_setup\"\n\n#include \"debug.h\"\n#include \"filedef.h\"\n#include \"variable.h\"\n\n/* Tru64 V4.0 does not have this flag */\n#ifndef RTLD_GLOBAL\n# define RTLD_GLOBAL 0\n#endif\n\nstruct load_list\n  {\n    struct load_list *next;\n    const char *name;\n    void *dlp;\n  };\n\nstatic struct load_list *loaded_syms = NULL;\n\nstatic load_func_t\nload_object (const floc *flocp, int noerror, const char *ldname,\n             const char *symname)\n{\n  static void *global_dl = NULL;\n  load_func_t symp;\n\n  if (! global_dl)\n    {\n      global_dl = dlopen (NULL, RTLD_NOW|RTLD_GLOBAL);\n      if (! global_dl)\n        {\n          const char *err = dlerror ();\n          OS (fatal, flocp, _(\"Failed to open global symbol table: %s\"), err);\n        }\n    }\n\n  symp = (load_func_t) dlsym (global_dl, symname);\n  if (! symp)\n    {\n      struct load_list *new;\n      void *dlp = NULL;\n\n    /* If the path has no \"/\", try the current directory first.  */\n      if (! strchr (ldname, '/')\n#ifdef HAVE_DOS_PATHS\n          && ! strchr (ldname, '\\\\')\n#endif\n         )\n        dlp = dlopen (concat (2, \"./\", ldname), RTLD_LAZY|RTLD_GLOBAL);\n\n      /* If we haven't opened it yet, try the default search path.  */\n      if (! dlp)\n        dlp = dlopen (ldname, RTLD_LAZY|RTLD_GLOBAL);\n\n      /* Still no?  Then fail.  */\n      if (! dlp)\n        {\n          const char *err = dlerror ();\n          if (noerror)\n            DB (DB_BASIC, (\"%s\", err));\n          else\n            OS (error, flocp, \"%s\", err);\n          return NULL;\n        }\n\n      /* Assert that the GPL license symbol is defined.  */\n      symp = (load_func_t) dlsym (dlp, \"plugin_is_GPL_compatible\");\n      if (! symp)\n        OS (fatal, flocp,\n             _(\"Loaded object %s is not declared to be GPL compatible\"),\n             ldname);\n\n      symp = (load_func_t) dlsym (dlp, symname);\n      if (! symp)\n        {\n          const char *err = dlerror ();\n          OSSS (fatal, flocp, _(\"Failed to load symbol %s from %s: %s\"),\n                symname, ldname, err);\n        }\n\n      /* Add this symbol to a trivial lookup table.  This is not efficient but\n         it's highly unlikely we'll be loading lots of objects, and we only\n         need it to look them up on unload, if we rebuild them.  */\n      new = xmalloc (sizeof (struct load_list));\n      new->name = xstrdup (ldname);\n      new->dlp = dlp;\n      new->next = loaded_syms;\n      loaded_syms = new;\n    }\n\n  return symp;\n}\n\nint\nload_file (const floc *flocp, const char **ldname, int noerror)\n{\n  int nmlen = strlen (*ldname);\n  char *new = alloca (nmlen + CSTRLEN (SYMBOL_EXTENSION) + 1);\n  char *symname = NULL;\n  char *loaded;\n  const char *fp;\n  int r;\n  load_func_t symp;\n\n  /* Break the input into an object file name and a symbol name.  If no symbol\n     name was provided, compute one from the object file name.  */\n  fp = strchr (*ldname, '(');\n  if (fp)\n    {\n      const char *ep;\n\n      /* There's an open paren, so see if there's a close paren: if so use\n         that as the symbol name.  We can't have whitespace: it would have\n         been chopped up before this function is called.  */\n      ep = strchr (fp+1, ')');\n      if (ep && ep[1] == '\\0')\n        {\n          int l = fp - *ldname;;\n\n          ++fp;\n          if (fp == ep)\n            OS (fatal, flocp, _(\"Empty symbol name for load: %s\"), *ldname);\n\n          /* Make a copy of the ldname part.  */\n          memcpy (new, *ldname, l);\n          new[l] = '\\0';\n          *ldname = new;\n          nmlen = l;\n\n          /* Make a copy of the symbol name part.  */\n          symname = new + l + 1;\n          memcpy (symname, fp, ep - fp);\n          symname[ep - fp] = '\\0';\n        }\n    }\n\n  /* Add this name to the string cache so it can be reused later.  */\n  *ldname = strcache_add (*ldname);\n\n  /* If this object has been loaded, we're done.  */\n  loaded = allocated_variable_expand (\"$(.LOADED)\");\n  fp = strstr (loaded, *ldname);\n  r = fp && (fp==loaded || fp[-1]==' ') && (fp[nmlen]=='\\0' || fp[nmlen]==' ');\n  if (r)\n    goto exit;\n\n  /* If we didn't find a symbol name yet, construct it from the ldname.  */\n  if (! symname)\n    {\n      char *p = new;\n\n      fp = strrchr (*ldname, '/');\n#ifdef HAVE_DOS_PATHS\n      if (fp)\n        {\n          const char *fp2 = strchr (fp, '\\\\');\n\n          if (fp2 > fp)\n            fp = fp2;\n        }\n      else\n        fp = strrchr (*ldname, '\\\\');\n      /* The (improbable) case of d:foo.  */\n      if (fp && *fp && fp[1] == ':')\n        fp++;\n#endif\n      if (!fp)\n        fp = *ldname;\n      else\n        ++fp;\n      while (isalnum (*fp) || *fp == '_')\n        *(p++) = *(fp++);\n      strcpy (p, SYMBOL_EXTENSION);\n      symname = new;\n    }\n\n  DB (DB_VERBOSE, (_(\"Loading symbol %s from %s\\n\"), symname, *ldname));\n\n  /* Load it!  */\n  symp = load_object (flocp, noerror, *ldname, symname);\n  if (! symp)\n    return 0;\n\n  /* Invoke the symbol.  */\n  r = (*symp) (flocp);\n\n  /* If it succeeded, add the load file to the loaded variable.  */\n  if (r > 0)\n    {\n      size_t loadlen = strlen (loaded);\n      char *newval = alloca (loadlen + strlen (*ldname) + 2);\n      /* Don't add a space if it's empty.  */\n      if (loadlen)\n        {\n          memcpy (newval, loaded, loadlen);\n          newval[loadlen++] = ' ';\n        }\n      strcpy (&newval[loadlen], *ldname);\n      do_variable_definition (flocp, \".LOADED\", newval, o_default, f_simple, 0);\n    }\n\n exit:\n  free (loaded);\n  return r;\n}\n\nvoid\nunload_file (const char *name)\n{\n  struct load_list *d;\n\n  for (d = loaded_syms; d != NULL; d = d->next)\n    if (streq (d->name, name) && d->dlp)\n      {\n        if (dlclose (d->dlp))\n          perror_with_name (\"dlclose\", d->name);\n        d->dlp = NULL;\n        break;\n      }\n}\n\n#else\n\nint\nload_file (const floc *flocp, const char **ldname UNUSED, int noerror)\n{\n  if (! noerror)\n    O (fatal, flocp,\n       _(\"The 'load' operation is not supported on this platform.\"));\n\n  return 0;\n}\n\nvoid\nunload_file (const char *name UNUSED)\n{\n  O (fatal, NILF, \"INTERNAL: Cannot unload when load is not supported!\");\n}\n\n#endif  /* MAKE_LOAD */\n",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/config/lib-link.m4": "# lib-link.m4 serial 26 (gettext-0.18.2)\ndnl Copyright (C) 2001-2014 Free Software Foundation, Inc.\ndnl This file is free software; the Free Software Foundation\ndnl gives unlimited permission to copy and/or distribute it,\ndnl with or without modifications, as long as this notice is preserved.\n\ndnl From Bruno Haible.\n\nAC_PREREQ([2.54])\n\ndnl AC_LIB_LINKFLAGS(name [, dependencies]) searches for libname and\ndnl the libraries corresponding to explicit and implicit dependencies.\ndnl Sets and AC_SUBSTs the LIB${NAME} and LTLIB${NAME} variables and\ndnl augments the CPPFLAGS variable.\ndnl Sets and AC_SUBSTs the LIB${NAME}_PREFIX variable to nonempty if libname\ndnl was found in ${LIB${NAME}_PREFIX}/$acl_libdirstem.\nAC_DEFUN([AC_LIB_LINKFLAGS],\n[\n  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])\n  AC_REQUIRE([AC_LIB_RPATH])\n  pushdef([Name],[m4_translit([$1],[./+-], [____])])\n  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],\n                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n  AC_CACHE_CHECK([how to link with lib[]$1], [ac_cv_lib[]Name[]_libs], [\n    AC_LIB_LINKFLAGS_BODY([$1], [$2])\n    ac_cv_lib[]Name[]_libs=\"$LIB[]NAME\"\n    ac_cv_lib[]Name[]_ltlibs=\"$LTLIB[]NAME\"\n    ac_cv_lib[]Name[]_cppflags=\"$INC[]NAME\"\n    ac_cv_lib[]Name[]_prefix=\"$LIB[]NAME[]_PREFIX\"\n  ])\n  LIB[]NAME=\"$ac_cv_lib[]Name[]_libs\"\n  LTLIB[]NAME=\"$ac_cv_lib[]Name[]_ltlibs\"\n  INC[]NAME=\"$ac_cv_lib[]Name[]_cppflags\"\n  LIB[]NAME[]_PREFIX=\"$ac_cv_lib[]Name[]_prefix\"\n  AC_LIB_APPENDTOVAR([CPPFLAGS], [$INC]NAME)\n  AC_SUBST([LIB]NAME)\n  AC_SUBST([LTLIB]NAME)\n  AC_SUBST([LIB]NAME[_PREFIX])\n  dnl Also set HAVE_LIB[]NAME so that AC_LIB_HAVE_LINKFLAGS can reuse the\n  dnl results of this search when this library appears as a dependency.\n  HAVE_LIB[]NAME=yes\n  popdef([NAME])\n  popdef([Name])\n])\n\ndnl AC_LIB_HAVE_LINKFLAGS(name, dependencies, includes, testcode, [missing-message])\ndnl searches for libname and the libraries corresponding to explicit and\ndnl implicit dependencies, together with the specified include files and\ndnl the ability to compile and link the specified testcode. The missing-message\ndnl defaults to 'no' and may contain additional hints for the user.\ndnl If found, it sets and AC_SUBSTs HAVE_LIB${NAME}=yes and the LIB${NAME}\ndnl and LTLIB${NAME} variables and augments the CPPFLAGS variable, and\ndnl #defines HAVE_LIB${NAME} to 1. Otherwise, it sets and AC_SUBSTs\ndnl HAVE_LIB${NAME}=no and LIB${NAME} and LTLIB${NAME} to empty.\ndnl Sets and AC_SUBSTs the LIB${NAME}_PREFIX variable to nonempty if libname\ndnl was found in ${LIB${NAME}_PREFIX}/$acl_libdirstem.\nAC_DEFUN([AC_LIB_HAVE_LINKFLAGS],\n[\n  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])\n  AC_REQUIRE([AC_LIB_RPATH])\n  pushdef([Name],[m4_translit([$1],[./+-], [____])])\n  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],\n                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n\n  dnl Search for lib[]Name and define LIB[]NAME, LTLIB[]NAME and INC[]NAME\n  dnl accordingly.\n  AC_LIB_LINKFLAGS_BODY([$1], [$2])\n\n  dnl Add $INC[]NAME to CPPFLAGS before performing the following checks,\n  dnl because if the user has installed lib[]Name and not disabled its use\n  dnl via --without-lib[]Name-prefix, he wants to use it.\n  ac_save_CPPFLAGS=\"$CPPFLAGS\"\n  AC_LIB_APPENDTOVAR([CPPFLAGS], [$INC]NAME)\n\n  AC_CACHE_CHECK([for lib[]$1], [ac_cv_lib[]Name], [\n    ac_save_LIBS=\"$LIBS\"\n    dnl If $LIB[]NAME contains some -l options, add it to the end of LIBS,\n    dnl because these -l options might require -L options that are present in\n    dnl LIBS. -l options benefit only from the -L options listed before it.\n    dnl Otherwise, add it to the front of LIBS, because it may be a static\n    dnl library that depends on another static library that is present in LIBS.\n    dnl Static libraries benefit only from the static libraries listed after\n    dnl it.\n    case \" $LIB[]NAME\" in\n      *\" -l\"*) LIBS=\"$LIBS $LIB[]NAME\" ;;\n      *)       LIBS=\"$LIB[]NAME $LIBS\" ;;\n    esac\n    AC_LINK_IFELSE(\n      [AC_LANG_PROGRAM([[$3]], [[$4]])],\n      [ac_cv_lib[]Name=yes],\n      [ac_cv_lib[]Name='m4_if([$5], [], [no], [[$5]])'])\n    LIBS=\"$ac_save_LIBS\"\n  ])\n  if test \"$ac_cv_lib[]Name\" = yes; then\n    HAVE_LIB[]NAME=yes\n    AC_DEFINE([HAVE_LIB]NAME, 1, [Define if you have the lib][$1 library.])\n    AC_MSG_CHECKING([how to link with lib[]$1])\n    AC_MSG_RESULT([$LIB[]NAME])\n  else\n    HAVE_LIB[]NAME=no\n    dnl If $LIB[]NAME didn't lead to a usable library, we don't need\n    dnl $INC[]NAME either.\n    CPPFLAGS=\"$ac_save_CPPFLAGS\"\n    LIB[]NAME=\n    LTLIB[]NAME=\n    LIB[]NAME[]_PREFIX=\n  fi\n  AC_SUBST([HAVE_LIB]NAME)\n  AC_SUBST([LIB]NAME)\n  AC_SUBST([LTLIB]NAME)\n  AC_SUBST([LIB]NAME[_PREFIX])\n  popdef([NAME])\n  popdef([Name])\n])\n\ndnl Determine the platform dependent parameters needed to use rpath:\ndnl   acl_libext,\ndnl   acl_shlibext,\ndnl   acl_libname_spec,\ndnl   acl_library_names_spec,\ndnl   acl_hardcode_libdir_flag_spec,\ndnl   acl_hardcode_libdir_separator,\ndnl   acl_hardcode_direct,\ndnl   acl_hardcode_minus_L.\nAC_DEFUN([AC_LIB_RPATH],\n[\n  dnl Tell automake >= 1.10 to complain if config.rpath is missing.\n  m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([config.rpath])])\n  AC_REQUIRE([AC_PROG_CC])                dnl we use $CC, $GCC, $LDFLAGS\n  AC_REQUIRE([AC_LIB_PROG_LD])            dnl we use $LD, $with_gnu_ld\n  AC_REQUIRE([AC_CANONICAL_HOST])         dnl we use $host\n  AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT]) dnl we use $ac_aux_dir\n  AC_CACHE_CHECK([for shared library run path origin], [acl_cv_rpath], [\n    CC=\"$CC\" GCC=\"$GCC\" LDFLAGS=\"$LDFLAGS\" LD=\"$LD\" with_gnu_ld=\"$with_gnu_ld\" \\\n    ${CONFIG_SHELL-/bin/sh} \"$ac_aux_dir/config.rpath\" \"$host\" > conftest.sh\n    . ./conftest.sh\n    rm -f ./conftest.sh\n    acl_cv_rpath=done\n  ])\n  wl=\"$acl_cv_wl\"\n  acl_libext=\"$acl_cv_libext\"\n  acl_shlibext=\"$acl_cv_shlibext\"\n  acl_libname_spec=\"$acl_cv_libname_spec\"\n  acl_library_names_spec=\"$acl_cv_library_names_spec\"\n  acl_hardcode_libdir_flag_spec=\"$acl_cv_hardcode_libdir_flag_spec\"\n  acl_hardcode_libdir_separator=\"$acl_cv_hardcode_libdir_separator\"\n  acl_hardcode_direct=\"$acl_cv_hardcode_direct\"\n  acl_hardcode_minus_L=\"$acl_cv_hardcode_minus_L\"\n  dnl Determine whether the user wants rpath handling at all.\n  AC_ARG_ENABLE([rpath],\n    [  --disable-rpath         do not hardcode runtime library paths],\n    :, enable_rpath=yes)\n])\n\ndnl AC_LIB_FROMPACKAGE(name, package)\ndnl declares that libname comes from the given package. The configure file\ndnl will then not have a --with-libname-prefix option but a\ndnl --with-package-prefix option. Several libraries can come from the same\ndnl package. This declaration must occur before an AC_LIB_LINKFLAGS or similar\ndnl macro call that searches for libname.\nAC_DEFUN([AC_LIB_FROMPACKAGE],\n[\n  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],\n                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n  define([acl_frompackage_]NAME, [$2])\n  popdef([NAME])\n  pushdef([PACK],[$2])\n  pushdef([PACKUP],[m4_translit(PACK,[abcdefghijklmnopqrstuvwxyz./+-],\n                                     [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n  define([acl_libsinpackage_]PACKUP,\n    m4_ifdef([acl_libsinpackage_]PACKUP, [m4_defn([acl_libsinpackage_]PACKUP)[, ]],)[lib$1])\n  popdef([PACKUP])\n  popdef([PACK])\n])\n\ndnl AC_LIB_LINKFLAGS_BODY(name [, dependencies]) searches for libname and\ndnl the libraries corresponding to explicit and implicit dependencies.\ndnl Sets the LIB${NAME}, LTLIB${NAME} and INC${NAME} variables.\ndnl Also, sets the LIB${NAME}_PREFIX variable to nonempty if libname was found\ndnl in ${LIB${NAME}_PREFIX}/$acl_libdirstem.\nAC_DEFUN([AC_LIB_LINKFLAGS_BODY],\n[\n  AC_REQUIRE([AC_LIB_PREPARE_MULTILIB])\n  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],\n                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n  pushdef([PACK],[m4_ifdef([acl_frompackage_]NAME, [acl_frompackage_]NAME, lib[$1])])\n  pushdef([PACKUP],[m4_translit(PACK,[abcdefghijklmnopqrstuvwxyz./+-],\n                                     [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n  pushdef([PACKLIBS],[m4_ifdef([acl_frompackage_]NAME, [acl_libsinpackage_]PACKUP, lib[$1])])\n  dnl Autoconf >= 2.61 supports dots in --with options.\n  pushdef([P_A_C_K],[m4_if(m4_version_compare(m4_defn([m4_PACKAGE_VERSION]),[2.61]),[-1],[m4_translit(PACK,[.],[_])],PACK)])\n  dnl By default, look in $includedir and $libdir.\n  use_additional=yes\n  AC_LIB_WITH_FINAL_PREFIX([\n    eval additional_includedir=\\\"$includedir\\\"\n    eval additional_libdir=\\\"$libdir\\\"\n  ])\n  AC_ARG_WITH(P_A_C_K[-prefix],\n[[  --with-]]P_A_C_K[[-prefix[=DIR]  search for ]PACKLIBS[ in DIR/include and DIR/lib\n  --without-]]P_A_C_K[[-prefix     don't search for ]PACKLIBS[ in includedir and libdir]],\n[\n    if test \"X$withval\" = \"Xno\"; then\n      use_additional=no\n    else\n      if test \"X$withval\" = \"X\"; then\n        AC_LIB_WITH_FINAL_PREFIX([\n          eval additional_includedir=\\\"$includedir\\\"\n          eval additional_libdir=\\\"$libdir\\\"\n        ])\n      else\n        additional_includedir=\"$withval/include\"\n        additional_libdir=\"$withval/$acl_libdirstem\"\n        if test \"$acl_libdirstem2\" != \"$acl_libdirstem\" \\\n           && ! test -d \"$withval/$acl_libdirstem\"; then\n          additional_libdir=\"$withval/$acl_libdirstem2\"\n        fi\n      fi\n    fi\n])\n  dnl Search the library and its dependencies in $additional_libdir and\n  dnl $LDFLAGS. Using breadth-first-seach.\n  LIB[]NAME=\n  LTLIB[]NAME=\n  INC[]NAME=\n  LIB[]NAME[]_PREFIX=\n  dnl HAVE_LIB${NAME} is an indicator that LIB${NAME}, LTLIB${NAME} have been\n  dnl computed. So it has to be reset here.\n  HAVE_LIB[]NAME=\n  rpathdirs=\n  ltrpathdirs=\n  names_already_handled=\n  names_next_round='$1 $2'\n  while test -n \"$names_next_round\"; do\n    names_this_round=\"$names_next_round\"\n    names_next_round=\n    for name in $names_this_round; do\n      already_handled=\n      for n in $names_already_handled; do\n        if test \"$n\" = \"$name\"; then\n          already_handled=yes\n          break\n        fi\n      done\n      if test -z \"$already_handled\"; then\n        names_already_handled=\"$names_already_handled $name\"\n        dnl See if it was already located by an earlier AC_LIB_LINKFLAGS\n        dnl or AC_LIB_HAVE_LINKFLAGS call.\n        uppername=`echo \"$name\" | sed -e 'y|abcdefghijklmnopqrstuvwxyz./+-|ABCDEFGHIJKLMNOPQRSTUVWXYZ____|'`\n        eval value=\\\"\\$HAVE_LIB$uppername\\\"\n        if test -n \"$value\"; then\n          if test \"$value\" = yes; then\n            eval value=\\\"\\$LIB$uppername\\\"\n            test -z \"$value\" || LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$value\"\n            eval value=\\\"\\$LTLIB$uppername\\\"\n            test -z \"$value\" || LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }$value\"\n          else\n            dnl An earlier call to AC_LIB_HAVE_LINKFLAGS has determined\n            dnl that this library doesn't exist. So just drop it.\n            :\n          fi\n        else\n          dnl Search the library lib$name in $additional_libdir and $LDFLAGS\n          dnl and the already constructed $LIBNAME/$LTLIBNAME.\n          found_dir=\n          found_la=\n          found_so=\n          found_a=\n          eval libname=\\\"$acl_libname_spec\\\"    # typically: libname=lib$name\n          if test -n \"$acl_shlibext\"; then\n            shrext=\".$acl_shlibext\"             # typically: shrext=.so\n          else\n            shrext=\n          fi\n          if test $use_additional = yes; then\n            dir=\"$additional_libdir\"\n            dnl The same code as in the loop below:\n            dnl First look for a shared library.\n            if test -n \"$acl_shlibext\"; then\n              if test -f \"$dir/$libname$shrext\"; then\n                found_dir=\"$dir\"\n                found_so=\"$dir/$libname$shrext\"\n              else\n                if test \"$acl_library_names_spec\" = '$libname$shrext$versuffix'; then\n                  ver=`(cd \"$dir\" && \\\n                        for f in \"$libname$shrext\".*; do echo \"$f\"; done \\\n                        | sed -e \"s,^$libname$shrext\\\\\\\\.,,\" \\\n                        | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \\\n                        | sed 1q ) 2>/dev/null`\n                  if test -n \"$ver\" && test -f \"$dir/$libname$shrext.$ver\"; then\n                    found_dir=\"$dir\"\n                    found_so=\"$dir/$libname$shrext.$ver\"\n                  fi\n                else\n                  eval library_names=\\\"$acl_library_names_spec\\\"\n                  for f in $library_names; do\n                    if test -f \"$dir/$f\"; then\n                      found_dir=\"$dir\"\n                      found_so=\"$dir/$f\"\n                      break\n                    fi\n                  done\n                fi\n              fi\n            fi\n            dnl Then look for a static library.\n            if test \"X$found_dir\" = \"X\"; then\n              if test -f \"$dir/$libname.$acl_libext\"; then\n                found_dir=\"$dir\"\n                found_a=\"$dir/$libname.$acl_libext\"\n              fi\n            fi\n            if test \"X$found_dir\" != \"X\"; then\n              if test -f \"$dir/$libname.la\"; then\n                found_la=\"$dir/$libname.la\"\n              fi\n            fi\n          fi\n          if test \"X$found_dir\" = \"X\"; then\n            for x in $LDFLAGS $LTLIB[]NAME; do\n              AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n              case \"$x\" in\n                -L*)\n                  dir=`echo \"X$x\" | sed -e 's/^X-L//'`\n                  dnl First look for a shared library.\n                  if test -n \"$acl_shlibext\"; then\n                    if test -f \"$dir/$libname$shrext\"; then\n                      found_dir=\"$dir\"\n                      found_so=\"$dir/$libname$shrext\"\n                    else\n                      if test \"$acl_library_names_spec\" = '$libname$shrext$versuffix'; then\n                        ver=`(cd \"$dir\" && \\\n                              for f in \"$libname$shrext\".*; do echo \"$f\"; done \\\n                              | sed -e \"s,^$libname$shrext\\\\\\\\.,,\" \\\n                              | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \\\n                              | sed 1q ) 2>/dev/null`\n                        if test -n \"$ver\" && test -f \"$dir/$libname$shrext.$ver\"; then\n                          found_dir=\"$dir\"\n                          found_so=\"$dir/$libname$shrext.$ver\"\n                        fi\n                      else\n                        eval library_names=\\\"$acl_library_names_spec\\\"\n                        for f in $library_names; do\n                          if test -f \"$dir/$f\"; then\n                            found_dir=\"$dir\"\n                            found_so=\"$dir/$f\"\n                            break\n                          fi\n                        done\n                      fi\n                    fi\n                  fi\n                  dnl Then look for a static library.\n                  if test \"X$found_dir\" = \"X\"; then\n                    if test -f \"$dir/$libname.$acl_libext\"; then\n                      found_dir=\"$dir\"\n                      found_a=\"$dir/$libname.$acl_libext\"\n                    fi\n                  fi\n                  if test \"X$found_dir\" != \"X\"; then\n                    if test -f \"$dir/$libname.la\"; then\n                      found_la=\"$dir/$libname.la\"\n                    fi\n                  fi\n                  ;;\n              esac\n              if test \"X$found_dir\" != \"X\"; then\n                break\n              fi\n            done\n          fi\n          if test \"X$found_dir\" != \"X\"; then\n            dnl Found the library.\n            LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-L$found_dir -l$name\"\n            if test \"X$found_so\" != \"X\"; then\n              dnl Linking with a shared library. We attempt to hardcode its\n              dnl directory into the executable's runpath, unless it's the\n              dnl standard /usr/lib.\n              if test \"$enable_rpath\" = no \\\n                 || test \"X$found_dir\" = \"X/usr/$acl_libdirstem\" \\\n                 || test \"X$found_dir\" = \"X/usr/$acl_libdirstem2\"; then\n                dnl No hardcoding is needed.\n                LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n              else\n                dnl Use an explicit option to hardcode DIR into the resulting\n                dnl binary.\n                dnl Potentially add DIR to ltrpathdirs.\n                dnl The ltrpathdirs will be appended to $LTLIBNAME at the end.\n                haveit=\n                for x in $ltrpathdirs; do\n                  if test \"X$x\" = \"X$found_dir\"; then\n                    haveit=yes\n                    break\n                  fi\n                done\n                if test -z \"$haveit\"; then\n                  ltrpathdirs=\"$ltrpathdirs $found_dir\"\n                fi\n                dnl The hardcoding into $LIBNAME is system dependent.\n                if test \"$acl_hardcode_direct\" = yes; then\n                  dnl Using DIR/libNAME.so during linking hardcodes DIR into the\n                  dnl resulting binary.\n                  LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n                else\n                  if test -n \"$acl_hardcode_libdir_flag_spec\" && test \"$acl_hardcode_minus_L\" = no; then\n                    dnl Use an explicit option to hardcode DIR into the resulting\n                    dnl binary.\n                    LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n                    dnl Potentially add DIR to rpathdirs.\n                    dnl The rpathdirs will be appended to $LIBNAME at the end.\n                    haveit=\n                    for x in $rpathdirs; do\n                      if test \"X$x\" = \"X$found_dir\"; then\n                        haveit=yes\n                        break\n                      fi\n                    done\n                    if test -z \"$haveit\"; then\n                      rpathdirs=\"$rpathdirs $found_dir\"\n                    fi\n                  else\n                    dnl Rely on \"-L$found_dir\".\n                    dnl But don't add it if it's already contained in the LDFLAGS\n                    dnl or the already constructed $LIBNAME\n                    haveit=\n                    for x in $LDFLAGS $LIB[]NAME; do\n                      AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n                      if test \"X$x\" = \"X-L$found_dir\"; then\n                        haveit=yes\n                        break\n                      fi\n                    done\n                    if test -z \"$haveit\"; then\n                      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-L$found_dir\"\n                    fi\n                    if test \"$acl_hardcode_minus_L\" != no; then\n                      dnl FIXME: Not sure whether we should use\n                      dnl \"-L$found_dir -l$name\" or \"-L$found_dir $found_so\"\n                      dnl here.\n                      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n                    else\n                      dnl We cannot use $acl_hardcode_runpath_var and LD_RUN_PATH\n                      dnl here, because this doesn't fit in flags passed to the\n                      dnl compiler. So give up. No hardcoding. This affects only\n                      dnl very old systems.\n                      dnl FIXME: Not sure whether we should use\n                      dnl \"-L$found_dir -l$name\" or \"-L$found_dir $found_so\"\n                      dnl here.\n                      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-l$name\"\n                    fi\n                  fi\n                fi\n              fi\n            else\n              if test \"X$found_a\" != \"X\"; then\n                dnl Linking with a static library.\n                LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_a\"\n              else\n                dnl We shouldn't come here, but anyway it's good to have a\n                dnl fallback.\n                LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-L$found_dir -l$name\"\n              fi\n            fi\n            dnl Assume the include files are nearby.\n            additional_includedir=\n            case \"$found_dir\" in\n              */$acl_libdirstem | */$acl_libdirstem/)\n                basedir=`echo \"X$found_dir\" | sed -e 's,^X,,' -e \"s,/$acl_libdirstem/\"'*$,,'`\n                if test \"$name\" = '$1'; then\n                  LIB[]NAME[]_PREFIX=\"$basedir\"\n                fi\n                additional_includedir=\"$basedir/include\"\n                ;;\n              */$acl_libdirstem2 | */$acl_libdirstem2/)\n                basedir=`echo \"X$found_dir\" | sed -e 's,^X,,' -e \"s,/$acl_libdirstem2/\"'*$,,'`\n                if test \"$name\" = '$1'; then\n                  LIB[]NAME[]_PREFIX=\"$basedir\"\n                fi\n                additional_includedir=\"$basedir/include\"\n                ;;\n            esac\n            if test \"X$additional_includedir\" != \"X\"; then\n              dnl Potentially add $additional_includedir to $INCNAME.\n              dnl But don't add it\n              dnl   1. if it's the standard /usr/include,\n              dnl   2. if it's /usr/local/include and we are using GCC on Linux,\n              dnl   3. if it's already present in $CPPFLAGS or the already\n              dnl      constructed $INCNAME,\n              dnl   4. if it doesn't exist as a directory.\n              if test \"X$additional_includedir\" != \"X/usr/include\"; then\n                haveit=\n                if test \"X$additional_includedir\" = \"X/usr/local/include\"; then\n                  if test -n \"$GCC\"; then\n                    case $host_os in\n                      linux* | gnu* | k*bsd*-gnu) haveit=yes;;\n                    esac\n                  fi\n                fi\n                if test -z \"$haveit\"; then\n                  for x in $CPPFLAGS $INC[]NAME; do\n                    AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n                    if test \"X$x\" = \"X-I$additional_includedir\"; then\n                      haveit=yes\n                      break\n                    fi\n                  done\n                  if test -z \"$haveit\"; then\n                    if test -d \"$additional_includedir\"; then\n                      dnl Really add $additional_includedir to $INCNAME.\n                      INC[]NAME=\"${INC[]NAME}${INC[]NAME:+ }-I$additional_includedir\"\n                    fi\n                  fi\n                fi\n              fi\n            fi\n            dnl Look for dependencies.\n            if test -n \"$found_la\"; then\n              dnl Read the .la file. It defines the variables\n              dnl dlname, library_names, old_library, dependency_libs, current,\n              dnl age, revision, installed, dlopen, dlpreopen, libdir.\n              save_libdir=\"$libdir\"\n              case \"$found_la\" in\n                */* | *\\\\*) . \"$found_la\" ;;\n                *) . \"./$found_la\" ;;\n              esac\n              libdir=\"$save_libdir\"\n              dnl We use only dependency_libs.\n              for dep in $dependency_libs; do\n                case \"$dep\" in\n                  -L*)\n                    additional_libdir=`echo \"X$dep\" | sed -e 's/^X-L//'`\n                    dnl Potentially add $additional_libdir to $LIBNAME and $LTLIBNAME.\n                    dnl But don't add it\n                    dnl   1. if it's the standard /usr/lib,\n                    dnl   2. if it's /usr/local/lib and we are using GCC on Linux,\n                    dnl   3. if it's already present in $LDFLAGS or the already\n                    dnl      constructed $LIBNAME,\n                    dnl   4. if it doesn't exist as a directory.\n                    if test \"X$additional_libdir\" != \"X/usr/$acl_libdirstem\" \\\n                       && test \"X$additional_libdir\" != \"X/usr/$acl_libdirstem2\"; then\n                      haveit=\n                      if test \"X$additional_libdir\" = \"X/usr/local/$acl_libdirstem\" \\\n                         || test \"X$additional_libdir\" = \"X/usr/local/$acl_libdirstem2\"; then\n                        if test -n \"$GCC\"; then\n                          case $host_os in\n                            linux* | gnu* | k*bsd*-gnu) haveit=yes;;\n                          esac\n                        fi\n                      fi\n                      if test -z \"$haveit\"; then\n                        haveit=\n                        for x in $LDFLAGS $LIB[]NAME; do\n                          AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n                          if test \"X$x\" = \"X-L$additional_libdir\"; then\n                            haveit=yes\n                            break\n                          fi\n                        done\n                        if test -z \"$haveit\"; then\n                          if test -d \"$additional_libdir\"; then\n                            dnl Really add $additional_libdir to $LIBNAME.\n                            LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-L$additional_libdir\"\n                          fi\n                        fi\n                        haveit=\n                        for x in $LDFLAGS $LTLIB[]NAME; do\n                          AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n                          if test \"X$x\" = \"X-L$additional_libdir\"; then\n                            haveit=yes\n                            break\n                          fi\n                        done\n                        if test -z \"$haveit\"; then\n                          if test -d \"$additional_libdir\"; then\n                            dnl Really add $additional_libdir to $LTLIBNAME.\n                            LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-L$additional_libdir\"\n                          fi\n                        fi\n                      fi\n                    fi\n                    ;;\n                  -R*)\n                    dir=`echo \"X$dep\" | sed -e 's/^X-R//'`\n                    if test \"$enable_rpath\" != no; then\n                      dnl Potentially add DIR to rpathdirs.\n                      dnl The rpathdirs will be appended to $LIBNAME at the end.\n                      haveit=\n                      for x in $rpathdirs; do\n                        if test \"X$x\" = \"X$dir\"; then\n                          haveit=yes\n                          break\n                        fi\n                      done\n                      if test -z \"$haveit\"; then\n                        rpathdirs=\"$rpathdirs $dir\"\n                      fi\n                      dnl Potentially add DIR to ltrpathdirs.\n                      dnl The ltrpathdirs will be appended to $LTLIBNAME at the end.\n                      haveit=\n                      for x in $ltrpathdirs; do\n                        if test \"X$x\" = \"X$dir\"; then\n                          haveit=yes\n                          break\n                        fi\n                      done\n                      if test -z \"$haveit\"; then\n                        ltrpathdirs=\"$ltrpathdirs $dir\"\n                      fi\n                    fi\n                    ;;\n                  -l*)\n                    dnl Handle this in the next round.\n                    names_next_round=\"$names_next_round \"`echo \"X$dep\" | sed -e 's/^X-l//'`\n                    ;;\n                  *.la)\n                    dnl Handle this in the next round. Throw away the .la's\n                    dnl directory; it is already contained in a preceding -L\n                    dnl option.\n                    names_next_round=\"$names_next_round \"`echo \"X$dep\" | sed -e 's,^X.*/,,' -e 's,^lib,,' -e 's,\\.la$,,'`\n                    ;;\n                  *)\n                    dnl Most likely an immediate library name.\n                    LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$dep\"\n                    LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }$dep\"\n                    ;;\n                esac\n              done\n            fi\n          else\n            dnl Didn't find the library; assume it is in the system directories\n            dnl known to the linker and runtime loader. (All the system\n            dnl directories known to the linker should also be known to the\n            dnl runtime loader, otherwise the system is severely misconfigured.)\n            LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-l$name\"\n            LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-l$name\"\n          fi\n        fi\n      fi\n    done\n  done\n  if test \"X$rpathdirs\" != \"X\"; then\n    if test -n \"$acl_hardcode_libdir_separator\"; then\n      dnl Weird platform: only the last -rpath option counts, the user must\n      dnl pass all path elements in one option. We can arrange that for a\n      dnl single library, but not when more than one $LIBNAMEs are used.\n      alldirs=\n      for found_dir in $rpathdirs; do\n        alldirs=\"${alldirs}${alldirs:+$acl_hardcode_libdir_separator}$found_dir\"\n      done\n      dnl Note: acl_hardcode_libdir_flag_spec uses $libdir and $wl.\n      acl_save_libdir=\"$libdir\"\n      libdir=\"$alldirs\"\n      eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n      libdir=\"$acl_save_libdir\"\n      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$flag\"\n    else\n      dnl The -rpath options are cumulative.\n      for found_dir in $rpathdirs; do\n        acl_save_libdir=\"$libdir\"\n        libdir=\"$found_dir\"\n        eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n        libdir=\"$acl_save_libdir\"\n        LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$flag\"\n      done\n    fi\n  fi\n  if test \"X$ltrpathdirs\" != \"X\"; then\n    dnl When using libtool, the option that works for both libraries and\n    dnl executables is -R. The -R options are cumulative.\n    for found_dir in $ltrpathdirs; do\n      LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-R$found_dir\"\n    done\n  fi\n  popdef([P_A_C_K])\n  popdef([PACKLIBS])\n  popdef([PACKUP])\n  popdef([PACK])\n  popdef([NAME])\n])\n\ndnl AC_LIB_APPENDTOVAR(VAR, CONTENTS) appends the elements of CONTENTS to VAR,\ndnl unless already present in VAR.\ndnl Works only for CPPFLAGS, not for LIB* variables because that sometimes\ndnl contains two or three consecutive elements that belong together.\nAC_DEFUN([AC_LIB_APPENDTOVAR],\n[\n  for element in [$2]; do\n    haveit=\n    for x in $[$1]; do\n      AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n      if test \"X$x\" = \"X$element\"; then\n        haveit=yes\n        break\n      fi\n    done\n    if test -z \"$haveit\"; then\n      [$1]=\"${[$1]}${[$1]:+ }$element\"\n    fi\n  done\n])\n\ndnl For those cases where a variable contains several -L and -l options\ndnl referring to unknown libraries and directories, this macro determines the\ndnl necessary additional linker options for the runtime path.\ndnl AC_LIB_LINKFLAGS_FROM_LIBS([LDADDVAR], [LIBSVALUE], [USE-LIBTOOL])\ndnl sets LDADDVAR to linker options needed together with LIBSVALUE.\ndnl If USE-LIBTOOL evaluates to non-empty, linking with libtool is assumed,\ndnl otherwise linking without libtool is assumed.\nAC_DEFUN([AC_LIB_LINKFLAGS_FROM_LIBS],\n[\n  AC_REQUIRE([AC_LIB_RPATH])\n  AC_REQUIRE([AC_LIB_PREPARE_MULTILIB])\n  $1=\n  if test \"$enable_rpath\" != no; then\n    if test -n \"$acl_hardcode_libdir_flag_spec\" && test \"$acl_hardcode_minus_L\" = no; then\n      dnl Use an explicit option to hardcode directories into the resulting\n      dnl binary.\n      rpathdirs=\n      next=\n      for opt in $2; do\n        if test -n \"$next\"; then\n          dir=\"$next\"\n          dnl No need to hardcode the standard /usr/lib.\n          if test \"X$dir\" != \"X/usr/$acl_libdirstem\" \\\n             && test \"X$dir\" != \"X/usr/$acl_libdirstem2\"; then\n            rpathdirs=\"$rpathdirs $dir\"\n          fi\n          next=\n        else\n          case $opt in\n            -L) next=yes ;;\n            -L*) dir=`echo \"X$opt\" | sed -e 's,^X-L,,'`\n                 dnl No need to hardcode the standard /usr/lib.\n                 if test \"X$dir\" != \"X/usr/$acl_libdirstem\" \\\n                    && test \"X$dir\" != \"X/usr/$acl_libdirstem2\"; then\n                   rpathdirs=\"$rpathdirs $dir\"\n                 fi\n                 next= ;;\n            *) next= ;;\n          esac\n        fi\n      done\n      if test \"X$rpathdirs\" != \"X\"; then\n        if test -n \"\"$3\"\"; then\n          dnl libtool is used for linking. Use -R options.\n          for dir in $rpathdirs; do\n            $1=\"${$1}${$1:+ }-R$dir\"\n          done\n        else\n          dnl The linker is used for linking directly.\n          if test -n \"$acl_hardcode_libdir_separator\"; then\n            dnl Weird platform: only the last -rpath option counts, the user\n            dnl must pass all path elements in one option.\n            alldirs=\n            for dir in $rpathdirs; do\n              alldirs=\"${alldirs}${alldirs:+$acl_hardcode_libdir_separator}$dir\"\n            done\n            acl_save_libdir=\"$libdir\"\n            libdir=\"$alldirs\"\n            eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n            libdir=\"$acl_save_libdir\"\n            $1=\"$flag\"\n          else\n            dnl The -rpath options are cumulative.\n            for dir in $rpathdirs; do\n              acl_save_libdir=\"$libdir\"\n              libdir=\"$dir\"\n              eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n              libdir=\"$acl_save_libdir\"\n              $1=\"${$1}${$1:+ }$flag\"\n            done\n          fi\n        fi\n      fi\n    fi\n  fi\n  AC_SUBST([$1])\n])\n",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/w32/compat/posixfcn.c": "/* Replacements for Posix functions and Posix functionality for MS-Windows.\n\nCopyright (C) 2013-2016 Free Software Foundation, Inc.\nThis file is part of GNU Make.\n\nGNU Make is free software; you can redistribute it and/or modify it under the\nterms of the GNU General Public License as published by the Free Software\nFoundation; either version 3 of the License, or (at your option) any later\nversion.\n\nGNU Make is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\nA PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with\nthis program.  If not, see <http://www.gnu.org/licenses/>.  */\n\n#include <string.h>\n#include <io.h>\n#include <stdarg.h>\n#include <errno.h>\n#include <windows.h>\n\n#include \"dlfcn.h\"\n\n#include \"makeint.h\"\n#include \"job.h\"\n\n#ifndef NO_OUTPUT_SYNC\n/* Support for OUTPUT_SYNC and related functionality.  */\n\n/* Emulation of fcntl that supports only F_GETFD and F_SETLKW.  */\nint\nfcntl (intptr_t fd, int cmd, ...)\n{\n  va_list ap;\n\n  va_start (ap, cmd);\n\n  switch (cmd)\n    {\n      case F_GETFD:\n        va_end (ap);\n        /* Could have used GetHandleInformation, but that isn't\n           supported on Windows 9X.  */\n        if (_get_osfhandle (fd) == -1)\n          return -1;\n        return 0;\n      case F_SETLKW:\n        {\n          void *buf = va_arg (ap, void *);\n          struct flock *fl = (struct flock *)buf;\n          HANDLE hmutex = (HANDLE)fd;\n          static struct flock last_fl;\n          short last_type = last_fl.l_type;\n\n          va_end (ap);\n\n          if (hmutex == INVALID_HANDLE_VALUE || !hmutex)\n            return -1;\n\n          last_fl = *fl;\n\n          switch (fl->l_type)\n            {\n\n              case F_WRLCK:\n                {\n                  DWORD result;\n\n                  if (last_type == F_WRLCK)\n                    {\n                      /* Don't call WaitForSingleObject if we already\n                         own the mutex, because doing so will require\n                         us to call ReleaseMutex an equal number of\n                         times, before the mutex is actually\n                         released.  */\n                      return 0;\n                    }\n\n                  result = WaitForSingleObject (hmutex, INFINITE);\n                  switch (result)\n                    {\n                      case WAIT_OBJECT_0:\n                        /* We don't care if the mutex owner crashed or\n                           exited.  */\n                      case WAIT_ABANDONED:\n                        return 0;\n                      case WAIT_FAILED:\n                      case WAIT_TIMEOUT: /* cannot happen, really */\n                        {\n                          DWORD err = GetLastError ();\n\n                          /* Invalidate the last command.  */\n                          memset (&last_fl, 0, sizeof (last_fl));\n\n                          switch (err)\n                            {\n                              case ERROR_INVALID_HANDLE:\n                              case ERROR_INVALID_FUNCTION:\n                                errno = EINVAL;\n                                return -1;\n                              default:\n                                errno = EDEADLOCK;\n                                return -1;\n                            }\n                        }\n                    }\n                }\n              case F_UNLCK:\n                {\n                  /* FIXME: Perhaps we should call ReleaseMutex\n                     repatedly until it errors out, to make sure the\n                     mutext is released even if we somehow managed to\n                     to take ownership multiple times?  */\n                  BOOL status = ReleaseMutex (hmutex);\n\n                  if (status)\n                    return 0;\n                  else\n                    {\n                      DWORD err = GetLastError ();\n\n                      if (err == ERROR_NOT_OWNER)\n                        errno = EPERM;\n                      else\n                        {\n                          memset (&last_fl, 0, sizeof (last_fl));\n                          errno = EINVAL;\n                        }\n                      return -1;\n                    }\n                }\n              default:\n                errno = ENOSYS;\n                return -1;\n            }\n        }\n      default:\n        errno = ENOSYS;\n        va_end (ap);\n        return -1;\n    }\n}\n\nstatic intptr_t mutex_handle = -1;\n\n/* Record in a static variable the mutex handle we were requested to\n   use.  That nameless mutex was created by the top-level Make, and\n   its handle was passed to us via inheritance.  The value of that\n   handle is passed via the command-line arguments, so that we know\n   which handle to use.  */\nvoid\nrecord_sync_mutex (const char *str)\n{\n  char *endp;\n  intptr_t hmutex = strtol (str, &endp, 16);\n\n  if (*endp == '\\0')\n    mutex_handle = hmutex;\n  else\n    {\n      mutex_handle = -1;\n      errno = EINVAL;\n    }\n}\n\n/* Create a new mutex or reuse one created by our parent.  */\nintptr_t\ncreate_mutex (void)\n{\n  SECURITY_ATTRIBUTES secattr;\n  intptr_t hmutex = -1;\n\n  /* If we have a mutex handle passed from the parent Make, just use\n     that.  */\n  if (mutex_handle > 0)\n    return mutex_handle;\n\n  /* We are the top-level Make, and we want the handle to be inherited\n     by our child processes.  */\n  secattr.nLength = sizeof (secattr);\n  secattr.lpSecurityDescriptor = NULL; /* use default security descriptor */\n  secattr.bInheritHandle = TRUE;\n\n  hmutex = (intptr_t)CreateMutex (&secattr, FALSE, NULL);\n  if (!hmutex)\n    {\n      DWORD err = GetLastError ();\n\n      fprintf (stderr, \"CreateMutex: error %lu\\n\", err);\n      errno = ENOLCK;\n      hmutex = -1;\n    }\n\n  mutex_handle = hmutex;\n  return hmutex;\n}\n\n/* Return non-zero if F1 and F2 are 2 streams representing the same\n   file or pipe or device.  */\nint\nsame_stream (FILE *f1, FILE *f2)\n{\n  HANDLE fh1 = (HANDLE)_get_osfhandle (fileno (f1));\n  HANDLE fh2 = (HANDLE)_get_osfhandle (fileno (f2));\n\n  /* Invalid file descriptors get treated as different streams.  */\n  if (fh1 && fh1 != INVALID_HANDLE_VALUE\n      && fh2 && fh2 != INVALID_HANDLE_VALUE)\n    {\n      if (fh1 == fh2)\n        return 1;\n      else\n        {\n          DWORD ftyp1 = GetFileType (fh1), ftyp2 = GetFileType (fh2);\n\n          if (ftyp1 != ftyp2\n              || ftyp1 == FILE_TYPE_UNKNOWN || ftyp2 == FILE_TYPE_UNKNOWN)\n            return 0;\n          else if (ftyp1 == FILE_TYPE_CHAR)\n            {\n              /* For character devices, check if they both refer to a\n                 console.  This loses if both handles refer to the\n                 null device (FIXME!), but in that case we don't care\n                 in the context of Make.  */\n              DWORD conmode1, conmode2;\n\n              /* Each process on Windows can have at most 1 console,\n                 so if both handles are for the console device, they\n                 are the same.  We also compare the console mode to\n                 distinguish between stdin and stdout/stderr.  */\n              if (GetConsoleMode (fh1, &conmode1)\n                  && GetConsoleMode (fh2, &conmode2)\n                  && conmode1 == conmode2)\n                return 1;\n            }\n          else\n            {\n              /* For disk files and pipes, compare their unique\n                 attributes.  */\n              BY_HANDLE_FILE_INFORMATION bhfi1, bhfi2;\n\n              /* Pipes get zero in the volume serial number, but do\n                 appear to have meaningful information in file index\n                 attributes.  We test file attributes as well, for a\n                 good measure.  */\n              if (GetFileInformationByHandle (fh1, &bhfi1)\n                  && GetFileInformationByHandle (fh2, &bhfi2))\n                return (bhfi1.dwVolumeSerialNumber == bhfi2.dwVolumeSerialNumber\n                        && bhfi1.nFileIndexLow == bhfi2.nFileIndexLow\n                        && bhfi1.nFileIndexHigh == bhfi2.nFileIndexHigh\n                        && bhfi1.dwFileAttributes == bhfi2.dwFileAttributes);\n            }\n        }\n    }\n  return 0;\n}\n\n/* A replacement for tmpfile, since the MSVCRT implementation creates\n   the file in the root directory of the current drive, which might\n   not be writable by our user.  Most of the code borrowed from\n   create_batch_file, see job.c.  */\nFILE *\ntmpfile (void)\n{\n  char temp_path[MAXPATHLEN];\n  unsigned path_size = GetTempPath (sizeof temp_path, temp_path);\n  int path_is_dot = 0;\n  /* The following variable is static so we won't try to reuse a name\n     that was generated a little while ago, because that file might\n     not be on disk yet, since we use FILE_ATTRIBUTE_TEMPORARY below,\n     which tells the OS it doesn't need to flush the cache to disk.\n     If the file is not yet on disk, we might think the name is\n     available, while it really isn't.  This happens in parallel\n     builds, where Make doesn't wait for one job to finish before it\n     launches the next one.  */\n  static unsigned uniq = 0;\n  static int second_loop = 0;\n  const char base[] = \"gmake_tmpf\";\n  const unsigned sizemax = sizeof base - 1 + 4 + 10 + 10;\n  unsigned pid = GetCurrentProcessId ();\n\n  if (path_size == 0)\n    {\n      path_size = GetCurrentDirectory (sizeof temp_path, temp_path);\n      path_is_dot = 1;\n    }\n\n  ++uniq;\n  if (uniq >= 0x10000 && !second_loop)\n    {\n      /* If we already had 64K batch files in this\n         process, make a second loop through the numbers,\n         looking for free slots, i.e. files that were\n         deleted in the meantime.  */\n      second_loop = 1;\n      uniq = 1;\n    }\n  while (path_size > 0 &&\n         path_size + sizemax < sizeof temp_path &&\n         !(uniq >= 0x10000 && second_loop))\n    {\n      HANDLE h;\n\n      sprintf (temp_path + path_size,\n               \"%s%s%u-%x.tmp\",\n               temp_path[path_size - 1] == '\\\\' ? \"\" : \"\\\\\",\n               base, pid, uniq);\n      h = CreateFile (temp_path,  /* file name */\n                      GENERIC_READ | GENERIC_WRITE | DELETE, /* desired access */\n                      FILE_SHARE_READ | FILE_SHARE_WRITE,    /* share mode */\n                      NULL,                                  /* default security attributes */\n                      CREATE_NEW,                            /* creation disposition */\n                      FILE_ATTRIBUTE_NORMAL |                /* flags and attributes */\n                      FILE_ATTRIBUTE_TEMPORARY |\n                      FILE_FLAG_DELETE_ON_CLOSE,\n                      NULL);                                 /* no template file */\n\n      if (h == INVALID_HANDLE_VALUE)\n        {\n          const DWORD er = GetLastError ();\n\n          if (er == ERROR_FILE_EXISTS || er == ERROR_ALREADY_EXISTS)\n            {\n              ++uniq;\n              if (uniq == 0x10000 && !second_loop)\n                {\n                  second_loop = 1;\n                  uniq = 1;\n                }\n            }\n\n          /* The temporary path is not guaranteed to exist, or might\n             not be writable by user.  Use the current directory as\n             fallback.  */\n          else if (path_is_dot == 0)\n            {\n              path_size = GetCurrentDirectory (sizeof temp_path, temp_path);\n              path_is_dot = 1;\n            }\n\n          else\n            {\n              errno = EACCES;\n              break;\n            }\n        }\n      else\n        {\n          int fd = _open_osfhandle ((intptr_t)h, 0);\n\n          return _fdopen (fd, \"w+b\");\n        }\n    }\n\n  if (uniq >= 0x10000)\n    errno = EEXIST;\n  return NULL;\n}\n\n#endif  /* !NO_OUTPUT_SYNC */\n\n#if MAKE_LOAD\n\n/* Support for dynamic loading of objects.  */\n\n\nstatic DWORD last_err;\n\nvoid *\ndlopen (const char *file, int mode)\n{\n  char dllfn[MAX_PATH], *p;\n  HANDLE dllhandle;\n\n  if ((mode & ~(RTLD_LAZY | RTLD_NOW | RTLD_GLOBAL)) != 0)\n    {\n      errno = EINVAL;\n      last_err = ERROR_INVALID_PARAMETER;\n      return NULL;\n    }\n\n  if (!file)\n    dllhandle = GetModuleHandle (NULL);\n  else\n    {\n      /* MSDN says to be sure to use backslashes in the DLL file name.  */\n      strcpy (dllfn, file);\n      for (p = dllfn; *p; p++)\n        if (*p == '/')\n          *p = '\\\\';\n\n      dllhandle = LoadLibrary (dllfn);\n    }\n  if (!dllhandle)\n    last_err = GetLastError ();\n\n  return dllhandle;\n}\n\nchar *\ndlerror (void)\n{\n  static char errbuf[1024];\n  DWORD ret;\n\n  if (!last_err)\n    return NULL;\n\n  ret = FormatMessage (FORMAT_MESSAGE_FROM_SYSTEM\n                       | FORMAT_MESSAGE_IGNORE_INSERTS,\n                       NULL, last_err, 0, errbuf, sizeof (errbuf), NULL);\n  while (ret > 0 && (errbuf[ret - 1] == '\\n' || errbuf[ret - 1] == '\\r'))\n    --ret;\n\n  errbuf[ret] = '\\0';\n  if (!ret)\n    sprintf (errbuf, \"Error code %lu\", last_err);\n\n  last_err = 0;\n  return errbuf;\n}\n\nvoid *\ndlsym (void *handle, const char *name)\n{\n  FARPROC addr = NULL;\n\n  if (!handle || handle == INVALID_HANDLE_VALUE)\n    {\n      last_err = ERROR_INVALID_PARAMETER;\n      return NULL;\n    }\n\n  addr = GetProcAddress (handle, name);\n  if (!addr)\n    last_err = GetLastError ();\n\n  return (void *)addr;\n}\n\nint\ndlclose (void *handle)\n{\n  if (!handle || handle == INVALID_HANDLE_VALUE)\n    return -1;\n  if (!FreeLibrary (handle))\n    return -1;\n\n  return 0;\n}\n\n\n#endif  /* MAKE_LOAD */\n\n\n/* MS runtime's isatty returns non-zero for any character device,\n   including the null device, which is not what we want.  */\nint\nisatty (int fd)\n{\n  HANDLE fh = (HANDLE) _get_osfhandle (fd);\n  DWORD con_mode;\n\n  if (fh == INVALID_HANDLE_VALUE)\n    {\n      errno = EBADF;\n      return 0;\n    }\n  if (GetConsoleMode (fh, &con_mode))\n    return 1;\n\n  errno = ENOTTY;\n  return 0;\n}\n\nchar *\nttyname (int fd)\n{\n  /* This \"knows\" that Make only asks about stdout and stderr.  A more\n     sophisticated implementation should test whether FD is open for\n     input or output.  We can do that by looking at the mode returned\n     by GetConsoleMode.  */\n  return \"CONOUT$\";\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/w32/include/dlfcn.h": "/* dlfcn.h replacement for MS-Windows build.\nCopyright (C) 2013-2016 Free Software Foundation, Inc.\nThis file is part of GNU Make.\n\nGNU Make is free software; you can redistribute it and/or modify it under the\nterms of the GNU General Public License as published by the Free Software\nFoundation; either version 3 of the License, or (at your option) any later\nversion.\n\nGNU Make is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\nA PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with\nthis program.  If not, see <http://www.gnu.org/licenses/>.  */\n\n#ifndef DLFCN_H\n#define DLFCN_H\n\n#define RTLD_LAZY   1\n#define RTLD_NOW    2\n#define RTLD_GLOBAL 4\n\nextern void *dlopen (const char *, int);\nextern void *dlsym (void *, const char *);\nextern char *dlerror (void);\nextern int   dlclose (void *);\n\n#endif  /* DLFCN_H */\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/vmsify.c",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/config.h-vms",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/makefile.vms",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/lt.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/fi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/ga.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/sv.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/hr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/he.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/uk.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/ga.po",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/pt_BR.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/ja.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/fr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/he.po",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/de.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/id.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/be.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/nl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/pt_BR.po",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/cs.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/pl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/gl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/vi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/zh_CN.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/fr.po",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/da.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/es.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/it.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/ko.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/ru.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gmake-4.2.1-7n647xnrn773tlkedkgnjw4xuwzz2tip/spack-src/po/tr.gmo"
    ],
    "total_files": 204
}