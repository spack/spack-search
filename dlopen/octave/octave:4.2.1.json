{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/configure.ac": "dnl Process this file with autoconf to produce a configure script.\ndnl\ndnl Copyright (C) 1993-2017 John W. Eaton\n###\n### This file is part of Octave.\n###\n### Octave is free software; you can redistribute it and/or modify it\n### under the terms of the GNU General Public License as published by the\n### Free Software Foundation; either version 3 of the License, or (at\n### your option) any later version.\n###\n### Octave is distributed in the hope that it will be useful, but WITHOUT\n### ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n### for more details.\n###\n### You should have received a copy of the GNU General Public License\n### along with Octave; see the file COPYING.  If not, see\n### <http://www.gnu.org/licenses/>.\n\nAC_PREREQ([2.63])\nAC_INIT([GNU Octave], [4.2.1], [http://octave.org/bugs.html], [octave])\n\ndnl Note that the version number is duplicated here and in AC_INIT\ndnl because AC_INIT requires it to be static, not computed from\ndnl shell variables.\nOCTAVE_MAJOR_VERSION=4\nOCTAVE_MINOR_VERSION=2\nOCTAVE_PATCH_VERSION=1\n\ndnl PACKAGE_VERSION is set by the AC_INIT VERSION arg\nOCTAVE_VERSION=\"$PACKAGE_VERSION\"\n\nOCTAVE_COPYRIGHT=\"Copyright (C) 2017 John W. Eaton and others.\"\n\nOCTAVE_RELEASE_DATE=\"2017-02-22\"\n\n## The \"API version\" is used as a way of checking that interfaces in the\n## liboctave and libinterp libraries haven't changed in a backwardly\n## incompatible way when loading .oct files.  A better way to do that is\n## with library versioning, but not all systems support that.\n## NOTE: This macro will be removed in a future version of Octave.  If\n## you insist on checking for features using a version number, use the\n## OCTAVE_MAJOR_VERSION, OCTAVE_MINOR_VERSION, and\n## OCTAVE_PATCH_VERSION macros instead.\n## FIXME: Since we also set libtool versions for liboctave and\n## libinterp, perhaps we should be computing the \"api version\" from\n## those versions numbers in some way instead of setting it\n## independently here.\nOCTAVE_API_VERSION=\"api-v51\"\n\nAC_SUBST(OCTAVE_MAJOR_VERSION)\nAC_SUBST(OCTAVE_MINOR_VERSION)\nAC_SUBST(OCTAVE_PATCH_VERSION)\nAC_SUBST(OCTAVE_VERSION)\nAC_SUBST(OCTAVE_COPYRIGHT)\nAC_SUBST(OCTAVE_RELEASE_DATE)\nAC_SUBST(OCTAVE_API_VERSION)\n\ndnl FIXME: We should auto-insert the Mercurial changeset ID into the\ndnl        AC_REVISION field whenever configure.ac is modified.\ndnl AC_REVISION($Revision: 1.603 $)\nAC_CONFIG_SRCDIR([libinterp/octave.cc])\nAC_CONFIG_HEADERS([config.h:config.in.h])\nAC_CONFIG_AUX_DIR([build-aux])\nAC_CONFIG_MACRO_DIR([m4])\n\nAM_INIT_AUTOMAKE([1.11 foreign -Wno-portability -Wno-override tar-ustar subdir-objects dist-lzip])\n\n## Add the option to enable silent rules and make silent rules the\n## default behavior.  Available since Automake 1.11 and included by\n## default starting with Automake 1.13.\nAM_SILENT_RULES([yes])\n\nOCTAVE_CANONICAL_HOST\n\nAC_DEFINE(OCTAVE_SOURCE, 1, [Define to 1 if this is Octave.])\n\nAC_USE_SYSTEM_EXTENSIONS\n\n### Make configure args available for other uses.\n\nconfig_opts=$ac_configure_args\nAC_SUBST(config_opts)\n\n## Set default file locations.\n\n## Where to install and expect libraries like liboctave.a, liboctinterp.a,\n## and other architecture-dependent data.\nOCTAVE_SET_DEFAULT([octlibdir], '${libdir}/octave/${version}')\n\n## Where to put executables to be run by Octave rather than\n## the user.  This path usually includes the Octave version\n## and configuration name, so that multiple configurations\n## for multiple versions of Octave may be installed at once.\nOCTAVE_SET_DEFAULT([archlibdir],\n  '${libexecdir}/octave/${version}/exec/${canonical_host_type}')\n\n## Where to put executables to be run by Octave rather than by the\n## user that are specific to this site.\nOCTAVE_SET_DEFAULT([localarchlibdir],\n  '${libexecdir}/octave/site/exec/${canonical_host_type}')\n\nOCTAVE_SET_DEFAULT([localapiarchlibdir],\n  '${libexecdir}/octave/${api_version}/site/exec/${canonical_host_type}')\n\nOCTAVE_SET_DEFAULT([localverarchlibdir],\n  '${libexecdir}/octave/${version}/site/exec/${canonical_host_type}')\n\n## Where to put object files that will by dynamically loaded.\n## This path usually includes the Octave version and configuration\n## name, so that multiple configurations for multiple versions of\n## Octave may be installed at once.\nOCTAVE_SET_DEFAULT([octfiledir],\n  '${libdir}/octave/${version}/oct/${canonical_host_type}')\n\n## Directories Octave should search for object files that will be\n## dynamically loaded and that are specific to this site\n## (i.e. customizations), before consulting ${octfiledir}.  This should\n## be a colon-separated list of directories.\nOCTAVE_SET_DEFAULT([localoctfiledir],\n  '${libdir}/octave/site/oct/${canonical_host_type}')\n\nOCTAVE_SET_DEFAULT([localapioctfiledir],\n  '${libdir}/octave/site/oct/${api_version}/${canonical_host_type}')\n\nOCTAVE_SET_DEFAULT([localveroctfiledir],\n  '${libdir}/octave/${version}/site/oct/${canonical_host_type}')\n\n## Where to install Octave's include files.\nOCTAVE_SET_DEFAULT([octincludedir], '${includedir}/octave-${version}/octave')\n\n## Where to install the function file distributed with\n## Octave.  This includes the Octave version, so that the\n## function files for different versions of Octave will install\n## themselves in separate directories.\nOCTAVE_SET_DEFAULT([fcnfiledir], '${datadir}/octave/${version}/m')\n\n## Directories Octave should search for function files specific\n## to this site (i.e. customizations), before consulting\n## ${fcnfiledir}.  This should be a colon-separated list of\n## directories.\nOCTAVE_SET_DEFAULT([localfcnfiledir], '${datadir}/octave/site/m')\n\nOCTAVE_SET_DEFAULT([localapifcnfiledir],\n  '${datadir}/octave/site/${api_version}/m')\n\nOCTAVE_SET_DEFAULT([localverfcnfiledir], '${datadir}/octave/${version}/site/m')\n\n## Where to install and expect extra files like NEWS and doc-cache.\nOCTAVE_SET_DEFAULT([octetcdir], '${datadir}/octave/${version}/etc')\n\n## Where to install and expect the language files for the gui.\nOCTAVE_SET_DEFAULT([octlocaledir], '${datadir}/octave/${version}/locale')\n\n## The full path to the default doc cache file.\nOCTAVE_SET_DEFAULT([doc_cache_file], '${octetcdir}/doc-cache')\n\n## Where to install test files.\nOCTAVE_SET_DEFAULT([octtestsdir], '${octetcdir}/tests')\n\n## The full path to the default texi macros file.\nOCTAVE_SET_DEFAULT([texi_macros_file], '${octetcdir}/macros.texi')\n\n## Where Octave will search to find image files.\nOCTAVE_SET_DEFAULT([imagedir], '${datadir}/octave/${version}/imagelib')\n\n## Where Octave will search for example data files shipped with distribution.\nOCTAVE_SET_DEFAULT([octdatadir], '${datadir}/octave/${version}/data')\n\n## Where Octave will look for startup files\nOCTAVE_SET_DEFAULT([startupfiledir], ['${fcnfiledir}/startup'])\nOCTAVE_SET_DEFAULT([localstartupfiledir], ['${localfcnfiledir}/startup'])\n\nOCTAVE_SET_DEFAULT([man1dir], '${mandir}/man1')\n\nOCTAVE_SET_DEFAULT([man1ext], '.1')\n\nOCTAVE_SET_DEFAULT([infofile], '${infodir}/octave.info')\n\n### Check for programs used in building, installing, and running Octave.\n\n## Programs used in configuring Octave.\n## Find pkg-config executable (sets $PKG_CONFIG)\nPKG_PROG_PKG_CONFIG\n\n## Programs used in Makefiles.\nAC_PROG_AWK\nAC_PROG_GREP\nOCTAVE_PROG_FIND\nOCTAVE_PROG_SED\nOCTAVE_PROG_PERL\n\n## Programs used to build parts of Octave.\nOCTAVE_PROG_GPERF\n\nOCTAVE_PROG_FLEX\nAC_SUBST([LEX_OUTPUT_ROOT], [lex.octave_])\n\nOCTAVE_PROG_BISON\n\nOCTAVE_PROG_MAKEINFO\nOCTAVE_PROG_TEXI2DVI\nOCTAVE_PROG_TEXI2PDF\n\n## Programs used when installing Octave.\nAC_PROG_LN_S\nAC_PROG_MKDIR_P\n\nAC_PROG_INSTALL\nINSTALL_SCRIPT=\"${INSTALL}\"\nAC_SUBST(INSTALL_SCRIPT)\n\nOCTAVE_PROG_DESKTOP_FILE_INSTALL\n\n## Programs used when running Octave\nOCTAVE_PROG_GHOSTSCRIPT\nOCTAVE_PROG_GNUPLOT\nOCTAVE_PROG_PAGER\nOCTAVE_PROG_PYTHON\n\n## Programs used to generate icons file formats.\nOCTAVE_PROG_ICOTOOL\nOCTAVE_PROG_RSVG_CONVERT\nAM_CONDITIONAL([AMCOND_HAVE_ICON_TOOLS],\n  [test -n \"$ICOTOOL\" && test -n \"$RSVG_CONVERT\"])\n\n### Default terminal font for the GUI\ncase $host_os in\n  mingw* | msdosmsvc)\n    DEFAULT_TERMINAL_FONT=\"Lucida Console\"\n  ;;\n  *)\n    DEFAULT_TERMINAL_FONT=\"Courier\"\n  ;;\nesac\nDEFAULT_TERMINAL_FONT_SIZE=10\nAC_SUBST(DEFAULT_TERMINAL_FONT)\nAC_SUBST(DEFAULT_TERMINAL_FONT_SIZE)\n\n### Path separator.\n\nsepchar=':'\nAC_ARG_WITH([sepchar],\n  [AS_HELP_STRING([--with-sepchar=<char>],\n    [use <char> as the path separation character])])\ncase $with_sepchar in\n  yes | \"\")\n    case $host_os in\n      mingw* | msdosmsvc)\n        sepchar=';' ;;\n    esac\n  ;;\n  no)\n    AC_MSG_ERROR([You are required to define a path separation character])\n    ;;\n  *)\n    sepchar=$with_sepchar\n  ;;\nesac\nAC_SUBST(sepchar)\nAC_DEFINE_UNQUOTED(SEPCHAR, ['$sepchar'],\n  [Define this to be the path separator for your system, as a character constant.])\nAC_DEFINE_UNQUOTED(SEPCHAR_STR, [\"$sepchar\"],\n  [Define this to be the path separator for your system, as a string.])\n\n### Define the path to the shell on the host system.  Most systems will\n### ensure /bin/sh is the default shell so this can be safely ignored by\n### almost everyone.  However, when building for Android, for example,\n### this will need to be set.\nSHELL_PATH=/bin/sh\nAC_ARG_WITH([shell],\n  [AS_HELP_STRING([--with-shell=SHELL],\n    [use SHELL as the shell interpreter (default: /bin/sh)])])\ncase $with_shell in\n  no)\n    AC_MSG_ERROR([A shell interpreter is required])\n  ;;\n  yes | \"\")\n  ;;\n  *)\n    SHELL_PATH=$with_shell\n  ;;\nesac\nAC_DEFINE_UNQUOTED([SHELL_PATH], [\"$SHELL_PATH\"],\n  [Define this to be the path to the shell command interpreter.])\n\nENABLE_HG_ID=yes\nAC_ARG_ENABLE([hg-id],\n  [AS_HELP_STRING([--disable-hg-id],\n    [disable embedding of hg id in libraries])],\n  [if test \"$enableval\" = no; then ENABLE_HG_ID=no; fi], [])\nAM_CONDITIONAL([AMCOND_ENABLE_HG_ID], [test $ENABLE_HG_ID = yes])\n\n### Enable bounds checking on element references within Octave's array and\n### matrix classes.  This slows down some operations a bit, so it is turned off\n### by default.\n\nENABLE_BOUNDS_CHECK=no\nAC_ARG_ENABLE([bounds-check],\n  [AS_HELP_STRING([--enable-bounds-check],\n    [enable bounds checking for indexing in internal array classes])],\n  [if test \"$enableval\" = yes; then ENABLE_BOUNDS_CHECK=yes; fi], [])\nif test $ENABLE_BOUNDS_CHECK = yes; then\n  AC_DEFINE(OCTAVE_ENABLE_BOUNDS_CHECK, 1, [Define to 1 to use internal bounds checking.])\nfi\n\n### Use atomic operations for internal reference counting.  This is required\n### for thread-safe behavior (Qt Handles) but incurs a significant slowdown.\n### Enabled by default until a higher performing solution can be found.\n\nENABLE_ATOMIC_REFCOUNT=yes\nAC_ARG_ENABLE([atomic-refcount],\n  [AS_HELP_STRING([--disable-atomic-refcount],\n    [Do not use atomic operations for internal reference counting.  This option is required for thread-safe behavior as used in the GUI's Qt plotting toolkit.  Performance for CLI-only builds is improved by disabling this feature.])],\n  [if test \"$enableval\" = no; then ENABLE_ATOMIC_REFCOUNT=no; fi], [])\nif test $ENABLE_ATOMIC_REFCOUNT = yes; then\n  AC_DEFINE(OCTAVE_ENABLE_ATOMIC_REFCOUNT, 1,\n    [Define to 1 to use atomic operations for reference counting.])\nfi\n\n### Disable running Make in the doc directory.\n### This is useful, for example, when building Octave on systems without TeX.\n\nENABLE_DOCS=yes\nAC_ARG_ENABLE([docs],\n  [AS_HELP_STRING([--disable-docs], [don't build documentation files])],\n  [if test \"$enableval\" = no; then\n     ENABLE_DOCS=no\n     warn_docs=\"building documentation disabled; make dist will fail\"\n     OCTAVE_CONFIGURE_WARNING([warn_docs])\n   fi], [])\n\n### If possible, use a 64-bit integer type for array dimensions and indexing.\n\nENABLE_64=no\nOCTAVE_IDX_TYPE=int\nAC_ARG_ENABLE(64,\n  [AS_HELP_STRING([--enable-64],\n    [(EXPERIMENTAL) use 64-bit integers for array dimensions and indexing])],\n  [if test \"$enableval\" = yes; then ENABLE_64=yes; fi], [])\nif test $ENABLE_64 = yes; then\n  AC_CHECK_SIZEOF([void *])\n  AC_CHECK_SIZEOF([int])\n  AC_CHECK_SIZEOF([long])\n  AC_CHECK_SIZEOF([int64_t])\n  if test $ac_cv_sizeof_void_p -eq 8; then\n    OCTAVE_IDX_TYPE=int64_t\n  else\n    warn_64_bit=\"pointers are not 64-bits wide; disabling 64-bit features\"\n    OCTAVE_CONFIGURE_WARNING([warn_64_bit])\n    ENABLE_64=no\n  fi\nfi\nAC_SUBST(OCTAVE_IDX_TYPE)\nAC_DEFINE_UNQUOTED(OCTAVE_IDX_TYPE, [$OCTAVE_IDX_TYPE],\n  [Define to the type of octave_idx_type (64 or 32 bit signed integer).])\nif test $ENABLE_64 = yes; then\n  AC_DEFINE(OCTAVE_ENABLE_64, 1,\n    [Define to 1 if using 64-bit integers for array dimensions and indexing.])\nfi\nAC_SUBST(ENABLE_64)\n\n### It seems that there are some broken inline assembly functions in\n### the GNU libc.  Since I'm not sure how to test whether we are using\n### GNU libc, just disable them for all platforms.\n\nAC_MSG_NOTICE([defining __NO_MATH_INLINES avoids buggy GNU libc exp function])\nAC_DEFINE(__NO_MATH_INLINES, 1,\n  [Define to 1 if your version of GNU libc has buggy inline assembly code for math functions like exp.])\n\n### Determine which C++ compiler to use (we expect to find g++).\n\nAC_PROG_CXX\nAC_PROG_CXXCPP\n\n### Determine which C compiler to use (we expect to find gcc).\n\nAC_PROG_CC\nAC_PROG_CPP\nAC_PROG_GCC_TRADITIONAL\n\n## Save and restore CFLAGS and CXXFLAGS globally.  These variables\n## are for users, so we shouldn't be touching them.  Instead, we should\n## set the corresponding AM_ flags (currently by way of the XTRA_ variables).\n## However, for the duration of the configure script, we may set CFLAGS\n## and CXXFLAGS so that subsequent tests succeed.  Temporary settings\n## like this are currently done for pthreads and openmp, for example.\noriginal_octave_configure_CFLAGS=\"$CFLAGS\"\noriginal_octave_configure_CXXFLAGS=\"$CXXFLAGS\"\n\n## Check for MSVC\nhave_msvc=no\ncase $host_os in\n  msdosmsvc)\n    have_msvc=yes\n  ;;\n  mingw*)\n    AC_MSG_CHECKING([for MSVC compiler])\n    AC_PREPROC_IFELSE([AC_LANG_SOURCE([[\n        #if ! defined (_MSC_VER)\n        #error \"Not MSVC compiler\"\n        #endif\n        ]])],\n      have_msvc=yes, have_msvc=no)\n    AC_MSG_RESULT([$have_msvc])\n  ;;\nesac\n\n### gnulib initialization: part 1\n### Must take place immediately after a compiler is determined\n\ngl_EARLY\n\n### Check version number when using gcc.\n\nGCC_VERSION=\nif test \"$GCC\" = yes; then\n  AC_MSG_CHECKING([C compiler version number])\n  gcc_version=`$CC -v 2>&1 | $GREP \"^.*gcc version\" | \\\n    $SED -e 's/^.*g.. version *//' -e 's/cygnus-//' -e 's/egcs-//' -e 's/ .*//'`\n\n  AX_COMPARE_VERSION([$gcc_version], [lt], [3],\n    [warn_gcc_version=\"gcc version $gcc_version is likely to cause problems\"\n     OCTAVE_CONFIGURE_WARNING([warn_gcc_version])])\n\n  GCC_VERSION=$gcc_version\n  AC_MSG_RESULT([$GCC_VERSION])\nfi\nAC_SUBST(GCC_VERSION)\n\n### Check version number when using g++ .\n### It might be different from the gcc version number.\n\nGXX_VERSION=\nif test \"$GXX\" = yes; then\n  AC_MSG_CHECKING([C++ compiler version number])\n  gxx_version=`$CXX -v 2>&1 | $GREP \"^.*g.. version\" | \\\n    $SED -e 's/^.*g.. version *//' -e 's/cygnus-//' -e 's/egcs-//' -e 's/ .*//'`\n\n  AX_COMPARE_VERSION([$gxx_version], [lt], [4.1],\n    [warn_gxx_version=\"g++ version $gxx_version is likely to cause problems\"\n     OCTAVE_CONFIGURE_WARNING([warn_gxx_version])])\n\n  GXX_VERSION=$gxx_version\n  AC_MSG_RESULT([$GXX_VERSION])\nfi\nAC_SUBST(GXX_VERSION)\n\nOCTAVE_CHECK_BROKEN_STL_ALGO_H\nAM_CONDITIONAL([AMCOND_HAVE_BROKEN_STL_ALGO_H],\n  [test $octave_cv_broken_stl_algo_h = yes])\n\nif test $octave_cv_broken_stl_algo_h = yes; then\n  warn_stl_algo_h=\"Found nth_element broken in g++ $GXX_VERSION.  Attempting to repair by using local patched version of bits/stl_algo.h.\"\n  OCTAVE_CONFIGURE_WARNING([warn_stl_algo_h])\nfi\n\n### Determine the compiler flag necessary to create dependencies\n\n## Assume GCC.\nINCLUDE_DEPS=yes\nDEPEND_FLAGS=\"-M\"\nDEPEND_EXTRA_SED_PATTERN=\"\"\nif test \"$GCC\" != yes; then\n  case $canonical_host_type in\n    sparc-sun-solaris2* | i386-pc-solaris2*)\n      DEPEND_FLAGS=\"-xM1\"\n      DEPEND_EXTRA_SED_PATTERN=\"-e '/\\/opt\\/SUNWspro/d'\"\n    ;;\n    *-*-msdosmsvc)\n    ;;\n    *-*-mingw*)\n      if test $have_msvc = no; then\n        INCLUDE_DEPS=no\n      fi\n    ;;\n    *)\n      INCLUDE_DEPS=no\n    ;;\n  esac\nfi\nAC_SUBST(INCLUDE_DEPS)\nAC_SUBST(DEPEND_FLAGS)\nAC_SUBST(DEPEND_EXTRA_SED_PATTERN)\n\n### Check for pthread library\n\nAX_PTHREAD\n## Include pthread libs and flags early in case other tests need them.\n## They seem to be required for the OpenGL tests on Debian systems.\nLIBS=\"$PTHREAD_LIBS $LIBS\"\nXTRA_CFLAGS=\"$XTRA_CFLAGS $PTHREAD_CFLAGS\"\nXTRA_CXXFLAGS=\"$XTRA_CXXFLAGS $PTHREAD_CFLAGS\"\n## Set these for any other tests that may require them.  They will be\n## reset before output files are generated.\nCFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\nCXXFLAGS=\"$CXXFLAGS $PTHREAD_CFLAGS\"\n\n### Test whether the compiler supports OpenMP.  This is enabled by default\n### now to allow the option of using OpenMP in loadable modules.\n\nENABLE_OPENMP=no\ncheck_for_openmp=yes\nAC_ARG_ENABLE([openmp],\n  [AS_HELP_STRING([--disable-openmp],\n    [disable OpenMP SMP multi-threading])],\n  [if test \"$enableval\" = no; then check_for_openmp=no; fi], [])\nif test $check_for_openmp = yes; then\n  AC_LANG_PUSH(C)\n  AX_OPENMP([XTRA_CFLAGS=\"$XTRA_CFLAGS $OPENMP_CFLAGS\"; ENABLE_OPENMP=yes], [])\n  AC_LANG_POP(C)\n  AC_LANG_PUSH(C++)\n  AX_OPENMP([XTRA_CXXFLAGS=\"$XTRA_CXXFLAGS $OPENMP_CXXFLAGS\"; ENABLE_OPENMP=yes], [])\n  AC_LANG_POP(C++)\nfi\n\n## Set these for any other tests that may require them.  They will be\n## reset before output files are generated.\nCFLAGS=\"$CFLAGS $OPENMP_CFLAGS\"\nCXXFLAGS=\"$CXXFLAGS $OPENMP_CXXFLAGS\"\n\ndnl Define here since it is skipped if the first argument to\ndnl AX_OPENMP is not empty.\nif test $ENABLE_OPENMP = yes; then\n  AC_CHECK_HEADERS([omp.h])\n  AC_CHECK_FUNCS([omp_get_num_threads])\n  AC_DEFINE(OCTAVE_ENABLE_OPENMP, 1, [Define if OpenMP is enabled])\nfi\n\n### Start determination of shared vs. static libraries\n\n## Use -static if compiling on Alpha OSF/1 1.3 systems.\ncase $canonical_host_type in\n  alpha*-dec-osf1.3)\n    LD_STATIC_FLAG=-static\n  ;;\nesac\nif test -n \"$LD_STATIC_FLAG\"; then\n  AC_MSG_NOTICE([defining LD_STATIC_FLAG to be $LD_STATIC_FLAG])\nfi\nAC_SUBST(LD_STATIC_FLAG)\n\nOCTAVE_PROG_AR\n\nifdef([LT_INIT], [], [\n  errprint([error: you must have libtool 2.2.2 or a more recent version\n])\n  m4exit([1])])\n\nLT_PREREQ([2.2.2])\nLT_INIT([disable-static dlopen win32-dll])\n\nif test $enable_shared = yes; then\n  SHARED_LIBS=yes\nelse\n  SHARED_LIBS=no\nfi\nAC_SUBST(SHARED_LIBS)\n\nif test $enable_static = yes; then\n  STATIC_LIBS=yes\nelse\n  STATIC_LIBS=no\nfi\nAC_SUBST(STATIC_LIBS)\n\nXTRA_CRUFT_SH_LDFLAGS=\nif test $have_msvc = yes; then\n  FLIBS=\"$FLIBS -lkernel32\"\n  XTRA_CRUFT_SH_LDFLAGS=\"-Wl,cruft/cruft.def\"\nfi\nAC_SUBST(XTRA_CRUFT_SH_LDFLAGS)\n\n### Enable dynamic linking.  --enable-shared implies this, so\n### --enable-dl is only need if you are only building static libraries\n### and want to try dynamic linking too (works on some systems, for\n### example, OS X and Windows).\n\nAC_ARG_ENABLE([dl],\n  [AS_HELP_STRING([--disable-dl],\n    [disable loading of dynamically linked modules])],\n  [case $enableval in\n     yes) ENABLE_DYNAMIC_LINKING=yes ;;\n     no) ENABLE_DYNAMIC_LINKING=no ;;\n     *) AC_MSG_ERROR([bad value $enableval for --enable-dl]) ;;\n   esac],\n  [ENABLE_DYNAMIC_LINKING=no])\n\nif test $STATIC_LIBS = no && test $SHARED_LIBS = no; then\n  AC_MSG_ERROR([You can't disable building both static AND shared libraries!])\nfi\n\nCPICFLAG=-fPIC\nCXXPICFLAG=-fPIC\nFPICFLAG=-fPIC\nSH_LD=\"${CXX}\"\nSH_LDFLAGS=-shared\nDL_LD=\"${SH_LD}\"\nDL_LDFLAGS=\"${SH_LDFLAGS}\"\nMKOCTFILE_DL_LDFLAGS=\"${DL_LDFLAGS}\"\nNO_OCT_FILE_STRIP=false\nTEMPLATE_AR=\"${AR}\"\nTEMPLATE_ARFLAGS=\"$ARFLAGS\"\nCRUFT_DLL_DEFS=\nOCTAVE_DLL_DEFS=\nOCTINTERP_DLL_DEFS=\nOCTGUI_DLL_DEFS=\nOCTGRAPHICS_DLL_DEFS=\nlibrary_path_var=LD_LIBRARY_PATH\nldpreloadsep=\" \"\ncase $canonical_host_type in\n  *-*-386bsd* | *-*-netbsd*)\n    SH_LD=ld\n    SH_LDFLAGS=-Bshareable\n  ;;\n  *-*-openbsd*)\n    SH_LDFLAGS=\"-shared -fPIC\"\n  ;;\n  *-*-freebsd*)\n    SH_LDFLAGS=\"-shared -Wl,-x\"\n  ;;\n  alpha*-dec-osf*)\n    CPICFLAG=\n    CXXPICFLAG=\n    FPICFLAG=\n    SH_LDFLAGS=\"-shared -Wl,-expect_unresolved -Wl,'*'\"\n  ;;\n  *-*-darwin*)\n    DL_LDFLAGS=\"-bundle -bundle_loader ${ac_top_build_prefix}libinterp/octave ${LDFLAGS}\"\n    ## Contains variables that are defined and undefined at this point, so use\n    ## appropriate quoting to defer expansion of ${bindir} and ${version}.\n    MKOCTFILE_DL_LDFLAGS='-bundle -bundle_loader ${bindir}/octave-${version}'\"${EXEEXT}\"\n    SH_LDFLAGS=\"-dynamiclib -single_module ${LDFLAGS}\"\n    case $canonical_host_type in\n      powerpc-*)\n        CXXPICFLAG=\n        CPICFLAG=\n        FPICFLAG=\n      ;;\n    esac\n    NO_OCT_FILE_STRIP=true\n    library_path_var=DYLD_LIBRARY_PATH\n  ;;\n  *-*-cygwin*)\n    CPICFLAG=\n    CXXPICFLAG=\n    FPICFLAG=\n    DL_LDFLAGS=\"-shared -Wl,--export-all-symbols -Wl,--enable-auto-import -Wl,--enable-runtime-pseudo-reloc\"\n    SH_LDFLAGS=\"-shared -Wl,--export-all-symbols -Wl,--enable-auto-import -Wl,--enable-auto-image-base\"\n    ldpreloadsep=\":\"\n  ;;\n  *-*-mingw*)\n    if test $have_msvc = yes; then\n      DL_LDFLAGS=\"-shared\"\n      CPICFLAG=\n      CXXPICFLAG=\n      FPICFLAG=\n      SH_LDFLAGS=\"-shared\"\n      if test -n \"`echo $CFLAGS | $GREP -e '-g'`\" || test -n \"`echo $CXXFLAGS | $GREP -e '-g'`\"; then\n        DL_LDFLAGS=\"$DL_LDFLAGS -g\"\n        SH_LDFLAGS=\"$SH_LDFLAGS -g\"\n      fi\n      NO_OCT_FILE_STRIP=true\n      library_path_var=PATH\n      ## Extra compilation flags.\n      CRUFT_DLL_DEFS=\"-DCRUFT_DLL\"\n      OCTAVE_DLL_DEFS=\"-DOCTAVE_DLL\"\n      OCTINTERP_DLL_DEFS=\"-DOCTINTERP_DLL\"\n      OCTGUI_DLL_DEFS=\"-DOCTGUI_DLL\"\n      OCTGRAPHICS_DLL_DEFS=\"-DOCTGRAPHICS_DLL\"\n    else\n      CPICFLAG=\n      CXXPICFLAG=\n      FPICFLAG=\n      DL_LDFLAGS=\"-shared -Wl,--export-all-symbols -Wl,--enable-auto-import -Wl,--enable-runtime-pseudo-reloc\"\n      SH_LDFLAGS=\"-shared -Wl,--export-all-symbols -Wl,--enable-auto-import -Wl,--enable-auto-image-base\"\n      library_path_var=PATH\n    fi\n  ;;\n\n  *-*-msdosmsvc)\n    DL_LDFLAGS=\"-shared\"\n    CPICFLAG=\n    CXXPICFLAG=\n    FPICFLAG=\n    SH_LDFLAGS=\"-shared\"\n    if test -n \"`echo $CFLAGS | $GREP -e '-g'`\" || test -n \"`echo $CXXFLAGS | $GREP -e '-g'`\"; then\n      DL_LDFLAGS=\"$DL_LDFLAGS -g\"\n      SH_LDFLAGS=\"$SH_LDFLAGS -g\"\n    fi\n    NO_OCT_FILE_STRIP=true\n    library_path_var=PATH\n    ## Extra compilation flags.\n    CRUFT_DLL_DEFS=\"-DCRUFT_DLL\"\n    OCTAVE_DLL_DEFS=\"-DOCTAVE_DLL\"\n    OCTGUI_DLL_DEFS=\"-DOCTGUI_DLL\"\n    OCTGRAPHICS_DLL_DEFS=\"-DOCTGRAPHICS_DLL\"\n  ;;\n  *-*-linux* | *-*-gnu*)\n    MKOCTFILE_DL_LDFLAGS=\"-shared -Wl,-Bsymbolic\"\n  ;;\n  i[[3456]]86-*-sco3.2v5*)\n    SH_LDFLAGS=-G\n  ;;\n  rs6000-ibm-aix* | powerpc-ibm-aix*)\n    CPICFLAG=\n    CXXPICFLAG=\n    FPICFLAG=\n    library_path_var=LIBPATH\n  ;;\n  hppa*-hp-hpux*)\n    if test $ac_cv_f77_compiler_gnu = yes; then\n      FPICFLAG=-fPIC\n    else\n      FPICFLAG=+Z\n    fi\n    SH_LDFLAGS=\"-shared -fPIC\"\n    library_path_var=SHLIB_PATH\n  ;;\n  ia64*-hp-hpux*)\n    if test $ac_cv_f77_compiler_gnu = yes; then\n      FPICFLAG=-fPIC\n    else\n      FPICFLAG=+Z\n    fi\n    SH_LDFLAGS=\"-shared -fPIC\"\n  ;;\n  *-sgi-*)\n    CPICFLAG=\n    CXXPICFLAG=\n    FPICFLAG=\n  ;;\n  sparc-sun-sunos4*)\n    if test $ac_cv_f77_compiler_gnu = yes; then\n      FPICFLAG=-fPIC\n    else\n      FPICFLAG=-PIC\n    fi\n    SH_LD=ld\n    SH_LDFLAGS=\"-assert nodefinitions\"\n  ;;\n  sparc-sun-solaris2* | i386-pc-solaris2*)\n    if test $ac_cv_f77_compiler_gnu = yes; then\n      FPICFLAG=-fPIC\n    else\n      FPICFLAG=-KPIC\n    fi\n    if test \"$GCC\" = yes; then\n      CPICFLAG=-fPIC\n    else\n      CPICFLAG=-KPIC\n    fi\n    if test \"$GXX\" = yes; then\n      CXXPICFLAG=-fPIC\n      SH_LDFLAGS=-shared\n    else\n      CXXPICFLAG=-KPIC\n      SH_LDFLAGS=-G\n    fi\n    ## Template closures in archive libraries need a different mechanism.\n    if test \"$GXX\" != yes; then\n      TEMPLATE_AR=\"${CXX}\"\n      TEMPLATE_ARFLAGS=\"-xar -o\"\n    fi\n  ;;\nesac\n\nAC_MSG_NOTICE([defining FPICFLAG to be $FPICFLAG])\nAC_MSG_NOTICE([defining CPICFLAG to be $CPICFLAG])\nAC_MSG_NOTICE([defining CXXPICFLAG to be $CXXPICFLAG])\nAC_MSG_NOTICE([defining SH_LD to be $SH_LD])\nAC_MSG_NOTICE([defining SH_LDFLAGS to be $SH_LDFLAGS])\nAC_MSG_NOTICE([defining DL_LD to be $DL_LD])\nAC_MSG_NOTICE([defining DL_LDFLAGS to be $DL_LDFLAGS])\nAC_MSG_NOTICE([defining MKOCTFILE_DL_LDFLAGS to be $MKOCTFILE_DL_LDFLAGS])\nAC_MSG_NOTICE([defining NO_OCT_FILE_STRIP to be $NO_OCT_FILE_STRIP])\nAC_MSG_NOTICE([defining TEMPLATE_AR to be $TEMPLATE_AR])\nAC_MSG_NOTICE([defining TEMPLATE_ARFLAGS to be $TEMPLATE_ARFLAGS])\nAC_MSG_NOTICE([defining CRUFT_DLL_DEFS to be $CRUFT_DLL_DEFS])\nAC_MSG_NOTICE([defining OCTAVE_DLL_DEFS to be $OCTAVE_DLL_DEFS])\nAC_MSG_NOTICE([defining OCTINTERP_DLL_DEFS to be $OCTINTERP_DLL_DEFS])\nAC_MSG_NOTICE([defining OCTGUI_DLL_DEFS to be $OCTGUI_DLL_DEFS])\nAC_MSG_NOTICE([defining OCTGRAPHICS_DLL_DEFS to be $OCTGRAPHICS_DLL_DEFS])\nAC_MSG_NOTICE([defining library_path_var to be $library_path_var])\nAC_SUBST(FPICFLAG)\nAC_SUBST(CPICFLAG)\nAC_SUBST(CXXPICFLAG)\nAC_SUBST(SH_LD)\nAC_SUBST(SH_LDFLAGS)\nAC_SUBST(DL_LD)\nAC_SUBST(DL_LDFLAGS)\nAC_SUBST(MKOCTFILE_DL_LDFLAGS)\nAC_SUBST(NO_OCT_FILE_STRIP)\nAC_SUBST(TEMPLATE_AR)\nAC_SUBST(TEMPLATE_ARFLAGS)\nAC_SUBST(CRUFT_DLL_DEFS)\nAC_SUBST(OCTAVE_DLL_DEFS)\nAC_SUBST(OCTINTERP_DLL_DEFS)\nAC_SUBST(OCTGUI_DLL_DEFS)\nAC_SUBST(OCTGRAPHICS_DLL_DEFS)\nAC_SUBST(library_path_var)\nAC_SUBST(ldpreloadsep)\nAM_SUBST_NOTMAKE(ldpreloadsep)\n\n### More configure argument checking related to linking\n\nAC_ARG_ENABLE([no-undefined],\n  [AS_HELP_STRING([--disable-no-undefined],\n    [don't pass -no-undefined to libtool when linking Octave and its shared libraries])],\n  [case $enableval in\n     yes) NO_UNDEFINED_LDFLAG=\"-no-undefined\" ;;\n     no)  NO_UNDEFINED_LDFLAG=\"\" ;;\n     *) AC_MSG_ERROR([bad value $enableval for --disable-no-undefined]) ;;\n   esac],\n  [NO_UNDEFINED_LDFLAG=\"-no-undefined\"])\nAC_SUBST(NO_UNDEFINED_LDFLAG)\n\nAC_ARG_ENABLE([link-all-dependencies],\n  [AS_HELP_STRING([--enable-link-all-dependencies],\n    [link Octave and its shared libraries with all dependencies, not just those immediately referenced (should not be needed on most systems)])],\n  [case $enableval in\n     yes) link_all_deps=yes ;;\n     no)  link_all_deps=no ;;\n     *) AC_MSG_ERROR([bad value $enableval for --enable-link-all-depenencies])\n     ;;\n   esac],\n  [link_all_deps=no])\nAM_CONDITIONAL([AMCOND_LINK_ALL_DEPS], [test $link_all_deps = yes])\n\n### Look for math library.  If found, this will add -lm to LIBS.\n\ndnl Keep this check before the check for the Fortran compiler,\ndnl in case -lm is needed to compile Fortran programs.\nAC_CHECK_LIB(m, sin)\n\n### Determine the Fortran compiler and how to invoke it\n\n## Prefer gfortran, but the user's F77 environment variable will override.\nAC_PROG_F77([gfortran])\nif test -z \"$F77\"; then\n  ## No gfortran found, search for any other installed compiler.\n  AC_PROG_F77\nfi\nif test \"$F77\" = g77; then\n  AC_MSG_ERROR([g77 is not a supported Fortran compiler.  Select another compiler by setting the environment variable F77 and re-running configure.])\nfi\n\nAC_MSG_CHECKING([whether a usable Fortran compiler was found])\nif test -n \"$F77\"; then\n  AC_MSG_RESULT(yes)\nelse\n  AC_MSG_RESULT(no)\n  AC_MSG_ERROR([A Fortran compiler is required])\nfi\n\nAC_F77_LIBRARY_LDFLAGS\nAC_F77_DUMMY_MAIN\nAC_F77_WRAPPERS\n\nF77_TOLOWER=yes\nF77_APPEND_UNDERSCORE=yes\nF77_APPEND_EXTRA_UNDERSCORE=yes\n\ncase $ac_cv_f77_mangling in\n  \"upper case\") F77_TOLOWER=no ;;\nesac\ncase $ac_cv_f77_mangling in\n  \"no underscore\") F77_APPEND_UNDERSCORE=no ;;\nesac\ncase $ac_cv_f77_mangling in\n  \"no extra underscore\") F77_APPEND_EXTRA_UNDERSCORE=no ;;\nesac\n\ncase $canonical_host_type in\n  i[[3456789]]86-*-*)\n    if test $ac_cv_f77_compiler_gnu = yes; then\n      OCTAVE_F77_FLAG([-mieee-fp])\n    fi\n  ;;\n  alpha*-*-*)\n    if test $ac_cv_f77_compiler_gnu = yes; then\n      OCTAVE_F77_FLAG([-mieee])\n    else\n      OCTAVE_F77_FLAG([-ieee])\n      OCTAVE_F77_FLAG([-fpe1])\n    fi\n  ;;\n  powerpc-apple-machten*)\n    FFLAGS=\n  ;;\nesac\n\nif test $ac_cv_f77_compiler_gnu = yes; then\n  FORTRAN_CALLING_CONVENTION=gfortran\nelse\n  FORTRAN_CALLING_CONVENTION=unknown\nfi\nAC_ARG_ENABLE([fortran-calling-convention],\n  [AS_HELP_STRING([--enable-fortran-calling-convention=OPTION],\n    [Select C++ to Fortran calling convention.  \"gfortran\" should be detected automatically.  Other options are \"cray\", \"visual-fortran\", or \"f2c\".])],\n  [FORTRAN_CALLING_CONVENTION=\"$enableval\"], [])\n\ncase \"$FORTRAN_CALLING_CONVENTION\" in\n  gfortran)\n    AC_DEFINE(F77_USES_GFORTRAN_CALLING_CONVENTION, 1, [Define to 1 if calling Fortran from C++ should use the gfortran calling convention.])\n  ;;\n  cray)\n    AC_DEFINE(F77_USES_CRAY_CALLING_CONVENTION, 1, [Define to 1 if calling Fortran from C++ should use the Cray Fortran calling convention.])\n  ;;\n  visual-fortran)\n    AC_DEFINE(F77_USES_VISUAL_FORTRAN_CALLING_CONVENTION, 1, [Define to 1 if calling Fortran from C++ should use the Visual Fortran calling convention.])\n  ;;\n  f2c)\n    AC_DEFINE(F77_USES_F2C_CALLING_CONVENTION, 1, [Define to 1 if calling Fortran from C++ should use the f2c calling convention.])\n  ;;\n  *)\n    AC_MSG_ERROR([to build Octave, the C++ to Fortran calling convention must be known.])\n  ;;\nesac\n\nif test -n \"$FFLAGS\"; then\n  AC_MSG_NOTICE([defining FFLAGS to be $FFLAGS])\nfi\n\nAC_SUBST(F77_TOLOWER)\nAC_SUBST(F77_APPEND_UNDERSCORE)\nAC_SUBST(F77_APPEND_EXTRA_UNDERSCORE)\n\nif test -z \"$F77\"; then\n  AC_MSG_ERROR([to build Octave, you must have a compatible Fortran compiler or wrapper script for f2c that functions as a Fortran compiler installed and in your path.  See the file INSTALL for more information.])\nfi\n\nOCTAVE_CHECK_FUNC_FORTRAN_ISNAN\nF77_ISNAN_MACRO=\nif test $octave_cv_func_fortran_isnan = no; then\n  AC_MSG_NOTICE([substituting ISNAN(X) with X.NE.X in Fortran sources])\n  F77_ISNAN_MACRO=\"s|ISNAN(\\(@<:@^)@:>@*\\))|(\\1.NE.\\1)|\"\nfi\nAC_SUBST(F77_ISNAN_MACRO)\n\nOCTAVE_CHECK_SIZEOF_FORTRAN_INTEGER\nif test $octave_cv_sizeof_fortran_integer = no; then\n  if test $ENABLE_64 = yes; then\n    case $F77 in\n      *gfortran*)\n        case $F77_INTEGER_8_FLAG in\n          *-fdefault-integer-8*)\n          ;;\n          *)\n            case $FFLAGS in\n              *-fdefault-integer-8*)\n                AC_MSG_NOTICE([setting -fdefault-integer-8 in F77_INTEGER_8_FLAG instead of FFLAGS])\n                FFLAGS=`echo $FFLAGS | $SED 's/-fdefault-integer-8//g'`\n                F77_INTEGER_8_FLAG=\"-fdefault-integer-8\"\n              ;;\n              *)\n                AC_MSG_NOTICE([adding -fdefault-integer-8 to F77_INTEGER_8_FLAG])\n                F77_INTEGER_8_FLAG=\"-fdefault-integer-8\"\n                ## Invalidate the cache and try again.\n                $as_unset octave_cv_sizeof_fortran_integer\n              ;;\n            esac\n          ;;\n        esac\n      ;;\n    esac\n    if test -z \"$octave_cv_sizeof_fortran_integer\"; then\n      OCTAVE_CHECK_SIZEOF_FORTRAN_INTEGER\n    fi\n    if test $octave_cv_sizeof_fortran_integer = no; then\n      AC_MSG_ERROR([to build Octave with 64-bit indexing support your Fortran compiler must have an option for setting the default integer size to 8 bytes.  See the file INSTALL for more information.])\n    fi\n  else\n    AC_MSG_ERROR([your Fortran compiler must have an option to make integers the same size as octave_idx_type ($OCTAVE_IDX_TYPE).  See the file INSTALL for more information.])\n  fi\nfi\nAC_SUBST(F77_INTEGER_8_FLAG)\n\nOCTAVE_F77_FLAG([-ffloat-store], [\n  AC_MSG_RESULT([setting F77_FLOAT_STORE_FLAG to -ffloat-store])\n  F77_FLOAT_STORE_FLAG=-ffloat-store\n  AC_SUBST(F77_FLOAT_STORE_FLAG)\n])\n\n## Dynamic linking is now enabled only if we are building shared\n## libs and some API for dynamic linking has been detected.\n\n## FIXME: A lot of the following duplicates the functionality of\n## code generated by the dlopen option for LT_INIT.\n\nLD_CXX=\"${CXX}\"\nRDYNAMIC_FLAG=\nDL_API_MSG=\"\"\ndlopen_api=no\nshl_load_api=no\nloadlibrary_api=no\ndyld_api=no\n\nif test $SHARED_LIBS = yes || test $ENABLE_DYNAMIC_LINKING = yes; then\n\n  case $lt_cv_dlopen in\n    dlopen)\n      dlopen_api=yes\n      DL_API_MSG=\"(dlopen)\"\n      AC_DEFINE(HAVE_DLOPEN_API, 1,\n        [Define to 1 if your system has dlopen, dlsym, dlerror, and dlclose for dynamic linking.])\n      OCTAVE_CXX_FLAG([-rdynamic], [RDYNAMIC_FLAG=-rdynamic])\n    ;;\n    shl_load)\n      shl_load_api=yes\n      DL_API_MSG=\"(shl_load)\"\n      AC_DEFINE(HAVE_SHL_LOAD_API, 1,\n        [Define to 1 if your system has shl_load and shl_findsym for dynamic linking.])\n    ;;\n    LoadLibrary)\n      loadlibrary_api=yes\n      DL_API_MSG=\"(LoadLibrary)\"\n      AC_DEFINE(HAVE_LOADLIBRARY_API, 1,\n        [Define to 1 if your system has LoadLibrary for dynamic linking.])\n    ;;\n    dyld)\n      dyld_api=yes\n      DL_API_MSG=\"(dyld)\"\n      AC_DEFINE(HAVE_DYLD_API, 1,\n        [Define to 1 if your system has dyld for dynamic linking.])\n    ;;\n  esac\n\n  DL_LIBS=\"$lt_cv_dlopen_libs\"\n  AC_SUBST(DL_LIBS)\n\n  ## Disable dynamic linking if capability is not present.\n  if test $dlopen_api = yes \\\n      || test $shl_load_api = yes \\\n      || test $loadlibrary_api = yes \\\n      || test $dyld_api = yes; then\n    # some form of dynamic linking present\n    ENABLE_DYNAMIC_LINKING=yes\n  else\n    ENABLE_DYNAMIC_LINKING=no\n  fi\nfi\n\nif test $ENABLE_DYNAMIC_LINKING = yes; then\n  AC_DEFINE(ENABLE_DYNAMIC_LINKING, 1, [Define to 1 if using dynamic linking.])\nfi\n\nAM_CONDITIONAL([AMCOND_ENABLE_DYNAMIC_LINKING],\n  [test $ENABLE_DYNAMIC_LINKING = yes])\n\nif test $SHARED_LIBS = yes; then\n  LIBOCTINTERP=\"-loctinterp\"\n  LIBOCTAVE=\"-loctave\"\nelse\n  LIBOCTINTERP=\"${top_builddir}/libinterp/liboctinterp.a\"\n  LIBOCTAVE=\"${top_builddir}/liboctave/liboctave.a\"\nfi\n\nAC_SUBST(LD_CXX)\nAC_SUBST(RDYNAMIC_FLAG)\nAC_SUBST(ENABLE_DYNAMIC_LINKING)\nAC_SUBST(LIBOCTINTERP)\nAC_SUBST(LIBOCTAVE)\n\n\nif test \"$cross_compiling\" = yes && test -n \"$ac_tool_prefix\"; then\n  CROSS_TOOL_PREFIX=\"$ac_tool_prefix\"\n  MKOCTFILE_AR=`echo \"$AR\" | $SED \"s,$CROSS_TOOL_PREFIX,,\"`\n  MKOCTFILE_CC=`echo \"$CC\" | $SED \"s,$CROSS_TOOL_PREFIX,,\"`\n  MKOCTFILE_CXX=`echo \"$CXX\" | $SED \"s,$CROSS_TOOL_PREFIX,,\"`\n  MKOCTFILE_DL_LD=`echo \"$DL_LD\" | $SED \"s,$CROSS_TOOL_PREFIX,,\"`\n  MKOCTFILE_F77=`echo \"$F77\" | $SED \"s,$CROSS_TOOL_PREFIX,,\"`\n  MKOCTFILE_LD_CXX=`echo \"$LD_CXX\" | $SED \"s,$CROSS_TOOL_PREFIX,,\"`\n  MKOCTFILE_RANLIB=`echo \"$RANLIB\" | $SED \"s,$CROSS_TOOL_PREFIX,,\"`\nelse\n  MKOCTFILE_AR=\"$AR\"\n  MKOCTFILE_CC=\"$CC\"\n  MKOCTFILE_CXX=\"$CXX\"\n  MKOCTFILE_DL_LD=\"$DL_LD\"\n  MKOCTFILE_F77=\"$F77\"\n  MKOCTFILE_LD_CXX=\"$LD_CXX\"\n  MKOCTFILE_RANLIB=\"$RANLIB\"\nfi\nAC_MSG_NOTICE([defining CROSS_TOOL_PREFIX to be $CROSS_TOOL_PREFIX])\nAC_MSG_NOTICE([defining MKOCTFILE_AR to be $MKOCTFILE_AR])\nAC_MSG_NOTICE([defining MKOCTFILE_CC to be $MKOCTFILE_CC])\nAC_MSG_NOTICE([defining MKOCTFILE_CXX to be $MKOCTFILE_CXX])\nAC_MSG_NOTICE([defining MKOCTFILE_DL_LD to be $MKOCTFILE_DL_LD])\nAC_MSG_NOTICE([defining MKOCTFILE_F77 to be $MKOCTFILE_F77])\nAC_MSG_NOTICE([defining MKOCTFILE_LD_CXX to be $MKOCTFILE_LD_CXX])\nAC_MSG_NOTICE([defining MKOCTFILE_RANLIB to be $MKOCTFILE_RANLIB])\nAC_SUBST(CROSS_TOOL_PREFIX)\nAC_SUBST(MKOCTFILE_AR)\nAC_SUBST(MKOCTFILE_CC)\nAC_SUBST(MKOCTFILE_CXX)\nAC_SUBST(MKOCTFILE_DL_LD)\nAC_SUBST(MKOCTFILE_F77)\nAC_SUBST(MKOCTFILE_LD_CXX)\nAC_SUBST(MKOCTFILE_RANLIB)\n\n### When compiling math for x87, problems may arise in some code comparing\n### floating-point intermediate results.  The root cause is the extra precision\n### (~80 bits) of x87 co-processor registers versus the IEEE standard 64 bits.\n### Generally, storing the result in a local volatile variable forces a\n### truncation back to 64 bits, but it also degrades performance.\n### However, this performance degradation is very minimal, if indeed measurable.\n### Therefore, it has been enabled for all platforms and compilers.\n### Reported bugs indicate that --enable-float-truncate is required for MinGW\n### and Cygwin platforms and for GCC compilers >= 5.0.  It should not be\n### necessary for non-x87 targets or when using modern SSE math.\nENABLE_FLOAT_TRUNCATE=yes\nAC_ARG_ENABLE([float-truncate],\n  [AS_HELP_STRING([--disable-float-truncate],\n    [truncate intermediate FP results])],\n  [if test \"$enableval\" = no; then ENABLE_FLOAT_TRUNCATE=no; fi], [])\nif test $ENABLE_FLOAT_TRUNCATE = yes; then\n  AC_DEFINE(OCTAVE_ENABLE_FLOAT_TRUNCATE, 1,\n    [Define to 1 if you need to truncate intermediate FP results.])\nfi\n\n### Determine extra CFLAGS that may be necessary for Octave.\n\n## On Intel systems with gcc, we may need to compile with -mieee-fp\n## to get full support for IEEE floating point.\n##\n## On Alpha/OSF systems, we need -mieee.\n\nieee_fp_flag=\ncase $canonical_host_type in\n  i[[3456789]]86-*-*)\n    if test \"$GCC\" = yes; then\n      OCTAVE_CC_FLAG([-mieee-fp], [\n        ieee_fp_flag=-mieee-fp\n        XTRA_CFLAGS=\"$XTRA_CFLAGS -mieee-fp\"\n        AC_MSG_NOTICE([adding -mieee-fp to XTRA_CFLAGS])])\n    fi\n    if test \"$GXX\" = yes; then\n      OCTAVE_CXX_FLAG([-mieee-fp], [\n        ieee_fp_flag=-mieee-fp\n        XTRA_CXXFLAGS=\"$XTRA_CXXFLAGS -mieee-fp\"\n        AC_MSG_NOTICE([adding -mieee-fp to XTRA_CXXFLAGS])])\n    fi\n  ;;\n  alpha*-*-*)\n    if test \"$GCC\" = yes; then\n      OCTAVE_CC_FLAG([-mieee], [\n        ieee_fp_flag=-mieee\n        XTRA_CFLAGS=\"$XTRA_CFLAGS -mieee\"\n        AC_MSG_NOTICE([adding -mieee to XTRA_CFLAGS])])\n    else\n      OCTAVE_CC_FLAG([-ieee], [\n        ieee_fp_flag=-ieee\n        XTRA_CFLAGS=\"$XTRA_CFLAGS -ieee\"\n        AC_MSG_NOTICE([adding -ieee to XTRA_CFLAGS])])\n    fi\n    if test \"$GXX\" = yes; then\n      OCTAVE_CXX_FLAG([-mieee], [\n        ieee_fp_flag=-mieee\n        XTRA_CXXFLAGS=\"$XTRA_CXXFLAGS -mieee\"\n        AC_MSG_NOTICE([adding -mieee to XTRA_CXXFLAGS])])\n    else\n      OCTAVE_CXX_FLAG([-ieee], [\n        ieee_fp_flag=-ieee\n        XTRA_CXXFLAGS=\"$XTRA_CXXFLAGS -ieee\"\n        AC_MSG_NOTICE([adding -ieee to XTRA_CXXFLAGS])])\n    fi\n  ;;\n  *ibm-aix4*)\n    OCTAVE_CC_FLAG([-mminimal-toc], [\n      XTRA_CFLAGS=\"$XTRA_CFLAGS -mminimal-toc\"])\n\n    OCTAVE_CXX_FLAG([-mminimal-toc], [\n      XTRA_CXXFLAGS=\"$XTRA_CXXFLAGS -mminimal-toc\"])\n  ;;\nesac\n\nAC_SUBST(XTRA_CFLAGS)\nAC_SUBST(XTRA_CXXFLAGS)\n\n### Defaults for cross compiling.  BUILD_CC and BUILD_CXX are\n### the compilers that we use for building tools on the build system.\n### For now, we assume that the only cross compiling we can do is\n### with gcc on a Unixy system, but the dedicated hacker can override these.\n\nif test \"$cross_compiling\" = yes; then\n  BUILD_CC=\"gcc\"\n  BUILD_CFLAGS=\"-O2 -g\"\n  BUILD_CXX=\"g++\"\n  BUILD_CXXFLAGS=\"-O2 -g\"\n  BUILD_LDFLAGS=\"\"\n  BUILD_EXEEXT=\"\"\nelse\n  BUILD_CC=\"${CC}\"\n  BUILD_CFLAGS=\"${CFLAGS}\"\n  BUILD_CXX=\"${CXX}\"\n  BUILD_CXXFLAGS=\"${CXXFLAGS}\"\n  BUILD_LDFLAGS=\"${LDFLAGS}\"\n  BUILD_EXEEXT=\"${EXEEXT}\"\nfi\n\nAC_ARG_VAR([BUILD_CC],\n  [build system C compiler (used if cross compiling)])\nAC_ARG_VAR([BUILD_CFLAGS],\n  [build system C compiler flags (used if cross compiling)])\nAC_ARG_VAR([BUILD_CXX],\n  [build system C++ compiler (used if cross compiling)])\nAC_ARG_VAR([BUILD_CXXFLAGS],\n  [build system C++ compiler flags (used if cross compiling)])\nAC_ARG_VAR([BUILD_LDFLAGS],\n  [build system C++ compiler link flags (used if cross compiling)])\nAC_ARG_VAR([BUILD_EXEEXT],\n  [build system executable extension (used if cross compiling)])\n\n### Check for the Qhull library\n\nOCTAVE_CHECK_LIB(qhull, QHull,\n  [Qhull library not found.  This will result in loss of functionality of some geometry functions.],\n  [libqhull/libqhull.h qhull/libqhull.h libqhull.h qhull/qhull.h qhull.h],\n  [qh_qhull], [], [],\n  [warn_qhull=\n  OCTAVE_CHECK_QHULL_VERSION\n  OCTAVE_CHECK_LIB_QHULL_OK(\n    [AC_DEFINE(HAVE_QHULL, 1, [Define to 1 if Qhull is available.])],\n    [warn_qhull=\"Qhull library found, but does not seem to work properly.  This will result in loss of functionality of some geometry functions.  Please try recompiling the library with -fno-strict-aliasing.\"])])\n\n### Check for PCRE regex library.\n\nPCRE_LIBS=\n\npcre_fail_msg=\"to build Octave, you must have the PCRE library and header files installed\"\n\nAC_CHECK_HEADERS([pcre.h pcre/pcre.h])\n\nAC_CACHE_CHECK([whether pcre.h defines the macros we need],\n  [ac_cv_pcre_h_macros_present],\n  [AC_EGREP_CPP([PCRE_HAS_MACROS_WE_NEED], [\n    #if defined (HAVE_PCRE_H)\n    # include <pcre.h>\n    #elif defined (HAVE_PCRE_PCRE_H)\n    # include <pcre/pcre.h>\n    #error \"NO PCRE HEADER\"\n    #endif\n    #if defined (PCRE_INFO_NAMECOUNT) \\\n      && defined (PCRE_INFO_NAMEENTRYSIZE) \\\n      && defined (PCRE_INFO_NAMETABLE)\n      PCRE_HAS_MACROS_WE_NEED\n    #endif],\n    ac_cv_pcre_h_macros_present=yes, ac_cv_pcre_h_macros_present=no)])\n\nif test $ac_cv_pcre_h_macros_present = yes; then\n  ## check for pcre-config, and if so, get build variables\n  AC_CHECK_PROG(HAVE_PCRE_CONFIG, pcre-config, [yes], [no])\n  if test $HAVE_PCRE_CONFIG = yes; then\n    PCRE_CPPFLAGS=`pcre-config --cflags`\n    PCRE_LIBS=`pcre-config --libs`\n  else\n    PCRE_LIBS=\"-lpcre\"\n  fi\n  save_LIBS=\"$LIBS\"\n  LIBS=\"$PCRE_LIBS $LIBS\"\n  AC_CHECK_FUNCS([pcre_compile],\n    [AC_SUBST(PCRE_CPPFLAGS)\n     AC_SUBST(PCRE_LIBS)],\n    [AC_MSG_ERROR([$pcre_fail_msg])])\n  LIBS=\"$save_LIBS\"\nelse\n  AC_MSG_ERROR([$pcre_fail_msg])\nfi\n\n### Check for ZLIB library.\n\nOCTAVE_CHECK_LIB(z, ZLIB,\n  [ZLIB library not found.  Octave will not be able to save or load compressed data files or HDF5 files.],\n  [zlib.h], [gzclearerr])\n\n### Also define HAVE_ZLIB if libz is found.\nif test -z \"$warn_z\"; then\n  AC_DEFINE(HAVE_ZLIB, 1, [Define to 1 if ZLIB is available.])\nfi\n\n\n### Check for BZIP2 library.\n\nOCTAVE_CHECK_LIB(bz2, BZIP2,\n  [BZIP2 library not found.  Octave will not be able to compress or decompress bzip2 files.],\n  [bzlib.h], [BZ2_bzCompressInit])\n\n\n### Check for the LLVM library\n\nENABLE_JIT=no\nAC_ARG_ENABLE([jit],\n  [AS_HELP_STRING([--enable-jit],\n    [(EXPERIMENTAL) enable JIT compiler])],\n  [if test \"$enableval\" = yes; then ENABLE_JIT=yes; fi], [])\n\nLLVM_CXXFLAGS=\nLLVM_CPPFLAGS=\nLLVM_LDFLAGS=\nLLVM_LIBS=\n\nif test $ENABLE_JIT = yes; then\n\n  ## Find llvm-config program from environment variable or by searching\n  AC_ARG_VAR([LLVM_CONFIG], [path to llvm-config utility])\n  AC_CHECK_PROG([LLVM_CONFIG], llvm-config, llvm-config, [])\n\n  if test -z \"$LLVM_CONFIG\"; then\n    warn_llvm=\"llvm-config utility not found.  JIT compiler is disabled.\"\n  else\n    dnl Preset warning message in case compile fails\n    warn_llvm=\"LLVM was not found or is to old.  JIT compiler is disabled.\"\n\n    save_CPPFLAGS=\"$CPPFLAGS\"\n    save_CXXFLAGS=\"$CXXFLAGS\"\n    save_LDFLAGS=\"$LDFLAGS\"\n\n    ## Use -isystem if available because we don't want to see warnings in LLVM\n    LLVM_INCLUDE_FLAG=-I\n    OCTAVE_CC_FLAG([-isystem .], [\n      LLVM_INCLUDE_FLAG=-isystem\n      AC_MSG_NOTICE([using -isystem for LLVM headers])])\n\n    dnl Use -isystem so we don't get warnings from llvm headers\n    LLVM_CPPFLAGS=\"$LLVM_INCLUDE_FLAG `$LLVM_CONFIG --includedir`\"\n    LLVM_CXXFLAGS=\n    LLVM_LDFLAGS=\"-L`$LLVM_CONFIG --libdir`\"\n\n\n    LDFLAGS=\"$LDFLAGS $LLVM_LDFLAGS\"\n    LLVM_SO=LLVM-`$LLVM_CONFIG --version`\n    AC_CHECK_LIB([$LLVM_SO], [LLVMBuildAdd], [LLVM_LIBS=\"-l$LLVM_SO\"], [LLVM_LIBS=`$LLVM_CONFIG --libs`])\n\n    dnl\n    dnl Define some extra flags that LLVM requires in order to include headers.\n    dnl Ideally we should get these from llvm-config, but llvm-config isn't\n    dnl very helpful.\n    dnl\n    CPPFLAGS=\"-D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS $LLVM_CPPFLAGS $CPPFLAGS\"\n    CXXFLAGS=\"$LLVM_CXXFLAGS $CXXFLAGS\"\n    AC_LANG_PUSH(C++)\n    AC_CHECK_HEADER([llvm/Support/TargetSelect.h], [warn_llvm=\"\"])\n\n    have_function_h=no\n    AC_CHECK_HEADERS([llvm/IR/Function.h llvm/Function.h],\n                     [have_function_h=yes; break])\n    if test $have_function_h = no; then\n      warn_llvm=\"Missing LLVM file Function.h.  JIT compiler is disabled.\"\n    fi\n    have_irbuilder_h=no\n    AC_CHECK_HEADERS([llvm/Support/IRBuilder.h llvm/IR/IRBuilder.h \\\n                      llvm/IRBuilder.h], [have_irbuilder_h=yes; break])\n    if test $have_irbuilder_h = no; then\n      warn_llvm=\"Missing LLVM file IRBuilder.h.  JIT compiler is disabled.\"\n    fi\n    have_llvm_data_h=no\n    AC_CHECK_HEADERS([llvm/Target/TargetData.h llvm/IR/DataLayout.h \\\n                      llvm/DataLayout.h], [have_llvm_data_h=yes; break])\n    if test $have_llvm_data_h = no; then\n      warn_llvm=\"Missing LLVM file TargetData.h.  JIT compiler is disabled.\"\n    fi\n\n    AC_CHECK_HEADERS([llvm/IR/Verifier.h])\n\n    OCTAVE_LLVM_FUNCTION_ADDATTRIBUTE_API\n    OCTAVE_LLVM_FUNCTION_ADDFNATTR_API\n    OCTAVE_LLVM_CALLINST_ADDATTRIBUTE_API\n    OCTAVE_LLVM_RAW_FD_OSTREAM_API\n    OCTAVE_LLVM_LEGACY_PASSMANAGER_API\n    AC_LANG_POP(C++)\n    CPPFLAGS=\"$save_CPPFLAGS\"\n    CXXFLAGS=\"$save_CXXFLAGS\"\n    LDFLAGS=\"$save_LDFLAGS\"\n  fi\n\n  if test -z \"$warn_llvm\"; then\n    AC_DEFINE(HAVE_LLVM, 1, [Define to 1 if LLVM is available.])\n  else\n    ENABLE_JIT=no\n    LLVM_CPPFLAGS=\n    LLVM_CXXFLAGS=\n    LLVM_LDFLAGS=\n    LLVM_LIBS=\n    OCTAVE_CONFIGURE_WARNING([warn_llvm])\n  fi\ndnl FIXME: Re-instate when JIT is enabled by default\ndnl else\ndnl   ## JIT build disabled\ndnl   warn_llvm=\"JIT compiler disabled, some performance loss for loops\"\ndnl   OCTAVE_CONFIGURE_WARNING([warn_llvm])\nfi\nif test $ENABLE_JIT; then\n  AC_DEFINE(ENABLE_JIT, 1, [Define to 1 to enable JIT compiler.])\nfi\n\nAC_SUBST(LLVM_CPPFLAGS)\nAC_SUBST(LLVM_CXXFLAGS)\nAC_SUBST(LLVM_LDFLAGS)\nAC_SUBST(LLVM_LIBS)\nAM_CONDITIONAL([AMCOND_HAVE_LLVM], [test -z \"$warn_llvm\"])\n\n### Check for HDF5 library.\n\nsave_CPPFLAGS=\"$CPPFLAGS\"\nsave_LIBS=\"$LIBS\"\nCPPFLAGS=\"$Z_CPPFLAGS $CPPFLAGS\"\nLIBS=\"$Z_LDFLAGS $Z_LIBS $LIBS\"\nOCTAVE_CHECK_LIB(hdf5, HDF5,\n  [HDF5 library not found.  Octave will not be able to save or load HDF5 data files.],\n  [hdf5.h], [H5Gget_num_objs], [], [],\n  [warn_hdf5=\n   OCTAVE_CHECK_HDF5_HAS_VER_16_API\n   AC_DEFINE(HAVE_HDF5, 1,\n     [Define to 1 if HDF5 is available and newer than version 1.6.])\n   if test $have_msvc = yes; then\n     OCTAVE_CHECK_LIB_HDF5_DLL\n   fi\n  ])\nCPPFLAGS=\"$save_CPPFLAGS\"\nLIBS=\"$save_LIBS\"\n\ndnl Should we check for this now, or wait until some version of\ndnl HDF5 actually supports this feature?\nhave_hdf5_int2float_conversions=no\nif test $have_hdf5_int2float_conversions = yes; then\n  AC_DEFINE(HAVE_HDF5_INT2FLOAT_CONVERSIONS, 1,\n    [Define to 1 if/when HDF5 supports automatic conversion between integer and floating-point binary data.])\nfi\n\n### Check for FFTW library.  Default to Fortran FFTPACK if it is not available.\n\n## Check for FFTW header and library.\nOCTAVE_CHECK_LIB(fftw3, FFTW3,\n  [FFTW3 library not found.  The slower FFTPACK library will be used instead.],\n  [fftw3.h], [fftw_plan_dft_1d])\n\nOCTAVE_CHECK_LIB(fftw3f, FFTW3F,\n  [FFTW3F library not found.  The slower FFTPACK library will be used instead.],\n  [fftw3.h], [fftwf_plan_dft_1d])\n\n## Check command line for the option to disable multi-threaded FFTW\nbuild_fftw_threads=yes\nAC_ARG_ENABLE([fftw-threads],\n  [AS_HELP_STRING([--disable-fftw-threads],\n    [disable Multi-threaded FFTW])],\n  [if test \"$enableval\" = no; then\n     build_fftw_threads=no\n   fi],\n  [])\n\n## Octave is currently unable to use FFTW unless\n## both float and double versions are available.\n\nAM_CONDITIONAL([AMCOND_HAVE_FFTW],\n  [test -n \"$FFTW3_LIBS\" && test -n \"$FFTW3F_LIBS\"])\n\nif test -n \"$FFTW3_LIBS\" && test -n \"$FFTW3F_LIBS\"; then\n  AC_DEFINE(HAVE_FFTW, 1, [Define if you have both FFTW3 and FFTW3F libraries.])\nelse\n  ## --without-fftw3 given, or one of the FFTW3 libs not installed.\n  ## Don't check for FFTW threads as this is now pointless.\n  build_fftw_threads=no\nfi\n\n## Check for the multithreaded FFTW library.\n## Fallback to singlethreaded if not found or disabled\nif test $build_fftw_threads = yes; then\n  OCTAVE_CHECK_FFTW_THREADS(fftw3, fftw_plan_with_nthreads)\n  OCTAVE_CHECK_FFTW_THREADS(fftw3f, fftwf_plan_with_nthreads)\nfi\n\n## Subdirectory of liboctave/cruft to build if FFTW is not found.\nFFT_DIR=\"fftpack\"\nAC_SUBST(FFT_DIR)\n\n### Check for GLPK library and header.\n\nsave_CPPFLAGS=\"$CPPFLAGS\"\nsave_LIBS=\"$LIBS\"\nCPPFLAGS=\"$Z_CPPFLAGS $CPPFLAGS\"\nLIBS=\"$Z_LDFLAGS $Z_LIBS $LIBS\"\nOCTAVE_CHECK_LIB(glpk, GLPK,\n  [GLPK library not found.  The glpk function for solving linear programs will be disabled.],\n  [glpk/glpk.h glpk.h], [glp_simplex], [], [],\n  [warn_glpk=\n   OCTAVE_CHECK_LIB_GLPK_OK(\n    [AC_DEFINE(HAVE_GLPK, 1, [Define to 1 if GLPK is available.])],\n    [warn_glpk=\"GLPK library found, but does not seem to work properly; disabling glpk function\"])])\nLIBS=\"$save_LIBS\"\nCPPFLAGS=\"$save_CPPFLAGS\"\n\n### Checks for cURL header and library.\n\nsave_CPPFLAGS=\"$CPPFLAGS\"\nsave_LIBS=\"$LIBS\"\nCPPFLAGS=\"$Z_CPPFLAGS $CPPFLAGS\"\nLIBS=\"$Z_LDFLAGS $Z_LIBS $LIBS\"\nOCTAVE_CHECK_LIB(curl, cURL,\n  [cURL library not found.  The ftp objects, urlread and urlwrite functions will be disabled.],\n  [curl/curl.h], [curl_easy_escape])\nif test -z \"$warn_curl\"; then\n  ## Additional check on cURL library that was found\n  AC_CACHE_CHECK([for CURLOPT_DIRLISTONLY in curl/curl.h],\n    [octave_cv_curl_has_curlopt_dirlistonly],\n    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n      #include <curl/curl.h>\n      ]], [[\n      curl_easy_setopt ((CURL*)NULL, CURLOPT_DIRLISTONLY, 0);\n      ]])],\n      [octave_cv_curl_has_curlopt_dirlistonly=yes],\n      [octave_cv_curl_has_curlopt_dirlistonly=no])\n    ])\n  if test $octave_cv_curl_has_curlopt_dirlistonly = no; then\n    AC_DEFINE(CURLOPT_DIRLISTONLY, CURLOPT_FTPLISTONLY,\n      [Define to the legacy option name if using an older version of cURL.])\n  fi\nfi\nLIBS=\"$save_LIBS\"\nCPPFLAGS=\"$save_CPPFLAGS\"\n\n### Check for sndfile\n\nOCTAVE_CHECK_LIB(sndfile, sndfile,\n  [sndfile library not found.  The audioinfo, audioread, and audiowrite functions will be disabled.],\n  [sndfile.h], [sf_open],\n  [], [don't use sndfile library, disable audio file I/O],\n  [warn_sndfile=\n   OCTAVE_CHECK_LIB_SNDFILE_OK(\n    [AC_DEFINE(HAVE_SNDFILE, 1, [Define to 1 if sndfile is available.])],\n    [warn_sndfile=\"sndfile library found, but does not seem to work properly; disabling audio file I/O functions\"])])\n\n### Check for PortAudio\n\nOCTAVE_CHECK_LIB(portaudio, PortAudio,\n  [PortAudio library not found.  The audioplayer, audiorecorder, and audiodevinfo functions will be disabled.],\n  [portaudio.h], [Pa_GetDeviceCount],\n  [], [don't use PortAudio library, disable audio playback and recording],\n  [], [portaudio-2.0])\n\n### Check for either of Graphics/ImageMagick++ libraries\n\ncheck_magick=yes\nuse_magick=no\nAC_ARG_WITH([magick],\n  [AS_HELP_STRING([--with-magick=LIB],\n    [select library to use for image I/O (options: GraphicsMagick(default) or ImageMagick)])],\n  [if test x\"$withval\" = xno; then\n     check_magick=no\n     warn_magick_disabled=\"--without-magick specified.  The imread, imwrite, and imfinfo functions for reading and writing image files will not be fully functional.\"\n     OCTAVE_CONFIGURE_WARNING([warn_magick_disabled])\n   else\n     magick=\"$withval\"\n   fi], [magick=\"GraphicsMagick\"])\n\nif test $check_magick = yes; then\n\n  MAGICK_CPPFLAGS=\n  MAGICK_LDFLAGS=\n  MAGICK_LIBS=\n\n  PKG_CHECK_EXISTS([$magick++], [\n    ## Make sure we only get -I, -L, and -l flags.  Some Graphics/ImageMagick++\n    ## packages add extra flags that are useful when building\n    ## Graphics/ImageMagick++ extentions.  These extra flags break the\n    ## Octave build.\n    MAGICK_CPPFLAGS=`$PKG_CONFIG --cflags-only-I $magick++`\n    MAGICK_LDFLAGS=`$PKG_CONFIG --libs-only-L $magick++`\n    MAGICK_LIBS=`$PKG_CONFIG --libs-only-l $magick++`\n\n    warn_magick=\"$magick++ library fails tests.  The imread, imwrite, and imfinfo functions for reading and writing image files will not be fully functional.\"\n\n    save_CPPFLAGS=\"$CPPFLAGS\"\n    save_LIBS=\"$LIBS\"\n    CPPFLAGS=\"$MAGICK_CPPFLAGS $CPPFLAGS\"\n    LIBS=\"$MAGICK_LDFLAGS $MAGICK_LIBS $LIBS\"\n    AC_LANG_PUSH(C++)\n    AC_CHECK_HEADER([Magick++.h], [\n      AC_CACHE_CHECK([for Magick::ColorRGB in Magick++.h],\n        [octave_cv_func_magick_colorrgb],\n        [AC_PREPROC_IFELSE([AC_LANG_SOURCE([[\n          #include <Magick++.h>\n          ]], [[\n          Magick::ColorRGB c;\n          ]])],\n          octave_cv_func_magick_colorrgb=yes,\n          octave_cv_func_magick_colorrgb=no)\n        ])\n      if test $octave_cv_func_magick_colorrgb = yes; then\n        use_magick=yes\n        warn_magick=\n      fi\n    ])\n    AC_LANG_POP(C++)\n    CPPFLAGS=\"$save_CPPFLAGS\"\n    LIBS=\"$save_LIBS\"\n\n    AC_CHECK_FUNCS([setlocale], [],\n      [use_magick=no\n       warn_magick=\"$magick++ requires setlocale function.  The imread, imwrite, and imfinfo functions for reading and writing image files will not be fully functional.\"])\n  ],\n  [use_magick=no\n   warn_magick=\"$magick++ library not found.  The imread, imwrite, and imfinfo functions for reading and writing image files will not be fully functional.\"])\nfi\n\nif test $use_magick = yes; then\n  AC_DEFINE(HAVE_MAGICK, 1,\n    [Define to 1 if Graphics/ImageMagick++ is available.])\nelse\n  if test -n \"$warn_magick\"; then\n    OCTAVE_CONFIGURE_WARNING([warn_magick])\n  fi\n  MAGICK_CPPFLAGS=\n  MAGICK_LDFLAGS=\n  MAGICK_LIBS=\nfi\nAC_SUBST(MAGICK_CPPFLAGS)\nAC_SUBST(MAGICK_LDFLAGS)\nAC_SUBST(MAGICK_LIBS)\n\n### Check for X11 libraries\n\nAC_PATH_X\nif test \"$have_x\" = yes; then\n  AC_DEFINE(HAVE_X_WINDOWS, 1, [Define to 1 if you have X11.])\n\n  if test \"$x_includes\" != \"NONE\"; then\n    X11_INCFLAGS=\"$x_includes\"\n  fi\n  AC_SUBST(X11_INCFLAGS)\n\n  if test -z \"$x_libraries\"; then\n    AC_CHECK_LIB([X11], XrmInitialize, [X11_LIBS=\"-lX11\"], [X11_LIBS=])\n  elif test \"$x_libraries\" != \"NONE\"; then\n    AC_CHECK_LIB([X11], XrmInitialize,\n      [X11_LIBS=\"-L$x_libraries -lX11\"], [X11_LIBS=], \"-L$x_libraries\")\n  fi\n  AC_SUBST(X11_LIBS)\nfi\n\n### Check for the Carbon framework on MacOSX systems\nOCTAVE_HAVE_FRAMEWORK([Carbon],\n  [[#include <Carbon/Carbon.h>]], [[CGMainDisplayID ()]],\n  [have_framework_carbon=yes], [have_framework_carbon=no])\nif test $have_framework_carbon = yes; then\n  AC_DEFINE(HAVE_FRAMEWORK_CARBON, 1,\n    [Define to 1 if framework CARBON is available.])\n  CARBON_LIBS=\"-framework Carbon\"\n  AC_MSG_NOTICE([adding -framework Carbon to CARBON_LIBS])\n  AC_SUBST(CARBON_LIBS)\nfi\n\n### Check for list of libraries needed for OpenGL graphics renderer.\n\ncheck_opengl=yes\nAC_ARG_WITH([opengl],\n  [AS_HELP_STRING([--without-opengl],\n    [don't use OpenGL libraries, disable OpenGL graphics])],\n  [if test x\"$withval\" = xno; then\n     check_opengl=no\n     warn_opengl_disabled=\"--without-opengl specified.  OpenGL graphics will be disabled.\"\n     OCTAVE_CONFIGURE_WARNING([warn_opengl_disabled])\n   fi])\n\n## Check for OpenGL library\nif test $check_opengl = yes; then\n  OCTAVE_CHECK_LIB_OPENGL\n  if test -z \"$OPENGL_LIBS\"; then\n    warn_opengl_libs=\"OpenGL libs (GL and GLU) not found.  OpgnGL graphics will be disabled.\"\n    OCTAVE_CONFIGURE_WARNING([warn_opengl_libs])\n  fi\nfi\n\n## Check for FreeType 2 library\n\nwarn_freetype=\"\"\nPKG_CHECK_MODULES([FT2], [freetype2], [\n  min_ft2_version=9.03\n  AC_MSG_CHECKING([for FreeType2 version >= $min_ft2_version])\n  $PKG_CONFIG freetype2 --atleast-version=$min_ft2_version\n  ac_status=$?\n  if test \"$ac_status\" = 0; then\n    AC_MSG_RESULT(yes)\n    AC_DEFINE(HAVE_FREETYPE, 1, [Define to 1 if you have Freetype library.])\n    save_LIBS=\"$LIBS\"\n    LIBS=\"$FT2_LIBS $LIBS\"\n    AC_CHECK_FUNCS([FT_Reference_Face])\n    LIBS=\"$save_LIBS\"\n  else\n    AC_MSG_RESULT(no)\n    warn_freetype=\"FreeType library >= 9.03 not found.  OpenGL graphics will not be fully functional.\"\n  fi],\n  [warn_freetype=\"FreeType library not found.  OpenGL graphics will not be fully functional.\"])\n\nif test -n \"$warn_freetype\"; then\n  OCTAVE_CONFIGURE_WARNING([warn_freetype])\nelse\n  FT2_CPPFLAGS=\"$FT2_CFLAGS\"\n  ## Alias CPPFLAGS to CFLAGS.  This is closer to the true meaning\n  ## of `pkg-config --cflags` output.\n  FT2_CPPFLAGS=\"$FT2_CFLAGS\"\n  AC_SUBST(FT2_CPPFLAGS)\nfi\n\n## Check for Xft library (when using X11)\n\nwarn_xft=\"\"\nif test \"$have_x\" = yes; then\n  PKG_CHECK_MODULES(XFT, [xft],\n    [AC_DEFINE(HAVE_XFT, 1, [Define to 1 if Xft is present.])],\n    [warn_xft=\"Xft library not found.  OpenGL graphics will not be fully functional.\"])\nfi\n\nif test -n \"$warn_xft\"; then\n  OCTAVE_CONFIGURE_WARNING([warn_xft])\nfi\n\n## Check for fontconfig library\n\nwarn_fontconfig=\"\"\nPKG_CHECK_MODULES(FONTCONFIG, [fontconfig],\n  [AC_DEFINE(HAVE_FONTCONFIG, 1, [Define to 1 if fontconfig is present.])],\n  [warn_fontconfig=\"Fontconfig library not found.  OpenGL graphics will not be fully functional.\"])\n\nif test -n \"$warn_fontconfig\"; then\n  OCTAVE_CONFIGURE_WARNING([warn_fontconfig])\nelse\n  FONTCONFIG_CPPFLAGS=\"$FONTCONFIG_CFLAGS\"\n  ## Alias CPPFLAGS to CFLAGS.  This is closer to the true meaning\n  ## of `pkg-config --cflags` output.\n  FONTCONFIG_CPPFLAGS=\"$FONTCONFIG_CFLAGS\"\n  AC_SUBST(FONTCONFIG_CPPFLAGS)\nfi\n\n## Check for OSMesa which is needed for offscreen rendering with OpenGL\n## FIXME: Check for version >= 9.0.0\nOCTAVE_CHECK_LIB(OSMesa, OSMesa,\n  [OSMesa library not found.  Offscreen rendering with OpenGL will be disabled.],\n  [osmesa.h GL/osmesa.h], [OSMesaCreateContext])\n\n## Check for gl2ps which is required for printing with OpenGL graphics\n\nAC_CHECK_HEADERS([gl2ps.h],\n  [GL2PS_LIBS=\"-lgl2ps\"],\n  [warn_gl2ps=\"gl2ps library not found.  Printing of OpenGL graphics will be disabled.\"])\n\nif test -n \"$warn_gl2ps\"; then\n  OCTAVE_CONFIGURE_WARNING([warn_gl2ps])\nfi\n\nAC_SUBST(GL2PS_LIBS)\n\n### GUI/Qt related tests.\n\nQT_VERSIONS=\"5 4\"\n\nAC_ARG_WITH([qt],\n  [AS_HELP_STRING([--with-qt=VER], [use the Qt major version VER])\ndnl Second help string must not be indented for correct alignment\nAS_HELP_STRING([--without-qt], [don't use Qt libraries, disable Qt GUI])],\n  [case $withval in\n     yes | \"\")\n     ;;\n     no)\n       QT_VERSIONS=\n       warn_qt_disabled=\"--without-qt specified.  The Qt GUI will be disabled.\"\n       OCTAVE_CONFIGURE_WARNING([warn_qt_disabled])\n     ;;\n     *)\n       QT_VERSIONS=\"$withval\"\n     ;;\n   esac])\n\nOCTAVE_CHECK_QT([$QT_VERSIONS])\n\n## Check for FLTK (www.fltk.org) library\n\ncheck_fltk=yes\nbuild_fltk_graphics=no\n\nAC_ARG_WITH([fltk],\n  [AS_HELP_STRING([--without-fltk],\n    [don't use FLTK libraries, disable OpenGL graphics with FLTK widgets])],\n  [if test x\"$withval\" = xno; then\n     check_fltk=no\n     warn_fltk=\"--without-fltk specified.  FLTK widgets will be disabled.\"\n     OCTAVE_CONFIGURE_WARNING([warn_fltk])\n   fi])\n\nFLTK_CPPFLAGS=\nFLTK_LDFLAGS=\nFLTK_LIBS=\n\nif test $check_fltk = yes; then\n  AC_ARG_WITH([fltk-prefix],\n    [AS_HELP_STRING([--with-fltk-prefix=PFX],\n      [prefix where FLTK is installed (optional)])],\n    [fltk_prefix=\"$withval\"],\n    [fltk_prefix=\"\"])\n\n  AC_ARG_WITH([fltk-exec-prefix],\n    [AS_HELP_STRING([--with-fltk-exec-prefix=PFX],\n      [exec prefix where FLTK is installed (optional)])],\n    [fltk_exec_prefix=\"$withval\"],\n    [fltk_exec_prefix=\"\"])\n\n  if test \"x$fltk_exec_prefix\" != x; then\n    fltk_args=\"$fltk_args --exec-prefix=$fltk_exec_prefix\"\n    if test \"x${FLTK_CONFIG+set}\" != xset ; then\n      FLTK_CONFIG=\"$fltk_exec_prefix/bin/fltk-config\"\n    fi\n  fi\n\n  if test \"x$fltk_prefix\" != x; then\n    fltk_args=\"$fltk_args --prefix=$fltk_prefix\"\n    if test x${FLTK_CONFIG+set} != xset ; then\n      FLTK_CONFIG=\"$fltk_prefix/bin/fltk-config\"\n    fi\n  fi\n\n  AC_PATH_PROG([FLTK_CONFIG], [fltk-config], [no])\n\n  warn_fltk_config=\"\"\n  warn_fltk_opengl=\"\"\n\n  if test \"$FLTK_CONFIG\" = no; then\n    warn_fltk_config=\"FLTK config script not found.  Native graphics will be disabled.\"\n    OCTAVE_CONFIGURE_WARNING([warn_fltk_config])\n  else\n    ## Only include -I options in FLTK_CPPFLAGS\n    fltk_cflags=`$FLTK_CONFIG $fltkconf_args --use-gl --cflags`\n    for fltk_option in $fltk_cflags; do\n      case $fltk_option in\n        -I*)\n          FLTK_CPPFLAGS=\"$FLTK_CPPFLAGS $fltk_option\"\n        ;;\n      esac\n    done\n    FLTK_LDFLAGS=`$FLTK_CONFIG $fltkconf_args --use-gl --ldflags`\n\n    case $host_os in\n      mingw*)\n        FLTK_LDFLAGS=`echo $FLTK_LDFLAGS | $SED -e 's/-mwindows//g'`\n      ;;\n    esac\n    AC_LANG_PUSH(C++)\n    AC_CACHE_CHECK([for OpenGL support in FLTK],\n      [octave_cv_fltk_opengl_support],\n      [save_CPPFLAGS=\"$CPPFLAGS\"\n      CPPFLAGS=\"$CFLAGS $FLTK_CPPFLAGS\"\n      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n        #include <FL/gl.h>\n        ]], [[\n        int nothing = 0;\n        ]])],\n        octave_cv_fltk_opengl_support=yes,\n        octave_cv_fltk_opengl_support=no)\n      CPPFLAGS=\"$save_CPPFLAGS\"\n      ])\n    if test $octave_cv_fltk_opengl_support = no; then\n      warn_fltk_opengl=\"FLTK does not have OpenGL support.  OpenGL graphics with FLTK widgets will be disabled.\"\n    else\n      build_fltk_graphics=yes\n      AC_DEFINE(HAVE_FLTK, 1, [Define to 1 if FLTK is available.])\n    fi\n    AC_LANG_POP(C++)\n\n    if test -n \"$warn_fltk_opengl\"; then\n      OCTAVE_CONFIGURE_WARNING([warn_fltk_opengl])\n    fi\n  fi\nfi\n\nAC_SUBST(FLTK_CPPFLAGS)\nAC_SUBST(FLTK_LDFLAGS)\nAC_SUBST(FLTK_LIBS)\n\nif test $build_qt_graphics = no && test $build_fltk_graphics = no; then\n  opengl_graphics=no\nelse\n  opengl_graphics=yes\nfi\n\n### Check for BLAS and LAPACK libraries:\n\n## Need to adjust FFLAGS to include correct integer size.\nsave_FFLAGS=\"$FFLAGS\"\nFFLAGS=\"$FFLAGS $F77_INTEGER_8_FLAG\"\n\nAX_BLAS_WITH_F77_FUNC([:], [:],\n  [ax_blas_ok=yes\n  AC_MSG_CHECKING([BLAS can be called from Fortran])\n  AC_MSG_RESULT([yes assumed for cross compilation])])\nAX_LAPACK([:], [:])\n\n## Restore FFLAGS.\nFFLAGS=\"$save_FFLAGS\"\n\n## If necessary, try again with -ff2c in FFLAGS\nif test $ax_blas_ok = no; then\n  save_FFLAGS=\"$FFLAGS\"\n  FFLAGS=\"-ff2c $FFLAGS $F77_INTEGER_8_FLAG\"\n\n  AX_BLAS_WITH_F77_FUNC([:], [:])\n  AX_LAPACK([:], [:])\n\n  ## Restore FFLAGS, with -ff2c if that was helpful\n\n  if test $ax_blas_ok = yes; then\n    FFLAGS=\"-ff2c $save_FFLAGS\"\n  else\n    FFLAGS=\"$save_FFLAGS\"\n  fi\nfi\n\n## On OSX, try again with a wrapper library (without -ff2c!)\nif test $ax_blas_ok = no; then\n  case $host_os in\n    darwin*)\n      ## test if wrapper functions help\n      octave_blaswrap_save_CFLAGS=\"$CFLAGS\"\n      CFLAGS=\"$CFLAGS -DUSE_BLASWRAP\"\n      AC_LANG_PUSH(C)\n      AC_COMPILE_IFELSE([AC_LANG_SOURCE([[\n          #include \"liboctave/cruft/misc/blaswrap.c\"\n        ]])],\n        [mv conftest.$ac_objext blaswrap.$ac_objext\n         octave_blaswrap_save_BLAS_LIBS=\"$BLAS_LIBS\"\n         BLAS_LIBS=\"blaswrap.$ac_objext -framework vecLib\"\n\n         save_FFLAGS=\"$FFLAGS\"\n         FFLAGS=\"$FFLAGS $F77_INTEGER_8_FLAG\"\n\n         AX_BLAS_WITH_F77_FUNC([:], [:])\n         AX_LAPACK([:], [:])\n\n         ## Restore FFLAGS.\n         FFLAGS=\"$save_FFLAGS\"\n\n         ## remove temp file\n         rm -f blaswrap.$ac_objext],\n        [AC_MSG_FAILURE([cannot compile liboctave/cruft/misc/blaswrap.c])])\n      AC_LANG_POP(C)\n      CFLAGS=\"$octave_blaswrap_save_CFLAGS\"\n\n      if test $ax_blas_ok = no; then\n        BLAS_LIBS=\"$octave_blaswrap_save_BLAS_LIBS\"\n      else\n        ## wrapper in cruft, remove from BLAS_LIBS\n        BLAS_LIBS=`echo $BLAS_LIBS | $SED -e 's/blaswrap.[[^ ]]* //g'`\n        AC_DEFINE(USE_BLASWRAP, 1,\n          [Define to 1 if BLAS functions need to be wrapped (potentially needed for 64-bit OSX only).])\n      fi\n    ;;\n  esac\nfi\n\nif test $ax_blas_ok = no; then\n  if test $ENABLE_64 = yes && test $ax_blas_integer_size_ok = no; then\n    ## Attempt to be more informative.\n    AC_MSG_ERROR([BLAS doesn't seem to support 64-bit integers.  This is incompatible with --enable-64.])\n  else\n    AC_MSG_ERROR([A BLAS library was detected but found incompatible with your Fortran 77 compiler settings.])\n  fi\nfi\n\nif test $ax_blas_ok = no || test $ax_lapack_ok = no; then\n  AC_MSG_ERROR([BLAS and LAPACK libraries are required])\nfi\n\n### Check for the qrupdate library\n\n## No need to adjust FFLAGS because only link is attempted.\n## Must supply proper LIBS, however.\nsave_LIBS=\"$LIBS\"\nLIBS=\"$LAPACK_LIBS $BLAS_LIBS $FLIBS $LIBS\"\nOCTAVE_CHECK_LIB(qrupdate, qrupdate,\n  [qrupdate not found.  The QR & Cholesky updating functions will be slow.],\n  [],\n  [sqr1up],\n  [Fortran 77], [don't use qrupdate, disable QR & Cholesky updating functions])\n\n## Additional check to see if qrupdate lib found supports LU updates\nif test -z \"$warn_qrupdate\"; then\n  AC_CACHE_CHECK([for slup1up in $QRUPDATE_LIBS],\n    [octave_cv_func_slup1up],\n    [LIBS=\"$LIBS $QRUPDATE_LIBS\"\n    AC_LANG_PUSH([Fortran 77])\n    AC_LINK_IFELSE([AC_LANG_CALL([], [slup1up])],\n      octave_cv_func_slup1up=yes, octave_cv_func_slup1up=no)\n    AC_LANG_POP([Fortran 77])\n  ])\n  if test $octave_cv_func_slup1up = yes; then\n    AC_DEFINE(HAVE_QRUPDATE_LUU, 1, [Define to 1 if qrupdate supports LU updates.])\n  fi\nfi\nLIBS=\"$save_LIBS\"\n\nif test $ENABLE_64 = yes; then\n  CHOLMOD_TAG=\"_l_\"\n  CXSPARSE_TAG=\"_dl_\"\n  UMFPACK_TAG=\"_zl_\"\nelse\n  CHOLMOD_TAG=\"_\"\n  CXSPARSE_TAG=\"_di_\"\n  UMFPACK_TAG=\"_zi_\"\nfi\n\n### Check for AMD library\n\nOCTAVE_CHECK_LIB(amd, AMD,\n  [AMD library not found.  This will result in some lack of functionality for sparse matrices.],\n  [suitesparse/amd.h ufsparse/amd.h amd/amd.h amd.h],\n  [amd_postorder],\n  [], [don't use AMD library, disable some sparse matrix functionality])\n\n### Check for CAMD library\n\nOCTAVE_CHECK_LIB(camd, CAMD,\n  [CAMD library not found.  This will result in some lack of functionality for sparse matrices.],\n  [suitesparse/camd.h ufsparse/camd.h camd/camd.h camd.h],\n  [camd_postorder],\n  [], [don't use CAMD library, disable some sparse matrix functionality])\n\n### Check for COLAMD library\n\nOCTAVE_CHECK_LIB(colamd, COLAMD,\n  [COLAMD library not found.  This will result in some lack of functionality for sparse matrices.],\n  [suitesparse/colamd.h ufsparse/colamd.h colamd/colamd.h colamd.h],\n  [colamd],\n  [], [don't use COLAMD library, disable some sparse matrix functionality])\n\n### Check for CCOLAMD library\n\nOCTAVE_CHECK_LIB(ccolamd, CCOLAMD,\n  [CCOLAMD library not found.  This will result in some lack of functionality for sparse matrices.],\n  [suitesparse/ccolamd.h ufsparse/ccolamd.h ccolamd/ccolamd.h ccolamd.h],\n  [ccolamd],\n  [], [don't use CCOLAMD library, disable some sparse matrix functionality])\n\n### Check for CHOLMOD library.\n### If your cholmod library requires cblas, then you will need to\n### configure with --with-cholmod=\"-lcholmod -lcblas\".\n\nsave_LIBS=\"$LIBS\"\nLIBS=\"$COLAMD_LDFLAGS $COLAMD_LIBS $AMD_LDFLAGS $AMD_LIBS $LAPACK_LIBS $BLAS_LIBS $FLIBS $LIBS\"\nOCTAVE_CHECK_LIB(cholmod, CHOLMOD,\n  [CHOLMOD library not found.  This will result in some lack of functionality for sparse matrices.],\n  [suitesparse/cholmod.h ufsparse/cholmod.h cholmod/cholmod.h cholmod.h],\n  [cholmod${CHOLMOD_TAG}start],\n  [], [don't use CHOLMOD library, disable some sparse matrix functionality])\nLIBS=\"$save_LIBS\"\n\n### Check for CXSparse library\n\nOCTAVE_CHECK_LIB(cxsparse, CXSparse,\n  [CXSparse library not found.  This will result in some lack of functionality for sparse matrices.],\n  [suitesparse/cs.h ufsparse/cs.h cxsparse/cs.h cs.h],\n  [cs${CXSPARSE_TAG}sqr],\n  [C++], [don't use CXSparse library, disable some sparse matrix functionality])\n\n## Additional check for CXSparse version >= 2.2\nif test $octave_cv_lib_cxsparse = yes; then\n  OCTAVE_CHECK_CXSPARSE_VERSION_OK\n  if test $octave_cv_cxsparse_version_ok = no; then\n    AC_MSG_ERROR([CXSparse library is too old (< version 2.2).  Upgrade CXSparse (SuiteSparse) or configure Octave with --disable-cxsparse\"])\n  fi\nfi\n\n### Check for UMFPACK library.\n\nsave_LIBS=\"$LIBS\"\nsave_CPPFLAGS=\"$CPPFLAGS\"\nLIBS=\"$AMD_LDFLAGS $AMD_LIBS $BLAS_LIBS $FLIBS $LIBS\"\nCPPFLAGS=\"$AMD_CPPFLAGS $CPPFLAGS\"\nOCTAVE_CHECK_LIB([umfpack], UMFPACK,\n  [UMFPACK not found.  This will result in some lack of functionality for sparse matrices.],\n  [suitesparse/umfpack.h ufsparse/umfpack.h umfpack/umfpack.h umfpack.h],\n  [umfpack${UMFPACK_TAG}get_determinant],\n  [], [don't use UMFPACK, disable some sparse matrix functionality])\nCPPFLAGS=\"$save_CPPFLAGS\"\nLIBS=\"$save_LIBS\"\n\nif test -z \"$UMFPACK_LIBS\"; then\n  ## Invalidate the cache and try again with -lcblas.\n  $as_unset ac_cv_lib_umfpack_umfpack${UMFPACK_TAG}get_determinant\n  $as_unset octave_cv_lib_umfpack\n  save_LIBS=\"$LIBS\"\n  LIBS=\"-lcblas $AMD_LDFLAGS $AMD_LIBS $BLAS_LIBS $FLIBS $LIBS\"\n  OCTAVE_CHECK_LIB([umfpack], UMFPACK,\n    [UMFPACK not found.  This will result in some lack of functionality for sparse matrices.],\n    [suitesparse/umfpack.h ufsparse/umfpack.h umfpack/umfpack.h umfpack.h],\n    [umfpack${UMFPACK_TAG}get_determinant],\n    [], [don't use UMFPACK, disable some sparse matrix functionality])\n  if test -n \"$UMFPACK_LIBS\"; then\n    UMFPACK_LIBS=\"$UMFPACK_LIBS -lcblas\"\n  fi\n  LIBS=\"$save_LIBS\"\nfi\n\n## If using SuiteSparse libraries, check for suitesparseconfig library.\n\nSUITESPARSE_CONFIG_LIBS=\nif test x$octave_cv_lib_amd = xyes \\\n   || test x$octave_cv_lib_camd = xyes \\\n   || test x$octave_cv_lib_colamd = xyes \\\n   || test x$octave_cv_lib_ccolamd = xyes \\\n   || test x$octave_cv_lib_cholmod = xyes \\\n   || test x$octave_cv_lib_cxsparse = xyes \\\n   || test x$octave_cv_lib_umfpack = xyes; then\n  ## SuiteSparse >= 4.0 needs additional link library for SuiteSparse_time\n  save_CPPFLAGS=\"$CPPFLAGS\"\n  save_LIBS=\"$LIBS\";\n  CPPFLAGS=\"$UMFPACK_CPPFLAGS $AMD_CPPFLAGS $CPPFLAGS\"\n  LIBS=\"$UMFPACK_LIBS $AMD_LDFLAGS $AMD_LIBS $BLAS_LIBS $FLIBS $LIBS\"\n  xtra_libs=\n  AC_CHECK_LIB([suitesparseconfig], [SuiteSparse_time],\n    [SUITESPARSE_CONFIG_LIBS=\"-lsuitesparseconfig\"],\n    [AC_CHECK_LIB([rt], [clock_gettime],\n      [AC_CHECK_LIB([suitesparseconfig], [SuiteSparse_time],\n        [SUITESPARSE_CONFIG_LIBS=\"-lsuitesparseconfig -lrt\"], [], [-lrt])])])\n  LIBS=\"$save_LIBS\"\n  CPPFLAGS=\"$save_CPPFLAGS\"\nfi\nAC_SUBST(SUITESPARSE_CONFIG_LIBS)\n\n## Check for UMFPACK separately split complex matrix and RHS.\nif test -n \"$UMFPACK_LIBS\"; then\n  save_CPPFLAGS=\"$CPPFLAGS\"\n  save_LIBS=\"$LIBS\";\n  CPPFLAGS=\"$UMFPACK_CPPFLAGS $AMD_CPPFLAGS $CPPFLAGS\"\n  LIBS=\"$UMFPACK_LIBS $CHOLMOD_LDFLAGS $CHOLMOD_LIBS $AMD_LDFLAGS $AMD_LIBS $COLAMD_LDFLAGS $COLAMD_LIBS $LAPACK_LIBS $BLAS_LIBS $FLIBS $LIBS $xtra_libs\"\n  OCTAVE_UMFPACK_SEPARATE_SPLIT\n  LIBS=\"$save_LIBS\"\n  CPPFLAGS=\"$save_CPPFLAGS\"\nfi\n\n### Check for ARPACK library.\n\nsave_LIBS=\"$LIBS\"\nLIBS=\"$LAPACK_LIBS $BLAS_LIBS $FLIBS $LIBS\"\nOCTAVE_CHECK_LIB([arpack], ARPACK,\n  [ARPACK not found.  The eigs function will be disabled.],\n  [],\n  [dseupd],\n  [Fortran 77], [don't use the ARPACK library, disable eigs function],\n  [warn_arpack=\n   OCTAVE_CHECK_LIB_ARPACK_OK(\n     [AC_DEFINE(HAVE_ARPACK, 1, [Define to 1 if ARPACK is available.])],\n     [warn_arpack=\"ARPACK library found, but does not seem to work properly; disabling eigs function\"])])\nLIBS=\"$save_LIBS\"\n\n### Check for readline library.\n\nOCTAVE_ENABLE_READLINE\n\n### Check for existence of various libraries\n\n## OS-specific test for dirent, opendir.\ncase $host_os in\n  mingw*)\n    if test $have_msvc = yes; then\n      AC_CHECK_LIB([dirent], [opendir])\n      LIBS=\"$LIBS -ladvapi32 -lgdi32 -lws2_32 -luser32 -lkernel32\"\n    else\n      LIBS=\"$LIBS -lgdi32 -lws2_32 -luser32 -lkernel32\"\n    fi\n    LIBS=\"$LIBS -lgdi32 -lws2_32 -luser32 -lkernel32\"\n  ;;\n  msdosmsvc)\n    AC_CHECK_LIB([dirent], [opendir])\n    LIBS=\"$LIBS -ladvapi32 -lgdi32 -lws2_32 -luser32 -lkernel32\"\n  ;;\nesac\n\n## Find a termlib to use.\nOCTAVE_CHECK_LIB_TERMLIB\n\n### Checks for header files.\n\nAC_HEADER_DIRENT\nAC_HEADER_SYS_WAIT\n\n## C headers\n\ndnl Use multiple AC_CHECKs to avoid line continuations '\\' in list\nAC_CHECK_HEADERS([curses.h direct.h dlfcn.h floatingpoint.h fpu_control.h])\nAC_CHECK_HEADERS([grp.h ieeefp.h inttypes.h locale.h memory.h ncurses.h])\nAC_CHECK_HEADERS([poll.h pthread.h pwd.h sunmath.h sys/ioctl.h])\nAC_CHECK_HEADERS([sys/param.h sys/poll.h sys/resource.h])\nAC_CHECK_HEADERS([sys/select.h sys/stropts.h termcap.h])\n\n## C++ headers\n\nAC_LANG_PUSH(C++)\n\nAC_CHECK_HEADERS([sstream])\n\nAC_LANG_POP(C++)\n\n## Find a termio header to include.\n\nAC_CHECK_HEADERS([termios.h], have_termios_h=yes, have_termios_h=no)\nAC_CHECK_HEADERS([termio.h], have_termio_h=yes, have_termio_h=no)\nAC_CHECK_HEADERS([sgtty.h], have_sgtty_h=yes, have_sgtty_h=no)\nAC_CHECK_HEADERS([fnmatch.h], have_fnmatch_h=yes, have_fnmatch_h=no)\nAC_CHECK_HEADERS([conio.h], have_conio_h=yes, have_conio_h=no)\n\nif test $have_termios_h != yes \\\n    && test $have_termio_h != yes \\\n    && test $have_sgtty_h != yes; then\n  AC_MSG_WARN([I couldn't find termios.h, termio.h, or sgtty.h!])\nfi\n\n## For MSVC compilers, avoid #define of min/max from windows.h header\nif test $have_msvc = yes; then\n  AC_DEFINE(NOMINMAX, 1, [Define to 1 if you want to avoid min/max macro definition in Windows headers.])\nfi\n\n### Determine types and size of types.\n\nAC_TYPE_INT64_T\nAC_TYPE_MODE_T\nAC_TYPE_OFF_T\nAC_TYPE_PID_T\nAC_TYPE_SIZE_T\nAC_TYPE_SSIZE_T\nAC_TYPE_UID_T\nAC_TYPE_UINT64_T\nAC_CHECK_TYPES([dev_t, ino_t])\nAC_CHECK_TYPES([ptrdiff_t])\n\nAC_CHECK_TYPES([long long int])\nif test $ac_cv_type_long_long_int = yes; then\n  AC_DEFINE(OCTAVE_HAVE_LONG_LONG_INT, 1,\n    [Define to 1 if the system has the type 'long long int'.])\nfi\n\nAC_CHECK_TYPES([unsigned long long int])\nif test $ac_cv_type_unsigned_long_long_int = yes; then\n  AC_DEFINE(OCTAVE_HAVE_UNSIGNED_LONG_LONG_INT, 1,\n    [Define to 1 if the system has the type 'unsigned long long int'.])\nfi\n\n## How big are ints and how are they oriented?\n## These could probably be eliminated in favor of run-time checks.\n\nAC_CHECK_SIZEOF([short])\nAC_CHECK_SIZEOF([int])\nAC_CHECK_SIZEOF([long])\nAC_CHECK_SIZEOF([long long])\n## Check for long double type (for 64-bit integers)\nAC_CHECK_SIZEOF([long double])\n\n### Check structures and existence of necessary members\n\nAC_CHECK_MEMBERS([struct stat.st_blksize, struct stat.st_blocks,\n                  struct stat.st_rdev])\nAC_CHECK_MEMBERS([struct group.gr_passwd])\n\nAC_STRUCT_TIMEZONE\n\n## Check if C++ compiler allows overload of char, int8_t, and uint8_t.\nAC_CACHE_CHECK([whether ${CXX-g++} allows overload of char, int8_t, and uint8_t],\n  [octave_cv_overload_char_int8_t],\n  [AC_LANG_PUSH(C++)\n  AC_COMPILE_IFELSE([AC_LANG_SOURCE([[\n    #include <stdint.h>\n    void somefunc(char x) {};\n    void somefunc(int8_t x) {};\n    void somefunc(uint8_t x) {};\n    ]])],\n    octave_cv_overload_char_int8_t=yes,\n    octave_cv_overload_char_int8_t=no)\n  AC_LANG_POP(C++)\n  ])\nif test $octave_cv_overload_char_int8_t = yes; then\n  AC_DEFINE(OCTAVE_HAVE_OVERLOAD_CHAR_INT8_TYPES, 1,\n    [Define to 1 if C++ allows overload of char, int8_t, and uint8_t types.])\nfi\n\n### Check compiler characteristics.\n\n## Check if C++ compiler can auto allocate variable sized arrays.\nOCTAVE_CXX_DYNAMIC_AUTO_ARRAYS\n\n## Check that C compiler and libraries support IEEE754 data format.\nOCTAVE_IEEE754_DATA_FORMAT\n\n## Are bit_and, bit_or, and bit_xor defined as templated operators?\nOCTAVE_CXX_BITWISE_OP_TEMPLATES\n\n## Can complex class set components independently?\nOCTAVE_CXX_COMPLEX_SETTERS\n\n## Are there functions to access real/imag parts of numbers via references?\nOCTAVE_CXX_COMPLEX_REFERENCE_ACCESSORS\n\n## Check if fast integer arithmetics based on bit tricks is available.\nOCTAVE_FAST_INT_OPS\n\n## Does the C compiler handle alloca and const correctly?\nAC_FUNC_ALLOCA\n\n## Does the C compiler support Automake subdir-objects option?\nAM_PROG_CC_C_O\n\n### gnulib initialization: part 2\n### After all include and path modifications have taken place\n### and at the same priority level as function checks.\n\ngl_INIT\n\n### Checks for functions and variables.\n\ndnl These checks define/undefine HAVE_FUNCNAME in config.h.\ndnl Code tests HAVE_FUNCNAME and either uses function or provides workaround.\ndnl Use multiple AC_CHECKs to avoid line continuations '\\' in list\nAC_CHECK_FUNCS([ctermid dup2])\nAC_CHECK_FUNCS([endgrent endpwent execvp expm1 expm1f fork])\nAC_CHECK_FUNCS([getegid geteuid getgid getgrent getgrgid getgrnam])\nAC_CHECK_FUNCS([getpgrp getpid getppid getpwent getpwuid getuid])\nAC_CHECK_FUNCS([isascii kill])\nAC_CHECK_FUNCS([lgamma lgammaf lgamma_r lgammaf_r])\nAC_CHECK_FUNCS([log1p log1pf])\nAC_CHECK_FUNCS([realpath resolvepath roundl])\nAC_CHECK_FUNCS([select setgrent setpwent setsid siglongjmp strsignal])\nAC_CHECK_FUNCS([tcgetattr tcsetattr tgammaf toascii])\nAC_CHECK_FUNCS([umask waitpid])\nAC_CHECK_FUNCS([_getch _kbhit])\n\ndnl There are no workarounds in the code for missing these functions.\nAC_CHECK_FUNCS([modf pow sqrt sqrtf], [],\n               [AC_MSG_ERROR([Missing function required to build Octave])])\n\n## exp2, round, tgamma function checks\nAC_LANG_PUSH(C++)\nAC_CHECK_DECLS([exp2, round, tgamma], [], [], [[#include <cmath>]])\nAC_CHECK_FUNCS([exp2 round tgamma])\nAH_VERBATIM([Z_FUNCS_AND_DECLS], [\n#if defined (__cplusplus)\nextern \"C\" {\n#endif\n#if HAVE_EXP2 && ! HAVE_DECL_EXP2\ndouble exp2 (double);\n#endif\n#if HAVE_ROUND && ! HAVE_DECL_ROUND\ndouble round (double);\n#endif\n#if HAVE_TGAMMA && ! HAVE_DECL_TGAMMA\ndouble tgamma (double);\n#endif\n#if defined (__cplusplus)\n}\n#endif\n])\nAC_LANG_POP(C++)\n\n## Look in <cmath> for the IEEE functions isnan, isinf, isfinite that we need.\n\nOCTAVE_CHECK_FUNC_CMATH(isnan)\nOCTAVE_CHECK_FUNC_CMATH(isinf)\nOCTAVE_CHECK_FUNC_CMATH(isfinite)\nOCTAVE_CHECK_FUNC_CMATH(signbit)\n\n## Check for Inf and NaN functions\n\ncase $canonical_host_type in\n  m68k-hp-hpux*)\n    ## I am told that Inf and NaN don't work on m68k HP sytems.\n  ;;\n  *)\n    AC_CHECK_FUNCS([finite isnan isinf signbit])\n    AC_CHECK_FUNCS([_finite _isnan])\n    AC_CHECK_DECLS([signbit], , , [#include <math.h>])\n  ;;\nesac\n\n## Look in <complex> for C++ variants of math functions that we need.\n\nOCTAVE_CHECK_FUNC_COMPLEX(acos)\nOCTAVE_CHECK_FUNC_COMPLEX(acosh)\nOCTAVE_CHECK_FUNC_COMPLEX(asin)\nOCTAVE_CHECK_FUNC_COMPLEX(asinh)\nOCTAVE_CHECK_FUNC_COMPLEX(atan)\nOCTAVE_CHECK_FUNC_COMPLEX(atanh)\n\n## Check for nonstandard, but common math functions, that we need.\n\ndnl Use multiple AC_CHECKs to avoid line continuations '\\' in list\nAC_CHECK_FUNCS([acosh acoshf asinh asinhf atanh atanhf cbrt cbrtf])\nAC_CHECK_FUNCS([erf erff erfc erfcf exp2f hypotf _hypotf log2 log2f])\n\n## Check for math defines such as M_LN2 in math.h\nAC_CACHE_CHECK([for MATH DEFINES in math.h],\n  [octave_cv_header_math_defines],\n  [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n    #include <math.h>\n    ]], [[\n    double x = M_LN2;]])],\n    octave_cv_header_math_defines=yes,\n    octave_cv_header_math_defines=no)\n  ])\n\nif test $octave_cv_header_math_defines = no; then\n  ## Check again and try defining _USE_MATH_DEFINES\n  AC_CACHE_CHECK([whether _USE_MATH_DEFINES needs to be defined],\n    [octave_cv_header__use_math_defines],\n    [save_CPPFLAGS=\"$CPPFLAGS\"\n    CPPFLAGS=\"$CPPFLAGS -D_USE_MATH_DEFINES\"\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n      #include <math.h>\n      ]], [[\n      double x = M_LN2;]])],\n      octave_cv_header__use_math_defines=yes,\n      octave_cv_header__use_math_defines=no)\n    CPPFLAGS=\"$save_CPPFLAGS\"\n    ])\n  if test $octave_cv_header__use_math_defines = yes; then\n    octave_cv_header_math_defines=yes\n    AC_DEFINE(_USE_MATH_DEFINES, 1,\n      [Define to 1 if _USE_MATH_DEFINES is required to get math constants like M_LN2.])\n    CPPFLAGS=\"$CPPFLAGS -D_USE_MATH_DEFINES\"\n  fi\nfi\n\nif test $octave_cv_header_math_defines = yes; then\n  AC_DEFINE(HAVE_MATH_DEFINES, 1,\n    [Define to 1 if defines such as M_PI are available in math.h])\nelse\n  AC_MSG_ERROR([MATH DEFINES in math.h such as M_PI are required to build Octave])\nfi\n\n## Windows-specific tests for extra #defines\ncase $host_os in\n  msdosmsvc | mingw*)\n    AC_MSG_CHECKING([for required _WIN32_WINNT])\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n        #include <windows.h>\n        #if _WIN32_WINNT < 0x0403\n        #error \"Wrong version\"\n        #endif\n        ]], [])],\n      [AC_MSG_RESULT([none])],\n      [AC_DEFINE(_WIN32_WINNT, 0x0403,\n        [Define to 0x0403 to access InitializeCriticalSectionAndSpinCount.])\n       AC_MSG_RESULT([0x0403])])\n  ;;\nesac\n\n## Windows-specific use of functions\ncase $host_os in\n  msdosmsvc | mingw*)\n    AC_CHECK_FUNCS([setvbuf], [],\n                   [AC_MSG_ERROR([Missing function required to build Octave])])\n  ;;\nesac\n\n## Cygwin kluge for getrusage.\nAC_CHECK_FUNCS([getrusage])\ncase $host_os in\n  cygwin*)\n    AC_DEFINE(RUSAGE_TIMES_ONLY, 1,\n      [Define to 1 if your struct rusage only has time information.])\n  ;;\nesac\n\n## Check for CGDisplayBitsPerPixel function on Mac OSX systems with Carbon\nif test $have_framework_carbon = yes; then\n  OCTAVE_CARBON_CGDISPLAYBITSPERPIXEL\nfi\n\nAC_CHECK_FUNCS([getpwnam], [], [AC_CHECK_LIB([sun], [getpwnam])])\n\nAC_FUNC_CLOSEDIR_VOID\n\n## Check return type of matherr\nAC_CACHE_CHECK([for struct exception in math.h],\n  [octave_cv_func_matherr_type],\n  [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n      #include <math.h>\n      ]], [[\n      struct exception *x;\n      x->type;\n      x->name;\n      ]])],\n    octave_cv_func_matherr_type=yes,\n    octave_cv_func_matherr_type=no)\n  ])\nif test $octave_cv_func_matherr_type = yes; then\n  AC_DEFINE(EXCEPTION_IN_MATH, 1,\n    [Define to 1 if math.h declares struct exception for matherr.])\nfi\n\n## Signal stuff.\n\nAC_CHECK_DECLS([sys_siglist], [], [],\n[[#include <signal.h>\n/* NetBSD declares sys_siglist in unistd.h.  */\n#if HAVE_UNISTD_H\n# include <unistd.h>\n#endif\n]])\n\n### Need to disable building documentation if either gnuplot or\n### makeinfo are missing.  Skip this warning if building docs was\n### disabled with a configure option.\n\nif test $ENABLE_DOCS = yes; then\n  if test $opengl_graphics = no || test -n \"$warn_OSMesa\"; then\n    if test -n \"$warn_gnuplot\"; then\n      ENABLE_DOCS=no\n      warn_docs_graphics=\"building documentation disabled because no suitable graphics toolkit is available; make dist will fail\"\n        OCTAVE_CONFIGURE_WARNING([warn_docs_graphics])\n    fi\n  fi\n  if test -n \"$warn_makeinfo\"; then\n    ENABLE_DOCS=no\n    warn_docs_makeinfo=\"building documentation disabled because makeinfo was not found; make dist will fail\"\n    OCTAVE_CONFIGURE_WARNING([warn_docs_makeinfo])\n  fi\nfi\nif test $ENABLE_DOCS = yes; then\n  AC_DEFINE(ENABLE_DOCS, 1,\n    [Define to 1 to build Octave documentation files.])\nfi\nAM_CONDITIONAL([AMCOND_BUILD_DOCS], [test $ENABLE_DOCS = yes])\n\ncase \"$GCC_VERSION\" in\n  *4*)\n  ;;\n  *)\n    GCC_WSHADOW_OPTION=-Wshadow\n  ;;\nesac\n\n### Maybe add -Wall, -W, and -Wshadow to compiler flags now that we're\n### done feature testing.\n\nGCC_EXTRA_FLAGS=\"-Wall -W $GCC_WSHADOW_OPTION -Wformat -Wpointer-arith -Wmissing-prototypes -Wstrict-prototypes -Wwrite-strings -Wcast-align -Wcast-qual\"\nGXX_EXTRA_FLAGS=\"-Wall -W $GCC_WSHADOW_OPTION -Wold-style-cast -Wformat -Wpointer-arith -Wwrite-strings -Wcast-align -Wcast-qual\"\n\ntry_extra_warning_flags=yes\n\nAC_ARG_ENABLE([extra-warning-flags],\n  [AS_HELP_STRING([--disable-extra-warning-flags],\n    [don't add -Wall, -W, -Wformat, -Wold-style-cast, and other warning options to CFLAGS and CXXFLAGS])],\n  [if test \"$enableval\" = no; then\n     try_extra_warning_flags=no\n   fi],\n  [])\n\nif test $try_extra_warning_flags = yes; then\n  for flag in $GCC_EXTRA_FLAGS; do\n    OCTAVE_CC_FLAG([$flag], [\n      WARN_CFLAGS=\"$WARN_CFLAGS $flag\";\n      AC_MSG_RESULT([adding $flag to WARN_CFLAGS])])\n  done\n  for flag in $GXX_EXTRA_FLAGS; do\n    OCTAVE_CXX_FLAG([$flag], [\n      WARN_CXXFLAGS=\"$WARN_CXXFLAGS $flag\";\n      AC_MSG_RESULT([adding $flag to WARN_CXXFLAGS])])\n  done\nfi\n\nGCC_STRICT_FLAGS=\"-Wconversion\"\nGXX_STRICT_FLAGS=\"-Wconversion -Weffc++\"\n\ntry_strict_warning_flags=no\n\nAC_ARG_ENABLE([strict-warning-flags],\n  [AS_HELP_STRING([--enable-strict-warning-flags],\n    [add extra strict warning options to CFLAGS and CXXFLAGS])],\n  [if test \"$enableval\" = yes; then\n     try_strict_warning_flags=yes\n   fi],\n  [])\n\nif test $try_strict_warning_flags = yes; then\n  for flag in $GCC_STRICT_FLAGS; do\n    OCTAVE_CC_FLAG([$flag], [\n      WARN_CFLAGS=\"$WARN_CFLAGS $flag\";\n      AC_MSG_RESULT([adding $flag to WARN_CFLAGS])])\n  done\n  for flag in $GXX_STRICT_FLAGS; do\n    OCTAVE_CXX_FLAG([$flag], [\n      WARN_CXXFLAGS=\"$WARN_CXXFLAGS $flag\";\n      AC_MSG_RESULT([adding $flag to WARN_CXXFLAGS])])\n  done\nfi\n\nGCC_ADDRESS_SANITIZER_FLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"\nGXX_ADDRESS_SANITIZER_FLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"\nLD_ADDRESS_SANITIZER_FLAGS=\"-fsanitize=address\"\n\ntry_address_sanitizer_flags=no\n\nAC_ARG_ENABLE([address-sanitizer-flags],\n  [AS_HELP_STRING([--enable-address-sanitizer-flags],\n    [add extra -fsanitize=address and -fno-omit-frame-pointer options to CFLAGS, CXXFLAGS, and LDFLAGS])],\n  [if test \"$enableval\" = yes; then\n     try_address_sanitizer_flags=yes\n   fi],\n  [])\n\nif test $try_address_sanitizer_flags = yes; then\n  ADDRESS_SANITIZER_OPTIONS=\"symbolize=1\"\n  AC_SUBST(ADDRESS_SANITIZER_OPTIONS)\nfi\n\nAM_CONDITIONAL([AMCOND_ADDRESS_SANITIZER_ENABLED],\n  [test $try_address_sanitizer_flags = yes])\n\nif test $try_address_sanitizer_flags = yes; then\n  for flag in $GCC_ADDRESS_SANITIZER_FLAGS; do\n    OCTAVE_CC_FLAG([$flag], [\n      WARN_CFLAGS=\"$WARN_CFLAGS $flag\";\n      AC_MSG_RESULT([adding $flag to WARN_CFLAGS])])\n  done\n  for flag in $GXX_ADDRESS_SANITIZER_FLAGS; do\n    OCTAVE_CXX_FLAG([$flag], [\n      WARN_CXXFLAGS=\"$WARN_CXXFLAGS $flag\";\n      AC_MSG_RESULT([adding $flag to WARN_CXXFLAGS])])\n  done\n  dnl FIXME: do we really need an LD-specific test, or is this good enough?\n  for flag in $LD_ADDRESS_SANITIZER_FLAGS; do\n    OCTAVE_CC_FLAG([$flag], [\n      WARN_LDFLAGS=\"$WARN_LDFLAGS $flag\";\n      AC_MSG_RESULT([adding $flag to WARN_LDFLAGS])])\n  done\nfi\n\nAC_SUBST(WARN_CFLAGS)\nAC_SUBST(WARN_CXXFLAGS)\nAC_SUBST(WARN_LDFLAGS)\n\n## Also check for the GCC-specific pragmas for controlling warnings.\n\nAC_CACHE_CHECK([for @%:@pragma GCC diagnostic push/pop/ignore],\n  [octave_cv_gcc_has_pragma_GCC_diagnostic],\n  [AC_LANG_PUSH(C++)\n   AC_TRY_COMPILE([], [\n#pragma GCC diagnostic push\n#pragma GCC diagnostic ignore \"-Wold-style-cast\"\n  int three = (int) 3.1415926;\n#pragma GCC diagnostic pop\n    ],\n    [octave_cv_gcc_has_pragma_GCC_diagnostic=yes],\n    [octave_cv_gcc_has_pragma_GCC_diagnostic=no])\n   AC_LANG_POP(C++)],\n  ])\n\nif test $octave_cv_gcc_has_pragma_GCC_diagnostic = yes; then\n  AC_DEFINE(HAVE_PRAGMA_GCC_DIAGNOSTIC, 1,\n   [define if GCC supports @%:@pragma GCC diagnostic ...])\nfi\n\n### Check for Java.\n\nbuild_java=yes\nAC_ARG_ENABLE([java],\n  [AS_HELP_STRING([--disable-java],\n    [disable Java interface])],\n  [if test \"$enableval\" = no; then\n     build_java=no\n   fi],\n  [])\n\nAC_ARG_WITH([java-homedir],\n  [AS_HELP_STRING([--with-java-homedir=DIR],\n    [Java JDK directory in DIR])],\n  [JAVA_HOMEDIR=\"$withval\"])\n\nAC_ARG_WITH([java-includedir],\n  [AS_HELP_STRING([--with-java-includedir=DIR],\n    [look for java include file <jni.h> in DIR])],\n  [JAVA_CPPFLAGS=\"$withval\"], [JAVA_CPPFLAGS=\"\"])\n\nAC_ARG_WITH([java-libdir],\n  [AS_HELP_STRING([--with-java-libdir=DIR],\n    [look for java library libjvm in DIR])],\n  [JAVA_LDPATH=\"$withval\"], [JAVA_LDPATH=\"\"])\n\n## Grab JAVA_HOME from environment variable if it exists\nAC_ARG_VAR([JAVA_HOME], [path to Java JDK installation])\n## But --with-java-homedir option overrides environment variable\nif test -n \"$JAVA_HOMEDIR\"; then\n  JAVA_HOME=$JAVA_HOMEDIR\nfi\nJAVA=\nJAVAC=\nJAR=\nJAVA_LIBS=\n\n## Fake loop so that \"break\" can be used to skip code blocks.\nwarn_java=\"\"\nwhile test $build_java = yes\ndo\n  ## Unset build_java.  Variable is set only if all configuration tests pass.\n  build_java=no\n\n  ## Warn if JAVA_HOME is unset.  It is *strongly* advised to specify JAVA_HOME.\n  if test -z \"$JAVA_HOME\"; then\n    warn_java_home=\"JAVA_HOME environment variable not initialized.  Auto-detection will proceed but is unreliable.\"\n    OCTAVE_CONFIGURE_WARNING([warn_java_home])\n  fi\n\n  ## Search for a viable Java executable.\n  if test -z \"$JAVA_HOME\"; then\n    JAVA_PATH=\"$PATH\"\n  else\n    JAVA_PATH=\"${JAVA_HOME}$PATH_SEPARATOR${JAVA_HOME}/jre/bin$PATH_SEPARATOR${JAVA_HOME}/bin$PATH_SEPARATOR${JAVA_HOME}/../bin$PATH_SEPARATOR${PATH}\"\n  fi\n  AC_PATH_PROG(JAVA, java, [], [$JAVA_PATH])\n\n  if test -z \"$JAVA\"; then\n    warn_java=\"No Java executable found.  Octave will not be able to call Java methods.\"\n    break\n  fi\n\n  if test -z \"$JAVA_HOME\"; then\n    ## Find JAVA_HOME for JRE by running java and querying properties.\n    JAVA_TMP_HOME=`\"$JAVA\" -classpath ${srcdir}/build-aux OctJavaQry JAVA_HOME`\n    ## Strip directory back to top-level installation dir (JAVA_HOME for JDK).\n    JAVA_HOME=`echo $JAVA_TMP_HOME | $SED -e 's|[[/\\\\]]bin[[/\\\\]]\\?$||' | $SED -e 's|[[/\\\\]]jre[[/\\\\]]\\?$||'`\n  fi\n\n  case $build_os in\n    mingw* | msdosmsvc)\n      ## Under Win32 platform, we want JAVA_HOME to be in MSYS format, that is\n      ## without colon and backslashes, as it is also used as path separator.\n      ## Use quoted paths as Java may be installed in a path with whitespaces\n      ## (e.g. C:\\Program Files\\Java\\...).\n      if test -n \"$JAVA_HOME\"; then\n        JAVA_HOME=`cd \"$JAVA_HOME\" && pwd`\n      fi\n    ;;\n  esac\n\n  ## Amend search path for JAVAC and JAR.\n  if test -z \"$JAVA_HOME\"; then\n    JAVA_PATH=\"$PATH\"\n  else\n    JAVA_PATH=\"${JAVA_HOME}$PATH_SEPARATOR${JAVA_HOME}/bin$PATH_SEPARATOR${JAVA_HOME}/../bin$PATH_SEPARATOR${PATH}\"\n  fi\n\n  AC_PATH_PROG(JAVAC, javac, [], [$JAVA_PATH])\n  AC_PATH_PROG(JAR, jar, [], [$JAVA_PATH])\n\n  if test -z \"$JAVAC\" || test -z \"$JAR\"; then\n    warn_java=\"No javac compiler or jar executable found.  Octave will not be able to call Java methods.\"\n    break\n  fi\n\n  ## Check Java version is recent enough.\n  AC_MSG_CHECKING([for Java version])\n  java_version=[`\"$JAVA\" -version 2>&1 | $SED -n -e 's/^[^ ]* version[^0-9\"]*\"\\([^\"]*\\)\"/\\1/p'`]\n  AC_MSG_RESULT([$java_version])\n  java_major=[`echo $java_version | $SED -e 's/^\\([0-9][0-9]*\\)\\.\\([0-9][0-9]*\\)\\..*$/\\1/'`]\n  java_minor=[`echo $java_version | $SED -e 's/^\\([0-9][0-9]*\\)\\.\\([0-9][0-9]*\\)\\..*$/\\2/'`]\n  if test $java_major -ge 1 && test $java_minor -ge 5; then\n    :  # Version is ok.  Do nothing.\n  else\n    warn_java=\"Java version is too old (< 1.5).  Octave will not be able to call Java methods.\"\n    break\n  fi\n\n  ## At this point Win32 systems have enough configuration data.\n  ## We assume that all appropriate variables (e.g. INCLUDE and LIB) already\n  ## contain the required paths to compile and link against JDK.\n  case $host_os in\n    msdosmsvc)\n      build_java=yes\n      JAVA_LIBS=-ladvapi32\n      AC_DEFINE(HAVE_JAVA, 1,\n        [Define to 1 if Java is available and is at least version 1.5])\n      break\n    ;;\n    mingw* | cygwin*)\n      build_java=yes\n      JAVA_LIBS=-ladvapi32\n      if test $have_msvc = no; then\n        if test -n \"$JAVA_CPPFLAGS\"; then\n          JAVA_CPPFLAGS=\"-I\\\"${JAVA_CPPFLAGS}\\\" -I\\\"${JAVA_CPPFLAGS}/win32\\\"\"\n        else\n          JAVA_CPPFLAGS=\"-I\\\"${JAVA_HOME}/include\\\" -I\\\"${JAVA_HOME}/include/win32\\\"\"\n        fi\n        LDFLAGS=\"$LDFLAGS -Wl,--export-all-symbols\"\n      fi\n      AC_DEFINE(HAVE_JAVA, 1,\n        [Define to 1 if Java is available and is at least version 1.5])\n      break\n    ;;\n  esac\n\n  ## Determine which library filename to search for.\n  case $host_os in\n    darwin*)\n      jvmlib=libjvm.dylib\n    ;;\n    *)\n      jvmlib=libjvm.so\n    ;;\n  esac\n\n  AC_MSG_CHECKING([for $jvmlib])\n\n  if test -z \"$JAVA_LDPATH\"; then\n    ## Run Java to try and determine library path to libjvm.so.\n    JAVA_TMP_LDPATH=`$JAVA -classpath ${srcdir}/build-aux OctJavaQry JAVA_LDPATH`\n    JAVA_TMP_LDPATH=`echo $JAVA_TMP_LDPATH | $SED -e \"s/${PATH_SEPARATOR}/ /g\"`\n    for dir in $JAVA_TMP_LDPATH; do\n      if test -f \"$dir/$jvmlib\"; then\n        JAVA_LDPATH=$dir\n        break\n      fi\n    done\n  fi\n\n  if test -z \"$JAVA_LDPATH\"; then\n    ## Nothing found.  Try Java again using bootpath argument.\n    JAVA_TMP_LDPATH=`$JAVA -classpath ${srcdir}/build-aux OctJavaQry JAVA_BOOTPATH`\n    JAVA_TMP_LDPATH=\"${JAVA_TMP_LDPATH} ${JAVA_TMP_LDPATH}/client ${JAVA_TMP_LDPATH}/server\"\n    for dir in $JAVA_TMP_LDPATH; do\n      if test -f \"$dir/$jvmlib\"; then\n        JAVA_LDPATH=$dir\n        break\n      fi\n    done\n  fi\n\n  if test -z \"$JAVA_LDPATH\"; then\n    ## Java failed to find it's own library path.  Guess wildly.\n    JAVA_TMP_LDPATH=`ls -d $JAVA_HOME/jre/lib/*/client`\n    JAVA_TMP_LDPATH=\"${JAVA_TMP_LDPATH} `ls -d $JAVA_HOME/jre/lib/*/server`\"\n    ## Add some paths that might work on Macs.\n    JAVA_TMP_LDPATH=\"${JAVA_TMP_LDPATH} ${JAVA_HOME}/../Libraries ${JAVA_HOME}/Libraries\"\n    ## Add some paths that might work on MinGW\n    JAVA_TMP_LDPATH=\"${JAVA_TMP_LDPATH} ${JAVA_HOME}/bin/client ${JAVA_HOME}/bin/server\"\n    for dir in $JAVA_TMP_LDPATH; do\n      if test -f \"$dir/$jvmlib\"; then\n        JAVA_LDPATH=$dir\n        break\n      fi\n    done\n  fi\n\n  ## Verify value passed in option --with-java-libdir\n  if test -n \"$JAVA_LDPATH\"; then\n    if test -f \"${JAVA_LDPATH}/$jvmlib\"; then\n      :  # libjvm found\n    else\n      JAVA_LDPATH=\"\"\n    fi\n  fi\n\n  if test -z \"$JAVA_LDPATH\"; then\n    AC_MSG_RESULT([not found])\n    warn_java=\"Library $jvmlib not found.  Octave will not be able to call Java methods.\"\n    break\n  else\n    AC_MSG_RESULT([$JAVA_LDPATH])\n  fi\n\n  AC_MSG_CHECKING([for include file <jni.h>])\n\n  ## Java and JVM found.  Set up flags.\n  case $host_os in\n    darwin*)\n      ## Sneak the -framework flag into mkoctfile via LDFLAGS\n      LDFLAGS=\"$LDFLAGS -framework JavaVM\"\n      ## According to: http://developer.apple.com/unix/crossplatform.html\n      ## one must explicitly set the include path.\n      ## Unfortunately, the include path keeps moving around.\n      if test -n \"$JAVA_CPPFLAGS\"; then\n        JAVA_CPPFLAGS=\"-I${JAVA_CPPFLAGS}\"\n      else\n        JAVA_CPPFLAGS=\"-I${JAVA_HOME}/include -I/System/Library/Frameworks/JavaVM.framework/Home/include -I/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Headers -I/System/Library/Frameworks/JavaVM.framework/Versions/Current/Headers\"\n      fi\n      JAVA_LIBS=\"-framework JavaVM\"\n    ;;\n    *)\n      if test -n \"$JAVA_CPPFLAGS\"; then\n        JAVA_CPPFLAGS=\"-I${JAVA_CPPFLAGS} -I${JAVA_CPPFLAGS}/linux\"\n      else\n        JAVA_CPPFLAGS=\"-I${JAVA_HOME}/include -I${JAVA_HOME}/include/linux\"\n      fi\n    ;;\n  esac\n\n  ## Verify jni.h include file exists.\n  JNI_PATH=`echo $JAVA_CPPFLAGS | $SED -e 's/-I//g'`\n  have_jni=no\n  for dir in $JNI_PATH; do\n    if test -f \"${dir}/jni.h\"; then have_jni=yes; break; fi\n  done\n  if test $have_jni = yes; then\n    AC_MSG_RESULT([$dir])\n  else\n    AC_MSG_RESULT([not found])\n    warn_java=\"Include file <jni.h> not found.  Octave will not be able to call Java methods.\"\n    break\n  fi\n\n  ## Passed all configuration tests.  A workable Java installation was found.\n  build_java=yes\n  AC_DEFINE(HAVE_JAVA, 1,\n    [Define to 1 if Java is available and is at least version 1.5])\n  break\ndone\nif test -n \"$warn_java\"; then\n  OCTAVE_CONFIGURE_WARNING([warn_java])\nfi\n\nAM_CONDITIONAL([AMCOND_HAVE_JAVA], [test $build_java = yes])\nAC_SUBST(JAVA)\nAC_SUBST(JAVAC)\nAC_SUBST(JAR)\nAC_SUBST(JAVA_CPPFLAGS)\nAC_SUBST(JAVA_LIBS)\nAC_DEFINE_UNQUOTED([JAVA_HOME], [\"$JAVA_HOME\"], [Java home (top-level installation dir)])\nAC_DEFINE_UNQUOTED([JAVA_LDPATH], [\"$JAVA_LDPATH\"], [Java library path (libjvm)])\n\n## Collections of flags.  These are here instead of just in the\n## Makefile.am file because we substitute some of them into other\n## source files like mkoctfile.\n\n## Order matters, at least on some systems (Cygwin, for example).\n\nFFTW_XCPPFLAGS=\"$FFTW3_CPPFLAGS $FFTW3F_CPPFLAGS\"\n\nFFTW_XLDFLAGS=\"$FFTW3_LDFLAGS $FFTW3F_LDFLAGS\"\n\nFFTW_XLIBS=\"$FFTW3_LIBS $FFTW3F_LIBS\"\n\nSPARSE_XCPPFLAGS=\"$CHOLMOD_CPPFLAGS $UMFPACK_CPPFLAGS $AMD_CPPFLAGS $CAMD_CPPFLAGS $COLAMD_CPPFLAGS $CCOLAMD_CPPFLAGS $CXSPARSE_CPPFLAGS\"\n\nSPARSE_XLDFLAGS=\"$CHOLMOD_LDFLAGS $UMFPACK_LDFLAGS $AMD_LDFLAGS $CAMD_LDFLAGS $COLAMD_LDFLAGS  $CCOLAMD_LDFLAGS $CXSPARSE_LDFLAGS\"\n\nSPARSE_XLIBS=\"$CHOLMOD_LIBS $UMFPACK_LIBS $AMD_LIBS $CAMD_LIBS $COLAMD_LIBS $CCOLAMD_LIBS $CXSPARSE_LIBS $SUITESPARSE_CONFIG_LIBS\"\n\nAC_SUBST(FFTW_XCPPFLAGS)\nAC_SUBST(FFTW_XLDFLAGS)\nAC_SUBST(FFTW_XLIBS)\n\nAC_SUBST(SPARSE_XCPPFLAGS)\nAC_SUBST(SPARSE_XLDFLAGS)\nAC_SUBST(SPARSE_XLIBS)\n\nGNULIB_LINK_DEPS=\"$COPYSIGNF_LIBM $COPYSIGN_LIBM $FLOORF_LIBM $FLOOR_LIBM $GETHOSTNAME_LIB $LIBSOCKET $LIB_NANOSLEEP $LIB_SELECT $LTLIBINTL $ROUNDF_LIBM $ROUND_LIBM $TRUNCF_LIBM $TRUNC_LIBM\"\n\nAC_SUBST(GNULIB_LINK_DEPS)\n\nLIBOCTAVE_LINK_DEPS=\"$GNULIB_LINK_DEPS $CURL_LIBS $SPARSE_XLIBS $ARPACK_LIBS $QRUPDATE_LIBS $FFTW_XLIBS $LAPACK_LIBS $BLAS_LIBS $READLINE_LIBS $TERM_LIBS $LIBGLOB $PCRE_LIBS $DL_LIBS $PTHREAD_LIBS $FLIBS $LIBS\"\n\nLIBOCTAVE_LINK_OPTS=\"$CURL_LDFLAGS $SPARSE_XLDFLAGS $ARPACK_LDFLAGS $QRUPDATE_LDFLAGS $FFTW_XLDFLAGS\"\n\nAC_SUBST(LIBOCTAVE_LINK_DEPS)\nAC_SUBST(LIBOCTAVE_LINK_OPTS)\n\nif test $ENABLE_DYNAMIC_LINKING = yes; then\n  LIBOCTINTERP_LINK_DEPS=\"\"\nelse\n  LIBOCTINTERP_LINK_DEPS=\"$DLDFCN_LIBS\"\nfi\n\nLIBOCTINTERP_LINK_DEPS=\"$LIBOCTINTERP_LINK_DEPS $FT2_LIBS $HDF5_LIBS $MAGICK_LIBS $Z_LIBS $FFTW_XLIBS $OPENGL_LIBS $FONTCONFIG_LIBS $FREETYPE_LIBS $X11_LIBS $CARBON_LIBS $GL2PS_LIBS $LLVM_LIBS $JAVA_LIBS $LAPACK_LIBS\"\n\nLIBOCTINTERP_LINK_OPTS=\"$FT2_LDFLAGS $HDF5_LDFLAGS $MAGICK_LDFLAGS $Z_LDFLAGS $FFTW_XLDFLAGS $LLVM_LDFLAGS\"\n\nOCTAVE_LINK_DEPS=\"\"\nOCTAVE_LINK_OPTS=\"\"\n\nOCT_LINK_DEPS=\"\"\nOCT_LINK_OPTS=\"$LDFLAGS\"\n\nif test $link_all_deps = yes || test -n \"$QT_LDFLAGS\"; then\n  LIBOCTINTERP_LINK_DEPS=\"$LIBOCTINTERP_LINK_DEPS $LIBOCTAVE_LINK_DEPS\"\n  LIBOCTINTERP_LINK_OPTS=\"$LIBOCTINTERP_LINK_OPTS $LIBOCTAVE_LINK_OPTS\"\n\n  OCTAVE_LINK_DEPS=\"$LIBOCTINTERP_LINK_DEPS\"\n  OCTAVE_LINK_OPTS=\"$LIBOCTINTERP_LINK_OPTS\"\n\n  OCT_LINK_DEPS=\"$OCT_LINK_DEPS $LIBOCTINTERP_LINK_DEPS\"\n  OCT_LINK_OPTS=\"$OCT_LINK_OPTS $LIBOCTINTERP_LINK_OPTS\"\nfi\n\nAC_SUBST(LIBOCTINTERP_LINK_DEPS)\nAC_SUBST(LIBOCTINTERP_LINK_OPTS)\n\nAC_SUBST(OCTAVE_LINK_DEPS)\nAC_SUBST(OCTAVE_LINK_OPTS)\n\nAC_SUBST(OCT_LINK_DEPS)\nAC_SUBST(OCT_LINK_OPTS)\n\nLIBOCTGUI_LINK_DEPS=\"\"\nLIBOCTGUI_LINK_OPTS=\"\"\n\nOCTAVE_GUI_LINK_DEPS=\"\"\nOCTAVE_GUI_LINK_OPTS=\"\"\n\nif test $build_qt_gui = yes; then\n  if test $ENABLE_DYNAMIC_LINKING = yes; then\n    LIBOCTGUI_LINK_DEPS=\"\"\n  else\n    LIBOCTGUI_LINK_DEPS=\"$DLDFCN_LIBS\"\n  fi\n\n  LIBOCTGUI_LINK_DEPS=\"$LIBOCTGUI_LINK_DEPS $QT_LIBS $OPENGL_LIBS\"\n  LIBOCTGUI_LINK_OPTS=\"$QT_LDFLAGS\"\n\n  if test $link_all_deps = yes || test -n \"$QT_LDFLAGS\"; then\n    LIBOCTGUI_LINK_DEPS=\"$LIBOCTGUI_LINK_DEPS $LIBOCTINTERP_LINK_DEPS\"\n    LIBOCTGUI_LINK_OPTS=\"$LIBOCTGUI_LINK_OPTS $LIBOCTINTERP_LINK_OPTS\"\n\n    OCTAVE_GUI_LINK_DEPS=\"$OCTAVE_GUI_LINK_DEPS $LIBOCTGUI_LINK_DEPS\"\n    OCTAVE_GUI_LINK_OPTS=\"$OCTAVE_GUI_LINK_OPTS $LIBOCTGUI_LINK_OPTS\"\n  fi\nfi\n\nAC_SUBST(LIBOCTGUI_LINK_DEPS)\nAC_SUBST(LIBOCTGUI_LINK_OPTS)\n\nAC_SUBST(OCTAVE_GUI_LINK_DEPS)\nAC_SUBST(OCTAVE_GUI_LINK_OPTS)\n\n### Do we want to create cross-mkoctfile etc ?\n\ncross_tools=no\nAC_ARG_ENABLE([cross-tools],\n  [AS_HELP_STRING([--enable-cross-tools],\n    [build cross tools (mkoctfile, octave-config) if cross compiling])],\n  [if test \"$enableval\" = yes; then cross_tools=yes; fi])\n\nif test \"$cross_tools\" = yes; then\n  if test \"$cross_compiling\" = no; then\n    AC_MSG_WARN([ignoring --enable-cross-tools when not cross compiling])\n    cross_tools=no\n  fi\nfi\nAM_CONDITIONAL([AMCOND_CROSS_TOOLS], [test $cross_tools = yes])\n\n### Decide whether or not to install build logs with Octave.\n\ninstall_build_logs=no\nAC_ARG_ENABLE([install-build-logs],\n  [AS_HELP_STRING([--enable-install-build-logs],\n    [install build logs (i.e. config.log) with Octave])],\n  [if test \"$enableval\" = yes; then install_build_logs=yes; fi])\nAM_CONDITIONAL([AMCOND_INSTALL_BUILD_LOGS], [test $install_build_logs = yes])\n\nCFLAGS=\"$original_octave_configure_CFLAGS\"\nCXXFLAGS=\"$original_octave_configure_CXXFLAGS\"\n\nAH_BOTTOM([#include \"oct-conf-post.h\"])\n\n### Make all AC_DEFINES available to testif feature of test.m function.\n### This must reside at the bottom of configure.ac after all AC_DEFINES\n### have been made.\n\nAC_OUTPUT_MAKE_DEFS\n\nAC_CONFIG_COMMANDS_PRE([\n  ## Fully expand all directory variables.  These are normally left\n  ## unexpanded (as explained and recommended by the autoconf manual).\n  ## But we store coniguration info in files and expect whatever\n  ## is set at configure time stay the same when Make is executed.\n  ## Doing things like\n  ##\n  ##   configure --prefix=/some/where\n  ##   make --prefix=\"/some/where/else\n  ##\n  ## won't work properly and is not allowed when building Octave.\n\n  eval prefix=\"\\\"$prefix\\\"\"\n  eval exec_prefix=\"\\\"$exec_prefix\\\"\"\n  eval bindir=\"\\\"$bindir\\\"\"\n  eval sbindir=\"\\\"$sbindir\\\"\"\n  eval libexecdir=\"\\\"$libexecdir\\\"\"\n  eval datarootdir=\"\\\"$datarootdir\\\"\"\n  eval datadir=\"\\\"$datadir\\\"\"\n  eval sysconfdir=\"\\\"$sysconfdir\\\"\"\n  eval sharedstatedir=\"\\\"$sharedstatedir\\\"\"\n  eval localstatedir=\"\\\"$localstatedir\\\"\"\n  eval runstatedir=\"\\\"$runstatedir\\\"\"\n  eval includedir=\"\\\"$includedir\\\"\"\n  eval oldincludedir=\"\\\"$oldincludedir\\\"\"\n  eval docdir=\"\\\"$docdir\\\"\"\n  eval infodir=\"\\\"$infodir\\\"\"\n  eval htmldir=\"\\\"$htmldir\\\"\"\n  eval dvidir=\"\\\"$dvidir\\\"\"\n  eval pdfdir=\"\\\"$pdfdir\\\"\"\n  eval psdir=\"\\\"$psdir\\\"\"\n  eval libdir=\"\\\"$libdir\\\"\"\n  eval localedir=\"\\\"$localedir\\\"\"\n  eval mandir=\"\\\"$mandir\\\"\"\n\n  version=\"$OCTAVE_VERSION\"\n  api_version=\"$OCTAVE_API_VERSION\"\n\n  eval octlibdir=\"\\\"$octlibdir\\\"\"\n  eval archlibdir=\"\\\"$archlibdir\\\"\"\n  eval localarchlibdir=\"\\\"$localarchlibdir\\\"\"\n  eval localapiarchlibdir=\"\\\"$localapiarchlibdir\\\"\"\n  eval localverarchlibdir=\"\\\"$localverarchlibdir\\\"\"\n  eval octfiledir=\"\\\"$octfiledir\\\"\"\n  eval localoctfiledir=\"\\\"$localoctfiledir\\\"\"\n  eval localapioctfiledir=\"\\\"$localapioctfiledir\\\"\"\n  eval localveroctfiledir=\"\\\"$localveroctfiledir\\\"\"\n  eval octincludedir=\"\\\"$octincludedir\\\"\"\n  eval fcnfiledir=\"\\\"$fcnfiledir\\\"\"\n  eval localfcnfiledir=\"\\\"$localfcnfiledir\\\"\"\n  eval localapifcnfiledir=\"\\\"$localapifcnfiledir\\\"\"\n  eval localverfcnfiledir=\"\\\"$localverfcnfiledir\\\"\"\n  eval octetcdir=\"\\\"$octetcdir\\\"\"\n  eval octlocaledir=\"\\\"$octlocaledir\\\"\"\n  eval doc_cache_file=\"\\\"$doc_cache_file\\\"\"\n  eval octtestsdir=\"\\\"$octtestsdir\\\"\"\n  eval texi_macros_file=\"\\\"$texi_macros_file\\\"\"\n  eval imagedir=\"\\\"$imagedir\\\"\"\n  eval octdatadir=\"\\\"$octdatadir\\\"\"\n  eval startupfiledir=\"\\\"$startupfiledir\\\"\"\n  eval localstartupfiledir=\"\\\"$localstartupfiledir\\\"\"\n  eval man1dir=\"\\\"$man1dir\\\"\"\n  eval man1ext=\"\\\"$man1ext\\\"\"\n  eval infofile=\"\\\"$infofile\\\"\"\n\n  ## Also expand MKOCTFILE_DL_LDFLAGS, because it may depend on the values\n  ## of variables expanded above.\n\n  eval MKOCTFILE_DL_LDFLAGS=\"\\\"$MKOCTFILE_DL_LDFLAGS\\\"\"\n])\n\n### Do the substitutions in Makefiles and other scripts that\n### hold configuration info.\n\nAUTOCONF_SUBST_VARS=\"`echo $ac_subst_vars`\"\n\nAC_SUBST(AUTOCONF_SUBST_VARS)\nAC_SUBST(ac_config_files)\nAC_SUBST(ac_config_headers)\n\nAC_CONFIG_FILES([\n  Makefile\n  build-aux/check-subst-vars.sh:build-aux/check-subst-vars.in.sh\n  doc/doxyhtml/Doxyfile\n  libgnu/Makefile])\n\ndnl We use a .in.h file for oct-conf-post.h simply to copy it to\ndnl the build tree and so that we don't have to add the -I${top_srcdir}\ndnl to any CPPFLAGS variables.\n\nAC_CONFIG_FILES([oct-conf-post.h-tmp:oct-conf-post.in.h])\nAC_CONFIG_COMMANDS([oct-conf-post.h],\n  [$SHELL $srcdir/build-aux/move-if-change oct-conf-post.h-tmp oct-conf-post.h])\n\nOCTAVE_CONFIG_MOVE_IF_CHANGE_FILES([\n  build-aux/mk-default-qt-settings.sh\n  build-aux/mk-f77-def.sh\n  build-aux/mk-mxarray-h.sh\n  build-aux/mk-version-h.sh\n  build-aux/subst-config-vals.sh\n  build-aux/subst-cross-config-vals.sh\n  build-aux/subst-default-vals.sh\n  build-aux/subst-f77-isnan-macro.sh\n  build-aux/subst-script-vals.sh])\n\nAC_OUTPUT\n\n### Print a summary so that important information isn't missed.\n\nAC_MSG_NOTICE([\n\nOctave is now configured for $canonical_host_type\n\n  Source directory:              $srcdir\n  Installation prefix:           $prefix\n  C compiler:                    $CC $XTRA_CFLAGS $WARN_CFLAGS $CFLAGS\n  C++ compiler:                  $CXX $XTRA_CXXFLAGS $WARN_CXXFLAGS $CXXFLAGS\n  Fortran compiler:              $F77 $FFLAGS\n  Fortran libraries:             $FLIBS\n  Lex libraries:                 $LEXLIB\n  LIBS:                          $LIBS\n  Extra LDFLAGS:                 $WARN_LDFLAGS\n\n  AMD CPPFLAGS:                  $AMD_CPPFLAGS\n  AMD LDFLAGS:                   $AMD_LDFLAGS\n  AMD libraries:                 $AMD_LIBS\n  ARPACK CPPFLAGS:               $ARPACK_CPPFLAGS\n  ARPACK LDFLAGS:                $ARPACK_LDFLAGS\n  ARPACK libraries:              $ARPACK_LIBS\n  BLAS libraries:                $BLAS_LIBS\n  BZ2 CPPFLAGS:                  $BZ2_CPPFLAGS\n  BZ2 LDFLAGS:                   $BZ2_LDFLAGS\n  BZ2 libraries:                 $BZ2_LIBS\n  CAMD CPPFLAGS:                 $CAMD_CPPFLAGS\n  CAMD LDFLAGS:                  $CAMD_LDFLAGS\n  CAMD libraries:                $CAMD_LIBS\n  CARBON libraries:              $CARBON_LIBS\n  CCOLAMD CPPFLAGS:              $CCOLAMD_CPPFLAGS\n  CCOLAMD LDFLAGS:               $CCOLAMD_LDFLAGS\n  CCOLAMD libraries:             $CCOLAMD_LIBS\n  CHOLMOD CPPFLAGS:              $CHOLMOD_CPPFLAGS\n  CHOLMOD LDFLAGS:               $CHOLMOD_LDFLAGS\n  CHOLMOD libraries:             $CHOLMOD_LIBS\n  COLAMD CPPFLAGS:               $COLAMD_CPPFLAGS\n  COLAMD LDFLAGS:                $COLAMD_LDFLAGS\n  COLAMD libraries:              $COLAMD_LIBS\n  CURL CPPFLAGS:                 $CURL_CPPFLAGS\n  CURL LDFLAGS:                  $CURL_LDFLAGS\n  CURL libraries:                $CURL_LIBS\n  CXSPARSE CPPFLAGS:             $CXSPARSE_CPPFLAGS\n  CXSPARSE LDFLAGS:              $CXSPARSE_LDFLAGS\n  CXSPARSE libraries:            $CXSPARSE_LIBS\n  DL libraries:                  $DL_LIBS\n  FFTW3 CPPFLAGS:                $FFTW3_CPPFLAGS\n  FFTW3 LDFLAGS:                 $FFTW3_LDFLAGS\n  FFTW3 libraries:               $FFTW3_LIBS\n  FFTW3F CPPFLAGS:               $FFTW3F_CPPFLAGS\n  FFTW3F LDFLAGS:                $FFTW3F_LDFLAGS\n  FFTW3F libraries:              $FFTW3F_LIBS\n  FLTK CPPFLAGS:                 $FLTK_CPPFLAGS\n  FLTK LDFLAGS:                  $FLTK_LDFLAGS\n  FLTK libraries:                $FLTK_LIBS\n  fontconfig CPPFLAGS:           $FONTCONFIG_CPPFLAGS\n  fontconfig libraries:          $FONTCONFIG_LIBS\n  FreeType2 CPPFLAGS:            $FT2_CPPFLAGS\n  FreeType2 libraries:           $FT2_LIBS\n  GLPK CPPFLAGS:                 $GLPK_CPPFLAGS\n  GLPK LDFLAGS:                  $GLPK_LDFLAGS\n  GLPK libraries:                $GLPK_LIBS\n  HDF5 CPPFLAGS:                 $HDF5_CPPFLAGS\n  HDF5 LDFLAGS:                  $HDF5_LDFLAGS\n  HDF5 libraries:                $HDF5_LIBS\n  Java home:                     $JAVA_HOME\n  Java JVM path:                 $JAVA_LDPATH\n  Java CPPFLAGS:                 $JAVA_CPPFLAGS\n  Java libraries:                $JAVA_LIBS\n  LAPACK libraries:              $LAPACK_LIBS\n  LLVM CPPFLAGS:                 $LLVM_CPPFLAGS\n  LLVM LDFLAGS:                  $LLVM_LDFLAGS\n  LLVM libraries:                $LLVM_LIBS\n  Magick++ CPPFLAGS:             $MAGICK_CPPFLAGS\n  Magick++ LDFLAGS:              $MAGICK_LDFLAGS\n  Magick++ libraries:            $MAGICK_LIBS\n  OPENGL libraries:              $OPENGL_LIBS\n  OSMesa CPPFLAGS:               $OSMESA_CPPFLAGS\n  OSMesa LDFLAGS:                $OSMESA_LDFLAGS\n  OSMesa libraries:              $OSMESA_LIBS\n  PCRE CPPFLAGS:                 $PCRE_CPPFLAGS\n  PCRE libraries:                $PCRE_LIBS\n  PortAudio CPPFLAGS:            $PORTAUDIO_CPPFLAGS\n  PortAudio LDFLAGS:             $PORTAUDIO_LDFLAGS\n  PortAudio libraries:           $PORTAUDIO_LIBS\n  PTHREAD flags:                 $PTHREAD_CFLAGS\n  PTHREAD libraries:             $PTHREAD_LIBS\n  QHULL CPPFLAGS:                $QHULL_CPPFLAGS\n  QHULL LDFLAGS:                 $QHULL_LDFLAGS\n  QHULL libraries:               $QHULL_LIBS\n  QRUPDATE CPPFLAGS:             $QRUPDATE_CPPFLAGS\n  QRUPDATE LDFLAGS:              $QRUPDATE_LDFLAGS\n  QRUPDATE libraries:            $QRUPDATE_LIBS\n  Qt CPPFLAGS:                   $QT_CPPFLAGS\n  Qt LDFLAGS:                    $QT_LDFLAGS\n  Qt libraries:                  $QT_LIBS\n  Qt moc:                        $MOC $MOCFLAGS\n  Qt uic:                        $UIC $UICFLAGS\n  Qt rcc:                        $RCC $RCCFLAGS\n  Qt lrelease:                   $LRELEASE $LRELEASEFLAGS\n  READLINE libraries:            $READLINE_LIBS\n  Sndfile CPPFLAGS:              $SNDFILE_CPPFLAGS\n  Sndfile LDFLAGS:               $SNDFILE_LDFLAGS\n  Sndfile libraries:             $SNDFILE_LIBS\n  SuiteSparse config libraries:  $SUITESPARSE_CONFIG_LIBS\n  TERM libraries:                $TERM_LIBS\n  UMFPACK CPPFLAGS:              $UMFPACK_CPPFLAGS\n  UMFPACK LDFLAGS:               $UMFPACK_LDFLAGS\n  UMFPACK libraries:             $UMFPACK_LIBS\n  X11 include flags:             $X11_INCFLAGS\n  X11 libraries:                 $X11_LIBS\n  Z CPPFLAGS:                    $Z_CPPFLAGS\n  Z LDFLAGS:                     $Z_LDFLAGS\n  Z libraries:                   $Z_LIBS\n\n  Default pager:                 $DEFAULT_PAGER\n  gnuplot:                       $GNUPLOT\n\n  Build Octave Qt GUI:                $build_qt_gui\n  JIT compiler for loops:             $ENABLE_JIT\n  Build Java interface:               $build_java\n  Do internal array bounds checking:  $ENABLE_BOUNDS_CHECK\n  Build static libraries:             $STATIC_LIBS\n  Build shared libraries:             $SHARED_LIBS\n  Dynamic Linking:                    $ENABLE_DYNAMIC_LINKING $DL_API_MSG\n  Include support for GNU readline:   $USE_READLINE\n  64-bit array dims and indexing:     $ENABLE_64\n  OpenMP SMP multithreading:          $ENABLE_OPENMP\n  Build cross tools:                  $cross_tools\n  Build docs:                         $ENABLE_DOCS\n  Truncate intermediate FP results:   $ENABLE_FLOAT_TRUNCATE\n])\n\nwarn_msg_printed=false\n\nOCTAVE_CONFIGURE_WARNING_SUMMARY\n\nif test $ENABLE_DYNAMIC_LINKING = yes; then\n  if test $SHARED_LIBS = no; then\n    AC_MSG_WARN([])\n    AC_MSG_WARN([You used --enable-dl but not --enable-shared.])\n    AC_MSG_WARN([Are you sure that is what you want to do?])\n    warn_msg_printed=true\n  fi\nfi\n\nif test $ENABLE_64 = yes; then\n  AC_MSG_WARN([])\n  AC_MSG_WARN([You used the EXPERIMENTAL --enable-64 option.])\n  AC_MSG_WARN([Are you sure that is what you want to do?])\n  AC_MSG_WARN([])\n  AC_MSG_WARN([Your Fortran compiler must have an option to generate])\n  AC_MSG_WARN([code with 8 byte signed INTEGER values.  This option])\n  AC_MSG_WARN([should be specified in the F77_INTEGER_8_FLAG variable])\n  AC_MSG_WARN([Make.  This should work automatically for gfortran.  If])\n  AC_MSG_WARN([you use another compiler, you will need to set this])\n  AC_MSG_WARN([variable on the configure command line.  You must also])\n  AC_MSG_WARN([compile the ARPACK, BLAS, LAPACK, QRUPDATE, and SuiteSparse])\n  AC_MSG_WARN([libraries to use 8 byte signed integers for array indexing.])\n  warn_msg_printed=true\nfi\n\nif test $opengl_graphics = no; then\n  AC_MSG_WARN([])\n  AC_MSG_WARN([I didn't find the libraries needed to compile Octave])\n  AC_MSG_WARN([with support for OpenGL graphics.  Creating plots is])\n  AC_MSG_WARN([still possible if you have gnuplot installed.])\n  warn_msg_printed=true\nfi\n\nif test $ENABLE_ATOMIC_REFCOUNT = no; then\n  AC_MSG_WARN([])\n  AC_MSG_WARN([atomic reference counting disabled.])\n  AC_MSG_WARN([This feature allows access to Octave data safely from])\n  AC_MSG_WARN([another thread, and is required when using the GUI's Qt toolkit])\n  AC_MSG_WARN([for plotting.])\nfi\n\nif $warn_msg_printed; then\n  AC_MSG_NOTICE([])\n  AC_MSG_NOTICE([NOTE: Libraries or auxiliary programs may be skipped if they are])\n  AC_MSG_NOTICE([NOTE: not found OR if they are missing required features on your])\n  AC_MSG_NOTICE([NOTE: system. ])\nfi\n\n### End of configure.\n",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/INSTALL.OCTAVE": "This file documents the installation of Octave.\n\n   Octave is free software; you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation.\n\n   *Note*: This file is automatically generated from\n'doc/interpreter/install.txi' in the Octave sources.  To update the\ndocumentation make changes to the .txi source file rather than this\nderived file.\n\n1 Installing Octave\n*******************\n\nThe procedure for installing Octave from source on a Unix-like system is\ndescribed next.  Building on other platforms will follow similar steps.\nNote that this description applies to Octave releases.  Building the\ndevelopment sources from the Mercurial archive requires additional steps\nas described in the development source itself.\n\n1.1 Build Dependencies\n======================\n\nOctave is a fairly large program with many build dependencies.  You may\nbe able to find pre-packaged versions of the dependencies distributed as\npart of your system, or you may have to build some or all of them\nyourself.\n\n1.1.1 Obtaining the Dependencies Automatically\n----------------------------------------------\n\nOn some systems you can obtain many of Octave's build dependencies\nautomatically.  The commands for doing this vary by system.  Similarly,\nthe names of pre-compiled packages vary by system and do not always\nmatch exactly the names listed in *note Build Tools:: and *note External\nPackages::.\n\n   You will usually need the development version of an external\ndependency so that you get the libraries and header files for building\nsoftware, not just for running already compiled programs.  These\npackages typically have names that end with the suffix '-dev' or\n'-devel'.\n\n   On systems with 'apt-get' (Debian, Ubuntu, etc.), you may be able to\ninstall most of the tools and external packages using a command similar\nto\n\n     apt-get build-dep octave\n\nThe specific package name may be 'octave3.2' or 'octave3.4'.  The set of\nrequired tools and external dependencies does not change frequently, so\nit is not important that the version match exactly, but you should use\nthe most recent one available.\n\n   On systems with 'yum' (Fedora, Red Hat, etc.), you may be able to\ninstall most of the tools and external packages using a command similar\nto\n\n     yum-builddep octave\n\nThe 'yum-builddep' utility is part of the 'yum-utils' package.\n\n   For either type of system, the package name may include a version\nnumber.  The set of required tools and external dependencies does not\nchange frequently, so it is not important that the version exactly match\nthe version you are installing, but you should use the most recent one\navailable.\n\n1.1.2 Build Tools\n-----------------\n\nThe following tools are required:\n\nC++, C, and Fortran compilers\n     The Octave sources are primarily written in C++, but some portions\n     are also written in C and Fortran.  The Octave sources are intended\n     to be portable.  Recent versions of the GNU compiler collection\n     (GCC) should work (<http://gcc.gnu.org>).  If you use GCC, you\n     should avoid mixing versions.  For example, be sure that you are\n     not using the obsolete 'g77' Fortran compiler with modern versions\n     of 'gcc' and 'g++'.\n\nGNU Make\n     Tool for building software (<http://www.gnu.org/software/make>).\n     Octave's build system requires GNU Make.  Other versions of Make\n     will not work.  Fortunately, GNU Make is highly portable and easy\n     to install.\n\nAWK, sed, and other Unix utilities\n     Basic Unix system utilities are required for building Octave.  All\n     will be available with any modern Unix system and also on Windows\n     with either Cygwin or MinGW and MSYS.\n\n   Additionally, the following tools may be needed:\n\nBison\n     Parser generator (<http://www.gnu.org/software/bison>).  You will\n     need Bison if you modify the 'oct-parse.yy' source file or if you\n     delete the files that are generated from it.\n\nFlex\n     Lexer analyzer (<http://www.gnu.org/software/flex>).  You will need\n     Flex if you modify the 'lex.ll' source file or if you delete the\n     files that are generated from it.\n\nAutoconf\n     Package for software configuration\n     (<http://www.gnu.org/software/autoconf>).  Autoconf is required if\n     you modify Octave's 'configure.ac' file or other files that it\n     requires.\n\nAutomake\n     Package for Makefile generation\n     (<http://www.gnu.org/software/automake>).  Automake is required if\n     you modify Octave's 'Makefile.am' files or other files that they\n     depend on.\n\nLibtool\n     Package for building software libraries\n     (<http://www.gnu.org/software/libtool>).  Libtool is required by\n     Automake.\n\ngperf\n     Perfect hash function generator\n     (<http://www.gnu.org/software/gperf>).  You will need gperf if you\n     modify the 'octave.gperf' file or if you delete the file that is\n     generated from it.\n\nTexinfo\n     Package for generating online and print documentation\n     (<http://www.gnu.org/software/texinfo>).  You will need Texinfo to\n     build Octave's documentation or if you modify the documentation\n     source files or the docstring of any Octave function.\n\n1.1.3 External Packages\n-----------------------\n\nThe following external packages are required:\n\nBLAS\n     Basic Linear Algebra Subroutine library.  Accelerated BLAS\n     libraries such as OpenBLAS (<http://www.openblas.net/>) or ATLAS\n     (<http://math-atlas.sourceforge.net>) are recommended for best\n     performance.  The reference implementation\n     (<http://www.netlib.org/blas>) is slow, unmaintained, and suffers\n     from certain bugs in corner case inputs.\n\nLAPACK\n     Linear Algebra Package (<http://www.netlib.org/lapack>).\n\nPCRE\n     The Perl Compatible Regular Expression library\n     (<http://www.pcre.org>).\n\n   The following external package is optional but strongly recommended:\n\nGNU Readline\n     Command-line editing library (<www.gnu.org/s/readline>).\n\n   If you wish to build Octave without GNU readline installed, you must\nuse the '--disable-readline' option when running the configure script.\n\n   The following external software packages are optional but\nrecommended:\n\nARPACK\n     Library for the solution of large-scale eigenvalue problems\n     (<http://forge.scilab.org/index.php/p/arpack-ng>).  ARPACK is\n     required to provide the functions 'eigs' and 'svds'.\n\ncURL\n     Library for transferring data with URL syntax\n     (<http://curl.haxx.se>).  cURL is required to provide the 'urlread'\n     and 'urlwrite' functions and the 'ftp' class.\n\nFFTW3\n     Library for computing discrete Fourier transforms\n     (<http://www.fftw.org>).  FFTW3 is used to provide better\n     performance for functions that compute discrete Fourier transforms\n     ('fft', 'ifft', 'fft2', etc.)\n\nFLTK\n     Portable GUI toolkit (<http://www.fltk.org>).  FLTK is currently\n     used to provide windows for Octave's OpenGL-based graphics\n     functions.\n\nfontconfig\n     Library for configuring and customizing font access\n     (<http://www.freedesktop.org/wiki/Software/fontconfig>).\n     Fontconfig is used to manage fonts for Octave's OpenGL-based\n     graphics functions.\n\nFreeType\n     Portable font engine (<http://www.freetype.org>).  FreeType is used\n     to perform font rendering for Octave's OpenGL-based graphics\n     functions.\n\nGLPK\n     GNU Linear Programming Kit (<http://www.gnu.org/software/glpk>).\n     GPLK is required for the function 'glpk'.\n\ngl2ps\n     OpenGL to PostScript printing library\n     (<http://www.geuz.org/gl2ps/>).  gl2ps is required for printing\n     when using OpenGL-based graphics toolkits (currently either FLTK or\n     Qt).\n\ngnuplot\n     Interactive graphics program (<http://www.gnuplot.info>).  gnuplot\n     is currently the default graphics renderer for Octave.\n\nGraphicsMagick++\n     Image processing library (<http://www.graphicsmagick.org>).\n     GraphicsMagick++ is used to provide the 'imread' and 'imwrite'\n     functions.\n\nHDF5\n     Library for manipulating portable data files\n     (<http://www.hdfgroup.org/HDF5>).  HDF5 is required for Octave's\n     'load' and 'save' commands to read and write HDF data files.\n\nJava Development Kit\n     Java programming language compiler and libraries.  The OpenJDK free\n     software implementation is recommended\n     (<http://openjdk.java.net/>), although other JDK implementations\n     may work.  Java is required to be able to call Java functions from\n     within Octave.\n\nLLVM\n     Compiler framework, (<http://www.llvm.org>).  LLVM is required for\n     Octave's experimental just-in-time (JIT) compilation for speeding\n     up the interpreter.\n\nOpenGL\n     API for portable 2-D and 3-D graphics (<http://www.opengl.org>).\n     An OpenGL implementation is required to provide Octave's\n     OpenGL-based graphics functions.  Octave's OpenGL-based graphics\n     functions usually outperform the gnuplot-based graphics functions\n     because plot data can be rendered directly instead of sending data\n     and commands to gnuplot for interpretation and rendering.\n\nQhull\n     Computational geometry library (<http://www.qhull.org>).  Qhull is\n     required to provide the functions 'convhull', 'convhulln',\n     'delaunay', 'delaunayn', 'voronoi', and 'voronoin'.\n\nQRUPDATE\n     QR factorization updating library\n     (<http://sourceforge.net/projects/qrupdate>).  QRUPDATE is used to\n     provide improved performance for the functions 'qrdelete',\n     'qrinsert', 'qrshift', and 'qrupdate'.\n\nQScintilla\n     Source code highlighter and manipulator; a Qt port of Scintilla\n     (<http://www.riverbankcomputing.co.uk/software/qscintilla>).\n     QScintilla is used for syntax highlighting and code completion in\n     the GUI.\n\nQt\n     GUI and utility libraries ().  Qt is required for building the GUI.\n     It is a large framework, but the only components required are the\n     GUI, core, and network modules.\n\nSuiteSparse\n     Sparse matrix factorization library\n     (<http://www.cise.ufl.edu/research/sparse/SuiteSparse>).\n     SuiteSparse is required to provide sparse matrix factorizations and\n     solution of linear equations for sparse systems.\n\nzlib\n     Data compression library (<http://zlib.net>).  The zlib library is\n     required for Octave's 'load' and 'save' commands to handle\n     compressed data, including MATLAB v5 MAT files.\n\n1.2 Running Configure and Make\n==============================\n\n   * Run the shell script 'configure'.  This will determine the features\n     your system has (or doesn't have) and create a file named\n     'Makefile' from each of the files named 'Makefile.in'.\n\n     Here is a summary of the configure options that are most frequently\n     used when building Octave:\n\n     '--help'\n          Print a summary of the options recognized by the configure\n          script.\n\n     '--prefix=PREFIX'\n          Install Octave in subdirectories below PREFIX.  The default\n          value of PREFIX is '/usr/local'.\n\n     '--srcdir=DIR'\n          Look for Octave sources in the directory DIR.\n\n     '--enable-64'\n          This is an *experimental* option to enable Octave to use\n          64-bit integers for array dimensions and indexing on 64-bit\n          platforms.  You probably don't want to use this option unless\n          you know what you are doing.  *Note Compiling Octave with\n          64-bit Indexing::, for more details about building Octave with\n          this option.\n\n     '--enable-bounds-check'\n          Enable bounds checking for indexing operators in the internal\n          array classes.  This option is primarily used for debugging\n          Octave.  Building Octave with this option has a negative\n          impact on performance and is not recommended for general use.\n\n     '--disable-docs'\n          Disable building all forms of the documentation (Info, PDF,\n          HTML). The default is to build documentation, but your system\n          will need functioning Texinfo and TeX installs for this to\n          succeed.\n\n     '--enable-float-truncate'\n          This option allows for truncation of intermediate floating\n          point results in calculations.  It is only necessary for\n          certain platforms.\n\n     '--enable-readline'\n          Use the readline library to provide for editing of the command\n          line in terminal environments.  This option is on by default.\n\n     '--enable-shared'\n          Create shared libraries (this is the default).  If you are\n          planning to use the dynamic loading features, you will\n          probably want to use this option.  It will make your '.oct'\n          files much smaller and on some systems it may be necessary to\n          build shared libraries in order to use dynamically linked\n          functions.\n\n          You may also want to build a shared version of 'libstdc++', if\n          your system doesn't already have one.\n\n     '--enable-dl'\n          Use 'dlopen' and friends to make Octave capable of dynamically\n          linking externally compiled functions (this is the default if\n          '--enable-shared' is specified).  This option only works on\n          systems that actually have these functions.  If you plan on\n          using this feature, you should probably also use\n          '--enable-shared' to reduce the size of your '.oct' files.\n\n     '--with-blas=<lib>'\n          By default, configure looks for the best BLAS matrix libraries\n          on your system, including optimized implementations such as\n          the free ATLAS 3.0, as well as vendor-tuned libraries.  (The\n          use of an optimized BLAS will generally result in\n          several-times faster matrix operations.)  Use this option to\n          specify a particular BLAS library that Octave should use.\n\n     '--with-lapack=<lib>'\n          By default, configure looks for the best LAPACK matrix\n          libraries on your system, including optimized implementations\n          such as the free ATLAS 3.0, as well as vendor-tuned libraries.\n          (The use of an optimized LAPACK will generally result in\n          several-times faster matrix operations.)  Use this option to\n          specify a particular LAPACK library that Octave should use.\n\n     '--with-magick=<lib>'\n          Select the library to use for image I/O.  The two possible\n          values are \"GraphicsMagick\" (default) or \"ImageMagick\".\n\n     '--with-sepchar=<char>'\n          Use <char> as the path separation character.  This option can\n          help when running Octave on non-Unix systems.\n\n     '--without-amd'\n          Don't use AMD, disable some sparse matrix functionality.\n\n     '--without-camd'\n          Don't use CAMD, disable some sparse matrix functionality.\n\n     '--without-colamd'\n          Don't use COLAMD, disable some sparse matrix functionality.\n\n     '--without-ccolamd'\n          Don't use CCOLAMD, disable some sparse matrix functionality.\n\n     '--without-cholmod'\n          Don't use CHOLMOD, disable some sparse matrix functionality.\n\n     '--without-curl'\n          Don't use the cURL library, disable the ftp objects, 'urlread'\n          and 'urlwrite' functions.\n\n     '--without-cxsparse'\n          Don't use CXSPARSE, disable some sparse matrix functionality.\n\n     '--without-fftw3'\n          Use the included FFTPACK library for computing Fast Fourier\n          Transforms instead of the FFTW3 library.\n\n     '--without-fftw3f'\n          Use the included FFTPACK library for computing Fast Fourier\n          Transforms instead of the FFTW3 library when operating on\n          single precision (float) values.\n\n     '--without-glpk'\n          Don't use the GLPK library for linear programming.\n\n     '--without-hdf5'\n          Don't use the HDF5 library, disable reading and writing of\n          HDF5 files.\n\n     '--without-opengl'\n          Don't use OpenGL, disable native graphics toolkit for\n          plotting.  You will need 'gnuplot' installed in order to make\n          plots.\n\n     '--without-qhull'\n          Don't use Qhull, disable 'delaunay', 'convhull', and related\n          functions.\n\n     '--without-qrupdate'\n          Don't use QRUPDATE, disable QR and Cholesky update functions.\n\n     '--without-umfpack'\n          Don't use UMFPACK, disable some sparse matrix functionality.\n\n     '--without-zlib'\n          Don't use the zlib library, disable data file compression and\n          support for recent MAT file formats.\n\n     '--without-framework-carbon'\n          Don't use framework Carbon headers, libraries, or specific\n          source code even if the configure test succeeds (the default\n          is to use Carbon framework if available).  This is a platform\n          specific configure option for Mac systems.\n\n     '--without-framework-opengl'\n          Don't use framework OpenGL headers, libraries, or specific\n          source code even if the configure test succeeds.  If this\n          option is given then OpenGL headers and libraries in standard\n          system locations are tested (the default value is\n          '--with-framework-opengl').  This is a platform specific\n          configure option for Mac systems.\n\n     See the file 'INSTALL' for more general information about the\n     command line options used by configure.  That file also contains\n     instructions for compiling in a directory other than the one where\n     the source is located.\n\n   * Run make.\n\n     You will need a recent version of GNU Make as Octave relies on\n     certain features not generally available in all versions of make.\n     Modifying Octave's makefiles to work with other make programs is\n     probably not worth your time; instead, we simply recommend\n     installing GNU Make.\n\n     There are currently three options for plotting in Octave: the\n     external program gnuplot, the internal graphics engine using OpenGL\n     coupled with either FLTK or Qt widgets.  Gnuplot is a\n     command-driven interactive function plotting program.\n\n     To compile Octave, you will need a recent version of 'g++' or other\n     ANSI C++ compiler.  In addition, you will need a Fortran 77\n     compiler or 'f2c'.  If you use 'f2c', you will need a script like\n     'fort77' that works like a normal Fortran compiler by combining\n     'f2c' with your C compiler in a single script.\n\n     If you plan to modify the parser you will also need GNU 'bison' and\n     'flex'.  If you modify the documentation, you will need GNU\n     Texinfo.\n\n     GNU Make, 'gcc' (and 'libstdc++'), 'gnuplot', 'bison', 'flex', and\n     Texinfo are all available from many anonymous ftp archives.  The\n     primary site is <ftp.gnu.org>, but it is often very busy.  A list\n     of sites that mirror the software on <ftp.gnu.org> is available by\n     anonymous ftp from <ftp://ftp.gnu.org/pub/gnu/GNUinfo/FTP>.\n\n     Octave requires approximately 1.4 GB of disk storage to unpack and\n     compile from source (significantly less, 400 MB, if you don't\n     compile with debugging symbols).  To compile without debugging\n     symbols try the command\n\n          make CFLAGS=-O CXXFLAGS=-O LDFLAGS=\n\n     instead of just 'make'.\n\n   * If you encounter errors while compiling Octave, first see *note\n     Installation Problems:: for a list of known problems and if there\n     is a workaround or solution for your problem.  If not, see the file\n     BUGS for information about how to report bugs.\n\n   * Once you have successfully compiled Octave, run 'make install'.\n\n     This will install a copy of Octave, its libraries, and its\n     documentation in the destination directory.  As distributed, Octave\n     is installed in the following directories.  In the table below,\n     PREFIX defaults to '/usr/local', VERSION stands for the current\n     version number of the interpreter, and ARCH is the type of computer\n     on which Octave is installed (for example, 'i586-unknown-gnu').\n\n     'PREFIX/bin'\n          Octave and other binaries that people will want to run\n          directly.\n\n     'PREFIX/lib/octave-VERSION'\n          Libraries like liboctave.a and liboctinterp.a.\n\n     'PREFIX/octave-VERSION/include/octave'\n          Include files distributed with Octave.\n\n     'PREFIX/share'\n          Architecture-independent data files.\n\n     'PREFIX/share/man/man1'\n          Unix-style man pages describing Octave.\n\n     'PREFIX/share/info'\n          Info files describing Octave.\n\n     'PREFIX/share/octave/VERSION/m'\n          Function files distributed with Octave.  This includes the\n          Octave version, so that multiple versions of Octave may be\n          installed at the same time.\n\n     'PREFIX/libexec/octave/VERSION/exec/ARCH'\n          Executables to be run by Octave rather than the user.\n\n     'PREFIX/lib/octave/VERSION/oct/ARCH'\n          Object files that will be dynamically loaded.\n\n     'PREFIX/share/octave/VERSION/imagelib'\n          Image files that are distributed with Octave.\n\n1.3 Compiling Octave with 64-bit Indexing\n=========================================\n\nNote: the following only applies to systems that have 64-bit pointers.\nConfiguring Octave with '--enable-64' cannot magically make a 32-bit\nsystem have a 64-bit address space.\n\n   On 64-bit systems, Octave is limited to (approximately) the following\narray sizes when using the default 32-bit indexing mode:\n\n     double:         16 GB\n     single:          8 GB\n     uint64, int64:  16 GB\n     uint32, int32:   8 GB\n     uint16, int16:   4 GB\n     uint8, int8:     2 GB\n\n   In each case, the limit is really (approximately) 2^{31} elements\nbecause of the default type of the value used for indexing arrays\n(signed 32-bit integer, corresponding to the size of a Fortran INTEGER\nvalue).\n\n   Trying to create larger arrays will produce the following error:\n\n     octave:1> a = zeros (1024*1024*1024*3, 1, 'int8');\n     error: memory exhausted or requested size too large\n            for range of Octave's index type --\n            trying to return to prompt\n\nYou will obtain this error even if your system has enough memory to\ncreate this array (4 GB in the above case).\n\n   To use arrays larger than 2 GB, Octave has to be configured with the\noption '--enable-64'.  This option is experimental and you are\nencouraged to submit bug reports if you find a problem.  With this\noption, Octave will use 64-bit integers internally for array dimensions\nand indexing.  However, all numerical libraries used by Octave will\n*also* need to use 64-bit integers for array dimensions and indexing.\nIn most cases, this means they will need to be compiled from source\nsince most (all?)  distributions which package these libraries compile\nthem with the default Fortran integer size, which is normally 32-bits\nwide.\n\n   The following instructions were tested with the development version\nof Octave and GCC 4.3.4 on an x86_64 Debian system.\n\n   The versions listed below are the versions used for testing.  If\nnewer versions of these packages are available, you should try to use\nthem, although there may be some differences.\n\n   All libraries and header files will be installed in subdirectories of\n'$prefix64' (you must choose the location of this directory).\n\n   * BLAS and LAPACK (<http://www.netlib.org/lapack>)\n\n     Reference versions for both libraries are included in the reference\n     LAPACK 3.2.1 distribution from <netlib.org>.\n\n        - Copy the file 'make.inc.example' and name it 'make.inc'.  The\n          options '-fdefault-integer-8' and '-fPIC' (on 64-bit CPU) have\n          to be added to the variable 'OPTS' and 'NOOPT'.\n\n        - Once you have compiled this library make sure that you use it\n          for compiling Suite Sparse and Octave.  In the following we\n          assume that you installed the LAPACK library as\n          $prefix64/lib/liblapack.a.\n\n   * QRUPDATE (<http://sourceforge.net/projects/qrupdate>)\n\n     In the 'Makeconf' file:\n\n        - Add '-fdefault-integer-8' to 'FFLAGS'.\n\n        - Adjust the BLAS and LAPACK variables as needed if your 64-bit\n          aware BLAS and LAPACK libraries are in a non-standard\n          location.\n\n        - Set 'PREFIX' to the top-level directory of your install tree.\n\n        - Run 'make solib' to make a shared library.\n\n        - Run 'make install' to install the library.\n\n   * SuiteSparse (<http://www.cise.ufl.edu/research/sparse/SuiteSparse>)\n\n     Pass the following options to 'make' to enable 64-bit integers for\n     BLAS library calls.  On 64-bit Windows systems, use\n     '-DLONGBLAS=\"long long\"' instead.\n\n          CFLAGS='-DLONGBLAS=long'\n          CXXFLAGS='-DLONGBLAS=long'\n\n     The SuiteSparse makefiles don't generate shared libraries.  On some\n     systems, you can generate them by doing something as simple as\n\n          top=$(pwd)\n          for f in *.a; do\n            mkdir tmp\n            cd tmp\n            ar vx ../$f\n            gcc -shared -o ../${f%%.a}.so *.o\n            cd $top\n            rm -rf tmp\n          done\n\n     Other systems may require a different solution.\n\n   * ARPACK (http://forge.scilab.org/index.php/p/arpack-ng/)\n\n        - Add '-fdefault-integer-8' to 'FFLAGS' when running configure.\n\n        - Run 'make' to build the library.\n\n        - Run 'make install' to install the library.\n\n   * ATLAS instead of reference BLAS and LAPACK\n\n     Suggestions on how to compile ATLAS would be most welcome.\n\n   * GLPK\n\n   * Qhull (<http://www.qhull.org>)\n\n     Both GLPK and Qhull use 'int' internally so maximum problem sizes\n     may be limited.\n\n   * Octave\n\n     Octave's 64-bit index support is activated with the configure\n     option '--enable-64'.\n\n          ./configure \\\n            LD_LIBRARY_PATH=\"$prefix64/lib\" \\\n            CPPFLAGS=\"-I$prefix64/include\" LDFLAGS=\"-L$prefix64/lib\" \\\n            --enable-64\n\n     You must ensure that all Fortran sources except those in the\n     'liboctave/cruft/ranlib' directory are compiled such that INTEGERS\n     are 8-bytes wide.  If you are using gfortran, the configure script\n     should automatically set the Makefile variable 'F77_INTEGER_8_FLAG'\n     to '-fdefault-integer-8'.  If you are using another compiler, you\n     must set this variable yourself.  You should NOT set this flag in\n     'FFLAGS', otherwise the files in 'liboctave/cruft/ranlib' will be\n     miscompiled.\n\n   * Other dependencies\n\n     Probably nothing special needs to be done for the following\n     dependencies.  If you discover that something does need to be done,\n     please submit a bug report.\n\n        - pcre\n\n        - zlib\n\n        - hdf5\n\n        - fftw3\n\n        - cURL\n\n        - GraphicsMagick++\n\n        - OpenGL\n\n        - freetype\n\n        - fontconfig\n\n        - fltk\n\n1.4 Installation Problems\n=========================\n\nThis section contains a list of problems (and some apparent problems\nthat don't really mean anything is wrong) that may show up during\ninstallation of Octave.\n\n   * On some SCO systems, 'info' fails to compile if 'HAVE_TERMIOS_H' is\n     defined in 'config.h'.  Simply removing the definition from\n     'info/config.h' should allow it to compile.\n\n   * If 'configure' finds 'dlopen', 'dlsym', 'dlclose', and 'dlerror',\n     but not the header file 'dlfcn.h', you need to find the source for\n     the header file and install it in the directory 'usr/include'.\n     This is reportedly a problem with Slackware 3.1.  For Linux/GNU\n     systems, the source for 'dlfcn.h' is in the 'ldso' package.\n\n   * Building '.oct' files doesn't work.\n\n     You should probably have a shared version of 'libstdc++'.  A patch\n     is needed to build shared versions of version 2.7.2 of 'libstdc++'\n     on the HP-PA architecture.  You can find the patch at\n     <ftp://ftp.cygnus.com/pub/g++/libg++-2.7.2-hppa-gcc-fix>.\n\n   * On some DEC alpha systems there may be a problem with the 'libdxml'\n     library, resulting in floating point errors and/or segmentation\n     faults in the linear algebra routines called by Octave.  If you\n     encounter such problems, then you should modify the configure\n     script so that 'SPECIAL_MATH_LIB' is not set to '-ldxml'.\n\n   * On FreeBSD systems Octave may hang while initializing some internal\n     constants.  The fix appears to be to use\n\n          options      GPL_MATH_EMULATE\n\n     rather than\n\n          options      MATH_EMULATE\n\n     in the kernel configuration files (typically found in the directory\n     '/sys/i386/conf').  After making this change, you'll need to\n     rebuild the kernel, install it, and reboot.\n\n   * If you encounter errors like\n\n          passing `void (*)()' as argument 2 of\n            `octave_set_signal_handler(int, void (*)(int))'\n\n     or\n\n          warning: ANSI C++ prohibits conversion from `(int)'\n                   to `(...)'\n\n     while compiling 'sighandlers.cc', you may need to edit some files\n     in the 'gcc' include subdirectory to add proper prototypes for\n     functions there.  For example, Ultrix 4.2 needs proper declarations\n     for the 'signal' function and the 'SIG_IGN' macro in the file\n     'signal.h'.\n\n     On some systems the 'SIG_IGN' macro is defined to be something like\n     this:\n\n          #define  SIG_IGN  (void (*)())1\n\n     when it should really be something like:\n\n          #define  SIG_IGN  (void (*)(int))1\n\n     to match the prototype declaration for the 'signal' function.  This\n     change should also be made for the 'SIG_DFL' and 'SIG_ERR' symbols.\n     It may be necessary to change the definitions in 'sys/signal.h' as\n     well.\n\n     The 'gcc' 'fixincludes' and 'fixproto' scripts should probably fix\n     these problems when 'gcc' installs its modified set of header\n     files, but I don't think that's been done yet.\n\n     *You should not change the files in '/usr/include'*.  You can find\n     the 'gcc' include directory tree by running the command\n\n          gcc -print-libgcc-file-name\n\n     The directory of 'gcc' include files normally begins in the same\n     directory that contains the file 'libgcc.a'.\n\n   * Some of the Fortran subroutines may fail to compile with older\n     versions of the Sun Fortran compiler.  If you get errors like\n\n          zgemm.f:\n                  zgemm:\n          warning: unexpected parent of complex expression subtree\n          zgemm.f, line 245: warning: unexpected parent of complex\n            expression subtree\n          warning: unexpected parent of complex expression subtree\n          zgemm.f, line 304: warning: unexpected parent of complex\n            expression subtree\n          warning: unexpected parent of complex expression subtree\n          zgemm.f, line 327: warning: unexpected parent of complex\n            expression subtree\n          pcc_binval: missing IR_CONV in complex op\n          make[2]: *** [zgemm.o] Error 1\n\n     when compiling the Fortran subroutines in the 'liboctave/cruft'\n     subdirectory, you should either upgrade your compiler or try\n     compiling with optimization turned off.\n\n   * On NeXT systems, if you get errors like this:\n\n          /usr/tmp/cc007458.s:unknown:Undefined local\n                symbol LBB7656\n          /usr/tmp/cc007458.s:unknown:Undefined local\n                symbol LBE7656\n\n     when compiling 'Array.cc' and 'Matrix.cc', try recompiling these\n     files without '-g'.\n\n   * Some people have reported that calls to system() and the pager do\n     not work on SunOS systems.  This is apparently due to having\n     'G_HAVE_SYS_WAIT' defined to be 0 instead of 1 when compiling\n     'libg++'.\n\n   * On systems where the reference BLAS library is used the following\n     matrix-by-vector multiplication incorrectly handles NaN values of\n     the form 'NaN * 0'.\n\n          [NaN, 1; 0, 0] * [0; 1]\n          =>\n          [ 1\n            0 ]\n\n          correct result =>\n          [ NaN\n            0   ]\n\n     Install a different BLAS library such as OpenBLAS or ATLAS to\n     correct this issue.\n\n   * On NeXT systems, linking to 'libsys_s.a' may fail to resolve the\n     following functions\n\n          _tcgetattr\n          _tcsetattr\n          _tcflow\n\n     which are part of 'libposix.a'.  Unfortunately, linking Octave with\n     '-posix' results in the following undefined symbols.\n\n          .destructors_used\n          .constructors_used\n          _objc_msgSend\n          _NXGetDefaultValue\n          _NXRegisterDefaults\n          .objc_class_name_NXStringTable\n          .objc_class_name_NXBundle\n\n     One kluge around this problem is to extract 'termios.o' from\n     'libposix.a', put it in Octave's 'src' directory, and add it to the\n     list of files to link together in the makefile.  Suggestions for\n     better ways to solve this problem are welcome!\n\n   * If Octave crashes immediately with a floating point exception, it\n     is likely that it is failing to initialize the IEEE floating point\n     values for infinity and NaN.\n\n     If your system actually does support IEEE arithmetic, you should be\n     able to fix this problem by modifying the function\n     'octave_ieee_init' in the file 'lo-ieee.cc' to correctly initialize\n     Octave's internal infinity and NaN variables.\n\n     If your system does not support IEEE arithmetic but Octave's\n     configure script incorrectly determined that it does, you can work\n     around the problem by editing the file 'config.h' to not define\n     'HAVE_ISINF', 'HAVE_FINITE', and 'HAVE_ISNAN'.\n\n     In any case, please report this as a bug since it might be possible\n     to modify Octave's configuration script to automatically determine\n     the proper thing to do.\n\n   * If Octave is unable to find a header file because it is installed\n     in a location that is not normally searched by the compiler, you\n     can add the directory to the include search path by specifying (for\n     example) 'CPPFLAGS=-I/some/nonstandard/directory' as an argument to\n     'configure'.  Other variables that can be specified this way are\n     'CFLAGS', 'CXXFLAGS', 'FFLAGS', and 'LDFLAGS'.  Passing them as\n     options to the configure script also records them in the\n     'config.status' file.  By default, 'CPPFLAGS' and 'LDFLAGS' are\n     empty, 'CFLAGS' and 'CXXFLAGS' are set to \"-g -O2\" and 'FFLAGS' is\n     set to \"-O\".\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/config.in.h": "/* config.in.h.  Generated from configure.ac by autoheader.  */\n\n/* Define if building universal (internal helper macro) */\n#undef AC_APPLE_UNIVERSAL_BUILD\n\n/* Define to the number of bits in type 'ptrdiff_t'. */\n#undef BITSIZEOF_PTRDIFF_T\n\n/* Define to the number of bits in type 'sig_atomic_t'. */\n#undef BITSIZEOF_SIG_ATOMIC_T\n\n/* Define to the number of bits in type 'size_t'. */\n#undef BITSIZEOF_SIZE_T\n\n/* Define to the number of bits in type 'wchar_t'. */\n#undef BITSIZEOF_WCHAR_T\n\n/* Define to the number of bits in type 'wint_t'. */\n#undef BITSIZEOF_WINT_T\n\n/* Define to 1 if llvm::CallInst:addAttribute arg type is llvm::Attributes. */\n#undef CALLINST_ADDATTRIBUTE_ARG_IS_ATTRIBUTES\n\n/* Define to 1 if the `closedir' function returns void instead of `int'. */\n#undef CLOSEDIR_VOID\n\n/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP\n   systems. This function is required for `alloca.c' support on those systems.\n   */\n#undef CRAY_STACKSEG_END\n\n/* Define to the legacy option name if using an older version of cURL. */\n#undef CURLOPT_DIRLISTONLY\n\n/* Define to 1 if using `alloca.c'. */\n#undef C_ALLOCA\n\n/* Define to 1 if the C locale may have encoding errors. */\n#undef C_LOCALE_MAYBE_EILSEQ\n\n/* Define as the bit index in the word where to find bit 0 of the exponent of\n   'double'. */\n#undef DBL_EXPBIT0_BIT\n\n/* Define as the word index where to find the exponent of 'double'. */\n#undef DBL_EXPBIT0_WORD\n\n/* the name of the file descriptor member of DIR */\n#undef DIR_FD_MEMBER_NAME\n\n#ifdef DIR_FD_MEMBER_NAME\n# define DIR_TO_FD(Dir_p) ((Dir_p)->DIR_FD_MEMBER_NAME)\n#else\n# define DIR_TO_FD(Dir_p) -1\n#endif\n\n\n/* Define to 1 if // is a file system root distinct from /. */\n#undef DOUBLE_SLASH_IS_DISTINCT_ROOT\n\n/* Define if struct dirent has a member d_ino that actually works. */\n#undef D_INO_IN_DIRENT\n\n/* Define to 1 to build Octave documentation files. */\n#undef ENABLE_DOCS\n\n/* Define to 1 if using dynamic linking. */\n#undef ENABLE_DYNAMIC_LINKING\n\n/* Define to 1 to enable JIT compiler. */\n#undef ENABLE_JIT\n\n/* Define to 1 if math.h declares struct exception for matherr. */\n#undef EXCEPTION_IN_MATH\n\n/* Define to dummy `main' function (if any) required to link to the Fortran\n   libraries. */\n#undef F77_DUMMY_MAIN\n\n/* Define to a macro mangling the given C identifier (in lower and upper\n   case), which must not contain underscores, for linking with Fortran. */\n#undef F77_FUNC\n\n/* As F77_FUNC, but for C identifiers containing underscores. */\n#undef F77_FUNC_\n\n/* Define to 1 if calling Fortran from C++ should use the Cray Fortran calling\n   convention. */\n#undef F77_USES_CRAY_CALLING_CONVENTION\n\n/* Define to 1 if calling Fortran from C++ should use the f2c calling\n   convention. */\n#undef F77_USES_F2C_CALLING_CONVENTION\n\n/* Define to 1 if calling Fortran from C++ should use the gfortran calling\n   convention. */\n#undef F77_USES_GFORTRAN_CALLING_CONVENTION\n\n/* Define to 1 if calling Fortran from C++ should use the Visual Fortran\n   calling convention. */\n#undef F77_USES_VISUAL_FORTRAN_CALLING_CONVENTION\n\n/* Define this to 1 if F_DUPFD behavior does not match POSIX */\n#undef FCNTL_DUPFD_BUGGY\n\n/* Define if F77 and FC dummy `main' functions are identical. */\n#undef FC_DUMMY_MAIN_EQ_F77\n\n/* Define to nothing if C supports flexible array members, and to 1 if it does\n   not. That way, with a declaration like 'struct s { int n; double\n   d[FLEXIBLE_ARRAY_MEMBER]; };', the struct hack can be used with pre-C99\n   compilers. When computing the size of such an object, don't use 'sizeof\n   (struct s)' as it overestimates the size. Use 'offsetof (struct s, d)'\n   instead. Don't use 'offsetof (struct s, d[0])', as this doesn't work with\n   MSVC and with C++ compilers. */\n#undef FLEXIBLE_ARRAY_MEMBER\n\n/* Define to 1 if the system's ftello function has the Solaris bug. */\n#undef FTELLO_BROKEN_AFTER_SWITCHING_FROM_READ_TO_WRITE\n\n/* Define to 1 if llvm::Function:addAttribute arg type is llvm::Attributes. */\n#undef FUNCTION_ADDATTRIBUTE_ARG_IS_ATTRIBUTES\n\n/* Define to 1 if llvm::Function:addFnAttr arg type is llvm::Attributes. */\n#undef FUNCTION_ADDFNATTR_ARG_IS_ATTRIBUTES\n\n/* Define to 1 if mkdir mistakenly creates a directory given with a trailing\n   dot component. */\n#undef FUNC_MKDIR_DOT_BUG\n\n/* Define to 1 if realpath() can malloc memory, always gives an absolute path,\n   and handles trailing slash correctly. */\n#undef FUNC_REALPATH_WORKS\n\n/* Define if gettimeofday clobbers the localtime buffer. */\n#undef GETTIMEOFDAY_CLOBBERS_LOCALTIME\n\n/* Define this to 'void' or 'struct timezone' to match the system's\n   declaration of the second argument to gettimeofday. */\n#undef GETTIMEOFDAY_TIMEZONE\n\n/* Define to a C preprocessor expression that evaluates to 1 or 0, depending\n   whether the gnulib module canonicalize shall be considered present. */\n#undef GNULIB_CANONICALIZE\n\n/* Define to a C preprocessor expression that evaluates to 1 or 0, depending\n   whether the gnulib module dirname shall be considered present. */\n#undef GNULIB_DIRNAME\n\n/* Define to a C preprocessor expression that evaluates to 1 or 0, depending\n   whether the gnulib module fdopendir shall be considered present. */\n#undef GNULIB_FDOPENDIR\n\n/* Define to a C preprocessor expression that evaluates to 1 or 0, depending\n   whether the gnulib module fscanf shall be considered present. */\n#undef GNULIB_FSCANF\n\n/* Define to a C preprocessor expression that evaluates to 1 or 0, depending\n   whether the gnulib module getcwd shall be considered present. */\n#undef GNULIB_GETCWD\n\n/* Define to a C preprocessor expression that evaluates to 1 or 0, depending\n   whether the gnulib module lock shall be considered present. */\n#undef GNULIB_LOCK\n\n/* Define to a C preprocessor expression that evaluates to 1 or 0, depending\n   whether the gnulib module malloc-gnu shall be considered present. */\n#undef GNULIB_MALLOC_GNU\n\n/* Define to a C preprocessor expression that evaluates to 1 or 0, depending\n   whether the gnulib module mkostemp shall be considered present. */\n#undef GNULIB_MKOSTEMP\n\n/* Define to a C preprocessor expression that evaluates to 1 or 0, depending\n   whether the gnulib module openat shall be considered present. */\n#undef GNULIB_OPENAT\n\n/* Define to 1 if printf and friends should be labeled with attribute\n   \"__gnu_printf__\" instead of \"__printf__\" */\n#undef GNULIB_PRINTF_ATTRIBUTE_FLAVOR_GNU\n\n/* Define to a C preprocessor expression that evaluates to 1 or 0, depending\n   whether the gnulib module scanf shall be considered present. */\n#undef GNULIB_SCANF\n\n/* Define to a C preprocessor expression that evaluates to 1 or 0, depending\n   whether the gnulib module snprintf shall be considered present. */\n#undef GNULIB_SNPRINTF\n\n/* Define to a C preprocessor expression that evaluates to 1 or 0, depending\n   whether the gnulib module strerror shall be considered present. */\n#undef GNULIB_STRERROR\n\n/* Define to 1 when the gnulib module canonicalize should be tested. */\n#undef GNULIB_TEST_CANONICALIZE\n\n/* Define to 1 when the gnulib module canonicalize_file_name should be tested.\n   */\n#undef GNULIB_TEST_CANONICALIZE_FILE_NAME\n\n/* Define to 1 when the gnulib module chdir should be tested. */\n#undef GNULIB_TEST_CHDIR\n\n/* Define to 1 when the gnulib module cloexec should be tested. */\n#undef GNULIB_TEST_CLOEXEC\n\n/* Define to 1 when the gnulib module close should be tested. */\n#undef GNULIB_TEST_CLOSE\n\n/* Define to 1 when the gnulib module closedir should be tested. */\n#undef GNULIB_TEST_CLOSEDIR\n\n/* Define to 1 when the gnulib module dirfd should be tested. */\n#undef GNULIB_TEST_DIRFD\n\n/* Define to 1 when the gnulib module dup should be tested. */\n#undef GNULIB_TEST_DUP\n\n/* Define to 1 when the gnulib module dup2 should be tested. */\n#undef GNULIB_TEST_DUP2\n\n/* Define to 1 when the gnulib module environ should be tested. */\n#undef GNULIB_TEST_ENVIRON\n\n/* Define to 1 when the gnulib module fchdir should be tested. */\n#undef GNULIB_TEST_FCHDIR\n\n/* Define to 1 when the gnulib module fcntl should be tested. */\n#undef GNULIB_TEST_FCNTL\n\n/* Define to 1 when the gnulib module fdopendir should be tested. */\n#undef GNULIB_TEST_FDOPENDIR\n\n/* Define to 1 when the gnulib module frexp should be tested. */\n#undef GNULIB_TEST_FREXP\n\n/* Define to 1 when the gnulib module frexpf should be tested. */\n#undef GNULIB_TEST_FREXPF\n\n/* Define to 1 when the gnulib module fseek should be tested. */\n#undef GNULIB_TEST_FSEEK\n\n/* Define to 1 when the gnulib module fseeko should be tested. */\n#undef GNULIB_TEST_FSEEKO\n\n/* Define to 1 when the gnulib module fstat should be tested. */\n#undef GNULIB_TEST_FSTAT\n\n/* Define to 1 when the gnulib module fstatat should be tested. */\n#undef GNULIB_TEST_FSTATAT\n\n/* Define to 1 when the gnulib module ftell should be tested. */\n#undef GNULIB_TEST_FTELL\n\n/* Define to 1 when the gnulib module ftello should be tested. */\n#undef GNULIB_TEST_FTELLO\n\n/* Define to 1 when the gnulib module ftruncate should be tested. */\n#undef GNULIB_TEST_FTRUNCATE\n\n/* Define to 1 when the gnulib module getcwd should be tested. */\n#undef GNULIB_TEST_GETCWD\n\n/* Define to 1 when the gnulib module getdtablesize should be tested. */\n#undef GNULIB_TEST_GETDTABLESIZE\n\n/* Define to 1 when the gnulib module gethostname should be tested. */\n#undef GNULIB_TEST_GETHOSTNAME\n\n/* Define to 1 when the gnulib module getlogin_r should be tested. */\n#undef GNULIB_TEST_GETLOGIN_R\n\n/* Define to 1 when the gnulib module getopt-gnu should be tested. */\n#undef GNULIB_TEST_GETOPT_GNU\n\n/* Define to 1 when the gnulib module getrusage should be tested. */\n#undef GNULIB_TEST_GETRUSAGE\n\n/* Define to 1 when the gnulib module gettimeofday should be tested. */\n#undef GNULIB_TEST_GETTIMEOFDAY\n\n/* Define to 1 when the gnulib module isatty should be tested. */\n#undef GNULIB_TEST_ISATTY\n\n/* Define to 1 when the gnulib module link should be tested. */\n#undef GNULIB_TEST_LINK\n\n/* Define to 1 when the gnulib module lseek should be tested. */\n#undef GNULIB_TEST_LSEEK\n\n/* Define to 1 when the gnulib module lstat should be tested. */\n#undef GNULIB_TEST_LSTAT\n\n/* Define to 1 when the gnulib module malloc-posix should be tested. */\n#undef GNULIB_TEST_MALLOC_POSIX\n\n/* Define to 1 when the gnulib module mbrtowc should be tested. */\n#undef GNULIB_TEST_MBRTOWC\n\n/* Define to 1 when the gnulib module mbsinit should be tested. */\n#undef GNULIB_TEST_MBSINIT\n\n/* Define to 1 when the gnulib module mbsrtowcs should be tested. */\n#undef GNULIB_TEST_MBSRTOWCS\n\n/* Define to 1 when the gnulib module memchr should be tested. */\n#undef GNULIB_TEST_MEMCHR\n\n/* Define to 1 when the gnulib module mempcpy should be tested. */\n#undef GNULIB_TEST_MEMPCPY\n\n/* Define to 1 when the gnulib module memrchr should be tested. */\n#undef GNULIB_TEST_MEMRCHR\n\n/* Define to 1 when the gnulib module mkfifo should be tested. */\n#undef GNULIB_TEST_MKFIFO\n\n/* Define to 1 when the gnulib module mkostemp should be tested. */\n#undef GNULIB_TEST_MKOSTEMP\n\n/* Define to 1 when the gnulib module mktime should be tested. */\n#undef GNULIB_TEST_MKTIME\n\n/* Define to 1 when the gnulib module nanosleep should be tested. */\n#undef GNULIB_TEST_NANOSLEEP\n\n/* Define to 1 when the gnulib module open should be tested. */\n#undef GNULIB_TEST_OPEN\n\n/* Define to 1 when the gnulib module openat should be tested. */\n#undef GNULIB_TEST_OPENAT\n\n/* Define to 1 when the gnulib module opendir should be tested. */\n#undef GNULIB_TEST_OPENDIR\n\n/* Define to 1 when the gnulib module pipe should be tested. */\n#undef GNULIB_TEST_PIPE\n\n/* Define to 1 when the gnulib module putenv should be tested. */\n#undef GNULIB_TEST_PUTENV\n\n/* Define to 1 when the gnulib module raise should be tested. */\n#undef GNULIB_TEST_RAISE\n\n/* Define to 1 when the gnulib module readdir should be tested. */\n#undef GNULIB_TEST_READDIR\n\n/* Define to 1 when the gnulib module readlink should be tested. */\n#undef GNULIB_TEST_READLINK\n\n/* Define to 1 when the gnulib module realloc-posix should be tested. */\n#undef GNULIB_TEST_REALLOC_POSIX\n\n/* Define to 1 when the gnulib module rewinddir should be tested. */\n#undef GNULIB_TEST_REWINDDIR\n\n/* Define to 1 when the gnulib module rmdir should be tested. */\n#undef GNULIB_TEST_RMDIR\n\n/* Define to 1 when the gnulib module secure_getenv should be tested. */\n#undef GNULIB_TEST_SECURE_GETENV\n\n/* Define to 1 when the gnulib module select should be tested. */\n#undef GNULIB_TEST_SELECT\n\n/* Define to 1 when the gnulib module setenv should be tested. */\n#undef GNULIB_TEST_SETENV\n\n/* Define to 1 when the gnulib module sigaction should be tested. */\n#undef GNULIB_TEST_SIGACTION\n\n/* Define to 1 when the gnulib module sigprocmask should be tested. */\n#undef GNULIB_TEST_SIGPROCMASK\n\n/* Define to 1 when the gnulib module snprintf should be tested. */\n#undef GNULIB_TEST_SNPRINTF\n\n/* Define to 1 when the gnulib module stat should be tested. */\n#undef GNULIB_TEST_STAT\n\n/* Define to 1 when the gnulib module strdup should be tested. */\n#undef GNULIB_TEST_STRDUP\n\n/* Define to 1 when the gnulib module strerror should be tested. */\n#undef GNULIB_TEST_STRERROR\n\n/* Define to 1 when the gnulib module strndup should be tested. */\n#undef GNULIB_TEST_STRNDUP\n\n/* Define to 1 when the gnulib module strnlen should be tested. */\n#undef GNULIB_TEST_STRNLEN\n\n/* Define to 1 when the gnulib module strptime should be tested. */\n#undef GNULIB_TEST_STRPTIME\n\n/* Define to 1 when the gnulib module strsignal should be tested. */\n#undef GNULIB_TEST_STRSIGNAL\n\n/* Define to 1 when the gnulib module symlink should be tested. */\n#undef GNULIB_TEST_SYMLINK\n\n/* Define to 1 when the gnulib module timegm should be tested. */\n#undef GNULIB_TEST_TIMEGM\n\n/* Define to 1 when the gnulib module time_r should be tested. */\n#undef GNULIB_TEST_TIME_R\n\n/* Define to 1 when the gnulib module time_rz should be tested. */\n#undef GNULIB_TEST_TIME_RZ\n\n/* Define to 1 when the gnulib module tmpfile should be tested. */\n#undef GNULIB_TEST_TMPFILE\n\n/* Define to 1 when the gnulib module unlink should be tested. */\n#undef GNULIB_TEST_UNLINK\n\n/* Define to 1 when the gnulib module unsetenv should be tested. */\n#undef GNULIB_TEST_UNSETENV\n\n/* Define to 1 when the gnulib module vasprintf should be tested. */\n#undef GNULIB_TEST_VASPRINTF\n\n/* Define to 1 when the gnulib module waitpid should be tested. */\n#undef GNULIB_TEST_WAITPID\n\n/* Define to 1 if you have the `acosh' function. */\n#undef HAVE_ACOSH\n\n/* Define to 1 if you have the `acoshf' function. */\n#undef HAVE_ACOSHF\n\n/* Define to 1 if you have 'alloca' after including <alloca.h>, a header that\n   may be supplied by this distribution. */\n#undef HAVE_ALLOCA\n\n/* Define to 1 if you have <alloca.h> and it should be used (not on Ultrix).\n   */\n#undef HAVE_ALLOCA_H\n\n/* Define to 1 if AMD is available. */\n#undef HAVE_AMD\n\n/* Define to 1 if you have the <amd/amd.h> header file. */\n#undef HAVE_AMD_AMD_H\n\n/* Define to 1 if you have the <amd.h> header file. */\n#undef HAVE_AMD_H\n\n/* Define to 1 if ARPACK is available. */\n#undef HAVE_ARPACK\n\n/* Define to 1 if you have the `asinh' function. */\n#undef HAVE_ASINH\n\n/* Define to 1 if you have the `asinhf' function. */\n#undef HAVE_ASINHF\n\n/* Define to 1 if you have the `atanh' function. */\n#undef HAVE_ATANH\n\n/* Define to 1 if you have the `atanhf' function. */\n#undef HAVE_ATANHF\n\n/* Define if you have a BLAS library. */\n#undef HAVE_BLAS\n\n/* Define to 1 if you have the <bp-sym.h> header file. */\n#undef HAVE_BP_SYM_H\n\n/* Define to 1 if you have the `btowc' function. */\n#undef HAVE_BTOWC\n\n/* Define to 1 if nanosleep mishandles large arguments. */\n#undef HAVE_BUG_BIG_NANOSLEEP\n\n/* Define to 1 if BZIP2 is available. */\n#undef HAVE_BZ2\n\n/* Define to 1 if you have the <bzlib.h> header file. */\n#undef HAVE_BZLIB_H\n\n/* Define to 1 if CAMD is available. */\n#undef HAVE_CAMD\n\n/* Define to 1 if you have the <camd/camd.h> header file. */\n#undef HAVE_CAMD_CAMD_H\n\n/* Define to 1 if you have the <camd.h> header file. */\n#undef HAVE_CAMD_H\n\n/* Define to 1 if you have the `canonicalize_file_name' function. */\n#undef HAVE_CANONICALIZE_FILE_NAME\n\n/* Define to 1 if Carbon Framework has CGDisplayBitsPerPixel. */\n#undef HAVE_CARBON_CGDISPLAYBITSPERPIXEL\n\n/* Define to 1 if you have the `cbrt' function. */\n#undef HAVE_CBRT\n\n/* Define to 1 if you have the `cbrtf' function. */\n#undef HAVE_CBRTF\n\n/* Define to 1 if CCOLAMD is available. */\n#undef HAVE_CCOLAMD\n\n/* Define to 1 if you have the <ccolamd/ccolamd.h> header file. */\n#undef HAVE_CCOLAMD_CCOLAMD_H\n\n/* Define to 1 if you have the <ccolamd.h> header file. */\n#undef HAVE_CCOLAMD_H\n\n/* Define to 1 if you have the `chmod' function. */\n#undef HAVE_CHMOD\n\n/* Define to 1 if CHOLMOD is available. */\n#undef HAVE_CHOLMOD\n\n/* Define to 1 if you have the <cholmod/cholmod.h> header file. */\n#undef HAVE_CHOLMOD_CHOLMOD_H\n\n/* Define to 1 if you have the <cholmod.h> header file. */\n#undef HAVE_CHOLMOD_H\n\n/* Define to 1 if you have the `chown' function. */\n#undef HAVE_CHOWN\n\n/* Define to 1 if you have the `chsize' function. */\n#undef HAVE_CHSIZE\n\n/* Define to 1 if you have the `closedir' function. */\n#undef HAVE_CLOSEDIR\n\n/* Define to 1 if <cmath> provides isfinite. */\n#undef HAVE_CMATH_ISFINITE\n\n/* Define to 1 if <cmath> provides float variant of isfinite. */\n#undef HAVE_CMATH_ISFINITEF\n\n/* Define to 1 if <cmath> provides isinf. */\n#undef HAVE_CMATH_ISINF\n\n/* Define to 1 if <cmath> provides float variant of isinf. */\n#undef HAVE_CMATH_ISINFF\n\n/* Define to 1 if <cmath> provides isnan. */\n#undef HAVE_CMATH_ISNAN\n\n/* Define to 1 if <cmath> provides float variant of isnan. */\n#undef HAVE_CMATH_ISNANF\n\n/* Define to 1 if <cmath> provides signbit. */\n#undef HAVE_CMATH_SIGNBIT\n\n/* Define to 1 if <cmath> provides float variant of signbit. */\n#undef HAVE_CMATH_SIGNBITF\n\n/* Define to 1 if COLAMD is available. */\n#undef HAVE_COLAMD\n\n/* Define to 1 if you have the <colamd/colamd.h> header file. */\n#undef HAVE_COLAMD_COLAMD_H\n\n/* Define to 1 if you have the <colamd.h> header file. */\n#undef HAVE_COLAMD_H\n\n/* Define to 1 if <complex> provides std::acos(std::complex<T>). */\n#undef HAVE_COMPLEX_STD_ACOS\n\n/* Define to 1 if <complex> provides std::acosh(std::complex<T>). */\n#undef HAVE_COMPLEX_STD_ACOSH\n\n/* Define to 1 if <complex> provides std::asin(std::complex<T>). */\n#undef HAVE_COMPLEX_STD_ASIN\n\n/* Define to 1 if <complex> provides std::asinh(std::complex<T>). */\n#undef HAVE_COMPLEX_STD_ASINH\n\n/* Define to 1 if <complex> provides std::atan(std::complex<T>). */\n#undef HAVE_COMPLEX_STD_ATAN\n\n/* Define to 1 if <complex> provides std::atanh(std::complex<T>). */\n#undef HAVE_COMPLEX_STD_ATANH\n\n/* Define to 1 if you have the <conio.h> header file. */\n#undef HAVE_CONIO_H\n\n/* Define to 1 if you have the <cs.h> header file. */\n#undef HAVE_CS_H\n\n/* Define to 1 if you have the `ctermid' function. */\n#undef HAVE_CTERMID\n\n/* Define to 1 if cURL is available. */\n#undef HAVE_CURL\n\n/* Define to 1 if you have the <curl/curl.h> header file. */\n#undef HAVE_CURL_CURL_H\n\n/* Define to 1 if you have the <curses.h> header file. */\n#undef HAVE_CURSES_H\n\n/* Define to 1 if CXSparse is available. */\n#undef HAVE_CXSPARSE\n\n/* Define to 1 if you have the <cxsparse/cs.h> header file. */\n#undef HAVE_CXSPARSE_CS_H\n\n/* Define to 1 if CXSparse is version 2.2 or later. */\n#undef HAVE_CXSPARSE_VERSION_OK\n\n/* Define to 1 if C++ library has templated bitwise operators. */\n#undef HAVE_CXX_BITWISE_OP_TEMPLATES\n\n/* Define to 1 if C++ complex class has T& real (void) and T& imag (void)\n   methods. */\n#undef HAVE_CXX_COMPLEX_REFERENCE_ACCESSORS\n\n/* Define to 1 if C++ complex class has void real (T) and void imag (T)\n   methods. */\n#undef HAVE_CXX_COMPLEX_SETTERS\n\n/* Define to 1 if you have the declaration of `alarm', and to 0 if you don't.\n   */\n#undef HAVE_DECL_ALARM\n\n/* Define to 1 if you have the declaration of `dirfd', and to 0 if you don't.\n   */\n#undef HAVE_DECL_DIRFD\n\n/* Define to 1 if you have the declaration of `exp2', and to 0 if you don't.\n   */\n#undef HAVE_DECL_EXP2\n\n/* Define to 1 if you have the declaration of `fchdir', and to 0 if you don't.\n   */\n#undef HAVE_DECL_FCHDIR\n\n/* Define to 1 if you have the declaration of `fdopendir', and to 0 if you\n   don't. */\n#undef HAVE_DECL_FDOPENDIR\n\n/* Define to 1 if you have the declaration of `fseeko', and to 0 if you don't.\n   */\n#undef HAVE_DECL_FSEEKO\n\n/* Define to 1 if you have the declaration of `ftello', and to 0 if you don't.\n   */\n#undef HAVE_DECL_FTELLO\n\n/* Define to 1 if you have the declaration of `getcwd', and to 0 if you don't.\n   */\n#undef HAVE_DECL_GETCWD\n\n/* Define to 1 if you have the declaration of `getc_unlocked', and to 0 if you\n   don't. */\n#undef HAVE_DECL_GETC_UNLOCKED\n\n/* Define to 1 if you have the declaration of `getdtablesize', and to 0 if you\n   don't. */\n#undef HAVE_DECL_GETDTABLESIZE\n\n/* Define to 1 if you have the declaration of `getenv', and to 0 if you don't.\n   */\n#undef HAVE_DECL_GETENV\n\n/* Define to 1 if you have the declaration of `getlogin', and to 0 if you\n   don't. */\n#undef HAVE_DECL_GETLOGIN\n\n/* Define to 1 if you have the declaration of `getlogin_r', and to 0 if you\n   don't. */\n#undef HAVE_DECL_GETLOGIN_R\n\n/* Define to 1 if you have the declaration of `isblank', and to 0 if you\n   don't. */\n#undef HAVE_DECL_ISBLANK\n\n/* Define to 1 if you have the declaration of `localtime_r', and to 0 if you\n   don't. */\n#undef HAVE_DECL_LOCALTIME_R\n\n/* Define to 1 if you have the declaration of `mbrtowc', and to 0 if you\n   don't. */\n#undef HAVE_DECL_MBRTOWC\n\n/* Define to 1 if you have the declaration of `mbsinit', and to 0 if you\n   don't. */\n#undef HAVE_DECL_MBSINIT\n\n/* Define to 1 if you have the declaration of `mbsrtowcs', and to 0 if you\n   don't. */\n#undef HAVE_DECL_MBSRTOWCS\n\n/* Define to 1 if you have the declaration of `memrchr', and to 0 if you\n   don't. */\n#undef HAVE_DECL_MEMRCHR\n\n/* Define to 1 if you have the declaration of `program_invocation_name', and\n   to 0 if you don't. */\n#undef HAVE_DECL_PROGRAM_INVOCATION_NAME\n\n/* Define to 1 if you have the declaration of `program_invocation_short_name',\n   and to 0 if you don't. */\n#undef HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME\n\n/* Define to 1 if you have the declaration of `round', and to 0 if you don't.\n   */\n#undef HAVE_DECL_ROUND\n\n/* Define to 1 if you have the declaration of `setenv', and to 0 if you don't.\n   */\n#undef HAVE_DECL_SETENV\n\n/* Define to 1 if you have the declaration of `signbit', and to 0 if you\n   don't. */\n#undef HAVE_DECL_SIGNBIT\n\n/* Define to 1 if you have the declaration of `snprintf', and to 0 if you\n   don't. */\n#undef HAVE_DECL_SNPRINTF\n\n/* Define to 1 if you have the declaration of `strdup', and to 0 if you don't.\n   */\n#undef HAVE_DECL_STRDUP\n\n/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you\n   don't. */\n#undef HAVE_DECL_STRERROR_R\n\n/* Define to 1 if you have the declaration of `strmode', and to 0 if you\n   don't. */\n#undef HAVE_DECL_STRMODE\n\n/* Define to 1 if you have the declaration of `strncasecmp', and to 0 if you\n   don't. */\n#undef HAVE_DECL_STRNCASECMP\n\n/* Define to 1 if you have the declaration of `strndup', and to 0 if you\n   don't. */\n#undef HAVE_DECL_STRNDUP\n\n/* Define to 1 if you have the declaration of `strnlen', and to 0 if you\n   don't. */\n#undef HAVE_DECL_STRNLEN\n\n/* Define to 1 if you have the declaration of `strsignal', and to 0 if you\n   don't. */\n#undef HAVE_DECL_STRSIGNAL\n\n/* Define to 1 if you have the declaration of `sys_siglist', and to 0 if you\n   don't. */\n#undef HAVE_DECL_SYS_SIGLIST\n\n/* Define to 1 if you have the declaration of `tgamma', and to 0 if you don't.\n   */\n#undef HAVE_DECL_TGAMMA\n\n/* Define to 1 if you have the declaration of `towlower', and to 0 if you\n   don't. */\n#undef HAVE_DECL_TOWLOWER\n\n/* Define to 1 if you have the declaration of `tzname', and to 0 if you don't.\n   */\n#undef HAVE_DECL_TZNAME\n\n/* Define to 1 if you have the declaration of `unsetenv', and to 0 if you\n   don't. */\n#undef HAVE_DECL_UNSETENV\n\n/* Define to 1 if you have the declaration of `_putenv', and to 0 if you\n   don't. */\n#undef HAVE_DECL__PUTENV\n\n/* Define to 1 if you have the declaration of `_snprintf', and to 0 if you\n   don't. */\n#undef HAVE_DECL__SNPRINTF\n\n/* Define to 1 if you have the declaration of `_sys_siglist', and to 0 if you\n   don't. */\n#undef HAVE_DECL__SYS_SIGLIST\n\n/* Define to 1 if you have the declaration of `__argv', and to 0 if you don't.\n   */\n#undef HAVE_DECL___ARGV\n\n/* Define to 1 if the system has the type `dev_t'. */\n#undef HAVE_DEV_T\n\n/* Define to 1 if you have the <direct.h> header file. */\n#undef HAVE_DIRECT_H\n\n/* Define to 1 if you have the <dirent.h> header file. */\n#undef HAVE_DIRENT_H\n\n/* Define to 1 if you have the `dirfd' function. */\n#undef HAVE_DIRFD\n\n/* Define to 1 if you have the <dlfcn.h> header file. */\n#undef HAVE_DLFCN_H\n\n/* Define to 1 if your system has dlopen, dlsym, dlerror, and dlclose for\n   dynamic linking. */\n#undef HAVE_DLOPEN_API\n\n/* Define to 1 if you have the `dup2' function. */\n#undef HAVE_DUP2\n\n/* Define to 1 if your system has dyld for dynamic linking. */\n#undef HAVE_DYLD_API\n\n/* Define to 1 if C++ supports dynamic auto arrays. */\n#undef HAVE_DYNAMIC_AUTO_ARRAYS\n\n/* Define to 1 if you have the `endgrent' function. */\n#undef HAVE_ENDGRENT\n\n/* Define to 1 if you have the `endpwent' function. */\n#undef HAVE_ENDPWENT\n\n/* Define if you have the declaration of environ. */\n#undef HAVE_ENVIRON_DECL\n\n/* Define to 1 if you have the `erf' function. */\n#undef HAVE_ERF\n\n/* Define to 1 if you have the `erfc' function. */\n#undef HAVE_ERFC\n\n/* Define to 1 if you have the `erfcf' function. */\n#undef HAVE_ERFCF\n\n/* Define to 1 if you have the `erff' function. */\n#undef HAVE_ERFF\n\n/* Define to 1 if you have the `execvp' function. */\n#undef HAVE_EXECVP\n\n/* Define to 1 if you have the `exp2' function. */\n#undef HAVE_EXP2\n\n/* Define to 1 if you have the `exp2f' function. */\n#undef HAVE_EXP2F\n\n/* Define to 1 if you have the `expm1' function. */\n#undef HAVE_EXPM1\n\n/* Define to 1 if you have the `expm1f' function. */\n#undef HAVE_EXPM1F\n\n/* Define to 1 if you have the `fchdir' function. */\n#undef HAVE_FCHDIR\n\n/* Define to 1 if you have the `fcntl' function. */\n#undef HAVE_FCNTL\n\n/* Define to 1 if you have the `fdopendir' function. */\n#undef HAVE_FDOPENDIR\n\n/* Define to 1 if you have the <features.h> header file. */\n#undef HAVE_FEATURES_H\n\n/* Define if you have both FFTW3 and FFTW3F libraries. */\n#undef HAVE_FFTW\n\n/* Define to 1 if FFTW3 is available. */\n#undef HAVE_FFTW3\n\n/* Define to 1 if FFTW3F is available. */\n#undef HAVE_FFTW3F\n\n/* Define to 1 if FFTW3F has multi-threading support. */\n#undef HAVE_FFTW3F_THREADS\n\n/* Define to 1 if you have the <fftw3.h> header file. */\n#undef HAVE_FFTW3_H\n\n/* Define to 1 if FFTW3 has multi-threading support. */\n#undef HAVE_FFTW3_THREADS\n\n/* Define to 1 if you have the `finite' function. */\n#undef HAVE_FINITE\n\n/* Define to 1 if you have the <floatingpoint.h> header file. */\n#undef HAVE_FLOATINGPOINT_H\n\n/* Define to 1 if FLTK is available. */\n#undef HAVE_FLTK\n\n/* Define to 1 if you have the <fnmatch.h> header file. */\n#undef HAVE_FNMATCH_H\n\n/* Define to 1 if fontconfig is present. */\n#undef HAVE_FONTCONFIG\n\n/* Define to 1 if you have the `fork' function. */\n#undef HAVE_FORK\n\n/* Define to 1 if you have the <fpu_control.h> header file. */\n#undef HAVE_FPU_CONTROL_H\n\n/* Define to 1 if framework CARBON is available. */\n#undef HAVE_FRAMEWORK_CARBON\n\n/* Define to 1 if framework OPENGL is available. */\n#undef HAVE_FRAMEWORK_OPENGL\n\n/* Define to 1 if you have Freetype library. */\n#undef HAVE_FREETYPE\n\n/* Define if the frexp() function is available and works. */\n#undef HAVE_FREXP\n\n/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */\n#undef HAVE_FSEEKO\n\n/* Define to 1 if you have the `fstatat' function. */\n#undef HAVE_FSTATAT\n\n/* Define to 1 if you have the `ftruncate' function. */\n#undef HAVE_FTRUNCATE\n\n/* Define to 1 if you have the `FT_Reference_Face' function. */\n#undef HAVE_FT_REFERENCE_FACE\n\n/* Define to 1 if getcwd works, but with shorter paths than is generally\n   tested with the replacement. */\n#undef HAVE_GETCWD_SHORTER\n\n/* Define to 1 if you have the `getdtablesize' function. */\n#undef HAVE_GETDTABLESIZE\n\n/* Define to 1 if you have the `getegid' function. */\n#undef HAVE_GETEGID\n\n/* Define to 1 if you have the `geteuid' function. */\n#undef HAVE_GETEUID\n\n/* Define to 1 if you have the `getexecname' function. */\n#undef HAVE_GETEXECNAME\n\n/* Define to 1 if you have the `getgid' function. */\n#undef HAVE_GETGID\n\n/* Define to 1 if you have the `getgrent' function. */\n#undef HAVE_GETGRENT\n\n/* Define to 1 if you have the `getgrgid' function. */\n#undef HAVE_GETGRGID\n\n/* Define to 1 if you have the `getgrnam' function. */\n#undef HAVE_GETGRNAM\n\n/* Define to 1 if you have the `gethostname' function. */\n#undef HAVE_GETHOSTNAME\n\n/* Define to 1 if you have the `getlogin_r' function. */\n#undef HAVE_GETLOGIN_R\n\n/* Define to 1 if you have the <getopt.h> header file. */\n#undef HAVE_GETOPT_H\n\n/* Define to 1 if you have the `getopt_long_only' function. */\n#undef HAVE_GETOPT_LONG_ONLY\n\n/* Define to 1 if you have the `getpagesize' function. */\n#undef HAVE_GETPAGESIZE\n\n/* Define to 1 if you have the `getpgrp' function. */\n#undef HAVE_GETPGRP\n\n/* Define to 1 if you have the `getpid' function. */\n#undef HAVE_GETPID\n\n/* Define to 1 if you have the `getppid' function. */\n#undef HAVE_GETPPID\n\n/* Define to 1 if you have the `getprogname' function. */\n#undef HAVE_GETPROGNAME\n\n/* Define to 1 if you have the `getpwent' function. */\n#undef HAVE_GETPWENT\n\n/* Define to 1 if you have the `getpwnam' function. */\n#undef HAVE_GETPWNAM\n\n/* Define to 1 if you have the `getpwnam_r' function. */\n#undef HAVE_GETPWNAM_R\n\n/* Define to 1 if you have the `getpwuid' function. */\n#undef HAVE_GETPWUID\n\n/* Define to 1 if you have the `getrusage' function. */\n#undef HAVE_GETRUSAGE\n\n/* Define to 1 if you have the `gettimeofday' function. */\n#undef HAVE_GETTIMEOFDAY\n\n/* Define to 1 if you have the `getuid' function. */\n#undef HAVE_GETUID\n\n/* Define to 1 if you have the <gl2ps.h> header file. */\n#undef HAVE_GL2PS_H\n\n/* Define to 1 if you have the <glob.h> header file. */\n#undef HAVE_GLOB_H\n\n/* Define to 1 if GLPK is available. */\n#undef HAVE_GLPK\n\n/* Define to 1 if you have the <glpk/glpk.h> header file. */\n#undef HAVE_GLPK_GLPK_H\n\n/* Define to 1 if you have the <glpk.h> header file. */\n#undef HAVE_GLPK_H\n\n/* Define to 1 if gluTessCallback is called with (...). */\n#undef HAVE_GLUTESSCALLBACK_THREEDOTS\n\n/* Define to 1 if you have the <GL/glext.h> header file. */\n#undef HAVE_GL_GLEXT_H\n\n/* Define to 1 if you have the <GL/glu.h> header file. */\n#undef HAVE_GL_GLU_H\n\n/* Define to 1 if you have the <GL/gl.h> header file. */\n#undef HAVE_GL_GL_H\n\n/* Define to 1 if you have the <GL/osmesa.h> header file. */\n#undef HAVE_GL_OSMESA_H\n\n/* Define to 1 if you have the <grp.h> header file. */\n#undef HAVE_GRP_H\n\n/* Define to 1 if HDF5 is available and newer than version 1.6. */\n#undef HAVE_HDF5\n\n/* Define to 1 if >=HDF5-1.8 is available. */\n#undef HAVE_HDF5_18\n\n/* Define to 1 if you have the <hdf5.h> header file. */\n#undef HAVE_HDF5_H\n\n/* Define to 1 if/when HDF5 supports automatic conversion between integer and\n   floating-point binary data. */\n#undef HAVE_HDF5_INT2FLOAT_CONVERSIONS\n\n/* Define to 1 if you have the `hypotf' function. */\n#undef HAVE_HYPOTF\n\n/* Define to 1 if your system uses IEEE 754 data format. */\n#undef HAVE_IEEE754_DATA_FORMAT\n\n/* Define to 1 if you have the <ieeefp.h> header file. */\n#undef HAVE_IEEEFP_H\n\n/* Define to 1 if the system has the type `ino_t'. */\n#undef HAVE_INO_T\n\n/* Define if you have the 'intmax_t' type in <stdint.h> or <inttypes.h>. */\n#undef HAVE_INTMAX_T\n\n/* Define to 1 if you have the <inttypes.h> header file. */\n#undef HAVE_INTTYPES_H\n\n/* Define if <inttypes.h> exists, doesn't clash with <sys/types.h>, and\n   declares uintmax_t. */\n#undef HAVE_INTTYPES_H_WITH_UINTMAX\n\n/* Define to 1 if you have the `isascii' function. */\n#undef HAVE_ISASCII\n\n/* Define to 1 if you have the `isblank' function. */\n#undef HAVE_ISBLANK\n\n/* Define to 1 if you have the `isinf' function. */\n#undef HAVE_ISINF\n\n/* Define to 1 if you have the `isnan' function. */\n#undef HAVE_ISNAN\n\n/* Define if the isnan(double) function is available in libc. */\n#undef HAVE_ISNAND_IN_LIBC\n\n/* Define to 1 if you have the `issetugid' function. */\n#undef HAVE_ISSETUGID\n\n/* Define to 1 if you have the `iswcntrl' function. */\n#undef HAVE_ISWCNTRL\n\n/* Define to 1 if you have the `iswctype' function. */\n#undef HAVE_ISWCTYPE\n\n/* Define to 1 if Java is available and is at least version 1.5 */\n#undef HAVE_JAVA\n\n/* Define to 1 if you have the `kill' function. */\n#undef HAVE_KILL\n\n/* Define if you have <langinfo.h> and nl_langinfo(CODESET). */\n#undef HAVE_LANGINFO_CODESET\n\n/* Define if you have LAPACK library. */\n#undef HAVE_LAPACK\n\n/* Define to 1 if you have the `lgamma' function. */\n#undef HAVE_LGAMMA\n\n/* Define to 1 if you have the `lgammaf' function. */\n#undef HAVE_LGAMMAF\n\n/* Define to 1 if you have the `lgammaf_r' function. */\n#undef HAVE_LGAMMAF_R\n\n/* Define to 1 if you have the `lgamma_r' function. */\n#undef HAVE_LGAMMA_R\n\n/* Define to 1 if you have the `dirent' library (-ldirent). */\n#undef HAVE_LIBDIRENT\n\n/* Define to 1 if you have the `m' library (-lm). */\n#undef HAVE_LIBM\n\n/* Define to 1 if you have the <libqhull.h> header file. */\n#undef HAVE_LIBQHULL_H\n\n/* Define to 1 if you have the <libqhull/libqhull.h> header file. */\n#undef HAVE_LIBQHULL_LIBQHULL_H\n\n/* Define to 1 if you have the `sun' library (-lsun). */\n#undef HAVE_LIBSUN\n\n/* Define to 1 if you have the <libutil.h> header file. */\n#undef HAVE_LIBUTIL_H\n\n/* Define to 1 if you have the <limits.h> header file. */\n#undef HAVE_LIMITS_H\n\n/* Define to 1 if you have the `link' function. */\n#undef HAVE_LINK\n\n/* Define to 1 if LLVM is available. */\n#undef HAVE_LLVM\n\n/* Define to 1 if you have the <llvm/DataLayout.h> header file. */\n#undef HAVE_LLVM_DATALAYOUT_H\n\n/* Define to 1 if you have the <llvm/Function.h> header file. */\n#undef HAVE_LLVM_FUNCTION_H\n\n/* Define to 1 if you have the <llvm/IRBuilder.h> header file. */\n#undef HAVE_LLVM_IRBUILDER_H\n\n/* Define to 1 if you have the <llvm/IR/DataLayout.h> header file. */\n#undef HAVE_LLVM_IR_DATALAYOUT_H\n\n/* Define to 1 if you have the <llvm/IR/Function.h> header file. */\n#undef HAVE_LLVM_IR_FUNCTION_H\n\n/* Define to 1 if you have the <llvm/IR/IRBuilder.h> header file. */\n#undef HAVE_LLVM_IR_IRBUILDER_H\n\n/* Define to 1 if you have the <llvm/IR/Verifier.h> header file. */\n#undef HAVE_LLVM_IR_VERIFIER_H\n\n/* Define to 1 if you have the <llvm/Support/IRBuilder.h> header file. */\n#undef HAVE_LLVM_SUPPORT_IRBUILDER_H\n\n/* Define to 1 if you have the <llvm/Target/TargetData.h> header file. */\n#undef HAVE_LLVM_TARGET_TARGETDATA_H\n\n/* Define to 1 if your system has LoadLibrary for dynamic linking. */\n#undef HAVE_LOADLIBRARY_API\n\n/* Define to 1 if you have the <locale.h> header file. */\n#undef HAVE_LOCALE_H\n\n/* Define to 1 if you have the `localtime_r' function. */\n#undef HAVE_LOCALTIME_R\n\n/* Define to 1 if you have the `log1p' function. */\n#undef HAVE_LOG1P\n\n/* Define to 1 if you have the `log1pf' function. */\n#undef HAVE_LOG1PF\n\n/* Define to 1 if you have the `log2' function. */\n#undef HAVE_LOG2\n\n/* Define to 1 if you have the `log2f' function. */\n#undef HAVE_LOG2F\n\n/* Define to 1 if you support file names longer than 14 characters. */\n#undef HAVE_LONG_FILE_NAMES\n\n/* Define to 1 if the system has the type 'long long int'. */\n#undef HAVE_LONG_LONG_INT\n\n/* Define to 1 if you have the `lstat' function. */\n#undef HAVE_LSTAT\n\n/* Define to 1 if Graphics/ImageMagick++ is available. */\n#undef HAVE_MAGICK\n\n/* Define to 1 if your system has a GNU libc compatible 'malloc' function, and\n   to 0 otherwise. */\n#undef HAVE_MALLOC_GNU\n\n/* Define if the 'malloc' function is POSIX compliant. */\n#undef HAVE_MALLOC_POSIX\n\n/* Define to 1 if mmap()'s MAP_ANONYMOUS flag is available after including\n   config.h and <sys/mman.h>. */\n#undef HAVE_MAP_ANONYMOUS\n\n/* Define to 1 if defines such as M_PI are available in math.h */\n#undef HAVE_MATH_DEFINES\n\n/* Define to 1 if you have the <math.h> header file. */\n#undef HAVE_MATH_H\n\n/* Define to 1 if you have the `mbrtowc' function. */\n#undef HAVE_MBRTOWC\n\n/* Define to 1 if you have the `mbsinit' function. */\n#undef HAVE_MBSINIT\n\n/* Define to 1 if you have the `mbsrtowcs' function. */\n#undef HAVE_MBSRTOWCS\n\n/* Define to 1 if <wchar.h> declares mbstate_t. */\n#undef HAVE_MBSTATE_T\n\n/* Define to 1 if you have the <memory.h> header file. */\n#undef HAVE_MEMORY_H\n\n/* Define to 1 if you have the `mempcpy' function. */\n#undef HAVE_MEMPCPY\n\n/* Define to 1 if you have the `memrchr' function. */\n#undef HAVE_MEMRCHR\n\n/* Define to 1 if getcwd minimally works, that is, its result can be trusted\n   when it succeeds. */\n#undef HAVE_MINIMALLY_WORKING_GETCWD\n\n/* Define to 1 if <limits.h> defines the MIN and MAX macros. */\n#undef HAVE_MINMAX_IN_LIMITS_H\n\n/* Define to 1 if <sys/param.h> defines the MIN and MAX macros. */\n#undef HAVE_MINMAX_IN_SYS_PARAM_H\n\n/* Define to 1 if you have the `mkfifo' function. */\n#undef HAVE_MKFIFO\n\n/* Define to 1 if you have the `mkostemp' function. */\n#undef HAVE_MKOSTEMP\n\n/* Define to 1 if you have the `mmap' function. */\n#undef HAVE_MMAP\n\n/* Define to 1 if you have the `modf' function. */\n#undef HAVE_MODF\n\n/* Define to 1 if you have the `mprotect' function. */\n#undef HAVE_MPROTECT\n\n/* Define to 1 on MSVC platforms that have the \"invalid parameter handler\"\n   concept. */\n#undef HAVE_MSVC_INVALID_PARAMETER_HANDLER\n\n/* Define to 1 if you have the `munmap' function. */\n#undef HAVE_MUNMAP\n\n/* Define to 1 if you have the <ncurses.h> header file. */\n#undef HAVE_NCURSES_H\n\n/* Define to 1 if you have the <ndir.h> header file, and it defines `DIR'. */\n#undef HAVE_NDIR_H\n\n/* Define to 1 if you have the <netdb.h> header file. */\n#undef HAVE_NETDB_H\n\n/* Define to 1 if you have the `omp_get_num_threads' function. */\n#undef HAVE_OMP_GET_NUM_THREADS\n\n/* Define to 1 if you have the <omp.h> header file. */\n#undef HAVE_OMP_H\n\n/* Define to 1 if you have the `openat' function. */\n#undef HAVE_OPENAT\n\n/* Define to 1 if you have the `opendir' function. */\n#undef HAVE_OPENDIR\n\n/* Define to 1 if OpenGL is available. */\n#undef HAVE_OPENGL\n\n/* Define to 1 if you have the <OpenGL/glext.h> header file. */\n#undef HAVE_OPENGL_GLEXT_H\n\n/* Define to 1 if you have the <OpenGL/glu.h> header file. */\n#undef HAVE_OPENGL_GLU_H\n\n/* Define to 1 if you have the <OpenGL/gl.h> header file. */\n#undef HAVE_OPENGL_GL_H\n\n/* Define whether openpty exists */\n#undef HAVE_OPENPTY\n\n/* Define to 1 if libcrypto is used for MD5. */\n#undef HAVE_OPENSSL_MD5\n\n/* Define to 1 if libcrypto is used for SHA1. */\n#undef HAVE_OPENSSL_SHA1\n\n/* Define to 1 if libcrypto is used for SHA256. */\n#undef HAVE_OPENSSL_SHA256\n\n/* Define to 1 if libcrypto is used for SHA512. */\n#undef HAVE_OPENSSL_SHA512\n\n/* Define to 1 if OSMesa is available. */\n#undef HAVE_OSMESA\n\n/* Define to 1 if you have the <osmesa.h> header file. */\n#undef HAVE_OSMESA_H\n\n/* Define to 1 if getcwd works, except it sometimes fails when it shouldn't,\n   setting errno to ERANGE, ENAMETOOLONG, or ENOENT. */\n#undef HAVE_PARTLY_WORKING_GETCWD\n\n/* Define to 1 if you have the `pathconf' function. */\n#undef HAVE_PATHCONF\n\n/* Define to 1 if you have the `pcre_compile' function. */\n#undef HAVE_PCRE_COMPILE\n\n/* Define to 1 if you have the <pcre.h> header file. */\n#undef HAVE_PCRE_H\n\n/* Define to 1 if you have the <pcre/pcre.h> header file. */\n#undef HAVE_PCRE_PCRE_H\n\n/* Define to 1 if you have the `pipe' function. */\n#undef HAVE_PIPE\n\n/* Define to 1 if you have the <poll.h> header file. */\n#undef HAVE_POLL_H\n\n/* Define to 1 if PortAudio is available. */\n#undef HAVE_PORTAUDIO\n\n/* Define to 1 if you have the <portaudio.h> header file. */\n#undef HAVE_PORTAUDIO_H\n\n/* Define to 1 if you have the `pow' function. */\n#undef HAVE_POW\n\n/* define if GCC supports #pragma GCC diagnostic ... */\n#undef HAVE_PRAGMA_GCC_DIAGNOSTIC\n\n/* Define to 1 if you have the `pstat_getdynamic' function. */\n#undef HAVE_PSTAT_GETDYNAMIC\n\n/* Define if you have POSIX threads libraries and header files. */\n#undef HAVE_PTHREAD\n\n/* Define to 1 if you have the <pthread.h> header file. */\n#undef HAVE_PTHREAD_H\n\n/* Define if the <pthread.h> defines PTHREAD_MUTEX_RECURSIVE. */\n#undef HAVE_PTHREAD_MUTEX_RECURSIVE\n\n/* Have PTHREAD_PRIO_INHERIT. */\n#undef HAVE_PTHREAD_PRIO_INHERIT\n\n/* Define if the POSIX multithreading library has read/write locks. */\n#undef HAVE_PTHREAD_RWLOCK\n\n/* Define to 1 if the system has the type `ptrdiff_t'. */\n#undef HAVE_PTRDIFF_T\n\n/* Define to 1 if you have the <pty.h> header file. */\n#undef HAVE_PTY_H\n\n/* Define to 1 if you have the <pwd.h> header file. */\n#undef HAVE_PWD_H\n\n/* Define to 1 if Qt has the QAbstractItemModel::beginResetModel() function.\n   */\n#undef HAVE_QABSTRACTITEMMODEL_BEGINRESETMODEL\n\n/* Define to 1 if Qt provides QFont::ForceIntegerMetrics. */\n#undef HAVE_QFONT_FORCE_INTEGER_METRICS\n\n/* Define to 1 if Qt provides QFont::Monospace. */\n#undef HAVE_QFONT_MONOSPACE\n\n/* Define to 1 if Qhull is available. */\n#undef HAVE_QHULL\n\n/* Define to 1 if you have the <qhull.h> header file. */\n#undef HAVE_QHULL_H\n\n/* Define to 1 if you have the <qhull/libqhull.h> header file. */\n#undef HAVE_QHULL_LIBQHULL_H\n\n/* Define to 1 if you have the <qhull/qhull.h> header file. */\n#undef HAVE_QHULL_QHULL_H\n\n/* Define to 1 if qrupdate is available. */\n#undef HAVE_QRUPDATE\n\n/* Define to 1 if qrupdate supports LU updates. */\n#undef HAVE_QRUPDATE_LUU\n\n/* Define to 1 if the QScintilla library and header files are available. */\n#undef HAVE_QSCINTILLA\n\n/* Define to 1 if Qsci has the QsciScintilla::findFirstInSelection function.\n   */\n#undef HAVE_QSCI_FINDSELECTION\n\n/* Define to 1 if you have the <Qsci/qscilexermatlab.h> header file. */\n#undef HAVE_QSCI_QSCILEXERMATLAB_H\n\n/* Define to 1 if you have the <Qsci/qscilexeroctave.h> header file. */\n#undef HAVE_QSCI_QSCILEXEROCTAVE_H\n\n/* Define to 1 if QScintilla is of Version 2.6.0 or later. */\n#undef HAVE_QSCI_VERSION_2_6_0\n\n/* Define to 1 if Qt is available, with all required functions, libraries,\n   developer header files, and utility programs (moc, uic, rcc, and lrelease).\n   */\n#undef HAVE_QT\n\n/* Define if you are using Qt version 4. */\n#undef HAVE_QT4\n\n/* Define if you are using Qt version 5. */\n#undef HAVE_QT5\n\n/* Define to 1 if Qt has the QTabWidget::setMovable function. */\n#undef HAVE_QTABWIDGET_SETMOVABLE\n\n/* Define to 1 if Qt works with OpenGL libs (GL and GLU) */\n#undef HAVE_QT_GRAPHICS\n\n/* Define to 1 if you have the `raise' function. */\n#undef HAVE_RAISE\n\n/* Define to 1 if accept is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ACCEPT\n\n/* Define to 1 if accept4 is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ACCEPT4\n\n/* Define to 1 if acosf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ACOSF\n\n/* Define to 1 if acosl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ACOSL\n\n/* Define to 1 if alphasort is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ALPHASORT\n\n/* Define to 1 if asinf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ASINF\n\n/* Define to 1 if asinl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ASINL\n\n/* Define to 1 if atanf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ATANF\n\n/* Define to 1 if atanl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ATANL\n\n/* Define to 1 if atoll is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ATOLL\n\n/* Define to 1 if bind is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_BIND\n\n/* Define to 1 if btowc is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_BTOWC\n\n/* Define to 1 if canonicalize_file_name is declared even after undefining\n   macros. */\n#undef HAVE_RAW_DECL_CANONICALIZE_FILE_NAME\n\n/* Define to 1 if cbrt is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_CBRT\n\n/* Define to 1 if cbrtf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_CBRTF\n\n/* Define to 1 if cbrtl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_CBRTL\n\n/* Define to 1 if ceilf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_CEILF\n\n/* Define to 1 if ceill is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_CEILL\n\n/* Define to 1 if chdir is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_CHDIR\n\n/* Define to 1 if chown is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_CHOWN\n\n/* Define to 1 if closedir is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_CLOSEDIR\n\n/* Define to 1 if connect is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_CONNECT\n\n/* Define to 1 if copysign is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_COPYSIGN\n\n/* Define to 1 if copysignf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_COPYSIGNF\n\n/* Define to 1 if copysignl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_COPYSIGNL\n\n/* Define to 1 if cosf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_COSF\n\n/* Define to 1 if coshf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_COSHF\n\n/* Define to 1 if cosl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_COSL\n\n/* Define to 1 if dirfd is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_DIRFD\n\n/* Define to 1 if dprintf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_DPRINTF\n\n/* Define to 1 if dup is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_DUP\n\n/* Define to 1 if dup2 is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_DUP2\n\n/* Define to 1 if dup3 is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_DUP3\n\n/* Define to 1 if endusershell is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ENDUSERSHELL\n\n/* Define to 1 if environ is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ENVIRON\n\n/* Define to 1 if euidaccess is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_EUIDACCESS\n\n/* Define to 1 if exp2 is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_EXP2\n\n/* Define to 1 if exp2f is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_EXP2F\n\n/* Define to 1 if exp2l is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_EXP2L\n\n/* Define to 1 if expf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_EXPF\n\n/* Define to 1 if expl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_EXPL\n\n/* Define to 1 if expm1 is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_EXPM1\n\n/* Define to 1 if expm1f is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_EXPM1F\n\n/* Define to 1 if expm1l is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_EXPM1L\n\n/* Define to 1 if fabsf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FABSF\n\n/* Define to 1 if fabsl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FABSL\n\n/* Define to 1 if faccessat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FACCESSAT\n\n/* Define to 1 if fchdir is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FCHDIR\n\n/* Define to 1 if fchmodat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FCHMODAT\n\n/* Define to 1 if fchownat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FCHOWNAT\n\n/* Define to 1 if fcntl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FCNTL\n\n/* Define to 1 if fdatasync is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FDATASYNC\n\n/* Define to 1 if fdopendir is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FDOPENDIR\n\n/* Define to 1 if ffs is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FFS\n\n/* Define to 1 if ffsl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FFSL\n\n/* Define to 1 if ffsll is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FFSLL\n\n/* Define to 1 if floorf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FLOORF\n\n/* Define to 1 if floorl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FLOORL\n\n/* Define to 1 if fma is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FMA\n\n/* Define to 1 if fmaf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FMAF\n\n/* Define to 1 if fmal is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FMAL\n\n/* Define to 1 if fmod is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FMOD\n\n/* Define to 1 if fmodf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FMODF\n\n/* Define to 1 if fmodl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FMODL\n\n/* Define to 1 if fpurge is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FPURGE\n\n/* Define to 1 if frexpf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FREXPF\n\n/* Define to 1 if frexpl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FREXPL\n\n/* Define to 1 if fseeko is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FSEEKO\n\n/* Define to 1 if fstat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FSTAT\n\n/* Define to 1 if fstatat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FSTATAT\n\n/* Define to 1 if fsync is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FSYNC\n\n/* Define to 1 if ftello is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FTELLO\n\n/* Define to 1 if ftruncate is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FTRUNCATE\n\n/* Define to 1 if futimens is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_FUTIMENS\n\n/* Define to 1 if getcwd is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETCWD\n\n/* Define to 1 if getdelim is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETDELIM\n\n/* Define to 1 if getdomainname is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETDOMAINNAME\n\n/* Define to 1 if getdtablesize is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETDTABLESIZE\n\n/* Define to 1 if getgroups is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETGROUPS\n\n/* Define to 1 if gethostname is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETHOSTNAME\n\n/* Define to 1 if getline is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETLINE\n\n/* Define to 1 if getloadavg is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETLOADAVG\n\n/* Define to 1 if getlogin is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETLOGIN\n\n/* Define to 1 if getlogin_r is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETLOGIN_R\n\n/* Define to 1 if getpagesize is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETPAGESIZE\n\n/* Define to 1 if getpeername is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETPEERNAME\n\n/* Define to 1 if getrusage is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETRUSAGE\n\n/* Define to 1 if gets is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETS\n\n/* Define to 1 if getsockname is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETSOCKNAME\n\n/* Define to 1 if getsockopt is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETSOCKOPT\n\n/* Define to 1 if getsubopt is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETSUBOPT\n\n/* Define to 1 if gettimeofday is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETTIMEOFDAY\n\n/* Define to 1 if getusershell is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GETUSERSHELL\n\n/* Define to 1 if grantpt is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GRANTPT\n\n/* Define to 1 if group_member is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_GROUP_MEMBER\n\n/* Define to 1 if hypotf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_HYPOTF\n\n/* Define to 1 if hypotl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_HYPOTL\n\n/* Define to 1 if ilogb is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ILOGB\n\n/* Define to 1 if ilogbf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ILOGBF\n\n/* Define to 1 if ilogbl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ILOGBL\n\n/* Define to 1 if initstate is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_INITSTATE\n\n/* Define to 1 if initstate_r is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_INITSTATE_R\n\n/* Define to 1 if isatty is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ISATTY\n\n/* Define to 1 if iswctype is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ISWCTYPE\n\n/* Define to 1 if lchmod is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LCHMOD\n\n/* Define to 1 if lchown is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LCHOWN\n\n/* Define to 1 if ldexpf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LDEXPF\n\n/* Define to 1 if ldexpl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LDEXPL\n\n/* Define to 1 if link is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LINK\n\n/* Define to 1 if linkat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LINKAT\n\n/* Define to 1 if listen is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LISTEN\n\n/* Define to 1 if log is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LOG\n\n/* Define to 1 if log10 is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LOG10\n\n/* Define to 1 if log10f is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LOG10F\n\n/* Define to 1 if log10l is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LOG10L\n\n/* Define to 1 if log1p is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LOG1P\n\n/* Define to 1 if log1pf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LOG1PF\n\n/* Define to 1 if log1pl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LOG1PL\n\n/* Define to 1 if log2 is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LOG2\n\n/* Define to 1 if log2f is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LOG2F\n\n/* Define to 1 if log2l is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LOG2L\n\n/* Define to 1 if logb is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LOGB\n\n/* Define to 1 if logbf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LOGBF\n\n/* Define to 1 if logbl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LOGBL\n\n/* Define to 1 if logf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LOGF\n\n/* Define to 1 if logl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LOGL\n\n/* Define to 1 if lseek is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LSEEK\n\n/* Define to 1 if lstat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_LSTAT\n\n/* Define to 1 if mbrlen is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MBRLEN\n\n/* Define to 1 if mbrtowc is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MBRTOWC\n\n/* Define to 1 if mbsinit is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MBSINIT\n\n/* Define to 1 if mbsnrtowcs is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MBSNRTOWCS\n\n/* Define to 1 if mbsrtowcs is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MBSRTOWCS\n\n/* Define to 1 if memmem is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MEMMEM\n\n/* Define to 1 if mempcpy is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MEMPCPY\n\n/* Define to 1 if memrchr is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MEMRCHR\n\n/* Define to 1 if mkdirat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MKDIRAT\n\n/* Define to 1 if mkdtemp is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MKDTEMP\n\n/* Define to 1 if mkfifo is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MKFIFO\n\n/* Define to 1 if mkfifoat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MKFIFOAT\n\n/* Define to 1 if mknod is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MKNOD\n\n/* Define to 1 if mknodat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MKNODAT\n\n/* Define to 1 if mkostemp is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MKOSTEMP\n\n/* Define to 1 if mkostemps is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MKOSTEMPS\n\n/* Define to 1 if mkstemp is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MKSTEMP\n\n/* Define to 1 if mkstemps is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MKSTEMPS\n\n/* Define to 1 if modf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MODF\n\n/* Define to 1 if modff is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MODFF\n\n/* Define to 1 if modfl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_MODFL\n\n/* Define to 1 if openat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_OPENAT\n\n/* Define to 1 if opendir is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_OPENDIR\n\n/* Define to 1 if pclose is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_PCLOSE\n\n/* Define to 1 if pipe is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_PIPE\n\n/* Define to 1 if pipe2 is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_PIPE2\n\n/* Define to 1 if popen is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_POPEN\n\n/* Define to 1 if posix_openpt is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_POSIX_OPENPT\n\n/* Define to 1 if powf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_POWF\n\n/* Define to 1 if pread is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_PREAD\n\n/* Define to 1 if pselect is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_PSELECT\n\n/* Define to 1 if pthread_sigmask is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_PTHREAD_SIGMASK\n\n/* Define to 1 if ptsname is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_PTSNAME\n\n/* Define to 1 if ptsname_r is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_PTSNAME_R\n\n/* Define to 1 if pwrite is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_PWRITE\n\n/* Define to 1 if qsort_r is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_QSORT_R\n\n/* Define to 1 if random is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_RANDOM\n\n/* Define to 1 if random_r is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_RANDOM_R\n\n/* Define to 1 if rawmemchr is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_RAWMEMCHR\n\n/* Define to 1 if readdir is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_READDIR\n\n/* Define to 1 if readlink is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_READLINK\n\n/* Define to 1 if readlinkat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_READLINKAT\n\n/* Define to 1 if realpath is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_REALPATH\n\n/* Define to 1 if recv is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_RECV\n\n/* Define to 1 if recvfrom is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_RECVFROM\n\n/* Define to 1 if remainder is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_REMAINDER\n\n/* Define to 1 if remainderf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_REMAINDERF\n\n/* Define to 1 if remainderl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_REMAINDERL\n\n/* Define to 1 if renameat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_RENAMEAT\n\n/* Define to 1 if rewinddir is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_REWINDDIR\n\n/* Define to 1 if rint is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_RINT\n\n/* Define to 1 if rintf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_RINTF\n\n/* Define to 1 if rintl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_RINTL\n\n/* Define to 1 if rmdir is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_RMDIR\n\n/* Define to 1 if round is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ROUND\n\n/* Define to 1 if roundf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ROUNDF\n\n/* Define to 1 if roundl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_ROUNDL\n\n/* Define to 1 if rpmatch is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_RPMATCH\n\n/* Define to 1 if scandir is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SCANDIR\n\n/* Define to 1 if secure_getenv is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SECURE_GETENV\n\n/* Define to 1 if select is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SELECT\n\n/* Define to 1 if send is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SEND\n\n/* Define to 1 if sendto is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SENDTO\n\n/* Define to 1 if setenv is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SETENV\n\n/* Define to 1 if sethostname is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SETHOSTNAME\n\n/* Define to 1 if setsockopt is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SETSOCKOPT\n\n/* Define to 1 if setstate is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SETSTATE\n\n/* Define to 1 if setstate_r is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SETSTATE_R\n\n/* Define to 1 if setusershell is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SETUSERSHELL\n\n/* Define to 1 if shutdown is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SHUTDOWN\n\n/* Define to 1 if sigaction is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SIGACTION\n\n/* Define to 1 if sigaddset is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SIGADDSET\n\n/* Define to 1 if sigdelset is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SIGDELSET\n\n/* Define to 1 if sigemptyset is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SIGEMPTYSET\n\n/* Define to 1 if sigfillset is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SIGFILLSET\n\n/* Define to 1 if sigismember is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SIGISMEMBER\n\n/* Define to 1 if sigpending is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SIGPENDING\n\n/* Define to 1 if sigprocmask is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SIGPROCMASK\n\n/* Define to 1 if sinf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SINF\n\n/* Define to 1 if sinhf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SINHF\n\n/* Define to 1 if sinl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SINL\n\n/* Define to 1 if sleep is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SLEEP\n\n/* Define to 1 if snprintf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SNPRINTF\n\n/* Define to 1 if socket is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SOCKET\n\n/* Define to 1 if sqrtf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SQRTF\n\n/* Define to 1 if sqrtl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SQRTL\n\n/* Define to 1 if srandom is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SRANDOM\n\n/* Define to 1 if srandom_r is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SRANDOM_R\n\n/* Define to 1 if stat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STAT\n\n/* Define to 1 if stpcpy is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STPCPY\n\n/* Define to 1 if stpncpy is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STPNCPY\n\n/* Define to 1 if strcasecmp is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STRCASECMP\n\n/* Define to 1 if strcasestr is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STRCASESTR\n\n/* Define to 1 if strchrnul is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STRCHRNUL\n\n/* Define to 1 if strdup is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STRDUP\n\n/* Define to 1 if strerror_r is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STRERROR_R\n\n/* Define to 1 if strncasecmp is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STRNCASECMP\n\n/* Define to 1 if strncat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STRNCAT\n\n/* Define to 1 if strndup is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STRNDUP\n\n/* Define to 1 if strnlen is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STRNLEN\n\n/* Define to 1 if strpbrk is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STRPBRK\n\n/* Define to 1 if strsep is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STRSEP\n\n/* Define to 1 if strsignal is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STRSIGNAL\n\n/* Define to 1 if strtod is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STRTOD\n\n/* Define to 1 if strtok_r is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STRTOK_R\n\n/* Define to 1 if strtoll is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STRTOLL\n\n/* Define to 1 if strtoull is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STRTOULL\n\n/* Define to 1 if strverscmp is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_STRVERSCMP\n\n/* Define to 1 if symlink is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SYMLINK\n\n/* Define to 1 if symlinkat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_SYMLINKAT\n\n/* Define to 1 if tanf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_TANF\n\n/* Define to 1 if tanhf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_TANHF\n\n/* Define to 1 if tanl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_TANL\n\n/* Define to 1 if times is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_TIMES\n\n/* Define to 1 if tmpfile is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_TMPFILE\n\n/* Define to 1 if towctrans is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_TOWCTRANS\n\n/* Define to 1 if trunc is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_TRUNC\n\n/* Define to 1 if truncf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_TRUNCF\n\n/* Define to 1 if truncl is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_TRUNCL\n\n/* Define to 1 if ttyname_r is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_TTYNAME_R\n\n/* Define to 1 if uname is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_UNAME\n\n/* Define to 1 if unlink is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_UNLINK\n\n/* Define to 1 if unlinkat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_UNLINKAT\n\n/* Define to 1 if unlockpt is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_UNLOCKPT\n\n/* Define to 1 if unsetenv is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_UNSETENV\n\n/* Define to 1 if usleep is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_USLEEP\n\n/* Define to 1 if utimensat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_UTIMENSAT\n\n/* Define to 1 if vdprintf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_VDPRINTF\n\n/* Define to 1 if vsnprintf is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_VSNPRINTF\n\n/* Define to 1 if waitpid is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WAITPID\n\n/* Define to 1 if wcpcpy is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCPCPY\n\n/* Define to 1 if wcpncpy is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCPNCPY\n\n/* Define to 1 if wcrtomb is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCRTOMB\n\n/* Define to 1 if wcscasecmp is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSCASECMP\n\n/* Define to 1 if wcscat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSCAT\n\n/* Define to 1 if wcschr is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSCHR\n\n/* Define to 1 if wcscmp is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSCMP\n\n/* Define to 1 if wcscoll is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSCOLL\n\n/* Define to 1 if wcscpy is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSCPY\n\n/* Define to 1 if wcscspn is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSCSPN\n\n/* Define to 1 if wcsdup is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSDUP\n\n/* Define to 1 if wcslen is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSLEN\n\n/* Define to 1 if wcsncasecmp is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSNCASECMP\n\n/* Define to 1 if wcsncat is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSNCAT\n\n/* Define to 1 if wcsncmp is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSNCMP\n\n/* Define to 1 if wcsncpy is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSNCPY\n\n/* Define to 1 if wcsnlen is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSNLEN\n\n/* Define to 1 if wcsnrtombs is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSNRTOMBS\n\n/* Define to 1 if wcspbrk is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSPBRK\n\n/* Define to 1 if wcsrchr is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSRCHR\n\n/* Define to 1 if wcsrtombs is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSRTOMBS\n\n/* Define to 1 if wcsspn is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSSPN\n\n/* Define to 1 if wcsstr is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSSTR\n\n/* Define to 1 if wcstok is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSTOK\n\n/* Define to 1 if wcswidth is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSWIDTH\n\n/* Define to 1 if wcsxfrm is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCSXFRM\n\n/* Define to 1 if wctob is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCTOB\n\n/* Define to 1 if wctrans is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCTRANS\n\n/* Define to 1 if wctype is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCTYPE\n\n/* Define to 1 if wcwidth is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WCWIDTH\n\n/* Define to 1 if wmemchr is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WMEMCHR\n\n/* Define to 1 if wmemcmp is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WMEMCMP\n\n/* Define to 1 if wmemcpy is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WMEMCPY\n\n/* Define to 1 if wmemmove is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WMEMMOVE\n\n/* Define to 1 if wmemset is declared even after undefining macros. */\n#undef HAVE_RAW_DECL_WMEMSET\n\n/* Define to 1 if _Exit is declared even after undefining macros. */\n#undef HAVE_RAW_DECL__EXIT\n\n/* Define to 1 if you have the `readdir' function. */\n#undef HAVE_READDIR\n\n/* Define to 1 if you have the `readlink' function. */\n#undef HAVE_READLINK\n\n/* Define to 1 if you have the `readlinkat' function. */\n#undef HAVE_READLINKAT\n\n/* Define if the 'realloc' function is POSIX compliant. */\n#undef HAVE_REALLOC_POSIX\n\n/* Define to 1 if you have the `realpath' function. */\n#undef HAVE_REALPATH\n\n/* Define to 1 if you have the `resolvepath' function. */\n#undef HAVE_RESOLVEPATH\n\n/* Define to 1 if you have the `rewinddir' function. */\n#undef HAVE_REWINDDIR\n\n/* Define to 1 if you have the `round' function. */\n#undef HAVE_ROUND\n\n/* Define to 1 if you have the `roundl' function. */\n#undef HAVE_ROUNDL\n\n/* Define to 1 if the system has the type `sa_family_t'. */\n#undef HAVE_SA_FAMILY_T\n\n/* Define to 1 if you have the `sched_getaffinity' function. */\n#undef HAVE_SCHED_GETAFFINITY\n\n/* Define to 1 if sched_getaffinity has a glibc compatible declaration. */\n#undef HAVE_SCHED_GETAFFINITY_LIKE_GLIBC\n\n/* Define to 1 if you have the `sched_getaffinity_np' function. */\n#undef HAVE_SCHED_GETAFFINITY_NP\n\n/* Define to 1 if you have the <search.h> header file. */\n#undef HAVE_SEARCH_H\n\n/* Define to 1 if you have the `secure_getenv' function. */\n#undef HAVE_SECURE_GETENV\n\n/* Define to 1 if you have the `select' function. */\n#undef HAVE_SELECT\n\n/* Define to 1 if you have the `setdtablesize' function. */\n#undef HAVE_SETDTABLESIZE\n\n/* Define to 1 if you have the `setenv' function. */\n#undef HAVE_SETENV\n\n/* Define to 1 if you have the `setgrent' function. */\n#undef HAVE_SETGRENT\n\n/* Define to 1 if you have the `setlocale' function. */\n#undef HAVE_SETLOCALE\n\n/* Define to 1 if you have the Qt SetPlaceholderText function. */\n#undef HAVE_SETPLACEHOLDERTEXT\n\n/* Define to 1 if you have the `setpwent' function. */\n#undef HAVE_SETPWENT\n\n/* Define to 1 if you have the `setsid' function. */\n#undef HAVE_SETSID\n\n/* Define to 1 if you have the `setvbuf' function. */\n#undef HAVE_SETVBUF\n\n/* Define to 1 if you have the <sgtty.h> header file. */\n#undef HAVE_SGTTY_H\n\n/* Define to 1 if your system has shl_load and shl_findsym for dynamic\n   linking. */\n#undef HAVE_SHL_LOAD_API\n\n/* Define to 1 if you have the `shutdown' function. */\n#undef HAVE_SHUTDOWN\n\n/* Define to 1 if you have the `sigaction' function. */\n#undef HAVE_SIGACTION\n\n/* Define to 1 if you have the `sigaltstack' function. */\n#undef HAVE_SIGALTSTACK\n\n/* Define to 1 if the system has the type `siginfo_t'. */\n#undef HAVE_SIGINFO_T\n\n/* Define to 1 if you have the `siginterrupt' function. */\n#undef HAVE_SIGINTERRUPT\n\n/* Define to 1 if you have the `siglongjmp' function. */\n#undef HAVE_SIGLONGJMP\n\n/* Define to 1 if you have the `signbit' function. */\n#undef HAVE_SIGNBIT\n\n/* Define to 1 if 'sig_atomic_t' is a signed integer type. */\n#undef HAVE_SIGNED_SIG_ATOMIC_T\n\n/* Define to 1 if 'wchar_t' is a signed integer type. */\n#undef HAVE_SIGNED_WCHAR_T\n\n/* Define to 1 if 'wint_t' is a signed integer type. */\n#undef HAVE_SIGNED_WINT_T\n\n/* Define to 1 if the system has the type `sigset_t'. */\n#undef HAVE_SIGSET_T\n\n/* Define to 1 if sndfile is available. */\n#undef HAVE_SNDFILE\n\n/* Define to 1 if you have the <sndfile.h> header file. */\n#undef HAVE_SNDFILE_H\n\n/* Define to 1 if you have the `snprintf' function. */\n#undef HAVE_SNPRINTF\n\n/* Define if the return value of the snprintf function is the number of of\n   bytes (excluding the terminating NUL) that would have been produced if the\n   buffer had been large enough. */\n#undef HAVE_SNPRINTF_RETVAL_C99\n\n/* Define to 1 if you have the `sqrt' function. */\n#undef HAVE_SQRT\n\n/* Define to 1 if you have the `sqrtf' function. */\n#undef HAVE_SQRTF\n\n/* Define to 1 if you have the <sstream> header file. */\n#undef HAVE_SSTREAM\n\n/* Define to 1 if you have the <stdint.h> header file. */\n#undef HAVE_STDINT_H\n\n/* Define if <stdint.h> exists, doesn't clash with <sys/types.h>, and declares\n   uintmax_t. */\n#undef HAVE_STDINT_H_WITH_UINTMAX\n\n/* Define to 1 if you have the <stdlib.h> header file. */\n#undef HAVE_STDLIB_H\n\n/* Define to 1 if you have the `strcasecmp' function. */\n#undef HAVE_STRCASECMP\n\n/* Define to 1 if you have the `strdup' function. */\n#undef HAVE_STRDUP\n\n/* Define to 1 if you have the `strerror_r' function. */\n#undef HAVE_STRERROR_R\n\n/* Define to 1 if you have the <strings.h> header file. */\n#undef HAVE_STRINGS_H\n\n/* Define to 1 if you have the <string.h> header file. */\n#undef HAVE_STRING_H\n\n/* Define to 1 if you have the `strncasecmp' function. */\n#undef HAVE_STRNCASECMP\n\n/* Define to 1 if you have the `strndup' function. */\n#undef HAVE_STRNDUP\n\n/* Define to 1 if you have the `strnlen' function. */\n#undef HAVE_STRNLEN\n\n/* Define to 1 if you have the `strptime' function. */\n#undef HAVE_STRPTIME\n\n/* Define to 1 if you have the `strsignal' function. */\n#undef HAVE_STRSIGNAL\n\n/* Define if there is a member named d_type in the struct describing directory\n   headers. */\n#undef HAVE_STRUCT_DIRENT_D_TYPE\n\n/* Define to 1 if `gr_passwd' is a member of `struct group'. */\n#undef HAVE_STRUCT_GROUP_GR_PASSWD\n\n/* Define to 1 if `sa_sigaction' is a member of `struct sigaction'. */\n#undef HAVE_STRUCT_SIGACTION_SA_SIGACTION\n\n/* Define to 1 if the system has the type `struct sockaddr_storage'. */\n#undef HAVE_STRUCT_SOCKADDR_STORAGE\n\n/* Define to 1 if `ss_family' is a member of `struct sockaddr_storage'. */\n#undef HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY\n\n/* Define to 1 if `st_blksize' is a member of `struct stat'. */\n#undef HAVE_STRUCT_STAT_ST_BLKSIZE\n\n/* Define to 1 if `st_blocks' is a member of `struct stat'. */\n#undef HAVE_STRUCT_STAT_ST_BLOCKS\n\n/* Define to 1 if `st_rdev' is a member of `struct stat'. */\n#undef HAVE_STRUCT_STAT_ST_RDEV\n\n/* Define to 1 if the system has the type `struct tms'. */\n#undef HAVE_STRUCT_TMS\n\n/* Define to 1 if `tm_zone' is a member of `struct tm'. */\n#undef HAVE_STRUCT_TM_TM_ZONE\n\n/* Define to 1 if the system has the type `struct utsname'. */\n#undef HAVE_STRUCT_UTSNAME\n\n/* Define if struct stat has an st_dm_mode member. */\n#undef HAVE_ST_DM_MODE\n\n/* Define to 1 if you have the <suitesparse/amd.h> header file. */\n#undef HAVE_SUITESPARSE_AMD_H\n\n/* Define to 1 if you have the <suitesparse/camd.h> header file. */\n#undef HAVE_SUITESPARSE_CAMD_H\n\n/* Define to 1 if you have the <suitesparse/ccolamd.h> header file. */\n#undef HAVE_SUITESPARSE_CCOLAMD_H\n\n/* Define to 1 if you have the <suitesparse/cholmod.h> header file. */\n#undef HAVE_SUITESPARSE_CHOLMOD_H\n\n/* Define to 1 if you have the <suitesparse/colamd.h> header file. */\n#undef HAVE_SUITESPARSE_COLAMD_H\n\n/* Define to 1 if you have the <suitesparse/cs.h> header file. */\n#undef HAVE_SUITESPARSE_CS_H\n\n/* Define to 1 if you have the <suitesparse/umfpack.h> header file. */\n#undef HAVE_SUITESPARSE_UMFPACK_H\n\n/* Define to 1 if you have the <sunmath.h> header file. */\n#undef HAVE_SUNMATH_H\n\n/* Define to 1 if you have the `symlink' function. */\n#undef HAVE_SYMLINK\n\n/* Define to 1 if you have the `sysctl' function. */\n#undef HAVE_SYSCTL\n\n/* Define to 1 if you have the `sysmp' function. */\n#undef HAVE_SYSMP\n\n/* Define to 1 if you have the <sys/bitypes.h> header file. */\n#undef HAVE_SYS_BITYPES_H\n\n/* Define to 1 if you have the <sys/cdefs.h> header file. */\n#undef HAVE_SYS_CDEFS_H\n\n/* Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR'.\n   */\n#undef HAVE_SYS_DIR_H\n\n/* Define to 1 if you have the <sys/inttypes.h> header file. */\n#undef HAVE_SYS_INTTYPES_H\n\n/* Define to 1 if you have the <sys/ioctl.h> header file. */\n#undef HAVE_SYS_IOCTL_H\n\n/* Define to 1 if you have the <sys/mman.h> header file. */\n#undef HAVE_SYS_MMAN_H\n\n/* Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR'.\n   */\n#undef HAVE_SYS_NDIR_H\n\n/* Define to 1 if you have the <sys/param.h> header file. */\n#undef HAVE_SYS_PARAM_H\n\n/* Define to 1 if you have the <sys/poll.h> header file. */\n#undef HAVE_SYS_POLL_H\n\n/* Define to 1 if you have the <sys/pstat.h> header file. */\n#undef HAVE_SYS_PSTAT_H\n\n/* Define to 1 if you have the <sys/resource.h> header file. */\n#undef HAVE_SYS_RESOURCE_H\n\n/* Define to 1 if you have the <sys/select.h> header file. */\n#undef HAVE_SYS_SELECT_H\n\n/* Define to 1 if you have the <sys/socket.h> header file. */\n#undef HAVE_SYS_SOCKET_H\n\n/* Define to 1 if you have the <sys/stat.h> header file. */\n#undef HAVE_SYS_STAT_H\n\n/* Define to 1 if you have the <sys/stropts.h> header file. */\n#undef HAVE_SYS_STROPTS_H\n\n/* Define to 1 if you have the <sys/sysctl.h> header file. */\n#undef HAVE_SYS_SYSCTL_H\n\n/* Define to 1 if you have the <sys/sysmp.h> header file. */\n#undef HAVE_SYS_SYSMP_H\n\n/* Define to 1 if you have the <sys/timeb.h> header file. */\n#undef HAVE_SYS_TIMEB_H\n\n/* Define to 1 if you have the <sys/times.h> header file. */\n#undef HAVE_SYS_TIMES_H\n\n/* Define to 1 if you have the <sys/time.h> header file. */\n#undef HAVE_SYS_TIME_H\n\n/* Define to 1 if you have the <sys/types.h> header file. */\n#undef HAVE_SYS_TYPES_H\n\n/* Define to 1 if you have the <sys/uio.h> header file. */\n#undef HAVE_SYS_UIO_H\n\n/* Define to 1 if you have the <sys/utsname.h> header file. */\n#undef HAVE_SYS_UTSNAME_H\n\n/* Define to 1 if you have the <sys/wait.h> header file. */\n#undef HAVE_SYS_WAIT_H\n\n/* Define to 1 if you have the `tcgetattr' function. */\n#undef HAVE_TCGETATTR\n\n/* Define to 1 if you have the `tcsetattr' function. */\n#undef HAVE_TCSETATTR\n\n/* Define to 1 if you have the <termcap.h> header file. */\n#undef HAVE_TERMCAP_H\n\n/* Define to 1 if you have the <termios.h> header file. */\n#undef HAVE_TERMIOS_H\n\n/* Define to 1 if you have the <termio.h> header file. */\n#undef HAVE_TERMIO_H\n\n/* Define to 1 if you have the `tgamma' function. */\n#undef HAVE_TGAMMA\n\n/* Define to 1 if you have the `tgammaf' function. */\n#undef HAVE_TGAMMAF\n\n/* Define to 1 if you have the `timegm' function. */\n#undef HAVE_TIMEGM\n\n/* Define to 1 if the system has the type `timezone_t'. */\n#undef HAVE_TIMEZONE_T\n\n/* Define if struct tm has the tm_gmtoff member. */\n#undef HAVE_TM_GMTOFF\n\n/* Define to 1 if your `struct tm' has `tm_zone'. Deprecated, use\n   `HAVE_STRUCT_TM_TM_ZONE' instead. */\n#undef HAVE_TM_ZONE\n\n/* Define to 1 if you have the `toascii' function. */\n#undef HAVE_TOASCII\n\n/* Define to 1 if you have the `towlower' function. */\n#undef HAVE_TOWLOWER\n\n/* Define to 1 if you have the `tsearch' function. */\n#undef HAVE_TSEARCH\n\n/* Define to 1 if you don't have `tm_zone' but do have the external array\n   `tzname'. */\n#undef HAVE_TZNAME\n\n/* Define to 1 if you have the `tzset' function. */\n#undef HAVE_TZSET\n\n/* Define to 1 if you have the <ufsparse/amd.h> header file. */\n#undef HAVE_UFSPARSE_AMD_H\n\n/* Define to 1 if you have the <ufsparse/camd.h> header file. */\n#undef HAVE_UFSPARSE_CAMD_H\n\n/* Define to 1 if you have the <ufsparse/ccolamd.h> header file. */\n#undef HAVE_UFSPARSE_CCOLAMD_H\n\n/* Define to 1 if you have the <ufsparse/cholmod.h> header file. */\n#undef HAVE_UFSPARSE_CHOLMOD_H\n\n/* Define to 1 if you have the <ufsparse/colamd.h> header file. */\n#undef HAVE_UFSPARSE_COLAMD_H\n\n/* Define to 1 if you have the <ufsparse/cs.h> header file. */\n#undef HAVE_UFSPARSE_CS_H\n\n/* Define to 1 if you have the <ufsparse/umfpack.h> header file. */\n#undef HAVE_UFSPARSE_UMFPACK_H\n\n/* Define to 1 if you have the `umask' function. */\n#undef HAVE_UMASK\n\n/* Define to 1 if UMFPACK is available. */\n#undef HAVE_UMFPACK\n\n/* Define to 1 if you have the <umfpack.h> header file. */\n#undef HAVE_UMFPACK_H\n\n/* Define to 1 if you have the <umfpack/umfpack.h> header file. */\n#undef HAVE_UMFPACK_UMFPACK_H\n\n/* Define to 1 if you have the `uname' function. */\n#undef HAVE_UNAME\n\n/* Define to 1 if you have the <unistd.h> header file. */\n#undef HAVE_UNISTD_H\n\n/* Define to 1 if you have the `unsetenv' function. */\n#undef HAVE_UNSETENV\n\n/* Define to 1 if the system has the type 'unsigned long long int'. */\n#undef HAVE_UNSIGNED_LONG_LONG_INT\n\n/* Define to 1 if you have the <util.h> header file. */\n#undef HAVE_UTIL_H\n\n/* Define if you have a global __progname variable */\n#undef HAVE_VAR___PROGNAME\n\n/* Define to 1 if you have the `vasnprintf' function. */\n#undef HAVE_VASNPRINTF\n\n/* Define to 1 if you have the `vasprintf' function. */\n#undef HAVE_VASPRINTF\n\n/* Define to 1 if you have the `waitpid' function. */\n#undef HAVE_WAITPID\n\n/* Define to 1 if you have the <wchar.h> header file. */\n#undef HAVE_WCHAR_H\n\n/* Define if you have the 'wchar_t' type. */\n#undef HAVE_WCHAR_T\n\n/* Define to 1 if you have the `wcrtomb' function. */\n#undef HAVE_WCRTOMB\n\n/* Define to 1 if you have the `wcslen' function. */\n#undef HAVE_WCSLEN\n\n/* Define to 1 if you have the `wcsnlen' function. */\n#undef HAVE_WCSNLEN\n\n/* Define to 1 if you have the <wctype.h> header file. */\n#undef HAVE_WCTYPE_H\n\n/* Define to 1 if you have the <windows.h> header file. */\n#undef HAVE_WINDOWS_H\n\n/* Define to 1 if you have the <winsock2.h> header file. */\n#undef HAVE_WINSOCK2_H\n\n/* Define if you have the 'wint_t' type. */\n#undef HAVE_WINT_T\n\n/* Define to 1 if you have the `wmemchr' function. */\n#undef HAVE_WMEMCHR\n\n/* Define to 1 if you have the `wmemcpy' function. */\n#undef HAVE_WMEMCPY\n\n/* Define to 1 if you have the `wmempcpy' function. */\n#undef HAVE_WMEMPCPY\n\n/* Define to 1 if fstatat (..., 0) works. For example, it does not work in AIX\n   7.1. */\n#undef HAVE_WORKING_FSTATAT_ZERO_FLAG\n\n/* Define to 1 if O_NOATIME works. */\n#undef HAVE_WORKING_O_NOATIME\n\n/* Define to 1 if O_NOFOLLOW works. */\n#undef HAVE_WORKING_O_NOFOLLOW\n\n/* Define to 1 if you have the <ws2tcpip.h> header file. */\n#undef HAVE_WS2TCPIP_H\n\n/* Define to 1 if Xft is present. */\n#undef HAVE_XFT\n\n/* Define to 1 if you have X11. */\n#undef HAVE_X_WINDOWS\n\n/* Define to 1 if ZLIB is available. */\n#undef HAVE_Z\n\n/* Define to 1 if ZLIB is available. */\n#undef HAVE_ZLIB\n\n/* Define to 1 if you have the <zlib.h> header file. */\n#undef HAVE_ZLIB_H\n\n/* Define to 1 if the system has the type `_Bool'. */\n#undef HAVE__BOOL\n\n/* Define to 1 if you have the `_finite' function. */\n#undef HAVE__FINITE\n\n/* Define to 1 if you have the `_fseeki64' function. */\n#undef HAVE__FSEEKI64\n\n/* Define to 1 if you have the `_ftelli64' function. */\n#undef HAVE__FTELLI64\n\n/* Define to 1 if you have the `_ftime' function. */\n#undef HAVE__FTIME\n\n/* Define to 1 if you have the `_getch' function. */\n#undef HAVE__GETCH\n\n/* Define to 1 if you have the `_hypotf' function. */\n#undef HAVE__HYPOTF\n\n/* Define to 1 if you have the `_isnan' function. */\n#undef HAVE__ISNAN\n\n/* Define to 1 if you have the `_kbhit' function. */\n#undef HAVE__KBHIT\n\n/* Define to 1 if you have the `_set_invalid_parameter_handler' function. */\n#undef HAVE__SET_INVALID_PARAMETER_HANDLER\n\n/* Define to 1 if you have the `__secure_getenv' function. */\n#undef HAVE___SECURE_GETENV\n\n/* Define HOST_NAME_MAX when <limits.h> does not define it. */\n#undef HOST_NAME_MAX\n\n/* Java home (top-level installation dir) */\n#undef JAVA_HOME\n\n/* Java library path (libjvm) */\n#undef JAVA_LDPATH\n\n/* Define to 1 if LLVM::legacy::PassManager exists. */\n#undef LEGACY_PASSMANAGER\n\n/* Define to 1 if lseek does not detect pipes. */\n#undef LSEEK_PIPE_BROKEN\n\n/* Define to 1 if 'lstat' dereferences a symlink specified with a trailing\n   slash. */\n#undef LSTAT_FOLLOWS_SLASHED_SYMLINK\n\n/* Define to the sub-directory where libtool stores uninstalled libraries. */\n#undef LT_OBJDIR\n\n/* If malloc(0) is != NULL, define this to 1. Otherwise define this to 0. */\n#undef MALLOC_0_IS_NONNULL\n\n/* Define to a substitute value for mmap()'s MAP_ANONYMOUS flag. */\n#undef MAP_ANONYMOUS\n\n/* Define if the mbrtowc function does not return (size_t) -2 for empty input.\n   */\n#undef MBRTOWC_EMPTY_INPUT_BUG\n\n/* Define if the mbrtowc function has the NULL pwc argument bug. */\n#undef MBRTOWC_NULL_ARG1_BUG\n\n/* Define if the mbrtowc function has the NULL string argument bug. */\n#undef MBRTOWC_NULL_ARG2_BUG\n\n/* Define if the mbrtowc function does not return 0 for a NUL character. */\n#undef MBRTOWC_NUL_RETVAL_BUG\n\n/* Define if the mbrtowc function returns a wrong return value. */\n#undef MBRTOWC_RETVAL_BUG\n\n/* Use GNU style printf and scanf.  */\n#ifndef __USE_MINGW_ANSI_STDIO\n# undef __USE_MINGW_ANSI_STDIO\n#endif\n\n\n/* Define to 1 if mkfifo does not reject trailing slash */\n#undef MKFIFO_TRAILING_SLASH_BUG\n\n/* Define to 1 if the Qhull library needs a qh_version variable defined. */\n#undef NEED_QHULL_VERSION\n\n/* Define to 1 if you want to avoid min/max macro definition in Windows\n   headers. */\n#undef NOMINMAX\n\n/* Define to 1 if using 64-bit integers for array dimensions and indexing. */\n#undef OCTAVE_ENABLE_64\n\n/* Define to 1 to use atomic operations for reference counting. */\n#undef OCTAVE_ENABLE_ATOMIC_REFCOUNT\n\n/* Define to 1 to use internal bounds checking. */\n#undef OCTAVE_ENABLE_BOUNDS_CHECK\n\n/* Define to 1 if you need to truncate intermediate FP results. */\n#undef OCTAVE_ENABLE_FLOAT_TRUNCATE\n\n/* Define if OpenMP is enabled */\n#undef OCTAVE_ENABLE_OPENMP\n\n/* Define to 1 if signed integers use two's complement. */\n#undef OCTAVE_HAVE_FAST_INT_OPS\n\n/* Define to 1 if the system has the type 'long long int'. */\n#undef OCTAVE_HAVE_LONG_LONG_INT\n\n/* Define to 1 if C++ allows overload of char, int8_t, and uint8_t types. */\n#undef OCTAVE_HAVE_OVERLOAD_CHAR_INT8_TYPES\n\n/* Define to 1 if the system has the type 'unsigned long long int'. */\n#undef OCTAVE_HAVE_UNSIGNED_LONG_LONG_INT\n\n/* Define to the type of octave_idx_type (64 or 32 bit signed integer). */\n#undef OCTAVE_IDX_TYPE\n\n/* Define to 1 if this is Octave. */\n#undef OCTAVE_SOURCE\n\n/* Define to 1 if open() fails to recognize a trailing slash. */\n#undef OPEN_TRAILING_SLASH_BUG\n\n/* Name of package */\n#undef PACKAGE\n\n/* Define to the address where bug reports for this package should be sent. */\n#undef PACKAGE_BUGREPORT\n\n/* Define to the full name of this package. */\n#undef PACKAGE_NAME\n\n/* Define to the full name and version of this package. */\n#undef PACKAGE_STRING\n\n/* Define to the one symbol short name of this package. */\n#undef PACKAGE_TARNAME\n\n/* Define to the home page for this package. */\n#undef PACKAGE_URL\n\n/* Define to the version of this package. */\n#undef PACKAGE_VERSION\n\n/* Define to the type that is the result of default argument promotions of\n   type mode_t. */\n#undef PROMOTED_MODE_T\n\n/* Define to necessary symbol if this constant uses a non-standard name on\n   your system. */\n#undef PTHREAD_CREATE_JOINABLE\n\n/* Define if the pthread_in_use() detection is hard. */\n#undef PTHREAD_IN_USE_DETECTION_HARD\n\n/* Define to l, ll, u, ul, ull, etc., as suitable for constants of type\n   'ptrdiff_t'. */\n#undef PTRDIFF_T_SUFFIX\n\n/* Define to 1 if LLVM::raw_fd_ostream arg type is llvm::sys:fs. */\n#undef RAW_FD_OSTREAM_ARG_IS_LLVM_SYS_FS\n\n/* Define to 1 if readlink fails to recognize a trailing slash. */\n#undef READLINK_TRAILING_SLASH_BUG\n\n/* Define to 1 if gnulib's dirfd() replacement is used. */\n#undef REPLACE_DIRFD\n\n/* Define to 1 if gnulib's fchdir() replacement is used. */\n#undef REPLACE_FCHDIR\n\n/* Define to 1 if stat needs help when passed a directory name with a trailing\n   slash */\n#undef REPLACE_FUNC_STAT_DIR\n\n/* Define to 1 if stat needs help when passed a file name with a trailing\n   slash */\n#undef REPLACE_FUNC_STAT_FILE\n\n/* Define to 1 if open() should work around the inability to open a directory.\n   */\n#undef REPLACE_OPEN_DIRECTORY\n\n/* Define to 1 if strerror(0) does not return a message implying success. */\n#undef REPLACE_STRERROR_0\n\n/* Define if vasnprintf exists but is overridden by gnulib. */\n#undef REPLACE_VASNPRINTF\n\n/* Define to 1 if your struct rusage only has time information. */\n#undef RUSAGE_TIMES_ONLY\n\n/* Define this to be the path separator for your system, as a character\n   constant. */\n#undef SEPCHAR\n\n/* Define this to be the path separator for your system, as a string. */\n#undef SEPCHAR_STR\n\n/* Define this to be the path to the shell command interpreter. */\n#undef SHELL_PATH\n\n/* Define to l, ll, u, ul, ull, etc., as suitable for constants of type\n   'sig_atomic_t'. */\n#undef SIG_ATOMIC_T_SUFFIX\n\n/* The size of `int', as computed by sizeof. */\n#undef SIZEOF_INT\n\n/* The size of `int64_t', as computed by sizeof. */\n#undef SIZEOF_INT64_T\n\n/* The size of `long', as computed by sizeof. */\n#undef SIZEOF_LONG\n\n/* The size of `long double', as computed by sizeof. */\n#undef SIZEOF_LONG_DOUBLE\n\n/* The size of `long long', as computed by sizeof. */\n#undef SIZEOF_LONG_LONG\n\n/* The size of `short', as computed by sizeof. */\n#undef SIZEOF_SHORT\n\n/* The size of `void *', as computed by sizeof. */\n#undef SIZEOF_VOID_P\n\n/* Define as the maximum value of type 'size_t', if the system doesn't define\n   it. */\n#ifndef SIZE_MAX\n# undef SIZE_MAX\n#endif\n\n/* Define to l, ll, u, ul, ull, etc., as suitable for constants of type\n   'size_t'. */\n#undef SIZE_T_SUFFIX\n\n/* If using the C implementation of alloca, define if you know the\n   direction of stack growth for your system; otherwise it will be\n   automatically deduced at runtime.\n\tSTACK_DIRECTION > 0 => grows toward higher addresses\n\tSTACK_DIRECTION < 0 => grows toward lower addresses\n\tSTACK_DIRECTION = 0 => direction of growth unknown */\n#undef STACK_DIRECTION\n\n/* Define to 1 if the `S_IS*' macros in <sys/stat.h> do not work properly. */\n#undef STAT_MACROS_BROKEN\n\n/* Define to 1 if you have the ANSI C header files. */\n#undef STDC_HEADERS\n\n/* Define to 1 if strerror_r returns char *. */\n#undef STRERROR_R_CHAR_P\n\n/* Define to 1 if time_t is signed. */\n#undef TIME_T_IS_SIGNED\n\n/* Define to 1 if your <sys/time.h> declares `struct tm'. */\n#undef TM_IN_SYS_TIME\n\n/* Define to 1 if the UMFPACK Complex solver allows matrix and RHS to be split\n   independently. */\n#undef UMFPACK_SEPARATE_SPLIT\n\n/* Define to 1 if unlink() on a parent directory may succeed */\n#undef UNLINK_PARENT_BUG\n\n/* Define to 1 if BLAS functions need to be wrapped (potentially needed for\n   64-bit OSX only). */\n#undef USE_BLASWRAP\n\n/* Define if the POSIX multithreading library can be used. */\n#undef USE_POSIX_THREADS\n\n/* Define if references to the POSIX multithreading library should be made\n   weak. */\n#undef USE_POSIX_THREADS_WEAK\n\n/* Define if the GNU Pth multithreading library can be used. */\n#undef USE_PTH_THREADS\n\n/* Define if references to the GNU Pth multithreading library should be made\n   weak. */\n#undef USE_PTH_THREADS_WEAK\n\n/* Define to 1 to use the readline library. */\n#undef USE_READLINE\n\n/* Define if the old Solaris multithreading library can be used. */\n#undef USE_SOLARIS_THREADS\n\n/* Define if references to the old Solaris multithreading library should be\n   made weak. */\n#undef USE_SOLARIS_THREADS_WEAK\n\n/* Enable extensions on AIX 3, Interix.  */\n#ifndef _ALL_SOURCE\n# undef _ALL_SOURCE\n#endif\n/* Enable general extensions on macOS.  */\n#ifndef _DARWIN_C_SOURCE\n# undef _DARWIN_C_SOURCE\n#endif\n/* Enable GNU extensions on systems that have them.  */\n#ifndef _GNU_SOURCE\n# undef _GNU_SOURCE\n#endif\n/* Enable threading extensions on Solaris.  */\n#ifndef _POSIX_PTHREAD_SEMANTICS\n# undef _POSIX_PTHREAD_SEMANTICS\n#endif\n/* Enable extensions specified by ISO/IEC TS 18661-5:2014.  */\n#ifndef __STDC_WANT_IEC_60559_ATTRIBS_EXT__\n# undef __STDC_WANT_IEC_60559_ATTRIBS_EXT__\n#endif\n/* Enable extensions specified by ISO/IEC TS 18661-1:2014.  */\n#ifndef __STDC_WANT_IEC_60559_BFP_EXT__\n# undef __STDC_WANT_IEC_60559_BFP_EXT__\n#endif\n/* Enable extensions specified by ISO/IEC TS 18661-2:2015.  */\n#ifndef __STDC_WANT_IEC_60559_DFP_EXT__\n# undef __STDC_WANT_IEC_60559_DFP_EXT__\n#endif\n/* Enable extensions specified by ISO/IEC TS 18661-4:2015.  */\n#ifndef __STDC_WANT_IEC_60559_FUNCS_EXT__\n# undef __STDC_WANT_IEC_60559_FUNCS_EXT__\n#endif\n/* Enable extensions specified by ISO/IEC TS 18661-3:2015.  */\n#ifndef __STDC_WANT_IEC_60559_TYPES_EXT__\n# undef __STDC_WANT_IEC_60559_TYPES_EXT__\n#endif\n/* Enable extensions specified by ISO/IEC TR 24731-2:2010.  */\n#ifndef __STDC_WANT_LIB_EXT2__\n# undef __STDC_WANT_LIB_EXT2__\n#endif\n/* Enable extensions specified by ISO/IEC 24747:2009.  */\n#ifndef __STDC_WANT_MATH_SPEC_FUNCS__\n# undef __STDC_WANT_MATH_SPEC_FUNCS__\n#endif\n/* Enable extensions on HP NonStop.  */\n#ifndef _TANDEM_SOURCE\n# undef _TANDEM_SOURCE\n#endif\n/* Enable X/Open extensions if necessary.  HP-UX 11.11 defines\n   mbstate_t only if _XOPEN_SOURCE is defined to 500, regardless of\n   whether compiling with -Ae or -D_HPUX_SOURCE=1.  */\n#ifndef _XOPEN_SOURCE\n# undef _XOPEN_SOURCE\n#endif\n/* Enable general extensions on Solaris.  */\n#ifndef __EXTENSIONS__\n# undef __EXTENSIONS__\n#endif\n\n\n/* Define if the native Windows multithreading API can be used. */\n#undef USE_WINDOWS_THREADS\n\n/* Version number of package */\n#undef VERSION\n\n/* Define to 1 if unsetenv returns void instead of int. */\n#undef VOID_UNSETENV\n\n/* Define to l, ll, u, ul, ull, etc., as suitable for constants of type\n   'wchar_t'. */\n#undef WCHAR_T_SUFFIX\n\n/* Define if WSAStartup is needed. */\n#undef WINDOWS_SOCKETS\n\n/* Define to l, ll, u, ul, ull, etc., as suitable for constants of type\n   'wint_t'. */\n#undef WINT_T_SUFFIX\n\n/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most\n   significant byte first (like Motorola and SPARC, unlike Intel). */\n#if defined AC_APPLE_UNIVERSAL_BUILD\n# if defined __BIG_ENDIAN__\n#  define WORDS_BIGENDIAN 1\n# endif\n#else\n# ifndef WORDS_BIGENDIAN\n#  undef WORDS_BIGENDIAN\n# endif\n#endif\n\n/* Define to 1 if `lex' declares `yytext' as a `char *' by default, not a\n   `char[]'. */\n#undef YYTEXT_POINTER\n\n\n#if defined (__cplusplus)\nextern \"C\" {\n#endif\n#if HAVE_EXP2 && ! HAVE_DECL_EXP2\ndouble exp2 (double);\n#endif\n#if HAVE_ROUND && ! HAVE_DECL_ROUND\ndouble round (double);\n#endif\n#if HAVE_TGAMMA && ! HAVE_DECL_TGAMMA\ndouble tgamma (double);\n#endif\n#if defined (__cplusplus)\n}\n#endif\n\n\n/* Enable large inode numbers on Mac OS X 10.5. */\n#undef _DARWIN_USE_64_BIT_INODE\n\n/* Number of bits in a file offset, on hosts where this is settable. */\n#undef _FILE_OFFSET_BITS\n\n/* Define to 1 if Gnulib overrides 'struct stat' on Windows so that struct\n   stat.st_size becomes 64-bit. */\n#undef _GL_WINDOWS_64_BIT_ST_SIZE\n\n/* Define to 1 if using HDF5 dll (Win32). */\n#undef _HDF5USEDLL_\n\n/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */\n#undef _LARGEFILE_SOURCE\n\n/* Define for large files, on AIX-style hosts. */\n#undef _LARGE_FILES\n\n/* Define to 1 if on MINIX. */\n#undef _MINIX\n\n/* Define to 1 to make NetBSD features available. MINIX 3 needs this. */\n#undef _NETBSD_SOURCE\n\n/* The _Noreturn keyword of C11.  */\n#if ! (defined _Noreturn \\\n       || (defined __STDC_VERSION__ && 201112 <= __STDC_VERSION__))\n# if (3 <= __GNUC__ || (__GNUC__ == 2 && 8 <= __GNUC_MINOR__) \\\n      || 0x5110 <= __SUNPRO_C)\n#  define _Noreturn __attribute__ ((__noreturn__))\n# elif defined _MSC_VER && 1200 <= _MSC_VER\n#  define _Noreturn __declspec (noreturn)\n# else\n#  define _Noreturn\n# endif\n#endif\n\n\n/* Define to 2 if the system does not provide POSIX.1 features except with\n   this defined. */\n#undef _POSIX_1_SOURCE\n\n/* Define to 1 in order to get the POSIX compatible declarations of socket\n   functions. */\n#undef _POSIX_PII_SOCKET\n\n/* Define to 1 if you need to in order for 'stat' and other things to work. */\n#undef _POSIX_SOURCE\n\n/* Define for Solaris 2.5.1 so the uint64_t typedef from <sys/synch.h>,\n   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the\n   #define below would cause a syntax error. */\n#undef _UINT64_T\n\n/* Define to 1 if _USE_MATH_DEFINES is required to get math constants like\n   M_LN2. */\n#undef _USE_MATH_DEFINES\n\n/* Define to 0x0403 to access InitializeCriticalSectionAndSpinCount. */\n#undef _WIN32_WINNT\n\n/* Define to rpl_ if the getopt replacement functions and variables should be\n   used. */\n#undef __GETOPT_PREFIX\n\n/* Define to 1 if your version of GNU libc has buggy inline assembly code for\n   math functions like exp. */\n#undef __NO_MATH_INLINES\n\n/* Define to 1 if the system <stdint.h> predates C++11. */\n#undef __STDC_CONSTANT_MACROS\n\n/* Define to 1 if the system <stdint.h> predates C++11. */\n#undef __STDC_LIMIT_MACROS\n\n/* Please see the Gnulib manual for how to use these macros.\n\n   Suppress extern inline with HP-UX cc, as it appears to be broken; see\n   <http://lists.gnu.org/archive/html/bug-texinfo/2013-02/msg00030.html>.\n\n   Suppress extern inline with Sun C in standards-conformance mode, as it\n   mishandles inline functions that call each other.  E.g., for 'inline void f\n   (void) { } inline void g (void) { f (); }', c99 incorrectly complains\n   'reference to static identifier \"f\" in extern inline function'.\n   This bug was observed with Sun C 5.12 SunOS_i386 2011/11/16.\n\n   Suppress extern inline (with or without __attribute__ ((__gnu_inline__)))\n   on configurations that mistakenly use 'static inline' to implement\n   functions or macros in standard C headers like <ctype.h>.  For example,\n   if isdigit is mistakenly implemented via a static inline function,\n   a program containing an extern inline function that calls isdigit\n   may not work since the C standard prohibits extern inline functions\n   from calling static functions.  This bug is known to occur on:\n\n     OS X 10.8 and earlier; see:\n     http://lists.gnu.org/archive/html/bug-gnulib/2012-12/msg00023.html\n\n     DragonFly; see\n     http://muscles.dragonflybsd.org/bulk/bleeding-edge-potential/latest-per-pkg/ah-tty-0.3.12.log\n\n     FreeBSD; see:\n     http://lists.gnu.org/archive/html/bug-gnulib/2014-07/msg00104.html\n\n   OS X 10.9 has a macro __header_inline indicating the bug is fixed for C and\n   for clang but remains for g++; see <http://trac.macports.org/ticket/41033>.\n   Assume DragonFly and FreeBSD will be similar.  */\n#if (((defined __APPLE__ && defined __MACH__) \\\n      || defined __DragonFly__ || defined __FreeBSD__) \\\n     && (defined __header_inline \\\n         ? (defined __cplusplus && defined __GNUC_STDC_INLINE__ \\\n            && ! defined __clang__) \\\n         : ((! defined _DONT_USE_CTYPE_INLINE_ \\\n             && (defined __GNUC__ || defined __cplusplus)) \\\n            || (defined _FORTIFY_SOURCE && 0 < _FORTIFY_SOURCE \\\n                && defined __GNUC__ && ! defined __cplusplus))))\n# define _GL_EXTERN_INLINE_STDHEADER_BUG\n#endif\n#if ((__GNUC__ \\\n      ? defined __GNUC_STDC_INLINE__ && __GNUC_STDC_INLINE__ \\\n      : (199901L <= __STDC_VERSION__ \\\n         && !defined __HP_cc \\\n         && !defined __PGI \\\n         && !(defined __SUNPRO_C && __STDC__))) \\\n     && !defined _GL_EXTERN_INLINE_STDHEADER_BUG)\n# define _GL_INLINE inline\n# define _GL_EXTERN_INLINE extern inline\n# define _GL_EXTERN_INLINE_IN_USE\n#elif (2 < __GNUC__ + (7 <= __GNUC_MINOR__) && !defined __STRICT_ANSI__ \\\n       && !defined _GL_EXTERN_INLINE_STDHEADER_BUG)\n# if defined __GNUC_GNU_INLINE__ && __GNUC_GNU_INLINE__\n   /* __gnu_inline__ suppresses a GCC 4.2 diagnostic.  */\n#  define _GL_INLINE extern inline __attribute__ ((__gnu_inline__))\n# else\n#  define _GL_INLINE extern inline\n# endif\n# define _GL_EXTERN_INLINE extern\n# define _GL_EXTERN_INLINE_IN_USE\n#else\n# define _GL_INLINE static _GL_UNUSED\n# define _GL_EXTERN_INLINE static _GL_UNUSED\n#endif\n\n/* In GCC 4.6 (inclusive) to 5.1 (exclusive),\n   suppress bogus \"no previous prototype for 'FOO'\"\n   and \"no previous declaration for 'FOO'\" diagnostics,\n   when FOO is an inline function in the header; see\n   <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54113> and\n   <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=63877>.  */\n#if __GNUC__ == 4 && 6 <= __GNUC_MINOR__\n# if defined __GNUC_STDC_INLINE__ && __GNUC_STDC_INLINE__\n#  define _GL_INLINE_HEADER_CONST_PRAGMA\n# else\n#  define _GL_INLINE_HEADER_CONST_PRAGMA \\\n     _Pragma (\"GCC diagnostic ignored \\\"-Wsuggest-attribute=const\\\"\")\n# endif\n# define _GL_INLINE_HEADER_BEGIN \\\n    _Pragma (\"GCC diagnostic push\") \\\n    _Pragma (\"GCC diagnostic ignored \\\"-Wmissing-prototypes\\\"\") \\\n    _Pragma (\"GCC diagnostic ignored \\\"-Wmissing-declarations\\\"\") \\\n    _GL_INLINE_HEADER_CONST_PRAGMA\n# define _GL_INLINE_HEADER_END \\\n    _Pragma (\"GCC diagnostic pop\")\n#else\n# define _GL_INLINE_HEADER_BEGIN\n# define _GL_INLINE_HEADER_END\n#endif\n\n/* Define to a replacement function name for fnmatch(). */\n#undef fnmatch\n\n/* Define to `int' if <sys/types.h> doesn't define. */\n#undef gid_t\n\n/* Define to `__inline__' or `__inline' if that's what the C compiler\n   calls it, or to nothing if 'inline' is not supported under any name.  */\n#ifndef __cplusplus\n#undef inline\n#endif\n\n/* Define to the type of a signed integer type of width exactly 64 bits if\n   such a type exists and the standard includes do not define it. */\n#undef int64_t\n\n/* Define to long or long long if <stdint.h> and <inttypes.h> don't define. */\n#undef intmax_t\n\n/* Work around a bug in Apple GCC 4.0.1 build 5465: In C99 mode, it supports\n   the ISO C 99 semantics of 'extern inline' (unlike the GNU C semantics of\n   earlier versions), but does not display it by setting __GNUC_STDC_INLINE__.\n   __APPLE__ && __MACH__ test for Mac OS X.\n   __APPLE_CC__ tests for the Apple compiler and its version.\n   __STDC_VERSION__ tests for the C99 mode.  */\n#if defined __APPLE__ && defined __MACH__ && __APPLE_CC__ >= 5465 && !defined __cplusplus && __STDC_VERSION__ >= 199901L && !defined __GNUC_STDC_INLINE__\n# define __GNUC_STDC_INLINE__ 1\n#endif\n\n/* Define to a type if <wchar.h> does not define. */\n#undef mbstate_t\n\n/* Define to the real name of the mktime_internal function. */\n#undef mktime_internal\n\n/* Define to `int' if <sys/types.h> does not define. */\n#undef mode_t\n\n/* Define to the name of the strftime replacement function. */\n#undef my_strftime\n\n/* Define to the type of st_nlink in struct stat, or a supertype. */\n#undef nlink_t\n\n/* Define to `long int' if <sys/types.h> does not define. */\n#undef off_t\n\n/* Define to `int' if <sys/types.h> does not define. */\n#undef pid_t\n\n/* Define as the type of the result of subtracting two pointers, if the system\n   doesn't define it. */\n#undef ptrdiff_t\n\n/* Define to the equivalent of the C99 'restrict' keyword, or to\n   nothing if this is not supported.  Do not define if restrict is\n   supported directly.  */\n#undef restrict\n/* Work around a bug in Sun C++: it does not support _Restrict or\n   __restrict__, even though the corresponding Sun C compiler ends up with\n   \"#define restrict _Restrict\" or \"#define restrict __restrict__\" in the\n   previous line.  Perhaps some future version of Sun C++ will work with\n   restrict; if so, hopefully it defines __RESTRICT like Sun C does.  */\n#if defined __SUNPRO_CC && !defined __RESTRICT\n# define _Restrict\n# define __restrict__\n#endif\n\n/* Define to `unsigned int' if <sys/types.h> does not define. */\n#undef size_t\n\n/* type to use in place of socklen_t if not defined */\n#undef socklen_t\n\n/* Define as a signed type of the same size as size_t. */\n#undef ssize_t\n\n/* Define to `int' if <sys/types.h> doesn't define. */\n#undef uid_t\n\n/* Define to the type of an unsigned integer type of width exactly 64 bits if\n   such a type exists and the standard includes do not define it. */\n#undef uint64_t\n\n/* Define as a marker that can be attached to declarations that might not\n    be used.  This helps to reduce warnings, such as from\n    GCC -Wunused-parameter.  */\n#if __GNUC__ >= 3 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 7)\n# define _GL_UNUSED __attribute__ ((__unused__))\n#else\n# define _GL_UNUSED\n#endif\n/* The name _UNUSED_PARAMETER_ is an earlier spelling, although the name\n   is a misnomer outside of parameter lists.  */\n#define _UNUSED_PARAMETER_ _GL_UNUSED\n\n/* gcc supports the \"unused\" attribute on possibly unused labels, and\n   g++ has since version 4.5.  Note to support C++ as well as C,\n   _GL_UNUSED_LABEL should be used with a trailing ;  */\n#if !defined __cplusplus || __GNUC__ > 4 \\\n    || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)\n# define _GL_UNUSED_LABEL _GL_UNUSED\n#else\n# define _GL_UNUSED_LABEL\n#endif\n\n/* The __pure__ attribute was added in gcc 2.96.  */\n#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 96)\n# define _GL_ATTRIBUTE_PURE __attribute__ ((__pure__))\n#else\n# define _GL_ATTRIBUTE_PURE /* empty */\n#endif\n\n/* The __const__ attribute was added in gcc 2.95.  */\n#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)\n# define _GL_ATTRIBUTE_CONST __attribute__ ((__const__))\n#else\n# define _GL_ATTRIBUTE_CONST /* empty */\n#endif\n\n\n#include \"oct-conf-post.h\"\n",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/liboctave/util/oct-shlib.cc": "/*\n\nCopyright (C) 1999-2017 John W. Eaton\nCopyright (C) 2009 VZLU Prague\n\nThis file is part of Octave.\n\nOctave is free software; you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation; either version 3 of the License, or (at your\noption) any later version.\n\nOctave is distributed in the hope that it will be useful, but WITHOUT\nANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\nfor more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Octave; see the file COPYING.  If not, see\n<http://www.gnu.org/licenses/>.\n\n*/\n\n#if defined (HAVE_CONFIG_H)\n#  include \"config.h\"\n#endif\n\n#include <map>\n\n#if defined (HAVE_SHL_LOAD_API)\n#  include <cerrno>\n#  include <cstring>\n#endif\n\n#if defined (HAVE_DYLD_API)\n#  include <mach-o/dyld.h>\n#endif\n\nextern \"C\"\n{\n#if defined (HAVE_DLOPEN_API)\n#  if defined (HAVE_DLFCN_H)\n#    include <dlfcn.h>\n#  else\nextern void *dlopen (const char *, int);\nextern const char *dlerror (void);\nextern void *dlsym (void *, const char *);\nextern int dlclose (void *);\n#  endif\n#elif defined (HAVE_SHL_LOAD_API)\n#  include <dl.h>\n#elif defined (HAVE_LOADLIBRARY_API)\n#  define WIN32_LEAN_AND_MEAN 1\n#  include <windows.h>\n#endif\n}\n\n#include \"file-ops.h\"\n#include \"file-stat.h\"\n#include \"lo-error.h\"\n#include \"oct-shlib.h\"\n#include \"str-vec.h\"\n\nnamespace octave\n{\n  dynamic_library::dynlib_rep::dynlib_rep (const std::string& f)\n    : count (1), file (f), tm_loaded (), fcn_names ()\n  {\n    instances[f] = this;\n\n    if (is_out_of_date ())\n      (*current_liboctave_warning_with_id_handler)\n        (\"Octave:warn-future-time-stamp\",\n         \"timestamp on file %s is in the future\", file.c_str ());\n  }\n\n  bool\n  dynamic_library::dynlib_rep::is_out_of_date (void) const\n  {\n    octave::sys::file_stat fs (file);\n    return (fs && fs.is_newer (tm_loaded));\n  }\n\n  void\n  dynamic_library::dynlib_rep::fake_reload (void)\n  {\n    // We can't actually reload the library, but we'll pretend we did.\n    octave::sys::file_stat fs (file);\n    if (fs && fs.is_newer (tm_loaded))\n      {\n        tm_loaded = fs.mtime ();\n\n        (*current_liboctave_warning_with_id_handler)\n          (\"Octave:library-reload\",\n           \"library %s not reloaded due to existing references\", file.c_str ());\n      }\n  }\n\n  dynamic_library::dynlib_rep *\n  dynamic_library::dynlib_rep::get_instance (const std::string& f, bool fake)\n  {\n    dynlib_rep *retval = 0;\n    std::map<std::string, dynlib_rep *>::iterator p = instances.find (f);\n    if (p != instances.end ())\n      {\n        retval = p->second;\n        retval->count++;\n        if (fake)\n          retval->fake_reload ();\n      }\n    else\n      retval = new_instance (f);\n\n    return retval;\n  }\n\n  void\n  dynamic_library::dynlib_rep::add_fcn_name (const std::string& name)\n  {\n    auto p = fcn_names.find (name);\n\n    if (p == fcn_names.end ())\n      fcn_names[name] = 1;\n    else\n      ++(p->second);\n  }\n\n  bool\n  dynamic_library::dynlib_rep::remove_fcn_name (const std::string& fcn_name)\n  {\n    bool retval = false;\n\n    auto p = fcn_names.find (fcn_name);\n\n    if (p != fcn_names.end () && --(p->second) == 0)\n      {\n        fcn_names.erase (fcn_name);\n        retval = true;\n      }\n\n    return retval;\n  }\n\n  void\n  dynamic_library::dynlib_rep::do_close_hook (dynamic_library::close_hook cl_hook)\n  {\n    for (auto& fcn_sz_p : fcn_names)\n      cl_hook (fcn_sz_p.first);\n\n    fcn_names.clear ();\n  }\n\n  std::map<std::string, dynamic_library::dynlib_rep *>\n    dynamic_library::dynlib_rep::instances;\n\n  dynamic_library::dynlib_rep dynamic_library::nil_rep;\n\n#if defined (HAVE_DLOPEN_API)\n\n  class\n  octave_dlopen_shlib : public dynamic_library::dynlib_rep\n  {\n  public:\n\n    octave_dlopen_shlib (const std::string& f);\n\n    ~octave_dlopen_shlib (void);\n\n    void *search (const std::string& name,\n                  dynamic_library::name_mangler mangler = 0);\n\n    // FIXME: this is possibly redundant because failure to open a library will\n    // normally throw an exception, avoiding the construction of an invalid\n    // library.  Leave it here for possible future use.\n\n    bool is_open (void) const { return (library != 0); }\n\n  private:\n\n    // No copying!\n\n    octave_dlopen_shlib (const octave_dlopen_shlib&);\n\n    octave_dlopen_shlib& operator = (const octave_dlopen_shlib&);\n\n    void *library;\n  };\n\n  octave_dlopen_shlib::octave_dlopen_shlib (const std::string& f)\n    : dynamic_library::dynlib_rep (f), library (0)\n  {\n    int flags = 0;\n\n    // Use RTLD_NOW to resolve all symbols before dlopen returns.\n    // By using this option, dlopen will detect errors and Octave\n    // won't exit if there are unresolved symbols in the file we are\n    // loading, and we may even get a useful diagnostic.\n#  if defined (RTLD_NOW)\n    flags |= RTLD_NOW;\n#  endif\n\n    // Use RTLD_GLOBAL to export symbols from loaded objects so they are\n    // available to other subsequently loaded libraries.\n#  if defined (RTLD_GLOBAL)\n    flags |= RTLD_GLOBAL;\n#  endif\n\n    library = dlopen (file.c_str (), flags);\n\n    if (! library)\n      {\n        const char *msg = dlerror ();\n\n        if (msg)\n          (*current_liboctave_error_handler) (\"%s: failed to load: %s\",\n                                              file.c_str (), msg);\n        else\n          (*current_liboctave_error_handler) (\"%s: failed to load\",\n                                              file.c_str ());\n      }\n  }\n\n  octave_dlopen_shlib::~octave_dlopen_shlib (void)\n  {\n    if (library)\n      dlclose (library);\n  }\n\n  void *\n  octave_dlopen_shlib::search (const std::string& name,\n                               dynamic_library::name_mangler mangler)\n  {\n    void *function = 0;\n\n    if (! is_open ())\n      (*current_liboctave_error_handler)\n        (\"shared library %s is not open\", file.c_str ());\n\n    std::string sym_name = name;\n\n    if (mangler)\n      sym_name = mangler (name);\n\n    function = dlsym (library, sym_name.c_str ());\n\n    return function;\n  }\n\n#elif defined (HAVE_SHL_LOAD_API)\n\n  class\n  octave_shl_load_shlib : public dynamic_library::dynlib_rep\n  {\n  public:\n\n    octave_shl_load_shlib (const std::string& f);\n\n    ~octave_shl_load_shlib (void);\n\n    void *search (const std::string& name,\n                  dynamic_library::name_mangler mangler = 0);\n\n    bool is_open (void) const { return (library != 0); }\n\n  private:\n\n    // No copying!\n\n    octave_shl_load_shlib (const octave_shl_load_shlib&);\n\n    octave_shl_load_shlib& operator = (const octave_shl_load_shlib&);\n\n    shl_t library;\n  };\n\n  octave_shl_load_shlib::octave_shl_load_shlib (const std::string& f)\n    : dynamic_library::dynlib_rep (f), library (0)\n  {\n    file = f;\n\n    library = shl_load (file.c_str (), BIND_IMMEDIATE, 0L);\n\n    if (! library)\n      {\n        using namespace std;  // FIXME: Why have this line?\n        (*current_liboctave_error_handler) (\"%s\", std::strerror (errno));\n      }\n  }\n\n  octave_shl_load_shlib::~octave_shl_load_shlib (void)\n  {\n    if (library)\n      shl_unload (library);\n  }\n\n  void *\n  octave_shl_load_shlib::search (const std::string& name,\n                                 dynamic_library::name_mangler mangler)\n  {\n    void *function = 0;\n\n    if (! is_open ())\n      (*current_liboctave_error_handler)\n        (\"shared library %s is not open\", file.c_str ());\n\n    std::string sym_name = name;\n\n    if (mangler)\n      sym_name = mangler (name);\n\n    int status = shl_findsym (&library, sym_name.c_str (),\n                              TYPE_UNDEFINED, &function);\n\n    return function;\n  }\n\n#elif defined (HAVE_LOADLIBRARY_API)\n\n  class\n  octave_w32_shlib: public dynamic_library::dynlib_rep\n  {\n  public:\n\n    octave_w32_shlib (const std::string& f);\n\n    ~octave_w32_shlib (void);\n\n    void *search (const std::string& name,\n                  dynamic_library::name_mangler mangler = 0);\n\n    bool is_open (void) const { return (handle != 0); }\n\n  private:\n\n    // No copying!\n\n    octave_w32_shlib (const octave_w32_shlib&);\n\n    octave_w32_shlib& operator = (const octave_w32_shlib&);\n\n    HINSTANCE handle;\n  };\n\n  static void\n  set_dll_directory (const std::string& dir = \"\")\n  {\n    SetDllDirectory (dir.empty () ? 0 : dir.c_str ());\n  }\n\n  octave_w32_shlib::octave_w32_shlib (const std::string& f)\n    : dynamic_library::dynlib_rep (f), handle (0)\n  {\n    std::string dir = octave::sys::file_ops::dirname (f);\n\n    set_dll_directory (dir);\n\n    handle = LoadLibrary (file.c_str ());\n\n    set_dll_directory ();\n\n    if (! handle)\n      {\n        DWORD lastError = GetLastError ();\n        const char *msg;\n\n        switch (lastError)\n          {\n          case ERROR_MOD_NOT_FOUND:\n          case ERROR_DLL_NOT_FOUND:\n            msg = \"could not find library or dependencies\";\n            break;\n\n          case ERROR_INVALID_DLL:\n            msg = \"library or its dependencies are damaged\";\n            break;\n\n          case ERROR_DLL_INIT_FAILED:\n            msg = \"library initialization routine failed\";\n            break;\n\n          default:\n            msg = \"library open failed\";\n          }\n\n        (*current_liboctave_error_handler) (\"%s: %s\", msg, file.c_str ());\n      }\n  }\n\n  octave_w32_shlib::~octave_w32_shlib (void)\n  {\n    if (handle)\n      FreeLibrary (handle);\n  }\n\n  void *\n  octave_w32_shlib::search (const std::string& name,\n                            dynamic_library::name_mangler mangler)\n  {\n    void *function = 0;\n\n    if (! is_open ())\n      (*current_liboctave_error_handler)\n        (\"shared library %s is not open\", file.c_str ());\n\n    std::string sym_name = name;\n\n    if (mangler)\n      sym_name = mangler (name);\n\n    function = reinterpret_cast<void *> (GetProcAddress (handle,\n                                                         sym_name.c_str ()));\n\n    return function;\n  }\n\n#elif defined (HAVE_DYLD_API)\n\n  class\n  octave_dyld_shlib : public dynamic_library::dynlib_rep\n  {\n  public:\n\n    octave_dyld_shlib (void);\n\n    ~octave_dyld_shlib (void);\n\n    void open (const std::string& f);\n\n    void *search (const std::string& name,\n                  dynamic_library::name_mangler mangler = 0);\n\n    void close (dynamic_library::close_hook cl_hook = 0);\n\n    bool is_open (void) const {return (handle != 0); }\n\n  private:\n\n    // No copying!\n\n    octave_dyld_shlib (const octave_dyld_shlib&);\n\n    octave_dyld_shlib& operator = (const octave_dyld_shlib&);\n\n    NSObjectFileImage img;\n    NSModule handle;\n  };\n\n  octave_dyld_shlib::octave_dyld_shlib (const std::string& f)\n    : dynamic_library::dynlib_rep (f), handle (0)\n  {\n    int returnCode = NSCreateObjectFileImageFromFile (file.c_str (), &img);\n\n    if (NSObjectFileImageSuccess != returnCode)\n      {\n        (*current_liboctave_error_handler)\n          (\"got NSObjectFileImageReturnCode %d\", returnCode);\n\n        // FIXME: should use NSLinkEditError () to get\n        //        more info on what went wrong.\n      }\n\n    handle = NSLinkModule (img, file.c_str (),\n                           (NSLINKMODULE_OPTION_RETURN_ON_ERROR\n                            | NSLINKMODULE_OPTION_PRIVATE));\n    if (! handle)\n      {\n        NSLinkEditErrors ler;\n        int lerno;\n        const char *file2;\n        const char *errstr = 0;\n\n        NSLinkEditError (&ler, &lerno, &file2, &errstr);\n\n        if (! errstr)\n          errstr = \"unspecified error\";\n\n        (*current_liboctave_error_handler) (\"%s: %s\", file.c_str (), errstr);\n      }\n  }\n\n  octave_dyld_shlib::~octave_dyld_shlib (void)\n  {\n    if (handle)\n      NSUnLinkModule (handle, NSUNLINKMODULE_OPTION_RESET_LAZY_REFERENCES);\n\n    NSDestroyObjectFileImage (img);\n  }\n\n  void *\n  octave_dyld_shlib::search (const std::string& name,\n                             dynamic_library::name_mangler mangler)\n  {\n    void *function = 0;\n\n    if (! is_open ())\n      (*current_liboctave_error_handler)\n        (\"bundle %s is not open\", file.c_str ());\n\n    std::string sym_name = name;\n\n    if (mangler)\n      sym_name = mangler (name);\n\n    NSSymbol symbol = NSLookupSymbolInModule (handle, sym_name.c_str ());\n\n    if (symbol)\n      {\n        function = NSAddressOfSymbol (symbol);\n      }\n\n    return function;\n  }\n\n#endif\n\n  dynamic_library::dynlib_rep *\n  dynamic_library::dynlib_rep::new_instance (const std::string& f)\n  {\n#if defined (HAVE_DLOPEN_API)\n    return new octave_dlopen_shlib (f);\n#elif defined (HAVE_SHL_LOAD_API)\n    return new octave_shl_load_shlib (f);\n#elif defined (HAVE_LOADLIBRARY_API)\n    return new octave_w32_shlib (f);\n#elif defined (HAVE_DYLD_API)\n    return new octave_dyld_shlib (f);\n#else\n    (*current_liboctave_error_handler)\n      (\"support for dynamically loaded libraries was unavailable or disabled when liboctave was built\");\n#endif\n  }\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/liboctave/cruft/misc/blaswrap.c": "/*\n\nCopyright (C) 2012-2017 Jarno Rajahalme\n\nThis file is part of Octave.\n\nOctave is free software; you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation; either version 3 of the License, or (at your\noption) any later version.\n\nOctave is distributed in the hope that it will be useful, but WITHOUT\nANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\nfor more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Octave; see the file COPYING.  If not, see\n<http://www.gnu.org/licenses/>.\n\n*/\n\n/*\n\nWrapper for Apple libBLAS.dylib and libLAPACK.dylib\n\nAt least on the versions of OSX 10.6 so far (up and including 10.6.6)\nthese libraries are incompatible with 64 bit builds, as some functions\nin libBLAS.dylib are not conforming to F2C calling conventions, as\nthey should.  This breaks them in 64-bit builds on the x86_64\narchitecture.\n\nNewer gfortran compoilers no longer default to the F2C calling\nconvention.  These wrappers map the F2C conformant functions in\nlibBLAS and libLAPACK to the native gfortran calling convention, so\nthat the libraries can be used with software built for x86_64\narchitecture.\n\n*/\n\n#if defined (HAVE_CONFIG_H)\n#  include \"config.h\" /* USE_BLASWRAP ? */\n#endif\n\n#if defined (USE_BLASWRAP)\n\n/*\n * vecLib is an Apple framework (collection of libraries) containing\n * libBLAS and libLAPACK.  The fortran stubs in these libraries are\n * (mostly, but not completely) in the F2C calling convention.\n * We access the libraries via the vecLib framework to make sure we\n * get the Apple versions, rather than some other blas/lapack with the\n * same name.\n */\n#if ! defined (VECLIB_FILE)\n#  define VECLIB_FILE \"/System/Library/Frameworks/vecLib.framework/Versions/A/vecLib\"\n#endif\n\n/*\n * Since this is a wrapper for fortran functions,\n * we do not have prototypes for them.\n */\n#pragma GCC diagnostic ignored \"-Wmissing-prototypes\"\n\n#include <dlfcn.h>\n#include <stdlib.h>\n\n/*\n * Apple LAPACK follows F2C calling convention,\n * Convert to normal gfortran calling convention\n */\n\nstatic void (*f2c_blas_func[]) (void);   /* forward declaration for wrapper */\nstatic void (*f2c_lapack_func[]) (void); /* forward declaration for wrapper */\n\n/*\n * LAPACK Wrappers, only need to convert the return value from double to float\n */\n\ntypedef double (*F2C_CALL_0) (void);\ntypedef double (*F2C_CALL_1) (void *a1);\ntypedef double (*F2C_CALL_2) (void *a1, void *a2);\ntypedef double (*F2C_CALL_3) (void *a1, void *a2, void *a3);\ntypedef double (*F2C_CALL_4) (void *a1, void *a2, void *a3, void *a4);\ntypedef double (*F2C_CALL_5) (void *a1, void *a2, void *a3, void *a4, void *a5);\ntypedef double (*F2C_CALL_6) (void *a1, void *a2, void *a3, void *a4, void *a5,\n                              void *a6);\ntypedef double (*F2C_CALL_7) (void *a1, void *a2, void *a3, void *a4, void *a5,\n                              void *a6, void *a7);\ntypedef double (*F2C_CALL_8) (void *a1, void *a2, void *a3, void *a4, void *a5,\n                              void *a6, void *a7, void *a8);\n\n#define F2C_LAPACK_CALL_8(name) \\\n  float name (void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8) \\\n  {                                                                     \\\n    return ((F2C_CALL_8)f2c_lapack_func[f2c_ ## name]) (a1, a2, a3, a4, a5, a6, a7, a8); \\\n  }\n\n#define F2C_LAPACK_CALL_7(name) \\\n  float name (void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7) \\\n  {                                                                     \\\n    return ((F2C_CALL_7)f2c_lapack_func[f2c_ ## name]) (a1, a2, a3, a4, a5, a6, a7); \\\n  }\n\n#define F2C_LAPACK_CALL_6(name) \\\n  float name (void *a1, void *a2, void *a3, void *a4, void *a5, void *a6) \\\n  {                                                                     \\\n    return ((F2C_CALL_6)f2c_lapack_func[f2c_ ## name]) (a1, a2, a3, a4, a5, a6); \\\n  }\n\n#define F2C_LAPACK_CALL_5(name) \\\n  float name (void *a1, void *a2, void *a3, void *a4, void *a5)         \\\n  {                                                                     \\\n    return ((F2C_CALL_5)f2c_lapack_func[f2c_ ## name]) (a1, a2, a3, a4, a5); \\\n  }\n\n#define F2C_LAPACK_CALL_4(name) \\\n  float name (void *a1, void *a2, void *a3, void *a4)                   \\\n  {                                                                     \\\n    return ((F2C_CALL_4)f2c_lapack_func[f2c_ ## name]) (a1, a2, a3, a4); \\\n  }\n\n#define F2C_LAPACK_CALL_3(name) \\\n  float name (void *a1, void *a2, void *a3)                          \\\n  {                                                                  \\\n    return ((F2C_CALL_3)f2c_lapack_func[f2c_ ## name]) (a1, a2, a3); \\\n  }\n\n#define F2C_LAPACK_CALL_2(name) \\\n  float name (void *a1, void *a2)                                \\\n  {                                                              \\\n    return ((F2C_CALL_2)f2c_lapack_func[f2c_ ## name]) (a1, a2); \\\n  }\n\n#define F2C_LAPACK_CALL_1(name) \\\n  float name (void *a1)                                      \\\n  {                                                          \\\n    return ((F2C_CALL_1)f2c_lapack_func[f2c_ ## name]) (a1); \\\n  }\n\n#define F2C_LAPACK_CALL_0(name) \\\n  float name (void)                                        \\\n  {                                                        \\\n    return ((F2C_CALL_0)f2c_lapack_func[f2c_ ## name]) (); \\\n  }\n\n#define F2C_LAPACK_CALL_NONE(name)\n\n#define F2C_LAPACK_CALL(name, args) F2C_LAPACK_CALL_ ## args (name)\n\n#define ENUM_ITEM(name, args)                   \\\n  f2c_ ## name,\n\n#define NAME_TO_STRING_CASE(name, args)         \\\n  case f2c_ ## name: return #name;\n\n#define DEFINE_LAPACK_ENUM(name, list)  \\\n  typedef enum {                        \\\n    list(ENUM_ITEM)                     \\\n  } name;                               \\\n  static const char*                    \\\n  f2c_ ## name ## _name (name n) {      \\\n    switch (n) {                        \\\n      list(NAME_TO_STRING_CASE)         \\\n    default: return \"\";                 \\\n    }                                   \\\n  }                                     \\\n  list(F2C_LAPACK_CALL)\n\n#define DEFINE_BLAS_ENUM(name, list)    \\\n  typedef enum {                        \\\n    list(ENUM_ITEM)                     \\\n  } name;                               \\\n  static const char*                    \\\n  f2c_ ## name ## _name(name n) {       \\\n    switch (n) {                        \\\n      list(NAME_TO_STRING_CASE)         \\\n    default: return \"\";                 \\\n    }                                   \\\n  }\n\n/*\n * Lapack functions (with argument count) that need the return value\n * converted from double to float\n */\n#define LAPACK_LIST(_)  \\\n  _(clangb_,7)          \\\n  _(clange_,6)          \\\n  _(clangt_,5)          \\\n  _(clanhb_,7)          \\\n  _(clanhe_,6)          \\\n  _(clanhp_,5)          \\\n  _(clanhs_,5)          \\\n  _(clanht_,4)          \\\n  _(clansb_,7)          \\\n  _(clansp_,5)          \\\n  _(clansy_,6)          \\\n  _(clantb_,8)          \\\n  _(clantp_,6)          \\\n  _(clantr_,8)          \\\n  _(scsum1_,3)          \\\n  _(second_,0)          \\\n  _(slamc3_,2)          \\\n  _(slamch_,1)          \\\n  _(slangb_,7)          \\\n  _(slange_,6)          \\\n  _(slangt_,5)          \\\n  _(slanhs_,5)          \\\n  _(slansb_,7)          \\\n  _(slansp_,5)          \\\n  _(slanst_,4)          \\\n  _(slansy_,6)          \\\n  _(slantb_,8)          \\\n  _(slantp_,6)          \\\n  _(slantr_,8)          \\\n  _(slapy2_,2)          \\\n  _(slapy3_,3)          \\\n  _(LAPACK_COUNT,NONE)\n\n/*\n * These need a bit more complex wrappers\n */\n#define BLAS_LIST(_)    \\\n  _(cdotu_,6)           \\\n  _(zdotu_,6)           \\\n  _(cdotc_,6)           \\\n  _(zdotc_,6)           \\\n  _(BLAS_COUNT,NONE)\n\nDEFINE_BLAS_ENUM(blas, BLAS_LIST)\n\nDEFINE_LAPACK_ENUM(lapack, LAPACK_LIST)\n\n/*\n * BLAS wrappers, F2C convention passes retuned complex as an extra first\n * argument\n */\ntypedef struct { float r, i; } complex;\ntypedef struct { double r, i; } doublecomplex;\n\ntypedef void (*F2C_BLAS_CALL_6) (void *c, void *a1, void *a2, void *a3,\n                                 void *a4, void *a5);\n\n#define F2C_BLAS_CALL(type, name) \\\ntype name (void *a1, void *a2, void *a3, void *a4, void *a5) \\\n{ \\\n  type cplx; \\\n  ((F2C_BLAS_CALL_6)f2c_blas_func[f2c_ ## name]) (&cplx, a1, a2, a3, a4, a5); \\\n  return cplx; \\\n}\n\nF2C_BLAS_CALL(complex, cdotu_)\nF2C_BLAS_CALL(doublecomplex, zdotu_)\nF2C_BLAS_CALL(complex, cdotc_)\nF2C_BLAS_CALL(doublecomplex, zdotc_)\n\n/*\n * Function pointer arrays, indexed by the enums\n */\nstatic void (*f2c_blas_func[f2c_BLAS_COUNT]) (void) = { 0 };\nstatic void (*f2c_lapack_func[f2c_LAPACK_COUNT]) (void) = { 0 };\n\n/*\n * Initialization: This is called before main ().\n * Get the function pointers to the wrapped functions in Apple vecLib\n */\n\nstatic void * apple_vecLib = 0;\n\n__attribute__((constructor))\nstatic void initVecLibWrappers (void)\n{\n  apple_vecLib = dlopen (VECLIB_FILE, RTLD_LOCAL | RTLD_NOLOAD | RTLD_FIRST);\n  if (0 == apple_vecLib)\n    abort ();\n\n  int i;\n  for (i = 0; i < f2c_LAPACK_COUNT; i++)\n    if (0 == (f2c_lapack_func[i] = dlsym (apple_vecLib, f2c_lapack_name(i))))\n      abort ();\n  for (i = 0; i < f2c_BLAS_COUNT; i++)\n    if (0 == (f2c_blas_func[i] = dlsym (apple_vecLib, f2c_blas_name(i))))\n      abort ();\n}\n\n__attribute__((destructor))\nstatic void finiVecLibWrappers (void)\n{\n  if (apple_vecLib)\n    dlclose (apple_vecLib);\n  apple_vecLib = 0;\n}\n\n#endif /* USE_BLASWRAP */\n",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/m4/libtool.m4": "# libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-\n#\n#   Copyright (C) 1996-2001, 2003-2015 Free Software Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\nm4_define([_LT_COPYING], [dnl\n# Copyright (C) 2014 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program or library that is built\n# using GNU Libtool, you may include this file under the  same\n# distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n])\n\n# serial 58 LT_INIT\n\n\n# LT_PREREQ(VERSION)\n# ------------------\n# Complain and exit if this libtool version is less that VERSION.\nm4_defun([LT_PREREQ],\n[m4_if(m4_version_compare(m4_defn([LT_PACKAGE_VERSION]), [$1]), -1,\n       [m4_default([$3],\n\t\t   [m4_fatal([Libtool version $1 or higher is required],\n\t\t             63)])],\n       [$2])])\n\n\n# _LT_CHECK_BUILDDIR\n# ------------------\n# Complain if the absolute build directory name contains unusual characters\nm4_defun([_LT_CHECK_BUILDDIR],\n[case `pwd` in\n  *\\ * | *\\\t*)\n    AC_MSG_WARN([Libtool does not cope well with whitespace in `pwd`]) ;;\nesac\n])\n\n\n# LT_INIT([OPTIONS])\n# ------------------\nAC_DEFUN([LT_INIT],\n[AC_PREREQ([2.62])dnl We use AC_PATH_PROGS_FEATURE_CHECK\nAC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl\nAC_BEFORE([$0], [LT_LANG])dnl\nAC_BEFORE([$0], [LT_OUTPUT])dnl\nAC_BEFORE([$0], [LTDL_INIT])dnl\nm4_require([_LT_CHECK_BUILDDIR])dnl\n\ndnl Autoconf doesn't catch unexpanded LT_ macros by default:\nm4_pattern_forbid([^_?LT_[A-Z_]+$])dnl\nm4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl\ndnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4\ndnl unless we require an AC_DEFUNed macro:\nAC_REQUIRE([LTOPTIONS_VERSION])dnl\nAC_REQUIRE([LTSUGAR_VERSION])dnl\nAC_REQUIRE([LTVERSION_VERSION])dnl\nAC_REQUIRE([LTOBSOLETE_VERSION])dnl\nm4_require([_LT_PROG_LTMAIN])dnl\n\n_LT_SHELL_INIT([SHELL=${CONFIG_SHELL-/bin/sh}])\n\ndnl Parse OPTIONS\n_LT_SET_OPTIONS([$0], [$1])\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=$ltmain\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\nAC_SUBST(LIBTOOL)dnl\n\n_LT_SETUP\n\n# Only expand once:\nm4_define([LT_INIT])\n])# LT_INIT\n\n# Old names:\nAU_ALIAS([AC_PROG_LIBTOOL], [LT_INIT])\nAU_ALIAS([AM_PROG_LIBTOOL], [LT_INIT])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PROG_LIBTOOL], [])\ndnl AC_DEFUN([AM_PROG_LIBTOOL], [])\n\n\n# _LT_PREPARE_CC_BASENAME\n# -----------------------\nm4_defun([_LT_PREPARE_CC_BASENAME], [\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nfunc_cc_basename ()\n{\n    for cc_temp in @S|@*\"\"; do\n      case $cc_temp in\n        compile | *[[\\\\/]]compile | ccache | *[[\\\\/]]ccache ) ;;\n        distcc | *[[\\\\/]]distcc | purify | *[[\\\\/]]purify ) ;;\n        \\-*) ;;\n        *) break;;\n      esac\n    done\n    func_cc_basename_result=`$ECHO \"$cc_temp\" | $SED \"s%.*/%%; s%^$host_alias-%%\"`\n}\n])# _LT_PREPARE_CC_BASENAME\n\n\n# _LT_CC_BASENAME(CC)\n# -------------------\n# It would be clearer to call AC_REQUIREs from _LT_PREPARE_CC_BASENAME,\n# but that macro is also expanded into generated libtool script, which\n# arranges for $SED and $ECHO to be set by different means.\nm4_defun([_LT_CC_BASENAME],\n[m4_require([_LT_PREPARE_CC_BASENAME])dnl\nAC_REQUIRE([_LT_DECL_SED])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\nfunc_cc_basename $1\ncc_basename=$func_cc_basename_result\n])\n\n\n# _LT_FILEUTILS_DEFAULTS\n# ----------------------\n# It is okay to use these file commands and assume they have been set\n# sensibly after 'm4_require([_LT_FILEUTILS_DEFAULTS])'.\nm4_defun([_LT_FILEUTILS_DEFAULTS],\n[: ${CP=\"cp -f\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n])# _LT_FILEUTILS_DEFAULTS\n\n\n# _LT_SETUP\n# ---------\nm4_defun([_LT_SETUP],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_REQUIRE([_LT_PREPARE_SED_QUOTE_VARS])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\n\n_LT_DECL([], [PATH_SEPARATOR], [1], [The PATH separator for the build system])dnl\ndnl\n_LT_DECL([], [host_alias], [0], [The host system])dnl\n_LT_DECL([], [host], [0])dnl\n_LT_DECL([], [host_os], [0])dnl\ndnl\n_LT_DECL([], [build_alias], [0], [The build system])dnl\n_LT_DECL([], [build], [0])dnl\n_LT_DECL([], [build_os], [0])dnl\ndnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\ndnl\nAC_REQUIRE([AC_PROG_LN_S])dnl\ntest -z \"$LN_S\" && LN_S=\"ln -s\"\n_LT_DECL([], [LN_S], [1], [Whether we need soft or hard links])dnl\ndnl\nAC_REQUIRE([LT_CMD_MAX_LEN])dnl\n_LT_DECL([objext], [ac_objext], [0], [Object file suffix (normally \"o\")])dnl\n_LT_DECL([], [exeext], [0], [Executable file suffix (normally \"\")])dnl\ndnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_PATH_CONVERSION_FUNCTIONS])dnl\nm4_require([_LT_CMD_RELOAD])dnl\nm4_require([_LT_CHECK_MAGIC_METHOD])dnl\nm4_require([_LT_CHECK_SHAREDLIB_FROM_LINKLIB])dnl\nm4_require([_LT_CMD_OLD_ARCHIVE])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_WITH_SYSROOT])dnl\nm4_require([_LT_CMD_TRUNCATE])dnl\n\n_LT_CONFIG_LIBTOOL_INIT([\n# See if we are running on zsh, and set the options that allow our\n# commands through without removal of \\ escapes INIT.\nif test -n \"\\${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n])\nif test -n \"${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n\n_LT_CHECK_OBJDIR\n\nm4_require([_LT_TAG_COMPILER])dnl\n\ncase $host_os in\naix3*)\n  # AIX sometimes has problems with the GCC collect2 program.  For some\n  # reason, if we set the COLLECT_NAMES environment variable, the problems\n  # vanish in a puff of smoke.\n  if test set != \"${COLLECT_NAMES+set}\"; then\n    COLLECT_NAMES=\n    export COLLECT_NAMES\n  fi\n  ;;\nesac\n\n# Global variables:\nofile=libtool\ncan_build_shared=yes\n\n# All known linkers require a '.a' archive for static linking (except MSVC,\n# which needs '.lib').\nlibext=a\n\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n\nold_CC=$CC\nold_CFLAGS=$CFLAGS\n\n# Set sane defaults for various variables\ntest -z \"$CC\" && CC=cc\ntest -z \"$LTCC\" && LTCC=$CC\ntest -z \"$LTCFLAGS\" && LTCFLAGS=$CFLAGS\ntest -z \"$LD\" && LD=ld\ntest -z \"$ac_objext\" && ac_objext=o\n\n_LT_CC_BASENAME([$compiler])\n\n# Only perform the check for file, if the check method requires it\ntest -z \"$MAGIC_CMD\" && MAGIC_CMD=file\ncase $deplibs_check_method in\nfile_magic*)\n  if test \"$file_magic_cmd\" = '$MAGIC_CMD'; then\n    _LT_PATH_MAGIC\n  fi\n  ;;\nesac\n\n# Use C for the default configuration in the libtool script\nLT_SUPPORTED_TAG([CC])\n_LT_LANG_C_CONFIG\n_LT_LANG_DEFAULT_CONFIG\n_LT_CONFIG_COMMANDS\n])# _LT_SETUP\n\n\n# _LT_PREPARE_SED_QUOTE_VARS\n# --------------------------\n# Define a few sed substitution that help us do robust quoting.\nm4_defun([_LT_PREPARE_SED_QUOTE_VARS],\n[# Backslashify metacharacters that are still active within\n# double-quoted strings.\nsed_quote_subst='s/\\([[\"`$\\\\]]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([[\"`\\\\]]\\)/\\\\\\1/g'\n\n# Sed substitution to delay expansion of an escaped shell variable in a\n# double_quote_subst'ed string.\ndelay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n\n# Sed substitution to delay expansion of an escaped single quote.\ndelay_single_quote_subst='s/'\\''/'\\'\\\\\\\\\\\\\\'\\''/g'\n\n# Sed substitution to avoid accidental globbing in evaled expressions\nno_glob_subst='s/\\*/\\\\\\*/g'\n])\n\n# _LT_PROG_LTMAIN\n# ---------------\n# Note that this code is called both from 'configure', and 'config.status'\n# now that we use AC_CONFIG_COMMANDS to generate libtool.  Notably,\n# 'config.status' has no value for ac_aux_dir unless we are using Automake,\n# so we pass a copy along to make sure it has a sensible value anyway.\nm4_defun([_LT_PROG_LTMAIN],\n[m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([ltmain.sh])])dnl\n_LT_CONFIG_LIBTOOL_INIT([ac_aux_dir='$ac_aux_dir'])\nltmain=$ac_aux_dir/ltmain.sh\n])# _LT_PROG_LTMAIN\n\n\n## ------------------------------------- ##\n## Accumulate code for creating libtool. ##\n## ------------------------------------- ##\n\n# So that we can recreate a full libtool script including additional\n# tags, we accumulate the chunks of code to send to AC_CONFIG_COMMANDS\n# in macros and then make a single call at the end using the 'libtool'\n# label.\n\n\n# _LT_CONFIG_LIBTOOL_INIT([INIT-COMMANDS])\n# ----------------------------------------\n# Register INIT-COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL_INIT],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_INIT],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_INIT])\n\n\n# _LT_CONFIG_LIBTOOL([COMMANDS])\n# ------------------------------\n# Register COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_COMMANDS],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS])\n\n\n# _LT_CONFIG_SAVE_COMMANDS([COMMANDS], [INIT_COMMANDS])\n# -----------------------------------------------------\nm4_defun([_LT_CONFIG_SAVE_COMMANDS],\n[_LT_CONFIG_LIBTOOL([$1])\n_LT_CONFIG_LIBTOOL_INIT([$2])\n])\n\n\n# _LT_FORMAT_COMMENT([COMMENT])\n# -----------------------------\n# Add leading comment marks to the start of each line, and a trailing\n# full-stop to the whole comment if one is not present already.\nm4_define([_LT_FORMAT_COMMENT],\n[m4_ifval([$1], [\nm4_bpatsubst([m4_bpatsubst([$1], [^ *], [# ])],\n              [['`$\\]], [\\\\\\&])]m4_bmatch([$1], [[!?.]$], [], [.])\n)])\n\n\n\n## ------------------------ ##\n## FIXME: Eliminate VARNAME ##\n## ------------------------ ##\n\n\n# _LT_DECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION], [IS-TAGGED?])\n# -------------------------------------------------------------------\n# CONFIGNAME is the name given to the value in the libtool script.\n# VARNAME is the (base) name used in the configure script.\n# VALUE may be 0, 1 or 2 for a computed quote escaped value based on\n# VARNAME.  Any other value will be used directly.\nm4_define([_LT_DECL],\n[lt_if_append_uniq([lt_decl_varnames], [$2], [, ],\n    [lt_dict_add_subkey([lt_decl_dict], [$2], [libtool_name],\n\t[m4_ifval([$1], [$1], [$2])])\n    lt_dict_add_subkey([lt_decl_dict], [$2], [value], [$3])\n    m4_ifval([$4],\n\t[lt_dict_add_subkey([lt_decl_dict], [$2], [description], [$4])])\n    lt_dict_add_subkey([lt_decl_dict], [$2],\n\t[tagged?], [m4_ifval([$5], [yes], [no])])])\n])\n\n\n# _LT_TAGDECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION])\n# --------------------------------------------------------\nm4_define([_LT_TAGDECL], [_LT_DECL([$1], [$2], [$3], [$4], [yes])])\n\n\n# lt_decl_tag_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_tag_varnames],\n[_lt_decl_filter([tagged?], [yes], $@)])\n\n\n# _lt_decl_filter(SUBKEY, VALUE, [SEPARATOR], [VARNAME1..])\n# ---------------------------------------------------------\nm4_define([_lt_decl_filter],\n[m4_case([$#],\n  [0], [m4_fatal([$0: too few arguments: $#])],\n  [1], [m4_fatal([$0: too few arguments: $#: $1])],\n  [2], [lt_dict_filter([lt_decl_dict], [$1], [$2], [], lt_decl_varnames)],\n  [3], [lt_dict_filter([lt_decl_dict], [$1], [$2], [$3], lt_decl_varnames)],\n  [lt_dict_filter([lt_decl_dict], $@)])[]dnl\n])\n\n\n# lt_decl_quote_varnames([SEPARATOR], [VARNAME1...])\n# --------------------------------------------------\nm4_define([lt_decl_quote_varnames],\n[_lt_decl_filter([value], [1], $@)])\n\n\n# lt_decl_dquote_varnames([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_dquote_varnames],\n[_lt_decl_filter([value], [2], $@)])\n\n\n# lt_decl_varnames_tagged([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_varnames_tagged],\n[m4_assert([$# <= 2])dnl\n_$0(m4_quote(m4_default([$1], [[, ]])),\n    m4_ifval([$2], [[$2]], [m4_dquote(lt_decl_tag_varnames)]),\n    m4_split(m4_normalize(m4_quote(_LT_TAGS)), [ ]))])\nm4_define([_lt_decl_varnames_tagged],\n[m4_ifval([$3], [lt_combine([$1], [$2], [_], $3)])])\n\n\n# lt_decl_all_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_all_varnames],\n[_$0(m4_quote(m4_default([$1], [[, ]])),\n     m4_if([$2], [],\n\t   m4_quote(lt_decl_varnames),\n\tm4_quote(m4_shift($@))))[]dnl\n])\nm4_define([_lt_decl_all_varnames],\n[lt_join($@, lt_decl_varnames_tagged([$1],\n\t\t\tlt_decl_tag_varnames([[, ]], m4_shift($@))))dnl\n])\n\n\n# _LT_CONFIG_STATUS_DECLARE([VARNAME])\n# ------------------------------------\n# Quote a variable value, and forward it to 'config.status' so that its\n# declaration there will have the same value as in 'configure'.  VARNAME\n# must have a single quote delimited value for this to work.\nm4_define([_LT_CONFIG_STATUS_DECLARE],\n[$1='`$ECHO \"$][$1\" | $SED \"$delay_single_quote_subst\"`'])\n\n\n# _LT_CONFIG_STATUS_DECLARATIONS\n# ------------------------------\n# We delimit libtool config variables with single quotes, so when\n# we write them to config.status, we have to be sure to quote all\n# embedded single quotes properly.  In configure, this macro expands\n# each variable declared with _LT_DECL (and _LT_TAGDECL) into:\n#\n#    <var>='`$ECHO \"$<var>\" | $SED \"$delay_single_quote_subst\"`'\nm4_defun([_LT_CONFIG_STATUS_DECLARATIONS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_all_varnames),\n    [m4_n([_LT_CONFIG_STATUS_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAGS\n# ----------------\n# Output comment and list of tags supported by the script\nm4_defun([_LT_LIBTOOL_TAGS],\n[_LT_FORMAT_COMMENT([The names of the tagged configurations supported by this script])dnl\navailable_tags='_LT_TAGS'dnl\n])\n\n\n# _LT_LIBTOOL_DECLARE(VARNAME, [TAG])\n# -----------------------------------\n# Extract the dictionary values for VARNAME (optionally with TAG) and\n# expand to a commented shell variable setting:\n#\n#    # Some comment about what VAR is for.\n#    visible_name=$lt_internal_name\nm4_define([_LT_LIBTOOL_DECLARE],\n[_LT_FORMAT_COMMENT(m4_quote(lt_dict_fetch([lt_decl_dict], [$1],\n\t\t\t\t\t   [description])))[]dnl\nm4_pushdef([_libtool_name],\n    m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [libtool_name])))[]dnl\nm4_case(m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [value])),\n    [0], [_libtool_name=[$]$1],\n    [1], [_libtool_name=$lt_[]$1],\n    [2], [_libtool_name=$lt_[]$1],\n    [_libtool_name=lt_dict_fetch([lt_decl_dict], [$1], [value])])[]dnl\nm4_ifval([$2], [_$2])[]m4_popdef([_libtool_name])[]dnl\n])\n\n\n# _LT_LIBTOOL_CONFIG_VARS\n# -----------------------\n# Produce commented declarations of non-tagged libtool config variables\n# suitable for insertion in the LIBTOOL CONFIG section of the 'libtool'\n# script.  Tagged libtool config variables (even for the LIBTOOL CONFIG\n# section) are produced by _LT_LIBTOOL_TAG_VARS.\nm4_defun([_LT_LIBTOOL_CONFIG_VARS],\n[m4_foreach([_lt_var],\n    m4_quote(_lt_decl_filter([tagged?], [no], [], lt_decl_varnames)),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAG_VARS(TAG)\n# -------------------------\nm4_define([_LT_LIBTOOL_TAG_VARS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_tag_varnames),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var, [$1])])])])\n\n\n# _LT_TAGVAR(VARNAME, [TAGNAME])\n# ------------------------------\nm4_define([_LT_TAGVAR], [m4_ifval([$2], [$1_$2], [$1])])\n\n\n# _LT_CONFIG_COMMANDS\n# -------------------\n# Send accumulated output to $CONFIG_STATUS.  Thanks to the lists of\n# variables for single and double quote escaping we saved from calls\n# to _LT_DECL, we can put quote escaped variables declarations\n# into 'config.status', and then the shell code to quote escape them in\n# for loops in 'config.status'.  Finally, any additional code accumulated\n# from calls to _LT_CONFIG_LIBTOOL_INIT is expanded.\nm4_defun([_LT_CONFIG_COMMANDS],\n[AC_PROVIDE_IFELSE([LT_OUTPUT],\n\tdnl If the libtool generation code has been placed in $CONFIG_LT,\n\tdnl instead of duplicating it all over again into config.status,\n\tdnl then we will have config.status run $CONFIG_LT later, so it\n\tdnl needs to know what name is stored there:\n        [AC_CONFIG_COMMANDS([libtool],\n            [$SHELL $CONFIG_LT || AS_EXIT(1)], [CONFIG_LT='$CONFIG_LT'])],\n    dnl If the libtool generation code is destined for config.status,\n    dnl expand the accumulated commands and init code now:\n    [AC_CONFIG_COMMANDS([libtool],\n        [_LT_OUTPUT_LIBTOOL_COMMANDS], [_LT_OUTPUT_LIBTOOL_COMMANDS_INIT])])\n])#_LT_CONFIG_COMMANDS\n\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS_INIT],\n[\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nsed_quote_subst='$sed_quote_subst'\ndouble_quote_subst='$double_quote_subst'\ndelay_variable_subst='$delay_variable_subst'\n_LT_CONFIG_STATUS_DECLARATIONS\nLTCC='$LTCC'\nLTCFLAGS='$LTCFLAGS'\ncompiler='$compiler_DEFAULT'\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$[]1\n_LTECHO_EOF'\n}\n\n# Quote evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_quote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED \\\\\"\\\\\\$sed_quote_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n# Double-quote double-evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_dquote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED -e \\\\\"\\\\\\$double_quote_subst\\\\\" -e \\\\\"\\\\\\$sed_quote_subst\\\\\" -e \\\\\"\\\\\\$delay_variable_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n_LT_OUTPUT_LIBTOOL_INIT\n])\n\n# _LT_GENERATED_FILE_INIT(FILE, [COMMENT])\n# ------------------------------------\n# Generate a child script FILE with all initialization necessary to\n# reuse the environment learned by the parent script, and make the\n# file executable.  If COMMENT is supplied, it is inserted after the\n# '#!' sequence but before initialization text begins.  After this\n# macro, additional text can be appended to FILE to form the body of\n# the child script.  The macro ends with non-zero status if the\n# file could not be fully written (such as if the disk is full).\nm4_ifdef([AS_INIT_GENERATED],\n[m4_defun([_LT_GENERATED_FILE_INIT],[AS_INIT_GENERATED($@)])],\n[m4_defun([_LT_GENERATED_FILE_INIT],\n[m4_require([AS_PREPARE])]dnl\n[m4_pushdef([AS_MESSAGE_LOG_FD])]dnl\n[lt_write_fail=0\ncat >$1 <<_ASEOF || lt_write_fail=1\n#! $SHELL\n# Generated by $as_me.\n$2\nSHELL=\\${CONFIG_SHELL-$SHELL}\nexport SHELL\n_ASEOF\ncat >>$1 <<\\_ASEOF || lt_write_fail=1\nAS_SHELL_SANITIZE\n_AS_PREPARE\nexec AS_MESSAGE_FD>&1\n_ASEOF\ntest 0 = \"$lt_write_fail\" && chmod +x $1[]dnl\nm4_popdef([AS_MESSAGE_LOG_FD])])])# _LT_GENERATED_FILE_INIT\n\n# LT_OUTPUT\n# ---------\n# This macro allows early generation of the libtool script (before\n# AC_OUTPUT is called), incase it is used in configure for compilation\n# tests.\nAC_DEFUN([LT_OUTPUT],\n[: ${CONFIG_LT=./config.lt}\nAC_MSG_NOTICE([creating $CONFIG_LT])\n_LT_GENERATED_FILE_INIT([\"$CONFIG_LT\"],\n[# Run this file to recreate a libtool stub with the current configuration.])\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nlt_cl_silent=false\nexec AS_MESSAGE_LOG_FD>>config.log\n{\n  echo\n  AS_BOX([Running $as_me.])\n} >&AS_MESSAGE_LOG_FD\n\nlt_cl_help=\"\\\n'$as_me' creates a local libtool stub from the current configuration,\nfor use in further configure time tests before the real libtool is\ngenerated.\n\nUsage: $[0] [[OPTIONS]]\n\n  -h, --help      print this help, then exit\n  -V, --version   print version number, then exit\n  -q, --quiet     do not print progress messages\n  -d, --debug     don't remove temporary files\n\nReport bugs to <bug-libtool@gnu.org>.\"\n\nlt_cl_version=\"\\\nm4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl\nm4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])\nconfigured by $[0], generated by m4_PACKAGE_STRING.\n\nCopyright (C) 2011 Free Software Foundation, Inc.\nThis config.lt script is free software; the Free Software Foundation\ngives unlimited permision to copy, distribute and modify it.\"\n\nwhile test 0 != $[#]\ndo\n  case $[1] in\n    --version | --v* | -V )\n      echo \"$lt_cl_version\"; exit 0 ;;\n    --help | --h* | -h )\n      echo \"$lt_cl_help\"; exit 0 ;;\n    --debug | --d* | -d )\n      debug=: ;;\n    --quiet | --q* | --silent | --s* | -q )\n      lt_cl_silent=: ;;\n\n    -*) AC_MSG_ERROR([unrecognized option: $[1]\nTry '$[0] --help' for more information.]) ;;\n\n    *) AC_MSG_ERROR([unrecognized argument: $[1]\nTry '$[0] --help' for more information.]) ;;\n  esac\n  shift\ndone\n\nif $lt_cl_silent; then\n  exec AS_MESSAGE_FD>/dev/null\nfi\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<_LTEOF\n_LT_OUTPUT_LIBTOOL_COMMANDS_INIT\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nAC_MSG_NOTICE([creating $ofile])\n_LT_OUTPUT_LIBTOOL_COMMANDS\nAS_EXIT(0)\n_LTEOF\nchmod +x \"$CONFIG_LT\"\n\n# configure is writing to config.log, but config.lt does its own redirection,\n# appending to config.log, which fails on DOS, as config.log is still kept\n# open by configure.  Here we exec the FD to /dev/null, effectively closing\n# config.log, so it can be properly (re)opened and appended to by config.lt.\nlt_cl_success=:\ntest yes = \"$silent\" &&\n  lt_config_lt_args=\"$lt_config_lt_args --quiet\"\nexec AS_MESSAGE_LOG_FD>/dev/null\n$SHELL \"$CONFIG_LT\" $lt_config_lt_args || lt_cl_success=false\nexec AS_MESSAGE_LOG_FD>>config.log\n$lt_cl_success || AS_EXIT(1)\n])# LT_OUTPUT\n\n\n# _LT_CONFIG(TAG)\n# ---------------\n# If TAG is the built-in tag, create an initial libtool script with a\n# default configuration from the untagged config vars.  Otherwise add code\n# to config.status for appending the configuration named by TAG from the\n# matching tagged config vars.\nm4_defun([_LT_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_CONFIG_SAVE_COMMANDS([\n  m4_define([_LT_TAG], m4_if([$1], [], [C], [$1]))dnl\n  m4_if(_LT_TAG, [C], [\n    # See if we are running on zsh, and set the options that allow our\n    # commands through without removal of \\ escapes.\n    if test -n \"${ZSH_VERSION+set}\"; then\n      setopt NO_GLOB_SUBST\n    fi\n\n    cfgfile=${ofile}T\n    trap \"$RM \\\"$cfgfile\\\"; exit 1\" 1 2 15\n    $RM \"$cfgfile\"\n\n    cat <<_LT_EOF >> \"$cfgfile\"\n#! $SHELL\n# Generated automatically by $as_me ($PACKAGE) $VERSION\n# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n\n# Provide generalized library-building support services.\n# Written by Gordon Matzigkeit, 1996\n\n_LT_COPYING\n_LT_LIBTOOL_TAGS\n\n# Configured defaults for sys_lib_dlsearch_path munging.\n: \\${LT_SYS_LIBRARY_PATH=\"$configure_time_lt_sys_library_path\"}\n\n# ### BEGIN LIBTOOL CONFIG\n_LT_LIBTOOL_CONFIG_VARS\n_LT_LIBTOOL_TAG_VARS\n# ### END LIBTOOL CONFIG\n\n_LT_EOF\n\n    cat <<'_LT_EOF' >> \"$cfgfile\"\n\n# ### BEGIN FUNCTIONS SHARED WITH CONFIGURE\n\n_LT_PREPARE_MUNGE_PATH_LIST\n_LT_PREPARE_CC_BASENAME\n\n# ### END FUNCTIONS SHARED WITH CONFIGURE\n\n_LT_EOF\n\n  case $host_os in\n  aix3*)\n    cat <<\\_LT_EOF >> \"$cfgfile\"\n# AIX sometimes has problems with the GCC collect2 program.  For some\n# reason, if we set the COLLECT_NAMES environment variable, the problems\n# vanish in a puff of smoke.\nif test set != \"${COLLECT_NAMES+set}\"; then\n  COLLECT_NAMES=\n  export COLLECT_NAMES\nfi\n_LT_EOF\n    ;;\n  esac\n\n  _LT_PROG_LTMAIN\n\n  # We use sed instead of cat because bash on DJGPP gets confused if\n  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n  # text mode, it properly converts lines to CR/LF.  This bash problem\n  # is reportedly fixed, but why not run on old versions too?\n  sed '$q' \"$ltmain\" >> \"$cfgfile\" \\\n     || (rm -f \"$cfgfile\"; exit 1)\n\n   mv -f \"$cfgfile\" \"$ofile\" ||\n    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n  chmod +x \"$ofile\"\n],\n[cat <<_LT_EOF >> \"$ofile\"\n\ndnl Unfortunately we have to use $1 here, since _LT_TAG is not expanded\ndnl in a comment (ie after a #).\n# ### BEGIN LIBTOOL TAG CONFIG: $1\n_LT_LIBTOOL_TAG_VARS(_LT_TAG)\n# ### END LIBTOOL TAG CONFIG: $1\n_LT_EOF\n])dnl /m4_if\n],\n[m4_if([$1], [], [\n    PACKAGE='$PACKAGE'\n    VERSION='$VERSION'\n    RM='$RM'\n    ofile='$ofile'], [])\n])dnl /_LT_CONFIG_SAVE_COMMANDS\n])# _LT_CONFIG\n\n\n# LT_SUPPORTED_TAG(TAG)\n# ---------------------\n# Trace this macro to discover what tags are supported by the libtool\n# --tag option, using:\n#    autoconf --trace 'LT_SUPPORTED_TAG:$1'\nAC_DEFUN([LT_SUPPORTED_TAG], [])\n\n\n# C support is built-in for now\nm4_define([_LT_LANG_C_enabled], [])\nm4_define([_LT_TAGS], [])\n\n\n# LT_LANG(LANG)\n# -------------\n# Enable libtool support for the given language if not already enabled.\nAC_DEFUN([LT_LANG],\n[AC_BEFORE([$0], [LT_OUTPUT])dnl\nm4_case([$1],\n  [C],\t\t\t[_LT_LANG(C)],\n  [C++],\t\t[_LT_LANG(CXX)],\n  [Go],\t\t\t[_LT_LANG(GO)],\n  [Java],\t\t[_LT_LANG(GCJ)],\n  [Fortran 77],\t\t[_LT_LANG(F77)],\n  [Fortran],\t\t[_LT_LANG(FC)],\n  [Windows Resource],\t[_LT_LANG(RC)],\n  [m4_ifdef([_LT_LANG_]$1[_CONFIG],\n    [_LT_LANG($1)],\n    [m4_fatal([$0: unsupported language: \"$1\"])])])dnl\n])# LT_LANG\n\n\n# _LT_LANG(LANGNAME)\n# ------------------\nm4_defun([_LT_LANG],\n[m4_ifdef([_LT_LANG_]$1[_enabled], [],\n  [LT_SUPPORTED_TAG([$1])dnl\n  m4_append([_LT_TAGS], [$1 ])dnl\n  m4_define([_LT_LANG_]$1[_enabled], [])dnl\n  _LT_LANG_$1_CONFIG($1)])dnl\n])# _LT_LANG\n\n\nm4_ifndef([AC_PROG_GO], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_GO.  When it is available in    #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\nm4_defun([AC_PROG_GO],\n[AC_LANG_PUSH(Go)dnl\nAC_ARG_VAR([GOC],     [Go compiler command])dnl\nAC_ARG_VAR([GOFLAGS], [Go compiler flags])dnl\n_AC_ARG_VAR_LDFLAGS()dnl\nAC_CHECK_TOOL(GOC, gccgo)\nif test -z \"$GOC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    AC_CHECK_PROG(GOC, [${ac_tool_prefix}gccgo], [${ac_tool_prefix}gccgo])\n  fi\nfi\nif test -z \"$GOC\"; then\n  AC_CHECK_PROG(GOC, gccgo, gccgo, false)\nfi\n])#m4_defun\n])#m4_ifndef\n\n\n# _LT_LANG_DEFAULT_CONFIG\n# -----------------------\nm4_defun([_LT_LANG_DEFAULT_CONFIG],\n[AC_PROVIDE_IFELSE([AC_PROG_CXX],\n  [LT_LANG(CXX)],\n  [m4_define([AC_PROG_CXX], defn([AC_PROG_CXX])[LT_LANG(CXX)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_F77],\n  [LT_LANG(F77)],\n  [m4_define([AC_PROG_F77], defn([AC_PROG_F77])[LT_LANG(F77)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_FC],\n  [LT_LANG(FC)],\n  [m4_define([AC_PROG_FC], defn([AC_PROG_FC])[LT_LANG(FC)])])\n\ndnl The call to [A][M_PROG_GCJ] is quoted like that to stop aclocal\ndnl pulling things in needlessly.\nAC_PROVIDE_IFELSE([AC_PROG_GCJ],\n  [LT_LANG(GCJ)],\n  [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],\n    [LT_LANG(GCJ)],\n    [AC_PROVIDE_IFELSE([LT_PROG_GCJ],\n      [LT_LANG(GCJ)],\n      [m4_ifdef([AC_PROG_GCJ],\n\t[m4_define([AC_PROG_GCJ], defn([AC_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([A][M_PROG_GCJ],\n\t[m4_define([A][M_PROG_GCJ], defn([A][M_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([LT_PROG_GCJ],\n\t[m4_define([LT_PROG_GCJ], defn([LT_PROG_GCJ])[LT_LANG(GCJ)])])])])])\n\nAC_PROVIDE_IFELSE([AC_PROG_GO],\n  [LT_LANG(GO)],\n  [m4_define([AC_PROG_GO], defn([AC_PROG_GO])[LT_LANG(GO)])])\n\nAC_PROVIDE_IFELSE([LT_PROG_RC],\n  [LT_LANG(RC)],\n  [m4_define([LT_PROG_RC], defn([LT_PROG_RC])[LT_LANG(RC)])])\n])# _LT_LANG_DEFAULT_CONFIG\n\n# Obsolete macros:\nAU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])\nAU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])\nAU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])\nAU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])\nAU_DEFUN([AC_LIBTOOL_RC], [LT_LANG(Windows Resource)])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_CXX], [])\ndnl AC_DEFUN([AC_LIBTOOL_F77], [])\ndnl AC_DEFUN([AC_LIBTOOL_FC], [])\ndnl AC_DEFUN([AC_LIBTOOL_GCJ], [])\ndnl AC_DEFUN([AC_LIBTOOL_RC], [])\n\n\n# _LT_TAG_COMPILER\n# ----------------\nm4_defun([_LT_TAG_COMPILER],\n[AC_REQUIRE([AC_PROG_CC])dnl\n\n_LT_DECL([LTCC], [CC], [1], [A C compiler])dnl\n_LT_DECL([LTCFLAGS], [CFLAGS], [1], [LTCC compiler flags])dnl\n_LT_TAGDECL([CC], [compiler], [1], [A language specific compiler])dnl\n_LT_TAGDECL([with_gcc], [GCC], [0], [Is the compiler the GNU compiler?])dnl\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n])# _LT_TAG_COMPILER\n\n\n# _LT_COMPILER_BOILERPLATE\n# ------------------------\n# Check for compiler boilerplate output or warnings with\n# the simple compiler test code.\nm4_defun([_LT_COMPILER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$RM conftest*\n])# _LT_COMPILER_BOILERPLATE\n\n\n# _LT_LINKER_BOILERPLATE\n# ----------------------\n# Check for linker boilerplate output or warnings with\n# the simple link test code.\nm4_defun([_LT_LINKER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$RM -r conftest*\n])# _LT_LINKER_BOILERPLATE\n\n# _LT_REQUIRED_DARWIN_CHECKS\n# -------------------------\nm4_defun_once([_LT_REQUIRED_DARWIN_CHECKS],[\n  case $host_os in\n    rhapsody* | darwin*)\n    AC_CHECK_TOOL([DSYMUTIL], [dsymutil], [:])\n    AC_CHECK_TOOL([NMEDIT], [nmedit], [:])\n    AC_CHECK_TOOL([LIPO], [lipo], [:])\n    AC_CHECK_TOOL([OTOOL], [otool], [:])\n    AC_CHECK_TOOL([OTOOL64], [otool64], [:])\n    _LT_DECL([], [DSYMUTIL], [1],\n      [Tool to manipulate archived DWARF debug symbol files on Mac OS X])\n    _LT_DECL([], [NMEDIT], [1],\n      [Tool to change global to local symbols on Mac OS X])\n    _LT_DECL([], [LIPO], [1],\n      [Tool to manipulate fat objects and archives on Mac OS X])\n    _LT_DECL([], [OTOOL], [1],\n      [ldd/readelf like tool for Mach-O binaries on Mac OS X])\n    _LT_DECL([], [OTOOL64], [1],\n      [ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4])\n\n    AC_CACHE_CHECK([for -single_module linker flag],[lt_cv_apple_cc_single_mod],\n      [lt_cv_apple_cc_single_mod=no\n      if test -z \"$LT_MULTI_MODULE\"; then\n\t# By default we will add the -single_module flag. You can override\n\t# by either setting the environment variable LT_MULTI_MODULE\n\t# non-empty at configure time, or by adding -multi_module to the\n\t# link flags.\n\trm -rf libconftest.dylib*\n\techo \"int foo(void){return 1;}\" > conftest.c\n\techo \"$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n-dynamiclib -Wl,-single_module conftest.c\" >&AS_MESSAGE_LOG_FD\n\t$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n\t  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err\n        _lt_result=$?\n\t# If there is a non-empty error log, and \"single_module\"\n\t# appears in it, assume the flag caused a linker warning\n        if test -s conftest.err && $GREP single_module conftest.err; then\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\t# Otherwise, if the output was created with a 0 exit code from\n\t# the compiler, it worked.\n\telif test -f libconftest.dylib && test 0 = \"$_lt_result\"; then\n\t  lt_cv_apple_cc_single_mod=yes\n\telse\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\tfi\n\trm -rf libconftest.dylib*\n\trm -f conftest.*\n      fi])\n\n    AC_CACHE_CHECK([for -exported_symbols_list linker flag],\n      [lt_cv_ld_exported_symbols_list],\n      [lt_cv_ld_exported_symbols_list=no\n      save_LDFLAGS=$LDFLAGS\n      echo \"_main\" > conftest.sym\n      LDFLAGS=\"$LDFLAGS -Wl,-exported_symbols_list,conftest.sym\"\n      AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n\t[lt_cv_ld_exported_symbols_list=yes],\n\t[lt_cv_ld_exported_symbols_list=no])\n\tLDFLAGS=$save_LDFLAGS\n    ])\n\n    AC_CACHE_CHECK([for -force_load linker flag],[lt_cv_ld_force_load],\n      [lt_cv_ld_force_load=no\n      cat > conftest.c << _LT_EOF\nint forced_loaded() { return 2;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS -c -o conftest.o conftest.c\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS -c -o conftest.o conftest.c 2>&AS_MESSAGE_LOG_FD\n      echo \"$AR cru libconftest.a conftest.o\" >&AS_MESSAGE_LOG_FD\n      $AR cru libconftest.a conftest.o 2>&AS_MESSAGE_LOG_FD\n      echo \"$RANLIB libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $RANLIB libconftest.a 2>&AS_MESSAGE_LOG_FD\n      cat > conftest.c << _LT_EOF\nint main() { return 0;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a 2>conftest.err\n      _lt_result=$?\n      if test -s conftest.err && $GREP force_load conftest.err; then\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      elif test -f conftest && test 0 = \"$_lt_result\" && $GREP forced_load conftest >/dev/null 2>&1; then\n\tlt_cv_ld_force_load=yes\n      else\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      fi\n        rm -f conftest.err libconftest.a conftest conftest.c\n        rm -rf conftest.dSYM\n    ])\n    case $host_os in\n    rhapsody* | darwin1.[[012]])\n      _lt_dar_allow_undefined='$wl-undefined ${wl}suppress' ;;\n    darwin1.*)\n      _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n    darwin*) # darwin 5.x on\n      # if running on 10.5 or later, the deployment target defaults\n      # to the OS version, if on x86, and 10.4, the deployment\n      # target defaults to 10.4. Don't you love it?\n      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in\n\t10.0,*86*-darwin8*|10.0,*-darwin[[91]]*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n\t10.[[012]][[,.]]*)\n\t  _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n\t10.*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n      esac\n    ;;\n  esac\n    if test yes = \"$lt_cv_apple_cc_single_mod\"; then\n      _lt_dar_single_mod='$single_module'\n    fi\n    if test yes = \"$lt_cv_ld_exported_symbols_list\"; then\n      _lt_dar_export_syms=' $wl-exported_symbols_list,$output_objdir/$libname-symbols.expsym'\n    else\n      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/$libname-symbols.expsym $lib'\n    fi\n    if test : != \"$DSYMUTIL\" && test no = \"$lt_cv_ld_force_load\"; then\n      _lt_dsymutil='~$DSYMUTIL $lib || :'\n    else\n      _lt_dsymutil=\n    fi\n    ;;\n  esac\n])\n\n\n# _LT_DARWIN_LINKER_FEATURES([TAG])\n# ---------------------------------\n# Checks for linker and compiler features on darwin\nm4_defun([_LT_DARWIN_LINKER_FEATURES],\n[\n  m4_require([_LT_REQUIRED_DARWIN_CHECKS])\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_automatic, $1)=yes\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  if test yes = \"$lt_cv_ld_force_load\"; then\n    _LT_TAGVAR(whole_archive_flag_spec, $1)='`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience $wl-force_load,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"`'\n    m4_case([$1], [F77], [_LT_TAGVAR(compiler_needs_object, $1)=yes],\n                  [FC],  [_LT_TAGVAR(compiler_needs_object, $1)=yes])\n  else\n    _LT_TAGVAR(whole_archive_flag_spec, $1)=''\n  fi\n  _LT_TAGVAR(link_all_deplibs, $1)=yes\n  _LT_TAGVAR(allow_undefined_flag, $1)=$_lt_dar_allow_undefined\n  case $cc_basename in\n     ifort*|nagfor*) _lt_dar_can_shared=yes ;;\n     *) _lt_dar_can_shared=$GCC ;;\n  esac\n  if test yes = \"$_lt_dar_can_shared\"; then\n    output_verbose_link_cmd=func_echo_all\n    _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dsymutil\"\n    _LT_TAGVAR(module_cmds, $1)=\"\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dsymutil\"\n    _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dar_export_syms$_lt_dsymutil\"\n    _LT_TAGVAR(module_expsym_cmds, $1)=\"sed -e 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dar_export_syms$_lt_dsymutil\"\n    m4_if([$1], [CXX],\n[   if test yes != \"$lt_cv_apple_cc_single_mod\"; then\n      _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dsymutil\"\n      _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dar_export_syms$_lt_dsymutil\"\n    fi\n],[])\n  else\n  _LT_TAGVAR(ld_shlibs, $1)=no\n  fi\n])\n\n# _LT_SYS_MODULE_PATH_AIX([TAGNAME])\n# ----------------------------------\n# Links a minimal program and checks the executable\n# for the system default hardcoded library path. In most cases,\n# this is /usr/lib:/lib, but when the MPI compilers are used\n# the location of the communication and MPI libs are included too.\n# If we don't find anything, use the default library path according\n# to the aix ld manual.\n# Store the results from the different compilers for each TAGNAME.\n# Allow to override them for all tags through lt_cv_aix_libpath.\nm4_defun([_LT_SYS_MODULE_PATH_AIX],\n[m4_require([_LT_DECL_SED])dnl\nif test set = \"${lt_cv_aix_libpath+set}\"; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  AC_CACHE_VAL([_LT_TAGVAR([lt_cv_aix_libpath_], [$1])],\n  [AC_LINK_IFELSE([AC_LANG_PROGRAM],[\n  lt_aix_libpath_sed='[\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }]'\n  _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi],[])\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=/usr/lib:/lib\n  fi\n  ])\n  aix_libpath=$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\nfi\n])# _LT_SYS_MODULE_PATH_AIX\n\n\n# _LT_SHELL_INIT(ARG)\n# -------------------\nm4_define([_LT_SHELL_INIT],\n[m4_divert_text([M4SH-INIT], [$1\n])])# _LT_SHELL_INIT\n\n\n\n# _LT_PROG_ECHO_BACKSLASH\n# -----------------------\n# Find how we can fake an echo command that does not interpret backslash.\n# In particular, with Autoconf 2.60 or later we add some code to the start\n# of the generated configure script that will find a shell with a builtin\n# printf (that we can use as an echo command).\nm4_defun([_LT_PROG_ECHO_BACKSLASH],\n[ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n\nAC_MSG_CHECKING([how to print strings])\n# Test print first, because it will be a builtin if present.\nif test \"X`( print -r -- -n ) 2>/dev/null`\" = X-n && \\\n   test \"X`print -r -- $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='print -r --'\nelif test \"X`printf %s $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='printf %s\\n'\nelse\n  # Use this function as a fallback that always works.\n  func_fallback_echo ()\n  {\n    eval 'cat <<_LTECHO_EOF\n$[]1\n_LTECHO_EOF'\n  }\n  ECHO='func_fallback_echo'\nfi\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\ncase $ECHO in\n  printf*) AC_MSG_RESULT([printf]) ;;\n  print*) AC_MSG_RESULT([print -r]) ;;\n  *) AC_MSG_RESULT([cat]) ;;\nesac\n\nm4_ifdef([_AS_DETECT_SUGGESTED],\n[_AS_DETECT_SUGGESTED([\n  test -n \"${ZSH_VERSION+set}${BASH_VERSION+set}\" || (\n    ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n    PATH=/empty FPATH=/empty; export PATH FPATH\n    test \"X`printf %s $ECHO`\" = \"X$ECHO\" \\\n      || test \"X`print -r -- $ECHO`\" = \"X$ECHO\" )])])\n\n_LT_DECL([], [SHELL], [1], [Shell to use when invoking shell scripts])\n_LT_DECL([], [ECHO], [1], [An echo program that protects backslashes])\n])# _LT_PROG_ECHO_BACKSLASH\n\n\n# _LT_WITH_SYSROOT\n# ----------------\nAC_DEFUN([_LT_WITH_SYSROOT],\n[AC_MSG_CHECKING([for sysroot])\nAC_ARG_WITH([sysroot],\n[AS_HELP_STRING([--with-sysroot@<:@=DIR@:>@],\n  [Search for dependent libraries within DIR (or the compiler's sysroot\n   if not specified).])],\n[], [with_sysroot=no])\n\ndnl lt_sysroot will always be passed unquoted.  We quote it here\ndnl in case the user passed a directory name.\nlt_sysroot=\ncase $with_sysroot in #(\n yes)\n   if test yes = \"$GCC\"; then\n     lt_sysroot=`$CC --print-sysroot 2>/dev/null`\n   fi\n   ;; #(\n /*)\n   lt_sysroot=`echo \"$with_sysroot\" | sed -e \"$sed_quote_subst\"`\n   ;; #(\n no|'')\n   ;; #(\n *)\n   AC_MSG_RESULT([$with_sysroot])\n   AC_MSG_ERROR([The sysroot must be an absolute path.])\n   ;;\nesac\n\n AC_MSG_RESULT([${lt_sysroot:-no}])\n_LT_DECL([], [lt_sysroot], [0], [The root where to search for ]dnl\n[dependent libraries, and where our libraries should be installed.])])\n\n# _LT_ENABLE_LOCK\n# ---------------\nm4_defun([_LT_ENABLE_LOCK],\n[AC_ARG_ENABLE([libtool-lock],\n  [AS_HELP_STRING([--disable-libtool-lock],\n    [avoid locking (might break parallel builds)])])\ntest no = \"$enable_libtool_lock\" || enable_libtool_lock=yes\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase $host in\nia64-*-hpux*)\n  # Find out what ABI is being produced by ac_compile, and set mode\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.$ac_objext` in\n      *ELF-32*)\n\tHPUX_IA64_MODE=32\n\t;;\n      *ELF-64*)\n\tHPUX_IA64_MODE=64\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n*-*-irix6*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    if test yes = \"$lt_cv_prog_gnu_ld\"; then\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -melf32bsmip\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -melf32bmipn32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -melf64bmip\"\n\t;;\n      esac\n    else\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -32\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -n32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -64\"\n\t  ;;\n      esac\n    fi\n  fi\n  rm -rf conftest*\n  ;;\n\nmips64*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    emul=elf\n    case `/usr/bin/file conftest.$ac_objext` in\n      *32-bit*)\n\temul=\"${emul}32\"\n\t;;\n      *64-bit*)\n\temul=\"${emul}64\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *MSB*)\n\temul=\"${emul}btsmip\"\n\t;;\n      *LSB*)\n\temul=\"${emul}ltsmip\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *N32*)\n\temul=\"${emul}n32\"\n\t;;\n    esac\n    LD=\"${LD-ld} -m $emul\"\n  fi\n  rm -rf conftest*\n  ;;\n\nx86_64-*kfreebsd*-gnu|x86_64-*linux*|powerpc*-*linux*| \\\ns390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.  Note that the listed cases only cover the\n  # situations where additional linker options are needed (such as when\n  # doing 32-bit compilation for a host where ld defaults to 64-bit, or\n  # vice versa); the common cases where no linker options are needed do\n  # not appear in the list.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n      *32-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_i386_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    case `/usr/bin/file conftest.o` in\n\t      *x86-64*)\n\t\tLD=\"${LD-ld} -m elf32_x86_64\"\n\t\t;;\n\t      *)\n\t\tLD=\"${LD-ld} -m elf_i386\"\n\t\t;;\n\t    esac\n\t    ;;\n\t  powerpc64le-*linux*)\n\t    LD=\"${LD-ld} -m elf32lppclinux\"\n\t    ;;\n\t  powerpc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32ppclinux\"\n\t    ;;\n\t  s390x-*linux*)\n\t    LD=\"${LD-ld} -m elf_s390\"\n\t    ;;\n\t  sparc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32_sparc\"\n\t    ;;\n\tesac\n\t;;\n      *64-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_x86_64_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_x86_64\"\n\t    ;;\n\t  powerpcle-*linux*)\n\t    LD=\"${LD-ld} -m elf64lppc\"\n\t    ;;\n\t  powerpc-*linux*)\n\t    LD=\"${LD-ld} -m elf64ppc\"\n\t    ;;\n\t  s390*-*linux*|s390*-*tpf*)\n\t    LD=\"${LD-ld} -m elf64_s390\"\n\t    ;;\n\t  sparc*-*linux*)\n\t    LD=\"${LD-ld} -m elf64_sparc\"\n\t    ;;\n\tesac\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=$CFLAGS\n  CFLAGS=\"$CFLAGS -belf\"\n  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n    [AC_LANG_PUSH(C)\n     AC_LINK_IFELSE([AC_LANG_PROGRAM([[]],[[]])],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])\n     AC_LANG_POP])\n  if test yes != \"$lt_cv_cc_needs_belf\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=$SAVE_CFLAGS\n  fi\n  ;;\n*-*solaris*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n    *64-bit*)\n      case $lt_cv_prog_gnu_ld in\n      yes*)\n        case $host in\n        i?86-*-solaris*|x86_64-*-solaris*)\n          LD=\"${LD-ld} -m elf_x86_64\"\n          ;;\n        sparc*-*-solaris*)\n          LD=\"${LD-ld} -m elf64_sparc\"\n          ;;\n        esac\n        # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.\n        if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then\n          LD=${LD-ld}_sol2\n        fi\n        ;;\n      *)\n\tif ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then\n\t  LD=\"${LD-ld} -64\"\n\tfi\n\t;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\nesac\n\nneed_locks=$enable_libtool_lock\n])# _LT_ENABLE_LOCK\n\n\n# _LT_PROG_AR\n# -----------\nm4_defun([_LT_PROG_AR],\n[AC_CHECK_TOOLS(AR, [ar], false)\n: ${AR=ar}\n: ${AR_FLAGS=cru}\n_LT_DECL([], [AR], [1], [The archiver])\n_LT_DECL([], [AR_FLAGS], [1], [Flags to create an archive])\n\nAC_CACHE_CHECK([for archiver @FILE support], [lt_cv_ar_at_file],\n  [lt_cv_ar_at_file=no\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM],\n     [echo conftest.$ac_objext > conftest.lst\n      lt_ar_try='$AR $AR_FLAGS libconftest.a @conftest.lst >&AS_MESSAGE_LOG_FD'\n      AC_TRY_EVAL([lt_ar_try])\n      if test 0 -eq \"$ac_status\"; then\n\t# Ensure the archiver fails upon bogus file names.\n\trm -f conftest.$ac_objext libconftest.a\n\tAC_TRY_EVAL([lt_ar_try])\n\tif test 0 -ne \"$ac_status\"; then\n          lt_cv_ar_at_file=@\n        fi\n      fi\n      rm -f conftest.* libconftest.a\n     ])\n  ])\n\nif test no = \"$lt_cv_ar_at_file\"; then\n  archiver_list_spec=\nelse\n  archiver_list_spec=$lt_cv_ar_at_file\nfi\n_LT_DECL([], [archiver_list_spec], [1],\n  [How to feed a file listing to the archiver])\n])# _LT_PROG_AR\n\n\n# _LT_CMD_OLD_ARCHIVE\n# -------------------\nm4_defun([_LT_CMD_OLD_ARCHIVE],\n[_LT_PROG_AR\n\nAC_CHECK_TOOL(STRIP, strip, :)\ntest -z \"$STRIP\" && STRIP=:\n_LT_DECL([], [STRIP], [1], [A symbol stripping program])\n\nAC_CHECK_TOOL(RANLIB, ranlib, :)\ntest -z \"$RANLIB\" && RANLIB=:\n_LT_DECL([], [RANLIB], [1],\n    [Commands used to install an old-style archive])\n\n# Determine commands to create old-style static archives.\nold_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'\nold_postinstall_cmds='chmod 644 $oldlib'\nold_postuninstall_cmds=\n\nif test -n \"$RANLIB\"; then\n  case $host_os in\n  bitrig* | openbsd*)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB -t \\$tool_oldlib\"\n    ;;\n  *)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB \\$tool_oldlib\"\n    ;;\n  esac\n  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$tool_oldlib\"\nfi\n\ncase $host_os in\n  darwin*)\n    lock_old_archive_extraction=yes ;;\n  *)\n    lock_old_archive_extraction=no ;;\nesac\n_LT_DECL([], [old_postinstall_cmds], [2])\n_LT_DECL([], [old_postuninstall_cmds], [2])\n_LT_TAGDECL([], [old_archive_cmds], [2],\n    [Commands used to build an old-style archive])\n_LT_DECL([], [lock_old_archive_extraction], [0],\n    [Whether to use a lock for old archive extraction])\n])# _LT_CMD_OLD_ARCHIVE\n\n\n# _LT_COMPILER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#\t\t[OUTPUT-FILE], [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([_LT_COMPILER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$3\"  ## exclude from sc_useless_quotes_in_assignment\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       $2=yes\n     fi\n   fi\n   $RM conftest*\n])\n\nif test yes = \"[$]$2\"; then\n    m4_if([$5], , :, [$5])\nelse\n    m4_if([$6], , :, [$6])\nfi\n])# _LT_COMPILER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_COMPILER_OPTION], [_LT_COMPILER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [])\n\n\n# _LT_LINKER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#                  [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------\n# Check whether the given linker option works\nAC_DEFUN([_LT_LINKER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   save_LDFLAGS=$LDFLAGS\n   LDFLAGS=\"$LDFLAGS $3\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&AS_MESSAGE_LOG_FD\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         $2=yes\n       fi\n     else\n       $2=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=$save_LDFLAGS\n])\n\nif test yes = \"[$]$2\"; then\n    m4_if([$4], , :, [$4])\nelse\n    m4_if([$5], , :, [$5])\nfi\n])# _LT_LINKER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_LINKER_OPTION], [_LT_LINKER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [])\n\n\n# LT_CMD_MAX_LEN\n#---------------\nAC_DEFUN([LT_CMD_MAX_LEN],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n# find the maximum length of command line arguments\nAC_MSG_CHECKING([the maximum length of command line arguments])\nAC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl\n  i=0\n  teststring=ABCD\n\n  case $build_os in\n  msdosdjgpp*)\n    # On DJGPP, this test can blow up pretty badly due to problems in libc\n    # (any single argument exceeding 2000 bytes causes a buffer overrun\n    # during glob expansion).  Even if it were fixed, the result of this\n    # check would be larger than it should be.\n    lt_cv_sys_max_cmd_len=12288;    # 12K is about right\n    ;;\n\n  gnu*)\n    # Under GNU Hurd, this test is not required because there is\n    # no limit to the length of command line arguments.\n    # Libtool will interpret -1 as no limit whatsoever\n    lt_cv_sys_max_cmd_len=-1;\n    ;;\n\n  cygwin* | mingw* | cegcc*)\n    # On Win9x/ME, this test blows up -- it succeeds, but takes\n    # about 5 minutes as the teststring grows exponentially.\n    # Worse, since 9x/ME are not pre-emptively multitasking,\n    # you end up with a \"frozen\" computer, even though with patience\n    # the test eventually succeeds (with a max line length of 256k).\n    # Instead, let's just punt: use the minimum linelength reported by\n    # all of the supported platforms: 8192 (on NT/2K/XP).\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  mint*)\n    # On MiNT this can take a long time and run out of memory.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  amigaos*)\n    # On AmigaOS with pdksh, this test takes hours, literally.\n    # So we just punt and use a minimum line length of 8192.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  bitrig* | darwin* | dragonfly* | freebsd* | netbsd* | openbsd*)\n    # This has been around since 386BSD, at least.  Likely further.\n    if test -x /sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n    elif test -x /usr/sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`\n    else\n      lt_cv_sys_max_cmd_len=65536\t# usable default for all BSDs\n    fi\n    # And add a safety zone\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    ;;\n\n  interix*)\n    # We know the value 262144 and hardcode it with a safety zone (like BSD)\n    lt_cv_sys_max_cmd_len=196608\n    ;;\n\n  os2*)\n    # The test takes a long time on OS/2.\n    lt_cv_sys_max_cmd_len=8192\n    ;;\n\n  osf*)\n    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure\n    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not\n    # nice to cause kernel panics so lets avoid the loop below.\n    # First set a reasonable default.\n    lt_cv_sys_max_cmd_len=16384\n    #\n    if test -x /sbin/sysconfig; then\n      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in\n        *1*) lt_cv_sys_max_cmd_len=-1 ;;\n      esac\n    fi\n    ;;\n  sco3.2v5*)\n    lt_cv_sys_max_cmd_len=102400\n    ;;\n  sysv5* | sco5v6* | sysv4.2uw2*)\n    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`\n    if test -n \"$kargmax\"; then\n      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[\t ]]//'`\n    else\n      lt_cv_sys_max_cmd_len=32768\n    fi\n    ;;\n  *)\n    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`\n    if test -n \"$lt_cv_sys_max_cmd_len\" && \\\n       test undefined != \"$lt_cv_sys_max_cmd_len\"; then\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    else\n      # Make teststring a little bigger before we do anything with it.\n      # a 1K string should be a reasonable start.\n      for i in 1 2 3 4 5 6 7 8; do\n        teststring=$teststring$teststring\n      done\n      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}\n      # If test is not a shell built-in, we'll probably end up computing a\n      # maximum length that is only half of the actual maximum length, but\n      # we can't tell.\n      while { test X`env echo \"$teststring$teststring\" 2>/dev/null` \\\n\t         = \"X$teststring$teststring\"; } >/dev/null 2>&1 &&\n\t      test 17 != \"$i\" # 1/2 MB should be enough\n      do\n        i=`expr $i + 1`\n        teststring=$teststring$teststring\n      done\n      # Only check the string length outside the loop.\n      lt_cv_sys_max_cmd_len=`expr \"X$teststring\" : \".*\" 2>&1`\n      teststring=\n      # Add a significant safety factor because C++ compilers can tack on\n      # massive amounts of additional arguments before passing them to the\n      # linker.  It appears as though 1/2 is a usable value.\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 2`\n    fi\n    ;;\n  esac\n])\nif test -n \"$lt_cv_sys_max_cmd_len\"; then\n  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)\nelse\n  AC_MSG_RESULT(none)\nfi\nmax_cmd_len=$lt_cv_sys_max_cmd_len\n_LT_DECL([], [max_cmd_len], [0],\n    [What is the maximum length of a command?])\n])# LT_CMD_MAX_LEN\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_SYS_MAX_CMD_LEN], [LT_CMD_MAX_LEN])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [])\n\n\n# _LT_HEADER_DLFCN\n# ----------------\nm4_defun([_LT_HEADER_DLFCN],\n[AC_CHECK_HEADERS([dlfcn.h], [], [], [AC_INCLUDES_DEFAULT])dnl\n])# _LT_HEADER_DLFCN\n\n\n# _LT_TRY_DLOPEN_SELF (ACTION-IF-TRUE, ACTION-IF-TRUE-W-USCORE,\n#                      ACTION-IF-FALSE, ACTION-IF-CROSS-COMPILING)\n# ----------------------------------------------------------------\nm4_defun([_LT_TRY_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test yes = \"$cross_compiling\"; then :\n  [$4]\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<_LT_EOF\n[#line $LINENO \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n/* When -fvisibility=hidden is used, assume the code has been annotated\n   correspondingly for the symbols needed.  */\n#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))\nint fnord () __attribute__((visibility(\"default\")));\n#endif\n\nint fnord () { return 42; }\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else\n        {\n\t  if (dlsym( self,\"_fnord\"))  status = $lt_dlneed_uscore;\n          else puts (dlerror ());\n\t}\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n  return status;\n}]\n_LT_EOF\n  if AC_TRY_EVAL(ac_link) && test -s \"conftest$ac_exeext\" 2>/dev/null; then\n    (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) $1 ;;\n      x$lt_dlneed_uscore) $2 ;;\n      x$lt_dlunknown|x*) $3 ;;\n    esac\n  else :\n    # compilation failed\n    $3\n  fi\nfi\nrm -fr conftest*\n])# _LT_TRY_DLOPEN_SELF\n\n\n# LT_SYS_DLOPEN_SELF\n# ------------------\nAC_DEFUN([LT_SYS_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test yes != \"$enable_dlopen\"; then\n  enable_dlopen=unknown\n  enable_dlopen_self=unknown\n  enable_dlopen_self_static=unknown\nelse\n  lt_cv_dlopen=no\n  lt_cv_dlopen_libs=\n\n  case $host_os in\n  beos*)\n    lt_cv_dlopen=load_add_on\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ;;\n\n  mingw* | pw32* | cegcc*)\n    lt_cv_dlopen=LoadLibrary\n    lt_cv_dlopen_libs=\n    ;;\n\n  cygwin*)\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    ;;\n\n  darwin*)\n    # if libdl is installed we need to link against it\n    AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],[\n    lt_cv_dlopen=dyld\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ])\n    ;;\n\n  tpf*)\n    # Don't try to run any link tests for TPF.  We know it's impossible\n    # because TPF is a cross-compiler, and we know how we open DSOs.\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=no\n    ;;\n\n  *)\n    AC_CHECK_FUNC([shl_load],\n\t  [lt_cv_dlopen=shl_load],\n      [AC_CHECK_LIB([dld], [shl_load],\n\t    [lt_cv_dlopen=shl_load lt_cv_dlopen_libs=-ldld],\n\t[AC_CHECK_FUNC([dlopen],\n\t      [lt_cv_dlopen=dlopen],\n\t  [AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],\n\t    [AC_CHECK_LIB([svld], [dlopen],\n\t\t  [lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-lsvld],\n\t      [AC_CHECK_LIB([dld], [dld_link],\n\t\t    [lt_cv_dlopen=dld_link lt_cv_dlopen_libs=-ldld])\n\t      ])\n\t    ])\n\t  ])\n\t])\n      ])\n    ;;\n  esac\n\n  if test no = \"$lt_cv_dlopen\"; then\n    enable_dlopen=no\n  else\n    enable_dlopen=yes\n  fi\n\n  case $lt_cv_dlopen in\n  dlopen)\n    save_CPPFLAGS=$CPPFLAGS\n    test yes = \"$ac_cv_header_dlfcn_h\" && CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n\n    save_LDFLAGS=$LDFLAGS\n    wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n\n    save_LIBS=$LIBS\n    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n\n    AC_CACHE_CHECK([whether a program can dlopen itself],\n\t  lt_cv_dlopen_self, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,\n\t    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)\n    ])\n\n    if test yes = \"$lt_cv_dlopen_self\"; then\n      wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $lt_prog_compiler_static\\\"\n      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],\n\t  lt_cv_dlopen_self_static, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,\n\t    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)\n      ])\n    fi\n\n    CPPFLAGS=$save_CPPFLAGS\n    LDFLAGS=$save_LDFLAGS\n    LIBS=$save_LIBS\n    ;;\n  esac\n\n  case $lt_cv_dlopen_self in\n  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n  *) enable_dlopen_self=unknown ;;\n  esac\n\n  case $lt_cv_dlopen_self_static in\n  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n  *) enable_dlopen_self_static=unknown ;;\n  esac\nfi\n_LT_DECL([dlopen_support], [enable_dlopen], [0],\n\t [Whether dlopen is supported])\n_LT_DECL([dlopen_self], [enable_dlopen_self], [0],\n\t [Whether dlopen of programs is supported])\n_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],\n\t [Whether dlopen of statically linked programs is supported])\n])# LT_SYS_DLOPEN_SELF\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [])\n\n\n# _LT_COMPILER_C_O([TAGNAME])\n# ---------------------------\n# Check to see if options -c and -o are simultaneously supported by compiler.\n# This macro does not hard code the compiler like AC_PROG_CC_C_O.\nm4_defun([_LT_COMPILER_C_O],\n[m4_require([_LT_DECL_SED])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_CACHE_CHECK([if $compiler supports -c -o file.$ac_objext],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       _LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n     fi\n   fi\n   chmod u+w . 2>&AS_MESSAGE_LOG_FD\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n])\n_LT_TAGDECL([compiler_c_o], [lt_cv_prog_compiler_c_o], [1],\n\t[Does compiler simultaneously support -c and -o options?])\n])# _LT_COMPILER_C_O\n\n\n# _LT_COMPILER_FILE_LOCKS([TAGNAME])\n# ----------------------------------\n# Check to see if we can do hard links to lock some files if needed\nm4_defun([_LT_COMPILER_FILE_LOCKS],\n[m4_require([_LT_ENABLE_LOCK])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_COMPILER_C_O([$1])\n\nhard_links=nottested\nif test no = \"$_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)\" && test no != \"$need_locks\"; then\n  # do not overwrite the value of need_locks provided by the user\n  AC_MSG_CHECKING([if we can lock with hard links])\n  hard_links=yes\n  $RM conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  AC_MSG_RESULT([$hard_links])\n  if test no = \"$hard_links\"; then\n    AC_MSG_WARN(['$CC' does not support '-c -o', so 'make -j' may be unsafe])\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n_LT_DECL([], [need_locks], [1], [Must we lock files when doing compilation?])\n])# _LT_COMPILER_FILE_LOCKS\n\n\n# _LT_CHECK_OBJDIR\n# ----------------\nm4_defun([_LT_CHECK_OBJDIR],\n[AC_CACHE_CHECK([for objdir], [lt_cv_objdir],\n[rm -f .libs 2>/dev/null\nmkdir .libs 2>/dev/null\nif test -d .libs; then\n  lt_cv_objdir=.libs\nelse\n  # MS-DOS does not allow filenames that begin with a dot.\n  lt_cv_objdir=_libs\nfi\nrmdir .libs 2>/dev/null])\nobjdir=$lt_cv_objdir\n_LT_DECL([], [objdir], [0],\n         [The name of the directory that contains temporary libtool files])dnl\nm4_pattern_allow([LT_OBJDIR])dnl\nAC_DEFINE_UNQUOTED([LT_OBJDIR], \"$lt_cv_objdir/\",\n  [Define to the sub-directory where libtool stores uninstalled libraries.])\n])# _LT_CHECK_OBJDIR\n\n\n# _LT_LINKER_HARDCODE_LIBPATH([TAGNAME])\n# --------------------------------------\n# Check hardcoding attributes.\nm4_defun([_LT_LINKER_HARDCODE_LIBPATH],\n[AC_MSG_CHECKING([how to hardcode library paths into programs])\n_LT_TAGVAR(hardcode_action, $1)=\nif test -n \"$_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\" ||\n   test -n \"$_LT_TAGVAR(runpath_var, $1)\" ||\n   test yes = \"$_LT_TAGVAR(hardcode_automatic, $1)\"; then\n\n  # We can hardcode non-existent directories.\n  if test no != \"$_LT_TAGVAR(hardcode_direct, $1)\" &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test no != \"$_LT_TAGVAR(hardcode_shlibpath_var, $1)\" &&\n     test no != \"$_LT_TAGVAR(hardcode_minus_L, $1)\"; then\n    # Linking always hardcodes the temporary library directory.\n    _LT_TAGVAR(hardcode_action, $1)=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    _LT_TAGVAR(hardcode_action, $1)=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  _LT_TAGVAR(hardcode_action, $1)=unsupported\nfi\nAC_MSG_RESULT([$_LT_TAGVAR(hardcode_action, $1)])\n\nif test relink = \"$_LT_TAGVAR(hardcode_action, $1)\" ||\n   test yes = \"$_LT_TAGVAR(inherit_rpath, $1)\"; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test yes = \"$shlibpath_overrides_runpath\" ||\n     test no = \"$enable_shared\"; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n_LT_TAGDECL([], [hardcode_action], [0],\n    [How to hardcode a shared library path into an executable])\n])# _LT_LINKER_HARDCODE_LIBPATH\n\n\n# _LT_CMD_STRIPLIB\n# ----------------\nm4_defun([_LT_CMD_STRIPLIB],\n[m4_require([_LT_DECL_EGREP])\nstriplib=\nold_striplib=\nAC_MSG_CHECKING([whether stripping libraries is possible])\nif test -n \"$STRIP\" && $STRIP -V 2>&1 | $GREP \"GNU strip\" >/dev/null; then\n  test -z \"$old_striplib\" && old_striplib=\"$STRIP --strip-debug\"\n  test -z \"$striplib\" && striplib=\"$STRIP --strip-unneeded\"\n  AC_MSG_RESULT([yes])\nelse\n# FIXME - insert some real tests, host_os isn't really good enough\n  case $host_os in\n  darwin*)\n    if test -n \"$STRIP\"; then\n      striplib=\"$STRIP -x\"\n      old_striplib=\"$STRIP -S\"\n      AC_MSG_RESULT([yes])\n    else\n      AC_MSG_RESULT([no])\n    fi\n    ;;\n  *)\n    AC_MSG_RESULT([no])\n    ;;\n  esac\nfi\n_LT_DECL([], [old_striplib], [1], [Commands to strip libraries])\n_LT_DECL([], [striplib], [1])\n])# _LT_CMD_STRIPLIB\n\n\n# _LT_PREPARE_MUNGE_PATH_LIST\n# ---------------------------\n# Make sure func_munge_path_list() is defined correctly.\nm4_defun([_LT_PREPARE_MUNGE_PATH_LIST],\n[[# func_munge_path_list VARIABLE PATH\n# -----------------------------------\n# VARIABLE is name of variable containing _space_ separated list of\n# directories to be munged by the contents of PATH, which is string\n# having a format:\n# \"DIR[:DIR]:\"\n#       string \"DIR[ DIR]\" will be prepended to VARIABLE\n# \":DIR[:DIR]\"\n#       string \"DIR[ DIR]\" will be appended to VARIABLE\n# \"DIRP[:DIRP]::[DIRA:]DIRA\"\n#       string \"DIRP[ DIRP]\" will be prepended to VARIABLE and string\n#       \"DIRA[ DIRA]\" will be appended to VARIABLE\n# \"DIR[:DIR]\"\n#       VARIABLE will be replaced by \"DIR[ DIR]\"\nfunc_munge_path_list ()\n{\n    case x@S|@2 in\n    x)\n        ;;\n    *:)\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED 's/:/ /g'` \\@S|@@S|@1\\\"\n        ;;\n    x:*)\n        eval @S|@1=\\\"\\@S|@@S|@1 `$ECHO @S|@2 | $SED 's/:/ /g'`\\\"\n        ;;\n    *::*)\n        eval @S|@1=\\\"\\@S|@@S|@1\\ `$ECHO @S|@2 | $SED -e 's/.*:://' -e 's/:/ /g'`\\\"\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED -e 's/::.*//' -e 's/:/ /g'`\\ \\@S|@@S|@1\\\"\n        ;;\n    *)\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED 's/:/ /g'`\\\"\n        ;;\n    esac\n}\n]])# _LT_PREPARE_PATH_LIST\n\n\n# _LT_SYS_DYNAMIC_LINKER([TAG])\n# -----------------------------\n# PORTME Fill in your ld.so characteristics\nm4_defun([_LT_SYS_DYNAMIC_LINKER],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_OBJDUMP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_PREPARE_MUNGE_PATH_LIST])dnl\nAC_MSG_CHECKING([dynamic linker characteristics])\nm4_if([$1],\n\t[], [\nif test yes = \"$GCC\"; then\n  case $host_os in\n    darwin*) lt_awk_arg='/^libraries:/,/LR/' ;;\n    *) lt_awk_arg='/^libraries:/' ;;\n  esac\n  case $host_os in\n    mingw* | cegcc*) lt_sed_strip_eq='s|=\\([[A-Za-z]]:\\)|\\1|g' ;;\n    *) lt_sed_strip_eq='s|=/|/|g' ;;\n  esac\n  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e \"s/^libraries://\" -e $lt_sed_strip_eq`\n  case $lt_search_path_spec in\n  *\\;*)\n    # if the path contains \";\" then we assume it to be the separator\n    # otherwise default to the standard path separator (i.e. \":\") - it is\n    # assumed that no part of a normal pathname contains \";\" but that should\n    # okay in the real world where \";\" in dirpaths is itself problematic.\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED 's/;/ /g'`\n    ;;\n  *)\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED \"s/$PATH_SEPARATOR/ /g\"`\n    ;;\n  esac\n  # Ok, now we have the path, separated by spaces, we can step through it\n  # and add multilib dir if necessary...\n  lt_tmp_lt_search_path_spec=\n  lt_multi_os_dir=/`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`\n  # ...but if some path component already ends with the multilib dir we assume\n  # that all is fine and trust -print-search-dirs as is (GCC 4.2? or newer).\n  case \"$lt_multi_os_dir; $lt_search_path_spec \" in\n  \"/; \"* | \"/.; \"* | \"/./; \"* | *\"$lt_multi_os_dir \"* | *\"$lt_multi_os_dir/ \"*)\n    lt_multi_os_dir=\n    ;;\n  esac\n  for lt_sys_path in $lt_search_path_spec; do\n    if test -d \"$lt_sys_path$lt_multi_os_dir\"; then\n      lt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path$lt_multi_os_dir\"\n    elif test -n \"$lt_multi_os_dir\"; then\n      test -d \"$lt_sys_path\" && \\\n\tlt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path\"\n    fi\n  done\n  lt_search_path_spec=`$ECHO \"$lt_tmp_lt_search_path_spec\" | awk '\nBEGIN {RS = \" \"; FS = \"/|\\n\";} {\n  lt_foo = \"\";\n  lt_count = 0;\n  for (lt_i = NF; lt_i > 0; lt_i--) {\n    if ($lt_i != \"\" && $lt_i != \".\") {\n      if ($lt_i == \"..\") {\n        lt_count++;\n      } else {\n        if (lt_count == 0) {\n          lt_foo = \"/\" $lt_i lt_foo;\n        } else {\n          lt_count--;\n        }\n      }\n    }\n  }\n  if (lt_foo != \"\") { lt_freq[[lt_foo]]++; }\n  if (lt_freq[[lt_foo]] == 1) { print lt_foo; }\n}'`\n  # AWK program above erroneously prepends '/' to C:/dos/paths\n  # for these hosts.\n  case $host_os in\n    mingw* | cegcc*) lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" |\\\n      $SED 's|/\\([[A-Za-z]]:\\)|\\1|g'` ;;\n  esac\n  sys_lib_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $lt_NL2SP`\nelse\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\nfi])\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=.so\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\nAC_ARG_VAR([LT_SYS_LIBRARY_PATH],\n[User-defined run-time library search path.])\n\ncase $host_os in\naix3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='$libname$release$shared_ext$major'\n  ;;\n\naix[[4-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test ia64 = \"$host_cpu\"; then\n    # AIX 5 supports IA64\n    library_names_spec='$libname$release$shared_ext$major $libname$release$shared_ext$versuffix $libname$shared_ext'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line '#! .'.  This would cause the generated library to\n    # depend on '.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[[01]] | aix4.[[01]].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | $CC -E - | $GREP yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # Using Import Files as archive members, it is possible to support\n    # filename-based versioning of shared library archives on AIX. While\n    # this would work for both with and without runtime linking, it will\n    # prevent static linking of such archives. So we do filename-based\n    # shared library versioning with .so extension only, which is used\n    # when both runtime linking and shared linking is enabled.\n    # Unfortunately, runtime linking may impact performance, so we do\n    # not want this to be the default eventually. Also, we use the\n    # versioned .so libs for executables only if there is the -brtl\n    # linker flag in LDFLAGS as well, or --with-aix-soname=svr4 only.\n    # To allow for filename-based versioning support, we need to create\n    # libNAME.so.V as an archive file, containing:\n    # *) an Import File, referring to the versioned filename of the\n    #    archive as well as the shared archive member, telling the\n    #    bitwidth (32 or 64) of that shared object, and providing the\n    #    list of exported symbols of that shared object, eventually\n    #    decorated with the 'weak' keyword\n    # *) the shared object with the F_LOADONLY flag set, to really avoid\n    #    it being seen by the linker.\n    # At run time we better use the real file rather than another symlink,\n    # but for link time we create the symlink libNAME.so -> libNAME.so.V\n\n    case $with_aix_soname,$aix_use_runtimelinking in\n    # AIX (on Power*) has no versioning support, so currently we cannot hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    aix,yes) # traditional libtool\n      dynamic_linker='AIX unversionable lib.so'\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      ;;\n    aix,no) # traditional AIX only\n      dynamic_linker='AIX lib.a[(]lib.so.V[)]'\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      ;;\n    svr4,*) # full svr4 only\n      dynamic_linker=\"AIX lib.so.V[(]$shared_archive_member_spec.o[)]\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,yes) # both, prefer svr4\n      dynamic_linker=\"AIX lib.so.V[(]$shared_archive_member_spec.o[)], lib.a[(]lib.so.V[)]\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # unpreferred sharedlib libNAME.a needs extra handling\n      postinstall_cmds='test -n \"$linkname\" || linkname=\"$realname\"~func_stripname \"\" \".so\" \"$linkname\"~$install_shared_prog \"$dir/$func_stripname_result.$libext\" \"$destdir/$func_stripname_result.$libext\"~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib \"$destdir/$func_stripname_result.$libext\"'\n      postuninstall_cmds='for n in $library_names $old_library; do :; done~func_stripname \"\" \".so\" \"$n\"~test \"$func_stripname_result\" = \"$n\" || func_append rmfiles \" $odir/$func_stripname_result.$libext\"'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,no) # both, prefer aix\n      dynamic_linker=\"AIX lib.a[(]lib.so.V[)], lib.so.V[(]$shared_archive_member_spec.o[)]\"\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      # unpreferred sharedlib libNAME.so.V and symlink libNAME.so need extra handling\n      postinstall_cmds='test -z \"$dlname\" || $install_shared_prog $dir/$dlname $destdir/$dlname~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib $destdir/$dlname~test -n \"$linkname\" || linkname=$realname~func_stripname \"\" \".a\" \"$linkname\"~(cd \"$destdir\" && $LN_S -f $dlname $func_stripname_result.so)'\n      postuninstall_cmds='test -z \"$dlname\" || func_append rmfiles \" $odir/$dlname\"~for n in $old_library $library_names; do :; done~func_stripname \"\" \".a\" \"$n\"~func_append rmfiles \" $odir/$func_stripname_result.so\"'\n      ;;\n    esac\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  case $host_cpu in\n  powerpc)\n    # Since July 2007 AmigaOS4 officially supports .so libraries.\n    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    ;;\n  m68k)\n    library_names_spec='$libname.ixlibrary $libname.a'\n    # Create ${libname}_ixlibrary.a entries in /sys/libs.\n    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all \"$lib\" | $SED '\\''s%^.*/\\([[^/]]*\\)\\.ixlibrary$%\\1%'\\''`; $RM /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n    ;;\n  esac\n  ;;\n\nbeos*)\n  library_names_spec='$libname$shared_ext'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[[45]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32* | cegcc*)\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$cc_basename in\n  yes,*)\n    # gcc\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname~\n      if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n        eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n      fi'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo $libname | sed -e 's/^lib/cyg/'``echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\nm4_if([$1], [],[\n      sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/lib/w32api\"])\n      ;;\n    mingw* | cegcc*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo $libname | sed -e 's/^lib/pw/'``echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n      ;;\n    esac\n    dynamic_linker='Win32 ld.exe'\n    ;;\n\n  *,cl*)\n    # Native MSVC\n    libname_spec='$name'\n    soname_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n    library_names_spec='$libname.dll.lib'\n\n    case $build_os in\n    mingw*)\n      sys_lib_search_path_spec=\n      lt_save_ifs=$IFS\n      IFS=';'\n      for lt_path in $LIB\n      do\n        IFS=$lt_save_ifs\n        # Let DOS variable expansion print the short 8.3 style file name.\n        lt_path=`cd \"$lt_path\" 2>/dev/null && cmd //C \"for %i in (\".\") do @echo %~si\"`\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec $lt_path\"\n      done\n      IFS=$lt_save_ifs\n      # Convert to MSYS style.\n      sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | sed -e 's|\\\\\\\\|/|g' -e 's| \\\\([[a-zA-Z]]\\\\):| /\\\\1|g' -e 's|^ ||'`\n      ;;\n    cygwin*)\n      # Convert to unix form, then to dos form, then back to unix form\n      # but this time dos style (no spaces!) so that the unix form looks\n      # like /cygdrive/c/PROGRA~1:/cygdr...\n      sys_lib_search_path_spec=`cygpath --path --unix \"$LIB\"`\n      sys_lib_search_path_spec=`cygpath --path --dos \"$sys_lib_search_path_spec\" 2>/dev/null`\n      sys_lib_search_path_spec=`cygpath --path --unix \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      ;;\n    *)\n      sys_lib_search_path_spec=$LIB\n      if $ECHO \"$sys_lib_search_path_spec\" | [$GREP ';[c-zC-Z]:/' >/dev/null]; then\n        # It is most probably a Windows format PATH.\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n      else\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      fi\n      # FIXME: find the short name or the path components, as spaces are\n      # common. (e.g. \"Program Files\" -> \"PROGRA~1\")\n      ;;\n    esac\n\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n    dynamic_linker='Win32 link.exe'\n    ;;\n\n  *)\n    # Assume MSVC wrapper\n    library_names_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext $libname.lib'\n    dynamic_linker='Win32 ld.exe'\n    ;;\n  esac\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$major$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$major$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\nm4_if([$1], [],[\n  sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/local/lib\"])\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[[23]].*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      soname_spec='$libname$release$shared_ext$major'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2.*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[[01]]* | freebsdelf3.[[01]]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[[2-9]]* | freebsdelf3.[[2-9]]* | \\\n  freebsd4.[[0-5]] | freebsdelf4.[[0-5]] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  *) # from 4.6 on, and DragonFly\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\nhaiku*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  dynamic_linker=\"$host_os runtime_loader\"\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/system/lib'\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    if test 32 = \"$HPUX_IA64_MODE\"; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux32\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux64\n    fi\n    ;;\n  hppa*64*)\n    shrext_cmds='.sl'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555, ...\n  postinstall_cmds='chmod 555 $lib'\n  # or fails outright, so override atomically:\n  install_override_mode=555\n  ;;\n\ninterix[[3-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test yes = \"$lt_cv_prog_gnu_ld\"; then\n\t\tversion_type=linux # correct to gnu/linux during the next big refactor\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$release$shared_ext $libname$shared_ext'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib$libsuff /lib$libsuff /usr/local/lib$libsuff\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib$libsuff /lib$libsuff\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\nlinux*android*)\n  version_type=none # Android doesn't support versioned libraries.\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext'\n  soname_spec='$libname$release$shared_ext'\n  finish_cmds=\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  dynamic_linker='Android linker'\n  # Don't embed -rpath directories since the linker doesn't support them.\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n\n  # Some binutils ld are patched to set DT_RUNPATH\n  AC_CACHE_VAL([lt_cv_shlibpath_overrides_runpath],\n    [lt_cv_shlibpath_overrides_runpath=no\n    save_LDFLAGS=$LDFLAGS\n    save_libdir=$libdir\n    eval \"libdir=/foo; wl=\\\"$_LT_TAGVAR(lt_prog_compiler_wl, $1)\\\"; \\\n\t LDFLAGS=\\\"\\$LDFLAGS $_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\\\"\"\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n      [AS_IF([ ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep \"RUNPATH.*$libdir\" >/dev/null],\n\t [lt_cv_shlibpath_overrides_runpath=yes])])\n    LDFLAGS=$save_LDFLAGS\n    libdir=$save_libdir\n    ])\n  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Ideally, we could use ldconfig to report *all* directores which are\n  # searched for libraries, however this is still not possible.  Aside from not\n  # being certain /sbin/ldconfig is available, command\n  # 'ldconfig -N -X -v | grep ^/' on 64bit Fedora does not report /usr/lib64,\n  # even though it is searched at run-time.  Try to do the best guess by\n  # appending ld.so.conf contents (and includes) to the search path.\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\[$]2)); skip = 1; } { if (!skip) print \\[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[\t ]*hwcap[\t ]/d;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/\"//g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nnetbsdelf*-gnu)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='NetBSD ld.elf_so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\n*nto* | *qnx*)\n  version_type=qnx\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='ldqnx.so'\n  ;;\n\nopenbsd* | bitrig*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=/usr/lib\n  need_lib_prefix=no\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    need_version=no\n  else\n    need_version=yes\n  fi\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\nos2*)\n  libname_spec='$name'\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n  # OS/2 can only load a DLL with a base name of 8 characters or less.\n  soname_spec='`test -n \"$os2dllname\" && libname=\"$os2dllname\";\n    v=$($ECHO $release$versuffix | tr -d .-);\n    n=$($ECHO $libname | cut -b -$((8 - ${#v})) | tr . _);\n    $ECHO $n$v`$shared_ext'\n  library_names_spec='${libname}_dll.$libext'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=BEGINLIBPATH\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  postinstall_cmds='base_file=`basename \\$file`~\n    dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; $ECHO \\$dlname'\\''`~\n    dldir=$destdir/`dirname \\$dlpath`~\n    test -d \\$dldir || mkdir -p \\$dldir~\n    $install_prog $dir/$dlname \\$dldir/$dlname~\n    chmod a+x \\$dldir/$dlname~\n    if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n      eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n    fi'\n  postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; $ECHO \\$dlname'\\''`~\n    dlpath=$dir/\\$dldll~\n    $RM \\$dlpath'\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  ;;\n\nrdos*)\n  dynamic_linker=no\n  ;;\n\nsolaris*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test yes = \"$with_gnu_ld\"; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec; then\n    version_type=linux # correct to gnu/linux during the next big refactor\n    library_names_spec='$libname$shared_ext.$versuffix $libname$shared_ext.$major $libname$shared_ext'\n    soname_spec='$libname$shared_ext.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=sco\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  if test yes = \"$with_gnu_ld\"; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\ntpf*)\n  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nuts4*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\nAC_MSG_RESULT([$dynamic_linker])\ntest no = \"$dynamic_linker\" && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test yes = \"$GCC\"; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n\nif test set = \"${lt_cv_sys_lib_search_path_spec+set}\"; then\n  sys_lib_search_path_spec=$lt_cv_sys_lib_search_path_spec\nfi\n\nif test set = \"${lt_cv_sys_lib_dlsearch_path_spec+set}\"; then\n  sys_lib_dlsearch_path_spec=$lt_cv_sys_lib_dlsearch_path_spec\nfi\n\n# remember unaugmented sys_lib_dlsearch_path content for libtool script decls...\nconfigure_time_dlsearch_path=$sys_lib_dlsearch_path_spec\n\n# ... but it needs LT_SYS_LIBRARY_PATH munging for other configure-time code\nfunc_munge_path_list sys_lib_dlsearch_path_spec \"$LT_SYS_LIBRARY_PATH\"\n\n# to be used as default LT_SYS_LIBRARY_PATH value in generated libtool\nconfigure_time_lt_sys_library_path=$LT_SYS_LIBRARY_PATH\n\n_LT_DECL([], [variables_saved_for_relink], [1],\n    [Variables whose values should be saved in libtool wrapper scripts and\n    restored at link time])\n_LT_DECL([], [need_lib_prefix], [0],\n    [Do we need the \"lib\" prefix for modules?])\n_LT_DECL([], [need_version], [0], [Do we need a version for libraries?])\n_LT_DECL([], [version_type], [0], [Library versioning type])\n_LT_DECL([], [runpath_var], [0],  [Shared library runtime path variable])\n_LT_DECL([], [shlibpath_var], [0],[Shared library path variable])\n_LT_DECL([], [shlibpath_overrides_runpath], [0],\n    [Is shlibpath searched before the hard-coded library search path?])\n_LT_DECL([], [libname_spec], [1], [Format of library name prefix])\n_LT_DECL([], [library_names_spec], [1],\n    [[List of archive names.  First name is the real one, the rest are links.\n    The last name is the one that the linker finds with -lNAME]])\n_LT_DECL([], [soname_spec], [1],\n    [[The coded name of the library, if different from the real name]])\n_LT_DECL([], [install_override_mode], [1],\n    [Permission mode override for installation of shared libraries])\n_LT_DECL([], [postinstall_cmds], [2],\n    [Command to use after installation of a shared archive])\n_LT_DECL([], [postuninstall_cmds], [2],\n    [Command to use after uninstallation of a shared archive])\n_LT_DECL([], [finish_cmds], [2],\n    [Commands used to finish a libtool library installation in a directory])\n_LT_DECL([], [finish_eval], [1],\n    [[As \"finish_cmds\", except a single script fragment to be evaled but\n    not shown]])\n_LT_DECL([], [hardcode_into_libs], [0],\n    [Whether we should hardcode library paths into libraries])\n_LT_DECL([], [sys_lib_search_path_spec], [2],\n    [Compile-time system search path for libraries])\n_LT_DECL([sys_lib_dlsearch_path_spec], [configure_time_dlsearch_path], [2],\n    [Detected run-time system search path for libraries])\n_LT_DECL([], [configure_time_lt_sys_library_path], [2],\n    [Explicit LT_SYS_LIBRARY_PATH set during ./configure time])\n])# _LT_SYS_DYNAMIC_LINKER\n\n\n# _LT_PATH_TOOL_PREFIX(TOOL)\n# --------------------------\n# find a file program that can recognize shared library\nAC_DEFUN([_LT_PATH_TOOL_PREFIX],\n[m4_require([_LT_DECL_EGREP])dnl\nAC_MSG_CHECKING([for $1])\nAC_CACHE_VAL(lt_cv_path_MAGIC_CMD,\n[case $MAGIC_CMD in\n[[\\\\/*] |  ?:[\\\\/]*])\n  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=$MAGIC_CMD\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\ndnl $ac_dummy forces splitting on constant user-supplied paths.\ndnl POSIX.2 word splitting is done only on the output of word expansions,\ndnl not every word.  This closes a longstanding sh security hole.\n  ac_dummy=\"m4_if([$2], , $PATH, [$2])\"\n  for ac_dir in $ac_dummy; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$1\"; then\n      lt_cv_path_MAGIC_CMD=$ac_dir/\"$1\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=$lt_cv_path_MAGIC_CMD\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<_LT_EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\n_LT_EOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=$lt_save_ifs\n  MAGIC_CMD=$lt_save_MAGIC_CMD\n  ;;\nesac])\nMAGIC_CMD=$lt_cv_path_MAGIC_CMD\nif test -n \"$MAGIC_CMD\"; then\n  AC_MSG_RESULT($MAGIC_CMD)\nelse\n  AC_MSG_RESULT(no)\nfi\n_LT_DECL([], [MAGIC_CMD], [0],\n\t [Used to examine libraries when file_magic_cmd begins with \"file\"])dnl\n])# _LT_PATH_TOOL_PREFIX\n\n# Old name:\nAU_ALIAS([AC_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PATH_TOOL_PREFIX], [])\n\n\n# _LT_PATH_MAGIC\n# --------------\n# find a file program that can recognize a shared library\nm4_defun([_LT_PATH_MAGIC],\n[_LT_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)\nif test -z \"$lt_cv_path_MAGIC_CMD\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    _LT_PATH_TOOL_PREFIX(file, /usr/bin$PATH_SEPARATOR$PATH)\n  else\n    MAGIC_CMD=:\n  fi\nfi\n])# _LT_PATH_MAGIC\n\n\n# LT_PATH_LD\n# ----------\n# find the pathname to the GNU or non-GNU linker\nAC_DEFUN([LT_PATH_LD],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PROG_ECHO_BACKSLASH])dnl\n\nAC_ARG_WITH([gnu-ld],\n    [AS_HELP_STRING([--with-gnu-ld],\n\t[assume the C compiler uses GNU ld @<:@default=no@:>@])],\n    [test no = \"$withval\" || with_gnu_ld=yes],\n    [with_gnu_ld=no])dnl\n\nac_prog=ld\nif test yes = \"$GCC\"; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  AC_MSG_CHECKING([for ld used by $CC])\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return, which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [[\\\\/]]* | ?:[[\\\\/]]*)\n      re_direlt='/[[^/]][[^/]]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`$ECHO \"$ac_prog\"| $SED 's%\\\\\\\\%/%g'`\n      while $ECHO \"$ac_prog\" | $GREP \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`$ECHO $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=$ac_prog\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test yes = \"$with_gnu_ld\"; then\n  AC_MSG_CHECKING([for GNU ld])\nelse\n  AC_MSG_CHECKING([for non-GNU ld])\nfi\nAC_CACHE_VAL(lt_cv_path_LD,\n[if test -z \"$LD\"; then\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=$ac_dir/$ac_prog\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest no != \"$with_gnu_ld\" && break\n\t;;\n      *)\n\ttest yes != \"$with_gnu_ld\" && break\n\t;;\n      esac\n    fi\n  done\n  IFS=$lt_save_ifs\nelse\n  lt_cv_path_LD=$LD # Let the user override the test with a path.\nfi])\nLD=$lt_cv_path_LD\nif test -n \"$LD\"; then\n  AC_MSG_RESULT($LD)\nelse\n  AC_MSG_RESULT(no)\nfi\ntest -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\n_LT_PATH_LD_GNU\nAC_SUBST([LD])\n\n_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])\n])# LT_PATH_LD\n\n# Old names:\nAU_ALIAS([AM_PROG_LD], [LT_PATH_LD])\nAU_ALIAS([AC_PROG_LD], [LT_PATH_LD])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_LD], [])\ndnl AC_DEFUN([AC_PROG_LD], [])\n\n\n# _LT_PATH_LD_GNU\n#- --------------\nm4_defun([_LT_PATH_LD_GNU],\n[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,\n[# I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac])\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n])# _LT_PATH_LD_GNU\n\n\n# _LT_CMD_RELOAD\n# --------------\n# find reload flag for linker\n#   -- PORTME Some linkers may need a different reload flag.\nm4_defun([_LT_CMD_RELOAD],\n[AC_CACHE_CHECK([for $LD option to reload object files],\n  lt_cv_ld_reload_flag,\n  [lt_cv_ld_reload_flag='-r'])\nreload_flag=$lt_cv_ld_reload_flag\ncase $reload_flag in\n\"\" | \" \"*) ;;\n*) reload_flag=\" $reload_flag\" ;;\nesac\nreload_cmds='$LD$reload_flag -o $output$reload_objs'\ncase $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    if test yes != \"$GCC\"; then\n      reload_cmds=false\n    fi\n    ;;\n  darwin*)\n    if test yes = \"$GCC\"; then\n      reload_cmds='$LTCC $LTCFLAGS -nostdlib $wl-r -o $output$reload_objs'\n    else\n      reload_cmds='$LD$reload_flag -o $output$reload_objs'\n    fi\n    ;;\nesac\n_LT_TAGDECL([], [reload_flag], [1], [How to create reloadable object files])dnl\n_LT_TAGDECL([], [reload_cmds], [2])dnl\n])# _LT_CMD_RELOAD\n\n\n# _LT_PATH_DD\n# -----------\n# find a working dd\nm4_defun([_LT_PATH_DD],\n[AC_CACHE_CHECK([for a working dd], [ac_cv_path_lt_DD],\n[printf 0123456789abcdef0123456789abcdef >conftest.i\ncat conftest.i conftest.i >conftest2.i\n: ${lt_DD:=$DD}\nAC_PATH_PROGS_FEATURE_CHECK([lt_DD], [dd],\n[if \"$ac_path_lt_DD\" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then\n  cmp -s conftest.i conftest.out \\\n  && ac_cv_path_lt_DD=\"$ac_path_lt_DD\" ac_path_lt_DD_found=:\nfi])\nrm -f conftest.i conftest2.i conftest.out])\n])# _LT_PATH_DD\n\n\n# _LT_CMD_TRUNCATE\n# ----------------\n# find command to truncate a binary pipe\nm4_defun([_LT_CMD_TRUNCATE],\n[m4_require([_LT_PATH_DD])\nAC_CACHE_CHECK([how to truncate binary pipes], [lt_cv_truncate_bin],\n[printf 0123456789abcdef0123456789abcdef >conftest.i\ncat conftest.i conftest.i >conftest2.i\nlt_cv_truncate_bin=\nif \"$ac_cv_path_lt_DD\" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then\n  cmp -s conftest.i conftest.out \\\n  && lt_cv_truncate_bin=\"$ac_cv_path_lt_DD bs=4096 count=1\"\nfi\nrm -f conftest.i conftest2.i conftest.out\ntest -z \"$lt_cv_truncate_bin\" && lt_cv_truncate_bin=\"$SED -e 4q\"])\n_LT_DECL([lt_truncate_bin], [lt_cv_truncate_bin], [1],\n  [Command to truncate a binary pipe])\n])# _LT_CMD_TRUNCATE\n\n\n# _LT_CHECK_MAGIC_METHOD\n# ----------------------\n# how to check for library dependencies\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_MAGIC_METHOD],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nAC_CACHE_CHECK([how to recognize dependent libraries],\nlt_cv_deplibs_check_method,\n[lt_cv_file_magic_cmd='$MAGIC_CMD'\nlt_cv_file_magic_test_file=\nlt_cv_deplibs_check_method='unknown'\n# Need to set the preceding variable on all platforms that support\n# interlibrary dependencies.\n# 'none' -- dependencies not supported.\n# 'unknown' -- same as none, but documents that we really don't know.\n# 'pass_all' -- all dependencies passed with no checks.\n# 'test_compile' -- check by making test program.\n# 'file_magic [[regex]]' -- check by looking for files in library path\n# that responds to the $file_magic_cmd with a given extended regex.\n# If you have 'file' or equivalent on your system and you're not sure\n# whether 'pass_all' will *always* work, you probably want this one.\n\ncase $host_os in\naix[[4-9]]*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbeos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbsdi[[45]]*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib)'\n  lt_cv_file_magic_cmd='/usr/bin/file -L'\n  lt_cv_file_magic_test_file=/shlib/libc.so\n  ;;\n\ncygwin*)\n  # func_win32_libid is a shell function defined in ltmain.sh\n  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n  lt_cv_file_magic_cmd='func_win32_libid'\n  ;;\n\nmingw* | pw32*)\n  # Base MSYS/MinGW do not provide the 'file' command needed by\n  # func_win32_libid shell function, so use a weaker test based on 'objdump',\n  # unless we find 'file', for example because we are cross-compiling.\n  if ( file / ) >/dev/null 2>&1; then\n    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n    lt_cv_file_magic_cmd='func_win32_libid'\n  else\n    # Keep this pattern in sync with the one in func_win32_libid.\n    lt_cv_deplibs_check_method='file_magic file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)'\n    lt_cv_file_magic_cmd='$OBJDUMP -f'\n  fi\n  ;;\n\ncegcc*)\n  # use the weaker test based on 'objdump'. See mingw*.\n  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'\n  lt_cv_file_magic_cmd='$OBJDUMP -f'\n  ;;\n\ndarwin* | rhapsody*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nfreebsd* | dragonfly*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    case $host_cpu in\n    i*86 )\n      # Not sure whether the presence of OpenBSD here was a mistake.\n      # Let's accept both of them until this is cleared up.\n      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[[3-9]]86 (compact )?demand paged shared library'\n      lt_cv_file_magic_cmd=/usr/bin/file\n      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`\n      ;;\n    esac\n  else\n    lt_cv_deplibs_check_method=pass_all\n  fi\n  ;;\n\nhaiku*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhpux10.20* | hpux11*)\n  lt_cv_file_magic_cmd=/usr/bin/file\n  case $host_cpu in\n  ia64*)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|ELF-[[0-9]][[0-9]]) shared object file - IA64'\n    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so\n    ;;\n  hppa*64*)\n    [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF[ -][0-9][0-9])(-bit)?( [LM]SB)? shared object( file)?[, -]* PA-RISC [0-9]\\.[0-9]']\n    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl\n    ;;\n  *)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|PA-RISC[[0-9]]\\.[[0-9]]) shared library'\n    lt_cv_file_magic_test_file=/usr/lib/libc.sl\n    ;;\n  esac\n  ;;\n\ninterix[[3-9]]*)\n  # PIC code is broken on Interix 3.x, that's why |\\.a not |_pic\\.a here\n  lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|\\.a)$'\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $LD in\n  *-32|*\"-32 \") libmagic=32-bit;;\n  *-n32|*\"-n32 \") libmagic=N32;;\n  *-64|*\"-64 \") libmagic=64-bit;;\n  *) libmagic=never-match;;\n  esac\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nnetbsd* | netbsdelf*-gnu)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|_pic\\.a)$'\n  fi\n  ;;\n\nnewos6*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (executable|dynamic lib)'\n  lt_cv_file_magic_cmd=/usr/bin/file\n  lt_cv_file_magic_test_file=/usr/lib/libnls.so\n  ;;\n\n*nto* | *qnx*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nopenbsd* | bitrig*)\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|\\.so|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  fi\n  ;;\n\nosf3* | osf4* | osf5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nrdos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsolaris*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv4 | sysv4.3*)\n  case $host_vendor in\n  motorola)\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib) M[[0-9]][[0-9]]* Version [[0-9]]'\n    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`\n    ;;\n  ncr)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  sequent)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB (shared object|dynamic lib )'\n    ;;\n  sni)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method=\"file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB dynamic lib\"\n    lt_cv_file_magic_test_file=/lib/libc.so\n    ;;\n  siemens)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  pc)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  esac\n  ;;\n\ntpf*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nos2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nesac\n])\n\nfile_magic_glob=\nwant_nocaseglob=no\nif test \"$build\" = \"$host\"; then\n  case $host_os in\n  mingw* | pw32*)\n    if ( shopt | grep nocaseglob ) >/dev/null 2>&1; then\n      want_nocaseglob=yes\n    else\n      file_magic_glob=`echo aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ | $SED -e \"s/\\(..\\)/s\\/[[\\1]]\\/[[\\1]]\\/g;/g\"`\n    fi\n    ;;\n  esac\nfi\n\nfile_magic_cmd=$lt_cv_file_magic_cmd\ndeplibs_check_method=$lt_cv_deplibs_check_method\ntest -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n\n_LT_DECL([], [deplibs_check_method], [1],\n    [Method to check whether dependent libraries are shared objects])\n_LT_DECL([], [file_magic_cmd], [1],\n    [Command to use when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [file_magic_glob], [1],\n    [How to find potential files when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [want_nocaseglob], [1],\n    [Find potential files using nocaseglob when deplibs_check_method = \"file_magic\"])\n])# _LT_CHECK_MAGIC_METHOD\n\n\n# LT_PATH_NM\n# ----------\n# find the pathname to a BSD- or MS-compatible name lister\nAC_DEFUN([LT_PATH_NM],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,\n[if test -n \"$NM\"; then\n  # Let the user override the test.\n  lt_cv_path_NM=$NM\nelse\n  lt_nm_to_check=${ac_tool_prefix}nm\n  if test -n \"$ac_tool_prefix\" && test \"$build\" = \"$host\"; then\n    lt_nm_to_check=\"$lt_nm_to_check nm\"\n  fi\n  for lt_tmp_nm in $lt_nm_to_check; do\n    lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do\n      IFS=$lt_save_ifs\n      test -z \"$ac_dir\" && ac_dir=.\n      tmp_nm=$ac_dir/$lt_tmp_nm\n      if test -f \"$tmp_nm\" || test -f \"$tmp_nm$ac_exeext\"; then\n\t# Check to see if the nm accepts a BSD-compat flag.\n\t# Adding the 'sed 1q' prevents false positives on HP-UX, which says:\n\t#   nm: unknown option \"B\" ignored\n\t# Tru64's nm complains that /dev/null is an invalid object file\n\t# MSYS converts /dev/null to NUL, MinGW nm treats NUL as empty\n\tcase $build_os in\n\tmingw*) lt_bad_file=conftest.nm/nofile ;;\n\t*) lt_bad_file=/dev/null ;;\n\tesac\n\tcase `\"$tmp_nm\" -B $lt_bad_file 2>&1 | sed '1q'` in\n\t*$lt_bad_file* | *'Invalid file or object type'*)\n\t  lt_cv_path_NM=\"$tmp_nm -B\"\n\t  break 2\n\t  ;;\n\t*)\n\t  case `\"$tmp_nm\" -p /dev/null 2>&1 | sed '1q'` in\n\t  */dev/null*)\n\t    lt_cv_path_NM=\"$tmp_nm -p\"\n\t    break 2\n\t    ;;\n\t  *)\n\t    lt_cv_path_NM=${lt_cv_path_NM=\"$tmp_nm\"} # keep the first match, but\n\t    continue # so that we can try to find one that supports BSD flags\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n      fi\n    done\n    IFS=$lt_save_ifs\n  done\n  : ${lt_cv_path_NM=no}\nfi])\nif test no != \"$lt_cv_path_NM\"; then\n  NM=$lt_cv_path_NM\nelse\n  # Didn't find any BSD compatible name lister, look for dumpbin.\n  if test -n \"$DUMPBIN\"; then :\n    # Let the user override the test.\n  else\n    AC_CHECK_TOOLS(DUMPBIN, [dumpbin \"link -dump\"], :)\n    case `$DUMPBIN -symbols -headers /dev/null 2>&1 | sed '1q'` in\n    *COFF*)\n      DUMPBIN=\"$DUMPBIN -symbols -headers\"\n      ;;\n    *)\n      DUMPBIN=:\n      ;;\n    esac\n  fi\n  AC_SUBST([DUMPBIN])\n  if test : != \"$DUMPBIN\"; then\n    NM=$DUMPBIN\n  fi\nfi\ntest -z \"$NM\" && NM=nm\nAC_SUBST([NM])\n_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl\n\nAC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],\n  [lt_cv_nm_interface=\"BSD nm\"\n  echo \"int some_variable = 0;\" > conftest.$ac_ext\n  (eval echo \"\\\"\\$as_me:$LINENO: $ac_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$ac_compile\" 2>conftest.err)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: output\\\"\" >&AS_MESSAGE_LOG_FD)\n  cat conftest.out >&AS_MESSAGE_LOG_FD\n  if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n    lt_cv_nm_interface=\"MS dumpbin\"\n  fi\n  rm -f conftest*])\n])# LT_PATH_NM\n\n# Old names:\nAU_ALIAS([AM_PROG_NM], [LT_PATH_NM])\nAU_ALIAS([AC_PROG_NM], [LT_PATH_NM])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_NM], [])\ndnl AC_DEFUN([AC_PROG_NM], [])\n\n# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n# --------------------------------\n# how to determine the name of the shared library\n# associated with a specific link library.\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_SHAREDLIB_FROM_LINKLIB],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nm4_require([_LT_DECL_DLLTOOL])\nAC_CACHE_CHECK([how to associate runtime and link libraries],\nlt_cv_sharedlib_from_linklib_cmd,\n[lt_cv_sharedlib_from_linklib_cmd='unknown'\n\ncase $host_os in\ncygwin* | mingw* | pw32* | cegcc*)\n  # two different shell functions defined in ltmain.sh;\n  # decide which one to use based on capabilities of $DLLTOOL\n  case `$DLLTOOL --help 2>&1` in\n  *--identify-strict*)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib\n    ;;\n  *)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib_fallback\n    ;;\n  esac\n  ;;\n*)\n  # fallback: assume linklib IS sharedlib\n  lt_cv_sharedlib_from_linklib_cmd=$ECHO\n  ;;\nesac\n])\nsharedlib_from_linklib_cmd=$lt_cv_sharedlib_from_linklib_cmd\ntest -z \"$sharedlib_from_linklib_cmd\" && sharedlib_from_linklib_cmd=$ECHO\n\n_LT_DECL([], [sharedlib_from_linklib_cmd], [1],\n    [Command to associate shared and link libraries])\n])# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n\n\n# _LT_PATH_MANIFEST_TOOL\n# ----------------------\n# locate the manifest tool\nm4_defun([_LT_PATH_MANIFEST_TOOL],\n[AC_CHECK_TOOL(MANIFEST_TOOL, mt, :)\ntest -z \"$MANIFEST_TOOL\" && MANIFEST_TOOL=mt\nAC_CACHE_CHECK([if $MANIFEST_TOOL is a manifest tool], [lt_cv_path_mainfest_tool],\n  [lt_cv_path_mainfest_tool=no\n  echo \"$as_me:$LINENO: $MANIFEST_TOOL '-?'\" >&AS_MESSAGE_LOG_FD\n  $MANIFEST_TOOL '-?' 2>conftest.err > conftest.out\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  if $GREP 'Manifest Tool' conftest.out > /dev/null; then\n    lt_cv_path_mainfest_tool=yes\n  fi\n  rm -f conftest*])\nif test yes != \"$lt_cv_path_mainfest_tool\"; then\n  MANIFEST_TOOL=:\nfi\n_LT_DECL([], [MANIFEST_TOOL], [1], [Manifest tool])dnl\n])# _LT_PATH_MANIFEST_TOOL\n\n\n# _LT_DLL_DEF_P([FILE])\n# ---------------------\n# True iff FILE is a Windows DLL '.def' file.\n# Keep in sync with func_dll_def_p in the libtool script\nAC_DEFUN([_LT_DLL_DEF_P],\n[dnl\n  test DEF = \"`$SED -n dnl\n    -e '\\''s/^[[\t ]]*//'\\'' dnl Strip leading whitespace\n    -e '\\''/^\\(;.*\\)*$/d'\\'' dnl      Delete empty lines and comments\n    -e '\\''s/^\\(EXPORTS\\|LIBRARY\\)\\([[\t ]].*\\)*$/DEF/p'\\'' dnl\n    -e q dnl                          Only consider the first \"real\" line\n    $1`\" dnl\n])# _LT_DLL_DEF_P\n\n\n# LT_LIB_M\n# --------\n# check for math library\nAC_DEFUN([LT_LIB_M],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nLIBM=\ncase $host in\n*-*-beos* | *-*-cegcc* | *-*-cygwin* | *-*-haiku* | *-*-pw32* | *-*-darwin*)\n  # These system don't have libm, or don't need it\n  ;;\n*-ncr-sysv4.3*)\n  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=-lmw)\n  AC_CHECK_LIB(m, cos, LIBM=\"$LIBM -lm\")\n  ;;\n*)\n  AC_CHECK_LIB(m, cos, LIBM=-lm)\n  ;;\nesac\nAC_SUBST([LIBM])\n])# LT_LIB_M\n\n# Old name:\nAU_ALIAS([AC_CHECK_LIBM], [LT_LIB_M])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_CHECK_LIBM], [])\n\n\n# _LT_COMPILER_NO_RTTI([TAGNAME])\n# -------------------------------\nm4_defun([_LT_COMPILER_NO_RTTI],\n[m4_require([_LT_TAG_COMPILER])dnl\n\n_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n\nif test yes = \"$GCC\"; then\n  case $cc_basename in\n  nvcc*)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -Xcompiler -fno-builtin' ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin' ;;\n  esac\n\n  _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions],\n    lt_cv_prog_compiler_rtti_exceptions,\n    [-fno-rtti -fno-exceptions], [],\n    [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\"$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) -fno-rtti -fno-exceptions\"])\nfi\n_LT_TAGDECL([no_builtin_flag], [lt_prog_compiler_no_builtin_flag], [1],\n\t[Compiler flag to turn off builtin functions])\n])# _LT_COMPILER_NO_RTTI\n\n\n# _LT_CMD_GLOBAL_SYMBOLS\n# ----------------------\nm4_defun([_LT_CMD_GLOBAL_SYMBOLS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_PROG_AWK])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_TAG_COMPILER])dnl\n\n# Check for command to grab the raw symbol name followed by C symbol from nm.\nAC_MSG_CHECKING([command to parse $NM output from $compiler object])\nAC_CACHE_VAL([lt_cv_sys_global_symbol_pipe],\n[\n# These are sane defaults that work on at least a few old systems.\n# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n\n# Character class describing NM global symbol codes.\nsymcode='[[BCDEGRST]]'\n\n# Regexp to match symbols that can be accessed directly from C.\nsympat='\\([[_A-Za-z]][[_A-Za-z0-9]]*\\)'\n\n# Define system-specific variables.\ncase $host_os in\naix*)\n  symcode='[[BCDT]]'\n  ;;\ncygwin* | mingw* | pw32* | cegcc*)\n  symcode='[[ABCDGISTW]]'\n  ;;\nhpux*)\n  if test ia64 = \"$host_cpu\"; then\n    symcode='[[ABCDEGRST]]'\n  fi\n  ;;\nirix* | nonstopux*)\n  symcode='[[BCDEGRST]]'\n  ;;\nosf*)\n  symcode='[[BCDEGQRST]]'\n  ;;\nsolaris*)\n  symcode='[[BDRT]]'\n  ;;\nsco3.2v5*)\n  symcode='[[DT]]'\n  ;;\nsysv4.2uw2*)\n  symcode='[[DT]]'\n  ;;\nsysv5* | sco5v6* | unixware* | OpenUNIX*)\n  symcode='[[ABDT]]'\n  ;;\nsysv4)\n  symcode='[[DFNSTU]]'\n  ;;\nesac\n\n# If we're using GNU nm, then use its standard symbol codes.\ncase `$NM -V 2>&1` in\n*GNU* | *'with BFD'*)\n  symcode='[[ABCDGIRSTW]]' ;;\nesac\n\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  # Gets list of data symbols to import.\n  lt_cv_sys_global_symbol_to_import=\"sed -n -e 's/^I .* \\(.*\\)$/\\1/p'\"\n  # Adjust the below global symbol transforms to fixup imported variables.\n  lt_cdecl_hook=\" -e 's/^I .* \\(.*\\)$/extern __declspec(dllimport) char \\1;/p'\"\n  lt_c_name_hook=\" -e 's/^I .* \\(.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\"\n  lt_c_name_lib_hook=\"\\\n  -e 's/^I .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\\\n  -e 's/^I .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) 0},/p'\"\nelse\n  # Disable hooks by default.\n  lt_cv_sys_global_symbol_to_import=\n  lt_cdecl_hook=\n  lt_c_name_hook=\n  lt_c_name_lib_hook=\nfi\n\n# Transform an extracted symbol line into a proper C declaration.\n# Some systems (esp. on ia64) link data and code symbols differently,\n# so use this general approach.\nlt_cv_sys_global_symbol_to_cdecl=\"sed -n\"\\\n$lt_cdecl_hook\\\n\" -e 's/^T .* \\(.*\\)$/extern int \\1();/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n\n# Transform an extracted symbol line into symbol name and symbol address\nlt_cv_sys_global_symbol_to_c_name_address=\"sed -n\"\\\n$lt_c_name_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\n\n# Transform an extracted symbol line into symbol name with lib prefix and\n# symbol address.\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix=\"sed -n\"\\\n$lt_c_name_lib_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) \\&\\1},/p'\"\n\n# Handle CRLF in mingw tool chain\nopt_cr=\ncase $build_os in\nmingw*)\n  opt_cr=`$ECHO 'x\\{0,1\\}' | tr x '\\015'` # option cr in regexp\n  ;;\nesac\n\n# Try without a prefix underscore, then with it.\nfor ac_symprfx in \"\" \"_\"; do\n\n  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.\n  symxfrm=\"\\\\1 $ac_symprfx\\\\2 \\\\2\"\n\n  # Write the raw and C identifiers.\n  if test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n    # Fake it for dumpbin and say T for any non-static function,\n    # D for any global variable and I for any imported variable.\n    # Also find C++ and __fastcall symbols from MSVC++,\n    # which start with @ or ?.\n    lt_cv_sys_global_symbol_pipe=\"$AWK ['\"\\\n\"     {last_section=section; section=\\$ 3};\"\\\n\"     /^COFF SYMBOL TABLE/{for(i in hide) delete hide[i]};\"\\\n\"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};\"\\\n\"     /^ *Symbol name *: /{split(\\$ 0,sn,\\\":\\\"); si=substr(sn[2],2)};\"\\\n\"     /^ *Type *: code/{print \\\"T\\\",si,substr(si,length(prfx))};\"\\\n\"     /^ *Type *: data/{print \\\"I\\\",si,substr(si,length(prfx))};\"\\\n\"     \\$ 0!~/External *\\|/{next};\"\\\n\"     / 0+ UNDEF /{next}; / UNDEF \\([^|]\\)*()/{next};\"\\\n\"     {if(hide[section]) next};\"\\\n\"     {f=\\\"D\\\"}; \\$ 0~/\\(\\).*\\|/{f=\\\"T\\\"};\"\\\n\"     {split(\\$ 0,a,/\\||\\r/); split(a[2],s)};\"\\\n\"     s[1]~/^[@?]/{print f,s[1],s[1]; next};\"\\\n\"     s[1]~prfx {split(s[1],t,\\\"@\\\"); print f,t[1],substr(t[1],length(prfx))}\"\\\n\"     ' prfx=^$ac_symprfx]\"\n  else\n    lt_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[[\t ]]\\($symcode$symcode*\\)[[\t ]][[\t ]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'\"\n  fi\n  lt_cv_sys_global_symbol_pipe=\"$lt_cv_sys_global_symbol_pipe | sed '/ __gnu_lto/d'\"\n\n  # Check to see that the pipe works correctly.\n  pipe_works=no\n\n  rm -f conftest*\n  cat > conftest.$ac_ext <<_LT_EOF\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nchar nm_test_var;\nvoid nm_test_func(void);\nvoid nm_test_func(void){}\n#ifdef __cplusplus\n}\n#endif\nint main(){nm_test_var='a';nm_test_func();return(0);}\n_LT_EOF\n\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| \"$lt_cv_sys_global_symbol_pipe\" \\> $nlist) && test -s \"$nlist\"; then\n      # Try sorting and uniquifying the output.\n      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n\tmv -f \"$nlist\"T \"$nlist\"\n      else\n\trm -f \"$nlist\"T\n      fi\n\n      # Make sure that we snagged all the symbols we need.\n      if $GREP ' nm_test_var$' \"$nlist\" >/dev/null; then\n\tif $GREP ' nm_test_func$' \"$nlist\" >/dev/null; then\n\t  cat <<_LT_EOF > conftest.$ac_ext\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT@&t@_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT@&t@_DLSYM_CONST\n#else\n# define LT@&t@_DLSYM_CONST const\n#endif\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n_LT_EOF\n\t  # Now generate the symbol file.\n\t  eval \"$lt_cv_sys_global_symbol_to_cdecl\"' < \"$nlist\" | $GREP -v main >> conftest.$ac_ext'\n\n\t  cat <<_LT_EOF >> conftest.$ac_ext\n\n/* The mapping between symbol names and symbols.  */\nLT@&t@_DLSYM_CONST struct {\n  const char *name;\n  void       *address;\n}\nlt__PROGRAM__LTX_preloaded_symbols[[]] =\n{\n  { \"@PROGRAM@\", (void *) 0 },\n_LT_EOF\n\t  $SED \"s/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/\" < \"$nlist\" | $GREP -v main >> conftest.$ac_ext\n\t  cat <<\\_LT_EOF >> conftest.$ac_ext\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt__PROGRAM__LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n_LT_EOF\n\t  # Now try linking the two files.\n\t  mv conftest.$ac_objext conftstm.$ac_objext\n\t  lt_globsym_save_LIBS=$LIBS\n\t  lt_globsym_save_CFLAGS=$CFLAGS\n\t  LIBS=conftstm.$ac_objext\n\t  CFLAGS=\"$CFLAGS$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\"\n\t  if AC_TRY_EVAL(ac_link) && test -s conftest$ac_exeext; then\n\t    pipe_works=yes\n\t  fi\n\t  LIBS=$lt_globsym_save_LIBS\n\t  CFLAGS=$lt_globsym_save_CFLAGS\n\telse\n\t  echo \"cannot find nm_test_func in $nlist\" >&AS_MESSAGE_LOG_FD\n\tfi\n      else\n\techo \"cannot find nm_test_var in $nlist\" >&AS_MESSAGE_LOG_FD\n      fi\n    else\n      echo \"cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"$progname: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.$ac_ext >&5\n  fi\n  rm -rf conftest* conftst*\n\n  # Do not use the global_symbol_pipe unless it works.\n  if test yes = \"$pipe_works\"; then\n    break\n  else\n    lt_cv_sys_global_symbol_pipe=\n  fi\ndone\n])\nif test -z \"$lt_cv_sys_global_symbol_pipe\"; then\n  lt_cv_sys_global_symbol_to_cdecl=\nfi\nif test -z \"$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl\"; then\n  AC_MSG_RESULT(failed)\nelse\n  AC_MSG_RESULT(ok)\nfi\n\n# Response file support.\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  nm_file_list_spec='@'\nelif $NM --help 2>/dev/null | grep '[[@]]FILE' >/dev/null; then\n  nm_file_list_spec='@'\nfi\n\n_LT_DECL([global_symbol_pipe], [lt_cv_sys_global_symbol_pipe], [1],\n    [Take the output of nm and produce a listing of raw symbols and C names])\n_LT_DECL([global_symbol_to_cdecl], [lt_cv_sys_global_symbol_to_cdecl], [1],\n    [Transform the output of nm in a proper C declaration])\n_LT_DECL([global_symbol_to_import], [lt_cv_sys_global_symbol_to_import], [1],\n    [Transform the output of nm into a list of symbols to manually relocate])\n_LT_DECL([global_symbol_to_c_name_address],\n    [lt_cv_sys_global_symbol_to_c_name_address], [1],\n    [Transform the output of nm in a C name address pair])\n_LT_DECL([global_symbol_to_c_name_address_lib_prefix],\n    [lt_cv_sys_global_symbol_to_c_name_address_lib_prefix], [1],\n    [Transform the output of nm in a C name address pair when lib prefix is needed])\n_LT_DECL([nm_interface], [lt_cv_nm_interface], [1],\n    [The name lister interface])\n_LT_DECL([], [nm_file_list_spec], [1],\n    [Specify filename containing input files for $NM])\n]) # _LT_CMD_GLOBAL_SYMBOLS\n\n\n# _LT_COMPILER_PIC([TAGNAME])\n# ---------------------------\nm4_defun([_LT_COMPILER_PIC],\n[m4_require([_LT_TAG_COMPILER])dnl\n_LT_TAGVAR(lt_prog_compiler_wl, $1)=\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n_LT_TAGVAR(lt_prog_compiler_static, $1)=\n\nm4_if([$1], [CXX], [\n  # C++ specific cases for pic, static, wl, etc.\n  if test yes = \"$GXX\"; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n    aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n    mingw* | cygwin* | os2* | pw32* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n    *djgpp*)\n      # DJGPP does not support shared libraries at all\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n      ;;\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n    *qnx* | *nto*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    case $host_os in\n      aix[[4-9]]*)\n\t# All AIX code is PIC.\n\tif test ia64 = \"$host_cpu\"; then\n\t  # AIX 5 now supports IA64 processor\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\telse\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n\tfi\n\t;;\n      chorus*)\n\tcase $cc_basename in\n\tcxch68*)\n\t  # Green Hills C++ Compiler\n\t  # _LT_TAGVAR(lt_prog_compiler_static, $1)=\"--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a\"\n\t  ;;\n\tesac\n\t;;\n      mingw* | cygwin* | os2* | pw32* | cegcc*)\n\t# This hack is so that the source file can tell whether it is being\n\t# built for inclusion in a dll (and should export symbols for example).\n\tm4_if([$1], [GCJ], [],\n\t  [_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n\t;;\n      dgux*)\n\tcase $cc_basename in\n\t  ec++*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  ghcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      freebsd* | dragonfly*)\n\t# FreeBSD uses GNU C++\n\t;;\n      hpux9* | hpux10* | hpux11*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n\t    if test ia64 != \"$host_cpu\"; then\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t    fi\n\t    ;;\n\t  aCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n\t    case $host_cpu in\n\t    hppa*64*|ia64*)\n\t      # +Z the default\n\t      ;;\n\t    *)\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t      ;;\n\t    esac\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      interix*)\n\t# This is c89, which is MS Visual C++ (no shared libs)\n\t# Anyone wants to do a port?\n\t;;\n      irix5* | irix6* | nonstopux*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    # CC pic flag -KPIC is the default.\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    # KAI C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    ;;\n\t  ecpc* )\n\t    # old Intel C++ for x86_64, which still supported -KPIC.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  icpc* )\n\t    # Intel C++, used to be incompatible with GCC.\n\t    # ICC 10 doesn't accept -KPIC any more.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  pgCC* | pgcpp*)\n\t    # Portland Group C++ compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  xlc* | xlC* | bgxl[[cC]]* | mpixl[[cC]]*)\n\t    # IBM XL 8.0, 9.0 on PPC and BlueGene\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n      lynxos*)\n\t;;\n      m88k*)\n\t;;\n      mvs*)\n\tcase $cc_basename in\n\t  cxx*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      netbsd* | netbsdelf*-gnu)\n\t;;\n      *qnx* | *nto*)\n        # QNX uses GNU C++, but need to define -shared option too, otherwise\n        # it will coredump.\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n        ;;\n      osf3* | osf4* | osf5*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    ;;\n\t  RCC*)\n\t    # Rational C++ 2.4.1\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  cxx*)\n\t    # Digital/Compaq C++\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      psos*)\n\t;;\n      solaris*)\n\tcase $cc_basename in\n\t  CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t    ;;\n\t  gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sunos4*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.x\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  lcc*)\n\t    # Lucid\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\tesac\n\t;;\n      tandem*)\n\tcase $cc_basename in\n\t  NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      vxworks*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n\t;;\n    esac\n  fi\n],\n[\n  if test yes = \"$GCC\"; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n      aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n\n    msdosdjgpp*)\n      # Just because we use GCC doesn't mean we suddenly get shared libraries\n      # on systems that don't support them.\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      enable_shared=no\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n\n    case $cc_basename in\n    nvcc*) # Cuda Compiler Driver 2.2\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Xlinker '\n      if test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"-Xcompiler $_LT_TAGVAR(lt_prog_compiler_pic, $1)\"\n      fi\n      ;;\n    esac\n  else\n    # PORTME Check for flag to pass linker flags through the system compiler.\n    case $host_os in\n    aix*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      else\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n      fi\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      case $cc_basename in\n      nagfor*)\n        # NAG Fortran compiler\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      esac\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n\n    hpux9* | hpux10* | hpux11*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t;;\n      esac\n      # Is there a better lt_prog_compiler_static that works with the bundled CC?\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC (with -KPIC) is the default.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n      case $cc_basename in\n      # old Intel for x86_64, which still supported -KPIC.\n      ecc*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # icc used to be incompatible with GCC.\n      # ICC 10 doesn't accept -KPIC any more.\n      icc* | ifort*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # Lahey Fortran 8.1.\n      lf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='--shared'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='--static'\n\t;;\n      nagfor*)\n\t# NAG Fortran compiler\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t;;\n      tcc*)\n\t# Fabrice Bellard et al's Tiny C Compiler\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t;;\n      pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)\n        # Portland Group compilers (*not* the Pentium gcc compiler,\n\t# which looks to be a dead project)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      ccc*)\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n        # All Alpha code is PIC.\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n        ;;\n      xl* | bgxl* | bgf* | mpixl*)\n\t# IBM XL C 8.0/Fortran 10.1, 11.1 on PPC and BlueGene\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t;;\n      *)\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ Ceres\\ Fortran* | *Sun*Fortran*\\ [[1-7]].* | *Sun*Fortran*\\ 8.[[0-3]]*)\n\t  # Sun Fortran 8.3 passes all unrecognized flags to the linker\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)=''\n\t  ;;\n\t*Sun\\ F* | *Sun*Fortran*)\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t  ;;\n\t*Sun\\ C*)\n\t  # Sun C 5.9\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  ;;\n        *Intel*\\ [[CF]]*Compiler*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t  ;;\n\t*Portland\\ Group*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  ;;\n\tesac\n\t;;\n      esac\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    osf3* | osf4* | osf5*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # All OSF/1 code is PIC.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    rdos*)\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      case $cc_basename in\n      f77* | f90* | f95* | sunf77* | sunf90* | sunf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld ';;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,';;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4 | sysv4.2uw2* | sysv4.3*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    unicos*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n    esac\n  fi\n])\ncase $host_os in\n  # For platforms that do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n    ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])\"\n    ;;\nesac\n\nAC_CACHE_CHECK([for $compiler option to produce PIC],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_prog_compiler_pic, $1)])\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n  _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, $1) works],\n    [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, $1)],\n    [$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])], [],\n    [case $_LT_TAGVAR(lt_prog_compiler_pic, $1) in\n     \"\" | \" \"*) ;;\n     *) _LT_TAGVAR(lt_prog_compiler_pic, $1)=\" $_LT_TAGVAR(lt_prog_compiler_pic, $1)\" ;;\n     esac],\n    [_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n     _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no])\nfi\n_LT_TAGDECL([pic_flag], [lt_prog_compiler_pic], [1],\n\t[Additional compiler flags for building library objects])\n\n_LT_TAGDECL([wl], [lt_prog_compiler_wl], [1],\n\t[How to pass a linker flag through the compiler])\n#\n# Check to make sure the static flag actually works.\n#\nwl=$_LT_TAGVAR(lt_prog_compiler_wl, $1) eval lt_tmp_static_flag=\\\"$_LT_TAGVAR(lt_prog_compiler_static, $1)\\\"\n_LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works],\n  _LT_TAGVAR(lt_cv_prog_compiler_static_works, $1),\n  $lt_tmp_static_flag,\n  [],\n  [_LT_TAGVAR(lt_prog_compiler_static, $1)=])\n_LT_TAGDECL([link_static_flag], [lt_prog_compiler_static], [1],\n\t[Compiler flag to prevent dynamic linking])\n])# _LT_COMPILER_PIC\n\n\n# _LT_LINKER_SHLIBS([TAGNAME])\n# ----------------------------\n# See if the linker supports building shared libraries.\nm4_defun([_LT_LINKER_SHLIBS],\n[AC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\nm4_if([$1], [CXX], [\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  case $host_os in\n  aix[[4-9]]*)\n    # If we're using GNU nm, then we don't want the \"-C\" option.\n    # -C means demangle to GNU nm, but means don't demangle to AIX nm.\n    # Without the \"-l\" option, or with the \"-B\" option, AIX nm treats\n    # weak defined symbols like other global defined symbols, whereas\n    # GNU nm marks them as \"W\".\n    # While the 'weak' keyword is ignored in the Export File, we need\n    # it in the Import File for the 'aix-soname' feature, so we have\n    # to replace the \"-B\" option with \"-P\" for AIX nm.\n    if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { if (\\$ 2 == \"W\") { print \\$ 3 \" weak\" } else { print \\$ 3 } } }'\\'' | sort -u > $export_symbols'\n    else\n      _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\\''s/B\\([[^B]]*\\)$/P\\1/'\\''` -PCpgl $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) && ([substr](\\$ 1,1,1) != \".\")) { if ((\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) { print \\$ 1 \" weak\" } else { print \\$ 1 } } }'\\'' | sort -u > $export_symbols'\n    fi\n    ;;\n  pw32*)\n    _LT_TAGVAR(export_symbols_cmds, $1)=$ltdll_cmds\n    ;;\n  cygwin* | mingw* | cegcc*)\n    case $cc_basename in\n    cl*)\n      _LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n      ;;\n    *)\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n      ;;\n    esac\n    ;;\n  linux* | k*bsd*-gnu | gnu*)\n    _LT_TAGVAR(link_all_deplibs, $1)=no\n    ;;\n  *)\n    _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n    ;;\n  esac\n], [\n  runpath_var=\n  _LT_TAGVAR(allow_undefined_flag, $1)=\n  _LT_TAGVAR(always_export_symbols, $1)=no\n  _LT_TAGVAR(archive_cmds, $1)=\n  _LT_TAGVAR(archive_expsym_cmds, $1)=\n  _LT_TAGVAR(compiler_needs_object, $1)=no\n  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n  _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(hardcode_automatic, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n  _LT_TAGVAR(hardcode_minus_L, $1)=no\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  _LT_TAGVAR(inherit_rpath, $1)=no\n  _LT_TAGVAR(link_all_deplibs, $1)=unknown\n  _LT_TAGVAR(module_cmds, $1)=\n  _LT_TAGVAR(module_expsym_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_new_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_expsyms_cmds, $1)=\n  _LT_TAGVAR(thread_safe_flag_spec, $1)=\n  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n  # include_expsyms should be a list of space-separated symbols to be *always*\n  # included in the symbol list\n  _LT_TAGVAR(include_expsyms, $1)=\n  # exclude_expsyms can be an extended regexp of symbols to exclude\n  # it will be wrapped by ' (' and ')$', so one must not match beginning or\n  # end of line.  Example: 'a|bc|.*d.*' will exclude the symbols 'a' and 'bc',\n  # as well as any symbol that contains 'd'.\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out\n  # platforms (ab)use it in PIC code, but their linkers get confused if\n  # the symbol is explicitly referenced.  Since portable code cannot\n  # rely on this symbol name, it's probably fine to never include it in\n  # preloaded symbol tables.\n  # Exclude shared library initialization/finalization symbols.\ndnl Note also adjust exclude_expsyms for C++ above.\n  extract_expsyms_cmds=\n\n  case $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    # FIXME: the MSVC++ port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++.\n    if test yes != \"$GCC\"; then\n      with_gnu_ld=no\n    fi\n    ;;\n  interix*)\n    # we just hope/assume this is gcc and not c89 (= MSVC++)\n    with_gnu_ld=yes\n    ;;\n  openbsd* | bitrig*)\n    with_gnu_ld=no\n    ;;\n  linux* | k*bsd*-gnu | gnu*)\n    _LT_TAGVAR(link_all_deplibs, $1)=no\n    ;;\n  esac\n\n  _LT_TAGVAR(ld_shlibs, $1)=yes\n\n  # On some targets, GNU ld is compatible enough with the native linker\n  # that we're better off using the native interface for both.\n  lt_use_gnu_ld_interface=no\n  if test yes = \"$with_gnu_ld\"; then\n    case $host_os in\n      aix*)\n\t# The AIX port of GNU ld has always aspired to compatibility\n\t# with the native linker.  However, as the warning in the GNU ld\n\t# block says, versions before 2.19.5* couldn't really create working\n\t# shared libraries, regardless of the interface used.\n\tcase `$LD -v 2>&1` in\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.19.5*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.[[2-9]]*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ [[3-9]]*) ;;\n\t  *)\n\t    lt_use_gnu_ld_interface=yes\n\t    ;;\n\tesac\n\t;;\n      *)\n\tlt_use_gnu_ld_interface=yes\n\t;;\n    esac\n  fi\n\n  if test yes = \"$lt_use_gnu_ld_interface\"; then\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    wlarc='$wl'\n\n    # Set some defaults for GNU ld with shared library support. These\n    # are reset later if shared libraries are not supported. Putting them\n    # here allows them to be overridden if necessary.\n    runpath_var=LD_RUN_PATH\n    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n    else\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n    supports_anon_versioning=no\n    case `$LD -v | $SED -e 's/([^)]\\+)\\s\\+//' 2>&1` in\n      *GNU\\ gold*) supports_anon_versioning=yes ;;\n      *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.10.*) ;; # catch versions < 2.11\n      *\\ 2.11.93.0.2\\ *) supports_anon_versioning=yes ;; # RH7.3 ...\n      *\\ 2.11.92.0.12\\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...\n      *\\ 2.11.*) ;; # other 2.11 versions\n      *) supports_anon_versioning=yes ;;\n    esac\n\n    # See if GNU ld supports shared libraries.\n    case $host_os in\n    aix[[3-9]]*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test ia64 != \"$host_cpu\"; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: the GNU linker, at least up to release 2.19, is reported\n*** to be unable to reliably create shared libraries on AIX.\n*** Therefore, libtool is disabling shared libraries support.  If you\n*** really care for shared libraries, you may want to install binutils\n*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.\n*** You will then need to restart the configuration process.\n\n_LT_EOF\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    beos*)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t# support --undefined.  This deserves some investigation.  FIXME\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n      # as there is no search path for DLLs.\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-all-symbols'\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=no\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n\n      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t# If the export-symbols file already is a .def file, use it as\n\t# is; otherwise, prepend EXPORTS...\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n          cp $export_symbols $output_objdir/$soname.def;\n        else\n          echo EXPORTS > $output_objdir/$soname.def;\n          cat $export_symbols >> $output_objdir/$soname.def;\n        fi~\n        $CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    haiku*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      shrext_cmds=.dll\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\temxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\tprefix_cmds=\"$SED\"~\n\tif test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t  prefix_cmds=\"$prefix_cmds -e 1d\";\n\tfi~\n\tprefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\tcat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      ;;\n\n    interix[[3-9]]*)\n      _LT_TAGVAR(hardcode_direct, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n      # Instead, shared libraries are loaded at an image base (0x10000000 by\n      # default) and relocated if they conflict, which is a slow very memory\n      # consuming and fragmenting process.  To avoid this, we pick a random,\n      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      ;;\n\n    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)\n      tmp_diet=no\n      if test linux-dietlibc = \"$host_os\"; then\n\tcase $cc_basename in\n\t  diet\\ *) tmp_diet=yes;;\t# linux-dietlibc with static linking (!diet-dyn)\n\tesac\n      fi\n      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \\\n\t && test no = \"$tmp_diet\"\n      then\n\ttmp_addflag=' $pic_flag'\n\ttmp_sharedflag='-shared'\n\tcase $cc_basename,$host_cpu in\n        pgcc*)\t\t\t\t# Portland Group C compiler\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag'\n\t  ;;\n\tpgf77* | pgf90* | pgf95* | pgfortran*)\n\t\t\t\t\t# Portland Group f77 and f90 compilers\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag -Mnomain' ;;\n\tecc*,ia64* | icc*,ia64*)\t# Intel C compiler on ia64\n\t  tmp_addflag=' -i_dynamic' ;;\n\tefc*,ia64* | ifort*,ia64*)\t# Intel Fortran compiler on ia64\n\t  tmp_addflag=' -i_dynamic -nofor_main' ;;\n\tifc* | ifort*)\t\t\t# Intel Fortran compiler\n\t  tmp_addflag=' -nofor_main' ;;\n\tlf95*)\t\t\t\t# Lahey Fortran 8.1\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n\t  tmp_sharedflag='--shared' ;;\n        nagfor*)                        # NAGFOR 5.3\n          tmp_sharedflag='-Wl,-shared' ;;\n\txl[[cC]]* | bgxl[[cC]]* | mpixl[[cC]]*) # IBM XL C 8.0 on PPC (deal with xlf below)\n\t  tmp_sharedflag='-qmkshrobj'\n\t  tmp_addflag= ;;\n\tnvcc*)\t# Cuda Compiler Driver 2.2\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  ;;\n\tesac\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ C*)\t\t\t# Sun C 5.9\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  tmp_sharedflag='-G' ;;\n\t*Sun\\ F*)\t\t\t# Sun Fortran 8.3\n\t  tmp_sharedflag='-G' ;;\n\tesac\n\t_LT_TAGVAR(archive_cmds, $1)='$CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\n        if test yes = \"$supports_anon_versioning\"; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n            cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n            echo \"local: *; };\" >> $output_objdir/$libname.ver~\n            $CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n        fi\n\n\tcase $cc_basename in\n\ttcc*)\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='-rdynamic'\n\t  ;;\n\txlf* | bgf* | bgxlf* | mpixlf*)\n\t  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='--whole-archive$convenience --no-whole-archive'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'\n\t  if test yes = \"$supports_anon_versioning\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n              cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n              echo \"local: *; };\" >> $output_objdir/$libname.ver~\n              $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'\n\t  fi\n\t  ;;\n\tesac\n      else\n        _LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    netbsd* | netbsdelf*-gnu)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'\n\twlarc=\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      fi\n      ;;\n\n    solaris*)\n      if $LD -v 2>&1 | $GREP 'BFD 2\\.8' > /dev/null; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: The releases 2.8.* of the GNU linker cannot reliably\n*** create shared libraries on Solaris systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.9.1 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)\n      case `$LD -v 2>&1` in\n        *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.1[[0-5]].*)\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 cannot\n*** reliably create shared libraries on SCO systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n\t;;\n\t*)\n\t  # For security reasons, it is highly recommended that you always\n\t  # use absolute paths for naming shared libraries, and exclude the\n\t  # DT_RUNPATH tag from executables and libraries.  But doing so\n\t  # requires that you compile everything twice, which is a pain.\n\t  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t;;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      wlarc=\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n\n    if test no = \"$_LT_TAGVAR(ld_shlibs, $1)\"; then\n      runpath_var=\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    # PORTME fill in a description of your system's linker (not GNU ld)\n    case $host_os in\n    aix3*)\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      if test yes = \"$GCC\" && test -z \"$lt_prog_compiler_static\"; then\n\t# Neither direct hardcoding nor static linking is supported with a\n\t# broken collect2.\n\t_LT_TAGVAR(hardcode_direct, $1)=unsupported\n      fi\n      ;;\n\n    aix[[4-9]]*)\n      if test ia64 = \"$host_cpu\"; then\n\t# On IA64, the linker does run time linking by default, so we don't\n\t# have to do anything special.\n\taix_use_runtimelinking=no\n\texp_sym_flag='-Bexport'\n\tno_entry_flag=\n      else\n\t# If we're using GNU nm, then we don't want the \"-C\" option.\n\t# -C means demangle to GNU nm, but means don't demangle to AIX nm.\n\t# Without the \"-l\" option, or with the \"-B\" option, AIX nm treats\n\t# weak defined symbols like other global defined symbols, whereas\n\t# GNU nm marks them as \"W\".\n\t# While the 'weak' keyword is ignored in the Export File, we need\n\t# it in the Import File for the 'aix-soname' feature, so we have\n\t# to replace the \"-B\" option with \"-P\" for AIX nm.\n\tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { if (\\$ 2 == \"W\") { print \\$ 3 \" weak\" } else { print \\$ 3 } } }'\\'' | sort -u > $export_symbols'\n\telse\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\\''s/B\\([[^B]]*\\)$/P\\1/'\\''` -PCpgl $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) && ([substr](\\$ 1,1,1) != \".\")) { if ((\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) { print \\$ 1 \" weak\" } else { print \\$ 1 } } }'\\'' | sort -u > $export_symbols'\n\tfi\n\taix_use_runtimelinking=no\n\n\t# Test if we are trying to use run time linking or normal\n\t# AIX style linking. If -brtl is somewhere in LDFLAGS, we\n\t# have runtime linking enabled, and use it for executables.\n\t# For shared libraries, we enable/disable runtime linking\n\t# depending on the kind of the shared library created -\n\t# when \"with_aix_soname,aix_use_runtimelinking\" is:\n\t# \"aix,no\"   lib.a(lib.so.V) shared, rtl:no,  for executables\n\t# \"aix,yes\"  lib.so          shared, rtl:yes, for executables\n\t#            lib.a           static archive\n\t# \"both,no\"  lib.so.V(shr.o) shared, rtl:yes\n\t#            lib.a(lib.so.V) shared, rtl:no,  for executables\n\t# \"both,yes\" lib.so.V(shr.o) shared, rtl:yes, for executables\n\t#            lib.a(lib.so.V) shared, rtl:no\n\t# \"svr4,*\"   lib.so.V(shr.o) shared, rtl:yes, for executables\n\t#            lib.a           static archive\n\tcase $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t  for ld_flag in $LDFLAGS; do\n\t  if (test x-brtl = \"x$ld_flag\" || test x-Wl,-brtl = \"x$ld_flag\"); then\n\t    aix_use_runtimelinking=yes\n\t    break\n\t  fi\n\t  done\n\t  if test svr4,no = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t    # With aix-soname=svr4, we create the lib.so.V shared archives only,\n\t    # so we don't have lib.a shared libs to link our executables.\n\t    # We have to force runtime linking in this case.\n\t    aix_use_runtimelinking=yes\n\t    LDFLAGS=\"$LDFLAGS -Wl,-brtl\"\n\t  fi\n\t  ;;\n\tesac\n\n\texp_sym_flag='-bexport'\n\tno_entry_flag='-bnoentry'\n      fi\n\n      # When large executables or shared objects are built, AIX ld can\n      # have problems creating the table of contents.  If linking a library\n      # or program results in \"error TOC overflow\" add -mminimal-toc to\n      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n      _LT_TAGVAR(archive_cmds, $1)=''\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(file_list_spec, $1)='$wl-f,'\n      case $with_aix_soname,$aix_use_runtimelinking in\n      aix,*) ;; # traditional, no import file\n      svr4,* | *,yes) # use import file\n\t# The Import File defines what to hardcode.\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n\t;;\n      esac\n\n      if test yes = \"$GCC\"; then\n\tcase $host_os in aix4.[[012]]|aix4.[[012]].*)\n\t# We only want to do this on AIX 4.2 and lower, the check\n\t# below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t   strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t  # We have reworked collect2\n\t  :\n\t  else\n\t  # We have old collect2\n\t  _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t  # It fails to find uninstalled libraries when the uninstalled\n\t  # path is not listed in the libpath.  Setting hardcode_minus_L\n\t  # to unsupported forces relinking\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n\t  ;;\n\tesac\n\tshared_flag='-shared'\n\tif test yes = \"$aix_use_runtimelinking\"; then\n\t  shared_flag=\"$shared_flag \"'$wl-G'\n\tfi\n\t# Need to ensure runtime linking is disabled for the traditional\n\t# shared library, or the linker may eventually find shared libraries\n\t# /with/ Import File - we do not want to mix them.\n\tshared_flag_aix='-shared'\n\tshared_flag_svr4='-shared $wl-G'\n      else\n\t# not using gcc\n\tif test ia64 = \"$host_cpu\"; then\n\t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t# chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n\telse\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag='$wl-G'\n\t  else\n\t    shared_flag='$wl-bM:SRE'\n\t  fi\n\t  shared_flag_aix='$wl-bM:SRE'\n\t  shared_flag_svr4='$wl-G'\n\tfi\n      fi\n\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-bexpall'\n      # It seems that -bexpall does not export symbols beginning with\n      # underscore (_), so it is better to generate a list of symbols to export.\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      if test aix,yes = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t# Warning - without using the other runtime loading flags (-brtl),\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n        # Determine the default libpath from the value encoded in an\n        # empty executable.\n        _LT_SYS_MODULE_PATH_AIX([$1])\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n      else\n\tif test ia64 = \"$host_cpu\"; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $libdir:/usr/lib:/lib'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n\telse\n\t # Determine the default libpath from the value encoded in an\n\t # empty executable.\n\t _LT_SYS_MODULE_PATH_AIX([$1])\n\t _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t  # Warning - without using the other run time loading flags,\n\t  # -berok will link without error, but may produce a broken library.\n\t  _LT_TAGVAR(no_undefined_flag, $1)=' $wl-bernotok'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-berok'\n\t  if test yes = \"$with_gnu_ld\"; then\n\t    # We only use this code for GNU lds that support --whole-archive.\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t  else\n\t    # Exported symbols can be pulled into shared objects from archives\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t  fi\n\t  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'\n\t  # -brtl affects multiple linker settings, -berok does not and is overridden later\n\t  compiler_flags_filtered='`func_echo_all \"$compiler_flags \" | $SED -e \"s%-brtl\\\\([[, ]]\\\\)%-berok\\\\1%g\"`'\n\t  if test svr4 != \"$with_aix_soname\"; then\n\t    # This is similar to how AIX traditionally builds its shared libraries.\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'\n\t  fi\n\t  if test aix != \"$with_aix_soname\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all \"#! $soname($shared_archive_member_spec.o)\"; if test shr_64 = \"$shared_archive_member_spec\"; then func_echo_all \"# 64\"; else func_echo_all \"# 32\"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'\n\t  else\n\t    # used by -dlpreopen to get the symbols\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'\n\t  fi\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$RM -r $output_objdir/$realname.d'\n\tfi\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    bsdi[[45]]*)\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      case $cc_basename in\n      cl*)\n\t# Native MSVC\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t_LT_TAGVAR(always_export_symbols, $1)=yes\n\t_LT_TAGVAR(file_list_spec, $1)='@'\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n            cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n            echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n          else\n            $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n          fi~\n          $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n          linknames='\n\t# The linker will not automatically build a static lib if we build a DLL.\n\t# _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t_LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n\t_LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1,DATA/'\\'' | $SED -e '\\''/^[[AITW]][[ ]]/s/.*[[ ]]//'\\'' | sort | uniq > $export_symbols'\n\t# Don't use ranlib\n\t_LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t_LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n          lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n          case $lt_outputfile in\n            *.exe|*.EXE) ;;\n            *)\n              lt_outputfile=$lt_outputfile.exe\n              lt_tool_outputfile=$lt_tool_outputfile.exe\n              ;;\n          esac~\n          if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n            $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n            $RM \"$lt_outputfile.manifest\";\n          fi'\n\t;;\n      *)\n\t# Assume MSVC wrapper\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `func_echo_all \"$deplibs\" | $SED '\\''s/ -lc$//'\\''` -link -dll~linknames='\n\t# The linker will automatically build a .lib file if we build a DLL.\n\t_LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t# FIXME: Should let the user specify the lib program.\n\t_LT_TAGVAR(old_archive_cmds, $1)='lib -OUT:$oldlib$oldobjs$old_deplibs'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      _LT_DARWIN_LINKER_FEATURES($1)\n      ;;\n\n    dgux*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n    # support.  Future versions do this automatically, but an explicit c++rt0.o\n    # does not break anything, and helps significantly (at the cost of a little\n    # extra space).\n    freebsd2.2*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n    freebsd2.*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n    freebsd* | dragonfly*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    hpux9*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n      ;;\n\n    hpux10*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t# hardcode_minus_L: Not really in the search PATH,\n\t# but as the default location of the library.\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n      fi\n      ;;\n\n    hpux11*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      else\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\tm4_if($1, [], [\n\t  # Older versions of the 11.00 compiler do not understand -b yet\n\t  # (HP92453-01 A.11.01.20 doesn't, HP92453-01 B.11.X.35175-35176.GP does)\n\t  _LT_LINKER_OPTION([if $CC understands -b],\n\t    _LT_TAGVAR(lt_cv_prog_compiler__b, $1), [-b],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])],\n\t  [_LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'])\n\t  ;;\n\tesac\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\tcase $host_cpu in\n\thppa*64*|ia64*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  ;;\n\tesac\n      fi\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t# Try to use the -exported_symbol ld option, if it does not\n\t# work, assume that -exports_file does not work either and\n\t# implicitly export all symbols.\n\t# This should be the same for all languages, so no per-tag cache variable.\n\tAC_CACHE_CHECK([whether the $host_os linker accepts -exported_symbol],\n\t  [lt_cv_irix_exported_symbol],\n\t  [save_LDFLAGS=$LDFLAGS\n\t   LDFLAGS=\"$LDFLAGS -shared $wl-exported_symbol ${wl}foo $wl-update_registry $wl/dev/null\"\n\t   AC_LINK_IFELSE(\n\t     [AC_LANG_SOURCE(\n\t        [AC_LANG_CASE([C], [[int foo (void) { return 0; }]],\n\t\t\t      [C++], [[int foo (void) { return 0; }]],\n\t\t\t      [Fortran 77], [[\n      subroutine foo\n      end]],\n\t\t\t      [Fortran], [[\n      subroutine foo\n      end]])])],\n\t      [lt_cv_irix_exported_symbol=yes],\n\t      [lt_cv_irix_exported_symbol=no])\n           LDFLAGS=$save_LDFLAGS])\n\tif test yes = \"$lt_cv_irix_exported_symbol\"; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations $wl-exports_file $wl$export_symbols -o $lib'\n\tfi\n\t_LT_TAGVAR(link_all_deplibs, $1)=no\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -exports_file $export_symbols -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(inherit_rpath, $1)=yes\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    linux*)\n      case $cc_basename in\n      tcc*)\n\t# Fabrice Bellard et al's Tiny C Compiler\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t;;\n      esac\n      ;;\n\n    netbsd* | netbsdelf*-gnu)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *nto* | *qnx*)\n      ;;\n\n    openbsd* | bitrig*)\n      if test -f /usr/libexec/ld.so; then\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\tif test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags $wl-retain-symbols-file,$export_symbols'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\telse\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\tfi\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      shrext_cmds=.dll\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\temxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\tprefix_cmds=\"$SED\"~\n\tif test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t  prefix_cmds=\"$prefix_cmds -e 1d\";\n\tfi~\n\tprefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\tcat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      ;;\n\n    osf3*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    osf4* | osf5*)\t# as osf3* with the addition of -msym flag\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $pic_flag $libobjs $deplibs $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done; printf \"%s\\\\n\" \"-hidden\">> $lib.exp~\n          $CC -shared$allow_undefined_flag $wl-input $wl$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~$RM $lib.exp'\n\n\t# Both c and cxx compiler support -rpath directly\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(no_undefined_flag, $1)=' -z defs'\n      if test yes = \"$GCC\"; then\n\twlarc='$wl'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl-z ${wl}text $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n          $CC -shared $pic_flag $wl-z ${wl}text $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n      else\n\tcase `$CC -V 2>&1` in\n\t*\"Compilers 5.0\"*)\n\t  wlarc=''\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $LD -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'\n\t  ;;\n\t*)\n\t  wlarc='$wl'\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $CC -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n\t  ;;\n\tesac\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      case $host_os in\n      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n      *)\n\t# The compiler driver will combine and reorder linker options,\n\t# but understands '-z linker_flag'.  GCC discards it without '$wl',\n\t# but is careful enough not to reorder.\n\t# Supported since Solaris 2.6 (maybe 2.5.1?)\n\tif test yes = \"$GCC\"; then\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\telse\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\tfi\n\t;;\n      esac\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    sunos4*)\n      if test sequent = \"$host_vendor\"; then\n\t# Use $CC to link under sequent, because it throws in some extra .o\n\t# files that make .init and .fini sections work.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h $soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4)\n      case $host_vendor in\n\tsni)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes # is this really true???\n\t;;\n\tsiemens)\n\t  ## LD is ld it makes a PLAMLIB\n\t  ## CC just makes a GrossModule.\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(reload_cmds, $1)='$CC -r -o $output$reload_objs'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n        ;;\n\tmotorola)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no #Motorola manual says yes, but my tests say they lie\n\t;;\n      esac\n      runpath_var='LD_RUN_PATH'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4.3*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='-Bexport'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\trunpath_var=LD_RUN_PATH\n\thardcode_runpath_var=yes\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n      fi\n      ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6*)\n      # Note: We CANNOT use -z defs as we might desire, because we do not\n      # link with -lc, and that would cause any symbols used from libc to\n      # always be unresolved, which means just about no library would\n      # ever link correctly.  If we're not using GNU ld we use -z text\n      # though, which does catch some bad symbols but isn't as heavy-handed\n      # as -z defs.\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(allow_undefined_flag, $1)='$wl-z,nodefs'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R,$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Bexport'\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      _LT_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    esac\n\n    if test sni = \"$host_vendor\"; then\n      case $host in\n      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Blargedynsym'\n\t;;\n      esac\n    fi\n  fi\n])\nAC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\ntest no = \"$_LT_TAGVAR(ld_shlibs, $1)\" && can_build_shared=no\n\n_LT_TAGVAR(with_gnu_ld, $1)=$with_gnu_ld\n\n_LT_DECL([], [libext], [0], [Old archive suffix (normally \"a\")])dnl\n_LT_DECL([], [shrext_cmds], [1], [Shared library suffix (normally \".so\")])dnl\n_LT_DECL([], [extract_expsyms_cmds], [2],\n    [The commands to extract the exported symbol list from a shared archive])\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$_LT_TAGVAR(archive_cmds_need_lc, $1)\" in\nx|xyes)\n  # Assume -lc should be added\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\n  if test yes,yes = \"$GCC,$enable_shared\"; then\n    case $_LT_TAGVAR(archive_cmds, $1) in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      AC_CACHE_CHECK([whether -lc should be explicitly linked in],\n\t[lt_cv_]_LT_TAGVAR(archive_cmds_need_lc, $1),\n\t[$RM conftest*\n\techo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n\tif AC_TRY_EVAL(ac_compile) 2>conftest.err; then\n\t  soname=conftest\n\t  lib=conftest\n\t  libobjs=conftest.$ac_objext\n\t  deplibs=\n\t  wl=$_LT_TAGVAR(lt_prog_compiler_wl, $1)\n\t  pic_flag=$_LT_TAGVAR(lt_prog_compiler_pic, $1)\n\t  compiler_flags=-v\n\t  linker_flags=-v\n\t  verstring=\n\t  output_objdir=.\n\t  libname=conftest\n\t  lt_save_allow_undefined_flag=$_LT_TAGVAR(allow_undefined_flag, $1)\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\n\t  if AC_TRY_EVAL(_LT_TAGVAR(archive_cmds, $1) 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1)\n\t  then\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t  else\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  fi\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=$lt_save_allow_undefined_flag\n\telse\n\t  cat conftest.err 1>&5\n\tfi\n\t$RM conftest*\n\t])\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=$lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)\n      ;;\n    esac\n  fi\n  ;;\nesac\n\n_LT_TAGDECL([build_libtool_need_lc], [archive_cmds_need_lc], [0],\n    [Whether or not to add -lc for building shared libraries])\n_LT_TAGDECL([allow_libtool_libs_with_static_runtimes],\n    [enable_shared_with_static_runtimes], [0],\n    [Whether or not to disallow shared libs when runtime libs are static])\n_LT_TAGDECL([], [export_dynamic_flag_spec], [1],\n    [Compiler flag to allow reflexive dlopens])\n_LT_TAGDECL([], [whole_archive_flag_spec], [1],\n    [Compiler flag to generate shared objects directly from archives])\n_LT_TAGDECL([], [compiler_needs_object], [1],\n    [Whether the compiler copes with passing no objects directly])\n_LT_TAGDECL([], [old_archive_from_new_cmds], [2],\n    [Create an old-style archive from a shared archive])\n_LT_TAGDECL([], [old_archive_from_expsyms_cmds], [2],\n    [Create a temporary old-style archive to link instead of a shared archive])\n_LT_TAGDECL([], [archive_cmds], [2], [Commands used to build a shared archive])\n_LT_TAGDECL([], [archive_expsym_cmds], [2])\n_LT_TAGDECL([], [module_cmds], [2],\n    [Commands used to build a loadable module if different from building\n    a shared archive.])\n_LT_TAGDECL([], [module_expsym_cmds], [2])\n_LT_TAGDECL([], [with_gnu_ld], [1],\n    [Whether we are building with GNU ld or not])\n_LT_TAGDECL([], [allow_undefined_flag], [1],\n    [Flag that allows shared libraries with undefined symbols to be built])\n_LT_TAGDECL([], [no_undefined_flag], [1],\n    [Flag that enforces no undefined symbols])\n_LT_TAGDECL([], [hardcode_libdir_flag_spec], [1],\n    [Flag to hardcode $libdir into a binary during linking.\n    This must work even if $libdir does not exist])\n_LT_TAGDECL([], [hardcode_libdir_separator], [1],\n    [Whether we need a single \"-rpath\" flag with a separated argument])\n_LT_TAGDECL([], [hardcode_direct], [0],\n    [Set to \"yes\" if using DIR/libNAME$shared_ext during linking hardcodes\n    DIR into the resulting binary])\n_LT_TAGDECL([], [hardcode_direct_absolute], [0],\n    [Set to \"yes\" if using DIR/libNAME$shared_ext during linking hardcodes\n    DIR into the resulting binary and the resulting library dependency is\n    \"absolute\", i.e impossible to change by setting $shlibpath_var if the\n    library is relocated])\n_LT_TAGDECL([], [hardcode_minus_L], [0],\n    [Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_shlibpath_var], [0],\n    [Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_automatic], [0],\n    [Set to \"yes\" if building a shared library automatically hardcodes DIR\n    into the library and all subsequent libraries and executables linked\n    against it])\n_LT_TAGDECL([], [inherit_rpath], [0],\n    [Set to yes if linker adds runtime paths of dependent libraries\n    to runtime path list])\n_LT_TAGDECL([], [link_all_deplibs], [0],\n    [Whether libtool must link a program against all its dependency libraries])\n_LT_TAGDECL([], [always_export_symbols], [0],\n    [Set to \"yes\" if exported symbols are required])\n_LT_TAGDECL([], [export_symbols_cmds], [2],\n    [The commands to list exported symbols])\n_LT_TAGDECL([], [exclude_expsyms], [1],\n    [Symbols that should not be listed in the preloaded symbols])\n_LT_TAGDECL([], [include_expsyms], [1],\n    [Symbols that must always be exported])\n_LT_TAGDECL([], [prelink_cmds], [2],\n    [Commands necessary for linking programs (against libraries) with templates])\n_LT_TAGDECL([], [postlink_cmds], [2],\n    [Commands necessary for finishing linking programs])\n_LT_TAGDECL([], [file_list_spec], [1],\n    [Specify filename containing input files])\ndnl FIXME: Not yet implemented\ndnl _LT_TAGDECL([], [thread_safe_flag_spec], [1],\ndnl    [Compiler flag to generate thread safe objects])\n])# _LT_LINKER_SHLIBS\n\n\n# _LT_LANG_C_CONFIG([TAG])\n# ------------------------\n# Ensure that the configuration variables for a C compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_C_CONFIG],\n[m4_require([_LT_DECL_EGREP])dnl\nlt_save_CC=$CC\nAC_LANG_PUSH(C)\n\n# Source file extension for C test sources.\nac_ext=c\n\n# Object file extension for compiled C test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(){return(0);}'\n\n_LT_TAG_COMPILER\n# Save the default compiler, since it gets overwritten when the other\n# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.\ncompiler_DEFAULT=$CC\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_SYS_DYNAMIC_LINKER($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n  LT_SYS_DLOPEN_SELF\n  _LT_CMD_STRIPLIB\n\n  # Report what library types will actually be built\n  AC_MSG_CHECKING([if libtool supports shared libraries])\n  AC_MSG_RESULT([$can_build_shared])\n\n  AC_MSG_CHECKING([whether to build shared libraries])\n  test no = \"$can_build_shared\" && enable_shared=no\n\n  # On AIX, shared libraries and static libraries use the same namespace, and\n  # are all built from PIC.\n  case $host_os in\n  aix3*)\n    test yes = \"$enable_shared\" && enable_static=no\n    if test -n \"$RANLIB\"; then\n      archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n      postinstall_cmds='$RANLIB $lib'\n    fi\n    ;;\n\n  aix[[4-9]]*)\n    if test ia64 != \"$host_cpu\"; then\n      case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n      yes,aix,yes) ;;\t\t\t# shared object as lib.so file only\n      yes,svr4,*) ;;\t\t\t# shared object as lib.so archive member only\n      yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n      esac\n    fi\n    ;;\n  esac\n  AC_MSG_RESULT([$enable_shared])\n\n  AC_MSG_CHECKING([whether to build static libraries])\n  # Make sure either enable_shared or enable_static is yes.\n  test yes = \"$enable_shared\" || enable_static=yes\n  AC_MSG_RESULT([$enable_static])\n\n  _LT_CONFIG($1)\nfi\nAC_LANG_POP\nCC=$lt_save_CC\n])# _LT_LANG_C_CONFIG\n\n\n# _LT_LANG_CXX_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a C++ compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_CXX_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nif test -n \"$CXX\" && ( test no != \"$CXX\" &&\n    ( (test g++ = \"$CXX\" && `g++ -v >/dev/null 2>&1` ) ||\n    (test g++ != \"$CXX\"))); then\n  AC_PROG_CXXCPP\nelse\n  _lt_caught_CXX_error=yes\nfi\n\nAC_LANG_PUSH(C++)\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(compiler_needs_object, $1)=no\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for C++ test sources.\nac_ext=cpp\n\n# Object file extension for compiled C++ test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the CXX compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_caught_CXX_error\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"int some_variable = 0;\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code='int main(int, char *[[]]) { return(0); }'\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_CFLAGS=$CFLAGS\n  lt_save_LD=$LD\n  lt_save_GCC=$GCC\n  GCC=$GXX\n  lt_save_with_gnu_ld=$with_gnu_ld\n  lt_save_path_LD=$lt_cv_path_LD\n  if test -n \"${lt_cv_prog_gnu_ldcxx+set}\"; then\n    lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx\n  else\n    $as_unset lt_cv_prog_gnu_ld\n  fi\n  if test -n \"${lt_cv_path_LDCXX+set}\"; then\n    lt_cv_path_LD=$lt_cv_path_LDCXX\n  else\n    $as_unset lt_cv_path_LD\n  fi\n  test -z \"${LDCXX+set}\" || LD=$LDCXX\n  CC=${CXX-\"c++\"}\n  CFLAGS=$CXXFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    # We don't want -fno-exception when compiling C++ code, so set the\n    # no_builtin_flag separately\n    if test yes = \"$GXX\"; then\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\n    else\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n    fi\n\n    if test yes = \"$GXX\"; then\n      # Set up default GNU C++ configuration\n\n      LT_PATH_LD\n\n      # Check if GNU C++ uses GNU ld as the underlying linker, since the\n      # archiving commands below assume that GNU ld is being used.\n      if test yes = \"$with_gnu_ld\"; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\n        # If archive_cmds runs LD, not CC, wlarc should be empty\n        # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to\n        #     investigate it a little bit more. (MM)\n        wlarc='$wl'\n\n        # ancient GNU ld didn't support --whole-archive et. al.\n        if eval \"`$CC -print-prog-name=ld` --help 2>&1\" |\n\t  $GREP 'no-whole-archive' > /dev/null; then\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n        else\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=\n        fi\n      else\n        with_gnu_ld=no\n        wlarc=\n\n        # A generic and very simple default shared library creation\n        # command for GNU C++ for the case where it uses the native\n        # linker, instead of GNU ld.  If possible, this setting should\n        # overridden to take advantage of the native linker features on\n        # the platform it is being used on.\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n      fi\n\n      # Commands to make compiler produce verbose output that lists\n      # what \"hidden\" libraries, object files and flags are used when\n      # linking a shared library.\n      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n    else\n      GXX=no\n      with_gnu_ld=no\n      wlarc=\n    fi\n\n    # PORTME: fill in a description of your system's C++ link characteristics\n    AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\n    _LT_TAGVAR(ld_shlibs, $1)=yes\n    case $host_os in\n      aix3*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n      aix[[4-9]]*)\n        if test ia64 = \"$host_cpu\"; then\n          # On IA64, the linker does run time linking by default, so we don't\n          # have to do anything special.\n          aix_use_runtimelinking=no\n          exp_sym_flag='-Bexport'\n          no_entry_flag=\n        else\n          aix_use_runtimelinking=no\n\n          # Test if we are trying to use run time linking or normal\n          # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n          # have runtime linking enabled, and use it for executables.\n          # For shared libraries, we enable/disable runtime linking\n          # depending on the kind of the shared library created -\n          # when \"with_aix_soname,aix_use_runtimelinking\" is:\n          # \"aix,no\"   lib.a(lib.so.V) shared, rtl:no,  for executables\n          # \"aix,yes\"  lib.so          shared, rtl:yes, for executables\n          #            lib.a           static archive\n          # \"both,no\"  lib.so.V(shr.o) shared, rtl:yes\n          #            lib.a(lib.so.V) shared, rtl:no,  for executables\n          # \"both,yes\" lib.so.V(shr.o) shared, rtl:yes, for executables\n          #            lib.a(lib.so.V) shared, rtl:no\n          # \"svr4,*\"   lib.so.V(shr.o) shared, rtl:yes, for executables\n          #            lib.a           static archive\n          case $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t    for ld_flag in $LDFLAGS; do\n\t      case $ld_flag in\n\t      *-brtl*)\n\t        aix_use_runtimelinking=yes\n\t        break\n\t        ;;\n\t      esac\n\t    done\n\t    if test svr4,no = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t      # With aix-soname=svr4, we create the lib.so.V shared archives only,\n\t      # so we don't have lib.a shared libs to link our executables.\n\t      # We have to force runtime linking in this case.\n\t      aix_use_runtimelinking=yes\n\t      LDFLAGS=\"$LDFLAGS -Wl,-brtl\"\n\t    fi\n\t    ;;\n          esac\n\n          exp_sym_flag='-bexport'\n          no_entry_flag='-bnoentry'\n        fi\n\n        # When large executables or shared objects are built, AIX ld can\n        # have problems creating the table of contents.  If linking a library\n        # or program results in \"error TOC overflow\" add -mminimal-toc to\n        # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n        # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n        _LT_TAGVAR(archive_cmds, $1)=''\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        _LT_TAGVAR(file_list_spec, $1)='$wl-f,'\n        case $with_aix_soname,$aix_use_runtimelinking in\n        aix,*) ;;\t# no import file\n        svr4,* | *,yes) # use import file\n          # The Import File defines what to hardcode.\n          _LT_TAGVAR(hardcode_direct, $1)=no\n          _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n          ;;\n        esac\n\n        if test yes = \"$GXX\"; then\n          case $host_os in aix4.[[012]]|aix4.[[012]].*)\n          # We only want to do this on AIX 4.2 and lower, the check\n          # below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t     strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t    # We have reworked collect2\n\t    :\n\t  else\n\t    # We have old collect2\n\t    _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t    # It fails to find uninstalled libraries when the uninstalled\n\t    # path is not listed in the libpath.  Setting hardcode_minus_L\n\t    # to unsupported forces relinking\n\t    _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n          esac\n          shared_flag='-shared'\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag=$shared_flag' $wl-G'\n\t  fi\n\t  # Need to ensure runtime linking is disabled for the traditional\n\t  # shared library, or the linker may eventually find shared libraries\n\t  # /with/ Import File - we do not want to mix them.\n\t  shared_flag_aix='-shared'\n\t  shared_flag_svr4='-shared $wl-G'\n        else\n          # not using gcc\n          if test ia64 = \"$host_cpu\"; then\n\t  # VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t  # chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n          else\n\t    if test yes = \"$aix_use_runtimelinking\"; then\n\t      shared_flag='$wl-G'\n\t    else\n\t      shared_flag='$wl-bM:SRE'\n\t    fi\n\t    shared_flag_aix='$wl-bM:SRE'\n\t    shared_flag_svr4='$wl-G'\n          fi\n        fi\n\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-bexpall'\n        # It seems that -bexpall does not export symbols beginning with\n        # underscore (_), so it is better to generate a list of symbols to\n\t# export.\n        _LT_TAGVAR(always_export_symbols, $1)=yes\n\tif test aix,yes = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n          # Warning - without using the other runtime loading flags (-brtl),\n          # -berok will link without error, but may produce a broken library.\n          # The \"-G\" linker flag allows undefined symbols.\n          _LT_TAGVAR(no_undefined_flag, $1)='-bernotok'\n          # Determine the default libpath from the value encoded in an empty\n          # executable.\n          _LT_SYS_MODULE_PATH_AIX([$1])\n          _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n        else\n          if test ia64 = \"$host_cpu\"; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $libdir:/usr/lib:/lib'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n          else\n\t    # Determine the default libpath from the value encoded in an\n\t    # empty executable.\n\t    _LT_SYS_MODULE_PATH_AIX([$1])\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t    # Warning - without using the other run time loading flags,\n\t    # -berok will link without error, but may produce a broken library.\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' $wl-bernotok'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-berok'\n\t    if test yes = \"$with_gnu_ld\"; then\n\t      # We only use this code for GNU lds that support --whole-archive.\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    else\n\t      # Exported symbols can be pulled into shared objects from archives\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t    fi\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'\n\t    # -brtl affects multiple linker settings, -berok does not and is overridden later\n\t    compiler_flags_filtered='`func_echo_all \"$compiler_flags \" | $SED -e \"s%-brtl\\\\([[, ]]\\\\)%-berok\\\\1%g\"`'\n\t    if test svr4 != \"$with_aix_soname\"; then\n\t      # This is similar to how AIX traditionally builds its shared\n\t      # libraries. Need -bnortl late, we may have -brtl in LDFLAGS.\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'\n\t    fi\n\t    if test aix != \"$with_aix_soname\"; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all \"#! $soname($shared_archive_member_spec.o)\"; if test shr_64 = \"$shared_archive_member_spec\"; then func_echo_all \"# 64\"; else func_echo_all \"# 32\"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'\n\t    else\n\t      # used by -dlpreopen to get the symbols\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'\n\t    fi\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$RM -r $output_objdir/$realname.d'\n          fi\n        fi\n        ;;\n\n      beos*)\n\tif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  # Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t  # support --undefined.  This deserves some investigation.  FIXME\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      chorus*)\n        case $cc_basename in\n          *)\n\t  # FIXME: insert proper C++ library support\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\t  ;;\n        esac\n        ;;\n\n      cygwin* | mingw* | pw32* | cegcc*)\n\tcase $GXX,$cc_basename in\n\t,cl* | no,cl*)\n\t  # Native MSVC\n\t  # hardcode_libdir_flag_spec is actually meaningless, as there is\n\t  # no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=yes\n\t  _LT_TAGVAR(file_list_spec, $1)='@'\n\t  # Tell ltmain to make .lib files, not .a files.\n\t  libext=lib\n\t  # Tell ltmain to make .dll files, not .so files.\n\t  shrext_cmds=.dll\n\t  # FIXME: Setting linknames here is a bad hack.\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n              cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n              echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n            else\n              $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n            fi~\n            $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n            linknames='\n\t  # The linker will not automatically build a static lib if we build a DLL.\n\t  # _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t  # Don't use ranlib\n\t  _LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t  _LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n            lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n            case $lt_outputfile in\n              *.exe|*.EXE) ;;\n              *)\n                lt_outputfile=$lt_outputfile.exe\n                lt_tool_outputfile=$lt_tool_outputfile.exe\n                ;;\n            esac~\n            func_to_tool_file \"$lt_outputfile\"~\n            if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n              $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n              $RM \"$lt_outputfile.manifest\";\n            fi'\n\t  ;;\n\t*)\n\t  # g++\n\t  # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n\t  # as there is no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-all-symbols'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=no\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\n\t  if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t    # If the export-symbols file already is a .def file, use it as\n\t    # is; otherwise, prepend EXPORTS...\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n              cp $export_symbols $output_objdir/$soname.def;\n            else\n              echo EXPORTS > $output_objdir/$soname.def;\n              cat $export_symbols >> $output_objdir/$soname.def;\n            fi~\n            $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t  ;;\n\tesac\n\t;;\n      darwin* | rhapsody*)\n        _LT_DARWIN_LINKER_FEATURES($1)\n\t;;\n\n      os2*)\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\tshrext_cmds=.dll\n\t_LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t  $ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t  $ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t  $ECHO EXPORTS >> $output_objdir/$libname.def~\n\t  emxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\t  emximp -o $lib $output_objdir/$libname.def'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t  $ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t  $ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t  $ECHO EXPORTS >> $output_objdir/$libname.def~\n\t  prefix_cmds=\"$SED\"~\n\t  if test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t    prefix_cmds=\"$prefix_cmds -e 1d\";\n\t  fi~\n\t  prefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\t  cat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\t  emximp -o $lib $output_objdir/$libname.def'\n\t_LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t;;\n\n      dgux*)\n        case $cc_basename in\n          ec++*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          ghcx*)\n\t    # Green Hills C++ Compiler\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      freebsd2.*)\n        # C++ shared libraries reported to be fairly broken before\n\t# switch to ELF\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      freebsd-elf*)\n        _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n        ;;\n\n      freebsd* | dragonfly*)\n        # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF\n        # conventions\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n        ;;\n\n      haiku*)\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        ;;\n\n      hpux9*)\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t             # but as the default\n\t\t\t\t             # location of the library.\n\n        case $cc_basename in\n          CC*)\n            # FIXME: insert proper C++ library support\n            _LT_TAGVAR(ld_shlibs, $1)=no\n            ;;\n          aCC*)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -b $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            # Commands to make compiler produce verbose output that lists\n            # what \"hidden\" libraries, object files and flags are used when\n            # linking a shared library.\n            #\n            # There doesn't appear to be a way to prevent this compiler from\n            # explicitly linking system object files so we need to strip them\n            # from the output so that they don't get included in the library\n            # dependencies.\n            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP \"\\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n            ;;\n          *)\n            if test yes = \"$GXX\"; then\n              _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -nostdlib $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            else\n              # FIXME: insert proper C++ library support\n              _LT_TAGVAR(ld_shlibs, $1)=no\n            fi\n            ;;\n        esac\n        ;;\n\n      hpux10*|hpux11*)\n        if test no = \"$with_gnu_ld\"; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n          case $host_cpu in\n            hppa*64*|ia64*)\n              ;;\n            *)\n\t      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n              ;;\n          esac\n        fi\n        case $host_cpu in\n          hppa*64*|ia64*)\n            _LT_TAGVAR(hardcode_direct, $1)=no\n            _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n            ;;\n          *)\n            _LT_TAGVAR(hardcode_direct, $1)=yes\n            _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t\t         # but as the default\n\t\t\t\t\t         # location of the library.\n            ;;\n        esac\n\n        case $cc_basename in\n          CC*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          aCC*)\n\t    case $host_cpu in\n\t      hppa*64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      ia64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      *)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t    esac\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP \"\\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        case $host_cpu in\n\t          hppa*64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          ia64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          *)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t        esac\n\t      fi\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      interix[[3-9]]*)\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t# Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n\t# Instead, shared libraries are loaded at an image base (0x10000000 by\n\t# default) and relocated if they conflict, which is a slow very memory\n\t# consuming and fragmenting process.  To avoid this, we pick a random,\n\t# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n\t# time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t;;\n      irix5* | irix6*)\n        case $cc_basename in\n          CC*)\n\t    # SGI C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -ar\", where \"CC\" is the IRIX C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t      else\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` -o $lib'\n\t      fi\n\t    fi\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\t    ;;\n        esac\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(inherit_rpath, $1)=yes\n        ;;\n\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib $wl-retain-symbols-file,$export_symbols; mv \\$templib $lib'\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP \"ld\"`; rm -f libconftest$shared_ext; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\t    ;;\n\t  icpc* | ecpc* )\n\t    # Intel C++\n\t    with_gnu_ld=yes\n\t    # version 8.0 and above of icpc choke on multiply defined symbols\n\t    # if we add $predep_objects and $postdep_objects, however 7.1 and\n\t    # earlier do not add the objects themselves.\n\t    case `$CC -V 2>&1` in\n\t      *\"Version 7.\"*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t      *)  # Version 8.0 or newer\n\t        tmp_idyn=\n\t        case $host_cpu in\n\t\t  ia64*) tmp_idyn=' -i_dynamic';;\n\t\tesac\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t    esac\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    ;;\n          pgCC* | pgcpp*)\n            # Portland Group C++ compiler\n\t    case `$CC -V` in\n\t    *pgCC\\ [[1-5]].* | *pgcpp\\ [[1-5]].*)\n\t      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~\n               rm -rf $tpldir~\n               $CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n               compile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n\t      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n                $AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n                $RANLIB $oldlib'\n\t      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    *) # Version 6 and above use weak symbols\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl--rpath $wl$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n            ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname  -o $lib $wl-retain-symbols-file $wl$export_symbols'\n\n\t    runpath_var=LD_RUN_PATH\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld .*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"X$list\" | $Xsed'\n\t    ;;\n\t  xl* | mpixl* | bgxl*)\n\t    # IBM XL 8.0 on PPC, with GNU ld\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    if test yes = \"$supports_anon_versioning\"; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n                cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n                echo \"local: *; };\" >> $output_objdir/$libname.ver~\n                $CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n\t    fi\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file $wl$export_symbols'\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t      _LT_TAGVAR(compiler_needs_object, $1)=yes\n\n\t      # Not sure whether something based on\n\t      # $CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1\n\t      # would be better.\n\t      output_verbose_link_cmd='func_echo_all'\n\n\t      # Archives containing C++ object files must be created using\n\t      # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t      # necessary to make sure instantiated templates are included\n\t      # in the archive.\n\t      _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n\n      lynxos*)\n        # FIXME: insert proper C++ library support\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      m88k*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      mvs*)\n        case $cc_basename in\n          cxx*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\t  *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\tesac\n\t;;\n\n      netbsd*)\n        if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'\n\t  wlarc=\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\tfi\n\t# Workaround some broken pre-1.5 toolchains\n\toutput_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP conftest.$objext | $SED -e \"s:-lgcc -lc -lgcc::\"'\n\t;;\n\n      *nto* | *qnx*)\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n\t;;\n\n      openbsd* | bitrig*)\n\tif test -f /usr/libexec/ld.so; then\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file,$export_symbols -o $lib'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n\t  fi\n\t  output_verbose_link_cmd=func_echo_all\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      osf3* | osf4* | osf5*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo \"$lib\" | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Archives containing C++ object files must be created using\n\t    # the KAI C++ compiler.\n\t    case $host in\n\t      osf3*) _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs' ;;\n\t      *) _LT_TAGVAR(old_archive_cmds, $1)='$CC -o $oldlib $oldobjs' ;;\n\t    esac\n\t    ;;\n          RCC*)\n\t    # Rational C++ 2.4.1\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          cxx*)\n\t    case $host in\n\t      osf3*)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t\t;;\n\t      *)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done~\n                  echo \"-hidden\">> $lib.exp~\n                  $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname $wl-input $wl$lib.exp  `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~\n                  $RM $lib.exp'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t\t;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\" | $GREP -v \"ld:\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n\t  *)\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t      case $host in\n\t        osf3*)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t        *)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t      esac\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t      # Commands to make compiler produce verbose output that lists\n\t      # what \"hidden\" libraries, object files and flags are used when\n\t      # linking a shared library.\n\t      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      psos*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      sunos4*)\n        case $cc_basename in\n          CC*)\n\t    # Sun C++ 4.x\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          lcc*)\n\t    # Lucid\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      solaris*)\n        case $cc_basename in\n          CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n            _LT_TAGVAR(archive_cmds_need_lc,$1)=yes\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n              $CC -G$allow_undefined_flag $wl-M $wl$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t    _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t    case $host_os in\n\t      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t      *)\n\t\t# The compiler driver will combine and reorder linker options,\n\t\t# but understands '-z linker_flag'.\n\t        # Supported since Solaris 2.6 (maybe 2.5.1?)\n\t\t_LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\t        ;;\n\t    esac\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\n\t    output_verbose_link_cmd='func_echo_all'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t    ;;\n          gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\n\t    # The C++ compiler must be used to create the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    # GNU C++ compiler with Solaris linker\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' $wl-z ${wl}defs'\n\t      if $CC --version | $GREP -v '^2\\.7' > /dev/null; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -shared $pic_flag -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      else\n\t        # g++ 2.7 appears to require '-G' NOT '-shared' on this\n\t        # platform.\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -G -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      fi\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $wl$libdir'\n\t      case $host_os in\n\t\tsolaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t\t*)\n\t\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\t\t  ;;\n\t      esac\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      case $cc_basename in\n        CC*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n      esac\n      ;;\n\n      sysv5* | sco3.2v5* | sco5v6*)\n\t# Note: We CANNOT use -z defs as we might desire, because we do not\n\t# link with -lc, and that would cause any symbols used from libc to\n\t# always be unresolved, which means just about no library would\n\t# ever link correctly.  If we're not using GNU ld we use -z text\n\t# though, which does catch some bad symbols but isn't as heavy-handed\n\t# as -z defs.\n\t_LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n\t_LT_TAGVAR(allow_undefined_flag, $1)='$wl-z,nodefs'\n\t_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R,$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n\t_LT_TAGVAR(link_all_deplibs, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Bexport'\n\trunpath_var='LD_RUN_PATH'\n\n\tcase $cc_basename in\n          CC*)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Tprelink_objects $oldobjs~\n              '\"$_LT_TAGVAR(old_archive_cmds, $1)\"\n\t    _LT_TAGVAR(reload_cmds, $1)='$CC -Tprelink_objects $reload_objs~\n              '\"$_LT_TAGVAR(reload_cmds, $1)\"\n\t    ;;\n\t  *)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    ;;\n\tesac\n      ;;\n\n      tandem*)\n        case $cc_basename in\n          NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      vxworks*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      *)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n    esac\n\n    AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\n    test no = \"$_LT_TAGVAR(ld_shlibs, $1)\" && can_build_shared=no\n\n    _LT_TAGVAR(GCC, $1)=$GXX\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\n  LDCXX=$LD\n  LD=$lt_save_LD\n  GCC=$lt_save_GCC\n  with_gnu_ld=$lt_save_with_gnu_ld\n  lt_cv_path_LDCXX=$lt_cv_path_LD\n  lt_cv_path_LD=$lt_save_path_LD\n  lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld\n  lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld\nfi # test yes != \"$_lt_caught_CXX_error\"\n\nAC_LANG_POP\n])# _LT_LANG_CXX_CONFIG\n\n\n# _LT_FUNC_STRIPNAME_CNF\n# ----------------------\n# func_stripname_cnf prefix suffix name\n# strip PREFIX and SUFFIX off of NAME.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\n#\n# This function is identical to the (non-XSI) version of func_stripname,\n# except this one can be used by m4 code that may be executed by configure,\n# rather than the libtool script.\nm4_defun([_LT_FUNC_STRIPNAME_CNF],[dnl\nAC_REQUIRE([_LT_DECL_SED])\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])\nfunc_stripname_cnf ()\n{\n  case @S|@2 in\n  .*) func_stripname_result=`$ECHO \"@S|@3\" | $SED \"s%^@S|@1%%; s%\\\\\\\\@S|@2\\$%%\"`;;\n  *)  func_stripname_result=`$ECHO \"@S|@3\" | $SED \"s%^@S|@1%%; s%@S|@2\\$%%\"`;;\n  esac\n} # func_stripname_cnf\n])# _LT_FUNC_STRIPNAME_CNF\n\n\n# _LT_SYS_HIDDEN_LIBDEPS([TAGNAME])\n# ---------------------------------\n# Figure out \"hidden\" library dependencies from verbose\n# compiler output when linking a shared library.\n# Parse the compiler output and extract the necessary\n# objects, libraries and library flags.\nm4_defun([_LT_SYS_HIDDEN_LIBDEPS],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nAC_REQUIRE([_LT_FUNC_STRIPNAME_CNF])dnl\n# Dependencies to place before and after the object being linked:\n_LT_TAGVAR(predep_objects, $1)=\n_LT_TAGVAR(postdep_objects, $1)=\n_LT_TAGVAR(predeps, $1)=\n_LT_TAGVAR(postdeps, $1)=\n_LT_TAGVAR(compiler_lib_search_path, $1)=\n\ndnl we can't use the lt_simple_compile_test_code here,\ndnl because it contains code intended for an executable,\ndnl not a library.  It's possible we should let each\ndnl tag define a new lt_????_link_test_code variable,\ndnl but it's only used here...\nm4_if([$1], [], [cat > conftest.$ac_ext <<_LT_EOF\nint a;\nvoid foo (void) { a = 0; }\n_LT_EOF\n], [$1], [CXX], [cat > conftest.$ac_ext <<_LT_EOF\nclass Foo\n{\npublic:\n  Foo (void) { a = 0; }\nprivate:\n  int a;\n};\n_LT_EOF\n], [$1], [F77], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer*4 a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [FC], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [GCJ], [cat > conftest.$ac_ext <<_LT_EOF\npublic class foo {\n  private int a;\n  public void bar (void) {\n    a = 0;\n  }\n};\n_LT_EOF\n], [$1], [GO], [cat > conftest.$ac_ext <<_LT_EOF\npackage foo\nfunc foo() {\n}\n_LT_EOF\n])\n\n_lt_libdeps_save_CFLAGS=$CFLAGS\ncase \"$CC $CFLAGS \" in #(\n*\\ -flto*\\ *) CFLAGS=\"$CFLAGS -fno-lto\" ;;\n*\\ -fwhopr*\\ *) CFLAGS=\"$CFLAGS -fno-whopr\" ;;\n*\\ -fuse-linker-plugin*\\ *) CFLAGS=\"$CFLAGS -fno-use-linker-plugin\" ;;\nesac\n\ndnl Parse the compiler output and extract the necessary\ndnl objects, libraries and library flags.\nif AC_TRY_EVAL(ac_compile); then\n  # Parse the compiler output and extract the necessary\n  # objects, libraries and library flags.\n\n  # Sentinel used to keep track of whether or not we are before\n  # the conftest object file.\n  pre_test_object_deps_done=no\n\n  for p in `eval \"$output_verbose_link_cmd\"`; do\n    case $prev$p in\n\n    -L* | -R* | -l*)\n       # Some compilers place space between \"-{L,R}\" and the path.\n       # Remove the space.\n       if test x-L = \"$p\" ||\n          test x-R = \"$p\"; then\n\t prev=$p\n\t continue\n       fi\n\n       # Expand the sysroot to ease extracting the directories later.\n       if test -z \"$prev\"; then\n         case $p in\n         -L*) func_stripname_cnf '-L' '' \"$p\"; prev=-L; p=$func_stripname_result ;;\n         -R*) func_stripname_cnf '-R' '' \"$p\"; prev=-R; p=$func_stripname_result ;;\n         -l*) func_stripname_cnf '-l' '' \"$p\"; prev=-l; p=$func_stripname_result ;;\n         esac\n       fi\n       case $p in\n       =*) func_stripname_cnf '=' '' \"$p\"; p=$lt_sysroot$func_stripname_result ;;\n       esac\n       if test no = \"$pre_test_object_deps_done\"; then\n\t case $prev in\n\t -L | -R)\n\t   # Internal compiler library paths should come after those\n\t   # provided the user.  The postdeps already come after the\n\t   # user supplied libs so there is no need to process them.\n\t   if test -z \"$_LT_TAGVAR(compiler_lib_search_path, $1)\"; then\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=$prev$p\n\t   else\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=\"${_LT_TAGVAR(compiler_lib_search_path, $1)} $prev$p\"\n\t   fi\n\t   ;;\n\t # The \"-l\" case would never come before the object being\n\t # linked, so don't bother handling this case.\n\t esac\n       else\n\t if test -z \"$_LT_TAGVAR(postdeps, $1)\"; then\n\t   _LT_TAGVAR(postdeps, $1)=$prev$p\n\t else\n\t   _LT_TAGVAR(postdeps, $1)=\"${_LT_TAGVAR(postdeps, $1)} $prev$p\"\n\t fi\n       fi\n       prev=\n       ;;\n\n    *.lto.$objext) ;; # Ignore GCC LTO objects\n    *.$objext)\n       # This assumes that the test object file only shows up\n       # once in the compiler output.\n       if test \"$p\" = \"conftest.$objext\"; then\n\t pre_test_object_deps_done=yes\n\t continue\n       fi\n\n       if test no = \"$pre_test_object_deps_done\"; then\n\t if test -z \"$_LT_TAGVAR(predep_objects, $1)\"; then\n\t   _LT_TAGVAR(predep_objects, $1)=$p\n\t else\n\t   _LT_TAGVAR(predep_objects, $1)=\"$_LT_TAGVAR(predep_objects, $1) $p\"\n\t fi\n       else\n\t if test -z \"$_LT_TAGVAR(postdep_objects, $1)\"; then\n\t   _LT_TAGVAR(postdep_objects, $1)=$p\n\t else\n\t   _LT_TAGVAR(postdep_objects, $1)=\"$_LT_TAGVAR(postdep_objects, $1) $p\"\n\t fi\n       fi\n       ;;\n\n    *) ;; # Ignore the rest.\n\n    esac\n  done\n\n  # Clean up.\n  rm -f a.out a.exe\nelse\n  echo \"libtool.m4: error: problem compiling $1 test program\"\nfi\n\n$RM -f confest.$objext\nCFLAGS=$_lt_libdeps_save_CFLAGS\n\n# PORTME: override above test on systems where it is broken\nm4_if([$1], [CXX],\n[case $host_os in\ninterix[[3-9]]*)\n  # Interix 3.5 installs completely hosed .la files for C++, so rather than\n  # hack all around it, let's just trust \"g++\" to DTRT.\n  _LT_TAGVAR(predep_objects,$1)=\n  _LT_TAGVAR(postdep_objects,$1)=\n  _LT_TAGVAR(postdeps,$1)=\n  ;;\nesac\n])\n\ncase \" $_LT_TAGVAR(postdeps, $1) \" in\n*\" -lc \"*) _LT_TAGVAR(archive_cmds_need_lc, $1)=no ;;\nesac\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=\nif test -n \"${_LT_TAGVAR(compiler_lib_search_path, $1)}\"; then\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=`echo \" ${_LT_TAGVAR(compiler_lib_search_path, $1)}\" | $SED -e 's! -L! !g' -e 's!^ !!'`\nfi\n_LT_TAGDECL([], [compiler_lib_search_dirs], [1],\n    [The directories searched by this compiler when creating a shared library])\n_LT_TAGDECL([], [predep_objects], [1],\n    [Dependencies to place before and after the objects being linked to\n    create a shared library])\n_LT_TAGDECL([], [postdep_objects], [1])\n_LT_TAGDECL([], [predeps], [1])\n_LT_TAGDECL([], [postdeps], [1])\n_LT_TAGDECL([], [compiler_lib_search_path], [1],\n    [The library search path used internally by the compiler when linking\n    a shared library])\n])# _LT_SYS_HIDDEN_LIBDEPS\n\n\n# _LT_LANG_F77_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a Fortran 77 compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_F77_CONFIG],\n[AC_LANG_PUSH(Fortran 77)\nif test -z \"$F77\" || test no = \"$F77\"; then\n  _lt_disable_F77=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for f77 test sources.\nac_ext=f\n\n# Object file extension for compiled f77 test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the F77 compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_disable_F77\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${F77-\"f77\"}\n  CFLAGS=$FFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n  GCC=$G77\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test no = \"$can_build_shared\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test yes = \"$enable_shared\" && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test ia64 != \"$host_cpu\"; then\n\t  case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n\t  yes,aix,yes) ;;\t\t# shared object as lib.so file only\n\t  yes,svr4,*) ;;\t\t# shared object as lib.so archive member only\n\t  yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n\t  esac\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test yes = \"$enable_shared\" || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=$G77\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\nfi # test yes != \"$_lt_disable_F77\"\n\nAC_LANG_POP\n])# _LT_LANG_F77_CONFIG\n\n\n# _LT_LANG_FC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for a Fortran compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_FC_CONFIG],\n[AC_LANG_PUSH(Fortran)\n\nif test -z \"$FC\" || test no = \"$FC\"; then\n  _lt_disable_FC=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for fc test sources.\nac_ext=${ac_fc_srcext-f}\n\n# Object file extension for compiled fc test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the FC compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_disable_FC\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${FC-\"f95\"}\n  CFLAGS=$FCFLAGS\n  compiler=$CC\n  GCC=$ac_cv_fc_compiler_gnu\n\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test no = \"$can_build_shared\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test yes = \"$enable_shared\" && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test ia64 != \"$host_cpu\"; then\n\t  case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n\t  yes,aix,yes) ;;\t\t# shared object as lib.so file only\n\t  yes,svr4,*) ;;\t\t# shared object as lib.so archive member only\n\t  yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n\t  esac\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test yes = \"$enable_shared\" || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=$ac_cv_fc_compiler_gnu\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\nfi # test yes != \"$_lt_disable_FC\"\n\nAC_LANG_POP\n])# _LT_LANG_FC_CONFIG\n\n\n# _LT_LANG_GCJ_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Java Compiler compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_GCJ_CONFIG],\n[AC_REQUIRE([LT_PROG_GCJ])dnl\nAC_LANG_SAVE\n\n# Source file extension for Java test sources.\nac_ext=java\n\n# Object file extension for compiled Java test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"class foo {}\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GCJ-\"gcj\"}\nCFLAGS=$GCJFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=$LD\n_LT_CC_BASENAME([$compiler])\n\n# GCJ did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GCJ_CONFIG\n\n\n# _LT_LANG_GO_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Go compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_GO_CONFIG],\n[AC_REQUIRE([LT_PROG_GO])dnl\nAC_LANG_SAVE\n\n# Source file extension for Go test sources.\nac_ext=go\n\n# Object file extension for compiled Go test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"package main; func main() { }\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='package main; func main() { }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GOC-\"gccgo\"}\nCFLAGS=$GOFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=$LD\n_LT_CC_BASENAME([$compiler])\n\n# Go did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GO_CONFIG\n\n\n# _LT_LANG_RC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for the Windows resource compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_RC_CONFIG],\n[AC_REQUIRE([LT_PROG_RC])dnl\nAC_LANG_SAVE\n\n# Source file extension for RC test sources.\nac_ext=rc\n\n# Object file extension for compiled RC test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code='sample MENU { MENUITEM \"&Soup\", 100, CHECKED }'\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=$lt_simple_compile_test_code\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=\nCC=${RC-\"windres\"}\nCFLAGS=\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n\nif test -n \"$compiler\"; then\n  :\n  _LT_CONFIG($1)\nfi\n\nGCC=$lt_save_GCC\nAC_LANG_RESTORE\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_RC_CONFIG\n\n\n# LT_PROG_GCJ\n# -----------\nAC_DEFUN([LT_PROG_GCJ],\n[m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],\n  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],\n    [AC_CHECK_TOOL(GCJ, gcj,)\n      test set = \"${GCJFLAGS+set}\" || GCJFLAGS=\"-g -O2\"\n      AC_SUBST(GCJFLAGS)])])[]dnl\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_GCJ], [LT_PROG_GCJ])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_GCJ], [])\n\n\n# LT_PROG_GO\n# ----------\nAC_DEFUN([LT_PROG_GO],\n[AC_CHECK_TOOL(GOC, gccgo,)\n])\n\n\n# LT_PROG_RC\n# ----------\nAC_DEFUN([LT_PROG_RC],\n[AC_CHECK_TOOL(RC, windres,)\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_RC], [LT_PROG_RC])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_RC], [])\n\n\n# _LT_DECL_EGREP\n# --------------\n# If we don't have a new enough Autoconf to choose the best grep\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_EGREP],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_REQUIRE([AC_PROG_FGREP])dnl\ntest -z \"$GREP\" && GREP=grep\n_LT_DECL([], [GREP], [1], [A grep program that handles long lines])\n_LT_DECL([], [EGREP], [1], [An ERE matcher])\n_LT_DECL([], [FGREP], [1], [A literal string matcher])\ndnl Non-bleeding-edge autoconf doesn't subst GREP, so do it here too\nAC_SUBST([GREP])\n])\n\n\n# _LT_DECL_OBJDUMP\n# --------------\n# If we don't have a new enough Autoconf to choose the best objdump\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_OBJDUMP],\n[AC_CHECK_TOOL(OBJDUMP, objdump, false)\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n_LT_DECL([], [OBJDUMP], [1], [An object symbol dumper])\nAC_SUBST([OBJDUMP])\n])\n\n# _LT_DECL_DLLTOOL\n# ----------------\n# Ensure DLLTOOL variable is set.\nm4_defun([_LT_DECL_DLLTOOL],\n[AC_CHECK_TOOL(DLLTOOL, dlltool, false)\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n_LT_DECL([], [DLLTOOL], [1], [DLL creation program])\nAC_SUBST([DLLTOOL])\n])\n\n# _LT_DECL_SED\n# ------------\n# Check for a fully-functional sed program, that truncates\n# as few characters as possible.  Prefer GNU sed if found.\nm4_defun([_LT_DECL_SED],\n[AC_PROG_SED\ntest -z \"$SED\" && SED=sed\nXsed=\"$SED -e 1s/^X//\"\n_LT_DECL([], [SED], [1], [A sed program that does not truncate output])\n_LT_DECL([], [Xsed], [\"\\$SED -e 1s/^X//\"],\n    [Sed that helps us avoid accidentally triggering echo(1) options like -n])\n])# _LT_DECL_SED\n\nm4_ifndef([AC_PROG_SED], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_SED.  When it is available in   #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\n\nm4_defun([AC_PROG_SED],\n[AC_MSG_CHECKING([for a sed that does not truncate output])\nAC_CACHE_VAL(lt_cv_path_SED,\n[# Loop through the user's path and test for sed and gsed.\n# Then use that list of sed's as ones to test for truncation.\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  for lt_ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      if $as_executable_p \"$as_dir/$lt_ac_prog$ac_exec_ext\"; then\n        lt_ac_sed_list=\"$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext\"\n      fi\n    done\n  done\ndone\nIFS=$as_save_IFS\nlt_ac_max=0\nlt_ac_count=0\n# Add /usr/xpg4/bin/sed as it is typically found on Solaris\n# along with /bin/sed that truncates output.\nfor lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do\n  test ! -f \"$lt_ac_sed\" && continue\n  cat /dev/null > conftest.in\n  lt_ac_count=0\n  echo $ECHO_N \"0123456789$ECHO_C\" >conftest.in\n  # Check for GNU sed and select it if it is found.\n  if \"$lt_ac_sed\" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then\n    lt_cv_path_SED=$lt_ac_sed\n    break\n  fi\n  while true; do\n    cat conftest.in conftest.in >conftest.tmp\n    mv conftest.tmp conftest.in\n    cp conftest.in conftest.nl\n    echo >>conftest.nl\n    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break\n    cmp -s conftest.out conftest.nl || break\n    # 10000 chars as input seems more than enough\n    test 10 -lt \"$lt_ac_count\" && break\n    lt_ac_count=`expr $lt_ac_count + 1`\n    if test \"$lt_ac_count\" -gt \"$lt_ac_max\"; then\n      lt_ac_max=$lt_ac_count\n      lt_cv_path_SED=$lt_ac_sed\n    fi\n  done\ndone\n])\nSED=$lt_cv_path_SED\nAC_SUBST([SED])\nAC_MSG_RESULT([$SED])\n])#AC_PROG_SED\n])#m4_ifndef\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_SED], [AC_PROG_SED])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_SED], [])\n\n\n# _LT_CHECK_SHELL_FEATURES\n# ------------------------\n# Find out whether the shell is Bourne or XSI compatible,\n# or has some other useful features.\nm4_defun([_LT_CHECK_SHELL_FEATURES],\n[if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then\n  lt_unset=unset\nelse\n  lt_unset=false\nfi\n_LT_DECL([], [lt_unset], [0], [whether the shell understands \"unset\"])dnl\n\n# test EBCDIC or ASCII\ncase `echo X|tr X '\\101'` in\n A) # ASCII based system\n    # \\n is not interpreted correctly by Solaris 8 /usr/ucb/tr\n  lt_SP2NL='tr \\040 \\012'\n  lt_NL2SP='tr \\015\\012 \\040\\040'\n  ;;\n *) # EBCDIC based system\n  lt_SP2NL='tr \\100 \\n'\n  lt_NL2SP='tr \\r\\n \\100\\100'\n  ;;\nesac\n_LT_DECL([SP2NL], [lt_SP2NL], [1], [turn spaces into newlines])dnl\n_LT_DECL([NL2SP], [lt_NL2SP], [1], [turn newlines into spaces])dnl\n])# _LT_CHECK_SHELL_FEATURES\n\n\n# _LT_PATH_CONVERSION_FUNCTIONS\n# -----------------------------\n# Determine what file name conversion functions should be used by\n# func_to_host_file (and, implicitly, by func_to_host_path).  These are needed\n# for certain cross-compile configurations and native mingw.\nm4_defun([_LT_PATH_CONVERSION_FUNCTIONS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_MSG_CHECKING([how to convert $build file names to $host format])\nAC_CACHE_VAL(lt_cv_to_host_file_cmd,\n[case $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_w32\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_cygwin_to_w32\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_w32\n        ;;\n    esac\n    ;;\n  *-*-cygwin* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_cygwin\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_noop\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_cygwin\n        ;;\n    esac\n    ;;\n  * ) # unhandled hosts (and \"normal\" native builds)\n    lt_cv_to_host_file_cmd=func_convert_file_noop\n    ;;\nesac\n])\nto_host_file_cmd=$lt_cv_to_host_file_cmd\nAC_MSG_RESULT([$lt_cv_to_host_file_cmd])\n_LT_DECL([to_host_file_cmd], [lt_cv_to_host_file_cmd],\n         [0], [convert $build file names to $host format])dnl\n\nAC_MSG_CHECKING([how to convert $build file names to toolchain format])\nAC_CACHE_VAL(lt_cv_to_tool_file_cmd,\n[#assume ordinary cross tools, or native build.\nlt_cv_to_tool_file_cmd=func_convert_file_noop\ncase $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_tool_file_cmd=func_convert_file_msys_to_w32\n        ;;\n    esac\n    ;;\nesac\n])\nto_tool_file_cmd=$lt_cv_to_tool_file_cmd\nAC_MSG_RESULT([$lt_cv_to_tool_file_cmd])\n_LT_DECL([to_tool_file_cmd], [lt_cv_to_tool_file_cmd],\n         [0], [convert $build files to toolchain format])dnl\n])# _LT_PATH_CONVERSION_FUNCTIONS\n",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/m4/ltoptions.m4": "# Helper functions for option handling.                    -*- Autoconf -*-\n#\n#   Copyright (C) 2004-2005, 2007-2009, 2011-2015 Free Software\n#   Foundation, Inc.\n#   Written by Gary V. Vaughan, 2004\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\n# serial 8 ltoptions.m4\n\n# This is to help aclocal find these macros, as it can't see m4_define.\nAC_DEFUN([LTOPTIONS_VERSION], [m4_if([1])])\n\n\n# _LT_MANGLE_OPTION(MACRO-NAME, OPTION-NAME)\n# ------------------------------------------\nm4_define([_LT_MANGLE_OPTION],\n[[_LT_OPTION_]m4_bpatsubst($1__$2, [[^a-zA-Z0-9_]], [_])])\n\n\n# _LT_SET_OPTION(MACRO-NAME, OPTION-NAME)\n# ---------------------------------------\n# Set option OPTION-NAME for macro MACRO-NAME, and if there is a\n# matching handler defined, dispatch to it.  Other OPTION-NAMEs are\n# saved as a flag.\nm4_define([_LT_SET_OPTION],\n[m4_define(_LT_MANGLE_OPTION([$1], [$2]))dnl\nm4_ifdef(_LT_MANGLE_DEFUN([$1], [$2]),\n        _LT_MANGLE_DEFUN([$1], [$2]),\n    [m4_warning([Unknown $1 option '$2'])])[]dnl\n])\n\n\n# _LT_IF_OPTION(MACRO-NAME, OPTION-NAME, IF-SET, [IF-NOT-SET])\n# ------------------------------------------------------------\n# Execute IF-SET if OPTION is set, IF-NOT-SET otherwise.\nm4_define([_LT_IF_OPTION],\n[m4_ifdef(_LT_MANGLE_OPTION([$1], [$2]), [$3], [$4])])\n\n\n# _LT_UNLESS_OPTIONS(MACRO-NAME, OPTION-LIST, IF-NOT-SET)\n# -------------------------------------------------------\n# Execute IF-NOT-SET unless all options in OPTION-LIST for MACRO-NAME\n# are set.\nm4_define([_LT_UNLESS_OPTIONS],\n[m4_foreach([_LT_Option], m4_split(m4_normalize([$2])),\n\t    [m4_ifdef(_LT_MANGLE_OPTION([$1], _LT_Option),\n\t\t      [m4_define([$0_found])])])[]dnl\nm4_ifdef([$0_found], [m4_undefine([$0_found])], [$3\n])[]dnl\n])\n\n\n# _LT_SET_OPTIONS(MACRO-NAME, OPTION-LIST)\n# ----------------------------------------\n# OPTION-LIST is a space-separated list of Libtool options associated\n# with MACRO-NAME.  If any OPTION has a matching handler declared with\n# LT_OPTION_DEFINE, dispatch to that macro; otherwise complain about\n# the unknown option and exit.\nm4_defun([_LT_SET_OPTIONS],\n[# Set options\nm4_foreach([_LT_Option], m4_split(m4_normalize([$2])),\n    [_LT_SET_OPTION([$1], _LT_Option)])\n\nm4_if([$1],[LT_INIT],[\n  dnl\n  dnl Simply set some default values (i.e off) if boolean options were not\n  dnl specified:\n  _LT_UNLESS_OPTIONS([LT_INIT], [dlopen], [enable_dlopen=no\n  ])\n  _LT_UNLESS_OPTIONS([LT_INIT], [win32-dll], [enable_win32_dll=no\n  ])\n  dnl\n  dnl If no reference was made to various pairs of opposing options, then\n  dnl we run the default mode handler for the pair.  For example, if neither\n  dnl 'shared' nor 'disable-shared' was passed, we enable building of shared\n  dnl archives by default:\n  _LT_UNLESS_OPTIONS([LT_INIT], [shared disable-shared], [_LT_ENABLE_SHARED])\n  _LT_UNLESS_OPTIONS([LT_INIT], [static disable-static], [_LT_ENABLE_STATIC])\n  _LT_UNLESS_OPTIONS([LT_INIT], [pic-only no-pic], [_LT_WITH_PIC])\n  _LT_UNLESS_OPTIONS([LT_INIT], [fast-install disable-fast-install],\n\t\t   [_LT_ENABLE_FAST_INSTALL])\n  _LT_UNLESS_OPTIONS([LT_INIT], [aix-soname=aix aix-soname=both aix-soname=svr4],\n\t\t   [_LT_WITH_AIX_SONAME([aix])])\n  ])\n])# _LT_SET_OPTIONS\n\n\n## --------------------------------- ##\n## Macros to handle LT_INIT options. ##\n## --------------------------------- ##\n\n# _LT_MANGLE_DEFUN(MACRO-NAME, OPTION-NAME)\n# -----------------------------------------\nm4_define([_LT_MANGLE_DEFUN],\n[[_LT_OPTION_DEFUN_]m4_bpatsubst(m4_toupper([$1__$2]), [[^A-Z0-9_]], [_])])\n\n\n# LT_OPTION_DEFINE(MACRO-NAME, OPTION-NAME, CODE)\n# -----------------------------------------------\nm4_define([LT_OPTION_DEFINE],\n[m4_define(_LT_MANGLE_DEFUN([$1], [$2]), [$3])[]dnl\n])# LT_OPTION_DEFINE\n\n\n# dlopen\n# ------\nLT_OPTION_DEFINE([LT_INIT], [dlopen], [enable_dlopen=yes\n])\n\nAU_DEFUN([AC_LIBTOOL_DLOPEN],\n[_LT_SET_OPTION([LT_INIT], [dlopen])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you\nput the 'dlopen' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_DLOPEN], [])\n\n\n# win32-dll\n# ---------\n# Declare package support for building win32 dll's.\nLT_OPTION_DEFINE([LT_INIT], [win32-dll],\n[enable_win32_dll=yes\n\ncase $host in\n*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-cegcc*)\n  AC_CHECK_TOOL(AS, as, false)\n  AC_CHECK_TOOL(DLLTOOL, dlltool, false)\n  AC_CHECK_TOOL(OBJDUMP, objdump, false)\n  ;;\nesac\n\ntest -z \"$AS\" && AS=as\n_LT_DECL([], [AS],      [1], [Assembler program])dnl\n\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n_LT_DECL([], [DLLTOOL], [1], [DLL creation program])dnl\n\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n_LT_DECL([], [OBJDUMP], [1], [Object dumper program])dnl\n])# win32-dll\n\nAU_DEFUN([AC_LIBTOOL_WIN32_DLL],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n_LT_SET_OPTION([LT_INIT], [win32-dll])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you\nput the 'win32-dll' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_WIN32_DLL], [])\n\n\n# _LT_ENABLE_SHARED([DEFAULT])\n# ----------------------------\n# implement the --enable-shared flag, and supports the 'shared' and\n# 'disable-shared' LT_INIT options.\n# DEFAULT is either 'yes' or 'no'.  If omitted, it defaults to 'yes'.\nm4_define([_LT_ENABLE_SHARED],\n[m4_define([_LT_ENABLE_SHARED_DEFAULT], [m4_if($1, no, no, yes)])dnl\nAC_ARG_ENABLE([shared],\n    [AS_HELP_STRING([--enable-shared@<:@=PKGS@:>@],\n\t[build shared libraries @<:@default=]_LT_ENABLE_SHARED_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_shared=yes ;;\n    no) enable_shared=no ;;\n    *)\n      enable_shared=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_shared=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac],\n    [enable_shared=]_LT_ENABLE_SHARED_DEFAULT)\n\n    _LT_DECL([build_libtool_libs], [enable_shared], [0],\n\t[Whether or not to build shared libraries])\n])# _LT_ENABLE_SHARED\n\nLT_OPTION_DEFINE([LT_INIT], [shared], [_LT_ENABLE_SHARED([yes])])\nLT_OPTION_DEFINE([LT_INIT], [disable-shared], [_LT_ENABLE_SHARED([no])])\n\n# Old names:\nAC_DEFUN([AC_ENABLE_SHARED],\n[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[shared])\n])\n\nAC_DEFUN([AC_DISABLE_SHARED],\n[_LT_SET_OPTION([LT_INIT], [disable-shared])\n])\n\nAU_DEFUN([AM_ENABLE_SHARED], [AC_ENABLE_SHARED($@)])\nAU_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_ENABLE_SHARED], [])\ndnl AC_DEFUN([AM_DISABLE_SHARED], [])\n\n\n\n# _LT_ENABLE_STATIC([DEFAULT])\n# ----------------------------\n# implement the --enable-static flag, and support the 'static' and\n# 'disable-static' LT_INIT options.\n# DEFAULT is either 'yes' or 'no'.  If omitted, it defaults to 'yes'.\nm4_define([_LT_ENABLE_STATIC],\n[m4_define([_LT_ENABLE_STATIC_DEFAULT], [m4_if($1, no, no, yes)])dnl\nAC_ARG_ENABLE([static],\n    [AS_HELP_STRING([--enable-static@<:@=PKGS@:>@],\n\t[build static libraries @<:@default=]_LT_ENABLE_STATIC_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_static=yes ;;\n    no) enable_static=no ;;\n    *)\n     enable_static=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_static=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac],\n    [enable_static=]_LT_ENABLE_STATIC_DEFAULT)\n\n    _LT_DECL([build_old_libs], [enable_static], [0],\n\t[Whether or not to build static libraries])\n])# _LT_ENABLE_STATIC\n\nLT_OPTION_DEFINE([LT_INIT], [static], [_LT_ENABLE_STATIC([yes])])\nLT_OPTION_DEFINE([LT_INIT], [disable-static], [_LT_ENABLE_STATIC([no])])\n\n# Old names:\nAC_DEFUN([AC_ENABLE_STATIC],\n[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[static])\n])\n\nAC_DEFUN([AC_DISABLE_STATIC],\n[_LT_SET_OPTION([LT_INIT], [disable-static])\n])\n\nAU_DEFUN([AM_ENABLE_STATIC], [AC_ENABLE_STATIC($@)])\nAU_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_ENABLE_STATIC], [])\ndnl AC_DEFUN([AM_DISABLE_STATIC], [])\n\n\n\n# _LT_ENABLE_FAST_INSTALL([DEFAULT])\n# ----------------------------------\n# implement the --enable-fast-install flag, and support the 'fast-install'\n# and 'disable-fast-install' LT_INIT options.\n# DEFAULT is either 'yes' or 'no'.  If omitted, it defaults to 'yes'.\nm4_define([_LT_ENABLE_FAST_INSTALL],\n[m4_define([_LT_ENABLE_FAST_INSTALL_DEFAULT], [m4_if($1, no, no, yes)])dnl\nAC_ARG_ENABLE([fast-install],\n    [AS_HELP_STRING([--enable-fast-install@<:@=PKGS@:>@],\n    [optimize for fast installation @<:@default=]_LT_ENABLE_FAST_INSTALL_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_fast_install=yes ;;\n    no) enable_fast_install=no ;;\n    *)\n      enable_fast_install=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_fast_install=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac],\n    [enable_fast_install=]_LT_ENABLE_FAST_INSTALL_DEFAULT)\n\n_LT_DECL([fast_install], [enable_fast_install], [0],\n\t [Whether or not to optimize for fast installation])dnl\n])# _LT_ENABLE_FAST_INSTALL\n\nLT_OPTION_DEFINE([LT_INIT], [fast-install], [_LT_ENABLE_FAST_INSTALL([yes])])\nLT_OPTION_DEFINE([LT_INIT], [disable-fast-install], [_LT_ENABLE_FAST_INSTALL([no])])\n\n# Old names:\nAU_DEFUN([AC_ENABLE_FAST_INSTALL],\n[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you put\nthe 'fast-install' option into LT_INIT's first parameter.])\n])\n\nAU_DEFUN([AC_DISABLE_FAST_INSTALL],\n[_LT_SET_OPTION([LT_INIT], [disable-fast-install])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you put\nthe 'disable-fast-install' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_ENABLE_FAST_INSTALL], [])\ndnl AC_DEFUN([AM_DISABLE_FAST_INSTALL], [])\n\n\n# _LT_WITH_AIX_SONAME([DEFAULT])\n# ----------------------------------\n# implement the --with-aix-soname flag, and support the `aix-soname=aix'\n# and `aix-soname=both' and `aix-soname=svr4' LT_INIT options. DEFAULT\n# is either `aix', `both' or `svr4'.  If omitted, it defaults to `aix'.\nm4_define([_LT_WITH_AIX_SONAME],\n[m4_define([_LT_WITH_AIX_SONAME_DEFAULT], [m4_if($1, svr4, svr4, m4_if($1, both, both, aix))])dnl\nshared_archive_member_spec=\ncase $host,$enable_shared in\npower*-*-aix[[5-9]]*,yes)\n  AC_MSG_CHECKING([which variant of shared library versioning to provide])\n  AC_ARG_WITH([aix-soname],\n    [AS_HELP_STRING([--with-aix-soname=aix|svr4|both],\n      [shared library versioning (aka \"SONAME\") variant to provide on AIX, @<:@default=]_LT_WITH_AIX_SONAME_DEFAULT[@:>@.])],\n    [case $withval in\n    aix|svr4|both)\n      ;;\n    *)\n      AC_MSG_ERROR([Unknown argument to --with-aix-soname])\n      ;;\n    esac\n    lt_cv_with_aix_soname=$with_aix_soname],\n    [AC_CACHE_VAL([lt_cv_with_aix_soname],\n      [lt_cv_with_aix_soname=]_LT_WITH_AIX_SONAME_DEFAULT)\n    with_aix_soname=$lt_cv_with_aix_soname])\n  AC_MSG_RESULT([$with_aix_soname])\n  if test aix != \"$with_aix_soname\"; then\n    # For the AIX way of multilib, we name the shared archive member\n    # based on the bitwidth used, traditionally 'shr.o' or 'shr_64.o',\n    # and 'shr.imp' or 'shr_64.imp', respectively, for the Import File.\n    # Even when GNU compilers ignore OBJECT_MODE but need '-maix64' flag,\n    # the AIX toolchain works better with OBJECT_MODE set (default 32).\n    if test 64 = \"${OBJECT_MODE-32}\"; then\n      shared_archive_member_spec=shr_64\n    else\n      shared_archive_member_spec=shr\n    fi\n  fi\n  ;;\n*)\n  with_aix_soname=aix\n  ;;\nesac\n\n_LT_DECL([], [shared_archive_member_spec], [0],\n    [Shared archive member basename, for filename based shared library versioning on AIX])dnl\n])# _LT_WITH_AIX_SONAME\n\nLT_OPTION_DEFINE([LT_INIT], [aix-soname=aix], [_LT_WITH_AIX_SONAME([aix])])\nLT_OPTION_DEFINE([LT_INIT], [aix-soname=both], [_LT_WITH_AIX_SONAME([both])])\nLT_OPTION_DEFINE([LT_INIT], [aix-soname=svr4], [_LT_WITH_AIX_SONAME([svr4])])\n\n\n# _LT_WITH_PIC([MODE])\n# --------------------\n# implement the --with-pic flag, and support the 'pic-only' and 'no-pic'\n# LT_INIT options.\n# MODE is either 'yes' or 'no'.  If omitted, it defaults to 'both'.\nm4_define([_LT_WITH_PIC],\n[AC_ARG_WITH([pic],\n    [AS_HELP_STRING([--with-pic@<:@=PKGS@:>@],\n\t[try to use only PIC/non-PIC objects @<:@default=use both@:>@])],\n    [lt_p=${PACKAGE-default}\n    case $withval in\n    yes|no) pic_mode=$withval ;;\n    *)\n      pic_mode=default\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for lt_pkg in $withval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$lt_pkg\" = \"X$lt_p\"; then\n\t  pic_mode=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac],\n    [pic_mode=m4_default([$1], [default])])\n\n_LT_DECL([], [pic_mode], [0], [What type of objects to build])dnl\n])# _LT_WITH_PIC\n\nLT_OPTION_DEFINE([LT_INIT], [pic-only], [_LT_WITH_PIC([yes])])\nLT_OPTION_DEFINE([LT_INIT], [no-pic], [_LT_WITH_PIC([no])])\n\n# Old name:\nAU_DEFUN([AC_LIBTOOL_PICMODE],\n[_LT_SET_OPTION([LT_INIT], [pic-only])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you\nput the 'pic-only' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_PICMODE], [])\n\n## ----------------- ##\n## LTDL_INIT Options ##\n## ----------------- ##\n\nm4_define([_LTDL_MODE], [])\nLT_OPTION_DEFINE([LTDL_INIT], [nonrecursive],\n\t\t [m4_define([_LTDL_MODE], [nonrecursive])])\nLT_OPTION_DEFINE([LTDL_INIT], [recursive],\n\t\t [m4_define([_LTDL_MODE], [recursive])])\nLT_OPTION_DEFINE([LTDL_INIT], [subproject],\n\t\t [m4_define([_LTDL_MODE], [subproject])])\n\nm4_define([_LTDL_TYPE], [])\nLT_OPTION_DEFINE([LTDL_INIT], [installable],\n\t\t [m4_define([_LTDL_TYPE], [installable])])\nLT_OPTION_DEFINE([LTDL_INIT], [convenience],\n\t\t [m4_define([_LTDL_TYPE], [convenience])])\n",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/m4/lib-link.m4": "# lib-link.m4 serial 26 (gettext-0.18.2)\ndnl Copyright (C) 2001-2016 Free Software Foundation, Inc.\ndnl This file is free software; the Free Software Foundation\ndnl gives unlimited permission to copy and/or distribute it,\ndnl with or without modifications, as long as this notice is preserved.\n\ndnl From Bruno Haible.\n\nAC_PREREQ([2.54])\n\ndnl AC_LIB_LINKFLAGS(name [, dependencies]) searches for libname and\ndnl the libraries corresponding to explicit and implicit dependencies.\ndnl Sets and AC_SUBSTs the LIB${NAME} and LTLIB${NAME} variables and\ndnl augments the CPPFLAGS variable.\ndnl Sets and AC_SUBSTs the LIB${NAME}_PREFIX variable to nonempty if libname\ndnl was found in ${LIB${NAME}_PREFIX}/$acl_libdirstem.\nAC_DEFUN([AC_LIB_LINKFLAGS],\n[\n  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])\n  AC_REQUIRE([AC_LIB_RPATH])\n  pushdef([Name],[m4_translit([$1],[./+-], [____])])\n  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],\n                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n  AC_CACHE_CHECK([how to link with lib[]$1], [ac_cv_lib[]Name[]_libs], [\n    AC_LIB_LINKFLAGS_BODY([$1], [$2])\n    ac_cv_lib[]Name[]_libs=\"$LIB[]NAME\"\n    ac_cv_lib[]Name[]_ltlibs=\"$LTLIB[]NAME\"\n    ac_cv_lib[]Name[]_cppflags=\"$INC[]NAME\"\n    ac_cv_lib[]Name[]_prefix=\"$LIB[]NAME[]_PREFIX\"\n  ])\n  LIB[]NAME=\"$ac_cv_lib[]Name[]_libs\"\n  LTLIB[]NAME=\"$ac_cv_lib[]Name[]_ltlibs\"\n  INC[]NAME=\"$ac_cv_lib[]Name[]_cppflags\"\n  LIB[]NAME[]_PREFIX=\"$ac_cv_lib[]Name[]_prefix\"\n  AC_LIB_APPENDTOVAR([CPPFLAGS], [$INC]NAME)\n  AC_SUBST([LIB]NAME)\n  AC_SUBST([LTLIB]NAME)\n  AC_SUBST([LIB]NAME[_PREFIX])\n  dnl Also set HAVE_LIB[]NAME so that AC_LIB_HAVE_LINKFLAGS can reuse the\n  dnl results of this search when this library appears as a dependency.\n  HAVE_LIB[]NAME=yes\n  popdef([NAME])\n  popdef([Name])\n])\n\ndnl AC_LIB_HAVE_LINKFLAGS(name, dependencies, includes, testcode, [missing-message])\ndnl searches for libname and the libraries corresponding to explicit and\ndnl implicit dependencies, together with the specified include files and\ndnl the ability to compile and link the specified testcode. The missing-message\ndnl defaults to 'no' and may contain additional hints for the user.\ndnl If found, it sets and AC_SUBSTs HAVE_LIB${NAME}=yes and the LIB${NAME}\ndnl and LTLIB${NAME} variables and augments the CPPFLAGS variable, and\ndnl #defines HAVE_LIB${NAME} to 1. Otherwise, it sets and AC_SUBSTs\ndnl HAVE_LIB${NAME}=no and LIB${NAME} and LTLIB${NAME} to empty.\ndnl Sets and AC_SUBSTs the LIB${NAME}_PREFIX variable to nonempty if libname\ndnl was found in ${LIB${NAME}_PREFIX}/$acl_libdirstem.\nAC_DEFUN([AC_LIB_HAVE_LINKFLAGS],\n[\n  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])\n  AC_REQUIRE([AC_LIB_RPATH])\n  pushdef([Name],[m4_translit([$1],[./+-], [____])])\n  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],\n                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n\n  dnl Search for lib[]Name and define LIB[]NAME, LTLIB[]NAME and INC[]NAME\n  dnl accordingly.\n  AC_LIB_LINKFLAGS_BODY([$1], [$2])\n\n  dnl Add $INC[]NAME to CPPFLAGS before performing the following checks,\n  dnl because if the user has installed lib[]Name and not disabled its use\n  dnl via --without-lib[]Name-prefix, he wants to use it.\n  ac_save_CPPFLAGS=\"$CPPFLAGS\"\n  AC_LIB_APPENDTOVAR([CPPFLAGS], [$INC]NAME)\n\n  AC_CACHE_CHECK([for lib[]$1], [ac_cv_lib[]Name], [\n    ac_save_LIBS=\"$LIBS\"\n    dnl If $LIB[]NAME contains some -l options, add it to the end of LIBS,\n    dnl because these -l options might require -L options that are present in\n    dnl LIBS. -l options benefit only from the -L options listed before it.\n    dnl Otherwise, add it to the front of LIBS, because it may be a static\n    dnl library that depends on another static library that is present in LIBS.\n    dnl Static libraries benefit only from the static libraries listed after\n    dnl it.\n    case \" $LIB[]NAME\" in\n      *\" -l\"*) LIBS=\"$LIBS $LIB[]NAME\" ;;\n      *)       LIBS=\"$LIB[]NAME $LIBS\" ;;\n    esac\n    AC_LINK_IFELSE(\n      [AC_LANG_PROGRAM([[$3]], [[$4]])],\n      [ac_cv_lib[]Name=yes],\n      [ac_cv_lib[]Name='m4_if([$5], [], [no], [[$5]])'])\n    LIBS=\"$ac_save_LIBS\"\n  ])\n  if test \"$ac_cv_lib[]Name\" = yes; then\n    HAVE_LIB[]NAME=yes\n    AC_DEFINE([HAVE_LIB]NAME, 1, [Define if you have the lib][$1 library.])\n    AC_MSG_CHECKING([how to link with lib[]$1])\n    AC_MSG_RESULT([$LIB[]NAME])\n  else\n    HAVE_LIB[]NAME=no\n    dnl If $LIB[]NAME didn't lead to a usable library, we don't need\n    dnl $INC[]NAME either.\n    CPPFLAGS=\"$ac_save_CPPFLAGS\"\n    LIB[]NAME=\n    LTLIB[]NAME=\n    LIB[]NAME[]_PREFIX=\n  fi\n  AC_SUBST([HAVE_LIB]NAME)\n  AC_SUBST([LIB]NAME)\n  AC_SUBST([LTLIB]NAME)\n  AC_SUBST([LIB]NAME[_PREFIX])\n  popdef([NAME])\n  popdef([Name])\n])\n\ndnl Determine the platform dependent parameters needed to use rpath:\ndnl   acl_libext,\ndnl   acl_shlibext,\ndnl   acl_libname_spec,\ndnl   acl_library_names_spec,\ndnl   acl_hardcode_libdir_flag_spec,\ndnl   acl_hardcode_libdir_separator,\ndnl   acl_hardcode_direct,\ndnl   acl_hardcode_minus_L.\nAC_DEFUN([AC_LIB_RPATH],\n[\n  dnl Tell automake >= 1.10 to complain if config.rpath is missing.\n  m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([config.rpath])])\n  AC_REQUIRE([AC_PROG_CC])                dnl we use $CC, $GCC, $LDFLAGS\n  AC_REQUIRE([AC_LIB_PROG_LD])            dnl we use $LD, $with_gnu_ld\n  AC_REQUIRE([AC_CANONICAL_HOST])         dnl we use $host\n  AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT]) dnl we use $ac_aux_dir\n  AC_CACHE_CHECK([for shared library run path origin], [acl_cv_rpath], [\n    CC=\"$CC\" GCC=\"$GCC\" LDFLAGS=\"$LDFLAGS\" LD=\"$LD\" with_gnu_ld=\"$with_gnu_ld\" \\\n    ${CONFIG_SHELL-/bin/sh} \"$ac_aux_dir/config.rpath\" \"$host\" > conftest.sh\n    . ./conftest.sh\n    rm -f ./conftest.sh\n    acl_cv_rpath=done\n  ])\n  wl=\"$acl_cv_wl\"\n  acl_libext=\"$acl_cv_libext\"\n  acl_shlibext=\"$acl_cv_shlibext\"\n  acl_libname_spec=\"$acl_cv_libname_spec\"\n  acl_library_names_spec=\"$acl_cv_library_names_spec\"\n  acl_hardcode_libdir_flag_spec=\"$acl_cv_hardcode_libdir_flag_spec\"\n  acl_hardcode_libdir_separator=\"$acl_cv_hardcode_libdir_separator\"\n  acl_hardcode_direct=\"$acl_cv_hardcode_direct\"\n  acl_hardcode_minus_L=\"$acl_cv_hardcode_minus_L\"\n  dnl Determine whether the user wants rpath handling at all.\n  AC_ARG_ENABLE([rpath],\n    [  --disable-rpath         do not hardcode runtime library paths],\n    :, enable_rpath=yes)\n])\n\ndnl AC_LIB_FROMPACKAGE(name, package)\ndnl declares that libname comes from the given package. The configure file\ndnl will then not have a --with-libname-prefix option but a\ndnl --with-package-prefix option. Several libraries can come from the same\ndnl package. This declaration must occur before an AC_LIB_LINKFLAGS or similar\ndnl macro call that searches for libname.\nAC_DEFUN([AC_LIB_FROMPACKAGE],\n[\n  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],\n                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n  define([acl_frompackage_]NAME, [$2])\n  popdef([NAME])\n  pushdef([PACK],[$2])\n  pushdef([PACKUP],[m4_translit(PACK,[abcdefghijklmnopqrstuvwxyz./+-],\n                                     [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n  define([acl_libsinpackage_]PACKUP,\n    m4_ifdef([acl_libsinpackage_]PACKUP, [m4_defn([acl_libsinpackage_]PACKUP)[, ]],)[lib$1])\n  popdef([PACKUP])\n  popdef([PACK])\n])\n\ndnl AC_LIB_LINKFLAGS_BODY(name [, dependencies]) searches for libname and\ndnl the libraries corresponding to explicit and implicit dependencies.\ndnl Sets the LIB${NAME}, LTLIB${NAME} and INC${NAME} variables.\ndnl Also, sets the LIB${NAME}_PREFIX variable to nonempty if libname was found\ndnl in ${LIB${NAME}_PREFIX}/$acl_libdirstem.\nAC_DEFUN([AC_LIB_LINKFLAGS_BODY],\n[\n  AC_REQUIRE([AC_LIB_PREPARE_MULTILIB])\n  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],\n                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n  pushdef([PACK],[m4_ifdef([acl_frompackage_]NAME, [acl_frompackage_]NAME, lib[$1])])\n  pushdef([PACKUP],[m4_translit(PACK,[abcdefghijklmnopqrstuvwxyz./+-],\n                                     [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n  pushdef([PACKLIBS],[m4_ifdef([acl_frompackage_]NAME, [acl_libsinpackage_]PACKUP, lib[$1])])\n  dnl Autoconf >= 2.61 supports dots in --with options.\n  pushdef([P_A_C_K],[m4_if(m4_version_compare(m4_defn([m4_PACKAGE_VERSION]),[2.61]),[-1],[m4_translit(PACK,[.],[_])],PACK)])\n  dnl By default, look in $includedir and $libdir.\n  use_additional=yes\n  AC_LIB_WITH_FINAL_PREFIX([\n    eval additional_includedir=\\\"$includedir\\\"\n    eval additional_libdir=\\\"$libdir\\\"\n  ])\n  AC_ARG_WITH(P_A_C_K[-prefix],\n[[  --with-]]P_A_C_K[[-prefix[=DIR]  search for ]PACKLIBS[ in DIR/include and DIR/lib\n  --without-]]P_A_C_K[[-prefix     don't search for ]PACKLIBS[ in includedir and libdir]],\n[\n    if test \"X$withval\" = \"Xno\"; then\n      use_additional=no\n    else\n      if test \"X$withval\" = \"X\"; then\n        AC_LIB_WITH_FINAL_PREFIX([\n          eval additional_includedir=\\\"$includedir\\\"\n          eval additional_libdir=\\\"$libdir\\\"\n        ])\n      else\n        additional_includedir=\"$withval/include\"\n        additional_libdir=\"$withval/$acl_libdirstem\"\n        if test \"$acl_libdirstem2\" != \"$acl_libdirstem\" \\\n           && ! test -d \"$withval/$acl_libdirstem\"; then\n          additional_libdir=\"$withval/$acl_libdirstem2\"\n        fi\n      fi\n    fi\n])\n  dnl Search the library and its dependencies in $additional_libdir and\n  dnl $LDFLAGS. Using breadth-first-seach.\n  LIB[]NAME=\n  LTLIB[]NAME=\n  INC[]NAME=\n  LIB[]NAME[]_PREFIX=\n  dnl HAVE_LIB${NAME} is an indicator that LIB${NAME}, LTLIB${NAME} have been\n  dnl computed. So it has to be reset here.\n  HAVE_LIB[]NAME=\n  rpathdirs=\n  ltrpathdirs=\n  names_already_handled=\n  names_next_round='$1 $2'\n  while test -n \"$names_next_round\"; do\n    names_this_round=\"$names_next_round\"\n    names_next_round=\n    for name in $names_this_round; do\n      already_handled=\n      for n in $names_already_handled; do\n        if test \"$n\" = \"$name\"; then\n          already_handled=yes\n          break\n        fi\n      done\n      if test -z \"$already_handled\"; then\n        names_already_handled=\"$names_already_handled $name\"\n        dnl See if it was already located by an earlier AC_LIB_LINKFLAGS\n        dnl or AC_LIB_HAVE_LINKFLAGS call.\n        uppername=`echo \"$name\" | sed -e 'y|abcdefghijklmnopqrstuvwxyz./+-|ABCDEFGHIJKLMNOPQRSTUVWXYZ____|'`\n        eval value=\\\"\\$HAVE_LIB$uppername\\\"\n        if test -n \"$value\"; then\n          if test \"$value\" = yes; then\n            eval value=\\\"\\$LIB$uppername\\\"\n            test -z \"$value\" || LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$value\"\n            eval value=\\\"\\$LTLIB$uppername\\\"\n            test -z \"$value\" || LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }$value\"\n          else\n            dnl An earlier call to AC_LIB_HAVE_LINKFLAGS has determined\n            dnl that this library doesn't exist. So just drop it.\n            :\n          fi\n        else\n          dnl Search the library lib$name in $additional_libdir and $LDFLAGS\n          dnl and the already constructed $LIBNAME/$LTLIBNAME.\n          found_dir=\n          found_la=\n          found_so=\n          found_a=\n          eval libname=\\\"$acl_libname_spec\\\"    # typically: libname=lib$name\n          if test -n \"$acl_shlibext\"; then\n            shrext=\".$acl_shlibext\"             # typically: shrext=.so\n          else\n            shrext=\n          fi\n          if test $use_additional = yes; then\n            dir=\"$additional_libdir\"\n            dnl The same code as in the loop below:\n            dnl First look for a shared library.\n            if test -n \"$acl_shlibext\"; then\n              if test -f \"$dir/$libname$shrext\"; then\n                found_dir=\"$dir\"\n                found_so=\"$dir/$libname$shrext\"\n              else\n                if test \"$acl_library_names_spec\" = '$libname$shrext$versuffix'; then\n                  ver=`(cd \"$dir\" && \\\n                        for f in \"$libname$shrext\".*; do echo \"$f\"; done \\\n                        | sed -e \"s,^$libname$shrext\\\\\\\\.,,\" \\\n                        | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \\\n                        | sed 1q ) 2>/dev/null`\n                  if test -n \"$ver\" && test -f \"$dir/$libname$shrext.$ver\"; then\n                    found_dir=\"$dir\"\n                    found_so=\"$dir/$libname$shrext.$ver\"\n                  fi\n                else\n                  eval library_names=\\\"$acl_library_names_spec\\\"\n                  for f in $library_names; do\n                    if test -f \"$dir/$f\"; then\n                      found_dir=\"$dir\"\n                      found_so=\"$dir/$f\"\n                      break\n                    fi\n                  done\n                fi\n              fi\n            fi\n            dnl Then look for a static library.\n            if test \"X$found_dir\" = \"X\"; then\n              if test -f \"$dir/$libname.$acl_libext\"; then\n                found_dir=\"$dir\"\n                found_a=\"$dir/$libname.$acl_libext\"\n              fi\n            fi\n            if test \"X$found_dir\" != \"X\"; then\n              if test -f \"$dir/$libname.la\"; then\n                found_la=\"$dir/$libname.la\"\n              fi\n            fi\n          fi\n          if test \"X$found_dir\" = \"X\"; then\n            for x in $LDFLAGS $LTLIB[]NAME; do\n              AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n              case \"$x\" in\n                -L*)\n                  dir=`echo \"X$x\" | sed -e 's/^X-L//'`\n                  dnl First look for a shared library.\n                  if test -n \"$acl_shlibext\"; then\n                    if test -f \"$dir/$libname$shrext\"; then\n                      found_dir=\"$dir\"\n                      found_so=\"$dir/$libname$shrext\"\n                    else\n                      if test \"$acl_library_names_spec\" = '$libname$shrext$versuffix'; then\n                        ver=`(cd \"$dir\" && \\\n                              for f in \"$libname$shrext\".*; do echo \"$f\"; done \\\n                              | sed -e \"s,^$libname$shrext\\\\\\\\.,,\" \\\n                              | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \\\n                              | sed 1q ) 2>/dev/null`\n                        if test -n \"$ver\" && test -f \"$dir/$libname$shrext.$ver\"; then\n                          found_dir=\"$dir\"\n                          found_so=\"$dir/$libname$shrext.$ver\"\n                        fi\n                      else\n                        eval library_names=\\\"$acl_library_names_spec\\\"\n                        for f in $library_names; do\n                          if test -f \"$dir/$f\"; then\n                            found_dir=\"$dir\"\n                            found_so=\"$dir/$f\"\n                            break\n                          fi\n                        done\n                      fi\n                    fi\n                  fi\n                  dnl Then look for a static library.\n                  if test \"X$found_dir\" = \"X\"; then\n                    if test -f \"$dir/$libname.$acl_libext\"; then\n                      found_dir=\"$dir\"\n                      found_a=\"$dir/$libname.$acl_libext\"\n                    fi\n                  fi\n                  if test \"X$found_dir\" != \"X\"; then\n                    if test -f \"$dir/$libname.la\"; then\n                      found_la=\"$dir/$libname.la\"\n                    fi\n                  fi\n                  ;;\n              esac\n              if test \"X$found_dir\" != \"X\"; then\n                break\n              fi\n            done\n          fi\n          if test \"X$found_dir\" != \"X\"; then\n            dnl Found the library.\n            LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-L$found_dir -l$name\"\n            if test \"X$found_so\" != \"X\"; then\n              dnl Linking with a shared library. We attempt to hardcode its\n              dnl directory into the executable's runpath, unless it's the\n              dnl standard /usr/lib.\n              if test \"$enable_rpath\" = no \\\n                 || test \"X$found_dir\" = \"X/usr/$acl_libdirstem\" \\\n                 || test \"X$found_dir\" = \"X/usr/$acl_libdirstem2\"; then\n                dnl No hardcoding is needed.\n                LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n              else\n                dnl Use an explicit option to hardcode DIR into the resulting\n                dnl binary.\n                dnl Potentially add DIR to ltrpathdirs.\n                dnl The ltrpathdirs will be appended to $LTLIBNAME at the end.\n                haveit=\n                for x in $ltrpathdirs; do\n                  if test \"X$x\" = \"X$found_dir\"; then\n                    haveit=yes\n                    break\n                  fi\n                done\n                if test -z \"$haveit\"; then\n                  ltrpathdirs=\"$ltrpathdirs $found_dir\"\n                fi\n                dnl The hardcoding into $LIBNAME is system dependent.\n                if test \"$acl_hardcode_direct\" = yes; then\n                  dnl Using DIR/libNAME.so during linking hardcodes DIR into the\n                  dnl resulting binary.\n                  LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n                else\n                  if test -n \"$acl_hardcode_libdir_flag_spec\" && test \"$acl_hardcode_minus_L\" = no; then\n                    dnl Use an explicit option to hardcode DIR into the resulting\n                    dnl binary.\n                    LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n                    dnl Potentially add DIR to rpathdirs.\n                    dnl The rpathdirs will be appended to $LIBNAME at the end.\n                    haveit=\n                    for x in $rpathdirs; do\n                      if test \"X$x\" = \"X$found_dir\"; then\n                        haveit=yes\n                        break\n                      fi\n                    done\n                    if test -z \"$haveit\"; then\n                      rpathdirs=\"$rpathdirs $found_dir\"\n                    fi\n                  else\n                    dnl Rely on \"-L$found_dir\".\n                    dnl But don't add it if it's already contained in the LDFLAGS\n                    dnl or the already constructed $LIBNAME\n                    haveit=\n                    for x in $LDFLAGS $LIB[]NAME; do\n                      AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n                      if test \"X$x\" = \"X-L$found_dir\"; then\n                        haveit=yes\n                        break\n                      fi\n                    done\n                    if test -z \"$haveit\"; then\n                      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-L$found_dir\"\n                    fi\n                    if test \"$acl_hardcode_minus_L\" != no; then\n                      dnl FIXME: Not sure whether we should use\n                      dnl \"-L$found_dir -l$name\" or \"-L$found_dir $found_so\"\n                      dnl here.\n                      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n                    else\n                      dnl We cannot use $acl_hardcode_runpath_var and LD_RUN_PATH\n                      dnl here, because this doesn't fit in flags passed to the\n                      dnl compiler. So give up. No hardcoding. This affects only\n                      dnl very old systems.\n                      dnl FIXME: Not sure whether we should use\n                      dnl \"-L$found_dir -l$name\" or \"-L$found_dir $found_so\"\n                      dnl here.\n                      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-l$name\"\n                    fi\n                  fi\n                fi\n              fi\n            else\n              if test \"X$found_a\" != \"X\"; then\n                dnl Linking with a static library.\n                LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_a\"\n              else\n                dnl We shouldn't come here, but anyway it's good to have a\n                dnl fallback.\n                LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-L$found_dir -l$name\"\n              fi\n            fi\n            dnl Assume the include files are nearby.\n            additional_includedir=\n            case \"$found_dir\" in\n              */$acl_libdirstem | */$acl_libdirstem/)\n                basedir=`echo \"X$found_dir\" | sed -e 's,^X,,' -e \"s,/$acl_libdirstem/\"'*$,,'`\n                if test \"$name\" = '$1'; then\n                  LIB[]NAME[]_PREFIX=\"$basedir\"\n                fi\n                additional_includedir=\"$basedir/include\"\n                ;;\n              */$acl_libdirstem2 | */$acl_libdirstem2/)\n                basedir=`echo \"X$found_dir\" | sed -e 's,^X,,' -e \"s,/$acl_libdirstem2/\"'*$,,'`\n                if test \"$name\" = '$1'; then\n                  LIB[]NAME[]_PREFIX=\"$basedir\"\n                fi\n                additional_includedir=\"$basedir/include\"\n                ;;\n            esac\n            if test \"X$additional_includedir\" != \"X\"; then\n              dnl Potentially add $additional_includedir to $INCNAME.\n              dnl But don't add it\n              dnl   1. if it's the standard /usr/include,\n              dnl   2. if it's /usr/local/include and we are using GCC on Linux,\n              dnl   3. if it's already present in $CPPFLAGS or the already\n              dnl      constructed $INCNAME,\n              dnl   4. if it doesn't exist as a directory.\n              if test \"X$additional_includedir\" != \"X/usr/include\"; then\n                haveit=\n                if test \"X$additional_includedir\" = \"X/usr/local/include\"; then\n                  if test -n \"$GCC\"; then\n                    case $host_os in\n                      linux* | gnu* | k*bsd*-gnu) haveit=yes;;\n                    esac\n                  fi\n                fi\n                if test -z \"$haveit\"; then\n                  for x in $CPPFLAGS $INC[]NAME; do\n                    AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n                    if test \"X$x\" = \"X-I$additional_includedir\"; then\n                      haveit=yes\n                      break\n                    fi\n                  done\n                  if test -z \"$haveit\"; then\n                    if test -d \"$additional_includedir\"; then\n                      dnl Really add $additional_includedir to $INCNAME.\n                      INC[]NAME=\"${INC[]NAME}${INC[]NAME:+ }-I$additional_includedir\"\n                    fi\n                  fi\n                fi\n              fi\n            fi\n            dnl Look for dependencies.\n            if test -n \"$found_la\"; then\n              dnl Read the .la file. It defines the variables\n              dnl dlname, library_names, old_library, dependency_libs, current,\n              dnl age, revision, installed, dlopen, dlpreopen, libdir.\n              save_libdir=\"$libdir\"\n              case \"$found_la\" in\n                */* | *\\\\*) . \"$found_la\" ;;\n                *) . \"./$found_la\" ;;\n              esac\n              libdir=\"$save_libdir\"\n              dnl We use only dependency_libs.\n              for dep in $dependency_libs; do\n                case \"$dep\" in\n                  -L*)\n                    additional_libdir=`echo \"X$dep\" | sed -e 's/^X-L//'`\n                    dnl Potentially add $additional_libdir to $LIBNAME and $LTLIBNAME.\n                    dnl But don't add it\n                    dnl   1. if it's the standard /usr/lib,\n                    dnl   2. if it's /usr/local/lib and we are using GCC on Linux,\n                    dnl   3. if it's already present in $LDFLAGS or the already\n                    dnl      constructed $LIBNAME,\n                    dnl   4. if it doesn't exist as a directory.\n                    if test \"X$additional_libdir\" != \"X/usr/$acl_libdirstem\" \\\n                       && test \"X$additional_libdir\" != \"X/usr/$acl_libdirstem2\"; then\n                      haveit=\n                      if test \"X$additional_libdir\" = \"X/usr/local/$acl_libdirstem\" \\\n                         || test \"X$additional_libdir\" = \"X/usr/local/$acl_libdirstem2\"; then\n                        if test -n \"$GCC\"; then\n                          case $host_os in\n                            linux* | gnu* | k*bsd*-gnu) haveit=yes;;\n                          esac\n                        fi\n                      fi\n                      if test -z \"$haveit\"; then\n                        haveit=\n                        for x in $LDFLAGS $LIB[]NAME; do\n                          AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n                          if test \"X$x\" = \"X-L$additional_libdir\"; then\n                            haveit=yes\n                            break\n                          fi\n                        done\n                        if test -z \"$haveit\"; then\n                          if test -d \"$additional_libdir\"; then\n                            dnl Really add $additional_libdir to $LIBNAME.\n                            LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-L$additional_libdir\"\n                          fi\n                        fi\n                        haveit=\n                        for x in $LDFLAGS $LTLIB[]NAME; do\n                          AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n                          if test \"X$x\" = \"X-L$additional_libdir\"; then\n                            haveit=yes\n                            break\n                          fi\n                        done\n                        if test -z \"$haveit\"; then\n                          if test -d \"$additional_libdir\"; then\n                            dnl Really add $additional_libdir to $LTLIBNAME.\n                            LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-L$additional_libdir\"\n                          fi\n                        fi\n                      fi\n                    fi\n                    ;;\n                  -R*)\n                    dir=`echo \"X$dep\" | sed -e 's/^X-R//'`\n                    if test \"$enable_rpath\" != no; then\n                      dnl Potentially add DIR to rpathdirs.\n                      dnl The rpathdirs will be appended to $LIBNAME at the end.\n                      haveit=\n                      for x in $rpathdirs; do\n                        if test \"X$x\" = \"X$dir\"; then\n                          haveit=yes\n                          break\n                        fi\n                      done\n                      if test -z \"$haveit\"; then\n                        rpathdirs=\"$rpathdirs $dir\"\n                      fi\n                      dnl Potentially add DIR to ltrpathdirs.\n                      dnl The ltrpathdirs will be appended to $LTLIBNAME at the end.\n                      haveit=\n                      for x in $ltrpathdirs; do\n                        if test \"X$x\" = \"X$dir\"; then\n                          haveit=yes\n                          break\n                        fi\n                      done\n                      if test -z \"$haveit\"; then\n                        ltrpathdirs=\"$ltrpathdirs $dir\"\n                      fi\n                    fi\n                    ;;\n                  -l*)\n                    dnl Handle this in the next round.\n                    names_next_round=\"$names_next_round \"`echo \"X$dep\" | sed -e 's/^X-l//'`\n                    ;;\n                  *.la)\n                    dnl Handle this in the next round. Throw away the .la's\n                    dnl directory; it is already contained in a preceding -L\n                    dnl option.\n                    names_next_round=\"$names_next_round \"`echo \"X$dep\" | sed -e 's,^X.*/,,' -e 's,^lib,,' -e 's,\\.la$,,'`\n                    ;;\n                  *)\n                    dnl Most likely an immediate library name.\n                    LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$dep\"\n                    LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }$dep\"\n                    ;;\n                esac\n              done\n            fi\n          else\n            dnl Didn't find the library; assume it is in the system directories\n            dnl known to the linker and runtime loader. (All the system\n            dnl directories known to the linker should also be known to the\n            dnl runtime loader, otherwise the system is severely misconfigured.)\n            LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-l$name\"\n            LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-l$name\"\n          fi\n        fi\n      fi\n    done\n  done\n  if test \"X$rpathdirs\" != \"X\"; then\n    if test -n \"$acl_hardcode_libdir_separator\"; then\n      dnl Weird platform: only the last -rpath option counts, the user must\n      dnl pass all path elements in one option. We can arrange that for a\n      dnl single library, but not when more than one $LIBNAMEs are used.\n      alldirs=\n      for found_dir in $rpathdirs; do\n        alldirs=\"${alldirs}${alldirs:+$acl_hardcode_libdir_separator}$found_dir\"\n      done\n      dnl Note: acl_hardcode_libdir_flag_spec uses $libdir and $wl.\n      acl_save_libdir=\"$libdir\"\n      libdir=\"$alldirs\"\n      eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n      libdir=\"$acl_save_libdir\"\n      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$flag\"\n    else\n      dnl The -rpath options are cumulative.\n      for found_dir in $rpathdirs; do\n        acl_save_libdir=\"$libdir\"\n        libdir=\"$found_dir\"\n        eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n        libdir=\"$acl_save_libdir\"\n        LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$flag\"\n      done\n    fi\n  fi\n  if test \"X$ltrpathdirs\" != \"X\"; then\n    dnl When using libtool, the option that works for both libraries and\n    dnl executables is -R. The -R options are cumulative.\n    for found_dir in $ltrpathdirs; do\n      LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-R$found_dir\"\n    done\n  fi\n  popdef([P_A_C_K])\n  popdef([PACKLIBS])\n  popdef([PACKUP])\n  popdef([PACK])\n  popdef([NAME])\n])\n\ndnl AC_LIB_APPENDTOVAR(VAR, CONTENTS) appends the elements of CONTENTS to VAR,\ndnl unless already present in VAR.\ndnl Works only for CPPFLAGS, not for LIB* variables because that sometimes\ndnl contains two or three consecutive elements that belong together.\nAC_DEFUN([AC_LIB_APPENDTOVAR],\n[\n  for element in [$2]; do\n    haveit=\n    for x in $[$1]; do\n      AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n      if test \"X$x\" = \"X$element\"; then\n        haveit=yes\n        break\n      fi\n    done\n    if test -z \"$haveit\"; then\n      [$1]=\"${[$1]}${[$1]:+ }$element\"\n    fi\n  done\n])\n\ndnl For those cases where a variable contains several -L and -l options\ndnl referring to unknown libraries and directories, this macro determines the\ndnl necessary additional linker options for the runtime path.\ndnl AC_LIB_LINKFLAGS_FROM_LIBS([LDADDVAR], [LIBSVALUE], [USE-LIBTOOL])\ndnl sets LDADDVAR to linker options needed together with LIBSVALUE.\ndnl If USE-LIBTOOL evaluates to non-empty, linking with libtool is assumed,\ndnl otherwise linking without libtool is assumed.\nAC_DEFUN([AC_LIB_LINKFLAGS_FROM_LIBS],\n[\n  AC_REQUIRE([AC_LIB_RPATH])\n  AC_REQUIRE([AC_LIB_PREPARE_MULTILIB])\n  $1=\n  if test \"$enable_rpath\" != no; then\n    if test -n \"$acl_hardcode_libdir_flag_spec\" && test \"$acl_hardcode_minus_L\" = no; then\n      dnl Use an explicit option to hardcode directories into the resulting\n      dnl binary.\n      rpathdirs=\n      next=\n      for opt in $2; do\n        if test -n \"$next\"; then\n          dir=\"$next\"\n          dnl No need to hardcode the standard /usr/lib.\n          if test \"X$dir\" != \"X/usr/$acl_libdirstem\" \\\n             && test \"X$dir\" != \"X/usr/$acl_libdirstem2\"; then\n            rpathdirs=\"$rpathdirs $dir\"\n          fi\n          next=\n        else\n          case $opt in\n            -L) next=yes ;;\n            -L*) dir=`echo \"X$opt\" | sed -e 's,^X-L,,'`\n                 dnl No need to hardcode the standard /usr/lib.\n                 if test \"X$dir\" != \"X/usr/$acl_libdirstem\" \\\n                    && test \"X$dir\" != \"X/usr/$acl_libdirstem2\"; then\n                   rpathdirs=\"$rpathdirs $dir\"\n                 fi\n                 next= ;;\n            *) next= ;;\n          esac\n        fi\n      done\n      if test \"X$rpathdirs\" != \"X\"; then\n        if test -n \"\"$3\"\"; then\n          dnl libtool is used for linking. Use -R options.\n          for dir in $rpathdirs; do\n            $1=\"${$1}${$1:+ }-R$dir\"\n          done\n        else\n          dnl The linker is used for linking directly.\n          if test -n \"$acl_hardcode_libdir_separator\"; then\n            dnl Weird platform: only the last -rpath option counts, the user\n            dnl must pass all path elements in one option.\n            alldirs=\n            for dir in $rpathdirs; do\n              alldirs=\"${alldirs}${alldirs:+$acl_hardcode_libdir_separator}$dir\"\n            done\n            acl_save_libdir=\"$libdir\"\n            libdir=\"$alldirs\"\n            eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n            libdir=\"$acl_save_libdir\"\n            $1=\"$flag\"\n          else\n            dnl The -rpath options are cumulative.\n            for dir in $rpathdirs; do\n              acl_save_libdir=\"$libdir\"\n              libdir=\"$dir\"\n              eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n              libdir=\"$acl_save_libdir\"\n              $1=\"${$1}${$1:+ }$flag\"\n            done\n          fi\n        fi\n      fi\n    fi\n  fi\n  AC_SUBST([$1])\n])\n",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/etc/NEWS.2": "Summary of changes for version 2.1.x:\n------------------------------------\n\n  * Given a matrix, X, and a boolean index, idx, of the same shape as\n    X, X(idx) and X(idx) = RHS now work no matter what the value of\n    do_fortran_indexing is.\n\n  * If you are using GNU Emacs 19.34 or earlier, you will need to add\n    the following code to your ~/.emacs file in order to use Emacs\n    Octave mode:\n\n      ;; Set up the custom library.\n      ;; taken from http://www.dina.kvl.dk/~abraham/custom/\n      (eval-and-compile\n\t(condition-case ()\n\t    (require 'custom)\n\t  (error nil))\n\t(if (and (featurep 'custom) (fboundp 'custom-declare-variable))\n\t    nil ;; We've got what we needed\n\t  ;; We have the old custom-library, hack around it!\n\t  (defmacro defgroup (&rest args)\n\t    nil)\n\t  (defmacro defcustom (var value doc &rest args)\n\t    (` (defvar (, var) (, value) (, doc))))))\n\n  * When `format +' is in effect, Octave uses the following symbols to\n    provide more information about the values in a matrix:\n\n      +      postive real\n      -      negative real\n      i      pure imaginary\n      c      complex\n      blank  zero\n\n  * The ++ and -- operators now work for indexed matrices, and the\n    following operators now work:\n\n      +=, -=, *=, /=, \\=, <<=, >>=, .*=, ./=, .\\=, &=, |=\n\n    These operators are currently implemented using a relatively\n    inefficient brute-force method but hey, they work.\n\n  * The built-in variable argv is now a list of strings instead of a\n    string vector.\n\n  * The value of LOADPATH set by the environment variable\n    OCTAVE_PATH, the -p or --path command line options, or on the\n    command line is no longer modified to include the default path.\n    Instead it is left as specified.  Its default value is now \":\",\n    which tells Octave to search the default path, and the new\n    built-in variable DEFAULT_LOADPATH contains the default list of\n    directories to search.\n\n  * The function file_in_path no longer does any special processing of\n    its PATH argument.  To search LOADPATH for files, it is now\n    generally better to use the new function file_in_loadpath.\n\n  * If fread is given a skip parameter, the skip is performed after\n    the read instead of before (for compatibility with Matlab).\n\n  * The new built-in variable `crash_dumps_octave_core' controls\n    whether Octave writes user variables to the file `octave-core'\n    when it crashes or is killed by a signal.  The default value is 1\n    (0 if you use --traditional).\n\n  * If LOADPATH contains a doubled colon, the default path is inserted\n    in its place.  This is similar to the substitution that also takes\n    place for leading or trailing colons in the LOADPATH.\n\n  * Loops of the form `for i = STRING ... endfor' are now allowed.\n\n  * It is now possible to set the iteration limit for lsode using\n    lsode_options (\"step limit\", N).\n\n  * New functions:\n\n      is_complex  -- tell whether a variable is complex\n      rehash      -- re-initialize the cache of directories in LOADPATH\n      graw        -- send a string to the gnuplot subprocess\n\n  * New functions from Kurt Hornik's Octave-ci package:\n\n    In finance (new directory):\n\n      fv    -- future value of an investment\n      fvl   -- future value of an initial lump sum investment\n      irr   -- internal rate of return of an investment\n      nper  -- number of payments needed for amortizing a loan\n      npv   -- net present value of a series of payments\n      pmt   -- amount of periodic payment needed to amortize a loan\n      pv    -- present value of an investment\n      pvl   -- present value of an investment that pays off at the end\n      rate  -- rate of return of an investment\n      vol   -- volatility of financial time series data\n\n    In linear-algebra:\n\n      dmult -- rescale the rows of a matrix\n\n    In signal:\n\n      arch_fit       -- fit an ARCH regression model\n      arch_rnd       -- simulate an ARCH process\n      arch_test      -- test for conditional heteroscedascity\n      arma_rnd       -- simulate an ARMA process\n      autocor        -- compute autocorrelations\n      autocov        -- compute autocovariances\n      autoreg_matrix -- design matrix for autoregressions\n      bartlett       -- coefficients of the Bartlett (triangular) window\n      blackman       -- coefficients of the Blackman window\n      diffpara       -- estimate the fractional differencing parameter\n      durbinlevinson -- perform one step of the Durbin-Levinson algorithm\n      fractdiff      -- compute fractional differences\n      hamming        -- coefficients of the Hamming window\n      hanning        -- coefficients of the Hanning window\n      hurst          -- estimate the Hurst parameter\n      periodogram    -- compute the periodogram\n      rectangle_lw   -- rectangular lag window\n      rectangle_sw   -- rectangular spectral window\n      sinetone       -- compute a sine tone\n      sinewave       -- compute a sine wave\n      spectral_adf   -- spectral density estimation\n      spectral_xdf   -- spectral density estimation\n      spencer        -- apply Spencer's 15-point MA filter\n      stft           -- short-term Fourier transform\n      synthesis      -- recover a signal from its short-term Fourier transform\n      triangle_lw    -- triangular lag window\n      triangle_sw    -- triangular spectral window\n      yulewalker     -- fit AR model by Yule-Walker method\n\n    In statistics/base (new directory):\n\n      center     -- center by subtracting means\n      cloglog    -- complementary log-log function\n      cor        -- compute correlations\n      cov        -- compute covariances\n      cut        -- cut data into intervals\n      iqr        -- interquartile range\n      kendall    -- kendall's rank correlation tau\n      logit      -- logit transformation\n      mean       -- compute arithmetic, geometric, and harmonic mean\n      meansq     -- compute mean square\n      moment     -- compute moments\n      ppplot     -- perform a PP-plot (probability plot)\n      probit     -- probit transformation\n      qqplot     -- perform a QQ-plot (quantile plot)\n      range      -- compute range\n      ranks      -- compute ranks\n      run_count  -- count upward runs\n      spearman   -- spearman's rank correlation rho\n      statistics -- compute basic statistics\n      studentize -- subtract mean and divide by standard deviation\n      table      -- cross tabulation\n      values     -- extract unique elements\n      var        -- compute variance\n\n    In statistics/distributions (new directory):\n\n      beta_cdf           -- CDF of the Beta distribution\n      beta_inv           -- Quantile function of the Beta distribution\n      beta_pdf           -- PDF of the Beta distribution\n      beta_rnd           -- Random deviates from the Beta distribution\n\n      binomial_cdf       -- CDF of the binomial distribution\n      binomial_inv       -- Quantile function of the binomial distribution\n      binomial_pdf       -- PDF of the binomial distribution\n      binomial_rnd       -- Random deviates from the binomial distribution\n\n      cauchy_cdf         -- CDF of the Cauchy distribution\n      cauchy_inv         -- Quantile function of the Cauchy distribution\n      cauchy_pdf         -- PDF of the Cauchy distribution\n      cauchy_rnd         -- Random deviates from the Cauchy distribution\n\n      chisquare_cdf      -- CDF of the chi-square distribution\n      chisquare_inv      -- Quantile function of the chi-square distribution\n      chisquare_pdf      -- PDF of the chi-square distribution\n      chisquare_rnd      -- Random deviates from the chi-square distribution\n\n      discrete_cdf       -- CDF of a discrete distribution\n      discrete_inv       -- Quantile function of a discrete distribution\n      discrete_pdf       -- PDF of a discrete distribution\n      discrete_rnd       -- Random deviates from a discrete distribution\n\n      empirical_cdf      -- CDF of the empirical distribution\n      empirical_inv      -- Quantile function of the empirical distribution\n      empirical_pdf      -- PDF of the empirical distribution\n      empirical_rnd      -- Bootstrap samples from the empirical distribution\n\n      exponential_cdf    -- CDF of the exponential distribution\n      exponential_inv    -- Quantile function of the exponential distribution\n      exponential_pdf    -- PDF of the exponential distribution\n      exponential_rnd    -- Random deviates from the exponential distribution\n\n      f_cdf              -- CDF of the F distribution\n      f_inv              -- Quantile function of the F distribution\n      f_pdf              -- PDF of the F distribution\n      f_rnd              -- Random deviates from the F distribution\n\n      gamma_cdf          -- CDF of the Gamma distribution\n      gamma_inv          -- Quantile function of the Gamma distribution\n      gamma_pdf          -- PDF of the Gamma distribution\n      gamma_rnd          -- Random deviates from the Gamma distribution\n\n      geometric_cdf      -- CDF of the geometric distribution\n      geometric_inv      -- Quantile function of the geometric distribution\n      geometric_pdf      -- PDF of the geometric distribution\n      geometric_rnd      -- Random deviates from the geometric distribution\n\n      hypergeometric_cdf -- CDF of the hypergeometric distribution\n      hypergeometric_inv -- Random deviates from hypergeometric distribution\n      hypergeometric_pdf -- PDF of the hypergeometric distribution\n      hypergeometric_rnd -- Random deviates from hypergeometric distribution\n\n      kolmogorov_smirnov_cdf -- CDF of the Kolmogorov-Smirnov distribution\n\n      laplace_cdf        -- CDF of the Laplace distribution\n      laplace_inv        -- Quantile function of the Laplace distribution\n      laplace_pdf        -- PDF of the Laplace distribution\n      laplace_rnd        -- Random deviates from the Laplace distribution\n\n      logistic_cdf       -- CDF of the logistic distribution\n      logistic_inv       -- Quantile function of the logistic distribution\n      logistic_pdf       -- PDF of the logistic distribution\n      logistic_rnd       -- Random deviates from the logistic distribution\n\n      lognormal_cdf      -- CDF of the log normal distribution\n      lognormal_inv      -- Quantile function of the log normal distribution\n      lognormal_pdf      -- PDF of the log normal distribution\n      lognormal_rnd      -- Random deviates from the log normal distribution\n\n      normal_cdf         -- CDF of the normal distribution\n      normal_inv         -- Quantile function of the normal distribution\n      normal_pdf         -- PDF of the normal distribution\n      normal_rnd         -- Random deviates from the normal distribution\n\n      pascal_cdf         -- CDF of the Pascal (negative binomial) distribution\n      pascal_inv         -- Quantile function of the Pascal distribution\n      pascal_pdf         -- PDF of the Pascal (negative binomial) distribution\n      pascal_rnd         -- Random deviates from the Pascal distribution\n\n      poisson_cdf        -- CDF of the Poisson distribution\n      poisson_inv        -- Quantile function of the Poisson distribution\n      poisson_pdf        -- PDF of the Poisson distribution\n      poisson_rnd        -- Random deviates from the Poisson distribution\n\n      stdnormal_cdf      -- CDF of the standard normal distribution\n      stdnormal_inv      -- Quantile function of standard normal distribution\n      stdnormal_pdf      -- PDF of the standard normal distribution\n      stdnormal_rnd      -- Random deviates from standard normal distribution\n\n      t_cdf              -- CDF of the t distribution\n      t_inv              -- Quantile function of the t distribution\n      t_pdf              -- PDF of the t distribution\n      t_rnd              -- Random deviates from the t distribution\n\n      uniform_cdf        -- CDF of the uniform distribution\n      uniform_inv        -- Quantile function of the uniform distribution\n      uniform_pdf        -- PDF of the uniform distribution\n      uniform_rnd        -- Random deviates from the uniform distribution\n\n      weibull_cdf        -- CDF of the Weibull distribution\n      weibull_inv        -- Quantile function of the Weibull distribution\n      weibull_pdf        -- PDF of the Weibull distribution\n      weibull_rnd        -- Random deviates from the Weibull distribution\n\n      wiener_rnd         -- Simulate a Wiener process\n\n    In statistics/models (new directory):\n\n      logistic_regression             -- ordinal logistic regression\n      logistic_regression_derivatives -- derivates of log-likelihood\n                                         in logistic regression\n      logistic_regression_likelihood  -- likelihood in logistic regression\n\n    In statistics/tests (new directory):\n\n      anova                       -- one-way analysis of variance\n      bartlett_test               -- bartlett test for homogeneity of variances\n      chisquare_test_homogeneity  -- chi-square test for homogeneity\n      chisquare_test_independence -- chi-square test for independence\n      cor_test                    -- test for zero correlation\n      f_test_regression           -- test linear hypotheses in linear\n                                     regression model\n      hotelling_test              -- test for mean of a multivariate normal\n      hotelling_test_2            -- compare means of two multivariate normals\n      kolmogorov_smirnov_test     -- one-sample Kolmogorov-Smirnov test\n      kolmogorov_smirnov_test_2   -- two-sample Kolmogorov-Smirnov test\n      kruskal_wallis_test         -- kruskal-Wallis test\n      manova                      -- one-way multivariate analysis of variance\n      mcnemar_test                -- mcnemar's test for symmetry\n      prop_test_2                 -- compare two proportions\n      run_test                    -- run test for independence\n      sign_test                   -- sign test\n      t_test                      -- student's one-sample t test\n      t_test_2                    -- student's two-sample t test\n      t_test_regression           -- test one linear hypothesis in linear\n                                     regression model\n      u_test                      -- mann-Whitney U-test\n      var_test                    -- f test to compare two variances\n      welch_test                  -- welch two-sample t test\n      wilcoxon_test               -- wilcoxon signed-rank test\n      z_test                      -- test for mean of a normal sample with\n                                     known variance\n      z_test_2                    -- compare means of two normal samples with\n                                     known variances\n\n  * The save command now accepts the option -append to save the\n    variables at the end of the file, leaving the existing contents.\n\n  * New command-line option --no-history (also available using the\n    single character option -H) inhibits saving command history.\n\n  * The mkoctfile script now accepts -DDEF options and passes them on\n    to the C and C++ compilers.\n\n  * Running `make check' should work now before you run `make install',\n    even if you build a copy of Octave that depends on shared versions\n    of the Octave libraries.\n\n  * For matrices, x(:) now works and returns a column vector no matter\n    what the value of do_fortran_indexing is.\n\n  * New keywords __FILE__ and __LINE__ expand to the name of the file\n    that is being read and the current input line number, respectively.\n\n  * Octave's expression parser is more general and consistent.  It is\n    now possible to access structure elements and index arbitrary\n    values.  For example, expressions like\n\n      my_home_dir = getpwuid (getuid ()) . dir;\n\n    and\n\n      svd (x) (1:5)\n\n    now work.\n\n  * New built-in variable `print_rhs_assign_val' controls what is\n    printed when an assignment expression is evaluated.  If it is\n    zero, the value of the variable on the left hand side (after the\n    assignment) is printed.  If it is nonzero, the value of the right\n    hand side (i.e., the result of the expression) is printed.  The\n    default value of is zero, so the behavior is the same as in\n    previous versions of Octave.\n\n  * tmpnam now takes two optional arguments, DIR, and PREFIX.  For\n    example, tmpnam (\"/foo\", \"bar-\") returns a file name like\n    \"/foo/bar-10773baa\".  If DIR is omitted or empty, the value of the\n    environment variable TMPDIR, or /tmp is used.  If PREFIX is\n    omitted, \"oct-\" is used.\n\n  * The built-in variable `PWD' has been removed.  If you need to get\n    the value of the current working directory, use the pwd() function\n    instead.\n\n  * New operators.  Octave's parser now recognizes the following\n    operators:  << >> += -= *= /= .+= .-= .*= ./= &= |= <<= >>=.  So\n    far, there are only a few operations defined that actually use\n    them (this should change before 2.1 is released).\n\n  * New built-in data types:\n\n    logical:\n\n      A true value is represented by 1, and false value by 0.\n      Comparison operations like <, <=, ==, >, >=, and != now return\n      logical values.  Indexing operations that use zero-one style\n      indexing must now use logical values.  You can use the new\n      function logical() to convert a numeric value to a logical\n      value.  This avoids the need for the built-in variable\n      `prefer_zero_one_indexing', so it has been removed.  Logical\n      values are automatically converted to numeric values where\n      appropriate.\n\n    file:\n\n      A file object represents an open Octave stream object.  The\n      fopen function now returns a file object instead of an integer.\n      File objects can be converted to integers automatically, and the\n      other functions that work with file ids still work with\n      integers, so this change should be backward compatible.\n\n      The binary left-shift operator `<<' has been defined to work as\n      in C++ for file objects and built-in types.  For example,\n\n        my_stream = fopen (\"foo\", \"w\");\n        my_stream << \"x = \" << pi << \" marks the spot\\n\";\n\n      writes `x = 3.1416 marks the spot' in the file foo.\n\n      The built-in variables stdin, stdout, and stderr are now also\n      file objects instead of integers.\n\n    list:\n\n      A list is an array of Octave objects.  It can be indexed using\n      the normal indexing operator.  For example,\n\n        x = list ([1,2;3,4], 1, \"foo\");\n        stdout << x(2) << \"\\n\"\n        1\n        stdout << x;\n        (\n         [1] =\n\n           1  2\n           3  4\n\n          [2] = 1\n          [3] = foo\n        )\n\n      There is currently no special syntax for creating lists; you\n      must use the list function.\n\n  * Commas in global statements are no longer special.  They are now\n    treated as command separators.  This removes a conflict in the\n    grammar and is consistent with the way Matlab behaves.  The\n    variable `warn_comma_in_global_decl' has been eliminated.\n\n  * It is now possible to declare static variables that retain their\n    values across function calls.  For example,\n\n      function ncall = f () static n = 0; ncall = ++n; endfunction\n\n    defines a function that returns the number of times that it has\n    been called.\n\n  * Within user-defined functions, the new automatic variable `argn'\n    contains the names of the arguments that were passed to the\n    function.  For example,\n\n      function f (...)\n        for i = 1:nargin\n          stdout << \"argn(\" << i << \") = `\" << deblank (argn(i,:)) \\\n                 << \"' and its value is \" << va_arg () << \"\\n\";\n        endfor\n      endfunction\n      f (1+2, \"foo\", sin (pi/2))\n\n    prints\n\n      argn(1) = `1 + 2' and its value is 3\n      argn(2) = `\"foo\"' and its value is foo\n      argn(3) = `sin (pi)' and its value is 1\n\n    on the standard output stream.  If nargin is zero, argn is not defined.\n  * Functions like quad, fsolve, and lsode can take either a function\n    name or a simple function body as a string.  For example,\n\n      quad (\"sqrt (x)\", 0, 1)\n\n    is equivalent to\n\n      function y = f (x) y = sqrt (x); endfunction\n      quad (\"f\", 0, 1)\n\n  * If the argument to eig() is symmetric, Octave uses the specialized\n    Lapack subroutine for symmetric matrices for a significant\n    increase in performance.\n\n  * If the argument to lsode that names the user-supplied function is\n    a 2-element string array, the second element is taken as the name\n    of the Jacobian function.  The named function should have the\n    following form:\n\n      JAC = f (X, T)\n\n    where JAC is the Jacobian matrix of partial derivatives of the\n    right-hand-side functions that define the set of differential\n    equations with respect to the state vector X.\n\n  * Global variables are now initialized to the empty matrix, for\n    compatibility with Matlab.\n\n  * Explicit initialization of global variables only happens once.\n    For example, after the following statements are evaluated, g still\n    has the value 1.\n\n      global g = 1\n      global g = 2\n\n    This is useful for initializing global variables that are used to\n    maintain state information that is shared among several functions.\n\n  * Structure elements completion on the command line actually works\n    now.\n\n  * The new built-in variable `fixed_point_format' controls whether\n    Octave uses a scaled fixed-point format for displaying matrices.\n    The default value is 0 unless you use --traditional.\n\n  * The function sumsq now computes sum (x .* conj (x)) for complex values.\n\n  * The new built-in variable max_recursion_depth allows you to\n    prevent Octave from attempting infinite recursion.  The default\n    value is 256.\n\n  * Octave now uses kpathsea 3.2.\n\n  * New configure option, --enable-readline.\n\n  * New configure option, --enable-static.\n\nSummary of changes for version 2.0.7:\n------------------------------------\n\n  This is a bug-fixing release.  There are no new user-visible features.\n\nSummary of changes for version 2.0.6:\n------------------------------------\n\n  This is primarily a bug-fixing release.  There are only a few new\n  user-visible features.\n\n  * The new built-in variable default_eval_print_flag controls whether\n    Octave prints the results of commands executed by eval() that do\n    not end with semicolons.  The default is 1.\n\n  * The new built-in constant OCTAVE_HOME specifies the top-level\n    directory where Octave is installed.\n\n  * Octave no longer includes functions to work with NPSOL or QPSOL,\n    because they are not free software.\n\n  * The new built-in variable called kluge_procbuf_delay specifies the\n    number of microseconds to delay in the parent process after\n    forking.  By default on gnu-win32 systems, it's set to 500000 (1/2\n    second).  On other systems, the default value is 0.  Delaying for\n    a short time in the parent after forking seems to avoid problems\n    in which communicating with subprocesses via pipes would sometimes\n    cause Octave to hang.  I doubt that the delay is really the right\n    solution.  If anyone has a better idea, I'd love to hear it.\n\nSummary of changes for version 2.0.5:\n------------------------------------\n\n  * A `switch' statement is now available.  See the Statements chapter\n    in the manual for details.\n\n  * Commands like ls, save, and cd may now also be used as formal\n    parameters for functions.\n\n  * More tests.\n\nSummary of changes for version 2.0.4:\n------------------------------------\n\n  * It is now possible to use commands like ls, save, and cd as simple\n    variable names.  They still cannot be used as formal parameters\n    for functions, or as the names of structure variables.  Failed\n    assignments leave them undefined (you can recover the original\n    function definition using clear).\n\n  * Is is now possible to invoke commands like ls, save, and cd as\n    normal functions (for example, load (\"foo\", \"x\", \"y\", \"z\")).\n\nSummary of changes for version 2.0.3:\n------------------------------------\n\n  * The manual has been completely revised and now corresponds much\n    more closely to the features of the current version.\n\n  * The return value for assignment expressions is now the RHS since\n    that is more consistent with the way other programming languages\n    work.  However, Octave still prints the entire LHS value so that\n\n      x = zeros (1, 2);\n      x(2) = 1\n\n    still prints\n\n      x =\n\n        0  1\n\n    but an assignment like\n\n      z = x(2) = 1\n\n    sets z to 1 (not [ 0, 1 ] as in previous versions of Octave).\n\n  * It is now much easier to make binary distributions.  See the\n    Binary Distributions section of the manual for more details.\n\nSummary of changes for version 2.0.2:\n------------------------------------\n\n  * Octave now stops executing commands from a script file if an error\n    is encountered.\n\n  * The return, and break commands now cause Octave to quit executing\n    commands from script files.  When used in invalid contexts, the\n    break, continue, and return commands are now simply ignored\n    instead of producing parse errors.\n\n  * size (\"\") is now [0, 0].\n\n  * New functions:\n\n      sleep   -- pause execution for a specified number of seconds\n      usleep  -- pause execution for a specified number of microseconds\n\nSummary of changes for version 2.0:\n----------------------------------\n\n  * The set and show commands for setting and displaying gnuplot\n    parameters have been replaced by gset and gshow.  This change will\n    probably break lots of things, but it is necessary to allow for\n    compatibility with the Matlab graphics and GUI commands in a\n    future version of Octave.  (For now, the old set and show commands\n    do work, but they print an annoying warning message to try to get\n    people to switch to using gset.)\n\n  * Octave has been mostly ported to Windows NT and Windows 95 using\n    the beta 17 release of the Cygnus GNU-WIN32 tools.  Not everything\n    works, but it is usable.  See the file README.WINDOWS for more\n    information.\n\n  * Dynamic linking works on more systems using dlopen() and friends\n    (most modern Unix systems) or shl_load() and friends (HP/UX\n    systems).  A simple example is provided in examples/hello.cc.\n    For this feature to work, you must configure Octave with\n    --enable-shared.  You may also need to have a shared-library\n    version of libg++ and libstdc++.\n\n  * New data types can be added to Octave by writing a C++ class.  On\n    systems that support dynamic linking, new data types can be added\n    to an already running Octave binary.  A simple example appears in\n    the file examples/make_int.cc.  Other examples are the standard\n    Octave data types defined in the files src/ov*.{h,cc} and\n    src/op-*.cc.\n\n  * The configure option --enable-bounds-check turns on bounds\n    checking on element references for Octave's internal array and\n    matrix classes.  It's enabled by default.  To disable this\n    feature, configure Octave with --disable-bounds-check.\n\n  * The C-style I/O functions (fopen, fprintf, etc.) have been\n    rewritten to be more compatible with Matlab.  The fputs function\n    has also been added.  Usage of the *printf functions that was\n    allowed in previous versions of Octave should still work.\n    However, there is no way to make the new versions of the *scanf\n    functions compatible with Matlab *and* previous versions of\n    Octave.  An optional argument to the *scanf functions is now\n    available to make them behave in a way that is compatible with\n    previous versions of Octave.\n\n  * Octave can now read files that contain columns of numbers only,\n    with no header information.  The name of the loaded variable is\n    constructed from the file name.  Each line in the file must have\n    the same number of elements.\n\n  * The interface to the pager has changed.  The new built-in variable\n    `page_output_immediately' controls when Octave sends output to the\n    pager.  If it is nonzero, Octave sends output to the pager as soon\n    as it is available.  Otherwise, Octave buffers its output and\n    waits until just before the prompt is printed to flush it to the\n    pager.\n\n  * Expressions of the form\n\n      A(i,j) = x\n\n    where X is a scalar and the indices i and j define a matrix of\n    elements now work as you would expect rather than giving an error.\n    I am told that this is how Matlab 5.0 will behave when it is\n    released.\n\n  * Indexing of character strings now works.\n\n  * The echo command has been implemented.\n\n  * The document command is now a regular function.\n\n  * New method for handling errors:\n\n      try\n        BODY\n      catch\n        CLEANUP\n      end_try_catch\n\n    Where BODY and CLEANUP are both optional and may contain any\n    Octave expressions or commands.  The statements in CLEANUP are\n    only executed if an error occurs in BODY.\n\n    No warnings or error messages are printed while BODY is\n    executing.  If an error does occur during the execution of BODY,\n    CLEANUP can access the text of the message that would have been\n    printed in the builtin constant __error_text__.  This is the same\n    as eval (TRY, CATCH) (which may now also use __error_text__) but\n    it is more efficient since the commands do not need to be parsed\n    each time the TRY and CATCH statements are evaluated.\n\n  * Octave no longer parses the help command by grabbing everything\n    after the keyword `help' until a newline character is read.  To\n    get help for `;' or `,', now, you need to use the command\n    `help semicolon' or `help comma'.\n\n  * Octave's parser now does some simple constant folding.  This means\n    that expressions like 3*i are now evaluated only once, when a\n    function is compiled, and the right hand side of expressions like\n    a = [1,2;3,4] are treated as true matrix constants rather than\n    lists of elements which must be evaluated each time they are\n    needed.\n\n  * Built-in variables that can take values of \"true\" and \"false\" can\n    now also be set to any nonzero scalar value to indicate \"true\",\n    and 0 to indicate \"false\".\n\n  * New built-in variables `history_file', `history_size', and\n    `saving_history'.\n\n  * New built-in variable `string_fill_char' specifies the character\n    to fill with when creating arrays of strings.\n\n  * If the new built-in variable `gnuplot_has_frames' is nonzero,\n    Octave assumes that your copy of gnuplot includes support for\n    multiple plot windows when using X11.\n\n    If the new built-in variable `gnuplot_has_multiplot' is nonzero,\n    Octave assumes that your copy of gnuplot has the multiplot support\n    that is included in recent 3.6beta releases.\n\n    The initial values of these variables are determined by configure,\n    but can be changed in your startup script or at the command line\n    in case configure got it wrong, or if you upgrade your gnuplot\n    installation.\n\n  * The new plot function `figure' allows multiple plot windows when\n    using newer versions of gnuplot with X11.\n\n  * Octave now notices when the plotter has exited unexpectedly.\n\n  * New built-in variable `warn_missing_semicolon'.  If nonzero, Octave\n    will warn when statements in function definitions don't end in\n    semicolons.  The default value is 0.\n\n  * Octave now attempts to continue after floating point exceptions\n    or out-of-memory errors.\n\n  * If Octave crashes, it now attempts to save all user-defined\n    variables in a file named `octave-core' in the current directory\n    before exiting.\n\n  * It is now possible to get the values of individual option settings\n    for the dassl, fsolve, lsode, npsol, qpsol, and quad functions\n    using commands like\n\n      dassl_reltol = dassl_options (\"relative tolerance\");\n\n  * The svd() function no longer computes the left and right singular\n    matrices unnecessarily.  This can significantly improve\n    performance for large matrices if you are just looking for the\n    singular values.\n\n  * The filter() function is now a built-in function.\n\n  * New function randn() returns a pseudo-random number from a normal\n    distribution.  The rand() and randn() functions have separate\n    seeds and generators.\n\n  * Octave's command-line arguments are now available in the built-in\n    variable `argv'.  The program name is also available in the\n    variables `program_invocation_name' and `program_name'.  If\n    executing a script from the command line (e.g., octave foo.m) or\n    using the `#! /bin/octave' hack, the program name is set to the\n    name of the script.\n\n  * New built-in variable `completion_append_char' used as the\n    character to append to successful command-line completion\n    attempts.  The default is \" \" (a single space).\n\n  * Octave now uses a modified copy of the readline library from\n    version 1.14.5 of GNU bash.\n\n  * In prompt strings, `\\H' expands to the whole host name.\n\n  * New built-in variable `beep_on_error'.  If nonzero, Octave will try\n    to ring your terminal's bell before printing an error message.\n    The default value is 0.\n\n  * For functions defined from files, the type command now prints the\n    text of the file.  You can still get the text reconstructed from\n    the parse tree by using the new option -t (-transformed).\n\n  * New command-line argument --traditional sets the following\n    preference variables for compatibility with Matlab:\n\n      PS1                           = \">> \"\n      PS2                           = \"\"\n      beep_on_error                 = 1\n      default_save_format           = \"mat-binary\"\n      define_all_return_values      = 1\n      do_fortran_indexing           = 1\n      empty_list_elements_ok        = 1\n      implicit_str_to_num_ok        = 1\n      ok_to_lose_imaginary_part     = 1\n      page_screen_output            = 0\n      prefer_column_vectors         = 0\n      prefer_zero_one_indexing      = 1\n      print_empty_dimensions        = 0\n      treat_neg_dim_as_zero         = 1\n      warn_function_name_clash      = 0\n      whitespace_in_literal_matrix  = \"traditional\"\n\n  * New functions:\n\n      readdir  -- returns names of files in directory as array of strings\n      mkdir    -- create a directory\n      rmdir    -- remove a directory\n      rename   -- rename a file\n      unlink   -- delete a file\n      umask    -- set permission mask for file creation\n      stat     -- get information about a file\n      lstat    -- get information about a symbolic link\n      glob     -- perform filename globbing\n      fnmatch  -- match strings with filename globbing patterns\n      more     -- turn the pager on or off\n      gammaln  -- alias for lgamma\n\n  * New audio functions from Andreas Weingessel\n    <Andreas.Weingessel@ci.tuwien.ac.at>.\n\n      lin2mu     -- linear to mu-law encoding\n      loadaudio  -- load an audio file to a vector\n      mu2lin     -- mu-law to linear encoding\n      playaudio  -- play an audio file\n      record     -- record sound and store in vector\n      saveaudio  -- save a vector as an audio file\n      setaudio   -- executes mixer shell command\n\n  * New plotting functions from Vinayak Dutt.  Ones dealing with\n    multiple plots on one page require features from gnuplot 3.6beta\n    (or later).\n\n      bottom_title  -- put title at the bottom of the plot\n      mplot         -- multiplot version of plot\n      multiplot     -- switch multiple-plot mode on or off\n      oneplot       -- return to one plot per page\n      plot_border   -- put a border around plots\n      subplot       -- position multiple plots on a single page\n      subwindow     -- set subwindow position for next plot\n      top_title     -- put title at the top of the plot\n      zlabel        -- put a label on the z-axis\n\n  * New string functions\n\n      bin2dec  -- convert a string of ones and zeros to an integer\n      blanks   -- create a string of blanks\n      deblank  -- delete trailing blanks\n      dec2bin  -- convert an integer to a string of ones and zeros\n      dec2hex  -- convert an integer to a hexadecimal string\n      findstr  -- locate occurrences of one string in another\n      hex2dec  -- convert a hexadecimal string to an integer\n      index    -- return position of first occurrence a string in another\n      rindex   -- return position of last occurrence a string in another\n      split    -- divide one string into pieces separated by another\n      str2mat  -- create a string matrix from a list of strings\n      strrep   -- replace substrings in a string\n      substr   -- extract a substring\n\n    The following functions return a matrix of ones and zeros.\n    Elements that are nonzero indicate that the condition was true for\n    the corresponding character in the string array.\n\n      isalnum   -- letter or a digit\n      isalpha   -- letter\n      isascii   -- ascii\n      iscntrl   -- control character\n      isdigit   -- digit\n      isgraph   -- printable (but not space character)\n      islower   -- lower case\n      isprint   -- printable (including space character)\n      ispunct   -- punctuation\n      isspace   -- whitespace\n      isupper   -- upper case\n      isxdigit  -- hexadecimal digit\n\n    These functions return new strings.\n\n      tolower  -- convert to lower case\n      toupper  -- convert to upper case\n\n  * New function, fgetl.  Both fgetl and fgets accept an optional\n    second argument that specifies a maximum number of characters to\n    read, and the function fgets is now compatible with Matlab.\n\n  * Printing in hexadecimal format now works (format hex).  It is also\n    possible to print the internal bit representation of a value\n    (format bit).  Note that these formats are only implemented for\n    numeric values.\n\n  * Additional structure features:\n\n    -- Name completion now works for structures.\n\n    -- Values and names of structure elements are now printed by\n       default.  The new built-in variable `struct_levels_to_print'\n       controls the depth of nested structures to print.  The default\n       value is 2.\n\n    -- New functions:\n\n       struct_contains (S, NAME) -- returns 1 if S is a structure with\n                                    element NAME; otherwise returns 0.\n\n       struct_elements (S)       -- returns the names of all elements\n                                    of structure S in an array of strings.\n\n  * New io/subprocess functions:\n\n      fputs    -- write a string to a file with no formatting\n      popen2   -- start a subprocess with 2-way communication\n      mkfifo   -- create a FIFO special file\n      popen    -- open a pipe to a subprocess\n      pclose   -- close a pipe from a subprocess\n      waitpid  -- check the status of or wait for subprocesses\n\n  * New time functions:\n\n      asctime    -- format time structure according to local format\n      ctime      -- equivalent to `asctime (localtime (TMSTRUCT))'\n      gmtime     -- return time structure corresponding to UTC\n      localtime  -- return time structure corresponding to local time zone\n      strftime   -- print given time structure using specified format\n      time       -- return current time\n\n    The `clock' and `date' functions are now implemented in M-files\n    using these basic functions.\n\n  * Access to additional Unix system calls:\n\n      dup2     -- duplicate a file descriptor\n      exec     -- replace current process with a new process\n      fcntl    -- control open file descriptors\n      fork     -- create a copy of the current process\n      getpgrp  -- return the process group id of the current process\n      getpid   -- return the process id of the current process\n      getppid  -- return the process id of the parent process\n      getuid   -- return the real user id of the current process\n      getgid   -- return the real group id of the current process\n      geteuid  -- return the effective user id of the current process\n      getegid  -- return the effective group id of the current process\n      pipe     -- create an interprocess channel\n\n  * Other new functions:\n\n      commutation_matrix  -- compute special matrix form\n      duplication_matrix  -- compute special matrix form\n      common_size.m       -- bring arguments to a common size\n      completion_matches  -- perform command completion on string\n      tilde_expand        -- perform tilde expansion on string\n\n      meshgrid  -- compatible with Matlab's meshgrid function\n      tmpnam    -- replaces octave_tmp_file_name\n      atexit    -- register functions to be called when Octave exits\n      putenv    -- define an environment variable\n      bincoeff  -- compute binomial coefficients\n      nextpow2  -- compute the next power of 2 greater than a number\n      detrend   -- remove a best fit polynomial from data\n      erfinv    -- inverse error function\n      shift     -- perform a circular shift on the elements of a matrix\n      pow2      -- compute 2 .^ x\n      log2      -- compute base 2 logarithms\n      diff      -- compute differences of matrix elements\n      vech      -- stack columns of a matrix below the diagonal\n      vec       -- stack columns of a matrix to form a vector\n      xor       -- compute exclusive or\n\n  * Functions for getting info from the password database on Unix systems:\n\n      getpwent  -- read entry from password-file stream, opening if necessary\n      getpwuid  -- search for password entry with matching user ID\n      getpwnam  -- search for password entry with matching username\n      setpwent  -- rewind the password-file stream\n      endpwent  -- close the password-file stream\n\n  * Functions for getting info from the group database on Unix systems:\n\n      getgrent  -- read entry from group-file stream, opening if necessary\n      getgrgid  -- search for group entry with matching group ID\n      getgrnam  -- search for group entry with matching group name\n      setgrent  -- rewind the group-file stream\n      endgrent  -- close the group-file stream\n\n  * The New function octave_config_info returns a structure containing\n    information about how Octave was configured and compiled.\n\n  * New function getrusage returns a structure containing system\n    resource usage statistics.  The `cputime' function is now defined\n    in an M-file using getrusage.\n\n  * The info reader is now a separate binary that runs as a\n    subprocess.  You still need the info reader distributed with\n    Octave though, because there are some new command-line arguments\n    that are not yet available in the public release of Info.\n\n  * There is a new built-in variable, INFO_PROGRAM, which is used as\n    the name of the info program to run.  Its initial value is\n    $OCTAVE_HOME/lib/octave/VERSION/exec/ARCH/info, but that value can\n    be overridden by the environment variable OCTAVE_INFO_PROGRAM, or\n    the command line argument --info-program NAME, or by setting the\n    value of INFO_PROGRAM in a startup script.\n\n  * There is a new built-in variable, EXEC_PATH, which is used as\n    the list of directories to search when executing subprograms.  Its\n    initial value is taken from the environment variable\n    OCTAVE_EXEC_PATH (if it exists) or PATH, but that value can be\n    overridden by the command line argument --exec-path PATH, or\n    by setting the value of EXEC_PATH in a startup script.  If the\n    EXEC_PATH begins (ends) with a colon, the directories\n    $OCTAVE_HOME/lib/octave/VERSION/exec/ARCH and $OCTAVE_HOME/bin are\n    prepended (appended) to EXEC_PATH (if you don't specify a value\n    for EXEC_PATH explicitly, these special directories are prepended\n    to your PATH).\n\n  * If it is present, Octave will now use an `ls-R' database file to\n    speed up recursive path searching.  Octave looks for a file called\n    ls-R in the directory specified by the environment variable\n    OCTAVE_DB_DIR.  If that is not set but the environment variable\n    OCTAVE_HOME is set, Octave looks in $OCTAVE_HOME/lib/octave.\n    Otherwise, Octave looks in the directory $datadir/octave (normally\n    /usr/local/lib/octave).\n\n  * New examples directory.\n\n  * There is a new script, mkoctfile, that can be used to create .oct\n    files suitable for dynamic linking.\n\n  * Many more bug fixes.\n\n  * ChangeLogs are now kept in each subdirectory.\n\nSee NEWS.1 for old news.\n",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/build-aux/ltmain.sh": "#! /bin/sh\n## DO NOT EDIT - This file generated from ./build-aux/ltmain.in\n##               by inline-source v2014-01-03.01\n\n# libtool (GNU libtool) 2.4.6\n# Provide generalized library-building support services.\n# Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n\n# Copyright (C) 1996-2015 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\nPROGRAM=libtool\nPACKAGE=libtool\nVERSION=\"2.4.6 Debian-2.4.6-2\"\npackage_revision=2.4.6\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# Run './libtool --help' for help with using this script from the\n# command line.\n\n\n## ------------------------------- ##\n## User overridable command paths. ##\n## ------------------------------- ##\n\n# After configure completes, it has a better idea of some of the\n# shell tools we need than the defaults used by the functions shared\n# with bootstrap, so set those here where they can still be over-\n# ridden by the user, but otherwise take precedence.\n\n: ${AUTOCONF=\"autoconf\"}\n: ${AUTOMAKE=\"automake\"}\n\n\n## -------------------------- ##\n## Source external libraries. ##\n## -------------------------- ##\n\n# Much of our low-level functionality needs to be sourced from external\n# libraries, which are installed to $pkgauxdir.\n\n# Set a version string for this script.\nscriptversion=2015-01-20.17; # UTC\n\n# General shell script boiler plate, and helper functions.\n# Written by Gary V. Vaughan, 2004\n\n# Copyright (C) 2004-2015 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n\n# As a special exception to the GNU General Public License, if you distribute\n# this file as part of a program or library that is built using GNU Libtool,\n# you may include this file under the same distribution terms that you use\n# for the rest of that program.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNES FOR A PARTICULAR PURPOSE. See the GNU\n# General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program. If not, see <http://www.gnu.org/licenses/>.\n\n# Please report bugs or propose patches to gary@gnu.org.\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# Evaluate this file near the top of your script to gain access to\n# the functions and variables defined here:\n#\n#   . `echo \"$0\" | ${SED-sed} 's|[^/]*$||'`/build-aux/funclib.sh\n#\n# If you need to override any of the default environment variable\n# settings, do that before evaluating this file.\n\n\n## -------------------- ##\n## Shell normalisation. ##\n## -------------------- ##\n\n# Some shells need a little help to be as Bourne compatible as possible.\n# Before doing anything else, make sure all that help has been provided!\n\nDUALCASE=1; export DUALCASE # for MKS sh\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in *posix*) set -o posix ;; esac\nfi\n\n# NLS nuisances: We save the old values in case they are required later.\n_G_user_locale=\n_G_safe_locale=\nfor _G_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\ndo\n  eval \"if test set = \\\"\\${$_G_var+set}\\\"; then\n          save_$_G_var=\\$$_G_var\n          $_G_var=C\n\t  export $_G_var\n\t  _G_user_locale=\\\"$_G_var=\\\\\\$save_\\$_G_var; \\$_G_user_locale\\\"\n\t  _G_safe_locale=\\\"$_G_var=C; \\$_G_safe_locale\\\"\n\tfi\"\ndone\n\n# CDPATH.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n# Make sure IFS has a sensible default\nsp=' '\nnl='\n'\nIFS=\"$sp\t$nl\"\n\n# There are apparently some retarded systems that use ';' as a PATH separator!\nif test \"${PATH_SEPARATOR+set}\" != set; then\n  PATH_SEPARATOR=:\n  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {\n    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||\n      PATH_SEPARATOR=';'\n  }\nfi\n\n\n\n## ------------------------- ##\n## Locate command utilities. ##\n## ------------------------- ##\n\n\n# func_executable_p FILE\n# ----------------------\n# Check that FILE is an executable regular file.\nfunc_executable_p ()\n{\n    test -f \"$1\" && test -x \"$1\"\n}\n\n\n# func_path_progs PROGS_LIST CHECK_FUNC [PATH]\n# --------------------------------------------\n# Search for either a program that responds to --version with output\n# containing \"GNU\", or else returned by CHECK_FUNC otherwise, by\n# trying all the directories in PATH with each of the elements of\n# PROGS_LIST.\n#\n# CHECK_FUNC should accept the path to a candidate program, and\n# set $func_check_prog_result if it truncates its output less than\n# $_G_path_prog_max characters.\nfunc_path_progs ()\n{\n    _G_progs_list=$1\n    _G_check_func=$2\n    _G_PATH=${3-\"$PATH\"}\n\n    _G_path_prog_max=0\n    _G_path_prog_found=false\n    _G_save_IFS=$IFS; IFS=${PATH_SEPARATOR-:}\n    for _G_dir in $_G_PATH; do\n      IFS=$_G_save_IFS\n      test -z \"$_G_dir\" && _G_dir=.\n      for _G_prog_name in $_G_progs_list; do\n        for _exeext in '' .EXE; do\n          _G_path_prog=$_G_dir/$_G_prog_name$_exeext\n          func_executable_p \"$_G_path_prog\" || continue\n          case `\"$_G_path_prog\" --version 2>&1` in\n            *GNU*) func_path_progs_result=$_G_path_prog _G_path_prog_found=: ;;\n            *)     $_G_check_func $_G_path_prog\n\t\t   func_path_progs_result=$func_check_prog_result\n\t\t   ;;\n          esac\n          $_G_path_prog_found && break 3\n        done\n      done\n    done\n    IFS=$_G_save_IFS\n    test -z \"$func_path_progs_result\" && {\n      echo \"no acceptable sed could be found in \\$PATH\" >&2\n      exit 1\n    }\n}\n\n\n# We want to be able to use the functions in this file before configure\n# has figured out where the best binaries are kept, which means we have\n# to search for them ourselves - except when the results are already set\n# where we skip the searches.\n\n# Unless the user overrides by setting SED, search the path for either GNU\n# sed, or the sed that truncates its output the least.\ntest -z \"$SED\" && {\n  _G_sed_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/\n  for _G_i in 1 2 3 4 5 6 7; do\n    _G_sed_script=$_G_sed_script$nl$_G_sed_script\n  done\n  echo \"$_G_sed_script\" 2>/dev/null | sed 99q >conftest.sed\n  _G_sed_script=\n\n  func_check_prog_sed ()\n  {\n    _G_path_prog=$1\n\n    _G_count=0\n    printf 0123456789 >conftest.in\n    while :\n    do\n      cat conftest.in conftest.in >conftest.tmp\n      mv conftest.tmp conftest.in\n      cp conftest.in conftest.nl\n      echo '' >> conftest.nl\n      \"$_G_path_prog\" -f conftest.sed <conftest.nl >conftest.out 2>/dev/null || break\n      diff conftest.out conftest.nl >/dev/null 2>&1 || break\n      _G_count=`expr $_G_count + 1`\n      if test \"$_G_count\" -gt \"$_G_path_prog_max\"; then\n        # Best one so far, save it but keep looking for a better one\n        func_check_prog_result=$_G_path_prog\n        _G_path_prog_max=$_G_count\n      fi\n      # 10*(2^10) chars as input seems more than enough\n      test 10 -lt \"$_G_count\" && break\n    done\n    rm -f conftest.in conftest.tmp conftest.nl conftest.out\n  }\n\n  func_path_progs \"sed gsed\" func_check_prog_sed $PATH:/usr/xpg4/bin\n  rm -f conftest.sed\n  SED=$func_path_progs_result\n}\n\n\n# Unless the user overrides by setting GREP, search the path for either GNU\n# grep, or the grep that truncates its output the least.\ntest -z \"$GREP\" && {\n  func_check_prog_grep ()\n  {\n    _G_path_prog=$1\n\n    _G_count=0\n    _G_path_prog_max=0\n    printf 0123456789 >conftest.in\n    while :\n    do\n      cat conftest.in conftest.in >conftest.tmp\n      mv conftest.tmp conftest.in\n      cp conftest.in conftest.nl\n      echo 'GREP' >> conftest.nl\n      \"$_G_path_prog\" -e 'GREP$' -e '-(cannot match)-' <conftest.nl >conftest.out 2>/dev/null || break\n      diff conftest.out conftest.nl >/dev/null 2>&1 || break\n      _G_count=`expr $_G_count + 1`\n      if test \"$_G_count\" -gt \"$_G_path_prog_max\"; then\n        # Best one so far, save it but keep looking for a better one\n        func_check_prog_result=$_G_path_prog\n        _G_path_prog_max=$_G_count\n      fi\n      # 10*(2^10) chars as input seems more than enough\n      test 10 -lt \"$_G_count\" && break\n    done\n    rm -f conftest.in conftest.tmp conftest.nl conftest.out\n  }\n\n  func_path_progs \"grep ggrep\" func_check_prog_grep $PATH:/usr/xpg4/bin\n  GREP=$func_path_progs_result\n}\n\n\n## ------------------------------- ##\n## User overridable command paths. ##\n## ------------------------------- ##\n\n# All uppercase variable names are used for environment variables.  These\n# variables can be overridden by the user before calling a script that\n# uses them if a suitable command of that name is not already available\n# in the command search PATH.\n\n: ${CP=\"cp -f\"}\n: ${ECHO=\"printf %s\\n\"}\n: ${EGREP=\"$GREP -E\"}\n: ${FGREP=\"$GREP -F\"}\n: ${LN_S=\"ln -s\"}\n: ${MAKE=\"make\"}\n: ${MKDIR=\"mkdir\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n: ${SHELL=\"${CONFIG_SHELL-/bin/sh}\"}\n\n\n## -------------------- ##\n## Useful sed snippets. ##\n## -------------------- ##\n\nsed_dirname='s|/[^/]*$||'\nsed_basename='s|^.*/||'\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='s|\\([`\"$\\\\]\\)|\\\\\\1|g'\n\n# Same as above, but do not quote variable references.\nsed_double_quote_subst='s/\\([\"`\\\\]\\)/\\\\\\1/g'\n\n# Sed substitution that turns a string into a regex matching for the\n# string literally.\nsed_make_literal_regex='s|[].[^$\\\\*\\/]|\\\\&|g'\n\n# Sed substitution that converts a w32 file name or path\n# that contains forward slashes, into one that contains\n# (escaped) backslashes.  A very naive implementation.\nsed_naive_backslashify='s|\\\\\\\\*|\\\\|g;s|/|\\\\|g;s|\\\\|\\\\\\\\|g'\n\n# Re-'\\' parameter expansions in output of sed_double_quote_subst that\n# were '\\'-ed in input to the same.  If an odd number of '\\' preceded a\n# '$' in input to sed_double_quote_subst, that '$' was protected from\n# expansion.  Since each input '\\' is now two '\\'s, look for any number\n# of runs of four '\\'s followed by two '\\'s and then a '$'.  '\\' that '$'.\n_G_bs='\\\\'\n_G_bs2='\\\\\\\\'\n_G_bs4='\\\\\\\\\\\\\\\\'\n_G_dollar='\\$'\nsed_double_backslash=\"\\\n  s/$_G_bs4/&\\\\\n/g\n  s/^$_G_bs2$_G_dollar/$_G_bs&/\n  s/\\\\([^$_G_bs]\\\\)$_G_bs2$_G_dollar/\\\\1$_G_bs2$_G_bs$_G_dollar/g\n  s/\\n//g\"\n\n\n## ----------------- ##\n## Global variables. ##\n## ----------------- ##\n\n# Except for the global variables explicitly listed below, the following\n# functions in the '^func_' namespace, and the '^require_' namespace\n# variables initialised in the 'Resource management' section, sourcing\n# this file will not pollute your global namespace with anything\n# else. There's no portable way to scope variables in Bourne shell\n# though, so actually running these functions will sometimes place\n# results into a variable named after the function, and often use\n# temporary variables in the '^_G_' namespace. If you are careful to\n# avoid using those namespaces casually in your sourcing script, things\n# should continue to work as you expect. And, of course, you can freely\n# overwrite any of the functions or variables defined here before\n# calling anything to customize them.\n\nEXIT_SUCCESS=0\nEXIT_FAILURE=1\nEXIT_MISMATCH=63  # $? = 63 is used to indicate version mismatch to missing.\nEXIT_SKIP=77\t  # $? = 77 is used to indicate a skipped test to automake.\n\n# Allow overriding, eg assuming that you follow the convention of\n# putting '$debug_cmd' at the start of all your functions, you can get\n# bash to show function call trace with:\n#\n#    debug_cmd='eval echo \"${FUNCNAME[0]} $*\" >&2' bash your-script-name\ndebug_cmd=${debug_cmd-\":\"}\nexit_cmd=:\n\n# By convention, finish your script with:\n#\n#    exit $exit_status\n#\n# so that you can set exit_status to non-zero if you want to indicate\n# something went wrong during execution without actually bailing out at\n# the point of failure.\nexit_status=$EXIT_SUCCESS\n\n# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh\n# is ksh but when the shell is invoked as \"sh\" and the current value of\n# the _XPG environment variable is not equal to 1 (one), the special\n# positional parameter $0, within a function call, is the name of the\n# function.\nprogpath=$0\n\n# The name of this program.\nprogname=`$ECHO \"$progpath\" |$SED \"$sed_basename\"`\n\n# Make sure we have an absolute progpath for reexecution:\ncase $progpath in\n  [\\\\/]*|[A-Za-z]:\\\\*) ;;\n  *[\\\\/]*)\n     progdir=`$ECHO \"$progpath\" |$SED \"$sed_dirname\"`\n     progdir=`cd \"$progdir\" && pwd`\n     progpath=$progdir/$progname\n     ;;\n  *)\n     _G_IFS=$IFS\n     IFS=${PATH_SEPARATOR-:}\n     for progdir in $PATH; do\n       IFS=$_G_IFS\n       test -x \"$progdir/$progname\" && break\n     done\n     IFS=$_G_IFS\n     test -n \"$progdir\" || progdir=`pwd`\n     progpath=$progdir/$progname\n     ;;\nesac\n\n\n## ----------------- ##\n## Standard options. ##\n## ----------------- ##\n\n# The following options affect the operation of the functions defined\n# below, and should be set appropriately depending on run-time para-\n# meters passed on the command line.\n\nopt_dry_run=false\nopt_quiet=false\nopt_verbose=false\n\n# Categories 'all' and 'none' are always available.  Append any others\n# you will pass as the first argument to func_warning from your own\n# code.\nwarning_categories=\n\n# By default, display warnings according to 'opt_warning_types'.  Set\n# 'warning_func'  to ':' to elide all warnings, or func_fatal_error to\n# treat the next displayed warning as a fatal error.\nwarning_func=func_warn_and_continue\n\n# Set to 'all' to display all warnings, 'none' to suppress all\n# warnings, or a space delimited list of some subset of\n# 'warning_categories' to display only the listed warnings.\nopt_warning_types=all\n\n\n## -------------------- ##\n## Resource management. ##\n## -------------------- ##\n\n# This section contains definitions for functions that each ensure a\n# particular resource (a file, or a non-empty configuration variable for\n# example) is available, and if appropriate to extract default values\n# from pertinent package files. Call them using their associated\n# 'require_*' variable to ensure that they are executed, at most, once.\n#\n# It's entirely deliberate that calling these functions can set\n# variables that don't obey the namespace limitations obeyed by the rest\n# of this file, in order that that they be as useful as possible to\n# callers.\n\n\n# require_term_colors\n# -------------------\n# Allow display of bold text on terminals that support it.\nrequire_term_colors=func_require_term_colors\nfunc_require_term_colors ()\n{\n    $debug_cmd\n\n    test -t 1 && {\n      # COLORTERM and USE_ANSI_COLORS environment variables take\n      # precedence, because most terminfo databases neglect to describe\n      # whether color sequences are supported.\n      test -n \"${COLORTERM+set}\" && : ${USE_ANSI_COLORS=\"1\"}\n\n      if test 1 = \"$USE_ANSI_COLORS\"; then\n        # Standard ANSI escape sequences\n        tc_reset='\u001b[0m'\n        tc_bold='\u001b[1m';   tc_standout='\u001b[7m'\n        tc_red='\u001b[31m';   tc_green='\u001b[32m'\n        tc_blue='\u001b[34m';  tc_cyan='\u001b[36m'\n      else\n        # Otherwise trust the terminfo database after all.\n        test -n \"`tput sgr0 2>/dev/null`\" && {\n          tc_reset=`tput sgr0`\n          test -n \"`tput bold 2>/dev/null`\" && tc_bold=`tput bold`\n          tc_standout=$tc_bold\n          test -n \"`tput smso 2>/dev/null`\" && tc_standout=`tput smso`\n          test -n \"`tput setaf 1 2>/dev/null`\" && tc_red=`tput setaf 1`\n          test -n \"`tput setaf 2 2>/dev/null`\" && tc_green=`tput setaf 2`\n          test -n \"`tput setaf 4 2>/dev/null`\" && tc_blue=`tput setaf 4`\n          test -n \"`tput setaf 5 2>/dev/null`\" && tc_cyan=`tput setaf 5`\n        }\n      fi\n    }\n\n    require_term_colors=:\n}\n\n\n## ----------------- ##\n## Function library. ##\n## ----------------- ##\n\n# This section contains a variety of useful functions to call in your\n# scripts. Take note of the portable wrappers for features provided by\n# some modern shells, which will fall back to slower equivalents on\n# less featureful shells.\n\n\n# func_append VAR VALUE\n# ---------------------\n# Append VALUE onto the existing contents of VAR.\n\n  # We should try to minimise forks, especially on Windows where they are\n  # unreasonably slow, so skip the feature probes when bash or zsh are\n  # being used:\n  if test set = \"${BASH_VERSION+set}${ZSH_VERSION+set}\"; then\n    : ${_G_HAVE_ARITH_OP=\"yes\"}\n    : ${_G_HAVE_XSI_OPS=\"yes\"}\n    # The += operator was introduced in bash 3.1\n    case $BASH_VERSION in\n      [12].* | 3.0 | 3.0*) ;;\n      *)\n        : ${_G_HAVE_PLUSEQ_OP=\"yes\"}\n        ;;\n    esac\n  fi\n\n  # _G_HAVE_PLUSEQ_OP\n  # Can be empty, in which case the shell is probed, \"yes\" if += is\n  # useable or anything else if it does not work.\n  test -z \"$_G_HAVE_PLUSEQ_OP\" \\\n    && (eval 'x=a; x+=\" b\"; test \"a b\" = \"$x\"') 2>/dev/null \\\n    && _G_HAVE_PLUSEQ_OP=yes\n\nif test yes = \"$_G_HAVE_PLUSEQ_OP\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_append ()\n  {\n    $debug_cmd\n\n    eval \"$1+=\\$2\"\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_append ()\n  {\n    $debug_cmd\n\n    eval \"$1=\\$$1\\$2\"\n  }\nfi\n\n\n# func_append_quoted VAR VALUE\n# ----------------------------\n# Quote VALUE and append to the end of shell variable VAR, separated\n# by a space.\nif test yes = \"$_G_HAVE_PLUSEQ_OP\"; then\n  eval 'func_append_quoted ()\n  {\n    $debug_cmd\n\n    func_quote_for_eval \"$2\"\n    eval \"$1+=\\\\ \\$func_quote_for_eval_result\"\n  }'\nelse\n  func_append_quoted ()\n  {\n    $debug_cmd\n\n    func_quote_for_eval \"$2\"\n    eval \"$1=\\$$1\\\\ \\$func_quote_for_eval_result\"\n  }\nfi\n\n\n# func_append_uniq VAR VALUE\n# --------------------------\n# Append unique VALUE onto the existing contents of VAR, assuming\n# entries are delimited by the first character of VALUE.  For example:\n#\n#   func_append_uniq options \" --another-option option-argument\"\n#\n# will only append to $options if \" --another-option option-argument \"\n# is not already present somewhere in $options already (note spaces at\n# each end implied by leading space in second argument).\nfunc_append_uniq ()\n{\n    $debug_cmd\n\n    eval _G_current_value='`$ECHO $'$1'`'\n    _G_delim=`expr \"$2\" : '\\(.\\)'`\n\n    case $_G_delim$_G_current_value$_G_delim in\n      *\"$2$_G_delim\"*) ;;\n      *) func_append \"$@\" ;;\n    esac\n}\n\n\n# func_arith TERM...\n# ------------------\n# Set func_arith_result to the result of evaluating TERMs.\n  test -z \"$_G_HAVE_ARITH_OP\" \\\n    && (eval 'test 2 = $(( 1 + 1 ))') 2>/dev/null \\\n    && _G_HAVE_ARITH_OP=yes\n\nif test yes = \"$_G_HAVE_ARITH_OP\"; then\n  eval 'func_arith ()\n  {\n    $debug_cmd\n\n    func_arith_result=$(( $* ))\n  }'\nelse\n  func_arith ()\n  {\n    $debug_cmd\n\n    func_arith_result=`expr \"$@\"`\n  }\nfi\n\n\n# func_basename FILE\n# ------------------\n# Set func_basename_result to FILE with everything up to and including\n# the last / stripped.\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  # If this shell supports suffix pattern removal, then use it to avoid\n  # forking. Hide the definitions single quotes in case the shell chokes\n  # on unsupported syntax...\n  _b='func_basename_result=${1##*/}'\n  _d='case $1 in\n        */*) func_dirname_result=${1%/*}$2 ;;\n        *  ) func_dirname_result=$3        ;;\n      esac'\n\nelse\n  # ...otherwise fall back to using sed.\n  _b='func_basename_result=`$ECHO \"$1\" |$SED \"$sed_basename\"`'\n  _d='func_dirname_result=`$ECHO \"$1\"  |$SED \"$sed_dirname\"`\n      if test \"X$func_dirname_result\" = \"X$1\"; then\n        func_dirname_result=$3\n      else\n        func_append func_dirname_result \"$2\"\n      fi'\nfi\n\neval 'func_basename ()\n{\n    $debug_cmd\n\n    '\"$_b\"'\n}'\n\n\n# func_dirname FILE APPEND NONDIR_REPLACEMENT\n# -------------------------------------------\n# Compute the dirname of FILE.  If nonempty, add APPEND to the result,\n# otherwise set result to NONDIR_REPLACEMENT.\neval 'func_dirname ()\n{\n    $debug_cmd\n\n    '\"$_d\"'\n}'\n\n\n# func_dirname_and_basename FILE APPEND NONDIR_REPLACEMENT\n# --------------------------------------------------------\n# Perform func_basename and func_dirname in a single function\n# call:\n#   dirname:  Compute the dirname of FILE.  If nonempty,\n#             add APPEND to the result, otherwise set result\n#             to NONDIR_REPLACEMENT.\n#             value returned in \"$func_dirname_result\"\n#   basename: Compute filename of FILE.\n#             value retuned in \"$func_basename_result\"\n# For efficiency, we do not delegate to the functions above but instead\n# duplicate the functionality here.\neval 'func_dirname_and_basename ()\n{\n    $debug_cmd\n\n    '\"$_b\"'\n    '\"$_d\"'\n}'\n\n\n# func_echo ARG...\n# ----------------\n# Echo program name prefixed message.\nfunc_echo ()\n{\n    $debug_cmd\n\n    _G_message=$*\n\n    func_echo_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_IFS\n      $ECHO \"$progname: $_G_line\"\n    done\n    IFS=$func_echo_IFS\n}\n\n\n# func_echo_all ARG...\n# --------------------\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\n\n# func_echo_infix_1 INFIX ARG...\n# ------------------------------\n# Echo program name, followed by INFIX on the first line, with any\n# additional lines not showing INFIX.\nfunc_echo_infix_1 ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    _G_infix=$1; shift\n    _G_indent=$_G_infix\n    _G_prefix=\"$progname: $_G_infix: \"\n    _G_message=$*\n\n    # Strip color escape sequences before counting printable length\n    for _G_tc in \"$tc_reset\" \"$tc_bold\" \"$tc_standout\" \"$tc_red\" \"$tc_green\" \"$tc_blue\" \"$tc_cyan\"\n    do\n      test -n \"$_G_tc\" && {\n        _G_esc_tc=`$ECHO \"$_G_tc\" | $SED \"$sed_make_literal_regex\"`\n        _G_indent=`$ECHO \"$_G_indent\" | $SED \"s|$_G_esc_tc||g\"`\n      }\n    done\n    _G_indent=\"$progname: \"`echo \"$_G_indent\" | $SED 's|.| |g'`\"  \" ## exclude from sc_prohibit_nested_quotes\n\n    func_echo_infix_1_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_infix_1_IFS\n      $ECHO \"$_G_prefix$tc_bold$_G_line$tc_reset\" >&2\n      _G_prefix=$_G_indent\n    done\n    IFS=$func_echo_infix_1_IFS\n}\n\n\n# func_error ARG...\n# -----------------\n# Echo program name prefixed message to standard error.\nfunc_error ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    func_echo_infix_1 \"  $tc_standout${tc_red}error$tc_reset\" \"$*\" >&2\n}\n\n\n# func_fatal_error ARG...\n# -----------------------\n# Echo program name prefixed message to standard error, and exit.\nfunc_fatal_error ()\n{\n    $debug_cmd\n\n    func_error \"$*\"\n    exit $EXIT_FAILURE\n}\n\n\n# func_grep EXPRESSION FILENAME\n# -----------------------------\n# Check whether EXPRESSION matches any line of FILENAME, without output.\nfunc_grep ()\n{\n    $debug_cmd\n\n    $GREP \"$1\" \"$2\" >/dev/null 2>&1\n}\n\n\n# func_len STRING\n# ---------------\n# Set func_len_result to the length of STRING. STRING may not\n# start with a hyphen.\n  test -z \"$_G_HAVE_XSI_OPS\" \\\n    && (eval 'x=a/b/c;\n      test 5aa/bb/cc = \"${#x}${x%%/*}${x%/*}${x#*/}${x##*/}\"') 2>/dev/null \\\n    && _G_HAVE_XSI_OPS=yes\n\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_len ()\n  {\n    $debug_cmd\n\n    func_len_result=${#1}\n  }'\nelse\n  func_len ()\n  {\n    $debug_cmd\n\n    func_len_result=`expr \"$1\" : \".*\" 2>/dev/null || echo $max_cmd_len`\n  }\nfi\n\n\n# func_mkdir_p DIRECTORY-PATH\n# ---------------------------\n# Make sure the entire path to DIRECTORY-PATH is available.\nfunc_mkdir_p ()\n{\n    $debug_cmd\n\n    _G_directory_path=$1\n    _G_dir_list=\n\n    if test -n \"$_G_directory_path\" && test : != \"$opt_dry_run\"; then\n\n      # Protect directory names starting with '-'\n      case $_G_directory_path in\n        -*) _G_directory_path=./$_G_directory_path ;;\n      esac\n\n      # While some portion of DIR does not yet exist...\n      while test ! -d \"$_G_directory_path\"; do\n        # ...make a list in topmost first order.  Use a colon delimited\n\t# list incase some portion of path contains whitespace.\n        _G_dir_list=$_G_directory_path:$_G_dir_list\n\n        # If the last portion added has no slash in it, the list is done\n        case $_G_directory_path in */*) ;; *) break ;; esac\n\n        # ...otherwise throw away the child directory and loop\n        _G_directory_path=`$ECHO \"$_G_directory_path\" | $SED -e \"$sed_dirname\"`\n      done\n      _G_dir_list=`$ECHO \"$_G_dir_list\" | $SED 's|:*$||'`\n\n      func_mkdir_p_IFS=$IFS; IFS=:\n      for _G_dir in $_G_dir_list; do\n\tIFS=$func_mkdir_p_IFS\n        # mkdir can fail with a 'File exist' error if two processes\n        # try to create one of the directories concurrently.  Don't\n        # stop in that case!\n        $MKDIR \"$_G_dir\" 2>/dev/null || :\n      done\n      IFS=$func_mkdir_p_IFS\n\n      # Bail out if we (or some other process) failed to create a directory.\n      test -d \"$_G_directory_path\" || \\\n        func_fatal_error \"Failed to create '$1'\"\n    fi\n}\n\n\n# func_mktempdir [BASENAME]\n# -------------------------\n# Make a temporary directory that won't clash with other running\n# libtool processes, and avoids race conditions if possible.  If\n# given, BASENAME is the basename for that directory.\nfunc_mktempdir ()\n{\n    $debug_cmd\n\n    _G_template=${TMPDIR-/tmp}/${1-$progname}\n\n    if test : = \"$opt_dry_run\"; then\n      # Return a directory name, but don't create it in dry-run mode\n      _G_tmpdir=$_G_template-$$\n    else\n\n      # If mktemp works, use that first and foremost\n      _G_tmpdir=`mktemp -d \"$_G_template-XXXXXXXX\" 2>/dev/null`\n\n      if test ! -d \"$_G_tmpdir\"; then\n        # Failing that, at least try and use $RANDOM to avoid a race\n        _G_tmpdir=$_G_template-${RANDOM-0}$$\n\n        func_mktempdir_umask=`umask`\n        umask 0077\n        $MKDIR \"$_G_tmpdir\"\n        umask $func_mktempdir_umask\n      fi\n\n      # If we're not in dry-run mode, bomb out on failure\n      test -d \"$_G_tmpdir\" || \\\n        func_fatal_error \"cannot create temporary directory '$_G_tmpdir'\"\n    fi\n\n    $ECHO \"$_G_tmpdir\"\n}\n\n\n# func_normal_abspath PATH\n# ------------------------\n# Remove doubled-up and trailing slashes, \".\" path components,\n# and cancel out any \"..\" path components in PATH after making\n# it an absolute path.\nfunc_normal_abspath ()\n{\n    $debug_cmd\n\n    # These SED scripts presuppose an absolute path with a trailing slash.\n    _G_pathcar='s|^/\\([^/]*\\).*$|\\1|'\n    _G_pathcdr='s|^/[^/]*||'\n    _G_removedotparts=':dotsl\n\t\ts|/\\./|/|g\n\t\tt dotsl\n\t\ts|/\\.$|/|'\n    _G_collapseslashes='s|/\\{1,\\}|/|g'\n    _G_finalslash='s|/*$|/|'\n\n    # Start from root dir and reassemble the path.\n    func_normal_abspath_result=\n    func_normal_abspath_tpath=$1\n    func_normal_abspath_altnamespace=\n    case $func_normal_abspath_tpath in\n      \"\")\n        # Empty path, that just means $cwd.\n        func_stripname '' '/' \"`pwd`\"\n        func_normal_abspath_result=$func_stripname_result\n        return\n        ;;\n      # The next three entries are used to spot a run of precisely\n      # two leading slashes without using negated character classes;\n      # we take advantage of case's first-match behaviour.\n      ///*)\n        # Unusual form of absolute path, do nothing.\n        ;;\n      //*)\n        # Not necessarily an ordinary path; POSIX reserves leading '//'\n        # and for example Cygwin uses it to access remote file shares\n        # over CIFS/SMB, so we conserve a leading double slash if found.\n        func_normal_abspath_altnamespace=/\n        ;;\n      /*)\n        # Absolute path, do nothing.\n        ;;\n      *)\n        # Relative path, prepend $cwd.\n        func_normal_abspath_tpath=`pwd`/$func_normal_abspath_tpath\n        ;;\n    esac\n\n    # Cancel out all the simple stuff to save iterations.  We also want\n    # the path to end with a slash for ease of parsing, so make sure\n    # there is one (and only one) here.\n    func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_removedotparts\" -e \"$_G_collapseslashes\" -e \"$_G_finalslash\"`\n    while :; do\n      # Processed it all yet?\n      if test / = \"$func_normal_abspath_tpath\"; then\n        # If we ascended to the root using \"..\" the result may be empty now.\n        if test -z \"$func_normal_abspath_result\"; then\n          func_normal_abspath_result=/\n        fi\n        break\n      fi\n      func_normal_abspath_tcomponent=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_pathcar\"`\n      func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_pathcdr\"`\n      # Figure out what to do with it\n      case $func_normal_abspath_tcomponent in\n        \"\")\n          # Trailing empty path component, ignore it.\n          ;;\n        ..)\n          # Parent dir; strip last assembled component from result.\n          func_dirname \"$func_normal_abspath_result\"\n          func_normal_abspath_result=$func_dirname_result\n          ;;\n        *)\n          # Actual path component, append it.\n          func_append func_normal_abspath_result \"/$func_normal_abspath_tcomponent\"\n          ;;\n      esac\n    done\n    # Restore leading double-slash if one was found on entry.\n    func_normal_abspath_result=$func_normal_abspath_altnamespace$func_normal_abspath_result\n}\n\n\n# func_notquiet ARG...\n# --------------------\n# Echo program name prefixed message only when not in quiet mode.\nfunc_notquiet ()\n{\n    $debug_cmd\n\n    $opt_quiet || func_echo ${1+\"$@\"}\n\n    # A bug in bash halts the script if the last line of a function\n    # fails when set -e is in force, so we need another command to\n    # work around that:\n    :\n}\n\n\n# func_relative_path SRCDIR DSTDIR\n# --------------------------------\n# Set func_relative_path_result to the relative path from SRCDIR to DSTDIR.\nfunc_relative_path ()\n{\n    $debug_cmd\n\n    func_relative_path_result=\n    func_normal_abspath \"$1\"\n    func_relative_path_tlibdir=$func_normal_abspath_result\n    func_normal_abspath \"$2\"\n    func_relative_path_tbindir=$func_normal_abspath_result\n\n    # Ascend the tree starting from libdir\n    while :; do\n      # check if we have found a prefix of bindir\n      case $func_relative_path_tbindir in\n        $func_relative_path_tlibdir)\n          # found an exact match\n          func_relative_path_tcancelled=\n          break\n          ;;\n        $func_relative_path_tlibdir*)\n          # found a matching prefix\n          func_stripname \"$func_relative_path_tlibdir\" '' \"$func_relative_path_tbindir\"\n          func_relative_path_tcancelled=$func_stripname_result\n          if test -z \"$func_relative_path_result\"; then\n            func_relative_path_result=.\n          fi\n          break\n          ;;\n        *)\n          func_dirname $func_relative_path_tlibdir\n          func_relative_path_tlibdir=$func_dirname_result\n          if test -z \"$func_relative_path_tlibdir\"; then\n            # Have to descend all the way to the root!\n            func_relative_path_result=../$func_relative_path_result\n            func_relative_path_tcancelled=$func_relative_path_tbindir\n            break\n          fi\n          func_relative_path_result=../$func_relative_path_result\n          ;;\n      esac\n    done\n\n    # Now calculate path; take care to avoid doubling-up slashes.\n    func_stripname '' '/' \"$func_relative_path_result\"\n    func_relative_path_result=$func_stripname_result\n    func_stripname '/' '/' \"$func_relative_path_tcancelled\"\n    if test -n \"$func_stripname_result\"; then\n      func_append func_relative_path_result \"/$func_stripname_result\"\n    fi\n\n    # Normalisation. If bindir is libdir, return '.' else relative path.\n    if test -n \"$func_relative_path_result\"; then\n      func_stripname './' '' \"$func_relative_path_result\"\n      func_relative_path_result=$func_stripname_result\n    fi\n\n    test -n \"$func_relative_path_result\" || func_relative_path_result=.\n\n    :\n}\n\n\n# func_quote_for_eval ARG...\n# --------------------------\n# Aesthetically quote ARGs to be evaled later.\n# This function returns two values:\n#   i) func_quote_for_eval_result\n#      double-quoted, suitable for a subsequent eval\n#  ii) func_quote_for_eval_unquoted_result\n#      has all characters that are still active within double\n#      quotes backslashified.\nfunc_quote_for_eval ()\n{\n    $debug_cmd\n\n    func_quote_for_eval_unquoted_result=\n    func_quote_for_eval_result=\n    while test 0 -lt $#; do\n      case $1 in\n        *[\\\\\\`\\\"\\$]*)\n\t  _G_unquoted_arg=`printf '%s\\n' \"$1\" |$SED \"$sed_quote_subst\"` ;;\n        *)\n          _G_unquoted_arg=$1 ;;\n      esac\n      if test -n \"$func_quote_for_eval_unquoted_result\"; then\n\tfunc_append func_quote_for_eval_unquoted_result \" $_G_unquoted_arg\"\n      else\n        func_append func_quote_for_eval_unquoted_result \"$_G_unquoted_arg\"\n      fi\n\n      case $_G_unquoted_arg in\n        # Double-quote args containing shell metacharacters to delay\n        # word splitting, command substitution and variable expansion\n        # for a subsequent eval.\n        # Many Bourne shells cannot handle close brackets correctly\n        # in scan sets, so we specify it separately.\n        *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n          _G_quoted_arg=\\\"$_G_unquoted_arg\\\"\n          ;;\n        *)\n          _G_quoted_arg=$_G_unquoted_arg\n\t  ;;\n      esac\n\n      if test -n \"$func_quote_for_eval_result\"; then\n\tfunc_append func_quote_for_eval_result \" $_G_quoted_arg\"\n      else\n        func_append func_quote_for_eval_result \"$_G_quoted_arg\"\n      fi\n      shift\n    done\n}\n\n\n# func_quote_for_expand ARG\n# -------------------------\n# Aesthetically quote ARG to be evaled later; same as above,\n# but do not quote variable references.\nfunc_quote_for_expand ()\n{\n    $debug_cmd\n\n    case $1 in\n      *[\\\\\\`\\\"]*)\n\t_G_arg=`$ECHO \"$1\" | $SED \\\n\t    -e \"$sed_double_quote_subst\" -e \"$sed_double_backslash\"` ;;\n      *)\n        _G_arg=$1 ;;\n    esac\n\n    case $_G_arg in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting and command substitution for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        _G_arg=\\\"$_G_arg\\\"\n        ;;\n    esac\n\n    func_quote_for_expand_result=$_G_arg\n}\n\n\n# func_stripname PREFIX SUFFIX NAME\n# ---------------------------------\n# strip PREFIX and SUFFIX from NAME, and store in func_stripname_result.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_stripname ()\n  {\n    $debug_cmd\n\n    # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are\n    # positional parameters, so assign one to ordinary variable first.\n    func_stripname_result=$3\n    func_stripname_result=${func_stripname_result#\"$1\"}\n    func_stripname_result=${func_stripname_result%\"$2\"}\n  }'\nelse\n  func_stripname ()\n  {\n    $debug_cmd\n\n    case $2 in\n      .*) func_stripname_result=`$ECHO \"$3\" | $SED -e \"s%^$1%%\" -e \"s%\\\\\\\\$2\\$%%\"`;;\n      *)  func_stripname_result=`$ECHO \"$3\" | $SED -e \"s%^$1%%\" -e \"s%$2\\$%%\"`;;\n    esac\n  }\nfi\n\n\n# func_show_eval CMD [FAIL_EXP]\n# -----------------------------\n# Unless opt_quiet is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.\nfunc_show_eval ()\n{\n    $debug_cmd\n\n    _G_cmd=$1\n    _G_fail_exp=${2-':'}\n\n    func_quote_for_expand \"$_G_cmd\"\n    eval \"func_notquiet $func_quote_for_expand_result\"\n\n    $opt_dry_run || {\n      eval \"$_G_cmd\"\n      _G_status=$?\n      if test 0 -ne \"$_G_status\"; then\n\teval \"(exit $_G_status); $_G_fail_exp\"\n      fi\n    }\n}\n\n\n# func_show_eval_locale CMD [FAIL_EXP]\n# ------------------------------------\n# Unless opt_quiet is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.  Use the saved locale for evaluation.\nfunc_show_eval_locale ()\n{\n    $debug_cmd\n\n    _G_cmd=$1\n    _G_fail_exp=${2-':'}\n\n    $opt_quiet || {\n      func_quote_for_expand \"$_G_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    $opt_dry_run || {\n      eval \"$_G_user_locale\n\t    $_G_cmd\"\n      _G_status=$?\n      eval \"$_G_safe_locale\"\n      if test 0 -ne \"$_G_status\"; then\n\teval \"(exit $_G_status); $_G_fail_exp\"\n      fi\n    }\n}\n\n\n# func_tr_sh\n# ----------\n# Turn $1 into a string suitable for a shell variable name.\n# Result is stored in $func_tr_sh_result.  All characters\n# not in the set a-zA-Z0-9_ are replaced with '_'. Further,\n# if $1 begins with a digit, a '_' is prepended as well.\nfunc_tr_sh ()\n{\n    $debug_cmd\n\n    case $1 in\n    [0-9]* | *[!a-zA-Z0-9_]*)\n      func_tr_sh_result=`$ECHO \"$1\" | $SED -e 's/^\\([0-9]\\)/_\\1/' -e 's/[^a-zA-Z0-9_]/_/g'`\n      ;;\n    * )\n      func_tr_sh_result=$1\n      ;;\n    esac\n}\n\n\n# func_verbose ARG...\n# -------------------\n# Echo program name prefixed message in verbose mode only.\nfunc_verbose ()\n{\n    $debug_cmd\n\n    $opt_verbose && func_echo \"$*\"\n\n    :\n}\n\n\n# func_warn_and_continue ARG...\n# -----------------------------\n# Echo program name prefixed warning message to standard error.\nfunc_warn_and_continue ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    func_echo_infix_1 \"${tc_red}warning$tc_reset\" \"$*\" >&2\n}\n\n\n# func_warning CATEGORY ARG...\n# ----------------------------\n# Echo program name prefixed warning message to standard error. Warning\n# messages can be filtered according to CATEGORY, where this function\n# elides messages where CATEGORY is not listed in the global variable\n# 'opt_warning_types'.\nfunc_warning ()\n{\n    $debug_cmd\n\n    # CATEGORY must be in the warning_categories list!\n    case \" $warning_categories \" in\n      *\" $1 \"*) ;;\n      *) func_internal_error \"invalid warning category '$1'\" ;;\n    esac\n\n    _G_category=$1\n    shift\n\n    case \" $opt_warning_types \" in\n      *\" $_G_category \"*) $warning_func ${1+\"$@\"} ;;\n    esac\n}\n\n\n# func_sort_ver VER1 VER2\n# -----------------------\n# 'sort -V' is not generally available.\n# Note this deviates from the version comparison in automake\n# in that it treats 1.5 < 1.5.0, and treats 1.4.4a < 1.4-p3a\n# but this should suffice as we won't be specifying old\n# version formats or redundant trailing .0 in bootstrap.conf.\n# If we did want full compatibility then we should probably\n# use m4_version_compare from autoconf.\nfunc_sort_ver ()\n{\n    $debug_cmd\n\n    printf '%s\\n%s\\n' \"$1\" \"$2\" \\\n      | sort -t. -k 1,1n -k 2,2n -k 3,3n -k 4,4n -k 5,5n -k 6,6n -k 7,7n -k 8,8n -k 9,9n\n}\n\n# func_lt_ver PREV CURR\n# ---------------------\n# Return true if PREV and CURR are in the correct order according to\n# func_sort_ver, otherwise false.  Use it like this:\n#\n#  func_lt_ver \"$prev_ver\" \"$proposed_ver\" || func_fatal_error \"...\"\nfunc_lt_ver ()\n{\n    $debug_cmd\n\n    test \"x$1\" = x`func_sort_ver \"$1\" \"$2\" | $SED 1q`\n}\n\n\n# Local variables:\n# mode: shell-script\n# sh-indentation: 2\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-pattern: \"10/scriptversion=%:y-%02m-%02d.%02H; # UTC\"\n# time-stamp-time-zone: \"UTC\"\n# End:\n#! /bin/sh\n\n# Set a version string for this script.\nscriptversion=2014-01-07.03; # UTC\n\n# A portable, pluggable option parser for Bourne shell.\n# Written by Gary V. Vaughan, 2010\n\n# Copyright (C) 2010-2015 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n# Please report bugs or propose patches to gary@gnu.org.\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# This file is a library for parsing options in your shell scripts along\n# with assorted other useful supporting features that you can make use\n# of too.\n#\n# For the simplest scripts you might need only:\n#\n#   #!/bin/sh\n#   . relative/path/to/funclib.sh\n#   . relative/path/to/options-parser\n#   scriptversion=1.0\n#   func_options ${1+\"$@\"}\n#   eval set dummy \"$func_options_result\"; shift\n#   ...rest of your script...\n#\n# In order for the '--version' option to work, you will need to have a\n# suitably formatted comment like the one at the top of this file\n# starting with '# Written by ' and ending with '# warranty; '.\n#\n# For '-h' and '--help' to work, you will also need a one line\n# description of your script's purpose in a comment directly above the\n# '# Written by ' line, like the one at the top of this file.\n#\n# The default options also support '--debug', which will turn on shell\n# execution tracing (see the comment above debug_cmd below for another\n# use), and '--verbose' and the func_verbose function to allow your script\n# to display verbose messages only when your user has specified\n# '--verbose'.\n#\n# After sourcing this file, you can plug processing for additional\n# options by amending the variables from the 'Configuration' section\n# below, and following the instructions in the 'Option parsing'\n# section further down.\n\n## -------------- ##\n## Configuration. ##\n## -------------- ##\n\n# You should override these variables in your script after sourcing this\n# file so that they reflect the customisations you have added to the\n# option parser.\n\n# The usage line for option parsing errors and the start of '-h' and\n# '--help' output messages. You can embed shell variables for delayed\n# expansion at the time the message is displayed, but you will need to\n# quote other shell meta-characters carefully to prevent them being\n# expanded when the contents are evaled.\nusage='$progpath [OPTION]...'\n\n# Short help message in response to '-h' and '--help'.  Add to this or\n# override it after sourcing this library to reflect the full set of\n# options your script accepts.\nusage_message=\"\\\n       --debug        enable verbose shell tracing\n   -W, --warnings=CATEGORY\n                      report the warnings falling in CATEGORY [all]\n   -v, --verbose      verbosely report processing\n       --version      print version information and exit\n   -h, --help         print short or long help message and exit\n\"\n\n# Additional text appended to 'usage_message' in response to '--help'.\nlong_help_message=\"\nWarning categories include:\n       'all'          show all warnings\n       'none'         turn off all the warnings\n       'error'        warnings are treated as fatal errors\"\n\n# Help message printed before fatal option parsing errors.\nfatal_help=\"Try '\\$progname --help' for more information.\"\n\n\n\n## ------------------------- ##\n## Hook function management. ##\n## ------------------------- ##\n\n# This section contains functions for adding, removing, and running hooks\n# to the main code.  A hook is just a named list of of function, that can\n# be run in order later on.\n\n# func_hookable FUNC_NAME\n# -----------------------\n# Declare that FUNC_NAME will run hooks added with\n# 'func_add_hook FUNC_NAME ...'.\nfunc_hookable ()\n{\n    $debug_cmd\n\n    func_append hookable_fns \" $1\"\n}\n\n\n# func_add_hook FUNC_NAME HOOK_FUNC\n# ---------------------------------\n# Request that FUNC_NAME call HOOK_FUNC before it returns.  FUNC_NAME must\n# first have been declared \"hookable\" by a call to 'func_hookable'.\nfunc_add_hook ()\n{\n    $debug_cmd\n\n    case \" $hookable_fns \" in\n      *\" $1 \"*) ;;\n      *) func_fatal_error \"'$1' does not accept hook functions.\" ;;\n    esac\n\n    eval func_append ${1}_hooks '\" $2\"'\n}\n\n\n# func_remove_hook FUNC_NAME HOOK_FUNC\n# ------------------------------------\n# Remove HOOK_FUNC from the list of functions called by FUNC_NAME.\nfunc_remove_hook ()\n{\n    $debug_cmd\n\n    eval ${1}_hooks='`$ECHO \"\\$'$1'_hooks\" |$SED \"s| '$2'||\"`'\n}\n\n\n# func_run_hooks FUNC_NAME [ARG]...\n# ---------------------------------\n# Run all hook functions registered to FUNC_NAME.\n# It is assumed that the list of hook functions contains nothing more\n# than a whitespace-delimited list of legal shell function names, and\n# no effort is wasted trying to catch shell meta-characters or preserve\n# whitespace.\nfunc_run_hooks ()\n{\n    $debug_cmd\n\n    case \" $hookable_fns \" in\n      *\" $1 \"*) ;;\n      *) func_fatal_error \"'$1' does not support hook funcions.n\" ;;\n    esac\n\n    eval _G_hook_fns=\\$$1_hooks; shift\n\n    for _G_hook in $_G_hook_fns; do\n      eval $_G_hook '\"$@\"'\n\n      # store returned options list back into positional\n      # parameters for next 'cmd' execution.\n      eval _G_hook_result=\\$${_G_hook}_result\n      eval set dummy \"$_G_hook_result\"; shift\n    done\n\n    func_quote_for_eval ${1+\"$@\"}\n    func_run_hooks_result=$func_quote_for_eval_result\n}\n\n\n\n## --------------- ##\n## Option parsing. ##\n## --------------- ##\n\n# In order to add your own option parsing hooks, you must accept the\n# full positional parameter list in your hook function, remove any\n# options that you action, and then pass back the remaining unprocessed\n# options in '<hooked_function_name>_result', escaped suitably for\n# 'eval'.  Like this:\n#\n#    my_options_prep ()\n#    {\n#        $debug_cmd\n#\n#        # Extend the existing usage message.\n#        usage_message=$usage_message'\n#      -s, --silent       don'\\''t print informational messages\n#    '\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_options_prep_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_options_prep my_options_prep\n#\n#\n#    my_silent_option ()\n#    {\n#        $debug_cmd\n#\n#        # Note that for efficiency, we parse as many options as we can\n#        # recognise in a loop before passing the remainder back to the\n#        # caller on the first unrecognised argument we encounter.\n#        while test $# -gt 0; do\n#          opt=$1; shift\n#          case $opt in\n#            --silent|-s) opt_silent=: ;;\n#            # Separate non-argument short options:\n#            -s*)         func_split_short_opt \"$_G_opt\"\n#                         set dummy \"$func_split_short_opt_name\" \\\n#                             \"-$func_split_short_opt_arg\" ${1+\"$@\"}\n#                         shift\n#                         ;;\n#            *)            set dummy \"$_G_opt\" \"$*\"; shift; break ;;\n#          esac\n#        done\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_silent_option_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_parse_options my_silent_option\n#\n#\n#    my_option_validation ()\n#    {\n#        $debug_cmd\n#\n#        $opt_silent && $opt_verbose && func_fatal_help \"\\\n#    '--silent' and '--verbose' options are mutually exclusive.\"\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_option_validation_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_validate_options my_option_validation\n#\n# You'll alse need to manually amend $usage_message to reflect the extra\n# options you parse.  It's preferable to append if you can, so that\n# multiple option parsing hooks can be added safely.\n\n\n# func_options [ARG]...\n# ---------------------\n# All the functions called inside func_options are hookable. See the\n# individual implementations for details.\nfunc_hookable func_options\nfunc_options ()\n{\n    $debug_cmd\n\n    func_options_prep ${1+\"$@\"}\n    eval func_parse_options \\\n        ${func_options_prep_result+\"$func_options_prep_result\"}\n    eval func_validate_options \\\n        ${func_parse_options_result+\"$func_parse_options_result\"}\n\n    eval func_run_hooks func_options \\\n        ${func_validate_options_result+\"$func_validate_options_result\"}\n\n    # save modified positional parameters for caller\n    func_options_result=$func_run_hooks_result\n}\n\n\n# func_options_prep [ARG]...\n# --------------------------\n# All initialisations required before starting the option parse loop.\n# Note that when calling hook functions, we pass through the list of\n# positional parameters.  If a hook function modifies that list, and\n# needs to propogate that back to rest of this script, then the complete\n# modified list must be put in 'func_run_hooks_result' before\n# returning.\nfunc_hookable func_options_prep\nfunc_options_prep ()\n{\n    $debug_cmd\n\n    # Option defaults:\n    opt_verbose=false\n    opt_warning_types=\n\n    func_run_hooks func_options_prep ${1+\"$@\"}\n\n    # save modified positional parameters for caller\n    func_options_prep_result=$func_run_hooks_result\n}\n\n\n# func_parse_options [ARG]...\n# ---------------------------\n# The main option parsing loop.\nfunc_hookable func_parse_options\nfunc_parse_options ()\n{\n    $debug_cmd\n\n    func_parse_options_result=\n\n    # this just eases exit handling\n    while test $# -gt 0; do\n      # Defer to hook functions for initial option parsing, so they\n      # get priority in the event of reusing an option name.\n      func_run_hooks func_parse_options ${1+\"$@\"}\n\n      # Adjust func_parse_options positional parameters to match\n      eval set dummy \"$func_run_hooks_result\"; shift\n\n      # Break out of the loop if we already parsed every option.\n      test $# -gt 0 || break\n\n      _G_opt=$1\n      shift\n      case $_G_opt in\n        --debug|-x)   debug_cmd='set -x'\n                      func_echo \"enabling shell trace mode\"\n                      $debug_cmd\n                      ;;\n\n        --no-warnings|--no-warning|--no-warn)\n                      set dummy --warnings none ${1+\"$@\"}\n                      shift\n\t\t      ;;\n\n        --warnings|--warning|-W)\n                      test $# = 0 && func_missing_arg $_G_opt && break\n                      case \" $warning_categories $1\" in\n                        *\" $1 \"*)\n                          # trailing space prevents matching last $1 above\n                          func_append_uniq opt_warning_types \" $1\"\n                          ;;\n                        *all)\n                          opt_warning_types=$warning_categories\n                          ;;\n                        *none)\n                          opt_warning_types=none\n                          warning_func=:\n                          ;;\n                        *error)\n                          opt_warning_types=$warning_categories\n                          warning_func=func_fatal_error\n                          ;;\n                        *)\n                          func_fatal_error \\\n                             \"unsupported warning category: '$1'\"\n                          ;;\n                      esac\n                      shift\n                      ;;\n\n        --verbose|-v) opt_verbose=: ;;\n        --version)    func_version ;;\n        -\\?|-h)       func_usage ;;\n        --help)       func_help ;;\n\n\t# Separate optargs to long options (plugins may need this):\n\t--*=*)        func_split_equals \"$_G_opt\"\n\t              set dummy \"$func_split_equals_lhs\" \\\n                          \"$func_split_equals_rhs\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n       # Separate optargs to short options:\n        -W*)\n                      func_split_short_opt \"$_G_opt\"\n                      set dummy \"$func_split_short_opt_name\" \\\n                          \"$func_split_short_opt_arg\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n        # Separate non-argument short options:\n        -\\?*|-h*|-v*|-x*)\n                      func_split_short_opt \"$_G_opt\"\n                      set dummy \"$func_split_short_opt_name\" \\\n                          \"-$func_split_short_opt_arg\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n        --)           break ;;\n        -*)           func_fatal_help \"unrecognised option: '$_G_opt'\" ;;\n        *)            set dummy \"$_G_opt\" ${1+\"$@\"}; shift; break ;;\n      esac\n    done\n\n    # save modified positional parameters for caller\n    func_quote_for_eval ${1+\"$@\"}\n    func_parse_options_result=$func_quote_for_eval_result\n}\n\n\n# func_validate_options [ARG]...\n# ------------------------------\n# Perform any sanity checks on option settings and/or unconsumed\n# arguments.\nfunc_hookable func_validate_options\nfunc_validate_options ()\n{\n    $debug_cmd\n\n    # Display all warnings if -W was not given.\n    test -n \"$opt_warning_types\" || opt_warning_types=\" $warning_categories\"\n\n    func_run_hooks func_validate_options ${1+\"$@\"}\n\n    # Bail if the options were screwed!\n    $exit_cmd $EXIT_FAILURE\n\n    # save modified positional parameters for caller\n    func_validate_options_result=$func_run_hooks_result\n}\n\n\n\n## ----------------- ##\n## Helper functions. ##\n## ----------------- ##\n\n# This section contains the helper functions used by the rest of the\n# hookable option parser framework in ascii-betical order.\n\n\n# func_fatal_help ARG...\n# ----------------------\n# Echo program name prefixed message to standard error, followed by\n# a help hint, and exit.\nfunc_fatal_help ()\n{\n    $debug_cmd\n\n    eval \\$ECHO \\\"\"Usage: $usage\"\\\"\n    eval \\$ECHO \\\"\"$fatal_help\"\\\"\n    func_error ${1+\"$@\"}\n    exit $EXIT_FAILURE\n}\n\n\n# func_help\n# ---------\n# Echo long help message to standard output and exit.\nfunc_help ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $ECHO \"$long_help_message\"\n    exit 0\n}\n\n\n# func_missing_arg ARGNAME\n# ------------------------\n# Echo program name prefixed message to standard error and set global\n# exit_cmd.\nfunc_missing_arg ()\n{\n    $debug_cmd\n\n    func_error \"Missing argument for '$1'.\"\n    exit_cmd=exit\n}\n\n\n# func_split_equals STRING\n# ------------------------\n# Set func_split_equals_lhs and func_split_equals_rhs shell variables after\n# splitting STRING at the '=' sign.\ntest -z \"$_G_HAVE_XSI_OPS\" \\\n    && (eval 'x=a/b/c;\n      test 5aa/bb/cc = \"${#x}${x%%/*}${x%/*}${x#*/}${x##*/}\"') 2>/dev/null \\\n    && _G_HAVE_XSI_OPS=yes\n\nif test yes = \"$_G_HAVE_XSI_OPS\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_split_equals ()\n  {\n      $debug_cmd\n\n      func_split_equals_lhs=${1%%=*}\n      func_split_equals_rhs=${1#*=}\n      test \"x$func_split_equals_lhs\" = \"x$1\" \\\n        && func_split_equals_rhs=\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_split_equals ()\n  {\n      $debug_cmd\n\n      func_split_equals_lhs=`expr \"x$1\" : 'x\\([^=]*\\)'`\n      func_split_equals_rhs=\n      test \"x$func_split_equals_lhs\" = \"x$1\" \\\n        || func_split_equals_rhs=`expr \"x$1\" : 'x[^=]*=\\(.*\\)$'`\n  }\nfi #func_split_equals\n\n\n# func_split_short_opt SHORTOPT\n# -----------------------------\n# Set func_split_short_opt_name and func_split_short_opt_arg shell\n# variables after splitting SHORTOPT after the 2nd character.\nif test yes = \"$_G_HAVE_XSI_OPS\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_split_short_opt ()\n  {\n      $debug_cmd\n\n      func_split_short_opt_arg=${1#??}\n      func_split_short_opt_name=${1%\"$func_split_short_opt_arg\"}\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_split_short_opt ()\n  {\n      $debug_cmd\n\n      func_split_short_opt_name=`expr \"x$1\" : 'x-\\(.\\)'`\n      func_split_short_opt_arg=`expr \"x$1\" : 'x-.\\(.*\\)$'`\n  }\nfi #func_split_short_opt\n\n\n# func_usage\n# ----------\n# Echo short help message to standard output and exit.\nfunc_usage ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $ECHO \"Run '$progname --help |${PAGER-more}' for full usage\"\n    exit 0\n}\n\n\n# func_usage_message\n# ------------------\n# Echo short help message to standard output.\nfunc_usage_message ()\n{\n    $debug_cmd\n\n    eval \\$ECHO \\\"\"Usage: $usage\"\\\"\n    echo\n    $SED -n 's|^# ||\n        /^Written by/{\n          x;p;x\n        }\n\th\n\t/^Written by/q' < \"$progpath\"\n    echo\n    eval \\$ECHO \\\"\"$usage_message\"\\\"\n}\n\n\n# func_version\n# ------------\n# Echo version message to standard output and exit.\nfunc_version ()\n{\n    $debug_cmd\n\n    printf '%s\\n' \"$progname $scriptversion\"\n    $SED -n '\n        /(C)/!b go\n        :more\n        /\\./!{\n          N\n          s|\\n# | |\n          b more\n        }\n        :go\n        /^# Written by /,/# warranty; / {\n          s|^# ||\n          s|^# *$||\n          s|\\((C)\\)[ 0-9,-]*[ ,-]\\([1-9][0-9]* \\)|\\1 \\2|\n          p\n        }\n        /^# Written by / {\n          s|^# ||\n          p\n        }\n        /^warranty; /q' < \"$progpath\"\n\n    exit $?\n}\n\n\n# Local variables:\n# mode: shell-script\n# sh-indentation: 2\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-pattern: \"10/scriptversion=%:y-%02m-%02d.%02H; # UTC\"\n# time-stamp-time-zone: \"UTC\"\n# End:\n\n# Set a version string.\nscriptversion='(GNU libtool) 2.4.6'\n\n\n# func_echo ARG...\n# ----------------\n# Libtool also displays the current mode in messages, so override\n# funclib.sh func_echo with this custom definition.\nfunc_echo ()\n{\n    $debug_cmd\n\n    _G_message=$*\n\n    func_echo_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_IFS\n      $ECHO \"$progname${opt_mode+: $opt_mode}: $_G_line\"\n    done\n    IFS=$func_echo_IFS\n}\n\n\n# func_warning ARG...\n# -------------------\n# Libtool warnings are not categorized, so override funclib.sh\n# func_warning with this simpler definition.\nfunc_warning ()\n{\n    $debug_cmd\n\n    $warning_func ${1+\"$@\"}\n}\n\n\n## ---------------- ##\n## Options parsing. ##\n## ---------------- ##\n\n# Hook in the functions to make sure our own options are parsed during\n# the option parsing loop.\n\nusage='$progpath [OPTION]... [MODE-ARG]...'\n\n# Short help message in response to '-h'.\nusage_message=\"Options:\n       --config             show all configuration variables\n       --debug              enable verbose shell tracing\n   -n, --dry-run            display commands without modifying any files\n       --features           display basic configuration information and exit\n       --mode=MODE          use operation mode MODE\n       --no-warnings        equivalent to '-Wnone'\n       --preserve-dup-deps  don't remove duplicate dependency libraries\n       --quiet, --silent    don't print informational messages\n       --tag=TAG            use configuration variables from tag TAG\n   -v, --verbose            print more informational messages than default\n       --version            print version information\n   -W, --warnings=CATEGORY  report the warnings falling in CATEGORY [all]\n   -h, --help, --help-all   print short, long, or detailed help message\n\"\n\n# Additional text appended to 'usage_message' in response to '--help'.\nfunc_help ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $ECHO \"$long_help_message\n\nMODE must be one of the following:\n\n       clean           remove files from the build directory\n       compile         compile a source file into a libtool object\n       execute         automatically set library path, then run a program\n       finish          complete the installation of libtool libraries\n       install         install libraries or executables\n       link            create a library or an executable\n       uninstall       remove libraries from an installed directory\n\nMODE-ARGS vary depending on the MODE.  When passed as first option,\n'--mode=MODE' may be abbreviated as 'MODE' or a unique abbreviation of that.\nTry '$progname --help --mode=MODE' for a more detailed description of MODE.\n\nWhen reporting a bug, please describe a test case to reproduce it and\ninclude the following information:\n\n       host-triplet:   $host\n       shell:          $SHELL\n       compiler:       $LTCC\n       compiler flags: $LTCFLAGS\n       linker:         $LD (gnu? $with_gnu_ld)\n       version:        $progname $scriptversion Debian-2.4.6-2\n       automake:       `($AUTOMAKE --version) 2>/dev/null |$SED 1q`\n       autoconf:       `($AUTOCONF --version) 2>/dev/null |$SED 1q`\n\nReport bugs to <bug-libtool@gnu.org>.\nGNU libtool home page: <http://www.gnu.org/s/libtool/>.\nGeneral help using GNU software: <http://www.gnu.org/gethelp/>.\"\n    exit 0\n}\n\n\n# func_lo2o OBJECT-NAME\n# ---------------------\n# Transform OBJECT-NAME from a '.lo' suffix to the platform specific\n# object suffix.\n\nlo2o=s/\\\\.lo\\$/.$objext/\no2lo=s/\\\\.$objext\\$/.lo/\n\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_lo2o ()\n  {\n    case $1 in\n      *.lo) func_lo2o_result=${1%.lo}.$objext ;;\n      *   ) func_lo2o_result=$1               ;;\n    esac\n  }'\n\n  # func_xform LIBOBJ-OR-SOURCE\n  # ---------------------------\n  # Transform LIBOBJ-OR-SOURCE from a '.o' or '.c' (or otherwise)\n  # suffix to a '.lo' libtool-object suffix.\n  eval 'func_xform ()\n  {\n    func_xform_result=${1%.*}.lo\n  }'\nelse\n  # ...otherwise fall back to using sed.\n  func_lo2o ()\n  {\n    func_lo2o_result=`$ECHO \"$1\" | $SED \"$lo2o\"`\n  }\n\n  func_xform ()\n  {\n    func_xform_result=`$ECHO \"$1\" | $SED 's|\\.[^.]*$|.lo|'`\n  }\nfi\n\n\n# func_fatal_configuration ARG...\n# -------------------------------\n# Echo program name prefixed message to standard error, followed by\n# a configuration failure hint, and exit.\nfunc_fatal_configuration ()\n{\n    func__fatal_error ${1+\"$@\"} \\\n      \"See the $PACKAGE documentation for more information.\" \\\n      \"Fatal configuration error.\"\n}\n\n\n# func_config\n# -----------\n# Display the configuration for all the tags in this script.\nfunc_config ()\n{\n    re_begincf='^# ### BEGIN LIBTOOL'\n    re_endcf='^# ### END LIBTOOL'\n\n    # Default configuration.\n    $SED \"1,/$re_begincf CONFIG/d;/$re_endcf CONFIG/,\\$d\" < \"$progpath\"\n\n    # Now print the configurations for the tags.\n    for tagname in $taglist; do\n      $SED -n \"/$re_begincf TAG CONFIG: $tagname\\$/,/$re_endcf TAG CONFIG: $tagname\\$/p\" < \"$progpath\"\n    done\n\n    exit $?\n}\n\n\n# func_features\n# -------------\n# Display the features supported by this script.\nfunc_features ()\n{\n    echo \"host: $host\"\n    if test yes = \"$build_libtool_libs\"; then\n      echo \"enable shared libraries\"\n    else\n      echo \"disable shared libraries\"\n    fi\n    if test yes = \"$build_old_libs\"; then\n      echo \"enable static libraries\"\n    else\n      echo \"disable static libraries\"\n    fi\n\n    exit $?\n}\n\n\n# func_enable_tag TAGNAME\n# -----------------------\n# Verify that TAGNAME is valid, and either flag an error and exit, or\n# enable the TAGNAME tag.  We also add TAGNAME to the global $taglist\n# variable here.\nfunc_enable_tag ()\n{\n    # Global variable:\n    tagname=$1\n\n    re_begincf=\"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\\$\"\n    re_endcf=\"^# ### END LIBTOOL TAG CONFIG: $tagname\\$\"\n    sed_extractcf=/$re_begincf/,/$re_endcf/p\n\n    # Validate tagname.\n    case $tagname in\n      *[!-_A-Za-z0-9,/]*)\n        func_fatal_error \"invalid tag name: $tagname\"\n        ;;\n    esac\n\n    # Don't test for the \"default\" C tag, as we know it's\n    # there but not specially marked.\n    case $tagname in\n        CC) ;;\n    *)\n        if $GREP \"$re_begincf\" \"$progpath\" >/dev/null 2>&1; then\n\t  taglist=\"$taglist $tagname\"\n\n\t  # Evaluate the configuration.  Be careful to quote the path\n\t  # and the sed script, to avoid splitting on whitespace, but\n\t  # also don't use non-portable quotes within backquotes within\n\t  # quotes we have to do it in 2 steps:\n\t  extractedcf=`$SED -n -e \"$sed_extractcf\" < \"$progpath\"`\n\t  eval \"$extractedcf\"\n        else\n\t  func_error \"ignoring unknown tag $tagname\"\n        fi\n        ;;\n    esac\n}\n\n\n# func_check_version_match\n# ------------------------\n# Ensure that we are using m4 macros, and libtool script from the same\n# release of libtool.\nfunc_check_version_match ()\n{\n    if test \"$package_revision\" != \"$macro_revision\"; then\n      if test \"$VERSION\" != \"$macro_version\"; then\n        if test -z \"$macro_version\"; then\n          cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from an older release.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n        else\n          cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from $PACKAGE $macro_version.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n        fi\n      else\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, revision $package_revision,\n$progname: but the definition of this LT_INIT comes from revision $macro_revision.\n$progname: You should recreate aclocal.m4 with macros from revision $package_revision\n$progname: of $PACKAGE $VERSION and run autoconf again.\n_LT_EOF\n      fi\n\n      exit $EXIT_MISMATCH\n    fi\n}\n\n\n# libtool_options_prep [ARG]...\n# -----------------------------\n# Preparation for options parsed by libtool.\nlibtool_options_prep ()\n{\n    $debug_mode\n\n    # Option defaults:\n    opt_config=false\n    opt_dlopen=\n    opt_dry_run=false\n    opt_help=false\n    opt_mode=\n    opt_preserve_dup_deps=false\n    opt_quiet=false\n\n    nonopt=\n    preserve_args=\n\n    # Shorthand for --mode=foo, only valid as the first argument\n    case $1 in\n    clean|clea|cle|cl)\n      shift; set dummy --mode clean ${1+\"$@\"}; shift\n      ;;\n    compile|compil|compi|comp|com|co|c)\n      shift; set dummy --mode compile ${1+\"$@\"}; shift\n      ;;\n    execute|execut|execu|exec|exe|ex|e)\n      shift; set dummy --mode execute ${1+\"$@\"}; shift\n      ;;\n    finish|finis|fini|fin|fi|f)\n      shift; set dummy --mode finish ${1+\"$@\"}; shift\n      ;;\n    install|instal|insta|inst|ins|in|i)\n      shift; set dummy --mode install ${1+\"$@\"}; shift\n      ;;\n    link|lin|li|l)\n      shift; set dummy --mode link ${1+\"$@\"}; shift\n      ;;\n    uninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)\n      shift; set dummy --mode uninstall ${1+\"$@\"}; shift\n      ;;\n    esac\n\n    # Pass back the list of options.\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_options_prep_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_options_prep libtool_options_prep\n\n\n# libtool_parse_options [ARG]...\n# ---------------------------------\n# Provide handling for libtool specific options.\nlibtool_parse_options ()\n{\n    $debug_cmd\n\n    # Perform our own loop to consume as many options as possible in\n    # each iteration.\n    while test $# -gt 0; do\n      _G_opt=$1\n      shift\n      case $_G_opt in\n        --dry-run|--dryrun|-n)\n                        opt_dry_run=:\n                        ;;\n\n        --config)       func_config ;;\n\n        --dlopen|-dlopen)\n                        opt_dlopen=\"${opt_dlopen+$opt_dlopen\n}$1\"\n                        shift\n                        ;;\n\n        --preserve-dup-deps)\n                        opt_preserve_dup_deps=: ;;\n\n        --features)     func_features ;;\n\n        --finish)       set dummy --mode finish ${1+\"$@\"}; shift ;;\n\n        --help)         opt_help=: ;;\n\n        --help-all)     opt_help=': help-all' ;;\n\n        --mode)         test $# = 0 && func_missing_arg $_G_opt && break\n                        opt_mode=$1\n                        case $1 in\n                          # Valid mode arguments:\n                          clean|compile|execute|finish|install|link|relink|uninstall) ;;\n\n                          # Catch anything else as an error\n                          *) func_error \"invalid argument for $_G_opt\"\n                             exit_cmd=exit\n                             break\n                             ;;\n                        esac\n                        shift\n                        ;;\n\n        --no-silent|--no-quiet)\n                        opt_quiet=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --no-warnings|--no-warning|--no-warn)\n                        opt_warning=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --no-verbose)\n                        opt_verbose=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --silent|--quiet)\n                        opt_quiet=:\n                        opt_verbose=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --tag)          test $# = 0 && func_missing_arg $_G_opt && break\n                        opt_tag=$1\n                        func_append preserve_args \" $_G_opt $1\"\n                        func_enable_tag \"$1\"\n                        shift\n                        ;;\n\n        --verbose|-v)   opt_quiet=false\n                        opt_verbose=:\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n\t# An option not handled by this hook function:\n        *)\t\tset dummy \"$_G_opt\" ${1+\"$@\"};\tshift; break  ;;\n      esac\n    done\n\n\n    # save modified positional parameters for caller\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_parse_options_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_parse_options libtool_parse_options\n\n\n\n# libtool_validate_options [ARG]...\n# ---------------------------------\n# Perform any sanity checks on option settings and/or unconsumed\n# arguments.\nlibtool_validate_options ()\n{\n    # save first non-option argument\n    if test 0 -lt $#; then\n      nonopt=$1\n      shift\n    fi\n\n    # preserve --debug\n    test : = \"$debug_cmd\" || func_append preserve_args \" --debug\"\n\n    case $host in\n      # Solaris2 added to fix http://debbugs.gnu.org/cgi/bugreport.cgi?bug=16452\n      # see also: http://gcc.gnu.org/bugzilla/show_bug.cgi?id=59788\n      *cygwin* | *mingw* | *pw32* | *cegcc* | *solaris2* | *os2*)\n        # don't eliminate duplications in $postdeps and $predeps\n        opt_duplicate_compiler_generated_deps=:\n        ;;\n      *)\n        opt_duplicate_compiler_generated_deps=$opt_preserve_dup_deps\n        ;;\n    esac\n\n    $opt_help || {\n      # Sanity checks first:\n      func_check_version_match\n\n      test yes != \"$build_libtool_libs\" \\\n        && test yes != \"$build_old_libs\" \\\n        && func_fatal_configuration \"not configured to build any kind of library\"\n\n      # Darwin sucks\n      eval std_shrext=\\\"$shrext_cmds\\\"\n\n      # Only execute mode is allowed to have -dlopen flags.\n      if test -n \"$opt_dlopen\" && test execute != \"$opt_mode\"; then\n        func_error \"unrecognized option '-dlopen'\"\n        $ECHO \"$help\" 1>&2\n        exit $EXIT_FAILURE\n      fi\n\n      # Change the help message to a mode-specific one.\n      generic_help=$help\n      help=\"Try '$progname --help --mode=$opt_mode' for more information.\"\n    }\n\n    # Pass back the unparsed argument list\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_validate_options_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_validate_options libtool_validate_options\n\n\n# Process options as early as possible so that --help and --version\n# can return quickly.\nfunc_options ${1+\"$@\"}\neval set dummy \"$func_options_result\"; shift\n\n\n\n## ----------- ##\n##    Main.    ##\n## ----------- ##\n\nmagic='%%%MAGIC variable%%%'\nmagic_exe='%%%MAGIC EXE variable%%%'\n\n# Global variables.\nextracted_archives=\nextracted_serial=0\n\n# If this variable is set in any of the actions, the command in it\n# will be execed at the end.  This prevents here-documents from being\n# left over by shells.\nexec_cmd=\n\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n$1\n_LTECHO_EOF'\n}\n\n# func_generated_by_libtool\n# True iff stdin has been generated by Libtool. This function is only\n# a basic sanity check; it will hardly flush out determined imposters.\nfunc_generated_by_libtool_p ()\n{\n  $GREP \"^# Generated by .*$PACKAGE\" > /dev/null 2>&1\n}\n\n# func_lalib_p file\n# True iff FILE is a libtool '.la' library or '.lo' object file.\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_lalib_p ()\n{\n    test -f \"$1\" &&\n      $SED -e 4q \"$1\" 2>/dev/null | func_generated_by_libtool_p\n}\n\n# func_lalib_unsafe_p file\n# True iff FILE is a libtool '.la' library or '.lo' object file.\n# This function implements the same check as func_lalib_p without\n# resorting to external programs.  To this end, it redirects stdin and\n# closes it afterwards, without saving the original file descriptor.\n# As a safety measure, use it only where a negative result would be\n# fatal anyway.  Works if 'file' does not exist.\nfunc_lalib_unsafe_p ()\n{\n    lalib_p=no\n    if test -f \"$1\" && test -r \"$1\" && exec 5<&0 <\"$1\"; then\n\tfor lalib_p_l in 1 2 3 4\n\tdo\n\t    read lalib_p_line\n\t    case $lalib_p_line in\n\t\t\\#\\ Generated\\ by\\ *$PACKAGE* ) lalib_p=yes; break;;\n\t    esac\n\tdone\n\texec 0<&5 5<&-\n    fi\n    test yes = \"$lalib_p\"\n}\n\n# func_ltwrapper_script_p file\n# True iff FILE is a libtool wrapper script\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_script_p ()\n{\n    test -f \"$1\" &&\n      $lt_truncate_bin < \"$1\" 2>/dev/null | func_generated_by_libtool_p\n}\n\n# func_ltwrapper_executable_p file\n# True iff FILE is a libtool wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_executable_p ()\n{\n    func_ltwrapper_exec_suffix=\n    case $1 in\n    *.exe) ;;\n    *) func_ltwrapper_exec_suffix=.exe ;;\n    esac\n    $GREP \"$magic_exe\" \"$1$func_ltwrapper_exec_suffix\" >/dev/null 2>&1\n}\n\n# func_ltwrapper_scriptname file\n# Assumes file is an ltwrapper_executable\n# uses $file to determine the appropriate filename for a\n# temporary ltwrapper_script.\nfunc_ltwrapper_scriptname ()\n{\n    func_dirname_and_basename \"$1\" \"\" \".\"\n    func_stripname '' '.exe' \"$func_basename_result\"\n    func_ltwrapper_scriptname_result=$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper\n}\n\n# func_ltwrapper_p file\n# True iff FILE is a libtool wrapper script or wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_p ()\n{\n    func_ltwrapper_script_p \"$1\" || func_ltwrapper_executable_p \"$1\"\n}\n\n\n# func_execute_cmds commands fail_cmd\n# Execute tilde-delimited COMMANDS.\n# If FAIL_CMD is given, eval that upon failure.\n# FAIL_CMD may read-access the current command in variable CMD!\nfunc_execute_cmds ()\n{\n    $debug_cmd\n\n    save_ifs=$IFS; IFS='~'\n    for cmd in $1; do\n      IFS=$sp$nl\n      eval cmd=\\\"$cmd\\\"\n      IFS=$save_ifs\n      func_show_eval \"$cmd\" \"${2-:}\"\n    done\n    IFS=$save_ifs\n}\n\n\n# func_source file\n# Source FILE, adding directory component if necessary.\n# Note that it is not necessary on cygwin/mingw to append a dot to\n# FILE even if both FILE and FILE.exe exist: automatic-append-.exe\n# behavior happens only for exec(3), not for open(2)!  Also, sourcing\n# 'FILE.' does not work on cygwin managed mounts.\nfunc_source ()\n{\n    $debug_cmd\n\n    case $1 in\n    */* | *\\\\*)\t. \"$1\" ;;\n    *)\t\t. \"./$1\" ;;\n    esac\n}\n\n\n# func_resolve_sysroot PATH\n# Replace a leading = in PATH with a sysroot.  Store the result into\n# func_resolve_sysroot_result\nfunc_resolve_sysroot ()\n{\n  func_resolve_sysroot_result=$1\n  case $func_resolve_sysroot_result in\n  =*)\n    func_stripname '=' '' \"$func_resolve_sysroot_result\"\n    func_resolve_sysroot_result=$lt_sysroot$func_stripname_result\n    ;;\n  esac\n}\n\n# func_replace_sysroot PATH\n# If PATH begins with the sysroot, replace it with = and\n# store the result into func_replace_sysroot_result.\nfunc_replace_sysroot ()\n{\n  case $lt_sysroot:$1 in\n  ?*:\"$lt_sysroot\"*)\n    func_stripname \"$lt_sysroot\" '' \"$1\"\n    func_replace_sysroot_result='='$func_stripname_result\n    ;;\n  *)\n    # Including no sysroot.\n    func_replace_sysroot_result=$1\n    ;;\n  esac\n}\n\n# func_infer_tag arg\n# Infer tagged configuration to use if any are available and\n# if one wasn't chosen via the \"--tag\" command line option.\n# Only attempt this if the compiler in the base compile\n# command doesn't match the default compiler.\n# arg is usually of the form 'gcc ...'\nfunc_infer_tag ()\n{\n    $debug_cmd\n\n    if test -n \"$available_tags\" && test -z \"$tagname\"; then\n      CC_quoted=\n      for arg in $CC; do\n\tfunc_append_quoted CC_quoted \"$arg\"\n      done\n      CC_expanded=`func_echo_all $CC`\n      CC_quoted_expanded=`func_echo_all $CC_quoted`\n      case $@ in\n      # Blanks in the command may have been stripped by the calling shell,\n      # but not from the CC environment variable when configure was run.\n      \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n      \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*) ;;\n      # Blanks at the start of $base_compile will cause this to fail\n      # if we don't check for them as well.\n      *)\n\tfor z in $available_tags; do\n\t  if $GREP \"^# ### BEGIN LIBTOOL TAG CONFIG: $z$\" < \"$progpath\" > /dev/null; then\n\t    # Evaluate the configuration.\n\t    eval \"`$SED -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`\"\n\t    CC_quoted=\n\t    for arg in $CC; do\n\t      # Double-quote args containing other shell metacharacters.\n\t      func_append_quoted CC_quoted \"$arg\"\n\t    done\n\t    CC_expanded=`func_echo_all $CC`\n\t    CC_quoted_expanded=`func_echo_all $CC_quoted`\n\t    case \"$@ \" in\n\t    \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n\t    \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*)\n\t      # The compiler in the base compile command matches\n\t      # the one in the tagged configuration.\n\t      # Assume this is the tagged configuration we want.\n\t      tagname=$z\n\t      break\n\t      ;;\n\t    esac\n\t  fi\n\tdone\n\t# If $tagname still isn't set, then no tagged configuration\n\t# was found and let the user know that the \"--tag\" command\n\t# line option must be used.\n\tif test -z \"$tagname\"; then\n\t  func_echo \"unable to infer tagged configuration\"\n\t  func_fatal_error \"specify a tag with '--tag'\"\n#\telse\n#\t  func_verbose \"using $tagname tagged configuration\"\n\tfi\n\t;;\n      esac\n    fi\n}\n\n\n\n# func_write_libtool_object output_name pic_name nonpic_name\n# Create a libtool object file (analogous to a \".la\" file),\n# but don't create it if we're doing a dry run.\nfunc_write_libtool_object ()\n{\n    write_libobj=$1\n    if test yes = \"$build_libtool_libs\"; then\n      write_lobj=\\'$2\\'\n    else\n      write_lobj=none\n    fi\n\n    if test yes = \"$build_old_libs\"; then\n      write_oldobj=\\'$3\\'\n    else\n      write_oldobj=none\n    fi\n\n    $opt_dry_run || {\n      cat >${write_libobj}T <<EOF\n# $write_libobj - a libtool object file\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object=$write_lobj\n\n# Name of the non-PIC object\nnon_pic_object=$write_oldobj\n\nEOF\n      $MV \"${write_libobj}T\" \"$write_libobj\"\n    }\n}\n\n\n##################################################\n# FILE NAME AND PATH CONVERSION HELPER FUNCTIONS #\n##################################################\n\n# func_convert_core_file_wine_to_w32 ARG\n# Helper function used by file name conversion functions when $build is *nix,\n# and $host is mingw, cygwin, or some other w32 environment. Relies on a\n# correctly configured wine environment available, with the winepath program\n# in $build's $PATH.\n#\n# ARG is the $build file name to be converted to w32 format.\n# Result is available in $func_convert_core_file_wine_to_w32_result, and will\n# be empty on error (or when ARG is empty)\nfunc_convert_core_file_wine_to_w32 ()\n{\n  $debug_cmd\n\n  func_convert_core_file_wine_to_w32_result=$1\n  if test -n \"$1\"; then\n    # Unfortunately, winepath does not exit with a non-zero error code, so we\n    # are forced to check the contents of stdout. On the other hand, if the\n    # command is not found, the shell will set an exit code of 127 and print\n    # *an error message* to stdout. So we must check for both error code of\n    # zero AND non-empty stdout, which explains the odd construction:\n    func_convert_core_file_wine_to_w32_tmp=`winepath -w \"$1\" 2>/dev/null`\n    if test \"$?\" -eq 0 && test -n \"$func_convert_core_file_wine_to_w32_tmp\"; then\n      func_convert_core_file_wine_to_w32_result=`$ECHO \"$func_convert_core_file_wine_to_w32_tmp\" |\n        $SED -e \"$sed_naive_backslashify\"`\n    else\n      func_convert_core_file_wine_to_w32_result=\n    fi\n  fi\n}\n# end: func_convert_core_file_wine_to_w32\n\n\n# func_convert_core_path_wine_to_w32 ARG\n# Helper function used by path conversion functions when $build is *nix, and\n# $host is mingw, cygwin, or some other w32 environment. Relies on a correctly\n# configured wine environment available, with the winepath program in $build's\n# $PATH. Assumes ARG has no leading or trailing path separator characters.\n#\n# ARG is path to be converted from $build format to win32.\n# Result is available in $func_convert_core_path_wine_to_w32_result.\n# Unconvertible file (directory) names in ARG are skipped; if no directory names\n# are convertible, then the result may be empty.\nfunc_convert_core_path_wine_to_w32 ()\n{\n  $debug_cmd\n\n  # unfortunately, winepath doesn't convert paths, only file names\n  func_convert_core_path_wine_to_w32_result=\n  if test -n \"$1\"; then\n    oldIFS=$IFS\n    IFS=:\n    for func_convert_core_path_wine_to_w32_f in $1; do\n      IFS=$oldIFS\n      func_convert_core_file_wine_to_w32 \"$func_convert_core_path_wine_to_w32_f\"\n      if test -n \"$func_convert_core_file_wine_to_w32_result\"; then\n        if test -z \"$func_convert_core_path_wine_to_w32_result\"; then\n          func_convert_core_path_wine_to_w32_result=$func_convert_core_file_wine_to_w32_result\n        else\n          func_append func_convert_core_path_wine_to_w32_result \";$func_convert_core_file_wine_to_w32_result\"\n        fi\n      fi\n    done\n    IFS=$oldIFS\n  fi\n}\n# end: func_convert_core_path_wine_to_w32\n\n\n# func_cygpath ARGS...\n# Wrapper around calling the cygpath program via LT_CYGPATH. This is used when\n# when (1) $build is *nix and Cygwin is hosted via a wine environment; or (2)\n# $build is MSYS and $host is Cygwin, or (3) $build is Cygwin. In case (1) or\n# (2), returns the Cygwin file name or path in func_cygpath_result (input\n# file name or path is assumed to be in w32 format, as previously converted\n# from $build's *nix or MSYS format). In case (3), returns the w32 file name\n# or path in func_cygpath_result (input file name or path is assumed to be in\n# Cygwin format). Returns an empty string on error.\n#\n# ARGS are passed to cygpath, with the last one being the file name or path to\n# be converted.\n#\n# Specify the absolute *nix (or w32) name to cygpath in the LT_CYGPATH\n# environment variable; do not put it in $PATH.\nfunc_cygpath ()\n{\n  $debug_cmd\n\n  if test -n \"$LT_CYGPATH\" && test -f \"$LT_CYGPATH\"; then\n    func_cygpath_result=`$LT_CYGPATH \"$@\" 2>/dev/null`\n    if test \"$?\" -ne 0; then\n      # on failure, ensure result is empty\n      func_cygpath_result=\n    fi\n  else\n    func_cygpath_result=\n    func_error \"LT_CYGPATH is empty or specifies non-existent file: '$LT_CYGPATH'\"\n  fi\n}\n#end: func_cygpath\n\n\n# func_convert_core_msys_to_w32 ARG\n# Convert file name or path ARG from MSYS format to w32 format.  Return\n# result in func_convert_core_msys_to_w32_result.\nfunc_convert_core_msys_to_w32 ()\n{\n  $debug_cmd\n\n  # awkward: cmd appends spaces to result\n  func_convert_core_msys_to_w32_result=`( cmd //c echo \"$1\" ) 2>/dev/null |\n    $SED -e 's/[ ]*$//' -e \"$sed_naive_backslashify\"`\n}\n#end: func_convert_core_msys_to_w32\n\n\n# func_convert_file_check ARG1 ARG2\n# Verify that ARG1 (a file name in $build format) was converted to $host\n# format in ARG2. Otherwise, emit an error message, but continue (resetting\n# func_to_host_file_result to ARG1).\nfunc_convert_file_check ()\n{\n  $debug_cmd\n\n  if test -z \"$2\" && test -n \"$1\"; then\n    func_error \"Could not determine host file name corresponding to\"\n    func_error \"  '$1'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback:\n    func_to_host_file_result=$1\n  fi\n}\n# end func_convert_file_check\n\n\n# func_convert_path_check FROM_PATHSEP TO_PATHSEP FROM_PATH TO_PATH\n# Verify that FROM_PATH (a path in $build format) was converted to $host\n# format in TO_PATH. Otherwise, emit an error message, but continue, resetting\n# func_to_host_file_result to a simplistic fallback value (see below).\nfunc_convert_path_check ()\n{\n  $debug_cmd\n\n  if test -z \"$4\" && test -n \"$3\"; then\n    func_error \"Could not determine the host path corresponding to\"\n    func_error \"  '$3'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback.  This is a deliberately simplistic \"conversion\" and\n    # should not be \"improved\".  See libtool.info.\n    if test \"x$1\" != \"x$2\"; then\n      lt_replace_pathsep_chars=\"s|$1|$2|g\"\n      func_to_host_path_result=`echo \"$3\" |\n        $SED -e \"$lt_replace_pathsep_chars\"`\n    else\n      func_to_host_path_result=$3\n    fi\n  fi\n}\n# end func_convert_path_check\n\n\n# func_convert_path_front_back_pathsep FRONTPAT BACKPAT REPL ORIG\n# Modifies func_to_host_path_result by prepending REPL if ORIG matches FRONTPAT\n# and appending REPL if ORIG matches BACKPAT.\nfunc_convert_path_front_back_pathsep ()\n{\n  $debug_cmd\n\n  case $4 in\n  $1 ) func_to_host_path_result=$3$func_to_host_path_result\n    ;;\n  esac\n  case $4 in\n  $2 ) func_append func_to_host_path_result \"$3\"\n    ;;\n  esac\n}\n# end func_convert_path_front_back_pathsep\n\n\n##################################################\n# $build to $host FILE NAME CONVERSION FUNCTIONS #\n##################################################\n# invoked via '$to_host_file_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# Result will be available in $func_to_host_file_result.\n\n\n# func_to_host_file ARG\n# Converts the file name ARG from $build format to $host format. Return result\n# in func_to_host_file_result.\nfunc_to_host_file ()\n{\n  $debug_cmd\n\n  $to_host_file_cmd \"$1\"\n}\n# end func_to_host_file\n\n\n# func_to_tool_file ARG LAZY\n# converts the file name ARG from $build format to toolchain format. Return\n# result in func_to_tool_file_result.  If the conversion in use is listed\n# in (the comma separated) LAZY, no conversion takes place.\nfunc_to_tool_file ()\n{\n  $debug_cmd\n\n  case ,$2, in\n    *,\"$to_tool_file_cmd\",*)\n      func_to_tool_file_result=$1\n      ;;\n    *)\n      $to_tool_file_cmd \"$1\"\n      func_to_tool_file_result=$func_to_host_file_result\n      ;;\n  esac\n}\n# end func_to_tool_file\n\n\n# func_convert_file_noop ARG\n# Copy ARG to func_to_host_file_result.\nfunc_convert_file_noop ()\n{\n  func_to_host_file_result=$1\n}\n# end func_convert_file_noop\n\n\n# func_convert_file_msys_to_w32 ARG\n# Convert file name ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_msys_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_to_host_file_result=$func_convert_core_msys_to_w32_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_w32\n\n\n# func_convert_file_cygwin_to_w32 ARG\n# Convert file name ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_cygwin_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    # because $build is cygwin, we call \"the\" cygpath in $PATH; no need to use\n    # LT_CYGPATH in this case.\n    func_to_host_file_result=`cygpath -m \"$1\"`\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_cygwin_to_w32\n\n\n# func_convert_file_nix_to_w32 ARG\n# Convert file name ARG from *nix to w32 format.  Requires a wine environment\n# and a working winepath. Returns result in func_to_host_file_result.\nfunc_convert_file_nix_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_to_host_file_result=$func_convert_core_file_wine_to_w32_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_w32\n\n\n# func_convert_file_msys_to_cygwin ARG\n# Convert file name ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_file_msys_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_file_result=$func_cygpath_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_cygwin\n\n\n# func_convert_file_nix_to_cygwin ARG\n# Convert file name ARG from *nix to Cygwin format.  Requires Cygwin installed\n# in a wine environment, working winepath, and LT_CYGPATH set.  Returns result\n# in func_to_host_file_result.\nfunc_convert_file_nix_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    # convert from *nix to w32, then use cygpath to convert from w32 to cygwin.\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_file_wine_to_w32_result\"\n    func_to_host_file_result=$func_cygpath_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_cygwin\n\n\n#############################################\n# $build to $host PATH CONVERSION FUNCTIONS #\n#############################################\n# invoked via '$to_host_path_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# The result will be available in $func_to_host_path_result.\n#\n# Path separators are also converted from $build format to $host format.  If\n# ARG begins or ends with a path separator character, it is preserved (but\n# converted to $host format) on output.\n#\n# All path conversion functions are named using the following convention:\n#   file name conversion function    : func_convert_file_X_to_Y ()\n#   path conversion function         : func_convert_path_X_to_Y ()\n# where, for any given $build/$host combination the 'X_to_Y' value is the\n# same.  If conversion functions are added for new $build/$host combinations,\n# the two new functions must follow this pattern, or func_init_to_host_path_cmd\n# will break.\n\n\n# func_init_to_host_path_cmd\n# Ensures that function \"pointer\" variable $to_host_path_cmd is set to the\n# appropriate value, based on the value of $to_host_file_cmd.\nto_host_path_cmd=\nfunc_init_to_host_path_cmd ()\n{\n  $debug_cmd\n\n  if test -z \"$to_host_path_cmd\"; then\n    func_stripname 'func_convert_file_' '' \"$to_host_file_cmd\"\n    to_host_path_cmd=func_convert_path_$func_stripname_result\n  fi\n}\n\n\n# func_to_host_path ARG\n# Converts the path ARG from $build format to $host format. Return result\n# in func_to_host_path_result.\nfunc_to_host_path ()\n{\n  $debug_cmd\n\n  func_init_to_host_path_cmd\n  $to_host_path_cmd \"$1\"\n}\n# end func_to_host_path\n\n\n# func_convert_path_noop ARG\n# Copy ARG to func_to_host_path_result.\nfunc_convert_path_noop ()\n{\n  func_to_host_path_result=$1\n}\n# end func_convert_path_noop\n\n\n# func_convert_path_msys_to_w32 ARG\n# Convert path ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_path_result.\nfunc_convert_path_msys_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from ARG.  MSYS\n    # behavior is inconsistent here; cygpath turns them into '.;' and ';.';\n    # and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=$func_convert_core_msys_to_w32_result\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_w32\n\n\n# func_convert_path_cygwin_to_w32 ARG\n# Convert path ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_cygwin_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_to_host_path_result=`cygpath -m -p \"$func_to_host_path_tmp1\"`\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_cygwin_to_w32\n\n\n# func_convert_path_nix_to_w32 ARG\n# Convert path ARG from *nix to w32 format.  Requires a wine environment and\n# a working winepath.  Returns result in func_to_host_file_result.\nfunc_convert_path_nix_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=$func_convert_core_path_wine_to_w32_result\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_w32\n\n\n# func_convert_path_msys_to_cygwin ARG\n# Convert path ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_path_msys_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_path_result=$func_cygpath_result\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_cygwin\n\n\n# func_convert_path_nix_to_cygwin ARG\n# Convert path ARG from *nix to Cygwin format.  Requires Cygwin installed in a\n# a wine environment, working winepath, and LT_CYGPATH set.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_nix_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from\n    # ARG. msys behavior is inconsistent here, cygpath turns them\n    # into '.;' and ';.', and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_path_wine_to_w32_result\"\n    func_to_host_path_result=$func_cygpath_result\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_cygwin\n\n\n# func_dll_def_p FILE\n# True iff FILE is a Windows DLL '.def' file.\n# Keep in sync with _LT_DLL_DEF_P in libtool.m4\nfunc_dll_def_p ()\n{\n  $debug_cmd\n\n  func_dll_def_p_tmp=`$SED -n \\\n    -e 's/^[\t ]*//' \\\n    -e '/^\\(;.*\\)*$/d' \\\n    -e 's/^\\(EXPORTS\\|LIBRARY\\)\\([\t ].*\\)*$/DEF/p' \\\n    -e q \\\n    \"$1\"`\n  test DEF = \"$func_dll_def_p_tmp\"\n}\n\n\n# func_mode_compile arg...\nfunc_mode_compile ()\n{\n    $debug_cmd\n\n    # Get the compilation command and the source file.\n    base_compile=\n    srcfile=$nonopt  #  always keep a non-empty value in \"srcfile\"\n    suppress_opt=yes\n    suppress_output=\n    arg_mode=normal\n    libobj=\n    later=\n    pie_flag=\n\n    for arg\n    do\n      case $arg_mode in\n      arg  )\n\t# do not \"continue\".  Instead, add this to base_compile\n\tlastarg=$arg\n\targ_mode=normal\n\t;;\n\n      target )\n\tlibobj=$arg\n\targ_mode=normal\n\tcontinue\n\t;;\n\n      normal )\n\t# Accept any command-line options.\n\tcase $arg in\n\t-o)\n\t  test -n \"$libobj\" && \\\n\t    func_fatal_error \"you cannot specify '-o' more than once\"\n\t  arg_mode=target\n\t  continue\n\t  ;;\n\n\t-pie | -fpie | -fPIE)\n          func_append pie_flag \" $arg\"\n\t  continue\n\t  ;;\n\n\t-shared | -static | -prefer-pic | -prefer-non-pic)\n\t  func_append later \" $arg\"\n\t  continue\n\t  ;;\n\n\t-no-suppress)\n\t  suppress_opt=no\n\t  continue\n\t  ;;\n\n\t-Xcompiler)\n\t  arg_mode=arg  #  the next one goes into the \"base_compile\" arg list\n\t  continue      #  The current \"srcfile\" will either be retained or\n\t  ;;            #  replaced later.  I would guess that would be a bug.\n\n\t-Wc,*)\n\t  func_stripname '-Wc,' '' \"$arg\"\n\t  args=$func_stripname_result\n\t  lastarg=\n\t  save_ifs=$IFS; IFS=,\n\t  for arg in $args; do\n\t    IFS=$save_ifs\n\t    func_append_quoted lastarg \"$arg\"\n\t  done\n\t  IFS=$save_ifs\n\t  func_stripname ' ' '' \"$lastarg\"\n\t  lastarg=$func_stripname_result\n\n\t  # Add the arguments to base_compile.\n\t  func_append base_compile \" $lastarg\"\n\t  continue\n\t  ;;\n\n\t*)\n\t  # Accept the current argument as the source file.\n\t  # The previous \"srcfile\" becomes the current argument.\n\t  #\n\t  lastarg=$srcfile\n\t  srcfile=$arg\n\t  ;;\n\tesac  #  case $arg\n\t;;\n      esac    #  case $arg_mode\n\n      # Aesthetically quote the previous argument.\n      func_append_quoted base_compile \"$lastarg\"\n    done # for arg\n\n    case $arg_mode in\n    arg)\n      func_fatal_error \"you must specify an argument for -Xcompile\"\n      ;;\n    target)\n      func_fatal_error \"you must specify a target with '-o'\"\n      ;;\n    *)\n      # Get the name of the library object.\n      test -z \"$libobj\" && {\n\tfunc_basename \"$srcfile\"\n\tlibobj=$func_basename_result\n      }\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    case $libobj in\n    *.[cCFSifmso] | \\\n    *.ada | *.adb | *.ads | *.asm | \\\n    *.c++ | *.cc | *.ii | *.class | *.cpp | *.cxx | \\\n    *.[fF][09]? | *.for | *.java | *.go | *.obj | *.sx | *.cu | *.cup)\n      func_xform \"$libobj\"\n      libobj=$func_xform_result\n      ;;\n    esac\n\n    case $libobj in\n    *.lo) func_lo2o \"$libobj\"; obj=$func_lo2o_result ;;\n    *)\n      func_fatal_error \"cannot determine name of library object from '$libobj'\"\n      ;;\n    esac\n\n    func_infer_tag $base_compile\n\n    for arg in $later; do\n      case $arg in\n      -shared)\n\ttest yes = \"$build_libtool_libs\" \\\n\t  || func_fatal_configuration \"cannot build a shared library\"\n\tbuild_old_libs=no\n\tcontinue\n\t;;\n\n      -static)\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n\n      -prefer-pic)\n\tpic_mode=yes\n\tcontinue\n\t;;\n\n      -prefer-non-pic)\n\tpic_mode=no\n\tcontinue\n\t;;\n      esac\n    done\n\n    func_quote_for_eval \"$libobj\"\n    test \"X$libobj\" != \"X$func_quote_for_eval_result\" \\\n      && $ECHO \"X$libobj\" | $GREP '[]~#^*{};<>?\"'\"'\"'\t &()|`$[]' \\\n      && func_warning \"libobj name '$libobj' may not contain shell special characters.\"\n    func_dirname_and_basename \"$obj\" \"/\" \"\"\n    objname=$func_basename_result\n    xdir=$func_dirname_result\n    lobj=$xdir$objdir/$objname\n\n    test -z \"$base_compile\" && \\\n      func_fatal_help \"you must specify a compilation command\"\n\n    # Delete any leftover library objects.\n    if test yes = \"$build_old_libs\"; then\n      removelist=\"$obj $lobj $libobj ${libobj}T\"\n    else\n      removelist=\"$lobj $libobj ${libobj}T\"\n    fi\n\n    # On Cygwin there's no \"real\" PIC flag so we must build both object types\n    case $host_os in\n    cygwin* | mingw* | pw32* | os2* | cegcc*)\n      pic_mode=default\n      ;;\n    esac\n    if test no = \"$pic_mode\" && test pass_all != \"$deplibs_check_method\"; then\n      # non-PIC code in shared libraries is not supported\n      pic_mode=default\n    fi\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test no = \"$compiler_c_o\"; then\n      output_obj=`$ECHO \"$srcfile\" | $SED 's%^.*/%%; s%\\.[^.]*$%%'`.$objext\n      lockfile=$output_obj.lock\n    else\n      output_obj=\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test yes = \"$need_locks\"; then\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test warn = \"$need_locks\"; then\n      if test -f \"$lockfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n      func_append removelist \" $output_obj\"\n      $ECHO \"$srcfile\" > \"$lockfile\"\n    fi\n\n    $opt_dry_run || $RM $removelist\n    func_append removelist \" $lockfile\"\n    trap '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE' 1 2 15\n\n    func_to_tool_file \"$srcfile\" func_convert_file_msys_to_w32\n    srcfile=$func_to_tool_file_result\n    func_quote_for_eval \"$srcfile\"\n    qsrcfile=$func_quote_for_eval_result\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test yes = \"$build_libtool_libs\"; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      if test no != \"$pic_mode\"; then\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      else\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      fi\n\n      func_mkdir_p \"$xdir$objdir\"\n\n      if test -z \"$output_obj\"; then\n\t# Place PIC objects in $objdir\n\tfunc_append command \" -o $lobj\"\n      fi\n\n      func_show_eval_locale \"$command\"\t\\\n          'test -n \"$output_obj\" && $RM $removelist; exit $EXIT_FAILURE'\n\n      if test warn = \"$need_locks\" &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$lobj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$lobj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n\n      # Allow error messages only from the first compilation.\n      if test yes = \"$suppress_opt\"; then\n\tsuppress_output=' >/dev/null 2>&1'\n      fi\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test yes = \"$build_old_libs\"; then\n      if test yes != \"$pic_mode\"; then\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile$pie_flag\"\n      else\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      fi\n      if test yes = \"$compiler_c_o\"; then\n\tfunc_append command \" -o $obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      func_append command \"$suppress_output\"\n      func_show_eval_locale \"$command\" \\\n        '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE'\n\n      if test warn = \"$need_locks\" &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$obj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$obj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n    fi\n\n    $opt_dry_run || {\n      func_write_libtool_object \"$libobj\" \"$objdir/$objname\" \"$objname\"\n\n      # Unlock the critical section if it was locked\n      if test no != \"$need_locks\"; then\n\tremovelist=$lockfile\n        $RM \"$lockfile\"\n      fi\n    }\n\n    exit $EXIT_SUCCESS\n}\n\n$opt_help || {\n  test compile = \"$opt_mode\" && func_mode_compile ${1+\"$@\"}\n}\n\nfunc_mode_help ()\n{\n    # We need to display help for each of the modes.\n    case $opt_mode in\n      \"\")\n        # Generic help is extracted from the usage comments\n        # at the start of this file.\n        func_help\n        ;;\n\n      clean)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=clean RM [RM-OPTION]... FILE...\n\nRemove files from the build directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically '/bin/rm').  RM-OPTIONS are options (such as '-f') to be passed\nto RM.\n\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      compile)\n      $ECHO \\\n\"Usage: $progname [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -no-suppress      do not suppress compiler output for multiple passes\n  -prefer-pic       try to build PIC objects only\n  -prefer-non-pic   try to build non-PIC objects only\n  -shared           do not build a '.o' file suitable for static linking\n  -static           only build a '.o' file suitable for static linking\n  -Wc,FLAG          pass FLAG directly to the compiler\n\nCOMPILE-COMMAND is a command to be used in creating a 'standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix '.c' with the\nlibrary object suffix, '.lo'.\"\n        ;;\n\n      execute)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to '-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n        ;;\n\n      finish)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe '--dry-run' option if you just want to see what would be executed.\"\n        ;;\n\n      install)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the 'install' or 'cp' program.\n\nThe following components of INSTALL-COMMAND are treated specially:\n\n  -inst-prefix-dir PREFIX-DIR  Use PREFIX-DIR as a staging area for installation\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n        ;;\n\n      link)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -bindir BINDIR    specify path to binaries directory (for systems where\n                    libraries must be found in the PATH setting at runtime)\n  -dlopen FILE      '-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n                    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n                    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-fast-install  disable the fast-install mode\n  -no-install       link a not-installable executable\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -objectlist FILE  use a list of object files found in FILE to specify objects\n  -os2dllname NAME  force a short DLL name on OS/2 (no effect on other OSes)\n  -precious-files-regex REGEX\n                    don't remove output files matching REGEX\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -shared           only do dynamic linking of libtool libraries\n  -shrext SUFFIX    override the standard shared library file extension\n  -static           do not do any dynamic linking of uninstalled libtool libraries\n  -static-libtool-libs\n                    do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n                    specify library version info [each variable defaults to 0]\n  -weak LIBNAME     declare that the target provides the LIBNAME interface\n  -Wc,FLAG\n  -Xcompiler FLAG   pass linker-specific FLAG directly to the compiler\n  -Wl,FLAG\n  -Xlinker FLAG     pass linker-specific FLAG directly to the linker\n  -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)\n\nAll other options (arguments beginning with '-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in '.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in '.la', then a libtool library is created,\nonly library objects ('.lo' files) may be specified, and '-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in '.a' or '.lib', then a standard library is created\nusing 'ar' and 'ranlib', or on Windows using 'lib'.\n\nIf OUTPUT-FILE ends in '.lo' or '.$objext', then a reloadable object file\nis created, otherwise an executable program is created.\"\n        ;;\n\n      uninstall)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically '/bin/rm').  RM-OPTIONS are options (such as '-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      *)\n        func_fatal_help \"invalid operation mode '$opt_mode'\"\n        ;;\n    esac\n\n    echo\n    $ECHO \"Try '$progname --help' for more information about other modes.\"\n}\n\n# Now that we've collected a possible --mode arg, show help if necessary\nif $opt_help; then\n  if test : = \"$opt_help\"; then\n    func_mode_help\n  else\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\tfunc_mode_help\n      done\n    } | $SED -n '1p; 2,$s/^Usage:/  or: /p'\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\techo\n\tfunc_mode_help\n      done\n    } |\n    $SED '1d\n      /^When reporting/,/^Report/{\n\tH\n\td\n      }\n      $x\n      /information about other modes/d\n      /more detailed .*MODE/d\n      s/^Usage:.*--mode=\\([^ ]*\\) .*/Description of \\1 mode:/'\n  fi\n  exit $?\nfi\n\n\n# func_mode_execute arg...\nfunc_mode_execute ()\n{\n    $debug_cmd\n\n    # The first argument is the command name.\n    cmd=$nonopt\n    test -z \"$cmd\" && \\\n      func_fatal_help \"you must specify a COMMAND\"\n\n    # Handle -dlopen flags immediately.\n    for file in $opt_dlopen; do\n      test -f \"$file\" \\\n\t|| func_fatal_help \"'$file' is not a file\"\n\n      dir=\n      case $file in\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"'$lib' is not a valid libtool archive\"\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\tfunc_source \"$file\"\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && \\\n\t    func_warning \"'$file' was not linked with '-export-dynamic'\"\n\t  continue\n\tfi\n\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=$func_dirname_result\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  func_append dir \"/$objdir\"\n\telse\n\t  if test ! -f \"$dir/$dlname\"; then\n\t    func_fatal_error \"cannot find '$dlname' in '$dir' or '$dir/$objdir'\"\n\t  fi\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=$func_dirname_result\n\t;;\n\n      *)\n\tfunc_warning \"'-dlopen' is ignored for non-libtool libraries and objects\"\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=$absdir\n\n      # Now add the directory to shlibpath_var.\n      if eval \"test -z \\\"\\$$shlibpath_var\\\"\"; then\n\teval \"$shlibpath_var=\\\"\\$dir\\\"\"\n      else\n\teval \"$shlibpath_var=\\\"\\$dir:\\$$shlibpath_var\\\"\"\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=$magic\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case $file in\n      -* | *.la | *.lo ) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif func_ltwrapper_script_p \"$file\"; then\n\t  func_source \"$file\"\n\t  # Transform arg to wrapped name.\n\t  file=$progdir/$program\n\telif func_ltwrapper_executable_p \"$file\"; then\n\t  func_ltwrapper_scriptname \"$file\"\n\t  func_source \"$func_ltwrapper_scriptname_result\"\n\t  # Transform arg to wrapped name.\n\t  file=$progdir/$program\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      func_append_quoted args \"$file\"\n    done\n\n    if $opt_dry_run; then\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n\teval \"\\$ECHO \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n\techo \"export $shlibpath_var\"\n      fi\n      $ECHO \"$cmd$args\"\n      exit $EXIT_SUCCESS\n    else\n      if test -n \"$shlibpath_var\"; then\n\t# Export the shlibpath_var.\n\teval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved environment variables\n      for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\n      do\n\teval \"if test \\\"\\${save_$lt_var+set}\\\" = set; then\n                $lt_var=\\$save_$lt_var; export $lt_var\n\t      else\n\t\t$lt_unset $lt_var\n\t      fi\"\n      done\n\n      # Now prepare to actually exec the command.\n      exec_cmd=\\$cmd$args\n    fi\n}\n\ntest execute = \"$opt_mode\" && func_mode_execute ${1+\"$@\"}\n\n\n# func_mode_finish arg...\nfunc_mode_finish ()\n{\n    $debug_cmd\n\n    libs=\n    libdirs=\n    admincmds=\n\n    for opt in \"$nonopt\" ${1+\"$@\"}\n    do\n      if test -d \"$opt\"; then\n\tfunc_append libdirs \" $opt\"\n\n      elif test -f \"$opt\"; then\n\tif func_lalib_unsafe_p \"$opt\"; then\n\t  func_append libs \" $opt\"\n\telse\n\t  func_warning \"'$opt' is not a valid libtool archive\"\n\tfi\n\n      else\n\tfunc_fatal_error \"invalid argument '$opt'\"\n      fi\n    done\n\n    if test -n \"$libs\"; then\n      if test -n \"$lt_sysroot\"; then\n        sysroot_regex=`$ECHO \"$lt_sysroot\" | $SED \"$sed_make_literal_regex\"`\n        sysroot_cmd=\"s/\\([ ']\\)$sysroot_regex/\\1/g;\"\n      else\n        sysroot_cmd=\n      fi\n\n      # Remove sysroot references\n      if $opt_dry_run; then\n        for lib in $libs; do\n          echo \"removing references to $lt_sysroot and '=' prefixes from $lib\"\n        done\n      else\n        tmpdir=`func_mktempdir`\n        for lib in $libs; do\n\t  $SED -e \"$sysroot_cmd s/\\([ ']-[LR]\\)=/\\1/g; s/\\([ ']\\)=/\\1/g\" $lib \\\n\t    > $tmpdir/tmp-la\n\t  mv -f $tmpdir/tmp-la $lib\n\tdone\n        ${RM}r \"$tmpdir\"\n      fi\n    fi\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  func_execute_cmds \"$finish_cmds\" 'admincmds=\"$admincmds\n'\"$cmd\"'\"'\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $opt_dry_run || eval \"$cmds\" || func_append admincmds \"\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    $opt_quiet && exit $EXIT_SUCCESS\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      echo \"----------------------------------------------------------------------\"\n      echo \"Libraries have been installed in:\"\n      for libdir in $libdirs; do\n\t$ECHO \"   $libdir\"\n      done\n      echo\n      echo \"If you ever happen to want to link against installed libraries\"\n      echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n      echo \"specify the full pathname of the library, or use the '-LLIBDIR'\"\n      echo \"flag during linking and do at least one of the following:\"\n      if test -n \"$shlibpath_var\"; then\n\techo \"   - add LIBDIR to the '$shlibpath_var' environment variable\"\n\techo \"     during execution\"\n      fi\n      if test -n \"$runpath_var\"; then\n\techo \"   - add LIBDIR to the '$runpath_var' environment variable\"\n\techo \"     during linking\"\n      fi\n      if test -n \"$hardcode_libdir_flag_spec\"; then\n\tlibdir=LIBDIR\n\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\n\t$ECHO \"   - use the '$flag' linker flag\"\n      fi\n      if test -n \"$admincmds\"; then\n\t$ECHO \"   - have your system administrator run these commands:$admincmds\"\n      fi\n      if test -f /etc/ld.so.conf; then\n\techo \"   - have your system administrator add LIBDIR to '/etc/ld.so.conf'\"\n      fi\n      echo\n\n      echo \"See any operating system documentation about shared libraries for\"\n      case $host in\n\tsolaris2.[6789]|solaris2.1[0-9])\n\t  echo \"more information, such as the ld(1), crle(1) and ld.so(8) manual\"\n\t  echo \"pages.\"\n\t  ;;\n\t*)\n\t  echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n\t  ;;\n      esac\n      echo \"----------------------------------------------------------------------\"\n    fi\n    exit $EXIT_SUCCESS\n}\n\ntest finish = \"$opt_mode\" && func_mode_finish ${1+\"$@\"}\n\n\n# func_mode_install arg...\nfunc_mode_install ()\n{\n    $debug_cmd\n\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$SHELL\" = \"$nonopt\" || test /bin/sh = \"$nonopt\" ||\n       # Allow the use of GNU shtool's install command.\n       case $nonopt in *shtool*) :;; *) false;; esac\n    then\n      # Aesthetically quote it.\n      func_quote_for_eval \"$nonopt\"\n      install_prog=\"$func_quote_for_eval_result \"\n      arg=$1\n      shift\n    else\n      install_prog=\n      arg=$nonopt\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    func_quote_for_eval \"$arg\"\n    func_append install_prog \"$func_quote_for_eval_result\"\n    install_shared_prog=$install_prog\n    case \" $install_prog \" in\n      *[\\\\\\ /]cp\\ *) install_cp=: ;;\n      *) install_cp=false ;;\n    esac\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=false\n    stripme=\n    no_mode=:\n    for arg\n    do\n      arg2=\n      if test -n \"$dest\"; then\n\tfunc_append files \" $dest\"\n\tdest=$arg\n\tcontinue\n      fi\n\n      case $arg in\n      -d) isdir=: ;;\n      -f)\n\tif $install_cp; then :; else\n\t  prev=$arg\n\tfi\n\t;;\n      -g | -m | -o)\n\tprev=$arg\n\t;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*)\n\t;;\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  if test X-m = \"X$prev\" && test -n \"$install_override_mode\"; then\n\t    arg2=$install_override_mode\n\t    no_mode=false\n\t  fi\n\t  prev=\n\telse\n\t  dest=$arg\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      func_quote_for_eval \"$arg\"\n      func_append install_prog \" $func_quote_for_eval_result\"\n      if test -n \"$arg2\"; then\n\tfunc_quote_for_eval \"$arg2\"\n      fi\n      func_append install_shared_prog \" $func_quote_for_eval_result\"\n    done\n\n    test -z \"$install_prog\" && \\\n      func_fatal_help \"you must specify an install program\"\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the '$prev' option requires an argument\"\n\n    if test -n \"$install_override_mode\" && $no_mode; then\n      if $install_cp; then :; else\n\tfunc_quote_for_eval \"$install_override_mode\"\n\tfunc_append install_shared_prog \" -m $func_quote_for_eval_result\"\n      fi\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\tfunc_fatal_help \"no file or destination specified\"\n      else\n\tfunc_fatal_help \"you must specify a destination\"\n      fi\n    fi\n\n    # Strip any trailing slash from the destination.\n    func_stripname '' '/' \"$dest\"\n    dest=$func_stripname_result\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=:\n    if $isdir; then\n      destdir=$dest\n      destname=\n    else\n      func_dirname_and_basename \"$dest\" \"\" \".\"\n      destdir=$func_dirname_result\n      destname=$func_basename_result\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files; shift\n      test \"$#\" -gt 1 && \\\n\tfunc_fatal_help \"'$dest' is not a directory\"\n    fi\n    case $destdir in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase $file in\n\t*.lo) ;;\n\t*)\n\t  func_fatal_help \"'$destdir' must be an absolute directory name\"\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=$magic\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case $file in\n      *.$libext)\n\t# Do the static libraries later.\n\tfunc_append staticlibs \" $file\"\n\t;;\n\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"'$file' is not a valid libtool archive\"\n\n\tlibrary_names=\n\told_library=\n\trelink_command=\n\tfunc_source \"$file\"\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append current_libdirs \" $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append future_libdirs \" $libdir\" ;;\n\t  esac\n\tfi\n\n\tfunc_dirname \"$file\" \"/\" \"\"\n\tdir=$func_dirname_result\n\tfunc_append dir \"$objdir\"\n\n\tif test -n \"$relink_command\"; then\n\t  # Determine the prefix the user has applied to our future dir.\n\t  inst_prefix_dir=`$ECHO \"$destdir\" | $SED -e \"s%$libdir\\$%%\"`\n\n\t  # Don't allow the user to place us outside of our expected\n\t  # location b/c this prevents finding dependent libraries that\n\t  # are installed to the same prefix.\n\t  # At present, this check doesn't affect windows .dll's that\n\t  # are installed into $libdir/../bin (currently, that works fine)\n\t  # but it's something to keep an eye on.\n\t  test \"$inst_prefix_dir\" = \"$destdir\" && \\\n\t    func_fatal_error \"error: cannot install '$file' to a directory not ending in $libdir\"\n\n\t  if test -n \"$inst_prefix_dir\"; then\n\t    # Stick the inst_prefix_dir data into the link command.\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%\"`\n\t  else\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%%\"`\n\t  fi\n\n\t  func_warning \"relinking '$file'\"\n\t  func_show_eval \"$relink_command\" \\\n\t    'func_fatal_error \"error: relink '\\''$file'\\'' with the above command before installing it\"'\n\tfi\n\n\t# See the names of the shared library.\n\tset dummy $library_names; shift\n\tif test -n \"$1\"; then\n\t  realname=$1\n\t  shift\n\n\t  srcname=$realname\n\t  test -n \"$relink_command\" && srcname=${realname}T\n\n\t  # Install the shared library and build the symlinks.\n\t  func_show_eval \"$install_shared_prog $dir/$srcname $destdir/$realname\" \\\n\t      'exit $?'\n\t  tstripme=$stripme\n\t  case $host_os in\n\t  cygwin* | mingw* | pw32* | cegcc*)\n\t    case $realname in\n\t    *.dll.a)\n\t      tstripme=\n\t      ;;\n\t    esac\n\t    ;;\n\t  os2*)\n\t    case $realname in\n\t    *_dll.a)\n\t      tstripme=\n\t      ;;\n\t    esac\n\t    ;;\n\t  esac\n\t  if test -n \"$tstripme\" && test -n \"$striplib\"; then\n\t    func_show_eval \"$striplib $destdir/$realname\" 'exit $?'\n\t  fi\n\n\t  if test \"$#\" -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    # Try 'ln -sf' first, because the 'ln' binary might depend on\n\t    # the symlink we replace!  Solaris /bin/ln does not understand -f,\n\t    # so we also need to try rm && ln -s.\n\t    for linkname\n\t    do\n\t      test \"$linkname\" != \"$realname\" \\\n\t\t&& func_show_eval \"(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })\"\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=$destdir/$realname\n\t  func_execute_cmds \"$postinstall_cmds\" 'exit $?'\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tfunc_basename \"$file\"\n\tname=$func_basename_result\n\tinstname=$dir/${name}i\n\tfunc_show_eval \"$install_prog $instname $destdir/$name\" 'exit $?'\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && func_append staticlibs \" $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=$destdir/$destname\n\telse\n\t  func_basename \"$file\"\n\t  destfile=$func_basename_result\n\t  destfile=$destdir/$destfile\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase $destfile in\n\t*.lo)\n\t  func_lo2o \"$destfile\"\n\t  staticdest=$func_lo2o_result\n\t  ;;\n\t*.$objext)\n\t  staticdest=$destfile\n\t  destfile=\n\t  ;;\n\t*)\n\t  func_fatal_help \"cannot copy a libtool object to '$destfile'\"\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\ttest -n \"$destfile\" && \\\n\t  func_show_eval \"$install_prog $file $destfile\" 'exit $?'\n\n\t# Install the old object if enabled.\n\tif test yes = \"$build_old_libs\"; then\n\t  # Deduce the name of the old-style object file.\n\t  func_lo2o \"$file\"\n\t  staticobj=$func_lo2o_result\n\t  func_show_eval \"$install_prog \\$staticobj \\$staticdest\" 'exit $?'\n\tfi\n\texit $EXIT_SUCCESS\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=$destdir/$destname\n\telse\n\t  func_basename \"$file\"\n\t  destfile=$func_basename_result\n\t  destfile=$destdir/$destfile\n\tfi\n\n\t# If the file is missing, and there is a .exe on the end, strip it\n\t# because it is most likely a libtool script we actually want to\n\t# install\n\tstripped_ext=\n\tcase $file in\n\t  *.exe)\n\t    if test ! -f \"$file\"; then\n\t      func_stripname '' '.exe' \"$file\"\n\t      file=$func_stripname_result\n\t      stripped_ext=.exe\n\t    fi\n\t    ;;\n\tesac\n\n\t# Do a test to see if this is really a libtool program.\n\tcase $host in\n\t*cygwin* | *mingw*)\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      wrapper=$func_ltwrapper_scriptname_result\n\t    else\n\t      func_stripname '' '.exe' \"$file\"\n\t      wrapper=$func_stripname_result\n\t    fi\n\t    ;;\n\t*)\n\t    wrapper=$file\n\t    ;;\n\tesac\n\tif func_ltwrapper_script_p \"$wrapper\"; then\n\t  notinst_deplibs=\n\t  relink_command=\n\n\t  func_source \"$wrapper\"\n\n\t  # Check the variables that should have been set.\n\t  test -z \"$generated_by_libtool_version\" && \\\n\t    func_fatal_error \"invalid libtool wrapper script '$wrapper'\"\n\n\t  finalize=:\n\t  for lib in $notinst_deplibs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      func_source \"$lib\"\n\t    fi\n\t    libfile=$libdir/`$ECHO \"$lib\" | $SED 's%^.*/%%g'`\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      func_warning \"'$lib' has not been installed in '$libdir'\"\n\t      finalize=false\n\t    fi\n\t  done\n\n\t  relink_command=\n\t  func_source \"$wrapper\"\n\n\t  outputname=\n\t  if test no = \"$fast_install\" && test -n \"$relink_command\"; then\n\t    $opt_dry_run || {\n\t      if $finalize; then\n\t        tmpdir=`func_mktempdir`\n\t\tfunc_basename \"$file$stripped_ext\"\n\t\tfile=$func_basename_result\n\t        outputname=$tmpdir/$file\n\t        # Replace the output file specification.\n\t        relink_command=`$ECHO \"$relink_command\" | $SED 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t        $opt_quiet || {\n\t          func_quote_for_expand \"$relink_command\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t        }\n\t        if eval \"$relink_command\"; then :\n\t          else\n\t\t  func_error \"error: relink '$file' with the above command before installing it\"\n\t\t  $opt_dry_run || ${RM}r \"$tmpdir\"\n\t\t  continue\n\t        fi\n\t        file=$outputname\n\t      else\n\t        func_warning \"cannot relink '$file'\"\n\t      fi\n\t    }\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$ECHO \"$file$stripped_ext\" | $SED \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t# remove .exe since cygwin /usr/bin/install will append another\n\t# one anyway\n\tcase $install_prog,$host in\n\t*/usr/bin/install*,*cygwin*)\n\t  case $file:$destfile in\n\t  *.exe:*.exe)\n\t    # this is ok\n\t    ;;\n\t  *.exe:*)\n\t    destfile=$destfile.exe\n\t    ;;\n\t  *:*.exe)\n\t    func_stripname '' '.exe' \"$destfile\"\n\t    destfile=$func_stripname_result\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tfunc_show_eval \"$install_prog\\$stripme \\$file \\$destfile\" 'exit $?'\n\t$opt_dry_run || if test -n \"$outputname\"; then\n\t  ${RM}r \"$tmpdir\"\n\tfi\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      func_basename \"$file\"\n      name=$func_basename_result\n\n      # Set up the ranlib parameters.\n      oldlib=$destdir/$name\n      func_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n      tool_oldlib=$func_to_tool_file_result\n\n      func_show_eval \"$install_prog \\$file \\$oldlib\" 'exit $?'\n\n      if test -n \"$stripme\" && test -n \"$old_striplib\"; then\n\tfunc_show_eval \"$old_striplib $tool_oldlib\" 'exit $?'\n      fi\n\n      # Do each command in the postinstall commands.\n      func_execute_cmds \"$old_postinstall_cmds\" 'exit $?'\n    done\n\n    test -n \"$future_libdirs\" && \\\n      func_warning \"remember to run '$progname --finish$future_libdirs'\"\n\n    if test -n \"$current_libdirs\"; then\n      # Maybe just do a dry run.\n      $opt_dry_run && current_libdirs=\" -n$current_libdirs\"\n      exec_cmd='$SHELL \"$progpath\" $preserve_args --finish$current_libdirs'\n    else\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest install = \"$opt_mode\" && func_mode_install ${1+\"$@\"}\n\n\n# func_generate_dlsyms outputname originator pic_p\n# Extract symbols from dlprefiles and create ${outputname}S.o with\n# a dlpreopen symbol table.\nfunc_generate_dlsyms ()\n{\n    $debug_cmd\n\n    my_outputname=$1\n    my_originator=$2\n    my_pic_p=${3-false}\n    my_prefix=`$ECHO \"$my_originator\" | $SED 's%[^a-zA-Z0-9]%_%g'`\n    my_dlsyms=\n\n    if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n      if test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\tmy_dlsyms=${my_outputname}S.c\n      else\n\tfunc_error \"not configured to extract global symbols from dlpreopened files\"\n      fi\n    fi\n\n    if test -n \"$my_dlsyms\"; then\n      case $my_dlsyms in\n      \"\") ;;\n      *.c)\n\t# Discover the nlist of each of the dlfiles.\n\tnlist=$output_objdir/$my_outputname.nm\n\n\tfunc_show_eval \"$RM $nlist ${nlist}S ${nlist}T\"\n\n\t# Parse the name list into a source file.\n\tfunc_verbose \"creating $output_objdir/$my_dlsyms\"\n\n\t$opt_dry_run || $ECHO > \"$output_objdir/$my_dlsyms\" \"\\\n/* $my_dlsyms - symbol resolution table for '$my_outputname' dlsym emulation. */\n/* Generated by $PROGRAM (GNU $PACKAGE) $VERSION */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n#if defined __GNUC__ && (((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 4))\n#pragma GCC diagnostic ignored \\\"-Wstrict-prototypes\\\"\n#endif\n\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT_DLSYM_CONST\n#else\n# define LT_DLSYM_CONST const\n#endif\n\n#define STREQ(s1, s2) (strcmp ((s1), (s2)) == 0)\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\tif test yes = \"$dlself\"; then\n\t  func_verbose \"generating symbol list for '$output'\"\n\n\t  $opt_dry_run || echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t  # Add our own program objects to the symbol list.\n\t  progfiles=`$ECHO \"$objs$old_deplibs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\t  for progfile in $progfiles; do\n\t    func_to_tool_file \"$progfile\" func_convert_file_msys_to_w32\n\t    func_verbose \"extracting global C symbols from '$func_to_tool_file_result'\"\n\t    $opt_dry_run || eval \"$NM $func_to_tool_file_result | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  if test -n \"$export_symbols_regex\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  # Prepare the list of exported symbols\n\t  if test -z \"$export_symbols\"; then\n\t    export_symbols=$output_objdir/$outputname.exp\n\t    $opt_dry_run || {\n\t      $RM $export_symbols\n\t      eval \"$SED -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \\(.*\\)$/\\1/p' \"'< \"$nlist\" > \"$export_symbols\"'\n\t      case $host in\n\t      *cygwin* | *mingw* | *cegcc* )\n                eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n                eval 'cat \"$export_symbols\" >> \"$output_objdir/$outputname.def\"'\n\t        ;;\n\t      esac\n\t    }\n\t  else\n\t    $opt_dry_run || {\n\t      eval \"$SED -e 's/\\([].[*^$]\\)/\\\\\\\\\\1/g' -e 's/^/ /' -e 's/$/$/'\"' < \"$export_symbols\" > \"$output_objdir/$outputname.exp\"'\n\t      eval '$GREP -f \"$output_objdir/$outputname.exp\" < \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t      case $host in\n\t        *cygwin* | *mingw* | *cegcc* )\n\t          eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n\t          eval 'cat \"$nlist\" >> \"$output_objdir/$outputname.def\"'\n\t          ;;\n\t      esac\n\t    }\n\t  fi\n\tfi\n\n\tfor dlprefile in $dlprefiles; do\n\t  func_verbose \"extracting global C symbols from '$dlprefile'\"\n\t  func_basename \"$dlprefile\"\n\t  name=$func_basename_result\n          case $host in\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # if an import library, we need to obtain dlname\n\t      if func_win32_import_lib_p \"$dlprefile\"; then\n\t        func_tr_sh \"$dlprefile\"\n\t        eval \"curr_lafile=\\$libfile_$func_tr_sh_result\"\n\t        dlprefile_dlbasename=\n\t        if test -n \"$curr_lafile\" && func_lalib_p \"$curr_lafile\"; then\n\t          # Use subshell, to avoid clobbering current variable values\n\t          dlprefile_dlname=`source \"$curr_lafile\" && echo \"$dlname\"`\n\t          if test -n \"$dlprefile_dlname\"; then\n\t            func_basename \"$dlprefile_dlname\"\n\t            dlprefile_dlbasename=$func_basename_result\n\t          else\n\t            # no lafile. user explicitly requested -dlpreopen <import library>.\n\t            $sharedlib_from_linklib_cmd \"$dlprefile\"\n\t            dlprefile_dlbasename=$sharedlib_from_linklib_result\n\t          fi\n\t        fi\n\t        $opt_dry_run || {\n\t          if test -n \"$dlprefile_dlbasename\"; then\n\t            eval '$ECHO \": $dlprefile_dlbasename\" >> \"$nlist\"'\n\t          else\n\t            func_warning \"Could not compute DLL name from $name\"\n\t            eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          fi\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe |\n\t            $SED -e '/I __imp/d' -e 's/I __nm_/D /;s/_nm__//' >> '$nlist'\"\n\t        }\n\t      else # not an import lib\n\t        $opt_dry_run || {\n\t          eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t        }\n\t      fi\n\t    ;;\n\t    *)\n\t      $opt_dry_run || {\n\t        eval '$ECHO \": $name \" >> \"$nlist\"'\n\t        func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t        eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t      }\n\t    ;;\n          esac\n\tdone\n\n\t$opt_dry_run || {\n\t  # Make sure we have at least an empty file.\n\t  test -f \"$nlist\" || : > \"$nlist\"\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t    $MV \"$nlist\"T \"$nlist\"\n\t  fi\n\n\t  # Try sorting and uniquifying the output.\n\t  if $GREP -v \"^: \" < \"$nlist\" |\n\t      if sort -k 3 </dev/null >/dev/null 2>&1; then\n\t\tsort -k 3\n\t      else\n\t\tsort +2\n\t      fi |\n\t      uniq > \"$nlist\"S; then\n\t    :\n\t  else\n\t    $GREP -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t  fi\n\n\t  if test -f \"$nlist\"S; then\n\t    eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$my_dlsyms\"'\n\t  else\n\t    echo '/* NONE */' >> \"$output_objdir/$my_dlsyms\"\n\t  fi\n\n\t  func_show_eval '$RM \"${nlist}I\"'\n\t  if test -n \"$global_symbol_to_import\"; then\n\t    eval \"$global_symbol_to_import\"' < \"$nlist\"S > \"$nlist\"I'\n\t  fi\n\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n\n/* The mapping between symbol names and symbols.  */\ntypedef struct {\n  const char *name;\n  void *address;\n} lt_dlsymlist;\nextern LT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[];\\\n\"\n\n\t  if test -s \"$nlist\"I; then\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\nstatic void lt_syminit(void)\n{\n  LT_DLSYM_CONST lt_dlsymlist *symbol = lt_${my_prefix}_LTX_preloaded_symbols;\n  for (; symbol->name; ++symbol)\n    {\"\n\t    $SED 's/.*/      if (STREQ (symbol->name, \\\"&\\\")) symbol->address = (void *) \\&&;/' < \"$nlist\"I >> \"$output_objdir/$my_dlsyms\"\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n    }\n}\"\n\t  fi\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\nLT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[] =\n{ {\\\"$my_originator\\\", (void *) 0},\"\n\n\t  if test -s \"$nlist\"I; then\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {\\\"@INIT@\\\", (void *) &lt_syminit},\"\n\t  fi\n\n\t  case $need_lib_prefix in\n\t  no)\n\t    eval \"$global_symbol_to_c_name_address\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  *)\n\t    eval \"$global_symbol_to_c_name_address_lib_prefix\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  esac\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_${my_prefix}_LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t} # !$opt_dry_run\n\n\tpic_flag_for_symtable=\n\tcase \"$compile_command \" in\n\t*\" -static \"*) ;;\n\t*)\n\t  case $host in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2.*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    pic_flag_for_symtable=\" $pic_flag -DFREEBSD_WORKAROUND\" ;;\n\t  *-*-hpux*)\n\t    pic_flag_for_symtable=\" $pic_flag\"  ;;\n\t  *)\n\t    $my_pic_p && pic_flag_for_symtable=\" $pic_flag\"\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tsymtab_cflags=\n\tfor arg in $LTCFLAGS; do\n\t  case $arg in\n\t  -pie | -fpie | -fPIE) ;;\n\t  *) func_append symtab_cflags \" $arg\" ;;\n\t  esac\n\tdone\n\n\t# Now compile the dynamic symbol file.\n\tfunc_show_eval '(cd $output_objdir && $LTCC$symtab_cflags -c$no_builtin_flag$pic_flag_for_symtable \"$my_dlsyms\")' 'exit $?'\n\n\t# Clean up the generated files.\n\tfunc_show_eval '$RM \"$output_objdir/$my_dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\" \"${nlist}I\"'\n\n\t# Transform the symbol file into the correct name.\n\tsymfileobj=$output_objdir/${my_outputname}S.$objext\n\tcase $host in\n\t*cygwin* | *mingw* | *cegcc* )\n\t  if test -f \"$output_objdir/$my_outputname.def\"; then\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t  else\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  fi\n\t  ;;\n\t*)\n\t  compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  ;;\n\tesac\n\t;;\n      *)\n\tfunc_fatal_error \"unknown suffix for '$my_dlsyms'\"\n\t;;\n      esac\n    else\n      # We keep going just in case the user didn't refer to\n      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n      # really was required.\n\n      # Nullify the symbol file.\n      compile_command=`$ECHO \"$compile_command\" | $SED \"s% @SYMFILE@%%\"`\n      finalize_command=`$ECHO \"$finalize_command\" | $SED \"s% @SYMFILE@%%\"`\n    fi\n}\n\n# func_cygming_gnu_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is a GNU/binutils-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_gnu_implib_p ()\n{\n  $debug_cmd\n\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_gnu_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $EGREP ' (_head_[A-Za-z0-9_]+_[ad]l*|[A-Za-z0-9_]+_[ad]l*_iname)$'`\n  test -n \"$func_cygming_gnu_implib_tmp\"\n}\n\n# func_cygming_ms_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is an MS-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_ms_implib_p ()\n{\n  $debug_cmd\n\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_ms_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $GREP '_NULL_IMPORT_DESCRIPTOR'`\n  test -n \"$func_cygming_ms_implib_tmp\"\n}\n\n# func_win32_libid arg\n# return the library type of file 'arg'\n#\n# Need a lot of goo to handle *both* DLLs and import libs\n# Has to be a shell function in order to 'eat' the argument\n# that is supplied when $file_magic_command is called.\n# Despite the name, also deal with 64 bit binaries.\nfunc_win32_libid ()\n{\n  $debug_cmd\n\n  win32_libid_type=unknown\n  win32_fileres=`file -L $1 2>/dev/null`\n  case $win32_fileres in\n  *ar\\ archive\\ import\\ library*) # definitely import\n    win32_libid_type=\"x86 archive import\"\n    ;;\n  *ar\\ archive*) # could be an import, or static\n    # Keep the egrep pattern in sync with the one in _LT_CHECK_MAGIC_METHOD.\n    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null |\n       $EGREP 'file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)' >/dev/null; then\n      case $nm_interface in\n      \"MS dumpbin\")\n\tif func_cygming_ms_implib_p \"$1\" ||\n\t   func_cygming_gnu_implib_p \"$1\"\n\tthen\n\t  win32_nmres=import\n\telse\n\t  win32_nmres=\n\tfi\n\t;;\n      *)\n\tfunc_to_tool_file \"$1\" func_convert_file_msys_to_w32\n\twin32_nmres=`eval $NM -f posix -A \\\"$func_to_tool_file_result\\\" |\n\t  $SED -n -e '\n\t    1,100{\n\t\t/ I /{\n\t\t    s|.*|import|\n\t\t    p\n\t\t    q\n\t\t}\n\t    }'`\n\t;;\n      esac\n      case $win32_nmres in\n      import*)  win32_libid_type=\"x86 archive import\";;\n      *)        win32_libid_type=\"x86 archive static\";;\n      esac\n    fi\n    ;;\n  *DLL*)\n    win32_libid_type=\"x86 DLL\"\n    ;;\n  *executable*) # but shell scripts are \"executable\" too...\n    case $win32_fileres in\n    *MS\\ Windows\\ PE\\ Intel*)\n      win32_libid_type=\"x86 DLL\"\n      ;;\n    esac\n    ;;\n  esac\n  $ECHO \"$win32_libid_type\"\n}\n\n# func_cygming_dll_for_implib ARG\n#\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib ()\n{\n  $debug_cmd\n\n  sharedlib_from_linklib_result=`$DLLTOOL --identify-strict --identify \"$1\"`\n}\n\n# func_cygming_dll_for_implib_fallback_core SECTION_NAME LIBNAMEs\n#\n# The is the core of a fallback implementation of a\n# platform-specific function to extract the name of the\n# DLL associated with the specified import library LIBNAME.\n#\n# SECTION_NAME is either .idata$6 or .idata$7, depending\n# on the platform and compiler that created the implib.\n#\n# Echos the name of the DLL associated with the\n# specified import library.\nfunc_cygming_dll_for_implib_fallback_core ()\n{\n  $debug_cmd\n\n  match_literal=`$ECHO \"$1\" | $SED \"$sed_make_literal_regex\"`\n  $OBJDUMP -s --section \"$1\" \"$2\" 2>/dev/null |\n    $SED '/^Contents of section '\"$match_literal\"':/{\n      # Place marker at beginning of archive member dllname section\n      s/.*/====MARK====/\n      p\n      d\n    }\n    # These lines can sometimes be longer than 43 characters, but\n    # are always uninteresting\n    /:[\t ]*file format pe[i]\\{,1\\}-/d\n    /^In archive [^:]*:/d\n    # Ensure marker is printed\n    /^====MARK====/p\n    # Remove all lines with less than 43 characters\n    /^.\\{43\\}/!d\n    # From remaining lines, remove first 43 characters\n    s/^.\\{43\\}//' |\n    $SED -n '\n      # Join marker and all lines until next marker into a single line\n      /^====MARK====/ b para\n      H\n      $ b para\n      b\n      :para\n      x\n      s/\\n//g\n      # Remove the marker\n      s/^====MARK====//\n      # Remove trailing dots and whitespace\n      s/[\\. \\t]*$//\n      # Print\n      /./p' |\n    # we now have a list, one entry per line, of the stringified\n    # contents of the appropriate section of all members of the\n    # archive that possess that section. Heuristic: eliminate\n    # all those that have a first or second character that is\n    # a '.' (that is, objdump's representation of an unprintable\n    # character.) This should work for all archives with less than\n    # 0x302f exports -- but will fail for DLLs whose name actually\n    # begins with a literal '.' or a single character followed by\n    # a '.'.\n    #\n    # Of those that remain, print the first one.\n    $SED -e '/^\\./d;/^.\\./d;q'\n}\n\n# func_cygming_dll_for_implib_fallback ARG\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n#\n# This fallback implementation is for use when $DLLTOOL\n# does not support the --identify-strict option.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib_fallback ()\n{\n  $debug_cmd\n\n  if func_cygming_gnu_implib_p \"$1\"; then\n    # binutils import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$7' \"$1\"`\n  elif func_cygming_ms_implib_p \"$1\"; then\n    # ms-generated import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$6' \"$1\"`\n  else\n    # unknown\n    sharedlib_from_linklib_result=\n  fi\n}\n\n\n# func_extract_an_archive dir oldlib\nfunc_extract_an_archive ()\n{\n    $debug_cmd\n\n    f_ex_an_ar_dir=$1; shift\n    f_ex_an_ar_oldlib=$1\n    if test yes = \"$lock_old_archive_extraction\"; then\n      lockfile=$f_ex_an_ar_oldlib.lock\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    fi\n    func_show_eval \"(cd \\$f_ex_an_ar_dir && $AR x \\\"\\$f_ex_an_ar_oldlib\\\")\" \\\n\t\t   'stat=$?; rm -f \"$lockfile\"; exit $stat'\n    if test yes = \"$lock_old_archive_extraction\"; then\n      $opt_dry_run || rm -f \"$lockfile\"\n    fi\n    if ($AR t \"$f_ex_an_ar_oldlib\" | sort | sort -uc >/dev/null 2>&1); then\n     :\n    else\n      func_fatal_error \"object name conflicts in archive: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib\"\n    fi\n}\n\n\n# func_extract_archives gentop oldlib ...\nfunc_extract_archives ()\n{\n    $debug_cmd\n\n    my_gentop=$1; shift\n    my_oldlibs=${1+\"$@\"}\n    my_oldobjs=\n    my_xlib=\n    my_xabs=\n    my_xdir=\n\n    for my_xlib in $my_oldlibs; do\n      # Extract the objects.\n      case $my_xlib in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) my_xabs=$my_xlib ;;\n\t*) my_xabs=`pwd`\"/$my_xlib\" ;;\n      esac\n      func_basename \"$my_xlib\"\n      my_xlib=$func_basename_result\n      my_xlib_u=$my_xlib\n      while :; do\n        case \" $extracted_archives \" in\n\t*\" $my_xlib_u \"*)\n\t  func_arith $extracted_serial + 1\n\t  extracted_serial=$func_arith_result\n\t  my_xlib_u=lt$extracted_serial-$my_xlib ;;\n\t*) break ;;\n\tesac\n      done\n      extracted_archives=\"$extracted_archives $my_xlib_u\"\n      my_xdir=$my_gentop/$my_xlib_u\n\n      func_mkdir_p \"$my_xdir\"\n\n      case $host in\n      *-darwin*)\n\tfunc_verbose \"Extracting $my_xabs\"\n\t# Do not bother doing anything if just a dry run\n\t$opt_dry_run || {\n\t  darwin_orig_dir=`pwd`\n\t  cd $my_xdir || exit $?\n\t  darwin_archive=$my_xabs\n\t  darwin_curdir=`pwd`\n\t  func_basename \"$darwin_archive\"\n\t  darwin_base_archive=$func_basename_result\n\t  darwin_arches=`$LIPO -info \"$darwin_archive\" 2>/dev/null | $GREP Architectures 2>/dev/null || true`\n\t  if test -n \"$darwin_arches\"; then\n\t    darwin_arches=`$ECHO \"$darwin_arches\" | $SED -e 's/.*are://'`\n\t    darwin_arch=\n\t    func_verbose \"$darwin_base_archive has multiple architectures $darwin_arches\"\n\t    for darwin_arch in  $darwin_arches; do\n\t      func_mkdir_p \"unfat-$$/$darwin_base_archive-$darwin_arch\"\n\t      $LIPO -thin $darwin_arch -output \"unfat-$$/$darwin_base_archive-$darwin_arch/$darwin_base_archive\" \"$darwin_archive\"\n\t      cd \"unfat-$$/$darwin_base_archive-$darwin_arch\"\n\t      func_extract_an_archive \"`pwd`\" \"$darwin_base_archive\"\n\t      cd \"$darwin_curdir\"\n\t      $RM \"unfat-$$/$darwin_base_archive-$darwin_arch/$darwin_base_archive\"\n\t    done # $darwin_arches\n            ## Okay now we've a bunch of thin objects, gotta fatten them up :)\n\t    darwin_filelist=`find unfat-$$ -type f -name \\*.o -print -o -name \\*.lo -print | $SED -e \"$sed_basename\" | sort -u`\n\t    darwin_file=\n\t    darwin_files=\n\t    for darwin_file in $darwin_filelist; do\n\t      darwin_files=`find unfat-$$ -name $darwin_file -print | sort | $NL2SP`\n\t      $LIPO -create -output \"$darwin_file\" $darwin_files\n\t    done # $darwin_filelist\n\t    $RM -rf unfat-$$\n\t    cd \"$darwin_orig_dir\"\n\t  else\n\t    cd $darwin_orig_dir\n\t    func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t  fi # $darwin_arches\n\t} # !$opt_dry_run\n\t;;\n      *)\n        func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t;;\n      esac\n      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | sort | $NL2SP`\n    done\n\n    func_extract_archives_result=$my_oldobjs\n}\n\n\n# func_emit_wrapper [arg=no]\n#\n# Emit a libtool wrapper script on stdout.\n# Don't directly open a file because we may want to\n# incorporate the script contents within a cygwin/mingw\n# wrapper executable.  Must ONLY be called from within\n# func_mode_link because it depends on a number of variables\n# set therein.\n#\n# ARG is the value that the WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\n# variable will take.  If 'yes', then the emitted script\n# will assume that the directory where it is stored is\n# the $objdir directory.  This is a cygwin/mingw-specific\n# behavior.\nfunc_emit_wrapper ()\n{\n\tfunc_emit_wrapper_arg1=${1-no}\n\n\t$ECHO \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='$sed_quote_subst'\n\n# Be Bourne compatible\nif test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variables:\n  generated_by_libtool_version='$macro_version'\n  notinst_deplibs='$notinst_deplibs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$ECHO are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    file=\\\"\\$0\\\"\"\n\n    qECHO=`$ECHO \"$ECHO\" | $SED \"$sed_quote_subst\"`\n    $ECHO \"\\\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$1\n_LTECHO_EOF'\n}\n    ECHO=\\\"$qECHO\\\"\n  fi\n\n# Very basic option parsing. These options are (a) specific to\n# the libtool wrapper, (b) are identical between the wrapper\n# /script/ and the wrapper /executable/ that is used only on\n# windows platforms, and (c) all begin with the string \"--lt-\"\n# (application programs are unlikely to have options that match\n# this pattern).\n#\n# There are only two supported options: --lt-debug and\n# --lt-dump-script. There is, deliberately, no --lt-help.\n#\n# The first argument to this parsing function should be the\n# script's $0 value, followed by \"$@\".\nlt_option_debug=\nfunc_parse_lt_options ()\n{\n  lt_script_arg0=\\$0\n  shift\n  for lt_opt\n  do\n    case \\\"\\$lt_opt\\\" in\n    --lt-debug) lt_option_debug=1 ;;\n    --lt-dump-script)\n        lt_dump_D=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%/[^/]*$%%'\\`\n        test \\\"X\\$lt_dump_D\\\" = \\\"X\\$lt_script_arg0\\\" && lt_dump_D=.\n        lt_dump_F=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%^.*/%%'\\`\n        cat \\\"\\$lt_dump_D/\\$lt_dump_F\\\"\n        exit 0\n      ;;\n    --lt-*)\n        \\$ECHO \\\"Unrecognized --lt- option: '\\$lt_opt'\\\" 1>&2\n        exit 1\n      ;;\n    esac\n  done\n\n  # Print the debug banner immediately:\n  if test -n \\\"\\$lt_option_debug\\\"; then\n    echo \\\"$outputname:$output:\\$LINENO: libtool wrapper (GNU $PACKAGE) $VERSION\\\" 1>&2\n  fi\n}\n\n# Used when --lt-debug. Prints its arguments to stdout\n# (redirection is the responsibility of the caller)\nfunc_lt_dump_args ()\n{\n  lt_dump_args_N=1;\n  for lt_arg\n  do\n    \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[\\$lt_dump_args_N]: \\$lt_arg\\\"\n    lt_dump_args_N=\\`expr \\$lt_dump_args_N + 1\\`\n  done\n}\n\n# Core function for launching the target application\nfunc_exec_program_core ()\n{\n\"\n  case $host in\n  # Backslashes separate directories on plain windows\n  *-*-mingw | *-*-os2* | *-cegcc*)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[0]: \\$progdir\\\\\\\\\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir\\\\\\\\\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n\n  *)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[0]: \\$progdir/\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir/\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n  esac\n  $ECHO \"\\\n      \\$ECHO \\\"\\$0: cannot exec \\$program \\$*\\\" 1>&2\n      exit 1\n}\n\n# A function to encapsulate launching the target application\n# Strips options in the --lt-* namespace from \\$@ and\n# launches target application with the remaining arguments.\nfunc_exec_program ()\n{\n  case \\\" \\$* \\\" in\n  *\\\\ --lt-*)\n    for lt_wr_arg\n    do\n      case \\$lt_wr_arg in\n      --lt-*) ;;\n      *) set x \\\"\\$@\\\" \\\"\\$lt_wr_arg\\\"; shift;;\n      esac\n      shift\n    done ;;\n  esac\n  func_exec_program_core \\${1+\\\"\\$@\\\"}\n}\n\n  # Parse options\n  func_parse_lt_options \\\"\\$0\\\" \\${1+\\\"\\$@\\\"}\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\\\\\/]* | [A-Za-z]:[\\\\\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  done\n\n  # Usually 'no', except on cygwin/mingw when embedded into\n  # the cwrapper.\n  WRAPPER_SCRIPT_BELONGS_IN_OBJDIR=$func_emit_wrapper_arg1\n  if test \\\"\\$WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\\\" = \\\"yes\\\"; then\n    # special case for '.'\n    if test \\\"\\$thisdir\\\" = \\\".\\\"; then\n      thisdir=\\`pwd\\`\n    fi\n    # remove .libs from thisdir\n    case \\\"\\$thisdir\\\" in\n    *[\\\\\\\\/]$objdir ) thisdir=\\`\\$ECHO \\\"\\$thisdir\\\" | $SED 's%[\\\\\\\\/][^\\\\\\\\/]*$%%'\\` ;;\n    $objdir )   thisdir=. ;;\n    esac\n  fi\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test yes = \"$fast_install\"; then\n\t  $ECHO \"\\\n  program=lt-'$outputname'$exeext\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\n  if test ! -f \\\"\\$progdir/\\$program\\\" ||\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | $SED 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $MKDIR \\\"\\$progdir\\\"\n    else\n      $RM \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  $ECHO \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if relink_command_output=\\`eval \\$relink_command 2>&1\\`; then :\n      else\n\t\\$ECHO \\\"\\$relink_command_output\\\" >&2\n\t$RM \\\"\\$progdir/\\$file\\\"\n\texit 1\n      fi\n    fi\n\n    $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $RM \\\"\\$progdir/\\$program\\\";\n      $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $RM \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  $ECHO \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\t$ECHO \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# fixup the dll searchpath if we need to.\n\t#\n\t# Fix the DLL searchpath if we need to.  Do this before prepending\n\t# to shlibpath, because on Windows, both are PATH and uninstalled\n\t# libraries must come first.\n\tif test -n \"$dllsearchpath\"; then\n\t  $ECHO \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t# Export our shlibpath_var if we have one.\n\tif test yes = \"$shlibpath_overrides_runpath\" && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $ECHO \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" | $SED 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t$ECHO \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n      func_exec_program \\${1+\\\"\\$@\\\"}\n    fi\n  else\n    # The program doesn't exist.\n    \\$ECHO \\\"\\$0: error: '\\$progdir/\\$program' does not exist\\\" 1>&2\n    \\$ECHO \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    \\$ECHO \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit 1\n  fi\nfi\\\n\"\n}\n\n\n# func_emit_cwrapperexe_src\n# emit the source code for a wrapper executable on stdout\n# Must ONLY be called from within func_mode_link because\n# it depends on a number of variable set therein.\nfunc_emit_cwrapperexe_src ()\n{\n\tcat <<EOF\n\n/* $cwrappersource - temporary wrapper executable for $objdir/$outputname\n   Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n\n   The $output program cannot be directly executed until all the libtool\n   libraries that it depends on are installed.\n\n   This wrapper executable should never be moved out of the build directory.\n   If it is, it will not operate correctly.\n*/\nEOF\n\t    cat <<\"EOF\"\n#ifdef _MSC_VER\n# define _CRT_SECURE_NO_DEPRECATE 1\n#endif\n#include <stdio.h>\n#include <stdlib.h>\n#ifdef _MSC_VER\n# include <direct.h>\n# include <process.h>\n# include <io.h>\n#else\n# include <unistd.h>\n# include <stdint.h>\n# ifdef __CYGWIN__\n#  include <io.h>\n# endif\n#endif\n#include <malloc.h>\n#include <stdarg.h>\n#include <assert.h>\n#include <string.h>\n#include <ctype.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <sys/stat.h>\n\n#define STREQ(s1, s2) (strcmp ((s1), (s2)) == 0)\n\n/* declarations of non-ANSI functions */\n#if defined __MINGW32__\n# ifdef __STRICT_ANSI__\nint _putenv (const char *);\n# endif\n#elif defined __CYGWIN__\n# ifdef __STRICT_ANSI__\nchar *realpath (const char *, char *);\nint putenv (char *);\nint setenv (const char *, const char *, int);\n# endif\n/* #elif defined other_platform || defined ... */\n#endif\n\n/* portability defines, excluding path handling macros */\n#if defined _MSC_VER\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n# define S_IXUSR _S_IEXEC\n#elif defined __MINGW32__\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n#elif defined __CYGWIN__\n# define HAVE_SETENV\n# define FOPEN_WB \"wb\"\n/* #elif defined other platforms ... */\n#endif\n\n#if defined PATH_MAX\n# define LT_PATHMAX PATH_MAX\n#elif defined MAXPATHLEN\n# define LT_PATHMAX MAXPATHLEN\n#else\n# define LT_PATHMAX 1024\n#endif\n\n#ifndef S_IXOTH\n# define S_IXOTH 0\n#endif\n#ifndef S_IXGRP\n# define S_IXGRP 0\n#endif\n\n/* path handling portability macros */\n#ifndef DIR_SEPARATOR\n# define DIR_SEPARATOR '/'\n# define PATH_SEPARATOR ':'\n#endif\n\n#if defined _WIN32 || defined __MSDOS__ || defined __DJGPP__ || \\\n  defined __OS2__\n# define HAVE_DOS_BASED_FILE_SYSTEM\n# define FOPEN_WB \"wb\"\n# ifndef DIR_SEPARATOR_2\n#  define DIR_SEPARATOR_2 '\\\\'\n# endif\n# ifndef PATH_SEPARATOR_2\n#  define PATH_SEPARATOR_2 ';'\n# endif\n#endif\n\n#ifndef DIR_SEPARATOR_2\n# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n#else /* DIR_SEPARATOR_2 */\n# define IS_DIR_SEPARATOR(ch) \\\n\t(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n#endif /* DIR_SEPARATOR_2 */\n\n#ifndef PATH_SEPARATOR_2\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)\n#else /* PATH_SEPARATOR_2 */\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)\n#endif /* PATH_SEPARATOR_2 */\n\n#ifndef FOPEN_WB\n# define FOPEN_WB \"w\"\n#endif\n#ifndef _O_BINARY\n# define _O_BINARY 0\n#endif\n\n#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))\n#define XFREE(stale) do { \\\n  if (stale) { free (stale); stale = 0; } \\\n} while (0)\n\n#if defined LT_DEBUGWRAPPER\nstatic int lt_debug = 1;\n#else\nstatic int lt_debug = 0;\n#endif\n\nconst char *program_name = \"libtool-wrapper\"; /* in case xstrdup fails */\n\nvoid *xmalloc (size_t num);\nchar *xstrdup (const char *string);\nconst char *base_name (const char *name);\nchar *find_executable (const char *wrapper);\nchar *chase_symlinks (const char *pathspec);\nint make_executable (const char *path);\nint check_executable (const char *path);\nchar *strendzap (char *str, const char *pat);\nvoid lt_debugprintf (const char *file, int line, const char *fmt, ...);\nvoid lt_fatal (const char *file, int line, const char *message, ...);\nstatic const char *nonnull (const char *s);\nstatic const char *nonempty (const char *s);\nvoid lt_setenv (const char *name, const char *value);\nchar *lt_extend_str (const char *orig_value, const char *add, int to_end);\nvoid lt_update_exe_path (const char *name, const char *value);\nvoid lt_update_lib_path (const char *name, const char *value);\nchar **prepare_spawn (char **argv);\nvoid lt_dump_script (FILE *f);\nEOF\n\n\t    cat <<EOF\n#if __GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 5)\n# define externally_visible volatile\n#else\n# define externally_visible __attribute__((externally_visible)) volatile\n#endif\nexternally_visible const char * MAGIC_EXE = \"$magic_exe\";\nconst char * LIB_PATH_VARNAME = \"$shlibpath_var\";\nEOF\n\n\t    if test yes = \"$shlibpath_overrides_runpath\" && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n              func_to_host_path \"$temp_rpath\"\n\t      cat <<EOF\nconst char * LIB_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * LIB_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test -n \"$dllsearchpath\"; then\n              func_to_host_path \"$dllsearchpath:\"\n\t      cat <<EOF\nconst char * EXE_PATH_VARNAME = \"PATH\";\nconst char * EXE_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * EXE_PATH_VARNAME = \"\";\nconst char * EXE_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test yes = \"$fast_install\"; then\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"lt-$outputname\"; /* hopefully, no .exe */\nEOF\n\t    else\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"$outputname\"; /* hopefully, no .exe */\nEOF\n\t    fi\n\n\n\t    cat <<\"EOF\"\n\n#define LTWRAPPER_OPTION_PREFIX         \"--lt-\"\n\nstatic const char *ltwrapper_option_prefix = LTWRAPPER_OPTION_PREFIX;\nstatic const char *dumpscript_opt       = LTWRAPPER_OPTION_PREFIX \"dump-script\";\nstatic const char *debug_opt            = LTWRAPPER_OPTION_PREFIX \"debug\";\n\nint\nmain (int argc, char *argv[])\n{\n  char **newargz;\n  int  newargc;\n  char *tmp_pathspec;\n  char *actual_cwrapper_path;\n  char *actual_cwrapper_name;\n  char *target_name;\n  char *lt_argv_zero;\n  int rval = 127;\n\n  int i;\n\n  program_name = (char *) xstrdup (base_name (argv[0]));\n  newargz = XMALLOC (char *, (size_t) argc + 1);\n\n  /* very simple arg parsing; don't want to rely on getopt\n   * also, copy all non cwrapper options to newargz, except\n   * argz[0], which is handled differently\n   */\n  newargc=0;\n  for (i = 1; i < argc; i++)\n    {\n      if (STREQ (argv[i], dumpscript_opt))\n\t{\nEOF\n\t    case $host in\n\t      *mingw* | *cygwin* )\n\t\t# make stdout use \"unix\" line endings\n\t\techo \"          setmode(1,_O_BINARY);\"\n\t\t;;\n\t      esac\n\n\t    cat <<\"EOF\"\n\t  lt_dump_script (stdout);\n\t  return 0;\n\t}\n      if (STREQ (argv[i], debug_opt))\n\t{\n          lt_debug = 1;\n          continue;\n\t}\n      if (STREQ (argv[i], ltwrapper_option_prefix))\n        {\n          /* however, if there is an option in the LTWRAPPER_OPTION_PREFIX\n             namespace, but it is not one of the ones we know about and\n             have already dealt with, above (inluding dump-script), then\n             report an error. Otherwise, targets might begin to believe\n             they are allowed to use options in the LTWRAPPER_OPTION_PREFIX\n             namespace. The first time any user complains about this, we'll\n             need to make LTWRAPPER_OPTION_PREFIX a configure-time option\n             or a configure.ac-settable value.\n           */\n          lt_fatal (__FILE__, __LINE__,\n\t\t    \"unrecognized %s option: '%s'\",\n                    ltwrapper_option_prefix, argv[i]);\n        }\n      /* otherwise ... */\n      newargz[++newargc] = xstrdup (argv[i]);\n    }\n  newargz[++newargc] = NULL;\n\nEOF\n\t    cat <<EOF\n  /* The GNU banner must be the first non-error debug message */\n  lt_debugprintf (__FILE__, __LINE__, \"libtool wrapper (GNU $PACKAGE) $VERSION\\n\");\nEOF\n\t    cat <<\"EOF\"\n  lt_debugprintf (__FILE__, __LINE__, \"(main) argv[0]: %s\\n\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__, \"(main) program_name: %s\\n\", program_name);\n\n  tmp_pathspec = find_executable (argv[0]);\n  if (tmp_pathspec == NULL)\n    lt_fatal (__FILE__, __LINE__, \"couldn't find %s\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (before symlink chase) at: %s\\n\",\n\t\t  tmp_pathspec);\n\n  actual_cwrapper_path = chase_symlinks (tmp_pathspec);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (after symlink chase) at: %s\\n\",\n\t\t  actual_cwrapper_path);\n  XFREE (tmp_pathspec);\n\n  actual_cwrapper_name = xstrdup (base_name (actual_cwrapper_path));\n  strendzap (actual_cwrapper_path, actual_cwrapper_name);\n\n  /* wrapper name transforms */\n  strendzap (actual_cwrapper_name, \".exe\");\n  tmp_pathspec = lt_extend_str (actual_cwrapper_name, \".exe\", 1);\n  XFREE (actual_cwrapper_name);\n  actual_cwrapper_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  /* target_name transforms -- use actual target program name; might have lt- prefix */\n  target_name = xstrdup (base_name (TARGET_PROGRAM_NAME));\n  strendzap (target_name, \".exe\");\n  tmp_pathspec = lt_extend_str (target_name, \".exe\", 1);\n  XFREE (target_name);\n  target_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(main) libtool target name: %s\\n\",\n\t\t  target_name);\nEOF\n\n\t    cat <<EOF\n  newargz[0] =\n    XMALLOC (char, (strlen (actual_cwrapper_path) +\n\t\t    strlen (\"$objdir\") + 1 + strlen (actual_cwrapper_name) + 1));\n  strcpy (newargz[0], actual_cwrapper_path);\n  strcat (newargz[0], \"$objdir\");\n  strcat (newargz[0], \"/\");\nEOF\n\n\t    cat <<\"EOF\"\n  /* stop here, and copy so we don't have to do this twice */\n  tmp_pathspec = xstrdup (newargz[0]);\n\n  /* do NOT want the lt- prefix here, so use actual_cwrapper_name */\n  strcat (newargz[0], actual_cwrapper_name);\n\n  /* DO want the lt- prefix here if it exists, so use target_name */\n  lt_argv_zero = lt_extend_str (tmp_pathspec, target_name, 1);\n  XFREE (tmp_pathspec);\n  tmp_pathspec = NULL;\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t    cat <<\"EOF\"\n  {\n    char* p;\n    while ((p = strchr (newargz[0], '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n    while ((p = strchr (lt_argv_zero, '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n  }\nEOF\n\t    ;;\n\t    esac\n\n\t    cat <<\"EOF\"\n  XFREE (target_name);\n  XFREE (actual_cwrapper_path);\n  XFREE (actual_cwrapper_name);\n\n  lt_setenv (\"BIN_SH\", \"xpg4\"); /* for Tru64 */\n  lt_setenv (\"DUALCASE\", \"1\");  /* for MSK sh */\n  /* Update the DLL searchpath.  EXE_PATH_VALUE ($dllsearchpath) must\n     be prepended before (that is, appear after) LIB_PATH_VALUE ($temp_rpath)\n     because on Windows, both *_VARNAMEs are PATH but uninstalled\n     libraries must come first. */\n  lt_update_exe_path (EXE_PATH_VARNAME, EXE_PATH_VALUE);\n  lt_update_lib_path (LIB_PATH_VARNAME, LIB_PATH_VALUE);\n\n  lt_debugprintf (__FILE__, __LINE__, \"(main) lt_argv_zero: %s\\n\",\n\t\t  nonnull (lt_argv_zero));\n  for (i = 0; i < newargc; i++)\n    {\n      lt_debugprintf (__FILE__, __LINE__, \"(main) newargz[%d]: %s\\n\",\n\t\t      i, nonnull (newargz[i]));\n    }\n\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n  /* execv doesn't actually work on mingw as expected on unix */\n  newargz = prepare_spawn (newargz);\n  rval = (int) _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);\n  if (rval == -1)\n    {\n      /* failed to start process */\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"(main) failed to launch target \\\"%s\\\": %s\\n\",\n\t\t      lt_argv_zero, nonnull (strerror (errno)));\n      return 127;\n    }\n  return rval;\nEOF\n\t\t;;\n\t      *)\n\t\tcat <<\"EOF\"\n  execv (lt_argv_zero, newargz);\n  return rval; /* =127, but avoids unused variable warning */\nEOF\n\t\t;;\n\t    esac\n\n\t    cat <<\"EOF\"\n}\n\nvoid *\nxmalloc (size_t num)\n{\n  void *p = (void *) malloc (num);\n  if (!p)\n    lt_fatal (__FILE__, __LINE__, \"memory exhausted\");\n\n  return p;\n}\n\nchar *\nxstrdup (const char *string)\n{\n  return string ? strcpy ((char *) xmalloc (strlen (string) + 1),\n\t\t\t  string) : NULL;\n}\n\nconst char *\nbase_name (const char *name)\n{\n  const char *base;\n\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n  /* Skip over the disk name in MSDOS pathnames. */\n  if (isalpha ((unsigned char) name[0]) && name[1] == ':')\n    name += 2;\n#endif\n\n  for (base = name; *name; name++)\n    if (IS_DIR_SEPARATOR (*name))\n      base = name + 1;\n  return base;\n}\n\nint\ncheck_executable (const char *path)\n{\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(check_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if ((stat (path, &st) >= 0)\n      && (st.st_mode & (S_IXUSR | S_IXGRP | S_IXOTH)))\n    return 1;\n  else\n    return 0;\n}\n\nint\nmake_executable (const char *path)\n{\n  int rval = 0;\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(make_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if (stat (path, &st) >= 0)\n    {\n      rval = chmod (path, st.st_mode | S_IXOTH | S_IXGRP | S_IXUSR);\n    }\n  return rval;\n}\n\n/* Searches for the full path of the wrapper.  Returns\n   newly allocated full path name if found, NULL otherwise\n   Does not chase symlinks, even on platforms that support them.\n*/\nchar *\nfind_executable (const char *wrapper)\n{\n  int has_slash = 0;\n  const char *p;\n  const char *p_next;\n  /* static buffer for getcwd */\n  char tmp[LT_PATHMAX + 1];\n  size_t tmp_len;\n  char *concat_name;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(find_executable): %s\\n\",\n                  nonempty (wrapper));\n\n  if ((wrapper == NULL) || (*wrapper == '\\0'))\n    return NULL;\n\n  /* Absolute path? */\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n  if (isalpha ((unsigned char) wrapper[0]) && wrapper[1] == ':')\n    {\n      concat_name = xstrdup (wrapper);\n      if (check_executable (concat_name))\n\treturn concat_name;\n      XFREE (concat_name);\n    }\n  else\n    {\n#endif\n      if (IS_DIR_SEPARATOR (wrapper[0]))\n\t{\n\t  concat_name = xstrdup (wrapper);\n\t  if (check_executable (concat_name))\n\t    return concat_name;\n\t  XFREE (concat_name);\n\t}\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n    }\n#endif\n\n  for (p = wrapper; *p; p++)\n    if (*p == '/')\n      {\n\thas_slash = 1;\n\tbreak;\n      }\n  if (!has_slash)\n    {\n      /* no slashes; search PATH */\n      const char *path = getenv (\"PATH\");\n      if (path != NULL)\n\t{\n\t  for (p = path; *p; p = p_next)\n\t    {\n\t      const char *q;\n\t      size_t p_len;\n\t      for (q = p; *q; q++)\n\t\tif (IS_PATH_SEPARATOR (*q))\n\t\t  break;\n\t      p_len = (size_t) (q - p);\n\t      p_next = (*q == '\\0' ? q : q + 1);\n\t      if (p_len == 0)\n\t\t{\n\t\t  /* empty path: current directory */\n\t\t  if (getcwd (tmp, LT_PATHMAX) == NULL)\n\t\t    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n                              nonnull (strerror (errno)));\n\t\t  tmp_len = strlen (tmp);\n\t\t  concat_name =\n\t\t    XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, tmp, tmp_len);\n\t\t  concat_name[tmp_len] = '/';\n\t\t  strcpy (concat_name + tmp_len + 1, wrapper);\n\t\t}\n\t      else\n\t\t{\n\t\t  concat_name =\n\t\t    XMALLOC (char, p_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, p, p_len);\n\t\t  concat_name[p_len] = '/';\n\t\t  strcpy (concat_name + p_len + 1, wrapper);\n\t\t}\n\t      if (check_executable (concat_name))\n\t\treturn concat_name;\n\t      XFREE (concat_name);\n\t    }\n\t}\n      /* not found in PATH; assume curdir */\n    }\n  /* Relative path | not found in path: prepend cwd */\n  if (getcwd (tmp, LT_PATHMAX) == NULL)\n    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n              nonnull (strerror (errno)));\n  tmp_len = strlen (tmp);\n  concat_name = XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n  memcpy (concat_name, tmp, tmp_len);\n  concat_name[tmp_len] = '/';\n  strcpy (concat_name + tmp_len + 1, wrapper);\n\n  if (check_executable (concat_name))\n    return concat_name;\n  XFREE (concat_name);\n  return NULL;\n}\n\nchar *\nchase_symlinks (const char *pathspec)\n{\n#ifndef S_ISLNK\n  return xstrdup (pathspec);\n#else\n  char buf[LT_PATHMAX];\n  struct stat s;\n  char *tmp_pathspec = xstrdup (pathspec);\n  char *p;\n  int has_symlinks = 0;\n  while (strlen (tmp_pathspec) && !has_symlinks)\n    {\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"checking path component for symlinks: %s\\n\",\n\t\t      tmp_pathspec);\n      if (lstat (tmp_pathspec, &s) == 0)\n\t{\n\t  if (S_ISLNK (s.st_mode) != 0)\n\t    {\n\t      has_symlinks = 1;\n\t      break;\n\t    }\n\n\t  /* search backwards for last DIR_SEPARATOR */\n\t  p = tmp_pathspec + strlen (tmp_pathspec) - 1;\n\t  while ((p > tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    p--;\n\t  if ((p == tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    {\n\t      /* no more DIR_SEPARATORS left */\n\t      break;\n\t    }\n\t  *p = '\\0';\n\t}\n      else\n\t{\n\t  lt_fatal (__FILE__, __LINE__,\n\t\t    \"error accessing file \\\"%s\\\": %s\",\n\t\t    tmp_pathspec, nonnull (strerror (errno)));\n\t}\n    }\n  XFREE (tmp_pathspec);\n\n  if (!has_symlinks)\n    {\n      return xstrdup (pathspec);\n    }\n\n  tmp_pathspec = realpath (pathspec, buf);\n  if (tmp_pathspec == 0)\n    {\n      lt_fatal (__FILE__, __LINE__,\n\t\t\"could not follow symlinks for %s\", pathspec);\n    }\n  return xstrdup (tmp_pathspec);\n#endif\n}\n\nchar *\nstrendzap (char *str, const char *pat)\n{\n  size_t len, patlen;\n\n  assert (str != NULL);\n  assert (pat != NULL);\n\n  len = strlen (str);\n  patlen = strlen (pat);\n\n  if (patlen <= len)\n    {\n      str += len - patlen;\n      if (STREQ (str, pat))\n\t*str = '\\0';\n    }\n  return str;\n}\n\nvoid\nlt_debugprintf (const char *file, int line, const char *fmt, ...)\n{\n  va_list args;\n  if (lt_debug)\n    {\n      (void) fprintf (stderr, \"%s:%s:%d: \", program_name, file, line);\n      va_start (args, fmt);\n      (void) vfprintf (stderr, fmt, args);\n      va_end (args);\n    }\n}\n\nstatic void\nlt_error_core (int exit_status, const char *file,\n\t       int line, const char *mode,\n\t       const char *message, va_list ap)\n{\n  fprintf (stderr, \"%s:%s:%d: %s: \", program_name, file, line, mode);\n  vfprintf (stderr, message, ap);\n  fprintf (stderr, \".\\n\");\n\n  if (exit_status >= 0)\n    exit (exit_status);\n}\n\nvoid\nlt_fatal (const char *file, int line, const char *message, ...)\n{\n  va_list ap;\n  va_start (ap, message);\n  lt_error_core (EXIT_FAILURE, file, line, \"FATAL\", message, ap);\n  va_end (ap);\n}\n\nstatic const char *\nnonnull (const char *s)\n{\n  return s ? s : \"(null)\";\n}\n\nstatic const char *\nnonempty (const char *s)\n{\n  return (s && !*s) ? \"(empty)\" : nonnull (s);\n}\n\nvoid\nlt_setenv (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_setenv) setting '%s' to '%s'\\n\",\n                  nonnull (name), nonnull (value));\n  {\n#ifdef HAVE_SETENV\n    /* always make a copy, for consistency with !HAVE_SETENV */\n    char *str = xstrdup (value);\n    setenv (name, str, 1);\n#else\n    size_t len = strlen (name) + 1 + strlen (value) + 1;\n    char *str = XMALLOC (char, len);\n    sprintf (str, \"%s=%s\", name, value);\n    if (putenv (str) != EXIT_SUCCESS)\n      {\n        XFREE (str);\n      }\n#endif\n  }\n}\n\nchar *\nlt_extend_str (const char *orig_value, const char *add, int to_end)\n{\n  char *new_value;\n  if (orig_value && *orig_value)\n    {\n      size_t orig_value_len = strlen (orig_value);\n      size_t add_len = strlen (add);\n      new_value = XMALLOC (char, add_len + orig_value_len + 1);\n      if (to_end)\n        {\n          strcpy (new_value, orig_value);\n          strcpy (new_value + orig_value_len, add);\n        }\n      else\n        {\n          strcpy (new_value, add);\n          strcpy (new_value + add_len, orig_value);\n        }\n    }\n  else\n    {\n      new_value = xstrdup (add);\n    }\n  return new_value;\n}\n\nvoid\nlt_update_exe_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_exe_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      /* some systems can't cope with a ':'-terminated path #' */\n      size_t len = strlen (new_value);\n      while ((len > 0) && IS_PATH_SEPARATOR (new_value[len-1]))\n        {\n          new_value[--len] = '\\0';\n        }\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nvoid\nlt_update_lib_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_lib_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nEOF\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n\n/* Prepares an argument vector before calling spawn().\n   Note that spawn() does not by itself call the command interpreter\n     (getenv (\"COMSPEC\") != NULL ? getenv (\"COMSPEC\") :\n      ({ OSVERSIONINFO v; v.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);\n         GetVersionEx(&v);\n         v.dwPlatformId == VER_PLATFORM_WIN32_NT;\n      }) ? \"cmd.exe\" : \"command.com\").\n   Instead it simply concatenates the arguments, separated by ' ', and calls\n   CreateProcess().  We must quote the arguments since Win32 CreateProcess()\n   interprets characters like ' ', '\\t', '\\\\', '\"' (but not '<' and '>') in a\n   special way:\n   - Space and tab are interpreted as delimiters. They are not treated as\n     delimiters if they are surrounded by double quotes: \"...\".\n   - Unescaped double quotes are removed from the input. Their only effect is\n     that within double quotes, space and tab are treated like normal\n     characters.\n   - Backslashes not followed by double quotes are not special.\n   - But 2*n+1 backslashes followed by a double quote become\n     n backslashes followed by a double quote (n >= 0):\n       \\\" -> \"\n       \\\\\\\" -> \\\"\n       \\\\\\\\\\\" -> \\\\\"\n */\n#define SHELL_SPECIAL_CHARS \"\\\"\\\\ \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\n#define SHELL_SPACE_CHARS \" \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\nchar **\nprepare_spawn (char **argv)\n{\n  size_t argc;\n  char **new_argv;\n  size_t i;\n\n  /* Count number of arguments.  */\n  for (argc = 0; argv[argc] != NULL; argc++)\n    ;\n\n  /* Allocate new argument vector.  */\n  new_argv = XMALLOC (char *, argc + 1);\n\n  /* Put quoted arguments into the new argument vector.  */\n  for (i = 0; i < argc; i++)\n    {\n      const char *string = argv[i];\n\n      if (string[0] == '\\0')\n\tnew_argv[i] = xstrdup (\"\\\"\\\"\");\n      else if (strpbrk (string, SHELL_SPECIAL_CHARS) != NULL)\n\t{\n\t  int quote_around = (strpbrk (string, SHELL_SPACE_CHARS) != NULL);\n\t  size_t length;\n\t  unsigned int backslashes;\n\t  const char *s;\n\t  char *quoted_string;\n\t  char *p;\n\n\t  length = 0;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    length++;\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\tlength += backslashes + 1;\n\t      length++;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    length += backslashes + 1;\n\n\t  quoted_string = XMALLOC (char, length + 1);\n\n\t  p = quoted_string;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    *p++ = '\"';\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\t{\n\t\t  unsigned int j;\n\t\t  for (j = backslashes + 1; j > 0; j--)\n\t\t    *p++ = '\\\\';\n\t\t}\n\t      *p++ = c;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    {\n\t      unsigned int j;\n\t      for (j = backslashes; j > 0; j--)\n\t\t*p++ = '\\\\';\n\t      *p++ = '\"';\n\t    }\n\t  *p = '\\0';\n\n\t  new_argv[i] = quoted_string;\n\t}\n      else\n\tnew_argv[i] = (char *) string;\n    }\n  new_argv[argc] = NULL;\n\n  return new_argv;\n}\nEOF\n\t\t;;\n\t    esac\n\n            cat <<\"EOF\"\nvoid lt_dump_script (FILE* f)\n{\nEOF\n\t    func_emit_wrapper yes |\n\t      $SED -n -e '\ns/^\\(.\\{79\\}\\)\\(..*\\)/\\1\\\n\\2/\nh\ns/\\([\\\\\"]\\)/\\\\\\1/g\ns/$/\\\\n/\ns/\\([^\\n]*\\).*/  fputs (\"\\1\", f);/p\ng\nD'\n            cat <<\"EOF\"\n}\nEOF\n}\n# end: func_emit_cwrapperexe_src\n\n# func_win32_import_lib_p ARG\n# True if ARG is an import lib, as indicated by $file_magic_cmd\nfunc_win32_import_lib_p ()\n{\n    $debug_cmd\n\n    case `eval $file_magic_cmd \\\"\\$1\\\" 2>/dev/null | $SED -e 10q` in\n    *import*) : ;;\n    *) false ;;\n    esac\n}\n\n# func_suncc_cstd_abi\n# !!ONLY CALL THIS FOR SUN CC AFTER $compile_command IS FULLY EXPANDED!!\n# Several compiler flags select an ABI that is incompatible with the\n# Cstd library. Avoid specifying it if any are in CXXFLAGS.\nfunc_suncc_cstd_abi ()\n{\n    $debug_cmd\n\n    case \" $compile_command \" in\n    *\" -compat=g \"*|*\\ -std=c++[0-9][0-9]\\ *|*\" -library=stdcxx4 \"*|*\" -library=stlport4 \"*)\n      suncc_use_cstd_abi=no\n      ;;\n    *)\n      suncc_use_cstd_abi=yes\n      ;;\n    esac\n}\n\n# func_mode_link arg...\nfunc_mode_link ()\n{\n    $debug_cmd\n\n    case $host in\n    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # what system we are compiling for in order to pass an extra\n      # flag for every libtool invocation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll that has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    libtool_args=$nonopt\n    base_compile=\"$nonopt $@\"\n    compile_command=$nonopt\n    finalize_command=$nonopt\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    old_deplibs=\n    compiler_flags=\n    linker_flags=\n    dllsearchpath=\n    lib_search_path=`pwd`\n    inst_prefix_dir=\n    new_inherited_linker_flags=\n\n    avoid_version=no\n    bindir=\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    ltlibs=\n    module=no\n    no_install=no\n    objs=\n    os2dllname=\n    non_pic_objects=\n    precious_files_regex=\n    prefer_static_libs=no\n    preload=false\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n    vinfo_number=no\n    weak_libs=\n    single_module=$wl-single_module\n    func_infer_tag $base_compile\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case $arg in\n      -shared)\n\ttest yes != \"$build_libtool_libs\" \\\n\t  && func_fatal_configuration \"cannot build a shared library\"\n\tbuild_old_libs=no\n\tbreak\n\t;;\n      -all-static | -static | -static-libtool-libs)\n\tcase $arg in\n\t-all-static)\n\t  if test yes = \"$build_libtool_libs\" && test -z \"$link_static_flag\"; then\n\t    func_warning \"complete static linking is impossible in this configuration\"\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\t-static)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=built\n\t  ;;\n\t-static-libtool-libs)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\tesac\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test \"$#\" -gt 0; do\n      arg=$1\n      shift\n      func_quote_for_eval \"$arg\"\n      qarg=$func_quote_for_eval_unquoted_result\n      func_append libtool_args \" $func_quote_for_eval_result\"\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase $prev in\n\toutput)\n\t  func_append compile_command \" @OUTPUT@\"\n\t  func_append finalize_command \" @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase $prev in\n\tbindir)\n\t  bindir=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tdlfiles|dlprefiles)\n\t  $preload || {\n\t    # Add the symbol object into the linking commands.\n\t    func_append compile_command \" @SYMFILE@\"\n\t    func_append finalize_command \" @SYMFILE@\"\n\t    preload=:\n\t  }\n\t  case $arg in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test no = \"$dlself\"; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test dlprefiles = \"$prev\"; then\n\t      dlself=yes\n\t    elif test dlfiles = \"$prev\" && test yes != \"$dlopen_self\"; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test dlfiles = \"$prev\"; then\n\t      func_append dlfiles \" $arg\"\n\t    else\n\t      func_append dlprefiles \" $arg\"\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=$arg\n\t  test -f \"$arg\" \\\n\t    || func_fatal_error \"symbol file '$arg' does not exist\"\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tframework)\n\t  case $host in\n\t    *-*-darwin*)\n\t      case \"$deplibs \" in\n\t\t*\" $qarg.ltframework \"*) ;;\n\t\t*) func_append deplibs \" $qarg.ltframework\" # this is fixed later\n\t\t   ;;\n\t      esac\n\t      ;;\n\t  esac\n\t  prev=\n\t  continue\n\t  ;;\n\tinst_prefix)\n\t  inst_prefix_dir=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tmllvm)\n\t  # Clang does not use LLVM to link, so we can simply discard any\n\t  # '-mllvm $arg' options when doing the link step.\n\t  prev=\n\t  continue\n\t  ;;\n\tobjectlist)\n\t  if test -f \"$arg\"; then\n\t    save_arg=$arg\n\t    moreargs=\n\t    for fil in `cat \"$save_arg\"`\n\t    do\n#\t      func_append moreargs \" $fil\"\n\t      arg=$fil\n\t      # A libtool-controlled object.\n\n\t      # Check to see that this really is a libtool object.\n\t      if func_lalib_unsafe_p \"$arg\"; then\n\t\tpic_object=\n\t\tnon_pic_object=\n\n\t\t# Read the .lo file\n\t\tfunc_source \"$arg\"\n\n\t\tif test -z \"$pic_object\" ||\n\t\t   test -z \"$non_pic_object\" ||\n\t\t   test none = \"$pic_object\" &&\n\t\t   test none = \"$non_pic_object\"; then\n\t\t  func_fatal_error \"cannot find name of object for '$arg'\"\n\t\tfi\n\n\t\t# Extract subdirectory from the argument.\n\t\tfunc_dirname \"$arg\" \"/\" \"\"\n\t\txdir=$func_dirname_result\n\n\t\tif test none != \"$pic_object\"; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  pic_object=$xdir$pic_object\n\n\t\t  if test dlfiles = \"$prev\"; then\n\t\t    if test yes = \"$build_libtool_libs\" && test yes = \"$dlopen_support\"; then\n\t\t      func_append dlfiles \" $pic_object\"\n\t\t      prev=\n\t\t      continue\n\t\t    else\n\t\t      # If libtool objects are unsupported, then we need to preload.\n\t\t      prev=dlprefiles\n\t\t    fi\n\t\t  fi\n\n\t\t  # CHECK ME:  I think I busted this.  -Ossama\n\t\t  if test dlprefiles = \"$prev\"; then\n\t\t    # Preload the old-style object.\n\t\t    func_append dlprefiles \" $pic_object\"\n\t\t    prev=\n\t\t  fi\n\n\t\t  # A PIC object.\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  arg=$pic_object\n\t\tfi\n\n\t\t# Non-PIC object.\n\t\tif test none != \"$non_pic_object\"; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  non_pic_object=$xdir$non_pic_object\n\n\t\t  # A standard non-PIC object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\t  if test -z \"$pic_object\" || test none = \"$pic_object\"; then\n\t\t    arg=$non_pic_object\n\t\t  fi\n\t\telse\n\t\t  # If the PIC object exists, use it instead.\n\t\t  # $xdir was prepended to $pic_object above.\n\t\t  non_pic_object=$pic_object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\tfi\n\t      else\n\t\t# Only an error if not doing a dry-run.\n\t\tif $opt_dry_run; then\n\t\t  # Extract subdirectory from the argument.\n\t\t  func_dirname \"$arg\" \"/\" \"\"\n\t\t  xdir=$func_dirname_result\n\n\t\t  func_lo2o \"$arg\"\n\t\t  pic_object=$xdir$objdir/$func_lo2o_result\n\t\t  non_pic_object=$xdir$func_lo2o_result\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t        else\n\t\t  func_fatal_error \"'$arg' is not a valid libtool object\"\n\t\tfi\n\t      fi\n\t    done\n\t  else\n\t    func_fatal_error \"link input file '$arg' does not exist\"\n\t  fi\n\t  arg=$save_arg\n\t  prev=\n\t  continue\n\t  ;;\n\tos2dllname)\n\t  os2dllname=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tprecious_regex)\n\t  precious_files_regex=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=-$arg\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case $arg in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    func_fatal_error \"only absolute run-paths are allowed\"\n\t    ;;\n\t  esac\n\t  if test rpath = \"$prev\"; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append rpath \" $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append xrpath \" $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\tshrext)\n\t  shrext_cmds=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tweak)\n\t  func_append weak_libs \" $arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\txcclinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txcompiler)\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txlinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $wl$qarg\"\n\t  prev=\n\t  func_append compile_command \" $wl$qarg\"\n\t  func_append finalize_command \" $wl$qarg\"\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi # test -n \"$prev\"\n\n      prevarg=$arg\n\n      case $arg in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  # See comment for -static flag below, for more details.\n\t  func_append compile_command \" $link_static_flag\"\n\t  func_append finalize_command \" $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\tfunc_fatal_error \"'-allow-undefined' must not be used because it is the default\"\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -bindir)\n\tprev=bindir\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  func_fatal_error \"more than one -exported-symbols argument is not allowed\"\n\tfi\n\tif test X-export-symbols = \"X$arg\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -framework)\n\tprev=framework\n\tcontinue\n\t;;\n\n      -inst-prefix-dir)\n\tprev=inst_prefix\n\tcontinue\n\t;;\n\n      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*\n      # so, if we see these flags be careful not to treat them like -L\n      -L[A-Z][A-Z]*:*)\n\tcase $with_gcc/$host in\n\tno/*-*-irix* | /*-*-irix*)\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -L*)\n\tfunc_stripname \"-L\" '' \"$arg\"\n\tif test -z \"$func_stripname_result\"; then\n\t  if test \"$#\" -gt 0; then\n\t    func_fatal_error \"require no space between '-L' and '$1'\"\n\t  else\n\t    func_fatal_error \"need path for '-L' option\"\n\t  fi\n\tfi\n\tfunc_resolve_sysroot \"$func_stripname_result\"\n\tdir=$func_resolve_sysroot_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  test -z \"$absdir\" && \\\n\t    func_fatal_error \"cannot determine absolute directory name of '$dir'\"\n\t  dir=$absdir\n\t  ;;\n\tesac\n\tcase \"$deplibs \" in\n\t*\" -L$dir \"* | *\" $arg \"*)\n\t  # Will only happen for absolute or sysroot arguments\n\t  ;;\n\t*)\n\t  # Preserve sysroot, but never include relative directories\n\t  case $dir in\n\t    [\\\\/]* | [A-Za-z]:[\\\\/]* | =*) func_append deplibs \" $arg\" ;;\n\t    *) func_append deplibs \" -L$dir\" ;;\n\t  esac\n\t  func_append lib_search_path \" $dir\"\n\t  ;;\n\tesac\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$dir\" | $SED 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$dir:\"*) ;;\n\t  ::) dllsearchpath=$dir;;\n\t  *) func_append dllsearchpath \":$dir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -l*)\n\tif test X-lc = \"X$arg\" || test X-lm = \"X$arg\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # These systems don't actually have a C or math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-os2*)\n\t    # These systems don't actually have a C library (as such)\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly* | *-*-bitrig*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C and math libraries are in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    continue\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  esac\n\telif test X-lc_r = \"X$arg\"; then\n\t case $host in\n\t *-*-openbsd* | *-*-freebsd* | *-*-dragonfly* | *-*-bitrig*)\n\t   # Do not include libc_r directly, use -pthread flag.\n\t   continue\n\t   ;;\n\t esac\n\tfi\n\tfunc_append deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      -mllvm)\n\tprev=mllvm\n\tcontinue\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      # Tru64 UNIX uses -model [arg] to determine the layout of C++\n      # classes, name mangling, and exception handling.\n      # Darwin uses the -arch flag to determine output architecture.\n      -model|-arch|-isysroot|--sysroot)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n      |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tcase \"$new_inherited_linker_flags \" in\n\t    *\" $arg \"*) ;;\n\t    * ) func_append new_inherited_linker_flags \" $arg\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -multi_module)\n\tsingle_module=$wl-multi_module\n\tcontinue\n\t;;\n\n      -no-fast-install)\n\tfast_install=no\n\tcontinue\n\t;;\n\n      -no-install)\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-darwin* | *-cegcc*)\n\t  # The PATH hackery in wrapper scripts is required on Windows\n\t  # and Darwin in order for the loader to find any dlls it needs.\n\t  func_warning \"'-no-install' is ignored for $host\"\n\t  func_warning \"assuming '-no-fast-install' instead\"\n\t  fast_install=no\n\t  ;;\n\t*) no_install=yes ;;\n\tesac\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -objectlist)\n\tprev=objectlist\n\tcontinue\n\t;;\n\n      -os2dllname)\n\tprev=os2dllname\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -precious-files-regex)\n\tprev=precious_regex\n\tcontinue\n\t;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tfunc_stripname '-R' '' \"$arg\"\n\tdir=$func_stripname_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t=*)\n\t  func_stripname '=' '' \"$dir\"\n\t  dir=$lt_sysroot$func_stripname_result\n\t  ;;\n\t*)\n\t  func_fatal_error \"only absolute run-paths are allowed\"\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) func_append xrpath \" $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -shared)\n\t# The effects of -shared are defined in a previous loop.\n\tcontinue\n\t;;\n\n      -shrext)\n\tprev=shrext\n\tcontinue\n\t;;\n\n      -static | -static-libtool-libs)\n\t# The effects of -static are defined in a previous loop.\n\t# We used to do the same as -all-static on platforms that\n\t# didn't have a PIC flag, but the assumption that the effects\n\t# would be equivalent was wrong.  It would break on at least\n\t# Digital Unix and AIX.\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n\n      -version-number)\n\tprev=vinfo\n\tvinfo_number=yes\n\tcontinue\n\t;;\n\n      -weak)\n        prev=weak\n\tcontinue\n\t;;\n\n      -Wc,*)\n\tfunc_stripname '-Wc,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=$IFS; IFS=,\n\tfor flag in $args; do\n\t  IFS=$save_ifs\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=$save_ifs\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Wl,*)\n\tfunc_stripname '-Wl,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=$IFS; IFS=,\n\tfor flag in $args; do\n\t  IFS=$save_ifs\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $wl$func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $wl$func_quote_for_eval_result\"\n\t  func_append linker_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=$save_ifs\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Xcompiler)\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -Xlinker)\n\tprev=xlinker\n\tcontinue\n\t;;\n\n      -XCClinker)\n\tprev=xcclinker\n\tcontinue\n\t;;\n\n      # -msg_* for osf cc\n      -msg_*)\n\tfunc_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n\n      # Flags to be passed through unchanged, with rationale:\n      # -64, -mips[0-9]      enable 64-bit mode for the SGI compiler\n      # -r[0-9][0-9]*        specify processor for the SGI compiler\n      # -xarch=*, -xtarget=* enable 64-bit mode for the Sun compiler\n      # +DA*, +DD*           enable 64-bit mode for the HP compiler\n      # -q*                  compiler args for the IBM compiler\n      # -m*, -t[45]*, -txscale* architecture-specific flags for GCC\n      # -F/path              path to uninstalled frameworks, gcc on darwin\n      # -p, -pg, --coverage, -fprofile-*  profiling flags for GCC\n      # -fstack-protector*   stack protector flags for GCC\n      # @file                GCC response files\n      # -tp=*                Portland pgcc target processor selection\n      # --sysroot=*          for sysroot support\n      # -O*, -g*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization\n      # -specs=*             GCC specs files\n      # -stdlib=*            select c++ std lib with clang\n      # -fsanitize=*         Clang/GCC memory and address sanitizer\n      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \\\n      -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*|--sysroot=*| \\\n      -O*|-g*|-flto*|-fwhopr*|-fuse-linker-plugin|-fstack-protector*|-stdlib=*| \\\n      -specs=*|-fsanitize=*)\n        func_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n        func_append compile_command \" $arg\"\n        func_append finalize_command \" $arg\"\n        func_append compiler_flags \" $arg\"\n        continue\n        ;;\n\n      -Z*)\n        if test os2 = \"`expr $host : '.*\\(os2\\)'`\"; then\n          # OS/2 uses -Zxxx to specify OS/2-specific options\n\t  compiler_flags=\"$compiler_flags $arg\"\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  case $arg in\n\t  -Zlinker | -Zstack)\n\t    prev=xcompiler\n\t    ;;\n\t  esac\n\t  continue\n        else\n\t  # Otherwise treat like 'Some other compiler flag' below\n\t  func_quote_for_eval \"$arg\"\n\t  arg=$func_quote_for_eval_result\n        fi\n\t;;\n\n      # Some other compiler flag.\n      -* | +*)\n        func_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n\n      *.$objext)\n\t# A standard object.\n\tfunc_append objs \" $arg\"\n\t;;\n\n      *.lo)\n\t# A libtool-controlled object.\n\n\t# Check to see that this really is a libtool object.\n\tif func_lalib_unsafe_p \"$arg\"; then\n\t  pic_object=\n\t  non_pic_object=\n\n\t  # Read the .lo file\n\t  func_source \"$arg\"\n\n\t  if test -z \"$pic_object\" ||\n\t     test -z \"$non_pic_object\" ||\n\t     test none = \"$pic_object\" &&\n\t     test none = \"$non_pic_object\"; then\n\t    func_fatal_error \"cannot find name of object for '$arg'\"\n\t  fi\n\n\t  # Extract subdirectory from the argument.\n\t  func_dirname \"$arg\" \"/\" \"\"\n\t  xdir=$func_dirname_result\n\n\t  test none = \"$pic_object\" || {\n\t    # Prepend the subdirectory the object is found in.\n\t    pic_object=$xdir$pic_object\n\n\t    if test dlfiles = \"$prev\"; then\n\t      if test yes = \"$build_libtool_libs\" && test yes = \"$dlopen_support\"; then\n\t\tfunc_append dlfiles \" $pic_object\"\n\t\tprev=\n\t\tcontinue\n\t      else\n\t\t# If libtool objects are unsupported, then we need to preload.\n\t\tprev=dlprefiles\n\t      fi\n\t    fi\n\n\t    # CHECK ME:  I think I busted this.  -Ossama\n\t    if test dlprefiles = \"$prev\"; then\n\t      # Preload the old-style object.\n\t      func_append dlprefiles \" $pic_object\"\n\t      prev=\n\t    fi\n\n\t    # A PIC object.\n\t    func_append libobjs \" $pic_object\"\n\t    arg=$pic_object\n\t  }\n\n\t  # Non-PIC object.\n\t  if test none != \"$non_pic_object\"; then\n\t    # Prepend the subdirectory the object is found in.\n\t    non_pic_object=$xdir$non_pic_object\n\n\t    # A standard non-PIC object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t    if test -z \"$pic_object\" || test none = \"$pic_object\"; then\n\t      arg=$non_pic_object\n\t    fi\n\t  else\n\t    # If the PIC object exists, use it instead.\n\t    # $xdir was prepended to $pic_object above.\n\t    non_pic_object=$pic_object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  fi\n\telse\n\t  # Only an error if not doing a dry-run.\n\t  if $opt_dry_run; then\n\t    # Extract subdirectory from the argument.\n\t    func_dirname \"$arg\" \"/\" \"\"\n\t    xdir=$func_dirname_result\n\n\t    func_lo2o \"$arg\"\n\t    pic_object=$xdir$objdir/$func_lo2o_result\n\t    non_pic_object=$xdir$func_lo2o_result\n\t    func_append libobjs \" $pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  else\n\t    func_fatal_error \"'$arg' is not a valid libtool object\"\n\t  fi\n\tfi\n\t;;\n\n      *.$libext)\n\t# An archive.\n\tfunc_append deplibs \" $arg\"\n\tfunc_append old_deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tfunc_resolve_sysroot \"$arg\"\n\tif test dlfiles = \"$prev\"; then\n\t  # This library was specified with -dlopen.\n\t  func_append dlfiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telif test dlprefiles = \"$prev\"; then\n\t  # The library was specified with -dlpreopen.\n\t  func_append dlprefiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telse\n\t  func_append deplibs \" $func_resolve_sysroot_result\"\n\tfi\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\tfunc_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n      esac # arg\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n      fi\n    done # argument parsing loop\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the '$prevarg' option requires an argument\"\n\n    if test yes = \"$export_dynamic\" && test -n \"$export_dynamic_flag_spec\"; then\n      eval arg=\\\"$export_dynamic_flag_spec\\\"\n      func_append compile_command \" $arg\"\n      func_append finalize_command \" $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    func_basename \"$output\"\n    outputname=$func_basename_result\n    libobjs_save=$libobjs\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval shlib_search_path=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" \\| \\$SED \\'s/:/ /g\\'\\`\n    else\n      shlib_search_path=\n    fi\n    eval sys_lib_search_path=\\\"$sys_lib_search_path_spec\\\"\n    eval sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\n\n    # Definition is injected by LT_CONFIG during libtool generation.\n    func_munge_path_list sys_lib_dlsearch_path \"$LT_SYS_LIBRARY_PATH\"\n\n    func_dirname \"$output\" \"/\" \"\"\n    output_objdir=$func_dirname_result$objdir\n    func_to_tool_file \"$output_objdir/\"\n    tool_output_objdir=$func_to_tool_file_result\n    # Create the object directory.\n    func_mkdir_p \"$output_objdir\"\n\n    # Determine the type of output\n    case $output in\n    \"\")\n      func_fatal_help \"you must specify an output file\"\n      ;;\n    *.$libext) linkmode=oldlib ;;\n    *.lo | *.$objext) linkmode=obj ;;\n    *.la) linkmode=lib ;;\n    *) linkmode=prog ;; # Anything else should be a program.\n    esac\n\n    specialdeplibs=\n\n    libs=\n    # Find all interdependent deplibs by searching for libraries\n    # that are linked more than once (e.g. -la -lb -la)\n    for deplib in $deplibs; do\n      if $opt_preserve_dup_deps; then\n\tcase \"$libs \" in\n\t*\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\tesac\n      fi\n      func_append libs \" $deplib\"\n    done\n\n    if test lib = \"$linkmode\"; then\n      libs=\"$predeps $libs $compiler_lib_search_path $postdeps\"\n\n      # Compute libraries that are listed more than once in $predeps\n      # $postdeps and mark them as special (i.e., whose duplicates are\n      # not to be eliminated).\n      pre_post_deps=\n      if $opt_duplicate_compiler_generated_deps; then\n\tfor pre_post_dep in $predeps $postdeps; do\n\t  case \"$pre_post_deps \" in\n\t  *\" $pre_post_dep \"*) func_append specialdeplibs \" $pre_post_deps\" ;;\n\t  esac\n\t  func_append pre_post_deps \" $pre_post_dep\"\n\tdone\n      fi\n      pre_post_deps=\n    fi\n\n    deplibs=\n    newdependency_libs=\n    newlib_search_path=\n    need_relink=no # whether we're linking any uninstalled libtool libraries\n    notinst_deplibs= # not-installed libtool libraries\n    notinst_path= # paths that contain not-installed libtool libraries\n\n    case $linkmode in\n    lib)\n\tpasses=\"conv dlpreopen link\"\n\tfor file in $dlfiles $dlprefiles; do\n\t  case $file in\n\t  *.la) ;;\n\t  *)\n\t    func_fatal_help \"libraries can '-dlopen' only libtool libraries: $file\"\n\t    ;;\n\t  esac\n\tdone\n\t;;\n    prog)\n\tcompile_deplibs=\n\tfinalize_deplibs=\n\talldeplibs=false\n\tnewdlfiles=\n\tnewdlprefiles=\n\tpasses=\"conv scan dlopen dlpreopen link\"\n\t;;\n    *)  passes=\"conv\"\n\t;;\n    esac\n\n    for pass in $passes; do\n      # The preopen pass in lib mode reverses $deplibs; put it back here\n      # so that -L comes before libs that need it for instance...\n      if test lib,link = \"$linkmode,$pass\"; then\n\t## FIXME: Find the place where the list is rebuilt in the wrong\n\t##        order, and fix it there properly\n        tmp_deplibs=\n\tfor deplib in $deplibs; do\n\t  tmp_deplibs=\"$deplib $tmp_deplibs\"\n\tdone\n\tdeplibs=$tmp_deplibs\n      fi\n\n      if test lib,link = \"$linkmode,$pass\" ||\n\t test prog,scan = \"$linkmode,$pass\"; then\n\tlibs=$deplibs\n\tdeplibs=\n      fi\n      if test prog = \"$linkmode\"; then\n\tcase $pass in\n\tdlopen) libs=$dlfiles ;;\n\tdlpreopen) libs=$dlprefiles ;;\n\tlink)\n\t  libs=\"$deplibs %DEPLIBS%\"\n\t  test \"X$link_all_deplibs\" != Xno && libs=\"$libs $dependency_libs\"\n\t  ;;\n\tesac\n      fi\n      if test lib,dlpreopen = \"$linkmode,$pass\"; then\n\t# Collect and forward deplibs of preopened libtool libs\n\tfor lib in $dlprefiles; do\n\t  # Ignore non-libtool-libs\n\t  dependency_libs=\n\t  func_resolve_sysroot \"$lib\"\n\t  case $lib in\n\t  *.la)\tfunc_source \"$func_resolve_sysroot_result\" ;;\n\t  esac\n\n\t  # Collect preopened libtool deplibs, except any this library\n\t  # has declared as weak libs\n\t  for deplib in $dependency_libs; do\n\t    func_basename \"$deplib\"\n            deplib_base=$func_basename_result\n\t    case \" $weak_libs \" in\n\t    *\" $deplib_base \"*) ;;\n\t    *) func_append deplibs \" $deplib\" ;;\n\t    esac\n\t  done\n\tdone\n\tlibs=$dlprefiles\n      fi\n      if test dlopen = \"$pass\"; then\n\t# Collect dlpreopened libraries\n\tsave_deplibs=$deplibs\n\tdeplibs=\n      fi\n\n      for deplib in $libs; do\n\tlib=\n\tfound=false\n\tcase $deplib in\n\t-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n        |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\t  if test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    func_append compiler_flags \" $deplib\"\n\t    if test lib = \"$linkmode\"; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-l*)\n\t  if test lib != \"$linkmode\" && test prog != \"$linkmode\"; then\n\t    func_warning \"'-l' is ignored for archives/objects\"\n\t    continue\n\t  fi\n\t  func_stripname '-l' '' \"$deplib\"\n\t  name=$func_stripname_result\n\t  if test lib = \"$linkmode\"; then\n\t    searchdirs=\"$newlib_search_path $lib_search_path $compiler_lib_search_dirs $sys_lib_search_path $shlib_search_path\"\n\t  else\n\t    searchdirs=\"$newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path\"\n\t  fi\n\t  for searchdir in $searchdirs; do\n\t    for search_ext in .la $std_shrext .so .a; do\n\t      # Search the libtool library\n\t      lib=$searchdir/lib$name$search_ext\n\t      if test -f \"$lib\"; then\n\t\tif test .la = \"$search_ext\"; then\n\t\t  found=:\n\t\telse\n\t\t  found=false\n\t\tfi\n\t\tbreak 2\n\t      fi\n\t    done\n\t  done\n\t  if $found; then\n\t    # deplib is a libtool library\n\t    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,\n\t    # We need to do some special things here, and not later.\n\t    if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t      case \" $predeps $postdeps \" in\n\t      *\" $deplib \"*)\n\t\tif func_lalib_p \"$lib\"; then\n\t\t  library_names=\n\t\t  old_library=\n\t\t  func_source \"$lib\"\n\t\t  for l in $old_library $library_names; do\n\t\t    ll=$l\n\t\t  done\n\t\t  if test \"X$ll\" = \"X$old_library\"; then # only static version available\n\t\t    found=false\n\t\t    func_dirname \"$lib\" \"\" \".\"\n\t\t    ladir=$func_dirname_result\n\t\t    lib=$ladir/$old_library\n\t\t    if test prog,link = \"$linkmode,$pass\"; then\n\t\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t\t    else\n\t\t      deplibs=\"$deplib $deplibs\"\n\t\t      test lib = \"$linkmode\" && newdependency_libs=\"$deplib $newdependency_libs\"\n\t\t    fi\n\t\t    continue\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *) ;;\n\t      esac\n\t    fi\n\t  else\n\t    # deplib doesn't seem to be a libtool library\n\t    if test prog,link = \"$linkmode,$pass\"; then\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      deplibs=\"$deplib $deplibs\"\n\t      test lib = \"$linkmode\" && newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    continue\n\t  fi\n\t  ;; # -l\n\t*.ltframework)\n\t  if test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$deplib $deplibs\"\n\t    if test lib = \"$linkmode\"; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-L*)\n\t  case $linkmode in\n\t  lib)\n\t    deplibs=\"$deplib $deplibs\"\n\t    test conv = \"$pass\" && continue\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  prog)\n\t    if test conv = \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t      continue\n\t    fi\n\t    if test scan = \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  *)\n\t    func_warning \"'-L' is ignored for archives/objects\"\n\t    ;;\n\t  esac # linkmode\n\t  continue\n\t  ;; # -L\n\t-R*)\n\t  if test link = \"$pass\"; then\n\t    func_stripname '-R' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    dir=$func_resolve_sysroot_result\n\t    # Make sure the xrpath contains only unique directories.\n\t    case \"$xrpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append xrpath \" $dir\" ;;\n\t    esac\n\t  fi\n\t  deplibs=\"$deplib $deplibs\"\n\t  continue\n\t  ;;\n\t*.la)\n\t  func_resolve_sysroot \"$deplib\"\n\t  lib=$func_resolve_sysroot_result\n\t  ;;\n\t*.$libext)\n\t  if test conv = \"$pass\"; then\n\t    deplibs=\"$deplib $deplibs\"\n\t    continue\n\t  fi\n\t  case $linkmode in\n\t  lib)\n\t    # Linking convenience modules into shared libraries is allowed,\n\t    # but linking other static libraries is non-portable.\n\t    case \" $dlpreconveniencelibs \" in\n\t    *\" $deplib \"*) ;;\n\t    *)\n\t      valid_a_lib=false\n\t      case $deplibs_check_method in\n\t\tmatch_pattern*)\n\t\t  set dummy $deplibs_check_method; shift\n\t\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t\t  if eval \"\\$ECHO \\\"$deplib\\\"\" 2>/dev/null | $SED 10q \\\n\t\t    | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t    valid_a_lib=:\n\t\t  fi\n\t\t;;\n\t\tpass_all)\n\t\t  valid_a_lib=:\n\t\t;;\n\t      esac\n\t      if $valid_a_lib; then\n\t\techo\n\t\t$ECHO \"*** Warning: Linking the shared library $output against the\"\n\t\t$ECHO \"*** static library $deplib is not portable!\"\n\t\tdeplibs=\"$deplib $deplibs\"\n\t      else\n\t\techo\n\t\t$ECHO \"*** Warning: Trying to link with static lib archive $deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because the file extensions .$libext of this argument makes me believe\"\n\t\techo \"*** that it is just a static archive that I should not use here.\"\n\t      fi\n\t      ;;\n\t    esac\n\t    continue\n\t    ;;\n\t  prog)\n\t    if test link != \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  esac # linkmode\n\t  ;; # *.$libext\n\t*.lo | *.$objext)\n\t  if test conv = \"$pass\"; then\n\t    deplibs=\"$deplib $deplibs\"\n\t  elif test prog = \"$linkmode\"; then\n\t    if test dlpreopen = \"$pass\" || test yes != \"$dlopen_support\" || test no = \"$build_libtool_libs\"; then\n\t      # If there is no dlopen support or we're linking statically,\n\t      # we need to preload.\n\t      func_append newdlprefiles \" $deplib\"\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      func_append newdlfiles \" $deplib\"\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t%DEPLIBS%)\n\t  alldeplibs=:\n\t  continue\n\t  ;;\n\tesac # case $deplib\n\n\t$found || test -f \"$lib\" \\\n\t  || func_fatal_error \"cannot find the library '$lib' or unhandled argument '$deplib'\"\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$lib\" \\\n\t  || func_fatal_error \"'$lib' is not a valid libtool archive\"\n\n\tfunc_dirname \"$lib\" \"\" \".\"\n\tladir=$func_dirname_result\n\n\tdlname=\n\tdlopen=\n\tdlpreopen=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\tinherited_linker_flags=\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variables installed, or shouldnotlink\n\tinstalled=yes\n\tshouldnotlink=no\n\tavoidtemprpath=\n\n\n\t# Read the .la file\n\tfunc_source \"$lib\"\n\n\t# Convert \"-framework foo\" to \"foo.ltframework\"\n\tif test -n \"$inherited_linker_flags\"; then\n\t  tmp_inherited_linker_flags=`$ECHO \"$inherited_linker_flags\" | $SED 's/-framework \\([^ $]*\\)/\\1.ltframework/g'`\n\t  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do\n\t    case \" $new_inherited_linker_flags \" in\n\t      *\" $tmp_inherited_linker_flag \"*) ;;\n\t      *) func_append new_inherited_linker_flags \" $tmp_inherited_linker_flag\";;\n\t    esac\n\t  done\n\tfi\n\tdependency_libs=`$ECHO \" $dependency_libs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tif test lib,link = \"$linkmode,$pass\" ||\n\t   test prog,scan = \"$linkmode,$pass\" ||\n\t   { test prog != \"$linkmode\" && test lib != \"$linkmode\"; }; then\n\t  test -n \"$dlopen\" && func_append dlfiles \" $dlopen\"\n\t  test -n \"$dlpreopen\" && func_append dlprefiles \" $dlpreopen\"\n\tfi\n\n\tif test conv = \"$pass\"; then\n\t  # Only check for convenience libraries\n\t  deplibs=\"$lib $deplibs\"\n\t  if test -z \"$libdir\"; then\n\t    if test -z \"$old_library\"; then\n\t      func_fatal_error \"cannot find name of link library for '$lib'\"\n\t    fi\n\t    # It is a libtool convenience library, so add in its objects.\n\t    func_append convenience \" $ladir/$objdir/$old_library\"\n\t    func_append old_convenience \" $ladir/$objdir/$old_library\"\n\t    tmp_libs=\n\t    for deplib in $dependency_libs; do\n\t      deplibs=\"$deplib $deplibs\"\n\t      if $opt_preserve_dup_deps; then\n\t\tcase \"$tmp_libs \" in\n\t\t*\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t\tesac\n\t      fi\n\t      func_append tmp_libs \" $deplib\"\n\t    done\n\t  elif test prog != \"$linkmode\" && test lib != \"$linkmode\"; then\n\t    func_fatal_error \"'$lib' is not a convenience library\"\n\t  fi\n\t  continue\n\tfi # $pass = conv\n\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tif test -n \"$old_library\" &&\n\t   { test yes = \"$prefer_static_libs\" ||\n\t     test built,no = \"$prefer_static_libs,$installed\"; }; then\n\t  linklib=$old_library\n\telse\n\t  for l in $old_library $library_names; do\n\t    linklib=$l\n\t  done\n\tfi\n\tif test -z \"$linklib\"; then\n\t  func_fatal_error \"cannot find name of link library for '$lib'\"\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test dlopen = \"$pass\"; then\n\t  test -z \"$libdir\" \\\n\t    && func_fatal_error \"cannot -dlopen a convenience library: '$lib'\"\n\t  if test -z \"$dlname\" ||\n\t     test yes != \"$dlopen_support\" ||\n\t     test no = \"$build_libtool_libs\"\n\t  then\n\t    # If there is no dlname, no dlopen support or we're linking\n\t    # statically, we need to preload.  We also need to preload any\n\t    # dependent libraries so libltdl's deplib preloader doesn't\n\t    # bomb out in the load deplibs phase.\n\t    func_append dlprefiles \" $lib $dependency_libs\"\n\t  else\n\t    func_append newdlfiles \" $lib\"\n\t  fi\n\t  continue\n\tfi # $pass = dlopen\n\n\t# We need an absolute path.\n\tcase $ladir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs_ladir=$ladir ;;\n\t*)\n\t  abs_ladir=`cd \"$ladir\" && pwd`\n\t  if test -z \"$abs_ladir\"; then\n\t    func_warning \"cannot determine absolute directory name of '$ladir'\"\n\t    func_warning \"passing it literally to the linker, although it might fail\"\n\t    abs_ladir=$ladir\n\t  fi\n\t  ;;\n\tesac\n\tfunc_basename \"$lib\"\n\tlaname=$func_basename_result\n\n\t# Find the relevant object directory and library name.\n\tif test yes = \"$installed\"; then\n\t  if test ! -f \"$lt_sysroot$libdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    func_warning \"library '$lib' was moved.\"\n\t    dir=$ladir\n\t    absdir=$abs_ladir\n\t    libdir=$abs_ladir\n\t  else\n\t    dir=$lt_sysroot$libdir\n\t    absdir=$lt_sysroot$libdir\n\t  fi\n\t  test yes = \"$hardcode_automatic\" && avoidtemprpath=yes\n\telse\n\t  if test ! -f \"$ladir/$objdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    dir=$ladir\n\t    absdir=$abs_ladir\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  else\n\t    dir=$ladir/$objdir\n\t    absdir=$abs_ladir/$objdir\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  fi\n\tfi # $installed = yes\n\tfunc_stripname 'lib' '.la' \"$laname\"\n\tname=$func_stripname_result\n\n\t# This library was specified with -dlpreopen.\n\tif test dlpreopen = \"$pass\"; then\n\t  if test -z \"$libdir\" && test prog = \"$linkmode\"; then\n\t    func_fatal_error \"only libraries may -dlpreopen a convenience library: '$lib'\"\n\t  fi\n\t  case $host in\n\t    # special handling for platforms with PE-DLLs.\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # Linker will automatically link against shared library if both\n\t      # static and shared are present.  Therefore, ensure we extract\n\t      # symbols from the import library if a shared library is present\n\t      # (otherwise, the dlopen module name will be incorrect).  We do\n\t      # this by putting the import library name into $newdlprefiles.\n\t      # We recover the dlopen module name by 'saving' the la file\n\t      # name in a special purpose variable, and (later) extracting the\n\t      # dlname from the la file.\n\t      if test -n \"$dlname\"; then\n\t        func_tr_sh \"$dir/$linklib\"\n\t        eval \"libfile_$func_tr_sh_result=\\$abs_ladir/\\$laname\"\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      fi\n\t    ;;\n\t    * )\n\t      # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t      # are required to link).\n\t      if test -n \"$old_library\"; then\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      # Otherwise, use the dlname, so that lt_dlopen finds it.\n\t      elif test -n \"$dlname\"; then\n\t        func_append newdlprefiles \" $dir/$dlname\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      fi\n\t    ;;\n\t  esac\n\tfi # $pass = dlpreopen\n\n\tif test -z \"$libdir\"; then\n\t  # Link the convenience library\n\t  if test lib = \"$linkmode\"; then\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t  elif test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$dir/$old_library $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$old_library $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$lib $deplibs\" # used for prog,scan pass\n\t  fi\n\t  continue\n\tfi\n\n\n\tif test prog = \"$linkmode\" && test link != \"$pass\"; then\n\t  func_append newlib_search_path \" $ladir\"\n\t  deplibs=\"$lib $deplibs\"\n\n\t  linkalldeplibs=false\n\t  if test no != \"$link_all_deplibs\" || test -z \"$library_names\" ||\n\t     test no = \"$build_libtool_libs\"; then\n\t    linkalldeplibs=:\n\t  fi\n\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    case $deplib in\n\t    -L*) func_stripname '-L' '' \"$deplib\"\n\t         func_resolve_sysroot \"$func_stripname_result\"\n\t         func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t\t ;;\n\t    esac\n\t    # Need to link against all dependency_libs?\n\t    if $linkalldeplibs; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      # Need to hardcode shared library paths\n\t      # or/and link against static libraries\n\t      newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done # for deplib\n\t  continue\n\tfi # $linkmode = prog...\n\n\tif test prog,link = \"$linkmode,$pass\"; then\n\t  if test -n \"$library_names\" &&\n\t     { { test no = \"$prefer_static_libs\" ||\n\t         test built,yes = \"$prefer_static_libs,$installed\"; } ||\n\t       test -z \"$old_library\"; }; then\n\t    # We need to hardcode the library path\n\t    if test -n \"$shlibpath_var\" && test -z \"$avoidtemprpath\"; then\n\t      # Make sure the rpath contains only unique directories.\n\t      case $temp_rpath: in\n\t      *\"$absdir:\"*) ;;\n\t      *) func_append temp_rpath \"$absdir:\" ;;\n\t      esac\n\t    fi\n\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi # $linkmode,$pass = prog,link...\n\n\t  if $alldeplibs &&\n\t     { test pass_all = \"$deplibs_check_method\" ||\n\t       { test yes = \"$build_libtool_libs\" &&\n\t\t test -n \"$library_names\"; }; }; then\n\t    # We only need to search for static libraries\n\t    continue\n\t  fi\n\tfi\n\n\tlink_static=no # Whether the deplib will be linked statically\n\tuse_static_libs=$prefer_static_libs\n\tif test built = \"$use_static_libs\" && test yes = \"$installed\"; then\n\t  use_static_libs=no\n\tfi\n\tif test -n \"$library_names\" &&\n\t   { test no = \"$use_static_libs\" || test -z \"$old_library\"; }; then\n\t  case $host in\n\t  *cygwin* | *mingw* | *cegcc* | *os2*)\n\t      # No point in relinking DLLs because paths are not encoded\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=no\n\t    ;;\n\t  *)\n\t    if test no = \"$installed\"; then\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=yes\n\t    fi\n\t    ;;\n\t  esac\n\t  # This is a shared library\n\n\t  # Warn about portability, can't link against -module's on some\n\t  # systems (darwin).  Don't bleat about dlopened modules though!\n\t  dlopenmodule=\n\t  for dlpremoduletest in $dlprefiles; do\n\t    if test \"X$dlpremoduletest\" = \"X$lib\"; then\n\t      dlopenmodule=$dlpremoduletest\n\t      break\n\t    fi\n\t  done\n\t  if test -z \"$dlopenmodule\" && test yes = \"$shouldnotlink\" && test link = \"$pass\"; then\n\t    echo\n\t    if test prog = \"$linkmode\"; then\n\t      $ECHO \"*** Warning: Linking the executable $output against the loadable module\"\n\t    else\n\t      $ECHO \"*** Warning: Linking the shared library $output against the loadable module\"\n\t    fi\n\t    $ECHO \"*** $linklib is not portable!\"\n\t  fi\n\t  if test lib = \"$linkmode\" &&\n\t     test yes = \"$hardcode_into_libs\"; then\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi\n\n\t  if test -n \"$old_archive_from_expsyms_cmds\"; then\n\t    # figure out the soname\n\t    set dummy $library_names\n\t    shift\n\t    realname=$1\n\t    shift\n\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t    # use dlname if we got it. it's perfectly good, no?\n\t    if test -n \"$dlname\"; then\n\t      soname=$dlname\n\t    elif test -n \"$soname_spec\"; then\n\t      # bleh windows\n\t      case $host in\n\t      *cygwin* | mingw* | *cegcc* | *os2*)\n\t        func_arith $current - $age\n\t\tmajor=$func_arith_result\n\t\tversuffix=-$major\n\t\t;;\n\t      esac\n\t      eval soname=\\\"$soname_spec\\\"\n\t    else\n\t      soname=$realname\n\t    fi\n\n\t    # Make a new name for the extract_expsyms_cmds to use\n\t    soroot=$soname\n\t    func_basename \"$soroot\"\n\t    soname=$func_basename_result\n\t    func_stripname 'lib' '.dll' \"$soname\"\n\t    newlib=libimp-$func_stripname_result.a\n\n\t    # If the library has no export list, then create one now\n\t    if test -f \"$output_objdir/$soname-def\"; then :\n\t    else\n\t      func_verbose \"extracting exported symbol list from '$soname'\"\n\t      func_execute_cmds \"$extract_expsyms_cmds\" 'exit $?'\n\t    fi\n\n\t    # Create $newlib\n\t    if test -f \"$output_objdir/$newlib\"; then :; else\n\t      func_verbose \"generating import library for '$soname'\"\n\t      func_execute_cmds \"$old_archive_from_expsyms_cmds\" 'exit $?'\n\t    fi\n\t    # make sure the library variables are pointing to the new library\n\t    dir=$output_objdir\n\t    linklib=$newlib\n\t  fi # test -n \"$old_archive_from_expsyms_cmds\"\n\n\t  if test prog = \"$linkmode\" || test relink != \"$opt_mode\"; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    lib_linked=yes\n\t    case $hardcode_action in\n\t    immediate | unsupported)\n\t      if test no = \"$hardcode_direct\"; then\n\t\tadd=$dir/$linklib\n\t\tcase $host in\n\t\t  *-*-sco3.2v5.0.[024]*) add_dir=-L$dir ;;\n\t\t  *-*-sysv4*uw2*) add_dir=-L$dir ;;\n\t\t  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \\\n\t\t    *-*-unixware7*) add_dir=-L$dir ;;\n\t\t  *-*-darwin* )\n\t\t    # if the lib is a (non-dlopened) module then we cannot\n\t\t    # link against it, someone is ignoring the earlier warnings\n\t\t    if /usr/bin/file -L $add 2> /dev/null |\n\t\t\t $GREP \": [^:]* bundle\" >/dev/null; then\n\t\t      if test \"X$dlopenmodule\" != \"X$lib\"; then\n\t\t\t$ECHO \"*** Warning: lib $linklib is a module, not a shared library\"\n\t\t\tif test -z \"$old_library\"; then\n\t\t\t  echo\n\t\t\t  echo \"*** And there doesn't seem to be a static archive available\"\n\t\t\t  echo \"*** The link will probably fail, sorry\"\n\t\t\telse\n\t\t\t  add=$dir/$old_library\n\t\t\tfi\n\t\t      elif test -n \"$old_library\"; then\n\t\t\tadd=$dir/$old_library\n\t\t      fi\n\t\t    fi\n\t\tesac\n\t      elif test no = \"$hardcode_minus_L\"; then\n\t\tcase $host in\n\t\t*-*-sunos*) add_shlibpath=$dir ;;\n\t\tesac\n\t\tadd_dir=-L$dir\n\t\tadd=-l$name\n\t      elif test no = \"$hardcode_shlibpath_var\"; then\n\t\tadd_shlibpath=$dir\n\t\tadd=-l$name\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    relink)\n\t      if test yes = \"$hardcode_direct\" &&\n\t         test no = \"$hardcode_direct_absolute\"; then\n\t\tadd=$dir/$linklib\n\t      elif test yes = \"$hardcode_minus_L\"; then\n\t\tadd_dir=-L$absdir\n\t\t# Try looking first in the location we're being installed to.\n\t\tif test -n \"$inst_prefix_dir\"; then\n\t\t  case $libdir in\n\t\t    [\\\\/]*)\n\t\t      func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t      ;;\n\t\t  esac\n\t\tfi\n\t\tadd=-l$name\n\t      elif test yes = \"$hardcode_shlibpath_var\"; then\n\t\tadd_shlibpath=$dir\n\t\tadd=-l$name\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    *) lib_linked=no ;;\n\t    esac\n\n\t    if test yes != \"$lib_linked\"; then\n\t      func_fatal_configuration \"unsupported hardcode properties\"\n\t    fi\n\n\t    if test -n \"$add_shlibpath\"; then\n\t      case :$compile_shlibpath: in\n\t      *\":$add_shlibpath:\"*) ;;\n\t      *) func_append compile_shlibpath \"$add_shlibpath:\" ;;\n\t      esac\n\t    fi\n\t    if test prog = \"$linkmode\"; then\n\t      test -n \"$add_dir\" && compile_deplibs=\"$add_dir $compile_deplibs\"\n\t      test -n \"$add\" && compile_deplibs=\"$add $compile_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t      if test yes != \"$hardcode_direct\" &&\n\t\t test yes != \"$hardcode_minus_L\" &&\n\t\t test yes = \"$hardcode_shlibpath_var\"; then\n\t\tcase :$finalize_shlibpath: in\n\t\t*\":$libdir:\"*) ;;\n\t\t*) func_append finalize_shlibpath \"$libdir:\" ;;\n\t\tesac\n\t      fi\n\t    fi\n\t  fi\n\n\t  if test prog = \"$linkmode\" || test relink = \"$opt_mode\"; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    # Finalize command for both is simple: just hardcode it.\n\t    if test yes = \"$hardcode_direct\" &&\n\t       test no = \"$hardcode_direct_absolute\"; then\n\t      add=$libdir/$linklib\n\t    elif test yes = \"$hardcode_minus_L\"; then\n\t      add_dir=-L$libdir\n\t      add=-l$name\n\t    elif test yes = \"$hardcode_shlibpath_var\"; then\n\t      case :$finalize_shlibpath: in\n\t      *\":$libdir:\"*) ;;\n\t      *) func_append finalize_shlibpath \"$libdir:\" ;;\n\t      esac\n\t      add=-l$name\n\t    elif test yes = \"$hardcode_automatic\"; then\n\t      if test -n \"$inst_prefix_dir\" &&\n\t\t test -f \"$inst_prefix_dir$libdir/$linklib\"; then\n\t\tadd=$inst_prefix_dir$libdir/$linklib\n\t      else\n\t\tadd=$libdir/$linklib\n\t      fi\n\t    else\n\t      # We cannot seem to hardcode it, guess we'll fake it.\n\t      add_dir=-L$libdir\n\t      # Try looking first in the location we're being installed to.\n\t      if test -n \"$inst_prefix_dir\"; then\n\t\tcase $libdir in\n\t\t  [\\\\/]*)\n\t\t    func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t    ;;\n\t\tesac\n\t      fi\n\t      add=-l$name\n\t    fi\n\n\t    if test prog = \"$linkmode\"; then\n\t      test -n \"$add_dir\" && finalize_deplibs=\"$add_dir $finalize_deplibs\"\n\t      test -n \"$add\" && finalize_deplibs=\"$add $finalize_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t    fi\n\t  fi\n\telif test prog = \"$linkmode\"; then\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test unsupported != \"$hardcode_direct\"; then\n\t    test -n \"$old_library\" && linklib=$old_library\n\t    compile_deplibs=\"$dir/$linklib $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$linklib $finalize_deplibs\"\n\t  else\n\t    compile_deplibs=\"-l$name -L$dir $compile_deplibs\"\n\t    finalize_deplibs=\"-l$name -L$dir $finalize_deplibs\"\n\t  fi\n\telif test yes = \"$build_libtool_libs\"; then\n\t  # Not a shared library\n\t  if test pass_all != \"$deplibs_check_method\"; then\n\t    # We're trying link a shared library against a static one\n\t    # but the system doesn't support it.\n\n\t    # Just print a warning and add the library to dependency_libs so\n\t    # that the program can be linked against the static library.\n\t    echo\n\t    $ECHO \"*** Warning: This system cannot link to static lib archive $lib.\"\n\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t    echo \"*** shared version of the library, which you do not appear to have.\"\n\t    if test yes = \"$module\"; then\n\t      echo \"*** But as you try to build a module library, libtool will still create \"\n\t      echo \"*** a static module, that should work as long as the dlopening application\"\n\t      echo \"*** is linked with the -dlopen flag to resolve symbols at runtime.\"\n\t      if test -z \"$global_symbol_pipe\"; then\n\t\techo\n\t\techo \"*** However, this would only work if libtool was able to extract symbol\"\n\t\techo \"*** lists from a program, using 'nm' or equivalent, but libtool could\"\n\t\techo \"*** not find such a program.  So, this module is probably useless.\"\n\t\techo \"*** 'nm' from GNU binutils and a full rebuild may help.\"\n\t      fi\n\t      if test no = \"$build_old_libs\"; then\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  else\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t    link_static=yes\n\t  fi\n\tfi # link shared/static library?\n\n\tif test lib = \"$linkmode\"; then\n\t  if test -n \"$dependency_libs\" &&\n\t     { test yes != \"$hardcode_into_libs\" ||\n\t       test yes = \"$build_old_libs\" ||\n\t       test yes = \"$link_static\"; }; then\n\t    # Extract -R from dependency_libs\n\t    temp_deplibs=\n\t    for libdir in $dependency_libs; do\n\t      case $libdir in\n\t      -R*) func_stripname '-R' '' \"$libdir\"\n\t           temp_xrpath=$func_stripname_result\n\t\t   case \" $xrpath \" in\n\t\t   *\" $temp_xrpath \"*) ;;\n\t\t   *) func_append xrpath \" $temp_xrpath\";;\n\t\t   esac;;\n\t      *) func_append temp_deplibs \" $libdir\";;\n\t      esac\n\t    done\n\t    dependency_libs=$temp_deplibs\n\t  fi\n\n\t  func_append newlib_search_path \" $absdir\"\n\t  # Link against this library\n\t  test no = \"$link_static\" && newdependency_libs=\"$abs_ladir/$laname $newdependency_libs\"\n\t  # ... and its dependency_libs\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    case $deplib in\n              -L*) func_stripname '-L' '' \"$deplib\"\n                   func_resolve_sysroot \"$func_stripname_result\";;\n              *) func_resolve_sysroot \"$deplib\" ;;\n            esac\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $func_resolve_sysroot_result \"*)\n                func_append specialdeplibs \" $func_resolve_sysroot_result\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $func_resolve_sysroot_result\"\n\t  done\n\n\t  if test no != \"$link_all_deplibs\"; then\n\t    # Add the search paths of all dependency libraries\n\t    for deplib in $dependency_libs; do\n\t      path=\n\t      case $deplib in\n\t      -L*) path=$deplib ;;\n\t      *.la)\n\t        func_resolve_sysroot \"$deplib\"\n\t        deplib=$func_resolve_sysroot_result\n\t        func_dirname \"$deplib\" \"\" \".\"\n\t\tdir=$func_dirname_result\n\t\t# We need an absolute path.\n\t\tcase $dir in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) absdir=$dir ;;\n\t\t*)\n\t\t  absdir=`cd \"$dir\" && pwd`\n\t\t  if test -z \"$absdir\"; then\n\t\t    func_warning \"cannot determine absolute directory name of '$dir'\"\n\t\t    absdir=$dir\n\t\t  fi\n\t\t  ;;\n\t\tesac\n\t\tif $GREP \"^installed=no\" $deplib > /dev/null; then\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  depdepl=\n\t\t  eval deplibrary_names=`$SED -n -e 's/^library_names=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -n \"$deplibrary_names\"; then\n\t\t    for tmp in $deplibrary_names; do\n\t\t      depdepl=$tmp\n\t\t    done\n\t\t    if test -f \"$absdir/$objdir/$depdepl\"; then\n\t\t      depdepl=$absdir/$objdir/$depdepl\n\t\t      darwin_install_name=`$OTOOL -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`\n                      if test -z \"$darwin_install_name\"; then\n                          darwin_install_name=`$OTOOL64 -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`\n                      fi\n\t\t      func_append compiler_flags \" $wl-dylib_file $wl$darwin_install_name:$depdepl\"\n\t\t      func_append linker_flags \" -dylib_file $darwin_install_name:$depdepl\"\n\t\t      path=\n\t\t    fi\n\t\t  fi\n\t\t  ;;\n\t\t*)\n\t\t  path=-L$absdir/$objdir\n\t\t  ;;\n\t\tesac\n\t\telse\n\t\t  eval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\t  test -z \"$libdir\" && \\\n\t\t    func_fatal_error \"'$deplib' is not a valid libtool archive\"\n\t\t  test \"$absdir\" != \"$libdir\" && \\\n\t\t    func_warning \"'$deplib' seems to be moved\"\n\n\t\t  path=-L$absdir\n\t\tfi\n\t\t;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $path \"*) ;;\n\t      *) deplibs=\"$path $deplibs\" ;;\n\t      esac\n\t    done\n\t  fi # link_all_deplibs != no\n\tfi # linkmode = lib\n      done # for deplib in $libs\n      if test link = \"$pass\"; then\n\tif test prog = \"$linkmode\"; then\n\t  compile_deplibs=\"$new_inherited_linker_flags $compile_deplibs\"\n\t  finalize_deplibs=\"$new_inherited_linker_flags $finalize_deplibs\"\n\telse\n\t  compiler_flags=\"$compiler_flags \"`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfi\n      fi\n      dependency_libs=$newdependency_libs\n      if test dlpreopen = \"$pass\"; then\n\t# Link the dlpreopened libraries before other libraries\n\tfor deplib in $save_deplibs; do\n\t  deplibs=\"$deplib $deplibs\"\n\tdone\n      fi\n      if test dlopen != \"$pass\"; then\n\ttest conv = \"$pass\" || {\n\t  # Make sure lib_search_path contains only unique directories.\n\t  lib_search_path=\n\t  for dir in $newlib_search_path; do\n\t    case \"$lib_search_path \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append lib_search_path \" $dir\" ;;\n\t    esac\n\t  done\n\t  newlib_search_path=\n\t}\n\n\tif test prog,link = \"$linkmode,$pass\"; then\n\t  vars=\"compile_deplibs finalize_deplibs\"\n\telse\n\t  vars=deplibs\n\tfi\n\tfor var in $vars dependency_libs; do\n\t  # Add libraries to $var in reverse order\n\t  eval tmp_libs=\\\"\\$$var\\\"\n\t  new_libs=\n\t  for deplib in $tmp_libs; do\n\t    # FIXME: Pedantically, this is the right thing to do, so\n\t    #        that some nasty dependency loop isn't accidentally\n\t    #        broken:\n\t    #new_libs=\"$deplib $new_libs\"\n\t    # Pragmatically, this seems to cause very few problems in\n\t    # practice:\n\t    case $deplib in\n\t    -L*) new_libs=\"$deplib $new_libs\" ;;\n\t    -R*) ;;\n\t    *)\n\t      # And here is the reason: when a library appears more\n\t      # than once as an explicit dependence of a library, or\n\t      # is implicitly linked in more than once by the\n\t      # compiler, it is considered special, and multiple\n\t      # occurrences thereof are not removed.  Compare this\n\t      # with having the same library being listed as a\n\t      # dependency of multiple other libraries: in this case,\n\t      # we know (pedantically, we assume) the library does not\n\t      # need to be listed more than once, so we keep only the\n\t      # last copy.  This is not always right, but it is rare\n\t      # enough that we require users that really mean to play\n\t      # such unportable linking tricks to link the library\n\t      # using -Wl,-lname, so that libtool does not consider it\n\t      # for duplicate removal.\n\t      case \" $specialdeplibs \" in\n\t      *\" $deplib \"*) new_libs=\"$deplib $new_libs\" ;;\n\t      *)\n\t\tcase \" $new_libs \" in\n\t\t*\" $deplib \"*) ;;\n\t\t*) new_libs=\"$deplib $new_libs\" ;;\n\t\tesac\n\t\t;;\n\t      esac\n\t      ;;\n\t    esac\n\t  done\n\t  tmp_libs=\n\t  for deplib in $new_libs; do\n\t    case $deplib in\n\t    -L*)\n\t      case \" $tmp_libs \" in\n\t      *\" $deplib \"*) ;;\n\t      *) func_append tmp_libs \" $deplib\" ;;\n\t      esac\n\t      ;;\n\t    *) func_append tmp_libs \" $deplib\" ;;\n\t    esac\n\t  done\n\t  eval $var=\\\"$tmp_libs\\\"\n\tdone # for var\n      fi\n\n      # Add Sun CC postdeps if required:\n      test CXX = \"$tagname\" && {\n        case $host_os in\n        linux*)\n          case `$CC -V 2>&1 | sed 5q` in\n          *Sun\\ C*) # Sun C++ 5.9\n            func_suncc_cstd_abi\n\n            if test no != \"$suncc_use_cstd_abi\"; then\n              func_append postdeps ' -library=Cstd -library=Crun'\n            fi\n            ;;\n          esac\n          ;;\n\n        solaris*)\n          func_cc_basename \"$CC\"\n          case $func_cc_basename_result in\n          CC* | sunCC*)\n            func_suncc_cstd_abi\n\n            if test no != \"$suncc_use_cstd_abi\"; then\n              func_append postdeps ' -library=Cstd -library=Crun'\n            fi\n            ;;\n          esac\n          ;;\n        esac\n      }\n\n      # Last step: remove runtime libs from dependency_libs\n      # (they stay in deplibs)\n      tmp_libs=\n      for i in $dependency_libs; do\n\tcase \" $predeps $postdeps $compiler_lib_search_path \" in\n\t*\" $i \"*)\n\t  i=\n\t  ;;\n\tesac\n\tif test -n \"$i\"; then\n\t  func_append tmp_libs \" $i\"\n\tfi\n      done\n      dependency_libs=$tmp_libs\n    done # for pass\n    if test prog = \"$linkmode\"; then\n      dlfiles=$newdlfiles\n    fi\n    if test prog = \"$linkmode\" || test lib = \"$linkmode\"; then\n      dlprefiles=$newdlprefiles\n    fi\n\n    case $linkmode in\n    oldlib)\n      if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n\tfunc_warning \"'-dlopen' is ignored for archives\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"'-l' and '-L' are ignored for archives\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"'-rpath' is ignored for archives\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"'-R' is ignored for archives\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info/-version-number' is ignored for archives\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for archives\"\n\n      test -n \"$export_symbols$export_symbols_regex\" && \\\n\tfunc_warning \"'-export-symbols' is ignored for archives\"\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=$output\n      func_append objs \"$old_deplibs\"\n      ;;\n\n    lib)\n      # Make sure we only generate libraries of the form 'libNAME.la'.\n      case $outputname in\n      lib*)\n\tfunc_stripname 'lib' '.la' \"$outputname\"\n\tname=$func_stripname_result\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval libname=\\\"$libname_spec\\\"\n\t;;\n      *)\n\ttest no = \"$module\" \\\n\t  && func_fatal_help \"libtool library '$output' must begin with 'lib'\"\n\n\tif test no != \"$need_lib_prefix\"; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  func_stripname '' '.la' \"$outputname\"\n\t  name=$func_stripname_result\n\t  eval shared_ext=\\\"$shrext_cmds\\\"\n\t  eval libname=\\\"$libname_spec\\\"\n\telse\n\t  func_stripname '' '.la' \"$outputname\"\n\t  libname=$func_stripname_result\n\tfi\n\t;;\n      esac\n\n      if test -n \"$objs\"; then\n\tif test pass_all != \"$deplibs_check_method\"; then\n\t  func_fatal_error \"cannot build libtool library '$output' from non-libtool objects on this host:$objs\"\n\telse\n\t  echo\n\t  $ECHO \"*** Warning: Linking the shared library $output against the non-libtool\"\n\t  $ECHO \"*** objects $objs is not portable!\"\n\t  func_append libobjs \" $objs\"\n\tfi\n      fi\n\n      test no = \"$dlself\" \\\n\t|| func_warning \"'-dlopen self' is ignored for libtool libraries\"\n\n      set dummy $rpath\n      shift\n      test 1 -lt \"$#\" \\\n\t&& func_warning \"ignoring multiple '-rpath's for a libtool library\"\n\n      install_libdir=$1\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test yes = \"$build_libtool_libs\"; then\n\t  # Building a libtool convenience library.\n\t  # Some compilers have problems with a '.al' extension so\n\t  # convenience libraries should have the same extension an\n\t  # archive normally would.\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\n\ttest -n \"$vinfo\" && \\\n\t  func_warning \"'-version-info/-version-number' is ignored for convenience libraries\"\n\n\ttest -n \"$release\" && \\\n\t  func_warning \"'-release' is ignored for convenience libraries\"\n      else\n\n\t# Parse the version information argument.\n\tsave_ifs=$IFS; IFS=:\n\tset dummy $vinfo 0 0 0\n\tshift\n\tIFS=$save_ifs\n\n\ttest -n \"$7\" && \\\n\t  func_fatal_help \"too many parameters to '-version-info'\"\n\n\t# convert absolute version numbers to libtool ages\n\t# this retains compatibility with .la files and attempts\n\t# to make the code below a bit more comprehensible\n\n\tcase $vinfo_number in\n\tyes)\n\t  number_major=$1\n\t  number_minor=$2\n\t  number_revision=$3\n\t  #\n\t  # There are really only two kinds -- those that\n\t  # use the current revision as the major version\n\t  # and those that subtract age and use age as\n\t  # a minor version.  But, then there is irix\n\t  # that has an extra 1 added just for fun\n\t  #\n\t  case $version_type in\n\t  # correct linux to gnu/linux during the next big refactor\n\t  darwin|freebsd-elf|linux|osf|windows|none)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=$number_minor\n\t    revision=$number_revision\n\t    ;;\n\t  freebsd-aout|qnx|sunos)\n\t    current=$number_major\n\t    revision=$number_minor\n\t    age=0\n\t    ;;\n\t  irix|nonstopux)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=$number_minor\n\t    revision=$number_minor\n\t    lt_irix_increment=no\n\t    ;;\n\t  *)\n\t    func_fatal_configuration \"$modename: unknown library version type '$version_type'\"\n\t    ;;\n\t  esac\n\t  ;;\n\tno)\n\t  current=$1\n\t  revision=$2\n\t  age=$3\n\t  ;;\n\tesac\n\n\t# Check that each of the things are valid numbers.\n\tcase $current in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"CURRENT '$current' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $revision in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"REVISION '$revision' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $age in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"AGE '$age' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tif test \"$age\" -gt \"$current\"; then\n\t  func_error \"AGE '$age' is greater than the current interface number '$current'\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase $version_type in\n\tnone) ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  # Darwin ld doesn't like 0 for these options...\n\t  func_arith $current + 1\n\t  minor_current=$func_arith_result\n\t  xlcverstring=\"$wl-compatibility_version $wl$minor_current $wl-current_version $wl$minor_current.$revision\"\n\t  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n          # On Darwin other compilers\n          case $CC in\n              nagfor*)\n                  verstring=\"$wl-compatibility_version $wl$minor_current $wl-current_version $wl$minor_current.$revision\"\n                  ;;\n              *)\n                  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n                  ;;\n          esac\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=.$current\n\t  versuffix=.$current.$revision\n\t  ;;\n\n\tfreebsd-elf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  ;;\n\n\tirix | nonstopux)\n\t  if test no = \"$lt_irix_increment\"; then\n\t    func_arith $current - $age\n\t  else\n\t    func_arith $current - $age + 1\n\t  fi\n\t  major=$func_arith_result\n\n\t  case $version_type in\n\t    nonstopux) verstring_prefix=nonstopux ;;\n\t    *)         verstring_prefix=sgi ;;\n\t  esac\n\t  verstring=$verstring_prefix$major.$revision\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test 0 -ne \"$loop\"; do\n\t    func_arith $revision - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=$verstring_prefix$major.$iface:$verstring\n\t  done\n\n\t  # Before this point, $major must not contain '.'.\n\t  major=.$major\n\t  versuffix=$major.$revision\n\t  ;;\n\n\tlinux) # correct to gnu/linux during the next big refactor\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  ;;\n\n\tosf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=.$current.$age.$revision\n\t  verstring=$current.$age.$revision\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test 0 -ne \"$loop\"; do\n\t    func_arith $current - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=$verstring:$iface.0\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  func_append verstring \":$current.0\"\n\t  ;;\n\n\tqnx)\n\t  major=.$current\n\t  versuffix=.$current\n\t  ;;\n\n\tsco)\n\t  major=.$current\n\t  versuffix=.$current\n\t  ;;\n\n\tsunos)\n\t  major=.$current\n\t  versuffix=.$current.$revision\n\t  ;;\n\n\twindows)\n\t  # Use '-' rather than '.', since we only want one\n\t  # extension on DOS 8.3 file systems.\n\t  func_arith $current - $age\n\t  major=$func_arith_result\n\t  versuffix=-$major\n\t  ;;\n\n\t*)\n\t  func_fatal_configuration \"unknown library version type '$version_type'\"\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  case $version_type in\n\t  darwin)\n\t    # we can't check for \"0.0\" in archive_cmds due to quoting\n\t    # problems, so we reset it completely\n\t    verstring=\n\t    ;;\n\t  *)\n\t    verstring=0.0\n\t    ;;\n\t  esac\n\t  if test no = \"$need_version\"; then\n\t    versuffix=\n\t  else\n\t    versuffix=.0.0\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test yes,no = \"$avoid_version,$need_version\"; then\n\t  major=\n\t  versuffix=\n\t  verstring=\n\tfi\n\n\t# Check to see if the archive will have undefined symbols.\n\tif test yes = \"$allow_undefined\"; then\n\t  if test unsupported = \"$allow_undefined_flag\"; then\n\t    if test yes = \"$build_old_libs\"; then\n\t      func_warning \"undefined symbols not allowed in $host shared libraries; building static only\"\n\t      build_libtool_libs=no\n\t    else\n\t      func_fatal_error \"can't build $host shared library unless -no-undefined is specified\"\n\t    fi\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=$no_undefined_flag\n\tfi\n\n      fi\n\n      func_generate_dlsyms \"$libname\" \"$libname\" :\n      func_append libobjs \" $symfileobj\"\n      test \" \" = \"$libobjs\" && libobjs=\n\n      if test relink != \"$opt_mode\"; then\n\t# Remove our outputs, but don't remove object files since they\n\t# may have been created when compiling PIC objects.\n\tremovelist=\n\ttempremovelist=`$ECHO \"$output_objdir/*\"`\n\tfor p in $tempremovelist; do\n\t  case $p in\n\t    *.$objext | *.gcno)\n\t       ;;\n\t    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/$libname$release.*)\n\t       if test -n \"$precious_files_regex\"; then\n\t\t if $ECHO \"$p\" | $EGREP -e \"$precious_files_regex\" >/dev/null 2>&1\n\t\t then\n\t\t   continue\n\t\t fi\n\t       fi\n\t       func_append removelist \" $p\"\n\t       ;;\n\t    *) ;;\n\t  esac\n\tdone\n\ttest -n \"$removelist\" && \\\n\t  func_show_eval \"${RM}r \\$removelist\"\n      fi\n\n      # Now set the variables for building old libraries.\n      if test yes = \"$build_old_libs\" && test convenience != \"$build_libtool_libs\"; then\n\tfunc_append oldlibs \" $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.$libext$/d; $lo2o\" | $NL2SP`\n      fi\n\n      # Eliminate all temporary directories.\n      #for path in $notinst_path; do\n      #\tlib_search_path=`$ECHO \"$lib_search_path \" | $SED \"s% $path % %g\"`\n      #\tdeplibs=`$ECHO \"$deplibs \" | $SED \"s% -L$path % %g\"`\n      #\tdependency_libs=`$ECHO \"$dependency_libs \" | $SED \"s% -L$path % %g\"`\n      #done\n\n      if test -n \"$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  func_replace_sysroot \"$libdir\"\n\t  func_append temp_xrpath \" -R$func_replace_sysroot_result\"\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n\tif test yes != \"$hardcode_into_libs\" || test yes = \"$build_old_libs\"; then\n\t  dependency_libs=\"$temp_xrpath $dependency_libs\"\n\tfi\n      fi\n\n      # Make sure dlfiles contains only unique files that won't be dlpreopened\n      old_dlfiles=$dlfiles\n      dlfiles=\n      for lib in $old_dlfiles; do\n\tcase \" $dlprefiles $dlfiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlfiles \" $lib\" ;;\n\tesac\n      done\n\n      # Make sure dlprefiles contains only unique files\n      old_dlprefiles=$dlprefiles\n      dlprefiles=\n      for lib in $old_dlprefiles; do\n\tcase \"$dlprefiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlprefiles \" $lib\" ;;\n\tesac\n      done\n\n      if test yes = \"$build_libtool_libs\"; then\n\tif test -n \"$rpath\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # these systems don't actually have a c library (as such)!\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    ;;\n\t  *-*-netbsd*)\n\t    # Don't link with libc until the a.out ld.so is fixed.\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    ;;\n\t  *)\n\t    # Add libc to deplibs on all other systems if necessary.\n\t    if test yes = \"$build_libtool_need_lc\"; then\n\t      func_append deplibs \" -lc\"\n\t    fi\n\t    ;;\n\t  esac\n\tfi\n\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\n\tversuffix=\n\tmajor=\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase $deplibs_check_method in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behavior.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $opt_dry_run || $RM conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $opt_dry_run || $RM conftest\n\t  if $LTCC $LTCFLAGS -o conftest conftest.c $deplibs; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\tif test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\t  case \" $predeps $postdeps \" in\n\t\t  *\" $i \"*)\n\t\t    func_append newdeplibs \" $i\"\n\t\t    i=\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t\tif test -n \"$i\"; then\n\t\t  libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t  deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t  set dummy $deplib_matches; shift\n\t\t  deplib_match=$1\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0; then\n\t\t    func_append newdeplibs \" $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    echo\n\t\t    $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    echo \"*** shared version of the library, which I believe you do not have\"\n\t\t    echo \"*** because a test_compile did reveal that the linker did not use it for\"\n\t\t    echo \"*** its dynamic dependency list that programs get resolved with at runtime.\"\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  else\n\t    # Error occurred in the first compile.  Let's try to salvage\n\t    # the situation: Compile a separate program for each library.\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\t$opt_dry_run || $RM conftest\n\t\tif $LTCC $LTCFLAGS -o conftest conftest.c $i; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\t    case \" $predeps $postdeps \" in\n\t\t    *\" $i \"*)\n\t\t      func_append newdeplibs \" $i\"\n\t\t      i=\n\t\t      ;;\n\t\t    esac\n\t\t  fi\n\t\t  if test -n \"$i\"; then\n\t\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t    deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t    set dummy $deplib_matches; shift\n\t\t    deplib_match=$1\n\t\t    if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0; then\n\t\t      func_append newdeplibs \" $i\"\n\t\t    else\n\t\t      droppeddeps=yes\n\t\t      echo\n\t\t      $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t      echo \"*** I have the capability to make that library automatically link in when\"\n\t\t      echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t      echo \"*** shared version of the library, which you do not appear to have\"\n\t\t      echo \"*** because a test_compile did reveal that the linker did not use this one\"\n\t\t      echo \"*** as a dynamic dependency that programs can get resolved with at runtime.\"\n\t\t    fi\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  $ECHO \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  echo \"*** make it link in!  You will probably need to install it or some\"\n\t\t  echo \"*** library that it depends on before this library will be fully\"\n\t\t  echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method; shift\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tif test -n \"$file_magic_glob\"; then\n\t\t  libnameglob=`func_echo_all \"$libname\" | $SED -e $file_magic_glob`\n\t\telse\n\t\t  libnameglob=$libname\n\t\tfi\n\t\ttest yes = \"$want_nocaseglob\" && nocaseglob=`shopt -p nocaseglob`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  if test yes = \"$want_nocaseglob\"; then\n\t\t    shopt -s nocaseglob\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t    $nocaseglob\n\t\t  else\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t  fi\n\t\t  for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null |\n\t\t\t $GREP \" -> \" >/dev/null; then\n\t\t\tcontinue\n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=$potent_lib\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | $SED 's/.* -> //'`\n\t\t\tcase $potliblink in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=$potliblink;;\n\t\t\t*) potlib=`$ECHO \"$potlib\" | $SED 's|[^/]*$||'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval $file_magic_cmd \\\"\\$potlib\\\" 2>/dev/null |\n\t\t\t $SED -e 10q |\n\t\t\t $EGREP \"$file_magic_regex\" > /dev/null; then\n\t\t\tfunc_append newdeplibs \" $a_deplib\"\n\t\t\ta_deplib=\n\t\t\tbreak 2\n\t\t      fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\"; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for file magic test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a file magic. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tmatch_pattern*)\n\t  set dummy $deplibs_check_method; shift\n\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t    potlib=$potent_lib # see symlink-check above in file_magic test\n\t\t    if eval \"\\$ECHO \\\"$potent_lib\\\"\" 2>/dev/null | $SED 10q | \\\n\t\t       $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t      func_append newdeplibs \" $a_deplib\"\n\t\t      a_deplib=\n\t\t      break 2\n\t\t    fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\"; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for regex pattern test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a regex pattern. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\n\t  tmp_deplibs=`$ECHO \" $deplibs\" | $SED 's/ -lc$//; s/ -[LR][^ ]*//g'`\n\t  if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t    for i in $predeps $postdeps; do\n\t      # can't use Xsed below, because $i might contain '/'\n\t      tmp_deplibs=`$ECHO \" $tmp_deplibs\" | $SED \"s|$i||\"`\n\t    done\n\t  fi\n\t  case $tmp_deplibs in\n\t  *[!\\\t\\ ]*)\n\t    echo\n\t    if test none = \"$deplibs_check_method\"; then\n\t      echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tcase $host in\n\t*-*-rhapsody* | *-*-darwin1.[012])\n\t  # On Rhapsody replace the C library with the System framework\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t  ;;\n\tesac\n\n\tif test yes = \"$droppeddeps\"; then\n\t  if test yes = \"$module\"; then\n\t    echo\n\t    echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    $ECHO \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    echo \"*** a static module, that should work as long as the dlopening\"\n\t    echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      echo\n\t      echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      echo \"*** lists from a program, using 'nm' or equivalent, but libtool could\"\n\t      echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      echo \"*** 'nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test no = \"$build_old_libs\"; then\n\t      oldlibs=$output_objdir/$libname.$libext\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    echo \"*** automatically added whenever a program is linked with this library\"\n\t    echo \"*** or is declared to -dlopen it.\"\n\n\t    if test no = \"$allow_undefined\"; then\n\t      echo\n\t      echo \"*** Since this library must not contain undefined symbols,\"\n\t      echo \"*** because either the platform does not support them or\"\n\t      echo \"*** it was explicitly requested with -no-undefined,\"\n\t      echo \"*** libtool will only create a static version of it.\"\n\t      if test no = \"$build_old_libs\"; then\n\t\toldlibs=$output_objdir/$libname.$libext\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n      # Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n      case $host in\n\t*-*-darwin*)\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  new_inherited_linker_flags=`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  deplibs=`$ECHO \" $deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  ;;\n      esac\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      deplibs=$new_libs\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n\n      # Test again, we may have decided not to build it any more\n      if test yes = \"$build_libtool_libs\"; then\n\t# Remove $wl instances when linking with ld.\n\t# FIXME: should test the right _cmds variable.\n\tcase $archive_cmds in\n\t  *\\$LD\\ *) wl= ;;\n        esac\n\tif test yes = \"$hardcode_into_libs\"; then\n\t  # Hardcode the library paths\n\t  hardcode_libdirs=\n\t  dep_rpath=\n\t  rpath=$finalize_rpath\n\t  test relink = \"$opt_mode\" || rpath=$compile_rpath$rpath\n\t  for libdir in $rpath; do\n\t    if test -n \"$hardcode_libdir_flag_spec\"; then\n\t      if test -n \"$hardcode_libdir_separator\"; then\n\t\tfunc_replace_sysroot \"$libdir\"\n\t\tlibdir=$func_replace_sysroot_result\n\t\tif test -z \"$hardcode_libdirs\"; then\n\t\t  hardcode_libdirs=$libdir\n\t\telse\n\t\t  # Just accumulate the unique libdirs.\n\t\t  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t\t  *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t    ;;\n\t\t  *)\n\t\t    func_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t      else\n\t\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t\tfunc_append dep_rpath \" $flag\"\n\t      fi\n\t    elif test -n \"$runpath_var\"; then\n\t      case \"$perm_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append perm_rpath \" $libdir\" ;;\n\t      esac\n\t    fi\n\t  done\n\t  # Substitute the hardcoded libdirs into the rpath.\n\t  if test -n \"$hardcode_libdir_separator\" &&\n\t     test -n \"$hardcode_libdirs\"; then\n\t    libdir=$hardcode_libdirs\n\t    eval \"dep_rpath=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t  fi\n\t  if test -n \"$runpath_var\" && test -n \"$perm_rpath\"; then\n\t    # We should set the runpath_var.\n\t    rpath=\n\t    for dir in $perm_rpath; do\n\t      func_append rpath \"$dir:\"\n\t    done\n\t    eval \"$runpath_var='$rpath\\$$runpath_var'; export $runpath_var\"\n\t  fi\n\t  test -n \"$dep_rpath\" && deplibs=\"$dep_rpath $deplibs\"\n\tfi\n\n\tshlibpath=$finalize_shlibpath\n\ttest relink = \"$opt_mode\" || shlibpath=$compile_shlibpath$shlibpath\n\tif test -n \"$shlibpath\"; then\n\t  eval \"$shlibpath_var='$shlibpath\\$$shlibpath_var'; export $shlibpath_var\"\n\tfi\n\n\t# Get the real and link names of the library.\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval library_names=\\\"$library_names_spec\\\"\n\tset dummy $library_names\n\tshift\n\trealname=$1\n\tshift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval soname=\\\"$soname_spec\\\"\n\telse\n\t  soname=$realname\n\tfi\n\tif test -z \"$dlname\"; then\n\t  dlname=$soname\n\tfi\n\n\tlib=$output_objdir/$realname\n\tlinknames=\n\tfor link\n\tdo\n\t  func_append linknames \" $link\"\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$ECHO \"$libobjs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\ttest \"X$libobjs\" = \"X \" && libobjs=\n\n\tdelfiles=\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $opt_dry_run || cp \"$export_symbols\" \"$output_objdir/$libname.uexp\"\n\t  export_symbols=$output_objdir/$libname.uexp\n\t  func_append delfiles \" $export_symbols\"\n\tfi\n\n\torig_export_symbols=\n\tcase $host_os in\n\tcygwin* | mingw* | cegcc*)\n\t  if test -n \"$export_symbols\" && test -z \"$export_symbols_regex\"; then\n\t    # exporting using user supplied symfile\n\t    func_dll_def_p \"$export_symbols\" || {\n\t      # and it's NOT already a .def file. Must figure out\n\t      # which of the given symbols are data symbols and tag\n\t      # them as such. So, trigger use of export_symbols_cmds.\n\t      # export_symbols gets reassigned inside the \"prepare\n\t      # the list of exported symbols\" if statement, so the\n\t      # include_expsyms logic still works.\n\t      orig_export_symbols=$export_symbols\n\t      export_symbols=\n\t      always_export_symbols=yes\n\t    }\n\t  fi\n\t  ;;\n\tesac\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test yes = \"$always_export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t    func_verbose \"generating symbol list for '$libname.la'\"\n\t    export_symbols=$output_objdir/$libname.exp\n\t    $opt_dry_run || $RM $export_symbols\n\t    cmds=$export_symbols_cmds\n\t    save_ifs=$IFS; IFS='~'\n\t    for cmd1 in $cmds; do\n\t      IFS=$save_ifs\n\t      # Take the normal branch if the nm_file_list_spec branch\n\t      # doesn't work or if tool conversion is not needed.\n\t      case $nm_file_list_spec~$to_tool_file_cmd in\n\t\t*~func_convert_file_noop | *~func_convert_file_msys_to_w32 | ~*)\n\t\t  try_normal_branch=yes\n\t\t  eval cmd=\\\"$cmd1\\\"\n\t\t  func_len \" $cmd\"\n\t\t  len=$func_len_result\n\t\t  ;;\n\t\t*)\n\t\t  try_normal_branch=no\n\t\t  ;;\n\t      esac\n\t      if test yes = \"$try_normal_branch\" \\\n\t\t && { test \"$len\" -lt \"$max_cmd_len\" \\\n\t\t      || test \"$max_cmd_len\" -le -1; }\n\t      then\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\tskipped_export=false\n\t      elif test -n \"$nm_file_list_spec\"; then\n\t\tfunc_basename \"$output\"\n\t\toutput_la=$func_basename_result\n\t\tsave_libobjs=$libobjs\n\t\tsave_output=$output\n\t\toutput=$output_objdir/$output_la.nm\n\t\tfunc_to_tool_file \"$output\"\n\t\tlibobjs=$nm_file_list_spec$func_to_tool_file_result\n\t\tfunc_append delfiles \" $output\"\n\t\tfunc_verbose \"creating $NM input file list: $output\"\n\t\tfor obj in $save_libobjs; do\n\t\t  func_to_tool_file \"$obj\"\n\t\t  $ECHO \"$func_to_tool_file_result\"\n\t\tdone > \"$output\"\n\t\teval cmd=\\\"$cmd1\\\"\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\toutput=$save_output\n\t\tlibobjs=$save_libobjs\n\t\tskipped_export=false\n\t      else\n\t\t# The command line is too long to execute in one step.\n\t\tfunc_verbose \"using reloadable object file for export list...\"\n\t\tskipped_export=:\n\t\t# Break out early, otherwise skipped_export may be\n\t\t# set to false by a later but shorter cmd.\n\t\tbreak\n\t      fi\n\t    done\n\t    IFS=$save_ifs\n\t    if test -n \"$export_symbols_regex\" && test : != \"$skipped_export\"; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  tmp_export_symbols=$export_symbols\n\t  test -n \"$orig_export_symbols\" && tmp_export_symbols=$orig_export_symbols\n\t  $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\tfi\n\n\tif test : != \"$skipped_export\" && test -n \"$orig_export_symbols\"; then\n\t  # The given exports_symbols file has to be filtered, so filter it.\n\t  func_verbose \"filter symbol list for '$libname.la' to tag DATA exports\"\n\t  # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t  # 's' commands, which not all seds can handle. GNU sed should be fine\n\t  # though. Also, the filter scales superlinearly with the number of\n\t  # global variables. join(1) would be nice here, but unfortunately\n\t  # isn't a blessed tool.\n\t  $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t  func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t  export_symbols=$output_objdir/$libname.def\n\t  $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\tfi\n\n\ttmp_deplibs=\n\tfor test_deplib in $deplibs; do\n\t  case \" $convenience \" in\n\t  *\" $test_deplib \"*) ;;\n\t  *)\n\t    func_append tmp_deplibs \" $test_deplib\"\n\t    ;;\n\t  esac\n\tdone\n\tdeplibs=$tmp_deplibs\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\" &&\n\t    test yes = \"$compiler_needs_object\" &&\n\t    test -z \"$libobjs\"; then\n\t    # extract the archives, so we have objects to list.\n\t    # TODO: could optimize this to just extract one archive.\n\t    whole_archive_flag_spec=\n\t  fi\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  else\n\t    gentop=$output_objdir/${outputname}x\n\t    func_append generated \" $gentop\"\n\n\t    func_extract_archives $gentop $convenience\n\t    func_append libobjs \" $func_extract_archives_result\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\tfi\n\n\tif test yes = \"$thread_safe\" && test -n \"$thread_safe_flag_spec\"; then\n\t  eval flag=\\\"$thread_safe_flag_spec\\\"\n\t  func_append linker_flags \" $flag\"\n\tfi\n\n\t# Make a backup of the uninstalled library when relinking\n\tif test relink = \"$opt_mode\"; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}U && $MV $realname ${realname}U)' || exit $?\n\tfi\n\n\t# Do each of the archive commands.\n\tif test yes = \"$module\" && test -n \"$module_cmds\"; then\n\t  if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$module_expsym_cmds\\\"\n\t    cmds=$module_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$module_cmds\\\"\n\t    cmds=$module_cmds\n\t  fi\n\telse\n\t  if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$archive_expsym_cmds\\\"\n\t    cmds=$archive_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$archive_cmds\\\"\n\t    cmds=$archive_cmds\n\t  fi\n\tfi\n\n\tif test : != \"$skipped_export\" &&\n\t   func_len \" $test_cmds\" &&\n\t   len=$func_len_result &&\n\t   test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  :\n\telse\n\t  # The command line is too long to link in one step, link piecewise\n\t  # or, if using GNU ld and skipped_export is not :, use a linker\n\t  # script.\n\n\t  # Save the value of $output and $libobjs because we want to\n\t  # use them later.  If we have whole_archive_flag_spec, we\n\t  # want to use save_libobjs as it was before\n\t  # whole_archive_flag_spec was expanded, because we can't\n\t  # assume the linker understands whole_archive_flag_spec.\n\t  # This may have to be revisited, in case too many\n\t  # convenience libraries get linked in and end up exceeding\n\t  # the spec.\n\t  if test -z \"$convenience\" || test -z \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t  fi\n\t  save_output=$output\n\t  func_basename \"$output\"\n\t  output_la=$func_basename_result\n\n\t  # Clear the reloadable object creation command queue and\n\t  # initialize k to one.\n\t  test_cmds=\n\t  concat_cmds=\n\t  objlist=\n\t  last_robj=\n\t  k=1\n\n\t  if test -n \"$save_libobjs\" && test : != \"$skipped_export\" && test yes = \"$with_gnu_ld\"; then\n\t    output=$output_objdir/$output_la.lnkscript\n\t    func_verbose \"creating GNU ld script: $output\"\n\t    echo 'INPUT (' > $output\n\t    for obj in $save_libobjs\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    echo ')' >> $output\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$func_to_tool_file_result\n\t  elif test -n \"$save_libobjs\" && test : != \"$skipped_export\" && test -n \"$file_list_spec\"; then\n\t    output=$output_objdir/$output_la.lnk\n\t    func_verbose \"creating linker input file list: $output\"\n\t    : > $output\n\t    set x $save_libobjs\n\t    shift\n\t    firstobj=\n\t    if test yes = \"$compiler_needs_object\"; then\n\t      firstobj=\"$1 \"\n\t      shift\n\t    fi\n\t    for obj\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$firstobj\\\"$file_list_spec$func_to_tool_file_result\\\"\n\t  else\n\t    if test -n \"$save_libobjs\"; then\n\t      func_verbose \"creating reloadable object files...\"\n\t      output=$output_objdir/$output_la-$k.$objext\n\t      eval test_cmds=\\\"$reload_cmds\\\"\n\t      func_len \" $test_cmds\"\n\t      len0=$func_len_result\n\t      len=$len0\n\n\t      # Loop over the list of objects to be linked.\n\t      for obj in $save_libobjs\n\t      do\n\t\tfunc_len \" $obj\"\n\t\tfunc_arith $len + $func_len_result\n\t\tlen=$func_arith_result\n\t\tif test -z \"$objlist\" ||\n\t\t   test \"$len\" -lt \"$max_cmd_len\"; then\n\t\t  func_append objlist \" $obj\"\n\t\telse\n\t\t  # The command $test_cmds is almost too long, add a\n\t\t  # command to the queue.\n\t\t  if test 1 -eq \"$k\"; then\n\t\t    # The first file doesn't have a previous command to add.\n\t\t    reload_objs=$objlist\n\t\t    eval concat_cmds=\\\"$reload_cmds\\\"\n\t\t  else\n\t\t    # All subsequent reloadable object files will link in\n\t\t    # the last one created.\n\t\t    reload_objs=\"$objlist $last_robj\"\n\t\t    eval concat_cmds=\\\"\\$concat_cmds~$reload_cmds~\\$RM $last_robj\\\"\n\t\t  fi\n\t\t  last_robj=$output_objdir/$output_la-$k.$objext\n\t\t  func_arith $k + 1\n\t\t  k=$func_arith_result\n\t\t  output=$output_objdir/$output_la-$k.$objext\n\t\t  objlist=\" $obj\"\n\t\t  func_len \" $last_robj\"\n\t\t  func_arith $len0 + $func_len_result\n\t\t  len=$func_arith_result\n\t\tfi\n\t      done\n\t      # Handle the remaining objects by creating one last\n\t      # reloadable object file.  All subsequent reloadable object\n\t      # files will link in the last one created.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      reload_objs=\"$objlist $last_robj\"\n\t      eval concat_cmds=\\\"\\$concat_cmds$reload_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t        eval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t      func_append delfiles \" $output\"\n\n\t    else\n\t      output=\n\t    fi\n\n\t    ${skipped_export-false} && {\n\t      func_verbose \"generating symbol list for '$libname.la'\"\n\t      export_symbols=$output_objdir/$libname.exp\n\t      $opt_dry_run || $RM $export_symbols\n\t      libobjs=$output\n\t      # Append the command to create the export file.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$export_symbols_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t\teval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t    }\n\n\t    test -n \"$save_libobjs\" &&\n\t      func_verbose \"creating a temporary reloadable object file: $output\"\n\n\t    # Loop through the commands generated above and execute them.\n\t    save_ifs=$IFS; IFS='~'\n\t    for cmd in $concat_cmds; do\n\t      IFS=$save_ifs\n\t      $opt_quiet || {\n\t\t  func_quote_for_expand \"$cmd\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t      }\n\t      $opt_dry_run || eval \"$cmd\" || {\n\t\tlt_exit=$?\n\n\t\t# Restore the uninstalled library and exit\n\t\tif test relink = \"$opt_mode\"; then\n\t\t  ( cd \"$output_objdir\" && \\\n\t\t    $RM \"${realname}T\" && \\\n\t\t    $MV \"${realname}U\" \"$realname\" )\n\t\tfi\n\n\t\texit $lt_exit\n\t      }\n\t    done\n\t    IFS=$save_ifs\n\n\t    if test -n \"$export_symbols_regex\" && ${skipped_export-false}; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\n          ${skipped_export-false} && {\n\t    if test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t      tmp_export_symbols=$export_symbols\n\t      test -n \"$orig_export_symbols\" && tmp_export_symbols=$orig_export_symbols\n\t      $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\t    fi\n\n\t    if test -n \"$orig_export_symbols\"; then\n\t      # The given exports_symbols file has to be filtered, so filter it.\n\t      func_verbose \"filter symbol list for '$libname.la' to tag DATA exports\"\n\t      # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t      # 's' commands, which not all seds can handle. GNU sed should be fine\n\t      # though. Also, the filter scales superlinearly with the number of\n\t      # global variables. join(1) would be nice here, but unfortunately\n\t      # isn't a blessed tool.\n\t      $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t      func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t      export_symbols=$output_objdir/$libname.def\n\t      $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\t    fi\n\t  }\n\n\t  libobjs=$output\n\t  # Restore the value of output.\n\t  output=$save_output\n\n\t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\t  # Expand the library linking commands again to reset the\n\t  # value of $libobjs for piecewise linking.\n\n\t  # Do each of the archive commands.\n\t  if test yes = \"$module\" && test -n \"$module_cmds\"; then\n\t    if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t      cmds=$module_expsym_cmds\n\t    else\n\t      cmds=$module_cmds\n\t    fi\n\t  else\n\t    if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t      cmds=$archive_expsym_cmds\n\t    else\n\t      cmds=$archive_cmds\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$delfiles\"; then\n\t  # Append the command to remove temporary files to $cmds.\n\t  eval cmds=\\\"\\$cmds~\\$RM $delfiles\\\"\n\tfi\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append libobjs \" $func_extract_archives_result\"\n\t  test \"X$libobjs\" = \"X \" && libobjs=\n\tfi\n\n\tsave_ifs=$IFS; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=$sp$nl\n\t  eval cmd=\\\"$cmd\\\"\n\t  IFS=$save_ifs\n\t  $opt_quiet || {\n\t    func_quote_for_expand \"$cmd\"\n\t    eval \"func_echo $func_quote_for_expand_result\"\n\t  }\n\t  $opt_dry_run || eval \"$cmd\" || {\n\t    lt_exit=$?\n\n\t    # Restore the uninstalled library and exit\n\t    if test relink = \"$opt_mode\"; then\n\t      ( cd \"$output_objdir\" && \\\n\t        $RM \"${realname}T\" && \\\n\t\t$MV \"${realname}U\" \"$realname\" )\n\t    fi\n\n\t    exit $lt_exit\n\t  }\n\tdone\n\tIFS=$save_ifs\n\n\t# Restore the uninstalled library and exit\n\tif test relink = \"$opt_mode\"; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}T && $MV $realname ${realname}T && $MV ${realname}U $realname)' || exit $?\n\n\t  if test -n \"$convenience\"; then\n\t    if test -z \"$whole_archive_flag_spec\"; then\n\t      func_show_eval '${RM}r \"$gentop\"'\n\t    fi\n\t  fi\n\n\t  exit $EXIT_SUCCESS\n\tfi\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    func_show_eval '(cd \"$output_objdir\" && $RM \"$linkname\" && $LN_S \"$realname\" \"$linkname\")' 'exit $?'\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test yes = \"$module\" || test yes = \"$export_dynamic\"; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=$soname\n\tfi\n      fi\n      ;;\n\n    obj)\n      if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n\tfunc_warning \"'-dlopen' is ignored for objects\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"'-l' and '-L' are ignored for objects\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"'-rpath' is ignored for objects\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"'-R' is ignored for objects\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info' is ignored for objects\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for objects\"\n\n      case $output in\n      *.lo)\n\ttest -n \"$objs$old_deplibs\" && \\\n\t  func_fatal_error \"cannot build library object '$output' from non-libtool objects\"\n\n\tlibobj=$output\n\tfunc_lo2o \"$libobj\"\n\tobj=$func_lo2o_result\n\t;;\n      *)\n\tlibobj=\n\tobj=$output\n\t;;\n      esac\n\n      # Delete the old objects.\n      $opt_dry_run || $RM $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # if reload_cmds runs $LD directly, get rid of -Wl from\n      # whole_archive_flag_spec and hope we can get by with turning comma\n      # into space.\n      case $reload_cmds in\n        *\\$LD[\\ \\$]*) wl= ;;\n      esac\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval tmp_whole_archive_flags=\\\"$whole_archive_flag_spec\\\"\n\t  test -n \"$wl\" || tmp_whole_archive_flags=`$ECHO \"$tmp_whole_archive_flags\" | $SED 's|,| |g'`\n\t  reload_conv_objs=$reload_objs\\ $tmp_whole_archive_flags\n\telse\n\t  gentop=$output_objdir/${obj}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $convenience\n\t  reload_conv_objs=\"$reload_objs $func_extract_archives_result\"\n\tfi\n      fi\n\n      # If we're not building shared, we need to use non_pic_objs\n      test yes = \"$build_libtool_libs\" || libobjs=$non_pic_objects\n\n      # Create the old-style object.\n      reload_objs=$objs$old_deplibs' '`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.$libext$/d; /\\.lib$/d; $lo2o\" | $NL2SP`' '$reload_conv_objs\n\n      output=$obj\n      func_execute_cmds \"$reload_cmds\" 'exit $?'\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      test yes = \"$build_libtool_libs\" || {\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t# $show \"echo timestamp > $libobj\"\n\t# $opt_dry_run || eval \"echo timestamp > $libobj\" || exit $?\n\texit $EXIT_SUCCESS\n      }\n\n      if test -n \"$pic_flag\" || test default != \"$pic_mode\"; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=$libobj\n\tfunc_execute_cmds \"$reload_cmds\" 'exit $?'\n      fi\n\n      if test -n \"$gentop\"; then\n\tfunc_show_eval '${RM}r \"$gentop\"'\n      fi\n\n      exit $EXIT_SUCCESS\n      ;;\n\n    prog)\n      case $host in\n\t*cygwin*) func_stripname '' '.exe' \"$output\"\n\t          output=$func_stripname_result.exe;;\n      esac\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info' is ignored for programs\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for programs\"\n\n      $preload \\\n\t&& test unknown,unknown,unknown = \"$dlopen_support,$dlopen_self,$dlopen_self_static\" \\\n\t&& func_warning \"'LT_INIT([dlopen])' not used. Assuming no dlopen support.\"\n\n      case $host in\n      *-*-rhapsody* | *-*-darwin1.[012])\n\t# On Rhapsody replace the C library is the System framework\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t;;\n      esac\n\n      case $host in\n      *-*-darwin*)\n\t# Don't allow lazy linking, it breaks C++ global constructors\n\t# But is supposedly fixed on 10.4 or later (yay!).\n\tif test CXX = \"$tagname\"; then\n\t  case ${MACOSX_DEPLOYMENT_TARGET-10.0} in\n\t    10.[0123])\n\t      func_append compile_command \" $wl-bind_at_load\"\n\t      func_append finalize_command \" $wl-bind_at_load\"\n\t    ;;\n\t  esac\n\tfi\n\t# Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t;;\n      esac\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $compile_deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $compile_deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      compile_deplibs=$new_libs\n\n\n      func_append compile_command \" $compile_deplibs\"\n      func_append finalize_command \" $finalize_deplibs\"\n\n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=$libdir\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$libdir\" | $SED -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$libdir:\"*) ;;\n\t  ::) dllsearchpath=$libdir;;\n\t  *) func_append dllsearchpath \":$libdir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=$hardcode_libdirs\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      compile_rpath=$rpath\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=$libdir\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=$hardcode_libdirs\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      finalize_rpath=$rpath\n\n      if test -n \"$libobjs\" && test yes = \"$build_old_libs\"; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$ECHO \"$compile_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$ECHO \"$finalize_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n      fi\n\n      func_generate_dlsyms \"$outputname\" \"@PROGRAM@\" false\n\n      # template prelinking step\n      if test -n \"$prelink_cmds\"; then\n\tfunc_execute_cmds \"$prelink_cmds\" 'exit $?'\n      fi\n\n      wrappers_required=:\n      case $host in\n      *cegcc* | *mingw32ce*)\n        # Disable wrappers for cegcc and mingw32ce hosts, we are cross compiling anyway.\n        wrappers_required=false\n        ;;\n      *cygwin* | *mingw* )\n        test yes = \"$build_libtool_libs\" || wrappers_required=false\n        ;;\n      *)\n        if test no = \"$need_relink\" || test yes != \"$build_libtool_libs\"; then\n          wrappers_required=false\n        fi\n        ;;\n      esac\n      $wrappers_required || {\n\t# Replace the output file specification.\n\tcompile_command=`$ECHO \"$compile_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=$compile_command$compile_rpath\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\texit_status=0\n\tfunc_show_eval \"$link_command\" 'exit_status=$?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\t# Delete the generated files.\n\tif test -f \"$output_objdir/${outputname}S.$objext\"; then\n\t  func_show_eval '$RM \"$output_objdir/${outputname}S.$objext\"'\n\tfi\n\n\texit $exit_status\n      }\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test yes = \"$no_install\"; then\n\t# We don't need to create a wrapper script.\n\tlink_command=$compile_var$compile_command$compile_rpath\n\t# Replace the output file specification.\n\tlink_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\t# Delete the old output file.\n\t$opt_dry_run || $RM $output\n\t# Link the executable and exit\n\tfunc_show_eval \"$link_command\" 'exit $?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      case $hardcode_action,$fast_install in\n        relink,*)\n\t  # Fast installation is not supported\n\t  link_command=$compile_var$compile_command$compile_rpath\n\t  relink_command=$finalize_var$finalize_command$finalize_rpath\n\n\t  func_warning \"this platform does not like uninstalled shared libraries\"\n\t  func_warning \"'$output' will be relinked during installation\"\n\t  ;;\n        *,yes)\n\t  link_command=$finalize_var$compile_command$finalize_rpath\n\t  relink_command=`$ECHO \"$compile_var$compile_command$compile_rpath\" | $SED 's%@OUTPUT@%\\$progdir/\\$file%g'`\n          ;;\n\t*,no)\n\t  link_command=$compile_var$compile_command$compile_rpath\n\t  relink_command=$finalize_var$finalize_command$finalize_rpath\n          ;;\n\t*,needless)\n\t  link_command=$finalize_var$compile_command$finalize_rpath\n\t  relink_command=\n          ;;\n      esac\n\n      # Replace the output file specification.\n      link_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n\n      # Delete the old output files.\n      $opt_dry_run || $RM $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      func_show_eval \"$link_command\" 'exit $?'\n\n      if test -n \"$postlink_cmds\"; then\n\tfunc_to_tool_file \"$output_objdir/$outputname\"\n\tpostlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\tfunc_execute_cmds \"$postlink_cmds\" 'exit $?'\n      fi\n\n      # Now create the wrapper script.\n      func_verbose \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\t# Preserve any variables that may affect compiler behavior\n\tfor var in $variables_saved_for_relink; do\n\t  if eval test -z \\\"\\${$var+set}\\\"; then\n\t    relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\t  elif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t    relink_command=\"$var=; export $var; $relink_command\"\n\t  else\n\t    func_quote_for_eval \"$var_value\"\n\t    relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\t  fi\n\tdone\n\trelink_command=\"(cd `pwd`; $relink_command)\"\n\trelink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if not in dry run mode.\n      $opt_dry_run || {\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) func_stripname '' '.exe' \"$output\"\n\t         output=$func_stripname_result ;;\n\tesac\n\t# test for cygwin because mv fails w/o .exe extensions\n\tcase $host in\n\t  *cygwin*)\n\t    exeext=.exe\n\t    func_stripname '' '.exe' \"$outputname\"\n\t    outputname=$func_stripname_result ;;\n\t  *) exeext= ;;\n\tesac\n\tcase $host in\n\t  *cygwin* | *mingw* )\n\t    func_dirname_and_basename \"$output\" \"\" \".\"\n\t    output_name=$func_basename_result\n\t    output_path=$func_dirname_result\n\t    cwrappersource=$output_path/$objdir/lt-$output_name.c\n\t    cwrapper=$output_path/$output_name.exe\n\t    $RM $cwrappersource $cwrapper\n\t    trap \"$RM $cwrappersource $cwrapper; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_cwrapperexe_src > $cwrappersource\n\n\t    # The wrapper executable is built using the $host compiler,\n\t    # because it contains $host paths and files. If cross-\n\t    # compiling, it, like the target executable, must be\n\t    # executed on the $host or under an emulation environment.\n\t    $opt_dry_run || {\n\t      $LTCC $LTCFLAGS -o $cwrapper $cwrappersource\n\t      $STRIP $cwrapper\n\t    }\n\n\t    # Now, create the wrapper script for func_source use:\n\t    func_ltwrapper_scriptname $cwrapper\n\t    $RM $func_ltwrapper_scriptname_result\n\t    trap \"$RM $func_ltwrapper_scriptname_result; exit $EXIT_FAILURE\" 1 2 15\n\t    $opt_dry_run || {\n\t      # note: this script will not be executed, so do not chmod.\n\t      if test \"x$build\" = \"x$host\"; then\n\t\t$cwrapper --lt-dump-script > $func_ltwrapper_scriptname_result\n\t      else\n\t\tfunc_emit_wrapper no > $func_ltwrapper_scriptname_result\n\t      fi\n\t    }\n\t  ;;\n\t  * )\n\t    $RM $output\n\t    trap \"$RM $output; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_wrapper no > $output\n\t    chmod +x $output\n\t  ;;\n\tesac\n      }\n      exit $EXIT_SUCCESS\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      case $build_libtool_libs in\n        convenience)\n\t  oldobjs=\"$libobjs_save $symfileobj\"\n\t  addlibs=$convenience\n\t  build_libtool_libs=no\n\t  ;;\n\tmodule)\n\t  oldobjs=$libobjs_save\n\t  addlibs=$old_convenience\n\t  build_libtool_libs=no\n          ;;\n\t*)\n\t  oldobjs=\"$old_deplibs $non_pic_objects\"\n\t  $preload && test -f \"$symfileobj\" \\\n\t    && func_append oldobjs \" $symfileobj\"\n\t  addlibs=$old_convenience\n\t  ;;\n      esac\n\n      if test -n \"$addlibs\"; then\n\tgentop=$output_objdir/${outputname}x\n\tfunc_append generated \" $gentop\"\n\n\tfunc_extract_archives $gentop $addlibs\n\tfunc_append oldobjs \" $func_extract_archives_result\"\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test yes = \"$build_libtool_libs\"; then\n\tcmds=$old_archive_from_new_cmds\n      else\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append oldobjs \" $func_extract_archives_result\"\n\tfi\n\n\t# POSIX demands no paths to be encoded in archives.  We have\n\t# to avoid creating archives with duplicate basenames if we\n\t# might have to extract them afterwards, e.g., when creating a\n\t# static archive out of a convenience library, or when linking\n\t# the entirety of a libtool archive into another (currently\n\t# not supported by libtool).\n\tif (for obj in $oldobjs\n\t    do\n\t      func_basename \"$obj\"\n\t      $ECHO \"$func_basename_result\"\n\t    done | sort | sort -uc >/dev/null 2>&1); then\n\t  :\n\telse\n\t  echo \"copying selected object files to avoid basename conflicts...\"\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\t  func_mkdir_p \"$gentop\"\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  counter=1\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_basename \"$obj\"\n\t    objbase=$func_basename_result\n\t    case \" $oldobjs \" in\n\t    \" \") oldobjs=$obj ;;\n\t    *[\\ /]\"$objbase \"*)\n\t      while :; do\n\t\t# Make sure we don't pick an alternate name that also\n\t\t# overlaps.\n\t\tnewobj=lt$counter-$objbase\n\t\tfunc_arith $counter + 1\n\t\tcounter=$func_arith_result\n\t\tcase \" $oldobjs \" in\n\t\t*[\\ /]\"$newobj \"*) ;;\n\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n\t\tesac\n\t      done\n\t      func_show_eval \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n\t      func_append oldobjs \" $gentop/$newobj\"\n\t      ;;\n\t    *) func_append oldobjs \" $obj\" ;;\n\t    esac\n\t  done\n\tfi\n\tfunc_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n\ttool_oldlib=$func_to_tool_file_result\n\teval cmds=\\\"$old_archive_cmds\\\"\n\n\tfunc_len \" $cmds\"\n\tlen=$func_len_result\n\tif test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  cmds=$old_archive_cmds\n\telif test -n \"$archiver_list_spec\"; then\n\t  func_verbose \"using command file archive linking...\"\n\t  for obj in $oldobjs\n\t  do\n\t    func_to_tool_file \"$obj\"\n\t    $ECHO \"$func_to_tool_file_result\"\n\t  done > $output_objdir/$libname.libcmd\n\t  func_to_tool_file \"$output_objdir/$libname.libcmd\"\n\t  oldobjs=\" $archiver_list_spec$func_to_tool_file_result\"\n\t  cmds=$old_archive_cmds\n\telse\n\t  # the command line is too long to link in one step, link in parts\n\t  func_verbose \"using piecewise archive linking...\"\n\t  save_RANLIB=$RANLIB\n\t  RANLIB=:\n\t  objlist=\n\t  concat_cmds=\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  # Is there a better way of finding the last object in the list?\n\t  for obj in $save_oldobjs\n\t  do\n\t    last_oldobj=$obj\n\t  done\n\t  eval test_cmds=\\\"$old_archive_cmds\\\"\n\t  func_len \" $test_cmds\"\n\t  len0=$func_len_result\n\t  len=$len0\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_len \" $obj\"\n\t    func_arith $len + $func_len_result\n\t    len=$func_arith_result\n\t    func_append objlist \" $obj\"\n\t    if test \"$len\" -lt \"$max_cmd_len\"; then\n\t      :\n\t    else\n\t      # the above command should be used before it gets too long\n\t      oldobjs=$objlist\n\t      if test \"$obj\" = \"$last_oldobj\"; then\n\t\tRANLIB=$save_RANLIB\n\t      fi\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$old_archive_cmds\\\"\n\t      objlist=\n\t      len=$len0\n\t    fi\n\t  done\n\t  RANLIB=$save_RANLIB\n\t  oldobjs=$objlist\n\t  if test -z \"$oldobjs\"; then\n\t    eval cmds=\\\"\\$concat_cmds\\\"\n\t  else\n\t    eval cmds=\\\"\\$concat_cmds~\\$old_archive_cmds\\\"\n\t  fi\n\tfi\n      fi\n      func_execute_cmds \"$cmds\" 'exit $?'\n    done\n\n    test -n \"$generated\" && \\\n      func_show_eval \"${RM}r$generated\"\n\n    # Now create the libtool archive.\n    case $output in\n    *.la)\n      old_library=\n      test yes = \"$build_old_libs\" && old_library=$libname.$libext\n      func_verbose \"creating $output\"\n\n      # Preserve any variables that may affect compiler behavior\n      for var in $variables_saved_for_relink; do\n\tif eval test -z \\\"\\${$var+set}\\\"; then\n\t  relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\telif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t  relink_command=\"$var=; export $var; $relink_command\"\n\telse\n\t  func_quote_for_eval \"$var_value\"\n\t  relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\tfi\n      done\n      # Quote the link command for shipping.\n      relink_command=\"(cd `pwd`; $SHELL \\\"$progpath\\\" $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)\"\n      relink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      if test yes = \"$hardcode_automatic\"; then\n\trelink_command=\n      fi\n\n      # Only create the output if not a dry run.\n      $opt_dry_run || {\n\tfor installed in no yes; do\n\t  if test yes = \"$installed\"; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=$output_objdir/${outputname}i\n\t    # Replace all uninstalled libtool libraries with the installed ones\n\t    newdependency_libs=\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      *.la)\n\t\tfunc_basename \"$deplib\"\n\t\tname=$func_basename_result\n\t\tfunc_resolve_sysroot \"$deplib\"\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $func_resolve_sysroot_result`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$deplib' is not a valid libtool archive\"\n\t\tfunc_append newdependency_libs \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      -L*)\n\t\tfunc_stripname -L '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -L$func_replace_sysroot_result\"\n\t\t;;\n\t      -R*)\n\t\tfunc_stripname -R '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -R$func_replace_sysroot_result\"\n\t\t;;\n\t      *) func_append newdependency_libs \" $deplib\" ;;\n\t      esac\n\t    done\n\t    dependency_libs=$newdependency_libs\n\t    newdlfiles=\n\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t      *.la)\n\t        func_basename \"$lib\"\n\t\tname=$func_basename_result\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlfiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      *) func_append newdlfiles \" $lib\" ;;\n\t      esac\n\t    done\n\t    dlfiles=$newdlfiles\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t      *.la)\n\t\t# Only pass preopened files to the pseudo-archive (for\n\t\t# eventual linking with the app. that links it) if we\n\t\t# didn't already link the preopened objects directly into\n\t\t# the library:\n\t\tfunc_basename \"$lib\"\n\t\tname=$func_basename_result\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlprefiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      esac\n\t    done\n\t    dlprefiles=$newdlprefiles\n\t  else\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=$lib ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlfiles \" $abs\"\n\t    done\n\t    dlfiles=$newdlfiles\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=$lib ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlprefiles \" $abs\"\n\t    done\n\t    dlprefiles=$newdlprefiles\n\t  fi\n\t  $RM $output\n\t  # place dlname in correct position for cygwin\n\t  # In fact, it would be nice if we could use this code for all target\n\t  # systems that can't hard-code library paths into their executables\n\t  # and that have no shared library path variable independent of PATH,\n\t  # but it turns out we can't easily determine that from inspecting\n\t  # libtool variables, so we have to hard-code the OSs to which it\n\t  # applies here; at the moment, that means platforms that use the PE\n\t  # object format with DLL files.  See the long comment at the top of\n\t  # tests/bindir.at for full details.\n\t  tdlname=$dlname\n\t  case $host,$output,$installed,$module,$dlname in\n\t    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll | *cegcc*,*lai,yes,no,*.dll)\n\t      # If a -bindir argument was supplied, place the dll there.\n\t      if test -n \"$bindir\"; then\n\t\tfunc_relative_path \"$install_libdir\" \"$bindir\"\n\t\ttdlname=$func_relative_path_result/$dlname\n\t      else\n\t\t# Otherwise fall back on heuristic.\n\t\ttdlname=../bin/$dlname\n\t      fi\n\t      ;;\n\t  esac\n\t  $ECHO > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$tdlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Linker flags that cannot go in dependency_libs.\ninherited_linker_flags='$new_inherited_linker_flags'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Names of additional weak libraries provided by this library\nweak_library_names='$weak_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=$module\n\n# Files to dlopen/dlpreopen\ndlopen='$dlfiles'\ndlpreopen='$dlprefiles'\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\"\n\t  if test no,yes = \"$installed,$need_relink\"; then\n\t    $ECHO >> $output \"\\\nrelink_command=\\\"$relink_command\\\"\"\n\t  fi\n\tdone\n      }\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      func_show_eval '( cd \"$output_objdir\" && $RM \"$outputname\" && $LN_S \"../$outputname\" \"$outputname\" )' 'exit $?'\n      ;;\n    esac\n    exit $EXIT_SUCCESS\n}\n\nif test link = \"$opt_mode\" || test relink = \"$opt_mode\"; then\n  func_mode_link ${1+\"$@\"}\nfi\n\n\n# func_mode_uninstall arg...\nfunc_mode_uninstall ()\n{\n    $debug_cmd\n\n    RM=$nonopt\n    files=\n    rmforce=false\n    exit_status=0\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=$magic\n\n    for arg\n    do\n      case $arg in\n      -f) func_append RM \" $arg\"; rmforce=: ;;\n      -*) func_append RM \" $arg\" ;;\n      *) func_append files \" $arg\" ;;\n      esac\n    done\n\n    test -z \"$RM\" && \\\n      func_fatal_help \"you must specify an RM program\"\n\n    rmdirs=\n\n    for file in $files; do\n      func_dirname \"$file\" \"\" \".\"\n      dir=$func_dirname_result\n      if test . = \"$dir\"; then\n\todir=$objdir\n      else\n\todir=$dir/$objdir\n      fi\n      func_basename \"$file\"\n      name=$func_basename_result\n      test uninstall = \"$opt_mode\" && odir=$dir\n\n      # Remember odir for removal later, being careful to avoid duplicates\n      if test clean = \"$opt_mode\"; then\n\tcase \" $rmdirs \" in\n\t  *\" $odir \"*) ;;\n\t  *) func_append rmdirs \" $odir\" ;;\n\tesac\n      fi\n\n      # Don't error if the file doesn't exist and rm -f was used.\n      if { test -L \"$file\"; } >/dev/null 2>&1 ||\n\t { test -h \"$file\"; } >/dev/null 2>&1 ||\n\t test -f \"$file\"; then\n\t:\n      elif test -d \"$file\"; then\n\texit_status=1\n\tcontinue\n      elif $rmforce; then\n\tcontinue\n      fi\n\n      rmfiles=$file\n\n      case $name in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif func_lalib_p \"$file\"; then\n\t  func_source $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    func_append rmfiles \" $odir/$n\"\n\t  done\n\t  test -n \"$old_library\" && func_append rmfiles \" $odir/$old_library\"\n\n\t  case $opt_mode in\n\t  clean)\n\t    case \" $library_names \" in\n\t    *\" $dlname \"*) ;;\n\t    *) test -n \"$dlname\" && func_append rmfiles \" $odir/$dlname\" ;;\n\t    esac\n\t    test -n \"$libdir\" && func_append rmfiles \" $odir/$name $odir/${name}i\"\n\t    ;;\n\t  uninstall)\n\t    if test -n \"$library_names\"; then\n\t      # Do each command in the postuninstall commands.\n\t      func_execute_cmds \"$postuninstall_cmds\" '$rmforce || exit_status=1'\n\t    fi\n\n\t    if test -n \"$old_library\"; then\n\t      # Do each command in the old_postuninstall commands.\n\t      func_execute_cmds \"$old_postuninstall_cmds\" '$rmforce || exit_status=1'\n\t    fi\n\t    # FIXME: should reinstall the best remaining shared library.\n\t    ;;\n\t  esac\n\tfi\n\t;;\n\n      *.lo)\n\t# Possibly a libtool object, so verify it.\n\tif func_lalib_p \"$file\"; then\n\n\t  # Read the .lo file\n\t  func_source $dir/$name\n\n\t  # Add PIC object to the list of files to remove.\n\t  if test -n \"$pic_object\" && test none != \"$pic_object\"; then\n\t    func_append rmfiles \" $dir/$pic_object\"\n\t  fi\n\n\t  # Add non-PIC object to the list of files to remove.\n\t  if test -n \"$non_pic_object\" && test none != \"$non_pic_object\"; then\n\t    func_append rmfiles \" $dir/$non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *)\n\tif test clean = \"$opt_mode\"; then\n\t  noexename=$name\n\t  case $file in\n\t  *.exe)\n\t    func_stripname '' '.exe' \"$file\"\n\t    file=$func_stripname_result\n\t    func_stripname '' '.exe' \"$name\"\n\t    noexename=$func_stripname_result\n\t    # $file with .exe has already been added to rmfiles,\n\t    # add $file without .exe\n\t    func_append rmfiles \" $file\"\n\t    ;;\n\t  esac\n\t  # Do a test to see if this is a libtool program.\n\t  if func_ltwrapper_p \"$file\"; then\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      relink_command=\n\t      func_source $func_ltwrapper_scriptname_result\n\t      func_append rmfiles \" $func_ltwrapper_scriptname_result\"\n\t    else\n\t      relink_command=\n\t      func_source $dir/$noexename\n\t    fi\n\n\t    # note $name still contains .exe if it was in $file originally\n\t    # as does the version of $file that was added into $rmfiles\n\t    func_append rmfiles \" $odir/$name $odir/${name}S.$objext\"\n\t    if test yes = \"$fast_install\" && test -n \"$relink_command\"; then\n\t      func_append rmfiles \" $odir/lt-$name\"\n\t    fi\n\t    if test \"X$noexename\" != \"X$name\"; then\n\t      func_append rmfiles \" $odir/lt-$noexename.c\"\n\t    fi\n\t  fi\n\tfi\n\t;;\n      esac\n      func_show_eval \"$RM $rmfiles\" 'exit_status=1'\n    done\n\n    # Try to remove the $objdir's in the directories where we deleted files\n    for dir in $rmdirs; do\n      if test -d \"$dir\"; then\n\tfunc_show_eval \"rmdir $dir >/dev/null 2>&1\"\n      fi\n    done\n\n    exit $exit_status\n}\n\nif test uninstall = \"$opt_mode\" || test clean = \"$opt_mode\"; then\n  func_mode_uninstall ${1+\"$@\"}\nfi\n\ntest -z \"$opt_mode\" && {\n  help=$generic_help\n  func_fatal_help \"you must specify a MODE\"\n}\n\ntest -z \"$exec_cmd\" && \\\n  func_fatal_help \"invalid operation mode '$opt_mode'\"\n\nif test -n \"$exec_cmd\"; then\n  eval exec \"$exec_cmd\"\n  exit $EXIT_FAILURE\nfi\n\nexit $exit_status\n\n\n# The TAGs below are defined such that we never get into a situation\n# where we disable both kinds of libraries.  Given conflicting\n# choices, we go for a static library, that is the most portable,\n# since we can't tell whether shared libraries were disabled because\n# the user asked for that or because the platform doesn't support\n# them.  This is particularly important on AIX, because we don't\n# support having both static and shared libraries enabled at the same\n# time on that platform, so we default to a shared-only configuration.\n# If a disable-shared tag is given, we'll fallback to a static-only\n# configuration.  But we'll never go from static-only to shared-only.\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-shared\nbuild_libtool_libs=no\nbuild_old_libs=yes\n# ### END LIBTOOL TAG CONFIG: disable-shared\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-static\nbuild_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`\n# ### END LIBTOOL TAG CONFIG: disable-static\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.info-8": "This is octave.info, produced by makeinfo version 6.3 from octave.texi.\n\nSTART-INFO-DIR-ENTRY\n* Octave: (octave).           Interactive language for numerical computations.\n\nEND-INFO-DIR-ENTRY\n\n   Copyright \u00a9 1996-2016 John W. Eaton.\n\n   Permission is granted to make and distribute verbatim copies of this\nmanual provided the copyright notice and this permission notice are\npreserved on all copies.\n\n   Permission is granted to copy and distribute modified versions of\nthis manual under the conditions for verbatim copying, provided that the\nentire resulting derived work is distributed under the terms of a\npermission notice identical to this one.\n\n   Permission is granted to copy and distribute translations of this\nmanual into another language, under the above conditions for modified\nversions.\n\n\u001f\nFile: octave.info,  Node: Test and Demo Functions,  Next: Obsolete Functions,  Prev: External Code Interface,  Up: Top\n\nAppendix B Test and Demo Functions\n**********************************\n\nOctave includes a number of functions to allow the integration of\ntesting and demonstration code in the source code of the functions\nthemselves.\n\n* Menu:\n\n* Test Functions::\n* Demonstration Functions::\n\n\u001f\nFile: octave.info,  Node: Test Functions,  Next: Demonstration Functions,  Up: Test and Demo Functions\n\nB.1 Test Functions\n==================\n\n -- : test NAME\n -- : test NAME quiet|normal|verbose\n -- : test (\"NAME\", \"quiet|normal|verbose\", FID)\n -- : test (\"NAME\", \"quiet|normal|verbose\", FNAME)\n -- : SUCCESS = test (...)\n -- : [N, NMAX, NXFAIL, NSKIP] = test (...)\n -- : [CODE, IDX] = test (\"NAME\", \"grabdemo\")\n -- : test ([], \"explain\", FID)\n -- : test ([], \"explain\", FNAME)\n\n     Perform built-in self-tests from the first file in the loadpath\n     matching NAME.\n\n     \u2018test\u2019 can be called in either command or functional form.  The\n     exact operation of test is determined by a combination of mode\n     (interactive or batch), reporting level (\"quiet\", \"normal\",\n     \"verbose\"), and whether a logfile or summary output variable is\n     used.\n\n     The default mode when \u2018test\u2019 is called from the command line is\n     interactive.  In this mode, tests will be run until the first error\n     is encountered, or all tests complete successfully.  In batch mode,\n     all tests are run regardless of any failures, and the results are\n     collected for reporting.  Tests which require user interaction,\n     i.e., demo blocks, are never run in batch mode.\n\n     Batch mode is enabled by either 1) specifying a logfile using the\n     third argument FNAME or FID, or 2) requesting an output argument\n     such as SUCCESS, N, etc.\n\n     The optional second argument determines the amount of output to\n     generate and which types of tests to run.  The default value is\n     \"normal\".  Requesting an output argument will suppress printing the\n     final summary message and any intermediate warnings, unless verbose\n     reporting is enabled.\n\n     \"quiet\"\n          Print a summary message when all tests pass, or print an error\n          with the results of the first bad test when a failure occurs.\n          Don\u2019t run tests which require user interaction.\n\n     \"normal\"\n          Display warning messages about skipped tests or failing xtests\n          during test execution.  Print a summary message when all tests\n          pass, or print an error with the results of the first bad test\n          when a failure occurs.  Don\u2019t run tests which require user\n          interaction.\n\n     \"verbose\"\n          Display tests before execution.  Print all warning messages.\n          In interactive mode, run all tests including those which\n          require user interaction.\n\n     The optional third input argument specifies a logfile where results\n     of the tests should be written.  The logfile may be a character\n     string (FNAME) or an open file descriptor ID (FID).  To enable\n     batch processing, but still print the results to the screen, use\n     \u2018stdout\u2019 for FID.\n\n     When called with just a single output argument SUCCESS, \u2018test\u2019\n     returns true if all of the tests were successful.  If called with\n     more than one output argument then the number of successful tests\n     (N), the total number of tests in the file (NMAX), the number of\n     xtest failures (NXFAIL), and the number of skipped tests (NSKIP)\n     are returned.\n\n     Example\n\n          test sind\n          \u21d2\n          PASSES 5 out of 5 tests\n\n          [n, nmax] = test (\"sind\")\n          \u21d2\n          n =  5\n          nmax =  5\n\n     Additional Calling Syntaxes\n\n     If the second argument is the string \"grabdemo\", the contents of\n     any built-in demo blocks are extracted but not executed.  The text\n     for all code blocks is concatenated and returned as CODE with IDX\n     being a vector of positions of the ends of each demo block.  For an\n     easier way to extract demo blocks from files, *Note example:\n     XREFexample.\n\n     If the second argument is \"explain\" then NAME is ignored and an\n     explanation of the line markers used in \u2018test\u2019 output reports is\n     written to the file specified by FNAME or FID.\n\n     See also: *note assert: XREFassert, *note fail: XREFfail, *note\n     demo: XREFdemo, *note example: XREFexample, *note error: XREFerror.\n\n   \u2018test\u2019 scans the named script file looking for lines which start with\nthe identifier \u2018%!\u2019.  The prefix is stripped off and the rest of the\nline is processed through the Octave interpreter.  If the code generates\nan error, then the test is said to fail.\n\n   Since \u2018eval()\u2019 will stop at the first error it encounters, you must\ndivide your tests up into blocks, with anything in a separate block\nevaluated separately.  Blocks are introduced by valid keywords like\n\u2018test\u2019, \u2018function\u2019, or \u2018assert\u2019 immediately following \u2018%!\u2019.  A block is\ndefined by indentation as in Python.  Lines beginning with\n\u2018%!<whitespace>\u2019 are part of the preceeding block.\n\n   For example:\n\n     %!test error (\"this test fails!\")\n     %!test \"test doesn't fail.  it doesn't generate an error\"\n\n   When a test fails, you will see something like:\n\n       ***** test error (\"this test fails!\")\n     !!!!! test failed\n     this test fails!\n\n   Generally, to test if something works, you want to assert that it\nproduces a correct value.  A real test might look something like\n\n     %!test\n     %! A = [1, 2, 3; 4, 5, 6]; B = [1; 2];\n     %! expect = [ A ; 2*A ];\n     %! get = kron (B, A);\n     %! if (any (size (expect) != size (get)))\n     %!   error (\"wrong size: expected %d,%d but got %d,%d\",\n     %!          size (expect), size (get));\n     %! elseif (any (any (expect != get)))\n     %!   error (\"didn't get what was expected.\");\n     %! endif\n\n   To make the process easier, use the \u2018assert\u2019 function.  For example,\nwith \u2018assert\u2019 the previous test is reduced to:\n\n     %!test\n     %! A = [1, 2, 3; 4, 5, 6]; B = [1; 2];\n     %! assert (kron (B, A), [ A; 2*A ]);\n\n   \u2018assert\u2019 can accept a tolerance so that you can compare results\nabsolutely or relatively.  For example, the following all succeed:\n\n     %!test assert (1+eps, 1, 2*eps)           # absolute error\n     %!test assert (100+100*eps, 100, -2*eps)  # relative error\n\n   You can also do the comparison yourself, but still have assert\ngenerate the error:\n\n     %!test assert (isempty ([]))\n     %!test assert ([1, 2; 3, 4] > 0)\n\n   Because \u2018assert\u2019 is so frequently used alone in a test block, there\nis a shorthand form:\n\n     %!assert (...)\n\nwhich is equivalent to:\n\n     %!test assert (...)\n\n   Occasionally a block of tests will depend on having optional\nfunctionality in Octave.  Before testing such blocks the availability of\nthe required functionality must be checked.  A \u2018%!testif HAVE_XXX\u2019 block\nwill only be run if Octave was compiled with functionality \u2018HAVE_XXX\u2019.\nFor example, the sparse single value decomposition, \u2018svds()\u2019, depends on\nhaving the ARPACK library.  All of the tests for \u2018svds\u2019 begin with\n\n     %!testif HAVE_ARPACK\n\nReview \u2018config.h\u2019 or \u2018__octave_config_info__ (\"build_features\")\u2019 to see\nsome of the possible values to check.\n\n   Sometimes during development there is a test that should work but is\nknown to fail.  You still want to leave the test in because when the\nfinal code is ready the test should pass, but you may not be able to fix\nit immediately.  To avoid unnecessary bug reports for these known\nfailures, mark the block with \u2018xtest\u2019 rather than \u2018test\u2019:\n\n     %!xtest assert (1==0)\n     %!xtest fail (\"success=1\", \"error\")\n\nIn this case, the test will run and any failure will be reported.\nHowever, testing is not aborted and subsequent test blocks will be\nprocessed normally.  Another use of \u2018xtest\u2019 is for statistical tests\nwhich should pass most of the time but are known to fail occasionally.\n\n   Each block is evaluated in its own function environment, which means\nthat variables defined in one block are not automatically shared with\nother blocks.  If you do want to share variables, then you must declare\nthem as \u2018shared\u2019 before you use them.  For example, the following\ndeclares the variable A, gives it an initial value (default is empty),\nand then uses it in several subsequent tests.\n\n     %!shared A\n     %! A = [1, 2, 3; 4, 5, 6];\n     %!assert (kron ([1; 2], A), [ A; 2*A ])\n     %!assert (kron ([1, 2], A), [ A, 2*A ])\n     %!assert (kron ([1,2; 3,4], A), [ A,2*A; 3*A,4*A ])\n\n   You can share several variables at the same time:\n\n     %!shared A, B\n\n   You can also share test functions:\n\n     %!function A = fn (B)\n     %!  A = 2*B;\n     %!endfunction\n     %!assert (fn(2), 4)\n\n   Note that all previous variables and values are lost when a new\nshared block is declared.\n\n   Remember that \u2018%!function\u2019 begins a new block and that\n\u2018%!endfunction\u2019 ends this block.  Be aware that until a new block is\nstarted, lines starting with \u2018%!<space>\u2019 will be discarded as comments.\nThe following is nearly identical to the example above, but does\nnothing.\n\n     %!function A = fn (B)\n     %!  A = 2*B;\n     %!endfunction\n     %!assert (fn(2), 4)\n\nBecause there is a space after \u2018%!\u2019 the \u2018assert\u2019 statement does not\nbegin a new block and this line is treated as a comment.\n\n   Error and warning blocks are like test blocks, but they only succeed\nif the code generates an error.  You can check the text of the error is\ncorrect using an optional regular expression \u2018<pattern>\u2019.  For example:\n\n     %!error <passes!> error (\"this test passes!\")\n\n   If the code doesn\u2019t generate an error, the test fails.  For example:\n\n     %!error \"this is an error because it succeeds.\"\n\nproduces\n\n       ***** error \"this is an error because it succeeds.\"\n     !!!!! test failed: no error\n\n   It is important to automate the tests as much as possible, however\nsome tests require user interaction.  These can be isolated into demo\nblocks, which if you are in batch mode, are only run when called with\n\u2018demo\u2019 or the \u2018verbose\u2019 option to \u2018test\u2019.  The code is displayed before\nit is executed.  For example,\n\n     %!demo\n     %! T = [0:0.01:2*pi]; X = sin (T);\n     %! plot (T, X);\n     %! # you should now see a sine wave in your figure window\n\nproduces\n\n     funcname example 1:\n      T = [0:0.01:2*pi]; X = sin (T);\n      plot (T, X);\n      # you should now see a sine wave in your figure window\n\n     Press <enter> to continue:\n\n   Note that demo blocks cannot use any shared variables.  This is so\nthat they can be executed by themselves, ignoring all other tests.\n\n   If you want to temporarily disable a test block, put \u2018#\u2019 in place of\nthe block type.  This creates a comment block which is echoed in the log\nfile but not executed.  For example:\n\n     %!#demo\n     %! T = [0:0.01:2*pi]; X = sin (T);\n     %! plot (T, X);\n     %! # you should now see a sine wave in your figure window\n\nThe following trivial code snippet provides examples for the use of\nfail, assert, error, and xtest:\n\n     function output = must_be_zero (INPUT)\n       if (INPUT != 0)\n         error (\"Nonzero input!\")\n       endif\n       output = input;\n     endfunction\n\n     %!fail (\"must_be_zero (1)\")\n     %!assert (must_be_zero (0), 0)\n     %!error <Nonzero> must_be_zero (1)\n     %!xtest error (\"This code generates an error\")\n\nWhen putting this in a file \u2018must_be_zero.m\u2019, and running the test, we\nsee\n\n     test must_be_zero verbose\n\n     \u21d2\n     >>>>> /path/to/must_be_zero.m\n     ***** fail (\"must_be_zero (1)\")\n     ***** assert (must_be_zero (0), 0)\n     ***** error <Nonzero> must_be_zero (1)\n     ***** xtest error (\"This code generates an error\")\n     !!!!! known failure\n     This code generates an error\n     PASSES 3 out of 4 tests (1 expected failure)\n\nBlock type summary:\n...................\n\n\u2018%!test\u2019\n\u2018%!test <MESSAGE>\u2019\n     Check that entire block is correct.  If \u2018<MESSAGE>\u2019 is present, the\n     test block is interpreted as for \u2018xtest\u2019.\n\n\u2018%!testif HAVE_XXX\u2019\n\u2018%!testif HAVE_XXX, HAVE_YYY, ...\u2019\n\u2018%!testif ... <MESSAGE>\u2019\n     Check block only if Octave was compiled with feature HAVE_XXX. If\n     \u2018<MESSAGE>\u2019 is present, the test block is interpreted as for\n     \u2018xtest\u2019.\n\n\u2018%!xtest\u2019\n\u2018%!xtest <MESSAGE>\u2019\n     Check block, report a test failure but do not abort testing.  If\n     \u2018<MESSAGE>\u2019 is present, then the text of the message is displayed\n     if the test fails, like this:\n\n          !!!!! Known bug:  MESSAGE\n\n     If the message is an integer, it is interpreted as a bug ID for the\n     Octave bug tracker and reported as\n\n          !!!!! Known bug: http://octave.org/testfailure/?BUG-ID\n\n     in which BUG-ID is the integer bug number.  The intent is to allow\n     clearer documentation of known problems.\n\n\u2018%!error\u2019\n\u2018%!error <MESSAGE>\u2019\n\u2018%!warning\u2019\n\u2018%!warning <MESSAGE>\u2019\n     Check for correct error or warning message.  If \u2018<MESSAGE>\u2019 is\n     supplied it is interpreted as a regular expression pattern that is\n     expected to match the error or warning message.\n\n\u2018%!demo\u2019\n     Demo only executes in interactive mode.\n\n\u2018%!#\u2019\n     Comment.  Ignore everything within the block\n\n\u2018%!shared x,y,z\u2019\n     Declare variables for use in multiple tests.\n\n\u2018%!function\u2019\n     Define a function for use in multiple tests.\n\n\u2018%!endfunction\u2019\n     Close a function definition.\n\n\u2018%!assert (x, y, tol)\u2019\n\u2018%!assert <MESSAGE> (x, y, tol)\u2019\n\u2018%!fail (CODE, PATTERN)\u2019\n\u2018%!fail <MESSAGE> (CODE, PATTERN)\u2019\n     Shorthand for \u2018%!test assert (x, y, tol)\u2019 or \u2018%!test fail (CODE,\n     PATTERN)\u2019.  If \u2018<MESSAGE>\u2019 is present, the test block is\n     interpreted as for \u2018xtest\u2019.\n\n   When coding tests the Octave convention is that lines that begin with\na block type do not have a semicolon at the end.  Any code that is\nwithin a block, however, is normal Octave code and usually will have a\ntrailing semicolon.  For example,\n\n     ## bare block instantiation\n     %!assert (sin (0), 0)\n\nbut\n\n     ## test block with normal Octave code\n     %!test\n     %! assert (sin (0), 0);\n\n   You can also create test scripts for built-in functions and your own\nC++ functions.  To do so, put a file with the bare function name (no .m\nextension) in a directory in the load path and it will be discovered by\nthe \u2018test\u2019 function.  Alternatively, you can embed tests directly in\nyour C++ code:\n\n     /*\n     %!test disp (\"this is a test\")\n     */\n\nor\n\n     #if 0\n     %!test disp (\"this is a test\")\n     #endif\n\nHowever, in this case the raw source code will need to be on the load\npath and the user will have to remember to type \u2018test (\"funcname.cc\")\u2019.\n\n -- : assert (COND)\n -- : assert (COND, ERRMSG)\n -- : assert (COND, ERRMSG, ...)\n -- : assert (COND, MSG_ID, ERRMSG, ...)\n -- : assert (OBSERVED, EXPECTED)\n -- : assert (OBSERVED, EXPECTED, TOL)\n\n     Produce an error if the specified condition is not met.\n\n     \u2018assert\u2019 can be called in three different ways.\n\n     \u2018assert (COND)\u2019\n     \u2018assert (COND, ERRMSG)\u2019\n     \u2018assert (COND, ERRMSG, ...)\u2019\n     \u2018assert (COND, MSG_ID, ERRMSG, ...)\u2019\n          Called with a single argument COND, \u2018assert\u2019 produces an error\n          if COND is false (numeric zero).\n\n          Any additional arguments are passed to the \u2018error\u2019 function\n          for processing.\n\n     \u2018assert (OBSERVED, EXPECTED)\u2019\n          Produce an error if observed is not the same as expected.\n\n          Note that OBSERVED and EXPECTED can be scalars, vectors,\n          matrices, strings, cell arrays, or structures.\n\n     \u2018assert (OBSERVED, EXPECTED, TOL)\u2019\n          Produce an error if observed is not the same as expected but\n          equality comparison for numeric data uses a tolerance TOL.\n\n          If TOL is positive then it is an absolute tolerance which will\n          produce an error if \u2018abs (OBSERVED - EXPECTED) > abs (TOL)\u2019.\n\n          If TOL is negative then it is a relative tolerance which will\n          produce an error if \u2018abs (OBSERVED - EXPECTED) > abs (TOL *\n          EXPECTED)\u2019.\n\n          If EXPECTED is zero TOL will always be interpreted as an\n          absolute tolerance.\n\n          If TOL is not scalar its dimensions must agree with those of\n          OBSERVED and EXPECTED and tests are performed on an\n          element-by-element basis.\n\n     See also: *note fail: XREFfail, *note test: XREFtest, *note error:\n     XREFerror, *note isequal: XREFisequal.\n\n -- : fail (CODE)\n -- : fail (CODE, PATTERN)\n -- : fail (CODE, \"warning\")\n -- : fail (CODE, \"warning\", PATTERN)\n\n     Return true if CODE fails with an error message matching PATTERN,\n     otherwise produce an error.\n\n     CODE must be in the form of a string that is passed to the Octave\n     interpreter via the \u2018evalin\u2019 function, i.e., a (quoted) string\n     constant or a string variable.\n\n     Note that if CODE runs successfully, rather than failing, the error\n     printed is:\n\n                    expected error <.> but got none\n\n     If called with two arguments, the return value will be true only if\n     CODE fails with an error message containing PATTERN (case\n     sensitive).  If the code fails with a different error than the one\n     specified in PATTERN then the message produced is:\n\n                    expected <PATTERN>\n                    but got <text of actual error>\n\n     The angle brackets are not part of the output.\n\n     When called with the \"warning\" option \u2018fail\u2019 will produce an error\n     if executing the code produces no warning.\n\n     See also: *note assert: XREFassert, *note error: XREFerror.\n\n\u001f\nFile: octave.info,  Node: Demonstration Functions,  Prev: Test Functions,  Up: Test and Demo Functions\n\nB.2 Demonstration Functions\n===========================\n\n -- : demo NAME\n -- : demo NAME N\n -- : demo (\"NAME\")\n -- : demo (\"NAME\", N)\n\n     Run example code block N associated with the function NAME.\n\n     If N is not specified, all examples are run.\n\n     The preferred location for example code blocks is embedded within\n     the script m-file immediately following the code that it exercises.\n     Alternatively, the examples may be stored in a file with the same\n     name but no extension located on Octave\u2019s load path.  To separate\n     examples from regular script code all lines are prefixed by \u2018%!\u2019.\n     Each example must also be introduced by the keyword \"demo\" flush\n     left to the prefix with no intervening spaces.  The remainder of\n     the example can contain arbitrary Octave code.  For example:\n\n          %!demo\n          %! t = 0:0.01:2*pi;\n          %! x = sin (t);\n          %! plot (t, x);\n          %! title (\"one cycle of a sine wave\");\n          %! #-------------------------------------------------\n          %! # the figure window shows one cycle of a sine wave\n\n     Note that the code is displayed before it is executed so that a\n     simple comment at the end suffices for labeling what is being\n     shown.  For plots, labeling can also be done with \u2018title\u2019 or\n     \u2018text\u2019.  It is generally *not* necessary to use \u2018disp\u2019 or \u2018printf\u2019\n     within the demo.\n\n     Demos are run in a stand-alone function environment with no access\n     to external variables.  This means that every demo must have\n     separate initialization code.  Alternatively, all demos can be\n     combined into a single large demo with the code\n\n          %! input (\"Press <enter> to continue: \", \"s\");\n\n     between the sections, but this usage is discouraged.  Other\n     techniques to avoid multiple initialization blocks include using\n     multiple plots with a new \u2018figure\u2019 command between each plot, or\n     using \u2018subplot\u2019 to put multiple plots in the same window.\n\n     Finally, because \u2018demo\u2019 evaluates within a function context it is\n     not possible to define new functions within the code.  Anonymous\n     functions make a good substitute in most instances.  If function\n     blocks *must* be used then the code \u2018eval (example (\"function\",\n     n))\u2019 will allow Octave to see them.  This has its own problems,\n     however, as \u2018eval\u2019 only evaluates one line or statement at a time.\n     In this case the function declaration must be wrapped with \"if 1\n     <demo stuff> endif\" where \"if\" is on the same line as \"demo\".  For\n     example:\n\n          %!demo if 1\n          %!  function y = f(x)\n          %!    y = x;\n          %!  endfunction\n          %!  f(3)\n          %! endif\n\n     See also: *note rundemos: XREFrundemos, *note example: XREFexample,\n     *note test: XREFtest.\n\n -- : example NAME\n -- : example NAME N\n -- : example (\"NAME\")\n -- : example (\"NAME\", N)\n -- : [S, IDX] = example (...)\n\n     Display the code for example N associated with the function NAME,\n     but do not run it.\n\n     If N is not specified, all examples are displayed.\n\n     When called with output arguments, the examples are returned in the\n     form of a string S, with IDX indicating the ending position of the\n     various examples.\n\n     See \u2018demo\u2019 for a complete explanation.\n\n     See also: *note demo: XREFdemo, *note test: XREFtest.\n\n -- : rundemos ()\n -- : rundemos (DIRECTORY)\n     Execute built-in demos for all m-files in the specified DIRECTORY.\n\n     Demo blocks in any C++ source files (\u2018*.cc\u2019) will also be executed\n     for use with dynamically linked oct-file functions.\n\n     If no directory is specified, operate on all directories in\n     Octave\u2019s search path for functions.\n\n     See also: *note demo: XREFdemo, *note runtests: XREFruntests, *note\n     path: XREFpath.\n\n -- : runtests ()\n -- : runtests (DIRECTORY)\n     Execute built-in tests for all m-files in the specified DIRECTORY.\n\n     Test blocks in any C++ source files (\u2018*.cc\u2019) will also be executed\n     for use with dynamically linked oct-file functions.\n\n     If no directory is specified, operate on all directories in\n     Octave\u2019s search path for functions.\n\n     See also: *note rundemos: XREFrundemos, *note test: XREFtest, *note\n     path: XREFpath.\n\n -- : speed (F, INIT, MAX_N, F2, TOL)\n -- : [ORDER, N, T_F, T_F2] = speed (...)\n\n     Determine the execution time of an expression (F) for various input\n     values (N).\n\n     The N are log-spaced from 1 to MAX_N.  For each N, an\n     initialization expression (INIT) is computed to create any data\n     needed for the test.  If a second expression (F2) is given then the\n     execution times of the two expressions are compared.  When called\n     without output arguments the results are printed to stdout and\n     displayed graphically.\n\n     \u2018F\u2019\n          The code expression to evaluate.\n\n     \u2018MAX_N\u2019\n          The maximum test length to run.  The default value is 100.\n          Alternatively, use \u2018[min_n, max_n]\u2019 or specify the N exactly\n          with \u2018[n1, n2, ..., nk]\u2019.\n\n     \u2018INIT\u2019\n          Initialization expression for function argument values.  Use K\n          for the test number and N for the size of the test.  This\n          should compute values for all variables used by F.  Note that\n          INIT will be evaluated first for k = 0, so things which are\n          constant throughout the test series can be computed once.  The\n          default value is \u2018X = randn (N, 1)\u2019.\n\n     \u2018F2\u2019\n          An alternative expression to evaluate, so that the speed of\n          two expressions can be directly compared.  The default is\n          \u2018[]\u2019.\n\n     \u2018TOL\u2019\n          Tolerance used to compare the results of expression F and\n          expression F2.  If TOL is positive, the tolerance is an\n          absolute one.  If TOL is negative, the tolerance is a relative\n          one.  The default is \u2018eps\u2019.  If TOL is \u2018Inf\u2019, then no\n          comparison will be made.\n\n     \u2018ORDER\u2019\n          The time complexity of the expression O(a*n^p).  This is a\n          structure with fields \u2018a\u2019 and \u2018p\u2019.\n\n     \u2018N\u2019\n          The values N for which the expression was calculated *AND* the\n          execution time was greater than zero.\n\n     \u2018T_F\u2019\n          The nonzero execution times recorded for the expression F in\n          seconds.\n\n     \u2018T_F2\u2019\n          The nonzero execution times recorded for the expression F2 in\n          seconds.  If required, the mean time ratio is simply \u2018mean\n          (T_f ./ T_f2)\u2019.\n\n     The slope of the execution time graph shows the approximate power\n     of the asymptotic running time O(n^p).  This power is plotted for\n     the region over which it is approximated (the latter half of the\n     graph).  The estimated power is not very accurate, but should be\n     sufficient to determine the general order of an algorithm.  It\n     should indicate if, for example, the implementation is unexpectedly\n     O(n^2) rather than O(n) because it extends a vector each time\n     through the loop rather than pre-allocating storage.  In the\n     current version of Octave, the following is not the expected O(n).\n\n          speed (\"for i = 1:n, y{i} = x(i); endfor\", \"\", [1000, 10000])\n\n     But it is if you preallocate the cell array \u2018y\u2019:\n\n          speed (\"for i = 1:n, y{i} = x(i); endfor\", ...\n                 \"x = rand (n, 1); y = cell (size (x));\", [1000, 10000])\n\n     An attempt is made to approximate the cost of individual\n     operations, but it is wildly inaccurate.  You can improve the\n     stability somewhat by doing more work for each \u2018n\u2019.  For example:\n\n          speed (\"airy(x)\", \"x = rand (n, 10)\", [10000, 100000])\n\n     When comparing two different expressions (F, F2), the slope of the\n     line on the speedup ratio graph should be larger than 1 if the new\n     expression is faster.  Better algorithms have a shallow slope.\n     Generally, vectorizing an algorithm will not change the slope of\n     the execution time graph, but will shift it relative to the\n     original.  For example:\n\n          speed (\"sum (x)\", \"\", [10000, 100000], ...\n                 \"v = 0; for i = 1:length (x), v += x(i); endfor\")\n\n     The following is a more complex example.  If there was an original\n     version of \u2018xcorr\u2019 using for loops and a second version using an\n     FFT, then one could compare the run speed for various lags as\n     follows, or for a fixed lag with varying vector lengths as follows:\n\n          speed (\"xcorr (x, n)\", \"x = rand (128, 1);\", 100,\n                 \"xcorr_orig (x, n)\", -100*eps)\n          speed (\"xcorr (x, 15)\", \"x = rand (20+n, 1);\", 100,\n                 \"xcorr_orig (x, n)\", -100*eps)\n\n     Assuming one of the two versions is in xcorr_orig, this would\n     compare their speed and their output values.  Note that the FFT\n     version is not exact, so one must specify an acceptable tolerance\n     on the comparison \u2018100*eps\u2019.  In this case, the comparison should\n     be computed relatively, as \u2018abs ((X - Y) ./ Y)\u2019 rather than\n     absolutely as \u2018abs (X - Y)\u2019.\n\n     Type \u2018example (\"speed\")\u2019 to see some real examples or \u2018demo\n     (\"speed\")\u2019 to run them.\n\n\u001f\nFile: octave.info,  Node: Obsolete Functions,  Next: Trouble,  Prev: Test and Demo Functions,  Up: Top\n\nAppendix C Obsolete Functions\n*****************************\n\nAfter being marked as deprecated for two major releases, the following\nfunctions have been removed from Octave.  The third column of the table\nshows the version of Octave in which the function was removed.  Prior to\nremoval, each function in the list was marked as deprecated for at least\ntwo major releases.  All deprecated functions issue warnings explaining\nthat they will be removed in a future version of Octave, and which\nfunction should be used instead.\n\n   Replacement functions do not always accept precisely the same\narguments as the obsolete function, but should provide equivalent\nfunctionality.\n\nObsolete Function      Replacement            Version\n----------------------------------------------------------\n\u2018beta_cdf\u2019             \u2018betacdf\u2019              3.4.0\n\u2018beta_inv\u2019             \u2018betainv\u2019              3.4.0\n\u2018beta_pdf\u2019             \u2018betapdf\u2019              3.4.0\n\u2018beta_rnd\u2019             \u2018betarnd\u2019              3.4.0\n\u2018binomial_cdf\u2019         \u2018binocdf\u2019              3.4.0\n\u2018binomial_inv\u2019         \u2018binoinv\u2019              3.4.0\n\u2018binomial_pdf\u2019         \u2018binopdf\u2019              3.4.0\n\u2018binomial_rnd\u2019         \u2018binornd\u2019              3.4.0\n\u2018chisquare_cdf\u2019        \u2018chi2cdf\u2019              3.4.0\n\u2018chisquare_inv\u2019        \u2018chi2inv\u2019              3.4.0\n\u2018chisquare_pdf\u2019        \u2018chi2pdf\u2019              3.4.0\n\u2018chisquare_rnd\u2019        \u2018chi2rnd\u2019              3.4.0\n\u2018clearplot\u2019            \u2018clf\u2019                  3.4.0\n\u2018com2str\u2019              \u2018num2str\u2019              3.4.0\n\u2018exponential_cdf\u2019      \u2018expcdf\u2019               3.4.0\n\u2018exponential_inv\u2019      \u2018expinv\u2019               3.4.0\n\u2018exponential_pdf\u2019      \u2018exppdf\u2019               3.4.0\n\u2018exponential_rnd\u2019      \u2018exprnd\u2019               3.4.0\n\u2018f_cdf\u2019                \u2018fcdf\u2019                 3.4.0\n\u2018f_inv\u2019                \u2018finv\u2019                 3.4.0\n\u2018f_pdf\u2019                \u2018fpdf\u2019                 3.4.0\n\u2018f_rnd\u2019                \u2018frnd\u2019                 3.4.0\n\u2018gamma_cdf\u2019            \u2018gamcdf\u2019               3.4.0\n\u2018gamma_inv\u2019            \u2018gaminv\u2019               3.4.0\n\u2018gamma_pdf\u2019            \u2018gampdf\u2019               3.4.0\n\u2018gamma_rnd\u2019            \u2018gamrnd\u2019               3.4.0\n\u2018geometric_cdf\u2019        \u2018geocdf\u2019               3.4.0\n\u2018geometric_inv\u2019        \u2018geoinv\u2019               3.4.0\n\u2018geometric_pdf\u2019        \u2018geopdf\u2019               3.4.0\n\u2018geometric_rnd\u2019        \u2018geornd\u2019               3.4.0\n\u2018hypergeometric_cdf\u2019   \u2018hygecdf\u2019              3.4.0\n\u2018hypergeometric_inv\u2019   \u2018hygeinv\u2019              3.4.0\n\u2018hypergeometric_pdf\u2019   \u2018hygepdf\u2019              3.4.0\n\u2018hypergeometric_rnd\u2019   \u2018hygernd\u2019              3.4.0\n\u2018intersection\u2019         \u2018intersect\u2019            3.4.0\n\u2018is_bool\u2019              \u2018isbool\u2019               3.4.0\n\u2018is_complex\u2019           \u2018iscomplex\u2019            3.4.0\n\u2018is_list\u2019              \u2018islist\u2019               3.4.0\n\u2018is_matrix\u2019            \u2018ismatrix\u2019             3.4.0\n\u2018is_scalar\u2019            \u2018isscalar\u2019             3.4.0\n\u2018is_square\u2019            \u2018issquare\u2019             3.4.0\n\u2018is_stream\u2019            \u2018isstream\u2019             3.4.0\n\u2018is_struct\u2019            \u2018isstruct\u2019             3.4.0\n\u2018is_symmetric\u2019         \u2018issymmetric\u2019          3.4.0\n\u2018is_vector\u2019            \u2018isvector\u2019             3.4.0\n\u2018lognormal_cdf\u2019        \u2018logncdf\u2019              3.4.0\n\u2018lognormal_inv\u2019        \u2018logninv\u2019              3.4.0\n\u2018lognormal_pdf\u2019        \u2018lognpdf\u2019              3.4.0\n\u2018lognormal_rnd\u2019        \u2018lognrnd\u2019              3.4.0\n\u2018meshdom\u2019              \u2018meshgrid\u2019             3.4.0\n\u2018normal_cdf\u2019           \u2018normcdf\u2019              3.4.0\n\u2018normal_inv\u2019           \u2018norminv\u2019              3.4.0\n\u2018normal_pdf\u2019           \u2018normpdf\u2019              3.4.0\n\u2018normal_rnd\u2019           \u2018normrnd\u2019              3.4.0\n\u2018pascal_cdf\u2019           \u2018nbincdf\u2019              3.4.0\n\u2018pascal_inv\u2019           \u2018nbininv\u2019              3.4.0\n\u2018pascal_pdf\u2019           \u2018nbinpdf\u2019              3.4.0\n\u2018pascal_rnd\u2019           \u2018nbinrnd\u2019              3.4.0\n\u2018poisson_cdf\u2019          \u2018poisscdf\u2019             3.4.0\n\u2018poisson_inv\u2019          \u2018poissinv\u2019             3.4.0\n\u2018poisson_pdf\u2019          \u2018poisspdf\u2019             3.4.0\n\u2018poisson_rnd\u2019          \u2018poissrnd\u2019             3.4.0\n\u2018polyinteg\u2019            \u2018polyint\u2019              3.4.0\n\u2018struct_contains\u2019      \u2018isfield\u2019              3.4.0\n\u2018struct_elements\u2019      \u2018fieldnames\u2019           3.4.0\n\u2018t_cdf\u2019                \u2018tcdf\u2019                 3.4.0\n\u2018t_inv\u2019                \u2018tinv\u2019                 3.4.0\n\u2018t_pdf\u2019                \u2018tpdf\u2019                 3.4.0\n\u2018t_rnd\u2019                \u2018trnd\u2019                 3.4.0\n\u2018uniform_cdf\u2019          \u2018unifcdf\u2019              3.4.0\n\u2018uniform_inv\u2019          \u2018unifinv\u2019              3.4.0\n\u2018uniform_pdf\u2019          \u2018unifpdf\u2019              3.4.0\n\u2018uniform_rnd\u2019          \u2018unifrnd\u2019              3.4.0\n\u2018weibull_cdf\u2019          \u2018wblcdf\u2019               3.4.0\n\u2018weibull_inv\u2019          \u2018wblinv\u2019               3.4.0\n\u2018weibull_pdf\u2019          \u2018wblpdf\u2019               3.4.0\n\u2018weibull_rnd\u2019          \u2018wblrnd\u2019               3.4.0\n\u2018wiener_rnd\u2019           \u2018wienrnd\u2019              3.4.0\n\u2018create_set\u2019           \u2018unique\u2019               3.6.0\n\u2018dmult\u2019                \u2018diag (A) * B\u2019         3.6.0\n\u2018iscommand\u2019            None                   3.6.0\n\u2018israwcommand\u2019         None                   3.6.0\n\u2018lchol\u2019                \u2018chol (...,            3.6.0\n                       \"lower\")\u2019\n\u2018loadimage\u2019            \u2018load\u2019 or \u2018imread\u2019     3.6.0\n\u2018mark_as_command\u2019      None                   3.6.0\n\u2018mark_as_rawcommand\u2019   None                   3.6.0\n\u2018spatan2\u2019              \u2018atan2\u2019                3.6.0\n\u2018spchol\u2019               \u2018chol\u2019                 3.6.0\n\u2018spchol2inv\u2019           \u2018chol2inv\u2019             3.6.0\n\u2018spcholinv\u2019            \u2018cholinv\u2019              3.6.0\n\u2018spcumprod\u2019            \u2018cumprod\u2019              3.6.0\n\u2018spcumsum\u2019             \u2018cumsum\u2019               3.6.0\n\u2018spdet\u2019                \u2018det\u2019                  3.6.0\n\u2018spdiag\u2019               \u2018sparse (diag          3.6.0\n                       (...))\u2019\n\u2018spfind\u2019               \u2018find\u2019                 3.6.0\n\u2018sphcat\u2019               \u2018horzcat\u2019              3.6.0\n\u2018spinv\u2019                \u2018inv\u2019                  3.6.0\n\u2018spkron\u2019               \u2018kron\u2019                 3.6.0\n\u2018splchol\u2019              \u2018chol (...,            3.6.0\n                       \"lower\")\u2019\n\u2018split\u2019                \u2018char (strsplit (s,    3.6.0\n                       t))\u2019\n\u2018splu\u2019                 \u2018lu\u2019                   3.6.0\n\u2018spmax\u2019                \u2018max\u2019                  3.6.0\n\u2018spmin\u2019                \u2018min\u2019                  3.6.0\n\u2018spprod\u2019               \u2018prod\u2019                 3.6.0\n\u2018spqr\u2019                 \u2018qr\u2019                   3.6.0\n\u2018spsum\u2019                \u2018sum\u2019                  3.6.0\n\u2018spsumsq\u2019              \u2018sumsq\u2019                3.6.0\n\u2018spvcat\u2019               \u2018vertcat\u2019              3.6.0\n\u2018str2mat\u2019              \u2018char\u2019                 3.6.0\n\u2018unmark_command\u2019       None                   3.6.0\n\u2018unmark_rawcommand\u2019    None                   3.6.0\n\u2018autocor\u2019              Octave-Forge signal    3.8.0\n                       pkg, \u2018xcor\u2019\n\u2018autocov\u2019              Octave-Forge signal    3.8.0\n                       pkg, \u2018xcov\u2019\n\u2018betai\u2019                \u2018betainc\u2019              3.8.0\n\u2018cellidx\u2019              \u2018ismember\u2019             3.8.0\n\u2018cquad\u2019                \u2018quadcc\u2019               3.8.0\n\u2018dispatch\u2019             None                   3.8.0\n\u2018fstat\u2019                \u2018stat\u2019                 3.8.0\n\u2018gammai\u2019               \u2018gammainc\u2019             3.8.0\n\u2018glpkmex\u2019              \u2018glpk\u2019                 3.8.0\n\u2018is_duplicate_entry\u2019   \u2018unique\u2019               3.8.0\n\u2018is_global\u2019            \u2018isglobal\u2019             3.8.0\n\u2018krylovb\u2019              \u2018[Uret, ~, Ucols] =    3.8.0\n                       krylov (...)\u2019\n\u2018perror\u2019               None                   3.8.0\n\u2018replot\u2019               \u2018refresh\u2019              3.8.0\n\u2018saveimage\u2019            \u2018imwrite\u2019              3.8.0\n\u2018setstr\u2019               \u2018char\u2019                 3.8.0\n\u2018strerror\u2019             None                   3.8.0\n\u2018values\u2019               \u2018unique\u2019               3.8.0\n\u2018cut\u2019                  \u2018histc\u2019                4.0.0\n\u2018cor\u2019                  \u2018corr\u2019                 4.0.0\n\u2018corrcoef\u2019             \u2018corr\u2019                 4.0.0\n\u2018__error_text__\u2019       \u2018lasterr\u2019              4.0.0\n\u2018error_text\u2019           \u2018lasterr\u2019              4.0.0\n\u2018polyderiv\u2019            \u2018polyder\u2019              4.0.0\n\u2018shell_cmd\u2019            \u2018system\u2019               4.0.0\n\u2018studentize\u2019           \u2018zscore\u2019               4.0.0\n\u2018sylvester_matrix\u2019     \u2018hadamard (2^k)\u2019       4.0.0\n\n\u001f\nFile: octave.info,  Node: Trouble,  Next: Installation,  Prev: Obsolete Functions,  Up: Top\n\nAppendix D Known Causes of Trouble\n**********************************\n\nThis section describes known problems that affect users of Octave.  Most\nof these are not Octave bugs per se\u2014if they were, we would fix them.\nBut the result for a user may be like the result of a bug.\n\n   Some of these problems are due to bugs in other software, some are\nmissing features that are too much work to add, and some are places\nwhere people\u2019s opinions differ as to what is best.\n\n* Menu:\n\n* Actual Bugs::                 Bugs we will fix later.\n* Reporting Bugs::\n* How To Get Help with Octave::\n* How to Distinguish Between Octave and Matlab::\n\n\u001f\nFile: octave.info,  Node: Actual Bugs,  Next: Reporting Bugs,  Up: Trouble\n\nD.1 Actual Bugs We Haven\u2019t Fixed Yet\n====================================\n\n   \u2022 Output that comes directly from Fortran functions is not sent\n     through the pager and may appear out of sequence with other output\n     that is sent through the pager.  One way to avoid this is to force\n     pending output to be flushed before calling a function that will\n     produce output from within Fortran functions.  To do this, use the\n     command\n\n          fflush (stdout)\n\n     Another possible workaround is to use the command\n\n          page_screen_output (false);\n\n     to turn the pager off.\n\n   A list of ideas for future enhancements is distributed with Octave.\nSee the file \u2018PROJECTS\u2019 in the top level directory in the source\ndistribution.\n\n\u001f\nFile: octave.info,  Node: Reporting Bugs,  Next: How To Get Help with Octave,  Prev: Actual Bugs,  Up: Trouble\n\nD.2 Reporting Bugs\n==================\n\nYour bug reports play an essential role in making Octave reliable.\n\n   When you encounter a problem, the first thing to do is to see if it\nis already known.  *Note Trouble::.  If it isn\u2019t known, then you should\nreport the problem.\n\n   Reporting a bug may help you by bringing a solution to your problem,\nor it may not.  In any case, the principal function of a bug report is\nto help the entire community by making the next version of Octave work\nbetter.  Bug reports are your contribution to the maintenance of Octave.\n\n   In order for a bug report to serve its purpose, you must include the\ninformation that makes it possible to fix the bug.\n\n* Menu:\n\n* Bug Criteria::\n* Bug Tracker::        Where to submit your bug report.\n* Bug Reporting::      How to report a bug effectively.\n* Sending Patches::    How to send a patch for Octave.\n\n\u001f\nFile: octave.info,  Node: Bug Criteria,  Next: Bug Tracker,  Up: Reporting Bugs\n\nD.2.1 Have You Found a Bug?\n---------------------------\n\nIf you are not sure whether you have found a bug, here are some\nguidelines:\n\n   \u2022 If Octave gets a fatal signal, for any input whatever, that is a\n     bug.  Reliable interpreters never crash.\n\n   \u2022 If Octave produces incorrect results, for any input whatever, that\n     is a bug.\n\n   \u2022 Some output may appear to be incorrect when it is in fact due to a\n     program whose behavior is undefined, which happened by chance to\n     give the desired results on another system.  For example, the range\n     operator may produce different results because of differences in\n     the way floating point arithmetic is handled on various systems.\n\n   \u2022 If Octave produces an error message for valid input, that is a bug.\n\n   \u2022 If Octave does not produce an error message for invalid input, that\n     is a bug.  However, you should note that your idea of \u201cinvalid\n     input\u201d might be my idea of \u201can extension\u201d or \u201csupport for\n     traditional practice\u201d.\n\n   \u2022 If you are an experienced user of programs like Octave, your\n     suggestions for improvement are welcome in any case.\n\n\u001f\nFile: octave.info,  Node: Bug Tracker,  Next: Bug Reporting,  Prev: Bug Criteria,  Up: Reporting Bugs\n\nD.2.2 Where to Report Bugs\n--------------------------\n\nTo report a bug in Octave, submit a bug report to the Octave bug tracker\n<http://bugs.octave.org>.\n\n   *Do not send bug reports to \u2018help-octave\u2019*.  Most users of Octave do\nnot want to receive bug reports.\n\n\u001f\nFile: octave.info,  Node: Bug Reporting,  Next: Sending Patches,  Prev: Bug Tracker,  Up: Reporting Bugs\n\nD.2.3 How to Report Bugs\n------------------------\n\nSubmit bug reports for Octave to the Octave bug tracker\n<http://bugs.octave.org>.\n\n   The fundamental principle of reporting bugs usefully is this: *report\nall the facts*.  If you are not sure whether to state a fact or leave it\nout, state it!\n\n   Often people omit facts because they think they know what causes the\nproblem and they conclude that some details don\u2019t matter.  Thus, you\nmight assume that the name of the variable you use in an example does\nnot matter.  Well, probably it doesn\u2019t, but one cannot be sure.  Perhaps\nthe bug is a stray memory reference which happens to fetch from the\nlocation where that name is stored in memory; perhaps, if the name were\ndifferent, the contents of that location would fool the interpreter into\ndoing the right thing despite the bug.  Play it safe and give a\nspecific, complete example.\n\n   Keep in mind that the purpose of a bug report is to enable someone to\nfix the bug if it is not known.  Always write your bug reports on the\nassumption that the bug is not known.\n\n   Sometimes people give a few sketchy facts and ask, \u201cDoes this ring a\nbell?\u201d This cannot help us fix a bug.  It is better to send a complete\nbug report to begin with.\n\n   Try to make your bug report self-contained.  If we have to ask you\nfor more information, it is best if you include all the previous\ninformation in your response, as well as the information that was\nmissing.\n\n   To enable someone to investigate the bug, you should include all\nthese things:\n\n   \u2022 The version of Octave.  You can get this by noting the version\n     number that is printed when Octave starts, or running it with the\n     \u2018-v\u2019 option.\n\n   \u2022 A complete input file that will reproduce the bug.\n\n     A single statement may not be enough of an example\u2014the bug might\n     depend on other details that are missing from the single statement\n     where the error finally occurs.\n\n   \u2022 The command arguments you gave Octave to execute that example and\n     observe the bug.  To guarantee you won\u2019t omit something important,\n     list all the options.\n\n     If we were to try to guess the arguments, we would probably guess\n     wrong and then we would not encounter the bug.\n\n   \u2022 The type of machine you are using, and the operating system name\n     and version number.\n\n   \u2022 The command-line arguments you gave to the \u2018configure\u2019 command when\n     you installed the interpreter.\n\n   \u2022 A complete list of any modifications you have made to the\n     interpreter source.\n\n     Be precise about these changes\u2014show a context diff for them.\n\n   \u2022 Details of any other deviations from the standard procedure for\n     installing Octave.\n\n   \u2022 A description of what behavior you observe that you believe is\n     incorrect.  For example, \"The interpreter gets a fatal signal,\" or,\n     \"The output produced at line 208 is incorrect.\"\n\n     Of course, if the bug is that the interpreter gets a fatal signal,\n     then one can\u2019t miss it.  But if the bug is incorrect output, we\n     might not notice unless it is glaringly wrong.\n\n     Even if the problem you experience is a fatal signal, you should\n     still say so explicitly.  Suppose something strange is going on,\n     such as, your copy of the interpreter is out of sync, or you have\n     encountered a bug in the C library on your system.  Your copy might\n     crash and the copy here would not.  If you said to expect a crash,\n     then when the interpreter here fails to crash, we would know that\n     the bug was not happening.  If you don\u2019t say to expect a crash,\n     then we would not know whether the bug was happening.  We would not\n     be able to draw any conclusion from our observations.\n\n     Often the observed symptom is incorrect output when your program is\n     run.  Unfortunately, this is not enough information unless the\n     program is short and simple.  It is very helpful if you can include\n     an explanation of the expected output, and why the actual output is\n     incorrect.\n\n   \u2022 If you wish to suggest changes to the Octave source, send them as\n     context diffs.  If you even discuss something in the Octave source,\n     refer to it by context, not by line number, because the line\n     numbers in the development sources probably won\u2019t match those in\n     your sources.\n\n   Here are some things that are not necessary:\n\n   \u2022 A description of the envelope of the bug.\n\n     Often people who encounter a bug spend a lot of time investigating\n     which changes to the input file will make the bug go away and which\n     changes will not affect it.  Such information is usually not\n     necessary to enable us to fix bugs in Octave, but if you can find a\n     simpler example to report _instead_ of the original one, that is a\n     convenience.  Errors in the output will be easier to spot, running\n     under the debugger will take less time, etc.  Most Octave bugs\n     involve just one function, so the most straightforward way to\n     simplify an example is to delete all the function definitions\n     except the one in which the bug occurs.\n\n     However, simplification is not vital; if you don\u2019t want to do this,\n     report the bug anyway and send the entire test case you used.\n\n   \u2022 A patch for the bug.  Patches can be helpful, but if you find a\n     bug, you should report it, even if you cannot send a fix for the\n     problem.\n\n\u001f\nFile: octave.info,  Node: Sending Patches,  Prev: Bug Reporting,  Up: Reporting Bugs\n\nD.2.4 Sending Patches for Octave\n--------------------------------\n\nIf you would like to write bug fixes or improvements for Octave, that is\nvery helpful.  When you send your changes, please follow these\nguidelines to avoid causing extra work for us in studying the patches.\n\n   If you don\u2019t follow these guidelines, your information might still be\nuseful, but using it will take extra work.  Maintaining Octave is a lot\nof work in the best of circumstances, and we can\u2019t keep up unless you do\nyour best to help.\n\n   \u2022 Send an explanation with your changes of what problem they fix or\n     what improvement they bring about.  For a bug fix, just include a\n     copy of the bug report, and explain why the change fixes the bug.\n\n   \u2022 Always include a proper bug report for the problem you think you\n     have fixed.  We need to convince ourselves that the change is right\n     before installing it.  Even if it is right, we might have trouble\n     judging it if we don\u2019t have a way to reproduce the problem.\n\n   \u2022 Include all the comments that are appropriate to help people\n     reading the source in the future understand why this change was\n     needed.\n\n   \u2022 Don\u2019t mix together changes made for different reasons.  Send them\n     _individually_.\n\n     If you make two changes for separate reasons, then we might not\n     want to install them both.  We might want to install just one.\n\n   \u2022 Use \u2018diff -c\u2019 to make your diffs.  Diffs without context are hard\n     for us to install reliably.  More than that, they make it hard for\n     us to study the diffs to decide whether we want to install them.\n     Unified diff format is better than contextless diffs, but not as\n     easy to read as \u2018-c\u2019 format.\n\n     If you have GNU diff, use \u2018diff -cp\u2019, which shows the name of the\n     function that each change occurs in.\n\n   \u2022 Write the change log entries for your changes.\n\n     Read the \u2018ChangeLog\u2019 file to see what sorts of information to put\n     in, and to learn the style that we use.  The purpose of the change\n     log is to show people where to find what was changed.  So you need\n     to be specific about what functions you changed; in large\n     functions, it\u2019s often helpful to indicate where within the function\n     the change was made.\n\n     On the other hand, once you have shown people where to find the\n     change, you need not explain its purpose.  Thus, if you add a new\n     function, all you need to say about it is that it is new.  If you\n     feel that the purpose needs explaining, it probably does\u2014but the\n     explanation will be much more useful if you put it in comments in\n     the code.\n\n     If you would like your name to appear in the header line for who\n     made the change, send us the header line.\n\n\u001f\nFile: octave.info,  Node: How To Get Help with Octave,  Next: How to Distinguish Between Octave and Matlab,  Prev: Reporting Bugs,  Up: Trouble\n\nD.3 How To Get Help with Octave\n===============================\n\nThe mailing list <help@octave.org> exists for the discussion of matters\nrelated to using and installing Octave.  If would like to join the\ndiscussion, please send a short note to <help-request@octave.org>.\n\n   *Please do not* send requests to be added or removed from the mailing\nlist, or other administrative trivia to the list itself.\n\n   If you think you have found a bug in Octave or in the installation\nprocedure, however, you should submit a complete bug report to the\nOctave bug tracker at <http://bugs.octave.org>.  But before you submit a\nbug report, please read <http://www.octave.org/bugs.html> to learn how\nto submit a useful bug report.\n\n\u001f\nFile: octave.info,  Node: How to Distinguish Between Octave and Matlab,  Prev: How To Get Help with Octave,  Up: Trouble\n\nD.4 How to Distinguish Between Octave and Matlab\n================================================\n\nOctave and MATLAB are very similar, but handle Java slightly different.\nTherefore it may be necessary to detect the environment and use the\nappropriate functions.  The following function can be used to detect the\nenvironment.  Due to the persistent variable it can be called repeatedly\nwithout a heavy performance hit.\n\n   Example:\n\n     %%\n     %% Return: true if the environment is Octave.\n     %%\n     function retval = isOctave\n       persistent cacheval;  % speeds up repeated calls\n\n       if isempty (cacheval)\n         cacheval = (exist (\"OCTAVE_VERSION\", \"builtin\") > 0);\n       end\n\n       retval = cacheval;\n     end\n\n\u001f\nFile: octave.info,  Node: Installation,  Next: Grammar and Parser,  Prev: Trouble,  Up: Top\n\nAppendix E Installing Octave\n****************************\n\nThe procedure for installing Octave from source on a Unix-like system is\ndescribed next.  Building on other platforms will follow similar steps.\nNote that this description applies to Octave releases.  Building the\ndevelopment sources from the Mercurial archive requires additional steps\nas described in the development source itself.\n\n* Menu:\n\n* Build Dependencies::\n* Running Configure and Make::\n* Compiling Octave with 64-bit Indexing::\n* Installation Problems::\n\n\u001f\nFile: octave.info,  Node: Build Dependencies,  Next: Running Configure and Make,  Up: Installation\n\nE.1 Build Dependencies\n======================\n\nOctave is a fairly large program with many build dependencies.  You may\nbe able to find pre-packaged versions of the dependencies distributed as\npart of your system, or you may have to build some or all of them\nyourself.\n\n* Menu:\n\n* Obtaining the Dependencies Automatically::\n* Build Tools::\n* External Packages::\n\n\u001f\nFile: octave.info,  Node: Obtaining the Dependencies Automatically,  Next: Build Tools,  Up: Build Dependencies\n\nE.1.1 Obtaining the Dependencies Automatically\n----------------------------------------------\n\nOn some systems you can obtain many of Octave\u2019s build dependencies\nautomatically.  The commands for doing this vary by system.  Similarly,\nthe names of pre-compiled packages vary by system and do not always\nmatch exactly the names listed in *note Build Tools:: and *note External\nPackages::.\n\n   You will usually need the development version of an external\ndependency so that you get the libraries and header files for building\nsoftware, not just for running already compiled programs.  These\npackages typically have names that end with the suffix \u2018-dev\u2019 or\n\u2018-devel\u2019.\n\n   On systems with \u2018apt-get\u2019 (Debian, Ubuntu, etc.), you may be able to\ninstall most of the tools and external packages using a command similar\nto\n\n     apt-get build-dep octave\n\nThe specific package name may be \u2018octave3.2\u2019 or \u2018octave3.4\u2019.  The set of\nrequired tools and external dependencies does not change frequently, so\nit is not important that the version match exactly, but you should use\nthe most recent one available.\n\n   On systems with \u2018yum\u2019 (Fedora, Red Hat, etc.), you may be able to\ninstall most of the tools and external packages using a command similar\nto\n\n     yum-builddep octave\n\nThe \u2018yum-builddep\u2019 utility is part of the \u2018yum-utils\u2019 package.\n\n   For either type of system, the package name may include a version\nnumber.  The set of required tools and external dependencies does not\nchange frequently, so it is not important that the version exactly match\nthe version you are installing, but you should use the most recent one\navailable.\n\n\u001f\nFile: octave.info,  Node: Build Tools,  Next: External Packages,  Prev: Obtaining the Dependencies Automatically,  Up: Build Dependencies\n\nE.1.2 Build Tools\n-----------------\n\nThe following tools are required:\n\nC++, C, and Fortran compilers\n     The Octave sources are primarily written in C++, but some portions\n     are also written in C and Fortran.  The Octave sources are intended\n     to be portable.  Recent versions of the GNU compiler collection\n     (GCC) should work (<http://gcc.gnu.org>).  If you use GCC, you\n     should avoid mixing versions.  For example, be sure that you are\n     not using the obsolete \u2018g77\u2019 Fortran compiler with modern versions\n     of \u2018gcc\u2019 and \u2018g++\u2019.\n\nGNU Make\n     Tool for building software (<http://www.gnu.org/software/make>).\n     Octave\u2019s build system requires GNU Make.  Other versions of Make\n     will not work.  Fortunately, GNU Make is highly portable and easy\n     to install.\n\nAWK, sed, and other Unix utilities\n     Basic Unix system utilities are required for building Octave.  All\n     will be available with any modern Unix system and also on Windows\n     with either Cygwin or MinGW and MSYS.\n\n   Additionally, the following tools may be needed:\n\nBison\n     Parser generator (<http://www.gnu.org/software/bison>).  You will\n     need Bison if you modify the \u2018oct-parse.yy\u2019 source file or if you\n     delete the files that are generated from it.\n\nFlex\n     Lexer analyzer (<http://www.gnu.org/software/flex>).  You will need\n     Flex if you modify the \u2018lex.ll\u2019 source file or if you delete the\n     files that are generated from it.\n\nAutoconf\n     Package for software configuration\n     (<http://www.gnu.org/software/autoconf>).  Autoconf is required if\n     you modify Octave\u2019s \u2018configure.ac\u2019 file or other files that it\n     requires.\n\nAutomake\n     Package for Makefile generation\n     (<http://www.gnu.org/software/automake>).  Automake is required if\n     you modify Octave\u2019s \u2018Makefile.am\u2019 files or other files that they\n     depend on.\n\nLibtool\n     Package for building software libraries\n     (<http://www.gnu.org/software/libtool>).  Libtool is required by\n     Automake.\n\ngperf\n     Perfect hash function generator\n     (<http://www.gnu.org/software/gperf>).  You will need gperf if you\n     modify the \u2018octave.gperf\u2019 file or if you delete the file that is\n     generated from it.\n\nTexinfo\n     Package for generating online and print documentation\n     (<http://www.gnu.org/software/texinfo>).  You will need Texinfo to\n     build Octave\u2019s documentation or if you modify the documentation\n     source files or the docstring of any Octave function.\n\n\u001f\nFile: octave.info,  Node: External Packages,  Prev: Build Tools,  Up: Build Dependencies\n\nE.1.3 External Packages\n-----------------------\n\nThe following external packages are required:\n\nBLAS\n     Basic Linear Algebra Subroutine library.  Accelerated BLAS\n     libraries such as OpenBLAS (<http://www.openblas.net/>) or ATLAS\n     (<http://math-atlas.sourceforge.net>) are recommended for best\n     performance.  The reference implementation\n     (<http://www.netlib.org/blas>) is slow, unmaintained, and suffers\n     from certain bugs in corner case inputs.\n\nLAPACK\n     Linear Algebra Package (<http://www.netlib.org/lapack>).\n\nPCRE\n     The Perl Compatible Regular Expression library\n     (<http://www.pcre.org>).\n\n   The following external package is optional but strongly recommended:\n\nGNU Readline\n     Command-line editing library (<www.gnu.org/s/readline>).\n\n   If you wish to build Octave without GNU readline installed, you must\nuse the \u2018--disable-readline\u2019 option when running the configure script.\n\n   The following external software packages are optional but\nrecommended:\n\nARPACK\n     Library for the solution of large-scale eigenvalue problems\n     (<http://forge.scilab.org/index.php/p/arpack-ng>).  ARPACK is\n     required to provide the functions \u2018eigs\u2019 and \u2018svds\u2019.\n\ncURL\n     Library for transferring data with URL syntax\n     (<http://curl.haxx.se>).  cURL is required to provide the \u2018urlread\u2019\n     and \u2018urlwrite\u2019 functions and the \u2018ftp\u2019 class.\n\nFFTW3\n     Library for computing discrete Fourier transforms\n     (<http://www.fftw.org>).  FFTW3 is used to provide better\n     performance for functions that compute discrete Fourier transforms\n     (\u2018fft\u2019, \u2018ifft\u2019, \u2018fft2\u2019, etc.)\n\nFLTK\n     Portable GUI toolkit (<http://www.fltk.org>).  FLTK is currently\n     used to provide windows for Octave\u2019s OpenGL-based graphics\n     functions.\n\nfontconfig\n     Library for configuring and customizing font access\n     (<http://www.freedesktop.org/wiki/Software/fontconfig>).\n     Fontconfig is used to manage fonts for Octave\u2019s OpenGL-based\n     graphics functions.\n\nFreeType\n     Portable font engine (<http://www.freetype.org>).  FreeType is used\n     to perform font rendering for Octave\u2019s OpenGL-based graphics\n     functions.\n\nGLPK\n     GNU Linear Programming Kit (<http://www.gnu.org/software/glpk>).\n     GPLK is required for the function \u2018glpk\u2019.\n\ngl2ps\n     OpenGL to PostScript printing library\n     (<http://www.geuz.org/gl2ps/>).  gl2ps is required for printing\n     when using OpenGL-based graphics toolkits (currently either FLTK or\n     Qt).\n\ngnuplot\n     Interactive graphics program (<http://www.gnuplot.info>).  gnuplot\n     is currently the default graphics renderer for Octave.\n\nGraphicsMagick++\n     Image processing library (<http://www.graphicsmagick.org>).\n     GraphicsMagick++ is used to provide the \u2018imread\u2019 and \u2018imwrite\u2019\n     functions.\n\nHDF5\n     Library for manipulating portable data files\n     (<http://www.hdfgroup.org/HDF5>).  HDF5 is required for Octave\u2019s\n     \u2018load\u2019 and \u2018save\u2019 commands to read and write HDF data files.\n\nJava Development Kit\n     Java programming language compiler and libraries.  The OpenJDK free\n     software implementation is recommended\n     (<http://openjdk.java.net/>), although other JDK implementations\n     may work.  Java is required to be able to call Java functions from\n     within Octave.\n\nLLVM\n     Compiler framework, (<http://www.llvm.org>).  LLVM is required for\n     Octave\u2019s experimental just-in-time (JIT) compilation for speeding\n     up the interpreter.\n\nOpenGL\n     API for portable 2-D and 3-D graphics (<http://www.opengl.org>).\n     An OpenGL implementation is required to provide Octave\u2019s\n     OpenGL-based graphics functions.  Octave\u2019s OpenGL-based graphics\n     functions usually outperform the gnuplot-based graphics functions\n     because plot data can be rendered directly instead of sending data\n     and commands to gnuplot for interpretation and rendering.\n\nQhull\n     Computational geometry library (<http://www.qhull.org>).  Qhull is\n     required to provide the functions \u2018convhull\u2019, \u2018convhulln\u2019,\n     \u2018delaunay\u2019, \u2018delaunayn\u2019, \u2018voronoi\u2019, and \u2018voronoin\u2019.\n\nQRUPDATE\n     QR factorization updating library\n     (<http://sourceforge.net/projects/qrupdate>).  QRUPDATE is used to\n     provide improved performance for the functions \u2018qrdelete\u2019,\n     \u2018qrinsert\u2019, \u2018qrshift\u2019, and \u2018qrupdate\u2019.\n\nQScintilla\n     Source code highlighter and manipulator; a Qt port of Scintilla\n     (<http://www.riverbankcomputing.co.uk/software/qscintilla>).\n     QScintilla is used for syntax highlighting and code completion in\n     the GUI.\n\nQt\n     GUI and utility libraries ().  Qt is required for building the GUI.\n     It is a large framework, but the only components required are the\n     GUI, core, and network modules.\n\nSuiteSparse\n     Sparse matrix factorization library\n     (<http://www.cise.ufl.edu/research/sparse/SuiteSparse>).\n     SuiteSparse is required to provide sparse matrix factorizations and\n     solution of linear equations for sparse systems.\n\nzlib\n     Data compression library (<http://zlib.net>).  The zlib library is\n     required for Octave\u2019s \u2018load\u2019 and \u2018save\u2019 commands to handle\n     compressed data, including MATLAB v5 MAT files.\n\n\u001f\nFile: octave.info,  Node: Running Configure and Make,  Next: Compiling Octave with 64-bit Indexing,  Prev: Build Dependencies,  Up: Installation\n\nE.2 Running Configure and Make\n==============================\n\n   \u2022 Run the shell script \u2018configure\u2019.  This will determine the features\n     your system has (or doesn\u2019t have) and create a file named\n     \u2018Makefile\u2019 from each of the files named \u2018Makefile.in\u2019.\n\n     Here is a summary of the configure options that are most frequently\n     used when building Octave:\n\n     \u2018--help\u2019\n          Print a summary of the options recognized by the configure\n          script.\n\n     \u2018--prefix=PREFIX\u2019\n          Install Octave in subdirectories below PREFIX.  The default\n          value of PREFIX is \u2018/usr/local\u2019.\n\n     \u2018--srcdir=DIR\u2019\n          Look for Octave sources in the directory DIR.\n\n     \u2018--enable-64\u2019\n          This is an *experimental* option to enable Octave to use\n          64-bit integers for array dimensions and indexing on 64-bit\n          platforms.  You probably don\u2019t want to use this option unless\n          you know what you are doing.  *Note Compiling Octave with\n          64-bit Indexing::, for more details about building Octave with\n          this option.\n\n     \u2018--enable-bounds-check\u2019\n          Enable bounds checking for indexing operators in the internal\n          array classes.  This option is primarily used for debugging\n          Octave.  Building Octave with this option has a negative\n          impact on performance and is not recommended for general use.\n\n     \u2018--disable-docs\u2019\n          Disable building all forms of the documentation (Info, PDF,\n          HTML). The default is to build documentation, but your system\n          will need functioning Texinfo and TeX installs for this to\n          succeed.\n\n     \u2018--enable-float-truncate\u2019\n          This option allows for truncation of intermediate floating\n          point results in calculations.  It is only necessary for\n          certain platforms.\n\n     \u2018--enable-readline\u2019\n          Use the readline library to provide for editing of the command\n          line in terminal environments.  This option is on by default.\n\n     \u2018--enable-shared\u2019\n          Create shared libraries (this is the default).  If you are\n          planning to use the dynamic loading features, you will\n          probably want to use this option.  It will make your \u2018.oct\u2019\n          files much smaller and on some systems it may be necessary to\n          build shared libraries in order to use dynamically linked\n          functions.\n\n          You may also want to build a shared version of \u2018libstdc++\u2019, if\n          your system doesn\u2019t already have one.\n\n     \u2018--enable-dl\u2019\n          Use \u2018dlopen\u2019 and friends to make Octave capable of dynamically\n          linking externally compiled functions (this is the default if\n          \u2018--enable-shared\u2019 is specified).  This option only works on\n          systems that actually have these functions.  If you plan on\n          using this feature, you should probably also use\n          \u2018--enable-shared\u2019 to reduce the size of your \u2018.oct\u2019 files.\n\n     \u2018--with-blas=<lib>\u2019\n          By default, configure looks for the best BLAS matrix libraries\n          on your system, including optimized implementations such as\n          the free ATLAS 3.0, as well as vendor-tuned libraries.  (The\n          use of an optimized BLAS will generally result in\n          several-times faster matrix operations.)  Use this option to\n          specify a particular BLAS library that Octave should use.\n\n     \u2018--with-lapack=<lib>\u2019\n          By default, configure looks for the best LAPACK matrix\n          libraries on your system, including optimized implementations\n          such as the free ATLAS 3.0, as well as vendor-tuned libraries.\n          (The use of an optimized LAPACK will generally result in\n          several-times faster matrix operations.)  Use this option to\n          specify a particular LAPACK library that Octave should use.\n\n     \u2018--with-magick=<lib>\u2019\n          Select the library to use for image I/O.  The two possible\n          values are \"GraphicsMagick\" (default) or \"ImageMagick\".\n\n     \u2018--with-sepchar=<char>\u2019\n          Use <char> as the path separation character.  This option can\n          help when running Octave on non-Unix systems.\n\n     \u2018--without-amd\u2019\n          Don\u2019t use AMD, disable some sparse matrix functionality.\n\n     \u2018--without-camd\u2019\n          Don\u2019t use CAMD, disable some sparse matrix functionality.\n\n     \u2018--without-colamd\u2019\n          Don\u2019t use COLAMD, disable some sparse matrix functionality.\n\n     \u2018--without-ccolamd\u2019\n          Don\u2019t use CCOLAMD, disable some sparse matrix functionality.\n\n     \u2018--without-cholmod\u2019\n          Don\u2019t use CHOLMOD, disable some sparse matrix functionality.\n\n     \u2018--without-curl\u2019\n          Don\u2019t use the cURL library, disable the ftp objects, \u2018urlread\u2019\n          and \u2018urlwrite\u2019 functions.\n\n     \u2018--without-cxsparse\u2019\n          Don\u2019t use CXSPARSE, disable some sparse matrix functionality.\n\n     \u2018--without-fftw3\u2019\n          Use the included FFTPACK library for computing Fast Fourier\n          Transforms instead of the FFTW3 library.\n\n     \u2018--without-fftw3f\u2019\n          Use the included FFTPACK library for computing Fast Fourier\n          Transforms instead of the FFTW3 library when operating on\n          single precision (float) values.\n\n     \u2018--without-glpk\u2019\n          Don\u2019t use the GLPK library for linear programming.\n\n     \u2018--without-hdf5\u2019\n          Don\u2019t use the HDF5 library, disable reading and writing of\n          HDF5 files.\n\n     \u2018--without-opengl\u2019\n          Don\u2019t use OpenGL, disable native graphics toolkit for\n          plotting.  You will need \u2018gnuplot\u2019 installed in order to make\n          plots.\n\n     \u2018--without-qhull\u2019\n          Don\u2019t use Qhull, disable \u2018delaunay\u2019, \u2018convhull\u2019, and related\n          functions.\n\n     \u2018--without-qrupdate\u2019\n          Don\u2019t use QRUPDATE, disable QR and Cholesky update functions.\n\n     \u2018--without-umfpack\u2019\n          Don\u2019t use UMFPACK, disable some sparse matrix functionality.\n\n     \u2018--without-zlib\u2019\n          Don\u2019t use the zlib library, disable data file compression and\n          support for recent MAT file formats.\n\n     \u2018--without-framework-carbon\u2019\n          Don\u2019t use framework Carbon headers, libraries, or specific\n          source code even if the configure test succeeds (the default\n          is to use Carbon framework if available).  This is a platform\n          specific configure option for Mac systems.\n\n     \u2018--without-framework-opengl\u2019\n          Don\u2019t use framework OpenGL headers, libraries, or specific\n          source code even if the configure test succeeds.  If this\n          option is given then OpenGL headers and libraries in standard\n          system locations are tested (the default value is\n          \u2018--with-framework-opengl\u2019).  This is a platform specific\n          configure option for Mac systems.\n\n     See the file \u2018INSTALL\u2019 for more general information about the\n     command line options used by configure.  That file also contains\n     instructions for compiling in a directory other than the one where\n     the source is located.\n\n   \u2022 Run make.\n\n     You will need a recent version of GNU Make as Octave relies on\n     certain features not generally available in all versions of make.\n     Modifying Octave\u2019s makefiles to work with other make programs is\n     probably not worth your time; instead, we simply recommend\n     installing GNU Make.\n\n     There are currently three options for plotting in Octave: the\n     external program gnuplot, the internal graphics engine using OpenGL\n     coupled with either FLTK or Qt widgets.  Gnuplot is a\n     command-driven interactive function plotting program.\n\n     To compile Octave, you will need a recent version of \u2018g++\u2019 or other\n     ANSI C++ compiler.  In addition, you will need a Fortran 77\n     compiler or \u2018f2c\u2019.  If you use \u2018f2c\u2019, you will need a script like\n     \u2018fort77\u2019 that works like a normal Fortran compiler by combining\n     \u2018f2c\u2019 with your C compiler in a single script.\n\n     If you plan to modify the parser you will also need GNU \u2018bison\u2019 and\n     \u2018flex\u2019.  If you modify the documentation, you will need GNU\n     Texinfo.\n\n     GNU Make, \u2018gcc\u2019 (and \u2018libstdc++\u2019), \u2018gnuplot\u2019, \u2018bison\u2019, \u2018flex\u2019, and\n     Texinfo are all available from many anonymous ftp archives.  The\n     primary site is <ftp.gnu.org>, but it is often very busy.  A list\n     of sites that mirror the software on <ftp.gnu.org> is available by\n     anonymous ftp from <ftp://ftp.gnu.org/pub/gnu/GNUinfo/FTP>.\n\n     Octave requires approximately 1.4 GB of disk storage to unpack and\n     compile from source (significantly less, 400 MB, if you don\u2019t\n     compile with debugging symbols).  To compile without debugging\n     symbols try the command\n\n          make CFLAGS=-O CXXFLAGS=-O LDFLAGS=\n\n     instead of just \u2018make\u2019.\n\n   \u2022 If you encounter errors while compiling Octave, first see *note\n     Installation Problems:: for a list of known problems and if there\n     is a workaround or solution for your problem.  If not, see *note\n     Trouble:: for information about how to report bugs.\n\n   \u2022 Once you have successfully compiled Octave, run \u2018make install\u2019.\n\n     This will install a copy of Octave, its libraries, and its\n     documentation in the destination directory.  As distributed, Octave\n     is installed in the following directories.  In the table below,\n     PREFIX defaults to \u2018/usr/local\u2019, VERSION stands for the current\n     version number of the interpreter, and ARCH is the type of computer\n     on which Octave is installed (for example, \u2018i586-unknown-gnu\u2019).\n\n     \u2018PREFIX/bin\u2019\n          Octave and other binaries that people will want to run\n          directly.\n\n     \u2018PREFIX/lib/octave-VERSION\u2019\n          Libraries like liboctave.a and liboctinterp.a.\n\n     \u2018PREFIX/octave-VERSION/include/octave\u2019\n          Include files distributed with Octave.\n\n     \u2018PREFIX/share\u2019\n          Architecture-independent data files.\n\n     \u2018PREFIX/share/man/man1\u2019\n          Unix-style man pages describing Octave.\n\n     \u2018PREFIX/share/info\u2019\n          Info files describing Octave.\n\n     \u2018PREFIX/share/octave/VERSION/m\u2019\n          Function files distributed with Octave.  This includes the\n          Octave version, so that multiple versions of Octave may be\n          installed at the same time.\n\n     \u2018PREFIX/libexec/octave/VERSION/exec/ARCH\u2019\n          Executables to be run by Octave rather than the user.\n\n     \u2018PREFIX/lib/octave/VERSION/oct/ARCH\u2019\n          Object files that will be dynamically loaded.\n\n     \u2018PREFIX/share/octave/VERSION/imagelib\u2019\n          Image files that are distributed with Octave.\n\n\u001f\nFile: octave.info,  Node: Compiling Octave with 64-bit Indexing,  Next: Installation Problems,  Prev: Running Configure and Make,  Up: Installation\n\nE.3 Compiling Octave with 64-bit Indexing\n=========================================\n\nNote: the following only applies to systems that have 64-bit pointers.\nConfiguring Octave with \u2018--enable-64\u2019 cannot magically make a 32-bit\nsystem have a 64-bit address space.\n\n   On 64-bit systems, Octave is limited to (approximately) the following\narray sizes when using the default 32-bit indexing mode:\n\n     double:         16 GB\n     single:          8 GB\n     uint64, int64:  16 GB\n     uint32, int32:   8 GB\n     uint16, int16:   4 GB\n     uint8, int8:     2 GB\n\n   In each case, the limit is really (approximately) 2^{31} elements\nbecause of the default type of the value used for indexing arrays\n(signed 32-bit integer, corresponding to the size of a Fortran INTEGER\nvalue).\n\n   Trying to create larger arrays will produce the following error:\n\n     octave:1> a = zeros (1024*1024*1024*3, 1, 'int8');\n     error: memory exhausted or requested size too large\n            for range of Octave's index type --\n            trying to return to prompt\n\nYou will obtain this error even if your system has enough memory to\ncreate this array (4 GB in the above case).\n\n   To use arrays larger than 2 GB, Octave has to be configured with the\noption \u2018--enable-64\u2019.  This option is experimental and you are\nencouraged to submit bug reports if you find a problem.  With this\noption, Octave will use 64-bit integers internally for array dimensions\nand indexing.  However, all numerical libraries used by Octave will\n*also* need to use 64-bit integers for array dimensions and indexing.\nIn most cases, this means they will need to be compiled from source\nsince most (all?)  distributions which package these libraries compile\nthem with the default Fortran integer size, which is normally 32-bits\nwide.\n\n   The following instructions were tested with the development version\nof Octave and GCC 4.3.4 on an x86_64 Debian system.\n\n   The versions listed below are the versions used for testing.  If\nnewer versions of these packages are available, you should try to use\nthem, although there may be some differences.\n\n   All libraries and header files will be installed in subdirectories of\n\u2018$prefix64\u2019 (you must choose the location of this directory).\n\n   \u2022 BLAS and LAPACK (<http://www.netlib.org/lapack>)\n\n     Reference versions for both libraries are included in the reference\n     LAPACK 3.2.1 distribution from <netlib.org>.\n\n        \u2212 Copy the file \u2018make.inc.example\u2019 and name it \u2018make.inc\u2019.  The\n          options \u2018-fdefault-integer-8\u2019 and \u2018-fPIC\u2019 (on 64-bit CPU) have\n          to be added to the variable \u2018OPTS\u2019 and \u2018NOOPT\u2019.\n\n        \u2212 Once you have compiled this library make sure that you use it\n          for compiling Suite Sparse and Octave.  In the following we\n          assume that you installed the LAPACK library as\n          $prefix64/lib/liblapack.a.\n\n   \u2022 QRUPDATE (<http://sourceforge.net/projects/qrupdate>)\n\n     In the \u2018Makeconf\u2019 file:\n\n        \u2212 Add \u2018-fdefault-integer-8\u2019 to \u2018FFLAGS\u2019.\n\n        \u2212 Adjust the BLAS and LAPACK variables as needed if your 64-bit\n          aware BLAS and LAPACK libraries are in a non-standard\n          location.\n\n        \u2212 Set \u2018PREFIX\u2019 to the top-level directory of your install tree.\n\n        \u2212 Run \u2018make solib\u2019 to make a shared library.\n\n        \u2212 Run \u2018make install\u2019 to install the library.\n\n   \u2022 SuiteSparse (<http://www.cise.ufl.edu/research/sparse/SuiteSparse>)\n\n     Pass the following options to \u2018make\u2019 to enable 64-bit integers for\n     BLAS library calls.  On 64-bit Windows systems, use\n     \u2018-DLONGBLAS=\"long long\"\u2019 instead.\n\n          CFLAGS='-DLONGBLAS=long'\n          CXXFLAGS='-DLONGBLAS=long'\n\n     The SuiteSparse makefiles don\u2019t generate shared libraries.  On some\n     systems, you can generate them by doing something as simple as\n\n          top=$(pwd)\n          for f in *.a; do\n            mkdir tmp\n            cd tmp\n            ar vx ../$f\n            gcc -shared -o ../${f%%.a}.so *.o\n            cd $top\n            rm -rf tmp\n          done\n\n     Other systems may require a different solution.\n\n   \u2022 ARPACK (http://forge.scilab.org/index.php/p/arpack-ng/)\n\n        \u2212 Add \u2018-fdefault-integer-8\u2019 to \u2018FFLAGS\u2019 when running configure.\n\n        \u2212 Run \u2018make\u2019 to build the library.\n\n        \u2212 Run \u2018make install\u2019 to install the library.\n\n   \u2022 ATLAS instead of reference BLAS and LAPACK\n\n     Suggestions on how to compile ATLAS would be most welcome.\n\n   \u2022 GLPK\n\n   \u2022 Qhull (<http://www.qhull.org>)\n\n     Both GLPK and Qhull use \u2018int\u2019 internally so maximum problem sizes\n     may be limited.\n\n   \u2022 Octave\n\n     Octave\u2019s 64-bit index support is activated with the configure\n     option \u2018--enable-64\u2019.\n\n          ./configure \\\n            LD_LIBRARY_PATH=\"$prefix64/lib\" \\\n            CPPFLAGS=\"-I$prefix64/include\" LDFLAGS=\"-L$prefix64/lib\" \\\n            --enable-64\n\n     You must ensure that all Fortran sources except those in the\n     \u2018liboctave/cruft/ranlib\u2019 directory are compiled such that INTEGERS\n     are 8-bytes wide.  If you are using gfortran, the configure script\n     should automatically set the Makefile variable \u2018F77_INTEGER_8_FLAG\u2019\n     to \u2018-fdefault-integer-8\u2019.  If you are using another compiler, you\n     must set this variable yourself.  You should NOT set this flag in\n     \u2018FFLAGS\u2019, otherwise the files in \u2018liboctave/cruft/ranlib\u2019 will be\n     miscompiled.\n\n   \u2022 Other dependencies\n\n     Probably nothing special needs to be done for the following\n     dependencies.  If you discover that something does need to be done,\n     please submit a bug report.\n\n        \u2212 pcre\n\n        \u2212 zlib\n\n        \u2212 hdf5\n\n        \u2212 fftw3\n\n        \u2212 cURL\n\n        \u2212 GraphicsMagick++\n\n        \u2212 OpenGL\n\n        \u2212 freetype\n\n        \u2212 fontconfig\n\n        \u2212 fltk\n\n\u001f\nFile: octave.info,  Node: Installation Problems,  Prev: Compiling Octave with 64-bit Indexing,  Up: Installation\n\nE.4 Installation Problems\n=========================\n\nThis section contains a list of problems (and some apparent problems\nthat don\u2019t really mean anything is wrong) that may show up during\ninstallation of Octave.\n\n   \u2022 On some SCO systems, \u2018info\u2019 fails to compile if \u2018HAVE_TERMIOS_H\u2019 is\n     defined in \u2018config.h\u2019.  Simply removing the definition from\n     \u2018info/config.h\u2019 should allow it to compile.\n\n   \u2022 If \u2018configure\u2019 finds \u2018dlopen\u2019, \u2018dlsym\u2019, \u2018dlclose\u2019, and \u2018dlerror\u2019,\n     but not the header file \u2018dlfcn.h\u2019, you need to find the source for\n     the header file and install it in the directory \u2018usr/include\u2019.\n     This is reportedly a problem with Slackware 3.1.  For Linux/GNU\n     systems, the source for \u2018dlfcn.h\u2019 is in the \u2018ldso\u2019 package.\n\n   \u2022 Building \u2018.oct\u2019 files doesn\u2019t work.\n\n     You should probably have a shared version of \u2018libstdc++\u2019.  A patch\n     is needed to build shared versions of version 2.7.2 of \u2018libstdc++\u2019\n     on the HP-PA architecture.  You can find the patch at\n     <ftp://ftp.cygnus.com/pub/g++/libg++-2.7.2-hppa-gcc-fix>.\n\n   \u2022 On some DEC alpha systems there may be a problem with the \u2018libdxml\u2019\n     library, resulting in floating point errors and/or segmentation\n     faults in the linear algebra routines called by Octave.  If you\n     encounter such problems, then you should modify the configure\n     script so that \u2018SPECIAL_MATH_LIB\u2019 is not set to \u2018-ldxml\u2019.\n\n   \u2022 On FreeBSD systems Octave may hang while initializing some internal\n     constants.  The fix appears to be to use\n\n          options      GPL_MATH_EMULATE\n\n     rather than\n\n          options      MATH_EMULATE\n\n     in the kernel configuration files (typically found in the directory\n     \u2018/sys/i386/conf\u2019).  After making this change, you\u2019ll need to\n     rebuild the kernel, install it, and reboot.\n\n   \u2022 If you encounter errors like\n\n          passing `void (*)()' as argument 2 of\n            `octave_set_signal_handler(int, void (*)(int))'\n\n     or\n\n          warning: ANSI C++ prohibits conversion from `(int)'\n                   to `(...)'\n\n     while compiling \u2018sighandlers.cc\u2019, you may need to edit some files\n     in the \u2018gcc\u2019 include subdirectory to add proper prototypes for\n     functions there.  For example, Ultrix 4.2 needs proper declarations\n     for the \u2018signal\u2019 function and the \u2018SIG_IGN\u2019 macro in the file\n     \u2018signal.h\u2019.\n\n     On some systems the \u2018SIG_IGN\u2019 macro is defined to be something like\n     this:\n\n          #define  SIG_IGN  (void (*)())1\n\n     when it should really be something like:\n\n          #define  SIG_IGN  (void (*)(int))1\n\n     to match the prototype declaration for the \u2018signal\u2019 function.  This\n     change should also be made for the \u2018SIG_DFL\u2019 and \u2018SIG_ERR\u2019 symbols.\n     It may be necessary to change the definitions in \u2018sys/signal.h\u2019 as\n     well.\n\n     The \u2018gcc\u2019 \u2018fixincludes\u2019 and \u2018fixproto\u2019 scripts should probably fix\n     these problems when \u2018gcc\u2019 installs its modified set of header\n     files, but I don\u2019t think that\u2019s been done yet.\n\n     *You should not change the files in \u2018/usr/include\u2019*.  You can find\n     the \u2018gcc\u2019 include directory tree by running the command\n\n          gcc -print-libgcc-file-name\n\n     The directory of \u2018gcc\u2019 include files normally begins in the same\n     directory that contains the file \u2018libgcc.a\u2019.\n\n   \u2022 Some of the Fortran subroutines may fail to compile with older\n     versions of the Sun Fortran compiler.  If you get errors like\n\n          zgemm.f:\n                  zgemm:\n          warning: unexpected parent of complex expression subtree\n          zgemm.f, line 245: warning: unexpected parent of complex\n            expression subtree\n          warning: unexpected parent of complex expression subtree\n          zgemm.f, line 304: warning: unexpected parent of complex\n            expression subtree\n          warning: unexpected parent of complex expression subtree\n          zgemm.f, line 327: warning: unexpected parent of complex\n            expression subtree\n          pcc_binval: missing IR_CONV in complex op\n          make[2]: *** [zgemm.o] Error 1\n\n     when compiling the Fortran subroutines in the \u2018liboctave/cruft\u2019\n     subdirectory, you should either upgrade your compiler or try\n     compiling with optimization turned off.\n\n   \u2022 On NeXT systems, if you get errors like this:\n\n          /usr/tmp/cc007458.s:unknown:Undefined local\n                symbol LBB7656\n          /usr/tmp/cc007458.s:unknown:Undefined local\n                symbol LBE7656\n\n     when compiling \u2018Array.cc\u2019 and \u2018Matrix.cc\u2019, try recompiling these\n     files without \u2018-g\u2019.\n\n   \u2022 Some people have reported that calls to system() and the pager do\n     not work on SunOS systems.  This is apparently due to having\n     \u2018G_HAVE_SYS_WAIT\u2019 defined to be 0 instead of 1 when compiling\n     \u2018libg++\u2019.\n\n   \u2022 On systems where the reference BLAS library is used the following\n     matrix-by-vector multiplication incorrectly handles NaN values of\n     the form \u2018NaN * 0\u2019.\n\n          [NaN, 1; 0, 0] * [0; 1]\n          \u21d2\n          [ 1\n            0 ]\n\n          correct result \u21d2\n          [ NaN\n            0   ]\n\n     Install a different BLAS library such as OpenBLAS or ATLAS to\n     correct this issue.\n\n   \u2022 On NeXT systems, linking to \u2018libsys_s.a\u2019 may fail to resolve the\n     following functions\n\n          _tcgetattr\n          _tcsetattr\n          _tcflow\n\n     which are part of \u2018libposix.a\u2019.  Unfortunately, linking Octave with\n     \u2018-posix\u2019 results in the following undefined symbols.\n\n          .destructors_used\n          .constructors_used\n          _objc_msgSend\n          _NXGetDefaultValue\n          _NXRegisterDefaults\n          .objc_class_name_NXStringTable\n          .objc_class_name_NXBundle\n\n     One kluge around this problem is to extract \u2018termios.o\u2019 from\n     \u2018libposix.a\u2019, put it in Octave\u2019s \u2018src\u2019 directory, and add it to the\n     list of files to link together in the makefile.  Suggestions for\n     better ways to solve this problem are welcome!\n\n   \u2022 If Octave crashes immediately with a floating point exception, it\n     is likely that it is failing to initialize the IEEE floating point\n     values for infinity and NaN.\n\n     If your system actually does support IEEE arithmetic, you should be\n     able to fix this problem by modifying the function\n     \u2018octave_ieee_init\u2019 in the file \u2018lo-ieee.cc\u2019 to correctly initialize\n     Octave\u2019s internal infinity and NaN variables.\n\n     If your system does not support IEEE arithmetic but Octave\u2019s\n     configure script incorrectly determined that it does, you can work\n     around the problem by editing the file \u2018config.h\u2019 to not define\n     \u2018HAVE_ISINF\u2019, \u2018HAVE_FINITE\u2019, and \u2018HAVE_ISNAN\u2019.\n\n     In any case, please report this as a bug since it might be possible\n     to modify Octave\u2019s configuration script to automatically determine\n     the proper thing to do.\n\n   \u2022 If Octave is unable to find a header file because it is installed\n     in a location that is not normally searched by the compiler, you\n     can add the directory to the include search path by specifying (for\n     example) \u2018CPPFLAGS=-I/some/nonstandard/directory\u2019 as an argument to\n     \u2018configure\u2019.  Other variables that can be specified this way are\n     \u2018CFLAGS\u2019, \u2018CXXFLAGS\u2019, \u2018FFLAGS\u2019, and \u2018LDFLAGS\u2019.  Passing them as\n     options to the configure script also records them in the\n     \u2018config.status\u2019 file.  By default, \u2018CPPFLAGS\u2019 and \u2018LDFLAGS\u2019 are\n     empty, \u2018CFLAGS\u2019 and \u2018CXXFLAGS\u2019 are set to \"-g -O2\" and \u2018FFLAGS\u2019 is\n     set to \"-O\".\n\n\u001f\nFile: octave.info,  Node: Grammar and Parser,  Next: Copying,  Prev: Installation,  Up: Top\n\nAppendix F Grammar and Parser\n*****************************\n\nThis appendix will eventually contain a semi-formal description of\nOctave\u2019s language.\n\n* Menu:\n\n* Keywords::\n* Parser::\n\n\u001f\nFile: octave.info,  Node: Keywords,  Next: Parser,  Up: Grammar and Parser\n\nF.1 Keywords\n============\n\nThe following identifiers are keywords, and may not be used as variable\nor function names:\n\n\u2018__FILE__\u2019               \u2018__LINE__\u2019               \u2018break\u2019\n\u2018case\u2019                   \u2018catch\u2019                  \u2018classdef\u2019\n\u2018continue\u2019               \u2018do\u2019                     \u2018else\u2019\n\u2018elseif\u2019                 \u2018end\u2019                    \u2018end_try_catch\u2019\n\u2018end_unwind_protect\u2019     \u2018endclassdef\u2019            \u2018endenumeration\u2019\n\u2018endevents\u2019              \u2018endfor\u2019                 \u2018endfunction\u2019\n\u2018endif\u2019                  \u2018endmethods\u2019             \u2018endparfor\u2019\n\u2018endproperties\u2019          \u2018endswitch\u2019              \u2018endwhile\u2019\n\u2018enumeration\u2019            \u2018events\u2019                 \u2018for\u2019\n\u2018function\u2019               \u2018global\u2019                 \u2018if\u2019\n\u2018methods\u2019                \u2018otherwise\u2019              \u2018parfor\u2019\n\u2018persistent\u2019             \u2018properties\u2019             \u2018return\u2019\n\u2018switch\u2019                 \u2018try\u2019                    \u2018until\u2019\n\u2018unwind_protect\u2019         \u2018unwind_protect_cleanup\u2019 \u2018while\u2019\n\n   The function \u2018iskeyword\u2019 can be used to quickly check whether an\nidentifier is reserved by Octave.\n\n -- : iskeyword ()\n -- : iskeyword (NAME)\n     Return true if NAME is an Octave keyword.\n\n     If NAME is omitted, return a list of keywords.\n\n     See also: *note isvarname: XREFisvarname, *note exist: XREFexist.\n\n\u001f\nFile: octave.info,  Node: Parser,  Prev: Keywords,  Up: Grammar and Parser\n\nF.2 Parser\n==========\n\nThe parser has a number of variables that affect its internal operation.\nThese variables are generally documented in the manual alongside the\ncode that they affect.  For example, \u2018allow_noninteger_range_as_index\u2019\nis discussed in the section on index expressions.\n\n   In addition, there are three non-specific parser customization\nfunctions.  \u2018add_input_event_hook\u2019 can be used to schedule a user\nfunction for periodic evaluation.  \u2018remove_input_event_hook\u2019 will stop a\nuser function from being evaluated periodically.\n\n -- : ID = add_input_event_hook (FCN)\n -- : ID = add_input_event_hook (FCN, DATA)\n     Add the named function or function handle FCN to the list of\n     functions to call periodically when Octave is waiting for input.\n\n     The function should have the form\n\n          FCN (DATA)\n\n     If DATA is omitted, Octave calls the function without any\n     arguments.\n\n     The returned identifier may be used to remove the function handle\n     from the list of input hook functions.\n\n     See also: *note remove_input_event_hook:\n     XREFremove_input_event_hook.\n\n -- : remove_input_event_hook (NAME)\n -- : remove_input_event_hook (FCN_ID)\n     Remove the named function or function handle with the given\n     identifier from the list of functions to call periodically when\n     Octave is waiting for input.\n\n     See also: *note add_input_event_hook: XREFadd_input_event_hook.\n\n   Finally, when the parser cannot identify an input token it calls a\nparticular function to handle this.  By default, this is the internal\nfunction \"__unimplemented__\" which makes suggestions about possible\nOctave substitutes for MATLAB functions.\n\n -- : VAL = missing_function_hook ()\n -- : OLD_VAL = missing_function_hook (NEW_VAL)\n -- : missing_function_hook (NEW_VAL, \"local\")\n     Query or set the internal variable that specifies the function to\n     call when an unknown identifier is requested.\n\n     When called from inside a function with the \"local\" option, the\n     variable is changed locally for the function and any subroutines it\n     calls.  The original variable value is restored when exiting the\n     function.\n\n     See also: *note missing_component_hook: XREFmissing_component_hook.\n\n\u001f\nFile: octave.info,  Node: Copying,  Next: Concept Index,  Prev: Grammar and Parser,  Up: Top\n\nAppendix G GNU GENERAL PUBLIC LICENSE\n*************************************\n\n                        Version 3, 29 June 2007\n\n     Copyright \u00a9 2007 Free Software Foundation, Inc. <http://fsf.org/>\n\n     Everyone is permitted to copy and distribute verbatim copies of this\n     license document, but changing it is not allowed.\n\nPreamble\n========\n\nThe GNU General Public License is a free, copyleft license for software\nand other kinds of works.\n\n   The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program\u2014to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n   When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n   To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n   For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n   Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n   For the developers\u2019 and authors\u2019 protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users\u2019 and\nauthors\u2019 sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n   Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users\u2019 freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n   Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n   The precise terms and conditions for copying, distribution and\nmodification follow.\n\nTERMS AND CONDITIONS\n====================\n\n  0. Definitions.\n\n     \u201cThis License\u201d refers to version 3 of the GNU General Public\n     License.\n\n     \u201cCopyright\u201d also means copyright-like laws that apply to other\n     kinds of works, such as semiconductor masks.\n\n     \u201cThe Program\u201d refers to any copyrightable work licensed under this\n     License.  Each licensee is addressed as \u201cyou\u201d.  \u201cLicensees\u201d and\n     \u201crecipients\u201d may be individuals or organizations.\n\n     To \u201cmodify\u201d a work means to copy from or adapt all or part of the\n     work in a fashion requiring copyright permission, other than the\n     making of an exact copy.  The resulting work is called a \u201cmodified\n     version\u201d of the earlier work or a work \u201cbased on\u201d the earlier work.\n\n     A \u201ccovered work\u201d means either the unmodified Program or a work\n     based on the Program.\n\n     To \u201cpropagate\u201d a work means to do anything with it that, without\n     permission, would make you directly or secondarily liable for\n     infringement under applicable copyright law, except executing it on\n     a computer or modifying a private copy.  Propagation includes\n     copying, distribution (with or without modification), making\n     available to the public, and in some countries other activities as\n     well.\n\n     To \u201cconvey\u201d a work means any kind of propagation that enables other\n     parties to make or receive copies.  Mere interaction with a user\n     through a computer network, with no transfer of a copy, is not\n     conveying.\n\n     An interactive user interface displays \u201cAppropriate Legal Notices\u201d\n     to the extent that it includes a convenient and prominently visible\n     feature that (1) displays an appropriate copyright notice, and (2)\n     tells the user that there is no warranty for the work (except to\n     the extent that warranties are provided), that licensees may convey\n     the work under this License, and how to view a copy of this\n     License.  If the interface presents a list of user commands or\n     options, such as a menu, a prominent item in the list meets this\n     criterion.\n\n  1. Source Code.\n\n     The \u201csource code\u201d for a work means the preferred form of the work\n     for making modifications to it.  \u201cObject code\u201d means any non-source\n     form of a work.\n\n     A \u201cStandard Interface\u201d means an interface that either is an\n     official standard defined by a recognized standards body, or, in\n     the case of interfaces specified for a particular programming\n     language, one that is widely used among developers working in that\n     language.\n\n     The \u201cSystem Libraries\u201d of an executable work include anything,\n     other than the work as a whole, that (a) is included in the normal\n     form of packaging a Major Component, but which is not part of that\n     Major Component, and (b) serves only to enable use of the work with\n     that Major Component, or to implement a Standard Interface for\n     which an implementation is available to the public in source code\n     form.  A \u201cMajor Component\u201d, in this context, means a major\n     essential component (kernel, window system, and so on) of the\n     specific operating system (if any) on which the executable work\n     runs, or a compiler used to produce the work, or an object code\n     interpreter used to run it.\n\n     The \u201cCorresponding Source\u201d for a work in object code form means all\n     the source code needed to generate, install, and (for an executable\n     work) run the object code and to modify the work, including scripts\n     to control those activities.  However, it does not include the\n     work\u2019s System Libraries, or general-purpose tools or generally\n     available free programs which are used unmodified in performing\n     those activities but which are not part of the work.  For example,\n     Corresponding Source includes interface definition files associated\n     with source files for the work, and the source code for shared\n     libraries and dynamically linked subprograms that the work is\n     specifically designed to require, such as by intimate data\n     communication or control flow between those subprograms and other\n     parts of the work.\n\n     The Corresponding Source need not include anything that users can\n     regenerate automatically from other parts of the Corresponding\n     Source.\n\n     The Corresponding Source for a work in source code form is that\n     same work.\n\n  2. Basic Permissions.\n\n     All rights granted under this License are granted for the term of\n     copyright on the Program, and are irrevocable provided the stated\n     conditions are met.  This License explicitly affirms your unlimited\n     permission to run the unmodified Program.  The output from running\n     a covered work is covered by this License only if the output, given\n     its content, constitutes a covered work.  This License acknowledges\n     your rights of fair use or other equivalent, as provided by\n     copyright law.\n\n     You may make, run and propagate covered works that you do not\n     convey, without conditions so long as your license otherwise\n     remains in force.  You may convey covered works to others for the\n     sole purpose of having them make modifications exclusively for you,\n     or provide you with facilities for running those works, provided\n     that you comply with the terms of this License in conveying all\n     material for which you do not control copyright.  Those thus making\n     or running the covered works for you must do so exclusively on your\n     behalf, under your direction and control, on terms that prohibit\n     them from making any copies of your copyrighted material outside\n     their relationship with you.\n\n     Conveying under any other circumstances is permitted solely under\n     the conditions stated below.  Sublicensing is not allowed; section\n     10 makes it unnecessary.\n\n  3. Protecting Users\u2019 Legal Rights From Anti-Circumvention Law.\n\n     No covered work shall be deemed part of an effective technological\n     measure under any applicable law fulfilling obligations under\n     article 11 of the WIPO copyright treaty adopted on 20 December\n     1996, or similar laws prohibiting or restricting circumvention of\n     such measures.\n\n     When you convey a covered work, you waive any legal power to forbid\n     circumvention of technological measures to the extent such\n     circumvention is effected by exercising rights under this License\n     with respect to the covered work, and you disclaim any intention to\n     limit operation or modification of the work as a means of\n     enforcing, against the work\u2019s users, your or third parties\u2019 legal\n     rights to forbid circumvention of technological measures.\n\n  4. Conveying Verbatim Copies.\n\n     You may convey verbatim copies of the Program\u2019s source code as you\n     receive it, in any medium, provided that you conspicuously and\n     appropriately publish on each copy an appropriate copyright notice;\n     keep intact all notices stating that this License and any\n     non-permissive terms added in accord with section 7 apply to the\n     code; keep intact all notices of the absence of any warranty; and\n     give all recipients a copy of this License along with the Program.\n\n     You may charge any price or no price for each copy that you convey,\n     and you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n     You may convey a work based on the Program, or the modifications to\n     produce it from the Program, in the form of source code under the\n     terms of section 4, provided that you also meet all of these\n     conditions:\n\n       a. The work must carry prominent notices stating that you\n          modified it, and giving a relevant date.\n\n       b. The work must carry prominent notices stating that it is\n          released under this License and any conditions added under\n          section 7.  This requirement modifies the requirement in\n          section 4 to \u201ckeep intact all notices\u201d.\n\n       c. You must license the entire work, as a whole, under this\n          License to anyone who comes into possession of a copy.  This\n          License will therefore apply, along with any applicable\n          section 7 additional terms, to the whole of the work, and all\n          its parts, regardless of how they are packaged.  This License\n          gives no permission to license the work in any other way, but\n          it does not invalidate such permission if you have separately\n          received it.\n\n       d. If the work has interactive user interfaces, each must display\n          Appropriate Legal Notices; however, if the Program has\n          interactive interfaces that do not display Appropriate Legal\n          Notices, your work need not make them do so.\n\n     A compilation of a covered work with other separate and independent\n     works, which are not by their nature extensions of the covered\n     work, and which are not combined with it such as to form a larger\n     program, in or on a volume of a storage or distribution medium, is\n     called an \u201caggregate\u201d if the compilation and its resulting\n     copyright are not used to limit the access or legal rights of the\n     compilation\u2019s users beyond what the individual works permit.\n     Inclusion of a covered work in an aggregate does not cause this\n     License to apply to the other parts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n     You may convey a covered work in object code form under the terms\n     of sections 4 and 5, provided that you also convey the\n     machine-readable Corresponding Source under the terms of this\n     License, in one of these ways:\n\n       a. Convey the object code in, or embodied in, a physical product\n          (including a physical distribution medium), accompanied by the\n          Corresponding Source fixed on a durable physical medium\n          customarily used for software interchange.\n\n       b. Convey the object code in, or embodied in, a physical product\n          (including a physical distribution medium), accompanied by a\n          written offer, valid for at least three years and valid for as\n          long as you offer spare parts or customer support for that\n          product model, to give anyone who possesses the object code\n          either (1) a copy of the Corresponding Source for all the\n          software in the product that is covered by this License, on a\n          durable physical medium customarily used for software\n          interchange, for a price no more than your reasonable cost of\n          physically performing this conveying of source, or (2) access\n          to copy the Corresponding Source from a network server at no\n          charge.\n\n       c. Convey individual copies of the object code with a copy of the\n          written offer to provide the Corresponding Source.  This\n          alternative is allowed only occasionally and noncommercially,\n          and only if you received the object code with such an offer,\n          in accord with subsection 6b.\n\n       d. Convey the object code by offering access from a designated\n          place (gratis or for a charge), and offer equivalent access to\n          the Corresponding Source in the same way through the same\n          place at no further charge.  You need not require recipients\n          to copy the Corresponding Source along with the object code.\n          If the place to copy the object code is a network server, the\n          Corresponding Source may be on a different server (operated by\n          you or a third party) that supports equivalent copying\n          facilities, provided you maintain clear directions next to the\n          object code saying where to find the Corresponding Source.\n          Regardless of what server hosts the Corresponding Source, you\n          remain obligated to ensure that it is available for as long as\n          needed to satisfy these requirements.\n\n       e. Convey the object code using peer-to-peer transmission,\n          provided you inform other peers where the object code and\n          Corresponding Source of the work are being offered to the\n          general public at no charge under subsection 6d.\n\n     A separable portion of the object code, whose source code is\n     excluded from the Corresponding Source as a System Library, need\n     not be included in conveying the object code work.\n\n     A \u201cUser Product\u201d is either (1) a \u201cconsumer product\u201d, which means\n     any tangible personal property which is normally used for personal,\n     family, or household purposes, or (2) anything designed or sold for\n     incorporation into a dwelling.  In determining whether a product is\n     a consumer product, doubtful cases shall be resolved in favor of\n     coverage.  For a particular product received by a particular user,\n     \u201cnormally used\u201d refers to a typical or common use of that class of\n     product, regardless of the status of the particular user or of the\n     way in which the particular user actually uses, or expects or is\n     expected to use, the product.  A product is a consumer product\n     regardless of whether the product has substantial commercial,\n     industrial or non-consumer uses, unless such uses represent the\n     only significant mode of use of the product.\n\n     \u201cInstallation Information\u201d for a User Product means any methods,\n     procedures, authorization keys, or other information required to\n     install and execute modified versions of a covered work in that\n     User Product from a modified version of its Corresponding Source.\n     The information must suffice to ensure that the continued\n     functioning of the modified object code is in no case prevented or\n     interfered with solely because modification has been made.\n\n     If you convey an object code work under this section in, or with,\n     or specifically for use in, a User Product, and the conveying\n     occurs as part of a transaction in which the right of possession\n     and use of the User Product is transferred to the recipient in\n     perpetuity or for a fixed term (regardless of how the transaction\n     is characterized), the Corresponding Source conveyed under this\n     section must be accompanied by the Installation Information.  But\n     this requirement does not apply if neither you nor any third party\n     retains the ability to install modified object code on the User\n     Product (for example, the work has been installed in ROM).\n\n     The requirement to provide Installation Information does not\n     include a requirement to continue to provide support service,\n     warranty, or updates for a work that has been modified or installed\n     by the recipient, or for the User Product in which it has been\n     modified or installed.  Access to a network may be denied when the\n     modification itself materially and adversely affects the operation\n     of the network or violates the rules and protocols for\n     communication across the network.\n\n     Corresponding Source conveyed, and Installation Information\n     provided, in accord with this section must be in a format that is\n     publicly documented (and with an implementation available to the\n     public in source code form), and must require no special password\n     or key for unpacking, reading or copying.\n\n  7. Additional Terms.\n\n     \u201cAdditional permissions\u201d are terms that supplement the terms of\n     this License by making exceptions from one or more of its\n     conditions.  Additional permissions that are applicable to the\n     entire Program shall be treated as though they were included in\n     this License, to the extent that they are valid under applicable\n     law.  If additional permissions apply only to part of the Program,\n     that part may be used separately under those permissions, but the\n     entire Program remains governed by this License without regard to\n     the additional permissions.\n\n     When you convey a copy of a covered work, you may at your option\n     remove any additional permissions from that copy, or from any part\n     of it.  (Additional permissions may be written to require their own\n     removal in certain cases when you modify the work.)  You may place\n     additional permissions on material, added by you to a covered work,\n     for which you have or can give appropriate copyright permission.\n\n     Notwithstanding any other provision of this License, for material\n     you add to a covered work, you may (if authorized by the copyright\n     holders of that material) supplement the terms of this License with\n     terms:\n\n       a. Disclaiming warranty or limiting liability differently from\n          the terms of sections 15 and 16 of this License; or\n\n       b. Requiring preservation of specified reasonable legal notices\n          or author attributions in that material or in the Appropriate\n          Legal Notices displayed by works containing it; or\n\n       c. Prohibiting misrepresentation of the origin of that material,\n          or requiring that modified versions of such material be marked\n          in reasonable ways as different from the original version; or\n\n       d. Limiting the use for publicity purposes of names of licensors\n          or authors of the material; or\n\n       e. Declining to grant rights under trademark law for use of some\n          trade names, trademarks, or service marks; or\n\n       f. Requiring indemnification of licensors and authors of that\n          material by anyone who conveys the material (or modified\n          versions of it) with contractual assumptions of liability to\n          the recipient, for any liability that these contractual\n          assumptions directly impose on those licensors and authors.\n\n     All other non-permissive additional terms are considered \u201cfurther\n     restrictions\u201d within the meaning of section 10.  If the Program as\n     you received it, or any part of it, contains a notice stating that\n     it is governed by this License along with a term that is a further\n     restriction, you may remove that term.  If a license document\n     contains a further restriction but permits relicensing or conveying\n     under this License, you may add to a covered work material governed\n     by the terms of that license document, provided that the further\n     restriction does not survive such relicensing or conveying.\n\n     If you add terms to a covered work in accord with this section, you\n     must place, in the relevant source files, a statement of the\n     additional terms that apply to those files, or a notice indicating\n     where to find the applicable terms.\n\n     Additional terms, permissive or non-permissive, may be stated in\n     the form of a separately written license, or stated as exceptions;\n     the above requirements apply either way.\n\n  8. Termination.\n\n     You may not propagate or modify a covered work except as expressly\n     provided under this License.  Any attempt otherwise to propagate or\n     modify it is void, and will automatically terminate your rights\n     under this License (including any patent licenses granted under the\n     third paragraph of section 11).\n\n     However, if you cease all violation of this License, then your\n     license from a particular copyright holder is reinstated (a)\n     provisionally, unless and until the copyright holder explicitly and\n     finally terminates your license, and (b) permanently, if the\n     copyright holder fails to notify you of the violation by some\n     reasonable means prior to 60 days after the cessation.\n\n     Moreover, your license from a particular copyright holder is\n     reinstated permanently if the copyright holder notifies you of the\n     violation by some reasonable means, this is the first time you have\n     received notice of violation of this License (for any work) from\n     that copyright holder, and you cure the violation prior to 30 days\n     after your receipt of the notice.\n\n     Termination of your rights under this section does not terminate\n     the licenses of parties who have received copies or rights from you\n     under this License.  If your rights have been terminated and not\n     permanently reinstated, you do not qualify to receive new licenses\n     for the same material under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n     You are not required to accept this License in order to receive or\n     run a copy of the Program.  Ancillary propagation of a covered work\n     occurring solely as a consequence of using peer-to-peer\n     transmission to receive a copy likewise does not require\n     acceptance.  However, nothing other than this License grants you\n     permission to propagate or modify any covered work.  These actions\n     infringe copyright if you do not accept this License.  Therefore,\n     by modifying or propagating a covered work, you indicate your\n     acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n     Each time you convey a covered work, the recipient automatically\n     receives a license from the original licensors, to run, modify and\n     propagate that work, subject to this License.  You are not\n     responsible for enforcing compliance by third parties with this\n     License.\n\n     An \u201centity transaction\u201d is a transaction transferring control of an\n     organization, or substantially all assets of one, or subdividing an\n     organization, or merging organizations.  If propagation of a\n     covered work results from an entity transaction, each party to that\n     transaction who receives a copy of the work also receives whatever\n     licenses to the work the party\u2019s predecessor in interest had or\n     could give under the previous paragraph, plus a right to possession\n     of the Corresponding Source of the work from the predecessor in\n     interest, if the predecessor has it or can get it with reasonable\n     efforts.\n\n     You may not impose any further restrictions on the exercise of the\n     rights granted or affirmed under this License.  For example, you\n     may not impose a license fee, royalty, or other charge for exercise\n     of rights granted under this License, and you may not initiate\n     litigation (including a cross-claim or counterclaim in a lawsuit)\n     alleging that any patent claim is infringed by making, using,\n     selling, offering for sale, or importing the Program or any portion\n     of it.\n\n  11. Patents.\n\n     A \u201ccontributor\u201d is a copyright holder who authorizes use under this\n     License of the Program or a work on which the Program is based.\n     The work thus licensed is called the contributor\u2019s \u201ccontributor\n     version\u201d.\n\n     A contributor\u2019s \u201cessential patent claims\u201d are all patent claims\n     owned or controlled by the contributor, whether already acquired or\n     hereafter acquired, that would be infringed by some manner,\n     permitted by this License, of making, using, or selling its\n     contributor version, but do not include claims that would be\n     infringed only as a consequence of further modification of the\n     contributor version.  For purposes of this definition, \u201ccontrol\u201d\n     includes the right to grant patent sublicenses in a manner\n     consistent with the requirements of this License.\n\n     Each contributor grants you a non-exclusive, worldwide,\n     royalty-free patent license under the contributor\u2019s essential\n     patent claims, to make, use, sell, offer for sale, import and\n     otherwise run, modify and propagate the contents of its contributor\n     version.\n\n     In the following three paragraphs, a \u201cpatent license\u201d is any\n     express agreement or commitment, however denominated, not to\n     enforce a patent (such as an express permission to practice a\n     patent or covenant not to sue for patent infringement).  To \u201cgrant\u201d\n     such a patent license to a party means to make such an agreement or\n     commitment not to enforce a patent against the party.\n\n     If you convey a covered work, knowingly relying on a patent\n     license, and the Corresponding Source of the work is not available\n     for anyone to copy, free of charge and under the terms of this\n     License, through a publicly available network server or other\n     readily accessible means, then you must either (1) cause the\n     Corresponding Source to be so available, or (2) arrange to deprive\n     yourself of the benefit of the patent license for this particular\n     work, or (3) arrange, in a manner consistent with the requirements\n     of this License, to extend the patent license to downstream\n     recipients.  \u201cKnowingly relying\u201d means you have actual knowledge\n     that, but for the patent license, your conveying the covered work\n     in a country, or your recipient\u2019s use of the covered work in a\n     country, would infringe one or more identifiable patents in that\n     country that you have reason to believe are valid.\n\n     If, pursuant to or in connection with a single transaction or\n     arrangement, you convey, or propagate by procuring conveyance of, a\n     covered work, and grant a patent license to some of the parties\n     receiving the covered work authorizing them to use, propagate,\n     modify or convey a specific copy of the covered work, then the\n     patent license you grant is automatically extended to all\n     recipients of the covered work and works based on it.\n\n     A patent license is \u201cdiscriminatory\u201d if it does not include within\n     the scope of its coverage, prohibits the exercise of, or is\n     conditioned on the non-exercise of one or more of the rights that\n     are specifically granted under this License.  You may not convey a\n     covered work if you are a party to an arrangement with a third\n     party that is in the business of distributing software, under which\n     you make payment to the third party based on the extent of your\n     activity of conveying the work, and under which the third party\n     grants, to any of the parties who would receive the covered work\n     from you, a discriminatory patent license (a) in connection with\n     copies of the covered work conveyed by you (or copies made from\n     those copies), or (b) primarily for and in connection with specific\n     products or compilations that contain the covered work, unless you\n     entered into that arrangement, or that patent license was granted,\n     prior to 28 March 2007.\n\n     Nothing in this License shall be construed as excluding or limiting\n     any implied license or other defenses to infringement that may\n     otherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others\u2019 Freedom.\n\n     If conditions are imposed on you (whether by court order, agreement\n     or otherwise) that contradict the conditions of this License, they\n     do not excuse you from the conditions of this License.  If you\n     cannot convey a covered work so as to satisfy simultaneously your\n     obligations under this License and any other pertinent obligations,\n     then as a consequence you may not convey it at all.  For example,\n     if you agree to terms that obligate you to collect a royalty for\n     further conveying from those to whom you convey the Program, the\n     only way you could satisfy both those terms and this License would\n     be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n     Notwithstanding any other provision of this License, you have\n     permission to link or combine any covered work with a work licensed\n     under version 3 of the GNU Affero General Public License into a\n     single combined work, and to convey the resulting work.  The terms\n     of this License will continue to apply to the part which is the\n     covered work, but the special requirements of the GNU Affero\n     General Public License, section 13, concerning interaction through\n     a network will apply to the combination as such.\n\n  14. Revised Versions of this License.\n\n     The Free Software Foundation may publish revised and/or new\n     versions of the GNU General Public License from time to time.  Such\n     new versions will be similar in spirit to the present version, but\n     may differ in detail to address new problems or concerns.\n\n     Each version is given a distinguishing version number.  If the\n     Program specifies that a certain numbered version of the GNU\n     General Public License \u201cor any later version\u201d applies to it, you\n     have the option of following the terms and conditions either of\n     that numbered version or of any later version published by the Free\n     Software Foundation.  If the Program does not specify a version\n     number of the GNU General Public License, you may choose any\n     version ever published by the Free Software Foundation.\n\n     If the Program specifies that a proxy can decide which future\n     versions of the GNU General Public License can be used, that\n     proxy\u2019s public statement of acceptance of a version permanently\n     authorizes you to choose that version for the Program.\n\n     Later license versions may give you additional or different\n     permissions.  However, no additional obligations are imposed on any\n     author or copyright holder as a result of your choosing to follow a\n     later version.\n\n  15. Disclaimer of Warranty.\n\n     THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\n     APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE\n     COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \u201cAS IS\u201d\n     WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,\n     INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n     MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE\n     RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.\n     SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL\n     NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n     IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\n     WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES\n     AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR\n     DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\n     CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE\n     THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA\n     BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\n     PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\n     PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF\n     THE POSSIBILITY OF SUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n     If the disclaimer of warranty and limitation of liability provided\n     above cannot be given local legal effect according to their terms,\n     reviewing courts shall apply local law that most closely\n     approximates an absolute waiver of all civil liability in\n     connection with the Program, unless a warranty or assumption of\n     liability accompanies a copy of the Program in return for a fee.\n\nEND OF TERMS AND CONDITIONS\n===========================\n\nHow to Apply These Terms to Your New Programs\n=============================================\n\nIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these\nterms.\n\n   To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least the\n\u201ccopyright\u201d line and a pointer to where the full notice is found.\n\n     ONE LINE TO GIVE THE PROGRAM'S NAME AND A BRIEF IDEA OF WHAT IT DOES.\n     Copyright (C) YEAR NAME OF AUTHOR\n\n     This program is free software: you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n     the Free Software Foundation, either version 3 of the License, or (at\n     your option) any later version.\n\n     This program is distributed in the hope that it will be useful, but\n     WITHOUT ANY WARRANTY; without even the implied warranty of\n     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n     General Public License for more details.\n\n     You should have received a copy of the GNU General Public License\n     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n   Also add information on how to contact you by electronic and paper\nmail.\n\n   If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n     PROGRAM Copyright (C) YEAR NAME OF AUTHOR\n     This program comes with ABSOLUTELY NO WARRANTY; for details type \u2018show w\u2019.\n     This is free software, and you are welcome to redistribute it\n     under certain conditions; type \u2018show c\u2019 for details.\n\n   The hypothetical commands \u2018show w\u2019 and \u2018show c\u2019 should show the\nappropriate parts of the General Public License.  Of course, your\nprogram\u2019s commands might be different; for a GUI interface, you would\nuse an \u201cabout box\u201d.\n\n   You should also get your employer (if you work as a programmer) or\nschool, if any, to sign a \u201ccopyright disclaimer\u201d for the program, if\nnecessary.  For more information on this, and how to apply and follow\nthe GNU GPL, see <http://www.gnu.org/licenses/>.\n\n   The GNU General Public License does not permit incorporating your\nprogram into proprietary programs.  If your program is a subroutine\nlibrary, you may consider it more useful to permit linking proprietary\napplications with the library.  If this is what you want to do, use the\nGNU Lesser General Public License instead of this License.  But first,\nplease read <http://www.gnu.org/philosophy/why-not-lgpl.html>.\n\n\u001f\nFile: octave.info,  Node: Concept Index,  Next: Function Index,  Prev: Copying,  Up: Top\n\nConcept Index\n*************\n\n\u0000\b[index\u0000\b]\n* Menu:\n\n* #:                                     Single Line Comments.\n                                                              (line   6)\n* #!:                                    Executable Octave Programs.\n                                                              (line   6)\n* #{:                                    Block Comments.      (line   6)\n* %:                                     Single Line Comments.\n                                                              (line   6)\n* %{:                                    Block Comments.      (line   6)\n* --braindead:                           Command Line Options.\n                                                              (line 145)\n* --built-in-docstrings-file FILENAME:   Command Line Options.\n                                                              (line   9)\n* --debug:                               Command Line Options.\n                                                              (line  15)\n* --debug-jit:                           Command Line Options.\n                                                              (line  21)\n* --doc-cache-file FILENAME:             Command Line Options.\n                                                              (line  24)\n* --echo-commands:                       Command Line Options.\n                                                              (line  32)\n* --exec-path PATH:                      Command Line Options.\n                                                              (line  39)\n* --force-gui:                           Command Line Options.\n                                                              (line  48)\n* --help:                                Command Line Options.\n                                                              (line  53)\n* --image-path PATH:                     Command Line Options.\n                                                              (line  56)\n* --info-file FILENAME:                  Command Line Options.\n                                                              (line  64)\n* --info-program PROGRAM:                Command Line Options.\n                                                              (line  72)\n* --interactive:                         Command Line Options.\n                                                              (line  81)\n* --jit-compiler:                        Command Line Options.\n                                                              (line  85)\n* --line-editing:                        Command Line Options.\n                                                              (line  88)\n* --no-gui:                              Command Line Options.\n                                                              (line  91)\n* --no-history:                          Command Line Options.\n                                                              (line  96)\n* --no-init-file:                        Command Line Options.\n                                                              (line  99)\n* --no-init-path:                        Command Line Options.\n                                                              (line 102)\n* --no-line-editing:                     Command Line Options.\n                                                              (line 106)\n* --no-site-file:                        Command Line Options.\n                                                              (line 109)\n* --no-window-system:                    Command Line Options.\n                                                              (line 113)\n* --norc:                                Command Line Options.\n                                                              (line 118)\n* --path PATH:                           Command Line Options.\n                                                              (line 124)\n* --persist:                             Command Line Options.\n                                                              (line 131)\n* --quiet:                               Command Line Options.\n                                                              (line 137)\n* --silent:                              Command Line Options.\n                                                              (line 137)\n* --texi-macros-file FILENAME:           Command Line Options.\n                                                              (line 140)\n* --traditional:                         Command Line Options.\n                                                              (line 145)\n* --verbose:                             Command Line Options.\n                                                              (line 178)\n* --version:                             Command Line Options.\n                                                              (line 182)\n* -?:                                    Command Line Options.\n                                                              (line  53)\n* -d:                                    Command Line Options.\n                                                              (line  15)\n* -f:                                    Command Line Options.\n                                                              (line 118)\n* -h:                                    Command Line Options.\n                                                              (line  53)\n* -H:                                    Command Line Options.\n                                                              (line  96)\n* -i:                                    Command Line Options.\n                                                              (line  81)\n* -p PATH:                               Command Line Options.\n                                                              (line 124)\n* -q:                                    Command Line Options.\n                                                              (line 137)\n* -V:                                    Command Line Options.\n                                                              (line 178)\n* -v:                                    Command Line Options.\n                                                              (line 182)\n* -x:                                    Command Line Options.\n                                                              (line  32)\n* ... continuation marker:               Continuation Lines.  (line   6)\n* .octaverc:                             Startup Files.       (line  36)\n* :end:                                  Index Expressions.   (line  46)\n* \\ continuation marker:                 Continuation Lines.  (line   6)\n* ~/.inputrc:                            Customizing readline.\n                                                              (line   6)\n* ~/.octaverc:                           Startup Files.       (line  32)\n* acknowledgements:                      Acknowledgements.    (line   6)\n* addition:                              Arithmetic Ops.      (line   6)\n* addition <1>:                          Operator Overloading.\n                                                              (line   6)\n* and operator:                          Boolean Expressions. (line   6)\n* and operator <1>:                      Operator Overloading.\n                                                              (line   6)\n* anonymous functions:                   Function Handles Anonymous Functions Inline Functions.\n                                                              (line   6)\n* ans:                                   Variables.           (line  44)\n* answers, incorrect:                    Bug Criteria.        (line  12)\n* answers, incorrect <1>:                Bug Reporting.       (line  70)\n* application-defined data:              Application-defined Data.\n                                                              (line   6)\n* apply:                                 Function Application.\n                                                              (line   6)\n* area series:                           Area Series.         (line   6)\n* arguments in function call:            Calling Functions.   (line  15)\n* arithmetic operators:                  Arithmetic Ops.      (line   6)\n* arithmetic operators <1>:              Operator Overloading.\n                                                              (line   6)\n* array, creating a Java array:          Java Interface Functions.\n                                                              (line  24)\n* assignment expressions:                Assignment Ops.      (line   6)\n* assignment operators:                  Assignment Ops.      (line   6)\n* axes activepositionproperty:           Axes Properties.     (line  10)\n* axes alim:                             Axes Properties.     (line  18)\n* axes alimmode:                         Axes Properties.     (line  22)\n* axes ambientlightcolor:                Axes Properties.     (line  24)\n* axes beingdeleted:                     Axes Properties.     (line  27)\n* axes box:                              Axes Properties.     (line  29)\n* axes boxstyle:                         Axes Properties.     (line  32)\n* axes busyaction:                       Axes Properties.     (line  36)\n* axes buttondownfcn:                    Axes Properties.     (line  38)\n* axes cameraposition:                   Axes Properties.     (line  43)\n* axes camerapositionmode:               Axes Properties.     (line  45)\n* axes cameratarget:                     Axes Properties.     (line  47)\n* axes cameratargetmode:                 Axes Properties.     (line  49)\n* axes cameraupvector:                   Axes Properties.     (line  51)\n* axes cameraupvectormode:               Axes Properties.     (line  53)\n* axes cameraviewangle:                  Axes Properties.     (line  55)\n* axes cameraviewanglemode:              Axes Properties.     (line  57)\n* axes children:                         Axes Properties.     (line  59)\n* axes clim:                             Axes Properties.     (line  62)\n* axes climmode:                         Axes Properties.     (line  68)\n* axes clipping:                         Axes Properties.     (line  70)\n* axes clippingstyle:                    Axes Properties.     (line  73)\n* axes color:                            Axes Properties.     (line  76)\n* axes colororder:                       Axes Properties.     (line  79)\n* axes colororderindex:                  Axes Properties.     (line  82)\n* axes createfcn:                        Axes Properties.     (line  85)\n* axes currentpoint:                     Axes Properties.     (line  94)\n* axes dataaspectratio:                  Axes Properties.     (line 104)\n* axes dataaspectratiomode:              Axes Properties.     (line 112)\n* axes deletefcn:                        Axes Properties.     (line 114)\n* axes drawmode:                         Axes Properties.     (line 121)\n* axes fontangle:                        Axes Properties.     (line 123)\n* axes fontname:                         Axes Properties.     (line 126)\n* axes fontsize:                         Axes Properties.     (line 129)\n* axes fontsmoothing:                    Axes Properties.     (line 134)\n* axes fontunits:                        Axes Properties.     (line 137)\n* axes fontweight:                       Axes Properties.     (line 140)\n* axes graphics object:                  Graphics Objects.    (line  19)\n* axes gridalpha:                        Axes Properties.     (line 143)\n* axes gridalphamode:                    Axes Properties.     (line 147)\n* axes gridcolor:                        Axes Properties.     (line 150)\n* axes gridcolormode:                    Axes Properties.     (line 153)\n* axes gridlinestyle:                    Axes Properties.     (line 156)\n* axes handlevisibility:                 Axes Properties.     (line 158)\n* axes hittest:                          Axes Properties.     (line 162)\n* axes interruptible:                    Axes Properties.     (line 164)\n* axes labelfontsizemultiplier:          Axes Properties.     (line 166)\n* axes layer:                            Axes Properties.     (line 169)\n* axes linestyleorder:                   Axes Properties.     (line 173)\n* axes linestyleorderindex:              Axes Properties.     (line 176)\n* axes linewidth:                        Axes Properties.     (line 179)\n* axes minorgridalpha:                   Axes Properties.     (line 182)\n* axes minorgridalphamode:               Axes Properties.     (line 186)\n* axes minorgridcolor:                   Axes Properties.     (line 189)\n* axes minorgridcolormode:               Axes Properties.     (line 192)\n* axes minorgridlinestyle:               Axes Properties.     (line 195)\n* axes mousewheelzoom:                   Axes Properties.     (line 197)\n* axes nextplot:                         Axes Properties.     (line 200)\n* axes outerposition:                    Axes Properties.     (line 209)\n* axes parent:                           Axes Properties.     (line 218)\n* axes pickableparts:                    Axes Properties.     (line 221)\n* axes plotboxaspectratio:               Axes Properties.     (line 224)\n* axes plotboxaspectratiomode:           Axes Properties.     (line 229)\n* axes position:                         Axes Properties.     (line 231)\n* axes projection:                       Axes Properties.     (line 240)\n* axes properties:                       Axes Properties.     (line   6)\n* axes selected:                         Axes Properties.     (line 243)\n* axes selectionhighlight:               Axes Properties.     (line 245)\n* axes sortmethod:                       Axes Properties.     (line 247)\n* axes tag:                              Axes Properties.     (line 250)\n* axes tickdir:                          Axes Properties.     (line 253)\n* axes tickdirmode:                      Axes Properties.     (line 258)\n* axes ticklabelinterpreter:             Axes Properties.     (line 260)\n* axes ticklength:                       Axes Properties.     (line 265)\n* axes tightinset:                       Axes Properties.     (line 269)\n* axes title:                            Axes Properties.     (line 273)\n* axes titlefontsizemultiplier:          Axes Properties.     (line 276)\n* axes titlefontweight:                  Axes Properties.     (line 279)\n* axes type:                             Axes Properties.     (line 282)\n* axes uicontextmenu:                    Axes Properties.     (line 285)\n* axes units:                            Axes Properties.     (line 289)\n* axes userdata:                         Axes Properties.     (line 293)\n* axes view:                             Axes Properties.     (line 296)\n* axes visible:                          Axes Properties.     (line 300)\n* axes xaxislocation:                    Axes Properties.     (line 303)\n* axes xcolor:                           Axes Properties.     (line 306)\n* axes xcolormode:                       Axes Properties.     (line 310)\n* axes xdir:                             Axes Properties.     (line 312)\n* axes xgrid:                            Axes Properties.     (line 315)\n* axes xlabel:                           Axes Properties.     (line 318)\n* axes xlim:                             Axes Properties.     (line 321)\n* axes xlimmode:                         Axes Properties.     (line 326)\n* axes xminorgrid:                       Axes Properties.     (line 328)\n* axes xminortick:                       Axes Properties.     (line 331)\n* axes xscale:                           Axes Properties.     (line 333)\n* axes xtick:                            Axes Properties.     (line 335)\n* axes xticklabel:                       Axes Properties.     (line 339)\n* axes xticklabelmode:                   Axes Properties.     (line 343)\n* axes xticklabelrotation:               Axes Properties.     (line 345)\n* axes xtickmode:                        Axes Properties.     (line 348)\n* axes yaxislocation:                    Axes Properties.     (line 350)\n* axes ycolor:                           Axes Properties.     (line 353)\n* axes ycolormode:                       Axes Properties.     (line 356)\n* axes ydir:                             Axes Properties.     (line 358)\n* axes ygrid:                            Axes Properties.     (line 361)\n* axes ylabel:                           Axes Properties.     (line 364)\n* axes ylim:                             Axes Properties.     (line 367)\n* axes ylimmode:                         Axes Properties.     (line 372)\n* axes yminorgrid:                       Axes Properties.     (line 374)\n* axes yminortick:                       Axes Properties.     (line 377)\n* axes yscale:                           Axes Properties.     (line 379)\n* axes ytick:                            Axes Properties.     (line 381)\n* axes yticklabel:                       Axes Properties.     (line 385)\n* axes yticklabelmode:                   Axes Properties.     (line 389)\n* axes yticklabelrotation:               Axes Properties.     (line 391)\n* axes ytickmode:                        Axes Properties.     (line 394)\n* axes zcolor:                           Axes Properties.     (line 396)\n* axes zcolormode:                       Axes Properties.     (line 399)\n* axes zdir:                             Axes Properties.     (line 401)\n* axes zgrid:                            Axes Properties.     (line 403)\n* axes zlabel:                           Axes Properties.     (line 406)\n* axes zlim:                             Axes Properties.     (line 409)\n* axes zlimmode:                         Axes Properties.     (line 414)\n* axes zminorgrid:                       Axes Properties.     (line 416)\n* axes zminortick:                       Axes Properties.     (line 419)\n* axes zscale:                           Axes Properties.     (line 421)\n* axes ztick:                            Axes Properties.     (line 423)\n* axes zticklabel:                       Axes Properties.     (line 427)\n* axes zticklabelmode:                   Axes Properties.     (line 431)\n* axes zticklabelrotation:               Axes Properties.     (line 433)\n* axes ztickmode:                        Axes Properties.     (line 436)\n* axes __modified__:                     Axes Properties.     (line   8)\n* bar series:                            Bar Series.          (line   6)\n* batch processing:                      Executable Octave Programs.\n                                                              (line   6)\n* block comments:                        Block Comments.      (line   6)\n* body of a loop:                        The while Statement. (line   6)\n* boolean expressions:                   Boolean Expressions. (line   6)\n* boolean expressions <1>:               Operator Overloading.\n                                                              (line   6)\n* boolean operators:                     Boolean Expressions. (line   6)\n* boolean operators <1>:                 Operator Overloading.\n                                                              (line   6)\n* break statement:                       The break Statement. (line   6)\n* broadcast:                             Broadcasting.        (line   6)\n* broadcasting:                          Broadcasting.        (line   6)\n* BSX:                                   Broadcasting.        (line   6)\n* bug criteria:                          Bug Criteria.        (line   6)\n* bug tracker:                           Bug Tracker.         (line   6)\n* bugs:                                  Reporting Bugs.      (line   6)\n* bugs, investigating:                   Bug Reporting.       (line 102)\n* bugs, known:                           Trouble.             (line   6)\n* bugs, reporting:                       Bug Tracker.         (line   6)\n* bugs, reporting <1>:                   Bug Reporting.       (line   6)\n* built-in data types:                   Built-in Data Types. (line   6)\n* callbacks:                             Callbacks.           (line   6)\n* calling Java from Octave:              Java Interface.      (line   6)\n* calling Octave from Java:              Java Interface.      (line   6)\n* case statement:                        The switch Statement.\n                                                              (line   6)\n* catch:                                 The try Statement.   (line   6)\n* cell arrays:                           Cell Array Objects.  (line   6)\n* cell arrays <1>:                       Cell Arrays.         (line   6)\n* character strings:                     String Objects.      (line   6)\n* character strings <1>:                 Strings.             (line   6)\n* Cholesky factorization:                Matrix Factorizations.\n                                                              (line  12)\n* Citations:                             Citing Octave in Publications.\n                                                              (line   6)\n* Citing Octave:                         Citing Octave in Publications.\n                                                              (line   6)\n* classes, making available to Octave:   Making Java Classes Available.\n                                                              (line   6)\n* classpath, adding new path:            Java Interface Functions.\n                                                              (line 201)\n* classpath, difference between static and dynamic: Making Java Classes Available.\n                                                              (line   6)\n* classpath, displaying:                 Java Interface Functions.\n                                                              (line 167)\n* classpath, dynamic:                    Java Interface Functions.\n                                                              (line 167)\n* classpath, dynamic <1>:                Java Interface Functions.\n                                                              (line 201)\n* classpath, removing path:              Java Interface Functions.\n                                                              (line 212)\n* classpath, setting:                    Making Java Classes Available.\n                                                              (line   6)\n* classpath, static:                     Java Interface Functions.\n                                                              (line 167)\n* classpath.txt:                         Making Java Classes Available.\n                                                              (line   6)\n* clearing the screen:                   Cursor Motion.       (line  56)\n* code profiling:                        Profiling.           (line   6)\n* colors, graphics:                      Colors.              (line   6)\n* comma separated lists:                 Comma Separated Lists.\n                                                              (line   6)\n* command and output logs:               Diary and Echo Commands.\n                                                              (line   6)\n* command completion:                    Commands for Completion.\n                                                              (line   6)\n* command descriptions:                  A Sample Command Description.\n                                                              (line   6)\n* command echoing:                       Diary and Echo Commands.\n                                                              (line   6)\n* command history:                       Commands for History.\n                                                              (line   6)\n* command options:                       Command Line Options.\n                                                              (line   6)\n* command-line editing:                  Command Line Editing.\n                                                              (line   6)\n* comments:                              Comments.            (line   6)\n* comparison expressions:                Comparison Ops.      (line   6)\n* comparison expressions <1>:            Operator Overloading.\n                                                              (line   6)\n* complex-conjugate transpose:           Arithmetic Ops.      (line   6)\n* complex-conjugate transpose <1>:       Operator Overloading.\n                                                              (line   6)\n* containers:                            Data Containers.     (line   6)\n* continuation lines:                    Continuation Lines.  (line   6)\n* continue statement:                    The continue Statement.\n                                                              (line   6)\n* contour series:                        Contour Groups.      (line   6)\n* contributing to Octave:                How You Can Contribute to Octave.\n                                                              (line   6)\n* contributors:                          Preface.             (line   6)\n* conversion specifications (printf):    Formatted Output.    (line  79)\n* conversion specifications (scanf):     Formatted Input.     (line  90)\n* copy-on-write:                         Miscellaneous Techniques.\n                                                              (line  16)\n* copyright:                             Copying.             (line   6)\n* core dump:                             Bug Criteria.        (line   9)\n* COW:                                   Miscellaneous Techniques.\n                                                              (line  16)\n* creating graphics objects:             Graphics Objects.    (line  43)\n* cs-lists:                              Comma Separated Lists.\n                                                              (line   6)\n* customizing readline:                  Customizing readline.\n                                                              (line   6)\n* customizing the prompt:                Customizing the Prompt.\n                                                              (line   6)\n* DAE:                                   Differential Equations.\n                                                              (line  14)\n* data sources in object groups:         Data Sources in Object Groups.\n                                                              (line   6)\n* data structures:                       Data Structure Objects.\n                                                              (line   6)\n* data structures <1>:                   Structures.          (line   6)\n* data types:                            Data Types.          (line   6)\n* data types, built-in:                  Built-in Data Types. (line   6)\n* data types, user-defined:              User-defined Data Types.\n                                                              (line   6)\n* decrement operator:                    Assignment Ops.      (line 170)\n* default arguments:                     Default Arguments.   (line   6)\n* default graphics properties:           Managing Default Properties.\n                                                              (line   6)\n* defining functions:                    Functions and Scripts.\n                                                              (line   6)\n* deprecated functions:                  Obsolete Functions.  (line   6)\n* description format:                    Format of Descriptions.\n                                                              (line   6)\n* diagonal and permutation matrices:     Diagonal and Permutation Matrices.\n                                                              (line   6)\n* diagonal matrix expressions:           Expressions Involving Diagonal Matrices.\n                                                              (line   6)\n* dialog, displaying a dialog for selecting directories: I/O Dialogs.\n                                                              (line  10)\n* dialog, displaying a dialog for selecting files: I/O Dialogs.\n                                                              (line  22)\n* dialog, displaying a dialog for storing files: I/O Dialogs. (line  79)\n* dialog, displaying a help dialog:      I/O Dialogs.         (line 148)\n* dialog, displaying a list dialog:      I/O Dialogs.         (line 226)\n* dialog, displaying a message dialog:   I/O Dialogs.         (line 288)\n* dialog, displaying a modal dialog:     I/O Dialogs.         (line 398)\n* dialog, displaying a question dialog:  I/O Dialogs.         (line 326)\n* dialog, displaying a warning dialog:   I/O Dialogs.         (line 365)\n* dialog, displaying an error dialog:    I/O Dialogs.         (line 117)\n* dialog, displaying an input dialog:    I/O Dialogs.         (line 173)\n* diary of commands and output:          Diary and Echo Commands.\n                                                              (line   6)\n* differential equations:                Differential Equations.\n                                                              (line  15)\n* diffs, submitting:                     Sending Patches.     (line   6)\n* distribution of Octave:                Distribution.        (line   6)\n* division:                              Arithmetic Ops.      (line   6)\n* division <1>:                          Operator Overloading.\n                                                              (line   6)\n* do-until statement:                    The do-until Statement.\n                                                              (line   6)\n* documentation fonts:                   Fonts.               (line   6)\n* documentation notation:                Evaluation Notation. (line   6)\n* documenting functions:                 Comments and the Help System.\n                                                              (line   6)\n* documenting Octave programs:           Comments.            (line   6)\n* documenting user scripts:              Comments and the Help System.\n                                                              (line   6)\n* Dulmage-Mendelsohn decomposition:      Mathematical Considerations.\n                                                              (line 370)\n* dynamic classpath:                     Making Java Classes Available.\n                                                              (line   6)\n* dynamic classpath <1>:                 Java Interface Functions.\n                                                              (line 167)\n* dynamic classpath, adding new path:    Java Interface Functions.\n                                                              (line 201)\n* dynamic naming:                        Creating Structures. (line   6)\n* dynamic-linking:                       External Code Interface.\n                                                              (line   6)\n* Dynamically Linked Functions:          External Code Interface.\n                                                              (line   6)\n* echoing executing commands:            Diary and Echo Commands.\n                                                              (line   6)\n* editing the command line:              Command Line Editing.\n                                                              (line   6)\n* element-by-element evaluation:         Element-by-element Boolean Operators.\n                                                              (line   6)\n* else statement:                        The if Statement.    (line   6)\n* elseif statement:                      The if Statement.    (line   6)\n* end statement:                         Statements.          (line  16)\n* end, indexing:                         Index Expressions.   (line  46)\n* endfor statement:                      The for Statement.   (line   6)\n* endfunction statement:                 Defining Functions.  (line   6)\n* endif statement:                       The if Statement.    (line   6)\n* endswitch statement:                   The switch Statement.\n                                                              (line   6)\n* endwhile statement:                    The while Statement. (line   6)\n* end_try_catch:                         The try Statement.   (line   6)\n* end_unwind_protect:                    The unwind_protect Statement.\n                                                              (line   6)\n* equality operator:                     Comparison Ops.      (line   6)\n* equality operator <1>:                 Operator Overloading.\n                                                              (line   6)\n* equality, tests for:                   Comparison Ops.      (line   6)\n* equality, tests for <1>:               Operator Overloading.\n                                                              (line   6)\n* equations, nonlinear:                  Nonlinear Equations. (line   6)\n* erroneous messages:                    Bug Criteria.        (line  21)\n* erroneous results:                     Bug Criteria.        (line  12)\n* erroneous results <1>:                 Bug Reporting.       (line  70)\n* error bar series:                      Error Bar Series.    (line   6)\n* error ids:                             Catching Errors.     (line 127)\n* error message notation:                Error Messages.      (line   6)\n* error messages:                        Errors.              (line   6)\n* error messages, incorrect:             Bug Criteria.        (line  21)\n* escape sequence notation:              Escape Sequences in String Constants.\n                                                              (line   6)\n* evaluation notation:                   Evaluation Notation. (line   6)\n* executable scripts:                    Executable Octave Programs.\n                                                              (line   6)\n* execution speed:                       Miscellaneous Techniques.\n                                                              (line   6)\n* exiting octave:                        Running Octave.      (line  20)\n* exiting octave <1>:                    Quitting Octave.     (line   6)\n* exponentiation:                        Arithmetic Ops.      (line   6)\n* exponentiation <1>:                    Operator Overloading.\n                                                              (line   6)\n* expression, range:                     Ranges.              (line   6)\n* expressions:                           Expressions.         (line   6)\n* expressions, assignment:               Assignment Ops.      (line   6)\n* expressions, boolean:                  Boolean Expressions. (line   6)\n* expressions, boolean <1>:              Operator Overloading.\n                                                              (line   6)\n* expressions, comparison:               Comparison Ops.      (line   6)\n* expressions, comparison <1>:           Operator Overloading.\n                                                              (line   6)\n* expressions, logical:                  Boolean Expressions. (line   6)\n* expressions, logical <1>:              Operator Overloading.\n                                                              (line   6)\n* factorial function:                    Recursion.           (line   6)\n* fatal signal:                          Bug Criteria.        (line   9)\n* field, returning value of Java object field: Java Interface Functions.\n                                                              (line  76)\n* field, setting value of Java object field: Java Interface Functions.\n                                                              (line 104)\n* fields, displaying available fields of a Java object: Java Interface Functions.\n                                                              (line  57)\n* figure alphamap:                       Figure Properties.   (line  10)\n* figure beingdeleted:                   Figure Properties.   (line  14)\n* figure busyaction:                     Figure Properties.   (line  16)\n* figure buttondownfcn:                  Figure Properties.   (line  18)\n* figure children:                       Figure Properties.   (line  23)\n* figure clipping:                       Figure Properties.   (line  26)\n* figure closerequestfcn:                Figure Properties.   (line  29)\n* figure color:                          Figure Properties.   (line  37)\n* figure colormap:                       Figure Properties.   (line  40)\n* figure createfcn:                      Figure Properties.   (line  43)\n* figure currentaxes:                    Figure Properties.   (line  53)\n* figure currentcharacter:               Figure Properties.   (line  56)\n* figure currentobject:                  Figure Properties.   (line  59)\n* figure currentpoint:                   Figure Properties.   (line  61)\n* figure deletefcn:                      Figure Properties.   (line  76)\n* figure dockcontrols:                   Figure Properties.   (line  83)\n* figure filename:                       Figure Properties.   (line  86)\n* figure graphics object:                Graphics Objects.    (line  16)\n* figure graphicssmoothing:              Figure Properties.   (line  89)\n* figure handlevisibility:               Figure Properties.   (line  92)\n* figure hittest:                        Figure Properties.   (line  96)\n* figure integerhandle:                  Figure Properties.   (line  98)\n* figure interruptible:                  Figure Properties.   (line 101)\n* figure inverthardcopy:                 Figure Properties.   (line 103)\n* figure keypressfcn:                    Figure Properties.   (line 107)\n* figure keyreleasefcn:                  Figure Properties.   (line 115)\n* figure menubar:                        Figure Properties.   (line 134)\n* figure name:                           Figure Properties.   (line 138)\n* figure nextplot:                       Figure Properties.   (line 143)\n* figure numbertitle:                    Figure Properties.   (line 149)\n* figure outerposition:                  Figure Properties.   (line 153)\n* figure paperorientation:               Figure Properties.   (line 159)\n* figure paperposition:                  Figure Properties.   (line 166)\n* figure paperpositionmode:              Figure Properties.   (line 176)\n* figure papersize:                      Figure Properties.   (line 183)\n* figure papertype:                      Figure Properties.   (line 193)\n* figure paperunits:                     Figure Properties.   (line 198)\n* figure parent:                         Figure Properties.   (line 204)\n* figure pointer:                        Figure Properties.   (line 207)\n* figure pointershapecdata:              Figure Properties.   (line 210)\n* figure pointershapehotspot:            Figure Properties.   (line 213)\n* figure position:                       Figure Properties.   (line 216)\n* figure properties:                     Figure Properties.   (line   6)\n* figure renderer:                       Figure Properties.   (line 222)\n* figure renderermode:                   Figure Properties.   (line 225)\n* figure resize:                         Figure Properties.   (line 228)\n* figure resizefcn:                      Figure Properties.   (line 231)\n* figure selected:                       Figure Properties.   (line 234)\n* figure selectionhighlight:             Figure Properties.   (line 236)\n* figure selectiontype:                  Figure Properties.   (line 238)\n* figure sizechangedfcn:                 Figure Properties.   (line 240)\n* figure tag:                            Figure Properties.   (line 247)\n* figure toolbar:                        Figure Properties.   (line 250)\n* figure type:                           Figure Properties.   (line 255)\n* figure uicontextmenu:                  Figure Properties.   (line 258)\n* figure units:                          Figure Properties.   (line 262)\n* figure userdata:                       Figure Properties.   (line 266)\n* figure visible:                        Figure Properties.   (line 269)\n* figure windowbuttondownfcn:            Figure Properties.   (line 272)\n* figure windowbuttonmotionfcn:          Figure Properties.   (line 275)\n* figure windowbuttonupfcn:              Figure Properties.   (line 278)\n* figure windowkeypressfcn:              Figure Properties.   (line 289)\n* figure windowkeyreleasefcn:            Figure Properties.   (line 297)\n* figure windowscrollwheelfcn:           Figure Properties.   (line 305)\n* figure windowstyle:                    Figure Properties.   (line 308)\n* figure __modified__:                   Figure Properties.   (line   8)\n* finding minimums:                      Minimizers.          (line   6)\n* finish.m:                              Quitting Octave.     (line   6)\n* flag character (printf):               Output Conversion Syntax.\n                                                              (line  28)\n* flag character (scanf):                Input Conversion Syntax.\n                                                              (line  34)\n* for statement:                         The for Statement.   (line   6)\n* Frobenius norm:                        Basic Matrix Functions.\n                                                              (line 383)\n* function application:                  Function Application.\n                                                              (line   6)\n* function descriptions:                 A Sample Function Description.\n                                                              (line   6)\n* function file:                         Function Files.      (line   6)\n* function statement:                    Defining Functions.  (line   6)\n* functions, deprecated:                 Obsolete Functions.  (line   6)\n* functions, obsolete:                   Obsolete Functions.  (line   6)\n* functions, user-defined:               Functions and Scripts.\n                                                              (line   6)\n* funding Octave development:            How You Can Contribute to Octave.\n                                                              (line   6)\n* general p-norm:                        Basic Matrix Functions.\n                                                              (line 386)\n* global statement:                      Global Variables.    (line   6)\n* global variables:                      Global Variables.    (line   6)\n* grammar rules:                         Grammar and Parser.  (line   6)\n* graphics:                              Plotting.            (line   6)\n* graphics colors:                       Colors.              (line   6)\n* graphics data structures:              Graphics Data Structures.\n                                                              (line   6)\n* graphics line styles:                  Line Styles.         (line   6)\n* graphics marker styles:                Marker Styles.       (line   6)\n* graphics object properties:            Graphics Object Properties.\n                                                              (line   6)\n* graphics object, axes:                 Graphics Objects.    (line  19)\n* graphics object, figure:               Graphics Objects.    (line  16)\n* graphics object, image:                Graphics Objects.    (line  29)\n* graphics object, light:                Graphics Objects.    (line  38)\n* graphics object, line:                 Graphics Objects.    (line  23)\n* graphics object, patch:                Graphics Objects.    (line  32)\n* graphics object, root figure:          Graphics Objects.    (line  12)\n* graphics object, surface:              Graphics Objects.    (line  35)\n* graphics object, text:                 Graphics Objects.    (line  26)\n* graphics objects:                      Graphics Objects.    (line   6)\n* graphics objects, saving:              Graphics Objects.    (line 511)\n* graphics properties, default:          Managing Default Properties.\n                                                              (line   6)\n* graphics toolkits:                     Graphics Toolkits.   (line   6)\n* greater than operator:                 Comparison Ops.      (line   6)\n* greater than operator <1>:             Operator Overloading.\n                                                              (line   6)\n* group objects:                         Quiver Group.        (line   6)\n* group objects <1>:                     Scatter Group.       (line   6)\n* group objects <2>:                     Stair Group.         (line   6)\n* group objects <3>:                     Surface Group.       (line   6)\n* handle functions:                      Graphics Objects.    (line 233)\n* handle, function handles:              Function Handles Anonymous Functions Inline Functions.\n                                                              (line   6)\n* help, online:                          Getting Help.        (line   6)\n* help, user-defined functions:          Comments and the Help System.\n                                                              (line   6)\n* help, where to find:                   How To Get Help with Octave.\n                                                              (line   6)\n* Hermitian operator:                    Arithmetic Ops.      (line   6)\n* Hermitian operator <1>:                Operator Overloading.\n                                                              (line   6)\n* Hessenberg decomposition:              Matrix Factorizations.\n                                                              (line 153)\n* history:                               Preface.             (line   6)\n* history of commands:                   Commands for History.\n                                                              (line   6)\n* if statement:                          The if Statement.    (line   6)\n* image alphadata:                       Image Properties.    (line  10)\n* image alphadatamapping:                Image Properties.    (line  14)\n* image beingdeleted:                    Image Properties.    (line  18)\n* image busyaction:                      Image Properties.    (line  20)\n* image buttondownfcn:                   Image Properties.    (line  22)\n* image cdata:                           Image Properties.    (line  27)\n* image cdatamapping:                    Image Properties.    (line  29)\n* image children:                        Image Properties.    (line  31)\n* image clipping:                        Image Properties.    (line  34)\n* image createfcn:                       Image Properties.    (line  38)\n* image deletefcn:                       Image Properties.    (line  48)\n* image displayname:                     Image Properties.    (line  55)\n* image graphics object:                 Graphics Objects.    (line  29)\n* image handlevisibility:                Image Properties.    (line  58)\n* image hittest:                         Image Properties.    (line  62)\n* image interruptible:                   Image Properties.    (line  64)\n* image parent:                          Image Properties.    (line  66)\n* image properties:                      Image Properties.    (line   6)\n* image selected:                        Image Properties.    (line  69)\n* image selectionhighlight:              Image Properties.    (line  71)\n* image tag:                             Image Properties.    (line  73)\n* image type:                            Image Properties.    (line  76)\n* image uicontextmenu:                   Image Properties.    (line  79)\n* image userdata:                        Image Properties.    (line  83)\n* image visible:                         Image Properties.    (line  86)\n* image xdata:                           Image Properties.    (line  89)\n* image ydata:                           Image Properties.    (line  96)\n* image __modified__:                    Image Properties.    (line   8)\n* improving Octave:                      Bug Criteria.        (line  28)\n* improving Octave <1>:                  Sending Patches.     (line   6)\n* incorrect error messages:              Bug Criteria.        (line  21)\n* incorrect output:                      Bug Criteria.        (line  12)\n* incorrect output <1>:                  Bug Reporting.       (line  70)\n* incorrect results:                     Bug Criteria.        (line  12)\n* incorrect results <1>:                 Bug Reporting.       (line  70)\n* increment operator:                    Assignment Ops.      (line 170)\n* infinity norm:                         Basic Matrix Functions.\n                                                              (line 379)\n* initialization:                        Startup Files.       (line   6)\n* inline, inline functions:              Function Handles Anonymous Functions Inline Functions.\n                                                              (line   6)\n* input conversions, for scanf:          Table of Input Conversions.\n                                                              (line   6)\n* input history:                         Commands for History.\n                                                              (line   6)\n* installation trouble:                  Trouble.             (line   6)\n* installing Octave:                     Installation.        (line   6)\n* instance, creating a Java instance:    Java Interface Functions.\n                                                              (line  10)\n* introduction:                          Introduction.        (line   6)\n* introduction to graphics structures:   Introduction to Graphics Structures.\n                                                              (line   6)\n* invalid input:                         Bug Criteria.        (line  23)\n* Java, calling from Octave:             Java Interface.      (line   6)\n* Java, using with Octave:               Java Interface.      (line   6)\n* javaclasspath.txt:                     Making Java Classes Available.\n                                                              (line   6)\n* Kendall\u2019s Tau:                         Correlation and Regression Analysis.\n                                                              (line  78)\n* keywords:                              Keywords.            (line   6)\n* known causes of trouble:               Trouble.             (line   6)\n* language definition:                   Grammar and Parser.  (line   6)\n* less than operator:                    Comparison Ops.      (line   6)\n* less than operator <1>:                Operator Overloading.\n                                                              (line   6)\n* light beingdeleted:                    Light Properties.    (line  10)\n* light busyaction:                      Light Properties.    (line  12)\n* light buttondownfcn:                   Light Properties.    (line  14)\n* light children:                        Light Properties.    (line  19)\n* light clipping:                        Light Properties.    (line  22)\n* light color:                           Light Properties.    (line  26)\n* light createfcn:                       Light Properties.    (line  29)\n* light deletefcn:                       Light Properties.    (line  39)\n* light graphics object:                 Graphics Objects.    (line  38)\n* light handlevisibility:                Light Properties.    (line  46)\n* light hittest:                         Light Properties.    (line  50)\n* light interruptible:                   Light Properties.    (line  52)\n* light parent:                          Light Properties.    (line  54)\n* light position:                        Light Properties.    (line  57)\n* light properties:                      Light Properties.    (line   6)\n* light selected:                        Light Properties.    (line  60)\n* light selectionhighlight:              Light Properties.    (line  62)\n* light style:                           Light Properties.    (line  64)\n* light tag:                             Light Properties.    (line  69)\n* light type:                            Light Properties.    (line  72)\n* light uicontextmenu:                   Light Properties.    (line  75)\n* light userdata:                        Light Properties.    (line  79)\n* light visible:                         Light Properties.    (line  82)\n* light __modified__:                    Light Properties.    (line   8)\n* line beingdeleted:                     Line Properties.     (line  10)\n* line busyaction:                       Line Properties.     (line  12)\n* line buttondownfcn:                    Line Properties.     (line  14)\n* line children:                         Line Properties.     (line  19)\n* line clipping:                         Line Properties.     (line  22)\n* line color:                            Line Properties.     (line  26)\n* line createfcn:                        Line Properties.     (line  29)\n* line deletefcn:                        Line Properties.     (line  38)\n* line displayname:                      Line Properties.     (line  45)\n* line graphics object:                  Graphics Objects.    (line  23)\n* line handlevisibility:                 Line Properties.     (line  48)\n* line hittest:                          Line Properties.     (line  52)\n* line interpreter:                      Line Properties.     (line  54)\n* line interruptible:                    Line Properties.     (line  56)\n* line linestyle:                        Line Properties.     (line  58)\n* line linewidth:                        Line Properties.     (line  61)\n* line marker:                           Line Properties.     (line  64)\n* line markeredgecolor:                  Line Properties.     (line  67)\n* line markerfacecolor:                  Line Properties.     (line  73)\n* line markersize:                       Line Properties.     (line  79)\n* line parent:                           Line Properties.     (line  82)\n* line properties:                       Line Properties.     (line   6)\n* line selected:                         Line Properties.     (line  85)\n* line selectionhighlight:               Line Properties.     (line  87)\n* line series:                           Line Series.         (line   6)\n* line styles, graphics:                 Line Styles.         (line   6)\n* line tag:                              Line Properties.     (line  89)\n* line type:                             Line Properties.     (line  92)\n* line uicontextmenu:                    Line Properties.     (line  95)\n* line userdata:                         Line Properties.     (line  99)\n* line visible:                          Line Properties.     (line 102)\n* line xdata:                            Line Properties.     (line 105)\n* line xdatasource:                      Line Properties.     (line 108)\n* line ydata:                            Line Properties.     (line 111)\n* line ydatasource:                      Line Properties.     (line 114)\n* line zdata:                            Line Properties.     (line 117)\n* line zdatasource:                      Line Properties.     (line 120)\n* line __modified__:                     Line Properties.     (line   8)\n* linear algebra:                        Linear Algebra.      (line   6)\n* linear algebra, techniques:            Techniques Used for Linear Algebra.\n                                                              (line   6)\n* loading data:                          Simple File I/O.     (line   6)\n* local minimum:                         Minimizers.          (line   6)\n* logging commands and output:           Diary and Echo Commands.\n                                                              (line   6)\n* logical expressions:                   Boolean Expressions. (line   6)\n* logical expressions <1>:               Operator Overloading.\n                                                              (line   6)\n* logical operators:                     Boolean Expressions. (line   6)\n* logical operators <1>:                 Operator Overloading.\n                                                              (line   6)\n* loop:                                  The while Statement. (line   6)\n* looping over structure elements:       Looping Over Structure Elements.\n                                                              (line   6)\n* LP:                                    Optimization.        (line  18)\n* LU decomposition:                      Matrix Factorizations.\n                                                              (line 176)\n* lvalue:                                Assignment Ops.      (line  33)\n* map:                                   Function Application.\n                                                              (line   6)\n* marker styles, graphics:               Marker Styles.       (line   6)\n* matching failure, in scanf:            Formatted Input.     (line  95)\n* matrices:                              Matrices.            (line   6)\n* matrices, diagonal and permutation:    Diagonal and Permutation Matrices.\n                                                              (line   6)\n* matrix factorizations:                 Matrix Factorizations.\n                                                              (line   6)\n* matrix functions, basic:               Basic Matrix Functions.\n                                                              (line   6)\n* matrix multiplication:                 Arithmetic Ops.      (line   6)\n* matrix multiplication <1>:             Operator Overloading.\n                                                              (line   6)\n* matrix, functions of:                  Functions of a Matrix.\n                                                              (line   6)\n* matrix, permutation functions:         Permutation Matrix Functions.\n                                                              (line   6)\n* matrix, specialized solvers:           Specialized Solvers. (line   6)\n* matrix, zero elements:                 Zeros Treatment.     (line   6)\n* maximum field width (scanf):           Input Conversion Syntax.\n                                                              (line  42)\n* memory management:                     Miscellaneous Techniques.\n                                                              (line  16)\n* memory, displaying Java memory status: Java Interface Functions.\n                                                              (line 307)\n* memory, limitations on JVM:            Passing parameters to the JVM.\n                                                              (line   6)\n* messages, error:                       Errors.              (line   6)\n* method, invoking a method of a Java object: Java Interface Functions.\n                                                              (line 142)\n* methods, displaying available methods of a Java object: Java Interface Functions.\n                                                              (line 120)\n* mex:                                   Mex-Files.           (line   6)\n* mex-files:                             Mex-Files.           (line   6)\n* minimum field width (printf):          Output Conversion Syntax.\n                                                              (line  35)\n* missing data:                          Missing Data.        (line   6)\n* mkoctfile:                             Oct-Files.           (line   6)\n* multi-line comments:                   Block Comments.      (line   6)\n* multiplication:                        Arithmetic Ops.      (line   6)\n* multiplication <1>:                    Operator Overloading.\n                                                              (line   6)\n* negation:                              Arithmetic Ops.      (line   6)\n* negation <1>:                          Operator Overloading.\n                                                              (line   6)\n* NLP:                                   Optimization.        (line  17)\n* nonlinear equations:                   Nonlinear Equations. (line   6)\n* nonlinear programming:                 Optimization.        (line  18)\n* not operator:                          Boolean Expressions. (line   6)\n* not operator <1>:                      Operator Overloading.\n                                                              (line   6)\n* numeric constant:                      Numeric Objects.     (line   6)\n* numeric constant <1>:                  Numeric Data Types.  (line   6)\n* numeric value:                         Numeric Objects.     (line   6)\n* numeric value <1>:                     Numeric Data Types.  (line   6)\n* object groups:                         Object Groups.       (line   6)\n* object, creating a Java object:        Java Interface Functions.\n                                                              (line  10)\n* obsolete functions:                    Obsolete Functions.  (line   6)\n* oct:                                   Oct-Files.           (line   6)\n* oct-files:                             Oct-Files.           (line   6)\n* Octave and MATLAB, how to distinguish between: How to Distinguish Between Octave and Matlab.\n                                                              (line   6)\n* Octave API:                            External Code Interface.\n                                                              (line   6)\n* Octave command options:                Command Line Options.\n                                                              (line   6)\n* Octave, calling from Java:             Java Interface.      (line   6)\n* ODE:                                   Differential Equations.\n                                                              (line  15)\n* online help:                           Getting Help.        (line   6)\n* operator precedence:                   Operator Precedence. (line   6)\n* operators, arithmetic:                 Arithmetic Ops.      (line   6)\n* operators, arithmetic <1>:             Operator Overloading.\n                                                              (line   6)\n* operators, assignment:                 Assignment Ops.      (line   6)\n* operators, boolean:                    Boolean Expressions. (line   6)\n* operators, boolean <1>:                Operator Overloading.\n                                                              (line   6)\n* operators, decrement:                  Assignment Ops.      (line 169)\n* operators, increment:                  Assignment Ops.      (line 170)\n* operators, logical:                    Boolean Expressions. (line   6)\n* operators, logical <1>:                Operator Overloading.\n                                                              (line   6)\n* operators, relational:                 Comparison Ops.      (line   6)\n* operators, relational <1>:             Operator Overloading.\n                                                              (line   6)\n* optimization:                          Miscellaneous Techniques.\n                                                              (line   6)\n* optimization <1>:                      Optimization.        (line  18)\n* options, Octave command:               Command Line Options.\n                                                              (line   6)\n* or operator:                           Boolean Expressions. (line   6)\n* or operator <1>:                       Operator Overloading.\n                                                              (line   6)\n* oregonator:                            Ordinary Differential Equations.\n                                                              (line 153)\n* otherwise statement:                   The switch Statement.\n                                                              (line   6)\n* output conversions, for printf:        Table of Output Conversions.\n                                                              (line   6)\n* parser:                                Parser.              (line   6)\n* patch alphadatamapping:                Patch Properties.    (line  10)\n* patch ambientstrength:                 Patch Properties.    (line  14)\n* patch backfacelighting:                Patch Properties.    (line  17)\n* patch beingdeleted:                    Patch Properties.    (line  22)\n* patch busyaction:                      Patch Properties.    (line  24)\n* patch buttondownfcn:                   Patch Properties.    (line  26)\n* patch cdata:                           Patch Properties.    (line  31)\n* patch cdatamapping:                    Patch Properties.    (line  44)\n* patch children:                        Patch Properties.    (line  46)\n* patch clipping:                        Patch Properties.    (line  49)\n* patch createfcn:                       Patch Properties.    (line  53)\n* patch deletefcn:                       Patch Properties.    (line  63)\n* patch diffusestrength:                 Patch Properties.    (line  70)\n* patch displayname:                     Patch Properties.    (line  74)\n* patch edgealpha:                       Patch Properties.    (line  77)\n* patch edgecolor:                       Patch Properties.    (line  81)\n* patch edgelighting:                    Patch Properties.    (line  83)\n* patch facealpha:                       Patch Properties.    (line  90)\n* patch facecolor:                       Patch Properties.    (line  94)\n* patch facelighting:                    Patch Properties.    (line  96)\n* patch facenormals:                     Patch Properties.    (line 103)\n* patch facenormalsmode:                 Patch Properties.    (line 105)\n* patch faces:                           Patch Properties.    (line 107)\n* patch facevertexalphadata:             Patch Properties.    (line 109)\n* patch facevertexcdata:                 Patch Properties.    (line 113)\n* patch graphics object:                 Graphics Objects.    (line  32)\n* patch handlevisibility:                Patch Properties.    (line 115)\n* patch hittest:                         Patch Properties.    (line 119)\n* patch interpreter:                     Patch Properties.    (line 121)\n* patch interruptible:                   Patch Properties.    (line 124)\n* patch linestyle:                       Patch Properties.    (line 126)\n* patch linewidth:                       Patch Properties.    (line 128)\n* patch marker:                          Patch Properties.    (line 130)\n* patch markeredgecolor:                 Patch Properties.    (line 133)\n* patch markerfacecolor:                 Patch Properties.    (line 136)\n* patch markersize:                      Patch Properties.    (line 139)\n* patch parent:                          Patch Properties.    (line 142)\n* patch properties:                      Patch Properties.    (line   6)\n* patch selected:                        Patch Properties.    (line 145)\n* patch selectionhighlight:              Patch Properties.    (line 147)\n* patch specularcolorreflectance:        Patch Properties.    (line 149)\n* patch specularexponent:                Patch Properties.    (line 153)\n* patch specularstrength:                Patch Properties.    (line 157)\n* patch tag:                             Patch Properties.    (line 161)\n* patch type:                            Patch Properties.    (line 164)\n* patch uicontextmenu:                   Patch Properties.    (line 167)\n* patch userdata:                        Patch Properties.    (line 171)\n* patch vertexnormals:                   Patch Properties.    (line 174)\n* patch vertexnormalsmode:               Patch Properties.    (line 176)\n* patch vertices:                        Patch Properties.    (line 178)\n* patch visible:                         Patch Properties.    (line 180)\n* patch xdata:                           Patch Properties.    (line 183)\n* patch ydata:                           Patch Properties.    (line 185)\n* patch zdata:                           Patch Properties.    (line 187)\n* patch __modified__:                    Patch Properties.    (line   8)\n* patches, submitting:                   Sending Patches.     (line   6)\n* path, adding to classpath:             Java Interface Functions.\n                                                              (line 201)\n* path, removing from classpath:         Java Interface Functions.\n                                                              (line 212)\n* permutation matrix functions:          Permutation Matrix Functions.\n                                                              (line   6)\n* persistent statement:                  Persistent Variables.\n                                                              (line   6)\n* persistent variables:                  Persistent Variables.\n                                                              (line   6)\n* personal startup file:                 Startup Files.       (line  32)\n* PKG_ADD:                               Creating Packages.   (line  45)\n* PKG_DEL:                               Creating Packages.   (line  63)\n* plotting:                              Plotting.            (line   6)\n* plotting, high-level:                  High-Level Plotting. (line   6)\n* plotting, multiple plot windows:       Multiple Plot Windows.\n                                                              (line   6)\n* plotting, multiple plots per figure:   Multiple Plots on One Page.\n                                                              (line   6)\n* plotting, object manipulation:         Manipulation of Plot Objects.\n                                                              (line   6)\n* plotting, saving and printing plots:   Printing and Saving Plots.\n                                                              (line   6)\n* plotting, three-dimensional:           Three-Dimensional Plots.\n                                                              (line   6)\n* plotting, two-dimensional functions:   Two-dimensional Function Plotting.\n                                                              (line   6)\n* plotting, window manipulation:         Manipulation of Plot Windows.\n                                                              (line   6)\n* precision (printf):                    Output Conversion Syntax.\n                                                              (line  47)\n* printing notation:                     Printing Notation.   (line   6)\n* printing plots:                        Printing and Saving Plots.\n                                                              (line   6)\n* profiler:                              Profiling.           (line   6)\n* program, self contained:               Executable Octave Programs.\n                                                              (line   6)\n* Progress Bar:                          Progress Bar.        (line   6)\n* project startup file:                  Startup Files.       (line  36)\n* prompt customization:                  Customizing the Prompt.\n                                                              (line   6)\n* pseudoinverse:                         Basic Matrix Functions.\n                                                              (line 463)\n* pseudoinverse <1>:                     Expressions Involving Diagonal Matrices.\n                                                              (line  27)\n* QP:                                    Optimization.        (line  18)\n* QR factorization:                      Matrix Factorizations.\n                                                              (line 284)\n* quadratic programming:                 Optimization.        (line  18)\n* quitting octave:                       Running Octave.      (line  20)\n* quitting octave <1>:                   Quitting Octave.     (line   6)\n* quiver group:                          Quiver Group.        (line   6)\n* quotient:                              Arithmetic Ops.      (line   6)\n* quotient <1>:                          Operator Overloading.\n                                                              (line   6)\n* range expressions:                     Ranges.              (line   6)\n* readline customization:                Customizing readline.\n                                                              (line   6)\n* recycling:                             Broadcasting.        (line   6)\n* relational operators:                  Comparison Ops.      (line   6)\n* relational operators <1>:              Operator Overloading.\n                                                              (line   6)\n* reporting bugs:                        Reporting Bugs.      (line   6)\n* reporting bugs <1>:                    Bug Tracker.         (line   6)\n* results, incorrect:                    Bug Criteria.        (line  12)\n* results, incorrect <1>:                Bug Reporting.       (line  70)\n* root beingdeleted:                     Root Figure Properties.\n                                                              (line  10)\n* root busyaction:                       Root Figure Properties.\n                                                              (line  13)\n* root buttondownfcn:                    Root Figure Properties.\n                                                              (line  16)\n* root callbackobject:                   Root Figure Properties.\n                                                              (line  19)\n* root children:                         Root Figure Properties.\n                                                              (line  22)\n* root clipping:                         Root Figure Properties.\n                                                              (line  25)\n* root commandwindowsize:                Root Figure Properties.\n                                                              (line  28)\n* root createfcn:                        Root Figure Properties.\n                                                              (line  30)\n* root currentfigure:                    Root Figure Properties.\n                                                              (line  33)\n* root deletefcn:                        Root Figure Properties.\n                                                              (line  36)\n* root figure graphics object:           Graphics Objects.    (line  12)\n* root figure properties:                Root Figure Properties.\n                                                              (line   6)\n* root fixedwidthfontname:               Root Figure Properties.\n                                                              (line  39)\n* root handlevisibility:                 Root Figure Properties.\n                                                              (line  41)\n* root hittest:                          Root Figure Properties.\n                                                              (line  44)\n* root interruptible:                    Root Figure Properties.\n                                                              (line  47)\n* root monitorpositions:                 Root Figure Properties.\n                                                              (line  50)\n* root parent:                           Root Figure Properties.\n                                                              (line  53)\n* root pointerlocation:                  Root Figure Properties.\n                                                              (line  57)\n* root pointerwindow:                    Root Figure Properties.\n                                                              (line  60)\n* root screendepth:                      Root Figure Properties.\n                                                              (line  63)\n* root screenpixelsperinch:              Root Figure Properties.\n                                                              (line  65)\n* root screensize:                       Root Figure Properties.\n                                                              (line  67)\n* root selected:                         Root Figure Properties.\n                                                              (line  69)\n* root selectionhighlight:               Root Figure Properties.\n                                                              (line  72)\n* root showhiddenhandles:                Root Figure Properties.\n                                                              (line  75)\n* root tag:                              Root Figure Properties.\n                                                              (line  80)\n* root type:                             Root Figure Properties.\n                                                              (line  83)\n* root uicontextmenu:                    Root Figure Properties.\n                                                              (line  86)\n* root units:                            Root Figure Properties.\n                                                              (line  89)\n* root userdata:                         Root Figure Properties.\n                                                              (line  91)\n* root visible:                          Root Figure Properties.\n                                                              (line  94)\n* root __modified__:                     Root Figure Properties.\n                                                              (line   8)\n* saving data:                           Simple File I/O.     (line   6)\n* saving graphics objects:               Graphics Objects.    (line 511)\n* saving plots:                          Printing and Saving Plots.\n                                                              (line   6)\n* scatter group:                         Scatter Group.       (line   6)\n* Schur decomposition:                   Matrix Factorizations.\n                                                              (line 538)\n* script files:                          Functions and Scripts.\n                                                              (line   6)\n* scripts:                               Executable Octave Programs.\n                                                              (line   6)\n* self contained programs:               Executable Octave Programs.\n                                                              (line   6)\n* series objects:                        Area Series.         (line   6)\n* series objects <1>:                    Bar Series.          (line   6)\n* series objects <2>:                    Contour Groups.      (line   6)\n* series objects <3>:                    Error Bar Series.    (line   6)\n* series objects <4>:                    Line Series.         (line   6)\n* series objects <5>:                    Stem Series.         (line   6)\n* short-circuit evaluation:              Short-circuit Boolean Operators.\n                                                              (line   6)\n* side effect:                           Assignment Ops.      (line  26)\n* SIMD:                                  Broadcasting.        (line   6)\n* singular value decomposition:          Matrix Factorizations.\n                                                              (line 626)\n* site exiting file:                     Quitting Octave.     (line   6)\n* site startup file:                     Startup Files.       (line  11)\n* Spearman\u2019s Rho:                        Correlation and Regression Analysis.\n                                                              (line  63)\n* speedups:                              Miscellaneous Techniques.\n                                                              (line   6)\n* stair group:                           Stair Group.         (line   6)\n* startup:                               Startup Files.       (line   6)\n* startup files:                         Startup Files.       (line  10)\n* statements:                            Statements.          (line   6)\n* static classpath:                      Making Java Classes Available.\n                                                              (line   6)\n* static classpath <1>:                  Java Interface Functions.\n                                                              (line 167)\n* stem series:                           Stem Series.         (line   6)\n* strings:                               String Objects.      (line   6)\n* strings <1>:                           Strings.             (line   6)\n* structural rank:                       Sparse Linear Algebra.\n                                                              (line 306)\n* structure elements, looping over:      Looping Over Structure Elements.\n                                                              (line   6)\n* structures:                            Data Structure Objects.\n                                                              (line   6)\n* structures <1>:                        Structures.          (line   6)\n* submitting diffs:                      Sending Patches.     (line   6)\n* submitting patches:                    Sending Patches.     (line   6)\n* subtraction:                           Arithmetic Ops.      (line   6)\n* subtraction <1>:                       Operator Overloading.\n                                                              (line   6)\n* suggestions:                           Bug Criteria.        (line  28)\n* surface alphadata:                     Surface Properties.  (line  10)\n* surface alphadatamapping:              Surface Properties.  (line  14)\n* surface ambientstrength:               Surface Properties.  (line  18)\n* surface backfacelighting:              Surface Properties.  (line  21)\n* surface beingdeleted:                  Surface Properties.  (line  26)\n* surface busyaction:                    Surface Properties.  (line  28)\n* surface buttondownfcn:                 Surface Properties.  (line  30)\n* surface cdata:                         Surface Properties.  (line  35)\n* surface cdatamapping:                  Surface Properties.  (line  37)\n* surface cdatasource:                   Surface Properties.  (line  39)\n* surface children:                      Surface Properties.  (line  41)\n* surface clipping:                      Surface Properties.  (line  44)\n* surface createfcn:                     Surface Properties.  (line  48)\n* surface deletefcn:                     Surface Properties.  (line  58)\n* surface diffusestrength:               Surface Properties.  (line  65)\n* surface displayname:                   Surface Properties.  (line  69)\n* surface edgealpha:                     Surface Properties.  (line  72)\n* surface edgecolor:                     Surface Properties.  (line  76)\n* surface edgelighting:                  Surface Properties.  (line  78)\n* surface facealpha:                     Surface Properties.  (line  85)\n* surface facecolor:                     Surface Properties.  (line  89)\n* surface facelighting:                  Surface Properties.  (line  91)\n* surface facenormals:                   Surface Properties.  (line  98)\n* surface facenormalsmode:               Surface Properties.  (line 100)\n* surface graphics object:               Graphics Objects.    (line  35)\n* surface group:                         Surface Group.       (line   6)\n* surface handlevisibility:              Surface Properties.  (line 102)\n* surface hittest:                       Surface Properties.  (line 106)\n* surface interpreter:                   Surface Properties.  (line 108)\n* surface interruptible:                 Surface Properties.  (line 110)\n* surface linestyle:                     Surface Properties.  (line 112)\n* surface linewidth:                     Surface Properties.  (line 115)\n* surface marker:                        Surface Properties.  (line 118)\n* surface markeredgecolor:               Surface Properties.  (line 121)\n* surface markerfacecolor:               Surface Properties.  (line 124)\n* surface markersize:                    Surface Properties.  (line 127)\n* surface meshstyle:                     Surface Properties.  (line 130)\n* surface parent:                        Surface Properties.  (line 132)\n* surface properties:                    Surface Properties.  (line   6)\n* surface selected:                      Surface Properties.  (line 135)\n* surface selectionhighlight:            Surface Properties.  (line 137)\n* surface specularcolorreflectance:      Surface Properties.  (line 139)\n* surface specularexponent:              Surface Properties.  (line 143)\n* surface specularstrength:              Surface Properties.  (line 147)\n* surface tag:                           Surface Properties.  (line 151)\n* surface type:                          Surface Properties.  (line 154)\n* surface uicontextmenu:                 Surface Properties.  (line 157)\n* surface userdata:                      Surface Properties.  (line 161)\n* surface vertexnormals:                 Surface Properties.  (line 164)\n* surface vertexnormalsmode:             Surface Properties.  (line 166)\n* surface visible:                       Surface Properties.  (line 168)\n* surface xdata:                         Surface Properties.  (line 171)\n* surface xdatasource:                   Surface Properties.  (line 173)\n* surface ydata:                         Surface Properties.  (line 175)\n* surface ydatasource:                   Surface Properties.  (line 177)\n* surface zdata:                         Surface Properties.  (line 179)\n* surface zdatasource:                   Surface Properties.  (line 181)\n* surface __modified__:                  Surface Properties.  (line   8)\n* switch statement:                      The switch Statement.\n                                                              (line   6)\n* test functions:                        Test and Demo Functions.\n                                                              (line   6)\n* tests for equality:                    Comparison Ops.      (line   6)\n* tests for equality <1>:                Operator Overloading.\n                                                              (line   6)\n* text backgroundcolor:                  Text Properties.     (line  10)\n* text beingdeleted:                     Text Properties.     (line  14)\n* text busyaction:                       Text Properties.     (line  16)\n* text buttondownfcn:                    Text Properties.     (line  18)\n* text children:                         Text Properties.     (line  23)\n* text clipping:                         Text Properties.     (line  26)\n* text color:                            Text Properties.     (line  30)\n* text createfcn:                        Text Properties.     (line  33)\n* text deletefcn:                        Text Properties.     (line  42)\n* text displayname:                      Text Properties.     (line  49)\n* text edgecolor:                        Text Properties.     (line  51)\n* text editing:                          Text Properties.     (line  55)\n* text extent:                           Text Properties.     (line  58)\n* text fontangle:                        Text Properties.     (line  62)\n* text fontname:                         Text Properties.     (line  66)\n* text fontsize:                         Text Properties.     (line  69)\n* text fontunits:                        Text Properties.     (line  72)\n* text fontweight:                       Text Properties.     (line  75)\n* text graphics object:                  Graphics Objects.    (line  26)\n* text handlevisibility:                 Text Properties.     (line  78)\n* text hittest:                          Text Properties.     (line  82)\n* text horizontalalignment:              Text Properties.     (line  84)\n* text interpreter:                      Text Properties.     (line  86)\n* text interruptible:                    Text Properties.     (line  91)\n* text linestyle:                        Text Properties.     (line  93)\n* text linewidth:                        Text Properties.     (line  97)\n* text margin:                           Text Properties.     (line 101)\n* text parent:                           Text Properties.     (line 105)\n* text position:                         Text Properties.     (line 108)\n* text properties:                       Text Properties.     (line   6)\n* text rotation:                         Text Properties.     (line 113)\n* text selected:                         Text Properties.     (line 116)\n* text selectionhighlight:               Text Properties.     (line 118)\n* text string:                           Text Properties.     (line 120)\n* text tag:                              Text Properties.     (line 123)\n* text type:                             Text Properties.     (line 126)\n* text uicontextmenu:                    Text Properties.     (line 129)\n* text units:                            Text Properties.     (line 133)\n* text userdata:                         Text Properties.     (line 135)\n* text verticalalignment:                Text Properties.     (line 138)\n* text visible:                          Text Properties.     (line 140)\n* text __modified__:                     Text Properties.     (line   8)\n* toolkit customization:                 Customizing Toolkit Behavior.\n                                                              (line   6)\n* toolkits, graphics:                    Graphics Toolkits.   (line   6)\n* transpose:                             Arithmetic Ops.      (line   6)\n* transpose <1>:                         Operator Overloading.\n                                                              (line   6)\n* transpose, complex-conjugate:          Arithmetic Ops.      (line   6)\n* transpose, complex-conjugate <1>:      Operator Overloading.\n                                                              (line   6)\n* troubleshooting:                       Trouble.             (line   6)\n* try statement:                         The try Statement.   (line   6)\n* uibuttongroup backgroundcolor:         Uibuttongroup Properties.\n                                                              (line  10)\n* uibuttongroup beingdeleted:            Uibuttongroup Properties.\n                                                              (line  12)\n* uibuttongroup bordertype:              Uibuttongroup Properties.\n                                                              (line  14)\n* uibuttongroup borderwidth:             Uibuttongroup Properties.\n                                                              (line  16)\n* uibuttongroup busyaction:              Uibuttongroup Properties.\n                                                              (line  18)\n* uibuttongroup buttondownfcn:           Uibuttongroup Properties.\n                                                              (line  20)\n* uibuttongroup children:                Uibuttongroup Properties.\n                                                              (line  25)\n* uibuttongroup clipping:                Uibuttongroup Properties.\n                                                              (line  28)\n* uibuttongroup createfcn:               Uibuttongroup Properties.\n                                                              (line  32)\n* uibuttongroup deletefcn:               Uibuttongroup Properties.\n                                                              (line  42)\n* uibuttongroup fontangle:               Uibuttongroup Properties.\n                                                              (line  50)\n* uibuttongroup fontname:                Uibuttongroup Properties.\n                                                              (line  52)\n* uibuttongroup fontsize:                Uibuttongroup Properties.\n                                                              (line  54)\n* uibuttongroup fontunits:               Uibuttongroup Properties.\n                                                              (line  56)\n* uibuttongroup fontweight:              Uibuttongroup Properties.\n                                                              (line  58)\n* uibuttongroup foregroundcolor:         Uibuttongroup Properties.\n                                                              (line  60)\n* uibuttongroup handlevisibility:        Uibuttongroup Properties.\n                                                              (line  62)\n* uibuttongroup highlightcolor:          Uibuttongroup Properties.\n                                                              (line  66)\n* uibuttongroup hittest:                 Uibuttongroup Properties.\n                                                              (line  68)\n* uibuttongroup interruptible:           Uibuttongroup Properties.\n                                                              (line  70)\n* uibuttongroup parent:                  Uibuttongroup Properties.\n                                                              (line  72)\n* uibuttongroup position:                Uibuttongroup Properties.\n                                                              (line  75)\n* uibuttongroup properties:              Uibuttongroup Properties.\n                                                              (line   6)\n* uibuttongroup resizefcn:               Uibuttongroup Properties.\n                                                              (line  77)\n* uibuttongroup selected:                Uibuttongroup Properties.\n                                                              (line  79)\n* uibuttongroup selectedobject:          Uibuttongroup Properties.\n                                                              (line  81)\n* uibuttongroup selectionchangedfcn:     Uibuttongroup Properties.\n                                                              (line  83)\n* uibuttongroup selectionhighlight:      Uibuttongroup Properties.\n                                                              (line  85)\n* uibuttongroup shadowcolor:             Uibuttongroup Properties.\n                                                              (line  87)\n* uibuttongroup sizechangedfcn:          Uibuttongroup Properties.\n                                                              (line  89)\n* uibuttongroup tag:                     Uibuttongroup Properties.\n                                                              (line  91)\n* uibuttongroup title:                   Uibuttongroup Properties.\n                                                              (line  94)\n* uibuttongroup titleposition:           Uibuttongroup Properties.\n                                                              (line  96)\n* uibuttongroup type:                    Uibuttongroup Properties.\n                                                              (line  98)\n* uibuttongroup uicontextmenu:           Uibuttongroup Properties.\n                                                              (line 102)\n* uibuttongroup units:                   Uibuttongroup Properties.\n                                                              (line 106)\n* uibuttongroup userdata:                Uibuttongroup Properties.\n                                                              (line 108)\n* uibuttongroup visible:                 Uibuttongroup Properties.\n                                                              (line 111)\n* uibuttongroup __modified__:            Uibuttongroup Properties.\n                                                              (line   8)\n* uicontextmenu beingdeleted:            Uicontextmenu Properties.\n                                                              (line  10)\n* uicontextmenu busyaction:              Uicontextmenu Properties.\n                                                              (line  12)\n* uicontextmenu buttondownfcn:           Uicontextmenu Properties.\n                                                              (line  14)\n* uicontextmenu callback:                Uicontextmenu Properties.\n                                                              (line  17)\n* uicontextmenu children:                Uicontextmenu Properties.\n                                                              (line  19)\n* uicontextmenu clipping:                Uicontextmenu Properties.\n                                                              (line  22)\n* uicontextmenu createfcn:               Uicontextmenu Properties.\n                                                              (line  26)\n* uicontextmenu deletefcn:               Uicontextmenu Properties.\n                                                              (line  36)\n* uicontextmenu handlevisibility:        Uicontextmenu Properties.\n                                                              (line  44)\n* uicontextmenu hittest:                 Uicontextmenu Properties.\n                                                              (line  48)\n* uicontextmenu interruptible:           Uicontextmenu Properties.\n                                                              (line  50)\n* uicontextmenu parent:                  Uicontextmenu Properties.\n                                                              (line  52)\n* uicontextmenu position:                Uicontextmenu Properties.\n                                                              (line  55)\n* uicontextmenu properties:              Uicontextmenu Properties.\n                                                              (line   6)\n* uicontextmenu selected:                Uicontextmenu Properties.\n                                                              (line  57)\n* uicontextmenu selectionhighlight:      Uicontextmenu Properties.\n                                                              (line  59)\n* uicontextmenu tag:                     Uicontextmenu Properties.\n                                                              (line  61)\n* uicontextmenu type:                    Uicontextmenu Properties.\n                                                              (line  64)\n* uicontextmenu uicontextmenu:           Uicontextmenu Properties.\n                                                              (line  68)\n* uicontextmenu userdata:                Uicontextmenu Properties.\n                                                              (line  72)\n* uicontextmenu visible:                 Uicontextmenu Properties.\n                                                              (line  75)\n* uicontextmenu __modified__:            Uicontextmenu Properties.\n                                                              (line   8)\n* uicontrol backgroundcolor:             Uicontrol Properties.\n                                                              (line  10)\n* uicontrol beingdeleted:                Uicontrol Properties.\n                                                              (line  12)\n* uicontrol busyaction:                  Uicontrol Properties.\n                                                              (line  14)\n* uicontrol buttondownfcn:               Uicontrol Properties.\n                                                              (line  16)\n* uicontrol callback:                    Uicontrol Properties.\n                                                              (line  21)\n* uicontrol cdata:                       Uicontrol Properties.\n                                                              (line  23)\n* uicontrol children:                    Uicontrol Properties.\n                                                              (line  25)\n* uicontrol clipping:                    Uicontrol Properties.\n                                                              (line  28)\n* uicontrol createfcn:                   Uicontrol Properties.\n                                                              (line  32)\n* uicontrol deletefcn:                   Uicontrol Properties.\n                                                              (line  42)\n* uicontrol enable:                      Uicontrol Properties.\n                                                              (line  49)\n* uicontrol extent:                      Uicontrol Properties.\n                                                              (line  51)\n* uicontrol fontangle:                   Uicontrol Properties.\n                                                              (line  53)\n* uicontrol fontname:                    Uicontrol Properties.\n                                                              (line  55)\n* uicontrol fontsize:                    Uicontrol Properties.\n                                                              (line  57)\n* uicontrol fontunits:                   Uicontrol Properties.\n                                                              (line  59)\n* uicontrol fontweight:                  Uicontrol Properties.\n                                                              (line  61)\n* uicontrol foregroundcolor:             Uicontrol Properties.\n                                                              (line  63)\n* uicontrol handlevisibility:            Uicontrol Properties.\n                                                              (line  65)\n* uicontrol hittest:                     Uicontrol Properties.\n                                                              (line  69)\n* uicontrol horizontalalignment:         Uicontrol Properties.\n                                                              (line  71)\n* uicontrol interruptible:               Uicontrol Properties.\n                                                              (line  73)\n* uicontrol keypressfcn:                 Uicontrol Properties.\n                                                              (line  75)\n* uicontrol listboxtop:                  Uicontrol Properties.\n                                                              (line  77)\n* uicontrol max:                         Uicontrol Properties.\n                                                              (line  79)\n* uicontrol min:                         Uicontrol Properties.\n                                                              (line  81)\n* uicontrol parent:                      Uicontrol Properties.\n                                                              (line  83)\n* uicontrol position:                    Uicontrol Properties.\n                                                              (line  86)\n* uicontrol properties:                  Uicontrol Properties.\n                                                              (line   6)\n* uicontrol selected:                    Uicontrol Properties.\n                                                              (line  88)\n* uicontrol selectionhighlight:          Uicontrol Properties.\n                                                              (line  90)\n* uicontrol sliderstep:                  Uicontrol Properties.\n                                                              (line  92)\n* uicontrol string:                      Uicontrol Properties.\n                                                              (line  94)\n* uicontrol style:                       Uicontrol Properties.\n                                                              (line  96)\n* uicontrol tag:                         Uicontrol Properties.\n                                                              (line  98)\n* uicontrol tooltipstring:               Uicontrol Properties.\n                                                              (line 101)\n* uicontrol type:                        Uicontrol Properties.\n                                                              (line 103)\n* uicontrol uicontextmenu:               Uicontrol Properties.\n                                                              (line 106)\n* uicontrol units:                       Uicontrol Properties.\n                                                              (line 110)\n* uicontrol userdata:                    Uicontrol Properties.\n                                                              (line 112)\n* uicontrol value:                       Uicontrol Properties.\n                                                              (line 115)\n* uicontrol verticalalignment:           Uicontrol Properties.\n                                                              (line 117)\n* uicontrol visible:                     Uicontrol Properties.\n                                                              (line 119)\n* uicontrol __modified__:                Uicontrol Properties.\n                                                              (line   8)\n* uimenu accelerator:                    Uimenu Properties.   (line  10)\n* uimenu beingdeleted:                   Uimenu Properties.   (line  12)\n* uimenu busyaction:                     Uimenu Properties.   (line  14)\n* uimenu buttondownfcn:                  Uimenu Properties.   (line  16)\n* uimenu callback:                       Uimenu Properties.   (line  19)\n* uimenu checked:                        Uimenu Properties.   (line  21)\n* uimenu children:                       Uimenu Properties.   (line  23)\n* uimenu clipping:                       Uimenu Properties.   (line  26)\n* uimenu createfcn:                      Uimenu Properties.   (line  30)\n* uimenu deletefcn:                      Uimenu Properties.   (line  40)\n* uimenu enable:                         Uimenu Properties.   (line  47)\n* uimenu foregroundcolor:                Uimenu Properties.   (line  49)\n* uimenu handlevisibility:               Uimenu Properties.   (line  51)\n* uimenu hittest:                        Uimenu Properties.   (line  55)\n* uimenu interruptible:                  Uimenu Properties.   (line  57)\n* uimenu label:                          Uimenu Properties.   (line  59)\n* uimenu parent:                         Uimenu Properties.   (line  61)\n* uimenu position:                       Uimenu Properties.   (line  64)\n* uimenu properties:                     Uimenu Properties.   (line   6)\n* uimenu selected:                       Uimenu Properties.   (line  66)\n* uimenu selectionhighlight:             Uimenu Properties.   (line  68)\n* uimenu separator:                      Uimenu Properties.   (line  70)\n* uimenu tag:                            Uimenu Properties.   (line  72)\n* uimenu type:                           Uimenu Properties.   (line  75)\n* uimenu uicontextmenu:                  Uimenu Properties.   (line  78)\n* uimenu userdata:                       Uimenu Properties.   (line  82)\n* uimenu visible:                        Uimenu Properties.   (line  85)\n* uimenu __modified__:                   Uimenu Properties.   (line   8)\n* uipanel backgroundcolor:               Uipanel Properties.  (line  10)\n* uipanel beingdeleted:                  Uipanel Properties.  (line  12)\n* uipanel bordertype:                    Uipanel Properties.  (line  14)\n* uipanel borderwidth:                   Uipanel Properties.  (line  16)\n* uipanel busyaction:                    Uipanel Properties.  (line  18)\n* uipanel buttondownfcn:                 Uipanel Properties.  (line  20)\n* uipanel children:                      Uipanel Properties.  (line  25)\n* uipanel clipping:                      Uipanel Properties.  (line  28)\n* uipanel createfcn:                     Uipanel Properties.  (line  32)\n* uipanel deletefcn:                     Uipanel Properties.  (line  42)\n* uipanel fontangle:                     Uipanel Properties.  (line  49)\n* uipanel fontname:                      Uipanel Properties.  (line  51)\n* uipanel fontsize:                      Uipanel Properties.  (line  53)\n* uipanel fontunits:                     Uipanel Properties.  (line  55)\n* uipanel fontweight:                    Uipanel Properties.  (line  57)\n* uipanel foregroundcolor:               Uipanel Properties.  (line  59)\n* uipanel handlevisibility:              Uipanel Properties.  (line  61)\n* uipanel highlightcolor:                Uipanel Properties.  (line  65)\n* uipanel hittest:                       Uipanel Properties.  (line  67)\n* uipanel interruptible:                 Uipanel Properties.  (line  69)\n* uipanel parent:                        Uipanel Properties.  (line  71)\n* uipanel position:                      Uipanel Properties.  (line  74)\n* uipanel properties:                    Uipanel Properties.  (line   6)\n* uipanel resizefcn:                     Uipanel Properties.  (line  76)\n* uipanel selected:                      Uipanel Properties.  (line  78)\n* uipanel selectionhighlight:            Uipanel Properties.  (line  80)\n* uipanel shadowcolor:                   Uipanel Properties.  (line  82)\n* uipanel tag:                           Uipanel Properties.  (line  84)\n* uipanel title:                         Uipanel Properties.  (line  87)\n* uipanel titleposition:                 Uipanel Properties.  (line  89)\n* uipanel type:                          Uipanel Properties.  (line  91)\n* uipanel uicontextmenu:                 Uipanel Properties.  (line  94)\n* uipanel units:                         Uipanel Properties.  (line  98)\n* uipanel userdata:                      Uipanel Properties.  (line 100)\n* uipanel visible:                       Uipanel Properties.  (line 103)\n* uipanel __modified__:                  Uipanel Properties.  (line   8)\n* uipushtool beingdeleted:               Uipushtool Properties.\n                                                              (line  10)\n* uipushtool busyaction:                 Uipushtool Properties.\n                                                              (line  12)\n* uipushtool buttondownfcn:              Uipushtool Properties.\n                                                              (line  14)\n* uipushtool cdata:                      Uipushtool Properties.\n                                                              (line  17)\n* uipushtool children:                   Uipushtool Properties.\n                                                              (line  19)\n* uipushtool clickedcallback:            Uipushtool Properties.\n                                                              (line  22)\n* uipushtool clipping:                   Uipushtool Properties.\n                                                              (line  24)\n* uipushtool createfcn:                  Uipushtool Properties.\n                                                              (line  28)\n* uipushtool deletefcn:                  Uipushtool Properties.\n                                                              (line  38)\n* uipushtool enable:                     Uipushtool Properties.\n                                                              (line  46)\n* uipushtool handlevisibility:           Uipushtool Properties.\n                                                              (line  48)\n* uipushtool hittest:                    Uipushtool Properties.\n                                                              (line  52)\n* uipushtool interruptible:              Uipushtool Properties.\n                                                              (line  54)\n* uipushtool parent:                     Uipushtool Properties.\n                                                              (line  56)\n* uipushtool properties:                 Uipushtool Properties.\n                                                              (line   6)\n* uipushtool selected:                   Uipushtool Properties.\n                                                              (line  59)\n* uipushtool selectionhighlight:         Uipushtool Properties.\n                                                              (line  61)\n* uipushtool separator:                  Uipushtool Properties.\n                                                              (line  63)\n* uipushtool tag:                        Uipushtool Properties.\n                                                              (line  65)\n* uipushtool tooltipstring:              Uipushtool Properties.\n                                                              (line  68)\n* uipushtool type:                       Uipushtool Properties.\n                                                              (line  70)\n* uipushtool uicontextmenu:              Uipushtool Properties.\n                                                              (line  73)\n* uipushtool userdata:                   Uipushtool Properties.\n                                                              (line  77)\n* uipushtool visible:                    Uipushtool Properties.\n                                                              (line  80)\n* uipushtool __modified__:               Uipushtool Properties.\n                                                              (line   8)\n* uitoggletool beingdeleted:             Uitoggletool Properties.\n                                                              (line  10)\n* uitoggletool busyaction:               Uitoggletool Properties.\n                                                              (line  12)\n* uitoggletool buttondownfcn:            Uitoggletool Properties.\n                                                              (line  14)\n* uitoggletool cdata:                    Uitoggletool Properties.\n                                                              (line  17)\n* uitoggletool children:                 Uitoggletool Properties.\n                                                              (line  19)\n* uitoggletool clickedcallback:          Uitoggletool Properties.\n                                                              (line  22)\n* uitoggletool clipping:                 Uitoggletool Properties.\n                                                              (line  24)\n* uitoggletool createfcn:                Uitoggletool Properties.\n                                                              (line  28)\n* uitoggletool deletefcn:                Uitoggletool Properties.\n                                                              (line  38)\n* uitoggletool enable:                   Uitoggletool Properties.\n                                                              (line  46)\n* uitoggletool handlevisibility:         Uitoggletool Properties.\n                                                              (line  48)\n* uitoggletool hittest:                  Uitoggletool Properties.\n                                                              (line  52)\n* uitoggletool interruptible:            Uitoggletool Properties.\n                                                              (line  54)\n* uitoggletool offcallback:              Uitoggletool Properties.\n                                                              (line  56)\n* uitoggletool oncallback:               Uitoggletool Properties.\n                                                              (line  58)\n* uitoggletool parent:                   Uitoggletool Properties.\n                                                              (line  60)\n* uitoggletool properties:               Uitoggletool Properties.\n                                                              (line   6)\n* uitoggletool selected:                 Uitoggletool Properties.\n                                                              (line  63)\n* uitoggletool selectionhighlight:       Uitoggletool Properties.\n                                                              (line  65)\n* uitoggletool separator:                Uitoggletool Properties.\n                                                              (line  67)\n* uitoggletool state:                    Uitoggletool Properties.\n                                                              (line  69)\n* uitoggletool tag:                      Uitoggletool Properties.\n                                                              (line  71)\n* uitoggletool tooltipstring:            Uitoggletool Properties.\n                                                              (line  74)\n* uitoggletool type:                     Uitoggletool Properties.\n                                                              (line  76)\n* uitoggletool uicontextmenu:            Uitoggletool Properties.\n                                                              (line  79)\n* uitoggletool userdata:                 Uitoggletool Properties.\n                                                              (line  83)\n* uitoggletool visible:                  Uitoggletool Properties.\n                                                              (line  86)\n* uitoggletool __modified__:             Uitoggletool Properties.\n                                                              (line   8)\n* uitoolbar beingdeleted:                Uitoolbar Properties.\n                                                              (line  10)\n* uitoolbar busyaction:                  Uitoolbar Properties.\n                                                              (line  12)\n* uitoolbar buttondownfcn:               Uitoolbar Properties.\n                                                              (line  14)\n* uitoolbar children:                    Uitoolbar Properties.\n                                                              (line  17)\n* uitoolbar clipping:                    Uitoolbar Properties.\n                                                              (line  20)\n* uitoolbar createfcn:                   Uitoolbar Properties.\n                                                              (line  24)\n* uitoolbar deletefcn:                   Uitoolbar Properties.\n                                                              (line  34)\n* uitoolbar handlevisibility:            Uitoolbar Properties.\n                                                              (line  41)\n* uitoolbar hittest:                     Uitoolbar Properties.\n                                                              (line  45)\n* uitoolbar interruptible:               Uitoolbar Properties.\n                                                              (line  47)\n* uitoolbar parent:                      Uitoolbar Properties.\n                                                              (line  49)\n* uitoolbar properties:                  Uitoolbar Properties.\n                                                              (line   6)\n* uitoolbar selected:                    Uitoolbar Properties.\n                                                              (line  52)\n* uitoolbar selectionhighlight:          Uitoolbar Properties.\n                                                              (line  54)\n* uitoolbar tag:                         Uitoolbar Properties.\n                                                              (line  56)\n* uitoolbar type:                        Uitoolbar Properties.\n                                                              (line  59)\n* uitoolbar uicontextmenu:               Uitoolbar Properties.\n                                                              (line  62)\n* uitoolbar userdata:                    Uitoolbar Properties.\n                                                              (line  66)\n* uitoolbar visible:                     Uitoolbar Properties.\n                                                              (line  69)\n* uitoolbar __modified__:                Uitoolbar Properties.\n                                                              (line   8)\n* unary minus:                           Arithmetic Ops.      (line   6)\n* unary minus <1>:                       Operator Overloading.\n                                                              (line   6)\n* undefined behavior:                    Bug Criteria.        (line  15)\n* undefined function value:              Bug Criteria.        (line  15)\n* unwind_protect statement:              The unwind_protect Statement.\n                                                              (line   6)\n* unwind_protect_cleanup:                The unwind_protect Statement.\n                                                              (line   6)\n* use of comments:                       Comments.            (line   6)\n* user-defined data types:               User-defined Data Types.\n                                                              (line   6)\n* user-defined functions:                Functions and Scripts.\n                                                              (line   6)\n* user-defined variables:                Variables.           (line   6)\n* using Octave with Java:                Java Interface.      (line   6)\n* varargin:                              Variable-length Argument Lists.\n                                                              (line   6)\n* varargout:                             Variable-length Return Lists.\n                                                              (line   6)\n* variable-length argument lists:        Variable-length Argument Lists.\n                                                              (line   6)\n* variable-length return lists:          Variable-length Return Lists.\n                                                              (line   6)\n* variables, global:                     Global Variables.    (line   6)\n* variables, persistent:                 Persistent Variables.\n                                                              (line   6)\n* variables, user-defined:               Variables.           (line   6)\n* vectorization:                         Vectorization and Faster Code Execution.\n                                                              (line   6)\n* vectorize:                             Vectorization and Faster Code Execution.\n                                                              (line   6)\n* version startup file:                  Startup Files.       (line  21)\n* warning ids:                           Issuing Warnings.    (line 109)\n* warranty:                              Copying.             (line   6)\n* while statement:                       The while Statement. (line   6)\n* wrong answers:                         Bug Criteria.        (line  12)\n* wrong answers <1>:                     Bug Reporting.       (line  70)\n\n\u001f\nFile: octave.info,  Node: Function Index,  Next: Operator Index,  Prev: Concept Index,  Up: Top\n\nFunction Index\n**************\n\n\u0000\b[index\u0000\b]\n* Menu:\n\n* abs:                                   Complex Arithmetic. (line    9)\n* accumarray:                            Accumulation.       (line   10)\n* accumarray <1>:                        Accumulation.       (line   11)\n* accumdim:                              Accumulation.       (line  101)\n* acos:                                  Trigonometry.       (line  108)\n* acosd:                                 Trigonometry.       (line  260)\n* acosh:                                 Trigonometry.       (line  171)\n* acot:                                  Trigonometry.       (line  128)\n* acotd:                                 Trigonometry.       (line  286)\n* acoth:                                 Trigonometry.       (line  191)\n* acsc:                                  Trigonometry.       (line  123)\n* acscd:                                 Trigonometry.       (line  281)\n* acsch:                                 Trigonometry.       (line  186)\n* addlistener:                           Object Groups.      (line  122)\n* addpath:                               Manipulating the Load Path.\n                                                             (line   21)\n* addpath <1>:                           Manipulating the Load Path.\n                                                             (line   22)\n* addpref:                               User-Defined Preferences.\n                                                             (line   56)\n* addpref <1>:                           User-Defined Preferences.\n                                                             (line   57)\n* addproperty:                           Object Groups.      (line   51)\n* addproperty <1>:                       Object Groups.      (line   52)\n* addtodate:                             Timing Utilities.   (line  660)\n* add_input_event_hook:                  Parser.             (line   16)\n* add_input_event_hook <1>:              Parser.             (line   17)\n* airy:                                  Special Functions.  (line    6)\n* all:                                   Finding Elements and Checking Conditions.\n                                                             (line   31)\n* all <1>:                               Finding Elements and Checking Conditions.\n                                                             (line   32)\n* allchild:                              Graphics Objects.   (line  491)\n* allow_noninteger_range_as_index:       Advanced Indexing.  (line  245)\n* allow_noninteger_range_as_index <1>:   Advanced Indexing.  (line  246)\n* allow_noninteger_range_as_index <2>:   Advanced Indexing.  (line  247)\n* amd:                                   Mathematical Considerations.\n                                                             (line  120)\n* amd <1>:                               Mathematical Considerations.\n                                                             (line  121)\n* ancestor:                              Graphics Objects.   (line  474)\n* ancestor <1>:                          Graphics Objects.   (line  475)\n* and:                                   Element-by-element Boolean Operators.\n                                                             (line   65)\n* and <1>:                               Element-by-element Boolean Operators.\n                                                             (line   66)\n* angle:                                 Complex Arithmetic. (line   22)\n* annotation:                            Plot Annotations.   (line  327)\n* annotation <1>:                        Plot Annotations.   (line  328)\n* annotation <2>:                        Plot Annotations.   (line  329)\n* annotation <3>:                        Plot Annotations.   (line  330)\n* annotation <4>:                        Plot Annotations.   (line  331)\n* annotation <5>:                        Plot Annotations.   (line  332)\n* annotation <6>:                        Plot Annotations.   (line  333)\n* annotation <7>:                        Plot Annotations.   (line  334)\n* annotation <8>:                        Plot Annotations.   (line  335)\n* annotation <9>:                        Plot Annotations.   (line  336)\n* annotation <10>:                       Plot Annotations.   (line  337)\n* anova:                                 Tests.              (line   38)\n* any:                                   Finding Elements and Checking Conditions.\n                                                             (line   11)\n* any <1>:                               Finding Elements and Checking Conditions.\n                                                             (line   12)\n* arch_fit:                              Signal Processing.  (line  385)\n* arch_rnd:                              Signal Processing.  (line  408)\n* arch_test:                             Signal Processing.  (line  420)\n* area:                                  Two-Dimensional Plots.\n                                                             (line 1573)\n* area <1>:                              Two-Dimensional Plots.\n                                                             (line 1574)\n* area <2>:                              Two-Dimensional Plots.\n                                                             (line 1575)\n* area <3>:                              Two-Dimensional Plots.\n                                                             (line 1576)\n* area <4>:                              Two-Dimensional Plots.\n                                                             (line 1577)\n* area <5>:                              Two-Dimensional Plots.\n                                                             (line 1578)\n* arg:                                   Complex Arithmetic. (line   21)\n* argnames:                              Inline Functions.   (line   47)\n* argv:                                  Command Line Options.\n                                                             (line  192)\n* arma_rnd:                              Signal Processing.  (line  451)\n* arrayfun:                              Function Application.\n                                                             (line   13)\n* arrayfun <1>:                          Function Application.\n                                                             (line   14)\n* arrayfun <2>:                          Function Application.\n                                                             (line   15)\n* arrayfun <3>:                          Function Application.\n                                                             (line   16)\n* arrayfun <4>:                          Function Application.\n                                                             (line   17)\n* arrayfun <5>:                          Function Application.\n                                                             (line   18)\n* ascii:                                 FTP Objects.        (line   83)\n* asctime:                               Timing Utilities.   (line  165)\n* asec:                                  Trigonometry.       (line  118)\n* asecd:                                 Trigonometry.       (line  276)\n* asech:                                 Trigonometry.       (line  181)\n* asin:                                  Trigonometry.       (line  103)\n* asind:                                 Trigonometry.       (line  255)\n* asinh:                                 Trigonometry.       (line  166)\n* assert:                                Test Functions.     (line  403)\n* assert <1>:                            Test Functions.     (line  404)\n* assert <2>:                            Test Functions.     (line  405)\n* assert <3>:                            Test Functions.     (line  406)\n* assert <4>:                            Test Functions.     (line  407)\n* assert <5>:                            Test Functions.     (line  408)\n* assignin:                              Evaluation in a Different Context.\n                                                             (line   75)\n* atan:                                  Trigonometry.       (line  113)\n* atan2:                                 Trigonometry.       (line  196)\n* atan2d:                                Trigonometry.       (line  270)\n* atand:                                 Trigonometry.       (line  265)\n* atanh:                                 Trigonometry.       (line  176)\n* atexit:                                Quitting Octave.    (line   31)\n* atexit <1>:                            Quitting Octave.    (line   32)\n* audiodevinfo:                          Audio Device Information.\n                                                             (line    6)\n* audiodevinfo <1>:                      Audio Device Information.\n                                                             (line    8)\n* audiodevinfo <2>:                      Audio Device Information.\n                                                             (line    9)\n* audiodevinfo <3>:                      Audio Device Information.\n                                                             (line   10)\n* audiodevinfo <4>:                      Audio Device Information.\n                                                             (line   11)\n* audiodevinfo <5>:                      Audio Device Information.\n                                                             (line   13)\n* audioformats:                          Audio File Utilities.\n                                                             (line   62)\n* audioformats <1>:                      Audio File Utilities.\n                                                             (line   63)\n* audioinfo:                             Audio File Utilities.\n                                                             (line   10)\n* audioplayer:                           Audio Player.       (line   12)\n* audioplayer <1>:                       Audio Player.       (line   13)\n* audioplayer <2>:                       Audio Player.       (line   14)\n* audioplayer <3>:                       Audio Player.       (line   15)\n* audioplayer <4>:                       Audio Player.       (line   16)\n* audioread:                             Audio File Utilities.\n                                                             (line   13)\n* audioread <1>:                         Audio File Utilities.\n                                                             (line   14)\n* audioread <2>:                         Audio File Utilities.\n                                                             (line   16)\n* audioread <3>:                         Audio File Utilities.\n                                                             (line   17)\n* audiorecorder:                         Audio Recorder.     (line   13)\n* audiorecorder <1>:                     Audio Recorder.     (line   14)\n* audiorecorder <2>:                     Audio Recorder.     (line   15)\n* audiowrite:                            Audio File Utilities.\n                                                             (line   31)\n* audiowrite <1>:                        Audio File Utilities.\n                                                             (line   32)\n* autoload:                              Overloading and Autoloading.\n                                                             (line   47)\n* autoload <1>:                          Overloading and Autoloading.\n                                                             (line   48)\n* autoload <2>:                          Overloading and Autoloading.\n                                                             (line   49)\n* autoreg_matrix:                        Signal Processing.  (line  467)\n* autumn:                                Representing Images.\n                                                             (line  269)\n* autumn <1>:                            Representing Images.\n                                                             (line  270)\n* available_graphics_toolkits:           Graphics Toolkits.  (line   26)\n* axes:                                  Graphics Objects.   (line   58)\n* axes <1>:                              Graphics Objects.   (line   59)\n* axes <2>:                              Graphics Objects.   (line   60)\n* axes <3>:                              Graphics Objects.   (line   61)\n* axis:                                  Axis Configuration. (line   10)\n* axis <1>:                              Axis Configuration. (line   11)\n* axis <2>:                              Axis Configuration. (line   12)\n* axis <3>:                              Axis Configuration. (line   13)\n* axis <4>:                              Axis Configuration. (line   14)\n* axis <5>:                              Axis Configuration. (line   15)\n* axis <6>:                              Axis Configuration. (line   16)\n* axis <7>:                              Axis Configuration. (line   17)\n* axis <8>:                              Axis Configuration. (line   18)\n* balance:                               Basic Matrix Functions.\n                                                             (line    6)\n* balance <1>:                           Basic Matrix Functions.\n                                                             (line    7)\n* balance <2>:                           Basic Matrix Functions.\n                                                             (line    8)\n* balance <3>:                           Basic Matrix Functions.\n                                                             (line    9)\n* balance <4>:                           Basic Matrix Functions.\n                                                             (line   10)\n* bandwidth:                             Basic Matrix Functions.\n                                                             (line   44)\n* bandwidth <1>:                         Basic Matrix Functions.\n                                                             (line   45)\n* bar:                                   Two-Dimensional Plots.\n                                                             (line  308)\n* bar <1>:                               Two-Dimensional Plots.\n                                                             (line  309)\n* bar <2>:                               Two-Dimensional Plots.\n                                                             (line  310)\n* bar <3>:                               Two-Dimensional Plots.\n                                                             (line  311)\n* bar <4>:                               Two-Dimensional Plots.\n                                                             (line  312)\n* bar <5>:                               Two-Dimensional Plots.\n                                                             (line  313)\n* bar <6>:                               Two-Dimensional Plots.\n                                                             (line  314)\n* barh:                                  Two-Dimensional Plots.\n                                                             (line  384)\n* barh <1>:                              Two-Dimensional Plots.\n                                                             (line  385)\n* barh <2>:                              Two-Dimensional Plots.\n                                                             (line  386)\n* barh <3>:                              Two-Dimensional Plots.\n                                                             (line  387)\n* barh <4>:                              Two-Dimensional Plots.\n                                                             (line  388)\n* barh <5>:                              Two-Dimensional Plots.\n                                                             (line  389)\n* barh <6>:                              Two-Dimensional Plots.\n                                                             (line  390)\n* bartlett:                              Signal Processing.  (line  478)\n* bartlett_test:                         Tests.              (line   64)\n* base2dec:                              String Conversions. (line  120)\n* base64_decode:                         Base64 and Binary Data Transmission.\n                                                             (line   15)\n* base64_decode <1>:                     Base64 and Binary Data Transmission.\n                                                             (line   16)\n* base64_encode:                         Base64 and Binary Data Transmission.\n                                                             (line   10)\n* beep:                                  Raising Errors.     (line  145)\n* beep_on_error:                         Raising Errors.     (line  155)\n* beep_on_error <1>:                     Raising Errors.     (line  156)\n* beep_on_error <2>:                     Raising Errors.     (line  157)\n* besselh:                               Special Functions.  (line   43)\n* besseli:                               Special Functions.  (line   41)\n* besselj:                               Special Functions.  (line   39)\n* besselk:                               Special Functions.  (line   42)\n* bessely:                               Special Functions.  (line   40)\n* beta:                                  Special Functions.  (line   96)\n* betacdf:                               Distributions.      (line   57)\n* betainc:                               Special Functions.  (line  111)\n* betaincinv:                            Special Functions.  (line  128)\n* betainv:                               Distributions.      (line   61)\n* betaln:                                Special Functions.  (line  138)\n* betapdf:                               Distributions.      (line   53)\n* betarnd:                               Random Number Generation.\n                                                             (line   43)\n* betarnd <1>:                           Random Number Generation.\n                                                             (line   44)\n* betarnd <2>:                           Random Number Generation.\n                                                             (line   45)\n* betarnd <3>:                           Random Number Generation.\n                                                             (line   46)\n* bicg:                                  Specialized Solvers.\n                                                             (line    6)\n* bicg <1>:                              Specialized Solvers.\n                                                             (line    7)\n* bicg <2>:                              Specialized Solvers.\n                                                             (line    8)\n* bicgstab:                              Specialized Solvers.\n                                                             (line   52)\n* bicgstab <1>:                          Specialized Solvers.\n                                                             (line   53)\n* bicgstab <2>:                          Specialized Solvers.\n                                                             (line   54)\n* bin2dec:                               String Conversions. (line   13)\n* binary:                                FTP Objects.        (line   92)\n* bincoeff:                              Special Functions.  (line  155)\n* binocdf:                               Distributions.      (line   71)\n* binoinv:                               Distributions.      (line   77)\n* binopdf:                               Distributions.      (line   65)\n* binornd:                               Random Number Generation.\n                                                             (line   60)\n* binornd <1>:                           Random Number Generation.\n                                                             (line   61)\n* binornd <2>:                           Random Number Generation.\n                                                             (line   62)\n* binornd <3>:                           Random Number Generation.\n                                                             (line   63)\n* bitand:                                Bit Manipulations.  (line   66)\n* bitcmp:                                Bit Manipulations.  (line   97)\n* bitget:                                Bit Manipulations.  (line   25)\n* bitor:                                 Bit Manipulations.  (line   76)\n* bitpack:                               Built-in Data Types.\n                                                             (line  152)\n* bitset:                                Bit Manipulations.  (line   10)\n* bitset <1>:                            Bit Manipulations.  (line   11)\n* bitshift:                              Bit Manipulations.  (line  117)\n* bitshift <1>:                          Bit Manipulations.  (line  118)\n* bitunpack:                             Built-in Data Types.\n                                                             (line  183)\n* bitxor:                                Bit Manipulations.  (line   84)\n* blackman:                              Signal Processing.  (line  485)\n* blackman <1>:                          Signal Processing.  (line  486)\n* blackman <2>:                          Signal Processing.  (line  487)\n* blanks:                                Creating Strings.   (line   12)\n* blkdiag:                               Rearranging Matrices.\n                                                             (line  601)\n* blkmm:                                 Functions of a Matrix.\n                                                             (line   79)\n* bone:                                  Representing Images.\n                                                             (line  279)\n* bone <1>:                              Representing Images.\n                                                             (line  280)\n* box:                                   Plot Annotations.   (line  221)\n* box <1>:                               Plot Annotations.   (line  222)\n* box <2>:                               Plot Annotations.   (line  223)\n* box <3>:                               Plot Annotations.   (line  224)\n* brighten:                              Representing Images.\n                                                             (line  513)\n* brighten <1>:                          Representing Images.\n                                                             (line  514)\n* brighten <2>:                          Representing Images.\n                                                             (line  515)\n* brighten <3>:                          Representing Images.\n                                                             (line  516)\n* bsxfun:                                Broadcasting.       (line   85)\n* builtin:                               Overloading and Autoloading.\n                                                             (line   14)\n* built_in_docstrings_file:              Getting Help.       (line  225)\n* built_in_docstrings_file <1>:          Getting Help.       (line  226)\n* built_in_docstrings_file <2>:          Getting Help.       (line  227)\n* bunzip2:                               File Archiving Utilities.\n                                                             (line    6)\n* bunzip2 <1>:                           File Archiving Utilities.\n                                                             (line    7)\n* byte_size:                             Matrices and Arrays in Oct-Files.\n                                                             (line   92)\n* bzip2:                                 File Archiving Utilities.\n                                                             (line  176)\n* bzip2 <1>:                             File Archiving Utilities.\n                                                             (line  177)\n* calendar:                              Timing Utilities.   (line  669)\n* calendar <1>:                          Timing Utilities.   (line  670)\n* calendar <2>:                          Timing Utilities.   (line  671)\n* calendar <3>:                          Timing Utilities.   (line  672)\n* camlight:                              Three-Dimensional Plots.\n                                                             (line  986)\n* camlight <1>:                          Three-Dimensional Plots.\n                                                             (line  987)\n* camlight <2>:                          Three-Dimensional Plots.\n                                                             (line  988)\n* camlight <3>:                          Three-Dimensional Plots.\n                                                             (line  989)\n* camlight <4>:                          Three-Dimensional Plots.\n                                                             (line  990)\n* camlight <5>:                          Three-Dimensional Plots.\n                                                             (line  991)\n* camlight <6>:                          Three-Dimensional Plots.\n                                                             (line  992)\n* camlight <7>:                          Three-Dimensional Plots.\n                                                             (line  993)\n* canonicalize_file_name:                Filesystem Utilities.\n                                                             (line  561)\n* cart2pol:                              Coordinate Transformations.\n                                                             (line    6)\n* cart2pol <1>:                          Coordinate Transformations.\n                                                             (line    7)\n* cart2pol <2>:                          Coordinate Transformations.\n                                                             (line    8)\n* cart2pol <3>:                          Coordinate Transformations.\n                                                             (line    9)\n* cart2pol <4>:                          Coordinate Transformations.\n                                                             (line   10)\n* cart2sph:                              Coordinate Transformations.\n                                                             (line   52)\n* cart2sph <1>:                          Coordinate Transformations.\n                                                             (line   53)\n* cart2sph <2>:                          Coordinate Transformations.\n                                                             (line   54)\n* cast:                                  Built-in Data Types.\n                                                             (line   49)\n* cat:                                   Rearranging Matrices.\n                                                             (line  123)\n* cauchy_cdf:                            Distributions.      (line   91)\n* cauchy_cdf <1>:                        Distributions.      (line   92)\n* cauchy_inv:                            Distributions.      (line   99)\n* cauchy_inv <1>:                        Distributions.      (line  100)\n* cauchy_pdf:                            Distributions.      (line   83)\n* cauchy_pdf <1>:                        Distributions.      (line   84)\n* cauchy_rnd:                            Random Number Generation.\n                                                             (line   78)\n* cauchy_rnd <1>:                        Random Number Generation.\n                                                             (line   79)\n* cauchy_rnd <2>:                        Random Number Generation.\n                                                             (line   80)\n* cauchy_rnd <3>:                        Random Number Generation.\n                                                             (line   81)\n* caxis:                                 Axis Configuration. (line  117)\n* caxis <1>:                             Axis Configuration. (line  118)\n* caxis <2>:                             Axis Configuration. (line  119)\n* caxis <3>:                             Axis Configuration. (line  120)\n* caxis <4>:                             Axis Configuration. (line  121)\n* cbrt:                                  Exponents and Logarithms.\n                                                             (line  104)\n* ccolamd:                               Mathematical Considerations.\n                                                             (line  152)\n* ccolamd <1>:                           Mathematical Considerations.\n                                                             (line  153)\n* ccolamd <2>:                           Mathematical Considerations.\n                                                             (line  154)\n* ccolamd <3>:                           Mathematical Considerations.\n                                                             (line  155)\n* cd:                                    FTP Objects.        (line   64)\n* cd <1>:                                FTP Objects.        (line   65)\n* cd <2>:                                Current Working Directory.\n                                                             (line    6)\n* cd <3>:                                Current Working Directory.\n                                                             (line    7)\n* cd <4>:                                Current Working Directory.\n                                                             (line    8)\n* ceil:                                  Utility Functions.  (line    6)\n* cell:                                  Creating Cell Arrays.\n                                                             (line   44)\n* cell <1>:                              Creating Cell Arrays.\n                                                             (line   45)\n* cell <2>:                              Creating Cell Arrays.\n                                                             (line   46)\n* cell <3>:                              Creating Cell Arrays.\n                                                             (line   47)\n* cell2mat:                              Processing Data in Cell Arrays.\n                                                             (line   17)\n* cell2struct:                           Processing Data in Cell Arrays.\n                                                             (line   28)\n* cell2struct <1>:                       Processing Data in Cell Arrays.\n                                                             (line   29)\n* celldisp:                              Basic Usage of Cell Arrays.\n                                                             (line   53)\n* celldisp <1>:                          Basic Usage of Cell Arrays.\n                                                             (line   54)\n* cellfun:                               Function Application.\n                                                             (line  115)\n* cellfun <1>:                           Function Application.\n                                                             (line  116)\n* cellfun <2>:                           Function Application.\n                                                             (line  117)\n* cellfun <3>:                           Function Application.\n                                                             (line  118)\n* cellfun <4>:                           Function Application.\n                                                             (line  119)\n* cellfun <5>:                           Function Application.\n                                                             (line  120)\n* cellfun <6>:                           Function Application.\n                                                             (line  121)\n* cellfun <7>:                           Function Application.\n                                                             (line  122)\n* cellindexmat:                          Indexing Cell Arrays.\n                                                             (line  113)\n* cellslices:                            Creating Cell Arrays.\n                                                             (line  130)\n* cellstr:                               Cell Arrays of Strings.\n                                                             (line   25)\n* center:                                Basic Statistical Functions.\n                                                             (line   11)\n* center <1>:                            Basic Statistical Functions.\n                                                             (line   12)\n* cgs:                                   Specialized Solvers.\n                                                             (line   97)\n* cgs <1>:                               Specialized Solvers.\n                                                             (line   98)\n* cgs <2>:                               Specialized Solvers.\n                                                             (line   99)\n* char:                                  Concatenating Strings.\n                                                             (line   92)\n* char <1>:                              Concatenating Strings.\n                                                             (line   93)\n* char <2>:                              Concatenating Strings.\n                                                             (line   94)\n* char <3>:                              Concatenating Strings.\n                                                             (line   95)\n* chdir:                                 Current Working Directory.\n                                                             (line    9)\n* chi2cdf:                               Distributions.      (line  112)\n* chi2inv:                               Distributions.      (line  117)\n* chi2pdf:                               Distributions.      (line  107)\n* chi2rnd:                               Random Number Generation.\n                                                             (line   95)\n* chi2rnd <1>:                           Random Number Generation.\n                                                             (line   96)\n* chi2rnd <2>:                           Random Number Generation.\n                                                             (line   97)\n* chi2rnd <3>:                           Random Number Generation.\n                                                             (line   98)\n* chisquare_test_homogeneity:            Tests.              (line   77)\n* chisquare_test_independence:           Tests.              (line   91)\n* chol:                                  Matrix Factorizations.\n                                                             (line    6)\n* chol <1>:                              Matrix Factorizations.\n                                                             (line    7)\n* chol <2>:                              Matrix Factorizations.\n                                                             (line    8)\n* chol <3>:                              Matrix Factorizations.\n                                                             (line    9)\n* chol <4>:                              Matrix Factorizations.\n                                                             (line   10)\n* chol <5>:                              Matrix Factorizations.\n                                                             (line   11)\n* chol2inv:                              Matrix Factorizations.\n                                                             (line   68)\n* choldelete:                            Matrix Factorizations.\n                                                             (line  127)\n* cholinsert:                            Matrix Factorizations.\n                                                             (line  103)\n* cholinsert <1>:                        Matrix Factorizations.\n                                                             (line  104)\n* cholinv:                               Matrix Factorizations.\n                                                             (line   61)\n* cholshift:                             Matrix Factorizations.\n                                                             (line  138)\n* cholupdate:                            Matrix Factorizations.\n                                                             (line   79)\n* chop:                                  Utility Functions.  (line  433)\n* circshift:                             Rearranging Matrices.\n                                                             (line  277)\n* circshift <1>:                         Rearranging Matrices.\n                                                             (line  278)\n* citation:                              Citing Octave in Publications.\n                                                             (line   13)\n* citation <1>:                          Citing Octave in Publications.\n                                                             (line   14)\n* cla:                                   Manipulation of Plot Windows.\n                                                             (line  183)\n* cla <1>:                               Manipulation of Plot Windows.\n                                                             (line  184)\n* cla <2>:                               Manipulation of Plot Windows.\n                                                             (line  185)\n* cla <3>:                               Manipulation of Plot Windows.\n                                                             (line  186)\n* clabel:                                Plot Annotations.   (line  180)\n* clabel <1>:                            Plot Annotations.   (line  181)\n* clabel <2>:                            Plot Annotations.   (line  182)\n* clabel <3>:                            Plot Annotations.   (line  183)\n* clabel <4>:                            Plot Annotations.   (line  184)\n* clabel <5>:                            Plot Annotations.   (line  185)\n* class:                                 Built-in Data Types.\n                                                             (line   16)\n* class <1>:                             Built-in Data Types.\n                                                             (line   17)\n* class <2>:                             Built-in Data Types.\n                                                             (line   18)\n* clc:                                   Cursor Motion.      (line   59)\n* clear:                                 Status of Variables.\n                                                             (line  267)\n* clf:                                   Manipulation of Plot Windows.\n                                                             (line  159)\n* clf <1>:                               Manipulation of Plot Windows.\n                                                             (line  160)\n* clf <2>:                               Manipulation of Plot Windows.\n                                                             (line  161)\n* clf <3>:                               Manipulation of Plot Windows.\n                                                             (line  162)\n* clf <4>:                               Manipulation of Plot Windows.\n                                                             (line  163)\n* clock:                                 Timing Utilities.   (line  347)\n* cloglog:                               Basic Statistical Functions.\n                                                             (line  198)\n* close:                                 Manipulation of Plot Windows.\n                                                             (line  226)\n* close <1>:                             Manipulation of Plot Windows.\n                                                             (line  227)\n* close <2>:                             Manipulation of Plot Windows.\n                                                             (line  228)\n* close <3>:                             Manipulation of Plot Windows.\n                                                             (line  229)\n* close <4>:                             Manipulation of Plot Windows.\n                                                             (line  230)\n* close <5>:                             Manipulation of Plot Windows.\n                                                             (line  231)\n* close <6>:                             Manipulation of Plot Windows.\n                                                             (line  232)\n* close <7>:                             FTP Objects.        (line   35)\n* closereq:                              Manipulation of Plot Windows.\n                                                             (line  258)\n* cmpermute:                             Representing Images.\n                                                             (line  609)\n* cmpermute <1>:                         Representing Images.\n                                                             (line  610)\n* cmunique:                              Representing Images.\n                                                             (line  576)\n* cmunique <1>:                          Representing Images.\n                                                             (line  577)\n* cmunique <2>:                          Representing Images.\n                                                             (line  578)\n* colamd:                                Mathematical Considerations.\n                                                             (line  233)\n* colamd <1>:                            Mathematical Considerations.\n                                                             (line  234)\n* colamd <2>:                            Mathematical Considerations.\n                                                             (line  235)\n* colamd <3>:                            Mathematical Considerations.\n                                                             (line  236)\n* colloc:                                Orthogonal Collocation.\n                                                             (line    6)\n* colon:                                 Defining Indexing And Indexed Assignment.\n                                                             (line  203)\n* colon <1>:                             Defining Indexing And Indexed Assignment.\n                                                             (line  204)\n* colorbar:                              Plot Annotations.   (line  260)\n* colorbar <1>:                          Plot Annotations.   (line  261)\n* colorbar <2>:                          Plot Annotations.   (line  262)\n* colorbar <3>:                          Plot Annotations.   (line  263)\n* colorbar <4>:                          Plot Annotations.   (line  264)\n* colorbar <5>:                          Plot Annotations.   (line  265)\n* colorbar <6>:                          Plot Annotations.   (line  266)\n* colorbar <7>:                          Plot Annotations.   (line  267)\n* colorbar <8>:                          Plot Annotations.   (line  268)\n* colorcube:                             Representing Images.\n                                                             (line  289)\n* colorcube <1>:                         Representing Images.\n                                                             (line  290)\n* colormap:                              Representing Images.\n                                                             (line  173)\n* colormap <1>:                          Representing Images.\n                                                             (line  174)\n* colormap <2>:                          Representing Images.\n                                                             (line  175)\n* colormap <3>:                          Representing Images.\n                                                             (line  176)\n* colormap <4>:                          Representing Images.\n                                                             (line  177)\n* colormap <5>:                          Representing Images.\n                                                             (line  178)\n* colperm:                               Mathematical Considerations.\n                                                             (line  301)\n* colstyle:                              Marker Styles.      (line   27)\n* columns:                               Object Sizes.       (line   23)\n* comet:                                 Two-Dimensional Plots.\n                                                             (line 1653)\n* comet <1>:                             Two-Dimensional Plots.\n                                                             (line 1654)\n* comet <2>:                             Two-Dimensional Plots.\n                                                             (line 1655)\n* comet <3>:                             Two-Dimensional Plots.\n                                                             (line 1656)\n* comet3:                                Two-Dimensional Plots.\n                                                             (line 1671)\n* comet3 <1>:                            Two-Dimensional Plots.\n                                                             (line 1672)\n* comet3 <2>:                            Two-Dimensional Plots.\n                                                             (line 1673)\n* comet3 <3>:                            Two-Dimensional Plots.\n                                                             (line 1674)\n* command_line_path:                     Manipulating the Load Path.\n                                                             (line  168)\n* common_size:                           Finding Elements and Checking Conditions.\n                                                             (line  143)\n* commutation_matrix:                    Special Functions.  (line  175)\n* compan:                                Finding Roots.      (line   55)\n* compare_versions:                      System Information. (line  199)\n* compass:                               Two-Dimensional Plots.\n                                                             (line 1480)\n* compass <1>:                           Two-Dimensional Plots.\n                                                             (line 1481)\n* compass <2>:                           Two-Dimensional Plots.\n                                                             (line 1482)\n* compass <3>:                           Two-Dimensional Plots.\n                                                             (line 1483)\n* compass <4>:                           Two-Dimensional Plots.\n                                                             (line 1484)\n* completion_append_char:                Commands for Completion.\n                                                             (line   16)\n* completion_append_char <1>:            Commands for Completion.\n                                                             (line   17)\n* completion_append_char <2>:            Commands for Completion.\n                                                             (line   18)\n* completion_matches:                    Commands for Completion.\n                                                             (line   29)\n* complex:                               Numeric Data Types. (line   64)\n* complex <1>:                           Numeric Data Types. (line   65)\n* computer:                              System Information. (line    6)\n* computer <1>:                          System Information. (line    7)\n* computer <2>:                          System Information. (line    8)\n* computer <3>:                          System Information. (line    9)\n* computer <4>:                          System Information. (line   10)\n* cond:                                  Basic Matrix Functions.\n                                                             (line   58)\n* cond <1>:                              Basic Matrix Functions.\n                                                             (line   59)\n* condeig:                               Basic Matrix Functions.\n                                                             (line   81)\n* condeig <1>:                           Basic Matrix Functions.\n                                                             (line   82)\n* condest:                               Sparse Linear Algebra.\n                                                             (line  169)\n* condest <1>:                           Sparse Linear Algebra.\n                                                             (line  170)\n* condest <2>:                           Sparse Linear Algebra.\n                                                             (line  171)\n* condest <3>:                           Sparse Linear Algebra.\n                                                             (line  172)\n* condest <4>:                           Sparse Linear Algebra.\n                                                             (line  173)\n* confirm_recursive_rmdir:               Filesystem Utilities.\n                                                             (line  139)\n* confirm_recursive_rmdir <1>:           Filesystem Utilities.\n                                                             (line  140)\n* confirm_recursive_rmdir <2>:           Filesystem Utilities.\n                                                             (line  141)\n* conj:                                  Complex Arithmetic. (line   34)\n* contour:                               Two-Dimensional Plots.\n                                                             (line  890)\n* contour <1>:                           Two-Dimensional Plots.\n                                                             (line  891)\n* contour <2>:                           Two-Dimensional Plots.\n                                                             (line  892)\n* contour <3>:                           Two-Dimensional Plots.\n                                                             (line  893)\n* contour <4>:                           Two-Dimensional Plots.\n                                                             (line  894)\n* contour <5>:                           Two-Dimensional Plots.\n                                                             (line  895)\n* contour <6>:                           Two-Dimensional Plots.\n                                                             (line  896)\n* contour3:                              Two-Dimensional Plots.\n                                                             (line 1011)\n* contour3 <1>:                          Two-Dimensional Plots.\n                                                             (line 1012)\n* contour3 <2>:                          Two-Dimensional Plots.\n                                                             (line 1013)\n* contour3 <3>:                          Two-Dimensional Plots.\n                                                             (line 1014)\n* contour3 <4>:                          Two-Dimensional Plots.\n                                                             (line 1015)\n* contour3 <5>:                          Two-Dimensional Plots.\n                                                             (line 1016)\n* contour3 <6>:                          Two-Dimensional Plots.\n                                                             (line 1017)\n* contourc:                              Two-Dimensional Plots.\n                                                             (line  970)\n* contourc <1>:                          Two-Dimensional Plots.\n                                                             (line  971)\n* contourc <2>:                          Two-Dimensional Plots.\n                                                             (line  972)\n* contourc <3>:                          Two-Dimensional Plots.\n                                                             (line  973)\n* contourf:                              Two-Dimensional Plots.\n                                                             (line  929)\n* contourf <1>:                          Two-Dimensional Plots.\n                                                             (line  930)\n* contourf <2>:                          Two-Dimensional Plots.\n                                                             (line  931)\n* contourf <3>:                          Two-Dimensional Plots.\n                                                             (line  932)\n* contourf <4>:                          Two-Dimensional Plots.\n                                                             (line  933)\n* contourf <5>:                          Two-Dimensional Plots.\n                                                             (line  934)\n* contourf <6>:                          Two-Dimensional Plots.\n                                                             (line  935)\n* contrast:                              Representing Images.\n                                                             (line  500)\n* contrast <1>:                          Representing Images.\n                                                             (line  501)\n* conv:                                  Products of Polynomials.\n                                                             (line    6)\n* conv <1>:                              Products of Polynomials.\n                                                             (line    7)\n* conv2:                                 Products of Polynomials.\n                                                             (line   60)\n* conv2 <1>:                             Products of Polynomials.\n                                                             (line   61)\n* conv2 <2>:                             Products of Polynomials.\n                                                             (line   62)\n* convhull:                              Convex Hull.        (line   11)\n* convhull <1>:                          Convex Hull.        (line   12)\n* convhulln:                             Convex Hull.        (line   32)\n* convhulln <1>:                         Convex Hull.        (line   33)\n* convhulln <2>:                         Convex Hull.        (line   34)\n* convn:                                 Products of Polynomials.\n                                                             (line   27)\n* convn <1>:                             Products of Polynomials.\n                                                             (line   28)\n* cool:                                  Representing Images.\n                                                             (line  304)\n* cool <1>:                              Representing Images.\n                                                             (line  305)\n* copper:                                Representing Images.\n                                                             (line  313)\n* copper <1>:                            Representing Images.\n                                                             (line  314)\n* copyfile:                              Filesystem Utilities.\n                                                             (line   45)\n* copyfile <1>:                          Filesystem Utilities.\n                                                             (line   46)\n* copyobj:                               Graphics Objects.   (line  554)\n* copyobj <1>:                           Graphics Objects.   (line  555)\n* corr:                                  Correlation and Regression Analysis.\n                                                             (line   44)\n* corr <1>:                              Correlation and Regression Analysis.\n                                                             (line   45)\n* cor_test:                              Tests.              (line  103)\n* cos:                                   Trigonometry.       (line   73)\n* cosd:                                  Trigonometry.       (line  225)\n* cosh:                                  Trigonometry.       (line  139)\n* cot:                                   Trigonometry.       (line   97)\n* cotd:                                  Trigonometry.       (line  250)\n* coth:                                  Trigonometry.       (line  161)\n* cov:                                   Correlation and Regression Analysis.\n                                                             (line    6)\n* cov <1>:                               Correlation and Regression Analysis.\n                                                             (line    7)\n* cov <2>:                               Correlation and Regression Analysis.\n                                                             (line    8)\n* cov <3>:                               Correlation and Regression Analysis.\n                                                             (line    9)\n* cplxpair:                              Complex Arithmetic. (line   41)\n* cplxpair <1>:                          Complex Arithmetic. (line   42)\n* cplxpair <2>:                          Complex Arithmetic. (line   43)\n* cputime:                               Timing Utilities.   (line  395)\n* crash_dumps_octave_core:               Saving Data on Unexpected Exits.\n                                                             (line   12)\n* crash_dumps_octave_core <1>:           Saving Data on Unexpected Exits.\n                                                             (line   13)\n* crash_dumps_octave_core <2>:           Saving Data on Unexpected Exits.\n                                                             (line   14)\n* cross:                                 Utility Functions.  (line  279)\n* cross <1>:                             Utility Functions.  (line  280)\n* csc:                                   Trigonometry.       (line   91)\n* cscd:                                  Trigonometry.       (line  245)\n* csch:                                  Trigonometry.       (line  156)\n* cstrcat:                               Concatenating Strings.\n                                                             (line  193)\n* csvread:                               Simple File I/O.    (line  437)\n* csvread <1>:                           Simple File I/O.    (line  438)\n* csvwrite:                              Simple File I/O.    (line  421)\n* csvwrite <1>:                          Simple File I/O.    (line  422)\n* csymamd:                               Mathematical Considerations.\n                                                             (line  308)\n* csymamd <1>:                           Mathematical Considerations.\n                                                             (line  309)\n* csymamd <2>:                           Mathematical Considerations.\n                                                             (line  310)\n* csymamd <3>:                           Mathematical Considerations.\n                                                             (line  311)\n* ctime:                                 Timing Utilities.   (line   78)\n* ctranspose:                            Arithmetic Ops.     (line  122)\n* cubehelix:                             Representing Images.\n                                                             (line  323)\n* cubehelix <1>:                         Representing Images.\n                                                             (line  324)\n* cummax:                                Utility Functions.  (line  165)\n* cummax <1>:                            Utility Functions.  (line  166)\n* cummax <2>:                            Utility Functions.  (line  167)\n* cummin:                                Utility Functions.  (line  187)\n* cummin <1>:                            Utility Functions.  (line  188)\n* cummin <2>:                            Utility Functions.  (line  189)\n* cumprod:                               Sums and Products.  (line   85)\n* cumprod <1>:                           Sums and Products.  (line   86)\n* cumsum:                                Sums and Products.  (line   65)\n* cumsum <1>:                            Sums and Products.  (line   66)\n* cumsum <2>:                            Sums and Products.  (line   67)\n* cumsum <3>:                            Sums and Products.  (line   68)\n* cumsum <4>:                            Sums and Products.  (line   69)\n* cumtrapz:                              Functions of One Variable.\n                                                             (line  500)\n* cumtrapz <1>:                          Functions of One Variable.\n                                                             (line  501)\n* cumtrapz <2>:                          Functions of One Variable.\n                                                             (line  502)\n* curl:                                  Utility Functions.  (line  315)\n* curl <1>:                              Utility Functions.  (line  316)\n* curl <2>:                              Utility Functions.  (line  317)\n* curl <3>:                              Utility Functions.  (line  318)\n* curl <4>:                              Utility Functions.  (line  319)\n* cylinder:                              Three-dimensional Geometric Shapes.\n                                                             (line    6)\n* cylinder <1>:                          Three-dimensional Geometric Shapes.\n                                                             (line    7)\n* cylinder <2>:                          Three-dimensional Geometric Shapes.\n                                                             (line    8)\n* cylinder <3>:                          Three-dimensional Geometric Shapes.\n                                                             (line    9)\n* cylinder <4>:                          Three-dimensional Geometric Shapes.\n                                                             (line   10)\n* daspect:                               Aspect Ratio.       (line   10)\n* daspect <1>:                           Aspect Ratio.       (line   11)\n* daspect <2>:                           Aspect Ratio.       (line   12)\n* daspect <3>:                           Aspect Ratio.       (line   13)\n* daspect <4>:                           Aspect Ratio.       (line   14)\n* daspk:                                 Differential-Algebraic Equations.\n                                                             (line   13)\n* daspk_options:                         Differential-Algebraic Equations.\n                                                             (line   79)\n* daspk_options <1>:                     Differential-Algebraic Equations.\n                                                             (line   80)\n* daspk_options <2>:                     Differential-Algebraic Equations.\n                                                             (line   81)\n* dasrt:                                 Differential-Algebraic Equations.\n                                                             (line  377)\n* dasrt <1>:                             Differential-Algebraic Equations.\n                                                             (line  378)\n* dasrt <2>:                             Differential-Algebraic Equations.\n                                                             (line  379)\n* dasrt <3>:                             Differential-Algebraic Equations.\n                                                             (line  380)\n* dasrt_options:                         Differential-Algebraic Equations.\n                                                             (line  480)\n* dasrt_options <1>:                     Differential-Algebraic Equations.\n                                                             (line  481)\n* dasrt_options <2>:                     Differential-Algebraic Equations.\n                                                             (line  482)\n* dassl:                                 Differential-Algebraic Equations.\n                                                             (line  247)\n* dassl_options:                         Differential-Algebraic Equations.\n                                                             (line  314)\n* dassl_options <1>:                     Differential-Algebraic Equations.\n                                                             (line  315)\n* dassl_options <2>:                     Differential-Algebraic Equations.\n                                                             (line  316)\n* date:                                  Timing Utilities.   (line  366)\n* datenum:                               Timing Utilities.   (line  482)\n* datenum <1>:                           Timing Utilities.   (line  483)\n* datenum <2>:                           Timing Utilities.   (line  484)\n* datenum <3>:                           Timing Utilities.   (line  485)\n* datenum <4>:                           Timing Utilities.   (line  486)\n* datenum <5>:                           Timing Utilities.   (line  487)\n* datenum <6>:                           Timing Utilities.   (line  488)\n* datenum <7>:                           Timing Utilities.   (line  489)\n* datenum <8>:                           Timing Utilities.   (line  490)\n* datestr:                               Timing Utilities.   (line  546)\n* datestr <1>:                           Timing Utilities.   (line  547)\n* datestr <2>:                           Timing Utilities.   (line  548)\n* datetick:                              Timing Utilities.   (line  722)\n* datetick <1>:                          Timing Utilities.   (line  723)\n* datetick <2>:                          Timing Utilities.   (line  724)\n* datetick <3>:                          Timing Utilities.   (line  725)\n* datetick <4>:                          Timing Utilities.   (line  726)\n* datetick <5>:                          Timing Utilities.   (line  727)\n* datevec:                               Timing Utilities.   (line  634)\n* datevec <1>:                           Timing Utilities.   (line  635)\n* datevec <2>:                           Timing Utilities.   (line  636)\n* datevec <3>:                           Timing Utilities.   (line  637)\n* datevec <4>:                           Timing Utilities.   (line  638)\n* dawson:                                Special Functions.  (line  193)\n* dbclear:                               Breakpoints.        (line  161)\n* dbclear <1>:                           Breakpoints.        (line  162)\n* dbclear <2>:                           Breakpoints.        (line  163)\n* dbclear <3>:                           Breakpoints.        (line  164)\n* dbclear <4>:                           Breakpoints.        (line  165)\n* dbclear <5>:                           Breakpoints.        (line  166)\n* dbclear <6>:                           Breakpoints.        (line  167)\n* dbclear <7>:                           Breakpoints.        (line  168)\n* dbclear <8>:                           Breakpoints.        (line  169)\n* dbclear <9>:                           Breakpoints.        (line  170)\n* dbclear <10>:                          Breakpoints.        (line  171)\n* dbclear <11>:                          Breakpoints.        (line  172)\n* dbclear <12>:                          Breakpoints.        (line  173)\n* dbclear <13>:                          Breakpoints.        (line  174)\n* dbcont:                                Leaving Debug Mode. (line    9)\n* dbdown:                                Call Stack.         (line   64)\n* dbdown <1>:                            Call Stack.         (line   65)\n* dblist:                                Debug Mode.         (line   42)\n* dblist <1>:                            Debug Mode.         (line   43)\n* dblquad:                               Functions of Multiple Variables.\n                                                             (line   44)\n* dblquad <1>:                           Functions of Multiple Variables.\n                                                             (line   45)\n* dblquad <2>:                           Functions of Multiple Variables.\n                                                             (line   46)\n* dblquad <3>:                           Functions of Multiple Variables.\n                                                             (line   47)\n* dbnext:                                Debug Mode.         (line   68)\n* dbquit:                                Leaving Debug Mode. (line   18)\n* dbstack:                               Call Stack.         (line   14)\n* dbstack <1>:                           Call Stack.         (line   15)\n* dbstack <2>:                           Call Stack.         (line   16)\n* dbstack <3>:                           Call Stack.         (line   17)\n* dbstatus:                              Breakpoints.        (line  118)\n* dbstatus <1>:                          Breakpoints.        (line  119)\n* dbstatus <2>:                          Breakpoints.        (line  120)\n* dbstep:                                Debug Mode.         (line   64)\n* dbstep <1>:                            Debug Mode.         (line   65)\n* dbstep <2>:                            Debug Mode.         (line   66)\n* dbstep <3>:                            Debug Mode.         (line   67)\n* dbstop:                                Breakpoints.        (line    9)\n* dbstop <1>:                            Breakpoints.        (line   10)\n* dbstop <2>:                            Breakpoints.        (line   11)\n* dbstop <3>:                            Breakpoints.        (line   12)\n* dbstop <4>:                            Breakpoints.        (line   13)\n* dbstop <5>:                            Breakpoints.        (line   14)\n* dbstop <6>:                            Breakpoints.        (line   15)\n* dbstop <7>:                            Breakpoints.        (line   16)\n* dbstop <8>:                            Breakpoints.        (line   17)\n* dbstop <9>:                            Breakpoints.        (line   18)\n* dbstop <10>:                           Breakpoints.        (line   19)\n* dbtype:                                Debug Mode.         (line   19)\n* dbtype <1>:                            Debug Mode.         (line   20)\n* dbtype <2>:                            Debug Mode.         (line   21)\n* dbtype <3>:                            Debug Mode.         (line   22)\n* dbtype <4>:                            Debug Mode.         (line   23)\n* dbtype <5>:                            Debug Mode.         (line   24)\n* dbtype <6>:                            Debug Mode.         (line   25)\n* dbtype <7>:                            Debug Mode.         (line   26)\n* dbup:                                  Call Stack.         (line   56)\n* dbup <1>:                              Call Stack.         (line   57)\n* dbwhere:                               Debug Mode.         (line   11)\n* deal:                                  Variable-length Return Lists.\n                                                             (line   33)\n* deal <1>:                              Variable-length Return Lists.\n                                                             (line   34)\n* deblank:                               Manipulating Strings.\n                                                             (line   20)\n* debug_java:                            Java Interface Functions.\n                                                             (line  381)\n* debug_java <1>:                        Java Interface Functions.\n                                                             (line  382)\n* debug_java <2>:                        Java Interface Functions.\n                                                             (line  383)\n* debug_jit:                             JIT Compiler.       (line   77)\n* debug_jit <1>:                         JIT Compiler.       (line   78)\n* debug_jit <2>:                         JIT Compiler.       (line   79)\n* debug_on_error:                        Entering Debug Mode.\n                                                             (line   46)\n* debug_on_error <1>:                    Entering Debug Mode.\n                                                             (line   47)\n* debug_on_error <2>:                    Entering Debug Mode.\n                                                             (line   48)\n* debug_on_interrupt:                    Entering Debug Mode.\n                                                             (line   14)\n* debug_on_interrupt <1>:                Entering Debug Mode.\n                                                             (line   15)\n* debug_on_interrupt <2>:                Entering Debug Mode.\n                                                             (line   16)\n* debug_on_warning:                      Entering Debug Mode.\n                                                             (line   32)\n* debug_on_warning <1>:                  Entering Debug Mode.\n                                                             (line   33)\n* debug_on_warning <2>:                  Entering Debug Mode.\n                                                             (line   34)\n* dec2base:                              String Conversions. (line   95)\n* dec2base <1>:                          String Conversions. (line   96)\n* dec2bin:                               String Conversions. (line   37)\n* dec2hex:                               String Conversions. (line   56)\n* deconv:                                Products of Polynomials.\n                                                             (line   48)\n* deg2rad:                               Trigonometry.       (line   29)\n* del2:                                  Utility Functions.  (line  337)\n* del2 <1>:                              Utility Functions.  (line  338)\n* del2 <2>:                              Utility Functions.  (line  339)\n* delaunay:                              Delaunay Triangulation.\n                                                             (line   17)\n* delaunay <1>:                          Delaunay Triangulation.\n                                                             (line   18)\n* delaunay <2>:                          Delaunay Triangulation.\n                                                             (line   19)\n* delaunay <3>:                          Delaunay Triangulation.\n                                                             (line   20)\n* delaunayn:                             Delaunay Triangulation.\n                                                             (line   74)\n* delaunayn <1>:                         Delaunay Triangulation.\n                                                             (line   75)\n* delete:                                Manipulation of Plot Windows.\n                                                             (line  210)\n* delete <1>:                            Manipulation of Plot Windows.\n                                                             (line  211)\n* delete <2>:                            Manipulation of Plot Windows.\n                                                             (line  212)\n* delete <3>:                            FTP Objects.        (line  100)\n* dellistener:                           Object Groups.      (line  152)\n* demo:                                  Demonstration Functions.\n                                                             (line    6)\n* demo <1>:                              Demonstration Functions.\n                                                             (line    7)\n* demo <2>:                              Demonstration Functions.\n                                                             (line    8)\n* demo <3>:                              Demonstration Functions.\n                                                             (line    9)\n* desktop:                               GUI Utility Functions.\n                                                             (line   10)\n* det:                                   Basic Matrix Functions.\n                                                             (line  110)\n* det <1>:                               Basic Matrix Functions.\n                                                             (line  111)\n* detrend:                               Signal Processing.  (line  498)\n* diag:                                  Rearranging Matrices.\n                                                             (line  576)\n* diag <1>:                              Rearranging Matrices.\n                                                             (line  577)\n* diag <2>:                              Rearranging Matrices.\n                                                             (line  578)\n* diag <3>:                              Rearranging Matrices.\n                                                             (line  579)\n* diag <4>:                              Rearranging Matrices.\n                                                             (line  580)\n* dialog:                                I/O Dialogs.        (line  398)\n* diary:                                 A Sample Command Description.\n                                                             (line   11)\n* diary <1>:                             A Sample Command Description.\n                                                             (line   12)\n* diary <2>:                             A Sample Command Description.\n                                                             (line   13)\n* diary <3>:                             A Sample Command Description.\n                                                             (line   14)\n* diary <4>:                             Diary and Echo Commands.\n                                                             (line   10)\n* diary <5>:                             Diary and Echo Commands.\n                                                             (line   11)\n* diary <6>:                             Diary and Echo Commands.\n                                                             (line   12)\n* diary <7>:                             Diary and Echo Commands.\n                                                             (line   13)\n* diff:                                  Finding Elements and Checking Conditions.\n                                                             (line   85)\n* diff <1>:                              Finding Elements and Checking Conditions.\n                                                             (line   86)\n* diff <2>:                              Finding Elements and Checking Conditions.\n                                                             (line   87)\n* diffpara:                              Signal Processing.  (line  514)\n* diffuse:                               Three-Dimensional Plots.\n                                                             (line  880)\n* dims:                                  Matrices and Arrays in Oct-Files.\n                                                             (line   95)\n* dir:                                   FTP Objects.        (line   77)\n* dir <1>:                               Current Working Directory.\n                                                             (line   70)\n* dir <2>:                               Current Working Directory.\n                                                             (line   71)\n* dir <3>:                               Current Working Directory.\n                                                             (line   72)\n* dir_in_loadpath:                       Manipulating the Load Path.\n                                                             (line  176)\n* dir_in_loadpath <1>:                   Manipulating the Load Path.\n                                                             (line  177)\n* disable_diagonal_matrix:               Basic Usage.        (line   24)\n* disable_diagonal_matrix <1>:           Basic Usage.        (line   25)\n* disable_diagonal_matrix <2>:           Basic Usage.        (line   26)\n* disable_permutation_matrix:            Basic Usage.        (line   41)\n* disable_permutation_matrix <1>:        Basic Usage.        (line   42)\n* disable_permutation_matrix <2>:        Basic Usage.        (line   43)\n* disable_range:                         Ranges.             (line   44)\n* disable_range <1>:                     Ranges.             (line   45)\n* disable_range <2>:                     Ranges.             (line   46)\n* discrete_cdf:                          Distributions.      (line  126)\n* discrete_inv:                          Distributions.      (line  131)\n* discrete_pdf:                          Distributions.      (line  121)\n* discrete_rnd:                          Random Number Generation.\n                                                             (line  112)\n* discrete_rnd <1>:                      Random Number Generation.\n                                                             (line  113)\n* discrete_rnd <2>:                      Random Number Generation.\n                                                             (line  114)\n* discrete_rnd <3>:                      Random Number Generation.\n                                                             (line  115)\n* disp:                                  Terminal Output.    (line   21)\n* display:                               Class Methods.      (line   14)\n* divergence:                            Utility Functions.  (line  298)\n* divergence <1>:                        Utility Functions.  (line  299)\n* divergence <2>:                        Utility Functions.  (line  300)\n* divergence <3>:                        Utility Functions.  (line  301)\n* dlmread:                               Simple File I/O.    (line  389)\n* dlmread <1>:                           Simple File I/O.    (line  390)\n* dlmread <2>:                           Simple File I/O.    (line  391)\n* dlmread <3>:                           Simple File I/O.    (line  392)\n* dlmread <4>:                           Simple File I/O.    (line  393)\n* dlmwrite:                              Simple File I/O.    (line  335)\n* dlmwrite <1>:                          Simple File I/O.    (line  336)\n* dlmwrite <2>:                          Simple File I/O.    (line  337)\n* dlmwrite <3>:                          Simple File I/O.    (line  338)\n* dlmwrite <4>:                          Simple File I/O.    (line  339)\n* dmperm:                                Mathematical Considerations.\n                                                             (line  367)\n* dmperm <1>:                            Mathematical Considerations.\n                                                             (line  368)\n* doc:                                   Getting Help.       (line   41)\n* doc <1>:                               Getting Help.       (line   42)\n* doc_cache_create:                      Getting Help.       (line  259)\n* doc_cache_create <1>:                  Getting Help.       (line  260)\n* doc_cache_create <2>:                  Getting Help.       (line  261)\n* doc_cache_file:                        Getting Help.       (line  198)\n* doc_cache_file <1>:                    Getting Help.       (line  199)\n* doc_cache_file <2>:                    Getting Help.       (line  200)\n* dos:                                   Controlling Subprocesses.\n                                                             (line   73)\n* dos <1>:                               Controlling Subprocesses.\n                                                             (line   74)\n* dos <2>:                               Controlling Subprocesses.\n                                                             (line   75)\n* dos <3>:                               Controlling Subprocesses.\n                                                             (line   76)\n* dot:                                   Utility Functions.  (line  264)\n* double:                                Numeric Data Types. (line   59)\n* do_braindead_shortcircuit_evaluation:  Short-circuit Boolean Operators.\n                                                             (line   81)\n* do_braindead_shortcircuit_evaluation <1>: Short-circuit Boolean Operators.\n                                                             (line   82)\n* do_braindead_shortcircuit_evaluation <2>: Short-circuit Boolean Operators.\n                                                             (line   83)\n* do_string_escapes:                     String Conversions. (line  321)\n* drawnow:                               Manipulation of Plot Windows.\n                                                             (line   10)\n* drawnow <1>:                           Manipulation of Plot Windows.\n                                                             (line   11)\n* drawnow <2>:                           Manipulation of Plot Windows.\n                                                             (line   12)\n* dsearch:                               Identifying Points in Triangulation.\n                                                             (line  104)\n* dsearch <1>:                           Identifying Points in Triangulation.\n                                                             (line  105)\n* dsearchn:                              Identifying Points in Triangulation.\n                                                             (line  113)\n* dsearchn <1>:                          Identifying Points in Triangulation.\n                                                             (line  114)\n* dsearchn <2>:                          Identifying Points in Triangulation.\n                                                             (line  115)\n* dsearchn <3>:                          Identifying Points in Triangulation.\n                                                             (line  116)\n* dup2:                                  Controlling Subprocesses.\n                                                             (line  279)\n* duplication_matrix:                    Special Functions.  (line  185)\n* durbinlevinson:                        Signal Processing.  (line  532)\n* e:                                     Mathematical Constants.\n                                                             (line    6)\n* e <1>:                                 Mathematical Constants.\n                                                             (line    7)\n* e <2>:                                 Mathematical Constants.\n                                                             (line    8)\n* e <3>:                                 Mathematical Constants.\n                                                             (line    9)\n* e <4>:                                 Mathematical Constants.\n                                                             (line   10)\n* echo:                                  Diary and Echo Commands.\n                                                             (line   37)\n* echo <1>:                              Diary and Echo Commands.\n                                                             (line   38)\n* echo <2>:                              Diary and Echo Commands.\n                                                             (line   39)\n* echo <3>:                              Diary and Echo Commands.\n                                                             (line   40)\n* echo <4>:                              Diary and Echo Commands.\n                                                             (line   41)\n* echo_executing_commands:               Diary and Echo Commands.\n                                                             (line   67)\n* echo_executing_commands <1>:           Diary and Echo Commands.\n                                                             (line   68)\n* echo_executing_commands <2>:           Diary and Echo Commands.\n                                                             (line   69)\n* edit:                                  Function Files.     (line   51)\n* edit <1>:                              Function Files.     (line   52)\n* edit <2>:                              Function Files.     (line   53)\n* edit <3>:                              Function Files.     (line   54)\n* EDITOR:                                Commands for History.\n                                                             (line  250)\n* EDITOR <1>:                            Commands for History.\n                                                             (line  251)\n* EDITOR <2>:                            Commands for History.\n                                                             (line  252)\n* edit_history:                          Commands for History.\n                                                             (line   90)\n* edit_history <1>:                      Commands for History.\n                                                             (line   91)\n* edit_history <2>:                      Commands for History.\n                                                             (line   92)\n* eig:                                   Basic Matrix Functions.\n                                                             (line  126)\n* eig <1>:                               Basic Matrix Functions.\n                                                             (line  127)\n* eig <2>:                               Basic Matrix Functions.\n                                                             (line  128)\n* eig <3>:                               Basic Matrix Functions.\n                                                             (line  129)\n* eig <4>:                               Basic Matrix Functions.\n                                                             (line  130)\n* eig <5>:                               Basic Matrix Functions.\n                                                             (line  131)\n* eig <6>:                               Basic Matrix Functions.\n                                                             (line  132)\n* eig <7>:                               Basic Matrix Functions.\n                                                             (line  133)\n* eig <8>:                               Basic Matrix Functions.\n                                                             (line  134)\n* eigs:                                  Sparse Linear Algebra.\n                                                             (line  421)\n* eigs <1>:                              Sparse Linear Algebra.\n                                                             (line  422)\n* eigs <2>:                              Sparse Linear Algebra.\n                                                             (line  423)\n* eigs <3>:                              Sparse Linear Algebra.\n                                                             (line  424)\n* eigs <4>:                              Sparse Linear Algebra.\n                                                             (line  425)\n* eigs <5>:                              Sparse Linear Algebra.\n                                                             (line  426)\n* eigs <6>:                              Sparse Linear Algebra.\n                                                             (line  427)\n* eigs <7>:                              Sparse Linear Algebra.\n                                                             (line  428)\n* eigs <8>:                              Sparse Linear Algebra.\n                                                             (line  429)\n* eigs <9>:                              Sparse Linear Algebra.\n                                                             (line  430)\n* eigs <10>:                             Sparse Linear Algebra.\n                                                             (line  431)\n* eigs <11>:                             Sparse Linear Algebra.\n                                                             (line  432)\n* eigs <12>:                             Sparse Linear Algebra.\n                                                             (line  433)\n* eigs <13>:                             Sparse Linear Algebra.\n                                                             (line  434)\n* eigs <14>:                             Sparse Linear Algebra.\n                                                             (line  435)\n* eigs <15>:                             Sparse Linear Algebra.\n                                                             (line  436)\n* eigs <16>:                             Sparse Linear Algebra.\n                                                             (line  437)\n* eigs <17>:                             Sparse Linear Algebra.\n                                                             (line  438)\n* eigs <18>:                             Sparse Linear Algebra.\n                                                             (line  439)\n* eigs <19>:                             Sparse Linear Algebra.\n                                                             (line  440)\n* elem:                                  Matrices and Arrays in Oct-Files.\n                                                             (line   77)\n* ellipj:                                Special Functions.  (line  204)\n* ellipj <1>:                            Special Functions.  (line  205)\n* ellipke:                               Special Functions.  (line  235)\n* ellipke <1>:                           Special Functions.  (line  236)\n* ellipke <2>:                           Special Functions.  (line  237)\n* ellipsoid:                             Three-dimensional Geometric Shapes.\n                                                             (line   62)\n* ellipsoid <1>:                         Three-dimensional Geometric Shapes.\n                                                             (line   63)\n* ellipsoid <2>:                         Three-dimensional Geometric Shapes.\n                                                             (line   64)\n* ellipsoid <3>:                         Three-dimensional Geometric Shapes.\n                                                             (line   65)\n* empirical_cdf:                         Distributions.      (line  141)\n* empirical_inv:                         Distributions.      (line  146)\n* empirical_pdf:                         Distributions.      (line  136)\n* empirical_rnd:                         Random Number Generation.\n                                                             (line  129)\n* empirical_rnd <1>:                     Random Number Generation.\n                                                             (line  130)\n* empirical_rnd <2>:                     Random Number Generation.\n                                                             (line  131)\n* empirical_rnd <3>:                     Random Number Generation.\n                                                             (line  132)\n* endgrent:                              Group Database Functions.\n                                                             (line   56)\n* endpwent:                              Password Database Functions.\n                                                             (line   67)\n* eomday:                                Timing Utilities.   (line  715)\n* eps:                                   Mathematical Constants.\n                                                             (line  146)\n* eps <1>:                               Mathematical Constants.\n                                                             (line  147)\n* eps <2>:                               Mathematical Constants.\n                                                             (line  148)\n* eps <3>:                               Mathematical Constants.\n                                                             (line  149)\n* eps <4>:                               Mathematical Constants.\n                                                             (line  150)\n* eq:                                    Comparison Ops.     (line   53)\n* erf:                                   Special Functions.  (line  273)\n* erfc:                                  Special Functions.  (line  288)\n* erfcinv:                               Special Functions.  (line  330)\n* erfcx:                                 Special Functions.  (line  297)\n* erfi:                                  Special Functions.  (line  308)\n* erfinv:                                Special Functions.  (line  319)\n* errno:                                 Catching Errors.    (line  183)\n* errno <1>:                             Catching Errors.    (line  184)\n* errno <2>:                             Catching Errors.    (line  185)\n* errno_list:                            Catching Errors.    (line  193)\n* error:                                 Raising Errors.     (line   29)\n* error <1>:                             Raising Errors.     (line   30)\n* errorbar:                              Two-Dimensional Plots.\n                                                             (line 1073)\n* errorbar <1>:                          Two-Dimensional Plots.\n                                                             (line 1074)\n* errorbar <2>:                          Two-Dimensional Plots.\n                                                             (line 1075)\n* errorbar <3>:                          Two-Dimensional Plots.\n                                                             (line 1076)\n* errorbar <4>:                          Two-Dimensional Plots.\n                                                             (line 1077)\n* errorbar <5>:                          Two-Dimensional Plots.\n                                                             (line 1078)\n* errorbar <6>:                          Two-Dimensional Plots.\n                                                             (line 1079)\n* errorbar <7>:                          Two-Dimensional Plots.\n                                                             (line 1080)\n* errorbar <8>:                          Two-Dimensional Plots.\n                                                             (line 1081)\n* errorbar <9>:                          Two-Dimensional Plots.\n                                                             (line 1082)\n* errordlg:                              I/O Dialogs.        (line  117)\n* errordlg <1>:                          I/O Dialogs.        (line  118)\n* errordlg <2>:                          I/O Dialogs.        (line  119)\n* errordlg <3>:                          I/O Dialogs.        (line  120)\n* etime:                                 Timing Utilities.   (line  378)\n* etree:                                 Information.        (line  137)\n* etree <1>:                             Information.        (line  138)\n* etree <2>:                             Information.        (line  139)\n* etreeplot:                             Information.        (line  152)\n* etreeplot <1>:                         Information.        (line  153)\n* eval:                                  Evaluation.         (line   14)\n* eval <1>:                              Evaluation.         (line   15)\n* evalc:                                 Evaluation.         (line   50)\n* evalc <1>:                             Evaluation.         (line   51)\n* evalin:                                Evaluation in a Different Context.\n                                                             (line   68)\n* evalin <1>:                            Evaluation in a Different Context.\n                                                             (line   69)\n* example:                               Demonstration Functions.\n                                                             (line   70)\n* example <1>:                           Demonstration Functions.\n                                                             (line   71)\n* example <2>:                           Demonstration Functions.\n                                                             (line   72)\n* example <3>:                           Demonstration Functions.\n                                                             (line   73)\n* example <4>:                           Demonstration Functions.\n                                                             (line   74)\n* exec:                                  Controlling Subprocesses.\n                                                             (line  255)\n* EXEC_PATH:                             Controlling Subprocesses.\n                                                             (line  212)\n* EXEC_PATH <1>:                         Controlling Subprocesses.\n                                                             (line  213)\n* EXEC_PATH <2>:                         Controlling Subprocesses.\n                                                             (line  214)\n* exist:                                 Status of Variables.\n                                                             (line  186)\n* exist <1>:                             Status of Variables.\n                                                             (line  187)\n* exit:                                  Quitting Octave.    (line   14)\n* exit <1>:                              Quitting Octave.    (line   15)\n* exp:                                   Exponents and Logarithms.\n                                                             (line    6)\n* expcdf:                                Distributions.      (line  155)\n* expint:                                Special Functions.  (line  341)\n* expinv:                                Distributions.      (line  161)\n* expm:                                  Functions of a Matrix.\n                                                             (line    6)\n* expm1:                                 Exponents and Logarithms.\n                                                             (line   13)\n* exppdf:                                Distributions.      (line  151)\n* exprnd:                                Random Number Generation.\n                                                             (line  146)\n* exprnd <1>:                            Random Number Generation.\n                                                             (line  147)\n* exprnd <2>:                            Random Number Generation.\n                                                             (line  148)\n* exprnd <3>:                            Random Number Generation.\n                                                             (line  149)\n* eye:                                   Special Utility Matrices.\n                                                             (line    6)\n* eye <1>:                               Special Utility Matrices.\n                                                             (line    7)\n* eye <2>:                               Special Utility Matrices.\n                                                             (line    8)\n* eye <3>:                               Special Utility Matrices.\n                                                             (line    9)\n* ezcontour:                             Two-dimensional Function Plotting.\n                                                             (line  123)\n* ezcontour <1>:                         Two-dimensional Function Plotting.\n                                                             (line  124)\n* ezcontour <2>:                         Two-dimensional Function Plotting.\n                                                             (line  125)\n* ezcontour <3>:                         Two-dimensional Function Plotting.\n                                                             (line  126)\n* ezcontour <4>:                         Two-dimensional Function Plotting.\n                                                             (line  127)\n* ezcontourf:                            Two-dimensional Function Plotting.\n                                                             (line  158)\n* ezcontourf <1>:                        Two-dimensional Function Plotting.\n                                                             (line  159)\n* ezcontourf <2>:                        Two-dimensional Function Plotting.\n                                                             (line  160)\n* ezcontourf <3>:                        Two-dimensional Function Plotting.\n                                                             (line  161)\n* ezcontourf <4>:                        Two-dimensional Function Plotting.\n                                                             (line  162)\n* ezmesh:                                Three-dimensional Function Plotting.\n                                                             (line   43)\n* ezmesh <1>:                            Three-dimensional Function Plotting.\n                                                             (line   44)\n* ezmesh <2>:                            Three-dimensional Function Plotting.\n                                                             (line   45)\n* ezmesh <3>:                            Three-dimensional Function Plotting.\n                                                             (line   46)\n* ezmesh <4>:                            Three-dimensional Function Plotting.\n                                                             (line   47)\n* ezmesh <5>:                            Three-dimensional Function Plotting.\n                                                             (line   48)\n* ezmesh <6>:                            Three-dimensional Function Plotting.\n                                                             (line   49)\n* ezmeshc:                               Three-dimensional Function Plotting.\n                                                             (line   93)\n* ezmeshc <1>:                           Three-dimensional Function Plotting.\n                                                             (line   94)\n* ezmeshc <2>:                           Three-dimensional Function Plotting.\n                                                             (line   95)\n* ezmeshc <3>:                           Three-dimensional Function Plotting.\n                                                             (line   96)\n* ezmeshc <4>:                           Three-dimensional Function Plotting.\n                                                             (line   97)\n* ezmeshc <5>:                           Three-dimensional Function Plotting.\n                                                             (line   98)\n* ezmeshc <6>:                           Three-dimensional Function Plotting.\n                                                             (line   99)\n* ezplot:                                Two-dimensional Function Plotting.\n                                                             (line   73)\n* ezplot <1>:                            Two-dimensional Function Plotting.\n                                                             (line   74)\n* ezplot <2>:                            Two-dimensional Function Plotting.\n                                                             (line   75)\n* ezplot <3>:                            Two-dimensional Function Plotting.\n                                                             (line   76)\n* ezplot <4>:                            Two-dimensional Function Plotting.\n                                                             (line   77)\n* ezplot <5>:                            Two-dimensional Function Plotting.\n                                                             (line   78)\n* ezplot <6>:                            Two-dimensional Function Plotting.\n                                                             (line   79)\n* ezplot3:                               Three-dimensional Function Plotting.\n                                                             (line    6)\n* ezplot3 <1>:                           Three-dimensional Function Plotting.\n                                                             (line    7)\n* ezplot3 <2>:                           Three-dimensional Function Plotting.\n                                                             (line    8)\n* ezplot3 <3>:                           Three-dimensional Function Plotting.\n                                                             (line    9)\n* ezplot3 <4>:                           Three-dimensional Function Plotting.\n                                                             (line   10)\n* ezplot3 <5>:                           Three-dimensional Function Plotting.\n                                                             (line   11)\n* ezpolar:                               Two-dimensional Function Plotting.\n                                                             (line  193)\n* ezpolar <1>:                           Two-dimensional Function Plotting.\n                                                             (line  194)\n* ezpolar <2>:                           Two-dimensional Function Plotting.\n                                                             (line  195)\n* ezpolar <3>:                           Two-dimensional Function Plotting.\n                                                             (line  196)\n* ezpolar <4>:                           Two-dimensional Function Plotting.\n                                                             (line  197)\n* ezsurf:                                Three-dimensional Function Plotting.\n                                                             (line  137)\n* ezsurf <1>:                            Three-dimensional Function Plotting.\n                                                             (line  138)\n* ezsurf <2>:                            Three-dimensional Function Plotting.\n                                                             (line  139)\n* ezsurf <3>:                            Three-dimensional Function Plotting.\n                                                             (line  140)\n* ezsurf <4>:                            Three-dimensional Function Plotting.\n                                                             (line  141)\n* ezsurf <5>:                            Three-dimensional Function Plotting.\n                                                             (line  142)\n* ezsurf <6>:                            Three-dimensional Function Plotting.\n                                                             (line  143)\n* ezsurfc:                               Three-dimensional Function Plotting.\n                                                             (line  187)\n* ezsurfc <1>:                           Three-dimensional Function Plotting.\n                                                             (line  188)\n* ezsurfc <2>:                           Three-dimensional Function Plotting.\n                                                             (line  189)\n* ezsurfc <3>:                           Three-dimensional Function Plotting.\n                                                             (line  190)\n* ezsurfc <4>:                           Three-dimensional Function Plotting.\n                                                             (line  191)\n* ezsurfc <5>:                           Three-dimensional Function Plotting.\n                                                             (line  192)\n* ezsurfc <6>:                           Three-dimensional Function Plotting.\n                                                             (line  193)\n* factor:                                Utility Functions.  (line  382)\n* factor <1>:                            Utility Functions.  (line  383)\n* factorial:                             Utility Functions.  (line  367)\n* fail:                                  Test Functions.     (line  451)\n* fail <1>:                              Test Functions.     (line  452)\n* fail <2>:                              Test Functions.     (line  453)\n* fail <3>:                              Test Functions.     (line  454)\n* false:                                 Logical Values.     (line   63)\n* false <1>:                             Logical Values.     (line   64)\n* false <2>:                             Logical Values.     (line   65)\n* fcdf:                                  Distributions.      (line  169)\n* fclear:                                EOF and Errors.     (line   56)\n* fclose:                                Opening and Closing Files.\n                                                             (line  118)\n* fclose <1>:                            Opening and Closing Files.\n                                                             (line  119)\n* fclose <2>:                            Opening and Closing Files.\n                                                             (line  120)\n* fcntl:                                 Controlling Subprocesses.\n                                                             (line  456)\n* fdisp:                                 Simple File I/O.    (line  318)\n* feather:                               Two-Dimensional Plots.\n                                                             (line 1508)\n* feather <1>:                           Two-Dimensional Plots.\n                                                             (line 1509)\n* feather <2>:                           Two-Dimensional Plots.\n                                                             (line 1510)\n* feather <3>:                           Two-Dimensional Plots.\n                                                             (line 1511)\n* feather <4>:                           Two-Dimensional Plots.\n                                                             (line 1512)\n* feof:                                  EOF and Errors.     (line   24)\n* ferror:                                EOF and Errors.     (line   35)\n* ferror <1>:                            EOF and Errors.     (line   36)\n* ferror <2>:                            EOF and Errors.     (line   37)\n* feval:                                 Calling a Function by its Name.\n                                                             (line   50)\n* fflush:                                Paging Screen Output.\n                                                             (line  108)\n* fft:                                   Signal Processing.  (line   10)\n* fft <1>:                               Signal Processing.  (line   11)\n* fft <2>:                               Signal Processing.  (line   12)\n* fft2:                                  Signal Processing.  (line   57)\n* fft2 <1>:                              Signal Processing.  (line   58)\n* fftconv:                               Signal Processing.  (line  216)\n* fftconv <1>:                           Signal Processing.  (line  217)\n* fftfilt:                               Signal Processing.  (line  231)\n* fftfilt <1>:                           Signal Processing.  (line  232)\n* fftn:                                  Signal Processing.  (line   87)\n* fftn <1>:                              Signal Processing.  (line   88)\n* fftshift:                              Signal Processing.  (line  542)\n* fftshift <1>:                          Signal Processing.  (line  543)\n* fftw:                                  Signal Processing.  (line  129)\n* fftw <1>:                              Signal Processing.  (line  130)\n* fftw <2>:                              Signal Processing.  (line  131)\n* fftw <3>:                              Signal Processing.  (line  132)\n* fftw <4>:                              Signal Processing.  (line  133)\n* fftw <5>:                              Signal Processing.  (line  134)\n* fgetl:                                 Line-Oriented Input.\n                                                             (line   18)\n* fgetl <1>:                             Line-Oriented Input.\n                                                             (line   19)\n* fgets:                                 Line-Oriented Input.\n                                                             (line   35)\n* fgets <1>:                             Line-Oriented Input.\n                                                             (line   36)\n* fieldnames:                            Manipulating Structures.\n                                                             (line   14)\n* fieldnames <1>:                        Manipulating Structures.\n                                                             (line   15)\n* fieldnames <2>:                        Manipulating Structures.\n                                                             (line   16)\n* fieldnames <3>:                        Manipulating Structures.\n                                                             (line   17)\n* figure:                                Multiple Plot Windows.\n                                                             (line   17)\n* figure <1>:                            Multiple Plot Windows.\n                                                             (line   18)\n* figure <2>:                            Multiple Plot Windows.\n                                                             (line   19)\n* figure <3>:                            Multiple Plot Windows.\n                                                             (line   20)\n* figure <4>:                            Multiple Plot Windows.\n                                                             (line   21)\n* fileattrib:                            Filesystem Utilities.\n                                                             (line  322)\n* fileattrib <1>:                        Filesystem Utilities.\n                                                             (line  323)\n* fileattrib <2>:                        Filesystem Utilities.\n                                                             (line  324)\n* filemarker:                            Filesystem Utilities.\n                                                             (line  476)\n* filemarker <1>:                        Filesystem Utilities.\n                                                             (line  477)\n* filemarker <2>:                        Filesystem Utilities.\n                                                             (line  478)\n* fileparts:                             Filesystem Utilities.\n                                                             (line  503)\n* fileread:                              Simple File I/O.    (line  296)\n* filesep:                               Filesystem Utilities.\n                                                             (line  464)\n* filesep <1>:                           Filesystem Utilities.\n                                                             (line  465)\n* file_in_loadpath:                      Manipulating the Load Path.\n                                                             (line  141)\n* file_in_loadpath <1>:                  Manipulating the Load Path.\n                                                             (line  142)\n* file_in_path:                          Filesystem Utilities.\n                                                             (line  442)\n* file_in_path <1>:                      Filesystem Utilities.\n                                                             (line  443)\n* fill:                                  Two-Dimensional Plots.\n                                                             (line 1609)\n* fill <1>:                              Two-Dimensional Plots.\n                                                             (line 1610)\n* fill <2>:                              Two-Dimensional Plots.\n                                                             (line 1611)\n* fill <3>:                              Two-Dimensional Plots.\n                                                             (line 1612)\n* fill <4>:                              Two-Dimensional Plots.\n                                                             (line 1613)\n* filter:                                Signal Processing.  (line  246)\n* filter <1>:                            Signal Processing.  (line  247)\n* filter <2>:                            Signal Processing.  (line  248)\n* filter <3>:                            Signal Processing.  (line  249)\n* filter2:                               Signal Processing.  (line  292)\n* filter2 <1>:                           Signal Processing.  (line  293)\n* find:                                  Finding Elements and Checking Conditions.\n                                                             (line  163)\n* find <1>:                              Finding Elements and Checking Conditions.\n                                                             (line  164)\n* find <2>:                              Finding Elements and Checking Conditions.\n                                                             (line  165)\n* find <3>:                              Finding Elements and Checking Conditions.\n                                                             (line  166)\n* find <4>:                              Finding Elements and Checking Conditions.\n                                                             (line  167)\n* findall:                               Searching Properties.\n                                                             (line   58)\n* findall <1>:                           Searching Properties.\n                                                             (line   59)\n* findall <2>:                           Searching Properties.\n                                                             (line   60)\n* findall <3>:                           Searching Properties.\n                                                             (line   62)\n* findall <4>:                           Searching Properties.\n                                                             (line   63)\n* findall <5>:                           Searching Properties.\n                                                             (line   64)\n* findall <6>:                           Searching Properties.\n                                                             (line   65)\n* findall <7>:                           Searching Properties.\n                                                             (line   66)\n* findfigs:                              Graphics Objects.   (line  504)\n* findobj:                               Searching Properties.\n                                                             (line    6)\n* findobj <1>:                           Searching Properties.\n                                                             (line    7)\n* findobj <2>:                           Searching Properties.\n                                                             (line    8)\n* findobj <3>:                           Searching Properties.\n                                                             (line   10)\n* findobj <4>:                           Searching Properties.\n                                                             (line   11)\n* findobj <5>:                           Searching Properties.\n                                                             (line   12)\n* findobj <6>:                           Searching Properties.\n                                                             (line   13)\n* findobj <7>:                           Searching Properties.\n                                                             (line   14)\n* findstr:                               Manipulating Strings.\n                                                             (line   62)\n* findstr <1>:                           Manipulating Strings.\n                                                             (line   63)\n* finv:                                  Distributions.      (line  173)\n* fix:                                   Utility Functions.  (line   19)\n* fixed_point_format:                    Matrices.           (line  206)\n* fixed_point_format <1>:                Matrices.           (line  207)\n* fixed_point_format <2>:                Matrices.           (line  208)\n* flag:                                  Representing Images.\n                                                             (line  345)\n* flag <1>:                              Representing Images.\n                                                             (line  346)\n* flintmax:                              Integer Data Types. (line  162)\n* flintmax <1>:                          Integer Data Types. (line  163)\n* flintmax <2>:                          Integer Data Types. (line  164)\n* flip:                                  Rearranging Matrices.\n                                                             (line   34)\n* flip <1>:                              Rearranging Matrices.\n                                                             (line   35)\n* fliplr:                                Rearranging Matrices.\n                                                             (line    6)\n* flipud:                                Rearranging Matrices.\n                                                             (line   20)\n* floor:                                 Utility Functions.  (line   31)\n* fminbnd:                               Minimizers.         (line   19)\n* fminsearch:                            Minimizers.         (line  120)\n* fminsearch <1>:                        Minimizers.         (line  121)\n* fminsearch <2>:                        Minimizers.         (line  122)\n* fminunc:                               Minimizers.         (line   50)\n* fminunc <1>:                           Minimizers.         (line   51)\n* fminunc <2>:                           Minimizers.         (line   52)\n* foo:                                   A Sample Function Description.\n                                                             (line   20)\n* foo <1>:                               A Sample Function Description.\n                                                             (line   21)\n* foo <2>:                               A Sample Function Description.\n                                                             (line   22)\n* fopen:                                 Opening and Closing Files.\n                                                             (line   19)\n* fopen <1>:                             Opening and Closing Files.\n                                                             (line   20)\n* fopen <2>:                             Opening and Closing Files.\n                                                             (line   21)\n* fopen <3>:                             Opening and Closing Files.\n                                                             (line   22)\n* fopen <4>:                             Opening and Closing Files.\n                                                             (line   23)\n* fopen <5>:                             Opening and Closing Files.\n                                                             (line   24)\n* fork:                                  Controlling Subprocesses.\n                                                             (line  235)\n* format:                                Terminal Output.    (line   73)\n* format <1>:                            Terminal Output.    (line   74)\n* formula:                               Inline Functions.   (line   54)\n* fortran_vec:                           Matrices and Arrays in Oct-Files.\n                                                             (line  109)\n* fpdf:                                  Distributions.      (line  165)\n* fplot:                                 Two-dimensional Function Plotting.\n                                                             (line   18)\n* fplot <1>:                             Two-dimensional Function Plotting.\n                                                             (line   19)\n* fplot <2>:                             Two-dimensional Function Plotting.\n                                                             (line   20)\n* fplot <3>:                             Two-dimensional Function Plotting.\n                                                             (line   21)\n* fplot <4>:                             Two-dimensional Function Plotting.\n                                                             (line   22)\n* fprintf:                               Formatted Output.   (line   33)\n* fprintf <1>:                           Formatted Output.   (line   34)\n* fprintf <2>:                           Formatted Output.   (line   35)\n* fputs:                                 Simple Output.      (line   16)\n* fputs <1>:                             Simple Output.      (line   17)\n* fractdiff:                             Signal Processing.  (line  572)\n* frame2im:                              Representing Images.\n                                                             (line  146)\n* fread:                                 Binary I/O.         (line   12)\n* fread <1>:                             Binary I/O.         (line   13)\n* fread <2>:                             Binary I/O.         (line   14)\n* fread <3>:                             Binary I/O.         (line   15)\n* fread <4>:                             Binary I/O.         (line   16)\n* fread <5>:                             Binary I/O.         (line   17)\n* freport:                               EOF and Errors.     (line   62)\n* freqz:                                 Signal Processing.  (line  313)\n* freqz <1>:                             Signal Processing.  (line  314)\n* freqz <2>:                             Signal Processing.  (line  315)\n* freqz <3>:                             Signal Processing.  (line  316)\n* freqz <4>:                             Signal Processing.  (line  317)\n* freqz <5>:                             Signal Processing.  (line  318)\n* freqz <6>:                             Signal Processing.  (line  319)\n* freqz_plot:                            Signal Processing.  (line  358)\n* freqz_plot <1>:                        Signal Processing.  (line  359)\n* frewind:                               File Positioning.   (line   52)\n* frewind <1>:                           File Positioning.   (line   53)\n* frnd:                                  Random Number Generation.\n                                                             (line  163)\n* frnd <1>:                              Random Number Generation.\n                                                             (line  164)\n* frnd <2>:                              Random Number Generation.\n                                                             (line  165)\n* frnd <3>:                              Random Number Generation.\n                                                             (line  166)\n* fscanf:                                Formatted Input.    (line   11)\n* fscanf <1>:                            Formatted Input.    (line   12)\n* fseek:                                 File Positioning.   (line   16)\n* fseek <1>:                             File Positioning.   (line   17)\n* fseek <2>:                             File Positioning.   (line   18)\n* fskipl:                                Line-Oriented Input.\n                                                             (line   52)\n* fskipl <1>:                            Line-Oriented Input.\n                                                             (line   53)\n* fskipl <2>:                            Line-Oriented Input.\n                                                             (line   54)\n* fsolve:                                Solvers.            (line   15)\n* fsolve <1>:                            Solvers.            (line   16)\n* ftell:                                 File Positioning.   (line    9)\n* ftp:                                   FTP Objects.        (line   10)\n* ftp <1>:                               FTP Objects.        (line   11)\n* full:                                  Creating Sparse Matrices.\n                                                             (line  212)\n* fullfile:                              Filesystem Utilities.\n                                                             (line  512)\n* fullfile <1>:                          Filesystem Utilities.\n                                                             (line  513)\n* func2str:                              Function Handles.   (line   84)\n* functions:                             Function Handles.   (line   42)\n* fwrite:                                Binary I/O.         (line  175)\n* fwrite <1>:                            Binary I/O.         (line  176)\n* fwrite <2>:                            Binary I/O.         (line  177)\n* fwrite <3>:                            Binary I/O.         (line  178)\n* fwrite <4>:                            Binary I/O.         (line  179)\n* fzero:                                 Solvers.            (line  182)\n* fzero <1>:                             Solvers.            (line  183)\n* fzero <2>:                             Solvers.            (line  184)\n* f_test_regression:                     Tests.              (line  143)\n* gallery:                               Famous Matrices.    (line    8)\n* gallery <1>:                           Famous Matrices.    (line    9)\n* gallery <2>:                           Famous Matrices.    (line   12)\n* gallery <3>:                           Famous Matrices.    (line   13)\n* gallery <4>:                           Famous Matrices.    (line   16)\n* gallery <5>:                           Famous Matrices.    (line   17)\n* gallery <6>:                           Famous Matrices.    (line   20)\n* gallery <7>:                           Famous Matrices.    (line   21)\n* gallery <8>:                           Famous Matrices.    (line   24)\n* gallery <9>:                           Famous Matrices.    (line   25)\n* gallery <10>:                          Famous Matrices.    (line   26)\n* gallery <11>:                          Famous Matrices.    (line   29)\n* gallery <12>:                          Famous Matrices.    (line   32)\n* gallery <13>:                          Famous Matrices.    (line   33)\n* gallery <14>:                          Famous Matrices.    (line   36)\n* gallery <15>:                          Famous Matrices.    (line   37)\n* gallery <16>:                          Famous Matrices.    (line   40)\n* gallery <17>:                          Famous Matrices.    (line   41)\n* gallery <18>:                          Famous Matrices.    (line   42)\n* gallery <19>:                          Famous Matrices.    (line   45)\n* gallery <20>:                          Famous Matrices.    (line   46)\n* gallery <21>:                          Famous Matrices.    (line   47)\n* gallery <22>:                          Famous Matrices.    (line   50)\n* gallery <23>:                          Famous Matrices.    (line   51)\n* gallery <24>:                          Famous Matrices.    (line   52)\n* gallery <25>:                          Famous Matrices.    (line   55)\n* gallery <26>:                          Famous Matrices.    (line   56)\n* gallery <27>:                          Famous Matrices.    (line   59)\n* gallery <28>:                          Famous Matrices.    (line   62)\n* gallery <29>:                          Famous Matrices.    (line   63)\n* gallery <30>:                          Famous Matrices.    (line   64)\n* gallery <31>:                          Famous Matrices.    (line   67)\n* gallery <32>:                          Famous Matrices.    (line   68)\n* gallery <33>:                          Famous Matrices.    (line   71)\n* gallery <34>:                          Famous Matrices.    (line   78)\n* gallery <35>:                          Famous Matrices.    (line   79)\n* gallery <36>:                          Famous Matrices.    (line   80)\n* gallery <37>:                          Famous Matrices.    (line   83)\n* gallery <38>:                          Famous Matrices.    (line   84)\n* gallery <39>:                          Famous Matrices.    (line   87)\n* gallery <40>:                          Famous Matrices.    (line   88)\n* gallery <41>:                          Famous Matrices.    (line   92)\n* gallery <42>:                          Famous Matrices.    (line   93)\n* gallery <43>:                          Famous Matrices.    (line   96)\n* gallery <44>:                          Famous Matrices.    (line   97)\n* gallery <45>:                          Famous Matrices.    (line   98)\n* gallery <46>:                          Famous Matrices.    (line   99)\n* gallery <47>:                          Famous Matrices.    (line  100)\n* gallery <48>:                          Famous Matrices.    (line  117)\n* gallery <49>:                          Famous Matrices.    (line  118)\n* gallery <50>:                          Famous Matrices.    (line  121)\n* gallery <51>:                          Famous Matrices.    (line  124)\n* gallery <52>:                          Famous Matrices.    (line  125)\n* gallery <53>:                          Famous Matrices.    (line  128)\n* gallery <54>:                          Famous Matrices.    (line  129)\n* gallery <55>:                          Famous Matrices.    (line  132)\n* gallery <56>:                          Famous Matrices.    (line  133)\n* gallery <57>:                          Famous Matrices.    (line  134)\n* gallery <58>:                          Famous Matrices.    (line  137)\n* gallery <59>:                          Famous Matrices.    (line  138)\n* gallery <60>:                          Famous Matrices.    (line  141)\n* gallery <61>:                          Famous Matrices.    (line  142)\n* gallery <62>:                          Famous Matrices.    (line  143)\n* gallery <63>:                          Famous Matrices.    (line  146)\n* gallery <64>:                          Famous Matrices.    (line  147)\n* gallery <65>:                          Famous Matrices.    (line  150)\n* gallery <66>:                          Famous Matrices.    (line  153)\n* gallery <67>:                          Famous Matrices.    (line  156)\n* gallery <68>:                          Famous Matrices.    (line  159)\n* gallery <69>:                          Famous Matrices.    (line  162)\n* gallery <70>:                          Famous Matrices.    (line  163)\n* gallery <71>:                          Famous Matrices.    (line  166)\n* gallery <72>:                          Famous Matrices.    (line  170)\n* gallery <73>:                          Famous Matrices.    (line  171)\n* gallery <74>:                          Famous Matrices.    (line  172)\n* gallery <75>:                          Famous Matrices.    (line  188)\n* gallery <76>:                          Famous Matrices.    (line  189)\n* gallery <77>:                          Famous Matrices.    (line  192)\n* gallery <78>:                          Famous Matrices.    (line  196)\n* gallery <79>:                          Famous Matrices.    (line  197)\n* gallery <80>:                          Famous Matrices.    (line  200)\n* gallery <81>:                          Famous Matrices.    (line  203)\n* gallery <82>:                          Famous Matrices.    (line  204)\n* gallery <83>:                          Famous Matrices.    (line  208)\n* gallery <84>:                          Famous Matrices.    (line  211)\n* gallery <85>:                          Famous Matrices.    (line  212)\n* gallery <86>:                          Famous Matrices.    (line  215)\n* gallery <87>:                          Famous Matrices.    (line  216)\n* gallery <88>:                          Famous Matrices.    (line  217)\n* gallery <89>:                          Famous Matrices.    (line  218)\n* gallery <90>:                          Famous Matrices.    (line  219)\n* gallery <91>:                          Famous Matrices.    (line  222)\n* gallery <92>:                          Famous Matrices.    (line  226)\n* gallery <93>:                          Famous Matrices.    (line  229)\n* gallery <94>:                          Famous Matrices.    (line  232)\n* gallery <95>:                          Famous Matrices.    (line  233)\n* gallery <96>:                          Famous Matrices.    (line  236)\n* gallery <97>:                          Famous Matrices.    (line  237)\n* gallery <98>:                          Famous Matrices.    (line  238)\n* gallery <99>:                          Famous Matrices.    (line  239)\n* gallery <100>:                         Famous Matrices.    (line  242)\n* gallery <101>:                         Famous Matrices.    (line  243)\n* gallery <102>:                         Famous Matrices.    (line  244)\n* gallery <103>:                         Famous Matrices.    (line  245)\n* gallery <104>:                         Famous Matrices.    (line  246)\n* gallery <105>:                         Famous Matrices.    (line  247)\n* gallery <106>:                         Famous Matrices.    (line  250)\n* gallery <107>:                         Famous Matrices.    (line  251)\n* gallery <108>:                         Famous Matrices.    (line  252)\n* gallery <109>:                         Famous Matrices.    (line  255)\n* gallery <110>:                         Famous Matrices.    (line  256)\n* gallery <111>:                         Famous Matrices.    (line  257)\n* gallery <112>:                         Famous Matrices.    (line  261)\n* gallery <113>:                         Famous Matrices.    (line  262)\n* gallery <114>:                         Famous Matrices.    (line  263)\n* gallery <115>:                         Famous Matrices.    (line  279)\n* gallery <116>:                         Famous Matrices.    (line  280)\n* gallery <117>:                         Famous Matrices.    (line  283)\n* gamcdf:                                Distributions.      (line  182)\n* gaminv:                                Distributions.      (line  187)\n* gamma:                                 Special Functions.  (line  363)\n* gammainc:                              Special Functions.  (line  383)\n* gammainc <1>:                          Special Functions.  (line  384)\n* gammainc <2>:                          Special Functions.  (line  385)\n* gammaln:                               Special Functions.  (line  480)\n* gampdf:                                Distributions.      (line  177)\n* gamrnd:                                Random Number Generation.\n                                                             (line  180)\n* gamrnd <1>:                            Random Number Generation.\n                                                             (line  181)\n* gamrnd <2>:                            Random Number Generation.\n                                                             (line  182)\n* gamrnd <3>:                            Random Number Generation.\n                                                             (line  183)\n* gca:                                   Graphics Objects.   (line  305)\n* gcbf:                                  Callbacks.          (line   87)\n* gcbo:                                  Callbacks.          (line   69)\n* gcbo <1>:                              Callbacks.          (line   70)\n* gcd:                                   Utility Functions.  (line  398)\n* gcd <1>:                               Utility Functions.  (line  399)\n* gcf:                                   Graphics Objects.   (line  277)\n* gco:                                   Graphics Objects.   (line  331)\n* gco <1>:                               Graphics Objects.   (line  332)\n* ge:                                    Comparison Ops.     (line   62)\n* genpath:                               Manipulating the Load Path.\n                                                             (line   44)\n* genpath <1>:                           Manipulating the Load Path.\n                                                             (line   45)\n* genvarname:                            Variables.          (line   60)\n* genvarname <1>:                        Variables.          (line   61)\n* geocdf:                                Distributions.      (line  199)\n* geoinv:                                Distributions.      (line  206)\n* geopdf:                                Distributions.      (line  192)\n* geornd:                                Random Number Generation.\n                                                             (line  197)\n* geornd <1>:                            Random Number Generation.\n                                                             (line  198)\n* geornd <2>:                            Random Number Generation.\n                                                             (line  199)\n* geornd <3>:                            Random Number Generation.\n                                                             (line  200)\n* get:                                   Graphics Objects.   (line  404)\n* get <1>:                               Graphics Objects.   (line  405)\n* get <2>:                               Player Properties.  (line    9)\n* get <3>:                               Player Properties.  (line   10)\n* get <4>:                               Recorder Properties.\n                                                             (line    9)\n* get <5>:                               Recorder Properties.\n                                                             (line   10)\n* getappdata:                            Application-defined Data.\n                                                             (line   24)\n* getappdata <1>:                        Application-defined Data.\n                                                             (line   25)\n* getaudiodata:                          Data Retrieval.     (line    9)\n* getaudiodata <1>:                      Data Retrieval.     (line   10)\n* getegid:                               Process ID Information.\n                                                             (line   29)\n* getenv:                                Environment Variables.\n                                                             (line    6)\n* geteuid:                               Process ID Information.\n                                                             (line   19)\n* getfield:                              Manipulating Structures.\n                                                             (line  121)\n* getfield <1>:                          Manipulating Structures.\n                                                             (line  122)\n* getgid:                                Process ID Information.\n                                                             (line   34)\n* getgrent:                              Group Database Functions.\n                                                             (line   24)\n* getgrgid:                              Group Database Functions.\n                                                             (line   32)\n* getgrnam:                              Group Database Functions.\n                                                             (line   41)\n* gethostname:                           Networking Utilities.\n                                                             (line   12)\n* getpgrp:                               Process ID Information.\n                                                             (line    6)\n* getpid:                                Process ID Information.\n                                                             (line    9)\n* getplayer:                             Data Retrieval.     (line   18)\n* getppid:                               Process ID Information.\n                                                             (line   14)\n* getpref:                               User-Defined Preferences.\n                                                             (line    6)\n* getpref <1>:                           User-Defined Preferences.\n                                                             (line    7)\n* getpref <2>:                           User-Defined Preferences.\n                                                             (line    8)\n* getpref <3>:                           User-Defined Preferences.\n                                                             (line    9)\n* getpref <4>:                           User-Defined Preferences.\n                                                             (line   10)\n* getpwent:                              Password Database Functions.\n                                                             (line   33)\n* getpwnam:                              Password Database Functions.\n                                                             (line   51)\n* getpwuid:                              Password Database Functions.\n                                                             (line   42)\n* getrusage:                             System Information. (line  275)\n* getuid:                                Process ID Information.\n                                                             (line   24)\n* get_first_help_sentence:               Getting Help.       (line  296)\n* get_first_help_sentence <1>:           Getting Help.       (line  297)\n* get_first_help_sentence <2>:           Getting Help.       (line  298)\n* get_help_text:                         Getting Help.       (line  277)\n* get_help_text_from_file:               Getting Help.       (line  287)\n* get_home_directory:                    Environment Variables.\n                                                             (line   35)\n* ginput:                                Interacting with Plots.\n                                                             (line   10)\n* ginput <1>:                            Interacting with Plots.\n                                                             (line   11)\n* givens:                                Basic Matrix Functions.\n                                                             (line  178)\n* givens <1>:                            Basic Matrix Functions.\n                                                             (line  179)\n* glob:                                  Filesystem Utilities.\n                                                             (line  396)\n* glpk:                                  Linear Programming. (line   15)\n* gls:                                   Linear Least Squares.\n                                                             (line   42)\n* gmres:                                 Specialized Solvers.\n                                                             (line  142)\n* gmres <1>:                             Specialized Solvers.\n                                                             (line  143)\n* gmres <2>:                             Specialized Solvers.\n                                                             (line  144)\n* gmtime:                                Timing Utilities.   (line   92)\n* gnuplot_binary:                        Customizing Toolkit Behavior.\n                                                             (line   10)\n* gnuplot_binary <1>:                    Customizing Toolkit Behavior.\n                                                             (line   11)\n* gplot:                                 Information.        (line  162)\n* gplot <1>:                             Information.        (line  163)\n* gplot <2>:                             Information.        (line  164)\n* grabcode:                              Publish Octave Script Files.\n                                                             (line  145)\n* grabcode <1>:                          Publish Octave Script Files.\n                                                             (line  146)\n* gradient:                              Utility Functions.  (line  223)\n* gradient <1>:                          Utility Functions.  (line  224)\n* gradient <2>:                          Utility Functions.  (line  225)\n* gradient <3>:                          Utility Functions.  (line  226)\n* gradient <4>:                          Utility Functions.  (line  227)\n* gradient <5>:                          Utility Functions.  (line  228)\n* gradient <6>:                          Utility Functions.  (line  229)\n* graphics_toolkit:                      Graphics Toolkits.  (line    6)\n* graphics_toolkit <1>:                  Graphics Toolkits.  (line    7)\n* graphics_toolkit <2>:                  Graphics Toolkits.  (line    8)\n* graphics_toolkit <3>:                  Graphics Toolkits.  (line    9)\n* gray:                                  Representing Images.\n                                                             (line  355)\n* gray <1>:                              Representing Images.\n                                                             (line  356)\n* gray2ind:                              Representing Images.\n                                                             (line   68)\n* gray2ind <1>:                          Representing Images.\n                                                             (line   69)\n* gray2ind <2>:                          Representing Images.\n                                                             (line   70)\n* gray2ind <3>:                          Representing Images.\n                                                             (line   71)\n* gray2ind <4>:                          Representing Images.\n                                                             (line   72)\n* grid:                                  Plot Annotations.   (line  235)\n* grid <1>:                              Plot Annotations.   (line  236)\n* grid <2>:                              Plot Annotations.   (line  237)\n* grid <3>:                              Plot Annotations.   (line  238)\n* grid <4>:                              Plot Annotations.   (line  239)\n* grid <5>:                              Plot Annotations.   (line  240)\n* grid <6>:                              Plot Annotations.   (line  241)\n* griddata:                              Interpolation on Scattered Data.\n                                                             (line   14)\n* griddata <1>:                          Interpolation on Scattered Data.\n                                                             (line   15)\n* griddata <2>:                          Interpolation on Scattered Data.\n                                                             (line   16)\n* griddata3:                             Interpolation on Scattered Data.\n                                                             (line   32)\n* griddata3 <1>:                         Interpolation on Scattered Data.\n                                                             (line   33)\n* griddata3 <2>:                         Interpolation on Scattered Data.\n                                                             (line   34)\n* griddatan:                             Interpolation on Scattered Data.\n                                                             (line   52)\n* griddatan <1>:                         Interpolation on Scattered Data.\n                                                             (line   53)\n* griddatan <2>:                         Interpolation on Scattered Data.\n                                                             (line   54)\n* gt:                                    Comparison Ops.     (line   68)\n* gtext:                                 Interacting with Plots.\n                                                             (line   42)\n* gtext <1>:                             Interacting with Plots.\n                                                             (line   43)\n* gtext <2>:                             Interacting with Plots.\n                                                             (line   44)\n* gtext <3>:                             Interacting with Plots.\n                                                             (line   45)\n* gtext <4>:                             Interacting with Plots.\n                                                             (line   46)\n* guidata:                               GUI Utility Functions.\n                                                             (line   15)\n* guidata <1>:                           GUI Utility Functions.\n                                                             (line   16)\n* guihandles:                            GUI Utility Functions.\n                                                             (line   30)\n* guihandles <1>:                        GUI Utility Functions.\n                                                             (line   31)\n* gunzip:                                File Archiving Utilities.\n                                                             (line   43)\n* gunzip <1>:                            File Archiving Utilities.\n                                                             (line   44)\n* gzip:                                  File Archiving Utilities.\n                                                             (line   18)\n* gzip <1>:                              File Archiving Utilities.\n                                                             (line   19)\n* hadamard:                              Famous Matrices.    (line  286)\n* hamming:                               Signal Processing.  (line  576)\n* hamming <1>:                           Signal Processing.  (line  577)\n* hamming <2>:                           Signal Processing.  (line  578)\n* hankel:                                Famous Matrices.    (line  313)\n* hankel <1>:                            Famous Matrices.    (line  314)\n* hanning:                               Signal Processing.  (line  589)\n* hanning <1>:                           Signal Processing.  (line  590)\n* hanning <2>:                           Signal Processing.  (line  591)\n* hash:                                  Hashing Functions.  (line   21)\n* have_window_system:                    GUI Utility Functions.\n                                                             (line   48)\n* hdl2struct:                            Graphics Objects.   (line  524)\n* help:                                  Getting Help.       (line   14)\n* help <1>:                              Getting Help.       (line   15)\n* help <2>:                              Getting Help.       (line   16)\n* help <3>:                              Getting Help.       (line   17)\n* helpdlg:                               I/O Dialogs.        (line  148)\n* helpdlg <1>:                           I/O Dialogs.        (line  149)\n* helpdlg <2>:                           I/O Dialogs.        (line  150)\n* hess:                                  Matrix Factorizations.\n                                                             (line  151)\n* hess <1>:                              Matrix Factorizations.\n                                                             (line  152)\n* hex2dec:                               String Conversions. (line   75)\n* hex2num:                               String Conversions. (line  168)\n* hex2num <1>:                           String Conversions. (line  169)\n* hggroup:                               Object Groups.      (line   12)\n* hggroup <1>:                           Object Groups.      (line   13)\n* hggroup <2>:                           Object Groups.      (line   14)\n* hggroup <3>:                           Object Groups.      (line   15)\n* hgload:                                Printing and Saving Plots.\n                                                             (line  434)\n* hgsave:                                Printing and Saving Plots.\n                                                             (line  403)\n* hgsave <1>:                            Printing and Saving Plots.\n                                                             (line  404)\n* hgsave <2>:                            Printing and Saving Plots.\n                                                             (line  405)\n* hidden:                                Three-Dimensional Plots.\n                                                             (line  168)\n* hidden <1>:                            Three-Dimensional Plots.\n                                                             (line  169)\n* hidden <2>:                            Three-Dimensional Plots.\n                                                             (line  170)\n* hidden <3>:                            Three-Dimensional Plots.\n                                                             (line  171)\n* hilb:                                  Famous Matrices.    (line  331)\n* hist:                                  Two-Dimensional Plots.\n                                                             (line  434)\n* hist <1>:                              Two-Dimensional Plots.\n                                                             (line  435)\n* hist <2>:                              Two-Dimensional Plots.\n                                                             (line  436)\n* hist <3>:                              Two-Dimensional Plots.\n                                                             (line  437)\n* hist <4>:                              Two-Dimensional Plots.\n                                                             (line  438)\n* hist <5>:                              Two-Dimensional Plots.\n                                                             (line  439)\n* hist <6>:                              Two-Dimensional Plots.\n                                                             (line  440)\n* histc:                                 Basic Statistical Functions.\n                                                             (line   54)\n* histc <1>:                             Basic Statistical Functions.\n                                                             (line   55)\n* histc <2>:                             Basic Statistical Functions.\n                                                             (line   56)\n* history:                               Commands for History.\n                                                             (line   50)\n* history <1>:                           Commands for History.\n                                                             (line   51)\n* history <2>:                           Commands for History.\n                                                             (line   52)\n* history <3>:                           Commands for History.\n                                                             (line   53)\n* history_control:                       Commands for History.\n                                                             (line  179)\n* history_control <1>:                   Commands for History.\n                                                             (line  180)\n* history_file:                          Commands for History.\n                                                             (line  205)\n* history_file <1>:                      Commands for History.\n                                                             (line  206)\n* history_save:                          Commands for History.\n                                                             (line  163)\n* history_save <1>:                      Commands for History.\n                                                             (line  164)\n* history_save <2>:                      Commands for History.\n                                                             (line  165)\n* history_size:                          Commands for History.\n                                                             (line  217)\n* history_size <1>:                      Commands for History.\n                                                             (line  218)\n* history_timestamp_format_string:       Commands for History.\n                                                             (line  230)\n* history_timestamp_format_string <1>:   Commands for History.\n                                                             (line  231)\n* history_timestamp_format_string <2>:   Commands for History.\n                                                             (line  232)\n* hold:                                  Manipulation of Plot Windows.\n                                                             (line  109)\n* hold <1>:                              Manipulation of Plot Windows.\n                                                             (line  110)\n* hold <2>:                              Manipulation of Plot Windows.\n                                                             (line  111)\n* hold <3>:                              Manipulation of Plot Windows.\n                                                             (line  112)\n* home:                                  Cursor Motion.      (line   60)\n* horzcat:                               Rearranging Matrices.\n                                                             (line  155)\n* hot:                                   Representing Images.\n                                                             (line  365)\n* hot <1>:                               Representing Images.\n                                                             (line  366)\n* hotelling_test:                        Tests.              (line  157)\n* hotelling_test_2:                      Tests.              (line  172)\n* housh:                                 Matrix Factorizations.\n                                                             (line  691)\n* hsv:                                   Representing Images.\n                                                             (line  375)\n* hsv2rgb:                               Color Conversion.   (line   27)\n* hsv2rgb <1>:                           Color Conversion.   (line   28)\n* hurst:                                 Signal Processing.  (line  602)\n* hygecdf:                               Distributions.      (line  224)\n* hygeinv:                               Distributions.      (line  235)\n* hygepdf:                               Distributions.      (line  213)\n* hygernd:                               Random Number Generation.\n                                                             (line  217)\n* hygernd <1>:                           Random Number Generation.\n                                                             (line  218)\n* hygernd <2>:                           Random Number Generation.\n                                                             (line  219)\n* hygernd <3>:                           Random Number Generation.\n                                                             (line  220)\n* hypot:                                 Utility Functions.  (line  209)\n* hypot <1>:                             Utility Functions.  (line  210)\n* i:                                     Mathematical Constants.\n                                                             (line   57)\n* I:                                     Mathematical Constants.\n                                                             (line   57)\n* I <1>:                                 Mathematical Constants.\n                                                             (line   58)\n* I <2>:                                 Mathematical Constants.\n                                                             (line   59)\n* I <3>:                                 Mathematical Constants.\n                                                             (line   60)\n* I <4>:                                 Mathematical Constants.\n                                                             (line   61)\n* ichol:                                 Iterative Techniques.\n                                                             (line  278)\n* ichol <1>:                             Iterative Techniques.\n                                                             (line  279)\n* idivide:                               Integer Arithmetic. (line   25)\n* ifelse:                                Short-circuit Boolean Operators.\n                                                             (line  105)\n* ifft:                                  Signal Processing.  (line   33)\n* ifft <1>:                              Signal Processing.  (line   34)\n* ifft <2>:                              Signal Processing.  (line   35)\n* ifft2:                                 Signal Processing.  (line   72)\n* ifft2 <1>:                             Signal Processing.  (line   73)\n* ifftn:                                 Signal Processing.  (line  102)\n* ifftn <1>:                             Signal Processing.  (line  103)\n* ifftshift:                             Signal Processing.  (line  563)\n* ifftshift <1>:                         Signal Processing.  (line  564)\n* ignore_function_time_stamp:            Function Files.     (line  158)\n* ignore_function_time_stamp <1>:        Function Files.     (line  159)\n* ilu:                                   Iterative Techniques.\n                                                             (line  398)\n* ilu <1>:                               Iterative Techniques.\n                                                             (line  399)\n* ilu <2>:                               Iterative Techniques.\n                                                             (line  400)\n* ilu <3>:                               Iterative Techniques.\n                                                             (line  401)\n* im2double:                             Representing Images.\n                                                             (line   27)\n* im2double <1>:                         Representing Images.\n                                                             (line   28)\n* im2frame:                              Representing Images.\n                                                             (line  159)\n* im2frame <1>:                          Representing Images.\n                                                             (line  160)\n* imag:                                  Complex Arithmetic. (line   66)\n* image:                                 Displaying Images.  (line   59)\n* image <1>:                             Displaying Images.  (line   60)\n* image <2>:                             Displaying Images.  (line   61)\n* image <3>:                             Displaying Images.  (line   62)\n* image <4>:                             Displaying Images.  (line   63)\n* imagesc:                               Displaying Images.  (line  100)\n* imagesc <1>:                           Displaying Images.  (line  101)\n* imagesc <2>:                           Displaying Images.  (line  102)\n* imagesc <3>:                           Displaying Images.  (line  103)\n* imagesc <4>:                           Displaying Images.  (line  104)\n* imagesc <5>:                           Displaying Images.  (line  105)\n* imagesc <6>:                           Displaying Images.  (line  106)\n* IMAGE_PATH:                            Loading and Saving Images.\n                                                             (line  158)\n* IMAGE_PATH <1>:                        Loading and Saving Images.\n                                                             (line  159)\n* IMAGE_PATH <2>:                        Loading and Saving Images.\n                                                             (line  160)\n* imfinfo:                               Loading and Saving Images.\n                                                             (line  177)\n* imfinfo <1>:                           Loading and Saving Images.\n                                                             (line  178)\n* imfinfo <2>:                           Loading and Saving Images.\n                                                             (line  179)\n* imformats:                             Loading and Saving Images.\n                                                             (line  329)\n* imformats <1>:                         Loading and Saving Images.\n                                                             (line  330)\n* imformats <2>:                         Loading and Saving Images.\n                                                             (line  331)\n* imformats <3>:                         Loading and Saving Images.\n                                                             (line  332)\n* imformats <4>:                         Loading and Saving Images.\n                                                             (line  333)\n* imformats <5>:                         Loading and Saving Images.\n                                                             (line  334)\n* imformats <6>:                         Loading and Saving Images.\n                                                             (line  335)\n* importdata:                            Simple File I/O.    (line  783)\n* importdata <1>:                        Simple File I/O.    (line  784)\n* importdata <2>:                        Simple File I/O.    (line  785)\n* importdata <3>:                        Simple File I/O.    (line  786)\n* importdata <4>:                        Simple File I/O.    (line  787)\n* imread:                                Loading and Saving Images.\n                                                             (line   17)\n* imread <1>:                            Loading and Saving Images.\n                                                             (line   18)\n* imread <2>:                            Loading and Saving Images.\n                                                             (line   19)\n* imread <3>:                            Loading and Saving Images.\n                                                             (line   20)\n* imread <4>:                            Loading and Saving Images.\n                                                             (line   21)\n* imshow:                                Displaying Images.  (line   10)\n* imshow <1>:                            Displaying Images.  (line   11)\n* imshow <2>:                            Displaying Images.  (line   12)\n* imshow <3>:                            Displaying Images.  (line   13)\n* imshow <4>:                            Displaying Images.  (line   14)\n* imshow <5>:                            Displaying Images.  (line   15)\n* imshow <6>:                            Displaying Images.  (line   16)\n* imwrite:                               Loading and Saving Images.\n                                                             (line   76)\n* imwrite <1>:                           Loading and Saving Images.\n                                                             (line   77)\n* imwrite <2>:                           Loading and Saving Images.\n                                                             (line   78)\n* imwrite <3>:                           Loading and Saving Images.\n                                                             (line   79)\n* ind2gray:                              Representing Images.\n                                                             (line   84)\n* ind2rgb:                               Representing Images.\n                                                             (line  126)\n* ind2rgb <1>:                           Representing Images.\n                                                             (line  127)\n* ind2sub:                               Advanced Indexing.  (line  172)\n* index:                                 Manipulating Strings.\n                                                             (line   97)\n* index <1>:                             Manipulating Strings.\n                                                             (line   98)\n* inf:                                   Mathematical Constants.\n                                                             (line   84)\n* Inf:                                   Mathematical Constants.\n                                                             (line   84)\n* Inf <1>:                               Mathematical Constants.\n                                                             (line   85)\n* Inf <2>:                               Mathematical Constants.\n                                                             (line   86)\n* Inf <3>:                               Mathematical Constants.\n                                                             (line   87)\n* Inf <4>:                               Mathematical Constants.\n                                                             (line   88)\n* inferiorto:                            Precedence of Objects.\n                                                             (line   22)\n* info:                                  Getting Help.       (line  104)\n* info_file:                             Getting Help.       (line  114)\n* info_file <1>:                         Getting Help.       (line  115)\n* info_file <2>:                         Getting Help.       (line  116)\n* info_program:                          Getting Help.       (line  135)\n* info_program <1>:                      Getting Help.       (line  136)\n* info_program <2>:                      Getting Help.       (line  137)\n* inline:                                Inline Functions.   (line   19)\n* inline <1>:                            Inline Functions.   (line   20)\n* inline <2>:                            Inline Functions.   (line   21)\n* inpolygon:                             Voronoi Diagrams.   (line  145)\n* inpolygon <1>:                         Voronoi Diagrams.   (line  146)\n* input:                                 Terminal Input.     (line   11)\n* input <1>:                             Terminal Input.     (line   12)\n* inputdlg:                              I/O Dialogs.        (line  173)\n* inputdlg <1>:                          I/O Dialogs.        (line  174)\n* inputdlg <2>:                          I/O Dialogs.        (line  175)\n* inputdlg <3>:                          I/O Dialogs.        (line  176)\n* inputdlg <4>:                          I/O Dialogs.        (line  177)\n* inputname:                             Defining Functions. (line  175)\n* inputParser:                           Multiple Return Values.\n                                                             (line  402)\n* inputParser.CaseSensitive:             Multiple Return Values.\n                                                             (line  435)\n* inputParser.FunctionName:              Multiple Return Values.\n                                                             (line  439)\n* inputParser.KeepUnmatched:             Multiple Return Values.\n                                                             (line  443)\n* inputParser.Parameters:                Multiple Return Values.\n                                                             (line  420)\n* inputParser.Results:                   Multiple Return Values.\n                                                             (line  423)\n* inputParser.StructExpand:              Multiple Return Values.\n                                                             (line  452)\n* inputParser.Unmatched:                 Multiple Return Values.\n                                                             (line  427)\n* inputParser.UsingDefaults:             Multiple Return Values.\n                                                             (line  431)\n* int16:                                 Integer Data Types. (line   52)\n* int2str:                               Converting Numerical Data to Strings.\n                                                             (line  102)\n* int32:                                 Integer Data Types. (line   66)\n* int64:                                 Integer Data Types. (line   80)\n* int8:                                  Integer Data Types. (line   38)\n* interp1:                               One-dimensional Interpolation.\n                                                             (line   11)\n* interp1 <1>:                           One-dimensional Interpolation.\n                                                             (line   12)\n* interp1 <2>:                           One-dimensional Interpolation.\n                                                             (line   13)\n* interp1 <3>:                           One-dimensional Interpolation.\n                                                             (line   14)\n* interp1 <4>:                           One-dimensional Interpolation.\n                                                             (line   15)\n* interp1 <5>:                           One-dimensional Interpolation.\n                                                             (line   16)\n* interp1 <6>:                           One-dimensional Interpolation.\n                                                             (line   17)\n* interp2:                               Multi-dimensional Interpolation.\n                                                             (line   10)\n* interp2 <1>:                           Multi-dimensional Interpolation.\n                                                             (line   11)\n* interp2 <2>:                           Multi-dimensional Interpolation.\n                                                             (line   12)\n* interp2 <3>:                           Multi-dimensional Interpolation.\n                                                             (line   13)\n* interp2 <4>:                           Multi-dimensional Interpolation.\n                                                             (line   14)\n* interp2 <5>:                           Multi-dimensional Interpolation.\n                                                             (line   15)\n* interp3:                               Multi-dimensional Interpolation.\n                                                             (line   68)\n* interp3 <1>:                           Multi-dimensional Interpolation.\n                                                             (line   69)\n* interp3 <2>:                           Multi-dimensional Interpolation.\n                                                             (line   70)\n* interp3 <3>:                           Multi-dimensional Interpolation.\n                                                             (line   71)\n* interp3 <4>:                           Multi-dimensional Interpolation.\n                                                             (line   72)\n* interp3 <5>:                           Multi-dimensional Interpolation.\n                                                             (line   73)\n* interpft:                              One-dimensional Interpolation.\n                                                             (line  128)\n* interpft <1>:                          One-dimensional Interpolation.\n                                                             (line  129)\n* interpn:                               Multi-dimensional Interpolation.\n                                                             (line  124)\n* interpn <1>:                           Multi-dimensional Interpolation.\n                                                             (line  125)\n* interpn <2>:                           Multi-dimensional Interpolation.\n                                                             (line  126)\n* interpn <3>:                           Multi-dimensional Interpolation.\n                                                             (line  127)\n* interpn <4>:                           Multi-dimensional Interpolation.\n                                                             (line  128)\n* interpn <5>:                           Multi-dimensional Interpolation.\n                                                             (line  129)\n* intersect:                             Set Operations.     (line   23)\n* intersect <1>:                         Set Operations.     (line   24)\n* intersect <2>:                         Set Operations.     (line   25)\n* intmax:                                Integer Data Types. (line   94)\n* intmin:                                Integer Data Types. (line  128)\n* inv:                                   Basic Matrix Functions.\n                                                             (line  209)\n* inv <1>:                               Basic Matrix Functions.\n                                                             (line  210)\n* invhilb:                               Famous Matrices.    (line  351)\n* ipermute:                              Rearranging Matrices.\n                                                             (line  200)\n* iqr:                                   Descriptive Statistics.\n                                                             (line  108)\n* iqr <1>:                               Descriptive Statistics.\n                                                             (line  109)\n* isa:                                   Built-in Data Types.\n                                                             (line   27)\n* isalnum:                               Character Class Functions.\n                                                             (line   15)\n* isalpha:                               Character Class Functions.\n                                                             (line   25)\n* isappdata:                             Application-defined Data.\n                                                             (line   49)\n* isargout:                              Ignoring Arguments. (line   62)\n* isascii:                               Character Class Functions.\n                                                             (line  110)\n* isaxes:                                Graphics Objects.   (line  255)\n* isbanded:                              Predicates for Numeric Objects.\n                                                             (line  148)\n* isbool:                                Predicates for Numeric Objects.\n                                                             (line   37)\n* iscell:                                Basic Usage of Cell Arrays.\n                                                             (line   85)\n* iscellstr:                             Cell Arrays of Strings.\n                                                             (line   59)\n* ischar:                                Character Arrays.   (line   25)\n* iscntrl:                               Character Class Functions.\n                                                             (line   89)\n* iscolormap:                            Representing Images.\n                                                             (line   55)\n* iscolumn:                              Predicates for Numeric Objects.\n                                                             (line   93)\n* iscomplex:                             Predicates for Numeric Objects.\n                                                             (line   62)\n* isdebugmode:                           Debug Mode.         (line   55)\n* isdefinite:                            Predicates for Numeric Objects.\n                                                             (line  137)\n* isdefinite <1>:                        Predicates for Numeric Objects.\n                                                             (line  138)\n* isdeployed:                            System Information. (line   95)\n* isdiag:                                Predicates for Numeric Objects.\n                                                             (line  158)\n* isdigit:                               Character Class Functions.\n                                                             (line   60)\n* isdir:                                 Filesystem Utilities.\n                                                             (line  377)\n* isempty:                               Object Sizes.       (line  125)\n* isequal:                               Comparison Ops.     (line   74)\n* isequaln:                              Comparison Ops.     (line   79)\n* isfield:                               Manipulating Structures.\n                                                             (line   35)\n* isfield <1>:                           Manipulating Structures.\n                                                             (line   36)\n* isfigure:                              Graphics Objects.   (line  264)\n* isfinite:                              Finding Elements and Checking Conditions.\n                                                             (line  131)\n* isfloat:                               Predicates for Numeric Objects.\n                                                             (line   44)\n* isglobal:                              Global Variables.   (line   64)\n* isgraph:                               Character Class Functions.\n                                                             (line   96)\n* isguirunning:                          GUI Utility Functions.\n                                                             (line   54)\n* ishandle:                              Graphics Objects.   (line  237)\n* ishermitian:                           Predicates for Numeric Objects.\n                                                             (line  124)\n* ishermitian <1>:                       Predicates for Numeric Objects.\n                                                             (line  125)\n* ishghandle:                            Graphics Objects.   (line  246)\n* ishghandle <1>:                        Graphics Objects.   (line  247)\n* ishold:                                Manipulation of Plot Windows.\n                                                             (line  141)\n* ishold <1>:                            Manipulation of Plot Windows.\n                                                             (line  142)\n* ishold <2>:                            Manipulation of Plot Windows.\n                                                             (line  143)\n* isieee:                                System Information. (line   89)\n* isindex:                               Advanced Indexing.  (line  230)\n* isindex <1>:                           Advanced Indexing.  (line  231)\n* isinf:                                 Finding Elements and Checking Conditions.\n                                                             (line  107)\n* isinteger:                             Integer Data Types. (line   28)\n* isjava:                                Java Interface Functions.\n                                                             (line   48)\n* iskeyword:                             Keywords.           (line   27)\n* iskeyword <1>:                         Keywords.           (line   28)\n* isletter:                              Character Class Functions.\n                                                             (line   36)\n* islogical:                             Predicates for Numeric Objects.\n                                                             (line   36)\n* islower:                               Character Class Functions.\n                                                             (line   46)\n* ismac:                                 System Information. (line   83)\n* ismatrix:                              Predicates for Numeric Objects.\n                                                             (line   69)\n* ismember:                              Set Operations.     (line  106)\n* ismember <1>:                          Set Operations.     (line  107)\n* ismember <2>:                          Set Operations.     (line  108)\n* ismethod:                              Creating a Class.   (line  130)\n* ismethod <1>:                          Creating a Class.   (line  131)\n* isna:                                  Missing Data.       (line   36)\n* isnan:                                 Finding Elements and Checking Conditions.\n                                                             (line  119)\n* isnull:                                Object Sizes.       (line  131)\n* isnumeric:                             Predicates for Numeric Objects.\n                                                             (line   24)\n* isobject:                              Creating a Class.   (line  102)\n* isocaps:                               Three-Dimensional Plots.\n                                                             (line  538)\n* isocaps <1>:                           Three-Dimensional Plots.\n                                                             (line  539)\n* isocaps <2>:                           Three-Dimensional Plots.\n                                                             (line  540)\n* isocaps <3>:                           Three-Dimensional Plots.\n                                                             (line  541)\n* isocaps <4>:                           Three-Dimensional Plots.\n                                                             (line  542)\n* isocaps <5>:                           Three-Dimensional Plots.\n                                                             (line  543)\n* isocaps <6>:                           Three-Dimensional Plots.\n                                                             (line  544)\n* isocaps <7>:                           Three-Dimensional Plots.\n                                                             (line  545)\n* isocaps <8>:                           Three-Dimensional Plots.\n                                                             (line  546)\n* isocolors:                             Three-Dimensional Plots.\n                                                             (line  618)\n* isocolors <1>:                         Three-Dimensional Plots.\n                                                             (line  619)\n* isocolors <2>:                         Three-Dimensional Plots.\n                                                             (line  620)\n* isocolors <3>:                         Three-Dimensional Plots.\n                                                             (line  621)\n* isocolors <4>:                         Three-Dimensional Plots.\n                                                             (line  622)\n* isocolors <5>:                         Three-Dimensional Plots.\n                                                             (line  623)\n* isonormals:                            Three-Dimensional Plots.\n                                                             (line  500)\n* isonormals <1>:                        Three-Dimensional Plots.\n                                                             (line  501)\n* isonormals <2>:                        Three-Dimensional Plots.\n                                                             (line  502)\n* isonormals <3>:                        Three-Dimensional Plots.\n                                                             (line  503)\n* isonormals <4>:                        Three-Dimensional Plots.\n                                                             (line  504)\n* isonormals <5>:                        Three-Dimensional Plots.\n                                                             (line  505)\n* isonormals <6>:                        Three-Dimensional Plots.\n                                                             (line  506)\n* isonormals <7>:                        Three-Dimensional Plots.\n                                                             (line  507)\n* isosurface:                            Three-Dimensional Plots.\n                                                             (line  384)\n* isosurface <1>:                        Three-Dimensional Plots.\n                                                             (line  385)\n* isosurface <2>:                        Three-Dimensional Plots.\n                                                             (line  386)\n* isosurface <3>:                        Three-Dimensional Plots.\n                                                             (line  387)\n* isosurface <4>:                        Three-Dimensional Plots.\n                                                             (line  388)\n* isosurface <5>:                        Three-Dimensional Plots.\n                                                             (line  389)\n* isosurface <6>:                        Three-Dimensional Plots.\n                                                             (line  390)\n* isosurface <7>:                        Three-Dimensional Plots.\n                                                             (line  391)\n* isosurface <8>:                        Three-Dimensional Plots.\n                                                             (line  392)\n* isosurface <9>:                        Three-Dimensional Plots.\n                                                             (line  393)\n* ispc:                                  System Information. (line   71)\n* isplaying:                             Playback.           (line   39)\n* ispref:                                User-Defined Preferences.\n                                                             (line   90)\n* ispref <1>:                            User-Defined Preferences.\n                                                             (line   91)\n* ispref <2>:                            User-Defined Preferences.\n                                                             (line   92)\n* isprime:                               Predicates for Numeric Objects.\n                                                             (line  185)\n* isprint:                               Character Class Functions.\n                                                             (line  103)\n* isprop:                                Introduction to Graphics Structures.\n                                                             (line  105)\n* ispunct:                               Character Class Functions.\n                                                             (line   74)\n* isreal:                                Predicates for Numeric Objects.\n                                                             (line   53)\n* isrecording:                           Recording.          (line   30)\n* isrow:                                 Predicates for Numeric Objects.\n                                                             (line   86)\n* isscalar:                              Predicates for Numeric Objects.\n                                                             (line   99)\n* issorted:                              Rearranging Matrices.\n                                                             (line  427)\n* issorted <1>:                          Rearranging Matrices.\n                                                             (line  428)\n* issorted <2>:                          Rearranging Matrices.\n                                                             (line  429)\n* isspace:                               Character Class Functions.\n                                                             (line   81)\n* issparse:                              Information.        (line   21)\n* issquare:                              Predicates for Numeric Objects.\n                                                             (line  105)\n* isstrprop:                             Character Class Functions.\n                                                             (line  115)\n* isstruct:                              Creating Structures.\n                                                             (line  161)\n* isstudent:                             System Information. (line  102)\n* issymmetric:                           Predicates for Numeric Objects.\n                                                             (line  111)\n* issymmetric <1>:                       Predicates for Numeric Objects.\n                                                             (line  112)\n* istril:                                Predicates for Numeric Objects.\n                                                             (line  165)\n* istriu:                                Predicates for Numeric Objects.\n                                                             (line  175)\n* isunix:                                System Information. (line   77)\n* isupper:                               Character Class Functions.\n                                                             (line   53)\n* isvarname:                             Variables.          (line   54)\n* isvector:                              Predicates for Numeric Objects.\n                                                             (line   76)\n* isxdigit:                              Character Class Functions.\n                                                             (line   68)\n* is_absolute_filename:                  Filesystem Utilities.\n                                                             (line  581)\n* is_dq_string:                          Escape Sequences in String Constants.\n                                                             (line   76)\n* is_function_handle:                    Function Handles.   (line   36)\n* is_leap_year:                          Timing Utilities.   (line  412)\n* is_leap_year <1>:                      Timing Utilities.   (line  413)\n* is_rooted_relative_filename:           Filesystem Utilities.\n                                                             (line  588)\n* is_sq_string:                          Escape Sequences in String Constants.\n                                                             (line   82)\n* is_valid_file_id:                      Opening and Closing Files.\n                                                             (line  130)\n* j:                                     Mathematical Constants.\n                                                             (line   57)\n* J:                                     Mathematical Constants.\n                                                             (line   57)\n* javaaddpath:                           Java Interface Functions.\n                                                             (line  201)\n* javaaddpath <1>:                       Java Interface Functions.\n                                                             (line  201)\n* javaaddpath <2>:                       Java Interface Functions.\n                                                             (line  202)\n* javaArray:                             Java Interface Functions.\n                                                             (line   24)\n* javaArray <1>:                         Java Interface Functions.\n                                                             (line   25)\n* javachk:                               Java Interface Functions.\n                                                             (line  227)\n* javachk <1>:                           Java Interface Functions.\n                                                             (line  228)\n* javachk <2>:                           Java Interface Functions.\n                                                             (line  229)\n* javaclasspath:                         Java Interface Functions.\n                                                             (line  167)\n* javaclasspath <1>:                     Java Interface Functions.\n                                                             (line  168)\n* javaclasspath <2>:                     Java Interface Functions.\n                                                             (line  169)\n* javaclasspath <3>:                     Java Interface Functions.\n                                                             (line  170)\n* javamem:                               Java Interface Functions.\n                                                             (line  307)\n* javamem <1>:                           Java Interface Functions.\n                                                             (line  308)\n* javaMethod:                            Java Interface Functions.\n                                                             (line  142)\n* javaMethod <1>:                        Java Interface Functions.\n                                                             (line  143)\n* javaObject:                            Java Interface Functions.\n                                                             (line   10)\n* javaObject <1>:                        Java Interface Functions.\n                                                             (line   11)\n* javarmpath:                            Java Interface Functions.\n                                                             (line  212)\n* javarmpath <1>:                        Java Interface Functions.\n                                                             (line  213)\n* java_get:                              Java Interface Functions.\n                                                             (line   88)\n* java_matrix_autoconversion:            Java Interface Functions.\n                                                             (line  347)\n* java_matrix_autoconversion <1>:        Java Interface Functions.\n                                                             (line  348)\n* java_matrix_autoconversion <2>:        Java Interface Functions.\n                                                             (line  349)\n* java_set:                              Java Interface Functions.\n                                                             (line  104)\n* java_unsigned_autoconversion:          Java Interface Functions.\n                                                             (line  363)\n* java_unsigned_autoconversion <1>:      Java Interface Functions.\n                                                             (line  364)\n* java_unsigned_autoconversion <2>:      Java Interface Functions.\n                                                             (line  365)\n* jet:                                   Representing Images.\n                                                             (line  390)\n* jet <1>:                               Representing Images.\n                                                             (line  391)\n* jit_enable:                            JIT Compiler.       (line   31)\n* jit_enable <1>:                        JIT Compiler.       (line   32)\n* jit_enable <2>:                        JIT Compiler.       (line   33)\n* jit_failcnt:                           JIT Compiler.       (line   63)\n* jit_failcnt <1>:                       JIT Compiler.       (line   64)\n* jit_failcnt <2>:                       JIT Compiler.       (line   65)\n* jit_startcnt:                          JIT Compiler.       (line   45)\n* jit_startcnt <1>:                      JIT Compiler.       (line   46)\n* jit_startcnt <2>:                      JIT Compiler.       (line   47)\n* kbhit:                                 Terminal Input.     (line   86)\n* kbhit <1>:                             Terminal Input.     (line   87)\n* kendall:                               Correlation and Regression Analysis.\n                                                             (line   76)\n* kendall <1>:                           Correlation and Regression Analysis.\n                                                             (line   77)\n* keyboard:                              Breakpoints.        (line  230)\n* keyboard <1>:                          Breakpoints.        (line  231)\n* kill:                                  Controlling Subprocesses.\n                                                             (line  509)\n* kolmogorov_smirnov_cdf:                Distributions.      (line  247)\n* kolmogorov_smirnov_test:               Tests.              (line  191)\n* kolmogorov_smirnov_test_2:             Tests.              (line  221)\n* kron:                                  Functions of a Matrix.\n                                                             (line   57)\n* kron <1>:                              Functions of a Matrix.\n                                                             (line   58)\n* kruskal_wallis_test:                   Tests.              (line  247)\n* krylov:                                Matrix Factorizations.\n                                                             (line  717)\n* kurtosis:                              Descriptive Statistics.\n                                                             (line  241)\n* kurtosis <1>:                          Descriptive Statistics.\n                                                             (line  242)\n* kurtosis <2>:                          Descriptive Statistics.\n                                                             (line  243)\n* laplace_cdf:                           Distributions.      (line  266)\n* laplace_inv:                           Distributions.      (line  270)\n* laplace_pdf:                           Distributions.      (line  262)\n* laplace_rnd:                           Random Number Generation.\n                                                             (line  237)\n* laplace_rnd <1>:                       Random Number Generation.\n                                                             (line  238)\n* laplace_rnd <2>:                       Random Number Generation.\n                                                             (line  239)\n* lasterr:                               Catching Errors.    (line   93)\n* lasterr <1>:                           Catching Errors.    (line   94)\n* lasterr <2>:                           Catching Errors.    (line   95)\n* lasterror:                             Catching Errors.    (line   50)\n* lasterror <1>:                         Catching Errors.    (line   51)\n* lasterror <2>:                         Catching Errors.    (line   52)\n* lastwarn:                              Issuing Warnings.   (line   91)\n* lastwarn <1>:                          Issuing Warnings.   (line   92)\n* lastwarn <2>:                          Issuing Warnings.   (line   93)\n* lcm:                                   Utility Functions.  (line  423)\n* lcm <1>:                               Utility Functions.  (line  424)\n* ldivide:                               Arithmetic Ops.     (line  129)\n* le:                                    Comparison Ops.     (line   86)\n* legend:                                Plot Annotations.   (line   43)\n* legend <1>:                            Plot Annotations.   (line   44)\n* legend <2>:                            Plot Annotations.   (line   45)\n* legend <3>:                            Plot Annotations.   (line   46)\n* legend <4>:                            Plot Annotations.   (line   47)\n* legend <5>:                            Plot Annotations.   (line   48)\n* legend <6>:                            Plot Annotations.   (line   49)\n* legend <7>:                            Plot Annotations.   (line   50)\n* legend <8>:                            Plot Annotations.   (line   51)\n* legend <9>:                            Plot Annotations.   (line   52)\n* legendre:                              Special Functions.  (line  414)\n* legendre <1>:                          Special Functions.  (line  415)\n* length:                                Object Sizes.       (line   69)\n* lgamma:                                Special Functions.  (line  481)\n* license:                               System Information. (line  235)\n* license <1>:                           System Information. (line  236)\n* license <2>:                           System Information. (line  237)\n* license <3>:                           System Information. (line  238)\n* license <4>:                           System Information. (line  239)\n* license <5>:                           System Information. (line  240)\n* license <6>:                           System Information. (line  241)\n* license <7>:                           System Information. (line  242)\n* light:                                 Graphics Objects.   (line  185)\n* light <1>:                             Graphics Objects.   (line  186)\n* light <2>:                             Graphics Objects.   (line  187)\n* light <3>:                             Graphics Objects.   (line  188)\n* lighting:                              Three-Dimensional Plots.\n                                                             (line  905)\n* lighting <1>:                          Three-Dimensional Plots.\n                                                             (line  906)\n* lin2mu:                                Audio Data Processing.\n                                                             (line   27)\n* line:                                  Graphics Objects.   (line   78)\n* line <1>:                              Graphics Objects.   (line   79)\n* line <2>:                              Graphics Objects.   (line   80)\n* line <3>:                              Graphics Objects.   (line   81)\n* line <4>:                              Graphics Objects.   (line   82)\n* line <5>:                              Graphics Objects.   (line   83)\n* line <6>:                              Graphics Objects.   (line   84)\n* line <7>:                              Graphics Objects.   (line   85)\n* lines:                                 Representing Images.\n                                                             (line  400)\n* lines <1>:                             Representing Images.\n                                                             (line  401)\n* link:                                  Filesystem Utilities.\n                                                             (line   73)\n* link <1>:                              Filesystem Utilities.\n                                                             (line   74)\n* linkaxes:                              Object Groups.      (line  230)\n* linkaxes <1>:                          Object Groups.      (line  231)\n* linkprop:                              Object Groups.      (line  198)\n* linkprop <1>:                          Object Groups.      (line  199)\n* linsolve:                              Basic Matrix Functions.\n                                                             (line  228)\n* linsolve <1>:                          Basic Matrix Functions.\n                                                             (line  229)\n* linsolve <2>:                          Basic Matrix Functions.\n                                                             (line  230)\n* linspace:                              Special Utility Matrices.\n                                                             (line  131)\n* linspace <1>:                          Special Utility Matrices.\n                                                             (line  132)\n* listdlg:                               I/O Dialogs.        (line  226)\n* list_in_columns:                       Terminal Output.    (line   38)\n* list_primes:                           Utility Functions.  (line  519)\n* list_primes <1>:                       Utility Functions.  (line  520)\n* load:                                  Simple File I/O.    (line  201)\n* load <1>:                              Simple File I/O.    (line  202)\n* load <2>:                              Simple File I/O.    (line  203)\n* load <3>:                              Simple File I/O.    (line  204)\n* load <4>:                              Simple File I/O.    (line  205)\n* load <5>:                              Simple File I/O.    (line  206)\n* load <6>:                              Simple File I/O.    (line  207)\n* loaded_graphics_toolkits:              Graphics Toolkits.  (line   32)\n* loadobj:                               Class Methods.      (line  184)\n* localfunctions:                        Subfunctions.       (line   26)\n* localtime:                             Timing Utilities.   (line  122)\n* log:                                   Exponents and Logarithms.\n                                                             (line   18)\n* log10:                                 Exponents and Logarithms.\n                                                             (line   41)\n* log1p:                                 Exponents and Logarithms.\n                                                             (line   35)\n* log2:                                  Exponents and Logarithms.\n                                                             (line   47)\n* log2 <1>:                              Exponents and Logarithms.\n                                                             (line   48)\n* logical:                               Logical Values.     (line   36)\n* logistic_cdf:                          Distributions.      (line  278)\n* logistic_inv:                          Distributions.      (line  282)\n* logistic_pdf:                          Distributions.      (line  274)\n* logistic_regression:                   Correlation and Regression Analysis.\n                                                             (line   98)\n* logistic_rnd:                          Random Number Generation.\n                                                             (line  249)\n* logistic_rnd <1>:                      Random Number Generation.\n                                                             (line  250)\n* logistic_rnd <2>:                      Random Number Generation.\n                                                             (line  251)\n* logit:                                 Basic Statistical Functions.\n                                                             (line  188)\n* loglog:                                Two-Dimensional Plots.\n                                                             (line  269)\n* loglog <1>:                            Two-Dimensional Plots.\n                                                             (line  270)\n* loglog <2>:                            Two-Dimensional Plots.\n                                                             (line  271)\n* loglog <3>:                            Two-Dimensional Plots.\n                                                             (line  272)\n* loglog <4>:                            Two-Dimensional Plots.\n                                                             (line  273)\n* loglog <5>:                            Two-Dimensional Plots.\n                                                             (line  274)\n* loglogerr:                             Two-Dimensional Plots.\n                                                             (line 1254)\n* loglogerr <1>:                         Two-Dimensional Plots.\n                                                             (line 1255)\n* loglogerr <2>:                         Two-Dimensional Plots.\n                                                             (line 1256)\n* loglogerr <3>:                         Two-Dimensional Plots.\n                                                             (line 1257)\n* loglogerr <4>:                         Two-Dimensional Plots.\n                                                             (line 1258)\n* loglogerr <5>:                         Two-Dimensional Plots.\n                                                             (line 1259)\n* loglogerr <6>:                         Two-Dimensional Plots.\n                                                             (line 1260)\n* loglogerr <7>:                         Two-Dimensional Plots.\n                                                             (line 1261)\n* loglogerr <8>:                         Two-Dimensional Plots.\n                                                             (line 1262)\n* loglogerr <9>:                         Two-Dimensional Plots.\n                                                             (line 1263)\n* logm:                                  Functions of a Matrix.\n                                                             (line   30)\n* logm <1>:                              Functions of a Matrix.\n                                                             (line   31)\n* logm <2>:                              Functions of a Matrix.\n                                                             (line   32)\n* logncdf:                               Distributions.      (line  297)\n* logncdf <1>:                           Distributions.      (line  298)\n* logninv:                               Distributions.      (line  308)\n* logninv <1>:                           Distributions.      (line  309)\n* lognpdf:                               Distributions.      (line  286)\n* lognpdf <1>:                           Distributions.      (line  287)\n* lognrnd:                               Random Number Generation.\n                                                             (line  261)\n* lognrnd <1>:                           Random Number Generation.\n                                                             (line  262)\n* lognrnd <2>:                           Random Number Generation.\n                                                             (line  263)\n* lognrnd <3>:                           Random Number Generation.\n                                                             (line  264)\n* logspace:                              Special Utility Matrices.\n                                                             (line  152)\n* logspace <1>:                          Special Utility Matrices.\n                                                             (line  153)\n* logspace <2>:                          Special Utility Matrices.\n                                                             (line  154)\n* lookfor:                               Getting Help.       (line   58)\n* lookfor <1>:                           Getting Help.       (line   59)\n* lookfor <2>:                           Getting Help.       (line   60)\n* lookfor <3>:                           Getting Help.       (line   61)\n* lookup:                                Finding Elements and Checking Conditions.\n                                                             (line  210)\n* lookup <1>:                            Finding Elements and Checking Conditions.\n                                                             (line  211)\n* lower:                                 String Conversions. (line  296)\n* ls:                                    Current Working Directory.\n                                                             (line   33)\n* ls <1>:                                Current Working Directory.\n                                                             (line   34)\n* ls <2>:                                Current Working Directory.\n                                                             (line   35)\n* ls <3>:                                Current Working Directory.\n                                                             (line   36)\n* ls <4>:                                Current Working Directory.\n                                                             (line   37)\n* lscov:                                 Linear Least Squares.\n                                                             (line  115)\n* lscov <1>:                             Linear Least Squares.\n                                                             (line  116)\n* lscov <2>:                             Linear Least Squares.\n                                                             (line  117)\n* lscov <3>:                             Linear Least Squares.\n                                                             (line  118)\n* lsode:                                 Ordinary Differential Equations.\n                                                             (line   14)\n* lsode <1>:                             Ordinary Differential Equations.\n                                                             (line   15)\n* lsode_options:                         Ordinary Differential Equations.\n                                                             (line   88)\n* lsode_options <1>:                     Ordinary Differential Equations.\n                                                             (line   89)\n* lsode_options <2>:                     Ordinary Differential Equations.\n                                                             (line   90)\n* lsqnonneg:                             Linear Least Squares.\n                                                             (line   65)\n* lsqnonneg <1>:                         Linear Least Squares.\n                                                             (line   66)\n* lsqnonneg <2>:                         Linear Least Squares.\n                                                             (line   67)\n* lsqnonneg <3>:                         Linear Least Squares.\n                                                             (line   68)\n* lsqnonneg <4>:                         Linear Least Squares.\n                                                             (line   69)\n* lsqnonneg <5>:                         Linear Least Squares.\n                                                             (line   70)\n* lsqnonneg <6>:                         Linear Least Squares.\n                                                             (line   71)\n* lsqnonneg <7>:                         Linear Least Squares.\n                                                             (line   72)\n* lstat:                                 Filesystem Utilities.\n                                                             (line  185)\n* lstat <1>:                             Filesystem Utilities.\n                                                             (line  186)\n* ls_command:                            Current Working Directory.\n                                                             (line   64)\n* ls_command <1>:                        Current Working Directory.\n                                                             (line   65)\n* lt:                                    Comparison Ops.     (line   92)\n* lu:                                    Matrix Factorizations.\n                                                             (line  169)\n* lu <1>:                                Matrix Factorizations.\n                                                             (line  170)\n* lu <2>:                                Matrix Factorizations.\n                                                             (line  171)\n* lu <3>:                                Matrix Factorizations.\n                                                             (line  172)\n* lu <4>:                                Matrix Factorizations.\n                                                             (line  173)\n* lu <5>:                                Matrix Factorizations.\n                                                             (line  174)\n* lu <6>:                                Matrix Factorizations.\n                                                             (line  175)\n* luupdate:                              Matrix Factorizations.\n                                                             (line  241)\n* luupdate <1>:                          Matrix Factorizations.\n                                                             (line  242)\n* magic:                                 Famous Matrices.    (line  382)\n* makeinfo_program:                      Getting Help.       (line  158)\n* makeinfo_program <1>:                  Getting Help.       (line  159)\n* makeinfo_program <2>:                  Getting Help.       (line  160)\n* make_absolute_filename:                Filesystem Utilities.\n                                                             (line  570)\n* manova:                                Tests.              (line  274)\n* mat2cell:                              Creating Cell Arrays.\n                                                             (line   90)\n* mat2cell <1>:                          Creating Cell Arrays.\n                                                             (line   91)\n* mat2cell <2>:                          Creating Cell Arrays.\n                                                             (line   92)\n* mat2str:                               Converting Numerical Data to Strings.\n                                                             (line   15)\n* mat2str <1>:                           Converting Numerical Data to Strings.\n                                                             (line   16)\n* material:                              Three-Dimensional Plots.\n                                                             (line  933)\n* material <1>:                          Three-Dimensional Plots.\n                                                             (line  934)\n* material <2>:                          Three-Dimensional Plots.\n                                                             (line  935)\n* material <3>:                          Three-Dimensional Plots.\n                                                             (line  936)\n* material <4>:                          Three-Dimensional Plots.\n                                                             (line  937)\n* material <5>:                          Three-Dimensional Plots.\n                                                             (line  938)\n* material <6>:                          Three-Dimensional Plots.\n                                                             (line  939)\n* material <7>:                          Three-Dimensional Plots.\n                                                             (line  940)\n* material <8>:                          Three-Dimensional Plots.\n                                                             (line  941)\n* material <9>:                          Three-Dimensional Plots.\n                                                             (line  942)\n* matlabroot:                            System Information. (line  115)\n* matrix_type:                           Basic Matrix Functions.\n                                                             (line  281)\n* matrix_type <1>:                       Basic Matrix Functions.\n                                                             (line  282)\n* matrix_type <2>:                       Basic Matrix Functions.\n                                                             (line  283)\n* matrix_type <3>:                       Basic Matrix Functions.\n                                                             (line  284)\n* matrix_type <4>:                       Basic Matrix Functions.\n                                                             (line  285)\n* matrix_type <5>:                       Basic Matrix Functions.\n                                                             (line  286)\n* max:                                   Utility Functions.  (line   65)\n* max <1>:                               Utility Functions.  (line   66)\n* max <2>:                               Utility Functions.  (line   67)\n* max <3>:                               Utility Functions.  (line   68)\n* max_recursion_depth:                   Recursion.          (line   28)\n* max_recursion_depth <1>:               Recursion.          (line   29)\n* max_recursion_depth <2>:               Recursion.          (line   30)\n* mcnemar_test:                          Tests.              (line  291)\n* mean:                                  Descriptive Statistics.\n                                                             (line   11)\n* mean <1>:                              Descriptive Statistics.\n                                                             (line   12)\n* mean <2>:                              Descriptive Statistics.\n                                                             (line   13)\n* mean <3>:                              Descriptive Statistics.\n                                                             (line   14)\n* meansq:                                Descriptive Statistics.\n                                                             (line  124)\n* meansq <1>:                            Descriptive Statistics.\n                                                             (line  125)\n* median:                                Descriptive Statistics.\n                                                             (line   44)\n* median <1>:                            Descriptive Statistics.\n                                                             (line   45)\n* menu:                                  Terminal Input.     (line   44)\n* menu <1>:                              Terminal Input.     (line   45)\n* merge:                                 Short-circuit Boolean Operators.\n                                                             (line  104)\n* mesh:                                  Three-Dimensional Plots.\n                                                             (line   52)\n* mesh <1>:                              Three-Dimensional Plots.\n                                                             (line   53)\n* mesh <2>:                              Three-Dimensional Plots.\n                                                             (line   54)\n* mesh <3>:                              Three-Dimensional Plots.\n                                                             (line   55)\n* mesh <4>:                              Three-Dimensional Plots.\n                                                             (line   56)\n* mesh <5>:                              Three-Dimensional Plots.\n                                                             (line   57)\n* meshc:                                 Three-Dimensional Plots.\n                                                             (line   91)\n* meshc <1>:                             Three-Dimensional Plots.\n                                                             (line   92)\n* meshc <2>:                             Three-Dimensional Plots.\n                                                             (line   93)\n* meshc <3>:                             Three-Dimensional Plots.\n                                                             (line   94)\n* meshc <4>:                             Three-Dimensional Plots.\n                                                             (line   95)\n* meshc <5>:                             Three-Dimensional Plots.\n                                                             (line   96)\n* meshgrid:                              Three-Dimensional Plots.\n                                                             (line 1042)\n* meshgrid <1>:                          Three-Dimensional Plots.\n                                                             (line 1043)\n* meshgrid <2>:                          Three-Dimensional Plots.\n                                                             (line 1044)\n* meshgrid <3>:                          Three-Dimensional Plots.\n                                                             (line 1045)\n* meshz:                                 Three-Dimensional Plots.\n                                                             (line  130)\n* meshz <1>:                             Three-Dimensional Plots.\n                                                             (line  131)\n* meshz <2>:                             Three-Dimensional Plots.\n                                                             (line  132)\n* meshz <3>:                             Three-Dimensional Plots.\n                                                             (line  133)\n* meshz <4>:                             Three-Dimensional Plots.\n                                                             (line  134)\n* meshz <5>:                             Three-Dimensional Plots.\n                                                             (line  135)\n* methods:                               Creating a Class.   (line  112)\n* methods <1>:                           Creating a Class.   (line  113)\n* methods <2>:                           Creating a Class.   (line  114)\n* mex:                                   Getting Started with Mex-Files.\n                                                             (line   12)\n* mexext:                                Getting Started with Mex-Files.\n                                                             (line   19)\n* mfilename:                             Function Files.     (line  145)\n* mfilename <1>:                         Function Files.     (line  146)\n* mfilename <2>:                         Function Files.     (line  147)\n* mget:                                  FTP Objects.        (line   40)\n* mget <1>:                              FTP Objects.        (line   41)\n* mget <2>:                              FTP Objects.        (line   42)\n* mgorth:                                Basic Matrix Functions.\n                                                             (line  440)\n* min:                                   Utility Functions.  (line  115)\n* min <1>:                               Utility Functions.  (line  116)\n* min <2>:                               Utility Functions.  (line  117)\n* min <3>:                               Utility Functions.  (line  118)\n* minus:                                 Arithmetic Ops.     (line  137)\n* mislocked:                             Function Locking.   (line   65)\n* mislocked <1>:                         Function Locking.   (line   66)\n* missing_component_hook:                Missing Components. (line   12)\n* missing_component_hook <1>:            Missing Components. (line   13)\n* missing_component_hook <2>:            Missing Components. (line   14)\n* missing_function_hook:                 Parser.             (line   47)\n* missing_function_hook <1>:             Parser.             (line   48)\n* missing_function_hook <2>:             Parser.             (line   49)\n* mkdir:                                 Filesystem Utilities.\n                                                             (line  104)\n* mkdir <1>:                             Filesystem Utilities.\n                                                             (line  105)\n* mkdir <2>:                             Filesystem Utilities.\n                                                             (line  106)\n* mkdir <3>:                             FTP Objects.        (line  111)\n* mkfifo:                                Filesystem Utilities.\n                                                             (line  153)\n* mkfifo <1>:                            Filesystem Utilities.\n                                                             (line  154)\n* mkoctfile:                             Getting Started with Oct-Files.\n                                                             (line   16)\n* mkoctfile <1>:                         Getting Started with Oct-Files.\n                                                             (line   17)\n* mkpp:                                  Polynomial Interpolation.\n                                                             (line  330)\n* mkpp <1>:                              Polynomial Interpolation.\n                                                             (line  331)\n* mkstemp:                               Temporary Files.    (line   11)\n* mkstemp <1>:                           Temporary Files.    (line   12)\n* mktime:                                Timing Utilities.   (line  149)\n* mldivide:                              Arithmetic Ops.     (line  142)\n* mlock:                                 Function Locking.   (line   50)\n* mod:                                   Utility Functions.  (line  472)\n* mode:                                  Descriptive Statistics.\n                                                             (line   65)\n* mode <1>:                              Descriptive Statistics.\n                                                             (line   66)\n* mode <2>:                              Descriptive Statistics.\n                                                             (line   67)\n* moment:                                Descriptive Statistics.\n                                                             (line  275)\n* moment <1>:                            Descriptive Statistics.\n                                                             (line  276)\n* moment <2>:                            Descriptive Statistics.\n                                                             (line  277)\n* moment <3>:                            Descriptive Statistics.\n                                                             (line  278)\n* moment <4>:                            Descriptive Statistics.\n                                                             (line  279)\n* more:                                  Paging Screen Output.\n                                                             (line   24)\n* more <1>:                              Paging Screen Output.\n                                                             (line   25)\n* more <2>:                              Paging Screen Output.\n                                                             (line   26)\n* movefile:                              Filesystem Utilities.\n                                                             (line   11)\n* movefile <1>:                          Filesystem Utilities.\n                                                             (line   12)\n* movefile <2>:                          Filesystem Utilities.\n                                                             (line   13)\n* movefile <3>:                          Filesystem Utilities.\n                                                             (line   14)\n* mpoles:                                Finding Roots.      (line   76)\n* mpoles <1>:                            Finding Roots.      (line   77)\n* mpoles <2>:                            Finding Roots.      (line   78)\n* mpower:                                Arithmetic Ops.     (line  150)\n* mput:                                  FTP Objects.        (line   55)\n* mrdivide:                              Arithmetic Ops.     (line  158)\n* msgbox:                                I/O Dialogs.        (line  288)\n* msgbox <1>:                            I/O Dialogs.        (line  289)\n* msgbox <2>:                            I/O Dialogs.        (line  290)\n* msgbox <3>:                            I/O Dialogs.        (line  291)\n* mtimes:                                Arithmetic Ops.     (line  166)\n* mtimes <1>:                            Arithmetic Ops.     (line  167)\n* mu2lin:                                Audio Data Processing.\n                                                             (line   39)\n* munlock:                               Function Locking.   (line   56)\n* munlock <1>:                           Function Locking.   (line   57)\n* NA:                                    Missing Data.       (line   11)\n* NA <1>:                                Missing Data.       (line   12)\n* NA <2>:                                Missing Data.       (line   13)\n* NA <3>:                                Missing Data.       (line   14)\n* NA <4>:                                Missing Data.       (line   15)\n* namelengthmax:                         Variables.          (line  122)\n* nan:                                   Mathematical Constants.\n                                                             (line  114)\n* NaN:                                   Mathematical Constants.\n                                                             (line  114)\n* NaN <1>:                               Mathematical Constants.\n                                                             (line  115)\n* NaN <2>:                               Mathematical Constants.\n                                                             (line  116)\n* NaN <3>:                               Mathematical Constants.\n                                                             (line  117)\n* NaN <4>:                               Mathematical Constants.\n                                                             (line  118)\n* nargin:                                Defining Functions. (line  145)\n* nargin <1>:                            Defining Functions. (line  146)\n* narginchk:                             Multiple Return Values.\n                                                             (line  170)\n* nargout:                               Multiple Return Values.\n                                                             (line  115)\n* nargout <1>:                           Multiple Return Values.\n                                                             (line  116)\n* nargoutchk:                            Multiple Return Values.\n                                                             (line  186)\n* nargoutchk <1>:                        Multiple Return Values.\n                                                             (line  187)\n* nargoutchk <2>:                        Multiple Return Values.\n                                                             (line  188)\n* nargoutchk <3>:                        Multiple Return Values.\n                                                             (line  189)\n* native_float_format:                   Simple File I/O.    (line  302)\n* nbincdf:                               Distributions.      (line  330)\n* nbininv:                               Distributions.      (line  341)\n* nbinpdf:                               Distributions.      (line  319)\n* nbinrnd:                               Random Number Generation.\n                                                             (line  278)\n* nbinrnd <1>:                           Random Number Generation.\n                                                             (line  279)\n* nbinrnd <2>:                           Random Number Generation.\n                                                             (line  280)\n* nbinrnd <3>:                           Random Number Generation.\n                                                             (line  281)\n* nchoosek:                              Basic Statistical Functions.\n                                                             (line   81)\n* nchoosek <1>:                          Basic Statistical Functions.\n                                                             (line   82)\n* ndgrid:                                Three-Dimensional Plots.\n                                                             (line 1078)\n* ndgrid <1>:                            Three-Dimensional Plots.\n                                                             (line 1079)\n* ndims:                                 Object Sizes.       (line   12)\n* ndims <1>:                             Matrices and Arrays in Oct-Files.\n                                                             (line   99)\n* ne:                                    Comparison Ops.     (line   98)\n* newplot:                               Manipulation of Plot Windows.\n                                                             (line   55)\n* newplot <1>:                           Manipulation of Plot Windows.\n                                                             (line   56)\n* newplot <2>:                           Manipulation of Plot Windows.\n                                                             (line   57)\n* newplot <3>:                           Manipulation of Plot Windows.\n                                                             (line   58)\n* news:                                  Getting Help.       (line   93)\n* news <1>:                              Getting Help.       (line   94)\n* nextpow2:                              Exponents and Logarithms.\n                                                             (line   68)\n* nnz:                                   Information.        (line   26)\n* nonzeros:                              Information.        (line   32)\n* norm:                                  Basic Matrix Functions.\n                                                             (line  363)\n* norm <1>:                              Basic Matrix Functions.\n                                                             (line  364)\n* norm <2>:                              Basic Matrix Functions.\n                                                             (line  365)\n* normcdf:                               Distributions.      (line  360)\n* normcdf <1>:                           Distributions.      (line  361)\n* normest:                               Sparse Linear Algebra.\n                                                             (line   89)\n* normest <1>:                           Sparse Linear Algebra.\n                                                             (line   90)\n* normest <2>:                           Sparse Linear Algebra.\n                                                             (line   91)\n* normest1:                              Sparse Linear Algebra.\n                                                             (line  107)\n* normest1 <1>:                          Sparse Linear Algebra.\n                                                             (line  108)\n* normest1 <2>:                          Sparse Linear Algebra.\n                                                             (line  109)\n* normest1 <3>:                          Sparse Linear Algebra.\n                                                             (line  110)\n* normest1 <4>:                          Sparse Linear Algebra.\n                                                             (line  111)\n* normest1 <5>:                          Sparse Linear Algebra.\n                                                             (line  112)\n* normest1 <6>:                          Sparse Linear Algebra.\n                                                             (line  113)\n* norminv:                               Distributions.      (line  368)\n* norminv <1>:                           Distributions.      (line  369)\n* normpdf:                               Distributions.      (line  352)\n* normpdf <1>:                           Distributions.      (line  353)\n* normrnd:                               Random Number Generation.\n                                                             (line  295)\n* normrnd <1>:                           Random Number Generation.\n                                                             (line  296)\n* normrnd <2>:                           Random Number Generation.\n                                                             (line  297)\n* normrnd <3>:                           Random Number Generation.\n                                                             (line  298)\n* not:                                   Element-by-element Boolean Operators.\n                                                             (line   79)\n* now:                                   Timing Utilities.   (line   65)\n* nproc:                                 System Information. (line   54)\n* nproc <1>:                             System Information. (line   55)\n* nthargout:                             Multiple Return Values.\n                                                             (line   45)\n* nthargout <1>:                         Multiple Return Values.\n                                                             (line   46)\n* nthroot:                               Exponents and Logarithms.\n                                                             (line  111)\n* nth_element:                           Rearranging Matrices.\n                                                             (line  444)\n* nth_element <1>:                       Rearranging Matrices.\n                                                             (line  445)\n* ntsc2rgb:                              Color Conversion.   (line   75)\n* ntsc2rgb <1>:                          Color Conversion.   (line   76)\n* null:                                  Basic Matrix Functions.\n                                                             (line  416)\n* null <1>:                              Basic Matrix Functions.\n                                                             (line  417)\n* num2cell:                              Creating Cell Arrays.\n                                                             (line   62)\n* num2cell <1>:                          Creating Cell Arrays.\n                                                             (line   63)\n* num2hex:                               String Conversions. (line  143)\n* num2str:                               Converting Numerical Data to Strings.\n                                                             (line   50)\n* num2str <1>:                           Converting Numerical Data to Strings.\n                                                             (line   51)\n* num2str <2>:                           Converting Numerical Data to Strings.\n                                                             (line   52)\n* numel:                                 Object Sizes.       (line   38)\n* numel <1>:                             Object Sizes.       (line   39)\n* numel <2>:                             Matrices and Arrays in Oct-Files.\n                                                             (line   89)\n* numfields:                             Manipulating Structures.\n                                                             (line    9)\n* nzmax:                                 Information.        (line   37)\n* ocean:                                 Representing Images.\n                                                             (line  411)\n* ocean <1>:                             Representing Images.\n                                                             (line  412)\n* octave_core_file_limit:                Saving Data on Unexpected Exits.\n                                                             (line   72)\n* octave_core_file_limit <1>:            Saving Data on Unexpected Exits.\n                                                             (line   73)\n* octave_core_file_limit <2>:            Saving Data on Unexpected Exits.\n                                                             (line   74)\n* octave_core_file_name:                 Saving Data on Unexpected Exits.\n                                                             (line   95)\n* octave_core_file_name <1>:             Saving Data on Unexpected Exits.\n                                                             (line   96)\n* octave_core_file_name <2>:             Saving Data on Unexpected Exits.\n                                                             (line   97)\n* octave_core_file_options:              Saving Data on Unexpected Exits.\n                                                             (line   52)\n* octave_core_file_options <1>:          Saving Data on Unexpected Exits.\n                                                             (line   53)\n* octave_core_file_options <2>:          Saving Data on Unexpected Exits.\n                                                             (line   54)\n* OCTAVE_HOME:                           System Information. (line  109)\n* OCTAVE_VERSION:                        System Information. (line  123)\n* ode23:                                 Matlab-compatible solvers.\n                                                             (line   95)\n* ode23 <1>:                             Matlab-compatible solvers.\n                                                             (line   96)\n* ode23 <2>:                             Matlab-compatible solvers.\n                                                             (line   97)\n* ode23 <3>:                             Matlab-compatible solvers.\n                                                             (line   98)\n* ode23 <4>:                             Matlab-compatible solvers.\n                                                             (line   99)\n* ode45:                                 Matlab-compatible solvers.\n                                                             (line   32)\n* ode45 <1>:                             Matlab-compatible solvers.\n                                                             (line   33)\n* ode45 <2>:                             Matlab-compatible solvers.\n                                                             (line   34)\n* ode45 <3>:                             Matlab-compatible solvers.\n                                                             (line   35)\n* ode45 <4>:                             Matlab-compatible solvers.\n                                                             (line   36)\n* odeget:                                Matlab-compatible solvers.\n                                                             (line  283)\n* odeget <1>:                            Matlab-compatible solvers.\n                                                             (line  284)\n* odeplot:                               Matlab-compatible solvers.\n                                                             (line  300)\n* odeset:                                Matlab-compatible solvers.\n                                                             (line  159)\n* odeset <1>:                            Matlab-compatible solvers.\n                                                             (line  160)\n* odeset <2>:                            Matlab-compatible solvers.\n                                                             (line  161)\n* odeset <3>:                            Matlab-compatible solvers.\n                                                             (line  163)\n* odeset <4>:                            Matlab-compatible solvers.\n                                                             (line  164)\n* ols:                                   Linear Least Squares.\n                                                             (line   13)\n* onCleanup:                             Recovering From Errors.\n                                                             (line   28)\n* ones:                                  Special Utility Matrices.\n                                                             (line   45)\n* ones <1>:                              Special Utility Matrices.\n                                                             (line   46)\n* ones <2>:                              Special Utility Matrices.\n                                                             (line   47)\n* ones <3>:                              Special Utility Matrices.\n                                                             (line   48)\n* ones <4>:                              Special Utility Matrices.\n                                                             (line   49)\n* open:                                  Controlling Subprocesses.\n                                                             (line   89)\n* open <1>:                              Controlling Subprocesses.\n                                                             (line   90)\n* operator:                              Matrices and Arrays in Oct-Files.\n                                                             (line   76)\n* optimget:                              Linear Least Squares.\n                                                             (line  242)\n* optimget <1>:                          Linear Least Squares.\n                                                             (line  243)\n* optimize_subsasgn_calls:               Defining Indexing And Indexed Assignment.\n                                                             (line  125)\n* optimize_subsasgn_calls <1>:           Defining Indexing And Indexed Assignment.\n                                                             (line  126)\n* optimize_subsasgn_calls <2>:           Defining Indexing And Indexed Assignment.\n                                                             (line  127)\n* optimset:                              Linear Least Squares.\n                                                             (line  149)\n* optimset <1>:                          Linear Least Squares.\n                                                             (line  150)\n* optimset <2>:                          Linear Least Squares.\n                                                             (line  151)\n* optimset <3>:                          Linear Least Squares.\n                                                             (line  152)\n* optimset <4>:                          Linear Least Squares.\n                                                             (line  153)\n* or:                                    Element-by-element Boolean Operators.\n                                                             (line   86)\n* or <1>:                                Element-by-element Boolean Operators.\n                                                             (line   87)\n* orderfields:                           Manipulating Structures.\n                                                             (line  148)\n* orderfields <1>:                       Manipulating Structures.\n                                                             (line  149)\n* orderfields <2>:                       Manipulating Structures.\n                                                             (line  150)\n* orderfields <3>:                       Manipulating Structures.\n                                                             (line  151)\n* orderfields <4>:                       Manipulating Structures.\n                                                             (line  152)\n* ordschur:                              Matrix Factorizations.\n                                                             (line  586)\n* orient:                                Printing and Saving Plots.\n                                                             (line  367)\n* orient <1>:                            Printing and Saving Plots.\n                                                             (line  368)\n* orient <2>:                            Printing and Saving Plots.\n                                                             (line  369)\n* orient <3>:                            Printing and Saving Plots.\n                                                             (line  370)\n* orth:                                  Basic Matrix Functions.\n                                                             (line  428)\n* orth <1>:                              Basic Matrix Functions.\n                                                             (line  429)\n* ostrsplit:                             Manipulating Strings.\n                                                             (line  354)\n* ostrsplit <1>:                         Manipulating Strings.\n                                                             (line  355)\n* output_max_field_width:                Matrices.           (line  131)\n* output_max_field_width <1>:            Matrices.           (line  132)\n* output_max_field_width <2>:            Matrices.           (line  133)\n* output_precision:                      Matrices.           (line  146)\n* output_precision <1>:                  Matrices.           (line  147)\n* output_precision <2>:                  Matrices.           (line  148)\n* pack:                                  Status of Variables.\n                                                             (line  333)\n* padecoef:                              Polynomial Interpolation.\n                                                             (line  272)\n* padecoef <1>:                          Polynomial Interpolation.\n                                                             (line  273)\n* PAGER:                                 Paging Screen Output.\n                                                             (line   37)\n* PAGER <1>:                             Paging Screen Output.\n                                                             (line   38)\n* PAGER <2>:                             Paging Screen Output.\n                                                             (line   39)\n* PAGER_FLAGS:                           Paging Screen Output.\n                                                             (line   55)\n* PAGER_FLAGS <1>:                       Paging Screen Output.\n                                                             (line   56)\n* PAGER_FLAGS <2>:                       Paging Screen Output.\n                                                             (line   57)\n* page_output_immediately:               Paging Screen Output.\n                                                             (line   90)\n* page_output_immediately <1>:           Paging Screen Output.\n                                                             (line   91)\n* page_output_immediately <2>:           Paging Screen Output.\n                                                             (line   92)\n* page_screen_output:                    Paging Screen Output.\n                                                             (line   70)\n* page_screen_output <1>:                Paging Screen Output.\n                                                             (line   71)\n* page_screen_output <2>:                Paging Screen Output.\n                                                             (line   72)\n* pan:                                   Manipulation of Plot Objects.\n                                                             (line    6)\n* pan <1>:                               Manipulation of Plot Objects.\n                                                             (line    7)\n* pan <2>:                               Manipulation of Plot Objects.\n                                                             (line    8)\n* pan <3>:                               Manipulation of Plot Objects.\n                                                             (line    9)\n* pan <4>:                               Manipulation of Plot Objects.\n                                                             (line   10)\n* pan <5>:                               Manipulation of Plot Objects.\n                                                             (line   11)\n* pareto:                                Two-Dimensional Plots.\n                                                             (line  804)\n* pareto <1>:                            Two-Dimensional Plots.\n                                                             (line  805)\n* pareto <2>:                            Two-Dimensional Plots.\n                                                             (line  806)\n* pareto <3>:                            Two-Dimensional Plots.\n                                                             (line  807)\n* parseparams:                           Variable-length Argument Lists.\n                                                             (line   63)\n* parseparams <1>:                       Variable-length Argument Lists.\n                                                             (line   64)\n* pascal:                                Famous Matrices.    (line  394)\n* pascal <1>:                            Famous Matrices.    (line  395)\n* patch:                                 Graphics Objects.   (line  102)\n* patch <1>:                             Graphics Objects.   (line  103)\n* patch <2>:                             Graphics Objects.   (line  104)\n* patch <3>:                             Graphics Objects.   (line  105)\n* patch <4>:                             Graphics Objects.   (line  106)\n* patch <5>:                             Graphics Objects.   (line  107)\n* patch <6>:                             Graphics Objects.   (line  108)\n* patch <7>:                             Graphics Objects.   (line  109)\n* path:                                  Manipulating the Load Path.\n                                                             (line   93)\n* path <1>:                              Manipulating the Load Path.\n                                                             (line   94)\n* path <2>:                              Manipulating the Load Path.\n                                                             (line   95)\n* pathdef:                               Manipulating the Load Path.\n                                                             (line  114)\n* pathsep:                               Manipulating the Load Path.\n                                                             (line  132)\n* pathsep <1>:                           Manipulating the Load Path.\n                                                             (line  133)\n* pause:                                 Playback.           (line   29)\n* pause <1>:                             Recording.          (line   20)\n* pause <2>:                             Timing Utilities.   (line  460)\n* pause <3>:                             Timing Utilities.   (line  461)\n* pbaspect:                              Aspect Ratio.       (line   36)\n* pbaspect <1>:                          Aspect Ratio.       (line   37)\n* pbaspect <2>:                          Aspect Ratio.       (line   38)\n* pbaspect <3>:                          Aspect Ratio.       (line   39)\n* pbaspect <4>:                          Aspect Ratio.       (line   40)\n* pcg:                                   Iterative Techniques.\n                                                             (line   11)\n* pcg <1>:                               Iterative Techniques.\n                                                             (line   12)\n* pchip:                                 Signal Processing.  (line  608)\n* pchip <1>:                             Signal Processing.  (line  609)\n* pclose:                                Controlling Subprocesses.\n                                                             (line  162)\n* pcolor:                                Two-Dimensional Plots.\n                                                             (line 1535)\n* pcolor <1>:                            Two-Dimensional Plots.\n                                                             (line 1536)\n* pcolor <2>:                            Two-Dimensional Plots.\n                                                             (line 1537)\n* pcolor <3>:                            Two-Dimensional Plots.\n                                                             (line 1538)\n* pcr:                                   Iterative Techniques.\n                                                             (line  157)\n* pcr <1>:                               Iterative Techniques.\n                                                             (line  158)\n* peaks:                                 Test Plotting Functions.\n                                                             (line   33)\n* peaks <1>:                             Test Plotting Functions.\n                                                             (line   34)\n* peaks <2>:                             Test Plotting Functions.\n                                                             (line   35)\n* peaks <3>:                             Test Plotting Functions.\n                                                             (line   36)\n* peaks <4>:                             Test Plotting Functions.\n                                                             (line   37)\n* periodogram:                           Signal Processing.  (line  635)\n* periodogram <1>:                       Signal Processing.  (line  636)\n* periodogram <2>:                       Signal Processing.  (line  637)\n* periodogram <3>:                       Signal Processing.  (line  638)\n* periodogram <4>:                       Signal Processing.  (line  639)\n* periodogram <5>:                       Signal Processing.  (line  640)\n* perl:                                  Controlling Subprocesses.\n                                                             (line  108)\n* perl <1>:                              Controlling Subprocesses.\n                                                             (line  109)\n* perl <2>:                              Controlling Subprocesses.\n                                                             (line  110)\n* perms:                                 Basic Statistical Functions.\n                                                             (line  126)\n* permute:                               Rearranging Matrices.\n                                                             (line  177)\n* pi:                                    Mathematical Constants.\n                                                             (line   31)\n* pi <1>:                                Mathematical Constants.\n                                                             (line   32)\n* pi <2>:                                Mathematical Constants.\n                                                             (line   33)\n* pi <3>:                                Mathematical Constants.\n                                                             (line   34)\n* pi <4>:                                Mathematical Constants.\n                                                             (line   35)\n* pie:                                   Two-Dimensional Plots.\n                                                             (line 1328)\n* pie <1>:                               Two-Dimensional Plots.\n                                                             (line 1329)\n* pie <2>:                               Two-Dimensional Plots.\n                                                             (line 1330)\n* pie <3>:                               Two-Dimensional Plots.\n                                                             (line 1331)\n* pie <4>:                               Two-Dimensional Plots.\n                                                             (line 1332)\n* pie3:                                  Two-Dimensional Plots.\n                                                             (line 1361)\n* pie3 <1>:                              Two-Dimensional Plots.\n                                                             (line 1362)\n* pie3 <2>:                              Two-Dimensional Plots.\n                                                             (line 1363)\n* pie3 <3>:                              Two-Dimensional Plots.\n                                                             (line 1364)\n* pie3 <4>:                              Two-Dimensional Plots.\n                                                             (line 1365)\n* pink:                                  Representing Images.\n                                                             (line  421)\n* pink <1>:                              Representing Images.\n                                                             (line  422)\n* pinv:                                  Basic Matrix Functions.\n                                                             (line  451)\n* pinv <1>:                              Basic Matrix Functions.\n                                                             (line  452)\n* pipe:                                  Controlling Subprocesses.\n                                                             (line  270)\n* pkg:                                   Packages.           (line   22)\n* pkg <1>:                               Installing and Removing Packages.\n                                                             (line   57)\n* pkg <2>:                               Installing and Removing Packages.\n                                                             (line   58)\n* pkg <3>:                               Installing and Removing Packages.\n                                                             (line   59)\n* planerot:                              Basic Matrix Functions.\n                                                             (line  203)\n* play:                                  Playback.           (line    8)\n* play <1>:                              Playback.           (line    9)\n* play <2>:                              Playback.           (line   10)\n* play <3>:                              Data Retrieval.     (line   22)\n* play <4>:                              Data Retrieval.     (line   23)\n* play <5>:                              Data Retrieval.     (line   24)\n* playblocking:                          Playback.           (line   19)\n* playblocking <1>:                      Playback.           (line   20)\n* playblocking <2>:                      Playback.           (line   21)\n* plot:                                  Two-Dimensional Plots.\n                                                             (line   29)\n* plot <1>:                              Two-Dimensional Plots.\n                                                             (line   30)\n* plot <2>:                              Two-Dimensional Plots.\n                                                             (line   31)\n* plot <3>:                              Two-Dimensional Plots.\n                                                             (line   32)\n* plot <4>:                              Two-Dimensional Plots.\n                                                             (line   33)\n* plot <5>:                              Two-Dimensional Plots.\n                                                             (line   34)\n* plot <6>:                              Two-Dimensional Plots.\n                                                             (line   35)\n* plot3:                                 Three-Dimensional Plots.\n                                                             (line 1098)\n* plot3 <1>:                             Three-Dimensional Plots.\n                                                             (line 1099)\n* plot3 <2>:                             Three-Dimensional Plots.\n                                                             (line 1100)\n* plot3 <3>:                             Three-Dimensional Plots.\n                                                             (line 1101)\n* plot3 <4>:                             Three-Dimensional Plots.\n                                                             (line 1102)\n* plot3 <5>:                             Three-Dimensional Plots.\n                                                             (line 1103)\n* plot3 <6>:                             Three-Dimensional Plots.\n                                                             (line 1104)\n* plotmatrix:                            Two-Dimensional Plots.\n                                                             (line  762)\n* plotmatrix <1>:                        Two-Dimensional Plots.\n                                                             (line  763)\n* plotmatrix <2>:                        Two-Dimensional Plots.\n                                                             (line  764)\n* plotmatrix <3>:                        Two-Dimensional Plots.\n                                                             (line  765)\n* plotmatrix <4>:                        Two-Dimensional Plots.\n                                                             (line  766)\n* plotyy:                                Two-Dimensional Plots.\n                                                             (line  189)\n* plotyy <1>:                            Two-Dimensional Plots.\n                                                             (line  190)\n* plotyy <2>:                            Two-Dimensional Plots.\n                                                             (line  191)\n* plotyy <3>:                            Two-Dimensional Plots.\n                                                             (line  192)\n* plotyy <4>:                            Two-Dimensional Plots.\n                                                             (line  193)\n* plus:                                  Arithmetic Ops.     (line  183)\n* plus <1>:                              Arithmetic Ops.     (line  184)\n* poisscdf:                              Distributions.      (line  380)\n* poissinv:                              Distributions.      (line  384)\n* poisspdf:                              Distributions.      (line  376)\n* poissrnd:                              Random Number Generation.\n                                                             (line  312)\n* poissrnd <1>:                          Random Number Generation.\n                                                             (line  313)\n* poissrnd <2>:                          Random Number Generation.\n                                                             (line  314)\n* poissrnd <3>:                          Random Number Generation.\n                                                             (line  315)\n* pol2cart:                              Coordinate Transformations.\n                                                             (line   30)\n* pol2cart <1>:                          Coordinate Transformations.\n                                                             (line   31)\n* pol2cart <2>:                          Coordinate Transformations.\n                                                             (line   32)\n* pol2cart <3>:                          Coordinate Transformations.\n                                                             (line   33)\n* pol2cart <4>:                          Coordinate Transformations.\n                                                             (line   34)\n* polar:                                 Two-Dimensional Plots.\n                                                             (line 1295)\n* polar <1>:                             Two-Dimensional Plots.\n                                                             (line 1296)\n* polar <2>:                             Two-Dimensional Plots.\n                                                             (line 1297)\n* polar <3>:                             Two-Dimensional Plots.\n                                                             (line 1298)\n* polar <4>:                             Two-Dimensional Plots.\n                                                             (line 1299)\n* polar <5>:                             Two-Dimensional Plots.\n                                                             (line 1300)\n* poly:                                  Miscellaneous Functions.\n                                                             (line    6)\n* poly <1>:                              Miscellaneous Functions.\n                                                             (line    7)\n* polyaffine:                            Derivatives / Integrals / Transforms.\n                                                             (line   42)\n* polyarea:                              Voronoi Diagrams.   (line   96)\n* polyarea <1>:                          Voronoi Diagrams.   (line   97)\n* polyder:                               Derivatives / Integrals / Transforms.\n                                                             (line   16)\n* polyder <1>:                           Derivatives / Integrals / Transforms.\n                                                             (line   17)\n* polyder <2>:                           Derivatives / Integrals / Transforms.\n                                                             (line   18)\n* polyeig:                               Finding Roots.      (line   35)\n* polyeig <1>:                           Finding Roots.      (line   36)\n* polyfit:                               Polynomial Interpolation.\n                                                             (line   15)\n* polyfit <1>:                           Polynomial Interpolation.\n                                                             (line   16)\n* polyfit <2>:                           Polynomial Interpolation.\n                                                             (line   17)\n* polygcd:                               Products of Polynomials.\n                                                             (line   86)\n* polygcd <1>:                           Products of Polynomials.\n                                                             (line   87)\n* polyint:                               Derivatives / Integrals / Transforms.\n                                                             (line   32)\n* polyint <1>:                           Derivatives / Integrals / Transforms.\n                                                             (line   33)\n* polyout:                               Miscellaneous Functions.\n                                                             (line   32)\n* polyout <1>:                           Miscellaneous Functions.\n                                                             (line   33)\n* polyout <2>:                           Miscellaneous Functions.\n                                                             (line   34)\n* polyreduce:                            Miscellaneous Functions.\n                                                             (line   49)\n* polyval:                               Evaluating Polynomials.\n                                                             (line   23)\n* polyval <1>:                           Evaluating Polynomials.\n                                                             (line   24)\n* polyval <2>:                           Evaluating Polynomials.\n                                                             (line   25)\n* polyval <3>:                           Evaluating Polynomials.\n                                                             (line   26)\n* polyvalm:                              Evaluating Polynomials.\n                                                             (line   45)\n* popen:                                 Controlling Subprocesses.\n                                                             (line  132)\n* popen2:                                Controlling Subprocesses.\n                                                             (line  169)\n* postpad:                               Rearranging Matrices.\n                                                             (line  556)\n* postpad <1>:                           Rearranging Matrices.\n                                                             (line  557)\n* postpad <2>:                           Rearranging Matrices.\n                                                             (line  558)\n* pow2:                                  Exponents and Logarithms.\n                                                             (line   59)\n* pow2 <1>:                              Exponents and Logarithms.\n                                                             (line   60)\n* power:                                 Arithmetic Ops.     (line  196)\n* powerset:                              Set Operations.     (line  144)\n* powerset <1>:                          Set Operations.     (line  145)\n* ppder:                                 Polynomial Interpolation.\n                                                             (line  395)\n* ppder <1>:                             Polynomial Interpolation.\n                                                             (line  396)\n* ppint:                                 Polynomial Interpolation.\n                                                             (line  405)\n* ppint <1>:                             Polynomial Interpolation.\n                                                             (line  406)\n* ppjumps:                               Polynomial Interpolation.\n                                                             (line  414)\n* ppplot:                                Statistical Plots.  (line   43)\n* ppval:                                 Polynomial Interpolation.\n                                                             (line  384)\n* pqpnonneg:                             Quadratic Programming.\n                                                             (line   77)\n* pqpnonneg <1>:                         Quadratic Programming.\n                                                             (line   78)\n* pqpnonneg <2>:                         Quadratic Programming.\n                                                             (line   79)\n* pqpnonneg <3>:                         Quadratic Programming.\n                                                             (line   80)\n* pqpnonneg <4>:                         Quadratic Programming.\n                                                             (line   81)\n* pqpnonneg <5>:                         Quadratic Programming.\n                                                             (line   82)\n* prctile:                               Descriptive Statistics.\n                                                             (line  396)\n* prctile <1>:                           Descriptive Statistics.\n                                                             (line  397)\n* prctile <2>:                           Descriptive Statistics.\n                                                             (line  398)\n* prefdir:                               User-Defined Preferences.\n                                                             (line  106)\n* prefdir <1>:                           User-Defined Preferences.\n                                                             (line  107)\n* prefdir <2>:                           User-Defined Preferences.\n                                                             (line  108)\n* preferences:                           User-Defined Preferences.\n                                                             (line  128)\n* prepad:                                Rearranging Matrices.\n                                                             (line  536)\n* prepad <1>:                            Rearranging Matrices.\n                                                             (line  537)\n* prepad <2>:                            Rearranging Matrices.\n                                                             (line  538)\n* primes:                                Utility Functions.  (line  502)\n* print:                                 Printing and Saving Plots.\n                                                             (line   48)\n* print <1>:                             Printing and Saving Plots.\n                                                             (line   49)\n* print <2>:                             Printing and Saving Plots.\n                                                             (line   50)\n* print <3>:                             Printing and Saving Plots.\n                                                             (line   51)\n* printd:                                Two-Dimensional Plots.\n                                                             (line  534)\n* printd <1>:                            Two-Dimensional Plots.\n                                                             (line  535)\n* printf:                                Formatted Output.   (line   17)\n* print_empty_dimensions:                Empty Matrices.     (line   29)\n* print_empty_dimensions <1>:            Empty Matrices.     (line   30)\n* print_empty_dimensions <2>:            Empty Matrices.     (line   31)\n* print_struct_array_contents:           Basic Usage and Examples.\n                                                             (line  110)\n* print_struct_array_contents <1>:       Basic Usage and Examples.\n                                                             (line  111)\n* print_struct_array_contents <2>:       Basic Usage and Examples.\n                                                             (line  112)\n* print_usage:                           Raising Errors.     (line  136)\n* print_usage <1>:                       Raising Errors.     (line  137)\n* prism:                                 Representing Images.\n                                                             (line  433)\n* prism <1>:                             Representing Images.\n                                                             (line  434)\n* probit:                                Basic Statistical Functions.\n                                                             (line  182)\n* prod:                                  Sums and Products.  (line   39)\n* prod <1>:                              Sums and Products.  (line   40)\n* prod <2>:                              Sums and Products.  (line   41)\n* prod <3>:                              Sums and Products.  (line   42)\n* profexplore:                           Profiling.          (line  117)\n* profexplore <1>:                       Profiling.          (line  118)\n* profexport:                            Profiling.          (line   98)\n* profexport <1>:                        Profiling.          (line   99)\n* profexport <2>:                        Profiling.          (line  100)\n* profexport <3>:                        Profiling.          (line  101)\n* profile:                               Profiling.          (line   20)\n* profile <1>:                           Profiling.          (line   21)\n* profile <2>:                           Profiling.          (line   22)\n* profile <3>:                           Profiling.          (line   23)\n* profile <4>:                           Profiling.          (line   24)\n* profile <5>:                           Profiling.          (line   25)\n* profshow:                              Profiling.          (line   78)\n* profshow <1>:                          Profiling.          (line   79)\n* profshow <2>:                          Profiling.          (line   80)\n* profshow <3>:                          Profiling.          (line   81)\n* program_invocation_name:               Command Line Options.\n                                                             (line  214)\n* program_name:                          Command Line Options.\n                                                             (line  207)\n* prop_test_2:                           Tests.              (line  306)\n* PS1:                                   Customizing the Prompt.\n                                                             (line   56)\n* PS1 <1>:                               Customizing the Prompt.\n                                                             (line   57)\n* PS1 <2>:                               Customizing the Prompt.\n                                                             (line   58)\n* PS2:                                   Customizing the Prompt.\n                                                             (line   88)\n* PS2 <1>:                               Customizing the Prompt.\n                                                             (line   89)\n* PS2 <2>:                               Customizing the Prompt.\n                                                             (line   90)\n* PS4:                                   Customizing the Prompt.\n                                                             (line  106)\n* PS4 <1>:                               Customizing the Prompt.\n                                                             (line  107)\n* PS4 <2>:                               Customizing the Prompt.\n                                                             (line  108)\n* psi:                                   Special Functions.  (line  486)\n* psi <1>:                               Special Functions.  (line  487)\n* publish:                               Publish Octave Script Files.\n                                                             (line   13)\n* publish <1>:                           Publish Octave Script Files.\n                                                             (line   14)\n* publish <2>:                           Publish Octave Script Files.\n                                                             (line   15)\n* publish <3>:                           Publish Octave Script Files.\n                                                             (line   16)\n* publish <4>:                           Publish Octave Script Files.\n                                                             (line   17)\n* putenv:                                Environment Variables.\n                                                             (line   19)\n* puts:                                  Simple Output.      (line   33)\n* puts <1>:                              Simple Output.      (line   34)\n* pwd:                                   Current Working Directory.\n                                                             (line  117)\n* pwd <1>:                               Current Working Directory.\n                                                             (line  118)\n* python:                                Controlling Subprocesses.\n                                                             (line  120)\n* python <1>:                            Controlling Subprocesses.\n                                                             (line  121)\n* python <2>:                            Controlling Subprocesses.\n                                                             (line  122)\n* P_tmpdir:                              Temporary Files.    (line   79)\n* qmr:                                   Specialized Solvers.\n                                                             (line  192)\n* qmr <1>:                               Specialized Solvers.\n                                                             (line  193)\n* qmr <2>:                               Specialized Solvers.\n                                                             (line  194)\n* qp:                                    Quadratic Programming.\n                                                             (line   16)\n* qp <1>:                                Quadratic Programming.\n                                                             (line   17)\n* qp <2>:                                Quadratic Programming.\n                                                             (line   18)\n* qp <3>:                                Quadratic Programming.\n                                                             (line   19)\n* qp <4>:                                Quadratic Programming.\n                                                             (line   20)\n* qp <5>:                                Quadratic Programming.\n                                                             (line   22)\n* qqplot:                                Statistical Plots.  (line   13)\n* qqplot <1>:                            Statistical Plots.  (line   14)\n* qqplot <2>:                            Statistical Plots.  (line   15)\n* qqplot <3>:                            Statistical Plots.  (line   16)\n* qqplot <4>:                            Statistical Plots.  (line   17)\n* qr:                                    Matrix Factorizations.\n                                                             (line  276)\n* qr <1>:                                Matrix Factorizations.\n                                                             (line  277)\n* qr <2>:                                Matrix Factorizations.\n                                                             (line  278)\n* qr <3>:                                Matrix Factorizations.\n                                                             (line  279)\n* qr <4>:                                Matrix Factorizations.\n                                                             (line  280)\n* qr <5>:                                Matrix Factorizations.\n                                                             (line  281)\n* qr <6>:                                Matrix Factorizations.\n                                                             (line  282)\n* qr <7>:                                Matrix Factorizations.\n                                                             (line  283)\n* qrdelete:                              Matrix Factorizations.\n                                                             (line  411)\n* qrinsert:                              Matrix Factorizations.\n                                                             (line  386)\n* qrshift:                               Matrix Factorizations.\n                                                             (line  435)\n* qrupdate:                              Matrix Factorizations.\n                                                             (line  371)\n* quad:                                  Functions of One Variable.\n                                                             (line   96)\n* quad <1>:                              Functions of One Variable.\n                                                             (line   97)\n* quad <2>:                              Functions of One Variable.\n                                                             (line   98)\n* quad <3>:                              Functions of One Variable.\n                                                             (line   99)\n* quadcc:                                Functions of One Variable.\n                                                             (line  362)\n* quadcc <1>:                            Functions of One Variable.\n                                                             (line  363)\n* quadcc <2>:                            Functions of One Variable.\n                                                             (line  364)\n* quadcc <3>:                            Functions of One Variable.\n                                                             (line  365)\n* quadgk:                                Functions of One Variable.\n                                                             (line  267)\n* quadgk <1>:                            Functions of One Variable.\n                                                             (line  268)\n* quadgk <2>:                            Functions of One Variable.\n                                                             (line  269)\n* quadgk <3>:                            Functions of One Variable.\n                                                             (line  270)\n* quadgk <4>:                            Functions of One Variable.\n                                                             (line  271)\n* quadl:                                 Functions of One Variable.\n                                                             (line  222)\n* quadl <1>:                             Functions of One Variable.\n                                                             (line  223)\n* quadl <2>:                             Functions of One Variable.\n                                                             (line  224)\n* quadl <3>:                             Functions of One Variable.\n                                                             (line  225)\n* quadl <4>:                             Functions of One Variable.\n                                                             (line  226)\n* quadv:                                 Functions of One Variable.\n                                                             (line  176)\n* quadv <1>:                             Functions of One Variable.\n                                                             (line  177)\n* quadv <2>:                             Functions of One Variable.\n                                                             (line  178)\n* quadv <3>:                             Functions of One Variable.\n                                                             (line  179)\n* quadv <4>:                             Functions of One Variable.\n                                                             (line  180)\n* quad_options:                          Functions of One Variable.\n                                                             (line  143)\n* quad_options <1>:                      Functions of One Variable.\n                                                             (line  144)\n* quad_options <2>:                      Functions of One Variable.\n                                                             (line  145)\n* quantile:                              Descriptive Statistics.\n                                                             (line  319)\n* quantile <1>:                          Descriptive Statistics.\n                                                             (line  320)\n* quantile <2>:                          Descriptive Statistics.\n                                                             (line  321)\n* quantile <3>:                          Descriptive Statistics.\n                                                             (line  322)\n* questdlg:                              I/O Dialogs.        (line  326)\n* questdlg <1>:                          I/O Dialogs.        (line  327)\n* questdlg <2>:                          I/O Dialogs.        (line  328)\n* questdlg <3>:                          I/O Dialogs.        (line  329)\n* questdlg <4>:                          I/O Dialogs.        (line  330)\n* quit:                                  Quitting Octave.    (line   16)\n* quit <1>:                              Quitting Octave.    (line   17)\n* quiver:                                Two-Dimensional Plots.\n                                                             (line 1394)\n* quiver <1>:                            Two-Dimensional Plots.\n                                                             (line 1395)\n* quiver <2>:                            Two-Dimensional Plots.\n                                                             (line 1396)\n* quiver <3>:                            Two-Dimensional Plots.\n                                                             (line 1397)\n* quiver <4>:                            Two-Dimensional Plots.\n                                                             (line 1398)\n* quiver <5>:                            Two-Dimensional Plots.\n                                                             (line 1399)\n* quiver <6>:                            Two-Dimensional Plots.\n                                                             (line 1400)\n* quiver3:                               Two-Dimensional Plots.\n                                                             (line 1436)\n* quiver3 <1>:                           Two-Dimensional Plots.\n                                                             (line 1437)\n* quiver3 <2>:                           Two-Dimensional Plots.\n                                                             (line 1438)\n* quiver3 <3>:                           Two-Dimensional Plots.\n                                                             (line 1439)\n* quiver3 <4>:                           Two-Dimensional Plots.\n                                                             (line 1440)\n* quiver3 <5>:                           Two-Dimensional Plots.\n                                                             (line 1441)\n* quiver3 <6>:                           Two-Dimensional Plots.\n                                                             (line 1442)\n* qz:                                    Matrix Factorizations.\n                                                             (line  447)\n* qz <1>:                                Matrix Factorizations.\n                                                             (line  448)\n* qzhess:                                Matrix Factorizations.\n                                                             (line  509)\n* rad2deg:                               Trigonometry.       (line   48)\n* rainbow:                               Representing Images.\n                                                             (line  443)\n* rainbow <1>:                           Representing Images.\n                                                             (line  444)\n* rand:                                  Special Utility Matrices.\n                                                             (line  169)\n* rand <1>:                              Special Utility Matrices.\n                                                             (line  170)\n* rand <2>:                              Special Utility Matrices.\n                                                             (line  171)\n* rand <3>:                              Special Utility Matrices.\n                                                             (line  172)\n* rand <4>:                              Special Utility Matrices.\n                                                             (line  173)\n* rand <5>:                              Special Utility Matrices.\n                                                             (line  174)\n* rand <6>:                              Special Utility Matrices.\n                                                             (line  175)\n* rand <7>:                              Special Utility Matrices.\n                                                             (line  176)\n* rand <8>:                              Special Utility Matrices.\n                                                             (line  177)\n* rand <9>:                              Special Utility Matrices.\n                                                             (line  178)\n* rand <10>:                             Special Utility Matrices.\n                                                             (line  179)\n* rande:                                 Special Utility Matrices.\n                                                             (line  309)\n* rande <1>:                             Special Utility Matrices.\n                                                             (line  310)\n* rande <2>:                             Special Utility Matrices.\n                                                             (line  311)\n* rande <3>:                             Special Utility Matrices.\n                                                             (line  312)\n* rande <4>:                             Special Utility Matrices.\n                                                             (line  313)\n* rande <5>:                             Special Utility Matrices.\n                                                             (line  314)\n* rande <6>:                             Special Utility Matrices.\n                                                             (line  315)\n* rande <7>:                             Special Utility Matrices.\n                                                             (line  316)\n* rande <8>:                             Special Utility Matrices.\n                                                             (line  317)\n* rande <9>:                             Special Utility Matrices.\n                                                             (line  318)\n* rande <10>:                            Special Utility Matrices.\n                                                             (line  319)\n* randg:                                 Special Utility Matrices.\n                                                             (line  385)\n* randg <1>:                             Special Utility Matrices.\n                                                             (line  386)\n* randg <2>:                             Special Utility Matrices.\n                                                             (line  387)\n* randg <3>:                             Special Utility Matrices.\n                                                             (line  388)\n* randg <4>:                             Special Utility Matrices.\n                                                             (line  389)\n* randg <5>:                             Special Utility Matrices.\n                                                             (line  390)\n* randg <6>:                             Special Utility Matrices.\n                                                             (line  391)\n* randg <7>:                             Special Utility Matrices.\n                                                             (line  392)\n* randg <8>:                             Special Utility Matrices.\n                                                             (line  393)\n* randg <9>:                             Special Utility Matrices.\n                                                             (line  394)\n* randg <10>:                            Special Utility Matrices.\n                                                             (line  395)\n* randi:                                 Special Utility Matrices.\n                                                             (line  246)\n* randi <1>:                             Special Utility Matrices.\n                                                             (line  247)\n* randi <2>:                             Special Utility Matrices.\n                                                             (line  248)\n* randi <3>:                             Special Utility Matrices.\n                                                             (line  249)\n* randi <4>:                             Special Utility Matrices.\n                                                             (line  250)\n* randn:                                 Special Utility Matrices.\n                                                             (line  280)\n* randn <1>:                             Special Utility Matrices.\n                                                             (line  281)\n* randn <2>:                             Special Utility Matrices.\n                                                             (line  282)\n* randn <3>:                             Special Utility Matrices.\n                                                             (line  283)\n* randn <4>:                             Special Utility Matrices.\n                                                             (line  284)\n* randn <5>:                             Special Utility Matrices.\n                                                             (line  285)\n* randn <6>:                             Special Utility Matrices.\n                                                             (line  286)\n* randn <7>:                             Special Utility Matrices.\n                                                             (line  287)\n* randn <8>:                             Special Utility Matrices.\n                                                             (line  288)\n* randn <9>:                             Special Utility Matrices.\n                                                             (line  289)\n* randn <10>:                            Special Utility Matrices.\n                                                             (line  290)\n* randp:                                 Special Utility Matrices.\n                                                             (line  338)\n* randp <1>:                             Special Utility Matrices.\n                                                             (line  339)\n* randp <2>:                             Special Utility Matrices.\n                                                             (line  340)\n* randp <3>:                             Special Utility Matrices.\n                                                             (line  341)\n* randp <4>:                             Special Utility Matrices.\n                                                             (line  342)\n* randp <5>:                             Special Utility Matrices.\n                                                             (line  343)\n* randp <6>:                             Special Utility Matrices.\n                                                             (line  344)\n* randp <7>:                             Special Utility Matrices.\n                                                             (line  345)\n* randp <8>:                             Special Utility Matrices.\n                                                             (line  346)\n* randp <9>:                             Special Utility Matrices.\n                                                             (line  347)\n* randp <10>:                            Special Utility Matrices.\n                                                             (line  348)\n* randperm:                              Special Utility Matrices.\n                                                             (line  497)\n* randperm <1>:                          Special Utility Matrices.\n                                                             (line  498)\n* range:                                 Descriptive Statistics.\n                                                             (line   91)\n* range <1>:                             Descriptive Statistics.\n                                                             (line   92)\n* rank:                                  Basic Matrix Functions.\n                                                             (line  463)\n* rank <1>:                              Basic Matrix Functions.\n                                                             (line  464)\n* ranks:                                 Basic Statistical Functions.\n                                                             (line  149)\n* rat:                                   Rational Approximations.\n                                                             (line    6)\n* rat <1>:                               Rational Approximations.\n                                                             (line    7)\n* rats:                                  Rational Approximations.\n                                                             (line   23)\n* rcond:                                 Basic Matrix Functions.\n                                                             (line  496)\n* rdivide:                               Arithmetic Ops.     (line  209)\n* readdir:                               Filesystem Utilities.\n                                                             (line  384)\n* readdir <1>:                           Filesystem Utilities.\n                                                             (line  385)\n* readline_read_init_file:               Customizing readline.\n                                                             (line   15)\n* readline_re_read_init_file:            Customizing readline.\n                                                             (line   26)\n* readlink:                              Filesystem Utilities.\n                                                             (line   93)\n* readlink <1>:                          Filesystem Utilities.\n                                                             (line   94)\n* real:                                  Complex Arithmetic. (line   71)\n* reallog:                               Exponents and Logarithms.\n                                                             (line   26)\n* realmax:                               Mathematical Constants.\n                                                             (line  174)\n* realmax <1>:                           Mathematical Constants.\n                                                             (line  175)\n* realmax <2>:                           Mathematical Constants.\n                                                             (line  176)\n* realmax <3>:                           Mathematical Constants.\n                                                             (line  177)\n* realmax <4>:                           Mathematical Constants.\n                                                             (line  178)\n* realmin:                               Mathematical Constants.\n                                                             (line  204)\n* realmin <1>:                           Mathematical Constants.\n                                                             (line  205)\n* realmin <2>:                           Mathematical Constants.\n                                                             (line  206)\n* realmin <3>:                           Mathematical Constants.\n                                                             (line  207)\n* realmin <4>:                           Mathematical Constants.\n                                                             (line  208)\n* realpow:                               Exponents and Logarithms.\n                                                             (line   77)\n* realsqrt:                              Exponents and Logarithms.\n                                                             (line   95)\n* record:                                Recording.          (line    8)\n* record <1>:                            Recording.          (line    9)\n* record <2>:                            Audio Data Processing.\n                                                             (line   50)\n* record <3>:                            Audio Data Processing.\n                                                             (line   51)\n* recordblocking:                        Recording.          (line   15)\n* rectangle:                             Two-dimensional Geometric Shapes.\n                                                             (line    6)\n* rectangle <1>:                         Two-dimensional Geometric Shapes.\n                                                             (line    7)\n* rectangle <2>:                         Two-dimensional Geometric Shapes.\n                                                             (line    8)\n* rectangle <3>:                         Two-dimensional Geometric Shapes.\n                                                             (line    9)\n* rectangle <4>:                         Two-dimensional Geometric Shapes.\n                                                             (line   10)\n* rectangle <5>:                         Two-dimensional Geometric Shapes.\n                                                             (line   11)\n* rectangle <6>:                         Two-dimensional Geometric Shapes.\n                                                             (line   12)\n* rectint:                               Voronoi Diagrams.   (line  124)\n* recycle:                               Filesystem Utilities.\n                                                             (line  595)\n* recycle <1>:                           Filesystem Utilities.\n                                                             (line  596)\n* reducepatch:                           Three-Dimensional Plots.\n                                                             (line  773)\n* reducepatch <1>:                       Three-Dimensional Plots.\n                                                             (line  774)\n* reducepatch <2>:                       Three-Dimensional Plots.\n                                                             (line  775)\n* reducepatch <3>:                       Three-Dimensional Plots.\n                                                             (line  776)\n* reducepatch <4>:                       Three-Dimensional Plots.\n                                                             (line  777)\n* reducepatch <5>:                       Three-Dimensional Plots.\n                                                             (line  778)\n* reducepatch <6>:                       Three-Dimensional Plots.\n                                                             (line  779)\n* reducepatch <7>:                       Three-Dimensional Plots.\n                                                             (line  780)\n* reducevolume:                          Three-Dimensional Plots.\n                                                             (line  733)\n* reducevolume <1>:                      Three-Dimensional Plots.\n                                                             (line  734)\n* reducevolume <2>:                      Three-Dimensional Plots.\n                                                             (line  735)\n* refresh:                               Manipulation of Plot Windows.\n                                                             (line   30)\n* refresh <1>:                           Manipulation of Plot Windows.\n                                                             (line   31)\n* refreshdata:                           Data Sources in Object Groups.\n                                                             (line   11)\n* refreshdata <1>:                       Data Sources in Object Groups.\n                                                             (line   12)\n* refreshdata <2>:                       Data Sources in Object Groups.\n                                                             (line   13)\n* regexp:                                Manipulating Strings.\n                                                             (line  580)\n* regexp <1>:                            Manipulating Strings.\n                                                             (line  581)\n* regexpi:                               Manipulating Strings.\n                                                             (line  776)\n* regexpi <1>:                           Manipulating Strings.\n                                                             (line  777)\n* regexprep:                             Manipulating Strings.\n                                                             (line  787)\n* regexprep <1>:                         Manipulating Strings.\n                                                             (line  788)\n* regexptranslate:                       Manipulating Strings.\n                                                             (line  818)\n* register_graphics_toolkit:             Graphics Toolkits.  (line   38)\n* rehash:                                Manipulating the Load Path.\n                                                             (line  138)\n* rem:                                   Utility Functions.  (line  445)\n* remove_input_event_hook:               Parser.             (line   34)\n* remove_input_event_hook <1>:           Parser.             (line   35)\n* rename:                                Filesystem Utilities.\n                                                             (line   35)\n* rename <1>:                            Filesystem Utilities.\n                                                             (line   36)\n* rename <2>:                            FTP Objects.        (line  105)\n* repelems:                              Special Utility Matrices.\n                                                             (line  108)\n* repmat:                                Special Utility Matrices.\n                                                             (line   90)\n* repmat <1>:                            Special Utility Matrices.\n                                                             (line   91)\n* repmat <2>:                            Special Utility Matrices.\n                                                             (line   92)\n* repmat <3>:                            Special Utility Matrices.\n                                                             (line   93)\n* repmat <4>:                            Special Utility Matrices.\n                                                             (line   94)\n* reset:                                 Managing Default Properties.\n                                                             (line   59)\n* reshape:                               Rearranging Matrices.\n                                                             (line  211)\n* reshape <1>:                           Rearranging Matrices.\n                                                             (line  212)\n* reshape <2>:                           Rearranging Matrices.\n                                                             (line  213)\n* reshape <3>:                           Rearranging Matrices.\n                                                             (line  214)\n* residue:                               Products of Polynomials.\n                                                             (line  110)\n* residue <1>:                           Products of Polynomials.\n                                                             (line  111)\n* residue <2>:                           Products of Polynomials.\n                                                             (line  112)\n* resize:                                Rearranging Matrices.\n                                                             (line  240)\n* resize <1>:                            Rearranging Matrices.\n                                                             (line  241)\n* resize <2>:                            Rearranging Matrices.\n                                                             (line  242)\n* resize <3>:                            Matrices and Arrays in Oct-Files.\n                                                             (line  103)\n* resize <4>:                            Matrices and Arrays in Oct-Files.\n                                                             (line  104)\n* restoredefaultpath:                    Manipulating the Load Path.\n                                                             (line  160)\n* resume:                                Playback.           (line   32)\n* resume <1>:                            Recording.          (line   23)\n* rethrow:                               Catching Errors.    (line  172)\n* return:                                Returning from a Function.\n                                                             (line   37)\n* rgb2hsv:                               Color Conversion.   (line    9)\n* rgb2hsv <1>:                           Color Conversion.   (line   10)\n* rgb2ind:                               Representing Images.\n                                                             (line  103)\n* rgb2ind <1>:                           Representing Images.\n                                                             (line  104)\n* rgb2ntsc:                              Color Conversion.   (line   56)\n* rgb2ntsc <1>:                          Color Conversion.   (line   57)\n* rgbplot:                               Representing Images.\n                                                             (line  243)\n* rgbplot <1>:                           Representing Images.\n                                                             (line  244)\n* rgbplot <2>:                           Representing Images.\n                                                             (line  245)\n* ribbon:                                Three-Dimensional Plots.\n                                                             (line 1246)\n* ribbon <1>:                            Three-Dimensional Plots.\n                                                             (line 1247)\n* ribbon <2>:                            Three-Dimensional Plots.\n                                                             (line 1248)\n* ribbon <3>:                            Three-Dimensional Plots.\n                                                             (line 1249)\n* ribbon <4>:                            Three-Dimensional Plots.\n                                                             (line 1250)\n* rindex:                                Manipulating Strings.\n                                                             (line  114)\n* rmappdata:                             Application-defined Data.\n                                                             (line   38)\n* rmappdata <1>:                         Application-defined Data.\n                                                             (line   39)\n* rmdir:                                 Filesystem Utilities.\n                                                             (line  123)\n* rmdir <1>:                             Filesystem Utilities.\n                                                             (line  124)\n* rmdir <2>:                             Filesystem Utilities.\n                                                             (line  125)\n* rmdir <3>:                             FTP Objects.        (line  116)\n* rmfield:                               Manipulating Structures.\n                                                             (line  137)\n* rmfield <1>:                           Manipulating Structures.\n                                                             (line  138)\n* rmpath:                                Manipulating the Load Path.\n                                                             (line   51)\n* rmpref:                                User-Defined Preferences.\n                                                             (line   74)\n* rmpref <1>:                            User-Defined Preferences.\n                                                             (line   75)\n* rmpref <2>:                            User-Defined Preferences.\n                                                             (line   76)\n* roots:                                 Finding Roots.      (line   10)\n* rose:                                  Two-Dimensional Plots.\n                                                             (line  846)\n* rose <1>:                              Two-Dimensional Plots.\n                                                             (line  847)\n* rose <2>:                              Two-Dimensional Plots.\n                                                             (line  848)\n* rose <3>:                              Two-Dimensional Plots.\n                                                             (line  849)\n* rose <4>:                              Two-Dimensional Plots.\n                                                             (line  850)\n* rose <5>:                              Two-Dimensional Plots.\n                                                             (line  851)\n* rosser:                                Famous Matrices.    (line  413)\n* rot90:                                 Rearranging Matrices.\n                                                             (line   62)\n* rot90 <1>:                             Rearranging Matrices.\n                                                             (line   63)\n* rotate:                                Manipulation of Plot Objects.\n                                                             (line   27)\n* rotate <1>:                            Manipulation of Plot Objects.\n                                                             (line   28)\n* rotate3d:                              Manipulation of Plot Objects.\n                                                             (line   41)\n* rotate3d <1>:                          Manipulation of Plot Objects.\n                                                             (line   42)\n* rotate3d <2>:                          Manipulation of Plot Objects.\n                                                             (line   43)\n* rotate3d <3>:                          Manipulation of Plot Objects.\n                                                             (line   44)\n* rotdim:                                Rearranging Matrices.\n                                                             (line   92)\n* rotdim <1>:                            Rearranging Matrices.\n                                                             (line   93)\n* rotdim <2>:                            Rearranging Matrices.\n                                                             (line   94)\n* round:                                 Utility Functions.  (line   43)\n* roundb:                                Utility Functions.  (line   56)\n* rows:                                  Object Sizes.       (line   30)\n* rref:                                  Basic Matrix Functions.\n                                                             (line  516)\n* rref <1>:                              Basic Matrix Functions.\n                                                             (line  517)\n* rref <2>:                              Basic Matrix Functions.\n                                                             (line  518)\n* rsf2csf:                               Matrix Factorizations.\n                                                             (line  573)\n* run:                                   Calling a Function by its Name.\n                                                             (line   81)\n* run <1>:                               Calling a Function by its Name.\n                                                             (line   82)\n* rundemos:                              Demonstration Functions.\n                                                             (line   89)\n* rundemos <1>:                          Demonstration Functions.\n                                                             (line   90)\n* runlength:                             Basic Statistical Functions.\n                                                             (line  168)\n* runlength <1>:                         Basic Statistical Functions.\n                                                             (line  169)\n* runtests:                              Demonstration Functions.\n                                                             (line  102)\n* runtests <1>:                          Demonstration Functions.\n                                                             (line  103)\n* run_count:                             Basic Statistical Functions.\n                                                             (line  158)\n* run_count <1>:                         Basic Statistical Functions.\n                                                             (line  159)\n* run_history:                           Commands for History.\n                                                             (line  121)\n* run_history <1>:                       Commands for History.\n                                                             (line  122)\n* run_history <2>:                       Commands for History.\n                                                             (line  123)\n* run_test:                              Tests.              (line  326)\n* save:                                  Simple File I/O.    (line   28)\n* save <1>:                              Simple File I/O.    (line   29)\n* save <2>:                              Simple File I/O.    (line   30)\n* save <3>:                              Simple File I/O.    (line   31)\n* save <4>:                              Simple File I/O.    (line   32)\n* save <5>:                              Simple File I/O.    (line   33)\n* saveas:                                Printing and Saving Plots.\n                                                             (line  332)\n* saveas <1>:                            Printing and Saving Plots.\n                                                             (line  333)\n* saveobj:                               Class Methods.      (line  160)\n* savepath:                              Manipulating the Load Path.\n                                                             (line   68)\n* savepath <1>:                          Manipulating the Load Path.\n                                                             (line   69)\n* savepath <2>:                          Manipulating the Load Path.\n                                                             (line   70)\n* save_default_options:                  Simple File I/O.    (line  153)\n* save_default_options <1>:              Simple File I/O.    (line  154)\n* save_default_options <2>:              Simple File I/O.    (line  155)\n* save_header_format_string:             Simple File I/O.    (line  180)\n* save_header_format_string <1>:         Simple File I/O.    (line  181)\n* save_header_format_string <2>:         Simple File I/O.    (line  182)\n* save_precision:                        Simple File I/O.    (line  169)\n* save_precision <1>:                    Simple File I/O.    (line  170)\n* save_precision <2>:                    Simple File I/O.    (line  171)\n* scanf:                                 Formatted Input.    (line   58)\n* scanf <1>:                             Formatted Input.    (line   59)\n* scatter:                               Two-Dimensional Plots.\n                                                             (line  715)\n* scatter <1>:                           Two-Dimensional Plots.\n                                                             (line  716)\n* scatter <2>:                           Two-Dimensional Plots.\n                                                             (line  717)\n* scatter <3>:                           Two-Dimensional Plots.\n                                                             (line  718)\n* scatter <4>:                           Two-Dimensional Plots.\n                                                             (line  719)\n* scatter <5>:                           Two-Dimensional Plots.\n                                                             (line  720)\n* scatter <6>:                           Two-Dimensional Plots.\n                                                             (line  721)\n* scatter <7>:                           Two-Dimensional Plots.\n                                                             (line  722)\n* scatter3:                              Three-Dimensional Plots.\n                                                             (line 1294)\n* scatter3 <1>:                          Three-Dimensional Plots.\n                                                             (line 1295)\n* scatter3 <2>:                          Three-Dimensional Plots.\n                                                             (line 1296)\n* scatter3 <3>:                          Three-Dimensional Plots.\n                                                             (line 1297)\n* scatter3 <4>:                          Three-Dimensional Plots.\n                                                             (line 1298)\n* scatter3 <5>:                          Three-Dimensional Plots.\n                                                             (line 1299)\n* scatter3 <6>:                          Three-Dimensional Plots.\n                                                             (line 1300)\n* scatter3 <7>:                          Three-Dimensional Plots.\n                                                             (line 1301)\n* schur:                                 Matrix Factorizations.\n                                                             (line  533)\n* schur <1>:                             Matrix Factorizations.\n                                                             (line  534)\n* schur <2>:                             Matrix Factorizations.\n                                                             (line  535)\n* schur <3>:                             Matrix Factorizations.\n                                                             (line  536)\n* schur <4>:                             Matrix Factorizations.\n                                                             (line  537)\n* sec:                                   Trigonometry.       (line   85)\n* secd:                                  Trigonometry.       (line  240)\n* sech:                                  Trigonometry.       (line  151)\n* SEEK_CUR:                              File Positioning.   (line   36)\n* SEEK_END:                              File Positioning.   (line   37)\n* SEEK_SET:                              File Positioning.   (line   35)\n* semilogx:                              Two-Dimensional Plots.\n                                                             (line  229)\n* semilogx <1>:                          Two-Dimensional Plots.\n                                                             (line  230)\n* semilogx <2>:                          Two-Dimensional Plots.\n                                                             (line  231)\n* semilogx <3>:                          Two-Dimensional Plots.\n                                                             (line  232)\n* semilogx <4>:                          Two-Dimensional Plots.\n                                                             (line  233)\n* semilogx <5>:                          Two-Dimensional Plots.\n                                                             (line  234)\n* semilogxerr:                           Two-Dimensional Plots.\n                                                             (line 1196)\n* semilogxerr <1>:                       Two-Dimensional Plots.\n                                                             (line 1197)\n* semilogxerr <2>:                       Two-Dimensional Plots.\n                                                             (line 1198)\n* semilogxerr <3>:                       Two-Dimensional Plots.\n                                                             (line 1199)\n* semilogxerr <4>:                       Two-Dimensional Plots.\n                                                             (line 1200)\n* semilogxerr <5>:                       Two-Dimensional Plots.\n                                                             (line 1201)\n* semilogxerr <6>:                       Two-Dimensional Plots.\n                                                             (line 1202)\n* semilogxerr <7>:                       Two-Dimensional Plots.\n                                                             (line 1203)\n* semilogxerr <8>:                       Two-Dimensional Plots.\n                                                             (line 1204)\n* semilogxerr <9>:                       Two-Dimensional Plots.\n                                                             (line 1205)\n* semilogy:                              Two-Dimensional Plots.\n                                                             (line  249)\n* semilogy <1>:                          Two-Dimensional Plots.\n                                                             (line  250)\n* semilogy <2>:                          Two-Dimensional Plots.\n                                                             (line  251)\n* semilogy <3>:                          Two-Dimensional Plots.\n                                                             (line  252)\n* semilogy <4>:                          Two-Dimensional Plots.\n                                                             (line  253)\n* semilogy <5>:                          Two-Dimensional Plots.\n                                                             (line  254)\n* semilogyerr:                           Two-Dimensional Plots.\n                                                             (line 1225)\n* semilogyerr <1>:                       Two-Dimensional Plots.\n                                                             (line 1226)\n* semilogyerr <2>:                       Two-Dimensional Plots.\n                                                             (line 1227)\n* semilogyerr <3>:                       Two-Dimensional Plots.\n                                                             (line 1228)\n* semilogyerr <4>:                       Two-Dimensional Plots.\n                                                             (line 1229)\n* semilogyerr <5>:                       Two-Dimensional Plots.\n                                                             (line 1230)\n* semilogyerr <6>:                       Two-Dimensional Plots.\n                                                             (line 1231)\n* semilogyerr <7>:                       Two-Dimensional Plots.\n                                                             (line 1232)\n* semilogyerr <8>:                       Two-Dimensional Plots.\n                                                             (line 1233)\n* semilogyerr <9>:                       Two-Dimensional Plots.\n                                                             (line 1234)\n* set:                                   Graphics Objects.   (line  416)\n* set <1>:                               Graphics Objects.   (line  417)\n* set <2>:                               Graphics Objects.   (line  418)\n* set <3>:                               Graphics Objects.   (line  419)\n* set <4>:                               Graphics Objects.   (line  420)\n* set <5>:                               Player Properties.  (line   19)\n* set <6>:                               Player Properties.  (line   20)\n* set <7>:                               Player Properties.  (line   21)\n* set <8>:                               Recorder Properties.\n                                                             (line   19)\n* set <9>:                               Recorder Properties.\n                                                             (line   20)\n* set <10>:                              Recorder Properties.\n                                                             (line   21)\n* setappdata:                            Application-defined Data.\n                                                             (line   10)\n* setappdata <1>:                        Application-defined Data.\n                                                             (line   11)\n* setdiff:                               Set Operations.     (line   65)\n* setdiff <1>:                           Set Operations.     (line   66)\n* setdiff <2>:                           Set Operations.     (line   67)\n* setenv:                                Environment Variables.\n                                                             (line   17)\n* setenv <1>:                            Environment Variables.\n                                                             (line   18)\n* setfield:                              Manipulating Structures.\n                                                             (line   45)\n* setfield <1>:                          Manipulating Structures.\n                                                             (line   46)\n* setgrent:                              Group Database Functions.\n                                                             (line   50)\n* setpref:                               User-Defined Preferences.\n                                                             (line   37)\n* setpref <1>:                           User-Defined Preferences.\n                                                             (line   38)\n* setpwent:                              Password Database Functions.\n                                                             (line   60)\n* setxor:                                Set Operations.     (line   84)\n* setxor <1>:                            Set Operations.     (line   85)\n* setxor <2>:                            Set Operations.     (line   86)\n* shading:                               Three-Dimensional Plots.\n                                                             (line 1270)\n* shading <1>:                           Three-Dimensional Plots.\n                                                             (line 1271)\n* shg:                                   Manipulation of Plot Windows.\n                                                             (line  203)\n* shift:                                 Rearranging Matrices.\n                                                             (line  309)\n* shift <1>:                             Rearranging Matrices.\n                                                             (line  310)\n* shiftdim:                              Rearranging Matrices.\n                                                             (line  319)\n* shiftdim <1>:                          Rearranging Matrices.\n                                                             (line  320)\n* shrinkfaces:                           Three-Dimensional Plots.\n                                                             (line  836)\n* shrinkfaces <1>:                       Three-Dimensional Plots.\n                                                             (line  837)\n* shrinkfaces <2>:                       Three-Dimensional Plots.\n                                                             (line  838)\n* shrinkfaces <3>:                       Three-Dimensional Plots.\n                                                             (line  839)\n* shrinkfaces <4>:                       Three-Dimensional Plots.\n                                                             (line  840)\n* SIG:                                   Controlling Subprocesses.\n                                                             (line  528)\n* sighup_dumps_octave_core:              Saving Data on Unexpected Exits.\n                                                             (line   28)\n* sighup_dumps_octave_core <1>:          Saving Data on Unexpected Exits.\n                                                             (line   29)\n* sighup_dumps_octave_core <2>:          Saving Data on Unexpected Exits.\n                                                             (line   30)\n* sign:                                  Utility Functions.  (line  527)\n* signbit:                               Utility Functions.  (line  544)\n* sign_test:                             Tests.              (line  337)\n* sigterm_dumps_octave_core:             Saving Data on Unexpected Exits.\n                                                             (line   40)\n* sigterm_dumps_octave_core <1>:         Saving Data on Unexpected Exits.\n                                                             (line   41)\n* sigterm_dumps_octave_core <2>:         Saving Data on Unexpected Exits.\n                                                             (line   42)\n* silent_functions:                      Defining Functions. (line  187)\n* silent_functions <1>:                  Defining Functions. (line  188)\n* silent_functions <2>:                  Defining Functions. (line  189)\n* sin:                                   Trigonometry.       (line   67)\n* sinc:                                  Signal Processing.  (line  368)\n* sind:                                  Trigonometry.       (line  218)\n* sinetone:                              Signal Processing.  (line  688)\n* sinewave:                              Signal Processing.  (line  698)\n* single:                                Single Precision Data Types.\n                                                             (line   11)\n* sinh:                                  Trigonometry.       (line  133)\n* size:                                  Object Sizes.       (line   80)\n* size <1>:                              Object Sizes.       (line   81)\n* size <2>:                              Object Sizes.       (line   82)\n* sizemax:                               Matrices.           (line  114)\n* sizeof:                                Object Sizes.       (line  148)\n* size_equal:                            Object Sizes.       (line  153)\n* skewness:                              Descriptive Statistics.\n                                                             (line  210)\n* skewness <1>:                          Descriptive Statistics.\n                                                             (line  211)\n* skewness <2>:                          Descriptive Statistics.\n                                                             (line  212)\n* slice:                                 Three-Dimensional Plots.\n                                                             (line 1188)\n* slice <1>:                             Three-Dimensional Plots.\n                                                             (line 1189)\n* slice <2>:                             Three-Dimensional Plots.\n                                                             (line 1190)\n* slice <3>:                             Three-Dimensional Plots.\n                                                             (line 1191)\n* slice <4>:                             Three-Dimensional Plots.\n                                                             (line 1192)\n* slice <5>:                             Three-Dimensional Plots.\n                                                             (line 1193)\n* slice <6>:                             Three-Dimensional Plots.\n                                                             (line 1194)\n* smooth3:                               Three-Dimensional Plots.\n                                                             (line  695)\n* smooth3 <1>:                           Three-Dimensional Plots.\n                                                             (line  696)\n* smooth3 <2>:                           Three-Dimensional Plots.\n                                                             (line  697)\n* smooth3 <3>:                           Three-Dimensional Plots.\n                                                             (line  698)\n* sombrero:                              Test Plotting Functions.\n                                                             (line   10)\n* sombrero <1>:                          Test Plotting Functions.\n                                                             (line   11)\n* sombrero <2>:                          Test Plotting Functions.\n                                                             (line   12)\n* sombrero <3>:                          Test Plotting Functions.\n                                                             (line   13)\n* sort:                                  Rearranging Matrices.\n                                                             (line  347)\n* sort <1>:                              Rearranging Matrices.\n                                                             (line  348)\n* sort <2>:                              Rearranging Matrices.\n                                                             (line  349)\n* sort <3>:                              Rearranging Matrices.\n                                                             (line  350)\n* sortrows:                              Rearranging Matrices.\n                                                             (line  403)\n* sortrows <1>:                          Rearranging Matrices.\n                                                             (line  404)\n* sound:                                 Audio Data Processing.\n                                                             (line   63)\n* sound <1>:                             Audio Data Processing.\n                                                             (line   64)\n* sound <2>:                             Audio Data Processing.\n                                                             (line   65)\n* soundsc:                               Audio Data Processing.\n                                                             (line   81)\n* soundsc <1>:                           Audio Data Processing.\n                                                             (line   82)\n* soundsc <2>:                           Audio Data Processing.\n                                                             (line   83)\n* soundsc <3>:                           Audio Data Processing.\n                                                             (line   84)\n* source:                                Script Files.       (line   90)\n* source <1>:                            Script Files.       (line   91)\n* spalloc:                               Creating Sparse Matrices.\n                                                             (line  218)\n* sparse:                                Creating Sparse Matrices.\n                                                             (line  251)\n* sparse <1>:                            Creating Sparse Matrices.\n                                                             (line  252)\n* sparse <2>:                            Creating Sparse Matrices.\n                                                             (line  253)\n* sparse <3>:                            Creating Sparse Matrices.\n                                                             (line  254)\n* sparse <4>:                            Creating Sparse Matrices.\n                                                             (line  255)\n* sparse <5>:                            Creating Sparse Matrices.\n                                                             (line  256)\n* sparse_auto_mutate:                    Return Types of Operators and Functions.\n                                                             (line   52)\n* sparse_auto_mutate <1>:                Return Types of Operators and Functions.\n                                                             (line   53)\n* sparse_auto_mutate <2>:                Return Types of Operators and Functions.\n                                                             (line   54)\n* spaugment:                             Sparse Linear Algebra.\n                                                             (line  377)\n* spconvert:                             Creating Sparse Matrices.\n                                                             (line  314)\n* spdiags:                               Creating Sparse Matrices.\n                                                             (line   47)\n* spdiags <1>:                           Creating Sparse Matrices.\n                                                             (line   48)\n* spdiags <2>:                           Creating Sparse Matrices.\n                                                             (line   49)\n* spdiags <3>:                           Creating Sparse Matrices.\n                                                             (line   50)\n* spdiags <4>:                           Creating Sparse Matrices.\n                                                             (line   51)\n* spearman:                              Correlation and Regression Analysis.\n                                                             (line   61)\n* spearman <1>:                          Correlation and Regression Analysis.\n                                                             (line   62)\n* spectral_adf:                          Signal Processing.  (line  706)\n* spectral_adf <1>:                      Signal Processing.  (line  707)\n* spectral_adf <2>:                      Signal Processing.  (line  708)\n* spectral_xdf:                          Signal Processing.  (line  721)\n* spectral_xdf <1>:                      Signal Processing.  (line  722)\n* spectral_xdf <2>:                      Signal Processing.  (line  723)\n* specular:                              Three-Dimensional Plots.\n                                                             (line  890)\n* specular <1>:                          Three-Dimensional Plots.\n                                                             (line  891)\n* speed:                                 Demonstration Functions.\n                                                             (line  115)\n* speed <1>:                             Demonstration Functions.\n                                                             (line  116)\n* spencer:                               Signal Processing.  (line  736)\n* speye:                                 Creating Sparse Matrices.\n                                                             (line   81)\n* speye <1>:                             Creating Sparse Matrices.\n                                                             (line   82)\n* speye <2>:                             Creating Sparse Matrices.\n                                                             (line   83)\n* spfun:                                 Function Application.\n                                                             (line  105)\n* sph2cart:                              Coordinate Transformations.\n                                                             (line   74)\n* sph2cart <1>:                          Coordinate Transformations.\n                                                             (line   75)\n* sph2cart <2>:                          Coordinate Transformations.\n                                                             (line   76)\n* sphere:                                Three-dimensional Geometric Shapes.\n                                                             (line   36)\n* sphere <1>:                            Three-dimensional Geometric Shapes.\n                                                             (line   37)\n* sphere <2>:                            Three-dimensional Geometric Shapes.\n                                                             (line   38)\n* sphere <3>:                            Three-dimensional Geometric Shapes.\n                                                             (line   39)\n* spinmap:                               Representing Images.\n                                                             (line  535)\n* spinmap <1>:                           Representing Images.\n                                                             (line  536)\n* spinmap <2>:                           Representing Images.\n                                                             (line  537)\n* spinmap <3>:                           Representing Images.\n                                                             (line  538)\n* spline:                                One-dimensional Interpolation.\n                                                             (line  165)\n* spline <1>:                            One-dimensional Interpolation.\n                                                             (line  166)\n* splinefit:                             Polynomial Interpolation.\n                                                             (line   74)\n* splinefit <1>:                         Polynomial Interpolation.\n                                                             (line   75)\n* splinefit <2>:                         Polynomial Interpolation.\n                                                             (line   76)\n* splinefit <3>:                         Polynomial Interpolation.\n                                                             (line   77)\n* splinefit <4>:                         Polynomial Interpolation.\n                                                             (line   78)\n* splinefit <5>:                         Polynomial Interpolation.\n                                                             (line   79)\n* splinefit <6>:                         Polynomial Interpolation.\n                                                             (line   80)\n* split_long_rows:                       Matrices.           (line  166)\n* split_long_rows <1>:                   Matrices.           (line  167)\n* split_long_rows <2>:                   Matrices.           (line  168)\n* spones:                                Creating Sparse Matrices.\n                                                             (line   96)\n* spparms:                               Sparse Linear Algebra.\n                                                             (line  233)\n* spparms <1>:                           Sparse Linear Algebra.\n                                                             (line  234)\n* spparms <2>:                           Sparse Linear Algebra.\n                                                             (line  235)\n* spparms <3>:                           Sparse Linear Algebra.\n                                                             (line  236)\n* spparms <4>:                           Sparse Linear Algebra.\n                                                             (line  237)\n* spparms <5>:                           Sparse Linear Algebra.\n                                                             (line  238)\n* spparms <6>:                           Sparse Linear Algebra.\n                                                             (line  239)\n* spparms <7>:                           Sparse Linear Algebra.\n                                                             (line  240)\n* sprand:                                Creating Sparse Matrices.\n                                                             (line  105)\n* sprand <1>:                            Creating Sparse Matrices.\n                                                             (line  106)\n* sprand <2>:                            Creating Sparse Matrices.\n                                                             (line  107)\n* sprandn:                               Creating Sparse Matrices.\n                                                             (line  125)\n* sprandn <1>:                           Creating Sparse Matrices.\n                                                             (line  126)\n* sprandn <2>:                           Creating Sparse Matrices.\n                                                             (line  127)\n* sprandsym:                             Creating Sparse Matrices.\n                                                             (line  145)\n* sprandsym <1>:                         Creating Sparse Matrices.\n                                                             (line  146)\n* sprank:                                Sparse Linear Algebra.\n                                                             (line  305)\n* spring:                                Representing Images.\n                                                             (line  453)\n* spring <1>:                            Representing Images.\n                                                             (line  454)\n* sprintf:                               Formatted Output.   (line   54)\n* spstats:                               Information.        (line   48)\n* spstats <1>:                           Information.        (line   49)\n* spy:                                   Information.        (line  124)\n* spy <1>:                               Information.        (line  125)\n* spy <2>:                               Information.        (line  126)\n* sqp:                                   Nonlinear Programming.\n                                                             (line    9)\n* sqp <1>:                               Nonlinear Programming.\n                                                             (line   10)\n* sqp <2>:                               Nonlinear Programming.\n                                                             (line   11)\n* sqp <3>:                               Nonlinear Programming.\n                                                             (line   12)\n* sqp <4>:                               Nonlinear Programming.\n                                                             (line   13)\n* sqp <5>:                               Nonlinear Programming.\n                                                             (line   14)\n* sqrt:                                  Exponents and Logarithms.\n                                                             (line   86)\n* sqrtm:                                 Functions of a Matrix.\n                                                             (line   47)\n* sqrtm <1>:                             Functions of a Matrix.\n                                                             (line   48)\n* squeeze:                               Object Sizes.       (line  162)\n* sscanf:                                Formatted Input.    (line   67)\n* sscanf <1>:                            Formatted Input.    (line   68)\n* stairs:                                Two-Dimensional Plots.\n                                                             (line  548)\n* stairs <1>:                            Two-Dimensional Plots.\n                                                             (line  549)\n* stairs <2>:                            Two-Dimensional Plots.\n                                                             (line  550)\n* stairs <3>:                            Two-Dimensional Plots.\n                                                             (line  551)\n* stairs <4>:                            Two-Dimensional Plots.\n                                                             (line  552)\n* stairs <5>:                            Two-Dimensional Plots.\n                                                             (line  553)\n* stairs <6>:                            Two-Dimensional Plots.\n                                                             (line  554)\n* stat:                                  Filesystem Utilities.\n                                                             (line  183)\n* stat <1>:                              Filesystem Utilities.\n                                                             (line  184)\n* statistics:                            Descriptive Statistics.\n                                                             (line  419)\n* statistics <1>:                        Descriptive Statistics.\n                                                             (line  420)\n* std:                                   Descriptive Statistics.\n                                                             (line  141)\n* std <1>:                               Descriptive Statistics.\n                                                             (line  142)\n* std <2>:                               Descriptive Statistics.\n                                                             (line  143)\n* stderr:                                C-Style I/O Functions.\n                                                             (line   37)\n* stdin:                                 C-Style I/O Functions.\n                                                             (line   19)\n* stdnormal_cdf:                         Distributions.      (line  393)\n* stdnormal_inv:                         Distributions.      (line  398)\n* stdnormal_pdf:                         Distributions.      (line  388)\n* stdnormal_rnd:                         Random Number Generation.\n                                                             (line  329)\n* stdnormal_rnd <1>:                     Random Number Generation.\n                                                             (line  330)\n* stdnormal_rnd <2>:                     Random Number Generation.\n                                                             (line  331)\n* stdout:                                C-Style I/O Functions.\n                                                             (line   28)\n* stem:                                  Two-Dimensional Plots.\n                                                             (line  586)\n* stem <1>:                              Two-Dimensional Plots.\n                                                             (line  587)\n* stem <2>:                              Two-Dimensional Plots.\n                                                             (line  588)\n* stem <3>:                              Two-Dimensional Plots.\n                                                             (line  589)\n* stem <4>:                              Two-Dimensional Plots.\n                                                             (line  590)\n* stem <5>:                              Two-Dimensional Plots.\n                                                             (line  591)\n* stem <6>:                              Two-Dimensional Plots.\n                                                             (line  592)\n* stem3:                                 Two-Dimensional Plots.\n                                                             (line  675)\n* stem3 <1>:                             Two-Dimensional Plots.\n                                                             (line  676)\n* stem3 <2>:                             Two-Dimensional Plots.\n                                                             (line  677)\n* stem3 <3>:                             Two-Dimensional Plots.\n                                                             (line  678)\n* stem3 <4>:                             Two-Dimensional Plots.\n                                                             (line  679)\n* stem3 <5>:                             Two-Dimensional Plots.\n                                                             (line  680)\n* stemleaf:                              Two-Dimensional Plots.\n                                                             (line  480)\n* stemleaf <1>:                          Two-Dimensional Plots.\n                                                             (line  481)\n* stemleaf <2>:                          Two-Dimensional Plots.\n                                                             (line  482)\n* stft:                                  Signal Processing.  (line  739)\n* stft <1>:                              Signal Processing.  (line  740)\n* stft <2>:                              Signal Processing.  (line  741)\n* stft <3>:                              Signal Processing.  (line  742)\n* stft <4>:                              Signal Processing.  (line  743)\n* stft <5>:                              Signal Processing.  (line  744)\n* stop:                                  Playback.           (line   35)\n* stop <1>:                              Recording.          (line   26)\n* str2double:                            String Conversions. (line  193)\n* str2func:                              Function Handles.   (line   91)\n* str2func <1>:                          Function Handles.   (line   92)\n* str2num:                               String Conversions. (line  258)\n* str2num <1>:                           String Conversions. (line  259)\n* strcat:                                Concatenating Strings.\n                                                             (line  154)\n* strchr:                                Manipulating Strings.\n                                                             (line   83)\n* strchr <1>:                            Manipulating Strings.\n                                                             (line   84)\n* strchr <2>:                            Manipulating Strings.\n                                                             (line   85)\n* strchr <3>:                            Manipulating Strings.\n                                                             (line   86)\n* strcmp:                                Comparing Strings.  (line   20)\n* strcmpi:                               Comparing Strings.  (line   60)\n* strfind:                               Manipulating Strings.\n                                                             (line  130)\n* strfind <1>:                           Manipulating Strings.\n                                                             (line  131)\n* strfind <2>:                           Manipulating Strings.\n                                                             (line  132)\n* strftime:                              Timing Utilities.   (line  179)\n* string_fill_char:                      Character Arrays.   (line   51)\n* string_fill_char <1>:                  Character Arrays.   (line   52)\n* string_fill_char <2>:                  Character Arrays.   (line   53)\n* strjoin:                               Manipulating Strings.\n                                                             (line  169)\n* strjoin <1>:                           Manipulating Strings.\n                                                             (line  170)\n* strjust:                               String Conversions. (line  236)\n* strjust <1>:                           String Conversions. (line  237)\n* strmatch:                              Manipulating Strings.\n                                                             (line  189)\n* strmatch <1>:                          Manipulating Strings.\n                                                             (line  190)\n* strncmp:                               Comparing Strings.  (line   37)\n* strncmpi:                              Comparing Strings.  (line   79)\n* strptime:                              Timing Utilities.   (line  326)\n* strread:                               Manipulating Strings.\n                                                             (line  386)\n* strread <1>:                           Manipulating Strings.\n                                                             (line  387)\n* strread <2>:                           Manipulating Strings.\n                                                             (line  388)\n* strread <3>:                           Manipulating Strings.\n                                                             (line  389)\n* strread <4>:                           Manipulating Strings.\n                                                             (line  390)\n* strrep:                                Manipulating Strings.\n                                                             (line  536)\n* strrep <1>:                            Manipulating Strings.\n                                                             (line  537)\n* strrep <2>:                            Manipulating Strings.\n                                                             (line  538)\n* strsplit:                              Manipulating Strings.\n                                                             (line  249)\n* strsplit <1>:                          Manipulating Strings.\n                                                             (line  250)\n* strsplit <2>:                          Manipulating Strings.\n                                                             (line  251)\n* strsplit <3>:                          Manipulating Strings.\n                                                             (line  252)\n* strtok:                                Manipulating Strings.\n                                                             (line  220)\n* strtok <1>:                            Manipulating Strings.\n                                                             (line  221)\n* strtrim:                               Manipulating Strings.\n                                                             (line   37)\n* strtrunc:                              Manipulating Strings.\n                                                             (line   54)\n* struct:                                Creating Structures.\n                                                             (line  104)\n* struct <1>:                            Creating Structures.\n                                                             (line  105)\n* struct <2>:                            Creating Structures.\n                                                             (line  106)\n* struct2cell:                           Processing Data in Structures.\n                                                             (line   14)\n* struct2hdl:                            Graphics Objects.   (line  534)\n* struct2hdl <1>:                        Graphics Objects.   (line  535)\n* struct2hdl <2>:                        Graphics Objects.   (line  536)\n* structfun:                             Function Application.\n                                                             (line  229)\n* structfun <1>:                         Function Application.\n                                                             (line  230)\n* structfun <2>:                         Function Application.\n                                                             (line  231)\n* structfun <3>:                         Function Application.\n                                                             (line  232)\n* struct_levels_to_print:                Basic Usage and Examples.\n                                                             (line   96)\n* struct_levels_to_print <1>:            Basic Usage and Examples.\n                                                             (line   97)\n* struct_levels_to_print <2>:            Basic Usage and Examples.\n                                                             (line   98)\n* strvcat:                               Concatenating Strings.\n                                                             (line  123)\n* strvcat <1>:                           Concatenating Strings.\n                                                             (line  124)\n* strvcat <2>:                           Concatenating Strings.\n                                                             (line  125)\n* strvcat <3>:                           Concatenating Strings.\n                                                             (line  126)\n* sub2ind:                               Advanced Indexing.  (line  132)\n* sub2ind <1>:                           Advanced Indexing.  (line  133)\n* subplot:                               Multiple Plots on One Page.\n                                                             (line   24)\n* subplot <1>:                           Multiple Plots on One Page.\n                                                             (line   25)\n* subplot <2>:                           Multiple Plots on One Page.\n                                                             (line   26)\n* subplot <3>:                           Multiple Plots on One Page.\n                                                             (line   27)\n* subplot <4>:                           Multiple Plots on One Page.\n                                                             (line   28)\n* subplot <5>:                           Multiple Plots on One Page.\n                                                             (line   29)\n* subplot <6>:                           Multiple Plots on One Page.\n                                                             (line   30)\n* subplot <7>:                           Multiple Plots on One Page.\n                                                             (line   31)\n* subsasgn:                              Defining Indexing And Indexed Assignment.\n                                                             (line   97)\n* subsindex:                             Defining Indexing And Indexed Assignment.\n                                                             (line  171)\n* subspace:                              Matrix Factorizations.\n                                                             (line  619)\n* subsref:                               Defining Indexing And Indexed Assignment.\n                                                             (line   14)\n* substr:                                Manipulating Strings.\n                                                             (line  557)\n* substr <1>:                            Manipulating Strings.\n                                                             (line  558)\n* substruct:                             Manipulating Structures.\n                                                             (line  216)\n* sum:                                   Sums and Products.  (line    6)\n* sum <1>:                               Sums and Products.  (line    7)\n* sum <2>:                               Sums and Products.  (line    8)\n* sum <3>:                               Sums and Products.  (line    9)\n* sum <4>:                               Sums and Products.  (line   10)\n* summer:                                Representing Images.\n                                                             (line  463)\n* summer <1>:                            Representing Images.\n                                                             (line  464)\n* sumsq:                                 Sums and Products.  (line   99)\n* sumsq <1>:                             Sums and Products.  (line  100)\n* superiorto:                            Precedence of Objects.\n                                                             (line   13)\n* suppress_verbose_help_message:         Getting Help.       (line  243)\n* suppress_verbose_help_message <1>:     Getting Help.       (line  244)\n* suppress_verbose_help_message <2>:     Getting Help.       (line  245)\n* surf:                                  Three-Dimensional Plots.\n                                                             (line  194)\n* surf <1>:                              Three-Dimensional Plots.\n                                                             (line  195)\n* surf <2>:                              Three-Dimensional Plots.\n                                                             (line  196)\n* surf <3>:                              Three-Dimensional Plots.\n                                                             (line  197)\n* surf <4>:                              Three-Dimensional Plots.\n                                                             (line  198)\n* surf <5>:                              Three-Dimensional Plots.\n                                                             (line  199)\n* surface:                               Graphics Objects.   (line  157)\n* surface <1>:                           Graphics Objects.   (line  158)\n* surface <2>:                           Graphics Objects.   (line  159)\n* surface <3>:                           Graphics Objects.   (line  160)\n* surface <4>:                           Graphics Objects.   (line  161)\n* surface <5>:                           Graphics Objects.   (line  162)\n* surface <6>:                           Graphics Objects.   (line  163)\n* surfc:                                 Three-Dimensional Plots.\n                                                             (line  237)\n* surfc <1>:                             Three-Dimensional Plots.\n                                                             (line  238)\n* surfc <2>:                             Three-Dimensional Plots.\n                                                             (line  239)\n* surfc <3>:                             Three-Dimensional Plots.\n                                                             (line  240)\n* surfc <4>:                             Three-Dimensional Plots.\n                                                             (line  241)\n* surfc <5>:                             Three-Dimensional Plots.\n                                                             (line  242)\n* surfl:                                 Three-Dimensional Plots.\n                                                             (line  280)\n* surfl <1>:                             Three-Dimensional Plots.\n                                                             (line  281)\n* surfl <2>:                             Three-Dimensional Plots.\n                                                             (line  282)\n* surfl <3>:                             Three-Dimensional Plots.\n                                                             (line  283)\n* surfl <4>:                             Three-Dimensional Plots.\n                                                             (line  284)\n* surfl <5>:                             Three-Dimensional Plots.\n                                                             (line  285)\n* surfl <6>:                             Three-Dimensional Plots.\n                                                             (line  286)\n* surfl <7>:                             Three-Dimensional Plots.\n                                                             (line  287)\n* surfnorm:                              Three-Dimensional Plots.\n                                                             (line  336)\n* surfnorm <1>:                          Three-Dimensional Plots.\n                                                             (line  337)\n* surfnorm <2>:                          Three-Dimensional Plots.\n                                                             (line  338)\n* surfnorm <3>:                          Three-Dimensional Plots.\n                                                             (line  339)\n* surfnorm <4>:                          Three-Dimensional Plots.\n                                                             (line  340)\n* svd:                                   Matrix Factorizations.\n                                                             (line  623)\n* svd <1>:                               Matrix Factorizations.\n                                                             (line  624)\n* svd <2>:                               Matrix Factorizations.\n                                                             (line  625)\n* svds:                                  Sparse Linear Algebra.\n                                                             (line  578)\n* svds <1>:                              Sparse Linear Algebra.\n                                                             (line  579)\n* svds <2>:                              Sparse Linear Algebra.\n                                                             (line  580)\n* svds <3>:                              Sparse Linear Algebra.\n                                                             (line  581)\n* svds <4>:                              Sparse Linear Algebra.\n                                                             (line  582)\n* svds <5>:                              Sparse Linear Algebra.\n                                                             (line  583)\n* svd_driver:                            Matrix Factorizations.\n                                                             (line  676)\n* svd_driver <1>:                        Matrix Factorizations.\n                                                             (line  677)\n* svd_driver <2>:                        Matrix Factorizations.\n                                                             (line  678)\n* swapbytes:                             Built-in Data Types.\n                                                             (line  141)\n* sylvester:                             Functions of a Matrix.\n                                                             (line   91)\n* symamd:                                Mathematical Considerations.\n                                                             (line  387)\n* symamd <1>:                            Mathematical Considerations.\n                                                             (line  388)\n* symamd <2>:                            Mathematical Considerations.\n                                                             (line  389)\n* symamd <3>:                            Mathematical Considerations.\n                                                             (line  390)\n* symbfact:                              Sparse Linear Algebra.\n                                                             (line  317)\n* symbfact <1>:                          Sparse Linear Algebra.\n                                                             (line  318)\n* symbfact <2>:                          Sparse Linear Algebra.\n                                                             (line  319)\n* symlink:                               Filesystem Utilities.\n                                                             (line   83)\n* symlink <1>:                           Filesystem Utilities.\n                                                             (line   84)\n* symrcm:                                Mathematical Considerations.\n                                                             (line  451)\n* symvar:                                Inline Functions.   (line   62)\n* synthesis:                             Signal Processing.  (line  776)\n* system:                                Controlling Subprocesses.\n                                                             (line   16)\n* system <1>:                            Controlling Subprocesses.\n                                                             (line   17)\n* system <2>:                            Controlling Subprocesses.\n                                                             (line   18)\n* system <3>:                            Controlling Subprocesses.\n                                                             (line   19)\n* S_ISBLK:                               Filesystem Utilities.\n                                                             (line  273)\n* S_ISCHR:                               Filesystem Utilities.\n                                                             (line  280)\n* S_ISDIR:                               Filesystem Utilities.\n                                                             (line  287)\n* S_ISFIFO:                              Filesystem Utilities.\n                                                             (line  294)\n* S_ISLNK:                               Filesystem Utilities.\n                                                             (line  301)\n* S_ISREG:                               Filesystem Utilities.\n                                                             (line  308)\n* S_ISSOCK:                              Filesystem Utilities.\n                                                             (line  315)\n* table:                                 Basic Statistical Functions.\n                                                             (line  205)\n* table <1>:                             Basic Statistical Functions.\n                                                             (line  206)\n* tan:                                   Trigonometry.       (line   79)\n* tand:                                  Trigonometry.       (line  232)\n* tanh:                                  Trigonometry.       (line  145)\n* tar:                                   File Archiving Utilities.\n                                                             (line   59)\n* tar <1>:                               File Archiving Utilities.\n                                                             (line   60)\n* tcdf:                                  Distributions.      (line  408)\n* tempdir:                               Temporary Files.    (line   68)\n* tempname:                              Temporary Files.    (line   49)\n* tempname <1>:                          Temporary Files.    (line   50)\n* tempname <2>:                          Temporary Files.    (line   51)\n* terminal_size:                         Terminal Output.    (line   67)\n* test:                                  Test Functions.     (line    6)\n* test <1>:                              Test Functions.     (line    7)\n* test <2>:                              Test Functions.     (line    8)\n* test <3>:                              Test Functions.     (line    9)\n* test <4>:                              Test Functions.     (line   10)\n* test <5>:                              Test Functions.     (line   11)\n* test <6>:                              Test Functions.     (line   12)\n* test <7>:                              Test Functions.     (line   13)\n* test <8>:                              Test Functions.     (line   14)\n* tetramesh:                             Plotting the Triangulation.\n                                                             (line  100)\n* tetramesh <1>:                         Plotting the Triangulation.\n                                                             (line  101)\n* tetramesh <2>:                         Plotting the Triangulation.\n                                                             (line  102)\n* tetramesh <3>:                         Plotting the Triangulation.\n                                                             (line  103)\n* texi_macros_file:                      Getting Help.       (line  176)\n* texi_macros_file <1>:                  Getting Help.       (line  177)\n* texi_macros_file <2>:                  Getting Help.       (line  178)\n* text:                                  Plot Annotations.   (line  138)\n* text <1>:                              Plot Annotations.   (line  139)\n* text <2>:                              Plot Annotations.   (line  140)\n* text <3>:                              Plot Annotations.   (line  141)\n* textread:                              Simple File I/O.    (line  458)\n* textread <1>:                          Simple File I/O.    (line  459)\n* textread <2>:                          Simple File I/O.    (line  460)\n* textread <3>:                          Simple File I/O.    (line  461)\n* textread <4>:                          Simple File I/O.    (line  462)\n* textscan:                              Simple File I/O.    (line  532)\n* textscan <1>:                          Simple File I/O.    (line  533)\n* textscan <2>:                          Simple File I/O.    (line  534)\n* textscan <3>:                          Simple File I/O.    (line  535)\n* textscan <4>:                          Simple File I/O.    (line  536)\n* textscan <5>:                          Simple File I/O.    (line  537)\n* tic:                                   Timing Utilities.   (line  426)\n* tic <1>:                               Timing Utilities.   (line  427)\n* tilde_expand:                          Filesystem Utilities.\n                                                             (line  539)\n* tilde_expand <1>:                      Filesystem Utilities.\n                                                             (line  540)\n* time:                                  Timing Utilities.   (line   51)\n* times:                                 Arithmetic Ops.     (line  217)\n* times <1>:                             Arithmetic Ops.     (line  218)\n* tinv:                                  Distributions.      (line  413)\n* title:                                 Plot Annotations.   (line   25)\n* title <1>:                             Plot Annotations.   (line   26)\n* title <2>:                             Plot Annotations.   (line   27)\n* title <3>:                             Plot Annotations.   (line   28)\n* tmpfile:                               Temporary Files.    (line   35)\n* toascii:                               String Conversions. (line  284)\n* toc:                                   Timing Utilities.   (line  428)\n* toc <1>:                               Timing Utilities.   (line  429)\n* toc <2>:                               Timing Utilities.   (line  430)\n* toeplitz:                              Famous Matrices.    (line  421)\n* toeplitz <1>:                          Famous Matrices.    (line  422)\n* tolower:                               String Conversions. (line  295)\n* toupper:                               String Conversions. (line  308)\n* tpdf:                                  Distributions.      (line  403)\n* trace:                                 Basic Matrix Functions.\n                                                             (line  508)\n* transpose:                             Arithmetic Ops.     (line  231)\n* trapz:                                 Functions of One Variable.\n                                                             (line  466)\n* trapz <1>:                             Functions of One Variable.\n                                                             (line  467)\n* trapz <2>:                             Functions of One Variable.\n                                                             (line  468)\n* treelayout:                            Information.        (line  192)\n* treelayout <1>:                        Information.        (line  193)\n* treeplot:                              Information.        (line  178)\n* treeplot <1>:                          Information.        (line  179)\n* tril:                                  Rearranging Matrices.\n                                                             (line  468)\n* tril <1>:                              Rearranging Matrices.\n                                                             (line  469)\n* tril <2>:                              Rearranging Matrices.\n                                                             (line  470)\n* trimesh:                               Plotting the Triangulation.\n                                                             (line   29)\n* trimesh <1>:                           Plotting the Triangulation.\n                                                             (line   30)\n* trimesh <2>:                           Plotting the Triangulation.\n                                                             (line   31)\n* trimesh <3>:                           Plotting the Triangulation.\n                                                             (line   32)\n* trimesh <4>:                           Plotting the Triangulation.\n                                                             (line   33)\n* triplequad:                            Functions of Multiple Variables.\n                                                             (line   73)\n* triplequad <1>:                        Functions of Multiple Variables.\n                                                             (line   74)\n* triplequad <2>:                        Functions of Multiple Variables.\n                                                             (line   75)\n* triplequad <3>:                        Functions of Multiple Variables.\n                                                             (line   76)\n* triplot:                               Plotting the Triangulation.\n                                                             (line   10)\n* triplot <1>:                           Plotting the Triangulation.\n                                                             (line   11)\n* triplot <2>:                           Plotting the Triangulation.\n                                                             (line   12)\n* trisurf:                               Plotting the Triangulation.\n                                                             (line   66)\n* trisurf <1>:                           Plotting the Triangulation.\n                                                             (line   67)\n* trisurf <2>:                           Plotting the Triangulation.\n                                                             (line   68)\n* trisurf <3>:                           Plotting the Triangulation.\n                                                             (line   69)\n* triu:                                  Rearranging Matrices.\n                                                             (line  471)\n* triu <1>:                              Rearranging Matrices.\n                                                             (line  472)\n* triu <2>:                              Rearranging Matrices.\n                                                             (line  473)\n* trnd:                                  Random Number Generation.\n                                                             (line  342)\n* trnd <1>:                              Random Number Generation.\n                                                             (line  343)\n* trnd <2>:                              Random Number Generation.\n                                                             (line  344)\n* trnd <3>:                              Random Number Generation.\n                                                             (line  345)\n* true:                                  Logical Values.     (line   49)\n* true <1>:                              Logical Values.     (line   50)\n* true <2>:                              Logical Values.     (line   51)\n* tsearch:                               Identifying Points in Triangulation.\n                                                             (line   55)\n* tsearchn:                              Identifying Points in Triangulation.\n                                                             (line   64)\n* tsearchn <1>:                          Identifying Points in Triangulation.\n                                                             (line   65)\n* type:                                  Status of Variables.\n                                                             (line  345)\n* type <1>:                              Status of Variables.\n                                                             (line  346)\n* type <2>:                              Status of Variables.\n                                                             (line  347)\n* typecast:                              Built-in Data Types.\n                                                             (line   95)\n* typeinfo:                              Data Types.         (line   18)\n* typeinfo <1>:                          Data Types.         (line   19)\n* t_test:                                Tests.              (line  357)\n* t_test_2:                              Tests.              (line  376)\n* t_test_regression:                     Tests.              (line  396)\n* uibuttongroup:                         UI Elements.        (line   66)\n* uibuttongroup <1>:                     UI Elements.        (line   67)\n* uibuttongroup <2>:                     UI Elements.        (line   68)\n* uicontextmenu:                         UI Elements.        (line  106)\n* uicontextmenu <1>:                     UI Elements.        (line  107)\n* uicontrol:                             UI Elements.        (line  137)\n* uicontrol <1>:                         UI Elements.        (line  138)\n* uicontrol <2>:                         UI Elements.        (line  139)\n* uigetdir:                              I/O Dialogs.        (line   10)\n* uigetdir <1>:                          I/O Dialogs.        (line   11)\n* uigetdir <2>:                          I/O Dialogs.        (line   12)\n* uigetfile:                             I/O Dialogs.        (line   22)\n* uigetfile <1>:                         I/O Dialogs.        (line   23)\n* uigetfile <2>:                         I/O Dialogs.        (line   24)\n* uigetfile <3>:                         I/O Dialogs.        (line   25)\n* uigetfile <4>:                         I/O Dialogs.        (line   26)\n* uigetfile <5>:                         I/O Dialogs.        (line   27)\n* uimenu:                                UI Elements.        (line   10)\n* uimenu <1>:                            UI Elements.        (line   11)\n* uint16:                                Integer Data Types. (line   59)\n* uint32:                                Integer Data Types. (line   73)\n* uint64:                                Integer Data Types. (line   87)\n* uint8:                                 Integer Data Types. (line   45)\n* uipanel:                               UI Elements.        (line  211)\n* uipanel <1>:                           UI Elements.        (line  212)\n* uipushtool:                            UI Elements.        (line  241)\n* uipushtool <1>:                        UI Elements.        (line  242)\n* uiputfile:                             I/O Dialogs.        (line   79)\n* uiputfile <1>:                         I/O Dialogs.        (line   80)\n* uiputfile <2>:                         I/O Dialogs.        (line   81)\n* uiputfile <3>:                         I/O Dialogs.        (line   82)\n* uiresume:                              GUI Utility Functions.\n                                                             (line   78)\n* uitoggletool:                          UI Elements.        (line  278)\n* uitoggletool <1>:                      UI Elements.        (line  279)\n* uitoolbar:                             UI Elements.        (line  316)\n* uitoolbar <1>:                         UI Elements.        (line  317)\n* uiwait:                                GUI Utility Functions.\n                                                             (line   59)\n* uiwait <1>:                            GUI Utility Functions.\n                                                             (line   60)\n* uiwait <2>:                            GUI Utility Functions.\n                                                             (line   61)\n* umask:                                 Filesystem Utilities.\n                                                             (line  165)\n* uminus:                                Arithmetic Ops.     (line  238)\n* uname:                                 System Information. (line   37)\n* undo_string_escapes:                   String Conversions. (line  330)\n* unidcdf:                               Distributions.      (line  430)\n* unidinv:                               Distributions.      (line  435)\n* unidpdf:                               Distributions.      (line  421)\n* unidrnd:                               Random Number Generation.\n                                                             (line  359)\n* unidrnd <1>:                           Random Number Generation.\n                                                             (line  360)\n* unidrnd <2>:                           Random Number Generation.\n                                                             (line  361)\n* unidrnd <3>:                           Random Number Generation.\n                                                             (line  362)\n* unifcdf:                               Distributions.      (line  447)\n* unifcdf <1>:                           Distributions.      (line  448)\n* unifinv:                               Distributions.      (line  454)\n* unifinv <1>:                           Distributions.      (line  455)\n* unifpdf:                               Distributions.      (line  440)\n* unifpdf <1>:                           Distributions.      (line  441)\n* unifrnd:                               Random Number Generation.\n                                                             (line  379)\n* unifrnd <1>:                           Random Number Generation.\n                                                             (line  380)\n* unifrnd <2>:                           Random Number Generation.\n                                                             (line  381)\n* unifrnd <3>:                           Random Number Generation.\n                                                             (line  382)\n* union:                                 Set Operations.     (line   44)\n* union <1>:                             Set Operations.     (line   45)\n* union <2>:                             Set Operations.     (line   46)\n* unique:                                Sets.               (line   14)\n* unique <1>:                            Sets.               (line   15)\n* unique <2>:                            Sets.               (line   16)\n* unique <3>:                            Sets.               (line   17)\n* unique <4>:                            Sets.               (line   18)\n* unix:                                  Controlling Subprocesses.\n                                                             (line   57)\n* unix <1>:                              Controlling Subprocesses.\n                                                             (line   58)\n* unix <2>:                              Controlling Subprocesses.\n                                                             (line   59)\n* unix <3>:                              Controlling Subprocesses.\n                                                             (line   60)\n* unlink:                                Filesystem Utilities.\n                                                             (line   65)\n* unmkpp:                                Polynomial Interpolation.\n                                                             (line  356)\n* unpack:                                File Archiving Utilities.\n                                                             (line  123)\n* unpack <1>:                            File Archiving Utilities.\n                                                             (line  124)\n* unpack <2>:                            File Archiving Utilities.\n                                                             (line  125)\n* unsetenv:                              Environment Variables.\n                                                             (line   27)\n* untabify:                              Manipulating Strings.\n                                                             (line  846)\n* untabify <1>:                          Manipulating Strings.\n                                                             (line  847)\n* untabify <2>:                          Manipulating Strings.\n                                                             (line  848)\n* untar:                                 File Archiving Utilities.\n                                                             (line   78)\n* untar <1>:                             File Archiving Utilities.\n                                                             (line   79)\n* unwrap:                                Signal Processing.  (line  373)\n* unwrap <1>:                            Signal Processing.  (line  374)\n* unwrap <2>:                            Signal Processing.  (line  375)\n* unzip:                                 File Archiving Utilities.\n                                                             (line  110)\n* unzip <1>:                             File Archiving Utilities.\n                                                             (line  111)\n* uplus:                                 Arithmetic Ops.     (line  243)\n* upper:                                 String Conversions. (line  309)\n* urlread:                               URL Manipulation.   (line    6)\n* urlread <1>:                           URL Manipulation.   (line    7)\n* urlread <2>:                           URL Manipulation.   (line    8)\n* urlread <3>:                           URL Manipulation.   (line    9)\n* urlwrite:                              URL Manipulation.   (line   38)\n* urlwrite <1>:                          URL Manipulation.   (line   39)\n* urlwrite <2>:                          URL Manipulation.   (line   40)\n* urlwrite <3>:                          URL Manipulation.   (line   41)\n* usejava:                               Java Interface Functions.\n                                                             (line  281)\n* u_test:                                Tests.              (line  417)\n* validateattributes:                    Multiple Return Values.\n                                                             (line  248)\n* validateattributes <1>:                Multiple Return Values.\n                                                             (line  249)\n* validateattributes <2>:                Multiple Return Values.\n                                                             (line  250)\n* validateattributes <3>:                Multiple Return Values.\n                                                             (line  251)\n* validateattributes <4>:                Multiple Return Values.\n                                                             (line  252)\n* validatestring:                        Multiple Return Values.\n                                                             (line  214)\n* validatestring <1>:                    Multiple Return Values.\n                                                             (line  215)\n* validatestring <2>:                    Multiple Return Values.\n                                                             (line  216)\n* validatestring <3>:                    Multiple Return Values.\n                                                             (line  217)\n* vander:                                Famous Matrices.    (line  442)\n* vander <1>:                            Famous Matrices.    (line  443)\n* var:                                   Descriptive Statistics.\n                                                             (line  178)\n* var <1>:                               Descriptive Statistics.\n                                                             (line  179)\n* var <2>:                               Descriptive Statistics.\n                                                             (line  180)\n* var_test:                              Tests.              (line  437)\n* vec:                                   Rearranging Matrices.\n                                                             (line  511)\n* vec <1>:                               Rearranging Matrices.\n                                                             (line  512)\n* vech:                                  Rearranging Matrices.\n                                                             (line  525)\n* vectorize:                             Basic Vectorization.\n                                                             (line   66)\n* ver:                                   System Information. (line  168)\n* ver <1>:                               System Information. (line  169)\n* ver <2>:                               System Information. (line  170)\n* ver <3>:                               System Information. (line  171)\n* version:                               System Information. (line  128)\n* version <1>:                           System Information. (line  129)\n* version <2>:                           System Information. (line  130)\n* vertcat:                               Rearranging Matrices.\n                                                             (line  166)\n* view:                                  Three-Dimensional Plots.\n                                                             (line 1163)\n* view <1>:                              Three-Dimensional Plots.\n                                                             (line 1164)\n* view <2>:                              Three-Dimensional Plots.\n                                                             (line 1165)\n* view <3>:                              Three-Dimensional Plots.\n                                                             (line 1166)\n* view <4>:                              Three-Dimensional Plots.\n                                                             (line 1167)\n* view <5>:                              Three-Dimensional Plots.\n                                                             (line 1168)\n* view <6>:                              Three-Dimensional Plots.\n                                                             (line 1169)\n* viridis:                               Representing Images.\n                                                             (line  472)\n* viridis <1>:                           Representing Images.\n                                                             (line  473)\n* voronoi:                               Voronoi Diagrams.   (line   14)\n* voronoi <1>:                           Voronoi Diagrams.   (line   15)\n* voronoi <2>:                           Voronoi Diagrams.   (line   16)\n* voronoi <3>:                           Voronoi Diagrams.   (line   17)\n* voronoi <4>:                           Voronoi Diagrams.   (line   18)\n* voronoi <5>:                           Voronoi Diagrams.   (line   19)\n* voronoin:                              Voronoi Diagrams.   (line   51)\n* voronoin <1>:                          Voronoi Diagrams.   (line   52)\n* waitbar:                               Progress Bar.       (line    6)\n* waitbar <1>:                           Progress Bar.       (line    7)\n* waitbar <2>:                           Progress Bar.       (line    8)\n* waitbar <3>:                           Progress Bar.       (line    9)\n* waitbar <4>:                           Progress Bar.       (line   10)\n* waitbar <5>:                           Progress Bar.       (line   11)\n* waitbar <6>:                           Progress Bar.       (line   12)\n* waitfor:                               GUI Utility Functions.\n                                                             (line   87)\n* waitfor <1>:                           GUI Utility Functions.\n                                                             (line   88)\n* waitfor <2>:                           GUI Utility Functions.\n                                                             (line   89)\n* waitfor <3>:                           GUI Utility Functions.\n                                                             (line   90)\n* waitforbuttonpress:                    Interacting with Plots.\n                                                             (line   32)\n* waitforbuttonpress <1>:                Interacting with Plots.\n                                                             (line   33)\n* waitpid:                               Controlling Subprocesses.\n                                                             (line  289)\n* warndlg:                               I/O Dialogs.        (line  365)\n* warndlg <1>:                           I/O Dialogs.        (line  366)\n* warndlg <2>:                           I/O Dialogs.        (line  367)\n* warndlg <3>:                           I/O Dialogs.        (line  368)\n* warning:                               Issuing Warnings.   (line   33)\n* warning <1>:                           Issuing Warnings.   (line   34)\n* warning <2>:                           Issuing Warnings.   (line   35)\n* warning <3>:                           Issuing Warnings.   (line   36)\n* warning <4>:                           Issuing Warnings.   (line   37)\n* warning <5>:                           Issuing Warnings.   (line   38)\n* warning <6>:                           Issuing Warnings.   (line   39)\n* warning <7>:                           Issuing Warnings.   (line   40)\n* warranty:                              Getting Help.       (line  107)\n* waterfall:                             Three-Dimensional Plots.\n                                                             (line 1337)\n* waterfall <1>:                         Three-Dimensional Plots.\n                                                             (line 1338)\n* waterfall <2>:                         Three-Dimensional Plots.\n                                                             (line 1339)\n* waterfall <3>:                         Three-Dimensional Plots.\n                                                             (line 1340)\n* waterfall <4>:                         Three-Dimensional Plots.\n                                                             (line 1341)\n* waterfall <5>:                         Three-Dimensional Plots.\n                                                             (line 1342)\n* wblcdf:                                Distributions.      (line  475)\n* wblcdf <1>:                            Distributions.      (line  476)\n* wblcdf <2>:                            Distributions.      (line  477)\n* wblinv:                                Distributions.      (line  490)\n* wblinv <1>:                            Distributions.      (line  491)\n* wblinv <2>:                            Distributions.      (line  492)\n* wblpdf:                                Distributions.      (line  461)\n* wblpdf <1>:                            Distributions.      (line  462)\n* wblpdf <2>:                            Distributions.      (line  463)\n* wblrnd:                                Random Number Generation.\n                                                             (line  396)\n* wblrnd <1>:                            Random Number Generation.\n                                                             (line  397)\n* wblrnd <2>:                            Random Number Generation.\n                                                             (line  398)\n* wblrnd <3>:                            Random Number Generation.\n                                                             (line  399)\n* WCONTINUE:                             Controlling Subprocesses.\n                                                             (line  335)\n* WCOREDUMP:                             Controlling Subprocesses.\n                                                             (line  343)\n* weekday:                               Timing Utilities.   (line  686)\n* weekday <1>:                           Timing Utilities.   (line  687)\n* welch_test:                            Tests.              (line  457)\n* WEXITSTATUS:                           Controlling Subprocesses.\n                                                             (line  358)\n* what:                                  Status of Variables.\n                                                             (line  367)\n* what <1>:                              Status of Variables.\n                                                             (line  368)\n* what <2>:                              Status of Variables.\n                                                             (line  369)\n* which:                                 Status of Variables.\n                                                             (line  359)\n* white:                                 Representing Images.\n                                                             (line  482)\n* white <1>:                             Representing Images.\n                                                             (line  483)\n* whitebg:                               Representing Images.\n                                                             (line  552)\n* whitebg <1>:                           Representing Images.\n                                                             (line  553)\n* whitebg <2>:                           Representing Images.\n                                                             (line  554)\n* whitebg <3>:                           Representing Images.\n                                                             (line  555)\n* who:                                   Status of Variables.\n                                                             (line   17)\n* who <1>:                               Status of Variables.\n                                                             (line   18)\n* who <2>:                               Status of Variables.\n                                                             (line   19)\n* who <3>:                               Status of Variables.\n                                                             (line   20)\n* whos:                                  Status of Variables.\n                                                             (line   52)\n* whos <1>:                              Status of Variables.\n                                                             (line   53)\n* whos <2>:                              Status of Variables.\n                                                             (line   54)\n* whos <3>:                              Status of Variables.\n                                                             (line   55)\n* whos_line_format:                      Status of Variables.\n                                                             (line  111)\n* whos_line_format <1>:                  Status of Variables.\n                                                             (line  112)\n* whos_line_format <2>:                  Status of Variables.\n                                                             (line  113)\n* wienrnd:                               Random Number Generation.\n                                                             (line  413)\n* WIFCONTINUED:                          Controlling Subprocesses.\n                                                             (line  370)\n* WIFEXITED:                             Controlling Subprocesses.\n                                                             (line  403)\n* WIFSIGNALED:                           Controlling Subprocesses.\n                                                             (line  380)\n* WIFSTOPPED:                            Controlling Subprocesses.\n                                                             (line  390)\n* wilcoxon_test:                         Tests.              (line  477)\n* wilkinson:                             Famous Matrices.    (line  460)\n* winter:                                Representing Images.\n                                                             (line  491)\n* winter <1>:                            Representing Images.\n                                                             (line  492)\n* WNOHANG:                               Controlling Subprocesses.\n                                                             (line  413)\n* WSTOPSIG:                              Controlling Subprocesses.\n                                                             (line  421)\n* WTERMSIG:                              Controlling Subprocesses.\n                                                             (line  434)\n* WUNTRACED:                             Controlling Subprocesses.\n                                                             (line  447)\n* xlabel:                                Plot Annotations.   (line  161)\n* xlabel <1>:                            Plot Annotations.   (line  162)\n* xlabel <2>:                            Plot Annotations.   (line  163)\n* xlabel <3>:                            Plot Annotations.   (line  164)\n* xlim:                                  Axis Configuration. (line  152)\n* xlim <1>:                              Axis Configuration. (line  153)\n* xlim <2>:                              Axis Configuration. (line  154)\n* xlim <3>:                              Axis Configuration. (line  155)\n* xlim <4>:                              Axis Configuration. (line  156)\n* xlim <5>:                              Axis Configuration. (line  157)\n* xor:                                   Finding Elements and Checking Conditions.\n                                                             (line   61)\n* xor <1>:                               Finding Elements and Checking Conditions.\n                                                             (line   62)\n* yes_or_no:                             Terminal Input.     (line   66)\n* ylim:                                  Axis Configuration. (line  152)\n* yulewalker:                            Signal Processing.  (line  787)\n* zeros:                                 Special Utility Matrices.\n                                                             (line   70)\n* zeros <1>:                             Special Utility Matrices.\n                                                             (line   71)\n* zeros <2>:                             Special Utility Matrices.\n                                                             (line   72)\n* zeros <3>:                             Special Utility Matrices.\n                                                             (line   73)\n* zeros <4>:                             Special Utility Matrices.\n                                                             (line   74)\n* zip:                                   File Archiving Utilities.\n                                                             (line   91)\n* zip <1>:                               File Archiving Utilities.\n                                                             (line   92)\n* zlim:                                  Axis Configuration. (line  152)\n* zoom:                                  Manipulation of Plot Objects.\n                                                             (line   57)\n* zoom <1>:                              Manipulation of Plot Objects.\n                                                             (line   58)\n* zoom <2>:                              Manipulation of Plot Objects.\n                                                             (line   59)\n* zoom <3>:                              Manipulation of Plot Objects.\n                                                             (line   60)\n* zoom <4>:                              Manipulation of Plot Objects.\n                                                             (line   61)\n* zoom <5>:                              Manipulation of Plot Objects.\n                                                             (line   62)\n* zoom <6>:                              Manipulation of Plot Objects.\n                                                             (line   63)\n* zoom <7>:                              Manipulation of Plot Objects.\n                                                             (line   64)\n* zoom <8>:                              Manipulation of Plot Objects.\n                                                             (line   65)\n* zscore:                                Basic Statistical Functions.\n                                                             (line   31)\n* zscore <1>:                            Basic Statistical Functions.\n                                                             (line   32)\n* zscore <2>:                            Basic Statistical Functions.\n                                                             (line   33)\n* zscore <3>:                            Basic Statistical Functions.\n                                                             (line   34)\n* z_test:                                Tests.              (line  499)\n* z_test_2:                              Tests.              (line  519)\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/install.txi": "@c Copyright (C) 1996-2017 John W. Eaton\n@c\n@c This file is part of Octave.\n@c\n@c Octave is free software; you can redistribute it and/or modify it\n@c under the terms of the GNU General Public License as published by the\n@c Free Software Foundation; either version 3 of the License, or (at\n@c your option) any later version.\n@c\n@c Octave is distributed in the hope that it will be useful, but WITHOUT\n@c ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n@c FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@c for more details.\n@c\n@c You should have received a copy of the GNU General Public License\n@c along with Octave; see the file COPYING.  If not, see\n@c <http://www.gnu.org/licenses/>.\n\n@c The text of this file appears in the file INSTALL in the Octave\n@c distribution, as well as in the Octave manual.\n\n@ifclear INSTALLONLY\n@node Installation\n@appendix Installing Octave\n@end ifclear\n\n@ifset INSTALLONLY\n@include macros.texi\n\nThis file documents the installation of Octave.\n\nOctave is free software; you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation.\n\n@strong{Note}: This file is automatically generated from\n@file{doc/interpreter/install.txi} in the Octave sources.  To update\nthe documentation make changes to the .txi source file rather than this\nderived file.\n\n@node Installation\n@chapter Installing Octave\n@end ifset\n\n@cindex installing Octave\n\nThe procedure for installing Octave from source on a Unix-like system is\ndescribed next.  Building on other platforms will follow similar\nsteps.  Note that this description applies to Octave releases.  Building\nthe development sources from the Mercurial archive requires additional\nsteps as described in the development source itself.\n\n@menu\n* Build Dependencies::\n* Running Configure and Make::\n* Compiling Octave with 64-bit Indexing::\n* Installation Problems::\n@end menu\n\n@node Build Dependencies\n@section Build Dependencies\n\nOctave is a fairly large program with many build dependencies.  You may\nbe able to find pre-packaged versions of the dependencies distributed as\npart of your system, or you may have to build some or all of them\nyourself.\n\n@menu\n* Obtaining the Dependencies Automatically::\n* Build Tools::\n* External Packages::\n@end menu\n\n@node Obtaining the Dependencies Automatically\n@subsection Obtaining the Dependencies Automatically\n\nOn some systems you can obtain many of Octave's build dependencies\nautomatically.  The commands for doing this vary by system.  Similarly,\nthe names of pre-compiled packages vary by system and do not always\nmatch exactly the names listed in @ref{Build Tools} and @ref{External\nPackages}.\n\nYou will usually need the development version of an external dependency\nso that you get the libraries and header files for building software,\nnot just for running already compiled programs.  These packages\ntypically have names that end with the suffix @code{-dev} or @code{-devel}.\n\nOn systems with @code{apt-get} (Debian, Ubuntu, etc.), you may be able\nto install most of the tools and external packages using a command\nsimilar to\n\n@example\napt-get build-dep octave\n@end example\n\n@noindent\nThe specific package name may be @code{octave3.2} or @code{octave3.4}.\nThe set of required tools and external dependencies does not change\nfrequently, so it is not important that the version match exactly, but\nyou should use the most recent one available.\n\nOn systems with @code{yum} (Fedora, Red Hat, etc.), you may be able to\ninstall most of the tools and external packages using a command similar to\n\n@example\nyum-builddep octave\n@end example\n\n@noindent\nThe @code{yum-builddep} utility is part of the @code{yum-utils} package.\n\nFor either type of system, the package name may include a version\nnumber.  The set of required tools and external dependencies does not\nchange frequently, so it is not important that the version exactly match\nthe version you are installing, but you should use the most recent one\navailable.\n\n@node Build Tools\n@subsection Build Tools\n\nThe following tools are required:\n\n@table @asis\n@item C++, C, and Fortran compilers\nThe Octave sources are primarily written in C++, but some portions are\nalso written in C and Fortran.  The Octave sources are intended to be\nportable.  Recent versions of the GNU compiler collection (GCC) should\nwork (@url{http://gcc.gnu.org}).  If you use GCC, you should avoid\nmixing versions.  For example, be sure that you are not using the\nobsolete @code{g77} Fortran compiler with modern versions of @code{gcc}\nand @code{g++}.\n\n@item GNU Make\nTool for building software (@url{http://www.gnu.org/software/make}).\nOctave's build system requires GNU Make.  Other versions of Make will\nnot work.  Fortunately, GNU Make is highly portable and easy to install.\n\n@item AWK, sed, and other Unix utilities\nBasic Unix system utilities are required for building Octave.  All will\nbe available with any modern Unix system and also on Windows with either\nCygwin or MinGW and MSYS.\n@end table\n\nAdditionally, the following tools may be needed:\n\n@table @asis\n@item Bison\nParser generator (@url{http://www.gnu.org/software/bison}).\nYou will need Bison if you modify the @code{oct-parse.yy} source file or\nif you delete the files that are generated from it.\n\n@item Flex\nLexer analyzer (@url{http://www.gnu.org/software/flex}).  You will need\nFlex if you modify the @code{lex.ll} source file or if you delete the\nfiles that are generated from it.\n\n@item Autoconf\nPackage for software configuration\n(@url{http://www.gnu.org/software/autoconf}).  Autoconf is required if\nyou modify Octave's @code{configure.ac} file or other files that it\nrequires.\n\n@item Automake\nPackage for Makefile generation\n(@url{http://www.gnu.org/software/automake}).  Automake is required if\nyou modify Octave's @code{Makefile.am} files or other files that they\ndepend on.\n\n@item Libtool\nPackage for building software libraries\n(@url{http://www.gnu.org/software/libtool}).  Libtool is required by\nAutomake.\n\n@item gperf\nPerfect hash function generator (@url{http://www.gnu.org/software/gperf}).\nYou will need gperf if you modify the @code{octave.gperf} file or if you\ndelete the file that is generated from it.\n\n@item Texinfo\nPackage for generating online and print documentation\n(@url{http://www.gnu.org/software/texinfo}).  You will need Texinfo to\nbuild Octave's documentation or if you modify the documentation source\nfiles or the docstring of any Octave function.\n@end table\n\n@node External Packages\n@subsection External Packages\n\nThe following external packages are required:\n\n@table @asis\n@item BLAS\nBasic Linear Algebra Subroutine library.  Accelerated @sc{blas} libraries such\nas OpenBLAS (@url{http://www.openblas.net/}) or\nATLAS (@url{http://math-atlas.sourceforge.net}) are recommended for best\nperformance.  The reference implementation (@url{http://www.netlib.org/blas})\nis slow, unmaintained, and suffers from certain bugs in corner case inputs.\n\n@item LAPACK\nLinear Algebra Package (@url{http://www.netlib.org/lapack}).\n\n@item PCRE\nThe Perl Compatible Regular Expression library (@url{http://www.pcre.org}).\n@end table\n\nThe following external package is optional but strongly recommended:\n\n@table @asis\n@item GNU Readline\nCommand-line editing library (@url{www.gnu.org/s/readline}).\n@end table\n\nIf you wish to build Octave without GNU readline installed, you must use\nthe @option{--disable-readline} option when running the configure script.\n\nThe following external software packages are optional but recommended:\n\n@table @asis\n@item ARPACK\nLibrary for the solution of large-scale eigenvalue problems\n(@url{http://forge.scilab.org/index.php/p/arpack-ng}).  @sc{arpack} is\nrequired to provide the functions @code{eigs} and @code{svds}.\n\n@item cURL\nLibrary for transferring data with URL syntax\n(@url{http://curl.haxx.se}).  cURL is required to provide the\n@code{urlread} and @code{urlwrite} functions and the @code{ftp} class.\n\n@item FFTW3\nLibrary for computing discrete Fourier transforms\n(@url{http://www.fftw.org}).  FFTW3 is used to provide better\nperformance for functions that compute discrete Fourier transforms\n(@code{fft}, @code{ifft}, @code{fft2}, etc.)\n\n@item FLTK\nPortable GUI toolkit (@url{http://www.fltk.org}).  FLTK is currently\nused to provide windows for Octave's OpenGL-based graphics functions.\n\n@item fontconfig\nLibrary for configuring and customizing font access\n(@url{http://www.freedesktop.org/wiki/Software/fontconfig}).  Fontconfig\nis used to manage fonts for Octave's OpenGL-based graphics functions.\n\n@item FreeType\nPortable font engine (@url{http://www.freetype.org}).  FreeType is used\nto perform font rendering for Octave's OpenGL-based graphics functions.\n\n@item GLPK\nGNU Linear Programming Kit (@url{http://www.gnu.org/software/glpk}).\nGPLK is required for the function @code{glpk}.\n\n@item @nospell{gl2ps}\nOpenGL to PostScript printing library (@url{http://www.geuz.org/gl2ps/}).\n@nospell{gl2ps} is required for printing when using OpenGL-based\ngraphics toolkits (currently either FLTK or Qt).\n\n@item gnuplot\nInteractive graphics program (@url{http://www.gnuplot.info}).  gnuplot\nis currently the default graphics renderer for Octave.\n\n@item GraphicsMagick++\nImage processing library (@url{http://www.graphicsmagick.org}).\nGraphicsMagick++ is used to provide the @code{imread} and @code{imwrite}\nfunctions.\n\n@item HDF5\nLibrary for manipulating portable data files\n(@url{http://www.hdfgroup.org/HDF5}).  @sc{hdf5} is required for Octave's\n@code{load} and @code{save} commands to read and write HDF data files.\n\n@item Java Development Kit\nJava programming language compiler and libraries.  The OpenJDK free\nsoftware implementation is recommended (@url{http://openjdk.java.net/}),\nalthough other JDK implementations may work.  Java is required to be able\nto call Java functions from within Octave.\n\n@item LLVM\nCompiler framework, (@url{http://www.llvm.org}).  LLVM is required for\nOctave's experimental just-in-time (JIT) compilation for speeding up the\ninterpreter.\n\n@item OpenGL\nAPI for portable 2-D and 3-D graphics (@url{http://www.opengl.org}).  An\nOpenGL implementation is required to provide Octave's OpenGL-based\ngraphics functions.  Octave's OpenGL-based graphics functions usually\noutperform the gnuplot-based graphics functions because plot data can be\nrendered directly instead of sending data and commands to gnuplot for\ninterpretation and rendering.\n\n@item Qhull\nComputational geometry library (@url{http://www.qhull.org}).  Qhull is\nrequired to provide the functions @code{convhull}, @code{convhulln},\n@code{delaunay}, @code{delaunayn}, @code{voronoi}, and @code{voronoin}.\n\n@item QRUPDATE\nQR factorization updating library\n(@url{http://sourceforge.net/projects/qrupdate}).  QRUPDATE is used to\nprovide improved performance for the functions @code{qrdelete},\n@code{qrinsert}, @code{qrshift}, and @code{qrupdate}.\n\n@item QScintilla\nSource code highlighter and manipulator; a Qt port of Scintilla\n(@url{http://www.riverbankcomputing.co.uk/software/qscintilla}).\nQScintilla is used for syntax highlighting and code completion in the\nGUI.\n\n@item Qt\nGUI and utility libraries (@url{}).  Qt is required for building the GUI.\nIt is a large framework, but the only components required are the GUI,\ncore, and network modules.\n\n@item SuiteSparse\nSparse matrix factorization library\n(@url{http://www.cise.ufl.edu/research/sparse/SuiteSparse}).\nSuiteSparse is required to provide sparse matrix factorizations and\nsolution of linear equations for sparse systems.\n\n@item zlib\nData compression library (@url{http://zlib.net}).  The zlib library is\nrequired for Octave's @code{load} and @code{save} commands to handle\ncompressed data, including @sc{matlab} v5 MAT files.\n@end table\n\n@node Running Configure and Make\n@section Running Configure and Make\n\n@itemize @bullet\n@item\nRun the shell script @file{configure}.  This will determine the features\nyour system has (or doesn't have) and create a file named\n@file{Makefile} from each of the files named @file{Makefile.in}.\n\nHere is a summary of the configure options that are most frequently used\nwhen building Octave:\n\n@table @code\n@item --help\nPrint a summary of the options recognized by the configure script.\n\n@item --prefix=@var{prefix}\nInstall Octave in subdirectories below @var{prefix}.  The default value\nof @var{prefix} is @file{/usr/local}.\n\n@item --srcdir=@var{dir}\nLook for Octave sources in the directory @var{dir}.\n\n@item --enable-64\nThis is an @strong{experimental} option to enable Octave to use 64-bit\nintegers for array dimensions and indexing on 64-bit platforms.  You\nprobably don't want to use this option unless you know what you are\ndoing.  @xref{Compiling Octave with 64-bit Indexing}, for more details\nabout building Octave with this option.\n\n@item --enable-bounds-check\nEnable bounds checking for indexing operators in the internal array\nclasses.  This option is primarily used for debugging Octave.  Building\nOctave with this option has a negative impact on performance and is not\nrecommended for general use.\n\n@item --disable-docs\nDisable building all forms of the documentation (Info, PDF, HTML).  The\ndefault is to build documentation, but your system will need functioning\nTexinfo and @TeX{} installs for this to succeed.\n\n@item --enable-float-truncate\nThis option allows for truncation of intermediate floating point results\nin calculations.  It is only necessary for certain platforms.\n\n@item --enable-readline\nUse the readline library to provide for editing of the command line in\nterminal environments.  This option is on by default.\n\n@item --enable-shared\nCreate shared libraries (this is the default).  If you are planning to\nuse the dynamic loading features, you will probably want to use this\noption.  It will make your @file{.oct} files much smaller and on some\nsystems it may be necessary to build shared libraries in order to use\ndynamically linked functions.\n\nYou may also want to build a shared version of @code{libstdc++}, if your\nsystem doesn't already have one.\n\n@item --enable-dl\nUse @code{dlopen} and friends to make Octave capable of dynamically\nlinking externally compiled functions (this is the default if\n@option{--enable-shared} is specified).  This option only works on\nsystems that actually have these functions.  If you plan on using this\nfeature, you should probably also use @option{--enable-shared} to reduce\nthe size of your @file{.oct} files.\n\n@item --with-blas=<lib>\nBy default, configure looks for the best @sc{blas} matrix libraries on\nyour system, including optimized implementations such as the free ATLAS\n3.0, as well as vendor-tuned libraries.  (The use of an optimized\n@sc{blas} will generally result in several-times faster matrix\noperations.)  Use this option to specify a particular @sc{blas} library\nthat Octave should use.\n\n@item --with-lapack=<lib>\nBy default, configure looks for the best @sc{lapack} matrix libraries on\nyour system, including optimized implementations such as the free ATLAS\n3.0, as well as vendor-tuned libraries.  (The use of an optimized\n@sc{lapack} will generally result in several-times faster matrix\noperations.)  Use this option to specify a particular @sc{lapack}\nlibrary that Octave should use.\n\n@item --with-magick=<lib>\nSelect the library to use for image I/O@.  The two possible values are\n@qcode{\"GraphicsMagick\"} (default) or @qcode{\"ImageMagick\"}.\n\n@item --with-sepchar=<char>\nUse <char> as the path separation character.  This option can help when\nrunning Octave on non-Unix systems.\n\n@item --without-amd\nDon't use @sc{amd}, disable some sparse matrix functionality.\n\n@item --without-camd\nDon't use @sc{camd}, disable some sparse matrix functionality.\n\n@item --without-colamd\nDon't use @sc{colamd}, disable some sparse matrix functionality.\n\n@item --without-ccolamd\nDon't use @sc{ccolamd}, disable some sparse matrix functionality.\n\n@item --without-cholmod\nDon't use @sc{cholmod}, disable some sparse matrix functionality.\n\n@item --without-curl\nDon't use the cURL library, disable the ftp objects, @code{urlread} and\n@code{urlwrite} functions.\n\n@item --without-cxsparse\nDon't use @sc{cxsparse}, disable some sparse matrix functionality.\n\n@item --without-fftw3\nUse the included @sc{fftpack} library for computing Fast Fourier\nTransforms instead of the @sc{fftw3} library.\n\n@item --without-fftw3f\nUse the included @sc{fftpack} library for computing Fast Fourier\nTransforms instead of the @sc{fftw3} library when operating on single\nprecision (float) values.\n\n@item --without-glpk\nDon't use the @sc{glpk} library for linear programming.\n\n@item --without-hdf5\nDon't use the @sc{hdf5} library, disable reading and writing of\n@sc{hdf5} files.\n\n@item --without-opengl\nDon't use OpenGL, disable native graphics toolkit for plotting.  You\nwill need @code{gnuplot} installed in order to make plots.\n\n@item --without-qhull\nDon't use Qhull, disable @code{delaunay}, @code{convhull}, and\nrelated functions.\n\n@item --without-qrupdate\nDon't use @sc{qrupdate}, disable QR and Cholesky update functions.\n\n@item --without-umfpack\nDon't use @sc{umfpack}, disable some sparse matrix functionality.\n\n@item --without-zlib\nDon't use the zlib library, disable data file compression and support\nfor recent MAT file formats.\n\n@item --without-framework-carbon\nDon't use framework Carbon headers, libraries, or specific source code\neven if the configure test succeeds (the default is to use Carbon\nframework if available).  This is a platform specific configure option\nfor Mac systems.\n\n@item --without-framework-opengl\nDon't use framework OpenGL headers, libraries, or specific source code\neven if the configure test succeeds.  If this option is given then\nOpenGL headers and libraries in standard system locations are tested\n(the default value is @option{--with-framework-opengl}).  This is a\nplatform specific configure option for Mac systems.\n\n@end table\n\nSee the file @file{INSTALL} for more general information about the\ncommand line options used by configure.  That file also contains\ninstructions for compiling in a directory other than the one where\nthe source is located.\n\n@item\nRun make.\n\nYou will need a recent version of GNU Make as Octave relies on certain\nfeatures not generally available in all versions of make.  Modifying\nOctave's makefiles to work with other make programs is probably not\nworth your time; instead, we simply recommend installing GNU Make.\n\nThere are currently three options for plotting in Octave: the external\nprogram gnuplot, the internal graphics engine using OpenGL coupled with\neither FLTK or Qt widgets.  Gnuplot is a command-driven interactive\nfunction plotting program.\n\nTo compile Octave, you will need a recent version of @code{g++} or other\nANSI C++ compiler.  In addition, you will need a Fortran 77 compiler or\n@code{f2c}.  If you use @code{f2c}, you will need a script like\n@code{fort77} that works like a normal Fortran compiler by combining\n@code{f2c} with your C compiler in a single script.\n\nIf you plan to modify the parser you will also need GNU @code{bison} and\n@code{flex}.  If you modify the documentation, you will need GNU\nTexinfo.\n\nGNU Make, @code{gcc} (and @code{libstdc++}), @code{gnuplot},\n@code{bison}, @code{flex}, and Texinfo are all available from many\nanonymous ftp archives.  The primary site is @url{ftp.gnu.org}, but it\nis often very busy.  A list of sites that mirror the software on\n@url{ftp.gnu.org} is available by anonymous ftp from\n@url{ftp://ftp.gnu.org/pub/gnu/GNUinfo/FTP}.\n\nOctave requires approximately 1.4 GB of disk storage to unpack and\ncompile from source (significantly less, 400 MB, if you don't compile\nwith debugging symbols).  To compile without debugging symbols try the\ncommand\n\n@example\nmake CFLAGS=-O CXXFLAGS=-O LDFLAGS=\n@end example\n\n@noindent\ninstead of just @command{make}.\n\n@item\nIf you encounter errors while compiling Octave, first\nsee @ref{Installation Problems} for a list of\nknown problems and if there is a workaround or solution for\nyour problem.  If not, see\n@ifclear INSTALLONLY\n@ref{Trouble}\n@end ifclear\n@ifset INSTALLONLY\nthe file BUGS\n@end ifset\nfor information about how to report bugs.\n\n@item\nOnce you have successfully compiled Octave, run @code{make install}.\n\nThis will install a copy of Octave, its libraries, and its documentation\nin the destination directory.  As distributed, Octave is installed in\nthe following directories.  In the table below, @var{prefix} defaults to\n@file{/usr/local}, @var{version} stands for the current version number\nof the interpreter, and @var{arch} is the type of computer on which\nOctave is installed (for example, @samp{i586-unknown-gnu}).\n\n@table @file\n@item @var{prefix}/bin\nOctave and other binaries that people will want to run directly.\n\n@item @var{prefix}/lib/octave-@var{version}\nLibraries like liboctave.a and liboctinterp.a.\n\n@item @var{prefix}/octave-@var{version}/include/octave\nInclude files distributed with Octave.\n\n@item @var{prefix}/share\nArchitecture-independent data files.\n\n@item @var{prefix}/share/man/man1\nUnix-style man pages describing Octave.\n\n@item @var{prefix}/share/info\nInfo files describing Octave.\n\n@item @var{prefix}/share/octave/@var{version}/m\nFunction files distributed with Octave.  This includes the Octave\nversion, so that multiple versions of Octave may be installed at the\nsame time.\n\n@item @var{prefix}/libexec/octave/@var{version}/exec/@var{arch}\nExecutables to be run by Octave rather than the user.\n\n@item @var{prefix}/lib/octave/@var{version}/oct/@var{arch}\nObject files that will be dynamically loaded.\n\n@item @var{prefix}/share/octave/@var{version}/imagelib\nImage files that are distributed with Octave.\n@end table\n@end itemize\n\n@node Compiling Octave with 64-bit Indexing\n@section Compiling Octave with 64-bit Indexing\n\nNote: the following only applies to systems that have 64-bit pointers.\nConfiguring Octave with @option{--enable-64} cannot magically make a\n32-bit system have a 64-bit address space.\n\nOn 64-bit systems, Octave is limited to (approximately) the following\narray sizes when using the default 32-bit indexing mode:\n\n@example\n@group\ndouble:         16 GB\nsingle:          8 GB\nuint64, int64:  16 GB\nuint32, int32:   8 GB\nuint16, int16:   4 GB\nuint8, int8:     2 GB\n@end group\n@end example\n\nIn each case, the limit is really (approximately) @math{2^{31}} elements\nbecause of the default type of the value used for indexing arrays\n(signed 32-bit integer, corresponding to the size of a Fortran INTEGER\nvalue).\n\nTrying to create larger arrays will produce the following error:\n\n@example\n@group\noctave:1> a = zeros (1024*1024*1024*3, 1, 'int8');\nerror: memory exhausted or requested size too large\n       for range of Octave's index type --\n       trying to return to prompt\n@end group\n@end example\n\n@noindent\nYou will obtain this error even if your system has enough memory to\ncreate this array (4 GB in the above case).\n\nTo use arrays larger than 2 GB, Octave has to be configured with the\noption @option{--enable-64}.  This option is experimental and you are\nencouraged to submit bug reports if you find a problem.  With this\noption, Octave will use 64-bit integers internally for array dimensions\nand indexing.  However, all numerical libraries used by Octave will\n@strong{also} need to use 64-bit integers for array dimensions and\nindexing.  In most cases, this means they will need to be compiled from\nsource since most (all?) distributions which package these libraries\ncompile them with the default Fortran integer size, which is normally\n32-bits wide.\n\nThe following instructions were tested with the development version of\nOctave and GCC 4.3.4 on an x86_64 Debian system.\n\nThe versions listed below are the versions used for testing.  If newer\nversions of these packages are available, you should try to use them,\nalthough there may be some differences.\n\nAll libraries and header files will be installed in subdirectories of\n@code{$prefix64} (you must choose the location of this directory).\n\n@itemize @bullet\n@item @sc{blas} and @sc{lapack} (@url{http://www.netlib.org/lapack})\n\nReference versions for both libraries are included in the reference\n@sc{lapack} 3.2.1 distribution from @url{netlib.org}.\n\n@itemize @minus\n@item\nCopy the file @file{make.inc.example} and name it @file{make.inc}.\nThe options @option{-fdefault-integer-8} and @option{-fPIC} (on 64-bit\nCPU) have to be added to the variable @code{OPTS} and @code{NOOPT}.\n\n@item\nOnce you have compiled this library make sure that you use it for\ncompiling Suite Sparse and Octave.  In the following we assume that\nyou installed the @sc{lapack} library as $prefix64/lib/liblapack.a.\n@end itemize\n\n@item QRUPDATE (@url{http://sourceforge.net/projects/qrupdate})\n\nIn the @file{Makeconf} file:\n\n@itemize @minus\n@item\nAdd @option{-fdefault-integer-8} to @env{FFLAGS}.\n\n@item\nAdjust the @sc{blas} and @sc{lapack} variables as needed if your 64-bit\naware @sc{blas} and @sc{lapack} libraries are in a non-standard\nlocation.\n\n@item\nSet @env{PREFIX} to the top-level directory of your install tree.\n\n@item\nRun @code{make solib} to make a shared library.\n\n@item\nRun @code{make install} to install the library.\n@end itemize\n\n@item\nSuiteSparse (@url{http://www.cise.ufl.edu/research/sparse/SuiteSparse})\n\nPass the following options to @command{make} to enable 64-bit integers\nfor @sc{blas} library calls.  On 64-bit Windows systems, use\n@code{-DLONGBLAS=\"long long\"} instead.\n\n@example\n@group\nCFLAGS='-DLONGBLAS=long'\nCXXFLAGS='-DLONGBLAS=long'\n@end group\n@end example\n\nThe SuiteSparse makefiles don't generate shared libraries.  On some\nsystems, you can generate them by doing something as simple as\n\n@example\n@group\ntop=$(pwd)\nfor f in *.a; do\n  mkdir tmp\n  cd tmp\n  ar vx ../$f\n  gcc -shared -o ../$@{f%%.a@}.so *.o\n  cd $top\n  rm -rf tmp\ndone\n@end group\n@end example\n\n@noindent\nOther systems may require a different solution.\n\n@item @sc{arpack} (http://forge.scilab.org/index.php/p/arpack-ng/)\n\n@itemize @minus\n@item Add @option{-fdefault-integer-8} to @env{FFLAGS} when running configure.\n\n@item Run @code{make} to build the library.\n\n@item Run @code{make install} to install the library.\n@end itemize\n\n@item ATLAS instead of reference @sc{blas} and @sc{lapack}\n\nSuggestions on how to compile ATLAS would be most welcome.\n\n@item @sc{glpk}\n\n@item Qhull (@url{http://www.qhull.org})\n\nBoth @sc{glpk} and Qhull use @code{int} internally so maximum problem\nsizes may be limited.\n\n@item Octave\n\nOctave's 64-bit index support is activated with the configure option\n@option{--enable-64}.\n\n@example\n@group\n./configure \\\n  LD_LIBRARY_PATH=\"$prefix64/lib\" \\\n  CPPFLAGS=\"-I$prefix64/include\" LDFLAGS=\"-L$prefix64/lib\" \\\n  --enable-64\n@end group\n@end example\n\nYou must ensure that all Fortran sources except those in the\n@file{liboctave/cruft/ranlib} directory are compiled such that INTEGERS are\n8-bytes wide.  If you are using gfortran, the configure script should\nautomatically set the Makefile variable @w{@env{F77_INTEGER_8_FLAG}} to\n@option{-fdefault-integer-8}.  If you are using another compiler, you\nmust set this variable yourself.  You should NOT set this flag in\n@env{FFLAGS}, otherwise the files in @file{liboctave/cruft/ranlib} will be\nmiscompiled.\n\n@item Other dependencies\n\nProbably nothing special needs to be done for the following\ndependencies.  If you discover that something does need to be done,\nplease submit a bug report.\n\n@itemize @minus\n@item pcre\n\n@item zlib\n\n@item hdf5\n\n@item fftw3\n\n@item cURL\n\n@item GraphicsMagick++\n\n@item OpenGL\n\n@item freetype\n\n@item fontconfig\n\n@item fltk\n@end itemize\n\n@end itemize\n\n@node Installation Problems\n@section Installation Problems\n\nThis section contains a list of problems (and some apparent problems\nthat don't really mean anything is wrong) that may show up during\ninstallation of Octave.\n\n@itemize @bullet\n@item\nOn some SCO systems, @code{info} fails to compile if\n@w{@code{HAVE_TERMIOS_H}} is defined in @file{config.h}.  Simply\nremoving the definition from @file{info/config.h} should allow it to\ncompile.\n\n@item\nIf @code{configure} finds @code{dlopen}, @code{dlsym}, @code{dlclose},\nand @code{dlerror}, but not the header file @file{dlfcn.h}, you need to\nfind the source for the header file and install it in the directory\n@file{usr/include}.  This is reportedly a problem with Slackware 3.1.\nFor Linux/GNU systems, the source for @file{dlfcn.h} is in the\n@code{ldso} package.\n\n@item\nBuilding @file{.oct} files doesn't work.\n\nYou should probably have a shared version of @code{libstdc++}.  A patch\nis needed to build shared versions of version 2.7.2 of @code{libstdc++}\non the HP-PA architecture.  You can find the patch at\n@url{ftp://ftp.cygnus.com/pub/g++/libg++-2.7.2-hppa-gcc-fix}.\n\n@item\nOn some DEC alpha systems there may be a problem with the @code{libdxml}\nlibrary, resulting in floating point errors and/or segmentation faults\nin the linear algebra routines called by Octave.  If you encounter such\nproblems, then you should modify the configure script so that\n@w{@code{SPECIAL_MATH_LIB}} is not set to @code{-ldxml}.\n\n@item\nOn FreeBSD systems Octave may hang while initializing some internal\nconstants.  The fix appears to be to use\n\n@example\noptions      GPL_MATH_EMULATE\n@end example\n\n@noindent\nrather than\n\n@example\noptions      MATH_EMULATE\n@end example\n\n@noindent\nin the kernel configuration files (typically found in the directory\n@file{/sys/i386/conf}).  After making this change, you'll need to rebuild\nthe kernel, install it, and reboot.\n\n@item\nIf you encounter errors like\n\n@example\n@group\npassing `void (*)()' as argument 2 of\n  `octave_set_signal_handler(int, void (*)(int))'\n@end group\n@end example\n\n@noindent\nor\n\n@example\n@group\nwarning: ANSI C++ prohibits conversion from `(int)'\n         to `(@dots{})'\n@end group\n@end example\n\n@noindent\nwhile compiling @file{sighandlers.cc}, you may need to edit some files\nin the @code{gcc} include subdirectory to add proper prototypes for\nfunctions there.  For example, Ultrix 4.2 needs proper declarations for\nthe @code{signal} function and the @w{@code{SIG_IGN}} macro in the file\n@file{signal.h}.\n\nOn some systems the @w{@code{SIG_IGN}} macro is defined to be something\nlike this:\n\n@example\n#define  SIG_IGN  (void (*)())1\n@end example\n\n@noindent\nwhen it should really be something like:\n\n@example\n#define  SIG_IGN  (void (*)(int))1\n@end example\n\n@noindent\nto match the prototype declaration for the @code{signal} function.  This\nchange should also be made for the @w{@code{SIG_DFL}} and\n@w{@code{SIG_ERR}} symbols.  It may be necessary to change the\ndefinitions in @file{sys/signal.h} as well.\n\nThe @code{gcc} @code{fixincludes} and @code{fixproto} scripts should\nprobably fix these problems when @code{gcc} installs its modified set of\nheader files, but I don't think that's been done yet.\n\n@strong{You should not change the files in @file{/usr/include}}.  You\ncan find the @code{gcc} include directory tree by running the command\n\n@example\ngcc -print-libgcc-file-name\n@end example\n\n@noindent\nThe directory of @code{gcc} include files normally begins in the same\ndirectory that contains the file @file{libgcc.a}.\n\n@item\nSome of the Fortran subroutines may fail to compile with older versions\nof the Sun Fortran compiler.  If you get errors like\n\n@example\n@group\nzgemm.f:\n        zgemm:\nwarning: unexpected parent of complex expression subtree\nzgemm.f, line 245: warning: unexpected parent of complex\n  expression subtree\nwarning: unexpected parent of complex expression subtree\nzgemm.f, line 304: warning: unexpected parent of complex\n  expression subtree\nwarning: unexpected parent of complex expression subtree\nzgemm.f, line 327: warning: unexpected parent of complex\n  expression subtree\npcc_binval: missing IR_CONV in complex op\nmake[2]: *** [zgemm.o] Error 1\n@end group\n@end example\n\n@noindent\nwhen compiling the Fortran subroutines in the @file{liboctave/cruft}\nsubdirectory, you should either upgrade your compiler or try compiling\nwith optimization turned off.\n\n@item\nOn NeXT systems, if you get errors like this:\n\n@example\n@group\n/usr/tmp/cc007458.s:unknown:Undefined local\n      symbol LBB7656\n/usr/tmp/cc007458.s:unknown:Undefined local\n      symbol LBE7656\n@end group\n@end example\n\n@noindent\nwhen compiling @file{Array.cc} and @file{Matrix.cc}, try recompiling\nthese files without @option{-g}.\n\n@item\nSome people have reported that calls to system() and the pager do not\nwork on SunOS systems.  This is apparently due to having\n@w{@code{G_HAVE_SYS_WAIT}} defined to be 0 instead of 1 when compiling\n@code{libg++}.\n\n@item\nOn systems where the reference @sc{blas} library is used the following\nmatrix-by-vector multiplication incorrectly handles NaN values of the\nform @code{NaN * 0}.\n\n@example\n@group\n[NaN, 1; 0, 0] * [0; 1]\n@result{}\n[ 1\n  0 ]\n\ncorrect result @result{}\n[ NaN\n  0   ]\n@end group\n@end example\n\nInstall a different @sc{blas} library such as OpenBLAS or ATLAS to correct\nthis issue.\n\n@item\nOn NeXT systems, linking to @file{libsys_s.a} may fail to resolve the\nfollowing functions\n\n@example\n@group\n_tcgetattr\n_tcsetattr\n_tcflow\n@end group\n@end example\n\n@noindent\nwhich are part of @file{libposix.a}.  Unfortunately, linking Octave with\n@option{-posix} results in the following undefined symbols.\n\n@example\n@group\n.destructors_used\n.constructors_used\n_objc_msgSend\n_NXGetDefaultValue\n_NXRegisterDefaults\n.objc_class_name_NXStringTable\n.objc_class_name_NXBundle\n@end group\n@end example\n\nOne kluge around this problem is to extract @file{termios.o} from\n@file{libposix.a}, put it in Octave's @file{src} directory, and add it\nto the list of files to link together in the makefile.  Suggestions for\nbetter ways to solve this problem are welcome!\n\n@item\nIf Octave crashes immediately with a floating point exception, it is\nlikely that it is failing to initialize the IEEE floating point values\nfor infinity and NaN.\n\nIf your system actually does support IEEE arithmetic, you should be able\nto fix this problem by modifying the function @code{octave_ieee_init} in\nthe file @file{lo-ieee.cc} to correctly initialize Octave's internal\ninfinity and NaN variables.\n\nIf your system does not support IEEE arithmetic but Octave's configure\nscript incorrectly determined that it does, you can work around the\nproblem by editing the file @file{config.h} to not define\n@w{@code{HAVE_ISINF}}, @w{@code{HAVE_FINITE}}, and\n@w{@code{HAVE_ISNAN}}.\n\nIn any case, please report this as a bug since it might be possible to\nmodify Octave's configuration script to automatically determine the\nproper thing to do.\n\n@item\nIf Octave is unable to find a header file because it is installed in a\nlocation that is not normally searched by the compiler, you can add the\ndirectory to the include search path by specifying (for example)\n@code{CPPFLAGS=-I/some/nonstandard/directory} as an argument to\n@code{configure}.  Other variables that can be specified this way are\n@env{CFLAGS}, @env{CXXFLAGS}, @env{FFLAGS}, and @env{LDFLAGS}.  Passing\nthem as options to the configure script also records them in the\n@file{config.status} file.  By default, @env{CPPFLAGS} and @env{LDFLAGS}\nare empty, @env{CFLAGS} and @env{CXXFLAGS} are set to @qcode{\"-g -O2\"} and\n@env{FFLAGS} is set to @qcode{\"-O\"}.\n\n@end itemize\n",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/install.texi": "@c DO NOT EDIT!  Generated automatically by munge-texi.pl.\n\n@c Copyright (C) 1996-2017 John W. Eaton\n@c\n@c This file is part of Octave.\n@c\n@c Octave is free software; you can redistribute it and/or modify it\n@c under the terms of the GNU General Public License as published by the\n@c Free Software Foundation; either version 3 of the License, or (at\n@c your option) any later version.\n@c\n@c Octave is distributed in the hope that it will be useful, but WITHOUT\n@c ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n@c FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@c for more details.\n@c\n@c You should have received a copy of the GNU General Public License\n@c along with Octave; see the file COPYING.  If not, see\n@c <http://www.gnu.org/licenses/>.\n\n@c The text of this file appears in the file INSTALL in the Octave\n@c distribution, as well as in the Octave manual.\n\n@ifclear INSTALLONLY\n@node Installation\n@appendix Installing Octave\n@end ifclear\n\n@ifset INSTALLONLY\n@include macros.texi\n\nThis file documents the installation of Octave.\n\nOctave is free software; you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation.\n\n@strong{Note}: This file is automatically generated from\n@file{doc/interpreter/install.txi} in the Octave sources.  To update\nthe documentation make changes to the .txi source file rather than this\nderived file.\n\n@node Installation\n@chapter Installing Octave\n@end ifset\n\n@cindex installing Octave\n\nThe procedure for installing Octave from source on a Unix-like system is\ndescribed next.  Building on other platforms will follow similar\nsteps.  Note that this description applies to Octave releases.  Building\nthe development sources from the Mercurial archive requires additional\nsteps as described in the development source itself.\n\n@menu\n* Build Dependencies::\n* Running Configure and Make::\n* Compiling Octave with 64-bit Indexing::\n* Installation Problems::\n@end menu\n\n@node Build Dependencies\n@section Build Dependencies\n\nOctave is a fairly large program with many build dependencies.  You may\nbe able to find pre-packaged versions of the dependencies distributed as\npart of your system, or you may have to build some or all of them\nyourself.\n\n@menu\n* Obtaining the Dependencies Automatically::\n* Build Tools::\n* External Packages::\n@end menu\n\n@node Obtaining the Dependencies Automatically\n@subsection Obtaining the Dependencies Automatically\n\nOn some systems you can obtain many of Octave's build dependencies\nautomatically.  The commands for doing this vary by system.  Similarly,\nthe names of pre-compiled packages vary by system and do not always\nmatch exactly the names listed in @ref{Build Tools} and @ref{External\nPackages}.\n\nYou will usually need the development version of an external dependency\nso that you get the libraries and header files for building software,\nnot just for running already compiled programs.  These packages\ntypically have names that end with the suffix @code{-dev} or @code{-devel}.\n\nOn systems with @code{apt-get} (Debian, Ubuntu, etc.), you may be able\nto install most of the tools and external packages using a command\nsimilar to\n\n@example\napt-get build-dep octave\n@end example\n\n@noindent\nThe specific package name may be @code{octave3.2} or @code{octave3.4}.\nThe set of required tools and external dependencies does not change\nfrequently, so it is not important that the version match exactly, but\nyou should use the most recent one available.\n\nOn systems with @code{yum} (Fedora, Red Hat, etc.), you may be able to\ninstall most of the tools and external packages using a command similar to\n\n@example\nyum-builddep octave\n@end example\n\n@noindent\nThe @code{yum-builddep} utility is part of the @code{yum-utils} package.\n\nFor either type of system, the package name may include a version\nnumber.  The set of required tools and external dependencies does not\nchange frequently, so it is not important that the version exactly match\nthe version you are installing, but you should use the most recent one\navailable.\n\n@node Build Tools\n@subsection Build Tools\n\nThe following tools are required:\n\n@table @asis\n@item C++, C, and Fortran compilers\nThe Octave sources are primarily written in C++, but some portions are\nalso written in C and Fortran.  The Octave sources are intended to be\nportable.  Recent versions of the GNU compiler collection (GCC) should\nwork (@url{http://gcc.gnu.org}).  If you use GCC, you should avoid\nmixing versions.  For example, be sure that you are not using the\nobsolete @code{g77} Fortran compiler with modern versions of @code{gcc}\nand @code{g++}.\n\n@item GNU Make\nTool for building software (@url{http://www.gnu.org/software/make}).\nOctave's build system requires GNU Make.  Other versions of Make will\nnot work.  Fortunately, GNU Make is highly portable and easy to install.\n\n@item AWK, sed, and other Unix utilities\nBasic Unix system utilities are required for building Octave.  All will\nbe available with any modern Unix system and also on Windows with either\nCygwin or MinGW and MSYS.\n@end table\n\nAdditionally, the following tools may be needed:\n\n@table @asis\n@item Bison\nParser generator (@url{http://www.gnu.org/software/bison}).\nYou will need Bison if you modify the @code{oct-parse.yy} source file or\nif you delete the files that are generated from it.\n\n@item Flex\nLexer analyzer (@url{http://www.gnu.org/software/flex}).  You will need\nFlex if you modify the @code{lex.ll} source file or if you delete the\nfiles that are generated from it.\n\n@item Autoconf\nPackage for software configuration\n(@url{http://www.gnu.org/software/autoconf}).  Autoconf is required if\nyou modify Octave's @code{configure.ac} file or other files that it\nrequires.\n\n@item Automake\nPackage for Makefile generation\n(@url{http://www.gnu.org/software/automake}).  Automake is required if\nyou modify Octave's @code{Makefile.am} files or other files that they\ndepend on.\n\n@item Libtool\nPackage for building software libraries\n(@url{http://www.gnu.org/software/libtool}).  Libtool is required by\nAutomake.\n\n@item gperf\nPerfect hash function generator (@url{http://www.gnu.org/software/gperf}).\nYou will need gperf if you modify the @code{octave.gperf} file or if you\ndelete the file that is generated from it.\n\n@item Texinfo\nPackage for generating online and print documentation\n(@url{http://www.gnu.org/software/texinfo}).  You will need Texinfo to\nbuild Octave's documentation or if you modify the documentation source\nfiles or the docstring of any Octave function.\n@end table\n\n@node External Packages\n@subsection External Packages\n\nThe following external packages are required:\n\n@table @asis\n@item BLAS\nBasic Linear Algebra Subroutine library.  Accelerated @sc{blas} libraries such\nas OpenBLAS (@url{http://www.openblas.net/}) or\nATLAS (@url{http://math-atlas.sourceforge.net}) are recommended for best\nperformance.  The reference implementation (@url{http://www.netlib.org/blas})\nis slow, unmaintained, and suffers from certain bugs in corner case inputs.\n\n@item LAPACK\nLinear Algebra Package (@url{http://www.netlib.org/lapack}).\n\n@item PCRE\nThe Perl Compatible Regular Expression library (@url{http://www.pcre.org}).\n@end table\n\nThe following external package is optional but strongly recommended:\n\n@table @asis\n@item GNU Readline\nCommand-line editing library (@url{www.gnu.org/s/readline}).\n@end table\n\nIf you wish to build Octave without GNU readline installed, you must use\nthe @option{--disable-readline} option when running the configure script.\n\nThe following external software packages are optional but recommended:\n\n@table @asis\n@item ARPACK\nLibrary for the solution of large-scale eigenvalue problems\n(@url{http://forge.scilab.org/index.php/p/arpack-ng}).  @sc{arpack} is\nrequired to provide the functions @code{eigs} and @code{svds}.\n\n@item cURL\nLibrary for transferring data with URL syntax\n(@url{http://curl.haxx.se}).  cURL is required to provide the\n@code{urlread} and @code{urlwrite} functions and the @code{ftp} class.\n\n@item FFTW3\nLibrary for computing discrete Fourier transforms\n(@url{http://www.fftw.org}).  FFTW3 is used to provide better\nperformance for functions that compute discrete Fourier transforms\n(@code{fft}, @code{ifft}, @code{fft2}, etc.)\n\n@item FLTK\nPortable GUI toolkit (@url{http://www.fltk.org}).  FLTK is currently\nused to provide windows for Octave's OpenGL-based graphics functions.\n\n@item fontconfig\nLibrary for configuring and customizing font access\n(@url{http://www.freedesktop.org/wiki/Software/fontconfig}).  Fontconfig\nis used to manage fonts for Octave's OpenGL-based graphics functions.\n\n@item FreeType\nPortable font engine (@url{http://www.freetype.org}).  FreeType is used\nto perform font rendering for Octave's OpenGL-based graphics functions.\n\n@item GLPK\nGNU Linear Programming Kit (@url{http://www.gnu.org/software/glpk}).\nGPLK is required for the function @code{glpk}.\n\n@item @nospell{gl2ps}\nOpenGL to PostScript printing library (@url{http://www.geuz.org/gl2ps/}).\n@nospell{gl2ps} is required for printing when using OpenGL-based\ngraphics toolkits (currently either FLTK or Qt).\n\n@item gnuplot\nInteractive graphics program (@url{http://www.gnuplot.info}).  gnuplot\nis currently the default graphics renderer for Octave.\n\n@item GraphicsMagick++\nImage processing library (@url{http://www.graphicsmagick.org}).\nGraphicsMagick++ is used to provide the @code{imread} and @code{imwrite}\nfunctions.\n\n@item HDF5\nLibrary for manipulating portable data files\n(@url{http://www.hdfgroup.org/HDF5}).  @sc{hdf5} is required for Octave's\n@code{load} and @code{save} commands to read and write HDF data files.\n\n@item Java Development Kit\nJava programming language compiler and libraries.  The OpenJDK free\nsoftware implementation is recommended (@url{http://openjdk.java.net/}),\nalthough other JDK implementations may work.  Java is required to be able\nto call Java functions from within Octave.\n\n@item LLVM\nCompiler framework, (@url{http://www.llvm.org}).  LLVM is required for\nOctave's experimental just-in-time (JIT) compilation for speeding up the\ninterpreter.\n\n@item OpenGL\nAPI for portable 2-D and 3-D graphics (@url{http://www.opengl.org}).  An\nOpenGL implementation is required to provide Octave's OpenGL-based\ngraphics functions.  Octave's OpenGL-based graphics functions usually\noutperform the gnuplot-based graphics functions because plot data can be\nrendered directly instead of sending data and commands to gnuplot for\ninterpretation and rendering.\n\n@item Qhull\nComputational geometry library (@url{http://www.qhull.org}).  Qhull is\nrequired to provide the functions @code{convhull}, @code{convhulln},\n@code{delaunay}, @code{delaunayn}, @code{voronoi}, and @code{voronoin}.\n\n@item QRUPDATE\nQR factorization updating library\n(@url{http://sourceforge.net/projects/qrupdate}).  QRUPDATE is used to\nprovide improved performance for the functions @code{qrdelete},\n@code{qrinsert}, @code{qrshift}, and @code{qrupdate}.\n\n@item QScintilla\nSource code highlighter and manipulator; a Qt port of Scintilla\n(@url{http://www.riverbankcomputing.co.uk/software/qscintilla}).\nQScintilla is used for syntax highlighting and code completion in the\nGUI.\n\n@item Qt\nGUI and utility libraries (@url{}).  Qt is required for building the GUI.\nIt is a large framework, but the only components required are the GUI,\ncore, and network modules.\n\n@item SuiteSparse\nSparse matrix factorization library\n(@url{http://www.cise.ufl.edu/research/sparse/SuiteSparse}).\nSuiteSparse is required to provide sparse matrix factorizations and\nsolution of linear equations for sparse systems.\n\n@item zlib\nData compression library (@url{http://zlib.net}).  The zlib library is\nrequired for Octave's @code{load} and @code{save} commands to handle\ncompressed data, including @sc{matlab} v5 MAT files.\n@end table\n\n@node Running Configure and Make\n@section Running Configure and Make\n\n@itemize @bullet\n@item\nRun the shell script @file{configure}.  This will determine the features\nyour system has (or doesn't have) and create a file named\n@file{Makefile} from each of the files named @file{Makefile.in}.\n\nHere is a summary of the configure options that are most frequently used\nwhen building Octave:\n\n@table @code\n@item --help\nPrint a summary of the options recognized by the configure script.\n\n@item --prefix=@var{prefix}\nInstall Octave in subdirectories below @var{prefix}.  The default value\nof @var{prefix} is @file{/usr/local}.\n\n@item --srcdir=@var{dir}\nLook for Octave sources in the directory @var{dir}.\n\n@item --enable-64\nThis is an @strong{experimental} option to enable Octave to use 64-bit\nintegers for array dimensions and indexing on 64-bit platforms.  You\nprobably don't want to use this option unless you know what you are\ndoing.  @xref{Compiling Octave with 64-bit Indexing}, for more details\nabout building Octave with this option.\n\n@item --enable-bounds-check\nEnable bounds checking for indexing operators in the internal array\nclasses.  This option is primarily used for debugging Octave.  Building\nOctave with this option has a negative impact on performance and is not\nrecommended for general use.\n\n@item --disable-docs\nDisable building all forms of the documentation (Info, PDF, HTML).  The\ndefault is to build documentation, but your system will need functioning\nTexinfo and @TeX{} installs for this to succeed.\n\n@item --enable-float-truncate\nThis option allows for truncation of intermediate floating point results\nin calculations.  It is only necessary for certain platforms.\n\n@item --enable-readline\nUse the readline library to provide for editing of the command line in\nterminal environments.  This option is on by default.\n\n@item --enable-shared\nCreate shared libraries (this is the default).  If you are planning to\nuse the dynamic loading features, you will probably want to use this\noption.  It will make your @file{.oct} files much smaller and on some\nsystems it may be necessary to build shared libraries in order to use\ndynamically linked functions.\n\nYou may also want to build a shared version of @code{libstdc++}, if your\nsystem doesn't already have one.\n\n@item --enable-dl\nUse @code{dlopen} and friends to make Octave capable of dynamically\nlinking externally compiled functions (this is the default if\n@option{--enable-shared} is specified).  This option only works on\nsystems that actually have these functions.  If you plan on using this\nfeature, you should probably also use @option{--enable-shared} to reduce\nthe size of your @file{.oct} files.\n\n@item --with-blas=<lib>\nBy default, configure looks for the best @sc{blas} matrix libraries on\nyour system, including optimized implementations such as the free ATLAS\n3.0, as well as vendor-tuned libraries.  (The use of an optimized\n@sc{blas} will generally result in several-times faster matrix\noperations.)  Use this option to specify a particular @sc{blas} library\nthat Octave should use.\n\n@item --with-lapack=<lib>\nBy default, configure looks for the best @sc{lapack} matrix libraries on\nyour system, including optimized implementations such as the free ATLAS\n3.0, as well as vendor-tuned libraries.  (The use of an optimized\n@sc{lapack} will generally result in several-times faster matrix\noperations.)  Use this option to specify a particular @sc{lapack}\nlibrary that Octave should use.\n\n@item --with-magick=<lib>\nSelect the library to use for image I/O@.  The two possible values are\n@qcode{\"GraphicsMagick\"} (default) or @qcode{\"ImageMagick\"}.\n\n@item --with-sepchar=<char>\nUse <char> as the path separation character.  This option can help when\nrunning Octave on non-Unix systems.\n\n@item --without-amd\nDon't use @sc{amd}, disable some sparse matrix functionality.\n\n@item --without-camd\nDon't use @sc{camd}, disable some sparse matrix functionality.\n\n@item --without-colamd\nDon't use @sc{colamd}, disable some sparse matrix functionality.\n\n@item --without-ccolamd\nDon't use @sc{ccolamd}, disable some sparse matrix functionality.\n\n@item --without-cholmod\nDon't use @sc{cholmod}, disable some sparse matrix functionality.\n\n@item --without-curl\nDon't use the cURL library, disable the ftp objects, @code{urlread} and\n@code{urlwrite} functions.\n\n@item --without-cxsparse\nDon't use @sc{cxsparse}, disable some sparse matrix functionality.\n\n@item --without-fftw3\nUse the included @sc{fftpack} library for computing Fast Fourier\nTransforms instead of the @sc{fftw3} library.\n\n@item --without-fftw3f\nUse the included @sc{fftpack} library for computing Fast Fourier\nTransforms instead of the @sc{fftw3} library when operating on single\nprecision (float) values.\n\n@item --without-glpk\nDon't use the @sc{glpk} library for linear programming.\n\n@item --without-hdf5\nDon't use the @sc{hdf5} library, disable reading and writing of\n@sc{hdf5} files.\n\n@item --without-opengl\nDon't use OpenGL, disable native graphics toolkit for plotting.  You\nwill need @code{gnuplot} installed in order to make plots.\n\n@item --without-qhull\nDon't use Qhull, disable @code{delaunay}, @code{convhull}, and\nrelated functions.\n\n@item --without-qrupdate\nDon't use @sc{qrupdate}, disable QR and Cholesky update functions.\n\n@item --without-umfpack\nDon't use @sc{umfpack}, disable some sparse matrix functionality.\n\n@item --without-zlib\nDon't use the zlib library, disable data file compression and support\nfor recent MAT file formats.\n\n@item --without-framework-carbon\nDon't use framework Carbon headers, libraries, or specific source code\neven if the configure test succeeds (the default is to use Carbon\nframework if available).  This is a platform specific configure option\nfor Mac systems.\n\n@item --without-framework-opengl\nDon't use framework OpenGL headers, libraries, or specific source code\neven if the configure test succeeds.  If this option is given then\nOpenGL headers and libraries in standard system locations are tested\n(the default value is @option{--with-framework-opengl}).  This is a\nplatform specific configure option for Mac systems.\n\n@end table\n\nSee the file @file{INSTALL} for more general information about the\ncommand line options used by configure.  That file also contains\ninstructions for compiling in a directory other than the one where\nthe source is located.\n\n@item\nRun make.\n\nYou will need a recent version of GNU Make as Octave relies on certain\nfeatures not generally available in all versions of make.  Modifying\nOctave's makefiles to work with other make programs is probably not\nworth your time; instead, we simply recommend installing GNU Make.\n\nThere are currently three options for plotting in Octave: the external\nprogram gnuplot, the internal graphics engine using OpenGL coupled with\neither FLTK or Qt widgets.  Gnuplot is a command-driven interactive\nfunction plotting program.\n\nTo compile Octave, you will need a recent version of @code{g++} or other\nANSI C++ compiler.  In addition, you will need a Fortran 77 compiler or\n@code{f2c}.  If you use @code{f2c}, you will need a script like\n@code{fort77} that works like a normal Fortran compiler by combining\n@code{f2c} with your C compiler in a single script.\n\nIf you plan to modify the parser you will also need GNU @code{bison} and\n@code{flex}.  If you modify the documentation, you will need GNU\nTexinfo.\n\nGNU Make, @code{gcc} (and @code{libstdc++}), @code{gnuplot},\n@code{bison}, @code{flex}, and Texinfo are all available from many\nanonymous ftp archives.  The primary site is @url{ftp.gnu.org}, but it\nis often very busy.  A list of sites that mirror the software on\n@url{ftp.gnu.org} is available by anonymous ftp from\n@url{ftp://ftp.gnu.org/pub/gnu/GNUinfo/FTP}.\n\nOctave requires approximately 1.4 GB of disk storage to unpack and\ncompile from source (significantly less, 400 MB, if you don't compile\nwith debugging symbols).  To compile without debugging symbols try the\ncommand\n\n@example\nmake CFLAGS=-O CXXFLAGS=-O LDFLAGS=\n@end example\n\n@noindent\ninstead of just @command{make}.\n\n@item\nIf you encounter errors while compiling Octave, first\nsee @ref{Installation Problems} for a list of\nknown problems and if there is a workaround or solution for\nyour problem.  If not, see\n@ifclear INSTALLONLY\n@ref{Trouble}\n@end ifclear\n@ifset INSTALLONLY\nthe file BUGS\n@end ifset\nfor information about how to report bugs.\n\n@item\nOnce you have successfully compiled Octave, run @code{make install}.\n\nThis will install a copy of Octave, its libraries, and its documentation\nin the destination directory.  As distributed, Octave is installed in\nthe following directories.  In the table below, @var{prefix} defaults to\n@file{/usr/local}, @var{version} stands for the current version number\nof the interpreter, and @var{arch} is the type of computer on which\nOctave is installed (for example, @samp{i586-unknown-gnu}).\n\n@table @file\n@item @var{prefix}/bin\nOctave and other binaries that people will want to run directly.\n\n@item @var{prefix}/lib/octave-@var{version}\nLibraries like liboctave.a and liboctinterp.a.\n\n@item @var{prefix}/octave-@var{version}/include/octave\nInclude files distributed with Octave.\n\n@item @var{prefix}/share\nArchitecture-independent data files.\n\n@item @var{prefix}/share/man/man1\nUnix-style man pages describing Octave.\n\n@item @var{prefix}/share/info\nInfo files describing Octave.\n\n@item @var{prefix}/share/octave/@var{version}/m\nFunction files distributed with Octave.  This includes the Octave\nversion, so that multiple versions of Octave may be installed at the\nsame time.\n\n@item @var{prefix}/libexec/octave/@var{version}/exec/@var{arch}\nExecutables to be run by Octave rather than the user.\n\n@item @var{prefix}/lib/octave/@var{version}/oct/@var{arch}\nObject files that will be dynamically loaded.\n\n@item @var{prefix}/share/octave/@var{version}/imagelib\nImage files that are distributed with Octave.\n@end table\n@end itemize\n\n@node Compiling Octave with 64-bit Indexing\n@section Compiling Octave with 64-bit Indexing\n\nNote: the following only applies to systems that have 64-bit pointers.\nConfiguring Octave with @option{--enable-64} cannot magically make a\n32-bit system have a 64-bit address space.\n\nOn 64-bit systems, Octave is limited to (approximately) the following\narray sizes when using the default 32-bit indexing mode:\n\n@example\n@group\ndouble:         16 GB\nsingle:          8 GB\nuint64, int64:  16 GB\nuint32, int32:   8 GB\nuint16, int16:   4 GB\nuint8, int8:     2 GB\n@end group\n@end example\n\nIn each case, the limit is really (approximately) @math{2^{31}} elements\nbecause of the default type of the value used for indexing arrays\n(signed 32-bit integer, corresponding to the size of a Fortran INTEGER\nvalue).\n\nTrying to create larger arrays will produce the following error:\n\n@example\n@group\noctave:1> a = zeros (1024*1024*1024*3, 1, 'int8');\nerror: memory exhausted or requested size too large\n       for range of Octave's index type --\n       trying to return to prompt\n@end group\n@end example\n\n@noindent\nYou will obtain this error even if your system has enough memory to\ncreate this array (4 GB in the above case).\n\nTo use arrays larger than 2 GB, Octave has to be configured with the\noption @option{--enable-64}.  This option is experimental and you are\nencouraged to submit bug reports if you find a problem.  With this\noption, Octave will use 64-bit integers internally for array dimensions\nand indexing.  However, all numerical libraries used by Octave will\n@strong{also} need to use 64-bit integers for array dimensions and\nindexing.  In most cases, this means they will need to be compiled from\nsource since most (all?) distributions which package these libraries\ncompile them with the default Fortran integer size, which is normally\n32-bits wide.\n\nThe following instructions were tested with the development version of\nOctave and GCC 4.3.4 on an x86_64 Debian system.\n\nThe versions listed below are the versions used for testing.  If newer\nversions of these packages are available, you should try to use them,\nalthough there may be some differences.\n\nAll libraries and header files will be installed in subdirectories of\n@code{$prefix64} (you must choose the location of this directory).\n\n@itemize @bullet\n@item @sc{blas} and @sc{lapack} (@url{http://www.netlib.org/lapack})\n\nReference versions for both libraries are included in the reference\n@sc{lapack} 3.2.1 distribution from @url{netlib.org}.\n\n@itemize @minus\n@item\nCopy the file @file{make.inc.example} and name it @file{make.inc}.\nThe options @option{-fdefault-integer-8} and @option{-fPIC} (on 64-bit\nCPU) have to be added to the variable @code{OPTS} and @code{NOOPT}.\n\n@item\nOnce you have compiled this library make sure that you use it for\ncompiling Suite Sparse and Octave.  In the following we assume that\nyou installed the @sc{lapack} library as $prefix64/lib/liblapack.a.\n@end itemize\n\n@item QRUPDATE (@url{http://sourceforge.net/projects/qrupdate})\n\nIn the @file{Makeconf} file:\n\n@itemize @minus\n@item\nAdd @option{-fdefault-integer-8} to @env{FFLAGS}.\n\n@item\nAdjust the @sc{blas} and @sc{lapack} variables as needed if your 64-bit\naware @sc{blas} and @sc{lapack} libraries are in a non-standard\nlocation.\n\n@item\nSet @env{PREFIX} to the top-level directory of your install tree.\n\n@item\nRun @code{make solib} to make a shared library.\n\n@item\nRun @code{make install} to install the library.\n@end itemize\n\n@item\nSuiteSparse (@url{http://www.cise.ufl.edu/research/sparse/SuiteSparse})\n\nPass the following options to @command{make} to enable 64-bit integers\nfor @sc{blas} library calls.  On 64-bit Windows systems, use\n@code{-DLONGBLAS=\"long long\"} instead.\n\n@example\n@group\nCFLAGS='-DLONGBLAS=long'\nCXXFLAGS='-DLONGBLAS=long'\n@end group\n@end example\n\nThe SuiteSparse makefiles don't generate shared libraries.  On some\nsystems, you can generate them by doing something as simple as\n\n@example\n@group\ntop=$(pwd)\nfor f in *.a; do\n  mkdir tmp\n  cd tmp\n  ar vx ../$f\n  gcc -shared -o ../$@{f%%.a@}.so *.o\n  cd $top\n  rm -rf tmp\ndone\n@end group\n@end example\n\n@noindent\nOther systems may require a different solution.\n\n@item @sc{arpack} (http://forge.scilab.org/index.php/p/arpack-ng/)\n\n@itemize @minus\n@item Add @option{-fdefault-integer-8} to @env{FFLAGS} when running configure.\n\n@item Run @code{make} to build the library.\n\n@item Run @code{make install} to install the library.\n@end itemize\n\n@item ATLAS instead of reference @sc{blas} and @sc{lapack}\n\nSuggestions on how to compile ATLAS would be most welcome.\n\n@item @sc{glpk}\n\n@item Qhull (@url{http://www.qhull.org})\n\nBoth @sc{glpk} and Qhull use @code{int} internally so maximum problem\nsizes may be limited.\n\n@item Octave\n\nOctave's 64-bit index support is activated with the configure option\n@option{--enable-64}.\n\n@example\n@group\n./configure \\\n  LD_LIBRARY_PATH=\"$prefix64/lib\" \\\n  CPPFLAGS=\"-I$prefix64/include\" LDFLAGS=\"-L$prefix64/lib\" \\\n  --enable-64\n@end group\n@end example\n\nYou must ensure that all Fortran sources except those in the\n@file{liboctave/cruft/ranlib} directory are compiled such that INTEGERS are\n8-bytes wide.  If you are using gfortran, the configure script should\nautomatically set the Makefile variable @w{@env{F77_INTEGER_8_FLAG}} to\n@option{-fdefault-integer-8}.  If you are using another compiler, you\nmust set this variable yourself.  You should NOT set this flag in\n@env{FFLAGS}, otherwise the files in @file{liboctave/cruft/ranlib} will be\nmiscompiled.\n\n@item Other dependencies\n\nProbably nothing special needs to be done for the following\ndependencies.  If you discover that something does need to be done,\nplease submit a bug report.\n\n@itemize @minus\n@item pcre\n\n@item zlib\n\n@item hdf5\n\n@item fftw3\n\n@item cURL\n\n@item GraphicsMagick++\n\n@item OpenGL\n\n@item freetype\n\n@item fontconfig\n\n@item fltk\n@end itemize\n\n@end itemize\n\n@node Installation Problems\n@section Installation Problems\n\nThis section contains a list of problems (and some apparent problems\nthat don't really mean anything is wrong) that may show up during\ninstallation of Octave.\n\n@itemize @bullet\n@item\nOn some SCO systems, @code{info} fails to compile if\n@w{@code{HAVE_TERMIOS_H}} is defined in @file{config.h}.  Simply\nremoving the definition from @file{info/config.h} should allow it to\ncompile.\n\n@item\nIf @code{configure} finds @code{dlopen}, @code{dlsym}, @code{dlclose},\nand @code{dlerror}, but not the header file @file{dlfcn.h}, you need to\nfind the source for the header file and install it in the directory\n@file{usr/include}.  This is reportedly a problem with Slackware 3.1.\nFor Linux/GNU systems, the source for @file{dlfcn.h} is in the\n@code{ldso} package.\n\n@item\nBuilding @file{.oct} files doesn't work.\n\nYou should probably have a shared version of @code{libstdc++}.  A patch\nis needed to build shared versions of version 2.7.2 of @code{libstdc++}\non the HP-PA architecture.  You can find the patch at\n@url{ftp://ftp.cygnus.com/pub/g++/libg++-2.7.2-hppa-gcc-fix}.\n\n@item\nOn some DEC alpha systems there may be a problem with the @code{libdxml}\nlibrary, resulting in floating point errors and/or segmentation faults\nin the linear algebra routines called by Octave.  If you encounter such\nproblems, then you should modify the configure script so that\n@w{@code{SPECIAL_MATH_LIB}} is not set to @code{-ldxml}.\n\n@item\nOn FreeBSD systems Octave may hang while initializing some internal\nconstants.  The fix appears to be to use\n\n@example\noptions      GPL_MATH_EMULATE\n@end example\n\n@noindent\nrather than\n\n@example\noptions      MATH_EMULATE\n@end example\n\n@noindent\nin the kernel configuration files (typically found in the directory\n@file{/sys/i386/conf}).  After making this change, you'll need to rebuild\nthe kernel, install it, and reboot.\n\n@item\nIf you encounter errors like\n\n@example\n@group\npassing `void (*)()' as argument 2 of\n  `octave_set_signal_handler(int, void (*)(int))'\n@end group\n@end example\n\n@noindent\nor\n\n@example\n@group\nwarning: ANSI C++ prohibits conversion from `(int)'\n         to `(@dots{})'\n@end group\n@end example\n\n@noindent\nwhile compiling @file{sighandlers.cc}, you may need to edit some files\nin the @code{gcc} include subdirectory to add proper prototypes for\nfunctions there.  For example, Ultrix 4.2 needs proper declarations for\nthe @code{signal} function and the @w{@code{SIG_IGN}} macro in the file\n@file{signal.h}.\n\nOn some systems the @w{@code{SIG_IGN}} macro is defined to be something\nlike this:\n\n@example\n#define  SIG_IGN  (void (*)())1\n@end example\n\n@noindent\nwhen it should really be something like:\n\n@example\n#define  SIG_IGN  (void (*)(int))1\n@end example\n\n@noindent\nto match the prototype declaration for the @code{signal} function.  This\nchange should also be made for the @w{@code{SIG_DFL}} and\n@w{@code{SIG_ERR}} symbols.  It may be necessary to change the\ndefinitions in @file{sys/signal.h} as well.\n\nThe @code{gcc} @code{fixincludes} and @code{fixproto} scripts should\nprobably fix these problems when @code{gcc} installs its modified set of\nheader files, but I don't think that's been done yet.\n\n@strong{You should not change the files in @file{/usr/include}}.  You\ncan find the @code{gcc} include directory tree by running the command\n\n@example\ngcc -print-libgcc-file-name\n@end example\n\n@noindent\nThe directory of @code{gcc} include files normally begins in the same\ndirectory that contains the file @file{libgcc.a}.\n\n@item\nSome of the Fortran subroutines may fail to compile with older versions\nof the Sun Fortran compiler.  If you get errors like\n\n@example\n@group\nzgemm.f:\n        zgemm:\nwarning: unexpected parent of complex expression subtree\nzgemm.f, line 245: warning: unexpected parent of complex\n  expression subtree\nwarning: unexpected parent of complex expression subtree\nzgemm.f, line 304: warning: unexpected parent of complex\n  expression subtree\nwarning: unexpected parent of complex expression subtree\nzgemm.f, line 327: warning: unexpected parent of complex\n  expression subtree\npcc_binval: missing IR_CONV in complex op\nmake[2]: *** [zgemm.o] Error 1\n@end group\n@end example\n\n@noindent\nwhen compiling the Fortran subroutines in the @file{liboctave/cruft}\nsubdirectory, you should either upgrade your compiler or try compiling\nwith optimization turned off.\n\n@item\nOn NeXT systems, if you get errors like this:\n\n@example\n@group\n/usr/tmp/cc007458.s:unknown:Undefined local\n      symbol LBB7656\n/usr/tmp/cc007458.s:unknown:Undefined local\n      symbol LBE7656\n@end group\n@end example\n\n@noindent\nwhen compiling @file{Array.cc} and @file{Matrix.cc}, try recompiling\nthese files without @option{-g}.\n\n@item\nSome people have reported that calls to system() and the pager do not\nwork on SunOS systems.  This is apparently due to having\n@w{@code{G_HAVE_SYS_WAIT}} defined to be 0 instead of 1 when compiling\n@code{libg++}.\n\n@item\nOn systems where the reference @sc{blas} library is used the following\nmatrix-by-vector multiplication incorrectly handles NaN values of the\nform @code{NaN * 0}.\n\n@example\n@group\n[NaN, 1; 0, 0] * [0; 1]\n@result{}\n[ 1\n  0 ]\n\ncorrect result @result{}\n[ NaN\n  0   ]\n@end group\n@end example\n\nInstall a different @sc{blas} library such as OpenBLAS or ATLAS to correct\nthis issue.\n\n@item\nOn NeXT systems, linking to @file{libsys_s.a} may fail to resolve the\nfollowing functions\n\n@example\n@group\n_tcgetattr\n_tcsetattr\n_tcflow\n@end group\n@end example\n\n@noindent\nwhich are part of @file{libposix.a}.  Unfortunately, linking Octave with\n@option{-posix} results in the following undefined symbols.\n\n@example\n@group\n.destructors_used\n.constructors_used\n_objc_msgSend\n_NXGetDefaultValue\n_NXRegisterDefaults\n.objc_class_name_NXStringTable\n.objc_class_name_NXBundle\n@end group\n@end example\n\nOne kluge around this problem is to extract @file{termios.o} from\n@file{libposix.a}, put it in Octave's @file{src} directory, and add it\nto the list of files to link together in the makefile.  Suggestions for\nbetter ways to solve this problem are welcome!\n\n@item\nIf Octave crashes immediately with a floating point exception, it is\nlikely that it is failing to initialize the IEEE floating point values\nfor infinity and NaN.\n\nIf your system actually does support IEEE arithmetic, you should be able\nto fix this problem by modifying the function @code{octave_ieee_init} in\nthe file @file{lo-ieee.cc} to correctly initialize Octave's internal\ninfinity and NaN variables.\n\nIf your system does not support IEEE arithmetic but Octave's configure\nscript incorrectly determined that it does, you can work around the\nproblem by editing the file @file{config.h} to not define\n@w{@code{HAVE_ISINF}}, @w{@code{HAVE_FINITE}}, and\n@w{@code{HAVE_ISNAN}}.\n\nIn any case, please report this as a bug since it might be possible to\nmodify Octave's configuration script to automatically determine the\nproper thing to do.\n\n@item\nIf Octave is unable to find a header file because it is installed in a\nlocation that is not normally searched by the compiler, you can add the\ndirectory to the include search path by specifying (for example)\n@code{CPPFLAGS=-I/some/nonstandard/directory} as an argument to\n@code{configure}.  Other variables that can be specified this way are\n@env{CFLAGS}, @env{CXXFLAGS}, @env{FFLAGS}, and @env{LDFLAGS}.  Passing\nthem as options to the configure script also records them in the\n@file{config.status} file.  By default, @env{CPPFLAGS} and @env{LDFLAGS}\nare empty, @env{CFLAGS} and @env{CXXFLAGS} are set to @qcode{\"-g -O2\"} and\n@env{FFLAGS} is set to @qcode{\"-O\"}.\n\n@end itemize\n",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/Installation-Problems.html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<!-- Created by GNU Texinfo 6.3, http://www.gnu.org/software/texinfo/ -->\n<head>\n<title>GNU Octave: Installation Problems</title>\n\n<meta name=\"description\" content=\"GNU Octave: Installation Problems\">\n<meta name=\"keywords\" content=\"GNU Octave: Installation Problems\">\n<meta name=\"resource-type\" content=\"document\">\n<meta name=\"distribution\" content=\"global\">\n<meta name=\"Generator\" content=\"makeinfo\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link href=\"index.html#Top\" rel=\"start\" title=\"Top\">\n<link href=\"Concept-Index.html#Concept-Index\" rel=\"index\" title=\"Concept Index\">\n<link href=\"index.html#SEC_Contents\" rel=\"contents\" title=\"Table of Contents\">\n<link href=\"Installation.html#Installation\" rel=\"up\" title=\"Installation\">\n<link href=\"Grammar-and-Parser.html#Grammar-and-Parser\" rel=\"next\" title=\"Grammar and Parser\">\n<link href=\"Compiling-Octave-with-64_002dbit-Indexing.html#Compiling-Octave-with-64_002dbit-Indexing\" rel=\"prev\" title=\"Compiling Octave with 64-bit Indexing\">\n<style type=\"text/css\">\n<!--\na.summary-letter {text-decoration: none}\nblockquote.indentedblock {margin-right: 0em}\nblockquote.smallindentedblock {margin-right: 0em; font-size: smaller}\nblockquote.smallquotation {font-size: smaller}\ndiv.display {margin-left: 3.2em}\ndiv.example {margin-left: 3.2em}\ndiv.lisp {margin-left: 3.2em}\ndiv.smalldisplay {margin-left: 3.2em}\ndiv.smallexample {margin-left: 3.2em}\ndiv.smalllisp {margin-left: 3.2em}\nkbd {font-style: oblique}\npre.display {font-family: inherit}\npre.format {font-family: inherit}\npre.menu-comment {font-family: serif}\npre.menu-preformatted {font-family: serif}\npre.smalldisplay {font-family: inherit; font-size: smaller}\npre.smallexample {font-size: smaller}\npre.smallformat {font-family: inherit; font-size: smaller}\npre.smalllisp {font-size: smaller}\nspan.nolinebreak {white-space: nowrap}\nspan.roman {font-family: initial; font-weight: normal}\nspan.sansserif {font-family: sans-serif; font-weight: normal}\nul.no-bullet {list-style: none}\n-->\n</style>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"octave.css\">\n\n\n</head>\n\n<body lang=\"en\">\n<a name=\"Installation-Problems\"></a>\n<div class=\"header\">\n<p>\nPrevious: <a href=\"Compiling-Octave-with-64_002dbit-Indexing.html#Compiling-Octave-with-64_002dbit-Indexing\" accesskey=\"p\" rel=\"prev\">Compiling Octave with 64-bit Indexing</a>, Up: <a href=\"Installation.html#Installation\" accesskey=\"u\" rel=\"up\">Installation</a> &nbsp; [<a href=\"index.html#SEC_Contents\" title=\"Table of contents\" rel=\"contents\">Contents</a>][<a href=\"Concept-Index.html#Concept-Index\" title=\"Index\" rel=\"index\">Index</a>]</p>\n</div>\n<hr>\n<a name=\"Installation-Problems-1\"></a>\n<h3 class=\"section\">E.4 Installation Problems</h3>\n\n<p>This section contains a list of problems (and some apparent problems\nthat don&rsquo;t really mean anything is wrong) that may show up during\ninstallation of Octave.\n</p>\n<ul>\n<li> On some SCO systems, <code>info</code> fails to compile if\n<code><span class=\"nolinebreak\">HAVE_TERMIOS_H</span></code><!-- /@w --> is defined in <samp>config.h</samp>.  Simply\nremoving the definition from <samp>info/config.h</samp> should allow it to\ncompile.\n\n</li><li> If <code>configure</code> finds <code>dlopen</code>, <code>dlsym</code>, <code>dlclose</code>,\nand <code>dlerror</code>, but not the header file <samp>dlfcn.h</samp>, you need to\nfind the source for the header file and install it in the directory\n<samp>usr/include</samp>.  This is reportedly a problem with Slackware 3.1.\nFor Linux/GNU systems, the source for <samp>dlfcn.h</samp> is in the\n<code>ldso</code> package.\n\n</li><li> Building <samp>.oct</samp> files doesn&rsquo;t work.\n\n<p>You should probably have a shared version of <code>libstdc++</code>.  A patch\nis needed to build shared versions of version 2.7.2 of <code>libstdc++</code>\non the HP-PA architecture.  You can find the patch at\n<a href=\"ftp://ftp.cygnus.com/pub/g++/libg++-2.7.2-hppa-gcc-fix\">ftp://ftp.cygnus.com/pub/g++/libg++-2.7.2-hppa-gcc-fix</a>.\n</p>\n</li><li> On some DEC alpha systems there may be a problem with the <code>libdxml</code>\nlibrary, resulting in floating point errors and/or segmentation faults\nin the linear algebra routines called by Octave.  If you encounter such\nproblems, then you should modify the configure script so that\n<code><span class=\"nolinebreak\">SPECIAL_MATH_LIB</span></code><!-- /@w --> is not set to <code>-ldxml</code>.\n\n</li><li> On FreeBSD systems Octave may hang while initializing some internal\nconstants.  The fix appears to be to use\n\n<div class=\"example\">\n<pre class=\"example\">options      GPL_MATH_EMULATE\n</pre></div>\n\n<p>rather than\n</p>\n<div class=\"example\">\n<pre class=\"example\">options      MATH_EMULATE\n</pre></div>\n\n<p>in the kernel configuration files (typically found in the directory\n<samp>/sys/i386/conf</samp>).  After making this change, you&rsquo;ll need to rebuild\nthe kernel, install it, and reboot.\n</p>\n</li><li> If you encounter errors like\n\n<div class=\"example\">\n<pre class=\"example\">passing `void (*)()' as argument 2 of\n  `octave_set_signal_handler(int, void (*)(int))'\n</pre></div>\n\n<p>or\n</p>\n<div class=\"example\">\n<pre class=\"example\">warning: ANSI C++ prohibits conversion from `(int)'\n         to `(&hellip;)'\n</pre></div>\n\n<p>while compiling <samp>sighandlers.cc</samp>, you may need to edit some files\nin the <code>gcc</code> include subdirectory to add proper prototypes for\nfunctions there.  For example, Ultrix 4.2 needs proper declarations for\nthe <code>signal</code> function and the <code><span class=\"nolinebreak\">SIG_IGN</span></code><!-- /@w --> macro in the file\n<samp>signal.h</samp>.\n</p>\n<p>On some systems the <code><span class=\"nolinebreak\">SIG_IGN</span></code><!-- /@w --> macro is defined to be something\nlike this:\n</p>\n<div class=\"example\">\n<pre class=\"example\">#define  SIG_IGN  (void (*)())1\n</pre></div>\n\n<p>when it should really be something like:\n</p>\n<div class=\"example\">\n<pre class=\"example\">#define  SIG_IGN  (void (*)(int))1\n</pre></div>\n\n<p>to match the prototype declaration for the <code>signal</code> function.  This\nchange should also be made for the <code><span class=\"nolinebreak\">SIG_DFL</span></code><!-- /@w --> and\n<code><span class=\"nolinebreak\">SIG_ERR</span></code><!-- /@w --> symbols.  It may be necessary to change the\ndefinitions in <samp>sys/signal.h</samp> as well.\n</p>\n<p>The <code>gcc</code> <code>fixincludes</code> and <code>fixproto</code> scripts should\nprobably fix these problems when <code>gcc</code> installs its modified set of\nheader files, but I don&rsquo;t think that&rsquo;s been done yet.\n</p>\n<p><strong>You should not change the files in <samp>/usr/include</samp></strong>.  You\ncan find the <code>gcc</code> include directory tree by running the command\n</p>\n<div class=\"example\">\n<pre class=\"example\">gcc -print-libgcc-file-name\n</pre></div>\n\n<p>The directory of <code>gcc</code> include files normally begins in the same\ndirectory that contains the file <samp>libgcc.a</samp>.\n</p>\n</li><li> Some of the Fortran subroutines may fail to compile with older versions\nof the Sun Fortran compiler.  If you get errors like\n\n<div class=\"example\">\n<pre class=\"example\">zgemm.f:\n        zgemm:\nwarning: unexpected parent of complex expression subtree\nzgemm.f, line 245: warning: unexpected parent of complex\n  expression subtree\nwarning: unexpected parent of complex expression subtree\nzgemm.f, line 304: warning: unexpected parent of complex\n  expression subtree\nwarning: unexpected parent of complex expression subtree\nzgemm.f, line 327: warning: unexpected parent of complex\n  expression subtree\npcc_binval: missing IR_CONV in complex op\nmake[2]: *** [zgemm.o] Error 1\n</pre></div>\n\n<p>when compiling the Fortran subroutines in the <samp>liboctave/cruft</samp>\nsubdirectory, you should either upgrade your compiler or try compiling\nwith optimization turned off.\n</p>\n</li><li> On NeXT systems, if you get errors like this:\n\n<div class=\"example\">\n<pre class=\"example\">/usr/tmp/cc007458.s:unknown:Undefined local\n      symbol LBB7656\n/usr/tmp/cc007458.s:unknown:Undefined local\n      symbol LBE7656\n</pre></div>\n\n<p>when compiling <samp>Array.cc</samp> and <samp>Matrix.cc</samp>, try recompiling\nthese files without <samp>-g</samp>.\n</p>\n</li><li> Some people have reported that calls to system() and the pager do not\nwork on SunOS systems.  This is apparently due to having\n<code><span class=\"nolinebreak\">G_HAVE_SYS_WAIT</span></code><!-- /@w --> defined to be 0 instead of 1 when compiling\n<code>libg++</code>.\n\n</li><li> On systems where the reference <small>BLAS</small> library is used the following\nmatrix-by-vector multiplication incorrectly handles NaN values of the\nform <code>NaN * 0</code>.\n\n<div class=\"example\">\n<pre class=\"example\">[NaN, 1; 0, 0] * [0; 1]\n&rArr;\n[ 1\n  0 ]\n\ncorrect result &rArr;\n[ NaN\n  0   ]\n</pre></div>\n\n<p>Install a different <small>BLAS</small> library such as OpenBLAS or ATLAS to correct\nthis issue.\n</p>\n</li><li> On NeXT systems, linking to <samp>libsys_s.a</samp> may fail to resolve the\nfollowing functions\n\n<div class=\"example\">\n<pre class=\"example\">_tcgetattr\n_tcsetattr\n_tcflow\n</pre></div>\n\n<p>which are part of <samp>libposix.a</samp>.  Unfortunately, linking Octave with\n<samp>-posix</samp> results in the following undefined symbols.\n</p>\n<div class=\"example\">\n<pre class=\"example\">.destructors_used\n.constructors_used\n_objc_msgSend\n_NXGetDefaultValue\n_NXRegisterDefaults\n.objc_class_name_NXStringTable\n.objc_class_name_NXBundle\n</pre></div>\n\n<p>One kluge around this problem is to extract <samp>termios.o</samp> from\n<samp>libposix.a</samp>, put it in Octave&rsquo;s <samp>src</samp> directory, and add it\nto the list of files to link together in the makefile.  Suggestions for\nbetter ways to solve this problem are welcome!\n</p>\n</li><li> If Octave crashes immediately with a floating point exception, it is\nlikely that it is failing to initialize the IEEE floating point values\nfor infinity and NaN.\n\n<p>If your system actually does support IEEE arithmetic, you should be able\nto fix this problem by modifying the function <code>octave_ieee_init</code> in\nthe file <samp>lo-ieee.cc</samp> to correctly initialize Octave&rsquo;s internal\ninfinity and NaN variables.\n</p>\n<p>If your system does not support IEEE arithmetic but Octave&rsquo;s configure\nscript incorrectly determined that it does, you can work around the\nproblem by editing the file <samp>config.h</samp> to not define\n<code><span class=\"nolinebreak\">HAVE_ISINF</span></code><!-- /@w -->, <code><span class=\"nolinebreak\">HAVE_FINITE</span></code><!-- /@w -->, and\n<code><span class=\"nolinebreak\">HAVE_ISNAN</span></code><!-- /@w -->.\n</p>\n<p>In any case, please report this as a bug since it might be possible to\nmodify Octave&rsquo;s configuration script to automatically determine the\nproper thing to do.\n</p>\n</li><li> If Octave is unable to find a header file because it is installed in a\nlocation that is not normally searched by the compiler, you can add the\ndirectory to the include search path by specifying (for example)\n<code>CPPFLAGS=-I/some/nonstandard/directory</code> as an argument to\n<code>configure</code>.  Other variables that can be specified this way are\n<code>CFLAGS</code>, <code>CXXFLAGS</code>, <code>FFLAGS</code>, and <code>LDFLAGS</code>.  Passing\nthem as options to the configure script also records them in the\n<samp>config.status</samp> file.  By default, <code>CPPFLAGS</code> and <code>LDFLAGS</code>\nare empty, <code>CFLAGS</code> and <code>CXXFLAGS</code> are set to <code>&quot;-g -O2&quot;</code> and\n<code>FFLAGS</code> is set to <code>&quot;-O&quot;</code>.\n\n</li></ul>\n\n\n<hr>\n<div class=\"header\">\n<p>\nPrevious: <a href=\"Compiling-Octave-with-64_002dbit-Indexing.html#Compiling-Octave-with-64_002dbit-Indexing\" accesskey=\"p\" rel=\"prev\">Compiling Octave with 64-bit Indexing</a>, Up: <a href=\"Installation.html#Installation\" accesskey=\"u\" rel=\"up\">Installation</a> &nbsp; [<a href=\"index.html#SEC_Contents\" title=\"Table of contents\" rel=\"contents\">Contents</a>][<a href=\"Concept-Index.html#Concept-Index\" title=\"Index\" rel=\"index\">Index</a>]</p>\n</div>\n\n\n\n</body>\n</html>\n",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/Running-Configure-and-Make.html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<!-- Created by GNU Texinfo 6.3, http://www.gnu.org/software/texinfo/ -->\n<head>\n<title>GNU Octave: Running Configure and Make</title>\n\n<meta name=\"description\" content=\"GNU Octave: Running Configure and Make\">\n<meta name=\"keywords\" content=\"GNU Octave: Running Configure and Make\">\n<meta name=\"resource-type\" content=\"document\">\n<meta name=\"distribution\" content=\"global\">\n<meta name=\"Generator\" content=\"makeinfo\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<link href=\"index.html#Top\" rel=\"start\" title=\"Top\">\n<link href=\"Concept-Index.html#Concept-Index\" rel=\"index\" title=\"Concept Index\">\n<link href=\"index.html#SEC_Contents\" rel=\"contents\" title=\"Table of Contents\">\n<link href=\"Installation.html#Installation\" rel=\"up\" title=\"Installation\">\n<link href=\"Compiling-Octave-with-64_002dbit-Indexing.html#Compiling-Octave-with-64_002dbit-Indexing\" rel=\"next\" title=\"Compiling Octave with 64-bit Indexing\">\n<link href=\"External-Packages.html#External-Packages\" rel=\"prev\" title=\"External Packages\">\n<style type=\"text/css\">\n<!--\na.summary-letter {text-decoration: none}\nblockquote.indentedblock {margin-right: 0em}\nblockquote.smallindentedblock {margin-right: 0em; font-size: smaller}\nblockquote.smallquotation {font-size: smaller}\ndiv.display {margin-left: 3.2em}\ndiv.example {margin-left: 3.2em}\ndiv.lisp {margin-left: 3.2em}\ndiv.smalldisplay {margin-left: 3.2em}\ndiv.smallexample {margin-left: 3.2em}\ndiv.smalllisp {margin-left: 3.2em}\nkbd {font-style: oblique}\npre.display {font-family: inherit}\npre.format {font-family: inherit}\npre.menu-comment {font-family: serif}\npre.menu-preformatted {font-family: serif}\npre.smalldisplay {font-family: inherit; font-size: smaller}\npre.smallexample {font-size: smaller}\npre.smallformat {font-family: inherit; font-size: smaller}\npre.smalllisp {font-size: smaller}\nspan.nolinebreak {white-space: nowrap}\nspan.roman {font-family: initial; font-weight: normal}\nspan.sansserif {font-family: sans-serif; font-weight: normal}\nul.no-bullet {list-style: none}\n-->\n</style>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"octave.css\">\n\n\n</head>\n\n<body lang=\"en\">\n<a name=\"Running-Configure-and-Make\"></a>\n<div class=\"header\">\n<p>\nNext: <a href=\"Compiling-Octave-with-64_002dbit-Indexing.html#Compiling-Octave-with-64_002dbit-Indexing\" accesskey=\"n\" rel=\"next\">Compiling Octave with 64-bit Indexing</a>, Previous: <a href=\"Build-Dependencies.html#Build-Dependencies\" accesskey=\"p\" rel=\"prev\">Build Dependencies</a>, Up: <a href=\"Installation.html#Installation\" accesskey=\"u\" rel=\"up\">Installation</a> &nbsp; [<a href=\"index.html#SEC_Contents\" title=\"Table of contents\" rel=\"contents\">Contents</a>][<a href=\"Concept-Index.html#Concept-Index\" title=\"Index\" rel=\"index\">Index</a>]</p>\n</div>\n<hr>\n<a name=\"Running-Configure-and-Make-1\"></a>\n<h3 class=\"section\">E.2 Running Configure and Make</h3>\n\n<ul>\n<li> Run the shell script <samp>configure</samp>.  This will determine the features\nyour system has (or doesn&rsquo;t have) and create a file named\n<samp>Makefile</samp> from each of the files named <samp>Makefile.in</samp>.\n\n<p>Here is a summary of the configure options that are most frequently used\nwhen building Octave:\n</p>\n<dl compact=\"compact\">\n<dt><code>--help</code></dt>\n<dd><p>Print a summary of the options recognized by the configure script.\n</p>\n</dd>\n<dt><code>--prefix=<var>prefix</var></code></dt>\n<dd><p>Install Octave in subdirectories below <var>prefix</var>.  The default value\nof <var>prefix</var> is <samp>/usr/local</samp>.\n</p>\n</dd>\n<dt><code>--srcdir=<var>dir</var></code></dt>\n<dd><p>Look for Octave sources in the directory <var>dir</var>.\n</p>\n</dd>\n<dt><code>--enable-64</code></dt>\n<dd><p>This is an <strong>experimental</strong> option to enable Octave to use 64-bit\nintegers for array dimensions and indexing on 64-bit platforms.  You\nprobably don&rsquo;t want to use this option unless you know what you are\ndoing.  See <a href=\"Compiling-Octave-with-64_002dbit-Indexing.html#Compiling-Octave-with-64_002dbit-Indexing\">Compiling Octave with 64-bit Indexing</a>, for more details\nabout building Octave with this option.\n</p>\n</dd>\n<dt><code>--enable-bounds-check</code></dt>\n<dd><p>Enable bounds checking for indexing operators in the internal array\nclasses.  This option is primarily used for debugging Octave.  Building\nOctave with this option has a negative impact on performance and is not\nrecommended for general use.\n</p>\n</dd>\n<dt><code>--disable-docs</code></dt>\n<dd><p>Disable building all forms of the documentation (Info, PDF, HTML).  The\ndefault is to build documentation, but your system will need functioning\nTexinfo and TeX installs for this to succeed.\n</p>\n</dd>\n<dt><code>--enable-float-truncate</code></dt>\n<dd><p>This option allows for truncation of intermediate floating point results\nin calculations.  It is only necessary for certain platforms.\n</p>\n</dd>\n<dt><code>--enable-readline</code></dt>\n<dd><p>Use the readline library to provide for editing of the command line in\nterminal environments.  This option is on by default.\n</p>\n</dd>\n<dt><code>--enable-shared</code></dt>\n<dd><p>Create shared libraries (this is the default).  If you are planning to\nuse the dynamic loading features, you will probably want to use this\noption.  It will make your <samp>.oct</samp> files much smaller and on some\nsystems it may be necessary to build shared libraries in order to use\ndynamically linked functions.\n</p>\n<p>You may also want to build a shared version of <code>libstdc++</code>, if your\nsystem doesn&rsquo;t already have one.\n</p>\n</dd>\n<dt><code>--enable-dl</code></dt>\n<dd><p>Use <code>dlopen</code> and friends to make Octave capable of dynamically\nlinking externally compiled functions (this is the default if\n<samp>--enable-shared</samp> is specified).  This option only works on\nsystems that actually have these functions.  If you plan on using this\nfeature, you should probably also use <samp>--enable-shared</samp> to reduce\nthe size of your <samp>.oct</samp> files.\n</p>\n</dd>\n<dt><code>--with-blas=&lt;lib&gt;</code></dt>\n<dd><p>By default, configure looks for the best <small>BLAS</small> matrix libraries on\nyour system, including optimized implementations such as the free ATLAS\n3.0, as well as vendor-tuned libraries.  (The use of an optimized\n<small>BLAS</small> will generally result in several-times faster matrix\noperations.)  Use this option to specify a particular <small>BLAS</small> library\nthat Octave should use.\n</p>\n</dd>\n<dt><code>--with-lapack=&lt;lib&gt;</code></dt>\n<dd><p>By default, configure looks for the best <small>LAPACK</small> matrix libraries on\nyour system, including optimized implementations such as the free ATLAS\n3.0, as well as vendor-tuned libraries.  (The use of an optimized\n<small>LAPACK</small> will generally result in several-times faster matrix\noperations.)  Use this option to specify a particular <small>LAPACK</small>\nlibrary that Octave should use.\n</p>\n</dd>\n<dt><code>--with-magick=&lt;lib&gt;</code></dt>\n<dd><p>Select the library to use for image I/O.  The two possible values are\n<code>&quot;GraphicsMagick&quot;</code> (default) or <code>&quot;ImageMagick&quot;</code>.\n</p>\n</dd>\n<dt><code>--with-sepchar=&lt;char&gt;</code></dt>\n<dd><p>Use &lt;char&gt; as the path separation character.  This option can help when\nrunning Octave on non-Unix systems.\n</p>\n</dd>\n<dt><code>--without-amd</code></dt>\n<dd><p>Don&rsquo;t use <small>AMD</small>, disable some sparse matrix functionality.\n</p>\n</dd>\n<dt><code>--without-camd</code></dt>\n<dd><p>Don&rsquo;t use <small>CAMD</small>, disable some sparse matrix functionality.\n</p>\n</dd>\n<dt><code>--without-colamd</code></dt>\n<dd><p>Don&rsquo;t use <small>COLAMD</small>, disable some sparse matrix functionality.\n</p>\n</dd>\n<dt><code>--without-ccolamd</code></dt>\n<dd><p>Don&rsquo;t use <small>CCOLAMD</small>, disable some sparse matrix functionality.\n</p>\n</dd>\n<dt><code>--without-cholmod</code></dt>\n<dd><p>Don&rsquo;t use <small>CHOLMOD</small>, disable some sparse matrix functionality.\n</p>\n</dd>\n<dt><code>--without-curl</code></dt>\n<dd><p>Don&rsquo;t use the cURL library, disable the ftp objects, <code>urlread</code> and\n<code>urlwrite</code> functions.\n</p>\n</dd>\n<dt><code>--without-cxsparse</code></dt>\n<dd><p>Don&rsquo;t use <small>CXSPARSE</small>, disable some sparse matrix functionality.\n</p>\n</dd>\n<dt><code>--without-fftw3</code></dt>\n<dd><p>Use the included <small>FFTPACK</small> library for computing Fast Fourier\nTransforms instead of the <small>FFTW3</small> library.\n</p>\n</dd>\n<dt><code>--without-fftw3f</code></dt>\n<dd><p>Use the included <small>FFTPACK</small> library for computing Fast Fourier\nTransforms instead of the <small>FFTW3</small> library when operating on single\nprecision (float) values.\n</p>\n</dd>\n<dt><code>--without-glpk</code></dt>\n<dd><p>Don&rsquo;t use the <small>GLPK</small> library for linear programming.\n</p>\n</dd>\n<dt><code>--without-hdf5</code></dt>\n<dd><p>Don&rsquo;t use the <small>HDF5</small> library, disable reading and writing of\n<small>HDF5</small> files.\n</p>\n</dd>\n<dt><code>--without-opengl</code></dt>\n<dd><p>Don&rsquo;t use OpenGL, disable native graphics toolkit for plotting.  You\nwill need <code>gnuplot</code> installed in order to make plots.\n</p>\n</dd>\n<dt><code>--without-qhull</code></dt>\n<dd><p>Don&rsquo;t use Qhull, disable <code>delaunay</code>, <code>convhull</code>, and\nrelated functions.\n</p>\n</dd>\n<dt><code>--without-qrupdate</code></dt>\n<dd><p>Don&rsquo;t use <small>QRUPDATE</small>, disable QR and Cholesky update functions.\n</p>\n</dd>\n<dt><code>--without-umfpack</code></dt>\n<dd><p>Don&rsquo;t use <small>UMFPACK</small>, disable some sparse matrix functionality.\n</p>\n</dd>\n<dt><code>--without-zlib</code></dt>\n<dd><p>Don&rsquo;t use the zlib library, disable data file compression and support\nfor recent MAT file formats.\n</p>\n</dd>\n<dt><code>--without-framework-carbon</code></dt>\n<dd><p>Don&rsquo;t use framework Carbon headers, libraries, or specific source code\neven if the configure test succeeds (the default is to use Carbon\nframework if available).  This is a platform specific configure option\nfor Mac systems.\n</p>\n</dd>\n<dt><code>--without-framework-opengl</code></dt>\n<dd><p>Don&rsquo;t use framework OpenGL headers, libraries, or specific source code\neven if the configure test succeeds.  If this option is given then\nOpenGL headers and libraries in standard system locations are tested\n(the default value is <samp>--with-framework-opengl</samp>).  This is a\nplatform specific configure option for Mac systems.\n</p>\n</dd>\n</dl>\n\n<p>See the file <samp>INSTALL</samp> for more general information about the\ncommand line options used by configure.  That file also contains\ninstructions for compiling in a directory other than the one where\nthe source is located.\n</p>\n</li><li> Run make.\n\n<p>You will need a recent version of GNU Make as Octave relies on certain\nfeatures not generally available in all versions of make.  Modifying\nOctave&rsquo;s makefiles to work with other make programs is probably not\nworth your time; instead, we simply recommend installing GNU Make.\n</p>\n<p>There are currently three options for plotting in Octave: the external\nprogram gnuplot, the internal graphics engine using OpenGL coupled with\neither FLTK or Qt widgets.  Gnuplot is a command-driven interactive\nfunction plotting program.\n</p>\n<p>To compile Octave, you will need a recent version of <code>g++</code> or other\nANSI C++ compiler.  In addition, you will need a Fortran 77 compiler or\n<code>f2c</code>.  If you use <code>f2c</code>, you will need a script like\n<code>fort77</code> that works like a normal Fortran compiler by combining\n<code>f2c</code> with your C compiler in a single script.\n</p>\n<p>If you plan to modify the parser you will also need GNU <code>bison</code> and\n<code>flex</code>.  If you modify the documentation, you will need GNU\nTexinfo.\n</p>\n<p>GNU Make, <code>gcc</code> (and <code>libstdc++</code>), <code>gnuplot</code>,\n<code>bison</code>, <code>flex</code>, and Texinfo are all available from many\nanonymous ftp archives.  The primary site is <a href=\"ftp.gnu.org\">ftp.gnu.org</a>, but it\nis often very busy.  A list of sites that mirror the software on\n<a href=\"ftp.gnu.org\">ftp.gnu.org</a> is available by anonymous ftp from\n<a href=\"ftp://ftp.gnu.org/pub/gnu/GNUinfo/FTP\">ftp://ftp.gnu.org/pub/gnu/GNUinfo/FTP</a>.\n</p>\n<p>Octave requires approximately 1.4 GB of disk storage to unpack and\ncompile from source (significantly less, 400 MB, if you don&rsquo;t compile\nwith debugging symbols).  To compile without debugging symbols try the\ncommand\n</p>\n<div class=\"example\">\n<pre class=\"example\">make CFLAGS=-O CXXFLAGS=-O LDFLAGS=\n</pre></div>\n\n<p>instead of just <code>make</code>.\n</p>\n</li><li> If you encounter errors while compiling Octave, first\nsee <a href=\"Installation-Problems.html#Installation-Problems\">Installation Problems</a> for a list of\nknown problems and if there is a workaround or solution for\nyour problem.  If not, see\n<a href=\"Trouble.html#Trouble\">Trouble</a>\nfor information about how to report bugs.\n\n</li><li> Once you have successfully compiled Octave, run <code>make install</code>.\n\n<p>This will install a copy of Octave, its libraries, and its documentation\nin the destination directory.  As distributed, Octave is installed in\nthe following directories.  In the table below, <var>prefix</var> defaults to\n<samp>/usr/local</samp>, <var>version</var> stands for the current version number\nof the interpreter, and <var>arch</var> is the type of computer on which\nOctave is installed (for example, &lsquo;<samp>i586-unknown-gnu</samp>&rsquo;).\n</p>\n<dl compact=\"compact\">\n<dt><samp><var>prefix</var>/bin</samp></dt>\n<dd><p>Octave and other binaries that people will want to run directly.\n</p>\n</dd>\n<dt><samp><var>prefix</var>/lib/octave-<var>version</var></samp></dt>\n<dd><p>Libraries like liboctave.a and liboctinterp.a.\n</p>\n</dd>\n<dt><samp><var>prefix</var>/octave-<var>version</var>/include/octave</samp></dt>\n<dd><p>Include files distributed with Octave.\n</p>\n</dd>\n<dt><samp><var>prefix</var>/share</samp></dt>\n<dd><p>Architecture-independent data files.\n</p>\n</dd>\n<dt><samp><var>prefix</var>/share/man/man1</samp></dt>\n<dd><p>Unix-style man pages describing Octave.\n</p>\n</dd>\n<dt><samp><var>prefix</var>/share/info</samp></dt>\n<dd><p>Info files describing Octave.\n</p>\n</dd>\n<dt><samp><var>prefix</var>/share/octave/<var>version</var>/m</samp></dt>\n<dd><p>Function files distributed with Octave.  This includes the Octave\nversion, so that multiple versions of Octave may be installed at the\nsame time.\n</p>\n</dd>\n<dt><samp><var>prefix</var>/libexec/octave/<var>version</var>/exec/<var>arch</var></samp></dt>\n<dd><p>Executables to be run by Octave rather than the user.\n</p>\n</dd>\n<dt><samp><var>prefix</var>/lib/octave/<var>version</var>/oct/<var>arch</var></samp></dt>\n<dd><p>Object files that will be dynamically loaded.\n</p>\n</dd>\n<dt><samp><var>prefix</var>/share/octave/<var>version</var>/imagelib</samp></dt>\n<dd><p>Image files that are distributed with Octave.\n</p></dd>\n</dl>\n</li></ul>\n\n<hr>\n<div class=\"header\">\n<p>\nNext: <a href=\"Compiling-Octave-with-64_002dbit-Indexing.html#Compiling-Octave-with-64_002dbit-Indexing\" accesskey=\"n\" rel=\"next\">Compiling Octave with 64-bit Indexing</a>, Previous: <a href=\"Build-Dependencies.html#Build-Dependencies\" accesskey=\"p\" rel=\"prev\">Build Dependencies</a>, Up: <a href=\"Installation.html#Installation\" accesskey=\"u\" rel=\"up\">Installation</a> &nbsp; [<a href=\"index.html#SEC_Contents\" title=\"Table of contents\" rel=\"contents\">Contents</a>][<a href=\"Concept-Index.html#Concept-Index\" title=\"Index\" rel=\"index\">Index</a>]</p>\n</div>\n\n\n\n</body>\n</html>\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/applications-system.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/graphic_logo_NewsDockWidget.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/go-last.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/letter_logo_WorkspaceView.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/document-open.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/graphic_logo_HistoryDockWidget.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/document-new.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/edit-redo.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/graphic_logo_TerminalDockWidget.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/graphic_logo_WorkspaceView.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/bp-next.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/folder.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/document-save-as.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/db-step-out.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/bp-toggle.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/edit-copy.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/view-refresh.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/db-stop.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/widget-close-light.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/letter_logo_ReleaseWidget.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/edit-find.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/letter_logo_DocumentationDockWidget.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/graphic_logo_FilesDockWidget.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/edit-find-replace.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/document-save.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/edit-cut.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/edit-delete.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/letter_logo_HistoryDockWidget.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/go-first.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/edit-paste.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/letter_logo_TerminalDockWidget.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/document-print.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/folder-new.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/db-cont.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/edit-undo.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/widget-dock-light.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/graphic_logo_FileEditor.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/system-run.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/zoom-in.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/widget-dock.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/widget-undock-light.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/letter_logo_FileEditor.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/letter_logo_FilesDockWidget.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/preferences-system.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/letter_logo_NewsDockWidget.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/user-home.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/graphic_logo_ReleaseWidget.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/widget-undock.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/zoom-out.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/graphic_logo_DocumentationDockWidget.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/widget-close.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/bp-rm-all.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/db-step-in.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/go-up.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/db-step.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/src/icons/bp-prev.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/graphics/images/rotate.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/graphics/images/pan.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/graphics/images/zoom-in.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/graphics/images/zoom-out.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/libgui/graphics/images/select.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/etc/icons/octave-logo.ico",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/etc/icons/octave-logo-22.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/etc/icons/octave-logo-32.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/etc/icons/octave-logo-128.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/etc/icons/octave-logo-24.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/etc/icons/octave-logo-16.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/etc/icons/octave-sombrero.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/etc/icons/octave-logo-48.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/etc/icons/octave-logo-256.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/etc/icons/octave-logo-512.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/etc/icons/octave-logo-64.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/scripts/image/default.img",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/scripts/java/octave.jar",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/build-aux/OctJavaQry.class",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/hist.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/delaunay.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/gplot.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/delaunay.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/plot3.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/voronoi.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/spmatrix.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/hist.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/inpolygon.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/interpderiv2.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/interpn.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.ps",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave_logo.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/splinefit3.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/splinefit2.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/voronoi.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/splinefit6.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/grid.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/splinefit1.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/spcholperm.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.dvi",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/grid.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/splinefit3.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/splinefit2.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/spchol.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/extended.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/splinefit4.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/errorbar.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/spcholperm.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/plot3.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/triplot.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/spchol.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/splinefit4.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/spmatrix.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/gplot.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/interpft.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/polar.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/interpderiv1.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/interpderiv2.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/plot.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/splinefit1.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/mesh.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/errorbar.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/mesh.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/extended.eps",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/interpderiv1.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/triplot.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/inpolygon.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/polar.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/griddata.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/extended.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/convhull.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/plot.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/convhull.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/splinefit6.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/griddata.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/interpft.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/interpn.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/gplot.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/delaunay.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/plot3.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/hist.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/inpolygon.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/splinefit3.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/splinefit2.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/voronoi.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/spcholperm.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/grid.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/spchol.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/extended.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/splinefit4.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/spmatrix.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/interpft.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/interpderiv2.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/plot.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/splinefit1.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/mesh.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/errorbar.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/interpderiv1.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/triplot.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/polar.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/convhull.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/splinefit6.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/griddata.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/interpreter/octave.html/interpn.png",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/liboctave/liboctave.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/liboctave/liboctave.dvi",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/refcard/refcard-letter.dvi",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/refcard/refcard-letter.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/refcard/refcard-a4.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/refcard/refcard-legal.dvi",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/refcard/refcard-a4.dvi",
        "/tmp/vanessa/spack-stage/spack-stage-octave-4.2.1-xe46yvhi63j2pim24axrjnksycrlbpue/spack-src/doc/refcard/refcard-legal.pdf"
    ],
    "total_files": 6609
}