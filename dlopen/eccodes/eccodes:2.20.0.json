{
    "matches": {
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/cmake/ecbuild_add_library.cmake": "# (C) Copyright 2011- ECMWF.\n#\n# This software is licensed under the terms of the Apache Licence Version 2.0\n# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.\n# In applying this licence, ECMWF does not waive the privileges and immunities\n# granted to it by virtue of its status as an intergovernmental organisation nor\n# does it submit to any jurisdiction.\n\n##############################################################################\n#.rst:\n#\n# ecbuild_add_library\n# ===================\n#\n# Add a library with a given list of source files. ::\n#\n#   ecbuild_add_library( TARGET <name>\n#                        SOURCES <source1> [<source2> ...]\n#                        [ SOURCES_GLOB <glob1> [<glob2> ...] ]\n#                        [ SOURCES_EXCLUDE_REGEX <regex1> [<regex2> ...] ]\n#                        [ TYPE SHARED|STATIC|MODULE|OBJECT|INTERFACE ]\n#                        [ OBJECTS <obj1> [<obj2> ...] ]\n#                        [ TEMPLATES <template1> [<template2> ...] ]\n#                        [ LIBS <library1> [<library2> ...] ]\n#                        [ PRIVATE_LIBS <library1> [<library2> ...] ]\n#                        [ PUBLIC_LIBS <library1> [<library2> ...] ]\n#                        [ INCLUDES <path1> [<path2> ...] ]\n#                        [ PRIVATE_INCLUDES <path1> [<path2> ...] ]\n#                        [ PUBLIC_INCLUDES <path1> [<path2> ...] ]\n#                        [ DEFINITIONS <definition1> [<definition2> ...] ]\n#                        [ PRIVATE_DEFINITIONS <definition1> [<definition2> ...] ]\n#                        [ PUBLIC_DEFINITIONS <definition1> [<definition2> ...] ]\n#                        [ PERSISTENT <file1> [<file2> ...] ]\n#                        [ GENERATED <file1> [<file2> ...] ]\n#                        [ DEPENDS <target1> [<target2> ...] ]\n#                        [ CONDITION <condition> ]\n#                        [ PROPERTIES <prop1> <val1> [<prop2> <val2> ...] ]\n#                        [ NOINSTALL ]\n#                        [ HEADER_DESTINATION <path> ]\n#                        [ INSTALL_HEADERS LISTED|ALL ]\n#                        [ INSTALL_HEADERS_LIST <header1> [<header2> ...] ]\n#                        [ INSTALL_HEADERS_REGEX <pattern> ]\n#                        [ VERSION <version> | AUTO_VERSION ]\n#                        [ SOVERSION <soversion> | AUTO_SOVERSION ]\n#                        [ CFLAGS <flag1> [<flag2> ...] ]\n#                        [ CXXFLAGS <flag1> [<flag2> ...] ]\n#                        [ FFLAGS <flag1> [<flag2> ...] ]\n#                        [ LINKER_LANGUAGE <lang> ]\n#                        [ OUTPUT_NAME <name> ] )\n#\n# Options\n# -------\n#\n# TARGET : required\n#   target name\n#\n# SOURCES : required\n#   list of source files\n#\n# TYPE : optional\n#   library type, one of:\n#\n#   :SHARED:    libraries are linked dynamically and loaded at runtime\n#   :STATIC:    archives of object files for use when linking other targets.\n#   :MODULE:    plugins that are not linked into other targets but may be loaded\n#               dynamically at runtime using dlopen-like functionality\n#   :OBJECT:    files are just compiled into objects\n#   :INTERFACE: no direct build output, but can be used to aggregate headers,\n#               compilation flags and libraries\n#\n# SOURCES_GLOB : optional\n#   search pattern to find source files to compile (note: not recommend according to CMake guidelines)\n#   it is usually better to explicitly list the source files in the CMakeList.txt\n#\n# SOURCES_EXCLUDE_REGEX : optional\n#   search pattern to exclude source files from compilation, applies o the results of SOURCES_GLOB\n#\n# OBJECTS : optional\n#   list of object libraries to add to this target\n#\n# TEMPLATES : optional\n#   list of files specified as SOURCES which are not to be compiled separately\n#   (these are commonly template implementation files included in a header)\n#\n# LIBS : (DEPRECATED) optional\n#   list of libraries to link against (CMake targets or external libraries),\n#   behaves as PUBLIC_LIBS\n#   Please use PRIVATE_LIBS or PUBLIC_LIBS or CMake command ``target_link_libraries`` instead\n#\n# PRIVATE_LIBS : optional\n#   list of libraries to link against (CMake targets or external libraries),\n#   they will not be exported\n#\n# PUBLIC_LIBS : optional\n#   list of libraries to link against (CMake targets or external libraries),\n#   they will be exported\n#\n# INCLUDES : (DEPRECATED) optional\n#   list of paths to add to include directories, behaves as PUBLIC_INCLUDES\n#   Please use PUBLIC_INCLUDES or PRIVATE_INCLUDES or CMake command ``target_include_directories`` instead\n#\n# PUBLIC_INCLUDES : optional\n#   list of paths to add to include directories which will be publicly exported to other targets and projects\n#\n# PRIVATE_INCLUDES : optional\n#   list of paths to add to include directories which won't be exported beyond this target\n#\n# DEFINITIONS : (DEPRECATED) optional\n#   list of definitions to add to preprocessor defines\n#   behaves as PRIVATE_DEFINITIONS\n#   Please use PRIVATE_DEFINITIONS or PUBLIC_DEFINITIONS or CMake command ``target_compile_definitions`` instead\n#\n# PRIVATE_DEFINITIONS : optional\n#   list of definitions to add to preprocessor defines that will not be exported beyond this target\n#\n# PUBLIC_DEFINITIONS : optional\n#   list of definitions to add to preprocessor defines that will be publicly exported to other targets and projects\n#\n# PERSISTENT : optional\n#   list of persistent layer object files\n#\n# GENERATED : optional\n#   list of files to mark as generated (sets GENERATED source file property)\n#\n# DEPENDS : optional\n#   list of targets to be built before this target\n#\n# CONDITION : optional\n#   conditional expression which must evaluate to true for this target to be\n#   built (must be valid in a CMake ``if`` statement)\n#\n# PROPERTIES : optional\n#   custom properties to set on the target\n#\n# NOINSTALL : optional\n#   do not install the library\n#\n# HEADER_DESTINATION\n#   directory to install headers (if not specified, INSTALL_INCLUDE_DIR is used)\n#   Note: this directory will automatically be added to target_include_directories\n#\n# INSTALL_HEADERS : optional\n#   specify which header files to install:\n#\n#   :LISTED: install header files listed as SOURCES\n#   :ALL:    install all header files ending in .h, .hh, .hpp, .H\n#\n# INSTALL_HEADERS_LIST : optional\n#   list of extra headers to install\n#\n# INSTALL_HEADERS_REGEX : optional\n#   regular expression to match extra headers to install\n#\n# VERSION : optional, AUTO_VERSION or LIBS_VERSION is used if not specified\n#   build version of the library\n#\n# AUTO_VERSION : optional, ignored if VERSION is specified\n#   use MAJOR.MINOR package version as build version of the library\n#\n# SOVERSION : optional, AUTO_SOVERSION or LIBS_SOVERSION is used if not specified\n#   ABI version of the library\n#\n# AUTO_SOVERSION : optional, ignored if SOVERSION is specified\n#   use MAJOR package version as ABI version of the library\n#\n# CFLAGS : optional\n#   list of C compiler flags to use for all C source files\n#\n#   See usage note below.\n#\n# CXXFLAGS : optional\n#   list of C++ compiler flags to use for all C++ source files\n#\n#   See usage note below.\n#\n# FFLAGS : optional\n#   list of Fortran compiler flags to use for all Fortran source files\n#\n#   See usage note below.\n#\n# LINKER_LANGUAGE : optional\n#   sets the LINKER_LANGUAGE property on the target\n#\n# OUTPUT_NAME : optional\n#   sets the OUTPUT_NAME property on the target\n#\n# Usage\n# -----\n#\n# The ``CFLAGS``, ``CXXFLAGS`` and ``FFLAGS`` options apply the given compiler\n# flags to all C, C++ and Fortran sources passed to this command, respectively.\n# If any two ``ecbuild_add_executable``, ``ecbuild_add_library`` or\n# ``ecbuild_add_test`` commands are passed the *same* source file and each sets\n# a different value for the compiler flags to be applied to that file (including\n# when one command adds flags and another adds none), then the two commands\n# will be in conflict and the result may not be as expected.\n#\n# For this reason it is recommended not to use the ``*FLAGS`` options when\n# multiple targets share the same source files, unless the exact same flags are\n# applied to those sources by each relevant command.\n#\n# Care should also be taken to ensure that these commands are not passed source\n# files which are not required to build the target, if those sources are also\n# passed to other commands which set different compiler flags.\n#\n##############################################################################\n\nfunction( ecbuild_add_library_impl )\n\n  set( options NOINSTALL AUTO_VERSION AUTO_SOVERSION )\n  set( single_value_args TARGET TYPE COMPONENT INSTALL_HEADERS\n                         INSTALL_HEADERS_REGEX LINKER_LANGUAGE\n                         HEADER_DESTINATION VERSION SOVERSION OUTPUT_NAME )\n  set( multi_value_args  SOURCES SOURCES_GLOB SOURCES_EXCLUDE_REGEX OBJECTS\n                         TEMPLATES LIBS PRIVATE_LIBS PUBLIC_LIBS INCLUDES\n                         PRIVATE_INCLUDES PUBLIC_INCLUDES DEPENDS PERSISTENT\n                         DEFINITIONS PRIVATE_DEFINITIONS PUBLIC_DEFINITIONS\n                         INSTALL_HEADERS_LIST CFLAGS CXXFLAGS FFLAGS\n                         GENERATED CONDITION PROPERTIES )\n\n  cmake_parse_arguments( _PAR \"${options}\" \"${single_value_args}\" \"${multi_value_args}\"  ${_FIRST_ARG} ${ARGN} )\n\n  if(_PAR_UNPARSED_ARGUMENTS)\n    ecbuild_critical(\"Unknown keywords given to ecbuild_add_library(): \\\"${_PAR_UNPARSED_ARGUMENTS}\\\"\")\n  endif()\n\n  if( NOT _PAR_TARGET  )\n    ecbuild_critical(\"The call to ecbuild_add_library() doesn't specify the TARGET.\")\n  endif()\n\n  if( NOT _PAR_TYPE MATCHES \"INTERFACE\" )\n    if( NOT _PAR_SOURCES AND NOT _PAR_OBJECTS AND NOT _PAR_SOURCES_GLOB )\n      ecbuild_critical(\"The call to ecbuild_add_library() specifies neither SOURCES nor OBJECTS nor SOURCES_GLOB\")\n    endif()\n  endif()\n\n  ### conditional build\n  ecbuild_evaluate_dynamic_condition( _PAR_CONDITION _${_PAR_TARGET}_condition )\n\n  if( _${_PAR_TARGET}_condition )\n\n    # defines the type of library\n    if( DEFINED _PAR_TYPE )\n      # checks that is either SHARED or STATIC or MODULE\n      if( NOT _PAR_TYPE MATCHES \"STATIC\" AND\n          NOT _PAR_TYPE MATCHES \"SHARED\" AND\n          NOT _PAR_TYPE MATCHES \"OBJECT\" AND\n          NOT _PAR_TYPE MATCHES \"MODULE\" AND\n          NOT _PAR_TYPE MATCHES \"INTERFACE\" )\n        ecbuild_critical( \"library type must be one of [ STATIC | SHARED | MODULE | OBJECT | INTERFACE ]\" )\n      endif()\n      ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): library type is ${_PAR_TYPE}\")\n    endif()\n\n    # insert already compiled objects (from OBJECT libraries)\n    unset( _all_objects )\n    foreach( _obj ${_PAR_OBJECTS} )\n      list( APPEND _all_objects $<TARGET_OBJECTS:${_obj}> )\n    endforeach()\n\n    # glob sources\n    unset( _glob_srcs )\n    foreach( pattern ${_PAR_SOURCES_GLOB} )\n      ecbuild_list_add_pattern( LIST _glob_srcs GLOB \"${pattern}\" )\n    endforeach()\n\n    foreach( pattern ${_PAR_SOURCES_EXCLUDE_REGEX} )\n      ecbuild_list_exclude_pattern( LIST _glob_srcs REGEX \"${pattern}\" )\n    endforeach()\n    list( APPEND _PAR_SOURCES ${_glob_srcs} )\n\n    if( ECBUILD_LIST_SOURCES )\n      ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): sources ${_PAR_SOURCES}\")\n    endif()\n\n    # add persistent layer files\n    ecbuild_add_persistent( SRC_LIST _PAR_SOURCES FILES ${_PAR_PERSISTENT} NAMESPACE \"${PERSISTENT_NAMESPACE}\" )\n\n    # remove templates from compilation sources\n    if( DEFINED _PAR_TEMPLATES )\n      ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): removing ${_PAR_TEMPLATES} from sources\")\n      list( REMOVE_ITEM _PAR_SOURCES ${_PAR_TEMPLATES} )\n      add_custom_target( ${_PAR_TARGET}_templates SOURCES ${_PAR_TEMPLATES} )\n    endif()\n\n    # Separate sources\n    if( _PAR_SOURCES )\n      ecbuild_separate_sources( TARGET ${_PAR_TARGET} SOURCES ${_PAR_SOURCES} )\n    endif()\n\n    # Purge the sources list for interface libraries (now that they have been filtered)\n    if( _PAR_TYPE MATCHES \"INTERFACE\" )\n      set( _PAR_SOURCES \"\" )\n    endif()\n\n    if( ${_PAR_TARGET}_cuda_srcs AND CUDA_FOUND )\n      if( NOT DEFINED CUDA_LINK_LIBRARIES_KEYWORD )\n        set ( CUDA_LINK_LIBRARIES_KEYWORD PRIVATE )\n      endif()\n      cuda_add_library( ${_PAR_TARGET} ${_PAR_TYPE} ${_PAR_SOURCES}  ${_all_objects} )\n    else()\n      add_library( ${_PAR_TARGET} ${_PAR_TYPE} ${_PAR_SOURCES}  ${_all_objects} )\n    endif()\n    # ecbuild_echo_target( ${_PAR_TARGET} )\n\n    # Set custom properties\n    if( ${_PAR_PROPERTIES} )\n      set_target_properties( ${_PAR_TARGET} PROPERTIES ${_PAR_PROPERTIES} )\n    endif()\n\n    # set OUTPUT_NAME\n\n    if( DEFINED _PAR_OUTPUT_NAME )\n      ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): set OUTPUT_NAME to ${_PAR_OUTPUT_NAME}\")\n      set_target_properties( ${_PAR_TARGET} PROPERTIES OUTPUT_NAME ${_PAR_OUTPUT_NAME} )\n    endif()\n\n    # add extra dependencies\n    if( DEFINED _PAR_DEPENDS)\n      ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): add dependency on ${_PAR_DEPENDS}\")\n      add_dependencies( ${_PAR_TARGET} ${_PAR_DEPENDS} )\n    endif()\n\n    # For interface libraries, there is no build requirement, therefore only\n    # the INTERFACE properties should be populated\n    set( _PUBLIC_INTF \"PUBLIC\" )\n    if( _PAR_TYPE MATCHES \"INTERFACE\" )\n      set( _PUBLIC_INTF \"INTERFACE\" )\n    endif()\n\n    # takes a list of possible includes LIST and a INTF parameter\n    function(__addDeps)\n      set( options )\n      set( single_value_args TYPE INTF )\n      set( multi_value_args  LIST )\n\n      cmake_parse_arguments( _p \"${options}\" \"${single_value_args}\" \"${multi_value_args}\" ${ARGN} )\n\n      if( \"${_p_TYPE}\" STREQUAL LIBS )\n        list(REMOVE_ITEM _p_LIST debug)\n        list(REMOVE_ITEM _p_LIST optimized)\n      endif()\n\n      ecbuild_filter_list(${_p_TYPE} LIST ${_p_LIST} LIST_INCLUDE deps LIST_EXCLUDE skipped_deps)\n\n      if( \"${_p_INTF}\" STREQUAL \"LEGACY\" )\n        if(ECBUILD_2_COMPAT_DEPRECATE)\n          ecbuild_deprecate(\"ecbuild_add_library(${_PAR_TARGET}): the usage of ${_p_TYPE} is deprecated. Use PUBLIC_${_p_TYPE} or PRIVATE_${_p_TYPE}.\")\n        endif()\n        set(_p_INTF ${_PUBLIC_INTF})\n      endif()\n\n\n      if( \"${_p_TYPE}\" STREQUAL LIBS )\n        target_link_libraries( ${_PAR_TARGET} ${_p_INTF} ${deps} )\n        ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): linking with [${deps}] ${_p_INTF}\")\n        ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): [${skipped_deps}] not found - not linking ${_p_INTF}\")\n      else()\n        target_include_directories( ${_PAR_TARGET} ${_p_INTF} ${deps} )\n        ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): add [${deps}] to include_directories ${_p_INTF}\")\n        ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): [${skipped_deps}] not found - not adding to include_directories ${_p_INTF}\")\n      endif()\n    endfunction()\n\n    # add the link libraries\n    if( DEFINED _PAR_LIBS )\n      __addDeps(TYPE LIBS LIST ${_PAR_LIBS} INTF LEGACY)\n    endif()\n\n    # add the private link libraries\n    if( DEFINED _PAR_PRIVATE_LIBS )\n      __addDeps(TYPE LIBS LIST ${_PAR_PRIVATE_LIBS} INTF PRIVATE)\n    endif()\n\n    # add the public link libraries\n    if( DEFINED _PAR_PUBLIC_LIBS )\n      __addDeps(TYPE LIBS LIST ${_PAR_PUBLIC_LIBS} INTF ${_PUBLIC_INTF})\n    endif()\n\n    # add include dirs if defined\n    if( DEFINED _PAR_INCLUDES )\n      __addDeps(TYPE INCLUDES LIST ${_PAR_INCLUDES} INTF LEGACY)\n    endif()\n\n    # add private include dirs if defined\n    if( DEFINED _PAR_PRIVATE_INCLUDES )\n      __addDeps(TYPE INCLUDES LIST ${_PAR_PRIVATE_INCLUDES} INTF PRIVATE)\n    endif()\n\n    # add public include dirs if defined\n    if( DEFINED _PAR_PUBLIC_INCLUDES )\n      __addDeps(TYPE INCLUDES LIST ${_PAR_PUBLIC_INCLUDES} INTF ${_PUBLIC_INTF})\n    endif()\n\n    # FIX: Cray compiler PIC option is not detected by CMake\n\n    if( NOT _PAR_TYPE MATCHES \"INTERFACE\" )\n      get_property( _target_pic TARGET ${_PAR_TARGET} PROPERTY POSITION_INDEPENDENT_CODE )\n      if( _target_pic )\n        if( \"${CMAKE_C_COMPILER_ID}\" STREQUAL \"Cray\" )\n          set( _PAR_CFLAGS \"-fPIC -h PIC ${_PAR_CFLAGS}\" )\n        endif()\n        if( \"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Cray\" )\n          set( _PAR_CXXFLAGS \"-fPIC -h PIC ${_PAR_CXXFLAGS}\" )\n        endif()\n        if( \"${CMAKE_Fortran_COMPILER_ID}\" STREQUAL \"Cray\" )\n          set( _PAR_FFLAGS \"-fPIC -h PIC ${_PAR_FFLAGS}\" )\n        endif()\n      endif()\n    endif()\n\n    # define VERSION if requested\n    if( DEFINED _PAR_VERSION )\n      ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): set build version to ${_PAR_VERSION}\")\n      set_target_properties( ${_PAR_TARGET} PROPERTIES VERSION \"${_PAR_VERSION}\" )\n    else()\n      if( _PAR_AUTO_VERSION OR LIBS_VERSION MATCHES \"[Aa][Uu][Tt][Oo]\")\n        ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): set build version to ${${PROJECT_NAME}_VERSION_MAJOR}.${${PROJECT_NAME}_VERSION_MINOR} (auto)\")\n        set_target_properties( ${_PAR_TARGET} PROPERTIES VERSION \"${${PROJECT_NAME}_VERSION_MAJOR}.${${PROJECT_NAME}_VERSION_MINOR}\" )\n      elseif( DEFINED LIBS_VERSION )\n        ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): set build version to ${LIBS_VERSION}\")\n        set_target_properties( ${_PAR_TARGET} PROPERTIES VERSION \"${LIBS_VERSION}\" )\n      endif()\n    endif()\n\n    # define SOVERSION if requested\n    if( DEFINED _PAR_SOVERSION )\n      ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): set ABI version to ${_PAR_SOVERSION}\")\n      set_target_properties( ${_PAR_TARGET} PROPERTIES SOVERSION \"${_PAR_SOVERSION}\" )\n    else()\n      if( _PAR_AUTO_SOVERSION OR LIBS_SOVERSION MATCHES \"[Aa][Uu][Tt][Oo]\")\n        ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): set ABI version to ${${PROJECT_NAME}_VERSION_MAJOR} (auto)\")\n        set_target_properties( ${_PAR_TARGET} PROPERTIES SOVERSION \"${${PROJECT_NAME}_MAJOR_VERSION}\" )\n      elseif( DEFINED LIBS_SOVERSION )\n        ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): set ABI version to ${LIBS_SOVERSION}\")\n        set_target_properties( ${_PAR_TARGET} PROPERTIES SOVERSION \"${LIBS_SOVERSION}\" )\n      endif()\n    endif()\n\n    # Override compilation flags on a per source file basis\n    ecbuild_target_flags( ${_PAR_TARGET} \"${_PAR_CFLAGS}\" \"${_PAR_CXXFLAGS}\" \"${_PAR_FFLAGS}\" )\n\n    if( DEFINED _PAR_GENERATED )\n      ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): mark as generated ${_PAR_GENERATED}\")\n      set_source_files_properties( ${_PAR_GENERATED} PROPERTIES GENERATED 1 )\n    endif()\n\n    # set linker language\n    if( DEFINED _PAR_LINKER_LANGUAGE )\n      ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): using linker language ${_PAR_LINKER_LANGUAGE}\")\n      set_target_properties( ${_PAR_TARGET} PROPERTIES LINKER_LANGUAGE ${_PAR_LINKER_LANGUAGE} )\n      if( ECBUILD_${_PAR_LINKER_LANGUAGE}_IMPLICIT_LINK_LIBRARIES )\n        target_link_libraries( ${_PAR_TARGET} PRIVATE ${ECBUILD_${_PAR_LINKER_LANGUAGE}_IMPLICIT_LINK_LIBRARIES} )\n      endif()\n    endif()\n\n    if( NOT _PAR_TYPE MATCHES \"OBJECT\" AND ECBUILD_IMPLICIT_LINK_LIBRARIES )\n      target_link_libraries( ${_PAR_TARGET} PRIVATE ${ECBUILD_IMPLICIT_LINK_LIBRARIES} )\n    endif()\n\n    # Publish the relevant include directories for the headers\n    if(ECBUILD_2_COMPAT)\n      target_include_directories( ${_PAR_TARGET} ${_PUBLIC_INTF} $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> )\n      get_property(_incdirs DIRECTORY PROPERTY INCLUDE_DIRECTORIES)\n      string( TOUPPER \"${PROJECT_NAME}\" PNAME )\n      if( ${PNAME}_INCLUDE_DIRS )\n        foreach( incdir ${${PNAME}_INCLUDE_DIRS} )\n            list( APPEND _incdirs ${incdir} )\n        endforeach()\n      endif()\n      list( REMOVE_DUPLICATES _incdirs )\n      foreach(incdir ${_incdirs})\n        if(NOT incdir MATCHES \"^\\\\$<\")\n          file(RELATIVE_PATH _rel_inc ${PROJECT_SOURCE_DIR} \"${incdir}\")\n          if(NOT _rel_inc MATCHES \"^\\\\.\\\\./\")\n            target_include_directories( ${_PAR_TARGET} ${_PUBLIC_INTF} $<BUILD_INTERFACE:${incdir}> )\n          endif()\n          file(RELATIVE_PATH _rel_inc ${PROJECT_BINARY_DIR} \"${incdir}\")\n          if(NOT _rel_inc MATCHES \"^\\\\.\\\\./\")\n            target_include_directories( ${_PAR_TARGET} ${_PUBLIC_INTF} $<BUILD_INTERFACE:${incdir}> )\n          endif()\n        endif()\n      endforeach()\n    endif()\n\n    # installation (except for OBJECT libraries)\n\n    if( NOT _PAR_NOINSTALL AND NOT _PAR_TYPE MATCHES \"OBJECT\" )\n      ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): installing to ${INSTALL_LIB_DIR}\")\n\n      # and associate with defined component\n      #            if( DEFINED _PAR_COMPONENT )\n      #                set( COMPONENT_DIRECTIVE \"${_PAR_COMPONENT}\" )\n      #            else()\n      #                set( COMPONENT_DIRECTIVE \"${PROJECT_NAME}\" )\n      #            endif()\n\n      install( TARGETS ${_PAR_TARGET}\n        EXPORT  ${PROJECT_NAME}-targets\n        RUNTIME DESTINATION ${INSTALL_BIN_DIR}\n        LIBRARY DESTINATION ${INSTALL_LIB_DIR}\n        ARCHIVE DESTINATION ${INSTALL_LIB_DIR} )\n      #              COMPONENT ${COMPONENT_DIRECTIVE} )\n\n      if(ECBUILD_INSTALL_LIBRARY_HEADERS)\n\n        if( _PAR_HEADER_DESTINATION )\n          set( _h_destination \"${_PAR_HEADER_DESTINATION}\" )\n        else()\n          set( _h_destination \"${INSTALL_INCLUDE_DIR}\" )\n        endif()\n\n        if( _PAR_INSTALL_HEADERS )\n\n          if( _PAR_INSTALL_HEADERS MATCHES \"LISTED\" )\n            foreach( file ${${_PAR_TARGET}_h_srcs} )\n              get_filename_component( _file_dir ${file} PATH )\n              install( FILES ${file} DESTINATION \"${_h_destination}/${_file_dir}\" )\n            endforeach()\n            if( DEFINED _PAR_TEMPLATES )\n              foreach( file ${_PAR_TEMPLATES} )\n                get_filename_component( _file_dir ${file} PATH )\n                install( FILES ${file} DESTINATION \"${_h_destination}/${_file_dir}\" )\n              endforeach()\n            endif()\n            if( DEFINED _PAR_PERSISTENT )\n              foreach( file ${_PAR_PERSISTENT} )\n                get_filename_component( _file_dir ${file} PATH )\n                get_filename_component( _file_we  ${file} NAME_WE )\n                set( pfile \"${CMAKE_CURRENT_BINARY_DIR}/${_file_dir}/${_file_we}.b\" )\n                install( FILES ${pfile} DESTINATION \"${_h_destination}/${_file_dir}\" )\n              endforeach()\n            endif()\n          endif()\n          if( _PAR_INSTALL_HEADERS MATCHES \"ALL\" )\n            install( DIRECTORY ./  DESTINATION ${_h_destination} FILES_MATCHING PATTERN \"*.h\" )\n            install( DIRECTORY ./  DESTINATION ${_h_destination} FILES_MATCHING PATTERN \"*.hh\" )\n            install( DIRECTORY ./  DESTINATION ${_h_destination} FILES_MATCHING PATTERN \"*.hpp\" )\n            install( DIRECTORY ./  DESTINATION ${_h_destination} FILES_MATCHING PATTERN \"*.H\" )\n            install( DIRECTORY ./  DESTINATION ${_h_destination} FILES_MATCHING PATTERN \"*.tcc\" )\n            install( DIRECTORY ./  DESTINATION ${_h_destination} FILES_MATCHING PATTERN \"*.txx\" )\n            install( DIRECTORY ./  DESTINATION ${_h_destination} FILES_MATCHING PATTERN \"*.tcc\" )\n          endif()\n        endif()\n\n        if( DEFINED _PAR_INSTALL_HEADERS_LIST )\n          install( FILES ${_PAR_INSTALL_HEADERS_LIST} DESTINATION ${_h_destination} )\n        endif()\n\n        if( DEFINED _PAR_INSTALL_HEADERS_REGEX )\n          install( DIRECTORY ./  DESTINATION ${_h_destination} FILES_MATCHING PATTERN \"${_PAR_INSTALL_HEADERS_REGEX}\")\n        endif()\n\n        target_include_directories(${_PAR_TARGET} ${_PUBLIC_INTF} $<INSTALL_INTERFACE:${INSTALL_INCLUDE_DIR}>)\n        if( _PAR_HEADER_DESTINATION )\n          target_include_directories(${_PAR_TARGET} ${_PUBLIC_INTF} $<INSTALL_INTERFACE:${_PAR_HEADER_DESTINATION}> )\n        endif()\n      endif()\n\n      # set build location\n\n      if( NOT _PAR_TYPE MATCHES \"INTERFACE\" )\n        set_target_properties( ${_PAR_TARGET} PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib )\n        set_target_properties( ${_PAR_TARGET} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib )\n        if( EC_OS_NAME MATCHES \"windows\" )\n          set_target_properties( ${_PAR_TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin )\n        endif()\n      endif()\n\n      # export location of target to other projects -- must be exactly after setting the build location (see previous 3 commands)\n\n      export( TARGETS ${_PAR_TARGET} APPEND FILE \"${PROJECT_TARGETS_FILE}\" )\n\n    endif()\n\n    # add definitions to compilation\n    if( DEFINED _PAR_PUBLIC_DEFINITIONS )\n      target_compile_definitions(${_PAR_TARGET} PUBLIC ${_PAR_PUBLIC_DEFINITIONS})\n      ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): adding PUBLIC definitions ${_PAR_PUBLIC_DEFINITIONS}\")\n    endif()\n    if( DEFINED _PAR_PRIVATE_DEFINITIONS )\n      target_compile_definitions(${_PAR_TARGET} PRIVATE ${_PAR_PRIVATE_DEFINITIONS})\n      ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): adding PRIVATE definitions ${_PAR_PRIVATE_DEFINITIONS}\")\n    endif()\n    if( DEFINED _PAR_DEFINITIONS )\n      if( _PAR_TYPE MATCHES \"INTERFACE\" )\n        target_compile_definitions(${_PAR_TARGET} PUBLIC ${_PAR_DEFINITIONS})\n      else()\n        target_compile_definitions(${_PAR_TARGET} PRIVATE ${_PAR_DEFINITIONS})\n      endif()\n      ecbuild_debug(\"ecbuild_add_library(${_PAR_TARGET}): adding definitions ${_PAR_DEFINITIONS}\")\n    endif()\n\n    # make sure target is removed before - some problems with AIX\n    if( NOT _PAR_TYPE MATCHES \"OBJECT\" AND NOT _PAR_TYPE MATCHES \"INTERFACE\" )\n      add_custom_command( TARGET ${_PAR_TARGET} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E remove $<TARGET_FILE:${_PAR_TARGET}> )\n    endif()\n\n    # append to the list of this project targets\n    if( NOT ECBUILD_2_COMPAT OR NOT _PAR_TYPE MATCHES \"INTERFACE\" )\n      set( ${PROJECT_NAME}_ALL_LIBS ${${PROJECT_NAME}_ALL_LIBS} ${_PAR_TARGET} CACHE INTERNAL \"\" )\n    endif()\n\n  endif()\n\n  # mark source files as used\n  ecbuild_declare_project_files( ${_PAR_SOURCES} )\n  if( DEFINED _PAR_TEMPLATES )\n    ecbuild_declare_project_files( ${_PAR_TEMPLATES} )\n  endif()\n\nendfunction( ecbuild_add_library_impl  )\n\n##############################################################################\n# auxiliary macro for adding a library\n##############################################################################\n\nfunction( ecbuild_add_library )\n\n  set( options  )\n  set( single_value_args TARGET TYPE )\n  set( multi_value_args )\n\n  cmake_parse_arguments( _p \"${options}\" \"${single_value_args}\" \"${multi_value_args}\"  ${_FIRST_ARG} ${ARGN} )\n\n  if( DEFINED _p_TYPE ) # don't do anything if TYPE was specified\n\n    if( _p_TYPE MATCHES \"[Bb][Oo][Tt][Hh]\" ) # build both types\n\n      ecbuild_add_library_impl( TARGET ${_p_TARGET}        TYPE SHARED ${_p_UNPARSED_ARGUMENTS} )\n      ecbuild_add_library_impl( TARGET ${_p_TARGET}-static TYPE STATIC ${_p_UNPARSED_ARGUMENTS} OUTPUT_NAME ${_p_TARGET} DEPENDS ${_p_TARGET} )\n\n    else()\n\n      ecbuild_add_library_impl( ${ARGV} )\n\n    endif()\n\n  else()\n\n    if( NOT DEFINED _p_TARGET )\n      ecbuild_critical(\"The call to ecbuild_add_library() doesn't specify the TARGET.\")\n    else()\n\n      if( BUILD_SHARED_LIBS MATCHES \"[Bb][Oo][Tt][Hh]\" ) # build both types\n\n        ecbuild_add_library_impl( TARGET ${_p_TARGET}        TYPE SHARED ${_p_UNPARSED_ARGUMENTS} )\n        ecbuild_add_library_impl( TARGET ${_p_TARGET}-static TYPE STATIC ${_p_UNPARSED_ARGUMENTS} DEPENDS ${_p_TARGET} )\n\n        # If the library is built conditionally the target might not exist\n        if ( TARGET ${_p_TARGET}-static )\n          set_target_properties( ${_p_TARGET}-static PROPERTIES OUTPUT_NAME ${_p_TARGET} )\n        endif()\n\n      else()\n\n        ecbuild_add_library_impl( ${ARGV} )\n\n      endif()\n\n    endif()\n\n  endif()\n\nendfunction()\n"
    },
    "skipped": [
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/ifs_samples/grib1/sh_ml.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/ifs_samples/grib1/sh_sfc.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/ifs_samples/grib1/gg_ml.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/ifs_samples/grib1/gg_sfc.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/ifs_samples/grib1_mlgrib2_ieee32/sh_ml.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/ifs_samples/grib1_mlgrib2_ieee32/sh_sfc.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/ifs_samples/grib1_mlgrib2_ieee32/gg_ml.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/ifs_samples/grib1_mlgrib2_ieee32/gg_sfc.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/ifs_samples/grib1_mlgrib2_ieee64/sh_ml.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/ifs_samples/grib1_mlgrib2_ieee64/sh_sfc.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/ifs_samples/grib1_mlgrib2_ieee64/gg_ml.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/ifs_samples/grib1_mlgrib2_ieee64/gg_sfc.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/ifs_samples/grib1_mlgrib2/sh_ml.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/ifs_samples/grib1_mlgrib2/sh_sfc.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/ifs_samples/grib1_mlgrib2/gg_ml.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/ifs_samples/grib1_mlgrib2/gg_sfc.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/ftv2plastnode.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/ftv2splitbar.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/tab_h.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/sync_off.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/ftv2link.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/ftv2doc.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/bdwn.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/ftv2vertline.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/ftv2pnode.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/open.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/ftv2blank.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/ftv2mo.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/tab_b.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/nav_g.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/ftv2mlastnode.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/ftv2node.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/ftv2ns.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/ftv2folderclosed.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/tab_a.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/closed.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/tab_s.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/nav_h.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/bc_s.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/doxygen.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/ftv2cl.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/ftv2mnode.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/nav_f.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/ftv2folderopen.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/sync_on.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/ftv2lastnode.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/search/search_r.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/search/search_m.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/search/close.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/search/mag_sel.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/html/search/search_l.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_512_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/GRIB2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_320_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_2000_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_512_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/budg.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_640_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_ml_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/regular_ll_pl_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_ml_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/polar_stereographic_sfc_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/clusters_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_2000_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_256_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/sh_pl_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_sfc_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_160_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_256_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/polar_stereographic_sfc_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_1024_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_128_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_sfc_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/regular_gg_ml_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/regular_ll_sfc_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_96_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/rotated_gg_ml_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_1280_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/gg_sfc_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_200_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_200_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/rotated_gg_pl_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_ll_sfc_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_200_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/rotated_gg_ml_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/regular_gg_pl_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/diag.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/regular_gg_sfc_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/rotated_ll_sfc_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_80_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_96_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_160_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_512_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/rotated_ll_pl_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_256_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/sh_sfc_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/BUFR4_local.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/regular_ll_sfc_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/sh_sfc_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_80_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/GRIB1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/BUFR3_local.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/BUFR4.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_400_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/regular_gg_pl_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_ml_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/rotated_ll_sfc_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_2000_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_256_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/regular_ll_pl_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_ll_sfc_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/BUFR4_local_satellite.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/BUFR3_local_satellite.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_32_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/rotated_gg_pl_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_320_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_48_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_sfc_jpeg_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_80_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/regular_gg_sfc_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_sfc_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_48_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_48_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_ml_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_sfc_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_1280_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_sfc_jpeg_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/regular_gg_ml_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_128_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_128_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_48_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_640_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_64_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_32_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_1024_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_160_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_1280_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_32_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_200_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_640_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/polar_stereographic_pl_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_96_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/rotated_gg_sfc_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_1024_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/sh_ml_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_1280_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/BUFR3.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_32_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_64_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_2000_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_128_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/sh_pl_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_400_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/lambert_bf_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_512_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_80_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_320_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_320_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_1024_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/sh_ml_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_640_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/rotated_gg_sfc_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/gg_sfc_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/rotated_ll_pl_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_400_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_rotated_gg_pl_96_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_400_grib2.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/reduced_gg_pl_160_grib1.tmpl",
        "/var/tmp/sochat1/spack-stage/spack-stage-eccodes-2.20.0-k2bfsn7xbzbpyyxlgyho374cwsrysnvq/spack-src/samples/polar_stereographic_pl_grib2.tmpl"
    ],
    "total_files": 23497
}