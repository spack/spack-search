{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-tpm2-tss-2.4.2-ljxccjrnvtunhp4l4uabku6enzs53d4j/spack-src/Makefile-test.am": "# SPDX-License-Identifier: BSD-2-Clause\n# Copyright (c) 2015 - 2018 Intel Corporation\n# Copyright (c) 2018 Fraunhofer SIT sponsored by Infineon Technologies AG\n# All rights reserved.\n\nTESTS_CFLAGS = $(AM_CFLAGS) $(LIBCRYPTO_CFLAGS) -I$(srcdir)/src/tss2-mu \\\n    -I$(srcdir)/src/tss2-sys -I$(srcdir)/src/tss2-esys  -I$(srcdir)/src/tss2-fapi \\\n    -Wno-unused-parameter -Wno-missing-field-initializers\nTESTS_LDADD = $(check_LTLIBRARIES) $(lib_LTLIBRARIES) \\\n    $(LIBCRYPTO_LIBS) $(libutil)\n\ncheck_LTLIBRARIES =\n# test harness configuration\nTEST_EXTENSIONS = .int\nif TESTPTPM\nINT_LOG_COMPILER = $(srcdir)/script/int-log-compiler-ptpm.sh\nINT_LOG_FLAGS = --ptpm=$(PTPM)\nelse\nINT_LOG_COMPILER = $(srcdir)/script/int-log-compiler.sh\nendif\nEXTRA_DIST += $(srcdir)/script/int-log-compiler.sh $(srcdir)/script/int-log-compiler-ptpm.sh \\\n              $(srcdir)/script/ekca/create_ca.sh  $(srcdir)/script/ekca/ek.cnf \\\n              $(srcdir)/script/ekca/intermed-ca.cnf $(srcdir)/script/ekca/root-ca.cnf\nAM_TESTS_ENVIRONMENT = PATH=\"$(PATH)\"\n\ncheck-programs: $(check_PROGRAMS)\n\ncheck_PROGRAMS = $(TESTS_UNIT) $(TESTS_INTEGRATION)\nTESTS = $(TESTS_UNIT) $(TESTS_INTEGRATION)\n\nif ENABLE_INTEGRATION\ncheck_PROGRAMS += test/helper/tpm_startup\ntest_helper_tpm_startup_CFLAGS = $(TESTS_CFLAGS) -I$(srcdir)/test/integration\ntest_helper_tpm_startup_LDFLAGS = $(TESTS_LDFLAGS)\ntest_helper_tpm_startup_LDADD = $(TESTS_LDADD)\n\ncheck_PROGRAMS += test/helper/tpm_transientempty\ntest_helper_tpm_transientempty_CFLAGS = $(TESTS_CFLAGS) -I$(srcdir)/test/integration\ntest_helper_tpm_transientempty_LDFLAGS = $(TESTS_LDFLAGS)\ntest_helper_tpm_transientempty_LDADD = $(TESTS_LDADD)\n\ncheck_PROGRAMS += test/helper/tpm_dumpstate\ntest_helper_tpm_dumpstate_CFLAGS = $(TESTS_CFLAGS) -I$(srcdir)/test/integration\ntest_helper_tpm_dumpstate_LDFLAGS = $(TESTS_LDFLAGS)\ntest_helper_tpm_dumpstate_LDADD = $(TESTS_LDADD)\n\ncheck_PROGRAMS += test/helper/tpm_getek\ntest_helper_tpm_getek_CFLAGS = $(TESTS_CFLAGS) -I$(srcdir)/test/integration\ntest_helper_tpm_getek_LDFLAGS = $(TESTS_LDFLAGS) -lcrypto\ntest_helper_tpm_getek_LDADD = $(TESTS_LDADD)\n\ncheck_PROGRAMS += test/helper/tpm_getek_ecc\ntest_helper_tpm_getek_ecc_CFLAGS = $(TESTS_CFLAGS) -I$(srcdir)/test/integration\ntest_helper_tpm_getek_ecc_LDFLAGS = $(TESTS_LDFLAGS) -lcrypto\ntest_helper_tpm_getek_ecc_LDADD = $(TESTS_LDADD)\n\n\ncheck_PROGRAMS += test/helper/tpm_writeekcert\ntest_helper_tpm_writeekcert_CFLAGS = $(TESTS_CFLAGS) -I$(srcdir)/test/integration\ntest_helper_tpm_writeekcert_LDFLAGS = $(TESTS_LDFLAGS)\ntest_helper_tpm_writeekcert_LDADD = $(TESTS_LDADD)\nendif #ENABLE_INTEGRATION\n\nif UNIT\nTESTS_UNIT  = \\\n    test/unit/CommonPreparePrologue \\\n    test/unit/CopyCommandHeader \\\n    test/unit/io \\\n    test/unit/key-value-parse \\\n    test/unit/log \\\n    test/unit/tcti-device \\\n    test/unit/tctildr \\\n    test/unit/tctildr-dl \\\n    test/unit/tctildr-nodl \\\n    test/unit/tctildr-tcti \\\n    test/unit/tctildr-getinfo \\\n    test/unit/UINT8-marshal \\\n    test/unit/UINT16-marshal \\\n    test/unit/UINT32-marshal \\\n    test/unit/UINT64-marshal \\\n    test/unit/TPMA-marshal \\\n    test/unit/TPM2B-marshal \\\n    test/unit/TPMS-marshal \\\n    test/unit/TPML-marshal \\\n    test/unit/TPMT-marshal \\\n    test/unit/TPMU-marshal \\\n    test/unit/sys-execute \\\n    test/unit/tss2_rc\nif ENABLE_TCTI_MSSIM\nTESTS_UNIT += test/unit/tcti-mssim\nendif\nif ESAPI\nTESTS_UNIT += \\\n    test/unit/esys-context-null \\\n    test/unit/esys-resubmissions \\\n    test/unit/esys-sequence-finish \\\n    test/unit/esys-tcti-rcs \\\n    test/unit/esys-tpm-rcs \\\n    test/unit/esys-getpollhandles \\\n    test/unit/esys-nulltcti \\\n    test/unit/esys-crypto\n\nendif ESAPI\nif FAPI\nfapiLDFLAGS = -ljson-c\nTESTS_UNIT += \\\n    test/unit/fapi-json\nendif FAPI\nendif #UNIT\n\nif ENABLE_INTEGRATION\ncheck_LTLIBRARIES += test/integration/libtest_utils.la\n\nTESTS_INTEGRATION =\nif !TESTPTPM\nTESTS_INTEGRATION += \\\n    test/integration/sapi-asymmetric-encrypt-decrypt.int \\\n    test/integration/sapi-nv-policy-locality.int \\\n    test/integration/sapi-nv-readwrite.int \\\n    test/integration/sapi-hmac-auth.int \\\n    test/integration/sapi-primary-rsa-2K-aes128cfb.int \\\n    test/integration/sapi-create-keyedhash-sha1-hmac.int \\\n    test/integration/sapi-encrypt-decrypt.int \\\n    test/integration/sapi-encrypt-decrypt-2.int \\\n    test/integration/sapi-evict-ctrl.int \\\n    test/integration/sapi-get-random.int \\\n    test/integration/sapi-stir-random.int \\\n    test/integration/sapi-hierarchy-change-auth.int \\\n    test/integration/sapi-abi-version.int \\\n    test/integration/sapi-pcr-extension.int \\\n    test/integration/sapi-self-test.int \\\n    test/integration/sapi-start-auth-session.int \\\n    test/integration/sapi-sys-initialize.int \\\n    test/integration/sapi-tpm-properties.int \\\n    test/integration/sapi-system-api.int \\\n    test/integration/sapi-policy-template.int \\\n    test/integration/sapi-create-loaded.int \\\n    test/integration/sapi-policy-authorizeNV.int \\\n    test/integration/sapi-command-cancel.int \\\n    test/integration/sapi-param-encrypt-decrypt.int \\\n    test/tpmclient/tpmclient.int\nendif # !TESTPTPM\n\nif ESAPI\nESYS_TESTS_INTEGRATION_DESTRUCTIVE = \\\n    test/integration/esys-change-eps.int \\\n    test/integration/esys-clear.int \\\n    test/integration/esys-tpm-clear-auth.int \\\n    test/integration/esys-clear-session.int \\\n    test/integration/esys-field-upgrade.int \\\n    test/integration/esys-firmware-read.int \\\n    test/integration/esys-lock.int \\\n    test/integration/esys-set-algorithm-set.int\n\nESYS_TESTS_INTEGRATION_MANDATORY = \\\n    test/integration/esys-certify-creation.int \\\n    test/integration/esys-certify.int \\\n    test/integration/esys-clear-control.int \\\n    test/integration/esys-clockset.int \\\n    test/integration/esys-commit.int \\\n    test/integration/esys-create-fail.int \\\n    test/integration/esys-create-password-auth.int \\\n    test/integration/esys-create-policy-auth.int \\\n    test/integration/esys-create-primary-ecc-hmac.int \\\n    test/integration/esys-create-primary-hmac.int \\\n    test/integration/esys-create-session-auth-bound.int \\\n    test/integration/esys-create-session-auth-ecc.int \\\n    test/integration/esys-create-session-auth.int \\\n    test/integration/esys-create-session-auth-xor.int \\\n    test/integration/esys-ecc-parameters.int \\\n    test/integration/esys-ecdh-zgen.int \\\n    test/integration/esys-event-sequence-complete.int \\\n    test/integration/esys-evict-control-serialization.int \\\n    test/integration/esys-get-capability.int \\\n    test/integration/esys-get-random.int \\\n    test/integration/esys-hash.int \\\n    test/integration/esys-hashsequencestart.int \\\n    test/integration/esys-hashsequencestart-session.int \\\n    test/integration/esys-hierarchychangeauth.int \\\n    test/integration/esys-hmac.int \\\n    test/integration/esys-hmacsequencestart.int \\\n    test/integration/esys-hmacsequencestart-session.int \\\n    test/integration/esys-import.int \\\n    test/integration/esys-make-credential.int \\\n    test/integration/esys-make-credential-session.int \\\n    test/integration/esys-nv-ram-counter.int \\\n    test/integration/esys-nv-ram-counter-session.int \\\n    test/integration/esys-nv-ram-extend-index.int \\\n    test/integration/esys-nv-ram-extend-index-session.int \\\n    test/integration/esys-nv-ram-ordinary-index-rlock.int \\\n    test/integration/esys-nv-ram-ordinary-index-rlock-session.int \\\n    test/integration/esys-nv-ram-ordinary-index-wlock.int \\\n    test/integration/esys-nv-ram-ordinary-index-wlock-session.int \\\n    test/integration/esys-nv-ram-set-bits.int \\\n    test/integration/esys-nv-ram-set-bits-session.int \\\n    test/integration/esys-object-changeauth.int \\\n    test/integration/esys-policy-authorize.int \\\n    test/integration/esys-policy-nv-changeauth.int \\\n    test/integration/esys-policy-nv-undefine-special.int \\\n    test/integration/esys-policy-password.int \\\n    test/integration/esys-policy-regression.int \\\n    test/integration/esys-quote.int \\\n    test/integration/esys-rsa-encrypt-decrypt.int \\\n    test/integration/esys-save-and-load-context.int \\\n    test/integration/esys-session-attributes.int \\\n    test/integration/esys-stir-random.int \\\n    test/integration/esys-testparms.int \\\n    test/integration/esys-tpm-tests.int \\\n    test/integration/esys-tr-fromTpmPublic-key.int \\\n    test/integration/esys-tr-fromTpmPublic-nv.int \\\n    test/integration/esys-tr-fromTpmPublic-session.int \\\n    test/integration/esys-tr-getName-hierarchy.int \\\n    test/integration/esys-tr-getTpmHandle-key.int \\\n    test/integration/esys-tr-getTpmHandle-nv.int \\\n    test/integration/esys-unseal-password-auth.int \\\n    test/integration/esys-verify-signature.int \\\n    test/integration/esys-ecdh-keygen.int \\\n    test/integration/esys-policy-ticket.int\n\nESYS_TESTS_INTEGRATION_OPTIONAL = \\\n    test/integration/esys-audit.int \\\n    test/integration/esys-createloaded.int \\\n    test/integration/esys-createloaded-session.int \\\n    test/integration/esys-duplicate.int \\\n    test/integration/esys-encrypt-decrypt.int \\\n    test/integration/esys-get-time.int \\\n    test/integration/esys-hierarchy-control.int \\\n    test/integration/esys-nv-certify.int \\\n    test/integration/esys-pcr-auth-value.int \\\n    test/integration/esys-pcr-basic.int \\\n    test/integration/esys-policy-authorize-nv-opt.int \\\n    test/integration/esys-policy-physical-presence-opt.int \\\n    test/integration/esys-policy-template-opt.int \\\n    test/integration/esys-pp-commands.int \\\n    test/integration/esys-zgen-2phase.int \\\n    test/integration/esys-auto-session-flags.int\n\nif TESTPTPM\n\nif PTPMMANDATORY\nTESTS_INTEGRATION +=  $(ESYS_TESTS_INTEGRATION_MANDATORY)\nendif\n\nif PTPMOPTIONAL\nTESTS_INTEGRATION +=  $(ESYS_TESTS_INTEGRATION_OPTIONAL)\nendif\n\nif PTPMDESTRUCTIVE\nTESTS_INTEGRATION += $(ESYS_TESTS_INTEGRATION_DESTRUCTIVE)\nendif\n\nelse # TESTPTPM\nTESTS_INTEGRATION += $(ESYS_TESTS_INTEGRATION_MANDATORY) $(ESYS_TESTS_INTEGRATION_OPTIONAL) $(ESYS_TESTS_INTEGRATION_DESTRUCTIVE)\n\nendif # TESTPTPM\n\nendif #ESAPI\n\nif FAPI\nTESTS_CFLAGS +=  -DTOP_SOURCEDIR\"=\\\"$(top_srcdir)\\\"\"\nFAPI_TESTS_INTEGRATION = \\\n    test/integration/fapi-data-crypt.int \\\n    test/integration/fapi-data-crypt-persistent.int \\\n    test/integration/fapi-data-crypt-rsa.int \\\n    test/integration/fapi-data-crypt-rsa-persistent.int \\\n    test/integration/fapi-duplicate.int \\\n    test/integration/fapi-ext-public-key.int \\\n    test/integration/fapi-get-random.int \\\n    test/integration/fapi-platform-certificates.int \\\n    test/integration/fapi-key-create-sign.int \\\n    test/integration/fapi-key-create-sign-persistent-key.int \\\n    test/integration/fapi-key-create-sign-password-provision.int \\\n    test/integration/fapi-key-create-sign-rsa.int \\\n    test/integration/fapi-key-create-policy-authorize-sign.int \\\n    test/integration/fapi-key-create-policy-authorize-sign-rsa.int \\\n    test/integration/fapi-key-create-policy-authorize-nv-sign.int \\\n    test/integration/fapi-key-create-policy-secret-nv-sign.int \\\n    test/integration/fapi-key-create-policy-pcr-sign.int \\\n    test/integration/fapi-key-create-policy-signed.int \\\n    test/integration/fapi-key-create-policy-signed-ecc.int \\\n    test/integration/fapi-key-create-policy-nv-sign.int \\\n    test/integration/fapi-key-create-policy-or-sign.int \\\n    test/integration/fapi-key-create-policy-password-sign.int \\\n    test/integration/fapi-key-create-policy-countertimer-sign.int \\\n    test/integration/fapi-key-create-policy-physical-presence-sign.int \\\n    test/integration/fapi-key-create-policy-locality-sign.int \\\n    test/integration/fapi-key-create-policy-command-code-sign.int \\\n    test/integration/fapi-key-create-policy-auth-value-sign.int \\\n    test/integration/fapi-key-create-ckda-sign.int \\\n    test/integration/fapi-key-change-auth.int \\\n    test/integration/fapi-key-create-sign-persistent.int \\\n    test/integration/fapi-key-create-sign-password.int \\\n    test/integration/fapi-key-create-ckda-sign-password.int \\\n    test/integration/fapi-key-create-sign-password-da.int \\\n    test/integration/fapi-key-create-ckda-sign-password-da.int \\\n    test/integration/fapi-nv-authorizenv-cphash.int \\\n    test/integration/fapi-nv-ordinary.int \\\n    test/integration/fapi-nv-written-policy.int \\\n    test/integration/fapi-nv-extend.int \\\n    test/integration/fapi-nv-increment.int \\\n    test/integration/fapi-nv-set-bits.int \\\n    test/integration/fapi-pcr-test.int \\\n    test/integration/fapi-quote.int \\\n    test/integration/fapi-quote-rsa.int \\\n    test/integration/fapi-info.int \\\n    test/integration/fapi-unseal.int \\\n    test/integration/fapi-unseal-persistent.int\n\nif TESTPTPM\nif PTPMDESTRUCTIVE\nFAPI_TESTS_INTEGRATION += test/integration/fapi-key-create-sign-policy-provision.int\nendif #PTPMDESTRUCTIVE\nendif #TESTPTPM\n\nif !TESTPTPM\nFAPI_TESTS_INTEGRATION += \\\n    test/integration/fapi-key-create-sign-policy-provision.int \\\n    test/integration/fapi-provision-fingerprint.int \\\n    test/integration/fapi-provision-certificate.int \\\n    test/integration/fapi-provision-fingerprint_ecc.int \\\n    test/integration/fapi-provision-certificate_ecc.int\nendif #!TESTPTPM\n\nTESTS_INTEGRATION += $(FAPI_TESTS_INTEGRATION)\n\nendif #FAPI\n\nendif #ENABLE_INTEGRATION\n\nCLEANFILES += \\\n    test/integration/*.crt \\\n    test/integration/*.crl \\\n    test/integration/*.int_state* \\\n    test/integration/*.log \\\n    test/integration/*.int_ek* \\\n    test/integration/*.int_*-ca.pem \\\n    test/tpmclient/*.crt \\\n    test/tpmclient/*.crl \\\n    test/tpmclient/*.int_state* \\\n    test/tpmclient/*.log \\\n    test/tpmclient/*.int_ek* \\\n    test/tpmclient/*.int_*-ca.pem \\\n    test/unit/*.log\n\nif UNIT\ntest_unit_tcti_device_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_tcti_device_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu) $(libutil)\ntest_unit_tcti_device_LDFLAGS = -Wl,--wrap=read -Wl,--wrap=write, -Wl,--wrap=poll  \\\n        -Wl,--wrap=open\ntest_unit_tcti_device_SOURCES = test/unit/tcti-device.c \\\n    src/tss2-tcti/tcti-common.c \\\n    src/tss2-tcti/tcti-device.c src/tss2-tcti/tcti-device.h\n\nif ENABLE_TCTI_MSSIM\ntest_unit_tcti_mssim_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_tcti_mssim_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu) $(libutil)\ntest_unit_tcti_mssim_LDFLAGS = -Wl,--wrap=connect,--wrap=read,--wrap=select,--wrap=write\ntest_unit_tcti_mssim_SOURCES = test/unit/tcti-mssim.c \\\n    src/tss2-tcti/tcti-common.c \\\n    src/tss2-tcti/tcti-mssim.c src/tss2-tcti/tcti-mssim.h\nendif\n\ntest_unit_tctildr_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_tctildr_LDADD = $(CMOCKA_LIBS) $(libutil)\ntest_unit_tctildr_LDFLAGS = -Wl,--wrap=calloc,--wrap=free \\\n    -Wl,--wrap=tctildr_finalize_data,--wrap=tctildr_get_tcti \\\n    -Wl,--wrap=tctildr_get_info\ntest_unit_tctildr_SOURCES = test/unit/tctildr.c \\\n    src/tss2-tcti/tctildr.c\n\ntest_unit_tctildr_dl_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS) \\\n        -UESYS_TCTI_DEFAULT_MODULE -UESYS_TCTI_DEFAUT_CONFIG\ntest_unit_tctildr_dl_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD)\ntest_unit_tctildr_dl_LDFLAGS = -Wl,--wrap=dlopen,--wrap=dlclose,--wrap=dlsym \\\n    -Wl,--wrap=tcti_from_init,--wrap=tcti_from_info,--wrap=dlerror\ntest_unit_tctildr_dl_SOURCES = test/unit/tctildr-dl.c \\\n        src/tss2-tcti/tctildr-dl.c\n\ntest_unit_tctildr_nodl_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS) \\\n        -UESYS_TCTI_DEFAULT_MODULE -UESYS_TCTI_DEFAUT_CONFIG\ntest_unit_tctildr_nodl_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD)\ntest_unit_tctildr_nodl_LDFLAGS = -Wl,--wrap=Tss2_Tcti_Device_Init \\\n        -Wl,--wrap=Tss2_Tcti_Mssim_Init,--wrap=tcti_from_init\ntest_unit_tctildr_nodl_SOURCES = test/unit/tctildr-nodl.c \\\n        src/tss2-tcti/tctildr-nodl.c\n\ntest_unit_tctildr_tcti_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_tctildr_tcti_LDADD = $(CMOCKA_LIBS) $(libutil) \\\n    $(libtss2_tcti_device) $(libtss2_tcti_mssim)\ntest_unit_tctildr_tcti_LDFLAGS = -Wl,--wrap=tctildr_get_info \\\n    -Wl,--wrap=tctildr_get_tcti,--wrap=tctildr_finalize_data\ntest_unit_tctildr_tcti_SOURCES = test/unit/tctildr-tcti.c \\\n    src/tss2-tcti/tctildr.c\n\ntest_unit_tctildr_getinfo_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_tctildr_getinfo_LDADD = $(CMOCKA_LIBS) $(libutil) \\\n    $(libtss2_tcti_device) $(libtss2_tcti_mssim)\ntest_unit_tctildr_getinfo_LDFLAGS = -Wl,--wrap=strndup,--wrap=free \\\n    -Wl,--wrap=calloc,--wrap=tctildr_finalize_data \\\n    -Wl,--wrap=tctildr_get_info,--wrap=tctildr_get_tcti\ntest_unit_tctildr_getinfo_SOURCES = test/unit/tctildr-getinfo.c \\\n    src/tss2-tcti/tctildr.c\n\ntest_unit_io_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_io_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu) $(libutil)\ntest_unit_io_LDFLAGS = -Wl,--wrap=connect,--wrap=read,--wrap=socket,--wrap=write\n\ntest_unit_key_value_parse_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_key_value_parse_LDADD   = $(CMOCKA_LIBS) $(libutil)\n\ntest_unit_log_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_log_LDADD   = $(CMOCKA_LIBS) $(libutil)\n\ntest_unit_CommonPreparePrologue_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_CommonPreparePrologue_LDADD = $(CMOCKA_LIBS) $(libtss2_sys) $(libtss2_mu)\ntest_unit_CommonPreparePrologue_SOURCES = test/unit/CommonPreparePrologue.c \\\n    src/tss2-sys/sysapi_util.c\n\ntest_unit_CopyCommandHeader_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_CopyCommandHeader_LDADD = $(CMOCKA_LIBS) $(libtss2_sys) $(libtss2_mu)\ntest_unit_CopyCommandHeader_SOURCES = test/unit/CopyCommandHeader.c \\\n    src/tss2-sys/sysapi_util.c\n\ntest_unit_UINT8_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_UINT8_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_UINT16_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_UINT16_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_UINT32_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_UINT32_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_UINT64_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_UINT64_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_TPMA_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_TPMA_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_TPM2B_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_TPM2B_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_TPMS_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_TPMS_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_TPML_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_TPML_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_TPMT_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_TPMT_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_TPMU_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_TPMU_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_sys_execute_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_sys_execute_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu) $(libtss2_sys)\ntest_unit_sys_execute_SOURCES = test/unit/sys-execute.c \\\n                                src/tss2-tcti/tcti-common.c src/util/log.c\n\ntest_unit_tss2_rc_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_tss2_rc_LDADD   = $(CMOCKA_LIBS) $(libtss2_rc) $(libtss2_sys)\ntest_unit_tss2_rc_SOURCES = test/unit/test_tss2_rc.c\n\nif ESAPI\ntest_unit_esys_context_null_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_unit_esys_context_null_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD)\ntest_unit_esys_context_null_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) -Wl,--wrap=tctildr_finalize_data,--wrap=tctildr_get_tcti\n\n\ntest_unit_esys_resubmissions_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_unit_esys_resubmissions_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD)\ntest_unit_esys_resubmissions_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_unit_esys_resubmissions_SOURCES = test/unit/esys-resubmissions.c \\\n                                       src/tss2-esys/esys_iutil.c \\\n                                       src/tss2-esys/esys_crypto.c \\\n                                       $(TSS2_ESYS_SRC_CRYPTO)\n\ntest_unit_esys_sequence_finish_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_esys_sequence_finish_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD)\ntest_unit_esys_sequence_finish_LDFLAGS = $(TESTS_LDFLAGS)\n\ntest_unit_esys_tcti_rcs_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_unit_esys_tcti_rcs_LDADD = $(CMOCKA_LIBS) $(TESTS_LDADD)\ntest_unit_esys_tcti_rcs_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_unit_esys_tcti_rcs_SOURCES = test/unit/esys-tcti-rcs.c \\\n                                  src/tss2-esys/esys_iutil.c \\\n                                  src/tss2-esys/esys_crypto.c \\\n                                  $(TSS2_ESYS_SRC_CRYPTO)\n\ntest_unit_esys_tpm_rcs_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_unit_esys_tpm_rcs_LDADD = $(CMOCKA_LIBS) $(TESTS_LDADD)\ntest_unit_esys_tpm_rcs_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_unit_esys_tpm_rcs_SOURCES = test/unit/esys-tpm-rcs.c \\\n                                 src/tss2-esys/esys_iutil.c \\\n                                 src/tss2-esys/esys_crypto.c \\\n                                 $(TSS2_ESYS_SRC_CRYPTO)\n\ntest_unit_esys_getpollhandles_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_esys_getpollhandles_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD)\ntest_unit_esys_getpollhandles_LDFLAGS = $(TESTS_LDFLAGS)\n\ntest_unit_esys_nulltcti_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_unit_esys_nulltcti_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD) $(LIBADD_DL)\ntest_unit_esys_nulltcti_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) \\\n    -Wl,--wrap=Tss2_TctiLdr_Initialize -Wl,--wrap=Tss2_TctiLdr_Finalize\ntest_unit_esys_nulltcti_SOURCES = test/unit/esys-nulltcti.c \\\n                                  src/tss2-esys/esys_context.c \\\n                                  src/tss2-esys/esys_iutil.c \\\n                                  src/tss2-esys/esys_crypto.c \\\n                                  $(TSS2_ESYS_SRC_CRYPTO)\n\ntest_unit_esys_crypto_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_unit_esys_crypto_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD) $(LIBADD_DL)\ntest_unit_esys_crypto_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_unit_esys_crypto_SOURCES = test/unit/esys-crypto.c \\\n                                src/tss2-esys/esys_context.c \\\n                                src/tss2-esys/esys_iutil.c \\\n                                src/tss2-tcti/tctildr.c \\\n                                src/tss2-tcti/tctildr-dl.c \\\n                                src/tss2-esys/esys_crypto.c \\\n                                $(TSS2_ESYS_SRC_CRYPTO)\nendif # ESAPI\n\nif FAPI\n\ntest_unit_fapi_json_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_fapi_json_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD)\ntest_unit_fapi_json_LDFLAGS = $(TESTS_LDFLAGS) -ljson-c\ntest_unit_fapi_json_SOURCES = test/unit/fapi-json.c \\\n                              src/tss2-fapi/ifapi_json_deserialize.c \\\n                              src/tss2-fapi/ifapi_json_serialize.c \\\n                              src/tss2-fapi/ifapi_policy_json_deserialize.c \\\n                              src/tss2-fapi/ifapi_policy_json_serialize.c \\\n                              src/tss2-fapi/tpm_json_deserialize.c \\\n                              src/tss2-fapi/tpm_json_serialize.c\n\nendif # FAPI\nendif # UNIT\n\nif ENABLE_INTEGRATION\ntest_tpmclient_tpmclient_int_CFLAGS   = $(AM_CFLAGS) -U_FORTIFY_SOURCE  $(TESTS_CFLAGS)\ntest_tpmclient_tpmclient_int_LDADD    = $(TESTS_LDADD)\ntest_tpmclient_tpmclient_int_SOURCES  = \\\n    test/tpmclient/tpmclient.int.c test/integration/main-sapi.c\n\ntest_integration_libtest_utils_la_CFLAGS = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_libtest_utils_la_SOURCES = \\\n    test/integration/sapi-context-util.c test/integration/context-util.h \\\n    test/integration/sapi-util.c    test/integration/sapi-util.h \\\n    test/integration/sapi-session-util.c test/integration/session-util.h \\\n    test/integration/sapi-test-options.c test/integration/test-options.h \\\n    test/integration/sapi-entity-util.c test/integration/test.h \\\n    src/util/log.c\n\ntest_integration_sapi_asymmetric_encrypt_decrypt_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_asymmetric_encrypt_decrypt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_asymmetric_encrypt_decrypt_int_SOURCES = \\\n    test/integration/sapi-asymmetric-encrypt-decrypt.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_nv_policy_locality_int_CFLAGS = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_nv_policy_locality_int_LDADD = $(TESTS_LDADD)\ntest_integration_sapi_nv_policy_locality_int_SOURCES = \\\n    test/integration/sapi-nv-policy-locality.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_nv_readwrite_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_nv_readwrite_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_nv_readwrite_int_SOURCES = \\\n    test/integration/sapi-nv-readwrite.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_hmac_auth_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_hmac_auth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_hmac_auth_int_SOURCES = \\\n    test/integration/sapi-hmac-auth.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_primary_rsa_2K_aes128cfb_int_CFLAGS = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_primary_rsa_2K_aes128cfb_int_LDADD  = $(TESTS_LDADD)\ntest_integration_sapi_primary_rsa_2K_aes128cfb_int_SOURCES = \\\n    test/integration/sapi-primary-rsa-2K-aes128cfb.int.c \\\n    test/integration/main-sapi.c\n\ntest_integration_sapi_create_keyedhash_sha1_hmac_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_create_keyedhash_sha1_hmac_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_create_keyedhash_sha1_hmac_int_SOURCES = \\\n    test/integration/sapi-create-keyedhash-sha1-hmac.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_encrypt_decrypt_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_encrypt_decrypt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_encrypt_decrypt_int_SOURCES = \\\n    test/integration/sapi-encrypt-decrypt.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_encrypt_decrypt_2_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_encrypt_decrypt_2_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_encrypt_decrypt_2_int_SOURCES = \\\n    test/integration/sapi-encrypt-decrypt-2.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_evict_ctrl_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_evict_ctrl_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_evict_ctrl_int_SOURCES = \\\n    test/integration/sapi-evict-ctrl.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_sys_initialize_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_sys_initialize_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_sys_initialize_int_SOURCES = test/integration/sapi-sys-initialize.int.c \\\n    test/integration/main-sapi.c\n\ntest_integration_sapi_stir_random_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_stir_random_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_stir_random_int_SOURCES = test/integration/sapi-stir-random.int.c \\\n    test/integration/main-sapi.c\n\ntest_integration_sapi_get_random_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_get_random_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_get_random_int_SOURCES = test/integration/sapi-get-random.int.c \\\n    test/integration/main-sapi.c\n\ntest_integration_sapi_abi_version_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_abi_version_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_abi_version_int_SOURCES = test/integration/sapi-abi-version.int.c \\\n    test/integration/main-sapi.c\n\ntest_integration_sapi_pcr_extension_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_pcr_extension_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_pcr_extension_int_SOURCES = test/integration/sapi-pcr-extension.int.c \\\n    test/integration/main-sapi.c\n\ntest_integration_sapi_self_test_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_self_test_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_self_test_int_SOURCES = test/integration/sapi-self-test.int.c \\\n    test/integration/main-sapi.c\n\ntest_integration_sapi_hierarchy_change_auth_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_hierarchy_change_auth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_hierarchy_change_auth_int_SOURCES = \\\n    test/integration/sapi-hierarchy-change-auth.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_start_auth_session_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_start_auth_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_start_auth_session_int_SOURCES = test/integration/main-sapi.c \\\n    test/integration/sapi-start-auth-session.int.c\n\ntest_integration_sapi_tpm_properties_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_tpm_properties_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_tpm_properties_int_SOURCES = test/integration/main-sapi.c \\\n    test/integration/sapi-tpm-properties.int.c\n\ntest_integration_sapi_system_api_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_system_api_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_system_api_int_SOURCES = test/integration/main-sapi.c \\\n    test/integration/sapi-system-api.int.c\n\ntest_integration_sapi_aram_encrypt_decrypt_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_param_encrypt_decrypt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_param_encrypt_decrypt_int_SOURCES = \\\n    test/integration/sapi-param-encrypt-decrypt.int.c test/integration/main-sapi.c\n\nif ESAPI\nESYS_SRC_UTIL_CRYPTO_SRC = src/tss2-esys/esys_iutil.c \\\n                           src/tss2-esys/esys_crypto.c \\\n                           $(TSS2_ESYS_SRC_CRYPTO)\n\ntest_integration_esys_audit_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_audit_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_audit_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_audit_int_SOURCES = \\\n    test/integration/esys-audit.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_certify_creation_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_certify_creation_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_certify_creation_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_certify_creation_int_SOURCES = \\\n    test/integration/esys-certify-creation.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_certify_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_certify_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_certify_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_certify_int_SOURCES = \\\n    test/integration/esys-certify.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_change_eps_int_CFLAGS = $(TESTS_CFLAGS)\ntest_integration_esys_change_eps_int_LDADD = $(TESTS_LDADD)\ntest_integration_esys_change_eps_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_change_eps_int_SOURCES = \\\n    test/integration/esys-change-eps.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_clear_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_clear_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_clear_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_clear_int_SOURCES = \\\n    test/integration/esys-clear.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_clear_control_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_clear_control_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_clear_control_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_clear_control_int_SOURCES = \\\n    test/integration/esys-clear-control.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_clear_session_int_CFLAGS  = $(TESTS_CFLAGS) -DTEST_SESSION\ntest_integration_esys_clear_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_clear_session_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_clear_session_int_SOURCES = \\\n    test/integration/esys-clear.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_clockset_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_clockset_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_clockset_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_clockset_int_SOURCES = \\\n    test/integration/esys-clockset.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_commit_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_commit_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_commit_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_commit_int_SOURCES = \\\n    test/integration/esys-commit.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_fail_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_fail_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_fail_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_create_fail_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-fail.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_createloaded_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_createloaded_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_createloaded_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_createloaded_int_SOURCES = \\\n    test/integration/esys-createloaded.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_createloaded_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_SESSION\ntest_integration_esys_createloaded_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_createloaded_session_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_createloaded_session_int_SOURCES = \\\n    test/integration/esys-createloaded.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_password_auth_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_password_auth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_password_auth_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_create_password_auth_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-password-auth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_policy_auth_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_policy_auth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_policy_auth_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_create_policy_auth_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-policy-auth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_primary_ecc_hmac_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_primary_ecc_hmac_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_primary_ecc_hmac_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_create_primary_ecc_hmac_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-primary-hmac.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_primary_hmac_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_primary_hmac_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_primary_hmac_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_create_primary_hmac_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-primary-hmac.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_session_auth_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_AES_ENCRYPTION $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_session_auth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_session_auth_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_create_session_auth_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-session-auth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_session_auth_bound_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_AES_ENCRYPTION -DTEST_BOUND_SESSION $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_session_auth_bound_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_session_auth_bound_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_create_session_auth_bound_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-session-auth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_session_auth_ecc_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_AES_ENCRYPTION -DTEST_ECC $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_session_auth_ecc_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_session_auth_ecc_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_create_session_auth_ecc_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-session-auth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_session_auth_xor_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_XOR_OBFUSCATION $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_session_auth_xor_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_session_auth_xor_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_create_session_auth_xor_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-session-auth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_duplicate_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_duplicate_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_duplicate_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_duplicate_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-duplicate.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_ecc_parameters_int_CFLAGS = $(TESTS_CFLAGS)\ntest_integration_esys_ecc_parameters_int_LDADD = $(TESTS_LDADD)\ntest_integration_esys_ecc_parameters_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_ecc_parameters_int_SOURCES = \\\n    test/integration/esys-ecc-parameters.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_ecdh_keygen_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_ecdh_keygen_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_ecdh_keygen_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_ecdh_keygen_int_SOURCES = \\\n    test/integration/esys-ecdh-keygen.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_ecdh_zgen_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_ecdh_zgen_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_ecdh_zgen_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_ecdh_zgen_int_SOURCES = \\\n    test/integration/esys-ecdh-zgen.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_encrypt_decrypt_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_encrypt_decrypt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_encrypt_decrypt_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_encrypt_decrypt_int_SOURCES = \\\n    test/integration/esys-encrypt-decrypt.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_event_sequence_complete_int_CFLAGS = $(TESTS_CFLAGS)\ntest_integration_esys_event_sequence_complete_int_LDADD = $(TESTS_LDADD)\ntest_integration_esys_event_sequence_complete_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_event_sequence_complete_int_SOURCES = \\\n    test/integration/esys-event-sequence-complete.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_evict_control_serialization_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_evict_control_serialization_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_evict_control_serialization_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_evict_control_serialization_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-evict-control-serialization.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_field_upgrade_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_field_upgrade_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_field_upgrade_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_field_upgrade_int_SOURCES = \\\n    test/integration/esys-field-upgrade.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_firmware_read_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_firmware_read_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_firmware_read_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_firmware_read_int_SOURCES = \\\n    test/integration/esys-firmware-read.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_get_capability_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_get_capability_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_get_capability_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_get_capability_int_SOURCES = \\\n    test/integration/esys-get-capability.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_get_random_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_get_random_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_get_random_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_get_random_int_SOURCES = \\\n    test/integration/esys-get-random.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_get_time_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_get_time_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_get_time_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_get_time_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-get-time.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_hash_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_hash_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_hash_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_hash_int_SOURCES = \\\n    test/integration/esys-hash.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_hashsequencestart_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_hashsequencestart_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_hashsequencestart_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_hashsequencestart_int_SOURCES = \\\n    test/integration/esys-hashsequencestart.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_hashsequencestart_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_SESSION\ntest_integration_esys_hashsequencestart_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_hashsequencestart_session_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_hashsequencestart_session_int_SOURCES = \\\n    test/integration/esys-hashsequencestart.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_hierarchy_control_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_hierarchy_control_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_hierarchy_control_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_hierarchy_control_int_SOURCES = \\\n    test/integration/esys-hierarchy-control.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_hmac_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_hmac_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_hmac_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_hmac_int_SOURCES = \\\n    test/integration/esys-hmac.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_hmacsequencestart_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_hmacsequencestart_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_hmacsequencestart_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_hmacsequencestart_int_SOURCES = \\\n    test/integration/esys-hmacsequencestart.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_hmacsequencestart_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_SESSION\ntest_integration_esys_hmacsequencestart_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_hmacsequencestart_session_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_hmacsequencestart_session_int_SOURCES = \\\n    test/integration/esys-hmacsequencestart.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_hierarchychangeauth_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_hierarchychangeauth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_hierarchychangeauth_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_hierarchychangeauth_int_SOURCES = \\\n    test/integration/esys-hierarchychangeauth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_import_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_import_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_import_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_import_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-import.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_lock_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_lock_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_lock_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_lock_int_SOURCES = \\\n    test/integration/esys-lock.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_make_credential_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_make_credential_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_make_credential_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_make_credential_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-make-credential.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_make_credential_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_SESSION $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_make_credential_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_make_credential_session_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_make_credential_session_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-make-credential.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_certify_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_nv_certify_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_certify_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_nv_certify_int_SOURCES = \\\n    test/integration/esys-nv-certify.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_counter_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_counter_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_counter_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_counter_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-counter.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_counter_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_SESSION $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_counter_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_counter_session_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_counter_session_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-counter.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_extend_index_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_extend_index_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_extend_index_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_extend_index_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-extend-index.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_extend_index_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_SESSION $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_extend_index_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_extend_index_session_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_extend_index_session_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-extend-index.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_ordinary_index_rlock_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -I. -I$(srcdir)/src/esapi/esapi -I$(srcdir)/include/esapi -I$(srcdir)/test/integration/ \\\n    -I$(srcdir)/src/esapi/esapi_util -DTEST_READ_LOCK $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_ordinary_index_rlock_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_ordinary_index_rlock_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_ordinary_index_rlock_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-ordinary-index.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_ordinary_index_rlock_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -I. -I$(srcdir)/src/esapi/esapi -I$(srcdir)/include/esapi -I$(srcdir)/include/esapi \\\n    -I$(srcdir)/src/esapi/esapi_util -DTEST_SESSION -DTEST_READ_LOCK $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_ordinary_index_rlock_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_ordinary_index_rlock_session_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_ordinary_index_rlock_session_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-ordinary-index.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_ordinary_index_wlock_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -I. -I$(srcdir)/src/esapi/esapi -I$(srcdir)/include/esapi -I$(srcdir)/include/esapi \\\n    -I$(srcdir)/src/esapi/esapi_util  -DTEST_WRITE_LOCK $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_ordinary_index_wlock_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_ordinary_index_wlock_int_LDFLAGS = $(TESTS_LDFLAGS) \\\n                                                                $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_ordinary_index_wlock_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-ordinary-index.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_ordinary_index_wlock_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -I. -I$(srcdir)/src/esapi/esapi -I$(srcdir)/include/esapi -I$(srcdir)/include/esapi \\\n    -I$(srcdir)/src/esapi/esapi_util -DTEST_SESSION -DTEST_WRITE_LOCK $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_ordinary_index_wlock_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_ordinary_index_wlock_session_int_LDFLAGS = $(TESTS_LDFLAGS) \\\n                                                                        $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_ordinary_index_wlock_session_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-ordinary-index.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_set_bits_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_set_bits_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_set_bits_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_set_bits_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-set-bits.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_set_bits_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_SESSION $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_set_bits_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_set_bits_session_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_set_bits_session_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-set-bits.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_object_changeauth_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_object_changeauth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_object_changeauth_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_object_changeauth_int_SOURCES = \\\n    test/integration/esys-object-changeauth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_authorize_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_policy_authorize_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_authorize_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_policy_authorize_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-policy-authorize.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_physical_presence_opt_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_policy_physical_presence_opt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_physical_presence_opt_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_policy_physical_presence_opt_int_SOURCES = \\\n    test/integration/esys-policy-physical-presence-opt.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_regression_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_policy_regression_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_regression_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_policy_regression_int_SOURCES = \\\n    test/integration/esys-policy-regression.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_authorize_nv_opt_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_policy_authorize_nv_opt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_authorize_nv_opt_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_policy_authorize_nv_opt_int_SOURCES = \\\n    test/integration/esys-policy-authorize-nv-opt.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_template_opt_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_policy_template_opt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_template_opt_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_policy_template_opt_int_SOURCES = \\\n    test/integration/esys-policy-template-opt.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_ticket_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_policy_ticket_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_ticket_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_policy_ticket_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-policy-ticket.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_nv_changeauth_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_policy_nv_changeauth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_nv_changeauth_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_policy_nv_changeauth_int_SOURCES = \\\n    test/integration/esys-policy-nv-changeauth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_nv_undefine_special_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_policy_nv_undefine_special_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_nv_undefine_special_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_policy_nv_undefine_special_int_SOURCES = \\\n    test/integration/esys-policy-nv-undefine-special.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_password_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_policy_password_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_password_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_policy_password_int_SOURCES = \\\n    test/integration/esys-policy-password.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_pcr_basic_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_pcr_basic_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_pcr_basic_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_pcr_basic_int_SOURCES = \\\n    test/integration/esys-pcr-basic.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_pcr_auth_value_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_pcr_auth_value_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_pcr_auth_value_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_pcr_auth_value_int_SOURCES = \\\n    test/integration/esys-pcr-auth-value.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_pp_commands_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_pp_commands_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_pp_commands_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_pp_commands_int_SOURCES = \\\n    test/integration/esys-pp-commands.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_quote_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_quote_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_quote_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_quote_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-quote.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_rsa_encrypt_decrypt_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_rsa_encrypt_decrypt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_rsa_encrypt_decrypt_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_rsa_encrypt_decrypt_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-rsa-encrypt-decrypt.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_save_and_load_context_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_save_and_load_context_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_save_and_load_context_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_save_and_load_context_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-save-and-load-context.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_session_attributes_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_session_attributes_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_session_attributes_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_session_attributes_int_SOURCES = \\\n    test/integration/esys-session-attributes.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_set_algorithm_set_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_set_algorithm_set_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_set_algorithm_set_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_set_algorithm_set_int_SOURCES = \\\n    test/integration/esys-set-algorithm-set.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_stir_random_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_stir_random_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_stir_random_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_stir_random_int_SOURCES = \\\n    test/integration/esys-stir-random.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_testparms_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_testparms_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_testparms_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_testparms_int_SOURCES = \\\n    test/integration/esys-testparms.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_tpm_tests_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_tpm_tests_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_tpm_tests_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_tpm_tests_int_SOURCES = \\\n    test/integration/esys-tpm-tests.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_tr_fromTpmPublic_key_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_tr_fromTpmPublic_key_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_tr_fromTpmPublic_key_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_tr_fromTpmPublic_key_int_SOURCES = \\\n    test/integration/esys-tr-fromTpmPublic-key.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_tr_fromTpmPublic_nv_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_tr_fromTpmPublic_nv_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_tr_fromTpmPublic_nv_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_tr_fromTpmPublic_nv_int_SOURCES = \\\n    test/integration/esys-tr-fromTpmPublic-nv.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_tr_fromTpmPublic_session_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_tr_fromTpmPublic_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_tr_fromTpmPublic_session_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_tr_fromTpmPublic_session_int_SOURCES = \\\n    test/integration/esys-tr-fromTpmPublic-session.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_tr_getName_hierarchy_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_tr_getName_hierarchy_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_tr_getName_hierarchy_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_tr_getName_hierarchy_int_SOURCES = \\\n    test/integration/esys-tr-getName-hierarchy.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_tr_getTpmHandle_key_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_tr_getTpmHandle_key_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_tr_getTpmHandle_key_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_tr_getTpmHandle_key_int_SOURCES = \\\n    test/integration/esys-tr-getTpmHandle-key.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_tr_getTpmHandle_nv_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_tr_getTpmHandle_nv_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_tr_getTpmHandle_nv_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_tr_getTpmHandle_nv_int_SOURCES = \\\n    test/integration/esys-tr-getTpmHandle-nv.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_unseal_password_auth_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_unseal_password_auth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_unseal_password_auth_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO)\ntest_integration_esys_unseal_password_auth_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-unseal-password-auth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_verify_signature_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_verify_signature_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_verify_signature_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_verify_signature_int_SOURCES = \\\n    test/integration/esys-verify-signature.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_zgen_2phase_int_CFLAGS = $(TESTS_CFLAGS)\ntest_integration_esys_zgen_2phase_int_LDADD = $(TESTS_LDADD)\ntest_integration_esys_zgen_2phase_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_zgen_2phase_int_SOURCES = \\\n    test/integration/esys-zgen-2phase.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_auto_session_flags_int_CFLAGS = $(TESTS_CFLAGS)\ntest_integration_esys_auto_session_flags_int_LDADD = $(TESTS_LDADD)\ntest_integration_esys_auto_session_flags_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_auto_session_flags_int_SOURCES = \\\n    test/integration/esys-auto-session-flags.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_tpm_clear_auth_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_tpm_clear_auth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_tpm_clear_auth_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_tpm_clear_auth_int_SOURCES = \\\n    test/integration/esys-tpm-clear-auth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\nendif #ESAPI\n\ntest_integration_sapi_policy_template_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_sapi_policy_template_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_policy_template_int_SOURCES = test/integration/main-sapi.c \\\n    test/integration/sapi-policy-template.int.c\n\ntest_integration_sapi_create_loaded_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_sapi_create_loaded_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_create_loaded_int_SOURCES = test/integration/main-sapi.c \\\n    test/integration/sapi-create-loaded.int.c\n\ntest_integration_sapi_policy_authorizeNV_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_sapi_policy_authorizeNV_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_policy_authorizeNV_int_SOURCES = test/integration/main-sapi.c \\\n    test/integration/sapi-policy-authorizeNV.int.c\n\ntest_integration_sapi_command_cancel_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_sapi_command_cancel_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_command_cancel_int_SOURCES = test/integration/main-sapi.c \\\n    test/integration/sapi-command-cancel.int.c src/util/log.c\n\nif FAPI\ntest_integration_fapi_get_random_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_get_random_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_get_random_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_get_random_int_SOURCES = \\\n    test/integration/fapi-get-random.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_platform_certificates_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_platform_certificates_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_platform_certificates_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_platform_certificates_int_SOURCES = \\\n    test/integration/fapi-platform-certificates.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_sign_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_key_create_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_sign_persistent_key_int_CFLAGS  = $(TESTS_CFLAGS) \\\n-DPERSISTENT\ntest_integration_fapi_key_create_sign_persistent_key_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_sign_persistent_key_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_sign_persistent_key_int_SOURCES = \\\n    test/integration/fapi-key-create-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_sign_password_provision_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_key_create_sign_password_provision_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_sign_password_provision_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_sign_password_provision_int_SOURCES = \\\n    test/integration/fapi-key-create-sign-password-provision.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_sign_policy_provision_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PROFILE=\\\"P_RSA_sh_policy\\\" -DFAPI_TEST_EK_CERT_LESS\ntest_integration_fapi_key_create_sign_policy_provision_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_sign_policy_provision_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_sign_policy_provision_int_SOURCES = \\\n    test/integration/fapi-key-create-sign-policy-provision.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_sign_rsa_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_key_create_sign_rsa_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_sign_rsa_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_sign_rsa_int_SOURCES = \\\n    test/integration/fapi-key-create-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_sign_password_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PASSWORD\ntest_integration_fapi_key_create_sign_password_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_sign_password_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_sign_password_int_SOURCES = \\\n    test/integration/fapi-key-create-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_sign_password_da_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PASSWORD -DFAPI_DA\ntest_integration_fapi_key_create_sign_password_da_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_sign_password_da_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_sign_password_da_int_SOURCES = \\\n    test/integration/fapi-key-create-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_sign_persistent_int_CFLAGS  = $(TESTS_CFLAGS) \\\n   -DFAPI_PROFILE=\\\"P_RSA_EK_persistent\\\" -DFAPI_TEST_EK_CERT_LESS\ntest_integration_fapi_key_create_sign_persistent_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_sign_persistent_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_sign_persistent_int_SOURCES = \\\n    test/integration/fapi-key-create-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_authorize_sign_int_CFLAGS  = $(TESTS_CFLAGS) -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_key_create_policy_authorize_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_authorize_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_authorize_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-authorize-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_authorize_sign_rsa_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DFAPI_PROFILE=\\\"P_RSA256\\\" -DFAPI_TEST_EK_CERT_LESS\ntest_integration_fapi_key_create_policy_authorize_sign_rsa_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_authorize_sign_rsa_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_authorize_sign_rsa_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-authorize-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_authorize_nv_sign_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_key_create_policy_authorize_nv_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_authorize_nv_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_authorize_nv_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-authorize-nv-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_secret_nv_sign_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DFAPI_PROFILE=\\\"P_RSA256\\\" -DFAPI_TEST_EK_CERT_LESS\ntest_integration_fapi_key_create_policy_secret_nv_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_secret_nv_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_secret_nv_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-secret-nv-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_pcr_sign_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_key_create_policy_pcr_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_pcr_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_pcr_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-pcr-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_signed_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_key_create_policy_signed_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_signed_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_signed_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-signed.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_signed_ecc_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DTEST_ECC\ntest_integration_fapi_key_create_policy_signed_ecc_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_signed_ecc_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_signed_ecc_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-signed.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_nv_sign_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_key_create_policy_nv_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_nv_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_nv_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-nv-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_or_sign_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_key_create_policy_or_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_or_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_or_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-or-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_password_sign_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_POLICY_PASSWORD -DTEST_PASSWORD\ntest_integration_fapi_key_create_policy_password_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_password_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_password_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policies-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_countertimer_sign_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_POLICY_COUNTERTIMER\ntest_integration_fapi_key_create_policy_countertimer_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_countertimer_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_countertimer_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policies-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_physical_presence_sign_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_POLICY_PHYSICAL_PRESENCE\ntest_integration_fapi_key_create_policy_physical_presence_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_physical_presence_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_physical_presence_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policies-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_locality_sign_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_POLICY_LOCALITY\ntest_integration_fapi_key_create_policy_locality_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_locality_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_locality_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policies-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_command_code_sign_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_POLICY_COMMAND_CODE\ntest_integration_fapi_key_create_policy_command_code_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_command_code_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_command_code_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policies-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_auth_value_sign_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DTEST_POLICY_AUTH_VALUE -DTEST_PASSWORD\ntest_integration_fapi_key_create_policy_auth_value_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_auth_value_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_auth_value_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policies-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_ckda_sign_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_key_create_ckda_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_ckda_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_ckda_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-ckda-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_ckda_sign_password_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PASSWORD  -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_key_create_ckda_sign_password_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_ckda_sign_password_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_ckda_sign_password_int_SOURCES = \\\n    test/integration/fapi-key-create-ckda-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_ckda_sign_password_da_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PASSWORD -DFAPI_DA  -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_key_create_ckda_sign_password_da_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_ckda_sign_password_da_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_ckda_sign_password_da_int_SOURCES = \\\n    test/integration/fapi-key-create-ckda-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_change_auth_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_key_change_auth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_change_auth_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_change_auth_int_SOURCES = \\\n    test/integration/fapi-key-change-auth.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_nv_ordinary_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_nv_ordinary_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_nv_ordinary_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_nv_ordinary_int_SOURCES = \\\n    test/integration/fapi-nv-ordinary.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_nv_authorizenv_cphash_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_nv_authorizenv_cphash_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_nv_authorizenv_cphash_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_nv_authorizenv_cphash_int_SOURCES = \\\n    test/integration/fapi-nv-authorizenv-cphash.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_nv_extend_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_nv_extend_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_nv_extend_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_nv_extend_int_SOURCES = \\\n    test/integration/fapi-nv-extend.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_nv_increment_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_nv_increment_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_nv_increment_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_nv_increment_int_SOURCES = \\\n    test/integration/fapi-nv-increment.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_nv_set_bits_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_nv_set_bits_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_nv_set_bits_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_nv_set_bits_int_SOURCES = \\\n    test/integration/fapi-nv-set-bits.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_nv_written_policy_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_nv_written_policy_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_nv_written_policy_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_nv_written_policy_int_SOURCES = \\\n    test/integration/fapi-nv-written-policy.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_ext_public_key_int_CFLAGS  = $(TESTS_CFLAGS) \\\n  -DFAPI_NONTPM\ntest_integration_fapi_ext_public_key_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_ext_public_key_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_ext_public_key_int_SOURCES = \\\n    test/integration/fapi-ext-public-key.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_data_crypt_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_data_crypt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_data_crypt_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_data_crypt_int_SOURCES = \\\n    test/integration/fapi-data-crypt.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_data_crypt_persistent_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DPERSISTENT\ntest_integration_fapi_data_crypt_persistent_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_data_crypt_persistent_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_data_crypt_persistent_int_SOURCES = \\\n    test/integration/fapi-data-crypt.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_data_crypt_rsa_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_data_crypt_rsa_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_data_crypt_rsa_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_data_crypt_rsa_int_SOURCES = \\\n    test/integration/fapi-data-crypt.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_data_crypt_rsa_persistent_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PROFILE=\\\"P_RSA\\\" -DPERSISTENT\ntest_integration_fapi_data_crypt_rsa_persistent_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_data_crypt_rsa_persistent_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_data_crypt_rsa_persistent_int_SOURCES = \\\n    test/integration/fapi-data-crypt.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_duplicate_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_duplicate_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_duplicate_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_duplicate_int_SOURCES = \\\n    test/integration/fapi-duplicate.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_pcr_test_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_pcr_test_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_pcr_test_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_pcr_test_int_SOURCES = \\\n    test/integration/fapi-pcr-test.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_quote_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_quote_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_quote_int_LDFLAGS = $(TESTS_LDFLAGS) -ljson-c\ntest_integration_fapi_quote_int_SOURCES = \\\n    test/integration/fapi-quote.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_quote_rsa_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_quote_rsa_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_quote_rsa_int_LDFLAGS = $(TESTS_LDFLAGS) -ljson-c\ntest_integration_fapi_quote_rsa_int_SOURCES = \\\n    test/integration/fapi-quote.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_info_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_info_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_info_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_info_int_SOURCES = \\\n    test/integration/fapi-info.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_unseal_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_unseal_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_unseal_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_unseal_int_SOURCES = \\\n    test/integration/fapi-unseal.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_unseal_persistent_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DPERSISTENT\ntest_integration_fapi_unseal_persistent_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_unseal_persistent_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_unseal_persistent_int_SOURCES = \\\n    test/integration/fapi-unseal.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_provision_fingerprint_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_TEST_FINGERPRINT  -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_provision_fingerprint_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_provision_fingerprint_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_provision_fingerprint_int_SOURCES = \\\n    test/integration/fapi-get-random.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_provision_certificate_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_TEST_CERTIFICATE  -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_provision_certificate_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_provision_certificate_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_provision_certificate_int_SOURCES = \\\n    test/integration/fapi-get-random.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_provision_fingerprint_ecc_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_TEST_FINGERPRINT_ECC  -DFAPI_PROFILE=\\\"P_ECC\\\"\ntest_integration_fapi_provision_fingerprint_ecc_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_provision_fingerprint_ecc_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_provision_fingerprint_ecc_int_SOURCES = \\\n    test/integration/fapi-get-random.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_provision_certificate_ecc_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_TEST_CERTIFICATE_ECC  -DFAPI_PROFILE=\\\"P_ECC\\\"\ntest_integration_fapi_provision_certificate_ecc_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_provision_certificate_ecc_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_provision_certificate_ecc_int_SOURCES = \\\n    test/integration/fapi-get-random.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\nendif #FAPI\n\nendif #ENABLE_INTEGRATION\n\ncheck-ptpm:\n\t$(MAKE) -j1 check\n",
        "/tmp/vanessa/spack-stage/spack-stage-tpm2-tss-2.4.2-ljxccjrnvtunhp4l4uabku6enzs53d4j/spack-src/CHANGELOG.md": "# Change Log\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/)\n\n## [2.4.2]\n### Fixed\n- Fixed duoble json_object_put call in event log processing.\n- Fixed memory leaks on error paths in FAPI\n- Fixed setting of FAPI app data.\n- Fixed size check for Fapi_Encrypt.\n- Fixed computation of PCR logs and PCR digest of PCR logs.\n- Improved comments for FAPI authentication.\n- Fixed segfault and leaks in FAPI\n- Fixed Fapi_GetCertificate for objects which are not of type key\n- Fixed hierarchy usage in Fapi_Provision\n- Fixed ESYS Shared secret calculation\n- Fixed doxygen warnings for FAPI docs\n- Fixed copying of primary template during key loading.\n- Fixed some wrong format directives in debug statements.\n- Fixed usage of hierarchy and authentication in Fapi_GetCertificate und Fapi_Delete\n- Fixed unallocated return buffers which may have lead to segfaults in tooling\n- Fixed usage of persistent handles.\n- Fixed computation of the size of a PCR selection (Fixes #1737).\n- Fixed missing hierarchy authentication for Fapi_Delete.\n- Fixed uninitialized context of FAPI command Fapi_ChangeAuth.\n- Fixed computation of random value for objects used for sealing.\n- Fixed return code for event parsing errors.\n- Fixed NV index and path handling in NV creation.\n- Fixed path checking for keys.\n- Fixed Fapi_GetInfo function.\n- Fixed path usage in Fapi_Import.\n- Fixed invalid settings of default flags for keys creation.\n- Fixed handle usage in Fapi_ChangeAuth\n\n### CHANGED\n- Enabled all PCR registers for SHA256 bank in the distribution profiles.\n- Added some checks to Fapi_Provisioning to avoid nasty failure states\n- Added a check to prevent overwrite or delete FAPI storage objects and directories\n- Remove obsolete test fapi-key-create-policy-password-sign.int.c\n- Checked hierarchy needed for EvictControl for deleting objects in FAPI.\n- Checked event log file before calling the TPM in Fapi_PcrExtend.\n- Adapted integration tests to SRK delete checking.\n- Improved presentation of Fapi_GetInfo.\n- Silenced expected errors from Esys_TestParams\n\n### Added\n- Added man pages for FAPI json config files\n- Added a check that prevents deleting default directories\n- Added a check if primary keys already exist for Fapi_Provision\n- Added tests for derived persistent keys.\n- Added test policy PCR with PCR register 8.\n- Added check for deleting of the SRK.\n- Added test for sealing a random value.\n- Added content of the config file to FAPI Info.\n- Added a check for valid pathnames in keystore module.\n\n### Removed\n- Removed unecassary code from Fapi_ExportKey\n- Removed obsolete LIBDL_LDFLAGS and replace it with LIBADD_DL\n- Removed superfluous policies/pol_password.json file\n\n## [2.4.1] - 2020-05-12\n### Fixed\n- Fixed systemd-sysusers/-tmpfiles creation without systemd\n- Removed expired coverity token from travis.yaml\n- Fixed uninitialized context of FAPI command Fapi_ChangeAuth issue\n- Fixed handling of tcti pointer in Esys_Initialize\n- Fixed usages of EC routines deprecated in OSSL 1.2 and greater\n- Fixed FAPI handling of TPMs without stored certificates\n\n## [2.4.0] - 2020-03-11\n### Added\n- Added a new Feature API (FAPI) implementation\n- Added Esys_TRSess_GetAuthRequired() ESAPI function\n- Added Esys_TR_GetTpmHandle() SAPI function\n- Added Esys_GetSysContext() SAPI function\n- Added the with-sanitizer configure option\n- Added CI for FreeBSD\n\n### Changed\n- Changed MSSIM TCTI to be async capable\n- Removed TCTI loaders from ESYS dependencies in pkg-config\n- Changed getPollHandles to allow num_handles query\n- Improved CI builds\n- Converted builds to docker builds\n- Number of fixes and improvements in the test code\n- Changed tcti-device in non-async mode to allways block\n\n### Fixed\n- Fixed hmac calculation for tpm2_clear command in ESAPI\n- Fixed mixing salted and unsalted sessions in the same ESAPI context\n- Removed use of VLAs from TPML marshal code\n- Fixed setting C++ compiler for non-fuzzing builds at configure\n- Fixed setting the name of session objects\n- Fixed page alignment errors in Sys_Get/SetAuths functions\n- Fixed potential buffer overflow in tcti_mssim_receive\n- Fixed invalid memory alloc failure in Tss2_TctiLdr_Initialize\n- Fixed list of exported symbols map for libtss2-mu\n- Fixed resource name calculation in Esys_CreateLoaded\n- Fixed keysize of ECC curve TPM2_ECC_NISTP224\n- Fixed segmentation fault in tctildr if name_conf was too big\n- Fixed memory leak in tctildr-tcti tests\n- Fixed HMAC generation for policy sessions\n- Added check for object node before calling compute_session_value function\n- Fixed auth calculation in Esys_StartAuthSession called with optional parameters\n- Fixed compute_encrypted_salt error handling in Esys_StartAuthSession\n- Fixed exported symbols map for libtss2-mu\n\n### Removed\n- Remove duplicate ESYS entries from map file\n- Removed the private implementation of strndup from tctildr\n\n## [2.3.0] - 2019-08-13\n### Added\n- tss2-tctildr: A new library that helps with tcti initialization\n  Recommend to use this in place of custom tcti loading code now !\n- tss2-rc: A new library that provides textual representations for return codes\n- Added release and maintainance info (~3 per year and latest 2 are supported)\n- Support for building on VxWorks.\n- Option to disable NIST-deprecated crypto (--disable-weak-crypto)\n- Support Esys_TR_FromTPMPublic on sessions (for use in Esys_FlushContext)\n- Better Windows/VS Support\n- Fuzz-Testing and Valgrind-Testing\n- map-files with correct symbol lists for tss2-sys and tss2-esys\n  This may lead to unresolved symbols in linked applications\n\n### Changed\n- Several further minor fixes and cleanups\n- Support to call Tss2_Sys_Execute repeatedly on certain errors\n- Reduced RAM consumption in Esys due to Tss2_Sys_Execute change\n- Automated session attribution clearing for esys (decrypt and encrypt) per cmd\n- Switched to git.mk, many ax_ makros and away from gnulib\n- Switched to config.h and autoheaders\n\n### Removed\n- Removed libtss2-mu from \"Requires\" field of libtss2-esys.pc\n  Needs to be added explicitely now\n\n### Fixed\n- All fixes from 2.2.1, 2.2.2 and 2.2.3\n- SPDX License Identifiers\n- Null-pointer problems in tcti-tbs\n- Default locality for tcti-mssim set to LOC_0\n- coverity and valgrind leaks detected in test programs (not library code)\n\n## [2.2.3] - 2019-05-28\n### Fixed\n - Fixed computation of session name\n - Fixed PolicyPassword handling of session Attributes\n - Fixed windows build from dist ball\n - Fixed default tcti configure option\n - Fixed nonce size calculation in ESYS sessions\n\n## [2.2.2] - 2019-03-28\n### Fixed\n - Fixed wrong encryption flag in EncryptDecrypt\n - Fixing openssl engine invocation\n\n## [2.2.1] - 2019-02-28\n### Fixed\n - Forced RAND_bytes method to software implementation to avoid session spoofing\n - Fixed OpenSSL symbolic naming conflict\n - Fixed leaks of local point variables and BN_ctx\n - Fixed memory leaks related to using regular free on gcrypt allocated objects\n - Fixed leak of rsa->n in iesys_cryptossl_pk_encrypt\n - Fixed memory leaks in iesys_cryptossl_pk_encrypt\n - Fixed possible NULL dereference of big number\n\n## [2.2.0] - 2019-02-04\n### Fixed\n- Fixed leak of hkey on success in iesys_cryptossl_hmac_start\n- Fixed NULL ptr issues in Esys_HMAC_Start, Esys_HierarchyChangeAuth and Esys_NV_ChangeAuth\n- Fixed NULL ptr issue in sequenceHandleNode\n- Fixed NULL ptr auth handling in Esys_TR_SetAuth\n- Fixed NULL auth handling in iesys_compute_session_value\n- Fixed marshaling of TPM2Bs with sub types.\n- Fixed NULL ptr session handling in Esys_TRSess_SetAttributes\n- Fixed the way size of the hmac value of a session without authorization\n- Added missing MU functions for TPM2_NT type\n- Added missing MU functions for TPMA_ID_OBJECT type\n- Added missing type TPM2_NT into tss2_tpm2_types.h\n- Fixed wrong typename _ID_OBJECT in tss2_tpm2_types.h\n- Fixed build breakage when --with-maxloglevel is not 'trace'\n- Fixed build breakage in generated configure script when CFLAGS is set\n- Fixed configure scritp ERROR_IF_NO_PROG macro\n- Changed TPM2B type unmarshal to use sizeof of the dest buffer instead of dest\n- Fixed unmarshaling of the TPM2B type with invalid size\n- Removed dead code defect detected by coverity from Esys_TRSess_GetNonceTPM\n\n### Added\n- Added support for QNX build\n- Added support for partial reads in device TCTI\n\n## [2.1.1] - 2019-02-04\n### Fixed\n- Fixed leak of hkey on success in iesys_cryptossl_hmac_start\n- Fixed NULL ptr issues in Esys_HMAC_Start, Esys_HierarchyChangeAuth and Esys_NV_ChangeAuth\n- Fixed NULL ptr issue in sequenceHandleNode\n- Fixed NULL ptr auth handling in Esys_TR_SetAuth\n- Fixed NULL auth handling in iesys_compute_session_value\n- Fixed marshaling of TPM2Bs with sub types.\n- Fixed NULL ptr session handling in Esys_TRSess_SetAttributes\n- Fixed the way size of the hmac value of a session without authorization\n- Added missing MU functions for TPM2_NT type\n- Added missing MU functions for TPMA_ID_OBJECT type\n- Added missing type TPM2_NT into tss2_tpm2_types.h\n- Fixed wrong typename _ID_OBJECT in tss2_tpm2_types.h\n- Fixed build breakage when --with-maxloglevel is not 'trace'\n- Fixed build breakage in generated configure script when CFLAGS is set\n- Fixed configure scritp ERROR_IF_NO_PROG macro\n- Changed TPM2B type unmarshal to use sizeof of the dest buffer instead of dest\n- Fixed unmarshaling of the TPM2B type with invalid size\n- Removed dead code defect detected by coverity from Esys_TRSess_GetNonceTPM\n\n## [2.1.0]\n### Fixed\n- Fixed handling of the default TCTI\n- Changed logging to be ISO-C99 compatible\n- Fixed leak of dlopen handle\n- Fixed logging of a response header tag in Tss2_Sys_Execute\n- Fixed marshaling of TPM2B parameters in SAPI commands\n- Fixed unnecessary warning in Esys_Startup\n- Fixed warnings in doxygen documentation\n\n### Added\n- Added Esys_Free wrapper function for systems using different C runtime libraries\n- Added Windows TBS TCTI\n- Added non-blocking mode of operation in tcti-device\n- Added tests for Esys_HMAC and Esys_Hash\n- Enabled integration tests on physical TPM device\n- Added openssl libcrypto backend\n- Added Doxygen documentation to integration tests\n\n### Changed\n- Refactored SetDecryptParam\n- Enabled OpenSSL crypto backend by default\n\n## [2.0.2] - 2019-02-04\n### Fixed\n- Fixed NULL ptr issues in Esys_HMAC_Start, Esys_HierarchyChangeAuth and Esys_NV_ChangeAuth\n- Fixed NULL ptr issue in sequenceHandleNode\n- Fixed NULL ptr auth handling in Esys_TR_SetAuth\n- Fixed NULL auth handling in iesys_compute_session_value\n- Fixed marshaling of TPM2Bs with sub types.\n- Fixed NULL ptr session handling in Esys_TRSess_SetAttributes\n- Fixed the way size of the hmac value of a session without authorization\n- Added missing MU functions for TPM2_NT type\n- Added missing MU functions for TPMA_ID_OBJECT type\n- Added missing type TPM2_NT into tss2_tpm2_types.h\n- Fixed wrong typename _ID_OBJECT in tss2_tpm2_types.h\n- Fixed build breakage when --with-maxloglevel is not 'trace'\n- Fixed build breakage in generated configure script when CFLAGS is set\n- Fixed configure scritp ERROR_IF_NO_PROG macro\n- Changed TPM2B type unmarshal to use sizeof of the dest buffer instead of dest\n- Fixed unmarshaling of the TPM2B type with invalid size\n- Removed dead code defect detected by coverity from Esys_TRSess_GetNonceTPM\n\n## [2.0.1] - 2018-08-10\n### Fixed\n- Fixed problems with doxygan failing make distcheck\n- Fixed conversion of gcrypt mpi numbers to binary data\n- Fixed an error in parsing socket address in MSSIM TCTI\n- Fixed compilation error with --disable-tcti-mssim\n- Added initialization function for gcrypt to suppress warning\n- Fixed invalid type base type while marshaling TPMI_ECC_CURVE in Tss2_Sys_ECC_Parameters\n- Fixed invalid RSA encryption with exponent equal to 0\n- Fixed checking of return codes in ESAPI commands\n- Added checks for programs required by the test harness @ configure time\n- Fixed warning on TPM2_RC_INITIALIZE rc after a Startup in Esys_Startup\n- Checked for 1.2 TPM type response\n- Changed constants values in esys header file to unsigned\n\n## [2.0.0] - 2018-06-20\n### Added\n- Implementation of the Marshal/Unmarshal library (libtss2-mu)\n- Implementation of the Enhanced System API (libtss2-esys aka ESAPI)\n- New implemetation of the TPM Command Transmission Interface (TCTI) for:\n  - communication with Linux TPM2 device driver: libtss2-tcti-device\n  - communication with Microsoft software simulator: libtss2-tcti-mssim\n- New directory layout (API break)\n- Updated documentation with new doxygen and updated man pages\n- Support for Windows build with Visual Studio and clang, currently limited\nto libtss2-mu and libtss2-sys\n- Implementation of the new Attached Component (AC) commands\n- Implementation of the new TPM2_PolicyAuthorizeNV command\n- Implementation of the new TPM2_CreateLoaded command\n- Implementation of the new TPM2_PolicyTemplate command\n- Addition of _Complete functions to all TPM commands\n- New logging framework\n- Added const qualifiers to API input pointers (API break)\n- Cleaned up headers and remove implementation.h and tpm2.h (API break)\n### Changed\n- Converted all cpp files to c, removed dependency on C++ compiler.\n- Cleaned out a number of marshaling functions from the SAPI code.\n- Update Linux / Unix OS detection to use non-obsolete macros.\n- Changed TCTI macros to CamelCase (API break)\n- Changed TPMA_types to unsigned int with defines instead of bitfield structs (API/ABI break)\n- Changed Get/SetCmd/RspAuths to new parameter types (API/ABI break)\n- Fixed order of parameters in AC commands: Input command authorizations\nnow come after the input handles, but still before the command parameters.\n### Removed\n- Removed all sysapi/sysapi_utils/*arshal_TPM*.c files\n### Fixed\n- Updated invalid number of handles in TPM2_PolicyNvWritten and TPM2_TestParms\n- Updated PlatformCommand function from libtss2-tcti-mssim to no longer send\nCANCEL_OFF before every command.\n- Expanded TPM2B macros and removed TPM2B_TYPE1 and TPM2B_TYPE2 macros\n- Fixed wrong return type for Tss2_Sys_Finalize (API break).\n\n## [1.4.0] - 2018-03-02\n### Added\n- Attached Component commands from the last public review spec.\n### Fixed\n- Essential files missing from release tarballs are now included.\n- Version string generation has been moved from configure.ac to the\nbootstrap script. It is now stored in a file named `VERSION` that is\nshipped in the release tarball.\n- We've stopped shipping the built man page for InitSocketTcti.3 and now\nship the source.\n\n## [1.3.0] - 2017-12-07\n### Added\n- Implementation of the EncryptDecrypt2 command.\n- Coding standard documentation.\n- Support for latest TPM2 simulator v974 (only changes in test harness).\n- Check cmocka version for compatibility with 1.0 API.\n### Fixed\n- Definition of HMAC_SESSION_LAST and POLICY_SESSION_LAST.\n- Drop cast from TPM_ALG_XXX definitions\n- Use mock functions with built-in cast to avoid compiler warnings from\nmanual cast.\n- Free memory correctly on error condition return paths in InitSysContext\n& SockServer.\n\n## [1.2.0] - 2017-08-25\n### Added\n- Support for PTT-specific capabilities.\n- Manuals with overviews for SAPI and TCTI layers & TCTI init functions.\n- Further decomposition of the tpmclient program into an integration test\nharness based on the automake infrastructure.\n### Changed\n- File list generated by bootstrap script is now sorted to play nice with\nreproducible builds.\n- Test harness now supports parallel execution of integration tests.\n- libtcti-socket interrupted syscalls now resume.\n- Additional hardening of compiler / linker flags.\n- All options supported by `tpmclient` executable now removed.\n- Unimplemented TCTI functions now return NOT_IMPLEMENTED RC.\n### Fixed\n- NULL dereference bugs in TCTI modules.\n- Cleanup & structure initialization to keep coverity scans happy.\n- Fixed memory leak in integration test harness.\n\n## [1.1.0] - 2017-05-10\n### Changed\n- tpmclient, disabled all tests that rely on the old resourcemgr.\n### Fixed\n- Fixed definition of PCR_LAST AND TRANSIENT_LAST macros.\n### Removed\n- tpmtest\n- resourcemgr, replacement is in new repo: https://github.com/01org/tpm2-abrmd\n\n## [1.0] - 2016-11-01\n### Added\n- Travis-CI integration with GitHub\n- Unit tests for primitive (un)?marshal functions.\n- Example systemd unit for resourcemgr.\n- Allow for unit tests to be enabled selectively.\n- added pkg-config files for libraries\n### Changed\n- move simulator initialization code to socket TCTI init function.\n- socket TCTI finalize no longer frees context\n- rename libtss2 to libsapi\n- rename libtcti_device to libtcti-device\n- rename libtcti_socket to libtcti-socket\n- move $(includedir)/tss to $(includedir)/sapi\n- Move default compiler flags to config.site file.\n### Fixed\n- Fix run away resourcemgr threads by closing client sockets when resourcemgr\nrecv() call returns 0.\n- Set MSG_NOSIGNAL for client connections to avoid SIGPIPE killing\nresourcemgr.\n- Fixes to handling of persistent objects by resourcemgr.\n### Removed\n- Semicolon from TPMA_* macros definitions.\n- Windows build files.\n- SAPI_CLIENT macro tests.\n### Security\n- Fix buffer overflow in resourcemgr.\n\n## [0.98] - 2015-07-28\n### Added\n- Added ability for resource manager to communicate with a real TPM via\n/dev/tpm0 (Linux only). Added command line switch to select simulator if not\ncommunicating with a real TPM.\n### Changed\n- Rearranged directory structure in a more logical fashion.\n- Changed name of Linux makefiles from \u201cmakefile.linux\u201d to makefile. This was\ndone in preparation for autotools porting (future enhancement).\n- Changed tpm library\u2019s windows makefile from \u201cmakefile\u201d to \u201cwindows.mak\u201d.\n- Changed all makefiles and Visual Studio solution and project files to work\nwith new directory structure.\n- Split out debug and TPM platform command code in tpmsockets.cpp into\nseparate files. This code didn\u2019t belong in this file.\n\n## [0.97] - 2015-??-??\n### Added\n- Added code to save context in RM table when an object is context loaded.\n- Added code to get hierarchy from context when object is context loaded.\n- Added targeted test to tpmclient.cpp to make sure that hierarchy is saved\n- Added code to print level-specific messages when errors occur.\n- Added test for EvictControl.Fixed TestEncryptDecryptSession to work with\n1.22 simulator.\n- Added code to check that TPM2B output parameters' size fields are set to 0\nfor following structures: TPM2B_ECC_POINT, TPM2B_PUBLIC, TPM2B_NV_PUBLIC, and\nTPM2B_CREATION_DATA.\n### Changed\n- Fixed resource manager issues with leaving objects and session contexts in\nTPM memory. This was causing a 902 error on 2nd pass of PolicyTests. And it\ncould have caused issues when error conditions occurred, because in those\ncases, the contexts weren't being evicted.\n- Changed TAB/RM into a separate executable (daemon).\n- Fixed bug: if LoadContext fails when loading objects it should exit\nResourceMgrSendTpmCommand immediately. Instead it was loading other objects\nand proceeding through the rest of ResourceMgrSendTpmCommand function.\ncorrectly for ContextLoad command.\n- Fixed issues with TCTI: opaque data shouldn't be defined in tss2_tcti.h\nfile.\n- Fixed makefile issue: under Windows, it was using mkdir command instead of\nmd.\n- Fixed issue with definition of TSS2_TCTI_POLL_HANDLE in tss2_tcti.h file.\n- Fixed bug: wasn't handling case for TPM errors correctly in CheckPassed.\n- Changed CheckOverflow to return SAPI error level for errors. Other levels of\nTSS that call this function will alter the error level field.\n- Fixed resource manager to properly handle EvictControl commands. Before, if\na persistent object was needed, the RM would give a 0xc0002 error.\n- Fixed printf's in resource manager so that they only print the right # of\ncharacters.\n- Fixed TestShutdown to work with 1.22 simulator.\n\n## [0.96] - 2015-04-16\n### Added\n- Added buffer overrun checks to all SAPI code.\n- Added buffer overrun checks to resource manager code.\n- Added code to Part 3 functions to properly handle null pointers for output\nparameters.\n### Changed\n- Auto-generated most of the SAPI code from the TPM 2.0 specification.\n\n## [0.95.1] - 2015-01-26\n### Added\n- Added code to dynamically work around simulator 1.19 bugs:\n- Added code to RM and simDriver to support timeout on receive calls.\n- Added code to properly handle TPM errors in ExecuteFinish. Previously it was\nignoring these errors, which meant that the rest of the _Complete call would\ntry to unmarshal non-existent response data. Added test case for this.\n- Added support for cancel commands and tests for this.\n- Added help text for command line options.\n- Added code to reset dictionary attacks to start of tpmclient tests: this\nworks around an issue where the simulator doesn't seem to completely clear the\ndictionary attack counter.\n- Added support for TCTI setLocality to resource manager and sim driver and\nmade test app use this.\n- Added RM tests.\n- Added code to RM to evict contexts for objects, sequences, and sessions\nwhose handles are returned by commands.\n- Added code to properly support ContextSave.\n- Added proper error code levels to all RM errors.\n- Added code to LoadContext function to output TPM formatted error codes.\n- For Create and Load commands, added proper handling of errors if parent\nhandle not found.\n- Added tests for bad session handle, both in handle area and in authorization\narea.\n- Added command line option to run the StartAuthSession tests by themselves.\n- Added support for command line control of debug message levels.\n- Added new error level for resource manager for errors received from TPM from\ncommands sent by RM.\n- Added error return for insufficiently sized response to ExecuteFinish\nfunction.\n- Added gap support to resource manager.\n- Added support to resource manager for kicking out oldest session if max\nsessions have been started and a new one is being created.\n- Added getCap calls to RM init function for getting max sessions and gap\nlimit.\n- Added code to teardown the RM.\n- Added test for session gapping.\n- Added code to proactively detect MAX_ACTIVE_SESSIONS.\n- Added SAPI library subproject to test app project. This allows a one-touch\nbuild in Visual Studio.\n- Added changes to return error codes from TAB/RM and layers underneath in a\nresponse byte stream.\n### Changed\n- Fixed bug in CreatePrimary and Create: for one-call and decrypt session\ncase, they were copying first parameter from incorrect pointer.\n- For CopyCreationDataOut, CopyECCPointOut, CopyNvPublicOut, CopyPublicOut\nadded placeholder for return code if size != 0 when called. To be filled in\nwhen TSS WG decides on error code.\n- Fixed bugs in CopySensitiveCreateIn and CopySensitiveIn: they shouldn't look\nat the size.\n- Fixed bugs in CopyECCPointIn, CopyNvPublicIn, CopyPublicIn, CopySensitiveIn,\nand CopySensitiveCreateIn: not handling NULL outpul parameters correctly.\n- Changes all instances of calls to ExecuteFinish to a timeout that works for\nall cases including communicating with the simulator over the network.\n- Fixed call to LoadExternal in TestUnseal--needed to pass in a NULL pointer\nfor the inSensitive parameter.\n- Fixed bug in CreatePrimary: not passing correct pointer for inSensitive.\n- Fixed timeouts for all ExecuteFinish calls in test application.\n- Fixed bugs in RM: cases where I wasn't handling errors and then parsing data\nthat hadn't been received. Caused seg faults under Linux.\n- Fixed timeout for async Startup test.\n- Fixed SocketReceiveTpmResponse for blocking case.\n- Fixed bug in ExecuteFinish: BAD_SEQUENCE error generated early in function\nwas getting overwritten by INSUFFICIENT_RESPONSE error.\n- Fixed bug in ExecuteFinish: it was always setting timeout to 0 instead of\nTSS2_TCTI_TIMEOUT_BLOCK.\n- Fixed bug in resource manager: error level for non-TPM errors was getting\noverwritten with resource manager error level.\n- Replace Implementation.h with implementation.h.\n- Changed name of TPMB.h tpmb.h\n- GetCapability with bad property returns different error code.\n- Shutdown with bad value for shutdownValue causes TPM to go into failure\nmode.\n- Fixed overlap in error codes: TSS2_BASE_RC_NOT_SUPPORTED and\nTSS2_BASE_RC_BAD_TCTI_STRUCTURE had same value.\n- Cleaned up all app level error codes.\n- Fixed bug with ordering of -startAuthSessionTest command line parameter: if\nit was not the last option, tpmclient would fail.\n- Fixed bugs related to ContextLoad.\n- Fixed bug in EvictContext: it was updating lastSessionSequenceNum even if\nthe ContextSave command failed.\n- Fixed handling of RM errors that occur during command send.\n- Fixed bug in simDriver init function. A second TCTI context being\ninitialized was re-initing the whole driver.\n- Updated to latest 1.19 header files.\n- Fixed bugs in resource manager:\n- FindOldestSession wasn't working correctly\u2014it was just finding the first\none.\n- HandleGap needed to un-gap all the session contexts from the older interval.\nIt wasn't doing that.\n- Fixed bug in handling of command line options\u2014specifying none would cause\nprogram to error out.\n- Fixed issues in cleanup of TestStartAuthSession test. It was leaving some\nsessions alive.\n- Updated copyright notices on all files.\n- Changed test app to use linked list of session structures instead of fixed\narray. This fixed a host of issues.\n- Fixed bugs in Certify, CertifyCreation, Commit, Create, CreatePrimary, and\nGetCapability: if null used for return parameters, the function would fail.\n- Fixed bug in SimpleHmacOrPolicyTest where it was re-creating the global\nsysContext causing failures in later tests because the context was too small.\n- Fixed a bug in ExecuteFinish. If response is too small, code was just using\nthe command buffer as the response buffer instead of returning an error.\n- Fixed some places in test app where I wasn't deleting entries from the\nsessions table.\n- Fixed build warnings related to size mismatch of connectionId.\n- Changed TeardownSysContext to zero out freed context pointer.\n- This helps prevent double free errors.\n- Fixed bug in EncryptDecryptXOR: wasn't setting the size of the outputData\nbuffer.\n### Removed\n- Removed 'extern \"C\"' statement from resourcemgr.c file. Not needed and\ncauses problems with some compilers.\n- Removed unneeded includes from resource manager source.\n\n## [0.95] - 2014-10-17\n### Added\n- Added support for Shutdown/Startup and effects on saved contexts.\n- Added support for stClear bit objects. On a TPM Restart, objects with this\nbit set will be removed from the TAB/RM entry list.\n- Added TCTI teardown function.\n- Added TAB functionality.\n- Added TCTI layer below RM to talk to driver. This allows making calls into\nthe SAPI library from the RM without recursing into the RM again. With the\nseparate TCTI context, the RM can route SAPI calls to talk directly to the\ndriver. This fixed the virtual/real handle mess that was occurring with\nrecursively entering the RM.\n- Added function pointers to TAB/RM for functions that might need to be\ndifferent based on the environment that TAB/RM is running in: malloc, free,\nprintf.\n- Added and corrected error codes to match latest SAPI spec.\n- Added MAX_NV_BUFFER_SIZE and used for max size of MAX_NV_BUFFER_2B.\n- Added code to TestHash to calculate and validate a hash.\n- Added code to TestHash to force a flush of an active sequence and then use\nit to finish the hash calculation.\n- Added code to SimpleHMACTest to read the NV index back.\n- Added SimpleHMACOrPolicyTest function which helps illustrate the difference\nbetween HMAC and policy sessions.\n### Changed\n- Fixed intermittent access violation bug with GetSetDecryptParamTests\nfunction. I was reading off the end of the nvWrite buffer.\n- Fixed bug in Tss2_Sys_GetContextSize function: it was getting the requested\nsize only, not the requested size plus the context blob's size. Problem was an\nassociativity issue with ternary conditional ?: operator.\n- Re-architected TAB/RM:\n- Changed RM from reactive mode to proactive mode. Now instead of reacting to\nerror codes from the TPM that indicate no enough slots, it guarantees that the\nTPM is always ready for each command (all slots freed after execution of each\ncommand).\n- Replaced the fixed length arrays of RM structures with linked list\nstructures and appropriate functions.\n- Fixed some cases of using pointers before checking that they're not NULL.\n- Fixed bugs in marshaling/unmarshaling routines and added some missing\nunmarshaling functions.\n- Fixed hash sequence test.\n- Fixed bugs in CopyCapabilityDataOut function for algorithms.\n- Fixed bug with ExecuteAsync: passed in BE size to transmit call. Needs to be\nhost-endian.\n- Changed on bit fields in TPM2 data structures to unsigned int. Previously\nthe compiler was generating incorrect code because these were int bit fields.\n- Cleaned up TestHash function.\n### Removed\n- Removed most instances of sysContext in tpmclient.cpp. Now most tests use\nthe global one.\n- Removed pack pragma from header files for external interfaces.\n\n## [0.93] - 2014-08-01\n### Added\n- Added IsSession routine and fixed all instances in resource manager where a\nhandle is checked for being a session handle (some were incorrect).\n- Added RollNonces function and used for all tests for HMAC and policy\nsessions.\n- Added TCTI malformed response error code.\n- Added simple HMAC test.\n- Added test for session parameter encryption and decryption.\n- Added more descriptive error codes to StartAuthSession function.\n- Added TpmHashSequence function. Used this build password/PCR policy.\n- Added more policy tests: password/PCR, authValue, password\n- Added code to flush context of session handles I'm not using.\n- Added GetTestResult functions (had missed these previously)\n- Added tests for asynchronous and synchronous non-one call to Startup tests.\n- Added GetTestResult tests.\n- Added test to create a bunch of sessions. This test found some resource\nmanager issues.\n### Changed\n- Fixed bad parameters on call to GetEncryptParam. This only failed on Linux\nsystems.\n- Fixed minor build errors under Linux.\n- Eliminated unneeded code in TestPolicy.\n- Changed how nonce's are setup after StartAuthSession. Before they were being\ninherently rolled in preparation for first command. Now the RollNonces routine\nwill need to be called before the first command. This makes handling of the\nnonces consistent for all code that needs to roll them.\n- Fixed bug in StartAuthSession: wasn't marshaling symmetric parameter\nproperly if algorithm was TPM_ALG_XOR.\n- Fixed bug in SetDecryptParam: when inserting a decrypt param, the code\nwasn't updating the command size field.\n- Fixed bug in ExecuteFinish: wasn't returning TPM error code if no other\nerrors had occurred.\n- Fixed bug in KDFa function: if key size was zero, this was just returning\nsuccess, but not generating a key. That behavior is specific to session key\ngeneration not to the underlying KDFa function. Upleveled that code into\nStartAuthSession function so that it only occurs in the session key generation\ncase.\n- Changed NV attributes for all NV indices to add orderly attribute. This\nhelps, but doesn't entirely relieve, NV wearout issues with the tests.\n- Changed NV attributes for all NV indices to add orderly attribute. This\nhelps, but doesn't entirely relieve, NV wearout issues with the tests.\n- Fixed a bunch of resource manager issues. Many of these were exposed by the\nnew policy tests.\n- Updated resource manager to properly handle sessions. Before we were not\nswapping them in as needed.\n- Updated readme.docx file. Now tests can run with V1.15 version of MS\nsimulator.\n- Made test app work with MS simulator version 1.15. Had to add command to\nturn on NV. Before this change, when running against MS simulator,\nTPM2_Startup would fail with 0x923 error: \"ERROR: WARNING,\nTPM_RC_NV_UNAVAILABLE: the command may require writing of NV and NV is not\ncurrent accessible.\"\n- Changed NO_RESPONSE_RECEIVED error code to IO_ERROR.\n- Cleaned up defines for MS simulator commands.\n### Removed?\n- Removed an unused input parameter from ComputeCommandHmacs and\nCheckResponseHmacs.\n- Removed an unused input parameter from ComputeCommandHmacs and\nCheckResponseHmacs.\n- Removed DRIVER_NOT_FOUND and DRIVERINFO_NOT_FOUND error codes.\n\n## [0.92] - 2014-06-17\n### Changed\n- Fixed bugs in sockets send and receive code. Needed to account for actual\nbytes sent/received instead of assuming them. This was causing intermittent\nerrors when looping continuously on the tests and running the tests remotely\n(on a different host system than the simulator was running on).\n- Fixed SAPI and test app builds to not fail if directories are already\npresent. Suppressed error messages related to mkdir.\n- Turned on compiler warnings and fixed all issues when building under Ubuntu\nLinux.\n- Fixed error in readme.docx file. I was specifying the wrong version of the\nsimulator.\n- Fixed error handling if sockets interface fails to connect.\n- Fixed build error: now I make directories that are needed.\n\n## [0.91] - 2014-06-04\n### Added\n- Added code optimized builds to System API library code\n- Added warning flags to compiler command lines.\n### Changed\n- Fixed all compiler warnings when built under Windows and Linux.\n\n## [0.90] - 2014-05-28\n### Added\n- Added support for encrypt/decrypt sessions with one-call functions.\n- Added cleaned up and reorganized header files that comply with latest SAPI\nspecification.\n- Added changes for supporting get/set encrypt/decrypt functions.\n- Added latest header file that corresponds to version 1.03 of TPM 2.0\nspecification.\n- Added debug display of command string for each command being run.\n- Added command line flag to slow down test display for demo purposes.\n- Added option to loop the tests continuously.\n### Changed\n- Ported existing functionality to latest SAPI spec.\n- Cleaned up and added comments to PasswordTest.\n- Fixed problem of hang when looping through tests. Sessions table was running\nout of entries because we weren't removing sessions that were closed.\n- Fixed issue with resource manager. All virtual handles had the high nibble\nset to 0xff. Now the high nibble is left intact so that applications can\ndetermine the type of the handle.\n### Notes\n1. Testing is not comprehensive. See test code to see what\u2019s tested. Please\nreport any bugs found so that fixes can be rolled out.\n2. Range checks within SAPI code not yet implemented.\n3. Still need to add support for separate debug and production builds.\nProduction build will be optimized for code size.\n\n## [0.82] - 2013-12-16\n### Added\n- Added support for building and running system API code and tests under\nLinux.\n- Added command line options for host name and port to test application.\n### Notes\nHMAC and cpHash calculations are only supported for NV Read and NV Write\ncommands currently. The system API changes to support this have been\nprototyped for these commands and are awaitingTSS approval before being ported\nto all the other commands.\n\n## [0.81] - 2013-12-02\n### Added\n- Added support for TPM2_PolicyNvWritten command.\n### Changed\n- Altered tests to work with 1.01 simulator.\n- Fixed errors in readme.docx.\n### Notes\nHMAC and cpHash calculations are only supported for NV Read and NV Write\ncommands currently. The system API changes to support this have been\nprototyped for these commands and are awaitingTSS approval before being ported\nto all the other commands.\n\n## [0.80] - 2013-11-19\n### Added\n- Added code to create a new session for reading/writing the NV index after\nit\u2019s first written. This tests the other case for bound sessions.\n- Added routine to start policy sessions.\n- Added policy test code--not used currently.\n### Changed\n- Fixed bugs in resource manager.\n- Fixed bugs with salted session tests.\n- Ported tests to work with 0.99 sim's version of support for bound sessions.\n- Fixed bugs in test code, with how key is generated for encrypting the salt\nfor salted session tests.\n- Fixed a rather serious bug in HmacSessionTest: CopyNvPublicIn is called to\ncopy a structure, but is had the side effect of modifying the first parameter.\nThis function really wasn't designed to be used the way it is. Worked around\nthe problem by resetting the pointer after calling CopyNvPublicIn. This\nproblem showed up as a stack corruption issue that occurred during the 4th\ntest. Basically the pointer moved enough after the first 3 tests to start\ncorrupting other variables on the stack.\n- Automated runtime setup of key for salted tests.\n- Developed changes for NVRead/Write commands to use new 2-stage method for\nhandling HMAC calculations.\n- Changed CopyPcrSelectionIn function so that it can be used by applications\nto generate policy hashes.\n- Fixed build error: changes in header files weren't causing TPM 2.0 library\nfunctions to be rebuilt.\n- Created CalcPHash helper function.\n- Changed HMAC session code to new architecture that doesn't use any helper\nfunction pointers.\n- Changed return code type form UINT32 to TPM_RC in tss_sysapi.h.\n- Changed \"authHandle\" to \"sessionHandle\" in sample code.\n- Debugged and fixed StartAuthSession2 function in test code.\n- Debugged and fixed first policy test.\n- Used new NvDefine function to help abstract some of the details of creating\nNV indices.\n- Used non-MS header file to build system API.\n- Cleaned up and reorganized files and directories.\n### Notes\nHMAC and cpHash calculations are only supported for NV Read and NV Write\ncommands currently. The system API changes to support this have been\nprototyped for these commands and are awaitingTSS approval before being ported\nto all the other commands.\n\n## [0.67] - 2013-08-07\n### Added\n- Plumbed in a resource mgr (doesn't actually do anything other than pass\nthrough at this time).\n- Added BOUND and SALTED HMAC session tests. BOUND test works, but SALTED\ndoesn't yet work.\n- Added code to delete an entity from the entity table.\n- Added code to work around an NV index anomaly with TPM simulator 0.98 and\nprevious versions: after the first NV index write, the name changes. This\ncauses the TPM's HMAC calculation to treat the index as if it's never the\nBOUND entity, even if it is. This is expected (but weird) behavior which will\nbe fixed in 0.99 simulator.\n- Created two helper functions pointers for system API and used them for HMAC\nsessions.\n- Added support for HMAC session for NV read/write APIs.Added HMAC tests for\nunbounded/unsalted sessions.Fixed context save/restore functions.Created\nCopyNvPublicIn function and altered Tpm2_DefineSpace function to use it.\n- Created TpmHash function\n- Created TpmHandleToName function\n- Added HMAC tests for unbounded/unsalted sessions.\n- Created CopyNvPublicIn function and altered Tpm2_DefineSpace function to use\nit.\n- Created TpmHash function\n- Created TpmHandleToName function\n- Documented helper function pointers in the system API header file.\n- Added tests for TpmHandleToName function.\n- Added functionality needed for KDFa functions ConcatSizedByteBuffer,\nCopySizedByteBuffer\n- Added KDFa function in preparation for HMAC session test. Not tested yet.\n- Added LoadExternalHMACKey function. This function is called by TPM HMAC\nfunction.\n### Changed\n- Updated headers with Intel license text.\n- Split sockets driver into separate code module.\n- SALTED session test fixes:\n  * Fixed CopyRSAEncryptIon function--wasn't handling some cases correctly.\n  * Backed out change to make parameterSize passed to ComputeSessionHmacPtr\nfunction a UINT16. Needs to be UINT32.\n  * For ComputeSessionHmacPtr, changed parameterSize to UINT16 to fix build\nwarning.\n- Fixed bugs in KDFa().\n- Altered all APIs to use pointers to TPM input/output buffers.\n- Fixed context save/restore functions.\n- Fixed formatting of prints of sized byte buffers in test app.\n- Fixed bug in TpmHmac function: needed to set size of result to 0 in case an\nerror occurs.\n- Fixed bugs in CopySensitiveIn function: uninitialized size field, bad\npointers, and incorrect increment of otherData at end of function.\n- Altered TpmHMAC function to call LoadExternalHMAC key function. This\nallows a better HMAC function pointer, one that complies with normal HMAC\ncalling convention. Before it was TPM-specific.\n- Bumped up TPMBUF_LEN to 32k in tpmclient.cpp. This fixed overwriting\nproblems during context save/restore function.\n- Fixed bugs in ContextLoad function: otherData wasn't initialized before it\nwas used.\n- Fixed bug in Tpm20LoadExternal command: it wasn't properly marshaling the\ninPrivate data.\n### Removed\n- Removed tis.h file. Not needed.\n- Eliminated salted session test (because it doesn't work yet), and changed\nout.good file to match.\n- Reorganized directories and moved files to make more logical sense.\n### Notes\nHMAC helper function callouts are only being done for NV Read and NV\nWrite commands currently. The system API changes to support this are still\nbeing prototyped. After they are finalized, these changes will be extended to\nall functions that use sessions.\n\n## [0.66] - 2013-??-??\n### Added\n- Added CertifyCreation function\n- Added EcEphemeral function\n- Added test for tspi_sys_TPM2_HashStart\n### Changed\n- Cleaned up for general TCG release\n\n## [0.65] - 2013-04-10\n### Added\n- All TPM 2.0 functions now supported.\n- Limited testing done on following functions:\n- tspi_sys_TPM2_Startup\n- tspi_sys_Tpm2_SelfTest\n- tspi_sys_TPM2_GetCapability\n- tspi_sys_TPM2_Clear-tested\n- tspi_sys_TPM2_StartAuthSession\n- tspi_sys_TPM2_ClearControl\n- tspi_sys_TPM2_ChangeEPS\n- tspi_sys_TPM2_HierarchyChangeAuth\n- tspi_sys_TPM2_Extend\n- tspi_sys_TPM2_HashSequenceStart\n- tspi_sys_TPM2_SequenceUpdate\n- tspi_sys_TPM2_SequenceComplete\n- tspi_sys_TPM2_EventSequenceComplete\n- tspi_sys_TPM2_GetRandom\n- tspi_sys_TPM2_SaveState\n- tspi_sys_TPM2_PcrRead\n- tspi_sys_TPM2_NVRead\n- tspi_sys_TPM2_NVWrite\n- tspi_sys_TPM2_Unseal\n- tspi_sys_TPM2_PcrAllocate\n- tspi_sys_TPM2_DictionaryAttackLockReset\n- tspi_sys_TPM2_NV_Writelock\n- tspi_sys_TPM2_PolicyCommandCode\n- tspi_sys_TPM2_PolicyGetDigest\n- tspi_sys_TPM2_PolicyOr\n- tspi_sys_TPM2_PolicyRestart\n- tspi_sys_TPM2_LoadExternal\n- tspi_sys_TPM2_HierarchyControl\n- tspi_sys_TPM2_NV_UndefineSpace\n- tspi_sys_TPM2_Create\n- tspi_sys_TPM2_Load\n- tspi_sys_TPM2_Quote\n- tspi_sys_TPM2_NV_ReadPublic\n- tspi_sys_TPM2_ChangePPS\n- tspi_sys_TPM2_NV_DefineSpace\n- tspi_sys_TPM2_PolicyLocality\n- tspi_sys_TPM2_PolicyPCR\n- tspi_sys_TPM2_CreatePrimary\n- tspi_sys_TPM2_Shutdown\n- tspi_sys_TPM2_PCR_Event\n- tspi_sys_TPM2_PolicyNV\n- tspi_sys_TPM2_NV_ReadLock\n- tspi_sys_TPM2_NV_UndefineSpaceSpecial\nNo testing done on all other 61 functions\n\n## [0.60] - 2013-03-29\n### Added\n- Added changes to make it comply with TSS 2.0 system library API\n### Removed\n- Cleaned up and removed unneeded files.\n",
        "/tmp/vanessa/spack-stage/spack-stage-tpm2-tss-2.4.2-ljxccjrnvtunhp4l4uabku6enzs53d4j/spack-src/configure.ac": "# SPDX-License-Identifier: BSD-2-Clause\n# Copyright (c) 2015 - 2020 Intel Corporation\n# Copyright (c) 2018 - 2020 Fraunhofer SIT sponsored by Infineon Technologies AG\n# All rights reserved.\n\nAC_INIT([tpm2-tss],\n        [2.4.2],\n        [https://github.com/tpm2-software/tpm2-tss/issues],\n        [],\n        [https://github.com/tpm2-software/tpm2-tss])\nAC_CONFIG_MACRO_DIR([m4])\nAM_INIT_AUTOMAKE([foreign\n                  subdir-objects])\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])]) #Backward compatible setting of \"silent-rules\"\n\nAC_CONFIG_HEADERS([config.h])\n\nAC_CONFIG_FILES([Makefile Doxyfile lib/tss2-sys.pc lib/tss2-esys.pc lib/tss2-mu.pc lib/tss2-tcti-device.pc lib/tss2-tcti-mssim.pc lib/tss2-rc.pc lib/tss2-tctildr.pc lib/tss2-fapi.pc])\n\n# propagate configure arguments to distcheck\nAC_SUBST([DISTCHECK_CONFIGURE_FLAGS],[$ac_configure_args])\n\nAC_CANONICAL_HOST\n\nAX_IS_RELEASE(dash-version)\nAX_CHECK_ENABLE_DEBUG([info])\n\nAC_PROG_CC\nAC_PROG_CXX\nAC_PROG_LN_S\nAC_USE_SYSTEM_EXTENSIONS\nLT_INIT()\nLT_LIB_DLLOAD\nPKG_INSTALLDIR()\n\n# Check OS and set library and compile flags accordingly\ncase \"${host_os}\" in\n    *nto-qnx*)\n        HOSTOS='QNX'\n        ADD_COMPILER_FLAG([-D_QNX_SOURCE])\n        LIBSOCKET_LDFLAGS=\"-lsocket\"\n        ;;\n    *bsd* | *BSD*)\n        HOSTOS='BSD'\n        LIBSOCKET_LDFLAGS=\"\"\n        ;;\n    *)\n        #Assume linux\n        HOSTOS='Linux'\n        LIBSOCKET_LDFLAGS=\"\"\n        ;;\nesac\nAC_SUBST([LIBSOCKET_LDFLAGS])\nAC_SUBST([HOSTOS])\n\nAM_CONDITIONAL(HOSTOS_LINUX, [test x\"$HOSTOS\" = xLinux])\n\n# runstatedir is only defined in the yet unreleased Autoconf 2.70\nAC_ARG_WITH([runstatedir],\n            AS_HELP_STRING([--with-runstatedir=<dir>],\n                           [replacement for --runstatedir in Autoconf <2.70]),\n            [runstatedir=\"$withval\"])\nAS_IF([test -z \"$runstatedir\"], [runstatedir=\"${localstatedir}/run\"])\nAC_SUBST([runstatedir])\n\nAX_RECURSIVE_EVAL([$sysconfdir], [SYSCONFDIR])\nAC_DEFINE_UNQUOTED([SYSCONFDIR], [\"$SYSCONFDIR\"], [System config dir])\n\nAC_ARG_WITH([userstatedir],\n            [AS_HELP_STRING([--with-userstatedir=<dir>],\n                            [sets the relative path in the user's home (default is \".local/share\")])],,\n            [with_userstatedir=.local/share])\nAC_SUBST(userstatedir, $with_userstatedir)\n\nAC_ARG_WITH([sysusersdir],\n            [AS_HELP_STRING([--with-sysusersdir=<dir>],\n                            [sets the sysusers.d directory (default is \"${sysconfdir}/sysusers.d\")])],,\n            [with_sysusersdir=\"${sysconfdir}/sysusers.d\"])\nAC_SUBST(sysusersdir, $with_sysusersdir)\n\nAC_ARG_WITH([tmpfilesdir],\n            [AS_HELP_STRING([--with-tmpfilesdir=<dir>],\n                            [sets the tmpfiles.d directory (default is \"${sysconfdir}/tmpfiles.d\")])],,\n            [with_tmpfilesdir=\"${sysconfdir}/tmpfiles.d\"])\nAC_SUBST(tmpfilesdir, $with_tmpfilesdir)\n\nAC_ARG_ENABLE([unit],\n            [AS_HELP_STRING([--enable-unit],\n                            [build cmocka unit tests])],,\n            [enable_unit=no])\nm4_define([cmocka_min_version], [1.0])\nm4_define([cmocka_err], [Unit test enabled, but cmocka missing or version requirements not met. cmocka version must be >= cmocka_min_version])\nAS_IF([test \"x$enable_unit\" != xno],\n      [PKG_CHECK_MODULES([CMOCKA],\n                         [cmocka >= cmocka_min_version],,\n                         [AC_MSG_ERROR([cmocka_err])])])\nAM_CONDITIONAL([UNIT], [test \"x$enable_unit\" != xno])\n\nAC_ARG_ENABLE([esapi],\n            [AS_HELP_STRING([--disable-esapi],\n                            [don't build the esapi layer])],,\n            [enable_esapi=yes])\n\nAM_CONDITIONAL(ESAPI, test \"x$enable_esapi\" = \"xyes\")\n\nAC_CHECK_FUNC([strndup],[],[AC_MSG_ERROR([strndup function not found])])\nAC_CHECK_FUNCS([reallocarray])\nAC_ARG_ENABLE([fapi],\n            [AS_HELP_STRING([--enable-fapi],\n                            [build the fapi layer (default is yes)])],\n            [enable_fapi=$enableval],\n            [enable_fapi=yes])\n\nAM_CONDITIONAL(FAPI, test \"x$enable_fapi\" = \"xyes\")\n\nAC_ARG_ENABLE([fapi-async-tests],\n    AS_HELP_STRING([--enable-fapi-async-tests],\n               [Force fapi to spin asynchronously. (NOT FOR PRODUCTION!)]),,\n    [enable_fapi_async_tests=no])\nAS_IF([test \"x$enable_fapi_async_tests\" = \"xyes\"],\n    AC_DEFINE([TEST_FAPI_ASYNC], [1], [FAPI forced async spinning]))\nAS_IF([test \"x$enable_fapi_async_tests\" = \"xyes\"],\n    AC_MSG_WARN(\"FAPI compiled with asynchronous spinning testing. NOT FOR PRODUCTION!\"))\n\nAC_ARG_ENABLE([tcti-device-async],\n    AS_HELP_STRING([--enable-tcti-device-async],\n\t           [Enable asynchronus operation on TCTI device\n\t\t    (note: This needs to be supported by the kernel driver).]),,\n    [enable_tcti_device_async=no])\nAS_IF([test \"x$enable_tcti_device_async\" = \"xyes\"],\n\tAC_DEFINE([TCTI_ASYNC],[1], [TCTI ASYNC MODE]))\n\nAC_ARG_ENABLE([tcti-partial-reads],\n    AS_HELP_STRING([--enable-tcti-partial-reads],\n\t           [Enable partial reads for TCTI device\n\t\t    (note: This needs to be supported by the kernel driver).]),,\n    [enable_tcti_partial_reads=no])\nAS_IF([test \"x$enable_tcti_partial_reads\" = \"xyes\"],\n\tAC_DEFINE([TCTI_PARTIAL_READ],[1], [TCTI PARTIAL READ MODE]))\n\nAC_ARG_WITH([crypto],\n            [AS_HELP_STRING([--with-crypto={gcrypt,ossl}],\n                            [sets the ESAPI crypto backend (default is OpenSSL)])],,\n            [with_crypto=ossl])\n\nAM_CONDITIONAL(ESYS_OSSL, test \"x$with_crypto\" = \"xossl\")\nAM_CONDITIONAL(ESYS_GCRYPT, test \"x$with_crypto\" = \"xgcrypt\")\n\nAS_IF([test \"x$enable_esapi\" = xyes],\n      [AS_IF([test \"x$with_crypto\" = xgcrypt], [\n           AM_PATH_LIBGCRYPT([1.6.0], [], [AC_MSG_ERROR([Missing required gcrypt library])])\n           TSS2_ESYS_CFLAGS_CRYPTO=\"$LIBGCRYPT_CFLAGS\"\n           TSS2_ESYS_LDFLAGS_CRYPTO=\"$LIBGCRYPT_LIBS\"\n       ], [test \"x$with_crypto\" = xossl], [\n           PKG_CHECK_MODULES([LIBCRYPTO], [libcrypto])\n           AC_DEFINE([OSSL], [1], [OpenSSL cryptographic backend])\n           TSS2_ESYS_CFLAGS_CRYPTO=\"$LIBCRYPTO_CFLAGS\"\n           TSS2_ESYS_LDFLAGS_CRYPTO=\"$LIBCRYPTO_LIBS\"\n       ], AC_MSG_ERROR([Bad value for --with-crypto $with_crypto]))])\nAC_SUBST([TSS2_ESYS_CFLAGS_CRYPTO])\nAC_SUBST([TSS2_ESYS_LDFLAGS_CRYPTO])\n\nAS_IF([test \"x$enable_fapi\" != xno -a \"x$enable_esapi\" = \"xno\"],\n    AC_MSG_ERROR([ESAPI has to be enabled to compile FAPI.]))\n\nAS_IF([test \"x$enable_fapi\" != xno -a \"x$with_crypto\" != \"xossl\"],\n    AC_MSG_ERROR([FAPI has to be compiled with OpenSSL]))\n\nAS_IF([test \"x$enable_fapi\" = xyes ],\n    PKG_CHECK_MODULES([JSON_C], [json-c]))\n\nAS_IF([test \"x$enable_fapi\" = xyes ],\n    PKG_CHECK_MODULES([CURL], [libcurl]))\n\nAC_ARG_WITH([tctidefaultmodule],\n            [AS_HELP_STRING([--with-tctidefaultmodule],\n[The default TCTI module for ESAPI. (Default: libtss2-tcti-default.so)])],\n            [AC_DEFINE_UNQUOTED([ESYS_TCTI_DEFAULT_MODULE],\n                                [\"$with_tctidefaultmodule\"],\n                                [\"The default TCTI library file\"])],\n\t    [with_tctidefaultmodule=libtss2-tcti-default.so])\n\nAC_ARG_WITH([tctidefaultconfig],\n            [AS_HELP_STRING([--with-tctidefaultconfig],\n                            [The default tcti module's configuration.])],\n            [AC_DEFINE_UNQUOTED([ESYS_TCTI_DEFAULT_CONFIG],\n                                [\"$with_tctidefaultconfig\"],\n                                [\"The default TCTIs configuration string\"])])\n\nAC_ARG_ENABLE([tcti-device],\n            [AS_HELP_STRING([--disable-tcti-device],\n                            [don't build the tcti-device module])],,\n            [enable_tcti_device=yes])\nAM_CONDITIONAL([ENABLE_TCTI_DEVICE], [test \"x$enable_tcti_device\" != xno])\nAS_IF([test \"x$enable_tcti_device\" = \"xyes\"],\n\tAC_DEFINE([TCTI_DEVICE],[1], [TCTI FOR DEV TPM]))\n\nAC_ARG_ENABLE([tcti-mssim],\n            [AS_HELP_STRING([--disable-tcti-mssim],\n                            [don't build the tcti-mssim module])],,\n            [enable_tcti_mssim=yes])\nAM_CONDITIONAL([ENABLE_TCTI_MSSIM], [test \"x$enable_tcti_mssim\" != xno])\nAS_IF([test \"x$enable_tcti_mssim\" = \"xyes\"],\n\tAC_DEFINE([TCTI_MSSIM],[1], [TCTI FOR MS SIMULATOR]))\n\nAC_ARG_ENABLE([tcti-fuzzing],\n            [AS_HELP_STRING([--enable-tcti-fuzzing],\n                            [build the tcti-fuzzing module])],,\n            [enable_tcti_fuzzing=no])\nAM_CONDITIONAL([ENABLE_TCTI_FUZZING], [test \"x$enable_tcti_fuzzing\" != xno])\nAS_IF([test \"x$enable_tcti_fuzzing\" = \"xyes\"],\n\tAC_DEFINE([TCTI_FUZZING],[1], [TCTI FOR FUZZING]))\n\nAC_ARG_ENABLE([nodl],\n              [AS_HELP_STRING([--enable-nodl],\n                              [link against TCTIs directly, do not use dlopen])],\n              [],\n              [enable_nodl=no])\nAM_CONDITIONAL([NO_DL], [test \"x$enable_nodl\" = \"xyes\"])\nAS_IF([test \"x$enable_nodl\" = \"xyes\"],\n      [AC_DEFINE([NO_DL],[1], [disable use of dlopen])])\n\n#\n# udev\n#\nAC_ARG_WITH([udevrulesdir],\n            [AS_HELP_STRING([--with-udevrulesdir=DIR],[udev rules directory])],,\n            [with_udevrulesdir=${libdir}/udev/rules.d])\nAX_NORMALIZE_PATH([with_udevrulesdir])\nAC_SUBST([udevrulesdir], [$with_udevrulesdir])\nAC_ARG_WITH([udevrulesprefix],\n            [AS_HELP_STRING([--with-udevrulesprefix=XY],[prefix for udev rules file])],\n            [AC_SUBST([udevrulesprefix],[$with_udevrulesprefix])])\nAM_CONDITIONAL(WITH_UDEVRULESPREFIX, [test -n \"$with_udevrulesprefix\"])\n#\n# enable integration tests and check for simulator binary\n#\nAC_ARG_ENABLE([integration],\n    [AS_HELP_STRING([--enable-integration],\n        [build and execute integration tests])],,\n    [enable_integration=no])\nAS_IF([test \"x$enable_integration\" = \"xyes\" -a \"$HOSTOS\" = \"Linux\"],\n      [ERROR_IF_NO_PROG([tpm_server])\n       ERROR_IF_NO_PROG([ss])\n       ERROR_IF_NO_PROG([ps])\n       ERROR_IF_NO_PROG([echo])\n       ERROR_IF_NO_PROG([kill])\n       ERROR_IF_NO_PROG([stdbuf])\n       ERROR_IF_NO_PROG([sleep])\n       ERROR_IF_NO_PROG([cat])\n       ERROR_IF_NO_PROG([realpath])\n       ERROR_IF_NO_PROG([dirname])\n       ERROR_IF_NO_PROG([basename])\n       ERROR_IF_NO_PROG([mktemp])\n       ERROR_IF_NO_PROG([od])\n       ERROR_IF_NO_PROG([awk])\n       ERROR_IF_NO_PROG([expr])\n       ERROR_IF_NO_PROG([grep])\n       ERROR_IF_NO_PROG([env])\n       ERROR_IF_NO_PROG([rm])\n       AS_IF([test \"x$with_crypto\" != xossl -o \"x$enable_esapi\" != xyes],\n           PKG_CHECK_MODULES([LIBCRYPTO],[libcrypto]))\n       AC_CHECK_HEADER(uthash.h, [], [AC_MSG_ERROR([Can not find uthash.h. Please install uthash-dev])])\n       AS_IF([test \"x$enable_tcti_mssim\" = xno],\n              AC_MSG_ERROR([Integration tests can not be enabled without the TCTI_MSSIM module]))\n       AC_SUBST([ENABLE_INTEGRATION], [$enable_integration])])\nAM_CONDITIONAL([ENABLE_INTEGRATION],[test \"x$enable_integration\" = \"xyes\"])\n#\n# sanitizer compiler flags\n#\nAC_ARG_WITH([sanitizer],\n            [AS_HELP_STRING([--with-sanitizer={none,address,undefined}],\n                            [build with the given sanitizer])],,\n            [with_sanitizer=none])\nAS_CASE([\"x$with_sanitizer\"],\n        [\"xnone\"],\n        [],\n        [\"xaddress\"],\n        [\n            SANITIZER_CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"\n            SANITIZER_LDFLAGS=\"-lasan\"\n        ],\n        [\"xundefined\"],\n        [\n            SANITIZER_CFLAGS=\"-fsanitize=undefined\"\n            SANITIZER_LDFLAGS=\"-lubsan\"\n        ],\n        [AC_MSG_ERROR([Bad value for --with-sanitizer])])\nAC_SUBST([SANITIZER_CFLAGS])\nAC_SUBST([SANITIZER_LDFLAGS])\n#\n# fuzz testing\n#\nAC_ARG_WITH([fuzzing],\n            [AS_HELP_STRING([--with-fuzzing={none,libfuzzer,ossfuzz}],\n                            [fuzzing to build with (default is none)])],,\n            [with_fuzzing=none])\nAS_CASE([\"x$with_fuzzing\"],\n        [\"xnone\"],\n        [],\n        [\"xlibfuzzer\"],\n        [ADD_FUZZING_FLAG([-fsanitize=fuzzer])],\n        [\"xossfuzz\"],\n        [AS_IF([test \"x$LIB_FUZZING_ENGINE\" = \"x\"],\n               AC_MSG_ERROR([OSS Fuzz testing requires LIB_FUZZING_ENGINE environment variable be set]))\n         ADD_FUZZING_FLAG([-lFuzzingEngine])],\n        [AC_MSG_ERROR([Bad value for --with-fuzzing])])\nAM_CONDITIONAL([ENABLE_FUZZING],[test \"x$with_fuzzing\" != \"xnone\"])\nAS_IF([test \"x$with_fuzzing\" != \"xnone\"],\n      [AS_IF([test \"x$enable_tcti_fuzzing\" = xno],\n             AC_MSG_ERROR([Fuzz tests can not be enabled without the TCTI_FUZZING module]))\n       AS_IF([test \"x$GEN_FUZZ\" != \"x1\"],\n             AC_MSG_ERROR([Fuzz tests can not be enabled without \"GEN_FUZZ=1\" variable]))])\n\nAX_VALGRIND_CHECK\n\ngl_LD_VERSION_SCRIPT\n\nAC_ARG_WITH([maxloglevel],\n            [AS_HELP_STRING([--with-maxloglevel={none,error,warning,info,debug,trace}],\n                            [sets the maximum log level (default is trace)])],,\n            [with_maxloglevel=trace])\nAS_CASE([\"x$with_maxloglevel\"],\n        [\"xnone\"],\n        [AC_DEFINE_UNQUOTED([MAXLOGLEVEL], [0], [\"Logging disabled\"])],\n        [\"xerror\"],\n        [AC_DEFINE_UNQUOTED([MAXLOGLEVEL], [2], [\"Error log level\"])],\n        [\"xwarning\"],\n        [AC_DEFINE_UNQUOTED([MAXLOGLEVEL], [3], [\"Warning log level\"])],\n        [\"xinfo\"],\n        [AC_DEFINE_UNQUOTED([MAXLOGLEVEL], [4], [\"Info log level\"])],\n        [\"xdebug\"],\n        [AC_DEFINE_UNQUOTED([MAXLOGLEVEL], [5], [\"Debug log level\"])],\n        [\"xtrace\"],\n        [AC_DEFINE_UNQUOTED([MAXLOGLEVEL], [6], [\"Trace log level\"])],\n        [AC_MSG_ERROR([Bad value for --with-maxloglevel])])\n\nAC_ARG_ENABLE([defaultflags],\n              [AS_HELP_STRING([--disable-defaultflags],\n                              [Disable default preprocessor, compiler, and linker flags.])],,\n              [enable_defaultflags=yes])\nAS_IF([test \"x$enable_defaultflags\" = \"xyes\"],\n      [\n      AS_IF([test \"x$enable_debug\" = \"xno\"],\n            [ADD_COMPILER_FLAG([-O2])\n             AX_ADD_FORTIFY_SOURCE])\n      ADD_COMPILER_FLAG([-std=c99])\n      ADD_COMPILER_FLAG([-Wall])\n      ADD_COMPILER_FLAG([-Wextra])\n      ADD_COMPILER_FLAG([-Wformat-security])\n      AS_IF([test \"x$ax_is_release\" = \"xno\"],\n          [ADD_COMPILER_FLAG([-Werror])])\n      ADD_COMPILER_FLAG([-fstack-protector-all])\n      ADD_COMPILER_FLAG([-fpic])\n      ADD_COMPILER_FLAG([-fPIC])\n      # work around GCC bug #53119\n      #   https://gcc.gnu.org/bugzilla/show_bug.cgi?id=53119\n      ADD_COMPILER_FLAG([-Wno-missing-braces])\n      ADD_COMPILER_FLAG([-Wstrict-overflow=5])\n      ADD_LINK_FLAG([-Wl,--no-undefined])\n      ADD_LINK_FLAG([-Wl,-z,noexecstack])\n      ADD_LINK_FLAG([-Wl,-z,now])\n      ADD_LINK_FLAG([-Wl,-z,relro])\n      ])\n\nAC_ARG_ENABLE([weakcrypto],\n    [AS_HELP_STRING([--disable-weakcrypto],\n\t           [Disable crypto algorithms considered weak])],,\n    [enable_weakcrypto=no])\nAS_IF([test \"x$enable_weakcrypto\" = \"xyes\"],\n\tAC_DEFINE([DISABLE_WEAK_CRYPTO],[1],[DISABLE WEAK CRYPTO ALGORITHMS]))\n\nAC_SUBST([PATH])\n\ndnl ---------  Physical TPM device -----------------------\n\nAC_ARG_WITH([ptpm],\n            [AS_HELP_STRING([--with-ptpm=<device>],[TPM device])],\n            [AS_IF([test \\( -w \"$with_ptpm\" \\)  -a \\( -r \"$with_ptpm\" \\)],\n                   [AC_MSG_RESULT([success])\n                    AC_SUBST([PTPM],[$with_ptpm])\n                    AX_NORMALIZE_PATH([with_ptpm])\n                    with_ptpm_set=yes],\n                   [AC_MSG_ERROR([TPM device provided does not exist or is not writable])])],\n            [with_ptpm_set=no])\nAM_CONDITIONAL([PTPM],[test \"x$with_ptpm_set\" = \"xyes\"])\n\nAC_ARG_WITH([ptpmtests],\n            [AS_HELP_STRING([--with-ptpmtests=<case>],[Comma-separated values of possible tests: destructive,mandatory,optional] default is mandatory)],\n            [AS_IF([test \"x\" =  x$(echo $with_ptpmtests | sed 's/destructive//g'  | sed 's/mandatory//g'  | sed 's/optional//g' | sed 's/,//g') ],\n                   [AC_MSG_RESULT([success])\n                    with_ptpmtests_set=yes],\n                   [AC_MSG_ERROR([Illegal test type for pTPM tests.])])],\n            [with_ptpmtests=\"mandatory\"])\n\nif echo $with_ptpmtests | grep destructive > /dev/null; then\n    enable_ptpm_destructive=\"yes\"\nfi\nAM_CONDITIONAL([PTPMDESTRUCTIVE],[test \"x$enable_ptpm_destructive\" = \"xyes\"])\n\nif echo $with_ptpmtests | grep optional > /dev/null; then\n    enable_ptpm_optional=\"yes\"\nfi\nAM_CONDITIONAL([PTPMOPTIONAL],[test \"x$enable_ptpm_optional\" = \"xyes\"])\n\nif echo $with_ptpmtests | grep mandatory > /dev/null; then\n    enable_ptpm_mandatory=\"yes\"\nfi\nAM_CONDITIONAL([PTPMMANDATORY],[test \"x$enable_ptpm_mandatory\" = \"xyes\"])\n\nAM_CONDITIONAL([TESTPTPM],[test \"x$with_ptpm_set\" = xyes])\n\ndnl --------- Doxy Gen -----------------------\nDX_DOXYGEN_FEATURE(ON)\nDX_DOT_FEATURE(OFF)\nDX_HTML_FEATURE(ON)\nDX_CHM_FEATURE(OFF)\nDX_CHI_FEATURE(OFF)\nDX_MAN_FEATURE(ON)\nDX_RTF_FEATURE(ON)\nDX_XML_FEATURE(OFF)\nDX_PDF_FEATURE(OFF)\nDX_PS_FEATURE(OFF)\nDX_INIT_DOXYGEN($PACKAGE_NAME, [Doxyfile], [doxygen-doc])\nAM_CONDITIONAL(DOXYMAN, [test $DX_FLAG_man -eq 1])\n\nAS_IF([test \"x$enable_doxygen_doc\" != xno],\n      [ERROR_IF_NO_PROG([doxygen])])\n\nAX_CODE_COVERAGE\nm4_ifdef([_AX_CODE_COVERAGE_RULES],\n         [AM_CONDITIONAL(AUTOCONF_CODE_COVERAGE_2019_01_06, [true])],\n         [AM_CONDITIONAL(AUTOCONF_CODE_COVERAGE_2019_01_06, [false])])\nAX_ADD_AM_MACRO_STATIC([])\n\nAM_COND_IF([ENABLE_TCTI_DEVICE], [],\n           [AM_COND_IF([ENABLE_TCTI_MSSIM], [],\n                       [AM_COND_IF([ENABLE_TCTI_FUZZING], [],\n                                   [AC_MSG_WARN(\"No build-in TCTI module enabled\")])])])\n\nAM_COND_IF([ENABLE_TCTI_FUZZING], [\n            AM_COND_IF([ENABLE_TCTI_DEVICE],\n                       AC_MSG_ERROR([Fuzzing TCTI is meant to be built as the only TCTI: use --disable-tcti-device --disable-tcti-mssim]))\n            AM_COND_IF([ENABLE_TCTI_MSSIM],\n                       AC_MSG_ERROR([Fuzzing TCTI is meant to be built as the only TCTI: use --disable-tcti-device --disable-tcti-mssim]))\n            AS_IF([test \"x$CC\" != \"xclang\"],\n                       AC_MSG_ERROR(\"Fuzzing TCTI can only be used with clang\"), [])\n            ], [])\n\nAC_OUTPUT\n\nAC_MSG_RESULT([\n    $PACKAGE_NAME $VERSION\n    esapi:              $enable_esapi\n    fapi:               $enable_fapi\n    tctidefaultmodule:  $with_tctidefaultmodule\n    tctidefaultconfig:  $with_tctidefaultconfig\n    unit:               $enable_unit\n    fuzzing:            $with_fuzzing\n    debug:              $enable_debug\n    maxloglevel:        $with_maxloglevel\n    doxygen:            $DX_FLAG_doc $enable_doxygen_doc\n    tcti-device-async:  $enable_tcti_device_async\n    tcti-partial-read:  $enable_tcti_partial_reads\n    crypto backend:     $with_crypto\n    sysconfdir:         $sysconfdir\n    localstatedir:      $localstatedir\n    runstatedir:        $runstatedir\n    sysusersdir:        $sysusersdir\n    tmpfilesdir:        $tmpfilesdir\n    userstatedir:       [\\$HOME/]$with_userstatedir\n])\n",
        "/tmp/vanessa/spack-stage/spack-stage-tpm2-tss-2.4.2-ljxccjrnvtunhp4l4uabku6enzs53d4j/spack-src/src/tss2-esys/esys_int.h": "/* SPDX-License-Identifier: BSD-2-Clause */\n/*******************************************************************************\n * Copyright 2017, Fraunhofer SIT sponsored by Infineon Technologies AG\n * All rights reserved.\n *******************************************************************************/\n#ifndef ESYS_INT_H\n#define ESYS_INT_H\n\n#include <stdint.h>\n#include \"esys_types.h\"\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n/** Linked list type for object meta data.\n *\n * This structure represents a linked list to store meta data information of\n * type IESYS_RESOURCE.\n */\ntypedef struct RSRC_NODE_T {\n    ESYS_TR esys_handle;        /**< The ESYS_TR handle used by the application\n                                     to reference this entry. */\n    TPM2B_AUTH auth;            /**< The authValue for this resource object. */\n    IESYS_RESOURCE rsrc;        /**< The meta data for this resource object. */\n    struct RSRC_NODE_T * next;  /**< The next object in the linked list. */\n} RSRC_NODE_T;\n\ntypedef struct {\n    ESYS_TR tpmKey;\n    ESYS_TR bind;\n    TPM2_SE sessionType;\n    TPMI_ALG_HASH authHash;\n    TPM2B_NONCE *nonceCaller;\n    TPM2B_NONCE nonceCallerData;\n    TPMT_SYM_DEF *symmetric;\n    TPMT_SYM_DEF symmetricData;\n} StartAuthSession_IN;\n\ntypedef struct {\n    TPM2B_SENSITIVE_CREATE *inSensitive;\n    TPM2B_SENSITIVE_CREATE inSensitiveData;\n} CreatePrimary_IN;\n\ntypedef struct {\n    ESYS_TR saveHandle;\n} ContextSave_IN;\n\ntypedef struct {\n    TPMS_CONTEXT *context;\n    TPMS_CONTEXT contextData;\n} ContextLoad_IN;\n\ntypedef struct {\n    TPM2B_PUBLIC *inPublic;\n    TPM2B_PUBLIC inPublicData;\n} Load_IN;\n\ntypedef struct {\n    TPM2B_PUBLIC *inPublic;\n    TPM2B_PUBLIC inPublicData;\n} LoadExternal_IN;\n\ntypedef struct {\n    TPM2B_SENSITIVE_CREATE *inSensitive;\n    TPM2B_SENSITIVE_CREATE inSensitiveData;\n    TPM2B_TEMPLATE *inPublic;\n    TPM2B_TEMPLATE inPublicData;\n} CreateLoaded_IN;\n\ntypedef struct {\n    ESYS_TR objectHandle;\n    TPMI_DH_PERSISTENT persistentHandle;\n} EvictControl_IN;\n\ntypedef struct {\n    TPM2B_AUTH *auth;\n    TPM2B_AUTH authData;\n} HMAC_Start_IN;\n\ntypedef struct {\n    ESYS_TR authHandle;\n    TPM2B_AUTH *newAuth;\n    TPM2B_AUTH newAuthData;\n} HierarchyChangeAuth_IN;\n\ntypedef struct {\n    ESYS_TR sequenceHandle;\n} SequenceComplete_IN;\n\ntypedef struct {\n    ESYS_TR policySession;\n} Policy_IN;\n\ntypedef struct {\n    ESYS_TR nvIndex;\n    TPM2B_AUTH *auth;\n    TPM2B_AUTH authData;\n    TPM2B_NV_PUBLIC *publicInfo;\n    TPM2B_NV_PUBLIC publicInfoData;\n} NV_IN;\n\ntypedef struct {\n    ESYS_TR flushHandle;\n} FlushContext_IN;\n\n/** Union for input parameters.\n *\n * The input parameters of a command need to be stored if they are needed\n * in corresponding _Finish() function.\n */\ntypedef union {\n    StartAuthSession_IN StartAuthSession;\n    CreatePrimary_IN CreatePrimary;\n    ContextSave_IN ContextSave;\n    ContextLoad_IN ContextLoad;\n    Load_IN Load;\n    LoadExternal_IN LoadExternal;\n    CreateLoaded_IN CreateLoaded;\n    EvictControl_IN EvictControl;\n    HMAC_Start_IN HMAC_Start;\n    HierarchyChangeAuth_IN HierarchyChangeAuth;\n    SequenceComplete_IN SequenceComplete;\n    Policy_IN Policy;\n    NV_IN NV;\n    FlushContext_IN FlushContext;\n} IESYS_CMD_IN_PARAM;\n\n/** The states for the ESAPI's internal state machine */\nenum _ESYS_STATE {\n    _ESYS_STATE_INIT = 0,     /**< The initial state after creation or after\n                                   finishing a command. A new command can only\n                                   be issued in this state. */\n    _ESYS_STATE_SENT,         /**< The state after sending a command to the TPM\n                                   before receiving a response. */\n    _ESYS_STATE_RESUBMISSION, /**< The state after receiving a response from the\n                                   TPM that requires resending of the command.*/\n    _ESYS_STATE_INTERNALERROR /**< A non-recoverable error occured within the\n                                   ESAPI code. */\n};\n\n/** The data structure holding internal state information.\n *\n * Each ESYS_CONTEXT respresents a logically independent connection to the TPM.\n * It stores meta data information about object in order to calculate session\n * auths and similar things.\n */\nstruct ESYS_CONTEXT {\n    enum _ESYS_STATE state;      /**< The current state of the ESAPI context. */\n    TSS2_SYS_CONTEXT *sys;       /**< The SYS context used internally to talk to\n                                      the TPM. */\n    ESYS_TR esys_handle_cnt;     /**< The next free ESYS_TR number. */\n    RSRC_NODE_T *rsrc_list;      /**< The linked list of all ESYS_TR objects. */\n    int32_t timeout;             /**< The timeout to be used during\n                                      Tss2_Sys_ExecuteFinish. */\n    ESYS_TR session_type[3];     /**< The list of TPM session handles in the\n                                      current command execution. */\n    RSRC_NODE_T *session_tab[3]; /**< The list of TPM session meta data in the\n                                      current command execution. */\n    int encryptNonceIdx;         /**< The index of the encrypt session. */\n    TPM2B_NONCE *encryptNonce;   /**< The nonce of the encrypt session, or NULL\n                                      if no encrypt session exists. */\n    int authsCount;              /**< The number of session provided during the\n                                      command. */\n    int submissionCount;         /**< The current number of submissions of this\n                                      command to the TPM. */\n    TPM2B_DATA salt;             /**< The salt used during a StartAuthSession.*/\n    IESYS_CMD_IN_PARAM in;       /**< Temporary storage for Input parameters\n                                      needed in corresponding _Finish function*/\n    ESYS_TR esys_handle;         /**< Temporary storage for the object's TPM\n                                      handle during Esys_TR_FromTPMPublic. */\n    TSS2_TCTI_CONTEXT *tcti_app_param;/**< The TCTI context provided by the\n                                           application during Esys_Initialize()\n                                           to be returned from Esys_GetTcti().*/\n    void *dlhandle;              /**< The handle of dlopen if the tcti was\n                                      automatically loaded. */\n    IESYS_SESSION *enc_session;  /**< Ptr to the enc param session.\n                                      Used to restore session attributes */\n};\n\n/** The number of authomatic resubmissions.\n *\n * The number of resubmissions before a TPM's TPM2_RC_YIELDED is forwarded to\n * the application.\n */\n#define _ESYS_MAX_SUBMISSIONS 5\n\n/** Makro testing parameters against null.\n */\n#define _ESYS_ASSERT_NON_NULL(x) \\\n    if (x == NULL) { \\\n        LOG_ERROR(str(x) \" == NULL.\"); \\\n        return TSS2_ESYS_RC_BAD_REFERENCE; \\\n    }\n\n#ifdef __cplusplus\n}\n#endif\n#endif /* ESYS_INT_H */\n",
        "/tmp/vanessa/spack-stage/spack-stage-tpm2-tss-2.4.2-ljxccjrnvtunhp4l4uabku6enzs53d4j/spack-src/src/tss2-tcti/tctildr-dl.c": "/* SPDX-License-Identifier: BSD-2-Clause */\n/*******************************************************************************\n * Copyright 2017-2018, Fraunhofer SIT sponsored by Infineon Technologies AG\n * Copyright 2019, Intel Corporation\n * All rights reserved.\n *******************************************************************************/\n\n#ifdef HAVE_CONFIG_H\n#include <config.h>\n#endif\n\n#include <stdlib.h>\n#include <errno.h>\n#include <string.h>\n#include <inttypes.h>\n#include <dlfcn.h>\n#include <limits.h>\n#include <stdio.h>\n\n#include \"tss2_tcti.h\"\n#include \"tctildr-interface.h\"\n#include \"tctildr.h\"\n#define LOGMODULE tcti\n#include \"util/log.h\"\n\n#define ARRAY_SIZE(X) (sizeof(X)/sizeof(X[0]))\n\nstruct {\n    char *file;\n    char *conf;\n    char *description;\n} tctis[] = {\n    {\n        .file = \"libtss2-tcti-default.so\",\n        .description = \"Access libtss2-tcti-default.so\",\n    },\n    {\n        .file = \"libtss2-tcti-tabrmd.so.0\",\n        .description = \"Access libtss2-tcti-tabrmd.so\",\n    },\n    {\n        .file = \"libtss2-tcti-device.so.0\",\n        .conf = \"/dev/tpmrm0\",\n        .description = \"Access libtss2-tcti-device.so.0 with /dev/tpmrm0\",\n    },\n    {\n        .file = \"libtss2-tcti-device.so.0\",\n        .conf = \"/dev/tpm0\",\n        .description = \"Access libtss2-tcti-device.so.0 with /dev/tpm0\",\n    },\n    {\n        .file = \"libtss2-tcti-mssim.so.0\",\n        .description = \"Access to libtss2-tcti-mssim.so\",\n    },\n};\n\nconst TSS2_TCTI_INFO*\ninfo_from_handle (void *dlhandle)\n{\n    TSS2_TCTI_INFO_FUNC info_func;\n\n    if (dlhandle == NULL)\n        return NULL;\n\n    info_func = dlsym  (dlhandle, TSS2_TCTI_INFO_SYMBOL);\n    if (info_func == NULL) {\n        LOG_ERROR (\"Failed to get reference to TSS2_TCTI_INFO_SYMBOL: %s\",\n                   dlerror());\n        return NULL;\n    }\n\n    return info_func ();\n}\nTSS2_RC\nhandle_from_name(const char *file,\n                 void **handle)\n{\n    char file_xfrm [PATH_MAX] = { 0, };\n    size_t size;\n\n    if (handle == NULL) {\n        return TSS2_TCTI_RC_BAD_REFERENCE;\n    }\n    *handle = dlopen(file, RTLD_NOW);\n    if (*handle != NULL) {\n        return TSS2_RC_SUCCESS;\n    } else {\n        LOG_DEBUG(\"Could not load TCTI file: \\\"%s\\\": %s\", file, dlerror());\n    }\n    /* 'name' alone didn't work, try libtss2-tcti-<name>.so.0 */\n    size = snprintf(file_xfrm,\n                    sizeof (file_xfrm),\n                    TCTI_NAME_TEMPLATE_0,\n                    file);\n    if (size >= sizeof (file_xfrm)) {\n        LOG_ERROR(\"TCTI name truncated in transform.\");\n        return TSS2_TCTI_RC_BAD_VALUE;\n    }\n    *handle = dlopen(file_xfrm, RTLD_NOW);\n    if (*handle != NULL) {\n        return TSS2_RC_SUCCESS;\n    } else {\n        LOG_DEBUG(\"Could not load TCTI file \\\"%s\\\": %s\", file, dlerror());\n    }\n    /* libtss2-tcti-<name>.so.0 didn't work, try libtss2-tcti-<name>.so */\n    size = snprintf(file_xfrm,\n                    sizeof (file_xfrm),\n                    TCTI_NAME_TEMPLATE,\n                    file);\n    if (size >= sizeof (file_xfrm)) {\n        LOG_ERROR(\"TCTI name truncated in transform.\");\n        return TSS2_TCTI_RC_BAD_VALUE;\n    }\n    *handle = dlopen(file_xfrm, RTLD_NOW);\n    if (*handle == NULL) {\n        LOG_DEBUG(\"Failed to load TCTI for name \\\"%s\\\": %s\", file, dlerror());\n        return TSS2_TCTI_RC_NOT_SUPPORTED;\n    }\n\n    return TSS2_RC_SUCCESS;\n}\nTSS2_RC\ntcti_from_file(const char *file,\n               const char* conf,\n               TSS2_TCTI_CONTEXT **tcti,\n               void **dlhandle)\n{\n    TSS2_RC r;\n    void *handle;\n    TSS2_TCTI_INFO_FUNC infof;\n\n    LOG_TRACE(\"Attempting to load TCTI file: %s\", file);\n    if (tcti == NULL) {\n        return TSS2_TCTI_RC_BAD_REFERENCE;\n    }\n    r = handle_from_name(file, &handle);\n    if (r != TSS2_RC_SUCCESS) {\n        return r;\n    }\n\n    infof = (TSS2_TCTI_INFO_FUNC) dlsym(handle, TSS2_TCTI_INFO_SYMBOL);\n    if (infof == NULL) {\n        LOG_ERROR(\"Info not found in TCTI file: %s\", file);\n        dlclose(handle);\n        return TSS2_ESYS_RC_BAD_REFERENCE;\n    }\n\n    r = tcti_from_info(infof, conf, tcti);\n    if (r != TSS2_RC_SUCCESS) {\n        LOG_ERROR(\"Could not initialize TCTI file: %s\", file);\n        dlclose(handle);\n        return r;\n    }\n\n    if (dlhandle)\n        *dlhandle = handle;\n\n    LOG_DEBUG(\"Initialized TCTI file: %s\", file);\n\n    return TSS2_RC_SUCCESS;\n}\nTSS2_RC\nget_info_default(const TSS2_TCTI_INFO **info,\n                 void **dlhandle)\n{\n    void *handle = NULL;\n    const TSS2_TCTI_INFO *info_src;\n    char *name = NULL;\n    TSS2_RC rc = TSS2_TCTI_RC_GENERAL_FAILURE;\n\n    LOG_DEBUG(\"%s\", __func__);\n    if (info == NULL || dlhandle == NULL) {\n        LOG_ERROR(\"parameters cannot be NULL\");\n        return TSS2_TCTI_RC_BAD_REFERENCE;\n    }\n#ifdef ESYS_TCTI_DEFAULT_MODULE\n    name = ESYS_TCTI_DEFAULT_MODULE;\n    LOG_DEBUG(\"name: %s\", name);\n    rc = handle_from_name (name, &handle);\n    if (rc != TSS2_RC_SUCCESS)\n        return rc;\n    else if (handle == NULL)\n        return TSS2_TCTI_RC_IO_ERROR;\n#else\n    size_t i;\n    for (i = 0; i < ARRAY_SIZE(tctis); i++) {\n        name = tctis[i].file;\n        LOG_DEBUG(\"name: %s\", name);\n        if (name == NULL) {\n            continue;\n        }\n        rc = handle_from_name (name, &handle);\n        if (rc != TSS2_RC_SUCCESS || handle == NULL) {\n            LOG_DEBUG(\"Failed to get handle for TCTI with name: %s\", name);\n            continue;\n        }\n\n        break;\n    }\n#endif /* ESYS_TCTI_DEFAULT_MODULE */\n\n    info_src = info_from_handle (handle);\n    if (info_src != NULL) {\n        *info = info_src;\n    } else {\n        tctildr_finalize_data (&handle);\n        rc = TSS2_TCTI_RC_GENERAL_FAILURE;\n    }\n    *dlhandle = handle;\n\n    return rc;\n}\n\nTSS2_RC\ntctildr_get_default(TSS2_TCTI_CONTEXT ** tcticontext, void **dlhandle)\n{\n    if (tcticontext == NULL) {\n        LOG_ERROR(\"tcticontext must not be NULL\");\n        return TSS2_TCTI_RC_BAD_REFERENCE;\n    }\n    *tcticontext = NULL;\n#ifdef ESYS_TCTI_DEFAULT_MODULE\n\n#ifdef ESYS_TCTI_DEFAULT_CONFIG\n    const char *config = ESYS_TCTI_DEFAULT_CONFIG;\n#else /* ESYS_TCTI_DEFAULT_CONFIG */\n    const char *config = NULL;\n#endif /* ESYS_TCTI_DEFAULT_CONFIG */\n\n    LOG_DEBUG(\"Attempting to initialize TCTI defined during compilation: %s:%s\",\n              ESYS_TCTI_DEFAULT_MODULE, config);\n    return tcti_from_file(ESYS_TCTI_DEFAULT_MODULE, config, tcticontext,\n                          dlhandle);\n\n#else /* ESYS_TCTI_DEFAULT_MODULE */\n\n    TSS2_RC r;\n    size_t i;\n\n    for (i = 0; i < ARRAY_SIZE(tctis); i++) {\n        LOG_DEBUG(\"Attempting to connect using standard TCTI: %s\",\n                  tctis[i].description);\n        r = tcti_from_file(tctis[i].file, tctis[i].conf, tcticontext,\n                           dlhandle);\n        if (r == TSS2_RC_SUCCESS)\n            return TSS2_RC_SUCCESS;\n        LOG_DEBUG(\"Failed to load standard TCTI number %zu\", i);\n    }\n\n    LOG_ERROR(\"No standard TCTI could be loaded\");\n    return TSS2_TCTI_RC_IO_ERROR;\n\n#endif /* ESYS_TCTI_DEFAULT_MODULE */\n}\nTSS2_RC\ninfo_from_name (const char *name,\n                const TSS2_TCTI_INFO **info,\n                void **data)\n{\n    TSS2_RC rc;\n\n    if (data == NULL || info == NULL)\n        return TSS2_TCTI_RC_BAD_REFERENCE;\n    rc = handle_from_name (name, data);\n    if (rc != TSS2_RC_SUCCESS)\n        return rc;\n    *info = (TSS2_TCTI_INFO*)info_from_handle (*data);\n    if (*info == NULL) {\n        tctildr_finalize_data (data);\n        return TSS2_TCTI_RC_IO_ERROR;\n    }\n    return rc;\n}\nTSS2_RC\ntctildr_get_info(const char *name,\n                 const TSS2_TCTI_INFO **info,\n                 void **data)\n{\n    if (info == NULL) {\n        LOG_ERROR(\"info must not be NULL\");\n        return TSS2_TCTI_RC_BAD_REFERENCE;\n    }\n    if (name != NULL) {\n        return info_from_name (name, info, data);\n    } else {\n        return get_info_default (info, data);\n    }\n}\nTSS2_RC\ntctildr_get_tcti(const char *name,\n                 const char* conf,\n                 TSS2_TCTI_CONTEXT **tcti,\n                 void **data)\n{\n    LOG_DEBUG(\"name: \\\"%s\\\", conf: \\\"%s\\\"\", name, conf);\n    if (tcti == NULL) {\n        LOG_ERROR(\"tcticontext must not be NULL\");\n        return TSS2_TCTI_RC_BAD_REFERENCE;\n    }\n    *tcti = NULL;\n    if (name == NULL) {\n        return tctildr_get_default (tcti, data);\n    }\n\n    return tcti_from_file (name, conf, tcti, data);\n}\n\nvoid\ntctildr_finalize_data (void **data)\n{\n    if (data != NULL && *data != NULL) {\n        dlclose(*data);\n        *data = NULL;\n    }\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-tpm2-tss-2.4.2-ljxccjrnvtunhp4l4uabku6enzs53d4j/spack-src/man/Tss2_TctiLdr_Initialize.3.in": ".\\\" Process this file with\n.\\\" groff -man -Tascii foo.1\n.\\\"\n.TH Tss2_TctiLdr_Initialize 3 \"MARCH 2019\" \"TPM2 Software Stack\"\n.SH NAME\nTss2_TctiLdr_Initialize, Tss2_TctiLdr_Initialize_Ex \\- Instantiate and\ninitialize a TCTI context.\n.SH SYNOPSIS\n.B #include <tss2/tss2_tctildr.h>\n.sp\n.sp\n.BI \"TSS2_RC Tss2_TctiLdr_Initialize (const char \" \"*nameConf\" \", TSS2_TCTI_CONTEXT \" \"**context\" \");\"\n.sp\n.BI \"TSS2_RC Tss2_TctiLdr_Initialize_Ex (const char \" \"*name\" \", const char \" \"*conf\" \", TSS2_TCTI_CONTEXT \" \"**context\" \");\"\n.sp\n.SH DESCRIPTION\nThe\n.BR Tss2_TctiLdr_Initialize ()\nand\n.BR Tss2_TctiLdr_Initialize_Ex ()\nfunctions initialize a TCTI context used to communicate with the TPM2 or\nsome intermediate component in the TCG TPM2 software stack.\n.sp\n.BR Tss2_TctiLdr_Initialize ()\ntakes a single string that encodes both the name of the TCTI library the\ncaller wishes to instantiate and its desired configuration in the\n.I nameConf\nparameter.\n.I nameConf\nis a string comprised of two substrings:\n.I name\nand\n.I conf\nparameters respectively.\nThese substrings are combined with\n.I name\nfirst, separated by a single ':' / colon character: 'name:conf'. Consult\nthe section titled TCTI CONFIG for information about the encoding of these\nstrings.\nThe\n.I context\nparameter is used to return a reference to the TCTI context created by\nthe function.\n.sp\n.BR Tss2_TctiLdr_Initialize_Ex ()\nbehaves identically to the\n.BR Tss2_TctiLdr_Initialize ()\nfunction with the exception that the TCTI name and configuration are passed\nas separate strings. The encoding of these strings is described in section\nTCTI_CONFIG.\n.SH TCTI CONFIG\nIf the\n.I name\nstring is NULL or the emptry string then the initialization functions will\nselect a default TCTI appropriate for the platform. On Linux this means\nfirst trying to load a library named\n.I libtss2-tcti-default.so.\nThis is a placeholder for distros to provide a distro specific default. It\nis recommended that this be a symlink to another installed TCTI library.\nIf attempts to load this shared object fails the implementation will\nattempt known TCTIs in the following order:\n.IP \\[bu] 2\nlibtss2-tcti-tabrmd.so.0\n.IP \\[bu]\nlibtss2-tcti-device.so.0\n.IP \\[bu]\nlibtss2-tcti-mssim.so.0\n.RE\n.sp\nWhen the\n.I name\nstring is neither NULL nor the empty string the implementation will attempt\nto\n.I dlopen\na library with the given name. If this fails then the implementation assumes\nit has been passed a shortened name and will attempt to load libraries by\nname with the following permutations:\n.IP \\[bu] 2\n<name>\n.IP \\[bu]\nlibtss2-tcti-<name>.so.0\n.IP \\[bu]\nlibtss2-tcti-<name>.so\n.RE\n.sp\nThe\n.I config\nstring is not interpreted by the TctiLdr init functions and is passed\nunaltered to the initialization function for the selected TCTI. The\nformat for this string is TCTI specific.\n.sp\nThe\n.BR Tss2_TctiLdr_Initialize\nfunction is passed the\n.I name\nand\n.I conf\nstrings as a single parameter. In this case the\n.I name\nand\n.I conf\nstrings are concatinated with a single ':' / colon character separating them.\n.sp\nFor a more thorough discussion of the TCTILDR API see the \\*(lqTCG TSS 2.0 TPM Command\nTransmission Interface (TCTI) API Specification\\*(rq.\n.SH RETURN VALUE\nA successful call to this function will return\n.B TSS2_RC_SUCCESS.\nAn unsuccessful call will produce a response code described in section\n.B ERRORS.\n.SH ERRORS\n.B TSS2_TCTI_RC_MEMORY\nis returned if memory allocation fails\n.sp\n.B TSS2_TCTI_RC_NOT_SUPPORTED\nis returned when the loader is unable to locate a TCTI library with the\nprovided\n.I name\n.sp\n.B TSS2_TCTI_RC_IO_ERROR\nis returned if a failure occurs in the underlying library loading mechanism\n.sp\n.B TSS2_TCTI_RC_BAD_REFERENCE\nis returned if the\n.I tctiContext\nparameter is NULL\n.sp\n.SH EXAMPLE\nExample code.\n.sp\n.nf\n#include <inttypes.h>\n#include <stdlib.h>\n#include <stdio.h>\n#include <tss2/tss2_tctildr.h>\n\nTSS2_TCTI_CONTEXT *ctx = NULL;\nTSS2_RC rc = Tss2_TctiLdr_Initialize (NULL, &ctx);\nif (rc != TSS2_RC_SUCCESS) {\n    fprintf (stderr, \"Initialization of default TCTI context failed with \"\n             \"response code: 0x%\" PRIx32 \"\\n\", rc);\n    exit (EXIT_FAILURE);\n}\nexit (EXIT_SUCCESS);\n.fi\n",
        "/tmp/vanessa/spack-stage/spack-stage-tpm2-tss-2.4.2-ljxccjrnvtunhp4l4uabku6enzs53d4j/spack-src/test/unit/tctildr-dl.c": "/* SPDX-License-Identifier: BSD-2-Clause */\n/*******************************************************************************\n * Copyright 2018, Fraunhofer SIT sponsored by Infineon Technologies AG\n * Copyright 2019, Intel Corporation\n * All rights reserved.\n *******************************************************************************/\n\n#ifdef HAVE_CONFIG_H\n#include <config.h>\n#endif\n\n#include <stdio.h>\n#include <stddef.h>\n#include <stdlib.h>\n\n#include <dlfcn.h>\n\n#include <setjmp.h>\n#include <cmocka.h>\n\n#include \"tss2_tcti.h\"\n\n#include \"tss2-tcti/tctildr-interface.h\"\n#include \"tss2-tcti/tctildr-dl.h\"\n#include \"tss2-tcti/tctildr.h\"\n#define LOGMODULE test\n#include \"util/log.h\"\n\n/* global TCTI object, use to return reference from */\nstatic TSS2_TCTI_CONTEXT_COMMON_V2 tcti_instance = { 0, };\n\nchar *\n__wrap_dlerror(void)\n{\n    return (char*)__func__;\n}\n\nvoid *\n__wrap_dlopen(const char *filename, int flags)\n{\n    LOG_TRACE(\"Called with filename %s and flags %x\", filename, flags);\n    check_expected_ptr(filename);\n    check_expected(flags);\n    return mock_type(void *);\n}\n\nint\n__wrap_dlclose(void *handle)\n{\n    LOG_TRACE(\"Called with handle %p\", handle);\n    check_expected_ptr(handle);\n    return mock_type(int);\n}\n\nvoid *\n__wrap_dlsym(void *handle, const char *symbol)\n{\n    LOG_TRACE(\"Called with handle %p and symbol %s\", handle, symbol);\n    check_expected_ptr(handle);\n    check_expected_ptr(symbol);\n    return mock_type(void *);\n}\n\nTSS2_TCTI_INFO *\n__wrap_Tss2_Tcti_Fake_Info(void)\n{\n    LOG_TRACE(\"Called.\");\n    return mock_type(TSS2_TCTI_INFO *);\n}\n\nTSS2_RC\n__wrap_tcti_from_init(TSS2_TCTI_INIT_FUNC init,\n                      const char* conf,\n                      TSS2_TCTI_CONTEXT **tcti)\n{\n    printf(\"%s\", __func__);\n    return mock_type (TSS2_RC);\n}\nTSS2_RC\n__wrap_tcti_from_info(TSS2_TCTI_INFO_FUNC infof,\n                      const char* conf,\n                      TSS2_TCTI_CONTEXT **tcti)\n{\n    check_expected (infof);\n    check_expected (conf);\n    check_expected (tcti);\n    if (tcti != NULL)\n        *tcti = mock_type (TSS2_TCTI_CONTEXT*);\n    return mock_type (TSS2_RC);\n}\n\n#define TEST_HANDLE (void*)0xade0\nstatic void\ntest_info_from_handle_null (void **state)\n{\n    const TSS2_TCTI_INFO* info = info_from_handle (NULL);\n    assert_null (info);\n}\nstatic void\ntest_info_from_handle_dlsym_fail (void **state)\n{\n    expect_value(__wrap_dlsym, handle, TEST_HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, NULL);\n\n    const TSS2_TCTI_INFO* info = info_from_handle (TEST_HANDLE);\n    assert_null (info);\n}\nstatic void\ntest_info_from_handle_success (void **state)\n{\n    TSS2_TCTI_INFO info_instance = { 0, };\n    const TSS2_TCTI_INFO *info = { 0, };\n\n    expect_value(__wrap_dlsym, handle, TEST_HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    will_return(__wrap_Tss2_Tcti_Fake_Info, &info_instance);\n\n    info = info_from_handle (TEST_HANDLE);\n    assert_ptr_equal (info, &info_instance);\n}\n\nstatic void\ntest_fail_null(void **state)\n{\n    TSS2_RC r = tctildr_get_default(NULL, NULL);\n    assert_int_equal(r, TSS2_TCTI_RC_BAD_REFERENCE);\n}\n\nstatic void\ntest_handle_from_name_null_handle (void **state)\n{\n    TSS2_RC rc = handle_from_name (NULL, NULL);\n    assert_int_equal (rc, TSS2_TCTI_RC_BAD_REFERENCE);\n}\n#define TEST_TCTI_NAME \"test-tcti\"\n#define TEST_TCTI_CONF \"test-conf\"\nstatic void\ntest_handle_from_name_first_dlopen_success (void **state)\n{\n    TSS2_RC rc;\n    void *handle = NULL;\n\n    expect_string(__wrap_dlopen, filename, TEST_TCTI_NAME);\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, TEST_HANDLE);\n\n    rc = handle_from_name (TEST_TCTI_NAME, &handle);\n    assert_int_equal (rc, TSS2_RC_SUCCESS);\n    assert_int_equal (handle, TEST_HANDLE);\n}\n\n#define TEST_TCTI_NAME_SO_0 TCTI_PREFIX\"-\"TEST_TCTI_NAME\"\"TCTI_SUFFIX_0\nstatic void\ntest_handle_from_name_second_dlopen_success (void **state)\n{\n    TSS2_RC rc;\n    void *handle = NULL;\n\n    expect_string(__wrap_dlopen, filename, TEST_TCTI_NAME);\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, TEST_TCTI_NAME_SO_0);\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, TEST_HANDLE);\n\n    rc = handle_from_name (TEST_TCTI_NAME, &handle);\n    assert_int_equal (rc, TSS2_RC_SUCCESS);\n    assert_int_equal (handle, TEST_HANDLE);\n}\n#define TEST_TCTI_NAME_SO TCTI_PREFIX\"-\"TEST_TCTI_NAME\"\"TCTI_SUFFIX\nstatic void\ntest_handle_from_name_third_dlopen_success (void **state)\n{\n    TSS2_RC rc;\n    void *handle = NULL;\n\n    expect_string(__wrap_dlopen, filename, TEST_TCTI_NAME);\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, TEST_TCTI_NAME_SO_0);\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, TEST_TCTI_NAME_SO);\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, TEST_HANDLE);\n\n    rc = handle_from_name (TEST_TCTI_NAME, &handle);\n    assert_int_equal (rc, TSS2_RC_SUCCESS);\n    assert_int_equal (handle, TEST_HANDLE);\n}\n\nstatic void\ntest_tcti_from_file_null_tcti (void **state)\n{\n    TSS2_RC rc = tcti_from_file (NULL, NULL, NULL, NULL);\n    assert_int_equal (rc, TSS2_TCTI_RC_BAD_REFERENCE);\n}\n\n#define HANDLE (void *)123321\n#ifndef ESYS_TCTI_DEFAULT_MODULE\nstatic void\ntest_get_info_default_null (void **state)\n{\n    TSS2_RC rc = get_info_default (NULL, NULL);\n    assert_int_equal (rc, TSS2_TCTI_RC_BAD_REFERENCE);\n}\nstatic void\ntest_get_info_default_success (void **state)\n{\n    const TSS2_TCTI_INFO info_instance = { 0, };\n    TSS2_TCTI_INFO *info = { 0, };\n    void *handle;\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-default.so.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-default.so.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-tabrmd.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    will_return(__wrap_Tss2_Tcti_Fake_Info, &info_instance);\n\n    TSS2_RC rc = get_info_default (&info, &handle);\n    assert_int_equal (rc, TSS2_RC_SUCCESS);\n    assert_ptr_equal (info, &info_instance);\n}\nstatic void\ntest_get_info_default_info_fail (void **state)\n{\n    TSS2_TCTI_INFO *info = { 0, };\n    void *handle;\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-default.so.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-default.so.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-tabrmd.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    will_return(__wrap_Tss2_Tcti_Fake_Info, NULL);\n\n    expect_value(__wrap_dlclose, handle, HANDLE);\n    will_return(__wrap_dlclose, 0);\n\n    TSS2_RC rc = get_info_default (&info, &handle);\n    assert_int_equal (rc, TSS2_TCTI_RC_GENERAL_FAILURE);\n    assert_ptr_equal (info, NULL);\n}\n/** Test for tcti\n * { \"libtss2-tcti-default.so\", NULL, \"\", \"Access libtss2-tcti-default.so\" }\n */\nstatic void\ntest_tcti_default(void **state)\n{\n    TSS2_TCTI_CONTEXT *tcti;\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    expect_value(__wrap_tcti_from_info, infof, __wrap_Tss2_Tcti_Fake_Info);\n    expect_value(__wrap_tcti_from_info, conf, NULL);\n    expect_value(__wrap_tcti_from_info, tcti, &tcti);\n    will_return(__wrap_tcti_from_info, &tcti_instance);\n    will_return(__wrap_tcti_from_info, TSS2_RC_SUCCESS);\n\n    TSS2_RC r;\n    void *handle = NULL;\n    r = tctildr_get_default(&tcti, &handle);\n    assert_int_equal(r, TSS2_RC_SUCCESS);\n}\n\n/** Test for failure on tcti\n * { \"libtss2-tcti-default.so\", NULL, \"\", \"Access libtss2-tcti-default.so\" }\n */\nstatic void\ntest_tcti_default_fail_sym(void **state)\n{\n    TSS2_TCTI_CONTEXT *tcti;\n#define HANDLE (void *)123321\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, NULL);\n\n    expect_value(__wrap_dlclose, handle, HANDLE);\n    will_return(__wrap_dlclose, 0);\n\n    /** Now test\n     *{ \"libtss2-tcti-tabrmd.so\", NULL, \"\", \"Access libtss2-tcti-tabrmd.so\"},\n     */\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-tabrmd.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    expect_value(__wrap_tcti_from_info, infof, __wrap_Tss2_Tcti_Fake_Info);\n    expect_value(__wrap_tcti_from_info, conf, NULL);\n    expect_value(__wrap_tcti_from_info, tcti, &tcti);\n    will_return(__wrap_tcti_from_info, &tcti_instance);\n    will_return(__wrap_tcti_from_info, TSS2_RC_SUCCESS);\n\n    TSS2_RC r;\n    r = tctildr_get_default(&tcti, NULL);\n    assert_int_equal(r, TSS2_RC_SUCCESS);\n}\n\n/** Test for failure on tcti\n * { \"libtss2-tcti-default.so\", NULL, \"\", \"Access libtss2-tcti-default.so\" }\n */\nstatic void\ntest_tcti_default_fail_info(void **state)\n{\n    TSS2_TCTI_CONTEXT *tcti;\n#define HANDLE (void *)123321\n#define TEST_RC 0x55687\n\n /** Test for failure on tcti\n * { \"libtss2-tcti-default.so\", NULL, \"\", \"Access libtss2-tcti-default.so\" }\n */\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    expect_value(__wrap_tcti_from_info, infof, __wrap_Tss2_Tcti_Fake_Info);\n    expect_value(__wrap_tcti_from_info, conf, NULL);\n    expect_value(__wrap_tcti_from_info, tcti, &tcti);\n    will_return(__wrap_tcti_from_info, &tcti_instance);\n    will_return(__wrap_tcti_from_info, TEST_RC);\n\n    expect_value(__wrap_dlclose, handle, HANDLE);\n    will_return(__wrap_dlclose, 0);\n\n    /** Now test\n     *{ \"libtss2-tcti-tabrmd.so\", NULL, \"\", \"Access libtss2-tcti-tabrmd.so\"},\n     */\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-tabrmd.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    expect_value(__wrap_tcti_from_info, infof, __wrap_Tss2_Tcti_Fake_Info);\n    expect_value(__wrap_tcti_from_info, conf, NULL);\n    expect_value(__wrap_tcti_from_info, tcti, &tcti);\n    will_return(__wrap_tcti_from_info, &tcti_instance);\n    will_return(__wrap_tcti_from_info, TSS2_RC_SUCCESS);\n\n    TSS2_RC r;\n    r = tctildr_get_default(&tcti, NULL);\n    assert_int_equal(r, TSS2_RC_SUCCESS);\n}\n\nstatic void\ntest_tcti_fail_all (void **state)\n{\n    /* skip over libtss2-tcti-default.so */\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-default.so.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-default.so.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    /* Skip over libtss2-tcti-tabrmd.so */\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-tabrmd.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-tabrmd.so.0.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-tabrmd.so.0.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    /* Skip over libtss2-tcti-device.so, /dev/tpmrm0 */\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-device.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-device.so.0.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-device.so.0.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    /* Skip over libtss2-tcti-device.so, /dev/tpm0 */\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-device.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-device.so.0.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-device.so.0.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    /* Skip over libtss2-tcti-mssim.so */\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-mssim.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-mssim.so.0.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-mssim.so.0.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    TSS2_RC r;\n    TSS2_TCTI_CONTEXT *tcti;\n    r = tctildr_get_default(&tcti, NULL);\n    assert_int_equal(r, TSS2_TCTI_RC_IO_ERROR);\n}\n#endif\nvoid\ntest_info_from_name_null (void **state)\n{\n    TSS2_RC rc = info_from_name (NULL, NULL, NULL);\n    assert_int_equal (rc, TSS2_TCTI_RC_BAD_REFERENCE);\n}\nvoid\ntest_info_from_name_handle_fail (void **state)\n{\n    const TSS2_TCTI_INFO *info;\n    void *data;\n\n    expect_string(__wrap_dlopen, filename, \"foo\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-foo.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-foo.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    TSS2_RC rc = info_from_name (\"foo\", &info, &data);\n    assert_int_equal (rc, TSS2_TCTI_RC_NOT_SUPPORTED);\n}\nvoid\ntest_info_from_name_info_fail (void **state)\n{\n    const TSS2_TCTI_INFO *info = { 0, };\n    void *data = HANDLE;\n\n    expect_string(__wrap_dlopen, filename, \"foo\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    will_return(__wrap_Tss2_Tcti_Fake_Info, NULL);\n\n    expect_value(__wrap_dlclose, handle, HANDLE);\n    will_return(__wrap_dlclose, 0);\n\n    TSS2_RC rc = info_from_name (\"foo\", &info, &data);\n    assert_int_equal (rc, TSS2_TCTI_RC_IO_ERROR);\n}\nvoid\ntest_info_from_name_success (void **state)\n{\n    const TSS2_TCTI_INFO *info = { 0, };\n    TSS2_TCTI_INFO info_instance = { 0, };\n    void *data;\n\n    expect_string(__wrap_dlopen, filename, \"foo\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    will_return(__wrap_Tss2_Tcti_Fake_Info, &info_instance);\n\n    TSS2_RC rc = info_from_name (\"foo\", &info, &data);\n    assert_int_equal (rc, TSS2_RC_SUCCESS);\n    assert_ptr_equal (info, &info_instance);\n    assert_ptr_equal (data, HANDLE);\n}\nvoid\ntest_get_tcti_null (void **state)\n{\n    TSS2_RC rc = tctildr_get_tcti (NULL, NULL, NULL, NULL);\n    assert_int_equal(rc, TSS2_TCTI_RC_BAD_REFERENCE);\n}\nvoid\ntest_get_tcti_default (void **state)\n{\n    TSS2_TCTI_CONTEXT *tcti;\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    expect_value(__wrap_tcti_from_info, infof, __wrap_Tss2_Tcti_Fake_Info);\n    expect_value(__wrap_tcti_from_info, conf, NULL);\n    expect_value(__wrap_tcti_from_info, tcti, &tcti);\n    will_return(__wrap_tcti_from_info, &tcti_instance);\n    will_return(__wrap_tcti_from_info, TSS2_RC_SUCCESS);\n\n    void *data;\n    TSS2_RC rc = tctildr_get_tcti (NULL, NULL, &tcti, &data);\n    assert_int_equal(rc, TSS2_RC_SUCCESS);\n}\nvoid\ntest_get_tcti_from_name (void **state)\n{\n    TSS2_TCTI_CONTEXT *tcti;\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    expect_value(__wrap_tcti_from_info, infof, __wrap_Tss2_Tcti_Fake_Info);\n    expect_value(__wrap_tcti_from_info, conf, NULL);\n    expect_value(__wrap_tcti_from_info, tcti, &tcti);\n    will_return(__wrap_tcti_from_info, &tcti_instance);\n    will_return(__wrap_tcti_from_info, TSS2_RC_SUCCESS);\n\n    void *data;\n    TSS2_RC rc = tctildr_get_tcti (\"libtss2-tcti-default.so\", NULL, &tcti, &data);\n    assert_int_equal(rc, TSS2_RC_SUCCESS);\n}\n\nvoid\ntest_tctildr_get_info_from_name (void **state)\n{\n    const TSS2_TCTI_INFO *info;\n    void *data;\n\n    expect_string(__wrap_dlopen, filename, \"foo\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-foo.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-foo.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    TSS2_RC rc = tctildr_get_info (\"foo\", &info, &data);\n    assert_int_equal (rc, TSS2_TCTI_RC_NOT_SUPPORTED);\n}\nvoid\ntest_tctildr_get_info_default (void **state)\n{\n    const TSS2_TCTI_INFO *info;\n    void *data;\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, NULL);\n\n    expect_value(__wrap_dlclose, handle, HANDLE);\n    will_return(__wrap_dlclose, 0);\n\n    TSS2_RC rc = tctildr_get_info (NULL, &info, &data);\n    assert_int_equal (rc, TSS2_TCTI_RC_GENERAL_FAILURE);\n}\n\nvoid\ntest_finalize_data (void **state)\n{\n    void *data = HANDLE;\n\n    expect_value(__wrap_dlclose, handle, data);\n    will_return(__wrap_dlclose, 0);\n    tctildr_finalize_data (&data);\n    assert_null (data);\n}\n\nint\nmain(void)\n{\n    const struct CMUnitTest tests[] = {\n        cmocka_unit_test(test_info_from_handle_null),\n        cmocka_unit_test(test_info_from_handle_dlsym_fail),\n        cmocka_unit_test(test_info_from_handle_success),\n        cmocka_unit_test(test_handle_from_name_null_handle),\n        cmocka_unit_test(test_handle_from_name_first_dlopen_success),\n        cmocka_unit_test(test_handle_from_name_second_dlopen_success),\n        cmocka_unit_test(test_handle_from_name_third_dlopen_success),\n        cmocka_unit_test(test_fail_null),\n        cmocka_unit_test(test_tcti_from_file_null_tcti),\n#ifndef ESYS_TCTI_DEFAULT_MODULE\n        cmocka_unit_test(test_get_info_default_null),\n        cmocka_unit_test(test_get_info_default_success),\n        cmocka_unit_test(test_get_info_default_info_fail),\n        cmocka_unit_test(test_tcti_default),\n        cmocka_unit_test(test_tcti_default_fail_sym),\n        cmocka_unit_test(test_tcti_default_fail_info),\n        cmocka_unit_test(test_tcti_fail_all),\n        cmocka_unit_test(test_get_tcti_null),\n        cmocka_unit_test(test_get_tcti_default),\n        cmocka_unit_test(test_get_tcti_from_name),\n        cmocka_unit_test(test_tctildr_get_info_from_name),\n        cmocka_unit_test(test_tctildr_get_info_default),\n#endif\n        cmocka_unit_test(test_info_from_name_null),\n        cmocka_unit_test(test_info_from_name_handle_fail),\n        cmocka_unit_test(test_info_from_name_info_fail),\n        cmocka_unit_test(test_info_from_name_success),\n        cmocka_unit_test(test_finalize_data),\n    };\n    return cmocka_run_group_tests (tests, NULL, NULL);\n}\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-tpm2-tss-2.4.2-ljxccjrnvtunhp4l4uabku6enzs53d4j/spack-src/doc/TSS_block_diagram.png"
    ],
    "total_files": 706
}