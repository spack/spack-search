{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/ChangeLog.pre-2-10": "2006-08-22  Matthias Clasen  <mclasen@redhat.com> \n\n\t* Branch for 2.10\n\n2006-08-23  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk/gtkfilesystemwin32.c: Remove dead code. Reduce spurious\n\tdifferences between this file and gtkfilesystemunix.c so that it\n\tis easier to compare them and check if differences are\n\tintentional. I will later factor out the common functions and code\n\tsnippets from these two files.\n\n2006-08-23  Tor Lillqvist  <tml@novell.com>\n\n\tFix several problems with the file chooser on Windows, for\n\tinstance prevent duplicated directory entries from appearing.\n\n\t* gtk/gtkfilesystem.c (gtk_file_paths_sort): Use\n\t_gtk_file_system_win32_path_compare() on Windows for casefolded\n\tsorting.\n\n\t* gtk/gtkfilesystemwin32.c (casefolded_hash, casefolded_equal):\n\tcase-independent hash and equality functions. Scan the UTF-8\n\tstrings gunichar by gunichar, and ignore special casing rules, to\n\tmore closely match NTFS behaviour.\n\t(gtk_file_system_win32_init): Use casefolded_hash() and\n\tcasefolded_equal() for the folder hash table.\n\t(remove_trailing_slash): Don't remove the slash of a drive or\n\tshare root.\n\t(get_mime_type_for_file): Take also a WIN32_FILE_ATTRIBUTE_DATA as\n\targument, and use that to recognize directories. Don't call\n\tg_file_test() to check for executables, just look at the file name\n\textension directly.\n\t(gtk_file_system_win32_make_path): Check illegal chars in file\n\tname, like in gtkfilesystemunix.c.\n\t(create_file_info): Drop unused basename parameter. Call\n\tg_filename_display_name() directly for roots, as\n\tg_filename_display_basename() mishandles those.\n\t(gtk_file_folder_win32_get_info): Skip sanity check for now, as it\n\tfails for server share roots. Construct basename only in the if\n\tbranch that uses it.\n\t(fill_in_names): Use casefolded_hash() and casefolded_equal() for\n\tthe folder's stat_info hash table, too.\n\t(_gtk_file_system_win32_path_compare): Scan the strings gunichar\n\tby gunichar and ignore special casing here, too, instead of using\n\tg_utf8_casefold(). Match slash and backslash.\n\n2006-08-23  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/x11/gdkwindow-x11.c (gdk_window_shape_combine_mask)\n\t(gdk_window_input_shape_combine_mask)\n\t(gdk_window_shape_combine_region)\n\t(gdk_window_input_shape_combine_region): Add Win32 detail to doc\n\tcomments.\n\n2006-08-22  Paolo Borelli  <pborelli@katamail.com>\n\n\t* gtk/gtktextview.c: do not scroll on copy. Bug #329604.\n\n2006-08-18  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkrecentchooser.c (gtk_recent_chooser_get_uris): Behave as\n\tdocumented and always return a NULL-terminated array.\n\n\t* gtk/gtkrecentmanager.c (gtk_recent_manager_real_changed): Make sure\n\tto reset write_in_progress.  \n\n2006-08-17  Matthias Clasen  <mclasen@redhat.com>\n\n\t* configure.in: Bump version\n\n\t* === Released 2.10.2 ===\n\n\t* gtk/gtkrecentchoosermenu.c (gtk_recent_chooser_menu_list_filters):\n\tInitialize menu.  (#351857, Chris Wilson)\n\n\t* gtk/gtkprinteroptionwidget.c (update_widgets): \n\t* modules/printbackends/file/gtkprintbackendfile.c \n\t(output_file_from_settings): Handle filename encoding\n\tconsistently.  (#351812, Christian Persch)\n\n\t* NEWS: Updates\n\n2006-08-17  Federico Mena Quintero  <federico@novell.com>\n\n\t* gtk/gtkfilechooserdefault.c\n\t(_gtk_file_chooser_default_class_init): Enable \"/\" and \"~\" as\n\tbindings to activate the location entry again.  Fixes bug #340856.\n\t(tree_view_keybinding_cb): Likewise.\n\t(trap_activate_cb): Likewise.\n\t(location_popup_handler): Handle the \"path\" argument again; set it\n\tas the text on the location entry.\n\t(location_set_user_text): New helper function.\n\t(load_setup_timer): Fix comment.\n\n\t* tests/autotestfilechooser.c (main): Oops, enable all the tests again.\n\n2006-08-17  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkmodules.c (find_module): Revert the local binding\n\tchange to avoid a11y regressions in current OpenOffice.org\n\treleases. The G_MODULE_BIND_LOCAL will be reintroduced \n\tin 2.12.\n\n2006-08-17  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktrayicon-x11.c: Fix the ClientMessages we are\n\tsending to the notification area to be more in sync with\n\tthe systray spec.  (#350860, Wincent Untz)\n\n\t* gtk/gtkprintoperation.c (print_pages, preview_ready): Queue\n\tprinting idles at a low priority.  (#348289, Yevgen Muntyan)\n\n\t* gtk/gtkstatusicon.c (gtk_status_icon_get_geometry): Add some\n\tcaveats to the documentation.  (#348971)\n\nThu Aug 17 16:19:35 2006  Tim Janik  <timj@imendio.com>\n\n\t* docs/tutorial/gtk-tut.sgml: fixed buglet from #351759.\n\n2006-08-17  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk/Makefile.am (libgtk_win32_2_0_la_LIBADD): Link with -luuid\n\tfor IID_IUnknown that gtkprintoperation-win32.o needs.\n\n2006-08-17  Matthias Clasen  <mclasen@redhat.com>\n\n\t* modules/printbackends/file/gtkprintbackendfile.c: Improve\n\tthe handling of the default output filename, to ensure\n\tthat we default to output.ps when only PostScript output\n\tis possible.  (#348236, Don Scorgie)\n\n\t* gtk/gtkprintunixdialog.c (gtk_print_unix_dialog_set_manual_capabilities): \n\tRe-select the current printer to update per-printer ui. \n\t(#348245, Don Scorgie)\n\n\t* gtk/gtkfilechooserbutton.c (set_info_get_info_cb) \n\t(model_add_special_get_info_cb): Handle the case where the\n\tfilechooser button is destroyed quickly.\n\n2006-08-17  Paolo Borelli  <pborelli@katamail.com>\n\n\t* gtk/gtktextbuffer.c: make sure the has-selection property is\n\tupdated when the delection is deleted. Bug #329752\n\t* tests/testtext.c: add a copy menu item and show how to\n\tupdate its sensitivity tracking the has-selection property.\n\n2006-08-17  Michael Emmel  <mike.emmel@gmail.com>\n\n\t* configure.in:\n\tChanged  to use cairo-directfb.pc bug #351519\n\n2006-08-17  Kristian Rietveld  <kris@gtk.org>\n\n\t* demos/gtk-demo/main.c (window_closed_cb), (row_activated_cb),\n\t(create_tree): move the ITALIC_COLUMN over to a STYLE_COLUMN\n\twhich sets the style attribute.  Makes drawing the active demos\n\tin italic work again.\n\n2006-08-16  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreemodel.c (gtk_tree_model_base_init): Add some\n\tdocs to the row-deleted signal.  (#349128, Benedikt Meurer)\n\n\t* gtk/gtkiconview.c: Update background upon style-set and\n\tstate-changed.  (#348634, Thomas Rydzynski)\n\n\t* gtk/gtkentry.c (paste_received): Popup completion if paste\n\tis at the end (patch was already in 2.8.x).  (#165714, \n\tChristian Persch)\n\n\t* gtk/gtknotebook.c (gtk_notebook_set_current_page): Explain\n\tsome quirks of this function.  (#351112)\n\n2006-08-16  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreeviewcolumn.c (gtk_tree_view_column_cell_process_action):\n\ttake the cell spacing into account when calculating the available\n\textra space. (#350938, patch from Peter Johanson).\n\n2006-08-16  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreemodelfilter.c (gtk_tree_model_filter_fetch_child):\n\tupdate the refs from children to parents for all nodes, since\n\tthey may all have been moved by the insert operation. (#346800,\n\tpatch from Jonathan Matthew).\n\n2006-08-15  Matthias Clasen <mclasen@redhat.com>\n\n\t* gtk/gtkrecentfilter.c (gtk_recent_filter_filter):\n\t* gtk/gtkrecentmanager.c (gtk_recent_manager_lookup_item):\n\tAdd Since tags.  (#351581, Brian Cameron)\n\n2006-08-15  Michael Emmel  <mike.emmel@gmail.com>\n\n\t* configure.in  \n\tAdded cairo flag patch to fix directfb build from bug #351519\n\n2006-08-15  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkevents-quartz.c: (get_event_mask_from_ns_event): \n\tAdd GDK button mask for NS dragging events.\n\t(create_scroll_event): Remove obsolete comment.\n\t(_gdk_quartz_get_current_event_mask), (gdk_event_translate): Keep\n\ttrack of the latest event mask here...\n\n\t* gdk/quartz/gdkwindow-quartz.c: \n\t(_gdk_windowing_window_get_pointer): And use it here. Patch from\n\tKristian Rietveld.\n\t(gdk_window_quartz_update_idle): Rename to make things clearer.\n\n2006-08-15  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprintoperationpreview.c: \n\t* gtk/gtkprintoperation.c (gtk_print_operation_class_init): Add\n\tmore docs.\n\n\t* gtk/gtkaboutdialog.c (gtk_about_dialog_init): Set CAN_DEFAULT\n\ton all buttons.  (#168737, fix proposed by Benjamin Berg)\n\n\t* gtk/gtkentryprivate.h: \n\t* gtk/gtkentry.c (_gtk_entry_effective_inner_border): Export \n\tprivately. Adjust all callers.\n\n\t* gtk/gtkspinbutton.c (gtk_spin_button_size_request): Use it\n\there to get the actual inner border.  (#349429, Benjamin Berg)\n\n\t* gtk/gtkfilechooserentry.c (struct _GtkFileChooserEntry): Don't\n\tstore GSource pointers, but ids.\n\t(gtk_file_chooser_entry_dispose): Remove idles.\n\t(idle_add, idle_add): Factor this out.\n\t(gtk_file_chooser_entry_maybe_update_directory): \n\t(add_completion_idle): And use it here. (#350039, Chris Wilson)\n\n\t* gtk/gtkicontheme.c (do_theme_change): Run the reset_styles\n\tidle at a priority higher than size negotiation.  (#350517,\n\tS\u00f8ren Sandmann)\n\t\n\t* gtk/gtkfilesystem.c (gtk_file_info_render_icon) \n\t(gtk_file_system_volume_render_icon): Do better fallbacks\n\tif the icon theme does not have icons.  (#345666,\n\tKazuki Iwamoto)\n\n\t* gtk/gtkruler.c (gtk_ruler_unrealize): Don't leak\n\tno_gr_exp_gc.  (#350050, Chris Wilson)\n\n\t* gdk/x11/gdkdrawable-x11.c (get_shm_pixmap_for_image): Don't\n\tleak ShmPixmapInfo.  (#349858, Chris Wilson)\n\n\t* gtk/Makefile.am (GTK_PRINT_PREVIEW_COMMAND): Call evince\n\twith the --preview option.  (#350139, Carlos Garcia Campos)\n\n\t* modules/printbackends/cups/gtkprintbackendcups.c (create_pickone_option): \n\tSimplify, make it build against cups 1.1.  (#350329)\t\n\n\t* gtk/gtkliststore.c (gtk_list_store_insert_with_values): \n\tFix a typo in the docs.  (#349501, Carlos GUSLiBu)\n\n\t* gtk/gtkcolorsel.c (palette_paint): Remove a leftover\n\tdebug statement. (#350072, Iago Rubio)\n\n\t* gtk/gtktextbufferserialize.c (check_id_or_name): Fix\n\twarning text.  (#349277)\n\n\t* gtk/gtknotebook.c (gtk_notebook_enter_notify): Remove.\n\t(gtk_notebook_motion_notify): Instead, update the arrow\n\tstate here.  (#349570, Benjamin Otte)\n\n\t* gdk/x11/gdkwindow-x11.c (gdk_window_get_geometry_hints):\n\tUse XAllocSizeHints to allocate the XSizeHints struct.\n\t(#249285, David Baron)\n\n\t* gdk/x11/gdkdnd-x11.c (gdk_window_register_dnd):\n\t* gdk/x11/gdkwindow-x11.c (gdk_window_set_decorations):\n\t(gdk_window_set_functions): Zero out some stack-allocated\n\tX structures, to avoid valgrind warnings about uninitialized\n\tmemory.  (#349382, David Baron)\n\n2006-08-14  Emmanuele Bassi  <ebassi@gnome.org>\n\n\t* gtk/gtkrecentchooser.c:\n\t(gtk_recent_chooser_add_filter),\n\t(gtk_recent_chooser_remove_filter),\n\t(gtk_recent_chooser_set_filter): Add a check on the\n\tfilter argument, instead of blindly passing it to\n\tunderlying implementation.\n\n\t* gtk/gtkrecentchoosermenu.c:\n\t(gtk_recent_chooser_menu_add_filter),\n\t(gtk_recent_chooser_menu_remove_filter),\n\t(gtk_recent_chooser_menu_list_filters): Implement\n\tthese GtkRecentChooser methods, by setting and\n\treturning the only GtkRecentFilter object supported\n\tby a GtkRecentChooserMenu. (#347856, reported by Rod\n\tButcher)\n\n2006-08-14  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkcombobox.c (gtk_combo_box_remove): Null the\n\tcell_view pointer if the internal cell view is removed. \n\t(#348828, Rolando Espinoza La Fuente)\n\n\t* gtk/gtkentry.c (gtk_entry_drag_data_received): Don't leak\n\tin the non-editable case.  (#350258, Colin Leroy)\n\n2006-08-10  Michael Emmel  <mike.emmel@gmail.com>\n\n\t* gdk/directfb/gdkdrawable-directfb.c\n\tRemove gdk_directfb_update_region and calls \n\t* gdk/directfb/gdkwindow-directfb.c\n\tCode cleanup \n\t* gdk/directfb/gdkgeometry-directfb.c\n\tFix scroll call to use region\n\n2006-08-10  Emmanuele Bassi  <ebassi@gnome.org>\n\n\t* gtk/gtkrecentchoosermenu.c:\n\t(gtk_recent_chooser_menu_finalize): Remove the idle\n\tsource in ::finalize...\n\t\n\t(idle_populate_func),\n\t(idle_populate_clean_up): ...and reset the idle source\n\tid at the end of the idle loop while we hold the GDK mutex\n\tlock. (#350605, reported by Wouter Bolsterlee, patch by\n\tChris Wilson)\n\n2006-08-10  Michael Natterer  <mitch@imendio.com>\n\n\t* gdk/quartz/gdkwindow-quartz.c\n\t(gdk_window_maximize)\n\t(gdk_window_unmaximize)\n\t(gdk_window_iconify)\n\t(gdk_window_deiconify): don't try to set the state of unmapped\n\twindows, call gdk_synthesize_window_state() instead. Also added\n\tautorelease pools back, seems they are needed after all.\n\n\t* gdk/quartz/gdkwindow-quartz.c (show_window_internal): maximize\n\tand iconify windows here if the state says so.\n\n2006-08-09  Michael Natterer  <mitch@imendio.com>\n\n\t* gdk/quartz/gdkwindow-quartz.c (gdk_window_set_geometry_hints):\n\timplement MIN_SIZE, MAX_SIZE and RESIZE_INC.\n\n2006-08-08  Richard Hult  <richard@imendio.com>\n\n\t* gtk/gtkdnd-quartz.c: Implement get/set_track_motion.\n\t\n2006-08-08  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkevents-quartz.c: (poll_func): Whitespace cleanup.\t \n\t(synthesize_crossing_events): Add comments and prevent a crash.\n\n2006-08-08  Michael Natterer  <mitch@imendio.com>\n\n\t* gdk/quartz/gdkwindow-quartz.c\n\t(gdk_window_maximize)\n\t(gdk_window_unmaximize): implement.\n\n\t(gdk_window_iconify)\n\t(gdk_window_deiconify): remove unneeded autorelease pools.\n\n2006-08-08  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/GdkQuartzView.c: Just expose the minimal region \n\tinstead of the whole rect.\n\n\t* gdk/quartz/gdkwindow-quartz.c:\n\t(gdk_window_quartz_process_all_updates), (gdk_window_update_idle),\n\t(gdk_window_impl_quartz_invalidate_maybe_recurse),\n\t(gdk_window_impl_quartz_process_updates),\n\t(_gdk_windowing_window_destroy): Rework the expose handling so that\n\tit works like the X11 backend, using an idle with the right\n\tpriority instead of relying on quartz to do it.\n\t(gdk_window_set_type_hint): Use tornoff instead of submenu as the\n\tdocumentation (and Mitch) suggests.\n\n2006-08-08  Michael Natterer  <mitch@imendio.com>\n\n\t* gdk/quartz/gdkdrawable-quartz.c: some whitespace and indentation\n\tcleanup.\n\n\t(gdk_quartz_draw_rectangle)\n\t(gdk_quartz_draw_arc)\n\t(gdk_quartz_draw_polygon)\n\t(gdk_quartz_draw_points): for pixel-prefect drawing, stroked\n\tcoordinates need to go through pixel centers, while filled ones\n\tneed to go along pixel boundaries. Moved +0.5 adjusting to the\n\tif(!filled) branches and added/removed some adjustments where they\n\twere wrong.\n\n2006-08-07  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkdrawable-quartz.c (gdk_quartz_draw_points): Don't\n\tget and release the context for each point, just once, speeds up\n\tdrawing many points a lot.\n\n2006-08-07  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkdnd-quartz.c (gtk_drag_dest_unset): need to disconnect\n\tfrom signals connected in gtk_drag_dest_set() here.\n\n\t* gtk/gtkdnd-quartz.c (gtk_drag_dest_set): call gtk_drag_dest_unset()\n\tinstead of disconnecting the old signal connections here.\n\n2006-08-07  Emmanuele Bassi  <ebassi@gnome.org>\n\n\t* gtk/gtkrecentchooserdefault.c:\n\t(_gtk_recent_chooser_default_init): Show non existing\n\tresources by default.\n\t(recent_meta_data_func): Do not mark non existing\n\tresources as insensitive.\n\n\t* gtk/gtkrecentchoosermenu.c:\n\t(gtk_recent_chooser_menu_init): Show non existing\n\tresources by default.\n\t(gtk_recent_chooser_menu_create_item): Do not mark\n\tnon existing resources as insensitive.\n\n2006-08-06  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/x11/gdkkeys-x11.c (gdk_keymap_x11_finalize): Free\n\tall XKB data. (#349997, Chris Wilson)\n\n\t* gtk/gtkstyle.c (option_menu_get_props): Only get the\n\tindicator-size and indicator-spacing style properties\n\tfor GtkOptionMenu.  (#349859, Benjamin Otte)\n\n\t* gtk/gtktreeview.c (gtk_tree_view_set_grid_lines) \n\t(gtk_tree_view_set_enable_tree_lines): Be more careful\n\twhen creating gcs, also emit change notification.\n\t(gtk_tree_view_unrealize): Free the gcs here.  (#349834,\n\tChris Wilson)\n\n\t* gtk/gtkcalendar.c (calendar_start_spinning, calendar_timer): \n\tUse G_PRIORITY_DEFAULT_IDLE for the month/year-change timer,\n\tso that the caller will have a chance to redraw/resize itself\n\tbetween every change.  (#348824, Federico Mena Quintero, patch\n\tby Michael Meeks)\n\t\n\t* gtk/gtkfontbutton.c (gtk_font_button_update_font_info): \n\tAdd a missing initialization.  (#348787, Leonardo Boshell)\n\t\n\t* configure.in: Use $PKG_CONFIG consistently.  (#348740,\n\tJeremy Lain\u00e9)\n\t\n\t* gtk/gtknotebook.c (gtk_notebook_drag_motion): Don't allow\n\tdragging a notebook tab to one of its children.  (#348626,\n\tBenjamin Otte)\n\t(gtk_notebook_drag_motion): Don't accept drops on \n\tarrows.  (#348706, Benjamin Otte)\n\n\t* tests/testnotebookdnd.c: Test more corner cases.\n\n2006-08-05  Matthias Clasen  <mclasen@redhat.com>\n\n\t* docs/tutorial/gtk-tut.sgml: Remove outdated lists of\n\tauthors and maintainers.  (#348538, Owen Taylor)\n\n\t* gtk/gtkentry.c:\n\t* gtk/gtkentryprivate.h: Export gtk_entry_reset_im_context\n\tprivately.\n\t\n\t* gtk/gtkentrycompletion.c (gtk_entry_completion_action_button_press): \n\t* gtk/gtkentry.c (gtk_entry_completion_key_press): Reset the\n\tentry's im context here.  (#348478, Nguyen Thai Ngoc Duy, Christian\n\tPersch) \n\n\t* gtk/gtktextview.c (gtk_text_view_style_set): Create new\n\tPangoContexts and set them on the layout, to catch changes in\n\tfont options.  (#348278, Behdad Esfahbod)\n\n\t* gtk/gtkstyle.c (gtk_default_draw_flat_box): Add a \n\tmissing initialization.  (#349863, Benjamin Berg)\n\n\t* gtk/gtktreeviewcolumn.c (gtk_tree_view_column_cell_layout_reorder): \n\tProtect against tree_view being NULL.  (#348652, Patrick K. O'Brian,\n\tChris Wilson)\n\n2006-08-03  Emmanuele Bassi  <ebassi@gnome.org>\n\n\t* gtk/gtkrecentchoosermenu.c:\n\t(set_recent_managet), (gtk_recent_chooser_menu_populate),\n\t(idle_populate_func), (idle_populate_clean_up),\n\t(manager_changed_cb): Lazily populate the menu when creating\n\tit and after the manager emits the \"changed\" signal; this\n\tfixes the initial bad placing of the GtkRecentChooserMenu\n\twidget when its set as the menu of a GtkMenuToolButton.\n\n\t(gtk_recent_chooser_menu_map),\n\t(gtk_recent_chooser_menu_class_init): Remove the ::map method\n\toverride, since it's not needed anymore.\n\n2006-08-03  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkrc.c (gtk_rc_parse_assignment): reset scanner config to\n\tdefault values while checking if an expression(foobar) follows,\n\tbecause if no expression follows the scanner's \"next token\" must\n\tbe usable for the caller of this function (fixes bug #349552).\n\n2006-08-03  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkstyle.c: removed the \"widget &&\" part from\n\t\"widget && GTK_IS_FOO (widget)\" checks.\n\n2006-07-13  Michael Emmel  <mike.emmel@gmail.com>\n\n\t* gdk/directfb/gdkwindow-directfb.c\n\tRemove unused call to GetPosition \n\n2006-07-31  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkdrawable-quartz.c: (gdk_quartz_draw_drawable):\n\t* gdk/quartz/gdkwindow-quartz.c:\n\t(gdk_window_impl_quartz_begin_paint_region): Patch from Erik van\n\tPienbroek to implement drawing bg_pixmaps (#348145).\n\n2006-07-29  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkcolor-quartz.c (gdk_colormap_alloc_colors): Always\n\tset success to TRUE.\n\t(gdk_color_change): Implement.\n\n\t* gdk/quartz/GdkQuartzWindow.c\n\t([GdkQuartzWindow -canBecomeKeyWindow]): Add comment.\n\n\t* gdk/quartz/gdkevents-quartz.c (gdk_screen_get_setting): Make the\n\tdefault font a bit smaller until we have made this get the system\n\tsetting.\n\n\t* gdk/quartz/gdkwindow-quartz.c (gdk_window_set_type_hint): Enable\n\tshadows for the right window types.\n\n\t* gdk/quartz/gdkprivate-quartz.h:\n\t* gdk/quartz/gdkgc-quartz.c:\n\t* gdk/quartz/gdkdrawable-quartz.c:\n\t* gdk/quartz/gdkcolor-quartz.c: Expose the CGContext functions,\n\tupdate callers.\n\n\t* gdk/quartz/gdkmain-quartz.c: (_gdk_windowing_init): No need to\n\tget the current process ID, use the right constant instead.\n\n2006-07-28  Emmanuele Bassi  <ebassi@gnome.org>\n\n\t* gtk/gtkrecentmanager.c (gtk_recent_manager_init): Add the\n\ttimeout for polling the file; change the default polling\n\tdelta to 2000 msec.\n\n2006-07-27  Michael Natterer  <mitch@imendio.com>\n\n\t* gdk/x11/gdkwindow-x11.c (gdk_window_get_type_hint): cast the\n\treturn value of XGetWindowProperty() correctly so we don't return\n\tgarbage type hints. Pointed out by Tommi Komulainen, patch taken\n\tfrom https://maemo.org/bugzilla/show_bug.cgi?id=724\n\n2006-07-27  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtksettings.c (gtk_settings_finalize): Move the\n\t_gtk_rc_context_destroy call to the right spot.  (#348096,\n\tChris Wilson)\n\n2006-07-24  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkevents-quartz.c (gdk_screen_get_setting): Implement\n\tgetting the double click threshold.\n\n2006-07-24  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkwindow-quartz.c (gdk_window_set_type_hint): Set the\n\twindow level depending on the type hint.\n\n\t* gdk/quartz/gdkevents-quartz.c (gdk_keyboard_grab,\n\tpointer_ungrab_internal): Only break the grab if the new window is\n\ta different one.\n\t(gdk_event_translate): Catch the case where the entire app loses \n\tfocus and break any grabs. Only do implicit grabs when the event\n\tmask has both press and release.\n\n\t* gdk/quartz/gdkkeys-quartz.c (translate_keysym):\n\t* gdk/quartz/gdkselection-quartz.c:\n\n        * gdk/quartz/GdkQuartzWindow.c\n\t([GdkQuartzWindow -windowDidResignKey:]): Use this to update the\n\tfocus window instead of resignMain, fixes the case where other apps\n\tuses focus follows mouse (like the terminal can).\n\n2006-07-23  Matthias Clasen  <mclasen@redhat.com>\n\n\t* configure.in: Bump version\n\t\n\t* === Released 2.10.1 ===\n\n\t*  NEWS: Updates\n\n\t* gtk/gtkstyle.c (gtk_default_draw_box_gap): Draw\n\tgaps on the left/right properly.  (#348134, Benjamin Otte)\n\n\t* gtk/gtkprintsettings.c (gtk_print_settings_get_page_ranges):\n\tFix a memory leak.  (#348424, Carlos Garcia Campos)\n\n2006-07-21  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkrc.h:\n\t* gtk/gtkrc.c (_gtk_rc_context_destroy): New function to\n\tdestroy an rc context.\n\n\t* gtk/gtksettings.c (gtk_settings_finalize): Destroy the rc context.\n\t(gtk_settings_get_for_screen): Unref the settings when the screen\n\tgoes away. (#348096, Chris Wilson)\n\n2006-07-21  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkgc-quartz.c: (gdk_quartz_gc_get_values),\n\t(gdk_quartz_gc_set_values), (_gdk_windowing_gc_copy),\n\t(gdk_gc_get_screen): Implement.\n\n\t* gdk/quartz/gdkwindow-quartz.c: (gdk_window_set_back_pixmap):\n\tImplement.\n\n2006-07-21  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkimcontextsimple.c (gtk_im_context_simple_get_preedit_string): \n\t0-terminate outbuf in all cases.  (#348227, Nguyen Th\u00e1i Ngoc Duy)\n\n2006-07-21  Michael Natterer  <mitch@imendio.com>\n\n\tEnable symbolic colors and color expressions in style\n\tproperties. Fixes bug #346751.\n\n\t* gtk/gtkrc.c (rc_parse_token_or_compound): add GtkRcStyle\n\tparameter and replace symbolic colors by color constants.\n\n\t(gtk_rc_parse_assignment): likewise. Also support parsing of\n\texpressions of the form identifier(compound).\n\n\t(gtk_rc_parse_style): pass the GtkRcStyle to\n\tgtk_rc_parse_assignment().\n\n\t(gtk_rc_parse_statement): pass NULL since we don't have a\n\tGtkRcStyle here.\n\n2006-07-21  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkentrycompletion.c (gtk_entry_completion_finalize):\n\tremove accidential 2nd parameter to g_object_unref().\n\n2006-07-21  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkentrycompletion.c (gtk_entry_completion_finalize):\n\tDon't leak the action_view.  (#348120, Chris Wilson)\n\n\t* gtk/gtknotebook.c (gtk_notebook_paint): Improve drawing\n\tof tabs while reordering.  (#348115, Benjamin Otte)\n\n\t* gtk/gtkiconview.c (gtk_icon_view_destroy): Don't\n\tleak the adjustments.  (#348094, Chris Wilson)\n\n\t* gtk/gtknotebook.c (gtk_notebook_stop_reorder): Unset\n\tthe during_reorder flag.  (#348049, Sven Herzberg, patch\n\tby Benjamin Otte)\n\n2006-07-20  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkmenu.c (gtk_menu_destroy): Just remove the scroll\n\ttimeout here, don't access settings.  (#348095, Chris Wilson)\n\n\t* gtk/gtktextlayout.c (gtk_text_layout_set_contexts): Fix\n\tmessed up refcounting.  (#348090, Chris Wilson)\n\n\t* gtk/gtkicontheme.h: \n\t* gtk/gtkicontheme.c (_gtk_icon_theme_ensure_builtin_cache): \n\tExport this privately.\n\n\t* gtk/gtkiconfactory.c (render_fallback_image): And call it\n\there to initialize the builtin cache before using it.  (#348063,\n\tDiego Petten\u00f2)\n\n2006-07-19  Federico Mena Quintero  <federico@novell.com>\n\n\t* tests/autotestfilechooser.c (test_black_box): Argh, initialize\n\t\"passed\"!\n\t(set_filename_timeout_cb): Renamed from timeout_cb().\n\t(test_confirm_overwrite): New function, test confirmation before\n\toverwriting a file in SAVE mode.\n\n2006-07-20  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkrecentchoosermenu.c (gtk_recent_chooser_menu_finalize):\n\tfix typo to make it compile again.\n\n2006-07-20  Emmanuele Bassi  <ebassi@gnome.org>\n\n\t* gtk/gtkrecentchoosermenu.c:\n\t(gtk_recent_chooser_menu_finalize): Correctly chain up the\n\tfinalization vfunc. (#348089, Chris Wilson)\n\n2006-07-20  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkevents-quartz.c: (generate_grab_broken_event):\n\tAppend the event to the queue instead of using gdk_event_put.\n\t(_gdk_quartz_get_mouse_window, find_current_keyboard_window):\n\tHandle grabs.\n\t(get_event_mask_from_ns_event, create_focus_event)\n\t(convert_window_coordinates_to_root, find_window_for_event)\n\t(gdk_event_translate): Improve readability (style changes).\n\t(gdk_flush, gdk_display_sync, gdk_display_flush)\n\t(gdk_event_send_client_message_for_display),\n\t(gdk_screen_broadcast_client_message): Remove FIXMEs.\t\n\t(gdk_screen_get_setting): Reindent.\n\tAlso move find_child_window_by_point to gdkwindow-quartz.c.\n\t\n\t* gdk/quartz/gdkwindow-quartz.c:\n\t(find_child_window_by_point_helper),\n\t(_gdk_quartz_find_child_window_by_point): Move here from \n\tgdkevents-quartz.c\n\t(_gdk_windowing_window_get_pointer): Handle destroyed windows and\n\timlement the return value.\n\t(_gdk_windowing_window_at_pointer): Implement.\n\n2006-07-19  Richard Hult  <richard@imendio.com>\n\n\t* gtk/gtkdnd-quartz.c (register_types): Reindent.\n\t\n\t* gtk/gtkclipboard-quartz.c (gtk_clipboard_set_contents): Add\n\tautorelease pool.\n\n2006-07-19  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/GdkQuartzWindow.c\n\t([GdkQuartzWindow -windowDidResignMain:]):\n\t* gdk/quartz/gdkevents-quartz.c (_gdk_quartz_update_focus_window):\n\tListen to windowDidResignMain notifications and properly update the\n\tfocus window when windows are unfocused.\n\n2006-07-19  Kristian Rietveld  <kris@imendio.com>\n\n\t* gtk/gtkcellrenderertext.c (gtk_cell_renderer_text_init),\n\t(gtk_cell_renderer_text_[gs]et_property), (get_layout): add\n\talign_set field to keep track whether the align property was\n\tset by the user, if not we will use the alignment by looking\n\tat the direction of the widget. (#157439)\n\n2006-07-19  Matthias Clasen  <mclasen@redhat.com>\n\n\t* modules/printbackends/file/gtkprintbackendfile.c \n\t(file_printer_get_settings_from_options): Check if option\n\tis NULL before using it.  (#348014, Christian Persch)\n\n\t* gdk/x11/gdkx.h (gdk_font_lookup_for_display): When looking\n\tup a font XID, add the XID_FONT_BIT.  (#348001)\n\n2006-07-19  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/GdkQuartzView.c ([GdkQuartzView -drawRect:]):\n\t* gdk/quartz/gdkpixmap-quartz.c (gdk_pixmap_new): Remove unused\n\tvariables to fix compiler warnings.\n\n2006-07-19  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkwindow-quartz.c (gdk_window_impl_quartz_init)\n\t(gdk_window_set_type_hint, gdk_window_get_type_hint):\n\t* gdk/quartz/GdkQuartzWindow.c\n\t([GdkQuartzWindow -canBecomeMainWindow])\n\t([GdkQuartzWindow -canBecomeKeyWindow]): Implement type hints and\n\tuse them to determine which windows should be allowed to become\n\tmain and key windows.\n\n2006-07-19  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkwindow-quartz.c:\n\t(_gdk_windowing_window_get_pointer): Get the position correctly\n\tfor the root window. Fixes bug #347976, patch by Dave Vasilevsky.\n\n2006-07-18  Matthias Clasen  <mclasen@redhat.com>\n\n\t* NEWS: Updates\n\n\t* gtk/gtkdnd.c: Make the ipc widgets GtkWindows instead\n\tof GtkInvisibles, and put them in the same window group\n\tas the drag source, to avoid interactions between DND\n\tand window groups.  (#347277, Michael Wu, analysis by\n\tOwen Taylor)\n\n2006-07-18  John (J5) Palmieri  <johnp@redhat.com>\n\n\t* modules/printbackends/cups/gtkprintbackendcups.c:\n\tMake bits from my last commit are conditionally compiled\n\tonly if cups 1.2 is available. \n\n2006-07-18  John (J5) Palmieri  <johnp@redhat.com>\n\n\t* gtk/gtkprinteroption.h:\n\t* gtk/gtkprinteroptionwidget.c:\n\t* modules/printbackends/cups/gtkprintbackendcups.c:\n\tadd GTK_PRINTER_OPTION_TYPE_PICKONE_PASSWORD,\n\tGTK_PRINTER_OPTION_TYPE_PICKONE_PASSCODE,\n\tGTK_PRINTER_OPTION_TYPE_PICKONE_REAL,\n\tGTK_PRINTER_OPTION_TYPE_PICKONE_INT,\n\tand GTK_PRINTER_OPTION_TYPE_PICKONE_STRING options to support a subset\n\tof the new CUPS 1.2 custom options spec\n\n2006-07-18  Federico Mena Quintero  <federico@novell.com>\n\n\tFix https://bugzilla.novell.com/show_bug.cgi?id=184875 - make the\n\tlocation entry in Save mode preserve the stuff from\n\tset_filename(); it was overwriting it with $cwd.\n\n\tThis is the same fix for\n\thttp://bugzilla.gnome.org/show_bug.cgi?id=347066\n\n\t* tests/autotestfilechooser.c: (test_black_box): Added black-box\n\ttest for set_filename() and set_current_name().\n\n\t* gtk/gtkfilechooser.c (gtk_file_chooser_get_type): Cast to\n\tGClassInitFunc in the call to g_type_register_static_simple(), to\n\tavoid a compiler warning.\n\n\t* gtk/gtkfilechooserprivate.h (struct _GtkFileChooserDefault):\n\tAdded a browse_files_last_selected_name field.  We'll copy the\n\tlogic from gtkfilesel.c to see when to clear the location entry.\n\t(struct _GtkFileChooserDefault): Removed the\n\tprocessing_pending_selections field.\n\n\t* gtk/gtkfilechooserdefault.c (gtk_file_chooser_default_finalize):\n\tFree impl->browse_files_last_selected_name.\n\t(pending_select_paths_process): Don't use\n\timpl->processing_pending_selections.\n\t(update_chooser_entry): Keep track of the name that was last\n\tselected in the file list.  We use this to know when to clear the\n\tlocation entry.  The logic is similar to that of\n\tgtkfilesel.c:gtk_file_selection_file_changed().  This also lets us\n\tget rid of the processing_pending_selections flag.\n\t(update_chooser_entry): Clear the entry if we didn't have a\n\tselection before.\n\t(location_switch_to_filename_entry): Do not set $cwd as the\n\tcontents of the location entry here...\n\t(location_popup_handler): ... but do it here instead, only as the\n\tresult of the user asking to turn on the location entry.\n\t(gtk_file_chooser_default_get_paths): If the location entry is\n\tempty, do the fallback of seeing if it is sensible to say that\n\t$cwd is the selected path.\n\t(gtk_file_chooser_default_update_current_folder): Don't set the\n\ttext of the location entry; this is no longer needed with the\n\tfixes above.\n\t(shortcuts_activate_iter): Clear the location entry when\n\tactivating a shortcut if we are not in SAVE mode.  This keeps the\n\tcontents of the location entry consistent even when switching\n\tfolders via the shortcuts.\n\n2006-07-18  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkrange.c: remember the sensitivity of the steppers in\n\tGtkRangeLayout, update it in gtk_range_calc_layout() and check for\n\tchanges in layout_changed(), so adjustment changes that leave the\n\tslider position unchanged are still able to update the steppers'\n\tsensitivity. Fixes bug #347902.\n\n2006-07-18  Kristian Rietveld  <kris@imendio.com>\n\n\t* gtk/gtkcellrenderertext.c (gtk_cell_renderer_text_start_editing):\n\toooops.\n\n2006-07-18  Kristian Rietveld  <kris@imendio.com>\n\n\tFix for #335012, reported by Matteo Nastasi.\n\n\t* gtk/gtktreeview.c (gtk_tree_view_real_start_editing): if the\n\trequested space of the editable is smaller than the cell area,\n\tput it up above the middle of the cell area.\n\n\t* gtk/gtkcellrenderertext.c (gtk_cell_renderer_text_start_editing):\n\tconfigure the inner border to cover the cell area if the \n\tentry requisition is smaller than the cell_area.\n\n2006-07-18  Kristian Rietveld  <kris@imendio.com>\n\n\tAnother fix for #164884.\n\n\t* gtk/gtktreeprivate.h: add in_grab field.\n\n\t* gtk/gtktreeview.c (gtk_tree_view_button_press): only save press\n\tto possibly begin a drag when there's no grab pending,\n\t(gtk_tree_view_grab_notify): toggle in_grab field.\n\n2006-07-18  Kristian Rietveld  <kris@imendio.com>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_realize): use MAX\n\tpriv->width, alloc.width when allocating the bin_window,\n\t(gtk_tree_view_bin_expose): don't overrun bin_window when drawing\n\tthe flat box.\n\n2006-07-17  Richard Hult  <richard@imendio.com>\n\n\t* gtk/gtkdnd-quartz.c: (gtk_drag_begin_internal): Set an empty\n\tNSImage if there is none, covers the cases where applications try\n\tto set a pixmap which is not supported by the quartz backend.\n\n2006-07-17  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkevents-quartz.c: (create_key_event):\n\t* gdk/quartz/gdkkeys-quartz.c: (_gdk_quartz_key_event_type),\n\t(_gdk_quartz_key_is_modifier):\n\t* gdk/quartz/gdkprivate-quartz.h: Fill in string, length and\n\tis_modifier for key events. Map some more keys into gdk keyvals.\n\n2006-07-17  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtknotebook.c (gtk_notebook_stop_reorder): Don't undo\n\treordering if we haven't been reordering.  (#346836, Ed Catmur)\n\n2006-07-17  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkkeys-quartz.c: Add escape to the list of special\n\tkeys, to get the escape key working.\n\n2006-07-17  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkdisplay-quartz.c (gdk_display_open): Initialize\n\tGdkInput.\n\t\n2006-07-17  Kristian Rietveld  <kris@imendio.com>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_build_tree): check if the iter\n\tstill has children after running the test-expand-row func,\n\t(gtk_tree_view_real_expand_row): ditto. (#302127, Billy Biggs).\n\n2006-07-17  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkcalendar.c (calendar_timer): use 5 * gtk-timeout-repeat,\n\tjust as many other widgets. Makes the calendar arrow buttons\n\tusable for quick month/year skipping (#142582).\n\n2006-07-17  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkwindow-quartz.c:\n\t(_gdk_windowing_window_destroy_foreign): Fix comment.\n\t(gdk_window_set_title): Surround by release pool macros.\n\t(gdk_window_get_type_hint): Fix return value.\n\t(gdk_window_get_frame_extents): Implement.\n\t(gdk_window_iconify): Use the release pool macros.\n\t(gdk_window_deiconify): Likewise. \n\t(_gdk_windowing_get_pointer): Implement.\n\t(gdk_window_get_deskrelative_origin, gdk_window_get_root_origin): \n\tImplement.\n\n\t* gdk/quartz/gdkevents-quartz.c (create_crossing_event) \n\t(create_scroll_event, convert_window_coordinates_to_root): \n\tSet coordinates and root coordinates for crossing and scroll \n\tevents.\n\n\t* gdk/quartz/gdkcursor-quartz.c (gdk_cursor_new_for_display): \n\tMap some more cursors.\n\n2006-07-17  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdkwindow.c (gdk_window_get_pointer): Add some more\n\tdetail to the docs.  (#311399, Nikos Kouremenos)\n\n\t* gtk/gtkentrycompletion.c (gtk_entry_completion_set_match_func): \n\t* gtk/gtkcomboboxentry.c (gtk_combo_box_entry_set_text_column): \n\tFix typos in the docs.\n\n2006-07-16  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkassistant.c: Some small documentation\n\tfixups.  (#347711, Guillaume Cottenceau)\n\n\t* gtk/gtkfilechooserdefault.c (browse_widgets_create): Mark\n\tthe text of the location label as translatable.  \n\n\t* gtk/gtkprintjob.c (gtk_print_job_send): Fix a typo in \n\tthe docs.  (#347211, Kouhei Sutou)   \n\n\t* configure.in: Make the test for the sync extension\n\tmore robust.  (#347315, Tommi Komulainen)\n\n2006-07-13  Michael Emmel  <mike.emmel@gmail.com>\n\n\t* gdk/directfb/gdkdrawable-directfb.c\n\tRemove +1 in fill and draw rect this may be wrong.\n\tCommented out update calls left for reference the should not be needed.\n\tComment out subsurface for cairo remove when proved its not needed\n\t* gdk/directfb/gdkkeys-directfb.c\n\tAllow multiple calls and return if initalized\n\t* gdk/directfb/gdkmain-directfb.c\n\tMake sure string is malloced since its freed by apps\n\t* gdk/directfb/gdkprivate-directfb.c\n\tAdded back pointer to window for paintable impl\n\t* gdk/directfb/gdkvisual-directfb.c\n\tFix for Bug 346733 make sure visual list is populated\n\t* gdk/directfb/gdkwindow-directfb.c\n\tFinally removed uneeded pixmap buffering now implements GdkPainter\n\n2006-07-11  Emmanuele Bassi  <ebassi@gnome.org>\n\n\t* gtk/gtkrecentchooser.c (gtk_recent_chooser_set_show_numbers),\n\t(gtk_recent_chooser_get_show_numbers): Check if the chooser\n\timplementation supports the \"show-number\" property and use a\n\tmeaningful warning in case it doesn't; tell developers not to\n\tuse these functions.\n\n2006-07-10  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkaction.c:\n\t* gtk/gtkiconview.c:\n\t* gtk/gtkprintbackend.c:\n\t* gtk/gtkprintoperation-unix.c:\n\t* gtk/gtkscrolledwindow.c:\n\t* gtk/gtktoolbar.c: Fix some typos with inline property\n\tdocs.  (#347065, John Finlay)\n\n\t* gtk/gtkfilechooserbutton.c: Fix some memory handling\n\tissues.  (#347043, Chris Wilson)\n\n2006-07-10  Emmanuele Bassi  <ebassi@gnome.org>\n\n\t* gtk/gtkrecentchooserdefault.c (scan_for_uri_cb): Do not\n\tleak the URI returned by the model; select the row when\n\tcalling gtk_recent_chooser_set_current_uri(). (patch by\n\tTorsten Schoenfeld)\n\n2006-07-10  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkpapersize.c (gtk_paper_size_is_equal): Fix a \n\ttypo in the docs.  (#347041, Kouhei Sutou)\n\n\t* gtk/gtkprintcontext.c (gtk_print_context_get_height): Fix\n\ta typo in the docs.  (#347032, Kouhei Sutou)\n\n\t* gtk/gtkassistant.c (gtk_assistant_focus): Don't assume\n\tthat priv->current_page is non-NULL.  (#347048, Guillaume \n\tCottenceau)\n\n\t* gtk/gtk.symbols: Add some missing deprecation guards.\n\n\t* gdk/directfb/gdkwindow-directfb.c: Don't confuse gtk-doc.\n\n2006-07-10  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkpixmap-quartz.c: (gdk_bitmap_create_from_data): \n\tAccount for alignment when reading xbm data. (#346721, patch\n\tby Dave Vasilevsky)\n\n2006-07-09  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkgeometry-quartz.c:\n\t* gdk/quartz/gdkmain-quartz.c:\n\t* gdk/quartz/gdkpixmap-quartz.c:\n\t* gdk/quartz/gdkwindow-quartz.c:\n\t* gtk/gtkclipboard-quartz.c: Implement some more stubs for pygtk, \n\tbug #346713.\n\n2006-07-09  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkwindow-quartz.c (gdk_window_new): Release the pool\n\tin all cases.\n\t(move_resize_window_internal): Surround by alloc/release pool.\n\tPatch from Brian Tarricone, fixes bug #347018.\n\n2006-07-08  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkfilechooserbutton.c (update_label_and_image): Don't\n\tleak an empty list.  (#346970, Chris Wilson)\n\n2006-07-08  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gdk/gdkpango.c (layout_iter_get_line_clip_region),\n\t(gdk_pango_layout_line_get_clip_region),\n\t(gdk_pango_layout_get_clip_region): Fix quadratic implementation of\n\tgdk_pango_layout_get_clip_region into a linear one. (#337910, patch\n\tby Priit Laes)\n\n2006-07-07  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkevents-quartz.c: Generate a grab broken event when\n\tappropriate. Fixes bug #346603, patch from Dave Vasilevsky.\n\t\n\t* gdk/quartz/gdkevents-quartz.c:\n\t* gdk/quartz/gdkkeys-quartz.c:\n\t* gdk/quartz/gdkprivate-quartz.c: Another patch from Dave Vasilevsky,\n\tfixes bug #346605. Makes modifier key events being sent properly.\n\n2006-07-07  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkrc.c\n\t* gtk/gtksettings.c: fix canonicalization of property names which\n\twas broken after recent constant string cleanup.\n\n2006-07-07  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkicontheme.c: Small memory savings.\n\n2006-07-06  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkfilechooserbutton.c: Get the display name\n\tfor the home directory.  (#346498, Dennis Cranston,\n\tpatch by Andreas K\u00f6hler)\n\n2006-07-06  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* configure.in: Drop required Pango version down to 1.12.0. (#346597)\n\n2006-07-06  John (J5) Palmieri  <johnp@redhat.com>\n\n\t* modules/printbackends/cups/gtkprintbackendcups.c: \n\t(cups_request_printer_list_cb): Get the name of the first printer\n\tin a class to use when requesting a PPD\n\t(cups_request_ppd_cb, cups_request_ppd): Fix the parameters of\n\tthe \"details-acquired\" signal emittion\n\t(cups_request_ppd): get the ppd name from the cups printer\n\n\t* modules/printbackends/cups/gtkprintercups.c (gtk_printer_cups_get_ppd_name):\n\tNew method for getting the name of the ppd we should request\n\n2006-07-06  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkrc.c: added a bunch of utility functions to copy\n\ticon_factories and color_hashes between GtkRcStyles and make sure\n\tthat newly created, duplicated and merged styles have access to\n\tall icon_factories and color_hashes they need. Fixes bug #346668.\n\n2006-07-06  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/*.c: Improve the -/_ consistency in signal and\n\tproperty names, reducing the amount of near-duplicate strings.\n\n2006-07-05  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_set_enable_tree_lines): Don't\n\tleak dash_list.  (#346639, Christian Persch)\n\n\t* gtk/gtkwindow.c (gtk_window_unmap, gtk_window_set_keep_above) \n\t(gtk_window_set_keep_below): Fix some assignments involving\n\tbooleans.  (#346467, Christian Persch)\n\n2006-07-03  Matthias Clasen <mclasen@redhat.com>\n\n\t* gtk/gtkgamma.c: Use serialized pixbufs instead of xpms.\n\t\n2006-07-03  Runa Bhattacharjee <runabh@gmail.com>\n\n\t* configure.in: Added Bengali India (bn_IN) to ALL_LINGUAS.\n\n2006-06-26  Michael Emmel  <mike.emmel@gmail.com>\n\t\n\t* gdk/directfb/gdkdirectfb.h: changed ifdef to compile with api introduced\n\tin directfb 0.9.25 \n\t* gdk/directfb/gdkwindow-directfb.c: changed ifdef to 0.9.25 \n\n2006-07-03  Matthias Clasen  <mclasen@redhat.com>\n\n\t* configure.in: Bump version\n\n2006-07-02  Matthias Clasen  <mclasen@redhat.com>\n\t\n\t* === Released 2.10.0 ===\n\n\t* gtk/gtkmenubar.c (window_key_press_handler): Treat\n\t\"\" like NULL when parsing the menu-bar-accel setting.\t\n\t* gtk/gtkmenu.c (gtk_menu_key_press): Here too.  \n\t(#346420, Yevgen Muntyan)\n\n\t* configure.in: Require cairo 1.2 and GLib 2.12,\n\tset version to 2.10\n\n2006-06-30  Matthias Clasen  <mclasen@redhat.com>\n\t\n\t* gtk/gtknotebook.c (gtk_notebook_tab_space): Remove\n\tredundant assignments to page, which may cause NULL\n\tdereferences.  (#346334, Dave Vasilevsky)\n\n\t* demos/gtk-demo/editable_cells.c: Portability fix.\n\t(#346375, Thomas Klausner)\n\n\t* NEWS, README.in, INSTALL.in: Updates\n\n\t* gtk/gtktreemodelsort.c (gtk_tree_model_sort_finalize):\n\tDon't leak default_sort_data.  (#346341, Christian Weiske)\n\n\t* gtk/Makefile.am: Make sure all win32-specific printing\n\tsources are distributed.  (#346312, Erik van Pienbroek)\n\t\n\t* gtk/gtkprinter.c (gtk_enumerate_printers): Always call the\n\tdestroy notify.  (#346027, Christian Persch)\n\n\t* gtk/gtkprintsettings.c (gtk_print_settings_get_page_ranges):\n\tDocumentation updates.\n\n\t* gtk/gtkprintunixdialog.c (gtk_print_unix_dialog_set_settings):\n\tDon't leak the ranges.  (#346237, Carolyn MacLeod)\n\n\t* gtk/gtkprintjob.[hc]: Add a PREVIEW capability to hide\n\tthe preview button.  (#346113, Christian Persch)\n\n\t* gtk/gtkprintunixdialog.c (update_dialog_from_capabilities):\n\tHide the preview button depending on the capability.\n\n\t* gtk/gtkprintoperation-unix.c: Set the PREVIEW capability.\n\n2006-06-29  Bill Skaggs  <weskaggs@primate.ucdavis.edu>\n\n\t* gtk/gtkprogress.h: revert last change by Matthias -- it broke the\n\tbuild of gtkprogressbar.\n\n2006-06-29  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/x11/gdkevents-x11.c (gdk_event_translate): Update the \n\tsize of the drawable for the root window when the screen size \n\tchanges.  (#346102, Sven Herzberg)\n\n2006-06-29  Matthias Clasen  <mclasen@redhat.com>\n\n\t* NEWS: Updates\n\n\t* gtk/gtkprintoperation.c: Clarify docs for the allow-async\n\tproperty.  (#346108, Christian Persch)\n\n2006-06-28  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprinter.c: \n\t* gtk/gtkprintunixdialog.c: \n\t* gtk/gtkprintoperationpreview.c: \n\t* gtk/gtkprintcontext.c (gtk_print_context_set_cairo_context): \n\t* gtk/gtklabel.c (gtk_label_set_line_wrap_mode): \n\t* gtk/gtkentry.c (gtk_entry_new): \t\n\t* gtk/gtkprintoperation.c (gtk_print_operation_set_custom_tab_label): \n\t* gtk/gtkclipboard.c (gtk_clipboard_wait_for_rich_text): Documentation\n\tadditions and fixes.\n\n\t* gtk/gtkaspectframe.h:\n\t* gtk/gtkaboutdialog.c:\n\t* gtk/gtkcalendar.c:\n\t* gtk/gtkinputdialog.c: \n\t* gtk/gtk.symbols: Remove unnecessary includes.\n\t\n\t* gtk/gtkprogress.[hc]: \n\t* gtk/gtkitemfactory.[hc]: Don't unnecessarily use GTK_COMPILATION,\n\tremove unnecessary includes.\n\n\t* gdk/x11/gdkdisplay-x11.c (gdk_display_open): Only select the\n\tXKB event details we actually care about.  (#346079, Ryan Lortie)\n\n2006-06-27  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_set_model): cancel the\n\texpand collapse timeout when unsetting the model (Fixes #327164,\n\treported by Daichi Kawahata).\n\n2006-06-26  Michael Emmel  <mike.emmel@gmail.com>\n\t\n\t* gdk/directfb/gdkdirectfb.h: added ifdef to compile with directfb 0.9.24 \n\t* gdk/directfb/gdkwindow-directfb.c: ifdef depend on directfb cvs \n\n2006-06-26  Kristian Rietveld  <kris@gtk.org>\n\n\tMake the insert and set functions somewhat more convenient.\n\t(#343841, David Necas).\n\n\t* gtk/gtkliststore.c (gtk_list_store_insert_with_values): allow\n\ta NULL iter,\n\t(gtk_list_store_insert_with_valuesv): likewise.\n\n\t* gtk/gtktreestore.c (gtk_tree_store_insert_with_values): ditto,\n\t(gtk_tree_store_insert_with_valuesv): likewise.\n\n2006-06-26  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtktextview.c (gtk_text_view_size_allocate): revert \"keep\n\tcursor visible when size changes\" since it breaks things (#344874).\n\n2006-06-26  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkcombobox.c (gtk_cell_view_menu_item_new): Avoid\n\ta refcounting leak in the python bindings.  (#344876, Phil Dumont)\n\n2006-06-25  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprinter.c (gtk_enumerate_printers): Make\n\tthis work when the enumeration is stopped early.  (#344074,\n\tFelipe Heidrich)\n\n2006-06-24  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkcombobox.c: Update the height as well\n\twhen changing fonts.  (#321393, Billy Biggs)\n`\n2006-06-23  Christian Rose  <menthos@menthos.com>\n\n\t* configure.in: Added \"ur\" to ALL_LINGUAS.\n\n2006-06-22  Matthias Clasen  <mclasen@redhat.com>\n\n\tFix #345663, reported by Kazuki Iwamoto\n\t\n\t* gtk/gtkaction.c: Include gtkiconfactory.h\n\n\t* gtk/gtkactiongroup.c: Include gtkicontheme.h\n\n2006-06-22  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtktextview.c (gtk_text_view_size_allocate): keep the cursor\n\tvisible when the size changes. Fixes bug #344874.\n\n2006-06-22  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkpintjob.h: Add a note about updating the registration.\n\t* gtk/gtkprintjob.c (gtk_print_capabilites_get_type): Add missing\n\tcapabilitites. \n\n\t* modules/printbackends/cups/gtkprintbackendcups.c: Remove\n\tan unused variable and make it compile with Cups 1.1.  (#345644,\n\tJoseph Sacco)\n\n2006-06-21  Matthias Clasen  <mclasen@redhat.com>\n\n\t* configure.in: Bump version\n\t\n\t* === Released 2.9.4 ===\n\n\t* modules/printbackends/file/gtkprintbackendfile.c: \n\tApply a patch by Christian Persch to support PostScript and PDF\n\toutput.\n\n\t* gtk/gtkprinteroptionwidget.c (radio_changed_cb): Don't free\n\tthe value.\n\n2006-06-21  Matthias Clasen  <mclasen@redhat.com>\n\n\tApply a patch by John Palmieri to use buffered io using\n\tGIOChannels, clean up error handling and support Cups 1.2\n\tapi in the printing code.\n\n\t* acconfig.h:\n\t* configure.in: Detect Cups 1.2\n\n\t* gtk/gtkdebug.h:\n\t* gtk/gtkmain.c: Add a printing debug key.\n\n\t* gtk/gtkprintbackend.[hc]: Remove the GError parameter from\n\tgtk_print_backend_print_stream, and take a  GIOChannel instead\n\tof an fd.\n\n\t* gtk/gtkprinter-private.h:\n\t* gtk/gtkprinter.c: Replace the fd parameter of \n\t_gtk_printer_create_cairo_surface by a GIOChannel.\n\n\t* gtk/gtkprintjob.[hc]: Remove the GError parameter from\n\tgtk_print_job_send and make it return void.\n\n\t* gtk/gtkprintoperation-unix.c:\n\t* gtk/gtkprintjob.c: Adjust callers, add some debugging support.\n\n\t* modules/printbackends/Makefile.am: Fix DIST_SUBDIRS.\n\n\t* modules/printbackends/cups/Makefile.am:\n\t* modules/printbackends/lpr/Makefile.am: Add debug CFLAGS.\n\t\n\t* modules/printbackends/cups/gtkcupsutils.[hc]: \n\t* modules/printbackends/cups/gtkprintbackendcups.c:\n\t* modules/printbackends/file/gtkprintbackendfile.c:\n\t* modules/printbackends/lpr/gtkprintbackendfile.c: Adapt to\n\tthe GIOChannel and GError changes, add debug output\n\t\n2006-06-21  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprinter.c (gtk_enumerate_printers): Remove an \n\tunused variable.\n\n\t* NEWS: Updates\n\n\t* gtk/gtktreeview.c (gtk_tree_view_class_init): Fix the registration\n\tof the grid-lines property  (#345456, Murray Cumming) \n\t\n2006-06-21  Kristian Rietveld  <kris@imendio.com>\n\n\tAllocate space for the grid lines when they are enabled.\n\n\t* gtk/gtktreeview.c (gtk_tree_view_bin_expose): make sure the cell\n\tarea does not overlap with the grid lines, also draw the line for\n\t\"the next cell\" in the last loop iteration, make sure the cursor falls\n\tin between the grid lines,\n\t(validate_row): request extra space for the grid lines.\n\n2006-06-21  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprintbackend.h: \n\t* gtk/gtkprintbackend.c (gtk_print_backend_print_stream): Add an\n\tGError parameter.\n\n\t* modules/printbackends/file/gtkprintbackendfile.c \n\t(gtk_print_backend_file_print_stream): \n\t* modules/printbackends/lpr/gtkprintbackendlpr.c \n\t(gtk_print_backend_lpr_print_stream): \n\t* modules/printbackends/cups/gtkprintbackendcups.c \n\t(gtk_print_backend_cups_print_stream): \n\t* gtk/gtkprintjob.c (gtk_print_job_send): Update all callers and\n\timplementations.\n\n\t* modules/printbackends/cups/gtkprintbackendcups.c: Remove the\n\tGError parameter from cups_request_execute(), and various other\n\tcleanups.\n\n2006-06-20  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprintjob.c (gtk_print_job_class_init): Make \n\ttrack-print-status a property.\n\n2006-06-20  Murray Cumming  <murrayc@murrayc.com>\n\n\t* gtk/gtkprintoperation.c: (gtk_print_operation_class_init): \n\tCorrectly register the done signal - it sends an enum, not an int.\n\n2006-06-20  Christian Persch  <chpe@cvs.gnome.org>\n\t\n\t* configure.in\n\t* gtk/Makefile.am\n\t* modules/printbackends/Makefile.am\n\tA modules/printbackends/file/.cvsignore\n\tA modules/printbackends/file/Makefile.am\n\tA modules/printbackends/file/gtkprintbackendfile.c\n\tA modules/printbackends/file/gtkprintbackendfile.h\n\tR modules/printbackends/pdf/*:\n\tRename \"pdf\" backend to \"file\" backend. Step 2 from bug #339592.\n\n2006-06-20  Christian Persch  <chpe@cvs.gnome.org>\n\n\t* gtk/gtkprinteroptionwidget.c: (filesave_changed_cb),\n\t(alternative_set), (construct_widgets): Convert input to filename\n\tencoding and construct an URI from that.\n\t* gtk/gtkprintsettings.h: Add OUTPUT_FILE_FORMAT and OUTPUT_URI keys.\n\t* modules/printbackends/pdf/gtkprintbackendpdf.c: Use those defines.\n\tStep 1 from bug #339592.\n\n2006-06-20  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprintjob.c (gtk_print_job_set_source_file): Add to docs.\n\n\tFix handling of stock items without icons in action-based\n\tui.  (#342458, Callum McKenzie)\n\t\n\t* gtk/gtkactiongroup.c (gtk_action_group_add_actions_full): Set\n\tthe stock id even if there is no icon for it.\n\n\t* gtk/gtkaction.c (connect_proxy): \n\t* gtk/gtktoolbutton.c (gtk_tool_button_construct_contents): Only\n\tconstruct a stock icon if the stock item has an icon.\n\n2006-06-20  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_set_column_drag_info): Better \n\tfix.\n\n\t* gtk/gtk.symbols: \n\t* gtk/gtkprintsettings.h: \n\t* gtk/gtkprintsettings.c: Remove unused print-to-file setting.\n\n2006-06-20  Carlos Garnacho  <carlosg@gnome.org>\n\n\t* gtk/gtknotebook.c (gtk_notebook_stop_reorder): unset the pressed\n\tbutton here.\n\t(gtk_notebook_grab_notify): stop reorder when the widget becomes\n\tshadowed. Fixes bug #335873\n\n2006-06-18  Christian Persch  <chpe@cvs.gnome.org>\n\n\t* gtk/gtkdialog.c: (gtk_dialog_class_init): Set default action area\n\tspacing to HIG-compliant 6px. Bug #345106, follow-up from bug #163850.\n\n2006-06-20  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkiconview.c (gtk_icon_view_enable_model_drag_dest): \n\tSmall doc fix.  (#345176, Claudio Saavedra)\n\n\t* gdk/x11/gdkwindow-x11.c (gdk_window_set_functions): Update\n\tthe docs. (#345194, Yevgen Muntyan)\n\n2006-06-19  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_set_grid_lines): Don't leak\n\tdash_list.\n\t(gtk_tree_view_set_column_drag_info): Don't crash if the \n\tcolumn_drop_func says always no.  (#344850, Christian Weiske)\n\t\n\tMake transparent tray icons work.  (#320034, based on a \n\tpatch by Dan Winship)\n\t\n\t* gtk/gtktrayicon-x11.c (gtk_tray_icon_init): Make trayicons\n\tapp-paintable and non-double buffered. \n\n\t* gtk/gtkrc.c (_gtk_rc_init): Give tray icons a parent-relative\n\tbackground in the default style.\n\n2006-06-19  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/updateiconcache.c: Marks strings for translation.  (#314278,\n\tClaudio Saavedra)\n\n\t* gtk/gtkentrycompletion.c (gtk_entry_completion_compute_prefix): Don't\n\tcall g_str_has_prefix on a NULL strung.  (#344897, Tommi Komulainen)\n\n\t* gtk/gtkfilechooserdefault.c: \n\tAvoid a near-duplicate string and add some\n\ttranslator comments.  (#345320, #345321, Hendrik Richter)\n\n2006-06-19  Federico Mena Quintero  <federico@novell.com>\n\n\t* gtk/gtkfilechooser.c (gtk_file_chooser_get_current_folder)\n\t(gtk_file_chooser_get_current_folder_uri): Clarify the use of\n\tthese functions, to avoid the case where a chooser is in\n\tSELECT_FOLDER mode and people mistakenly use _get_current_folder()\n\tto get the selection:  they should use _get_filename() instead.\n\n2006-06-19  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtklabel.[ch]:\n\tAdd gtk_label_set_line_wrap_mode, gtk_label_get_line_wrap_mode, and\n\ta wrap-mode property that lets you set the PangoWrapMode.\n\n2006-06-19  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtk.symbols: Add new functions\n\n\t* gtk/gtkprinter.h: \n\t* gtk/gtkprinter.c (gtk_enumerate_printers): New function\n\tto list all printers (#344074, Felipe Heidrich)\n\n\t* gtk/gtkprinter-private.h: \n\t* gtk/gtkprinter.c (_gtk_printer_get_options) \n\n\t* gtk/gtkprintbackend.h: Add a capabilities argument to the \n\tprinter_get_options method and to the _gtk_printer_get_options\n\tfunction\n\t\n\t* modules/printbackends/lpr/gtkprintbackendlpr.c \n\t(lpr_printer_get_options): \n\t* modules/printbackends/pdf/gtkprintbackendpdf.c \n\t(pdf_printer_get_options): \n\t* modules/printbackends/cups/gtkprintbackendcups.c \n\t(cups_printer_get_options): \n\t* gtk/gtkprintunixdialog.c (selected_printer_changed): Adjust\n\tcallers and implementations.\n\n\t* gtk/gtkprintjob.h: Add a GENERATE_PS capability. \n\t* gtk/gtkprintunixdialog.c (is_printer_active): And use it here.\n\n2006-06-18  Matthias Clasen  <mclasen@redhat.com>\n\n\t* tests/testnouiprint.c (main): Don't open a display connection.\n\n\t* gtk/gtkprintbackend.c (gtk_print_backend_load_modules): Make\n\tthis work without a display connection.  (339702, Alexander Larsson)\n\n\t* gtk/gtkwindow.c (gtk_window_move): Small doc addition. \n\t(#345275, Behdad Esfahbod)\n\n2006-06-17  Matthias Clasen  <mclasen@redhat.com>\n\n\t* modules/printbackends/pdf/gtkprintbackendpdf.c:\n\t* modules/printbackends/lpr/gtkprintbackendlpr.c: Fix a typo:\n\ts/Extention/Extension/. \n\t\n\t* gtk/gtkprintunixdialog.c: Clean up the handling of \n\tprinter-specific options. There is just one extension point on the\n\tmain tab now, and all options in the GtkPrintDialogExtension\n\tgroup are put there. \n\n\t* gtk/gtkprinteroption.h: \n\t* gtk/gtkprinteroption.c: Add GTK_PRINTER_OPTION_TYPE_ALTERNATIVE\n\twhich is semantically the same as PICKONE, but is intended to \n\tshow all options all the time.\n\t\n\t* gtk/gtkprinteroptionwidget.c: Implement ALTERNATIVE as radio\n\tgroup.\n\n2006-06-16  Matthias Clasen  <mclasen@redhat.com>\n\n\t* modules/printbackends/cups/gtkprintbackendcups.c:\n\t* modules/printbackends/lpr/gtkprintbackendlpr.c: Use a stock icon\n\tfor printers.\n\n\t* gtk/gtkprintunixdialog.c (add_option_to_table): Don't grow\n\tadditional columns.\n\n\t* gtk/gtkprintbackend.h: Add a GtkPrintSettings parameter to the\n\tprinter_create_cairo_surface method.\n\t\n\t* modules/printbackends/pdf/gtkprintbackendpdf.c: \n\t* modules/printbackends/cups/gtkprintbackendcups.c: \n\t* modules/printbackends/lpr/gtkprintbackendlpr.c: \n\t* gtk/gtkprinter.c (_gtk_printer_create_cairo_surface): \n\t* gtk/gtkprinter-private.h: \n\t* gtk/gtkprintjob.c (gtk_print_job_get_surface): Adapt all users.\n\n\t* gtk/gtkentrycompletion.c (gtk_entry_completion_finalize): Don't\n\tleak match data.  (#345107,  Christian Weiske)\n\n\t* gtk/gtkprintunixdialog.c (populate_dialog): Move the conflict\n\tlabel out of the button box.  (#339456, Christian Persch)\n\n\t* gtk/gtksizegroup.c (compute_dimension): Ignore unmapped widgets\n\twhen ignore_hidden is TRUE.  (#344707, Christian Persch)\n\n\t* configure.in: Require cvs glib.\n\n\t* gtk/gtkprintoperation-unix.c: \n\t(_gtk_print_operation_platform_backend_create_preview_surface): \n\tDon't use a temporary directory for preview files, since it\n\tis not clear who cleans it up. Instead, use g_mkstemp() directly\n\tto create a temp pdf file, and make the preview app responsible\n\tfor cleaning it up.\n\n\t* gtk/gtkprintbackend.c: Move the registration of the \n\tgtk-print-preview-command setting from gtkprintbackend.c to \n\tgtkprintoperation-unix.c, to make sure it is registered before\n\tthe first use. Also, document the two settings.\n\n\t* tests/print-editor.c: Add a \"Preview\" menu item.\n\n\t* gtk/gtkprintoperation-unix.c (handle_print_response): When starting\n\ta preview from the print dialog, set the action to PREVIEW.\n\n\t* gtk/gtkprintoperation.c: Cosmetic changes.\n\n2006-06-16 Matthias Clasens  <mclasen@redhat.com>\n\n\t* gtk/gtkprintoperation-unix.c: Mark the preview filename\n\tas translatable (#345093, Christian Persch)\n\nFri Jun 16 11:49:53 2006  Tim Janik  <timj@imendio.com>\n\n\t* fixed #337882 by applying patches from Tommi Komulainen:\n\n\t* gtk/gtkprogressbar.c:\n\t(gtk_progress_bar_paint_activity):\n\t(gtk_progress_bar_get_activity): Move activity bar offset and size\n\tcalculations to separate function.\n\t(gtk_progress_bar_paint_text): Allow caller to specify offset for the\n\tprelight part in addition to width.\n\t(gtk_progress_bar_paint): Paint the text also in activity mode, #337882.\n\n\t* gtk/gtkprogressbar.c: (gtk_progress_bar_paint_text): Paint the\n\tprelighted text on top of the normal rather than side by side, to\n\tsimplify painting text in activity mode.\n\n2006-06-16  Matthias Clasen  <mclasen@redhat.com>\n\n\t* modules/printbackends/cups/gtkprintbackendcups.c: Include\n\tgtkprinter-private.h  (#345038, Christian Persch)\n \n2006-06-15  Matthias Clasen  <mclasen@redhat.com>\n\n\t* modules/printbackends/pdf/gtkprintbackendpdf.c: Use the\n\tstock floppy icon.\n\n\t* gtk/gtkprintoperation-unix.c: Set the GENERATE_PDF capability\n\twhen creating a print dialog.  (noted by Yevgen Muntyan)\n\n2006-06-15  Carlos Garnacho  <carlosg@gnome.org>\n\n\t* gtk/gtknotebook.c (gtk_notebook_motion_notify): use\n\tgdk_window_get_pointer() to get pointer coordinates, but limit its\n\tcalls to a maximum of 45 times per second for not being too\n\tCPU/network abusive. stop drag operation if (event->state &\n\tGDK_BUTTON1_MASK) is FALSE to prevent tabs from \"adhering\" to the\n\tpointer. Fixes bug #341571\n\t(gtk_notebook_calculate_tabs_allocation), (gtk_notebook_button_press):\n\tget rid of the \"tab jumps to pointer\" sensation when beginning a drag\n\tby using the pointer offset in the tab when the drag begins as an\n\tanchor.\n\t(gtk_notebook_redraw_tabs_union): remove, it wasn't worth the little\n\tperformance gain and could draw artifacts under some circumstances.\n\t(gtk_notebook_drag_end): do not reparent the detached tab label until\n\tthe animation has ended.\n\n2006-06-15  Bastien Nocera  <hadess@hadess.net>\n\n\t* configure.in: Update the Cairo requirements (#345008)\n\n2006-06-15  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprintoperationpreview.c \n\t(gtk_print_operation_preview_base_init): Fix errors in the\n\tsignal definitions.  (#344891, Marko Anastasov)\n\n2006-06-14  Michael Emmel  <mike.emmel@gmail.com>\n\t\n\t* configure.in: updated mininum  dfb to 0.9.24\n\t* gdk/directfb/gdkdirectfb.h: added more directfb wrapper functions\n\t* gdk/directfb/gdkdrawable-directfb.c: wrapper functions and patch from \n\t Claudio Ciccani <klan@users.sf.net> to use a subsurface for cairo\n    * gdk/directfb/gdkvisual-directfb.c: changed initalization sequence\n    * gdk/directfb/gdkwindow-directfb.c: corrected reparent for toplevels\n    * gdk/directfb/gdkdisplay-directfb.c: changed initilization sequence\n\tto a more rational order\n\n2006-06-14  Federico Mena Quintero  <federico@novell.com>\n\n\t* perf/gtkwidgetprofiler.c (gtk_widget_profiler_profile_expose):\n\tNew function; it lets us time the expose sequence of a widget.\n\t(create_widget): New helper function.\n\t(map_widget): New helper function.\n\t(profile_boot): Use create_widget() instead of doing it by hand.\n\t(profile_map_expose): Use map_widget() instead of doing it by hand.\n\n\t* perf/main.c (main): Call gtk_widget_profiler_profile_expose() as well.\n\n2006-06-14  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkpagesetupunixdialog.c: Use GKeyFile for the custom\n\tfilename storage.  (#344867, Christian Persch)\n\n\t* gtk/gtkselection.c: Call init_atoms before using atoms\n\tin several functions.  (#344743, John Finlay)\n\n\t* gtk/gtktreeview.c (gtk_tree_view_set_search_position+_func):\n\tAllow NULL to reset to default.  (#344838, John Finlay)\n\n\t* gtk/gtkprintjob.h: Collect booleans into a bitfield\n\t(#344765, Christian Persch)\n\n2006-06-13  Matthias Clasen  <mclasen@redhat.com>\n\n\t* configure.in: Bump version\n\n2006-06-12  Matthias Clasen  <mclasen@redhat.com>\n\n\t* === Released 2.9.3 ===\n\n\t* NEWS: Updates\n\t\n\t* gtk/gtk.symbols: Add gtk_tree_view_grid_lines_get_type.\n\n\t* configure.in: Set interface age to 0\n\n2006-06-12  Kristian Rietveld  <kris@imendio.com>\n\n\tIntroduce grid and tree lines in GtkTreeView. (#106406,\n\tMartyn Russell).\n\n\t* gtk/gtktreeprivate.h: add new fields to GtkTreePrivate.\n\n\t* gtk/gtkenums.h: add GtkTreeViewGridLines.\n\n\t* gtk/gtktreeview.[ch] (gtk_tree_view_set_grid_lines),\n\t(gtk_tree_view_get_grid_lines),\n\t(gtk_tree_view_set_enable_tree_lines),\n\t(gtk_tree_view_get_enable_tree_lines): new API,\n\t(gtk_tree_view_class_init): new properties,\n\t(gtk_tree_view_init), (gtk_tree_view_{get,set}_property),\n\t(gtk_tree_view_realize), (gtk_tree_view_draw_grid_lines),\n\t(gtk_tree_view_bin_expose): implement.\n\n\t* gtk/gtk.symbols: update.\n\n2006-06-12  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprintunixdialog.c (is_printer_active): Use \n\tgtk_printer_accepts_ps here.\n\n\t* modules/printbackends/pdf/gtkprintbackendpdf.c (gtk_print_backend_pdf_init):\n\tMark the virtual \"Print to PDF\" printer as not accepting PS.\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtkprinter.h: \n\t* gtk/gtkprinter.c: Add two new properties accepts-pdf and\n\taccepts-ps (with getters) to allow learning supported formats.\n\n\t* gtk/gtkprintjob.h: Add a GTK_PRINT_CAPABILITY_GENERATE_PDF\n\tcapability.\n\t\n\t* gtk/gtkprintunixdialog.c: Use it here to hide \"Print to PDF\" \n\tfrom the printer list.  (#339592, Christian Persch)\n\t\n\t* gtk/gtkfilechooserdefault.c: Add support for pasting\n\tfilenames into the filechooser.  (#153212, Bastian Nocera)\n\n2006-06-12  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreemodelfilter.[ch]\n\t(gtk_tree_model_filter_convert_child_iter_to_iter),\n\t(gtk_tree_model_filter_convert_child_path_to_path): report status\n\tin return value instead of spewing assertions.  (#335729, Yevgen\n\tMuntyan).\n\n2006-06-12  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreemodelfilter.c (gtk_tree_model_filter_finalize): \n\tClean up user data.  (#344624, Christian Weiske)\n\n\t* NEWS: Updates\n\n\t* gtk/gtkprintjob.c:\n\t* gtk/gtkprintbackend.c: \n\t* gtk/gtkpagesetupunixdialog.c: \n\t* gtk/gtkprintunixdialog.c: Cosmetic cleanups.\n\n2006-06-11  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkassistant.c: Add an accessible implementation in\n\torder to make the buttons visible to a11y tools.  (pointed out\n\tby David Malcolm, #343945)\n\n\t* gtk/gtkprintoperation-win32.c: Store scale as a percentage.\n\t(#344560, Christian Persch)\n\n\t* gtk/gtkprogressbar.h: Add a dirty flag to GtkProgressBar.n/ \n\t* gtk/gtkprogressbar.c: Defer updating of the offscreen\n\tpixmap until expose.  (#344543, Chris Wilson)\n\n2006-06-11  Emmanuele Bassi  <ebassi@gnome.org>\n\n\t* gtk/gtkrecentchooserdefault.c\n\t(get_is_recent_filtered):\n\t* gtk/gtkrecentchoosermenu.c\n\t(get_is_recent_filtered):\n\tDo not leak the groups string vector. (#344607,\n\tJohn Finlay)\n\n2006-06-11  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk/gtkprintoperation-win32.c: Fix MSVC build problem. (#339739,\n\tKazuki Iwamoto)\n\n\t* gdk/win32/gdkproperty-win32.c (gdk_property_change): Convert \\n\n\tto \\r\\n also when storing CF_UNICODETEXT (UTF-16) in the\n\tClipboard. (#344496)\n\n2006-06-10  Matthias Clasen <mclasen@redhat.com>\n\n\t* gtk/gtkrecentchooserwidget.c \n\t(gtk_recent_chooser_widget_new_for_manager):\n\t* gtk/gtkrecentchoosermenu.c\n\t(gtk_recent_chooser_menu_new_for_manager): \n\tAllow NULL to mean the default manager.  (#344530, \n\tJohn Finlay)\n\n\t* gtk/gtkprintoperation-unix.c (page_setup_data_free):\n\tCheck if rdata->page_setup is set before unreffing it. \n\t(#344518, Christian Persch)\n\n\t* gtk/gtkprintoperation.h: Remove an extra comma.  (#344528, \n\tElijah Newren)\n\n\t* modules/printbackends/gtkprintbackendpdf.c \n\t(gtk_print_backend_pdf_print_stream): Use the passed in \n\tdestroy notify.  (#344513, Christian Persch)\n\n\t* configure.in: Require cairo 1.1.7\n\n\t* gtk/gtkprintoperation.c:\n\t* modules/printbackends/pdf/gtkprintbackendpdf.c: Use\n\tcairo_pdf_surface_set_dpi by cairo_surface_set_fallback_resolution.\n\t(#344512, Elijah Newren)\n\n\t* gdk-2.0-uninstalled.pc.in: Make compiling against uninstalled\n\tgdk work.  (#344386, Masatake Yamamoto)\n\n\t* gtk/gtkprintoperation.c: Register create_custom_widget as \n\tan object-returning signal.  (#344505, Marko Anastasov, patch\n\tby Christian Persch)\n\n\t* gtk/gtkmarshalers.list: Add the right marshaller.\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtkprintjob.[hc]: Register GtkPrintCapabilities as a\n\tflags type.  (#344504, Marko Anastasov)\n\n2006-06-09  Benjamin Berg  <benjamin@sipsolutions.net>\n\n\t* gtk/gtkmenuitem.c: (get_offsets): Take GtkMenu::horizontal-padding\n\tinto account when placing submenus (#344290)\n\n2006-06-09  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkrange.c: added new style properties \"trough-side-details\"\n\tand \"draw-trough-under-steppers\" and fixed the \"stepper-spacing\"\n\tstyle property. Fixes bugs #342339 and #342249.\n\n\t\"draw-trough-under-steppers\", when set to FALSE, starts trough\n\tdrawing next to the steppers instead of drawing the trough \"below\"\n\t(around) the steppers. If \"stepper-spacing\" is set to any value\n\tlarger than zero, \"draw-trough-under-steppers\" is set to FALSE\n\tautomatically to avoid rendering an area that looks clickable but\n\tisn't.\n\n\t(gtk_range_calc_layout): honor draw-trough-under-steppers.\n\tDon't reserve stepper-spacing on sides of the range that don't\n\thave steppers.\n\n\t(gtk_range_expose): changed drawing accordingly. Implement\n\t\"trough-side-details\" which enables drawing of the upper and lower\n\tparts of the trough with different details. This is useful for\n\ttheme engines which want to draw these parts differently.\n\n\t(coord_to_value): correctly take all rendering options into\n\taccount. stepper-spacing > 0 caused jumping and otherwise\n\tstrangely behaving ranges before.\n\n\t(other functions): changed accordingly.\n\n2006-06-09  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkdrawable-win32.c (_gdk_win32_drawable_release_dc):\n\tCall ReleaseDC() on DCs acquired with GetDC() (for windows), and\n\tDeleteDC() on DCs acquired with CreateCompatibleDC() (for\n\tbitmaps). According to MSDN, this is the correct thing to do, even\n\tif always using DeleteDC() seems to have worked fine in\n\tpractice. (#337491, Chris Wilson)\n\n2006-06-08  Matthias Clasen  <mclasen@redhat.com>\n\n\t* tests/testprint.c: Update for api changes.\n\n\t* gtk/gtkprintoperation.c: Fix some copy-and-paste errors,\n\tand rename the pdf-target property to export-filename.\n\n\t* gtk/gtkfilechooserdefault.c: Turn off profiling code.\n\n\t* tests/print-editor.c: Update for api changes.\n\n\t* gtk/gtk.h: Include gtkprintoperationpreview.h\n\n\t* gtk/gtkprintoperationpreview.c (gtk_print_operation_preview_is_selected): \n\tUse g_return_val_if_fail (#344288, Kazuki Iwamoto)\n\n\t* gtk/gtkprintbackend.h: Don't include gtkprinter-private.h here.\n\n\t* gtk/gtkprintunixdialog.c: \n\t* gtk/gtkprintoperation-unix.c: \n\t* gtk/gtkprintjob.c: \n\t* gtk/gtkprintbackend.c: Instead include it here.\n\n\t* gtk/gtk.symbols: \n\t* gtk/gtkprintoperation.h: \n\t* gtk/gtkprintoperation.c: Rename pdf_target to export_filename.\n\n2006-06-08  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprintoperation.h (GtkPrintOperationResult): Get\n\trid of GTK_PRINT_OPERATION_RESULT_PREVIEW.\n\t\n\t* gtk/gtkprintoperation-unix.c: \n\t* gtk/gtkprintoperation.c: Update all users.\n\n2006-06-08  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkevents-win32.c (gdk_event_translate):\n\t[WM_WINDOWPOSCHANGED] Replace identical code as in\n\thandle_configure_event() with call to that function.\n\t[WM_SIZING] Fix implementation of aspect ratio hints. (#344244)\n\tThe hints are for the geometry of the client area, not of the\n\twindow including decorations. Improve resizing behaviour in the\n\tpresence of aspect hints, to be more in line with typical X window\n\tmanagers.\n\n2006-06-08  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktoolbutton.c (gtk_tool_button_style_set): Give\n\tGtkToolButton the same treatment.\n\n\t* gtk/gtkbutton.c (gtk_button_style_set): Don't call\n\tconstruct_child here, since some apps make assumptions \n\tabout the lifecycle of the constructed label.  \n\n2006-06-08  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtkprintoperation-unix.c (finish_print):\n\tFix up unix fallout from previous change.\n\n2006-06-08  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtkprintoperation-win32.c:\n\tUpdate windows to build with new APIs and first cut\n\tat preview work.\n\t\n\t* gtk/gtkprintoperation-private.h:\n\t* gtk/gtkprintoperation-unix.c:\n\t* gtk/gtkprintoperation.c\n\tVarious updates needed when making the preview work on win32.\n\n\t* tests/print-editor.c:\n\tPrint, don't preview.\n\n2006-06-07  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkentry.c (popup_targets_received): Make Delete\n\tmenuitem insensitive if entry is not editable.  (#344232, \n\tMilosz Derezynski)\n\n\t* gtk/gtkprintoperation.c: Add some docs. \n\n\t* gtk/gtk.symbols: Add gtk_print_operation_set_allow_async.\n\n\t* gtk/gtkprintoperation.h: Remove gtk_print_operation_run_async.\n\n\t* tests/testnotebookdnd.c: Update callers.\n\n\t* gtk/gtknotebook.h:\n\t* gtk/gtknotebook.c (gtk_notebook_set_window_creation_hook):\n\tAdd a destroy notify for the callback data.  (#344209, \n\tMurray Cumming)\n\n2006-06-07  J\u00fcrg Billeter  <j@bitron.ch>\n\n\t* gtk/Makefile.am: Fix building gtkbuiltincache.h without system GTK+.\n\n2006-06-07  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtkprintoperation-private.h:\n\t* gtk/gtkprintoperation-unix.c:\n\t* gtk/gtkprintoperation.[ch]:\n\tClean up APIs:\n\tMake async a setting instead of separate calls.\n\tCombine settings like show_dialog, show_preview and pdf_target into\n\tan action enum that you pass to gtk_print_dialog_run().\n\t\n\t* tests/print-editor.c:\n\t* tests/testnouiprint.c:\n\t* tests/testprint.c:\n\t* demos/gtk-demo/printing.c:\n\tUpdate to new APIs\n\n2006-06-07  Bastien Nocera  <hadess@hadess.net>\n\n\t* configure.in: Update the ATK requirements (#344148)\n\n2006-06-07  Matthias Clasen  <mclasen@redhat.com>\n\n\t* modules/printbackends/cups/gtkprintercups.c \n\t(gtk_printer_cups_finalize):  Fix a C99ism.\n\t(#344123, Jens Ganseuer)\n\n2006-06-06  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gdk/gdkpango.c (gdk_pango_layout_line_get_clip_region): Correct\n\trounding of rect members.  Improved docs.  (#337603)\n\n2006-06-06  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkicontheme.c: Small optimization\n\n2006-06-05  Matthias Clasen  <mclasen@redhat.com>\n\n\t* configure.in: Bump version\n\n\t* === Released 2.9.2 ===\n\n\t* configure.in: Set interface age to 0.\n\n\t* NEWS: Updates\n\n\t* gtk/gtkprintoperationpreview.c: Include gtkalias.h\n\n\t* gtk/gtk.symbols: Add some forgotten new functions.\n\n2006-06-04  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtknotebook.c (gtk_notebook_calculate_shown_tabs):\n\t(gtk_notebook_calc_tabs): Fix borderline cases in tab\n\tvisibility calculation.  (#168105, Carlos Garnacho Parro)\n\n\t* gdk/x11/gdkfont-x11.c (_gdk_font_destroy): Remove the right\n\tXID from the xid table.  (#341327, Sampo Savolainen, Tim Janik)\n\n2006-06-04  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gtk/gtkprintoperationpreview.h: Add missing G_END_DECLS (#343838)\n\n2006-06-03  Richard Hult  <richard@imendio.com>                                 \n\n\t* gdk/quartz/Makefile.am:                                               \n\t* gdk/quartz/gdkspawn-quartz.c: Add spawn functions, copied from the\n\twin32 backend.\n\n2006-06-02  Matthias Clasen  <mclasen@redhat.com>\n\t\n\t* gtk/gtkprintoperation-private.h:\n\t* gtk/gtkprintoperation.h:\n\t* gtk/gtkprintoperation.c: Add a show-preview property. \n\n\t* gtk/gtkprintoperation-unix.c: Implement it here.\n\n\t* gtk/gtkprintoperation-unix.c: Cleanups\n\n2006-06-02  Kristian Rietveld  <kris@imendio.com>\n\n\tRubber banding for GtkTreeView, #80127.  Uses same method as\n\tGtkIconView.\n\n\t* gtk/gtktreeview.c (gtk_tree_view_class_init),\n\t(gtk_tree_view_init), (gtk_tree_view_get_property),\n\t(gtk_tree_view_set_property), (gtk_tree_view_set_rubber_banding),\n\t(gtk_tree_view_get_rubber_banding): add property,\n\t(gtk_tree_view_button_press): start rubber banding if enabled and\n\tpress is on a non-selected node,\n\t(gtk_tree_view_button_release): stop rubber banding,\n\t(gtk_tree_view_motion_bin_window), (scrool_row_timeout): enable/update\n\tthe rubber band,\n\t(gtk_tree_view_bin_expose): draw rubber band if active,\n\t(gtk_tree_view_stop_rubberband),\n\t(gtk_tree_view_update_rubber_band_selection_range),\n\t(gtk_tree_view_update_rubber_band_selection),\n\t(gtk_tree_view_update_rubber_band),\n\t(gtk_tree_view_paint_rubber_band): new functions.\n\n\t* gtk/gtktreeview.h: add new set/get function for rubber banding\n\tproperty.\n\n\t* gtk/gtktreeprivate.h: add a bunch of new private fields.\n\n2006-06-02  Kristian Rietveld  <kris@imendio.com>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_leave_notify): revert fix of\n\t#164884 because it's not a problem in gtk+ but in applications and\n\tit breaks starting drags from the edge of a row.\n\n2006-06-02  Kristian Rietveld  <kris@imendio.com>\n\n\tSeparate sensitive/selectable properties.\n\n\t* gtk/gtktreeselection.c (tree_column_is_sensitive): remove,\n\t(_gtk_tree_selection_row_is_selectable): remove checks to see if at\n\tleast one column is sensitive,\n\t(gtk_tree_selection_real_select_node): remove code which enables\n\tinsensitive rows to always be unselected.\n\n\t* gtk/gtktreeview.c (gtk_tree_view_row_changed): remove code\n\tthat unselects a node if it just became insensitive.\n\n\t* gtk/gtkcombobox.c (gtkcombo_box_list_select_func): new function,\n\tbased on the at least one column sensitive check from\n\t_gtk_tree_selection_row_is_selectable(),\n\t(gtk_combo_box_list_setup): set selection function on tree selection.\n\n2006-06-02  Kristian Rietveld  <kris@imendio.com>\n\n\t* gtk/gtktreemodelfilter.c\n\t(gtk_tree_model_filter_convert_child_path_to_path): need to use\n\tgtk_tree_model_filter_get_iter_full() since the path returned\n\tby gtk_real_tree_model_filter_convert_child_path_to_path() includes\n\tinvisible nodes.\n\n2006-06-02  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkstatusicon.c (gtk_status_icon_get_geometry): Allow\n\tto return partial information.  (#343625, Christian Persch)\n\n\t* gtk/gtkwindow.c (gtk_window_key_release_event): Chain up\n\tto key_release, not to key_press.  (#343677, Tommi Komulainen)\n\n2006-06-02  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/Makefile.am:\n\tAdd gtkprintoperationpreview.[ch]\n\tSet default preview command. Hardcoded for now.\n\t\n\t* gtk/gtkmarshalers.list:\n\tAdd BOOLEAN:OBJECT,OBJECT,OBJECT\n\t\n\t* gtk/gtkprintbackend.c:\n\tAdd preview command property.\n\t\n\t* gtk/gtkprintcontext.[ch]:\n\tMake less dependent on PrintOperation for output settings\n\tExternally set cairo_t and dpi. Resettable.\n\tCreate fontmap without metrics hinting (so that print preview\n\ttext layout doesn't depend on zoom level).\n\t\n\t* gtk/gtkprintoperation-private.h:\n\t* gtk/gtkprintoperation-unix.c: \n\t* gtk/gtkprintoperation.[ch]:\n\tInitial work on print preview API and default implementation\n\tusing an external preview app.\n\t\n\t* gtk/gtkprintoperation-win32.c:\n\tSome needed updates. Not done, needs more work.\n\t\n\t* gtk/gtkprintoperationpreview.[ch]:\n\tNew interface used in print preview api.\n\t\n\t* gtk/gtkprintunixdialog.c:\n\tAdd print preview dialog.\n\t\n\t* tests/print-editor.c:\n\tTest using an custom print preview widget.\n\n2006-06-02  Emmanuele Bassi  <ebassi@gnome.org>\n\n\t* gtk/gtkrecentmanager.c\n\t(gtk_recent_info_get_application_info): Fix a typo (spotted by\n\tPaolo Borelli and coverity).\n\n2006-06-01  Matthias Clasen  <mclasen@redhat.com>\n\t\n\t* tests/testnotebookdnd.c: Small tweaks to test more things.\n\n\t* gtk/gtktoolbutton.c (gtk_tool_button_class_init): Add\n\tan icon-spacing style property for the same purpose.\n\n\t* gtk/gtkbutton.c (gtk_button_class_init):  Add an image-spacing\n\tstyle property that allows to adjust the spacing between image\n\tand label in button.  (#320431, James Moger)\n\n\t* gtk/gtkprintoperation-private.h: \n\t* gtk/gtkprintoperation.c: \n\t* gtk/gtkprintoperation-unix.c: Move the \n\tPrintPagesData.wait flag to GtkPrintOperationPrivate.is_sync.\n\tAlso use a recursive mainloop instead of manually looping.\n\t\n\t* gtk/gtkprintoperation.c: Add some examples to the docs.\n\n\t* gtk/gtkprintbackend.c (gtk_print_backend_class_init): \n\tIntern signal names.\n\n\t* gtk/gtkprintunixdialog.c: \n\t* gtk/gtkprintoperation-unix.c: Use canonical signal names.\n\n2006-05-31  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkpagesetupunixdialog.c: Add docs, cleanup some\n\tformatting.\n\n\t* gtk/gtkprintoperation.c (print_pages_idle): Don't\n\ttreat manual_scale like a percentage, its a factor.\n\n\t* gtk/gtktreeview.c (gtk_tree_view_class_init): Document\n\tsignals.  (#302556, Stefan Kost)\n\n2006-05-31  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtk.symbols:\n\t* demos/gtk-demo/printing.c:\n\t* tests/print-editor.c:\n\t* tests/testnouiprint.c:\n\t* tests/testprint.c:\n\t* tests/testprintfileoperation.c:\n\tFurther updates from the GtkPrintContext functions rename.\n\t\n\t* modules/printbackends/cups/gtkcupsutils.c:\n\tAlways set requesting-user-name when doing cups requests.\n\n2006-05-31  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtkpagesetupunixdialog.c:\n\tRemove request_details_tag with g_signal_handler_disconnect,\n\tnot g_source_remove. (#343475)\n\n2006-05-31  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprintcontext.h: \n\t* gtk/gtkprintcontext.c: \n\t* gtk/gtkprintoperation.c: \n\t* gtk/gtkprintoperation-unix.c: Change some function names to be \n\tlonger and better. \n\tgtk_print_context_get_cairo -> gtk_print_context_get_cairo_context\n\tgtk_print_context_get_fontmap -> gtk_print_context_get_pango_fontmap\n\tgtk_print_context_create_context -> gtk_print_context_create_pango_context\n\tgtk_print_context_create_layout -> gtk_print_context_create_pango_layout\n\tUpdate all callers.\n\n\t* gtk/gtkpagesetupunixdialog.c: Don't run the custom page\n\tsize dialog.  (#340444, Christian Persch)\n\n\t* demos/gtk-demo/main.c (main): Display comments in friendly\n\tDodgerBlue instead of scary red.  (#343444, Carol Spears)\n\n\t* gtk/gtkfontbutton.c: \n\t* gtk/gtkcolorbutton.c: Clarify the docs of the color-set and\n\tfont-set signals.  (#343438, Olexiy Avramchenko)\n\n2006-05-30  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkmain.c (gtk_grab_notify_foreach): Don't skip internal\n\tchildren when emitting grab-notify.  (#343425, Markku Vire)\n\n\t* gdk/gdkpixmap.c: \n\t* gdk/gdkwindow.c: Don't use G_DEFINE_TYPE, since the instance\n\tstruct name does not match the type name.  (#343453, Ed Catmur)\n\n\t* gtk/gtk.symbols: \n\t* gtk/gtkbutton.h: \n\t* gtk/gtkbutton.c: Add a GtkButton::image-position property\n\twith getter and setter, to allow constructing buttons with\n\tthe image stacked on top of the label.  (#342930, Johan Dahlin)\n\n2006-05-30  Johan Dahlin  <jdahlin@async.com.br>\n\n   * gtk/gtk.symbols:\n   * gtk/gtkbutton.c: (gtk_button_class_init), (gtk_button_init),\n   (gtk_button_set_property), (gtk_button_get_property),\n   (gtk_button_construct_child), (gtk_button_set_image_spacing),\n   (gtk_button_get_image_spacing):\n   * gtk/gtkbutton.h:\n   * gtk/gtktoolbutton.c: (gtk_tool_button_class_init),\n   (gtk_tool_button_construct_contents),\n   (gtk_tool_button_set_property), (gtk_tool_button_get_property),\n   (_gtk_tool_button_get_button), (gtk_tool_button_set_icon_spacing),\n   (gtk_tool_button_get_icon_spacing):\n   * gtk/gtktoolbutton.h:\n   Add GtkButton:image-spacing and GtkToolButton::icon-spacing.\n   (#320431, James Moger)\n\n2006-05-30  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreeviewcolumn.c (gtk_tree_view_column_update_button): only\n\tcheck sort column id if connected to sortable model.\n\n2006-05-30  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gdk/gdkpango.c (draw_error_underline): Fix offset to center the\n\tunderline in requested rectangle. (Ported from pango fix.)\n\n2006-05-29  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkdialog.h: removed forgotten declaration of\n\t_gtk_dialog_get_response_for_widget(), the function has been made\n\tpublic a long time ago.\n\n2006-05-29  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtktextview.c (gtk_text_view_target_list_notify): applied\n\tpatch from Chris Wilson which replaces a useless loop with\n\tbuilt-in access to free'd memory by a simple integer comparison.\n\tFixes bug #342894.\n\n2006-05-29  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_move_cursor_up_down): select\n\tthe current focus row if nothing is selected and ctrl is not pressed.\n\t(Fixes #324480, Murray Cumming/Srirama Sharma).\n\n2006-05-28  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreeviewcolumn.c (_gtk_tree_view_column_cell_focus): refactor\n\tto work correctly in RTL mode.\n\n\t* gtk/gtktreeview.c (gtk_tree_view_move_cursor_left_right): make\n\tcursor movement to left/right work correctly in RTL mode.\n\n2006-05-28  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gdk/gdkrectangle.c (gdk_rectangle_union, gdk_rectangle_intersect):\n\tNote in docs that @dest can be the same as @src1 or @src2. (#343233,\n\tChristian Persch)\n\n2006-05-28  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtkstyle.c (gtk_default_draw_flat_box): handle\n\tcell_even_ruled_sorted and cell_odd_ruled_sorted for the selected\n\tstate.\n\n2006-05-28  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtkenums.h: add GTK_ARROW_NONE.\n\n\t* gtk/gtktreeviewcolumn.c (gtk_tree_view_column_update_column): always\n\t\"show\" the arrow if sort_column_id >= 0, only set arrow type if\n\tthis column is the column we are currently sorting on. (#331338).\n\n2006-05-27  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkrecentchoosermenu.c: Avoid trivial differences\n\tin translated strings.  (#343088, Clytie Siddall)\n\n2006-05-28  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_build_tree): emit test_expand_row\n\tand test return value before expanding a branch. (Fixes #321523,\n\treported by Daniel Lindenaar).\n\n2006-05-28  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_insert_column): set the sizing\n\ttype of the new column to FIXED,\n\t(gtk_tree_view_insert_column_with_attributes): likewise. (#341898,\n\tDan Winship).\n\n2006-05-27  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreemodelfilter.c (gtk_tree_model_filter_remove_node):\n\tonly unref if elt->ref_count > 0,\n\t(gtk_tree_model_filter_row_deleted): likewise. (Fixes #340839,\n\treported by Yevgen Muntyan).\n\n2006-05-27  Kristian Rietveld  <kris@gtk.org>\n\n\tSmall refactoring. (#340428, Paolo Borelli).\n\n\t* gtk/gtkliststore.c (gtk_list_store_set_valist_internal),\n\t(gtk_list_store_insert_with_valuesv): refactor code to determine\n\titer compare func into gtk_list_store_get_compare_func().\n\n\t* gtk/gtktreestore.c (gtk_tree_store_set_valist_internal),\n\t(gtk_tree_store_insert_with_valuesv): likewise.\n\n2006-05-27  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_queue_draw_arrow): really fix\n\t#333284.\n\n2006-05-27  Kristian Rietveld  <kris@gtk.org>\n\n\tEditable cell window placement and RTL fixes.\n\n\t* gtk/gtktreeview.c (gtk_tree_view_button_press),\n\t(gtk_tree_view_bin_expose), (gtk_tree_view_get_cell_area),\n\t(gtk_tree_view_create_row_drag_icon): Only add indentation to x\n\tif !rtl,\n\t(gtk_tree_view_create_row_drag_icon): Iterate over columns in reverse\n\tdirection if in rtl mode.\n\n\t* gtk/gtktreeviewcolumn.c (gtk_tree_view_column_cell_process_action):\n\thorizontal_separator is not part of the real background area width,\n\tadd 2 * focus_line_width to real_cell_area.x and not\n\treal_background_area.x, fix up event coordinates check in the\n\tPACK_END loop, also set depth to zero at the end of the PACK_END\n\tloop,\n\t(_gtk_tree_view_get_neighbor_sizes): also add column_spacing for each\n\tvisible cell.\n\n2006-05-26  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/stock-icons/24/gtk-orientation-landscape.png:\n\t* gtk/stock-icons/24/gtk-orientation-portrait.png:\n\t* gtk/stock-icons/24/gtk-orientation-reverse-landscape.png:\n\t* gtk/stock-icons/24/gtk-orientation-reverse-portrait.png:\n\tCleaned up icons by Diana Fong.\n\n2006-05-26  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_queue_draw_arrow): queue a redraw\n\tfor the full width of the row, not just the width we got allocated.\n\t(Fixes #333284, reported by Benjamin Berg).\n\n2006-05-26  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_top_row_to_dy): set dy to\n\tpage_size + height in the event dy + page_size is about to become\n\tbigger than height.\n\n2006-05-25  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtkstatusicon.h:\n\t* gtk/gtkstatusicon.c (gtk_status_icon_get_geometry):\n\tNew function that can be used to e.g. position \n\tnotification bubbles wrt to the status icon.  \n\t(#341450, Christian Persch, Havoc Pennington)\n\n2006-05-25  Matthias Clasen  <mclasen@redhat.com>\n\n\tMake GTK+ work as an untrusted X client. (#136571,\n\tEd Catmur)\n\n\t* gdk/x11/gdkdisplay-x11.h:\n\t* gdk/x11/gdkdisplay-x11.c (gdk_display_open): When \n\topening a display, determine if we are untrusted.\n\t\n\t* gdk/x11/gdkdisplay-x11.c (gdk_notify_startup_complete): \n\tJust bail out when we are untrusted.\n\n\t* gdk/x11/gdkwindow-x11.c (gdk_window_new): Work around\n\ta bug in the Xorg XSECURITY implementation by coercing\n\ttoplevel InputOnly windows to InputOutput.\n\n\t* gdk/x11/gdkwindow-x11.c (_gdk_windowing_get_pointer): \n\t(_gdk_windowing_window_get_pointer): \n\tWhen untrusted, call XQueryPointer on an auxiliary\n\twindow, not on the root window.\n\t\n\t* gdk/x11/gdkwindow-x11.c (_gdk_windowing_window_at_pointer): \n\tIf untrusted, loop through all GDK-aware toplevels on all\n\tscreens in the hope we hit one containing the pointer; \n\tthen use that as the basis of the current XQueryPointer \n\tchild recursion.\n\n\t* gdk/x11/gdkmain-x11.c (gdk_pointer_grab): \n\t(gdk_keyboard_grab): Ignore failed grabs when untrusted.\n\n\t* gdk/x11/gdkdnd-x11.c (gdk_window_cache_new): Only\n\tcache our own toplevels when untrusted.\n\n\t* gdk/x11/gdkdnd-x11.c (motif_send_enter): Don't try\n\tto do Motif DND as untrusted client.\n\n\t* gdk/x11/gdkevents-x11.c (fetch_net_wm_check_window): \n\t(gdk_x11_screen_get_window_manager_name): \n\t(gdk_x11_screen_supports_net_wm_hint): \n\tBail out early if untrusted.\n\t\n\t* gtk/gtkcolorsel.c (grab_color_at_mouse): If getting \n\tthe color under the pointer by screenshooting the root \n\twindow fails, it tries to get the color from our own \n\twindow.\n\n\t* gtk/gtkcolorsel.c (get_screen_color): Make the\n\tdropper_grab_widget a child of the dialog, not a \n\ttoplevel.\n\n\t* gtk/gtkinvisible.c (gtk_invisible_realize): Respect\n\ta parent window that has been set before realizing.\n\n\t* gtk/gtkwidget.c (gtk_widget_get_parent_window): \n\tAlways return a previously set parent window.\n\t\n2006-05-24  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkfontbutton.c (gtk_font_button_clicked): \n\t* gtk/gtkcolorbutton.c (gtk_color_button_clicked): \n\tFix the handling of modality by copying what\n\tGtkFileChooserButton does.  (#342754, Yevgen Muntyan)\n\t\n\t* gtk/gtkprintunixdialog.c (create_main_page): Make\n\tthe range entry insensitive if another range option\n\tis selected.  (#342783, Caolan McNamara)\n\t(update_dialog_from_capabilities): Make the collate\n\tcheck button insensitive unless multiple copies are\n\tprinted  (#342781, Caolan McNamara)\n\n\t* gtk/gtkwidget.c: Remove style properties when a widget\n\tclass gets finalized, to make style properties work in\n\tdynamic types.  (#342513, Christian Persch)\n\n2006-05-24  Henrique Romano  <henrique@async.com.br>\n\n\t* gtk/gtkcellview.c: (gtk_cell_view_class_init),\n\t(gtk_cell_view_get_property), (gtk_cell_view_set_property):\n\tAdd model property for GtkCellView, part of #172535.\n\n2006-05-24  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprintoperation.h: \n\t* gtk/gtkprintoperation-private.h: \n\t* gtk/gtk.symbols:\n\t* gtk/gtkprintoperation.c: Add a custom-tab-label property.\n\t\n\t* gtk/gtkprintoperation-unix.c (get_print_dialog): Use it\n\there.  (#342752, Yevgen Muntyan)\n\n2006-05-24  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtkprintunixdialog.[ch]:\n\tAdd gtk_print_unix_dialog_set_manual_capabilities that controls\n\twhat widgets to enable in the dialog depending on the apps\n\tcapabilities.\n\t\n\t* gtk/gtkprintbackend.[ch]:\n\t* gtk/gtkprinter-private.h:\n\t* gtk/gtkprinter.c:\n\t* gtk/gtkprintjob.h:\n\tAdd printer_get_capabilities to backend.\n\tMove some fallback calls to the printbackend base class.\n\t\n\t* gtk/gtkprintoperation-unix.c:\n\tSet manual capabilities\n\t\n\t* modules/printbackends/cups/gtkprintbackendcups.c:\n\tImplement get_capabilities\n\t\n\t* modules/printbackends/lpr/gtkprintbackendlpr.c:\n\t* modules/printbackends/pdf/gtkprintbackendpdf.c:\n\tMove some methods to baseclass.\n\n2006-05-23  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprintoperation.c (print_pages): Do the begin-print\n\temission in the idle, so that the print dialog goes away\n\tbefore begin-print.\n\n2006-05-23  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtk.symbols: \n\t* gtk/gtkprintoperation.h: \n\t* gtk/gtkprintoperation.c: Add a boolean show-progress  \n\tproperty, and show a progress dialog if it is set to TRUE.\n\n\t* gtk/gtkprintoperation.c (pdf_end_run): \n\t* gtk/gtkprintoperation-win32.c (win32_end_run): \n\t* gtk/gtkprintoperation-unix.c (unix_end_run): \n\t* gtk/gtkprintoperation-private.h: Add a cancelled\n\tparameter to end_run, and call it even if the print\n\toperation was cancelled.\n\n2006-05-23  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtkprinteroptionwidget.c (filesave_changed_cb):\n\tAllow absolute filenames in filename entry.\n\tPatch from Yevgen Muntyan (#341679)\n\n2006-05-23  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtkprintunixdialog.[ch]:\n\tAdd gtk_print_unix_dialog_add_custom_tab\n\t\n\t* gtk/gtkprintoperation-unix.c:\n\tImplement custom widgets for unix.\n\tFix some warnings by including cairo-ps/pdf.h\n\t\n\t* gtk/gtkprintoperation-win32.c:\n\tMark string for translation.\n\n2006-05-22  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprintoperation.c (gtk_print_operation_class_init): \n\tFix docs.\n\n2006-05-22  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtkmain.c:\n\tMake sure grab-notify is emitted on toplevels as well as \n\tchild widgets.\n\n\t* gtk/Makefile.am:\n\t* gtk/gtkwin32embedwidget.[ch]\n\tAdd new widget used for win32 port to embed gtk+\n\twidgets in windows dialog.\n\n\t* gtk/gtkmarshalers.list:\n\tAdd POINTER:VOID\n\n\t* gtk/gtkprintoperation-private.h:\n\t* gtk/gtkprintoperation.[ch]:\n\tGeneric support for custom widgets in print dialog.\n\n\t* gtk/gtkprintoperation-win32.c:\n\tImplement custom widget support for win32.\n\n\t* tests/print-editor.c:\n\tAllow setting of font using custom widgets in the print dialog.\n\n2006-05-22  Behdad Esfahbod  <behdad@gnome.org>\n\n\tRollback the following changes, to fix it the proper way in Pango:\n\n\t* gdk/gdkinternals.h:\n\t* gdk/gdkscreen.c (gdk_screen_class_init), (gdk_screen_finalize),\n\t(update_fontmap_resolution), (gdk_screen_set_resolution):  Add new\n\tfunction _gdk_screen_get_font_map() and have one fontmap per screen,\n\twith the correct resolution set on it.\n\n\t* gdk/gdkpango.c (gdk_pango_context_get_for_screen): Use\n\t_gdk_screen_get_font_map() instead of setting resolution on the\n\tPangoCairoContext.  (#342529)\n\n2006-05-22  Emmanuele Bassi  <ebassi@gnome.org>\n\n\t* gtk/gtkrecentmanager.h:\n\t* gtk/gtkrecentmanager.c\n\t(gtk_recent_info_get_application_info): Don't mask \"time\" with\n\tthe \"time\" argument.\n\n2006-05-22  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdkcolor.h: gdk_color_parse returns boolean, not int.\n\t(#342569, Masatake Yamato)\n\n\t* gtk/gtkprintunixdialog.c (dialog_set_scale): Don't return\n\ta value from a void function.\n\n\t* gtk/gtkprinter.c (_gtk_printer_prepare_for_print) \n\t(_gtk_printer_get_settings_from_options) \n\t(_gtk_printer_request_details): Don't return values from void\n\tfunctions.\n\n\t* gtk/gtkrecentchooserutils.c (delegate_unselect_uri): Don't\n\treturn a value from a void function.\n\n\t* gtk/gtkfilesystem.c (gtk_file_system_cancel_operation): Don't\n\treturn a value from a void function.  Also, don't put \n\tsemicolons behind G_DEFINE_TYPE. (#342543)\n\n\t* gtk/gtkwidget.c (gtk_widget_class_init): Add docs\n\tfor new style properties.  (#342535, Mart Raudsepp)\n\n\t* gdk/x11/gdkscreen-x11.c: Remove _gdk_x11_screen_request_cm_notification\n\n\t* gdk/x11/gdkdisplay-x11.c (gdk_display_open): Directly call \n\tgdk_display_request_selection_notification. \n\n\t* gdk/x11/gdkdisplay-x11.c: Several cleanups.\n\t\n2006-05-21  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gdk/gdkinternals.h:\n\t* gdk/gdkscreen.c (gdk_screen_class_init), (gdk_screen_finalize),\n\t(update_fontmap_resolution), (gdk_screen_set_resolution):  Add new\n\tfunction _gdk_screen_get_font_map() and have one fontmap per screen,\n\twith the correct resolution set on it.\n\n\t* gdk/gdkpango.c (gdk_pango_context_get_for_screen): Use\n\t_gdk_screen_get_font_map() instead of setting resolution on the\n\tPangoCairoContext.  (#342529)\n\n2006-05-22  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk/gtkfilesystemwin32.c: Make it compile again. Doesn't work\n\tproperly yet, though. There is lots of commonality between this\n\tfile and gtkfilesystemunix.c that should really be factored out.\n\n2006-05-19  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkpaned.c (gtk_paned_compute_position): Avoid warnings\n\tif a child is NULL.  (#342007, Patrick Monnerat)\n\t\n\t* gtk/gtk.symbols: \n\t* gtk/gtkprintoperation.h: \n\t* gtk/gtkprintoperation.c (gtk_print_operation_cancel): New function\n\tto cancel a running print operation.\n\n\t* gtk/gtkprintoperation-private.h (struct _GtkPrintOperationPrivate): \n\tAdd a cancelled flag, use g types, use bitfields.\n\n\t* gtk/gtkprintoperation.c (print_pages): Clean up after the idle\n\tin the synchronous case.\n\n\t* gtk/gtknotebook.c (gtk_notebook_pages_allocate): Fix a \n\tboundary case in scrolling where a tab was not shown.  (#168105,\n\tHiroyuki Ikezoe, patch by Kouhei Sutou)\n\n2006-05-19  Damon Chaplin  <damon@gnome.org>\n\n\t* gtk/gtkfontsel.c (gtk_font_selection_init): use\n\tatk_relation_add_target() to add the targets, since it sets up weak\n\treferences to avoid crashes. (#305530)\n\n2006-05-18  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprintoperation.h: \n\t* gtk/gtkprintoperation.c: Add a GtkPrintOperation:: paginate signal \n\tthat gets emitted to paginate a document in chunks.\n\n\t* gtk/gtkprintoperation-private.h: \n\t* gtk/gtkmarshalers.list: Add necessary glue.\n\n\t* gtk/gtkcalendar.c (gtk_calendar_drag_motion): Don't produce\n\ta stuck drag if shift is held.  (#341734, Sebastien Bacher) \n\n\t* gdk/x11/gdkdnd-x11.c (_gdk_drag_get_protocol_for_display): \n\tAlways set protocol.  (#342003, Tommi Komulainen)\n\n\t* gtk/gtkimage.c (icon_theme_changed): Only unref the pixbuf\n\tif the image has the appropriate storage type.  (#342096, Tommi\n\tKomulainen)\n\n\t* configure.in: Actually require GLib 2.11\n\t\n\t* gtk/gtkentry.c (gtk_entry_drag_data_received): Make drops\n\tend up at the right spot.  (#342072,  Yevgen Muntyan)\n\n2006-05-18  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkrange.c: canonicalize the name of the \"activate-slider\"\n\tstyle property and use GTK_PARAM_READABLE instead of\n\tG_PARAM_READABLE. Moved one \"activate_slider\" variable to the\n\tlocal scope its used in.\n\n2006-06-18  Michael Emmel  <mike.emmel@gmail.com>\n\n\t* gdk/directfb/gdkscreen-directfb.c: \n\t* added gdk_screen_is_composited to compile\n\t* Bug 342091\n\n2006-05-17  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtkprintoperation-win32.c:\n\tUpdate to changed APIs.\n\n2006-05-16  Matthias Clasen  <mclasen@redhat.com>\n\n\t* configure.in: Bump version\n\n\t* === Released 2.9.1 ====\n\n\t* configure.in: Reset interface age\n\t\n\t* NEWS: Updates\n\nTue May 16 12:36:25 2006  S\u00f8ren Sandmann  <sandmann@redhat.com>\n\n\t* gtk/gtktoolbar.c (gtk_toolbar_size_allocate): Move getting the\n\tproperty out of the loop, and rename the variable 'max_expand'.\n\n\t* gtk/gtktoolbar.c (gtk_toolbar_class_init): Fix the decription\n\tfor the max-child-expand property. \n\n2006-05-16  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprinter.c (gtk_printer_class_init): \n\t* gtk/gtkprintjob.c (gtk_print_job_class_init): \n\t* gtk/gtkprintoperation.c (gtk_print_operation_class_init): \n\tCosmetic cleanups.\n\n\t* gtk/gtkpagesetupunixdialog.c (populate_dialog): Add labels\n\tfor page orientations, also add the fourth one.  (#339589)\n\n\t* gtk/stock-icons/24/gtk-orientation-reverse-portrait.png: New\n\ticon.\n\t\n\t* gtk/Makefile.am: Add it here.\n\t\n\t* gtk/gtkstock.[hc]: Add stock items for the page orientations.\n\n2006-05-16  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtktoolbar.c: added \"max-child-expand\" style property which\n\tlimits the space taken by expanding tool items. Fixes bug #340722.\n\n2006-05-16  Kristian Rietveld  <kris@imendio.com>\n\n\t* gtk/gtkpathbar.c (gtk_path_bar_dispose): cancel all pending handles\n\tin the button list. (Fixes #341035, reported by William Jon McCann).\n\n2006-05-16  Kristian Rietveld  <kris@imendio.com>\n\n\t* gtk/gtkfilechooserdefault.c\n\t(show_and_select_paths_finished_loading): put the newly selected\n\trow(s) the in the middle of the view,\n\t(update_current_folder_get_info_cb),\n\t(gtk_file_chooser_default_update_current_folder): make sure reload\n\tstate is set to RELOAD_HAS_FOLDER while loading the new folder,\n\tso _map() won't start loading the current working directory. (Fixes\n\t#341028, reported by Michael Natterer).\n\n2006-05-15  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_button_press): Fix\n\tan RTL problem with toggles in expander columns. \n\t(#341896, Roozbeh Pournader) \n\nMon May 15 15:12:05 2006  S\u00f8ren Sandmann  <sandmann@redhat.com>\n\n\t* gtk/gtklayout.c (gtk_layout_realize),\n\t* gtk/gtkiconview.c (gtk_icon_view_realize),\n\t* gtk/gtktreeview.c (gtk_tree_view_realize): Set the background of\n\tthe clip windows to NULL, since they are generally invisible and\n\tdon't have EXPOSURE set, which means they temp-unvlicker code\n\tdoesn't apply to them.\n\n\t* gdk/x11/gdkgeometry-x11.c (_gdk_window_move_resize_child): Unset\n\tthe background of the parent window during resizing. Invalidate\n\tthe uncoered area of the parent window. Bug 341332.\n\n2006-05-15  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkevents-quartz.c (_gdk_events_init): Remove obsolete \n\tcomment.\n\t(poll_func): Remove assert and add a comment on how to fix properly.\n\t(gdk_events_pending): Implement.\n\n2006-05-15  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprintoperation.c: Reverse the order of\n\tranges when printing in reverse.  (#341578)\n\n2006-05-15  Alexander Larsson  <alexl@redhat.com>\n\t\n\t* gtk/gtkprintjob.[ch]:\n\tAdded gtk_print_job_set/get_track_print_status\n\n\t* gtk/gtkprintoperation-private.h:\n\t* gtk/gtkprintoperation.[ch]:\n\tAdd gtk_print_operation_set_track_print_status.\n\t\n\t* gtk/gtkprintoperation-unix.c:\n\tImplement track_print_status on unix\n\t\n\t* gtk/gtkprintoperation-win32.c:\n\tImplement track_print_status on win32\n\t\n\t* gtk/gtk.symbols:\n\tAdded symbols\n\t\n\t* modules/printbackends/cups/gtkprintbackendcups.c:\n\tImplement track_print_status for cups\n\t\n\t* tests/print-editor.c:\n\tTest track_print_status.\n\n2006-05-15  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprintoperation.c: Do page rendering in an idle when\n\trunning asynchronous. \n\n2006-05-15  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtk.symbols: \n\t* gtk/gtkprintbackend.[ch]: (_gtk_print_backend_create):\n\tNever unload print backends.\n\tRemove gtk_print_backend_unref_at_idle.\n\n\t* modules/printbackends/cups/gtkprintbackendcups.c:\n\t(cups_dispatch_watch_finalize):\n\tDon't use the unref_at_idle hack since that caused\n\tdeadlocks. Instead we never unload print backends, which\n\tis not really a big problem.\n\n2006-05-14  Murray Cumming  <murrayc@murray.com>\n\n\t* gtk/gtkframe.c: Restored the / at the start of the comment \n\tblock, to fix the build.\n\n2006-05-13  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/*.c:\n\t* gdk-pixbuf/*.c:\n\t* gdk/*.c: Remove erroneous ; after G_DEFINE_TYPE \n\tmacros.  (#341692, Yevgen Muntyan)\n\n\t* gtk/gtktextbtree.c: \n\t* gtk/gtktextview.c: Move some asserts to the right \n\tplace.  (#341661, #341665, Pascal Terjan)\n\n2006-05-12  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtknotebook.c: Fix some corner cases in the size\n\tallocation logic for tabs.  (#341577, Carlos Garnacho Parro)\n\n\t* gtk/gtkprintunixdialog.c: Some fixes to capitalization of\n\tlabels.  (#341558, Dennis Cranston)\n\n\t* gtk/gtknotebook.c: Handle tab_label being NULL better.\n\t(#341455, William Jon McCann, patch by Carlos Garnacho Parro)\n\n\t* gtk/gtkruler.c: Reinstate the ruler metrics strings, since\n\tthey are used by glade, pointed out by Damon Chaplin.\n\n2006-05-12  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtkwindow.c:\n\tBetter handling of the window group on unsetting transient-for, since\n\tthe transient parent might have changed group.\n\t\n\t* gtk/gtkmenu.c:\n\tCombine the handling of transient for the attach-widget and the\n\twindow group handling by setting transient-to on popup/popdown only.\n\n\tSee bug #340401\n\t\n\t* gtk/gtkprintunixdialog.c:\n\tRemove part of old fix no longer needed.\n\n2006-05-12  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtkprintoperation.c (gtk_print_operation_set_n_pages):\n\tUpdate g_object_notify to new property name.\n\n2006-05-12  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtkrecentmanager.c:\n\tFix build errors.\n\t\n\t* gtk/gtk.symbols:\n\t* demos/gtk-demo/printing.c:\n\t* gtk/gtkprintoperation-win32.c:\n\t* gtk/gtkprintoperation.[ch]:\n\t* gtk/gtkprintsettings.[ch]: \n\t* modules/printbackends/cups/gtkprintbackendcups.c:\n\t* modules/printbackends/lpr/gtkprintbackendlpr.c:\n\t* modules/printbackends/pdf/gtkprintbackendpdf.c:\n\t* tests/print-editor.c:\n\t* tests/testnouiprint.c:\n\t* tests/testprint.c:\n\t* tests/testprintfileoperation.c:\n\tRename functions from nr_of_pages to n_pages, and num_copies to\n\tn_copies to match other gtk+ names.\n\t\n\t* gtk/gtkmenu.c: (gtk_menu_popdown):\n\tOnly re-set window group on popdown if we set it on popup (i.e.\n\tif there is a parent menu shell).\n\tFixed part of bug #340401\n\n\t* gtk/gtkwindow.c:\n\tAdd (contruct) property \"transient-for\" to GtkWindow. This\n\tis needed for the fix to bug #340401.\n\t\n\t* gtk/gtkprintunixdialog.c:\n\tUse the transient-for property on construction and populate the dialog\n\twith widgets after that. This fixes bug #340401.\n\tMore n_pages renames.\n\n2006-05-11  Emmanuele Bassi  <ebassi@cvs.gnome.org>\n\n\t* gtk/gtkrecentmanager.h: Remove the error parameter to the\n\tgtk_recent_manager_add() and gtk_recent_manager_add_full()\n\tfunctions; remove the unneeded error codes from the error\n\tenumeration.  (#336774).\n\n\t* gtk/gtkrecentmanager.c: Make gtk_recent_manager_add() and\n\tgtk_recent_manager_add_full() complain loudly about wrong or\n\tmissing meta-data, instead of using a GError.  (#336774)\n\n2006-05-11  Matthias Clasen  <mclasen@redhat.com>\n\n\t* demos/gtk-demo/Makefile.am (demos): Add it here.\n\n\t* demos/gtk-demo/printing.c (do_printing): Add a GtkPrintOperation demo.\n\n2006-05-11  Carlos Garcia Campos  <carlosgc@gnome.org>\n\n\t* gtk/gtkfilechooserembed.c: use I_() instead of _() when creating\n\tresponse-requested signal. Fixes bug #341416\n\n2006-05-11  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdkkeysyms.h: Regenerated from Xorg 7.1 keysyms.h, using\n\tgdkkeysyms-update.pl.\n\n\t* gdk/gdkkeysyms-update.pl: Script to sync gdkkeysyms.h\n\twith Xorg.  (#321896, Simos Xenitellis)\n\n\t* gdk/Makefile.am (EXTRA_DIST): Add gdkkeysyms-update.pl\n\n\t* gdk/gdkkeysyms.h: Consistently use lowercase in hex numbers.\n\n2006-05-10  Carlos Garnacho  <carlosg@gnome.org>\n\n\t* gtk/gtknotebook.c: check that tab_label is not NULL before checking\n\tthat it's notebook's child. Closes #341247.\n\nWed May 10 15:57:53 2006  Tim Janik  <timj@imendio.com>\n\n\t* applied unified patch for configurable scroll arrow sizes from\n\tbug #333632 and bug #325282.\n\n\t* gtk/gtkwidget.c (gtk_widget_class_init): added ::scroll-arrow-hlength\n\tand ::scroll-arrow-vlength style properties. fixed upper limit for\n\t::separator-width and ::separator-height to be MAXINT.\n\n\t* gtk/gtkmenu.c: use GtkWidget::scroll-arrow-vlength to determine the\n\tscroll arrow size, instead of using a hard coded constant.\n\n\t* gtk/gtknotebook.c: use GtkWidget::scroll-arrow-vlength and\n\tGtkWidget::scroll-arrow-hlength to determine scroll arrow sizes.\n\tadded GtkNotebook::arrow-spacing style property to configure the\n\tspacing between scroll arrows.\n\n2006-05-10  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkpagesetupunixdialog.c: Don't include langinfo.h\n\tunconditionally.  (#341217)\n\n2006-05-10  John (J5) Palmieri  <johnp@redhat.com>\n\n\t* modules/printbackends/cups/gtkprintbackendcups.c:\n\tmake the _CUPS_MAP_ATTR_STR macro not dup the string so we don't\n\tleak \n\n2006-05-10  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>\n\n\t* gtk/paper_names.c: Correct #11 Envelope typo.\n\n2006-05-09  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkevents-win32.c (doesnt_want_scroll): Look at both\n\tGDK_SCROLL_MASK and GDK_BUTTON_PRESS_MASK. (#139628)\n\n2006-05-09  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktextbuffer.c (gtk_text_buffer_class_init): Add a :cursor-position\n\tproperty.  (#334412, Yevgen Muntyan)\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtkmessagedialog.[hc]: Add an image property.  (#337306, Alex Graveley)\n\n2006-05-09  Carlos Garnacho  <carlosg@gnome.org>\n\n\t* gtk/gtknotebook.c: create an independent GdkWindow to behave nicely\n\tduring reordering with tab_labels with their own window, also use\n\tgtk_drag_set_icon_widget() for the DnD icon to avoid drawing garbage\n\tfrom offscreen regions. Closes bug #335707.\n\t(gtk_notebook_tab_space), (gtk_notebook_calculate_shown_tabs),\n\t(gtk_notebook_calculate_tabs_allocation): new functions, \n\tgtk_notebook_pages_allocate() functionality has been splitted into\n\tthese.\n\n2006-05-08  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkfilechooserdefault.c (gtk_file_chooser_default_add_shortcut_folder): \n\t* gtk/gtktextbufferserialize.c (parse_attr_element): Fix some typos in\n\tmessages.  (#341091, Tino Meinen)\n\n\t* gtk/gtkstatusicon.c: Some cleanups.\n\t\n\t* gtk/gtkstatusicon.c (gtk_status_icon_get_property): Silently return\n\tNULL if the storage type of the image does not match.  (#340516, Christian\n\tPersch)\n\n\t* gtk/gtktoolbar.c (_gtk_toolbar_elide_underscores): Elide (_x) in the middle\n\tof the string, too.  (#323956, Abel Cheung)\n\n\t* gtk/gtkuimanager.c (update_node): Fix tooltips. (#340527, Jon-Kare Hellan)\n\n\t* configure.in: Require Pango 1.13.0\n\n\t* gtk/gtknotebook.c: \n\t* gtk/gtkwindow.c: \n\t* gtk/gtkrange.c: Fix doc typos.\n\n2006-05-08  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>\n\n\t* gtk/gtkprintunixdialog.c (gtk_print_unix_dialog_class_init):\n\tCorrected a duplicate word.\n\n\t* gtk/gtkrecentmanager.c (gtk_recent_manager_add_full): Corrected\n\ta typo.\n\n2006-05-07  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkrange.c (gtk_range_key_press):  Chain up, to\n\tmake bindings work.  Noticed by Al Puzzuoli.\n\t\n2006-05-07  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkseparator.c: \n\t* gtk/gtkscrollbar.c: \n\t* gtk/gtkpaned.c: \n\t* gtk/gtkoldeditable.c: \n\t* gtk/gtkmisc.c: \n\t* gtk/gtkitem.c: \n\t* gtk/gtkimcontext.c: \n\t* gtk/gtkrange.c:\n\t* gtk/gtkscale.c: Make types abstract again.\n\n2006-05-06  Matthias Clasen   <mclasen@redhat.com>\n\t\n\t* gdk/gdkwindow.c (gdk_window_get_toplevels): Fix a wrong\n\treference in the docs.  (#340870, Ed Catmur)\n\n2006-05-05  Christian Persch  <chpe@cvs.gnome.org>\n\n\t* modules/printbackends/cups/gtkprintbackendcups.c:\n\t* modules/printbackends/lpr/gtkprintbackendlpr.c:\n\t* modules/printbackends/pdf/gtkprintbackendpdf.c: Always register\n\t  the type with the type module, even if it had been registered\n\t  before. Fixes bug #340676.\n\n2006-05-05  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprintunixdialog.c: Use theme colors for \n\tthe page layout indicator, and do RTL flipping for\n\tthe collate indicator.\n\n2006-05-05  Matthias Clasen  <mclasen@redhat.com>\n\n\t* configure.in: Require GLib 1.11.0\n\n\t* configure.in: Bump version\n\n\t* === Released 2.9.0 ===\n\n\t* configure.in: Require cairo 1.1.6\n\n\t* gtk/Makefile.am: Tweaks to make distcheck work.\n\n2006-05-05  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtkprintoperation-unix.c:\n\tImplement per-page paper sizes.\n\t\n\t* gtk/gtkprintoperation.c:\n\tImplement per-page paper sizes for pdf output.\n\tMake gtk_print_operation_set_pdf_target() work again\n\t\n\t* tests/Makefile.am:\n\t* tests/testprint.c:\n\t* tests/testprintfileoperation.[ch]:\n\tAdd more test code for printing support.\n\tThis tests per-page paper sizes & orientation and\n\tderiving from GtkPrintOperation.\n\n2006-05-04  Michael Emmel  <mike.emmel@gmail.com>\n\n\t* gdk/directfb/gdkkeys-directfb.c: DIKI_ALTGR to compile with\n\tdirectfb 0.9.25.1\n\n2006-05-04  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtk.symbols: remove gtk_printer_set_backend so it compiles\n\tagain.\n\n2006-05-04  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtk.symbols:\n\tAdded new symbols\n\t\n\t* gtk/gtkpagesetupunixdialog.c:\n\t* gtk/gtkprintunixdialog.c:\n\tDestroy backends when finalizing dialogs.\n\tFix printer leak in selected_printer_changed.\n\t\n\t* gtk/gtkprintbackend.[ch]:\n\tConvert from interface to baseclass.\n\tMove printer hashtable here so that the baseclass can handle\n\tthe slightly complicated ownership model.\n\tAdd gtk_print_backend_destroy which runs the dispose method,\n\tcausing the ref-cycles between the backend and its printers\n\tto be broken.\n\tAdd gtk_print_backend_unref_at_idle().\n\t\n\t* gtk/gtkprinter.[ch]:\n\tGtkPrinter objects now ref their backend so that its always\n\tavailible, since its needed for the printer object to work.\n\tThis causes a reference-cycle that is broken using\n\tgtk_print_backend_destroy.\n\tAdd gtk_printer_compare.\n\t\n\t* gtk/gtkprintoperation-private.h:\n\t* gtk/gtkprintoperation-unix.c:\n\t* gtk/gtkprintoperation.c:\n\tImplement !show_dialog for unix.\n\tMake sure the print data is fully spooled before returning\n\tfrom a sync run_dialog.\n\t\n\t\n\t* modules/printbackends/cups/gtkcupsutils.[ch]:\n\tAdd gtk_cups_request_ipp_add_strings\n\t\n\t* modules/printbackends/cups/gtkprintbackendcups.c:\n\t* modules/printbackends/cups/gtkprintercups.c:\n\t* modules/printbackends/lpr/gtkprintbackendlpr.c:\n\t* modules/printbackends/pdf/gtkprintbackendpdf.c:\n\tConvert backends to derive instead of implementing interface.\n\tMove common code into baseclass.\n\tCUPS:\n\t  Remove the printer polling in dispose, not finalize.\n\t  In the cups watch, remove the backend at idle instead of\n\t  immediately, since the unref can cause the module to be unloaded.\n\t  Limit the number of printer attributes requested\n\t  Get printer uri in initial printer listing so that we can use\n\t  the printer object immediately.\n\t\n\t* tests/Makefile.am:\n\t* tests/testnouiprint.c:\n\tAdd testcase for !show_dialog.\n\n2006-05-04  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtkfilesystem.c:\n\t* gtk/gtkfilesystemunix.c:\n\t* gtk/gtkprintbackend.h:\n\t* gtk/gtkrecentchooserdefault.c:\n\t* gtk/gtkrecentchooserdefault.h:\n\t* gtk/paper_names_offsets.c: Make symbol list mstch reality.\n\t\n\t* gtk/Makefile.am: Fix a typo.\n\t\n\t* gdk/x11/Makefile.am (EXTRA_DIST): Add gdksettings.c\n\n2006-05-03  Matthias Clasen  <mclasen@redhat.com>\n\n\t* NEWS: Updates\n\n2006-05-04  Murray Cumming <murrayc@murrayc.com>\n\n\t* gtk/gtktreemodel.c: (gtk_tree_model_base_init): Changed the \n\tlanguage of the signals documentation slightly. Bug #340205.\n\n2006-05-03  Federico Mena Quintero  <federico@novell.com>\n\n\tMerged the federico-filename-entry branch, to fix bug #136541.\n\tCombined ChangeLogs:\n\n\t2006-04-17  Federico Mena Quintero  <federico@novell.com>\n\n\t* gtk/gtkfilechooserdefault.c (pending_select_paths_process):\n\tOops, we *do* need to check that we are in OPEN mode before\n\tselecting the first row in the file list.  See\n\thttps://bugzilla.novell.com/show_bug.cgi?id=166906\n\t(gtk_file_chooser_default_get_paths): If we are in the case for\n\tthe file list, and the list has no selected rows, jump to the case\n\tfor the filename entry.  This is so that\n\n\t       1. The user types a filename in the SAVE filename entry\n\t          (\"foo.txt\").\n\n\t       2. He then double-clicks on a folder (\"bar\") in the file\n\t\t  list.\n\n\twill yield the expected \"bar/foo.txt\" selection.\n\n\t2006-03-29  Federico Mena Quintero  <federico@novell.com>\n\n\t* gtk/gtkpathbar.c (gtk_path_bar_init): Reduce the inter-button\n\tspacing to 0.\n\n\t* gtk/gtkfilechooserdefault.c (browse_widgets_create): Make the\n\tlocation label bold.\n\n\t2006-03-29  Federico Mena Quintero  <federico@novell.com>\n\n\t* gtk/gtkfilechooserdefault.c (location_mode_set): Just change the\n\tlocation_mode field if we are in SAVE/CREATE_FOLDER modes.\n\t(gtk_file_chooser_default_get_paths): Get the path based on the\n\tcurrently focused widget, or the last-focused widget.  This is\n\twhat we should have been doing in the beginning, but it worked out\n\tfine because we didn't have the possibility of a filename entry in\n\tOPEN mode.\n\t(gtk_file_chooser_default_should_respond): Handle the case where\n\tthe last focused widget is the location_entry.\n\n\t2006-03-28  Federico Mena Quintero  <federico@novell.com>\n\n\t* gtk/gtkfilechoosersettings.[ch]: New files with a simple\n\tframework for saving/loading settings from the file chooser in\n\t$XDG_CONFIG_HOME/gtk-2.0/gtkfilechooser.\n\n\t* gtk/gtkfilechooserdefault.c (gtk_file_chooser_default_unmap):\n\tSave the current settings.\n\t(settings_save): New helper function.  We save the location_mode\n\tand show_hidden flags.\n\t(gtk_file_chooser_default_map): Load the settings.\n\t(settings_load): New helper function.\n\n\t* gtk/gtkfilechooserentry.c\n\t(_gtk_file_chooser_entry_set_file_part): Oops, don't modify\n\tin_change.  Our handlers are what set the file_part, so they\n\t*must* be run when we modify the text.\n\n\t2006-03-27  Federico Mena Quintero  <federico@novell.com>\n\n\t* gtk/gtkfilechooserprivate.h (struct _GtkFileChooserDefault):\n\tRemoved the save_file_name_entry.  We'll make this be the same as\n\tthe location_entry widget.\n\t(struct _GtkFileChooserDefault): Leave only location_button,\n\tlocation_entry_box, location_label, location_entry.  We'll use a\n\tsingle toggle button for the location entry, which will appear\n\tbelow the path bar.\n\t(struct _GtkFileChooserDefault): Added a\n\tprocessing_pending_selections flag.\n\n\t* gtk/gtkfilechooserdefault.c (save_widgets_create): Destroy the\n\told location_entry if necessary, and hide the location toggle\n\twidgets.\n\t(update_chooser_entry): In multiple selection mode, just clear the\n\tlocation_entry.\n\t(check_save_entry): Allow running in OPEN or SELECT_FOLDER modes\n\tif we are in LOCATION_MODE_FILENAME_ENTRY.\n\t(gtk_file_chooser_default_should_respond): Switch to a folder if\n\tthe location_entry contains a folder name in OPEN and SAVE mode,\n\tnot just SAVE mode.  If the entry doesn't contain a folder name,\n\tbut is otherwise well-formed, and we are in OPEN mode, return that\n\twe should respond with that filename.\n\t(gtk_file_chooser_default_initial_focus): Focus the location_entry\n\tif appropriate.\n\t(browse_widgets_create): Create the location_entry_box and the\n\tlocation_label here.\n\t(update_appearance): Call location_mode_set() when switching back\n\tto OPEN/SELECT_FOLDER mode.  Hide the location_button when\n\tswitching to SAVE/CREATE_FOLDER mode.\n\t(pending_select_paths_process): Turn the\n\tprocessing_pending_selections flag on and off around changes to\n\tthe current selection.  Don't special-case OPEN mode anymore,\n\tsince the new flag will take care of things in\n\tupdate_chooser_entry().\n\t(update_chooser_entry): Don't do anything if\n\tprocessing_pending_selections is TRUE.  This keeps the entry from\n\tbeing polluted when changing folders.\n\t(location_popup_handler): In OPEN/SELECT_FOLDER modes, toggle\n\tbetween the path bar and the entry.  In SAVE/CREATE_FOLDER modes, simply focus the\n\tlocation_entry.\n\t(update_from_entry): Removed.\n\t(location_entry_create): Removed.\n\t(open_location_cb): Removed.\n\t(file_list_build_popup_menu): Don't add an \"Open _Location\" menu item.\n\t(location_entry_set_initial_text): Don't do anything if\n\tcurrent_folder is NULL.\n\n\t* gtk/gtkfilechooserentry.c\n\t(_gtk_file_chooser_entry_set_file_part): Turn in_change on and off\n\taround the call to gtk_entry_set_text().  This makes completion\n\tnot happen when the caller has explicitly set a name.\n\n\t2006-03-24  Federico Mena Quintero  <federico@novell.com>\n\n\t* gtk/gtkfilechooserprivate.h (struct _GtkFileChooserDefault):\n\tAdded fields location_mode_box, location_pathbar_radio,\n\tlocation_filename_radio, location_widget_box, location_label,\n\tlocation_entry.  The radio buttons will switch between the pathbar\n\tand the location entry; the other boxes are for layout purposes.\n\t(enum LocationMode): New enum.\n\t(struct _GtkFileChooserDefault): Added a location_mode field.\n\n\t* gtk/gtkfilechooserdefault.c (browse_widgets_create): Create the\n\tlocation radio buttons to switch between the pathbar and the\n\tlocation entry.  Pack the browse_path_bar in the new\n\tlocation_widget_box instead of a generic hbox.\n\t(location_buttons_create): New function.\n\t(gtk_file_chooser_default_init): Initialize impl->location_mode.\n\t(location_switch_to_path_bar): New function.\n\t(location_switch_to_filename_entry): New function.\n\n\t* gtk/gtkfilechooserbutton.c (model_add_special): The display_name\n\tshould not be const.\n\n2006-05-03  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprintunixdialog.c: Replace the xpm collate icons\n\tby cairo drawing that respects themes.\n\n\t* gdk/quartz/Makefile.am (libgdk_quartz_la_SOURCES): Add\n\tmissing files.  (#340533, Ludovic Rousseau)\n\n\t* gtk/gtkprintunixdialog.c (draw_page_cb): Don't leak the\n\tcairo context here.  (#340522, Christian Persch)\n\n\t* gtk/gtkprintoperation-unix.c (unix_finish_send): Don't\n\tuse gtk_dialog_run for the error dialog, and improve the\n\tdialog in other ways.  (#340510, Christian Persch)\n\n\t* gtk/gtkpagesetupunixdialog.c: Beautify the custom\n\tpaper size dialog.  (#339590, patch by Christian Persch)\n\t\n\t* gtk/gtkaccessible.c:\n\t* gtk/gtkclipboard.c:\n\t* gtk/gtkfilefilter.c:\n\t* gtk/gtkimmodule.c:\n\t* gtk/gtkmenubar.c: More G_DEFINE_TYPE conversion.\n\n\t* gtk/gtkwidget.c: Make GtkWidget abstract again.\n\n2006-05-02  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/*.c: Use G_DEFINE_TYPE and g_type_register_static_simple()\n\twhere applicable, for ~5000 lines of code reduction. This also\n\treduces the size of the data section by ~9k. The overall library\n\tsizes shrinks a bit less, since the text section gets a bit\n\tlarger.\n\n2006-05-02  Kristian Rietveld  <kris@imendio.com>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_row_inserted): set tmpnode to\n\tthe return value of the _gtk_rbtree_insert* functions, since that\n\tis the node we really want to check for visibilty.\n\n2006-05-02  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprinter.[hc]: Don't use virtual as a parameter name.\n\t(#340394, Christian Persch)\n\n2006-05-02  Christian Persch  <chpe@cvs.gnome.org>\n\n\t* gtk/gtkpagesetupunixdialog.c:\n\t* gtk/gtkprintcontext.c: \n\t* gtk/gtkprinter.c:\n\t* gtk/gtkprinteroptionwidget.c:\n\t* gtk/gtkprintjob.c:\n\t* gtk/gtkprintoperation-unix.c:\n\t* gtk/gtkprintoperation.c:\n\t* gtk/gtkprintunixdialog.c: Use a priv variable when accessing priv\n\t  multiple times in the same function. Bug #340288.\n\n2006-05-02  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtklabel.c (gtk_label_set_line_wrap): added note about the\n\tinablity to do height-for-width text layout and suggest to use\n\tgtk_widget_set_size_request() for getting a label that wraps at\n\tsome specific position.\n\n2006-05-02  Kristian Rietveld  <kris@imendio.com>\n\n\t* ChangeLog.gtk-async-file-chooser: added ChangeLog entries from\n\tthe kris-async-branch.\n\n\t* Makefile.am: updated EXTRA_DIST\n\n2006-05-02  Alexander Larsson  <alexl@redhat.com>\n\n\t* ChangeLog.gtk-printing: \n\t* Makefile.am (EXTRA_DIST):\n\tAdd ChangeLog.gtk-printing\n\n2006-05-01  Matthias Clasen  <mclasen@localhost.localdomain>\n\n\t* NEWS: Updates\n\n2006-05-02  Kristian Rietveld  <kris@imendio.com>\n\n\n\t* configure.in: Up ABI version to 2.10.0 (by Matthias' request).\n\n2006-05-01  Kristian Rietveld  <kris@imendio.com>\n\n\tMerge of the GTK+ asynchronous file chooser branch.  Please see\n\tthe kris-asynch-branch for more detailed ChangeLog entries.\n\n\t* configure.in: increase binary version to 2.9.0.\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtkfilechooser.c:\n\t* gtk/gtkfilechooserbutton.c:\n\t* gtk/gtkfilechooserdefault.c:\n\t* gtk/gtkfilechooserdialog.c:\n\t* gtk/gtkfilechooserembed.c:\n\t* gtk/gtkfilechooserembed.h:\n\t* gtk/gtkfilechooserentry.c:\n\t* gtk/gtkfilechooserentry.h:\n\t* gtk/gtkfilechooserprivate.h:\n\t* gtk/gtkfilesystem.c:\n\t* gtk/gtkfilesystem.h:\n\t* gtk/gtkfilesystemmodel.c:\n\t* gtk/gtkfilesystemmodel.h:\n\t* gtk/gtkfilesystemunix.c:\n\t* gtk/gtkpathbar.c:\n\t* gtk/gtkpathbar.h:\n\tMerge from kris-async-branch.\n\n2006-05-01  Matthias Clasen  <mclasen@redhat.com>\n\n\t* NEWS: Updates\n\n2006-04-30  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreemodel.c (gtk_tree_model_base_init): Document\n\tGtkTreeModel signals.\n\n2006-04-19  Michael Emmel  <mike.emmel@gmail.com>\n\n\t* gdk/directfb/gdkdrawable-directfb.c: removed all subtracting one on\n\tclipping\n\n2006-04-30  Kristian Rietveld  <kris@imendio.com>\n\n\tFix for #340200, spotted by Torsten Schoenfeld.\n\n\t* gtk/gtktreeview.c (gtk_tree_view_get_cell_area): fix up logic\n\tcalculating the level indentation,\n\t(gtk_tree_view_start_editing): remove code calculating the\n\tlevel indentation, since _get_cell_area() takes care of this for us.\n\n2006-04-30  Matthias Clasen  <mclasen@redhat.com>\n\n\tFix problems with setting symbolic colors from rc files.\n\t(#338345, Benjamin Berg)\n\t\n\t* gtk/gtkrc.c (gtk_rc_settings_changed, gtk_rc_font_name_changed) \n\t(gtk_rc_color_hash_changed, gtk_rc_reparse_all_for_settings): Don't\n\tfreeze notification for settings changes while parsing; instead\n\tmanually avoid recursion, and update the color hashes.\n\n2006-04-30  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtksettings.c (gtk_settings_class_init): Change the default\n\tvalue of the gtk-color-scheme setting to \"\".\n\n\t* gtk/gtkprinteroption.c: \n\t* gtk/gtkprinteroptionwidget.c: \n\t* gtk/gtkprintunixdialog.c: Improve the print dialog layout,\n\tmark some more strings for translation.  (#340139, Christian Persch)\n\n\t* gtk/gtkstatusicon.c (gtk_status_icon_class_init): Fix the definition\n\tof the ::size-changed signal, and improve its documentation.\n\t(#340112, Christian Persch)\n\n2006-04-29  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gtk/gtkwidget.c (gtk_widget_create_pango_layout)\n\t(gtk_widget_get/create_pango_context): Change colormap to font map in\n\tdocs. (#340093)\n\n2006-04-29  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtk.symbols: \n\t* gtk/gtkstatusicon.h: \n\t* gtk/gtkstatusicon.c (gtk_status_icon_position_menu): Add a menu\n\tposition function for use with popups on status icons.  (#334573, \n\tChristian Persch)\n\n\t* gtk/gtkwidget.c (gtk_widget_is_composited): Fix a C99ism.  (#340055,\n\tKazuki Iwamoto)\n\n2006-04-28  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkcellrenderertext.c (get_size): Use _static variants when\n\tcopying and merging short-lived Pango layouts. (#340033, Morten Welinder)\n\n2006-04-28  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gtk/gtkwidget.c (gtk_widget_create_pango_layout): Fix typo in\n\tdocs. (#340063)\n\n2006-04-28  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_drag_begin): Don't force\n\tthe standard DND icon if the user has a custom DND source.  \n\t(#339522, Joe Wreschnig)\n\n2006-04-28  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtktextbuffer.c (create_clipboard_contents_buffer): keep a\n\treference to the source buffer while the clipboard contents buffer\n\texists, because it is needed for serializing the contents buffer.\n\tMakes copying from the contents buffer possible even after the\n\tresp. text view is destroyed (for example when there is a\n\tclipboard manager running on app exit) (bug #339195).\n\n2006-04-27  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gdk/gdkpango.c (gdk_pango_renderer_draw_glyphs): Cast to double\n\tbefore dividing by PANGO_SCALE. (#334582)\n\n2006-04-27  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkentry.c (popup_position_func): Improve positioning\n\tof the menu when popped up by keynav.  (#334987, Christian\n\tPersch)\n\n\t* gtk/gtkdnd.c (gtk_drag_set_icon_window): Handle the case\n\tof being called after the drag is cancelled.  (#339224, \n\tBenjamin Otte)\n\n\t* gdk/x11/gdkscreen-x11.c (_gdk_x11_screen_process_owner_change):\n\tUse XFixes only if it is available.  (#339839, Marko Anastasov)\n\n2006-04-26  Federico Mena Quintero  <federico@novell.com>\n\n\t* gtk/gtkdialog.c (gtk_dialog_close): Don't make this conditional\n\ton having a GTK_RESPONSE_CANCEL button -> end the idiocy.  Fixes\n\tbug #101293.\n\n2006-04-26  Kristian Rietveld  <kris@imendio.com>\n\n\t* gtk/gtktreeview.c (node_is_visible): new function,\n\t(validate_visible_area): when a node is validated, only queue a\n\tredraw for that node, not for the entire widget (a redraw for the\n\tentire widget is only needed when the sizes change, and\n\t_queue_resize() will take care of that),\n\t(do_validate_rows): do not queue a redraw, redraws are only needed\n\tfor changes in the visible area and validate_visible_area() takes\n\tcare of that,\n\t(gtk_tree_view_row_inserted): for fixed height mode, only queue\n\ta resize and redraw if the node is visible, else no redraw is needed.\n\n2006-04-26  Kristian Rietveld  <kris@imendio.com>\n\n\tIf this new \"row-ending-details\" property is turned on, more\n\tdetailed \"details\" will be passed to the theme engine for drawing\n\tthe background, drop indicator and focus rectangle.  Requirement is\n\tthat the theme engine supports these details. (#333760).\n\n\t* gtk/gtktreeview.c (gtk_tree_view_class_init): add row-ending-details\n\tstyle property,\n\t(gtk_tree_view_bin_expose): pass more detailed detail to\n\tgtk_paint_flat_box() if the property is turned on,\n\t(gtk_tree_view_bin_expose): likewise for the drop indicator,\n\t(gtk_tree_view_bin_expose): likewise for the focus rectangle.\n\n2006-04-26  Kristian Rietveld  <kris@imendio.com>\n\n\tNew \"show-expanders\" and \"level-indentation\" properties, which can\n\tbe used for customizing the tree view.  (For example to do\n\tgrouping as demonstrated in the test application).\n\tDiscussion in #80869.\n\n\t* gtk/gtktreeprivate.h: add level_indentation field.\n\n\t* gtk/gtktreeview.c (gtk_tree_view_class_init),\n\t(gtk_tree_view_init), (gtk_tree_view_set_property),\n\t(gtk_tree_view_get_property): add the properties to the object,\n\t(gtk_tree_view_button_press), (do_prelight),\n\t(gtk_tree_view_bin_expose), (validate_row),\n\t(gtk_tree_view_discover_dirty_iter), (gtk_tree_view_get_cell_area),\n\t(gtk_tree_view_create_row_drag_icon): take the new properties\n\tinto account,\n\t(gtk_tree_view_start_editing): fix cell placement code.\n\n\t* tests/testgrouping.c: new test application, showing how to\n\timplement grouping.\n\n\t* tests/Makefile.am: updated.\n\n2006-04-25  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdk.symbols: Add gdk_screen_is_composited\n\n\t* gtk/gtkprintjob.c (gtk_print_job_set_source_file): Add docs.\n\n\t* gtk/gtkprintoperation.c: Add docs.\n\nTue Apr 25 10:25:28 2006  S\u00f8ren Sandmann  <sandmann@redhat.com>\n\n\t* tests/testgtk.c (create_alpha_window): Create 'composited' label.\n\n\t* tests/testgtk.c (on_composited_changed): New function, change\n\tthe label to say whether the screen is composited or not.\n\n\t* gtk/gtkwindow.c (gtk_window_on_composited_changed): When\n\tcomposited status change, invalidate the window and propagate the signal;.\n\n\t* gtk/gtkwindow.c (gtk_window_map): Set the appropriate type hint\n\tif reset_type_hint is TRUE.\n\n\t* gtk/gtkwindow.c (gtk_window_set_type_hint): If hint is one of\n\tthe old hints, store a shadow copy in the public window->type_hint\n\tbitfield, otherwise set this field to normal. Set the private\n\tfield to the type hint.\n\n\t* gtk/gtkwindow.c (gtk_window_init): Initialize priv->type_hint. \n\n\t* gtk/gtkwindow.c (struct _GtkWindowPrivate): New field\n\t\"reset_type_hint\" indicating whether the type hint needs to be\n\treset. New field type_hint containing a GdkWindowTypeHint.\n\n\t* gtk/gtkwidget.c (propagate_composited_changed): New function to\n\tpropagate changes in composited status.\n\t(gtk_widget_class_init): Add composited_changed signal.\n\t\n\t* gtk/gtkwidget.h (struct _GtkWidgetClass): New signal composited-changed.\n\n\t* gtk/gtkwidget.c (gtk_widget_is_composited): New function.\n\n\t* gtk/gtktooltips.c (gtk_tooltips_draw_tips): Set transient for.\n\n\t* gtk/gtktooltips.c (gtk_tooltips_force_window): Set the type hint\n\n\t* gtk/gtkmenuitem.c (gtk_menu_item_position_menu): Compute whether\n\tthe item belongs to a menubar. Set the type_hint appropriately\n\tdepending on the outcome.\n\n\t* gtk/gtkmenu.c (gtk_menu_position): Set the default type hint here.\n\n\t* gtk/gtkmenu.c (gtk_menu_attach_to_widget): connect to hierarchy\n\tchanged on the attach widget.\n\n\t* gtk/gtkmenu.c (attach_widget_hierarchy_changed): New function to\n\tset the transient_for property for menus.\n\n\t* gtk/gtkdnd.c (set_icon_stock_pixbuf): Set the appropriate type hint.\n\n\t* gtk/gtkcombo.c (gtk_combo_popup_list): Make the popup window\n\ttransient for the toplevel.\n\n\t* gtk/gtkcombobox.c (gtk_combo_box_set_popup_widget): Set\n\ttransient-for, for the popup window.\n\n\t* gdk/x11/gdkwindow-x11.c (gdk_window_get_type_hint): Support for\n\tnew window types.\n\n\t* gdk/x11/gdkwindow-x11.c (gdk_window_set_type_hint): Add support\n\tfor new window types.\n\n\t* gdk/x11/gdkscreen-x11.c (_gdk_x11_screen_process_owner_change):\n\tNew function called whenever the compositing manager comes and goes.\n\n\t* gdk/x11/gdkscreen-x11.c (gdk_screen_is_composited): New function.\n\n\t* gdk/x11/gdkscreen-x11.c\n\t(_gdk_x11_screen_request_cm_notification, make_cm_atom,\n\tcheck_is_composited): New functions\n\n\t* gdk/x11/gdkevents-x11.c (gdk_event_translate): Call\n\t_gdk_x11_screen_process_owner_change when an\n\tXFixesSelectionNotifyEvent is received.\n\n\t* gdk/x11/gdkdisplay-x11.c (gdk_display_open): Call\n\t_gdk_x11_screen_request_cm_notification() on all screens.\n\n\t* gdk/quartz/gdkscreen-quartz.c (gdk_screen_is_composited): Dummy\n\timplementation. \n\n\t* gdk/gdkscreen.c (gdk_screen_class_init): New signal,\n\t'composited-changed'.\n\n\t* gdk/gdkwindow.h: Add new EWMH window types.\n\n\t* gdk/win32/gdkscreen-win32.c (gdk_screen_is_composited) \n\n2006-04-25  Matthias Clasen  <mclasen@redhat.com>\n\t\n\t* modules/printbackends/cups/gtkprintbackendcups.c: \n\tAdd some more translatable PPD option names.\n\n2006-04-24  Matthias Clasen  <mclasen@redhat.com>\n\n\t* po/POTFILES.in:\n\t* po-properties/POTFILES.in: Updates\n\n\t* gtk/paper_names.c: Declare PaperInfo here.\n\n\t* gtk/gen-paper-names.c: Add a prefix to gettext msgids.\n\n\t* gtk/paper_names_offsets.c: Regenerated.\n\t\n\t* gtk/gtkpapersize.c (gtk_paper_size_get_display_name):\n\tUse g_strip_context() to strip the prefix.\n\n2006-04-24  Matthias Clasen  <mclasen@redhat.com>\n\t\n\t* gtk/gtkfontbutton.c: Small doc fixes.\n\n\t* gtk/gtkprintunixdialog.h: \n\t* gtk/gtkpagesetupunixdialog.h: Fix includes (#338665)\n\n\t* gtk/gtkprintsettings.h (GtkPageRange): Declare in a way grokked by gtk-doc.\n\n\t* gdk/gdkregion-generic.c: Documentation fixes.\n\n\t* gdk/directfb/gdkmain-directfb.c: Make the comment not look like\n\ta doc comment.\n\n\t* gtk/gtkprintunixdialog.c: Add docs.\n\n\t* gtk/gtkstatusicon.c (gtk_status_icon_get_visible): Typo fix.\n\n2006-04-24  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtkprinter.c:\n\tDon't ref the backend since the backend owns the printer.\n\n2006-04-24  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtkpagesetupunixdialog.c (update_combo_sensitivity_from_printers):\n\tRemove spew.\n\n2006-04-24  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtkprintunixdialog.c (create_page_setup_page):\n\tEven/Odd Pages -> Even/Odd Sheets\n\n2006-04-24  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtkprintoperation.c (gtk_print_operation_run_async): Refactor the\n\tgtk_print_operation_run() code and add an _async version.\n\n\t* gtk/gtkprintoperation-private.h:\n\t* gtk/gtkprintoperation-unix.c\n\t(_gtk_print_operation_platform_backend_run_dialog_async)\n\t(gtk_print_run_page_setup_dialog_async): Variants of the run functions\n\twhich don't call gtk_dialog_run(), but only show the dialog and return,\n\tand handle the response in a signal handler.\n\n\t* gtk/gtkprintoperation-win32.c (gtk_print_run_page_setup_dialog_async) \n\t(_gtk_print_operation_platform_backend_run_dialog_async): Implement these \n\tby calling the sync versions.\n\n\t* gtk/gtkprintoperation-unix.c: Cleanups.\n\n\t* gtk/gtkpagesetupunixdialog.c (gtk_page_setup_unix_dialog_get_page_setup):\n\tRemove redundant code.\n\n\t* gtk/Makefile.am: Install gtkprintjob.h as Unix-specific print API.\n\n\t* gtk/gtkprintoperation-unix.c (gtk_print_run_page_setup_dialog): \n\tReturn a copy of the original page setup if the dialog was canceled.\n\n2006-04-24  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtkprintjob.h:\n\tDeclare GtkPrintJob.\n\t\n\t* gtk/gtkprintunixdialog.c: (gtk_print_unix_dialog_get_settings):\n\tChange g_return_if_fail to g_return_val_if_fail.\n\n2006-04-24  Alexander Larsson  <alexl@redhat.com>\n\n\t* configure.in:\n\tCheck for cairo-pdf.h.\n\tCheck for cairo-ps.h on non-win32.\n\n2006-04-24  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkclipboard.h: \n\t* gtk/gtkprinter.c: \n\t* gtk/gtkprintsettings.h: \n\t* gtk/gtkprintsettings.c: Match parameter names with the headers.\n\n\t* gtk/gtkprintoperation-unix.c (gtk_print_run_page_setup_dialog): \n\tAdd docs.\n\n\t* gtk/gtktextbufferrichtext.c (gtk_text_buffer_deserialize): \n\t* gtk/gtkstatusicon.c (gtk_status_icon_get_storage_type): \n\t* gtk/gtktreeview.c (gtk_tree_view_set_search_position_func): \n\t* gtk/gtktreeview.c (gtk_tree_view_get_headers_clickable): \n\t* gtk/gtkcellrendererspin.c (gtk_cell_renderer_spin_new): \n\t* gtk/gtkmenu.c (gtk_menu_get_for_attach_widget): Fix the docs.\n\n\t* gtk/gtkprinter.h: Don't declare GtkPrintJob here.\n\t* gtk/gtkprinter-private.h: Instead include gtkprintjob.h.\n\n2006-04-23  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkprinter-private.h: \n\t* gtk/gtkprintbackend.h: \n\t* gtk/gtkprinter.[hc]: \n\t* gtk/gtkprintjob.[hc]: Use g types, add documentation, and some\n\tstylistic fixups.\n\n\t* gtk/gtkaboutdialog.c (activate_url): Avoid a compiler warning.\n\n\t* gtk/gtkpapersize.[hc]: Use g types, add documentation.\n\n\t* gtk/gtkprintunixdialog.c (gtk_print_unix_dialog_get_settings): \n\tUse g_return_val_if_fail in non-void functions.\n\n\t* gtk/Makefile.am: Add gtkprintutils.[hc]\n\n\t* gtk/gtkprintutils.[hc]: New files, move the unit conversion\n\tfunctions here.\n\n\t* gtk/gtkpagesetupunixdialog.c: \n\t* gtk/gtkprintsettings.c: \n\t* gtk/gtkpagesetup.c: \n\t* gtk/gtkpapersize.c: Replace all static copies of to_mm/from_mm\n\tby the copies in gtkprintutils.c.\n\n\t* gtk/gtkpagesetup.[hc]: Use g types, add documentation.\n\n\t* gtk/gtkprintsettings.c: More documentation\n\n2006-04-22  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk/Makefile.am (gtk_private_h_sources): Small workaround for\n\tweird bug in some versions of Automake at least on Windows.\n\n2006-04-21  Alexander Larsson  <alexl@redhat.com>\n\n        Merge the gtk-printing branch.\n\tFor more detailed ChangeLog entries, see the ChangeLog.gtk-printing.\n\t\n\t* .cvsignore:\n\t* Makefile.am:\n\t* configure.in:\n\t* docs/tools/widgets.c:\n\t* gtk+-unix-print-2.0.pc.in:\n\t* gtk/Makefile.am:\n\t* gtk/gen-paper-names.c:\n\t* gtk/gtk.h:\n\t* gtk/gtk.symbols:\n\t* gtk/gtkenums.h:\n\t* gtk/gtkiconfactory.c:\n\t* gtk/gtkmarshalers.list:\n\t* gtk/gtkpagesetup.[ch]:\n\t* gtk/gtkpagesetupunixdialog.[ch]:\n\t* gtk/gtkpapersize.[ch]:\n\t* gtk/gtkprint-win32.[ch]:\n\t* gtk/gtkprintbackend.[ch]:\n\t* gtk/gtkprintcontext.[ch]:\n\t* gtk/gtkprinter-private.h:\n\t* gtk/gtkprinter.[ch]:\n\t* gtk/gtkprinteroption.[ch]:\n\t* gtk/gtkprinteroptionset.[ch]:\n\t* gtk/gtkprinteroptionwidget.[ch]:\n\t* gtk/gtkprintjob.[ch]:\n\t* gtk/gtkprintoperation-private.h:\n\t* gtk/gtkprintoperation-unix.c:\n\t* gtk/gtkprintoperation-win32.c:\n\t* gtk/gtkprintoperation.[ch]:\n\t* gtk/gtkprintsettings.[ch]:\n\t* gtk/gtkprintunixdialog.[ch]:\n\t* gtk/paper_names.c:\n\t* gtk/paper_names_offsets.c:\n\tPlatform independent printing API and implementations\n\tfor unix and windows.\n\n\t* gtk/gtkstock.h:\n\t* gtk/stock-icons/24/gtk-orientation-landscape.png:\n\t* gtk/stock-icons/24/gtk-orientation-portrait.png:\n\t* gtk/stock-icons/24/gtk-orientation-reverse-landscape.png:\n\tAdd stock icons for page orientation.\n\t\n\t* modules/Makefile.am:\n\t* modules/printbackends/Makefile.am:\n\t* modules/printbackends/cups/Makefile.am:\n\t* modules/printbackends/cups/gtkcupsutils.[ch]:\n\t* modules/printbackends/cups/gtkprintbackendcups.[ch]:\n\t* modules/printbackends/cups/gtkprintercups.[ch]:\n\n\tCups printing backend for unix.\n\t\n\t* modules/printbackends/lpr/Makefile.am:\n\t* modules/printbackends/lpr/gtkprintbackendlpr.[ch]:\n\tlpr printing backend for unix.\n\t\n\t* modules/printbackends/pdf/Makefile.am:\n\t* modules/printbackends/pdf/gtkprintbackendpdf.[ch]:\n\tprint-to-pdf printing backend for unix.\n\t\n\t* tests/.cvsignore:\n\t* tests/Makefile.am:\n\t* tests/print-editor.c:\n\tTest application for printing.\n\n\t* gdk/gdk.symbols:\n\t* gdk/win32/gdkevents-win32.c:\n\t* gdk/win32/gdkwin32.h:\n\tAdd gdk_win32_set_modal_dialog_libgtk_only so that we can pump the\n\tmainloop while displaying a win32 common dialog.\n\n\t* gdk/directfb/Makefile.am:\n\tWhitespace cleanup.\n\t\n2006-04-20  Paolo Borelli  <pborelli@katamail.com>\n\n\t* gtk/gtkcombobox.c: plug small leak (#339132)\n\t* tests/testcombo.c: ditto\n\n2006-04-19  Michael Emmel  <mike.emmel@gmail.com>\n\n\t* gdk/directfb/gdkdrawable-directfb.c: fixed off by one error in\n\tclip patch from (#330824)\n\n2006-04-19  Murray Cumming  <murrayc@murrayc.com>\n\n\t* gtk/gtkfilechooserbutton.c: _GtkFileChooserButtonPrivate:\n\tAdded has_title flag so we can remember whether a title has \n\tbeen set.\n\t(gtk_file_chooser_button_constructor): If no title has been\n\tset then set it to the default title. This means that the \n\tdefault title will be used if the dialog was instantiated with \n\tg_object_new(), without using the gtk_file_chooser_button_new() \n\tconvenience function. This helps language bindings.\n\t(gtk_file_chooser_button_set_property): Set has_title when \n\tsetting the title.\n\n2006-04-19  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkkeys-win32.c (handle_special): Map VK_NUMPAD[0-9]\n\tto GDK_KP_[0-9]. (#337562)\n\n2006-04-18  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkrc.c: Allocate pixmap_path dynamically, rather than\n\tusing a fixed array of size 128.\n\n\t* gtk/gtkiconcache.c: Apply a patch by Paolo Borelli to factor\n\tout a strip_suffix() function and save some memory.  (#338307)\n\n2006-04-18  Carlos Garnacho  <carlosg@gnome.org>\n\n\t* gtk/gtknotebook.c (gtk_notebook_pages_allocate): removed wrong\n\tcondition check that caused tab labels not to be drawn under certain\n\tcircumstances. Bug #338734.\n\n2006-04-17  Kjartan Maraas  <kmaraas@gnome.org>\n\n\t* configure.in: Remove obsolete entry for no_NO\n\t* po-properties/no.po: And the translation\n\t* po/no.po: And the translation.\n\n2006-04-17  Matthias Clasen  <mclasen@redhat.com>\n\n\t* demos/gtk-demo/colorsel.c (expose_event_callback): Small formatting\n\tfix.\n\n2006-04-17  Christian Persch  <chpe@cvs.gnome.org>\n\n\t* gtk/gtkdnd.c: (gtk_drag_dest_set), (gtk_drag_dest_set_proxy): Fix\n\tUMR in gtk_drag_dest_motion. Bug #338725.\n\n2006-04-17  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtksettings.c (gtk_settings_class_init): \n\t* gtk/gtkentry.c (gtk_entry_class_init): Fix typos\n\tin property blurbs.  (#338772, Clytie Siddall)\n\n2006-04-16  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkdrawable-quartz.c: (gdk_quartz_draw_drawable): Add check \n\tfor source being a window.\n\n\t* gdk/quartz/gdkwindow-quartz.c: (_gdk_windowing_window_get_pointer):\n\tDon't assert on window not being the root window.\n\n2006-04-16  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkdrawable-quartz.c: Remove leading cairo/ in include.\n\n2006-04-16  Matthias Clasen <mclasen@redhat.com>\n\n\t* gdk/x11/gdkwindow-x11.c (set_initial_hints ): Avoid a\n\tpossible array overrun.  (Coverity)\n\n\t* gtk/gtkcalendar.c (gtk_calendar_key_press): Avoid a\n\tpossible array overrun.  (Coverity)\n\n\t* gtk/gtktextbuffer.c (_gtk_text_buffer_remove_all_tags):\n\tAvoid a NULL dereference.  (Coverity)\n\n2006-04-15  Matthias Clasen <mclasen@redhat.com>\n\n\t* gtk/gtkrecentmanager.c: Make filename_warning() static,\n\tand use caseless matching when looking for file:/.  \n\t(#336772, Morten Welinder)\n\n2006-04-13  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/quartz/gdkevents-quartz.c:\n        (synthesize_enter_event):\n        (synthesize_leave_event):\n        (synthesize_crossing_events):\n        Take grabs into account.\n\n        (find_window_for_event):\n        Only return grabbed window when owner_events is FALSE.\n\n2006-04-13  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_header_focus): Reorganize slightly\n\tto avoid a possible NULL dereference.  (Coverity)\n\n2006-04-12  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_get_arrow_xrange): Don't\n\tallow passing NULL for x1 or x2, adjust callers.\n\n\t* gtk/gtktreeviewcolumn.c (_gtk_tree_view_column_get_neighbor_sizes): \n\tReorganize to avoid a possible NULL pointer dereference.  (Coverity)\n\n        * gtk/gtknotebook.c (gtk_notebook_page_allocate): Reorganize\n        to avoid a possible NULL dereference.  (Coverity)\n\n\t* gdk/x11/gdkimage-x11.c (gdk_image_new_bitmap): Handle\n\tclosed displays correctly.  (Coverity)\n\n        * contrib/gdk-pixbuf-xlib/Makefile.am:\n        * modules/engines/pixbuf/Makefile.am\n        * gdk-pixbuf/Makefile.am: Build fixes for Cygwin.  (#338262)\n\n\t* gdk/x11/gdkselection-x11.c (make_list): Make this work\n\tfor list == NULL.  (Coverity)\n\n\t* gdk/x11/gdkkeys-x11.c (gdk_keymap_get_entries_for_keycode): \n\tRearrange the code a bit.\n\n\t* gtk/gtktextlayout.c (gtk_text_layout_validate_yrange): \n\tHandle _gtk_text_line_get_data() returning NULL in all\n\tcases.  (Coverity)\n\n\t* gtk/gtkuimanager.c: Make find_menu_position and\n\tfind_toolbar_position void.  (#338100)\n\n2006-04-12  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/quartz/gdkkeys-quartz.c:\n        Handle page up and page down.\n\n2006-04-12  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/quartz/gdkdrawable-quartz.c:\n        (_gdk_quartz_drawable_release_context):\n        Don't flush if we're inside a begin_paint/end_paint pair.\n        \n        * gdk/quartz/gdkwindow-quartz.c:\n        (gdk_window_impl_quartz_end_paint):\n        Free clip region here.\n\n2006-04-12  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkuimanager.c (start_element_handler): Don't pass\n\ta negative value as string length to get_child_node().  (Coverity)\n\n\t* gtk/gtkicontheme.c (insert_theme): Handle dirs == NULL\n\tgracefully.  (Coverity)\n\n\t* gtk/gtknotebook.c (gtk_notebook_remove): Silently do nothing\n\tif the widget is not a child.  (Coverity)\n\n2006-04-11  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/x11/gdkkeys-x11.c (get_xkb): Return early in error\n\tcases.  (Coverity)\n\n\t* gtk/gtktextview.c (selection_motion_event_handler): Remove\n\tsome unused variables.\n\n\t* gtk/gtktreeview.c ((gtk_tree_view_search_position_func): Apply\n\ta patch from David Trowbridge to improve the positioning of the\n\tsearch popup.  (#338047)\n\n2006-04-11  Emmanuele Bassi  <ebassi@cvs.gnome.org>\n\n\t* gtk/gtkrecentmanager.c (gtk_recent_manager_init)\n\t(gtk_recent_manager_new): Remove the unneeded setting of the\n\tstorage file inside the constructor. (Murray Cumming)\n\t(build_recent_items_list): Reset the dirty bit when done rebuilding\n\tthe list from the storage file.\n\n2006-04-11  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkscale.c (gtk_scale_get_layout_offsets): Silence\n\tcompiler warnings.\n\n\t* gtk/gtkinputdialog.c (gtk_input_dialog_set_mapping_mode): Don't\n\tdereference info before checking it for NULL.  (Coverity)\n\n2006-04-11  Anders Carlsson  <andersca@mac.imendio.com>\n\n        * gdk/quartz/GdkQuartzView.c:\n        (-[GdkQuartzView drawRect:]):\n        * gdk/quartz/gdkdrawable-quartz.c:\n        (gdk_quartz_ref_cairo_surface):\n        (_gdk_quartz_drawable_get_context):\n        (_gdk_quartz_drawable_release_context):\n        * gdk/quartz/gdkwindow-quartz.c:\n        (gdk_window_impl_quartz_finalize):\n        (gdk_window_impl_quartz_class_init):\n        (gdk_window_impl_quartz_begin_paint_region):\n        (gdk_window_impl_quartz_end_paint):\n        (gdk_window_impl_quartz_invalidate_maybe_recurse):\n        (gdk_window_impl_quartz_process_updates):\n        (gdk_window_impl_quartz_paintable_init):\n        (_gdk_window_impl_quartz_get_type):\n        * gdk/quartz/gdkwindow-quartz.h:\n        Have GdkWindowImplQuartz implement GdkPaintable.\n\n2006-04-10  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtktextbufferrichtext.c (gtk_text_buffer_deserialize):\n\tpasted rich text should not be affected by tags that are active at\n\tthe insertion point. Therefore, remove and remember all active\n\ttags, and re-apply them left and right of the inserted text after\n\tpasting. Fixes bug #337653.\n\n2006-04-11  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/gdkinternals.h:\n        * gdk/gdkwindow.c:\n        (_gdk_paintable_get_type):\n        (gdk_window_begin_paint_region):\n        (gdk_window_end_paint):\n        (gdk_window_process_updates):\n        (gdk_window_invalidate_maybe_recurse):\n        Add new GdkPaintable interface which implementation objects can \n        implement in order to override gdk painting functions.\n\n2006-04-10 Vladimer Sichinava  <vlsichinava@gmail.com>\n\n        * configure.in: Added \"ka\" (Georgian) to ALL_LINGUAS\n\n2006-04-07  Hans Breuer  <hans@breuer.org>\n\n\t* gtk/makefile.msc.in tests/makefile.msc : updated\n\n2006-04-06  Tor Lillqvist  <tml@novell.com>\n\n\tCorrect the appearance of non-square icons and cursors: pad them\n\tto square so that Windows won't stretch them.\n\n\t* gdk/win32/gdkcursor-win32.c (create_alpha_bitmap)\n\t(create_color_bitmap): Always create square bitmaps, take only\n\tside length as argument.\n\t(pixbuf_to_hbitmaps_alpha_winxp, pixbuf_to_hbitmaps_normal):\n\tCorresponding changes.\n\n2006-04-05  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktextview.c (text_window_realize): Lower the window, to\n\tprevent late-constructed text windows from covering child \n\twidgets.  (#336796, Yevgen Muntyan)\n\n\t* gtk/gtkmain.c (gtk_grab_add, gtk_grab_remove, gtk_grab_notify) \n\t(gtk_grab_notify_foreach): Rework the code which emits ::grab-notify\n\tsignals to ensure that we emit enough signals. Also optimize the\n\tcode to not do unnecessary tree walking.\n\n\t* gtk/gtkwidget.c (gtk_widget_class_init): Document ::grab-notify.\n\n2006-04-05  Paolo Borelli  <pborelli@katamail.com>\n\n\t* gtk/gtktextiter.c (gtk_text_iter_ends_line): handle the case of \\r\n\tand \\n split across lines. Bug #337022.\n\t* tests/testtextbuffer.c: add unit test.\n\nTue Apr  4 12:25:36 2006  S\u00f8ren Sandmann  <sandmann@redhat.com>\n\n\t* gdk/x11/gdkimage-x11.c (gdk_image_class_init): Add \"_private\" to\n\tmake it build.\n\n2006-04-04  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdkdisplay.c: \n\t* gdk/gdkdisplaymanager.c:\n\t* gdk/gdkdraw.c:\n\t* gdk/gdkkeys.c:\n\t* gdk/gdkpixmap.c:\n\t* gdk/gdkscreen.c:\n\t* gdk/gdkwindow.c:\n\t* gdk/x11/gdkcolor-x11.c:\n\t* gdk/x11/gdkdisplay-x11.c:\n\t* gdk/x11/gdkdnd-x11.c:\n\t* gdk/x11/gdkdrawable-x11.c:\n\t* gdk/x11/gdkgc-x11.c:\n\t* gdk/x11/gdkimage-x11.c:\n\t* gdk/x11/gdkinput.c:\n\t* gdk/x11/gdkpixmap-x11.c:\n\t* gdk/x11/gdkscreen-x11.c:\n\t* gdk/x11/gdkwindow-x11.c: Use G_DEFINE_TYPE.\n\n\t* gdk/x11/gdkcolor-x11.c: \n\t* gdk/x11/gdkdnd-x11.c:\n\t* gdk/x11/gdkimage-x11.c: Use instance private data.\n\n2006-04-03  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdkrgb.c: Get rid of a duplicate copy of the visual names.\n\n\t* gtk/gtkmain.c: Make gtk_args const.\n\n\t* gtk/gtkicontheme.c (pixbuf_supports_svg): Save one static.\n\n\t* gtk/gtkrecentchooser.c (gtk_recent_chooser_error_quark):\n\t* gtk/gtkrecentmanager.c (gtk_recent_manager_error_quark):\n\t* gtk/gtkfilechooser.c (gtk_file_chooser_error_quark):\n\t* gtk/gtkfilesystem.c (gtk_file_system_error_quark):\n\t* gtk/gtkicontheme.c (gtk_icon_theme_error_quark): No point\n\tin making the error path fast by caching quarks. \n\n\t* gtk/gtkfilesel.c (no_stat_dirs): Avoid relocation.\n\n\t* gdk/gdk.c: Here too.\n\n\t* gdk/gdkinternals.h: \n\t* gdk/x11/gdkmain-x11.c: \n\t* gdk/win32/gdkmain-win32.c: \n\t* gdk/directfb/gdkdisplay-directfb.c: \n\t* gdk/quartz/gdkmain-quartz.c: Make _gdk_windowing_args const.\n\n\t* gdk/win32/gdkpixmap-win32.c: Include gdkscreen.h  (#337032,\n\t Kazuki IWAMOTO)\n\n\t* gtk/gtkprogressbar.c (gtk_progress_bar_set_text): Mention\n\tthat %NULL is allowed.  (#336937, Christian Neumair)\n\n\t* gtk/gtkmain.c: Get rid of an unnecessary static variable.\n\n\t* gtk/gtktextlayout.c: Fix a warning.\n\t\n\t* gtk/gtktextsegment.h: \n\t* gtk/gtktextsegment.c: \n\t* gtk/gtktextchild.c:\n\t* gtk/gtktextbtree.c:\n\t* gtk/gtktextmark.c: \n\t* gtk/gtktexttypes.h: Make the segment class pointers const.\n\n\t* gtk/gtktextbufferserialize.c: Make parser struct const.\n\t\n\t* gtk/gtkuimanager.c: Make parser struct const.\n\n\t* gtk/gtklinkbutton.c: Make the default colors const.\n\n\t* gtk/gtkuimanager.c: Avoid relocations. \n\n\t* gtk/gtkxembed.c (_gtk_xembed_message_name): Reduce size of static\n\tbuffer.\n\n\t* gtk/gtktext.c (gtk_text_key_press): Avoid relocations.\n\n\t* gtk/gtkrc.c (gtk_rc_add_initial_default_files) \n\t(gtk_rc_add_default_file): Allocate the gtk_rc_default_files array\n\tdynamically.\n\n2006-04-02  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkrc.c: Avoid relocations for the array of symbol names. \n\n\t* gtk/gtkruler.c: Remove unused strings from the ruler_metrics \n\tstructs, to avoid relocations.  (#336917, Stephane Chauveau)\n\n2006-04-02  Emmanuele Bassi  <ebassi@cvs.gnome.org>\n\n\t* gtk/gtkrecentmanager.c (gtk_recent_manager_set_filename): Build\n\tthe items list after setting the storage file.\n\n\t* gtk/gtkrecentmanager.c (display_closed): Use the right string\n\tfor unsetting the default manager object from the screen.\t\n\n2006-04-01  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gtk/gtkfilesel.c (gtk_file_selection_get_filename): Oops. (#336784)\n\n2006-04-01  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gtk/gtkfilesel.c (gtk_file_selection_get_filename): Use a GString\n\tinstead of static buffer to reduce .bss by 8kb. (#336784)\n\n2006-04-01  Dom Lachowicz <cinamod@hotmail.com>\n\n\t* modules/engines/ms-windows/msw_style.c (draw_hline): Emulate WinXP's\n\tdrawing of menu separators\n\t\n2006-03-31  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gtk/gtkrecentmanager.c: Convert filenames to UTF-8 before printing\n\tthem out in warning messages. (#336770, Morten Welinder)\n\n2006-03-31  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gtk/gtkrecentmanager.c (gtk_recent_info_last_application): Update\n\tlast_stamp inside the look. (#336771, Morten Welinder)\n\n2006-03-31  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gtk/gtkrecentchoosermenu.c (gtk_recent_chooser_menu_get_property):\n\tAdd missing break. (#336769, Morten Welinder)\n\n2006-03-31  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gtk/gtkfilesystem.c (gtk_file_system_get_bookmark_label):\n\t* gtk/gtklinkbutton.c (gtk_link_button_new_with_label): Return NULL\n\tinstead of FALSE in g_return_val_if_fail in a pointer-returning\n\tfunction. (#336764, Morten Welinder)\n\n2006-04-01  Gora Mohanty  <gmohanty@cvs.gnome.org>\n\n\t* configure.in: Added 'or' (Oriya) to ALL_LINGUAS.\n\n2006-03-31  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkrecentmanager.c (gtk_recent_info_get_age): Don't\n\tassert that the age is positive.  (#336773, Morten Welinder)\n\n2006-03-31  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkicontheme.c (load_icon_data): Don't leak the keyfile \n\tparser in the error case. \n\t\n\t* gtk/gtkicontheme.c (load_icon_data, free_unthemed_icon) \n\t(icon_data_free, load_themes):\n\t* gtk/gtkiconcache.c (_gtk_icon_cache_get_icon_data): Use the slice\n\tallocator for GtkIconData and UnthemedIcon structs.\n\n2006-03-30  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gtk/gtkcalendar.c: Fix translation comments for localizable\n\tdigit formats. (fixes bug #336650)\n\n2006-03-30  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkrecentmanager.h (struct _GtkRecentData): Fix the doc\n\tcomment format.\n\n\t* gtk/gtkrecentmanager.c (gtk_recent_manager_has_item) \n\t(gtk_recent_manager_purge_items, gtk_recent_manager_lookup_item) \n\t(gtk_recent_manager_get_limit, gtk_recent_manager_add_full) \n\t(gtk_recent_manager_get_items, gtk_recent_manager_remove_item): \n\n\t* gtk/gtkrecentfilter.c (gtk_recent_filter_add_age): \n\t* gtk/gtkrecentchooser.c (gtk_recent_chooser_set_show_numbers) \n\t(gtk_recent_chooser_set_sort_func): \n\t* gtk/gtknotebook.h (gtk_notebook_set_tab_detachable): Sync\n\tparameter names between .c and .h files to help gtk-doc.\n\n\t* gdk/gdkregion-generic.c (gdk_region_get_clipbox): Reword\n\tdocs to help gtk-doc.\n\n\t* docs/tools/widgets.c (get_all_widgets): Add \n\tGtkRecentChooserDialog.\n\n\t* gtk/gtkdnd.c (gtk_drag_get_icon): Make sure to get an\n\ticon window when constructing the fallback_icon. This\n\tfixes a crash when dragging icons between screens in\n\tnautilus.  (#325751, Hylke van der Schaaf)\n\n2006-03-30  Michael Emmel  <mike.emmel@gmail.com>\n\n\t* gdk/directfb/gdkpixmap-directfb.c implement\n\t    (gdk_pixmap_foreign_new_for_screen)\n\n2006-03-30  Emmanuele Bassi  <ebassi@cvs.gnome.org>\n\n\tAdd documentation for the GtkLinkButton (#336592)\n\n\t* docs/reference/tmpl/gtklinkbutton.sgml: Add description\n\tof the GtkLinkButton.\n\n\t* docs/reference/gtk/migrating-GtkLinkButton.sgml: Guidelines\n\tfor migrating code from GnomeHRef to the GtkLinkButton.\n\n\t* docs/reference/gtk/gtk-docs.sgml:\n\t* docs/reference/gtk/Makefile.am: Build glue for the porting\n\tguide.\n\n2006-03-29  Matthias Clasen <mclasen@redhat.com>\n\n\t* gdk/gdk.symbols:\n\t* gdk/gdkpixmap.h:\n\t* gdk/win32/gdkpixmap-win32.c:\n\t* gdk/x11/gdkpixmap-x11.c (gdk_pixmap_foreign_new_for_screen):\n\tNew function to allow wrapping a native pixmap without\n\ta server roundtrip.  (#334954, David Baron) \n\n\t* gtk/gtk.symbols:\n\t* gtk/gtkrecent*.c: Fix some symbol aliasing glitches.\n\n2006-03-29  Emmanuele Bassi  <ebassi@cvs.gnome.org>\n\n\t* gtk/gtkrecentchoosermenu.c: Make gtkalias.h the last included file.\n\n2006-03-29  Emmanuele Bassi  <ebassi@cvs.gnome.org>\n\n\t* gtk/gtk.symbols: Fix a typo that broke aliasing rules.\n\n2006-03-29  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz/gdkproperty-quartz.c: Add missing CLIPBOARD atom.\n\n2006-03-29  Emmanuele Bassi  <ebassi@cvs.gnome.org>\n\n\t* docs/reference/gtk/migrating-GtkRecentChooser.sgml: Add a migration\n\tguide for porting to the new GtkRecent stuff from the old EggRecent\n\tcode.\n\n\t* docs/reference/gtk/tmpl/gtkrecentchooser.sgml:\n\t* docs/reference/gtk/tmpl/gtkrecentchooserdialog.sgml:\n\t* docs/reference/gtk/tmpl/gtkrecentchoosermenu.sgml:\n\t* docs/reference/gtk/tmpl/gtkrecentchooserwidget.sgml:\n\t* docs/reference/gtk/tmpl/gtkrecentfilter.sgml:\n\t* docs/reference/gtk/tmpl/gtkrecentmanager.sgml: Add template files\n\tfor the reference guide.\n\n\t* docs/reference/gtk/gtk-docs.sgml:\n\t* docs/reference/gtk/gtk-sections.txt:\n\t* docs/reference/gtk/Makefile.am: Build glue for add GtkRecent to\n\tthe reference guide.\n\n2006-03-29  Emmanuele Bassi  <ebassi@cvs.gnome.org>\n\n\t* tests/Makefile.am:\n\t* tests/testrecentchooser.c: Add a test suite for GtkRecentChooser.\n\n2006-03-29  Emmanuele Bassi  <ebassi@cvs.gnome.org>\n\n\tImport GtkRecent* from libegg.\n\n\t* gtk/gtkrecentmanager.[ch]: Add GtkRecentManager, an object\n\tfor managing a list of recently used resources.\n\n\t* gtk/gtkrecentchooser.[ch]:\n\t* gtk/gtkrecentchooserdefault.[ch]:\n\t* gtk/gtkrecentchooserdialog.[ch]:\n\t* gtk/gtkrecentchoosermenu.[ch]:\n\t* gtk/gtkrecentchooserprivate.h:\n\t* gtk/gtkrecentchooserutils.[ch]:\n\t* gtk/gtkrecentchooserwidget.[ch]: Add GtkRecentChooser, a\n\tGTypeInterface for widgets implementing viewers for recently\n\tused resources.\n\n\t* gtk/gtkrecentfilter.[ch]: GtkRecentFilter, a filter object\n\tfor GtkRecentChooser implementations.\n\n\t* gtk/gtk.h:\n\t* gtk/gtk.symbols:\n\t* gtk/Makefile.am: Build glue for GtkRecent*.\n\n2006-03-29  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtknotebook.c (gtk_notebook_real_insert_page): Emit\n\tpage-added before switch-page.  (#335691, Christian Persch)\n\n2006-03-29  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkfilechooserdefault.c (queue_edited_idle): Handle\n\tdouble queuing, rather than asserting that it does not \n\thappen.  (#330617)\n\n2006-03-28  Matthias Clasen  <mclasen@redhat.com>\t\n\n\t* gtk/gtknotebook.c (gtk_notebook_set_tab_detachable): Fix\n\tdocs syntax, also commit a patch from #335707 to improve\n\tnotebook DND with window widgets.\n\n\t* gtk/gtktextview.c (gtk_text_view_start_selection_drag): \n\t(selection_motion_event_handler): Fix drag-selection after\n\tdouble-click.  (#323862, Benjamin Berg)\n\n\t* gtk/gtktextview.c (get_iter_at_pointer): Factor this out\n\tinto a function and use it in move_mark_to_pointer_and_scroll,\n\tdrag_scan_timeout and selection_motion_event_handler.\n\t(Paolo Borelli)\n\n2006-03-28  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktextview.c (gtk_text_view_do_popup) \n\t(gtk_text_view_grab_notify): Move the call to \n\tgtk_text_view_end_selection_drag() from gtk_text_view_do_popup\n\tto gtk_text_view_grab_notify, so that it works not only\n\tfor the text views own popup, but also for other ways in which\n\twe might become grab-shadowed during a selection drag.\n\t(#74620, Li Yuan)\n\n2006-03-28  Sven Herzberg  <herzi@gnome-de.org>\n\n        reviewed by: Tim Janik\n\t\n\t* gtk/gtkpixmap.c: (gtk_pixmap_set): only check for equal colormaps if\n\tthe new pixmap is not NULL; fixes a warning when gtk_pixmap_set is\n\tcalled from gtk_pixmap_finalize (bug 336254)\n\n2006-03-27  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/quartz/gdkevents-quartz.c:\n        (select_thread_func):\n        (got_fd_activity):\n        (poll_func):\n        (gdk_event_translate):\n        Make the poll func work with real file descriptors.\n        We do this by creating a thread which calls poll and then\n        signals the main thread using a run loop source.\n        \n        * gtk/gtkclipboard-quartz.c:        \n        (-[GtkClipboardOwner pasteboard:provideDataForType:]):\n        Remove debugging output\n\n2006-03-27  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkmnemonichash.c (_gtk_mnemonic_hash_activate): Check that \n\tthe widget is viewable.  (#336200, Bastian Nocera)\n\n2006-03-27  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkmenu.c (gtk_menu_scroll_by): bail out if there is no need\n\tfor scrolling (more obvious than adding additional conditions to\n\tthe scroll offset calculation). Fixes bug #335912.\n\n2006-03-27  Anders Carlsson  <andersca@imendio.com>\n\n        * gtk/Makefile.am:\n        Add -xobjective-c to cflags.\n        (#335956, Lllian Angel)\n        \n        * gtk/gtkdnd-quartz.c:\n        (gtk_drag_dest_set_track_motion):\n        (gtk_drag_dest_get_track_motion):\n        Add stubs for new functions.\n        (#335955, Lillian Angel)\n        \n2006-03-27  Richard Hult  <richard@imendio.com>\n\n\t* gdk/quartz: Add more stubs.\n\n2006-03-27  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkcellrenderertext.c (gtk_cell_renderer_text_get_property):\n\tadd missing ')'.\n\n2006-03-26  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/Makefile.am: Fix a srcdir != builddir build problem.\n\t(#335915, Yevgen Muntyan)\n\n\t* gtk/gtktextbuffer.c (gtk_text_buffer_get_property):\n\t* gtk/gtksettings.c (gtk_settings_get_property):\n\t* gtk/gtkuimanager.c (gtk_ui_manager_get_property): Fix leaks.\n\n\t* gtk/gtktexttag.c (gtk_text_tag_get_property):\n\t* gtk/gtkcellrenderertext.c (gtk_cell_render_text_get_property):\n\tAvoid an unnecessary strdup.  (#336013)\n\n2006-03-24  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktextview.c (gtk_text_view_value_changed): Don't call\n\tgdk_window_invalidate_rect() on unrealized widgets.  (#335717,\n\tNicolas Setton)\n\nFri Mar 24 14:53:20 2006  Tim Janik  <timj@imendio.com>\n\n\t* gtk/gtktreemodel.h: \n\t* gtk/gtktextbtree.h: back out G_GNUC_WARN_UNUSED_RESULT on iterator\n\tfunctions which turned out to cause too much trouble.\n\n2006-03-23  Matthias Clasen  <mclasen@redhat.com>\n\n\t* AUTHORS: small update\n\n2006-03-23  Matthias Clasen  <mclasen@redhat.com>\n\n\tSupport subclasses in RC files.  (#142417, Todd Berman, patch\n\tbased on a patch by Benjamin Berg)\n\t\n\t* gtk/gtkrc.h: \n\t* gtk/gtkrc.c: Support <classname> elements in widget_class paths \n\tin rc files which match any classes derived from named class.\n\n\t(_gtk_rc_init): Use the new syntax in the default rc string.\n\n\t* gtk/gtkbindings.c: Support the new syntax for bindings too.\n\t\n\t* tests/testrc.c: Tests for widget_class path matching\n\n2006-03-23  Carlos Garnacho  <carlosg@gnome.org>\n\n\t* gtk/gtkdnd.c (gtk_drag_dest_motion): make sure that gdk_drag_event()\n\tis called when track_motion is TRUE to receive drag_motion and\n\tdrag_leave events properly.\n\n2006-03-22  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtknotebook.c (gtk_notebook_remove): Emit the ::page-removed\n\tsignal after removing the page.  (#335238, Christian Persch)\n\n2006-03-22  Carlos Garnacho  <carlosg@gnome.org>\n\n\t* gtk/gtkexpander.c: Make it to expand when hovering during DnD\n\n2006-03-22  Matthias Clasen  <mclasen@redhat.com>\n\n\tImproved DND support for GtkNotebook  (#332991, Carlos Garnacho)\n\t\n\t* gtk/gtk.symbols: \n\t* gtk/gtkdnd.h: \n\t* gtk/gtkdnd.c: Add a track_motion flag on GtkDragDest\n\twith getter and setter, for cases where the drag destination\n\tis interested in drag motion events independent of targets.\n\n\t* gtk/gtksettings.c (gtk_settings_class_init): Add a setting\n\tfor the timeout used when expanding during DND.\n\n\t* gtk/gtknotebook.c: Use the track_motion flag to switch\n\tnotebook tabs when hovering over tabs during DND.\n\t\n2006-03-22  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_bin_expose): Use fg_gc to\n\tdraw the inter-row drop highlight. Also draw the line all the \n\tway across, and flip it in RTL mode. (#334906, Ian McDonald)\n\n2006-03-22  Johan Dahlin  <jdahlin@async.com.br>\n\n\t* tests/testtreeview.c: Add a column that demonstrates how to use\n\tthe new spinbutton cellrenderer.\n\n2006-03-22  Matthias Clasen  <mclasen@redhat.com>\n\n\t* tests/prop-editor.c: \n\t* tests/testtreeview.c: Remove pointless includes of config.h,\n\tto make it easier compilable against system GTK+.\n\n2006-03-22  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkentry.c: renamed last-char-timeout to\n\tpassword-hint-timeout and store all its data in a struct attached\n\tas QData.\n\n\t* gtk/gtkcellrendererspin.c: fix typo in #include.\n\n2006-03-22  Carlos Garnacho  <carlosg@gnome.org>\n\n\t* gtk/gtknotebook.c: send a GtkWidget** instead of a GtkNotebookPage*\n\twhen doing tabs DnD, this allows DnD interaction with other widgets,\n\tadded some docs for this too.\n\t* tests/testnotebookdnd.c: add some code to test it.\n\n2006-03-22  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtk.symbols: \n\t* gtk/gtkcellrendererspin.h:\n\t* gtk/gtkcellrendererspin.c: Add a cell renderer which \n\tuses a spinbutton to edit the value of a cell. (#156023,\n\tDaniel Kasak, Lorenzo Gil Sanchez, Carlos Garnacho)\n\n\t* gtk/gtk.h: \n\t* gtk/Makefile.am: Glue it in.\n\n2006-03-21  Matthias Clasen  <mclasen@redhat.com>\n\n\t* tests/testtreeview.c (drag_begin_cb): Test setting up\n\tdrag icons for tree dnd.\n\n2006-03-22  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkentry.c: applied modified patch from maemo-gtk which\n\tallows the most recently entered character in a hidden entry to be\n\tshown for a configurable period of time. Fixes bug #334560.\n\n2006-03-22  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtktextbuffer.h (enum GtkTextBufferTargetInfo): count down\n\tfrom G_MAXUINT to avoid clashes with application-added DND\n\ttargets.\n\n\t* gtk/gtktextview.c (gtk_text_view_init): set an empty\n\tGtkTargetList on the drag_dest so it is not NULL when a derived\n\tclass' init() function is called.\n\n\t(gtk_text_view_target_list_notify): copy the text buffer's paste\n\ttargets into the view's destinstion target list (preserving\n\tapplication-added DND targets), instead of replacing the view's\n\ttarget list. Fixes bug #334399.\n\n2006-03-21  Anders Carlsson  <andersca@imendio.com>\n\n        * gtk/Makefile.am:\n        Add new files.\n        \n        * gtk/gtkclipboard-quartz.c: Added.\n        * gtk/gtkdnd-quartz.c: Added.\n        * gtk/gtkquartz.c: Added.\n        * gtk/gtkquartz.h: Added.\n        Add dnd and clipboard implementations.\n\n2006-03-21  Michael Natterer  <mitch@imendio.com>\n\n\t* gdk/quartz/Makefile.am: removing trailing \\ fixes the build.\n\n2006-03-21  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/quartz/gdkgeometry-quartz.c:\n        (gdk_window_scroll):\n        Implement gdk_window_scroll.\n\n2006-03-21  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/quartz/GdkQuartzWindow.c:\n        (drag_operation_to_drag_action):\n        (drag_action_to_drag_operation):\n        (update_context_from_dragging_info):\n        (-[GdkQuartzWindow draggingEntered:]):\n        (-[GdkQuartzWindow draggingEnded:]):\n        (-[GdkQuartzWindow draggingExited:]):\n        (-[GdkQuartzWindow draggingUpdated:]):\n        (-[GdkQuartzWindow performDragOperation:]):\n        (-[GdkQuartzWindow wantsPeriodicDraggingUpdates]):\n        (-[GdkQuartzWindow draggedImage:endedAt:operation:]):\n        * gdk/quartz/gdkdnd-quartz.c:\n        (gdk_drag_context_finalize):\n        (gdk_drag_context_init):\n        (gdk_drag_context_class_init):\n        (gdk_drag_begin):\n        (gdk_drag_status):\n        Add the GDK part of the DND implementation.\n\n        * gdk/quartz/Makefile.am:\n        Add some missing headers.\n        \n        * gdk/quartz/gdkdrawable-quartz.h:\n        * gdk/quartz/gdkprivate-quartz.h:\n        * gdk/quartz/gdkquartz.h:\n        * gdk/quartz/gdkwindow-quartz.c:\n        (gdk_quartz_window_get_nsview):\n        New function, for use by the GTK part of the DND implementation\n\n2006-03-21  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/quartz/gdkdrawable-quartz.c:\n        (gdk_quartz_ref_cairo_surface):\n        (gdk_quartz_draw_rectangle):\n        (gdk_quartz_draw_arc):\n        (gdk_quartz_draw_polygon):\n        (gdk_quartz_draw_drawable):\n        (gdk_quartz_draw_segments):\n        (gdk_quartz_draw_lines):\n        (gdk_quartz_draw_pixbuf):\n        (gdk_quartz_draw_image):\n        (_gdk_quartz_drawable_get_context):\n        * gdk/quartz/gdkdrawable-quartz.h:\n        Offset coordinates by 0.5 pixels to get consistant results for both\n        image contexts and screen contexts.\n\n2006-03-21  Anders Carlsson  <andersca@imendio.com>\n\n\t* gdk/quartz/GdkQuartzWindow.c \n\t([GdkQuartzWindow -windowDidMove:]): Synthesize GDK_CONFIGURE events\n\twhen the window position changes.\n\n2006-03-20  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkdnd.c (gtk_drag_get_cursor): Remove an unused variable.\n\n\t* gtk/gtknotebook.c (gtk_notebook_remove_tab_label): Don't leave\n\tpage->tab_label dangling.\n\t(gtk_notebook_real_remove): Use GTK_IN_DESTRUCTION to determine\n\tif we are being called during destruction of the notebook, rather\n\tthan maintaining that information as a passed-in parameter.\n\t(gtk_notebook_destroy): Leave the removal of the children\n\tto the container destroy method.  (#319032, Yevgen Muntyan)\n\n2006-03-20  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkcombobox.c (gtk_combo_box_remove): Use the existing\n\tGTK_IN_DESTRUCTION flag, rather than roll our own.\n\n2006-03-20  Matthias Clasen  <mclasen@redhat.com>\n\t\n\t* gtk/gtk.symbols: \n\t* gtk/gtkscrolledwindow.h: \n\t* gtk/gtkscrolledwindow.c: Add a window-placement-set property\n\tand a gtk-scrolled-window-placement setting.  (#157025, Christian\n\tNeumair)\n\n2006-03-20  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkmain.c (gtk_get_option_group): Make sure gettext\n\tis initialized before using it.  (#335129, Christian Persch)\n\n2006-03-19  Matthias Clasen  <mclasen@redhat.com>\n\n\t* MAINTAINERS: Add this, at the request of the GNOME sysadmin team.\n\n\t* AUTHORS: Updates, typo fix\n\n\t* gtk/gtkiconview.c (gtk_icon_view_set_cursor): Document that\n\t@cell must be one of the renderers of the icon view, warn if \n\tit is not, and ignore @start_editing if @cell is not set.\n\t(#335001, Emmanuel Rodriguez)\n\n2006-03-16  Matthias Clasen  <mclasen@redhat.com>\n\n\t* configure.in: Add a missing comma.  (#334774, Peter Breitenlohner)\n\n\t* gtk/gtkactiongroup.c (gtk_action_group_add_actions_full) \n\t(gtk_action_group_add_toggle_actions_full) \n\t(gtk_action_group_add_radio_actions_full): Check for a stock \n\ticon, not a stock item, when deciding whether to use stock-id \n\tor icon-name.  (#334760, Jody Goldberg)\n\n\t* gtk/gtkimage.c (gtk_image_clear): Update the size of the image, \n\tby swapping the implementations of gtk_image_clear and\n\tgtk_image_reset.  (#334657)\n\n\t* README.in: Add a note about GtkNotebook signals.\n\n2006-03-15  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkcombobox.c (gtk_combo_box_list_button_released) \n\t(gtk_combo_box_list_key_press): Popdown the list before changing\n\tthe active iter, otherwise people will be surprised by the\n\tgrabs that are still in place when their ::changed handler\n\truns. \n\n2006-03-15  Dom Lachowicz <cinamod@hotmail.com>\n\n\t* modules/engines/ms-windows/msw_style.c: Override style->realize/\n\tstyle->unrealize, so that GTK+ doesn't automatically attempt to apply\n\tshading to the GC colors, causing a mismatch with the Win32 native\n\tcolors. Problem found by (and suggested solution by) \"Cosmic Integer\"\n\n\t* modules/engines/ms-windows/Theme/gtk-2.0/gtkrc: Make expander-size\n\ta bit closer to Microsoft's values (bug 325699, Brad Taylor)\n\t\n2006-03-14  Matthias Clasen  <mclasen@redhat.com>\n\n\t* tests/testcellrenderertext.c: Add test cases for alignment.\n\n\t* gtk/gtkcellrenderertext.c: Add an alignment property,\n\tand fix some cases where ellipsize_set was being used to\n\tmean \"we're ellipsizing\" even when ellipsize was set to NONE.  \n\t(#318761, Ross Burton)\n\n\t* gtk/gtkimcontextsimple.c: Make return and release work again\n\tto commit a hex sequence. Additionally, make escape reset the\n\tim context when in a hex sequence.  (#334423, Behdad Esfahbod)\n\n2006-03-13  Matthias Clasen  <mclasen@redhat.com>\n\n\tMake actions work with named icons.  (#323484, Jorn Baayen)\n\t\n\t* gtk/gtkactiongroup.c: If the stock-id field of a GtkActionEntry\n\tdoes not contain a registered stock id, interpret it as an\n\ticon name.\n\n\t* gtk/gtkaction.c: Add an icon-name property to actions and\n\tuse it for icons if a stock-id is not specified.\n\n2006-03-12  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkwindow.c (gtk_window_compute_configure_request): Don't\n\tfor the creation of geometry info here.  (#114533)\n\n2006-03-11  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkdrawable-win32.c (draw_polygon): Use Polygon() for\n\toutlined polygons, too. Same idea as in draw_rectangle(): Set pen\n\tto NULL_PEN if drawing a filled polygon, set brush to HOLLOW_BRUSH\n\tif drawing a polygon outline. (#332662)\n\t(gdk_win32_draw_polygon): Corresponding simplification: no need to\n\tadd an extra final copy of the starting point.\n\n2006-03-11  Dom Lachowicz <cinamod@hotmail.com>\n\n\t* modules/engines/ms-windows: Speed up the Windows theme\n\tconsiderably (#163724, John Ehresman)\n\tBe more careful about setting Pango font descriptions (#333372)\n\t\n2006-03-11  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkrange.c (gtk_range_key_press): Allow to cancel \n\ta drag with ESC.  (#58389, S\u00f8ren Sandmann)\n\n2006-03-10  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkrange.c: Add a style property ::activate_slider that\n\tallows themes to draw the slider active while dragged.  (#311992,\n\tBenjamin Berg)\n\n\t* gtk/gtkcolorsel.c (gtk_color_selection_init): Fix two labels.\n\n\t* gtk-engine-check-abi.sh: Add a script to check that theme\n\tengines don't export any extra functions. \n\n2006-03-10  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkcolorsel.c (gtk_color_selection_init): Avoid a mnemonic\n\tconflict.  (#163850, Dennis Cranston)\n\n\t* gtk/gtkaboutdialog.c (gtk_show_about_dialog): Make the behaviour\n\tof the about dialog consistent with other dialogs in gtk. If the\n\tdialog is constructed with gtk_about_dialog_new(), the creator\n\tis reponsible for handling the response by hiding or closing the\n\tdialog. gtk_show_about_dialog() handles it by hiding the dialog.\n\t(#333360, Daniel Drake)\n\n\t* README.in: Mention this change.\n\n2006-03-10  Matthias Clasen  <mclasen@redhat.com>\n\n\tApply a patch from Dennis Cranston to make dialogs more\n\tconsistent  (#163850)\n\t\n\t* gtk/gtkcolorsel.c (make_label_spinbutton): Left-align labels.\n\t\n\t* gtk/gtkfontsel.c (gtk_font_selection_init): \n\t* gtk/gtkfontsel.c (gtk_font_selection_dialog_init): \n\t* gtk/gtkcolorsel.c (gtk_color_selection_init): \n\t* gtk/gtkcolorseldialog.c (gtk_color_selection_dialog_init): \n\t* gtk/gtkinputdialog.c (gtk_input_dialog_init): Update the layout\n\tof the dialog to follow HIG recommendations. Also update labels.\n\n\t* gtk/gtkmessagedialog.c (gtk_message_dialog_init): HIG-compatible \n\tspacing.\n\t(gtk_message_dialog_font_size_change): Merged into \n\t gtk_message_dialog_style_set.\n\n2006-03-10  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkstyle.c: Remove g_return_if_fail() checks\n\tfrom static functions.\n\n2006-03-10  Federico Mena Quintero  <federico@novell.com>\n\n\tMake Shift-P and Shift-N activate typeahead in GtkTreeView\n\t(i.e. they are just normal capital letters).  Fixes bug #334098.\n\n\t* gtk/gtktreeview.c (gtk_tree_view_add_move_binding): Add an\n\t\"add_shifted_binding\" argument which determines whether we'll add\n\tthe same binding with GDK_SHIFT_MASK.\n\t(gtk_tree_view_class_init): Use add_shifted_binding=FALSE for GDK_p\n\tand GDK_n; use TRUE for all the rest.\n\n2006-03-10  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkentry.[ch]: applied refactored patch from maemo-gtk that\n\treplaces the INNER_BORDER define by an \"inner-border\" style\n\tproperty of type GtkBorder. Additionally, add an \"inner-border\"\n\tobject property plus API which allows to override any theme\n\tborder, to allow pixel-perfect positioning of entries for inline\n\tediting. Fixes bug #333922.\n\n\t* gtk/gtk.symbols: add the new public functions.\n\n2006-03-09  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkcombobox.c (gtk_combo_box_class_init): Replace the\n\tpopup-show and popup-hide signals with a readonly popup-shown\n\tproperty.  (#162531, Christian Persch)\n\n2006-03-09  Ross Burton  <ross@openedhand.com>\n\n\t* gtk/gtkwidget.c:\n\t* gtk/gtkrange.c:\n\t* gtk/gtktogglebutton.c:\n\tTurn off prelighting when gtk-touchscreen-mode is enabled (#135666)\n\nThu Mar  9 14:29:43 2006  Tim Janik  <timj@gtk.org>\n\n\t* gtk/gtkobject.c (gtk_object_init): move the floating flag from\n\tthe GInitiallyUnowned bit to GTK_FLOATING. fixes tests/floatingcheck.\n\tkudos to mitch for debugging this.\n\n2006-03-09  Matthias Clasen <mclasen@redhat.com>\n\n\t* Makefile.am: Add ChangeLog.pre-2.8 to EXTRA_DIST.\n\n2006-03-09  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk/gtk.symbols: No gtk_tray_icon_get_type on Win32.\n\n2006-03-08  Carlos Garnacho  <carlosg@gnome.org>\n\n\tRename ::tab-added and ::tab-removed signals to ::page-added and\n\t::page-removed for not conflicting with other tab reordering\n\timplementations. Fixes bug #333743.\n\n\tAlso rename ::tab-reordered to ::page-reordered, and emit it in\n\tgtk_notebook_reorder_child () to make it behave consistently with the\n\tother two signals.\n\n\t* gtk/gtknotebook.c (gtk_notebook_class_init): rename signals.\n\t(gtk_notebook_reorder_tab)\n\t(gtk_notebook_button_release)\n\t(gtk_notebook_remove)\n\t(gtk_notebook_real_insert_page): emit respectively renamed signals\n\t(gtk_notebook_reorder_child): also emit ::page-reordered here\n\n\t* tests/testnotebookdnd.c: use renamed signals\n\n2006-03-08  Michael Natterer  <mitch@imendio.com>\n\n\t* gdk/gdkscreen.h\n\t* gdk/x11/gdkscreen-x11.c\n\t* gdk/gdk.symbols: added gdk_screen_get_active_window() and\n\tgdk_screen_get_window_stack() (patch from maemo-gtk).\n\tFixes bug #320881.\n\n\t* gdk/directfb/gdkscreen-directfb.c\n\t* gdk/quartz/gdkscreen-quartz.c\n\t* gdk/win32/gdkscreen-win32.c: added the functions as stubs.\n\n2006-03-08  Michael Natterer  <mitch@imendio.com>\n\n\t* tests/prop-editor.c (unichar_changed): zero-initialize the\n\tGValue before calling g_value_init().\n\n2006-03-08  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkentry.c (gtk_entry_adjust_scroll): make sure that the\n\ttext_area_width is always >= 0. Fixes bug #316712 (Dan Winship).\n\n2006-03-07  Federico Mena Quintero  <federico@novell.com>\n\n\tCancel drags when the grabs get broken.  Fixes bug #333056:\n\n\t* gtk/gtkdnd.c (gtk_drag_selection_received): The time argument is\n\ta guint, not guint32.\n\t(gtk_drag_source_event_cb): Return gboolean, not gint.\n\t(gtk_drag_anim_timeout): Likewise.\n\t(gtk_drag_motion_cb): Likewise.\n\t(gtk_drag_key_cb): Likewise.\n\t(gtk_drag_button_release_cb): Likewise.\n\t(gtk_drag_abort_timeout): Likewise.\n\t(gtk_drag_begin_internal): Connect to \"grab-broken-event\" on the\n\tipc_widget.\n\t(gtk_drag_source_info_destroy): Disconnect from the\n\t\"grab-broken-event\" callback.\n\t(gtk_drag_end): Likewise.\n\t(gtk_drag_grab_broken_event_cb): New callback.  We cancel the drag\n\tif the grab was broken and not regrabbed by the DnD code.\n\n2006-03-07  Federico Mena Quintero  <federico@novell.com>\n\n\t* gtk/gtkfilechooserdefault.c (shortcuts_button_press_event_cb):\n\tHack to let the treeview's button-press-event handler run before\n\tours.  This lets the selection be updated before we pop up a\n\tcontext menu.\n\nTue Mar  7 17:16:34 2006  Tim Janik  <timj@gtk.org>\n\n\t* configure.in: depend on glib-2.10.1.\n\n\t* gtk/gtkobject.c: fixed up messing with non-GtkObject floating flags.\n\tthis requires glib-2.10.1.\n\n2006-03-07  Michael Natterer  <mitch@imendio.com>\n\n\tAdd infrastructure for copy/paste and DND of rich text for\n\tGtkTextBuffer. Fixes bug #324177.\n\n\t* gtk/gtktextbufferrichtext.[ch]: new files implementing a\n\tper-buffer registry of rich text formats.\n\n\t* gtk/gtk.h: #include gtktextbufferrichtext.h\n\n\t* gtk/gtktextbufferserialize.[ch]: new files implementing an\n\tinternal serialization format that can handle all of a text\n\tbuffer's tags and pixbufs. It's not useful for anything except\n\ttranfer between instances of GtkTextBuffer (Anders Carlsson).\n\n\t* gtk/Makefile.am: build the new files.\n\n\t* gtk/gtkclipboard.[ch]: added convenience APIs for rich text,\n\tjust as they exist for plain text and pixbufs.\n\n\t* gtk/gtkselection.[ch]: added rich text convenience APIs here\n\ttoo.  Return the target list from gtk_target_list_ref(). Register\n\tGtkTargetList as boxed type. Added\n\tgtk_target_table_new_from_list() and gtk_target_table_free(),\n\twhich make converting between GtkTargetList and arrays of\n\tGtkTargetEntry considerably easier.\n\n\t* gtk/gtktextutil.[ch]: added _gtk_text_util_create_rich_drag_icon()\n\twhich creates a fancy rich text icon (Matthias Clasen).\n\n\t* gtk/gtktextbuffer.[ch]: use all the new stuff above and\n\timplement copy and paste of rich text. Added APIs for getting the\n\ttarget lists used for copy and paste. Added public enum\n\tGtkTextBufferTargetInfo which contains the \"info\" IDs associated\n\twith the entries of the target lists.\n\n\t* gtk/gtktextview.c: use the new rich text APIs and\n\tGtkTextBuffer's new target list API to enable DND of rich text\n\tchunks.\n\n\t* gtk/gtk.symbols: export all the new symbols added.\n\n\t* tests/testtext.c: added rich text testing stuff.\n\n2006-03-06  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktextview.c (text_window_invalidate_cursors): Take\n\tcursor width into account when calculating the area to \n\tbe invalidated.  (#333377, #323401 Steve Fr\u00e9cinaux)\n\n\t* gtk/gtkmain.c (post_parse_hook): Set error when returning\n\tFALSE.  (#333268, Paolo Maggi, Christian Persch)\n\t\n\t* gtk/gtkpixmap.c (gtk_pixmap_set): Check that the pixmap\n\thas the right depth.  (#333363, Ed Catmur)\n\n2006-03-05  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkiconview.c (adjust_wrap_width): Apply some\n\tarbitrary lower limit for the guessed wrap width. (#332466,\n\tDonald Straney)\n\n2006-03-05  Matthias Clasen  <mclasen@redhat.com>\n\n\tFix handling of image-only buttons.  (#332985, Kalle \n\tVahlmann, #333555)\n\t\n\t* gtk/gtkbutton.c (gtk_button_construct_child): Don't\n\treturn early if there an image to show.\n\t(show_image): Always return TRUE if there is no text.\n\n2006-03-04  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/x11/gdkinput-x11 (gdk_input_translate_coordinates):\n\tAdjust the handling of min values for the x and y axes of \n\textended input devices  (#324562, #142536, Denis Auroux and \n\tRobert \u00d6gren)\n\n\t* gtk/gtkexpander.c (gtk_expander_paint_focus): Position\n\tthe focus rectangle correctly in RTL mode.  (#333291,\n\tBenjamin Berg)\n\n2006-03-03  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk/gtkimcontextsimple.c (gtk_im_context_simple_commit_char)\n\t(gtk_im_context_simple_reset): Avoid emitting superfluous\n\tpreedit_changed signals. Thanks to Matthias. (#319407)\n\n2006-03-03  Michael Natterer  <mitch@imendio.com>\n\n\tApplied modified patch from maemo-gtk which makes separators more\n\tthemeable. Fixes bug #332022.\n\n\t* gtk/gtkwidget.c: added style properties \"wide-separators\",\n\t\"separator-width\" and \"separator-height\".\n\n\t* gtk/gtkhseparator.c\n\t* gtk/gtkvseparator.c\n\t* gtk/gtkmenuitem.c\n\t* gtk/gtktoolbar.c: honor the new settings and paint separators\n\tusing gtk_paint_box() if wide-separators is true.\n\n2006-03-02  Dom Lachowicz <cinamod@hotmail.com>\n\n\t* modules/engines/ms-windows/msw_style.c: Fix combobox theming\n\tregression noted in bug 321301\n\t* modules/engines/ms-windows/Theme/gtk-2.0/gtkrc: Ditto\n\t\n2006-03-02  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkiconview.c (gtk_icon_view_layout) \n\t(gtk_icon_view_row_inserted, gtk_icon_view_scroll_to_path): \n\tMake scroll_to_path work for newly inserted items, by delaying\n\tthe scroll until layout is done.  (#332923, Cory Dodt)\n\n\t* gtk/gtkcolorbutton.c (render): Use GTK_WIDGET_IS_SENSITIVE,\n\tnot GTK_WIDGET_SENSITIVE.  (#333133, Christian Persch)\n\n2006-03-02  Ross Burton  <ross@openedhand.com>\n\n\t* gtk/gtktooltips.c:\n\tDisable tooltips if gtk-touchscreen-mode is activated (#315112).\n\n2006-03-01  Kristian Rietveld  <kris@imendio.com>\n\n\t* gtk/gtktreeselection.c (row_is_selectable): rename to\n\t_gtk_tree_selection_row_is_selectable and export internally,\n\t(gtk_tree_selection_real_select_node): changed so it is always\n\tpossible to unselect insensitive nodes, changed the logic a bit to\n\tbe more clear.\n\n\t* gtk/gtktreeprivate.h: add _gtk_tree_selection_row_is_selectable.\n\n\t* gtk/gtktreeview.c (gtk_tree_view_row_changed): Unselect a row if\n\tit became insensitive.\n\n2006-02-27  Federico Mena Quintero  <federico@novell.com>\n\n\t* gtk/gtkfontsel.c (gtk_font_selection_set_font_name): Check that\n\tthe fontsel has a screen assigned before doing anything.  This\n\twill at least warn the caller of what is wrong, since we only\n\tpopulate the family_list until we get a screen.  Also, put the\n\treference docs here.  Fixes bug #332756.\n\t(gtk_font_selection_dialog_get_font_name): Document this here.\n\t(gtk_font_selection_get_font_name): Document this here; mention\n\tthat the font names get normalized, so the result of this function\n\tmay not be the same as what you set with\n\tgtk_font_selection_set_font_name().\n\n2006-02-27  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtktrayicon-x11.c: Fix symbol lists for make check.\n\n2006-02-27  Michael Natterer  <mitch@imendio.com>\n\n\t* gdk/x11/gdksettings.c: map \"gtk-touchscreen-mode\" to the\n\t\"Gtk/TouchscreenMode\" XSettings property, remove trailing\n\twhitespace.\n\n\t* gdk/x11/checksettings.c: #include <string.h> and sprinkled some\n\tnewlines.\n\nMon Feb 27 14:52:50 2006  Tim Janik  <timj@imendio.com>\n\n\t* gdkevents-x11.c:\n\t* gdksettings.c: moved and renamed the gdk_settings_names and \n\tgdk_settings_map.\n\n\t* gdk/x11/checksettings.c: test program for the gdk_settings_map array.\n\n\t* gdk/x11/Makefile.am: run checksettings as part of make check.\n\n2006-02-27  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkdnd.c (gtk_drag_get_cursor): Comment out some unused\n\tcode, and fix the reference point of composited drag cursors.\n\t(#320132, Christian Neumair)\n\nSun Feb 26 10:24:10 PST 2006  Michael Emmel  <mike.emmel@gmail.com>\n\t\n\t*gdk/directfb/README\n\tUpdated README to remove old build instructions\n\nSat Feb 25 10:35:23 PST 2006  Michael Emmel  <mike.emmel@gmail.com>\n\t\n\t*gdk/directfb/gdkdisplay-directfb.c\n\t*gdk/directfb/gdkwindow-directfb.c\n\tAdded stubs for shape window functions to fix compile problems\n\n2006-02-24  Federico Mena Quintero  <federico@novell.com>\n\n\t* gtk/gtkfilechooserdefault.c (shortcuts_list_create): Make the\n\tcolumn header visible, and make it be \"_Places\".  Changed the\n\taccessible object name to Places as well.  Fixes bug #331306.\n\t(file_pane_create): Do not create the path bar and \"create folder\"\n\tbutton here...\n\t(browse_widgets_create): ... but create them here instead.  This\n\tmoves the path bar to be above both the hpaned, giving it the full\n\twidth of the dialog.  Fixes bug #327733.\n\nThu Feb 23 13:28:21 2006  Tim Janik  <timj@imendio.com>\n\n\t* gdk/x11/gdkim-x11.c (_gdk_x11_initialize_locale): remove unconditional\n\twarnings about missing X locale support. Gdk properly handles this\n\tsituation anyway.\n\nFri Feb 17 14:20:29 2006  Tim Janik  <timj@imendio.com>\n\n\t* gtk/gtktreemodel.h: \n\t* gtk/gtktextbtree.h: added G_GNUC_WARN_UNUSED_RESULT warnings for\n\titerator functions, to avoid invalid iterators go unnoticed,\n\tsuggested by Markku Vire <markku.vire@movial.fi>.\n\n2006-02-23  Matthias Clasen  <mclasen@redhat.com>\n\n\t* tests/Makefile.am: \n\t* tests/testnotebookdnd.c: Add notebook DND tests.\n\n\t* gtk/gtknotebook.h: Add a reorder_tab keynav signal and an\n\tinsert_page vfunc to GtkNotebook.\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtknotebook.c: Support notebook DND. New API includes\n\tgtk_notebook_set_window_creation_hook, \n\tgtk_notebook_[gs]et_group_id,\n\tgtk_notebook_[gs]et_tab_reorderable, \n\tgtk_notebook_[gs]et_tab_detachable (#73240, Carlos Garnacho)\n\n2006-02-23  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktextiter.c: Fix macro declaration\n\n\t* gtk/gtkaboutdialog.c: Remove an accidentally included function.\n\n2006-02-22  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktextbtree.c: \n\t* gtk/gtktextiter.c: Minor optimizations.  (#332059, Arnaud Charlet)\n\n\t* gtk/gtkradiobutton.c (gtk_radio_button_clicked): Emit notify::active\n\there, when changing the value of this property.  (#331651)\n\n\t* gtk/gtknotebook.c: Apply a patch by Paolo Borelli to\n\tmake the tab menu keynavigatable.  (#331440)\n\n2006-02-22  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkaboutdialog.c: Change Close buttons to GTK_RESPONSE_CANCEL\n\tso Escape works. (#331940, Daniel Drake)\n\n2006-02-22  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtksettings.c: added boolean property gtk-touchscreen-mode,\n\twhich essentially means \"there are no motion notify events\", so\n\twidgets can't use the pointer hovering them for anything.\n\n\t* gtk/gtkmenu.c: if gtk-touchscreen-mode is TRUE, scroll menus\n\twhen clicking the scroll arrows, since hovering goes undetected.\n\tFixes bug #323028.\n\n\tAdded boolean style property \"double-arrows\" which always makes\n\tboth scroll arrows visible when the menu is too long.\n\tFor pushed-in popup menus, both arrows are always shown\n\t(regardless of double-arrows), in order to fix user confusion\n\tabout the blank area. Fixes bug #129463.\n\n2006-02-21  Kristian Rietveld  <kris@imendio.com>\n\n\t* gtk/gtktreemodelfilter.c (gtk_tree_model_filter_rows_reordered):\n\tMake sure we always update the virtual root, also when ->priv->root\n\tis still NULL.  (Markku Vire)\n\n2006-02-21  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/quartz/gdkselection-quartz.c:\n        (make_list):\n        (gdk_text_property_to_utf8_list_for_display):\n\tAdd these from the win32 backend.\n\n2006-02-20  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtknotebook.c: Properly update internal state\n\twhen child visibility changes.  (#331785, Sebastien Bacher)\n\n\t* gdk/gdkgc.c (_gdk_gc_update_context): Obtain the\n\tbackground color from the gc when it is needed.  (#331820)\n\n2006-02-19  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdkgc.c (_gdk_gc_update_context): Add a gc_changed\n\targument, and avoid setting the clip region if the gc\n\thas not changed. \n\n\t* gdk/gdkgc.c: Update all callers.\n\n\t* gdk/gdkpango.c (get_cairo_context): Avoid updating the\n\tcontext if nothing changed.\n\n2006-02-20  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/quartz/gdkdisplay-quartz.c:\n        (gdk_display_supports_shapes):\n        (gdk_display_supports_input_shapes):\n        * gdk/quartz/gdkwindow-quartz.c:\n        (gdk_display_warp_pointer):\n        (gdk_window_input_shape_combine_mask):\n        (gdk_window_input_shape_combine_region):\n        (gdk_window_set_child_input_shapes):\n        (gdk_window_set_accept_focus):\n        (gdk_window_merge_child_input_shapes):\n\tAdd stubs for input shape functions.\n\n2006-02-20  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/quartz/gdkevents-quartz.c:\n        (get_keyboard_modifiers_from_nsevent):\n\tFix typo so ctrl gets passed on to the gdk event.\n\t\n        * gdk/quartz/gdkproperty-quartz.c:\n        (gdk_atom_name):\n\tg_strdup the atom name.\n\n2006-02-20  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkdisplay-win32.c (gdk_display_supports_shapes):\n\tNew function, return TRUE.\n\t(gdk_display_supports_input_shapes): New function, return FALSE.\n\n\t* gdk/win32/gdkwindow-win32.c (do_shape_combine_region): New\n\tfunction. Factor out code from gdk_window_shape_combine_mask().\n\t(gdk_window_shape_combine_region): Actually do something. Convert\n\tregion to a HRGN and call do_shape_combine_region().\n\t(gdk_window_input_shape_combine_mask)\n\t(gdk_window_input_shape_combine_region)\n\t(gdk_window_set_child_input_shapes)\n\t(gdk_window_merge_child_input_shapes): New functions, dummy\n\timplementations.\n\n2006-02-20  Michael Natterer  <mitch@imendio.com>\n\n\t* gdk/x11/gdkdisplay-x11.h (struct _GdkDisplayX11): adding boolean\n\thave_shapes and have_input_shapes members fixes the build.\n\n2006-02-20  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkfont-win32.c: Replace all calls to g_strcasecmp()\n\twith g_ascii_strcasecmp().\n\n2006-02-19  Matthias Clasen  <mclasen@redhat.com>\n\n\tSupport input shapes:  (#331070)\n\t\n\t* gdk/gdk.symbols: \n\t* gdk/gdkdisplay.h: \n\t* gdk/gdkwindow.h: \n\t* gdk/x11/gdkdisplay-x11.c (gdk_display_supports_shapes) \n\t(gdk_display_supports_input_shapes): Functions to determine\n\tif a display supports shaped windows or input shapes.\n\n\t* gdk/x11/gdkwindow-x11.c (gdk_window_input_shape_combine_region): \n\t(gdk_window_input_shape_combine_mask): \n\t(gdk_window_set_child_input_shapes): \n\t(gdk_window_merge_child_input_shapes): Input shape versions\n\tof the window shape API.\n\n\t* gtk/gtk.symbols: \n\t* gtk/gtkwidget.h: \n\t* gtk/gtkwidget.c (gtk_widget_input_shape_combine_mask): \n\tNew function to set an input shape on a widget.\n\n2006-02-19  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtklinkbutton.c (gtk_link_button_class_init): Fix\n\ta cast.\n\n2006-02-17  Matthias Clasen  <mclasen@redhat.com>\n\n\tDND keynav support:\n\t\n\t* gtk/gtkdnd.c (gtk_drag_update_idle): Protect against \n\tinfo->last_event being NULL.\n\t(gtk_drag_key_cb): Handle arrow keys to move the drag icon\n\tand space or enter to drop.\n\n2006-02-17  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdkregion-generic.c (gdk_region_union_with_rect):\n\tBe robust and reject rectangles with negative width or\n\theight.  (#331467, Benjamin Berg)\n\n\n2006-02-17  Kristian Rietveld  <kris@imendio.com>\n\n\t* gtk/gtktreemodelfilter.c (gtk_tree_model_filter_rows_reordered):\n\tOnly update the virtual root if the child path is an ancestor\n\tof the virtual root.  (Patch from Markku Vire).\n\n2006-02-16  Federico Mena Quintero  <federico@novell.com>\n\n\t* gtk/gtkfilechooserdialog.c (gtk_file_chooser_dialog_map): Call\n\t::initial_focus() on the child before calling ::map() on our\n\tparent class.  This will prevent the shortcuts treeview from\n\thighlighting its first row as a result of getting assigned focus\n\tby gtk_dialog_map().\n\n2006-02-14  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkwidget.c (gtk_widget_send_expose): Remove redundant\n\tcheck.  Pointed out by Bodo-Merle Sandor.\n\n\t* gtk/gtkcolorbutton.c (gtk_color_button_[un]realize):\n\tRemove unnecessary checks.  \n\n2006-02-12  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkicontheme.c (gtk_icon_theme_list_icons): Give working\n\texamples in the docs.  (#330944, John Spray)\n\n2006-02-10  Matthias Clasen  <mclasen@redhat.com>\n\t\n\t* gtk/gtkiconview.c (gtk_icon_view_get_item_at_coords): Fix\n\trow_spacing/column_spacing confusion.  (#330732, Donald Straney)\n\n2006-02-10  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkstyle.c: Add some docs. (#330073, Mart Raudsepp)\n\n\t* gtk/gtkentrycompletion.c (gtk_entry_completion_match_selected): \n\tGuard against NULL.  (#330177, Raphael Slinckx)\n\n2006-02-10  Murray Cumming  <murrayc@murrayc.com>\n\n\t* docs/reference/gtk/tmpl/gtkcomboboxentry.sgml: Mention that \n\tthe changed signal is emitted when typing - not just when \n\tselecting from the list. Suggest use of GtkEntry::action to \n\tetect end of typing.\n\t gtk/gtkcombobox.c: (gtk_combo_box_class_init): changed signal \n\tocumentation: Mention that the GtkComboBoxEntry emits it when \n\the users types, not just when he selects from the list.\n\n2006-02-10  Murray Cumming  <murrayc@murrayc.com\n\n\t* gtk/gtkassistant.h: Correct the declaration of the prepare \n\tdefault signal handler to match its registration and use.\n\n2006-02-09  Ross Burton  <ross@burtonini.com>\n\n\t* gtk/gtkfontbutton.c:\n\tWork out the font size in floating point, and display the font\n\tsize with %g instead of %d (#317590)\n\n2006-02-09  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkevents-win32.c (gdk_event_translate)\n\t<WM_MOUSELEAVE>: If we don't know where we went, and have\n\tgenerated a leave event, set current_window to the root\n\twindow. This assures we will generate proper enter and leave\n\tevents for popup windows. (#325521)\n\n2006-02-08  John Ehresman  <jpe@wingware.com>\n\n\t* gdk/win32/gdkevents-win32.c (gdk_event_translate)\n\t<WM_MOUSEACTIVATE>\n\t* gdk/win32/gdkwindow-win32.c (show_window_internal)\n\t(gdk_window_raise): Call SetWindowPos() instead of\n\tSetForegroundWindow() or BringWindowToTop() if the window\n\tshouldn't accept focus. (#327375)\n\t\n2006-02-08  John Ehresman  <jpe@wingware.com>\n\n\t* gdk/win32/gdkwindow-win32.c: Let gdk_window_set_decorations()\n\ttake precedence over anything derived from hints. Restructure\n\trelated code and logic, add some new helper functions. (#327217)\n\n2006-02-08  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkfilechooserbutton.c: Don't put relevant callss\n\tin g_assert().  (#329876, Kristian Rietveld)\n\n2006-02-08  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkevents-win32.c (gdk_pointer_grab)\n\t(gdk_display_pointer_ungrab, gdk_keyboard_grab)\n\t(gdk_display_keyboard_ungrab): Consistenly use assign_object()\n\twhen assigning GdkWindow pointers so that the ref counting doesn't\n\tget off whack.\n\n\t(handle_stuff_while_moving_or_resizing): Don't use deprecated API.\n\n\t(gdk_event_translate) <WM_MOUSEMOVE>: When the pointer is grabbed\n\twith owner_events FALSE, generate enter and leave events only for\n\tthe grab window. (#321054)\n\n2006-02-08  Kristian Rietveld  <kris@imendio.com>\n\n\t* gtk/gtktreemodelfilter.c (gtk_tree_model_filter_ref_path),\n\t(gtk_tree_model_filter_unref_path): free temporary paths after\n\tusage (patch from maemo-gtk),\n\t(gtk_tree_model_filter_clear_cache): fix little typo in the docs\n\t(patch from maemo-gtk).\n\n\t* gtk/gtktreemodelsort.c (gtk_tree_model_sort_row_deleted): remove\n\tstale FIXME.\n\n2006-02-08  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkfilesystem.c (gtk_file_info_copy): Copy the display_key\n\tas well.  (#330389, Markku Vire)\n\n2006-02-08  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk-zip.sh.in: Drop the timestamp from the zipfile names.\n\n2006-02-07  Sven Neumann  <sven@gimp.org>\n\n\t* gdk/directfb/AUTHORS: updated mine and Dok's email address.\n\n2006-02-06  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_get_search_entry): fix compiler\n\twarning.\n\n2006-02-05  Dom Lachowicz <cinamod@hotmail.com>\n\n\t* gdk/gdkcairo.c (gdk_cairo_set_source_pixbuf): Bug #330022\n\tWrong pixel values are computed when color = 0xFF and alpha = 0xFF\n\t\n2006-02-04  Michael Emmel  <mike.emmel@gmail.com>\n\tAdded new directfb backend located in gdk/directfb\n\tplus patches to compile new backend\n\tcompile with --with-gdktarget=directfb\n\n2006-02-03  Federico Mena Quintero  <federico@ximian.com>\n\n\tWork around https://bugs.freedesktop.org/show_bug.cgi?id=4320,\n\twhich used to be our own\n\thttp://bugzilla.gnome.org/show_bug.cgi?id=314616.  If one uses a\n\tpixmap for a pattern in Cairo, and sets the pattern to\n\tCAIRO_EXTEND_REPEAT; and if the destination surface is also a\n\tpixmap, Cairo does a slow copy instead of using XCopyArea().  So,\n\twe use the same code that we used in GTK+ 2.6 (pre-cairo), by\n\tfilling the double-buffer pixmap with a tiled GC and\n\tXFillRectangle().\n\n\t* gdk/gdkwindow.c (BackingRectMethod): New structure with a\n\tcairo_t and a GdkGC field.  Depending on which of these fields\n\tgets filled in, we'll use Cairo or GDK to clear the double-buffer\n\tpixmap when painting a window.\n\t(setup_backing_rect_method): Fill a BackingRectMethod as\n\tappropriate, depending on the window's configuration and our\n\tknowledge of whether Cairo is fast or slow when doing repeating\n\tpatterns.\n\t(gdk_window_clear_backing_rect): Call\n\tsetup_backing_rect_method().  Depending on what it returns, use\n\tCairo to clear the double-buffer pixmap, or plain GDK.\n\n2006-02-03  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtklabel.c (get_layout_location): Fix handling\n\tof padding in RTL.  (#329099, Hooman Mesgary) \n\n2006-02-02  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/x11/gdkdnd-x11.c (_gdk_drag_get_protocol_for_display):\n\tMake drops on the root window work again.  (#145243, Andrew S. Dixon)\n\n2006-02-01  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkwidget.c (gtk_widget_class_init): Wrap dnd signal\n\tdocs to 80 columns.\n\n2006-01-31  Matthias Clasen  <mclasen@redhat.com>\n\n\t* autogen.sh: Touch README and INSTALL here to pacify \n\tautomake.  (#329124, Kjartan Maraas, Tim Janik)\n\n2006-01-31  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtkassistant.h: \n\t* gtk/gtkassistant.c: Actually implement visibility handling,\n\tand add gtk_assistant_update_buttons_state.\n\n\t* tests/testassistant.c: Test visibility handling.\n\n2006-01-31  Kristian Rietveld  <kris@imendio.com>\n\n\t* gtk/gtkstyle.c (gtk_default_draw_flat_box): Add support for row\n\thinting for the selected state.\n\n2006-01-30  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkentrycompletion.c (_gtk_entry_completion_resize_popup): \n\tMake sure the tree view is realized, since we grab the\n\tfocus to it.  (#329144, Wouter Bolsterlee)\n\n\t* gtk/gtkspinbutton.h: \n\t* gtk/gtkspinbutton.c: Add a wrapped signal.  (#322933,\n\tCarlos Garnacho Parro)\n\n\t* gtk/gtkassistant.c: More generous spacing. (#328082,\n\tChristian Persch, patch by Carlos Garnacho)\n\t\n\t* gtk/gtktoggletoolbutton.c (gtk_toggle_tool_button_set_property): \n\tUse the setter for active.  (#329208, Guillaume Cottenceau)\n\n\t* docs/tools/widgets.c (get_all_widgets): Add GtkLinkButton\n\n\t* gtk/gtkassistant.c (gtk_assistant_init): Move the\n\tlast button to the left where it does not affect\n\tthe positioning of forward/back.\n\n2006-01-29  Matthias Clasen  <mclasen@redhat.com>\n\n\tMore GtkAssistant work, by Carlos Garnacho.\n\t\n\t* tests/testassistant.c: Additions.\n\n\t* gtk/gtkassistant.c: Handle page visibility, other \n\tsmall fixes.\n\n\t* docs/tools/widgets.c: Add GtkAssistant.\n\n2006-01-28  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* configure.in: If major.minor of required and available glib versions\n\tare the same, add -DG_DISABLE_DEPRECATED to GLIB_CFLAGS. (bug #328617)\n\n\t* */Makefile.am: Remove hardcoded -DG_DISABLE_DEPRECATED.\n\n2006-01-28  Dom Lachowicz <cinamod@hotmail.com>\n\n\t* modules/engines/ms-windows/msw-style.c: Re-sync with gtk-wimp\n\t* modules/engines/ms-windows/Theme/gtk-2.0/gtkrc: Ditto\n\t\n2006-01-28  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtk.symbols: \n\t* gtk/gtklinkbutton.h: \n\t* gtk/gtklinkbutton.c: Allow to set a global hook function\n\tthats called whenever a link button is clicked.\n\n\tMore work on GtkAssistant by Carlos Garnacho:\n\t\n\t* demos/gtk-demo/Makefile.am: \n\t* demos/gtk-demo/assistant.c: Add a  GtkAssistant demo.\n\n\t* gtk/gtkassistant.c: Handle focus, several small fixes to the\n\tflow computations.\n\n2006-01-27  Federico Mena Quintero  <federico@ximian.com>\n\n\tFixes bug #328820:\n\n\t* gtk/gtkfilechooserdefault.c\n\t(gtk_file_chooser_default_class_init): Make GDK_KP_Divide pop up\n\tthe location dialog populated to \"/\".\n\t(tree_view_keybinding_cb): Likewise.\n\t(trap_activate_cb): Likewise.\n\n2006-01-25  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gtk/gtkcalendar.c (gtk_calendar_size_request): Use translated format\n\tstrings for L10n in size calculation too.\n\n\t* gtk/gtkcalendar.c (calendar_paint_week_numbers): Expand buffer to\n\taccomodate localized digits.\n\n2006-01-26  Matthias Clasen  <mclasen@redhat.com>\n\n\t* tests/prop-editor.c: Introspect child properties. too.\n\n2006-01-25  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gtk/gtkcalendar.c (calendar_paint_week_numbers, calendar_paint_day):\n\tUse contexed translated strings calendar:week:digits|%d and\n\tcalendar:day:digits|%d to let translators choose localized digits for\n\tweek and day numbers. (bug #317171, Hamed Malek)\n\n2006-01-25  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gtk/gtklabel.c (get_layout_location): Use logical extents of the\n\tlayout instead of ink extents.  According to Pango docs, that's what\n\tshould be used for placement.  Moreover, simply use\n\tpango_layout_get_pixel_size instead of getting the extents and\n\tdividing ourselves.\n\n2006-01-25  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkentrycompletion.c: \n\t* gtk/gtkentry.c: Be more careful when blocking signals. \n\n\t* gdk/x11/gdkcursor-x11.c (gdk_x11_display_set_cursor_theme): Only\n\tset the cursor size if it is != 0.\n\n\t* gtk/gtksettings.c (gtk_settings_class_init): Change the default value\n\tof gtk-cursor-theme-size to 0, meaning \"use default\".\n\n2006-01-24  Kristian Rietveld  <kris@gtk.org>\n\n\t#322591, Jonathan Blandford.\n\n\t* gtk/gtktreeview.[ch] (gtk_tree_view_get_search_entry),\n\t(gtk_tree_view_set_search_entry),\n\t(gtk_tree_view_get_search_position_func),\n\t(gtk_tree_view_set_search_position_func): New functions,\n\tand small adaptions to the tree view code to allow for setting\n\tthe entry and search position function.\n\n\t* gtk/gtktreeprivate.h: Removed GtkTreeViewSearchDialogPositionFunc\n\ttypedef, which is now in gtktreeview.h as\n\tGtkTreeViewSearchPositionFunc.  Add/update fields.\n\n\t* gtk/gtk.symbols: Add new functions.\n\n\t* tests/testtreesort.c: Add a little test for _set_search_entry().\n\n2006-01-23  Matthias Clasen  <mclasen@redhat.com>\n\n\tAdd GtkLinkButton, a port of GnomeHRef.  (#314808, Emmanuele Bassi)\n\t\n\t* gtk/gtklinkbutton.h: \n\t* gtk/gtklinkbutton.c: New files.\n\n\t* gtk/gtk.h:\n\t* gtk/gtk.symbols: \n\t* gtk/Makefile.am: Glue.\n\n\t* gtk/gtkaboutdialog.c: Use GtkLinkButton.\n\t\n\t* gtk/gtkwidget.c: Add link-color and visited-link-color style\n\tproperties.  (#113649, Leena Gunda)\n\n\t* gtk/gtkaboutdialog.c: Use the new style properties here instead\n\tof the about dialogs own link-color property. \n\n2006-01-23  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreemodel.c (gtk_tree_model_base_init): don't copy\n\ttree paths when emitting signals. (#325041, Matthias Clasen).\n\n2006-01-23  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gtk/gtklabel.c (get_layout_location): Fix misalignment of RTL\n\ttext in ellipsized GtkLabel: use layout width if set, otherwise\n\tfallback to ink extents width. (#322042)\n\n2006-01-23  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkassistant.c (compute_last_button_state): Only show the\n\tlast button if we can jump to the end. \n\t(gtk_assistant_init): Make the spacing and button order more\n\tHIG compliant.\n\n\tFix drawing issues in progress bars.  (#328081, Christian Persch)\n\t\n\t* gtk/gtkprogressbar.c (gtk_progress_bar_size_request): Always\n\trequest enough space. \n\t(gtk_progress_bar_paint_activity) \n\t(gtk_progress_bar_paint_continuous) \n\t(gtk_progress_bar_paint_discrete): Clip when drawing the bar.\n\n2006-01-23  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkcolorbutton.c: move destruction of the private GdkGC\n\tfrom finalize() to unrealize(). Fixes BadMatch on display change\n\t(bug #85715).\n\n2006-01-22  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_bin_expose): Revert previous\n\tcommit after more searching in the bugzilla archives (see #309221).\n\n2006-01-22  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_bin_expose): Remove second call\n\tto gtk_tree_view_column_cell_set_cell_data, since we also set the\n\tcell data before iterating over the columns for exposure. (Fixes\n\t#322471, Duncan Coutts).\n\n2006-01-21  Matthias Clasen  <mclasen@redhat.com>\n\n\t* tests/testassistant.c: Add some tests for GtkAssistant\n\n\t* tests/Makefile.am: Glue\n\n2006-01-20  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkassistant.c: Fix the docs to reflect the actual signal\n\tsignatures.\n\n\t* gtk/gtktextview.c (gtk_text_view_set_virtual_cursor_pos): Don't\n\tcrash if layout is NULL.  (#327934, Christian Kirbach)\n\n2006-01-20  Dan Winship  <danw@novell.com>\n\n\t* gtk/gtkfilechooserdefault.c (gtk_file_chooser_default_class_init,\n\ttree_view_keybinding_cb, trap_activate_cb): On \"unix\", pop up the\n\t\"Open Location\" window on \"~\" as well as \"/\". #153213\n\t(location_entry_create): Fix this so autocompletion still works\n\tcorrectly in that case.\n\n2006-01-19  Matthias Clasen  <mclasen@redhat.com>\n\n\t* configure.in: Explicitly link against Xrender.  \n\t(#327538, Christophe Belle)\n\t\n\t* gdk/x11/gdkprivate-x11.h (XID_FONT_BIT): \n\t* gdk/x11/gdkfont-x11.c: \n\t* gdk/x11/gdkxid.c: Use an unused high bit in the\n\tXID to mark fonts in the global xid hash table.\n\n\t* gdk/x11/gdkcursor-x11.c (update_cursor): Skip fonts\n\twhen iterating over the xid hash table, since calling\n\tGDK_IS_WINDOW () on an GdkFont can cause a segfault.\n\t(#327751, Ryan Lovett)\n\n2006-01-19  Matthias Clasen  <mclasen@redhat.com>\n\t\n\t* gtk/gtkassistant.[hc]: Use a priv pointer for\n\tcheap access to the priv struct.  (#327725, Christian\n\tPersch)\n\n\t* gtk/gtkassistant.h: Fix line endings.\n\n2006-01-18  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkassistant.[hc]: Add GtkAssistant, a widget to\n\tconstruct multi-step wizards.  (#115348, Martyn Russell, \n\tMatthias Clasen, Carlos Garnacho Parro)\n\n\t* gtk/gtk.symbols:\n\t* gtk/Makefile.am: \n\t* gtk/gtk.h: Necessary glue.\n\n2006-01-18  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/quartz/gdkevents-quartz.c:\n        (get_mm_from_pixels):\n        (gdk_screen_get_width_mm):\n        (gdk_screen_get_height_mm):\n\tImplement these functions.\n\t(#327228, Thomas Broyer).\n\n2006-01-18  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/quartz/gdkdrawable-quartz.c:\n        (gdk_quartz_draw_polygon):\n        (gdk_quartz_draw_lines):\n\tImplement these functions.\n\t(#327226, Thomas Broyer)\n\t\n2006-01-18  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/quartz/gdkkeys-quartz.c:\n\t(maybe_update_keymap):\n\tSupport non-MacRoman keyboard layouts.\n\t(#322585, Wolfgang Thaller)\n\t\n2006-01-18  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/quartz/gdkmain-quartz.c:\n        (_gdk_windowing_init):\n        Make the process a foreground application.\n        (#322481, Wolfgang Thaller)\n        \n2006-01-18  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkrbtree.c: \n\t* gtk/gtktreemodel.c: Fix several g_new() calls which\n\twere using extra indirections or pointless casts.  \n\t(#327423, Morten Welinder)\n\nTue Jan 17 19:27:59 2006  Tim Janik  <timj@imendio.com>\n\n\t* gtk/gtkprogress.c: fix adopted from maemo-gtk.\n\tgtk_progress_create_pixmap(): clear out the newly created offscreen \n\tpixmap, so themes making use of transparency don't draw onto garbage.\n\n2006-01-17  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkbutton.c: remove the \"child-spacing\" style property again\n\tand add \"inner-border\" instead. That's far more flexible and\n\t\"child-spacing\" was a bad name anyway.\n\n2006-01-17  Michael Natterer  <mitch@imendio.com>\n\n\t* configure.in (ALL_LINGUAS): remove \"ang\" again until all po\n\tfiles are there.\n\n2006-01-16  Abel Cheung  <maddog@linuxhall.org>\n\n\t* configure.in: Added \"ang\" \"zh_HK\" to ALL_LINGUAS.\n\n2006-01-16  Matthias Clasen  <mclasen@redhat.com>\n\n\t* README.in: Mention new pixbuf engine features.\n\n\t* gtk/gtk.symbols: \n\t* gtk/gtkradioaction.[hc]: Add a current-value property and a\n\tsetter for it.  (#322735, Jorn Baayen)\n\t\n2006-01-16  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkbutton.c: applied patch from maemo-gtk which adds a\n\tchild-spacing style property. Fixes bug #327202.\n\n2006-01-16  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/quartz/gdkdisplay-quartz.c:\n        * gdk/quartz/gdkevents-quartz.c:\n        (gdk_keyboard_grab):\n        (gdk_display_keyboard_ungrab):\n        (gdk_keyboard_grab_info_libgtk_only):\n        (find_window_for_event):\n        Implement keyboard grabs.\n        \n        (_gdk_quartz_send_map_events):\n        * gdk/quartz/gdkmain-quartz.c:\n        * gdk/quartz/gdkprivate-quartz.h:\n        New function that synthesizes map events.\n        \n        * gdk/quartz/gdkwindow-quartz.c:\n        (_gdk_windowing_window_init):\n        The root window is always visible.\n        \n        (all_parents_shown):\n        (show_window_internal):\n        Send map events.\n        \n        (gdk_window_hide):\n        Ungrab keyboard and pointer\n\n2006-01-15  Kristian Rietveld  <kris@gtk.org>\n\n\tFixes #324099, Tommi Komulainen.\n\n\t* gtk/gtktreestore.[ch] (gtk_tree_store_insert_with_values),\n\t(gtk_tree_store_insert_with_valuesv): new functions, analog to\n\tthose found in GtkListStore.\n\n\t* gtk/gtktreestore.c (gtk_tree_store_real_set_value),\n\t(gtk_tree_store_set_valist), (gtk_tree_store_set_valist_internal),\n\t(gtk_tree_store_sort_iter_changed): refactored.\n\n\t* gtk/gtk.symbols: updated.\n\n\t* tests/treestoretest.c: added a test for this new functionality.\n\n2006-01-14  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkentry.c (gtk_entry_drag_data_received): Remove \n\tan unused variable.\n\n\t* gtk/gtkiconfactory.c (get_default_icons): Register RTL \n\tversions of the indent and unindent icons.  (#326857,\n\tItai Bar-Haim)\n\n\t* gtk/Makefile.am (STOCK_ICONS): And add them here.\n\n\tFix a crash with combo boxes in RESIZE_IMMEDIATE\n\tcontainers.  (#326806, Sebastian Bacher)\n\t\n\t* gtk/gtkcombobox.c (gtk_combo_box_size_allocate) \n\t(gtk_combo_box_size_request): Don't call \n\tgtk_combo_box_check_appearance() from here, as that \n\tcan lead to recursion. \n\t(gtk_combo_box_init): Instead, call it here.\n\n2006-01-14  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreemodelsort.c (gtk_tree_model_sort_iter_children): fix\n\ta typo which caused this whole thing to not function ...\n\n2006-01-14  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_size_allocate),\n\t(validate_visible_area): fixup adjustments and top_row if the\n\tcurrent dy + page_size exceeds the new tree view height. (Fixes\n\t#316689, reported by Chris Lord).\n\n2006-01-13  Matthias Clasen  <mclasen@redhat.com>\n\n\t* */abicheck.sh: Make this work on more platforms.\n\n2006-01-13  Kristian Rietveld  <kris@imendio.com>\n\n\t* tests/testtreefocus.c (set_indicator_size), (main): add a little\n\ttest for the newly introduced indicator-size property.\n\n2006-01-13  Kristian Rietveld  <kris@imendio.com>\n\n\t* gtk/gtkcellrenderertoggle.c (gtk_cell_renderer_toggle_init):\n\tinitialize the inconsistent field in the private structure,\n\t(gtk_cell_renderer_toggle_class_init),\n\t(gtk_cell_renderer_toggle_{set,get}_property),\n\t(gtk_cell_renderer_toggle_get_size): introduce a indicator-size\n\tproperty.\n\n2006-01-13  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_real_expand_row)\n\t(gtk_tree_view_real_collapse_row): don't animate the expander\n\tarrows if gtk-enable-animations is FALSE (bug #142582).\n\n2006-01-12  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtknotebook.c: Replace hardcoded values for tab-overlap and\n\ttab-curvature with style properties.  (#325282, Alexander Nedotsukov)\n\n\t* gtk/gtktextview.c (gtk_text_view_commit_text) \n\t(gtk_text_view_delete_from_cursor, gtk_text_view_backspace): \n\tReset the virtual cursor position.  (#326003, Evert Verhellen)\n\n\t* gtk/gtkwidget.c (gtk_widget_set_app_paintable): Add some docs\n\tabout RGBA windows. (#326486, Benjamin Otte)\n\n2006-01-12  Michael Natterer  <mitch@imendio.com>\n\n\t* gdk/gdkimage.c (scratch_image_info_for_depth): connect to the\n\tdisplay's \"closed\" signal and free the cached scratch images upon\n\tdisplay closing (bug #85715).\n\n2006-01-12  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkexpander.c (gtk_expander_set_expanded): skip the\n\tanimation if the gtk-enable-animations setting is FALSE\n\t(bug #142582).\n\n2006-01-11  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtklabel.c: Fix a C99ism (#326658, Kazuki Iwamoto)\n\n2006-01-11  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtklabel.c: Add some notify batching, always\n\temit notify after setting the new value.\n\n\t* gtk/gtkmessagedialog.c: Add properties.  (#311254,\n\tJohan Dahlin)\n\t(gtk_message_dialog_new): Remove some redundant code, pointed\n\tout by Gustavo Carneiro.\n\n\t* gdk/x11/gdkwindow-x11.c (create_moveresize_window): Clean\n\tup properly if the grab fails.\n\t(finish_drag): Don't leak a reference to moveresize_window\n\there.\n\n2006-01-11  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/x11/gdkevents-x11.c: Fix string offsets.\n\n\tAllow falling back to another icon theme before \n\thicolor.   (#325546, Rodney Dawes)\n\t\n\t* gtk/gtksettings.c: Add a gtk-fallback-icon-theme setting.\n\n\t* gdk/x11/gdkevents-x11.c: Map it to the XSetting Net/FallbackIconTheme.\n\t\n\t* gtk/gtkicontheme.c: Consult the fallback icon theme before\n\tlooking in hicolor. \n\n2006-01-10  Matthias Clasen  <mclasen@redhat.com>\n\n\t* tests/testgtk.c: Add an expander example.\n\n\t* gtk/gtkcalendar.c (gtk_calendar_focus_out): Queue a draw\n\twhen losing the focus.  (#326064, Andrew Conkling)\n\n\t* gtk/gtkimmulticontext.c: \n\t* gtk/gtkhsv.c: \n\t* gtk/gtkhandlebox.c: Convert to use instance private data.\n\n\t* gtk/gtk.h: Remove duplicate include.  (#326429, \n\tBeno\u00eet Carpentier)\n\n\t* gtk/gtkpaned.c: Convert to use instance private data.\n\n2006-01-10  Michael Natterer  <mitch@imendio.com>\n\n\t* gdk/gdkpango.c (on_renderer_display_closed): disconnect from the\n\tright object (\"closed\" is emitted by the display, not the screen).\n\t(bug #85715)\n\n2006-01-10  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/quartz/gdkproperty-quartz.c:\n        (ensure_atom_tables):\n        (intern_atom_internal):\n        (gdk_atom_intern):\n        (gdk_atom_intern_static_string):\n        (gdk_atom_name):\n        Implement local-only atoms.\n\n2006-01-09  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdkgc.c (gc_get_foreground): Correct a warning.\n\t(#326341, Beno\u00eet Carpentier)\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtkwindow.h:\n\t* gtk/gtkwindow.c (gtk_window_get_group): Make this function\n\tpublic API.  (#307099, Todd Berman)\n\n\t* gtk/gtkmenu.c: \n\t* gtk/gtkmain.c: \n\t* gtk/gtkentrycompletion.c: \n\t* gtk/gtkcombo.c: \n\t* gtk/gtkcombobox.c: Update all callers.\n\n\t* gtk/gtkentry.c (paste_received):  Make GtkEntryCompletion\n\tcomplete on pastes at the end.  (#165714, Christian Neumair)\n\n\t* gtk/gtkentrycompletion.c (_gtk_entry_completion_popup): \n\tPrevent the first row being focused on map.  (#137351,\n\tNiklas Knutsson)\n\n2006-01-09  Johan Dahlin  <jdahlin@async.com.br>\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtkeditable.h:\n\t* gtk/gtksizegroup.c: (gtk_size_group_get_widgets):\n\t* gtk/gtksizegroup.h:\n\t(struct _GtkSizeGroup): \n\n\tAdd gtk_size_group_get_widgets, fixes #326324.\n\tAlso mark all fields of GtkSizeGroup as private\n\n2006-01-09  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktextlayout.c (gtk_text_layout_finalize): Don't\n\tleak preedit_string and preedit_attrs.  (#322332, Paolo\n\tBorelli)\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtkaction.h: \n\t* gtk/gtkaction.c (gtk_widget_get_action): New function to\n\tget the action for a proxy.  (#326288)\n\n\t* gtk/gtkaction.c: Go back to the old key for attaching the\n\taction to the proxy.  (#326288, Diego Gonz\u00e1lez)\n\n2006-01-08  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkactiongroup.c (dgettext_swapped): Don't translate\n\tempty strings.  (#326200, Christian Stimming)\n\n2006-01-08  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkentry.[hc]: \n\t* gtk/gtklabel.[hc]: Shrink the private structs of these a bit.\n\n\t* gtk/gtklabel.c (get_layout_location): Fix label alignment \n\twhen width-chars is set.  (#326098, Benjamin Otte)\n\n\t* gdk/gdkregion-generic.c (miRegionCopy): Fix this for the \n\tsingle-rectangle case.  (#326127, Benjamin Berg)\n\t(gdk_region_copy): Use miRegionCopy() here.\n\n2006-01-07  Matthias Clasen  <mclasen@redhat.com>\n\n\tFix actiongroup-action interaction that relied on \n\tactions connecting to notify on themselves:\n\t\n\t* gtk/gtkaction.[hc]: Factor out the code updating the\n\tvisibility/sensitivity of proxies into _gtk_action_sync_visible()\n\tand _gtk_action_sync_sensible().\n\n\t* gtk/gtkactiongroup.c: Call the new functions when the\n\tgroup visibility/sensitivity changes. \n\n2006-01-06  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkactiongroup.c (gtk_action_group_set_sensitive) \n\t(gtk_action_group_set_visible): Add missing property change\n\tnotification.\n\n2006-01-06  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkfilechooserbutton.c (model_add_special): Just use the\n\tdirectory name for the home dir.  (#325817, Federico Mena Quintero)\n\t\n\t* gtk/gtktexttag.c (gtk_text_attributes_new): Initialize editable \n\tto TRUE. \n\t(gtk_text_tag_class_init): The default value for the direction \n\tproperty is GTK_TEXT_DIR_NONE. Add notes about the initial values \n\tof the font and language properties.\n\n\t* gtk/gtktoolbutton.c (gtk_tool_button_class_init): Make clicked\n\tan action signal.  (#325782, Martyn Russell)\n\n\t* gtk/gtkviewport.c (viewport_set_adjustment): Disconnect from\n\tthe old adjustments signals.  (#325869, Jorn Baayen)\n\n2006-01-06  Hans Breuer  <hans@breuer.org>\n\n\t* tests/makefile.msc : added a bunch of tests\n\t* tests/testcellrenderertext.c : use g_snprintf()\n\t* tests/testfilechooserbutton.c : don't include unistd.h twice.\n\tRemoved the unconditional one and added direct.h for G_OS_WIN32\n\t\n2006-01-05  Hans Breuer  <hans@breuer.org>\n\n\t* gdk/makefile.msc : also recurse into win32 for ::clean\n\t* gtk/makefile.msc.in : create gtkbuiltincache.h (most code\n\tto simulate links) and file renames\n\n2006-01-05  Johan Dahlin  <jdahlin@async.com.br>\n\n\t* gtk/gtkprogressbar.c: Set minimum for activity-step property to 0\n\tinstead of -G_MAXUINT.\n\t\n2006-01-05  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkwindow.c: Only connect to the event if we have\n\ta frame, since the handler is only relevant in that case.\n\n\t* gtk/gtkaction.c (connect_proxy, disconnect_proxy): \n\tUse a weak reference rather than the destroy signal to track \n\tproxies going away.\n\n\t* gtk/gtkbindings.c (binding_signal_new): Revert the last change.\n\n\t* gtk/gtkaction.c (gtk_action_sync_property): \n\t(gtk_action_sync_stock_id): Removed.\n\n2006-01-05  Rodrigo Moya <rodrigo@novell.com>\n\n\t* gtk/gtkbindings.c (binding_signal_new): allocate correct amount for\n\tsignal and arguments.\n\n2006-01-05  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtklabel.c (gtk_label_grab_focus): Don't return a value from\n\ta void function.\n\n2006-01-04  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkbindings.h (struct _GtkBindingSignal): Revert questionable\n\tchanges.\n\t\n\t* gtk/gtkbindings.c: Use the slice allocator and allocate signal\n\tand arguments in one block.\n\n\t* gtk/gtkuimanager.c (gtk_ui_manager_get_toplevels): Don't return\n\ta list of NULLs.  (#325723, Steve Chaplin)\n\n2006-01-04  Rodrigo Moya <rodrigo@novell.com>\n\n\t* gtk/gtkbindings.c (binding_signal_new): guard against multiplying\n\tby -1 (when n_args is 0).\n\n2006-01-04  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkmenutoolbutton.c\n\t(gtk_menu_tool_button_set_menu)\n\t(gtk_menu_tool_button_destroy): use gtk_menu_attach_to_widget()\n\tand gtk_menu_detach() instead of reffing/unreffing the menu\n\tmanually. Also fixes brokenness on screen change (bug #85715).\n\n2006-01-04  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkaccelmap.c: \n\t* gtk/gtkactiongroup.c: \n\t* gtk/gtkdialog.c: \n\t* gtk/gtkfilesystemunix.c: \n\t* gtk/gtkgc.c: \n\t* gtk/gtkkeyhash.c: \n\t* gtk/gtkplug.c: \n\t* gtk/gtktextiter.c: \n\t* gtk/gtktextlayout.c: \n\t* gtk/gtkuimanager.c: \n\t* gtk/gtkwidget.c: \n\t* gtk/gtkwindow.c: \n\t* gtk/gtkxembed.c: Use the slice allocator for many small \n\tallocations.\n\n\t* gtk/gtkcolorsel.c: \n\t* gtk/gtktreeview.c: Use IPN.\n\n\t* gtk/gtkwidget.c: Remove an unused field from the AccelPath \n\tstruct.\n\n2006-01-04  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk-zip.sh.in: Include also the gtk20-properties message catalogs.\n\n2006-01-03  Matthias Clasen  <mclasen@redhat.com>\n\t\n\t* gtk/gtkdnd.c: Make it compile\n\n\t* gtk/gtkdnd.c (gtk_drag_begin_internal): Call gtk_drag_update\n\tfor non-motion events.  (#325443, Peter Harvey)\n\n\t* gtk/gtkaction.c: Avoid connecting to notify on our own\n\tproperties. \n\n2006-01-02  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkentry.c (gtk_entry_delete_from_cursor): When deleting\n\twords, delete preceding whitespace as well.  (#325358,  Akkana Peck)\n\n2006-01-02  Anders Carlsson  <andersca@imendio.com>\n\n        * gdk/quartz/GdkQuartzWindow.c:\n        (-[GdkQuartzWindow canBecomeMainWindow]):\n        (-[GdkQuartzWindow canBecomeKeyWindow]):\n        Have these return TRUE\n        \n        * gdk/quartz/gdkevents-quartz.c:\n        (pointer_grab_internal):\n        Remove FIXME\n        \n        (find_child_window_by_point_helper):\n        Fix bug in offset calculation\n        \n        (find_window_for_event):\n        Use grab window toplevel when a grab is in effect\n        \n        (gdk_event_translate):\n        Don't call _gdk_event_button_generate on mouse up\n        \n        * gdk/quartz/gdkgc-quartz.c:\n        (_gdk_quartz_gc_new):\n        Fix indentation\n        \n        * gdk/quartz/gdkwindow-quartz.c:\n        (gdk_window_new):\n        Make TEMP windows borderless\n        \n        (gdk_window_hide):\n        Hide window\n        \n        (gdk_window_get_origin):\n        Implement\n        \n2006-01-02  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkwindow-win32.c\n\t(gdk_window_impl_win32_get_visible_region): Make identical to the\n\tX11 implementation. (#322264, John Ehresman)\n\n\t* gdk/win32/gdkgeometry-win32.c (gdk_window_scroll): Get the\n\tinvalidated region from ScrollWindowEx() instead of an incorrect\n\tattempt to calculate it ourselves. Fix by John Ehresman. (#323666)\n\n\t* gdkevents-win32.c: Make _gdk_win32_hrgn_to_region() non-static.\n\n\t* gdkprivate-win32.h: Declare it.\n\n2005-12-31  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkaction.c: \n\t* gtk/gtkentry.c: Connect to notify instead of multiple\n\tdetailed signals.\n\n2005-12-30  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdk.symbols: \n\t* gdk/gdkcairo.h: \n\t* gdk/gdkcairo.c: Add gdk_cairo_set_source_pixmap.  (#318805,\n\tAlexander Larsson)\n\n\t* gdk/gdkdisplaymanager.c (gdk_display_manager_set_property): Call\n\tgdk_display_manager_set_default_display() to change the default\n\tdisplay.  (#153623, Stefan Kost)\n\n\t* gtk/gtkmessagedialog.c (gtk_message_dialog_init):\n\t (setup_type): Alert dialogs should not have titles and should \n\tnot be displayed in the taskbar.  (#310443, Carlos Garnacho Parro,\n\tDennis Cranston)\n\n2005-12-29  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkliststore.c: \n\t* gtk/gtktreestore.c: Always call the get_path and get_iter\n\timplementations directly, rather than the current mixture whith\n\tsome calls going through the GtkTreeModel interface.\n\n\t* gtk/gtktreemodelsort.c: \n\t* gtk/gtkliststore.c: \n\t* gtk/gtktreestore.c: Remove excessive g_return_if_fail() checks\n\tin static functions.\n\t\n\t* gtk/gtktreedatalist.c: Use the slice allocater for \n\tGtkTreeDataSortHeader.\n\n\t* gtk/gtktreedatalist.h: \n\t* gtk/gtktreedatalist.c (_gtk_tree_data_list_set_header): New function.\n\n\t* gtk/gtktreemodelsort.c (gtk_tree_model_sort_set_sort_func): \n\t* gtk/gtkliststore.c (gtk_list_store_set_sort_func): \n\t* gtk/gtktreestore.c (gtk_tree_store_set_sort_func): Use it here.\n\n2005-12-27  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkbindings.h (GtkBindingSignal): \n\t* gtk/gtkbindings.c (binding_signal_new): Make the\n\targs a flexible array inside the struct, and allocate them\n\ttogether.\n\nWed Dec 28 00:45:46 2005  Tim Janik  <timj@gtk.org>\n\n\t* gtk/gtkctree.c (row_delete): delete GtkCTreeRow as GtkCTreeRow, not\n\tclist rows which crashes in gslice later on.\n\n2005-12-27  Federico Mena Quintero  <federico@ximian.com>\n\n\t* gtk/gtkfilefilter.c (gtk_file_filter_filter): In the case for\n\tFILTER_RULE_PIXBUF_FORMATS, check that filter_info->mime_type is\n\tnot NULL.  Fixes bug #317687.\n\n2005-12-27  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/x11/gdkevents-x11.c (check_transform): Fix a typo.\n\t(gdk_screen_get_setting): Avoid relocations for the settings\n\tmap.\n\n\t* gdk/x11/gdkproperty-x11.c: Avoid relocations for the list\n\tof standard atoms.\n\n\t* gtk/gtkbindings.c (gtk_binding_set_new): Avoid copying\n\tthe set_name by interning it.\n\n2005-12-26  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/x11/gdkdisplay-x11.c (gdk_display_open): Precache atoms\n\tbefore calling gdk_window_new().\n\n\t* gtk/gtktextbtree.c: Use the slice allocator for some other small\n\tauxiliary structures as well.\n\n\t* gtk/gtkimcontext.c (gtk_im_context_filter_keypress): Clarify\n\tdocs.  (#324996)\n\n\t* gtk/gtktextbtree.c (gtk_text_btree_get_tag_info) \n\t(gtk_text_btree_remove_tag_info): Use the slice allocator for \n\ttag info.\n\n\t* README.in: Mention the stripping of (_F) suffixes.\n\n\t* gtk/gtktoolbar.c (_gtk_toolbar_elide_underscores): Strip a suffix of \n\tthe form \"(_<single character>)\", since this is the preferred way\n\tfor some languages to indicate accelerators.  (#323956, Yang Hong)\n\n\t* gtk/gtklabel.c (gtk_label_class_init): Add a gtk-label-select-on-focus\n\tsetting.\n\t(gtk_label_grab_focus): And use it here to select the contents of\n\tthe label when appropriate.\n\t(gtk_label_class_init): Use the same keybindings for select all/\n\tunselect all as GtkEntry and GtkTextView.\n\n\t* gtk/gtkdialog.c (gtk_dialog_map): When looking for the initial\n\tfocus, avoid leaving a selection in a label.\n\n2005-12-25  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkwindow.c: Documentation fixes.  (#324815, \n\tRoss Burton)\n\n\t* configure.in: Require GLib 2.9.2\n\n2005-12-24  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdkregion-generic.c: \n\t* gdk/gdkpolyreg-generic.c: \n\t* gdk/gdkregion.h: \n\t* gdk/gdkrectangle.c: Inline docs, use g_assert(), avoid \n\textra allocation for rectangular regions.\n\nThu Dec 22 18:53:14 2005  Tim Janik  <timj@gtk.org>\n\n        * gtk/gtkobject.[hc]: renamed GUnowned to GInitiallyUnowned.\n\nThu Dec 22 17:55:11 2005  Tim Janik  <timj@gtk.org>\n\n\t* gtk/gtkobject.h: parent type fixups in structure declarations.\n\nThu Dec 22 16:01:27 2005  Tim Janik  <timj@imendio.com>\n\n\t* gtk/gtkobject.c: derive GtkObject from GUnowned,\n\tso it initially has a floating reference count.\n\tgtk_object_class_init(): installa floating flag handler with\n\tlibgobject, so for GtkObjects the flag is stored as GTK_FLOATING\n\tin the ->flags member.\n\n\t* tests/floatingtest.c: test floating flag uses.\n\n2005-12-21  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdkregion-generic.c: Use the slice allocator\n\tfor regions. Still todo: avoid extra allocations for\n\tthe single-rectangle case.\n\n\t* gtk/gtksettings.c (gtk_settings_class_init): Update\n\tclass_n_properties after installing color-hash, since\n\tother classes install settings, too.\n\n\t* gtk/gtkctree.c: \n\t* gtk/gtkclist.c: Fix some mistakes in the conversion\n\tfrom mem chunks to slice allocator.\n\n\t* gtk/gtkiconview.c (adjust_wrap_width): Adjust the \n\twrap-width also if an explicit item width is set.  \n\t(#322475, Alex Graveley)\n\t\n2005-12-20  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkiconview.c (gtk_icon_view_button_press): Reset \n\tpressed_button to -1 after handling a double click, so that\n\tmotion events occurring between here and the release event\n\tdon't trigger DND.  (#324588, Dave Andreoli)\n\n2005-12-19  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkcellrenderer.c: \n\t* gtk/gtkselection.c: \n\t* gtk/gtkcalendar.c: \n\t* gtk/gtkitemfactory.c: \n\t* gdk/gtkcombo.c: \n\t* gdk/gdkpixbuf-render.c: Documentation updates\n\n\t* gtk/gtktreemodel.c: \n\t* gtk/gtkplug.c: \n\t* gtk/gtkwindow.c: Documentation fixes.\n\n2005-12-19  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkentry.c: implement boolean property \"truncate-multiline\"\n\twhich, when enabled, truncates multi-line pastes or drops to their\n\tfirst line. Fixes bug #322252.\n\n\t* gtk/gtkfilechooserentry.c (gtk_file_chooser_entry_init): enable\n\ttruncate-multiline here.\n\n2005-12-17  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtksettings.c (get_color_hash): Don't crash if\n\tthere is no color scheme.  (#324429, Diego Gonzalez)\n\n2005-12-16  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkfilesystem.c (gtk_file_system_module_load): \n\t* gtk/gtkimmodule.c (gtk_im_module_load): \n\t* gtk/gtkthemes.c (gtk_theme_engine_load): \n\t* gtk/gtkmodules.c (find_module): Use G_MODULE_BIND_LAZY when\n\topening modules.\n\n\t* gtk/gtksettings.[hc]: Rework the way the color scheme setting\n\tis inherited. Now the overriding is done on a per-color basis,\n\trather than for the setting as a whole. This has the effect\n\tthat themes can declare defaults for all the symbolic colors they\n\tuse by specifying a value for the gtk-color-scheme setting in \n\ttheir rc file, while still allowing the XSetting to override\n\t\"standard\" symbolic colors. The hash table is now available\n\tthrough the color-hash property.\n\t\n\t* gtk/gtkrc.c: Use the new color-hash property.\n\t\n2005-12-14  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkcontainer.c (_gtk_container_focus_sort): Skip unrealized\n\tchildren when doing focus sorting.  (#323995, Dan Winship)\n\n2005-12-14  Rodney Dawes  <dobey@novell.com>\n\n\t* gtk/gtkfilesystemunix.c (gtk_file_system_unix_volume_render_icon):\n\tDefault to \"drive-harddisk\" and then fall back to gnome-dev-harddisk\n\t(get_icon_for_mime_type): Look up the mime type icons according to the\n\tIcon Naming Specification and then fall back to the gnome-mime- prefix\n\tfor the mime type icons\n\n\tFixes #323655\n\t\n2005-12-14  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkdnd.c (gtk_drag_set_icon_name): Warn if the icon\n\tcannot be loaded.  (#323504, Kjartan Maraas)\n\n\t* gtk/gtktreeview.c (gtk_tree_view_class_init): Add docs \n\tfor the row-activated signal.  (#324044, Davyd Madeley)\n\n2005-12-14  Michael Natterer  <mitch@imendio.com>\n\n\t* tests/test-images/valid_jpeg_progressive_test: new test image.\n\nTue Dec 13 09:47:20 2005  Tim Janik  <timj@gtk.org>\n\n\t* README.in: added a link to the floating reference docs in the\n\t2.10 release NEWS section.\n\n2005-12-12  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktextiter.c (gtk_text_iter_set_visible_line_index): \n\tSpeed this function up, using the fact that visibility is \n\tconstant across segments. (#321548, Paolo Borelli)\n\n\t* gtk/gtktextbtree.c (_gtk_text_line_char_to_byte_offsets): \n\t* gtk/gtktextiter.c (gtk_text_iter_backward_chars): Speed up\n\tstepping backwards.  (#320638, Larry Ewing, Paolo Borelli)\n\n\t* gtk/gtkicontheme.c (ensure_valid_themes): Only broadcast\n\t_GTK_LOAD_ICONTHEMES if we detect a real theme change, not\n\tupon initial theme load.  (#323876, Peter Lund)\n\n\t* gtk/gtkstatusicon.c (gtk_status_icon_class_init): Register\n\tthe size-changed signal correctly.  (#323848, Murray Cumming)\n\n\t* gtk/gtkmarshalers.list: Add necessary marshaller.\n\n\t* gtk/gtktextview.c (gtk_text_view_get_border_window_size): Don't\n\tfall thru to the wrong window types.  (#323843)\n\n\tMake the gtk-color-scheme setting work.\n\t\n\t* gtk/gtksettings.h: \n\t* gtk/gtksettings.c (_gtk_settings_get_color_hash): Add a getter\n\tthat takes care of initializing the color hash if it is not \n\talready there.  \n\n\t* gtk/gtkrc.c (gtk_rc_color_scheme_changed, gtk_rc_context_get): \n\tAnd use it here.\t\n\n2005-12-10  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdk.c (gdk_parse_args): Warn if parsing fails,\n\tnot if it succeeds. \n\n2005-12-09  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkselection.c (gtk_selection_data_get_uris): Don't\n\tleak list[0].  (#323629, Markku Vire)\n\n\t* gtk/gtktextbuffer.c (paste_from_buffer): Unref the buffer\n\twhen freeing the RequestData.  (#323577)\n\n2005-12-07  Matthias Clasen  <mclasen@redhat.com>\n\n\t* demos/gtk-demo/iconview_edit.c (set_cell_color): Don't\n\tleak text.\n\n\t* gtk/gtktoolbutton.c (clone_image_menu_size): Fix a \n\tvariable name clash.  (#323475, Ross Burton)\n\n2005-12-07  Ross Burton  <ross@burtonini.com>\n\n\t* docs/reference/gtk/tmpl/gtkenums.sgml:\n\t* gtk/gtktoolbutton.c:\n\tIf the toolbar mode is ICONS and there is no icon set then show\n\tthe label, and vice versa (#322019)\n\n2005-12-07  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktoolbutton.c (clone_image_menu_size): Fix a \n\tvariable name clash.  (#323475, Ross Burton)\n\n\t* gtk/gtktreeview.c (gtk_tree_view_key_press): Use the correct\n\twindow when synthesizing the key event.  (#323077,\n\tSadrul Habib Chowdhury)\n\t\n\t(gtk_tree_view_search_key_press_event): Also listen for\n\tGDK_ISO_Left_Tab.  (#323077, Sadrul Habib Chowdhury)\n\n\t* gtk/gtktextview.c (gtk_text_view_preedit_changed_handler): \n\tOnly scroll if we have focus.  (#316310, Paolo Borelli)\n\n\t* gtk/gtkfilesystemunix.c (cb_fill_in_mime_type): Fix a C99ism,\n\tspotted by Crispin Flowerday.\n\n2005-12-06  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* gtk/gtksettings.c (settings_update_font_options): Turn metrics\n\thinting on (part of #307196)\n\n2005-12-06  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkimcontextsimple.c (gtk_im_context_simple_reset): Don't\n\tcommit from reset, it upstets GtkTextView.\n\n\t* gtk/gtktextview.c (gtk_text_view_check_cursor_blink): Be more\n\tcareful when turning blinking on and off.\n\t(gtk_text_view_focus_out_event): Make the cursor really invisible\n\twhen the focus goes away.  (#323087, Sadrul Habib Chowdhury)\n\t(cursor_blinks): Check the gtk-cursor-blink setting first.\n\n\t* gtk/gtktreeview.c (gtk_tree_view_key_press): Fix refcounting\n\tissues with new_event and its window.\n\n\t* gtk/gtkmenu.c (gtk_menu_attach_to_widget): Accept NULL\n\tas a detach func.  (#323386, Jorn Baayen)\n\n\t* gtk/gtkcalendar.c: Avoid conflict with win32 headers in\n\tthe libdate routines.  (#323045, Kazuki Iwamoto)\n\n\t* gdk/gdk.c (gdk_parse_args): \n\t* gtk/gtkmain.c (gtk_parse_args): Don't ignore errors\n\tfrom g_option_context_parse(). \n\nTue Dec  6 11:37:59 2005  Tim Janik  <timj@gtk.org>\n\n\t* gdk/gdkevents.c (gdk_event_new): fix missing hash table \n\tinitialization.\n\nTue Dec  6 10:32:17 2005  Tim Janik  <timj@gtk.org>\n\n\t* gtk/gtkstatusbar.c: ported memchunk uses to g_slice, so the code\n\tcompiles again.\n\n2005-12-05  Federico Mena Quintero  <federico@ximian.com>\n\n\t* gtk/gtkfilechooserdefault.c (trap_activate_cb): \"event->state &\n\tmodifiers\", not \"event->state && modifiers\".  Patch by Sadrul\n\tHabib Chowdhury <imadil@gmail.com>.  Fixes bug #323073.\n\n2005-12-05  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkwidget.c: \n\t* gtk/gtkuimanager.c: \n\t* gtk/gtktreedatalist.c: \n\t* gtk/gtktext.c: \n\t* gtk/gtkmain.c: \n\t* gtk/gtkitemfactory.c: \n\t* gtk/gtkseparator.[hc]:\n\t* gtk/gtkclist.[hc]: \n\t* gtk/gtkctree.c:\n\t* gtk/gtkgc.c: Use g_slice instead of mem chunks.\n\n2005-12-05  Michael Natterer  <mitch@imendio.com>\n\n\t* gdk/x11/gdkevents-x11.c: map the new GtkSettings properties\n\t\"timeout-initial\", \"timeout-repeat\", \"color-scheme\" and\n\t\"enable-animations\" to X settings.\n\n2005-12-05  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdkevents.c: \n\t* gdk/gdkcolor.c: Use g_slice instead of mem chunks.\n\n\t* gtk/gtktreeview.c (gtk_tree_view_key_press): Free new_event\n\tafter sending it to the search entry.  (#323209, Crispin Flowerday)\n\n\t* README.in: Add a note about GTK_FLOATING.\n\n\t* gtk/gtkobject.h (GTK_OBJECT_FLOATING): Use g_object_is_floating.\n\n2005-12-02  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktoolbutton.c (clone_image_menu_size): Don't leak\n\ta pixbuf.  (#323024, Paolo Borelli)\n\n2005-12-02  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkfilesystemunix.c (get_icon_for_mime_type): Don't crash\n\tif mime_type is NULL.  (#322998, Sadrul Habib Chowdhury)\n\n2005-12-02  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkmenu.c: applied modified patch from maemo-gtk which\n\tadds a \"horizontal-padding\" style property. Fixes bug #323036.\n\n2005-12-01  Michael Natterer  <mitch@imendio.com>\n\n\tMerged modified patch from maemo-gtk that allows to disable\n\ttoolbar animations. Addresses bug #142582.\n\n\t* gtk/gtksettings.c: added boolean property \"gtk-enable-animations\".\n\t(patch from Christian Neumair)\n\n\t* gtk/gtktoolbar.c: don't animate toolbar changes if the settings\n\tproperty is FALSE. Replaced the individual \"notify::foo\"\n\tconnections to GtkSettings by a single \"notify\" callback and\n\tdispatch internally.\n\n2005-12-01  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkmenu.c (gtk_menu_class_init): removed redundant\n\tassignment of widget_class->motion_notify_event\n\n2005-11-29  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktoggleaction.c (gtk_toggle_action_class_init): Add \n\tan active property.  (#322673, Jorn Baayen)\n\n\tProperly handle model changes in GtkTreeSelection: (#322569,\n\tMilosz Derezynski)\n\t\n\t* gtk/gtktreeselection.c (gtk_tree_selection_selected_foreach): \n\tGet a reference to the model, and stop the iteration if the model\n\tof the treeview is changed on the way.\n\n\t* gtk/gtktreeprivate.h: \n\t* gtk/gtktreeselection.c (_gtk_tree_selection_emit_changed): New \n\tprivate function to emit the GtkTreeSelection::changed signal.\n\n\t* gtk/gtktreeview.c (gtk_tree_view_set_model): Call \n\t_gtk_tree_selection_emit_changed() when the model changes.\n\n2005-11-28  Federico Mena Quintero  <federico@ximian.com>\n\n\tFixes the critical warnings from bug #317999, thus fixing the bug\n\tcompletely:\n\n\t* gtk/gtkfilechooserdefault.c\n\t(gtk_file_chooser_default_get_paths): In SELECT_FOLDER mode,\n\tuse _gtk_file_chooser_get_current_folder_path() instead of fetching the\n\timpl->current_folder directly.  The latter may be null if we are\n\tin RELOAD_NONE state.\n\n2005-11-28  Federico Mena Quintero  <federico@ximian.com>\n\n\tFix bug #321560, based on a patch by Bogdan Nicula (bogdanni@hotmail.com):\n\n\t* gtk/gtkfilechooserdefault.c (up_folder_handler): Don't add the\n\tcurrent_folder to the pending select paths here; the path bar will\n\tgive it to us now.\n\t(path_bar_clicked): Add the child_path to the pending select paths\n\there.\n\t(show_and_select_paths): Don't filter out folders.\n\t(show_and_select_paths): Don't take separate arguments for\n\tonly_one_path and multiple paths.\n\n\t* tests/autotestfilechooser.c (test_folder_switch_and_filters):\n\tNew test about preserving the filters when we change folders.\n\n2005-11-28  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkscale.c (_gtk_scale_format_value): Insert an LRM, to prevent\n\t-20 to come out as 20- in RTL locales.  (#322571, Tze'ela Hebron)\n\n\t* gtk/gtkaction.c (gtk_action_sync_button_stock_id) \n\t(connect_proxy): Buttons use the label property for stock ids.  (#322565,\n\tMilosz Derezynski)\n\n\t* gtk/gtkiconview.c (update_text_cell, update_pixbuf_cell): Correctly\n\thandle the cell list and indices into it.  (#321856)\n\n2005-11-28  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktooltips.c (gtk_tooltips_timeout): Set timer_tag to 0 when\n\tthe timeout is done.  (#322291, Jean-Yves Lefort)\n\n2005-11-28  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkfilechooserdefault.c (shortcuts_key_press_event_cb): Make\n\tF2 work for renaming bookmarks.  (#320822, Jaap A. Haitsma, patch\n\tby Paolo Borelli)\n\n2005-11-28  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkwindow-win32.c (gdk_window_set_urgency_hint):\n\tImplement the conditional use of FlashWindowEx() properly for MSVC\n\tcompilations. The code was confusingly assuming that if compiled\n\twith a \"new\" compiler, it will only be run on \"new\" Windows\n\tversions. We want it to run on \"old\" versions, too, even if\n\tcompiled with a \"new\" compiler. There are two orthogonal issues:\n\twhether the compiler defines the necessary API in its headers, and\n\twhether it is present at run-time. (#318077)\n\n\t* gtk/gtkcalendar.c (gtk_calendar_init): Use GetLocaleInfo() on\n\tWindows to get the localized weekday and month names. strftime()\n\tin the Microsoft C library returns strings in the default codepage\n\tfor the locale of the process, not the system codepage. Thus\n\tg_locale_to_utf8() isn't useable on the return value from\n\tstrftime(). (#322603)\n\n2005-11-27  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkmessagedialog.c (gtk_message_dialog_new_with_markup): \n\tFix an example.  (#322493, Elie De Brauwer)\n\t\n\tFix two memory handling problems in GtkTreeView: (#322350, \n\tS\u00f8ren Sandmann)\n\t\n\t* gtk/gtktreeview.c (gtk_tree_view_destroy) \n\t(gtk_tree_view_set_model): Remove all references to nodes in\n\tthe old model.\n\t(gtk_tree_view_real_collapse_row): Unmark expanded_collapsed_node\n\tbefore removing the children.\n\n\t* gtk/gtkcolorbutton.c (gtk_color_button_init): Don't leak a \n\tPangoLayout here.  (#322505, Paolo Borelli)\n\n2005-11-27  Tor Lillqvist  <tml@novell.com>\n\n\tOnce again rework Win32 window decoration code. Doesn't break\n\t#104514. The dialogs in gtk-demo now have the same decorations and\n\tbehaviour as on X11. Tried to fix #322516 but it seems very hard\n\tto make the trivial sample program there behave as expected. OTOH,\n\tsimply moving the gtk_window_decorate() call in the #322516 sample\n\tprogram after the call to gtk_widget_show() helps...\n\t    \n\t* gdk/win32/gdkwindow-win32.c (set_or_clear_style_bits): Revert to\n\tthe correct semantics. Each call to gdk_window_set_decorations()\n\twhich calls this function is supposed to affect all decorations.\n\n\t(decorate_based_on_hints): New function, looks at both geometry\n\thints and type hint and sets window decorations based on\n\tthat. Consolidate code from gdk_window_set_geometry_hints() and\n\tgdk_window_set_type_hint() here.\n\n\t(gdk_window_set_geometry_hints, gdk_window_set_type_hint): Call\n\tdecorate_based_on_hints().\n\n2005-11-25  Dom Lachowicz <cinamod@hotmail.com>\n\n\t* modules/engines/ms-windows/*.[ch]: Merge with gtk-wimp's CVS.\n\tIncludes improved menu icon spacing, [+]/[-] expander drawing,\n\tstatus-bar gippie drawing, and notebook tab drawing.\n\t\n2005-11-24  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtktoolbar.h (struct _GtkToolbar): changed two private guint\n\tthat used to hold signal handler IDs to two guint of padding.\n\n\t* gtk/gtktoolbar.c (struct _GtkToolbarPrivate): added them as\n\tgulong here.\n\n\t(gtk_toolbar_screen_changed): changed accordingly.\n\nWed Nov 23 18:55:47 2005  Tim Janik  <timj@imendio.com>\n\n\t* gtk/gtkobject.[hc]: deprecated floating/sink API and implemented it\n\tin terms of the GObject floating/sink API.\n\n\t* gtk/gtkaboutdialog.c:\n\t* gtk/gtkaction.c:\n\t* gtk/gtkcellview.c:\n\t* gtk/gtkclist.c:\n\t* gtk/gtkcolorsel.c:\n\t* gtk/gtkcombobox.c:\n\t* gtk/gtkfilechooserdefault.c:\n\t* gtk/gtkiconview.c:\n\t* gtk/gtkinvisible.c:\n\t* gtk/gtkitemfactory.c:\n\t* gtk/gtklayout.c:\n\t* gtk/gtkmenu.c:\n\t* gtk/gtkmenutoolbutton.c:\n\t* gtk/gtknotebook.c:\n\t* gtk/gtkprogress.c:\n\t* gtk/gtkrange.c:\n\t* gtk/gtkspinbutton.c:\n\t* gtk/gtkstatusicon.c:\n\t* gtk/gtktext.c:\n\t* gtk/gtktextview.c:\n\t* gtk/gtktoolbar.c:\n\t* gtk/gtktoolbutton.c:\n\t* gtk/gtktoolitem.c:\n\t* gtk/gtktreeitem.c:\n\t* gtk/gtktreeview.c:\n\t* gtk/gtktreeviewcolumn.c:\n\t* gtk/gtkuimanager.c:\n\t* gtk/gtkviewport.c:\n\t* gtk/gtkwidget.c:\n\t* gtk/gtkwindow.c:\n\tported to use GObject's g_object_ref_sink().\n\n\t* gtk/gtkcolorsel.c:\n\t* gtk/gtkfilechooserdefault.c:\n\t* gtk/gtkaboutdialog.c:\n\tfixed compiler warnings.\n\n2005-11-23  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtksettings.c (gtk_settings_class_init): Add some docs\n\tabout gtk-color-scheme.\n\n2005-11-23  Behdad Esfahbod  <behdad@gnome.org>\n\n\t* configure.in (enable_explicit_deps): Fix typo when checking\n\tlibtool config deplibs_check_method. Moreover, enable explicit\n\tdeps if we get anything other than pass_all from libtool. (part of\n\t#318750)\n\n2005-11-23  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/updateiconcache.c (write_csource): Don't create a big\n\tstring, since Visual C++ doesn't like strings longer than 64k. \n\t(#322238, Kazuki IWAMOTO\n\n\t* gtk/gtkentry.c: Include gtkimcontextsimple.h  (#322235,\n\tKazuki IWAMOTO)\n\n2005-11-23  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkrc.c (gtk_rc_reset_widgets): don't leak all toplevel\n\twindows on other screens (correctly remove all temporary\n\treferences).\n\n2005-11-23  Michael Natterer  <mitch@imendio.com>\n\n\tAdded symbolic themable colors. Patch is a merged version of\n\tproposals from Matthias and maemo-gtk. Fixes bug #114355.\n\n\t* configure.in: require glib >= 2.9.1 for refcountable hashtables.\n\n\t* gtk/gtksettings.c: added property \"color-scheme\" which is a\n\tstring defining colors like \"foreground:black\\nbackground:grey\".\n\tAutomatically provide a name->GdkColor hash table mapping for the\n\tcolor scheme.\n\n\t* gtk/gtkrc.[ch]: added list of color hashes that works like the\n\tlist of icon factories. Append the color scheme hash from\n\tGtkSettings if it exists. Extended gtkrc syntax to allow defining\n\tand referencing of logical colors. Also allow to modulate colors\n\tin gtkrc by using arbitrary expressions of mix(), shade(),\n\tlighter() and darker(). Added internal function\n\t_gtk_rc_style_get_color_hashes().\n\n\t* gtk/gtkstyle.[ch]: keep a private list of color hashes around.\n\tGet the list from _gtk_rc_style_get_color_hashes(). Export\n\tinternal function _gtk_style_shade() (used by above color\n\texpressions). Added public API gtk_style_lookup_color() which\n\tlooks up a logical color by name.\n\n\t* gtk/gtk.symbols: add gtk_style_lookup_color\n\n\t* tests/testgtkrc: use symbolic colors for making\n\tthe scrollbars red.\n\n2005-11-22  Michael Natterer  <mitch@imendio.com>\n\n\tMade button-press timeouts which work like key repeat timeouts\n\tconfigurable. Addresses bug #142582:\n\n\t* gtk/gtksettings.c: added properties \"gtk-timeout-initial\" and\n\t\"gtk-timeout-repeat\" which defalt to 200/20 (ms).\n\n\tUse the values from GtkSettings instead of hardcoding them\n\t(the repeat value is either taken as-is for fast repeat or\n\tmultiplied by 5 for slow repeat). Changed all places to use these\n\ttwo standard initial/repeat timings:\n\n\t* gtk/gtkcalendar.c (unchanged 200/20)\n\t* gtk/gtknotebook.c (unchanged 200/100)\n\t* gtk/gtkpathbar.c (changed from 300/150 to 200/100)\n\t* gtk/gtkrange.c (changed from 250/100 to 200/100)\n\t* gtk/gtkspinbutton.c (unchanged 200/20)\n\n2005-11-21  Anders Carlsson  <andersca@imendio.com>\n\n        * configure.in:\n        * gtk/Makefile.am:\n        * gdk/Makefile.am:\n\t* gdk/quartz/*:\n\tAdd quartz backend.\n\t\n        * docs/tools/Makefile.am:\n\tOnly build docshooter when the X11 backend is used.\n\t\n        * gtk/gtkplug-stub.c:\n\tInclude gtkplug.h here.\n\t\n        * gtk/gtksocket-stub.c:\n\tInclude gtksocket.h here.\n\t\n2005-11-21  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkinputdialog.c: Convert GtkInputDialog to \n\tg_type_class_add_private.\n\n\t* gtk/gtksocket.c: Convert GtkSocket to g_type_class_add_private.\n\n\t* gtk/gtkmenu.c: Convert GtkMenu to g_type_class_add_private.\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtkcombobox.[hc]: Add a tearoff-title property,\n\twith getter and setter.  (#316482, Olexiy Avramchenko)\n\n\t* tests/testcombo.c (main): Test gtk_combo_box_set_title\n\n\t* gtk/gtkpathbar.c: Merge remaining fixes from the 2.8 branch,\n\tpointed out by Michael Natterer.\n\n\tFix for bug #321542, Benedikt Meurer:\n\t\n\t* gtk/gtkcombobox.c (gtk_combo_box_set_active_internal):\n\tEmit notify::active.\n\t\n\t(gtk_combo_box_child_show, gtk_combo_box_child_hide): Use\n\tg_signal_emit, not g_signal_emit_by_name.\n\n2005-11-18  Matthias Clasen  <mclasen@redhat.com>\n\n\tFix crashes in connection with pathbar scrolling (#321560,\n\tBogdan Nicula)\n\t\n\t* gtk/gtkpathbar.c (gtk_path_bar_update_slider_buttons): \n\tStop scrolling when desensitising slider buttons.\n\t(gtk_path_bar_scroll_timeout, gtk_path_bar_slider_button_press): \n\tAnd use it here.  \n\n\t* gtk/gtkpathbar.h (struct _GtkPathBar): Add a separate\n\tscrolling_down flag.\n\n2005-11-18  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkpathbar.c (button_clicked_cb): Fix a C99ism.\n\t(#321777, Jens Granseuer)\n\n\t* gtk/gtkaction.c (disconnect_proxy): Disconnect the\n\tsync callback for the visibility property.  (#321761,\n\tPhilip Langdale)\n\n\tTurn off input methods in invisible entries, since\n\tthey are confusing.  (#317002, James Su)\n\t\n\t* gtk/gtkentry.c (gtk_entry_set_visibility): Toggle input\n\tmethods if visibility changes.\n\t(popup_targets_received): Don't show the input method\n\tmenu if the entry is invisible.  \n\n2005-11-17  Matthias Clasen  <mclasen@redhat.com>\n\n\t* README.in: Add a note about range arrow sensitivity.\n\n\t* perf/treeview.c: const correctness fixes\n\tfound by Arjan van de Ven and gcc.\n\n2005-11-16  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkimage.c (animation_timeout): call\n\tgtk_window_process_updates() so the animation keeps running even\n\tif the main loop is busy with sources that eat a lot of cpu with\n\thigh priority. Fixes bug #321444.\n\n\t(gtk_image_new_from_animation): document the fact that the\n\tanimation will stop running if the main loop is busy with sources\n\tthat have priorities higher than G_PRIORITY_DEFAULT.\n\n\t* tests/testimage.c: added test case that shows an animation even\n\tthough a cpu-eating idle function is running.\n\n2005-11-16  Michael Natterer  <mitch@imendio.com>\n\n\t* gdk/x11/gdkevents-x11.c (_gdk_events_uninit): new internal\n\tfunction which destroys the display's event source. Also removes\n\tthe source from the global display_sources list and unrefs it.\n\n\t* gdk/x11/gdkprivate-x11.h: declare the function.\n\n\t* gdk/x11/gdkdisplay-x11.c (gdk_display_x11_dispose): call it\n\tinstead of half-destroying the source here.\n\n2005-11-15  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreestore.c (gtk_tree_store_move): Fix a memory\n\tleak.  (#321032, Peter Zelezny)\n\n2005-11-15  Michael Natterer  <mitch@imendio.com>\n\n\t* gdk/x11/gdkdisplay-x11.c (gdk_display_x11_finalize): destroy\n\tdisplay->xid_ht as late as possible (right before XCloseDisplay)\n\tbecause it still needs to be around when the display's screens are\n\tfinalized. (#85715)\n\n2005-11-14  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkselection.c (gtk_selection_data_set_uris): Don't\n\tleak result.  (#321441, Tommi Komulainen)\n\n2005-11-14  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkicontheme.c (gtk_icon_theme_get_icon_sizes):\n\tDon't crash if there is no builtin icon.\n\n2005-11-14  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkcellrenderertoggle.c (gtk_cell_renderer_toggle_set_property):\n\tremoved redundant calls to g_object_notify().\n\n2005-11-13  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdkcolor.c (gdk_color_parse): Documentation \n\timprovements.  (#321338)\n\n\t* gtk/gtktextiter.c (gtk_text_iter_forward_search): Make\n\tlimit an inclusive boundary.  (#321299)\n\n2005-11-12  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/Makefile.am: fixed icon rules so gtkbuiltincache.h is only\n\trebuilt if needed.\n\n2005-11-12  Dom Lachowicz <cinamod@hotmail.com>\n\n\t* modules/engines/ms-windows/msw_style.c: Bug #313627. Make win32 \n\ttheme's handling of toolbars, handleboxes, and menubars more in-line\n\twith Microsoft's IE style.\n\t* modules/engines/ms-windows/*.c: Indentation cleanups\n\t\n2005-11-12  Matthias Clasen  <mclasen@redhat.com>\n\n\tMake builtin icons work in gtk_window_set_icon_name() \n\t(#321046, Maxim Udushlivy)\n\n\t* gtk/gtkicontheme.c (insert_theme): Always insert the default\n\ttheme.\n\t(ensure_valid_themes): Call _gtk_icon_theme_ensure_builtin_cache()\n\tfrom here.\n\t(theme_lookup_icon, find_builtin_icon): ...and not from here.\n\t(gtk_icon_theme_lookup_icon): Remove an unncessary assert.\n\t(gtk_icon_theme_get_icon_sizes): Also check builtin icons.\n\n2005-11-12  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk/gtkfilesystemwin32.c (filename_get_info): Don't hide\n\tdotfiles, no such convention on Win32. Just hide files with the\n\thidden attribute. (#314627)\n\n2005-11-11  Federico Mena Quintero  <federico@ximian.com>\n\n\t* gtk/gtkfilechooserdefault.c (shortcuts_insert_path): Do not\n\tcheck whether the path is a folder.  It is useful to bookmark\n\tfiles as well (e.g. todo.txt), and this will also help\n\tperformance.\n\t(shortcuts_add_bookmark_from_path): Likewise.\n\t(shortcuts_activate_iter): Change folders or select files, as\n\tappropriate.\n\n2005-11-11  Federico Mena Quintero  <federico@ximian.com>\n\n\t* tests/autotestfilechooser.c (main): Use\n\tg_log_set_default_handler() instead of explicitly setting a\n\thandler for each domain.\n\n\t* gtk/gtkfilechooserdefault.c (shortcuts_add_volumes): Only get\n\tthe base path of the volume if it is mounted.\n\n2005-11-11  Michael Natterer  <mitch@imendio.com>\n\n\tAdded per-stepper API for GtkRange's stepper sensitivity as\n\tdiscussed in bug #321056:\n\n\t* gtk/gtkenums.h: added GtkSensitivityType which can be\n\t{ AUTO, ON, OFF }.\n\n\t* gtk/gtkrange.[ch]: added properties \"lower-stepper-sensitivity\"\n\tand \"upper-stepper-sensitivity\" and public getters/setters for\n\tthem. Changed stepper drawing to honor the new properties.\n\n\t* gtk/gtk.symbols: added the new symbols.\n\n2005-11-10  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkcombobox.c: Add show-popup and hide-popup signals and\n\temit them when the popup is shown or hidden.  (#162531, Tommi\n\tKomulainen)\n\n\t* tests/testcombo.c: Add an example of popuplating a combobox\n\ton click.\n\n\t* gtk/gtktreeview.c (gtk_tree_view_motion_resize_column): Another\n\terroneous semicolon.\n\n\t* gdk/x11/gdkcolor-x11.c (gdkx_colormap_get): Remove an erroneous\n\tsemicolon. \n\n\tDon't corrupt odd keymaps (#316638, Kean Johnston)\n\t\n\t* gdk/x11/gdkkeys-x11.c (set_symbol): Auxiliary function to\n\thandle frobbing keymaps with odd numbers of syms/code.\n\t\n\t* gdk/x11/gdkkeys-x11.c (update_keymaps): Use set_symbol() to \n\tfrob the keymap.\n\n\tImprove navigation to parent folders.  (#318444, Andrei Yurkevich)\n\t\n\t* gtk/gtkpathbar.[hc]: Add a child_path argument to\n\tthe path_clicked signal.\n\t* gtk/gtkfilechooserdefault.c (path_bar_clicked): Select the\n\tchild_path, if it is provided.\n\t* gtk/marshalers.list (path_bar_clicked): Add the necessary\n\tglue.\n\n\t* gtk/gtkmenu.c: Fix some compiler warnings. (#321141,\n\tKjartan Maraas)\n\t\n\t* gtk/gtk.symbols: \n\t* gtk/gtktreeview.h: \n\t* gtk/gtktreeview.c: Implement a getter for headers-clickable.\n\t(#163851, Richard Hult)\n\n2005-11-10  Michael Natterer  <mitch@imendio.com>\n\n\tApplied patch from maemo-gtk that addresses many issues wrt\n\tdisplay migration and display closing (bug #85715).\n\n\t* gdk/gdkdisplay.c (gdk_display_dispose): don't just set the\n\tdefault display to NULL when it's closed. Instead set the most\n\trecently opened display as new default (if one exists).\n\n\t* gdk/gdkpango.c (on_renderer_display_closed): fixed signature\n\tof this callback.\n\n\t* gdk/gdkscreen.c (gdk_screen_dispose): check if the GCs still\n\texist before unrefing them.\n\n\t* gdk/gdkwindow.c (_gdk_window_destroy_hierarchy): if the screen\n\tis closed, allow destruction of the root window.\n\n\t* gdk/x11/gdkdisplay-x11.c: moved some stuff from finalize() to\n\tdispose(), free stuff that was leaked before.\n\n\t* gdk/x11/gdkevents-x11.c (_gdk_x11_events_uninit_screen): check if\n\tthe xsettings_client still exists before destroying it.\n\n\t* gdk/x11/gdkkeys-x11.c: added finalization and free the allocated\n\tX resources.\n\n\t* gdk/x11/gdkpixmap-x11.c: moved stuff from finalize() to new\n\tdispose() implementation.\n\n\t* gdk/x11/gdkscreen-x11.c: moved stuff from finalize() to\n\tdispose() and check if it still exists before unrefing it. Set\n\ttheir pointers to NULL/None *after* upchaining in dispose(),\n\tbecause X11 implementations of members of the parent class still\n\tneed them for their own destruction.\n\n\t* gdk/x11/gdkvisual-x11.c: removed finalize() implementation which\n\twas g_error()ing when finalizing a visual.\n\n\t* gtk/gtkclipboard.c (gtk_clipboard_finalize): don't use\n\tget_clipboard_widget() because it would create the widget if it\n\tdoesn't exist. Use g_object_get_data() directly instead.\n\n\t* gtk/gtktextdisplay.c (on_renderer_display_closed): fixed signature\n\tof this callback.\n\n2005-11-10  Simos Xenitellis  <simos@gnome.org>\n\n\t* configure.in: Added Tatar (tt) to ALL_LINGUAS.\n\nWed Nov  9 16:29:42 2005  Tim Janik  <timj@imendio.com>\n\n\t* gtk/gtkrange.c: patch from maemo-gtk that changes GtkRange\n\tto render its arrows insensitive when the adjustment is in\n\tits min or max position. this makes range arrow behaviour \n\tconsistent with spin button behaviour. (#321056)\n\n2005-11-09  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/gdkinternals.h\n\t* gdk/gdk.c (gdk_debug_keys[]): Add new GDK_DEBUG_DRAW flag to\n\tthe GdkDebugFlag enum.\n\n\t* gdk/win32/gdkdrawable-win32.c: Use DRAW to trigger GDK_NOTEs in\n\tthis file instead of MISC. Now asking for MISC will give mainly\n\twindow manipulation debugging output with the Win32 backend.\n\n2005-11-09  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkwindow-win32.c: Remove unnecessary includes.\n\n\t(_gdk_win32_get_adjusted_client_rect): Remove this two-line\n\tfunction which was used only in one place.\n\n\t(get_outer_rect): Use _gdk_win32_adjust_client_rect().\n\n\t(gdk_window_set_geometry_hints): If we have identical minimum and\n\tmaximum size hints, remove the resize and maximize\n\tdecorations/functions. (#104514)\n\n\tIf we have a maximum size hint, remove the maximize\n\tdecoration/function but ensure the resize decoration/function is\n\tavailable. Otherwise ensure both resize and maximize\n\tdecorations/functions are there.\n\n\t(set_or_clear_style_bits): Factored out common code from\n\tgdk_window_set_decorations() and gdk_window_set_functions(). \n\n\tHack the window style setting once more: Only touch the window\n\tstyle bits corresponding to the GdkWMDecoration or GdkWMFunction\n\tparameter bitmasks. Hopefully this finally is the correct thing to\n\tdo. We used to clear all other bits than those that were being\n\tset, or set all other bits than those that were being cleared.\n\n\tTake into account that adding or removing decorations leaves the\n\twindow's outer size unchanged, i.e., the client area's size and\n\tposition change. This is apparently not what we want, so change\n\talso the window's (outer) position and size appropriately so that\n\tthe client area's position and size stay constant.\n\n\tgtk-demo's color selector dialog is now non-resizable like on X11\n\t(I tested with metacity in GNOME). Torn off menus are shrinkable\n\tvertically but have a maximum size, and are not maximizable or\n\tminimizable, like on X11.\n\n\t(gdk_window_set_decorations, gdk_window_set_functions): Let\n\tset_or_clear_decorations() do most of the job.\n\n\t* gdk/win32/gdkprivate-win32.h: Remove declaration of\n\t_gdk_win32_get_adjusted_client_rect().\n\n2005-11-09  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkwindow-win32.h (struct _GdkWindowImplWin32)\n\t* gdk/win32/gdkwindow-win32.c (gdk_window_impl_win32_init,\n\tgdk_window_get_type_hint, gdk_window_get_type_hint): Store the\n\ttype hint. Implement gdk_window_get_type_hint() by just returning\n\tthe hint stored.\n\n2005-11-09  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkwindow-win32.c (gdk_window_set_geometry_hints):\n\tRemove code that has been permanently ifdeffed out for two years.\n\n2005-11-08  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdkgc.c (gdk_gc_finalize): Unref tile and stipple when\n\tfinalizing a gc.  (#320789, Nickolay V. Shmyrev)\n\n\t* gdk/x11/gdkwindow-x11.c (gdk_window_set_icon_list): Ignore\n\ticons if they would make the request large enough to cause\n\tXlib to loose the connection.  (#320909, Claudio Saavedra)\n\n2005-11-08  Michael Natterer  <mitch@imendio.com>\n\n\t* gdk/gdk.symbols\n\t* gdk/gdkwindow.h\n\t* gdk/x11/gdkwindow-x11.c: added gdk_window_get_type_hint() (patch\n\textracted from maemo-gtk). Fixes bug #320872.\n\n2005-11-07  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkfilechooserdefault.c (shortcuts_reorder): Don't\n\tlooks the bookmark label when reordering.  (#320720, Jeremy Cook)\n\n\t* gtk/gtkpathbar.[hc]: Set focus-on-click to FALSE for all buttons.\n\tDon't grab focus when a slider button is pressed, instead, use\n\ta bit in the pathbar struct to determine whether to scroll up\n\tor down.  (#314486, Carlos Garnacho)\n\n\t* gtk/gtkentrycompletion.c (_gtk_entry_completion_popup): \n\tDon't popup the completions if the focus has already been\n\tmoved somewhere else.  (#319914, Christian Persch)\n\n\t* gtk/gtktoolitem.c (_gtk_tool_item_toolbar_reconfigured): \n\tRaise the drag_window after reconfiguring the \n\ttoolbar.  (#320803, Christian Persch)\n\n\t* gtk/gtk.symbols: \n\t* gtk/gtkfilechooserbutton.h: \n\t* gtk/gtkfilechooserbutton.c: Add a focus-on-click property\n\twith setter and getter.  (#318945, Christian Persch)\n\t\nMon Nov  7 16:15:16 2005  Tim Janik  <timj@imendio.com>\n\n\t* configure.in: fixed missing $X_CFLAGS setup in case x11.pc is present.\n\n2005-11-07  Matthias Clasen  <mclasen@redhat.com>\n\n\t* configure.in: Adjust to the stock icon changes.\n\t\n2005-11-07  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkcursor-win32.c (pixbuf_to_hbitmaps_normal):\n\tCorrect the calculation of maskstride. (#320152, Peter Zelezny)\n\t\n2005-11-06  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/Makefile.am (icons): fixed rule to actually create the\n\tsymlinks, erroring out if anything goes wrong.\n\n2005-11-06  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk/updateiconcache.c (build_cache): Can't rename a file if the\n\ttarget exists on Win32. First rename the target temporarily, then\n\tif the renaming of the source to target fails, restore the\n\toriginal name for the target.\n\n\t* gtk/Makefile.am: Use EXEEXT in the dependency on gtk-update-icon-cache.\n\n2005-11-06  Tor Lillqvist  <tml@novell.com>\n\n\t(pixbuf_to_hbitmaps_alpha_winxp): Use an 1-bit mask bitmap,\n\tlike pixbuf_to_hbitmaps_normal().\n\t(_gdk_win32_pixbuf_to_hicon_supports_alpha): Check\n\tG_WIN32_IS_NT_BASED() first, so we can pretend being on Win9x by\n\tsetting the G_WIN32_PRETEND_WIN9X environment variable.\n\t\n2005-11-06  Tor Lillqvist  <tml@novell.com>\n\n\tMake icon masks work on Win98 (#320152, Peter Zelezny)\n\n\t* gdk/win32/gdkcursor-win32.c (create_color_bitmap): Take also a\n\tparameter for the depth of the bitmap, so that this function can\n\tbe used to create 1-bit bitmaps, too.\n\t(pixbuf_to_hbitmaps_normal): Create an 1-bit bitmap for the mask,\n\tand initialize it properly.\n\n2005-11-04  Matthias Clasen  <mclasen@redhat.com>\n\n\tStore builtin stock icons in an icon cache, instead of\n\tpopulating a hash table with pixbufs at startup, to save both\n\tmemory and startup time.\n\n\t* gtk/stock-icons/*: Reorganize the icons in a directory structure\n\tsuitable for gtk-update-icon-cache, and rename them to match the\n\tstock ids.\n\n\t* gtk/gtkiconcache.[hc]: Support non-mmapped icon caches, and\n\tadd _gtk_icon_cache_has_icon_in_directory().\n\n\t* gtk/updateiconcache.c: Support a --source <VARIABLE> argument\n\tto store the contents of the icon cache in a C header.\n\n\t* gtk/gtkbuiltincache.h: Generated private header which contains \n\tthe icon cache for the builtin icons.\n\n\t* gtk/gtkicontheme.c: Create a GtkIconCache for the builtin\n\ticons, and use that in addition to the hash table whenever\n\tbuiltin icons are searched.\n\n\t* gtk/gtkiconfactory.c: Add GTK_ICON_SOURCE_STATIC_ICON_NAME and\n\tuse it for static stock ids. \n\t(get_default_icons): Don't add the builtin\n\ticons to the icon theme, just register the stock ids.\n\t(render_fallback_image): Take the fallback image out of the\n\tbuiltin icon cache.\n\t\n\t* gtk/Makefile.am: Remove stock-icons from SUBDIRS and add \n\tthe necessary machinery to rebuild gtkbuiltincache.h.\n\n2005-11-04  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtkrc.c (gtk_rc_reparse_all_for_settings): applied patch\n\tfrom maemo-gtk that changes the mtime check for rc files from\n\t'>' to '!=', otherwise theme changes go unnoticed when turning\n\tback the clock (Tommi Komulainen).\n\n2005-11-04  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk/gtkstatusicon.c (gtk_status_icon_set_tooltip): Plug memory\n\tleak on Win32.\n\n2005-11-03  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkcursor-win32.c: As there is only one GdkDisplay in\n\tthe Win32 backend, check that GdkDisplay* parameters are equal to\n\t_gdk_display instead of using the unnecessarily general\n\tGDK_IS_DISPLAY().\n\n\t(pixbuf_to_hbitmaps_alpha_winxp): Rename the variables for the\n\tcolor bitmap to have \"color\" in their name, for similarity with\n\tpixbuf_to_hbitmaps_normal(). Create a color bitmap for the mask,\n\ttoo, instead of creating a b&w bitmap with CreateBitmap(). Set up\n\tthe mask bitmap's contents, ones for those pixels in the color\n\tbitmap where the alpha is zero, zero for other pixels. We used to\n\tuse an uninitialized mask bitmap! This meant that icons and\n\tcursors created presumably worked more or less by accident.\n\tTotally blank icons with zero alpha everywhere (as used by\n\tgtktrayicon.c) definitely did not work as expected.\n\n\t* gtk/Makefile.am: Include gtkstatusicon.c on all platforms.\n\n\t* gtk/gtkstatusicon.c: Implement for Win32. Use code from\n\tgtktrayicon-win32.c as applicable. (gtktrayicon-win32.c is not\n\tnecessary and can be removed from CVS. It has never been mentioned\n\tin gtk/Makefile.am.) No tray icon widget, GtkImage or GtkTooltips\n\tare used on Win32. One label widget is used (but never shown) as\n\tgtk_widget_render_icon() needs a widget.\n\n\tIfdefs used as necessary in several places. It might be cleaner to\n\tsplit out the backend-specific parts to separate files, or at\n\tleast collect them into separate blocks in the file.\n\n\t(wndproc): New function. Window procedure to monitor mouse events\n\tin the system tray icon. Call gtk_status_icon_button_press() as\n\tneeded.\n\t(create_tray_observer): New function. Creates a hidden window that\n\tonly serves as a tray icon message observer.\n\n\t* tests/teststatusicon.c (icon_activated): Position the dialog\n\twith GTK_WIN_POS_CENTER.\n\t(do_quit): New function, hide and unref the GtkStatusIcon, and\n\tcall gtk_main_quit().\n\t(popup_menu): Add a Quit menu item that calls do_quit().\n\t\n2005-11-02  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkcolor-win32.c\n\t* gdk/win32/gdkscreen-win32.c\n\t* gdk/win32/gdkwindow-win32.c: Whitespace consistency\n\tfixes. Remove superfluous test for GdkWindow* parameters being\n\tnon-NULL. Testing GDK_IS_WINDOW() is enough. As there is only one\n\tGdkScreen and one GdkDisplay in the Win32 backend, use those\n\tvariables instead of the getter functions. For GdkDisplay* and\n\tGdkScreen* parameters, check that they are equal to the\n\tcorresponding singleton variables instead of the more general\n\tGDK_IS_DISPLAY() or GDK_IS_SCREEN().\n\n2005-11-02  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktextview.c: Remove some g_return_if_fail() from\n\tstatic functions, replace some others by g_assert().\n\t\n\t* gtk/gtktextview.c (selection_motion_event_handler) \n\t(gtk_text_view_start_selection_drag): Keep track of the original\n\tselection boundaries during a drag selection, in order to correctly\n\tdecide when to extend or shrink the selection.  (#320167,\n\treported by Arvind S N, patch by Paolo Borelli)\n\n\t* gtk/gtktextbtree.c (_gtk_text_line_char_to_byte_offsets): \n\t* gtk/gtktextiter.c (gtk_text_iter_backward_chars): Replace\n\tmanual offset calculations by g_utf8_offset_to_pointer().\n\t(#320360, Paolo Borelli)\n\nTue Nov  1 16:18:24 2005  Tim Janik  <timj@imendio.com>\n\n\t* gtk/gtkrbtree.[hc]: get rid of GAllocator usage, allocate and free \n\tnodes via the g_slice_*() API.\n\t_gtk_rbtree_new(): fixed wrong node allocation via g_new().\n\n2005-11-01  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkprivate-win32.h\n\t* gdk/win32/gdkglobals-win32.c\n\t* gdk/win32/gdkmain-win32.c (_gdk_windowing_init): Add more\n\tpre-interned GdkAtoms and pre-registered clipboard formats. Sort\n\ttheir declarations, definitions and assignments into a more\n\tlogical and consistent order.\n\n\t* gdk/win32/gdkmain-win32.c (_gdk_win32_cf_to_string): Include the\n\tCF_ prefix for the predefined clipboard format names. Put quotes\n\taround registered format names to distinguish them.\n\t\n\t* gdk/win32/gdkproperty-win32.c (gdk_property_change): Return\n\timmediately with a warning if the property type is STRING, TEXT,\n\tCOMPOUND_TEXT or SAVE_TARGETS, as these are X11-specific that we\n\tshould never pretend to handle on Win32. Handle only UTF8_STRING\n\there, other formats with delayed rendering. Use \\uc1 instead of\n\t\\uc0 when generating Rich Text Format for easier testability on\n\tXP, where WordPad misinterprets \\uc0 encoded characters. Add more\n\tGDK_NOTE debugging output for Clipboard operations.\n\n\t* gdk/win32/gdkselection-win32.c: Debugging printout improvements.\n\t(gdk_selection_convert): Don't pretent to handle STRING, just\n\tUTF8_STRING. Streamline error handling, don't unnecessarily have a\n\tGError which then isn't used for anything anyway if it gets set.\n\t(gdk_win32_selection_add_targets): Skip also STRING, TEXT,\n\tCOMPOUND_TEXT and SAVE_TARGETS in addition to UTF8_STRING.\n\n\t* config.h.win32.in: Sync with what configure produces.\n\n\t* configure.in: Don't look for X_PACKAGES unless building for\n\tx11. (#313986, John Ehresman)\n\n2005-10-28  Erdal Ronahi  <erdal.ronahi@gmail.com>\n\n\t* configure.in: Added ku (Kurdish) to ALL_LINGUAS\n\t\t\tWondered why there was no ku there before??\n\n2005-10-28  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkentrycompletion.c (_gtk_entry_completion_popup): Add the popup\n\twindow to the toplevels window group.  (#319912, Christian Persch)\n\n2005-10-28  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreemodelfilter.c (gtk_tree_model_filter_row_deleted): fix\n\tstupid thinko.\n\n2005-10-28  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkdnd.c (gtk_drag_get_cursor): Fix the anchor of the default\n\tdrag cursors.  (#319200, Federico Mena Quintero)\n\n\t* gtk/gtktreeview.c (gtk_tree_view_search_key_press_event): Handle\n\tShift-G to go to the previous match, like firefox.  (#320061, Christian \n\tNeumair)\n\n\t* gtk/gtktreemodelfilter.c (gtk_tree_model_filter_build_level): Fix a\n\tC99ism.  (#320000, Kazuki Iwamoto)\n\n\t* gtk/gtkaboutdialog.c (gtk_about_dialog_init): Add the little \n\tstars.  (#319985, Bastien Nocera)\n\n\t* gtk/gtktreeview.c (gtk_tree_view_search_entry_flush_timeout): Return\n\tFALSE, so we don't flush repeatedly.  (#319151, Alexander Larsson)\n\n2005-10-26  Michael Natterer  <mitch@imendio.com>\n\n\tFix bug #319974:\n\n\t* gtk/gtkcellrendererpixbuf.c (gtk_cell_renderer_pixbuf_set_property):\n\tmake sure that setting any of pixbuf/stock-id/icon-name resets the\n\tothers because they are mutually exclusive, and that unsetting any\n\tof them only resets the pixbuf and nothing else. Also added\n\tsome missing g_object_notify().\n\n\t(gtk_cell_renderer_pixbuf_get_property): simplified calls to\n\tg_value_set_object().\n\n\t(gtk_cell_renderer_pixbuf_create_stock_pixbuf)\n\t(gtk_cell_renderer_pixbuf_create_named_icon_pixbuf): added\n\tg_object_notify (\"pixbuf\").\n\n2005-10-27  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_button_press): Be more \n\tcareful about initializing cell_area.  (#319382, Tommi\n\tKomulainen)\n\n\t* gtk/gtkcombobox.c (gtk_combo_box_key_press): Don't eat\n\tCtrl-PageUp/PageDown.  (#318670, Christian Neumair)\n\n\t* demos/gtk-demo/clipboard.c (paste_received): Only set the\n\ttext if it is not NULL.  (#319930, Thomas Klausner)\n\n\t* gtk/gtkselection.c (gtk_selection_data_get_pixbuf): Close the\n\tloader before trying to get the pixbuf.  (#319930, Thomas Klausner)\n\n2005-10-26  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkfilesystem.c (gtk_file_system_module_load): \n\t* gtk/gtkthemes.c (gtk_theme_engine_load): \n\t* gtk/gtkimmodule.c (gtk_im_module_load): Use G_MODULE_BIND_LAZY\n\twhen dlopening modules.  (#319557, Laszlo Peter)\n\n2005-10-26  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktextbtree.c (gtk_text_btree_resolve_bidi): Only use text\n\tsegments when determining text direction.  (#319065, Tommi Komulainen)\n\n\t* gtk/gtktreeview.c (gtk_tree_view_destroy): Don't crash\n\ton duplicate destroy.  (#318953, Gustavo Carneiro)\n\n\t* gtk/gtkfilechooserbutton.c (gtk_file_chooser_button_new_with_dialog): \n\tPoint out that destroy-with-parent is a bad idea for the dialog\n\tpassed to this function.  (#318943, Christian Persch)\n\n\t* */Makefile.am: use $(GLIB_MKENUMS) instead of \n\tglib-mkenums.  (#318582, Damien Carbery)\n\n\t* gtk/gtktreemodel.c (gtk_tree_model_rows_reordered): Clarify\n\tdocs.  (#317682, Christian Neumair)\n\n\t* gdk/x11/gdkdnd-x11.c: Remove an extra const which doesn't\n\tseem to affect the placement of the data in the readonly \n\tsection, and causes problems with some compilers.  (#317844)\n\n2005-10-25  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreeviewcolumn.c (gtk_tree_view_column_cell_process_action):\n\tFix some issues with background drawing in RTL.  (#318781,\n\tEric Cazeaux)\n\n\t* tests/Makefile.am:\n\t* tests/testentrycompletion.c: Apply a patch by Christian\n\tPersch to add property editors.\n\n\t* gtk/gtkstatusicon.c: Emit activate on single-click,\n\tnot on double-click, change proposed by Milosz Derezynski.\n\n2005-10-25  Kristian Rietveld  <kris@gtk.org>\n\n\tFixes #311955, reported by Markku Vire; and a lot more.\n\n\t* gtk/gtktreemodelfilter.c: Made this thing work correctly.\n\tLevels can now have invisible nodes cached, functions have been\n\trewritten/refactored to take this into account; also the logic in\n\tsome functions has been corrected.\n\t\n\tEach referenced node now references all visible children or a single\n\tinvisible child, in order to be able to monitor all changes in the\n\tchild model required for correct operation.\n\n\tWhen a virtual root is set, all nodes on the virtual root level are\n\treferenced.\n\n\tAt last, a bunch of random bug fixes and comment updates.\n\n2005-10-25  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktexttagtable.c (gtk_text_tag_table_foreach): Add some\n\tmore docs.  (#319722, Paolo Borelli)\n\n\t* gdk/x11/gdkxftdefaults.c (init_xft_settings): Make the \n\tinitialization of screen_x11->xft_rgba more explicit.  (#319627,\n\tBogdan Nicula)\n\n\t* gtk/gtkfilechooser.c (gtk_file_chooser_class_init): Fix whitespace\n\tin a blurb.  (#319499, Francisco Javier F. Serrador)\n\n2005-10-24  Matthias Clasen  <mclasen@redhat.com>\n\n\tAdd settings to hide the input method and Unicode control character\n\tsubmenus in the context menus of GtkEntry and GtkTextView.  \n\t\n\t* gdk/x11/gdkevents-x11.c: Map GTK+ settings to X settings.\n\t\n\t* gtk/gtksettings.c (gtk_settings_class_init): Declare GTK+ settings here.\n\n\t* gtk/gtktextview.c (popup_targets_received): \n\t* gtk/gtkentry.c (popup_targets_received): Use the settings here.\n\n2005-10-24  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreemodelsort.c (gtk_tree_model_sort_row_inserted): emitting\n\trow-has-child-toggled when the level is not in the cache does not\n\tmake sense.  (This bug probably crept in during the early stages\n\tof GtkTreeModelSort when there wasn't a correct row-has-child-toggled\n\timplementation yet),\n\t(gtk_tree_model_sort_real_unref_node): only get the child iter\n\twhen we will actually also use it.\n\n2005-10-22  Michael Natterer  <mitch@imendio.com>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_scroll_to_cell): check for the\n\twidget being realized, in addition to being visible, to avoid\n\trunning into precondition check in gtk_tree_view_get_cell_area().\n\t(approved by Kris).\n\n2005-10-22  Dom Lachowicz <cinamod@hotmail.com>\n\n\t* modules/engines/ms-windows/msw_style.c (setup_msw_rc_style): \n\tExperimentally, scrollbar steppers can shrink to 8 pixels on \n\tWin32. Reflect that in the theme.\n\t* modules/engines/ms-windows/Theme/gtk-2.0/gtkrc: Experimentally,\n\tthere is a 1-pixel border between a scrollbar and its child\n\tin ScrolledWindows on Win32. Reflect that in the theme.\n\t\n2005-10-20  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtklabel.c (gtk_label_create_window): Use GDK_WINDOW_CHILD\n\tfor the selection window.  (#318806, Alex Larsson)\n\n2005-10-18  Federico Mena Quintero  <federico@ximian.com>\n\n\tFixes bug #317999:\n\n\t* tests/autotestfilechooser.c\n\t(test_button_folder_states_for_action): Test that we have either\n\t$cwd or the explicitly-set folder.\n\t(test_reload_sequence): Likewise.\n\n\t* gtk/gtkfilechooserdefault.c\n\t(gtk_file_chooser_default_get_current_folder): If our reload_state\n\tis RELOAD_EMPTY, return a GtkFilePath corresponding to $cwd.\n\n2005-10-14  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkdisplay-win32.c: Remove the clipboard viewer code.\n\tIt didn't really do anything useful, and was just confusing and\n\tincomplete. Comments claimed we don't do delayed rendering, but in\n\tfact we do, for images. (The delayed rendering code has other\n\tproblems, though, see #168173.) The clipboard viewer code was\n\tprobably even buggy (the WM_CHANGECBCHAIN handled didn't propagate\n\tthe message when necessary). It was just test code, it said so in\n\ta comment. Add something similar back later if necessary.\n\n\t(_win32_on_clipboard_change,\n\t_gdk_win32_register_clipboard_notification): Remove.\n\n\t(gdk_display_supports_selection_notification,\n\tgdk_display_request_selection_notification): Always just return\n\tFALSE. We didn't generate any GDK_OWNER_CHANGE events anywhere.\n\n2005-10-13  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkevents-win32.c (gdk_event_translate): Don't treat\n\tAlt-Enter specially. It does not have any special meaning and\n\tshould be passed on to the application. (#318378, Tim Evans)\n\n2005-10-13  Tor Lillqvist  <tml@novell.com>\n\n\tSet visual depth to 24 for 32 bits-per-pixel devices on\n\tWin32. This allows gdk_drawable_real_draw_pixbuf() to use the\n\toptimized composite_0888() function rather than the slower image\n\tdithering functions to draw pixbufs (#313993, John Ehresman)\n\n\t* gdk/win32/gdkimage-win32.c (_gdk_win32_new_image): Use\n\t_gdk_windowing_get_bits_for_depth() to initialize\n\tGdkImage::bits_per_pixel.\n\t(_gdk_windowing_get_bits_for_depth): Return 32 bits for depth 24.\n\n\t* gdk/win32/gdkpixmap-win32.c (gdk_pixmap_new): Use\n\t_gdk_windowing_get_bits_for_depth() to initialize\n\tBITMAPINFOHEADER::biBitCount.\n\n\t* gdk/win32/gdkvisual-win32.c (_gdk_visual_init): Set\n\tGdkVisual::depth to 24 even if GetDeviceCaps(BITSPIXEL) returns\n\t32.\n\n2005-10-12  Stefan Kost  <ensonic@users.sf.net>\n\n\t* demos/gtk-demo/appwindow.c: (about_cb):\n\t  use PACKAGE_VERSION,bump year (#318654)\n\n2005-10-11  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktextbtree.c (_gtk_text_btree_delete): Try to match an off \n\ttoggle here with the matching on toggle if it immediately follows. \n\tThis is a common case, and handling it here prevents quadratic blowup \n\tin cleanup_line() below.  (#317125)\n\n\t* gtk/gtktextsegment.h: \n\t* gtk/gtktextsegment.c (_gtk_char_segment_new_from_two_strings): Pass\n\tthe character counts into this function instead of computing them\n\tagain.\n\n2005-10-10  Tommi Komulainen  <tommi.komulainen@iki.fi>\n\n\t* gtk/gtkfilechooser.h (GtkFileChooserError): Add ALREADY_EXISTS error\n\tcode.\n\t* gtk/gtkfilechooserdefault.c\n\t(gtk_file_chooser_default_add_shortcut_folder): Return an error code\n\twhen the shortcut already exists in the sidebar.  (#147521)\n\n2005-10-09  Matthias Clasen  <mclasen@redhat.com>\n\n\t* tests/testcombo.c: Demonstrate how to use custom widgets in\n\ta GtkComboBox.  \n\n2005-10-07  Federico Mena Quintero  <federico@ximian.com>\n\n\tFixes bug #317999:\n\n\t* tests/autotestfilechooser.c (test_reload_sequence): Ensure that\n\tthe the result of gtk_file_chooser_get_folder() is NULL or\n\tnon-NULL at the right times.  Log the tests.\n\t(test_button_folder_states): New test for the initial states of\n\tthe current folder in GtkFileChooserButton.\n\t(main): Test that the number of warnings/errors/critical errors is\n\tzero.\n\n\t* gtk/gtkfilechooser.c (gtk_file_chooser_get_current_folder):\n\tClarify the documentation on when this can return NULL.\n\t(gtk_file_chooser_get_current_folder_uri): Likewise.\n\n\t* gtk/gtkfilechooserbutton.c (struct\n\t_GtkFileChooserButtonPrivate): Added a folder_has_been_set flag;\n\twe use it to keep track of whether a folder has been set.\n\t(gtk_file_chooser_button_map):  Implement.  If no folder has been\n\tloaded before, we at least try to load $cwd here.\n\t(gtk_file_chooser_button_constructor): If the construct-time\n\tdialog already has a folder set, turn on our folder_has_been_set\n\tflag.\n\t(dialog_current_folder_changed_cb): Turn on our\n\tfolder_has_been_set flag.\n\n2005-10-07  Michael Natterer  <mitch@gimp.org>\n\n\t* gtk/gtkfilechooserdefault.c: remove some explicit #defines of\n\tPROFILE_FILE_CHOOSER because they break compilation after the\n\tremoval of <unistd.h>.\n\n2005-10-07   Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkfilechooserdefault.c: Properly fix the unistd.h include\n\tby moving it out of the profiling ifdef.\n\n\t* gtk/gtkfilechooserdefault.c: Remove a redundant (and\n\tunconditional) include of unistd.h  (#318211, Kazuki Iwamoto)\n\n\t* gtk/gtktexttag.c (gtk_text_attributes_ref): Use\n\tg_return_val_if_fail(), not g_return_if_fail().  (#318412,\n\tKazuki Iwamoto)\n\n2005-10-06  Matthias Clasen  <mclasen@redhat.com> \n\t\t\n\t* gtk/gtk.symbols:\n\t* gtk/gtktextbuffer.h:\n\t* gtk/gtktextbuffer.c: Add a readonly has-selection property\n\twith a getter.  (#318161, Paolo Borelli)\n\n2005-10-05  Matthias Clasen  <mclasen@redhat.com>\n\n\t* README.in: Start collecting release notes for 2.10.\n\n\t* gtk/gtkrc.c (gtk_rc_clear_realized_style): Readd the memory\n\tleak fix, since the assertion failures were traced to \n\tan xchat bug.  (#314696)\n\t\n\t* gtk/gtkstyle.c (gtk_style_detach):\n\t(gtk_style_attach):  Documentation improvements.\n\t(gtk_style_detach): Assert that the attach_count is > 0.\n\n2005-10-04  Federico Mena Quintero  <federico@ximian.com>\n\n\t* gtk/gtkfilechooserdefault.c (switch_to_shortcut): Take a\n\tshortcut position, not a ShortcutsIndex, to make the function more\n\tgeneric.\n\t(home_folder_handler): Pass the resolved index to\n\tswitch_to_shortcut(), rather than just SHORTCUTS_HOME.\n\t(desktop_folder_handler): Likewise for SHORTCUTS_DESKTOP.\n\t(gtk_file_chooser_default_class_init): Add a \"quick-bookmark\"\n\tbinding signal, and bind it to Alt-1, Alt-2. ..., Alt-0.  These\n\tmake the respective key switch to the first, second, ..., tenth\n\tbookmark.\n\t(quick_bookmark_handler): Implement.\n\n2005-10-04  Federico Mena Quintero  <federico@ximian.com>\n\n\t* gtk/gtkpathbar.c (get_dir_name): Don't special-case Home and\n\tDesktop; just use their real names on the file system for the\n\tuser-visible names.\n\n\t* gtk/gtkfilechooserdefault.c\n\t(gtk_file_chooser_default_class_init): Add a \"desktop-folder\"\n\tbinding signal, and bind it to M-d by default.\n\t(desktop_folder_handler): Implement the default handler.\n\t(home_folder_handler): Use a helper function.\n\t(switch_to_shortcut): New helper function.\n\t(shortcuts_append_home): Don't special-case the name of \"Home\";\n\tjust use the folder name.\n\n2005-10-04  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk/gtkcalendar.c (gtk_calendar_init): Make it compile without\n\tHAVE__NL_TIME_FIRST_WEEKDAY. (#317910, Mathias Hasselmann)\n\n2005-10-04  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkrc.c (gtk_rc_clear_realized_style): Revert the change\n\tfrom yesterday, since it leads to assertion failures.  (#317879,\n\tSebastian Bacher)\n\n2005-10-03  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkcalendar.c (gtk_calendar_init): Call \n\tcalendar_compute_days() after setting priv->week_start.\n\n2005-10-03  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkrc.c (gtk_rc_clear_realized_style): Unref the style when\n\tremoving it from the hash table.  (#314696, Benjamin Berg)\n\n2005-10-01  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkdrawable-win32.c (blit_from_pixmap): In case\n\tBitBlt() fails with ERROR_INVALID_HANDLE, the most probable cause\n\tis that the the desktop isn't visible because the session has been\n\tswitched, the screen is locked, or a terminal server session\n\tdisconnected, so no error message necessary. (#137796)\n\n\tIt is of course remotely possible that BitBlt() failing with\n\tERROR_INVALID_HANDLE might also be caused by some other\n\tproblem. We could strive for perfection and track whether the\n\tdesktop is visible by using WTSRegisterSessionNotification() and\n\thandling WM_WTSESSION_CHANGE. I think that's overdoing it just for\n\tthis issue, though. If we would track desktop visibility, we\n\tshould then avoid even trying to update the display at all while\n\tthe desktop isn't visible.\n\n2005-09-30  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkcalendar.c (gtk_calendar_init): Another attempt\n\tto correct the calculations for the first week day. We may\n\tjust have to remove this code if too many locales turn out \n\tto have broken data. \n\n\t* gtk/gtkimage.c (gtk_image_expose): Don't leak pixbuf in\n\tsome cases.  (#317611, Tommi Komulainen)\n\n\t* gtk/gtksocket-x11.c (_gtk_socket_windowing_size_request):\n\tPrevent overflow when storing size hints in an unsigned\n\tshort variable. Tracked down by Ray Strode and S\u00f8ren Sandmann.\n\n2005-09-29  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkbutton.c (gtk_button_set_image): Check arguments.  (#317491,\n\tPaolo Borelli)\n\n\t* gtk/gtkpaned.c (gtk_paned_grab_notify): Stop drags when being\n\tgrab shadowed.  (#317332)\n\n2005-09-29  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk-zip.sh.in: DLLs are always in bin nowadays, no need to test.\n\n2005-09-28  Federico Mena Quintero  <federico@ximian.com>\n\n\t* tests/autotestfilechooser.c (test_reload_sequence): Oops, return\n\tif the unmap test fails.\n\t(test_reload_sequence): Use gtk_widget_show_now() instead of\n\tgtk_widget_show() for the dialog.\n\tThanks to Tim Janik for noticing these.\n\n2005-09-28  Federico Mena Quintero  <federico@ximian.com>\n\n\t* tests/testcellrenderertext.c: New file with a set of tests for\n\tGtkCellRendererText.  The idea is to run a text renderer through\n\tmost of its interesting property values to see that it works\n\tcorrectly.\n\n\t* tests/Makefile.am: Added testcellrenderertext.\n\n\t* gtk/gtkfilechooserdefault.c (load_set_model): Mark the\n\tentry/exit of this function for profiling.\n\t(gtk_file_chooser_default_style_set): Mark the start/end of the\n\tcalls to the parent class and the the signal emission for profiling.\n\n2005-09-29  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk/gtkmain.c (_gtk_get_localedir): The locale directory is\n\tpassed to bindtextdomain() which isn't UTF-8-aware, so convert to\n\tsystem codepage using g_win32_locale_filename_from_utf8().\n\t(#317457, Kazuki Iwamoto)\n\n2005-09-28  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkselection.c (_gtk_selection_request): Free mult_atoms \n\there. (#317039, Paolo Borelli)\n\n\t* gtk/gtktexttag.h: \n\t* gtk/gtktexttag.c (gtk_text_attributes_ref): Return the attributes\n\tto make this function work as boxed copy function.  (#317455,\n\tGustavo Carneiro)\n\n\t* gtk/gtkclipboard.c (request_image_received_func): Don't unref\n\tNULL.  (#316828, Tor Lillqvist)\n\n2005-09-28  Tor Lillqvist  <tml@novell.com>\n\n\t* modules/input/imime.c: Include <config.h>. (#317444, Kazuki\n\tIwamoto)\n\n2005-09-27  Federico Mena Quintero  <federico@ximian.com>\n\n\tDon't reload the current folder unnecessarily on ::map().\n\n\t* gtk/gtkfilechooserprivate.h (ReloadState): New enum to represent\n\tthe reloading state.\n\t(struct _GtkFileChooserDefault): Added a \"reload_state\" field.\n\n\t* gtk/gtkfilechooserdefault.c (gtk_file_chooser_default_init):\n\tInitialize impl->reload_state.\n\t(gtk_file_chooser_default_map): Check the impl->reload_state; load\n\ta default folder if no folder has been set, or reload the current\n\tone only if we had been unmapped first.\n\t(gtk_file_chooser_default_update_current_folder): Set the\n\treload_state to RELOAD_HAS_FOLDER.\n\t(gtk_file_chooser_default_unmap): Implement, and set the\n\treload_state to RELOAD_WAS_UNMAPPED.\n\t(shortcuts_model_create): Don't call shortcuts_add_bookmarks()\n\there; they'll get (re)loaded on ::map() anyway.\n\n\t* gtk/gtkfilechooserwidget.c\n\t(gtk_file_chooser_widget_constructor): Don't set a default folder here.\n\n\t* tests/autotestfilechooser.c (test_action_widgets): Don't take in\n\ta dialog; build it ourselves.\n\t(test_reload): New test to ensure that we don't load the default\n\tfolder more than once, and that we reload it when\n\tunmapping/remapping.\n\t(get_impl_from_dialog): New utility function.\n\t(test_widgets_for_current_action): Use get_impl_from_dialog().\n\n2005-09-27  Federico Mena Quintero  <federico@ximian.com>\n\n\t* gtk/gtkfilechooserdefault.c\n\t(gtk_file_chooser_default_constructor): Mark the entry/exit of\n\tthis function for profiling.\n\t(check_icon_theme): Likewise.\n\t(change_icon_theme): Likewise.\n\t(settings_notify_cb): Likewise.\n\t(gtk_file_chooser_default_screen_changed): Likewise.\n\t(update_chooser_entry): If the selection is empty, clear the file\n\tname entry only if we are in CREATE_FOLDER mode.  In SAVE mode,\n\tnothing will be selected when the user starts typeahead in the\n\ttreeview, and we don't want to clear the file name entry in that\n\tcase --- the user could be typing-ahead to look for a folder name.\n\tFixes bug #308332, patch by J\u00fcrg Billeter.\n\n2005-09-27  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkentrycompletion.c (_gtk_entry_completion_resize_popup):\n\tPop below the entry if there's more free space below the entry\n\tthan above.  (#316948, Tommi Komulainen)\n\n2005-09-26  Federico Mena Quintero  <federico@ximian.com>\n\n\tDo not create the save mode-specific widgets in the open modes, so\n\tthat we don't carry their baggage around.\n\n\t* gtk/gtkfilechooserdefault.c\n\t(gtk_file_chooser_default_constructor): Don't create the\n\tsave_widgets here.\n\t(save_widgets_create): Set the impl->save_widgets directly here,\n\tinstead of passing the widgets back to the caller.  Also, pack\n\tthem into the impl's box.\n\t(update_appearance): Create or destroy the save widgets as\n\tappropriate.  Set the action of the save_file_name_entry here.\n\t(shortcuts_add_current_folder): Set the active item in the\n\tsave_folder_combo only if it exists.\n\t(gtk_file_chooser_default_set_property): Don't set the action of\n\tthe save_file_name_entry here.\n\t(gtk_file_chooser_default_update_current_folder): Set the base\n\tfolder of the save_file_name_entry only if the entry exists.\n\t(shortcuts_drag_data_received_cb): Cast the selection_data->data\n\tto (const char *) since that's what shortcuts_drop_uris() expects.\n\t(file_list_drag_data_received_cb): Likewise, for\n\tg_uri_list_extract_uris().\n\n2005-09-26  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkwindow-win32.c (gdk_window_shape_combine_mask): Set\n\tthe shaped flag here, too. (#316871)\n\t(gdk_window_shape_combine_region): Currently unimplemented, so\n\tdon't do anything to the shaped flag here.\n\n2005-09-26  Matthias Clasen  <mclasen@redhat.com>\n\n\tFix #316871, reported by Dan Winship:\n\t\n\t* gdk/gdkwindow.h (struct _GdkWindowObject): Add a shaped flag.\n\n\t* gdk/x11/gdkwindow-x11.c (gdk_window_shape_combine_mask) \n\t(gdk_window_shape_combine_region): Set it here.\n\n\t* gdk/gdkwindow.c (gdk_window_invalidate_maybe_recurse): Don't\n\tremove the child area for shaped windows.\n\n2005-09-23  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkcellrendererpixbuf.c (gtk_cell_renderer_pixbuf_finalize):\n\tDon't leak expander pixbufs.  (#316946, Tommi Komulainen)\n\n2005-09-22  Michael Natterer  <mitch@imendio.com>\n\n\tRenamed GtkCellRendererKeys to GtkCellRendererAccel to be\n\tconsistent with GTK+ terminology:\n\n\t* gtk/gtkcellrendererkeys.[ch]\n\t* tests/testkeys.c: removed...\n\n\t* gtk/gtkcellrendereraccel.[ch]\n\t* tests/testaccel.c: ...and added.\n\n\t* gtk/Makefile.am\n\t* gtk/gtk.h\n\t* gtk/gtk.symbols\n\t* tests/Makefile.am: changed accordingly.\n\n2005-09-22  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkwidget.c (gtk_widget_class_init): Fix the documentation\n\tfor the grab-broken-event signal, noticed by Damon Chaplin.\n\n2005-09-21  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkselection-win32.c (gdk_selection_convert,\n\tgdk_text_property_to_text_list_for_display,\n\tgdk_text_property_to_utf8_list_for_display,\n\tgdk_win32_selection_add_targets,\n\t_gdk_win32_selection_convert_to_dib): Free return value from\n\tgdk_atom_name().\n\t(gdk_text_property_to_text_list_for_display): Drop GError variable\n\tthat isn't actually used after being set.\n\n2005-09-20  Johan Dahlin  <jdahlin@async.com.br>\n\n\t* gtk/gtkentry.c (gtk_entry_set_completion): Mention NULL in \n\tdocumentation.\n\n2005-09-20  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkselection-win32.c\n\t(gdk_selection_owner_get_for_display): Do return the correct owner\n\tfor CLIPBOARD (i.e., the owner of the Windows Clipboard, if it is\n\ta window GDK knows about). The reason to return NULL seems to have\n\tgone when in the fix for bug #163702 the artificial\n\tGDK_SELECTION_CLEAR event generation was removed from\n\tgdk_selection_send_notify_for_display(). Fixes bug #316552.\n\n2005-09-20  Matthias Clasen  <mclasen@redhat.com>\n\n\tAvoid unnecessary XkbGetState() calls and XkbStateNotify\n\tevents.  (#151555, S\u00f8ren Sandmann)\n\n\t* gdk/x11/gdkdisplay-x11.c (gdk_display_open): Use \n\tXkbSelectEventDetails() to select XkbStateNotify events\n\tfor only the state we care about.\n\n\t* gdk/x11/gdkprivate-x11.h:\n\t* gdk/x11/gdkkeys-x11.c (_gdk_keymap_state_changed): Pass\n\tthe event into the function and update the keymap state from\n\tthe state information contained in the event. Adjust all callers.\n\t\n2005-09-19  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkiconview.c: Use g_list_nth_data() instead of g_list_nth()->data\n\tin multiple places to avoid segfaults if the index is out of range.  \n\t(#316422, Guillaume Cottenceau)\n\t(gtk_icon_view_set_drag_dest_item): \n\t(gtk_icon_view_scroll_to_path): Fix a typo in the docs.  (#316419,\n\t#316424, Guillaume Cottenceau)\n\n2005-09-18  Hans Breuer  <hans@breuer.org>\n\n\t* gtk/gtktrayicon-win32.c : now handling events by hard-coded \n\tg_signal_emit_by_name() - will break when gtkstatusicon.c changes.\n\n2005-09-18  Hans Breuer  <hans@breuer.org>\n\n\t* gdk/gdk.symbols gdk/win32/gdkwin32.h gdk/win32/gdkcursorwin32.c : export\n\t_gdk_win32_pixbuf_to_hicon() as gdk_win32_pixbuf_to_hicon_libgtk_only()\n\t* gtk/gtktrayicon-win32.c : a lot of debug spew but it has started to show\n\tthe icon and is blinking with teststatusicon. More to come ...\n\n2005-09-18  Hans Breuer  <hans@breuer.org>\n\n\t* gtk/makefile.msc.in : fix typo for GTK_VER; define HAVE_CONFIG_H\n\tcause gtkprogressbar.c has #include <config.h> conditionally; less\n\tnoise from generated gtk.def\n\t* gtk/stock-icons/makefile.msc gdk/makefile.msc tests/makefile.msc : updated\n\t\n\t* gtk/gtktrayicon-win32.c : dummy implmentation to make gtk compile.\n\tFor me it works as well as the *NIX implemenation, that is not at all.\n\n\t* gdk/win32/gdkproperty-win32.c : implement gdk_atom_intern_static_string()\n\n\t* gdk/win32/gdkwindow-win32.c(gdk_window_set_urgency_hint) : only use\n\tonly use (WINVER >= 0x0500) when available from the SDK. Otherwise fall\n\tback to true dynamic linking of FlashWindowEx. Makes gtk+ work on NT4.0\n\tagain - if compiled properly.\n\n\t* tests/teststatusicon.c : don't use GNOME icons for testing, but icons\n\talready coming with Gtk+. Makes it compile on win32.\n\n2005-09-18  Guilherme de S. Pastore  <gpastore@cvs.gnome.org>\n\n\t* README.cvs-commits: fixed some tiny typos\n\n2005-09-16  Tor Lillqvist  <tml@novell.com>\n\n\t* modules/engines/ms-windows/msw_style.c (draw_extension,\n\tdraw_box_gap): Check whether the widget actually is a GtkNotebook\n\tbefore treating it as such. Drop some unneeded local variables,\n\tuse parameter with same information instead. (#316412)\n\n2005-09-15  Federico Mena Quintero  <federico@ximian.com>\n\n\t* tests/autotestfilechooser.c: Start a set of automated tests for\n\tthe file chooser.  The only test in there right now doesn't pass\n\tyet.  It specifies the intended behavior of the first optimization\n\tof a series which I'll do on the file chooser (see\n\thttp://primates.ximian.com/~federico/news-2005-09.html#14 for the\n\tdetails of this optimization).\n\n\t* tests/Makefile.am: Added autotestfilechooser.c.\n\n\t* gtk/gtkfilechooserprivate.h (struct\n\t_GtkFileChooserDialogPrivate): Move all the file chooser's private\n\tstructures to here, so that they can be accessed by\n\ttests/autotestfilechooser.c:  _GtkFileChooserDialogPrivate,\n\t_GtkFileChooserWidgetPrivate, LoadState, _GtkFileChooserDefault.\n\n\t* gtk/gtkfilechooserdialog.c: See above.\n\n\t* gtk/gtkfilechooserwidget.c: See above.\n\n\t* gtk/gtkfilechooserdefault.c: See above.\n\nThu Sep 15 15:27:55 2005  Tim Janik  <timj@imendio.com>\n\n\t* gtk/gtkwindow.c: \n\tgtk_window_map_event(): new function to work around lost unmap requests.\n\tfixes bug #316180.\n\n2005-09-14  Federico Mena Quintero  <federico@ximian.com>\n\n\t* gtk/gtkfilechooserdefault.c (gtk_file_chooser_default_init): Add\n\tan easy-to-find profiling marker when starting to create a file\n\tchooser.\n\t(browse_files_model_finished_loading_cb): Likewise, for when the\n\tchooser is finished loading.\n\n2005-09-14  Tristan Van Berkom <tvb@cvs.gnome.org>\n\n\t* gtk/gtkcolorbutton.c: Check \"color\" argument in \n\tgtk_color_button_set_color ()\n\n2005-09-14  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtklabel.c (gtk_label_get_type): \n\t* gtk/gtkbutton.c (gtk_button_get_type): \n\t* gtk/gtkwindow.c (gtk_window_group_get_type): No point in \n\tusing a mem chunk for window groups, buttons, labels.\n\n\t* gtk/updateiconcache.c (foreach_remove_func): Fix\n\ta use-after-free bug.  (#316256, Alexander Nedotsukov)\n\n2005-09-13  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/*.c: Various cleanups.  (#315360, Kjartan Maraas)\n\n\t* gdk/*.c: Various cleanups.  (#315359, Kjartan Maraas)\n\t\n2005-09-13  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkimcontextsimple.c (gtk_im_context_simple_filter_keypress): \n\tLet GDK_Return pass through in some more cases.\n\n\t* gtk/gtkentry.c (gtk_entry_key_press): Reset the im context before\n\tactivating the entry. \n\n\t* gtk/gtkiconview.c (gtk_icon_view_class_init):\n\t(gtk_icon_view_get_dest_item_at_pos):  Fix typos in the \n\tdocs.  (#316008, #316027, #316121, Guillaume Cottenceau)\n\n\t* gtk/gtkfilechooser.c (gtk_file_chooser_class_init): Add some docs.\n\t(#316001, Guillaume Cottenceau)\n\n\t* gtk/gtkdnd.c (gtk_drag_set_icon_name): Fix a copy-and-paste\n\tmistake in the docs.  (#315993, Guillaume Cottenceau)\n\n\t* tests/testentrycompletion.c (create_simple_completion_model): Add\n\tsome strings containing multibyte characters.\n\n\t* gtk/gtkentrycompletion.c (gtk_entry_completion_real_insert_prefix): \n\tFix prefix insertion for multibyte characters.  (#316095,\n\tTommi Komulainen)\n\n\t* gtk/gtktreeview.c (gtk_tree_view_create_row_drag_icon): \n\t* gtk/gtkiconview.c (gtk_icon_view_create_drag_icon): Silently\n\treturn NULL if the widget is not realized.  (#316023,\n\tGuillaume Cottenceau)\n\n2005-09-11  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdk.symbols: \n\t* gdk/gdkproperty.h: \n\t* gdk/x11/gdkproperty-x11.c (gdk_atom_intern_static_string): \n\tNew function to avoid pointless strdups when creating atoms\n\tfrom static strings.  \n\n\t* gdk/x11/*.c:\n\t* gtk/*.c:  Use gdk_atom_intern_static_string() where \n\tappropriate.\n\n2005-09-09  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkcellrendererkeys.h: \n\t* gtk/gtkcellrendererkeys.c: Add a cell renderer for displaying\n\tand editing accelerators, a port of EggCellRendererKeys .\n\n\t* gtk/gtk.symbols:\n\t* gtk/gtk.h:\n\t* gtk/Makefile.am: Add the keys cell renderer.\n\n\t* tests/Makefile.am: \n\t* tests/testkeys.c: Test GtkCellRendererKeys\n\n2005-09-09  Matthias Clasen  <mclasen@redhat.com>\n\n\tMake it possible to determine if a key event is for a\n\tmodifier key:\n\t\n \t* gdk/x11/gdkprivate-x11.h: \n\t* gdk/x11/gdkkeys-x11.c (_gdk_keymap_key_is_modifier): \n\tNew function to determine if a keycode is mapped to a modifier.\n\t(get_xkb): Get the modmap.\n\n\t* gdk/x11/gdkevents-x11.c (translate_key_event): Set the \n\tis_modifier bit by calling _gdk_keymap_key_is_modifier().\n\n\t* gdk/gdkevents.h (struct _GdkEventKey): Add an is_modifier\n\tbit.\n\n2005-09-09  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/gdkpixbuf-drawable.c (convert_real_slow): Remove an \n\tunused variable, noticed by Kjartan Maraas.\n\n2005-09-09  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreeviewcolumn.c (gtk_tree_view_column_button_event): \n\tMake drag reordering work properly for columns other than the\n\tfirst.  (#315054, Dan Winship)\n\t\n\t* gtk/gtkfontsel.c (gtk_font_selection_set_font_name): Handle \n\tinvalid fontnames better. (#136926, Michael R. Walton)\n\t\n\tStop cursor blinking in non-editable regions of a text view.\n\t(#311508, Torbj\u00f6rn Andersson)\n\t\n\t* gtk/gtktextview.c (gtk_text_view_check_cursor_blink): \n\t(cursor_blinks): Take editability into account when deciding\n\twhether the cursor blinks.\n\t(gtk_text_view_button_release_event): \n\t(gtk_text_view_move_cursor_internal): Update cursor blinking here.\n\n\t* gtk/gtkcellrenderertext.c (gtk_cell_renderer_text_start_editing): \n\tUse connect_after to connect to the focus_out event. This\n\tensures that the entry has already stopped blinking by the time\n\twe emit the edited signal.  (#315229, Thomas Leonard)\n\n\t* tests/testgtk.c: Use GDK_MOD1_MASK, not GDK_ALT_MASK.\n\n\t* gtk/gtkwindow.c (gtk_window_parse_geometry): Don't set\n\tunsigned ints to -1.  (#315481, Kjartan Maraas)\n\n\t* gtk/gtkcalendar.c (gtk_calendar_init): first_weekday is relative\n\tto week_1stday, not to Sunday. Gotta love the ISO 14652 guys...\n\t(#314473, Stanislav Brabec)\n\n2005-09-09  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_get_visible_range): Document\n\tmemory handling.  (#314975, Torsten Schoenfeld)\n\n\t* gtk/gtkiconview.c (gtk_icon_view_class_init): \n\t* gtk/gtkfilesel.c (gtk_file_selection_class_init): \n\t* gtk/gtkcombobox.c (gtk_combo_box_class_init): \n\t* gtk/gtklabel.c (gtk_label_class_init): \n\t* gtk/gtkcellrenderertext.c (gtk_cell_renderer_text_class_init): \n\tStylistic improvements and clarifications for some blurbs. \n\t(#315520, Clytie Siddall)\n\n2005-09-09  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkdisplay-win32.c (gdk_display_get_name): Cache the\n\tdisplay name. There is only one GdkDisplay on Win32, and\n\tconstructing the display name isn't entirely trivial, so cacheing\n\tis probably worth it. For instance GIMP calls this function a lot.\n\t(gdk_display_open): Call gdk_display_get_name() to prime the\n\tcached name.\n\t(gdk_display_get_n_screens, gdk_display_get_screen,\n\tgdk_display_get_default_screen): Verify parameter correctness like\n\tthe X11 backend does.\n\n\t* gdk/win32/gdkscreen-win32.c (gdk_screen_make_display_name):\n\tReturn a freshly allocated string, as the API specifies. Fixes a\n\theap corruption problem that caused random errors and crashes in\n\tGIMP, for instance.\n\n2005-09-07  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkimcontextsimple.c (gtk_im_context_simple_filter_keypress): \n\tMake C-u commit and restart hex input if we are already in a\n\thex sequence.\n\n2005-09-06  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gdk/x11/gdkkeys-x11.c (update_modmap): Make the modmap reflexive.\n\t(_gdk_keymap_add_virtual_modifiers): Don't add both Alt and Meta\n\tif they are mapped to the same modifier.\n\n\t* gtk/Makefile.am: Rename gtkstatusicon-x11.c and gtktrayicon.c\n\tto gtkstatusicon.c and gtktrayicon-x11.c\n\n\t* gtk/gtkaccelgroup.c: Include Super, Hyper and Meta in the\n\tdefault accel mod mask.\n\n\t* gtk/gtkaccelgroup.c (gtk_accelerator_parse): \n\t* gtk/gtkaccellabel.c (_gtk_accel_label_class_get_accelerator_label): \n\tDon't use GDK_ALT_MASK.\n\n\t* gdk/gdktypes.h: No need to introduce GDK_ALT_MASK\n\n2005-09-06  Matthias Clasen  <mclasen@redhat.com>\n\n\tAdd support for extra virtual modifiers:  (#85780, Owen Taylor)\n\t\n\t* tests/testgtk.c (create_key_lookup): Add tests for extra virtual\n\tmodifiers.\n\n\t* gtk/gtkkeyhash.c (_gtk_key_hash_lookup): Try to match both against\n\tMod2 - Mod5 and against Super, Hyper, Meta.\n\n\t* gtk/gtkaccellabel.c (_gtk_accel_label_class_get_accelerator_label): \n\t* gtk/gtkaccelgroup.c (gtk_accelerator_parse) \n\t(gtk_accelerator_name): Support Super, Hyper Meta and Mod2 - Mod5.\n\n\t* gdk/x11/gdkkeys-x11.c (struct _GdkKeymapX11): Add a \n\tmodmap to maintain the information which X modifiers map to\n\tvirtual modifiers.\n\t(get_xkb): Set up the modmap from the XKB tables.\n\t(update_keymaps): Set up the modmap from the information returned\n\tby XGetModifierMapping in the non-XKB case.\n\n\t* gdk/x11/gdkprivate-x11.h: \n\t* gdk/x11/gdkkeys-x11.c (_gdk_keymap_add_virtual_modifiers): New \n\tfunction to set the virtual modifiers in the state.\n\n\t* gdk/x11/gdkevents-x11.c (translate_key_event): Call \n\t_gdk_keymap_add_virtual_modifiers here.\n\n\t* gdk/gdktypes.h (GdkModifierType): Add bits for virtual Super, \n\tHyper and Meta modifiers. Also add GDK_ALT_MASK as an alias\n\tfor GDK_MOD1_MASK.\n\n2005-09-05  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkaction.c (connect_proxy): Set the label of a button\n\tif it has no child.  (#315253, John Finlay)\n\n2005-09-02  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtkimcontextsimple.h: Add a modifiers_dropped bit\n\n2005-09-02  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkentry.c (gtk_entry_destroy): Disconnect idle handlers\n\ton destroy to avoid problems when they are called on a destroyed\n\twidget.  (#315135, John Cupitt)\n\t\n\t* gtk/gtkentry.c (gtk_entry_class_init):\n\t* gtk/gtktextview.c (gtk_text_view_class_init): Add bindings\n\tfor Ctrl-Shift-A to unselect all.  (#309301, Kathy Fernandes)\n\n\t* gtk/gtkimcontextsimple.c: Rework the Unicode hex input\n\tcode. Now we only steal a single key combination, Ctrl-Shift-U,\n\tinstead of sixteen. \n\tA hex Unicode sequence must be started with Ctrl-Shift-U, followed\n\tby a sequence of hex digits entered with Ctrl-Shift still held.\n\tReleasing one of the modifiers or pressing space while the modifiers\n\tare still held commits the character. It is possible to erase\n\tdigits using backspace.\n\tAs an extension to the above, we also allow to start the sequence\n\twith Ctrl-Shift-U, then release the modifiers before typing any\n\tdigits, and enter the digits without modifiers.\n\t(#82011, Owen Taylor)\n\t\n2005-09-02  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkmain.c (gtk_get_event_widget): If the window is destroyed,\n\twe still need to deliver the destroy event.  (#314980, Chris Lahey)\n\n\t* gtk/gtktextview.c (gtk_text_view_key_press_event): Reset \n\tim context before committing \\n or \\t.\n\n2005-09-02  Alexander Larsson  <alexl@redhat.com>\n\n\t* gtk/gtkfilechooserdefault.c: (shortcuts_add_volumes),\n\t(shortcuts_activate_volume):\n\tHandle base_path being null in the rest of the cases (#310270)\n\n2005-09-02  Tor Lillqvist  <tml@novell.com>\n\n\t* gdk/win32/gdkevents-win32.c (gdk_event_translate): Keep track of\n\tcursor position also in root window coordinates. Prune out\n\tsuperfluous WM_MOUSEMOVE events even earlier, based on root window\n\tcoordinates. Windows sends WM_MOUSEMOVE messages after a new\n\twindow has ben mapped below the cursor even if the mouse doesn't\n\tmove. We used to generate GDK_MOTION_NOTIFY in these cases. This\n\tconfused at least gtk_menu_motion_notify(). (#314995)\n\n\t* gtk/gtkintl.h: No need to include config.h here. It caused\n\twarnings about GTK_LOCALEDIR being redefined on Win32 when\n\tcompiling files where gtkintl.h is included after gtkprivate.h\n\t(which #undefines and re-#defines GTK_LOCALEDIR on Win32).\n\n\t* gtk/gtkplug.c: Include config.h.\n\n2005-09-01  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkfilesystemunix.c: Pass statbufs down to \n\txdg_mime_get_mime_type_for_file() where possible, to avoid\n\tuseless re-stating.  \n\t\n\t* gtk/gtkaction.c (gtk_action_get_accel_closure): Fix doc\n\ttypo.  (#314921, Guillaume Cottenceau)\n\n\t* gdk/*.c: Intern some more strings.\n\t* gtk/gtkintl.h: \n\t* gtk/*.c: Define an I_() macro and use it instead of the \n\tbulky g_intern_static_string().\n\n2005-08-31  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkbindings.c (binding_signal_new): Intern the signal name\n\tinstead of copying it.\n\n\t* gtk/gtktypeutils.c (gtk_identifier_get_type): Some more string interning.\n\n\t* gtk/*.c: Also intern static strings passed to \n\tg_object_set_data().\n\n\t* gdk/Makefile.am: \n\t* gtk/Makefile.am: Intern type names in code generated by \n\tglib-mkenums, too.\n\n\t* gtk/*.c: \n\t* gdk/x11/*.c: \n\t* gdk/*.c: Intern type names before registering the type to avoid \n\tunnecessary copies.\n\n\t* configure.in: Require GLib 2.9.0\n\n2005-08-31  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktoolbar.c: Undeprecate gtk_toolbar_set_icon_size(),\n\tand add icon-size and icon-size-set properties.  (#314172)\t\n\n\t* gtk/gtkwindow.c (gtk_window_set_transient_for): Inherit window\n\tgroups across transient parents.  (#312918, Christian Persch)\n\n\t* gtk/gtktreemodel.c: Some documentation fixes.  (#314882,\n\tGuillaume Cottenceau)\n\n\t* gtk/gtktextiter.c (gtk_text_iter_backward_visible_cursor_positions): \n\tFix a typo in the docs.  (#314878, Guillaume Cottenceau)\n\n2005-08-30  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkentry.c (gtk_entry_class_init): Add key bindings to\n\tmake C-/ select all and C-\\ unselect all.  (#309301,\n\tKathy Fernandez)\n\n\t* gtk/gtkimcontextsimple.c: Change the compose sequence for\n\tsoft hyphen to be multi_key-minus-minus-space, and add\n\tcompose sequences multi_key-minus-minus-period and \n\tmulti_key-minus-minus-minus for en dash and em dash.\n\t(#172653, Christian Lohmaier)\n\n\t* gtk/gtkentry.c (gtk_entry_draw_frame): Fix some unused\n\tcode.  (#313946, Christian Persch)\n\n\t* gtk/gtkuimanager.c (gtk_ui_manager_class_init): Another\n\tfix for the default value of the \"ui\" property.\n\n2005-08-30  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtk.symbols: \n\t* gtk/gtkselection.h:\n\t* gtk/gtkselection.c: Add functions which look for text, image\n\tor uri targets in an array of atoms.   (#314089, Mark Wielaard)\n\n\t* gtk/gtk.symbols: \n\t* gtk/gtkselection.h:\n\t* gtk/gtkselection.c (gtk_selection_data_targets_include_uri): \n\tAdd a function to check wether targets include uri.  \n\t(#314092, Mark Wielaard)\n\t\n\t* gtk/gtk.symbols: \n\t* gtk/gtkwindow.h: \n\t* gtk/gtkwindow.c: Add a deletable property with getter\n\tand setter, to control the close button in the window \n\tframe.  (#59718, Havoc Pennington)\n\n2005-08-29  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkrc.key.emacs: Add C-n/C-p/C-f/C-b as alternatives\n\tto the arrow keys for menu navigation.  (#162825, Carl Worth)\n\n\t* gtk/gtkentry.c, gtk/gtktextview.c: More typo fixes\n\n\t* gtk/gtksocket-x11.c, gtk/gtkstatusicon-x11.c: Fix typos.\n\n\t* gtk/gtkstatusicon-x11.c (gtk_status_icon_new_from_stock): \n\t* gtk/gtkimage.c (gtk_image_new_from_stock): Don't\n\trefer to nonexisting stock ids.\n\n\t* gtk/gtktextview.c (popup_targets_received): \n\t* gtk/gtkentry.c (popup_targets_received): Construct\n\tthe \"Select All\" menuitem from stock.\n\n\t* gtk/stock-icons/stock_select_all_{16,24}.png:\n\t* gtk/stock-icons/Makefile.am: \n\t* gtk/gtkiconfactory.c:\n\t* gtk/gtkstock.h: \n\t* gtk/gtkstock.c: Add a \"Select All\" stock item.  (#78545,\n\tCalum Benson)\n\n\t* gtk/gtktrayicon.c: Add a pointer to the spec.\n\n\t* gtk/gtkstatusicon-x11.c: Add docs.\n\n\t* gtk/gtkstatusicon.h: Fix a typo.\n\n\tAdd a cross-platform \"tray icon\" API, by\n\tporting EggStatusIcon/EggTrayIcon (#105101)\n\t\n\t* gtk/gtkstatusicon.h: A GtkStatusIcon is an object which\n\tdisplays an icon in a notification area.\n\n\t* gtk/gtkstatusicon-x11.c: GtkStatusIcon implementation for\n\tX11, using GtkTrayIcon.\n\n\t* gtk/gtktrayicon.h: \n\t* gtk/gtktrayicon.c: An implementation of the freedesktop.org\n\tsystem tray specification, not public API.\n\n\t* gtk/gtk.symbols: Add new exported functions.\n\n\t* gtk/gtk.h: Include gtkstatusicon.h.\n\n\t* gtk/Makefile.am: Add new files.\n\n\t* tests/Makefile.am:\n\t* tests/teststatusicon.c: Test for GtkStatusIcon.\n\n2005-08-29  Christopher Aillon  <caillon@redhat.com>\n\n\t* gtk/gtkstock.c: Add builtin GtkStockItems for GTK_STOCK_CONNECT\n\tand GTK_STOCK_DISCONNECT\n\t\n2005-08-29  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtksocket-x11.c (_gtk_socket_windowing_embed_notify): \n\tUse XFixesChangeSaveSet if available.  (#314682)\n\n\t* gtk/gtkmenu.c (gtk_menu_grab_notify):  Only cancel if the menu\n\twas active.  (#314298, Christian Persch, analysis by Mark McLoughlin)\n\n2005-08-29  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkiconcache.c (_gtk_icon_cache_get_icon): Remove an\n\taccidentally leftover duplicate pixbuf creation.  (#314700,\n\tKjartan Maraas)\n\n\t* gtk/gtksettings.c (settings_update_cursor_theme): Don't \n\tleak the cursor theme name.  (#314693, Kjartan Maraas)\n\n\t* gdk/x11/gdkasync.c (_gdk_x11_get_window_child_info): Free \n\tstate.children in all cases.  (#313862, Kjartan Maraas)\n\n2005-08-28  Matthias Clasen  <mclasen@redhat.com>\n\n\t* po/POTFILES.in, po-properties/POTFILES.in:\n\tAdd gdk/gdkscreen.c\n\n2005-08-27  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkuimanager.c (gtk_ui_manager_class_init): Fix the default\n\tvalue of the ui property. (#314532, Yong Wang)\n\n\t* gdk/x11/gdkproperty-x11.c (gdk_property_get): Don't warn\n\twhen G_MAXLONG is passed as length.  \n\n2005-08-26  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/updateiconcache.c: Add a separate --ignore-theme-index option\n\tto avoid overloading --force.  (JP Rosevaar)\n\n2005-08-26  Matthias Clasen  <mclasen@redhat.com>\n\n\t* configure.in: Bump version to 2.9.0\n\n\t* gdk/gdk.symbols: \n\t* gdk/gdkscreen.h: \n\t* gdk/gdkscreen.c: Make the GdkScreen font options api\n\tpublic, and add properties GdkScreen::font-options and\n\tGdkScreen::resolution.  (#314004)\n\n\t* gdk/gdkpango.c:\n\t* gtk/gtksettings.c:\n\t* gtk/gtkwidget.c: Adjust all callers.\n\t\n\t* gdk/gdkintl.h: Simplify and use glib/gi18n-lib.h.\n\t* gdk/gdkpango.c: Include gdkintl.h, not gtkintl.h.\n\t* gdk/gdkscreen.c: Include gdkintl.h.\n\n\t* gtk/gtkicontheme.c (theme_lookup_icon): Avoid an uninitialized\n\tvariable warning, pointed out by Colin Walters. (#314585)\n\n2005-08-26  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk/gtkfilesystemwin32.c: Remove some ifdeffed out debugging\n\tprintouts.\n\t(gtk_file_system_win32_parse): Don't mishandle UNC paths. (#314519)\n\n2005-08-26  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkcalendar.c (gtk_calendar_init): Fix the calculation\n\tof week_start.  (#314473, JP Rosevaar)\n\n2005-08-25  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gtk/gtkfilesystemmodel.c (idle_finished_loading_cb): Acquire GDK\n\tlock.  (#314533, Thomas Fitzsimmons)\n\n2005-08-25  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktoolbar.c (_gtk_toolbar_elide_underscores): Handle\n\tNULL gracefully.  (#314523, Ed Catmur)\n\n2005-08-25  Owen Taylor  <otaylor@redhat.com>\n\n\t* gdk/x11/gdkcursor-x11.c (gdk_x11_display_set_cursor_theme): \n\tHandle theme == NULL.\n\n2005-08-25  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkmenutoolbutton.c (menu_position_func): Take widget\n\ty offset into account when positioning the popup.  (#314470,\n\tChristian Persch)\n\n2005-08-25  Owen Taylor  <otaylor@redhat.com>\n\n\t* gdk/gdkscreen.c (gdk_screen_get_type): Use gdk_screen_init\n\tas instance_init, not base_init! (#314452, Fix from Frederic\n\tCrozat,\treported by Joe Marcus Clarke). Trivial cleanup: use -1.\n\trather than 1 for a negative flag value.\n\n2005-08-24  Owen Taylor  <otaylor@redhat.com>\n\n\t* gdk/gdkpango.c (draw_error_underline): Add a note about\n\tcut-and-paste between here and Pango.\n\n2005-08-24  Matthias Clasen  <mclasen@redhat.com>\n\n\t* === Released 2.8.2 ===\n\n\t* gtk/gtkclipboard.c (request_image_received_func): Use the correct\n\tcallback for image/gif, and also try image/bmp.  (#314086,  Mark \n\tWielaard)\n\n\t* gtk/gtkfilesystemunix.c (gtk_file_system_unix_volume_render_icon): \n\tUse gnome-dev-harddisk for volumes, not gnome-fs-blockdev.  (#314382,\n\tSebastien Bacher)\n\t\n\t* NEWS: Updates\n\n\t* gtk/gtksettings.c (gtk_settings_get_for_screen): Make sure font\n\tand cursor settings get propagated down to the screen initially.\n\tPointed out by Frederic Crozat.\n\n\t* gtk/gtkicontheme.c (ensure_valid_themes): Don't try to send a client\n\tmessage if the screen is NULL. Noticed by Kjartan Maraas.\n\n2005-08-24  Matthias Clasen  <mclasen@redhat.com>\n\n\t* Bump version\n\n\t* === Released 2.8.1 ===\n\n\t* NEWS: Updates\n\t\n2005-08-24  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreemodelfilter.c (gtk_tree_model_filter_visible): Protect\n\tagainst lazy filterers which return values other than TRUE or\n\tFALSE from their visible func.  (#314335)\n\n2005-08-23  Owen Taylor  <otaylor@redhat.com>\n\n\tFix for #314004, reported by Michael Reinsch:\n\n\t* gdk/gdk.symbols:\n\t* gdk/gdkscreen.[ch]: Add gdk_screen_get/set_font_options_libgtk_only()\n\tAdd gdk_screen_get/set_resolution_libgtk_only()\n\n\t* gdk/gdkpango.c (gdk_pango_context_get_for_screen): Set\n\tthe options for the screen on the newly created context.\n\n\t* gtk/gtksettings.c (settings_update_font_options/dpi) gtkwidget.c: \n\tMove font options and dpi code from gtkwidget.c to gtksettings.c, set\n\tthe font options on the screen.\n\n\t* gtk/gtkwidget.c (gtk_widget_update_pango_context): Just get\n\tthe font options from the screen and set them on the context.\n\n2005-08-23  Kristian Rietveld  <kris@gtk.org>\n\n\t* gtk/gtktreemodelsort.c (gtk_tree_model_sort_row_inserted): don't\n\tbother inserting new rows in a level with a zero refcount and\n\timmediately free the level. (Fixes #312350, reported by Markku Vire).\n\n2005-08-23  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/updateiconcache.c: Complain when there is no index.theme file\n\tin the specified directory, unless --force is used. Also add an\n\t--index-only option to create caches without image data.\n\n\t* gtk/gtkfilechooserdefault.c (shortcuts_append_desktop): Fix a\n\tC99ism.  (#314262, Robert Jeff Mitchell)\n\t\n2005-08-22  Manish Singh  <yosh@gimp.org>\n\n\t* gtk/gtkicontheme.h: add declaration for _gtk_icon_theme_check_reload.\n\n\t* gtk/gtkwindow.c: remove declaration of gtk_window_read_rcfiles.\n\n2005-08-22  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkwindow.c (gtk_window_client_event): \n\t* gtk/gtkicontheme.c (ensure_valid_themes) \n\t(_gtk_icon_theme_check_reload): Implement a clientmessage based\n\tscheme for makeing sure that all GTK+ applications notice if an\n\ticon theme has been updated. This should prevent multiple versions\n\tof an icon theme cache to be mapped in memory at the same time,\n\twhich can cause excessive memory consumption.  (#313156, Chris \n\tLahey)\n\n2005-08-22  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkicontheme.c (gtk_icon_theme_load_icon): Add a note\n\tregarding icon theme changes.\n\n\t* gtk/gtkiconcache.c (_gtk_icon_cache_get_icon): When returning\n\tpixbufs which are backed by the mmapped memory of an icon cache,\n\tincrease the refcount of the icon cache, so that the memory is not\n\tmunmapped away underneath the pixbuf upon icon theme changes.  \n\t(#314170, Kjartan Maraas)\n\n\t* docs/tools/Makefile.am (LDADDS): Add GTK_DEP_LIBS, in order \n\tto link against Xext.  (#314062)\n\n\t* gtk/gtkhsv.c (paint_triangle): One more fix to prevent buffer\n\toverruns.  (#314081, Hans Breuer)\n\n2005-08-20  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkentry.c (gtk_entry_get_layout): Clarify that the\n\treturned layout must not be modified.\n\nSat Aug 20 16:12:14 2005  Jonathan Blandford  <jrb@redhat.com>\n\n\t* gtk/gtktreeview.c (gtk_tree_view_set_model): clear\n\tscroll_to_path if the model changes.\n\n\t* gtk/gtkiconview.c: (gtk_icon_view_destroy),\n\t(gtk_icon_view_size_allocate), (gtk_icon_view_set_cursor),\n\t(gtk_icon_view_scroll_to_path): Handle scrolling to a path before\n\twe're realized, #312798\n\t(gtk_icon_view_set_model): clear scroll_to_path if the model\n\tchanges.\n\n2005-08-20  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkrange.c (gtk_range_adjustment_changed) \n\t(gtk_range_adjustment_value_changed):  Don't queue a draw\n\tif the layout has not changed.  (#313991, Benjamin Berg)\n\n2005-08-19  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtktreeitem.c: Remove duplicate lines.  (#313344,\n\tBenoit Carpentier)\n\n\t* modules/engines/ms-windows/msw_style.c (setup_system_styles): \n\tFix a typo. \n\n\t* gtk/gtkfilechooserbutton.c (change_icon_theme) \n\t(model_add_special, model_add_special, model_add_volumes):\n\tHandle pixbuf being NULL without warnings. Also, don't\n\tleak pixbuf references when the icon theme is changed.\n\n\t* gtk/gtkmain.c (gtk_get_event_widget): Don't access\n\tthe user data on destroyed windows, since at best\n\tit can be a stale pointer.  (#313953, Robin Green)\t\n\n2005-08-19  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkhsv.c (paint_triangle): Avoid a buffer overrun.  \n\t(#313900, Sebastien Bacher)\n\n\t* gtk/gtktreeview.c (gtk_tree_view_get_visible_range): Return\n\tFALSE if the tree is empty.  (#313891, Guillaume Cottenceau)\n\n\t* gdk/x11/gdkdnd-x11.c (_gdk_drag_get_protocol_for_display) \n\t(xdnd_read_actions, get_client_window_at_coords_recurse): \n\tFree data returned from XGetWindowProperty. \n\n\t* gdk/x11/gdkevents-x11.c (fetch_net_wm_check_window) \n\tFree data returned from XGetWindowProperty.  (313867, Kjartan\n\tMaraas)\n\t\n\t* gdk/x11/gdkdnd-x11.c (get_client_window_at_coords_recurse): Free\n\tchildren in all cases.  (#313862, Kjartan Maraas)\n\n\t* gtk/gtkicontheme.c (theme_lookup_icon): Store GtkIconData structs \n\tin the per-directory hash, even if they come from the icon cache. \n\tWe tried to avoid that before, but as a result leaked icon data\n\tstructs.  (#313852, Kjartan Maraas)\n\n2005-08-18  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkmenutoolbutton.c (gtk_menu_tool_button_destroy): Disconnect\n\tsignal handlers on destroy, not on finalize.  (#313759, Brett Atoms)\n\n2005-08-15  Owen Taylor  <otaylor@redhat.com>\n\n\t* configure.in: Add -lXext to GDK_EXTRA_LIBS in absence of pkg-config\n\tfiles for x11/xext. (Jonas Bonn)\n\n2005-08-15  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk/gtkicontheme.c (theme_lookup_icon): Put debugging printout\n\tinside GTK_NOTE.\n\n2005-08-15  Owen Taylor  <otaylor@redhat.com>\n\n\t* configure.in: Fix have_base_pc / have_base_x_pc typo.\n\n\t* gdk/x11/gdkdrawable-x11.c gtk/gtksettings.c: Remove panoxft.h includes.\n\t(#313417, James Andrewartha)\n\n\t* configure.in: Add fontconfig to X_PACKAGES, since we use it for\n\tFcNameConstant(). (More of #313417)\n\n2005-08-15  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtkfilechooserdefault.c: When using gtk_dialog_run() for\n\tmodal dialogs, make sure to inherit the window group from \n\tthe parent, since we don't inherit window groups across\n\ttransient parents currently.  (#312918, Christian Persch)\n\n\t* gtk/gtkmessagedialog.c (gtk_message_dialog_new): \n\t* gtk/gtkdialog.c (gtk_dialog_run): Slight update to the docs. \n\n\t* gtk/gtkiconview.c (gtk_icon_view_select_path) \n\t(gtk_icon_view_scroll_to_path): Handle paths of depth 0\n\tgracefully.  (#312796, Jonathan Blandford)\n\n\t* tests/testtoolbar.c: Add some more tests for menu placement.\n\n\t* gtk/gtkmenutoolbutton.c (menu_position_func): \n\t* gtk/gtktoolbar.c (menu_position_func): Improve positioning\n\tof toolbutton menus and of the overflow menu.  (#312937, \n\t#153870, Christian Persch, Paolo Borelli)\n\n2005-08-15  Tor Lillqvist  <tml@novell.com>\n\n\t* gtk/updateiconcache.c: Use g_path_get_dirname() instead of\n\tthe nonportable <libgen.h> and dirname().\n\n2005-08-15  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/gtksizegroup.c: Use object data to mark widgets and\n\tgroups as visited, so that we avoid constant extra list\n\ttraversals. Also allocate quarks in class_init.  (#311618,\n\tMichael Natterer)\n\n\t* gtk/gtkicontheme.c (gtk_icon_theme_lookup_icon): Correct the \n\tdownload location for the hicolor icon theme. (#313475, Olexiy \n\tAvramchenko)\n\n\t* gtk/gtkicontheme.c: Remove debug spew. \n\n2005-08-15  Owen Taylor  <otaylor@redhat.com>\n\n\t* gdk/linux-fb/gdkwindow-fb.c (gdk_window_set_back_pixmap): \n\t* gdk/win32/gdkwindow-win32.c (gdk_window_set_back_pixmap): \n\t* gdk/x11/gdkwindow-x11.c (gdk_window_set_back_pixmap):\n\tHandle pixmap == NULL when checking for a colormap.\n\t(Allin Cottrell).\n\n2005-08-14  Matthias Clasen  <mclasen@redhat.com>\n\n\t* gtk/updateiconcache.c: Store only one copy of the pixel data\n\tfor symlinked icons. To achieve this, maintain a hashtable \n\tmapping pathnames to pixel data, and share the pixel data for\n\tall symlinks resolving to the same pathname. When writing out\n\tthe image data, write out the pixel data only the first time\n\tit is met, and store the offset pointing to the first copy\n\tfor use in all later cases.\n\tThis reduces the size of the Bluecurve icon cache from 40\n\tto 13MB. (#312972)\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/ltmain.sh": "#! /bin/sh\n## DO NOT EDIT - This file generated from ./build-aux/ltmain.in\n##               by inline-source v2014-01-03.01\n\n# libtool (GNU libtool) 2.4.6\n# Provide generalized library-building support services.\n# Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n\n# Copyright (C) 1996-2015 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\nPROGRAM=libtool\nPACKAGE=libtool\nVERSION=2.4.6\npackage_revision=2.4.6\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# Run './libtool --help' for help with using this script from the\n# command line.\n\n\n## ------------------------------- ##\n## User overridable command paths. ##\n## ------------------------------- ##\n\n# After configure completes, it has a better idea of some of the\n# shell tools we need than the defaults used by the functions shared\n# with bootstrap, so set those here where they can still be over-\n# ridden by the user, but otherwise take precedence.\n\n: ${AUTOCONF=\"autoconf\"}\n: ${AUTOMAKE=\"automake\"}\n\n\n## -------------------------- ##\n## Source external libraries. ##\n## -------------------------- ##\n\n# Much of our low-level functionality needs to be sourced from external\n# libraries, which are installed to $pkgauxdir.\n\n# Set a version string for this script.\nscriptversion=2015-01-20.17; # UTC\n\n# General shell script boiler plate, and helper functions.\n# Written by Gary V. Vaughan, 2004\n\n# Copyright (C) 2004-2015 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n\n# As a special exception to the GNU General Public License, if you distribute\n# this file as part of a program or library that is built using GNU Libtool,\n# you may include this file under the same distribution terms that you use\n# for the rest of that program.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNES FOR A PARTICULAR PURPOSE. See the GNU\n# General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program. If not, see <http://www.gnu.org/licenses/>.\n\n# Please report bugs or propose patches to gary@gnu.org.\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# Evaluate this file near the top of your script to gain access to\n# the functions and variables defined here:\n#\n#   . `echo \"$0\" | ${SED-sed} 's|[^/]*$||'`/build-aux/funclib.sh\n#\n# If you need to override any of the default environment variable\n# settings, do that before evaluating this file.\n\n\n## -------------------- ##\n## Shell normalisation. ##\n## -------------------- ##\n\n# Some shells need a little help to be as Bourne compatible as possible.\n# Before doing anything else, make sure all that help has been provided!\n\nDUALCASE=1; export DUALCASE # for MKS sh\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in *posix*) set -o posix ;; esac\nfi\n\n# NLS nuisances: We save the old values in case they are required later.\n_G_user_locale=\n_G_safe_locale=\nfor _G_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\ndo\n  eval \"if test set = \\\"\\${$_G_var+set}\\\"; then\n          save_$_G_var=\\$$_G_var\n          $_G_var=C\n\t  export $_G_var\n\t  _G_user_locale=\\\"$_G_var=\\\\\\$save_\\$_G_var; \\$_G_user_locale\\\"\n\t  _G_safe_locale=\\\"$_G_var=C; \\$_G_safe_locale\\\"\n\tfi\"\ndone\n\n# CDPATH.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n# Make sure IFS has a sensible default\nsp=' '\nnl='\n'\nIFS=\"$sp\t$nl\"\n\n# There are apparently some retarded systems that use ';' as a PATH separator!\nif test \"${PATH_SEPARATOR+set}\" != set; then\n  PATH_SEPARATOR=:\n  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {\n    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||\n      PATH_SEPARATOR=';'\n  }\nfi\n\n\n\n## ------------------------- ##\n## Locate command utilities. ##\n## ------------------------- ##\n\n\n# func_executable_p FILE\n# ----------------------\n# Check that FILE is an executable regular file.\nfunc_executable_p ()\n{\n    test -f \"$1\" && test -x \"$1\"\n}\n\n\n# func_path_progs PROGS_LIST CHECK_FUNC [PATH]\n# --------------------------------------------\n# Search for either a program that responds to --version with output\n# containing \"GNU\", or else returned by CHECK_FUNC otherwise, by\n# trying all the directories in PATH with each of the elements of\n# PROGS_LIST.\n#\n# CHECK_FUNC should accept the path to a candidate program, and\n# set $func_check_prog_result if it truncates its output less than\n# $_G_path_prog_max characters.\nfunc_path_progs ()\n{\n    _G_progs_list=$1\n    _G_check_func=$2\n    _G_PATH=${3-\"$PATH\"}\n\n    _G_path_prog_max=0\n    _G_path_prog_found=false\n    _G_save_IFS=$IFS; IFS=${PATH_SEPARATOR-:}\n    for _G_dir in $_G_PATH; do\n      IFS=$_G_save_IFS\n      test -z \"$_G_dir\" && _G_dir=.\n      for _G_prog_name in $_G_progs_list; do\n        for _exeext in '' .EXE; do\n          _G_path_prog=$_G_dir/$_G_prog_name$_exeext\n          func_executable_p \"$_G_path_prog\" || continue\n          case `\"$_G_path_prog\" --version 2>&1` in\n            *GNU*) func_path_progs_result=$_G_path_prog _G_path_prog_found=: ;;\n            *)     $_G_check_func $_G_path_prog\n\t\t   func_path_progs_result=$func_check_prog_result\n\t\t   ;;\n          esac\n          $_G_path_prog_found && break 3\n        done\n      done\n    done\n    IFS=$_G_save_IFS\n    test -z \"$func_path_progs_result\" && {\n      echo \"no acceptable sed could be found in \\$PATH\" >&2\n      exit 1\n    }\n}\n\n\n# We want to be able to use the functions in this file before configure\n# has figured out where the best binaries are kept, which means we have\n# to search for them ourselves - except when the results are already set\n# where we skip the searches.\n\n# Unless the user overrides by setting SED, search the path for either GNU\n# sed, or the sed that truncates its output the least.\ntest -z \"$SED\" && {\n  _G_sed_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/\n  for _G_i in 1 2 3 4 5 6 7; do\n    _G_sed_script=$_G_sed_script$nl$_G_sed_script\n  done\n  echo \"$_G_sed_script\" 2>/dev/null | sed 99q >conftest.sed\n  _G_sed_script=\n\n  func_check_prog_sed ()\n  {\n    _G_path_prog=$1\n\n    _G_count=0\n    printf 0123456789 >conftest.in\n    while :\n    do\n      cat conftest.in conftest.in >conftest.tmp\n      mv conftest.tmp conftest.in\n      cp conftest.in conftest.nl\n      echo '' >> conftest.nl\n      \"$_G_path_prog\" -f conftest.sed <conftest.nl >conftest.out 2>/dev/null || break\n      diff conftest.out conftest.nl >/dev/null 2>&1 || break\n      _G_count=`expr $_G_count + 1`\n      if test \"$_G_count\" -gt \"$_G_path_prog_max\"; then\n        # Best one so far, save it but keep looking for a better one\n        func_check_prog_result=$_G_path_prog\n        _G_path_prog_max=$_G_count\n      fi\n      # 10*(2^10) chars as input seems more than enough\n      test 10 -lt \"$_G_count\" && break\n    done\n    rm -f conftest.in conftest.tmp conftest.nl conftest.out\n  }\n\n  func_path_progs \"sed gsed\" func_check_prog_sed $PATH:/usr/xpg4/bin\n  rm -f conftest.sed\n  SED=$func_path_progs_result\n}\n\n\n# Unless the user overrides by setting GREP, search the path for either GNU\n# grep, or the grep that truncates its output the least.\ntest -z \"$GREP\" && {\n  func_check_prog_grep ()\n  {\n    _G_path_prog=$1\n\n    _G_count=0\n    _G_path_prog_max=0\n    printf 0123456789 >conftest.in\n    while :\n    do\n      cat conftest.in conftest.in >conftest.tmp\n      mv conftest.tmp conftest.in\n      cp conftest.in conftest.nl\n      echo 'GREP' >> conftest.nl\n      \"$_G_path_prog\" -e 'GREP$' -e '-(cannot match)-' <conftest.nl >conftest.out 2>/dev/null || break\n      diff conftest.out conftest.nl >/dev/null 2>&1 || break\n      _G_count=`expr $_G_count + 1`\n      if test \"$_G_count\" -gt \"$_G_path_prog_max\"; then\n        # Best one so far, save it but keep looking for a better one\n        func_check_prog_result=$_G_path_prog\n        _G_path_prog_max=$_G_count\n      fi\n      # 10*(2^10) chars as input seems more than enough\n      test 10 -lt \"$_G_count\" && break\n    done\n    rm -f conftest.in conftest.tmp conftest.nl conftest.out\n  }\n\n  func_path_progs \"grep ggrep\" func_check_prog_grep $PATH:/usr/xpg4/bin\n  GREP=$func_path_progs_result\n}\n\n\n## ------------------------------- ##\n## User overridable command paths. ##\n## ------------------------------- ##\n\n# All uppercase variable names are used for environment variables.  These\n# variables can be overridden by the user before calling a script that\n# uses them if a suitable command of that name is not already available\n# in the command search PATH.\n\n: ${CP=\"cp -f\"}\n: ${ECHO=\"printf %s\\n\"}\n: ${EGREP=\"$GREP -E\"}\n: ${FGREP=\"$GREP -F\"}\n: ${LN_S=\"ln -s\"}\n: ${MAKE=\"make\"}\n: ${MKDIR=\"mkdir\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n: ${SHELL=\"${CONFIG_SHELL-/bin/sh}\"}\n\n\n## -------------------- ##\n## Useful sed snippets. ##\n## -------------------- ##\n\nsed_dirname='s|/[^/]*$||'\nsed_basename='s|^.*/||'\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='s|\\([`\"$\\\\]\\)|\\\\\\1|g'\n\n# Same as above, but do not quote variable references.\nsed_double_quote_subst='s/\\([\"`\\\\]\\)/\\\\\\1/g'\n\n# Sed substitution that turns a string into a regex matching for the\n# string literally.\nsed_make_literal_regex='s|[].[^$\\\\*\\/]|\\\\&|g'\n\n# Sed substitution that converts a w32 file name or path\n# that contains forward slashes, into one that contains\n# (escaped) backslashes.  A very naive implementation.\nsed_naive_backslashify='s|\\\\\\\\*|\\\\|g;s|/|\\\\|g;s|\\\\|\\\\\\\\|g'\n\n# Re-'\\' parameter expansions in output of sed_double_quote_subst that\n# were '\\'-ed in input to the same.  If an odd number of '\\' preceded a\n# '$' in input to sed_double_quote_subst, that '$' was protected from\n# expansion.  Since each input '\\' is now two '\\'s, look for any number\n# of runs of four '\\'s followed by two '\\'s and then a '$'.  '\\' that '$'.\n_G_bs='\\\\'\n_G_bs2='\\\\\\\\'\n_G_bs4='\\\\\\\\\\\\\\\\'\n_G_dollar='\\$'\nsed_double_backslash=\"\\\n  s/$_G_bs4/&\\\\\n/g\n  s/^$_G_bs2$_G_dollar/$_G_bs&/\n  s/\\\\([^$_G_bs]\\\\)$_G_bs2$_G_dollar/\\\\1$_G_bs2$_G_bs$_G_dollar/g\n  s/\\n//g\"\n\n\n## ----------------- ##\n## Global variables. ##\n## ----------------- ##\n\n# Except for the global variables explicitly listed below, the following\n# functions in the '^func_' namespace, and the '^require_' namespace\n# variables initialised in the 'Resource management' section, sourcing\n# this file will not pollute your global namespace with anything\n# else. There's no portable way to scope variables in Bourne shell\n# though, so actually running these functions will sometimes place\n# results into a variable named after the function, and often use\n# temporary variables in the '^_G_' namespace. If you are careful to\n# avoid using those namespaces casually in your sourcing script, things\n# should continue to work as you expect. And, of course, you can freely\n# overwrite any of the functions or variables defined here before\n# calling anything to customize them.\n\nEXIT_SUCCESS=0\nEXIT_FAILURE=1\nEXIT_MISMATCH=63  # $? = 63 is used to indicate version mismatch to missing.\nEXIT_SKIP=77\t  # $? = 77 is used to indicate a skipped test to automake.\n\n# Allow overriding, eg assuming that you follow the convention of\n# putting '$debug_cmd' at the start of all your functions, you can get\n# bash to show function call trace with:\n#\n#    debug_cmd='eval echo \"${FUNCNAME[0]} $*\" >&2' bash your-script-name\ndebug_cmd=${debug_cmd-\":\"}\nexit_cmd=:\n\n# By convention, finish your script with:\n#\n#    exit $exit_status\n#\n# so that you can set exit_status to non-zero if you want to indicate\n# something went wrong during execution without actually bailing out at\n# the point of failure.\nexit_status=$EXIT_SUCCESS\n\n# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh\n# is ksh but when the shell is invoked as \"sh\" and the current value of\n# the _XPG environment variable is not equal to 1 (one), the special\n# positional parameter $0, within a function call, is the name of the\n# function.\nprogpath=$0\n\n# The name of this program.\nprogname=`$ECHO \"$progpath\" |$SED \"$sed_basename\"`\n\n# Make sure we have an absolute progpath for reexecution:\ncase $progpath in\n  [\\\\/]*|[A-Za-z]:\\\\*) ;;\n  *[\\\\/]*)\n     progdir=`$ECHO \"$progpath\" |$SED \"$sed_dirname\"`\n     progdir=`cd \"$progdir\" && pwd`\n     progpath=$progdir/$progname\n     ;;\n  *)\n     _G_IFS=$IFS\n     IFS=${PATH_SEPARATOR-:}\n     for progdir in $PATH; do\n       IFS=$_G_IFS\n       test -x \"$progdir/$progname\" && break\n     done\n     IFS=$_G_IFS\n     test -n \"$progdir\" || progdir=`pwd`\n     progpath=$progdir/$progname\n     ;;\nesac\n\n\n## ----------------- ##\n## Standard options. ##\n## ----------------- ##\n\n# The following options affect the operation of the functions defined\n# below, and should be set appropriately depending on run-time para-\n# meters passed on the command line.\n\nopt_dry_run=false\nopt_quiet=false\nopt_verbose=false\n\n# Categories 'all' and 'none' are always available.  Append any others\n# you will pass as the first argument to func_warning from your own\n# code.\nwarning_categories=\n\n# By default, display warnings according to 'opt_warning_types'.  Set\n# 'warning_func'  to ':' to elide all warnings, or func_fatal_error to\n# treat the next displayed warning as a fatal error.\nwarning_func=func_warn_and_continue\n\n# Set to 'all' to display all warnings, 'none' to suppress all\n# warnings, or a space delimited list of some subset of\n# 'warning_categories' to display only the listed warnings.\nopt_warning_types=all\n\n\n## -------------------- ##\n## Resource management. ##\n## -------------------- ##\n\n# This section contains definitions for functions that each ensure a\n# particular resource (a file, or a non-empty configuration variable for\n# example) is available, and if appropriate to extract default values\n# from pertinent package files. Call them using their associated\n# 'require_*' variable to ensure that they are executed, at most, once.\n#\n# It's entirely deliberate that calling these functions can set\n# variables that don't obey the namespace limitations obeyed by the rest\n# of this file, in order that that they be as useful as possible to\n# callers.\n\n\n# require_term_colors\n# -------------------\n# Allow display of bold text on terminals that support it.\nrequire_term_colors=func_require_term_colors\nfunc_require_term_colors ()\n{\n    $debug_cmd\n\n    test -t 1 && {\n      # COLORTERM and USE_ANSI_COLORS environment variables take\n      # precedence, because most terminfo databases neglect to describe\n      # whether color sequences are supported.\n      test -n \"${COLORTERM+set}\" && : ${USE_ANSI_COLORS=\"1\"}\n\n      if test 1 = \"$USE_ANSI_COLORS\"; then\n        # Standard ANSI escape sequences\n        tc_reset='\u001b[0m'\n        tc_bold='\u001b[1m';   tc_standout='\u001b[7m'\n        tc_red='\u001b[31m';   tc_green='\u001b[32m'\n        tc_blue='\u001b[34m';  tc_cyan='\u001b[36m'\n      else\n        # Otherwise trust the terminfo database after all.\n        test -n \"`tput sgr0 2>/dev/null`\" && {\n          tc_reset=`tput sgr0`\n          test -n \"`tput bold 2>/dev/null`\" && tc_bold=`tput bold`\n          tc_standout=$tc_bold\n          test -n \"`tput smso 2>/dev/null`\" && tc_standout=`tput smso`\n          test -n \"`tput setaf 1 2>/dev/null`\" && tc_red=`tput setaf 1`\n          test -n \"`tput setaf 2 2>/dev/null`\" && tc_green=`tput setaf 2`\n          test -n \"`tput setaf 4 2>/dev/null`\" && tc_blue=`tput setaf 4`\n          test -n \"`tput setaf 5 2>/dev/null`\" && tc_cyan=`tput setaf 5`\n        }\n      fi\n    }\n\n    require_term_colors=:\n}\n\n\n## ----------------- ##\n## Function library. ##\n## ----------------- ##\n\n# This section contains a variety of useful functions to call in your\n# scripts. Take note of the portable wrappers for features provided by\n# some modern shells, which will fall back to slower equivalents on\n# less featureful shells.\n\n\n# func_append VAR VALUE\n# ---------------------\n# Append VALUE onto the existing contents of VAR.\n\n  # We should try to minimise forks, especially on Windows where they are\n  # unreasonably slow, so skip the feature probes when bash or zsh are\n  # being used:\n  if test set = \"${BASH_VERSION+set}${ZSH_VERSION+set}\"; then\n    : ${_G_HAVE_ARITH_OP=\"yes\"}\n    : ${_G_HAVE_XSI_OPS=\"yes\"}\n    # The += operator was introduced in bash 3.1\n    case $BASH_VERSION in\n      [12].* | 3.0 | 3.0*) ;;\n      *)\n        : ${_G_HAVE_PLUSEQ_OP=\"yes\"}\n        ;;\n    esac\n  fi\n\n  # _G_HAVE_PLUSEQ_OP\n  # Can be empty, in which case the shell is probed, \"yes\" if += is\n  # useable or anything else if it does not work.\n  test -z \"$_G_HAVE_PLUSEQ_OP\" \\\n    && (eval 'x=a; x+=\" b\"; test \"a b\" = \"$x\"') 2>/dev/null \\\n    && _G_HAVE_PLUSEQ_OP=yes\n\nif test yes = \"$_G_HAVE_PLUSEQ_OP\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_append ()\n  {\n    $debug_cmd\n\n    eval \"$1+=\\$2\"\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_append ()\n  {\n    $debug_cmd\n\n    eval \"$1=\\$$1\\$2\"\n  }\nfi\n\n\n# func_append_quoted VAR VALUE\n# ----------------------------\n# Quote VALUE and append to the end of shell variable VAR, separated\n# by a space.\nif test yes = \"$_G_HAVE_PLUSEQ_OP\"; then\n  eval 'func_append_quoted ()\n  {\n    $debug_cmd\n\n    func_quote_for_eval \"$2\"\n    eval \"$1+=\\\\ \\$func_quote_for_eval_result\"\n  }'\nelse\n  func_append_quoted ()\n  {\n    $debug_cmd\n\n    func_quote_for_eval \"$2\"\n    eval \"$1=\\$$1\\\\ \\$func_quote_for_eval_result\"\n  }\nfi\n\n\n# func_append_uniq VAR VALUE\n# --------------------------\n# Append unique VALUE onto the existing contents of VAR, assuming\n# entries are delimited by the first character of VALUE.  For example:\n#\n#   func_append_uniq options \" --another-option option-argument\"\n#\n# will only append to $options if \" --another-option option-argument \"\n# is not already present somewhere in $options already (note spaces at\n# each end implied by leading space in second argument).\nfunc_append_uniq ()\n{\n    $debug_cmd\n\n    eval _G_current_value='`$ECHO $'$1'`'\n    _G_delim=`expr \"$2\" : '\\(.\\)'`\n\n    case $_G_delim$_G_current_value$_G_delim in\n      *\"$2$_G_delim\"*) ;;\n      *) func_append \"$@\" ;;\n    esac\n}\n\n\n# func_arith TERM...\n# ------------------\n# Set func_arith_result to the result of evaluating TERMs.\n  test -z \"$_G_HAVE_ARITH_OP\" \\\n    && (eval 'test 2 = $(( 1 + 1 ))') 2>/dev/null \\\n    && _G_HAVE_ARITH_OP=yes\n\nif test yes = \"$_G_HAVE_ARITH_OP\"; then\n  eval 'func_arith ()\n  {\n    $debug_cmd\n\n    func_arith_result=$(( $* ))\n  }'\nelse\n  func_arith ()\n  {\n    $debug_cmd\n\n    func_arith_result=`expr \"$@\"`\n  }\nfi\n\n\n# func_basename FILE\n# ------------------\n# Set func_basename_result to FILE with everything up to and including\n# the last / stripped.\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  # If this shell supports suffix pattern removal, then use it to avoid\n  # forking. Hide the definitions single quotes in case the shell chokes\n  # on unsupported syntax...\n  _b='func_basename_result=${1##*/}'\n  _d='case $1 in\n        */*) func_dirname_result=${1%/*}$2 ;;\n        *  ) func_dirname_result=$3        ;;\n      esac'\n\nelse\n  # ...otherwise fall back to using sed.\n  _b='func_basename_result=`$ECHO \"$1\" |$SED \"$sed_basename\"`'\n  _d='func_dirname_result=`$ECHO \"$1\"  |$SED \"$sed_dirname\"`\n      if test \"X$func_dirname_result\" = \"X$1\"; then\n        func_dirname_result=$3\n      else\n        func_append func_dirname_result \"$2\"\n      fi'\nfi\n\neval 'func_basename ()\n{\n    $debug_cmd\n\n    '\"$_b\"'\n}'\n\n\n# func_dirname FILE APPEND NONDIR_REPLACEMENT\n# -------------------------------------------\n# Compute the dirname of FILE.  If nonempty, add APPEND to the result,\n# otherwise set result to NONDIR_REPLACEMENT.\neval 'func_dirname ()\n{\n    $debug_cmd\n\n    '\"$_d\"'\n}'\n\n\n# func_dirname_and_basename FILE APPEND NONDIR_REPLACEMENT\n# --------------------------------------------------------\n# Perform func_basename and func_dirname in a single function\n# call:\n#   dirname:  Compute the dirname of FILE.  If nonempty,\n#             add APPEND to the result, otherwise set result\n#             to NONDIR_REPLACEMENT.\n#             value returned in \"$func_dirname_result\"\n#   basename: Compute filename of FILE.\n#             value retuned in \"$func_basename_result\"\n# For efficiency, we do not delegate to the functions above but instead\n# duplicate the functionality here.\neval 'func_dirname_and_basename ()\n{\n    $debug_cmd\n\n    '\"$_b\"'\n    '\"$_d\"'\n}'\n\n\n# func_echo ARG...\n# ----------------\n# Echo program name prefixed message.\nfunc_echo ()\n{\n    $debug_cmd\n\n    _G_message=$*\n\n    func_echo_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_IFS\n      $ECHO \"$progname: $_G_line\"\n    done\n    IFS=$func_echo_IFS\n}\n\n\n# func_echo_all ARG...\n# --------------------\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\n\n# func_echo_infix_1 INFIX ARG...\n# ------------------------------\n# Echo program name, followed by INFIX on the first line, with any\n# additional lines not showing INFIX.\nfunc_echo_infix_1 ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    _G_infix=$1; shift\n    _G_indent=$_G_infix\n    _G_prefix=\"$progname: $_G_infix: \"\n    _G_message=$*\n\n    # Strip color escape sequences before counting printable length\n    for _G_tc in \"$tc_reset\" \"$tc_bold\" \"$tc_standout\" \"$tc_red\" \"$tc_green\" \"$tc_blue\" \"$tc_cyan\"\n    do\n      test -n \"$_G_tc\" && {\n        _G_esc_tc=`$ECHO \"$_G_tc\" | $SED \"$sed_make_literal_regex\"`\n        _G_indent=`$ECHO \"$_G_indent\" | $SED \"s|$_G_esc_tc||g\"`\n      }\n    done\n    _G_indent=\"$progname: \"`echo \"$_G_indent\" | $SED 's|.| |g'`\"  \" ## exclude from sc_prohibit_nested_quotes\n\n    func_echo_infix_1_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_infix_1_IFS\n      $ECHO \"$_G_prefix$tc_bold$_G_line$tc_reset\" >&2\n      _G_prefix=$_G_indent\n    done\n    IFS=$func_echo_infix_1_IFS\n}\n\n\n# func_error ARG...\n# -----------------\n# Echo program name prefixed message to standard error.\nfunc_error ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    func_echo_infix_1 \"  $tc_standout${tc_red}error$tc_reset\" \"$*\" >&2\n}\n\n\n# func_fatal_error ARG...\n# -----------------------\n# Echo program name prefixed message to standard error, and exit.\nfunc_fatal_error ()\n{\n    $debug_cmd\n\n    func_error \"$*\"\n    exit $EXIT_FAILURE\n}\n\n\n# func_grep EXPRESSION FILENAME\n# -----------------------------\n# Check whether EXPRESSION matches any line of FILENAME, without output.\nfunc_grep ()\n{\n    $debug_cmd\n\n    $GREP \"$1\" \"$2\" >/dev/null 2>&1\n}\n\n\n# func_len STRING\n# ---------------\n# Set func_len_result to the length of STRING. STRING may not\n# start with a hyphen.\n  test -z \"$_G_HAVE_XSI_OPS\" \\\n    && (eval 'x=a/b/c;\n      test 5aa/bb/cc = \"${#x}${x%%/*}${x%/*}${x#*/}${x##*/}\"') 2>/dev/null \\\n    && _G_HAVE_XSI_OPS=yes\n\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_len ()\n  {\n    $debug_cmd\n\n    func_len_result=${#1}\n  }'\nelse\n  func_len ()\n  {\n    $debug_cmd\n\n    func_len_result=`expr \"$1\" : \".*\" 2>/dev/null || echo $max_cmd_len`\n  }\nfi\n\n\n# func_mkdir_p DIRECTORY-PATH\n# ---------------------------\n# Make sure the entire path to DIRECTORY-PATH is available.\nfunc_mkdir_p ()\n{\n    $debug_cmd\n\n    _G_directory_path=$1\n    _G_dir_list=\n\n    if test -n \"$_G_directory_path\" && test : != \"$opt_dry_run\"; then\n\n      # Protect directory names starting with '-'\n      case $_G_directory_path in\n        -*) _G_directory_path=./$_G_directory_path ;;\n      esac\n\n      # While some portion of DIR does not yet exist...\n      while test ! -d \"$_G_directory_path\"; do\n        # ...make a list in topmost first order.  Use a colon delimited\n\t# list incase some portion of path contains whitespace.\n        _G_dir_list=$_G_directory_path:$_G_dir_list\n\n        # If the last portion added has no slash in it, the list is done\n        case $_G_directory_path in */*) ;; *) break ;; esac\n\n        # ...otherwise throw away the child directory and loop\n        _G_directory_path=`$ECHO \"$_G_directory_path\" | $SED -e \"$sed_dirname\"`\n      done\n      _G_dir_list=`$ECHO \"$_G_dir_list\" | $SED 's|:*$||'`\n\n      func_mkdir_p_IFS=$IFS; IFS=:\n      for _G_dir in $_G_dir_list; do\n\tIFS=$func_mkdir_p_IFS\n        # mkdir can fail with a 'File exist' error if two processes\n        # try to create one of the directories concurrently.  Don't\n        # stop in that case!\n        $MKDIR \"$_G_dir\" 2>/dev/null || :\n      done\n      IFS=$func_mkdir_p_IFS\n\n      # Bail out if we (or some other process) failed to create a directory.\n      test -d \"$_G_directory_path\" || \\\n        func_fatal_error \"Failed to create '$1'\"\n    fi\n}\n\n\n# func_mktempdir [BASENAME]\n# -------------------------\n# Make a temporary directory that won't clash with other running\n# libtool processes, and avoids race conditions if possible.  If\n# given, BASENAME is the basename for that directory.\nfunc_mktempdir ()\n{\n    $debug_cmd\n\n    _G_template=${TMPDIR-/tmp}/${1-$progname}\n\n    if test : = \"$opt_dry_run\"; then\n      # Return a directory name, but don't create it in dry-run mode\n      _G_tmpdir=$_G_template-$$\n    else\n\n      # If mktemp works, use that first and foremost\n      _G_tmpdir=`mktemp -d \"$_G_template-XXXXXXXX\" 2>/dev/null`\n\n      if test ! -d \"$_G_tmpdir\"; then\n        # Failing that, at least try and use $RANDOM to avoid a race\n        _G_tmpdir=$_G_template-${RANDOM-0}$$\n\n        func_mktempdir_umask=`umask`\n        umask 0077\n        $MKDIR \"$_G_tmpdir\"\n        umask $func_mktempdir_umask\n      fi\n\n      # If we're not in dry-run mode, bomb out on failure\n      test -d \"$_G_tmpdir\" || \\\n        func_fatal_error \"cannot create temporary directory '$_G_tmpdir'\"\n    fi\n\n    $ECHO \"$_G_tmpdir\"\n}\n\n\n# func_normal_abspath PATH\n# ------------------------\n# Remove doubled-up and trailing slashes, \".\" path components,\n# and cancel out any \"..\" path components in PATH after making\n# it an absolute path.\nfunc_normal_abspath ()\n{\n    $debug_cmd\n\n    # These SED scripts presuppose an absolute path with a trailing slash.\n    _G_pathcar='s|^/\\([^/]*\\).*$|\\1|'\n    _G_pathcdr='s|^/[^/]*||'\n    _G_removedotparts=':dotsl\n\t\ts|/\\./|/|g\n\t\tt dotsl\n\t\ts|/\\.$|/|'\n    _G_collapseslashes='s|/\\{1,\\}|/|g'\n    _G_finalslash='s|/*$|/|'\n\n    # Start from root dir and reassemble the path.\n    func_normal_abspath_result=\n    func_normal_abspath_tpath=$1\n    func_normal_abspath_altnamespace=\n    case $func_normal_abspath_tpath in\n      \"\")\n        # Empty path, that just means $cwd.\n        func_stripname '' '/' \"`pwd`\"\n        func_normal_abspath_result=$func_stripname_result\n        return\n        ;;\n      # The next three entries are used to spot a run of precisely\n      # two leading slashes without using negated character classes;\n      # we take advantage of case's first-match behaviour.\n      ///*)\n        # Unusual form of absolute path, do nothing.\n        ;;\n      //*)\n        # Not necessarily an ordinary path; POSIX reserves leading '//'\n        # and for example Cygwin uses it to access remote file shares\n        # over CIFS/SMB, so we conserve a leading double slash if found.\n        func_normal_abspath_altnamespace=/\n        ;;\n      /*)\n        # Absolute path, do nothing.\n        ;;\n      *)\n        # Relative path, prepend $cwd.\n        func_normal_abspath_tpath=`pwd`/$func_normal_abspath_tpath\n        ;;\n    esac\n\n    # Cancel out all the simple stuff to save iterations.  We also want\n    # the path to end with a slash for ease of parsing, so make sure\n    # there is one (and only one) here.\n    func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_removedotparts\" -e \"$_G_collapseslashes\" -e \"$_G_finalslash\"`\n    while :; do\n      # Processed it all yet?\n      if test / = \"$func_normal_abspath_tpath\"; then\n        # If we ascended to the root using \"..\" the result may be empty now.\n        if test -z \"$func_normal_abspath_result\"; then\n          func_normal_abspath_result=/\n        fi\n        break\n      fi\n      func_normal_abspath_tcomponent=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_pathcar\"`\n      func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_pathcdr\"`\n      # Figure out what to do with it\n      case $func_normal_abspath_tcomponent in\n        \"\")\n          # Trailing empty path component, ignore it.\n          ;;\n        ..)\n          # Parent dir; strip last assembled component from result.\n          func_dirname \"$func_normal_abspath_result\"\n          func_normal_abspath_result=$func_dirname_result\n          ;;\n        *)\n          # Actual path component, append it.\n          func_append func_normal_abspath_result \"/$func_normal_abspath_tcomponent\"\n          ;;\n      esac\n    done\n    # Restore leading double-slash if one was found on entry.\n    func_normal_abspath_result=$func_normal_abspath_altnamespace$func_normal_abspath_result\n}\n\n\n# func_notquiet ARG...\n# --------------------\n# Echo program name prefixed message only when not in quiet mode.\nfunc_notquiet ()\n{\n    $debug_cmd\n\n    $opt_quiet || func_echo ${1+\"$@\"}\n\n    # A bug in bash halts the script if the last line of a function\n    # fails when set -e is in force, so we need another command to\n    # work around that:\n    :\n}\n\n\n# func_relative_path SRCDIR DSTDIR\n# --------------------------------\n# Set func_relative_path_result to the relative path from SRCDIR to DSTDIR.\nfunc_relative_path ()\n{\n    $debug_cmd\n\n    func_relative_path_result=\n    func_normal_abspath \"$1\"\n    func_relative_path_tlibdir=$func_normal_abspath_result\n    func_normal_abspath \"$2\"\n    func_relative_path_tbindir=$func_normal_abspath_result\n\n    # Ascend the tree starting from libdir\n    while :; do\n      # check if we have found a prefix of bindir\n      case $func_relative_path_tbindir in\n        $func_relative_path_tlibdir)\n          # found an exact match\n          func_relative_path_tcancelled=\n          break\n          ;;\n        $func_relative_path_tlibdir*)\n          # found a matching prefix\n          func_stripname \"$func_relative_path_tlibdir\" '' \"$func_relative_path_tbindir\"\n          func_relative_path_tcancelled=$func_stripname_result\n          if test -z \"$func_relative_path_result\"; then\n            func_relative_path_result=.\n          fi\n          break\n          ;;\n        *)\n          func_dirname $func_relative_path_tlibdir\n          func_relative_path_tlibdir=$func_dirname_result\n          if test -z \"$func_relative_path_tlibdir\"; then\n            # Have to descend all the way to the root!\n            func_relative_path_result=../$func_relative_path_result\n            func_relative_path_tcancelled=$func_relative_path_tbindir\n            break\n          fi\n          func_relative_path_result=../$func_relative_path_result\n          ;;\n      esac\n    done\n\n    # Now calculate path; take care to avoid doubling-up slashes.\n    func_stripname '' '/' \"$func_relative_path_result\"\n    func_relative_path_result=$func_stripname_result\n    func_stripname '/' '/' \"$func_relative_path_tcancelled\"\n    if test -n \"$func_stripname_result\"; then\n      func_append func_relative_path_result \"/$func_stripname_result\"\n    fi\n\n    # Normalisation. If bindir is libdir, return '.' else relative path.\n    if test -n \"$func_relative_path_result\"; then\n      func_stripname './' '' \"$func_relative_path_result\"\n      func_relative_path_result=$func_stripname_result\n    fi\n\n    test -n \"$func_relative_path_result\" || func_relative_path_result=.\n\n    :\n}\n\n\n# func_quote_for_eval ARG...\n# --------------------------\n# Aesthetically quote ARGs to be evaled later.\n# This function returns two values:\n#   i) func_quote_for_eval_result\n#      double-quoted, suitable for a subsequent eval\n#  ii) func_quote_for_eval_unquoted_result\n#      has all characters that are still active within double\n#      quotes backslashified.\nfunc_quote_for_eval ()\n{\n    $debug_cmd\n\n    func_quote_for_eval_unquoted_result=\n    func_quote_for_eval_result=\n    while test 0 -lt $#; do\n      case $1 in\n        *[\\\\\\`\\\"\\$]*)\n\t  _G_unquoted_arg=`printf '%s\\n' \"$1\" |$SED \"$sed_quote_subst\"` ;;\n        *)\n          _G_unquoted_arg=$1 ;;\n      esac\n      if test -n \"$func_quote_for_eval_unquoted_result\"; then\n\tfunc_append func_quote_for_eval_unquoted_result \" $_G_unquoted_arg\"\n      else\n        func_append func_quote_for_eval_unquoted_result \"$_G_unquoted_arg\"\n      fi\n\n      case $_G_unquoted_arg in\n        # Double-quote args containing shell metacharacters to delay\n        # word splitting, command substitution and variable expansion\n        # for a subsequent eval.\n        # Many Bourne shells cannot handle close brackets correctly\n        # in scan sets, so we specify it separately.\n        *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n          _G_quoted_arg=\\\"$_G_unquoted_arg\\\"\n          ;;\n        *)\n          _G_quoted_arg=$_G_unquoted_arg\n\t  ;;\n      esac\n\n      if test -n \"$func_quote_for_eval_result\"; then\n\tfunc_append func_quote_for_eval_result \" $_G_quoted_arg\"\n      else\n        func_append func_quote_for_eval_result \"$_G_quoted_arg\"\n      fi\n      shift\n    done\n}\n\n\n# func_quote_for_expand ARG\n# -------------------------\n# Aesthetically quote ARG to be evaled later; same as above,\n# but do not quote variable references.\nfunc_quote_for_expand ()\n{\n    $debug_cmd\n\n    case $1 in\n      *[\\\\\\`\\\"]*)\n\t_G_arg=`$ECHO \"$1\" | $SED \\\n\t    -e \"$sed_double_quote_subst\" -e \"$sed_double_backslash\"` ;;\n      *)\n        _G_arg=$1 ;;\n    esac\n\n    case $_G_arg in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting and command substitution for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        _G_arg=\\\"$_G_arg\\\"\n        ;;\n    esac\n\n    func_quote_for_expand_result=$_G_arg\n}\n\n\n# func_stripname PREFIX SUFFIX NAME\n# ---------------------------------\n# strip PREFIX and SUFFIX from NAME, and store in func_stripname_result.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_stripname ()\n  {\n    $debug_cmd\n\n    # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are\n    # positional parameters, so assign one to ordinary variable first.\n    func_stripname_result=$3\n    func_stripname_result=${func_stripname_result#\"$1\"}\n    func_stripname_result=${func_stripname_result%\"$2\"}\n  }'\nelse\n  func_stripname ()\n  {\n    $debug_cmd\n\n    case $2 in\n      .*) func_stripname_result=`$ECHO \"$3\" | $SED -e \"s%^$1%%\" -e \"s%\\\\\\\\$2\\$%%\"`;;\n      *)  func_stripname_result=`$ECHO \"$3\" | $SED -e \"s%^$1%%\" -e \"s%$2\\$%%\"`;;\n    esac\n  }\nfi\n\n\n# func_show_eval CMD [FAIL_EXP]\n# -----------------------------\n# Unless opt_quiet is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.\nfunc_show_eval ()\n{\n    $debug_cmd\n\n    _G_cmd=$1\n    _G_fail_exp=${2-':'}\n\n    func_quote_for_expand \"$_G_cmd\"\n    eval \"func_notquiet $func_quote_for_expand_result\"\n\n    $opt_dry_run || {\n      eval \"$_G_cmd\"\n      _G_status=$?\n      if test 0 -ne \"$_G_status\"; then\n\teval \"(exit $_G_status); $_G_fail_exp\"\n      fi\n    }\n}\n\n\n# func_show_eval_locale CMD [FAIL_EXP]\n# ------------------------------------\n# Unless opt_quiet is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.  Use the saved locale for evaluation.\nfunc_show_eval_locale ()\n{\n    $debug_cmd\n\n    _G_cmd=$1\n    _G_fail_exp=${2-':'}\n\n    $opt_quiet || {\n      func_quote_for_expand \"$_G_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    $opt_dry_run || {\n      eval \"$_G_user_locale\n\t    $_G_cmd\"\n      _G_status=$?\n      eval \"$_G_safe_locale\"\n      if test 0 -ne \"$_G_status\"; then\n\teval \"(exit $_G_status); $_G_fail_exp\"\n      fi\n    }\n}\n\n\n# func_tr_sh\n# ----------\n# Turn $1 into a string suitable for a shell variable name.\n# Result is stored in $func_tr_sh_result.  All characters\n# not in the set a-zA-Z0-9_ are replaced with '_'. Further,\n# if $1 begins with a digit, a '_' is prepended as well.\nfunc_tr_sh ()\n{\n    $debug_cmd\n\n    case $1 in\n    [0-9]* | *[!a-zA-Z0-9_]*)\n      func_tr_sh_result=`$ECHO \"$1\" | $SED -e 's/^\\([0-9]\\)/_\\1/' -e 's/[^a-zA-Z0-9_]/_/g'`\n      ;;\n    * )\n      func_tr_sh_result=$1\n      ;;\n    esac\n}\n\n\n# func_verbose ARG...\n# -------------------\n# Echo program name prefixed message in verbose mode only.\nfunc_verbose ()\n{\n    $debug_cmd\n\n    $opt_verbose && func_echo \"$*\"\n\n    :\n}\n\n\n# func_warn_and_continue ARG...\n# -----------------------------\n# Echo program name prefixed warning message to standard error.\nfunc_warn_and_continue ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    func_echo_infix_1 \"${tc_red}warning$tc_reset\" \"$*\" >&2\n}\n\n\n# func_warning CATEGORY ARG...\n# ----------------------------\n# Echo program name prefixed warning message to standard error. Warning\n# messages can be filtered according to CATEGORY, where this function\n# elides messages where CATEGORY is not listed in the global variable\n# 'opt_warning_types'.\nfunc_warning ()\n{\n    $debug_cmd\n\n    # CATEGORY must be in the warning_categories list!\n    case \" $warning_categories \" in\n      *\" $1 \"*) ;;\n      *) func_internal_error \"invalid warning category '$1'\" ;;\n    esac\n\n    _G_category=$1\n    shift\n\n    case \" $opt_warning_types \" in\n      *\" $_G_category \"*) $warning_func ${1+\"$@\"} ;;\n    esac\n}\n\n\n# func_sort_ver VER1 VER2\n# -----------------------\n# 'sort -V' is not generally available.\n# Note this deviates from the version comparison in automake\n# in that it treats 1.5 < 1.5.0, and treats 1.4.4a < 1.4-p3a\n# but this should suffice as we won't be specifying old\n# version formats or redundant trailing .0 in bootstrap.conf.\n# If we did want full compatibility then we should probably\n# use m4_version_compare from autoconf.\nfunc_sort_ver ()\n{\n    $debug_cmd\n\n    printf '%s\\n%s\\n' \"$1\" \"$2\" \\\n      | sort -t. -k 1,1n -k 2,2n -k 3,3n -k 4,4n -k 5,5n -k 6,6n -k 7,7n -k 8,8n -k 9,9n\n}\n\n# func_lt_ver PREV CURR\n# ---------------------\n# Return true if PREV and CURR are in the correct order according to\n# func_sort_ver, otherwise false.  Use it like this:\n#\n#  func_lt_ver \"$prev_ver\" \"$proposed_ver\" || func_fatal_error \"...\"\nfunc_lt_ver ()\n{\n    $debug_cmd\n\n    test \"x$1\" = x`func_sort_ver \"$1\" \"$2\" | $SED 1q`\n}\n\n\n# Local variables:\n# mode: shell-script\n# sh-indentation: 2\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-pattern: \"10/scriptversion=%:y-%02m-%02d.%02H; # UTC\"\n# time-stamp-time-zone: \"UTC\"\n# End:\n#! /bin/sh\n\n# Set a version string for this script.\nscriptversion=2014-01-07.03; # UTC\n\n# A portable, pluggable option parser for Bourne shell.\n# Written by Gary V. Vaughan, 2010\n\n# Copyright (C) 2010-2015 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n# Please report bugs or propose patches to gary@gnu.org.\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# This file is a library for parsing options in your shell scripts along\n# with assorted other useful supporting features that you can make use\n# of too.\n#\n# For the simplest scripts you might need only:\n#\n#   #!/bin/sh\n#   . relative/path/to/funclib.sh\n#   . relative/path/to/options-parser\n#   scriptversion=1.0\n#   func_options ${1+\"$@\"}\n#   eval set dummy \"$func_options_result\"; shift\n#   ...rest of your script...\n#\n# In order for the '--version' option to work, you will need to have a\n# suitably formatted comment like the one at the top of this file\n# starting with '# Written by ' and ending with '# warranty; '.\n#\n# For '-h' and '--help' to work, you will also need a one line\n# description of your script's purpose in a comment directly above the\n# '# Written by ' line, like the one at the top of this file.\n#\n# The default options also support '--debug', which will turn on shell\n# execution tracing (see the comment above debug_cmd below for another\n# use), and '--verbose' and the func_verbose function to allow your script\n# to display verbose messages only when your user has specified\n# '--verbose'.\n#\n# After sourcing this file, you can plug processing for additional\n# options by amending the variables from the 'Configuration' section\n# below, and following the instructions in the 'Option parsing'\n# section further down.\n\n## -------------- ##\n## Configuration. ##\n## -------------- ##\n\n# You should override these variables in your script after sourcing this\n# file so that they reflect the customisations you have added to the\n# option parser.\n\n# The usage line for option parsing errors and the start of '-h' and\n# '--help' output messages. You can embed shell variables for delayed\n# expansion at the time the message is displayed, but you will need to\n# quote other shell meta-characters carefully to prevent them being\n# expanded when the contents are evaled.\nusage='$progpath [OPTION]...'\n\n# Short help message in response to '-h' and '--help'.  Add to this or\n# override it after sourcing this library to reflect the full set of\n# options your script accepts.\nusage_message=\"\\\n       --debug        enable verbose shell tracing\n   -W, --warnings=CATEGORY\n                      report the warnings falling in CATEGORY [all]\n   -v, --verbose      verbosely report processing\n       --version      print version information and exit\n   -h, --help         print short or long help message and exit\n\"\n\n# Additional text appended to 'usage_message' in response to '--help'.\nlong_help_message=\"\nWarning categories include:\n       'all'          show all warnings\n       'none'         turn off all the warnings\n       'error'        warnings are treated as fatal errors\"\n\n# Help message printed before fatal option parsing errors.\nfatal_help=\"Try '\\$progname --help' for more information.\"\n\n\n\n## ------------------------- ##\n## Hook function management. ##\n## ------------------------- ##\n\n# This section contains functions for adding, removing, and running hooks\n# to the main code.  A hook is just a named list of of function, that can\n# be run in order later on.\n\n# func_hookable FUNC_NAME\n# -----------------------\n# Declare that FUNC_NAME will run hooks added with\n# 'func_add_hook FUNC_NAME ...'.\nfunc_hookable ()\n{\n    $debug_cmd\n\n    func_append hookable_fns \" $1\"\n}\n\n\n# func_add_hook FUNC_NAME HOOK_FUNC\n# ---------------------------------\n# Request that FUNC_NAME call HOOK_FUNC before it returns.  FUNC_NAME must\n# first have been declared \"hookable\" by a call to 'func_hookable'.\nfunc_add_hook ()\n{\n    $debug_cmd\n\n    case \" $hookable_fns \" in\n      *\" $1 \"*) ;;\n      *) func_fatal_error \"'$1' does not accept hook functions.\" ;;\n    esac\n\n    eval func_append ${1}_hooks '\" $2\"'\n}\n\n\n# func_remove_hook FUNC_NAME HOOK_FUNC\n# ------------------------------------\n# Remove HOOK_FUNC from the list of functions called by FUNC_NAME.\nfunc_remove_hook ()\n{\n    $debug_cmd\n\n    eval ${1}_hooks='`$ECHO \"\\$'$1'_hooks\" |$SED \"s| '$2'||\"`'\n}\n\n\n# func_run_hooks FUNC_NAME [ARG]...\n# ---------------------------------\n# Run all hook functions registered to FUNC_NAME.\n# It is assumed that the list of hook functions contains nothing more\n# than a whitespace-delimited list of legal shell function names, and\n# no effort is wasted trying to catch shell meta-characters or preserve\n# whitespace.\nfunc_run_hooks ()\n{\n    $debug_cmd\n\n    case \" $hookable_fns \" in\n      *\" $1 \"*) ;;\n      *) func_fatal_error \"'$1' does not support hook funcions.n\" ;;\n    esac\n\n    eval _G_hook_fns=\\$$1_hooks; shift\n\n    for _G_hook in $_G_hook_fns; do\n      eval $_G_hook '\"$@\"'\n\n      # store returned options list back into positional\n      # parameters for next 'cmd' execution.\n      eval _G_hook_result=\\$${_G_hook}_result\n      eval set dummy \"$_G_hook_result\"; shift\n    done\n\n    func_quote_for_eval ${1+\"$@\"}\n    func_run_hooks_result=$func_quote_for_eval_result\n}\n\n\n\n## --------------- ##\n## Option parsing. ##\n## --------------- ##\n\n# In order to add your own option parsing hooks, you must accept the\n# full positional parameter list in your hook function, remove any\n# options that you action, and then pass back the remaining unprocessed\n# options in '<hooked_function_name>_result', escaped suitably for\n# 'eval'.  Like this:\n#\n#    my_options_prep ()\n#    {\n#        $debug_cmd\n#\n#        # Extend the existing usage message.\n#        usage_message=$usage_message'\n#      -s, --silent       don'\\''t print informational messages\n#    '\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_options_prep_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_options_prep my_options_prep\n#\n#\n#    my_silent_option ()\n#    {\n#        $debug_cmd\n#\n#        # Note that for efficiency, we parse as many options as we can\n#        # recognise in a loop before passing the remainder back to the\n#        # caller on the first unrecognised argument we encounter.\n#        while test $# -gt 0; do\n#          opt=$1; shift\n#          case $opt in\n#            --silent|-s) opt_silent=: ;;\n#            # Separate non-argument short options:\n#            -s*)         func_split_short_opt \"$_G_opt\"\n#                         set dummy \"$func_split_short_opt_name\" \\\n#                             \"-$func_split_short_opt_arg\" ${1+\"$@\"}\n#                         shift\n#                         ;;\n#            *)            set dummy \"$_G_opt\" \"$*\"; shift; break ;;\n#          esac\n#        done\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_silent_option_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_parse_options my_silent_option\n#\n#\n#    my_option_validation ()\n#    {\n#        $debug_cmd\n#\n#        $opt_silent && $opt_verbose && func_fatal_help \"\\\n#    '--silent' and '--verbose' options are mutually exclusive.\"\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_option_validation_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_validate_options my_option_validation\n#\n# You'll alse need to manually amend $usage_message to reflect the extra\n# options you parse.  It's preferable to append if you can, so that\n# multiple option parsing hooks can be added safely.\n\n\n# func_options [ARG]...\n# ---------------------\n# All the functions called inside func_options are hookable. See the\n# individual implementations for details.\nfunc_hookable func_options\nfunc_options ()\n{\n    $debug_cmd\n\n    func_options_prep ${1+\"$@\"}\n    eval func_parse_options \\\n        ${func_options_prep_result+\"$func_options_prep_result\"}\n    eval func_validate_options \\\n        ${func_parse_options_result+\"$func_parse_options_result\"}\n\n    eval func_run_hooks func_options \\\n        ${func_validate_options_result+\"$func_validate_options_result\"}\n\n    # save modified positional parameters for caller\n    func_options_result=$func_run_hooks_result\n}\n\n\n# func_options_prep [ARG]...\n# --------------------------\n# All initialisations required before starting the option parse loop.\n# Note that when calling hook functions, we pass through the list of\n# positional parameters.  If a hook function modifies that list, and\n# needs to propogate that back to rest of this script, then the complete\n# modified list must be put in 'func_run_hooks_result' before\n# returning.\nfunc_hookable func_options_prep\nfunc_options_prep ()\n{\n    $debug_cmd\n\n    # Option defaults:\n    opt_verbose=false\n    opt_warning_types=\n\n    func_run_hooks func_options_prep ${1+\"$@\"}\n\n    # save modified positional parameters for caller\n    func_options_prep_result=$func_run_hooks_result\n}\n\n\n# func_parse_options [ARG]...\n# ---------------------------\n# The main option parsing loop.\nfunc_hookable func_parse_options\nfunc_parse_options ()\n{\n    $debug_cmd\n\n    func_parse_options_result=\n\n    # this just eases exit handling\n    while test $# -gt 0; do\n      # Defer to hook functions for initial option parsing, so they\n      # get priority in the event of reusing an option name.\n      func_run_hooks func_parse_options ${1+\"$@\"}\n\n      # Adjust func_parse_options positional parameters to match\n      eval set dummy \"$func_run_hooks_result\"; shift\n\n      # Break out of the loop if we already parsed every option.\n      test $# -gt 0 || break\n\n      _G_opt=$1\n      shift\n      case $_G_opt in\n        --debug|-x)   debug_cmd='set -x'\n                      func_echo \"enabling shell trace mode\"\n                      $debug_cmd\n                      ;;\n\n        --no-warnings|--no-warning|--no-warn)\n                      set dummy --warnings none ${1+\"$@\"}\n                      shift\n\t\t      ;;\n\n        --warnings|--warning|-W)\n                      test $# = 0 && func_missing_arg $_G_opt && break\n                      case \" $warning_categories $1\" in\n                        *\" $1 \"*)\n                          # trailing space prevents matching last $1 above\n                          func_append_uniq opt_warning_types \" $1\"\n                          ;;\n                        *all)\n                          opt_warning_types=$warning_categories\n                          ;;\n                        *none)\n                          opt_warning_types=none\n                          warning_func=:\n                          ;;\n                        *error)\n                          opt_warning_types=$warning_categories\n                          warning_func=func_fatal_error\n                          ;;\n                        *)\n                          func_fatal_error \\\n                             \"unsupported warning category: '$1'\"\n                          ;;\n                      esac\n                      shift\n                      ;;\n\n        --verbose|-v) opt_verbose=: ;;\n        --version)    func_version ;;\n        -\\?|-h)       func_usage ;;\n        --help)       func_help ;;\n\n\t# Separate optargs to long options (plugins may need this):\n\t--*=*)        func_split_equals \"$_G_opt\"\n\t              set dummy \"$func_split_equals_lhs\" \\\n                          \"$func_split_equals_rhs\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n       # Separate optargs to short options:\n        -W*)\n                      func_split_short_opt \"$_G_opt\"\n                      set dummy \"$func_split_short_opt_name\" \\\n                          \"$func_split_short_opt_arg\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n        # Separate non-argument short options:\n        -\\?*|-h*|-v*|-x*)\n                      func_split_short_opt \"$_G_opt\"\n                      set dummy \"$func_split_short_opt_name\" \\\n                          \"-$func_split_short_opt_arg\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n        --)           break ;;\n        -*)           func_fatal_help \"unrecognised option: '$_G_opt'\" ;;\n        *)            set dummy \"$_G_opt\" ${1+\"$@\"}; shift; break ;;\n      esac\n    done\n\n    # save modified positional parameters for caller\n    func_quote_for_eval ${1+\"$@\"}\n    func_parse_options_result=$func_quote_for_eval_result\n}\n\n\n# func_validate_options [ARG]...\n# ------------------------------\n# Perform any sanity checks on option settings and/or unconsumed\n# arguments.\nfunc_hookable func_validate_options\nfunc_validate_options ()\n{\n    $debug_cmd\n\n    # Display all warnings if -W was not given.\n    test -n \"$opt_warning_types\" || opt_warning_types=\" $warning_categories\"\n\n    func_run_hooks func_validate_options ${1+\"$@\"}\n\n    # Bail if the options were screwed!\n    $exit_cmd $EXIT_FAILURE\n\n    # save modified positional parameters for caller\n    func_validate_options_result=$func_run_hooks_result\n}\n\n\n\n## ----------------- ##\n## Helper functions. ##\n## ----------------- ##\n\n# This section contains the helper functions used by the rest of the\n# hookable option parser framework in ascii-betical order.\n\n\n# func_fatal_help ARG...\n# ----------------------\n# Echo program name prefixed message to standard error, followed by\n# a help hint, and exit.\nfunc_fatal_help ()\n{\n    $debug_cmd\n\n    eval \\$ECHO \\\"\"Usage: $usage\"\\\"\n    eval \\$ECHO \\\"\"$fatal_help\"\\\"\n    func_error ${1+\"$@\"}\n    exit $EXIT_FAILURE\n}\n\n\n# func_help\n# ---------\n# Echo long help message to standard output and exit.\nfunc_help ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $ECHO \"$long_help_message\"\n    exit 0\n}\n\n\n# func_missing_arg ARGNAME\n# ------------------------\n# Echo program name prefixed message to standard error and set global\n# exit_cmd.\nfunc_missing_arg ()\n{\n    $debug_cmd\n\n    func_error \"Missing argument for '$1'.\"\n    exit_cmd=exit\n}\n\n\n# func_split_equals STRING\n# ------------------------\n# Set func_split_equals_lhs and func_split_equals_rhs shell variables after\n# splitting STRING at the '=' sign.\ntest -z \"$_G_HAVE_XSI_OPS\" \\\n    && (eval 'x=a/b/c;\n      test 5aa/bb/cc = \"${#x}${x%%/*}${x%/*}${x#*/}${x##*/}\"') 2>/dev/null \\\n    && _G_HAVE_XSI_OPS=yes\n\nif test yes = \"$_G_HAVE_XSI_OPS\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_split_equals ()\n  {\n      $debug_cmd\n\n      func_split_equals_lhs=${1%%=*}\n      func_split_equals_rhs=${1#*=}\n      test \"x$func_split_equals_lhs\" = \"x$1\" \\\n        && func_split_equals_rhs=\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_split_equals ()\n  {\n      $debug_cmd\n\n      func_split_equals_lhs=`expr \"x$1\" : 'x\\([^=]*\\)'`\n      func_split_equals_rhs=\n      test \"x$func_split_equals_lhs\" = \"x$1\" \\\n        || func_split_equals_rhs=`expr \"x$1\" : 'x[^=]*=\\(.*\\)$'`\n  }\nfi #func_split_equals\n\n\n# func_split_short_opt SHORTOPT\n# -----------------------------\n# Set func_split_short_opt_name and func_split_short_opt_arg shell\n# variables after splitting SHORTOPT after the 2nd character.\nif test yes = \"$_G_HAVE_XSI_OPS\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_split_short_opt ()\n  {\n      $debug_cmd\n\n      func_split_short_opt_arg=${1#??}\n      func_split_short_opt_name=${1%\"$func_split_short_opt_arg\"}\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_split_short_opt ()\n  {\n      $debug_cmd\n\n      func_split_short_opt_name=`expr \"x$1\" : 'x-\\(.\\)'`\n      func_split_short_opt_arg=`expr \"x$1\" : 'x-.\\(.*\\)$'`\n  }\nfi #func_split_short_opt\n\n\n# func_usage\n# ----------\n# Echo short help message to standard output and exit.\nfunc_usage ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $ECHO \"Run '$progname --help |${PAGER-more}' for full usage\"\n    exit 0\n}\n\n\n# func_usage_message\n# ------------------\n# Echo short help message to standard output.\nfunc_usage_message ()\n{\n    $debug_cmd\n\n    eval \\$ECHO \\\"\"Usage: $usage\"\\\"\n    echo\n    $SED -n 's|^# ||\n        /^Written by/{\n          x;p;x\n        }\n\th\n\t/^Written by/q' < \"$progpath\"\n    echo\n    eval \\$ECHO \\\"\"$usage_message\"\\\"\n}\n\n\n# func_version\n# ------------\n# Echo version message to standard output and exit.\nfunc_version ()\n{\n    $debug_cmd\n\n    printf '%s\\n' \"$progname $scriptversion\"\n    $SED -n '\n        /(C)/!b go\n        :more\n        /\\./!{\n          N\n          s|\\n# | |\n          b more\n        }\n        :go\n        /^# Written by /,/# warranty; / {\n          s|^# ||\n          s|^# *$||\n          s|\\((C)\\)[ 0-9,-]*[ ,-]\\([1-9][0-9]* \\)|\\1 \\2|\n          p\n        }\n        /^# Written by / {\n          s|^# ||\n          p\n        }\n        /^warranty; /q' < \"$progpath\"\n\n    exit $?\n}\n\n\n# Local variables:\n# mode: shell-script\n# sh-indentation: 2\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-pattern: \"10/scriptversion=%:y-%02m-%02d.%02H; # UTC\"\n# time-stamp-time-zone: \"UTC\"\n# End:\n\n# Set a version string.\nscriptversion='(GNU libtool) 2.4.6'\n\n\n# func_echo ARG...\n# ----------------\n# Libtool also displays the current mode in messages, so override\n# funclib.sh func_echo with this custom definition.\nfunc_echo ()\n{\n    $debug_cmd\n\n    _G_message=$*\n\n    func_echo_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_IFS\n      $ECHO \"$progname${opt_mode+: $opt_mode}: $_G_line\"\n    done\n    IFS=$func_echo_IFS\n}\n\n\n# func_warning ARG...\n# -------------------\n# Libtool warnings are not categorized, so override funclib.sh\n# func_warning with this simpler definition.\nfunc_warning ()\n{\n    $debug_cmd\n\n    $warning_func ${1+\"$@\"}\n}\n\n\n## ---------------- ##\n## Options parsing. ##\n## ---------------- ##\n\n# Hook in the functions to make sure our own options are parsed during\n# the option parsing loop.\n\nusage='$progpath [OPTION]... [MODE-ARG]...'\n\n# Short help message in response to '-h'.\nusage_message=\"Options:\n       --config             show all configuration variables\n       --debug              enable verbose shell tracing\n   -n, --dry-run            display commands without modifying any files\n       --features           display basic configuration information and exit\n       --mode=MODE          use operation mode MODE\n       --no-warnings        equivalent to '-Wnone'\n       --preserve-dup-deps  don't remove duplicate dependency libraries\n       --quiet, --silent    don't print informational messages\n       --tag=TAG            use configuration variables from tag TAG\n   -v, --verbose            print more informational messages than default\n       --version            print version information\n   -W, --warnings=CATEGORY  report the warnings falling in CATEGORY [all]\n   -h, --help, --help-all   print short, long, or detailed help message\n\"\n\n# Additional text appended to 'usage_message' in response to '--help'.\nfunc_help ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $ECHO \"$long_help_message\n\nMODE must be one of the following:\n\n       clean           remove files from the build directory\n       compile         compile a source file into a libtool object\n       execute         automatically set library path, then run a program\n       finish          complete the installation of libtool libraries\n       install         install libraries or executables\n       link            create a library or an executable\n       uninstall       remove libraries from an installed directory\n\nMODE-ARGS vary depending on the MODE.  When passed as first option,\n'--mode=MODE' may be abbreviated as 'MODE' or a unique abbreviation of that.\nTry '$progname --help --mode=MODE' for a more detailed description of MODE.\n\nWhen reporting a bug, please describe a test case to reproduce it and\ninclude the following information:\n\n       host-triplet:   $host\n       shell:          $SHELL\n       compiler:       $LTCC\n       compiler flags: $LTCFLAGS\n       linker:         $LD (gnu? $with_gnu_ld)\n       version:        $progname (GNU libtool) 2.4.6\n       automake:       `($AUTOMAKE --version) 2>/dev/null |$SED 1q`\n       autoconf:       `($AUTOCONF --version) 2>/dev/null |$SED 1q`\n\nReport bugs to <bug-libtool@gnu.org>.\nGNU libtool home page: <http://www.gnu.org/software/libtool/>.\nGeneral help using GNU software: <http://www.gnu.org/gethelp/>.\"\n    exit 0\n}\n\n\n# func_lo2o OBJECT-NAME\n# ---------------------\n# Transform OBJECT-NAME from a '.lo' suffix to the platform specific\n# object suffix.\n\nlo2o=s/\\\\.lo\\$/.$objext/\no2lo=s/\\\\.$objext\\$/.lo/\n\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_lo2o ()\n  {\n    case $1 in\n      *.lo) func_lo2o_result=${1%.lo}.$objext ;;\n      *   ) func_lo2o_result=$1               ;;\n    esac\n  }'\n\n  # func_xform LIBOBJ-OR-SOURCE\n  # ---------------------------\n  # Transform LIBOBJ-OR-SOURCE from a '.o' or '.c' (or otherwise)\n  # suffix to a '.lo' libtool-object suffix.\n  eval 'func_xform ()\n  {\n    func_xform_result=${1%.*}.lo\n  }'\nelse\n  # ...otherwise fall back to using sed.\n  func_lo2o ()\n  {\n    func_lo2o_result=`$ECHO \"$1\" | $SED \"$lo2o\"`\n  }\n\n  func_xform ()\n  {\n    func_xform_result=`$ECHO \"$1\" | $SED 's|\\.[^.]*$|.lo|'`\n  }\nfi\n\n\n# func_fatal_configuration ARG...\n# -------------------------------\n# Echo program name prefixed message to standard error, followed by\n# a configuration failure hint, and exit.\nfunc_fatal_configuration ()\n{\n    func__fatal_error ${1+\"$@\"} \\\n      \"See the $PACKAGE documentation for more information.\" \\\n      \"Fatal configuration error.\"\n}\n\n\n# func_config\n# -----------\n# Display the configuration for all the tags in this script.\nfunc_config ()\n{\n    re_begincf='^# ### BEGIN LIBTOOL'\n    re_endcf='^# ### END LIBTOOL'\n\n    # Default configuration.\n    $SED \"1,/$re_begincf CONFIG/d;/$re_endcf CONFIG/,\\$d\" < \"$progpath\"\n\n    # Now print the configurations for the tags.\n    for tagname in $taglist; do\n      $SED -n \"/$re_begincf TAG CONFIG: $tagname\\$/,/$re_endcf TAG CONFIG: $tagname\\$/p\" < \"$progpath\"\n    done\n\n    exit $?\n}\n\n\n# func_features\n# -------------\n# Display the features supported by this script.\nfunc_features ()\n{\n    echo \"host: $host\"\n    if test yes = \"$build_libtool_libs\"; then\n      echo \"enable shared libraries\"\n    else\n      echo \"disable shared libraries\"\n    fi\n    if test yes = \"$build_old_libs\"; then\n      echo \"enable static libraries\"\n    else\n      echo \"disable static libraries\"\n    fi\n\n    exit $?\n}\n\n\n# func_enable_tag TAGNAME\n# -----------------------\n# Verify that TAGNAME is valid, and either flag an error and exit, or\n# enable the TAGNAME tag.  We also add TAGNAME to the global $taglist\n# variable here.\nfunc_enable_tag ()\n{\n    # Global variable:\n    tagname=$1\n\n    re_begincf=\"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\\$\"\n    re_endcf=\"^# ### END LIBTOOL TAG CONFIG: $tagname\\$\"\n    sed_extractcf=/$re_begincf/,/$re_endcf/p\n\n    # Validate tagname.\n    case $tagname in\n      *[!-_A-Za-z0-9,/]*)\n        func_fatal_error \"invalid tag name: $tagname\"\n        ;;\n    esac\n\n    # Don't test for the \"default\" C tag, as we know it's\n    # there but not specially marked.\n    case $tagname in\n        CC) ;;\n    *)\n        if $GREP \"$re_begincf\" \"$progpath\" >/dev/null 2>&1; then\n\t  taglist=\"$taglist $tagname\"\n\n\t  # Evaluate the configuration.  Be careful to quote the path\n\t  # and the sed script, to avoid splitting on whitespace, but\n\t  # also don't use non-portable quotes within backquotes within\n\t  # quotes we have to do it in 2 steps:\n\t  extractedcf=`$SED -n -e \"$sed_extractcf\" < \"$progpath\"`\n\t  eval \"$extractedcf\"\n        else\n\t  func_error \"ignoring unknown tag $tagname\"\n        fi\n        ;;\n    esac\n}\n\n\n# func_check_version_match\n# ------------------------\n# Ensure that we are using m4 macros, and libtool script from the same\n# release of libtool.\nfunc_check_version_match ()\n{\n    if test \"$package_revision\" != \"$macro_revision\"; then\n      if test \"$VERSION\" != \"$macro_version\"; then\n        if test -z \"$macro_version\"; then\n          cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from an older release.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n        else\n          cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from $PACKAGE $macro_version.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n        fi\n      else\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, revision $package_revision,\n$progname: but the definition of this LT_INIT comes from revision $macro_revision.\n$progname: You should recreate aclocal.m4 with macros from revision $package_revision\n$progname: of $PACKAGE $VERSION and run autoconf again.\n_LT_EOF\n      fi\n\n      exit $EXIT_MISMATCH\n    fi\n}\n\n\n# libtool_options_prep [ARG]...\n# -----------------------------\n# Preparation for options parsed by libtool.\nlibtool_options_prep ()\n{\n    $debug_mode\n\n    # Option defaults:\n    opt_config=false\n    opt_dlopen=\n    opt_dry_run=false\n    opt_help=false\n    opt_mode=\n    opt_preserve_dup_deps=false\n    opt_quiet=false\n\n    nonopt=\n    preserve_args=\n\n    # Shorthand for --mode=foo, only valid as the first argument\n    case $1 in\n    clean|clea|cle|cl)\n      shift; set dummy --mode clean ${1+\"$@\"}; shift\n      ;;\n    compile|compil|compi|comp|com|co|c)\n      shift; set dummy --mode compile ${1+\"$@\"}; shift\n      ;;\n    execute|execut|execu|exec|exe|ex|e)\n      shift; set dummy --mode execute ${1+\"$@\"}; shift\n      ;;\n    finish|finis|fini|fin|fi|f)\n      shift; set dummy --mode finish ${1+\"$@\"}; shift\n      ;;\n    install|instal|insta|inst|ins|in|i)\n      shift; set dummy --mode install ${1+\"$@\"}; shift\n      ;;\n    link|lin|li|l)\n      shift; set dummy --mode link ${1+\"$@\"}; shift\n      ;;\n    uninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)\n      shift; set dummy --mode uninstall ${1+\"$@\"}; shift\n      ;;\n    esac\n\n    # Pass back the list of options.\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_options_prep_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_options_prep libtool_options_prep\n\n\n# libtool_parse_options [ARG]...\n# ---------------------------------\n# Provide handling for libtool specific options.\nlibtool_parse_options ()\n{\n    $debug_cmd\n\n    # Perform our own loop to consume as many options as possible in\n    # each iteration.\n    while test $# -gt 0; do\n      _G_opt=$1\n      shift\n      case $_G_opt in\n        --dry-run|--dryrun|-n)\n                        opt_dry_run=:\n                        ;;\n\n        --config)       func_config ;;\n\n        --dlopen|-dlopen)\n                        opt_dlopen=\"${opt_dlopen+$opt_dlopen\n}$1\"\n                        shift\n                        ;;\n\n        --preserve-dup-deps)\n                        opt_preserve_dup_deps=: ;;\n\n        --features)     func_features ;;\n\n        --finish)       set dummy --mode finish ${1+\"$@\"}; shift ;;\n\n        --help)         opt_help=: ;;\n\n        --help-all)     opt_help=': help-all' ;;\n\n        --mode)         test $# = 0 && func_missing_arg $_G_opt && break\n                        opt_mode=$1\n                        case $1 in\n                          # Valid mode arguments:\n                          clean|compile|execute|finish|install|link|relink|uninstall) ;;\n\n                          # Catch anything else as an error\n                          *) func_error \"invalid argument for $_G_opt\"\n                             exit_cmd=exit\n                             break\n                             ;;\n                        esac\n                        shift\n                        ;;\n\n        --no-silent|--no-quiet)\n                        opt_quiet=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --no-warnings|--no-warning|--no-warn)\n                        opt_warning=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --no-verbose)\n                        opt_verbose=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --silent|--quiet)\n                        opt_quiet=:\n                        opt_verbose=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --tag)          test $# = 0 && func_missing_arg $_G_opt && break\n                        opt_tag=$1\n                        func_append preserve_args \" $_G_opt $1\"\n                        func_enable_tag \"$1\"\n                        shift\n                        ;;\n\n        --verbose|-v)   opt_quiet=false\n                        opt_verbose=:\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n\t# An option not handled by this hook function:\n        *)\t\tset dummy \"$_G_opt\" ${1+\"$@\"};\tshift; break  ;;\n      esac\n    done\n\n\n    # save modified positional parameters for caller\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_parse_options_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_parse_options libtool_parse_options\n\n\n\n# libtool_validate_options [ARG]...\n# ---------------------------------\n# Perform any sanity checks on option settings and/or unconsumed\n# arguments.\nlibtool_validate_options ()\n{\n    # save first non-option argument\n    if test 0 -lt $#; then\n      nonopt=$1\n      shift\n    fi\n\n    # preserve --debug\n    test : = \"$debug_cmd\" || func_append preserve_args \" --debug\"\n\n    case $host in\n      # Solaris2 added to fix http://debbugs.gnu.org/cgi/bugreport.cgi?bug=16452\n      # see also: http://gcc.gnu.org/bugzilla/show_bug.cgi?id=59788\n      *cygwin* | *mingw* | *pw32* | *cegcc* | *solaris2* | *os2*)\n        # don't eliminate duplications in $postdeps and $predeps\n        opt_duplicate_compiler_generated_deps=:\n        ;;\n      *)\n        opt_duplicate_compiler_generated_deps=$opt_preserve_dup_deps\n        ;;\n    esac\n\n    $opt_help || {\n      # Sanity checks first:\n      func_check_version_match\n\n      test yes != \"$build_libtool_libs\" \\\n        && test yes != \"$build_old_libs\" \\\n        && func_fatal_configuration \"not configured to build any kind of library\"\n\n      # Darwin sucks\n      eval std_shrext=\\\"$shrext_cmds\\\"\n\n      # Only execute mode is allowed to have -dlopen flags.\n      if test -n \"$opt_dlopen\" && test execute != \"$opt_mode\"; then\n        func_error \"unrecognized option '-dlopen'\"\n        $ECHO \"$help\" 1>&2\n        exit $EXIT_FAILURE\n      fi\n\n      # Change the help message to a mode-specific one.\n      generic_help=$help\n      help=\"Try '$progname --help --mode=$opt_mode' for more information.\"\n    }\n\n    # Pass back the unparsed argument list\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_validate_options_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_validate_options libtool_validate_options\n\n\n# Process options as early as possible so that --help and --version\n# can return quickly.\nfunc_options ${1+\"$@\"}\neval set dummy \"$func_options_result\"; shift\n\n\n\n## ----------- ##\n##    Main.    ##\n## ----------- ##\n\nmagic='%%%MAGIC variable%%%'\nmagic_exe='%%%MAGIC EXE variable%%%'\n\n# Global variables.\nextracted_archives=\nextracted_serial=0\n\n# If this variable is set in any of the actions, the command in it\n# will be execed at the end.  This prevents here-documents from being\n# left over by shells.\nexec_cmd=\n\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n$1\n_LTECHO_EOF'\n}\n\n# func_generated_by_libtool\n# True iff stdin has been generated by Libtool. This function is only\n# a basic sanity check; it will hardly flush out determined imposters.\nfunc_generated_by_libtool_p ()\n{\n  $GREP \"^# Generated by .*$PACKAGE\" > /dev/null 2>&1\n}\n\n# func_lalib_p file\n# True iff FILE is a libtool '.la' library or '.lo' object file.\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_lalib_p ()\n{\n    test -f \"$1\" &&\n      $SED -e 4q \"$1\" 2>/dev/null | func_generated_by_libtool_p\n}\n\n# func_lalib_unsafe_p file\n# True iff FILE is a libtool '.la' library or '.lo' object file.\n# This function implements the same check as func_lalib_p without\n# resorting to external programs.  To this end, it redirects stdin and\n# closes it afterwards, without saving the original file descriptor.\n# As a safety measure, use it only where a negative result would be\n# fatal anyway.  Works if 'file' does not exist.\nfunc_lalib_unsafe_p ()\n{\n    lalib_p=no\n    if test -f \"$1\" && test -r \"$1\" && exec 5<&0 <\"$1\"; then\n\tfor lalib_p_l in 1 2 3 4\n\tdo\n\t    read lalib_p_line\n\t    case $lalib_p_line in\n\t\t\\#\\ Generated\\ by\\ *$PACKAGE* ) lalib_p=yes; break;;\n\t    esac\n\tdone\n\texec 0<&5 5<&-\n    fi\n    test yes = \"$lalib_p\"\n}\n\n# func_ltwrapper_script_p file\n# True iff FILE is a libtool wrapper script\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_script_p ()\n{\n    test -f \"$1\" &&\n      $lt_truncate_bin < \"$1\" 2>/dev/null | func_generated_by_libtool_p\n}\n\n# func_ltwrapper_executable_p file\n# True iff FILE is a libtool wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_executable_p ()\n{\n    func_ltwrapper_exec_suffix=\n    case $1 in\n    *.exe) ;;\n    *) func_ltwrapper_exec_suffix=.exe ;;\n    esac\n    $GREP \"$magic_exe\" \"$1$func_ltwrapper_exec_suffix\" >/dev/null 2>&1\n}\n\n# func_ltwrapper_scriptname file\n# Assumes file is an ltwrapper_executable\n# uses $file to determine the appropriate filename for a\n# temporary ltwrapper_script.\nfunc_ltwrapper_scriptname ()\n{\n    func_dirname_and_basename \"$1\" \"\" \".\"\n    func_stripname '' '.exe' \"$func_basename_result\"\n    func_ltwrapper_scriptname_result=$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper\n}\n\n# func_ltwrapper_p file\n# True iff FILE is a libtool wrapper script or wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_p ()\n{\n    func_ltwrapper_script_p \"$1\" || func_ltwrapper_executable_p \"$1\"\n}\n\n\n# func_execute_cmds commands fail_cmd\n# Execute tilde-delimited COMMANDS.\n# If FAIL_CMD is given, eval that upon failure.\n# FAIL_CMD may read-access the current command in variable CMD!\nfunc_execute_cmds ()\n{\n    $debug_cmd\n\n    save_ifs=$IFS; IFS='~'\n    for cmd in $1; do\n      IFS=$sp$nl\n      eval cmd=\\\"$cmd\\\"\n      IFS=$save_ifs\n      func_show_eval \"$cmd\" \"${2-:}\"\n    done\n    IFS=$save_ifs\n}\n\n\n# func_source file\n# Source FILE, adding directory component if necessary.\n# Note that it is not necessary on cygwin/mingw to append a dot to\n# FILE even if both FILE and FILE.exe exist: automatic-append-.exe\n# behavior happens only for exec(3), not for open(2)!  Also, sourcing\n# 'FILE.' does not work on cygwin managed mounts.\nfunc_source ()\n{\n    $debug_cmd\n\n    case $1 in\n    */* | *\\\\*)\t. \"$1\" ;;\n    *)\t\t. \"./$1\" ;;\n    esac\n}\n\n\n# func_resolve_sysroot PATH\n# Replace a leading = in PATH with a sysroot.  Store the result into\n# func_resolve_sysroot_result\nfunc_resolve_sysroot ()\n{\n  func_resolve_sysroot_result=$1\n  case $func_resolve_sysroot_result in\n  =*)\n    func_stripname '=' '' \"$func_resolve_sysroot_result\"\n    func_resolve_sysroot_result=$lt_sysroot$func_stripname_result\n    ;;\n  esac\n}\n\n# func_replace_sysroot PATH\n# If PATH begins with the sysroot, replace it with = and\n# store the result into func_replace_sysroot_result.\nfunc_replace_sysroot ()\n{\n  case $lt_sysroot:$1 in\n  ?*:\"$lt_sysroot\"*)\n    func_stripname \"$lt_sysroot\" '' \"$1\"\n    func_replace_sysroot_result='='$func_stripname_result\n    ;;\n  *)\n    # Including no sysroot.\n    func_replace_sysroot_result=$1\n    ;;\n  esac\n}\n\n# func_infer_tag arg\n# Infer tagged configuration to use if any are available and\n# if one wasn't chosen via the \"--tag\" command line option.\n# Only attempt this if the compiler in the base compile\n# command doesn't match the default compiler.\n# arg is usually of the form 'gcc ...'\nfunc_infer_tag ()\n{\n    $debug_cmd\n\n    if test -n \"$available_tags\" && test -z \"$tagname\"; then\n      CC_quoted=\n      for arg in $CC; do\n\tfunc_append_quoted CC_quoted \"$arg\"\n      done\n      CC_expanded=`func_echo_all $CC`\n      CC_quoted_expanded=`func_echo_all $CC_quoted`\n      case $@ in\n      # Blanks in the command may have been stripped by the calling shell,\n      # but not from the CC environment variable when configure was run.\n      \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n      \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*) ;;\n      # Blanks at the start of $base_compile will cause this to fail\n      # if we don't check for them as well.\n      *)\n\tfor z in $available_tags; do\n\t  if $GREP \"^# ### BEGIN LIBTOOL TAG CONFIG: $z$\" < \"$progpath\" > /dev/null; then\n\t    # Evaluate the configuration.\n\t    eval \"`$SED -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`\"\n\t    CC_quoted=\n\t    for arg in $CC; do\n\t      # Double-quote args containing other shell metacharacters.\n\t      func_append_quoted CC_quoted \"$arg\"\n\t    done\n\t    CC_expanded=`func_echo_all $CC`\n\t    CC_quoted_expanded=`func_echo_all $CC_quoted`\n\t    case \"$@ \" in\n\t    \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n\t    \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*)\n\t      # The compiler in the base compile command matches\n\t      # the one in the tagged configuration.\n\t      # Assume this is the tagged configuration we want.\n\t      tagname=$z\n\t      break\n\t      ;;\n\t    esac\n\t  fi\n\tdone\n\t# If $tagname still isn't set, then no tagged configuration\n\t# was found and let the user know that the \"--tag\" command\n\t# line option must be used.\n\tif test -z \"$tagname\"; then\n\t  func_echo \"unable to infer tagged configuration\"\n\t  func_fatal_error \"specify a tag with '--tag'\"\n#\telse\n#\t  func_verbose \"using $tagname tagged configuration\"\n\tfi\n\t;;\n      esac\n    fi\n}\n\n\n\n# func_write_libtool_object output_name pic_name nonpic_name\n# Create a libtool object file (analogous to a \".la\" file),\n# but don't create it if we're doing a dry run.\nfunc_write_libtool_object ()\n{\n    write_libobj=$1\n    if test yes = \"$build_libtool_libs\"; then\n      write_lobj=\\'$2\\'\n    else\n      write_lobj=none\n    fi\n\n    if test yes = \"$build_old_libs\"; then\n      write_oldobj=\\'$3\\'\n    else\n      write_oldobj=none\n    fi\n\n    $opt_dry_run || {\n      cat >${write_libobj}T <<EOF\n# $write_libobj - a libtool object file\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object=$write_lobj\n\n# Name of the non-PIC object\nnon_pic_object=$write_oldobj\n\nEOF\n      $MV \"${write_libobj}T\" \"$write_libobj\"\n    }\n}\n\n\n##################################################\n# FILE NAME AND PATH CONVERSION HELPER FUNCTIONS #\n##################################################\n\n# func_convert_core_file_wine_to_w32 ARG\n# Helper function used by file name conversion functions when $build is *nix,\n# and $host is mingw, cygwin, or some other w32 environment. Relies on a\n# correctly configured wine environment available, with the winepath program\n# in $build's $PATH.\n#\n# ARG is the $build file name to be converted to w32 format.\n# Result is available in $func_convert_core_file_wine_to_w32_result, and will\n# be empty on error (or when ARG is empty)\nfunc_convert_core_file_wine_to_w32 ()\n{\n  $debug_cmd\n\n  func_convert_core_file_wine_to_w32_result=$1\n  if test -n \"$1\"; then\n    # Unfortunately, winepath does not exit with a non-zero error code, so we\n    # are forced to check the contents of stdout. On the other hand, if the\n    # command is not found, the shell will set an exit code of 127 and print\n    # *an error message* to stdout. So we must check for both error code of\n    # zero AND non-empty stdout, which explains the odd construction:\n    func_convert_core_file_wine_to_w32_tmp=`winepath -w \"$1\" 2>/dev/null`\n    if test \"$?\" -eq 0 && test -n \"$func_convert_core_file_wine_to_w32_tmp\"; then\n      func_convert_core_file_wine_to_w32_result=`$ECHO \"$func_convert_core_file_wine_to_w32_tmp\" |\n        $SED -e \"$sed_naive_backslashify\"`\n    else\n      func_convert_core_file_wine_to_w32_result=\n    fi\n  fi\n}\n# end: func_convert_core_file_wine_to_w32\n\n\n# func_convert_core_path_wine_to_w32 ARG\n# Helper function used by path conversion functions when $build is *nix, and\n# $host is mingw, cygwin, or some other w32 environment. Relies on a correctly\n# configured wine environment available, with the winepath program in $build's\n# $PATH. Assumes ARG has no leading or trailing path separator characters.\n#\n# ARG is path to be converted from $build format to win32.\n# Result is available in $func_convert_core_path_wine_to_w32_result.\n# Unconvertible file (directory) names in ARG are skipped; if no directory names\n# are convertible, then the result may be empty.\nfunc_convert_core_path_wine_to_w32 ()\n{\n  $debug_cmd\n\n  # unfortunately, winepath doesn't convert paths, only file names\n  func_convert_core_path_wine_to_w32_result=\n  if test -n \"$1\"; then\n    oldIFS=$IFS\n    IFS=:\n    for func_convert_core_path_wine_to_w32_f in $1; do\n      IFS=$oldIFS\n      func_convert_core_file_wine_to_w32 \"$func_convert_core_path_wine_to_w32_f\"\n      if test -n \"$func_convert_core_file_wine_to_w32_result\"; then\n        if test -z \"$func_convert_core_path_wine_to_w32_result\"; then\n          func_convert_core_path_wine_to_w32_result=$func_convert_core_file_wine_to_w32_result\n        else\n          func_append func_convert_core_path_wine_to_w32_result \";$func_convert_core_file_wine_to_w32_result\"\n        fi\n      fi\n    done\n    IFS=$oldIFS\n  fi\n}\n# end: func_convert_core_path_wine_to_w32\n\n\n# func_cygpath ARGS...\n# Wrapper around calling the cygpath program via LT_CYGPATH. This is used when\n# when (1) $build is *nix and Cygwin is hosted via a wine environment; or (2)\n# $build is MSYS and $host is Cygwin, or (3) $build is Cygwin. In case (1) or\n# (2), returns the Cygwin file name or path in func_cygpath_result (input\n# file name or path is assumed to be in w32 format, as previously converted\n# from $build's *nix or MSYS format). In case (3), returns the w32 file name\n# or path in func_cygpath_result (input file name or path is assumed to be in\n# Cygwin format). Returns an empty string on error.\n#\n# ARGS are passed to cygpath, with the last one being the file name or path to\n# be converted.\n#\n# Specify the absolute *nix (or w32) name to cygpath in the LT_CYGPATH\n# environment variable; do not put it in $PATH.\nfunc_cygpath ()\n{\n  $debug_cmd\n\n  if test -n \"$LT_CYGPATH\" && test -f \"$LT_CYGPATH\"; then\n    func_cygpath_result=`$LT_CYGPATH \"$@\" 2>/dev/null`\n    if test \"$?\" -ne 0; then\n      # on failure, ensure result is empty\n      func_cygpath_result=\n    fi\n  else\n    func_cygpath_result=\n    func_error \"LT_CYGPATH is empty or specifies non-existent file: '$LT_CYGPATH'\"\n  fi\n}\n#end: func_cygpath\n\n\n# func_convert_core_msys_to_w32 ARG\n# Convert file name or path ARG from MSYS format to w32 format.  Return\n# result in func_convert_core_msys_to_w32_result.\nfunc_convert_core_msys_to_w32 ()\n{\n  $debug_cmd\n\n  # awkward: cmd appends spaces to result\n  func_convert_core_msys_to_w32_result=`( cmd //c echo \"$1\" ) 2>/dev/null |\n    $SED -e 's/[ ]*$//' -e \"$sed_naive_backslashify\"`\n}\n#end: func_convert_core_msys_to_w32\n\n\n# func_convert_file_check ARG1 ARG2\n# Verify that ARG1 (a file name in $build format) was converted to $host\n# format in ARG2. Otherwise, emit an error message, but continue (resetting\n# func_to_host_file_result to ARG1).\nfunc_convert_file_check ()\n{\n  $debug_cmd\n\n  if test -z \"$2\" && test -n \"$1\"; then\n    func_error \"Could not determine host file name corresponding to\"\n    func_error \"  '$1'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback:\n    func_to_host_file_result=$1\n  fi\n}\n# end func_convert_file_check\n\n\n# func_convert_path_check FROM_PATHSEP TO_PATHSEP FROM_PATH TO_PATH\n# Verify that FROM_PATH (a path in $build format) was converted to $host\n# format in TO_PATH. Otherwise, emit an error message, but continue, resetting\n# func_to_host_file_result to a simplistic fallback value (see below).\nfunc_convert_path_check ()\n{\n  $debug_cmd\n\n  if test -z \"$4\" && test -n \"$3\"; then\n    func_error \"Could not determine the host path corresponding to\"\n    func_error \"  '$3'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback.  This is a deliberately simplistic \"conversion\" and\n    # should not be \"improved\".  See libtool.info.\n    if test \"x$1\" != \"x$2\"; then\n      lt_replace_pathsep_chars=\"s|$1|$2|g\"\n      func_to_host_path_result=`echo \"$3\" |\n        $SED -e \"$lt_replace_pathsep_chars\"`\n    else\n      func_to_host_path_result=$3\n    fi\n  fi\n}\n# end func_convert_path_check\n\n\n# func_convert_path_front_back_pathsep FRONTPAT BACKPAT REPL ORIG\n# Modifies func_to_host_path_result by prepending REPL if ORIG matches FRONTPAT\n# and appending REPL if ORIG matches BACKPAT.\nfunc_convert_path_front_back_pathsep ()\n{\n  $debug_cmd\n\n  case $4 in\n  $1 ) func_to_host_path_result=$3$func_to_host_path_result\n    ;;\n  esac\n  case $4 in\n  $2 ) func_append func_to_host_path_result \"$3\"\n    ;;\n  esac\n}\n# end func_convert_path_front_back_pathsep\n\n\n##################################################\n# $build to $host FILE NAME CONVERSION FUNCTIONS #\n##################################################\n# invoked via '$to_host_file_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# Result will be available in $func_to_host_file_result.\n\n\n# func_to_host_file ARG\n# Converts the file name ARG from $build format to $host format. Return result\n# in func_to_host_file_result.\nfunc_to_host_file ()\n{\n  $debug_cmd\n\n  $to_host_file_cmd \"$1\"\n}\n# end func_to_host_file\n\n\n# func_to_tool_file ARG LAZY\n# converts the file name ARG from $build format to toolchain format. Return\n# result in func_to_tool_file_result.  If the conversion in use is listed\n# in (the comma separated) LAZY, no conversion takes place.\nfunc_to_tool_file ()\n{\n  $debug_cmd\n\n  case ,$2, in\n    *,\"$to_tool_file_cmd\",*)\n      func_to_tool_file_result=$1\n      ;;\n    *)\n      $to_tool_file_cmd \"$1\"\n      func_to_tool_file_result=$func_to_host_file_result\n      ;;\n  esac\n}\n# end func_to_tool_file\n\n\n# func_convert_file_noop ARG\n# Copy ARG to func_to_host_file_result.\nfunc_convert_file_noop ()\n{\n  func_to_host_file_result=$1\n}\n# end func_convert_file_noop\n\n\n# func_convert_file_msys_to_w32 ARG\n# Convert file name ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_msys_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_to_host_file_result=$func_convert_core_msys_to_w32_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_w32\n\n\n# func_convert_file_cygwin_to_w32 ARG\n# Convert file name ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_cygwin_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    # because $build is cygwin, we call \"the\" cygpath in $PATH; no need to use\n    # LT_CYGPATH in this case.\n    func_to_host_file_result=`cygpath -m \"$1\"`\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_cygwin_to_w32\n\n\n# func_convert_file_nix_to_w32 ARG\n# Convert file name ARG from *nix to w32 format.  Requires a wine environment\n# and a working winepath. Returns result in func_to_host_file_result.\nfunc_convert_file_nix_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_to_host_file_result=$func_convert_core_file_wine_to_w32_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_w32\n\n\n# func_convert_file_msys_to_cygwin ARG\n# Convert file name ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_file_msys_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_file_result=$func_cygpath_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_cygwin\n\n\n# func_convert_file_nix_to_cygwin ARG\n# Convert file name ARG from *nix to Cygwin format.  Requires Cygwin installed\n# in a wine environment, working winepath, and LT_CYGPATH set.  Returns result\n# in func_to_host_file_result.\nfunc_convert_file_nix_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    # convert from *nix to w32, then use cygpath to convert from w32 to cygwin.\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_file_wine_to_w32_result\"\n    func_to_host_file_result=$func_cygpath_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_cygwin\n\n\n#############################################\n# $build to $host PATH CONVERSION FUNCTIONS #\n#############################################\n# invoked via '$to_host_path_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# The result will be available in $func_to_host_path_result.\n#\n# Path separators are also converted from $build format to $host format.  If\n# ARG begins or ends with a path separator character, it is preserved (but\n# converted to $host format) on output.\n#\n# All path conversion functions are named using the following convention:\n#   file name conversion function    : func_convert_file_X_to_Y ()\n#   path conversion function         : func_convert_path_X_to_Y ()\n# where, for any given $build/$host combination the 'X_to_Y' value is the\n# same.  If conversion functions are added for new $build/$host combinations,\n# the two new functions must follow this pattern, or func_init_to_host_path_cmd\n# will break.\n\n\n# func_init_to_host_path_cmd\n# Ensures that function \"pointer\" variable $to_host_path_cmd is set to the\n# appropriate value, based on the value of $to_host_file_cmd.\nto_host_path_cmd=\nfunc_init_to_host_path_cmd ()\n{\n  $debug_cmd\n\n  if test -z \"$to_host_path_cmd\"; then\n    func_stripname 'func_convert_file_' '' \"$to_host_file_cmd\"\n    to_host_path_cmd=func_convert_path_$func_stripname_result\n  fi\n}\n\n\n# func_to_host_path ARG\n# Converts the path ARG from $build format to $host format. Return result\n# in func_to_host_path_result.\nfunc_to_host_path ()\n{\n  $debug_cmd\n\n  func_init_to_host_path_cmd\n  $to_host_path_cmd \"$1\"\n}\n# end func_to_host_path\n\n\n# func_convert_path_noop ARG\n# Copy ARG to func_to_host_path_result.\nfunc_convert_path_noop ()\n{\n  func_to_host_path_result=$1\n}\n# end func_convert_path_noop\n\n\n# func_convert_path_msys_to_w32 ARG\n# Convert path ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_path_result.\nfunc_convert_path_msys_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from ARG.  MSYS\n    # behavior is inconsistent here; cygpath turns them into '.;' and ';.';\n    # and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=$func_convert_core_msys_to_w32_result\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_w32\n\n\n# func_convert_path_cygwin_to_w32 ARG\n# Convert path ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_cygwin_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_to_host_path_result=`cygpath -m -p \"$func_to_host_path_tmp1\"`\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_cygwin_to_w32\n\n\n# func_convert_path_nix_to_w32 ARG\n# Convert path ARG from *nix to w32 format.  Requires a wine environment and\n# a working winepath.  Returns result in func_to_host_file_result.\nfunc_convert_path_nix_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=$func_convert_core_path_wine_to_w32_result\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_w32\n\n\n# func_convert_path_msys_to_cygwin ARG\n# Convert path ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_path_msys_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_path_result=$func_cygpath_result\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_cygwin\n\n\n# func_convert_path_nix_to_cygwin ARG\n# Convert path ARG from *nix to Cygwin format.  Requires Cygwin installed in a\n# a wine environment, working winepath, and LT_CYGPATH set.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_nix_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from\n    # ARG. msys behavior is inconsistent here, cygpath turns them\n    # into '.;' and ';.', and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_path_wine_to_w32_result\"\n    func_to_host_path_result=$func_cygpath_result\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_cygwin\n\n\n# func_dll_def_p FILE\n# True iff FILE is a Windows DLL '.def' file.\n# Keep in sync with _LT_DLL_DEF_P in libtool.m4\nfunc_dll_def_p ()\n{\n  $debug_cmd\n\n  func_dll_def_p_tmp=`$SED -n \\\n    -e 's/^[\t ]*//' \\\n    -e '/^\\(;.*\\)*$/d' \\\n    -e 's/^\\(EXPORTS\\|LIBRARY\\)\\([\t ].*\\)*$/DEF/p' \\\n    -e q \\\n    \"$1\"`\n  test DEF = \"$func_dll_def_p_tmp\"\n}\n\n\n# func_mode_compile arg...\nfunc_mode_compile ()\n{\n    $debug_cmd\n\n    # Get the compilation command and the source file.\n    base_compile=\n    srcfile=$nonopt  #  always keep a non-empty value in \"srcfile\"\n    suppress_opt=yes\n    suppress_output=\n    arg_mode=normal\n    libobj=\n    later=\n    pie_flag=\n\n    for arg\n    do\n      case $arg_mode in\n      arg  )\n\t# do not \"continue\".  Instead, add this to base_compile\n\tlastarg=$arg\n\targ_mode=normal\n\t;;\n\n      target )\n\tlibobj=$arg\n\targ_mode=normal\n\tcontinue\n\t;;\n\n      normal )\n\t# Accept any command-line options.\n\tcase $arg in\n\t-o)\n\t  test -n \"$libobj\" && \\\n\t    func_fatal_error \"you cannot specify '-o' more than once\"\n\t  arg_mode=target\n\t  continue\n\t  ;;\n\n\t-pie | -fpie | -fPIE)\n          func_append pie_flag \" $arg\"\n\t  continue\n\t  ;;\n\n\t-shared | -static | -prefer-pic | -prefer-non-pic)\n\t  func_append later \" $arg\"\n\t  continue\n\t  ;;\n\n\t-no-suppress)\n\t  suppress_opt=no\n\t  continue\n\t  ;;\n\n\t-Xcompiler)\n\t  arg_mode=arg  #  the next one goes into the \"base_compile\" arg list\n\t  continue      #  The current \"srcfile\" will either be retained or\n\t  ;;            #  replaced later.  I would guess that would be a bug.\n\n\t-Wc,*)\n\t  func_stripname '-Wc,' '' \"$arg\"\n\t  args=$func_stripname_result\n\t  lastarg=\n\t  save_ifs=$IFS; IFS=,\n\t  for arg in $args; do\n\t    IFS=$save_ifs\n\t    func_append_quoted lastarg \"$arg\"\n\t  done\n\t  IFS=$save_ifs\n\t  func_stripname ' ' '' \"$lastarg\"\n\t  lastarg=$func_stripname_result\n\n\t  # Add the arguments to base_compile.\n\t  func_append base_compile \" $lastarg\"\n\t  continue\n\t  ;;\n\n\t*)\n\t  # Accept the current argument as the source file.\n\t  # The previous \"srcfile\" becomes the current argument.\n\t  #\n\t  lastarg=$srcfile\n\t  srcfile=$arg\n\t  ;;\n\tesac  #  case $arg\n\t;;\n      esac    #  case $arg_mode\n\n      # Aesthetically quote the previous argument.\n      func_append_quoted base_compile \"$lastarg\"\n    done # for arg\n\n    case $arg_mode in\n    arg)\n      func_fatal_error \"you must specify an argument for -Xcompile\"\n      ;;\n    target)\n      func_fatal_error \"you must specify a target with '-o'\"\n      ;;\n    *)\n      # Get the name of the library object.\n      test -z \"$libobj\" && {\n\tfunc_basename \"$srcfile\"\n\tlibobj=$func_basename_result\n      }\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    case $libobj in\n    *.[cCFSifmso] | \\\n    *.ada | *.adb | *.ads | *.asm | \\\n    *.c++ | *.cc | *.ii | *.class | *.cpp | *.cxx | \\\n    *.[fF][09]? | *.for | *.java | *.go | *.obj | *.sx | *.cu | *.cup)\n      func_xform \"$libobj\"\n      libobj=$func_xform_result\n      ;;\n    esac\n\n    case $libobj in\n    *.lo) func_lo2o \"$libobj\"; obj=$func_lo2o_result ;;\n    *)\n      func_fatal_error \"cannot determine name of library object from '$libobj'\"\n      ;;\n    esac\n\n    func_infer_tag $base_compile\n\n    for arg in $later; do\n      case $arg in\n      -shared)\n\ttest yes = \"$build_libtool_libs\" \\\n\t  || func_fatal_configuration \"cannot build a shared library\"\n\tbuild_old_libs=no\n\tcontinue\n\t;;\n\n      -static)\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n\n      -prefer-pic)\n\tpic_mode=yes\n\tcontinue\n\t;;\n\n      -prefer-non-pic)\n\tpic_mode=no\n\tcontinue\n\t;;\n      esac\n    done\n\n    func_quote_for_eval \"$libobj\"\n    test \"X$libobj\" != \"X$func_quote_for_eval_result\" \\\n      && $ECHO \"X$libobj\" | $GREP '[]~#^*{};<>?\"'\"'\"'\t &()|`$[]' \\\n      && func_warning \"libobj name '$libobj' may not contain shell special characters.\"\n    func_dirname_and_basename \"$obj\" \"/\" \"\"\n    objname=$func_basename_result\n    xdir=$func_dirname_result\n    lobj=$xdir$objdir/$objname\n\n    test -z \"$base_compile\" && \\\n      func_fatal_help \"you must specify a compilation command\"\n\n    # Delete any leftover library objects.\n    if test yes = \"$build_old_libs\"; then\n      removelist=\"$obj $lobj $libobj ${libobj}T\"\n    else\n      removelist=\"$lobj $libobj ${libobj}T\"\n    fi\n\n    # On Cygwin there's no \"real\" PIC flag so we must build both object types\n    case $host_os in\n    cygwin* | mingw* | pw32* | os2* | cegcc*)\n      pic_mode=default\n      ;;\n    esac\n    if test no = \"$pic_mode\" && test pass_all != \"$deplibs_check_method\"; then\n      # non-PIC code in shared libraries is not supported\n      pic_mode=default\n    fi\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test no = \"$compiler_c_o\"; then\n      output_obj=`$ECHO \"$srcfile\" | $SED 's%^.*/%%; s%\\.[^.]*$%%'`.$objext\n      lockfile=$output_obj.lock\n    else\n      output_obj=\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test yes = \"$need_locks\"; then\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test warn = \"$need_locks\"; then\n      if test -f \"$lockfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n      func_append removelist \" $output_obj\"\n      $ECHO \"$srcfile\" > \"$lockfile\"\n    fi\n\n    $opt_dry_run || $RM $removelist\n    func_append removelist \" $lockfile\"\n    trap '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE' 1 2 15\n\n    func_to_tool_file \"$srcfile\" func_convert_file_msys_to_w32\n    srcfile=$func_to_tool_file_result\n    func_quote_for_eval \"$srcfile\"\n    qsrcfile=$func_quote_for_eval_result\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test yes = \"$build_libtool_libs\"; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      if test no != \"$pic_mode\"; then\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      else\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      fi\n\n      func_mkdir_p \"$xdir$objdir\"\n\n      if test -z \"$output_obj\"; then\n\t# Place PIC objects in $objdir\n\tfunc_append command \" -o $lobj\"\n      fi\n\n      func_show_eval_locale \"$command\"\t\\\n          'test -n \"$output_obj\" && $RM $removelist; exit $EXIT_FAILURE'\n\n      if test warn = \"$need_locks\" &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$lobj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$lobj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n\n      # Allow error messages only from the first compilation.\n      if test yes = \"$suppress_opt\"; then\n\tsuppress_output=' >/dev/null 2>&1'\n      fi\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test yes = \"$build_old_libs\"; then\n      if test yes != \"$pic_mode\"; then\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile$pie_flag\"\n      else\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      fi\n      if test yes = \"$compiler_c_o\"; then\n\tfunc_append command \" -o $obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      func_append command \"$suppress_output\"\n      func_show_eval_locale \"$command\" \\\n        '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE'\n\n      if test warn = \"$need_locks\" &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$obj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$obj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n    fi\n\n    $opt_dry_run || {\n      func_write_libtool_object \"$libobj\" \"$objdir/$objname\" \"$objname\"\n\n      # Unlock the critical section if it was locked\n      if test no != \"$need_locks\"; then\n\tremovelist=$lockfile\n        $RM \"$lockfile\"\n      fi\n    }\n\n    exit $EXIT_SUCCESS\n}\n\n$opt_help || {\n  test compile = \"$opt_mode\" && func_mode_compile ${1+\"$@\"}\n}\n\nfunc_mode_help ()\n{\n    # We need to display help for each of the modes.\n    case $opt_mode in\n      \"\")\n        # Generic help is extracted from the usage comments\n        # at the start of this file.\n        func_help\n        ;;\n\n      clean)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=clean RM [RM-OPTION]... FILE...\n\nRemove files from the build directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically '/bin/rm').  RM-OPTIONS are options (such as '-f') to be passed\nto RM.\n\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      compile)\n      $ECHO \\\n\"Usage: $progname [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -no-suppress      do not suppress compiler output for multiple passes\n  -prefer-pic       try to build PIC objects only\n  -prefer-non-pic   try to build non-PIC objects only\n  -shared           do not build a '.o' file suitable for static linking\n  -static           only build a '.o' file suitable for static linking\n  -Wc,FLAG          pass FLAG directly to the compiler\n\nCOMPILE-COMMAND is a command to be used in creating a 'standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix '.c' with the\nlibrary object suffix, '.lo'.\"\n        ;;\n\n      execute)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to '-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n        ;;\n\n      finish)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe '--dry-run' option if you just want to see what would be executed.\"\n        ;;\n\n      install)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the 'install' or 'cp' program.\n\nThe following components of INSTALL-COMMAND are treated specially:\n\n  -inst-prefix-dir PREFIX-DIR  Use PREFIX-DIR as a staging area for installation\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n        ;;\n\n      link)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -bindir BINDIR    specify path to binaries directory (for systems where\n                    libraries must be found in the PATH setting at runtime)\n  -dlopen FILE      '-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n                    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n                    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-fast-install  disable the fast-install mode\n  -no-install       link a not-installable executable\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -objectlist FILE  use a list of object files found in FILE to specify objects\n  -os2dllname NAME  force a short DLL name on OS/2 (no effect on other OSes)\n  -precious-files-regex REGEX\n                    don't remove output files matching REGEX\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -shared           only do dynamic linking of libtool libraries\n  -shrext SUFFIX    override the standard shared library file extension\n  -static           do not do any dynamic linking of uninstalled libtool libraries\n  -static-libtool-libs\n                    do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n                    specify library version info [each variable defaults to 0]\n  -weak LIBNAME     declare that the target provides the LIBNAME interface\n  -Wc,FLAG\n  -Xcompiler FLAG   pass linker-specific FLAG directly to the compiler\n  -Wl,FLAG\n  -Xlinker FLAG     pass linker-specific FLAG directly to the linker\n  -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)\n\nAll other options (arguments beginning with '-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in '.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in '.la', then a libtool library is created,\nonly library objects ('.lo' files) may be specified, and '-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in '.a' or '.lib', then a standard library is created\nusing 'ar' and 'ranlib', or on Windows using 'lib'.\n\nIf OUTPUT-FILE ends in '.lo' or '.$objext', then a reloadable object file\nis created, otherwise an executable program is created.\"\n        ;;\n\n      uninstall)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically '/bin/rm').  RM-OPTIONS are options (such as '-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      *)\n        func_fatal_help \"invalid operation mode '$opt_mode'\"\n        ;;\n    esac\n\n    echo\n    $ECHO \"Try '$progname --help' for more information about other modes.\"\n}\n\n# Now that we've collected a possible --mode arg, show help if necessary\nif $opt_help; then\n  if test : = \"$opt_help\"; then\n    func_mode_help\n  else\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\tfunc_mode_help\n      done\n    } | $SED -n '1p; 2,$s/^Usage:/  or: /p'\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\techo\n\tfunc_mode_help\n      done\n    } |\n    $SED '1d\n      /^When reporting/,/^Report/{\n\tH\n\td\n      }\n      $x\n      /information about other modes/d\n      /more detailed .*MODE/d\n      s/^Usage:.*--mode=\\([^ ]*\\) .*/Description of \\1 mode:/'\n  fi\n  exit $?\nfi\n\n\n# func_mode_execute arg...\nfunc_mode_execute ()\n{\n    $debug_cmd\n\n    # The first argument is the command name.\n    cmd=$nonopt\n    test -z \"$cmd\" && \\\n      func_fatal_help \"you must specify a COMMAND\"\n\n    # Handle -dlopen flags immediately.\n    for file in $opt_dlopen; do\n      test -f \"$file\" \\\n\t|| func_fatal_help \"'$file' is not a file\"\n\n      dir=\n      case $file in\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"'$lib' is not a valid libtool archive\"\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\tfunc_source \"$file\"\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && \\\n\t    func_warning \"'$file' was not linked with '-export-dynamic'\"\n\t  continue\n\tfi\n\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=$func_dirname_result\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  func_append dir \"/$objdir\"\n\telse\n\t  if test ! -f \"$dir/$dlname\"; then\n\t    func_fatal_error \"cannot find '$dlname' in '$dir' or '$dir/$objdir'\"\n\t  fi\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=$func_dirname_result\n\t;;\n\n      *)\n\tfunc_warning \"'-dlopen' is ignored for non-libtool libraries and objects\"\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=$absdir\n\n      # Now add the directory to shlibpath_var.\n      if eval \"test -z \\\"\\$$shlibpath_var\\\"\"; then\n\teval \"$shlibpath_var=\\\"\\$dir\\\"\"\n      else\n\teval \"$shlibpath_var=\\\"\\$dir:\\$$shlibpath_var\\\"\"\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=$magic\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case $file in\n      -* | *.la | *.lo ) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif func_ltwrapper_script_p \"$file\"; then\n\t  func_source \"$file\"\n\t  # Transform arg to wrapped name.\n\t  file=$progdir/$program\n\telif func_ltwrapper_executable_p \"$file\"; then\n\t  func_ltwrapper_scriptname \"$file\"\n\t  func_source \"$func_ltwrapper_scriptname_result\"\n\t  # Transform arg to wrapped name.\n\t  file=$progdir/$program\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      func_append_quoted args \"$file\"\n    done\n\n    if $opt_dry_run; then\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n\teval \"\\$ECHO \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n\techo \"export $shlibpath_var\"\n      fi\n      $ECHO \"$cmd$args\"\n      exit $EXIT_SUCCESS\n    else\n      if test -n \"$shlibpath_var\"; then\n\t# Export the shlibpath_var.\n\teval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved environment variables\n      for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\n      do\n\teval \"if test \\\"\\${save_$lt_var+set}\\\" = set; then\n                $lt_var=\\$save_$lt_var; export $lt_var\n\t      else\n\t\t$lt_unset $lt_var\n\t      fi\"\n      done\n\n      # Now prepare to actually exec the command.\n      exec_cmd=\\$cmd$args\n    fi\n}\n\ntest execute = \"$opt_mode\" && func_mode_execute ${1+\"$@\"}\n\n\n# func_mode_finish arg...\nfunc_mode_finish ()\n{\n    $debug_cmd\n\n    libs=\n    libdirs=\n    admincmds=\n\n    for opt in \"$nonopt\" ${1+\"$@\"}\n    do\n      if test -d \"$opt\"; then\n\tfunc_append libdirs \" $opt\"\n\n      elif test -f \"$opt\"; then\n\tif func_lalib_unsafe_p \"$opt\"; then\n\t  func_append libs \" $opt\"\n\telse\n\t  func_warning \"'$opt' is not a valid libtool archive\"\n\tfi\n\n      else\n\tfunc_fatal_error \"invalid argument '$opt'\"\n      fi\n    done\n\n    if test -n \"$libs\"; then\n      if test -n \"$lt_sysroot\"; then\n        sysroot_regex=`$ECHO \"$lt_sysroot\" | $SED \"$sed_make_literal_regex\"`\n        sysroot_cmd=\"s/\\([ ']\\)$sysroot_regex/\\1/g;\"\n      else\n        sysroot_cmd=\n      fi\n\n      # Remove sysroot references\n      if $opt_dry_run; then\n        for lib in $libs; do\n          echo \"removing references to $lt_sysroot and '=' prefixes from $lib\"\n        done\n      else\n        tmpdir=`func_mktempdir`\n        for lib in $libs; do\n\t  $SED -e \"$sysroot_cmd s/\\([ ']-[LR]\\)=/\\1/g; s/\\([ ']\\)=/\\1/g\" $lib \\\n\t    > $tmpdir/tmp-la\n\t  mv -f $tmpdir/tmp-la $lib\n\tdone\n        ${RM}r \"$tmpdir\"\n      fi\n    fi\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  func_execute_cmds \"$finish_cmds\" 'admincmds=\"$admincmds\n'\"$cmd\"'\"'\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $opt_dry_run || eval \"$cmds\" || func_append admincmds \"\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    $opt_quiet && exit $EXIT_SUCCESS\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      echo \"----------------------------------------------------------------------\"\n      echo \"Libraries have been installed in:\"\n      for libdir in $libdirs; do\n\t$ECHO \"   $libdir\"\n      done\n      echo\n      echo \"If you ever happen to want to link against installed libraries\"\n      echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n      echo \"specify the full pathname of the library, or use the '-LLIBDIR'\"\n      echo \"flag during linking and do at least one of the following:\"\n      if test -n \"$shlibpath_var\"; then\n\techo \"   - add LIBDIR to the '$shlibpath_var' environment variable\"\n\techo \"     during execution\"\n      fi\n      if test -n \"$runpath_var\"; then\n\techo \"   - add LIBDIR to the '$runpath_var' environment variable\"\n\techo \"     during linking\"\n      fi\n      if test -n \"$hardcode_libdir_flag_spec\"; then\n\tlibdir=LIBDIR\n\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\n\t$ECHO \"   - use the '$flag' linker flag\"\n      fi\n      if test -n \"$admincmds\"; then\n\t$ECHO \"   - have your system administrator run these commands:$admincmds\"\n      fi\n      if test -f /etc/ld.so.conf; then\n\techo \"   - have your system administrator add LIBDIR to '/etc/ld.so.conf'\"\n      fi\n      echo\n\n      echo \"See any operating system documentation about shared libraries for\"\n      case $host in\n\tsolaris2.[6789]|solaris2.1[0-9])\n\t  echo \"more information, such as the ld(1), crle(1) and ld.so(8) manual\"\n\t  echo \"pages.\"\n\t  ;;\n\t*)\n\t  echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n\t  ;;\n      esac\n      echo \"----------------------------------------------------------------------\"\n    fi\n    exit $EXIT_SUCCESS\n}\n\ntest finish = \"$opt_mode\" && func_mode_finish ${1+\"$@\"}\n\n\n# func_mode_install arg...\nfunc_mode_install ()\n{\n    $debug_cmd\n\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$SHELL\" = \"$nonopt\" || test /bin/sh = \"$nonopt\" ||\n       # Allow the use of GNU shtool's install command.\n       case $nonopt in *shtool*) :;; *) false;; esac\n    then\n      # Aesthetically quote it.\n      func_quote_for_eval \"$nonopt\"\n      install_prog=\"$func_quote_for_eval_result \"\n      arg=$1\n      shift\n    else\n      install_prog=\n      arg=$nonopt\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    func_quote_for_eval \"$arg\"\n    func_append install_prog \"$func_quote_for_eval_result\"\n    install_shared_prog=$install_prog\n    case \" $install_prog \" in\n      *[\\\\\\ /]cp\\ *) install_cp=: ;;\n      *) install_cp=false ;;\n    esac\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=false\n    stripme=\n    no_mode=:\n    for arg\n    do\n      arg2=\n      if test -n \"$dest\"; then\n\tfunc_append files \" $dest\"\n\tdest=$arg\n\tcontinue\n      fi\n\n      case $arg in\n      -d) isdir=: ;;\n      -f)\n\tif $install_cp; then :; else\n\t  prev=$arg\n\tfi\n\t;;\n      -g | -m | -o)\n\tprev=$arg\n\t;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*)\n\t;;\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  if test X-m = \"X$prev\" && test -n \"$install_override_mode\"; then\n\t    arg2=$install_override_mode\n\t    no_mode=false\n\t  fi\n\t  prev=\n\telse\n\t  dest=$arg\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      func_quote_for_eval \"$arg\"\n      func_append install_prog \" $func_quote_for_eval_result\"\n      if test -n \"$arg2\"; then\n\tfunc_quote_for_eval \"$arg2\"\n      fi\n      func_append install_shared_prog \" $func_quote_for_eval_result\"\n    done\n\n    test -z \"$install_prog\" && \\\n      func_fatal_help \"you must specify an install program\"\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the '$prev' option requires an argument\"\n\n    if test -n \"$install_override_mode\" && $no_mode; then\n      if $install_cp; then :; else\n\tfunc_quote_for_eval \"$install_override_mode\"\n\tfunc_append install_shared_prog \" -m $func_quote_for_eval_result\"\n      fi\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\tfunc_fatal_help \"no file or destination specified\"\n      else\n\tfunc_fatal_help \"you must specify a destination\"\n      fi\n    fi\n\n    # Strip any trailing slash from the destination.\n    func_stripname '' '/' \"$dest\"\n    dest=$func_stripname_result\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=:\n    if $isdir; then\n      destdir=$dest\n      destname=\n    else\n      func_dirname_and_basename \"$dest\" \"\" \".\"\n      destdir=$func_dirname_result\n      destname=$func_basename_result\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files; shift\n      test \"$#\" -gt 1 && \\\n\tfunc_fatal_help \"'$dest' is not a directory\"\n    fi\n    case $destdir in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase $file in\n\t*.lo) ;;\n\t*)\n\t  func_fatal_help \"'$destdir' must be an absolute directory name\"\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=$magic\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case $file in\n      *.$libext)\n\t# Do the static libraries later.\n\tfunc_append staticlibs \" $file\"\n\t;;\n\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"'$file' is not a valid libtool archive\"\n\n\tlibrary_names=\n\told_library=\n\trelink_command=\n\tfunc_source \"$file\"\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append current_libdirs \" $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append future_libdirs \" $libdir\" ;;\n\t  esac\n\tfi\n\n\tfunc_dirname \"$file\" \"/\" \"\"\n\tdir=$func_dirname_result\n\tfunc_append dir \"$objdir\"\n\n\tif test -n \"$relink_command\"; then\n\t  # Determine the prefix the user has applied to our future dir.\n\t  inst_prefix_dir=`$ECHO \"$destdir\" | $SED -e \"s%$libdir\\$%%\"`\n\n\t  # Don't allow the user to place us outside of our expected\n\t  # location b/c this prevents finding dependent libraries that\n\t  # are installed to the same prefix.\n\t  # At present, this check doesn't affect windows .dll's that\n\t  # are installed into $libdir/../bin (currently, that works fine)\n\t  # but it's something to keep an eye on.\n\t  test \"$inst_prefix_dir\" = \"$destdir\" && \\\n\t    func_fatal_error \"error: cannot install '$file' to a directory not ending in $libdir\"\n\n\t  if test -n \"$inst_prefix_dir\"; then\n\t    # Stick the inst_prefix_dir data into the link command.\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%\"`\n\t  else\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%%\"`\n\t  fi\n\n\t  func_warning \"relinking '$file'\"\n\t  func_show_eval \"$relink_command\" \\\n\t    'func_fatal_error \"error: relink '\\''$file'\\'' with the above command before installing it\"'\n\tfi\n\n\t# See the names of the shared library.\n\tset dummy $library_names; shift\n\tif test -n \"$1\"; then\n\t  realname=$1\n\t  shift\n\n\t  srcname=$realname\n\t  test -n \"$relink_command\" && srcname=${realname}T\n\n\t  # Install the shared library and build the symlinks.\n\t  func_show_eval \"$install_shared_prog $dir/$srcname $destdir/$realname\" \\\n\t      'exit $?'\n\t  tstripme=$stripme\n\t  case $host_os in\n\t  cygwin* | mingw* | pw32* | cegcc*)\n\t    case $realname in\n\t    *.dll.a)\n\t      tstripme=\n\t      ;;\n\t    esac\n\t    ;;\n\t  os2*)\n\t    case $realname in\n\t    *_dll.a)\n\t      tstripme=\n\t      ;;\n\t    esac\n\t    ;;\n\t  esac\n\t  if test -n \"$tstripme\" && test -n \"$striplib\"; then\n\t    func_show_eval \"$striplib $destdir/$realname\" 'exit $?'\n\t  fi\n\n\t  if test \"$#\" -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    # Try 'ln -sf' first, because the 'ln' binary might depend on\n\t    # the symlink we replace!  Solaris /bin/ln does not understand -f,\n\t    # so we also need to try rm && ln -s.\n\t    for linkname\n\t    do\n\t      test \"$linkname\" != \"$realname\" \\\n\t\t&& func_show_eval \"(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })\"\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=$destdir/$realname\n\t  func_execute_cmds \"$postinstall_cmds\" 'exit $?'\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tfunc_basename \"$file\"\n\tname=$func_basename_result\n\tinstname=$dir/${name}i\n\tfunc_show_eval \"$install_prog $instname $destdir/$name\" 'exit $?'\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && func_append staticlibs \" $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=$destdir/$destname\n\telse\n\t  func_basename \"$file\"\n\t  destfile=$func_basename_result\n\t  destfile=$destdir/$destfile\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase $destfile in\n\t*.lo)\n\t  func_lo2o \"$destfile\"\n\t  staticdest=$func_lo2o_result\n\t  ;;\n\t*.$objext)\n\t  staticdest=$destfile\n\t  destfile=\n\t  ;;\n\t*)\n\t  func_fatal_help \"cannot copy a libtool object to '$destfile'\"\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\ttest -n \"$destfile\" && \\\n\t  func_show_eval \"$install_prog $file $destfile\" 'exit $?'\n\n\t# Install the old object if enabled.\n\tif test yes = \"$build_old_libs\"; then\n\t  # Deduce the name of the old-style object file.\n\t  func_lo2o \"$file\"\n\t  staticobj=$func_lo2o_result\n\t  func_show_eval \"$install_prog \\$staticobj \\$staticdest\" 'exit $?'\n\tfi\n\texit $EXIT_SUCCESS\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=$destdir/$destname\n\telse\n\t  func_basename \"$file\"\n\t  destfile=$func_basename_result\n\t  destfile=$destdir/$destfile\n\tfi\n\n\t# If the file is missing, and there is a .exe on the end, strip it\n\t# because it is most likely a libtool script we actually want to\n\t# install\n\tstripped_ext=\n\tcase $file in\n\t  *.exe)\n\t    if test ! -f \"$file\"; then\n\t      func_stripname '' '.exe' \"$file\"\n\t      file=$func_stripname_result\n\t      stripped_ext=.exe\n\t    fi\n\t    ;;\n\tesac\n\n\t# Do a test to see if this is really a libtool program.\n\tcase $host in\n\t*cygwin* | *mingw*)\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      wrapper=$func_ltwrapper_scriptname_result\n\t    else\n\t      func_stripname '' '.exe' \"$file\"\n\t      wrapper=$func_stripname_result\n\t    fi\n\t    ;;\n\t*)\n\t    wrapper=$file\n\t    ;;\n\tesac\n\tif func_ltwrapper_script_p \"$wrapper\"; then\n\t  notinst_deplibs=\n\t  relink_command=\n\n\t  func_source \"$wrapper\"\n\n\t  # Check the variables that should have been set.\n\t  test -z \"$generated_by_libtool_version\" && \\\n\t    func_fatal_error \"invalid libtool wrapper script '$wrapper'\"\n\n\t  finalize=:\n\t  for lib in $notinst_deplibs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      func_source \"$lib\"\n\t    fi\n\t    libfile=$libdir/`$ECHO \"$lib\" | $SED 's%^.*/%%g'`\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      func_warning \"'$lib' has not been installed in '$libdir'\"\n\t      finalize=false\n\t    fi\n\t  done\n\n\t  relink_command=\n\t  func_source \"$wrapper\"\n\n\t  outputname=\n\t  if test no = \"$fast_install\" && test -n \"$relink_command\"; then\n\t    $opt_dry_run || {\n\t      if $finalize; then\n\t        tmpdir=`func_mktempdir`\n\t\tfunc_basename \"$file$stripped_ext\"\n\t\tfile=$func_basename_result\n\t        outputname=$tmpdir/$file\n\t        # Replace the output file specification.\n\t        relink_command=`$ECHO \"$relink_command\" | $SED 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t        $opt_quiet || {\n\t          func_quote_for_expand \"$relink_command\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t        }\n\t        if eval \"$relink_command\"; then :\n\t          else\n\t\t  func_error \"error: relink '$file' with the above command before installing it\"\n\t\t  $opt_dry_run || ${RM}r \"$tmpdir\"\n\t\t  continue\n\t        fi\n\t        file=$outputname\n\t      else\n\t        func_warning \"cannot relink '$file'\"\n\t      fi\n\t    }\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$ECHO \"$file$stripped_ext\" | $SED \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t# remove .exe since cygwin /usr/bin/install will append another\n\t# one anyway\n\tcase $install_prog,$host in\n\t*/usr/bin/install*,*cygwin*)\n\t  case $file:$destfile in\n\t  *.exe:*.exe)\n\t    # this is ok\n\t    ;;\n\t  *.exe:*)\n\t    destfile=$destfile.exe\n\t    ;;\n\t  *:*.exe)\n\t    func_stripname '' '.exe' \"$destfile\"\n\t    destfile=$func_stripname_result\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tfunc_show_eval \"$install_prog\\$stripme \\$file \\$destfile\" 'exit $?'\n\t$opt_dry_run || if test -n \"$outputname\"; then\n\t  ${RM}r \"$tmpdir\"\n\tfi\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      func_basename \"$file\"\n      name=$func_basename_result\n\n      # Set up the ranlib parameters.\n      oldlib=$destdir/$name\n      func_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n      tool_oldlib=$func_to_tool_file_result\n\n      func_show_eval \"$install_prog \\$file \\$oldlib\" 'exit $?'\n\n      if test -n \"$stripme\" && test -n \"$old_striplib\"; then\n\tfunc_show_eval \"$old_striplib $tool_oldlib\" 'exit $?'\n      fi\n\n      # Do each command in the postinstall commands.\n      func_execute_cmds \"$old_postinstall_cmds\" 'exit $?'\n    done\n\n    test -n \"$future_libdirs\" && \\\n      func_warning \"remember to run '$progname --finish$future_libdirs'\"\n\n    if test -n \"$current_libdirs\"; then\n      # Maybe just do a dry run.\n      $opt_dry_run && current_libdirs=\" -n$current_libdirs\"\n      exec_cmd='$SHELL \"$progpath\" $preserve_args --finish$current_libdirs'\n    else\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest install = \"$opt_mode\" && func_mode_install ${1+\"$@\"}\n\n\n# func_generate_dlsyms outputname originator pic_p\n# Extract symbols from dlprefiles and create ${outputname}S.o with\n# a dlpreopen symbol table.\nfunc_generate_dlsyms ()\n{\n    $debug_cmd\n\n    my_outputname=$1\n    my_originator=$2\n    my_pic_p=${3-false}\n    my_prefix=`$ECHO \"$my_originator\" | $SED 's%[^a-zA-Z0-9]%_%g'`\n    my_dlsyms=\n\n    if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n      if test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\tmy_dlsyms=${my_outputname}S.c\n      else\n\tfunc_error \"not configured to extract global symbols from dlpreopened files\"\n      fi\n    fi\n\n    if test -n \"$my_dlsyms\"; then\n      case $my_dlsyms in\n      \"\") ;;\n      *.c)\n\t# Discover the nlist of each of the dlfiles.\n\tnlist=$output_objdir/$my_outputname.nm\n\n\tfunc_show_eval \"$RM $nlist ${nlist}S ${nlist}T\"\n\n\t# Parse the name list into a source file.\n\tfunc_verbose \"creating $output_objdir/$my_dlsyms\"\n\n\t$opt_dry_run || $ECHO > \"$output_objdir/$my_dlsyms\" \"\\\n/* $my_dlsyms - symbol resolution table for '$my_outputname' dlsym emulation. */\n/* Generated by $PROGRAM (GNU $PACKAGE) $VERSION */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n#if defined __GNUC__ && (((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 4))\n#pragma GCC diagnostic ignored \\\"-Wstrict-prototypes\\\"\n#endif\n\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT_DLSYM_CONST\n#else\n# define LT_DLSYM_CONST const\n#endif\n\n#define STREQ(s1, s2) (strcmp ((s1), (s2)) == 0)\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\tif test yes = \"$dlself\"; then\n\t  func_verbose \"generating symbol list for '$output'\"\n\n\t  $opt_dry_run || echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t  # Add our own program objects to the symbol list.\n\t  progfiles=`$ECHO \"$objs$old_deplibs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\t  for progfile in $progfiles; do\n\t    func_to_tool_file \"$progfile\" func_convert_file_msys_to_w32\n\t    func_verbose \"extracting global C symbols from '$func_to_tool_file_result'\"\n\t    $opt_dry_run || eval \"$NM $func_to_tool_file_result | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  if test -n \"$export_symbols_regex\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  # Prepare the list of exported symbols\n\t  if test -z \"$export_symbols\"; then\n\t    export_symbols=$output_objdir/$outputname.exp\n\t    $opt_dry_run || {\n\t      $RM $export_symbols\n\t      eval \"$SED -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \\(.*\\)$/\\1/p' \"'< \"$nlist\" > \"$export_symbols\"'\n\t      case $host in\n\t      *cygwin* | *mingw* | *cegcc* )\n                eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n                eval 'cat \"$export_symbols\" >> \"$output_objdir/$outputname.def\"'\n\t        ;;\n\t      esac\n\t    }\n\t  else\n\t    $opt_dry_run || {\n\t      eval \"$SED -e 's/\\([].[*^$]\\)/\\\\\\\\\\1/g' -e 's/^/ /' -e 's/$/$/'\"' < \"$export_symbols\" > \"$output_objdir/$outputname.exp\"'\n\t      eval '$GREP -f \"$output_objdir/$outputname.exp\" < \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t      case $host in\n\t        *cygwin* | *mingw* | *cegcc* )\n\t          eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n\t          eval 'cat \"$nlist\" >> \"$output_objdir/$outputname.def\"'\n\t          ;;\n\t      esac\n\t    }\n\t  fi\n\tfi\n\n\tfor dlprefile in $dlprefiles; do\n\t  func_verbose \"extracting global C symbols from '$dlprefile'\"\n\t  func_basename \"$dlprefile\"\n\t  name=$func_basename_result\n          case $host in\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # if an import library, we need to obtain dlname\n\t      if func_win32_import_lib_p \"$dlprefile\"; then\n\t        func_tr_sh \"$dlprefile\"\n\t        eval \"curr_lafile=\\$libfile_$func_tr_sh_result\"\n\t        dlprefile_dlbasename=\n\t        if test -n \"$curr_lafile\" && func_lalib_p \"$curr_lafile\"; then\n\t          # Use subshell, to avoid clobbering current variable values\n\t          dlprefile_dlname=`source \"$curr_lafile\" && echo \"$dlname\"`\n\t          if test -n \"$dlprefile_dlname\"; then\n\t            func_basename \"$dlprefile_dlname\"\n\t            dlprefile_dlbasename=$func_basename_result\n\t          else\n\t            # no lafile. user explicitly requested -dlpreopen <import library>.\n\t            $sharedlib_from_linklib_cmd \"$dlprefile\"\n\t            dlprefile_dlbasename=$sharedlib_from_linklib_result\n\t          fi\n\t        fi\n\t        $opt_dry_run || {\n\t          if test -n \"$dlprefile_dlbasename\"; then\n\t            eval '$ECHO \": $dlprefile_dlbasename\" >> \"$nlist\"'\n\t          else\n\t            func_warning \"Could not compute DLL name from $name\"\n\t            eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          fi\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe |\n\t            $SED -e '/I __imp/d' -e 's/I __nm_/D /;s/_nm__//' >> '$nlist'\"\n\t        }\n\t      else # not an import lib\n\t        $opt_dry_run || {\n\t          eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t        }\n\t      fi\n\t    ;;\n\t    *)\n\t      $opt_dry_run || {\n\t        eval '$ECHO \": $name \" >> \"$nlist\"'\n\t        func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t        eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t      }\n\t    ;;\n          esac\n\tdone\n\n\t$opt_dry_run || {\n\t  # Make sure we have at least an empty file.\n\t  test -f \"$nlist\" || : > \"$nlist\"\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t    $MV \"$nlist\"T \"$nlist\"\n\t  fi\n\n\t  # Try sorting and uniquifying the output.\n\t  if $GREP -v \"^: \" < \"$nlist\" |\n\t      if sort -k 3 </dev/null >/dev/null 2>&1; then\n\t\tsort -k 3\n\t      else\n\t\tsort +2\n\t      fi |\n\t      uniq > \"$nlist\"S; then\n\t    :\n\t  else\n\t    $GREP -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t  fi\n\n\t  if test -f \"$nlist\"S; then\n\t    eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$my_dlsyms\"'\n\t  else\n\t    echo '/* NONE */' >> \"$output_objdir/$my_dlsyms\"\n\t  fi\n\n\t  func_show_eval '$RM \"${nlist}I\"'\n\t  if test -n \"$global_symbol_to_import\"; then\n\t    eval \"$global_symbol_to_import\"' < \"$nlist\"S > \"$nlist\"I'\n\t  fi\n\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n\n/* The mapping between symbol names and symbols.  */\ntypedef struct {\n  const char *name;\n  void *address;\n} lt_dlsymlist;\nextern LT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[];\\\n\"\n\n\t  if test -s \"$nlist\"I; then\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\nstatic void lt_syminit(void)\n{\n  LT_DLSYM_CONST lt_dlsymlist *symbol = lt_${my_prefix}_LTX_preloaded_symbols;\n  for (; symbol->name; ++symbol)\n    {\"\n\t    $SED 's/.*/      if (STREQ (symbol->name, \\\"&\\\")) symbol->address = (void *) \\&&;/' < \"$nlist\"I >> \"$output_objdir/$my_dlsyms\"\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n    }\n}\"\n\t  fi\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\nLT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[] =\n{ {\\\"$my_originator\\\", (void *) 0},\"\n\n\t  if test -s \"$nlist\"I; then\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {\\\"@INIT@\\\", (void *) &lt_syminit},\"\n\t  fi\n\n\t  case $need_lib_prefix in\n\t  no)\n\t    eval \"$global_symbol_to_c_name_address\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  *)\n\t    eval \"$global_symbol_to_c_name_address_lib_prefix\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  esac\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_${my_prefix}_LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t} # !$opt_dry_run\n\n\tpic_flag_for_symtable=\n\tcase \"$compile_command \" in\n\t*\" -static \"*) ;;\n\t*)\n\t  case $host in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2.*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    pic_flag_for_symtable=\" $pic_flag -DFREEBSD_WORKAROUND\" ;;\n\t  *-*-hpux*)\n\t    pic_flag_for_symtable=\" $pic_flag\"  ;;\n\t  *)\n\t    $my_pic_p && pic_flag_for_symtable=\" $pic_flag\"\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tsymtab_cflags=\n\tfor arg in $LTCFLAGS; do\n\t  case $arg in\n\t  -pie | -fpie | -fPIE) ;;\n\t  *) func_append symtab_cflags \" $arg\" ;;\n\t  esac\n\tdone\n\n\t# Now compile the dynamic symbol file.\n\tfunc_show_eval '(cd $output_objdir && $LTCC$symtab_cflags -c$no_builtin_flag$pic_flag_for_symtable \"$my_dlsyms\")' 'exit $?'\n\n\t# Clean up the generated files.\n\tfunc_show_eval '$RM \"$output_objdir/$my_dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\" \"${nlist}I\"'\n\n\t# Transform the symbol file into the correct name.\n\tsymfileobj=$output_objdir/${my_outputname}S.$objext\n\tcase $host in\n\t*cygwin* | *mingw* | *cegcc* )\n\t  if test -f \"$output_objdir/$my_outputname.def\"; then\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t  else\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  fi\n\t  ;;\n\t*)\n\t  compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  ;;\n\tesac\n\t;;\n      *)\n\tfunc_fatal_error \"unknown suffix for '$my_dlsyms'\"\n\t;;\n      esac\n    else\n      # We keep going just in case the user didn't refer to\n      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n      # really was required.\n\n      # Nullify the symbol file.\n      compile_command=`$ECHO \"$compile_command\" | $SED \"s% @SYMFILE@%%\"`\n      finalize_command=`$ECHO \"$finalize_command\" | $SED \"s% @SYMFILE@%%\"`\n    fi\n}\n\n# func_cygming_gnu_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is a GNU/binutils-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_gnu_implib_p ()\n{\n  $debug_cmd\n\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_gnu_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $EGREP ' (_head_[A-Za-z0-9_]+_[ad]l*|[A-Za-z0-9_]+_[ad]l*_iname)$'`\n  test -n \"$func_cygming_gnu_implib_tmp\"\n}\n\n# func_cygming_ms_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is an MS-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_ms_implib_p ()\n{\n  $debug_cmd\n\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_ms_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $GREP '_NULL_IMPORT_DESCRIPTOR'`\n  test -n \"$func_cygming_ms_implib_tmp\"\n}\n\n# func_win32_libid arg\n# return the library type of file 'arg'\n#\n# Need a lot of goo to handle *both* DLLs and import libs\n# Has to be a shell function in order to 'eat' the argument\n# that is supplied when $file_magic_command is called.\n# Despite the name, also deal with 64 bit binaries.\nfunc_win32_libid ()\n{\n  $debug_cmd\n\n  win32_libid_type=unknown\n  win32_fileres=`file -L $1 2>/dev/null`\n  case $win32_fileres in\n  *ar\\ archive\\ import\\ library*) # definitely import\n    win32_libid_type=\"x86 archive import\"\n    ;;\n  *ar\\ archive*) # could be an import, or static\n    # Keep the egrep pattern in sync with the one in _LT_CHECK_MAGIC_METHOD.\n    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null |\n       $EGREP 'file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)' >/dev/null; then\n      case $nm_interface in\n      \"MS dumpbin\")\n\tif func_cygming_ms_implib_p \"$1\" ||\n\t   func_cygming_gnu_implib_p \"$1\"\n\tthen\n\t  win32_nmres=import\n\telse\n\t  win32_nmres=\n\tfi\n\t;;\n      *)\n\tfunc_to_tool_file \"$1\" func_convert_file_msys_to_w32\n\twin32_nmres=`eval $NM -f posix -A \\\"$func_to_tool_file_result\\\" |\n\t  $SED -n -e '\n\t    1,100{\n\t\t/ I /{\n\t\t    s|.*|import|\n\t\t    p\n\t\t    q\n\t\t}\n\t    }'`\n\t;;\n      esac\n      case $win32_nmres in\n      import*)  win32_libid_type=\"x86 archive import\";;\n      *)        win32_libid_type=\"x86 archive static\";;\n      esac\n    fi\n    ;;\n  *DLL*)\n    win32_libid_type=\"x86 DLL\"\n    ;;\n  *executable*) # but shell scripts are \"executable\" too...\n    case $win32_fileres in\n    *MS\\ Windows\\ PE\\ Intel*)\n      win32_libid_type=\"x86 DLL\"\n      ;;\n    esac\n    ;;\n  esac\n  $ECHO \"$win32_libid_type\"\n}\n\n# func_cygming_dll_for_implib ARG\n#\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib ()\n{\n  $debug_cmd\n\n  sharedlib_from_linklib_result=`$DLLTOOL --identify-strict --identify \"$1\"`\n}\n\n# func_cygming_dll_for_implib_fallback_core SECTION_NAME LIBNAMEs\n#\n# The is the core of a fallback implementation of a\n# platform-specific function to extract the name of the\n# DLL associated with the specified import library LIBNAME.\n#\n# SECTION_NAME is either .idata$6 or .idata$7, depending\n# on the platform and compiler that created the implib.\n#\n# Echos the name of the DLL associated with the\n# specified import library.\nfunc_cygming_dll_for_implib_fallback_core ()\n{\n  $debug_cmd\n\n  match_literal=`$ECHO \"$1\" | $SED \"$sed_make_literal_regex\"`\n  $OBJDUMP -s --section \"$1\" \"$2\" 2>/dev/null |\n    $SED '/^Contents of section '\"$match_literal\"':/{\n      # Place marker at beginning of archive member dllname section\n      s/.*/====MARK====/\n      p\n      d\n    }\n    # These lines can sometimes be longer than 43 characters, but\n    # are always uninteresting\n    /:[\t ]*file format pe[i]\\{,1\\}-/d\n    /^In archive [^:]*:/d\n    # Ensure marker is printed\n    /^====MARK====/p\n    # Remove all lines with less than 43 characters\n    /^.\\{43\\}/!d\n    # From remaining lines, remove first 43 characters\n    s/^.\\{43\\}//' |\n    $SED -n '\n      # Join marker and all lines until next marker into a single line\n      /^====MARK====/ b para\n      H\n      $ b para\n      b\n      :para\n      x\n      s/\\n//g\n      # Remove the marker\n      s/^====MARK====//\n      # Remove trailing dots and whitespace\n      s/[\\. \\t]*$//\n      # Print\n      /./p' |\n    # we now have a list, one entry per line, of the stringified\n    # contents of the appropriate section of all members of the\n    # archive that possess that section. Heuristic: eliminate\n    # all those that have a first or second character that is\n    # a '.' (that is, objdump's representation of an unprintable\n    # character.) This should work for all archives with less than\n    # 0x302f exports -- but will fail for DLLs whose name actually\n    # begins with a literal '.' or a single character followed by\n    # a '.'.\n    #\n    # Of those that remain, print the first one.\n    $SED -e '/^\\./d;/^.\\./d;q'\n}\n\n# func_cygming_dll_for_implib_fallback ARG\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n#\n# This fallback implementation is for use when $DLLTOOL\n# does not support the --identify-strict option.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib_fallback ()\n{\n  $debug_cmd\n\n  if func_cygming_gnu_implib_p \"$1\"; then\n    # binutils import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$7' \"$1\"`\n  elif func_cygming_ms_implib_p \"$1\"; then\n    # ms-generated import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$6' \"$1\"`\n  else\n    # unknown\n    sharedlib_from_linklib_result=\n  fi\n}\n\n\n# func_extract_an_archive dir oldlib\nfunc_extract_an_archive ()\n{\n    $debug_cmd\n\n    f_ex_an_ar_dir=$1; shift\n    f_ex_an_ar_oldlib=$1\n    if test yes = \"$lock_old_archive_extraction\"; then\n      lockfile=$f_ex_an_ar_oldlib.lock\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    fi\n    func_show_eval \"(cd \\$f_ex_an_ar_dir && $AR x \\\"\\$f_ex_an_ar_oldlib\\\")\" \\\n\t\t   'stat=$?; rm -f \"$lockfile\"; exit $stat'\n    if test yes = \"$lock_old_archive_extraction\"; then\n      $opt_dry_run || rm -f \"$lockfile\"\n    fi\n    if ($AR t \"$f_ex_an_ar_oldlib\" | sort | sort -uc >/dev/null 2>&1); then\n     :\n    else\n      func_fatal_error \"object name conflicts in archive: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib\"\n    fi\n}\n\n\n# func_extract_archives gentop oldlib ...\nfunc_extract_archives ()\n{\n    $debug_cmd\n\n    my_gentop=$1; shift\n    my_oldlibs=${1+\"$@\"}\n    my_oldobjs=\n    my_xlib=\n    my_xabs=\n    my_xdir=\n\n    for my_xlib in $my_oldlibs; do\n      # Extract the objects.\n      case $my_xlib in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) my_xabs=$my_xlib ;;\n\t*) my_xabs=`pwd`\"/$my_xlib\" ;;\n      esac\n      func_basename \"$my_xlib\"\n      my_xlib=$func_basename_result\n      my_xlib_u=$my_xlib\n      while :; do\n        case \" $extracted_archives \" in\n\t*\" $my_xlib_u \"*)\n\t  func_arith $extracted_serial + 1\n\t  extracted_serial=$func_arith_result\n\t  my_xlib_u=lt$extracted_serial-$my_xlib ;;\n\t*) break ;;\n\tesac\n      done\n      extracted_archives=\"$extracted_archives $my_xlib_u\"\n      my_xdir=$my_gentop/$my_xlib_u\n\n      func_mkdir_p \"$my_xdir\"\n\n      case $host in\n      *-darwin*)\n\tfunc_verbose \"Extracting $my_xabs\"\n\t# Do not bother doing anything if just a dry run\n\t$opt_dry_run || {\n\t  darwin_orig_dir=`pwd`\n\t  cd $my_xdir || exit $?\n\t  darwin_archive=$my_xabs\n\t  darwin_curdir=`pwd`\n\t  func_basename \"$darwin_archive\"\n\t  darwin_base_archive=$func_basename_result\n\t  darwin_arches=`$LIPO -info \"$darwin_archive\" 2>/dev/null | $GREP Architectures 2>/dev/null || true`\n\t  if test -n \"$darwin_arches\"; then\n\t    darwin_arches=`$ECHO \"$darwin_arches\" | $SED -e 's/.*are://'`\n\t    darwin_arch=\n\t    func_verbose \"$darwin_base_archive has multiple architectures $darwin_arches\"\n\t    for darwin_arch in  $darwin_arches; do\n\t      func_mkdir_p \"unfat-$$/$darwin_base_archive-$darwin_arch\"\n\t      $LIPO -thin $darwin_arch -output \"unfat-$$/$darwin_base_archive-$darwin_arch/$darwin_base_archive\" \"$darwin_archive\"\n\t      cd \"unfat-$$/$darwin_base_archive-$darwin_arch\"\n\t      func_extract_an_archive \"`pwd`\" \"$darwin_base_archive\"\n\t      cd \"$darwin_curdir\"\n\t      $RM \"unfat-$$/$darwin_base_archive-$darwin_arch/$darwin_base_archive\"\n\t    done # $darwin_arches\n            ## Okay now we've a bunch of thin objects, gotta fatten them up :)\n\t    darwin_filelist=`find unfat-$$ -type f -name \\*.o -print -o -name \\*.lo -print | $SED -e \"$sed_basename\" | sort -u`\n\t    darwin_file=\n\t    darwin_files=\n\t    for darwin_file in $darwin_filelist; do\n\t      darwin_files=`find unfat-$$ -name $darwin_file -print | sort | $NL2SP`\n\t      $LIPO -create -output \"$darwin_file\" $darwin_files\n\t    done # $darwin_filelist\n\t    $RM -rf unfat-$$\n\t    cd \"$darwin_orig_dir\"\n\t  else\n\t    cd $darwin_orig_dir\n\t    func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t  fi # $darwin_arches\n\t} # !$opt_dry_run\n\t;;\n      *)\n        func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t;;\n      esac\n      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | sort | $NL2SP`\n    done\n\n    func_extract_archives_result=$my_oldobjs\n}\n\n\n# func_emit_wrapper [arg=no]\n#\n# Emit a libtool wrapper script on stdout.\n# Don't directly open a file because we may want to\n# incorporate the script contents within a cygwin/mingw\n# wrapper executable.  Must ONLY be called from within\n# func_mode_link because it depends on a number of variables\n# set therein.\n#\n# ARG is the value that the WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\n# variable will take.  If 'yes', then the emitted script\n# will assume that the directory where it is stored is\n# the $objdir directory.  This is a cygwin/mingw-specific\n# behavior.\nfunc_emit_wrapper ()\n{\n\tfunc_emit_wrapper_arg1=${1-no}\n\n\t$ECHO \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='$sed_quote_subst'\n\n# Be Bourne compatible\nif test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variables:\n  generated_by_libtool_version='$macro_version'\n  notinst_deplibs='$notinst_deplibs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$ECHO are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    file=\\\"\\$0\\\"\"\n\n    qECHO=`$ECHO \"$ECHO\" | $SED \"$sed_quote_subst\"`\n    $ECHO \"\\\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$1\n_LTECHO_EOF'\n}\n    ECHO=\\\"$qECHO\\\"\n  fi\n\n# Very basic option parsing. These options are (a) specific to\n# the libtool wrapper, (b) are identical between the wrapper\n# /script/ and the wrapper /executable/ that is used only on\n# windows platforms, and (c) all begin with the string \"--lt-\"\n# (application programs are unlikely to have options that match\n# this pattern).\n#\n# There are only two supported options: --lt-debug and\n# --lt-dump-script. There is, deliberately, no --lt-help.\n#\n# The first argument to this parsing function should be the\n# script's $0 value, followed by \"$@\".\nlt_option_debug=\nfunc_parse_lt_options ()\n{\n  lt_script_arg0=\\$0\n  shift\n  for lt_opt\n  do\n    case \\\"\\$lt_opt\\\" in\n    --lt-debug) lt_option_debug=1 ;;\n    --lt-dump-script)\n        lt_dump_D=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%/[^/]*$%%'\\`\n        test \\\"X\\$lt_dump_D\\\" = \\\"X\\$lt_script_arg0\\\" && lt_dump_D=.\n        lt_dump_F=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%^.*/%%'\\`\n        cat \\\"\\$lt_dump_D/\\$lt_dump_F\\\"\n        exit 0\n      ;;\n    --lt-*)\n        \\$ECHO \\\"Unrecognized --lt- option: '\\$lt_opt'\\\" 1>&2\n        exit 1\n      ;;\n    esac\n  done\n\n  # Print the debug banner immediately:\n  if test -n \\\"\\$lt_option_debug\\\"; then\n    echo \\\"$outputname:$output:\\$LINENO: libtool wrapper (GNU $PACKAGE) $VERSION\\\" 1>&2\n  fi\n}\n\n# Used when --lt-debug. Prints its arguments to stdout\n# (redirection is the responsibility of the caller)\nfunc_lt_dump_args ()\n{\n  lt_dump_args_N=1;\n  for lt_arg\n  do\n    \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[\\$lt_dump_args_N]: \\$lt_arg\\\"\n    lt_dump_args_N=\\`expr \\$lt_dump_args_N + 1\\`\n  done\n}\n\n# Core function for launching the target application\nfunc_exec_program_core ()\n{\n\"\n  case $host in\n  # Backslashes separate directories on plain windows\n  *-*-mingw | *-*-os2* | *-cegcc*)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[0]: \\$progdir\\\\\\\\\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir\\\\\\\\\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n\n  *)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[0]: \\$progdir/\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir/\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n  esac\n  $ECHO \"\\\n      \\$ECHO \\\"\\$0: cannot exec \\$program \\$*\\\" 1>&2\n      exit 1\n}\n\n# A function to encapsulate launching the target application\n# Strips options in the --lt-* namespace from \\$@ and\n# launches target application with the remaining arguments.\nfunc_exec_program ()\n{\n  case \\\" \\$* \\\" in\n  *\\\\ --lt-*)\n    for lt_wr_arg\n    do\n      case \\$lt_wr_arg in\n      --lt-*) ;;\n      *) set x \\\"\\$@\\\" \\\"\\$lt_wr_arg\\\"; shift;;\n      esac\n      shift\n    done ;;\n  esac\n  func_exec_program_core \\${1+\\\"\\$@\\\"}\n}\n\n  # Parse options\n  func_parse_lt_options \\\"\\$0\\\" \\${1+\\\"\\$@\\\"}\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\\\\\/]* | [A-Za-z]:[\\\\\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  done\n\n  # Usually 'no', except on cygwin/mingw when embedded into\n  # the cwrapper.\n  WRAPPER_SCRIPT_BELONGS_IN_OBJDIR=$func_emit_wrapper_arg1\n  if test \\\"\\$WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\\\" = \\\"yes\\\"; then\n    # special case for '.'\n    if test \\\"\\$thisdir\\\" = \\\".\\\"; then\n      thisdir=\\`pwd\\`\n    fi\n    # remove .libs from thisdir\n    case \\\"\\$thisdir\\\" in\n    *[\\\\\\\\/]$objdir ) thisdir=\\`\\$ECHO \\\"\\$thisdir\\\" | $SED 's%[\\\\\\\\/][^\\\\\\\\/]*$%%'\\` ;;\n    $objdir )   thisdir=. ;;\n    esac\n  fi\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test yes = \"$fast_install\"; then\n\t  $ECHO \"\\\n  program=lt-'$outputname'$exeext\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\n  if test ! -f \\\"\\$progdir/\\$program\\\" ||\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | $SED 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $MKDIR \\\"\\$progdir\\\"\n    else\n      $RM \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  $ECHO \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if relink_command_output=\\`eval \\$relink_command 2>&1\\`; then :\n      else\n\t\\$ECHO \\\"\\$relink_command_output\\\" >&2\n\t$RM \\\"\\$progdir/\\$file\\\"\n\texit 1\n      fi\n    fi\n\n    $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $RM \\\"\\$progdir/\\$program\\\";\n      $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $RM \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  $ECHO \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\t$ECHO \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# fixup the dll searchpath if we need to.\n\t#\n\t# Fix the DLL searchpath if we need to.  Do this before prepending\n\t# to shlibpath, because on Windows, both are PATH and uninstalled\n\t# libraries must come first.\n\tif test -n \"$dllsearchpath\"; then\n\t  $ECHO \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t# Export our shlibpath_var if we have one.\n\tif test yes = \"$shlibpath_overrides_runpath\" && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $ECHO \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" | $SED 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t$ECHO \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n      func_exec_program \\${1+\\\"\\$@\\\"}\n    fi\n  else\n    # The program doesn't exist.\n    \\$ECHO \\\"\\$0: error: '\\$progdir/\\$program' does not exist\\\" 1>&2\n    \\$ECHO \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    \\$ECHO \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit 1\n  fi\nfi\\\n\"\n}\n\n\n# func_emit_cwrapperexe_src\n# emit the source code for a wrapper executable on stdout\n# Must ONLY be called from within func_mode_link because\n# it depends on a number of variable set therein.\nfunc_emit_cwrapperexe_src ()\n{\n\tcat <<EOF\n\n/* $cwrappersource - temporary wrapper executable for $objdir/$outputname\n   Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n\n   The $output program cannot be directly executed until all the libtool\n   libraries that it depends on are installed.\n\n   This wrapper executable should never be moved out of the build directory.\n   If it is, it will not operate correctly.\n*/\nEOF\n\t    cat <<\"EOF\"\n#ifdef _MSC_VER\n# define _CRT_SECURE_NO_DEPRECATE 1\n#endif\n#include <stdio.h>\n#include <stdlib.h>\n#ifdef _MSC_VER\n# include <direct.h>\n# include <process.h>\n# include <io.h>\n#else\n# include <unistd.h>\n# include <stdint.h>\n# ifdef __CYGWIN__\n#  include <io.h>\n# endif\n#endif\n#include <malloc.h>\n#include <stdarg.h>\n#include <assert.h>\n#include <string.h>\n#include <ctype.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <sys/stat.h>\n\n#define STREQ(s1, s2) (strcmp ((s1), (s2)) == 0)\n\n/* declarations of non-ANSI functions */\n#if defined __MINGW32__\n# ifdef __STRICT_ANSI__\nint _putenv (const char *);\n# endif\n#elif defined __CYGWIN__\n# ifdef __STRICT_ANSI__\nchar *realpath (const char *, char *);\nint putenv (char *);\nint setenv (const char *, const char *, int);\n# endif\n/* #elif defined other_platform || defined ... */\n#endif\n\n/* portability defines, excluding path handling macros */\n#if defined _MSC_VER\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n# define S_IXUSR _S_IEXEC\n#elif defined __MINGW32__\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n#elif defined __CYGWIN__\n# define HAVE_SETENV\n# define FOPEN_WB \"wb\"\n/* #elif defined other platforms ... */\n#endif\n\n#if defined PATH_MAX\n# define LT_PATHMAX PATH_MAX\n#elif defined MAXPATHLEN\n# define LT_PATHMAX MAXPATHLEN\n#else\n# define LT_PATHMAX 1024\n#endif\n\n#ifndef S_IXOTH\n# define S_IXOTH 0\n#endif\n#ifndef S_IXGRP\n# define S_IXGRP 0\n#endif\n\n/* path handling portability macros */\n#ifndef DIR_SEPARATOR\n# define DIR_SEPARATOR '/'\n# define PATH_SEPARATOR ':'\n#endif\n\n#if defined _WIN32 || defined __MSDOS__ || defined __DJGPP__ || \\\n  defined __OS2__\n# define HAVE_DOS_BASED_FILE_SYSTEM\n# define FOPEN_WB \"wb\"\n# ifndef DIR_SEPARATOR_2\n#  define DIR_SEPARATOR_2 '\\\\'\n# endif\n# ifndef PATH_SEPARATOR_2\n#  define PATH_SEPARATOR_2 ';'\n# endif\n#endif\n\n#ifndef DIR_SEPARATOR_2\n# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n#else /* DIR_SEPARATOR_2 */\n# define IS_DIR_SEPARATOR(ch) \\\n\t(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n#endif /* DIR_SEPARATOR_2 */\n\n#ifndef PATH_SEPARATOR_2\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)\n#else /* PATH_SEPARATOR_2 */\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)\n#endif /* PATH_SEPARATOR_2 */\n\n#ifndef FOPEN_WB\n# define FOPEN_WB \"w\"\n#endif\n#ifndef _O_BINARY\n# define _O_BINARY 0\n#endif\n\n#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))\n#define XFREE(stale) do { \\\n  if (stale) { free (stale); stale = 0; } \\\n} while (0)\n\n#if defined LT_DEBUGWRAPPER\nstatic int lt_debug = 1;\n#else\nstatic int lt_debug = 0;\n#endif\n\nconst char *program_name = \"libtool-wrapper\"; /* in case xstrdup fails */\n\nvoid *xmalloc (size_t num);\nchar *xstrdup (const char *string);\nconst char *base_name (const char *name);\nchar *find_executable (const char *wrapper);\nchar *chase_symlinks (const char *pathspec);\nint make_executable (const char *path);\nint check_executable (const char *path);\nchar *strendzap (char *str, const char *pat);\nvoid lt_debugprintf (const char *file, int line, const char *fmt, ...);\nvoid lt_fatal (const char *file, int line, const char *message, ...);\nstatic const char *nonnull (const char *s);\nstatic const char *nonempty (const char *s);\nvoid lt_setenv (const char *name, const char *value);\nchar *lt_extend_str (const char *orig_value, const char *add, int to_end);\nvoid lt_update_exe_path (const char *name, const char *value);\nvoid lt_update_lib_path (const char *name, const char *value);\nchar **prepare_spawn (char **argv);\nvoid lt_dump_script (FILE *f);\nEOF\n\n\t    cat <<EOF\n#if __GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 5)\n# define externally_visible volatile\n#else\n# define externally_visible __attribute__((externally_visible)) volatile\n#endif\nexternally_visible const char * MAGIC_EXE = \"$magic_exe\";\nconst char * LIB_PATH_VARNAME = \"$shlibpath_var\";\nEOF\n\n\t    if test yes = \"$shlibpath_overrides_runpath\" && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n              func_to_host_path \"$temp_rpath\"\n\t      cat <<EOF\nconst char * LIB_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * LIB_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test -n \"$dllsearchpath\"; then\n              func_to_host_path \"$dllsearchpath:\"\n\t      cat <<EOF\nconst char * EXE_PATH_VARNAME = \"PATH\";\nconst char * EXE_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * EXE_PATH_VARNAME = \"\";\nconst char * EXE_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test yes = \"$fast_install\"; then\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"lt-$outputname\"; /* hopefully, no .exe */\nEOF\n\t    else\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"$outputname\"; /* hopefully, no .exe */\nEOF\n\t    fi\n\n\n\t    cat <<\"EOF\"\n\n#define LTWRAPPER_OPTION_PREFIX         \"--lt-\"\n\nstatic const char *ltwrapper_option_prefix = LTWRAPPER_OPTION_PREFIX;\nstatic const char *dumpscript_opt       = LTWRAPPER_OPTION_PREFIX \"dump-script\";\nstatic const char *debug_opt            = LTWRAPPER_OPTION_PREFIX \"debug\";\n\nint\nmain (int argc, char *argv[])\n{\n  char **newargz;\n  int  newargc;\n  char *tmp_pathspec;\n  char *actual_cwrapper_path;\n  char *actual_cwrapper_name;\n  char *target_name;\n  char *lt_argv_zero;\n  int rval = 127;\n\n  int i;\n\n  program_name = (char *) xstrdup (base_name (argv[0]));\n  newargz = XMALLOC (char *, (size_t) argc + 1);\n\n  /* very simple arg parsing; don't want to rely on getopt\n   * also, copy all non cwrapper options to newargz, except\n   * argz[0], which is handled differently\n   */\n  newargc=0;\n  for (i = 1; i < argc; i++)\n    {\n      if (STREQ (argv[i], dumpscript_opt))\n\t{\nEOF\n\t    case $host in\n\t      *mingw* | *cygwin* )\n\t\t# make stdout use \"unix\" line endings\n\t\techo \"          setmode(1,_O_BINARY);\"\n\t\t;;\n\t      esac\n\n\t    cat <<\"EOF\"\n\t  lt_dump_script (stdout);\n\t  return 0;\n\t}\n      if (STREQ (argv[i], debug_opt))\n\t{\n          lt_debug = 1;\n          continue;\n\t}\n      if (STREQ (argv[i], ltwrapper_option_prefix))\n        {\n          /* however, if there is an option in the LTWRAPPER_OPTION_PREFIX\n             namespace, but it is not one of the ones we know about and\n             have already dealt with, above (inluding dump-script), then\n             report an error. Otherwise, targets might begin to believe\n             they are allowed to use options in the LTWRAPPER_OPTION_PREFIX\n             namespace. The first time any user complains about this, we'll\n             need to make LTWRAPPER_OPTION_PREFIX a configure-time option\n             or a configure.ac-settable value.\n           */\n          lt_fatal (__FILE__, __LINE__,\n\t\t    \"unrecognized %s option: '%s'\",\n                    ltwrapper_option_prefix, argv[i]);\n        }\n      /* otherwise ... */\n      newargz[++newargc] = xstrdup (argv[i]);\n    }\n  newargz[++newargc] = NULL;\n\nEOF\n\t    cat <<EOF\n  /* The GNU banner must be the first non-error debug message */\n  lt_debugprintf (__FILE__, __LINE__, \"libtool wrapper (GNU $PACKAGE) $VERSION\\n\");\nEOF\n\t    cat <<\"EOF\"\n  lt_debugprintf (__FILE__, __LINE__, \"(main) argv[0]: %s\\n\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__, \"(main) program_name: %s\\n\", program_name);\n\n  tmp_pathspec = find_executable (argv[0]);\n  if (tmp_pathspec == NULL)\n    lt_fatal (__FILE__, __LINE__, \"couldn't find %s\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (before symlink chase) at: %s\\n\",\n\t\t  tmp_pathspec);\n\n  actual_cwrapper_path = chase_symlinks (tmp_pathspec);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (after symlink chase) at: %s\\n\",\n\t\t  actual_cwrapper_path);\n  XFREE (tmp_pathspec);\n\n  actual_cwrapper_name = xstrdup (base_name (actual_cwrapper_path));\n  strendzap (actual_cwrapper_path, actual_cwrapper_name);\n\n  /* wrapper name transforms */\n  strendzap (actual_cwrapper_name, \".exe\");\n  tmp_pathspec = lt_extend_str (actual_cwrapper_name, \".exe\", 1);\n  XFREE (actual_cwrapper_name);\n  actual_cwrapper_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  /* target_name transforms -- use actual target program name; might have lt- prefix */\n  target_name = xstrdup (base_name (TARGET_PROGRAM_NAME));\n  strendzap (target_name, \".exe\");\n  tmp_pathspec = lt_extend_str (target_name, \".exe\", 1);\n  XFREE (target_name);\n  target_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(main) libtool target name: %s\\n\",\n\t\t  target_name);\nEOF\n\n\t    cat <<EOF\n  newargz[0] =\n    XMALLOC (char, (strlen (actual_cwrapper_path) +\n\t\t    strlen (\"$objdir\") + 1 + strlen (actual_cwrapper_name) + 1));\n  strcpy (newargz[0], actual_cwrapper_path);\n  strcat (newargz[0], \"$objdir\");\n  strcat (newargz[0], \"/\");\nEOF\n\n\t    cat <<\"EOF\"\n  /* stop here, and copy so we don't have to do this twice */\n  tmp_pathspec = xstrdup (newargz[0]);\n\n  /* do NOT want the lt- prefix here, so use actual_cwrapper_name */\n  strcat (newargz[0], actual_cwrapper_name);\n\n  /* DO want the lt- prefix here if it exists, so use target_name */\n  lt_argv_zero = lt_extend_str (tmp_pathspec, target_name, 1);\n  XFREE (tmp_pathspec);\n  tmp_pathspec = NULL;\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t    cat <<\"EOF\"\n  {\n    char* p;\n    while ((p = strchr (newargz[0], '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n    while ((p = strchr (lt_argv_zero, '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n  }\nEOF\n\t    ;;\n\t    esac\n\n\t    cat <<\"EOF\"\n  XFREE (target_name);\n  XFREE (actual_cwrapper_path);\n  XFREE (actual_cwrapper_name);\n\n  lt_setenv (\"BIN_SH\", \"xpg4\"); /* for Tru64 */\n  lt_setenv (\"DUALCASE\", \"1\");  /* for MSK sh */\n  /* Update the DLL searchpath.  EXE_PATH_VALUE ($dllsearchpath) must\n     be prepended before (that is, appear after) LIB_PATH_VALUE ($temp_rpath)\n     because on Windows, both *_VARNAMEs are PATH but uninstalled\n     libraries must come first. */\n  lt_update_exe_path (EXE_PATH_VARNAME, EXE_PATH_VALUE);\n  lt_update_lib_path (LIB_PATH_VARNAME, LIB_PATH_VALUE);\n\n  lt_debugprintf (__FILE__, __LINE__, \"(main) lt_argv_zero: %s\\n\",\n\t\t  nonnull (lt_argv_zero));\n  for (i = 0; i < newargc; i++)\n    {\n      lt_debugprintf (__FILE__, __LINE__, \"(main) newargz[%d]: %s\\n\",\n\t\t      i, nonnull (newargz[i]));\n    }\n\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n  /* execv doesn't actually work on mingw as expected on unix */\n  newargz = prepare_spawn (newargz);\n  rval = (int) _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);\n  if (rval == -1)\n    {\n      /* failed to start process */\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"(main) failed to launch target \\\"%s\\\": %s\\n\",\n\t\t      lt_argv_zero, nonnull (strerror (errno)));\n      return 127;\n    }\n  return rval;\nEOF\n\t\t;;\n\t      *)\n\t\tcat <<\"EOF\"\n  execv (lt_argv_zero, newargz);\n  return rval; /* =127, but avoids unused variable warning */\nEOF\n\t\t;;\n\t    esac\n\n\t    cat <<\"EOF\"\n}\n\nvoid *\nxmalloc (size_t num)\n{\n  void *p = (void *) malloc (num);\n  if (!p)\n    lt_fatal (__FILE__, __LINE__, \"memory exhausted\");\n\n  return p;\n}\n\nchar *\nxstrdup (const char *string)\n{\n  return string ? strcpy ((char *) xmalloc (strlen (string) + 1),\n\t\t\t  string) : NULL;\n}\n\nconst char *\nbase_name (const char *name)\n{\n  const char *base;\n\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n  /* Skip over the disk name in MSDOS pathnames. */\n  if (isalpha ((unsigned char) name[0]) && name[1] == ':')\n    name += 2;\n#endif\n\n  for (base = name; *name; name++)\n    if (IS_DIR_SEPARATOR (*name))\n      base = name + 1;\n  return base;\n}\n\nint\ncheck_executable (const char *path)\n{\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(check_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if ((stat (path, &st) >= 0)\n      && (st.st_mode & (S_IXUSR | S_IXGRP | S_IXOTH)))\n    return 1;\n  else\n    return 0;\n}\n\nint\nmake_executable (const char *path)\n{\n  int rval = 0;\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(make_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if (stat (path, &st) >= 0)\n    {\n      rval = chmod (path, st.st_mode | S_IXOTH | S_IXGRP | S_IXUSR);\n    }\n  return rval;\n}\n\n/* Searches for the full path of the wrapper.  Returns\n   newly allocated full path name if found, NULL otherwise\n   Does not chase symlinks, even on platforms that support them.\n*/\nchar *\nfind_executable (const char *wrapper)\n{\n  int has_slash = 0;\n  const char *p;\n  const char *p_next;\n  /* static buffer for getcwd */\n  char tmp[LT_PATHMAX + 1];\n  size_t tmp_len;\n  char *concat_name;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(find_executable): %s\\n\",\n                  nonempty (wrapper));\n\n  if ((wrapper == NULL) || (*wrapper == '\\0'))\n    return NULL;\n\n  /* Absolute path? */\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n  if (isalpha ((unsigned char) wrapper[0]) && wrapper[1] == ':')\n    {\n      concat_name = xstrdup (wrapper);\n      if (check_executable (concat_name))\n\treturn concat_name;\n      XFREE (concat_name);\n    }\n  else\n    {\n#endif\n      if (IS_DIR_SEPARATOR (wrapper[0]))\n\t{\n\t  concat_name = xstrdup (wrapper);\n\t  if (check_executable (concat_name))\n\t    return concat_name;\n\t  XFREE (concat_name);\n\t}\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n    }\n#endif\n\n  for (p = wrapper; *p; p++)\n    if (*p == '/')\n      {\n\thas_slash = 1;\n\tbreak;\n      }\n  if (!has_slash)\n    {\n      /* no slashes; search PATH */\n      const char *path = getenv (\"PATH\");\n      if (path != NULL)\n\t{\n\t  for (p = path; *p; p = p_next)\n\t    {\n\t      const char *q;\n\t      size_t p_len;\n\t      for (q = p; *q; q++)\n\t\tif (IS_PATH_SEPARATOR (*q))\n\t\t  break;\n\t      p_len = (size_t) (q - p);\n\t      p_next = (*q == '\\0' ? q : q + 1);\n\t      if (p_len == 0)\n\t\t{\n\t\t  /* empty path: current directory */\n\t\t  if (getcwd (tmp, LT_PATHMAX) == NULL)\n\t\t    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n                              nonnull (strerror (errno)));\n\t\t  tmp_len = strlen (tmp);\n\t\t  concat_name =\n\t\t    XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, tmp, tmp_len);\n\t\t  concat_name[tmp_len] = '/';\n\t\t  strcpy (concat_name + tmp_len + 1, wrapper);\n\t\t}\n\t      else\n\t\t{\n\t\t  concat_name =\n\t\t    XMALLOC (char, p_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, p, p_len);\n\t\t  concat_name[p_len] = '/';\n\t\t  strcpy (concat_name + p_len + 1, wrapper);\n\t\t}\n\t      if (check_executable (concat_name))\n\t\treturn concat_name;\n\t      XFREE (concat_name);\n\t    }\n\t}\n      /* not found in PATH; assume curdir */\n    }\n  /* Relative path | not found in path: prepend cwd */\n  if (getcwd (tmp, LT_PATHMAX) == NULL)\n    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n              nonnull (strerror (errno)));\n  tmp_len = strlen (tmp);\n  concat_name = XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n  memcpy (concat_name, tmp, tmp_len);\n  concat_name[tmp_len] = '/';\n  strcpy (concat_name + tmp_len + 1, wrapper);\n\n  if (check_executable (concat_name))\n    return concat_name;\n  XFREE (concat_name);\n  return NULL;\n}\n\nchar *\nchase_symlinks (const char *pathspec)\n{\n#ifndef S_ISLNK\n  return xstrdup (pathspec);\n#else\n  char buf[LT_PATHMAX];\n  struct stat s;\n  char *tmp_pathspec = xstrdup (pathspec);\n  char *p;\n  int has_symlinks = 0;\n  while (strlen (tmp_pathspec) && !has_symlinks)\n    {\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"checking path component for symlinks: %s\\n\",\n\t\t      tmp_pathspec);\n      if (lstat (tmp_pathspec, &s) == 0)\n\t{\n\t  if (S_ISLNK (s.st_mode) != 0)\n\t    {\n\t      has_symlinks = 1;\n\t      break;\n\t    }\n\n\t  /* search backwards for last DIR_SEPARATOR */\n\t  p = tmp_pathspec + strlen (tmp_pathspec) - 1;\n\t  while ((p > tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    p--;\n\t  if ((p == tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    {\n\t      /* no more DIR_SEPARATORS left */\n\t      break;\n\t    }\n\t  *p = '\\0';\n\t}\n      else\n\t{\n\t  lt_fatal (__FILE__, __LINE__,\n\t\t    \"error accessing file \\\"%s\\\": %s\",\n\t\t    tmp_pathspec, nonnull (strerror (errno)));\n\t}\n    }\n  XFREE (tmp_pathspec);\n\n  if (!has_symlinks)\n    {\n      return xstrdup (pathspec);\n    }\n\n  tmp_pathspec = realpath (pathspec, buf);\n  if (tmp_pathspec == 0)\n    {\n      lt_fatal (__FILE__, __LINE__,\n\t\t\"could not follow symlinks for %s\", pathspec);\n    }\n  return xstrdup (tmp_pathspec);\n#endif\n}\n\nchar *\nstrendzap (char *str, const char *pat)\n{\n  size_t len, patlen;\n\n  assert (str != NULL);\n  assert (pat != NULL);\n\n  len = strlen (str);\n  patlen = strlen (pat);\n\n  if (patlen <= len)\n    {\n      str += len - patlen;\n      if (STREQ (str, pat))\n\t*str = '\\0';\n    }\n  return str;\n}\n\nvoid\nlt_debugprintf (const char *file, int line, const char *fmt, ...)\n{\n  va_list args;\n  if (lt_debug)\n    {\n      (void) fprintf (stderr, \"%s:%s:%d: \", program_name, file, line);\n      va_start (args, fmt);\n      (void) vfprintf (stderr, fmt, args);\n      va_end (args);\n    }\n}\n\nstatic void\nlt_error_core (int exit_status, const char *file,\n\t       int line, const char *mode,\n\t       const char *message, va_list ap)\n{\n  fprintf (stderr, \"%s:%s:%d: %s: \", program_name, file, line, mode);\n  vfprintf (stderr, message, ap);\n  fprintf (stderr, \".\\n\");\n\n  if (exit_status >= 0)\n    exit (exit_status);\n}\n\nvoid\nlt_fatal (const char *file, int line, const char *message, ...)\n{\n  va_list ap;\n  va_start (ap, message);\n  lt_error_core (EXIT_FAILURE, file, line, \"FATAL\", message, ap);\n  va_end (ap);\n}\n\nstatic const char *\nnonnull (const char *s)\n{\n  return s ? s : \"(null)\";\n}\n\nstatic const char *\nnonempty (const char *s)\n{\n  return (s && !*s) ? \"(empty)\" : nonnull (s);\n}\n\nvoid\nlt_setenv (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_setenv) setting '%s' to '%s'\\n\",\n                  nonnull (name), nonnull (value));\n  {\n#ifdef HAVE_SETENV\n    /* always make a copy, for consistency with !HAVE_SETENV */\n    char *str = xstrdup (value);\n    setenv (name, str, 1);\n#else\n    size_t len = strlen (name) + 1 + strlen (value) + 1;\n    char *str = XMALLOC (char, len);\n    sprintf (str, \"%s=%s\", name, value);\n    if (putenv (str) != EXIT_SUCCESS)\n      {\n        XFREE (str);\n      }\n#endif\n  }\n}\n\nchar *\nlt_extend_str (const char *orig_value, const char *add, int to_end)\n{\n  char *new_value;\n  if (orig_value && *orig_value)\n    {\n      size_t orig_value_len = strlen (orig_value);\n      size_t add_len = strlen (add);\n      new_value = XMALLOC (char, add_len + orig_value_len + 1);\n      if (to_end)\n        {\n          strcpy (new_value, orig_value);\n          strcpy (new_value + orig_value_len, add);\n        }\n      else\n        {\n          strcpy (new_value, add);\n          strcpy (new_value + add_len, orig_value);\n        }\n    }\n  else\n    {\n      new_value = xstrdup (add);\n    }\n  return new_value;\n}\n\nvoid\nlt_update_exe_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_exe_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      /* some systems can't cope with a ':'-terminated path #' */\n      size_t len = strlen (new_value);\n      while ((len > 0) && IS_PATH_SEPARATOR (new_value[len-1]))\n        {\n          new_value[--len] = '\\0';\n        }\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nvoid\nlt_update_lib_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_lib_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nEOF\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n\n/* Prepares an argument vector before calling spawn().\n   Note that spawn() does not by itself call the command interpreter\n     (getenv (\"COMSPEC\") != NULL ? getenv (\"COMSPEC\") :\n      ({ OSVERSIONINFO v; v.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);\n         GetVersionEx(&v);\n         v.dwPlatformId == VER_PLATFORM_WIN32_NT;\n      }) ? \"cmd.exe\" : \"command.com\").\n   Instead it simply concatenates the arguments, separated by ' ', and calls\n   CreateProcess().  We must quote the arguments since Win32 CreateProcess()\n   interprets characters like ' ', '\\t', '\\\\', '\"' (but not '<' and '>') in a\n   special way:\n   - Space and tab are interpreted as delimiters. They are not treated as\n     delimiters if they are surrounded by double quotes: \"...\".\n   - Unescaped double quotes are removed from the input. Their only effect is\n     that within double quotes, space and tab are treated like normal\n     characters.\n   - Backslashes not followed by double quotes are not special.\n   - But 2*n+1 backslashes followed by a double quote become\n     n backslashes followed by a double quote (n >= 0):\n       \\\" -> \"\n       \\\\\\\" -> \\\"\n       \\\\\\\\\\\" -> \\\\\"\n */\n#define SHELL_SPECIAL_CHARS \"\\\"\\\\ \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\n#define SHELL_SPACE_CHARS \" \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\nchar **\nprepare_spawn (char **argv)\n{\n  size_t argc;\n  char **new_argv;\n  size_t i;\n\n  /* Count number of arguments.  */\n  for (argc = 0; argv[argc] != NULL; argc++)\n    ;\n\n  /* Allocate new argument vector.  */\n  new_argv = XMALLOC (char *, argc + 1);\n\n  /* Put quoted arguments into the new argument vector.  */\n  for (i = 0; i < argc; i++)\n    {\n      const char *string = argv[i];\n\n      if (string[0] == '\\0')\n\tnew_argv[i] = xstrdup (\"\\\"\\\"\");\n      else if (strpbrk (string, SHELL_SPECIAL_CHARS) != NULL)\n\t{\n\t  int quote_around = (strpbrk (string, SHELL_SPACE_CHARS) != NULL);\n\t  size_t length;\n\t  unsigned int backslashes;\n\t  const char *s;\n\t  char *quoted_string;\n\t  char *p;\n\n\t  length = 0;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    length++;\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\tlength += backslashes + 1;\n\t      length++;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    length += backslashes + 1;\n\n\t  quoted_string = XMALLOC (char, length + 1);\n\n\t  p = quoted_string;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    *p++ = '\"';\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\t{\n\t\t  unsigned int j;\n\t\t  for (j = backslashes + 1; j > 0; j--)\n\t\t    *p++ = '\\\\';\n\t\t}\n\t      *p++ = c;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    {\n\t      unsigned int j;\n\t      for (j = backslashes; j > 0; j--)\n\t\t*p++ = '\\\\';\n\t      *p++ = '\"';\n\t    }\n\t  *p = '\\0';\n\n\t  new_argv[i] = quoted_string;\n\t}\n      else\n\tnew_argv[i] = (char *) string;\n    }\n  new_argv[argc] = NULL;\n\n  return new_argv;\n}\nEOF\n\t\t;;\n\t    esac\n\n            cat <<\"EOF\"\nvoid lt_dump_script (FILE* f)\n{\nEOF\n\t    func_emit_wrapper yes |\n\t      $SED -n -e '\ns/^\\(.\\{79\\}\\)\\(..*\\)/\\1\\\n\\2/\nh\ns/\\([\\\\\"]\\)/\\\\\\1/g\ns/$/\\\\n/\ns/\\([^\\n]*\\).*/  fputs (\"\\1\", f);/p\ng\nD'\n            cat <<\"EOF\"\n}\nEOF\n}\n# end: func_emit_cwrapperexe_src\n\n# func_win32_import_lib_p ARG\n# True if ARG is an import lib, as indicated by $file_magic_cmd\nfunc_win32_import_lib_p ()\n{\n    $debug_cmd\n\n    case `eval $file_magic_cmd \\\"\\$1\\\" 2>/dev/null | $SED -e 10q` in\n    *import*) : ;;\n    *) false ;;\n    esac\n}\n\n# func_suncc_cstd_abi\n# !!ONLY CALL THIS FOR SUN CC AFTER $compile_command IS FULLY EXPANDED!!\n# Several compiler flags select an ABI that is incompatible with the\n# Cstd library. Avoid specifying it if any are in CXXFLAGS.\nfunc_suncc_cstd_abi ()\n{\n    $debug_cmd\n\n    case \" $compile_command \" in\n    *\" -compat=g \"*|*\\ -std=c++[0-9][0-9]\\ *|*\" -library=stdcxx4 \"*|*\" -library=stlport4 \"*)\n      suncc_use_cstd_abi=no\n      ;;\n    *)\n      suncc_use_cstd_abi=yes\n      ;;\n    esac\n}\n\n# func_mode_link arg...\nfunc_mode_link ()\n{\n    $debug_cmd\n\n    case $host in\n    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # what system we are compiling for in order to pass an extra\n      # flag for every libtool invocation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll that has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    libtool_args=$nonopt\n    base_compile=\"$nonopt $@\"\n    compile_command=$nonopt\n    finalize_command=$nonopt\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    old_deplibs=\n    compiler_flags=\n    linker_flags=\n    dllsearchpath=\n    lib_search_path=`pwd`\n    inst_prefix_dir=\n    new_inherited_linker_flags=\n\n    avoid_version=no\n    bindir=\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    ltlibs=\n    module=no\n    no_install=no\n    objs=\n    os2dllname=\n    non_pic_objects=\n    precious_files_regex=\n    prefer_static_libs=no\n    preload=false\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n    vinfo_number=no\n    weak_libs=\n    single_module=$wl-single_module\n    func_infer_tag $base_compile\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case $arg in\n      -shared)\n\ttest yes != \"$build_libtool_libs\" \\\n\t  && func_fatal_configuration \"cannot build a shared library\"\n\tbuild_old_libs=no\n\tbreak\n\t;;\n      -all-static | -static | -static-libtool-libs)\n\tcase $arg in\n\t-all-static)\n\t  if test yes = \"$build_libtool_libs\" && test -z \"$link_static_flag\"; then\n\t    func_warning \"complete static linking is impossible in this configuration\"\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\t-static)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=built\n\t  ;;\n\t-static-libtool-libs)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\tesac\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test \"$#\" -gt 0; do\n      arg=$1\n      shift\n      func_quote_for_eval \"$arg\"\n      qarg=$func_quote_for_eval_unquoted_result\n      func_append libtool_args \" $func_quote_for_eval_result\"\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase $prev in\n\toutput)\n\t  func_append compile_command \" @OUTPUT@\"\n\t  func_append finalize_command \" @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase $prev in\n\tbindir)\n\t  bindir=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tdlfiles|dlprefiles)\n\t  $preload || {\n\t    # Add the symbol object into the linking commands.\n\t    func_append compile_command \" @SYMFILE@\"\n\t    func_append finalize_command \" @SYMFILE@\"\n\t    preload=:\n\t  }\n\t  case $arg in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test no = \"$dlself\"; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test dlprefiles = \"$prev\"; then\n\t      dlself=yes\n\t    elif test dlfiles = \"$prev\" && test yes != \"$dlopen_self\"; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test dlfiles = \"$prev\"; then\n\t      func_append dlfiles \" $arg\"\n\t    else\n\t      func_append dlprefiles \" $arg\"\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=$arg\n\t  test -f \"$arg\" \\\n\t    || func_fatal_error \"symbol file '$arg' does not exist\"\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tframework)\n\t  case $host in\n\t    *-*-darwin*)\n\t      case \"$deplibs \" in\n\t\t*\" $qarg.ltframework \"*) ;;\n\t\t*) func_append deplibs \" $qarg.ltframework\" # this is fixed later\n\t\t   ;;\n\t      esac\n\t      ;;\n\t  esac\n\t  prev=\n\t  continue\n\t  ;;\n\tinst_prefix)\n\t  inst_prefix_dir=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tmllvm)\n\t  # Clang does not use LLVM to link, so we can simply discard any\n\t  # '-mllvm $arg' options when doing the link step.\n\t  prev=\n\t  continue\n\t  ;;\n\tobjectlist)\n\t  if test -f \"$arg\"; then\n\t    save_arg=$arg\n\t    moreargs=\n\t    for fil in `cat \"$save_arg\"`\n\t    do\n#\t      func_append moreargs \" $fil\"\n\t      arg=$fil\n\t      # A libtool-controlled object.\n\n\t      # Check to see that this really is a libtool object.\n\t      if func_lalib_unsafe_p \"$arg\"; then\n\t\tpic_object=\n\t\tnon_pic_object=\n\n\t\t# Read the .lo file\n\t\tfunc_source \"$arg\"\n\n\t\tif test -z \"$pic_object\" ||\n\t\t   test -z \"$non_pic_object\" ||\n\t\t   test none = \"$pic_object\" &&\n\t\t   test none = \"$non_pic_object\"; then\n\t\t  func_fatal_error \"cannot find name of object for '$arg'\"\n\t\tfi\n\n\t\t# Extract subdirectory from the argument.\n\t\tfunc_dirname \"$arg\" \"/\" \"\"\n\t\txdir=$func_dirname_result\n\n\t\tif test none != \"$pic_object\"; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  pic_object=$xdir$pic_object\n\n\t\t  if test dlfiles = \"$prev\"; then\n\t\t    if test yes = \"$build_libtool_libs\" && test yes = \"$dlopen_support\"; then\n\t\t      func_append dlfiles \" $pic_object\"\n\t\t      prev=\n\t\t      continue\n\t\t    else\n\t\t      # If libtool objects are unsupported, then we need to preload.\n\t\t      prev=dlprefiles\n\t\t    fi\n\t\t  fi\n\n\t\t  # CHECK ME:  I think I busted this.  -Ossama\n\t\t  if test dlprefiles = \"$prev\"; then\n\t\t    # Preload the old-style object.\n\t\t    func_append dlprefiles \" $pic_object\"\n\t\t    prev=\n\t\t  fi\n\n\t\t  # A PIC object.\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  arg=$pic_object\n\t\tfi\n\n\t\t# Non-PIC object.\n\t\tif test none != \"$non_pic_object\"; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  non_pic_object=$xdir$non_pic_object\n\n\t\t  # A standard non-PIC object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\t  if test -z \"$pic_object\" || test none = \"$pic_object\"; then\n\t\t    arg=$non_pic_object\n\t\t  fi\n\t\telse\n\t\t  # If the PIC object exists, use it instead.\n\t\t  # $xdir was prepended to $pic_object above.\n\t\t  non_pic_object=$pic_object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\tfi\n\t      else\n\t\t# Only an error if not doing a dry-run.\n\t\tif $opt_dry_run; then\n\t\t  # Extract subdirectory from the argument.\n\t\t  func_dirname \"$arg\" \"/\" \"\"\n\t\t  xdir=$func_dirname_result\n\n\t\t  func_lo2o \"$arg\"\n\t\t  pic_object=$xdir$objdir/$func_lo2o_result\n\t\t  non_pic_object=$xdir$func_lo2o_result\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t        else\n\t\t  func_fatal_error \"'$arg' is not a valid libtool object\"\n\t\tfi\n\t      fi\n\t    done\n\t  else\n\t    func_fatal_error \"link input file '$arg' does not exist\"\n\t  fi\n\t  arg=$save_arg\n\t  prev=\n\t  continue\n\t  ;;\n\tos2dllname)\n\t  os2dllname=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tprecious_regex)\n\t  precious_files_regex=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=-$arg\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case $arg in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    func_fatal_error \"only absolute run-paths are allowed\"\n\t    ;;\n\t  esac\n\t  if test rpath = \"$prev\"; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append rpath \" $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append xrpath \" $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\tshrext)\n\t  shrext_cmds=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tweak)\n\t  func_append weak_libs \" $arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\txcclinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txcompiler)\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txlinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $wl$qarg\"\n\t  prev=\n\t  func_append compile_command \" $wl$qarg\"\n\t  func_append finalize_command \" $wl$qarg\"\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi # test -n \"$prev\"\n\n      prevarg=$arg\n\n      case $arg in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  # See comment for -static flag below, for more details.\n\t  func_append compile_command \" $link_static_flag\"\n\t  func_append finalize_command \" $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\tfunc_fatal_error \"'-allow-undefined' must not be used because it is the default\"\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -bindir)\n\tprev=bindir\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  func_fatal_error \"more than one -exported-symbols argument is not allowed\"\n\tfi\n\tif test X-export-symbols = \"X$arg\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -framework)\n\tprev=framework\n\tcontinue\n\t;;\n\n      -inst-prefix-dir)\n\tprev=inst_prefix\n\tcontinue\n\t;;\n\n      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*\n      # so, if we see these flags be careful not to treat them like -L\n      -L[A-Z][A-Z]*:*)\n\tcase $with_gcc/$host in\n\tno/*-*-irix* | /*-*-irix*)\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -L*)\n\tfunc_stripname \"-L\" '' \"$arg\"\n\tif test -z \"$func_stripname_result\"; then\n\t  if test \"$#\" -gt 0; then\n\t    func_fatal_error \"require no space between '-L' and '$1'\"\n\t  else\n\t    func_fatal_error \"need path for '-L' option\"\n\t  fi\n\tfi\n\tfunc_resolve_sysroot \"$func_stripname_result\"\n\tdir=$func_resolve_sysroot_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  test -z \"$absdir\" && \\\n\t    func_fatal_error \"cannot determine absolute directory name of '$dir'\"\n\t  dir=$absdir\n\t  ;;\n\tesac\n\tcase \"$deplibs \" in\n\t*\" -L$dir \"* | *\" $arg \"*)\n\t  # Will only happen for absolute or sysroot arguments\n\t  ;;\n\t*)\n\t  # Preserve sysroot, but never include relative directories\n\t  case $dir in\n\t    [\\\\/]* | [A-Za-z]:[\\\\/]* | =*) func_append deplibs \" $arg\" ;;\n\t    *) func_append deplibs \" -L$dir\" ;;\n\t  esac\n\t  func_append lib_search_path \" $dir\"\n\t  ;;\n\tesac\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$dir\" | $SED 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$dir:\"*) ;;\n\t  ::) dllsearchpath=$dir;;\n\t  *) func_append dllsearchpath \":$dir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -l*)\n\tif test X-lc = \"X$arg\" || test X-lm = \"X$arg\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # These systems don't actually have a C or math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-os2*)\n\t    # These systems don't actually have a C library (as such)\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly* | *-*-bitrig*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C and math libraries are in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    continue\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  esac\n\telif test X-lc_r = \"X$arg\"; then\n\t case $host in\n\t *-*-openbsd* | *-*-freebsd* | *-*-dragonfly* | *-*-bitrig*)\n\t   # Do not include libc_r directly, use -pthread flag.\n\t   continue\n\t   ;;\n\t esac\n\tfi\n\tfunc_append deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      -mllvm)\n\tprev=mllvm\n\tcontinue\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      # Tru64 UNIX uses -model [arg] to determine the layout of C++\n      # classes, name mangling, and exception handling.\n      # Darwin uses the -arch flag to determine output architecture.\n      -model|-arch|-isysroot|--sysroot)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n      |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tcase \"$new_inherited_linker_flags \" in\n\t    *\" $arg \"*) ;;\n\t    * ) func_append new_inherited_linker_flags \" $arg\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -multi_module)\n\tsingle_module=$wl-multi_module\n\tcontinue\n\t;;\n\n      -no-fast-install)\n\tfast_install=no\n\tcontinue\n\t;;\n\n      -no-install)\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-darwin* | *-cegcc*)\n\t  # The PATH hackery in wrapper scripts is required on Windows\n\t  # and Darwin in order for the loader to find any dlls it needs.\n\t  func_warning \"'-no-install' is ignored for $host\"\n\t  func_warning \"assuming '-no-fast-install' instead\"\n\t  fast_install=no\n\t  ;;\n\t*) no_install=yes ;;\n\tesac\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -objectlist)\n\tprev=objectlist\n\tcontinue\n\t;;\n\n      -os2dllname)\n\tprev=os2dllname\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -precious-files-regex)\n\tprev=precious_regex\n\tcontinue\n\t;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tfunc_stripname '-R' '' \"$arg\"\n\tdir=$func_stripname_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t=*)\n\t  func_stripname '=' '' \"$dir\"\n\t  dir=$lt_sysroot$func_stripname_result\n\t  ;;\n\t*)\n\t  func_fatal_error \"only absolute run-paths are allowed\"\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) func_append xrpath \" $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -shared)\n\t# The effects of -shared are defined in a previous loop.\n\tcontinue\n\t;;\n\n      -shrext)\n\tprev=shrext\n\tcontinue\n\t;;\n\n      -static | -static-libtool-libs)\n\t# The effects of -static are defined in a previous loop.\n\t# We used to do the same as -all-static on platforms that\n\t# didn't have a PIC flag, but the assumption that the effects\n\t# would be equivalent was wrong.  It would break on at least\n\t# Digital Unix and AIX.\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n\n      -version-number)\n\tprev=vinfo\n\tvinfo_number=yes\n\tcontinue\n\t;;\n\n      -weak)\n        prev=weak\n\tcontinue\n\t;;\n\n      -Wc,*)\n\tfunc_stripname '-Wc,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=$IFS; IFS=,\n\tfor flag in $args; do\n\t  IFS=$save_ifs\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=$save_ifs\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Wl,*)\n\tfunc_stripname '-Wl,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=$IFS; IFS=,\n\tfor flag in $args; do\n\t  IFS=$save_ifs\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $wl$func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $wl$func_quote_for_eval_result\"\n\t  func_append linker_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=$save_ifs\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Xcompiler)\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -Xlinker)\n\tprev=xlinker\n\tcontinue\n\t;;\n\n      -XCClinker)\n\tprev=xcclinker\n\tcontinue\n\t;;\n\n      # -msg_* for osf cc\n      -msg_*)\n\tfunc_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n\n      # Flags to be passed through unchanged, with rationale:\n      # -64, -mips[0-9]      enable 64-bit mode for the SGI compiler\n      # -r[0-9][0-9]*        specify processor for the SGI compiler\n      # -xarch=*, -xtarget=* enable 64-bit mode for the Sun compiler\n      # +DA*, +DD*           enable 64-bit mode for the HP compiler\n      # -q*                  compiler args for the IBM compiler\n      # -m*, -t[45]*, -txscale* architecture-specific flags for GCC\n      # -F/path              path to uninstalled frameworks, gcc on darwin\n      # -p, -pg, --coverage, -fprofile-*  profiling flags for GCC\n      # -fstack-protector*   stack protector flags for GCC\n      # @file                GCC response files\n      # -tp=*                Portland pgcc target processor selection\n      # --sysroot=*          for sysroot support\n      # -O*, -g*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization\n      # -stdlib=*            select c++ std lib with clang\n      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \\\n      -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*|--sysroot=*| \\\n      -O*|-g*|-flto*|-fwhopr*|-fuse-linker-plugin|-fstack-protector*|-stdlib=*)\n        func_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n        func_append compile_command \" $arg\"\n        func_append finalize_command \" $arg\"\n        func_append compiler_flags \" $arg\"\n        continue\n        ;;\n\n      -Z*)\n        if test os2 = \"`expr $host : '.*\\(os2\\)'`\"; then\n          # OS/2 uses -Zxxx to specify OS/2-specific options\n\t  compiler_flags=\"$compiler_flags $arg\"\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  case $arg in\n\t  -Zlinker | -Zstack)\n\t    prev=xcompiler\n\t    ;;\n\t  esac\n\t  continue\n        else\n\t  # Otherwise treat like 'Some other compiler flag' below\n\t  func_quote_for_eval \"$arg\"\n\t  arg=$func_quote_for_eval_result\n        fi\n\t;;\n\n      # Some other compiler flag.\n      -* | +*)\n        func_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n\n      *.$objext)\n\t# A standard object.\n\tfunc_append objs \" $arg\"\n\t;;\n\n      *.lo)\n\t# A libtool-controlled object.\n\n\t# Check to see that this really is a libtool object.\n\tif func_lalib_unsafe_p \"$arg\"; then\n\t  pic_object=\n\t  non_pic_object=\n\n\t  # Read the .lo file\n\t  func_source \"$arg\"\n\n\t  if test -z \"$pic_object\" ||\n\t     test -z \"$non_pic_object\" ||\n\t     test none = \"$pic_object\" &&\n\t     test none = \"$non_pic_object\"; then\n\t    func_fatal_error \"cannot find name of object for '$arg'\"\n\t  fi\n\n\t  # Extract subdirectory from the argument.\n\t  func_dirname \"$arg\" \"/\" \"\"\n\t  xdir=$func_dirname_result\n\n\t  test none = \"$pic_object\" || {\n\t    # Prepend the subdirectory the object is found in.\n\t    pic_object=$xdir$pic_object\n\n\t    if test dlfiles = \"$prev\"; then\n\t      if test yes = \"$build_libtool_libs\" && test yes = \"$dlopen_support\"; then\n\t\tfunc_append dlfiles \" $pic_object\"\n\t\tprev=\n\t\tcontinue\n\t      else\n\t\t# If libtool objects are unsupported, then we need to preload.\n\t\tprev=dlprefiles\n\t      fi\n\t    fi\n\n\t    # CHECK ME:  I think I busted this.  -Ossama\n\t    if test dlprefiles = \"$prev\"; then\n\t      # Preload the old-style object.\n\t      func_append dlprefiles \" $pic_object\"\n\t      prev=\n\t    fi\n\n\t    # A PIC object.\n\t    func_append libobjs \" $pic_object\"\n\t    arg=$pic_object\n\t  }\n\n\t  # Non-PIC object.\n\t  if test none != \"$non_pic_object\"; then\n\t    # Prepend the subdirectory the object is found in.\n\t    non_pic_object=$xdir$non_pic_object\n\n\t    # A standard non-PIC object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t    if test -z \"$pic_object\" || test none = \"$pic_object\"; then\n\t      arg=$non_pic_object\n\t    fi\n\t  else\n\t    # If the PIC object exists, use it instead.\n\t    # $xdir was prepended to $pic_object above.\n\t    non_pic_object=$pic_object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  fi\n\telse\n\t  # Only an error if not doing a dry-run.\n\t  if $opt_dry_run; then\n\t    # Extract subdirectory from the argument.\n\t    func_dirname \"$arg\" \"/\" \"\"\n\t    xdir=$func_dirname_result\n\n\t    func_lo2o \"$arg\"\n\t    pic_object=$xdir$objdir/$func_lo2o_result\n\t    non_pic_object=$xdir$func_lo2o_result\n\t    func_append libobjs \" $pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  else\n\t    func_fatal_error \"'$arg' is not a valid libtool object\"\n\t  fi\n\tfi\n\t;;\n\n      *.$libext)\n\t# An archive.\n\tfunc_append deplibs \" $arg\"\n\tfunc_append old_deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tfunc_resolve_sysroot \"$arg\"\n\tif test dlfiles = \"$prev\"; then\n\t  # This library was specified with -dlopen.\n\t  func_append dlfiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telif test dlprefiles = \"$prev\"; then\n\t  # The library was specified with -dlpreopen.\n\t  func_append dlprefiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telse\n\t  func_append deplibs \" $func_resolve_sysroot_result\"\n\tfi\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\tfunc_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n      esac # arg\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n      fi\n    done # argument parsing loop\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the '$prevarg' option requires an argument\"\n\n    if test yes = \"$export_dynamic\" && test -n \"$export_dynamic_flag_spec\"; then\n      eval arg=\\\"$export_dynamic_flag_spec\\\"\n      func_append compile_command \" $arg\"\n      func_append finalize_command \" $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    func_basename \"$output\"\n    outputname=$func_basename_result\n    libobjs_save=$libobjs\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval shlib_search_path=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" \\| \\$SED \\'s/:/ /g\\'\\`\n    else\n      shlib_search_path=\n    fi\n    eval sys_lib_search_path=\\\"$sys_lib_search_path_spec\\\"\n    eval sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\n\n    # Definition is injected by LT_CONFIG during libtool generation.\n    func_munge_path_list sys_lib_dlsearch_path \"$LT_SYS_LIBRARY_PATH\"\n\n    func_dirname \"$output\" \"/\" \"\"\n    output_objdir=$func_dirname_result$objdir\n    func_to_tool_file \"$output_objdir/\"\n    tool_output_objdir=$func_to_tool_file_result\n    # Create the object directory.\n    func_mkdir_p \"$output_objdir\"\n\n    # Determine the type of output\n    case $output in\n    \"\")\n      func_fatal_help \"you must specify an output file\"\n      ;;\n    *.$libext) linkmode=oldlib ;;\n    *.lo | *.$objext) linkmode=obj ;;\n    *.la) linkmode=lib ;;\n    *) linkmode=prog ;; # Anything else should be a program.\n    esac\n\n    specialdeplibs=\n\n    libs=\n    # Find all interdependent deplibs by searching for libraries\n    # that are linked more than once (e.g. -la -lb -la)\n    for deplib in $deplibs; do\n      if $opt_preserve_dup_deps; then\n\tcase \"$libs \" in\n\t*\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\tesac\n      fi\n      func_append libs \" $deplib\"\n    done\n\n    if test lib = \"$linkmode\"; then\n      libs=\"$predeps $libs $compiler_lib_search_path $postdeps\"\n\n      # Compute libraries that are listed more than once in $predeps\n      # $postdeps and mark them as special (i.e., whose duplicates are\n      # not to be eliminated).\n      pre_post_deps=\n      if $opt_duplicate_compiler_generated_deps; then\n\tfor pre_post_dep in $predeps $postdeps; do\n\t  case \"$pre_post_deps \" in\n\t  *\" $pre_post_dep \"*) func_append specialdeplibs \" $pre_post_deps\" ;;\n\t  esac\n\t  func_append pre_post_deps \" $pre_post_dep\"\n\tdone\n      fi\n      pre_post_deps=\n    fi\n\n    deplibs=\n    newdependency_libs=\n    newlib_search_path=\n    need_relink=no # whether we're linking any uninstalled libtool libraries\n    notinst_deplibs= # not-installed libtool libraries\n    notinst_path= # paths that contain not-installed libtool libraries\n\n    case $linkmode in\n    lib)\n\tpasses=\"conv dlpreopen link\"\n\tfor file in $dlfiles $dlprefiles; do\n\t  case $file in\n\t  *.la) ;;\n\t  *)\n\t    func_fatal_help \"libraries can '-dlopen' only libtool libraries: $file\"\n\t    ;;\n\t  esac\n\tdone\n\t;;\n    prog)\n\tcompile_deplibs=\n\tfinalize_deplibs=\n\talldeplibs=false\n\tnewdlfiles=\n\tnewdlprefiles=\n\tpasses=\"conv scan dlopen dlpreopen link\"\n\t;;\n    *)  passes=\"conv\"\n\t;;\n    esac\n\n    for pass in $passes; do\n      # The preopen pass in lib mode reverses $deplibs; put it back here\n      # so that -L comes before libs that need it for instance...\n      if test lib,link = \"$linkmode,$pass\"; then\n\t## FIXME: Find the place where the list is rebuilt in the wrong\n\t##        order, and fix it there properly\n        tmp_deplibs=\n\tfor deplib in $deplibs; do\n\t  tmp_deplibs=\"$deplib $tmp_deplibs\"\n\tdone\n\tdeplibs=$tmp_deplibs\n      fi\n\n      if test lib,link = \"$linkmode,$pass\" ||\n\t test prog,scan = \"$linkmode,$pass\"; then\n\tlibs=$deplibs\n\tdeplibs=\n      fi\n      if test prog = \"$linkmode\"; then\n\tcase $pass in\n\tdlopen) libs=$dlfiles ;;\n\tdlpreopen) libs=$dlprefiles ;;\n\tlink) libs=\"$deplibs %DEPLIBS% $dependency_libs\" ;;\n\tesac\n      fi\n      if test lib,dlpreopen = \"$linkmode,$pass\"; then\n\t# Collect and forward deplibs of preopened libtool libs\n\tfor lib in $dlprefiles; do\n\t  # Ignore non-libtool-libs\n\t  dependency_libs=\n\t  func_resolve_sysroot \"$lib\"\n\t  case $lib in\n\t  *.la)\tfunc_source \"$func_resolve_sysroot_result\" ;;\n\t  esac\n\n\t  # Collect preopened libtool deplibs, except any this library\n\t  # has declared as weak libs\n\t  for deplib in $dependency_libs; do\n\t    func_basename \"$deplib\"\n            deplib_base=$func_basename_result\n\t    case \" $weak_libs \" in\n\t    *\" $deplib_base \"*) ;;\n\t    *) func_append deplibs \" $deplib\" ;;\n\t    esac\n\t  done\n\tdone\n\tlibs=$dlprefiles\n      fi\n      if test dlopen = \"$pass\"; then\n\t# Collect dlpreopened libraries\n\tsave_deplibs=$deplibs\n\tdeplibs=\n      fi\n\n      for deplib in $libs; do\n\tlib=\n\tfound=false\n\tcase $deplib in\n\t-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n        |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\t  if test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    func_append compiler_flags \" $deplib\"\n\t    if test lib = \"$linkmode\"; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-l*)\n\t  if test lib != \"$linkmode\" && test prog != \"$linkmode\"; then\n\t    func_warning \"'-l' is ignored for archives/objects\"\n\t    continue\n\t  fi\n\t  func_stripname '-l' '' \"$deplib\"\n\t  name=$func_stripname_result\n\t  if test lib = \"$linkmode\"; then\n\t    searchdirs=\"$newlib_search_path $lib_search_path $compiler_lib_search_dirs $sys_lib_search_path $shlib_search_path\"\n\t  else\n\t    searchdirs=\"$newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path\"\n\t  fi\n\t  for searchdir in $searchdirs; do\n\t    for search_ext in .la $std_shrext .so .a; do\n\t      # Search the libtool library\n\t      lib=$searchdir/lib$name$search_ext\n\t      if test -f \"$lib\"; then\n\t\tif test .la = \"$search_ext\"; then\n\t\t  found=:\n\t\telse\n\t\t  found=false\n\t\tfi\n\t\tbreak 2\n\t      fi\n\t    done\n\t  done\n\t  if $found; then\n\t    # deplib is a libtool library\n\t    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,\n\t    # We need to do some special things here, and not later.\n\t    if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t      case \" $predeps $postdeps \" in\n\t      *\" $deplib \"*)\n\t\tif func_lalib_p \"$lib\"; then\n\t\t  library_names=\n\t\t  old_library=\n\t\t  func_source \"$lib\"\n\t\t  for l in $old_library $library_names; do\n\t\t    ll=$l\n\t\t  done\n\t\t  if test \"X$ll\" = \"X$old_library\"; then # only static version available\n\t\t    found=false\n\t\t    func_dirname \"$lib\" \"\" \".\"\n\t\t    ladir=$func_dirname_result\n\t\t    lib=$ladir/$old_library\n\t\t    if test prog,link = \"$linkmode,$pass\"; then\n\t\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t\t    else\n\t\t      deplibs=\"$deplib $deplibs\"\n\t\t      test lib = \"$linkmode\" && newdependency_libs=\"$deplib $newdependency_libs\"\n\t\t    fi\n\t\t    continue\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *) ;;\n\t      esac\n\t    fi\n\t  else\n\t    # deplib doesn't seem to be a libtool library\n\t    if test prog,link = \"$linkmode,$pass\"; then\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      deplibs=\"$deplib $deplibs\"\n\t      test lib = \"$linkmode\" && newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    continue\n\t  fi\n\t  ;; # -l\n\t*.ltframework)\n\t  if test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$deplib $deplibs\"\n\t    if test lib = \"$linkmode\"; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-L*)\n\t  case $linkmode in\n\t  lib)\n\t    deplibs=\"$deplib $deplibs\"\n\t    test conv = \"$pass\" && continue\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  prog)\n\t    if test conv = \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t      continue\n\t    fi\n\t    if test scan = \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  *)\n\t    func_warning \"'-L' is ignored for archives/objects\"\n\t    ;;\n\t  esac # linkmode\n\t  continue\n\t  ;; # -L\n\t-R*)\n\t  if test link = \"$pass\"; then\n\t    func_stripname '-R' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    dir=$func_resolve_sysroot_result\n\t    # Make sure the xrpath contains only unique directories.\n\t    case \"$xrpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append xrpath \" $dir\" ;;\n\t    esac\n\t  fi\n\t  deplibs=\"$deplib $deplibs\"\n\t  continue\n\t  ;;\n\t*.la)\n\t  func_resolve_sysroot \"$deplib\"\n\t  lib=$func_resolve_sysroot_result\n\t  ;;\n\t*.$libext)\n\t  if test conv = \"$pass\"; then\n\t    deplibs=\"$deplib $deplibs\"\n\t    continue\n\t  fi\n\t  case $linkmode in\n\t  lib)\n\t    # Linking convenience modules into shared libraries is allowed,\n\t    # but linking other static libraries is non-portable.\n\t    case \" $dlpreconveniencelibs \" in\n\t    *\" $deplib \"*) ;;\n\t    *)\n\t      valid_a_lib=false\n\t      case $deplibs_check_method in\n\t\tmatch_pattern*)\n\t\t  set dummy $deplibs_check_method; shift\n\t\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t\t  if eval \"\\$ECHO \\\"$deplib\\\"\" 2>/dev/null | $SED 10q \\\n\t\t    | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t    valid_a_lib=:\n\t\t  fi\n\t\t;;\n\t\tpass_all)\n\t\t  valid_a_lib=:\n\t\t;;\n\t      esac\n\t      if $valid_a_lib; then\n\t\techo\n\t\t$ECHO \"*** Warning: Linking the shared library $output against the\"\n\t\t$ECHO \"*** static library $deplib is not portable!\"\n\t\tdeplibs=\"$deplib $deplibs\"\n\t      else\n\t\techo\n\t\t$ECHO \"*** Warning: Trying to link with static lib archive $deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because the file extensions .$libext of this argument makes me believe\"\n\t\techo \"*** that it is just a static archive that I should not use here.\"\n\t      fi\n\t      ;;\n\t    esac\n\t    continue\n\t    ;;\n\t  prog)\n\t    if test link != \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  esac # linkmode\n\t  ;; # *.$libext\n\t*.lo | *.$objext)\n\t  if test conv = \"$pass\"; then\n\t    deplibs=\"$deplib $deplibs\"\n\t  elif test prog = \"$linkmode\"; then\n\t    if test dlpreopen = \"$pass\" || test yes != \"$dlopen_support\" || test no = \"$build_libtool_libs\"; then\n\t      # If there is no dlopen support or we're linking statically,\n\t      # we need to preload.\n\t      func_append newdlprefiles \" $deplib\"\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      func_append newdlfiles \" $deplib\"\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t%DEPLIBS%)\n\t  alldeplibs=:\n\t  continue\n\t  ;;\n\tesac # case $deplib\n\n\t$found || test -f \"$lib\" \\\n\t  || func_fatal_error \"cannot find the library '$lib' or unhandled argument '$deplib'\"\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$lib\" \\\n\t  || func_fatal_error \"'$lib' is not a valid libtool archive\"\n\n\tfunc_dirname \"$lib\" \"\" \".\"\n\tladir=$func_dirname_result\n\n\tdlname=\n\tdlopen=\n\tdlpreopen=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\tinherited_linker_flags=\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variables installed, or shouldnotlink\n\tinstalled=yes\n\tshouldnotlink=no\n\tavoidtemprpath=\n\n\n\t# Read the .la file\n\tfunc_source \"$lib\"\n\n\t# Convert \"-framework foo\" to \"foo.ltframework\"\n\tif test -n \"$inherited_linker_flags\"; then\n\t  tmp_inherited_linker_flags=`$ECHO \"$inherited_linker_flags\" | $SED 's/-framework \\([^ $]*\\)/\\1.ltframework/g'`\n\t  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do\n\t    case \" $new_inherited_linker_flags \" in\n\t      *\" $tmp_inherited_linker_flag \"*) ;;\n\t      *) func_append new_inherited_linker_flags \" $tmp_inherited_linker_flag\";;\n\t    esac\n\t  done\n\tfi\n\tdependency_libs=`$ECHO \" $dependency_libs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tif test lib,link = \"$linkmode,$pass\" ||\n\t   test prog,scan = \"$linkmode,$pass\" ||\n\t   { test prog != \"$linkmode\" && test lib != \"$linkmode\"; }; then\n\t  test -n \"$dlopen\" && func_append dlfiles \" $dlopen\"\n\t  test -n \"$dlpreopen\" && func_append dlprefiles \" $dlpreopen\"\n\tfi\n\n\tif test conv = \"$pass\"; then\n\t  # Only check for convenience libraries\n\t  deplibs=\"$lib $deplibs\"\n\t  if test -z \"$libdir\"; then\n\t    if test -z \"$old_library\"; then\n\t      func_fatal_error \"cannot find name of link library for '$lib'\"\n\t    fi\n\t    # It is a libtool convenience library, so add in its objects.\n\t    func_append convenience \" $ladir/$objdir/$old_library\"\n\t    func_append old_convenience \" $ladir/$objdir/$old_library\"\n\t  elif test prog != \"$linkmode\" && test lib != \"$linkmode\"; then\n\t    func_fatal_error \"'$lib' is not a convenience library\"\n\t  fi\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    deplibs=\"$deplib $deplibs\"\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done\n\t  continue\n\tfi # $pass = conv\n\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tif test -n \"$old_library\" &&\n\t   { test yes = \"$prefer_static_libs\" ||\n\t     test built,no = \"$prefer_static_libs,$installed\"; }; then\n\t  linklib=$old_library\n\telse\n\t  for l in $old_library $library_names; do\n\t    linklib=$l\n\t  done\n\tfi\n\tif test -z \"$linklib\"; then\n\t  func_fatal_error \"cannot find name of link library for '$lib'\"\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test dlopen = \"$pass\"; then\n\t  test -z \"$libdir\" \\\n\t    && func_fatal_error \"cannot -dlopen a convenience library: '$lib'\"\n\t  if test -z \"$dlname\" ||\n\t     test yes != \"$dlopen_support\" ||\n\t     test no = \"$build_libtool_libs\"\n\t  then\n\t    # If there is no dlname, no dlopen support or we're linking\n\t    # statically, we need to preload.  We also need to preload any\n\t    # dependent libraries so libltdl's deplib preloader doesn't\n\t    # bomb out in the load deplibs phase.\n\t    func_append dlprefiles \" $lib $dependency_libs\"\n\t  else\n\t    func_append newdlfiles \" $lib\"\n\t  fi\n\t  continue\n\tfi # $pass = dlopen\n\n\t# We need an absolute path.\n\tcase $ladir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs_ladir=$ladir ;;\n\t*)\n\t  abs_ladir=`cd \"$ladir\" && pwd`\n\t  if test -z \"$abs_ladir\"; then\n\t    func_warning \"cannot determine absolute directory name of '$ladir'\"\n\t    func_warning \"passing it literally to the linker, although it might fail\"\n\t    abs_ladir=$ladir\n\t  fi\n\t  ;;\n\tesac\n\tfunc_basename \"$lib\"\n\tlaname=$func_basename_result\n\n\t# Find the relevant object directory and library name.\n\tif test yes = \"$installed\"; then\n\t  if test ! -f \"$lt_sysroot$libdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    func_warning \"library '$lib' was moved.\"\n\t    dir=$ladir\n\t    absdir=$abs_ladir\n\t    libdir=$abs_ladir\n\t  else\n\t    dir=$lt_sysroot$libdir\n\t    absdir=$lt_sysroot$libdir\n\t  fi\n\t  test yes = \"$hardcode_automatic\" && avoidtemprpath=yes\n\telse\n\t  if test ! -f \"$ladir/$objdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    dir=$ladir\n\t    absdir=$abs_ladir\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  else\n\t    dir=$ladir/$objdir\n\t    absdir=$abs_ladir/$objdir\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  fi\n\tfi # $installed = yes\n\tfunc_stripname 'lib' '.la' \"$laname\"\n\tname=$func_stripname_result\n\n\t# This library was specified with -dlpreopen.\n\tif test dlpreopen = \"$pass\"; then\n\t  if test -z \"$libdir\" && test prog = \"$linkmode\"; then\n\t    func_fatal_error \"only libraries may -dlpreopen a convenience library: '$lib'\"\n\t  fi\n\t  case $host in\n\t    # special handling for platforms with PE-DLLs.\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # Linker will automatically link against shared library if both\n\t      # static and shared are present.  Therefore, ensure we extract\n\t      # symbols from the import library if a shared library is present\n\t      # (otherwise, the dlopen module name will be incorrect).  We do\n\t      # this by putting the import library name into $newdlprefiles.\n\t      # We recover the dlopen module name by 'saving' the la file\n\t      # name in a special purpose variable, and (later) extracting the\n\t      # dlname from the la file.\n\t      if test -n \"$dlname\"; then\n\t        func_tr_sh \"$dir/$linklib\"\n\t        eval \"libfile_$func_tr_sh_result=\\$abs_ladir/\\$laname\"\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      fi\n\t    ;;\n\t    * )\n\t      # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t      # are required to link).\n\t      if test -n \"$old_library\"; then\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      # Otherwise, use the dlname, so that lt_dlopen finds it.\n\t      elif test -n \"$dlname\"; then\n\t        func_append newdlprefiles \" $dir/$dlname\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      fi\n\t    ;;\n\t  esac\n\tfi # $pass = dlpreopen\n\n\tif test -z \"$libdir\"; then\n\t  # Link the convenience library\n\t  if test lib = \"$linkmode\"; then\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t  elif test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$dir/$old_library $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$old_library $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$lib $deplibs\" # used for prog,scan pass\n\t  fi\n\t  continue\n\tfi\n\n\n\tif test prog = \"$linkmode\" && test link != \"$pass\"; then\n\t  func_append newlib_search_path \" $ladir\"\n\t  deplibs=\"$lib $deplibs\"\n\n\t  linkalldeplibs=false\n\t  if test no != \"$link_all_deplibs\" || test -z \"$library_names\" ||\n\t     test no = \"$build_libtool_libs\"; then\n\t    linkalldeplibs=:\n\t  fi\n\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    case $deplib in\n\t    -L*) func_stripname '-L' '' \"$deplib\"\n\t         func_resolve_sysroot \"$func_stripname_result\"\n\t         func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t\t ;;\n\t    esac\n\t    # Need to link against all dependency_libs?\n\t    if $linkalldeplibs; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      # Need to hardcode shared library paths\n\t      # or/and link against static libraries\n\t      newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done # for deplib\n\t  continue\n\tfi # $linkmode = prog...\n\n\tif test prog,link = \"$linkmode,$pass\"; then\n\t  if test -n \"$library_names\" &&\n\t     { { test no = \"$prefer_static_libs\" ||\n\t         test built,yes = \"$prefer_static_libs,$installed\"; } ||\n\t       test -z \"$old_library\"; }; then\n\t    # We need to hardcode the library path\n\t    if test -n \"$shlibpath_var\" && test -z \"$avoidtemprpath\"; then\n\t      # Make sure the rpath contains only unique directories.\n\t      case $temp_rpath: in\n\t      *\"$absdir:\"*) ;;\n\t      *) func_append temp_rpath \"$absdir:\" ;;\n\t      esac\n\t    fi\n\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi # $linkmode,$pass = prog,link...\n\n\t  if $alldeplibs &&\n\t     { test pass_all = \"$deplibs_check_method\" ||\n\t       { test yes = \"$build_libtool_libs\" &&\n\t\t test -n \"$library_names\"; }; }; then\n\t    # We only need to search for static libraries\n\t    continue\n\t  fi\n\tfi\n\n\tlink_static=no # Whether the deplib will be linked statically\n\tuse_static_libs=$prefer_static_libs\n\tif test built = \"$use_static_libs\" && test yes = \"$installed\"; then\n\t  use_static_libs=no\n\tfi\n\tif test -n \"$library_names\" &&\n\t   { test no = \"$use_static_libs\" || test -z \"$old_library\"; }; then\n\t  case $host in\n\t  *cygwin* | *mingw* | *cegcc* | *os2*)\n\t      # No point in relinking DLLs because paths are not encoded\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=no\n\t    ;;\n\t  *)\n\t    if test no = \"$installed\"; then\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=yes\n\t    fi\n\t    ;;\n\t  esac\n\t  # This is a shared library\n\n\t  # Warn about portability, can't link against -module's on some\n\t  # systems (darwin).  Don't bleat about dlopened modules though!\n\t  dlopenmodule=\n\t  for dlpremoduletest in $dlprefiles; do\n\t    if test \"X$dlpremoduletest\" = \"X$lib\"; then\n\t      dlopenmodule=$dlpremoduletest\n\t      break\n\t    fi\n\t  done\n\t  if test -z \"$dlopenmodule\" && test yes = \"$shouldnotlink\" && test link = \"$pass\"; then\n\t    echo\n\t    if test prog = \"$linkmode\"; then\n\t      $ECHO \"*** Warning: Linking the executable $output against the loadable module\"\n\t    else\n\t      $ECHO \"*** Warning: Linking the shared library $output against the loadable module\"\n\t    fi\n\t    $ECHO \"*** $linklib is not portable!\"\n\t  fi\n\t  if test lib = \"$linkmode\" &&\n\t     test yes = \"$hardcode_into_libs\"; then\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi\n\n\t  if test -n \"$old_archive_from_expsyms_cmds\"; then\n\t    # figure out the soname\n\t    set dummy $library_names\n\t    shift\n\t    realname=$1\n\t    shift\n\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t    # use dlname if we got it. it's perfectly good, no?\n\t    if test -n \"$dlname\"; then\n\t      soname=$dlname\n\t    elif test -n \"$soname_spec\"; then\n\t      # bleh windows\n\t      case $host in\n\t      *cygwin* | mingw* | *cegcc* | *os2*)\n\t        func_arith $current - $age\n\t\tmajor=$func_arith_result\n\t\tversuffix=-$major\n\t\t;;\n\t      esac\n\t      eval soname=\\\"$soname_spec\\\"\n\t    else\n\t      soname=$realname\n\t    fi\n\n\t    # Make a new name for the extract_expsyms_cmds to use\n\t    soroot=$soname\n\t    func_basename \"$soroot\"\n\t    soname=$func_basename_result\n\t    func_stripname 'lib' '.dll' \"$soname\"\n\t    newlib=libimp-$func_stripname_result.a\n\n\t    # If the library has no export list, then create one now\n\t    if test -f \"$output_objdir/$soname-def\"; then :\n\t    else\n\t      func_verbose \"extracting exported symbol list from '$soname'\"\n\t      func_execute_cmds \"$extract_expsyms_cmds\" 'exit $?'\n\t    fi\n\n\t    # Create $newlib\n\t    if test -f \"$output_objdir/$newlib\"; then :; else\n\t      func_verbose \"generating import library for '$soname'\"\n\t      func_execute_cmds \"$old_archive_from_expsyms_cmds\" 'exit $?'\n\t    fi\n\t    # make sure the library variables are pointing to the new library\n\t    dir=$output_objdir\n\t    linklib=$newlib\n\t  fi # test -n \"$old_archive_from_expsyms_cmds\"\n\n\t  if test prog = \"$linkmode\" || test relink != \"$opt_mode\"; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    lib_linked=yes\n\t    case $hardcode_action in\n\t    immediate | unsupported)\n\t      if test no = \"$hardcode_direct\"; then\n\t\tadd=$dir/$linklib\n\t\tcase $host in\n\t\t  *-*-sco3.2v5.0.[024]*) add_dir=-L$dir ;;\n\t\t  *-*-sysv4*uw2*) add_dir=-L$dir ;;\n\t\t  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \\\n\t\t    *-*-unixware7*) add_dir=-L$dir ;;\n\t\t  *-*-darwin* )\n\t\t    # if the lib is a (non-dlopened) module then we cannot\n\t\t    # link against it, someone is ignoring the earlier warnings\n\t\t    if /usr/bin/file -L $add 2> /dev/null |\n\t\t\t $GREP \": [^:]* bundle\" >/dev/null; then\n\t\t      if test \"X$dlopenmodule\" != \"X$lib\"; then\n\t\t\t$ECHO \"*** Warning: lib $linklib is a module, not a shared library\"\n\t\t\tif test -z \"$old_library\"; then\n\t\t\t  echo\n\t\t\t  echo \"*** And there doesn't seem to be a static archive available\"\n\t\t\t  echo \"*** The link will probably fail, sorry\"\n\t\t\telse\n\t\t\t  add=$dir/$old_library\n\t\t\tfi\n\t\t      elif test -n \"$old_library\"; then\n\t\t\tadd=$dir/$old_library\n\t\t      fi\n\t\t    fi\n\t\tesac\n\t      elif test no = \"$hardcode_minus_L\"; then\n\t\tcase $host in\n\t\t*-*-sunos*) add_shlibpath=$dir ;;\n\t\tesac\n\t\tadd_dir=-L$dir\n\t\tadd=-l$name\n\t      elif test no = \"$hardcode_shlibpath_var\"; then\n\t\tadd_shlibpath=$dir\n\t\tadd=-l$name\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    relink)\n\t      if test yes = \"$hardcode_direct\" &&\n\t         test no = \"$hardcode_direct_absolute\"; then\n\t\tadd=$dir/$linklib\n\t      elif test yes = \"$hardcode_minus_L\"; then\n\t\tadd_dir=-L$absdir\n\t\t# Try looking first in the location we're being installed to.\n\t\tif test -n \"$inst_prefix_dir\"; then\n\t\t  case $libdir in\n\t\t    [\\\\/]*)\n\t\t      func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t      ;;\n\t\t  esac\n\t\tfi\n\t\tadd=-l$name\n\t      elif test yes = \"$hardcode_shlibpath_var\"; then\n\t\tadd_shlibpath=$dir\n\t\tadd=-l$name\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    *) lib_linked=no ;;\n\t    esac\n\n\t    if test yes != \"$lib_linked\"; then\n\t      func_fatal_configuration \"unsupported hardcode properties\"\n\t    fi\n\n\t    if test -n \"$add_shlibpath\"; then\n\t      case :$compile_shlibpath: in\n\t      *\":$add_shlibpath:\"*) ;;\n\t      *) func_append compile_shlibpath \"$add_shlibpath:\" ;;\n\t      esac\n\t    fi\n\t    if test prog = \"$linkmode\"; then\n\t      test -n \"$add_dir\" && compile_deplibs=\"$add_dir $compile_deplibs\"\n\t      test -n \"$add\" && compile_deplibs=\"$add $compile_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t      if test yes != \"$hardcode_direct\" &&\n\t\t test yes != \"$hardcode_minus_L\" &&\n\t\t test yes = \"$hardcode_shlibpath_var\"; then\n\t\tcase :$finalize_shlibpath: in\n\t\t*\":$libdir:\"*) ;;\n\t\t*) func_append finalize_shlibpath \"$libdir:\" ;;\n\t\tesac\n\t      fi\n\t    fi\n\t  fi\n\n\t  if test prog = \"$linkmode\" || test relink = \"$opt_mode\"; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    # Finalize command for both is simple: just hardcode it.\n\t    if test yes = \"$hardcode_direct\" &&\n\t       test no = \"$hardcode_direct_absolute\"; then\n\t      add=$libdir/$linklib\n\t    elif test yes = \"$hardcode_minus_L\"; then\n\t      add_dir=-L$libdir\n\t      add=-l$name\n\t    elif test yes = \"$hardcode_shlibpath_var\"; then\n\t      case :$finalize_shlibpath: in\n\t      *\":$libdir:\"*) ;;\n\t      *) func_append finalize_shlibpath \"$libdir:\" ;;\n\t      esac\n\t      add=-l$name\n\t    elif test yes = \"$hardcode_automatic\"; then\n\t      if test -n \"$inst_prefix_dir\" &&\n\t\t test -f \"$inst_prefix_dir$libdir/$linklib\"; then\n\t\tadd=$inst_prefix_dir$libdir/$linklib\n\t      else\n\t\tadd=$libdir/$linklib\n\t      fi\n\t    else\n\t      # We cannot seem to hardcode it, guess we'll fake it.\n\t      add_dir=-L$libdir\n\t      # Try looking first in the location we're being installed to.\n\t      if test -n \"$inst_prefix_dir\"; then\n\t\tcase $libdir in\n\t\t  [\\\\/]*)\n\t\t    func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t    ;;\n\t\tesac\n\t      fi\n\t      add=-l$name\n\t    fi\n\n\t    if test prog = \"$linkmode\"; then\n\t      test -n \"$add_dir\" && finalize_deplibs=\"$add_dir $finalize_deplibs\"\n\t      test -n \"$add\" && finalize_deplibs=\"$add $finalize_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t    fi\n\t  fi\n\telif test prog = \"$linkmode\"; then\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test unsupported != \"$hardcode_direct\"; then\n\t    test -n \"$old_library\" && linklib=$old_library\n\t    compile_deplibs=\"$dir/$linklib $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$linklib $finalize_deplibs\"\n\t  else\n\t    compile_deplibs=\"-l$name -L$dir $compile_deplibs\"\n\t    finalize_deplibs=\"-l$name -L$dir $finalize_deplibs\"\n\t  fi\n\telif test yes = \"$build_libtool_libs\"; then\n\t  # Not a shared library\n\t  if test pass_all != \"$deplibs_check_method\"; then\n\t    # We're trying link a shared library against a static one\n\t    # but the system doesn't support it.\n\n\t    # Just print a warning and add the library to dependency_libs so\n\t    # that the program can be linked against the static library.\n\t    echo\n\t    $ECHO \"*** Warning: This system cannot link to static lib archive $lib.\"\n\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t    echo \"*** shared version of the library, which you do not appear to have.\"\n\t    if test yes = \"$module\"; then\n\t      echo \"*** But as you try to build a module library, libtool will still create \"\n\t      echo \"*** a static module, that should work as long as the dlopening application\"\n\t      echo \"*** is linked with the -dlopen flag to resolve symbols at runtime.\"\n\t      if test -z \"$global_symbol_pipe\"; then\n\t\techo\n\t\techo \"*** However, this would only work if libtool was able to extract symbol\"\n\t\techo \"*** lists from a program, using 'nm' or equivalent, but libtool could\"\n\t\techo \"*** not find such a program.  So, this module is probably useless.\"\n\t\techo \"*** 'nm' from GNU binutils and a full rebuild may help.\"\n\t      fi\n\t      if test no = \"$build_old_libs\"; then\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  else\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t    link_static=yes\n\t  fi\n\tfi # link shared/static library?\n\n\tif test lib = \"$linkmode\"; then\n\t  if test -n \"$dependency_libs\" &&\n\t     { test yes != \"$hardcode_into_libs\" ||\n\t       test yes = \"$build_old_libs\" ||\n\t       test yes = \"$link_static\"; }; then\n\t    # Extract -R from dependency_libs\n\t    temp_deplibs=\n\t    for libdir in $dependency_libs; do\n\t      case $libdir in\n\t      -R*) func_stripname '-R' '' \"$libdir\"\n\t           temp_xrpath=$func_stripname_result\n\t\t   case \" $xrpath \" in\n\t\t   *\" $temp_xrpath \"*) ;;\n\t\t   *) func_append xrpath \" $temp_xrpath\";;\n\t\t   esac;;\n\t      *) func_append temp_deplibs \" $libdir\";;\n\t      esac\n\t    done\n\t    dependency_libs=$temp_deplibs\n\t  fi\n\n\t  func_append newlib_search_path \" $absdir\"\n\t  # Link against this library\n\t  test no = \"$link_static\" && newdependency_libs=\"$abs_ladir/$laname $newdependency_libs\"\n\t  # ... and its dependency_libs\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    case $deplib in\n              -L*) func_stripname '-L' '' \"$deplib\"\n                   func_resolve_sysroot \"$func_stripname_result\";;\n              *) func_resolve_sysroot \"$deplib\" ;;\n            esac\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $func_resolve_sysroot_result \"*)\n                func_append specialdeplibs \" $func_resolve_sysroot_result\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $func_resolve_sysroot_result\"\n\t  done\n\n\t  if test no != \"$link_all_deplibs\"; then\n\t    # Add the search paths of all dependency libraries\n\t    for deplib in $dependency_libs; do\n\t      path=\n\t      case $deplib in\n\t      -L*) path=$deplib ;;\n\t      *.la)\n\t        func_resolve_sysroot \"$deplib\"\n\t        deplib=$func_resolve_sysroot_result\n\t        func_dirname \"$deplib\" \"\" \".\"\n\t\tdir=$func_dirname_result\n\t\t# We need an absolute path.\n\t\tcase $dir in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) absdir=$dir ;;\n\t\t*)\n\t\t  absdir=`cd \"$dir\" && pwd`\n\t\t  if test -z \"$absdir\"; then\n\t\t    func_warning \"cannot determine absolute directory name of '$dir'\"\n\t\t    absdir=$dir\n\t\t  fi\n\t\t  ;;\n\t\tesac\n\t\tif $GREP \"^installed=no\" $deplib > /dev/null; then\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  depdepl=\n\t\t  eval deplibrary_names=`$SED -n -e 's/^library_names=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -n \"$deplibrary_names\"; then\n\t\t    for tmp in $deplibrary_names; do\n\t\t      depdepl=$tmp\n\t\t    done\n\t\t    if test -f \"$absdir/$objdir/$depdepl\"; then\n\t\t      depdepl=$absdir/$objdir/$depdepl\n\t\t      darwin_install_name=`$OTOOL -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`\n                      if test -z \"$darwin_install_name\"; then\n                          darwin_install_name=`$OTOOL64 -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`\n                      fi\n\t\t      func_append compiler_flags \" $wl-dylib_file $wl$darwin_install_name:$depdepl\"\n\t\t      func_append linker_flags \" -dylib_file $darwin_install_name:$depdepl\"\n\t\t      path=\n\t\t    fi\n\t\t  fi\n\t\t  ;;\n\t\t*)\n\t\t  path=-L$absdir/$objdir\n\t\t  ;;\n\t\tesac\n\t\telse\n\t\t  eval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\t  test -z \"$libdir\" && \\\n\t\t    func_fatal_error \"'$deplib' is not a valid libtool archive\"\n\t\t  test \"$absdir\" != \"$libdir\" && \\\n\t\t    func_warning \"'$deplib' seems to be moved\"\n\n\t\t  path=-L$absdir\n\t\tfi\n\t\t;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $path \"*) ;;\n\t      *) deplibs=\"$path $deplibs\" ;;\n\t      esac\n\t    done\n\t  fi # link_all_deplibs != no\n\tfi # linkmode = lib\n      done # for deplib in $libs\n      if test link = \"$pass\"; then\n\tif test prog = \"$linkmode\"; then\n\t  compile_deplibs=\"$new_inherited_linker_flags $compile_deplibs\"\n\t  finalize_deplibs=\"$new_inherited_linker_flags $finalize_deplibs\"\n\telse\n\t  compiler_flags=\"$compiler_flags \"`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfi\n      fi\n      dependency_libs=$newdependency_libs\n      if test dlpreopen = \"$pass\"; then\n\t# Link the dlpreopened libraries before other libraries\n\tfor deplib in $save_deplibs; do\n\t  deplibs=\"$deplib $deplibs\"\n\tdone\n      fi\n      if test dlopen != \"$pass\"; then\n\ttest conv = \"$pass\" || {\n\t  # Make sure lib_search_path contains only unique directories.\n\t  lib_search_path=\n\t  for dir in $newlib_search_path; do\n\t    case \"$lib_search_path \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append lib_search_path \" $dir\" ;;\n\t    esac\n\t  done\n\t  newlib_search_path=\n\t}\n\n\tif test prog,link = \"$linkmode,$pass\"; then\n\t  vars=\"compile_deplibs finalize_deplibs\"\n\telse\n\t  vars=deplibs\n\tfi\n\tfor var in $vars dependency_libs; do\n\t  # Add libraries to $var in reverse order\n\t  eval tmp_libs=\\\"\\$$var\\\"\n\t  new_libs=\n\t  for deplib in $tmp_libs; do\n\t    # FIXME: Pedantically, this is the right thing to do, so\n\t    #        that some nasty dependency loop isn't accidentally\n\t    #        broken:\n\t    #new_libs=\"$deplib $new_libs\"\n\t    # Pragmatically, this seems to cause very few problems in\n\t    # practice:\n\t    case $deplib in\n\t    -L*) new_libs=\"$deplib $new_libs\" ;;\n\t    -R*) ;;\n\t    *)\n\t      # And here is the reason: when a library appears more\n\t      # than once as an explicit dependence of a library, or\n\t      # is implicitly linked in more than once by the\n\t      # compiler, it is considered special, and multiple\n\t      # occurrences thereof are not removed.  Compare this\n\t      # with having the same library being listed as a\n\t      # dependency of multiple other libraries: in this case,\n\t      # we know (pedantically, we assume) the library does not\n\t      # need to be listed more than once, so we keep only the\n\t      # last copy.  This is not always right, but it is rare\n\t      # enough that we require users that really mean to play\n\t      # such unportable linking tricks to link the library\n\t      # using -Wl,-lname, so that libtool does not consider it\n\t      # for duplicate removal.\n\t      case \" $specialdeplibs \" in\n\t      *\" $deplib \"*) new_libs=\"$deplib $new_libs\" ;;\n\t      *)\n\t\tcase \" $new_libs \" in\n\t\t*\" $deplib \"*) ;;\n\t\t*) new_libs=\"$deplib $new_libs\" ;;\n\t\tesac\n\t\t;;\n\t      esac\n\t      ;;\n\t    esac\n\t  done\n\t  tmp_libs=\n\t  for deplib in $new_libs; do\n\t    case $deplib in\n\t    -L*)\n\t      case \" $tmp_libs \" in\n\t      *\" $deplib \"*) ;;\n\t      *) func_append tmp_libs \" $deplib\" ;;\n\t      esac\n\t      ;;\n\t    *) func_append tmp_libs \" $deplib\" ;;\n\t    esac\n\t  done\n\t  eval $var=\\\"$tmp_libs\\\"\n\tdone # for var\n      fi\n\n      # Add Sun CC postdeps if required:\n      test CXX = \"$tagname\" && {\n        case $host_os in\n        linux*)\n          case `$CC -V 2>&1 | sed 5q` in\n          *Sun\\ C*) # Sun C++ 5.9\n            func_suncc_cstd_abi\n\n            if test no != \"$suncc_use_cstd_abi\"; then\n              func_append postdeps ' -library=Cstd -library=Crun'\n            fi\n            ;;\n          esac\n          ;;\n\n        solaris*)\n          func_cc_basename \"$CC\"\n          case $func_cc_basename_result in\n          CC* | sunCC*)\n            func_suncc_cstd_abi\n\n            if test no != \"$suncc_use_cstd_abi\"; then\n              func_append postdeps ' -library=Cstd -library=Crun'\n            fi\n            ;;\n          esac\n          ;;\n        esac\n      }\n\n      # Last step: remove runtime libs from dependency_libs\n      # (they stay in deplibs)\n      tmp_libs=\n      for i in $dependency_libs; do\n\tcase \" $predeps $postdeps $compiler_lib_search_path \" in\n\t*\" $i \"*)\n\t  i=\n\t  ;;\n\tesac\n\tif test -n \"$i\"; then\n\t  func_append tmp_libs \" $i\"\n\tfi\n      done\n      dependency_libs=$tmp_libs\n    done # for pass\n    if test prog = \"$linkmode\"; then\n      dlfiles=$newdlfiles\n    fi\n    if test prog = \"$linkmode\" || test lib = \"$linkmode\"; then\n      dlprefiles=$newdlprefiles\n    fi\n\n    case $linkmode in\n    oldlib)\n      if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n\tfunc_warning \"'-dlopen' is ignored for archives\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"'-l' and '-L' are ignored for archives\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"'-rpath' is ignored for archives\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"'-R' is ignored for archives\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info/-version-number' is ignored for archives\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for archives\"\n\n      test -n \"$export_symbols$export_symbols_regex\" && \\\n\tfunc_warning \"'-export-symbols' is ignored for archives\"\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=$output\n      func_append objs \"$old_deplibs\"\n      ;;\n\n    lib)\n      # Make sure we only generate libraries of the form 'libNAME.la'.\n      case $outputname in\n      lib*)\n\tfunc_stripname 'lib' '.la' \"$outputname\"\n\tname=$func_stripname_result\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval libname=\\\"$libname_spec\\\"\n\t;;\n      *)\n\ttest no = \"$module\" \\\n\t  && func_fatal_help \"libtool library '$output' must begin with 'lib'\"\n\n\tif test no != \"$need_lib_prefix\"; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  func_stripname '' '.la' \"$outputname\"\n\t  name=$func_stripname_result\n\t  eval shared_ext=\\\"$shrext_cmds\\\"\n\t  eval libname=\\\"$libname_spec\\\"\n\telse\n\t  func_stripname '' '.la' \"$outputname\"\n\t  libname=$func_stripname_result\n\tfi\n\t;;\n      esac\n\n      if test -n \"$objs\"; then\n\tif test pass_all != \"$deplibs_check_method\"; then\n\t  func_fatal_error \"cannot build libtool library '$output' from non-libtool objects on this host:$objs\"\n\telse\n\t  echo\n\t  $ECHO \"*** Warning: Linking the shared library $output against the non-libtool\"\n\t  $ECHO \"*** objects $objs is not portable!\"\n\t  func_append libobjs \" $objs\"\n\tfi\n      fi\n\n      test no = \"$dlself\" \\\n\t|| func_warning \"'-dlopen self' is ignored for libtool libraries\"\n\n      set dummy $rpath\n      shift\n      test 1 -lt \"$#\" \\\n\t&& func_warning \"ignoring multiple '-rpath's for a libtool library\"\n\n      install_libdir=$1\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test yes = \"$build_libtool_libs\"; then\n\t  # Building a libtool convenience library.\n\t  # Some compilers have problems with a '.al' extension so\n\t  # convenience libraries should have the same extension an\n\t  # archive normally would.\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\n\ttest -n \"$vinfo\" && \\\n\t  func_warning \"'-version-info/-version-number' is ignored for convenience libraries\"\n\n\ttest -n \"$release\" && \\\n\t  func_warning \"'-release' is ignored for convenience libraries\"\n      else\n\n\t# Parse the version information argument.\n\tsave_ifs=$IFS; IFS=:\n\tset dummy $vinfo 0 0 0\n\tshift\n\tIFS=$save_ifs\n\n\ttest -n \"$7\" && \\\n\t  func_fatal_help \"too many parameters to '-version-info'\"\n\n\t# convert absolute version numbers to libtool ages\n\t# this retains compatibility with .la files and attempts\n\t# to make the code below a bit more comprehensible\n\n\tcase $vinfo_number in\n\tyes)\n\t  number_major=$1\n\t  number_minor=$2\n\t  number_revision=$3\n\t  #\n\t  # There are really only two kinds -- those that\n\t  # use the current revision as the major version\n\t  # and those that subtract age and use age as\n\t  # a minor version.  But, then there is irix\n\t  # that has an extra 1 added just for fun\n\t  #\n\t  case $version_type in\n\t  # correct linux to gnu/linux during the next big refactor\n\t  darwin|freebsd-elf|linux|osf|windows|none)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=$number_minor\n\t    revision=$number_revision\n\t    ;;\n\t  freebsd-aout|qnx|sunos)\n\t    current=$number_major\n\t    revision=$number_minor\n\t    age=0\n\t    ;;\n\t  irix|nonstopux)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=$number_minor\n\t    revision=$number_minor\n\t    lt_irix_increment=no\n\t    ;;\n\t  esac\n\t  ;;\n\tno)\n\t  current=$1\n\t  revision=$2\n\t  age=$3\n\t  ;;\n\tesac\n\n\t# Check that each of the things are valid numbers.\n\tcase $current in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"CURRENT '$current' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $revision in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"REVISION '$revision' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $age in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"AGE '$age' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tif test \"$age\" -gt \"$current\"; then\n\t  func_error \"AGE '$age' is greater than the current interface number '$current'\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase $version_type in\n\tnone) ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  # Darwin ld doesn't like 0 for these options...\n\t  func_arith $current + 1\n\t  minor_current=$func_arith_result\n\t  xlcverstring=\"$wl-compatibility_version $wl$minor_current $wl-current_version $wl$minor_current.$revision\"\n\t  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n          # On Darwin other compilers\n          case $CC in\n              nagfor*)\n                  verstring=\"$wl-compatibility_version $wl$minor_current $wl-current_version $wl$minor_current.$revision\"\n                  ;;\n              *)\n                  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n                  ;;\n          esac\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=.$current\n\t  versuffix=.$current.$revision\n\t  ;;\n\n\tfreebsd-elf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  ;;\n\n\tirix | nonstopux)\n\t  if test no = \"$lt_irix_increment\"; then\n\t    func_arith $current - $age\n\t  else\n\t    func_arith $current - $age + 1\n\t  fi\n\t  major=$func_arith_result\n\n\t  case $version_type in\n\t    nonstopux) verstring_prefix=nonstopux ;;\n\t    *)         verstring_prefix=sgi ;;\n\t  esac\n\t  verstring=$verstring_prefix$major.$revision\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test 0 -ne \"$loop\"; do\n\t    func_arith $revision - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=$verstring_prefix$major.$iface:$verstring\n\t  done\n\n\t  # Before this point, $major must not contain '.'.\n\t  major=.$major\n\t  versuffix=$major.$revision\n\t  ;;\n\n\tlinux) # correct to gnu/linux during the next big refactor\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  ;;\n\n\tosf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=.$current.$age.$revision\n\t  verstring=$current.$age.$revision\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test 0 -ne \"$loop\"; do\n\t    func_arith $current - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=$verstring:$iface.0\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  func_append verstring \":$current.0\"\n\t  ;;\n\n\tqnx)\n\t  major=.$current\n\t  versuffix=.$current\n\t  ;;\n\n\tsco)\n\t  major=.$current\n\t  versuffix=.$current\n\t  ;;\n\n\tsunos)\n\t  major=.$current\n\t  versuffix=.$current.$revision\n\t  ;;\n\n\twindows)\n\t  # Use '-' rather than '.', since we only want one\n\t  # extension on DOS 8.3 file systems.\n\t  func_arith $current - $age\n\t  major=$func_arith_result\n\t  versuffix=-$major\n\t  ;;\n\n\t*)\n\t  func_fatal_configuration \"unknown library version type '$version_type'\"\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  case $version_type in\n\t  darwin)\n\t    # we can't check for \"0.0\" in archive_cmds due to quoting\n\t    # problems, so we reset it completely\n\t    verstring=\n\t    ;;\n\t  *)\n\t    verstring=0.0\n\t    ;;\n\t  esac\n\t  if test no = \"$need_version\"; then\n\t    versuffix=\n\t  else\n\t    versuffix=.0.0\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test yes,no = \"$avoid_version,$need_version\"; then\n\t  major=\n\t  versuffix=\n\t  verstring=\n\tfi\n\n\t# Check to see if the archive will have undefined symbols.\n\tif test yes = \"$allow_undefined\"; then\n\t  if test unsupported = \"$allow_undefined_flag\"; then\n\t    if test yes = \"$build_old_libs\"; then\n\t      func_warning \"undefined symbols not allowed in $host shared libraries; building static only\"\n\t      build_libtool_libs=no\n\t    else\n\t      func_fatal_error \"can't build $host shared library unless -no-undefined is specified\"\n\t    fi\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=$no_undefined_flag\n\tfi\n\n      fi\n\n      func_generate_dlsyms \"$libname\" \"$libname\" :\n      func_append libobjs \" $symfileobj\"\n      test \" \" = \"$libobjs\" && libobjs=\n\n      if test relink != \"$opt_mode\"; then\n\t# Remove our outputs, but don't remove object files since they\n\t# may have been created when compiling PIC objects.\n\tremovelist=\n\ttempremovelist=`$ECHO \"$output_objdir/*\"`\n\tfor p in $tempremovelist; do\n\t  case $p in\n\t    *.$objext | *.gcno)\n\t       ;;\n\t    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/$libname$release.*)\n\t       if test -n \"$precious_files_regex\"; then\n\t\t if $ECHO \"$p\" | $EGREP -e \"$precious_files_regex\" >/dev/null 2>&1\n\t\t then\n\t\t   continue\n\t\t fi\n\t       fi\n\t       func_append removelist \" $p\"\n\t       ;;\n\t    *) ;;\n\t  esac\n\tdone\n\ttest -n \"$removelist\" && \\\n\t  func_show_eval \"${RM}r \\$removelist\"\n      fi\n\n      # Now set the variables for building old libraries.\n      if test yes = \"$build_old_libs\" && test convenience != \"$build_libtool_libs\"; then\n\tfunc_append oldlibs \" $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.$libext$/d; $lo2o\" | $NL2SP`\n      fi\n\n      # Eliminate all temporary directories.\n      #for path in $notinst_path; do\n      #\tlib_search_path=`$ECHO \"$lib_search_path \" | $SED \"s% $path % %g\"`\n      #\tdeplibs=`$ECHO \"$deplibs \" | $SED \"s% -L$path % %g\"`\n      #\tdependency_libs=`$ECHO \"$dependency_libs \" | $SED \"s% -L$path % %g\"`\n      #done\n\n      if test -n \"$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  func_replace_sysroot \"$libdir\"\n\t  func_append temp_xrpath \" -R$func_replace_sysroot_result\"\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n\tif test yes != \"$hardcode_into_libs\" || test yes = \"$build_old_libs\"; then\n\t  dependency_libs=\"$temp_xrpath $dependency_libs\"\n\tfi\n      fi\n\n      # Make sure dlfiles contains only unique files that won't be dlpreopened\n      old_dlfiles=$dlfiles\n      dlfiles=\n      for lib in $old_dlfiles; do\n\tcase \" $dlprefiles $dlfiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlfiles \" $lib\" ;;\n\tesac\n      done\n\n      # Make sure dlprefiles contains only unique files\n      old_dlprefiles=$dlprefiles\n      dlprefiles=\n      for lib in $old_dlprefiles; do\n\tcase \"$dlprefiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlprefiles \" $lib\" ;;\n\tesac\n      done\n\n      if test yes = \"$build_libtool_libs\"; then\n\tif test -n \"$rpath\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # these systems don't actually have a c library (as such)!\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    ;;\n\t  *-*-netbsd*)\n\t    # Don't link with libc until the a.out ld.so is fixed.\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    ;;\n\t  *)\n\t    # Add libc to deplibs on all other systems if necessary.\n\t    if test yes = \"$build_libtool_need_lc\"; then\n\t      func_append deplibs \" -lc\"\n\t    fi\n\t    ;;\n\t  esac\n\tfi\n\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\n\tversuffix=\n\tmajor=\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase $deplibs_check_method in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behavior.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $opt_dry_run || $RM conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $opt_dry_run || $RM conftest\n\t  if $LTCC $LTCFLAGS -o conftest conftest.c $deplibs; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\tif test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\t  case \" $predeps $postdeps \" in\n\t\t  *\" $i \"*)\n\t\t    func_append newdeplibs \" $i\"\n\t\t    i=\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t\tif test -n \"$i\"; then\n\t\t  libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t  deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t  set dummy $deplib_matches; shift\n\t\t  deplib_match=$1\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0; then\n\t\t    func_append newdeplibs \" $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    echo\n\t\t    $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    echo \"*** shared version of the library, which I believe you do not have\"\n\t\t    echo \"*** because a test_compile did reveal that the linker did not use it for\"\n\t\t    echo \"*** its dynamic dependency list that programs get resolved with at runtime.\"\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  else\n\t    # Error occurred in the first compile.  Let's try to salvage\n\t    # the situation: Compile a separate program for each library.\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\t$opt_dry_run || $RM conftest\n\t\tif $LTCC $LTCFLAGS -o conftest conftest.c $i; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\t    case \" $predeps $postdeps \" in\n\t\t    *\" $i \"*)\n\t\t      func_append newdeplibs \" $i\"\n\t\t      i=\n\t\t      ;;\n\t\t    esac\n\t\t  fi\n\t\t  if test -n \"$i\"; then\n\t\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t    deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t    set dummy $deplib_matches; shift\n\t\t    deplib_match=$1\n\t\t    if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0; then\n\t\t      func_append newdeplibs \" $i\"\n\t\t    else\n\t\t      droppeddeps=yes\n\t\t      echo\n\t\t      $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t      echo \"*** I have the capability to make that library automatically link in when\"\n\t\t      echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t      echo \"*** shared version of the library, which you do not appear to have\"\n\t\t      echo \"*** because a test_compile did reveal that the linker did not use this one\"\n\t\t      echo \"*** as a dynamic dependency that programs can get resolved with at runtime.\"\n\t\t    fi\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  $ECHO \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  echo \"*** make it link in!  You will probably need to install it or some\"\n\t\t  echo \"*** library that it depends on before this library will be fully\"\n\t\t  echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method; shift\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tif test -n \"$file_magic_glob\"; then\n\t\t  libnameglob=`func_echo_all \"$libname\" | $SED -e $file_magic_glob`\n\t\telse\n\t\t  libnameglob=$libname\n\t\tfi\n\t\ttest yes = \"$want_nocaseglob\" && nocaseglob=`shopt -p nocaseglob`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  if test yes = \"$want_nocaseglob\"; then\n\t\t    shopt -s nocaseglob\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t    $nocaseglob\n\t\t  else\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t  fi\n\t\t  for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null |\n\t\t\t $GREP \" -> \" >/dev/null; then\n\t\t\tcontinue\n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=$potent_lib\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | $SED 's/.* -> //'`\n\t\t\tcase $potliblink in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=$potliblink;;\n\t\t\t*) potlib=`$ECHO \"$potlib\" | $SED 's|[^/]*$||'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval $file_magic_cmd \\\"\\$potlib\\\" 2>/dev/null |\n\t\t\t $SED -e 10q |\n\t\t\t $EGREP \"$file_magic_regex\" > /dev/null; then\n\t\t\tfunc_append newdeplibs \" $a_deplib\"\n\t\t\ta_deplib=\n\t\t\tbreak 2\n\t\t      fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\"; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for file magic test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a file magic. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tmatch_pattern*)\n\t  set dummy $deplibs_check_method; shift\n\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t    potlib=$potent_lib # see symlink-check above in file_magic test\n\t\t    if eval \"\\$ECHO \\\"$potent_lib\\\"\" 2>/dev/null | $SED 10q | \\\n\t\t       $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t      func_append newdeplibs \" $a_deplib\"\n\t\t      a_deplib=\n\t\t      break 2\n\t\t    fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\"; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for regex pattern test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a regex pattern. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\n\t  tmp_deplibs=`$ECHO \" $deplibs\" | $SED 's/ -lc$//; s/ -[LR][^ ]*//g'`\n\t  if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t    for i in $predeps $postdeps; do\n\t      # can't use Xsed below, because $i might contain '/'\n\t      tmp_deplibs=`$ECHO \" $tmp_deplibs\" | $SED \"s|$i||\"`\n\t    done\n\t  fi\n\t  case $tmp_deplibs in\n\t  *[!\\\t\\ ]*)\n\t    echo\n\t    if test none = \"$deplibs_check_method\"; then\n\t      echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tcase $host in\n\t*-*-rhapsody* | *-*-darwin1.[012])\n\t  # On Rhapsody replace the C library with the System framework\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t  ;;\n\tesac\n\n\tif test yes = \"$droppeddeps\"; then\n\t  if test yes = \"$module\"; then\n\t    echo\n\t    echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    $ECHO \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    echo \"*** a static module, that should work as long as the dlopening\"\n\t    echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      echo\n\t      echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      echo \"*** lists from a program, using 'nm' or equivalent, but libtool could\"\n\t      echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      echo \"*** 'nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test no = \"$build_old_libs\"; then\n\t      oldlibs=$output_objdir/$libname.$libext\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    echo \"*** automatically added whenever a program is linked with this library\"\n\t    echo \"*** or is declared to -dlopen it.\"\n\n\t    if test no = \"$allow_undefined\"; then\n\t      echo\n\t      echo \"*** Since this library must not contain undefined symbols,\"\n\t      echo \"*** because either the platform does not support them or\"\n\t      echo \"*** it was explicitly requested with -no-undefined,\"\n\t      echo \"*** libtool will only create a static version of it.\"\n\t      if test no = \"$build_old_libs\"; then\n\t\toldlibs=$output_objdir/$libname.$libext\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n      # Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n      case $host in\n\t*-*-darwin*)\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  new_inherited_linker_flags=`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  deplibs=`$ECHO \" $deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  ;;\n      esac\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      deplibs=$new_libs\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n\n      # Test again, we may have decided not to build it any more\n      if test yes = \"$build_libtool_libs\"; then\n\t# Remove $wl instances when linking with ld.\n\t# FIXME: should test the right _cmds variable.\n\tcase $archive_cmds in\n\t  *\\$LD\\ *) wl= ;;\n        esac\n\tif test yes = \"$hardcode_into_libs\"; then\n\t  # Hardcode the library paths\n\t  hardcode_libdirs=\n\t  dep_rpath=\n\t  rpath=$finalize_rpath\n\t  test relink = \"$opt_mode\" || rpath=$compile_rpath$rpath\n\t  for libdir in $rpath; do\n\t    if test -n \"$hardcode_libdir_flag_spec\"; then\n\t      if test -n \"$hardcode_libdir_separator\"; then\n\t\tfunc_replace_sysroot \"$libdir\"\n\t\tlibdir=$func_replace_sysroot_result\n\t\tif test -z \"$hardcode_libdirs\"; then\n\t\t  hardcode_libdirs=$libdir\n\t\telse\n\t\t  # Just accumulate the unique libdirs.\n\t\t  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t\t  *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t    ;;\n\t\t  *)\n\t\t    func_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t      else\n\t\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t\tfunc_append dep_rpath \" $flag\"\n\t      fi\n\t    elif test -n \"$runpath_var\"; then\n\t      case \"$perm_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append perm_rpath \" $libdir\" ;;\n\t      esac\n\t    fi\n\t  done\n\t  # Substitute the hardcoded libdirs into the rpath.\n\t  if test -n \"$hardcode_libdir_separator\" &&\n\t     test -n \"$hardcode_libdirs\"; then\n\t    libdir=$hardcode_libdirs\n\t    eval \"dep_rpath=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t  fi\n\t  if test -n \"$runpath_var\" && test -n \"$perm_rpath\"; then\n\t    # We should set the runpath_var.\n\t    rpath=\n\t    for dir in $perm_rpath; do\n\t      func_append rpath \"$dir:\"\n\t    done\n\t    eval \"$runpath_var='$rpath\\$$runpath_var'; export $runpath_var\"\n\t  fi\n\t  test -n \"$dep_rpath\" && deplibs=\"$dep_rpath $deplibs\"\n\tfi\n\n\tshlibpath=$finalize_shlibpath\n\ttest relink = \"$opt_mode\" || shlibpath=$compile_shlibpath$shlibpath\n\tif test -n \"$shlibpath\"; then\n\t  eval \"$shlibpath_var='$shlibpath\\$$shlibpath_var'; export $shlibpath_var\"\n\tfi\n\n\t# Get the real and link names of the library.\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval library_names=\\\"$library_names_spec\\\"\n\tset dummy $library_names\n\tshift\n\trealname=$1\n\tshift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval soname=\\\"$soname_spec\\\"\n\telse\n\t  soname=$realname\n\tfi\n\tif test -z \"$dlname\"; then\n\t  dlname=$soname\n\tfi\n\n\tlib=$output_objdir/$realname\n\tlinknames=\n\tfor link\n\tdo\n\t  func_append linknames \" $link\"\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$ECHO \"$libobjs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\ttest \"X$libobjs\" = \"X \" && libobjs=\n\n\tdelfiles=\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $opt_dry_run || cp \"$export_symbols\" \"$output_objdir/$libname.uexp\"\n\t  export_symbols=$output_objdir/$libname.uexp\n\t  func_append delfiles \" $export_symbols\"\n\tfi\n\n\torig_export_symbols=\n\tcase $host_os in\n\tcygwin* | mingw* | cegcc*)\n\t  if test -n \"$export_symbols\" && test -z \"$export_symbols_regex\"; then\n\t    # exporting using user supplied symfile\n\t    func_dll_def_p \"$export_symbols\" || {\n\t      # and it's NOT already a .def file. Must figure out\n\t      # which of the given symbols are data symbols and tag\n\t      # them as such. So, trigger use of export_symbols_cmds.\n\t      # export_symbols gets reassigned inside the \"prepare\n\t      # the list of exported symbols\" if statement, so the\n\t      # include_expsyms logic still works.\n\t      orig_export_symbols=$export_symbols\n\t      export_symbols=\n\t      always_export_symbols=yes\n\t    }\n\t  fi\n\t  ;;\n\tesac\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test yes = \"$always_export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t    func_verbose \"generating symbol list for '$libname.la'\"\n\t    export_symbols=$output_objdir/$libname.exp\n\t    $opt_dry_run || $RM $export_symbols\n\t    cmds=$export_symbols_cmds\n\t    save_ifs=$IFS; IFS='~'\n\t    for cmd1 in $cmds; do\n\t      IFS=$save_ifs\n\t      # Take the normal branch if the nm_file_list_spec branch\n\t      # doesn't work or if tool conversion is not needed.\n\t      case $nm_file_list_spec~$to_tool_file_cmd in\n\t\t*~func_convert_file_noop | *~func_convert_file_msys_to_w32 | ~*)\n\t\t  try_normal_branch=yes\n\t\t  eval cmd=\\\"$cmd1\\\"\n\t\t  func_len \" $cmd\"\n\t\t  len=$func_len_result\n\t\t  ;;\n\t\t*)\n\t\t  try_normal_branch=no\n\t\t  ;;\n\t      esac\n\t      if test yes = \"$try_normal_branch\" \\\n\t\t && { test \"$len\" -lt \"$max_cmd_len\" \\\n\t\t      || test \"$max_cmd_len\" -le -1; }\n\t      then\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\tskipped_export=false\n\t      elif test -n \"$nm_file_list_spec\"; then\n\t\tfunc_basename \"$output\"\n\t\toutput_la=$func_basename_result\n\t\tsave_libobjs=$libobjs\n\t\tsave_output=$output\n\t\toutput=$output_objdir/$output_la.nm\n\t\tfunc_to_tool_file \"$output\"\n\t\tlibobjs=$nm_file_list_spec$func_to_tool_file_result\n\t\tfunc_append delfiles \" $output\"\n\t\tfunc_verbose \"creating $NM input file list: $output\"\n\t\tfor obj in $save_libobjs; do\n\t\t  func_to_tool_file \"$obj\"\n\t\t  $ECHO \"$func_to_tool_file_result\"\n\t\tdone > \"$output\"\n\t\teval cmd=\\\"$cmd1\\\"\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\toutput=$save_output\n\t\tlibobjs=$save_libobjs\n\t\tskipped_export=false\n\t      else\n\t\t# The command line is too long to execute in one step.\n\t\tfunc_verbose \"using reloadable object file for export list...\"\n\t\tskipped_export=:\n\t\t# Break out early, otherwise skipped_export may be\n\t\t# set to false by a later but shorter cmd.\n\t\tbreak\n\t      fi\n\t    done\n\t    IFS=$save_ifs\n\t    if test -n \"$export_symbols_regex\" && test : != \"$skipped_export\"; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  tmp_export_symbols=$export_symbols\n\t  test -n \"$orig_export_symbols\" && tmp_export_symbols=$orig_export_symbols\n\t  $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\tfi\n\n\tif test : != \"$skipped_export\" && test -n \"$orig_export_symbols\"; then\n\t  # The given exports_symbols file has to be filtered, so filter it.\n\t  func_verbose \"filter symbol list for '$libname.la' to tag DATA exports\"\n\t  # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t  # 's' commands, which not all seds can handle. GNU sed should be fine\n\t  # though. Also, the filter scales superlinearly with the number of\n\t  # global variables. join(1) would be nice here, but unfortunately\n\t  # isn't a blessed tool.\n\t  $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t  func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t  export_symbols=$output_objdir/$libname.def\n\t  $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\tfi\n\n\ttmp_deplibs=\n\tfor test_deplib in $deplibs; do\n\t  case \" $convenience \" in\n\t  *\" $test_deplib \"*) ;;\n\t  *)\n\t    func_append tmp_deplibs \" $test_deplib\"\n\t    ;;\n\t  esac\n\tdone\n\tdeplibs=$tmp_deplibs\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\" &&\n\t    test yes = \"$compiler_needs_object\" &&\n\t    test -z \"$libobjs\"; then\n\t    # extract the archives, so we have objects to list.\n\t    # TODO: could optimize this to just extract one archive.\n\t    whole_archive_flag_spec=\n\t  fi\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  else\n\t    gentop=$output_objdir/${outputname}x\n\t    func_append generated \" $gentop\"\n\n\t    func_extract_archives $gentop $convenience\n\t    func_append libobjs \" $func_extract_archives_result\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\tfi\n\n\tif test yes = \"$thread_safe\" && test -n \"$thread_safe_flag_spec\"; then\n\t  eval flag=\\\"$thread_safe_flag_spec\\\"\n\t  func_append linker_flags \" $flag\"\n\tfi\n\n\t# Make a backup of the uninstalled library when relinking\n\tif test relink = \"$opt_mode\"; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}U && $MV $realname ${realname}U)' || exit $?\n\tfi\n\n\t# Do each of the archive commands.\n\tif test yes = \"$module\" && test -n \"$module_cmds\"; then\n\t  if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$module_expsym_cmds\\\"\n\t    cmds=$module_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$module_cmds\\\"\n\t    cmds=$module_cmds\n\t  fi\n\telse\n\t  if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$archive_expsym_cmds\\\"\n\t    cmds=$archive_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$archive_cmds\\\"\n\t    cmds=$archive_cmds\n\t  fi\n\tfi\n\n\tif test : != \"$skipped_export\" &&\n\t   func_len \" $test_cmds\" &&\n\t   len=$func_len_result &&\n\t   test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  :\n\telse\n\t  # The command line is too long to link in one step, link piecewise\n\t  # or, if using GNU ld and skipped_export is not :, use a linker\n\t  # script.\n\n\t  # Save the value of $output and $libobjs because we want to\n\t  # use them later.  If we have whole_archive_flag_spec, we\n\t  # want to use save_libobjs as it was before\n\t  # whole_archive_flag_spec was expanded, because we can't\n\t  # assume the linker understands whole_archive_flag_spec.\n\t  # This may have to be revisited, in case too many\n\t  # convenience libraries get linked in and end up exceeding\n\t  # the spec.\n\t  if test -z \"$convenience\" || test -z \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t  fi\n\t  save_output=$output\n\t  func_basename \"$output\"\n\t  output_la=$func_basename_result\n\n\t  # Clear the reloadable object creation command queue and\n\t  # initialize k to one.\n\t  test_cmds=\n\t  concat_cmds=\n\t  objlist=\n\t  last_robj=\n\t  k=1\n\n\t  if test -n \"$save_libobjs\" && test : != \"$skipped_export\" && test yes = \"$with_gnu_ld\"; then\n\t    output=$output_objdir/$output_la.lnkscript\n\t    func_verbose \"creating GNU ld script: $output\"\n\t    echo 'INPUT (' > $output\n\t    for obj in $save_libobjs\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    echo ')' >> $output\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$func_to_tool_file_result\n\t  elif test -n \"$save_libobjs\" && test : != \"$skipped_export\" && test -n \"$file_list_spec\"; then\n\t    output=$output_objdir/$output_la.lnk\n\t    func_verbose \"creating linker input file list: $output\"\n\t    : > $output\n\t    set x $save_libobjs\n\t    shift\n\t    firstobj=\n\t    if test yes = \"$compiler_needs_object\"; then\n\t      firstobj=\"$1 \"\n\t      shift\n\t    fi\n\t    for obj\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$firstobj\\\"$file_list_spec$func_to_tool_file_result\\\"\n\t  else\n\t    if test -n \"$save_libobjs\"; then\n\t      func_verbose \"creating reloadable object files...\"\n\t      output=$output_objdir/$output_la-$k.$objext\n\t      eval test_cmds=\\\"$reload_cmds\\\"\n\t      func_len \" $test_cmds\"\n\t      len0=$func_len_result\n\t      len=$len0\n\n\t      # Loop over the list of objects to be linked.\n\t      for obj in $save_libobjs\n\t      do\n\t\tfunc_len \" $obj\"\n\t\tfunc_arith $len + $func_len_result\n\t\tlen=$func_arith_result\n\t\tif test -z \"$objlist\" ||\n\t\t   test \"$len\" -lt \"$max_cmd_len\"; then\n\t\t  func_append objlist \" $obj\"\n\t\telse\n\t\t  # The command $test_cmds is almost too long, add a\n\t\t  # command to the queue.\n\t\t  if test 1 -eq \"$k\"; then\n\t\t    # The first file doesn't have a previous command to add.\n\t\t    reload_objs=$objlist\n\t\t    eval concat_cmds=\\\"$reload_cmds\\\"\n\t\t  else\n\t\t    # All subsequent reloadable object files will link in\n\t\t    # the last one created.\n\t\t    reload_objs=\"$objlist $last_robj\"\n\t\t    eval concat_cmds=\\\"\\$concat_cmds~$reload_cmds~\\$RM $last_robj\\\"\n\t\t  fi\n\t\t  last_robj=$output_objdir/$output_la-$k.$objext\n\t\t  func_arith $k + 1\n\t\t  k=$func_arith_result\n\t\t  output=$output_objdir/$output_la-$k.$objext\n\t\t  objlist=\" $obj\"\n\t\t  func_len \" $last_robj\"\n\t\t  func_arith $len0 + $func_len_result\n\t\t  len=$func_arith_result\n\t\tfi\n\t      done\n\t      # Handle the remaining objects by creating one last\n\t      # reloadable object file.  All subsequent reloadable object\n\t      # files will link in the last one created.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      reload_objs=\"$objlist $last_robj\"\n\t      eval concat_cmds=\\\"\\$concat_cmds$reload_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t        eval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t      func_append delfiles \" $output\"\n\n\t    else\n\t      output=\n\t    fi\n\n\t    ${skipped_export-false} && {\n\t      func_verbose \"generating symbol list for '$libname.la'\"\n\t      export_symbols=$output_objdir/$libname.exp\n\t      $opt_dry_run || $RM $export_symbols\n\t      libobjs=$output\n\t      # Append the command to create the export file.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$export_symbols_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t\teval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t    }\n\n\t    test -n \"$save_libobjs\" &&\n\t      func_verbose \"creating a temporary reloadable object file: $output\"\n\n\t    # Loop through the commands generated above and execute them.\n\t    save_ifs=$IFS; IFS='~'\n\t    for cmd in $concat_cmds; do\n\t      IFS=$save_ifs\n\t      $opt_quiet || {\n\t\t  func_quote_for_expand \"$cmd\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t      }\n\t      $opt_dry_run || eval \"$cmd\" || {\n\t\tlt_exit=$?\n\n\t\t# Restore the uninstalled library and exit\n\t\tif test relink = \"$opt_mode\"; then\n\t\t  ( cd \"$output_objdir\" && \\\n\t\t    $RM \"${realname}T\" && \\\n\t\t    $MV \"${realname}U\" \"$realname\" )\n\t\tfi\n\n\t\texit $lt_exit\n\t      }\n\t    done\n\t    IFS=$save_ifs\n\n\t    if test -n \"$export_symbols_regex\" && ${skipped_export-false}; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\n          ${skipped_export-false} && {\n\t    if test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t      tmp_export_symbols=$export_symbols\n\t      test -n \"$orig_export_symbols\" && tmp_export_symbols=$orig_export_symbols\n\t      $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\t    fi\n\n\t    if test -n \"$orig_export_symbols\"; then\n\t      # The given exports_symbols file has to be filtered, so filter it.\n\t      func_verbose \"filter symbol list for '$libname.la' to tag DATA exports\"\n\t      # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t      # 's' commands, which not all seds can handle. GNU sed should be fine\n\t      # though. Also, the filter scales superlinearly with the number of\n\t      # global variables. join(1) would be nice here, but unfortunately\n\t      # isn't a blessed tool.\n\t      $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t      func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t      export_symbols=$output_objdir/$libname.def\n\t      $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\t    fi\n\t  }\n\n\t  libobjs=$output\n\t  # Restore the value of output.\n\t  output=$save_output\n\n\t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\t  # Expand the library linking commands again to reset the\n\t  # value of $libobjs for piecewise linking.\n\n\t  # Do each of the archive commands.\n\t  if test yes = \"$module\" && test -n \"$module_cmds\"; then\n\t    if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t      cmds=$module_expsym_cmds\n\t    else\n\t      cmds=$module_cmds\n\t    fi\n\t  else\n\t    if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t      cmds=$archive_expsym_cmds\n\t    else\n\t      cmds=$archive_cmds\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$delfiles\"; then\n\t  # Append the command to remove temporary files to $cmds.\n\t  eval cmds=\\\"\\$cmds~\\$RM $delfiles\\\"\n\tfi\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append libobjs \" $func_extract_archives_result\"\n\t  test \"X$libobjs\" = \"X \" && libobjs=\n\tfi\n\n\tsave_ifs=$IFS; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=$sp$nl\n\t  eval cmd=\\\"$cmd\\\"\n\t  IFS=$save_ifs\n\t  $opt_quiet || {\n\t    func_quote_for_expand \"$cmd\"\n\t    eval \"func_echo $func_quote_for_expand_result\"\n\t  }\n\t  $opt_dry_run || eval \"$cmd\" || {\n\t    lt_exit=$?\n\n\t    # Restore the uninstalled library and exit\n\t    if test relink = \"$opt_mode\"; then\n\t      ( cd \"$output_objdir\" && \\\n\t        $RM \"${realname}T\" && \\\n\t\t$MV \"${realname}U\" \"$realname\" )\n\t    fi\n\n\t    exit $lt_exit\n\t  }\n\tdone\n\tIFS=$save_ifs\n\n\t# Restore the uninstalled library and exit\n\tif test relink = \"$opt_mode\"; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}T && $MV $realname ${realname}T && $MV ${realname}U $realname)' || exit $?\n\n\t  if test -n \"$convenience\"; then\n\t    if test -z \"$whole_archive_flag_spec\"; then\n\t      func_show_eval '${RM}r \"$gentop\"'\n\t    fi\n\t  fi\n\n\t  exit $EXIT_SUCCESS\n\tfi\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    func_show_eval '(cd \"$output_objdir\" && $RM \"$linkname\" && $LN_S \"$realname\" \"$linkname\")' 'exit $?'\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test yes = \"$module\" || test yes = \"$export_dynamic\"; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=$soname\n\tfi\n      fi\n      ;;\n\n    obj)\n      if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n\tfunc_warning \"'-dlopen' is ignored for objects\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"'-l' and '-L' are ignored for objects\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"'-rpath' is ignored for objects\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"'-R' is ignored for objects\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info' is ignored for objects\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for objects\"\n\n      case $output in\n      *.lo)\n\ttest -n \"$objs$old_deplibs\" && \\\n\t  func_fatal_error \"cannot build library object '$output' from non-libtool objects\"\n\n\tlibobj=$output\n\tfunc_lo2o \"$libobj\"\n\tobj=$func_lo2o_result\n\t;;\n      *)\n\tlibobj=\n\tobj=$output\n\t;;\n      esac\n\n      # Delete the old objects.\n      $opt_dry_run || $RM $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # if reload_cmds runs $LD directly, get rid of -Wl from\n      # whole_archive_flag_spec and hope we can get by with turning comma\n      # into space.\n      case $reload_cmds in\n        *\\$LD[\\ \\$]*) wl= ;;\n      esac\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval tmp_whole_archive_flags=\\\"$whole_archive_flag_spec\\\"\n\t  test -n \"$wl\" || tmp_whole_archive_flags=`$ECHO \"$tmp_whole_archive_flags\" | $SED 's|,| |g'`\n\t  reload_conv_objs=$reload_objs\\ $tmp_whole_archive_flags\n\telse\n\t  gentop=$output_objdir/${obj}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $convenience\n\t  reload_conv_objs=\"$reload_objs $func_extract_archives_result\"\n\tfi\n      fi\n\n      # If we're not building shared, we need to use non_pic_objs\n      test yes = \"$build_libtool_libs\" || libobjs=$non_pic_objects\n\n      # Create the old-style object.\n      reload_objs=$objs$old_deplibs' '`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.$libext$/d; /\\.lib$/d; $lo2o\" | $NL2SP`' '$reload_conv_objs\n\n      output=$obj\n      func_execute_cmds \"$reload_cmds\" 'exit $?'\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      test yes = \"$build_libtool_libs\" || {\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t# $show \"echo timestamp > $libobj\"\n\t# $opt_dry_run || eval \"echo timestamp > $libobj\" || exit $?\n\texit $EXIT_SUCCESS\n      }\n\n      if test -n \"$pic_flag\" || test default != \"$pic_mode\"; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=$libobj\n\tfunc_execute_cmds \"$reload_cmds\" 'exit $?'\n      fi\n\n      if test -n \"$gentop\"; then\n\tfunc_show_eval '${RM}r \"$gentop\"'\n      fi\n\n      exit $EXIT_SUCCESS\n      ;;\n\n    prog)\n      case $host in\n\t*cygwin*) func_stripname '' '.exe' \"$output\"\n\t          output=$func_stripname_result.exe;;\n      esac\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info' is ignored for programs\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for programs\"\n\n      $preload \\\n\t&& test unknown,unknown,unknown = \"$dlopen_support,$dlopen_self,$dlopen_self_static\" \\\n\t&& func_warning \"'LT_INIT([dlopen])' not used. Assuming no dlopen support.\"\n\n      case $host in\n      *-*-rhapsody* | *-*-darwin1.[012])\n\t# On Rhapsody replace the C library is the System framework\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t;;\n      esac\n\n      case $host in\n      *-*-darwin*)\n\t# Don't allow lazy linking, it breaks C++ global constructors\n\t# But is supposedly fixed on 10.4 or later (yay!).\n\tif test CXX = \"$tagname\"; then\n\t  case ${MACOSX_DEPLOYMENT_TARGET-10.0} in\n\t    10.[0123])\n\t      func_append compile_command \" $wl-bind_at_load\"\n\t      func_append finalize_command \" $wl-bind_at_load\"\n\t    ;;\n\t  esac\n\tfi\n\t# Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t;;\n      esac\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $compile_deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $compile_deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      compile_deplibs=$new_libs\n\n\n      func_append compile_command \" $compile_deplibs\"\n      func_append finalize_command \" $finalize_deplibs\"\n\n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=$libdir\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$libdir\" | $SED -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$libdir:\"*) ;;\n\t  ::) dllsearchpath=$libdir;;\n\t  *) func_append dllsearchpath \":$libdir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=$hardcode_libdirs\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      compile_rpath=$rpath\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=$libdir\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=$hardcode_libdirs\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      finalize_rpath=$rpath\n\n      if test -n \"$libobjs\" && test yes = \"$build_old_libs\"; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$ECHO \"$compile_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$ECHO \"$finalize_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n      fi\n\n      func_generate_dlsyms \"$outputname\" \"@PROGRAM@\" false\n\n      # template prelinking step\n      if test -n \"$prelink_cmds\"; then\n\tfunc_execute_cmds \"$prelink_cmds\" 'exit $?'\n      fi\n\n      wrappers_required=:\n      case $host in\n      *cegcc* | *mingw32ce*)\n        # Disable wrappers for cegcc and mingw32ce hosts, we are cross compiling anyway.\n        wrappers_required=false\n        ;;\n      *cygwin* | *mingw* )\n        test yes = \"$build_libtool_libs\" || wrappers_required=false\n        ;;\n      *)\n        if test no = \"$need_relink\" || test yes != \"$build_libtool_libs\"; then\n          wrappers_required=false\n        fi\n        ;;\n      esac\n      $wrappers_required || {\n\t# Replace the output file specification.\n\tcompile_command=`$ECHO \"$compile_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=$compile_command$compile_rpath\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\texit_status=0\n\tfunc_show_eval \"$link_command\" 'exit_status=$?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\t# Delete the generated files.\n\tif test -f \"$output_objdir/${outputname}S.$objext\"; then\n\t  func_show_eval '$RM \"$output_objdir/${outputname}S.$objext\"'\n\tfi\n\n\texit $exit_status\n      }\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test yes = \"$no_install\"; then\n\t# We don't need to create a wrapper script.\n\tlink_command=$compile_var$compile_command$compile_rpath\n\t# Replace the output file specification.\n\tlink_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\t# Delete the old output file.\n\t$opt_dry_run || $RM $output\n\t# Link the executable and exit\n\tfunc_show_eval \"$link_command\" 'exit $?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      case $hardcode_action,$fast_install in\n        relink,*)\n\t  # Fast installation is not supported\n\t  link_command=$compile_var$compile_command$compile_rpath\n\t  relink_command=$finalize_var$finalize_command$finalize_rpath\n\n\t  func_warning \"this platform does not like uninstalled shared libraries\"\n\t  func_warning \"'$output' will be relinked during installation\"\n\t  ;;\n        *,yes)\n\t  link_command=$finalize_var$compile_command$finalize_rpath\n\t  relink_command=`$ECHO \"$compile_var$compile_command$compile_rpath\" | $SED 's%@OUTPUT@%\\$progdir/\\$file%g'`\n          ;;\n\t*,no)\n\t  link_command=$compile_var$compile_command$compile_rpath\n\t  relink_command=$finalize_var$finalize_command$finalize_rpath\n          ;;\n\t*,needless)\n\t  link_command=$finalize_var$compile_command$finalize_rpath\n\t  relink_command=\n          ;;\n      esac\n\n      # Replace the output file specification.\n      link_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n\n      # Delete the old output files.\n      $opt_dry_run || $RM $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      func_show_eval \"$link_command\" 'exit $?'\n\n      if test -n \"$postlink_cmds\"; then\n\tfunc_to_tool_file \"$output_objdir/$outputname\"\n\tpostlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\tfunc_execute_cmds \"$postlink_cmds\" 'exit $?'\n      fi\n\n      # Now create the wrapper script.\n      func_verbose \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\t# Preserve any variables that may affect compiler behavior\n\tfor var in $variables_saved_for_relink; do\n\t  if eval test -z \\\"\\${$var+set}\\\"; then\n\t    relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\t  elif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t    relink_command=\"$var=; export $var; $relink_command\"\n\t  else\n\t    func_quote_for_eval \"$var_value\"\n\t    relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\t  fi\n\tdone\n\trelink_command=\"(cd `pwd`; $relink_command)\"\n\trelink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if not in dry run mode.\n      $opt_dry_run || {\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) func_stripname '' '.exe' \"$output\"\n\t         output=$func_stripname_result ;;\n\tesac\n\t# test for cygwin because mv fails w/o .exe extensions\n\tcase $host in\n\t  *cygwin*)\n\t    exeext=.exe\n\t    func_stripname '' '.exe' \"$outputname\"\n\t    outputname=$func_stripname_result ;;\n\t  *) exeext= ;;\n\tesac\n\tcase $host in\n\t  *cygwin* | *mingw* )\n\t    func_dirname_and_basename \"$output\" \"\" \".\"\n\t    output_name=$func_basename_result\n\t    output_path=$func_dirname_result\n\t    cwrappersource=$output_path/$objdir/lt-$output_name.c\n\t    cwrapper=$output_path/$output_name.exe\n\t    $RM $cwrappersource $cwrapper\n\t    trap \"$RM $cwrappersource $cwrapper; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_cwrapperexe_src > $cwrappersource\n\n\t    # The wrapper executable is built using the $host compiler,\n\t    # because it contains $host paths and files. If cross-\n\t    # compiling, it, like the target executable, must be\n\t    # executed on the $host or under an emulation environment.\n\t    $opt_dry_run || {\n\t      $LTCC $LTCFLAGS -o $cwrapper $cwrappersource\n\t      $STRIP $cwrapper\n\t    }\n\n\t    # Now, create the wrapper script for func_source use:\n\t    func_ltwrapper_scriptname $cwrapper\n\t    $RM $func_ltwrapper_scriptname_result\n\t    trap \"$RM $func_ltwrapper_scriptname_result; exit $EXIT_FAILURE\" 1 2 15\n\t    $opt_dry_run || {\n\t      # note: this script will not be executed, so do not chmod.\n\t      if test \"x$build\" = \"x$host\"; then\n\t\t$cwrapper --lt-dump-script > $func_ltwrapper_scriptname_result\n\t      else\n\t\tfunc_emit_wrapper no > $func_ltwrapper_scriptname_result\n\t      fi\n\t    }\n\t  ;;\n\t  * )\n\t    $RM $output\n\t    trap \"$RM $output; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_wrapper no > $output\n\t    chmod +x $output\n\t  ;;\n\tesac\n      }\n      exit $EXIT_SUCCESS\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      case $build_libtool_libs in\n        convenience)\n\t  oldobjs=\"$libobjs_save $symfileobj\"\n\t  addlibs=$convenience\n\t  build_libtool_libs=no\n\t  ;;\n\tmodule)\n\t  oldobjs=$libobjs_save\n\t  addlibs=$old_convenience\n\t  build_libtool_libs=no\n          ;;\n\t*)\n\t  oldobjs=\"$old_deplibs $non_pic_objects\"\n\t  $preload && test -f \"$symfileobj\" \\\n\t    && func_append oldobjs \" $symfileobj\"\n\t  addlibs=$old_convenience\n\t  ;;\n      esac\n\n      if test -n \"$addlibs\"; then\n\tgentop=$output_objdir/${outputname}x\n\tfunc_append generated \" $gentop\"\n\n\tfunc_extract_archives $gentop $addlibs\n\tfunc_append oldobjs \" $func_extract_archives_result\"\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test yes = \"$build_libtool_libs\"; then\n\tcmds=$old_archive_from_new_cmds\n      else\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append oldobjs \" $func_extract_archives_result\"\n\tfi\n\n\t# POSIX demands no paths to be encoded in archives.  We have\n\t# to avoid creating archives with duplicate basenames if we\n\t# might have to extract them afterwards, e.g., when creating a\n\t# static archive out of a convenience library, or when linking\n\t# the entirety of a libtool archive into another (currently\n\t# not supported by libtool).\n\tif (for obj in $oldobjs\n\t    do\n\t      func_basename \"$obj\"\n\t      $ECHO \"$func_basename_result\"\n\t    done | sort | sort -uc >/dev/null 2>&1); then\n\t  :\n\telse\n\t  echo \"copying selected object files to avoid basename conflicts...\"\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\t  func_mkdir_p \"$gentop\"\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  counter=1\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_basename \"$obj\"\n\t    objbase=$func_basename_result\n\t    case \" $oldobjs \" in\n\t    \" \") oldobjs=$obj ;;\n\t    *[\\ /]\"$objbase \"*)\n\t      while :; do\n\t\t# Make sure we don't pick an alternate name that also\n\t\t# overlaps.\n\t\tnewobj=lt$counter-$objbase\n\t\tfunc_arith $counter + 1\n\t\tcounter=$func_arith_result\n\t\tcase \" $oldobjs \" in\n\t\t*[\\ /]\"$newobj \"*) ;;\n\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n\t\tesac\n\t      done\n\t      func_show_eval \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n\t      func_append oldobjs \" $gentop/$newobj\"\n\t      ;;\n\t    *) func_append oldobjs \" $obj\" ;;\n\t    esac\n\t  done\n\tfi\n\tfunc_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n\ttool_oldlib=$func_to_tool_file_result\n\teval cmds=\\\"$old_archive_cmds\\\"\n\n\tfunc_len \" $cmds\"\n\tlen=$func_len_result\n\tif test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  cmds=$old_archive_cmds\n\telif test -n \"$archiver_list_spec\"; then\n\t  func_verbose \"using command file archive linking...\"\n\t  for obj in $oldobjs\n\t  do\n\t    func_to_tool_file \"$obj\"\n\t    $ECHO \"$func_to_tool_file_result\"\n\t  done > $output_objdir/$libname.libcmd\n\t  func_to_tool_file \"$output_objdir/$libname.libcmd\"\n\t  oldobjs=\" $archiver_list_spec$func_to_tool_file_result\"\n\t  cmds=$old_archive_cmds\n\telse\n\t  # the command line is too long to link in one step, link in parts\n\t  func_verbose \"using piecewise archive linking...\"\n\t  save_RANLIB=$RANLIB\n\t  RANLIB=:\n\t  objlist=\n\t  concat_cmds=\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  # Is there a better way of finding the last object in the list?\n\t  for obj in $save_oldobjs\n\t  do\n\t    last_oldobj=$obj\n\t  done\n\t  eval test_cmds=\\\"$old_archive_cmds\\\"\n\t  func_len \" $test_cmds\"\n\t  len0=$func_len_result\n\t  len=$len0\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_len \" $obj\"\n\t    func_arith $len + $func_len_result\n\t    len=$func_arith_result\n\t    func_append objlist \" $obj\"\n\t    if test \"$len\" -lt \"$max_cmd_len\"; then\n\t      :\n\t    else\n\t      # the above command should be used before it gets too long\n\t      oldobjs=$objlist\n\t      if test \"$obj\" = \"$last_oldobj\"; then\n\t\tRANLIB=$save_RANLIB\n\t      fi\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$old_archive_cmds\\\"\n\t      objlist=\n\t      len=$len0\n\t    fi\n\t  done\n\t  RANLIB=$save_RANLIB\n\t  oldobjs=$objlist\n\t  if test -z \"$oldobjs\"; then\n\t    eval cmds=\\\"\\$concat_cmds\\\"\n\t  else\n\t    eval cmds=\\\"\\$concat_cmds~\\$old_archive_cmds\\\"\n\t  fi\n\tfi\n      fi\n      func_execute_cmds \"$cmds\" 'exit $?'\n    done\n\n    test -n \"$generated\" && \\\n      func_show_eval \"${RM}r$generated\"\n\n    # Now create the libtool archive.\n    case $output in\n    *.la)\n      old_library=\n      test yes = \"$build_old_libs\" && old_library=$libname.$libext\n      func_verbose \"creating $output\"\n\n      # Preserve any variables that may affect compiler behavior\n      for var in $variables_saved_for_relink; do\n\tif eval test -z \\\"\\${$var+set}\\\"; then\n\t  relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\telif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t  relink_command=\"$var=; export $var; $relink_command\"\n\telse\n\t  func_quote_for_eval \"$var_value\"\n\t  relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\tfi\n      done\n      # Quote the link command for shipping.\n      relink_command=\"(cd `pwd`; $SHELL \\\"$progpath\\\" $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)\"\n      relink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      if test yes = \"$hardcode_automatic\"; then\n\trelink_command=\n      fi\n\n      # Only create the output if not a dry run.\n      $opt_dry_run || {\n\tfor installed in no yes; do\n\t  if test yes = \"$installed\"; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=$output_objdir/${outputname}i\n\t    # Replace all uninstalled libtool libraries with the installed ones\n\t    newdependency_libs=\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      *.la)\n\t\tfunc_basename \"$deplib\"\n\t\tname=$func_basename_result\n\t\tfunc_resolve_sysroot \"$deplib\"\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $func_resolve_sysroot_result`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$deplib' is not a valid libtool archive\"\n\t\tfunc_append newdependency_libs \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      -L*)\n\t\tfunc_stripname -L '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -L$func_replace_sysroot_result\"\n\t\t;;\n\t      -R*)\n\t\tfunc_stripname -R '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -R$func_replace_sysroot_result\"\n\t\t;;\n\t      *) func_append newdependency_libs \" $deplib\" ;;\n\t      esac\n\t    done\n\t    dependency_libs=$newdependency_libs\n\t    newdlfiles=\n\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t      *.la)\n\t        func_basename \"$lib\"\n\t\tname=$func_basename_result\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlfiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      *) func_append newdlfiles \" $lib\" ;;\n\t      esac\n\t    done\n\t    dlfiles=$newdlfiles\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t      *.la)\n\t\t# Only pass preopened files to the pseudo-archive (for\n\t\t# eventual linking with the app. that links it) if we\n\t\t# didn't already link the preopened objects directly into\n\t\t# the library:\n\t\tfunc_basename \"$lib\"\n\t\tname=$func_basename_result\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlprefiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      esac\n\t    done\n\t    dlprefiles=$newdlprefiles\n\t  else\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=$lib ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlfiles \" $abs\"\n\t    done\n\t    dlfiles=$newdlfiles\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=$lib ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlprefiles \" $abs\"\n\t    done\n\t    dlprefiles=$newdlprefiles\n\t  fi\n\t  $RM $output\n\t  # place dlname in correct position for cygwin\n\t  # In fact, it would be nice if we could use this code for all target\n\t  # systems that can't hard-code library paths into their executables\n\t  # and that have no shared library path variable independent of PATH,\n\t  # but it turns out we can't easily determine that from inspecting\n\t  # libtool variables, so we have to hard-code the OSs to which it\n\t  # applies here; at the moment, that means platforms that use the PE\n\t  # object format with DLL files.  See the long comment at the top of\n\t  # tests/bindir.at for full details.\n\t  tdlname=$dlname\n\t  case $host,$output,$installed,$module,$dlname in\n\t    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll | *cegcc*,*lai,yes,no,*.dll)\n\t      # If a -bindir argument was supplied, place the dll there.\n\t      if test -n \"$bindir\"; then\n\t\tfunc_relative_path \"$install_libdir\" \"$bindir\"\n\t\ttdlname=$func_relative_path_result/$dlname\n\t      else\n\t\t# Otherwise fall back on heuristic.\n\t\ttdlname=../bin/$dlname\n\t      fi\n\t      ;;\n\t  esac\n\t  $ECHO > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$tdlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Linker flags that cannot go in dependency_libs.\ninherited_linker_flags='$new_inherited_linker_flags'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Names of additional weak libraries provided by this library\nweak_library_names='$weak_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=$module\n\n# Files to dlopen/dlpreopen\ndlopen='$dlfiles'\ndlpreopen='$dlprefiles'\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\"\n\t  if test no,yes = \"$installed,$need_relink\"; then\n\t    $ECHO >> $output \"\\\nrelink_command=\\\"$relink_command\\\"\"\n\t  fi\n\tdone\n      }\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      func_show_eval '( cd \"$output_objdir\" && $RM \"$outputname\" && $LN_S \"../$outputname\" \"$outputname\" )' 'exit $?'\n      ;;\n    esac\n    exit $EXIT_SUCCESS\n}\n\nif test link = \"$opt_mode\" || test relink = \"$opt_mode\"; then\n  func_mode_link ${1+\"$@\"}\nfi\n\n\n# func_mode_uninstall arg...\nfunc_mode_uninstall ()\n{\n    $debug_cmd\n\n    RM=$nonopt\n    files=\n    rmforce=false\n    exit_status=0\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=$magic\n\n    for arg\n    do\n      case $arg in\n      -f) func_append RM \" $arg\"; rmforce=: ;;\n      -*) func_append RM \" $arg\" ;;\n      *) func_append files \" $arg\" ;;\n      esac\n    done\n\n    test -z \"$RM\" && \\\n      func_fatal_help \"you must specify an RM program\"\n\n    rmdirs=\n\n    for file in $files; do\n      func_dirname \"$file\" \"\" \".\"\n      dir=$func_dirname_result\n      if test . = \"$dir\"; then\n\todir=$objdir\n      else\n\todir=$dir/$objdir\n      fi\n      func_basename \"$file\"\n      name=$func_basename_result\n      test uninstall = \"$opt_mode\" && odir=$dir\n\n      # Remember odir for removal later, being careful to avoid duplicates\n      if test clean = \"$opt_mode\"; then\n\tcase \" $rmdirs \" in\n\t  *\" $odir \"*) ;;\n\t  *) func_append rmdirs \" $odir\" ;;\n\tesac\n      fi\n\n      # Don't error if the file doesn't exist and rm -f was used.\n      if { test -L \"$file\"; } >/dev/null 2>&1 ||\n\t { test -h \"$file\"; } >/dev/null 2>&1 ||\n\t test -f \"$file\"; then\n\t:\n      elif test -d \"$file\"; then\n\texit_status=1\n\tcontinue\n      elif $rmforce; then\n\tcontinue\n      fi\n\n      rmfiles=$file\n\n      case $name in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif func_lalib_p \"$file\"; then\n\t  func_source $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    func_append rmfiles \" $odir/$n\"\n\t  done\n\t  test -n \"$old_library\" && func_append rmfiles \" $odir/$old_library\"\n\n\t  case $opt_mode in\n\t  clean)\n\t    case \" $library_names \" in\n\t    *\" $dlname \"*) ;;\n\t    *) test -n \"$dlname\" && func_append rmfiles \" $odir/$dlname\" ;;\n\t    esac\n\t    test -n \"$libdir\" && func_append rmfiles \" $odir/$name $odir/${name}i\"\n\t    ;;\n\t  uninstall)\n\t    if test -n \"$library_names\"; then\n\t      # Do each command in the postuninstall commands.\n\t      func_execute_cmds \"$postuninstall_cmds\" '$rmforce || exit_status=1'\n\t    fi\n\n\t    if test -n \"$old_library\"; then\n\t      # Do each command in the old_postuninstall commands.\n\t      func_execute_cmds \"$old_postuninstall_cmds\" '$rmforce || exit_status=1'\n\t    fi\n\t    # FIXME: should reinstall the best remaining shared library.\n\t    ;;\n\t  esac\n\tfi\n\t;;\n\n      *.lo)\n\t# Possibly a libtool object, so verify it.\n\tif func_lalib_p \"$file\"; then\n\n\t  # Read the .lo file\n\t  func_source $dir/$name\n\n\t  # Add PIC object to the list of files to remove.\n\t  if test -n \"$pic_object\" && test none != \"$pic_object\"; then\n\t    func_append rmfiles \" $dir/$pic_object\"\n\t  fi\n\n\t  # Add non-PIC object to the list of files to remove.\n\t  if test -n \"$non_pic_object\" && test none != \"$non_pic_object\"; then\n\t    func_append rmfiles \" $dir/$non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *)\n\tif test clean = \"$opt_mode\"; then\n\t  noexename=$name\n\t  case $file in\n\t  *.exe)\n\t    func_stripname '' '.exe' \"$file\"\n\t    file=$func_stripname_result\n\t    func_stripname '' '.exe' \"$name\"\n\t    noexename=$func_stripname_result\n\t    # $file with .exe has already been added to rmfiles,\n\t    # add $file without .exe\n\t    func_append rmfiles \" $file\"\n\t    ;;\n\t  esac\n\t  # Do a test to see if this is a libtool program.\n\t  if func_ltwrapper_p \"$file\"; then\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      relink_command=\n\t      func_source $func_ltwrapper_scriptname_result\n\t      func_append rmfiles \" $func_ltwrapper_scriptname_result\"\n\t    else\n\t      relink_command=\n\t      func_source $dir/$noexename\n\t    fi\n\n\t    # note $name still contains .exe if it was in $file originally\n\t    # as does the version of $file that was added into $rmfiles\n\t    func_append rmfiles \" $odir/$name $odir/${name}S.$objext\"\n\t    if test yes = \"$fast_install\" && test -n \"$relink_command\"; then\n\t      func_append rmfiles \" $odir/lt-$name\"\n\t    fi\n\t    if test \"X$noexename\" != \"X$name\"; then\n\t      func_append rmfiles \" $odir/lt-$noexename.c\"\n\t    fi\n\t  fi\n\tfi\n\t;;\n      esac\n      func_show_eval \"$RM $rmfiles\" 'exit_status=1'\n    done\n\n    # Try to remove the $objdir's in the directories where we deleted files\n    for dir in $rmdirs; do\n      if test -d \"$dir\"; then\n\tfunc_show_eval \"rmdir $dir >/dev/null 2>&1\"\n      fi\n    done\n\n    exit $exit_status\n}\n\nif test uninstall = \"$opt_mode\" || test clean = \"$opt_mode\"; then\n  func_mode_uninstall ${1+\"$@\"}\nfi\n\ntest -z \"$opt_mode\" && {\n  help=$generic_help\n  func_fatal_help \"you must specify a MODE\"\n}\n\ntest -z \"$exec_cmd\" && \\\n  func_fatal_help \"invalid operation mode '$opt_mode'\"\n\nif test -n \"$exec_cmd\"; then\n  eval exec \"$exec_cmd\"\n  exit $EXIT_FAILURE\nfi\n\nexit $exit_status\n\n\n# The TAGs below are defined such that we never get into a situation\n# where we disable both kinds of libraries.  Given conflicting\n# choices, we go for a static library, that is the most portable,\n# since we can't tell whether shared libraries were disabled because\n# the user asked for that or because the platform doesn't support\n# them.  This is particularly important on AIX, because we don't\n# support having both static and shared libraries enabled at the same\n# time on that platform, so we default to a shared-only configuration.\n# If a disable-shared tag is given, we'll fallback to a static-only\n# configuration.  But we'll never go from static-only to shared-only.\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-shared\nbuild_libtool_libs=no\nbuild_old_libs=yes\n# ### END LIBTOOL TAG CONFIG: disable-shared\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-static\nbuild_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`\n# ### END LIBTOOL TAG CONFIG: disable-static\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/aclocal.m4": "# generated automatically by aclocal 1.15 -*- Autoconf -*-\n\n# Copyright (C) 1996-2014 Free Software Foundation, Inc.\n\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n# PARTICULAR PURPOSE.\n\nm4_ifndef([AC_CONFIG_MACRO_DIRS], [m4_defun([_AM_CONFIG_MACRO_DIRS], [])m4_defun([AC_CONFIG_MACRO_DIRS], [_AM_CONFIG_MACRO_DIRS($@)])])\nm4_ifndef([AC_AUTOCONF_VERSION],\n  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl\nm4_if(m4_defn([AC_AUTOCONF_VERSION]), [2.69],,\n[m4_warning([this file was generated for autoconf 2.69.\nYou have another version of autoconf.  It may work, but is not guaranteed to.\nIf you have problems, you may need to regenerate the build system entirely.\nTo do so, use the procedure documented by the package, typically 'autoreconf'.])])\n\n# libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-\n#\n#   Copyright (C) 1996-2001, 2003-2015 Free Software Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\nm4_define([_LT_COPYING], [dnl\n# Copyright (C) 2014 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program or library that is built\n# using GNU Libtool, you may include this file under the  same\n# distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n])\n\n# serial 58 LT_INIT\n\n\n# LT_PREREQ(VERSION)\n# ------------------\n# Complain and exit if this libtool version is less that VERSION.\nm4_defun([LT_PREREQ],\n[m4_if(m4_version_compare(m4_defn([LT_PACKAGE_VERSION]), [$1]), -1,\n       [m4_default([$3],\n\t\t   [m4_fatal([Libtool version $1 or higher is required],\n\t\t             63)])],\n       [$2])])\n\n\n# _LT_CHECK_BUILDDIR\n# ------------------\n# Complain if the absolute build directory name contains unusual characters\nm4_defun([_LT_CHECK_BUILDDIR],\n[case `pwd` in\n  *\\ * | *\\\t*)\n    AC_MSG_WARN([Libtool does not cope well with whitespace in `pwd`]) ;;\nesac\n])\n\n\n# LT_INIT([OPTIONS])\n# ------------------\nAC_DEFUN([LT_INIT],\n[AC_PREREQ([2.62])dnl We use AC_PATH_PROGS_FEATURE_CHECK\nAC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl\nAC_BEFORE([$0], [LT_LANG])dnl\nAC_BEFORE([$0], [LT_OUTPUT])dnl\nAC_BEFORE([$0], [LTDL_INIT])dnl\nm4_require([_LT_CHECK_BUILDDIR])dnl\n\ndnl Autoconf doesn't catch unexpanded LT_ macros by default:\nm4_pattern_forbid([^_?LT_[A-Z_]+$])dnl\nm4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl\ndnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4\ndnl unless we require an AC_DEFUNed macro:\nAC_REQUIRE([LTOPTIONS_VERSION])dnl\nAC_REQUIRE([LTSUGAR_VERSION])dnl\nAC_REQUIRE([LTVERSION_VERSION])dnl\nAC_REQUIRE([LTOBSOLETE_VERSION])dnl\nm4_require([_LT_PROG_LTMAIN])dnl\n\n_LT_SHELL_INIT([SHELL=${CONFIG_SHELL-/bin/sh}])\n\ndnl Parse OPTIONS\n_LT_SET_OPTIONS([$0], [$1])\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=$ltmain\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\nAC_SUBST(LIBTOOL)dnl\n\n_LT_SETUP\n\n# Only expand once:\nm4_define([LT_INIT])\n])# LT_INIT\n\n# Old names:\nAU_ALIAS([AC_PROG_LIBTOOL], [LT_INIT])\nAU_ALIAS([AM_PROG_LIBTOOL], [LT_INIT])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PROG_LIBTOOL], [])\ndnl AC_DEFUN([AM_PROG_LIBTOOL], [])\n\n\n# _LT_PREPARE_CC_BASENAME\n# -----------------------\nm4_defun([_LT_PREPARE_CC_BASENAME], [\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nfunc_cc_basename ()\n{\n    for cc_temp in @S|@*\"\"; do\n      case $cc_temp in\n        compile | *[[\\\\/]]compile | ccache | *[[\\\\/]]ccache ) ;;\n        distcc | *[[\\\\/]]distcc | purify | *[[\\\\/]]purify ) ;;\n        \\-*) ;;\n        *) break;;\n      esac\n    done\n    func_cc_basename_result=`$ECHO \"$cc_temp\" | $SED \"s%.*/%%; s%^$host_alias-%%\"`\n}\n])# _LT_PREPARE_CC_BASENAME\n\n\n# _LT_CC_BASENAME(CC)\n# -------------------\n# It would be clearer to call AC_REQUIREs from _LT_PREPARE_CC_BASENAME,\n# but that macro is also expanded into generated libtool script, which\n# arranges for $SED and $ECHO to be set by different means.\nm4_defun([_LT_CC_BASENAME],\n[m4_require([_LT_PREPARE_CC_BASENAME])dnl\nAC_REQUIRE([_LT_DECL_SED])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\nfunc_cc_basename $1\ncc_basename=$func_cc_basename_result\n])\n\n\n# _LT_FILEUTILS_DEFAULTS\n# ----------------------\n# It is okay to use these file commands and assume they have been set\n# sensibly after 'm4_require([_LT_FILEUTILS_DEFAULTS])'.\nm4_defun([_LT_FILEUTILS_DEFAULTS],\n[: ${CP=\"cp -f\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n])# _LT_FILEUTILS_DEFAULTS\n\n\n# _LT_SETUP\n# ---------\nm4_defun([_LT_SETUP],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_REQUIRE([_LT_PREPARE_SED_QUOTE_VARS])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\n\n_LT_DECL([], [PATH_SEPARATOR], [1], [The PATH separator for the build system])dnl\ndnl\n_LT_DECL([], [host_alias], [0], [The host system])dnl\n_LT_DECL([], [host], [0])dnl\n_LT_DECL([], [host_os], [0])dnl\ndnl\n_LT_DECL([], [build_alias], [0], [The build system])dnl\n_LT_DECL([], [build], [0])dnl\n_LT_DECL([], [build_os], [0])dnl\ndnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\ndnl\nAC_REQUIRE([AC_PROG_LN_S])dnl\ntest -z \"$LN_S\" && LN_S=\"ln -s\"\n_LT_DECL([], [LN_S], [1], [Whether we need soft or hard links])dnl\ndnl\nAC_REQUIRE([LT_CMD_MAX_LEN])dnl\n_LT_DECL([objext], [ac_objext], [0], [Object file suffix (normally \"o\")])dnl\n_LT_DECL([], [exeext], [0], [Executable file suffix (normally \"\")])dnl\ndnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_PATH_CONVERSION_FUNCTIONS])dnl\nm4_require([_LT_CMD_RELOAD])dnl\nm4_require([_LT_CHECK_MAGIC_METHOD])dnl\nm4_require([_LT_CHECK_SHAREDLIB_FROM_LINKLIB])dnl\nm4_require([_LT_CMD_OLD_ARCHIVE])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_WITH_SYSROOT])dnl\nm4_require([_LT_CMD_TRUNCATE])dnl\n\n_LT_CONFIG_LIBTOOL_INIT([\n# See if we are running on zsh, and set the options that allow our\n# commands through without removal of \\ escapes INIT.\nif test -n \"\\${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n])\nif test -n \"${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n\n_LT_CHECK_OBJDIR\n\nm4_require([_LT_TAG_COMPILER])dnl\n\ncase $host_os in\naix3*)\n  # AIX sometimes has problems with the GCC collect2 program.  For some\n  # reason, if we set the COLLECT_NAMES environment variable, the problems\n  # vanish in a puff of smoke.\n  if test set != \"${COLLECT_NAMES+set}\"; then\n    COLLECT_NAMES=\n    export COLLECT_NAMES\n  fi\n  ;;\nesac\n\n# Global variables:\nofile=libtool\ncan_build_shared=yes\n\n# All known linkers require a '.a' archive for static linking (except MSVC,\n# which needs '.lib').\nlibext=a\n\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n\nold_CC=$CC\nold_CFLAGS=$CFLAGS\n\n# Set sane defaults for various variables\ntest -z \"$CC\" && CC=cc\ntest -z \"$LTCC\" && LTCC=$CC\ntest -z \"$LTCFLAGS\" && LTCFLAGS=$CFLAGS\ntest -z \"$LD\" && LD=ld\ntest -z \"$ac_objext\" && ac_objext=o\n\n_LT_CC_BASENAME([$compiler])\n\n# Only perform the check for file, if the check method requires it\ntest -z \"$MAGIC_CMD\" && MAGIC_CMD=file\ncase $deplibs_check_method in\nfile_magic*)\n  if test \"$file_magic_cmd\" = '$MAGIC_CMD'; then\n    _LT_PATH_MAGIC\n  fi\n  ;;\nesac\n\n# Use C for the default configuration in the libtool script\nLT_SUPPORTED_TAG([CC])\n_LT_LANG_C_CONFIG\n_LT_LANG_DEFAULT_CONFIG\n_LT_CONFIG_COMMANDS\n])# _LT_SETUP\n\n\n# _LT_PREPARE_SED_QUOTE_VARS\n# --------------------------\n# Define a few sed substitution that help us do robust quoting.\nm4_defun([_LT_PREPARE_SED_QUOTE_VARS],\n[# Backslashify metacharacters that are still active within\n# double-quoted strings.\nsed_quote_subst='s/\\([[\"`$\\\\]]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([[\"`\\\\]]\\)/\\\\\\1/g'\n\n# Sed substitution to delay expansion of an escaped shell variable in a\n# double_quote_subst'ed string.\ndelay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n\n# Sed substitution to delay expansion of an escaped single quote.\ndelay_single_quote_subst='s/'\\''/'\\'\\\\\\\\\\\\\\'\\''/g'\n\n# Sed substitution to avoid accidental globbing in evaled expressions\nno_glob_subst='s/\\*/\\\\\\*/g'\n])\n\n# _LT_PROG_LTMAIN\n# ---------------\n# Note that this code is called both from 'configure', and 'config.status'\n# now that we use AC_CONFIG_COMMANDS to generate libtool.  Notably,\n# 'config.status' has no value for ac_aux_dir unless we are using Automake,\n# so we pass a copy along to make sure it has a sensible value anyway.\nm4_defun([_LT_PROG_LTMAIN],\n[m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([ltmain.sh])])dnl\n_LT_CONFIG_LIBTOOL_INIT([ac_aux_dir='$ac_aux_dir'])\nltmain=$ac_aux_dir/ltmain.sh\n])# _LT_PROG_LTMAIN\n\n\n\n# So that we can recreate a full libtool script including additional\n# tags, we accumulate the chunks of code to send to AC_CONFIG_COMMANDS\n# in macros and then make a single call at the end using the 'libtool'\n# label.\n\n\n# _LT_CONFIG_LIBTOOL_INIT([INIT-COMMANDS])\n# ----------------------------------------\n# Register INIT-COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL_INIT],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_INIT],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_INIT])\n\n\n# _LT_CONFIG_LIBTOOL([COMMANDS])\n# ------------------------------\n# Register COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_COMMANDS],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS])\n\n\n# _LT_CONFIG_SAVE_COMMANDS([COMMANDS], [INIT_COMMANDS])\n# -----------------------------------------------------\nm4_defun([_LT_CONFIG_SAVE_COMMANDS],\n[_LT_CONFIG_LIBTOOL([$1])\n_LT_CONFIG_LIBTOOL_INIT([$2])\n])\n\n\n# _LT_FORMAT_COMMENT([COMMENT])\n# -----------------------------\n# Add leading comment marks to the start of each line, and a trailing\n# full-stop to the whole comment if one is not present already.\nm4_define([_LT_FORMAT_COMMENT],\n[m4_ifval([$1], [\nm4_bpatsubst([m4_bpatsubst([$1], [^ *], [# ])],\n              [['`$\\]], [\\\\\\&])]m4_bmatch([$1], [[!?.]$], [], [.])\n)])\n\n\n\n\n\n# _LT_DECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION], [IS-TAGGED?])\n# -------------------------------------------------------------------\n# CONFIGNAME is the name given to the value in the libtool script.\n# VARNAME is the (base) name used in the configure script.\n# VALUE may be 0, 1 or 2 for a computed quote escaped value based on\n# VARNAME.  Any other value will be used directly.\nm4_define([_LT_DECL],\n[lt_if_append_uniq([lt_decl_varnames], [$2], [, ],\n    [lt_dict_add_subkey([lt_decl_dict], [$2], [libtool_name],\n\t[m4_ifval([$1], [$1], [$2])])\n    lt_dict_add_subkey([lt_decl_dict], [$2], [value], [$3])\n    m4_ifval([$4],\n\t[lt_dict_add_subkey([lt_decl_dict], [$2], [description], [$4])])\n    lt_dict_add_subkey([lt_decl_dict], [$2],\n\t[tagged?], [m4_ifval([$5], [yes], [no])])])\n])\n\n\n# _LT_TAGDECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION])\n# --------------------------------------------------------\nm4_define([_LT_TAGDECL], [_LT_DECL([$1], [$2], [$3], [$4], [yes])])\n\n\n# lt_decl_tag_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_tag_varnames],\n[_lt_decl_filter([tagged?], [yes], $@)])\n\n\n# _lt_decl_filter(SUBKEY, VALUE, [SEPARATOR], [VARNAME1..])\n# ---------------------------------------------------------\nm4_define([_lt_decl_filter],\n[m4_case([$#],\n  [0], [m4_fatal([$0: too few arguments: $#])],\n  [1], [m4_fatal([$0: too few arguments: $#: $1])],\n  [2], [lt_dict_filter([lt_decl_dict], [$1], [$2], [], lt_decl_varnames)],\n  [3], [lt_dict_filter([lt_decl_dict], [$1], [$2], [$3], lt_decl_varnames)],\n  [lt_dict_filter([lt_decl_dict], $@)])[]dnl\n])\n\n\n# lt_decl_quote_varnames([SEPARATOR], [VARNAME1...])\n# --------------------------------------------------\nm4_define([lt_decl_quote_varnames],\n[_lt_decl_filter([value], [1], $@)])\n\n\n# lt_decl_dquote_varnames([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_dquote_varnames],\n[_lt_decl_filter([value], [2], $@)])\n\n\n# lt_decl_varnames_tagged([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_varnames_tagged],\n[m4_assert([$# <= 2])dnl\n_$0(m4_quote(m4_default([$1], [[, ]])),\n    m4_ifval([$2], [[$2]], [m4_dquote(lt_decl_tag_varnames)]),\n    m4_split(m4_normalize(m4_quote(_LT_TAGS)), [ ]))])\nm4_define([_lt_decl_varnames_tagged],\n[m4_ifval([$3], [lt_combine([$1], [$2], [_], $3)])])\n\n\n# lt_decl_all_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_all_varnames],\n[_$0(m4_quote(m4_default([$1], [[, ]])),\n     m4_if([$2], [],\n\t   m4_quote(lt_decl_varnames),\n\tm4_quote(m4_shift($@))))[]dnl\n])\nm4_define([_lt_decl_all_varnames],\n[lt_join($@, lt_decl_varnames_tagged([$1],\n\t\t\tlt_decl_tag_varnames([[, ]], m4_shift($@))))dnl\n])\n\n\n# _LT_CONFIG_STATUS_DECLARE([VARNAME])\n# ------------------------------------\n# Quote a variable value, and forward it to 'config.status' so that its\n# declaration there will have the same value as in 'configure'.  VARNAME\n# must have a single quote delimited value for this to work.\nm4_define([_LT_CONFIG_STATUS_DECLARE],\n[$1='`$ECHO \"$][$1\" | $SED \"$delay_single_quote_subst\"`'])\n\n\n# _LT_CONFIG_STATUS_DECLARATIONS\n# ------------------------------\n# We delimit libtool config variables with single quotes, so when\n# we write them to config.status, we have to be sure to quote all\n# embedded single quotes properly.  In configure, this macro expands\n# each variable declared with _LT_DECL (and _LT_TAGDECL) into:\n#\n#    <var>='`$ECHO \"$<var>\" | $SED \"$delay_single_quote_subst\"`'\nm4_defun([_LT_CONFIG_STATUS_DECLARATIONS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_all_varnames),\n    [m4_n([_LT_CONFIG_STATUS_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAGS\n# ----------------\n# Output comment and list of tags supported by the script\nm4_defun([_LT_LIBTOOL_TAGS],\n[_LT_FORMAT_COMMENT([The names of the tagged configurations supported by this script])dnl\navailable_tags='_LT_TAGS'dnl\n])\n\n\n# _LT_LIBTOOL_DECLARE(VARNAME, [TAG])\n# -----------------------------------\n# Extract the dictionary values for VARNAME (optionally with TAG) and\n# expand to a commented shell variable setting:\n#\n#    # Some comment about what VAR is for.\n#    visible_name=$lt_internal_name\nm4_define([_LT_LIBTOOL_DECLARE],\n[_LT_FORMAT_COMMENT(m4_quote(lt_dict_fetch([lt_decl_dict], [$1],\n\t\t\t\t\t   [description])))[]dnl\nm4_pushdef([_libtool_name],\n    m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [libtool_name])))[]dnl\nm4_case(m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [value])),\n    [0], [_libtool_name=[$]$1],\n    [1], [_libtool_name=$lt_[]$1],\n    [2], [_libtool_name=$lt_[]$1],\n    [_libtool_name=lt_dict_fetch([lt_decl_dict], [$1], [value])])[]dnl\nm4_ifval([$2], [_$2])[]m4_popdef([_libtool_name])[]dnl\n])\n\n\n# _LT_LIBTOOL_CONFIG_VARS\n# -----------------------\n# Produce commented declarations of non-tagged libtool config variables\n# suitable for insertion in the LIBTOOL CONFIG section of the 'libtool'\n# script.  Tagged libtool config variables (even for the LIBTOOL CONFIG\n# section) are produced by _LT_LIBTOOL_TAG_VARS.\nm4_defun([_LT_LIBTOOL_CONFIG_VARS],\n[m4_foreach([_lt_var],\n    m4_quote(_lt_decl_filter([tagged?], [no], [], lt_decl_varnames)),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAG_VARS(TAG)\n# -------------------------\nm4_define([_LT_LIBTOOL_TAG_VARS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_tag_varnames),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var, [$1])])])])\n\n\n# _LT_TAGVAR(VARNAME, [TAGNAME])\n# ------------------------------\nm4_define([_LT_TAGVAR], [m4_ifval([$2], [$1_$2], [$1])])\n\n\n# _LT_CONFIG_COMMANDS\n# -------------------\n# Send accumulated output to $CONFIG_STATUS.  Thanks to the lists of\n# variables for single and double quote escaping we saved from calls\n# to _LT_DECL, we can put quote escaped variables declarations\n# into 'config.status', and then the shell code to quote escape them in\n# for loops in 'config.status'.  Finally, any additional code accumulated\n# from calls to _LT_CONFIG_LIBTOOL_INIT is expanded.\nm4_defun([_LT_CONFIG_COMMANDS],\n[AC_PROVIDE_IFELSE([LT_OUTPUT],\n\tdnl If the libtool generation code has been placed in $CONFIG_LT,\n\tdnl instead of duplicating it all over again into config.status,\n\tdnl then we will have config.status run $CONFIG_LT later, so it\n\tdnl needs to know what name is stored there:\n        [AC_CONFIG_COMMANDS([libtool],\n            [$SHELL $CONFIG_LT || AS_EXIT(1)], [CONFIG_LT='$CONFIG_LT'])],\n    dnl If the libtool generation code is destined for config.status,\n    dnl expand the accumulated commands and init code now:\n    [AC_CONFIG_COMMANDS([libtool],\n        [_LT_OUTPUT_LIBTOOL_COMMANDS], [_LT_OUTPUT_LIBTOOL_COMMANDS_INIT])])\n])#_LT_CONFIG_COMMANDS\n\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS_INIT],\n[\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nsed_quote_subst='$sed_quote_subst'\ndouble_quote_subst='$double_quote_subst'\ndelay_variable_subst='$delay_variable_subst'\n_LT_CONFIG_STATUS_DECLARATIONS\nLTCC='$LTCC'\nLTCFLAGS='$LTCFLAGS'\ncompiler='$compiler_DEFAULT'\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$[]1\n_LTECHO_EOF'\n}\n\n# Quote evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_quote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED \\\\\"\\\\\\$sed_quote_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n# Double-quote double-evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_dquote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED -e \\\\\"\\\\\\$double_quote_subst\\\\\" -e \\\\\"\\\\\\$sed_quote_subst\\\\\" -e \\\\\"\\\\\\$delay_variable_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n_LT_OUTPUT_LIBTOOL_INIT\n])\n\n# _LT_GENERATED_FILE_INIT(FILE, [COMMENT])\n# ------------------------------------\n# Generate a child script FILE with all initialization necessary to\n# reuse the environment learned by the parent script, and make the\n# file executable.  If COMMENT is supplied, it is inserted after the\n# '#!' sequence but before initialization text begins.  After this\n# macro, additional text can be appended to FILE to form the body of\n# the child script.  The macro ends with non-zero status if the\n# file could not be fully written (such as if the disk is full).\nm4_ifdef([AS_INIT_GENERATED],\n[m4_defun([_LT_GENERATED_FILE_INIT],[AS_INIT_GENERATED($@)])],\n[m4_defun([_LT_GENERATED_FILE_INIT],\n[m4_require([AS_PREPARE])]dnl\n[m4_pushdef([AS_MESSAGE_LOG_FD])]dnl\n[lt_write_fail=0\ncat >$1 <<_ASEOF || lt_write_fail=1\n#! $SHELL\n# Generated by $as_me.\n$2\nSHELL=\\${CONFIG_SHELL-$SHELL}\nexport SHELL\n_ASEOF\ncat >>$1 <<\\_ASEOF || lt_write_fail=1\nAS_SHELL_SANITIZE\n_AS_PREPARE\nexec AS_MESSAGE_FD>&1\n_ASEOF\ntest 0 = \"$lt_write_fail\" && chmod +x $1[]dnl\nm4_popdef([AS_MESSAGE_LOG_FD])])])# _LT_GENERATED_FILE_INIT\n\n# LT_OUTPUT\n# ---------\n# This macro allows early generation of the libtool script (before\n# AC_OUTPUT is called), incase it is used in configure for compilation\n# tests.\nAC_DEFUN([LT_OUTPUT],\n[: ${CONFIG_LT=./config.lt}\nAC_MSG_NOTICE([creating $CONFIG_LT])\n_LT_GENERATED_FILE_INIT([\"$CONFIG_LT\"],\n[# Run this file to recreate a libtool stub with the current configuration.])\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nlt_cl_silent=false\nexec AS_MESSAGE_LOG_FD>>config.log\n{\n  echo\n  AS_BOX([Running $as_me.])\n} >&AS_MESSAGE_LOG_FD\n\nlt_cl_help=\"\\\n'$as_me' creates a local libtool stub from the current configuration,\nfor use in further configure time tests before the real libtool is\ngenerated.\n\nUsage: $[0] [[OPTIONS]]\n\n  -h, --help      print this help, then exit\n  -V, --version   print version number, then exit\n  -q, --quiet     do not print progress messages\n  -d, --debug     don't remove temporary files\n\nReport bugs to <bug-libtool@gnu.org>.\"\n\nlt_cl_version=\"\\\nm4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl\nm4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])\nconfigured by $[0], generated by m4_PACKAGE_STRING.\n\nCopyright (C) 2011 Free Software Foundation, Inc.\nThis config.lt script is free software; the Free Software Foundation\ngives unlimited permision to copy, distribute and modify it.\"\n\nwhile test 0 != $[#]\ndo\n  case $[1] in\n    --version | --v* | -V )\n      echo \"$lt_cl_version\"; exit 0 ;;\n    --help | --h* | -h )\n      echo \"$lt_cl_help\"; exit 0 ;;\n    --debug | --d* | -d )\n      debug=: ;;\n    --quiet | --q* | --silent | --s* | -q )\n      lt_cl_silent=: ;;\n\n    -*) AC_MSG_ERROR([unrecognized option: $[1]\nTry '$[0] --help' for more information.]) ;;\n\n    *) AC_MSG_ERROR([unrecognized argument: $[1]\nTry '$[0] --help' for more information.]) ;;\n  esac\n  shift\ndone\n\nif $lt_cl_silent; then\n  exec AS_MESSAGE_FD>/dev/null\nfi\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<_LTEOF\n_LT_OUTPUT_LIBTOOL_COMMANDS_INIT\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nAC_MSG_NOTICE([creating $ofile])\n_LT_OUTPUT_LIBTOOL_COMMANDS\nAS_EXIT(0)\n_LTEOF\nchmod +x \"$CONFIG_LT\"\n\n# configure is writing to config.log, but config.lt does its own redirection,\n# appending to config.log, which fails on DOS, as config.log is still kept\n# open by configure.  Here we exec the FD to /dev/null, effectively closing\n# config.log, so it can be properly (re)opened and appended to by config.lt.\nlt_cl_success=:\ntest yes = \"$silent\" &&\n  lt_config_lt_args=\"$lt_config_lt_args --quiet\"\nexec AS_MESSAGE_LOG_FD>/dev/null\n$SHELL \"$CONFIG_LT\" $lt_config_lt_args || lt_cl_success=false\nexec AS_MESSAGE_LOG_FD>>config.log\n$lt_cl_success || AS_EXIT(1)\n])# LT_OUTPUT\n\n\n# _LT_CONFIG(TAG)\n# ---------------\n# If TAG is the built-in tag, create an initial libtool script with a\n# default configuration from the untagged config vars.  Otherwise add code\n# to config.status for appending the configuration named by TAG from the\n# matching tagged config vars.\nm4_defun([_LT_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_CONFIG_SAVE_COMMANDS([\n  m4_define([_LT_TAG], m4_if([$1], [], [C], [$1]))dnl\n  m4_if(_LT_TAG, [C], [\n    # See if we are running on zsh, and set the options that allow our\n    # commands through without removal of \\ escapes.\n    if test -n \"${ZSH_VERSION+set}\"; then\n      setopt NO_GLOB_SUBST\n    fi\n\n    cfgfile=${ofile}T\n    trap \"$RM \\\"$cfgfile\\\"; exit 1\" 1 2 15\n    $RM \"$cfgfile\"\n\n    cat <<_LT_EOF >> \"$cfgfile\"\n#! $SHELL\n# Generated automatically by $as_me ($PACKAGE) $VERSION\n# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:\n# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n\n# Provide generalized library-building support services.\n# Written by Gordon Matzigkeit, 1996\n\n_LT_COPYING\n_LT_LIBTOOL_TAGS\n\n# Configured defaults for sys_lib_dlsearch_path munging.\n: \\${LT_SYS_LIBRARY_PATH=\"$configure_time_lt_sys_library_path\"}\n\n# ### BEGIN LIBTOOL CONFIG\n_LT_LIBTOOL_CONFIG_VARS\n_LT_LIBTOOL_TAG_VARS\n# ### END LIBTOOL CONFIG\n\n_LT_EOF\n\n    cat <<'_LT_EOF' >> \"$cfgfile\"\n\n# ### BEGIN FUNCTIONS SHARED WITH CONFIGURE\n\n_LT_PREPARE_MUNGE_PATH_LIST\n_LT_PREPARE_CC_BASENAME\n\n# ### END FUNCTIONS SHARED WITH CONFIGURE\n\n_LT_EOF\n\n  case $host_os in\n  aix3*)\n    cat <<\\_LT_EOF >> \"$cfgfile\"\n# AIX sometimes has problems with the GCC collect2 program.  For some\n# reason, if we set the COLLECT_NAMES environment variable, the problems\n# vanish in a puff of smoke.\nif test set != \"${COLLECT_NAMES+set}\"; then\n  COLLECT_NAMES=\n  export COLLECT_NAMES\nfi\n_LT_EOF\n    ;;\n  esac\n\n  _LT_PROG_LTMAIN\n\n  # We use sed instead of cat because bash on DJGPP gets confused if\n  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n  # text mode, it properly converts lines to CR/LF.  This bash problem\n  # is reportedly fixed, but why not run on old versions too?\n  sed '$q' \"$ltmain\" >> \"$cfgfile\" \\\n     || (rm -f \"$cfgfile\"; exit 1)\n\n   mv -f \"$cfgfile\" \"$ofile\" ||\n    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n  chmod +x \"$ofile\"\n],\n[cat <<_LT_EOF >> \"$ofile\"\n\ndnl Unfortunately we have to use $1 here, since _LT_TAG is not expanded\ndnl in a comment (ie after a #).\n# ### BEGIN LIBTOOL TAG CONFIG: $1\n_LT_LIBTOOL_TAG_VARS(_LT_TAG)\n# ### END LIBTOOL TAG CONFIG: $1\n_LT_EOF\n])dnl /m4_if\n],\n[m4_if([$1], [], [\n    PACKAGE='$PACKAGE'\n    VERSION='$VERSION'\n    RM='$RM'\n    ofile='$ofile'], [])\n])dnl /_LT_CONFIG_SAVE_COMMANDS\n])# _LT_CONFIG\n\n\n# LT_SUPPORTED_TAG(TAG)\n# ---------------------\n# Trace this macro to discover what tags are supported by the libtool\n# --tag option, using:\n#    autoconf --trace 'LT_SUPPORTED_TAG:$1'\nAC_DEFUN([LT_SUPPORTED_TAG], [])\n\n\n# C support is built-in for now\nm4_define([_LT_LANG_C_enabled], [])\nm4_define([_LT_TAGS], [])\n\n\n# LT_LANG(LANG)\n# -------------\n# Enable libtool support for the given language if not already enabled.\nAC_DEFUN([LT_LANG],\n[AC_BEFORE([$0], [LT_OUTPUT])dnl\nm4_case([$1],\n  [C],\t\t\t[_LT_LANG(C)],\n  [C++],\t\t[_LT_LANG(CXX)],\n  [Go],\t\t\t[_LT_LANG(GO)],\n  [Java],\t\t[_LT_LANG(GCJ)],\n  [Fortran 77],\t\t[_LT_LANG(F77)],\n  [Fortran],\t\t[_LT_LANG(FC)],\n  [Windows Resource],\t[_LT_LANG(RC)],\n  [m4_ifdef([_LT_LANG_]$1[_CONFIG],\n    [_LT_LANG($1)],\n    [m4_fatal([$0: unsupported language: \"$1\"])])])dnl\n])# LT_LANG\n\n\n# _LT_LANG(LANGNAME)\n# ------------------\nm4_defun([_LT_LANG],\n[m4_ifdef([_LT_LANG_]$1[_enabled], [],\n  [LT_SUPPORTED_TAG([$1])dnl\n  m4_append([_LT_TAGS], [$1 ])dnl\n  m4_define([_LT_LANG_]$1[_enabled], [])dnl\n  _LT_LANG_$1_CONFIG($1)])dnl\n])# _LT_LANG\n\n\nm4_ifndef([AC_PROG_GO], [\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_GO.  When it is available in    #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\nm4_defun([AC_PROG_GO],\n[AC_LANG_PUSH(Go)dnl\nAC_ARG_VAR([GOC],     [Go compiler command])dnl\nAC_ARG_VAR([GOFLAGS], [Go compiler flags])dnl\n_AC_ARG_VAR_LDFLAGS()dnl\nAC_CHECK_TOOL(GOC, gccgo)\nif test -z \"$GOC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    AC_CHECK_PROG(GOC, [${ac_tool_prefix}gccgo], [${ac_tool_prefix}gccgo])\n  fi\nfi\nif test -z \"$GOC\"; then\n  AC_CHECK_PROG(GOC, gccgo, gccgo, false)\nfi\n])#m4_defun\n])#m4_ifndef\n\n\n# _LT_LANG_DEFAULT_CONFIG\n# -----------------------\nm4_defun([_LT_LANG_DEFAULT_CONFIG],\n[AC_PROVIDE_IFELSE([AC_PROG_CXX],\n  [LT_LANG(CXX)],\n  [m4_define([AC_PROG_CXX], defn([AC_PROG_CXX])[LT_LANG(CXX)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_F77],\n  [LT_LANG(F77)],\n  [m4_define([AC_PROG_F77], defn([AC_PROG_F77])[LT_LANG(F77)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_FC],\n  [LT_LANG(FC)],\n  [m4_define([AC_PROG_FC], defn([AC_PROG_FC])[LT_LANG(FC)])])\n\ndnl The call to [A][M_PROG_GCJ] is quoted like that to stop aclocal\ndnl pulling things in needlessly.\nAC_PROVIDE_IFELSE([AC_PROG_GCJ],\n  [LT_LANG(GCJ)],\n  [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],\n    [LT_LANG(GCJ)],\n    [AC_PROVIDE_IFELSE([LT_PROG_GCJ],\n      [LT_LANG(GCJ)],\n      [m4_ifdef([AC_PROG_GCJ],\n\t[m4_define([AC_PROG_GCJ], defn([AC_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([A][M_PROG_GCJ],\n\t[m4_define([A][M_PROG_GCJ], defn([A][M_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([LT_PROG_GCJ],\n\t[m4_define([LT_PROG_GCJ], defn([LT_PROG_GCJ])[LT_LANG(GCJ)])])])])])\n\nAC_PROVIDE_IFELSE([AC_PROG_GO],\n  [LT_LANG(GO)],\n  [m4_define([AC_PROG_GO], defn([AC_PROG_GO])[LT_LANG(GO)])])\n\nAC_PROVIDE_IFELSE([LT_PROG_RC],\n  [LT_LANG(RC)],\n  [m4_define([LT_PROG_RC], defn([LT_PROG_RC])[LT_LANG(RC)])])\n])# _LT_LANG_DEFAULT_CONFIG\n\n# Obsolete macros:\nAU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])\nAU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])\nAU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])\nAU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])\nAU_DEFUN([AC_LIBTOOL_RC], [LT_LANG(Windows Resource)])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_CXX], [])\ndnl AC_DEFUN([AC_LIBTOOL_F77], [])\ndnl AC_DEFUN([AC_LIBTOOL_FC], [])\ndnl AC_DEFUN([AC_LIBTOOL_GCJ], [])\ndnl AC_DEFUN([AC_LIBTOOL_RC], [])\n\n\n# _LT_TAG_COMPILER\n# ----------------\nm4_defun([_LT_TAG_COMPILER],\n[AC_REQUIRE([AC_PROG_CC])dnl\n\n_LT_DECL([LTCC], [CC], [1], [A C compiler])dnl\n_LT_DECL([LTCFLAGS], [CFLAGS], [1], [LTCC compiler flags])dnl\n_LT_TAGDECL([CC], [compiler], [1], [A language specific compiler])dnl\n_LT_TAGDECL([with_gcc], [GCC], [0], [Is the compiler the GNU compiler?])dnl\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n])# _LT_TAG_COMPILER\n\n\n# _LT_COMPILER_BOILERPLATE\n# ------------------------\n# Check for compiler boilerplate output or warnings with\n# the simple compiler test code.\nm4_defun([_LT_COMPILER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$RM conftest*\n])# _LT_COMPILER_BOILERPLATE\n\n\n# _LT_LINKER_BOILERPLATE\n# ----------------------\n# Check for linker boilerplate output or warnings with\n# the simple link test code.\nm4_defun([_LT_LINKER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$RM -r conftest*\n])# _LT_LINKER_BOILERPLATE\n\n# _LT_REQUIRED_DARWIN_CHECKS\n# -------------------------\nm4_defun_once([_LT_REQUIRED_DARWIN_CHECKS],[\n  case $host_os in\n    rhapsody* | darwin*)\n    AC_CHECK_TOOL([DSYMUTIL], [dsymutil], [:])\n    AC_CHECK_TOOL([NMEDIT], [nmedit], [:])\n    AC_CHECK_TOOL([LIPO], [lipo], [:])\n    AC_CHECK_TOOL([OTOOL], [otool], [:])\n    AC_CHECK_TOOL([OTOOL64], [otool64], [:])\n    _LT_DECL([], [DSYMUTIL], [1],\n      [Tool to manipulate archived DWARF debug symbol files on Mac OS X])\n    _LT_DECL([], [NMEDIT], [1],\n      [Tool to change global to local symbols on Mac OS X])\n    _LT_DECL([], [LIPO], [1],\n      [Tool to manipulate fat objects and archives on Mac OS X])\n    _LT_DECL([], [OTOOL], [1],\n      [ldd/readelf like tool for Mach-O binaries on Mac OS X])\n    _LT_DECL([], [OTOOL64], [1],\n      [ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4])\n\n    AC_CACHE_CHECK([for -single_module linker flag],[lt_cv_apple_cc_single_mod],\n      [lt_cv_apple_cc_single_mod=no\n      if test -z \"$LT_MULTI_MODULE\"; then\n\t# By default we will add the -single_module flag. You can override\n\t# by either setting the environment variable LT_MULTI_MODULE\n\t# non-empty at configure time, or by adding -multi_module to the\n\t# link flags.\n\trm -rf libconftest.dylib*\n\techo \"int foo(void){return 1;}\" > conftest.c\n\techo \"$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n-dynamiclib -Wl,-single_module conftest.c\" >&AS_MESSAGE_LOG_FD\n\t$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n\t  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err\n        _lt_result=$?\n\t# If there is a non-empty error log, and \"single_module\"\n\t# appears in it, assume the flag caused a linker warning\n        if test -s conftest.err && $GREP single_module conftest.err; then\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\t# Otherwise, if the output was created with a 0 exit code from\n\t# the compiler, it worked.\n\telif test -f libconftest.dylib && test 0 = \"$_lt_result\"; then\n\t  lt_cv_apple_cc_single_mod=yes\n\telse\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\tfi\n\trm -rf libconftest.dylib*\n\trm -f conftest.*\n      fi])\n\n    AC_CACHE_CHECK([for -exported_symbols_list linker flag],\n      [lt_cv_ld_exported_symbols_list],\n      [lt_cv_ld_exported_symbols_list=no\n      save_LDFLAGS=$LDFLAGS\n      echo \"_main\" > conftest.sym\n      LDFLAGS=\"$LDFLAGS -Wl,-exported_symbols_list,conftest.sym\"\n      AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n\t[lt_cv_ld_exported_symbols_list=yes],\n\t[lt_cv_ld_exported_symbols_list=no])\n\tLDFLAGS=$save_LDFLAGS\n    ])\n\n    AC_CACHE_CHECK([for -force_load linker flag],[lt_cv_ld_force_load],\n      [lt_cv_ld_force_load=no\n      cat > conftest.c << _LT_EOF\nint forced_loaded() { return 2;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS -c -o conftest.o conftest.c\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS -c -o conftest.o conftest.c 2>&AS_MESSAGE_LOG_FD\n      echo \"$AR cru libconftest.a conftest.o\" >&AS_MESSAGE_LOG_FD\n      $AR cru libconftest.a conftest.o 2>&AS_MESSAGE_LOG_FD\n      echo \"$RANLIB libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $RANLIB libconftest.a 2>&AS_MESSAGE_LOG_FD\n      cat > conftest.c << _LT_EOF\nint main() { return 0;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a 2>conftest.err\n      _lt_result=$?\n      if test -s conftest.err && $GREP force_load conftest.err; then\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      elif test -f conftest && test 0 = \"$_lt_result\" && $GREP forced_load conftest >/dev/null 2>&1; then\n\tlt_cv_ld_force_load=yes\n      else\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      fi\n        rm -f conftest.err libconftest.a conftest conftest.c\n        rm -rf conftest.dSYM\n    ])\n    case $host_os in\n    rhapsody* | darwin1.[[012]])\n      _lt_dar_allow_undefined='$wl-undefined ${wl}suppress' ;;\n    darwin1.*)\n      _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n    darwin*) # darwin 5.x on\n      # if running on 10.5 or later, the deployment target defaults\n      # to the OS version, if on x86, and 10.4, the deployment\n      # target defaults to 10.4. Don't you love it?\n      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in\n\t10.0,*86*-darwin8*|10.0,*-darwin[[91]]*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n\t10.[[012]][[,.]]*)\n\t  _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n\t10.*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n      esac\n    ;;\n  esac\n    if test yes = \"$lt_cv_apple_cc_single_mod\"; then\n      _lt_dar_single_mod='$single_module'\n    fi\n    if test yes = \"$lt_cv_ld_exported_symbols_list\"; then\n      _lt_dar_export_syms=' $wl-exported_symbols_list,$output_objdir/$libname-symbols.expsym'\n    else\n      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/$libname-symbols.expsym $lib'\n    fi\n    if test : != \"$DSYMUTIL\" && test no = \"$lt_cv_ld_force_load\"; then\n      _lt_dsymutil='~$DSYMUTIL $lib || :'\n    else\n      _lt_dsymutil=\n    fi\n    ;;\n  esac\n])\n\n\n# _LT_DARWIN_LINKER_FEATURES([TAG])\n# ---------------------------------\n# Checks for linker and compiler features on darwin\nm4_defun([_LT_DARWIN_LINKER_FEATURES],\n[\n  m4_require([_LT_REQUIRED_DARWIN_CHECKS])\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_automatic, $1)=yes\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  if test yes = \"$lt_cv_ld_force_load\"; then\n    _LT_TAGVAR(whole_archive_flag_spec, $1)='`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience $wl-force_load,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"`'\n    m4_case([$1], [F77], [_LT_TAGVAR(compiler_needs_object, $1)=yes],\n                  [FC],  [_LT_TAGVAR(compiler_needs_object, $1)=yes])\n  else\n    _LT_TAGVAR(whole_archive_flag_spec, $1)=''\n  fi\n  _LT_TAGVAR(link_all_deplibs, $1)=yes\n  _LT_TAGVAR(allow_undefined_flag, $1)=$_lt_dar_allow_undefined\n  case $cc_basename in\n     ifort*|nagfor*) _lt_dar_can_shared=yes ;;\n     *) _lt_dar_can_shared=$GCC ;;\n  esac\n  if test yes = \"$_lt_dar_can_shared\"; then\n    output_verbose_link_cmd=func_echo_all\n    _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dsymutil\"\n    _LT_TAGVAR(module_cmds, $1)=\"\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dsymutil\"\n    _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dar_export_syms$_lt_dsymutil\"\n    _LT_TAGVAR(module_expsym_cmds, $1)=\"sed -e 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dar_export_syms$_lt_dsymutil\"\n    m4_if([$1], [CXX],\n[   if test yes != \"$lt_cv_apple_cc_single_mod\"; then\n      _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dsymutil\"\n      _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dar_export_syms$_lt_dsymutil\"\n    fi\n],[])\n  else\n  _LT_TAGVAR(ld_shlibs, $1)=no\n  fi\n])\n\n# _LT_SYS_MODULE_PATH_AIX([TAGNAME])\n# ----------------------------------\n# Links a minimal program and checks the executable\n# for the system default hardcoded library path. In most cases,\n# this is /usr/lib:/lib, but when the MPI compilers are used\n# the location of the communication and MPI libs are included too.\n# If we don't find anything, use the default library path according\n# to the aix ld manual.\n# Store the results from the different compilers for each TAGNAME.\n# Allow to override them for all tags through lt_cv_aix_libpath.\nm4_defun([_LT_SYS_MODULE_PATH_AIX],\n[m4_require([_LT_DECL_SED])dnl\nif test set = \"${lt_cv_aix_libpath+set}\"; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  AC_CACHE_VAL([_LT_TAGVAR([lt_cv_aix_libpath_], [$1])],\n  [AC_LINK_IFELSE([AC_LANG_PROGRAM],[\n  lt_aix_libpath_sed='[\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }]'\n  _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi],[])\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=/usr/lib:/lib\n  fi\n  ])\n  aix_libpath=$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\nfi\n])# _LT_SYS_MODULE_PATH_AIX\n\n\n# _LT_SHELL_INIT(ARG)\n# -------------------\nm4_define([_LT_SHELL_INIT],\n[m4_divert_text([M4SH-INIT], [$1\n])])# _LT_SHELL_INIT\n\n\n\n# _LT_PROG_ECHO_BACKSLASH\n# -----------------------\n# Find how we can fake an echo command that does not interpret backslash.\n# In particular, with Autoconf 2.60 or later we add some code to the start\n# of the generated configure script that will find a shell with a builtin\n# printf (that we can use as an echo command).\nm4_defun([_LT_PROG_ECHO_BACKSLASH],\n[ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n\nAC_MSG_CHECKING([how to print strings])\n# Test print first, because it will be a builtin if present.\nif test \"X`( print -r -- -n ) 2>/dev/null`\" = X-n && \\\n   test \"X`print -r -- $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='print -r --'\nelif test \"X`printf %s $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='printf %s\\n'\nelse\n  # Use this function as a fallback that always works.\n  func_fallback_echo ()\n  {\n    eval 'cat <<_LTECHO_EOF\n$[]1\n_LTECHO_EOF'\n  }\n  ECHO='func_fallback_echo'\nfi\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\ncase $ECHO in\n  printf*) AC_MSG_RESULT([printf]) ;;\n  print*) AC_MSG_RESULT([print -r]) ;;\n  *) AC_MSG_RESULT([cat]) ;;\nesac\n\nm4_ifdef([_AS_DETECT_SUGGESTED],\n[_AS_DETECT_SUGGESTED([\n  test -n \"${ZSH_VERSION+set}${BASH_VERSION+set}\" || (\n    ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n    PATH=/empty FPATH=/empty; export PATH FPATH\n    test \"X`printf %s $ECHO`\" = \"X$ECHO\" \\\n      || test \"X`print -r -- $ECHO`\" = \"X$ECHO\" )])])\n\n_LT_DECL([], [SHELL], [1], [Shell to use when invoking shell scripts])\n_LT_DECL([], [ECHO], [1], [An echo program that protects backslashes])\n])# _LT_PROG_ECHO_BACKSLASH\n\n\n# _LT_WITH_SYSROOT\n# ----------------\nAC_DEFUN([_LT_WITH_SYSROOT],\n[AC_MSG_CHECKING([for sysroot])\nAC_ARG_WITH([sysroot],\n[AS_HELP_STRING([--with-sysroot@<:@=DIR@:>@],\n  [Search for dependent libraries within DIR (or the compiler's sysroot\n   if not specified).])],\n[], [with_sysroot=no])\n\ndnl lt_sysroot will always be passed unquoted.  We quote it here\ndnl in case the user passed a directory name.\nlt_sysroot=\ncase $with_sysroot in #(\n yes)\n   if test yes = \"$GCC\"; then\n     lt_sysroot=`$CC --print-sysroot 2>/dev/null`\n   fi\n   ;; #(\n /*)\n   lt_sysroot=`echo \"$with_sysroot\" | sed -e \"$sed_quote_subst\"`\n   ;; #(\n no|'')\n   ;; #(\n *)\n   AC_MSG_RESULT([$with_sysroot])\n   AC_MSG_ERROR([The sysroot must be an absolute path.])\n   ;;\nesac\n\n AC_MSG_RESULT([${lt_sysroot:-no}])\n_LT_DECL([], [lt_sysroot], [0], [The root where to search for ]dnl\n[dependent libraries, and where our libraries should be installed.])])\n\n# _LT_ENABLE_LOCK\n# ---------------\nm4_defun([_LT_ENABLE_LOCK],\n[AC_ARG_ENABLE([libtool-lock],\n  [AS_HELP_STRING([--disable-libtool-lock],\n    [avoid locking (might break parallel builds)])])\ntest no = \"$enable_libtool_lock\" || enable_libtool_lock=yes\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase $host in\nia64-*-hpux*)\n  # Find out what ABI is being produced by ac_compile, and set mode\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.$ac_objext` in\n      *ELF-32*)\n\tHPUX_IA64_MODE=32\n\t;;\n      *ELF-64*)\n\tHPUX_IA64_MODE=64\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n*-*-irix6*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    if test yes = \"$lt_cv_prog_gnu_ld\"; then\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -melf32bsmip\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -melf32bmipn32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -melf64bmip\"\n\t;;\n      esac\n    else\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -32\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -n32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -64\"\n\t  ;;\n      esac\n    fi\n  fi\n  rm -rf conftest*\n  ;;\n\nmips64*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    emul=elf\n    case `/usr/bin/file conftest.$ac_objext` in\n      *32-bit*)\n\temul=\"${emul}32\"\n\t;;\n      *64-bit*)\n\temul=\"${emul}64\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *MSB*)\n\temul=\"${emul}btsmip\"\n\t;;\n      *LSB*)\n\temul=\"${emul}ltsmip\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *N32*)\n\temul=\"${emul}n32\"\n\t;;\n    esac\n    LD=\"${LD-ld} -m $emul\"\n  fi\n  rm -rf conftest*\n  ;;\n\nx86_64-*kfreebsd*-gnu|x86_64-*linux*|powerpc*-*linux*| \\\ns390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.  Note that the listed cases only cover the\n  # situations where additional linker options are needed (such as when\n  # doing 32-bit compilation for a host where ld defaults to 64-bit, or\n  # vice versa); the common cases where no linker options are needed do\n  # not appear in the list.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n      *32-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_i386_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    case `/usr/bin/file conftest.o` in\n\t      *x86-64*)\n\t\tLD=\"${LD-ld} -m elf32_x86_64\"\n\t\t;;\n\t      *)\n\t\tLD=\"${LD-ld} -m elf_i386\"\n\t\t;;\n\t    esac\n\t    ;;\n\t  powerpc64le-*linux*)\n\t    LD=\"${LD-ld} -m elf32lppclinux\"\n\t    ;;\n\t  powerpc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32ppclinux\"\n\t    ;;\n\t  s390x-*linux*)\n\t    LD=\"${LD-ld} -m elf_s390\"\n\t    ;;\n\t  sparc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32_sparc\"\n\t    ;;\n\tesac\n\t;;\n      *64-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_x86_64_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_x86_64\"\n\t    ;;\n\t  powerpcle-*linux*)\n\t    LD=\"${LD-ld} -m elf64lppc\"\n\t    ;;\n\t  powerpc-*linux*)\n\t    LD=\"${LD-ld} -m elf64ppc\"\n\t    ;;\n\t  s390*-*linux*|s390*-*tpf*)\n\t    LD=\"${LD-ld} -m elf64_s390\"\n\t    ;;\n\t  sparc*-*linux*)\n\t    LD=\"${LD-ld} -m elf64_sparc\"\n\t    ;;\n\tesac\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=$CFLAGS\n  CFLAGS=\"$CFLAGS -belf\"\n  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n    [AC_LANG_PUSH(C)\n     AC_LINK_IFELSE([AC_LANG_PROGRAM([[]],[[]])],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])\n     AC_LANG_POP])\n  if test yes != \"$lt_cv_cc_needs_belf\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=$SAVE_CFLAGS\n  fi\n  ;;\n*-*solaris*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n    *64-bit*)\n      case $lt_cv_prog_gnu_ld in\n      yes*)\n        case $host in\n        i?86-*-solaris*|x86_64-*-solaris*)\n          LD=\"${LD-ld} -m elf_x86_64\"\n          ;;\n        sparc*-*-solaris*)\n          LD=\"${LD-ld} -m elf64_sparc\"\n          ;;\n        esac\n        # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.\n        if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then\n          LD=${LD-ld}_sol2\n        fi\n        ;;\n      *)\n\tif ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then\n\t  LD=\"${LD-ld} -64\"\n\tfi\n\t;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\nesac\n\nneed_locks=$enable_libtool_lock\n])# _LT_ENABLE_LOCK\n\n\n# _LT_PROG_AR\n# -----------\nm4_defun([_LT_PROG_AR],\n[AC_CHECK_TOOLS(AR, [ar], false)\n: ${AR=ar}\n: ${AR_FLAGS=cru}\n_LT_DECL([], [AR], [1], [The archiver])\n_LT_DECL([], [AR_FLAGS], [1], [Flags to create an archive])\n\nAC_CACHE_CHECK([for archiver @FILE support], [lt_cv_ar_at_file],\n  [lt_cv_ar_at_file=no\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM],\n     [echo conftest.$ac_objext > conftest.lst\n      lt_ar_try='$AR $AR_FLAGS libconftest.a @conftest.lst >&AS_MESSAGE_LOG_FD'\n      AC_TRY_EVAL([lt_ar_try])\n      if test 0 -eq \"$ac_status\"; then\n\t# Ensure the archiver fails upon bogus file names.\n\trm -f conftest.$ac_objext libconftest.a\n\tAC_TRY_EVAL([lt_ar_try])\n\tif test 0 -ne \"$ac_status\"; then\n          lt_cv_ar_at_file=@\n        fi\n      fi\n      rm -f conftest.* libconftest.a\n     ])\n  ])\n\nif test no = \"$lt_cv_ar_at_file\"; then\n  archiver_list_spec=\nelse\n  archiver_list_spec=$lt_cv_ar_at_file\nfi\n_LT_DECL([], [archiver_list_spec], [1],\n  [How to feed a file listing to the archiver])\n])# _LT_PROG_AR\n\n\n# _LT_CMD_OLD_ARCHIVE\n# -------------------\nm4_defun([_LT_CMD_OLD_ARCHIVE],\n[_LT_PROG_AR\n\nAC_CHECK_TOOL(STRIP, strip, :)\ntest -z \"$STRIP\" && STRIP=:\n_LT_DECL([], [STRIP], [1], [A symbol stripping program])\n\nAC_CHECK_TOOL(RANLIB, ranlib, :)\ntest -z \"$RANLIB\" && RANLIB=:\n_LT_DECL([], [RANLIB], [1],\n    [Commands used to install an old-style archive])\n\n# Determine commands to create old-style static archives.\nold_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'\nold_postinstall_cmds='chmod 644 $oldlib'\nold_postuninstall_cmds=\n\nif test -n \"$RANLIB\"; then\n  case $host_os in\n  bitrig* | openbsd*)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB -t \\$tool_oldlib\"\n    ;;\n  *)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB \\$tool_oldlib\"\n    ;;\n  esac\n  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$tool_oldlib\"\nfi\n\ncase $host_os in\n  darwin*)\n    lock_old_archive_extraction=yes ;;\n  *)\n    lock_old_archive_extraction=no ;;\nesac\n_LT_DECL([], [old_postinstall_cmds], [2])\n_LT_DECL([], [old_postuninstall_cmds], [2])\n_LT_TAGDECL([], [old_archive_cmds], [2],\n    [Commands used to build an old-style archive])\n_LT_DECL([], [lock_old_archive_extraction], [0],\n    [Whether to use a lock for old archive extraction])\n])# _LT_CMD_OLD_ARCHIVE\n\n\n# _LT_COMPILER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#\t\t[OUTPUT-FILE], [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([_LT_COMPILER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$3\"  ## exclude from sc_useless_quotes_in_assignment\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       $2=yes\n     fi\n   fi\n   $RM conftest*\n])\n\nif test yes = \"[$]$2\"; then\n    m4_if([$5], , :, [$5])\nelse\n    m4_if([$6], , :, [$6])\nfi\n])# _LT_COMPILER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_COMPILER_OPTION], [_LT_COMPILER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [])\n\n\n# _LT_LINKER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#                  [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------\n# Check whether the given linker option works\nAC_DEFUN([_LT_LINKER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   save_LDFLAGS=$LDFLAGS\n   LDFLAGS=\"$LDFLAGS $3\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&AS_MESSAGE_LOG_FD\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         $2=yes\n       fi\n     else\n       $2=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=$save_LDFLAGS\n])\n\nif test yes = \"[$]$2\"; then\n    m4_if([$4], , :, [$4])\nelse\n    m4_if([$5], , :, [$5])\nfi\n])# _LT_LINKER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_LINKER_OPTION], [_LT_LINKER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [])\n\n\n# LT_CMD_MAX_LEN\n#---------------\nAC_DEFUN([LT_CMD_MAX_LEN],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n# find the maximum length of command line arguments\nAC_MSG_CHECKING([the maximum length of command line arguments])\nAC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl\n  i=0\n  teststring=ABCD\n\n  case $build_os in\n  msdosdjgpp*)\n    # On DJGPP, this test can blow up pretty badly due to problems in libc\n    # (any single argument exceeding 2000 bytes causes a buffer overrun\n    # during glob expansion).  Even if it were fixed, the result of this\n    # check would be larger than it should be.\n    lt_cv_sys_max_cmd_len=12288;    # 12K is about right\n    ;;\n\n  gnu*)\n    # Under GNU Hurd, this test is not required because there is\n    # no limit to the length of command line arguments.\n    # Libtool will interpret -1 as no limit whatsoever\n    lt_cv_sys_max_cmd_len=-1;\n    ;;\n\n  cygwin* | mingw* | cegcc*)\n    # On Win9x/ME, this test blows up -- it succeeds, but takes\n    # about 5 minutes as the teststring grows exponentially.\n    # Worse, since 9x/ME are not pre-emptively multitasking,\n    # you end up with a \"frozen\" computer, even though with patience\n    # the test eventually succeeds (with a max line length of 256k).\n    # Instead, let's just punt: use the minimum linelength reported by\n    # all of the supported platforms: 8192 (on NT/2K/XP).\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  mint*)\n    # On MiNT this can take a long time and run out of memory.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  amigaos*)\n    # On AmigaOS with pdksh, this test takes hours, literally.\n    # So we just punt and use a minimum line length of 8192.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  bitrig* | darwin* | dragonfly* | freebsd* | netbsd* | openbsd*)\n    # This has been around since 386BSD, at least.  Likely further.\n    if test -x /sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n    elif test -x /usr/sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`\n    else\n      lt_cv_sys_max_cmd_len=65536\t# usable default for all BSDs\n    fi\n    # And add a safety zone\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    ;;\n\n  interix*)\n    # We know the value 262144 and hardcode it with a safety zone (like BSD)\n    lt_cv_sys_max_cmd_len=196608\n    ;;\n\n  os2*)\n    # The test takes a long time on OS/2.\n    lt_cv_sys_max_cmd_len=8192\n    ;;\n\n  osf*)\n    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure\n    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not\n    # nice to cause kernel panics so lets avoid the loop below.\n    # First set a reasonable default.\n    lt_cv_sys_max_cmd_len=16384\n    #\n    if test -x /sbin/sysconfig; then\n      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in\n        *1*) lt_cv_sys_max_cmd_len=-1 ;;\n      esac\n    fi\n    ;;\n  sco3.2v5*)\n    lt_cv_sys_max_cmd_len=102400\n    ;;\n  sysv5* | sco5v6* | sysv4.2uw2*)\n    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`\n    if test -n \"$kargmax\"; then\n      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[\t ]]//'`\n    else\n      lt_cv_sys_max_cmd_len=32768\n    fi\n    ;;\n  *)\n    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`\n    if test -n \"$lt_cv_sys_max_cmd_len\" && \\\n       test undefined != \"$lt_cv_sys_max_cmd_len\"; then\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    else\n      # Make teststring a little bigger before we do anything with it.\n      # a 1K string should be a reasonable start.\n      for i in 1 2 3 4 5 6 7 8; do\n        teststring=$teststring$teststring\n      done\n      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}\n      # If test is not a shell built-in, we'll probably end up computing a\n      # maximum length that is only half of the actual maximum length, but\n      # we can't tell.\n      while { test X`env echo \"$teststring$teststring\" 2>/dev/null` \\\n\t         = \"X$teststring$teststring\"; } >/dev/null 2>&1 &&\n\t      test 17 != \"$i\" # 1/2 MB should be enough\n      do\n        i=`expr $i + 1`\n        teststring=$teststring$teststring\n      done\n      # Only check the string length outside the loop.\n      lt_cv_sys_max_cmd_len=`expr \"X$teststring\" : \".*\" 2>&1`\n      teststring=\n      # Add a significant safety factor because C++ compilers can tack on\n      # massive amounts of additional arguments before passing them to the\n      # linker.  It appears as though 1/2 is a usable value.\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 2`\n    fi\n    ;;\n  esac\n])\nif test -n \"$lt_cv_sys_max_cmd_len\"; then\n  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)\nelse\n  AC_MSG_RESULT(none)\nfi\nmax_cmd_len=$lt_cv_sys_max_cmd_len\n_LT_DECL([], [max_cmd_len], [0],\n    [What is the maximum length of a command?])\n])# LT_CMD_MAX_LEN\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_SYS_MAX_CMD_LEN], [LT_CMD_MAX_LEN])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [])\n\n\n# _LT_HEADER_DLFCN\n# ----------------\nm4_defun([_LT_HEADER_DLFCN],\n[AC_CHECK_HEADERS([dlfcn.h], [], [], [AC_INCLUDES_DEFAULT])dnl\n])# _LT_HEADER_DLFCN\n\n\n# _LT_TRY_DLOPEN_SELF (ACTION-IF-TRUE, ACTION-IF-TRUE-W-USCORE,\n#                      ACTION-IF-FALSE, ACTION-IF-CROSS-COMPILING)\n# ----------------------------------------------------------------\nm4_defun([_LT_TRY_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test yes = \"$cross_compiling\"; then :\n  [$4]\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<_LT_EOF\n[#line $LINENO \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n/* When -fvisibility=hidden is used, assume the code has been annotated\n   correspondingly for the symbols needed.  */\n#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))\nint fnord () __attribute__((visibility(\"default\")));\n#endif\n\nint fnord () { return 42; }\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else\n        {\n\t  if (dlsym( self,\"_fnord\"))  status = $lt_dlneed_uscore;\n          else puts (dlerror ());\n\t}\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n  return status;\n}]\n_LT_EOF\n  if AC_TRY_EVAL(ac_link) && test -s \"conftest$ac_exeext\" 2>/dev/null; then\n    (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) $1 ;;\n      x$lt_dlneed_uscore) $2 ;;\n      x$lt_dlunknown|x*) $3 ;;\n    esac\n  else :\n    # compilation failed\n    $3\n  fi\nfi\nrm -fr conftest*\n])# _LT_TRY_DLOPEN_SELF\n\n\n# LT_SYS_DLOPEN_SELF\n# ------------------\nAC_DEFUN([LT_SYS_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test yes != \"$enable_dlopen\"; then\n  enable_dlopen=unknown\n  enable_dlopen_self=unknown\n  enable_dlopen_self_static=unknown\nelse\n  lt_cv_dlopen=no\n  lt_cv_dlopen_libs=\n\n  case $host_os in\n  beos*)\n    lt_cv_dlopen=load_add_on\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ;;\n\n  mingw* | pw32* | cegcc*)\n    lt_cv_dlopen=LoadLibrary\n    lt_cv_dlopen_libs=\n    ;;\n\n  cygwin*)\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    ;;\n\n  darwin*)\n    # if libdl is installed we need to link against it\n    AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],[\n    lt_cv_dlopen=dyld\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ])\n    ;;\n\n  tpf*)\n    # Don't try to run any link tests for TPF.  We know it's impossible\n    # because TPF is a cross-compiler, and we know how we open DSOs.\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=no\n    ;;\n\n  *)\n    AC_CHECK_FUNC([shl_load],\n\t  [lt_cv_dlopen=shl_load],\n      [AC_CHECK_LIB([dld], [shl_load],\n\t    [lt_cv_dlopen=shl_load lt_cv_dlopen_libs=-ldld],\n\t[AC_CHECK_FUNC([dlopen],\n\t      [lt_cv_dlopen=dlopen],\n\t  [AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],\n\t    [AC_CHECK_LIB([svld], [dlopen],\n\t\t  [lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-lsvld],\n\t      [AC_CHECK_LIB([dld], [dld_link],\n\t\t    [lt_cv_dlopen=dld_link lt_cv_dlopen_libs=-ldld])\n\t      ])\n\t    ])\n\t  ])\n\t])\n      ])\n    ;;\n  esac\n\n  if test no = \"$lt_cv_dlopen\"; then\n    enable_dlopen=no\n  else\n    enable_dlopen=yes\n  fi\n\n  case $lt_cv_dlopen in\n  dlopen)\n    save_CPPFLAGS=$CPPFLAGS\n    test yes = \"$ac_cv_header_dlfcn_h\" && CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n\n    save_LDFLAGS=$LDFLAGS\n    wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n\n    save_LIBS=$LIBS\n    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n\n    AC_CACHE_CHECK([whether a program can dlopen itself],\n\t  lt_cv_dlopen_self, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,\n\t    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)\n    ])\n\n    if test yes = \"$lt_cv_dlopen_self\"; then\n      wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $lt_prog_compiler_static\\\"\n      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],\n\t  lt_cv_dlopen_self_static, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,\n\t    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)\n      ])\n    fi\n\n    CPPFLAGS=$save_CPPFLAGS\n    LDFLAGS=$save_LDFLAGS\n    LIBS=$save_LIBS\n    ;;\n  esac\n\n  case $lt_cv_dlopen_self in\n  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n  *) enable_dlopen_self=unknown ;;\n  esac\n\n  case $lt_cv_dlopen_self_static in\n  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n  *) enable_dlopen_self_static=unknown ;;\n  esac\nfi\n_LT_DECL([dlopen_support], [enable_dlopen], [0],\n\t [Whether dlopen is supported])\n_LT_DECL([dlopen_self], [enable_dlopen_self], [0],\n\t [Whether dlopen of programs is supported])\n_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],\n\t [Whether dlopen of statically linked programs is supported])\n])# LT_SYS_DLOPEN_SELF\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [])\n\n\n# _LT_COMPILER_C_O([TAGNAME])\n# ---------------------------\n# Check to see if options -c and -o are simultaneously supported by compiler.\n# This macro does not hard code the compiler like AC_PROG_CC_C_O.\nm4_defun([_LT_COMPILER_C_O],\n[m4_require([_LT_DECL_SED])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_CACHE_CHECK([if $compiler supports -c -o file.$ac_objext],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       _LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n     fi\n   fi\n   chmod u+w . 2>&AS_MESSAGE_LOG_FD\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n])\n_LT_TAGDECL([compiler_c_o], [lt_cv_prog_compiler_c_o], [1],\n\t[Does compiler simultaneously support -c and -o options?])\n])# _LT_COMPILER_C_O\n\n\n# _LT_COMPILER_FILE_LOCKS([TAGNAME])\n# ----------------------------------\n# Check to see if we can do hard links to lock some files if needed\nm4_defun([_LT_COMPILER_FILE_LOCKS],\n[m4_require([_LT_ENABLE_LOCK])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_COMPILER_C_O([$1])\n\nhard_links=nottested\nif test no = \"$_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)\" && test no != \"$need_locks\"; then\n  # do not overwrite the value of need_locks provided by the user\n  AC_MSG_CHECKING([if we can lock with hard links])\n  hard_links=yes\n  $RM conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  AC_MSG_RESULT([$hard_links])\n  if test no = \"$hard_links\"; then\n    AC_MSG_WARN(['$CC' does not support '-c -o', so 'make -j' may be unsafe])\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n_LT_DECL([], [need_locks], [1], [Must we lock files when doing compilation?])\n])# _LT_COMPILER_FILE_LOCKS\n\n\n# _LT_CHECK_OBJDIR\n# ----------------\nm4_defun([_LT_CHECK_OBJDIR],\n[AC_CACHE_CHECK([for objdir], [lt_cv_objdir],\n[rm -f .libs 2>/dev/null\nmkdir .libs 2>/dev/null\nif test -d .libs; then\n  lt_cv_objdir=.libs\nelse\n  # MS-DOS does not allow filenames that begin with a dot.\n  lt_cv_objdir=_libs\nfi\nrmdir .libs 2>/dev/null])\nobjdir=$lt_cv_objdir\n_LT_DECL([], [objdir], [0],\n         [The name of the directory that contains temporary libtool files])dnl\nm4_pattern_allow([LT_OBJDIR])dnl\nAC_DEFINE_UNQUOTED([LT_OBJDIR], \"$lt_cv_objdir/\",\n  [Define to the sub-directory where libtool stores uninstalled libraries.])\n])# _LT_CHECK_OBJDIR\n\n\n# _LT_LINKER_HARDCODE_LIBPATH([TAGNAME])\n# --------------------------------------\n# Check hardcoding attributes.\nm4_defun([_LT_LINKER_HARDCODE_LIBPATH],\n[AC_MSG_CHECKING([how to hardcode library paths into programs])\n_LT_TAGVAR(hardcode_action, $1)=\nif test -n \"$_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\" ||\n   test -n \"$_LT_TAGVAR(runpath_var, $1)\" ||\n   test yes = \"$_LT_TAGVAR(hardcode_automatic, $1)\"; then\n\n  # We can hardcode non-existent directories.\n  if test no != \"$_LT_TAGVAR(hardcode_direct, $1)\" &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test no != \"$_LT_TAGVAR(hardcode_shlibpath_var, $1)\" &&\n     test no != \"$_LT_TAGVAR(hardcode_minus_L, $1)\"; then\n    # Linking always hardcodes the temporary library directory.\n    _LT_TAGVAR(hardcode_action, $1)=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    _LT_TAGVAR(hardcode_action, $1)=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  _LT_TAGVAR(hardcode_action, $1)=unsupported\nfi\nAC_MSG_RESULT([$_LT_TAGVAR(hardcode_action, $1)])\n\nif test relink = \"$_LT_TAGVAR(hardcode_action, $1)\" ||\n   test yes = \"$_LT_TAGVAR(inherit_rpath, $1)\"; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test yes = \"$shlibpath_overrides_runpath\" ||\n     test no = \"$enable_shared\"; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n_LT_TAGDECL([], [hardcode_action], [0],\n    [How to hardcode a shared library path into an executable])\n])# _LT_LINKER_HARDCODE_LIBPATH\n\n\n# _LT_CMD_STRIPLIB\n# ----------------\nm4_defun([_LT_CMD_STRIPLIB],\n[m4_require([_LT_DECL_EGREP])\nstriplib=\nold_striplib=\nAC_MSG_CHECKING([whether stripping libraries is possible])\nif test -n \"$STRIP\" && $STRIP -V 2>&1 | $GREP \"GNU strip\" >/dev/null; then\n  test -z \"$old_striplib\" && old_striplib=\"$STRIP --strip-debug\"\n  test -z \"$striplib\" && striplib=\"$STRIP --strip-unneeded\"\n  AC_MSG_RESULT([yes])\nelse\n# FIXME - insert some real tests, host_os isn't really good enough\n  case $host_os in\n  darwin*)\n    if test -n \"$STRIP\"; then\n      striplib=\"$STRIP -x\"\n      old_striplib=\"$STRIP -S\"\n      AC_MSG_RESULT([yes])\n    else\n      AC_MSG_RESULT([no])\n    fi\n    ;;\n  *)\n    AC_MSG_RESULT([no])\n    ;;\n  esac\nfi\n_LT_DECL([], [old_striplib], [1], [Commands to strip libraries])\n_LT_DECL([], [striplib], [1])\n])# _LT_CMD_STRIPLIB\n\n\n# _LT_PREPARE_MUNGE_PATH_LIST\n# ---------------------------\n# Make sure func_munge_path_list() is defined correctly.\nm4_defun([_LT_PREPARE_MUNGE_PATH_LIST],\n[[# func_munge_path_list VARIABLE PATH\n# -----------------------------------\n# VARIABLE is name of variable containing _space_ separated list of\n# directories to be munged by the contents of PATH, which is string\n# having a format:\n# \"DIR[:DIR]:\"\n#       string \"DIR[ DIR]\" will be prepended to VARIABLE\n# \":DIR[:DIR]\"\n#       string \"DIR[ DIR]\" will be appended to VARIABLE\n# \"DIRP[:DIRP]::[DIRA:]DIRA\"\n#       string \"DIRP[ DIRP]\" will be prepended to VARIABLE and string\n#       \"DIRA[ DIRA]\" will be appended to VARIABLE\n# \"DIR[:DIR]\"\n#       VARIABLE will be replaced by \"DIR[ DIR]\"\nfunc_munge_path_list ()\n{\n    case x@S|@2 in\n    x)\n        ;;\n    *:)\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED 's/:/ /g'` \\@S|@@S|@1\\\"\n        ;;\n    x:*)\n        eval @S|@1=\\\"\\@S|@@S|@1 `$ECHO @S|@2 | $SED 's/:/ /g'`\\\"\n        ;;\n    *::*)\n        eval @S|@1=\\\"\\@S|@@S|@1\\ `$ECHO @S|@2 | $SED -e 's/.*:://' -e 's/:/ /g'`\\\"\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED -e 's/::.*//' -e 's/:/ /g'`\\ \\@S|@@S|@1\\\"\n        ;;\n    *)\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED 's/:/ /g'`\\\"\n        ;;\n    esac\n}\n]])# _LT_PREPARE_PATH_LIST\n\n\n# _LT_SYS_DYNAMIC_LINKER([TAG])\n# -----------------------------\n# PORTME Fill in your ld.so characteristics\nm4_defun([_LT_SYS_DYNAMIC_LINKER],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_OBJDUMP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_PREPARE_MUNGE_PATH_LIST])dnl\nAC_MSG_CHECKING([dynamic linker characteristics])\nm4_if([$1],\n\t[], [\nif test yes = \"$GCC\"; then\n  case $host_os in\n    darwin*) lt_awk_arg='/^libraries:/,/LR/' ;;\n    *) lt_awk_arg='/^libraries:/' ;;\n  esac\n  case $host_os in\n    mingw* | cegcc*) lt_sed_strip_eq='s|=\\([[A-Za-z]]:\\)|\\1|g' ;;\n    *) lt_sed_strip_eq='s|=/|/|g' ;;\n  esac\n  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e \"s/^libraries://\" -e $lt_sed_strip_eq`\n  case $lt_search_path_spec in\n  *\\;*)\n    # if the path contains \";\" then we assume it to be the separator\n    # otherwise default to the standard path separator (i.e. \":\") - it is\n    # assumed that no part of a normal pathname contains \";\" but that should\n    # okay in the real world where \";\" in dirpaths is itself problematic.\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED 's/;/ /g'`\n    ;;\n  *)\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED \"s/$PATH_SEPARATOR/ /g\"`\n    ;;\n  esac\n  # Ok, now we have the path, separated by spaces, we can step through it\n  # and add multilib dir if necessary...\n  lt_tmp_lt_search_path_spec=\n  lt_multi_os_dir=/`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`\n  # ...but if some path component already ends with the multilib dir we assume\n  # that all is fine and trust -print-search-dirs as is (GCC 4.2? or newer).\n  case \"$lt_multi_os_dir; $lt_search_path_spec \" in\n  \"/; \"* | \"/.; \"* | \"/./; \"* | *\"$lt_multi_os_dir \"* | *\"$lt_multi_os_dir/ \"*)\n    lt_multi_os_dir=\n    ;;\n  esac\n  for lt_sys_path in $lt_search_path_spec; do\n    if test -d \"$lt_sys_path$lt_multi_os_dir\"; then\n      lt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path$lt_multi_os_dir\"\n    elif test -n \"$lt_multi_os_dir\"; then\n      test -d \"$lt_sys_path\" && \\\n\tlt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path\"\n    fi\n  done\n  lt_search_path_spec=`$ECHO \"$lt_tmp_lt_search_path_spec\" | awk '\nBEGIN {RS = \" \"; FS = \"/|\\n\";} {\n  lt_foo = \"\";\n  lt_count = 0;\n  for (lt_i = NF; lt_i > 0; lt_i--) {\n    if ($lt_i != \"\" && $lt_i != \".\") {\n      if ($lt_i == \"..\") {\n        lt_count++;\n      } else {\n        if (lt_count == 0) {\n          lt_foo = \"/\" $lt_i lt_foo;\n        } else {\n          lt_count--;\n        }\n      }\n    }\n  }\n  if (lt_foo != \"\") { lt_freq[[lt_foo]]++; }\n  if (lt_freq[[lt_foo]] == 1) { print lt_foo; }\n}'`\n  # AWK program above erroneously prepends '/' to C:/dos/paths\n  # for these hosts.\n  case $host_os in\n    mingw* | cegcc*) lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" |\\\n      $SED 's|/\\([[A-Za-z]]:\\)|\\1|g'` ;;\n  esac\n  sys_lib_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $lt_NL2SP`\nelse\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\nfi])\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=.so\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\nAC_ARG_VAR([LT_SYS_LIBRARY_PATH],\n[User-defined run-time library search path.])\n\ncase $host_os in\naix3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='$libname$release$shared_ext$major'\n  ;;\n\naix[[4-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test ia64 = \"$host_cpu\"; then\n    # AIX 5 supports IA64\n    library_names_spec='$libname$release$shared_ext$major $libname$release$shared_ext$versuffix $libname$shared_ext'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line '#! .'.  This would cause the generated library to\n    # depend on '.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[[01]] | aix4.[[01]].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | $CC -E - | $GREP yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # Using Import Files as archive members, it is possible to support\n    # filename-based versioning of shared library archives on AIX. While\n    # this would work for both with and without runtime linking, it will\n    # prevent static linking of such archives. So we do filename-based\n    # shared library versioning with .so extension only, which is used\n    # when both runtime linking and shared linking is enabled.\n    # Unfortunately, runtime linking may impact performance, so we do\n    # not want this to be the default eventually. Also, we use the\n    # versioned .so libs for executables only if there is the -brtl\n    # linker flag in LDFLAGS as well, or --with-aix-soname=svr4 only.\n    # To allow for filename-based versioning support, we need to create\n    # libNAME.so.V as an archive file, containing:\n    # *) an Import File, referring to the versioned filename of the\n    #    archive as well as the shared archive member, telling the\n    #    bitwidth (32 or 64) of that shared object, and providing the\n    #    list of exported symbols of that shared object, eventually\n    #    decorated with the 'weak' keyword\n    # *) the shared object with the F_LOADONLY flag set, to really avoid\n    #    it being seen by the linker.\n    # At run time we better use the real file rather than another symlink,\n    # but for link time we create the symlink libNAME.so -> libNAME.so.V\n\n    case $with_aix_soname,$aix_use_runtimelinking in\n    # AIX (on Power*) has no versioning support, so currently we cannot hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    aix,yes) # traditional libtool\n      dynamic_linker='AIX unversionable lib.so'\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      ;;\n    aix,no) # traditional AIX only\n      dynamic_linker='AIX lib.a[(]lib.so.V[)]'\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      ;;\n    svr4,*) # full svr4 only\n      dynamic_linker=\"AIX lib.so.V[(]$shared_archive_member_spec.o[)]\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,yes) # both, prefer svr4\n      dynamic_linker=\"AIX lib.so.V[(]$shared_archive_member_spec.o[)], lib.a[(]lib.so.V[)]\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # unpreferred sharedlib libNAME.a needs extra handling\n      postinstall_cmds='test -n \"$linkname\" || linkname=\"$realname\"~func_stripname \"\" \".so\" \"$linkname\"~$install_shared_prog \"$dir/$func_stripname_result.$libext\" \"$destdir/$func_stripname_result.$libext\"~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib \"$destdir/$func_stripname_result.$libext\"'\n      postuninstall_cmds='for n in $library_names $old_library; do :; done~func_stripname \"\" \".so\" \"$n\"~test \"$func_stripname_result\" = \"$n\" || func_append rmfiles \" $odir/$func_stripname_result.$libext\"'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,no) # both, prefer aix\n      dynamic_linker=\"AIX lib.a[(]lib.so.V[)], lib.so.V[(]$shared_archive_member_spec.o[)]\"\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      # unpreferred sharedlib libNAME.so.V and symlink libNAME.so need extra handling\n      postinstall_cmds='test -z \"$dlname\" || $install_shared_prog $dir/$dlname $destdir/$dlname~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib $destdir/$dlname~test -n \"$linkname\" || linkname=$realname~func_stripname \"\" \".a\" \"$linkname\"~(cd \"$destdir\" && $LN_S -f $dlname $func_stripname_result.so)'\n      postuninstall_cmds='test -z \"$dlname\" || func_append rmfiles \" $odir/$dlname\"~for n in $old_library $library_names; do :; done~func_stripname \"\" \".a\" \"$n\"~func_append rmfiles \" $odir/$func_stripname_result.so\"'\n      ;;\n    esac\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  case $host_cpu in\n  powerpc)\n    # Since July 2007 AmigaOS4 officially supports .so libraries.\n    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    ;;\n  m68k)\n    library_names_spec='$libname.ixlibrary $libname.a'\n    # Create ${libname}_ixlibrary.a entries in /sys/libs.\n    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all \"$lib\" | $SED '\\''s%^.*/\\([[^/]]*\\)\\.ixlibrary$%\\1%'\\''`; $RM /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n    ;;\n  esac\n  ;;\n\nbeos*)\n  library_names_spec='$libname$shared_ext'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[[45]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32* | cegcc*)\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$cc_basename in\n  yes,*)\n    # gcc\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname~\n      if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n        eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n      fi'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo $libname | sed -e 's/^lib/cyg/'``echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\nm4_if([$1], [],[\n      sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/lib/w32api\"])\n      ;;\n    mingw* | cegcc*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo $libname | sed -e 's/^lib/pw/'``echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n      ;;\n    esac\n    dynamic_linker='Win32 ld.exe'\n    ;;\n\n  *,cl*)\n    # Native MSVC\n    libname_spec='$name'\n    soname_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n    library_names_spec='$libname.dll.lib'\n\n    case $build_os in\n    mingw*)\n      sys_lib_search_path_spec=\n      lt_save_ifs=$IFS\n      IFS=';'\n      for lt_path in $LIB\n      do\n        IFS=$lt_save_ifs\n        # Let DOS variable expansion print the short 8.3 style file name.\n        lt_path=`cd \"$lt_path\" 2>/dev/null && cmd //C \"for %i in (\".\") do @echo %~si\"`\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec $lt_path\"\n      done\n      IFS=$lt_save_ifs\n      # Convert to MSYS style.\n      sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | sed -e 's|\\\\\\\\|/|g' -e 's| \\\\([[a-zA-Z]]\\\\):| /\\\\1|g' -e 's|^ ||'`\n      ;;\n    cygwin*)\n      # Convert to unix form, then to dos form, then back to unix form\n      # but this time dos style (no spaces!) so that the unix form looks\n      # like /cygdrive/c/PROGRA~1:/cygdr...\n      sys_lib_search_path_spec=`cygpath --path --unix \"$LIB\"`\n      sys_lib_search_path_spec=`cygpath --path --dos \"$sys_lib_search_path_spec\" 2>/dev/null`\n      sys_lib_search_path_spec=`cygpath --path --unix \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      ;;\n    *)\n      sys_lib_search_path_spec=$LIB\n      if $ECHO \"$sys_lib_search_path_spec\" | [$GREP ';[c-zC-Z]:/' >/dev/null]; then\n        # It is most probably a Windows format PATH.\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n      else\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      fi\n      # FIXME: find the short name or the path components, as spaces are\n      # common. (e.g. \"Program Files\" -> \"PROGRA~1\")\n      ;;\n    esac\n\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n    dynamic_linker='Win32 link.exe'\n    ;;\n\n  *)\n    # Assume MSVC wrapper\n    library_names_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext $libname.lib'\n    dynamic_linker='Win32 ld.exe'\n    ;;\n  esac\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$major$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$major$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\nm4_if([$1], [],[\n  sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/local/lib\"])\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[[23]].*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      soname_spec='$libname$release$shared_ext$major'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2.*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[[01]]* | freebsdelf3.[[01]]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[[2-9]]* | freebsdelf3.[[2-9]]* | \\\n  freebsd4.[[0-5]] | freebsdelf4.[[0-5]] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  *) # from 4.6 on, and DragonFly\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\nhaiku*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  dynamic_linker=\"$host_os runtime_loader\"\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/system/lib'\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    if test 32 = \"$HPUX_IA64_MODE\"; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux32\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux64\n    fi\n    ;;\n  hppa*64*)\n    shrext_cmds='.sl'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555, ...\n  postinstall_cmds='chmod 555 $lib'\n  # or fails outright, so override atomically:\n  install_override_mode=555\n  ;;\n\ninterix[[3-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test yes = \"$lt_cv_prog_gnu_ld\"; then\n\t\tversion_type=linux # correct to gnu/linux during the next big refactor\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$release$shared_ext $libname$shared_ext'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib$libsuff /lib$libsuff /usr/local/lib$libsuff\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib$libsuff /lib$libsuff\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\nlinux*android*)\n  version_type=none # Android doesn't support versioned libraries.\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext'\n  soname_spec='$libname$release$shared_ext'\n  finish_cmds=\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  dynamic_linker='Android linker'\n  # Don't embed -rpath directories since the linker doesn't support them.\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n\n  # Some binutils ld are patched to set DT_RUNPATH\n  AC_CACHE_VAL([lt_cv_shlibpath_overrides_runpath],\n    [lt_cv_shlibpath_overrides_runpath=no\n    save_LDFLAGS=$LDFLAGS\n    save_libdir=$libdir\n    eval \"libdir=/foo; wl=\\\"$_LT_TAGVAR(lt_prog_compiler_wl, $1)\\\"; \\\n\t LDFLAGS=\\\"\\$LDFLAGS $_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\\\"\"\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n      [AS_IF([ ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep \"RUNPATH.*$libdir\" >/dev/null],\n\t [lt_cv_shlibpath_overrides_runpath=yes])])\n    LDFLAGS=$save_LDFLAGS\n    libdir=$save_libdir\n    ])\n  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Add ABI-specific directories to the system library path.\n  sys_lib_dlsearch_path_spec=\"/lib64 /usr/lib64 /lib /usr/lib\"\n\n  # Ideally, we could use ldconfig to report *all* directores which are\n  # searched for libraries, however this is still not possible.  Aside from not\n  # being certain /sbin/ldconfig is available, command\n  # 'ldconfig -N -X -v | grep ^/' on 64bit Fedora does not report /usr/lib64,\n  # even though it is searched at run-time.  Try to do the best guess by\n  # appending ld.so.conf contents (and includes) to the search path.\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\[$]2)); skip = 1; } { if (!skip) print \\[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[\t ]*hwcap[\t ]/d;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/\"//g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"$sys_lib_dlsearch_path_spec $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\n*nto* | *qnx*)\n  version_type=qnx\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='ldqnx.so'\n  ;;\n\nopenbsd* | bitrig*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=/usr/lib\n  need_lib_prefix=no\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    need_version=no\n  else\n    need_version=yes\n  fi\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\nos2*)\n  libname_spec='$name'\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n  # OS/2 can only load a DLL with a base name of 8 characters or less.\n  soname_spec='`test -n \"$os2dllname\" && libname=\"$os2dllname\";\n    v=$($ECHO $release$versuffix | tr -d .-);\n    n=$($ECHO $libname | cut -b -$((8 - ${#v})) | tr . _);\n    $ECHO $n$v`$shared_ext'\n  library_names_spec='${libname}_dll.$libext'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=BEGINLIBPATH\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  postinstall_cmds='base_file=`basename \\$file`~\n    dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; $ECHO \\$dlname'\\''`~\n    dldir=$destdir/`dirname \\$dlpath`~\n    test -d \\$dldir || mkdir -p \\$dldir~\n    $install_prog $dir/$dlname \\$dldir/$dlname~\n    chmod a+x \\$dldir/$dlname~\n    if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n      eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n    fi'\n  postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; $ECHO \\$dlname'\\''`~\n    dlpath=$dir/\\$dldll~\n    $RM \\$dlpath'\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  ;;\n\nrdos*)\n  dynamic_linker=no\n  ;;\n\nsolaris*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test yes = \"$with_gnu_ld\"; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec; then\n    version_type=linux # correct to gnu/linux during the next big refactor\n    library_names_spec='$libname$shared_ext.$versuffix $libname$shared_ext.$major $libname$shared_ext'\n    soname_spec='$libname$shared_ext.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=sco\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  if test yes = \"$with_gnu_ld\"; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\ntpf*)\n  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nuts4*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\nAC_MSG_RESULT([$dynamic_linker])\ntest no = \"$dynamic_linker\" && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test yes = \"$GCC\"; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n\nif test set = \"${lt_cv_sys_lib_search_path_spec+set}\"; then\n  sys_lib_search_path_spec=$lt_cv_sys_lib_search_path_spec\nfi\n\nif test set = \"${lt_cv_sys_lib_dlsearch_path_spec+set}\"; then\n  sys_lib_dlsearch_path_spec=$lt_cv_sys_lib_dlsearch_path_spec\nfi\n\n# remember unaugmented sys_lib_dlsearch_path content for libtool script decls...\nconfigure_time_dlsearch_path=$sys_lib_dlsearch_path_spec\n\n# ... but it needs LT_SYS_LIBRARY_PATH munging for other configure-time code\nfunc_munge_path_list sys_lib_dlsearch_path_spec \"$LT_SYS_LIBRARY_PATH\"\n\n# to be used as default LT_SYS_LIBRARY_PATH value in generated libtool\nconfigure_time_lt_sys_library_path=$LT_SYS_LIBRARY_PATH\n\n_LT_DECL([], [variables_saved_for_relink], [1],\n    [Variables whose values should be saved in libtool wrapper scripts and\n    restored at link time])\n_LT_DECL([], [need_lib_prefix], [0],\n    [Do we need the \"lib\" prefix for modules?])\n_LT_DECL([], [need_version], [0], [Do we need a version for libraries?])\n_LT_DECL([], [version_type], [0], [Library versioning type])\n_LT_DECL([], [runpath_var], [0],  [Shared library runtime path variable])\n_LT_DECL([], [shlibpath_var], [0],[Shared library path variable])\n_LT_DECL([], [shlibpath_overrides_runpath], [0],\n    [Is shlibpath searched before the hard-coded library search path?])\n_LT_DECL([], [libname_spec], [1], [Format of library name prefix])\n_LT_DECL([], [library_names_spec], [1],\n    [[List of archive names.  First name is the real one, the rest are links.\n    The last name is the one that the linker finds with -lNAME]])\n_LT_DECL([], [soname_spec], [1],\n    [[The coded name of the library, if different from the real name]])\n_LT_DECL([], [install_override_mode], [1],\n    [Permission mode override for installation of shared libraries])\n_LT_DECL([], [postinstall_cmds], [2],\n    [Command to use after installation of a shared archive])\n_LT_DECL([], [postuninstall_cmds], [2],\n    [Command to use after uninstallation of a shared archive])\n_LT_DECL([], [finish_cmds], [2],\n    [Commands used to finish a libtool library installation in a directory])\n_LT_DECL([], [finish_eval], [1],\n    [[As \"finish_cmds\", except a single script fragment to be evaled but\n    not shown]])\n_LT_DECL([], [hardcode_into_libs], [0],\n    [Whether we should hardcode library paths into libraries])\n_LT_DECL([], [sys_lib_search_path_spec], [2],\n    [Compile-time system search path for libraries])\n_LT_DECL([sys_lib_dlsearch_path_spec], [configure_time_dlsearch_path], [2],\n    [Detected run-time system search path for libraries])\n_LT_DECL([], [configure_time_lt_sys_library_path], [2],\n    [Explicit LT_SYS_LIBRARY_PATH set during ./configure time])\n])# _LT_SYS_DYNAMIC_LINKER\n\n\n# _LT_PATH_TOOL_PREFIX(TOOL)\n# --------------------------\n# find a file program that can recognize shared library\nAC_DEFUN([_LT_PATH_TOOL_PREFIX],\n[m4_require([_LT_DECL_EGREP])dnl\nAC_MSG_CHECKING([for $1])\nAC_CACHE_VAL(lt_cv_path_MAGIC_CMD,\n[case $MAGIC_CMD in\n[[\\\\/*] |  ?:[\\\\/]*])\n  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=$MAGIC_CMD\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\ndnl $ac_dummy forces splitting on constant user-supplied paths.\ndnl POSIX.2 word splitting is done only on the output of word expansions,\ndnl not every word.  This closes a longstanding sh security hole.\n  ac_dummy=\"m4_if([$2], , $PATH, [$2])\"\n  for ac_dir in $ac_dummy; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$1\"; then\n      lt_cv_path_MAGIC_CMD=$ac_dir/\"$1\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=$lt_cv_path_MAGIC_CMD\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<_LT_EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\n_LT_EOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=$lt_save_ifs\n  MAGIC_CMD=$lt_save_MAGIC_CMD\n  ;;\nesac])\nMAGIC_CMD=$lt_cv_path_MAGIC_CMD\nif test -n \"$MAGIC_CMD\"; then\n  AC_MSG_RESULT($MAGIC_CMD)\nelse\n  AC_MSG_RESULT(no)\nfi\n_LT_DECL([], [MAGIC_CMD], [0],\n\t [Used to examine libraries when file_magic_cmd begins with \"file\"])dnl\n])# _LT_PATH_TOOL_PREFIX\n\n# Old name:\nAU_ALIAS([AC_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PATH_TOOL_PREFIX], [])\n\n\n# _LT_PATH_MAGIC\n# --------------\n# find a file program that can recognize a shared library\nm4_defun([_LT_PATH_MAGIC],\n[_LT_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)\nif test -z \"$lt_cv_path_MAGIC_CMD\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    _LT_PATH_TOOL_PREFIX(file, /usr/bin$PATH_SEPARATOR$PATH)\n  else\n    MAGIC_CMD=:\n  fi\nfi\n])# _LT_PATH_MAGIC\n\n\n# LT_PATH_LD\n# ----------\n# find the pathname to the GNU or non-GNU linker\nAC_DEFUN([LT_PATH_LD],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PROG_ECHO_BACKSLASH])dnl\n\nAC_ARG_WITH([gnu-ld],\n    [AS_HELP_STRING([--with-gnu-ld],\n\t[assume the C compiler uses GNU ld @<:@default=no@:>@])],\n    [test no = \"$withval\" || with_gnu_ld=yes],\n    [with_gnu_ld=no])dnl\n\nac_prog=ld\nif test yes = \"$GCC\"; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  AC_MSG_CHECKING([for ld used by $CC])\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return, which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [[\\\\/]]* | ?:[[\\\\/]]*)\n      re_direlt='/[[^/]][[^/]]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`$ECHO \"$ac_prog\"| $SED 's%\\\\\\\\%/%g'`\n      while $ECHO \"$ac_prog\" | $GREP \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`$ECHO $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=$ac_prog\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test yes = \"$with_gnu_ld\"; then\n  AC_MSG_CHECKING([for GNU ld])\nelse\n  AC_MSG_CHECKING([for non-GNU ld])\nfi\nAC_CACHE_VAL(lt_cv_path_LD,\n[if test -z \"$LD\"; then\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=$ac_dir/$ac_prog\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest no != \"$with_gnu_ld\" && break\n\t;;\n      *)\n\ttest yes != \"$with_gnu_ld\" && break\n\t;;\n      esac\n    fi\n  done\n  IFS=$lt_save_ifs\nelse\n  lt_cv_path_LD=$LD # Let the user override the test with a path.\nfi])\nLD=$lt_cv_path_LD\nif test -n \"$LD\"; then\n  AC_MSG_RESULT($LD)\nelse\n  AC_MSG_RESULT(no)\nfi\ntest -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\n_LT_PATH_LD_GNU\nAC_SUBST([LD])\n\n_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])\n])# LT_PATH_LD\n\n# Old names:\nAU_ALIAS([AM_PROG_LD], [LT_PATH_LD])\nAU_ALIAS([AC_PROG_LD], [LT_PATH_LD])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_LD], [])\ndnl AC_DEFUN([AC_PROG_LD], [])\n\n\n# _LT_PATH_LD_GNU\n#- --------------\nm4_defun([_LT_PATH_LD_GNU],\n[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,\n[# I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac])\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n])# _LT_PATH_LD_GNU\n\n\n# _LT_CMD_RELOAD\n# --------------\n# find reload flag for linker\n#   -- PORTME Some linkers may need a different reload flag.\nm4_defun([_LT_CMD_RELOAD],\n[AC_CACHE_CHECK([for $LD option to reload object files],\n  lt_cv_ld_reload_flag,\n  [lt_cv_ld_reload_flag='-r'])\nreload_flag=$lt_cv_ld_reload_flag\ncase $reload_flag in\n\"\" | \" \"*) ;;\n*) reload_flag=\" $reload_flag\" ;;\nesac\nreload_cmds='$LD$reload_flag -o $output$reload_objs'\ncase $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    if test yes != \"$GCC\"; then\n      reload_cmds=false\n    fi\n    ;;\n  darwin*)\n    if test yes = \"$GCC\"; then\n      reload_cmds='$LTCC $LTCFLAGS -nostdlib $wl-r -o $output$reload_objs'\n    else\n      reload_cmds='$LD$reload_flag -o $output$reload_objs'\n    fi\n    ;;\nesac\n_LT_TAGDECL([], [reload_flag], [1], [How to create reloadable object files])dnl\n_LT_TAGDECL([], [reload_cmds], [2])dnl\n])# _LT_CMD_RELOAD\n\n\n# _LT_PATH_DD\n# -----------\n# find a working dd\nm4_defun([_LT_PATH_DD],\n[AC_CACHE_CHECK([for a working dd], [ac_cv_path_lt_DD],\n[printf 0123456789abcdef0123456789abcdef >conftest.i\ncat conftest.i conftest.i >conftest2.i\n: ${lt_DD:=$DD}\nAC_PATH_PROGS_FEATURE_CHECK([lt_DD], [dd],\n[if \"$ac_path_lt_DD\" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then\n  cmp -s conftest.i conftest.out \\\n  && ac_cv_path_lt_DD=\"$ac_path_lt_DD\" ac_path_lt_DD_found=:\nfi])\nrm -f conftest.i conftest2.i conftest.out])\n])# _LT_PATH_DD\n\n\n# _LT_CMD_TRUNCATE\n# ----------------\n# find command to truncate a binary pipe\nm4_defun([_LT_CMD_TRUNCATE],\n[m4_require([_LT_PATH_DD])\nAC_CACHE_CHECK([how to truncate binary pipes], [lt_cv_truncate_bin],\n[printf 0123456789abcdef0123456789abcdef >conftest.i\ncat conftest.i conftest.i >conftest2.i\nlt_cv_truncate_bin=\nif \"$ac_cv_path_lt_DD\" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then\n  cmp -s conftest.i conftest.out \\\n  && lt_cv_truncate_bin=\"$ac_cv_path_lt_DD bs=4096 count=1\"\nfi\nrm -f conftest.i conftest2.i conftest.out\ntest -z \"$lt_cv_truncate_bin\" && lt_cv_truncate_bin=\"$SED -e 4q\"])\n_LT_DECL([lt_truncate_bin], [lt_cv_truncate_bin], [1],\n  [Command to truncate a binary pipe])\n])# _LT_CMD_TRUNCATE\n\n\n# _LT_CHECK_MAGIC_METHOD\n# ----------------------\n# how to check for library dependencies\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_MAGIC_METHOD],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nAC_CACHE_CHECK([how to recognize dependent libraries],\nlt_cv_deplibs_check_method,\n[lt_cv_file_magic_cmd='$MAGIC_CMD'\nlt_cv_file_magic_test_file=\nlt_cv_deplibs_check_method='unknown'\n# Need to set the preceding variable on all platforms that support\n# interlibrary dependencies.\n# 'none' -- dependencies not supported.\n# 'unknown' -- same as none, but documents that we really don't know.\n# 'pass_all' -- all dependencies passed with no checks.\n# 'test_compile' -- check by making test program.\n# 'file_magic [[regex]]' -- check by looking for files in library path\n# that responds to the $file_magic_cmd with a given extended regex.\n# If you have 'file' or equivalent on your system and you're not sure\n# whether 'pass_all' will *always* work, you probably want this one.\n\ncase $host_os in\naix[[4-9]]*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbeos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbsdi[[45]]*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib)'\n  lt_cv_file_magic_cmd='/usr/bin/file -L'\n  lt_cv_file_magic_test_file=/shlib/libc.so\n  ;;\n\ncygwin*)\n  # func_win32_libid is a shell function defined in ltmain.sh\n  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n  lt_cv_file_magic_cmd='func_win32_libid'\n  ;;\n\nmingw* | pw32*)\n  # Base MSYS/MinGW do not provide the 'file' command needed by\n  # func_win32_libid shell function, so use a weaker test based on 'objdump',\n  # unless we find 'file', for example because we are cross-compiling.\n  if ( file / ) >/dev/null 2>&1; then\n    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n    lt_cv_file_magic_cmd='func_win32_libid'\n  else\n    # Keep this pattern in sync with the one in func_win32_libid.\n    lt_cv_deplibs_check_method='file_magic file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)'\n    lt_cv_file_magic_cmd='$OBJDUMP -f'\n  fi\n  ;;\n\ncegcc*)\n  # use the weaker test based on 'objdump'. See mingw*.\n  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'\n  lt_cv_file_magic_cmd='$OBJDUMP -f'\n  ;;\n\ndarwin* | rhapsody*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nfreebsd* | dragonfly*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    case $host_cpu in\n    i*86 )\n      # Not sure whether the presence of OpenBSD here was a mistake.\n      # Let's accept both of them until this is cleared up.\n      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[[3-9]]86 (compact )?demand paged shared library'\n      lt_cv_file_magic_cmd=/usr/bin/file\n      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`\n      ;;\n    esac\n  else\n    lt_cv_deplibs_check_method=pass_all\n  fi\n  ;;\n\nhaiku*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhpux10.20* | hpux11*)\n  lt_cv_file_magic_cmd=/usr/bin/file\n  case $host_cpu in\n  ia64*)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|ELF-[[0-9]][[0-9]]) shared object file - IA64'\n    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so\n    ;;\n  hppa*64*)\n    [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF[ -][0-9][0-9])(-bit)?( [LM]SB)? shared object( file)?[, -]* PA-RISC [0-9]\\.[0-9]']\n    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl\n    ;;\n  *)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|PA-RISC[[0-9]]\\.[[0-9]]) shared library'\n    lt_cv_file_magic_test_file=/usr/lib/libc.sl\n    ;;\n  esac\n  ;;\n\ninterix[[3-9]]*)\n  # PIC code is broken on Interix 3.x, that's why |\\.a not |_pic\\.a here\n  lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|\\.a)$'\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $LD in\n  *-32|*\"-32 \") libmagic=32-bit;;\n  *-n32|*\"-n32 \") libmagic=N32;;\n  *-64|*\"-64 \") libmagic=64-bit;;\n  *) libmagic=never-match;;\n  esac\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nnetbsd*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|_pic\\.a)$'\n  fi\n  ;;\n\nnewos6*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (executable|dynamic lib)'\n  lt_cv_file_magic_cmd=/usr/bin/file\n  lt_cv_file_magic_test_file=/usr/lib/libnls.so\n  ;;\n\n*nto* | *qnx*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nopenbsd* | bitrig*)\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|\\.so|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  fi\n  ;;\n\nosf3* | osf4* | osf5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nrdos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsolaris*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv4 | sysv4.3*)\n  case $host_vendor in\n  motorola)\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib) M[[0-9]][[0-9]]* Version [[0-9]]'\n    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`\n    ;;\n  ncr)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  sequent)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB (shared object|dynamic lib )'\n    ;;\n  sni)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method=\"file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB dynamic lib\"\n    lt_cv_file_magic_test_file=/lib/libc.so\n    ;;\n  siemens)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  pc)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  esac\n  ;;\n\ntpf*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nos2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nesac\n])\n\nfile_magic_glob=\nwant_nocaseglob=no\nif test \"$build\" = \"$host\"; then\n  case $host_os in\n  mingw* | pw32*)\n    if ( shopt | grep nocaseglob ) >/dev/null 2>&1; then\n      want_nocaseglob=yes\n    else\n      file_magic_glob=`echo aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ | $SED -e \"s/\\(..\\)/s\\/[[\\1]]\\/[[\\1]]\\/g;/g\"`\n    fi\n    ;;\n  esac\nfi\n\nfile_magic_cmd=$lt_cv_file_magic_cmd\ndeplibs_check_method=$lt_cv_deplibs_check_method\ntest -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n\n_LT_DECL([], [deplibs_check_method], [1],\n    [Method to check whether dependent libraries are shared objects])\n_LT_DECL([], [file_magic_cmd], [1],\n    [Command to use when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [file_magic_glob], [1],\n    [How to find potential files when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [want_nocaseglob], [1],\n    [Find potential files using nocaseglob when deplibs_check_method = \"file_magic\"])\n])# _LT_CHECK_MAGIC_METHOD\n\n\n# LT_PATH_NM\n# ----------\n# find the pathname to a BSD- or MS-compatible name lister\nAC_DEFUN([LT_PATH_NM],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,\n[if test -n \"$NM\"; then\n  # Let the user override the test.\n  lt_cv_path_NM=$NM\nelse\n  lt_nm_to_check=${ac_tool_prefix}nm\n  if test -n \"$ac_tool_prefix\" && test \"$build\" = \"$host\"; then\n    lt_nm_to_check=\"$lt_nm_to_check nm\"\n  fi\n  for lt_tmp_nm in $lt_nm_to_check; do\n    lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do\n      IFS=$lt_save_ifs\n      test -z \"$ac_dir\" && ac_dir=.\n      tmp_nm=$ac_dir/$lt_tmp_nm\n      if test -f \"$tmp_nm\" || test -f \"$tmp_nm$ac_exeext\"; then\n\t# Check to see if the nm accepts a BSD-compat flag.\n\t# Adding the 'sed 1q' prevents false positives on HP-UX, which says:\n\t#   nm: unknown option \"B\" ignored\n\t# Tru64's nm complains that /dev/null is an invalid object file\n\t# MSYS converts /dev/null to NUL, MinGW nm treats NUL as empty\n\tcase $build_os in\n\tmingw*) lt_bad_file=conftest.nm/nofile ;;\n\t*) lt_bad_file=/dev/null ;;\n\tesac\n\tcase `\"$tmp_nm\" -B $lt_bad_file 2>&1 | sed '1q'` in\n\t*$lt_bad_file* | *'Invalid file or object type'*)\n\t  lt_cv_path_NM=\"$tmp_nm -B\"\n\t  break 2\n\t  ;;\n\t*)\n\t  case `\"$tmp_nm\" -p /dev/null 2>&1 | sed '1q'` in\n\t  */dev/null*)\n\t    lt_cv_path_NM=\"$tmp_nm -p\"\n\t    break 2\n\t    ;;\n\t  *)\n\t    lt_cv_path_NM=${lt_cv_path_NM=\"$tmp_nm\"} # keep the first match, but\n\t    continue # so that we can try to find one that supports BSD flags\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n      fi\n    done\n    IFS=$lt_save_ifs\n  done\n  : ${lt_cv_path_NM=no}\nfi])\nif test no != \"$lt_cv_path_NM\"; then\n  NM=$lt_cv_path_NM\nelse\n  # Didn't find any BSD compatible name lister, look for dumpbin.\n  if test -n \"$DUMPBIN\"; then :\n    # Let the user override the test.\n  else\n    AC_CHECK_TOOLS(DUMPBIN, [dumpbin \"link -dump\"], :)\n    case `$DUMPBIN -symbols -headers /dev/null 2>&1 | sed '1q'` in\n    *COFF*)\n      DUMPBIN=\"$DUMPBIN -symbols -headers\"\n      ;;\n    *)\n      DUMPBIN=:\n      ;;\n    esac\n  fi\n  AC_SUBST([DUMPBIN])\n  if test : != \"$DUMPBIN\"; then\n    NM=$DUMPBIN\n  fi\nfi\ntest -z \"$NM\" && NM=nm\nAC_SUBST([NM])\n_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl\n\nAC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],\n  [lt_cv_nm_interface=\"BSD nm\"\n  echo \"int some_variable = 0;\" > conftest.$ac_ext\n  (eval echo \"\\\"\\$as_me:$LINENO: $ac_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$ac_compile\" 2>conftest.err)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: output\\\"\" >&AS_MESSAGE_LOG_FD)\n  cat conftest.out >&AS_MESSAGE_LOG_FD\n  if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n    lt_cv_nm_interface=\"MS dumpbin\"\n  fi\n  rm -f conftest*])\n])# LT_PATH_NM\n\n# Old names:\nAU_ALIAS([AM_PROG_NM], [LT_PATH_NM])\nAU_ALIAS([AC_PROG_NM], [LT_PATH_NM])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_NM], [])\ndnl AC_DEFUN([AC_PROG_NM], [])\n\n# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n# --------------------------------\n# how to determine the name of the shared library\n# associated with a specific link library.\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_SHAREDLIB_FROM_LINKLIB],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nm4_require([_LT_DECL_DLLTOOL])\nAC_CACHE_CHECK([how to associate runtime and link libraries],\nlt_cv_sharedlib_from_linklib_cmd,\n[lt_cv_sharedlib_from_linklib_cmd='unknown'\n\ncase $host_os in\ncygwin* | mingw* | pw32* | cegcc*)\n  # two different shell functions defined in ltmain.sh;\n  # decide which one to use based on capabilities of $DLLTOOL\n  case `$DLLTOOL --help 2>&1` in\n  *--identify-strict*)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib\n    ;;\n  *)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib_fallback\n    ;;\n  esac\n  ;;\n*)\n  # fallback: assume linklib IS sharedlib\n  lt_cv_sharedlib_from_linklib_cmd=$ECHO\n  ;;\nesac\n])\nsharedlib_from_linklib_cmd=$lt_cv_sharedlib_from_linklib_cmd\ntest -z \"$sharedlib_from_linklib_cmd\" && sharedlib_from_linklib_cmd=$ECHO\n\n_LT_DECL([], [sharedlib_from_linklib_cmd], [1],\n    [Command to associate shared and link libraries])\n])# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n\n\n# _LT_PATH_MANIFEST_TOOL\n# ----------------------\n# locate the manifest tool\nm4_defun([_LT_PATH_MANIFEST_TOOL],\n[AC_CHECK_TOOL(MANIFEST_TOOL, mt, :)\ntest -z \"$MANIFEST_TOOL\" && MANIFEST_TOOL=mt\nAC_CACHE_CHECK([if $MANIFEST_TOOL is a manifest tool], [lt_cv_path_mainfest_tool],\n  [lt_cv_path_mainfest_tool=no\n  echo \"$as_me:$LINENO: $MANIFEST_TOOL '-?'\" >&AS_MESSAGE_LOG_FD\n  $MANIFEST_TOOL '-?' 2>conftest.err > conftest.out\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  if $GREP 'Manifest Tool' conftest.out > /dev/null; then\n    lt_cv_path_mainfest_tool=yes\n  fi\n  rm -f conftest*])\nif test yes != \"$lt_cv_path_mainfest_tool\"; then\n  MANIFEST_TOOL=:\nfi\n_LT_DECL([], [MANIFEST_TOOL], [1], [Manifest tool])dnl\n])# _LT_PATH_MANIFEST_TOOL\n\n\n# _LT_DLL_DEF_P([FILE])\n# ---------------------\n# True iff FILE is a Windows DLL '.def' file.\n# Keep in sync with func_dll_def_p in the libtool script\nAC_DEFUN([_LT_DLL_DEF_P],\n[dnl\n  test DEF = \"`$SED -n dnl\n    -e '\\''s/^[[\t ]]*//'\\'' dnl Strip leading whitespace\n    -e '\\''/^\\(;.*\\)*$/d'\\'' dnl      Delete empty lines and comments\n    -e '\\''s/^\\(EXPORTS\\|LIBRARY\\)\\([[\t ]].*\\)*$/DEF/p'\\'' dnl\n    -e q dnl                          Only consider the first \"real\" line\n    $1`\" dnl\n])# _LT_DLL_DEF_P\n\n\n# LT_LIB_M\n# --------\n# check for math library\nAC_DEFUN([LT_LIB_M],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nLIBM=\ncase $host in\n*-*-beos* | *-*-cegcc* | *-*-cygwin* | *-*-haiku* | *-*-pw32* | *-*-darwin*)\n  # These system don't have libm, or don't need it\n  ;;\n*-ncr-sysv4.3*)\n  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=-lmw)\n  AC_CHECK_LIB(m, cos, LIBM=\"$LIBM -lm\")\n  ;;\n*)\n  AC_CHECK_LIB(m, cos, LIBM=-lm)\n  ;;\nesac\nAC_SUBST([LIBM])\n])# LT_LIB_M\n\n# Old name:\nAU_ALIAS([AC_CHECK_LIBM], [LT_LIB_M])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_CHECK_LIBM], [])\n\n\n# _LT_COMPILER_NO_RTTI([TAGNAME])\n# -------------------------------\nm4_defun([_LT_COMPILER_NO_RTTI],\n[m4_require([_LT_TAG_COMPILER])dnl\n\n_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n\nif test yes = \"$GCC\"; then\n  case $cc_basename in\n  nvcc*)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -Xcompiler -fno-builtin' ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin' ;;\n  esac\n\n  _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions],\n    lt_cv_prog_compiler_rtti_exceptions,\n    [-fno-rtti -fno-exceptions], [],\n    [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\"$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) -fno-rtti -fno-exceptions\"])\nfi\n_LT_TAGDECL([no_builtin_flag], [lt_prog_compiler_no_builtin_flag], [1],\n\t[Compiler flag to turn off builtin functions])\n])# _LT_COMPILER_NO_RTTI\n\n\n# _LT_CMD_GLOBAL_SYMBOLS\n# ----------------------\nm4_defun([_LT_CMD_GLOBAL_SYMBOLS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_PROG_AWK])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_TAG_COMPILER])dnl\n\n# Check for command to grab the raw symbol name followed by C symbol from nm.\nAC_MSG_CHECKING([command to parse $NM output from $compiler object])\nAC_CACHE_VAL([lt_cv_sys_global_symbol_pipe],\n[\n# These are sane defaults that work on at least a few old systems.\n# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n\n# Character class describing NM global symbol codes.\nsymcode='[[BCDEGRST]]'\n\n# Regexp to match symbols that can be accessed directly from C.\nsympat='\\([[_A-Za-z]][[_A-Za-z0-9]]*\\)'\n\n# Define system-specific variables.\ncase $host_os in\naix*)\n  symcode='[[BCDT]]'\n  ;;\ncygwin* | mingw* | pw32* | cegcc*)\n  symcode='[[ABCDGISTW]]'\n  ;;\nhpux*)\n  if test ia64 = \"$host_cpu\"; then\n    symcode='[[ABCDEGRST]]'\n  fi\n  ;;\nirix* | nonstopux*)\n  symcode='[[BCDEGRST]]'\n  ;;\nosf*)\n  symcode='[[BCDEGQRST]]'\n  ;;\nsolaris*)\n  symcode='[[BDRT]]'\n  ;;\nsco3.2v5*)\n  symcode='[[DT]]'\n  ;;\nsysv4.2uw2*)\n  symcode='[[DT]]'\n  ;;\nsysv5* | sco5v6* | unixware* | OpenUNIX*)\n  symcode='[[ABDT]]'\n  ;;\nsysv4)\n  symcode='[[DFNSTU]]'\n  ;;\nesac\n\n# If we're using GNU nm, then use its standard symbol codes.\ncase `$NM -V 2>&1` in\n*GNU* | *'with BFD'*)\n  symcode='[[ABCDGIRSTW]]' ;;\nesac\n\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  # Gets list of data symbols to import.\n  lt_cv_sys_global_symbol_to_import=\"sed -n -e 's/^I .* \\(.*\\)$/\\1/p'\"\n  # Adjust the below global symbol transforms to fixup imported variables.\n  lt_cdecl_hook=\" -e 's/^I .* \\(.*\\)$/extern __declspec(dllimport) char \\1;/p'\"\n  lt_c_name_hook=\" -e 's/^I .* \\(.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\"\n  lt_c_name_lib_hook=\"\\\n  -e 's/^I .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\\\n  -e 's/^I .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) 0},/p'\"\nelse\n  # Disable hooks by default.\n  lt_cv_sys_global_symbol_to_import=\n  lt_cdecl_hook=\n  lt_c_name_hook=\n  lt_c_name_lib_hook=\nfi\n\n# Transform an extracted symbol line into a proper C declaration.\n# Some systems (esp. on ia64) link data and code symbols differently,\n# so use this general approach.\nlt_cv_sys_global_symbol_to_cdecl=\"sed -n\"\\\n$lt_cdecl_hook\\\n\" -e 's/^T .* \\(.*\\)$/extern int \\1();/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n\n# Transform an extracted symbol line into symbol name and symbol address\nlt_cv_sys_global_symbol_to_c_name_address=\"sed -n\"\\\n$lt_c_name_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\n\n# Transform an extracted symbol line into symbol name with lib prefix and\n# symbol address.\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix=\"sed -n\"\\\n$lt_c_name_lib_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) \\&\\1},/p'\"\n\n# Handle CRLF in mingw tool chain\nopt_cr=\ncase $build_os in\nmingw*)\n  opt_cr=`$ECHO 'x\\{0,1\\}' | tr x '\\015'` # option cr in regexp\n  ;;\nesac\n\n# Try without a prefix underscore, then with it.\nfor ac_symprfx in \"\" \"_\"; do\n\n  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.\n  symxfrm=\"\\\\1 $ac_symprfx\\\\2 \\\\2\"\n\n  # Write the raw and C identifiers.\n  if test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n    # Fake it for dumpbin and say T for any non-static function,\n    # D for any global variable and I for any imported variable.\n    # Also find C++ and __fastcall symbols from MSVC++,\n    # which start with @ or ?.\n    lt_cv_sys_global_symbol_pipe=\"$AWK ['\"\\\n\"     {last_section=section; section=\\$ 3};\"\\\n\"     /^COFF SYMBOL TABLE/{for(i in hide) delete hide[i]};\"\\\n\"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};\"\\\n\"     /^ *Symbol name *: /{split(\\$ 0,sn,\\\":\\\"); si=substr(sn[2],2)};\"\\\n\"     /^ *Type *: code/{print \\\"T\\\",si,substr(si,length(prfx))};\"\\\n\"     /^ *Type *: data/{print \\\"I\\\",si,substr(si,length(prfx))};\"\\\n\"     \\$ 0!~/External *\\|/{next};\"\\\n\"     / 0+ UNDEF /{next}; / UNDEF \\([^|]\\)*()/{next};\"\\\n\"     {if(hide[section]) next};\"\\\n\"     {f=\\\"D\\\"}; \\$ 0~/\\(\\).*\\|/{f=\\\"T\\\"};\"\\\n\"     {split(\\$ 0,a,/\\||\\r/); split(a[2],s)};\"\\\n\"     s[1]~/^[@?]/{print f,s[1],s[1]; next};\"\\\n\"     s[1]~prfx {split(s[1],t,\\\"@\\\"); print f,t[1],substr(t[1],length(prfx))}\"\\\n\"     ' prfx=^$ac_symprfx]\"\n  else\n    lt_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[[\t ]]\\($symcode$symcode*\\)[[\t ]][[\t ]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'\"\n  fi\n  lt_cv_sys_global_symbol_pipe=\"$lt_cv_sys_global_symbol_pipe | sed '/ __gnu_lto/d'\"\n\n  # Check to see that the pipe works correctly.\n  pipe_works=no\n\n  rm -f conftest*\n  cat > conftest.$ac_ext <<_LT_EOF\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nchar nm_test_var;\nvoid nm_test_func(void);\nvoid nm_test_func(void){}\n#ifdef __cplusplus\n}\n#endif\nint main(){nm_test_var='a';nm_test_func();return(0);}\n_LT_EOF\n\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| \"$lt_cv_sys_global_symbol_pipe\" \\> $nlist) && test -s \"$nlist\"; then\n      # Try sorting and uniquifying the output.\n      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n\tmv -f \"$nlist\"T \"$nlist\"\n      else\n\trm -f \"$nlist\"T\n      fi\n\n      # Make sure that we snagged all the symbols we need.\n      if $GREP ' nm_test_var$' \"$nlist\" >/dev/null; then\n\tif $GREP ' nm_test_func$' \"$nlist\" >/dev/null; then\n\t  cat <<_LT_EOF > conftest.$ac_ext\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT@&t@_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT@&t@_DLSYM_CONST\n#else\n# define LT@&t@_DLSYM_CONST const\n#endif\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n_LT_EOF\n\t  # Now generate the symbol file.\n\t  eval \"$lt_cv_sys_global_symbol_to_cdecl\"' < \"$nlist\" | $GREP -v main >> conftest.$ac_ext'\n\n\t  cat <<_LT_EOF >> conftest.$ac_ext\n\n/* The mapping between symbol names and symbols.  */\nLT@&t@_DLSYM_CONST struct {\n  const char *name;\n  void       *address;\n}\nlt__PROGRAM__LTX_preloaded_symbols[[]] =\n{\n  { \"@PROGRAM@\", (void *) 0 },\n_LT_EOF\n\t  $SED \"s/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/\" < \"$nlist\" | $GREP -v main >> conftest.$ac_ext\n\t  cat <<\\_LT_EOF >> conftest.$ac_ext\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt__PROGRAM__LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n_LT_EOF\n\t  # Now try linking the two files.\n\t  mv conftest.$ac_objext conftstm.$ac_objext\n\t  lt_globsym_save_LIBS=$LIBS\n\t  lt_globsym_save_CFLAGS=$CFLAGS\n\t  LIBS=conftstm.$ac_objext\n\t  CFLAGS=\"$CFLAGS$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\"\n\t  if AC_TRY_EVAL(ac_link) && test -s conftest$ac_exeext; then\n\t    pipe_works=yes\n\t  fi\n\t  LIBS=$lt_globsym_save_LIBS\n\t  CFLAGS=$lt_globsym_save_CFLAGS\n\telse\n\t  echo \"cannot find nm_test_func in $nlist\" >&AS_MESSAGE_LOG_FD\n\tfi\n      else\n\techo \"cannot find nm_test_var in $nlist\" >&AS_MESSAGE_LOG_FD\n      fi\n    else\n      echo \"cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"$progname: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.$ac_ext >&5\n  fi\n  rm -rf conftest* conftst*\n\n  # Do not use the global_symbol_pipe unless it works.\n  if test yes = \"$pipe_works\"; then\n    break\n  else\n    lt_cv_sys_global_symbol_pipe=\n  fi\ndone\n])\nif test -z \"$lt_cv_sys_global_symbol_pipe\"; then\n  lt_cv_sys_global_symbol_to_cdecl=\nfi\nif test -z \"$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl\"; then\n  AC_MSG_RESULT(failed)\nelse\n  AC_MSG_RESULT(ok)\nfi\n\n# Response file support.\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  nm_file_list_spec='@'\nelif $NM --help 2>/dev/null | grep '[[@]]FILE' >/dev/null; then\n  nm_file_list_spec='@'\nfi\n\n_LT_DECL([global_symbol_pipe], [lt_cv_sys_global_symbol_pipe], [1],\n    [Take the output of nm and produce a listing of raw symbols and C names])\n_LT_DECL([global_symbol_to_cdecl], [lt_cv_sys_global_symbol_to_cdecl], [1],\n    [Transform the output of nm in a proper C declaration])\n_LT_DECL([global_symbol_to_import], [lt_cv_sys_global_symbol_to_import], [1],\n    [Transform the output of nm into a list of symbols to manually relocate])\n_LT_DECL([global_symbol_to_c_name_address],\n    [lt_cv_sys_global_symbol_to_c_name_address], [1],\n    [Transform the output of nm in a C name address pair])\n_LT_DECL([global_symbol_to_c_name_address_lib_prefix],\n    [lt_cv_sys_global_symbol_to_c_name_address_lib_prefix], [1],\n    [Transform the output of nm in a C name address pair when lib prefix is needed])\n_LT_DECL([nm_interface], [lt_cv_nm_interface], [1],\n    [The name lister interface])\n_LT_DECL([], [nm_file_list_spec], [1],\n    [Specify filename containing input files for $NM])\n]) # _LT_CMD_GLOBAL_SYMBOLS\n\n\n# _LT_COMPILER_PIC([TAGNAME])\n# ---------------------------\nm4_defun([_LT_COMPILER_PIC],\n[m4_require([_LT_TAG_COMPILER])dnl\n_LT_TAGVAR(lt_prog_compiler_wl, $1)=\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n_LT_TAGVAR(lt_prog_compiler_static, $1)=\n\nm4_if([$1], [CXX], [\n  # C++ specific cases for pic, static, wl, etc.\n  if test yes = \"$GXX\"; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n    aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n    mingw* | cygwin* | os2* | pw32* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n    *djgpp*)\n      # DJGPP does not support shared libraries at all\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n      ;;\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n    *qnx* | *nto*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    case $host_os in\n      aix[[4-9]]*)\n\t# All AIX code is PIC.\n\tif test ia64 = \"$host_cpu\"; then\n\t  # AIX 5 now supports IA64 processor\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\telse\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n\tfi\n\t;;\n      chorus*)\n\tcase $cc_basename in\n\tcxch68*)\n\t  # Green Hills C++ Compiler\n\t  # _LT_TAGVAR(lt_prog_compiler_static, $1)=\"--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a\"\n\t  ;;\n\tesac\n\t;;\n      mingw* | cygwin* | os2* | pw32* | cegcc*)\n\t# This hack is so that the source file can tell whether it is being\n\t# built for inclusion in a dll (and should export symbols for example).\n\tm4_if([$1], [GCJ], [],\n\t  [_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n\t;;\n      dgux*)\n\tcase $cc_basename in\n\t  ec++*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  ghcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      freebsd* | dragonfly*)\n\t# FreeBSD uses GNU C++\n\t;;\n      hpux9* | hpux10* | hpux11*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n\t    if test ia64 != \"$host_cpu\"; then\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t    fi\n\t    ;;\n\t  aCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n\t    case $host_cpu in\n\t    hppa*64*|ia64*)\n\t      # +Z the default\n\t      ;;\n\t    *)\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t      ;;\n\t    esac\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      interix*)\n\t# This is c89, which is MS Visual C++ (no shared libs)\n\t# Anyone wants to do a port?\n\t;;\n      irix5* | irix6* | nonstopux*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    # CC pic flag -KPIC is the default.\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    # KAI C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    ;;\n\t  ecpc* )\n\t    # old Intel C++ for x86_64, which still supported -KPIC.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  icpc* )\n\t    # Intel C++, used to be incompatible with GCC.\n\t    # ICC 10 doesn't accept -KPIC any more.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  pgCC* | pgcpp*)\n\t    # Portland Group C++ compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  xlc* | xlC* | bgxl[[cC]]* | mpixl[[cC]]*)\n\t    # IBM XL 8.0, 9.0 on PPC and BlueGene\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n      lynxos*)\n\t;;\n      m88k*)\n\t;;\n      mvs*)\n\tcase $cc_basename in\n\t  cxx*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      netbsd*)\n\t;;\n      *qnx* | *nto*)\n        # QNX uses GNU C++, but need to define -shared option too, otherwise\n        # it will coredump.\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n        ;;\n      osf3* | osf4* | osf5*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    ;;\n\t  RCC*)\n\t    # Rational C++ 2.4.1\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  cxx*)\n\t    # Digital/Compaq C++\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      psos*)\n\t;;\n      solaris*)\n\tcase $cc_basename in\n\t  CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t    ;;\n\t  gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sunos4*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.x\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  lcc*)\n\t    # Lucid\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\tesac\n\t;;\n      tandem*)\n\tcase $cc_basename in\n\t  NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      vxworks*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n\t;;\n    esac\n  fi\n],\n[\n  if test yes = \"$GCC\"; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n      aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n\n    msdosdjgpp*)\n      # Just because we use GCC doesn't mean we suddenly get shared libraries\n      # on systems that don't support them.\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      enable_shared=no\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n\n    case $cc_basename in\n    nvcc*) # Cuda Compiler Driver 2.2\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Xlinker '\n      if test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"-Xcompiler $_LT_TAGVAR(lt_prog_compiler_pic, $1)\"\n      fi\n      ;;\n    esac\n  else\n    # PORTME Check for flag to pass linker flags through the system compiler.\n    case $host_os in\n    aix*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      else\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n      fi\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      case $cc_basename in\n      nagfor*)\n        # NAG Fortran compiler\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      esac\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n\n    hpux9* | hpux10* | hpux11*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t;;\n      esac\n      # Is there a better lt_prog_compiler_static that works with the bundled CC?\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC (with -KPIC) is the default.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n      case $cc_basename in\n      # old Intel for x86_64, which still supported -KPIC.\n      ecc*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # icc used to be incompatible with GCC.\n      # ICC 10 doesn't accept -KPIC any more.\n      icc* | ifort*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # Lahey Fortran 8.1.\n      lf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='--shared'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='--static'\n\t;;\n      nagfor*)\n\t# NAG Fortran compiler\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t;;\n      tcc*)\n\t# Fabrice Bellard et al's Tiny C Compiler\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t;;\n      pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)\n        # Portland Group compilers (*not* the Pentium gcc compiler,\n\t# which looks to be a dead project)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      ccc*)\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n        # All Alpha code is PIC.\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n        ;;\n      xl* | bgxl* | bgf* | mpixl*)\n\t# IBM XL C 8.0/Fortran 10.1, 11.1 on PPC and BlueGene\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t;;\n      *)\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ Ceres\\ Fortran* | *Sun*Fortran*\\ [[1-7]].* | *Sun*Fortran*\\ 8.[[0-3]]*)\n\t  # Sun Fortran 8.3 passes all unrecognized flags to the linker\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)=''\n\t  ;;\n\t*Sun\\ F* | *Sun*Fortran*)\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t  ;;\n\t*Sun\\ C*)\n\t  # Sun C 5.9\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  ;;\n        *Intel*\\ [[CF]]*Compiler*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t  ;;\n\t*Portland\\ Group*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  ;;\n\tesac\n\t;;\n      esac\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    osf3* | osf4* | osf5*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # All OSF/1 code is PIC.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    rdos*)\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      case $cc_basename in\n      f77* | f90* | f95* | sunf77* | sunf90* | sunf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld ';;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,';;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4 | sysv4.2uw2* | sysv4.3*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    unicos*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n    esac\n  fi\n])\ncase $host_os in\n  # For platforms that do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n    ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])\"\n    ;;\nesac\n\nAC_CACHE_CHECK([for $compiler option to produce PIC],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_prog_compiler_pic, $1)])\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n  _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, $1) works],\n    [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, $1)],\n    [$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])], [],\n    [case $_LT_TAGVAR(lt_prog_compiler_pic, $1) in\n     \"\" | \" \"*) ;;\n     *) _LT_TAGVAR(lt_prog_compiler_pic, $1)=\" $_LT_TAGVAR(lt_prog_compiler_pic, $1)\" ;;\n     esac],\n    [_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n     _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no])\nfi\n_LT_TAGDECL([pic_flag], [lt_prog_compiler_pic], [1],\n\t[Additional compiler flags for building library objects])\n\n_LT_TAGDECL([wl], [lt_prog_compiler_wl], [1],\n\t[How to pass a linker flag through the compiler])\n#\n# Check to make sure the static flag actually works.\n#\nwl=$_LT_TAGVAR(lt_prog_compiler_wl, $1) eval lt_tmp_static_flag=\\\"$_LT_TAGVAR(lt_prog_compiler_static, $1)\\\"\n_LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works],\n  _LT_TAGVAR(lt_cv_prog_compiler_static_works, $1),\n  $lt_tmp_static_flag,\n  [],\n  [_LT_TAGVAR(lt_prog_compiler_static, $1)=])\n_LT_TAGDECL([link_static_flag], [lt_prog_compiler_static], [1],\n\t[Compiler flag to prevent dynamic linking])\n])# _LT_COMPILER_PIC\n\n\n# _LT_LINKER_SHLIBS([TAGNAME])\n# ----------------------------\n# See if the linker supports building shared libraries.\nm4_defun([_LT_LINKER_SHLIBS],\n[AC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\nm4_if([$1], [CXX], [\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  case $host_os in\n  aix[[4-9]]*)\n    # If we're using GNU nm, then we don't want the \"-C\" option.\n    # -C means demangle to GNU nm, but means don't demangle to AIX nm.\n    # Without the \"-l\" option, or with the \"-B\" option, AIX nm treats\n    # weak defined symbols like other global defined symbols, whereas\n    # GNU nm marks them as \"W\".\n    # While the 'weak' keyword is ignored in the Export File, we need\n    # it in the Import File for the 'aix-soname' feature, so we have\n    # to replace the \"-B\" option with \"-P\" for AIX nm.\n    if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { if (\\$ 2 == \"W\") { print \\$ 3 \" weak\" } else { print \\$ 3 } } }'\\'' | sort -u > $export_symbols'\n    else\n      _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\\''s/B\\([[^B]]*\\)$/P\\1/'\\''` -PCpgl $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) && ([substr](\\$ 1,1,1) != \".\")) { if ((\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) { print \\$ 1 \" weak\" } else { print \\$ 1 } } }'\\'' | sort -u > $export_symbols'\n    fi\n    ;;\n  pw32*)\n    _LT_TAGVAR(export_symbols_cmds, $1)=$ltdll_cmds\n    ;;\n  cygwin* | mingw* | cegcc*)\n    case $cc_basename in\n    cl*)\n      _LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n      ;;\n    *)\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n      ;;\n    esac\n    ;;\n  *)\n    _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n    ;;\n  esac\n], [\n  runpath_var=\n  _LT_TAGVAR(allow_undefined_flag, $1)=\n  _LT_TAGVAR(always_export_symbols, $1)=no\n  _LT_TAGVAR(archive_cmds, $1)=\n  _LT_TAGVAR(archive_expsym_cmds, $1)=\n  _LT_TAGVAR(compiler_needs_object, $1)=no\n  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n  _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(hardcode_automatic, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n  _LT_TAGVAR(hardcode_minus_L, $1)=no\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  _LT_TAGVAR(inherit_rpath, $1)=no\n  _LT_TAGVAR(link_all_deplibs, $1)=unknown\n  _LT_TAGVAR(module_cmds, $1)=\n  _LT_TAGVAR(module_expsym_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_new_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_expsyms_cmds, $1)=\n  _LT_TAGVAR(thread_safe_flag_spec, $1)=\n  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n  # include_expsyms should be a list of space-separated symbols to be *always*\n  # included in the symbol list\n  _LT_TAGVAR(include_expsyms, $1)=\n  # exclude_expsyms can be an extended regexp of symbols to exclude\n  # it will be wrapped by ' (' and ')$', so one must not match beginning or\n  # end of line.  Example: 'a|bc|.*d.*' will exclude the symbols 'a' and 'bc',\n  # as well as any symbol that contains 'd'.\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out\n  # platforms (ab)use it in PIC code, but their linkers get confused if\n  # the symbol is explicitly referenced.  Since portable code cannot\n  # rely on this symbol name, it's probably fine to never include it in\n  # preloaded symbol tables.\n  # Exclude shared library initialization/finalization symbols.\ndnl Note also adjust exclude_expsyms for C++ above.\n  extract_expsyms_cmds=\n\n  case $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    # FIXME: the MSVC++ port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++.\n    if test yes != \"$GCC\"; then\n      with_gnu_ld=no\n    fi\n    ;;\n  interix*)\n    # we just hope/assume this is gcc and not c89 (= MSVC++)\n    with_gnu_ld=yes\n    ;;\n  openbsd* | bitrig*)\n    with_gnu_ld=no\n    ;;\n  esac\n\n  _LT_TAGVAR(ld_shlibs, $1)=yes\n\n  # On some targets, GNU ld is compatible enough with the native linker\n  # that we're better off using the native interface for both.\n  lt_use_gnu_ld_interface=no\n  if test yes = \"$with_gnu_ld\"; then\n    case $host_os in\n      aix*)\n\t# The AIX port of GNU ld has always aspired to compatibility\n\t# with the native linker.  However, as the warning in the GNU ld\n\t# block says, versions before 2.19.5* couldn't really create working\n\t# shared libraries, regardless of the interface used.\n\tcase `$LD -v 2>&1` in\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.19.5*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.[[2-9]]*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ [[3-9]]*) ;;\n\t  *)\n\t    lt_use_gnu_ld_interface=yes\n\t    ;;\n\tesac\n\t;;\n      *)\n\tlt_use_gnu_ld_interface=yes\n\t;;\n    esac\n  fi\n\n  if test yes = \"$lt_use_gnu_ld_interface\"; then\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    wlarc='$wl'\n\n    # Set some defaults for GNU ld with shared library support. These\n    # are reset later if shared libraries are not supported. Putting them\n    # here allows them to be overridden if necessary.\n    runpath_var=LD_RUN_PATH\n    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n    else\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n    supports_anon_versioning=no\n    case `$LD -v | $SED -e 's/([^)]\\+)\\s\\+//' 2>&1` in\n      *GNU\\ gold*) supports_anon_versioning=yes ;;\n      *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.10.*) ;; # catch versions < 2.11\n      *\\ 2.11.93.0.2\\ *) supports_anon_versioning=yes ;; # RH7.3 ...\n      *\\ 2.11.92.0.12\\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...\n      *\\ 2.11.*) ;; # other 2.11 versions\n      *) supports_anon_versioning=yes ;;\n    esac\n\n    # See if GNU ld supports shared libraries.\n    case $host_os in\n    aix[[3-9]]*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test ia64 != \"$host_cpu\"; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: the GNU linker, at least up to release 2.19, is reported\n*** to be unable to reliably create shared libraries on AIX.\n*** Therefore, libtool is disabling shared libraries support.  If you\n*** really care for shared libraries, you may want to install binutils\n*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.\n*** You will then need to restart the configuration process.\n\n_LT_EOF\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    beos*)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t# support --undefined.  This deserves some investigation.  FIXME\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n      # as there is no search path for DLLs.\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-all-symbols'\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=no\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n\n      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t# If the export-symbols file already is a .def file, use it as\n\t# is; otherwise, prepend EXPORTS...\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n          cp $export_symbols $output_objdir/$soname.def;\n        else\n          echo EXPORTS > $output_objdir/$soname.def;\n          cat $export_symbols >> $output_objdir/$soname.def;\n        fi~\n        $CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    haiku*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      shrext_cmds=.dll\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\temxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\tprefix_cmds=\"$SED\"~\n\tif test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t  prefix_cmds=\"$prefix_cmds -e 1d\";\n\tfi~\n\tprefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\tcat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      ;;\n\n    interix[[3-9]]*)\n      _LT_TAGVAR(hardcode_direct, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n      # Instead, shared libraries are loaded at an image base (0x10000000 by\n      # default) and relocated if they conflict, which is a slow very memory\n      # consuming and fragmenting process.  To avoid this, we pick a random,\n      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      ;;\n\n    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)\n      tmp_diet=no\n      if test linux-dietlibc = \"$host_os\"; then\n\tcase $cc_basename in\n\t  diet\\ *) tmp_diet=yes;;\t# linux-dietlibc with static linking (!diet-dyn)\n\tesac\n      fi\n      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \\\n\t && test no = \"$tmp_diet\"\n      then\n\ttmp_addflag=' $pic_flag'\n\ttmp_sharedflag='-shared'\n\tcase $cc_basename,$host_cpu in\n        pgcc*)\t\t\t\t# Portland Group C compiler\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag'\n\t  ;;\n\tpgf77* | pgf90* | pgf95* | pgfortran*)\n\t\t\t\t\t# Portland Group f77 and f90 compilers\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag -Mnomain' ;;\n\tecc*,ia64* | icc*,ia64*)\t# Intel C compiler on ia64\n\t  tmp_addflag=' -i_dynamic' ;;\n\tefc*,ia64* | ifort*,ia64*)\t# Intel Fortran compiler on ia64\n\t  tmp_addflag=' -i_dynamic -nofor_main' ;;\n\tifc* | ifort*)\t\t\t# Intel Fortran compiler\n\t  tmp_addflag=' -nofor_main' ;;\n\tlf95*)\t\t\t\t# Lahey Fortran 8.1\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n\t  tmp_sharedflag='--shared' ;;\n        nagfor*)                        # NAGFOR 5.3\n          tmp_sharedflag='-Wl,-shared' ;;\n\txl[[cC]]* | bgxl[[cC]]* | mpixl[[cC]]*) # IBM XL C 8.0 on PPC (deal with xlf below)\n\t  tmp_sharedflag='-qmkshrobj'\n\t  tmp_addflag= ;;\n\tnvcc*)\t# Cuda Compiler Driver 2.2\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  ;;\n\tesac\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ C*)\t\t\t# Sun C 5.9\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  tmp_sharedflag='-G' ;;\n\t*Sun\\ F*)\t\t\t# Sun Fortran 8.3\n\t  tmp_sharedflag='-G' ;;\n\tesac\n\t_LT_TAGVAR(archive_cmds, $1)='$CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\n        if test yes = \"$supports_anon_versioning\"; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n            cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n            echo \"local: *; };\" >> $output_objdir/$libname.ver~\n            $CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n        fi\n\n\tcase $cc_basename in\n\ttcc*)\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='-rdynamic'\n\t  ;;\n\txlf* | bgf* | bgxlf* | mpixlf*)\n\t  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='--whole-archive$convenience --no-whole-archive'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'\n\t  if test yes = \"$supports_anon_versioning\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n              cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n              echo \"local: *; };\" >> $output_objdir/$libname.ver~\n              $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'\n\t  fi\n\t  ;;\n\tesac\n      else\n        _LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'\n\twlarc=\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      fi\n      ;;\n\n    solaris*)\n      if $LD -v 2>&1 | $GREP 'BFD 2\\.8' > /dev/null; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: The releases 2.8.* of the GNU linker cannot reliably\n*** create shared libraries on Solaris systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.9.1 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)\n      case `$LD -v 2>&1` in\n        *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.1[[0-5]].*)\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 cannot\n*** reliably create shared libraries on SCO systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n\t;;\n\t*)\n\t  # For security reasons, it is highly recommended that you always\n\t  # use absolute paths for naming shared libraries, and exclude the\n\t  # DT_RUNPATH tag from executables and libraries.  But doing so\n\t  # requires that you compile everything twice, which is a pain.\n\t  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t;;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      wlarc=\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n\n    if test no = \"$_LT_TAGVAR(ld_shlibs, $1)\"; then\n      runpath_var=\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    # PORTME fill in a description of your system's linker (not GNU ld)\n    case $host_os in\n    aix3*)\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      if test yes = \"$GCC\" && test -z \"$lt_prog_compiler_static\"; then\n\t# Neither direct hardcoding nor static linking is supported with a\n\t# broken collect2.\n\t_LT_TAGVAR(hardcode_direct, $1)=unsupported\n      fi\n      ;;\n\n    aix[[4-9]]*)\n      if test ia64 = \"$host_cpu\"; then\n\t# On IA64, the linker does run time linking by default, so we don't\n\t# have to do anything special.\n\taix_use_runtimelinking=no\n\texp_sym_flag='-Bexport'\n\tno_entry_flag=\n      else\n\t# If we're using GNU nm, then we don't want the \"-C\" option.\n\t# -C means demangle to GNU nm, but means don't demangle to AIX nm.\n\t# Without the \"-l\" option, or with the \"-B\" option, AIX nm treats\n\t# weak defined symbols like other global defined symbols, whereas\n\t# GNU nm marks them as \"W\".\n\t# While the 'weak' keyword is ignored in the Export File, we need\n\t# it in the Import File for the 'aix-soname' feature, so we have\n\t# to replace the \"-B\" option with \"-P\" for AIX nm.\n\tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { if (\\$ 2 == \"W\") { print \\$ 3 \" weak\" } else { print \\$ 3 } } }'\\'' | sort -u > $export_symbols'\n\telse\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\\''s/B\\([[^B]]*\\)$/P\\1/'\\''` -PCpgl $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) && ([substr](\\$ 1,1,1) != \".\")) { if ((\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) { print \\$ 1 \" weak\" } else { print \\$ 1 } } }'\\'' | sort -u > $export_symbols'\n\tfi\n\taix_use_runtimelinking=no\n\n\t# Test if we are trying to use run time linking or normal\n\t# AIX style linking. If -brtl is somewhere in LDFLAGS, we\n\t# have runtime linking enabled, and use it for executables.\n\t# For shared libraries, we enable/disable runtime linking\n\t# depending on the kind of the shared library created -\n\t# when \"with_aix_soname,aix_use_runtimelinking\" is:\n\t# \"aix,no\"   lib.a(lib.so.V) shared, rtl:no,  for executables\n\t# \"aix,yes\"  lib.so          shared, rtl:yes, for executables\n\t#            lib.a           static archive\n\t# \"both,no\"  lib.so.V(shr.o) shared, rtl:yes\n\t#            lib.a(lib.so.V) shared, rtl:no,  for executables\n\t# \"both,yes\" lib.so.V(shr.o) shared, rtl:yes, for executables\n\t#            lib.a(lib.so.V) shared, rtl:no\n\t# \"svr4,*\"   lib.so.V(shr.o) shared, rtl:yes, for executables\n\t#            lib.a           static archive\n\tcase $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t  for ld_flag in $LDFLAGS; do\n\t  if (test x-brtl = \"x$ld_flag\" || test x-Wl,-brtl = \"x$ld_flag\"); then\n\t    aix_use_runtimelinking=yes\n\t    break\n\t  fi\n\t  done\n\t  if test svr4,no = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t    # With aix-soname=svr4, we create the lib.so.V shared archives only,\n\t    # so we don't have lib.a shared libs to link our executables.\n\t    # We have to force runtime linking in this case.\n\t    aix_use_runtimelinking=yes\n\t    LDFLAGS=\"$LDFLAGS -Wl,-brtl\"\n\t  fi\n\t  ;;\n\tesac\n\n\texp_sym_flag='-bexport'\n\tno_entry_flag='-bnoentry'\n      fi\n\n      # When large executables or shared objects are built, AIX ld can\n      # have problems creating the table of contents.  If linking a library\n      # or program results in \"error TOC overflow\" add -mminimal-toc to\n      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n      _LT_TAGVAR(archive_cmds, $1)=''\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(file_list_spec, $1)='$wl-f,'\n      case $with_aix_soname,$aix_use_runtimelinking in\n      aix,*) ;; # traditional, no import file\n      svr4,* | *,yes) # use import file\n\t# The Import File defines what to hardcode.\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n\t;;\n      esac\n\n      if test yes = \"$GCC\"; then\n\tcase $host_os in aix4.[[012]]|aix4.[[012]].*)\n\t# We only want to do this on AIX 4.2 and lower, the check\n\t# below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t   strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t  # We have reworked collect2\n\t  :\n\t  else\n\t  # We have old collect2\n\t  _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t  # It fails to find uninstalled libraries when the uninstalled\n\t  # path is not listed in the libpath.  Setting hardcode_minus_L\n\t  # to unsupported forces relinking\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n\t  ;;\n\tesac\n\tshared_flag='-shared'\n\tif test yes = \"$aix_use_runtimelinking\"; then\n\t  shared_flag=\"$shared_flag \"'$wl-G'\n\tfi\n\t# Need to ensure runtime linking is disabled for the traditional\n\t# shared library, or the linker may eventually find shared libraries\n\t# /with/ Import File - we do not want to mix them.\n\tshared_flag_aix='-shared'\n\tshared_flag_svr4='-shared $wl-G'\n      else\n\t# not using gcc\n\tif test ia64 = \"$host_cpu\"; then\n\t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t# chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n\telse\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag='$wl-G'\n\t  else\n\t    shared_flag='$wl-bM:SRE'\n\t  fi\n\t  shared_flag_aix='$wl-bM:SRE'\n\t  shared_flag_svr4='$wl-G'\n\tfi\n      fi\n\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-bexpall'\n      # It seems that -bexpall does not export symbols beginning with\n      # underscore (_), so it is better to generate a list of symbols to export.\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      if test aix,yes = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t# Warning - without using the other runtime loading flags (-brtl),\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n        # Determine the default libpath from the value encoded in an\n        # empty executable.\n        _LT_SYS_MODULE_PATH_AIX([$1])\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n      else\n\tif test ia64 = \"$host_cpu\"; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $libdir:/usr/lib:/lib'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n\telse\n\t # Determine the default libpath from the value encoded in an\n\t # empty executable.\n\t _LT_SYS_MODULE_PATH_AIX([$1])\n\t _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t  # Warning - without using the other run time loading flags,\n\t  # -berok will link without error, but may produce a broken library.\n\t  _LT_TAGVAR(no_undefined_flag, $1)=' $wl-bernotok'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-berok'\n\t  if test yes = \"$with_gnu_ld\"; then\n\t    # We only use this code for GNU lds that support --whole-archive.\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t  else\n\t    # Exported symbols can be pulled into shared objects from archives\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t  fi\n\t  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'\n\t  # -brtl affects multiple linker settings, -berok does not and is overridden later\n\t  compiler_flags_filtered='`func_echo_all \"$compiler_flags \" | $SED -e \"s%-brtl\\\\([[, ]]\\\\)%-berok\\\\1%g\"`'\n\t  if test svr4 != \"$with_aix_soname\"; then\n\t    # This is similar to how AIX traditionally builds its shared libraries.\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'\n\t  fi\n\t  if test aix != \"$with_aix_soname\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all \"#! $soname($shared_archive_member_spec.o)\"; if test shr_64 = \"$shared_archive_member_spec\"; then func_echo_all \"# 64\"; else func_echo_all \"# 32\"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'\n\t  else\n\t    # used by -dlpreopen to get the symbols\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'\n\t  fi\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$RM -r $output_objdir/$realname.d'\n\tfi\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    bsdi[[45]]*)\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      case $cc_basename in\n      cl*)\n\t# Native MSVC\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t_LT_TAGVAR(always_export_symbols, $1)=yes\n\t_LT_TAGVAR(file_list_spec, $1)='@'\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n            cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n            echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n          else\n            $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n          fi~\n          $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n          linknames='\n\t# The linker will not automatically build a static lib if we build a DLL.\n\t# _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t_LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n\t_LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1,DATA/'\\'' | $SED -e '\\''/^[[AITW]][[ ]]/s/.*[[ ]]//'\\'' | sort | uniq > $export_symbols'\n\t# Don't use ranlib\n\t_LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t_LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n          lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n          case $lt_outputfile in\n            *.exe|*.EXE) ;;\n            *)\n              lt_outputfile=$lt_outputfile.exe\n              lt_tool_outputfile=$lt_tool_outputfile.exe\n              ;;\n          esac~\n          if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n            $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n            $RM \"$lt_outputfile.manifest\";\n          fi'\n\t;;\n      *)\n\t# Assume MSVC wrapper\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `func_echo_all \"$deplibs\" | $SED '\\''s/ -lc$//'\\''` -link -dll~linknames='\n\t# The linker will automatically build a .lib file if we build a DLL.\n\t_LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t# FIXME: Should let the user specify the lib program.\n\t_LT_TAGVAR(old_archive_cmds, $1)='lib -OUT:$oldlib$oldobjs$old_deplibs'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      _LT_DARWIN_LINKER_FEATURES($1)\n      ;;\n\n    dgux*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n    # support.  Future versions do this automatically, but an explicit c++rt0.o\n    # does not break anything, and helps significantly (at the cost of a little\n    # extra space).\n    freebsd2.2*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n    freebsd2.*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n    freebsd* | dragonfly*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    hpux9*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n      ;;\n\n    hpux10*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t# hardcode_minus_L: Not really in the search PATH,\n\t# but as the default location of the library.\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n      fi\n      ;;\n\n    hpux11*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      else\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\tm4_if($1, [], [\n\t  # Older versions of the 11.00 compiler do not understand -b yet\n\t  # (HP92453-01 A.11.01.20 doesn't, HP92453-01 B.11.X.35175-35176.GP does)\n\t  _LT_LINKER_OPTION([if $CC understands -b],\n\t    _LT_TAGVAR(lt_cv_prog_compiler__b, $1), [-b],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])],\n\t  [_LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'])\n\t  ;;\n\tesac\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\tcase $host_cpu in\n\thppa*64*|ia64*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  ;;\n\tesac\n      fi\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t# Try to use the -exported_symbol ld option, if it does not\n\t# work, assume that -exports_file does not work either and\n\t# implicitly export all symbols.\n\t# This should be the same for all languages, so no per-tag cache variable.\n\tAC_CACHE_CHECK([whether the $host_os linker accepts -exported_symbol],\n\t  [lt_cv_irix_exported_symbol],\n\t  [save_LDFLAGS=$LDFLAGS\n\t   LDFLAGS=\"$LDFLAGS -shared $wl-exported_symbol ${wl}foo $wl-update_registry $wl/dev/null\"\n\t   AC_LINK_IFELSE(\n\t     [AC_LANG_SOURCE(\n\t        [AC_LANG_CASE([C], [[int foo (void) { return 0; }]],\n\t\t\t      [C++], [[int foo (void) { return 0; }]],\n\t\t\t      [Fortran 77], [[\n      subroutine foo\n      end]],\n\t\t\t      [Fortran], [[\n      subroutine foo\n      end]])])],\n\t      [lt_cv_irix_exported_symbol=yes],\n\t      [lt_cv_irix_exported_symbol=no])\n           LDFLAGS=$save_LDFLAGS])\n\tif test yes = \"$lt_cv_irix_exported_symbol\"; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations $wl-exports_file $wl$export_symbols -o $lib'\n\tfi\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -exports_file $export_symbols -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(inherit_rpath, $1)=yes\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    linux*)\n      case $cc_basename in\n      tcc*)\n\t# Fabrice Bellard et al's Tiny C Compiler\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t;;\n      esac\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *nto* | *qnx*)\n      ;;\n\n    openbsd* | bitrig*)\n      if test -f /usr/libexec/ld.so; then\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\tif test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags $wl-retain-symbols-file,$export_symbols'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\telse\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\tfi\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      shrext_cmds=.dll\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\temxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\tprefix_cmds=\"$SED\"~\n\tif test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t  prefix_cmds=\"$prefix_cmds -e 1d\";\n\tfi~\n\tprefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\tcat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      ;;\n\n    osf3*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    osf4* | osf5*)\t# as osf3* with the addition of -msym flag\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $pic_flag $libobjs $deplibs $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done; printf \"%s\\\\n\" \"-hidden\">> $lib.exp~\n          $CC -shared$allow_undefined_flag $wl-input $wl$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~$RM $lib.exp'\n\n\t# Both c and cxx compiler support -rpath directly\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(no_undefined_flag, $1)=' -z defs'\n      if test yes = \"$GCC\"; then\n\twlarc='$wl'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl-z ${wl}text $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n          $CC -shared $pic_flag $wl-z ${wl}text $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n      else\n\tcase `$CC -V 2>&1` in\n\t*\"Compilers 5.0\"*)\n\t  wlarc=''\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $LD -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'\n\t  ;;\n\t*)\n\t  wlarc='$wl'\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $CC -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n\t  ;;\n\tesac\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      case $host_os in\n      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n      *)\n\t# The compiler driver will combine and reorder linker options,\n\t# but understands '-z linker_flag'.  GCC discards it without '$wl',\n\t# but is careful enough not to reorder.\n\t# Supported since Solaris 2.6 (maybe 2.5.1?)\n\tif test yes = \"$GCC\"; then\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\telse\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\tfi\n\t;;\n      esac\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    sunos4*)\n      if test sequent = \"$host_vendor\"; then\n\t# Use $CC to link under sequent, because it throws in some extra .o\n\t# files that make .init and .fini sections work.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h $soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4)\n      case $host_vendor in\n\tsni)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes # is this really true???\n\t;;\n\tsiemens)\n\t  ## LD is ld it makes a PLAMLIB\n\t  ## CC just makes a GrossModule.\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(reload_cmds, $1)='$CC -r -o $output$reload_objs'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n        ;;\n\tmotorola)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no #Motorola manual says yes, but my tests say they lie\n\t;;\n      esac\n      runpath_var='LD_RUN_PATH'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4.3*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='-Bexport'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\trunpath_var=LD_RUN_PATH\n\thardcode_runpath_var=yes\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n      fi\n      ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6*)\n      # Note: We CANNOT use -z defs as we might desire, because we do not\n      # link with -lc, and that would cause any symbols used from libc to\n      # always be unresolved, which means just about no library would\n      # ever link correctly.  If we're not using GNU ld we use -z text\n      # though, which does catch some bad symbols but isn't as heavy-handed\n      # as -z defs.\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(allow_undefined_flag, $1)='$wl-z,nodefs'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R,$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Bexport'\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      _LT_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    esac\n\n    if test sni = \"$host_vendor\"; then\n      case $host in\n      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Blargedynsym'\n\t;;\n      esac\n    fi\n  fi\n])\nAC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\ntest no = \"$_LT_TAGVAR(ld_shlibs, $1)\" && can_build_shared=no\n\n_LT_TAGVAR(with_gnu_ld, $1)=$with_gnu_ld\n\n_LT_DECL([], [libext], [0], [Old archive suffix (normally \"a\")])dnl\n_LT_DECL([], [shrext_cmds], [1], [Shared library suffix (normally \".so\")])dnl\n_LT_DECL([], [extract_expsyms_cmds], [2],\n    [The commands to extract the exported symbol list from a shared archive])\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$_LT_TAGVAR(archive_cmds_need_lc, $1)\" in\nx|xyes)\n  # Assume -lc should be added\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\n  if test yes,yes = \"$GCC,$enable_shared\"; then\n    case $_LT_TAGVAR(archive_cmds, $1) in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      AC_CACHE_CHECK([whether -lc should be explicitly linked in],\n\t[lt_cv_]_LT_TAGVAR(archive_cmds_need_lc, $1),\n\t[$RM conftest*\n\techo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n\tif AC_TRY_EVAL(ac_compile) 2>conftest.err; then\n\t  soname=conftest\n\t  lib=conftest\n\t  libobjs=conftest.$ac_objext\n\t  deplibs=\n\t  wl=$_LT_TAGVAR(lt_prog_compiler_wl, $1)\n\t  pic_flag=$_LT_TAGVAR(lt_prog_compiler_pic, $1)\n\t  compiler_flags=-v\n\t  linker_flags=-v\n\t  verstring=\n\t  output_objdir=.\n\t  libname=conftest\n\t  lt_save_allow_undefined_flag=$_LT_TAGVAR(allow_undefined_flag, $1)\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\n\t  if AC_TRY_EVAL(_LT_TAGVAR(archive_cmds, $1) 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1)\n\t  then\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t  else\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  fi\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=$lt_save_allow_undefined_flag\n\telse\n\t  cat conftest.err 1>&5\n\tfi\n\t$RM conftest*\n\t])\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=$lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)\n      ;;\n    esac\n  fi\n  ;;\nesac\n\n_LT_TAGDECL([build_libtool_need_lc], [archive_cmds_need_lc], [0],\n    [Whether or not to add -lc for building shared libraries])\n_LT_TAGDECL([allow_libtool_libs_with_static_runtimes],\n    [enable_shared_with_static_runtimes], [0],\n    [Whether or not to disallow shared libs when runtime libs are static])\n_LT_TAGDECL([], [export_dynamic_flag_spec], [1],\n    [Compiler flag to allow reflexive dlopens])\n_LT_TAGDECL([], [whole_archive_flag_spec], [1],\n    [Compiler flag to generate shared objects directly from archives])\n_LT_TAGDECL([], [compiler_needs_object], [1],\n    [Whether the compiler copes with passing no objects directly])\n_LT_TAGDECL([], [old_archive_from_new_cmds], [2],\n    [Create an old-style archive from a shared archive])\n_LT_TAGDECL([], [old_archive_from_expsyms_cmds], [2],\n    [Create a temporary old-style archive to link instead of a shared archive])\n_LT_TAGDECL([], [archive_cmds], [2], [Commands used to build a shared archive])\n_LT_TAGDECL([], [archive_expsym_cmds], [2])\n_LT_TAGDECL([], [module_cmds], [2],\n    [Commands used to build a loadable module if different from building\n    a shared archive.])\n_LT_TAGDECL([], [module_expsym_cmds], [2])\n_LT_TAGDECL([], [with_gnu_ld], [1],\n    [Whether we are building with GNU ld or not])\n_LT_TAGDECL([], [allow_undefined_flag], [1],\n    [Flag that allows shared libraries with undefined symbols to be built])\n_LT_TAGDECL([], [no_undefined_flag], [1],\n    [Flag that enforces no undefined symbols])\n_LT_TAGDECL([], [hardcode_libdir_flag_spec], [1],\n    [Flag to hardcode $libdir into a binary during linking.\n    This must work even if $libdir does not exist])\n_LT_TAGDECL([], [hardcode_libdir_separator], [1],\n    [Whether we need a single \"-rpath\" flag with a separated argument])\n_LT_TAGDECL([], [hardcode_direct], [0],\n    [Set to \"yes\" if using DIR/libNAME$shared_ext during linking hardcodes\n    DIR into the resulting binary])\n_LT_TAGDECL([], [hardcode_direct_absolute], [0],\n    [Set to \"yes\" if using DIR/libNAME$shared_ext during linking hardcodes\n    DIR into the resulting binary and the resulting library dependency is\n    \"absolute\", i.e impossible to change by setting $shlibpath_var if the\n    library is relocated])\n_LT_TAGDECL([], [hardcode_minus_L], [0],\n    [Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_shlibpath_var], [0],\n    [Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_automatic], [0],\n    [Set to \"yes\" if building a shared library automatically hardcodes DIR\n    into the library and all subsequent libraries and executables linked\n    against it])\n_LT_TAGDECL([], [inherit_rpath], [0],\n    [Set to yes if linker adds runtime paths of dependent libraries\n    to runtime path list])\n_LT_TAGDECL([], [link_all_deplibs], [0],\n    [Whether libtool must link a program against all its dependency libraries])\n_LT_TAGDECL([], [always_export_symbols], [0],\n    [Set to \"yes\" if exported symbols are required])\n_LT_TAGDECL([], [export_symbols_cmds], [2],\n    [The commands to list exported symbols])\n_LT_TAGDECL([], [exclude_expsyms], [1],\n    [Symbols that should not be listed in the preloaded symbols])\n_LT_TAGDECL([], [include_expsyms], [1],\n    [Symbols that must always be exported])\n_LT_TAGDECL([], [prelink_cmds], [2],\n    [Commands necessary for linking programs (against libraries) with templates])\n_LT_TAGDECL([], [postlink_cmds], [2],\n    [Commands necessary for finishing linking programs])\n_LT_TAGDECL([], [file_list_spec], [1],\n    [Specify filename containing input files])\ndnl FIXME: Not yet implemented\ndnl _LT_TAGDECL([], [thread_safe_flag_spec], [1],\ndnl    [Compiler flag to generate thread safe objects])\n])# _LT_LINKER_SHLIBS\n\n\n# _LT_LANG_C_CONFIG([TAG])\n# ------------------------\n# Ensure that the configuration variables for a C compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_C_CONFIG],\n[m4_require([_LT_DECL_EGREP])dnl\nlt_save_CC=$CC\nAC_LANG_PUSH(C)\n\n# Source file extension for C test sources.\nac_ext=c\n\n# Object file extension for compiled C test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(){return(0);}'\n\n_LT_TAG_COMPILER\n# Save the default compiler, since it gets overwritten when the other\n# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.\ncompiler_DEFAULT=$CC\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_SYS_DYNAMIC_LINKER($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n  LT_SYS_DLOPEN_SELF\n  _LT_CMD_STRIPLIB\n\n  # Report what library types will actually be built\n  AC_MSG_CHECKING([if libtool supports shared libraries])\n  AC_MSG_RESULT([$can_build_shared])\n\n  AC_MSG_CHECKING([whether to build shared libraries])\n  test no = \"$can_build_shared\" && enable_shared=no\n\n  # On AIX, shared libraries and static libraries use the same namespace, and\n  # are all built from PIC.\n  case $host_os in\n  aix3*)\n    test yes = \"$enable_shared\" && enable_static=no\n    if test -n \"$RANLIB\"; then\n      archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n      postinstall_cmds='$RANLIB $lib'\n    fi\n    ;;\n\n  aix[[4-9]]*)\n    if test ia64 != \"$host_cpu\"; then\n      case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n      yes,aix,yes) ;;\t\t\t# shared object as lib.so file only\n      yes,svr4,*) ;;\t\t\t# shared object as lib.so archive member only\n      yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n      esac\n    fi\n    ;;\n  esac\n  AC_MSG_RESULT([$enable_shared])\n\n  AC_MSG_CHECKING([whether to build static libraries])\n  # Make sure either enable_shared or enable_static is yes.\n  test yes = \"$enable_shared\" || enable_static=yes\n  AC_MSG_RESULT([$enable_static])\n\n  _LT_CONFIG($1)\nfi\nAC_LANG_POP\nCC=$lt_save_CC\n])# _LT_LANG_C_CONFIG\n\n\n# _LT_LANG_CXX_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a C++ compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_CXX_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nif test -n \"$CXX\" && ( test no != \"$CXX\" &&\n    ( (test g++ = \"$CXX\" && `g++ -v >/dev/null 2>&1` ) ||\n    (test g++ != \"$CXX\"))); then\n  AC_PROG_CXXCPP\nelse\n  _lt_caught_CXX_error=yes\nfi\n\nAC_LANG_PUSH(C++)\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(compiler_needs_object, $1)=no\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for C++ test sources.\nac_ext=cpp\n\n# Object file extension for compiled C++ test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the CXX compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_caught_CXX_error\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"int some_variable = 0;\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code='int main(int, char *[[]]) { return(0); }'\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_CFLAGS=$CFLAGS\n  lt_save_LD=$LD\n  lt_save_GCC=$GCC\n  GCC=$GXX\n  lt_save_with_gnu_ld=$with_gnu_ld\n  lt_save_path_LD=$lt_cv_path_LD\n  if test -n \"${lt_cv_prog_gnu_ldcxx+set}\"; then\n    lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx\n  else\n    $as_unset lt_cv_prog_gnu_ld\n  fi\n  if test -n \"${lt_cv_path_LDCXX+set}\"; then\n    lt_cv_path_LD=$lt_cv_path_LDCXX\n  else\n    $as_unset lt_cv_path_LD\n  fi\n  test -z \"${LDCXX+set}\" || LD=$LDCXX\n  CC=${CXX-\"c++\"}\n  CFLAGS=$CXXFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    # We don't want -fno-exception when compiling C++ code, so set the\n    # no_builtin_flag separately\n    if test yes = \"$GXX\"; then\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\n    else\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n    fi\n\n    if test yes = \"$GXX\"; then\n      # Set up default GNU C++ configuration\n\n      LT_PATH_LD\n\n      # Check if GNU C++ uses GNU ld as the underlying linker, since the\n      # archiving commands below assume that GNU ld is being used.\n      if test yes = \"$with_gnu_ld\"; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\n        # If archive_cmds runs LD, not CC, wlarc should be empty\n        # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to\n        #     investigate it a little bit more. (MM)\n        wlarc='$wl'\n\n        # ancient GNU ld didn't support --whole-archive et. al.\n        if eval \"`$CC -print-prog-name=ld` --help 2>&1\" |\n\t  $GREP 'no-whole-archive' > /dev/null; then\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n        else\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=\n        fi\n      else\n        with_gnu_ld=no\n        wlarc=\n\n        # A generic and very simple default shared library creation\n        # command for GNU C++ for the case where it uses the native\n        # linker, instead of GNU ld.  If possible, this setting should\n        # overridden to take advantage of the native linker features on\n        # the platform it is being used on.\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n      fi\n\n      # Commands to make compiler produce verbose output that lists\n      # what \"hidden\" libraries, object files and flags are used when\n      # linking a shared library.\n      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n    else\n      GXX=no\n      with_gnu_ld=no\n      wlarc=\n    fi\n\n    # PORTME: fill in a description of your system's C++ link characteristics\n    AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\n    _LT_TAGVAR(ld_shlibs, $1)=yes\n    case $host_os in\n      aix3*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n      aix[[4-9]]*)\n        if test ia64 = \"$host_cpu\"; then\n          # On IA64, the linker does run time linking by default, so we don't\n          # have to do anything special.\n          aix_use_runtimelinking=no\n          exp_sym_flag='-Bexport'\n          no_entry_flag=\n        else\n          aix_use_runtimelinking=no\n\n          # Test if we are trying to use run time linking or normal\n          # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n          # have runtime linking enabled, and use it for executables.\n          # For shared libraries, we enable/disable runtime linking\n          # depending on the kind of the shared library created -\n          # when \"with_aix_soname,aix_use_runtimelinking\" is:\n          # \"aix,no\"   lib.a(lib.so.V) shared, rtl:no,  for executables\n          # \"aix,yes\"  lib.so          shared, rtl:yes, for executables\n          #            lib.a           static archive\n          # \"both,no\"  lib.so.V(shr.o) shared, rtl:yes\n          #            lib.a(lib.so.V) shared, rtl:no,  for executables\n          # \"both,yes\" lib.so.V(shr.o) shared, rtl:yes, for executables\n          #            lib.a(lib.so.V) shared, rtl:no\n          # \"svr4,*\"   lib.so.V(shr.o) shared, rtl:yes, for executables\n          #            lib.a           static archive\n          case $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t    for ld_flag in $LDFLAGS; do\n\t      case $ld_flag in\n\t      *-brtl*)\n\t        aix_use_runtimelinking=yes\n\t        break\n\t        ;;\n\t      esac\n\t    done\n\t    if test svr4,no = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t      # With aix-soname=svr4, we create the lib.so.V shared archives only,\n\t      # so we don't have lib.a shared libs to link our executables.\n\t      # We have to force runtime linking in this case.\n\t      aix_use_runtimelinking=yes\n\t      LDFLAGS=\"$LDFLAGS -Wl,-brtl\"\n\t    fi\n\t    ;;\n          esac\n\n          exp_sym_flag='-bexport'\n          no_entry_flag='-bnoentry'\n        fi\n\n        # When large executables or shared objects are built, AIX ld can\n        # have problems creating the table of contents.  If linking a library\n        # or program results in \"error TOC overflow\" add -mminimal-toc to\n        # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n        # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n        _LT_TAGVAR(archive_cmds, $1)=''\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        _LT_TAGVAR(file_list_spec, $1)='$wl-f,'\n        case $with_aix_soname,$aix_use_runtimelinking in\n        aix,*) ;;\t# no import file\n        svr4,* | *,yes) # use import file\n          # The Import File defines what to hardcode.\n          _LT_TAGVAR(hardcode_direct, $1)=no\n          _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n          ;;\n        esac\n\n        if test yes = \"$GXX\"; then\n          case $host_os in aix4.[[012]]|aix4.[[012]].*)\n          # We only want to do this on AIX 4.2 and lower, the check\n          # below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t     strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t    # We have reworked collect2\n\t    :\n\t  else\n\t    # We have old collect2\n\t    _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t    # It fails to find uninstalled libraries when the uninstalled\n\t    # path is not listed in the libpath.  Setting hardcode_minus_L\n\t    # to unsupported forces relinking\n\t    _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n          esac\n          shared_flag='-shared'\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag=$shared_flag' $wl-G'\n\t  fi\n\t  # Need to ensure runtime linking is disabled for the traditional\n\t  # shared library, or the linker may eventually find shared libraries\n\t  # /with/ Import File - we do not want to mix them.\n\t  shared_flag_aix='-shared'\n\t  shared_flag_svr4='-shared $wl-G'\n        else\n          # not using gcc\n          if test ia64 = \"$host_cpu\"; then\n\t  # VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t  # chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n          else\n\t    if test yes = \"$aix_use_runtimelinking\"; then\n\t      shared_flag='$wl-G'\n\t    else\n\t      shared_flag='$wl-bM:SRE'\n\t    fi\n\t    shared_flag_aix='$wl-bM:SRE'\n\t    shared_flag_svr4='$wl-G'\n          fi\n        fi\n\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-bexpall'\n        # It seems that -bexpall does not export symbols beginning with\n        # underscore (_), so it is better to generate a list of symbols to\n\t# export.\n        _LT_TAGVAR(always_export_symbols, $1)=yes\n\tif test aix,yes = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n          # Warning - without using the other runtime loading flags (-brtl),\n          # -berok will link without error, but may produce a broken library.\n          # The \"-G\" linker flag allows undefined symbols.\n          _LT_TAGVAR(no_undefined_flag, $1)='-bernotok'\n          # Determine the default libpath from the value encoded in an empty\n          # executable.\n          _LT_SYS_MODULE_PATH_AIX([$1])\n          _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n        else\n          if test ia64 = \"$host_cpu\"; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $libdir:/usr/lib:/lib'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n          else\n\t    # Determine the default libpath from the value encoded in an\n\t    # empty executable.\n\t    _LT_SYS_MODULE_PATH_AIX([$1])\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t    # Warning - without using the other run time loading flags,\n\t    # -berok will link without error, but may produce a broken library.\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' $wl-bernotok'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-berok'\n\t    if test yes = \"$with_gnu_ld\"; then\n\t      # We only use this code for GNU lds that support --whole-archive.\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    else\n\t      # Exported symbols can be pulled into shared objects from archives\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t    fi\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'\n\t    # -brtl affects multiple linker settings, -berok does not and is overridden later\n\t    compiler_flags_filtered='`func_echo_all \"$compiler_flags \" | $SED -e \"s%-brtl\\\\([[, ]]\\\\)%-berok\\\\1%g\"`'\n\t    if test svr4 != \"$with_aix_soname\"; then\n\t      # This is similar to how AIX traditionally builds its shared\n\t      # libraries. Need -bnortl late, we may have -brtl in LDFLAGS.\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'\n\t    fi\n\t    if test aix != \"$with_aix_soname\"; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all \"#! $soname($shared_archive_member_spec.o)\"; if test shr_64 = \"$shared_archive_member_spec\"; then func_echo_all \"# 64\"; else func_echo_all \"# 32\"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'\n\t    else\n\t      # used by -dlpreopen to get the symbols\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'\n\t    fi\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$RM -r $output_objdir/$realname.d'\n          fi\n        fi\n        ;;\n\n      beos*)\n\tif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  # Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t  # support --undefined.  This deserves some investigation.  FIXME\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      chorus*)\n        case $cc_basename in\n          *)\n\t  # FIXME: insert proper C++ library support\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\t  ;;\n        esac\n        ;;\n\n      cygwin* | mingw* | pw32* | cegcc*)\n\tcase $GXX,$cc_basename in\n\t,cl* | no,cl*)\n\t  # Native MSVC\n\t  # hardcode_libdir_flag_spec is actually meaningless, as there is\n\t  # no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=yes\n\t  _LT_TAGVAR(file_list_spec, $1)='@'\n\t  # Tell ltmain to make .lib files, not .a files.\n\t  libext=lib\n\t  # Tell ltmain to make .dll files, not .so files.\n\t  shrext_cmds=.dll\n\t  # FIXME: Setting linknames here is a bad hack.\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n              cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n              echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n            else\n              $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n            fi~\n            $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n            linknames='\n\t  # The linker will not automatically build a static lib if we build a DLL.\n\t  # _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t  # Don't use ranlib\n\t  _LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t  _LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n            lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n            case $lt_outputfile in\n              *.exe|*.EXE) ;;\n              *)\n                lt_outputfile=$lt_outputfile.exe\n                lt_tool_outputfile=$lt_tool_outputfile.exe\n                ;;\n            esac~\n            func_to_tool_file \"$lt_outputfile\"~\n            if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n              $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n              $RM \"$lt_outputfile.manifest\";\n            fi'\n\t  ;;\n\t*)\n\t  # g++\n\t  # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n\t  # as there is no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-all-symbols'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=no\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\n\t  if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t    # If the export-symbols file already is a .def file, use it as\n\t    # is; otherwise, prepend EXPORTS...\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n              cp $export_symbols $output_objdir/$soname.def;\n            else\n              echo EXPORTS > $output_objdir/$soname.def;\n              cat $export_symbols >> $output_objdir/$soname.def;\n            fi~\n            $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t  ;;\n\tesac\n\t;;\n      darwin* | rhapsody*)\n        _LT_DARWIN_LINKER_FEATURES($1)\n\t;;\n\n      os2*)\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\tshrext_cmds=.dll\n\t_LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t  $ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t  $ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t  $ECHO EXPORTS >> $output_objdir/$libname.def~\n\t  emxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\t  emximp -o $lib $output_objdir/$libname.def'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t  $ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t  $ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t  $ECHO EXPORTS >> $output_objdir/$libname.def~\n\t  prefix_cmds=\"$SED\"~\n\t  if test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t    prefix_cmds=\"$prefix_cmds -e 1d\";\n\t  fi~\n\t  prefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\t  cat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\t  emximp -o $lib $output_objdir/$libname.def'\n\t_LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t;;\n\n      dgux*)\n        case $cc_basename in\n          ec++*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          ghcx*)\n\t    # Green Hills C++ Compiler\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      freebsd2.*)\n        # C++ shared libraries reported to be fairly broken before\n\t# switch to ELF\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      freebsd-elf*)\n        _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n        ;;\n\n      freebsd* | dragonfly*)\n        # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF\n        # conventions\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n        ;;\n\n      haiku*)\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        ;;\n\n      hpux9*)\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t             # but as the default\n\t\t\t\t             # location of the library.\n\n        case $cc_basename in\n          CC*)\n            # FIXME: insert proper C++ library support\n            _LT_TAGVAR(ld_shlibs, $1)=no\n            ;;\n          aCC*)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -b $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            # Commands to make compiler produce verbose output that lists\n            # what \"hidden\" libraries, object files and flags are used when\n            # linking a shared library.\n            #\n            # There doesn't appear to be a way to prevent this compiler from\n            # explicitly linking system object files so we need to strip them\n            # from the output so that they don't get included in the library\n            # dependencies.\n            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP \"\\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n            ;;\n          *)\n            if test yes = \"$GXX\"; then\n              _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -nostdlib $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            else\n              # FIXME: insert proper C++ library support\n              _LT_TAGVAR(ld_shlibs, $1)=no\n            fi\n            ;;\n        esac\n        ;;\n\n      hpux10*|hpux11*)\n        if test no = \"$with_gnu_ld\"; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n          case $host_cpu in\n            hppa*64*|ia64*)\n              ;;\n            *)\n\t      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n              ;;\n          esac\n        fi\n        case $host_cpu in\n          hppa*64*|ia64*)\n            _LT_TAGVAR(hardcode_direct, $1)=no\n            _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n            ;;\n          *)\n            _LT_TAGVAR(hardcode_direct, $1)=yes\n            _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t\t         # but as the default\n\t\t\t\t\t         # location of the library.\n            ;;\n        esac\n\n        case $cc_basename in\n          CC*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          aCC*)\n\t    case $host_cpu in\n\t      hppa*64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      ia64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      *)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t    esac\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP \"\\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        case $host_cpu in\n\t          hppa*64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          ia64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          *)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t        esac\n\t      fi\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      interix[[3-9]]*)\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t# Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n\t# Instead, shared libraries are loaded at an image base (0x10000000 by\n\t# default) and relocated if they conflict, which is a slow very memory\n\t# consuming and fragmenting process.  To avoid this, we pick a random,\n\t# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n\t# time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t;;\n      irix5* | irix6*)\n        case $cc_basename in\n          CC*)\n\t    # SGI C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -ar\", where \"CC\" is the IRIX C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t      else\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` -o $lib'\n\t      fi\n\t    fi\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\t    ;;\n        esac\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(inherit_rpath, $1)=yes\n        ;;\n\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib $wl-retain-symbols-file,$export_symbols; mv \\$templib $lib'\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP \"ld\"`; rm -f libconftest$shared_ext; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\t    ;;\n\t  icpc* | ecpc* )\n\t    # Intel C++\n\t    with_gnu_ld=yes\n\t    # version 8.0 and above of icpc choke on multiply defined symbols\n\t    # if we add $predep_objects and $postdep_objects, however 7.1 and\n\t    # earlier do not add the objects themselves.\n\t    case `$CC -V 2>&1` in\n\t      *\"Version 7.\"*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t      *)  # Version 8.0 or newer\n\t        tmp_idyn=\n\t        case $host_cpu in\n\t\t  ia64*) tmp_idyn=' -i_dynamic';;\n\t\tesac\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t    esac\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    ;;\n          pgCC* | pgcpp*)\n            # Portland Group C++ compiler\n\t    case `$CC -V` in\n\t    *pgCC\\ [[1-5]].* | *pgcpp\\ [[1-5]].*)\n\t      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~\n               rm -rf $tpldir~\n               $CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n               compile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n\t      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n                $AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n                $RANLIB $oldlib'\n\t      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    *) # Version 6 and above use weak symbols\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl--rpath $wl$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n            ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname  -o $lib $wl-retain-symbols-file $wl$export_symbols'\n\n\t    runpath_var=LD_RUN_PATH\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld .*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"X$list\" | $Xsed'\n\t    ;;\n\t  xl* | mpixl* | bgxl*)\n\t    # IBM XL 8.0 on PPC, with GNU ld\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    if test yes = \"$supports_anon_versioning\"; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n                cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n                echo \"local: *; };\" >> $output_objdir/$libname.ver~\n                $CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n\t    fi\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file $wl$export_symbols'\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t      _LT_TAGVAR(compiler_needs_object, $1)=yes\n\n\t      # Not sure whether something based on\n\t      # $CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1\n\t      # would be better.\n\t      output_verbose_link_cmd='func_echo_all'\n\n\t      # Archives containing C++ object files must be created using\n\t      # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t      # necessary to make sure instantiated templates are included\n\t      # in the archive.\n\t      _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n\n      lynxos*)\n        # FIXME: insert proper C++ library support\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      m88k*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      mvs*)\n        case $cc_basename in\n          cxx*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\t  *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\tesac\n\t;;\n\n      netbsd*)\n        if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'\n\t  wlarc=\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\tfi\n\t# Workaround some broken pre-1.5 toolchains\n\toutput_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP conftest.$objext | $SED -e \"s:-lgcc -lc -lgcc::\"'\n\t;;\n\n      *nto* | *qnx*)\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n\t;;\n\n      openbsd* | bitrig*)\n\tif test -f /usr/libexec/ld.so; then\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file,$export_symbols -o $lib'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n\t  fi\n\t  output_verbose_link_cmd=func_echo_all\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      osf3* | osf4* | osf5*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo \"$lib\" | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Archives containing C++ object files must be created using\n\t    # the KAI C++ compiler.\n\t    case $host in\n\t      osf3*) _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs' ;;\n\t      *) _LT_TAGVAR(old_archive_cmds, $1)='$CC -o $oldlib $oldobjs' ;;\n\t    esac\n\t    ;;\n          RCC*)\n\t    # Rational C++ 2.4.1\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          cxx*)\n\t    case $host in\n\t      osf3*)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t\t;;\n\t      *)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done~\n                  echo \"-hidden\">> $lib.exp~\n                  $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname $wl-input $wl$lib.exp  `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~\n                  $RM $lib.exp'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t\t;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\" | $GREP -v \"ld:\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n\t  *)\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t      case $host in\n\t        osf3*)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t        *)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t      esac\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t      # Commands to make compiler produce verbose output that lists\n\t      # what \"hidden\" libraries, object files and flags are used when\n\t      # linking a shared library.\n\t      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      psos*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      sunos4*)\n        case $cc_basename in\n          CC*)\n\t    # Sun C++ 4.x\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          lcc*)\n\t    # Lucid\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      solaris*)\n        case $cc_basename in\n          CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n            _LT_TAGVAR(archive_cmds_need_lc,$1)=yes\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n              $CC -G$allow_undefined_flag $wl-M $wl$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t    _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t    case $host_os in\n\t      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t      *)\n\t\t# The compiler driver will combine and reorder linker options,\n\t\t# but understands '-z linker_flag'.\n\t        # Supported since Solaris 2.6 (maybe 2.5.1?)\n\t\t_LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\t        ;;\n\t    esac\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\n\t    output_verbose_link_cmd='func_echo_all'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t    ;;\n          gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\n\t    # The C++ compiler must be used to create the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    # GNU C++ compiler with Solaris linker\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' $wl-z ${wl}defs'\n\t      if $CC --version | $GREP -v '^2\\.7' > /dev/null; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -shared $pic_flag -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      else\n\t        # g++ 2.7 appears to require '-G' NOT '-shared' on this\n\t        # platform.\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -G -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      fi\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $wl$libdir'\n\t      case $host_os in\n\t\tsolaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t\t*)\n\t\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\t\t  ;;\n\t      esac\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      case $cc_basename in\n        CC*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n      esac\n      ;;\n\n      sysv5* | sco3.2v5* | sco5v6*)\n\t# Note: We CANNOT use -z defs as we might desire, because we do not\n\t# link with -lc, and that would cause any symbols used from libc to\n\t# always be unresolved, which means just about no library would\n\t# ever link correctly.  If we're not using GNU ld we use -z text\n\t# though, which does catch some bad symbols but isn't as heavy-handed\n\t# as -z defs.\n\t_LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n\t_LT_TAGVAR(allow_undefined_flag, $1)='$wl-z,nodefs'\n\t_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R,$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n\t_LT_TAGVAR(link_all_deplibs, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Bexport'\n\trunpath_var='LD_RUN_PATH'\n\n\tcase $cc_basename in\n          CC*)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Tprelink_objects $oldobjs~\n              '\"$_LT_TAGVAR(old_archive_cmds, $1)\"\n\t    _LT_TAGVAR(reload_cmds, $1)='$CC -Tprelink_objects $reload_objs~\n              '\"$_LT_TAGVAR(reload_cmds, $1)\"\n\t    ;;\n\t  *)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    ;;\n\tesac\n      ;;\n\n      tandem*)\n        case $cc_basename in\n          NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      vxworks*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      *)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n    esac\n\n    AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\n    test no = \"$_LT_TAGVAR(ld_shlibs, $1)\" && can_build_shared=no\n\n    _LT_TAGVAR(GCC, $1)=$GXX\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\n  LDCXX=$LD\n  LD=$lt_save_LD\n  GCC=$lt_save_GCC\n  with_gnu_ld=$lt_save_with_gnu_ld\n  lt_cv_path_LDCXX=$lt_cv_path_LD\n  lt_cv_path_LD=$lt_save_path_LD\n  lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld\n  lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld\nfi # test yes != \"$_lt_caught_CXX_error\"\n\nAC_LANG_POP\n])# _LT_LANG_CXX_CONFIG\n\n\n# _LT_FUNC_STRIPNAME_CNF\n# ----------------------\n# func_stripname_cnf prefix suffix name\n# strip PREFIX and SUFFIX off of NAME.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\n#\n# This function is identical to the (non-XSI) version of func_stripname,\n# except this one can be used by m4 code that may be executed by configure,\n# rather than the libtool script.\nm4_defun([_LT_FUNC_STRIPNAME_CNF],[dnl\nAC_REQUIRE([_LT_DECL_SED])\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])\nfunc_stripname_cnf ()\n{\n  case @S|@2 in\n  .*) func_stripname_result=`$ECHO \"@S|@3\" | $SED \"s%^@S|@1%%; s%\\\\\\\\@S|@2\\$%%\"`;;\n  *)  func_stripname_result=`$ECHO \"@S|@3\" | $SED \"s%^@S|@1%%; s%@S|@2\\$%%\"`;;\n  esac\n} # func_stripname_cnf\n])# _LT_FUNC_STRIPNAME_CNF\n\n\n# _LT_SYS_HIDDEN_LIBDEPS([TAGNAME])\n# ---------------------------------\n# Figure out \"hidden\" library dependencies from verbose\n# compiler output when linking a shared library.\n# Parse the compiler output and extract the necessary\n# objects, libraries and library flags.\nm4_defun([_LT_SYS_HIDDEN_LIBDEPS],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nAC_REQUIRE([_LT_FUNC_STRIPNAME_CNF])dnl\n# Dependencies to place before and after the object being linked:\n_LT_TAGVAR(predep_objects, $1)=\n_LT_TAGVAR(postdep_objects, $1)=\n_LT_TAGVAR(predeps, $1)=\n_LT_TAGVAR(postdeps, $1)=\n_LT_TAGVAR(compiler_lib_search_path, $1)=\n\ndnl we can't use the lt_simple_compile_test_code here,\ndnl because it contains code intended for an executable,\ndnl not a library.  It's possible we should let each\ndnl tag define a new lt_????_link_test_code variable,\ndnl but it's only used here...\nm4_if([$1], [], [cat > conftest.$ac_ext <<_LT_EOF\nint a;\nvoid foo (void) { a = 0; }\n_LT_EOF\n], [$1], [CXX], [cat > conftest.$ac_ext <<_LT_EOF\nclass Foo\n{\npublic:\n  Foo (void) { a = 0; }\nprivate:\n  int a;\n};\n_LT_EOF\n], [$1], [F77], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer*4 a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [FC], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [GCJ], [cat > conftest.$ac_ext <<_LT_EOF\npublic class foo {\n  private int a;\n  public void bar (void) {\n    a = 0;\n  }\n};\n_LT_EOF\n], [$1], [GO], [cat > conftest.$ac_ext <<_LT_EOF\npackage foo\nfunc foo() {\n}\n_LT_EOF\n])\n\n_lt_libdeps_save_CFLAGS=$CFLAGS\ncase \"$CC $CFLAGS \" in #(\n*\\ -flto*\\ *) CFLAGS=\"$CFLAGS -fno-lto\" ;;\n*\\ -fwhopr*\\ *) CFLAGS=\"$CFLAGS -fno-whopr\" ;;\n*\\ -fuse-linker-plugin*\\ *) CFLAGS=\"$CFLAGS -fno-use-linker-plugin\" ;;\nesac\n\ndnl Parse the compiler output and extract the necessary\ndnl objects, libraries and library flags.\nif AC_TRY_EVAL(ac_compile); then\n  # Parse the compiler output and extract the necessary\n  # objects, libraries and library flags.\n\n  # Sentinel used to keep track of whether or not we are before\n  # the conftest object file.\n  pre_test_object_deps_done=no\n\n  for p in `eval \"$output_verbose_link_cmd\"`; do\n    case $prev$p in\n\n    -L* | -R* | -l*)\n       # Some compilers place space between \"-{L,R}\" and the path.\n       # Remove the space.\n       if test x-L = \"$p\" ||\n          test x-R = \"$p\"; then\n\t prev=$p\n\t continue\n       fi\n\n       # Expand the sysroot to ease extracting the directories later.\n       if test -z \"$prev\"; then\n         case $p in\n         -L*) func_stripname_cnf '-L' '' \"$p\"; prev=-L; p=$func_stripname_result ;;\n         -R*) func_stripname_cnf '-R' '' \"$p\"; prev=-R; p=$func_stripname_result ;;\n         -l*) func_stripname_cnf '-l' '' \"$p\"; prev=-l; p=$func_stripname_result ;;\n         esac\n       fi\n       case $p in\n       =*) func_stripname_cnf '=' '' \"$p\"; p=$lt_sysroot$func_stripname_result ;;\n       esac\n       if test no = \"$pre_test_object_deps_done\"; then\n\t case $prev in\n\t -L | -R)\n\t   # Internal compiler library paths should come after those\n\t   # provided the user.  The postdeps already come after the\n\t   # user supplied libs so there is no need to process them.\n\t   if test -z \"$_LT_TAGVAR(compiler_lib_search_path, $1)\"; then\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=$prev$p\n\t   else\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=\"${_LT_TAGVAR(compiler_lib_search_path, $1)} $prev$p\"\n\t   fi\n\t   ;;\n\t # The \"-l\" case would never come before the object being\n\t # linked, so don't bother handling this case.\n\t esac\n       else\n\t if test -z \"$_LT_TAGVAR(postdeps, $1)\"; then\n\t   _LT_TAGVAR(postdeps, $1)=$prev$p\n\t else\n\t   _LT_TAGVAR(postdeps, $1)=\"${_LT_TAGVAR(postdeps, $1)} $prev$p\"\n\t fi\n       fi\n       prev=\n       ;;\n\n    *.lto.$objext) ;; # Ignore GCC LTO objects\n    *.$objext)\n       # This assumes that the test object file only shows up\n       # once in the compiler output.\n       if test \"$p\" = \"conftest.$objext\"; then\n\t pre_test_object_deps_done=yes\n\t continue\n       fi\n\n       if test no = \"$pre_test_object_deps_done\"; then\n\t if test -z \"$_LT_TAGVAR(predep_objects, $1)\"; then\n\t   _LT_TAGVAR(predep_objects, $1)=$p\n\t else\n\t   _LT_TAGVAR(predep_objects, $1)=\"$_LT_TAGVAR(predep_objects, $1) $p\"\n\t fi\n       else\n\t if test -z \"$_LT_TAGVAR(postdep_objects, $1)\"; then\n\t   _LT_TAGVAR(postdep_objects, $1)=$p\n\t else\n\t   _LT_TAGVAR(postdep_objects, $1)=\"$_LT_TAGVAR(postdep_objects, $1) $p\"\n\t fi\n       fi\n       ;;\n\n    *) ;; # Ignore the rest.\n\n    esac\n  done\n\n  # Clean up.\n  rm -f a.out a.exe\nelse\n  echo \"libtool.m4: error: problem compiling $1 test program\"\nfi\n\n$RM -f confest.$objext\nCFLAGS=$_lt_libdeps_save_CFLAGS\n\n# PORTME: override above test on systems where it is broken\nm4_if([$1], [CXX],\n[case $host_os in\ninterix[[3-9]]*)\n  # Interix 3.5 installs completely hosed .la files for C++, so rather than\n  # hack all around it, let's just trust \"g++\" to DTRT.\n  _LT_TAGVAR(predep_objects,$1)=\n  _LT_TAGVAR(postdep_objects,$1)=\n  _LT_TAGVAR(postdeps,$1)=\n  ;;\nesac\n])\n\ncase \" $_LT_TAGVAR(postdeps, $1) \" in\n*\" -lc \"*) _LT_TAGVAR(archive_cmds_need_lc, $1)=no ;;\nesac\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=\nif test -n \"${_LT_TAGVAR(compiler_lib_search_path, $1)}\"; then\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=`echo \" ${_LT_TAGVAR(compiler_lib_search_path, $1)}\" | $SED -e 's! -L! !g' -e 's!^ !!'`\nfi\n_LT_TAGDECL([], [compiler_lib_search_dirs], [1],\n    [The directories searched by this compiler when creating a shared library])\n_LT_TAGDECL([], [predep_objects], [1],\n    [Dependencies to place before and after the objects being linked to\n    create a shared library])\n_LT_TAGDECL([], [postdep_objects], [1])\n_LT_TAGDECL([], [predeps], [1])\n_LT_TAGDECL([], [postdeps], [1])\n_LT_TAGDECL([], [compiler_lib_search_path], [1],\n    [The library search path used internally by the compiler when linking\n    a shared library])\n])# _LT_SYS_HIDDEN_LIBDEPS\n\n\n# _LT_LANG_F77_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a Fortran 77 compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_F77_CONFIG],\n[AC_LANG_PUSH(Fortran 77)\nif test -z \"$F77\" || test no = \"$F77\"; then\n  _lt_disable_F77=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for f77 test sources.\nac_ext=f\n\n# Object file extension for compiled f77 test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the F77 compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_disable_F77\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${F77-\"f77\"}\n  CFLAGS=$FFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n  GCC=$G77\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test no = \"$can_build_shared\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test yes = \"$enable_shared\" && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test ia64 != \"$host_cpu\"; then\n\t  case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n\t  yes,aix,yes) ;;\t\t# shared object as lib.so file only\n\t  yes,svr4,*) ;;\t\t# shared object as lib.so archive member only\n\t  yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n\t  esac\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test yes = \"$enable_shared\" || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=$G77\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\nfi # test yes != \"$_lt_disable_F77\"\n\nAC_LANG_POP\n])# _LT_LANG_F77_CONFIG\n\n\n# _LT_LANG_FC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for a Fortran compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_FC_CONFIG],\n[AC_LANG_PUSH(Fortran)\n\nif test -z \"$FC\" || test no = \"$FC\"; then\n  _lt_disable_FC=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for fc test sources.\nac_ext=${ac_fc_srcext-f}\n\n# Object file extension for compiled fc test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the FC compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_disable_FC\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${FC-\"f95\"}\n  CFLAGS=$FCFLAGS\n  compiler=$CC\n  GCC=$ac_cv_fc_compiler_gnu\n\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test no = \"$can_build_shared\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test yes = \"$enable_shared\" && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test ia64 != \"$host_cpu\"; then\n\t  case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n\t  yes,aix,yes) ;;\t\t# shared object as lib.so file only\n\t  yes,svr4,*) ;;\t\t# shared object as lib.so archive member only\n\t  yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n\t  esac\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test yes = \"$enable_shared\" || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=$ac_cv_fc_compiler_gnu\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\nfi # test yes != \"$_lt_disable_FC\"\n\nAC_LANG_POP\n])# _LT_LANG_FC_CONFIG\n\n\n# _LT_LANG_GCJ_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Java Compiler compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_GCJ_CONFIG],\n[AC_REQUIRE([LT_PROG_GCJ])dnl\nAC_LANG_SAVE\n\n# Source file extension for Java test sources.\nac_ext=java\n\n# Object file extension for compiled Java test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"class foo {}\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GCJ-\"gcj\"}\nCFLAGS=$GCJFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=$LD\n_LT_CC_BASENAME([$compiler])\n\n# GCJ did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GCJ_CONFIG\n\n\n# _LT_LANG_GO_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Go compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_GO_CONFIG],\n[AC_REQUIRE([LT_PROG_GO])dnl\nAC_LANG_SAVE\n\n# Source file extension for Go test sources.\nac_ext=go\n\n# Object file extension for compiled Go test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"package main; func main() { }\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='package main; func main() { }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GOC-\"gccgo\"}\nCFLAGS=$GOFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=$LD\n_LT_CC_BASENAME([$compiler])\n\n# Go did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GO_CONFIG\n\n\n# _LT_LANG_RC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for the Windows resource compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_RC_CONFIG],\n[AC_REQUIRE([LT_PROG_RC])dnl\nAC_LANG_SAVE\n\n# Source file extension for RC test sources.\nac_ext=rc\n\n# Object file extension for compiled RC test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code='sample MENU { MENUITEM \"&Soup\", 100, CHECKED }'\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=$lt_simple_compile_test_code\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=\nCC=${RC-\"windres\"}\nCFLAGS=\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n\nif test -n \"$compiler\"; then\n  :\n  _LT_CONFIG($1)\nfi\n\nGCC=$lt_save_GCC\nAC_LANG_RESTORE\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_RC_CONFIG\n\n\n# LT_PROG_GCJ\n# -----------\nAC_DEFUN([LT_PROG_GCJ],\n[m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],\n  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],\n    [AC_CHECK_TOOL(GCJ, gcj,)\n      test set = \"${GCJFLAGS+set}\" || GCJFLAGS=\"-g -O2\"\n      AC_SUBST(GCJFLAGS)])])[]dnl\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_GCJ], [LT_PROG_GCJ])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_GCJ], [])\n\n\n# LT_PROG_GO\n# ----------\nAC_DEFUN([LT_PROG_GO],\n[AC_CHECK_TOOL(GOC, gccgo,)\n])\n\n\n# LT_PROG_RC\n# ----------\nAC_DEFUN([LT_PROG_RC],\n[AC_CHECK_TOOL(RC, windres,)\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_RC], [LT_PROG_RC])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_RC], [])\n\n\n# _LT_DECL_EGREP\n# --------------\n# If we don't have a new enough Autoconf to choose the best grep\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_EGREP],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_REQUIRE([AC_PROG_FGREP])dnl\ntest -z \"$GREP\" && GREP=grep\n_LT_DECL([], [GREP], [1], [A grep program that handles long lines])\n_LT_DECL([], [EGREP], [1], [An ERE matcher])\n_LT_DECL([], [FGREP], [1], [A literal string matcher])\ndnl Non-bleeding-edge autoconf doesn't subst GREP, so do it here too\nAC_SUBST([GREP])\n])\n\n\n# _LT_DECL_OBJDUMP\n# --------------\n# If we don't have a new enough Autoconf to choose the best objdump\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_OBJDUMP],\n[AC_CHECK_TOOL(OBJDUMP, objdump, false)\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n_LT_DECL([], [OBJDUMP], [1], [An object symbol dumper])\nAC_SUBST([OBJDUMP])\n])\n\n# _LT_DECL_DLLTOOL\n# ----------------\n# Ensure DLLTOOL variable is set.\nm4_defun([_LT_DECL_DLLTOOL],\n[AC_CHECK_TOOL(DLLTOOL, dlltool, false)\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n_LT_DECL([], [DLLTOOL], [1], [DLL creation program])\nAC_SUBST([DLLTOOL])\n])\n\n# _LT_DECL_SED\n# ------------\n# Check for a fully-functional sed program, that truncates\n# as few characters as possible.  Prefer GNU sed if found.\nm4_defun([_LT_DECL_SED],\n[AC_PROG_SED\ntest -z \"$SED\" && SED=sed\nXsed=\"$SED -e 1s/^X//\"\n_LT_DECL([], [SED], [1], [A sed program that does not truncate output])\n_LT_DECL([], [Xsed], [\"\\$SED -e 1s/^X//\"],\n    [Sed that helps us avoid accidentally triggering echo(1) options like -n])\n])# _LT_DECL_SED\n\nm4_ifndef([AC_PROG_SED], [\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_SED.  When it is available in   #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n\nm4_defun([AC_PROG_SED],\n[AC_MSG_CHECKING([for a sed that does not truncate output])\nAC_CACHE_VAL(lt_cv_path_SED,\n[# Loop through the user's path and test for sed and gsed.\n# Then use that list of sed's as ones to test for truncation.\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  for lt_ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      if $as_executable_p \"$as_dir/$lt_ac_prog$ac_exec_ext\"; then\n        lt_ac_sed_list=\"$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext\"\n      fi\n    done\n  done\ndone\nIFS=$as_save_IFS\nlt_ac_max=0\nlt_ac_count=0\n# Add /usr/xpg4/bin/sed as it is typically found on Solaris\n# along with /bin/sed that truncates output.\nfor lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do\n  test ! -f \"$lt_ac_sed\" && continue\n  cat /dev/null > conftest.in\n  lt_ac_count=0\n  echo $ECHO_N \"0123456789$ECHO_C\" >conftest.in\n  # Check for GNU sed and select it if it is found.\n  if \"$lt_ac_sed\" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then\n    lt_cv_path_SED=$lt_ac_sed\n    break\n  fi\n  while true; do\n    cat conftest.in conftest.in >conftest.tmp\n    mv conftest.tmp conftest.in\n    cp conftest.in conftest.nl\n    echo >>conftest.nl\n    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break\n    cmp -s conftest.out conftest.nl || break\n    # 10000 chars as input seems more than enough\n    test 10 -lt \"$lt_ac_count\" && break\n    lt_ac_count=`expr $lt_ac_count + 1`\n    if test \"$lt_ac_count\" -gt \"$lt_ac_max\"; then\n      lt_ac_max=$lt_ac_count\n      lt_cv_path_SED=$lt_ac_sed\n    fi\n  done\ndone\n])\nSED=$lt_cv_path_SED\nAC_SUBST([SED])\nAC_MSG_RESULT([$SED])\n])#AC_PROG_SED\n])#m4_ifndef\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_SED], [AC_PROG_SED])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_SED], [])\n\n\n# _LT_CHECK_SHELL_FEATURES\n# ------------------------\n# Find out whether the shell is Bourne or XSI compatible,\n# or has some other useful features.\nm4_defun([_LT_CHECK_SHELL_FEATURES],\n[if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then\n  lt_unset=unset\nelse\n  lt_unset=false\nfi\n_LT_DECL([], [lt_unset], [0], [whether the shell understands \"unset\"])dnl\n\n# test EBCDIC or ASCII\ncase `echo X|tr X '\\101'` in\n A) # ASCII based system\n    # \\n is not interpreted correctly by Solaris 8 /usr/ucb/tr\n  lt_SP2NL='tr \\040 \\012'\n  lt_NL2SP='tr \\015\\012 \\040\\040'\n  ;;\n *) # EBCDIC based system\n  lt_SP2NL='tr \\100 \\n'\n  lt_NL2SP='tr \\r\\n \\100\\100'\n  ;;\nesac\n_LT_DECL([SP2NL], [lt_SP2NL], [1], [turn spaces into newlines])dnl\n_LT_DECL([NL2SP], [lt_NL2SP], [1], [turn newlines into spaces])dnl\n])# _LT_CHECK_SHELL_FEATURES\n\n\n# _LT_PATH_CONVERSION_FUNCTIONS\n# -----------------------------\n# Determine what file name conversion functions should be used by\n# func_to_host_file (and, implicitly, by func_to_host_path).  These are needed\n# for certain cross-compile configurations and native mingw.\nm4_defun([_LT_PATH_CONVERSION_FUNCTIONS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_MSG_CHECKING([how to convert $build file names to $host format])\nAC_CACHE_VAL(lt_cv_to_host_file_cmd,\n[case $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_w32\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_cygwin_to_w32\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_w32\n        ;;\n    esac\n    ;;\n  *-*-cygwin* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_cygwin\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_noop\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_cygwin\n        ;;\n    esac\n    ;;\n  * ) # unhandled hosts (and \"normal\" native builds)\n    lt_cv_to_host_file_cmd=func_convert_file_noop\n    ;;\nesac\n])\nto_host_file_cmd=$lt_cv_to_host_file_cmd\nAC_MSG_RESULT([$lt_cv_to_host_file_cmd])\n_LT_DECL([to_host_file_cmd], [lt_cv_to_host_file_cmd],\n         [0], [convert $build file names to $host format])dnl\n\nAC_MSG_CHECKING([how to convert $build file names to toolchain format])\nAC_CACHE_VAL(lt_cv_to_tool_file_cmd,\n[#assume ordinary cross tools, or native build.\nlt_cv_to_tool_file_cmd=func_convert_file_noop\ncase $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_tool_file_cmd=func_convert_file_msys_to_w32\n        ;;\n    esac\n    ;;\nesac\n])\nto_tool_file_cmd=$lt_cv_to_tool_file_cmd\nAC_MSG_RESULT([$lt_cv_to_tool_file_cmd])\n_LT_DECL([to_tool_file_cmd], [lt_cv_to_tool_file_cmd],\n         [0], [convert $build files to toolchain format])dnl\n])# _LT_PATH_CONVERSION_FUNCTIONS\n\n# Helper functions for option handling.                    -*- Autoconf -*-\n#\n#   Copyright (C) 2004-2005, 2007-2009, 2011-2015 Free Software\n#   Foundation, Inc.\n#   Written by Gary V. Vaughan, 2004\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\n# serial 8 ltoptions.m4\n\n# This is to help aclocal find these macros, as it can't see m4_define.\nAC_DEFUN([LTOPTIONS_VERSION], [m4_if([1])])\n\n\n# _LT_MANGLE_OPTION(MACRO-NAME, OPTION-NAME)\n# ------------------------------------------\nm4_define([_LT_MANGLE_OPTION],\n[[_LT_OPTION_]m4_bpatsubst($1__$2, [[^a-zA-Z0-9_]], [_])])\n\n\n# _LT_SET_OPTION(MACRO-NAME, OPTION-NAME)\n# ---------------------------------------\n# Set option OPTION-NAME for macro MACRO-NAME, and if there is a\n# matching handler defined, dispatch to it.  Other OPTION-NAMEs are\n# saved as a flag.\nm4_define([_LT_SET_OPTION],\n[m4_define(_LT_MANGLE_OPTION([$1], [$2]))dnl\nm4_ifdef(_LT_MANGLE_DEFUN([$1], [$2]),\n        _LT_MANGLE_DEFUN([$1], [$2]),\n    [m4_warning([Unknown $1 option '$2'])])[]dnl\n])\n\n\n# _LT_IF_OPTION(MACRO-NAME, OPTION-NAME, IF-SET, [IF-NOT-SET])\n# ------------------------------------------------------------\n# Execute IF-SET if OPTION is set, IF-NOT-SET otherwise.\nm4_define([_LT_IF_OPTION],\n[m4_ifdef(_LT_MANGLE_OPTION([$1], [$2]), [$3], [$4])])\n\n\n# _LT_UNLESS_OPTIONS(MACRO-NAME, OPTION-LIST, IF-NOT-SET)\n# -------------------------------------------------------\n# Execute IF-NOT-SET unless all options in OPTION-LIST for MACRO-NAME\n# are set.\nm4_define([_LT_UNLESS_OPTIONS],\n[m4_foreach([_LT_Option], m4_split(m4_normalize([$2])),\n\t    [m4_ifdef(_LT_MANGLE_OPTION([$1], _LT_Option),\n\t\t      [m4_define([$0_found])])])[]dnl\nm4_ifdef([$0_found], [m4_undefine([$0_found])], [$3\n])[]dnl\n])\n\n\n# _LT_SET_OPTIONS(MACRO-NAME, OPTION-LIST)\n# ----------------------------------------\n# OPTION-LIST is a space-separated list of Libtool options associated\n# with MACRO-NAME.  If any OPTION has a matching handler declared with\n# LT_OPTION_DEFINE, dispatch to that macro; otherwise complain about\n# the unknown option and exit.\nm4_defun([_LT_SET_OPTIONS],\n[# Set options\nm4_foreach([_LT_Option], m4_split(m4_normalize([$2])),\n    [_LT_SET_OPTION([$1], _LT_Option)])\n\nm4_if([$1],[LT_INIT],[\n  dnl\n  dnl Simply set some default values (i.e off) if boolean options were not\n  dnl specified:\n  _LT_UNLESS_OPTIONS([LT_INIT], [dlopen], [enable_dlopen=no\n  ])\n  _LT_UNLESS_OPTIONS([LT_INIT], [win32-dll], [enable_win32_dll=no\n  ])\n  dnl\n  dnl If no reference was made to various pairs of opposing options, then\n  dnl we run the default mode handler for the pair.  For example, if neither\n  dnl 'shared' nor 'disable-shared' was passed, we enable building of shared\n  dnl archives by default:\n  _LT_UNLESS_OPTIONS([LT_INIT], [shared disable-shared], [_LT_ENABLE_SHARED])\n  _LT_UNLESS_OPTIONS([LT_INIT], [static disable-static], [_LT_ENABLE_STATIC])\n  _LT_UNLESS_OPTIONS([LT_INIT], [pic-only no-pic], [_LT_WITH_PIC])\n  _LT_UNLESS_OPTIONS([LT_INIT], [fast-install disable-fast-install],\n\t\t   [_LT_ENABLE_FAST_INSTALL])\n  _LT_UNLESS_OPTIONS([LT_INIT], [aix-soname=aix aix-soname=both aix-soname=svr4],\n\t\t   [_LT_WITH_AIX_SONAME([aix])])\n  ])\n])# _LT_SET_OPTIONS\n\n\n\n# _LT_MANGLE_DEFUN(MACRO-NAME, OPTION-NAME)\n# -----------------------------------------\nm4_define([_LT_MANGLE_DEFUN],\n[[_LT_OPTION_DEFUN_]m4_bpatsubst(m4_toupper([$1__$2]), [[^A-Z0-9_]], [_])])\n\n\n# LT_OPTION_DEFINE(MACRO-NAME, OPTION-NAME, CODE)\n# -----------------------------------------------\nm4_define([LT_OPTION_DEFINE],\n[m4_define(_LT_MANGLE_DEFUN([$1], [$2]), [$3])[]dnl\n])# LT_OPTION_DEFINE\n\n\n# dlopen\n# ------\nLT_OPTION_DEFINE([LT_INIT], [dlopen], [enable_dlopen=yes\n])\n\nAU_DEFUN([AC_LIBTOOL_DLOPEN],\n[_LT_SET_OPTION([LT_INIT], [dlopen])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you\nput the 'dlopen' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_DLOPEN], [])\n\n\n# win32-dll\n# ---------\n# Declare package support for building win32 dll's.\nLT_OPTION_DEFINE([LT_INIT], [win32-dll],\n[enable_win32_dll=yes\n\ncase $host in\n*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-cegcc*)\n  AC_CHECK_TOOL(AS, as, false)\n  AC_CHECK_TOOL(DLLTOOL, dlltool, false)\n  AC_CHECK_TOOL(OBJDUMP, objdump, false)\n  ;;\nesac\n\ntest -z \"$AS\" && AS=as\n_LT_DECL([], [AS],      [1], [Assembler program])dnl\n\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n_LT_DECL([], [DLLTOOL], [1], [DLL creation program])dnl\n\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n_LT_DECL([], [OBJDUMP], [1], [Object dumper program])dnl\n])# win32-dll\n\nAU_DEFUN([AC_LIBTOOL_WIN32_DLL],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n_LT_SET_OPTION([LT_INIT], [win32-dll])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you\nput the 'win32-dll' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_WIN32_DLL], [])\n\n\n# _LT_ENABLE_SHARED([DEFAULT])\n# ----------------------------\n# implement the --enable-shared flag, and supports the 'shared' and\n# 'disable-shared' LT_INIT options.\n# DEFAULT is either 'yes' or 'no'.  If omitted, it defaults to 'yes'.\nm4_define([_LT_ENABLE_SHARED],\n[m4_define([_LT_ENABLE_SHARED_DEFAULT], [m4_if($1, no, no, yes)])dnl\nAC_ARG_ENABLE([shared],\n    [AS_HELP_STRING([--enable-shared@<:@=PKGS@:>@],\n\t[build shared libraries @<:@default=]_LT_ENABLE_SHARED_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_shared=yes ;;\n    no) enable_shared=no ;;\n    *)\n      enable_shared=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_shared=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac],\n    [enable_shared=]_LT_ENABLE_SHARED_DEFAULT)\n\n    _LT_DECL([build_libtool_libs], [enable_shared], [0],\n\t[Whether or not to build shared libraries])\n])# _LT_ENABLE_SHARED\n\nLT_OPTION_DEFINE([LT_INIT], [shared], [_LT_ENABLE_SHARED([yes])])\nLT_OPTION_DEFINE([LT_INIT], [disable-shared], [_LT_ENABLE_SHARED([no])])\n\n# Old names:\nAC_DEFUN([AC_ENABLE_SHARED],\n[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[shared])\n])\n\nAC_DEFUN([AC_DISABLE_SHARED],\n[_LT_SET_OPTION([LT_INIT], [disable-shared])\n])\n\nAU_DEFUN([AM_ENABLE_SHARED], [AC_ENABLE_SHARED($@)])\nAU_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_ENABLE_SHARED], [])\ndnl AC_DEFUN([AM_DISABLE_SHARED], [])\n\n\n\n# _LT_ENABLE_STATIC([DEFAULT])\n# ----------------------------\n# implement the --enable-static flag, and support the 'static' and\n# 'disable-static' LT_INIT options.\n# DEFAULT is either 'yes' or 'no'.  If omitted, it defaults to 'yes'.\nm4_define([_LT_ENABLE_STATIC],\n[m4_define([_LT_ENABLE_STATIC_DEFAULT], [m4_if($1, no, no, yes)])dnl\nAC_ARG_ENABLE([static],\n    [AS_HELP_STRING([--enable-static@<:@=PKGS@:>@],\n\t[build static libraries @<:@default=]_LT_ENABLE_STATIC_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_static=yes ;;\n    no) enable_static=no ;;\n    *)\n     enable_static=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_static=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac],\n    [enable_static=]_LT_ENABLE_STATIC_DEFAULT)\n\n    _LT_DECL([build_old_libs], [enable_static], [0],\n\t[Whether or not to build static libraries])\n])# _LT_ENABLE_STATIC\n\nLT_OPTION_DEFINE([LT_INIT], [static], [_LT_ENABLE_STATIC([yes])])\nLT_OPTION_DEFINE([LT_INIT], [disable-static], [_LT_ENABLE_STATIC([no])])\n\n# Old names:\nAC_DEFUN([AC_ENABLE_STATIC],\n[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[static])\n])\n\nAC_DEFUN([AC_DISABLE_STATIC],\n[_LT_SET_OPTION([LT_INIT], [disable-static])\n])\n\nAU_DEFUN([AM_ENABLE_STATIC], [AC_ENABLE_STATIC($@)])\nAU_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_ENABLE_STATIC], [])\ndnl AC_DEFUN([AM_DISABLE_STATIC], [])\n\n\n\n# _LT_ENABLE_FAST_INSTALL([DEFAULT])\n# ----------------------------------\n# implement the --enable-fast-install flag, and support the 'fast-install'\n# and 'disable-fast-install' LT_INIT options.\n# DEFAULT is either 'yes' or 'no'.  If omitted, it defaults to 'yes'.\nm4_define([_LT_ENABLE_FAST_INSTALL],\n[m4_define([_LT_ENABLE_FAST_INSTALL_DEFAULT], [m4_if($1, no, no, yes)])dnl\nAC_ARG_ENABLE([fast-install],\n    [AS_HELP_STRING([--enable-fast-install@<:@=PKGS@:>@],\n    [optimize for fast installation @<:@default=]_LT_ENABLE_FAST_INSTALL_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_fast_install=yes ;;\n    no) enable_fast_install=no ;;\n    *)\n      enable_fast_install=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_fast_install=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac],\n    [enable_fast_install=]_LT_ENABLE_FAST_INSTALL_DEFAULT)\n\n_LT_DECL([fast_install], [enable_fast_install], [0],\n\t [Whether or not to optimize for fast installation])dnl\n])# _LT_ENABLE_FAST_INSTALL\n\nLT_OPTION_DEFINE([LT_INIT], [fast-install], [_LT_ENABLE_FAST_INSTALL([yes])])\nLT_OPTION_DEFINE([LT_INIT], [disable-fast-install], [_LT_ENABLE_FAST_INSTALL([no])])\n\n# Old names:\nAU_DEFUN([AC_ENABLE_FAST_INSTALL],\n[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you put\nthe 'fast-install' option into LT_INIT's first parameter.])\n])\n\nAU_DEFUN([AC_DISABLE_FAST_INSTALL],\n[_LT_SET_OPTION([LT_INIT], [disable-fast-install])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you put\nthe 'disable-fast-install' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_ENABLE_FAST_INSTALL], [])\ndnl AC_DEFUN([AM_DISABLE_FAST_INSTALL], [])\n\n\n# _LT_WITH_AIX_SONAME([DEFAULT])\n# ----------------------------------\n# implement the --with-aix-soname flag, and support the `aix-soname=aix'\n# and `aix-soname=both' and `aix-soname=svr4' LT_INIT options. DEFAULT\n# is either `aix', `both' or `svr4'.  If omitted, it defaults to `aix'.\nm4_define([_LT_WITH_AIX_SONAME],\n[m4_define([_LT_WITH_AIX_SONAME_DEFAULT], [m4_if($1, svr4, svr4, m4_if($1, both, both, aix))])dnl\nshared_archive_member_spec=\ncase $host,$enable_shared in\npower*-*-aix[[5-9]]*,yes)\n  AC_MSG_CHECKING([which variant of shared library versioning to provide])\n  AC_ARG_WITH([aix-soname],\n    [AS_HELP_STRING([--with-aix-soname=aix|svr4|both],\n      [shared library versioning (aka \"SONAME\") variant to provide on AIX, @<:@default=]_LT_WITH_AIX_SONAME_DEFAULT[@:>@.])],\n    [case $withval in\n    aix|svr4|both)\n      ;;\n    *)\n      AC_MSG_ERROR([Unknown argument to --with-aix-soname])\n      ;;\n    esac\n    lt_cv_with_aix_soname=$with_aix_soname],\n    [AC_CACHE_VAL([lt_cv_with_aix_soname],\n      [lt_cv_with_aix_soname=]_LT_WITH_AIX_SONAME_DEFAULT)\n    with_aix_soname=$lt_cv_with_aix_soname])\n  AC_MSG_RESULT([$with_aix_soname])\n  if test aix != \"$with_aix_soname\"; then\n    # For the AIX way of multilib, we name the shared archive member\n    # based on the bitwidth used, traditionally 'shr.o' or 'shr_64.o',\n    # and 'shr.imp' or 'shr_64.imp', respectively, for the Import File.\n    # Even when GNU compilers ignore OBJECT_MODE but need '-maix64' flag,\n    # the AIX toolchain works better with OBJECT_MODE set (default 32).\n    if test 64 = \"${OBJECT_MODE-32}\"; then\n      shared_archive_member_spec=shr_64\n    else\n      shared_archive_member_spec=shr\n    fi\n  fi\n  ;;\n*)\n  with_aix_soname=aix\n  ;;\nesac\n\n_LT_DECL([], [shared_archive_member_spec], [0],\n    [Shared archive member basename, for filename based shared library versioning on AIX])dnl\n])# _LT_WITH_AIX_SONAME\n\nLT_OPTION_DEFINE([LT_INIT], [aix-soname=aix], [_LT_WITH_AIX_SONAME([aix])])\nLT_OPTION_DEFINE([LT_INIT], [aix-soname=both], [_LT_WITH_AIX_SONAME([both])])\nLT_OPTION_DEFINE([LT_INIT], [aix-soname=svr4], [_LT_WITH_AIX_SONAME([svr4])])\n\n\n# _LT_WITH_PIC([MODE])\n# --------------------\n# implement the --with-pic flag, and support the 'pic-only' and 'no-pic'\n# LT_INIT options.\n# MODE is either 'yes' or 'no'.  If omitted, it defaults to 'both'.\nm4_define([_LT_WITH_PIC],\n[AC_ARG_WITH([pic],\n    [AS_HELP_STRING([--with-pic@<:@=PKGS@:>@],\n\t[try to use only PIC/non-PIC objects @<:@default=use both@:>@])],\n    [lt_p=${PACKAGE-default}\n    case $withval in\n    yes|no) pic_mode=$withval ;;\n    *)\n      pic_mode=default\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for lt_pkg in $withval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$lt_pkg\" = \"X$lt_p\"; then\n\t  pic_mode=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac],\n    [pic_mode=m4_default([$1], [default])])\n\n_LT_DECL([], [pic_mode], [0], [What type of objects to build])dnl\n])# _LT_WITH_PIC\n\nLT_OPTION_DEFINE([LT_INIT], [pic-only], [_LT_WITH_PIC([yes])])\nLT_OPTION_DEFINE([LT_INIT], [no-pic], [_LT_WITH_PIC([no])])\n\n# Old name:\nAU_DEFUN([AC_LIBTOOL_PICMODE],\n[_LT_SET_OPTION([LT_INIT], [pic-only])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you\nput the 'pic-only' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_PICMODE], [])\n\n\nm4_define([_LTDL_MODE], [])\nLT_OPTION_DEFINE([LTDL_INIT], [nonrecursive],\n\t\t [m4_define([_LTDL_MODE], [nonrecursive])])\nLT_OPTION_DEFINE([LTDL_INIT], [recursive],\n\t\t [m4_define([_LTDL_MODE], [recursive])])\nLT_OPTION_DEFINE([LTDL_INIT], [subproject],\n\t\t [m4_define([_LTDL_MODE], [subproject])])\n\nm4_define([_LTDL_TYPE], [])\nLT_OPTION_DEFINE([LTDL_INIT], [installable],\n\t\t [m4_define([_LTDL_TYPE], [installable])])\nLT_OPTION_DEFINE([LTDL_INIT], [convenience],\n\t\t [m4_define([_LTDL_TYPE], [convenience])])\n\n# ltsugar.m4 -- libtool m4 base layer.                         -*-Autoconf-*-\n#\n# Copyright (C) 2004-2005, 2007-2008, 2011-2015 Free Software\n# Foundation, Inc.\n# Written by Gary V. Vaughan, 2004\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\n# serial 6 ltsugar.m4\n\n# This is to help aclocal find these macros, as it can't see m4_define.\nAC_DEFUN([LTSUGAR_VERSION], [m4_if([0.1])])\n\n\n# lt_join(SEP, ARG1, [ARG2...])\n# -----------------------------\n# Produce ARG1SEPARG2...SEPARGn, omitting [] arguments and their\n# associated separator.\n# Needed until we can rely on m4_join from Autoconf 2.62, since all earlier\n# versions in m4sugar had bugs.\nm4_define([lt_join],\n[m4_if([$#], [1], [],\n       [$#], [2], [[$2]],\n       [m4_if([$2], [], [], [[$2]_])$0([$1], m4_shift(m4_shift($@)))])])\nm4_define([_lt_join],\n[m4_if([$#$2], [2], [],\n       [m4_if([$2], [], [], [[$1$2]])$0([$1], m4_shift(m4_shift($@)))])])\n\n\n# lt_car(LIST)\n# lt_cdr(LIST)\n# ------------\n# Manipulate m4 lists.\n# These macros are necessary as long as will still need to support\n# Autoconf-2.59, which quotes differently.\nm4_define([lt_car], [[$1]])\nm4_define([lt_cdr],\n[m4_if([$#], 0, [m4_fatal([$0: cannot be called without arguments])],\n       [$#], 1, [],\n       [m4_dquote(m4_shift($@))])])\nm4_define([lt_unquote], $1)\n\n\n# lt_append(MACRO-NAME, STRING, [SEPARATOR])\n# ------------------------------------------\n# Redefine MACRO-NAME to hold its former content plus 'SEPARATOR''STRING'.\n# Note that neither SEPARATOR nor STRING are expanded; they are appended\n# to MACRO-NAME as is (leaving the expansion for when MACRO-NAME is invoked).\n# No SEPARATOR is output if MACRO-NAME was previously undefined (different\n# than defined and empty).\n#\n# This macro is needed until we can rely on Autoconf 2.62, since earlier\n# versions of m4sugar mistakenly expanded SEPARATOR but not STRING.\nm4_define([lt_append],\n[m4_define([$1],\n\t   m4_ifdef([$1], [m4_defn([$1])[$3]])[$2])])\n\n\n\n# lt_combine(SEP, PREFIX-LIST, INFIX, SUFFIX1, [SUFFIX2...])\n# ----------------------------------------------------------\n# Produce a SEP delimited list of all paired combinations of elements of\n# PREFIX-LIST with SUFFIX1 through SUFFIXn.  Each element of the list\n# has the form PREFIXmINFIXSUFFIXn.\n# Needed until we can rely on m4_combine added in Autoconf 2.62.\nm4_define([lt_combine],\n[m4_if(m4_eval([$# > 3]), [1],\n       [m4_pushdef([_Lt_sep], [m4_define([_Lt_sep], m4_defn([lt_car]))])]]dnl\n[[m4_foreach([_Lt_prefix], [$2],\n\t     [m4_foreach([_Lt_suffix],\n\t\t]m4_dquote(m4_dquote(m4_shift(m4_shift(m4_shift($@)))))[,\n\t[_Lt_sep([$1])[]m4_defn([_Lt_prefix])[$3]m4_defn([_Lt_suffix])])])])])\n\n\n# lt_if_append_uniq(MACRO-NAME, VARNAME, [SEPARATOR], [UNIQ], [NOT-UNIQ])\n# -----------------------------------------------------------------------\n# Iff MACRO-NAME does not yet contain VARNAME, then append it (delimited\n# by SEPARATOR if supplied) and expand UNIQ, else NOT-UNIQ.\nm4_define([lt_if_append_uniq],\n[m4_ifdef([$1],\n\t  [m4_if(m4_index([$3]m4_defn([$1])[$3], [$3$2$3]), [-1],\n\t\t [lt_append([$1], [$2], [$3])$4],\n\t\t [$5])],\n\t  [lt_append([$1], [$2], [$3])$4])])\n\n\n# lt_dict_add(DICT, KEY, VALUE)\n# -----------------------------\nm4_define([lt_dict_add],\n[m4_define([$1($2)], [$3])])\n\n\n# lt_dict_add_subkey(DICT, KEY, SUBKEY, VALUE)\n# --------------------------------------------\nm4_define([lt_dict_add_subkey],\n[m4_define([$1($2:$3)], [$4])])\n\n\n# lt_dict_fetch(DICT, KEY, [SUBKEY])\n# ----------------------------------\nm4_define([lt_dict_fetch],\n[m4_ifval([$3],\n\tm4_ifdef([$1($2:$3)], [m4_defn([$1($2:$3)])]),\n    m4_ifdef([$1($2)], [m4_defn([$1($2)])]))])\n\n\n# lt_if_dict_fetch(DICT, KEY, [SUBKEY], VALUE, IF-TRUE, [IF-FALSE])\n# -----------------------------------------------------------------\nm4_define([lt_if_dict_fetch],\n[m4_if(lt_dict_fetch([$1], [$2], [$3]), [$4],\n\t[$5],\n    [$6])])\n\n\n# lt_dict_filter(DICT, [SUBKEY], VALUE, [SEPARATOR], KEY, [...])\n# --------------------------------------------------------------\nm4_define([lt_dict_filter],\n[m4_if([$5], [], [],\n  [lt_join(m4_quote(m4_default([$4], [[, ]])),\n           lt_unquote(m4_split(m4_normalize(m4_foreach(_Lt_key, lt_car([m4_shiftn(4, $@)]),\n\t\t      [lt_if_dict_fetch([$1], _Lt_key, [$2], [$3], [_Lt_key ])])))))])[]dnl\n])\n\n# ltversion.m4 -- version numbers\t\t\t-*- Autoconf -*-\n#\n#   Copyright (C) 2004, 2011-2015 Free Software Foundation, Inc.\n#   Written by Scott James Remnant, 2004\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\n# @configure_input@\n\n# serial 4179 ltversion.m4\n# This file is part of GNU Libtool\n\nm4_define([LT_PACKAGE_VERSION], [2.4.6])\nm4_define([LT_PACKAGE_REVISION], [2.4.6])\n\nAC_DEFUN([LTVERSION_VERSION],\n[macro_version='2.4.6'\nmacro_revision='2.4.6'\n_LT_DECL(, macro_version, 0, [Which release of libtool.m4 was used?])\n_LT_DECL(, macro_revision, 0)\n])\n\n# lt~obsolete.m4 -- aclocal satisfying obsolete definitions.    -*-Autoconf-*-\n#\n#   Copyright (C) 2004-2005, 2007, 2009, 2011-2015 Free Software\n#   Foundation, Inc.\n#   Written by Scott James Remnant, 2004.\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\n# serial 5 lt~obsolete.m4\n\n# These exist entirely to fool aclocal when bootstrapping libtool.\n#\n# In the past libtool.m4 has provided macros via AC_DEFUN (or AU_DEFUN),\n# which have later been changed to m4_define as they aren't part of the\n# exported API, or moved to Autoconf or Automake where they belong.\n#\n# The trouble is, aclocal is a bit thick.  It'll see the old AC_DEFUN\n# in /usr/share/aclocal/libtool.m4 and remember it, then when it sees us\n# using a macro with the same name in our local m4/libtool.m4 it'll\n# pull the old libtool.m4 in (it doesn't see our shiny new m4_define\n# and doesn't know about Autoconf macros at all.)\n#\n# So we provide this file, which has a silly filename so it's always\n# included after everything else.  This provides aclocal with the\n# AC_DEFUNs it wants, but when m4 processes it, it doesn't do anything\n# because those macros already exist, or will be overwritten later.\n# We use AC_DEFUN over AU_DEFUN for compatibility with aclocal-1.6.\n#\n# Anytime we withdraw an AC_DEFUN or AU_DEFUN, remember to add it here.\n# Yes, that means every name once taken will need to remain here until\n# we give up compatibility with versions before 1.7, at which point\n# we need to keep only those names which we still refer to.\n\n# This is to help aclocal find these macros, as it can't see m4_define.\nAC_DEFUN([LTOBSOLETE_VERSION], [m4_if([1])])\n\nm4_ifndef([AC_LIBTOOL_LINKER_OPTION],\t[AC_DEFUN([AC_LIBTOOL_LINKER_OPTION])])\nm4_ifndef([AC_PROG_EGREP],\t\t[AC_DEFUN([AC_PROG_EGREP])])\nm4_ifndef([_LT_AC_PROG_ECHO_BACKSLASH],\t[AC_DEFUN([_LT_AC_PROG_ECHO_BACKSLASH])])\nm4_ifndef([_LT_AC_SHELL_INIT],\t\t[AC_DEFUN([_LT_AC_SHELL_INIT])])\nm4_ifndef([_LT_AC_SYS_LIBPATH_AIX],\t[AC_DEFUN([_LT_AC_SYS_LIBPATH_AIX])])\nm4_ifndef([_LT_PROG_LTMAIN],\t\t[AC_DEFUN([_LT_PROG_LTMAIN])])\nm4_ifndef([_LT_AC_TAGVAR],\t\t[AC_DEFUN([_LT_AC_TAGVAR])])\nm4_ifndef([AC_LTDL_ENABLE_INSTALL],\t[AC_DEFUN([AC_LTDL_ENABLE_INSTALL])])\nm4_ifndef([AC_LTDL_PREOPEN],\t\t[AC_DEFUN([AC_LTDL_PREOPEN])])\nm4_ifndef([_LT_AC_SYS_COMPILER],\t[AC_DEFUN([_LT_AC_SYS_COMPILER])])\nm4_ifndef([_LT_AC_LOCK],\t\t[AC_DEFUN([_LT_AC_LOCK])])\nm4_ifndef([AC_LIBTOOL_SYS_OLD_ARCHIVE],\t[AC_DEFUN([AC_LIBTOOL_SYS_OLD_ARCHIVE])])\nm4_ifndef([_LT_AC_TRY_DLOPEN_SELF],\t[AC_DEFUN([_LT_AC_TRY_DLOPEN_SELF])])\nm4_ifndef([AC_LIBTOOL_PROG_CC_C_O],\t[AC_DEFUN([AC_LIBTOOL_PROG_CC_C_O])])\nm4_ifndef([AC_LIBTOOL_SYS_HARD_LINK_LOCKS], [AC_DEFUN([AC_LIBTOOL_SYS_HARD_LINK_LOCKS])])\nm4_ifndef([AC_LIBTOOL_OBJDIR],\t\t[AC_DEFUN([AC_LIBTOOL_OBJDIR])])\nm4_ifndef([AC_LTDL_OBJDIR],\t\t[AC_DEFUN([AC_LTDL_OBJDIR])])\nm4_ifndef([AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH], [AC_DEFUN([AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH])])\nm4_ifndef([AC_LIBTOOL_SYS_LIB_STRIP],\t[AC_DEFUN([AC_LIBTOOL_SYS_LIB_STRIP])])\nm4_ifndef([AC_PATH_MAGIC],\t\t[AC_DEFUN([AC_PATH_MAGIC])])\nm4_ifndef([AC_PROG_LD_GNU],\t\t[AC_DEFUN([AC_PROG_LD_GNU])])\nm4_ifndef([AC_PROG_LD_RELOAD_FLAG],\t[AC_DEFUN([AC_PROG_LD_RELOAD_FLAG])])\nm4_ifndef([AC_DEPLIBS_CHECK_METHOD],\t[AC_DEFUN([AC_DEPLIBS_CHECK_METHOD])])\nm4_ifndef([AC_LIBTOOL_PROG_COMPILER_NO_RTTI], [AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_NO_RTTI])])\nm4_ifndef([AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE], [AC_DEFUN([AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE])])\nm4_ifndef([AC_LIBTOOL_PROG_COMPILER_PIC], [AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_PIC])])\nm4_ifndef([AC_LIBTOOL_PROG_LD_SHLIBS],\t[AC_DEFUN([AC_LIBTOOL_PROG_LD_SHLIBS])])\nm4_ifndef([AC_LIBTOOL_POSTDEP_PREDEP],\t[AC_DEFUN([AC_LIBTOOL_POSTDEP_PREDEP])])\nm4_ifndef([LT_AC_PROG_EGREP],\t\t[AC_DEFUN([LT_AC_PROG_EGREP])])\nm4_ifndef([LT_AC_PROG_SED],\t\t[AC_DEFUN([LT_AC_PROG_SED])])\nm4_ifndef([_LT_CC_BASENAME],\t\t[AC_DEFUN([_LT_CC_BASENAME])])\nm4_ifndef([_LT_COMPILER_BOILERPLATE],\t[AC_DEFUN([_LT_COMPILER_BOILERPLATE])])\nm4_ifndef([_LT_LINKER_BOILERPLATE],\t[AC_DEFUN([_LT_LINKER_BOILERPLATE])])\nm4_ifndef([_AC_PROG_LIBTOOL],\t\t[AC_DEFUN([_AC_PROG_LIBTOOL])])\nm4_ifndef([AC_LIBTOOL_SETUP],\t\t[AC_DEFUN([AC_LIBTOOL_SETUP])])\nm4_ifndef([_LT_AC_CHECK_DLFCN],\t\t[AC_DEFUN([_LT_AC_CHECK_DLFCN])])\nm4_ifndef([AC_LIBTOOL_SYS_DYNAMIC_LINKER],\t[AC_DEFUN([AC_LIBTOOL_SYS_DYNAMIC_LINKER])])\nm4_ifndef([_LT_AC_TAGCONFIG],\t\t[AC_DEFUN([_LT_AC_TAGCONFIG])])\nm4_ifndef([AC_DISABLE_FAST_INSTALL],\t[AC_DEFUN([AC_DISABLE_FAST_INSTALL])])\nm4_ifndef([_LT_AC_LANG_CXX],\t\t[AC_DEFUN([_LT_AC_LANG_CXX])])\nm4_ifndef([_LT_AC_LANG_F77],\t\t[AC_DEFUN([_LT_AC_LANG_F77])])\nm4_ifndef([_LT_AC_LANG_GCJ],\t\t[AC_DEFUN([_LT_AC_LANG_GCJ])])\nm4_ifndef([AC_LIBTOOL_LANG_C_CONFIG],\t[AC_DEFUN([AC_LIBTOOL_LANG_C_CONFIG])])\nm4_ifndef([_LT_AC_LANG_C_CONFIG],\t[AC_DEFUN([_LT_AC_LANG_C_CONFIG])])\nm4_ifndef([AC_LIBTOOL_LANG_CXX_CONFIG],\t[AC_DEFUN([AC_LIBTOOL_LANG_CXX_CONFIG])])\nm4_ifndef([_LT_AC_LANG_CXX_CONFIG],\t[AC_DEFUN([_LT_AC_LANG_CXX_CONFIG])])\nm4_ifndef([AC_LIBTOOL_LANG_F77_CONFIG],\t[AC_DEFUN([AC_LIBTOOL_LANG_F77_CONFIG])])\nm4_ifndef([_LT_AC_LANG_F77_CONFIG],\t[AC_DEFUN([_LT_AC_LANG_F77_CONFIG])])\nm4_ifndef([AC_LIBTOOL_LANG_GCJ_CONFIG],\t[AC_DEFUN([AC_LIBTOOL_LANG_GCJ_CONFIG])])\nm4_ifndef([_LT_AC_LANG_GCJ_CONFIG],\t[AC_DEFUN([_LT_AC_LANG_GCJ_CONFIG])])\nm4_ifndef([AC_LIBTOOL_LANG_RC_CONFIG],\t[AC_DEFUN([AC_LIBTOOL_LANG_RC_CONFIG])])\nm4_ifndef([_LT_AC_LANG_RC_CONFIG],\t[AC_DEFUN([_LT_AC_LANG_RC_CONFIG])])\nm4_ifndef([AC_LIBTOOL_CONFIG],\t\t[AC_DEFUN([AC_LIBTOOL_CONFIG])])\nm4_ifndef([_LT_AC_FILE_LTDLL_C],\t[AC_DEFUN([_LT_AC_FILE_LTDLL_C])])\nm4_ifndef([_LT_REQUIRED_DARWIN_CHECKS],\t[AC_DEFUN([_LT_REQUIRED_DARWIN_CHECKS])])\nm4_ifndef([_LT_AC_PROG_CXXCPP],\t\t[AC_DEFUN([_LT_AC_PROG_CXXCPP])])\nm4_ifndef([_LT_PREPARE_SED_QUOTE_VARS],\t[AC_DEFUN([_LT_PREPARE_SED_QUOTE_VARS])])\nm4_ifndef([_LT_PROG_ECHO_BACKSLASH],\t[AC_DEFUN([_LT_PROG_ECHO_BACKSLASH])])\nm4_ifndef([_LT_PROG_F77],\t\t[AC_DEFUN([_LT_PROG_F77])])\nm4_ifndef([_LT_PROG_FC],\t\t[AC_DEFUN([_LT_PROG_FC])])\nm4_ifndef([_LT_PROG_CXX],\t\t[AC_DEFUN([_LT_PROG_CXX])])\n\ndnl pkg.m4 - Macros to locate and utilise pkg-config.   -*- Autoconf -*-\ndnl serial 11 (pkg-config-0.29.1)\ndnl\ndnl Copyright \u00a9 2004 Scott James Remnant <scott@netsplit.com>.\ndnl Copyright \u00a9 2012-2015 Dan Nicholson <dbn.lists@gmail.com>\ndnl\ndnl This program is free software; you can redistribute it and/or modify\ndnl it under the terms of the GNU General Public License as published by\ndnl the Free Software Foundation; either version 2 of the License, or\ndnl (at your option) any later version.\ndnl\ndnl This program is distributed in the hope that it will be useful, but\ndnl WITHOUT ANY WARRANTY; without even the implied warranty of\ndnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\ndnl General Public License for more details.\ndnl\ndnl You should have received a copy of the GNU General Public License\ndnl along with this program; if not, write to the Free Software\ndnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\ndnl 02111-1307, USA.\ndnl\ndnl As a special exception to the GNU General Public License, if you\ndnl distribute this file as part of a program that contains a\ndnl configuration script generated by Autoconf, you may include it under\ndnl the same distribution terms that you use for the rest of that\ndnl program.\n\ndnl PKG_PREREQ(MIN-VERSION)\ndnl -----------------------\ndnl Since: 0.29\ndnl\ndnl Verify that the version of the pkg-config macros are at least\ndnl MIN-VERSION. Unlike PKG_PROG_PKG_CONFIG, which checks the user's\ndnl installed version of pkg-config, this checks the developer's version\ndnl of pkg.m4 when generating configure.\ndnl\ndnl To ensure that this macro is defined, also add:\ndnl m4_ifndef([PKG_PREREQ],\ndnl     [m4_fatal([must install pkg-config 0.29 or later before running autoconf/autogen])])\ndnl\ndnl See the \"Since\" comment for each macro you use to see what version\ndnl of the macros you require.\nm4_defun([PKG_PREREQ],\n[m4_define([PKG_MACROS_VERSION], [0.29.1])\nm4_if(m4_version_compare(PKG_MACROS_VERSION, [$1]), -1,\n    [m4_fatal([pkg.m4 version $1 or higher is required but ]PKG_MACROS_VERSION[ found])])\n])dnl PKG_PREREQ\n\ndnl PKG_PROG_PKG_CONFIG([MIN-VERSION])\ndnl ----------------------------------\ndnl Since: 0.16\ndnl\ndnl Search for the pkg-config tool and set the PKG_CONFIG variable to\ndnl first found in the path. Checks that the version of pkg-config found\ndnl is at least MIN-VERSION. If MIN-VERSION is not specified, 0.9.0 is\ndnl used since that's the first version where most current features of\ndnl pkg-config existed.\nAC_DEFUN([PKG_PROG_PKG_CONFIG],\n[m4_pattern_forbid([^_?PKG_[A-Z_]+$])\nm4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])\nm4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])\nAC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])\nAC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])\nAC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])\n\nif test \"x$ac_cv_env_PKG_CONFIG_set\" != \"xset\"; then\n\tAC_PATH_TOOL([PKG_CONFIG], [pkg-config])\nfi\nif test -n \"$PKG_CONFIG\"; then\n\t_pkg_min_version=m4_default([$1], [0.9.0])\n\tAC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])\n\tif $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then\n\t\tAC_MSG_RESULT([yes])\n\telse\n\t\tAC_MSG_RESULT([no])\n\t\tPKG_CONFIG=\"\"\n\tfi\nfi[]dnl\n])dnl PKG_PROG_PKG_CONFIG\n\ndnl PKG_CHECK_EXISTS(MODULES, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\ndnl -------------------------------------------------------------------\ndnl Since: 0.18\ndnl\ndnl Check to see whether a particular set of modules exists. Similar to\ndnl PKG_CHECK_MODULES(), but does not set variables or print errors.\ndnl\ndnl Please remember that m4 expands AC_REQUIRE([PKG_PROG_PKG_CONFIG])\ndnl only at the first occurence in configure.ac, so if the first place\ndnl it's called might be skipped (such as if it is within an \"if\", you\ndnl have to call PKG_CHECK_EXISTS manually\nAC_DEFUN([PKG_CHECK_EXISTS],\n[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\nif test -n \"$PKG_CONFIG\" && \\\n    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors \"$1\"]); then\n  m4_default([$2], [:])\nm4_ifvaln([$3], [else\n  $3])dnl\nfi])\n\ndnl _PKG_CONFIG([VARIABLE], [COMMAND], [MODULES])\ndnl ---------------------------------------------\ndnl Internal wrapper calling pkg-config via PKG_CONFIG and setting\ndnl pkg_failed based on the result.\nm4_define([_PKG_CONFIG],\n[if test -n \"$$1\"; then\n    pkg_cv_[]$1=\"$$1\"\n elif test -n \"$PKG_CONFIG\"; then\n    PKG_CHECK_EXISTS([$3],\n                     [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 \"$3\" 2>/dev/null`\n\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes ],\n\t\t     [pkg_failed=yes])\n else\n    pkg_failed=untried\nfi[]dnl\n])dnl _PKG_CONFIG\n\ndnl _PKG_SHORT_ERRORS_SUPPORTED\ndnl ---------------------------\ndnl Internal check to see if pkg-config supports short errors.\nAC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED],\n[AC_REQUIRE([PKG_PROG_PKG_CONFIG])\nif $PKG_CONFIG --atleast-pkgconfig-version 0.20; then\n        _pkg_short_errors_supported=yes\nelse\n        _pkg_short_errors_supported=no\nfi[]dnl\n])dnl _PKG_SHORT_ERRORS_SUPPORTED\n\n\ndnl PKG_CHECK_MODULES(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],\ndnl   [ACTION-IF-NOT-FOUND])\ndnl --------------------------------------------------------------\ndnl Since: 0.4.0\ndnl\ndnl Note that if there is a possibility the first call to\ndnl PKG_CHECK_MODULES might not happen, you should be sure to include an\ndnl explicit call to PKG_PROG_PKG_CONFIG in your configure.ac\nAC_DEFUN([PKG_CHECK_MODULES],\n[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\nAC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl\nAC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl\n\npkg_failed=no\nAC_MSG_CHECKING([for $1])\n\n_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])\n_PKG_CONFIG([$1][_LIBS], [libs], [$2])\n\nm4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS\nand $1[]_LIBS to avoid the need to call pkg-config.\nSee the pkg-config man page for more details.])\n\nif test $pkg_failed = yes; then\n   \tAC_MSG_RESULT([no])\n        _PKG_SHORT_ERRORS_SUPPORTED\n        if test $_pkg_short_errors_supported = yes; then\n\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs \"$2\" 2>&1`\n        else \n\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs \"$2\" 2>&1`\n        fi\n\t# Put the nasty error message in config.log where it belongs\n\techo \"$$1[]_PKG_ERRORS\" >&AS_MESSAGE_LOG_FD\n\n\tm4_default([$4], [AC_MSG_ERROR(\n[Package requirements ($2) were not met:\n\n$$1_PKG_ERRORS\n\nConsider adjusting the PKG_CONFIG_PATH environment variable if you\ninstalled software in a non-standard prefix.\n\n_PKG_TEXT])[]dnl\n        ])\nelif test $pkg_failed = untried; then\n     \tAC_MSG_RESULT([no])\n\tm4_default([$4], [AC_MSG_FAILURE(\n[The pkg-config script could not be found or is too old.  Make sure it\nis in your PATH or set the PKG_CONFIG environment variable to the full\npath to pkg-config.\n\n_PKG_TEXT\n\nTo get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl\n        ])\nelse\n\t$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS\n\t$1[]_LIBS=$pkg_cv_[]$1[]_LIBS\n        AC_MSG_RESULT([yes])\n\t$3\nfi[]dnl\n])dnl PKG_CHECK_MODULES\n\n\ndnl PKG_CHECK_MODULES_STATIC(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],\ndnl   [ACTION-IF-NOT-FOUND])\ndnl ---------------------------------------------------------------------\ndnl Since: 0.29\ndnl\ndnl Checks for existence of MODULES and gathers its build flags with\ndnl static libraries enabled. Sets VARIABLE-PREFIX_CFLAGS from --cflags\ndnl and VARIABLE-PREFIX_LIBS from --libs.\ndnl\ndnl Note that if there is a possibility the first call to\ndnl PKG_CHECK_MODULES_STATIC might not happen, you should be sure to\ndnl include an explicit call to PKG_PROG_PKG_CONFIG in your\ndnl configure.ac.\nAC_DEFUN([PKG_CHECK_MODULES_STATIC],\n[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n_save_PKG_CONFIG=$PKG_CONFIG\nPKG_CONFIG=\"$PKG_CONFIG --static\"\nPKG_CHECK_MODULES($@)\nPKG_CONFIG=$_save_PKG_CONFIG[]dnl\n])dnl PKG_CHECK_MODULES_STATIC\n\n\ndnl PKG_INSTALLDIR([DIRECTORY])\ndnl -------------------------\ndnl Since: 0.27\ndnl\ndnl Substitutes the variable pkgconfigdir as the location where a module\ndnl should install pkg-config .pc files. By default the directory is\ndnl $libdir/pkgconfig, but the default can be changed by passing\ndnl DIRECTORY. The user can override through the --with-pkgconfigdir\ndnl parameter.\nAC_DEFUN([PKG_INSTALLDIR],\n[m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])\nm4_pushdef([pkg_description],\n    [pkg-config installation directory @<:@]pkg_default[@:>@])\nAC_ARG_WITH([pkgconfigdir],\n    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,\n    [with_pkgconfigdir=]pkg_default)\nAC_SUBST([pkgconfigdir], [$with_pkgconfigdir])\nm4_popdef([pkg_default])\nm4_popdef([pkg_description])\n])dnl PKG_INSTALLDIR\n\n\ndnl PKG_NOARCH_INSTALLDIR([DIRECTORY])\ndnl --------------------------------\ndnl Since: 0.27\ndnl\ndnl Substitutes the variable noarch_pkgconfigdir as the location where a\ndnl module should install arch-independent pkg-config .pc files. By\ndnl default the directory is $datadir/pkgconfig, but the default can be\ndnl changed by passing DIRECTORY. The user can override through the\ndnl --with-noarch-pkgconfigdir parameter.\nAC_DEFUN([PKG_NOARCH_INSTALLDIR],\n[m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])\nm4_pushdef([pkg_description],\n    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])\nAC_ARG_WITH([noarch-pkgconfigdir],\n    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,\n    [with_noarch_pkgconfigdir=]pkg_default)\nAC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])\nm4_popdef([pkg_default])\nm4_popdef([pkg_description])\n])dnl PKG_NOARCH_INSTALLDIR\n\n\ndnl PKG_CHECK_VAR(VARIABLE, MODULE, CONFIG-VARIABLE,\ndnl [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\ndnl -------------------------------------------\ndnl Since: 0.28\ndnl\ndnl Retrieves the value of the pkg-config variable for the given module.\nAC_DEFUN([PKG_CHECK_VAR],\n[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\nAC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl\n\n_PKG_CONFIG([$1], [variable=\"][$3][\"], [$2])\nAS_VAR_COPY([$1], [pkg_cv_][$1])\n\nAS_VAR_IF([$1], [\"\"], [$5], [$4])dnl\n])dnl PKG_CHECK_VAR\n\n# Configure paths for GLIB\n# Owen Taylor     1997-2001\n\ndnl AM_PATH_GLIB_2_0([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND [, MODULES]]]])\ndnl Test for GLIB, and define GLIB_CFLAGS and GLIB_LIBS, if gmodule, gobject,\ndnl gthread, or gio is specified in MODULES, pass to pkg-config\ndnl\nAC_DEFUN([AM_PATH_GLIB_2_0],\n[dnl \ndnl Get the cflags and libraries from pkg-config\ndnl\nAC_ARG_ENABLE(glibtest, [  --disable-glibtest      do not try to compile and run a test GLIB program],\n\t\t    , enable_glibtest=yes)\n\n  pkg_config_args=glib-2.0\n  for module in . $4\n  do\n      case \"$module\" in\n         gmodule) \n             pkg_config_args=\"$pkg_config_args gmodule-2.0\"\n         ;;\n         gmodule-no-export) \n             pkg_config_args=\"$pkg_config_args gmodule-no-export-2.0\"\n         ;;\n         gobject) \n             pkg_config_args=\"$pkg_config_args gobject-2.0\"\n         ;;\n         gthread) \n             pkg_config_args=\"$pkg_config_args gthread-2.0\"\n         ;;\n         gio*) \n             pkg_config_args=\"$pkg_config_args $module-2.0\"\n         ;;\n      esac\n  done\n\n  PKG_PROG_PKG_CONFIG([0.16])\n\n  no_glib=\"\"\n\n  if test \"x$PKG_CONFIG\" = x ; then\n    no_glib=yes\n    PKG_CONFIG=no\n  fi\n\n  min_glib_version=ifelse([$1], ,2.0.0,$1)\n  AC_MSG_CHECKING(for GLIB - version >= $min_glib_version)\n\n  if test x$PKG_CONFIG != xno ; then\n    ## don't try to run the test against uninstalled libtool libs\n    if $PKG_CONFIG --uninstalled $pkg_config_args; then\n\t  echo \"Will use uninstalled version of GLib found in PKG_CONFIG_PATH\"\n\t  enable_glibtest=no\n    fi\n\n    if $PKG_CONFIG --atleast-version $min_glib_version $pkg_config_args; then\n\t  :\n    else\n\t  no_glib=yes\n    fi\n  fi\n\n  if test x\"$no_glib\" = x ; then\n    GLIB_GENMARSHAL=`$PKG_CONFIG --variable=glib_genmarshal glib-2.0`\n    GOBJECT_QUERY=`$PKG_CONFIG --variable=gobject_query glib-2.0`\n    GLIB_MKENUMS=`$PKG_CONFIG --variable=glib_mkenums glib-2.0`\n    GLIB_COMPILE_RESOURCES=`$PKG_CONFIG --variable=glib_compile_resources gio-2.0`\n\n    GLIB_CFLAGS=`$PKG_CONFIG --cflags $pkg_config_args`\n    GLIB_LIBS=`$PKG_CONFIG --libs $pkg_config_args`\n    glib_config_major_version=`$PKG_CONFIG --modversion glib-2.0 | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\1/'`\n    glib_config_minor_version=`$PKG_CONFIG --modversion glib-2.0 | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n    glib_config_micro_version=`$PKG_CONFIG --modversion glib-2.0 | \\\n           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\3/'`\n    if test \"x$enable_glibtest\" = \"xyes\" ; then\n      ac_save_CFLAGS=\"$CFLAGS\"\n      ac_save_LIBS=\"$LIBS\"\n      CFLAGS=\"$CFLAGS $GLIB_CFLAGS\"\n      LIBS=\"$GLIB_LIBS $LIBS\"\ndnl\ndnl Now check if the installed GLIB is sufficiently new. (Also sanity\ndnl checks the results of pkg-config to some extent)\ndnl\n      rm -f conf.glibtest\n      AC_TRY_RUN([\n#include <glib.h>\n#include <stdio.h>\n#include <stdlib.h>\n\nint \nmain ()\n{\n  unsigned int major, minor, micro;\n\n  fclose (fopen (\"conf.glibtest\", \"w\"));\n\n  if (sscanf(\"$min_glib_version\", \"%u.%u.%u\", &major, &minor, &micro) != 3) {\n     printf(\"%s, bad version string\\n\", \"$min_glib_version\");\n     exit(1);\n   }\n\n  if ((glib_major_version != $glib_config_major_version) ||\n      (glib_minor_version != $glib_config_minor_version) ||\n      (glib_micro_version != $glib_config_micro_version))\n    {\n      printf(\"\\n*** 'pkg-config --modversion glib-2.0' returned %d.%d.%d, but GLIB (%d.%d.%d)\\n\", \n             $glib_config_major_version, $glib_config_minor_version, $glib_config_micro_version,\n             glib_major_version, glib_minor_version, glib_micro_version);\n      printf (\"*** was found! If pkg-config was correct, then it is best\\n\");\n      printf (\"*** to remove the old version of GLib. You may also be able to fix the error\\n\");\n      printf(\"*** by modifying your LD_LIBRARY_PATH enviroment variable, or by editing\\n\");\n      printf(\"*** /etc/ld.so.conf. Make sure you have run ldconfig if that is\\n\");\n      printf(\"*** required on your system.\\n\");\n      printf(\"*** If pkg-config was wrong, set the environment variable PKG_CONFIG_PATH\\n\");\n      printf(\"*** to point to the correct configuration files\\n\");\n    } \n  else if ((glib_major_version != GLIB_MAJOR_VERSION) ||\n\t   (glib_minor_version != GLIB_MINOR_VERSION) ||\n           (glib_micro_version != GLIB_MICRO_VERSION))\n    {\n      printf(\"*** GLIB header files (version %d.%d.%d) do not match\\n\",\n\t     GLIB_MAJOR_VERSION, GLIB_MINOR_VERSION, GLIB_MICRO_VERSION);\n      printf(\"*** library (version %d.%d.%d)\\n\",\n\t     glib_major_version, glib_minor_version, glib_micro_version);\n    }\n  else\n    {\n      if ((glib_major_version > major) ||\n        ((glib_major_version == major) && (glib_minor_version > minor)) ||\n        ((glib_major_version == major) && (glib_minor_version == minor) && (glib_micro_version >= micro)))\n      {\n        return 0;\n       }\n     else\n      {\n        printf(\"\\n*** An old version of GLIB (%u.%u.%u) was found.\\n\",\n               glib_major_version, glib_minor_version, glib_micro_version);\n        printf(\"*** You need a version of GLIB newer than %u.%u.%u. The latest version of\\n\",\n\t       major, minor, micro);\n        printf(\"*** GLIB is always available from ftp://ftp.gtk.org.\\n\");\n        printf(\"***\\n\");\n        printf(\"*** If you have already installed a sufficiently new version, this error\\n\");\n        printf(\"*** probably means that the wrong copy of the pkg-config shell script is\\n\");\n        printf(\"*** being found. The easiest way to fix this is to remove the old version\\n\");\n        printf(\"*** of GLIB, but you can also set the PKG_CONFIG environment to point to the\\n\");\n        printf(\"*** correct copy of pkg-config. (In this case, you will have to\\n\");\n        printf(\"*** modify your LD_LIBRARY_PATH enviroment variable, or edit /etc/ld.so.conf\\n\");\n        printf(\"*** so that the correct libraries are found at run-time))\\n\");\n      }\n    }\n  return 1;\n}\n],, no_glib=yes,[echo $ac_n \"cross compiling; assumed OK... $ac_c\"])\n       CFLAGS=\"$ac_save_CFLAGS\"\n       LIBS=\"$ac_save_LIBS\"\n     fi\n  fi\n  if test \"x$no_glib\" = x ; then\n     AC_MSG_RESULT(yes (version $glib_config_major_version.$glib_config_minor_version.$glib_config_micro_version))\n     ifelse([$2], , :, [$2])     \n  else\n     AC_MSG_RESULT(no)\n     if test \"$PKG_CONFIG\" = \"no\" ; then\n       echo \"*** A new enough version of pkg-config was not found.\"\n       echo \"*** See http://www.freedesktop.org/software/pkgconfig/\"\n     else\n       if test -f conf.glibtest ; then\n        :\n       else\n          echo \"*** Could not run GLIB test program, checking why...\"\n          ac_save_CFLAGS=\"$CFLAGS\"\n          ac_save_LIBS=\"$LIBS\"\n          CFLAGS=\"$CFLAGS $GLIB_CFLAGS\"\n          LIBS=\"$LIBS $GLIB_LIBS\"\n          AC_TRY_LINK([\n#include <glib.h>\n#include <stdio.h>\n],      [ return ((glib_major_version) || (glib_minor_version) || (glib_micro_version)); ],\n        [ echo \"*** The test program compiled, but did not run. This usually means\"\n          echo \"*** that the run-time linker is not finding GLIB or finding the wrong\"\n          echo \"*** version of GLIB. If it is not finding GLIB, you'll need to set your\"\n          echo \"*** LD_LIBRARY_PATH environment variable, or edit /etc/ld.so.conf to point\"\n          echo \"*** to the installed location  Also, make sure you have run ldconfig if that\"\n          echo \"*** is required on your system\"\n\t  echo \"***\"\n          echo \"*** If you have an old version installed, it is best to remove it, although\"\n          echo \"*** you may also be able to get things to work by modifying LD_LIBRARY_PATH\" ],\n        [ echo \"*** The test program failed to compile or link. See the file config.log for the\"\n          echo \"*** exact error that occured. This usually means GLIB is incorrectly installed.\"])\n          CFLAGS=\"$ac_save_CFLAGS\"\n          LIBS=\"$ac_save_LIBS\"\n       fi\n     fi\n     GLIB_CFLAGS=\"\"\n     GLIB_LIBS=\"\"\n     GLIB_GENMARSHAL=\"\"\n     GOBJECT_QUERY=\"\"\n     GLIB_MKENUMS=\"\"\n     GLIB_COMPILE_RESOURCES=\"\"\n     ifelse([$3], , :, [$3])\n  fi\n  AC_SUBST(GLIB_CFLAGS)\n  AC_SUBST(GLIB_LIBS)\n  AC_SUBST(GLIB_GENMARSHAL)\n  AC_SUBST(GOBJECT_QUERY)\n  AC_SUBST(GLIB_MKENUMS)\n  AC_SUBST(GLIB_COMPILE_RESOURCES)\n  rm -f conf.glibtest\n])\n\n# Copyright (C) 1995-2002 Free Software Foundation, Inc.\n# Copyright (C) 2001-2003,2004 Red Hat, Inc.\n#\n# This file is free software, distributed under the terms of the GNU\n# General Public License.  As a special exception to the GNU General\n# Public License, this file may be distributed as part of a program\n# that contains a configuration script generated by Autoconf, under\n# the same distribution terms as the rest of that program.\n#\n# This file can be copied and used freely without restrictions.  It can\n# be used in projects which are not available under the GNU Public License\n# but which still want to provide support for the GNU gettext functionality.\n#\n# Macro to add for using GNU gettext.\n# Ulrich Drepper <drepper@cygnus.com>, 1995, 1996\n#\n# Modified to never use included libintl. \n# Owen Taylor <otaylor@redhat.com>, 12/15/1998\n#\n# Major rework to remove unused code\n# Owen Taylor <otaylor@redhat.com>, 12/11/2002\n#\n# Added better handling of ALL_LINGUAS from GNU gettext version \n# written by Bruno Haible, Owen Taylor <otaylor.redhat.com> 5/30/3002\n#\n# Modified to require ngettext\n# Matthias Clasen <mclasen@redhat.com> 08/06/2004\n#\n# We need this here as well, since someone might use autoconf-2.5x\n# to configure GLib then an older version to configure a package\n# using AM_GLIB_GNU_GETTEXT\nAC_PREREQ(2.53)\n\ndnl\ndnl We go to great lengths to make sure that aclocal won't \ndnl try to pull in the installed version of these macros\ndnl when running aclocal in the glib directory.\ndnl\nm4_copy([AC_DEFUN],[glib_DEFUN])\nm4_copy([AC_REQUIRE],[glib_REQUIRE])\ndnl\ndnl At the end, if we're not within glib, we'll define the public\ndnl definitions in terms of our private definitions.\ndnl\n\n# GLIB_LC_MESSAGES\n#--------------------\nglib_DEFUN([GLIB_LC_MESSAGES],\n  [AC_CHECK_HEADERS([locale.h])\n    if test $ac_cv_header_locale_h = yes; then\n    AC_CACHE_CHECK([for LC_MESSAGES], am_cv_val_LC_MESSAGES,\n      [AC_TRY_LINK([#include <locale.h>], [return LC_MESSAGES],\n       am_cv_val_LC_MESSAGES=yes, am_cv_val_LC_MESSAGES=no)])\n    if test $am_cv_val_LC_MESSAGES = yes; then\n      AC_DEFINE(HAVE_LC_MESSAGES, 1,\n        [Define if your <locale.h> file defines LC_MESSAGES.])\n    fi\n  fi])\n\n# GLIB_PATH_PROG_WITH_TEST\n#----------------------------\ndnl GLIB_PATH_PROG_WITH_TEST(VARIABLE, PROG-TO-CHECK-FOR,\ndnl   TEST-PERFORMED-ON-FOUND_PROGRAM [, VALUE-IF-NOT-FOUND [, PATH]])\nglib_DEFUN([GLIB_PATH_PROG_WITH_TEST],\n[# Extract the first word of \"$2\", so it can be a program name with args.\nset dummy $2; ac_word=[$]2\nAC_MSG_CHECKING([for $ac_word])\nAC_CACHE_VAL(ac_cv_path_$1,\n[case \"[$]$1\" in\n  /*)\n  ac_cv_path_$1=\"[$]$1\" # Let the user override the test with a path.\n  ;;\n  *)\n  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:\"\n  for ac_dir in ifelse([$5], , $PATH, [$5]); do\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f $ac_dir/$ac_word; then\n      if [$3]; then\n\tac_cv_path_$1=\"$ac_dir/$ac_word\"\n\tbreak\n      fi\n    fi\n  done\n  IFS=\"$ac_save_ifs\"\ndnl If no 4th arg is given, leave the cache variable unset,\ndnl so AC_PATH_PROGS will keep looking.\nifelse([$4], , , [  test -z \"[$]ac_cv_path_$1\" && ac_cv_path_$1=\"$4\"\n])dnl\n  ;;\nesac])dnl\n$1=\"$ac_cv_path_$1\"\nif test ifelse([$4], , [-n \"[$]$1\"], [\"[$]$1\" != \"$4\"]); then\n  AC_MSG_RESULT([$]$1)\nelse\n  AC_MSG_RESULT(no)\nfi\nAC_SUBST($1)dnl\n])\n\n# GLIB_WITH_NLS\n#-----------------\nglib_DEFUN([GLIB_WITH_NLS],\n  dnl NLS is obligatory\n  [USE_NLS=yes\n    AC_SUBST(USE_NLS)\n\n    gt_cv_have_gettext=no\n\n    CATOBJEXT=NONE\n    XGETTEXT=:\n    INTLLIBS=\n\n    AC_CHECK_HEADER(libintl.h,\n     [gt_cv_func_dgettext_libintl=\"no\"\n      libintl_extra_libs=\"\"\n\n      #\n      # First check in libc\n      #\n      AC_CACHE_CHECK([for ngettext in libc], gt_cv_func_ngettext_libc,\n        [AC_TRY_LINK([\n#include <libintl.h>\n],\n         [return !ngettext (\"\",\"\", 1)],\n\t  gt_cv_func_ngettext_libc=yes,\n          gt_cv_func_ngettext_libc=no)\n        ])\n  \n      if test \"$gt_cv_func_ngettext_libc\" = \"yes\" ; then\n\t      AC_CACHE_CHECK([for dgettext in libc], gt_cv_func_dgettext_libc,\n        \t[AC_TRY_LINK([\n#include <libintl.h>\n],\n\t          [return !dgettext (\"\",\"\")],\n\t\t  gt_cv_func_dgettext_libc=yes,\n\t          gt_cv_func_dgettext_libc=no)\n        \t])\n      fi\n  \n      if test \"$gt_cv_func_ngettext_libc\" = \"yes\" ; then\n        AC_CHECK_FUNCS(bind_textdomain_codeset)\n      fi\n\n      #\n      # If we don't have everything we want, check in libintl\n      #\n      if test \"$gt_cv_func_dgettext_libc\" != \"yes\" \\\n\t || test \"$gt_cv_func_ngettext_libc\" != \"yes\" \\\n         || test \"$ac_cv_func_bind_textdomain_codeset\" != \"yes\" ; then\n        \n        AC_CHECK_LIB(intl, bindtextdomain,\n\t    [AC_CHECK_LIB(intl, ngettext,\n\t\t    [AC_CHECK_LIB(intl, dgettext,\n\t\t\t          gt_cv_func_dgettext_libintl=yes)])])\n\n\tif test \"$gt_cv_func_dgettext_libintl\" != \"yes\" ; then\n\t  AC_MSG_CHECKING([if -liconv is needed to use gettext])\n\t  AC_MSG_RESULT([])\n  \t  AC_CHECK_LIB(intl, ngettext,\n          \t[AC_CHECK_LIB(intl, dcgettext,\n\t\t       [gt_cv_func_dgettext_libintl=yes\n\t\t\tlibintl_extra_libs=-liconv],\n\t\t\t:,-liconv)],\n\t\t:,-liconv)\n        fi\n\n        #\n        # If we found libintl, then check in it for bind_textdomain_codeset();\n        # we'll prefer libc if neither have bind_textdomain_codeset(),\n        # and both have dgettext and ngettext\n        #\n        if test \"$gt_cv_func_dgettext_libintl\" = \"yes\" ; then\n          glib_save_LIBS=\"$LIBS\"\n          LIBS=\"$LIBS -lintl $libintl_extra_libs\"\n          unset ac_cv_func_bind_textdomain_codeset\n          AC_CHECK_FUNCS(bind_textdomain_codeset)\n          LIBS=\"$glib_save_LIBS\"\n\n          if test \"$ac_cv_func_bind_textdomain_codeset\" = \"yes\" ; then\n            gt_cv_func_dgettext_libc=no\n          else\n            if test \"$gt_cv_func_dgettext_libc\" = \"yes\" \\\n\t\t&& test \"$gt_cv_func_ngettext_libc\" = \"yes\"; then\n              gt_cv_func_dgettext_libintl=no\n            fi\n          fi\n        fi\n      fi\n\n      if test \"$gt_cv_func_dgettext_libc\" = \"yes\" \\\n\t|| test \"$gt_cv_func_dgettext_libintl\" = \"yes\"; then\n        gt_cv_have_gettext=yes\n      fi\n  \n      if test \"$gt_cv_func_dgettext_libintl\" = \"yes\"; then\n        INTLLIBS=\"-lintl $libintl_extra_libs\"\n      fi\n  \n      if test \"$gt_cv_have_gettext\" = \"yes\"; then\n\tAC_DEFINE(HAVE_GETTEXT,1,\n\t  [Define if the GNU gettext() function is already present or preinstalled.])\n\tGLIB_PATH_PROG_WITH_TEST(MSGFMT, msgfmt,\n\t  [test -z \"`$ac_dir/$ac_word -h 2>&1 | grep 'dv '`\"], no)dnl\n\tif test \"$MSGFMT\" != \"no\"; then\n          glib_save_LIBS=\"$LIBS\"\n          LIBS=\"$LIBS $INTLLIBS\"\n\t  AC_CHECK_FUNCS(dcgettext)\n\t  MSGFMT_OPTS=\n\t  AC_MSG_CHECKING([if msgfmt accepts -c])\n\t  GLIB_RUN_PROG([$MSGFMT -c -o /dev/null],[\nmsgid \"\"\nmsgstr \"\"\n\"Content-Type: text/plain; charset=UTF-8\\n\"\n\"Project-Id-Version: test 1.0\\n\"\n\"PO-Revision-Date: 2007-02-15 12:01+0100\\n\"\n\"Last-Translator: test <foo@bar.xx>\\n\"\n\"Language-Team: C <LL@li.org>\\n\"\n\"MIME-Version: 1.0\\n\"\n\"Content-Transfer-Encoding: 8bit\\n\"\n], [MSGFMT_OPTS=-c; AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no])])\n\t  AC_SUBST(MSGFMT_OPTS)\n\t  AC_PATH_PROG(GMSGFMT, gmsgfmt, $MSGFMT)\n\t  GLIB_PATH_PROG_WITH_TEST(XGETTEXT, xgettext,\n\t    [test -z \"`$ac_dir/$ac_word -h 2>&1 | grep '(HELP)'`\"], :)\n\t  AC_TRY_LINK(, [extern int _nl_msg_cat_cntr;\n\t\t\t return _nl_msg_cat_cntr],\n\t    [CATOBJEXT=.gmo \n             DATADIRNAME=share],\n\t    [case $host in\n\t    *-*-solaris*)\n\t    dnl On Solaris, if bind_textdomain_codeset is in libc,\n\t    dnl GNU format message catalog is always supported,\n            dnl since both are added to the libc all together.\n\t    dnl Hence, we'd like to go with DATADIRNAME=share and\n\t    dnl and CATOBJEXT=.gmo in this case.\n            AC_CHECK_FUNC(bind_textdomain_codeset,\n\t      [CATOBJEXT=.gmo \n               DATADIRNAME=share],\n\t      [CATOBJEXT=.mo\n               DATADIRNAME=lib])\n\t    ;;\n\t    *-*-openbsd*)\n\t    CATOBJEXT=.mo\n            DATADIRNAME=share\n\t    ;;\n\t    *)\n\t    CATOBJEXT=.mo\n            DATADIRNAME=lib\n\t    ;;\n\t    esac])\n          LIBS=\"$glib_save_LIBS\"\n\t  INSTOBJEXT=.mo\n\telse\n\t  gt_cv_have_gettext=no\n\tfi\n      fi\n    ])\n\n    if test \"$gt_cv_have_gettext\" = \"yes\" ; then\n      AC_DEFINE(ENABLE_NLS, 1,\n        [always defined to indicate that i18n is enabled])\n    fi\n\n    dnl Test whether we really found GNU xgettext.\n    if test \"$XGETTEXT\" != \":\"; then\n      dnl If it is not GNU xgettext we define it as : so that the\n      dnl Makefiles still can work.\n      if $XGETTEXT --omit-header /dev/null 2> /dev/null; then\n        : ;\n      else\n        AC_MSG_RESULT(\n\t  [found xgettext program is not GNU xgettext; ignore it])\n        XGETTEXT=\":\"\n      fi\n    fi\n\n    # We need to process the po/ directory.\n    POSUB=po\n\n    AC_OUTPUT_COMMANDS(\n      [case \"$CONFIG_FILES\" in *po/Makefile.in*)\n        sed -e \"/POTFILES =/r po/POTFILES\" po/Makefile.in > po/Makefile\n      esac])\n\n    dnl These rules are solely for the distribution goal.  While doing this\n    dnl we only have to keep exactly one list of the available catalogs\n    dnl in configure.ac.\n    for lang in $ALL_LINGUAS; do\n      GMOFILES=\"$GMOFILES $lang.gmo\"\n      POFILES=\"$POFILES $lang.po\"\n    done\n\n    dnl Make all variables we use known to autoconf.\n    AC_SUBST(CATALOGS)\n    AC_SUBST(CATOBJEXT)\n    AC_SUBST(DATADIRNAME)\n    AC_SUBST(GMOFILES)\n    AC_SUBST(INSTOBJEXT)\n    AC_SUBST(INTLLIBS)\n    AC_SUBST(PO_IN_DATADIR_TRUE)\n    AC_SUBST(PO_IN_DATADIR_FALSE)\n    AC_SUBST(POFILES)\n    AC_SUBST(POSUB)\n  ])\n\n# AM_GLIB_GNU_GETTEXT\n# -------------------\n# Do checks necessary for use of gettext. If a suitable implementation \n# of gettext is found in either in libintl or in the C library,\n# it will set INTLLIBS to the libraries needed for use of gettext\n# and AC_DEFINE() HAVE_GETTEXT and ENABLE_NLS. (The shell variable\n# gt_cv_have_gettext will be set to \"yes\".) It will also call AC_SUBST()\n# on various variables needed by the Makefile.in.in installed by \n# glib-gettextize.\ndnl\nAU_DEFUN([GLIB_GNU_GETTEXT],\n  [AC_REQUIRE([AC_PROG_CC])dnl\n   \n   GLIB_LC_MESSAGES\n   GLIB_WITH_NLS\n\n   if test \"$gt_cv_have_gettext\" = \"yes\"; then\n     if test \"x$ALL_LINGUAS\" = \"x\"; then\n       LINGUAS=\n     else\n       AC_MSG_CHECKING(for catalogs to be installed)\n       NEW_LINGUAS=\n       for presentlang in $ALL_LINGUAS; do\n         useit=no\n         if test \"%UNSET%\" != \"${LINGUAS-%UNSET%}\"; then\n           desiredlanguages=\"$LINGUAS\"\n         else\n           desiredlanguages=\"$ALL_LINGUAS\"\n         fi\n         for desiredlang in $desiredlanguages; do\n \t   # Use the presentlang catalog if desiredlang is\n           #   a. equal to presentlang, or\n           #   b. a variant of presentlang (because in this case,\n           #      presentlang can be used as a fallback for messages\n           #      which are not translated in the desiredlang catalog).\n           case \"$desiredlang\" in\n             \"$presentlang\"*) useit=yes;;\n           esac\n         done\n         if test $useit = yes; then\n           NEW_LINGUAS=\"$NEW_LINGUAS $presentlang\"\n         fi\n       done\n       LINGUAS=$NEW_LINGUAS\n       AC_MSG_RESULT($LINGUAS)\n     fi\n\n     dnl Construct list of names of catalog files to be constructed.\n     if test -n \"$LINGUAS\"; then\n       for lang in $LINGUAS; do CATALOGS=\"$CATALOGS $lang$CATOBJEXT\"; done\n     fi\n   fi\n\n   dnl If the AC_CONFIG_AUX_DIR macro for autoconf is used we possibly\n   dnl find the mkinstalldirs script in another subdir but ($top_srcdir).\n   dnl Try to locate is.\n   MKINSTALLDIRS=\n   if test -n \"$ac_aux_dir\"; then\n     MKINSTALLDIRS=\"$ac_aux_dir/mkinstalldirs\"\n   fi\n   if test -z \"$MKINSTALLDIRS\"; then\n     MKINSTALLDIRS=\"\\$(top_srcdir)/mkinstalldirs\"\n   fi\n   AC_SUBST(MKINSTALLDIRS)\n\n   dnl Generate list of files to be processed by xgettext which will\n   dnl be included in po/Makefile.\n   test -d po || mkdir po\n   if test \"x$srcdir\" != \"x.\"; then\n     if test \"x`echo $srcdir | sed 's@/.*@@'`\" = \"x\"; then\n       posrcprefix=\"$srcdir/\"\n     else\n       posrcprefix=\"../$srcdir/\"\n     fi\n   else\n     posrcprefix=\"../\"\n   fi\n   rm -f po/POTFILES\n   sed -e \"/^#/d\" -e \"/^\\$/d\" -e \"s,.*,\t$posrcprefix& \\\\\\\\,\" -e \"\\$s/\\(.*\\) \\\\\\\\/\\1/\" \\\n\t< $srcdir/po/POTFILES.in > po/POTFILES\n  ],\n  [[$0: This macro is deprecated. You should use upstream gettext instead.]])\n\n# AM_GLIB_DEFINE_LOCALEDIR(VARIABLE)\n# -------------------------------\n# Define VARIABLE to the location where catalog files will\n# be installed by po/Makefile.\nglib_DEFUN([GLIB_DEFINE_LOCALEDIR],\n[glib_REQUIRE([GLIB_GNU_GETTEXT])dnl\nglib_save_prefix=\"$prefix\"\nglib_save_exec_prefix=\"$exec_prefix\"\nglib_save_datarootdir=\"$datarootdir\"\ntest \"x$prefix\" = xNONE && prefix=$ac_default_prefix\ntest \"x$exec_prefix\" = xNONE && exec_prefix=$prefix\ndatarootdir=`eval echo \"${datarootdir}\"`\nif test \"x$CATOBJEXT\" = \"x.mo\" ; then\n  localedir=`eval echo \"${libdir}/locale\"`\nelse\n  localedir=`eval echo \"${datadir}/locale\"`\nfi\nprefix=\"$glib_save_prefix\"\nexec_prefix=\"$glib_save_exec_prefix\"\ndatarootdir=\"$glib_save_datarootdir\"\nAC_DEFINE_UNQUOTED($1, \"$localedir\",\n  [Define the location where the catalogs will be installed])\n])\n\ndnl\ndnl Now the definitions that aclocal will find\ndnl\nifdef(glib_configure_ac,[],[\nAC_DEFUN([AM_GLIB_GNU_GETTEXT],[GLIB_GNU_GETTEXT($@)])\nAC_DEFUN([AM_GLIB_DEFINE_LOCALEDIR],[GLIB_DEFINE_LOCALEDIR($@)])\n])dnl\n\n# GLIB_RUN_PROG(PROGRAM, TEST-FILE, [ACTION-IF-PASS], [ACTION-IF-FAIL])\n# \n# Create a temporary file with TEST-FILE as its contents and pass the\n# file name to PROGRAM.  Perform ACTION-IF-PASS if PROGRAM exits with\n# 0 and perform ACTION-IF-FAIL for any other exit status.\nAC_DEFUN([GLIB_RUN_PROG],\n[cat >conftest.foo <<_ACEOF\n$2\n_ACEOF\nif AC_RUN_LOG([$1 conftest.foo]); then\n  m4_ifval([$3], [$3], [:])\nm4_ifvaln([$4], [else $4])dnl\necho \"$as_me: failed input was:\" >&AS_MESSAGE_LOG_FD\nsed 's/^/| /' conftest.foo >&AS_MESSAGE_LOG_FD\nfi])\n\n\ndnl -*- mode: autoconf -*-\n\n# serial 2\n\ndnl Usage:\ndnl   GTK_DOC_CHECK([minimum-gtk-doc-version])\nAC_DEFUN([GTK_DOC_CHECK],\n[\n  AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n  AC_BEFORE([AC_PROG_LIBTOOL],[$0])dnl setup libtool first\n  AC_BEFORE([AM_PROG_LIBTOOL],[$0])dnl setup libtool first\n\n  ifelse([$1],[],[gtk_doc_requires=\"gtk-doc\"],[gtk_doc_requires=\"gtk-doc >= $1\"])\n  AC_MSG_CHECKING([for gtk-doc])\n  PKG_CHECK_EXISTS([$gtk_doc_requires],[have_gtk_doc=yes],[have_gtk_doc=no])\n  AC_MSG_RESULT($have_gtk_doc)\n\n  if test \"$have_gtk_doc\" = \"no\"; then\n      AC_MSG_WARN([\n  You will not be able to create source packages with 'make dist'\n  because $gtk_doc_requires is not found.])\n  fi\n\n  dnl check for tools we added during development\n  dnl Use AC_CHECK_PROG to avoid the check target using an absolute path that\n  dnl may not be writable by the user. Currently, automake requires that the\n  dnl test name must end in '.test'.\n  dnl https://bugzilla.gnome.org/show_bug.cgi?id=701638\n  AC_CHECK_PROG([GTKDOC_CHECK],[gtkdoc-check],[gtkdoc-check.test])\n  AC_PATH_PROG([GTKDOC_CHECK_PATH],[gtkdoc-check])\n  AC_PATH_PROGS([GTKDOC_REBASE],[gtkdoc-rebase],[true])\n  AC_PATH_PROG([GTKDOC_MKPDF],[gtkdoc-mkpdf])\n\n  dnl for overriding the documentation installation directory\n  AC_ARG_WITH([html-dir],\n    AS_HELP_STRING([--with-html-dir=PATH], [path to installed docs]),,\n    [with_html_dir='${datadir}/gtk-doc/html'])\n  HTML_DIR=\"$with_html_dir\"\n  AC_SUBST([HTML_DIR])\n\n  dnl enable/disable documentation building\n  AC_ARG_ENABLE([gtk-doc],\n    AS_HELP_STRING([--enable-gtk-doc],\n                   [use gtk-doc to build documentation [[default=no]]]),,\n    [enable_gtk_doc=no])\n\n  AC_MSG_CHECKING([whether to build gtk-doc documentation])\n  AC_MSG_RESULT($enable_gtk_doc)\n\n  if test \"x$enable_gtk_doc\" = \"xyes\" && test \"$have_gtk_doc\" = \"no\"; then\n    AC_MSG_ERROR([\n  You must have $gtk_doc_requires installed to build documentation for\n  $PACKAGE_NAME. Please install gtk-doc or disable building the\n  documentation by adding '--disable-gtk-doc' to '[$]0'.])\n  fi\n\n  dnl don't check for glib if we build glib\n  if test \"x$PACKAGE_NAME\" != \"xglib\"; then\n    dnl don't fail if someone does not have glib\n    PKG_CHECK_MODULES(GTKDOC_DEPS, glib-2.0 >= 2.10.0 gobject-2.0  >= 2.10.0,,[:])\n  fi\n\n  dnl enable/disable output formats\n  AC_ARG_ENABLE([gtk-doc-html],\n    AS_HELP_STRING([--enable-gtk-doc-html],\n                   [build documentation in html format [[default=yes]]]),,\n    [enable_gtk_doc_html=yes])\n    AC_ARG_ENABLE([gtk-doc-pdf],\n      AS_HELP_STRING([--enable-gtk-doc-pdf],\n                     [build documentation in pdf format [[default=no]]]),,\n      [enable_gtk_doc_pdf=no])\n\n  if test -z \"$GTKDOC_MKPDF\"; then\n    enable_gtk_doc_pdf=no\n  fi\n\n  if test -z \"$AM_DEFAULT_VERBOSITY\"; then\n    AM_DEFAULT_VERBOSITY=1\n  fi\n  AC_SUBST([AM_DEFAULT_VERBOSITY])\n\n  AM_CONDITIONAL([HAVE_GTK_DOC], [test x$have_gtk_doc = xyes])\n  AM_CONDITIONAL([ENABLE_GTK_DOC], [test x$enable_gtk_doc = xyes])\n  AM_CONDITIONAL([GTK_DOC_BUILD_HTML], [test x$enable_gtk_doc_html = xyes])\n  AM_CONDITIONAL([GTK_DOC_BUILD_PDF], [test x$enable_gtk_doc_pdf = xyes])\n  AM_CONDITIONAL([GTK_DOC_USE_LIBTOOL], [test -n \"$LIBTOOL\"])\n  AM_CONDITIONAL([GTK_DOC_USE_REBASE], [test -n \"$GTKDOC_REBASE\"])\n])\n\n# Copyright (C) 2002-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_AUTOMAKE_VERSION(VERSION)\n# ----------------------------\n# Automake X.Y traces this macro to ensure aclocal.m4 has been\n# generated from the m4 files accompanying Automake X.Y.\n# (This private macro should not be called outside this file.)\nAC_DEFUN([AM_AUTOMAKE_VERSION],\n[am__api_version='1.15'\ndnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to\ndnl require some minimum version.  Point them to the right macro.\nm4_if([$1], [1.15], [],\n      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl\n])\n\n# _AM_AUTOCONF_VERSION(VERSION)\n# -----------------------------\n# aclocal traces this macro to find the Autoconf version.\n# This is a private macro too.  Using m4_define simplifies\n# the logic in aclocal, which can simply ignore this definition.\nm4_define([_AM_AUTOCONF_VERSION], [])\n\n# AM_SET_CURRENT_AUTOMAKE_VERSION\n# -------------------------------\n# Call AM_AUTOMAKE_VERSION and AM_AUTOMAKE_VERSION so they can be traced.\n# This function is AC_REQUIREd by AM_INIT_AUTOMAKE.\nAC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],\n[AM_AUTOMAKE_VERSION([1.15])dnl\nm4_ifndef([AC_AUTOCONF_VERSION],\n  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl\n_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])\n\n# Figure out how to run the assembler.                      -*- Autoconf -*-\n\n# Copyright (C) 2001-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_PROG_AS\n# ----------\nAC_DEFUN([AM_PROG_AS],\n[# By default we simply use the C compiler to build assembly code.\nAC_REQUIRE([AC_PROG_CC])\ntest \"${CCAS+set}\" = set || CCAS=$CC\ntest \"${CCASFLAGS+set}\" = set || CCASFLAGS=$CFLAGS\nAC_ARG_VAR([CCAS],      [assembler compiler command (defaults to CC)])\nAC_ARG_VAR([CCASFLAGS], [assembler compiler flags (defaults to CFLAGS)])\n_AM_IF_OPTION([no-dependencies],, [_AM_DEPENDENCIES([CCAS])])dnl\n])\n\n# AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-\n\n# Copyright (C) 2001-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# For projects using AC_CONFIG_AUX_DIR([foo]), Autoconf sets\n# $ac_aux_dir to '$srcdir/foo'.  In other projects, it is set to\n# '$srcdir', '$srcdir/..', or '$srcdir/../..'.\n#\n# Of course, Automake must honor this variable whenever it calls a\n# tool from the auxiliary directory.  The problem is that $srcdir (and\n# therefore $ac_aux_dir as well) can be either absolute or relative,\n# depending on how configure is run.  This is pretty annoying, since\n# it makes $ac_aux_dir quite unusable in subdirectories: in the top\n# source directory, any form will work fine, but in subdirectories a\n# relative path needs to be adjusted first.\n#\n# $ac_aux_dir/missing\n#    fails when called from a subdirectory if $ac_aux_dir is relative\n# $top_srcdir/$ac_aux_dir/missing\n#    fails if $ac_aux_dir is absolute,\n#    fails when called from a subdirectory in a VPATH build with\n#          a relative $ac_aux_dir\n#\n# The reason of the latter failure is that $top_srcdir and $ac_aux_dir\n# are both prefixed by $srcdir.  In an in-source build this is usually\n# harmless because $srcdir is '.', but things will broke when you\n# start a VPATH build or use an absolute $srcdir.\n#\n# So we could use something similar to $top_srcdir/$ac_aux_dir/missing,\n# iff we strip the leading $srcdir from $ac_aux_dir.  That would be:\n#   am_aux_dir='\\$(top_srcdir)/'`expr \"$ac_aux_dir\" : \"$srcdir//*\\(.*\\)\"`\n# and then we would define $MISSING as\n#   MISSING=\"\\${SHELL} $am_aux_dir/missing\"\n# This will work as long as MISSING is not called from configure, because\n# unfortunately $(top_srcdir) has no meaning in configure.\n# However there are other variables, like CC, which are often used in\n# configure, and could therefore not use this \"fixed\" $ac_aux_dir.\n#\n# Another solution, used here, is to always expand $ac_aux_dir to an\n# absolute PATH.  The drawback is that using absolute paths prevent a\n# configured tree to be moved without reconfiguration.\n\nAC_DEFUN([AM_AUX_DIR_EXPAND],\n[AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl\n# Expand $ac_aux_dir to an absolute path.\nam_aux_dir=`cd \"$ac_aux_dir\" && pwd`\n])\n\n# AM_CONDITIONAL                                            -*- Autoconf -*-\n\n# Copyright (C) 1997-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_CONDITIONAL(NAME, SHELL-CONDITION)\n# -------------------------------------\n# Define a conditional.\nAC_DEFUN([AM_CONDITIONAL],\n[AC_PREREQ([2.52])dnl\n m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],\n       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl\nAC_SUBST([$1_TRUE])dnl\nAC_SUBST([$1_FALSE])dnl\n_AM_SUBST_NOTMAKE([$1_TRUE])dnl\n_AM_SUBST_NOTMAKE([$1_FALSE])dnl\nm4_define([_AM_COND_VALUE_$1], [$2])dnl\nif $2; then\n  $1_TRUE=\n  $1_FALSE='#'\nelse\n  $1_TRUE='#'\n  $1_FALSE=\nfi\nAC_CONFIG_COMMANDS_PRE(\n[if test -z \"${$1_TRUE}\" && test -z \"${$1_FALSE}\"; then\n  AC_MSG_ERROR([[conditional \"$1\" was never defined.\nUsually this means the macro was only invoked conditionally.]])\nfi])])\n\n# Copyright (C) 1999-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n\n# There are a few dirty hacks below to avoid letting 'AC_PROG_CC' be\n# written in clear, in which case automake, when reading aclocal.m4,\n# will think it sees a *use*, and therefore will trigger all it's\n# C support machinery.  Also note that it means that autoscan, seeing\n# CC etc. in the Makefile, will ask for an AC_PROG_CC use...\n\n\n# _AM_DEPENDENCIES(NAME)\n# ----------------------\n# See how the compiler implements dependency checking.\n# NAME is \"CC\", \"CXX\", \"OBJC\", \"OBJCXX\", \"UPC\", or \"GJC\".\n# We try a few techniques and use that to set a single cache variable.\n#\n# We don't AC_REQUIRE the corresponding AC_PROG_CC since the latter was\n# modified to invoke _AM_DEPENDENCIES(CC); we would have a circular\n# dependency, and given that the user is not expected to run this macro,\n# just rely on AC_PROG_CC.\nAC_DEFUN([_AM_DEPENDENCIES],\n[AC_REQUIRE([AM_SET_DEPDIR])dnl\nAC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl\nAC_REQUIRE([AM_MAKE_INCLUDE])dnl\nAC_REQUIRE([AM_DEP_TRACK])dnl\n\nm4_if([$1], [CC],   [depcc=\"$CC\"   am_compiler_list=],\n      [$1], [CXX],  [depcc=\"$CXX\"  am_compiler_list=],\n      [$1], [OBJC], [depcc=\"$OBJC\" am_compiler_list='gcc3 gcc'],\n      [$1], [OBJCXX], [depcc=\"$OBJCXX\" am_compiler_list='gcc3 gcc'],\n      [$1], [UPC],  [depcc=\"$UPC\"  am_compiler_list=],\n      [$1], [GCJ],  [depcc=\"$GCJ\"  am_compiler_list='gcc3 gcc'],\n                    [depcc=\"$$1\"   am_compiler_list=])\n\nAC_CACHE_CHECK([dependency style of $depcc],\n               [am_cv_$1_dependencies_compiler_type],\n[if test -z \"$AMDEP_TRUE\" && test -f \"$am_depcomp\"; then\n  # We make a subdir and do the tests there.  Otherwise we can end up\n  # making bogus files that we don't know about and never remove.  For\n  # instance it was reported that on HP-UX the gcc test will end up\n  # making a dummy file named 'D' -- because '-MD' means \"put the output\n  # in D\".\n  rm -rf conftest.dir\n  mkdir conftest.dir\n  # Copy depcomp to subdir because otherwise we won't find it if we're\n  # using a relative directory.\n  cp \"$am_depcomp\" conftest.dir\n  cd conftest.dir\n  # We will build objects and dependencies in a subdirectory because\n  # it helps to detect inapplicable dependency modes.  For instance\n  # both Tru64's cc and ICC support -MD to output dependencies as a\n  # side effect of compilation, but ICC will put the dependencies in\n  # the current directory while Tru64 will put them in the object\n  # directory.\n  mkdir sub\n\n  am_cv_$1_dependencies_compiler_type=none\n  if test \"$am_compiler_list\" = \"\"; then\n     am_compiler_list=`sed -n ['s/^#*\\([a-zA-Z0-9]*\\))$/\\1/p'] < ./depcomp`\n  fi\n  am__universal=false\n  m4_case([$1], [CC],\n    [case \" $depcc \" in #(\n     *\\ -arch\\ *\\ -arch\\ *) am__universal=true ;;\n     esac],\n    [CXX],\n    [case \" $depcc \" in #(\n     *\\ -arch\\ *\\ -arch\\ *) am__universal=true ;;\n     esac])\n\n  for depmode in $am_compiler_list; do\n    # Setup a source with many dependencies, because some compilers\n    # like to wrap large dependency lists on column 80 (with \\), and\n    # we should not choose a depcomp mode which is confused by this.\n    #\n    # We need to recreate these files for each test, as the compiler may\n    # overwrite some of them when testing with obscure command lines.\n    # This happens at least with the AIX C compiler.\n    : > sub/conftest.c\n    for i in 1 2 3 4 5 6; do\n      echo '#include \"conftst'$i'.h\"' >> sub/conftest.c\n      # Using \": > sub/conftst$i.h\" creates only sub/conftst1.h with\n      # Solaris 10 /bin/sh.\n      echo '/* dummy */' > sub/conftst$i.h\n    done\n    echo \"${am__include} ${am__quote}sub/conftest.Po${am__quote}\" > confmf\n\n    # We check with '-c' and '-o' for the sake of the \"dashmstdout\"\n    # mode.  It turns out that the SunPro C++ compiler does not properly\n    # handle '-M -o', and we need to detect this.  Also, some Intel\n    # versions had trouble with output in subdirs.\n    am__obj=sub/conftest.${OBJEXT-o}\n    am__minus_obj=\"-o $am__obj\"\n    case $depmode in\n    gcc)\n      # This depmode causes a compiler race in universal mode.\n      test \"$am__universal\" = false || continue\n      ;;\n    nosideeffect)\n      # After this tag, mechanisms are not by side-effect, so they'll\n      # only be used when explicitly requested.\n      if test \"x$enable_dependency_tracking\" = xyes; then\n\tcontinue\n      else\n\tbreak\n      fi\n      ;;\n    msvc7 | msvc7msys | msvisualcpp | msvcmsys)\n      # This compiler won't grok '-c -o', but also, the minuso test has\n      # not run yet.  These depmodes are late enough in the game, and\n      # so weak that their functioning should not be impacted.\n      am__obj=conftest.${OBJEXT-o}\n      am__minus_obj=\n      ;;\n    none) break ;;\n    esac\n    if depmode=$depmode \\\n       source=sub/conftest.c object=$am__obj \\\n       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \\\n       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \\\n         >/dev/null 2>conftest.err &&\n       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&\n       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then\n      # icc doesn't choke on unknown options, it will just issue warnings\n      # or remarks (even with -Werror).  So we grep stderr for any message\n      # that says an option was ignored or not supported.\n      # When given -MP, icc 7.0 and 7.1 complain thusly:\n      #   icc: Command line warning: ignoring option '-M'; no argument required\n      # The diagnosis changed in icc 8.0:\n      #   icc: Command line remark: option '-MP' not supported\n      if (grep 'ignoring option' conftest.err ||\n          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else\n        am_cv_$1_dependencies_compiler_type=$depmode\n        break\n      fi\n    fi\n  done\n\n  cd ..\n  rm -rf conftest.dir\nelse\n  am_cv_$1_dependencies_compiler_type=none\nfi\n])\nAC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])\nAM_CONDITIONAL([am__fastdep$1], [\n  test \"x$enable_dependency_tracking\" != xno \\\n  && test \"$am_cv_$1_dependencies_compiler_type\" = gcc3])\n])\n\n\n# AM_SET_DEPDIR\n# -------------\n# Choose a directory name for dependency files.\n# This macro is AC_REQUIREd in _AM_DEPENDENCIES.\nAC_DEFUN([AM_SET_DEPDIR],\n[AC_REQUIRE([AM_SET_LEADING_DOT])dnl\nAC_SUBST([DEPDIR], [\"${am__leading_dot}deps\"])dnl\n])\n\n\n# AM_DEP_TRACK\n# ------------\nAC_DEFUN([AM_DEP_TRACK],\n[AC_ARG_ENABLE([dependency-tracking], [dnl\nAS_HELP_STRING(\n  [--enable-dependency-tracking],\n  [do not reject slow dependency extractors])\nAS_HELP_STRING(\n  [--disable-dependency-tracking],\n  [speeds up one-time build])])\nif test \"x$enable_dependency_tracking\" != xno; then\n  am_depcomp=\"$ac_aux_dir/depcomp\"\n  AMDEPBACKSLASH='\\'\n  am__nodep='_no'\nfi\nAM_CONDITIONAL([AMDEP], [test \"x$enable_dependency_tracking\" != xno])\nAC_SUBST([AMDEPBACKSLASH])dnl\n_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl\nAC_SUBST([am__nodep])dnl\n_AM_SUBST_NOTMAKE([am__nodep])dnl\n])\n\n# Generate code to set up dependency tracking.              -*- Autoconf -*-\n\n# Copyright (C) 1999-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n\n# _AM_OUTPUT_DEPENDENCY_COMMANDS\n# ------------------------------\nAC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS],\n[{\n  # Older Autoconf quotes --file arguments for eval, but not when files\n  # are listed without --file.  Let's play safe and only enable the eval\n  # if we detect the quoting.\n  case $CONFIG_FILES in\n  *\\'*) eval set x \"$CONFIG_FILES\" ;;\n  *)   set x $CONFIG_FILES ;;\n  esac\n  shift\n  for mf\n  do\n    # Strip MF so we end up with the name of the file.\n    mf=`echo \"$mf\" | sed -e 's/:.*$//'`\n    # Check whether this is an Automake generated Makefile or not.\n    # We used to match only the files named 'Makefile.in', but\n    # some people rename them; so instead we look at the file content.\n    # Grep'ing the first line is not enough: some people post-process\n    # each Makefile.in and add a new line on top of each file to say so.\n    # Grep'ing the whole file is not good either: AIX grep has a line\n    # limit of 2048, but all sed's we know have understand at least 4000.\n    if sed -n 's,^#.*generated by automake.*,X,p' \"$mf\" | grep X >/dev/null 2>&1; then\n      dirpart=`AS_DIRNAME(\"$mf\")`\n    else\n      continue\n    fi\n    # Extract the definition of DEPDIR, am__include, and am__quote\n    # from the Makefile without running 'make'.\n    DEPDIR=`sed -n 's/^DEPDIR = //p' < \"$mf\"`\n    test -z \"$DEPDIR\" && continue\n    am__include=`sed -n 's/^am__include = //p' < \"$mf\"`\n    test -z \"$am__include\" && continue\n    am__quote=`sed -n 's/^am__quote = //p' < \"$mf\"`\n    # Find all dependency output files, they are included files with\n    # $(DEPDIR) in their names.  We invoke sed twice because it is the\n    # simplest approach to changing $(DEPDIR) to its actual value in the\n    # expansion.\n    for file in `sed -n \"\n      s/^$am__include $am__quote\\(.*(DEPDIR).*\\)$am__quote\"'$/\\1/p' <\"$mf\" | \\\n\t sed -e 's/\\$(DEPDIR)/'\"$DEPDIR\"'/g'`; do\n      # Make sure the directory exists.\n      test -f \"$dirpart/$file\" && continue\n      fdir=`AS_DIRNAME([\"$file\"])`\n      AS_MKDIR_P([$dirpart/$fdir])\n      # echo \"creating $dirpart/$file\"\n      echo '# dummy' > \"$dirpart/$file\"\n    done\n  done\n}\n])# _AM_OUTPUT_DEPENDENCY_COMMANDS\n\n\n# AM_OUTPUT_DEPENDENCY_COMMANDS\n# -----------------------------\n# This macro should only be invoked once -- use via AC_REQUIRE.\n#\n# This code is only required when automatic dependency tracking\n# is enabled.  FIXME.  This creates each '.P' file that we will\n# need in order to bootstrap the dependency handling code.\nAC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS],\n[AC_CONFIG_COMMANDS([depfiles],\n     [test x\"$AMDEP_TRUE\" != x\"\" || _AM_OUTPUT_DEPENDENCY_COMMANDS],\n     [AMDEP_TRUE=\"$AMDEP_TRUE\" ac_aux_dir=\"$ac_aux_dir\"])\n])\n\n# Do all the work for Automake.                             -*- Autoconf -*-\n\n# Copyright (C) 1996-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# This macro actually does too much.  Some checks are only needed if\n# your package does certain things.  But this isn't really a big deal.\n\ndnl Redefine AC_PROG_CC to automatically invoke _AM_PROG_CC_C_O.\nm4_define([AC_PROG_CC],\nm4_defn([AC_PROG_CC])\n[_AM_PROG_CC_C_O\n])\n\n# AM_INIT_AUTOMAKE(PACKAGE, VERSION, [NO-DEFINE])\n# AM_INIT_AUTOMAKE([OPTIONS])\n# -----------------------------------------------\n# The call with PACKAGE and VERSION arguments is the old style\n# call (pre autoconf-2.50), which is being phased out.  PACKAGE\n# and VERSION should now be passed to AC_INIT and removed from\n# the call to AM_INIT_AUTOMAKE.\n# We support both call styles for the transition.  After\n# the next Automake release, Autoconf can make the AC_INIT\n# arguments mandatory, and then we can depend on a new Autoconf\n# release and drop the old call support.\nAC_DEFUN([AM_INIT_AUTOMAKE],\n[AC_PREREQ([2.65])dnl\ndnl Autoconf wants to disallow AM_ names.  We explicitly allow\ndnl the ones we care about.\nm4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl\nAC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl\nAC_REQUIRE([AC_PROG_INSTALL])dnl\nif test \"`cd $srcdir && pwd`\" != \"`pwd`\"; then\n  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output\n  # is not polluted with repeated \"-I.\"\n  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl\n  # test to see if srcdir already configured\n  if test -f $srcdir/config.status; then\n    AC_MSG_ERROR([source directory already configured; run \"make distclean\" there first])\n  fi\nfi\n\n# test whether we have cygpath\nif test -z \"$CYGPATH_W\"; then\n  if (cygpath --version) >/dev/null 2>/dev/null; then\n    CYGPATH_W='cygpath -w'\n  else\n    CYGPATH_W=echo\n  fi\nfi\nAC_SUBST([CYGPATH_W])\n\n# Define the identity of the package.\ndnl Distinguish between old-style and new-style calls.\nm4_ifval([$2],\n[AC_DIAGNOSE([obsolete],\n             [$0: two- and three-arguments forms are deprecated.])\nm4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl\n AC_SUBST([PACKAGE], [$1])dnl\n AC_SUBST([VERSION], [$2])],\n[_AM_SET_OPTIONS([$1])dnl\ndnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.\nm4_if(\n  m4_ifdef([AC_PACKAGE_NAME], [ok]):m4_ifdef([AC_PACKAGE_VERSION], [ok]),\n  [ok:ok],,\n  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl\n AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl\n AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl\n\n_AM_IF_OPTION([no-define],,\n[AC_DEFINE_UNQUOTED([PACKAGE], [\"$PACKAGE\"], [Name of package])\n AC_DEFINE_UNQUOTED([VERSION], [\"$VERSION\"], [Version number of package])])dnl\n\n# Some tools Automake needs.\nAC_REQUIRE([AM_SANITY_CHECK])dnl\nAC_REQUIRE([AC_ARG_PROGRAM])dnl\nAM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])\nAM_MISSING_PROG([AUTOCONF], [autoconf])\nAM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])\nAM_MISSING_PROG([AUTOHEADER], [autoheader])\nAM_MISSING_PROG([MAKEINFO], [makeinfo])\nAC_REQUIRE([AM_PROG_INSTALL_SH])dnl\nAC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl\nAC_REQUIRE([AC_PROG_MKDIR_P])dnl\n# For better backward compatibility.  To be removed once Automake 1.9.x\n# dies out for good.  For more background, see:\n# <http://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>\n# <http://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>\nAC_SUBST([mkdir_p], ['$(MKDIR_P)'])\n# We need awk for the \"check\" target (and possibly the TAP driver).  The\n# system \"awk\" is bad on some platforms.\nAC_REQUIRE([AC_PROG_AWK])dnl\nAC_REQUIRE([AC_PROG_MAKE_SET])dnl\nAC_REQUIRE([AM_SET_LEADING_DOT])dnl\n_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],\n\t      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],\n\t\t\t     [_AM_PROG_TAR([v7])])])\n_AM_IF_OPTION([no-dependencies],,\n[AC_PROVIDE_IFELSE([AC_PROG_CC],\n\t\t  [_AM_DEPENDENCIES([CC])],\n\t\t  [m4_define([AC_PROG_CC],\n\t\t\t     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl\nAC_PROVIDE_IFELSE([AC_PROG_CXX],\n\t\t  [_AM_DEPENDENCIES([CXX])],\n\t\t  [m4_define([AC_PROG_CXX],\n\t\t\t     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl\nAC_PROVIDE_IFELSE([AC_PROG_OBJC],\n\t\t  [_AM_DEPENDENCIES([OBJC])],\n\t\t  [m4_define([AC_PROG_OBJC],\n\t\t\t     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl\nAC_PROVIDE_IFELSE([AC_PROG_OBJCXX],\n\t\t  [_AM_DEPENDENCIES([OBJCXX])],\n\t\t  [m4_define([AC_PROG_OBJCXX],\n\t\t\t     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl\n])\nAC_REQUIRE([AM_SILENT_RULES])dnl\ndnl The testsuite driver may need to know about EXEEXT, so add the\ndnl 'am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This\ndnl macro is hooked onto _AC_COMPILER_EXEEXT early, see below.\nAC_CONFIG_COMMANDS_PRE(dnl\n[m4_provide_if([_AM_COMPILER_EXEEXT],\n  [AM_CONDITIONAL([am__EXEEXT], [test -n \"$EXEEXT\"])])])dnl\n\n# POSIX will say in a future version that running \"rm -f\" with no argument\n# is OK; and we want to be able to make that assumption in our Makefile\n# recipes.  So use an aggressive probe to check that the usage we want is\n# actually supported \"in the wild\" to an acceptable degree.\n# See automake bug#10828.\n# To make any issue more visible, cause the running configure to be aborted\n# by default if the 'rm' program in use doesn't match our expectations; the\n# user can still override this though.\nif rm -f && rm -fr && rm -rf; then : OK; else\n  cat >&2 <<'END'\nOops!\n\nYour 'rm' program seems unable to run without file operands specified\non the command line, even when the '-f' option is present.  This is contrary\nto the behaviour of most rm programs out there, and not conforming with\nthe upcoming POSIX standard: <http://austingroupbugs.net/view.php?id=542>\n\nPlease tell bug-automake@gnu.org about your system, including the value\nof your $PATH and any error possibly output before this message.  This\ncan help us improve future automake versions.\n\nEND\n  if test x\"$ACCEPT_INFERIOR_RM_PROGRAM\" = x\"yes\"; then\n    echo 'Configuration will proceed anyway, since you have set the' >&2\n    echo 'ACCEPT_INFERIOR_RM_PROGRAM variable to \"yes\"' >&2\n    echo >&2\n  else\n    cat >&2 <<'END'\nAborting the configuration process, to ensure you take notice of the issue.\n\nYou can download and install GNU coreutils to get an 'rm' implementation\nthat behaves properly: <http://www.gnu.org/software/coreutils/>.\n\nIf you want to complete the configuration process using your problematic\n'rm' anyway, export the environment variable ACCEPT_INFERIOR_RM_PROGRAM\nto \"yes\", and re-run configure.\n\nEND\n    AC_MSG_ERROR([Your 'rm' program is bad, sorry.])\n  fi\nfi\ndnl The trailing newline in this macro's definition is deliberate, for\ndnl backward compatibility and to allow trailing 'dnl'-style comments\ndnl after the AM_INIT_AUTOMAKE invocation. See automake bug#16841.\n])\n\ndnl Hook into '_AC_COMPILER_EXEEXT' early to learn its expansion.  Do not\ndnl add the conditional right here, as _AC_COMPILER_EXEEXT may be further\ndnl mangled by Autoconf and run in a shell conditional statement.\nm4_define([_AC_COMPILER_EXEEXT],\nm4_defn([_AC_COMPILER_EXEEXT])[m4_provide([_AM_COMPILER_EXEEXT])])\n\n# When config.status generates a header, we must update the stamp-h file.\n# This file resides in the same directory as the config header\n# that is generated.  The stamp files are numbered to have different names.\n\n# Autoconf calls _AC_AM_CONFIG_HEADER_HOOK (when defined) in the\n# loop where config.status creates the headers, so we can generate\n# our stamp files there.\nAC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK],\n[# Compute $1's index in $config_headers.\n_am_arg=$1\n_am_stamp_count=1\nfor _am_header in $config_headers :; do\n  case $_am_header in\n    $_am_arg | $_am_arg:* )\n      break ;;\n    * )\n      _am_stamp_count=`expr $_am_stamp_count + 1` ;;\n  esac\ndone\necho \"timestamp for $_am_arg\" >`AS_DIRNAME([\"$_am_arg\"])`/stamp-h[]$_am_stamp_count])\n\n# Copyright (C) 2001-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_PROG_INSTALL_SH\n# ------------------\n# Define $install_sh.\nAC_DEFUN([AM_PROG_INSTALL_SH],\n[AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\nif test x\"${install_sh+set}\" != xset; then\n  case $am_aux_dir in\n  *\\ * | *\\\t*)\n    install_sh=\"\\${SHELL} '$am_aux_dir/install-sh'\" ;;\n  *)\n    install_sh=\"\\${SHELL} $am_aux_dir/install-sh\"\n  esac\nfi\nAC_SUBST([install_sh])])\n\n# Copyright (C) 2003-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# Check whether the underlying file-system supports filenames\n# with a leading dot.  For instance MS-DOS doesn't.\nAC_DEFUN([AM_SET_LEADING_DOT],\n[rm -rf .tst 2>/dev/null\nmkdir .tst 2>/dev/null\nif test -d .tst; then\n  am__leading_dot=.\nelse\n  am__leading_dot=_\nfi\nrmdir .tst 2>/dev/null\nAC_SUBST([am__leading_dot])])\n\n# Add --enable-maintainer-mode option to configure.         -*- Autoconf -*-\n# From Jim Meyering\n\n# Copyright (C) 1996-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_MAINTAINER_MODE([DEFAULT-MODE])\n# ----------------------------------\n# Control maintainer-specific portions of Makefiles.\n# Default is to disable them, unless 'enable' is passed literally.\n# For symmetry, 'disable' may be passed as well.  Anyway, the user\n# can override the default with the --enable/--disable switch.\nAC_DEFUN([AM_MAINTAINER_MODE],\n[m4_case(m4_default([$1], [disable]),\n       [enable], [m4_define([am_maintainer_other], [disable])],\n       [disable], [m4_define([am_maintainer_other], [enable])],\n       [m4_define([am_maintainer_other], [enable])\n        m4_warn([syntax], [unexpected argument to AM@&t@_MAINTAINER_MODE: $1])])\nAC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])\n  dnl maintainer-mode's default is 'disable' unless 'enable' is passed\n  AC_ARG_ENABLE([maintainer-mode],\n    [AS_HELP_STRING([--]am_maintainer_other[-maintainer-mode],\n      am_maintainer_other[ make rules and dependencies not useful\n      (and sometimes confusing) to the casual installer])],\n    [USE_MAINTAINER_MODE=$enableval],\n    [USE_MAINTAINER_MODE=]m4_if(am_maintainer_other, [enable], [no], [yes]))\n  AC_MSG_RESULT([$USE_MAINTAINER_MODE])\n  AM_CONDITIONAL([MAINTAINER_MODE], [test $USE_MAINTAINER_MODE = yes])\n  MAINT=$MAINTAINER_MODE_TRUE\n  AC_SUBST([MAINT])dnl\n]\n)\n\n# Check to see how 'make' treats includes.\t            -*- Autoconf -*-\n\n# Copyright (C) 2001-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_MAKE_INCLUDE()\n# -----------------\n# Check to see how make treats includes.\nAC_DEFUN([AM_MAKE_INCLUDE],\n[am_make=${MAKE-make}\ncat > confinc << 'END'\nam__doit:\n\t@echo this is the am__doit target\n.PHONY: am__doit\nEND\n# If we don't find an include directive, just comment out the code.\nAC_MSG_CHECKING([for style of include used by $am_make])\nam__include=\"#\"\nam__quote=\n_am_result=none\n# First try GNU make style include.\necho \"include confinc\" > confmf\n# Ignore all kinds of additional output from 'make'.\ncase `$am_make -s -f confmf 2> /dev/null` in #(\n*the\\ am__doit\\ target*)\n  am__include=include\n  am__quote=\n  _am_result=GNU\n  ;;\nesac\n# Now try BSD make style include.\nif test \"$am__include\" = \"#\"; then\n   echo '.include \"confinc\"' > confmf\n   case `$am_make -s -f confmf 2> /dev/null` in #(\n   *the\\ am__doit\\ target*)\n     am__include=.include\n     am__quote=\"\\\"\"\n     _am_result=BSD\n     ;;\n   esac\nfi\nAC_SUBST([am__include])\nAC_SUBST([am__quote])\nAC_MSG_RESULT([$_am_result])\nrm -f confinc confmf\n])\n\n# Fake the existence of programs that GNU maintainers use.  -*- Autoconf -*-\n\n# Copyright (C) 1997-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_MISSING_PROG(NAME, PROGRAM)\n# ------------------------------\nAC_DEFUN([AM_MISSING_PROG],\n[AC_REQUIRE([AM_MISSING_HAS_RUN])\n$1=${$1-\"${am_missing_run}$2\"}\nAC_SUBST($1)])\n\n# AM_MISSING_HAS_RUN\n# ------------------\n# Define MISSING if not defined so far and test if it is modern enough.\n# If it is, set am_missing_run to use it, otherwise, to nothing.\nAC_DEFUN([AM_MISSING_HAS_RUN],\n[AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\nAC_REQUIRE_AUX_FILE([missing])dnl\nif test x\"${MISSING+set}\" != xset; then\n  case $am_aux_dir in\n  *\\ * | *\\\t*)\n    MISSING=\"\\${SHELL} \\\"$am_aux_dir/missing\\\"\" ;;\n  *)\n    MISSING=\"\\${SHELL} $am_aux_dir/missing\" ;;\n  esac\nfi\n# Use eval to expand $SHELL\nif eval \"$MISSING --is-lightweight\"; then\n  am_missing_run=\"$MISSING \"\nelse\n  am_missing_run=\n  AC_MSG_WARN(['missing' script is too old or missing])\nfi\n])\n\n# Helper functions for option handling.                     -*- Autoconf -*-\n\n# Copyright (C) 2001-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# _AM_MANGLE_OPTION(NAME)\n# -----------------------\nAC_DEFUN([_AM_MANGLE_OPTION],\n[[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])\n\n# _AM_SET_OPTION(NAME)\n# --------------------\n# Set option NAME.  Presently that only means defining a flag for this option.\nAC_DEFUN([_AM_SET_OPTION],\n[m4_define(_AM_MANGLE_OPTION([$1]), [1])])\n\n# _AM_SET_OPTIONS(OPTIONS)\n# ------------------------\n# OPTIONS is a space-separated list of Automake options.\nAC_DEFUN([_AM_SET_OPTIONS],\n[m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])\n\n# _AM_IF_OPTION(OPTION, IF-SET, [IF-NOT-SET])\n# -------------------------------------------\n# Execute IF-SET if OPTION is set, IF-NOT-SET otherwise.\nAC_DEFUN([_AM_IF_OPTION],\n[m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])\n\n# Copyright (C) 1999-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# _AM_PROG_CC_C_O\n# ---------------\n# Like AC_PROG_CC_C_O, but changed for automake.  We rewrite AC_PROG_CC\n# to automatically call this.\nAC_DEFUN([_AM_PROG_CC_C_O],\n[AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\nAC_REQUIRE_AUX_FILE([compile])dnl\nAC_LANG_PUSH([C])dnl\nAC_CACHE_CHECK(\n  [whether $CC understands -c and -o together],\n  [am_cv_prog_cc_c_o],\n  [AC_LANG_CONFTEST([AC_LANG_PROGRAM([])])\n  # Make sure it works both with $CC and with simple cc.\n  # Following AC_PROG_CC_C_O, we do the test twice because some\n  # compilers refuse to overwrite an existing .o file with -o,\n  # though they will create one.\n  am_cv_prog_cc_c_o=yes\n  for am_i in 1 2; do\n    if AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext]) \\\n         && test -f conftest2.$ac_objext; then\n      : OK\n    else\n      am_cv_prog_cc_c_o=no\n      break\n    fi\n  done\n  rm -f core conftest*\n  unset am_i])\nif test \"$am_cv_prog_cc_c_o\" != yes; then\n   # Losing compiler, so override with the script.\n   # FIXME: It is wrong to rewrite CC.\n   # But if we don't then we get into trouble of one sort or another.\n   # A longer-term fix would be to have automake use am__CC in this case,\n   # and then we could set am__CC=\"\\$(top_srcdir)/compile \\$(CC)\"\n   CC=\"$am_aux_dir/compile $CC\"\nfi\nAC_LANG_POP([C])])\n\n# For backward compatibility.\nAC_DEFUN_ONCE([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC])])\n\n# Copyright (C) 2001-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_RUN_LOG(COMMAND)\n# -------------------\n# Run COMMAND, save the exit status in ac_status, and log it.\n# (This has been adapted from Autoconf's _AC_RUN_LOG macro.)\nAC_DEFUN([AM_RUN_LOG],\n[{ echo \"$as_me:$LINENO: $1\" >&AS_MESSAGE_LOG_FD\n   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   (exit $ac_status); }])\n\n# Check to make sure that the build environment is sane.    -*- Autoconf -*-\n\n# Copyright (C) 1996-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_SANITY_CHECK\n# ---------------\nAC_DEFUN([AM_SANITY_CHECK],\n[AC_MSG_CHECKING([whether build environment is sane])\n# Reject unsafe characters in $srcdir or the absolute working directory\n# name.  Accept space and tab only in the latter.\nam_lf='\n'\ncase `pwd` in\n  *[[\\\\\\\"\\#\\$\\&\\'\\`$am_lf]]*)\n    AC_MSG_ERROR([unsafe absolute working directory name]);;\nesac\ncase $srcdir in\n  *[[\\\\\\\"\\#\\$\\&\\'\\`$am_lf\\ \\\t]]*)\n    AC_MSG_ERROR([unsafe srcdir value: '$srcdir']);;\nesac\n\n# Do 'set' in a subshell so we don't clobber the current shell's\n# arguments.  Must try -L first in case configure is actually a\n# symlink; some systems play weird games with the mod time of symlinks\n# (eg FreeBSD returns the mod time of the symlink's containing\n# directory).\nif (\n   am_has_slept=no\n   for am_try in 1 2; do\n     echo \"timestamp, slept: $am_has_slept\" > conftest.file\n     set X `ls -Lt \"$srcdir/configure\" conftest.file 2> /dev/null`\n     if test \"$[*]\" = \"X\"; then\n\t# -L didn't work.\n\tset X `ls -t \"$srcdir/configure\" conftest.file`\n     fi\n     if test \"$[*]\" != \"X $srcdir/configure conftest.file\" \\\n\t&& test \"$[*]\" != \"X conftest.file $srcdir/configure\"; then\n\n\t# If neither matched, then we have a broken ls.  This can happen\n\t# if, for instance, CONFIG_SHELL is bash and it inherits a\n\t# broken ls alias from the environment.  This has actually\n\t# happened.  Such a system could not be considered \"sane\".\n\tAC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken\n  alias in your environment])\n     fi\n     if test \"$[2]\" = conftest.file || test $am_try -eq 2; then\n       break\n     fi\n     # Just in case.\n     sleep 1\n     am_has_slept=yes\n   done\n   test \"$[2]\" = conftest.file\n   )\nthen\n   # Ok.\n   :\nelse\n   AC_MSG_ERROR([newly created file is older than distributed files!\nCheck your system clock])\nfi\nAC_MSG_RESULT([yes])\n# If we didn't sleep, we still need to ensure time stamps of config.status and\n# generated files are strictly newer.\nam_sleep_pid=\nif grep 'slept: no' conftest.file >/dev/null 2>&1; then\n  ( sleep 1 ) &\n  am_sleep_pid=$!\nfi\nAC_CONFIG_COMMANDS_PRE(\n  [AC_MSG_CHECKING([that generated files are newer than configure])\n   if test -n \"$am_sleep_pid\"; then\n     # Hide warnings about reused PIDs.\n     wait $am_sleep_pid 2>/dev/null\n   fi\n   AC_MSG_RESULT([done])])\nrm -f conftest.file\n])\n\n# Copyright (C) 2009-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_SILENT_RULES([DEFAULT])\n# --------------------------\n# Enable less verbose build rules; with the default set to DEFAULT\n# (\"yes\" being less verbose, \"no\" or empty being verbose).\nAC_DEFUN([AM_SILENT_RULES],\n[AC_ARG_ENABLE([silent-rules], [dnl\nAS_HELP_STRING(\n  [--enable-silent-rules],\n  [less verbose build output (undo: \"make V=1\")])\nAS_HELP_STRING(\n  [--disable-silent-rules],\n  [verbose build output (undo: \"make V=0\")])dnl\n])\ncase $enable_silent_rules in @%:@ (((\n  yes) AM_DEFAULT_VERBOSITY=0;;\n   no) AM_DEFAULT_VERBOSITY=1;;\n    *) AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;\nesac\ndnl\ndnl A few 'make' implementations (e.g., NonStop OS and NextStep)\ndnl do not support nested variable expansions.\ndnl See automake bug#9928 and bug#10237.\nam_make=${MAKE-make}\nAC_CACHE_CHECK([whether $am_make supports nested variables],\n   [am_cv_make_support_nested_variables],\n   [if AS_ECHO([['TRUE=$(BAR$(V))\nBAR0=false\nBAR1=true\nV=1\nam__doit:\n\t@$(TRUE)\n.PHONY: am__doit']]) | $am_make -f - >/dev/null 2>&1; then\n  am_cv_make_support_nested_variables=yes\nelse\n  am_cv_make_support_nested_variables=no\nfi])\nif test $am_cv_make_support_nested_variables = yes; then\n  dnl Using '$V' instead of '$(V)' breaks IRIX make.\n  AM_V='$(V)'\n  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'\nelse\n  AM_V=$AM_DEFAULT_VERBOSITY\n  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY\nfi\nAC_SUBST([AM_V])dnl\nAM_SUBST_NOTMAKE([AM_V])dnl\nAC_SUBST([AM_DEFAULT_V])dnl\nAM_SUBST_NOTMAKE([AM_DEFAULT_V])dnl\nAC_SUBST([AM_DEFAULT_VERBOSITY])dnl\nAM_BACKSLASH='\\'\nAC_SUBST([AM_BACKSLASH])dnl\n_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl\n])\n\n# Copyright (C) 2001-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_PROG_INSTALL_STRIP\n# ---------------------\n# One issue with vendor 'install' (even GNU) is that you can't\n# specify the program used to strip binaries.  This is especially\n# annoying in cross-compiling environments, where the build's strip\n# is unlikely to handle the host's binaries.\n# Fortunately install-sh will honor a STRIPPROG variable, so we\n# always use install-sh in \"make install-strip\", and initialize\n# STRIPPROG with the value of the STRIP variable (set by the user).\nAC_DEFUN([AM_PROG_INSTALL_STRIP],\n[AC_REQUIRE([AM_PROG_INSTALL_SH])dnl\n# Installed binaries are usually stripped using 'strip' when the user\n# run \"make install-strip\".  However 'strip' might not be the right\n# tool to use in cross-compilation environments, therefore Automake\n# will honor the 'STRIP' environment variable to overrule this program.\ndnl Don't test for $cross_compiling = yes, because it might be 'maybe'.\nif test \"$cross_compiling\" != no; then\n  AC_CHECK_TOOL([STRIP], [strip], :)\nfi\nINSTALL_STRIP_PROGRAM=\"\\$(install_sh) -c -s\"\nAC_SUBST([INSTALL_STRIP_PROGRAM])])\n\n# Copyright (C) 2006-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# _AM_SUBST_NOTMAKE(VARIABLE)\n# ---------------------------\n# Prevent Automake from outputting VARIABLE = @VARIABLE@ in Makefile.in.\n# This macro is traced by Automake.\nAC_DEFUN([_AM_SUBST_NOTMAKE])\n\n# AM_SUBST_NOTMAKE(VARIABLE)\n# --------------------------\n# Public sister of _AM_SUBST_NOTMAKE.\nAC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])\n\n# Check how to create a tarball.                            -*- Autoconf -*-\n\n# Copyright (C) 2004-2014 Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# _AM_PROG_TAR(FORMAT)\n# --------------------\n# Check how to create a tarball in format FORMAT.\n# FORMAT should be one of 'v7', 'ustar', or 'pax'.\n#\n# Substitute a variable $(am__tar) that is a command\n# writing to stdout a FORMAT-tarball containing the directory\n# $tardir.\n#     tardir=directory && $(am__tar) > result.tar\n#\n# Substitute a variable $(am__untar) that extract such\n# a tarball read from stdin.\n#     $(am__untar) < result.tar\n#\nAC_DEFUN([_AM_PROG_TAR],\n[# Always define AMTAR for backward compatibility.  Yes, it's still used\n# in the wild :-(  We should find a proper way to deprecate it ...\nAC_SUBST([AMTAR], ['$${TAR-tar}'])\n\n# We'll loop over all known methods to create a tar archive until one works.\n_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'\n\nm4_if([$1], [v7],\n  [am__tar='$${TAR-tar} chof - \"$$tardir\"' am__untar='$${TAR-tar} xf -'],\n\n  [m4_case([$1],\n    [ustar],\n     [# The POSIX 1988 'ustar' format is defined with fixed-size fields.\n      # There is notably a 21 bits limit for the UID and the GID.  In fact,\n      # the 'pax' utility can hang on bigger UID/GID (see automake bug#8343\n      # and bug#13588).\n      am_max_uid=2097151 # 2^21 - 1\n      am_max_gid=$am_max_uid\n      # The $UID and $GID variables are not portable, so we need to resort\n      # to the POSIX-mandated id(1) utility.  Errors in the 'id' calls\n      # below are definitely unexpected, so allow the users to see them\n      # (that is, avoid stderr redirection).\n      am_uid=`id -u || echo unknown`\n      am_gid=`id -g || echo unknown`\n      AC_MSG_CHECKING([whether UID '$am_uid' is supported by ustar format])\n      if test $am_uid -le $am_max_uid; then\n         AC_MSG_RESULT([yes])\n      else\n         AC_MSG_RESULT([no])\n         _am_tools=none\n      fi\n      AC_MSG_CHECKING([whether GID '$am_gid' is supported by ustar format])\n      if test $am_gid -le $am_max_gid; then\n         AC_MSG_RESULT([yes])\n      else\n        AC_MSG_RESULT([no])\n        _am_tools=none\n      fi],\n\n  [pax],\n    [],\n\n  [m4_fatal([Unknown tar format])])\n\n  AC_MSG_CHECKING([how to create a $1 tar archive])\n\n  # Go ahead even if we have the value already cached.  We do so because we\n  # need to set the values for the 'am__tar' and 'am__untar' variables.\n  _am_tools=${am_cv_prog_tar_$1-$_am_tools}\n\n  for _am_tool in $_am_tools; do\n    case $_am_tool in\n    gnutar)\n      for _am_tar in tar gnutar gtar; do\n        AM_RUN_LOG([$_am_tar --version]) && break\n      done\n      am__tar=\"$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - \"'\"$$tardir\"'\n      am__tar_=\"$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - \"'\"$tardir\"'\n      am__untar=\"$_am_tar -xf -\"\n      ;;\n    plaintar)\n      # Must skip GNU tar: if it does not support --format= it doesn't create\n      # ustar tarball either.\n      (tar --version) >/dev/null 2>&1 && continue\n      am__tar='tar chf - \"$$tardir\"'\n      am__tar_='tar chf - \"$tardir\"'\n      am__untar='tar xf -'\n      ;;\n    pax)\n      am__tar='pax -L -x $1 -w \"$$tardir\"'\n      am__tar_='pax -L -x $1 -w \"$tardir\"'\n      am__untar='pax -r'\n      ;;\n    cpio)\n      am__tar='find \"$$tardir\" -print | cpio -o -H $1 -L'\n      am__tar_='find \"$tardir\" -print | cpio -o -H $1 -L'\n      am__untar='cpio -i -H $1 -d'\n      ;;\n    none)\n      am__tar=false\n      am__tar_=false\n      am__untar=false\n      ;;\n    esac\n\n    # If the value was cached, stop now.  We just wanted to have am__tar\n    # and am__untar set.\n    test -n \"${am_cv_prog_tar_$1}\" && break\n\n    # tar/untar a dummy directory, and stop if the command works.\n    rm -rf conftest.dir\n    mkdir conftest.dir\n    echo GrepMe > conftest.dir/file\n    AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])\n    rm -rf conftest.dir\n    if test -s conftest.tar; then\n      AM_RUN_LOG([$am__untar <conftest.tar])\n      AM_RUN_LOG([cat conftest.dir/file])\n      grep GrepMe conftest.dir/file >/dev/null 2>&1 && break\n    fi\n  done\n  rm -rf conftest.dir\n\n  AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])\n  AC_MSG_RESULT([$am_cv_prog_tar_$1])])\n\nAC_SUBST([am__tar])\nAC_SUBST([am__untar])\n]) # _AM_PROG_TAR\n\nm4_include([m4/introspection.m4])\nm4_include([acinclude.m4])\n",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/gtksearchenginebeagle.c": "/*\n * Copyright (C) 2005 Novell, Inc.\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n *\n * Author: Anders Carlsson <andersca@imendio.com>\n *\n * Based on nautilus-search-engine-beagle.c\n */\n\n#include \"config.h\"\n#include <gmodule.h>\n#include \"gtksearchenginebeagle.h\"\n\n#if 0\n#include <beagle/beagle.h>\n#endif\n\n/* We dlopen() all the following from libbeagle at runtime */\n\ntypedef struct _BeagleHit BeagleHit;\ntypedef struct _BeagleQuery BeagleQuery;\ntypedef struct _BeagleClient BeagleClient;\ntypedef struct _BeagleRequest BeagleRequest;\ntypedef struct _BeagleFinishedResponse BeagleFinishedResponse;\ntypedef struct _BeagleHitsAddedResponse BeagleHitsAddedResponse;\ntypedef struct _BeagleHitsSubtractedResponse BeagleHitsSubtractedResponse;\ntypedef struct _BeagleQueryPartProperty BeagleQueryPartProperty;\ntypedef struct _BeagleQueryPart BeagleQueryPart;\n\n#define BEAGLE_HIT(x) ((BeagleHit *)(x))\n#define BEAGLE_REQUEST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), beagle_request_get_type(), BeagleRequest))\n#define BEAGLE_QUERY_PART(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), beagle_query_part_get_type(), BeagleQueryPart))\n\ntypedef enum \n{\n  BEAGLE_QUERY_PART_LOGIC_REQUIRED   = 1,\n  BEAGLE_QUERY_PART_LOGIC_PROHIBITED = 2\n} BeagleQueryPartLogic;\n\ntypedef enum \n  {\n    BEAGLE_PROPERTY_TYPE_UNKNOWN = 0,\n    BEAGLE_PROPERTY_TYPE_TEXT    = 1,\n    BEAGLE_PROPERTY_TYPE_KEYWORD = 2,\n    BEAGLE_PROPERTY_TYPE_DATE    = 3,\n    BEAGLE_PROPERTY_TYPE_LAST    = 4\n} BeaglePropertyType;\n\n/* *static* wrapper function pointers */\nstatic gboolean (*beagle_client_send_request_async) (BeagleClient   *client,\n\t\t\t\t\t\t     BeagleRequest  *request,\n\t\t\t\t\t\t     GError        **err) = NULL;\nstatic const char *(*beagle_hit_get_uri) (BeagleHit *hit) = NULL;\nstatic GSList *(*beagle_hits_added_response_get_hits) (BeagleHitsAddedResponse *response) = NULL;\nstatic GSList *(*beagle_hits_subtracted_response_get_uris) (BeagleHitsSubtractedResponse *response) = NULL;\nstatic BeagleQuery *(*beagle_query_new) (void) = NULL;\nstatic void (*beagle_query_add_text) (BeagleQuery     *query,\n\t\t\t\t      const char      *str) = NULL;\nstatic void (*beagle_query_set_max_hits) (BeagleQuery *query,\n\t\t\t\t\t  gint         max_hits) = NULL;\nstatic BeagleQueryPartProperty *(*beagle_query_part_property_new) (void) = NULL;\nstatic void (*beagle_query_part_set_logic) (BeagleQueryPart      *part, \n\t\t\t\t\t    BeagleQueryPartLogic  logic) = NULL;\nstatic void (*beagle_query_part_property_set_key) (BeagleQueryPartProperty *part, \n\t\t\t\t\t\t   const char              *key) = NULL;\nstatic void (*beagle_query_part_property_set_value) (BeagleQueryPartProperty *part, \n\t\t\t\t\t\t     const char *             value) = NULL;\nstatic void (*beagle_query_part_property_set_property_type) (BeagleQueryPartProperty *part, \n\t\t\t\t\t\t\t     BeaglePropertyType       prop_type) = NULL;\nstatic void (*beagle_query_add_part) (BeagleQuery     *query, \n\t\t\t\t      BeagleQueryPart *part) = NULL;\nstatic GType (*beagle_request_get_type) (void) = NULL;\nstatic GType (*beagle_query_part_get_type) (void) = NULL;\nstatic gboolean (*beagle_util_daemon_is_running) (void) = NULL;\nstatic BeagleClient *(*beagle_client_new) (const char *client_name) = NULL;\n\nstatic struct BeagleDlMapping\n{\n  const char *fn_name;\n  gpointer *fn_ptr_ref;\n} beagle_dl_mapping[] =\n{\n#define MAP(a) { #a, (gpointer *)&a }\n  MAP (beagle_client_send_request_async),\n  MAP (beagle_hit_get_uri),\n  MAP (beagle_hits_added_response_get_hits),\n  MAP (beagle_hits_subtracted_response_get_uris),\n  MAP (beagle_query_new),\n  MAP (beagle_query_add_text),\n  MAP (beagle_query_set_max_hits),\n  MAP (beagle_query_part_property_new),\n  MAP (beagle_query_part_set_logic),\n  MAP (beagle_query_part_property_set_key),\n  MAP (beagle_query_part_property_set_value),\n  MAP (beagle_query_part_property_set_property_type),\n  MAP (beagle_query_add_part),\n  MAP (beagle_request_get_type),\n  MAP (beagle_query_part_get_type),\n  MAP (beagle_util_daemon_is_running),\n  MAP (beagle_client_new)\n#undef MAP\n};\n\nstatic void \nopen_libbeagle (void)\n{\n  static gboolean done = FALSE;\n\n  if (!done)\n    {\n      int i;\n      GModule *beagle;\n      \n      done = TRUE;\n \n      beagle = g_module_open (\"libbeagle.so.1\", G_MODULE_BIND_LAZY | G_MODULE_BIND_LOCAL);\n      if (!beagle)\n        beagle = g_module_open (\"libbeagle.so.0\", G_MODULE_BIND_LAZY | G_MODULE_BIND_LOCAL);\n\n      if (!beagle)\n\treturn;\n      \n      for (i = 0; i < G_N_ELEMENTS (beagle_dl_mapping); i++)\n\t{\n\t  if (!g_module_symbol (beagle, beagle_dl_mapping[i].fn_name,\n\t\t\t\tbeagle_dl_mapping[i].fn_ptr_ref))\n\t    {\n\t      g_warning (\"Missing symbol '%s' in libbeagle\\n\",\n\t\t\t beagle_dl_mapping[i].fn_name);\n\t      g_module_close (beagle);\n\n\t      for (i = 0; i < G_N_ELEMENTS (beagle_dl_mapping); i++)\n\t\tbeagle_dl_mapping[i].fn_ptr_ref = NULL;\n\n\t      return;\n\t    }\n\t}\n    }\n}\n\n\nstruct _GtkSearchEngineBeaglePrivate \n{\n  BeagleClient *client;\n  GtkQuery *query;\n\n  BeagleQuery *current_query;\n  char *current_query_uri_prefix;\n  gboolean query_finished;\n};\n\n\nG_DEFINE_TYPE (GtkSearchEngineBeagle, _gtk_search_engine_beagle, GTK_TYPE_SEARCH_ENGINE);\n\nstatic void\nfinalize (GObject *object)\n{\n  GtkSearchEngineBeagle *beagle;\n  \n  beagle = GTK_SEARCH_ENGINE_BEAGLE (object);\n  \n  if (beagle->priv->current_query) \n    {\n      g_object_unref (beagle->priv->current_query);\n      beagle->priv->current_query = NULL;\n      g_free (beagle->priv->current_query_uri_prefix);\n      beagle->priv->current_query_uri_prefix = NULL;\n    }\n\n  if (beagle->priv->query) \n    {\n      g_object_unref (beagle->priv->query);\n      beagle->priv->query = NULL;\n    }\n\n  if (beagle->priv->client) \n    {\n      g_object_unref (beagle->priv->client);\n      beagle->priv->client = NULL;\n    }\n\n  G_OBJECT_CLASS (_gtk_search_engine_beagle_parent_class)->finalize (object);\n}\n\nstatic void\nbeagle_hits_added (BeagleQuery             *query, \n\t\t   BeagleHitsAddedResponse *response, \n\t\t   GtkSearchEngineBeagle   *engine)\n{\n  GSList *hits, *list;\n  GList *hit_uris;\n  const gchar *uri;\n  \n  hit_uris = NULL;\n  \n  hits = beagle_hits_added_response_get_hits (response);\n  \n  for (list = hits; list != NULL; list = list->next) \n    {\n      BeagleHit *hit = BEAGLE_HIT (list->data);\n      \n      uri = beagle_hit_get_uri (hit);\n      \n      if (engine->priv->current_query_uri_prefix &&\n\t  !g_str_has_prefix (uri, engine->priv->current_query_uri_prefix)) \n\tcontinue;\n\t\t\n      hit_uris = g_list_prepend (hit_uris, (char *)uri);\n    }\n\n  _gtk_search_engine_hits_added (GTK_SEARCH_ENGINE (engine), hit_uris);\n  g_list_free (hit_uris);\n}\n\nstatic void\nbeagle_hits_subtracted (BeagleQuery                  *query, \n\t\t\tBeagleHitsSubtractedResponse *response, \n\t\t\tGtkSearchEngineBeagle        *engine)\n{\n  GSList *uris, *list;\n  GList *hit_uris;\n  \n  hit_uris = NULL;\n  \n  uris = beagle_hits_subtracted_response_get_uris (response);\n  \n  for (list = uris; list != NULL; list = list->next) \n    {\n      hit_uris = g_list_prepend (hit_uris, (char *)list->data);\n    }\n\n  _gtk_search_engine_hits_subtracted (GTK_SEARCH_ENGINE (engine), hit_uris);\n  g_list_free (hit_uris);\n}\n\nstatic void\nbeagle_finished (BeagleQuery            *query, \n\t\t BeagleFinishedResponse *response,\n\t\t GtkSearchEngineBeagle  *engine)\n{\n  /* For some reason we keep getting finished events,\n   * only emit finished once */\n  if (engine->priv->query_finished) \n    return;\n  \n  engine->priv->query_finished = TRUE;\n  _gtk_search_engine_finished (GTK_SEARCH_ENGINE (engine));\n}\n\nstatic void\nbeagle_error (BeagleQuery           *query,\n\t      GError                *error,\n\t      GtkSearchEngineBeagle *engine)\n{\n  _gtk_search_engine_error (GTK_SEARCH_ENGINE (engine), error->message);\n}\n\nstatic void\ngtk_search_engine_beagle_start (GtkSearchEngine *engine)\n{\n  GtkSearchEngineBeagle *beagle;\n  GError *error;\n  gchar *text;\n  gchar *query;\n\n  error = NULL;\n  beagle = GTK_SEARCH_ENGINE_BEAGLE (engine);\n  \n  g_return_if_fail (beagle->priv->query != NULL);\n\n  if (beagle->priv->current_query)\n    return;\n\n  beagle->priv->query_finished = FALSE;\n  beagle->priv->current_query = beagle_query_new ();\n  g_signal_connect (beagle->priv->current_query,\n\t\t    \"hits-added\", G_CALLBACK (beagle_hits_added), engine);\n  g_signal_connect (beagle->priv->current_query,\n\t\t    \"hits-subtracted\", G_CALLBACK (beagle_hits_subtracted), engine);\n  g_signal_connect (beagle->priv->current_query,\n\t\t    \"finished\", G_CALLBACK (beagle_finished), engine);\n  g_signal_connect (beagle->priv->current_query,\n\t\t    \"error\", G_CALLBACK (beagle_error), engine);\n  \n  /* We only want files */\n  \n \n  text = _gtk_query_get_text (beagle->priv->query);\n  query = g_strconcat (text, \" type:File\", NULL);\n                          \n  beagle_query_set_max_hits (beagle->priv->current_query, 1000);\n  beagle_query_add_text (beagle->priv->current_query, query);\n  \n  beagle->priv->current_query_uri_prefix = _gtk_query_get_location (beagle->priv->query);\n  \n  if (!beagle_client_send_request_async (beagle->priv->client,\n\t\t\t\t\t BEAGLE_REQUEST (beagle->priv->current_query), &error)) \n    {\n      _gtk_search_engine_error (engine, error->message);\n      g_error_free (error);\n    }\n\n  /* These must live during the lifetime of the query */\n  g_free (text);\n  g_free (query);\n}\n\nstatic void\ngtk_search_engine_beagle_stop (GtkSearchEngine *engine)\n{\n  GtkSearchEngineBeagle *beagle;\n  \n  beagle = GTK_SEARCH_ENGINE_BEAGLE (engine);\n  \n  if (beagle->priv->current_query) \n    {\n      g_object_unref (beagle->priv->current_query);\n      beagle->priv->current_query = NULL;\n\n      g_free (beagle->priv->current_query_uri_prefix);\n      beagle->priv->current_query_uri_prefix = NULL;\n    }\n}\n\nstatic gboolean\ngtk_search_engine_beagle_is_indexed (GtkSearchEngine *engine)\n{\n  return TRUE;\n}\n\nstatic void\ngtk_search_engine_beagle_set_query (GtkSearchEngine *engine, \n\t\t\t\t    GtkQuery        *query)\n{\n  GtkSearchEngineBeagle *beagle;\n  \n  beagle = GTK_SEARCH_ENGINE_BEAGLE (engine);\n  \n  if (query)\n    g_object_ref (query);\n\n  if (beagle->priv->query)\n    g_object_unref (beagle->priv->query);\n\n  beagle->priv->query = query;\n}\n\nstatic void\n_gtk_search_engine_beagle_class_init (GtkSearchEngineBeagleClass *class)\n{\n  GObjectClass *gobject_class;\n  GtkSearchEngineClass *engine_class;\n  \n  gobject_class = G_OBJECT_CLASS (class);\n  gobject_class->finalize = finalize;\n  \n  engine_class = GTK_SEARCH_ENGINE_CLASS (class);\n  engine_class->set_query = gtk_search_engine_beagle_set_query;\n  engine_class->start = gtk_search_engine_beagle_start;\n  engine_class->stop = gtk_search_engine_beagle_stop;\n  engine_class->is_indexed = gtk_search_engine_beagle_is_indexed;\n\n  g_type_class_add_private (gobject_class, sizeof (GtkSearchEngineBeaglePrivate));\n}\n\nstatic void\n_gtk_search_engine_beagle_init (GtkSearchEngineBeagle *engine)\n{\n  engine->priv = G_TYPE_INSTANCE_GET_PRIVATE (engine, GTK_TYPE_SEARCH_ENGINE_BEAGLE, GtkSearchEngineBeaglePrivate);\n}\n\n\nGtkSearchEngine *\n_gtk_search_engine_beagle_new (void)\n{\n  GtkSearchEngineBeagle *engine;\n  BeagleClient *client;\n\n  open_libbeagle ();\n\n  if (!beagle_util_daemon_is_running)\n    return NULL;\n\n  /* check whether daemon is running as beagle_client_new\n   * doesn't fail when a stale socket file exists */\n  if (!beagle_util_daemon_is_running ()) \n      return NULL;\n\n  client = beagle_client_new (NULL);\n  \n  if (client == NULL)\n    return NULL;\n\t\n  engine = g_object_new (GTK_TYPE_SEARCH_ENGINE_BEAGLE, NULL);\n  \n  engine->priv->client = client;\n  \n  return GTK_SEARCH_ENGINE (engine);\n}\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/README.win32",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/ChangeLog.pre-1-2",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/ChangeLog.pre-2-0",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gdk/win32/rc/gtk.ico",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gdk/win32/rc/gdk.rc.in",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gdk/win32/rc/gdk.rc",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/tests/marble.xpm",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/tests/testcalendar.c",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/tests/gnome-textfile.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gnome-applets.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gnome-gmush.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gnome-gimp.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gnome-calendar.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/apple-red.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gnome-foot.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gnu-keys.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gnome-gsame.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/background.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gtk-demo/gnome-applets.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gtk-demo/gnome-fs-regular.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gtk-demo/gnome-gmush.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gtk-demo/gnome-gimp.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gtk-demo/gnome-calendar.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gtk-demo/apple-red.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gtk-demo/gtk-logo-rgb.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gtk-demo/gnome-foot.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gtk-demo/gnome-fs-directory.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gtk-demo/alphatest.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gtk-demo/gnu-keys.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gtk-demo/floppybuddy.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gtk-demo/gnome-gsame.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/demos/gtk-demo/background.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/oc.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/mk.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/tk.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/fa.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/nds.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/lt.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/hi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/io.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/sr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/fi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/nn.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/bg.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ur.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ga.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/bs.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/et.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/cy.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ro.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ang.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/sv.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/or.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ps.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/bn.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/hr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/mr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/hy.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/mn.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ia.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/az.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/he.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/uz.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/sr@latin.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/uk.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/mai.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/my.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ne.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ca@valencia.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/rw.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/pt_BR.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ar.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/bn_IN.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/sl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/en_GB.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/az_IR.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ug.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/is.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ja.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/pt.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/fr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/wa.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ka.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ms.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/eu.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/si.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/sr@ije.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/tt.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/kn.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/de.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/id.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/af.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/zh_HK.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/am.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/li.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/be.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/gu.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/as.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/be@latin.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ta.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/nl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/dz.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/eo.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/hu.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ast.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/sk.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/nb.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/cs.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/nso.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/kk.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/pl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/gl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/th.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/en_CA.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/vi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/pa.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/zh_CN.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/mi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/br.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/el.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/da.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/zh_TW.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ml.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ku.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/lv.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/sq.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/es.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/te.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/xh.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/yi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/it.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ko.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/crh.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ca.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/uz@cyrillic.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/ru.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po/tr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/gtk-win32.rc.in",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/gtk-win32.rc",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/theme-bits/check-13-inconsistent.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/theme-bits/radio-13.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/theme-bits/check-13.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/theme-bits/radio-13-inconsistent.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/48/dialog-question.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/48/dialog-password.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/48/dialog-error.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/48/dialog-warning.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/48/dialog-information.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/20/gtk-no.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/20/gtk-ok.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/20/gtk-cancel.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/20/gtk-yes.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/20/gtk-apply.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/20/window-close.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/view-sort-ascending.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/go-last-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/image-missing.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/document-open.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/media-playback-start-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/go-bottom.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/go-down.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/network-idle.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-select-font.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/media-floppy.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/document-new.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/go-jump-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/folder.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/media-skip-forward-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/document-save-as.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-edit.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/media-playback-start-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/edit-copy.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/view-refresh.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/view-sort-descending.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/process-stop.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-connect.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/zoom-fit-best.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/folder-remote.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/format-text-bold.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/drive-harddisk.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/edit-find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/format-justify-left.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/application-exit.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/document-revert-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/edit-find-replace.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/document-open-recent.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/document-save.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/edit-cut.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-color-picker.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/edit-delete.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/media-playback-pause.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-page-setup.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/format-justify-fill.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/media-skip-backward-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/list-remove.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/edit-paste.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/media-seek-backward-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-caps-lock-warning.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/view-fullscreen.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-index.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/document-print.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/go-next-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/document-print-preview.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/media-seek-forward-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/user-desktop.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/media-seek-backward-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/go-top.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-preferences.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/printer-paused.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-select-color.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/format-text-strikethrough.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/edit-clear.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/list-add.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/system-run.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/go-previous-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-undelete-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/format-justify-right.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/document-revert-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/go-first-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/zoom-in.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-orientation-landscape.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/go-jump-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/media-skip-forward-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/go-last-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/edit-redo-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/printer-error.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-undelete-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/format-text-underline.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/help-about.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/edit-redo-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/media-record.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/media-skip-backward-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-font.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/document-properties.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/go-next-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/format-justify-center.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/edit-undo-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/text-x-generic.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-disconnect.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/format-indent-more-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-orientation-reverse-landscape.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/user-home.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/edit-undo-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-orientation-portrait.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/format-indent-less-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/zoom-original.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/printer-warning.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/format-text-italic.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/view-restore.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/go-home.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/tools-check-spelling.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/zoom-out.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/printer-info.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/media-playback-stop.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/dialog-information.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/go-previous-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/go-first-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/help-contents.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-convert.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/media-seek-forward-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/go-up.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/window-close.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/gtk-orientation-reverse-portrait.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/format-indent-less-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/media-optical.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/edit-select-all.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/16/format-indent-more-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/32/gtk-dnd-multiple.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/32/gtk-dnd.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/view-sort-ascending.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/go-last-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/image-missing.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/document-open.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/media-playback-start-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/go-bottom.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/go-down.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/network-idle.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-select-font.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/media-floppy.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/document-new.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/go-jump-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/folder.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/media-skip-forward-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/document-save-as.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-edit.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/media-playback-start-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/edit-copy.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/view-refresh.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/view-sort-descending.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/process-stop.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-connect.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/audio-volume-medium.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/zoom-fit-best.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/folder-remote.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/format-text-bold.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/drive-harddisk.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/edit-find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/format-justify-left.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/application-exit.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/document-revert-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/edit-find-replace.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/document-open-recent.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/document-save.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/edit-cut.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-color-picker.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/edit-delete.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/media-playback-pause.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-page-setup.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/format-justify-fill.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/media-skip-backward-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/list-remove.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/edit-paste.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/media-seek-backward-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-caps-lock-warning.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/view-fullscreen.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-index.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/audio-volume-high.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/document-print.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/go-next-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/document-print-preview.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/media-seek-forward-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/user-desktop.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/media-seek-backward-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/go-top.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-preferences.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/printer-paused.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-select-color.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/format-text-strikethrough.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/edit-clear.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/list-add.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/system-run.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/go-previous-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-undelete-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/format-justify-right.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/document-revert-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/go-first-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/zoom-in.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-orientation-landscape.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/go-jump-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/media-skip-forward-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/go-last-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/edit-redo-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/printer-error.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-undelete-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/format-text-underline.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/help-about.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/edit-redo-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/media-record.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/media-skip-backward-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-font.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/document-properties.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/go-next-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/format-justify-center.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/edit-undo-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/text-x-generic.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-disconnect.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/format-indent-more-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-orientation-reverse-landscape.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/user-home.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/edit-undo-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-orientation-portrait.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/format-indent-less-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/zoom-original.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/printer-warning.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/audio-volume-low.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/format-text-italic.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/view-restore.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/go-home.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/tools-check-spelling.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/zoom-out.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/printer-info.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/media-playback-stop.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/dialog-information.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/go-previous-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/go-first-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/help-contents.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-convert.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/media-seek-forward-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/go-up.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/window-close.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/gtk-orientation-reverse-portrait.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/format-indent-less-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/audio-volume-muted.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/media-optical.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/edit-select-all.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/gtk/stock-icons/24/format-indent-more-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/examples/calendar/calendar.c",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/oc.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/mk.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/tk.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/fa.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/nds.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/lt.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/hi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/io.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/sr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/fi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/nn.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/bg.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ur.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ga.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/bs.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/et.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/cy.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ro.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ang.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/sv.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/or.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ps.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/bn.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/hr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/mr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/hy.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/mn.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ia.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/az.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/he.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/uz.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/sr@latin.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/uk.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/mai.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/my.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ne.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ca@valencia.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/rw.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/pt_BR.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ar.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/bn_IN.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/sl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/en_GB.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/az_IR.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ug.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/is.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ja.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/pt.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/fr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/wa.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ka.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ms.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/eu.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/si.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/sr@ije.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/tt.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/kn.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/de.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/id.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/af.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/zh_HK.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/am.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/li.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/be.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/gu.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/as.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/be@latin.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ta.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/nl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/dz.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/eo.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/hu.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ast.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/sk.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/nb.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/cs.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/nso.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/kk.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/pl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/gl.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/th.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/en_CA.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/vi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/pa.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/zh_CN.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/mi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/br.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/el.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/da.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/zh_TW.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ml.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ku.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/lv.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/sq.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/es.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/te.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/xh.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/yi.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/it.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ko.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/crh.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ca.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/uz@cyrillic.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/ru.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/po-properties/tr.gmo",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/aspectframe.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/gtkdial.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/filesel.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/frame.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/buttonbox.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/rulers.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/spinbutton.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/scrolledwin.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/eventbox.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/menu.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/paned.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/buttons.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/table.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/helloworld.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/notebook.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/packbox1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/calendar.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/rangewidgets.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/base.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/progressbar.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/tictactoe.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/packbox2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/colorsel.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/statusbar.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/helloworld2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/fixed.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/scribble.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/entry.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/radiobuttons.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/images/label.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/aspectframe.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/gtkdial.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/filesel.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/frame.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/buttonbox.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/rulers.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/spinbutton.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/scrolledwin.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/eventbox.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/menu.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/paned.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/buttons.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/table.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/helloworld.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/notebook.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/packbox1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/calendar.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/rangewidgets.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/base.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/progressbar.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/tictactoe.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/packbox2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/colorsel.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/statusbar.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/helloworld2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/fixed.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/scribble.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/entry.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/radiobuttons.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/images/label.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/stylesheet-images/note.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/stylesheet-images/next.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/stylesheet-images/prev.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/stylesheet-images/home.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/stylesheet-images/tip.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/stylesheet-images/toc-blank.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/stylesheet-images/caution.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/stylesheet-images/toc-minus.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/stylesheet-images/warning.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/stylesheet-images/up.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/stylesheet-images/important.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/tutorial/html/stylesheet-images/toc-plus.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/box_spiral.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/exchange.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/based_arrow_up.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/left_tee.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/star.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/right_side.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/bottom_side.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/sb_left_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/top_side.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/leftbutton.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/based_arrow_down.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/left_side.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/bottom_right_corner.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/sb_h_double_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/draft_large.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/iron_cross.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/gumby.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/bogosity.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/bottom_tee.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/spraycan.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/diamond_cross.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/man.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/gobbler.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/rotated-text.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/plus.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/watch.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/umbrella.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/top_left_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/icon.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/spider.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/crosshair.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/right_ptr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/clock.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/target.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/ll_angle.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/sb_up_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/double_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/boat.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/circle.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/draft_small.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/right_tee.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/trek.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/top_left_corner.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/heart.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/tcross.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/top_right_corner.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/question_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/rtl_logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/fleur.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/dotbox.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/sizing.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/ul_angle.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/pencil.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/mouse.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/ur_angle.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/hand1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/rightbutton.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/coffee_mug.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/sailboat.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/sb_down_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/cross_reverse.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/pirate.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/draped_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/hand2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/shuttle.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/middlebutton.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/bottom_left_corner.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/sb_v_double_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/sb_right_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/left_ptr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/lr_angle.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/X_cursor.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/center_ptr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/top_tee.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/cross.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/images/xterm.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/box_spiral.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/exchange.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/based_arrow_up.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/left_tee.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/star.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/right_side.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/bottom_side.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/sb_left_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/top_side.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/leftbutton.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/based_arrow_down.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/left_side.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/bottom_right_corner.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/sb_h_double_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/draft_large.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/iron_cross.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/gumby.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/bogosity.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/bottom_tee.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/spraycan.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/diamond_cross.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/man.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/gobbler.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/rotated-text.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/plus.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/right-insensitive.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/watch.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/umbrella.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/top_left_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/icon.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/spider.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/left.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/home.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/crosshair.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/right_ptr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/up-insensitive.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/clock.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/target.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/ll_angle.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/sb_up_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/double_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/boat.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/circle.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/draft_small.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/right_tee.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/trek.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/top_left_corner.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/heart.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/tcross.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/right.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/top_right_corner.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/question_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/rtl_logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/fleur.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/dotbox.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/sizing.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/ul_angle.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/left-insensitive.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/pencil.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/mouse.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/ur_angle.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/hand1.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/rightbutton.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/coffee_mug.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/sailboat.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/sb_down_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/cross_reverse.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/pirate.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/draped_box.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/hand2.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/shuttle.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/middlebutton.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/bottom_left_corner.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/up.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/sb_v_double_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/sb_right_arrow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/left_ptr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/lr_angle.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/X_cursor.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/center_ptr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/top_tee.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/cross.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gdk/html/xterm.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/fontsel.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/toolbar.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/recentchooserdialog.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/spinner.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/messagedialog.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/multiline-text.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/radio-group.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/panes.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/separator.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/printdialog.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/figure-hierarchical-drawing.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/check-button.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/layout-btrl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/frame.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/layout-tblr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/spinbutton.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/layout-tbrl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/layout-lrtb.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/scrolledwindow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/filechooser.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/image.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/icon-view.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/toggle-button.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/file-button.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/notebook.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/volumebutton.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/menubar.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/button.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/accel-label.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/layout-rlbt.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/toolpalette.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/scales.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/assistant.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/font-button.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/layout-rltb.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/pagesetupdialog.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/list-and-tree.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/layout-lrbt.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/progressbar.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/tree-view-coordinates.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/aboutdialog.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/colorsel.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/statusbar.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/layout-btlr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/combo-box.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/figure-windowed-label.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/entry.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/link-button.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/label.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/window.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/combo-box-entry.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/images/color-button.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/fontsel.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/view-sort-ascending.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/toolbar.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/recentchooserdialog.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/go-last-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/image-missing.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/document-open.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/media-playback-start-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/spinner.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/go-bottom.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/dialog-question.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/go-down.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/messagedialog.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/multiline-text.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/network-idle.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/media-floppy.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/document-new.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/go-jump-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-dnd-multiple.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/radio-group.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/panes.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/separator.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/folder.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/media-skip-forward-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/printdialog.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/figure-hierarchical-drawing.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/document-save-as.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-edit.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/media-playback-start-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/check-button.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/layout-btrl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/frame.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/edit-copy.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/view-refresh.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/layout-tblr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/view-sort-descending.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/process-stop.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-connect.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/zoom-fit-best.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/spinbutton.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/format-text-bold.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/drive-harddisk.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/edit-find.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/format-justify-left.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/application-exit.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/document-revert-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/layout-tbrl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-no.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/edit-find-replace.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-ok.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/layout-lrtb.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/right-insensitive.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/document-save.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/edit-cut.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-color-picker.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/edit-delete.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/left.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/home.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/scrolledwindow.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/media-playback-pause.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-page-setup.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/dialog-password.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/format-justify-fill.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/media-skip-backward-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/list-remove.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/up-insensitive.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/filechooser.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/image.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/icon-view.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/edit-paste.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/media-seek-backward-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-caps-lock-warning.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/toggle-button.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/view-fullscreen.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/file-button.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-index.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/document-print.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/notebook.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/go-next-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/volumebutton.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/document-print-preview.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/menubar.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/media-seek-forward-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/media-seek-backward-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/go-top.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/button.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-preferences.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/right.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/printer-paused.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/accel-label.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-select-color.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/layout-rlbt.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/format-text-strikethrough.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/edit-clear.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/toolpalette.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/list-add.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/scales.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/dialog-error.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/assistant.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-cancel.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/system-run.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/go-previous-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-dnd.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-undelete-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/format-justify-right.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/document-revert-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/go-first-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/zoom-in.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-orientation-landscape.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/font-button.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/go-jump-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/left-insensitive.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-yes.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/layout-rltb.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/media-skip-forward-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/go-last-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/edit-redo-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/printer-error.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/pagesetupdialog.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/list-and-tree.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-undelete-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/format-text-underline.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/help-about.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/edit-redo-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/layout-lrbt.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/media-record.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/progressbar.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/media-skip-backward-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-font.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/document-properties.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/go-next-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/format-justify-center.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/edit-undo-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-apply.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/text-x-generic.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-disconnect.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/tree-view-coordinates.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/format-indent-more-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-orientation-reverse-landscape.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/aboutdialog.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/edit-undo-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-orientation-portrait.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/format-indent-less-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/zoom-original.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/colorsel.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/statusbar.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/printer-warning.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/up.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/layout-btlr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/format-text-italic.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/view-restore.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/combo-box.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/go-home.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/tools-check-spelling.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/zoom-out.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/printer-info.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/figure-windowed-label.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/media-playback-stop.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/entry.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/dialog-warning.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/dialog-information.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/go-previous-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/go-first-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/help-contents.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-convert.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/media-seek-forward-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/go-up.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/window-close.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/gtk-orientation-reverse-portrait.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/link-button.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/format-indent-less-ltr.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/label.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/media-optical.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/edit-select-all.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/window.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/combo-box-entry.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/color-button.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/gtk/html/format-indent-more-rtl.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/libgail-util/html/right-insensitive.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/libgail-util/html/left.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/libgail-util/html/home.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/libgail-util/html/up-insensitive.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/libgail-util/html/right.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/libgail-util/html/left-insensitive.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/reference/libgail-util/html/up.png",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/faq/html/stylesheet-images/note.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/faq/html/stylesheet-images/next.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/faq/html/stylesheet-images/prev.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/faq/html/stylesheet-images/home.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/faq/html/stylesheet-images/tip.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/faq/html/stylesheet-images/toc-blank.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/faq/html/stylesheet-images/caution.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/faq/html/stylesheet-images/toc-minus.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/faq/html/stylesheet-images/warning.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/faq/html/stylesheet-images/up.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/faq/html/stylesheet-images/important.gif",
        "/tmp/vanessa/spack-stage/spack-stage-gtkplus-2.24.31-edwwtem5aurj6732jloybarkj2l73sw7/spack-src/docs/faq/html/stylesheet-images/toc-plus.gif"
    ],
    "total_files": 3341
}