{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/configure.ac": "# Process this file with autoconf to produce a configure script\n# Try to use version available on FC8\nAC_PREREQ(2.61)\n\ndnl ===========================================================================\ndnl Set Graphviz version information\n\n# set:\n#\tgraphviz_version_major\n#\tgraphviz_version_minor\n#\tgraphviz_version_micro\n#\tgraphviz_collection\n#\tgraphviz_version_date\n#\tgraphviz_change_date\n#\tgraphviz_author_name\n#\tgraphviz_author_email\n#\tgraphviz_version_commit\nm4_include(./version.m4)\n\nAC_INIT([graphviz],[graphviz_version_major().graphviz_version_minor().graphviz_version_micro()],[http://www.graphviz.org/])\n\nGRAPHVIZ_VERSION_MAJOR=graphviz_version_major()\nGRAPHVIZ_VERSION_MINOR=graphviz_version_minor()\nGRAPHVIZ_VERSION_MICRO=graphviz_version_micro()\n\n# NB: \"stable\" or \"development\"\nGRAPHVIZ_COLLECTION=graphviz_collection()\n\n# NB: date/time of last commit - or \"0\"\nGRAPHVIZ_VERSION_DATE=graphviz_version_date()\n\nGRAPHVIZ_GIT_DATE=graphviz_git_date()\nGRAPHVIZ_AUTHOR_NAME=graphviz_author_name()\nGRAPHVIZ_AUTHOR_EMAIL=graphviz_author_email()\nGRAPHVIZ_CHANGE_DATE=graphviz_change_date()\n\n# NB: git commit hash of last commit\nGRAPHVIZ_VERSION_COMMIT=graphviz_version_commit()\n\nGRAPHVIZ_SOURCES=graphviz/$GRAPHVIZ_COLLECTION/SOURCES\n\nAC_SUBST([GRAPHVIZ_VERSION_MAJOR])\nAC_SUBST([GRAPHVIZ_VERSION_MINOR])\nAC_SUBST([GRAPHVIZ_VERSION_MICRO])\nAC_SUBST([GRAPHVIZ_VERSION_DATE])\nAC_SUBST([GRAPHVIZ_GIT_DATE])\nAC_SUBST([GRAPHVIZ_AUTHOR_NAME])\nAC_SUBST([GRAPHVIZ_AUTHOR_EMAIL])\nAC_SUBST([GRAPHVIZ_CHANGE_DATE])\nAC_SUBST([GRAPHVIZ_VERSION_COMMIT])\nAC_SUBST([GRAPHVIZ_COLLECTION])\nAC_SUBST([GRAPHVIZ_SOURCES])\n\ndnl ===========================================================================\n\n# libtool shared library version for plugins\n\n# Increment if the interface has additions, changes, removals.\nGVPLUGIN_CURRENT=6\n\n# Increment any time the source changes; set to\n# 0 if you increment CURRENT\nGVPLUGIN_REVISION=0\n\n# Increment if any interfaces have been added; set to 0\n# if any interfaces have been removed. removal has\n# precedence over adding, so set to 0 if both happened.\nGVPLUGIN_AGE=0\n\nGVPLUGIN_CONFIG_FILE=\"config$GVPLUGIN_CURRENT\"\nAC_DEFINE_UNQUOTED(GVPLUGIN_CONFIG_FILE,\"$GVPLUGIN_CONFIG_FILE\",[Filename for plugin configuration file.])\nAC_SUBST([GVPLUGIN_CONFIG_FILE])\n\nGVPLUGIN_VERSION_INFO=\"$GVPLUGIN_CURRENT:$GVPLUGIN_REVISION:$GVPLUGIN_AGE\"\nAC_SUBST([GVPLUGIN_VERSION_INFO])\n\ndnl ===========================================================================\n\n\nAC_CONFIG_SRCDIR([configure.ac])\nAC_CONFIG_AUX_DIR([config])\nAC_CONFIG_MACRO_DIR([m4])\n\ndnl -----------------------------------\ndnl Checks for system type\n\nAC_CANONICAL_HOST\n\n# This nonsense drives me crazy!!\ncase \"${host_os}\" in\n  *irix* | *nonstopux* )\n    GVPLUGIN_VERSION=`expr $GVPLUGIN_CURRENT + 1`\n    ;;\n  * )\n    GVPLUGIN_VERSION=$GVPLUGIN_CURRENT\n    ;;\nesac\nAC_DEFINE_UNQUOTED(GVPLUGIN_VERSION,$GVPLUGIN_VERSION,[Compatibility version number for plugins.])\nAC_SUBST([GVPLUGIN_VERSION])\n\nGRAPHVIZ_VERSION_BUILD=0\nGRAPHVIZ_VERSION_REVISION=0\ncase \"${host_os}\" in\n  *uwin* | *cygwin* | *mingw32* )\n\t# Windows version numbers\n\t# For the build number: months since Jan 2000, day of month from the timestamp\n\t# For the revision number: hour, minute from the timestamp\n\tif test $GRAPHVIZ_VERSION_MICRO != \"0\"; then\n\t\tGRAPHVIZ_VERSION_BUILD=`expr \\( ${GRAPHVIZ_VERSION_MICRO:0:4} - 2000 \\) \\* 12 + ${GRAPHVIZ_VERSION_MICRO:4:2}`${GRAPHVIZ_VERSION_MICRO:6:2}\n\t\tGRAPHVIZ_VERSION_REVISION=${GRAPHVIZ_VERSION_MICRO:9:4}\n\tfi\n\t;;\nesac\nAC_SUBST([GRAPHVIZ_VERSION_BUILD])\nAC_SUBST([GRAPHVIZ_VERSION_REVISION])\n\nAC_ARG_VAR(LIBPOSTFIX, [subscript to lib, e.g. \"/64\" for \"/usr/lib/64\" on Solaris])\nAC_ARG_VAR(INTGOSIZE, [integer size for go, 32 or 64])\nAC_ARG_VAR(RUBY_VER, [version number of the ruby package])\n\nINTGOSIZE=32\nif test -z \"$LIBPOSTFIX\"; then\n  case \"${host_os}\" in\n    *linux* )\n      case \"${host_cpu}\" in\n        aarch64 | powerpc64 | powerpc64le | s390x | x86_64 | sparc64 | mips64* | riscv64 | e2k )\n          LIBPOSTFIX=\"64\"\n          INTGOSIZE=64\n          ;;\n      esac\n      ;;\n    *solaris* )\n      case \"${host_cpu}\" in\n        x86_64 | sparc64 )\n          LIBPOSTFIX=\"/64\"\n          INTGOSIZE=64\n          ;;\n      esac\n      ;;\n  esac\nfi\n\nUWIN=no\nCYGWIN=no\nMINGW32=no\nDARWIN9=no\ncase \"${host_os}\" in\n  *uwin* )\n\tUWIN=yes\n\tDEFAULT_FONTPATH=\"C:/WINDOWS/FONTS;C:/WINNT/Fonts;C:/winnt/fonts\"\n\tPATHSEPARATOR=\";\"\n\tBROWSER=\"xdg-open\"\n\tJSHEXT=so\n\t;;\n  *cygwin* )\n\tCYGWIN=yes\n\tDEFAULT_FONTPATH=\"C:/WINDOWS/FONTS;C:/WINNT/Fonts;C:/winnt/fonts\"\n\tPATHSEPARATOR=\";\"\n\tBROWSER=\"xdg-open\"\n\tJSHEXT=so\n\t;;\n  *mingw32* )\n\tMINGW32=yes\n\tDEFAULT_FONTPATH=\"C:/WINDOWS/FONTS;C:/WINNT/Fonts;C:/winnt/fonts\"\n\tPATHSEPARATOR=\":\"\n\tBROWSER=\"xdg-open\"\n\tJSHEXT=so\n\t;;\n  *darwin* )\n\tDARWIN=yes\n\tAC_DEFINE_UNQUOTED(DARWIN,1,[Define for any Darwin-based OS.])\n\tDEFAULT_FONTPATH=\"~/Library/Fonts:/Library/Fonts:/Network/Library/Fonts:/System/Library/Fonts\"\n\tPATHSEPARATOR=\":\"\n\tBROWSER=\"open\"\n\tJSHEXT=jnilib\n\tAC_DEFINE_UNQUOTED(DARWIN_DYLIB,\"$DARWIN_DYLIB\",[Define for Darwin-style shared library names.])\n\tcase \"${host_os}\" in\n\t*darwin9*)\n\t\tDARWIN9=yes\n\t\t;;\n        esac\n\tcase \"${host_os}\" in\n\t*darwin9.4* | *darwin9.5* )\n\t\tEXTRA_SMYRNA_LDFLAGS=\"-dylib_file /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib:/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\"\n\t\t;;\n        esac\n\t;;\n  * ) # This sucks!  Whatever happened to standards for file system layout?   (Good job its no longer used unless fontconfig is unavailable.)\n\tDEFAULT_FONTPATH=\"/usr/share/fonts/sun/TrueType:/usr/share/fonts/TrueType:/usr/X11/lib/X11/fonts/TrueType:/usr/share/fonts/sun/Type1:/usr/openwin/lib/X11/fonts/Type1:/usr/share/fonts/X11/Type1:/usr/share/fonts/default/Type1:/usr/X11R6/lib/X11/fonts/TrueType:/usr/X11R6/lib/X11/fonts/truetype:/usr/X11R6/lib/X11/fonts/TTF:/usr/share/fonts/truetype:/usr/openwin/lib/X11/fonts/TrueType:/usr/X11R6/lib/X11/fonts/Type1:/usr/common/share/fonts/ttf\";\n\tPATHSEPARATOR=\":\"\n\tBROWSER=\"xdg-open\"\n\tJSHEXT=so\n\t;;\nesac\nAC_SUBST([CYGWIN])\nAC_SUBST([MINGW32])\nAC_SUBST([DARWIN])\nAC_SUBST([DARWIN9])\nAC_SUBST([EXTRA_SMYRNA_LDFLAGS])\nJNI_EXTRA_LDFLAGS=\"-shrext .$JSHEXT\"\nAC_SUBST([JNI_EXTRA_LDFLAGS])\nAC_SUBST([JSHEXT])\nAC_DEFINE_UNQUOTED(DEFAULT_FONTPATH,\"$DEFAULT_FONTPATH\",[Path to TrueType fonts.])\nAC_DEFINE_UNQUOTED(PATHSEPARATOR,\"$PATHSEPARATOR\",[Path separator character.])\nAM_CONDITIONAL(WITH_WIN32, [test \"x$UWIN\" = \"xyes\" -o \"x$CYGWIN\" = \"xyes\" -o \"x$MINGW32\" = \"xyes\"])\nAM_CONDITIONAL(WITH_DARWIN9, [test \"x$DARWIN9\" = \"xyes\"])\n\nDEFAULT_DPI=96\nAC_DEFINE_UNQUOTED(DEFAULT_DPI,$DEFAULT_DPI,Default DPI.)\nAC_DEFINE_UNQUOTED(BROWSER,\"$BROWSER\",[Command to open a browser on a URL])\n\nAM_INIT_AUTOMAKE([no-define subdir-objects tar-ustar])\n\n# Suppress verbose compile lines\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n\nAC_CONFIG_HEADERS([config.h])\n\n# put BUILDDATE in its own file so that only targets that use it get rebuilt\necho \"#define BUILDDATE \\\"$GRAPHVIZ_VERSION_DATE\\\"\" > builddate.h\n\nAC_PREFIX_DEFAULT([/usr/local])\nif test \"x${prefix}\" = \"xNONE\"; then\n\tprefix=${ac_default_prefix}\n\tAC_SUBST([prefix])\nfi\n\n# automatically check for other dependencies in $prefix first\nif test \"x${prefix}\" != \"x/usr\"; then\n\tCPPFLAGS=\"$CPPFLAGS -I${prefix}/include\"\n\tLDFLAGS=\"$LDFLAGS -L${prefix}/lib\"\n\tPKG_CONFIG_PATH=\"$prefix/lib/pkgconfig$PATHSEPARATOR$PKG_CONFIG_PATH\"\n\texport PKG_CONFIG_PATH\nfi\n\ndnl -----------------------------------\n# Static/Shared binaries\n\nAC_ARG_ENABLE(static,\n        [AS_HELP_STRING([--enable-static],[build static executable])])\nif test \"x$enable_static\" = \"xyes\"; then\n\tAC_ENABLE_STATIC\n        use_static=\"Yes\"\nelse\n\tAC_DISABLE_STATIC\n        use_static=\"No (disabled by default)\"\nfi\nAM_CONDITIONAL(ENABLE_STATIC, [test \"x$enable_static\" = \"xyes\"])\n\nAC_ARG_ENABLE(shared,\n        [AS_HELP_STRING([--enable-shared],[build shared executable])])\nif test \"x$enable_shared\" != \"xno\"; then\n\tAC_ENABLE_SHARED\n        use_shared=\"Yes\"\n\tcase \"${host_os}\" in\n  \t\t*uwin* | *cygwin* | *mingw32* )\n\t\t\tAC_DEFINE_UNQUOTED(GVDLL,1, [Define for DLLs on Windows.])\n\t\t;;\n\tesac\n\nelse\n        use_shared=\"No (disabled)\"\n\tAC_DISABLE_SHARED\nfi\nAM_CONDITIONAL(ENABLE_SHARED, [test \"x$enable_shared\" = \"xyes\"])\n\ndnl -----------------------------------\ndnl checks for various programs\n\nAC_SEARCH_LIBS([strerror],[cposix])\nAM_PROG_LEX\nAC_PROG_YACC\nAC_PROG_AWK\nAC_PROG_INSTALL\nAC_PROG_LN_S\nAC_PROG_LIBTOOL\n\n# prefer GNU variants over, say, Oracle's or Apples\nAC_CHECK_PROGS(SED,gsed sed,false)\nAC_CHECK_PROGS(SORT,gsort sort,false)\n\nAC_CHECK_PROG(EGREP,egrep,egrep,false)\nAC_CHECK_PROG(GROFF,groff,groff,false)\nAC_CHECK_PROGS(PS2PDF,ps2pdf pstopdf,false)\nAM_CONDITIONAL(HAVE_PS2PDF,[test \"x$PS2PDF\" != xfalse])\n\nAC_ARG_ENABLE([man-pdfs],\n  AS_HELP_STRING([--enable-man-pdfs],[Generate PDFs of man pages (default: auto)]),\n  [enable_man_pdfs=$enableval],\n  [enable_man_pdfs=$HAVE_PS2PDF])\nAM_CONDITIONAL(ENABLE_MAN_PDFS,[test \"x$enable_man_pdfs\" = \"xyes\"])\n\nPKG_PROG_PKG_CONFIG\n\nAC_ARG_WITH(tclsh,\n  [AS_HELP_STRING([--with-tclsh=PROG],[use a specific tclsh])],\n  TCLSH=$withval,)\n\nif test \"x$TCLSH\" = \"x\"; then\n  AC_PATH_PROGS(TCLSH,[tclsh8.6 tclsh8.5 tclsh8.4 tclsh8.3 tclsh],[],[/usr/bin])\n#  if test \"x$TCLSH\" = \"x\"; then\n#    AC_MSG_ERROR([Unable to find a tclsh. Tclsh is a required program for building graphviz, independent of wether tcl-based graphviz products are built])\n#    use_tcl=\"No (tclsh unavailable)\"\n#  fi\nfi\n\n\ndnl -----------------------------------\ndnl checks for compilers\n\nAM_PROG_CC_C_O\nAC_PROG_CC_C99\nAC_PROG_CXX\nAC_PROG_OBJC\n\nAC_C_INLINE\n\ndnl ===========================================================================\ndnl Set GCC compiler flags\n\nif [test \"${GCC}\" == \"yes\"]\nthen\n  # Enable common warnings flags\n  CFLAGS=\"${CFLAGS} -Wall\"\n\n  # Enable common extra flags\n  CFLAGS=\"${CFLAGS} -Wextra\"\n\n  # Enable specific warning flags not included by -Wall or -Wextra\n  CFLAGS=\"${CFLAGS} -Wmissing-include-dirs -Wswitch-default -Wfloat-equal -Wundef -Wshadow -Wpointer-arith -Wbad-function-cast -Wcast-qual -Wconversion -Wstrict-prototypes -Wmissing-prototypes -Wnested-externs\"\n\n # if C99, then enable additional warnings\n# if [test \"${ac_cv_prog_cc_c99}\" != \"no\"]\n# then\n    # FIXME - not available on centos[56]: gcc-4.1.2, gcc-4.4.7\n    # CFLAGS=\"${CFLAGS} -Wdouble-promotion -Wtrampolines -Wlogical-op\"\n#  fi\nfi\n# Workaround for native compilers\n#  HP  : http://bugs.gnome.org/db/31/3163.html\n#  DEC : Enable NaN/Inf\n\nif test \"${GCC}\" != \"yes\" ; then\n    AC_CHECK_PROGS(RC,rc,false)\n    case \"${build}\" in\n        *-*-hpux* )\n\t    CFLAGS=\"${CFLAGS} -Wp,-H30000\"\n            ;;\n        *-dec-osf* )\n            CFLAGS=\"${CFLAGS} -ieee\"\n            ;;\n\t*-apple-darwin* )\n\t    CFLAGS=\"${CFLAGS} -fno-common\"\n\t    LDFLAGS=\"${LDFLAGS} -Wl,-headerpad_max_install_names\"\n\t    ;;\n\t*-sgi-irix* )\n\t    ;;\n    esac\nelse\n    AC_CHECK_PROGS(RC,[windres ${host}-windres],false)\n    case \"${CC}\" in\n\t*icc* )\n\t    # -Wall causes relocation errors with icc\n\t    CFLAGS=\"${CFLAGS} -wd269\"\n\t    # icc doesn't like -pipe\n\t    CFLAGS=`echo ${CFLAGS} | sed 's/ -pipe//'`\n\t    # icc doesn't like -ffast-math\n\t    CFLAGS=`echo ${CFLAGS} | sed 's/ -ffast-math//'`\n\t    ;;\n\t* )\n\t    case \"${build}\" in\n\t    *-dec-osf* )\n\t\t\tCFLAGS=\"${CFLAGS} -mieee -Wall\"\n\t        ;;\n\t    *alpha*-*-linux* )\n            CFLAGS=\"${CFLAGS} -mieee -Wall\"\n            ;;\n\t    *-apple-darwin* )\n\t        CFLAGS=\"${CFLAGS} -fno-common -Wall\"\n\t        LDFLAGS=\"${LDFLAGS} -Wl,-headerpad_max_install_names\"\n\t        ;;\n\t    *-freebsd* )\n\t        CFLAGS=\"${CFLAGS} -Wstrict-prototypes -Wpointer-arith -Wall -ffast-math\"\n\t\t    ;;\n\t    * )\n\t        CFLAGS=\"${CFLAGS} -Wno-unknown-pragmas -Wstrict-prototypes -Wpointer-arith -Wall -ffast-math\"\n\t        ;;\n\t    esac\n\t    ;;\n    esac\nfi\n# -ffast-math is incompatible with FP error trapping\n#     ref: https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=175793\nif `echo ${CFLAGS} | $EGREP ffast-math >/dev/null`; then\n    AC_DEFINE_UNQUOTED(NO_FPERR,1,[Define if no fpu error exception handling is required.])\nfi\n\nAM_CONDITIONAL(RC_IS_RC, [test \"x$RC\" = \"xrc\"])\nAM_CONDITIONAL(RC_IS_WINDRES, [test \"x$RC\" = \"xwindres\"])\n\n# debug\nAC_ARG_ENABLE([debug],\n\tAS_HELP_STRING([--enable-debug],[Compile the debug version (default: disabled)]),\n\t[enable_debug=$enableval],\n\t[enable_debug=no])\nAM_CONDITIONAL([DEBUG], [test $enable_debug = \"yes\"])\nif test \"x$enable_debug\" = \"xyes\"; then\n  changequote({,})\n  CFLAGS=`echo \"$CFLAGS\" | $SED -e 's/-O[0-9s]*//g'`\n  CXXFLAGS=`echo \"$CXXFLAGS\" | $SED -e 's/-O[0-9s]*//g'`\n  CFLAGS=`echo \"$CFLAGS\" | $SED -e 's/-g//g'`\n  CXXFLAGS=`echo \"$CXXFLAGS\" | $SED -e 's/-g//g'`\n  changequote([,])\n  dnl add -O0 only if GCC or ICC is used\n  if test \"$GCC\" = \"yes\" || test \"$ICC\" = \"yes\"; then\n    CFLAGS=\"$CFLAGS -g -O0 -Wall\"\n    CXXFLAGS=\"$CXXFLAGS -g -O0 -Wall\"\n  fi\nfi\n\ndnl -----------------------------------\ndnl Check for various typedefs and provide substitutes if they do not exist.\n\nAC_TYPE_PID_T\nAC_TYPE_SSIZE_T\nAC_TYPE_UID_T\n\nAC_CHECK_TYPES([\n\toff64_t,\n\tstruct stat64,\n])\n\ndnl -----------------------------------\ndnl Checks for header files\n\n# AC_HEADER_STDC\nAC_CHECK_HEADERS( \\\n\tfcntl.h search.h stropts.h termios.h \\\n\tunistd.h strings.h stat.h vfork.h \\\n\tsys/time.h sys/types.h sys/select.h sys/socket.h \\\n\tsys/stat.h sys/mman.h sys/vfork.h \\\n\tsys/ioctl.h sys/inotify.h)\n\n# Internationalization macros\n# AM_GNU_GETTEXT\n\ndnl -----------------------------------\ndnl Checks for -lm library\n\nsave_LIBS=$LIBS\nAC_CHECK_LIB(m, main, [MATH_LIBS=\"-lm\"])\nAC_SUBST([MATH_LIBS])\n\n# Check for functions that might need -lm\nLIBS=\"$LIBS $MATH_LIBS\"\nAC_CHECK_FUNCS([sincos])\n\nLIBS=$save_LIBS\n\n# -----------------------------------\n\n# Checks for library functions\nAC_CHECK_FUNCS([lrand48 drand48 srand48 setmode setenv getenv \\\n\tcbrt vsnprintf mallopt mallinfo mstats getpagesize \\\n  ftruncate lseek64 stat64 vfork unlink waitpid select])\n\nAC_REPLACE_FUNCS([strcasestr])\n\ndnl -----------------------------------\ndnl libtool ltdl on-demand plugin loading\n\nsave_LIBS=\"$LIBS\"\nLT_INIT([dlopen])\nLT_CONFIG_LTDL_DIR([libltdl])\nLTDL_INIT\n\nAC_ARG_ENABLE(ltdl,\n  [AS_HELP_STRING([--enable-ltdl],[support on-demand plugin loading])])\nif test \"x$enable_ltdl\" != \"xno\"; then\n  AC_DEFINE(ENABLE_LTDL,1,[Define if you want on-demand plugin loading])\n  use_ltdl=\"Yes\"\n  # The lt_dladvise_init symbol was added with libtool-2.2\n  if test \"x$with_included_ltdl\" != \"xyes\"; then\n    save_CFLAGS=\"$CFLAGS\"\n    save_LDFLAGS=\"$LDFLAGS\"\n    CFLAGS=\"$CFLAGS $LTDLINCL\"\n    LDFLAGS=\"$LDFLAGS $LIBLTDL\"\n    AC_CHECK_LIB([ltdl], [lt_dladvise_init], [],\n\t[AC_MSG_ERROR([installed libltdl is too old])])\n    LDFLAGS=\"$save_LDFLAGS\"\n    CFLAGS=\"$save_CFLAGS\"\n  else\n    if test \"x$DARWIN9\" = \"xyes\"; then\n      LIBLTDL_LDFLAGS=\"-Wl,-unexported_symbol,_lt_*\"\n    fi\n  fi\nelse\n  use_ltdl=\"No (disabled)\"\nfi\nAM_CONDITIONAL(ENABLE_LTDL, [test \"x$enable_ltdl\" != \"xno\"])\nAC_SUBST([INCLTDL])\nAC_SUBST([LIBLTDL])\nAC_SUBST([LIBLTDL_LDFLAGS])\nLIBS=\"$save_LIBS\"\n\ndnl -----------------------------------\ndnl Checks for X header files.\n\nAC_PATH_XTRA\nif test \"x$no_x\" = \"xyes\"; then\n  use_xlib=\"No (disabled or unavailable)\"\n  AC_MSG_WARN([X11 not available.])\n  X_SUBDIRS=\"\"\nelse\n  use_xlib=\"Yes\"\n#no x11.pc on centos4\n#  PKG_CHECK_MODULES(X11, [x11])\n  PKG_CHECK_MODULES(XRENDER, [xrender],HAVE_XRENDER=\"yes\" ,HAVE_XRENDER=\"no\")\nfi\nAM_CONDITIONAL(WITH_X, [test \"x$use_xlib\" = \"xYes\"])\nAM_CONDITIONAL(WITH_XRENDER, [test \"x$,HAVE_XRENDER\" = \"xyes\"])\n\ndnl -----------------------------------\ndnl check for SWIG - needed for script-language bindings\n\nAC_ARG_ENABLE(swig,\n  [AS_HELP_STRING([--enable-swig=yes],[swig-generated language bindings])],\n  [],[enable_swig=yes])\n\nif test \"x$enable_swig\" != \"xyes\"; then\n  use_swig=\"No (disabled)\"\nelse\n  AC_CHECK_PROG(SWIG,swig,swig)\n  if test \"x$SWIG\" = \"x\"; then\n    use_swig=\"No (swig not available)\"\n  else\n    SWIG_VERSION=`$SWIG -version 2>&1 | $EGREP Version | cut -d ' ' -f 3`\n    AC_SUBST([SWIG_VERSION])\n    SWIG_VERSION_MAJOR=`echo $SWIG_VERSION | cut -d '.' -f 1`\n    SWIG_VERSION_MINOR=`echo $SWIG_VERSION | cut -d '.' -f 2`\n    SWIG_VERSION_MICRO=`echo $SWIG_VERSION | cut -d '.' -f 3`\n    if test $SWIG_VERSION_MAJOR -lt 2; then\n      if test $SWIG_VERSION_MAJOR -lt 1; then\n        SWIG=\n      else\n        if test $SWIG_VERSION_MINOR -lt 3; then\n          SWIG=\n        else\n          # EL5 has swig-1.3.29 which does not define SWIGJAVA\n          if test $SWIG_VERSION_MICRO -lt 40; then\n            SWIGJAVA_CPPFLAGS=-DSWIGJAVA\n            AC_SUBST([SWIGJAVA_CPPFLAGS])\n          fi\n        fi\n      fi\n    fi\n    if test \"x$SWIG\" = \"x\"; then\n      AC_MSG_WARN([The version of swig is too old.])\n      use_swig=\"No (swig too old)\"\n    else\n      use_swig=\"Yes\"\n    fi\n  fi\nfi\nAM_CONDITIONAL(WITH_SWIG, [test \"x$SWIG\" != \"x\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for C#\n\nAC_ARG_ENABLE(sharp,\n  [AS_HELP_STRING([--enable-sharp=yes],[C# language bindings])],\n  [],[enable_sharp=yes])\n\nif test \"x$enable_sharp\" != \"xyes\"; then\n  use_sharp=\"No (disabled)\"\nelse\n  if test \"x$use_swig\" != \"xYes\"; then\n    use_sharp=\"No (swig not available)\"\n  else\n    if test `$SWIG -help 2>&1 | $EGREP -c '\\-csharp *- Generate'` = 0; then\n      use_sharp=\"No (swig does not support -csharp option)\"\n    else\n      AC_CHECK_PROG(MCS,mcs,mcs)\n      if test \"x$MCS\" = \"x\"; then\n        use_sharp=\"No (mcs not available)\"\n      else\n        use_sharp=\"Yes\"\n        SHARP_INCLUDES=\n        SHARP_LIBS=\n        AC_SUBST([SHARP_INCLUDES])\n        AC_SUBST([SHARP_LIBS])\n      fi\n    fi\n  fi\nfi\nAM_CONDITIONAL(WITH_SHARP, [test \"x$use_sharp\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for D (disabled by default - incomplete)\n\nAC_ARG_ENABLE(d,\n  [AS_HELP_STRING([--enable-d=no],[d language bindings])],\n  [], [enable_d=no])\n\nif test \"x$enable_d\" != \"xyes\"; then\n  use_d=\"No (disabled by default - incomplete\"\nelse\n  if test \"x$use_swig\" != \"xYes\"; then\n    use_d=\"No (swig not available)\"\n  else\n    if test `$SWIG -help 2>&1 | $EGREP -c '\\-d* *- Generate'` = 0 ; then\n      use_d=\"No (swig does not support -d option)\"\n    else\n      AC_CHECK_PROG(D,gdc,ldc)\n      if test \"x$D\" = \"x\"; then\n        use_d=\"No (D compiler not available)\"\n      else\n        D_INCLUDES=\n#        D_INSTALL_DIR=\"/usr/lib${LIBPOSTFIX}/d/modules\"\n#        D_INSTALL_DATADIR=\"/usr/share/d\"\n        D_LIBS=\n#        save_CPPFLAGS=$CPPFLAGS\n#        CPPFLAGS=\"$CPPFLAGS $D_INCLUDES\"\n#        AC_CHECK_HEADER(d.h,,[\n#          use_d=\"No (missing header)\"\n#          D=\n#        ])\n#        CPPFLAGS=$save_CPPFLAGS\n\tif test \"x$D\" != \"x\"; then\n\t  use_d=\"Yes\"\n#          AC_SUBST([D_INSTALL_DATADIR])\n#          AC_SUBST([D_INSTALL_DIR])\n          AC_SUBST([D_INCLUDES])\n          AC_SUBST([D_LIBS])\n          AC_SUBST([INTDSIZE])\n        fi\n      fi\n    fi\n  fi\nfi\nAM_CONDITIONAL(WITH_D, [test \"x$use_d\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for GO\n\nAC_ARG_ENABLE(go,\n  [AS_HELP_STRING([--enable-go=yes],[go language bindings])],\n  [], [enable_go=yes])\n\nif test \"x$enable_go\" != \"xyes\"; then\n  use_go=\"No (disabled)\"\nelse\n  if test \"x$use_swig\" != \"xYes\"; then\n    use_go=\"No (swig not available)\"\n  else\n    if test `$SWIG -help 2>&1 | $EGREP -c '\\-go* *- Generate'` = 0 ; then\n      use_go=\"No (swig does not support -go option)\"\n    else\n      AC_CHECK_PROG(GO,go,go)\n      if test \"x$GO\" = \"x\"; then\n        use_go=\"No (GO compiler not available)\"\n      else\n        GO_INCLUDES=\n#        GO_INSTALL_DIR=\"/usr/lib${LIBPOSTFIX}/go/modules\"\n#        GO_INSTALL_DATADIR=\"/usr/share/go\"\n        GO_LIBS=\n#        save_CPPFLAGS=$CPPFLAGS\n#        CPPFLAGS=\"$CPPFLAGS $GO_INCLUDES\"\n#        AC_CHECK_HEADER(go.h,,[\n#          use_go=\"No (missing header)\"\n#          GO=\n#        ])\n#        CPPFLAGS=$save_CPPFLAGS\n\tif test \"x$GO\" != \"x\"; then\n\t  use_go=\"Yes\"\n#          AC_SUBST([GO_INSTALL_DATADIR])\n#          AC_SUBST([GO_INSTALL_DIR])\n          AC_SUBST([GO_INCLUDES])\n          AC_SUBST([GO_LIBS])\n          AC_SUBST([INTGOSIZE])\n        fi\n      fi\n    fi\n  fi\nfi\nAM_CONDITIONAL(WITH_GO, [test \"x$use_go\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for GUILE\n\nAC_ARG_ENABLE(guile,\n  [AS_HELP_STRING([--enable-guile=yes],[guile language bindings])],\n  [],[enable_guile=yes])\n\nif test \"x$enable_guile\" != \"xyes\"; then\n  use_guile=\"No (disabled)\"\nelse\n  if test \"x$use_swig\" != \"xYes\"; then\n    use_guile=\"No (swig not available)\"\n  else\n    if test `$SWIG -help 2>&1 | $EGREP -c '\\-guile *- Generate'` = 0; then\n      use_guile=\"No (swig does not support -guile option)\"\n    else\n      AC_CHECK_PROGS(GUILE,guile2 guile1.8 guile)\n      if test \"x$GUILE\" = \"x\"; then\n        use_guile=\"No (guile not available)\"\n      else\n        [GUILE_VERSION=`$GUILE --version | sed -n '1 s/^.* \\+\\([0-9\\.]\\+\\)$/\\1/ p'`]\n        GUILE_VERSION_MAJOR=`echo $GUILE_VERSION | cut -d '.' -f 1`\n        GUILE_VERSION_MINOR=`echo $GUILE_VERSION | cut -d '.' -f 2`\n        if test 0$GUILE_VERSION_MAJOR -lt 2; then\n          if test 0$GUILE_VERSION_MAJOR -lt 1; then\n            GUILE=\n          else\n            if test 0$GUILE_VERSION_MINOR -lt 4; then\n\t      GUILE=\n            fi\n          fi\n        fi\n        if test \"x$GUILE\" = \"x\"; then\n\t  use_guile=\"No (guile is too old)\"\n        else\n\t  GUILE_INCLUDES=$(guile-config compile)\n\t  GUILE_LIBS=$(guile-config link)\n\t  # don't die if PKG_CHECK_MODULES not available - el4, el5\n          PKG_CHECK_MODULES([GUILE],\n\t\t[guile-2.0 >= \"$GUILE_VERSION_MAJOR.$GUILE_VERSION_MINOR\"],\n\t\tGUILE_INCLUDES=\"$GUILE_CFLAGS\",\n          \t[\n\t\t\tPKG_CHECK_MODULES([GUILE],\n\t\t\t[guile-1.8 >= \"$GUILE_VERSION_MAJOR.$GUILE_VERSION_MINOR\"],\n\t\t\tGUILE_INCLUDES=\"$GUILE_CFLAGS\",\n\t\t\tfalse)\n\t\t])\n          ac_save_CFLAGS=\"$CFLAGS\"\n          ac_save_CPPFLAGS=\"$save_CPPFLAGS\"\n          CFLAGS=\"$CFLAGS $GUILE_INCLUDES\"\n          CPPFLAGS=\"$CPPFLAGS $GUILE_INCLUDES\"\n          AC_CHECK_HEADER(libguile.h,,[\n            use_guile=\"No (guile header missing)\"\n            GUILE=\n          ])\n          CFLAGS=\"$ac_save_CFLAGS\"\n          CPPFLAGS=\"$ac_save_CPPFLAGS\"\n          if test \"x$GUILE\" != \"x\"; then\n\t    use_guile=\"Yes\"\n            AC_SUBST([GUILE_INCLUDES])\n            AC_SUBST([GUILE_LIBS])\n          fi\n        fi\n      fi\n    fi\n  fi\nfi\nAM_CONDITIONAL(WITH_GUILE, [test \"x$use_guile\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for IO   (disabled until supported by swig)\n\nAC_ARG_ENABLE(io,\n  [AS_HELP_STRING([--enable-io=no],[io language bindings])],\n  [], [enable_io=no])\n\nif test \"x$enable_io\" != \"xyes\"; then\n  use_io=\"No (disabled by default - no swig support yet)\"\nelse\n  if test \"x$use_swig\" != \"xYes\"; then\n    use_io=\"No (swig not available)\"\n  else\n    if test `$SWIG -help 2>&1 | $EGREP -c '\\-io *- Generate'` = 0; then\n      use_io=\"No (swig does not support -io option)\"\n    else\n      AC_CHECK_PROG(IO,io,io)\n      if test \"x$IO\" = \"x\"; then\n        use_io=\"No (io not available)\"\n      else\n        use_io=\"Yes\"\n        IO_INCLUDES=\n        IO_LIBS=\n        AC_SUBST([IO_INCLUDES])\n        AC_SUBST([IO_LIBS])\n      fi\n    fi\n  fi\nfi\nAM_CONDITIONAL(WITH_IO, [test \"x$use_io\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for JAVA\n\nAC_ARG_ENABLE(java,\n  [AS_HELP_STRING([--enable-java=yes],[java language bindings])],\n  [], [enable_java=yes])\n\nif test \"x$enable_java\" != \"xyes\"; then\n  use_java=\"No (disabled)\"\nelse\n  if test \"x$use_swig\" != \"xYes\"; then\n    use_java=\"No (swig not available)\"\n  else\n    if test `$SWIG -help 2>&1 | $EGREP -c '\\-java *- Generate'` = 0; then\n      use_java=\"No (swig does not support -java option)\"\n    else\n      AC_CHECK_PROG(JAVA,java,java)\n      if test \"x$JAVA\" = \"x\"; then\n        use_java=\"No (java not available)\"\n      else\n        for try_java_include in \\\n          /System/Library/Frameworks/JavaVM.framework/Headers \\\n          /usr/lib${LIBPOSTFIX}/jvm/java/include \\\n          /usr/lib${LIBPOSTFIX}/jvm/java/include/linux \\\n          /usr/lib${LIBPOSTFIX}/jvm/default-java/include \\\n          /usr/lib${LIBPOSTFIX}/jvm/default-java/include/linux \\\n          /usr/lib/jvm/java/include \\\n          /usr/lib/jvm/java/include/linux \\\n          /usr/lib/jvm/default-java/include \\\n          /usr/lib/jvm/default-java/include/linux \\\n          /etc/java-config-2/current-system-vm/include \\\n          /etc/java-config-2/current-system-vm/include/linux \\\n          /etc/java-config-2/current-system-vm/include/freebsd\n        do\n          if test -d \"$try_java_include\" ; then\n            JAVA_INCLUDES=\"$JAVA_INCLUDES -I${try_java_include}\"\n          fi\n        done\n        JAVA_LIBS=\n        AC_ARG_WITH(javaincludedir,\n           [AS_HELP_STRING([--with-javaincludedir=DIR],[use JAVA includes from DIR])],\n          [JAVA_INCLUDES=\"-I$withval\"])\n        AC_ARG_WITH(javalibdir,\n          [AS_HELP_STRING([--with-javalibdir=DIR],[use JAVA libraries from DIR])],\n          [JAVA_LIBS=\"$withval\"])\n\tsave_CPPFLAGS=$CPPFLAGS\n        CPPFLAGS=\"$CPPFLAGS $JAVA_INCLUDES\"\n        AC_CHECK_HEADER(jni.h,,[\n            use_java=\"No (missing header)\"\n  \t    JAVA=\n        ])\n        CPPFLAGS=\"$save_CPPFLAGS\"\n        if test \"x$JAVA\" != \"x\"; then\n          use_java=\"Yes\"\n\t  AC_SUBST([JAVA_INCLUDES])\n          AC_SUBST([JAVA_LIBS])\n        fi\n      fi\n    fi\n  fi\nfi\nAM_CONDITIONAL(WITH_JAVA, [test \"x$use_java\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for JAVASCRIPT (disabled by default - incomplete)\n\nAC_ARG_ENABLE(javascript,\n  [AS_HELP_STRING([--enable-javascript=no],[d language bindings])],\n  [], [enable_javascript=no])\n\nif test \"x$enable_javascript\" != \"xyes\"; then\n  use_javascript=\"No (disabled by default - incomplete\"\nelse\n  if test \"x$use_swig\" != \"xYes\"; then\n    use_javascript=\"No (swig not available)\"\n  else\n    if test `$SWIG -help 2>&1 | $EGREP -c '\\-javascript* *- Generate'` = 0 ; then\n      use_javascript=\"No (swig does not support -javascript option)\"\n    else\n      AC_CHECK_PROG(JAVASCRIPT,js,js)\n      if test \"x$JAVASCRIPT\" = \"x\"; then\n        use_javascript=\"No (JAVASCRIPT compiler not available)\"\n      else\n        JAVASCRIPT_INCLUDES=\n#        JAVASCRIPT_INSTALL_DIR=\"/usr/lib${LIBPOSTFIX}/javascript/modules\"\n#        JAVASCRIPT_INSTALL_DATADIR=\"/usr/share/javascript\"\n        JAVASCRIPT_LIBS=\n#        save_CPPFLAGS=$CPPFLAGS\n#        CPPFLAGS=\"$CPPFLAGS $JAVASCRIPT_INCLUDES\"\n#        AC_CHECK_HEADER(javascript.h,,[\n#          use_javascript=\"No (missing header)\"\n#          JAVASCRIPT=\n#        ])\n#        CPPFLAGS=$save_CPPFLAGS\n\tif test \"x$D\" != \"x\"; then\n\t  use_javascript=\"Yes\"\n#          AC_SUBST([JAVASCRIPT_INSTALL_DATADIR])\n#          AC_SUBST([JAVASCRIPT_INSTALL_DIR])\n          AC_SUBST([JAVASCRIPT_INCLUDES])\n          AC_SUBST([JAVASCRIPT_LIBS])\n          AC_SUBST([INTJAVASCRIPTSIZE])\n        fi\n      fi\n    fi\n  fi\nfi\nAM_CONDITIONAL(WITH_JAVASCRIPT, [test \"x$use_javascript\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for LUA\n\nAC_ARG_ENABLE(lua,\n  [AS_HELP_STRING([--enable-lua=yes],[lua language bindings])],\n  [], [enable_lua=yes])\n\nif test \"x$enable_lua\" != \"xyes\"; then\n  use_lua=\"No (disabled)\"\nelse\n  if test \"x$use_swig\" != \"xYes\"; then\n    use_lua=\"No (swig not available)\"\n  else\n    if test `$SWIG -help 2>&1 | $EGREP -c '\\-lua *- Generate'` = 0; then\n      use_lua=\"No (swig does not support -lua option)\"\n    else\n      AC_CHECK_PROG(LUA,lua,lua)\n      if test \"x$LUA\" = \"x\"; then\n        use_lua=\"No (lua not available)\"\n      else\n        ac_save_CPPFLAGS=\"$CPPFLAGS\"\n        ac_save_CFLAGS=\"$CFLAGS\"\n        ac_save_LDFLAGS=\"$LDFLAGS\"\n\n        AC_CHECK_PROG(LUA,lua,lua)\n\n        LUA_INCLUDES=\"\"\n        LUA_LIBS=\"\"\n        LUA_INSTALL_DIR=\"\"\n\n        if test -n \"$lua_inc\"; then\n           CFLAGS=\"$CFLAGS -I$lua_inc\"\n           CPPFLAGS=\"$CPPFLAGS -I$lua_inc\"\n        fi\n        if test -n \"$lua_lib\"; then\n           LDFLAGS=\"$LDFLAGS -L$lua_lib\"\n        fi\n\n        if test \"x$LUA_INCLUDES\" = \"x\" -a \"x$LUA_LIBS\" = \"x\" ; then\n            if test \"x$PKG_CONFIG\" != \"x\"; then\n\t        AC_MSG_CHECKING(for Lua headers and libraries with pkg-config)\n\t        echo\n\t        for l in \"$lua_suffix\" \"\" \"53\" \"5.3\" \"52\" \"5.2\" \"51\" \"5.1\" \"50\" \"5.0\" ; do\n\t            pkgconfig_lua_found=`$PKG_CONFIG --exists lua$l 2>/dev/null`\n\t            if test \"x$?\" = \"x0\" ; then\n\t\t        LUA_VERSION=`$PKG_CONFIG --modversion lua$l`\n                        LUA_INCLUDES=\"$LUA_CFLAGS \"`$PKG_CONFIG --cflags lua$l`\n                        LUA_LIBS=\"$LUA_LFLAGS \"`$PKG_CONFIG --libs lua$l`\n\t\t        LUA_INSTALL_DIR=\"/usr/lib$LIBPOSTFIX/lua/`$PKG_CONFIG --variable=V lua`\"\n\n\t\t        pkgconfig_lualib_found=`$PKG_CONFIG --exists lualib$l 2>/dev/null`\n\t\t        if test  \"x$?\" = \"x0\"; then\n\t\t           LUA_INCLUDES=\"$LUA_CFLAGS \"`$PKG_CONFIG --cflags lualib$l`\n\t\t           LUA_LIBS=\"$LUA_LFLAGS \"`$PKG_CONFIG --libs lualib$l`\n\t\t        fi\n                        break\n                    fi\n                done\n            fi\n        fi\n\n        if test \"x$LUA_INCLUDES\" = \"x\" -o \"x$LUA_LIBS\" = \"x\" ; then\n            LUACONFIG=\"\"\n            AC_CHECK_PROGS(LUACONFIG, lua-config lua-config52 lua-config5.2 lua-config51 lua-config5.1 lua-config50 lua-config5.0)\n            if test \"x$LUACONFIG\" != \"x\" ; then\n                AC_MSG_CHECKING(for Lua headers and libraries with lua-config)\n\t        echo\n                LUA_INCLUDES=`$LUACONFIG --include`\n                LUA_LIBS=`$LUACONFIG --libs`\n\t        LUA_VERSION=\"5.0.x\"\n\t        LUA_INSTALL_DIR=\"/usr/lib$LIBPOSTFIX/lua/5.0\"\n            fi\n        fi\n\n        if test \"x$LUA_INCLUDES\" = \"x\" -o \"x$LUA_LIBS\" = \"x\" ; then\n            AC_MSG_CHECKING(for Lua headers and libraries)\n\t    echo\n            AC_CHECK_HEADER(lua.h,ac_found_lua_header=\"yes\",ac_found_lua_header=\"no\")\n            AC_CHECK_HEADER(lualib.h,ac_found_liblua_header=\"yes\",ac_found_liblua_header=\"no\")\n            if test \"x$ac_found_lua_header\" = \"xyes\" -a \"x$ac_found_liblua_header\" = \"xyes\"; then\n                LUA_INCLUDES=\"$CFLAGS\"\n            fi\n            for l in \"$lua_suffix\" \"\" \"52\" \"5.2\" \"51\" \"5.1\" \"50\" \"5.0\" ; do\n                AC_CHECK_LIB(lua$l,lua_call,ac_found_lua_lib=\"yes\",ac_found_lua_lib=\"no\")\n                if test \"x$ac_found_lua_lib\" = \"xyes\" ; then\n\t            LUA_VERSION=\">=5.1.0\"\n\n\t            LUA_LIBS=\"$LDFLAGS -llua$l -lm\"\n\n\t\t    ac2_save_LDFLAGS=\"$LDFLAGS\"\n\t\t    LDFLAGS=\"$LDFLAGS -llua$l -lm\"\n\n\t\t    if echo \"$host_os\" | grep \"^linux\" 1>/dev/null 2>&1 ; then\n\t\t       LDFLAGS=\"$LDFLAGS -ldl\"\n\t\t    fi\n\n\t\t    AC_CHECK_LIB(lualib$l,luaL_openlib,ac_found_liblua_lib=\"yes\",ac_found_liblua_lib=\"no\")\n\t\t    if test \"x$ac_found_liblua_lib\" = \"xyes\" ; then\n\t\t       LUA_VERSION=\"5.0.x\"\n\n\t\t       LUA_LIBS=\"$LUA_LFLAGS -llualib$l\"\n\n\t\t       if echo \"$host_os\" | grep \"^linux\" 1>/dev/null 2>&1 ; then\n\t\t          LUA_LIBS=\"$LUA_LFLAGS -ldl\"\n\t\t       fi\n\t\t    fi\n\n\t\t    LDFLAGS=\"$ac2_save_LDFLAGS\"\n\t\t    break\n\t        fi\n            done\n        fi\n\n        AC_MSG_CHECKING(for Lua compiling and linking)\n        LUA_TEST=`LT=luatest.c ; echo \"#include <lua.h>\" > $LT;  echo \"#include <lualib.h>\" >> $LT; echo \"int main() { return 0; }\" >> $LT ; $CC -Wall $LT -o $LT.out $LUA_INCLUDES $LUA_LIBS $CFLAGS $LDFLAGS 1>/dev/null 2>&1 ; echo $?; rm -f $LT $LT.out 1>/dev/null 2>&1`\n        if test \"x$LUA_TEST\" != \"x0\" ; then\n          AC_MSG_RESULT(no)\n          AC_MSG_WARN([\n*** Lua (>=5.0) headers and/or libraries could not be found in your system.\n*** Try to install liblua, liblualib and liblua-dev with your software package manager.\n*** Graphviz will be built without Lua support.])\n          use_lua=\"No (lua compiling/linking failed)\"\n        else\n\t  use_lua=\"Yes\"\n          AC_SUBST([LUA_INCLUDES])\n          AC_SUBST([LUA_LIBS])\n          AC_SUBST([LUA_INSTALL_DIR])\n          # Not needed for Graphviz: AC_DEFINE(PLUGIN_LUA)\n        fi\n        CFLAGS=\"$ac_save_CFLAGS\"\n        CPPFLAGS=\"$ac_save_CPPFLAGS\"\n        LDFLAGS=\"$ac_save_LDFLAGS\"\n      fi\n    fi\n  fi\nfi\nAM_CONDITIONAL(WITH_LUA, [test \"x$use_lua\" = \"xYes\"])\n\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for OCAML\n\nAC_ARG_ENABLE(ocaml,\n  [AS_HELP_STRING([--enable-ocaml=yes],[ocaml language bindings])],\n  [], [enable_ocaml=yes])\n\nif test \"x$enable_ocaml\" != \"xyes\"; then\n  use_ocaml=\"No (disabled)\"\nelse\n  if test \"x$use_swig\" != \"xYes\"; then\n    use_ocaml=\"No (swig not available)\"\n  else\n    if test `$SWIG -help 2>&1 | $EGREP -c '\\-ocaml *- Generate'` = 0; then\n      use_ocaml=\"No (swig does not support -ocaml option)\"\n    else\n      AC_CHECK_PROG(OCAML,ocaml,ocaml)\n      if test \"x$OCAML\" = \"x\"; then\n        use_ocaml=\"No (ocaml not available)\"\n      else\n        AC_CHECK_PROG(OCAML_OPT,ocamlopt,ocamlopt)\n        OCAML_INCLUDES=-I/usr/lib$LIBPOSTFIX/ocaml\n        OCAML_LIBS=-L/usr/lib$LIBPOSTFIX/ocaml\n        save_CPPFLAGS=$CPPFLAGS\n        CPPFLAGS=\"$CPPFLAGS $OCAML_INCLUDES\"\n        AC_CHECK_HEADER(caml/mlvalues.h,[\n\t  use_ocaml=\"Yes\"\n          AC_SUBST([OCAML_INCLUDES])\n          AC_SUBST([OCAML_LIBS])\n\t],[\n\t  use_ocaml=\"No (missing header)\"\n          AC_MSG_WARN([Unable to find header caml/mlvalues.h. The OCAML packages will not be built])\n        ])\n        CPPFLAGS=$save_CPPFLAGS\n      fi\n    fi\n  fi\nfi\nAM_CONDITIONAL(WITH_OCAML, [test \"x$use_ocaml\" = \"xYes\"])\nAM_CONDITIONAL(WITH_OCAMLOPT, [test \"x$OCAML_OPT\" != \"x\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for PERL\n\nAC_ARG_ENABLE(perl,\n  [AS_HELP_STRING([--enable-perl=yes],[perl language bindings])],\n  [], [enable_perl=yes])\n\nif test \"x$enable_perl\" != \"xyes\"; then\n  use_perl=\"No (disabled)\"\nelse\n  if test \"x$use_swig\" != \"xYes\"; then\n    use_perl=\"No (swig not available)\"\n  else\n    if test `$SWIG -perl5 2>&1 | $EGREP -c '(Unable|No target)'` -eq 1; then\n      SWIG_PERL_OPT='-perl'\n    else\n      SWIG_PERL_OPT='-perl5'\n    fi\n    if test `$SWIG -help 2>&1 | $EGREP -c \"(-perl|-perl5) *- Generate\"` = 0; then\n      use_perl=\"No (swig does not support -perl or -perl5 option)\"\n    else\n      AC_CHECK_PROG(PERL,perl,perl)\n      if test \"x$PERL\" = \"x\"; then\n        use_perl=\"No (perl not available)\"\n      else\n        if test $PERL -e 'exit !($] <= 5.004)' > /dev/null 2>&1 ; then\n\t  use_perl=\"No (perl is too old)\"\n\t  PERL=\n\telse\n          PERL_INCLUDES=\"`$PERL $srcdir/config/config_perl.pl PERL_INCLUDES`\"\n          PERL_LIBS=\"`$PERL $srcdir/config/config_perl.pl PERL_LIBS`\"\n          PERL_INSTALL_DIR=\"`$PERL $srcdir/config/config_perl.pl PERL_INSTALL_DIR`\"\n\t  save_CPPFLAGS=$CPPFLAGS\n\t  CPPFLAGS=\"$CPPFLAGS $PERL_INCLUDES\"\n          AC_CHECK_HEADER(EXTERN.h,,[\n            use_perl=\"No (missing header)\"\n  \t    PERL=\n          ])\n#\t  save_LDFLAGS=$LDFLAGS\n#\t  LDFLAGS=\"$LDFLAGS $PERL_LIBS\"\n#          AC_CHECK_LIB(perl,main,,[\n#            use_perl=\"No (missing library)\"\n#            PERL=\n#          ])\n#\t  LDFLAGS=$save_LDFLAGS\n\t  CPPFLAGS=$save_CPPFLAGS\n\tfi\n        if test \"x$PERL\" != \"x\"; then\n          use_perl=\"Yes\"\n\t  AC_SUBST([PERL_INCLUDES])\n          AC_SUBST([PERL_LIBS])\n\t  AC_SUBST([PERL_INSTALL_DIR])\n\t  AC_SUBST([SWIG_PERL_OPT])\n        fi\n      fi\n    fi\n  fi\nfi\nAM_CONDITIONAL(WITH_PERL, [test \"x$use_perl\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for PHP\n\nAC_ARG_ENABLE(php,\n  [AS_HELP_STRING([--enable-php=yes],[php language bindings])],\n  [], [enable_php=yes])\n\nif test \"x$enable_php\" != \"xyes\"; then\n  use_php=\"No (disabled)\"\nelse\n  if test \"x$use_swig\" != \"xYes\"; then\n    use_php=\"No (swig not available)\"\n  else\n    if test `$SWIG -php7 2>&1 | $EGREP -c '(Unable|No target)'` -eq 1; then\n      if test `$SWIG -php5 2>&1 | $EGREP -c '(Unable|No target)'` -eq 1; then\n        SWIG_PHP_OPT='-php'\n      else\n        SWIG_PHP_OPT='-php5'\n      fi\n    else\n      SWIG_PHP_OPT='-php7'\n    fi\n    if test `$SWIG -help 2>&1 | $EGREP -c \"(-php|-php5|-php7) *- Generate\"` = 0 ; then\n      use_php=\"No (swig does not support -php or -php5 or -php7 option)\"\n    else\n      AC_CHECK_PROGS(PHP,php7.2,php7,php,php5)\n      if test \"x$PHP\" = \"x\"; then\n        use_php=\"No (php not available)\"\n      else\n        AC_CHECK_PROGS(PHPCONFIG,${PHP}-config,php-config)\n        if test \"x$PHPCONFIG\" = \"x\"; then\n          use_php=\"No (php-config not available)\"\n        else\n          PHP_INCLUDES=\"`$PHPCONFIG --includes`\"\n          PHP_INSTALL_DIR=\"`$PHPCONFIG --extension-dir`\"\n          PHP_INSTALL_DATADIR=\"/usr/share/php\"\n          PHP_LIBS=\"`$PHPCONFIG --ldflags` `$PHPCONFIG --libs`\"\n          save_CPPFLAGS=$CPPFLAGS\n          CPPFLAGS=\"$CPPFLAGS $PHP_INCLUDES\"\n          AC_CHECK_HEADER(php.h,,[\n            use_php=\"No (missing header)\"\n            PHP=\n          ])\n          CPPFLAGS=$save_CPPFLAGS\n        fi\n      fi\n      if test \"x$PHP\" != \"x\"; then\n\t    use_php=\"Yes\"\n        AC_SUBST([PHP_INCLUDES])\n        AC_SUBST([PHP_INSTALL_DIR])\n        AC_SUBST([PHP_INSTALL_DATADIR])\n        AC_SUBST([PHP_LIBS])\n        AC_SUBST([SWIG_PHP_OPT])\n      fi\n    fi\n  fi\nfi\nAM_CONDITIONAL(WITH_PHP, [test \"x$use_php\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for PYTHON\n\nAC_ARG_ENABLE(python,\n  [AS_HELP_STRING([--enable-python=yes],[python language bindings])],\n  [], [enable_python=yes])\n\nif test \"x$enable_python\" != \"xyes\"; then\n  use_python=\"No (disabled)\"\nelse\n  if test \"x$use_swig\" != \"xYes\"; then\n    use_python=\"No (swig not available)\"\n  else\n    if test `$SWIG -help 2>&1 | $EGREP -c '\\-python *- Generate'` = 0; then\n      use_python=\"No (swig does not support -python option)\"\n    else\n      AC_CHECK_PROG(PYTHON,python,python)\n      if test \"x$PYTHON\" = \"x\"; then\n        use_python=\"No (python not available)\"\n      else\n        PYTHON_VERSION=`$PYTHON -c \"import sys; print('%d.%d' % sys.version_info[[0:2]])\"`\n        if test \"x$PYTHON_VERSION\" = \"x\"; then\n          PYTHON=\n        else\n          PYTHON_VERSION_MAJOR=`echo $PYTHON_VERSION | cut -d '.' -f 1`\n          PYTHON_VERSION_MINOR=`echo $PYTHON_VERSION | cut -d '.' -f 2`\n          PYTHON_VERSION_SHORT=$PYTHON_VERSION_MAJOR.$PYTHON_VERSION_MINOR\n          if test $PYTHON_VERSION_MAJOR -lt 3; then\n            if test $PYTHON_VERSION_MAJOR -lt 2; then\n\t      PYTHON=\n            else\n              if test $PYTHON_VERSION_MINOR -lt 3; then\n\t        PYTHON=\n              fi\n            fi\n          fi\n        fi\n      fi\n      if test \"x$PYTHON\" = \"x\"; then\n\tuse_python=\"No (python is too old)\"\n      else\n        PYTHON_PREFIX=`$PYTHON -c \"import sys; print(sys.prefix)\"`\n        PYTHON_INCLUDES=-I$PYTHON_PREFIX/include/python$PYTHON_VERSION_SHORT\n#        PYTHON_LIBS=\"-lpython$PYTHON_VERSION_SHORT\"\n\tPYTHON_LIBS=\"-undefined dynamic_lookup\"\n        PYTHON_INSTALL_DIR=\"`$PYTHON $srcdir/config/config_python.py archsitelib`\"\n        save_CPPFLAGS=$CPPFLAGS\n        CPPFLAGS=\"$CPPFLAGS $PYTHON_INCLUDES\"\n        AC_CHECK_HEADER(Python.h,,[\n          use_python=\"No (missing header)\"\n          PYTHON=\n        ])\n        CPPFLAGS=$save_CPPFLAGS\n\tif test \"x$PYTHON\" != \"x\"; then\n\t  use_python=\"Yes\"\n          AC_SUBST([PYTHON_INSTALL_DIR])\n          AC_SUBST([PYTHON_INCLUDES])\n          AC_SUBST([PYTHON_LIBS])\n        fi\n      fi\n    fi\n  fi\nfi\nAM_CONDITIONAL(WITH_PYTHON, [test \"x$use_python\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for PYTHON2\n\nAC_ARG_ENABLE(python2,\n  [AS_HELP_STRING([--enable-python2=yes],[python2 language bindings])],\n  [], [enable_python2=yes])\n\nif test \"x$enable_python2\" != \"xyes\"; then\n  use_python2=\"No (disabled)\"\nelse\n  if test \"x$use_swig\" != \"xYes\"; then\n    use_python2=\"No (swig not available)\"\n  else\n    if test `$SWIG -help 2>&1 | $EGREP -c '\\-python *- Generate'` = 0; then\n      use_python=\"No (swig does not support -python option)\"\n    else\n      AC_CHECK_PROG(PYTHON2,python2,python2)\n      if test \"x$PYTHON2\" = \"x\"; then\n        use_python2=\"No (python2 not available)\"\n      else\n        PYTHON2_VERSION=`$PYTHON2 -c \"import sys; print('%d.%d' % sys.version_info[[0:2]])\"`\n        if test \"x$PYTHON2_VERSION\" = \"x\"; then\n          PYTHON2=\n        else\n          PYTHON2_VERSION_MAJOR=`echo $PYTHON2_VERSION | cut -d '.' -f 1`\n          PYTHON2_VERSION_MINOR=`echo $PYTHON2_VERSION | cut -d '.' -f 2`\n          PYTHON2_VERSION_SHORT=$PYTHON2_VERSION_MAJOR.$PYTHON2_VERSION_MINOR\n          if test $PYTHON2_VERSION_MAJOR -lt 3; then\n            if test $PYTHON2_VERSION_MAJOR -lt 2; then\n\t      PYTHON2=\n            else\n              if test $PYTHON2_VERSION_MINOR -lt 3; then\n\t        PYTHON2=\n              fi\n            fi\n          fi\n        fi\n      fi\n      if test \"x$PYTHON2\" = \"x\"; then\n\t    use_python2=\"No (python2 is too old)\"\n      else\n        if test \"x$PKG_CONFIG\" != \"x\"; then\n          AC_MSG_CHECKING(for Python2 headers and libraries with pkg-config)\n          echo\n          pkgconfig_python2_found=`$PKG_CONFIG --exists python-$PYTHON2_VERSION 2>/dev/null`\n          if test \"x$?\" = \"x0\" ; then\n               PYTHON2_INCLUDES=\"$PYTHON2_CFLAGS \"`$PKG_CONFIG --cflags python-$PYTHON2_VERSION`\n               PYTHON2_LIBS=\"$PYTHON2_LFLAGS \"`$PKG_CONFIG --libs python-$PYTHON2_VERSION`\n          else\n\t           use_python2=\"No (python-$PYTHON2_VERSION.pc not found)\"\n\t           PYTHON2=\n          fi\n        fi\n        PYTHON2_PREFIX=`$PYTHON2 -c \"import sys; print(sys.prefix)\"`\n        PYTHON2_INSTALL_DIR=\"`$PYTHON2 $srcdir/config/config_python.py archsitelib`\"\n        save_CPPFLAGS=$CPPFLAGS\n        CPPFLAGS=$save_CPPFLAGS\n\tif test \"x$PYTHON2\" != \"x\"; then\n\t  use_python2=\"Yes\"\n          AC_SUBST([PYTHON2_INSTALL_DIR])\n          AC_SUBST([PYTHON2_INCLUDES])\n          AC_SUBST([PYTHON2_LIBS])\n        fi\n      fi\n    fi\n  fi\nfi\nAM_CONDITIONAL(WITH_PYTHON2, [test \"x$use_python2\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for PYTHON3\n\nAC_ARG_ENABLE(python3,\n  [AS_HELP_STRING([--enable-python3=yes],[python3 language bindings])],\n  [], [enable_python3=yes])\n\nif test \"x$enable_python3\" != \"xyes\"; then\n  use_python3=\"No (disabled)\"\nelse\n  if test \"x$use_swig\" != \"xYes\"; then\n    use_python3=\"No (swig not available)\"\n  else\n    if test `$SWIG -help 2>&1 | $EGREP -c '\\-python *- Generate'` = 0; then\n      use_python=\"No (swig does not support -python option)\"\n    else\n      AC_CHECK_PROG(PYTHON3,python3,python3)\n      if test \"x$PYTHON3\" = \"x\"; then\n        use_python3=\"No (python3 not available)\"\n      else\n        PYTHON3_VERSION=`$PYTHON3 -c \"import sys; print('%d.%d' % sys.version_info[[0:2]])\"`\n        if test \"x$PYTHON3_VERSION\" = \"x\"; then\n          PYTHON3=\n        else\n          PYTHON3_VERSION_MAJOR=`echo $PYTHON3_VERSION | cut -d '.' -f 1`\n          PYTHON3_VERSION_MINOR=`echo $PYTHON3_VERSION | cut -d '.' -f 2`\n          PYTHON3_VERSION_SHORT=$PYTHON3_VERSION_MAJOR.$PYTHON3_VERSION_MINOR\n          if test $PYTHON3_VERSION_MAJOR -lt 3; then\n            if test $PYTHON3_VERSION_MAJOR -lt 2; then\n\t      PYTHON3=\n            else\n              if test $PYTHON3_VERSION_MINOR -lt 3; then\n\t        PYTHON3=\n              fi\n            fi\n          fi\n        fi\n      fi\n      if test \"x$PYTHON3\" = \"x\"; then\n\tuse_python3=\"No (python3 is too old)\"\n\tPYTHON3=\n      else\n        if test \"x$PKG_CONFIG\" != \"x\"; then\n          AC_MSG_CHECKING(for Python3 headers and libraries with pkg-config)\n          echo\n          pkgconfig_python3_found=`$PKG_CONFIG --exists python-$PYTHON3_VERSION 2>/dev/null`\n          if test \"x$?\" = \"x0\" ; then\n               PYTHON3_INCLUDES=\"$PYTHON3_CFLAGS \"`$PKG_CONFIG --cflags python-$PYTHON3_VERSION`\n               PYTHON3_LIBS=\"$PYTHON3_LFLAGS \"`$PKG_CONFIG --libs python-$PYTHON3_VERSION`\n          else\n\t           use_python3=\"No (python-$PYTHON3_VERSION.pc not found)\"\n          fi\n        fi\n        PYTHON3_PREFIX=`$PYTHON3 -c \"import sys; print(sys.prefix)\"`\n        PYTHON3_INSTALL_DIR=\"`$PYTHON3 $srcdir/config/config_python.py archsitelib`\"\n        save_CPPFLAGS=$CPPFLAGS\n        CPPFLAGS=\"$CPPFLAGS $PYTHON3_INCLUDES\"\n        AC_CHECK_HEADER(Python.h,,[\n          use_python3=\"No (missing header)\"\n          PYTHON3=\n        ])\n        CPPFLAGS=$save_CPPFLAGS\n\tif test \"x$PYTHON3\" != \"x\"; then\n\t  use_python3=\"Yes\"\n          AC_SUBST([PYTHON3_INSTALL_DIR])\n          AC_SUBST([PYTHON3_INCLUDES])\n          AC_SUBST([PYTHON3_LIBS])\n        fi\n      fi\n    fi\n  fi\nfi\nAM_CONDITIONAL(WITH_PYTHON3, [test \"x$use_python3\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for R\n\nAC_ARG_ENABLE(r,\n  [AS_HELP_STRING([--enable-r=yes],[R language bindings])],\n  [], [enable_r=yes])\n\nif test \"x$enable_r\" != \"xyes\"; then\n  use_r=\"No (disabled)\"\nelse\n  if test \"x$use_swig\" != \"xYes\"; then\n    use_r=\"No (swig not available)\"\n  else\n    if test `$SWIG -help 2>&1 | $EGREP -c '\\-r *- Generate'` = 0; then\n      use_r=\"No (swig does not support -r option)\"\n    else\n      PKG_CHECK_MODULES(R, [libR],[\n\tuse_r=\"Yes\"\n\tAC_SUBST([R_CFLAGS])\n\tAC_SUBST([R_LIBS])\n      ],[\n\tuse_r=\"No (R not available)\"\n      ])\n    fi\n  fi\nfi\nAM_CONDITIONAL(WITH_R, [test \"x$use_r\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for RUBY\n\nAC_ARG_ENABLE(ruby,\n  [AS_HELP_STRING([--enable-ruby=yes],[ruby language bindings])],\n  [], [enable_ruby=yes])\n\nif test \"x$enable_ruby\" != \"xyes\"; then\n  use_ruby=\"No (disabled)\"\nelse\n  if test \"x$use_swig\" != \"xYes\"; then\n    use_ruby=\"No (swig not available)\"\n  else\n    if test `$SWIG -help 2>&1 | $EGREP -c '\\-ruby *- Generate'` = 0; then\n      use_ruby=\"No (swig does not support -ruby option)\"\n    else\n      PKG_CHECK_MODULES([RUBY], [ruby],[\n\tAC_CHECK_PROG(RUBY,ruby,ruby)\n        if test \"x$RUBY\" = \"x\"; then\n          use_ruby=\"No (ruby not available)\"\n        else\n          RUBY_INSTALL_DIR=\"`$RUBY $srcdir/config/config_ruby.rb vendorarchdir`\"\n\tfi\n      ],[\n        PKG_CHECK_MODULES([RUBY], [ruby-${RUBY_VER}],[\n\t  AC_CHECK_PROG(RUBY,ruby,ruby)\n          if test \"x$RUBY\" = \"x\"; then\n            use_ruby=\"No (ruby not available)\"\n          else\n            RUBY_INSTALL_DIR=\"`$RUBY $srcdir/config/config_ruby.rb vendorarchdir`\"\n\t  fi\n        ],[\n          AC_CHECK_PROG(RUBY,ruby,ruby)\n          if test \"x$RUBY\" = \"x\"; then\n\t    use_ruby=\"No (ruby not available)\"\n          else\n            RUBY_CFLAGS=\"-I`$RUBY $srcdir/config/config_ruby.rb archdir`\"\n\t    # hack for powerpc-darwin8 (10.4)\n\t    if test \"x$DARWIN\" = \"xyes\"; then\n\t      RUBY_CFLAGS=`echo $RUBY_CFLAGS | sed 's/powerpc/universal/'`\n\t    fi\n            RUBY_LIBS=\"-L`$RUBY $srcdir/config/config_ruby.rb lib` `$RUBY -rrbconfig -e \\\"puts RbConfig::CONFIG[['LIBRUBYARG_SHARED']]\\\"`\"\n            RUBY_INSTALL_DIR=\"`$RUBY $srcdir/config/config_ruby.rb vendorarchdir`\"\n\t    if test \"x$RUBY_INSTALL_DIR\" = \"x\"; then\n\t  \t  RUBY_INSTALL_DIR=\"`$RUBY $srcdir/config/config_ruby.rb sitearchdir`\"\n\t    fi\n            save_CPPFLAGS=$CPPFLAGS\n            CPPFLAGS=\"$CPPFLAGS $RUBY_CFLAGS\"\n            AC_CHECK_HEADER(ruby.h,,[\n              use_ruby=\"No (missing header)\"\n              RUBY=\n            ])\n            CPPFLAGS=$save_CPPFLAGS\n          fi\n        ])\n      ])\n      if test \"x$RUBY\" != \"x\"; then\n\tuse_ruby=\"Yes\"\n        AC_SUBST([RUBY_CFLAGS])\n        AC_SUBST([RUBY_LIBS])\n        AC_SUBST([RUBY_INSTALL_DIR])\n      fi\n    fi\n  fi\nfi\nAM_CONDITIONAL(WITH_RUBY, [test \"x$use_ruby\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for TCL\n\nAC_ARG_ENABLE(tcl,\n  [AS_HELP_STRING([--enable-tcl=yes],[tcl language bindings])],\n  [], [enable_tcl=yes])\n\nif test \"x$enable_tcl\" != \"xyes\"; then\n  use_tcl=\"No (disabled)\"\nfi\n\nif test \"x$use_tcl\" = \"x\"; then\n  TCL_VERSION_FOUND=`echo 'puts [[info tclversion]]' | $TCLSH`\n\n  # can't assume ksh on all architectures\n  # TCLSH_EXEC_PREFIX=${TCLSH%%/bin/tclsh.*}\n  # so use sed instead\n  TCLSH_EXEC_PREFIX=`echo $TCLSH|sed -e 's%/bin/.*tclsh.*$%%'`\n\n  if test -f ${TCLSH_EXEC_PREFIX}/include/tcl${TCL_VERSION_FOUND}/tcl.h; then\n    TCL_INCLUDES=\"-I${TCLSH_EXEC_PREFIX}/include/tcl${TCL_VERSION_FOUND} -I${TCLSH_EXEC_PREFIX}/include/tcl${TCL_VERSION_FOUND}/generic\"\n  else\n    if test \"x${TCLSH_EXEC_PREFIX}\" != \"x/usr\" -a -f ${TCLSH_EXEC_PREFIX}/include/tcl.h; then\n      TCL_INCLUDES=-I${TCLSH_EXEC_PREFIX}/include\n    fi\n  fi\n  if test \"x$TCL_INCLUDES\" != \"x\" ; then\n    AC_MSG_RESULT([using tcl headers from $TCL_INCLUDES])\n  fi\n  AC_SUBST([TCL_INCLUDES])\n  save_CPPFLAGS=$CPPFLAGS\n  CPPFLAGS=\"$CPPFLAGS $TCL_INCLUDES\"\n  AC_CHECK_HEADER(tcl.h,,[\n    AC_MSG_WARN([Unable to find header tcl.h. The Tcl packages will not be built])\n    use_tcl=\"No (missing header)\"\n  ])\n  CPPFLAGS=$save_CPPFLAGS\nfi\nAC_SUBST([TCLSH_EXEC_PREFIX])\n\nif test \"x$use_tcl\" = \"x\"; then\n  # Some systems don't have Tcl.  Don't build\n  # the Tcl products if we don't have the library.\n  if test -f ${TCLSH_EXEC_PREFIX}/lib${LIBPOSTFIX}/tcl${TCL_VERSION_FOUND}/tclConfig.sh; then\n    TCLCONFIG=${TCLSH_EXEC_PREFIX}/lib${LIBPOSTFIX}/tcl${TCL_VERSION_FOUND}/tclConfig.sh\n  else\n    if test -f ${TCLSH_EXEC_PREFIX}/lib${LIBPOSTFIX}/tclConfig.sh; then\n      TCLCONFIG=${TCLSH_EXEC_PREFIX}/lib${LIBPOSTFIX}/tclConfig.sh\n    else\n      if test -f ${TCLSH_EXEC_PREFIX}/lib/tclConfig.sh; then\n        TCLCONFIG=${TCLSH_EXEC_PREFIX}/lib/tclConfig.sh\n      fi\n    fi\n  fi\n  if test \"x$TCLCONFIG\" != \"x\"; then\n    AC_MSG_RESULT([using $TCLCONFIG])\n    file=${TCLCONFIG}\n      . $file\n  else\n    AC_MSG_WARN([Unable to find tclConfig.sh. The Tcl packages will not be built])\n    use_tcl=\"No (missing tclConfig.sh)\"\n  fi\n  TCL_INSTALL_DIR=${TCLSH_EXEC_PREFIX}/lib${LIBPOSTFIX}/tcl${TCL_VERSION_FOUND}\nfi\n\nif test \"x$use_tcl\" = \"x\"; then\n  # TCL STUBS support is required\n  if test \"x${TCL_SUPPORTS_STUBS}\" = \"x1\"; then\n    use_tcl=\"Yes\"\n    TCL_CFLAGS=\"${TCL_CFLAGS} -DUSE_TCL_STUBS\"\n    AC_DEFINE_UNQUOTED(HAVE_TCL,1,\n\t[Define if you have the tcl library])\n  else\n    AC_MSG_WARN([Tcl does not have STUBs support, perhaps it is too old?  The Tcl packages will not be built])\n    use_tcl=\"No (no STUBs support)\"\n  fi\nfi\n\nAC_SUBST([TCLCONFIG])\nAC_SUBST([TCL_INSTALL_DIR])\n\nAM_CONDITIONAL(WITH_TCL, [test \"x$use_tcl\" = \"xYes\"])\n\n#AC_SUBST([TCLSH_EXEC_PREFIX])\nAC_SUBST([TCL_VERSION])\nAC_SUBST([TCL_MAJOR_VERSION])\nAC_SUBST([TCL_MINOR_VERSION])\nAC_SUBST([TCL_PATCH_LEVEL])\n#AC_SUBST([TCL_CC])\n#AC_SUBST([TCL_CXX])\nAC_SUBST([TCL_CFLAGS])\n#AC_SUBST([TCL_CXXFLAGS])\nAC_SUBST([TCL_DEFS])\n#AC_SUBST([TCL_DBGX])\n#AC_SUBST([TCL_CFLAGS_DEBUG])\n#AC_SUBST([TCL_CFLAGS_OPTIMIZE])\n#AC_SUBST([TCL_SHARED_BUILD])\n#AC_SUBST([TCL_LIB_FILE])\n#AC_SUBST([TCL_NEEDS_EXP_FILE])\n#AC_SUBST([TCL_EXPORT_FILE_SUFFIX])\n#AC_SUBST([TCL_NEEDS_EXP_FILE])\n#AC_SUBST([TCL_EXPORT_FILE_SUFFIX])\n\n# TCL modules use stubs and don't need any other tcl libraries\nTCL_LIBS=\nAC_SUBST([TCL_LIBS])\n\n#AC_SUBST([TCL_PREFIX])\n#AC_SUBST([TCL_EXEC_PREFIX])\n#AC_SUBST([TCL_SHLIB_CFLAGS])\n#AC_SUBST([TCL_SHLIB_CXXFLAGS])\n#AC_SUBST([TCL_EXTRA_CFLAGS])\n#AC_SUBST([TCL_SHLIB_LD])\n#AC_SUBST([TCL_SHLIB_LD_LIBS])\nAC_SUBST([TCL_SHLIB_SUFFIX])\n#AC_SUBST([TCL_DL_LIBS])\n#AC_SUBST([TCL_LD_FLAGS])\n#AC_SUBST([TCL_LD_SEARCH_FLAGS])\n#AC_SUBST([TCL_COMPAT_OBJS])\n#AC_SUBST([TCL_RANLIB])\n#AC_SUBST([TCL_LIB_FLAG])\n#AC_SUBST([TCL_BUILD_LIB_SPEC])\n#AC_SUBST([TCL_LIB_SPEC])\n#AC_SUBST([TCL_LIB_VERSIONS_OK])\n#AC_SUBST([TCL_SHARED_LIB_SUFFIX])\n#AC_SUBST([TCL_UNSHARED_LIB_SUFFIX])\nAC_SUBST([TCL_SRC_DIR])\n#AC_SUBST([TCL_PACKAGE_PATH])\n#AC_SUBST([TCL_SUPPORTS_STUBS])\n#AC_SUBST([TCL_STUB_LIB_FILE])\n#AC_SUBST([TCL_STUB_LIB_FLAG])\n#AC_SUBST([TCL_BUILD_STUB_LIB_SPEC])\nAC_SUBST([TCL_STUB_LIB_SPEC])\n#AC_SUBST([TCL_BUILD_STUB_LIB_PATH])\n#AC_SUBST([TCL_STUB_LIB_PATH])\n\ndnl -----------------------------------\ndnl Support for generic \"extra\" search paths for includes and libraries\n\nAC_ARG_WITH(extraincludedir,\n  [AS_HELP_STRING([--with-extraincludedir=DIR],[use extra includes from DIR])],\n  [CPPFLAGS=\"$CPPFLAGS -I$withval\"])\n\nAC_ARG_WITH(extralibdir,\n  [AS_HELP_STRING([--with-extralibdir=DIR],[use extra libraries from DIR])],\n  [LDFLAGS=\"$LDFLAGS -L$withval\"])\n\ndnl -----------------------------------\ndnl ...borrow test for -lsocket -lnsl from tk8.3.3/unix/configure.in\n\nsave_LIBS=$LIBS\nLIBS=\ntk_checkBoth=0\nAC_CHECK_FUNC(connect, tk_checkSocket=0, tk_checkSocket=1)\nif test \"$tk_checkSocket\" = 1; then\n  AC_CHECK_LIB(socket, main, LIBS=\"$LIBS -lsocket\", tk_checkBoth=1)\nfi\nif test \"$tk_checkBoth\" = 1; then\n  tk_oldLibs=$LIBS\n  LIBS=\"$LIBS -lsocket -lnsl\"\n  AC_CHECK_FUNC(accept, tk_checkNsl=0, [LIBS=$tk_oldLibs])\nfi\nAC_CHECK_FUNC(gethostbyname, , [AC_CHECK_LIB(nsl, main, [LIBS=\"$LIBS -lnsl\"])])\nSOCKET_LIBS=$LIBS\nAC_SUBST([SOCKET_LIBS])\nLIBS=$save_LIBS\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for EXPAT\n\nAC_ARG_WITH(expat,\n  [AS_HELP_STRING([--with-expat=yes],[use expat])],\n  [],[with_expat=yes])\n\nif test \"x$with_expat\" != \"xyes\"; then\n  use_expat=\"No (disabled)\"\nelse\n\n  save_CPPFLAGS=$CPPFLAGS\n  save_LDFLAGS=$LDFLAGS\n  AC_PATH_PROG(EXPAT_CONFIG,expat-config)\n  if test -n \"$EXPAT_CONFIG\"; then\n\tEXPAT_INCLUDES=`$EXPAT_CONFIG --cflags`\n\tEXPAT_PREFIX=`$EXPAT_CONFIG --prefix`\n\tif test \"${EXPAT_PREFIX}/lib\" != \"/usr/lib\" ; then\n\t\tEXPAT_LIBS=\"-L${EXPAT_PREFIX}/lib\"\n\tfi\n  else\n\tEXPAT_INCLUDES=\"\"\n\tEXPAT_LIBS=\"\"\n  fi\n  AC_ARG_WITH(expatincludedir,\n    [AS_HELP_STRING([--with-expatincludedir=DIR],[use EXPAT includes from DIR])],\n    [EXPAT_INCLUDES=\"-I$withval\"])\n  CPPFLAGS=\"$CPPFLAGS $EXPAT_INCLUDES\"\n  EXPAT_LIBDIR=\"/usr/lib$LIBPOSTFIX\"\n  AC_ARG_WITH(expatlibdir,\n    [AS_HELP_STRING([--with-expatlibdir=DIR],[use EXPAT libraries from DIR])],\n    [EXPAT_LIBDIR=\"$withval\"])\n  if test \"$EXPAT_LIBDIR\" != \"/usr/lib\"; then\n\t  EXPAT_LIBS=\"-L$EXPAT_LIBDIR\"\n\t  LDFLAGS=\"$LDFLAGS $EXPAT_LIBS\"\n  fi\n  AC_CHECK_HEADERS([expat.h],\n    [],\n    [use_expat=\"No (missing header)\"\n     AC_MSG_WARN(Optional expat library not available - missing headers)],\n    [])\n  AC_CHECK_LIB(expat,main,\n    [EXPAT_LIBS=\"$EXPAT_LIBS -lexpat\"],\n    [use_expat=\"No (missing library)\"\n     AC_MSG_WARN(Optional expat library not available)],\n    [])\n  LDFLAGS=$save_LDFLAGS\n  CPPFLAGS=$save_CPPFLAGS\nfi\nif test \"x$use_expat\" = \"x\"; then\n  use_expat=\"Yes\"\n  AC_DEFINE_UNQUOTED(HAVE_EXPAT,1,\n    [Define if you have the expat library])\n  AC_SUBST([EXPAT_INCLUDES])\n  AC_SUBST([EXPAT_LIBS])\nfi\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for DEVIL\n\nAC_ARG_WITH(devil,\n  [AS_HELP_STRING([--with-devil=yes],[DevIL plugin])],\n  [],[with_devil=yes])\n\nif test \"x$with_devil\" != \"xyes\"; then\n  use_devil=\"No (disabled)\"\nelse\n\n  AC_ARG_WITH(devilincludedir,\n    [AS_HELP_STRING([--with-devilincludedir=DIR],[use DevIL includes from DIR])],\n    [DEVIL_INCLUDES=\"-I$withval\"])\n  AC_ARG_WITH(devillibdir,\n    [AS_HELP_STRING([--with-devillibdir=DIR],[use DevIL libraries from DIR])],\n    [DEVIL_LIBS=\"-L$withval\"])\n\n  save_CPPFLAGS=$CPPFLAGS\n  save_LDFLAGS=$LDFLAGS\n  CPPFLAGS=\"$CPPFLAGS $DEVIL_INCLUDES\"\n  LDFLAGS=\"$LDFLAGS $DEVIL_LIBS\"\n  AC_CHECK_HEADERS([IL/il.h],\n    [],\n    [use_devil=\"No (missing header)\"\n     AC_MSG_WARN(Optional DevIL library not available - missing headers)],\n    [])\n  AC_CHECK_LIB(IL,main,\n    [DEVIL_LIBS=\"$DEVIL_LIBS -lIL -lILU\"],\n    [use_devil=\"No (missing library)\"\n     AC_MSG_WARN(Optional DevIL library not available)],\n    [])\n  LDFLAGS=$save_LDFLAGS\n  CPPFLAGS=$save_CPPFLAGS\nfi\nif test \"x$use_devil\" = \"x\"; then\n  use_devil=\"Yes\"\n  AC_DEFINE_UNQUOTED(HAVE_DEVIL,1,\n    [Define if you have the DevIL library])\n  AC_SUBST([DEVIL_INCLUDES])\n  AC_SUBST([DEVIL_LIBS])\nfi\n\nAM_CONDITIONAL(WITH_DEVIL, [test \"x$use_devil\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for XPM\n#\n# we don't want an X11 dependency in libgd\n# so we set HAVE_LIBXPMFORLEFTY instead of the usual HAVE_LIBXPM\n#\n\nAC_ARG_WITH(Xpmincludedir,\n  [AS_HELP_STRING([--with-Xpmincludedir=DIR],[use Xpm includes from DIR])],\n  [XPM_INCLUDES=\"-I$withval\"])\nAC_ARG_WITH(Xpmlibdir,\n  [AS_HELP_STRING([--with-Xpmlibdir=DIR],[use Xpm libraries from DIR])],\n  [XPM_LIBS=\"-L$withval\"])\n\nsave_CPPFLAGS=$CPPFLAGS\nsave_LDFLAGS=$LDFLAGS\nCPPFLAGS=\"$CPPFLAGS $XPM_INCLUDES $X_CFLAGS\"\nLDFLAGS=\"$LDFLAGS $XPM_LIBS $X_LIBS $X_EXTRA_LIBS $X_PRE_LIBS $SOCKET_LIBS\"\nAC_CHECK_LIB(Xpm,main,\n  [XPM_LIBS=\"$XPM_LIBS -lXpm\"\n   AC_DEFINE_UNQUOTED(HAVE_LIBXPMFORLEFTY,1,[Define if you have the XPM library])],\n   AC_MSG_WARN(Optional Xpm library not available), [-lXmu -lXt -lX11 -lXext $SOCKET_LIBS])\nLDFLAGS=$save_LDFLAGS\nCPPFLAGS=$save_CPPFLAGS\nAC_SUBST([XPM_INCLUDES])\nAC_SUBST([XPM_LIBS])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for XAW\n\nAC_ARG_WITH(Xawincludedir,\n  [AS_HELP_STRING([--with-Xawincludedir=DIR],[use Xaw includes from DIR])],\n  [XAW_INCLUDES=\"-I$withval\"])\nAC_ARG_WITH(Xawlibdir,\n  [AS_HELP_STRING([--with-Xawlibdir=DIR],[use Xaw libraries from DIR])],\n  [XAW_LIBS=\"-L$withval\"])\nsave_CPPFLAGS=$CPPFLAGS\nsave_LDFLAGS=$LDFLAGS\nCPPFLAGS=\"$CPPFLAGS $XAW_INCLUDES $X_CFLAGS\"\nLDFLAGS=\"$LDFLAGS $X_LIBS $XAW_LIBS $XPM_LIBS $X_EXTRA_LIBS $X_PRE_LIBS $SOCKET_LIBS\"\nAC_CHECK_HEADERS([X11/Intrinsic.h])\nuse_lefty=\"Yes\"\nAC_CHECK_HEADERS([X11/Xaw/Text.h],\n\t\t [],\n\t\t [with_xaw=no\n\t          use_lefty=\"No (missing Xaw headers)\"\n\t\t  AC_MSG_WARN(Optional Xaw library not available - missing headers)],\n\t\t [#if HAVE_X11_INTRINSIC_H\n\t\t  # include <X11/Intrinsic.h>\n\t\t  # endif\n\t\t  ])\nif test \"x$with_xaw\" != \"xno\"; then\nAC_CHECK_LIB(Xaw,main,\n\t     [XAW_LIBS=\"$X_LIBS $XAW_LIBS -lXaw\"],\n\t     [with_xaw=no\n\t      use_lefty=\"No (missing Xaw library)\"\n\t      AC_MSG_WARN(Optional Xaw library not available)],\n\t      [$X_LIBS -lXmu -lXt -lX11 -lXext $SOCKET_LIBS])\nfi\nLDFLAGS=$save_LDFLAGS\nCPPFLAGS=$save_CPPFLAGS\nAC_SUBST([XAW_INCLUDES])\nAC_SUBST([XAW_LIBS])\nAM_CONDITIONAL(WITH_XAW, [test \"x$with_xaw\" != \"xno\"])\nif test \"x$with_xaw\" = \"xno\"; then\n    if test \"x$no_x\" != \"xyes\"; then\n\tAC_MSG_WARN(Lefty cannot be built)\n    fi\nfi\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for Z\n\nAC_ARG_WITH(zincludedir,\n  [AS_HELP_STRING([--with-zincludedir=DIR],[use Z includes from DIR])],\n  [Z_INCLUDES=\"-I$withval\"])\nAC_ARG_WITH(zlibdir,\n  [AS_HELP_STRING([--with-zlibdir=DIR],[use Z libraries from DIR])],\n  [Z_LIBS=\"-L$withval\"])\n\nsave_CPPFLAGS=$CPPFLAGS\nsave_LDFLAGS=$LDFLAGS\nCPPFLAGS=\"$CPPFLAGS $Z_INCLUDES\"\nLDFLAGS=\"$LDFLAGS $Z_LIBS\"\nAC_CHECK_HEADER(zlib.h,\n\t[AC_CHECK_LIB(z,main,\n\t\t[Z_LIBS=\"$Z_LIBS -lz\"\n\t\tAC_DEFINE_UNQUOTED(HAVE_LIBZ,1,[Define if you have the Z library])],\n\t\t\tAC_MSG_WARN(Optional z library not available))],\n\tAC_MSG_WARN(Optional z library not available - no zlib.h))\n\tLDFLAGS=\"$LDFLAGS $Z_LIBS\"\n        AC_CHECK_FUNCS(deflateBound)\nLDFLAGS=$save_LDFLAGS\nCPPFLAGS=$save_CPPFLAGS\nAC_SUBST([Z_INCLUDES])\nAC_SUBST([Z_LIBS])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for WEBP\n\nAC_ARG_WITH(webp,\n  [AS_HELP_STRING([--with-webp=yes],[webp library])],\n  [], [with_webp=yes])\n\nif test \"x$with_webp\" != \"xyes\"; then\n  use_webp=\"No (disabled)\"\nelse\n  PKG_CHECK_MODULES(WEBP, [libwebp],[\n    use_webp=\"Yes\"\n    AC_DEFINE_UNQUOTED(HAVE_WEBP,1,\n      [Define if you have the webp library])\n    AC_SUBST([WEBP_CFLAGS])\n    AC_SUBST([WEBP_LIBS])\n  ],[\n    use_webp=\"No (webp library not available)\"\n  ])\nfi\nAM_CONDITIONAL(WITH_WEBP, [test \"x$use_webp\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for POPPLER\n\nAC_ARG_WITH(poppler,\n  [AS_HELP_STRING([--with-poppler=yes],[poppler library])],\n  [], [with_poppler=yes])\n\nif test \"x$with_poppler\" != \"xyes\"; then\n  use_poppler=\"No (disabled)\"\nelse\n  PKG_CHECK_MODULES(POPPLER, [poppler-glib],[\n    use_poppler=\"Yes\"\n    AC_DEFINE_UNQUOTED(HAVE_POPPLER,1,\n      [Define if you have the poppler library])\n    AC_SUBST([POPPLER_CFLAGS])\n    AC_SUBST([POPPLER_LIBS])\n  ],[\n    use_poppler=\"No (poppler library not available)\"\n  ])\nfi\nAM_CONDITIONAL(WITH_POPPLER, [test \"x$use_poppler\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for RSVG\n\nAC_ARG_WITH(rsvg,\n  [AS_HELP_STRING([--with-rsvg=yes],[rsvg library])],\n  [], [with_rsvg=yes])\n\nhave_svg_2_36=\"no\"\nif test \"x$with_rsvg\" != \"xyes\"; then\n  use_rsvg=\"No (disabled)\"\nelse\n  PKG_CHECK_MODULES(RSVG, [librsvg-2.0],[\n    use_rsvg=\"Yes\"\n    AC_DEFINE_UNQUOTED(HAVE_RSVG,1,\n      [Define if you have the rsvg library])\n    AC_SUBST([RSVG_CFLAGS])\n    AC_SUBST([RSVG_LIBS])\n  ],[\n    use_rsvg=\"No (rsvg library not available)\"\n  ])\n  PKG_CHECK_MODULES([SVG_2_36], [librsvg-2.0 >= 2.36.0 cairo >= 1.0.0],[\n      have_svg_2_36=\"yes\"\n      AC_DEFINE(HAVE_SVG_2_36, 1, [Have librsvg >= 2.36])\n    ],[\n      have_svg_2_36=\"no\"\n    ])\nfi\nAM_CONDITIONAL(WITH_RSVG, [test \"x$use_rsvg\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for GHOSTSCRIPT\n\nAC_ARG_WITH(ghostscript,\n  [AS_HELP_STRING([--with-ghostscript=yes],[ghostscript library])],\n  [], [with_ghostscript=yes])\n\nif test \"x$with_ghostscript\" != \"xyes\"; then\n  use_ghostscript=\"No (disabled)\"\nelse\n  if test \"x$HAVE_XRENDER\" != \"xyes\"; then\n    use_ghostscript=\"No (missing Xrender)\"\n  else\n      AC_CHECK_HEADER(ghostscript/iapi.h, GS_CFLAGS=\"\",use_ghostscript=\"No (missing headers)\")\n      if test \"x$use_ghostscript\" = \"x\"; then\n        AC_CHECK_LIB(gs, main, GS_LIBS=\"-lgs\", use_ghostscript=\"No (missing lib)\")\n        if test \"x$use_ghostscript\" = \"x\"; then\n          use_ghostscript=\"Yes\"\n          AC_DEFINE_UNQUOTED(HAVE_GS,1,\n            [Define if you have the gs library])\n          AC_SUBST([GS_CFLAGS])\n          AC_SUBST([GS_LIBS])\n        fi\n     fi\n  fi\nfi\nAM_CONDITIONAL(WITH_GS, [test \"x$use_ghostscript\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for VISIO\n\nAC_ARG_WITH(visio,\n  [AS_HELP_STRING([--with-visio=yes],[visio library])],\n  [], [with_visio=yes])\n\nif test \"x$with_visio\" != \"xyes\"; then\n  use_visio=\"No (disabled)\"\nelse\n#  AC_CHECK_HEADER(visio/visio.h, VISIO_CFLAGS=\"\",use_visio=\"No (missing headers)\")\n#  if test \"x$use_visio\" = \"x\"; then\n#    AC_CHECK_LIB(visio, main, VISIO_LIBS=\"-lgs\", use_visio=\"No (missing lib)\")\n#    if test \"x$use_visio\" = \"x\"; then\n      use_visio=\"Yes\"\n      AC_DEFINE_UNQUOTED(HAVE_VISIO,1,\n        [Define if you have the visio library])\n      AC_SUBST([VISIO_CFLAGS])\n      AC_SUBST([VISIO_LIBS])\n#    fi\n#  fi\nfi\nAM_CONDITIONAL(WITH_VISIO, [test \"x$use_visio\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for PANGOCAIRO\n\nAC_ARG_WITH(pangocairo,\n  [AS_HELP_STRING([--with-pangocairo=yes],[pangocairo library])],\n  [], [with_pangocairo=yes])\n\nif test \"x$with_pangocairo\" != \"xyes\"; then\n  use_pangocairo=\"No (disabled)\"\nelse\n  # require at least the version available on centos5 (fc6 has 1.14.10)\n  PKG_CHECK_MODULES(PANGOCAIRO, [pangocairo >= 1.14.9],[\n    use_pangocairo=\"Yes\"\n    AC_DEFINE_UNQUOTED(HAVE_PANGOCAIRO,1,\n      [Define if you have the pangocairo library])\n    AC_SUBST([PANGOCAIRO_CFLAGS])\n    AC_SUBST([PANGOCAIRO_LIBS])\n  ],[\n    use_pangocairo=\"No (pangocairo library not available)\"\n  ])\nfi\nAM_CONDITIONAL(WITH_PANGOCAIRO, [test \"x$use_pangocairo\" = \"xYes\"])\n\n# see if pango uses a fontconfig/freetype2 backend\nif test \"x$use_pangocairo\" = \"xYes\"; then\n    save_LIBS=$LIBS\n    PKG_CHECK_MODULES(PANGOFT2, [pangoft2])\n    LIBS=\"$LIBS $PANGOCAIRO_LIBS $PANGOFT2_LIBS\"\n    AC_CHECK_FUNCS([pango_fc_font_lock_face pango_fc_font_unlock_face pango_font_map_create_context cairo_surface_set_mime_data])\n    LIBS=$save_LIBS\nfi\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for LASI\n\nAC_ARG_WITH(lasi,\n  [AS_HELP_STRING([--with-lasi=yes],[lasi library])],\n  [], [with_lasi=yes])\n\nif test \"x$with_lasi\" != \"xyes\"; then\n  use_lasi=\"No (disabled)\"\nelse\n  if test \"x$use_pangocairo\" != \"xYes\"; then\n    use_lasi=\"No (missing pangocairo support)\"\n  else\n    PKG_CHECK_MODULES(LASI, [lasi],[\n      use_lasi=\"Yes\"\n      AC_DEFINE_UNQUOTED(HAVE_LASI,1,\n        [Define if you have the lasi library])\n      AC_SUBST([LASI_CFLAGS])\n      AC_SUBST([LASI_LIBS])\n    ],[\n      use_lasi=\"No (lasi library not available)\"\n    ])\n  fi\nfi\nAM_CONDITIONAL(WITH_LASI, [test \"x$use_lasi\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for GLITZ\n\nAC_ARG_WITH(glitz,\n  [AS_HELP_STRING([--with-glitz=no],[glitz library])],\n  [], [with_glitz=no])\n\nif test \"x$with_glitz\" != \"xyes\"; then\n  use_glitz=\"No (disabled by default - incomplete)\"\nelse\n  PKG_CHECK_MODULES(GLITZ, [glitz],[\n    use_glitz=\"Yes\"\n    AC_DEFINE_UNQUOTED(HAVE_GLITZ,1,\n      [Define if you have the glitz library])\n    AC_SUBST([GLITZ_CFLAGS])\n    AC_SUBST([GLITZ_LIBS])\n  ],[\n    use_glitz=\"No (glitz library not available)\"\n  ])\nfi\nAM_CONDITIONAL(WITH_GLITZ, [test \"x$use_glitz\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for FREETYPE2\n\nAC_ARG_WITH(freetype2,\n  [AS_HELP_STRING([--with-freetype2=yes],[freetype2 library])],\n  [], [with_freetype2=yes])\n\nif test \"x$with_freetype2\" != \"xyes\"; then\n  use_freetype=\"No (disabled)\"\nelse\n  PKG_CHECK_MODULES(FREETYPE2, [freetype2],[\n    use_freetype=\"Yes\"\n  ],[\n    AC_MSG_WARN(pkg-config did not find a freetype2.pc.  Looking for freetype-config.)\n  ])\nfi\n\n# pkgconfig for freetype2 did not exist in redhat[78]\nif test \"x$use_freetype\" = \"x\"; then\n    if test \"x$FREETYPE_DIR\" = \"xyes\"; then\n\tAC_PATH_PROG(FREETYPE_CONFIG,freetype-config)\n    else\n\tAC_PATH_PROG(FREETYPE_CONFIG,freetype-config,,[$FREETYPE_DIR/bin:$PATH])\n    fi\n\n    if test -n \"$FREETYPE_CONFIG\"; then\n        if test \"x$FREETYPE_DIR\" != \"xyes\"; then\n\t    FREETYPE2_CFLAGS=\"`$FREETYPE_CONFIG --cflags` -I$FREETYPE_DIR/include\"\n\telse\n\t    FREETYPE2_CFLAGS=`$FREETYPE_CONFIG --cflags`\n\tfi\n\tFREETYPE2_LIBS=`$FREETYPE_CONFIG --libs`\n\tuse_freetype=\"Yes\"\n    else\n        AC_MSG_WARN(freetype library not available)\n\tuse_freetype=\"No (missing freetype-config)\"\n    fi\nfi\n\nif test \"x$use_freetype\" = \"xYes\"; then\n  AC_DEFINE_UNQUOTED(HAVE_FREETYPE2,1,[Define if you have the freetype2 library])\n  AC_SUBST([FREETYPE2_CFLAGS])\n  AC_SUBST([FREETYPE2_LIBS])\nfi\nAM_CONDITIONAL(WITH_FREETYPE2, [test \"x$ue_freetype\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for FONTCONFIG\n\nAC_ARG_WITH(fontconfig,\n  [AS_HELP_STRING([--with-fontconfig=yes],[use fontconfig library])],\n  [], [with_fontconfig=yes])\n\nif test \"x$with_fontconfig\" != \"xyes\"; then\n  use_fontconfig=\"No (disabled)\"\nelse\n  PKG_CHECK_MODULES(FONTCONFIG, [fontconfig],[\n    use_fontconfig=\"Yes\"\n  ],[\n    AC_MSG_WARN(pkg-config did not find a fontconfig.pc.  Looking for fontconfig-config.)\n  ])\nfi\n\n# just in case pkgconfig for fontconfig does not exist\nif test \"x$use_fontconfig\" = \"x\"; then\n    if test \"x$FONTCONFIG_DIR\" = \"xyes\"; then\n\tAC_PATH_PROG(FONTCONFIG_CONFIG,fontconfig-config)\n    else\n\tAC_PATH_PROG(FONTCONFIG_CONFIG,fontconfig-config,,[$FONTCONFIG_DIR/bin:$PATH])\n    fi\n\n    if test -n \"$FONTCONFIG_CONFIG\"; then\n        if test \"x$FONTCONFIG_DIR\" != \"xyes\"; then\n\t    FONTCONFIG_CFLAGS=\"`$FONTCONFIG_CONFIG --cflags` -I$FONTCONFIG_DIR/include\"\n\telse\n\t    FONTCONFIG_CFLAGS=`$FONTCONFIG_CONFIG --cflags`\n\tfi\n\tFONTCONFIG_LIBS=`$FONTCONFIG_CONFIG --libs`\n\tuse_fontconfig=\"Yes\"\n    else\n\tuse_fontconfig=\"No (missing fontconfig-config)\"\n        AC_MSG_WARN(fontconfig library not available)\n    fi\nfi\n\nif test \"x$use_fontconfig\" = \"xYes\"; then\n  AC_DEFINE_UNQUOTED(HAVE_FONTCONFIG,1,[Define if you have the fontconfig library])\n  AC_SUBST([FONTCONFIG_CFLAGS])\n  AC_SUBST([FONTCONFIG_LIBS])\nfi\nAM_CONDITIONAL(WITH_FONTCONFIG, [test \"x$use_fontconfig\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for GDK\n\nAC_ARG_WITH(gdk,\n  [AS_HELP_STRING([--with-gdk=yes],[gdklibrary])],\n  [], [with_gdk=yes])\n\nif test \"x$with_gdk\" != \"xyes\"; then\n  use_gdk=\"No (disabled)\"\nelse\n  PKG_CHECK_MODULES(GDK, [gdk-2.0],[\n    use_gdk=\"Yes\"\n    AC_DEFINE_UNQUOTED(HAVE_GDK,1,\n      [Define if you have the gdk library])\n    AC_SUBST([GDK_CFLAGS])\n    AC_SUBST([GDK_LIBS])\n    save_LIBS=$LIBS\n    LIBS=\"$LIBS $GDK_LIBS\"\n    AC_CHECK_FUNCS([g_object_unref g_type_init])\n    LIBS=$save_LIBS\n  ],[\n    use_gdk_pixbuf=\"No (gdk library not available)\"\n  ])\nfi\nAM_CONDITIONAL(WITH_GDK, [test \"x$use_gdk\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for GDK_PIXBUF.\n\nAC_ARG_WITH(gdk-pixbuf,\n  [AS_HELP_STRING([--with-gdk-pixbuf=yes],[gdk-pixbuf library])],\n  [], [with_gdk_pixbuf=yes])\n\nif test \"x$with_gdk_pixbuf\" != \"xyes\"; then\n  use_gdk_pixbuf=\"No (disabled)\"\nelse\n  PKG_CHECK_MODULES(GDK_PIXBUF, [gdk-pixbuf-2.0],[\n    use_gdk_pixbuf=\"Yes\"\n    AC_DEFINE_UNQUOTED(HAVE_GDK_PIXBUF,1,\n      [Define if you have the gdk_pixbuf library])\n    AC_SUBST([GDK_PIXBUF_CFLAGS])\n    AC_SUBST([GDK_PIXBUF_LIBS])\n  ],[\n    use_gdk_pixbuf=\"No (gdk_pixbuf library not available)\"\n  ])\nfi\nAM_CONDITIONAL(WITH_GDK_PIXBUF, [test \"x$use_gdk_pixbuf\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for GTK.\n\nAC_ARG_WITH(gtk,\n  [AS_HELP_STRING([--with-gtk=yes],[gtk+ library])],\n  [], [with_gtk=yes])\n\nif test \"x$with_gtk\" != \"xyes\"; then\n  use_gtk=\"No (disabled)\"\nelse\n  PKG_CHECK_MODULES(GTK, [gtk+-2.0 >= 2.7.0],[\n    use_gtk=\"Yes\"\n    AC_DEFINE_UNQUOTED(HAVE_GTK,1,\n      [Define if you have the gtk library])\n    AC_SUBST([GTK_CFLAGS])\n    AC_SUBST([GTK_LIBS])\n  ],[\n    use_gtk=\"No (gtk library not available)\"\n  ])\nfi\nAM_CONDITIONAL(WITH_GTK, [test \"x$use_gtk\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for GTKGL.\n\nAC_ARG_WITH(gtkgl,\n  [AS_HELP_STRING([--with-gtkgl=yes],[gtkgl library])],\n  [], [with_gtkgl=yes])\n\nif test \"x$with_gtkgl\" != \"xyes\"; then\n  use_gtkgl=\"No (disabled)\"\nelse\n  PKG_CHECK_MODULES(GTKGL, [gtkgl-2.0],[\n    use_gtkgl=\"Yes\"\n    AC_DEFINE_UNQUOTED(HAVE_GTKGL,1,\n      [Define if you have the gtkgl library])\n    AC_SUBST([GTKGL_CFLAGS])\n    AC_SUBST([GTKGL_LIBS])\n  ],[\n    use_gtkgl=\"No (gtkgl library not available)\"\n  ])\nfi\nAM_CONDITIONAL(WITH_GTKGL, [test \"x$use_gtkgl\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for GTKGLEXT.\n\nAC_ARG_WITH(gtkglext,\n  [AS_HELP_STRING([--with-gtkglext=yes],[gtkglext library])],\n  [], [with_gtkglext=yes])\n\nif test \"x$with_gtkglext\" != \"xyes\"; then\n  use_gtkglext=\"No (disabled)\"\nelse\n  PKG_CHECK_MODULES(GTKGLEXT, [gtkglext-1.0],[\n    use_gtkglext=\"Yes\"\n    AC_DEFINE_UNQUOTED(HAVE_GTKGLEXT,1,\n      [Define if you have the gtkglext library])\n    AC_SUBST([GTKGLEXT_CFLAGS])\n    AC_SUBST([GTKGLEXT_LIBS])\n  ],[\n    use_gtkglext=\"No (gtkglext library not available)\"\n  ])\nfi\nAM_CONDITIONAL(WITH_GTKGLEXT, [test \"x$use_gtkglext\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for GTS.\n\nAC_ARG_WITH(gts,\n  [AS_HELP_STRING([--with-gts=yes],[gts library])],\n  [], [with_gts=yes])\n\nif test \"x$with_gts\" != \"xyes\"; then\n  use_gts=\"No (disabled)\"\nelse\n  PKG_CHECK_MODULES(GTS, [gts],[\n    use_gts=\"Yes\"\n    AC_DEFINE_UNQUOTED(HAVE_GTS,1,\n      [Define if you have the gts library])\n    AC_SUBST([GTS_CFLAGS])\n    AC_SUBST([GTS_LIBS])\n  ],[\n    use_gts=\"No (gts library not available)\"\n  ])\nfi\nAM_CONDITIONAL(WITH_GTS, [test \"x$use_gts\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for ANN.\n\nAC_ARG_WITH(ann,\n  [AS_HELP_STRING([--with-ann=yes],[ANN library])],\n  [], [with_ann=yes])\n\nif test \"x$with_ann\" != \"xyes\"; then\n  use_ann=\"No (disabled)\"\nelse\n  PKG_CHECK_MODULES(ANN, [ann],[\n    use_ann=\"Yes\"\n    AC_DEFINE_UNQUOTED(HAVE_ANN,1,\n      [Define if you have the ann library])\n    AC_SUBST([ANN_CFLAGS])\n    AC_SUBST([ANN_LIBS])\n  ],[\n    use_ann=\"No (no ann.pc found)\"\n  ])\n#  if test \"$use_ann\" != \"Yes\"; then\n#    if test -f /usr/lib$LIBPOSTFIX/libANN.so; then\n#      AC_DEFINE_UNQUOTED(HAVE_ANN,1,\n#        [Define if you have the ann library])\n#      ANN_LIBS=-lANN\n#      AC_SUBST([ANN_LIBS])\n#      use_ann=\"Yes (but no ann.pc found)\"\n#    else\n#      if test -f /usr/lib$LIBPOSTFIX/libann.so; then\n#        AC_DEFINE_UNQUOTED(HAVE_ANN,1,\n#          [Define if you have the ann library])\n#        ANN_LIBS=-lann\n#        AC_SUBST([ANN_LIBS])\n#        use_ann=\"Yes (but no ann.pc found)\"\n#      else\n#        if test -f /usr/lib/x86_64-linux-gnu/libann.so; then\n#          AC_DEFINE_UNQUOTED(HAVE_ANN,1,\n#            [Define if you have the ann library])\n#          ANN_LIBS=-L/usr/lib/x86_64-linux-gnu -lann\n#          AC_SUBST([ANN_LIBS])\n#          use_ann=\"Yes (but no ann.pc found so taking a wild guess its ubuntu-18.10)\"\n#        else\n#          if test -f /usr/lib/libann.so; then\n#            AC_DEFINE_UNQUOTED(HAVE_ANN,1,\n#              [Define if you have the ann library])\n#            ANN_LIBS=-L/usr/lib -lann\n#            AC_SUBST([ANN_LIBS])\n#            use_ann=\"Yes (but no ann.pc found so taking a wild guess its ubuntu-18.04)\"\n#          else\n#            use_ann=\"No (ANN library not available)\"\n#          fi\n#        fi\n#      fi\n#    fi\n#  fi\nfi\nAM_CONDITIONAL(WITH_ANN, [test x\"${use_ann%% *}\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for GLADE.\n\nAC_ARG_WITH(glade,\n  [AS_HELP_STRING([--with-glade=yes],[glade library])],\n  [], [with_glade=yes])\n\nif test \"x$with_glade\" != \"xyes\"; then\n  use_glade=\"No (disabled)\"\nelse\n  PKG_CHECK_MODULES(GLADE, [libglade-2.0],[\n    use_glade=\"Yes\"\n    AC_DEFINE_UNQUOTED(HAVE_GLADE,1,\n      [Define if you have the glade library])\n    AC_SUBST([GLADE_CFLAGS])\n    AC_SUBST([GLADE_LIBS])\n  ],[\n    use_glade=\"No (glade library not available)\"\n  ])\nfi\nAM_CONDITIONAL(WITH_GLADE, [test \"x$use_glade\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for MING (SWF renderer)\n\nAC_ARG_WITH(ming,\n  [AS_HELP_STRING([--with-ming=no],[ming library (plugin for -Tswf)])],\n  [], [with_ming=no])\n\nif test \"x$with_ming\" != \"xyes\"; then\n  use_ming=\"No (disabled by default - incomplete)\"\nelse\n  PKG_CHECK_MODULES(MING, [libming >= 0.4],[\n    use_ming=\"Yes\"\n    AC_DEFINE_UNQUOTED(HAVE_MING,1,\n      [Define if you have the ming library for SWF support])\n    AC_SUBST([MING_CFLAGS])\n    AC_SUBST([MING_LIBS])\n  ],[\n    use_ming=\"No (ming library not available)\"\n  ])\nfi\nAM_CONDITIONAL(WITH_MING, [test \"x$use_ming\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for QT\n\nAC_ARG_WITH(qt,\n  [AS_HELP_STRING([--with-qt=yes],[Qt features])],\n  [], [with_qt=yes])\n\nif test \"x$with_qt\" != \"xyes\"; then\n  use_qt=\"No (disabled)\"\nelse\n\n  # required for linking with QT5\n  AX_CHECK_COMPILE_FLAG([-std=c++11], [\n\tCXXFLAGS=\"${CXXFLAGS} -fPIE -fPIC -std=c++11\"\n     ],[\n\tCXXFLAGS=\"${CXXFLAGS} -fPIE -fPIC\"\n     ])\n  AC_CHECK_PROGS(QMAKE,qmake-qt5 qmake-qt4 qmake,false)\n  if test \"$QMAKE\" != \"false\"; then\n    PKG_CHECK_MODULES(QTCORE, [Qt5Core],[\n      PKG_CHECK_MODULES(QTGUI, [Qt5Widgets Qt5PrintSupport],[\n\tuse_qt=\"Yes\"\n      ],[\n        use_qt=\"No (QtGui not available)\"\n      ])\n    ],[\n      use_qt=\"No (QtCore not available)\"\n    ])\n  else\n    use_qt=\"No (qmake not found)\"\n  fi\nfi\nAM_CONDITIONAL(WITH_QT, [test \"x$use_qt\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for QUARTZ\n\nAC_ARG_WITH(quartz,\n  [AS_HELP_STRING([--with-quartz=no],[Quartz framework (Mac OS X)])],\n  [], [with_quartz=no])\n\nif test \"x$with_quartz\" != \"xyes\"; then\n  use_quartz=\"No (disabled by default - Mac only)\"\nelse\n  if test -d \"/System/Library/Frameworks/ApplicationServices.framework\"; then\n    use_quartz=\"Yes\"\n    AC_DEFINE_UNQUOTED(HAVE_QUARTZ,1,[Define if you have the Quartz framework for Mac OS X])\n    QUARTZ_CFLAGS=''\n    QUARTZ_LIBS='-framework ApplicationServices'\n    AC_SUBST([QUARTZ_CFLAGS])\n    AC_SUBST([QUARTZ_LIBS])\n  else\n    use_quartz=\"No (missing ApplicationServices.framework)\"\n  fi\nfi\nAM_CONDITIONAL(WITH_QUARTZ, [test \"x$use_quartz\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for PLATFORMSDK\n\nAC_ARG_WITH(platformsdkincludedir,\n  [AS_HELP_STRING([--with-platformsdkincludedir=DIR],[use Platform SDK (Windows) includes from DIR])],\n  [PLATFORMSDKINCLUDE=$withval; PLATFORMSDKINCLUDE_ESCAPED=${PLATFORMSDKINCLUDE//'\\\\'/\\\\\\\\}; PLATFORMSDKINCLUDE_ESCAPED=${PLATFORMSDKINCLUDE_ESCAPED// /\\\\ }])\n\nAC_ARG_WITH(platformsdklibdir,\n  [AS_HELP_STRING([--with-platformsdklibdir=DIR],[use Platform SDK (Windows) libraries from DIR])],\n  [PLATFORMSDKLIB=$withval])\n\nAC_SUBST([PLATFORMSDKINCLUDE])\nAC_SUBST([PLATFORMSDKINCLUDE_ESCAPED])\nAC_SUBST([PLATFORMSDKLIB])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for GDI+\n\nAC_ARG_WITH(gdiplus,\n  [AS_HELP_STRING([--with-gdiplus=no],[GDI+ framework (Windows)])],\n  [], [with_gdiplus=no])\n\nif test \"x$with_gdiplus\" != \"xyes\"; then\n  use_gdiplus=\"No (disabled by default - Windows only)\"\nelse\n  if test -f \"$PLATFORMSDKINCLUDE\\GdiPlus.h\" -a -f \"$PLATFORMSDKLIB\\GdiPlus.lib\"; then\n    use_gdiplus=\"Yes\"\n    AC_DEFINE_UNQUOTED(HAVE_GDIPLUS,1,[Define if you have the GDI+ framework for Windows])\n    GDIPLUS_HEADS=`cd \"$PLATFORMSDKINCLUDE\" && echo GdiPlus*.h`\n    GDIPLUS_CFLAGS=''\n    GDIPLUS_LIBS=''\n    AC_SUBST([GDIPLUS_HEADS])\n    AC_SUBST([GDIPLUS_CFLAGS])\n    AC_SUBST([GDIPLUS_LIBS])\n  else\n    use_gdiplus=\"No (missing headers)\"\n    AC_MSG_WARN(--with-gdiplus requires valid --with-platformsdkincludedir and --with-platformsdklibdir.)\n  fi\nfi\nAM_CONDITIONAL(WITH_GDIPLUS, [test \"x$use_gdiplus\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for GD\n\nAC_ARG_WITH(libgd,\n  [AS_HELP_STRING([--with-libgd=yes],[use gd library])],\n  [], [with_libgd=yes])\n\nif test \"x$with_libgd\" != \"xyes\"; then\n  use_gd=\"No (disabled)\"\nfi\n\nif test \"x$use_gd\" = \"x\"; then\n   PKG_CHECK_MODULES(GTK, [gdlib >= 2.0.33],[\n      have_gdlib=1\n# FIXME - why no features in the gdlib.pc?\n      GD_FEATURES=\"GD_PNG GD_JPEG GD_XPM GD_FONTCONFIG GD_FREETYPE GD_GIF GD_GIFANIM GD_OPENPOLYGON\"\n   ],[\n      AC_PATH_PROG(GDLIB_CONFIG,gdlib-config)\n      if test -n \"$GDLIB_CONFIG\"; then\n         have_gdlib=1\n         GDLIB_CFLAGS=`$GDLIB_CONFIG --includes`\n         GDLIB_LIBS=`$GDLIB_CONFIG --libs`\n         GDLIB_VERSION=`$GDLIB_CONFIG --version 2>/dev/null`\n         GD_LDFLAGS=`$GDLIB_CONFIG --ldflags | sed 's/-xarch=[^ ]* //'`\n         GD_FEATURES=`$GDLIB_CONFIG --features`\n\n         # GD version check >= 2.0.33  -- centos-5.8 has gd-2.0.33\n         GDLIB_VERSION_MAJOR=`echo $GDLIB_VERSION | cut -d '.' -f 1`\n         GDLIB_VERSION_MINOR=`echo $GDLIB_VERSION | cut -d '.' -f 2`\n         GDLIB_VERSION_MICRO=`echo $GDLIB_VERSION | cut -d '.' -f 3`\n         REQ_GDLIB_VERSION_MAJOR=2\n         REQ_GDLIB_VERSION_MINOR=0\n         REQ_GDLIB_VERSION_MICRO=33\n         if test $GDLIB_VERSION_MAJOR -lt $REQ_GDLIB_VERSION_MAJOR; then\n            use_gd=\"No (major version too old)\"\n         else\n            if test $GDLIB_VERSION_MAJOR -eq $REQ_GDLIB_VERSION_MAJOR; then\n              if test $GDLIB_VERSION_MINOR -lt $REQ_GDLIB_VERSION_MINOR; then\n                 use_gd=\"No (minor version too old)\"\n              else\n                 if test $GDLIB_VERSION_MINOR -eq $REQ_GDLIB_VERSION_MINOR; then\n\t\t            if test $GDLIB_VERSION_MICRO -lt $REQ_GDLIB_VERSION_MICRO; then\n                       use_gd=\"No (revision too old)\"\n\t\t            fi\n\t             fi\n\t          fi\n           fi\n        fi\n        if test \"x$use_gd\" != \"x\"; then\n            AC_MSG_WARN(GD library version $GDLIB_VERSION_MAJOR.$GDLIB_VERSION_MINOR.$GDLIB_VERSION_MICRO < $REQ_GDLIB_VERSION_MAJOR.$REQ_GDLIB_VERSION_MINOR.$REQ_GDLIB_VERSION_MICRO)\n        fi\n     else\n        AC_MSG_WARN(GD neither gdlib pkgconfig nor gdlib-config was found)\n     fi\n  ])\n  if test \"x$have_gdlib\" != \"x\"; then\n      AC_DEFINE_UNQUOTED(HAVE_GDLIB,1,[Define if you have the gdlib library])\n      for f in $GD_FEATURES ; do\n\t    if test \"$f\" = \"GD_PNG\"; then\n                AC_DEFINE_UNQUOTED(HAVE_GD_PNG,1,[Define if the GD library supports PNG])\n\t    fi\n\t    if test \"$f\" = \"GD_JPEG\"; then\n                AC_DEFINE_UNQUOTED(HAVE_GD_JPEG,1,[Define if the GD library supports JPEG])\n\t    fi\n\t    if test \"$f\" = \"GD_XPM\"; then\n                AC_DEFINE_UNQUOTED(HAVE_GD_XPM,1,[Define if the GD library supports XPM])\n\t    fi\n\t    if test \"$f\" = \"GD_FONTCONFIG\"; then\n                AC_DEFINE_UNQUOTED(HAVE_GD_FONTCONFIG,1,[Define if the GD library supports FONTCONFIG])\n\t\t        have_gd_fontconfig=1\n\t    fi\n\t    if test \"$f\" = \"GD_FREETYPE\"; then\n                AC_DEFINE_UNQUOTED(HAVE_GD_FREETYPE,1,[Define if the GD library supports FREETYPE])\n\t\t        have_gd_freetype=1\n\t    fi\n\t    if test \"$f\" = \"GD_GIF\"; then\n                AC_DEFINE_UNQUOTED(HAVE_GD_GIF,1,[Define if the GD library supports GIF])\n\t    fi\n\t    if test \"$f\" = \"GD_GIFANIM\"; then\n                AC_DEFINE_UNQUOTED(HAVE_GD_GIFANIM,1,[Define if the GD library supports GIFANIM])\n\t    fi\n\t    if test \"$f\" = \"GD_OPENPOLYGON\"; then\n                AC_DEFINE_UNQUOTED(HAVE_GD_OPENPOLYGON,1,[Define if the GD library supports OPENPOLYGON])\n\t    fi\n      done\n\n\tif test \"x$have_gd_fontconfig\" = \"x\"; then\n        AC_MSG_WARN(Your libgd was not built with fontconfig support. This may result in problems displaying fonts.)\n\tfi\n\tif test \"x$have_gd_freetype\" = \"x\"; then\n\t    AC_MSG_WARN(Your libgd was not built with freetype support. This may result in problems resolving fonts.)\n    fi\n  fi\n\n  # prevent explicit use of -I/usr/include as it breaks mingw cross-compiles\n  if test \"x$GDLIB_CFLAGS\" = \"x-I/usr/include\"; then\n     GDLIB_CFLAGS=\"\";\n  fi\n  # prevent explicit use of -L/usr/lib or -L/usr/lib64, unnecessary clutter\n  if test \"x$GD_LDFLAGS\" = \"x-L/usr/lib\"; then\n     GD_LDFLAGS=\"\";\n  fi\n  if test \"x$GD_LDFLAGS\" = \"x-L/usr/lib64\"; then\n     GD_LDFLAGS=\"\";\n  fi\n\n  if test \"x$use_gd\" = \"x\"; then\n    if test \"x$with_libgd\" = \"xyes\"; then\n    # see if we can use the external gd lib\n      save_CPPFLAGS=$CPPFLAGS\n      save_LDFLAGS=$LDFLAGS\n      AC_ARG_WITH(gdincludedir,\n        [AS_HELP_STRING([--with-gdincludedir=DIR],[use GD includes from DIR])],\n        GDLIB_CFLAGS=\"-I$withval\")\n      CPPFLAGS=\"$CPPFLAGS $GDLIB_CFLAGS\"\n      AC_ARG_WITH(gdlibdir,\n        [AS_HELP_STRING([--with-gdlibdir=DIR],[use GD libraries from DIR])],\n        [GD_LDFLAGS=\"-L$withval\"])\n      GDLIB_LIBS=\"$GD_LDFLAGS -lgd $GDLIB_LIBS\"\n      LDFLAGS=\"$LDFLAGS $GDLIB_LIBS\"\n      AC_CHECK_HEADER(gd.h,,[\n        AC_MSG_WARN(Optional GD library not available - no gd.h)\n        use_gd=\"No (gd headers not found)\"\n\twith_libgd=\"no\"\n      ])\n      if test \"x$use_gd\" = \"x\"; then\n        AC_CHECK_LIB(gd,main,[\n          AC_DEFINE_UNQUOTED(HAVE_LIBGD,1,[Define if you have the GD library])\n\t  use_gd=\"Yes\"\n        ],[\n          AC_MSG_WARN(Optional GD library not available)\n          use_gd=\"No (library not found)\"\n\t  with_libgd=\"no\"\n        ], $GD_LIBS)\n      fi\n      LDFLAGS=$save_LDFLAGS\n      CPPFLAGS=$save_CPPFLAGS\n    fi\n  fi\n  AC_SUBST([GDLIB_CFLAGS])\n  AC_SUBST([GDLIB_LIBS])\nfi\nAM_CONDITIONAL(WITH_LIBGD, [test \"x$with_libgd\" = \"xyes\"])\n\ndnl -----------------------------------\ndnl INCLUDES and LIBS for GLUT\n\nAC_ARG_WITH(glut,\n  [AS_HELP_STRING([--with-glut=yes],[GLUT library])],\n  [], [with_glut=yes])\n\nif test \"x$with_glut\" != \"xyes\"; then\n  use_glut=\"No (disabled)\"\nelse\n  save_CPPFLAGS=$CPPFLAGS\n  save_LDFLAGS=$LDFLAGS\n  AC_ARG_WITH(glutincludedir,\n    [AS_HELP_STRING([--with-glutincludedir=DIR],[use GLUT includes from DIR])],\n    [GLUT_CFLAGS=\"-I$withval\"])\n  CPPFLAGS=\"$CPPFLAGS $GLUT_CFLAGS\"\n  AC_ARG_WITH(glutlibdir,\n    [AS_HELP_STRING([--with-glutlibdir=DIR],[use GLUT libraries from DIR])],\n    [GLUT_LIBS=\"-L$withval\"])\n  LDFLAGS=\"$LDFLAGS $GLUT_LIBS\"\n\n  AC_CHECK_HEADER(GL/glut.h,\n    AC_CHECK_LIB(glut,main,\n      [GLUT_LIBS=\"$GLUT_LIBS -lglut\"\n      use_glut=\"Yes\"\n      AC_DEFINE_UNQUOTED(HAVE_GLUT,1,[Define if you have the GLUT library])],\n      use_glut=\"No (missing libglut)\"\n      AC_MSG_WARN(Optional glut library not available),\n      []),\n    use_glut=\"No (missing GL/glut.h)\"\n    AC_MSG_WARN(Optional glut library not available - no GL/glut.h))\nfi\n\nLDFLAGS=$save_LDFLAGS\nCPPFLAGS=$save_CPPFLAGS\nAC_SUBST([GLUT_CFLAGS])\nAC_SUBST([GLUT_LIBS])\n\n# -----------------------------------\n# tclInt.h\nif test -f \"$TCL_SRC_DIR/generic/tclInt.h\"; then\nTCLINT_INCLUDES=\"-I$TCL_SRC_DIR/generic\"\nelse\nif test -f \"/usr/include/tclInt.h\"; then\nTCLINT_INCLUDES=\"\"\nelse\nif test -f \"/usr/local/include/tclInt.h\"; then\nTCLINT_INCLUDES=\"-I/usr/local/include\"\nelse\nTCLINT_INCLUDES='-I$(top_srcdir)/tclpkg/tclstubs'\nfi\nfi\nfi\nAC_SUBST([TCLINT_INCLUDES])\n\n# ------------------------------------\n# triangle.[ch]\n\nif test -f \"lib/sfdpgen/triangle.c\"; then\nif test -f \"lib/sfdpgen/triangle.h\"; then\n    AC_DEFINE_UNQUOTED(HAVE_TRIANGLE,1,[Define if triangle.[ch] are available.])\nfi\nfi\n\n# ----------------------------------\n# tcl/tk pkgIndex.tcl generation\n\nTCL_PKGINDEX=\"\"\nTCL_PKGINDEX_GD=\"\"\nTCL_PKGINDEX_SWIG=\"\"\n#TK_PKGINDEX=\"\"\nif test \"$use_tcl\" = \"Yes\"; then\n    TCL_PKGINDEX=\"tcldot/pkgIndex.tcl tclpathplan/pkgIndex.tcl\"\n    if test \"x$with_libgd\" = \"xyes\"; then\n\tTCL_PKGINDEX_GD=\"gdtclft/pkgIndex.tcl\"\n    fi\n    if test \"x$SWIG\" != \"x\"; then\n\tTCL_PKGINDEX_SWIG=\"gv/pkgIndex.tcl\"\n    fi\nfi\nAC_SUBST([TCL_PKGINDEX])\nAC_SUBST([TCL_PKGINDEX_GD])\nAC_SUBST([TCL_PKGINDEX_SWIG])\n\ndnl -----------------------------------\ndnl SFDP\n\nAC_ARG_WITH(sfdp,\n  [AS_HELP_STRING([--with-sfdp=yes],[sfdp layout engine])],\n  [], [with_sfdp=yes])\n\nif test \"x$with_sfdp\" != \"xyes\"; then\n  use_sfdp=\"No (disabled)\"\nelse\n  use_sfdp=\"Yes\"\n  AC_DEFINE_UNQUOTED(SFDP,1,[Define if you want SFDP])\nfi\nAM_CONDITIONAL(WITH_SFDP, [test \"x$use_sfdp\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl SMYRNA\n\nAC_ARG_WITH(smyrna,\n  [AS_HELP_STRING([--with-smyrna=yes],[SMYRNA large graph viewer])],\n  [], [with_smyrna=yes])\n\nif test \"x$with_smyrna\" != \"xyes\"; then\n  use_smyrna=\"No (disabled)\"\nelse\n  if test \"x$use_gtk\" != \"xYes\"; then\n     AC_MSG_WARN(SMYRNA requires GTK)\n     requires=\" gtk+\"\n  fi\n  if test \"x$use_gtkglext\" != \"xYes\"; then\n     AC_MSG_WARN(SMYRNA requires GTKGLEXT)\n     requires=\"$requires gtkglext\"\n  fi\n  if test \"x$use_glade\" != \"xYes\"; then\n     AC_MSG_WARN(SMYRNA requires GLADE)\n     requires=\"$requires glade\"\n  fi\n  if test \"x$use_gts\" != \"xYes\"; then\n     AC_MSG_WARN(SMYRNA requires GTS)\n     requires=\"$requires gts\"\n  fi\n  if test \"x$use_glut\" != \"xYes\"; then\n     AC_MSG_WARN(SMYRNA requires GLUT)\n     requires=\"$requires glut\"\n  fi\n  if test \"x$requires\" != \"x\"; then\n     use_smyrna=\"No (requires:$requires)\"\n  else\n     use_smyrna=\"Yes\"\n     AC_DEFINE_UNQUOTED(SMYRNA,1,[Define if you want SMYRNA])\n  fi\nfi\nAM_CONDITIONAL(WITH_SMYRNA, [test \"x$use_smyrna\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl ORTHO\n\nAC_ARG_WITH(ortho,\n  [AS_HELP_STRING([--with-ortho=yes],[ORTHO features in neato layout engine])],\n  [], [with_ortho=yes])\n\nif test \"x$with_ortho\" != \"xyes\"; then\n  use_ortho=\"No (disabled)\"\nelse\n  use_ortho=\"Yes\"\n  AC_DEFINE_UNQUOTED(ORTHO,1,[Define if you want ORTHO])\nfi\nAM_CONDITIONAL(WITH_ORTHO, [test \"x$use_ortho\" = \"xYes\"])\n\ndnl -----------------------------------\ndnl DIGCOLA\n\nAC_ARG_WITH(digcola,\n  [AS_HELP_STRING([--with-digcola=yes],[DIGCOLA features in neato layout engine])],\n  [], [with_digcola=yes])\n\nif test \"x$with_digcola\" != \"xyes\"; then\n  use_digcola=\"No (disabled)\"\nelse\n  use_digcola=\"Yes\"\n  AC_DEFINE_UNQUOTED(DIGCOLA,1,[Define if you want DIGCOLA])\nfi\n\ndnl -----------------------------------\ndnl IPSEPCOLA   /* enabled by default. C++ issues on some platforms should be resolved by now */\nAC_ARG_WITH(ipsepcola,\n  [AS_HELP_STRING([--with-ipsepcola=yes],[IPSEPCOLA features in neato layout engine])],\n  [], [with_ipsepcola=yes])\n\nif test \"x$with_ipsepcola\" != \"xyes\"; then\n  use_ipsepcola=\"No (disabled)\"\nelse\n  if test \"x$use_digcola\" != \"xYes\"; then\n    use_ipsepcola=\"No (requires: digcola)\"\n  else\n    use_ipsepcola=\"Yes\"\n    AC_DEFINE_UNQUOTED(IPSEPCOLA,1,[Define if you want IPSEPCOLA])\n    IPSEPCOLA_INCLUDES='-I$(top_srcdir)/lib/vpsc'\n    IPSEPCOLA_LIBS='$(top_builddir)/lib/vpsc/libvpsc_C.la'\n    AC_SUBST([IPSEPCOLA_INCLUDES])\n    AC_SUBST([IPSEPCOLA_LIBS])\n  fi\nfi\nAM_CONDITIONAL(WITH_IPSEPCOLA, [test \"x$use_ipsepcola\" = \"xYes\"])\n\n# -----------------------------------\nAC_MSG_CHECKING(if FILE struct contains _cnt)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>\n\t]], [[FILE *f;\n\tint i;\n\ti=f->_cnt;\n\t]])],[AC_MSG_RESULT(yes)\n\tAC_DEFINE_UNQUOTED(HAVE_FILE_CNT,1,Define if FILE structure provides _cnt)\n\t],[AC_MSG_RESULT(no)\n\t])\n\n# -----------------------------------\n\nAC_MSG_CHECKING(if FILE struct contains _r)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>\n\t]], [[FILE *f;\n\tint i;\n\ti=f->_r;\n\t]])],[AC_MSG_RESULT(yes)\n\tAC_DEFINE_UNQUOTED(HAVE_FILE_R,1,Define if FILE structure provides _r)\n\t],[AC_MSG_RESULT(no)\n\t])\n\n# -----------------------------------\n\nAC_MSG_CHECKING(if FILE struct contains _next)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>\n\t]], [[FILE *f;\n\tint i;\n\ti=f->_next;\n\t]])],[AC_MSG_RESULT(yes)\n\tAC_DEFINE_UNQUOTED(HAVE_FILE_NEXT,1,Define if FILE structure provides _next)\n\t],[AC_MSG_RESULT(no)\n\t])\n\n# -----------------------------------\n\nAC_MSG_CHECKING(if FILE struct contains _IO_read_end)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>\n\t]], [[FILE *f;\n\tint i;\n\ti=f->_IO_read_end;\n\t]])],[AC_MSG_RESULT(yes)\n\tAC_DEFINE_UNQUOTED(HAVE_FILE_IO_READ_END,1,Define if FILE structure provides _IO_read_end)\n\t],[AC_MSG_RESULT(no)\n\t])\n\n# -----------------------------------\n\nAC_MSG_CHECKING(if intptr_t is declared)\nAC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <stdlib.h>\n  #include <stdint.h>\n\t#if HAVE_UNISTD_H\n\t#include <unistd.h>\n\t#endif\n\t]], [[intptr_t  abc;\n\t]])],[AC_MSG_RESULT(yes)\n\tAC_DEFINE_UNQUOTED(HAVE_INTPTR_T,1,Define if intptr_t is declared)\n\t],[AC_MSG_RESULT(no)\n\t])\n\n# -----------------------------------\n\nAC_MSG_CHECKING(if assert needs __eprintf)\ncat > conftest.$ac_ext <<EOF\n#include \"confdefs.h\"\n#include \"assert.h\"\nint main(int argc, char **argv) {\n(void)argv;\nassert(argc);\n; return 0; }\nEOF\n${CC-cc} -c $CFLAGS $CPPFLAGS conftest.$ac_ext 1>&5\nif test \"x`nm conftest.o |$EGREP __eprintf`\" != \"x\"; then\n    AC_MSG_RESULT(yes)\n    CFLAGS=\"$CFLAGS -DNDEBUG\"\nelse\n    AC_MSG_RESULT(no)\nfi\nrm -f conftest*\n\n# -----------------------------------------------------------------------\n\n# This is a historical artifact ... there are no other choices these days\n# This #define is never used in our sources,\n#    but apparently may still be in use by others\nAC_DEFINE_UNQUOTED(WITH_CGRAPH,1,[Historical artifact - always true])\nAM_CONDITIONAL(WITH_CGRAPH, [true])\n\n# -----------------------------------------------------------------------\n\n# Checking for unit testing framework Criterion\n# This framework is used for the unit tests\nAC_CHECK_LIB(\n  criterion,\n  main,\n  [\n    use_criterion=\"Yes\"\n    AC_DEFINE_UNQUOTED(HAVE_CRITERION,1,[Criterion unit testing framework is installed and available for use.])\n  ],\n  [\n    use_criterion=\"No (Criterion unit testing framework not installed)\"\n    AC_MSG_WARN(Criterion unit testing framework not installed)\n  ],\n  []\n)\nAM_CONDITIONAL(HAVE_CRITERION, test \"$use_criterion\" = \"Yes\")\n\n# -----------------------------------------------------------------------\n\n# Generate Makefiles\n#\ttests/regression_tests/vuln/Makefile was removed\nAC_CONFIG_FILES(Makefile\n\tdebian/changelog\n\tdoc/Makefile\n\tdoc/info/Makefile\n\tdoc/schema/Makefile\n\tcontrib/Makefile\n\tcontrib/prune/Makefile\n\tcontrib/diffimg/Makefile\n\tgraphs/Makefile\n\tgraphs/directed/Makefile\n\tgraphs/undirected/Makefile\n\tlib/Makefile\n\tlib/cdt/Makefile\n\tlib/cdt/libcdt.pc\n\tlib/cgraph/Makefile\n\tlib/cgraph/libcgraph.pc\n\tlib/rbtree/Makefile\n\tlib/pathplan/Makefile\n\tlib/pathplan/libpathplan.pc\n\tlib/ast/Makefile\n\tlib/sfio/Makefile\n\tlib/sfio/Sfio_f/Makefile\n\tlib/spine/Makefile\n\tlib/vmalloc/Makefile\n\tlib/dotgen/Makefile\n\tlib/neatogen/Makefile\n\tlib/fdpgen/Makefile\n\tlib/sparse/Makefile\n\tlib/mingle/Makefile\n\tlib/label/Makefile\n\tlib/sfdpgen/Makefile\n\tlib/sfdpgen/libsfdp.pc\n\tlib/osage/Makefile\n\tlib/edgepaint/Makefile\n\tlib/edgepaint/liblab_gamut.pc\n\tlib/gvpr/Makefile\n\tlib/gvpr/libgvpr.pc\n\tlib/circogen/Makefile\n\tlib/twopigen/Makefile\n\tlib/patchwork/Makefile\n\tlib/pack/Makefile\n\tlib/ortho/Makefile\n\tlib/expr/Makefile\n\tlib/expr/libexpr.pc\n\tlib/common/Makefile\n\tlib/ingraphs/Makefile\n\tlib/vpsc/Makefile\n\tlib/gvc/Makefile\n\tlib/gvc/libgvc.pc\n\tlib/xdot/Makefile\n\tlib/xdot/libxdot.pc\n\tlib/topfish/Makefile\n\tlib/glcomp/Makefile\n\tmacosx/Info.plist\n\tmacosx/build/graphviz.pmdoc/01local.xml\n\tmacosx/build/graphviz.pmdoc/02graphviz.xml\n\twindows/build/graphviz.wxs\n\twindows/Properties/AssemblyInfo.cs\n\tplugin/Makefile\n\tplugin/core/Makefile\n\tplugin/devil/Makefile\n\tplugin/gd/Makefile\n\tplugin/gdk/Makefile\n\tplugin/gdiplus/Makefile\n\tplugin/glitz/Makefile\n\tplugin/gs/Makefile\n\tplugin/gtk/Makefile\n\tplugin/lasi/Makefile\n\tplugin/ming/Makefile\n\tplugin/pango/Makefile\n\tplugin/poppler/Makefile\n\tplugin/quartz/Makefile\n\tplugin/rsvg/Makefile\n\tplugin/visio/Makefile\n\tplugin/webp/Makefile\n\tplugin/xlib/Makefile\n\tplugin/dot_layout/Makefile\n\tplugin/neato_layout/Makefile\n\tcmd/Makefile\n\tcmd/dot/Makefile\n\tcmd/tools/Makefile\n\tcmd/gvpr/Makefile\n\tcmd/gvpr/lib/Makefile\n\tcmd/lefty/ws/x11/libfilereq/Makefile\n\tcmd/lefty/ws/x11/Makefile\n\tcmd/lefty/ws/mswin32/Makefile\n\tcmd/lefty/ws/Makefile\n\tcmd/lefty/os/unix/Makefile\n\tcmd/lefty/os/mswin32/Makefile\n\tcmd/lefty/os/Makefile\n\tcmd/lefty/dot2l/Makefile\n\tcmd/lefty/examples/Makefile\n\tcmd/lefty/Makefile\n\tcmd/lneato/Makefile\n\tcmd/dotty/Makefile\n\tcmd/smyrna/Makefile\n\tcmd/gvmap/Makefile\n\tcmd/mingle/Makefile\n\tcmd/edgepaint/Makefile\n\tcmd/gvedit/Makefile\n\tcmd/gvedit/gvedit.pro\n\tcmd/gvedit/ui/Makefile\n\tcmd/gvedit/images/Makefile\n\ttclpkg/Makefile\n\ttclpkg/tclstubs/Makefile\n\ttclpkg/tclhandle/Makefile\n\ttclpkg/gdtclft/Makefile\n\ttclpkg/gdtclft/demo/Makefile\n\ttclpkg/tcldot/Makefile\n\ttclpkg/tcldot/demo/Makefile\n\ttclpkg/tclpathplan/Makefile\n\ttclpkg/tclpathplan/demo/Makefile\n\ttclpkg/tclpathplan/demo/pathplan_data/Makefile\n\ttclpkg/gv/Makefile\n\ttclpkg/gv/demo/Makefile\n\ttclpkg/gv/META.gv\n\trtest/Makefile\n\trtest/graphs/Makefile\n\trtest/linux.x86/Makefile\n\ttests/Makefile\n\ttests/unit_tests/Makefile\n\ttests/unit_tests/lib/Makefile\n\ttests/unit_tests/lib/common/Makefile\n\ttests/regression_tests/Makefile\n\ttests/regression_tests/installation/Makefile\n\ttests/regression_tests/shapes/Makefile\n\ttests/regression_tests/shapes/reference/Makefile\n\ttests/regression_tests/vuln/Makefile\n\ttests/regression_tests/vuln/input/Makefile\n\ttests/regression_tests/vuln/reference/Makefile\n\tshare/Makefile\n\tshare/examples/Makefile\n\tshare/gui/Makefile\n\tredhat/graphviz.spec.fedora\n\tredhat/graphviz.spec.rhel\n\tDoxyfile\n\t)\n\nAC_OUTPUT\n\ndnl ===========================================================================\n\nif test \"x$use_tcl\" != \"xYes\"; then\n  use_tcldot=\"No (tcl not available)\"\n  use_gdtclft=\"No (tcl not available)\"\n  use_tclpathplan=\"No (tcl not available)\"\n  use_gv_tcl=\"No (tcl not available)\"\nelse\n  use_tcldot=\"Yes\"\n  use_tclpathplan=\"Yes\"\n  if test \"x$use_swig\" != \"xYes\"; then\n    use_gv_tcl=\"No (swig not available)\"\n  else\n    use_gv_tcl=\"Yes\"\n  fi\n  if test \"x$use_gd\" != \"xYes\"; then\n    if test \"x$use_gd\" = \"xYes (internal)\"; then\n        use_gdtclft=\"Yes\"\n    else\n        use_gdtclft=\"No (gd not available)\"\n    fi\n  else\n    use_gdtclft=\"Yes\"\n  fi\nfi\n\necho \"\"\necho \"----------------------------------------------------------------\"\necho \"\"\necho \"graphviz-$VERSION will be compiled with the following:\"\necho \"\"\necho \"options:\"\necho \"  cgraph:        Yes (always enabled)\"\necho \"  digcola:       $use_digcola\"\necho \"  expat:         $use_expat\"\necho \"  fontconfig:    $use_fontconfig\"\necho \"  freetype:      $use_freetype\"\necho \"  glut:          $use_glut\"\necho \"  ann:           $use_ann\"\necho \"  gts:           $use_gts\"\necho \"  ipsepcola:     $use_ipsepcola\"\necho \"  ltdl:          $use_ltdl\"\necho \"  ortho:         $use_ortho\"\necho \"  sfdp:          $use_sfdp\"\necho \"  swig:          $use_swig ( $SWIG_VERSION )\"\necho \"  shared:        $use_shared\"\necho \"  static:        $use_static\"\necho \"  qt:            $use_qt\"\necho \"  x:             $use_xlib\"\necho \"\"\necho \"commands:\"\necho \"  dot:           Yes (always enabled)\"\necho \"  neato:         Yes (always enabled)\"\necho \"  fdp:           Yes (always enabled)\"\necho \"  circo:         Yes (always enabled)\"\necho \"  twopi:         Yes (always enabled)\"\necho \"  gvpr:          Yes (always enabled)\"\necho \"  gvmap:         Yes (always enabled)\"\necho \"  lefty:         $use_lefty\"\necho \"  smyrna:        $use_smyrna\"\necho \"  gvedit:        $use_qt\"\necho \"\"\necho \"plugin libraries:\"\necho \"  dot_layout:    Yes (always enabled)\"\necho \"  neato_layout:  Yes (always enabled)\"\necho \"  core:          Yes (always enabled)\"\necho \"  devil:         $use_devil\"\necho \"  gd:            $use_gd\"\necho \"  gdiplus:       $use_gdiplus\"\necho \"  gdk:           $use_gdk\"\necho \"  gdk_pixbuf:    $use_gdk_pixbuf\"\necho \"  ghostscript:   $use_ghostscript\"\necho \"  glitz:         $use_glitz\"\necho \"  gtk:           $use_gtk\"\necho \"  lasi:          $use_lasi\"\necho \"  ming:          $use_ming\"\necho \"  pangocairo:    $use_pangocairo\"\necho \"  poppler:       $use_poppler\"\necho \"  quartz:        $use_quartz\"\necho \"  rsvg:          $use_rsvg\"\necho \"  visio:         $use_visio\"\necho \"  webp:          $use_webp\"\necho \"  xlib:          $use_xlib\"\necho \"\"\necho \"language extensions:\"\necho \"  gv_sharp:      $use_sharp\"\necho \"  gv_d:          $use_d\"\necho \"  gv_go:         $use_go\"\necho \"  gv_guile:      $use_guile\"\necho \"  gv_io:         $use_io\"\necho \"  gv_java:       $use_java\"\necho \"  gv_javascript: $use_javascript\"\necho \"  gv_lua:        $use_lua\"\necho \"  gv_ocaml:      $use_ocaml\"\necho \"  gv_perl:       $use_perl\"\necho \"  gv_php:        $use_php\"\necho \"  gv_python:     $use_python\"\necho \"  gv_python2:    $use_python2\"\necho \"  gv_python3:    $use_python3\"\necho \"  gv_R:          $use_r\"\necho \"  gv_ruby:       $use_ruby\"\necho \"  gv_tcl:        $use_gv_tcl\"\necho \"\"\necho \"  tcldot:        $use_tcldot\"\necho \"  tclpathplan:   $use_tclpathplan\"\necho \"  gdtclft:       $use_gdtclft\"\necho \"\"\necho \"Testing utilities:\"\necho \"  criterion:     $use_criterion\"\n",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/lib/gvc/gvplugin.c": "/* $Id$ $Revision$ */\n/* vim:set shiftwidth=4 ts=8: */\n\n/*************************************************************************\n * Copyright (c) 2011 AT&T Intellectual Property \n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors: See CVS logs. Details at http://www.graphviz.org/\n *************************************************************************/\n\n#include \"config.h\"\n\n#include\t<string.h>\n#include        <sys/types.h>\n#include        <sys/stat.h>\n#ifdef HAVE_UNISTD_H\n#include <unistd.h>\n#else\n#include <ast/compat_unistd.h>\n#endif\n\n#ifdef ENABLE_LTDL\n#include\t<ltdl.h>\n#endif\n\n#include\t<cgraph/agxbuf.h>\n#include        <common/memory.h>\n#include        <common/types.h>\n#include        <gvc/gvplugin.h>\n#include        <gvc/gvcjob.h>\n#include        <gvc/gvcint.h>\n#include        <gvc/gvcproc.h>\n#include        <gvc/gvio.h>\n\n#include\t<common/const.h>\n#include <cgraph/strcasecmp.h>\n\n#ifdef _WIN32\n#define strdup(x) _strdup(x)\n#endif\n\n/*\n * Define an apis array of name strings using an enumerated api_t as index.\n * The enumerated type is defined gvplugin.h.  The apis array is\n * inititialized here by redefining ELEM and reinvoking APIS.\n */\n#define ELEM(x) #x,\nstatic char *api_names[] = { APIS };    /* \"render\", \"layout\", ... */\n\n#undef ELEM\n\n/* translate a string api name to its type, or -1 on error */\napi_t gvplugin_api(const char *str)\n{\n    int api;\n\n    for (api = 0; api < ARRAY_SIZE(api_names); api++) {\n        if (strcmp(str, api_names[api]) == 0)\n            return (api_t) api;\n    }\n    return -1;                  /* invalid api */\n}\n\n/* translate api_t into string name, or NULL */\nchar *gvplugin_api_name(api_t api)\n{\n    if (api >= ARRAY_SIZE(api_names))\n        return NULL;\n    return api_names[api];\n}\n\n/* install a plugin description into the list of available plugins\n * list is alpha sorted by type (not including :dependency), then\n * quality sorted within the type, then, if qualities are the same,\n * last install wins.\n */\nboolean gvplugin_install(GVC_t * gvc, api_t api, const char *typestr,\n                         int quality, gvplugin_package_t * package, gvplugin_installed_t * typeptr)\n{\n    gvplugin_available_t *plugin, **pnext;\n#define TYPSIZ 63\n    char *p, *t, pins[TYPSIZ + 1], pnxt[TYPSIZ + 1];\n\n    /* duplicate typestr to later save in the plugin list */\n    t = strdup(typestr);\n    if (t == NULL)\n        return FALSE;\n\n    strncpy(pins, typestr, TYPSIZ);\n    if ((p = strchr(pins, ':')))\n        *p = '\\0';\n\n    /* point to the beginning of the linked list of plugins for this api */\n    pnext = &(gvc->apis[api]);\n\n    /* keep alpha-sorted and insert new duplicates ahead of old */\n    while (*pnext) {\n        strncpy(pnxt, (*pnext)->typestr, TYPSIZ);\n        if ((p = strchr(pnxt, ':')))\n            *p = '\\0';\n        if (strcmp(pins, pnxt) <= 0)\n            break;\n        pnext = &((*pnext)->next);\n    }\n\n    /* keep quality sorted within type and insert new duplicates ahead of old */\n    while (*pnext) {\n        strncpy(pnxt, (*pnext)->typestr, TYPSIZ);\n        if ((p = strchr(pnxt, ':')))\n            *p = '\\0';\n        if (strcmp(pins, pnxt) != 0)\n            break;\n        if (quality >= (*pnext)->quality)\n            break;\n        pnext = &((*pnext)->next);\n    }\n\n    plugin = GNEW(gvplugin_available_t);\n    plugin->next = *pnext;\n    *pnext = plugin;\n    plugin->typestr = t;\n    plugin->quality = quality;\n    plugin->package = package;\n    plugin->typeptr = typeptr;  /* null if not loaded */\n\n    return TRUE;\n}\n\n/* Activate a plugin description in the list of available plugins.\n * This is used when a plugin-library loaded because of demand for\n * one of its plugins. It updates the available plugin data with\n * pointers into the loaded library.\n * NB the quality value is not replaced as it might have been\n * manually changed in the config file.\n */\nstatic boolean gvplugin_activate(GVC_t * gvc, api_t api,\n                                 const char *typestr, char *name, char *path, gvplugin_installed_t * typeptr)\n{\n    gvplugin_available_t *pnext;\n\n    /* point to the beginning of the linked list of plugins for this api */\n    pnext = gvc->apis[api];\n\n    while (pnext) {\n        if ((strcasecmp(typestr, pnext->typestr) == 0)\n            && (strcasecmp(name, pnext->package->name) == 0)\n            && (pnext->package->path != 0)\n            && (strcasecmp(path, pnext->package->path) == 0)) {\n            pnext->typeptr = typeptr;\n            return TRUE;\n        }\n        pnext = pnext->next;\n    }\n    return FALSE;\n}\n\ngvplugin_library_t *gvplugin_library_load(GVC_t * gvc, char *path)\n{\n#ifdef ENABLE_LTDL\n    lt_dlhandle hndl;\n    lt_ptr ptr;\n    char *s, *sym;\n    int len;\n    static char *p;\n    static int lenp;\n    char *libdir;\n    char *suffix = \"_LTX_library\";\n    struct stat sb;\n\n    if (!gvc->common.demand_loading)\n        return NULL;\n\n    libdir = gvconfig_libdir(gvc);\n    len = strlen(libdir) + 1 + strlen(path) + 1;\n    if (len > lenp) {\n        lenp = len + 20;\n        if (p)\n            p = grealloc(p, lenp);\n        else\n            p = gmalloc(lenp);\n    }\n#ifdef _WIN32\n    if (path[1] == ':') {\n#else\n    if (path[0] == '/') {\n#endif\n        strcpy(p, path);\n    } else {\n        strcpy(p, libdir);\n        strcat(p, DIRSEP);\n        strcat(p, path);\n    }\n\n    if (lt_dlinit()) {\n        agerr(AGERR, \"failed to init libltdl\\n\");\n        return NULL;\n    }\n    hndl = lt_dlopen(p);\n    if (!hndl) {\n        if ((stat(p, &sb)) == 0) {\n            agerr(AGWARN, \"Could not load \\\"%s\\\" - %s\\n\", p, \"It was found, so perhaps one of its dependents was not.  Try ldd.\");\n        }\n        else {\n            agerr(AGWARN, \"Could not load \\\"%s\\\" - %s\\n\", p, lt_dlerror());\n        }\n        return NULL;\n    }\n    if (gvc->common.verbose >= 2)\n        fprintf(stderr, \"Loading %s\\n\", p);\n\n    s = strrchr(p, DIRSEP[0]);\n    len = strlen(s);\n#if defined(_WIN32) && !defined(__MINGW32__) && !defined(__CYGWIN__)\n    if (len < strlen(\"/gvplugin_x\")) {\n#else\n    if (len < strlen(\"/libgvplugin_x\")) {\n#endif\n        agerr(AGERR, \"invalid plugin path \\\"%s\\\"\\n\", p);\n        return NULL;\n    }\n    sym = gmalloc(len + strlen(suffix) + 1);\n#if defined(_WIN32) && !defined(__MINGW32__) && !defined(__CYGWIN__)\n    strcpy(sym, s + 1);         /* strip leading \"/\"  */\n#else\n    strcpy(sym, s + 4);         /* strip leading \"/lib\" or \"/cyg\" */\n#endif\n#if defined(__CYGWIN__) || defined(__MINGW32__)\n    s = strchr(sym, '-');       /* strip trailing \"-1.dll\" */\n#else\n    s = strchr(sym, '.');       /* strip trailing \".so.0\" or \".dll\" or \".sl\" */\n#endif\n    strcpy(s, suffix);          /* append \"_LTX_library\" */\n\n    ptr = lt_dlsym(hndl, sym);\n    if (!ptr) {\n        agerr(AGERR, \"failed to resolve %s in %s\\n\", sym, p);\n        free(sym);\n        return NULL;\n    }\n    free(sym);\n    return (gvplugin_library_t *) (ptr);\n#else\n    agerr(AGERR, \"dynamic loading not available\\n\");\n    return NULL;\n#endif\n}\n\n\n/* load a plugin of type=str\n\tthe str can optionally contain one or more \":dependencies\" \n\n\texamples:\n\t        png\n\t\tpng:cairo\n        fully qualified:\n\t\tpng:cairo:cairo\n\t\tpng:cairo:gd\n\t\tpng:gd:gd\n      \n*/\ngvplugin_available_t *gvplugin_load(GVC_t * gvc, api_t api, const char *str)\n{\n    gvplugin_available_t *pnext, *rv;\n    gvplugin_library_t *library;\n    gvplugin_api_t *apis;\n    gvplugin_installed_t *types;\n#define TYPBUFSIZ 64\n    char reqtyp[TYPBUFSIZ], typ[TYPBUFSIZ];\n    char *reqdep, *dep = NULL, *reqpkg;\n    int i;\n    api_t apidep;\n\n    if (api == API_device || api == API_loadimage)\n        /* api dependencies - FIXME - find better way to code these *s */\n        apidep = API_render;\n    else\n        apidep = api;\n\n    strncpy(reqtyp, str, TYPBUFSIZ - 1);\n    reqdep = strchr(reqtyp, ':');\n    if (reqdep) {\n        *reqdep++ = '\\0';\n        reqpkg = strchr(reqdep, ':');\n        if (reqpkg)\n            *reqpkg++ = '\\0';\n    } else\n        reqpkg = NULL;\n\n    /* iterate the linked list of plugins for this api */\n    for (pnext = gvc->apis[api]; pnext; pnext = pnext->next) {\n        strncpy(typ, pnext->typestr, TYPBUFSIZ - 1);\n        dep = strchr(typ, ':');\n        if (dep)\n            *dep++ = '\\0';\n        if (strcmp(typ, reqtyp))\n            continue;           /* types empty or mismatched */\n        if (dep && reqdep && strcmp(dep, reqdep))\n            continue;           /* dependencies not empty, but mismatched */\n        if (!reqpkg || strcmp(reqpkg, pnext->package->name) == 0) {\n            /* found with no packagename constraints, or with required matching packagname */\n\n            if (dep && (apidep != api)) /* load dependency if needed, continue if can't find */\n                if (!(gvplugin_load(gvc, apidep, dep)))\n                    continue;\n            break;\n        }\n    }\n    rv = pnext;\n\n    if (rv && rv->typeptr == NULL) {\n        library = gvplugin_library_load(gvc, rv->package->path);\n        if (library) {\n\n            /* Now activate the library with real type ptrs */\n            for (apis = library->apis; (types = apis->types); apis++) {\n                for (i = 0; types[i].type; i++) {\n                    /* NB. quality is not checked or replaced\n                     *   in case user has manually edited quality in config */\n                    gvplugin_activate(gvc, apis->api, types[i].type, library->packagename, rv->package->path, &types[i]);\n                }\n            }\n            if (gvc->common.verbose >= 1)\n                fprintf(stderr, \"Activated plugin library: %s\\n\", rv->package->path ? rv->package->path : \"<builtin>\");\n        }\n    }\n\n    /* one last check for successful load */\n    if (rv && rv->typeptr == NULL)\n        rv = NULL;\n\n    if (rv && gvc->common.verbose >= 1)\n        fprintf(stderr, \"Using %s: %s:%s\\n\", api_names[api], rv->typestr, rv->package->name);\n\n    gvc->api[api] = rv;\n    return rv;\n}\n\n/* assemble a string list of available plugins \n * non-re-entrant as character store is shared\n */\nchar *gvplugin_list(GVC_t * gvc, api_t api, const char *str)\n{\n    static int first = 1;\n    const gvplugin_available_t *pnext, *plugin;\n    char *bp;\n    char *s, *p, *q, *typestr_last;\n    boolean new = TRUE;\n    static agxbuf xb;\n\n    /* check for valid str */\n    if (!str)\n        return NULL;\n\n    if (first) {\n        agxbinit(&xb, 0, 0);\n        first = 0;\n    }\n\n    /* does str have a :path modifier? */\n    s = strdup(str);\n    p = strchr(s, ':');\n    if (p)\n        *p++ = '\\0';\n\n    /* point to the beginning of the linked list of plugins for this api */\n    plugin = gvc->apis[api];\n\n    if (p) {                    /* if str contains a ':', and if we find a match for the type,\n                                   then just list the alternative paths for the plugin */\n        for (pnext = plugin; pnext; pnext = pnext->next) {\n            q = strdup(pnext->typestr);\n            if ((p = strchr(q, ':')))\n                *p++ = '\\0';\n            /* list only the matching type, or all types if s is an empty string */\n            if (!s[0] || strcasecmp(s, q) == 0) {\n                /* list each member of the matching type as \"type:path\" */\n                agxbprint(&xb, \" %s:%s\", pnext->typestr, pnext->package->name);\n                new = FALSE;\n            }\n            free(q);\n        }\n    }\n    free(s);\n    if (new) {                  /* if the type was not found, or if str without ':',\n                                   then just list available types */\n        typestr_last = NULL;\n        for (pnext = plugin; pnext; pnext = pnext->next) {\n            /* list only one instance of type */\n            q = strdup(pnext->typestr);\n            if ((p = strchr(q, ':')))\n                *p++ = '\\0';\n            if (!typestr_last || strcasecmp(typestr_last, q) != 0) {\n                /* list it as \"type\"  i.e. w/o \":path\" */\n                agxbprint(&xb, \" %s\", q);\n                new = FALSE;\n            }\n            free(typestr_last);\n            typestr_last = q;\n        }\n        free(typestr_last);\n    }\n    if (new)\n        bp = \"\";\n    else\n        bp = agxbuse(&xb);\n    return bp;\n}\n\n/* gvPluginList:\n * Return list of plugins of type kind.\n * The size of the list is stored in sz.\n * The caller is responsible for freeing the storage. This involves\n * freeing each item, then the list.\n * Returns NULL on error, or if there are no plugins.\n * In the former case, sz is unchanged; in the latter, sz = 0.\n *\n * At present, the str argument is unused, but may be used to modify\n * the search as in gvplugin_list above.\n */\nchar **gvPluginList(GVC_t * gvc, const char *kind, int *sz, const char *str)\n{\n    int api;\n    const gvplugin_available_t *pnext, *plugin;\n    int cnt = 0;\n    char **list = NULL;\n    char *p, *q, *typestr_last;\n\n    if (!kind)\n        return NULL;\n    for (api = 0; api < ARRAY_SIZE(api_names); api++) {\n        if (!strcasecmp(kind, api_names[api]))\n            break;\n    }\n    if (api == ARRAY_SIZE(api_names)) {\n        agerr(AGERR, \"unrecognized api name \\\"%s\\\"\\n\", kind);\n        return NULL;\n    }\n\n    /* point to the beginning of the linked list of plugins for this api */\n    plugin = gvc->apis[api];\n    typestr_last = NULL;\n    for (pnext = plugin; pnext; pnext = pnext->next) {\n        /* list only one instance of type */\n        q = strdup(pnext->typestr);\n        if ((p = strchr(q, ':')))\n            *p++ = '\\0';\n        if (!typestr_last || strcasecmp(typestr_last, q) != 0) {\n            list = RALLOC(cnt + 1, list, char *);\n            list[cnt++] = q;\n        }\n        typestr_last = q;\n    }\n\n    *sz = cnt;\n    return list;\n}\n\nvoid gvplugin_write_status(GVC_t * gvc)\n{\n    int api;\n\n#ifdef ENABLE_LTDL\n    if (gvc->common.demand_loading) {\n        fprintf(stderr, \"The plugin configuration file:\\n\\t%s\\n\", gvc->config_path);\n        if (gvc->config_found)\n            fprintf(stderr, \"\\t\\twas successfully loaded.\\n\");\n        else\n            fprintf(stderr, \"\\t\\twas not found or not usable. No on-demand plugins.\\n\");\n    } else {\n        fprintf(stderr, \"Demand loading of plugins is disabled.\\n\");\n    }\n#endif\n\n    for (api = 0; api < ARRAY_SIZE(api_names); api++) {\n        if (gvc->common.verbose >= 2)\n            fprintf(stderr, \"    %s\\t: %s\\n\", api_names[api], gvplugin_list(gvc, api, \":\"));\n        else\n            fprintf(stderr, \"    %s\\t: %s\\n\", api_names[api], gvplugin_list(gvc, api, \"?\"));\n    }\n\n}\n\nAgraph_t *gvplugin_graph(GVC_t * gvc)\n{\n    Agraph_t *g, *sg, *ssg;\n    Agnode_t *n, *m, *loadimage_n, *renderer_n, *device_n, *textlayout_n, *layout_n;\n    Agedge_t *e;\n    Agsym_t *a;\n    gvplugin_package_t *package;\n    const gvplugin_available_t *pnext;\n    char bufa[100], *buf1, *buf2, bufb[100], *p, *q, *lq, *t;\n    int api, neededge_loadimage, neededge_device;\n\n    g = agopen(\"G\", Agdirected, NIL(Agdisc_t *));\n    agattr(g, AGRAPH, \"label\", \"\");\n    agattr(g, AGRAPH, \"rankdir\", \"\");\n    agattr(g, AGRAPH, \"rank\", \"\");\n    agattr(g, AGRAPH, \"ranksep\", \"\");\n    agattr(g, AGNODE, \"label\", NODENAME_ESC);\n    agattr(g, AGNODE, \"shape\", \"\");\n    agattr(g, AGNODE, \"style\", \"\");\n    agattr(g, AGNODE, \"width\", \"\");\n    agattr(g, AGEDGE, \"style\", \"\");\n\n    a = agfindgraphattr(g, \"rankdir\");\n    agxset(g, a, \"LR\");\n\n    a = agfindgraphattr(g, \"ranksep\");\n    agxset(g, a, \"2.5\");\n\n    a = agfindgraphattr(g, \"label\");\n    agxset(g, a, \"Plugins\");\n\n    for (package = gvc->packages; package; package = package->next) {\n        loadimage_n = renderer_n = device_n = textlayout_n = layout_n = NULL;\n        neededge_loadimage = neededge_device = 0;\n        strcpy(bufa, \"cluster_\");\n        strcat(bufa, package->name);\n        sg = agsubg(g, bufa, 1);\n        a = agfindgraphattr(sg, \"label\");\n        agxset(sg, a, package->name);\n        strcpy(bufa, package->name);\n        strcat(bufa, \"_\");\n        buf1 = bufa + strlen(bufa);\n        for (api = 0; api < ARRAY_SIZE(api_names); api++) {\n            strcpy(buf1, api_names[api]);\n            ssg = agsubg(sg, bufa, 1);\n            a = agfindgraphattr(ssg, \"rank\");\n            agxset(ssg, a, \"same\");\n            strcat(buf1, \"_\");\n            buf2 = bufa + strlen(bufa);\n            for (pnext = gvc->apis[api]; pnext; pnext = pnext->next) {\n                if (pnext->package == package) {\n                    t = q = strdup(pnext->typestr);\n                    if ((p = strchr(q, ':')))\n                        *p++ = '\\0';\n                    /* Now p = renderer, e.g. \"gd\"\n                     * and q = device, e.g. \"png\"\n                     * or  q = loadimage, e.g. \"png\" */\n                    switch (api) {\n                    case API_device:\n                    case API_loadimage:\n\t\t\t/* draw device as box - record last device in plugin  (if any) in device_n */\n\t\t\t/* draw loadimage as box - record last loadimage in plugin  (if any) in loadimage_n */\n\n                        /* hack for aliases */\n\t\t\tlq = q;\n                        if (!strncmp(q, \"jp\", 2)) {\n                            q = \"jpg\";                /* canonical - for node name */\n\t\t\t    lq = \"jpeg\\\\njpe\\\\njpg\";  /* list - for label */\n\t\t\t}\n                        else if (!strncmp(q, \"tif\", 3)) {\n                            q = \"tif\";\n\t\t\t    lq = \"tiff\\\\ntif\";\n\t\t\t}\n                        else if (!strcmp(q, \"x11\") || !strcmp(q, \"xlib\")) {\n                            q = \"x11\";\n                            lq = \"x11\\\\nxlib\";\n\t\t\t}\n                        else if (!strcmp(q, \"dot\") || !strcmp(q, \"gv\")) {\n                            q = \"gv\";\n                            lq = \"gv\\\\ndot\";\n\t\t\t}\n\n                        strcpy(buf2, q);\n                        n = agnode(ssg, bufa, 1);\n                        a = agfindnodeattr(g, \"label\");\n                        agxset(n, a, lq);\n                        a = agfindnodeattr(g, \"width\");\n                        agxset(n, a, \"1.0\");\n                        a = agfindnodeattr(g, \"shape\");\n\t\t\tif (api == API_device) {\n                            agxset(n, a, \"box\");\n                            device_n = n;\n\t\t\t}\n                        else {\n                            agxset(n, a, \"box\");\n                            loadimage_n = n;\n\t\t\t}\n                        if (!(p && *p)) {\n                            strcpy(bufb, \"render_cg\");\n                            m = agfindnode(sg, bufb);\n                            if (!m) {\n                                m = agnode(sg, bufb, 1);\n                                a = agfindgraphattr(g, \"label\");\n                                agxset(m, a, \"cg\");\n                            }\n                            agedge(sg, m, n, NULL, 1);\n                        }\n                        break;\n                    case API_render:\n\t\t\t/* draw renderers as ellipses - record last renderer in plugin (if any) in renderer_n */\n                        strcpy(bufb, api_names[api]);\n                        strcat(bufb, \"_\");\n                        strcat(bufb, q);\n                        renderer_n = n = agnode(ssg, bufb, 1);\n                        a = agfindnodeattr(g, \"label\");\n                        agxset(n, a, q);\n                        break;\n                    case API_textlayout:\n\t\t\t/* draw textlayout  as invtriangle - record last textlayout in plugin  (if any) in textlayout_n */\n\t\t\t/* FIXME? only one textlayout is loaded. Why? */\n                        strcpy(bufb, api_names[api]);\n                        strcat(bufb, \"_\");\n                        strcat(bufb, q);\n                        textlayout_n = n = agnode(ssg, bufb, 1);\n                        a = agfindnodeattr(g, \"shape\");\n                        agxset(n, a, \"invtriangle\");\n                        a = agfindnodeattr(g, \"label\");\n                        agxset(n, a, \"T\");\n                        break;\n                    case API_layout:\n\t\t\t/* draw textlayout  as hexagon - record last layout in plugin  (if any) in layout_n */\n                        strcpy(bufb, api_names[api]);\n                        strcat(bufb, \"_\");\n                        strcat(bufb, q);\n                        layout_n = n = agnode(ssg, bufb, 1);\n                        a = agfindnodeattr(g, \"shape\");\n                        agxset(n, a, \"hexagon\");\n                        a = agfindnodeattr(g, \"label\");\n                        agxset(n, a, q);\n                        break;\n                    default:\n                        break;\n                    }\n                    free(t);\n                }\n            }\n            // add some invisible nodes (if needed) and invisible edges to \n            //    improve layout of cluster\n            if (api == API_loadimage && !loadimage_n) {\n\t\tneededge_loadimage = 1;\n                strcpy(buf2, \"invis\");\n                loadimage_n = n = agnode(ssg, bufa, 1);\n                a = agfindnodeattr(g, \"style\");\n                agxset(n, a, \"invis\");\n                a = agfindnodeattr(g, \"label\");\n                agxset(n, a, \"\");\n                a = agfindnodeattr(g, \"width\");\n                agxset(n, a, \"1.0\");\n\n                strcpy(buf2, \"invis_src\");\n                n = agnode(g, bufa, 1);\n                a = agfindnodeattr(g, \"style\");\n                agxset(n, a, \"invis\");\n                a = agfindnodeattr(g, \"label\");\n                agxset(n, a, \"\");\n\n                e = agedge(g, n, loadimage_n, NULL, 1);\n                a = agfindedgeattr(g, \"style\");\n                agxset(e, a, \"invis\");\n\t    }\n            if (api == API_render && !renderer_n) {\n\t\tneededge_loadimage = 1;\n\t\tneededge_device = 1;\n                strcpy(buf2, \"invis\");\n                renderer_n = n = agnode(ssg, bufa, 1);\n                a = agfindnodeattr(g, \"style\");\n                agxset(n, a, \"invis\");\n                a = agfindnodeattr(g, \"label\");\n                agxset(n, a, \"\");\n\t    }\n            if (api == API_device && !device_n) {\n\t\tneededge_device = 1;\n                strcpy(buf2, \"invis\");\n                device_n = n = agnode(ssg, bufa, 1);\n                a = agfindnodeattr(g, \"style\");\n                agxset(n, a, \"invis\");\n                a = agfindnodeattr(g, \"label\");\n                agxset(n, a, \"\");\n                a = agfindnodeattr(g, \"width\");\n                agxset(n, a, \"1.0\");\n\t    }\n        }\n        if (neededge_loadimage) {\n            e = agedge(sg, loadimage_n, renderer_n, NULL, 1);\n            a = agfindedgeattr(g, \"style\");\n            agxset(e, a, \"invis\");\n        }\n        if (neededge_device) {\n            e = agedge(sg, renderer_n, device_n, NULL, 1);\n            a = agfindedgeattr(g, \"style\");\n            agxset(e, a, \"invis\");\n        }\n        if (textlayout_n) {\n            e = agedge(sg, loadimage_n, textlayout_n, NULL, 1);\n            a = agfindedgeattr(g, \"style\");\n            agxset(e, a, \"invis\");\n        }\n        if (layout_n) {\n            e = agedge(sg, loadimage_n, layout_n, NULL, 1);\n            a = agfindedgeattr(g, \"style\");\n            agxset(e, a, \"invis\");\n        }\n    }\n\n    ssg = agsubg(g, \"output_formats\", 1);\n    a = agfindgraphattr(ssg, \"rank\");\n    agxset(ssg, a, \"same\");\n    for (package = gvc->packages; package; package = package->next) {\n        strcpy(bufa, package->name);\n        strcat(bufa, \"_\");\n        buf1 = bufa + strlen(bufa);\n        for (api = 0; api < ARRAY_SIZE(api_names); api++) {\n            strcpy(buf1, api_names[api]);\n            strcat(buf1, \"_\");\n            buf2 = bufa + strlen(bufa);\n            for (pnext = gvc->apis[api]; pnext; pnext = pnext->next) {\n                if (pnext->package == package) {\n                    t = q = strdup(pnext->typestr);\n                    if ((p = strchr(q, ':')))\n                        *p++ = '\\0';\n                    /* Now p = renderer, e.g. \"gd\"\n                     * and q = device, e.g. \"png\"\n                     * or  q = imageloader, e.g. \"png\" */\n\n \t\t    /* hack for aliases */\n                    lq = q;\n                    if (!strncmp(q, \"jp\", 2)) {\n                        q = \"jpg\";                /* canonical - for node name */\n                        lq = \"jpeg\\\\njpe\\\\njpg\";  /* list - for label */\n                    }\n                    else if (!strncmp(q, \"tif\", 3)) {\n                        q = \"tif\";\n                        lq = \"tiff\\\\ntif\";\n                    }\n                    else if (!strcmp(q, \"x11\") || !strcmp(q, \"xlib\")) {\n                        q = \"x11\";\n                        lq = \"x11\\\\nxlib\";\n                    }\n                    else if (!strcmp(q, \"dot\") || !strcmp(q, \"gv\")) {\n                        q = \"gv\";\n                        lq = \"gv\\\\ndot\";\n                    }\n\n                    switch (api) {\n                    case API_device:\n                        strcpy(buf2, q);\n                        n = agnode(g, bufa, 1);\n                        strcpy(bufb, \"output_\");\n                        strcat(bufb, q);\n                        m = agfindnode(ssg, bufb);\n                        if (!m) {\n                            m = agnode(ssg, bufb, 1);\n                            a = agfindnodeattr(g, \"label\");\n                            agxset(m, a, lq);\n                            a = agfindnodeattr(g, \"shape\");\n                            agxset(m, a, \"note\");\n                        }\n                        e = agfindedge(g, n, m);\n                        if (!e)\n                            e = agedge(g, n, m, NULL, 1);\n                        if (p && *p) {\n                            strcpy(bufb, \"render_\");\n                            strcat(bufb, p);\n                            m = agfindnode(ssg, bufb);\n                            if (!m)\n                                m = agnode(g, bufb, 1);\n                            e = agfindedge(g, m, n);\n                            if (!e)\n                                e = agedge(g, m, n, NULL, 1);\n                        }\n                        break;\n                    case API_loadimage:\n                        strcpy(buf2, q);\n                        n = agnode(g, bufa, 1);\n                        strcpy(bufb, \"input_\");\n                        strcat(bufb, q);\n                        m = agfindnode(g, bufb);\n                        if (!m) {\n                            m = agnode(g, bufb, 1);\n                            a = agfindnodeattr(g, \"label\");\n                            agxset(m, a, lq);\n                            a = agfindnodeattr(g, \"shape\");\n                            agxset(m, a, \"note\");\n                        }\n                        e = agfindedge(g, m, n);\n                        if (!e)\n                            e = agedge(g, m, n, NULL, 1);\n                        strcpy(bufb, \"render_\");\n                        strcat(bufb, p);\n                        m = agfindnode(g, bufb);\n                        if (!m)\n                            m = agnode(g, bufb, 1);\n                        e = agfindedge(g, n, m);\n                        if (!e)\n                            e = agedge(g, n, m, NULL, 1);\n                        break;\n                    default:\n                        break;\n                    }\n                    free(t);\n                }\n            }\n        }\n    }\n\n    return g;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/m4/lib-link.m4": "# lib-link.m4 serial 3 (gettext-0.11.3)\ndnl Copyright (C) 2001-2002 Free Software Foundation, Inc.\ndnl This file is free software, distributed under the terms of the GNU\ndnl General Public License.  As a special exception to the GNU General\ndnl Public License, this file may be distributed as part of a program\ndnl that contains a configuration script generated by Autoconf, under\ndnl the same distribution terms as the rest of that program.\n\ndnl From Bruno Haible.\n\ndnl AC_LIB_LINKFLAGS(name [, dependencies]) searches for libname and\ndnl the libraries corresponding to explicit and implicit dependencies.\ndnl Sets and AC_SUBSTs the LIB${NAME} and LTLIB${NAME} variables and\ndnl augments the CPPFLAGS variable.\nAC_DEFUN([AC_LIB_LINKFLAGS],\n[\n  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])\n  AC_REQUIRE([AC_LIB_RPATH])\n  define([Name],[translit([$1],[./-], [___])])\n  define([NAME],[translit([$1],[abcdefghijklmnopqrstuvwxyz./-],\n                               [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])\n  AC_CACHE_CHECK([how to link with lib[]$1], [ac_cv_lib[]Name[]_libs], [\n    AC_LIB_LINKFLAGS_BODY([$1], [$2])\n    ac_cv_lib[]Name[]_libs=\"$LIB[]NAME\"\n    ac_cv_lib[]Name[]_ltlibs=\"$LTLIB[]NAME\"\n    ac_cv_lib[]Name[]_cppflags=\"$INC[]NAME\"\n  ])\n  LIB[]NAME=\"$ac_cv_lib[]Name[]_libs\"\n  LTLIB[]NAME=\"$ac_cv_lib[]Name[]_ltlibs\"\n  INC[]NAME=\"$ac_cv_lib[]Name[]_cppflags\"\n  AC_LIB_APPENDTOVAR([CPPFLAGS], [$INC]NAME)\n  AC_SUBST([LIB]NAME)\n  AC_SUBST([LTLIB]NAME)\n  dnl Also set HAVE_LIB[]NAME so that AC_LIB_HAVE_LINKFLAGS can reuse the\n  dnl results of this search when this library appears as a dependency.\n  HAVE_LIB[]NAME=yes\n  undefine([Name])\n  undefine([NAME])\n])\n\ndnl AC_LIB_HAVE_LINKFLAGS(name, dependencies, includes, testcode)\ndnl searches for libname and the libraries corresponding to explicit and\ndnl implicit dependencies, together with the specified include files and\ndnl the ability to compile and link the specified testcode. If found, it\ndnl sets and AC_SUBSTs HAVE_LIB${NAME}=yes and the LIB${NAME} and\ndnl LTLIB${NAME} variables and augments the CPPFLAGS variable, and\ndnl #defines HAVE_LIB${NAME} to 1. Otherwise, it sets and AC_SUBSTs\ndnl HAVE_LIB${NAME}=no and LIB${NAME} and LTLIB${NAME} to empty.\nAC_DEFUN([AC_LIB_HAVE_LINKFLAGS],\n[\n  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])\n  AC_REQUIRE([AC_LIB_RPATH])\n  define([Name],[translit([$1],[./-], [___])])\n  define([NAME],[translit([$1],[abcdefghijklmnopqrstuvwxyz./-],\n                               [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])\n\n  dnl Search for lib[]Name and define LIB[]NAME, LTLIB[]NAME and INC[]NAME\n  dnl accordingly.\n  AC_LIB_LINKFLAGS_BODY([$1], [$2])\n\n  dnl Add $INC[]NAME to CPPFLAGS before performing the following checks,\n  dnl because if the user has installed lib[]Name and not disabled its use\n  dnl via --without-lib[]Name-prefix, he wants to use it.\n  ac_save_CPPFLAGS=\"$CPPFLAGS\"\n  AC_LIB_APPENDTOVAR([CPPFLAGS], [$INC]NAME)\n\n  AC_CACHE_CHECK([for lib[]$1], [ac_cv_lib[]Name], [\n    ac_save_LIBS=\"$LIBS\"\n    LIBS=\"$LIBS $LIB[]NAME\"\n    AC_TRY_LINK([$3], [$4], [ac_cv_lib[]Name=yes], [ac_cv_lib[]Name=no])\n    LIBS=\"$ac_save_LIBS\"\n  ])\n  if test \"$ac_cv_lib[]Name\" = yes; then\n    HAVE_LIB[]NAME=yes\n    AC_DEFINE([HAVE_LIB]NAME, 1, [Define if you have the $1 library.])\n    AC_MSG_CHECKING([how to link with lib[]$1])\n    AC_MSG_RESULT([$LIB[]NAME])\n  else\n    HAVE_LIB[]NAME=no\n    dnl If $LIB[]NAME didn't lead to a usable library, we don't need\n    dnl $INC[]NAME either.\n    CPPFLAGS=\"$ac_save_CPPFLAGS\"\n    LIB[]NAME=\n    LTLIB[]NAME=\n  fi\n  AC_SUBST([HAVE_LIB]NAME)\n  AC_SUBST([LIB]NAME)\n  AC_SUBST([LTLIB]NAME)\n  undefine([Name])\n  undefine([NAME])\n])\n\ndnl Determine the platform dependent parameters needed to use rpath:\ndnl libext, shlibext, hardcode_libdir_flag_spec, hardcode_libdir_separator,\ndnl hardcode_direct, hardcode_minus_L,\ndnl sys_lib_search_path_spec, sys_lib_dlsearch_path_spec.\nAC_DEFUN([AC_LIB_RPATH],\n[\n  AC_REQUIRE([AC_PROG_CC])                dnl we use $CC, $GCC, $LDFLAGS\n  AC_REQUIRE([AC_LIB_PROG_LD])            dnl we use $LD, $with_gnu_ld\n  AC_REQUIRE([AC_CANONICAL_HOST])         dnl we use $host\n  AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT]) dnl we use $ac_aux_dir\n  AC_CACHE_CHECK([for shared library run path origin], acl_cv_rpath, [\n    CC=\"$CC\" GCC=\"$GCC\" LDFLAGS=\"$LDFLAGS\" LD=\"$LD\" with_gnu_ld=\"$with_gnu_ld\" \\\n    ${CONFIG_SHELL-/bin/sh} \"$ac_aux_dir/config.rpath\" \"$host\" > conftest.sh\n    . ./conftest.sh\n    rm -f ./conftest.sh\n    acl_cv_rpath=done\n  ])\n  wl=\"$acl_cv_wl\"\n  libext=\"$acl_cv_libext\"\n  shlibext=\"$acl_cv_shlibext\"\n  hardcode_libdir_flag_spec=\"$acl_cv_hardcode_libdir_flag_spec\"\n  hardcode_libdir_separator=\"$acl_cv_hardcode_libdir_separator\"\n  hardcode_direct=\"$acl_cv_hardcode_direct\"\n  hardcode_minus_L=\"$acl_cv_hardcode_minus_L\"\n  sys_lib_search_path_spec=\"$acl_cv_sys_lib_search_path_spec\"\n  sys_lib_dlsearch_path_spec=\"$acl_cv_sys_lib_dlsearch_path_spec\"\n  dnl Determine whether the user wants rpath handling at all.\n  AC_ARG_ENABLE(rpath,\n    [  --disable-rpath         do not hardcode runtime library paths],\n    :, enable_rpath=yes)\n])\n\ndnl AC_LIB_LINKFLAGS_BODY(name [, dependencies]) searches for libname and\ndnl the libraries corresponding to explicit and implicit dependencies.\ndnl Sets the LIB${NAME}, LTLIB${NAME} and INC${NAME} variables.\nAC_DEFUN([AC_LIB_LINKFLAGS_BODY],\n[\n  define([NAME],[translit([$1],[abcdefghijklmnopqrstuvwxyz./-],\n                               [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])])\n  dnl By default, look in $includedir and $libdir.\n  use_additional=yes\n  AC_LIB_WITH_FINAL_PREFIX([\n    eval additional_includedir=\\\"$includedir\\\"\n    eval additional_libdir=\\\"$libdir\\\"\n  ])\n  AC_ARG_WITH([lib$1-prefix],\n[  --with-lib$1-prefix[=DIR]  search for lib$1 in DIR/include and DIR/lib\n  --without-lib$1-prefix     don't search for lib$1 in includedir and libdir],\n[\n    if test \"X$withval\" = \"Xno\"; then\n      use_additional=no\n    else\n      if test \"X$withval\" = \"X\"; then\n        AC_LIB_WITH_FINAL_PREFIX([\n          eval additional_includedir=\\\"$includedir\\\"\n          eval additional_libdir=\\\"$libdir\\\"\n        ])\n      else\n        additional_includedir=\"$withval/include\"\n        additional_libdir=\"$withval/lib\"\n      fi\n    fi\n])\n  dnl Search the library and its dependencies in $additional_libdir and\n  dnl $LDFLAGS. Using breadth-first-seach.\n  LIB[]NAME=\n  LTLIB[]NAME=\n  INC[]NAME=\n  rpathdirs=\n  ltrpathdirs=\n  names_already_handled=\n  names_next_round='$1 $2'\n  while test -n \"$names_next_round\"; do\n    names_this_round=\"$names_next_round\"\n    names_next_round=\n    for name in $names_this_round; do\n      already_handled=\n      for n in $names_already_handled; do\n        if test \"$n\" = \"$name\"; then\n          already_handled=yes\n          break\n        fi\n      done\n      if test -z \"$already_handled\"; then\n        names_already_handled=\"$names_already_handled $name\"\n        dnl See if it was already located by an earlier AC_LIB_LINKFLAGS\n        dnl or AC_LIB_HAVE_LINKFLAGS call.\n        uppername=`echo \"$name\" | sed -e 'y|abcdefghijklmnopqrstuvwxyz./-|ABCDEFGHIJKLMNOPQRSTUVWXYZ___|'`\n        eval value=\\\"\\$HAVE_LIB$uppername\\\"\n        if test -n \"$value\"; then\n          if test \"$value\" = yes; then\n            eval value=\\\"\\$LIB$uppername\\\"\n            test -z \"$value\" || LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$value\"\n            eval value=\\\"\\$LTLIB$uppername\\\"\n            test -z \"$value\" || LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }$value\"\n          else\n            dnl An earlier call to AC_LIB_HAVE_LINKFLAGS has determined\n            dnl that this library doesn't exist. So just drop it.\n            :\n          fi\n        else\n          dnl Search the library lib$name in $additional_libdir and $LDFLAGS\n          dnl and the already constructed $LIBNAME/$LTLIBNAME.\n          found_dir=\n          found_la=\n          found_so=\n          found_a=\n          if test $use_additional = yes; then\n            if test -n \"$shlibext\" && test -f \"$additional_libdir/lib$name.$shlibext\"; then\n              found_dir=\"$additional_libdir\"\n              found_so=\"$additional_libdir/lib$name.$shlibext\"\n              if test -f \"$additional_libdir/lib$name.la\"; then\n                found_la=\"$additional_libdir/lib$name.la\"\n              fi\n            else\n              if test -f \"$additional_libdir/lib$name.$libext\"; then\n                found_dir=\"$additional_libdir\"\n                found_a=\"$additional_libdir/lib$name.$libext\"\n                if test -f \"$additional_libdir/lib$name.la\"; then\n                  found_la=\"$additional_libdir/lib$name.la\"\n                fi\n              fi\n            fi\n          fi\n          if test \"X$found_dir\" = \"X\"; then\n            for x in $LDFLAGS $LTLIB[]NAME; do\n              AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n              case \"$x\" in\n                -L*)\n                  dir=`echo \"X$x\" | sed -e 's/^X-L//'`\n                  if test -n \"$shlibext\" && test -f \"$dir/lib$name.$shlibext\"; then\n                    found_dir=\"$dir\"\n                    found_so=\"$dir/lib$name.$shlibext\"\n                    if test -f \"$dir/lib$name.la\"; then\n                      found_la=\"$dir/lib$name.la\"\n                    fi\n                  else\n                    if test -f \"$dir/lib$name.$libext\"; then\n                      found_dir=\"$dir\"\n                      found_a=\"$dir/lib$name.$libext\"\n                      if test -f \"$dir/lib$name.la\"; then\n                        found_la=\"$dir/lib$name.la\"\n                      fi\n                    fi\n                  fi\n                  ;;\n              esac\n              if test \"X$found_dir\" != \"X\"; then\n                break\n              fi\n            done\n          fi\n          if test \"X$found_dir\" != \"X\"; then\n            dnl Found the library.\n            LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-L$found_dir -l$name\"\n            if test \"X$found_so\" != \"X\"; then\n              dnl Linking with a shared library. We attempt to hardcode its\n              dnl directory into the executable's runpath, unless it's the\n              dnl standard /usr/lib.\n              if test \"$enable_rpath\" = no || test \"X$found_dir\" = \"X/usr/lib\"; then\n                dnl No hardcoding is needed.\n                LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n              else\n                dnl Use an explicit option to hardcode DIR into the resulting\n                dnl binary.\n                dnl Potentially add DIR to ltrpathdirs.\n                dnl The ltrpathdirs will be appended to $LTLIBNAME at the end.\n                haveit=\n                for x in $ltrpathdirs; do\n                  if test \"X$x\" = \"X$found_dir\"; then\n                    haveit=yes\n                    break\n                  fi\n                done\n                if test -z \"$haveit\"; then\n                  ltrpathdirs=\"$ltrpathdirs $found_dir\"\n                fi\n                dnl The hardcoding into $LIBNAME is system dependent.\n                if test \"$hardcode_direct\" = yes; then\n                  dnl Using DIR/libNAME.so during linking hardcodes DIR into the\n                  dnl resulting binary.\n                  LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n                else\n                  if test -n \"$hardcode_libdir_flag_spec\" && test \"$hardcode_minus_L\" = no; then\n                    dnl Use an explicit option to hardcode DIR into the resulting\n                    dnl binary.\n                    LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n                    dnl Potentially add DIR to rpathdirs.\n                    dnl The rpathdirs will be appended to $LIBNAME at the end.\n                    haveit=\n                    for x in $rpathdirs; do\n                      if test \"X$x\" = \"X$found_dir\"; then\n                        haveit=yes\n                        break\n                      fi\n                    done\n                    if test -z \"$haveit\"; then\n                      rpathdirs=\"$rpathdirs $found_dir\"\n                    fi\n                  else\n                    dnl Rely on \"-L$found_dir\".\n                    dnl But don't add it if it's already contained in the LDFLAGS\n                    dnl or the already constructed $LIBNAME\n                    haveit=\n                    for x in $LDFLAGS $LIB[]NAME; do\n                      AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n                      if test \"X$x\" = \"X-L$found_dir\"; then\n                        haveit=yes\n                        break\n                      fi\n                    done\n                    if test -z \"$haveit\"; then\n                      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-L$found_dir\"\n                    fi\n                    if test \"$hardcode_minus_L\" != no; then\n                      dnl FIXME: Not sure whether we should use\n                      dnl \"-L$found_dir -l$name\" or \"-L$found_dir $found_so\"\n                      dnl here.\n                      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n                    else\n                      dnl We cannot use $hardcode_runpath_var and LD_RUN_PATH\n                      dnl here, because this doesn't fit in flags passed to the\n                      dnl compiler. So give up. No hardcoding. This affects only\n                      dnl very old systems.\n                      dnl FIXME: Not sure whether we should use\n                      dnl \"-L$found_dir -l$name\" or \"-L$found_dir $found_so\"\n                      dnl here.\n                      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-l$name\"\n                    fi\n                  fi\n                fi\n              fi\n            else\n              if test \"X$found_a\" != \"X\"; then\n                dnl Linking with a static library.\n                LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_a\"\n              else\n                dnl We shouldn't come here, but anyway it's good to have a\n                dnl fallback.\n                LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-L$found_dir -l$name\"\n              fi\n            fi\n            dnl Assume the include files are nearby.\n            additional_includedir=\n            case \"$found_dir\" in\n              */lib | */lib/)\n                basedir=`echo \"X$found_dir\" | sed -e 's,^X,,' -e 's,/lib/*$,,'`\n                additional_includedir=\"$basedir/include\"\n                ;;\n            esac\n            if test \"X$additional_includedir\" != \"X\"; then\n              dnl Potentially add $additional_includedir to $INCNAME.\n              dnl But don't add it\n              dnl   1. if it's the standard /usr/include,\n              dnl   2. if it's /usr/local/include and we are using GCC on Linux,\n              dnl   3. if it's already present in $CPPFLAGS or the already\n              dnl      constructed $INCNAME,\n              dnl   4. if it doesn't exist as a directory.\n              if test \"X$additional_includedir\" != \"X/usr/include\"; then\n                haveit=\n                if test \"X$additional_includedir\" = \"X/usr/local/include\"; then\n                  if test -n \"$GCC\"; then\n                    case $host_os in\n                      linux*) haveit=yes;;\n                    esac\n                  fi\n                fi\n                if test -z \"$haveit\"; then\n                  for x in $CPPFLAGS $INC[]NAME; do\n                    AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n                    if test \"X$x\" = \"X-I$additional_includedir\"; then\n                      haveit=yes\n                      break\n                    fi\n                  done\n                  if test -z \"$haveit\"; then\n                    if test -d \"$additional_includedir\"; then\n                      dnl Really add $additional_includedir to $INCNAME.\n                      INC[]NAME=\"${INC[]NAME}${INC[]NAME:+ }-I$additional_includedir\"\n                    fi\n                  fi\n                fi\n              fi\n            fi\n            dnl Look for dependencies.\n            if test -n \"$found_la\"; then\n              dnl Read the .la file. It defines the variables\n              dnl dlname, library_names, old_library, dependency_libs, current,\n              dnl age, revision, installed, dlopen, dlpreopen, libdir.\n              save_libdir=\"$libdir\"\n              case \"$found_la\" in\n                */* | *\\\\*) . \"$found_la\" ;;\n                *) . \"./$found_la\" ;;\n              esac\n              libdir=\"$save_libdir\"\n              dnl We use only dependency_libs.\n              for dep in $dependency_libs; do\n                case \"$dep\" in\n                  -L*)\n                    additional_libdir=`echo \"X$dep\" | sed -e 's/^X-L//'`\n                    dnl Potentially add $additional_libdir to $LIBNAME and $LTLIBNAME.\n                    dnl But don't add it\n                    dnl   1. if it's the standard /usr/lib,\n                    dnl   2. if it's /usr/local/lib and we are using GCC on Linux,\n                    dnl   3. if it's already present in $LDFLAGS or the already\n                    dnl      constructed $LIBNAME,\n                    dnl   4. if it doesn't exist as a directory.\n                    if test \"X$additional_libdir\" != \"X/usr/lib\"; then\n                      haveit=\n                      if test \"X$additional_libdir\" = \"X/usr/local/lib\"; then\n                        if test -n \"$GCC\"; then\n                          case $host_os in\n                            linux*) haveit=yes;;\n                          esac\n                        fi\n                      fi\n                      if test -z \"$haveit\"; then\n                        haveit=\n                        for x in $LDFLAGS $LIB[]NAME; do\n                          AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n                          if test \"X$x\" = \"X-L$additional_libdir\"; then\n                            haveit=yes\n                            break\n                          fi\n                        done\n                        if test -z \"$haveit\"; then\n                          if test -d \"$additional_libdir\"; then\n                            dnl Really add $additional_libdir to $LIBNAME.\n                            LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-L$additional_libdir\"\n                          fi\n                        fi\n                        haveit=\n                        for x in $LDFLAGS $LTLIB[]NAME; do\n                          AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n                          if test \"X$x\" = \"X-L$additional_libdir\"; then\n                            haveit=yes\n                            break\n                          fi\n                        done\n                        if test -z \"$haveit\"; then\n                          if test -d \"$additional_libdir\"; then\n                            dnl Really add $additional_libdir to $LTLIBNAME.\n                            LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-L$additional_libdir\"\n                          fi\n                        fi\n                      fi\n                    fi\n                    ;;\n                  -R*)\n                    dir=`echo \"X$dep\" | sed -e 's/^X-R//'`\n                    if test \"$enable_rpath\" != no; then\n                      dnl Potentially add DIR to rpathdirs.\n                      dnl The rpathdirs will be appended to $LIBNAME at the end.\n                      haveit=\n                      for x in $rpathdirs; do\n                        if test \"X$x\" = \"X$dir\"; then\n                          haveit=yes\n                          break\n                        fi\n                      done\n                      if test -z \"$haveit\"; then\n                        rpathdirs=\"$rpathdirs $dir\"\n                      fi\n                      dnl Potentially add DIR to ltrpathdirs.\n                      dnl The ltrpathdirs will be appended to $LTLIBNAME at the end.\n                      haveit=\n                      for x in $ltrpathdirs; do\n                        if test \"X$x\" = \"X$dir\"; then\n                          haveit=yes\n                          break\n                        fi\n                      done\n                      if test -z \"$haveit\"; then\n                        ltrpathdirs=\"$ltrpathdirs $dir\"\n                      fi\n                    fi\n                    ;;\n                  -l*)\n                    dnl Handle this in the next round.\n                    names_next_round=\"$names_next_round \"`echo \"X$dep\" | sed -e 's/^X-l//'`\n                    ;;\n                  *.la)\n                    dnl Handle this in the next round. Throw away the .la's\n                    dnl directory; it is already contained in a preceding -L\n                    dnl option.\n                    names_next_round=\"$names_next_round \"`echo \"X$dep\" | sed -e 's,^X.*/,,' -e 's,^lib,,' -e 's,\\.la$,,'`\n                    ;;\n                  *)\n                    dnl Most likely an immediate library name.\n                    LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$dep\"\n                    LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }$dep\"\n                    ;;\n                esac\n              done\n            fi\n          else\n            dnl Didn't find the library; assume it is in the system directories\n            dnl known to the linker and runtime loader. (All the system\n            dnl directories known to the linker should also be known to the\n            dnl runtime loader, otherwise the system is severely misconfigured.)\n            LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-l$name\"\n            LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-l$name\"\n          fi\n        fi\n      fi\n    done\n  done\n  if test \"X$rpathdirs\" != \"X\"; then\n    if test -n \"$hardcode_libdir_separator\"; then\n      dnl Weird platform: only the last -rpath option counts, the user must\n      dnl pass all path elements in one option. We can arrange that for a\n      dnl single library, but not when more than one $LIBNAMEs are used.\n      alldirs=\n      for found_dir in $rpathdirs; do\n        alldirs=\"${alldirs}${alldirs:+$hardcode_libdir_separator}$found_dir\"\n      done\n      dnl Note: hardcode_libdir_flag_spec uses $libdir and $wl.\n      acl_save_libdir=\"$libdir\"\n      libdir=\"$alldirs\"\n      eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n      libdir=\"$acl_save_libdir\"\n      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$flag\"\n    else\n      dnl The -rpath options are cumulative.\n      for found_dir in $rpathdirs; do\n        acl_save_libdir=\"$libdir\"\n        libdir=\"$found_dir\"\n        eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n        libdir=\"$acl_save_libdir\"\n        LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$flag\"\n      done\n    fi\n  fi\n  if test \"X$ltrpathdirs\" != \"X\"; then\n    dnl When using libtool, the option that works for both libraries and\n    dnl executables is -R. The -R options are cumulative.\n    for found_dir in $ltrpathdirs; do\n      LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-R$found_dir\"\n    done\n  fi\n])\n\ndnl AC_LIB_APPENDTOVAR(VAR, CONTENTS) appends the elements of CONTENTS to VAR,\ndnl unless already present in VAR.\ndnl Works only for CPPFLAGS, not for LIB* variables because that sometimes\ndnl contains two or three consecutive elements that belong together.\nAC_DEFUN([AC_LIB_APPENDTOVAR],\n[\n  for element in [$2]; do\n    haveit=\n    for x in $[$1]; do\n      AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n      if test \"X$x\" = \"X$element\"; then\n        haveit=yes\n        break\n      fi\n    done\n    if test -z \"$haveit\"; then\n      [$1]=\"${[$1]}${[$1]:+ }$element\"\n    fi\n  done\n])\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/graphviz.spec",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/1676.dot",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/graphs/Latin1.gv",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/graphs/b60.gv",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/graphs/b34.gv",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/graphs/b56.gv",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/graphs/jcr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/windows/b56.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/windows/Latin1.gv",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/windows/b60.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/windows/newarrows.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/windows/b79.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/windows/b15.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/windows/b145.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/windows/b34.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/imagepath_test/image.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/imagepath_test/imagepath_dir/image.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/imagepath_test/image_dir/image.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/share/b56.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/share/Latin1.gv",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/share/b60.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/share/sq_rules.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/share/newarrows.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/share/b79.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/share/b15.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/share/b145.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/share/b34.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/share/rd_rules.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.i386/newarrows.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.i386/b15.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/sl_box_dbl_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/arrowsize_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/grdradial_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/viewport_neato1.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/nul_inv_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/decorate_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/rd_rules_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/center_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/size_ex_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/st_circle_dbl_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/sr_circle_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/grdradial_angle_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/grdfillcolor_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/user_shapes_dot_gd.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/Palatino_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/sl_circle_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/inv_nul_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/nojustify_dot_gd.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/Courier_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/Bookman_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/sb_circle_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/sq_rules_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/sb_circle_dbl_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/grdlinear_angle_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/Times_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/st_box_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/xlabels_neato.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/sb_box_dbl_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/nojustify_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/st_box_dbl_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/style_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/AvantGarde_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/grdradial_node_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/sl_circle_dbl_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/grdlinear_node_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/xlabels_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/viewport_neato.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/ZapfDingbats_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/sl_box_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/st_circle_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/NewCenturySchlbk_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/color_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/cairo_dot_cairo.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/grdlinear_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/size_neato.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/grdcolors_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/ZapfChancery_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/rotate_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/colorscheme_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/val_nul_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/japanese_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/sr_circle_dbl_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/rotate_dot1.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/Symbol_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/clusters_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/crazy_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/nul_nul_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/fdp_clus_fdp.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/val_val_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/grdangles_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/sr_box_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/inv_val_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/grdcluster_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/color_dot1.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/Helvetica_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/val_inv_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/sr_box_dbl_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/russian_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/sb_box_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/viewport_neato2.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/nul_val_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/inv_inv_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/grdshapes_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/linux.x86/polypoly_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/sl_box_dbl_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/arrowsize_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/grdradial_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/viewport_neato1.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/nul_inv_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/decorate_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/rd_rules_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/center_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/size_ex_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/st_circle_dbl_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/sr_circle_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/grdradial_angle_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/grdfillcolor_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/user_shapes_dot_gd.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/Palatino_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/sl_circle_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/inv_nul_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/nojustify_dot_gd.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/Courier_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/Bookman_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/sb_circle_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/sq_rules_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/sb_circle_dbl_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/grdlinear_angle_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/Times_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/st_box_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/xlabels_neato.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/sb_box_dbl_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/nojustify_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/st_box_dbl_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/style_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/AvantGarde_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/grdradial_node_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/sl_circle_dbl_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/grdlinear_node_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/xlabels_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/viewport_neato.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/ZapfDingbats_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/sl_box_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/st_circle_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/NewCenturySchlbk_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/color_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/cairo_dot_cairo.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/grdlinear_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/size_neato.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/grdcolors_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/ZapfChancery_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/rotate_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/colorscheme_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/val_nul_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/japanese_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/sr_circle_dbl_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/rotate_dot1.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/Symbol_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/clusters_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/crazy_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/nul_nul_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/fdp_clus_fdp.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/val_val_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/grdangles_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/sr_box_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/inv_val_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/grdcluster_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/color_dot1.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/Helvetica_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/mode_neato.ps",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/val_inv_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/sr_box_dbl_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/russian_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/sb_box_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/viewport_neato2.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/nul_val_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/inv_inv_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/grdshapes_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest/nshare/polypoly_dot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/lib/common/entities.html",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/graphs/directed/Latin1.gv",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/rtest2/test_reference.tgz",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/tclpkg/tcldot/examples/data/smbluewhite_paper.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/tclpkg/gdtclft/demo/entities.html",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/tclpkg/gdtclft/examples/kaitest.tcl",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/tclpkg/gdtclft/examples/demoin.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/tests/regression_tests/vuln/reference/nullderefrebuildlist.xdot",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/tests/regression_tests/vuln/input/nullderefrebuildlist.dot",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/plugin/visio/gvplugin_visio.suo",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/plugin/visio/gvplugin_visio.ncb",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/plugin/ming/Bitstream_Vera_Serif.fdb",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/plugin/ming/Bitstream_Vera_Sans.fdb",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/windows/addtopath.mst",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/windows/Graphviz.res",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/windows/build/Graphviz.ico",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/windows/Resources/ActualSize.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/windows/Resources/Information.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/windows/Resources/ZoomIn.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/windows/Resources/ZoomOut.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/windows/Resources/GraphAttributes.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/windows/Resources/NodeAttributes.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/windows/Resources/EdgeAttributes.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/windows/graphviz-msi/setup/setup.suo",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/windows/graphviz-msi/setup/Release/setup.exe",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/windows/cmd/gvui/GVUI.exe",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/windows/cmd/fc-fix/fc-fix.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/find_edge.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/fisheye.raw",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/move.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/arial.tga",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/glade-3.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/fisheye.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/mod_3D.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/zoom_out.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/new_node.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/edge.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/new_delete.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/zoomplus.raw",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/hourglass.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/rotate.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/no_fisheye.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/zoom_in.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/zoom.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/delete_node.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/dot.PNG",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/zoomminus.raw",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/single_select.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/lfdp.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/fit_to_screen.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/node.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/pan.raw",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/add_edge.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/zoomin.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/3D.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/ldot.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/selectr.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/deletE_edge.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/fit.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/details.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/preview.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/ok3.raw",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/pan.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/ok2.raw",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/AntiselectRect.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/newzoom.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/mod_fisheye.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/cursor.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/zoom.raw",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/lneato.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/rect_select.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/selectx.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/magnifier.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/magnifier_zoom_in.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/zoomout.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/fish.PNG",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/rect_select2.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/rotate.raw",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/ok.raw",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/2D.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/center.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/ltwopi.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/find_node.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/lcirco.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/AntiselectRectX.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/magifier_zoom_out.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/share/gui/select.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/license.txt",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/example/SimpleGraph.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/dot/DotAttr.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/dot/DotGraphAttr.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/dot/DotGraphSizeAttr.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/dot/DotCommentedAttr.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/dot/DotGraph.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/dot/DotEdge.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/dot/DotGraphRotateAttr.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/dot/DotAttrNames.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/dot/DotNodeAttr.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/dot/DotAttrValues.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/dot/DotCluster.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/dot/DotAttributes.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/dot/DotLabelAttr.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/dot/DotEdgeAttr.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/dot/DotStringAttr.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/dot/DotColorAttr.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/contrib/java-dot/dot/DotNode.java",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/macosx/ZoomOutToolbarImage.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/macosx/ZoomToFitToolbarImage.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/macosx/Graph.ai",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/macosx/Graphviz.psd",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/macosx/ActualSizeToolbarImage.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/macosx/Graphviz.ai",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/macosx/GraphAttributesTemplate.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/macosx/GraphGv.icns",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/macosx/EdgeAttributesTemplate.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/macosx/Graphviz.icns",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/macosx/GraphDot.icns",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/macosx/NodeAttributesTemplate.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/macosx/ZoomInToolbarImage.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/macosx/build/graphviz.help.helpindex.lion",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/macosx/build/graphviz.help.helpindex.snowleopard",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/macosx/English.lproj/InfoPlist.strings",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/cmd/gvedit/images/export.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/cmd/gvedit/images/settings.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/cmd/gvedit/images/save.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/cmd/gvedit/images/icon.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/cmd/gvedit/images/save_as.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/cmd/gvedit/images/paste.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/cmd/gvedit/images/open.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/cmd/gvedit/images/new.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/cmd/gvedit/images/run.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/cmd/gvedit/images/cut.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/cmd/gvedit/images/copy.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/cmd/tools/gml2gv.ncb",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/pspdf.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/leftyguide.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/dottyguide.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/oldlibguide.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/gdtclft.entities.example.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/neatoguide.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/dotguide.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/smyrna.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/attr2.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/attr3.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/graph.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/fisheye.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/gvpr.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/no_fisheye.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/attr4.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/general.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/zoomin.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/3D.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/labels.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/details.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/pan.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/magnifier.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/zoomout.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/topfish.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/smyrna.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/2D.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/center.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/nodelist.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/smyrna/figures/attr1.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/dotty/figs/fa2.xwd.gz",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/dotty/figs/fa1.xwd.gz",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/dotty/figs/d6.xwd.gz",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/dotty/figs/dotty.xwd.gz",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/dotty/figs/d2.xwd.gz",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/dotty/figs/d8.xwd.gz",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/dotty/figs/ldbx.ppm.gz",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/dotty/figs/d5.xwd.gz",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/dotty/figs/d1.xwd.gz",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/dotty/figs/d7.xwd.gz",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/dotty/figs/d3.xwd.gz",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/dotty/figs/d4.xwd.gz",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/docbook/src/imgs/Txlib.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/docbook/src/imgs/hello_cairo.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/docbook/src/imgs/hello_gd.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/docbook/src/imgs/framework.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/libguide/libguide.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/infosrc/eqn.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/infosrc/eqn.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/infosrc/plugins.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/libgraph/Agraph.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/back.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/nohead.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/n_wedged.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_wlin90.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_licurve.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/box3d.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_linv.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/note.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_odot.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/cylinder.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/rarrow.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/Mcircle.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/restrictionsite.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/e_dotted.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/normal_back.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/assembly.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/fill.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/polygon.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/c_bold.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/doubleoctagon.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/c_dotted.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_lteeoldiamond.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/n_bold.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/utr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/e_solid.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/none.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/round.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_normal.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/normal_both.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/c_striped.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/oval.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/threepoverhang.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_oinv.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/circle.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_diamond.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/trapezium.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_lbox.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/promoter.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_dot.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_lin180.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_invempty.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/none_none.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/egg.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_olnormal.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/invhouse.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/house.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_rtee.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_rcurve.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_wlin180.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_wlin360.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/invtriangle.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_lin270.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_rnormal.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/html3.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/Mdiamond.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/tab.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_rad180.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/parallelogram.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/spline_ortho.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/component.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_invdot.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_orbox.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/hexagon.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/none_both.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_rad45.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_lcurve.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/html2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/spline_spline.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/record2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/doublecircle.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/octagon.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_box.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_obox.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_rad270.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_inv.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/folder.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/n_filled.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/spline_curved.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/normal_none.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/c_dashed.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/tripleoctagon.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/noverhang.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_normal.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/spline_line.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/larrow.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/proteasesite.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_lin0.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/fixed.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_orinv.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_rad0.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/diamond.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/rpromoter.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_dot.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/septagon.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/record.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_oldiamond.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/pentagon.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_ldiamond.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/star.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_wlin45.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_ltee.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/none_forward.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_lnormal.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/n_diagonals.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/plaintext.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_curve.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/html1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_icurve.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_rbox.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/cds.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_rad90.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_rcrow.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_crow.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_odot.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_nohead.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/spline_polyline.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/underline.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_onormal.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/rnastab.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_tee.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/lpromoter.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/triangle.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/constraint.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/box.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_tee.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_ricurve.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_none.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_vee.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_lin90.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/proteinstab.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/c_filled.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_lcrow.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/primersite.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_lin45.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/n_striped.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_empty.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/normal_forward.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/mrecord.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_ediamond.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_curve.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/html4.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/colorlist.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/n_rounded.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/fivepoverhang.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_crow.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/rectangle.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_forward.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_olbox.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/sdlshapes.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/c_rounded.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_open.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/Msquare.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/n_dotted.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_rad360.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_odiamond.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/forward.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/invtrapezium.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_wlin270.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/e_bold.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/n_dashed.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/both.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/rect.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_lvee.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/insulator.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_none.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/plugins.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_invodot.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_olinv.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/e_dashed.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_rvee.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_obox.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/c_solid.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/square.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/n_solid.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/signature.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_box.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/tee.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/terminator.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/ellipse.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_lin360.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/spline_none.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/none_back.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_ornormal.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/point.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_rinv.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_odiamond.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/plain.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_icurve.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_inv.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_rdiamond.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/ribosite.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/g_wlin0.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_halfopen.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/aa_ordiamond.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/info/a_diamond.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/odt/graphviz_plugins.odt",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/odt/graphviz_plugins.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-graphviz-2.46.0-ha3bytsnfz2rnlh3jm7a76fik6nvbzcu/spack-src/doc/lefty/figs/lefty.ppm.gz"
    ],
    "total_files": 3596
}