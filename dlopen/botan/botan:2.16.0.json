{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/lib/utils/dyn_load/dyn_load.cpp": "/*\n* Dynamically Loaded Object\n* (C) 2010 Jack Lloyd\n*\n* Botan is released under the Simplified BSD License (see license.txt)\n*/\n\n#include <botan/dyn_load.h>\n#include <botan/exceptn.h>\n\n#if defined(BOTAN_TARGET_OS_HAS_POSIX1)\n  #include <dlfcn.h>\n#elif defined(BOTAN_TARGET_OS_HAS_WIN32)\n  #define NOMINMAX 1\n  #define _WINSOCKAPI_ // stop windows.h including winsock.h\n  #include <windows.h>\n#endif\n\nnamespace Botan {\n\nnamespace {\n\nvoid raise_runtime_loader_exception(const std::string& lib_name,\n                                    const char* msg)\n   {\n   const std::string ex_msg =\n      \"Failed to load \" + lib_name + \": \" +\n      (msg ? msg : \"Unknown error\");\n\n   throw System_Error(ex_msg, 0);\n   }\n\n}\n\nDynamically_Loaded_Library::Dynamically_Loaded_Library(\n   const std::string& library) :\n   m_lib_name(library), m_lib(nullptr)\n   {\n#if defined(BOTAN_TARGET_OS_HAS_POSIX1)\n   m_lib = ::dlopen(m_lib_name.c_str(), RTLD_LAZY);\n\n   if(!m_lib)\n      raise_runtime_loader_exception(m_lib_name, ::dlerror());\n\n#elif defined(BOTAN_TARGET_OS_HAS_WIN32)\n   m_lib = ::LoadLibraryA(m_lib_name.c_str());\n\n   if(!m_lib)\n      raise_runtime_loader_exception(m_lib_name, \"LoadLibrary failed\");\n#endif\n\n   if(!m_lib)\n      raise_runtime_loader_exception(m_lib_name, \"Dynamic load not supported\");\n   }\n\nDynamically_Loaded_Library::~Dynamically_Loaded_Library()\n   {\n#if defined(BOTAN_TARGET_OS_HAS_POSIX1)\n   ::dlclose(m_lib);\n#elif defined(BOTAN_TARGET_OS_HAS_WIN32)\n   ::FreeLibrary((HMODULE)m_lib);\n#endif\n   }\n\nvoid* Dynamically_Loaded_Library::resolve_symbol(const std::string& symbol)\n   {\n   void* addr = nullptr;\n\n#if defined(BOTAN_TARGET_OS_HAS_POSIX1)\n   addr = ::dlsym(m_lib, symbol.c_str());\n#elif defined(BOTAN_TARGET_OS_HAS_WIN32)\n   addr = reinterpret_cast<void*>(::GetProcAddress((HMODULE)m_lib, symbol.c_str()));\n#endif\n\n   if(!addr)\n      throw Invalid_Argument(\"Failed to resolve symbol \" + symbol +\n                             \" in \" + m_lib_name);\n\n   return addr;\n   }\n\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/doc/old_news.rst": "Release Notes: 0.7.0 to 1.11.34\n========================================\n\nVersion 1.10.17, 2017-10-02\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Address a side channel affecting modular exponentiation. An attacker\n  capable of a local or cross-VM cache analysis attack may be able\n  to recover bits of secret exponents as used in RSA, DH, etc.\n  CVE-2017-14737\n\n* Workaround a miscompilation bug in GCC 7 on x86-32 affecting GOST-34.11\n  hash function. (GH #1192 #1148 #882)\n\n* Add SecureVector::data() function which returns the start of the\n  buffer. This makes it slightly simpler to support both 1.10 and 2.x\n  APIs in the same codebase.\n\n* When compiled by a C++11 (or later) compiler, a template typedef of\n  SecureVector, secure_vector, is added. In 2.x this class is a\n  std::vector with a custom allocator, so has a somewhat different\n  interface than SecureVector in 1.10. But this makes it slightly\n  simpler to support both 1.10 and 2.x APIs in the same codebase.\n\n* Fix a bug that prevented `configure.py` from running under Python3\n\n* Botan 1.10.x does not support the OpenSSL 1.1 API. Now the build\n  will `#error` if OpenSSL 1.1 is detected. Avoid `--with-openssl`\n  if compiling against 1.1 or later. (GH #753)\n\n* Import patches from Debian adding basic support for building on\n  aarch64, ppc64le, or1k, and mipsn32 platforms.\n\nVersion 1.10.16, 2017-04-04\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fix a bug in X509 DN string comparisons that could result in out of bound\n  reads. This could result in information leakage, denial of service, or\n  potentially incorrect certificate validation results. (CVE-2017-2801)\n\n* Avoid throwing during a destructor since this is undefined in C++11\n  and rarely a good idea. (GH #930)\n\nVersion 1.10.15, 2017-01-12\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fix a bug causing modular exponentiations done modulo even numbers\n  to almost always be incorrect, unless the values were small. This\n  bug is not known to affect any cryptographic operation in Botan. (GH #754)\n\n* Avoid use of C++11 std::to_string in some code added in 1.10.14 (GH #747 #834)\n\nVersion 1.11.34, 2016-11-28\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fix integer overflow during BER decoding, found by Falko Strenzke.\n  This bug is not thought to be directly exploitable but upgrading ASAP\n  is advised. (CVE-2016-9132)\n\n* Add post-quantum signature scheme XMSS. Provides either 128 or 256 bit\n  (post-quantum) security, with small public and private keys, fast\n  verification, and reasonably small signatures (2500 bytes for 128-bit\n  security). Signature generation is very slow, on the order of seconds. And\n  very importantly the signature scheme is stateful: each leaf index must only\n  be used once, or all security is lost. In the appropriate system where\n  signatures are rarely generated (such as code signing) XMSS makes an excellent\n  choice. (GH #717 #736)\n\n* Add support for CECPQ1 TLS ciphersuites. These use a combination of x25519\n  ECDH and NewHope to provide post-quantum security. The ciphersuites are not\n  IETF standard, but is compatible with BoringSSL. (GH #729)\n\n* Add support for client-side OCSP stapling to TLS. (GH #738)\n\n* Previously both public and private keys performed automatic self testing after\n  generation or loading. However this often caused unexpected application\n  performance problems, and so has been removed. Instead applications must call\n  check_key explicitly. (GH #704)\n\n* Fix TLS session resumption bugs which caused resumption failures if an\n  application used a single session cache for both TLS and DTLS. (GH #688)\n\n* Add SHAKE-128 and SHAKE-256 XOFs as hash functions supporting paramaterized\n  output lengths.\n\n* Add MessageAuthenticationCode::start_msg interface, for MACs which require or\n  can use a nonce (GH #691)\n\n* Add GMAC, a MAC based on GCM (GH #488 / #691)\n\n* Add ESP block cipher padding from RFC 4304. GH #724\n\n* Incompatible change to HKDF: previously the HKDF type in Botan was only the\n  Expand half of HKDF. Now HKDF is the full Extract-then-Expand KDF, and\n  HKDF_Extract and HKDF_Expand are available. If you previously used HKDF, you\n  must switch to using HKDF_Expand. (GH #723)\n\n* Add Cipher_Mode::reset which resets message-specific state, allowing\n  discarding state but allowing continued processing under the same key. (GH #552)\n\n* The ability to add OIDs at runtime has been removed. This additionally removes\n  a global lock which was acquired on each OID lookup. (GH #706)\n\n* The default TLS policy now disables static RSA ciphersuites, all DSA\n  ciphersuites, and the AES CCM-8 ciphersuites. Disabling static RSA by default\n  protects servers from oracle attacks, as well as enforcing a forward secure\n  ciphersuite. Some applications may be forced to re-enable RSA for interop\n  reasons. DSA and CCM-8 are rarely used, and likely should not be negotiated\n  outside of special circumstances.\n\n* The default TLS policy now prefers ChaCha20Poly1305 cipher over any AES mode.\n\n* The default TLS policy now orders ECC curve preferences in order by performance,\n  with x25519 first, then P-256, then P-521, then the rest.\n\n* Add a BSD sockets version of the HTTP client code used for OCSP. GH #699\n\n* Export the public key workfactor functions (GH #734) and add tests for them.\n\n* HMAC_DRBG allows configuring maximum number of bytes before reseed check (GH #690)\n\n* Salsa20 now accepts a null IV as equivalent to an all-zero one (GH #697)\n\n* Optimize ECKCDSA verification (GH #700 #701 #702)\n\n* The deprecated RNGs HMAC_RNG and X9.31 RNG have been removed. Now the only\n  userspace PRNG included in the library is HMAC_DRBG. (GH #692)\n\n* The entropy sources for EGD and BeOS, as well as the Unix entropy source which\n  executed processes to get statistical data have been removed. (GH #692)\n\n* The openpgp module (which just implemented OpenPGP compatible base64 encoding\n  and decoding, nothing else) has been removed.\n\n* Added new configure.py argument `--optimize-for-size`. Currently just sets\n  the flag for code size optimizations with the compiler, but may have other\n  effects in the future.\n\n* Fixed bug in Threaded_Fork causing incorrect computations (GH #695 #716)\n\n* Add DSA deterministic parameter generation test from FIPS 186-3.\n\n* Fix PKCS11_ECDSA_PrivateKey::check_key (GH #712)\n\n* Fixed problems running configure.py outside of the base directory\n\n* The BOTAN_ENTROPY_PROC_FS_PATH value in build.h was being ignored (GH #708)\n\n* Add speed tests for ECGDSA and ECKCDSA (GH #696)\n\n* Fix a crash in speed command for Salsa20 (GH #697)\n\n* Allow a custom ECC curve to be specified at build time, for application or\n  system specific curves. (GH #636 #710)\n\n* Use NOMINMAX on Windows to avoid problems in amalgamation build. (GH #740)\n\n* Add support to output bakefiles with new `configure.py` option `--with-bakefile`.\n  (GH #360 #720)\n\n* The function `zero_mem` has been renamed `secure_scrub_memory`\n\n* More tests for pipe/filter (GH #689 #693), AEADs (GH #552), KDF::name (GH #727),\n\n* Add a test suite for timing analysis for TLS CBC decryption, OAEP decryption,\n  and PKCS #1 v1.5 decryption. These operations all have the feature that if an\n  attacker can distinguish internal operations, such as through a variance in\n  timing, they can use this oracle to decrypt arbitrary ciphertexts. GH #733\n\n* Add a test suite for testing and fuzzing with TLS-Attacker, a tool for\n  analyzing TLS libraries. (https://github.com/RUB-NDS/TLS-Attacker)\n\n* Add a fuzzing framework. Supports fuzzing some APIs using AFL and libFuzzer.\n\n* Added documentation for PKCS #11 (GH #725)\n\n* The LibraryInitializer type is no longer needed and is now deprecated.\n\n* The license and news files were moved from doc to the top level directory.\n  There should not be any other visible change (eg, to the installed version)\n  as a result of this move.\n\n* Fixed some problems when running configure.py outside of the base directory,\n  especially when using relative paths.\n\n* Add (back) the Perl XS wrapper and sqlite encryption code.\n\nVersion 1.10.14, 2016-11-28\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* NOTE WELL: Botan 1.10.x is supported for security patches only until\n  2017-12-31\n\n* Fix integer overflow during BER decoding, found by Falko Strenzke.\n  This bug is not thought to be directly exploitable but upgrading ASAP\n  is advised. (CVE-2016-9132)\n\n* Fix two cases where (in error situations) an exception would be\n  thrown from a destructor, causing a call to std::terminate.\n\n* When RC4 is disabled in the build, also prevent it from being\n  included in the OpenSSL provider. (GH #638)\n\nVersion 1.11.33, 2016-10-26\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Avoid side channel during OAEP decryption. (CVE-2016-8871)\n\n* A countermeasure for the Lucky13 timing attack against CBC-based TLS\n  ciphersuites has been added. (GH #675)\n\n* Added X25519-based key exchange for TLS (GH #673)\n\n* Add Certificate_Store_In_SQL which supports storing certs, keys, and\n  revocation information in a SQL database. Subclass Certificate_Store_In_SQLite\n  specializes with support for SQLite3 databases. (GH #631)\n\n* The Certificate_Store interface has been changed to deal with\n  ``std::shared_ptrs`` instead of raw pointers (GH #471 #631)\n\n* Add support for official SHA-3. Keccak-1600 was already supported\n  but used different padding from FIPS 202. (GH #669)\n\n* Add SHAKE-128 based stream cipher. (GH #669)\n\n* NewHope key exchange now supports the SHA-256/AES-128-CTR scheme\n  used by BoringSSL in addition to the SHA-3/SHAKE-128 parameters used\n  by the reference implementation. (GH #669)\n\n* Add support for the TLS Supported Point Formats Extension from RFC 4492. Adds\n  ``TLS::Policy::use_ecc_point_compression`` policy option. If supported on both\n  sides, ECC points can be sent in compressed format which saves a few bytes\n  during the handshake. (GH #645)\n\n* Fix entropy source selection bug on Windows, which caused the CryptoAPI\n  entropy source to be not available under its normal name \"win32_cryptoapi\" but\n  instead \"dev_random\". GH #644\n\n* Accept read-only access to ``/dev/urandom``. System_RNG previously required\n  read-write access, to allow applications to provide inputs to the system\n  PRNG. But local security policies might only allow read-only access, as is the\n  case with Ubuntu's AppArmor profile for applications in the Snappy binary\n  format. If opening read/write fails, System_RNG silently backs down to\n  read-only, in which case calls to ``add_entropy`` on that object will fail.\n  (GH #647 #648)\n\n* Fix use of Win32 CryptoAPI RNG as an entropy source, which was accidentally\n  disabled due to empty list of acceptable providers being specified. Typically\n  the library would fall back to gathering entropy from OS functions returning\n  statistical information, but if this functionality was disabled in the build a\n  ``PRNG_Unseeded`` exception would result. (GH #655)\n\n* Add support for building the library as part of the IncludeOS unikernel.\n  This included making filesystem and threading support optional. (GH #665)\n\n* Added ISA annotations so that with GCC (all supported versions) and\n  Clang (since 3.7) it is no longer required to compile amalgamation\n  files with ABI specific flags such as ``-maes``. (GH #665)\n\n* Internal cleanups to TLS CBC record handling. TLS CBC ciphersuites\n  can now be disabled by disabling ``tls_cbc`` module. (GH #642 #659)\n\n* Internal cleanups to the object lookup code eliminates most global locks and\n  all use of static initializers (GH #668 #465)\n\n* Avoid ``static_assert`` triggering under MSVC debug builds (GH #646)\n\n* The antique PBKDF1 password hashing scheme is deprecated and will be\n  removed in a future release. It was only used to support the equally\n  ancient PBES1 private key encryption scheme, which was removed in 1.11.8.\n\n* Added MSVC debug/checked iterator builds (GH #666 #667)\n\n* Added Linux ppc64le cross compile target to Travis CI (GH #654)\n\n* If RC4 is disabled, also disable it coming from the OpenSSL provider (GH #641)\n\n* Add TLS message parsing tests (GH #640)\n\n* Updated BSI policy to prohibit DES, HKDF, HMAC_RNG (GH #649)\n\n* Documentation improvements (GH #660 #662 #663 #670)\n\nVersion 1.11.32, 2016-09-28\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add support for the NewHope Ring-LWE key encapsulation algorithm. This scheme\n  provides an estimated ~200 bit security level against a quantum attacker while\n  also being very fast and requiring only modest message sizes of 1824 and 2048\n  bytes for initiator and responder, resp. This version is tested as having\n  bit-for-bit identical output as the reference implementation by the authors.\n\n  Be warned that NewHope is still a very new scheme and may yet fall to analysis.\n  For best assurance, NewHope should be used only in combination with another\n  key exchange mechanism, such as ECDH.\n\n* New TLS callbacks API. Instead of numerous std::function callbacks, the\n  application passes an object implementing the TLS::Callbacks interface, which\n  has virtual functions matching the previous callbacks (plus some extras).\n  Full source compatability with previous versions is maintained for now, but\n  the old interface is deprecated and will be removed in a future release.  The\n  manual has been updated to reflect the changes. (GH #457 and #567)\n\n* Add support for TLS Encrypt-then-MAC extension (GH #492 and #578), which fixes\n  the known issues in the TLS CBC-HMAC construction.\n\n* The format of the TLS session struct has changed (to support EtM), so old\n  TLS session caches will be invalidated.\n\n* How the library presents optimized algorithm implementations has changed.  For\n  example with the algorithm AES-128, previously there were three BlockCipher\n  classes AES_128, AES_128_SSSE3, and AES_128_NI which used (resp) a table-based\n  implementation vulnerable to side channels, a constant time version using\n  SSSE3 SIMD extensions on modern x86, and x86 AES-NI instructions. Using the\n  correct version at runtime required using ``BlockCipher::create``. Now, only\n  the class AES_128 is presented, and the best available version is always used\n  based on CPUID checks. The tests have been extended to selectively disable\n  CPUID bits to ensure all available versions are tested. (GH #477 #623)\n\n  Removes API classes AES_128_NI, AES_192_NI, AES_256_NI, AES_128_SSSE3,\n  AES_192_SSSE3 AES_256_SSSE3, IDEA_SSE2, Noekeon_SIMD, Serpent_SIMD,\n  Threefish_512_AVX2, SHA_160_SSE2\n\n* The deprecated algorithms Rabin-Williams, Nyberg-Rueppel, MARS, RC2, RC5, RC6,\n  SAFER-SK, TEA, MD2, HAS-160, and RIPEMD-128 have been removed. (GH #580)\n\n* A new Cipher_Mode interface ``process`` allows encryption/decryption of\n  buffers without requiring copying into ``secure_vector`` first. (GH #516)\n\n* Fix verification of self-issued certificates (GH #634)\n\n* SSE2 optimizations for ChaCha, 60% faster on both Westmere and Skylake (GH #616)\n\n* The HMAC_RNG constructor added in 1.11.31 that took both an RNG and an\n  entropy source list ignored the entropy sources.\n\n* The configure option ``--via-amalgamation`` was renamed to ``--amalgamation``.\n  The configure option ``--gen-amalgamation`` was removed. It did generate\n  amalgamations but build Botan without amalgamation. Users should migrate to\n  ``--amalgamation``. (GH #621)\n\n* DH keys did not automatically self-test after being generated, contrary to\n  the current behavior for other key types.\n\n* Add tests for TLS 1.2 PRF (GH #628)\n\nVersion 1.11.31, 2016-08-30\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fix undefined behavior in Curve25519 on platforms without a native 128-bit\n  integer type. This was known to produce incorrect results on 32-bit ARM\n  under Clang. GH #532 (CVE-2016-6878)\n\n* If X509_Certificate::allowed_usage was called with more than one Key_Usage\n  set in the enum value, the function would return true if *any* of the allowed\n  usages were set, instead of if *all* of the allowed usages are set.\n  GH #591 (CVE-2016-6879)\n\n* Incompatible changes in DLIES: Previously the input to the KDF was\n  the concatenation of the (ephemeral) public key and the secret value\n  derived by the key agreement operation. Now the input is only the\n  secret value obtained by the key agreement operation. That's how it\n  is specified in the original paper \"DHIES: An encryption scheme\n  based on Diffie-Hellman Problem\" or in BSI technical guideline\n  TR-02102-1 for example. In addition to the already present\n  XOR-encrypion/decryption mode it's now possible to use DLIES with a\n  block cipher.  Furthermore the order of the output was changed from\n  {public key, tag, ciphertext} to {public key, ciphertext, tag}. Both\n  modes are compatible with BouncyCastle.\n\n* Add initial PKCS #11 support (GH #507). Currently includes a low level\n  wrapper to all of PKCS #11 (p11.h) and high level code for RSA and ECDSA\n  signatures and hardware RNG access.\n\n* Add ECIES encryption scheme, compatible with BouncyCastle (GH #483)\n\n* Add ECKCDSA signature algorithm (GH #504)\n\n* Add KDF1 from ISO 18033 (GH #483)\n\n* Add FRP256v1 curve (GH #551)\n\n* Changes for userspace PRNGs HMAC_DRBG and HMAC_RNG (GH #520 and #593)\n\n  These RNGs now derive from Stateful_RNG which handles issues like periodic\n  reseeding and (on Unix) detecting use of fork. Previously these measures were\n  included only in HMAC_RNG.\n\n  Stateful_RNG allows reseeding from another RNG and/or a specified set of\n  entropy sources. For example it is possible to configure a HMAC_DRBG to reseed\n  using a PKCS #11 token RNG, the CPU's RDSEED instruction, and the system RNG\n  but disabling all other entropy polls.\n\n* AutoSeeded_RNG now uses NIST SP800-90a HMAC_DRBG(SHA-384). (GH #520)\n\n* On Windows and Unix systems, the system PRNG is used as the sole reseeding\n  source for a default AutoSeeded_RNG, completely skipping the standard entropy\n  polling code. New constructors allow specifying the reseed RNG and/or entropy\n  sources. (GH #520)\n\n* The `hres_timer` entropy source module has been removed. Timestamp inputs to\n  the RNG are now handled as additional_data inputs to HMAC_DRBG.\n\n* Add RDRAND_RNG which directly exposes the CPU RNG (GH #543)\n\n* Add PKCS #1 v1.5 id for SHA-512/256 (GH #554)\n\n* Add X509_Time::to_std_timepoint (GH #560)\n\n* Fix a bug in ANSI X9.23 padding mode, which returned one byte more\n  than the given block size (GH #529).\n\n* Fix bug in SipHash::clear, which did not reset all state (GH #547)\n\n* Fixes for FreeBSD (GH #517) and OpenBSD (GH #523). The compiler defaults\n  to Clang on FreeBSD now.\n\n* SonarQube static analysis integration (GH #592)\n\n* Switched Travis CI to Ubuntu 14.04 LTS (GH #592)\n\n* Added ARM32, ARM64, PPC32, PPC64, and MinGW x86 cross compile targets to Travis CI (GH #608)\n\n* Clean up in TLS ciphersuite handling (GH #583)\n\n* Threefish-512 AVX2 optimization work (GH #581)\n\n* Remove build configuration host and timestamp from build.h\n  This makes this header reproducible and allows using ccache's direct mode\n  (GH #586 see also #587)\n\n* Prevent building for x86-64 with x86-32 compiler and the reverse (GH #585)\n\n* Avoid build problem on 32-bit userspace ARMv8 (GH #563)\n\n* Refactor of internal MP headers (GH #549)\n\n* Avoid MSVC C4100 warning (GH #525)\n\n* Change botan.exe to botan-cli.exe on Windows to workaround VC issue (GH #584)\n\n* More tests for RSA-KEM (GH #538), DH (GH #556), EME (GH #553),\n  cipher mode padding (GH #529), CTS mode (GH #531),\n  KDF1/ISO18033 (GH #537), OctetString (GH #545), OIDs (GH #546),\n  parallel hash (GH #548), charset handling (GH #555),\n  BigInt (GH #558), HMAC_DRBG (GH #598 #600)\n\n* New deprecations. See the full list in doc/deprecated.txt\n\n  The X9.31 and HMAC_RNG RNGs are deprecated.\n  If you need a userspace PRNG, use HMAC_DRBG (or AutoSeeded_RNG\n  which is HMAC_DRBG with defaults).\n\n  Support for getting entropy from EGD is deprecated, and will be\n  removed in a future release. The developers believe that it is\n  unlikely that any modern system requires EGD and so the code is now\n  dead weight. If you rely on EGD support, you should contact the\n  developers by email or GitHub ASAP.\n\n  The TLS ciphersuites using 3DES and SEED are deprecated and will be\n  removed in a future release.\n\n  ECB mode Cipher_Mode is deprecated and will be removed in a future\n  release.\n\n  Support for BeOS/Haiku has not been tested in 5+ years and is in an\n  unknown state.  Unless reports are received of successful builds and\n  use on this platform, support for BeOS/Haiku will be removed in a\n  future release.\n\nVersion 1.11.30, 2016-06-19\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* In 1.11.23 a bug was introduced such that CBC-encrypted TLS packets\n  containing no plaintext bytes at all were incorrectly rejected with\n  a MAC failure. Records like this are used by OpenSSL in TLS 1.0\n  connections in order to randomize the IV.\n\n* A bug in GCM caused incorrect results if the 32-bit counter field\n  overflowed. This bug has no implications on the security but affects\n  interoperability.\n\n  With a 96-bit nonce, this could only occur if at least 2**32 128-bit\n  blocks (64 GiB) were encrypted. This actually exceeds the maximum\n  allowable length of a GCM plaintext; when messages longer than\n  2**32 - 2 blocks are encrypted, GCM loses its security properties.\n\n  In addition to 96-bit nonces, GCM also supports nonces of arbitrary\n  length using a different method which hashes the provided nonce\n  under the authentication key. When using such a nonce, the last 4\n  bytes of the resulting CTR input might be near the overflow\n  boundary, with the probability of incorrect overflow increasing with\n  longer messages. when encrypting 256 MiB of data under a random 128\n  bit nonce, an incorrect result would be produced about 1/256 of the\n  time. With 1 MiB texts, the probability of error is reduced to 1/65536.\n\n  Since TLS uses GCM with 96 bit nonces and limits the length of any\n  record to far less than 64 GiB, TLS GCM ciphersuites are not\n  affected by this bug.\n\n  Reported by Juraj Somorovsky, described also in \"Nonce-Disrespecting\n  Adversaries: Practical Forgery Attacks on GCM in TLS\"\n  (https://eprint.iacr.org/2016/475.pdf)\n\n* Previously when generating a new self-signed certificate or PKCS #10\n  request, the subject DN was required to contain both common name\n  (CN) and country (C) fields. These restrictions have been removed.\n  GH #496\n\n* The Transform and Keyed_Transform interfaces has been removed. The\n  two concrete implementations of these interfaces were Cipher_Mode\n  and Compressor_Transform. The Cipher_Mode interface remains unchanged\n  as the Transform and Keyed_Transform signatures have moved to it;\n  no changes to Cipher_Mode usage should be necessary. Any uses of\n  Transform& or Keyed_Transform& to refer to a cipher should be replaced\n  by Cipher_Mode&. The compression algorithm interface has changed; the start\n  function now takes the per-message compression ratio to use. Previously the\n  compression level to use had to be set once, at creation time, and\n  the required ``secure_vector`` argument to ``start`` was required to be empty.\n  The new API is documented in `compression.rst` in the manual.\n\n* Add IETF versions of the ChaCha20Poly1305 TLS ciphersuites from\n  draft-ietf-tls-chacha20-poly1305-04. The previously implemented\n  (non-standard) ChaCha20Poly1305 ciphersuites from\n  draft-agl-tls-chacha20poly1305 remain but are deprecated.\n\n* The OCB TLS ciphersuites have been updated to use the new nonce\n  scheme from draft-zauner-tls-aes-ocb-04. This is incompatible with\n  previous versions of the draft, and the ciphersuite numbers used for\n  the (still experimental) OCB ciphersuites have changed.\n\n* Previously an unknown critical extension caused X.509 certificate\n  parsing to fail; such a cert could not be created at all. Now\n  parsing succeeds and the certificate validation fails with\n  an error indicating an unknown critical extension. GH #469\n\n* X509_CRL previously had an option to cause it to ignore unknown\n  critical extensions. This has been removed.\n\n* Added StreamCipher::seek allowing seeking to arbitrary position\n  in the key stream. Currently only implemented for ChaCha. (GH #497)\n\n* Added support for ChaCha stream cipher with 8 or 12 rounds.\n\n* Add ECGDSA signature algorithm (GH #479)\n\n* Add support for label argument to KDFs (GH #495)\n\n* Add NIST SP800-108 and 56C KDFs (GH #481)\n\n* Support for Card Verifiable Certificates and the obsolete EMSA1_BSI\n  signature padding scheme have been removed. (GH #487)\n\n* A bug in the IETF version of ChaCha20Poly1305 (with 96 bit nonces)\n  caused incorrect computation when the plaintext or AAD was exactly\n  a multiple of 16 bytes.\n\n* Fix return type of TLS_Reader::get_u32bit, which was truncated to\n  16 bits. This only affected decoding of session ticket lifetimes.\n  GH #478\n\n* Fix OS X dylib naming problem (GH #468 #467)\n\n* Fix bcrypt function under Python 3 (GH #461)\n\n* The ``unix_procs`` entropy source is deprecated and will be removed\n  in a future release. This entropy source attempts to get entropy by\n  running Unix programs like ``arp``, ``netstat``, and ``dmesg`` which\n  produce information which may be difficult for a remote attacker to\n  guess. This exists primarily as a last-ditch for Unix systems\n  without ``/dev/random``. But at this point such systems effectively\n  no longer exist, and the use of ``fork`` and ``exec`` by the library\n  complicates effective application sandboxing.\n\n* Changes to avoid implicit cast warnings in Visual C++ (GH #484)\n\nVersion 1.10.13, 2016-04-23\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Use constant time modular inverse algorithm to avoid possible\n  side channel attack against ECDSA (CVE-2016-2849)\n\n* Use constant time PKCS #1 unpadding to avoid possible side channel\n  attack against RSA decryption (CVE-2015-7827)\n\n* Avoid a compilation problem in OpenSSL engine when ECDSA was\n  disabled. Gentoo bug 542010\n\nVersion 1.11.29, 2016-03-20\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* CVE-2016-2849 DSA and ECDSA used a modular inverse function which\n  had input dependent loops. It is possible a side channel attack on\n  this function could be used to recover sufficient information about\n  the nonce k to mount a lattice attack and recover the private key.\n  Found by Sean Devlin.\n\n* CVE-2016-2850 The TLS client did not check that the signature\n  algorithm or ECC curve a v1.2 server used was actually acceptable by\n  the policy. This would allow a server who ignored the preferences\n  indicated in the client to use a weak algorithm, and may allow MITM\n  attacks by an attacker who can break MD5 signatures or 160 bit ECC\n  in real time. The server similarly failed to check on the hash a\n  client used during client certificate authentication.\n\n* Reject empty TLS records at the record processing layer since such a\n  record is not valid regardless of the record type. Later checks\n  already correctly rejected empty records, but during processing such\n  a record, a pointer to the end of the vector was created, causing a\n  assertion failure under checked iterators. Found by Juraj Somorovsky.\n\n* Add PK_Decryptor::decrypt_or_random which allows an application to\n  atomically (in constant time) check that a decrypted ciphertext has\n  the expected length and/or apply content checks on the result. This\n  is used by the TLS server for decrypting PKCS #1 v1.5 RSA ciphertexts.\n  Previously the server used a implementation which was potentially\n  vulnerable to side channels.\n\n* Add support for processing X.509 name constraint extension during\n  path validation. GH #454\n\n* Add X509_Certificate::v3_extensions which allows retreiving the\n  raw binary of all certificate extensions, including those which\n  are not known to the library. This allows processing of custom\n  extensions. GH #437\n\n* Add support for module policies which are a preconfigured set of\n  acceptable or prohibited modules. A policy based on BSI TR-02102-1\n  is included. GH #439 #446\n\n* Support for the deprecated TLS heartbeat extension has been removed.\n\n* Support for the deprecated TLS minimum fragment length extension has\n  been removed.\n\n* SRP6 support is now optional in TLS\n\n* Support for negotiating MD5 and SHA-224 signatures in TLS v1.2 has\n  been removed. MD5 signatures are demonstratably insecure in TLS,\n  SHA-224 is rarely used.\n\n* Support for negotiating ECC curves secp160r1, secp160r2, secp160k1,\n  secp192k1, secp192r1 (P-192), secp224k1, secp224r1 (P-224), and\n  secp256k1 have been removed from the TLS implementation. All were\n  already disabled in the default policy.\n\n* HMAC_RNG now has an explicit check for fork using pid comparisons.\n  It also includes the pid and system and CPU clocks into the PRF\n  computation to help reduce the risk of pid wraparound. Even so,\n  applications using fork and userspace RNGs should explicitly reseed\n  all such RNGs whenever possible.\n\n* Deprecation warning: support for DSA certificates in TLS is\n  deprecated and will be removed in a future release.\n\n* Deprecation warning: in addition to the algorithms deprecated in\n  1.11.26, the following algorithms are now deprecated and will be\n  removed in a future release: Rabin-Williams signatures, TEA, XTEA.\n\n* Deprecation warning: the library has a number of compiled in MODP\n  and ECC DL parameters. All MODP parameter sets under 2048 bits and\n  all ECC parameters under 256 bits are deprecated and will be removed\n  in a future release. This includes the MODP groups \"modp/ietf/1024\",\n  \"modp/srp/1024\", \"modp/ietf/1536\", \"modp/srp/1536\" and the ECC\n  groups \"secp160k1\", \"secp160r1\", \"secp160r2\", \"secp192k1\",\n  \"secp192r1\", \"secp224k1\", \"secp224r1\", \"brainpool160r1\",\n  \"brainpool192r1\", \"brainpool224r1\", \"x962_p192v2\", \"x962_p192v3\",\n  \"x962_p239v1\", \"x962_p239v2\" and \"x962_p239v3\". Additionally all\n  compiled in DSA parameter sets (\"dsa/jce/1024\", \"dsa/botan/2048\",\n  and \"dsa/botan/3072\") are also deprecated.\n\n* RDSEED/RDRAND polling now retries if the operation fails. GH #373\n\n* Fix various minor bugs found by static analysis with PVS-Studio (GH#421),\n  Clang analyzer (GH #441), cppcheck (GH #444, #445), and Coverity.\n\n* Add --with-valgrind configure option to enable building against the\n  valgrind client API. This currently enables checking of const time\n  operations using memcheck.\n\n* Fix remaining Wshadow warnings. Enable Wshadow in build. GH #427\n\n* Use noexcept in VS 2015 GH #429\n\n* On Windows allow the user to explicitly request symlinks be used\n  as part of the build. Likely only useful for someone working on\n  the library itself. GH #430\n\n* Remove use of TickCount64 introduced in 1.11.27 which caused problem\n  with downstream distributors/users building XP compatiable binaries\n  which is still an option even in VS 2015\n\n* MCEIES requires KDF1 at runtime but did not require it be enabled\n  in the build. GH #369\n\n* Small optimizations to Keccak hash\n\n* Support for locking allocator on Windows using VirtualLock. GH #450\n\nVersion 1.8.15, 2016-02-13\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n* NOTE WELL: Botan 1.8 is not supported for security issues anymore.\n  Moving to 1.10 or 1.11 is certainly recommended.\n* Fix CVE-2014-9742: Insufficient randomness in Miller-Rabin primality check\n* Fix CVE-2016-2194: Infinite loop in modulur square root algorithm\n* Fix CVE-2015-5726: Crash in BER decoder\n* Fix CVE-2015-5727: Excess memory allocation in BER decoder\n  Note: Unlike the fix in 1.10 which checks that the source actually\n  contains enough data to satisfy the read before allocating the\n  memory, 1.8.15 simply rejects all ASN.1 blocks larger than 1 MiB.\n  This simpler check avoids the problem without breaking ABI.\n\nVersion 1.10.12, 2016-02-03\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* In 1.10.11, the check in PointGFp intended to check the affine y\n  argument actually checked the affine x again. Reported by Remi Gacogne\n\n  The CVE-2016-2195 overflow is not exploitable in 1.10.11 due to an\n  additional check in the multiplication function itself which was\n  also added in that release, so there are no security implications\n  from the missed check. However to avoid confusion the change was\n  pushed in a new release immediately.\n\n  The 1.10.11 release notes incorrectly identified CVE-2016-2195 as CVE-2016-2915\n\nVersion 1.10.11, 2016-02-01\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Resolve heap overflow in ECC point decoding. CVE-2016-2195\n\n* Resolve infinite loop in modular square root algorithm.\n  CVE-2016-2194\n\n* Correct BigInt::to_u32bit to not fail on integers of exactly 32 bits.\n  GH #239\n\nVersion 1.11.28, 2016-02-01\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* One of the checks added while addressing CVE-2016-2195 was incorrect\n  and could cause needless assertion failures.\n\nVersion 1.11.27, 2016-02-01\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* SECURITY: Avoid heap overflow in ECC point decoding. This could\n  likely result in remote code execution. CVE-2016-2195\n\n* SECURITY: Avoid one word heap overflow in P-521 reduction function.\n  This could potentially lead to remote code execution or other\n  attack. CVE-2016-2196.\n\n* SECURITY: Avoid infinite or near-infinite loop during modular square\n  root algorithm with invalid inputs. CVE-2016-2194\n\n* Add Blake2b hash function. GH #413\n\n* Use ``m_`` prefix on all member variables. GH #398 and #407\n\n* Use final qualifier on many classes. GH #408\n\n* Use noreturn attribute on assertion failure function to assist\n  static analysis. GH #403\n\n* Use TickCount64 and MemoryStatusEx in the Windows entropy source.\n  Note these calls are only available in Vista/Server 2008. No\n  accomodations are made for XP or Server 2003, both of which are\n  no longer patched by the vendor. GH #365\n\nVersion 1.11.26, 2016-01-04\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Deprecation warnings: Nyberg-Rueppel signatures, MARS, RC2, RC5,\n  RC6, SAFER, HAS-160, RIPEMD-128, MD2 and support for the TLS minimum\n  fragment length extensions are all being considered for removal in a\n  future release. If there is a compelling use case for keeping any of\n  them in the library, please open a discussion ticket on GitHub.\n\n* Support for the TLS extended master secret extension (RFC 7627) has\n  been added.\n\n* The format of serialized TLS sessions has changed to add a flag\n  indicating support for the extended master secret flag, which is\n  needed for proper handling of the extension.\n\n* Root all exceptions thrown by the library in the ``Botan::Exception`` class.\n  Previously the library would in many cases throw ``std::runtime_error``\n  or ``std::invalid_argument`` exceptions which would make it hard to\n  determine the source of the error in some cases.\n\n* The command line interface has been mostly rewritten. The syntax of\n  many of the sub-programs has changed, and a number have been\n  extended with new features and options.\n\n* Correct an error in PointGFp multiplication when multiplying a point\n  by the scalar value 3. PointGFp::operator* would instead erronously\n  compute it as if the scalar was 1 instead.\n\n* Enable RdRand entropy source on Windows/MSVC. GH #364\n\n* Add Intel's RdSeed as entropy source. GH #370\n\n* Add preliminary support for accessing TPM v1.2 devices. Currently\n  random number generation, RSA key generation, and signing are\n  supported. Tested using Trousers and an ST TPM\n\n* Add generalized interface for KEM (key encapsulation) techniques. Convert\n  McEliece KEM to use it. The previous interfaces McEliece_KEM_Encryptor and\n  McEliece_KEM_Decryptor have been removed. The new KEM interface now uses a KDF\n  to hash the resulting keys; to get the same output as previously provided by\n  McEliece_KEM_Encryptor, use \"KDF1(SHA-512)\" and request exactly 64 bytes.\n\n* Add support for RSA-KEM from ISO 18033-2\n\n* Add support for ECDH in the OpenSSL provider\n\n* Fix a bug in DataSource::discard_next() which could cause either an\n  infinite loop or the discarding of an incorrect number of bytes.\n  Reported on mailing list by Falko Strenzke.\n\n* Previously if BOTAN_TARGET_UNALIGNED_MEMORY_ACCESS_OK was defined,\n  the code doing low level loads/stores would use pointer casts to\n  access larger words out of a (potentially misaligned) byte array,\n  rather than using byte-at-a-time accesses. However even on platforms\n  such as x86 where this works, it triggers UBSan errors under Clang.\n  Instead use memcpy, which the C standard says is usable for such\n  purposes even with misaligned values. With recent GCC and Clang, the\n  same code seems to be emitted for either approach.\n\n* Avoid calling memcpy, memset, or memmove with a length of zero to\n  avoid undefined behavior, as calling these functions with an invalid\n  or null pointer, even with a length of zero, is invalid. Often there\n  are corner cases where this can occur, such as pointing to the very\n  end of a buffer.\n\n* The function ``RandomNumberGenerator::gen_mask`` (added in 1.11.20)\n  had undefined behavior when called with a bits value of 32 or\n  higher, and was tested to behave in unpleasant ways (such as\n  returning zero) when compiled by common compilers. This function was\n  not being used anywhere in the library and rather than support\n  something without a use case to justify it it seemed simpler to\n  remove it. Undefined behavior found by Daniel Neus.\n\n* Support for using ``ctgrind`` for checking const time blocks has\n  been replaced by calling the valgrind memcheck APIs directly. This\n  allows const-time behavior to be tested without requiring a modified\n  valgrind binary. Adding the appropriate calls requires defining\n  BOTAN_HAS_VALGRIND in build.h. A binary compiled with this flag set\n  can still run normally (though with some slight runtime overhead).\n\n* Export MGF1 function mgf1_mask GH #380\n\n* Work around a problem with some antivirus programs which causes the\n  ``shutil.rmtree`` and ``os.makedirs`` Python calls to occasionally\n  fail. The could prevent ``configure.py`` from running sucessfully\n  on such systems. GH #353\n\n* Let ``configure.py`` run under CPython 2.6. GH #362\n\nVersion 1.11.25, 2015-12-07\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* In this release the test suite has been largely rewritten. Previously the\n  tests had internally used several different test helper frameworks created or\n  adopted over time, each of which was insufficient on its own for testing the\n  entire library. These have been fully converged on a new framework which\n  suffices for all of the tests. There should be no user-visible change as a\n  result of this, except that the output format of `botan-test` has changed.\n\n* Improved side channel countermeasures for the table based AES implementation.\n  The 4K T tables are computed (once) at runtime to avoid various cache based\n  attacks which are possible due to shared VMM mappings of read only tables.\n  Additionally every cache line of the table is read from prior to processing\n  the block(s).\n\n* Support for the insecure ECC groups secp112r1, secp112r2, secp128r1, and\n  secp128r2 has been removed.\n\n* The portable version of GCM has been changed to run using only\n  constant time operations.\n\n* Work around a bug in MSVC 2013 std::mutex which on some Windows\n  versions can result in a deadlock during static initialization. On\n  Windows a CriticalSection is used instead. Analysis and patch from\n  Matej Kenda (TopIT d.o.o.). GH #321\n\n* The OpenSSL implementation of RC4 would return the wrong value from `name` if\n  leading bytes of the keystream had been skipped in the output.\n\n* Fixed the signature of the FFI function botan_pubkey_destroy, which took the\n  wrong type and was not usable.\n\n* The TLS client would erronously reject any server key exchange packet smaller\n  than 6 bytes. This prevented negotiating a plain PSK TLS ciphersuite with an\n  empty identity hint. ECDHE_PSK and DHE_PSK suites were not affected.\n\n* Fixed a bug that would cause the TLS client to occasionally reject a valid\n  server key exchange message as having an invalid signature. This only affected\n  DHE and SRP ciphersuites.\n\n* Support for negotiating use of SHA-224 in TLS has been disabled in the\n  default policy.\n\n* Added `remove_all` function to the `TLS::Session_Manager` interface\n\n* Avoid GCC warning in pedantic mode when including bigint.h GH #330\n\nVersion 1.11.24, 2015-11-04\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* When the bugs affecting X.509 path validation were fixed in 1.11.23, a check\n  in Credentials_Manager::verify_certificate_chain was accidentally removed\n  which caused path validation failures not to be signaled to the TLS layer.\n  Thus in 1.11.23 certificate authentication in TLS is bypassed.\n  Reported by Florent Le Coz in GH #324\n\n* Fixed an endian dependency in McEliece key generation which caused\n  keys to be generated differently on big and little endian systems,\n  even when using a deterministic PRNG with the same seed.\n\n* In `configure,py`, the flags for controlling use of debug, sanitizer, and\n  converage information have been split out into individual options\n  `--with-debug-info`, `--with-sanitizers`, and `--with-coverage`. These allow\n  enabling more than one in a build in a controlled way. The `--build-mode` flag\n  added in 1.11.17 has been removed.\n\nVersion 1.11.23, 2015-10-26\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* CVE-2015-7824: An information leak allowed padding oracle attacks against\n  TLS CBC decryption. Found in a review by Sirrix AG and 3curity GmbH.\n\n* CVE-2015-7825: Validating a malformed certificate chain could cause an\n  infinite loop. Found in a review by Sirrix AG and 3curity GmbH.\n\n* CVE-2015-7826: X.509 path validation violated RFC 6125 and would accept\n  certificates which should not validate under those rules. In particular botan\n  would accept wildcard certificates as matching in situations where it should\n  not (for example it would erroneously accept ``*.example.com`` as a valid\n  wildcard for ``foo.bar.example.com``)\n\n* CVE-2015-7827: The routines for decoding PKCS #1 encryption and OAEP blocks\n  have been rewritten to run without secret indexes or branches. These\n  cryptographic operations are vulnerable to oracle attacks, including via side\n  channels such as timing or cache-based analysis. In theory it would be\n  possible to attack the previous implementations using such a side channel,\n  which could allow an attacker to mount a plaintext recovery attack.\n\n  By writing the code such that it does not depend on secret inputs for branch\n  or memory indexes, such a side channel would be much less likely to exist.\n\n  The OAEP code has previously made an attempt at constant time operation, but\n  it used a construct which many compilers converted into a conditional jump.\n\n* Add support for using ctgrind (https://github.com/agl/ctgrind) to test that\n  sections of code do not use secret inputs to decide branches or memory indexes.\n  The testing relies on dynamic checking using valgrind.\n\n  So far PKCS #1 decoding, OAEP decoding, Montgomery reduction, IDEA, and\n  Curve25519 have been notated and confirmed to be constant time on Linux/x86-64\n  when compiled by gcc.\n\n* Public key operations can now be used with specified providers by passing an\n  additional parameter to the constructor of the PK operation.\n\n* OpenSSL RSA provider now supports signature creation and verification.\n\n* The blinding code used for RSA, Diffie-Hellman, ElGamal and Rabin-Williams now\n  periodically reinitializes the sequence of blinding values instead of always\n  deriving the next value by squaring the previous ones. The reinitializion\n  interval can be controlled by the build.h parameter BOTAN_BLINDING_REINIT_INTERVAL.\n\n* A bug decoding DTLS client hellos prevented session resumption for succeeding.\n\n* DL_Group now prohibits creating a group smaller than 1024 bits.\n\n* Add System_RNG type. Previously the global system RNG was only accessible via\n  `system_rng` which returned a reference to the object. However is at times\n  useful to have a unique_ptr<RandomNumberGenerator> which will be either the\n  system RNG or an AutoSeeded_RNG, depending on availability, which this\n  additional type allows.\n\n* New command line tools `dl_group` and `prime`\n\n* The `configure.py` option `--no-autoload` is now also available\n  under the more understandable name `--minimized-build`.\n\n* Note: 1.11.22 was briefly released on 2015-10-26. The only difference between\n  the two was a fix for a compilation problem in the OpenSSL RSA code.  As the\n  1.11.22 release had already been tagged it was simpler to immediately release\n  1.11.23 rather than redo the release.\n\nVersion 1.11.21, 2015-10-11\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add new methods for creating types such as BlockCiphers or HashFunctions,\n  T::providers() returning list of provider for a type, and T::create() creating\n  a new object of a specified provider. The functions in lookup.h forward to\n  these new APIs. A change to the lookup system in 1.11.14 had caused problems\n  with static libraries (GH #52). These problems have been fixed as part of these\n  changes. GH #279\n\n* Fix loading McEliece public or private keys with PKCS::load_key / X509::load_key\n\n* Add `mce` command line tool for McEliece key generation and file encryption\n\n* Add Darwin_SecRandom entropy source which uses `SecRandomCopyBytes`\n  API call for OS X and iOS, as this call is accessible even from a\n  sandboxed application. GH #288\n\n* Add new HMAC_DRBG constructor taking a name for the MAC to use, rather\n  than a pointer to an object.\n\n* The OCaml module is now a separate project at\n  https://github.com/randombit/botan-ocaml\n\n* The encrypted sqlite database support in contrib has moved to\n  https://github.com/randombit/botan-sqlite\n\n* The Perl XS module has been removed as it was no longer maintained.\n\nVersion 1.11.20, 2015-09-07\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Additional countermeasures were added to ECC point multiplications\n  including exponent blinding and randomization of the point\n  representation to help protect against side channel attacks.\n\n* An ECDSA provider using OpenSSL has been added.\n\n* The ordering of algorithm priorities has been reversed. Previously\n  255 was the lowest priority and 0 was the highest priority. Now it\n  is the reverse, with 0 being lowest priority and 255 being highest.\n  The default priority for the base algorithms is 100. This only\n  affects external providers or applications which directly set\n  provider preferences.\n\n* On OS X, rename libs to avoid trailing version numbers, e.g.\n  libbotan-1.11.dylib.19 -> libbotan-1.11.19.dylib. This was requested\n  by the Homebrew project package audit. GH #241, #260\n\n* Enable use of CPUID interface with clang. GH #232\n\n* Add support for MSVC 2015 debug builds by satisfying C++ allocator\n  requirements. SO 31802806, GH #236\n\n* Make `X509_Time` string parsing and `to_u32bit()` more strict to avoid\n  integer overflows and other potentially dangerous misinterpretations.\n  GH #240, #243\n\n* Remove all 'extern \"C\"' declarations from src/lib/math/mp/ because some\n  of those did throw exceptions and thus cannot be C methods. GH #249\n\n* Fix build configuration for clang debug on Linux. GH #250\n\n* Fix zlib error when compressing an empty buffer. GH #265\n\n* Fix iOS builds by allowing multiple compiler flags with the same name.\n  GH #266\n\n* Fix Solaris build issue caused by `RLIMIT_MEMLOCK`. GH #262\n\nVersion 1.11.19, 2015-08-03\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* SECURITY: The BER decoder would crash due to reading from offset 0\n  of an empty vector if it encountered a BIT STRING which did not\n  contain any data at all. As the type requires a 1 byte field this is\n  not valid BER but could occur in malformed data. Found with afl.\n  CVE-2015-5726\n\n* SECURITY: The BER decoder would allocate a fairly arbitrary amount\n  of memory in a length field, even if there was no chance the read\n  request would succeed. This might cause the process to run out of\n  memory or invoke the OOM killer. Found with afl.\n  CVE-2015-5727\n\n* The TLS heartbeat extension is deprecated and unless strong arguments\n  are raised in its favor it will be removed in a future release.\n  Comment at https://github.com/randombit/botan/issues/187\n\n* The x86-32 assembly versions of MD4, MD5, SHA-1, and Serpent and the\n  x86-64 version of SHA-1 have been removed. With compilers from this\n  decade the C++ versions are significantly faster. The SSE2 versions\n  of SHA-1 and Serpent remain, as they are still the fastest version\n  for processors with SIMD extensions. GH #216\n\n* BigInt::to_u32bit would fail if the value was exactly 32 bits.\n  GH #220\n\n* Botan is now fully compaitible with _GLIBCXX_DEBUG. GH #73\n\n* BigInt::random_integer distribution was not uniform. GH #108\n\n* Added unit testing framework Catch. GH #169\n\n* Fix `make install`. GH #181, #186\n\n* Public header `fs.h` moved to `internal/filesystem.h`. Added filesystem\n  support for MSVC 2013 when boost is not available, allowing tests to run on\n  those systems. GH #198, #199\n\n* Added os \"android\" and fix Android compilation issues. GH #203\n\n* Drop support for Python 2.6 for all Botan Python scripts. GH #217\n\nVersion 1.10.10, 2015-08-03\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* SECURITY: The BER decoder would crash due to reading from offset 0\n  of an empty vector if it encountered a BIT STRING which did not\n  contain any data at all. As the type requires a 1 byte field this is\n  not valid BER but could occur in malformed data. Found with afl.\n  CVE-2015-5726\n\n* SECURITY: The BER decoder would allocate a fairly arbitrary amount\n  of memory in a length field, even if there was no chance the read\n  request would succeed. This might cause the process to run out of\n  memory or invoke the OOM killer. Found with afl.\n  CVE-2015-5727\n\n* Due to an ABI incompatible (though not API incompatible) change in\n  this release, the version number of the shared object has been\n  increased.\n\n* The default TLS policy no longer allows RC4.\n\n* Fix a signed integer overflow in Blue Midnight Wish that may cause\n  incorrect computations or undefined behavior.\n\nVersion 1.11.18, 2015-07-05\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* In this release Botan has switched VCS from ``monotone`` to ``git``,\n  and is now hosted on github at https://github.com/randombit/botan\n\n* The TLS client called ``std::set_difference`` on an invalid iterator\n  pair. This could potentially lead to a crash depending on the\n  compiler and STL implementation. It also would trigger assertion\n  failures when using checked iterators. GH #73\n\n* Remove code constructs which triggered errors under MSVC and GCC\n  debug iterators. The primary of these was an idiom of ``&vec[x]`` to\n  create a pointer offset of a ``std::vector``. This failed when x was\n  set equal to ``vec.size()`` to create the one-past-the-end address.\n  The pointer in question was never dereferenced, but it triggered\n  the iterator debugging checks which prevented using these valuble\n  analysis tools. From Simon Warta and Daniel Seither. GH #125\n\n* Several incorrect or missing module dependencies have been fixed. These\n  often prevented a successful build of a minimized amalgamation when\n  only a small set of algorithms were specified. GH #71\n  From Simon Warta.\n\n* Add an initial binding to OCaml. Currently only hashes, RNGs, and\n  bcrypt are supported.\n\n* The default key size generated by the ``keygen`` tool has increased\n  to 2048 bits. From Rene Korthaus.\n\n* The ``Botan_types`` namespace, which contained ``using`` declarations\n  for (just) ``Botan::byte`` and ``Botan::u32bit``, has been removed.\n  Any use should be replaced by ``using`` declarations for those types\n  directly.\n\nVersion 1.11.17, 2015-06-18\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* All support for the insecure RC4 stream cipher has been removed\n  from the TLS implementation.\n\n* Fix decoding of TLS maximum fragment length. Regardless of what\n  value was actually negotiated, TLS would treat it as a negotiated\n  limit of 4096.\n\n* Fix the configure.py flag ``--disable-aes-ni`` which did nothing of\n  the sort.\n\n* Fixed nmake clean target. GitHub #104\n\n* Correct buffering logic in ``Compression_Filter``. GitHub #93 and #95\n\nVersion 1.11.16, 2015-03-29\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* TLS has changed from using the non-standard NPN extension to the IETF\n  standardized ALPN extension for negotiating an application-level protocol.\n  Unfortunately the semantics of the exchange have changed with ALPN. Using\n  NPN, the server offered a list of protocols it advertised, and then the\n  client chose its favorite. With ALPN, the client offers a list of protocols\n  and the server chooses. The the signatures of both the TLS::Client and\n  TLS::Server constructors have changed to support this new flow.\n\n* Optimized ECDSA signature verification thanks to an observation by\n  Dr. Falko Strenzke. On some systems verifications are between 1.5\n  and 2 times faster than in 1.11.15.\n\n* RSA encrypt and decrypt operations using OpenSSL have been added.\n\n* Public key operation types now handle all aspects of the operation,\n  such as hashing and padding for signatures. This change allows\n  supporting specialized implementations which only support particular\n  padding types.\n\n* Added global timeout to HMAC_RNG entropy reseed. The defaults are\n  the values set in the build.h macros ``BOTAN_RNG_AUTO_RESEED_TIMEOUT``\n  and ``BOTAN_RNG_RESEED_DEFAULT_TIMEOUT``, but can be overriden\n  on a specific poll with the new API call reseed_with_timeout.\n\n* Fixed Python cipher update_granularity() and default_nonce_length()\n  functions\n\n* The library now builds on Visual C++ 2013\n\n* The GCM update granularity was reduced from 4096 to 16 bytes.\n\n* Fix a bug that prevented building the amalgamation until a non-amalgamation\n  configuration was performed first in the same directory.\n\n* Add Travis CI integration. Github pull 60.\n\nVersion 1.11.15, 2015-03-08\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Support for RC4 in TLS, already disabled by default, is now deprecated.\n  The RC4 ciphersuites will be removed entirely in a future release.\n\n* A bug in ffi.cpp meant Python could only encrypt. Github issue 53.\n\n* When comparing two ASN.1 algorithm identifiers, consider empty and\n  NULL parameters the same.\n\n* Fixed memory leaks in TLS and cipher modes introduced in 1.11.14\n\n* MARK-4 failed when OpenSSL was enabled in the build in 1.11.14\n  because the OpenSSL version ignored the skip parameter.\n\n* Fix compilation problem on OS X/clang\n\n* Use BOTAN_NOEXCEPT macro to work around lack of noexcept in VS 2013\n\nVersion 1.11.14, 2015-02-27\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* The global state object previously used by the library has been removed.\n  This includes the global PRNG. The library can be safely initialized\n  multiple times without harm.\n\n  The engine code has also been removed, replaced by a much lighter-weight\n  object registry system which provides lookups in faster time and with less\n  memory overhead than the previous approach.\n\n  One caveat of the current system with regards to static linking: because only\n  symbols already mentioned elsewhere in the program are included in the final\n  link step, few algorithms will be available through the lookup system by\n  default, even though they were compiled into the library. Your application\n  must explicitly reference the types you require or they will not end up\n  being available in the final binary. See also Github issue #52\n\n  If you intend to build your application against a static library and don't\n  want to explicitly reference each algo object you might attempt to look up by\n  string, consider either building with ``--via-amalgamation``, or else (much\n  simpler) using the amalgamation directly.\n\n* The new ``ffi`` submodule provides a simple C API/ABI for a number of useful\n  operations (hashing, ciphers, public key operations, etc) which is easily\n  accessed using the FFI modules included in many languages.\n\n* A new Python wrapper (in ``src/lib/python/botan.py``) using ``ffi`` and the Python\n  ``ctypes`` module is available. The old Boost.Python wrapper has been removed.\n\n* Add specialized reducers for P-192, P-224, P-256, and P-384\n\n* OCB mode, which provides a fast and constant time AEAD mode without requiring\n  hardware support, is now supported in TLS, following\n  draft-zauner-tls-aes-ocb-01. Because this specification is not yet finalized\n  is not yet enabled by the default policy, and the ciphersuite numbers used are\n  in the experimental range and may conflict with other uses.\n\n* Add ability to read TLS policy from a text file using ``TLS::Text_Policy``.\n\n* The amalgamation now splits off any ISA specific code (for instance, that\n  requiring SSSE3 instruction sets) into a new file named (for instance)\n  ``botan_all_ssse3.cpp``. This allows the main amalgamation file to be compiled\n  without any special flags, so ``--via-amalgamation`` builds actually work now.\n  This is disabled with the build option ``--single-amalgamation-file``\n\n* PBKDF and KDF operations now provide a way to write the desired output\n  directly to an application-specified area rather than always allocating a new\n  heap buffer.\n\n* HKDF, previously provided using a non-standard interface, now uses the\n  standard KDF interface and is retrievable using get_kdf.\n\n* It is once again possible to build the complete test suite without requiring\n  any boost libraries. This is currently only supported on systems supporting\n  the readdir interface.\n\n* Remove use of memset_s which caused problems with amalgamation on OS X.\n  Github 42, 45\n\n* The memory usage of the counter mode implementation has been reduced.\n  Previously it encrypted 256 blocks in parallel as this leads to a slightly\n  faster counter increment operation. Instead CTR_BE simply encrypts a buffer\n  equal in size to the advertised parallelism of the cipher implementation.\n  This is not measurably slower, and dramatically reduces the memory use of\n  CTR mode.\n\n* The memory allocator available on Unix systems which uses mmap and mlock to\n  lock a pool of memory now checks environment variable BOTAN_MLOCK_POOL_SIZE\n  and interprets it as an integer. If the value set to a smaller value then the\n  library would originally have allocated (based on resource limits) the user\n  specified size is used instead. You can also set the variable to 0 to\n  disable the pool entirely. Previously the allocator would consume all\n  available mlocked memory, this allows botan to coexist with an application\n  which wants to mlock memory for its own uses.\n\n* The botan-config script previously installed on Unix systems has been\n  removed.  Its functionality is replaced by the ``config`` command of the\n  ``botan`` tool executable, for example ``botan config cflags`` instead of\n  ``botan-config --cflags``.\n\n* Added a target for POWER8 processors\n\nVersion 1.11.13, 2015-01-11\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* All support for the insecure SSLv3 protocol and the server support\n  for processing SSLv2 client hellos has been removed.\n\n* The command line tool now has ``tls_proxy`` which negotiates TLS with\n  clients and forwards the plaintext to a specified port.\n\n* Add MCEIES, a McEliece-based integrated encryption system using\n  AES-256 in OCB mode for message encryption/authentication.\n\n* Add DTLS-SRTP negotiation defined in RFC 5764\n\n* Add SipHash\n\n* Add SHA-512/256\n\n* The format of serialized TLS sessions has changed. Additiionally, PEM\n  formatted sessions now use the label of \"TLS SESSION\" instead of \"SSL SESSION\"\n\n* Serialized TLS sessions are now encrypted using AES-256/GCM instead of a\n  CBC+HMAC construction.\n\n* The cryptobox_psk module added in 1.11.4 and previously used for TLS session\n  encryption has been removed.\n\n* When sending a TLS heartbeat message, the number of pad bytes to use can now\n  be specified, making it easier to use for PMTU discovery.\n\n* If available, zero_mem now uses RtlSecureZeroMemory or memset_s instead of a\n  byte-at-a-time loop.\n\n* The functions base64_encode and base64_decode would erroneously\n  throw an exception if passed a zero-length input. Github issue 37.\n\n* The Python install script added in version 1.11.10 failed to place the\n  headers into a versioned subdirectory.\n\n* Fix the install script when running under Python3.\n\n* Avoid code that triggers iterator debugging asserts under MSVC 2013. Github\n  pull 36 from Simon Warta.\n\nVersion 1.11.12, 2015-01-02\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add Curve25519. The implementation is based on curve25519-donna-c64.c\n  by Adam Langley. New (completely non-standard) OIDs and formats for\n  encrypting Curve25519 keys under PKCS #8 and including them in\n  certificates and CRLs have been defined.\n\n* Add Poly1305, based on the implementation poly1305-donna by Andrew Moon.\n\n* Add the ChaCha20Poly1305 AEADs defined in draft-irtf-cfrg-chacha20-poly1305-03\n  and draft-agl-tls-chacha20poly1305-04.\n\n* Add ChaCha20Poly1305 ciphersuites for TLS compatible with Google's servers\n  following draft-agl-tls-chacha20poly1305-04\n\n* When encrypted as PKCS #8 structures, Curve25519 and McEliece\n  private keys default to using AES-256/GCM instead of AES-256/CBC\n\n* Define OIDs for OCB mode with AES, Serpent and Twofish.\n\nVersion 1.11.11, 2014-12-21\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* The Sqlite3 wrapper has been abstracted to a simple interface for\n  SQL dbs in general, though Sqlite3 remains the only implementation.\n  The main logic of the TLS session manager which stored encrypted\n  sessions to a Sqlite3 database (``TLS::Session_Manager_SQLite``) has\n  been moved to the new ``TLS::Session_Manager_SQL``. The Sqlite3\n  manager API remains the same but now just subclasses\n  ``TLS::Session_Manager_SQL`` and has a constructor instantiate the\n  concrete database instance.\n\n  Applications which would like to use a different db can now do so\n  without having to reimplement the session cache logic simply by\n  implementing a database wrapper subtype.\n\n* The CryptGenRandom entropy source is now also used on MinGW.\n\n* The system_rng API is now also available on systems with CryptGenRandom\n\n* With GCC use -fstack-protector for linking as well as compiling,\n  as this is required on MinGW. Github issue 34.\n\n* Fix missing dependency in filters that caused compilation problem\n  in amalgamation builds. Github issue 33.\n\n* SSLv3 support is officially deprecated and will be removed in a\n  future release.\n\nVersion 1.10.9, 2014-12-13\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed EAX tag verification to run in constant time\n\n* The default TLS policy now disables SSLv3.\n\n* A crash could occur when reading from a blocking random device if\n  the device initially indicated that entropy was available but\n  a concurrent process drained the entropy pool before the\n  read was initiated.\n\n* Fix decoding indefinite length BER constructs that contain a context\n  sensitive tag of zero. Github pull 26 from Janusz Chorko.\n\n* The ``botan-config`` script previously tried to guess its prefix from\n  the location of the binary. However this was error prone, and now\n  the script assumes the final installation prefix matches the value\n  set during the build. Github issue 29.\n\nVersion 1.11.10, 2014-12-10\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* An implementation of McEliece code-based public key encryption based\n  on INRIA's HyMES and secured against a variety of side-channels was\n  contributed by cryptosource GmbH. The original version is LGPL but\n  cryptosource has secured permission to release an adaptation under a\n  BSD license. A CCA2-secure KEM scheme is also included.\n\n  The implementation is further described in\n  http://www.cryptosource.de/docs/mceliece_in_botan.pdf and\n  http://cryptosource.de/news_mce_in_botan_en.html\n\n* DSA and ECDSA now create RFC 6979 deterministic signatures.\n\n* Add support for TLS fallback signaling (draft-ietf-tls-downgrade-scsv-00).\n  Clients will send a fallback SCSV if the version passed to the Client\n  constructor is less than the latest version supported by local policy, so\n  applications implementing fallback are protected. Servers always check the\n  SCSV.\n\n* In previous versions a TLS::Server could service either TLS or DTLS\n  connections depending on policy settings and what type of client hello it\n  received. This has changed and now a Server object is initialized for\n  either TLS or DTLS operation. The default policy previously prohibited\n  DTLS, precisely to prevent a TCP server from being surprised by a DTLS\n  connection.  The default policy now allows TLS v1.0 or higher or DTLS v1.2.\n\n* Fixed a bug in CCM mode which caused it to produce incorrect tags when used\n  with a value of L other than 2. This affected CCM TLS ciphersuites, which\n  use L=3. Thanks to Manuel P\u00e9gouri\u00e9-Gonnard for the anaylsis and patch.\n  Bugzilla 270.\n\n* DTLS now supports timeouts and handshake retransmits. Timeout checking\n  is triggered by the application calling the new TLS::Channel::timeout_check.\n\n* Add a TLS policy hook to disable putting the value of the local clock in hello\n  random fields.\n\n* All compression operations previously available as Filters are now\n  performed via the Transformation API, which minimizes memory copies.\n  Compression operations are still available through the Filter API\n  using new general compression/decompression filters in comp_filter.h\n\n* The zlib module now also supports gzip compression and decompression.\n\n* Avoid a crash in low-entropy situations when reading from /dev/random, when\n  select indicated the device was readable but by the time we start the read the\n  entropy pool had been depleted.\n\n* The Miller-Rabin primality test function now takes a parameter allowing the\n  user to directly specify the maximum false negative probability they are\n  willing to accept.\n\n* PKCS #8 private keys can now be encrypted using GCM mode instead of\n  unauthenticated CBC. The default remains CBC for compatibility.\n\n* The default PKCS #8 encryption scheme has changed to use PBKDF2 with\n  SHA-256 instead of SHA-1\n\n* A specialized reducer for P-521 was added.\n\n* On Linux the mlock allocator will use MADV_DONTDUMP on the pool so\n  that the contents are not included in coredumps.\n\n* A new interface for directly using a system-provided PRNG is\n  available in system_rng.h. Currently only systems with /dev/urandom\n  are supported.\n\n* Fix decoding indefinite length BER constructs that contain a context sensitive\n  tag of zero. Github pull 26 from Janusz Chorko.\n\n* The GNU MP engine has been removed.\n\n* Added AltiVec detection for POWER8 processors.\n\n* Add a new install script written in Python which replaces shell hackery in the\n  makefiles.\n\n* Various modifications to better support Visual C++ 2013 and 2015. Github\n  issues 11, 17, 18, 21, 22.\n\nVersion 1.10.8, 2014-04-10\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* SECURITY: Fix a bug in primality testing introduced in 1.8.3 which\n  caused only a single random base, rather than a sequence of random\n  bases, to be used in the Miller-Rabin test. This increased the\n  probability that a non-prime would be accepted, for instance a 1024\n  bit number would be incorrectly classed as prime with probability\n  around 2^-40. Reported by Jeff Marrison. CVE-2014-9742\n\n* The key length limit on HMAC has been raised to 512 bytes, allowing\n  the use of very long passphrases with PBKDF2.\n\nVersion 1.11.9, 2014-04-10\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* SECURITY: Fix a bug in primality testing introduced in 1.8.3 which\n  caused only a single random base, rather than a sequence of random\n  bases, to be used in the Miller-Rabin test. This increased the\n  probability that a non-prime would be accepted, for instance a 1024\n  bit number would be incorrectly classed as prime with probability\n  around 2^-40. Reported by Jeff Marrison. CVE-2014-9742\n\n* X.509 path validation now returns a set of all errors that occurred\n  during validation, rather than immediately returning the first\n  detected error. This prevents a seemingly innocuous error (such as\n  an expired certificate) from hiding an obviously serious error\n  (such as an invalid signature). The Certificate_Status_Code enum is\n  now ordered by severity, and the most severe error is returned by\n  Path_Validation_Result::result(). The entire set of status codes is\n  available with the new all_statuses call.\n\n* Fixed a bug in OCSP response decoding which would cause an error\n  when attempting to decode responses from some widely used\n  responders.\n\n* An implementation of HMAC_DRBG RNG from NIST SP800-90A has been\n  added. Like the X9.31 PRNG implementation, it uses another\n  underlying RNG for seeding material.\n\n* An implementation of the RFC 6979 deterministic nonce generator has\n  been added.\n\n* Fix a bug in certificate path validation which prevented successful\n  validation if intermediate certificates were presented out of order.\n\n* Fix a bug introduced in 1.11.5 which could cause crashes or other\n  incorrect behavior when a cipher mode filter was followed in the\n  pipe by another filter, and that filter had a non-empty start_msg.\n\n* The types.h header now uses stdint.h rather than cstdint to avoid\n  problems with Clang on OS X.\n\nVersion 1.11.8, 2014-02-13\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* The ``botan`` command line application introduced in 1.11.7 is now\n  installed along with the library.\n\n* A bug in certificate path validation introduced in 1.11.6 which\n  caused all CRL signature checks to fail has been corrected.\n\n* The ChaCha20 stream cipher has been added.\n\n* The ``Transformation`` class no longer implements an interface for keying,\n  this has been moved to a new subclass ``Keyed_Transformation``.\n\n* The ``Algorithm`` class, which previously acted as a global base for\n  various types (ciphers, hashes, etc) has been removed.\n\n* CMAC now supports 256 and 512 bit block ciphers, which also allows\n  the use of larger block ciphers with EAX mode. In particular this\n  allows using Threefish in EAX mode.\n\n* The antique PBES1 private key encryption scheme (which only supports\n  DES or 64-bit RC2) has been removed.\n\n* The Square, Skipjack, and Luby-Rackoff block ciphers have been removed.\n\n* The Blue Midnight Wish hash function has been removed.\n\n* Skein-512 no longer supports output lengths greater than 512 bits.\n\n* Skein did not reset its internal state properly if clear() was\n  called, causing it to produce incorrect results for the following\n  message. It was reset correctly in final() so most usages should not\n  be affected.\n\n* A number of public key padding schemes have been renamed to match\n  the most common notation; for instance EME1 is now called OAEP and\n  EMSA4 is now called PSSR. Aliases are set which should allow all\n  current applications to continue to work unmodified.\n\n* A bug in CFB encryption caused a few bytes past the end of the final\n  block to be read. The actual output was not affected.\n\n* Fix compilation errors in the tests that occurred with minimized\n  builds. Contributed by Markus Wanner.\n\n* Add a new ``--destdir`` option to ``configure.py`` which controls\n  where the install target will place the output. The ``--prefix``\n  option continues to set the location where the library expects to be\n  eventually installed.\n\n* Many class destructors which previously deleted memory have been\n  removed in favor of using ``unique_ptr``.\n\n* Various portability fixes for Clang, Windows, Visual C++ 2013, OS X,\n  and x86-32.\n\nVersion 1.11.7, 2014-01-10\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Botan's basic numeric types are now defined in terms of the\n  C99/C++11 standard integer types. For instance ``u32bit`` is now a\n  typedef for ``uint32_t``, and both names are included in the library\n  namespace. This should not result in any application-visible\n  changes.\n\n* There are now two executable outputs of the build, ``botan-test``,\n  which runs the tests, and ``botan`` which is used as a driver to call\n  into various subcommands which can also act as examples of library\n  use, much in the manner of the ``openssl`` command. It understands the\n  commands ``base64``, ``asn1``, ``x509``, ``tls_client``, ``tls_server``,\n  ``bcrypt``, ``keygen``, ``speed``, and various others. As part of this\n  change many obsolete, duplicated, or one-off examples were removed,\n  while others were extended with new functionality. Contributions of\n  new subcommands, new bling for exising ones, or documentation in any\n  form is welcome.\n\n* Fix a bug in Lion, which was broken by a change in 1.11.0. The\n  problem was not noticed before as Lion was also missing a test vector\n  in previous releases.\n\nVersion 1.10.7, 2013-12-29\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* OAEP had two bugs, one of which allowed it to be used even if the\n  key was too small, and the other of which would cause a crash during\n  decryption if the EME data was too large for the associated key.\n\nVersion 1.11.6, 2013-12-29\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* The Boost filesystem and asio libraries are now being used by default.\n  Pass ``--without-boost`` to ``configure.py`` to disable.\n\n* The default TLS policy no longer allows SSLv3 or RC4.\n\n* OAEP had two bugs, one of which allowed it to be used even if the\n  key was too small, and the other of which would cause a crash during\n  decryption if the EME data was too large for the associated key.\n\n* GCM mode now uses the Intel clmul instruction when available\n\n* Add the Threefish-512 tweakable block cipher, including an AVX2 version\n\n* Add SIV (from :rfc:`5297`) as a nonce-based AEAD\n\n* Add HKDF (from :rfc:`5869`) using an experimental PRF interface\n\n* Add HTTP utility functions and OCSP online checking\n\n* Add TLS::Policy::acceptable_ciphersuite hook to disable ciphersuites\n  on an ad-hoc basis.\n\n* TLS::Session_Manager_In_Memory's constructor now requires a RNG\n\nVersion 1.10.6, 2013-11-10\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* The device reading entropy source now attempts to read from all\n  available devices. Previously it would break out early if a partial\n  read from a blocking source occurred, not continuing to read from a\n  non-blocking device. This would cause the library to fall back on\n  slower and less reliable techniques for collecting PRNG seed\n  material. Reported by Rickard Bellgrim.\n\n* HMAC_RNG (the default PRNG implementation) now automatically reseeds\n  itself periodically. Previously reseeds only occurred on explicit\n  application request.\n\n* Fix an encoding error in EC_Group when encoding using EC_DOMPAR_ENC_OID.\n  Reported by fxdupont on github.\n\n* In EMSA2 and Randpool, avoid calling name() on objects after deleting them if\n  the provided algorithm objects are not suitable for use.  Found by Clang\n  analyzer, reported by Jeffrey Walton.\n\n* If X509_Store was copied, the u32bit containing how long to cache validation\n  results was not initialized, potentially causing results to be cached for\n  significant amounts of time. This could allow a certificate to be considered\n  valid after its issuing CA's cert expired. Expiration of the end-entity cert\n  is always checked, and reading a CRL always causes the status to be reset, so\n  this issue does not affect revocation. Found by Coverity scanner.\n\n* Avoid off by one causing a potentially unterminated string to be passed to\n  the connect system call if the library was configured to use a very long path\n  name for the EGD socket. Found by Coverity Scanner.\n\n* In PK_Encryptor_EME, PK_Decryptor_EME, PK_Verifier, and PK_Key_Agreement,\n  avoid dereferencing an unitialized pointer if no engine supported operations\n  on the key object given. Found by Coverity scanner.\n\n* Avoid leaking a file descriptor in the /dev/random and EGD entropy sources if\n  stdin (file descriptor 0) was closed. Found by Coverity scanner.\n\n* Avoid a potentially undefined operation in the bit rotation operations.  Not\n  known to have caused problems under any existing compiler, but might have\n  caused problems in the future. Caught by Clang sanitizer, reported by Jeffrey\n  Walton.\n\n* Increase default hash iterations from 10000 to 50000 in PBES1 and PBES2\n\n* Add a fix for mips64el builds from Brad Smith.\n\nVersion 1.11.5, 2013-11-10\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* The TLS callback signatures have changed - there are now two distinct\n  callbacks for application data and alerts. TLS::Client and TLS::Server have\n  constructors which continue to accept the old callback and use it for both\n  operations.\n\n* The entropy collector that read from randomness devices had two bugs - it\n  would break out of the poll as soon as any read succeeded, and it selected on\n  each device individually. When a blocking source was first in the device list\n  and the entropy pool was running low, the reader might either block in select\n  until eventually timing out (continuing on to read from /dev/urandom instead),\n  or read just a few bytes, skip /dev/urandom, fail to satisfy the entropy\n  target, and the poll would continue using other (slower) sources. This caused\n  substantial performance/latency problems in RNG heavy applications. Now all\n  devices are selected over at once, with the effect that a full read from\n  urandom always occurs, along with however much (if any) output is available\n  from blocking sources.\n\n* Previously AutoSeeded_RNG referenced a globally shared PRNG instance.\n  Now each instance has distinct state.\n\n* The entropy collector that runs Unix programs to collect statistical\n  data now runs multiple processes in parallel, greatly reducing poll\n  times on some systems.\n\n* The Randpool RNG implementation was removed.\n\n* All existing cipher mode implementations (such as CBC and XTS) have been\n  converted from filters to using the interface previously provided by\n  AEAD modes which allows for in-place message\n  processing. Code which directly references the filter objects will break, but\n  an adaptor filter allows usage through get_cipher as usual.\n\n* An implementation of CCM mode from RFC 3601 has been added, as well as CCM\n  ciphersuites for TLS.\n\n* The implementation of OCB mode now supports 64 and 96 bit tags\n\n* Optimized computation of XTS tweaks, producing a substantial speedup\n\n* Add support for negotiating Brainpool ECC curves in TLS\n\n* TLS v1.2 will not negotiate plain SHA-1 signatures by default.\n\n* TLS channels now support sending a ``std::vector``\n\n* Add a generic 64x64->128 bit multiply instruction operation in mul128.h\n\n* Avoid potentially undefined operations in the bit rotation operations. Not\n  known to have caused problems under existing compilers but might break in the\n  future. Found by Clang sanitizer, reported by Jeffrey Walton.\n\nVersion 1.11.4, 2013-07-25\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* CPU specific extensions are now always compiled if support for the\n  operations is available at build time, and flags enabling use of\n  extra operations (such as SSE2) are only included when compiling\n  files which specifically request support. This means, for instance,\n  that the SSSE3 and AES-NI implementations of AES are always included\n  in x86 builds, relying on runtime cpuid checking to prevent their\n  use on CPUs that do not support those operations.\n\n* The default TLS policy now only accepts TLS, to minimize surprise\n  for servers which might not expect to negotiate DTLS. Previously a\n  server would by default negotiate either protocol type (clients\n  would only accept the same protocol type as they\n  offered). Applications which use DTLS or combined TLS/DTLS need to\n  override ``Policy::acceptable_protocol_version``.\n\n* The TLS channels now accept a new parameter specifying how many\n  bytes to preallocate for the record handling buffers, which allows\n  an application some control over how much memory is used at runtime\n  for a particular connection.\n\n* Applications can now send arbitrary TLS alert messages using\n  ``TLS::Channel::send_alert``\n\n* A new TLS policy ``NSA_Suite_B_128`` is available, which\n  will negotiate only the 128-bit security NSA Suite B. See\n  :rfc:`6460` for more information about Suite B.\n\n* Adds a new interface for benchmarking, ``time_algorithm_ops``,\n  which returns a map of operations to operations per second. For\n  instance now both encrypt and decrypt speed of a block cipher can be\n  checked, as well as the key schedule of all keyed algorithms. It\n  additionally supports AEAD modes.\n\n* Rename ARC4 to RC4\n\nVersion 1.11.3, 2013-04-11\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add a new interface for AEAD modes (``AEAD_Mode``).\n\n* Implementations of the OCB and GCM authenticated cipher modes are\n  now included.\n\n* Support for TLS GCM ciphersuites is now available.\n\n* A new TLS policy mechanism\n  ``TLS::Policy::server_uses_own_ciphersuite_preferences``\n  controls how a server chooses a ciphersuite. Previously it always\n  chose its most preferred cipher out of the client's list, but this\n  can allow configuring a server to choose by the client's preferences\n  instead.\n\n* ``Keyed_Filter`` now supports returning a\n  ``Key_Length_Specification`` so the full details of what\n  keylengths are supported is now available in keyed filters.\n\n* The experimental and rarely used Turing and WiderWAKE stream ciphers\n  have been removed\n\n* New functions for symmetric encryption are included in cryptobox.h\n  though interfaces and formats are subject to change.\n\n* A new function ``algorithm_kat_detailed`` returns a string\n  providing information about failures, instead of just a pass/fail\n  indicator as in ``algorithm_kat``.\n\nVersion 1.10.5, 2013-03-02\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* A potential crash in the AES-NI implementation of the AES-192 key\n  schedule (caused by misaligned loads) has been fixed.\n\n* A previously conditional operation in Montgomery multiplication and\n  squaring is now always performed, removing a possible timing\n  channel.\n\n* Use correct flags for creating a shared library on OS X under Clang.\n\n* Fix a compile time incompatibility with Visual C++ 2012.\n\nVersion 1.11.2, 2013-03-02\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* A bug in the release script caused the ``botan_version.py`` included\n  in 1.11.1`` to be invalid, which required a manual edit to fix\n  (Bugzilla 226)\n\n* Previously ``clear_mem`` was implemented by an inlined call to\n  ``std::memset``. However an optimizing compiler might notice cases\n  where the memset could be skipped in cases allowed by the standard.\n  Now ``clear_mem`` calls ``zero_mem`` which is compiled separately and\n  which zeros out the array through a volatile pointer. It is possible\n  some compiler with some optimization setting (especially with\n  something like LTO) might still skip the writes. It would be nice if\n  there was an automated way to test this.\n\n* The new filter ``Threaded_Fork`` acts like a normal\n  ``Fork``, sending its input to a number of different\n  filters, but each subchain of filters in the fork runs in its own\n  thread. Contributed by Joel Low.\n\n* The default TLS policy formerly preferred AES over RC4, and allowed\n  3DES by default. Now the default policy is to negotiate only either\n  AES or RC4, and to prefer RC4.\n\n* New TLS ``Blocking_Client`` provides a thread per\n  connection style API similar to that provided in 1.10\n\n* The API of ``Credentials_Manager::trusted_certificate_authorities``\n  has changed to return a vector of ``Certificate_Store*`` instead of\n  ``X509_Certificate``. This allows the list of trusted CAs to be\n  more easily updated dynamically or loaded lazily.\n\n* The ``asn1_int.h`` header was split into ``asn1_alt_name.h``,\n  ``asn1_attribute.h`` and ``asn1_time.h``.\n\nVersion 1.10.4, 2013-01-07\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Avoid a conditional operation in the power mod implementations on if\n  a nibble of the exponent was zero or not. This may help protect\n  against certain forms of side channel attacks.\n\n* The SRP6 code was checking for invalid values as specified in RFC\n  5054, specifically values equal to zero mod p. However SRP would\n  accept negative A/B values, or ones larger than p, neither of which\n  should occur in a normal run of the protocol. These values are now\n  rejected. Credits to Timothy Prepscius for pointing out these values\n  are not normally used and probably signal something fishy.\n\n* The return value of version_string is now a compile time constant\n  string, so version information can be more easily extracted from\n  binaries.\n\nVersion 1.11.1, 2012-10-30\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nInitial support for DTLS (both v1.0 and v1.2) is available in this\nrelease, though it should be considered highly experimental. Currently\ntimeouts and retransmissions are not handled.\n\nThe ``TLS::Client`` constructor now takes the version to\noffer to the server. The policy hook ``TLS::Policy`` function\n`pref_version``, which previously controlled this, has been removed.\n\n`TLS::Session_Manager_In_Memory`` now chooses a random\n256-bit key at startup and encrypts all sessions (using the existing\n`TLS::Session::encrypt`` mechanism) while they are stored in\nmemory. This is primarily to reduce pressure on locked memory, as each\nsession normally requires 48 bytes of locked memory for the master\nsecret, whereas now only 32 bytes are needed total. This change may\nalso make it slightly harder for an attacker to extract session data\nfrom memory dumps (eg with a cold boot attack).\n\nThe keys used in TLS session encryption were previously uniquely\ndetermined by the master key. Now the encrypted session blob includes\ntwo 80 bit salts which are used in the derivation of the cipher and\nMAC keys.\n\nThe ``secure_renegotiation`` flag is now considered an aspect of the\nconnection rather than the session, which matches the behavior of\nother implementations. As the format has changed, sessions saved to\npersistent storage by 1.11.0 will not load in this version and vice\nversa. In either case this will not cause any errors, the session will\nsimply not resume and instead a full handshake will occur.\n\nNew policy hooks ``TLS::Policy::acceptable_protocol_version``,\n`TLS::Policy::allow_server_initiated_renegotiation``, and\n`TLS::Policy::negotiate_heartbeat_support`` were added.\n\nTLS clients were not sending a next protocol message during a session\nresumption, which would cause resumption failures with servers that\nsupport NPN if NPN was being offered by the client.\n\nA bug caused heartbeat requests sent by the counterparty during a\nhandshake to be passed to the application callback as if they were\nheartbeat responses.\n\nSupport for TLS key material export as specified in :rfc:`5705` has\nbeen added, available via ``TLS::Channel::key_material_export``\n\nA new function ``Public_Key::estimated_strength`` returns\nan estimate for the upper bound of the strength of the key. For\ninstance for an RSA key, it will return an estimate of how many\noperations GNFS would take to factor the key.\n\nA new ``Path_Validation_Result`` code has been added\n``SIGNATURE_METHOD_TOO_WEAK``. By default signatures created with keys\nbelow 80 bits of strength (as estimated by ``estimated_strength``) are\nrejected. This level can be modified using a parameter to the\n``Path_Validation_Restrictions`` constructor.\n\nThe SRP6 code was checking for invalid values as specified in\n:rfc:`5054`, ones equal to zero mod p, however it would accept\nnegative A/B values, or ones larger than p, neither of which should\noccur in a normal run of the protocol. These values are now\nrejected. Credits to Timothy Prepscius for pointing out these values\nare not normally used and probably signal something fishy.\n\nSeveral ``BigInt`` functions have been removed, including\n``operator[]``, ``assign``, ``get_reg``, and ``grow_reg``. The version\nof ``data`` that returns a mutable pointer has been renamed\n``mutable_data``.  Support for octal conversions has been removed.\n\nThe constructor ``BigInt(NumberType type, size_t n)`` has been\nremoved, replaced by ``BigInt::power_of_2``.\n\nIn 1.11.0, when compiled by GCC, the AES-NI implementation of AES-192\nwould crash if the mlock-based allocator was used due to an alignment\nissue.\n\nVersion 1.11.0, 2012-07-19\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. note::\n\n  In this release, many new features of C++11 are being used in the\n  library. Currently GCC 4.7 and Clang 3.1 are known to work well.\n  This version of the library cannot be compiled by or used with a\n  C++98 compiler.\n\nThere have been many changes and improvements to TLS.  The interface\nis now purely event driven and does not directly interact with\nsockets.  New TLS features include TLS v1.2 support, client\ncertificate authentication, renegotiation, session tickets, and\nsession resumption. Session information can be saved in memory or to\nan encrypted SQLite3 database. Newly supported TLS ciphersuite\nalgorithms include using SHA-2 for message authentication, pre shared\nkeys and SRP for authentication and key exchange, ECC algorithms for\nkey exchange and signatures, and anonymous DH/ECDH key exchange.\n\nSupport for OCSP has been added. Currently only client-side support\nexists.\n\nThe API for X.509 path validation has changed, with\n``x509_path_validate`` in x509path.h now handles path validation and\n``Certificate_Store`` handles storage of certificates and CRLs.\n\nThe memory container types have changed substantially.  The\n``MemoryVector`` and ``SecureVector`` container types have been\nremoved, and an alias of ``std::vector`` using an allocator that\nclears memory named ``secure_vector`` is used for key material, with\nplain ``std::vector`` being used for everything else.\n\nThe technique used for mlock'ing memory on Linux and BSD systems is\nmuch improved. Now a single page-aligned block of memory (the exact\nlimit of what we can mlock) is mmap'ed, with allocations being done\nusing a best-fit allocator and all metadata held outside the mmap'ed\nrange, in an effort to make best use of the very limited amount of\nmemory current Linux kernels allow unpriveledged users to lock.\n\nA filter using LZMA was contributed by Vojtech Kral. It is available\nif LZMA support was enabled at compilation time by passing\n``--with-lzma`` to ``configure.py``.\n\n:rfc:`5915` adds some extended information which can be included in\nECC private keys which the ECC key decoder did not expect, causing an\nexception when such a key was loaded. In particular, recent versions\nof OpenSSL use these fields. Now these fields are decoded properly,\nand if the public key value is included it is used, as otherwise the\npublic key needs to be rederived from the private key. However the\nlibrary does not include these fields on encoding keys for\ncompatibility with software that does not expect them (including older\nversions of botan).\n\nVersion 1.8.14, 2012-07-18\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* The malloc allocator would return null instead of throwing in the\n  event of an allocation failure, which could cause an application\n  crash due to null pointer dereference where normally an exception\n  would occur.\n\n* Recent versions of OpenSSL include extra information in ECC private\n  keys, the presence of which caused an exception when such a key was\n  loaded by botan. The decoding of ECC private keys has been changed to\n  ignore these fields if they are set.\n\n* AutoSeeded_RNG has been changed to prefer ``/dev/random`` over\n  ``/dev/urandom``\n\n* Fix detection of s390x (Debian bug 638347)\n\nVersion 1.10.3, 2012-07-10\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nA change in 1.10.2 accidentally broke ABI compatibility with 1.10.1\nand earlier versions, causing programs compiled against 1.10.1 to\ncrash if linked with 1.10.2 at runtime.\n\nRecent versions of OpenSSL include extra information in ECC private\nkeys, the presence of which caused an exception when such a key was\nloaded by botan. The decoding of ECC private keys has been changed to\nignore these fields if they are set.\n\nVersion 1.10.2, 2012-06-17\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSeveral TLS bugs were fixed in this release, including a major\nomission that the renegotiation extension was not being used.  As the\n1.10 implementation of TLS does not properly support renegotiation,\nthe approach in this release is simply to send the renegotiation\nextension SCSV, which should protect the client against any handshake\nsplicing. In addition renegotiation attempts are handled properly\ninstead of causing handshake failures - all hello requests, and all\nclient hellos after the initial negotiation, are ignored. Some\nbugs affecting DSA server authentication were also fixed.\n\nBy popular request, ``Pipe::reset`` no longer requires that message\nprocessing be completed, a requirement that caused problems when a\nFilter's end_msg call threw an exception, after which point the Pipe\nobject was no longer usable.\n\nSupport for getting entropy using the rdrand instruction introduced in\nIntel's Ivy Bridge processors has been added. In previous releases,\nthe ``CPUID::has_rdrand`` function was checking the wrong cpuid bit,\nand would false positive on AMD Bulldozer processors.\n\nAn implementation of SRP-6a compatible with the specification in RFC\n5054 is now available in ``srp6.h``. In 1.11, this is being used for\nTLS-SRP, but may be useful in other environments as well.\n\nAn implementation of the Camellia block cipher was added, again largely\nfor use in TLS.\n\nIf ``clock_gettime`` is available on the system, hres_timer will poll all\nthe available clock types.\n\nAltiVec is now detected on IBM POWER7 processors and on OpenBSD systems.\nThe OpenBSD support was contributed by Brad Smith.\n\nThe Qt mutex wrapper was broken and would not compile with any recent\nversion of Qt. Taking this as a clear indication that it is not in use,\nit has been removed.\n\nAvoid setting the soname on OpenBSD, as it doesn't support it (Bugzilla 158)\n\nA compilation problem in the dynamic loader that prevented using\ndyn_load under MinGW GCC has been fixed.\n\nA common error for people using MinGW is to target GCC on Windows,\nhowever the 'Windows' target assumes the existence of Visual C++\nruntime functions which do not exist in MinGW. Now, configuring for\nGCC on Windows will cause the configure.py to warn that likely you\nwanted to configure for either MinGW or Cygwin, not the generic\nWindows target.\n\nA bug in configure.py would cause it to interpret ``--cpu=s390x`` as\n``s390``. This may have affected other CPUs as well. Now configure.py\nsearches for an exact match, and only if no exact match is found will\nit search for substring matches.\n\nAn incompatibility in configure.py with the subprocess module included\nin Python 3.1 has been fixed (Bugzilla 157).\n\nThe exception catching syntax of configure.py has been changed to the\nPython 3.x syntax. This syntax also works with Python 2.6 and 2.7, but\nnot with any earlier Python 2 release. A simple search and replace\nwill allow running it under Python 2.5:\n``perl -pi -e 's/except (.*) as (.*):/except $1, $2:/g' configure.py``\n\nNote that Python 2.4 is not supported at all.\n\nVersion 1.10.1, 2011-07-11\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* A race condition in ``Algorithm_Factory`` could cause crashes in\n  multithreaded code.\n\n* The return value of ``name`` has changed for GOST 28147-89 and\n  Skein-512.  GOST's ``name`` now includes the name of the sbox, and\n  Skein's includes the personalization string (if nonempty). This\n  allows an object to be properly roundtripped, which is necessary to\n  fix the race condition described above.\n\n* A new distribution script is now included, as\n  ``src/build-data/scripts/dist.py``\n\n* The ``build.h`` header now includes, if available, an identifier of\n  the source revision that was used. This identifier is also included\n  in the result of ``version_string``.\n\nVersion 1.8.13, 2011-07-02\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* A race condition in ``Algorithm_Factory`` could cause crashes in\n  multithreaded code.\n\nVersion 1.10.0, 2011-06-20\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Detection for the rdrand instruction being added to upcoming Intel\n  Ivy Bridge processors has been added.\n\n* A template specialization of std::swap was added for the memory\n  container types.\n\nVersion 1.8.12, 2011-06-20\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n* If EMSA3(Raw) was used for more than one signature, it would produce\n  incorrect output.\n\n* Fix the --enable-debug option to configure.py\n\n* Improve OS detection on Cygwin\n\n* Fix compilation under Sun Studio 12 on Solaris\n\n* Fix a memory leak in the constructors of DataSource_Stream and\n  DataSink_Stream which would occur if opening the file failed (Bugzilla 144)\n\nVersion 1.9.18, 2011-06-03\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fourth release candidate for 1.10.0\n\n* The GOST 34.10 verification operation was not ensuring that s and r\n  were both greater than zero. This could potentially have meant it\n  would have accepted an invalid all-zero signature as valid for any\n  message. Due to how ECC points are internally represented it instead\n  resulted in an exception being thrown.\n\n* A simple multiexponentation algorithm is now used in ECDSA and\n  GOST-34.10 signature verification, leading to 20 to 25% improvements\n  in ECDSA and 25% to 40% improvements in GOST-34.10 verification\n  performance.\n\n* The internal representation of elliptic curve points has been\n  modified to use Montgomery representation exclusively, resulting in\n  reduced memory usage and a 10 to 20% performance improvement for\n  ECDSA and ECDH.\n\n* In OAEP decoding, scan for the delimiter bytes using a loop that is\n  written without conditionals so as to help avoid timing analysis.\n  Unfortunately GCC at least is 'smart' enough to compile it to\n  jumps anyway.\n\n* The SSE2 implementation of IDEA did not work correctly when compiled\n  by Clang, because the trick it used to emulate a 16 bit unsigned\n  compare in SSE (which doesn't contain one natively) relied on signed\n  overflow working in the 'usual' way. A different method that doesn't\n  rely on signed overflow is now used.\n\n* Add support for compiling SSL using Visual C++ 2010's TR1\n  implementation.\n\n* Fix a bug under Visual C++ 2010 which would cause ``hex_encode`` to\n  crash if given a zero-sized input to encode.\n\n* A new build option ``--via-amalgamation`` will first generate the\n  single-file amalgamation, then build the library from that single\n  file. This option requires a lot of memory and does not parallelize,\n  but the resulting library is smaller and may be faster.\n\n* On Unix, the library and header paths have been changed to allow\n  parallel installation of different versions of the library. Headers\n  are installed into ``<prefix>/include/botan-1.9/botan``, libraries\n  are named ``libbotan-1.9``, and ``botan-config`` is now namespaced\n  (so in this release ``botan-config-1.9``). All of these embedded\n  versions will be 1.10 in the upcoming stable release.\n\n* The soname system has been modified. In this release the library\n  soname is ``libbotan-1.9.so.0``, with the full library being named\n  ``libbotan-1.9.so.0.18``. The ``0`` is the ABI version, and will be\n  incremented whenever a breaking ABI change is made.\n\n* TR1 support is not longer automatically assumed under older versions\n  of GCC\n\n* Functions for base64 decoding that work standalone (without needing\n  to use a pipe) have been added to ``base64.h``\n\n* The function ``BigInt::to_u32bit`` was inadvertently removed in 1.9.11\n  and has been added back.\n\n* The function ``BigInt::get_substring`` did not work correctly with a\n  *length* argument of 32.\n\n* The implementation of ``FD_ZERO`` on Solaris uses ``memset`` and\n  assumes the caller included ``string.h`` on its behalf. Do so to\n  fix compilation in the ``dev_random`` and ``unix_procs`` entropy\n  sources. Patch from Jeremy C. Reed.\n\n* Add two different configuration targets for Atom, since some are\n  32-bit and some are 64-bit. The 'atom' target now refers to the\n  64-bit implementations, use 'atom32' to target the 32-bit\n  processors.\n\n* The (incomplete) support for CMS and card verifiable certificates\n  are disabled by default; add ``--enable-modules=cms`` or\n  ``--enable-modules=cvc`` during configuration to turn them back on.\n\nVersion 1.9.17, 2011-04-29\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Third release candidate for 1.10.0\n\n* The format preserving encryption method currently available was\n  presented in the header ``fpe.h`` and the functions ``fpe_encrypt``\n  and ``fpe_decrypt``. These were renamed as it is likely that other\n  FPE schemes will be included in the future. The header is now\n  ``fpe_fe1.h``, and the functions are named ``fe1_encrypt`` and\n  ``fe1_decrypt``.\n\n* New options to ``configure.py`` control what tools are used for\n  documentation generation. The ``--with-sphinx`` option enables using\n  Sphinx to convert ReST into HTML; otherwise the ReST sources are\n  installed directly. If ``--with-doxygen`` is used, Doxygen will run\n  as well. Documentation generation can be triggered via the ``docs``\n  target in the makefile; it will also be installed by the install\n  target on Unix.\n\n* A bug in 1.9.16 effectively disabled support for runtime CPU feature\n  detection on x86 under GCC in that release.\n\n* A mostly internal change, all references to \"ia32\" and \"amd64\" have\n  been changed to the vendor neutral and probably easier to understand\n  \"x86-32\" and \"x86-64\". For instance, the \"mp_amd64\" module has been\n  renamed \"mp_x86_64\", and the macro indicating x86-32 has changed\n  from ``BOTAN_TARGET_ARCH_IS_IA32`` to\n  ``BOTAN_TARGET_ARCH_IS_X86_32``. The classes calling assembly have\n  also been renamed.\n\n* Similiarly to the above change, the AES implemenations using the\n  AES-NI instruction set have been renamed from AES_XXX_Intel to\n  AES_XXX_NI.\n\n* Systems that are identified as ``sun4u`` will default to compiling for\n  32-bit SPARCv9 code rather than 64-bit. This matches the still\n  common convention for 32-bit SPARC userspaces. If you want 64-bit\n  code on such as system, use ``--cpu=sparc64``.\n\n* Some minor fixes for compiling botan under the BeOS\n  clone/continuation `Haiku <http://haiku-os.org>`_.\n\n* Further updates to the documentation\n\nVersion 1.9.16, 2011-04-11\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Second release candidate for 1.10.0\n\n* The documentation, previously written in LaTeX, is now in\n  reStructuredText suitable for processing by `Sphinx\n  <http://sphinx.pocoo.org>`_, which can generate nicely formatted\n  HTML and PDFs. The documentation has also been greatly updated and\n  expanded.\n\n* The class ``EC_Domain_Params`` has been renamed ``EC_Group``, with a\n  typedef for backwards compatibility.\n\n* The ``EC_Group`` string constructor didn't understand the standard\n  names like \"secp160r1\", forcing use of the OIDs.\n\n* Two constructors for ECDSA private keys, the one that creates a new\n  random key, and the one that provides a preset private key as a\n  ``BigInt``, have been merged. This matches the existing interface\n  for DSA and DH keys. If you previously used the version taking a\n  ``BigInt`` private key, you'll have to additionally pass in a\n  ``RandomNumberGenerator`` object starting in this release.\n\n* It is now possible to create ECDH keys with a preset ``BigInt``\n  private key; previously no method for this was available.\n\n* The overload of ``generate_passhash9`` that takes an explicit\n  algorithm identifier has been merged with the one that does not.\n  The algorithm identifier code has been moved from the second\n  parameter to the fourth.\n\n* Change shared library versioning to match the normal Unix\n  conventions. Instead of ``libbotan-X.Y.Z.so``, the shared lib is\n  named ``libbotan-X.Y.so.Z``; this allows the runtime linker to do\n  its runtime linky magic. It can be safely presumed that any change\n  in the major or minor version indicates ABI incompatibility.\n\n* Remove the socket wrapper code; it was not actually used by anything\n  in the library, only in the examples, and you can use whatever kind\n  of (blocking) socket interface you like with the SSL/TLS code. It's\n  available as socket.h in the examples directory if you want to use\n  it.\n\n* Disable the by-default 'strong' checking of private keys that are\n  loaded from storage. You can always request key material sanity\n  checking using Private_Key::check_key.\n\n* Bring back removed functions ``min_keylength_of``,\n  ``max_keylength_of``, ``keylength_multiple_of`` in ``lookup.h`` to\n  avoid breaking applications written against 1.8\n\nVersion 1.9.15, 2011-03-21\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* First release candidate for 1.10.0\n\n* Modify how message expansion is done in SHA-256 and SHA-512.\n  Instead of expanding the entire message at the start, compute them\n  in the minimum number of registers. Values are computed 15 rounds\n  before they are needed. On a Core i7-860, GCC 4.5.2, went from 143\n  to 157 MiB/s in SHA-256, and 211 to 256 MiB/s in SHA-512.\n\n* Pipe will delete empty output queues as soon as they are no longer\n  needed, even if earlier messages still have data unread. However an\n  (empty) entry in a deque of pointers will remain until all prior\n  messages are completely emptied.\n\n* Avoid reading the SPARC ``%tick`` register on OpenBSD as unlike the\n  Linux and NetBSD kernels, it will not trap and emulate it for us,\n  causing a illegal instruction crash.\n\n* Improve detection and autoconfiguration for ARM processors. Thanks\n  go out to the the `Tahoe-LAFS Software Foundation\n  <http://tahoe-lafs.org>`_, who donated a Sheevaplug that I'll be\n  using to figure out how to make the cryptographic primitives\n  Tahoe-LAFS relies on faster, particularly targeting the ARMv5TE.\n\nVersion 1.9.14, 2011-03-01\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add support for bcrypt, OpenBSD's password hashing scheme.\n\n* Add support for NIST's AES key wrapping algorithm, as described in\n  :rfc:`3394`. It is available by including ``rfc3394.h``.\n\n* Fix an infinite loop in zlib filters introduced in 1.9.11 (Bugzilla 142)\n\nVersion 1.9.13, 2011-02-19\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nGOST 34.10 signatures were being formatted in a way that was not\ncompatible with other implemenations, and specifically how GOST is\nused in DNSSEC.\n\nThe Keccak hash function was updated to the tweaked variant proposed\nfor round 3 of the NIST hash competition. This version is not\ncompatible with the previous algorithm.\n\nA new option ``--distribution-info`` was added to the configure\nscript. It allows the user building the library to set any\ndistribution-specific notes on the build, which are available as a\nmacro ``BOTAN_DISTRIBUTION_INFO``. The default value is\n'unspecified'. If you are building an unmodified version of botan\n(especially for distribution), and want to indicate to applications\nthat this is the case, consider using\n``--distribution-info=pristine``. If you are making any patches or\nmodifications, it is recommended to use\n``--distribution-info=[Distribution Name] [Version]``, for instance\n'FooNix 1.9.13-r3'.\n\nSome bugs preventing compilation under Clang 2.9 and Sun Studio 12\nwere fixed.\n\nThe DER/BER codecs use ``size_t`` instead of ``u32bit`` for small\nintegers\n\nVersion 1.9.12, 2010-12-13\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add the Keccak hash function\n* Fix compilation problems in Python wrappers\n* Fix compilation problem in OpenSSL engine\n* Update SQLite3 database encryption codec\n\nVersion 1.9.11, 2010-11-29\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* The TLS API has changed substantially and now relies heavily on\n  TR1's ``std::function`` is now required. Additionally, it is\n  required that all callers derive a subclass of TLS_Policy and pass\n  it to a client or server object. Please remember that the TLS\n  interface/API is currently unstable and will very likely change\n  further before TLS is included in a stable release. A handshake\n  failure that occurred when RC4 was negotiated has also been fixed.\n\n* Some possible timing channels in the implementations of Montgomery\n  reduction and the IDEA key schedule were removed. The table-based\n  AES implementation uses smaller tables in the first round to help\n  make some timing/cache attacks harder.\n\n* The library now uses size_t instead of u32bit to represent\n  lengths. Also the interfaces for the memory containers have changed\n  substantially to better match STL container interfaces;\n  MemoryRegion::append, MemoryRegion::destroy, and MemoryRegion::set\n  were all removed, and several other functions, like clear and\n  resize, have changed meaning.\n\n* Update Skein-512 to match the v1.3 specification\n* Fix a number of CRL encoding and decoding bugs\n* Counter mode now always encrypts 256 blocks in parallel\n* Use small tables in the first round of AES\n* Removed AES class: app must choose AES-128, AES-192, or AES-256\n* Add hex encoding/decoding functions that can be used without a Pipe\n* Add base64 encoding functions that can be used without a Pipe\n* Add to_string function to X509_Certificate\n* Add support for dynamic engine loading on Windows\n* Replace BlockCipher::BLOCK_SIZE attribute with function block_size()\n* Replace HashFunction::HASH_BLOCK_SIZE attribute with hash_block_size()\n* Move PBKDF lookup to engine system\n* The IDEA key schedule has been changed to run in constant time\n* Add Algorithm and Key_Length_Specification classes\n* Switch default PKCS #8 encryption algorithm from AES-128 to AES-256\n* Allow using PBKDF2 with empty passphrases\n* Add compile-time deprecation warnings for GCC, Clang, and MSVC\n* Support use of HMAC(SHA-256) and CMAC(Blowfish) in passhash9\n* Improve support for Intel Atom processors\n* Fix compilation problems under Sun Studio and Clang\n\nVersion 1.8.11, 2010-11-02\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fix a number of CRL encoding and decoding bugs\n* When building a debug library under VC++, use the debug runtime\n* Fix compilation under Sun Studio on Linux and Solaris\n* Add several functions for compatibility with 1.9\n* In the examples, read most input files as binary\n* The Perl build script has been removed in this release\n\nVersion 1.8.10, 2010-08-31\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Switch default PKCS #8 encryption algorithm from 3DES to AES-256\n* Increase default hash iterations from 2048 to 10000 in PBES1 and PBES2\n* Use small tables in the first round of AES\n* Add PBKDF typedef and get_pbkdf for better compatibility with 1.9\n* Add version of S2K::derive_key taking salt and iteration count\n* Enable the /proc-walking entropy source on NetBSD\n* Fix the doxygen makefile target\n\nVersion 1.9.10, 2010-08-12\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add a constant-time AES implementation using SSSE3. This code is\n  based on public domain assembly written by `Mike Hamburg\n  <http://crypto.stanford.edu/vpaes/>`_, and described in his CHES\n  2009 paper \"Accelerating AES with Vector Permute Instructions\". In\n  addition to being constant time, it is also significantly faster\n  than the table-based implementation on some processors. The current\n  code has been tested with GCC 4.5, Visual C++ 2008, and Clang 2.8.\n\n* Support for dynamically loading Engine objects at runtime was also\n  added. Currently only system that use ``dlopen``-style dynamic\n  linking are supported.\n\n* On GCC 4.3 and later, use the byteswap intrinsic functions.\n\n* Drop support for building with Python 2.4\n\n* Fix benchmarking of block ciphers in ECB mode\n\n* Consolidate the two x86 assembly engines\n\n* Rename S2K to PBKDF\n\nVersion 1.9.9, 2010-06-28\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nA new pure virtual function has been added to ``Filter``, ``name``\nwhich simply returns some useful identifier for the object. Any\nout-of-tree ``Filter`` implementations will need to be updated.\n\nAdd ``Keyed_Filter::valid_iv_length`` which makes it possible to query\nas to what IV length(s) a particular filter allows. Previously,\npartially because there was no such query mechanism, if a filter did\nnot support IVs at all, then calls to ``set_iv`` would be silently\nignored. Now an exception about the invalid IV length will be thrown.\n\nThe default iteration count for the password based encryption schemes\nhas been increased from 2048 to 10000. This should make\npassword-guessing attacks against private keys encrypted with versions\nafter this release somewhat harder.\n\nNew functions for encoding public and private keys to binary,\n``X509::BER_encode`` and ``PKCS8::BER_encode`` have been added.\n\nProblems compiling under Apple's version of GCC 4.2.1 and on 64-bit\nMIPS systems using GCC 4.4 or later were fixed.\n\nThe coverage of Doxygen documentation comments has significantly\nimproved in this release.\n\nVersion 1.8.9, 2010-06-16\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Use constant time multiplication in IDEA\n\n* Avoid possible timing attack against OAEP decoding\n\n* Add new X509::BER_encode and PKCS8::BER_encode\n\n* Enable DLL builds under Windows\n\n* Add Win32 installer support\n\n* Add support for the Clang compiler\n\n* Fix problem in semcem.h preventing build under Clang or GCC 3.4\n\n* Fix bug that prevented creation of DSA groups under 1024 bits\n\n* Fix crash in GMP_Engine if library is shutdown and reinitialized and\n  a PK algorithm was used after the second init\n\n* Work around problem with recent binutils in x86-64 SHA-1\n\n* The Perl build script is no longer supported and refuses to run by\n  default. If you really want to use it, pass\n  ``--i-know-this-is-broken`` to the script.\n\nVersion 1.9.8, 2010-06-14\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add support for wide multiplications on 64-bit Windows\n* Use constant time multiplication in IDEA\n* Avoid possible timing attack against OAEP decoding\n* Removed FORK-256; rarely used and it has been broken\n* Rename ``--use-boost-python`` to ``--with-boost-python``\n* Skip building shared libraries on MinGW/Cygwin\n* Fix creation of 512 and 768 bit DL groups using the DSA kosherizer\n* Fix compilation on GCC versions before 4.3 (missing cpuid.h)\n* Fix compilation under the Clang compiler\n\nVersion 1.9.7, 2010-04-27\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* TLS: Support reading SSLv2 client hellos\n* TLS: Add support for SEED ciphersuites (RFC 4162)\n* Add Comb4P hash combiner function\n\n* Fix checking of EMSA_Raw signatures with leading 0 bytes, valid\n  signatures could be rejected in certain scenarios.\n\nVersion 1.9.6, 2010-04-09\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* TLS: Add support for TLS v1.1\n* TLS: Support server name indicator extension\n* TLS: Fix server handshake\n* TLS: Fix server using DSA certificates\n* TLS: Avoid timing channel between CBC padding check and MAC verification\n\nVersion 1.9.5, 2010-03-29\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Numerous ECC optimizations\n* Fix GOST 34.10-2001 X.509 key loading\n* Allow PK_Signer's fault protection checks to be toggled off\n* Avoid using pool-based locking allocator if we can't mlock\n* Remove all runtime options\n* New BER_Decoder::{decode_and_check, decode_octet_string_bigint}\n* Remove SecureBuffer in favor of SecureVector length parameter\n* HMAC_RNG: Perform a poll along with user-supplied entropy\n* Fix crash in MemoryRegion if Allocator::get failed\n* Fix small compilation problem on FreeBSD\n\nVersion 1.9.4, 2010-03-09\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add the Ajisai SSLv3/TLSv1.0 implementation\n\n* Add GOST 34.10-2001 public key signature scheme\n* Add SIMD implementation of Noekeon\n\n* Add SSE2 implementation of IDEA\n\n* Extend Salsa20 to support longer IVs (XSalsa20)\n\n* Perform XTS encryption and decryption in parallel where possible\n\n* Perform CBC decryption in parallel where possible\n\n* Add SQLite3 db encryption codec, contributed by Olivier de Gaalon\n\n* Add a block cipher cascade construction\n\n* Add support for password hashing for authentication (passhash9.h)\n\n* Add support for Win32 high resolution system timers\n\n* Major refactoring and API changes in the public key code\n\n* PK_Signer class now verifies all signatures before releasing them to\n  the caller; this should help prevent a wide variety of fault\n  attacks, though it does have the downside of hurting signature\n  performance, particularly for DSA/ECDSA.\n\n* Changed S2K interface: derive_key now takes salt, iteration count\n\n* Remove dependency on TR1 shared_ptr in ECC and CVC code\n\n* Renamed ECKAEG to its more usual name, ECDH\n\n* Fix crash in GMP_Engine if library is shutdown and reinitialized\n\n* Fix an invalid memory read in MD4\n\n* Fix Visual C++ static builds\n\n* Remove Timer class entirely\n\n* Switch default PKCS #8 encryption algorithm from 3DES to AES-128\n\n* New configuration option, ``--gen-amalgamation``, creates a pair of\n  files (``botan_all.cpp`` and ``botan_all.h``) which contain the\n  contents of the library as it would have normally been compiled\n  based on the set configuration.\n\n* Many headers are now explicitly internal-use-only and are not installed\n\n* Greatly improve the Win32 installer\n\n* Several fixes for Visual C++ debug builds\n\nVersion 1.9.3, 2009-11-19\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add new AES implementation using Intel's AES instruction intrinsics\n* Add an implementation of format preserving encryption\n* Allow use of any hash function in X.509 certificate creation\n* Optimizations for MARS, Skipjack, and AES\n* Set macros for available SIMD instructions in build.h\n* Add support for using InnoSetup to package Windows builds\n* By default build a DLL on Windows\n\nVersion 1.8.8, 2009-11-03\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Alter Skein-512 to match the tweaked 1.2 specification\n* Fix use of inline asm for access to x86 bswap function\n* Allow building the library without AES enabled\n* Add 'powerpc64' alias to ppc64 arch for Gentoo ebuild\n\nVersion 1.9.2, 2009-11-03\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add SIMD version of XTEA\n* Support both SSE2 and AltiVec SIMD for Serpent and XTEA\n* Optimizations for SHA-1 and SHA-2\n* Add AltiVec runtime detection\n* Fix x86 CPU identification with Intel C++ and Visual C++\n\nVersion 1.9.1, 2009-10-23\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Better support for Python and Perl wrappers\n* Add an implementation of Blue Midnight Wish (Round 2 tweak version)\n* Modify Skein-512 to match the tweaked 1.2 specification\n* Add threshold secret sharing (draft-mcgrew-tss-02)\n* Add runtime cpu feature detection for x86/x86-64\n* Add code for general runtime self testing for hashes, MACs, and ciphers\n* Optimize XTEA; twice as fast as before on Core2 and Opteron\n* Convert CTR_BE and OFB from filters to stream ciphers\n* New parsing code for SCAN algorithm names\n* Enable SSE2 optimizations under Visual C++\n* Remove all use of C++ exception specifications\n* Add support for GNU/Hurd and Clang/LLVM\n\nVersion 1.8.7, 2009-09-09\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fix processing multiple messages in XTS mode\n* Add --no-autoload option to configure.py, for minimized builds\n\nVersion 1.9.0, 2009-09-09\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add support for parallel invocation of block ciphers where possible\n* Add SSE2 implementation of Serpent\n* Add Rivest's package transform (an all or nothing transform)\n* Minor speedups to the Turing key schedule\n* Fix processing multiple messages in XTS mode\n* Add --no-autoload option to configure.py, for minimized builds\n* The previously used configure.pl script is no longer supported\n\nVersion 1.8.6, 2009-08-13\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add Cryptobox, a set of simple password-based encryption routines\n* Only read world-readable files when walking /proc for entropy\n* Fix building with TR1 disabled\n* Fix x86 bswap support for Visual C++\n* Fixes for compilation under Sun C++\n* Add support for Dragonfly BSD (contributed by Patrick Georgi)\n* Add support for the Open64 C++ compiler\n* Build fixes for MIPS systems running Linux\n* Minor changes to license, now equivalent to the FreeBSD/NetBSD license\n\nVersion 1.8.5, 2009-07-23\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Change configure.py to work on stock Python 2.4\n* Avoid a crash in Skein_512::add_data processing a zero-length input\n* Small build fixes for SPARC, ARM, and HP-PA processors\n* The test suite now returns an error code from main() if any tests failed\n\nVersion 1.8.4, 2009-07-12\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fix a bug in nonce generation in the Miller-Rabin test\n\nVersion 1.8.3, 2009-07-11\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add a new Python configuration script\n* Add the Skein-512 SHA-3 candidate hash function\n* Add the XTS block cipher mode from IEEE P1619\n* Fix random_prime when generating a prime of less than 7 bits\n* Improve handling of low-entropy situations during PRNG seeding\n* Change random device polling to prefer /dev/urandom over /dev/random\n* Use an input insensitive implementation of same_mem instead of memcmp\n* Correct DataSource::discard_next to return the number of discarded bytes\n* Provide a default value for AutoSeeded_RNG::reseed\n* Fix Gentoo bug 272242\n\nVersion 1.8.2, 2009-04-07\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Make entropy polling more flexible and in most cases faster\n* GOST 28147 now supports multiple sbox parameters\n* Added the GOST 34.11 hash function\n* Fix botan-config problems on MacOS X\n\nVersion 1.8.1, 2009-01-20\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Avoid a valgrind warning in es_unix.cpp on 32-bit Linux\n* Fix memory leak in PKCS8 load_key and encrypt_key\n* Relicense api.tex from CC-By-SA 2.5 to BSD\n* Fix botan-config on MacOS X, Solaris\n\nVersion 1.8.0, 2008-12-08\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fix compilation on Solaris with GCC\n\nVersion 1.7.24, 2008-12-01\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fix a compatibility problem with SHA-512/EMSA3 signature padding\n* Fix bug preventing EGD/PRNGD entropy poller from working\n* Fix integer overflow in Pooling_Allocator::get_more_core (bug id #27)\n* Add EMSA3_Raw, a variant of EMSA3 called CKM_RSA_PKCS in PKCS #11\n* Add support for SHA-224 in EMSA2 and EMSA3 PK signature padding schemes\n* Add many more test vectors for RSA with EMSA2, EMSA3, and EMSA4\n* Wrap private structs in SSE2 SHA-1 code in anonymous namespace\n* Change configure.pl's CPU autodetection output to be more consistent\n* Disable using OpenSSL's AES due to crashes of unknown cause\n* Fix warning in /proc walking entropy poller\n* Fix compilation with IBM XLC for Cell 0.9-200709\n\nVersion 1.7.23, 2008-11-23\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Change to use TR1 (thus enabling ECDSA) with GCC and ICC\n* Optimize almost all hash functions, especially MD4 and Tiger\n* Add configure.pl options --{with,without}-{bzip2,zlib,openssl,gnump}\n* Change Timer to be pure virtual, and add ANSI_Clock_Timer\n* Cache socket descriptors in the EGD entropy source\n* Avoid bogging down startup in /proc walking entropy source\n* Remove Buffered_EntropySource helper class\n* Add a Default_Benchmark_Timer typedef in benchmark.h\n* Add examples using benchmark.h and Algorithm_Factory\n* Add ECC tests from InSiTo\n* Minor documentation updates\n\nVersion 1.7.22, 2008-11-17\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add provider preferences to Algorithm_Factory\n* Fix memory leaks in PBE_PKCS5v20 and get_pbe introduced in 1.7.21\n* Optimize AES encryption and decryption (about 10% faster)\n* Enable SSE2 optimized SHA-1 implementation on Intel Prescott CPUs\n* Fix nanoseconds overflow in benchmark code\n* Remove Engine::add_engine\n\nVersion 1.7.21, 2008-11-11\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Make algorithm lookup much more configuable\n* Add facilities for runtime performance testing of algorithms\n* Drop use of entropy estimation in the PRNGs\n* Increase intervals between HMAC_RNG automatic reseeding\n* Drop InitializerOptions class, all options but thread safety\n\nVersion 1.7.20, 2008-11-09\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Namespace pkg-config file by major and minor versions\n* Cache device descriptors in Device_EntropySource\n* Split base.h into {block_cipher,stream_cipher,mac,hash}.h\n* Removed get_mgf function from lookup.h\n\nVersion 1.7.19, 2008-11-06\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add HMAC_RNG, based on a design by Hugo Krawczyk\n* Optimized the Turing stream cipher (about 20% faster on x86-64)\n* Modify Randpool's reseeding algorithm to poll more sources\n* Add a new AutoSeeded_RNG in auto_rng.h\n* OpenPGP_S2K changed to take hash object instead of name\n* Add automatic identification for Intel's Prescott processors\n\nVersion 1.7.18, 2008-10-22\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add Doxygen comments from InSiTo\n* Add ECDSA and ECKAEG benchmarks\n* Add configure.pl switch --with-tr1-implementation\n* Fix configure.pl's --with-endian and --with-unaligned-mem options\n* Added support for pkg-config\n* Optimize byteswap with x86 inline asm for Visual C++ by Yves Jerschow\n* Use const references to avoid copying overhead in CurveGFp, GFpModulus\n\nVersion 1.7.17, 2008-10-12\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add missing ECDSA object identifiers\n* Fix error in x86 and x86-64 assembler affecting GF(p) math\n* Remove Boost dependency from GF(p) math\n* Modify botan-config to not print -L/usr/lib or -L/usr/local/lib\n* Add BOTAN_DLL macro to over 30 classes missing it\n* Rename the two SHA-2 base classes for consistency\n\nVersion 1.7.16, 2008-10-09\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add several missing pieces needed for ECDSA and ECKAEG\n* Add Card Verifiable Certificates from InSiTo\n* Add SHA-224 from InSiTo\n* Add BSI variant of EMSA1 from InSiTo\n* Add GF(p) and ECDSA tests from InSiTo\n* Split ECDSA and ECKAEG into distinct modules\n* Allow OpenSSL and GNU MP engines to be built with public key algos disabled\n* Rename sha256.h to sha2_32.h and sha_64.h to sha2_64.h\n\nVersion 1.7.15, 2008-10-07\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add GF(p) arithmetic from InSiTo\n* Add ECDSA and ECKAEG implementations from InSiTo\n* Minimize internal dependencies, allowing for smaller build configurations\n* Add new User Manual and Architecture Guide from FlexSecure GmbH\n* Alter configure.pl options for better autotools compatibility\n* Update build instructions for recent changes to configure.pl\n* Fix CPU detection using /proc/cpuinfo\n\nVersion 1.7.14, 2008-09-30\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Split library into parts allowing modular builds\n* Add (very preliminary) CMS support to the main library\n* Some constructors now require object pointers instead of names\n* Support multiple implementations of the same algorithm\n* Build support for Pentium-M processors, from Derek Scherger\n* Build support for MinGW/MSYS, from Zbigniew Zagorski\n* Use inline assembly for bswap on 32-bit x86\n\nVersion 1.7.13, 2008-09-27\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add SSLv3 MAC, SSLv3 PRF, and TLS v1.0 PRF from Ajisai\n* Allow all examples to compile even if compression not enabled\n* Make CMAC's polynomial doubling operation a public class method\n* Use the -m64 flag when compiling with Sun Forte on x86-64\n* Clean up and slightly optimize CMAC::final_result\n\nVersion 1.7.12, 2008-09-18\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add x86 assembly for Visual Studio C++, by Luca Piccarreta\n* Add a Perl XS module, by Vaclav Ovsik\n* Add SWIG-based wrapper for Botan\n* Add SSE2 implementation of SHA-1, by Dean Gaudet\n* Remove the BigInt::sig_words cache due to bugs\n* Combined the 4 Blowfish sboxes, suggested by Yves Jerschow\n* Changed BigInt::grow_by and BigInt::grow_to to be non-const\n* Add private assignment operators to classes that don't support assignment\n* Benchmark RSA encryption and signatures\n* Added test programs for random_prime and ressol\n* Add high resolution timers for IA-64, HP-PA, S390x\n* Reduce use of the RNG during benchmarks\n* Fix builds on STI Cell PPU\n* Add support for IBM's XLC compiler\n* Add IETF 8192 bit MODP group\n\nVersion 1.7.11, 2008-09-11\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added the Salsa20 stream cipher\n* Optimized Montgomery reduction, Karatsuba squaring\n* Added 16x16->32 word Comba multiplication and squaring\n* Use a much larger Karatsuba cutoff point\n* Remove bigint_mul_add_words\n* Inlined several BigInt functions\n* Add useful information to the generated build.h\n* Rename alg_{ia32,amd64} modules to asm_{ia32,amd64}\n* Fix the Windows build\n\nVersion 1.7.10, 2008-09-05\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Public key benchmarks run using a selection of random keys\n* New benchmark timer options are clock_gettime, gettimeofday, times, clock\n* Including reinterpret_cast optimization for xor_buf in default header\n* Split byte swapping and word rotation functions into distinct headers\n* Add IETF modp 6144 group and 2048 and 3072 bit DSS groups\n* Optimizes BigInt right shift\n* Add aliases in DL_Group::Format enum\n* BigInt now caches the significant word count\n\nVersion 1.6.5, 2008-08-27\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add noexec stack marker for GNU linker in assembly code\n* Fix autoconfiguration problem on x86 with GCC 4.2 and 4.3\n\nVersion 1.7.9, 2008-08-27\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Make clear() in most algorithm base classes a pure virtual\n* Add noexec stack marker for GNU linker in assembly code\n* Avoid string operations in ressol\n* Compilation fixes for MinGW and Visual Studio C++ 2008\n* Some autoconfiguration fixes for Windows\n\nVersion 1.7.8, 2008-07-15\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added the block cipher Noekeon\n* Remove global deref_alias function\n* X509_Store takes timeout options as constructor arguments\n* Add Shanks-Tonelli algorithm, contributed by FlexSecure GmbH\n* Extend random_prime() for generating primes of any bit length\n* Remove Config class\n* Allow adding new entropy via base RNG interface\n* Reseeding a X9.31 PRNG also reseeds the underlying PRNG\n\nVersion 1.7.7, 2008-06-28\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Remove the global PRNG object\n* The PK filter objects were removed\n* Add a test suite for the ANSI X9.31 PRNG\n* Much cleaner and (mostly) thread-safe reimplementation of es_ftw\n* Remove both default arguments to ANSI_X931_RNG's constructor\n* Remove the randomizing version of OctetString::change\n* Make the cipher and MAC to use in Randpool configurable\n* Move RandomNumberGenerator declaration to rng.h\n* RSA_PrivateKey will not generate keys smaller than 1024 bits\n* Fix an error decoding BER UNIVERSAL types with special taggings\n\nVersion 1.7.6, 2008-05-05\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Initial support for Windows DLLs, from Joel Low\n* Reset the position pointer when a new block is generated in X9.32 PRNG\n* Timer objects are now treated as entropy sources\n* Moved several ASN.1-related enums from enums.h to an appropriate header\n* Removed the AEP module, due to inability to test\n* Removed Global_RNG and rng.h\n* Removed system_clock\n* Removed Library_State::UI and the pulse callback logic\n\nVersion 1.7.5, 2008-04-12\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* The API of X509_CA::sign_request was altered to avoid race conditions\n* New type Pipe::message_id to represent the Pipe message number\n* Remove the Named_Mutex_Holder for a small performance gain\n* Removed several unused or rarely used functions from Config\n* Ignore spaces inside of a decimal string in BigInt::decode\n* Allow using a std::istream to initialize a DataSource_Stream object\n* Fix compilation problem in zlib compression module\n* The chunk sized used by Pooling_Allocator is now a compile time setting\n* The size of random blinding factors is now a compile time setting\n* The install target no longer tries to set a particular owner/group\n\nVersion 1.7.4, 2008-03-10\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Use unaligned memory read/writes on systems that allow it, for performance\n* Assembly for x86-64 for accessing the bswap instruction\n* Use larger buffers in ARC4 and WiderWAKE for significant throughput increase\n* Unroll loops in SHA-160 for a few percent increase in performance\n* Fix compilation with GCC 3.2 in es_ftw and es_unix\n* Build fix for NetBSD systems\n* Prevent es_dev from being built except on Unix systems\n\nVersion 1.6.4, 2008-03-08\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fix a compilation problem with Visual Studio C++ 2003\n\nVersion 1.7.3, 2008-01-23\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* New invocation syntax for configure.pl with several new options\n* Support for IPv4 addresses in a subject alternative name\n* New fast poll for the generic Unix entropy source (es_unix)\n* The es_file entropy source has been replaced by the es_dev module\n* The malloc allocator does not inherit from Pooling_Allocator anymore\n* The path that es_unix will search in are now fully user-configurable\n* Truncate X9.42 PRF output rather than allow counter overflow\n* PowerPC is now assumed to be big-endian\n\nVersion 1.7.2, 2007-10-13\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Initialize the global library state lazily\n* Add plain CBC-MAC for backwards compatibility with old systems\n* Clean up some of the self test code\n* Throw a sensible exception if a DL_Group is not found\n* Truncate KDF2 output rather than allowing counter overflow\n* Add newly assigned OIDs for SHA-2 and DSA with SHA-224/256\n* Fix a Visual Studio compilation problem in x509stat.cpp\n\nVersion 1.6.3, 2007-07-23\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fix a race condition in the algorithm lookup cache\n* Fix problems building the memory pool on some versions of Visual C++\n\nVersion 1.7.1, 2007-07-23\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fix a race condition in the algorithm object cache\n* HMAC key schedule optimization\n* The build header sets a macro defining endianness, if known\n* New word load/store abstraction allowing further optimization\n* Modify most of the library to avoid use the C-style casts\n* Use higher resolution timers in symmetric benchmarks\n\nVersion 1.7.0, 2007-05-19\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* DSA parameter generation now follows FIPS 186-3\n* Added OIDs for Rabin-Williams and Nyberg-Rueppel\n* Somewhat better support for out of tree builds\n* Minor optimizations for RC2 and Tiger\n* Documentation updates\n* Update the todo list\n\nVersion 1.6.2, 2007-03-24\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fix autodection on Athlon64s running Linux\n* Fix builds on QNX and compilers using STLport\n* Remove a call to abort() that crept into production\n\nVersion 1.6.1, 2007-01-20\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fix some base64 decoder bugs\n* Add a new option to base64 encoding, to always append a newline\n* Fix some build problems under Visual Studio with debug enabled\n* Fix a bug in BER_Decoder that was triggered under some compilers\n\nVersion 1.6.0, 2006-12-17\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Minor cleanups versus 1.5.13\n\nVersion 1.5.13, 2006-12-10\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Compilation fixes for the bzip2, zlib, and GNU MP modules\n* Better support for Intel C++ and EKOpath C++ on x86-64\n\nVersion 1.5.12, 2006-10-27\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Cleanups in the initialization routines\n* Add some x86-64 assembly for multiply-add\n* Fix problems generating very small (below 384 bit) RSA keys\n* Support out of tree builds\n* Bring some of the documentation up to date\n* More improvements to the Python bindings\n\nVersion 1.5.11, 2006-09-10\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Removed the Algorithm base class\n* Various cleanups in the public key inheritance hierarchy\n* Major overhaul of the configure/build setup\n* Added x86 assembler implementations of Serpent and low-level MPI code\n* Optimizations for the SHA-1 x86 assembler\n* Various improvements to the Python wrappers\n* Work around a Visual Studio compiler bug\n\nVersion 1.5.10, 2006-08-13\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add x86 assembler versions of MD4, MD5, and SHA-1\n* Expand InitializerOptions' language to support on/off switches\n* Fix definition of OID 2.5.4.8; was accidentally changed in 1.5.9\n* Fix possible resource leaks in the mmap allocator\n* Slightly optimized buffering in MDx_HashFunction\n* Initialization failures are dealt with somewhat better\n* Add an example implementing Pollard's Rho algorithm\n* Better option handling in the test/benchmark tool\n* Expand the xor_ciph example to support longer keys\n* Some updates to the documentation\n\nVersion 1.5.9, 2006-07-12\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed bitrot in the AEP engine\n* Fix support for marking certificate/CRL extensions as critical\n* Significant cleanups in the library state / initialization code\n* LibraryInitializer takes an explicit InitializerOptions object\n* Make Mutex_Factory an abstract class, add Default_Mutex_Factory\n* Change configuration access to using global_state()\n* Add support for global named mutexes throughout the library\n* Add some STL wrappers for the delete operator\n* Change how certificates are created to be more flexible and general\n\nVersion 1.5.8, 2006-06-23\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Many internal cleanups to the X.509 cert/CRL code\n* Allow for application code to support new X.509 extensions\n* Change the return type of X509_Certificate::{subject,issuer}_info\n* Allow for alternate character set handling mechanisms\n* Fix a bug that was slowing squaring performance somewhat\n* Fix a very hard to hit overflow bug in the C version of word3_muladd\n* Minor cleanups to the assembler modules\n* Disable es_unix module on FreeBSD due to build problem on FreeBSD 6.1\n* Support for GCC 2.95.x has been dropped in this release\n\nVersion 1.5.7, 2006-05-28\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Further, major changes to the BER/DER coding system\n* Updated the Qt mutex module to use Mutex_Factory\n* Moved the library global state object into an anonymous namespace\n* Drop the Visual C++ x86 assembly module due to bugs\n\nVersion 1.5.6, 2006-03-01\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* The low-level DER/BER coding system was redesigned and rewritten\n* Portions of the certificate code were cleaned up internally\n* Use macros to substantially clean up the GCC assembly code\n* Added 32-bit x86 assembly for Visual C++ (by Luca Piccarreta)\n* Avoid a couple of spurious warnings under Visual C++\n* Some slight cleanups in X509_PublicKey::key_id\n\nVersion 1.5.5, 2006-02-04\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed a potential infinite loop in the memory pool code (Matt Johnston)\n* Made Pooling_Allocator::Memory_Block an actual class of sorts\n* Some small optimizations to the division and modulo computations\n* Cleaned up the implementation of some of the BigInt operators\n* Reduced use of dynamic memory allocation in low-level BigInt functions\n* A few simplifications in the Randpool mixing function\n* Removed power(), as it was not particularly useful (or fast)\n* Fixed some annoying bugs in the benchmark code\n* Added a real credits file\n\nVersion 1.5.4, 2006-01-29\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Integrated x86 and amd64 assembly code, contributed by Luca Piccarreta\n* Fixed a memory access off-by-one in the Karatsuba code\n* Changed Pooling_Allocator's free list search to a log(N) algorithm\n* Merged ModularReducer with its only subclass, Barrett_Reducer\n* Fixed sign-handling bugs in some of the division and modulo code\n* Renamed the module description files to modinfo.txt\n* Further cleanups in the initialization code\n* Removed BigInt::add and BigInt::sub\n* Merged all the division-related functions into just divide()\n* Modified the <mp_asmi.h> functions to allow for better optimizations\n* Made the number of bits polled from an EntropySource user configurable\n* Avoid including <algorithm> in <botan/secmem.h>\n* Fixed some build problems with Sun Forte\n* Removed some dead code from bigint_modop\n* Fix the definition of same_mem\n\nVersion 1.5.3, 2006-01-24\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Many optimizations in the low-level multiple precision integer code\n* Added hooks for assembly implementations of the MPI code\n* Support for the X.509 issuer alternative name extension in new certs\n* Fixed a bug in the decompression modules; found and patched by Matt Johnston\n* New Windows mutex module (mux_win32), by Luca Piccarreta\n* Changed the Windows timer module to use QueryPerformanceCounter\n* mem_pool.cpp was using std::set iterators instead of std::multiset ones\n* Fixed a bug in X509_CA preventing users from disabling particular extensions\n* Fixed the mp_asm64 module, which was entirely broken in 1.5.2\n* Fixed some module build problems on FreeBSD and Tru64\n\nVersion 1.4.12, 2006-01-15\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed an off-by-one memory read in MISTY1::key()\n* Fixed a nasty memory leak in Output_Buffers::retire()\n* Changed maximum HMAC keylength to 1024 bits\n* Fixed a build problem in the hardware timer module on 64-bit PowerPC\n\nVersion 1.5.2, 2006-01-15\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed an off-by-one memory read in MISTY1::key()\n* Fixed a nasty memory leak in Output_Buffers::retire()\n* Reimplemented the memory allocator from scratch\n* Improved memory caching in Montgomery exponentiation\n* Optimizations for multiple precision addition and subtraction\n* Fixed a build problem in the hardware timer module on 64-bit PowerPC\n* Changed default Karatsuba cutoff to 12 words (was 14)\n* Removed MemoryRegion::bits(), which was unused and incorrect\n* Changed maximum HMAC keylength to 1024 bits\n* Various minor Makefile and build system changes\n* Avoid using std::min in <secmem.h> to bypass Windows libc macro pollution\n* Switched checks/clock.cpp back to using clock() by default\n* Enabled the symmetric algorithm tests, which were accidentally off in 1.5.1\n* Removed the Default_Mutex's unused clone() member function\n\nVersion 1.5.1, 2006-01-08\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Implemented Montgomery exponentiation\n* Implemented generalized Karatsuba multiplication and squaring\n* Implemented Comba squaring for 4, 6, and 8 word inputs\n* Added new Modular_Exponentiator and Power_Mod classes\n* Removed FixedBase_Exp and FixedExponent_Exp\n* Fixed a performance regression in get_allocator introduced in 1.5.0\n* Engines can now offer S2K algorithms and block cipher padding methods\n* Merged the remaining global 'algolist' code into Default_Engine\n* The low-level MPI code is linked as C again\n* Replaced BigInt's get_nibble with the more general get_substring\n* Some documentation updates\n\nVersion 1.5.0, 2006-01-01\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Moved all global/shared library state into a single object\n* Mutex objects are created through mutex factories instead of a global\n* Removed ::get_mutex(), ::initialize_mutex(), and Mutex::clone()\n* Removed the RNG_Quality enum entirely\n* There is now only a single global-use PRNG\n* Removed the no_aliases and no_oids options for LibraryInitializer\n* Removed the deprecated algorithms SEAL, ISAAC, and HAVAL\n* Change es_ftw to use unbuffered I/O\n\nVersion 1.4.11, 2005-12-31\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Changed Whirlpool diffusion matrix to match updated algorithm spec\n* Fixed several engine module build errors introduced in 1.4.10\n* Fixed two build problems in es_capi; reported by Matthew Gregan\n* Added a constructor to DataSource_Memory taking a std::string\n* Placing the same Filter in multiple Pipes triggers an exception\n* The configure script accepts --docdir and --libdir\n* Merged doc/rngs.txt into the main API document\n* Thanks to Joel Low for several bug reports on early tarballs of 1.4.11\n\nVersion 1.4.10, 2005-12-18\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added an implementation of KASUMI, the block cipher used in 3G phones\n* Refactored Pipe; output queues are now managed by a distinct class\n* Made certain Filter facilities only available to subclasses of Fanout_Filter\n* There is no longer any overhead in Pipe for a message that has been read out\n* It is now possible to generate RSA keys as small as 128 bits\n* Changed some of the core classes to derive from Algorithm as a virtual base\n* Changed Randpool to use HMAC instead of a plain hash as the mixing function\n* Fixed a bug in the allocators; found and fixed by Matthew Gregan\n* Enabled the use of binary file I/O, when requested by the application\n* The OpenSSL engine's block cipher code was missing some deallocation calls\n* Disabled the es_ftw module on NetBSD, due to header problems there\n* Fixed a problem preventing tm_hard from building on MacOS X on PowerPC\n* Some cleanups for the modules that use inline assembler\n* config.h is now stored in build/ instead of build/include/botan/\n* The header util.h was split into bit_ops.h, parsing.h, and util.h\n* Cleaned up some redundant include directives\n\nVersion 1.4.9, 2005-11-06\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added the IBM-created AES candidate algorithm MARS\n* Added the South Korean block cipher SEED\n* Added the stream cipher Turing\n* Added the new hash function FORK-256\n* Deprecated the ISAAC stream cipher\n* Twofish and RC6 are significantly faster with GCC\n* Much better support for 64-bit PowerPC\n* Added support for high-resolution PowerPC timers\n* Fixed a bug in the configure script causing problems on FreeBSD\n* Changed ANSI X9.31 to support arbitrary block ciphers\n* Make the configure script a bit less noisy\n* Added more test vectors for some algorithms, including all the AES finalists\n* Various cosmetic source code cleanups\n\nVersion 1.4.8, 2005-10-16\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Resolved a bad performance problem in the allocators; fix by Matt Johnston\n* Worked around a Visual Studio 2003 compilation problem introduced in 1.4.7\n* Renamed OMAC to CMAC to match the official NIST naming\n* Added single byte versions of update() to PK_Signer and PK_Verifier\n* Removed the unused reverse_bits and reverse_bytes functions\n\nVersion 1.4.7, 2005-09-25\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed major performance problems with recent versions of GNU C++\n* Added an implementation of the X9.31 PRNG\n* Removed the X9.17 and FIPS 186-2 PRNG algorithms\n* Changed defaults to use X9.31 PRNGs as global PRNG objects\n* Documentation updates to reflect the PRNG changes\n* Some cleanups related to the engine code\n* Removed two useless headers, base_eng.h and secalloc.h\n* Removed PK_Verifier::valid_signature\n* Fixed configure/build system bugs affecting MacOS X builds\n* Added support for the EKOPath x86-64 compiler\n* Added missing destructor for BlockCipherModePaddingMethod\n* Fix some build problems with Visual C++ 2005 beta\n* Fix some build problems with Visual C++ 2003 Workshop\n\nVersion 1.4.6, 2005-03-13\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fix an error in the shutdown code introduced in 1.4.5\n* Setting base/pkcs8_tries to 0 disables the builtin fail-out\n* Support for XMPP identifiers in X.509 certificates\n* Duplicate entries in X.509 DNs are removed\n* More fixes for Borland C++, from Friedemann Kleint\n* Add a workaround for buggy iostreams\n\nVersion 1.4.5, 2005-02-26\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add support for AES encryption of private keys\n* Minor fixes for PBES2 parameter decoding\n* Internal cleanups for global state variables\n* GCC 3.x version detection was broken in non-English locales\n* Work around a Sun Forte bug affecting mem_pool.h\n* Several fixes for Borland C++ 5.5, from Friedemann Kleint\n* Removed inclusion of init.h into base.h\n* Fixed a major bug in reading from certificate stores\n* Cleaned up a couple of mutex leaks\n* Removed some left-over debugging code\n* Removed SSL3_MAC, SSL3_PRF, and TLS_PRF\n\nVersion 1.4.4, 2004-12-02\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Further tweaks to the pooling allocator\n* Modified EMSA3 to support SSL/TLS signatures\n* Changes to support Qt/QCA, from Justin Karneges\n* Moved mux_qt module code into mod_qt\n* Fixes for HP-UX from Mike Desjardins\n\nVersion 1.4.3, 2004-11-06\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Split up SecureAllocator into Allocator and Pooling_Allocator\n* Memory locking allocators are more likely to be used\n* Fixed the placement of includes in some modules\n* Fixed broken installation procedure\n* Fixes in configure script to support alternate install programs\n* Modules can specify the minimum version they support\n\nVersion 1.4.2, 2004-10-31\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed a major CRL handling bug\n* Cipher and hash operations can be offloaded to engines\n* Added support for cipher and hash offload in OpenSSL engine\n* Improvements for 64-bit CPUs without a widening multiply instruction\n* Support for SHA2-* and Whirlpool with EMSA2\n* Fixed a long-standing build problem with conflicting include files\n* Fixed some examples that hadn't been updated for 1.4.x\n* Portability fixes for Solaris, BSD, HP-UX, and others\n* Lots of fixes and cleanups in the configure script\n* Updated the Gentoo ebuild file\n\nVersion 1.4.1, 2004-10-10\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed major errors in the X.509 and PKCS #8 copy_key functions\n* Added a LAST_MESSAGE meta-message number for Pipe\n* Added new aliases (3DES and DES-EDE) for Triple-DES\n* Added some new functions to PK_Verifier\n* Cleaned up the KDF interface\n* Disabled tm_posix on BSD due to header issues\n* Fixed a build problem on PowerPC with GNU C++ pre-3.4\n\nVersion 1.4.0, 2004-06-26\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added the FIPS 186 RNG back\n* Added copy_key functions for X.509 public keys and PKCS #8 private keys\n* Fixed PKCS #1 signatures with RIPEMD-128\n* Moved some code around to avoid warnings with Sun ONE compiler\n* Fixed a bug in botan-config affecting OpenBSD\n* Fixed some build problems on Tru64, HP-UX\n* Fixed compile problems with Intel C++, Compaq C++\n\nVersion 1.3.14, 2004-06-12\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added support for AEP's AEP1000/AEP2000 crypto cards\n* Added a Mutex module using Qt, from Justin Karneges\n* Added support for engine loading in LibraryInitializer\n* Tweaked SecureAllocator, giving 20% better performance under heavy load\n* Added timer and memory locking modules for Win32 (tm_win32, ml_win32)\n* Renamed PK_Engine to Engine_Core\n* Improved the Karatsuba cutoff points\n* Fixes for compiling with GCC 3.4 and Sun C++ 5.5\n* Fixes for Linux/s390, OpenBSD, and Solaris\n* Added support for Linux/s390x\n* The configure script was totally broken for 'generic' OS\n* Removed Montgomery reduction due to bugs\n* Removed an unused header, pkcs8alg.h\n* check --validate returns an error code if any tests failed\n* Removed duplicate entry in Unix command list for es_unix\n* Moved the Cert_Usage enumeration into X509_Store\n* Added new timing methods for PK benchmarks, clock_gettime and RDTSC\n* Fixed a few minor bugs in the configure script\n* Removed some deprecated functions from x509cert.h and pkcs10.h\n* Removed the 'minimal' module, has to be updated for Engine support\n* Changed MP_WORD_BITS macro to BOTAN_MP_WORD_BITS to clean up namespace\n* Documentation updates\n\nVersion 1.3.13, 2004-05-15\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Major fixes for Cygwin builds\n* Minor MacOS X install fixes\n* The configure script is a little better at picking the right modules\n* Removed ml_unix from the 'unix' module set for Cygwin compatibility\n* Fixed a stupid compile problem in pkcs10.h\n\nVersion 1.3.12, 2004-05-02\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added ability to remove old entries from CRLs\n* Swapped the first two arguments of X509_CA::update_crl()\n* Added an < operator for MemoryRegion, so it can be used as a std::map key\n* Changed X.509 searching by DNS name from substring to full string compares\n* Renamed a few X509_Certificate and PKCS10_Request member functions\n* Fixed a problem when decoding some PKCS #10 requests\n* Hex_Decoder would not check inputs, reported by Vaclav Ovsik\n* Changed default CRL expire time from 30 days to 7 days\n* X509_CRL's default PEM header is now \"X509 CRL\", for OpenSSL compatibility\n* Corrected errors in the API doc, fixes from Ken Perano\n* More documentation about the Pipe/Filter code\n\nVersion 1.3.11, 2004-04-01\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed two show-stopping bugs in PKCS10_Request\n* Added some sanity checks in Pipe/Filter\n* The DNS and URI entries would get swapped in subjectAlternativeNames\n* MAC_Filter is now willing to not take a key at creation time\n* Setting the expiration times of certs and CRLs is more flexible\n* Fixed problems building on AIX with GCC\n* Fixed some problems in the tutorial pointed out by Dominik Vogt\n* Documentation updates\n\nVersion 1.3.10, 2004-03-27\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added support for OpenPGP's ASCII armor format\n* Cleaned up the RNG system; seeding is much more flexible\n* Added simple autoconfiguration abilities to configure.pl\n* Fixed a GCC 2.95.x compile problem\n* Updated the example configuration file\n* Documentation updates\n\nVersion 1.3.9, 2004-03-07\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added an engine using OpenSSL (requires 0.9.7 or later)\n* X509_Certificate would lose email addresses stored in the DN\n* Fixed a missing initialization in a BigInt constructor\n* Fixed several Visual C++ compile problems\n* Fixed some BeOS build problems\n* Fixed the WiderWake benchmark\n\nVersion 1.3.8, 2003-12-30\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Initial introduction of engine support, which separates PK keys from\n  the underlying operations. An engine using GNU MP was added.\n\n* DSA, DH, NR, and ElGamal constructors accept taking just the private\n  key again since the public key is easily derived from it.\n\n* Montgomery reduction support was added.\n* ElGamal keys now support being imported/exported as ASN.1 objects\n* Added Montgomery reductions\n* Added an engine that uses GNU MP (requires 4.1 or later)\n* Removed the obsolete mp_gmp module\n* Moved several initialization/shutdown functions to init.h\n* Major refactoring of the memory containers\n* New non-locking container, MemoryVector\n* Fixed 64-bit problems in BigInt::set_bit/clear_bit\n* Renamed PK_Key::check_params() to check_key()\n* Some incompatible changes to OctetString\n* Added version checking macros in version.h\n* Removed the fips140 module pending rewrite\n* Added some functions and hooks to help GUIs\n* Moved more shared code into MDx_HashFunction\n* Added a policy hook for specifying the encoding of X.509 strings\n\nVersion 1.3.7, 2003-12-12\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed a big security problem in es_unix (use of untrusted PATH)\n* Fixed several stability problems in es_unix\n* Expanded the list of programs es_unix will try to use\n* SecureAllocator now only preallocates blocks in special cases\n* Added a special case in Global_RNG::seed for forcing a full poll\n* Removed the FIPS 186 RNG added in 1.3.5 pending further testing\n* Configure updates for PowerPC CPUs\n* Removed the (never tested) VAX support\n* Added support for S/390 Linux\n\nVersion 1.3.6, 2003-12-07\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added a new module 'minimal', which disables most algorithms\n* SecureAllocator allocates a few blocks at startup\n* A few minor MPI cleanups\n* RPM spec file cleanups and fixes\n\nVersion 1.3.5, 2003-11-30\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Major improvements in ASN.1 string handling\n* Added partial support for ASN.1 UTF8 STRINGs and BMP STRINGs\n* Added partial support for the X.509v3 certificate policies extension\n* Centralized the handling of character set information\n* Added FIPS 140-2 startup self tests\n* Added a module (fips140) for doing extra FIPS 140-2 tests\n* Added FIPS 186-2 RNG\n* Improved ASN.1 BIT STRING handling\n* Removed a memory leak in PKCS10_Request\n* The encoding of DirectoryString now follows PKIX guidelines\n* Fixed some of the character set dependencies\n* Fixed a DER encoding error for tags greater than 30\n* The BER decoder can now handle tags larger than 30\n* Fixed tm_hard.cpp to recognize SPARC on more systems\n* Workarounds for a GCC 2.95.x bug in x509find.cpp\n* RPM changed to install into /usr instead of /usr/local\n* Added support for QNX\n\nVersion 1.2.8, 2003-11-21\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Merged several important bug fixes from 1.3.x\n\nVersion 1.3.4, 2003-11-21\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added a module that does certain MPI operations using GNU MP\n* Added the X9.42 Diffie-Hellman PRF\n* The Zlib and Bzip2 objects now use custom allocators\n* Added member functions for directly hashing/MACing SecureVectors\n* Minor optimizations to the MPI addition and subtraction algorithms\n* Some cleanups in the low-level MPI code\n* Created separate AES-{128,192,256} objects\n\nVersion 1.3.3, 2003-11-17\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* The library can now be repeatedly initialized and shutdown without crashing\n* Fixed an off-by-one error in the CTS code\n* Fixed an error in the EMSA4 verification code\n* Fixed a memory leak in mutex.cpp (pointed out by James Widener)\n* Fixed a memory leak in Pthread_Mutex\n* Fixed several memory leaks in the testing code\n* Bulletproofed the EMSA/EME/KDF/MGF retrieval functions\n* Minor cleanups in SecureAllocator\n* Removed a needless mutex guarding the (stateless) global timer\n* Fixed a piece of bash-specific code in botan-config\n* X.509 objects report more information about decoding errors\n* Cleaned up some of the exception handling\n* Updated the example config file with new OIDSs\n* Moved the build instructions into a separate document, building.tex\n\nVersion 1.3.2, 2003-11-13\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed a bug preventing DSA signatures from verifying on X.509 objects\n* Made the X509_Store search routines more efficient and flexible\n* Added a function to X509_PublicKey to do easy public/private key matching\n* Added support for decoding indefinite length BER data\n* Changed Pipe's peek() to take an offset\n* Removed Filter::set_owns in favor of the new incr_owns function\n* Removed BigInt::zero() and BigInt::one()\n* Renamed the PEM related options from base/pem_* to pem/*\n* Added an option to specify the line width when encoding PEM\n* Removed the \"rng/safe_longterm\" option; it's always on now\n* Changed the cipher used for RNG super-encryption from ARC4 to WiderWake4+1\n* Cleaned up the base64/hex encoders and decoders\n* Added an ASN.1/BER decoder as an example\n* AES had its internals marked 'public' in previous versions\n* Changed the value of the ASN.1 NO_OBJECT enum\n* Various new hacks in the configure script\n* Removed the already nominal support for SunOS\n\nVersion 1.3.1, 2003-11-04\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Generalized a few pieces of the DER encoder\n* PKCS8::load_key would fail if handed an unencrypted key\n* Added a failsafe so PKCS #8 key decoding can't go into an infinite loop\n\nVersion 1.3.0, 2003-11-02\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Major redesign of the PKCS #8 private key import/export system\n* Added a small amount of UI interface code for getting passphrases\n* Added heuristics that tell if a key, cert, etc is stored as PEM or BER\n* Removed CS-Cipher, SHARK, ThreeWay, MD5-MAC, and EMAC\n* Removed certain deprecated constructors of RSA, DSA, DH, RW, NR\n* Made PEM decoding more forgiving of extra text before the header\n\nVersion 1.2.7, 2003-10-31\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added support for reading configuration files\n* Added constructors so NR and RW keys can be imported easily\n* Fixed mp_asm64, which was completely broken in 1.2.6\n* Removed tm_hw_ia32 module; replaced by tm_hard\n* Added support for loading certain oddly formed RSA certificates\n* Fixed spelling of NON_REPUDIATION enum\n* Renamed the option default_to_ca to v1_assume_ca\n* Fixed a minor bug in X.509 certificate generation\n* Fixed a latent bug in the OID lookup code\n* Updated the RPM spec file\n* Added to the tutorial\n\nVersion 1.2.6, 2003-07-04\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Major performance increase for PK algorithms on most 64-bit systems\n* Cleanups in the low-level MPI code to support asm implementations\n* Fixed build problems with some versions of Compaq's C++ compiler\n* Removed useless constructors for NR public and private keys\n* Removed support for the patch_file directive in module files\n* Removed several deprecated functions\n\nVersion 1.2.5, 2003-06-22\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed a tricky and long-standing memory leak in Pipe\n* Major cleanups and fixes in the memory allocation system\n* Removed alloc_mlock, which has been superseded by the ml_unix module\n* Removed a denial of service vulnerability in X509_Store\n* Fixed compilation problems with VS .NET 2003 and Codewarrior 8\n* Added another variant of PKCS8::load_key, taking a memory buffer\n* Fixed various minor/obscure bugs which occurred when MP_WORD_BITS != 32\n* BigInt::operator%=(word) was a no-op if the input was a power of 2\n* Fixed portability problems in BigInt::to_u32bit\n* Fixed major bugs in SSL3-MAC\n* Cleaned up some messes in the PK algorithms\n* Cleanups and extensions for OMAC and EAX\n* Made changes to the entropy estimation function\n* Added a 'beos' module set for use on BeOS\n* Officially deprecated a few X509:: and PKCS8:: functions\n* Moved the contents of primes.h to numthry.h\n* Moved the contents of x509opt.h to x509self.h\n* Removed the (empty) desx.h header\n* Documentation updates\n\nVersion 1.2.4, 2003-05-29\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed a bug in EMSA1 affecting NR signature verification\n* Fixed a few latent bugs in BigInt related to word size\n* Removed an unused function, mp_add2_nc, from the MPI implementation\n* Reorganized the core MPI files\n\nVersion 1.2.3, 2003-05-20\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed a bug that prevented DSA/NR key generation\n* Fixed a bug that prevented importing some root CA certs\n* Fixed a bug in the BER decoder when handing optional bit or byte strings\n* Fixed the encoding of authorityKeyIdentifier in X509_CA\n* Added a sanity check in PBKDF2 for zero length passphrases\n* Added versions of X509::load_key and PKCS8::load_key that take a file name\n* X509_CA generates 128 bit serial numbers now\n* Added tests to check PK key generation\n* Added a simplistic X.509 CA example\n* Cleaned up some of the examples\n\nVersion 1.2.2, 2003-05-13\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Add checks to prevent any BigInt bugs from revealing an RSA or RW key\n* Changed the interface of Global_RNG::seed\n* Major improvements for the es_unix module\n* Added another Win32 entropy source, es_win32\n* The Win32 CryptoAPI entropy source can now poll multiple providers\n* Improved the BeOS entropy source\n* Renamed pipe_unixfd module to fd_unix\n* Fixed a file descriptor leak in the EGD module\n* Fixed a few locking bugs\n\nVersion 1.2.1, 2003-05-06\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added ANSI X9.23 compatible CBC padding\n* Added an entropy source using Win32 CryptoAPI\n* Removed the Pipe I/O operators taking a FILE*\n* Moved the BigInt encoding/decoding functions into the BigInt class\n* Integrated several fixes for VC++ 7 (from Hany Greiss)\n* Fixed the configure.pl script for Windows builds\n\nVersion 1.2.0, 2003-04-28\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Tweaked the Karatsuba cut-off points\n* Increased the allowed keylength of HMAC and Blowfish\n* Removed the 'mpi_ia32' module, pending rewrite\n* Workaround a GCC 2.95.x bug in eme1.cpp\n\nVersion 1.1.13, 2003-04-22\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added OMAC\n* Added EAX authenticated cipher mode\n* Diffie-Hellman would not do blinding in some cases\n* Optimized the OFB and CTR modes\n* Corrected Skipjack's word ordering, as per NIST clarification\n* Support for all subject/issuer attribute types required by RFC 3280\n* The removeFromCRL CRL reason code is now handled correctly\n* Increased the flexibility of the allocators\n* Renamed Rijndael to AES, created aes.h, deleted rijndael.h\n* Removed support for the 'no_timer' LibraryInitializer option\n* Removed 'es_pthr' module, pending further testing\n* Cleaned up get_ciph.cpp\n\nVersion 1.1.12, 2003-04-15\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed a ASN.1 string encoding bug\n* Fixed a pair of X509_DN encoding problems\n* Base64_Decoder and Hex_Decoder can now validate input\n* Removed support for the LibraryInitializer option 'egd_path'\n* Added tests for DSA X.509 and PKCS #8 key formats\n* Removed a long deprecated feature of DH_PrivateKey's constructor\n* Updated the RPM .spec file\n* Major documentation updates\n\nVersion 1.1.11, 2003-04-07\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added PKCS #10 certificate requests\n* Changed X509_Store searching interface to be more flexible\n* Added a generic Certificate_Store interface\n* Added a function for generating self-signed X.509 certs\n* Cleanups and changes to X509_CA\n* New examples for PKCS #10 and self-signed certificates\n* Some documentation updates\n\nVersion 1.1.10, 2003-04-03\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* X509_CA can now generate new X.509 CRLs\n* Added blinding for RSA, RW, DH, and ElGamal to prevent timing attacks\n* More certificate and CRL extensions/attributes are supported\n* Better DN handling in X.509 certificates/CRLs\n* Added a DataSink hierarchy (suggested by Jim Darby)\n* Consolidated SecureAllocator and ManagedAllocator\n* Many cleanups and generalizations\n* Added a (slow) pthreads based EntropySource\n* Fixed some threading bugs\n\nVersion 1.1.9, 2003-02-25\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added support for using X.509v2 CRLs\n* Fixed several bugs in the path validation algorithm\n* Certificates can be verified for a particular usage\n* Algorithm for comparing distinguished names now follows X.509\n* Cleaned up the code for the es_beos, es_ftw, es_unix modules\n* Documentation updates\n\nVersion 1.1.8, 2003-01-29\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixes for the certificate path validation algorithm in X509_Store\n* Fixed a bug affecting X509_Certificate::is_ca_cert()\n* Added a general configuration interface for policy issues\n* Cleanups and API changes in the X.509 CA, cert, and store code\n* Made various options available for X509_CA users\n* Changed X509_Time's interface to work around time_t problems\n* Fixed a theoretical weakness in Randpool's entropy mixing function\n* Fixed problems compiling with GCC 2.95.3 and GCC 2.96\n* Fixed a configure bug (reported by Jon Wilson) affecting MinGW\n\nVersion 1.0.2, 2003-01-12\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed an obscure SEGFAULT causing bug in Pipe\n* Fixed an obscure but dangerous bug in SecureVector::swap\n\nVersion 1.1.7, 2003-01-12\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed an obscure but dangerous bug in SecureVector::swap\n* Consolidated SHA-384 and SHA-512 to save code space\n* Added SSL3-MAC and SSL3-PRF\n* Documentation updates, including a new tutorial\n\nVersion 1.1.6, 2002-12-10\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Initial support for X.509v3 certificates and CAs\n* Major redesign/rewrite of the ASN.1 encoding/decoding code\n* Added handling for DSA/NR signatures encoded as DER SEQUENCEs\n* Documented the generic cipher lookup interface\n* Added an (untested) entropy source for BeOS\n* Various cleanups and bug fixes\n\nVersion 1.1.5, 2002-11-17\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added the discrete logarithm integrated encryption system (DLIES)\n* Various optimizations for BigInt\n* Added support for assembler optimizations in modules\n* Added BigInt x86 optimizations module (mpi_ia32)\n\nVersion 1.1.4, 2002-11-10\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Speedup of 15-30% for PK algorithms\n* Implemented the PBES2 encryption scheme\n* Fixed a potential bug in decoding RSA and RW private keys\n* Changed the DL_Group class interface to handle different formats better\n* Added support for PKCS #3 encoded DH parameters\n* X9.42 DH parameters use a PEM label of 'X942 DH PARAMETERS'\n* Added key pair consistency checking\n* Fixed a compatibility problem with gcc 2.96 (pointed out by Hany Greiss)\n* A botan-config script is generated at configure time\n* Documentation updates\n\nVersion 1.1.3, 2002-11-03\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added a generic public/private key loading interface\n* Fixed a small encoding bug in RSA, RW, and DH\n* Changed the PK encryption/decryption interface classes\n* ECB supports using padding methods\n* Added a function-based interface for library initialization\n* Added support for RIPEMD-128 and Tiger PKCS#1 v1.5 signatures\n* The cipher mode benchmarks now use 128-bit AES instead of DES\n* Removed some obsolete typedefs\n* Removed OpenCL support (opencl.h, the OPENCL_* macros, etc)\n* Added tests for PKCS #8 encoding/decoding\n* Added more tests for ECB and CBC\n\nVersion 1.1.2, 2002-10-21\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Support for PKCS #8 encoded RSA, DSA, and DH private keys\n* Support for Diffie-Hellman X.509 public keys\n* Major reorganization of how X.509 keys are handled\n* Added PKCS #5 v2.0's PBES1 encryption scheme\n* Added a generic cipher lookup interface\n* Added the WiderWake4+1 stream cipher\n* Added support for sync-able stream ciphers\n* Added a 'paranoia level' option for the LibraryInitializer\n* More security for RNG output meant for long term keys\n* Added documentation for some of the new 1.1.x features\n* CFB's feedback argument is now specified in bits\n* Renamed CTR class to CTR_BE\n* Updated the RSA and DSA examples to use X.509 and PKCS #8 key formats\n\nVersion 1.1.1, 2002-10-15\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added the Korean hash function HAS-160\n* Partial support for RSA and DSA X.509 public keys\n* Added a mostly functional BER encoder/decoder\n* Added support for non-deterministic MAC functions\n* Initial support for PEM encoding/decoding\n* Internal cleanups in the PK algorithms\n* Several new convenience functions in Pipe\n* Fixed two nasty bugs in Pipe\n* Messed with the entropy sources for es_unix\n* Discrete logarithm groups are checked for safety more closely now\n* For compatibility with GnuPG, ElGamal now supports DSA-style groups\n\nVersion 1.0.1, 2002-09-14\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed a minor bug in Randpool::random()\n* Added some new aliases and typedefs for 1.1.x compatibility\n* The 4096-bit RSA benchmark key was decimal instead of hex\n* EMAC was returning an incorrect name\n\nVersion 1.1.0, 2002-09-14\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added entropy estimation to the RNGs\n* Improved the overall design of both Randpool and ANSI_X917_RNG\n* Added a separate RNG for nonce generation\n* Added window exponentiation support in power_mod\n* Added a get_s2k function and the PKCS #5 S2K algorithms\n* Added the TLSv1 PRF\n* Replaced BlockCipherModeIV typedef with InitializationVector class\n* Renamed PK_Key_Agreement_Scheme to PK_Key_Agreement\n* Renamed SHA1 -> SHA_160 and SHA2_x -> SHA_x\n* Added support for RIPEMD-160 PKCS#1 v1.5 signatures\n* Changed the key agreement scheme interface\n* Changed the S2K and KDF interfaces\n* Better SCAN compatibility for HAVAL, Tiger, MISTY1, SEAL, RC5, SAFER-SK\n* Added support for variable-pass Tiger\n* Major speedup for Rabin-Williams key generation\n\nVersion 1.0.0, 2002-08-26\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Octal I/O of BigInt is now supported\n* Fixed portability problems in the es_egd module\n* Generalized IV handling in the block cipher modes\n* Added Karatsuba multiplication and k-ary exponentiation\n* Fixed a problem in the multiplication routines\n\nVersion 0.9.2, 2002-08-18\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* DH_PrivateKey::public_value() was returning the wrong value\n* Various BigInt optimizations\n* The filters.h header now includes hex.h and base64.h\n* Moved Counter mode to ctr.h\n* Fixed a couple minor problems with VC++ 7\n* Fixed problems with the RPM spec file\n\nVersion 0.9.1, 2002-08-10\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Grand rename from OpenCL to Botan\n* Major optimizations for the PK algorithms\n* Added ElGamal encryption\n* Added Whirlpool\n* Tweaked memory allocation parameters\n* Improved the method of seeding the global RNG\n* Moved pkcs1.h to eme_pkcs.h\n* Added more test vectors for some algorithms\n* Fixed error reporting in the BigInt tests\n* Removed Default_Timer, it was pointless\n* Added some new example applications\n* Removed some old examples that weren't that interesting\n* Documented the compression modules\n\nVersion 0.9.0, 2002-08-03\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* EMSA4 supports variable salt size\n* PK_* can take a string naming the encoding method to use\n* Started writing some internals documentation\n\nVersion 0.8.7, 2002-07-30\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed bugs in EME1 and EMSA4\n* Fixed a potential crash at shutdown\n* Cipher modes returned an ill-formed name\n* Removed various deprecated types and headers\n* Cleaned up the Pipe interface a bit\n* Minor additions to the documentation\n* First stab at a Visual C++ makefile (doc/Makefile.vc7)\n\nVersion 0.8.6, 2002-07-25\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added EMSA4 (aka PSS)\n* Brought the manual up to date; many corrections and additions\n* Added a parallel hash function construction\n* Lookup supports all available algorithms now\n* Lazy initialization of the lookup tables\n* Made more discrete logarithm groups available through get_dl_group()\n* StreamCipher_Filter supports seeking (if the underlying cipher does)\n* Minor optimization for GCD calculations\n* Renamed SAFER_SK128 to SAFER_SK\n* Removed many previously deprecated functions\n* Some now-obsolete functions, headers, and types have been deprecated\n* Fixed some bugs in DSA prime generation\n* DL_Group had a constructor for DSA-style prime gen but it wasn't defined\n* Reversed the ordering of the two arguments to SEAL's constructor\n* Fixed a threading problem in the PK algorithms\n* Fixed a minor memory leak in lookup.cpp\n* Fixed pk_types.h (it was broken in 0.8.5)\n* Made validation tests more verbose\n* Updated the check and example applications\n\nVersion 0.8.5, 2002-07-21\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Major changes to constructors for DL-based cryptosystems (DSA, NR, DH)\n* Added a DL_Group class\n* Reworking of the pubkey internals\n* Support in lookup for aliases and PK algorithms\n* Renamed CAST5 to CAST_128 and CAST256 to CAST_256\n* Added EMSA1\n* Reorganization of header files\n* LibraryInitializer will install new allocator types if requested\n* Fixed a bug in Diffie-Hellman key generation\n* Did a workaround in pipe.cpp for GCC 2.95.x on Linux\n* Removed some debugging code from init.cpp that made FTW ES useless\n* Better checking for invalid arguments in the PK algorithms\n* Reduced Base64 and Hex default line length (if line breaking is used)\n* Fixes for HP's aCC compiler\n* Cleanups in BigInt\n\nVersion 0.8.4, 2002-07-14\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added Nyberg-Rueppel signatures\n* Added Diffie-Hellman key exchange (kex interface is subject to change)\n* Added KDF2\n* Enhancements to the lookup API\n* Many things formerly taking pointers to algorithms now take names\n* Speedups for prime generation\n* LibraryInitializer has support for seeding the global RNG\n* Reduced SAFER-SK128 memory consumption\n* Reversed the ordering of public and private key values in DSA constructor\n* Fixed serious bugs in MemoryMapping_Allocator\n* Fixed memory leak in Lion\n* FTW_EntropySource was not closing the files it read\n* Fixed line breaking problem in Hex_Encoder\n\nVersion 0.8.3, 2002-06-09\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added DSA and Rabin-Williams signature schemes\n* Added EMSA3\n* Added PKCS#1 v1.5 encryption padding\n* Added Filters for PK algorithms\n* Added a Keyed_Filter class\n* LibraryInitializer processes arguments now\n* Major revamp of the PK interface classes\n* Changed almost all of the Filters for non-template operation\n* Changed HMAC, Lion, Luby-Rackoff to non-template classes\n* Some fairly minor BigInt optimizations\n* Added simple benchmarking for PK algorithms\n* Added hooks for fixed base and fixed exponent modular exponentiation\n* Added some examples for using RSA\n* Numerous bugfixes and cleanups\n* Documentation updates\n\nVersion 0.8.2, 2002-05-18\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added an (experimental) algorithm lookup interface\n* Added code for directly testing BigInt\n* Added SHA2-384\n* Optimized SHA2-512\n* Major optimization for Adler32 (thanks to Dan Nicolaescu)\n* Various minor optimizations in BigInt and related areas\n* Fixed two bugs in X9.19 MAC, both reported by Darren Starsmore\n* Fixed a bug in BufferingFilter\n* Made a few fixes for MacOS X\n* Added a workaround in configure.pl for GCC 2.95.x\n* Better support for PowerPC, ARM, and Alpha\n* Some more cleanups\n\nVersion 0.8.1, 2002-05-06\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Major code cleanup (check doc/deprecated.txt)\n* Various bugs fixed, including several portability problems\n* Renamed MessageAuthCode to MessageAuthenticationCode\n* A replacement for X917 is in x917_rng.h\n* Changed EMAC to non-template class\n* Added ANSI X9.19 compatible CBC-MAC\n* TripleDES now supports 128 bit keys\n\nVersion 0.8.0, 2002-04-24\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Merged BigInt: many bugfixes and optimizations since alpha2\n* Added RSA (rsa.h)\n* Added EMSA2 (emsa2.h)\n* Lots of new interface code for public key algorithms (pk_base.h, pubkey.h)\n* Changed some interfaces, including SymmetricKey, to support the global rng\n* Fixed a serious bug in ManagedAllocator\n* Renamed RIPEMD128 to RIPEMD_128 and RIPEMD160 to RIPEMD_160\n* Removed some deprecated stuff\n* Added a global random number generator (rng.h)\n* Added clone functions to most of the basic algorithms\n* Added a library initializer class (init.h)\n* Version macros in version.h\n* Moved the base classes from opencl.h to base.h\n* Renamed the bzip2 module to comp_bzip2 and zlib to comp_zlib\n* Documentation updates for the new stuff (still incomplete)\n* Many new deprecated things: check doc/deprecated.txt\n\nVersion 0.7.10, 2002-04-07\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Added EGD_EntropySource module (es_egd)\n* Added a file tree walking EntropySource (es_ftw)\n* Added MemoryLocking_Allocator module (alloc_mlock)\n* Renamed the pthr_mux, unix_rnd, and mmap_mem modules\n* Changed timer mechanism; the clock method can be switched on the fly.\n* Renamed MmapDisk_Allocator to MemoryMapping_Allocator\n* Renamed ent_file.h to es_file.h (ent_file.h is around, but deprecated)\n* Fixed several bugs in MemoryMapping_Allocator\n* Added more default sources for Unix_EntropySource\n* Changed SecureBuffer to use same allocation methods as SecureVector\n* Added bigint_divcore into mp_core to support BigInt alpha2 release\n* Removed some Pipe functions deprecated since 0.7.8\n* Some fixes for the configure program\n\nVersion 0.7.9, 2002-03-19\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Memory allocation substantially revamped\n* Added memory allocation method based on mmap(2) in the mmap_mem module\n* Added ECB and CTS block cipher modes (ecb.h, cts.h)\n* Added a Mutex interface (mutex.h)\n* Added module pthr_mux, implementing the Mutex interface\n* Added Threaded Filter interface (thr_filt.h)\n* All algorithms can now by keyed with SymmetricKey objects\n* More testing occurs with --validate (expected failures)\n* Fixed two bugs reported by Hany Greiss, in Luby-Rackoff and RC6\n* Fixed a buffering bug in Bzip_Decompress and Zlib_Decompress\n* Made X917 safer (and about 1/3 as fast)\n* Documentation updates\n\nVersion 0.7.8, 2002-02-28\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* More capabilities for Pipe, inspired by SysV STREAMS, including peeking,\n  better buffering, and stack ops. NOT BACKWARDS COMPATIBLE: SEE DOCUMENTATION\n* Added a BufferingFilter class\n* Added popen() based EntropySource for generic Unix systems (unix_rnd)\n* Moved 'devrand' module into main distribution (ent_file.h), renamed to\n  File_EntropySource, and changed interface somewhat.\n* Made Randpool somewhat more conservative and also 25% faster\n* Minor fixes and updates for the configure script\n* Added some tweaks for memory allocation\n* Documentation updates for the new Pipe interface\n* Fixed various minor bugs\n* Added a couple of new example programs (stack and hasher2)\n\nVersion 0.7.7, 2001-11-24\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Filter::send now works in the constructor of a Filter subclass\n* You may now have to include <opencl/pipe.h> explicitly in some code\n* Added preliminary PK infrastructure classes in pubkey.h and pkbase.h\n* Enhancements to SecureVector (append, destroy functions)\n* New infrastructure for secure memory allocation\n* Added IEEE P1363 primitives MGF1, EME1, KDF1\n* Rijndael optimizations and cleanups\n* Changed CipherMode<B> to BlockCipherMode(B*)\n* Fixed a nasty bug in pipe_unixfd\n* Added portions of the BigInt code into the main library\n* Support for VAX, SH, POWER, PowerPC-64, Intel C++\n\nVersion 0.7.6, 2001-10-14\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fixed several serious bugs in SecureVector created in 0.7.5\n* Square optimizations\n* Fixed shared objects on MacOS X and HP-UX\n* Fixed static libs for KCC 4.0; works with KCC 3.4g as well\n* Full support for Athlon and K6 processors using GCC\n* Added a table of prime numbers < 2**16 (primes.h)\n* Some minor documentation updates\n\nVersion 0.7.5, 2001-08-19\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Split checksum.h into adler32.h, crc24.h, and crc32.h\n* Split modes.h into cbc.h, cfb.h, and ofb.h\n* CBC_wPadding* has been replaced by CBC_Encryption and CBC_Decryption\n* Added OneAndZeros and NoPadding methods for CBC\n* Added Lion, a very fast block cipher construction\n* Added an S2K base class (s2k.h) and an OpenPGP_S2K class (pgp_s2k.h)\n* Basic types (ciphers, hashes, etc) know their names now (call name())\n* Changed the EntropySource type somewhat\n* Big speed-ups for ISAAC, Adler32, CRC24, and CRC32\n* Optimized CAST-256, DES, SAFER-SK, Serpent, SEAL, MD2, and RIPEMD-160\n* Some semantics of SecureVector have changed slightly\n* The mlock module has been removed for the time being\n* Added string handling functions for hashes and MACs\n* Various non-user-visible cleanups\n* Shared library soname is now set to the full version number\n\nVersion 0.7.4, 2001-07-15\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* New modules: Zlib, gettimeofday and x86 RTC timers, Unix I/O for Pipe\n* Fixed a vast number of errors in the config script/makefile/specfile\n* Pipe now has a stdio(3) interface as well as C++ iostreams\n* ARC4 supports skipping the first N bytes of the cipher stream (ala MARK4)\n* Bzip2 supports decompressing multiple concatenated streams, and flushing\n* Added a simple 'overall average' score to the benchmarks\n* Fixed a small bug in the POSIX timer module\n* Removed a very-unlikely-to-occur bug in most of the hash functions\n* filtbase.h now includes <iosfwd>, not <iostream>\n* Minor documentation updates\n\nVersion 0.7.3, 2001-06-08\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Fix build problems on Solaris/SPARC\n* Fix build problems with Perl versions < 5.6\n* Fixed some stupid code that broke on a few compilers\n* Added string handling functions to Pipe\n* MISTY1 optimizations\n\nVersion 0.7.2, 2001-06-03\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Build system supports modules\n* Added modules for mlock, a /dev/random EntropySource, POSIX1.b timers\n* Added Bzip2 compression filter, contributed by Peter Jones\n* GNU make no longer required (tested with 4.4BSD pmake and Solaris make)\n* Fixed minor bug in several of the hash functions\n* Various other minor fixes and changes\n* Updates to the documentation\n\nVersion 0.7.1, 2001-05-16\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* Rewrote configure script: more consistent and complete\n* Made it easier to find out parameters of types at run time (opencl.h)\n* New functions for finding the version being used (version.h)\n* New SymmetricKey interface for Filters (symkey.h)\n* InvalidKeyLength now records what the invalid key length was\n* Optimized DES, CS-Cipher, MISTY1, Skipjack, XTEA\n* Changed GOST to use correct S-box ordering (incompatible change)\n* Benchmark code was almost totally rewritten\n* Many more entries in the test vector file\n* Fixed minor and idiotic bug in check.cpp\n\nVersion 0.7.0, 2001-03-01\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* First public release\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/asn1_print/input6.der",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/asn1_print/input2.der",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/asn1_print/input4.der",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/asn1_print/input3.der",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/asn1_print/input1.der",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/asn1_print/input5.der",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/ecc/root_SHA1.163.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/ecc/link_SHA256.cer",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/ecc/CSCA.CSCA.csca-germany.1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/ecc/link_SHA1.166.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/ecc/root2_SHA256.cer",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/misc/opcuactt_ca.der",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/misc/cert_seq.der",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/root.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/root.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test41/int3.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test41/int3.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test41/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test41/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test41/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test41/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test41/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test34/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test34/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test34/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test39/int3.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test39/int3.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test39/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test39/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test39/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test39/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test39/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test13/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test13/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test13/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test19/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test19/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test33/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test33/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test33/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test30/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test30/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test30/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test25/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test25/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test25/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test15/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test15/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test15/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test37/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test37/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test37/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test37/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test37/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test12/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test12/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test12/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test01/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test47/int3.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test47/int3.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test47/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test47/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test47/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test47/int4.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test47/int4.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test47/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test47/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test59/int3.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test59/int3.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test59/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test59/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test59/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test59/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test59/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test04/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test04/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test04/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test04/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test04/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test70/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test70/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test70/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test70/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test70/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test72/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test72/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test72/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test05/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test05/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test05/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test28/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test28/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test28/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test21/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test21/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test21/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test68/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test68/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test68/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test68/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test68/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test53/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test53/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test53/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test27/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test27/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test27/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test17/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test17/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test17/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test69/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test69/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test69/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test76/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test76/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test76/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test42/int3.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test42/int3.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test42/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test42/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test42/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test42/int4.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test42/int4.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test42/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test42/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test65/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test65/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test65/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test65/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test20/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test20/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test20/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test23/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test23/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test23/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test66/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test66/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test66/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test24/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test24/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test24/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test74/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test74/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test74/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test35/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test35/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test35/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test61/int3.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test61/int3.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test61/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test61/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test61/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test61/int4.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test61/int4.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test61/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test61/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test45/int3.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test45/int3.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test45/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test45/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test45/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test45/int4.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test45/int4.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test45/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test45/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test06/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test06/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test06/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test56/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test56/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test56/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test09/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test09/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test09/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test16/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test16/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test16/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test63/int3.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test63/int3.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test63/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test63/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test63/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test63/int4.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test63/int4.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test63/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test63/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test57/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test57/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test57/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test55/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test55/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test55/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test55/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test55/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test36/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test36/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test36/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test36/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test36/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test08/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test08/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test08/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test52/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test52/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test52/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test22/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test22/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test22/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test10/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test10/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test10/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test38/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test38/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test38/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test38/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test38/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test32/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test32/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test32/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test73/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test73/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test73/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test40/int3.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test40/int3.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test40/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test40/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test40/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test40/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test40/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test54/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test54/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test54/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test54/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test54/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test62/int3.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test62/int3.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test62/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test62/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test62/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test62/int4.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test62/int4.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test62/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test62/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test18/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test18/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test18/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test14/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test14/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test14/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test43/int3.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test43/int3.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test43/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test43/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test43/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test43/int4.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test43/int4.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test43/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test43/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test75/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test75/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test75/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test11/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test11/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test11/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test26/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test26/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test26/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test60/int3.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test60/int3.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test60/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test60/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test60/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test60/int4.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test60/int4.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test60/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test60/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test48/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test48/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test48/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test64/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test64/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test64/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test44/int3.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test44/int3.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test44/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test44/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test44/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test44/int4.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test44/int4.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test44/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test44/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test31/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test31/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test31/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test02/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test02/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test02/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test51/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test51/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test51/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test50/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test50/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test50/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test29/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test29/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test29/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test67/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test67/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test67/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test67/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test07/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test07/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test07/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test03/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test03/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test03/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test71/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test71/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test71/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test46/int3.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test46/int3.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test46/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test46/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test46/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test46/int4.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test46/int4.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test46/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test46/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test58/int3.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test58/int3.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test58/int2.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test58/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test58/int2.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test58/int1.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test58/int1.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test49/int.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test49/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/nist/test49/int.crl",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/pss_certs/96/end.crt",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/ocsp/patrickschmidt_ocsp.der",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/ocsp/patrickschmidt_ocsp_try_later_wrong_sig.der",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/ocsp/resp2.der",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/ocsp/randombit_ocsp.der",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/ocsp/resp1.der",
        "/tmp/vanessa/spack-stage/spack-stage-botan-2.16.0-ins2z37lu4ju7mksvj6n5jow7plxr4ph/spack-src/src/tests/data/x509/ocsp/resp3.der"
    ],
    "total_files": 2727
}