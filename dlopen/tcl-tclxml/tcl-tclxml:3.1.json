{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-tcl-tclxml-3.1-rdt4s6lpi35mvji4rqao2aplknmuawfs/spack-src/tcl.m4": "# tcl.m4 --\n#\n#\tThis file provides a set of autoconf macros to help TEA-enable\n#\ta Tcl extension.\n#\n# Copyright (c) 1999 Scriptics Corporation.\n#\n# See the file \"license.terms\" for information on usage and redistribution\n# of this file, and for a DISCLAIMER OF ALL WARRANTIES.\n\n#------------------------------------------------------------------------\n# SC_PATH_TCLCONFIG --\n#\n#\tLocate the tclConfig.sh file and perform a sanity check on\n#\tthe Tcl compile flags\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--with-tcl=...\n#\n#\tDefines the following vars:\n#\t\tTCL_BIN_DIR\tFull path to the directory containing\n#\t\t\t\tthe tclConfig.sh file\n#------------------------------------------------------------------------\n\nAC_DEFUN(SC_PATH_TCLCONFIG, [\n    #\n    # Ok, lets find the tcl configuration\n    # First, look for one uninstalled.\n    # the alternative search directory is invoked by --with-tcl\n    #\n\n    if test x\"${no_tcl}\" = x ; then\n\t# we reset no_tcl in case something fails here\n\tno_tcl=true\n\n\tAC_ARG_WITH(tcl, [  --with-tcl=DIR          directory containing tcl configuration (tclConfig.sh)], with_tclconfig=${withval})\n\tAC_MSG_CHECKING([for Tcl configuration])\n\tAC_CACHE_VAL(ac_cv_c_tclconfig,[\n\n\t    # First check to see if --with-tcl was specified.\n\t    if test x\"${with_tclconfig}\" != x ; then\n\t\tif test -f \"${with_tclconfig}/tclConfig.sh\" ; then\n\t\t    ac_cv_c_tclconfig=`(cd ${with_tclconfig}; pwd)`\n\t\telse\n\t\t    AC_MSG_ERROR([${with_tclconfig} directory doesn't contain tclConfig.sh])\n\t\tfi\n\t    fi\n\n\t    # then check for a private Tcl installation\n\t    if test x\"${ac_cv_c_tclconfig}\" = x ; then\n\t\tfor i in \\\n\t\t\t../tcl \\\n\t\t\t`ls -dr ../tcl[[8-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t../../tcl \\\n\t\t\t`ls -dr ../../tcl[[8-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t../../../tcl \\\n\t\t\t`ls -dr ../../../tcl[[8-9]].[[0-9]]* 2>/dev/null` ; do\n\t\t    if test -f \"$i/unix/tclConfig.sh\" ; then\n\t\t\tac_cv_c_tclconfig=`(cd $i/unix; pwd)`\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\n\t    # check in a few common install locations\n\t    if test x\"${ac_cv_c_tclconfig}\" = x ; then\n\t\tfor i in `ls -d ${prefix}/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/local/lib 2>/dev/null` \\\n                        `ls -d /usr/lib 2>/dev/null` ; do\n\t\t    if test -f \"$i/tclConfig.sh\" ; then\n\t\t\tac_cv_c_tclconfig=`(cd $i; pwd)`\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\n\t    # check in a few other private locations\n\t    if test x\"${ac_cv_c_tclconfig}\" = x ; then\n\t\tfor i in \\\n\t\t\t${srcdir}/../tcl \\\n\t\t\t`ls -dr ${srcdir}/../tcl[[8-9]].[[0-9]]* 2>/dev/null` ; do\n\t\t    if test -f \"$i/unix/tclConfig.sh\" ; then\n\t\t    ac_cv_c_tclconfig=`(cd $i/unix; pwd)`\n\t\t    break\n\t\tfi\n\t\tdone\n\t    fi\n\t])\n\n\tif test x\"${ac_cv_c_tclconfig}\" = x ; then\n\t    TCL_BIN_DIR=\"# no Tcl configs found\"\n\t    AC_MSG_WARN(Can't find Tcl configuration definitions)\n\t    exit 0\n\telse\n\t    no_tcl=\n\t    TCL_BIN_DIR=${ac_cv_c_tclconfig}\n\t    AC_MSG_RESULT(found $TCL_BIN_DIR/tclConfig.sh)\n\tfi\n    fi\n])\n\n#------------------------------------------------------------------------\n# SC_PATH_TKCONFIG --\n#\n#\tLocate the tkConfig.sh file\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--with-tk=...\n#\n#\tDefines the following vars:\n#\t\tTK_BIN_DIR\tFull path to the directory containing\n#\t\t\t\tthe tkConfig.sh file\n#------------------------------------------------------------------------\n\nAC_DEFUN(SC_PATH_TKCONFIG, [\n    #\n    # Ok, lets find the tk configuration\n    # First, look for one uninstalled.\n    # the alternative search directory is invoked by --with-tk\n    #\n\n    if test x\"${no_tk}\" = x ; then\n\t# we reset no_tk in case something fails here\n\tno_tk=true\n\tAC_ARG_WITH(tk, [  --with-tk               directory containing tk configuration (tkConfig.sh)], with_tkconfig=${withval})\n\tAC_MSG_CHECKING([for Tk configuration])\n\tAC_CACHE_VAL(ac_cv_c_tkconfig,[\n\n\t    # First check to see if --with-tkconfig was specified.\n\t    if test x\"${with_tkconfig}\" != x ; then\n\t\tif test -f \"${with_tkconfig}/tkConfig.sh\" ; then\n\t\t    ac_cv_c_tkconfig=`(cd ${with_tkconfig}; pwd)`\n\t\telse\n\t\t    AC_MSG_ERROR([${with_tkconfig} directory doesn't contain tkConfig.sh])\n\t\tfi\n\t    fi\n\n\t    # then check for a private Tk library\n\t    if test x\"${ac_cv_c_tkconfig}\" = x ; then\n\t\tfor i in \\\n\t\t\t../tk \\\n\t\t\t`ls -dr ../tk[[8-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t../../tk \\\n\t\t\t`ls -dr ../../tk[[8-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t../../../tk \\\n\t\t\t`ls -dr ../../../tk[[8-9]].[[0-9]]* 2>/dev/null` ; do\n\t\t    if test -f \"$i/unix/tkConfig.sh\" ; then\n\t\t\tac_cv_c_tkconfig=`(cd $i/unix; pwd)`\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\t    # check in a few common install locations\n\t    if test x\"${ac_cv_c_tkconfig}\" = x ; then\n\t\tfor i in `ls -d ${prefix}/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/local/lib 2>/dev/null` ; do\n\t\t    if test -f \"$i/tkConfig.sh\" ; then\n\t\t\tac_cv_c_tkconfig=`(cd $i; pwd)`\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\t    # check in a few other private locations\n\t    if test x\"${ac_cv_c_tkconfig}\" = x ; then\n\t\tfor i in \\\n\t\t\t${srcdir}/../tk \\\n\t\t\t`ls -dr ${srcdir}/../tk[[8-9]].[[0-9]]* 2>/dev/null` ; do\n\t\t    if test -f \"$i/unix/tkConfig.sh\" ; then\n\t\t\tac_cv_c_tkconfig=`(cd $i/unix; pwd)`\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\t])\n\tif test x\"${ac_cv_c_tkconfig}\" = x ; then\n\t    TK_BIN_DIR=\"# no Tk configs found\"\n\t    AC_MSG_WARN(Can't find Tk configuration definitions)\n\t    exit 0\n\telse\n\t    no_tk=\n\t    TK_BIN_DIR=${ac_cv_c_tkconfig}\n\t    AC_MSG_RESULT(found $TK_BIN_DIR/tkConfig.sh)\n\tfi\n    fi\n\n])\n\n#------------------------------------------------------------------------\n# SC_LOAD_TCLCONFIG --\n#\n#\tLoad the tclConfig.sh file\n#\n# Arguments:\n#\t\n#\tRequires the following vars to be set:\n#\t\tTCL_BIN_DIR\n#\n# Results:\n#\n#\tSubst the following vars:\n#\t\tTCL_BIN_DIR\n#\t\tTCL_SRC_DIR\n#\t\tTCL_LIB_FILE\n#\n#------------------------------------------------------------------------\n\nAC_DEFUN(SC_LOAD_TCLCONFIG, [\n    AC_MSG_CHECKING([for existence of $TCL_BIN_DIR/tclConfig.sh])\n\n    if test -f \"$TCL_BIN_DIR/tclConfig.sh\" ; then\n        AC_MSG_RESULT([loading])\n\t. $TCL_BIN_DIR/tclConfig.sh\n    else\n        AC_MSG_RESULT([file not found])\n    fi\n\n    #\n    # The eval is required to do the TCL_DBGX substitution in the\n    # TCL_LIB_FILE variable\n    #\n\n    eval TCL_LIB_FILE=${TCL_LIB_FILE}\n    eval TCL_LIB_FLAG=${TCL_LIB_FLAG}\n\n    AC_SUBST(TCL_DBGX)\n    AC_SUBST(TCL_BIN_DIR)\n    AC_SUBST(TCL_SRC_DIR)\n    AC_SUBST(TCL_LIB_FILE)\n    AC_SUBST(TCL_LIBS)\n    AC_SUBST(TCL_DEFS)\n    AC_SUBST(TCL_SHLIB_LD_LIBS)\n    AC_SUBST(TCL_EXTRA_CFLAGS)\n    AC_SUBST(TCL_LD_FLAGS)\n    AC_SUBST(TCL_LIB_FILE)\n    AC_SUBST(TCL_STUB_LIB_FILE)\n    AC_SUBST(TCL_LIB_SPEC)\n    AC_SUBST(TCL_BUILD_LIB_SPEC)\n    AC_SUBST(TCL_STUB_LIB_SPEC)\n    AC_SUBST(TCL_BUILD_STUB_LIB_SPEC)\n])\n\n#------------------------------------------------------------------------\n# SC_LOAD_TKCONFIG --\n#\n#\tLoad the tkConfig.sh file\n#\n# Arguments:\n#\t\n#\tRequires the following vars to be set:\n#\t\tTK_BIN_DIR\n#\n# Results:\n#\n#\tSets the following vars that should be in tkConfig.sh:\n#\t\tTK_BIN_DIR\n#------------------------------------------------------------------------\n\nAC_DEFUN(SC_LOAD_TKCONFIG, [\n    AC_MSG_CHECKING([for existence of $TK_BIN_DIR/tkConfig.sh])\n\n    if test -f \"$TK_BIN_DIR/tkConfig.sh\" ; then\n        AC_MSG_RESULT([loading])\n\t. $TK_BIN_DIR/tkConfig.sh\n    else\n        AC_MSG_RESULT([could not find $TK_BIN_DIR/tkConfig.sh])\n    fi\n\n    AC_SUBST(TK_BIN_DIR)\n    AC_SUBST(TK_SRC_DIR)\n    AC_SUBST(TK_LIB_FILE)\n    AC_SUBST(TK_XINCLUDES)\n])\n\n#------------------------------------------------------------------------\n# SC_ENABLE_GCC --\n#\n#\tAllows the use of GCC if available\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--enable-gcc\n#\n#\tSets the following vars:\n#\t\tCC\tCommand to use for the compiler\n#------------------------------------------------------------------------\n\nAC_DEFUN(SC_ENABLE_GCC, [\n    AC_ARG_ENABLE(gcc, [  --enable-gcc            allow use of gcc if available [--disable-gcc]],\n\t[ok=$enableval], [ok=no])\n    if test \"$ok\" = \"yes\"; then\n\tCC=gcc\n    else\n\tcase \"`uname -s`\" in\n\t    *win32* | *WIN32* | *CYGWIN_NT*)\n\t\tCC=cl\n\t    ;;\n\t    *)\n\t\tCC=${CC-cc}\n\t    ;;\n\tesac\n    fi\n    AC_PROG_CC\n])\n\n#------------------------------------------------------------------------\n# SC_ENABLE_SHARED --\n#\n#\tAllows the building of shared libraries\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--enable-shared=yes|no\n#\n#\tDefines the following vars:\n#\t\tSTATIC_BUILD\tUsed for building import/export libraries\n#\t\t\t\ton Windows.\n#\n#\tSets the following vars:\n#\t\tSHARED_BUILD\tValue of 1 or 0\n#------------------------------------------------------------------------\n\nAC_DEFUN(SC_ENABLE_SHARED, [\n    AC_MSG_CHECKING([how to build libraries])\n    AC_ARG_ENABLE(shared,\n\t[  --enable-shared         build and link with shared libraries [--enable-shared]],\n\t[tcl_ok=$enableval], [tcl_ok=yes])\n\n    if test \"${enable_shared+set}\" = set; then\n\tenableval=\"$enable_shared\"\n\ttcl_ok=$enableval\n    else\n\ttcl_ok=yes\n    fi\n\n    if test \"$tcl_ok\" = \"yes\" ; then\n\tAC_MSG_RESULT([shared])\n\tSHARED_BUILD=1\n    else\n\tAC_MSG_RESULT([static])\n\tSHARED_BUILD=0\n\tAC_DEFINE(STATIC_BUILD)\n    fi\n])\n\n#------------------------------------------------------------------------\n# SC_ENABLE_THREADS --\n#\n#\tSpecify if thread support should be enabled\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--enable-threads\n#\n#\tSets the following vars:\n#\t\tTHREADS_LIBS\tThread library(s)\n#\n#\tDefines the following vars:\n#\t\tTCL_THREADS\n#\t\t_REENTRANT\n#\n#------------------------------------------------------------------------\n\nAC_DEFUN(SC_ENABLE_THREADS, [\n    AC_MSG_CHECKING(for building with threads)\n    AC_ARG_ENABLE(threads, [  --enable-threads        build with threads],\n\t[tcl_ok=$enableval], [tcl_ok=no])\n\n    if test \"$tcl_ok\" = \"yes\"; then\n\tTCL_THREADS=1\n\tAC_DEFINE(TCL_THREADS)\n\tAC_DEFINE(_REENTRANT)\n\n\tcase \"`uname -s`\" in\n\t    *win32* | *WIN32* | *CYGWIN_NT*)\n\t\t    AC_MSG_RESULT(yes)\n\t\t;;\n\t    *)\n\t\tAC_CHECK_LIB(pthread,pthread_mutex_init,tcl_ok=yes,tcl_ok=no)\n\t\tif test \"$tcl_ok\" = \"yes\"; then\n\t\t    # The space is needed\n\t\t    THREADS_LIBS=\" -lpthread\"\n\t\t    AC_MSG_RESULT(yes)\n\t\telse\n\t\t    TCL_THREADS=0\n\t\t    AC_MSG_RESULT(no)\n\t\t    AC_MSG_WARN(\"Don t know how to find pthread lib on your system - you must disable thread support or edit the LIBS in the Makefile...\")\n\t\tfi\n\t\t;;\n\tesac\n    else\n\tTCL_THREADS=0\n\tAC_MSG_RESULT(no (default))\n    fi\n\n])\n\n#------------------------------------------------------------------------\n# SC_ENABLE_SYMBOLS --\n#\n#\tSpecify if debugging symbols should be used\n#\n# Arguments:\n#\tnone\n#\t\n#\tRequires the following vars to be set:\n#\t\tCFLAGS_DEBUG\n#\t\tCFLAGS_OPTIMIZE\n#\t\tLDFLAGS_DEBUG\n#\t\tLDFLAGS_OPTIMIZE\n#\t\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--enable-symbols\n#\n#\tDefines the following vars:\n#\t\tCFLAGS_DEFAULT\tSets to CFLAGS_DEBUG if true\n#\t\t\t\tSets to CFLAGS_OPTIMIZE if false\n#\t\tLDFLAGS_DEFAULT\tSets to LDFLAGS_DEBUG if true\n#\t\t\t\tSets to LDFLAGS_OPTIMIZE if false\n#\t\tDBGX\t\tDebug library extension\n#\n#------------------------------------------------------------------------\n\nAC_DEFUN(SC_ENABLE_SYMBOLS, [\n    case \"`uname -s`\" in\n\t*win32* | *WIN32* | *CYGWIN_NT*)\n\t    tcl_dbgx=d\n\t;;\n\t*)\n\t    tcl_dbgx=g\n\t;;\n    esac\n\n    AC_MSG_CHECKING([for build with symbols])\n    AC_ARG_ENABLE(symbols, [  --enable-symbols        build with debugging symbols [--disable-symbols]],    [tcl_ok=$enableval], [tcl_ok=no])\n    if test \"$tcl_ok\" = \"yes\"; then\n\tCFLAGS_DEFAULT=\"${CFLAGS_DEBUG}\"\n\tLDFLAGS_DEFAULT=\"${LDFLAGS_DEBUG}\"\n\tDBGX=${tcl_dbgx}\n\tTCL_DBGX=${tcl_dbgx}\n\tAC_MSG_RESULT([yes])\n    else\n\tCFLAGS_DEFAULT=\"${CFLAGS_OPTIMIZE}\"\n\tLDFLAGS_DEFAULT=\"${LDFLAGS_OPTIMIZE}\"\n\tDBGX=\"\"\n\tTCL_DBGX=\"\"\n\tAC_MSG_RESULT([no])\n    fi\n\n    AC_SUBST(TCL_DBGX)\n    AC_SUBST(CFLAGS_DEFAULT)\n    AC_SUBST(LDFLAGS_DEFAULT)\n])\n\n#--------------------------------------------------------------------\n# SC_CONFIG_CFLAGS\n#\n#\tTry to determine the proper flags to pass to the compiler\n#\tfor building shared libraries and other such nonsense.\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tDefines the following vars:\n#\n#       DL_OBJS -       Name of the object file that implements dynamic\n#                       loading for Tcl on this system.\n#       DL_LIBS -       Library file(s) to include in tclsh and other base\n#                       applications in order for the \"load\" command to work.\n#       LDFLAGS -      Flags to pass to the compiler when linking object\n#                       files into an executable application binary such\n#                       as tclsh.\n#       LD_SEARCH_FLAGS-Flags to pass to ld, such as \"-R /usr/local/tcl/lib\",\n#                       that tell the run-time dynamic linker where to look\n#                       for shared libraries such as libtcl.so.  Depends on\n#                       the variable LIB_RUNTIME_DIR in the Makefile.\n#       MAKE_LIB -      Command to execute to build the Tcl library;\n#                       differs depending on whether or not Tcl is being\n#                       compiled as a shared library.\n#       SHLIB_CFLAGS -  Flags to pass to cc when compiling the components\n#                       of a shared library (may request position-independent\n#                       code, among other things).\n#       SHLIB_LD -      Base command to use for combining object files\n#                       into a shared library.\n#       SHLIB_LD_LIBS - Dependent libraries for the linker to scan when\n#                       creating shared libraries.  This symbol typically\n#                       goes at the end of the \"ld\" commands that build\n#                       shared libraries. The value of the symbol is\n#                       \"${LIBS}\" if all of the dependent libraries should\n#                       be specified when creating a shared library.  If\n#                       dependent libraries should not be specified (as on\n#                       SunOS 4.x, where they cause the link to fail, or in\n#                       general if Tcl and Tk aren't themselves shared\n#                       libraries), then this symbol has an empty string\n#                       as its value.\n#       SHLIB_SUFFIX -  Suffix to use for the names of dynamically loadable\n#                       extensions.  An empty string means we don't know how\n#                       to use shared libraries on this platform.\n#       TCL_LIB_FILE -  Name of the file that contains the Tcl library, such\n#                       as libtcl7.8.so or libtcl7.8.a.\n#       TCL_LIB_SUFFIX -Specifies everything that comes after the \"libtcl\"\n#                       in the shared library name, using the $VERSION variable\n#                       to put the version in the right place.  This is used\n#                       by platforms that need non-standard library names.\n#                       Examples:  ${VERSION}.so.1.1 on NetBSD, since it needs\n#                       to have a version after the .so, and ${VERSION}.a\n#                       on AIX, since the Tcl shared library needs to have\n#                       a .a extension whereas shared objects for loadable\n#                       extensions have a .so extension.  Defaults to\n#                       ${VERSION}${SHLIB_SUFFIX}.\n#       TCL_NEEDS_EXP_FILE -\n#                       1 means that an export file is needed to link to a\n#                       shared library.\n#       TCL_EXP_FILE -  The name of the installed export / import file which\n#                       should be used to link to the Tcl shared library.\n#                       Empty if Tcl is unshared.\n#       TCL_BUILD_EXP_FILE -\n#                       The name of the built export / import file which\n#                       should be used to link to the Tcl shared library.\n#                       Empty if Tcl is unshared.\n#\tCFLAGS_DEBUG -\n#\t\t\tFlags used when running the compiler in debug mode\n#\tCFLAGS_OPTIMIZE -\n#\t\t\tFlags used when running the compiler in optimize mode\n#\n#\tEXTRA_CFLAGS\n#\n#\tSubst's the following vars:\n#\t\tDL_LIBS\n#\t\tCFLAGS_DEBUG\n#\t\tCFLAGS_OPTIMIZE\n#--------------------------------------------------------------------\n\nAC_DEFUN(SC_CONFIG_CFLAGS, [\n\n    # Step 0: Enable 64 bit support?\n\n    AC_MSG_CHECKING([if 64bit support is enabled])\n    AC_ARG_ENABLE(64bit,[  --enable-64bit          enable 64bit support],,enableval=\"no\")\n\n    if test \"$enableval\" = \"yes\"; then\n\tAC_MSG_RESULT(Will compile with 64bit support)\n\tdo64bit=yes\n    else\n\tdo64bit=no\n    fi\n    AC_MSG_RESULT($do64bit)\n \n    # Step 1: set the variable \"system\" to hold the name and version number\n    # for the system.  This can usually be done via the \"uname\" command, but\n    # there are a few systems, like Next, where this doesn't work.\n\n    AC_MSG_CHECKING([system version (for dynamic loading)])\n    if test -f /usr/lib/NextStep/software_version; then\n\tsystem=NEXTSTEP-`awk '/3/,/3/' /usr/lib/NextStep/software_version`\n    else\n\tsystem=`uname -s`-`uname -r`\n\tif test \"$?\" -ne 0 ; then\n\t    AC_MSG_RESULT([unknown (can't find uname command)])\n\t    system=unknown\n\telse\n\t    # Special check for weird MP-RAS system (uname returns weird\n\t    # results, and the version is kept in special file).\n\t\n\t    if test -r /etc/.relid -a \"X`uname -n`\" = \"X`uname -s`\" ; then\n\t\tsystem=MP-RAS-`awk '{print $3}' /etc/.relid'`\n\t    fi\n\t    if test \"`uname -s`\" = \"AIX\" ; then\n\t\tsystem=AIX-`uname -v`.`uname -r`\n\t    fi\n\t    AC_MSG_RESULT($system)\n\tfi\n    fi\n\n    # Step 2: check for existence of -ldl library.  This is needed because\n    # Linux can use either -ldl or -ldld for dynamic loading.\n\n    AC_CHECK_LIB(dl, dlopen, have_dl=yes, have_dl=no)\n\n    # Step 3: set configuration options based on system name and version.\n\n    do64bit_ok=no\n    fullSrcDir=`cd $srcdir; pwd`\n    EXTRA_CFLAGS=\"\"\n    TCL_EXPORT_FILE_SUFFIX=\"\"\n    UNSHARED_LIB_SUFFIX=\"\"\n    TCL_TRIM_DOTS='`echo ${VERSION} | tr -d .`'\n    ECHO_VERSION='`echo ${VERSION}`'\n    TCL_LIB_VERSIONS_OK=ok\n    CFLAGS_DEBUG=-g\n    CFLAGS_OPTIMIZE=-O\n    TCL_NEEDS_EXP_FILE=0\n    TCL_BUILD_EXP_FILE=\"\"\n    TCL_EXP_FILE=\"\"\n    STLIB_LD=\"ar cr\"\n    case $system in\n\tAIX-4.[[2-9]])\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD=\"$fullSrcDir/ldAix /bin/ld -bhalt:4 -bM:SRE -bE:lib.exp -H512 -T512 -bnoentry\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'\n\t    TCL_NEEDS_EXP_FILE=1\n\t    TCL_EXPORT_FILE_SUFFIX='${VERSION}\\$\\{DBGX\\}.exp'\n\t    ;;\n\tAIX-*)\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD=\"$fullSrcDir/ldAix /bin/ld -bhalt:4 -bM:SRE -bE:lib.exp -H512 -T512\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    LIBOBJS=\"$LIBOBJS tclLoadAix.o\"\n\t    DL_LIBS=\"-lld\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'\n\t    TCL_NEEDS_EXP_FILE=1\n\t    TCL_EXPORT_FILE_SUFFIX='${VERSION}\\$\\{DBGX\\}.exp'\n\t    ;;\n\tBSD/OS-2.1*|BSD/OS-3*)\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD=\"shlicc -r\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tBSD/OS-4.*)\n\t    SHLIB_CFLAGS=\"-export-dynamic -fPIC\"\n\t    SHLIB_LD=\"cc -shared\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"-export-dynamic\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\t*win32*|*WIN32*|CYGWIN_NT*|cygwin_nt*)\n\t    CFLAGS_DEBUG=\"-nologo -Z7 -Od -WX ${runtime}d\"\n\t    CFLAGS_OPTIMIZE=\"-nologo -Oti -Gs -GD ${runtime}\"\n\t    LDFLAGS_CONSOLE=\"-subsystem:console\"\n\t    LDFLAGS_WINDOW=\"-subsystem:windows\"\n\t    LDFLAGS_DEBUG=\"-debug:full -debugtype:cv\"\n\t    LDFLAGS_OPTIMIZE=\"-release\"\n\t    EXTRA_CFLAGS=\"-YX\"\n\t    PATHTYPE=-w\n\t    STLIB_LD=\"lib -nologo\"\n\t    SHLIB_LD=\"link -dll -nologo\"\n\t    SHLIB_LD_LIBS=\"user32.lib advapi32.lib\"\n\t    RC=\"rc\"\n\t    ;;\n\tdgux*)\n\t    SHLIB_CFLAGS=\"-K PIC\"\n\t    SHLIB_LD=\"cc -G\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tHP-UX-*.08.*|HP-UX-*.09.*|HP-UX-*.10.*|HP-UX-*.11.*)\n\t    SHLIB_SUFFIX=\".sl\"\n\t    AC_CHECK_LIB(dld, shl_load, tcl_ok=yes, tcl_ok=no)\n\t    if test \"$tcl_ok\" = yes; then\n\t\tSHLIB_CFLAGS=\"+z\"\n\t\tSHLIB_LD=\"ld -b\"\n\t\tSHLIB_LD_LIBS=\"\"\n\t\tDL_OBJS=\"tclLoadShl.o\"\n\t\tDL_LIBS=\"-ldld\"\n\t\tLDFLAGS=\"-Wl,-E\"\n\t\tLD_SEARCH_FLAGS='-Wl,+s,+b,${LIB_RUNTIME_DIR}:.'\n\t    fi\n\t    ;;\n\tIRIX-4.*)\n\t    SHLIB_CFLAGS=\"-G 0\"\n\t    SHLIB_SUFFIX=\".a\"\n\t    SHLIB_LD=\"echo tclLdAout $CC \\{$SHLIB_CFLAGS\\} | `pwd`/tclsh -r -G 0\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    DL_OBJS=\"tclLoadAout.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"-Wl,-D,08000000\"\n\t    LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'\n\t    SHARED_LIB_SUFFIX='${VERSION}\\$\\{DBGX\\}.a'\n\t    ;;\n\tIRIX-5.*|IRIX-6.*|IRIX64-6.5*)\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD=\"ld -n32 -shared -rdata_shared\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    LD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'\n\t    if test \"$CC\" = \"gcc\" -o `$CC -v 2>&1 | grep -c gcc` != \"0\" ; then\n\t\tEXTRA_CFLAGS=\"-mabi=n32\"\n\t\tLDFLAGS=\"-mabi=n32\"\n\t    else\n\t\tcase $system in\n\t\t    IRIX-6.3)\n\t\t\t# Use to build 6.2 compatible binaries on 6.3.\n\t\t\tEXTRA_CFLAGS=\"-n32 -D_OLD_TERMIOS\"\n\t\t\t;;\n\t\t    *)\n\t\t\tEXTRA_CFLAGS=\"-n32\"\n\t\t\t;;\n\t\tesac\n\t\tLDFLAGS=\"-n32\"\n\t    fi\n\t    ;;\n\tIRIX64-6.*)\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD=\"ld -32 -shared -rdata_shared\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'\n\t    ;;\n\tLinux*)\n\t    SHLIB_CFLAGS=\"-fPIC\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\n\t    # egcs-2.91.66 on Redhat Linux 6.0 generates lots of warnings \n\t    # when you inline the string and math operations.  Turn this off to\n\t    # get rid of the warnings.\n\n\t    CFLAGS_OPTIMIZE=\"${CFLAGS_OPTIMIZE} -D__NO_STRING_INLINES -D__NO_MATH_INLINES\"\n\n\t    if test \"$have_dl\" = yes; then\n\t\tSHLIB_LD=\"${CC} -shared\"\n\t\tDL_OBJS=\"tclLoadDl.o\"\n\t\tDL_LIBS=\"-ldl\"\n\t\tLDFLAGS=\"-rdynamic\"\n\t\tLD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'\n\t    else\n\t\tAC_CHECK_HEADER(dld.h, [\n\t\t    SHLIB_LD=\"ld -shared\"\n\t\t    DL_OBJS=\"tclLoadDld.o\"\n\t\t    DL_LIBS=\"-ldld\"\n\t\t    LDFLAGS=\"\"\n\t\t    LD_SEARCH_FLAGS=\"\"])\n\t    fi\n\t    if test \"`uname -m`\" = \"alpha\" ; then\n\t\tEXTRA_CFLAGS=\"-mieee\"\n\t    fi\n\t    ;;\n\tMP-RAS-02*)\n\t    SHLIB_CFLAGS=\"-K PIC\"\n\t    SHLIB_LD=\"cc -G\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tMP-RAS-*)\n\t    SHLIB_CFLAGS=\"-K PIC\"\n\t    SHLIB_LD=\"cc -G\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"-Wl,-Bexport\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tNetBSD-*|FreeBSD-[[12]].*|OpenBSD-*)\n\t    # Not available on all versions:  check for include file.\n\t    AC_CHECK_HEADER(dlfcn.h, [\n\t\tSHLIB_CFLAGS=\"-fpic\"\n\t\tSHLIB_LD=\"ld -Bshareable -x\"\n\t\tSHLIB_LD_LIBS=\"\"\n\t\tSHLIB_SUFFIX=\".so\"\n\t\tDL_OBJS=\"tclLoadDl.o\"\n\t\tDL_LIBS=\"\"\n\t\tLDFLAGS=\"\"\n\t\tLD_SEARCH_FLAGS=\"\"\n\t\tSHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}\\$\\{DBGX\\}.so.1.0'\n\t    ], [\n\t\tSHLIB_CFLAGS=\"\"\n\t\tSHLIB_LD=\"echo tclLdAout $CC \\{$SHLIB_CFLAGS\\} | `pwd`/tclsh -r\"\n\t\tSHLIB_LD_LIBS='${LIBS}'\n\t\tSHLIB_SUFFIX=\".a\"\n\t\tDL_OBJS=\"tclLoadAout.o\"\n\t\tDL_LIBS=\"\"\n\t\tLDFLAGS=\"\"\n\t\tLD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'\n\t\tSHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}\\$\\{DBGX\\}.a'\n\t    ])\n\n\t    # FreeBSD doesn't handle version numbers with dots.\n\n\t    UNSHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}\\$\\{DBGX\\}.a'\n\t    TCL_LIB_VERSIONS_OK=nodots\n\t    ;;\n\tFreeBSD-*)\n\t    # FreeBSD 3.* and greater have ELF.\n\t    SHLIB_CFLAGS=\"-fpic\"\n\t    SHLIB_LD=\"ld -Bshareable -x\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tNEXTSTEP-*)\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD=\"cc -nostdlib -r\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadNext.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tOS/390-*)\n\t    CFLAGS_OPTIMIZE=\"\"      # Optimizer is buggy\n\t    AC_DEFINE(_OE_SOCKETS)  # needed in sys/socket.h\n\t    ;;      \n\tOSF1-1.0|OSF1-1.1|OSF1-1.2)\n\t    # OSF/1 1.[012] from OSF, and derivatives, including Paragon OSF/1\n\t    SHLIB_CFLAGS=\"\"\n\t    # Hack: make package name same as library name\n\t    SHLIB_LD='ld -R -export $@:'\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadOSF.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tOSF1-1.*)\n\t    # OSF/1 1.3 from OSF using ELF, and derivatives, including AD2\n\t    SHLIB_CFLAGS=\"-fpic\"\n\t    SHLIB_LD=\"ld -shared\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tOSF1-V*)\n\t    # Digital OSF/1\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD='ld -shared -expect_unresolved \"*\"'\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'\n\t    ;;\n\tRISCos-*)\n\t    SHLIB_CFLAGS=\"-G 0\"\n\t    SHLIB_LD=\"echo tclLdAout $CC \\{$SHLIB_CFLAGS\\} | `pwd`/tclsh -r -G 0\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".a\"\n\t    DL_OBJS=\"tclLoadAout.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"-Wl,-D,08000000\"\n\t    LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'\n\t    ;;\n\tSCO_SV-3.2*)\n\t    # Note, dlopen is available only on SCO 3.2.5 and greater.  However,\n\t    # this test works, since \"uname -s\" was non-standard in 3.2.4 and\n\t    # below.\n\t    SHLIB_CFLAGS=\"-Kpic -belf\"\n\t    SHLIB_LD=\"ld -G\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"-belf -Wl,-Bexport\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tSINIX*5.4*)\n\t    SHLIB_CFLAGS=\"-K PIC\"\n\t    SHLIB_LD=\"cc -G\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tSunOS-4*)\n\t    SHLIB_CFLAGS=\"-PIC\"\n\t    SHLIB_LD=\"ld\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'\n\n\t    # SunOS can't handle version numbers with dots in them in library\n\t    # specs, like -ltcl7.5, so use -ltcl75 instead.  Also, it\n\t    # requires an extra version number at the end of .so file names.\n\t    # So, the library has to have a name like libtcl75.so.1.0\n\n\t    SHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}\\$\\{DBGX\\}.so.1.0'\n\t    UNSHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}\\$\\{DBGX\\}.a'\n\t    TCL_LIB_VERSIONS_OK=nodots\n\t    ;;\n\tSunOS-5.[[0-6]]*)\n\t    SHLIB_CFLAGS=\"-KPIC\"\n\t    SHLIB_LD=\"/usr/ccs/bin/ld -G -z text\"\n\n\t    # Note: need the LIBS below, otherwise Tk won't find Tcl's\n\t    # symbols when dynamically loaded into tclsh.\n\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS='-Wl,-R,${LIB_RUNTIME_DIR}'\n\t    ;;\n\tSunOS-5*)\n\t    SHLIB_CFLAGS=\"-KPIC\"\n\t    SHLIB_LD=\"/usr/ccs/bin/ld -G -z text\"\n\t    LDFLAGS=\"\"\n    \n\t    do64bit_ok=no\n\t    if test \"$do64bit\" = \"yes\" ; then\n\t    arch=`isainfo`\n\t    if test \"$arch\" = \"sparcv9 sparc\" ; then\n\t\tif test \"$CC\" != \"gcc\" -a `$CC -v 2>&1 | grep -c gcc` = \"0\" ; then\n\t\tdo64bit_ok=yes\n\t\tEXTRA_CFLAGS=\"-xarch=v9\"\n\t\tLDFLAGS=\"-xarch=v9\"\n\t\telse \n\t\tAC_MSG_WARN(\"64bit mode not supported using GCC on $system\")\n\t\tfi\n\t    else\n\t\tAC_MSG_WARN(\"64bit mode only supported sparcv9 system\")\n\t    fi\n\t    fi\n\t    \n\t    # Note: need the LIBS below, otherwise Tk won't find Tcl's\n\t    # symbols when dynamically loaded into tclsh.\n\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    if test \"$CC\" = \"gcc\" -o `$CC -v 2>&1 | grep -c gcc` != \"0\" ; then\n\t\tLD_SEARCH_FLAGS='-Wl,-R,${LIB_RUNTIME_DIR}'\n\t    else\n\t\tLD_SEARCH_FLAGS='-R ${LIB_RUNTIME_DIR}'\n\t    fi\n\t    ;;\n\tULTRIX-4.*)\n\t    SHLIB_CFLAGS=\"-G 0\"\n\t    SHLIB_SUFFIX=\".a\"\n\t    SHLIB_LD=\"echo tclLdAout $CC \\{$SHLIB_CFLAGS\\} | `pwd`/tclsh -r -G 0\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    DL_OBJS=\"tclLoadAout.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"-Wl,-D,08000000\"\n\t    LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'\n\t    ;;\n\tUNIX_SV* | UnixWare-5*)\n\t    SHLIB_CFLAGS=\"-KPIC\"\n\t    SHLIB_LD=\"cc -G\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    # Some UNIX_SV* systems (unixware 1.1.2 for example) have linkers\n\t    # that don't grok the -Bexport option.  Test that it does.\n\t    hold_ldflags=$LDFLAGS\n\t    AC_MSG_CHECKING(for ld accepts -Bexport flag)\n\t    LDFLAGS=\"${LDFLAGS} -Wl,-Bexport\"\n\t    AC_TRY_LINK(, [int i;], found=yes, found=no)\n\t    LDFLAGS=$hold_ldflags\n\t    AC_MSG_RESULT($found)\n\t    if test $found = yes; then\n\t    LDFLAGS=\"-Wl,-Bexport\"\n\t    else\n\t    LDFLAGS=\"\"\n\t    fi\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n    esac\n\n    if test \"$do64bit\" = \"yes\" -a \"$do64bit_ok\" = \"no\" ; then\n    AC_MSG_WARN(\"64bit support being disabled -- not supported on this platform\")\n    fi\n\n    # Step 4: If pseudo-static linking is in use (see K. B. Kenny, \"Dynamic\n    # Loading for Tcl -- What Became of It?\".  Proc. 2nd Tcl/Tk Workshop,\n    # New Orleans, LA, Computerized Processes Unlimited, 1994), then we need\n    # to determine which of several header files defines the a.out file\n    # format (a.out.h, sys/exec.h, or sys/exec_aout.h).  At present, we\n    # support only a file format that is more or less version-7-compatible. \n    # In particular,\n    #\t- a.out files must begin with `struct exec'.\n    #\t- the N_TXTOFF on the `struct exec' must compute the seek address\n    #\t  of the text segment\n    #\t- The `struct exec' must contain a_magic, a_text, a_data, a_bss\n    #\t  and a_entry fields.\n    # The following compilation should succeed if and only if either sys/exec.h\n    # or a.out.h is usable for the purpose.\n    #\n    # Note that the modified COFF format used on MIPS Ultrix 4.x is usable; the\n    # `struct exec' includes a second header that contains information that\n    # duplicates the v7 fields that are needed.\n\n    if test \"x$DL_OBJS\" = \"xtclLoadAout.o\" ; then\n\tAC_MSG_CHECKING(sys/exec.h)\n\tAC_TRY_COMPILE([#include <sys/exec.h>],[\n\t    struct exec foo;\n\t    unsigned long seek;\n\t    int flag;\n#if defined(__mips) || defined(mips)\n\t    seek = N_TXTOFF (foo.ex_f, foo.ex_o);\n#else\n\t    seek = N_TXTOFF (foo);\n#endif\n\t    flag = (foo.a_magic == OMAGIC);\n\t    return foo.a_text + foo.a_data + foo.a_bss + foo.a_entry;\n    ], tcl_ok=usable, tcl_ok=unusable)\n\tAC_MSG_RESULT($tcl_ok)\n\tif test $tcl_ok = usable; then\n\t    AC_DEFINE(USE_SYS_EXEC_H)\n\telse\n\t    AC_MSG_CHECKING(a.out.h)\n\t    AC_TRY_COMPILE([#include <a.out.h>],[\n\t\tstruct exec foo;\n\t\tunsigned long seek;\n\t\tint flag;\n#if defined(__mips) || defined(mips)\n\t\tseek = N_TXTOFF (foo.ex_f, foo.ex_o);\n#else\n\t\tseek = N_TXTOFF (foo);\n#endif\n\t\tflag = (foo.a_magic == OMAGIC);\n\t\treturn foo.a_text + foo.a_data + foo.a_bss + foo.a_entry;\n\t    ], tcl_ok=usable, tcl_ok=unusable)\n\t    AC_MSG_RESULT($tcl_ok)\n\t    if test $tcl_ok = usable; then\n\t\tAC_DEFINE(USE_A_OUT_H)\n\t    else\n\t\tAC_MSG_CHECKING(sys/exec_aout.h)\n\t\tAC_TRY_COMPILE([#include <sys/exec_aout.h>],[\n\t\t    struct exec foo;\n\t\t    unsigned long seek;\n\t\t    int flag;\n#if defined(__mips) || defined(mips)\n\t\t    seek = N_TXTOFF (foo.ex_f, foo.ex_o);\n#else\n\t\t    seek = N_TXTOFF (foo);\n#endif\n\t\t    flag = (foo.a_midmag == OMAGIC);\n\t\t    return foo.a_text + foo.a_data + foo.a_bss + foo.a_entry;\n\t\t], tcl_ok=usable, tcl_ok=unusable)\n\t\tAC_MSG_RESULT($tcl_ok)\n\t\tif test $tcl_ok = usable; then\n\t\t    AC_DEFINE(USE_SYS_EXEC_AOUT_H)\n\t\telse\n\t\t    DL_OBJS=\"\"\n\t\tfi\n\t    fi\n\tfi\n    fi\n\n    # Step 5: disable dynamic loading if requested via a command-line switch.\n\n    AC_ARG_ENABLE(load, [  --disable-load          disallow dynamic loading and \"load\" command],\n\t[tcl_ok=$enableval], [tcl_ok=yes])\n    if test \"$tcl_ok\" = \"no\"; then\n\tDL_OBJS=\"\"\n    fi\n\n    if test \"x$DL_OBJS\" != \"x\" ; then\n\tBUILD_DLTEST=\"\\$(DLTEST_TARGETS)\"\n    else\n\techo \"Can't figure out how to do dynamic loading or shared libraries\"\n\techo \"on this system.\"\n\tSHLIB_CFLAGS=\"\"\n\tSHLIB_LD=\"\"\n\tSHLIB_SUFFIX=\"\"\n\tDL_OBJS=\"tclLoadNone.o\"\n\tDL_LIBS=\"\"\n\tLDFLAGS=\"\"\n\tLD_SEARCH_FLAGS=\"\"\n\tBUILD_DLTEST=\"\"\n    fi\n\n    # If we're running gcc, then change the C flags for compiling shared\n    # libraries to the right flags for gcc, instead of those for the\n    # standard manufacturer compiler.\n\n    if test \"$DL_OBJS\" != \"tclLoadNone.o\" ; then\n\tif test \"$CC\" = \"gcc\" -o `$CC -v 2>&1 | grep -c gcc` != \"0\" ; then\n\t    case $system in\n\t\tAIX-*)\n\t\t    ;;\n\t\tBSD/OS*)\n\t\t    ;;\n\t\tIRIX*)\n\t\t    ;;\n\t\tNetBSD-*|FreeBSD-*|OpenBSD-*)\n\t\t    ;;\n\t\tRISCos-*)\n\t\t    ;;\n\t\tULTRIX-4.*)\n\t\t    ;;\n\t\t*)\n\t\t    SHLIB_CFLAGS=\"-fPIC\"\n\t\t    ;;\n\t    esac\n\tfi\n    fi\n\n    if test \"$SHARED_LIB_SUFFIX\" = \"\" ; then\n\tSHARED_LIB_SUFFIX='${VERSION}\\$\\{DBGX\\}${SHLIB_SUFFIX}'\n    fi\n    if test \"$UNSHARED_LIB_SUFFIX\" = \"\" ; then\n\tUNSHARED_LIB_SUFFIX='${VERSION}\\$\\{DBGX\\}.a'\n    fi\n\n    AC_SUBST(STLIB_LD)\n    AC_SUBST(SHLIB_LD)\n    AC_SUBST(SHLIB_CFLAGS)\n    AC_SUBST(SHLIB_LDFLAGS)\n    AC_SUBST(DL_LIBS)\n    AC_SUBST(CFLAGS_DEBUG)\n    AC_SUBST(CFLAGS_OPTIMIZE)\n    AC_SUBST(LDFLAGS_DEBUG)\n    AC_SUBST(LDFLAGS_OPTIMIZE)\n])\n\n#--------------------------------------------------------------------\n# SC_SERIAL_PORT\n#\n#\tDetermine which interface to use to talk to the serial port.\n#\tNote that #include lines must begin in leftmost column for\n#\tsome compilers to recognize them as preprocessor directives.\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tDefines only one of the following vars:\n#\t\tUSE_TERMIOS\n#\t\tUSE_TERMIO\n#\t\tUSE_SGTTY\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN(SC_SERIAL_PORT, [\n    AC_MSG_CHECKING([termios vs. termio vs. sgtty])\n\n    AC_TRY_RUN([\n#include <termios.h>\n\nmain()\n{\n    struct termios t;\n    if (tcgetattr(0, &t) == 0) {\n\tcfsetospeed(&t, 0);\n\tt.c_cflag |= PARENB | PARODD | CSIZE | CSTOPB;\n\treturn 0;\n    }\n    return 1;\n}], tk_ok=termios, tk_ok=no, tk_ok=no)\n\n    if test $tk_ok = termios; then\n\tAC_DEFINE(USE_TERMIOS)\n    else\n\tAC_TRY_RUN([\n#include <termio.h>\n\nmain()\n{\n    struct termio t;\n    if (ioctl(0, TCGETA, &t) == 0) {\n\tt.c_cflag |= CBAUD | PARENB | PARODD | CSIZE | CSTOPB;\n\treturn 0;\n    }\n    return 1;\n    }], tk_ok=termio, tk_ok=no, tk_ok=no)\n\n    if test $tk_ok = termio; then\n\tAC_DEFINE(USE_TERMIO)\n    else\n\tAC_TRY_RUN([\n#include <sgtty.h>\n\nmain()\n{\n    struct sgttyb t;\n    if (ioctl(0, TIOCGETP, &t) == 0) {\n\tt.sg_ospeed = 0;\n\tt.sg_flags |= ODDP | EVENP | RAW;\n\treturn 0;\n    }\n    return 1;\n}], tk_ok=sgtty, tk_ok=none, tk_ok=none)\n    if test $tk_ok = sgtty; then\n\tAC_DEFINE(USE_SGTTY)\n    fi\n    fi\n    fi\n    AC_MSG_RESULT($tk_ok)\n])\n\n#--------------------------------------------------------------------\n# SC_MISSING_POSIX_HEADERS\n#\n#\tSupply substitutes for missing POSIX header files.  Special\n#\tnotes:\n#\t    - stdlib.h doesn't define strtol, strtoul, or\n#\t      strtod insome versions of SunOS\n#\t    - some versions of string.h don't declare procedures such\n#\t      as strstr\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tDefines some of the following vars:\n#\t\tNO_DIRENT_H\n#\t\tNO_ERRNO_H\n#\t\tNO_VALUES_H\n#\t\tNO_LIMITS_H\n#\t\tNO_STDLIB_H\n#\t\tNO_STRING_H\n#\t\tNO_SYS_WAIT_H\n#\t\tNO_DLFCN_H\n#\t\tHAVE_UNISTD_H\n#\t\tHAVE_SYS_PARAM_H\n#\n#\t\tHAVE_STRING_H ?\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN(SC_MISSING_POSIX_HEADERS, [\n\n    AC_MSG_CHECKING(dirent.h)\n    AC_TRY_LINK([#include <sys/types.h>\n#include <dirent.h>], [\n#ifndef _POSIX_SOURCE\n#   ifdef __Lynx__\n\t/*\n\t * Generate compilation error to make the test fail:  Lynx headers\n\t * are only valid if really in the POSIX environment.\n\t */\n\n\tmissing_procedure();\n#   endif\n#endif\nDIR *d;\nstruct dirent *entryPtr;\nchar *p;\nd = opendir(\"foobar\");\nentryPtr = readdir(d);\np = entryPtr->d_name;\nclosedir(d);\n], tcl_ok=yes, tcl_ok=no)\n\n    if test $tcl_ok = no; then\n\tAC_DEFINE(NO_DIRENT_H)\n    fi\n\n    AC_MSG_RESULT($tcl_ok)\n    AC_CHECK_HEADER(errno.h, , AC_DEFINE(NO_ERRNO_H))\n    AC_CHECK_HEADER(float.h, , AC_DEFINE(NO_FLOAT_H))\n    AC_CHECK_HEADER(values.h, , AC_DEFINE(NO_VALUES_H))\n    AC_CHECK_HEADER(limits.h, , AC_DEFINE(NO_LIMITS_H))\n    AC_CHECK_HEADER(stdlib.h, tcl_ok=1, tcl_ok=0)\n    AC_EGREP_HEADER(strtol, stdlib.h, , tcl_ok=0)\n    AC_EGREP_HEADER(strtoul, stdlib.h, , tcl_ok=0)\n    AC_EGREP_HEADER(strtod, stdlib.h, , tcl_ok=0)\n    if test $tcl_ok = 0; then\n\tAC_DEFINE(NO_STDLIB_H)\n    fi\n    AC_CHECK_HEADER(string.h, tcl_ok=1, tcl_ok=0)\n    AC_EGREP_HEADER(strstr, string.h, , tcl_ok=0)\n    AC_EGREP_HEADER(strerror, string.h, , tcl_ok=0)\n\n    # See also memmove check below for a place where NO_STRING_H can be\n    # set and why.\n\n    if test $tcl_ok = 0; then\n\tAC_DEFINE(NO_STRING_H)\n    fi\n\n    AC_CHECK_HEADER(sys/wait.h, , AC_DEFINE(NO_SYS_WAIT_H))\n    AC_CHECK_HEADER(dlfcn.h, , AC_DEFINE(NO_DLFCN_H))\n\n    # OS/390 lacks sys/param.h (and doesn't need it, by chance).\n\n    AC_HAVE_HEADERS(unistd.h sys/param.h)\n\n])\n\n#--------------------------------------------------------------------\n# SC_PATH_X\n#\n#\tLocate the X11 header files and the X11 library archive.  Try\n#\tthe ac_path_x macro first, but if it doesn't find the X stuff\n#\t(e.g. because there's no xmkmf program) then check through\n#\ta list of possible directories.  Under some conditions the\n#\tautoconf macro will return an include directory that contains\n#\tno include files, so double-check its result just to be safe.\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tSets the the following vars:\n#\t\tXINCLUDES\n#\t\tXLIBSW\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN(SC_PATH_X, [\n    AC_PATH_X\n    not_really_there=\"\"\n    if test \"$no_x\" = \"\"; then\n\tif test \"$x_includes\" = \"\"; then\n\t    AC_TRY_CPP([#include <X11/XIntrinsic.h>], , not_really_there=\"yes\")\n\telse\n\t    if test ! -r $x_includes/X11/Intrinsic.h; then\n\t\tnot_really_there=\"yes\"\n\t    fi\n\tfi\n    fi\n    if test \"$no_x\" = \"yes\" -o \"$not_really_there\" = \"yes\"; then\n\tAC_MSG_CHECKING(for X11 header files)\n\tXINCLUDES=\"# no special path needed\"\n\tAC_TRY_CPP([#include <X11/Intrinsic.h>], , XINCLUDES=\"nope\")\n\tif test \"$XINCLUDES\" = nope; then\n\t    dirs=\"/usr/unsupported/include /usr/local/include /usr/X386/include /usr/X11R6/include /usr/X11R5/include /usr/include/X11R5 /usr/include/X11R4 /usr/openwin/include /usr/X11/include /usr/sww/include\"\n\t    for i in $dirs ; do\n\t\tif test -r $i/X11/Intrinsic.h; then\n\t\t    AC_MSG_RESULT($i)\n\t\t    XINCLUDES=\" -I$i\"\n\t\t    break\n\t\tfi\n\t    done\n\tfi\n    else\n\tif test \"$x_includes\" != \"\"; then\n\t    XINCLUDES=-I$x_includes\n\telse\n\t    XINCLUDES=\"# no special path needed\"\n\tfi\n    fi\n    if test \"$XINCLUDES\" = nope; then\n\tAC_MSG_RESULT(couldn't find any!)\n\tXINCLUDES=\"# no include files found\"\n    fi\n\n    if test \"$no_x\" = yes; then\n\tAC_MSG_CHECKING(for X11 libraries)\n\tXLIBSW=nope\n\tdirs=\"/usr/unsupported/lib /usr/local/lib /usr/X386/lib /usr/X11R6/lib /usr/X11R5/lib /usr/lib/X11R5 /usr/lib/X11R4 /usr/openwin/lib /usr/X11/lib /usr/sww/X11/lib\"\n\tfor i in $dirs ; do\n\t    if test -r $i/libX11.a -o -r $i/libX11.so -o -r $i/libX11.sl; then\n\t\tAC_MSG_RESULT($i)\n\t\tXLIBSW=\"-L$i -lX11\"\n\t\tx_libraries=\"$i\"\n\t\tbreak\n\t    fi\n\tdone\n    else\n\tif test \"$x_libraries\" = \"\"; then\n\t    XLIBSW=-lX11\n\telse\n\t    XLIBSW=\"-L$x_libraries -lX11\"\n\tfi\n    fi\n    if test \"$XLIBSW\" = nope ; then\n\tAC_CHECK_LIB(Xwindow, XCreateWindow, XLIBSW=-lXwindow)\n    fi\n    if test \"$XLIBSW\" = nope ; then\n\tAC_MSG_RESULT(couldn't find any!  Using -lX11.)\n\tXLIBSW=-lX11\n    fi\n])\n#--------------------------------------------------------------------\n# SC_BLOCKING_STYLE\n#\n#\tThe statements below check for systems where POSIX-style\n#\tnon-blocking I/O (O_NONBLOCK) doesn't work or is unimplemented. \n#\tOn these systems (mostly older ones), use the old BSD-style\n#\tFIONBIO approach instead.\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tDefines some of the following vars:\n#\t\tHAVE_SYS_IOCTL_H\n#\t\tHAVE_SYS_FILIO_H\n#\t\tUSE_FIONBIO\n#\t\tO_NONBLOCK\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN(SC_BLOCKING_STYLE, [\n    AC_CHECK_HEADERS(sys/ioctl.h)\n    AC_CHECK_HEADERS(sys/filio.h)\n    AC_MSG_CHECKING([FIONBIO vs. O_NONBLOCK for nonblocking I/O])\n    if test -f /usr/lib/NextStep/software_version; then\n\tsystem=NEXTSTEP-`awk '/3/,/3/' /usr/lib/NextStep/software_version`\n    else\n\tsystem=`uname -s`-`uname -r`\n\tif test \"$?\" -ne 0 ; then\n\t    system=unknown\n\telse\n\t    # Special check for weird MP-RAS system (uname returns weird\n\t    # results, and the version is kept in special file).\n\t\n\t    if test -r /etc/.relid -a \"X`uname -n`\" = \"X`uname -s`\" ; then\n\t\tsystem=MP-RAS-`awk '{print $3}' /etc/.relid'`\n\t    fi\n\t    if test \"`uname -s`\" = \"AIX\" ; then\n\t\tsystem=AIX-`uname -v`.`uname -r`\n\t    fi\n\tfi\n    fi\n    case $system in\n\t# There used to be code here to use FIONBIO under AIX.  However, it\n\t# was reported that FIONBIO doesn't work under AIX 3.2.5.  Since\n\t# using O_NONBLOCK seems fine under AIX 4.*, I removed the FIONBIO\n\t# code (JO, 5/31/97).\n\n\tOSF*)\n\t    AC_DEFINE(USE_FIONBIO)\n\t    AC_MSG_RESULT(FIONBIO)\n\t    ;;\n\tSunOS-4*)\n\t    AC_DEFINE(USE_FIONBIO)\n\t    AC_MSG_RESULT(FIONBIO)\n\t    ;;\n\tULTRIX-4.*)\n\t    AC_DEFINE(USE_FIONBIO)\n\t    AC_MSG_RESULT(FIONBIO)\n\t    ;;\n\t*)\n\t    AC_MSG_RESULT(O_NONBLOCK)\n\t    ;;\n    esac\n])\n\n#--------------------------------------------------------------------\n# SC_HAVE_VFORK\n#\n#\tCheck to see whether the system provides a vfork kernel call.\n#\tIf not, then use fork instead.  Also, check for a problem with\n#\tvforks and signals that can cause core dumps if a vforked child\n#\tresets a signal handler.  If the problem exists, then use fork\n#\tinstead of vfork.\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tDefines some of the following vars:\n#\t\tvfork (=fork)\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN(SC_HAVE_VFORK, [\n    AC_TYPE_SIGNAL()\n    AC_CHECK_FUNC(vfork, tcl_ok=1, tcl_ok=0)\n    if test \"$tcl_ok\" = 1; then\n\tAC_MSG_CHECKING([vfork/signal bug]);\n\tAC_TRY_RUN([\n#include <stdio.h>\n#include <signal.h>\n#include <sys/wait.h>\nint gotSignal = 0;\nsigProc(sig)\n    int sig;\n{\n    gotSignal = 1;\n}\nmain()\n{\n    int pid, sts;\n    (void) signal(SIGCHLD, sigProc);\n    pid = vfork();\n    if (pid <  0) {\n\texit(1);\n    } else if (pid == 0) {\n\t(void) signal(SIGCHLD, SIG_DFL);\n\t_exit(0);\n    } else {\n\t(void) wait(&sts);\n    }\n    exit((gotSignal) ? 0 : 1);\n}], tcl_ok=1, tcl_ok=0, tcl_ok=0)\n\n\tif test \"$tcl_ok\" = 1; then\n\t    AC_MSG_RESULT(ok)\n\telse\n\t    AC_MSG_RESULT([buggy, using fork instead])\n\tfi\n    fi\n    rm -f core\n    if test \"$tcl_ok\" = 0; then\n\tAC_DEFINE(vfork, fork)\n    fi\n])\n\n#--------------------------------------------------------------------\n# SC_TIME_HANLDER\n#\n#\tChecks how the system deals with time.h, what time structures\n#\tare used on the system, and what fields the structures have.\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tDefines some of the following vars:\n#\t\tUSE_DELTA_FOR_TZ\n#\t\tHAVE_TM_GMTOFF\n#\t\tHAVE_TM_TZADJ\n#\t\tHAVE_TIMEZONE_VAR\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN(SC_TIME_HANDLER, [\n    AC_CHECK_HEADERS(sys/time.h)\n    AC_HEADER_TIME\n    AC_STRUCT_TIMEZONE\n\n    AC_MSG_CHECKING([tm_tzadj in struct tm])\n    AC_TRY_COMPILE([#include <time.h>], [struct tm tm; tm.tm_tzadj;],\n\t    [AC_DEFINE(HAVE_TM_TZADJ)\n\t    AC_MSG_RESULT(yes)],\n\t    AC_MSG_RESULT(no))\n\n    AC_MSG_CHECKING([tm_gmtoff in struct tm])\n    AC_TRY_COMPILE([#include <time.h>], [struct tm tm; tm.tm_gmtoff;],\n\t    [AC_DEFINE(HAVE_TM_GMTOFF)\n\t    AC_MSG_RESULT(yes)],\n\t    AC_MSG_RESULT(no))\n\n    #\n    # Its important to include time.h in this check, as some systems\n    # (like convex) have timezone functions, etc.\n    #\n    have_timezone=no\n    AC_MSG_CHECKING([long timezone variable])\n    AC_TRY_COMPILE([#include <time.h>],\n\t    [extern long timezone;\n\t    timezone += 1;\n\t    exit (0);],\n\t    [have_timezone=yes\n\t    AC_DEFINE(HAVE_TIMEZONE_VAR)\n\t    AC_MSG_RESULT(yes)],\n\t    AC_MSG_RESULT(no))\n\n    #\n    # On some systems (eg IRIX 6.2), timezone is a time_t and not a long.\n    #\n    if test \"$have_timezone\" = no; then\n    AC_MSG_CHECKING([time_t timezone variable])\n    AC_TRY_COMPILE([#include <time.h>],\n\t    [extern time_t timezone;\n\t    timezone += 1;\n\t    exit (0);],\n\t    [AC_DEFINE(HAVE_TIMEZONE_VAR)\n\t    AC_MSG_RESULT(yes)],\n\t    AC_MSG_RESULT(no))\n    fi\n\n    #\n    # AIX does not have a timezone field in struct tm. When the AIX bsd\n    # library is used, the timezone global and the gettimeofday methods are\n    # to be avoided for timezone deduction instead, we deduce the timezone\n    # by comparing the localtime result on a known GMT value.\n    #\n\n    if test \"`uname -s`\" = \"AIX\" ; then\n\tAC_CHECK_LIB(bsd, gettimeofday, libbsd=yes)\n\tif test $libbsd = yes; then\n\t    AC_DEFINE(USE_DELTA_FOR_TZ)\n\tfi\n    fi\n])\n\n#--------------------------------------------------------------------\n# SC_BUGGY_STRTOD\n#\n#\tUnder Solaris 2.4, strtod returns the wrong value for the\n#\tterminating character under some conditions.  Check for this\n#\tand if the problem exists use a substitute procedure\n#\t\"fixstrtod\" (provided by Tcl) that corrects the error.\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tMight defines some of the following vars:\n#\t\tstrtod (=fixstrtod)\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN(SC_BUGGY_STRTOD, [\n    AC_CHECK_FUNC(strtod, tk_strtod=1, tk_strtod=0)\n    if test \"$tk_strtod\" = 1; then\n\tAC_MSG_CHECKING([for Solaris 2.4 strtod bug])\n\tAC_TRY_RUN([\n\t    extern double strtod();\n\t    int main()\n\t    {\n\t\tchar *string = \"NaN\";\n\t\tchar *term;\n\t\tstrtod(string, &term);\n\t\tif ((term != string) && (term[-1] == 0)) {\n\t\t    exit(1);\n\t\t}\n\t\texit(0);\n\t    }], tk_ok=1, tk_ok=0, tk_ok=0)\n\tif test \"$tk_ok\" = 1; then\n\t    AC_MSG_RESULT(ok)\n\telse\n\t    AC_MSG_RESULT(buggy)\n\t    AC_DEFINE(strtod, fixstrtod)\n\tfi\n    fi\n])\n\n#--------------------------------------------------------------------\n# SC_TCL_LINK_LIBS\n#\n#\tSearch for the libraries needed to link the Tcl shell.\n#\tThings like the math library (-lm) and socket stuff (-lsocket vs.\n#\t-lnsl) are dealt with here.\n#\n# Arguments:\n#\tRequires the following vars to be set in the Makefile:\n#\t\tDL_LIBS\n#\t\tLIBS\n#\t\tMATH_LIBS\n#\t\n# Results:\n#\n#\tSubst's the following var:\n#\t\tTCL_LIBS\n#\t\tMATH_LIBS\n#\n#\tMight append to the following vars:\n#\t\tLIBS\n#\n#\tMight define the following vars:\n#\t\tHAVE_NET_ERRNO_H\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN(SC_TCL_LINK_LIBS, [\n    #--------------------------------------------------------------------\n    # On a few very rare systems, all of the libm.a stuff is\n    # already in libc.a.  Set compiler flags accordingly.\n    # Also, Linux requires the \"ieee\" library for math to work\n    # right (and it must appear before \"-lm\").\n    #--------------------------------------------------------------------\n\n    AC_CHECK_FUNC(sin, MATH_LIBS=\"\", MATH_LIBS=\"-lm\")\n    AC_CHECK_LIB(ieee, main, [MATH_LIBS=\"-lieee $MATH_LIBS\"])\n\n    #--------------------------------------------------------------------\n    # On AIX systems, libbsd.a has to be linked in to support\n    # non-blocking file IO.  This library has to be linked in after\n    # the MATH_LIBS or it breaks the pow() function.  The way to\n    # insure proper sequencing, is to add it to the tail of MATH_LIBS.\n    # This library also supplies gettimeofday.\n    #--------------------------------------------------------------------\n\n    libbsd=no\n    if test \"`uname -s`\" = \"AIX\" ; then\n\tAC_CHECK_LIB(bsd, gettimeofday, libbsd=yes)\n\tif test $libbsd = yes; then\n\t    MATH_LIBS=\"$MATH_LIBS -lbsd\"\n\tfi\n    fi\n\n\n    #--------------------------------------------------------------------\n    # Interactive UNIX requires -linet instead of -lsocket, plus it\n    # needs net/errno.h to define the socket-related error codes.\n    #--------------------------------------------------------------------\n\n    AC_CHECK_LIB(inet, main, [LIBS=\"$LIBS -linet\"])\n    AC_CHECK_HEADER(net/errno.h, AC_DEFINE(HAVE_NET_ERRNO_H))\n\n    #--------------------------------------------------------------------\n    #\tCheck for the existence of the -lsocket and -lnsl libraries.\n    #\tThe order here is important, so that they end up in the right\n    #\torder in the command line generated by make.  Here are some\n    #\tspecial considerations:\n    #\t1. Use \"connect\" and \"accept\" to check for -lsocket, and\n    #\t   \"gethostbyname\" to check for -lnsl.\n    #\t2. Use each function name only once:  can't redo a check because\n    #\t   autoconf caches the results of the last check and won't redo it.\n    #\t3. Use -lnsl and -lsocket only if they supply procedures that\n    #\t   aren't already present in the normal libraries.  This is because\n    #\t   IRIX 5.2 has libraries, but they aren't needed and they're\n    #\t   bogus:  they goof up name resolution if used.\n    #\t4. On some SVR4 systems, can't use -lsocket without -lnsl too.\n    #\t   To get around this problem, check for both libraries together\n    #\t   if -lsocket doesn't work by itself.\n    #--------------------------------------------------------------------\n\n    tcl_checkBoth=0\n    AC_CHECK_FUNC(connect, tcl_checkSocket=0, tcl_checkSocket=1)\n    if test \"$tcl_checkSocket\" = 1; then\n\tAC_CHECK_LIB(socket, main, LIBS=\"$LIBS -lsocket\", tcl_checkBoth=1)\n    fi\n    if test \"$tcl_checkBoth\" = 1; then\n\ttk_oldLibs=$LIBS\n\tLIBS=\"$LIBS -lsocket -lnsl\"\n\tAC_CHECK_FUNC(accept, tcl_checkNsl=0, [LIBS=$tk_oldLibs])\n    fi\n    AC_CHECK_FUNC(gethostbyname, , AC_CHECK_LIB(nsl, main,\n\t    [LIBS=\"$LIBS -lnsl\"]))\n    \n    # Don't perform the eval of the libraries here because DL_LIBS\n    # won't be set until we call SC_CONFIG_CFLAGS\n\n    TCL_LIBS='${DL_LIBS} ${LIBS} ${MATH_LIBS}'\n    AC_SUBST(TCL_LIBS)\n    AC_SUBST(MATH_LIBS)\n])\n\n#------------------------------------------------------------------------\n# SC_MAKE_LIB --\n#\n#\tGenerate a line that can be used to build a shared/unshared library\n#\tin a platform independent manner.\n#\n# Arguments:\n#\tnone\n#\n#\tRequires:\n#\n# Results:\n#\n#\tDefines the following vars:\n#\t\tMAKE_LIB\tMakefile rule for building a library\n#\t\tMAKE_SHARED_LIB\tMakefile rule for building a shared library\n#\t\tMAKE_UNSHARED_LIB\tMakefile rule for building a static\n#\t\t\t\tlibrary\n#------------------------------------------------------------------------\n\nAC_DEFUN(SC_MAKE_LIB, [\n    case \"`uname -s`\" in\n\t*win32* | *WIN32* | *CYGWIN_NT*)\n\t    if test \"${CC-cc}\" = \"cl\"; then\n\t\tMAKE_STATIC_LIB=\"\\${STLIB_LD} -out:\\[$]@ \\$(\\[$]@_OBJECTS) \"\n\t\tMAKE_SHARED_LIB=\"\\${SHLIB_LD} \\${SHLIB_LDFLAGS} \\${SHLIB_LD_LIBS} \\$(LDFLAGS) -out:\\[$]@ \\$(\\[$]@_OBJECTS) \"\n\t    fi\n\t    ;;\n\t*)\n\t    MAKE_STATIC_LIB=\"\\${STLIB_LD} \\[$]@ \\$(\\[$]@_OBJECTS)\"\n\t    MAKE_SHARED_LIB=\"\\${SHLIB_LD} -o \\[$]@ \\$(\\[$]@_OBJECTS) \\${SHLIB_LDFLAGS} \\${SHLIB_LD_LIBS}\"\n\t    ;;\n    esac\n\n    if test \"${SHARED_BUILD}\" = \"1\" ; then\n\tMAKE_LIB=${MAKE_SHARED_LIB}\n    else\n\tMAKE_LIB=${MAKE_STATIC_LIB}\n    fi\n\n    AC_SUBST(MAKE_LIB)\n    AC_SUBST(MAKE_SHARED_LIB)\n    AC_SUBST(MAKE_STATIC_LIB)\n])\n\n#------------------------------------------------------------------------\n# SC_LIB_SPEC --\n#\n#\tCompute the name of an existing object library located in libdir\n#\tfrom the given base name and produce the appropriate linker flags.\n#\n# Arguments:\n#\tbasename\tThe base name of the library without version\n#\t\t\tnumbers, extensions, or \"lib\" prefixes.\n#\textra_dir\tExtra directory in which to search for the\n#\t\t\tlibrary.  This location is used first, then\n#\t\t\t$prefix/$exec-prefix, then some defaults.\n#\n# Requires:\n#       The following vars to be set:\n#                       TCL_BIN_DIR\n#\tCYGPATH\t\tcommand used to generate native style paths\n#\n# Results:\n#\n#\tDefines the following vars:\n#\t\t${basename}_LIB_NAME\tThe computed library name.\n#\t\t${basename}_LIB_SPEC\tThe computed linker flags.\n#------------------------------------------------------------------------\n\nAC_DEFUN(SC_LIB_SPEC, [\n    AC_MSG_CHECKING(for $1 library)\n\n    # Look in exec-prefix and prefix for the library.  If neither of\n    # these were specified, look in libdir.  It doesn't matter if libdir\n    # wasn't specified since a search in the unspecified directory will\n    # fail (NONE/lib)\n\n    if test x\"${exec_prefix}\" != x\"NONE\" ; then\n\tsc_lib_dir=\"${exec_prefix}/lib\"\n    elif test x\"${prefix}\" != x\"NONE\" ; then\n\tsc_lib_dir=\"${prefix}/lib\"\n    else\n\teval \"sc_lib_dir=${libdir}\"\n    fi\n\n    if test x\"$2\" != x ; then\n\tsc_extra_lib_dir=$2\n    else\n\tsc_extra_lib_dir=NONE\n    fi\n\n    for i in \\\n\t    `ls -dr ${sc_extra_lib_dir}/$1[[0-9]]*.lib 2>/dev/null ` \\\n\t    `ls -dr ${sc_extra_lib_dir}/lib$1[[0-9]]* 2>/dev/null ` \\\n\t    `ls -dr ${TCL_BIN_DIR}/$1[[0-9]]*.lib 2>/dev/null ` \\\n\t    `ls -dr ${TCL_BIN_DIR}/lib$1[[0-9]]* 2>/dev/null ` \\\n\t    `ls -dr ${sc_lib_dir}/$1[[0-9]]*.lib 2>/dev/null ` \\\n\t    `ls -dr ${sc_lib_dir}/lib$1[[0-9]]* 2>/dev/null ` \\\n\t    `ls -dr /usr/lib/$1[[0-9]]*.lib 2>/dev/null ` \\\n\t    `ls -dr /usr/lib/lib$1[[0-9]]* 2>/dev/null ` \\\n\t    `ls -dr /usr/local/lib/$1[[0-9]]*.lib 2>/dev/null ` \\\n\t    `ls -dr /usr/local/lib/lib$1[[0-9]]* 2>/dev/null ` ; do\n\tif test -f \"$i\" ; then\n\n\t    sc_lib_name_dir=`dirname $i`\n\t    $1_LIB_NAME=`basename $i`\n\t    $1_LIB_PATH_NAME=$i\n\t    break\n\tfi\n    done\n\n    if test x\"${$1_LIB_PATH_NAME}\" = x ; then\n\tAC_MSG_ERROR(not found)\n    else\n        case \"`uname -s`\" in\n\t    *win32* | *WIN32* | *CYGWIN_NT*)\n\t        $1_LIB_SPEC=\\\"`${CYGPATH} ${$1_LIB_PATH_NAME}`\\\"\n\t        ;;\n\t    *)\n\t        # Strip off the leading \"lib\" and trailing \".a\" or \".so\"\n\n\t        sc_lib_name_lib=`echo ${$1_LIB_NAME}|sed -e 's/^lib//' -e 's/\\.[[^.]]*$//'`\n\t        $1_LIB_SPEC=\"-L${sc_lib_name_dir} -l${sc_lib_name_lib}\"\n\t        ;;\n        esac\n        if test x\"$1_LIB_NAME\" = x ; then\n\t    AC_MSG_ERROR(not found)\n        else\n\t    AC_MSG_RESULT(${$1_LIB_SPEC})\n        fi\n    fi\n])\n\n#------------------------------------------------------------------------\n# SC_PRIVATE_TCL_HEADERS --\n#\n#\tLocate the private Tcl include files\n#\n# Arguments:\n#\n#\tRequires:\n#\t\tTCL_SRC_DIR\tAssumes that SC_LOAD_TCLCONFIG has\n#\t\t\t\t already been called.\n#\n# Results:\n#\n#\tSubsts the following vars:\n#\t\tTCL_TOP_DIR_NATIVE\n#\t\tTCL_GENERIC_DIR_NATIVE\n#\t\tTCL_UNIX_DIR_NATIVE\n#\t\tTCL_WIN_DIR_NATIVE\n#\t\tTCL_BMAP_DIR_NATIVE\n#\t\tTCL_TOOL_DIR_NATIVE\n#\t\tTCL_PLATFORM_DIR_NATIVE\n#\t\tTCL_BIN_DIR_NATIVE\n#\t\tTCL_INCLUDES\n#------------------------------------------------------------------------\n\nAC_DEFUN(SC_PRIVATE_TCL_HEADERS, [\n    AC_MSG_CHECKING(for Tcl private include files)\n\n    case \"`uname -s`\" in\n\t*win32* | *WIN32* | *CYGWIN_NT*)\n\t    TCL_TOP_DIR_NATIVE=\\\"`${CYGPATH} ${TCL_SRC_DIR}/..`\\\"\n\t    TCL_GENERIC_DIR_NATIVE=\\\"`${CYGPATH} ${TCL_SRC_DIR}/../generic`\\\"\n\t    TCL_UNIX_DIR_NATIVE=\\\"`${CYGPATH} ${TCL_SRC_DIR}/../unix`\\\"\n\t    TCL_WIN_DIR_NATIVE=\\\"`${CYGPATH} ${TCL_SRC_DIR}/../win`\\\"\n\t    TCL_BMAP_DIR_NATIVE=\\\"`${CYGPATH} ${TCL_SRC_DIR}/../bitmaps`\\\"\n\t    TCL_TOOL_DIR_NATIVE=\\\"`${CYGPATH} ${TCL_SRC_DIR}/../tools`\\\"\n\t    TCL_COMPAT_DIR_NATIVE=\\\"`${CYGPATH} ${TCL_SRC_DIR}/../compat`\\\"\n\t    TCL_PLATFORM_DIR_NATIVE=${TCL_WIN_DIR_NATIVE}\n\t;;\n\t*)\n\t    TCL_TOP_DIR_NATIVE='$(TCL_SRC_DIR)'\n\t    TCL_GENERIC_DIR_NATIVE='$(TCL_TOP_DIR_NATIVE)/generic'\n\t    TCL_UNIX_DIR_NATIVE='$(TCL_TOP_DIR_NATIVE)/unix'\n\t    TCL_WIN_DIR_NATIVE='$(TCL_TOP_DIR_NATIVE)/win'\n\t    TCL_BMAP_DIR_NATIVE='$(TCL_TOP_DIR_NATIVE)/bitmaps'\n\t    TCL_TOOL_DIR_NATIVE='$(TCL_TOP_DIR_NATIVE)/tools'\n\t    TCL_COMPAT_DIR_NATIVE='$(TCL_TOP_DIR_NATIVE)/compat'\n\t    TCL_PLATFORM_DIR_NATIVE=${TCL_UNIX_DIR_NATIVE}\n\t;;\n    esac\n\n    AC_SUBST(TCL_TOP_DIR_NATIVE)\n    AC_SUBST(TCL_GENERIC_DIR_NATIVE)\n    AC_SUBST(TCL_UNIX_DIR_NATIVE)\n    AC_SUBST(TCL_WIN_DIR_NATIVE)\n    AC_SUBST(TCL_BMAP_DIR_NATIVE)\n    AC_SUBST(TCL_TOOL_DIR_NATIVE)\n    AC_SUBST(TCL_PLATFORM_DIR_NATIVE)\n\n    TCL_INCLUDES=\"-I${TCL_GENERIC_DIR_NATIVE} -I${TCL_PLATFORM_DIR_NATIVE}\"\n    AC_SUBST(TCL_INCLUDES)\n    AC_MSG_RESULT(Using srcdir found in tclConfig.sh)\n])\n\n#------------------------------------------------------------------------\n# SC_PUBLIC_TCL_HEADERS --\n#\n#\tLocate the installed public Tcl header files\n#\n# Arguments:\n#\tNone.\n#\n# Requires:\n#\tCYGPATH must be set\n#\n# Results:\n#\n#\tAdds a --with-tclinclude switch to configure.\n#\tResult is cached.\n#\n#\tSubsts the following vars:\n#\t\tTCL_INCLUDES\n#------------------------------------------------------------------------\n\nAC_DEFUN(SC_PUBLIC_TCL_HEADERS, [\n    AC_MSG_CHECKING(for Tcl public headers)\n\n    AC_ARG_WITH(tclinclude, [ --with-tclinclude      directory containing the public Tcl header files.], with_tclinclude=${withval})\n\n    if test x\"${with_tclinclude}\" != x ; then\n\tif test -f \"${with_tclinclude}/tcl.h\" ; then\n\t    ac_cv_c_tclh=${with_tclinclude}\n\telse\n\t    AC_MSG_ERROR([${with_tclinclude} directory does not contain Tcl public header file tcl.h])\n\tfi\n    else\n\tAC_CACHE_VAL(ac_cv_c_tclh, [\n\t    # Use the value from --with-tclinclude, if it was given\n\n\t    if test x\"${with_tclinclude}\" != x ; then\n\t\tac_cv_c_tclh=${with_tclinclude}\n\t    else\n\t\t# Check in the includedir, if --prefix was specified\n\n\t\teval \"temp_includedir=${includedir}\"\n\t\tfor i in \\\n\t\t\t`ls -d ${temp_includedir} 2>/dev/null` \\\n\t\t\t/usr/local/include /usr/include ; do\n\t\t    if test -f \"$i/tcl.h\" ; then\n\t\t\tac_cv_c_tclh=$i\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\t])\n    fi\n\n    # Print a message based on how we determined the include path\n\n    if test x\"${ac_cv_c_tclh}\" = x ; then\n\tAC_MSG_ERROR(tcl.h not found.  Please specify its location with --with-tclinclude)\n    else\n\tAC_MSG_RESULT(${ac_cv_c_tclh})\n    fi\n\n    # Convert to a native path and substitute into the output files.\n\n    INCLUDE_DIR_NATIVE=`${CYGPATH} ${ac_cv_c_tclh}`\n\n    TCL_INCLUDES=-I\\\"${INCLUDE_DIR_NATIVE}\\\"\n\n    AC_SUBST(TCL_INCLUDES)\n])\n\n#------------------------------------------------------------------------\n# SC_PRIVATE_TK_HEADERS --\n#\n#\tLocate the private Tk include files\n#\n# Arguments:\n#\n#\tRequires:\n#\t\tTK_SRC_DIR\tAssumes that SC_LOAD_TKCONFIG has\n#\t\t\t\t already been called.\n#\n# Results:\n#\n#\tSubsts the following vars:\n#\t\tTK_INCLUDES\n#------------------------------------------------------------------------\n\nAC_DEFUN(SC_PRIVATE_TK_HEADERS, [\n    AC_MSG_CHECKING(for Tk private include files)\n\n    case \"`uname -s`\" in\n\t*win32* | *WIN32* | *CYGWIN_NT*)\n\t    TK_UNIX_DIR_NATIVE=\\\"`${CYGPATH} ${TK_SRC_DIR}/../unix`\\\"\n\t    TK_WIN_DIR_NATIVE=\\\"`${CYGPATH} ${TK_SRC_DIR}/../win`\\\"\n\t    TK_GENERIC_DIR_NATIVE=\\\"`${CYGPATH} ${TK_SRC_DIR}/../generic`\\\"\n\t    TK_XLIB_DIR_NATIVE=\\\"`${CYGPATH} ${TK_SRC_DIR}/../xlib`\\\"\n\t    TK_PLATFORM_DIR_NATIVE=${TK_WIN_DIR_NATIVE}\n\n\t    TK_INCLUDES=\"-I${TK_GENERIC_DIR_NATIVE} -I${TK_PLATFORM_DIR_NATIVE} -I${TK_XLIB_DIR_NATIVE}\"\n\t;;\n\t*)\n\t    TK_GENERIC_DIR_NATIVE='$(TK_TOP_DIR_NATIVE)/generic'\n\t    TK_UNIX_DIR_NATIVE='$(TK_TOP_DIR_NATIVE)/unix'\n\t    TK_WIN_DIR_NATIVE='$(TK_TOP_DIR_NATIVE)/win'\n\t    TK_PLATFORM_DIR_NATIVE=${TK_UNIX_DIR_NATIVE}\n\n\t    TK_INCLUDES=\"-I${TK_GENERIC_DIR_NATIVE} -I${TK_PLATFORM_DIR_NATIVE}\"\n\t;;\n    esac\n\n    AC_SUBST(TK_UNIX_DIR_NATIVE)\n    AC_SUBST(TK_WIN_DIR_NATIVE)\n    AC_SUBST(TK_GENERIC_DIR_NATIVE)\n    AC_SUBST(TK_XLIB_DIR_NATIVE)\n    AC_SUBST(TK_PLATFORM_DIR_NATIVE)\n\n    AC_SUBST(TK_INCLUDES)\n    AC_MSG_RESULT(Using srcdir found in tkConfig.sh)\n])\n\n#------------------------------------------------------------------------\n# SC_PUBLIC_TK_HEADERS --\n#\n#\tLocate the installed public Tk header files\n#\n# Arguments:\n#\tNone.\n#\n# Requires:\n#\tCYGPATH must be set\n#\n# Results:\n#\n#\tAdds a --with-tkinclude switch to configure.\n#\tResult is cached.\n#\n#\tSubsts the following vars:\n#\t\tTK_INCLUDES\n#------------------------------------------------------------------------\n\nAC_DEFUN(SC_PUBLIC_TK_HEADERS, [\n    AC_MSG_CHECKING(for Tk public headers)\n\n    AC_ARG_WITH(tkinclude, [ --with-tkinclude      directory containing the public Tk header files.], with_tkinclude=${withval})\n\n    if test x\"${with_tkinclude}\" != x ; then\n\tif test -f \"${with_tkinclude}/tk.h\" ; then\n\t    ac_cv_c_tkh=${with_tkinclude}\n\telse\n\t    AC_MSG_ERROR([${with_tkinclude} directory does not contain Tk public header file tk.h])\n\tfi\n    else\n\tAC_CACHE_VAL(ac_cv_c_tkh, [\n\t    # Use the value from --with-tkinclude, if it was given\n\n\t    if test x\"${with_tkinclude}\" != x ; then\n\t\tac_cv_c_tkh=${with_tkinclude}\n\t    else\n\t\t# Check in the includedir, if --prefix was specified\n\n\t\teval \"temp_includedir=${includedir}\"\n\t\tfor i in \\\n\t\t\t`ls -d ${temp_includedir} 2>/dev/null` \\\n\t\t\t/usr/local/include /usr/include ; do\n\t\t    if test -f \"$i/tk.h\" ; then\n\t\t\tac_cv_c_tkh=$i\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\t])\n    fi\n\n    # Print a message based on how we determined the include path\n\n    if test x\"${ac_cv_c_tkh}\" = x ; then\n\tAC_MSG_ERROR(tk.h not found.  Please specify its location with --with-tkinclude)\n    else\n\tAC_MSG_RESULT(${ac_cv_c_tkh})\n    fi\n\n    # Convert to a native path and substitute into the output files.\n\n    INCLUDE_DIR_NATIVE=`${CYGPATH} ${ac_cv_c_tkh}`\n\n    TK_INCLUDES=-I\\\"${INCLUDE_DIR_NATIVE}\\\"\n\n    AC_SUBST(TK_INCLUDES)\n])\n\n#------------------------------------------------------------------------\n# SC_SIMPLE_EXEEXT\n#\tSelect the executable extension based on the host type.  This\n#\tis a lightweight replacement for AC_EXEEXT that doesn't require\n#\ta compiler.\n#\n# Arguments\n#\tnone\n#\n# Results\n#\tSubst's the following values:\n#\t\tEXEEXT\n#------------------------------------------------------------------------\n\nAC_DEFUN(SC_SIMPLE_EXEEXT, [\n    AC_MSG_CHECKING(executable extension based on host type)\n\n    case \"`uname -s`\" in\n\t*win32* | *WIN32* | *CYGWIN_NT*)\n\t    EXEEXT=\".exe\"\n\t;;\n\t*)\n\t    EXEEXT=\"\"\n\t;;\n    esac\n\n    AC_MSG_RESULT(${EXEEXT})\n    AC_SUBST(EXEEXT)\n])\n\n#------------------------------------------------------------------------\n# SC_PROG_TCLSH\n#\tLocate a tclsh shell in the following directories:\n#\t\t${exec_prefix}/bin\n#\t\t${prefix}/bin\n#\t\t${TCL_BIN_DIR}\n#\t\t${TCL_BIN_DIR}/../bin\n#\t\t${PATH}\n#\n# Arguments\n#\tnone\n#\n# Results\n#\tSubst's the following values:\n#\t\tTCLSH_PROG\n#------------------------------------------------------------------------\n\nAC_DEFUN(SC_PROG_TCLSH, [\n    AC_MSG_CHECKING([for tclsh])\n\n    AC_CACHE_VAL(ac_cv_path_tclsh, [\n\tsearch_path=`echo ${exec_prefix}/bin:${prefix}/bin:${TCL_BIN_DIR}:${TCL_BIN_DIR}/../bin:${PATH} | sed -e 's/:/ /g'`\n\tfor dir in $search_path ; do\n\t    for j in `ls -r $dir/tclsh[[8-9]]* 2> /dev/null` \\\n\t\t    `ls -r $dir/tclsh* 2> /dev/null` ; do\n\t\tif test x\"$ac_cv_path_tclsh\" = x ; then\n\t\t    if test -f \"$j\" ; then\n\t\t\tac_cv_path_tclsh=$j\n\t\t\tbreak\n\t\t    fi\n\t\tfi\n\t    done\n\tdone\n    ])\n\n    if test -f \"$ac_cv_path_tclsh\" ; then\n\tTCLSH_PROG=$ac_cv_path_tclsh\n\tAC_MSG_RESULT($TCLSH_PROG)\n    else\n\tAC_MSG_ERROR(No tclsh found in PATH:  $search_path)\n    fi\n    AC_SUBST(TCLSH_PROG)\n])\n\n#------------------------------------------------------------------------\n# SC_PROG_WISH\n#\tLocate a wish shell in the following directories:\n#\t\t${exec_prefix}/bin\n#\t\t${prefix}/bin\n#\t\t${TCL_BIN_DIR}\n#\t\t${TCL_BIN_DIR}/../bin\n#\t\t${PATH}\n#\n# Arguments\n#\tnone\n#\n# Results\n#\tSubst's the following values:\n#\t\tWISH_PROG\n#------------------------------------------------------------------------\n\nAC_DEFUN(SC_PROG_WISH, [\n    AC_MSG_CHECKING([for wish])\n\n    AC_CACHE_VAL(ac_cv_path_wish, [\n\tsearch_path=`echo ${exec_prefix}/bin:${prefix}/bin:${TCL_BIN_DIR}:${TCL_BIN_DIR}/../bin:${PATH} | sed -e 's/:/ /g'`\n\tfor dir in $search_path ; do\n\t    for j in `ls -r $dir/wish[[8-9]]* 2> /dev/null` \\\n\t\t    `ls -r $dir/wish* 2> /dev/null` ; do\n\t\tif test x\"$ac_cv_path_wish\" = x ; then\n\t\t    if test -f \"$j\" ; then\n\t\t\tac_cv_path_wish=$j\n\t\t\tbreak\n\t\t    fi\n\t\tfi\n\t    done\n\tdone\n    ])\n\n    if test -f \"$ac_cv_path_wish\" ; then\n\tWISH_PROG=$ac_cv_path_wish\n\tAC_MSG_RESULT($WISH_PROG)\n    else\n\tAC_MSG_ERROR(No wish found in PATH:  $search_path)\n    fi\n    AC_SUBST(WISH_PROG)\n])\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-tcl-tclxml-3.1-rdt4s6lpi35mvji4rqao2aplknmuawfs/spack-src/tclconfig/tcl.m4": "# tcl.m4 --\n#\n#\tThis file provides a set of autoconf macros to help TEA-enable\n#\ta Tcl extension.\n#\n# Copyright (c) 1999-2000 Ajuba Solutions.\n# Copyright (c) 2002 ActiveState Corporation.\n#\n# See the file \"license.terms\" for information on usage and redistribution\n# of this file, and for a DISCLAIMER OF ALL WARRANTIES.\n\n#------------------------------------------------------------------------\n# TEA_PATH_TCLCONFIG --\n#\n#\tLocate the tclConfig.sh file and perform a sanity check on\n#\tthe Tcl compile flags\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--with-tcl=...\n#\n#\tDefines the following vars:\n#\t\tTCL_BIN_DIR\tFull path to the directory containing\n#\t\t\t\tthe tclConfig.sh file\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_PATH_TCLCONFIG, [\n    if test x\"${TEA_INITED}\" = x ; then\n\t# Can't refer to exact macro name or it will be substituted\n\tAC_MSG_ERROR([Must call TEA INIT before PATH_TCLCONFIG])\n    fi\n    #\n    # Ok, lets find the tcl configuration\n    # First, look for one uninstalled.\n    # the alternative search directory is invoked by --with-tcl\n    #\n\n    if test x\"${no_tcl}\" = x ; then\n\t# we reset no_tcl in case something fails here\n\tno_tcl=true\n\tAC_ARG_WITH(tcl, [  --with-tcl              directory containing tcl configuration (tclConfig.sh)], with_tclconfig=${withval})\n\tAC_MSG_CHECKING([for Tcl configuration])\n\tAC_CACHE_VAL(ac_cv_c_tclconfig,[\n\n\t    # First check to see if --with-tcl was specified.\n\t    if test x\"${with_tclconfig}\" != x ; then\n\t\tif test -f \"${with_tclconfig}/tclConfig.sh\" ; then\n\t\t    ac_cv_c_tclconfig=`(cd ${with_tclconfig}; pwd)`\n\t\telse\n\t\t    AC_MSG_ERROR([${with_tclconfig} directory doesn't contain tclConfig.sh])\n\t\tfi\n\t    fi\n\n\t    # then check for a private Tcl installation\n\t    if test x\"${ac_cv_c_tclconfig}\" = x ; then\n\t\tfor i in \\\n\t\t\t../tcl \\\n\t\t\t`ls -dr ../tcl[[8-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t../../tcl \\\n\t\t\t`ls -dr ../../tcl[[8-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t../../../tcl \\\n\t\t\t`ls -dr ../../../tcl[[8-9]].[[0-9]]* 2>/dev/null` ; do\n\t\t    if test -f \"$i/unix/tclConfig.sh\" ; then\n\t\t\tac_cv_c_tclconfig=`(cd $i/unix; pwd)`\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\n\t    # check in a few common install locations\n\t    if test x\"${ac_cv_c_tclconfig}\" = x ; then\n\t\tfor i in `ls -d ${exec_prefix}/lib 2>/dev/null` \\\n\t\t\t`ls -d ${prefix}/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/local/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/contrib/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/lib 2>/dev/null` \\\n\t\t\t; do\n\t\t    if test -f \"$i/tclConfig.sh\" ; then\n\t\t\tac_cv_c_tclconfig=`(cd $i; pwd)`\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\n\t    # check in a few other private locations\n\t    if test x\"${ac_cv_c_tclconfig}\" = x ; then\n\t\tfor i in \\\n\t\t\t${srcdir}/../tcl \\\n\t\t\t`ls -dr ${srcdir}/../tcl[[8-9]].[[0-9]]* 2>/dev/null` ; do\n\t\t    if test -f \"$i/unix/tclConfig.sh\" ; then\n\t\t    ac_cv_c_tclconfig=`(cd $i/unix; pwd)`\n\t\t    break\n\t\tfi\n\t\tdone\n\t    fi\n\t])\n\n\tif test x\"${ac_cv_c_tclconfig}\" = x ; then\n\t    TCL_BIN_DIR=\"# no Tcl configs found\"\n\t    AC_MSG_WARN(\"Cannot find Tcl configuration definitions\")\n\t    exit 0\n\telse\n\t    no_tcl=\n\t    TCL_BIN_DIR=${ac_cv_c_tclconfig}\n\t    AC_MSG_RESULT([found $TCL_BIN_DIR/tclConfig.sh])\n\tfi\n    fi\n])\n\n#------------------------------------------------------------------------\n# TEA_PATH_TKCONFIG --\n#\n#\tLocate the tkConfig.sh file\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--with-tk=...\n#\n#\tDefines the following vars:\n#\t\tTK_BIN_DIR\tFull path to the directory containing\n#\t\t\t\tthe tkConfig.sh file\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_PATH_TKCONFIG, [\n    #\n    # Ok, lets find the tk configuration\n    # First, look for one uninstalled.\n    # the alternative search directory is invoked by --with-tk\n    #\n\n    if test x\"${no_tk}\" = x ; then\n\t# we reset no_tk in case something fails here\n\tno_tk=true\n\tAC_ARG_WITH(tk, [  --with-tk               directory containing tk configuration (tkConfig.sh)], with_tkconfig=${withval})\n\tAC_MSG_CHECKING([for Tk configuration])\n\tAC_CACHE_VAL(ac_cv_c_tkconfig,[\n\n\t    # First check to see if --with-tkconfig was specified.\n\t    if test x\"${with_tkconfig}\" != x ; then\n\t\tif test -f \"${with_tkconfig}/tkConfig.sh\" ; then\n\t\t    ac_cv_c_tkconfig=`(cd ${with_tkconfig}; pwd)`\n\t\telse\n\t\t    AC_MSG_ERROR([${with_tkconfig} directory doesn't contain tkConfig.sh])\n\t\tfi\n\t    fi\n\n\t    # then check for a private Tk library\n\t    if test x\"${ac_cv_c_tkconfig}\" = x ; then\n\t\tfor i in \\\n\t\t\t../tk \\\n\t\t\t`ls -dr ../tk[[8-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t../../tk \\\n\t\t\t`ls -dr ../../tk[[8-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t../../../tk \\\n\t\t\t`ls -dr ../../../tk[[8-9]].[[0-9]]* 2>/dev/null` ; do\n\t\t    if test -f \"$i/unix/tkConfig.sh\" ; then\n\t\t\tac_cv_c_tkconfig=`(cd $i/unix; pwd)`\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\t    # check in a few common install locations\n\t    if test x\"${ac_cv_c_tkconfig}\" = x ; then\n\t\tfor i in `ls -d ${exec_prefix}/lib 2>/dev/null` \\\n\t\t\t`ls -d ${prefix}/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/local/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/contrib/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/lib 2>/dev/null` \\\n\t\t\t; do\n\t\t    if test -f \"$i/tkConfig.sh\" ; then\n\t\t\tac_cv_c_tkconfig=`(cd $i; pwd)`\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\t    # check in a few other private locations\n\t    if test x\"${ac_cv_c_tkconfig}\" = x ; then\n\t\tfor i in \\\n\t\t\t${srcdir}/../tk \\\n\t\t\t`ls -dr ${srcdir}/../tk[[8-9]].[[0-9]]* 2>/dev/null` ; do\n\t\t    if test -f \"$i/unix/tkConfig.sh\" ; then\n\t\t\tac_cv_c_tkconfig=`(cd $i/unix; pwd)`\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\t])\n\tif test x\"${ac_cv_c_tkconfig}\" = x ; then\n\t    TK_BIN_DIR=\"# no Tk configs found\"\n\t    AC_MSG_WARN(\"Cannot find Tk configuration definitions\")\n\t    exit 0\n\telse\n\t    no_tk=\n\t    TK_BIN_DIR=${ac_cv_c_tkconfig}\n\t    AC_MSG_RESULT([found $TK_BIN_DIR/tkConfig.sh])\n\tfi\n    fi\n\n])\n\n#------------------------------------------------------------------------\n# TEA_LOAD_TCLCONFIG --\n#\n#\tLoad the tclConfig.sh file\n#\n# Arguments:\n#\t\n#\tRequires the following vars to be set:\n#\t\tTCL_BIN_DIR\n#\n# Results:\n#\n#\tSubst the following vars:\n#\t\tTCL_BIN_DIR\n#\t\tTCL_SRC_DIR\n#\t\tTCL_LIB_FILE\n#\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_LOAD_TCLCONFIG, [\n    AC_MSG_CHECKING([for existence of $TCL_BIN_DIR/tclConfig.sh])\n\n    if test -f \"$TCL_BIN_DIR/tclConfig.sh\" ; then\n        AC_MSG_RESULT([loading])\n\t. $TCL_BIN_DIR/tclConfig.sh\n    else\n        AC_MSG_RESULT([file not found])\n    fi\n\n    #\n    # If the TCL_BIN_DIR is the build directory (not the install directory),\n    # then set the common variable name to the value of the build variables.\n    # For example, the variable TCL_LIB_SPEC will be set to the value\n    # of TCL_BUILD_LIB_SPEC. An extension should make use of TCL_LIB_SPEC\n    # instead of TCL_BUILD_LIB_SPEC since it will work with both an\n    # installed and uninstalled version of Tcl.\n    #\n\n    if test -f $TCL_BIN_DIR/Makefile ; then\n        TCL_LIB_SPEC=${TCL_BUILD_LIB_SPEC}\n        TCL_STUB_LIB_SPEC=${TCL_BUILD_STUB_LIB_SPEC}\n        TCL_STUB_LIB_PATH=${TCL_BUILD_STUB_LIB_PATH}\n    fi\n\n    #\n    # eval is required to do the TCL_DBGX substitution\n    #\n\n    eval \"TCL_LIB_FILE=\\\"${TCL_LIB_FILE}\\\"\"\n    eval \"TCL_LIB_FLAG=\\\"${TCL_LIB_FLAG}\\\"\"\n    eval \"TCL_LIB_SPEC=\\\"${TCL_LIB_SPEC}\\\"\"\n\n    eval \"TCL_STUB_LIB_FILE=\\\"${TCL_STUB_LIB_FILE}\\\"\"\n    eval \"TCL_STUB_LIB_FLAG=\\\"${TCL_STUB_LIB_FLAG}\\\"\"\n    eval \"TCL_STUB_LIB_SPEC=\\\"${TCL_STUB_LIB_SPEC}\\\"\"\n\n    AC_SUBST(TCL_VERSION)\n    AC_SUBST(TCL_BIN_DIR)\n    AC_SUBST(TCL_SRC_DIR)\n\n    AC_SUBST(TCL_LIB_FILE)\n    AC_SUBST(TCL_LIB_FLAG)\n    AC_SUBST(TCL_LIB_SPEC)\n\n    AC_SUBST(TCL_STUB_LIB_FILE)\n    AC_SUBST(TCL_STUB_LIB_FLAG)\n    AC_SUBST(TCL_STUB_LIB_SPEC)\n\n    #AC_SUBST(TCL_DBGX)\n    AC_SUBST(TCL_LIBS)\n    AC_SUBST(TCL_DEFS)\n    AC_SUBST(TCL_EXTRA_CFLAGS)\n    AC_SUBST(TCL_LD_FLAGS)\n    AC_SUBST(TCL_SHLIB_LD_LIBS)\n    #AC_SUBST(TCL_BUILD_LIB_SPEC)\n    #AC_SUBST(TCL_BUILD_STUB_LIB_SPEC)\n])\n\n#------------------------------------------------------------------------\n# TEA_LOAD_TKCONFIG --\n#\n#\tLoad the tkConfig.sh file\n#\n# Arguments:\n#\t\n#\tRequires the following vars to be set:\n#\t\tTK_BIN_DIR\n#\n# Results:\n#\n#\tSets the following vars that should be in tkConfig.sh:\n#\t\tTK_BIN_DIR\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_LOAD_TKCONFIG, [\n    AC_MSG_CHECKING([for existence of ${TK_BIN_DIR}/tkConfig.sh])\n\n    if test -f \"${TK_BIN_DIR}/tkConfig.sh\" ; then\n        AC_MSG_RESULT([loading])\n\t. $TK_BIN_DIR/tkConfig.sh\n    else\n        AC_MSG_RESULT([could not find ${TK_BIN_DIR}/tkConfig.sh])\n    fi\n\n    #\n    # If the TK_BIN_DIR is the build directory (not the install directory),\n    # then set the common variable name to the value of the build variables.\n    # For example, the variable TK_LIB_SPEC will be set to the value\n    # of TK_BUILD_LIB_SPEC. An extension should make use of TK_LIB_SPEC\n    # instead of TK_BUILD_LIB_SPEC since it will work with both an\n    # installed and uninstalled version of Tcl.\n    #\n\n    if test -f $TK_BIN_DIR/Makefile ; then\n        TK_LIB_SPEC=${TK_BUILD_LIB_SPEC}\n        TK_STUB_LIB_SPEC=${TK_BUILD_STUB_LIB_SPEC}\n        TK_STUB_LIB_PATH=${TK_BUILD_STUB_LIB_PATH}\n    fi\n\n    #\n    # eval is required to do the TK_DBGX substitution\n    #\n\n    eval \"TK_LIB_FILE=\\\"${TK_LIB_FILE}\\\"\"\n    eval \"TK_LIB_FLAG=\\\"${TK_LIB_FLAG}\\\"\"\n    eval \"TK_LIB_SPEC=\\\"${TK_LIB_SPEC}\\\"\"\n\n    eval \"TK_STUB_LIB_FILE=\\\"${TK_STUB_LIB_FILE}\\\"\"\n    eval \"TK_STUB_LIB_FLAG=\\\"${TK_STUB_LIB_FLAG}\\\"\"\n    eval \"TK_STUB_LIB_SPEC=\\\"${TK_STUB_LIB_SPEC}\\\"\"\n\n    AC_SUBST(TK_VERSION)\n    AC_SUBST(TK_BIN_DIR)\n    AC_SUBST(TK_SRC_DIR)\n\n    AC_SUBST(TK_LIB_FILE)\n    AC_SUBST(TK_LIB_FLAG)\n    AC_SUBST(TK_LIB_SPEC)\n\n    AC_SUBST(TK_STUB_LIB_FILE)\n    AC_SUBST(TK_STUB_LIB_FLAG)\n    AC_SUBST(TK_STUB_LIB_SPEC)\n\n    AC_SUBST(TK_LIBS)\n    AC_SUBST(TK_XINCLUDES)\n])\n\n#------------------------------------------------------------------------\n# TEA_ENABLE_SHARED --\n#\n#\tAllows the building of shared libraries\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--enable-shared=yes|no\n#\n#\tDefines the following vars:\n#\t\tSTATIC_BUILD\tUsed for building import/export libraries\n#\t\t\t\ton Windows.\n#\n#\tSets the following vars:\n#\t\tSHARED_BUILD\tValue of 1 or 0\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_ENABLE_SHARED, [\n    AC_MSG_CHECKING([how to build libraries])\n    AC_ARG_ENABLE(shared,\n\t[  --enable-shared         build and link with shared libraries [--enable-shared]],\n\t[tcl_ok=$enableval], [tcl_ok=yes])\n\n    if test \"${enable_shared+set}\" = set; then\n\tenableval=\"$enable_shared\"\n\ttcl_ok=$enableval\n    else\n\ttcl_ok=yes\n    fi\n\n    if test \"$tcl_ok\" = \"yes\" ; then\n\tAC_MSG_RESULT([shared])\n\tSHARED_BUILD=1\n    else\n\tAC_MSG_RESULT([static])\n\tSHARED_BUILD=0\n\tAC_DEFINE(STATIC_BUILD)\n    fi\n    AC_SUBST(SHARED_BUILD)\n])\n\n#------------------------------------------------------------------------\n# TEA_ENABLE_THREADS --\n#\n#\tSpecify if thread support should be enabled.  If \"yes\" is\n#\tspecified as an arg (optional), threads are enabled by default.\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--enable-threads\n#\n#\tSets the following vars:\n#\t\tTHREADS_LIBS\tThread library(s)\n#\n#\tDefines the following vars:\n#\t\tTCL_THREADS\n#\t\t_REENTRANT\n#\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_ENABLE_THREADS, [\n    AC_ARG_ENABLE(threads, [  --enable-threads        build with threads],\n\t[tcl_ok=$enableval], [tcl_ok=$1])\n\n    if test \"$tcl_ok\" = \"yes\"; then\n\tTCL_THREADS=1\n\n\tif test \"${TEA_PLATFORM}\" != \"windows\" ; then\n\t    # We are always OK on Windows, so check what this platform wants.\n\t    AC_DEFINE(USE_THREAD_ALLOC)\n\t    AC_DEFINE(_REENTRANT)\n\t    AC_DEFINE(_THREAD_SAFE)\n\t    AC_CHECK_LIB(pthread,pthread_mutex_init,tcl_ok=yes,tcl_ok=no)\n\t    if test \"$tcl_ok\" = \"no\"; then\n\t\t# Check a little harder for __pthread_mutex_init in the\n\t\t# same library, as some systems hide it there until\n\t\t# pthread.h is defined.\t We could alternatively do an\n\t\t# AC_TRY_COMPILE with pthread.h, but that will work with\n\t\t# libpthread really doesn't exist, like AIX 4.2.\n\t\t# [Bug: 4359]\n\t\tAC_CHECK_LIB(pthread, __pthread_mutex_init,\n\t\t    tcl_ok=yes, tcl_ok=no)\n\t    fi\n\t    \n\t    if test \"$tcl_ok\" = \"yes\"; then\n\t\t# The space is needed\n\t\tTHREADS_LIBS=\" -lpthread\"\n\t    else\n\t\tAC_CHECK_LIB(pthreads, pthread_mutex_init,\n\t\t    tcl_ok=yes, tcl_ok=no)\n\t\tif test \"$tcl_ok\" = \"yes\"; then\n\t\t    # The space is needed\n\t\t    THREADS_LIBS=\" -lpthreads\"\n\t\telse\n\t\t    AC_CHECK_LIB(c, pthread_mutex_init,\n\t\t\ttcl_ok=yes, tcl_ok=no)\n\t\t    if test \"$tcl_ok\" = \"no\"; then\n\t\t\tAC_CHECK_LIB(c_r, pthread_mutex_init,\n\t\t\t    tcl_ok=yes, tcl_ok=no)\n\t\t\tif test \"$tcl_ok\" = \"yes\"; then\n\t\t\t    # The space is needed\n\t\t\t    THREADS_LIBS=\" -pthread\"\n\t\t\telse\n\t\t\t    TCL_THREADS=0\n\t\t\t    AC_MSG_WARN(\"Don t know how to find pthread lib on your system - thread support disabled\")\n\t\t\tfi\n\t\t    fi\n\t\tfi\n\t    fi\n\n\t    # Does the pthread-implementation provide\n\t    # 'pthread_attr_setstacksize' ?\n\n\t    ac_saved_libs=$LIBS\n\t    LIBS=\"$LIBS $THREADS_LIBS\"\n\t    AC_CHECK_FUNCS(pthread_attr_setstacksize)\n\t    LIBS=$ac_saved_libs\n\t    AC_CHECK_FUNCS(readdir_r)\n\tfi\n    else\n\tTCL_THREADS=0\n    fi\n    # Do checking message here to not mess up interleaved configure output\n    AC_MSG_CHECKING([for building with threads])\n    if test \"${TCL_THREADS}\" = \"1\"; then\n\tAC_DEFINE(TCL_THREADS)\n\tAC_MSG_RESULT([yes])\n    else\n\tAC_MSG_RESULT([no (default)])\n    fi\n    # TCL_THREADS sanity checking.  See if our request for building with\n    # threads is the same as the way Tcl was built.  If not, warn the user.\n    case ${TCL_DEFS} in\n\t*THREADS=1*)\n\t    if test \"${TCL_THREADS}\" = \"0\"; then\n\t\tAC_MSG_WARN([\n    Building ${PACKAGE} without threads enabled, but building against a Tcl\n    that IS thread-enabled.])\n\t    fi\n\t    ;;\n\t*)\n\t    if test \"${TCL_THREADS}\" = \"1\"; then\n\t\tAC_MSG_WARN([\n    --enable-threads requested, but attempting building against a Tcl\n    that is NOT thread-enabled.])\n\t    fi\n\t    ;;\n    esac\n    AC_SUBST(TCL_THREADS)\n])\n\n#------------------------------------------------------------------------\n# TEA_ENABLE_SYMBOLS --\n#\n#\tSpecify if debugging symbols should be used\n#\tMemory (TCL_MEM_DEBUG) debugging can also be enabled.\n#\n# Arguments:\n#\tnone\n#\t\n#\tRequires the following vars to be set:\n#\t\tCFLAGS_DEBUG\n#\t\tCFLAGS_OPTIMIZE\n#\t\tLDFLAGS_DEBUG\n#\t\tLDFLAGS_OPTIMIZE\n#\t\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--enable-symbols\n#\n#\tDefines the following vars:\n#\t\tCFLAGS_DEFAULT\tSets to CFLAGS_DEBUG if true\n#\t\t\t\tSets to CFLAGS_OPTIMIZE if false\n#\t\tLDFLAGS_DEFAULT\tSets to LDFLAGS_DEBUG if true\n#\t\t\t\tSets to LDFLAGS_OPTIMIZE if false\n#\t\tDBGX\t\tDebug library extension\n#\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_ENABLE_SYMBOLS, [\n    if test x\"${TEA_INITED}\" = x ; then\n\t# Can't refer to exact macro name or it will be substituted\n\tAC_MSG_ERROR([Must call TEA INIT before ENABLE_SYMBOLS])\n    fi\n\n    if test \"${TEA_PLATFORM}\" = \"windows\" ; then\n\ttcl_dbgx=d\n    else\n\ttcl_dbgx=g\n    fi\n\n    AC_MSG_CHECKING([for build with symbols])\n    AC_ARG_ENABLE(symbols, [  --enable-symbols        build with debugging symbols [--disable-symbols]],    [tcl_ok=$enableval], [tcl_ok=no])\n    if test \"$tcl_ok\" = \"no\"; then\n\tCFLAGS_DEFAULT='$(CFLAGS_OPTIMIZE)'\n\tLDFLAGS_DEFAULT='$(LDFLAGS_OPTIMIZE)'\n\tDBGX=\"\"\n\tTCL_DBGX=\"\"\n\tAC_MSG_RESULT([no])\n    else\n\tCFLAGS_DEFAULT='$(CFLAGS_DEBUG)'\n\tLDFLAGS_DEFAULT='$(LDFLAGS_DEBUG)'\n\tDBGX=${tcl_dbgx}\n\tTCL_DBGX=${tcl_dbgx}\n\tif test \"$tcl_ok\" = \"yes\"; then\n\t    AC_MSG_RESULT([yes (standard debugging)])\n\tfi\n    fi\n\n    AC_SUBST(TCL_DBGX)\n    AC_SUBST(CFLAGS_DEFAULT)\n    AC_SUBST(LDFLAGS_DEFAULT)\n\n    if test \"$tcl_ok\" = \"mem\" -o \"$tcl_ok\" = \"all\"; then\n\tAC_DEFINE(TCL_MEM_DEBUG)\n    fi\n\n    if test \"$tcl_ok\" != \"yes\" -a \"$tcl_ok\" != \"no\"; then\n\tif test \"$tcl_ok\" = \"all\"; then\n\t    AC_MSG_RESULT([enabled symbols mem debugging])\n\telse\n\t    AC_MSG_RESULT([enabled $tcl_ok debugging])\n\tfi\n    fi\n])\n\n#------------------------------------------------------------------------\n# TEA_ENABLE_LANGINFO --\n#\n#\tAllows use of modern nl_langinfo check for better l10n.\n#\tThis is only relevant for Unix.\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--enable-langinfo=yes|no (default is yes)\n#\n#\tDefines the following vars:\n#\t\tHAVE_LANGINFO\tTriggers use of nl_langinfo if defined.\n#\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_ENABLE_LANGINFO, [\n    AC_ARG_ENABLE(langinfo,\n\t[  --enable-langinfo\t  use nl_langinfo if possible to determine\n\t\t\t  encoding at startup, otherwise use old heuristic],\n\t[langinfo_ok=$enableval], [langinfo_ok=yes])\n\n    HAVE_LANGINFO=0\n    if test \"$langinfo_ok\" = \"yes\"; then\n\tif test \"$langinfo_ok\" = \"yes\"; then\n\t    AC_CHECK_HEADER(langinfo.h,[langinfo_ok=yes],[langinfo_ok=no])\n\tfi\n    fi\n    AC_MSG_CHECKING([whether to use nl_langinfo])\n    if test \"$langinfo_ok\" = \"yes\"; then\n\tAC_TRY_COMPILE([#include <langinfo.h>],\n\t\t[nl_langinfo(CODESET);],[langinfo_ok=yes],[langinfo_ok=no])\n\tif test \"$langinfo_ok\" = \"no\"; then\n\t    langinfo_ok=\"no (could not compile with nl_langinfo)\";\n\tfi\n\tif test \"$langinfo_ok\" = \"yes\"; then\n\t    AC_DEFINE(HAVE_LANGINFO)\n\tfi\n    fi\n    AC_MSG_RESULT([$langinfo_ok])\n])\n\n#--------------------------------------------------------------------\n# TEA_CONFIG_CFLAGS\n#\n#\tTry to determine the proper flags to pass to the compiler\n#\tfor building shared libraries and other such nonsense.\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tDefines the following vars:\n#\n#       DL_OBJS -       Name of the object file that implements dynamic\n#                       loading for Tcl on this system.\n#       DL_LIBS -       Library file(s) to include in tclsh and other base\n#                       applications in order for the \"load\" command to work.\n#       LDFLAGS -      Flags to pass to the compiler when linking object\n#                       files into an executable application binary such\n#                       as tclsh.\n#       LD_SEARCH_FLAGS-Flags to pass to ld, such as \"-R /usr/local/tcl/lib\",\n#                       that tell the run-time dynamic linker where to look\n#                       for shared libraries such as libtcl.so.  Depends on\n#                       the variable LIB_RUNTIME_DIR in the Makefile.\n#       SHLIB_CFLAGS -  Flags to pass to cc when compiling the components\n#                       of a shared library (may request position-independent\n#                       code, among other things).\n#       SHLIB_LD -      Base command to use for combining object files\n#                       into a shared library.\n#       SHLIB_LD_LIBS - Dependent libraries for the linker to scan when\n#                       creating shared libraries.  This symbol typically\n#                       goes at the end of the \"ld\" commands that build\n#                       shared libraries. The value of the symbol is\n#                       \"${LIBS}\" if all of the dependent libraries should\n#                       be specified when creating a shared library.  If\n#                       dependent libraries should not be specified (as on\n#                       SunOS 4.x, where they cause the link to fail, or in\n#                       general if Tcl and Tk aren't themselves shared\n#                       libraries), then this symbol has an empty string\n#                       as its value.\n#       SHLIB_SUFFIX -  Suffix to use for the names of dynamically loadable\n#                       extensions.  An empty string means we don't know how\n#                       to use shared libraries on this platform.\n#       TCL_LIB_FILE -  Name of the file that contains the Tcl library, such\n#                       as libtcl7.8.so or libtcl7.8.a.\n#       TCL_LIB_SUFFIX -Specifies everything that comes after the \"libtcl\"\n#                       in the shared library name, using the $VERSION variable\n#                       to put the version in the right place.  This is used\n#                       by platforms that need non-standard library names.\n#                       Examples:  ${VERSION}.so.1.1 on NetBSD, since it needs\n#                       to have a version after the .so, and ${VERSION}.a\n#                       on AIX, since the Tcl shared library needs to have\n#                       a .a extension whereas shared objects for loadable\n#                       extensions have a .so extension.  Defaults to\n#                       ${VERSION}${SHLIB_SUFFIX}.\n#       TCL_NEEDS_EXP_FILE -\n#                       1 means that an export file is needed to link to a\n#                       shared library.\n#       TCL_EXP_FILE -  The name of the installed export / import file which\n#                       should be used to link to the Tcl shared library.\n#                       Empty if Tcl is unshared.\n#       TCL_BUILD_EXP_FILE -\n#                       The name of the built export / import file which\n#                       should be used to link to the Tcl shared library.\n#                       Empty if Tcl is unshared.\n#\tCFLAGS_DEBUG -\n#\t\t\tFlags used when running the compiler in debug mode\n#\tCFLAGS_OPTIMIZE -\n#\t\t\tFlags used when running the compiler in optimize mode\n#\tEXTRA_CFLAGS -\n#\t\t\tExtra CFLAGS to pass to the compiler\n#\n#\tSubst's the following vars:\n#\t\tDL_LIBS\n#\t\tCFLAGS_DEBUG\n#\t\tCFLAGS_OPTIMIZE\n#\t\tCFLAGS_WARNING\n#\n#\t\tSTLIB_LD\n#\t\tSHLIB_LD\n#\t\tSHLIB_CFLAGS\n#\t\tSHLIB_LDFLAGS\n#\t\tLDFLAGS_DEBUG\n#\t\tLDFLAGS_OPTIMIZE\n#--------------------------------------------------------------------\n\nAC_DEFUN(TEA_CONFIG_CFLAGS, [\n    if test x\"${TEA_INITED}\" = x ; then\n\t# Can't refer to exact macro name or it will be substituted\n\tAC_MSG_ERROR([Must call TEA INIT before CONFIG_CFLAGS])\n    fi\n\n    # Step 0: Enable 64 bit support?\n\n    AC_MSG_CHECKING([if 64bit support is enabled])\n    AC_ARG_ENABLE(64bit,[  --enable-64bit          enable 64bit support (where applicable)], [do64bit=$enableval], [do64bit=no])\n    AC_MSG_RESULT([$do64bit])\n \n    # Step 0.b: Enable Solaris 64 bit VIS support?\n\n    AC_MSG_CHECKING([if 64bit Sparc VIS support is requested])\n    AC_ARG_ENABLE(64bit-vis,[  --enable-64bit-vis      enable 64bit Sparc VIS support], [do64bitVIS=$enableval], [do64bitVIS=no])\n    AC_MSG_RESULT([$do64bitVIS])\n\n    if test \"$do64bitVIS\" = \"yes\"; then\n\t# Force 64bit on with VIS\n\tdo64bit=yes\n    fi\n\n    # Step 1: set the variable \"system\" to hold the name and version number\n    # for the system.  This can usually be done via the \"uname\" command, but\n    # there are a few systems, like Next, where this doesn't work.\n\n    AC_MSG_CHECKING([system version (for dynamic loading)])\n    if test -f /usr/lib/NextStep/software_version; then\n\tsystem=NEXTSTEP-`awk '/3/,/3/' /usr/lib/NextStep/software_version`\n    else\n\tsystem=`uname -s`-`uname -r`\n\tif test \"$?\" -ne 0 ; then\n\t    AC_MSG_RESULT([unknown (can't find uname command)])\n\t    system=unknown\n\telse\n\t    # Special check for weird MP-RAS system (uname returns weird\n\t    # results, and the version is kept in special file).\n\t\n\t    if test -r /etc/.relid -a \"X`uname -n`\" = \"X`uname -s`\" ; then\n\t\tsystem=MP-RAS-`awk '{print $3}' /etc/.relid'`\n\t    fi\n\t    if test \"`uname -s`\" = \"AIX\" ; then\n\t\tsystem=AIX-`uname -v`.`uname -r`\n\t    fi\n\t    if test \"${TEA_PLATFORM}\" = \"windows\" ; then\n\t\tsystem=windows\n\t    fi\n\t    AC_MSG_RESULT([$system])\n\tfi\n    fi\n\n    # Step 2: check for existence of -ldl library.  This is needed because\n    # Linux can use either -ldl or -ldld for dynamic loading.\n\n    AC_CHECK_LIB(dl, dlopen, have_dl=yes, have_dl=no)\n\n    # Step 3: set configuration options based on system name and version.\n\n    do64bit_ok=no\n    EXTRA_CFLAGS=\"\"\n    TCL_EXPORT_FILE_SUFFIX=\"\"\n    UNSHARED_LIB_SUFFIX=\"\"\n    TCL_TRIM_DOTS='`echo ${VERSION} | tr -d .`'\n    ECHO_VERSION='`echo ${VERSION}`'\n    TCL_LIB_VERSIONS_OK=ok\n    CFLAGS_DEBUG=-g\n    CFLAGS_OPTIMIZE=-O\n    if test \"$GCC\" = \"yes\" ; then\n\tCFLAGS_WARNING=\"-Wall -Wconversion -Wno-implicit-int\"\n    else\n\tCFLAGS_WARNING=\"\"\n    fi\n    TCL_NEEDS_EXP_FILE=0\n    TCL_BUILD_EXP_FILE=\"\"\n    TCL_EXP_FILE=\"\"\ndnl FIXME: Replace AC_CHECK_PROG with AC_CHECK_TOOL once cross compiling is fixed.\ndnl AC_CHECK_TOOL(AR, ar, :)\n    AC_CHECK_PROG(AR, ar, ar)\n    STLIB_LD='${AR} cr'\n    case $system in\n\twindows)\n\t    # This is a 2-stage check to make sure we have the 64-bit SDK\n\t    # We have to know where the SDK is installed.\n\t    if test \"$do64bit\" = \"yes\" ; then\n\t\tif test \"x${MSSDK}x\" = \"xx\" ; then\n\t\t    MSSDK=\"C:/Progra~1/Microsoft SDK\"\n\t\tfi\n\t\t# In order to work in the tortured autoconf environment,\n\t\t# we need to ensure that this path has no spaces\n\t\tMSSDK=`cygpath -w -s \"$MSSDK\" | sed -e 's!\\\\\\!/!g'`\n\t\tif test ! -d \"${MSSDK}/bin/win64\" ; then\n\t\t    AC_MSG_WARN(\"could not find 64-bit SDK to enable 64bit mode\")\n\t\t    do64bit=\"no\"\n\t\telse\n\t\t    do64bit_ok=\"yes\"\n\t\tfi\n\t    fi\n\n\t    if test \"$GCC\" != \"yes\" ; then\n\t        if test \"${SHARED_BUILD}\" = \"0\" ; then\n\t\t    runtime=-MT\n\t        else\n\t\t    runtime=-MD\n\t        fi\n\n                if test \"$do64bit\" = \"yes\" ; then\n\t\t    # All this magic is necessary for the Win64 SDK RC1 - hobbs\n\t\t    export CC=\"${MSSDK}/Bin/Win64/cl.exe \\\n\t                -I${MSSDK}/Include/prerelease \\\n                        -I${MSSDK}/Include/Win64/crt \\\n\t                -I${MSSDK}/Include\"\n\t\t    export RC=\"${MSSDK}/bin/rc.exe\"\n\t\t    export lflags=\"-MACHINE:IA64 -LIBPATH:${MSSDK}/Lib/IA64 \\\n\t                -LIBPATH:${MSSDK}/Lib/Prerelease/IA64\"\n\t\t    export STLIB_LD=\"${MSSDK}/bin/win64/lib.exe -nologo ${lflags}\"\n\t\t    export LINKBIN=\"${MSSDK}/bin/win64/link.exe ${lflags}\"\n\t\t    CFLAGS_DEBUG=\"-nologo -Zi -Od -W3 ${runtime}d\"\n\t\t    CFLAGS_OPTIMIZE=\"-nologo -O2 -Gs -W2 ${runtime}\"\n\t        else\n\t\t    RC=\"rc\"\n\t\t    STLIB_LD=\"lib -nologo\"\n    \t\t    LINKBIN=\"link -link50compat\"\n\t\t    CFLAGS_DEBUG=\"-nologo -Z7 -Od -W3 -WX ${runtime}d\"\n\t\t    CFLAGS_OPTIMIZE=\"-nologo -O2 -Gs -GD -W2 ${runtime}\"\n\t\tfi\n\t    fi\n\n\t    if test \"$GCC\" = \"yes\"; then\n\t\t# mingw gcc mode\n\t\tRC=\"windres\"\n\t\tCFLAGS_DEBUG=\"-g\"\n\t\tCFLAGS_OPTIMIZE=\"-O2\"\n\t\tSHLIB_LD=\"$CC -shared\"\n\t\tUNSHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}\\$\\{DBGX\\}.a'\n\t\tLDFLAGS_CONSOLE=\"-wl,--subsystem,console ${lflags}\"\n\t\tLDFLAGS_WINDOW=\"-wl,--subsystem,windows ${lflags}\"\n\t    else\n\t\tSHLIB_LD=\"${LINKBIN} -dll -nologo\"\n\t\tUNSHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}\\$\\{DBGX\\}.lib'\n\t\tEXTRA_CFLAGS=\"-YX\"\n\t\t# For information on what debugtype is most useful, see:\n\t\t# http://msdn.microsoft.com/library/en-us/dnvc60/html/gendepdebug.asp\n\t\t# This essentially turns it all on.\n\t\tLDFLAGS_DEBUG=\"-debug:full -debugtype:both -warn:2\"\n\t\tLDFLAGS_OPTIMIZE=\"-release\"\n\t\tLDFLAGS_CONSOLE=\"-link -subsystem:console ${lflags}\"\n\t\tLDFLAGS_WINDOW=\"-link -subsystem:windows ${lflags}\"\n\t\tPATHTYPE=-w\n\t    fi\n\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".dll\"\n\t    SHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}\\$\\{DBGX\\}.dll'\n\n\t    TCL_LIB_VERSIONS_OK=nodots\n\t    # Bogus to avoid getting this turned off\n\t    DL_OBJS=\"tclLoadNone.obj\"\n    \t    ;;\n\tAIX-*)\n\t    if test \"${TCL_THREADS}\" = \"1\" -a \"$GCC\" != \"yes\" ; then\n\t\t# AIX requires the _r compiler when gcc isn't being used\n\t\tif test \"${CC}\" != \"cc_r\" ; then\n\t\t    CC=${CC}_r\n\t\tfi\n\t\tAC_MSG_RESULT([Using $CC for compiling with threads])\n\t    fi\n\t    LIBS=\"$LIBS -lc\"\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    if test \"`uname -m`\" = \"ia64\" ; then\n\t\t# AIX-5 uses ELF style dynamic libraries on IA-64, but not PPC\n\t\tSHLIB_LD=\"/usr/ccs/bin/ld -G -z text\"\n\t\t# AIX-5 has dl* in libc.so\n\t\tDL_LIBS=\"\"\n\t\tif test \"$GCC\" = \"yes\" ; then\n\t\t    LD_SEARCH_FLAGS='-Wl,-R,${LIB_RUNTIME_DIR}'\n\t\telse\n\t\t    LD_SEARCH_FLAGS='-R${LIB_RUNTIME_DIR}'\n\t\tfi\n\t    else\n\t\tSHLIB_LD=\"${TCL_SRC_DIR}/unix/ldAix /bin/ld -bhalt:4 -bM:SRE -bE:lib.exp -H512 -T512 -bnoentry\"\n\t\tDL_LIBS=\"-ldl\"\n\t\tLD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'\n\t\tTCL_NEEDS_EXP_FILE=1\n\t\tTCL_EXPORT_FILE_SUFFIX='${VERSION}\\$\\{DBGX\\}.exp'\n\t    fi\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    LDFLAGS=\"\"\n\n\t    # AIX v<=4.1 has some different flags than 4.2+\n\t    if test \"$system\" = \"AIX-4.1\" -o \"`uname -v`\" -lt \"4\" ; then\n\t\tLIBOBJS=\"$LIBOBJS tclLoadAix.o\"\n\t\tDL_LIBS=\"-lld\"\n\t    fi\n\n\t    # On AIX <=v4 systems, libbsd.a has to be linked in to support\n\t    # non-blocking file IO.  This library has to be linked in after\n\t    # the MATH_LIBS or it breaks the pow() function.  The way to\n\t    # insure proper sequencing, is to add it to the tail of MATH_LIBS.\n\t    # This library also supplies gettimeofday.\n\t    #\n\t    # AIX does not have a timezone field in struct tm. When the AIX\n\t    # bsd library is used, the timezone global and the gettimeofday\n\t    # methods are to be avoided for timezone deduction instead, we\n\t    # deduce the timezone by comparing the localtime result on a\n\t    # known GMT value.\n\n\t    AC_CHECK_LIB(bsd, gettimeofday, libbsd=yes, libbsd=no)\n\t    if test $libbsd = yes; then\n\t    \tMATH_LIBS=\"$MATH_LIBS -lbsd\"\n\t    \tAC_DEFINE(USE_DELTA_FOR_TZ)\n\t    fi\n\n\t    # Check to enable 64-bit flags for compiler/linker on AIX 4+\n\t    if test \"$do64bit\" = \"yes\" -a \"`uname -v`\" -gt \"3\" ; then\n\t\tif test \"$GCC\" = \"yes\" ; then\n\t\t    AC_MSG_WARN(\"64bit mode not supported with GCC on $system\")\n\t\telse \n\t\t    do64bit_ok=yes\n\t\t    EXTRA_CFLAGS=\"-q64\"\n\t\t    LDFLAGS=\"-q64\"\n\t\t    RANLIB=\"${RANLIB} -X64\"\n\t\t    AR=\"${AR} -X64\"\n\t\t    SHLIB_LDFLAGS=\"-b64\"\n\t\tfi\n\t    fi\n\t    ;;\n\tBSD/OS-2.1*|BSD/OS-3*)\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD=\"shlicc -r\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tBSD/OS-4.*)\n\t    SHLIB_CFLAGS=\"-export-dynamic -fPIC\"\n\t    SHLIB_LD=\"cc -shared\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"-export-dynamic\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tdgux*)\n\t    SHLIB_CFLAGS=\"-K PIC\"\n\t    SHLIB_LD=\"cc -G\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tHP-UX-*.11.*)\n\t    # Use updated header definitions where possible\n\t    AC_DEFINE(_XOPEN_SOURCE_EXTENDED)\n\n\t    SHLIB_SUFFIX=\".sl\"\n\t    AC_CHECK_LIB(dld, shl_load, tcl_ok=yes, tcl_ok=no)\n\t    if test \"$tcl_ok\" = yes; then\n\t\tSHLIB_CFLAGS=\"+z\"\n\t\tSHLIB_LD=\"ld -b\"\n\t\tSHLIB_LD_LIBS='${LIBS}'\n\t\tDL_OBJS=\"tclLoadShl.o\"\n\t\tDL_LIBS=\"-ldld\"\n\t\tLDFLAGS=\"-Wl,-E\"\n\t\tLD_SEARCH_FLAGS='-Wl,+s,+b,${LIB_RUNTIME_DIR}:.'\n\t    fi\n\n\t    # Users may want PA-RISC 1.1/2.0 portable code - needs HP cc\n\t    #EXTRA_CFLAGS=\"+DAportable\"\n\n\t    # Check to enable 64-bit flags for compiler/linker\n\t    if test \"$do64bit\" = \"yes\" ; then\n\t\tif test \"$GCC\" = \"yes\" ; then\n\t\t    hpux_arch=`${CC} -dumpmachine`\n\t\t    case $hpux_arch in\n\t\t\thppa64*)\n\t\t\t    # 64-bit gcc in use.  Fix flags for GNU ld.\n\t\t\t    do64bit_ok=yes\n\t\t\t    SHLIB_LD=\"${CC} -shared\"\n\t\t\t    SHLIB_LD_LIBS=\"\"\n\t\t\t    LD_SEARCH_FLAGS=''\n\t\t\t    ;;\n\t\t\t*)\n\t\t\t    AC_MSG_WARN(\"64bit mode not supported with GCC on $system\")\n\t\t\t    ;;\n\t\t    esac\n\t\telse\n\t\t    do64bit_ok=yes\n\t\t    if test \"`uname -m`\" = \"ia64\" ; then\n\t\t\tEXTRA_CFLAGS=\"+DD64\"\n\t\t\tLDFLAGS=\"+DD64 $LDFLAGS\"\n\t\t    else\n\t\t\tEXTRA_CFLAGS=\"+DA2.0W\"\n\t\t\tLDFLAGS=\"+DA2.0W $LDFLAGS\"\n\t\t    fi\n\t\tfi\n\t    fi\n\t    ;;\n\tHP-UX-*.08.*|HP-UX-*.09.*|HP-UX-*.10.*)\n\t    SHLIB_SUFFIX=\".sl\"\n\t    AC_CHECK_LIB(dld, shl_load, tcl_ok=yes, tcl_ok=no)\n\t    if test \"$tcl_ok\" = yes; then\n\t\tSHLIB_CFLAGS=\"+z\"\n\t\tSHLIB_LD=\"ld -b\"\n\t\tSHLIB_LD_LIBS=\"\"\n\t\tDL_OBJS=\"tclLoadShl.o\"\n\t\tDL_LIBS=\"-ldld\"\n\t\tLDFLAGS=\"-Wl,-E\"\n\t\tLD_SEARCH_FLAGS='-Wl,+s,+b,${LIB_RUNTIME_DIR}:.'\n\t    fi\n\t    ;;\n\tIRIX-4.*)\n\t    SHLIB_CFLAGS=\"-G 0\"\n\t    SHLIB_SUFFIX=\".a\"\n\t    SHLIB_LD=\"echo tclLdAout $CC \\{$SHLIB_CFLAGS\\} | `pwd`/tclsh -r -G 0\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    DL_OBJS=\"tclLoadAout.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"-Wl,-D,08000000\"\n\t    LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'\n\t    SHARED_LIB_SUFFIX='${VERSION}\\$\\{DBGX\\}.a'\n\t    ;;\n\tIRIX-5.*)\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD=\"ld -shared -rdata_shared\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    LD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'\n\t    EXTRA_CFLAGS=\"\"\n\t    LDFLAGS=\"\"\n\t    ;;\n\tIRIX-6.*|IRIX64-6.5*)\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD=\"ld -n32 -shared -rdata_shared\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    LD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'\n\t    if test \"$GCC\" = \"yes\" ; then\n\t\tEXTRA_CFLAGS=\"-mabi=n32\"\n\t\tLDFLAGS=\"-mabi=n32\"\n\t    else\n\t\tcase $system in\n\t\t    IRIX-6.3)\n\t\t\t# Use to build 6.2 compatible binaries on 6.3.\n\t\t\tEXTRA_CFLAGS=\"-n32 -D_OLD_TERMIOS\"\n\t\t\t;;\n\t\t    *)\n\t\t\tEXTRA_CFLAGS=\"-n32\"\n\t\t\t;;\n\t\tesac\n\t\tLDFLAGS=\"-n32\"\n\t    fi\n\t    ;;\n\tIRIX64-6.*)\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD=\"ld -n32 -shared -rdata_shared\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'\n\n\t    # Check to enable 64-bit flags for compiler/linker\n\n\t    if test \"$do64bit\" = \"yes\" ; then\n\t        if test \"$GCC\" = \"yes\" ; then\n\t            AC_MSG_WARN([64bit mode not supported by gcc])\n\t        else\n\t            do64bit_ok=yes\n\t            SHLIB_LD=\"ld -64 -shared -rdata_shared\"\n\t            EXTRA_CFLAGS=\"-64\"\n\t            LDFLAGS=\"-64\"\n\t        fi\n\t    fi\n\t    ;;\n\tLinux*)\n\t    SHLIB_CFLAGS=\"-fPIC\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\n\t    # egcs-2.91.66 on Redhat Linux 6.0 generates lots of warnings \n\t    # when you inline the string and math operations.  Turn this off to\n\t    # get rid of the warnings.\n\n\t    CFLAGS_OPTIMIZE=\"${CFLAGS_OPTIMIZE} -D__NO_STRING_INLINES -D__NO_MATH_INLINES\"\n\n\t    if test \"$have_dl\" = yes; then\n\t\tSHLIB_LD=\"${CC} -shared\"\n\t\tDL_OBJS=\"tclLoadDl.o\"\n\t\tDL_LIBS=\"-ldl\"\n\t\tLDFLAGS=\"-rdynamic\"\n\t\tLD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'\n\t    else\n\t\tAC_CHECK_HEADER(dld.h, [\n\t\t    SHLIB_LD=\"ld -shared\"\n\t\t    DL_OBJS=\"tclLoadDld.o\"\n\t\t    DL_LIBS=\"-ldld\"\n\t\t    LDFLAGS=\"\"\n\t\t    LD_SEARCH_FLAGS=\"\"])\n\t    fi\n\t    if test \"`uname -m`\" = \"alpha\" ; then\n\t\tEXTRA_CFLAGS=\"-mieee\"\n\t    fi\n\n\t    # The combo of gcc + glibc has a bug related\n\t    # to inlining of functions like strtod(). The\n\t    # -fno-builtin flag should address this problem\n\t    # but it does not work. The -fno-inline flag\n\t    # is kind of overkill but it works.\n\t    # Disable inlining only when one of the\n\t    # files in compat/*.c is being linked in.\n\t    if test x\"${LIBOBJS}\" != x ; then\n\t        EXTRA_CFLAGS=\"${EXTRA_CFLAGS} -fno-inline\"\n\t    fi\n\n\t    ;;\n\tGNU*)\n\t    SHLIB_CFLAGS=\"-fPIC\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\n\t    if test \"$have_dl\" = yes; then\n\t\tSHLIB_LD=\"${CC} -shared\"\n\t\tDL_OBJS=\"\"\n\t\tDL_LIBS=\"-ldl\"\n\t\tLDFLAGS=\"-rdynamic\"\n\t\tLD_SEARCH_FLAGS=\"\"\n\t    else\n\t\tAC_CHECK_HEADER(dld.h, [\n\t\t    SHLIB_LD=\"ld -shared\"\n\t\t    DL_OBJS=\"\"\n\t\t    DL_LIBS=\"-ldld\"\n\t\t    LDFLAGS=\"\"\n\t\t    LD_SEARCH_FLAGS=\"\"])\n\t    fi\n\t    if test \"`uname -m`\" = \"alpha\" ; then\n\t\tEXTRA_CFLAGS=\"-mieee\"\n\t    fi\n\t    ;;\n\tMP-RAS-02*)\n\t    SHLIB_CFLAGS=\"-K PIC\"\n\t    SHLIB_LD=\"cc -G\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tMP-RAS-*)\n\t    SHLIB_CFLAGS=\"-K PIC\"\n\t    SHLIB_LD=\"cc -G\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"-Wl,-Bexport\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tNetBSD-*|FreeBSD-[[1-2]].*|OpenBSD-*)\n\t    # Not available on all versions:  check for include file.\n\t    AC_CHECK_HEADER(dlfcn.h, [\n\t\t# NetBSD/SPARC needs -fPIC, -fpic will not do.\n\t\tSHLIB_CFLAGS=\"-fPIC\"\n\t\tSHLIB_LD=\"ld -Bshareable -x\"\n\t\tSHLIB_LD_LIBS=\"\"\n\t\tSHLIB_SUFFIX=\".so\"\n\t\tDL_OBJS=\"tclLoadDl.o\"\n\t\tDL_LIBS=\"\"\n\t\tLDFLAGS=\"\"\n\t\tLD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'\n\t\tAC_MSG_CHECKING([for ELF])\n\t\tAC_EGREP_CPP(yes, [\n#ifdef __ELF__\n\tyes\n#endif\n\t\t],\n\t\t    AC_MSG_RESULT([yes])\n\t\t    SHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}\\$\\{DBGX\\}.so',\n\t\t    AC_MSG_RESULT([no])\n\t\t    SHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}\\$\\{DBGX\\}.so.1.0'\n\t\t)\n\t    ], [\n\t\tSHLIB_CFLAGS=\"\"\n\t\tSHLIB_LD=\"echo tclLdAout $CC \\{$SHLIB_CFLAGS\\} | `pwd`/tclsh -r\"\n\t\tSHLIB_LD_LIBS='${LIBS}'\n\t\tSHLIB_SUFFIX=\".a\"\n\t\tDL_OBJS=\"tclLoadAout.o\"\n\t\tDL_LIBS=\"\"\n\t\tLDFLAGS=\"\"\n\t\tLD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'\n\t\tSHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}\\$\\{DBGX\\}.a'\n\t    ])\n\n\t    # FreeBSD doesn't handle version numbers with dots.\n\n\t    UNSHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}\\$\\{DBGX\\}.a'\n\t    TCL_LIB_VERSIONS_OK=nodots\n\t    ;;\n\tFreeBSD-*)\n\t    # FreeBSD 3.* and greater have ELF.\n\t    SHLIB_CFLAGS=\"-fPIC\"\n\t    SHLIB_LD=\"ld -Bshareable -x\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"-export-dynamic\"\n\t    LD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'\n\t    if test \"${TCL_THREADS}\" = \"1\" ; then\n\t\t# The -pthread needs to go in the CFLAGS, not LIBS\n\t\tLIBS=`echo $LIBS | sed s/-pthread//`\n\t\tEXTRA_CFLAGS=\"-pthread\"\n\t    \tLDFLAGS=\"$LDFLAGS -pthread\"\n\t    fi\n\t    case $system in\n\t    FreeBSD-3.*)\n\t    \t# FreeBSD-3 doesn't handle version numbers with dots.\n\t    \tUNSHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}\\$\\{DBGX\\}.a'\n\t    \tSHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}\\$\\{DBGX\\}.so'\n\t    \tTCL_LIB_VERSIONS_OK=nodots\n\t\t;;\n\t    esac\n\t    ;;\n\tRhapsody-*|Darwin-*)\n\t    SHLIB_CFLAGS=\"-fno-common\"\n\t    SHLIB_LD=\"cc -dynamiclib \\${LDFLAGS}\"\n\t    TCL_SHLIB_LD_EXTRAS=\"-compatibility_version ${TCL_MAJOR_VERSION} -current_version \\${VERSION} -install_name \\${LIB_RUNTIME_DIR}/\\${TCL_LIB_FILE} -prebind -seg1addr 0xa000000\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".dylib\"\n\t    DL_OBJS=\"tclLoadDyld.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"-prebind\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    CFLAGS_OPTIMIZE=\"-O3\"\n\t    EXTRA_CFLAGS=\"-arch ppc -pipe\"\n\t    ;;\n\tNEXTSTEP-*)\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD=\"cc -nostdlib -r\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadNext.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tOS/390-*)\n\t    CFLAGS_OPTIMIZE=\"\"      # Optimizer is buggy\n\t    AC_DEFINE(_OE_SOCKETS)  # needed in sys/socket.h\n\t    ;;      \n\tOSF1-1.0|OSF1-1.1|OSF1-1.2)\n\t    # OSF/1 1.[012] from OSF, and derivatives, including Paragon OSF/1\n\t    SHLIB_CFLAGS=\"\"\n\t    # Hack: make package name same as library name\n\t    SHLIB_LD='ld -R -export $@:'\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadOSF.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tOSF1-1.*)\n\t    # OSF/1 1.3 from OSF using ELF, and derivatives, including AD2\n\t    SHLIB_CFLAGS=\"-fPIC\"\n\t    if test \"$SHARED_BUILD\" = \"1\" ; then\n\t        SHLIB_LD=\"ld -shared\"\n\t    else\n\t        SHLIB_LD=\"ld -non_shared\"\n\t    fi\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tOSF1-V*)\n\t    # Digital OSF/1\n\t    SHLIB_CFLAGS=\"\"\n\t    if test \"$SHARED_BUILD\" = \"1\" ; then\n\t        SHLIB_LD='ld -shared -expect_unresolved \"*\"'\n\t    else\n\t        SHLIB_LD='ld -non_shared -expect_unresolved \"*\"'\n\t    fi\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS='-rpath ${LIB_RUNTIME_DIR}'\n\t    if test \"$GCC\" != \"yes\" ; then\n\t\tEXTRA_CFLAGS=\"-DHAVE_TZSET -std1\"\n\t    fi\n\t    # see pthread_intro(3) for pthread support on osf1, k.furukawa\n\t    if test \"${TCL_THREADS}\" = \"1\" ; then\n\t\tEXTRA_CFLAGS=\"${EXTRA_CFLAGS} -DHAVE_PTHREAD_ATTR_SETSTACKSIZE\"\n\t\tEXTRA_CFLAGS=\"${EXTRA_CFLAGS} -DTCL_THREAD_STACK_MIN=PTHREAD_STACK_MIN*64\"\n\t\tLIBS=`echo $LIBS | sed s/-lpthreads//`\n\t\tif test \"$GCC\" = \"yes\" ; then\n\t\t    LIBS=\"$LIBS -lpthread -lmach -lexc\"\n\t\telse\n\t\t    EXTRA_CFLAGS=\"${EXTRA_CFLAGS} -pthread\"\n\t\t    LDFLAGS=\"-pthread\"\n\t\tfi\n\t    fi\n\n\t    ;;\n\tQNX-6*)\n\t    # QNX RTP\n\t    # This may work for all QNX, but it was only reported for v6.\n\t    SHLIB_CFLAGS=\"-fPIC\"\n\t    SHLIB_LD=\"ld -Bshareable -x\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    # dlopen is in -lc on QNX\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tRISCos-*)\n\t    SHLIB_CFLAGS=\"-G 0\"\n\t    SHLIB_LD=\"echo tclLdAout $CC \\{$SHLIB_CFLAGS\\} | `pwd`/tclsh -r -G 0\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".a\"\n\t    DL_OBJS=\"tclLoadAout.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"-Wl,-D,08000000\"\n\t    LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'\n\t    ;;\n\tSCO_SV-3.2*)\n\t    # Note, dlopen is available only on SCO 3.2.5 and greater. However,\n\t    # this test works, since \"uname -s\" was non-standard in 3.2.4 and\n\t    # below.\n\t    if test \"$GCC\" = \"yes\" ; then\n\t    \tSHLIB_CFLAGS=\"-fPIC -melf\"\n\t    \tLDFLAGS=\"-melf -Wl,-Bexport\"\n\t    else\n\t    \tSHLIB_CFLAGS=\"-Kpic -belf\"\n\t    \tLDFLAGS=\"-belf -Wl,-Bexport\"\n\t    fi\n\t    SHLIB_LD=\"ld -G\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tSINIX*5.4*)\n\t    SHLIB_CFLAGS=\"-K PIC\"\n\t    SHLIB_LD=\"cc -G\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tSunOS-4*)\n\t    SHLIB_CFLAGS=\"-PIC\"\n\t    SHLIB_LD=\"ld\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"\"\n\t    LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'\n\n\t    # SunOS can't handle version numbers with dots in them in library\n\t    # specs, like -ltcl7.5, so use -ltcl75 instead.  Also, it\n\t    # requires an extra version number at the end of .so file names.\n\t    # So, the library has to have a name like libtcl75.so.1.0\n\n\t    SHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}\\$\\{DBGX\\}.so.1.0'\n\t    UNSHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}\\$\\{DBGX\\}.a'\n\t    TCL_LIB_VERSIONS_OK=nodots\n\t    ;;\n\tSunOS-5.[[0-6]]*)\n\n\t    # Note: If _REENTRANT isn't defined, then Solaris\n\t    # won't define thread-safe library routines.\n\n\t    AC_DEFINE(_REENTRANT)\n\t    AC_DEFINE(_POSIX_PTHREAD_SEMANTICS)\n\n\t    SHLIB_CFLAGS=\"-KPIC\"\n\n\t    # Note: need the LIBS below, otherwise Tk won't find Tcl's\n\t    # symbols when dynamically loaded into tclsh.\n\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"\"\n\t    if test \"$GCC\" = \"yes\" ; then\n\t\tSHLIB_LD=\"$CC -shared\"\n\t\tLD_SEARCH_FLAGS='-Wl,-R,${LIB_RUNTIME_DIR}'\n\t    else\n\t\tSHLIB_LD=\"/usr/ccs/bin/ld -G -z text\"\n\t\tLD_SEARCH_FLAGS='-R ${LIB_RUNTIME_DIR}'\n\t    fi\n\t    ;;\n\tSunOS-5*)\n\n\t    # Note: If _REENTRANT isn't defined, then Solaris\n\t    # won't define thread-safe library routines.\n\n\t    AC_DEFINE(_REENTRANT)\n\t    AC_DEFINE(_POSIX_PTHREAD_SEMANTICS)\n\n\t    SHLIB_CFLAGS=\"-KPIC\"\n\t    LDFLAGS=\"\"\n    \n\t    # Check to enable 64-bit flags for compiler/linker\n\t    if test \"$do64bit\" = \"yes\" ; then\n\t\tarch=`isainfo`\n\t\tif test \"$arch\" = \"sparcv9 sparc\" ; then\n\t\t\tif test \"$GCC\" = \"yes\" ; then\n\t\t\t    AC_MSG_WARN(\"64bit mode not supported with GCC on $system\")\n\t\t\telse\n\t\t\t    do64bit_ok=yes\n\t\t\t    if test \"$do64bitVIS\" = \"yes\" ; then\n\t\t\t\tEXTRA_CFLAGS=\"-xarch=v9a\"\n\t\t\t    \tLDFLAGS=\"-xarch=v9a\"\n\t\t\t    else\n\t\t\t\tEXTRA_CFLAGS=\"-xarch=v9\"\n\t\t\t    \tLDFLAGS=\"-xarch=v9\"\n\t\t\t    fi\n\t\t\tfi\n\t\telse\n\t\t    AC_MSG_WARN(\"64bit mode only supported sparcv9 system\")\n\t\tfi\n\t    fi\n\t    \n\t    # Note: need the LIBS below, otherwise Tk won't find Tcl's\n\t    # symbols when dynamically loaded into tclsh.\n\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    if test \"$GCC\" = \"yes\" ; then\n\t\tSHLIB_LD=\"$CC -shared\"\n\t\tLD_SEARCH_FLAGS='-Wl,-R,${LIB_RUNTIME_DIR}'\n\t    else\n\t\tSHLIB_LD=\"/usr/ccs/bin/ld -G -z text\"\n\t\tLD_SEARCH_FLAGS='-R ${LIB_RUNTIME_DIR}'\n\t    fi\n\t    ;;\n\tULTRIX-4.*)\n\t    SHLIB_CFLAGS=\"-G 0\"\n\t    SHLIB_SUFFIX=\".a\"\n\t    SHLIB_LD=\"echo tclLdAout $CC \\{$SHLIB_CFLAGS\\} | `pwd`/tclsh -r -G 0\"\n\t    SHLIB_LD_LIBS='${LIBS}'\n\t    DL_OBJS=\"tclLoadAout.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"-Wl,-D,08000000\"\n\t    LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'\n\t    if test \"$GCC\" != \"yes\" ; then\n\t\tEXTRA_CFLAGS=\"-DHAVE_TZSET -std1\"\n\t    fi\n\t    ;;\n\tUNIX_SV* | UnixWare-5*)\n\t    SHLIB_CFLAGS=\"-KPIC\"\n\t    SHLIB_LD=\"cc -G\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    # Some UNIX_SV* systems (unixware 1.1.2 for example) have linkers\n\t    # that don't grok the -Bexport option.  Test that it does.\n\t    hold_ldflags=$LDFLAGS\n\t    AC_MSG_CHECKING([for ld accepts -Bexport flag])\n\t    LDFLAGS=\"${LDFLAGS} -Wl,-Bexport\"\n\t    AC_TRY_LINK(, [int i;], found=yes, found=no)\n\t    LDFLAGS=$hold_ldflags\n\t    AC_MSG_RESULT([$found])\n\t    if test $found = yes; then\n\t    LDFLAGS=\"-Wl,-Bexport\"\n\t    else\n\t    LDFLAGS=\"\"\n\t    fi\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n    esac\n\n    if test \"$do64bit\" = \"yes\" -a \"$do64bit_ok\" = \"no\" ; then\n    AC_MSG_WARN(\"64bit support being disabled -- don\\'t know magic for this platform\")\n    fi\n\n    # Step 4: If pseudo-static linking is in use (see K. B. Kenny, \"Dynamic\n    # Loading for Tcl -- What Became of It?\".  Proc. 2nd Tcl/Tk Workshop,\n    # New Orleans, LA, Computerized Processes Unlimited, 1994), then we need\n    # to determine which of several header files defines the a.out file\n    # format (a.out.h, sys/exec.h, or sys/exec_aout.h).  At present, we\n    # support only a file format that is more or less version-7-compatible. \n    # In particular,\n    #\t- a.out files must begin with `struct exec'.\n    #\t- the N_TXTOFF on the `struct exec' must compute the seek address\n    #\t  of the text segment\n    #\t- The `struct exec' must contain a_magic, a_text, a_data, a_bss\n    #\t  and a_entry fields.\n    # The following compilation should succeed if and only if either sys/exec.h\n    # or a.out.h is usable for the purpose.\n    #\n    # Note that the modified COFF format used on MIPS Ultrix 4.x is usable; the\n    # `struct exec' includes a second header that contains information that\n    # duplicates the v7 fields that are needed.\n\n    if test \"x$DL_OBJS\" = \"xtclLoadAout.o\" ; then\n\tAC_MSG_CHECKING([sys/exec.h])\n\tAC_TRY_COMPILE([#include <sys/exec.h>],[\n\t    struct exec foo;\n\t    unsigned long seek;\n\t    int flag;\n#if defined(__mips) || defined(mips)\n\t    seek = N_TXTOFF (foo.ex_f, foo.ex_o);\n#else\n\t    seek = N_TXTOFF (foo);\n#endif\n\t    flag = (foo.a_magic == OMAGIC);\n\t    return foo.a_text + foo.a_data + foo.a_bss + foo.a_entry;\n    ], tcl_ok=usable, tcl_ok=unusable)\n\tAC_MSG_RESULT([$tcl_ok])\n\tif test $tcl_ok = usable; then\n\t    AC_DEFINE(USE_SYS_EXEC_H)\n\telse\n\t    AC_MSG_CHECKING([a.out.h])\n\t    AC_TRY_COMPILE([#include <a.out.h>],[\n\t\tstruct exec foo;\n\t\tunsigned long seek;\n\t\tint flag;\n#if defined(__mips) || defined(mips)\n\t\tseek = N_TXTOFF (foo.ex_f, foo.ex_o);\n#else\n\t\tseek = N_TXTOFF (foo);\n#endif\n\t\tflag = (foo.a_magic == OMAGIC);\n\t\treturn foo.a_text + foo.a_data + foo.a_bss + foo.a_entry;\n\t    ], tcl_ok=usable, tcl_ok=unusable)\n\t    AC_MSG_RESULT([$tcl_ok])\n\t    if test $tcl_ok = usable; then\n\t\tAC_DEFINE(USE_A_OUT_H)\n\t    else\n\t\tAC_MSG_CHECKING([sys/exec_aout.h])\n\t\tAC_TRY_COMPILE([#include <sys/exec_aout.h>],[\n\t\t    struct exec foo;\n\t\t    unsigned long seek;\n\t\t    int flag;\n#if defined(__mips) || defined(mips)\n\t\t    seek = N_TXTOFF (foo.ex_f, foo.ex_o);\n#else\n\t\t    seek = N_TXTOFF (foo);\n#endif\n\t\t    flag = (foo.a_midmag == OMAGIC);\n\t\t    return foo.a_text + foo.a_data + foo.a_bss + foo.a_entry;\n\t\t], tcl_ok=usable, tcl_ok=unusable)\n\t\tAC_MSG_RESULT([$tcl_ok])\n\t\tif test $tcl_ok = usable; then\n\t\t    AC_DEFINE(USE_SYS_EXEC_AOUT_H)\n\t\telse\n\t\t    DL_OBJS=\"\"\n\t\tfi\n\t    fi\n\tfi\n    fi\n\n    # Step 5: disable dynamic loading if requested via a command-line switch.\n\n    AC_ARG_ENABLE(load, [  --disable-load          disallow dynamic loading and \"load\" command],\n\t[tcl_ok=$enableval], [tcl_ok=yes])\n    if test \"$tcl_ok\" = \"no\"; then\n\tDL_OBJS=\"\"\n    fi\n\n    if test \"x$DL_OBJS\" != \"x\" ; then\n\tBUILD_DLTEST=\"\\$(DLTEST_TARGETS)\"\n    else\n\techo \"Can't figure out how to do dynamic loading or shared libraries\"\n\techo \"on this system.\"\n\tSHLIB_CFLAGS=\"\"\n\tSHLIB_LD=\"\"\n\tSHLIB_SUFFIX=\"\"\n\tDL_OBJS=\"tclLoadNone.o\"\n\tDL_LIBS=\"\"\n\tLDFLAGS=\"\"\n\tLD_SEARCH_FLAGS=\"\"\n\tBUILD_DLTEST=\"\"\n    fi\n\n    # If we're running gcc, then change the C flags for compiling shared\n    # libraries to the right flags for gcc, instead of those for the\n    # standard manufacturer compiler.\n\n    if test \"$DL_OBJS\" != \"tclLoadNone.o\" ; then\n\tif test \"$GCC\" = \"yes\" ; then\n\t    case $system in\n\t\tAIX-*)\n\t\t    ;;\n\t\tBSD/OS*)\n\t\t    ;;\n\t\tIRIX*)\n\t\t    ;;\n\t\tNetBSD-*|FreeBSD-*|OpenBSD-*)\n\t\t    ;;\n\t\tRhapsody-*|Darwin-*)\n\t\t    ;;\n\t\tRISCos-*)\n\t\t    ;;\n\t\tSCO_SV-3.2*)\n\t\t    ;;\n\t\tULTRIX-4.*)\n\t\t    ;;\n\t\twindows)\n\t\t    ;;\n\t\t*)\n\t\t    SHLIB_CFLAGS=\"-fPIC\"\n\t\t    ;;\n\t    esac\n\tfi\n    fi\n\n    if test \"$SHARED_LIB_SUFFIX\" = \"\" ; then\n\tSHARED_LIB_SUFFIX='${VERSION}\\$\\{DBGX\\}${SHLIB_SUFFIX}'\n    fi\n    if test \"$UNSHARED_LIB_SUFFIX\" = \"\" ; then\n\tUNSHARED_LIB_SUFFIX='${VERSION}\\$\\{DBGX\\}.a'\n    fi\n\n    AC_SUBST(DL_LIBS)\n    AC_SUBST(CFLAGS_DEBUG)\n    AC_SUBST(CFLAGS_OPTIMIZE)\n    AC_SUBST(CFLAGS_WARNING)\n    AC_SUBST(EXTRA_CFLAGS)\n\n    SHLIB_LDFLAGS='$(LDFLAGS_DEFAULT)'\n    AC_SUBST(STLIB_LD)\n    AC_SUBST(SHLIB_LD)\n    AC_SUBST(SHLIB_CFLAGS)\n    AC_SUBST(SHLIB_LDFLAGS)\n    AC_SUBST(SHLIB_LD_LIBS)\n    AC_SUBST(LDFLAGS_DEBUG)\n    AC_SUBST(LDFLAGS_OPTIMIZE)\n])\n\n#--------------------------------------------------------------------\n# TEA_SERIAL_PORT\n#\n#\tDetermine which interface to use to talk to the serial port.\n#\tNote that #include lines must begin in leftmost column for\n#\tsome compilers to recognize them as preprocessor directives,\n#\tand some build environments have stdin not pointing at a\n#\tpseudo-terminal (usually /dev/null instead.)\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tDefines only one of the following vars:\n#\t\tHAVE_SYS_MODEM_H\n#\t\tUSE_TERMIOS\n#\t\tUSE_TERMIO\n#\t\tUSE_SGTTY\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN(TEA_SERIAL_PORT, [\n    AC_CHECK_HEADERS(sys/modem.h)\n    AC_MSG_CHECKING([termios vs. termio vs. sgtty])\n    AC_CACHE_VAL(tcl_cv_api_serial, [\n    AC_TRY_RUN([\n#include <termios.h>\n\nint main() {\n    struct termios t;\n    if (tcgetattr(0, &t) == 0) {\n\tcfsetospeed(&t, 0);\n\tt.c_cflag |= PARENB | PARODD | CSIZE | CSTOPB;\n\treturn 0;\n    }\n    return 1;\n}], tcl_cv_api_serial=termios, tcl_cv_api_serial=no, tcl_cv_api_serial=no)\n    if test $tcl_cv_api_serial = no ; then\n\tAC_TRY_RUN([\n#include <termio.h>\n\nint main() {\n    struct termio t;\n    if (ioctl(0, TCGETA, &t) == 0) {\n\tt.c_cflag |= CBAUD | PARENB | PARODD | CSIZE | CSTOPB;\n\treturn 0;\n    }\n    return 1;\n}], tcl_cv_api_serial=termio, tcl_cv_api_serial=no, tcl_cv_api_serial=no)\n    fi\n    if test $tcl_cv_api_serial = no ; then\n\tAC_TRY_RUN([\n#include <sgtty.h>\n\nint main() {\n    struct sgttyb t;\n    if (ioctl(0, TIOCGETP, &t) == 0) {\n\tt.sg_ospeed = 0;\n\tt.sg_flags |= ODDP | EVENP | RAW;\n\treturn 0;\n    }\n    return 1;\n}], tcl_cv_api_serial=sgtty, tcl_cv_api_serial=none, tcl_cv_api_serial=none)\n    fi\n    if test $tcl_cv_api_serial = no ; then\n\tAC_TRY_RUN([\n#include <termios.h>\n#include <errno.h>\n\nint main() {\n    struct termios t;\n    if (tcgetattr(0, &t) == 0\n\t|| errno == ENOTTY || errno == ENXIO || errno == EINVAL) {\n\tcfsetospeed(&t, 0);\n\tt.c_cflag |= PARENB | PARODD | CSIZE | CSTOPB;\n\treturn 0;\n    }\n    return 1;\n}], tcl_cv_api_serial=termios, tcl_cv_api_serial=no, tcl_cv_api_serial=no)\n    fi\n    if test $tcl_cv_api_serial = no; then\n\tAC_TRY_RUN([\n#include <termio.h>\n#include <errno.h>\n\nint main() {\n    struct termio t;\n    if (ioctl(0, TCGETA, &t) == 0\n\t|| errno == ENOTTY || errno == ENXIO || errno == EINVAL) {\n\tt.c_cflag |= CBAUD | PARENB | PARODD | CSIZE | CSTOPB;\n\treturn 0;\n    }\n    return 1;\n    }], tcl_cv_api_serial=termio, tcl_cv_api_serial=no, tcl_cv_api_serial=no)\n    fi\n    if test $tcl_cv_api_serial = no; then\n\tAC_TRY_RUN([\n#include <sgtty.h>\n#include <errno.h>\n\nint main() {\n    struct sgttyb t;\n    if (ioctl(0, TIOCGETP, &t) == 0\n\t|| errno == ENOTTY || errno == ENXIO || errno == EINVAL) {\n\tt.sg_ospeed = 0;\n\tt.sg_flags |= ODDP | EVENP | RAW;\n\treturn 0;\n    }\n    return 1;\n}], tcl_cv_api_serial=sgtty, tcl_cv_api_serial=none, tcl_cv_api_serial=none)\n    fi])\n    case $tcl_cv_api_serial in\n\ttermios) AC_DEFINE(USE_TERMIOS);;\n\ttermio)  AC_DEFINE(USE_TERMIO);;\n\tsgtty)   AC_DEFINE(USE_SGTTY);;\n    esac\n    AC_MSG_RESULT([$tcl_cv_api_serial])\n])\n\n#--------------------------------------------------------------------\n# TEA_MISSING_POSIX_HEADERS\n#\n#\tSupply substitutes for missing POSIX header files.  Special\n#\tnotes:\n#\t    - stdlib.h doesn't define strtol, strtoul, or\n#\t      strtod insome versions of SunOS\n#\t    - some versions of string.h don't declare procedures such\n#\t      as strstr\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tDefines some of the following vars:\n#\t\tNO_DIRENT_H\n#\t\tNO_ERRNO_H\n#\t\tNO_VALUES_H\n#\t\tNO_LIMITS_H\n#\t\tNO_STDLIB_H\n#\t\tNO_STRING_H\n#\t\tNO_SYS_WAIT_H\n#\t\tNO_DLFCN_H\n#\t\tHAVE_UNISTD_H\n#\t\tHAVE_SYS_PARAM_H\n#\n#\t\tHAVE_STRING_H ?\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN(TEA_MISSING_POSIX_HEADERS, [\n    AC_MSG_CHECKING([dirent.h])\n    AC_TRY_LINK([#include <sys/types.h>\n#include <dirent.h>], [\n#ifndef _POSIX_SOURCE\n#   ifdef __Lynx__\n\t/*\n\t * Generate compilation error to make the test fail:  Lynx headers\n\t * are only valid if really in the POSIX environment.\n\t */\n\n\tmissing_procedure();\n#   endif\n#endif\nDIR *d;\nstruct dirent *entryPtr;\nchar *p;\nd = opendir(\"foobar\");\nentryPtr = readdir(d);\np = entryPtr->d_name;\nclosedir(d);\n], tcl_ok=yes, tcl_ok=no)\n\n    if test $tcl_ok = no; then\n\tAC_DEFINE(NO_DIRENT_H)\n    fi\n\n    AC_MSG_RESULT([$tcl_ok])\n    AC_CHECK_HEADER(errno.h, , [AC_DEFINE(NO_ERRNO_H)])\n    AC_CHECK_HEADER(float.h, , [AC_DEFINE(NO_FLOAT_H)])\n    AC_CHECK_HEADER(values.h, , [AC_DEFINE(NO_VALUES_H)])\n    AC_CHECK_HEADER(limits.h, , [AC_DEFINE(NO_LIMITS_H)])\n    AC_CHECK_HEADER(stdlib.h, tcl_ok=1, tcl_ok=0)\n    AC_EGREP_HEADER(strtol, stdlib.h, , tcl_ok=0)\n    AC_EGREP_HEADER(strtoul, stdlib.h, , tcl_ok=0)\n    AC_EGREP_HEADER(strtod, stdlib.h, , tcl_ok=0)\n    if test $tcl_ok = 0; then\n\tAC_DEFINE(NO_STDLIB_H)\n    fi\n    AC_CHECK_HEADER(string.h, tcl_ok=1, tcl_ok=0)\n    AC_EGREP_HEADER(strstr, string.h, , tcl_ok=0)\n    AC_EGREP_HEADER(strerror, string.h, , tcl_ok=0)\n\n    # See also memmove check below for a place where NO_STRING_H can be\n    # set and why.\n\n    if test $tcl_ok = 0; then\n\tAC_DEFINE(NO_STRING_H)\n    fi\n\n    AC_CHECK_HEADER(sys/wait.h, , [AC_DEFINE(NO_SYS_WAIT_H)])\n    AC_CHECK_HEADER(dlfcn.h, , [AC_DEFINE(NO_DLFCN_H)])\n\n    # OS/390 lacks sys/param.h (and doesn't need it, by chance).\n\n    AC_HAVE_HEADERS(unistd.h sys/param.h)\n\n])\n\n#--------------------------------------------------------------------\n# TEA_PATH_X\n#\n#\tLocate the X11 header files and the X11 library archive.  Try\n#\tthe ac_path_x macro first, but if it doesn't find the X stuff\n#\t(e.g. because there's no xmkmf program) then check through\n#\ta list of possible directories.  Under some conditions the\n#\tautoconf macro will return an include directory that contains\n#\tno include files, so double-check its result just to be safe.\n#\n#\tThis should be called after TEA_CONFIG_CFLAGS as setting the\n#\tLIBS line can confuse some configure macro magic.\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tSets the following vars:\n#\t\tXINCLUDES\n#\t\tXLIBSW\n#\t\tLIBS (appends to)\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN(TEA_PATH_X, [\n    if test \"${TEA_PLATFORM}\" = \"unix\" ; then\n\tTEA_PATH_UNIX_X\n    fi\n])\n\nAC_DEFUN(TEA_PATH_UNIX_X, [\n    AC_PATH_X\n    not_really_there=\"\"\n    if test \"$no_x\" = \"\"; then\n\tif test \"$x_includes\" = \"\"; then\n\t    AC_TRY_CPP([#include <X11/XIntrinsic.h>], , not_really_there=\"yes\")\n\telse\n\t    if test ! -r $x_includes/X11/Intrinsic.h; then\n\t\tnot_really_there=\"yes\"\n\t    fi\n\tfi\n    fi\n    if test \"$no_x\" = \"yes\" -o \"$not_really_there\" = \"yes\"; then\n\tAC_MSG_CHECKING([for X11 header files])\n\tXINCLUDES=\"# no special path needed\"\n\tAC_TRY_CPP([#include <X11/Intrinsic.h>], , XINCLUDES=\"nope\")\n\tif test \"$XINCLUDES\" = nope; then\n\t    dirs=\"/usr/unsupported/include /usr/local/include /usr/X386/include /usr/X11R6/include /usr/X11R5/include /usr/include/X11R5 /usr/include/X11R4 /usr/openwin/include /usr/X11/include /usr/sww/include\"\n\t    for i in $dirs ; do\n\t\tif test -r $i/X11/Intrinsic.h; then\n\t\t    AC_MSG_RESULT([$i])\n\t\t    XINCLUDES=\" -I$i\"\n\t\t    break\n\t\tfi\n\t    done\n\tfi\n    else\n\tif test \"$x_includes\" != \"\"; then\n\t    XINCLUDES=-I$x_includes\n\telse\n\t    XINCLUDES=\"# no special path needed\"\n\tfi\n    fi\n    if test \"$XINCLUDES\" = nope; then\n\tAC_MSG_RESULT([could not find any!])\n\tXINCLUDES=\"# no include files found\"\n    fi\n\n    if test \"$no_x\" = yes; then\n\tAC_MSG_CHECKING([for X11 libraries])\n\tXLIBSW=nope\n\tdirs=\"/usr/unsupported/lib /usr/local/lib /usr/X386/lib /usr/X11R6/lib /usr/X11R5/lib /usr/lib/X11R5 /usr/lib/X11R4 /usr/openwin/lib /usr/X11/lib /usr/sww/X11/lib\"\n\tfor i in $dirs ; do\n\t    if test -r $i/libX11.a -o -r $i/libX11.so -o -r $i/libX11.sl; then\n\t\tAC_MSG_RESULT([$i])\n\t\tXLIBSW=\"-L$i -lX11\"\n\t\tx_libraries=\"$i\"\n\t\tbreak\n\t    fi\n\tdone\n    else\n\tif test \"$x_libraries\" = \"\"; then\n\t    XLIBSW=-lX11\n\telse\n\t    XLIBSW=\"-L$x_libraries -lX11\"\n\tfi\n    fi\n    if test \"$XLIBSW\" = nope ; then\n\tAC_CHECK_LIB(Xwindow, XCreateWindow, XLIBSW=-lXwindow)\n    fi\n    if test \"$XLIBSW\" = nope ; then\n\tAC_MSG_RESULT([could not find any!  Using -lX11.])\n\tXLIBSW=-lX11\n    fi\n    if test x\"${XLIBSW}\" != x ; then\n\tLIBS=\"${LIBS} ${XLIBSW}\"\n    fi\n])\n\n#--------------------------------------------------------------------\n# TEA_BLOCKING_STYLE\n#\n#\tThe statements below check for systems where POSIX-style\n#\tnon-blocking I/O (O_NONBLOCK) doesn't work or is unimplemented. \n#\tOn these systems (mostly older ones), use the old BSD-style\n#\tFIONBIO approach instead.\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tDefines some of the following vars:\n#\t\tHAVE_SYS_IOCTL_H\n#\t\tHAVE_SYS_FILIO_H\n#\t\tUSE_FIONBIO\n#\t\tO_NONBLOCK\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN(TEA_BLOCKING_STYLE, [\n    AC_CHECK_HEADERS(sys/ioctl.h)\n    AC_CHECK_HEADERS(sys/filio.h)\n    AC_MSG_CHECKING([FIONBIO vs. O_NONBLOCK for nonblocking I/O])\n    if test -f /usr/lib/NextStep/software_version; then\n\tsystem=NEXTSTEP-`awk '/3/,/3/' /usr/lib/NextStep/software_version`\n    else\n\tsystem=`uname -s`-`uname -r`\n\tif test \"$?\" -ne 0 ; then\n\t    system=unknown\n\telse\n\t    # Special check for weird MP-RAS system (uname returns weird\n\t    # results, and the version is kept in special file).\n\t\n\t    if test -r /etc/.relid -a \"X`uname -n`\" = \"X`uname -s`\" ; then\n\t\tsystem=MP-RAS-`awk '{print $3}' /etc/.relid'`\n\t    fi\n\t    if test \"`uname -s`\" = \"AIX\" ; then\n\t\tsystem=AIX-`uname -v`.`uname -r`\n\t    fi\n\tfi\n    fi\n    case $system in\n\t# There used to be code here to use FIONBIO under AIX.  However, it\n\t# was reported that FIONBIO doesn't work under AIX 3.2.5.  Since\n\t# using O_NONBLOCK seems fine under AIX 4.*, I removed the FIONBIO\n\t# code (JO, 5/31/97).\n\n\tOSF*)\n\t    AC_DEFINE(USE_FIONBIO)\n\t    AC_MSG_RESULT([FIONBIO])\n\t    ;;\n\tSunOS-4*)\n\t    AC_DEFINE(USE_FIONBIO)\n\t    AC_MSG_RESULT([FIONBIO])\n\t    ;;\n\tULTRIX-4.*)\n\t    AC_DEFINE(USE_FIONBIO)\n\t    AC_MSG_RESULT([FIONBIO])\n\t    ;;\n\t*)\n\t    AC_MSG_RESULT([O_NONBLOCK])\n\t    ;;\n    esac\n])\n\n#--------------------------------------------------------------------\n# TEA_TIME_HANLDER\n#\n#\tChecks how the system deals with time.h, what time structures\n#\tare used on the system, and what fields the structures have.\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tDefines some of the following vars:\n#\t\tUSE_DELTA_FOR_TZ\n#\t\tHAVE_TM_GMTOFF\n#\t\tHAVE_TM_TZADJ\n#\t\tHAVE_TIMEZONE_VAR\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN(TEA_TIME_HANDLER, [\n    AC_CHECK_HEADERS(sys/time.h)\n    AC_HEADER_TIME\n    AC_STRUCT_TIMEZONE\n\n    AC_CHECK_FUNCS(gmtime_r localtime_r)\n\n    AC_MSG_CHECKING([tm_tzadj in struct tm])\n    AC_CACHE_VAL(tcl_cv_member_tm_tzadj,\n\tAC_TRY_COMPILE([#include <time.h>], [struct tm tm; tm.tm_tzadj;],\n\t    tcl_cv_member_tm_tzadj=yes, tcl_cv_member_tm_tzadj=no))\n    AC_MSG_RESULT([$tcl_cv_member_tm_tzadj])\n    if test $tcl_cv_member_tm_tzadj = yes ; then\n\tAC_DEFINE(HAVE_TM_TZADJ)\n    fi\n\n    AC_MSG_CHECKING([tm_gmtoff in struct tm])\n    AC_CACHE_VAL(tcl_cv_member_tm_gmtoff,\n\tAC_TRY_COMPILE([#include <time.h>], [struct tm tm; tm.tm_gmtoff;],\n\t    tcl_cv_member_tm_gmtoff=yes, tcl_cv_member_tm_gmtoff=no))\n    AC_MSG_RESULT([$tcl_cv_member_tm_gmtoff])\n    if test $tcl_cv_member_tm_gmtoff = yes ; then\n\tAC_DEFINE(HAVE_TM_GMTOFF)\n    fi\n\n    #\n    # Its important to include time.h in this check, as some systems\n    # (like convex) have timezone functions, etc.\n    #\n    AC_MSG_CHECKING([long timezone variable])\n    AC_CACHE_VAL(tcl_cv_var_timezone,\n\tAC_TRY_COMPILE([#include <time.h>],\n\t    [extern long timezone;\n\t    timezone += 1;\n\t    exit (0);],\n\t    tcl_cv_timezone_long=yes, tcl_cv_timezone_long=no))\n    AC_MSG_RESULT([$tcl_cv_timezone_long])\n    if test $tcl_cv_timezone_long = yes ; then\n\tAC_DEFINE(HAVE_TIMEZONE_VAR)\n    else\n\t#\n\t# On some systems (eg IRIX 6.2), timezone is a time_t and not a long.\n\t#\n\tAC_MSG_CHECKING([time_t timezone variable])\n\tAC_CACHE_VAL(tcl_cv_timezone_time,\n\t    AC_TRY_COMPILE([#include <time.h>],\n\t\t[extern time_t timezone;\n\t\ttimezone += 1;\n\t\texit (0);],\n\t\ttcl_cv_timezone_time=yes, tcl_cv_timezone_time=no))\n\tAC_MSG_RESULT([$tcl_cv_timezone_time])\n\tif test $tcl_cv_timezone_time = yes ; then\n\t    AC_DEFINE(HAVE_TIMEZONE_VAR)\n\tfi\n    fi\n])\n\n#--------------------------------------------------------------------\n# TEA_BUGGY_STRTOD\n#\n#\tUnder Solaris 2.4, strtod returns the wrong value for the\n#\tterminating character under some conditions.  Check for this\n#\tand if the problem exists use a substitute procedure\n#\t\"fixstrtod\" (provided by Tcl) that corrects the error.\n#\tAlso, on Compaq's Tru64 Unix 5.0,\n#\tstrtod(\" \") returns 0.0 instead of a failure to convert.\n#\n# Arguments:\n#\tnone\n#\t\n# Results:\n#\n#\tMight defines some of the following vars:\n#\t\tstrtod (=fixstrtod)\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN(TEA_BUGGY_STRTOD, [\n    AC_CHECK_FUNC(strtod, tcl_strtod=1, tcl_strtod=0)\n    if test \"$tcl_strtod\" = 1; then\n\tAC_MSG_CHECKING([for Solaris2.4/Tru64 strtod bugs])\n\tAC_TRY_RUN([\n\t    extern double strtod();\n\t    int main()\n\t    {\n\t\tchar *string = \"NaN\", *spaceString = \" \";\n\t\tchar *term;\n\t\tdouble value;\n\t\tvalue = strtod(string, &term);\n\t\tif ((term != string) && (term[-1] == 0)) {\n\t\t    exit(1);\n\t\t}\n\t\tvalue = strtod(spaceString, &term);\n\t\tif (term == (spaceString+1)) {\n\t\t    exit(1);\n\t\t}\n\t\texit(0);\n\t    }], tcl_ok=1, tcl_ok=0, tcl_ok=0)\n\tif test \"$tcl_ok\" = 1; then\n\t    AC_MSG_RESULT([ok])\n\telse\n\t    AC_MSG_RESULT([buggy])\n\t    LIBOBJS=\"$LIBOBJS fixstrtod.o\"\n\t    AC_DEFINE(strtod, fixstrtod)\n\tfi\n    fi\n])\n\n#--------------------------------------------------------------------\n# TEA_TCL_LINK_LIBS\n#\n#\tSearch for the libraries needed to link the Tcl shell.\n#\tThings like the math library (-lm) and socket stuff (-lsocket vs.\n#\t-lnsl) are dealt with here.\n#\n# Arguments:\n#\tRequires the following vars to be set in the Makefile:\n#\t\tDL_LIBS\n#\t\tLIBS\n#\t\tMATH_LIBS\n#\t\n# Results:\n#\n#\tSubst's the following var:\n#\t\tTCL_LIBS\n#\t\tMATH_LIBS\n#\n#\tMight append to the following vars:\n#\t\tLIBS\n#\n#\tMight define the following vars:\n#\t\tHAVE_NET_ERRNO_H\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN(TEA_TCL_LINK_LIBS, [\n    #--------------------------------------------------------------------\n    # On a few very rare systems, all of the libm.a stuff is\n    # already in libc.a.  Set compiler flags accordingly.\n    # Also, Linux requires the \"ieee\" library for math to work\n    # right (and it must appear before \"-lm\").\n    #--------------------------------------------------------------------\n\n    AC_CHECK_FUNC(sin, MATH_LIBS=\"\", MATH_LIBS=\"-lm\")\n    AC_CHECK_LIB(ieee, main, [MATH_LIBS=\"-lieee $MATH_LIBS\"])\n\n    #--------------------------------------------------------------------\n    # Interactive UNIX requires -linet instead of -lsocket, plus it\n    # needs net/errno.h to define the socket-related error codes.\n    #--------------------------------------------------------------------\n\n    AC_CHECK_LIB(inet, main, [LIBS=\"$LIBS -linet\"])\n    AC_CHECK_HEADER(net/errno.h, AC_DEFINE(HAVE_NET_ERRNO_H))\n\n    #--------------------------------------------------------------------\n    #\tCheck for the existence of the -lsocket and -lnsl libraries.\n    #\tThe order here is important, so that they end up in the right\n    #\torder in the command line generated by make.  Here are some\n    #\tspecial considerations:\n    #\t1. Use \"connect\" and \"accept\" to check for -lsocket, and\n    #\t   \"gethostbyname\" to check for -lnsl.\n    #\t2. Use each function name only once:  can't redo a check because\n    #\t   autoconf caches the results of the last check and won't redo it.\n    #\t3. Use -lnsl and -lsocket only if they supply procedures that\n    #\t   aren't already present in the normal libraries.  This is because\n    #\t   IRIX 5.2 has libraries, but they aren't needed and they're\n    #\t   bogus:  they goof up name resolution if used.\n    #\t4. On some SVR4 systems, can't use -lsocket without -lnsl too.\n    #\t   To get around this problem, check for both libraries together\n    #\t   if -lsocket doesn't work by itself.\n    #--------------------------------------------------------------------\n\n    tcl_checkBoth=0\n    AC_CHECK_FUNC(connect, tcl_checkSocket=0, tcl_checkSocket=1)\n    if test \"$tcl_checkSocket\" = 1; then\n\tAC_CHECK_FUNC(setsockopt, , [AC_CHECK_LIB(socket, setsockopt,\n\t    LIBS=\"$LIBS -lsocket\", tcl_checkBoth=1)])\n    fi\n    if test \"$tcl_checkBoth\" = 1; then\n\ttk_oldLibs=$LIBS\n\tLIBS=\"$LIBS -lsocket -lnsl\"\n\tAC_CHECK_FUNC(accept, tcl_checkNsl=0, [LIBS=$tk_oldLibs])\n    fi\n    AC_CHECK_FUNC(gethostbyname, , [AC_CHECK_LIB(nsl, gethostbyname,\n\t    [LIBS=\"$LIBS -lnsl\"])])\n    \n    # Don't perform the eval of the libraries here because DL_LIBS\n    # won't be set until we call TEA_CONFIG_CFLAGS\n\n    TCL_LIBS='${DL_LIBS} ${LIBS} ${MATH_LIBS}'\n    AC_SUBST(TCL_LIBS)\n    AC_SUBST(MATH_LIBS)\n])\n\n#--------------------------------------------------------------------\n# TEA_TCL_EARLY_FLAGS\n#\n#\tCheck for what flags are needed to be passed so the correct OS\n#\tfeatures are available.\n#\n# Arguments:\n#\tNone\n#\t\n# Results:\n#\n#\tMight define the following vars:\n#\t\t_ISOC99_SOURCE\n#\t\t_LARGEFILE64_SOURCE\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN(TEA_TCL_EARLY_FLAG,[\n    AC_CACHE_VAL([tcl_cv_flag_]translit($1,[A-Z],[a-z]),\n\tAC_TRY_COMPILE([$2], $3, [tcl_cv_flag_]translit($1,[A-Z],[a-z])=no,\n\t    AC_TRY_COMPILE([[#define ]$1[ 1\n]$2], $3,\n\t\t[tcl_cv_flag_]translit($1,[A-Z],[a-z])=yes,\n\t\t[tcl_cv_flag_]translit($1,[A-Z],[a-z])=no)))\n    if test [\"x${tcl_cv_flag_]translit($1,[A-Z],[a-z])[}\" = \"xyes\"] ; then\n\tAC_DEFINE($1)\n\ttcl_flags=\"$tcl_flags $1\"\n    fi\n])\n\nAC_DEFUN(TEA_TCL_EARLY_FLAGS,[\n    AC_MSG_CHECKING([for required early compiler flags])\n    tcl_flags=\"\"\n    TEA_TCL_EARLY_FLAG(_ISOC99_SOURCE,[#include <stdlib.h>],\n\t[char *p = (char *)strtoll; char *q = (char *)strtoull;])\n    TEA_TCL_EARLY_FLAG(_LARGEFILE64_SOURCE,[#include <sys/stat.h>],\n\t[struct stat64 buf; int i = stat64(\"/\", &buf);])\n    if test \"x${tcl_flags}\" = \"x\" ; then\n\tAC_MSG_RESULT([none])\n    else\n\tAC_MSG_RESULT([${tcl_flags}])\n    fi\n])\n\n#--------------------------------------------------------------------\n# TEA_TCL_64BIT_FLAGS\n#\n#\tCheck for what is defined in the way of 64-bit features.\n#\n# Arguments:\n#\tNone\n#\t\n# Results:\n#\n#\tMight define the following vars:\n#\t\tTCL_WIDE_INT_IS_LONG\n#\t\tTCL_WIDE_INT_TYPE\n#\t\tHAVE_STRUCT_DIRENT64\n#\t\tHAVE_STRUCT_STAT64\n#\t\tHAVE_TYPE_OFF64_T\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN(TEA_TCL_64BIT_FLAGS, [\n    AC_MSG_CHECKING([for 64-bit integer type])\n    AC_CACHE_VAL(tcl_cv_type_64bit,[\n\tAC_TRY_COMPILE(,[__int64 value = (__int64) 0;],\n           tcl_cv_type_64bit=__int64,tcl_cv_type_64bit=none\n           AC_TRY_RUN([#include <unistd.h>\n\t\tint main() {exit(!(sizeof(long long) > sizeof(long)));}\n\t\t], tcl_cv_type_64bit=\"long long\"))])\n    if test \"${tcl_cv_type_64bit}\" = none ; then\n\tAC_MSG_RESULT([using long])\n    else\n\tAC_DEFINE_UNQUOTED(TCL_WIDE_INT_TYPE,${tcl_cv_type_64bit})\n\tAC_MSG_RESULT([${tcl_cv_type_64bit}])\n\n\t# Now check for auxiliary declarations\n\tAC_MSG_CHECKING([for struct dirent64])\n\tAC_CACHE_VAL(tcl_cv_struct_dirent64,[\n\t    AC_TRY_COMPILE([#include <sys/types.h>\n#include <sys/dirent.h>],[struct dirent64 p;],\n\t\ttcl_cv_struct_dirent64=yes,tcl_cv_struct_dirent64=no)])\n\tif test \"x${tcl_cv_struct_dirent64}\" = \"xyes\" ; then\n\t    AC_DEFINE(HAVE_STRUCT_DIRENT64)\n\tfi\n\tAC_MSG_RESULT([${tcl_cv_struct_dirent64}])\n\n\tAC_MSG_CHECKING([for struct stat64])\n\tAC_CACHE_VAL(tcl_cv_struct_stat64,[\n\t    AC_TRY_COMPILE([#include <sys/stat.h>],[struct stat64 p;\n],\n\t\ttcl_cv_struct_stat64=yes,tcl_cv_struct_stat64=no)])\n\tif test \"x${tcl_cv_struct_stat64}\" = \"xyes\" ; then\n\t    AC_DEFINE(HAVE_STRUCT_STAT64)\n\tfi\n\tAC_MSG_RESULT([${tcl_cv_struct_stat64}])\n\n\tAC_MSG_CHECKING([for off64_t])\n\tAC_CACHE_VAL(tcl_cv_type_off64_t,[\n\t    AC_TRY_COMPILE([#include <sys/types.h>],[off64_t offset;\n],\n\t\ttcl_cv_type_off64_t=yes,tcl_cv_type_off64_t=no)])\n\tif test \"x${tcl_cv_type_off64_t}\" = \"xyes\" ; then\n\t    AC_DEFINE(HAVE_TYPE_OFF64_T)\n\tfi\n\tAC_MSG_RESULT([${tcl_cv_type_off64_t}])\n    fi\n])\n\n##\n## Here ends the standard Tcl configuration bits and starts the\n## TEA specific functions\n##\n\n#------------------------------------------------------------------------\n# TEA_INIT --\n#\n#\tInit various Tcl Extension Architecture (TEA) variables.\n#\tThis should be the first called TEA_* macro.\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tDefines and substs the following vars:\n#\t\tCYGPATH\n#\t\tEXEEXT\n#\tDefines only:\n#\t\tTEA_INITED\n#\t\tTEA_PLATFORM (windows or unix)\n#\n# \"cygpath\" is used on windows to generate native path names for include\n# files. These variables should only be used with the compiler and linker\n# since they generate native path names.\n#\n# EXEEXT\n#\tSelect the executable extension based on the host type.  This\n#\tis a lightweight replacement for AC_EXEEXT that doesn't require\n#\ta compiler.\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_INIT, [\n    AC_MSG_CHECKING([for correct TEA configuration])\n    if test x\"${PACKAGE}\" = x ; then\n\tAC_MSG_ERROR([\nThe PACKAGE variable must be defined by your TEA configure.in])\n    fi\n    AC_MSG_RESULT([ok])\n    TEA_INITED=ok\n    case \"`uname -s`\" in\n\t*win32*|*WIN32*|*CYGWIN_NT*|*CYGWIN_9*|*CYGWIN_ME*|*MINGW32_*)\n\t    AC_CHECK_PROG(CYGPATH, cygpath, cygpath -w, echo)\n\t    EXEEXT=\".exe\"\n\t    TEA_PLATFORM=\"windows\"\n\t    ;;\n\t*)\n\t    CYGPATH=echo\n\t    EXEEXT=\"\"\n\t    TEA_PLATFORM=\"unix\"\n\t    ;;\n    esac\n\n    # Check if exec_prefix is set. If not use fall back to prefix\n    if test x$exec_prefix = xNONE ; then exec_prefix=$prefix ; fi\n\n    AC_SUBST(EXEEXT)\n    AC_SUBST(CYGPATH)\n])\n\n#------------------------------------------------------------------------\n# TEA_PREFIX --\n#\n#\tHandle the --prefix=... option by defaulting to what Tcl gave\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tIf --prefix or --exec-prefix was not specified, $prefix and\n#\t$exec_prefix will be set to the values given to Tcl when it was\n#\tconfigured.\n#------------------------------------------------------------------------\nAC_DEFUN(TEA_PREFIX, [\n    # Should be AC_MSG_NOTICE, but that requires autoconf 2.50\n    if test \"${prefix}\" = \"NONE\"; then\n\tprefix_default=yes\n\tif test x\"${TCL_PREFIX}\" != x; then\n\t    AC_MSG_WARN([--prefix defaulting to TCL_PREFIX ${TCL_PREFIX}])\n\t    prefix=${TCL_PREFIX}\n\telse\n\t    prefix=/usr/local\n\tfi\n    fi\n    if test \"${exec_prefix}\" = \"NONE\" -a x\"${prefix_default}\" = x\"yes\" ; then\n\tif test x\"${TCL_EXEC_PREFIX}\" != x; then\n\t    AC_MSG_WARN([--exec-prefix defaulting to TCL_EXEC_PREFIX ${TCL_EXEC_PREFIX}])\n\t    exec_prefix=${TCL_EXEC_PREFIX}\n\telse\n\t    exec_prefix=$prefix\n\tfi\n    fi\n])\n\n#------------------------------------------------------------------------\n# TEA_PROG_CC --\n#\n#\tDo compiler checks the way we want.  This is just a replacement\n#\tfor AC_PROG_CC in TEA configure.in files to make them cleaner.\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tSets up CC var and other standard bits we need to make executables.\n#------------------------------------------------------------------------\nAC_DEFUN(TEA_SETUP_COMPILER, [\n    # If the user did not set CFLAGS, set it now to keep\n    # the AC_PROG_CC macro from adding \"-g -O2\".\n    if test \"${CFLAGS+set}\" != \"set\" ; then\n\tCFLAGS=\"\"\n    fi\n\n    AC_PROG_CC\n\n    #------------------------------------------------------------------------\n    # If we're using GCC, see if the compiler understands -pipe. If so, use it.\n    # It makes compiling go faster.  (This is only a performance feature.)\n    #------------------------------------------------------------------------\n\n    if test -z \"$no_pipe\" -a -n \"$GCC\"; then\n\tAC_MSG_CHECKING([if the compiler understands -pipe])\n\tOLDCC=\"$CC\"\n\tCC=\"$CC -pipe\"\n\tAC_TRY_COMPILE(,, AC_MSG_RESULT([yes]), CC=\"$OLDCC\"\n\t    AC_MSG_RESULT([no]))\n    fi\n\n    AC_PROG_INSTALL\n\n    #--------------------------------------------------------------------\n    # Checks to see if the make program sets the $MAKE variable.\n    #--------------------------------------------------------------------\n\n    AC_PROG_MAKE_SET\n\n    #--------------------------------------------------------------------\n    # Find ranlib\n    #--------------------------------------------------------------------\n\n    AC_PROG_RANLIB\n\n    #--------------------------------------------------------------------\n    # Determines the correct binary file extension (.o, .obj, .exe etc.)\n    #--------------------------------------------------------------------\n\n    AC_OBJEXT\n    AC_EXEEXT\n\n    #--------------------------------------------------------------------\n    # Common compiler flag setup\n    #--------------------------------------------------------------------\n\n    TEA_TCL_EARLY_FLAGS\n    TEA_TCL_64BIT_FLAGS\n    #TEA_C_BIGENDIAN\n    if test \"${TEA_PLATFORM}\" = \"unix\" ; then\n\tTEA_MISSING_POSIX_HEADERS\n\tTEA_BUGGY_STRTOD\n    fi\n])\n\n#------------------------------------------------------------------------\n# TEA_MAKE_LIB --\n#\n#\tGenerate a line that can be used to build a shared/unshared library\n#\tin a platform independent manner.\n#\n# Arguments:\n#\tnone\n#\n#\tRequires:\n#\n# Results:\n#\n#\tDefines the following vars:\n#\tCFLAGS -\tDone late here to note disturb other AC macros\n#       MAKE_LIB -      Command to execute to build the Tcl library;\n#                       differs depending on whether or not Tcl is being\n#                       compiled as a shared library.\n#\tMAKE_SHARED_LIB\tMakefile rule for building a shared library\n#\tMAKE_STATIC_LIB\tMakefile rule for building a static library\n#\tMAKE_STUB_LIB\tMakefile rule for building a stub library\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_MAKE_LIB, [\n    if test \"${TEA_PLATFORM}\" = \"windows\" -a \"$GCC\" != \"yes\"; then\n\tMAKE_STATIC_LIB=\"\\${STLIB_LD} -out:\\[$]@ \\$(\\[$](PACKAGE)_OBJECTS)\"\n\tMAKE_SHARED_LIB=\"\\${SHLIB_LD} \\${SHLIB_LDFLAGS} \\${SHLIB_LD_LIBS} \\$(LDFLAGS) -out:\\[$]@ \\$(\\[$](PACKAGE)_OBJECTS)\"\n\tMAKE_STUB_LIB=\"\\${STLIB_LD} -out:\\[$]@ \\$(\\[$](PACKAGE)stub_OBJECTS)\"\n    else\n\tMAKE_STATIC_LIB=\"\\${STLIB_LD} \\[$]@ \\$(\\[$](PACKAGE)_OBJECTS)\"\n\tMAKE_SHARED_LIB=\"\\${SHLIB_LD} -o \\[$]@ \\$(\\[$](PACKAGE)_OBJECTS) \\${SHLIB_LDFLAGS} \\${SHLIB_LD_LIBS}\"\n\tMAKE_STUB_LIB=\"\\${STLIB_LD} \\[$]@ \\$(\\[$](PACKAGE)stub_OBJECTS)\"\n    fi\n\n    if test \"${SHARED_BUILD}\" = \"1\" ; then\n\tMAKE_LIB=\"${MAKE_SHARED_LIB} \"\n    else\n\tMAKE_LIB=\"${MAKE_STATIC_LIB} \"\n    fi\n\n    #--------------------------------------------------------------------\n    # Shared libraries and static libraries have different names.\n    # Use the double eval to make sure the ${DBGX} in the suffix is\n    # substituted.\n    #--------------------------------------------------------------------\n\n    RANLIB_STUB=\"${RANLIB}\"\n    if test \"${TEA_PLATFORM}\" = \"windows\" ; then\n\tif test \"${SHARED_BUILD}\" = \"1\" ; then\n\t    # We force the unresolved linking of symbols that are really in\n\t    # the private libraries of Tcl and Tk.\n\t    SHLIB_LD_LIBS=\"${SHLIB_LD_LIBS} \\\"`${CYGPATH} ${TCL_BIN_DIR}/${TCL_STUB_LIB_FILE}`\\\"\"\n\t    if test x\"${TK_BIN_DIR}\" != x ; then\n\t\tSHLIB_LD_LIBS=\"${SHLIB_LD_LIBS} \\\"`${CYGPATH} ${TK_BIN_DIR}/${TK_STUB_LIB_FILE}`\\\"\"\n\t    fi\n\t    eval eval \"${PACKAGE}_LIB_FILE=${PACKAGE}${SHARED_LIB_SUFFIX}\"\n\t    RANLIB=:\n\telse\n\t    eval eval \"${PACKAGE}_LIB_FILE=${PACKAGE}${UNSHARED_LIB_SUFFIX}\"\n\tfi\n\t# Some packages build there own stubs libraries\n\teval eval \"${PACKAGE}stub_LIB_FILE=${PACKAGE}stub${UNSHARED_LIB_SUFFIX}\"\n    else\n\tif test \"${SHARED_BUILD}\" = \"1\" ; then\n\t    SHLIB_LD_LIBS=\"${SHLIB_LD_LIBS} ${TCL_STUB_LIB_SPEC}\"\n\t    if test x\"${TK_BIN_DIR}\" != x ; then\n\t\tSHLIB_LD_LIBS=\"${SHLIB_LD_LIBS} ${TK_STUB_LIB_SPEC}\"\n\t    fi\n\t    eval eval \"${PACKAGE}_LIB_FILE=lib${PACKAGE}${SHARED_LIB_SUFFIX}\"\n\t    RANLIB=:\n\telse\n\t    eval eval \"${PACKAGE}_LIB_FILE=lib${PACKAGE}${UNSHARED_LIB_SUFFIX}\"\n\tfi\n\t# Some packages build there own stubs libraries\n\teval eval \"${PACKAGE}stub_LIB_FILE=lib${PACKAGE}stub${UNSHARED_LIB_SUFFIX}\"\n    fi\n\n    # These are escaped so that only CFLAGS is picked up at configure time.\n    # The other values will be substituted at make time.\n    CFLAGS=\"${CFLAGS} \\${CFLAGS_DEFAULT} \\${CFLAGS_WARNING}\"\n    if test \"${SHARED_BUILD}\" = \"1\" ; then\n\tCFLAGS=\"${CFLAGS} \\${SHLIB_CFLAGS}\"\n    fi\n\n    AC_SUBST(MAKE_LIB)\n    AC_SUBST(MAKE_SHARED_LIB)\n    AC_SUBST(MAKE_STATIC_LIB)\n    AC_SUBST(MAKE_STUB_LIB)\n    AC_SUBST(RANLIB_STUB)\n])\n\n#------------------------------------------------------------------------\n# TEA_LIB_SPEC --\n#\n#\tCompute the name of an existing object library located in libdir\n#\tfrom the given base name and produce the appropriate linker flags.\n#\n# Arguments:\n#\tbasename\tThe base name of the library without version\n#\t\t\tnumbers, extensions, or \"lib\" prefixes.\n#\textra_dir\tExtra directory in which to search for the\n#\t\t\tlibrary.  This location is used first, then\n#\t\t\t$prefix/$exec-prefix, then some defaults.\n#\n# Requires:\n#\tTEA_INIT and TEA_PREFIX must be called first.\n#\n# Results:\n#\n#\tDefines the following vars:\n#\t\t${basename}_LIB_NAME\tThe computed library name.\n#\t\t${basename}_LIB_SPEC\tThe computed linker flags.\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_LIB_SPEC, [\n    AC_MSG_CHECKING([for $1 library])\n\n    # Look in exec-prefix for the library (defined by TEA_PREFIX).\n\n    tea_lib_name_dir=\"${exec_prefix}/lib\"\n\n    # Or in a user-specified location.\n\n    if test x\"$2\" != x ; then\n\ttea_extra_lib_dir=$2\n    else\n\ttea_extra_lib_dir=NONE\n    fi\n\n    for i in \\\n\t    `ls -dr ${tea_extra_lib_dir}/$1[[0-9]]*.lib 2>/dev/null ` \\\n\t    `ls -dr ${tea_extra_lib_dir}/lib$1[[0-9]]* 2>/dev/null ` \\\n\t    `ls -dr ${tea_lib_name_dir}/$1[[0-9]]*.lib 2>/dev/null ` \\\n\t    `ls -dr ${tea_lib_name_dir}/lib$1[[0-9]]* 2>/dev/null ` \\\n\t    `ls -dr /usr/lib/$1[[0-9]]*.lib 2>/dev/null ` \\\n\t    `ls -dr /usr/lib/lib$1[[0-9]]* 2>/dev/null ` \\\n\t    `ls -dr /usr/local/lib/$1[[0-9]]*.lib 2>/dev/null ` \\\n\t    `ls -dr /usr/local/lib/lib$1[[0-9]]* 2>/dev/null ` ; do\n\tif test -f \"$i\" ; then\n\t    tea_lib_name_dir=`dirname $i`\n\t    $1_LIB_NAME=`basename $i`\n\t    $1_LIB_PATH_NAME=$i\n\t    break\n\tfi\n    done\n\n    if test \"${TEA_PLATFORM}\" = \"windows\"; then\n\t$1_LIB_SPEC=\\\"`${CYGPATH} ${$1_LIB_PATH_NAME} 2>/dev/null`\\\"\n    else\n\t# Strip off the leading \"lib\" and trailing \".a\" or \".so\"\n\n\ttea_lib_name_lib=`echo ${$1_LIB_NAME}|sed -e 's/^lib//' -e 's/\\.[[^.]]*$//' -e 's/\\.so.*//'`\n\t$1_LIB_SPEC=\"-L${tea_lib_name_dir} -l${tea_lib_name_lib}\"\n    fi\n\n    if test \"x${$1_LIB_NAME}\" = x ; then\n\tAC_MSG_ERROR([not found])\n    else\n\tAC_MSG_RESULT([${$1_LIB_SPEC}])\n    fi\n])\n\n#------------------------------------------------------------------------\n# TEA_PRIVATE_TCL_HEADERS --\n#\n#\tLocate the private Tcl include files\n#\n# Arguments:\n#\n#\tRequires:\n#\t\tTCL_SRC_DIR\tAssumes that TEA_LOAD_TCLCONFIG has\n#\t\t\t\t already been called.\n#\n# Results:\n#\n#\tSubsts the following vars:\n#\t\tTCL_TOP_DIR_NATIVE\n#\t\tTCL_GENERIC_DIR_NATIVE\n#\t\tTCL_UNIX_DIR_NATIVE\n#\t\tTCL_WIN_DIR_NATIVE\n#\t\tTCL_BMAP_DIR_NATIVE\n#\t\tTCL_TOOL_DIR_NATIVE\n#\t\tTCL_PLATFORM_DIR_NATIVE\n#\t\tTCL_BIN_DIR_NATIVE\n#\t\tTCL_INCLUDES\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_PRIVATE_TCL_HEADERS, [\n    AC_MSG_CHECKING([for Tcl private include files])\n\n    if test \"${TEA_PLATFORM}\" = \"windows\"; then\n\tTCL_TOP_DIR_NATIVE=\\\"`${CYGPATH} ${TCL_SRC_DIR}`\\\"\n\tTCL_GENERIC_DIR_NATIVE=\\\"`${CYGPATH} ${TCL_SRC_DIR}/generic`\\\"\n\tTCL_UNIX_DIR_NATIVE=\\\"`${CYGPATH} ${TCL_SRC_DIR}/unix`\\\"\n\tTCL_WIN_DIR_NATIVE=\\\"`${CYGPATH} ${TCL_SRC_DIR}/win`\\\"\n\tTCL_BMAP_DIR_NATIVE=\\\"`${CYGPATH} ${TCL_SRC_DIR}/bitmaps`\\\"\n\tTCL_TOOL_DIR_NATIVE=\\\"`${CYGPATH} ${TCL_SRC_DIR}/tools`\\\"\n\tTCL_COMPAT_DIR_NATIVE=\\\"`${CYGPATH} ${TCL_SRC_DIR}/compat`\\\"\n\tTCL_PLATFORM_DIR_NATIVE=${TCL_WIN_DIR_NATIVE}\n    else\n\tTCL_TOP_DIR_NATIVE='$(TCL_SRC_DIR)'\n\tTCL_GENERIC_DIR_NATIVE='$(TCL_TOP_DIR_NATIVE)/generic'\n\tTCL_UNIX_DIR_NATIVE='$(TCL_TOP_DIR_NATIVE)/unix'\n\tTCL_WIN_DIR_NATIVE='$(TCL_TOP_DIR_NATIVE)/win'\n\tTCL_BMAP_DIR_NATIVE='$(TCL_TOP_DIR_NATIVE)/bitmaps'\n\tTCL_TOOL_DIR_NATIVE='$(TCL_TOP_DIR_NATIVE)/tools'\n\tTCL_COMPAT_DIR_NATIVE='$(TCL_TOP_DIR_NATIVE)/compat'\n\tTCL_PLATFORM_DIR_NATIVE=${TCL_UNIX_DIR_NATIVE}\n    fi\n\n    AC_SUBST(TCL_TOP_DIR_NATIVE)\n    AC_SUBST(TCL_GENERIC_DIR_NATIVE)\n    AC_SUBST(TCL_UNIX_DIR_NATIVE)\n    AC_SUBST(TCL_WIN_DIR_NATIVE)\n    AC_SUBST(TCL_BMAP_DIR_NATIVE)\n    AC_SUBST(TCL_TOOL_DIR_NATIVE)\n    AC_SUBST(TCL_PLATFORM_DIR_NATIVE)\n\n    TCL_INCLUDES=\"-I${TCL_GENERIC_DIR_NATIVE} -I${TCL_PLATFORM_DIR_NATIVE}\"\n    AC_SUBST(TCL_INCLUDES)\n    AC_MSG_RESULT([Using srcdir found in tclConfig.sh: ${TCL_SRC_DIR}])\n])\n\n#------------------------------------------------------------------------\n# TEA_PUBLIC_TCL_HEADERS --\n#\n#\tLocate the installed public Tcl header files\n#\n# Arguments:\n#\tNone.\n#\n# Requires:\n#\tCYGPATH must be set\n#\n# Results:\n#\n#\tAdds a --with-tclinclude switch to configure.\n#\tResult is cached.\n#\n#\tSubsts the following vars:\n#\t\tTCL_INCLUDES\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_PUBLIC_TCL_HEADERS, [\n    AC_MSG_CHECKING([for Tcl public headers])\n\n    AC_ARG_WITH(tclinclude, [  --with-tclinclude      directory containing the public Tcl header files], with_tclinclude=${withval})\n\n    AC_CACHE_VAL(ac_cv_c_tclh, [\n\t# Use the value from --with-tclinclude, if it was given\n\n\tif test x\"${with_tclinclude}\" != x ; then\n\t    if test -f \"${with_tclinclude}/tcl.h\" ; then\n\t\tac_cv_c_tclh=${with_tclinclude}\n\t    else\n\t\tAC_MSG_ERROR([${with_tclinclude} directory does not contain tcl.h])\n\t    fi\n\telse\n\t    # Check order: pkg --prefix location, Tcl's --prefix location,\n\t    # directory of tclConfig.sh, and Tcl source directory.\n\t    # Looking in the source dir is not ideal, but OK.\n\n\t    eval \"temp_includedir=${includedir}\"\n\t    list=\"`ls -d ${temp_includedir}      2>/dev/null` \\\n\t\t`ls -d ${TCL_PREFIX}/include     2>/dev/null` \\\n\t\t`ls -d ${TCL_BIN_DIR}/../include 2>/dev/null` \\\n\t\t`ls -d ${TCL_SRC_DIR}/generic    2>/dev/null`\"\n\t    if test \"${TEA_PLATFORM}\" != \"windows\" -o \"$GCC\" = \"yes\"; then\n\t\tlist=\"$list /usr/local/include /usr/include\"\n\t    fi\n\t    for i in $list ; do\n\t\tif test -f \"$i/tcl.h\" ; then\n\t\t    ac_cv_c_tclh=$i\n\t\t    break\n\t\tfi\n\t    done\n\tfi\n    ])\n\n    # Print a message based on how we determined the include path\n\n    if test x\"${ac_cv_c_tclh}\" = x ; then\n\tAC_MSG_ERROR([tcl.h not found.  Please specify its location with --with-tclinclude])\n    else\n\tAC_MSG_RESULT([${ac_cv_c_tclh}])\n    fi\n\n    # Convert to a native path and substitute into the output files.\n\n    INCLUDE_DIR_NATIVE=`${CYGPATH} ${ac_cv_c_tclh}`\n\n    TCL_INCLUDES=-I\\\"${INCLUDE_DIR_NATIVE}\\\"\n\n    AC_SUBST(TCL_INCLUDES)\n])\n\n#------------------------------------------------------------------------\n# TEA_PRIVATE_TK_HEADERS --\n#\n#\tLocate the private Tk include files\n#\n# Arguments:\n#\n#\tRequires:\n#\t\tTK_SRC_DIR\tAssumes that TEA_LOAD_TKCONFIG has\n#\t\t\t\t already been called.\n#\n# Results:\n#\n#\tSubsts the following vars:\n#\t\tTK_INCLUDES\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_PRIVATE_TK_HEADERS, [\n    AC_MSG_CHECKING([for Tk private include files])\n\n    if test \"${TEA_PLATFORM}\" = \"windows\"; then\n\tTK_TOP_DIR_NATIVE=\\\"`${CYGPATH} ${TK_SRC_DIR}`\\\"\n\tTK_UNIX_DIR_NATIVE=\\\"`${CYGPATH} ${TK_SRC_DIR}/unix`\\\"\n\tTK_WIN_DIR_NATIVE=\\\"`${CYGPATH} ${TK_SRC_DIR}/win`\\\"\n\tTK_GENERIC_DIR_NATIVE=\\\"`${CYGPATH} ${TK_SRC_DIR}/generic`\\\"\n\tTK_XLIB_DIR_NATIVE=\\\"`${CYGPATH} ${TK_SRC_DIR}/xlib`\\\"\n\tTK_PLATFORM_DIR_NATIVE=${TK_WIN_DIR_NATIVE}\n\n\tTK_INCLUDES=\"-I${TK_GENERIC_DIR_NATIVE} -I${TK_PLATFORM_DIR_NATIVE} -I${TK_XLIB_DIR_NATIVE}\"\n    else\n\tTK_TOP_DIR_NATIVE='$(TK_SRC_DIR)'\n\tTK_GENERIC_DIR_NATIVE='$(TK_TOP_DIR_NATIVE)/generic'\n\tTK_UNIX_DIR_NATIVE='$(TK_TOP_DIR_NATIVE)/unix'\n\tTK_WIN_DIR_NATIVE='$(TK_TOP_DIR_NATIVE)/win'\n\tTK_PLATFORM_DIR_NATIVE=${TK_UNIX_DIR_NATIVE}\n\n\tTK_INCLUDES=\"-I${TK_GENERIC_DIR_NATIVE} -I${TK_PLATFORM_DIR_NATIVE}\"\n    fi\n\n    AC_SUBST(TK_TOP_DIR_NATIVE)\n    AC_SUBST(TK_UNIX_DIR_NATIVE)\n    AC_SUBST(TK_WIN_DIR_NATIVE)\n    AC_SUBST(TK_GENERIC_DIR_NATIVE)\n    AC_SUBST(TK_XLIB_DIR_NATIVE)\n    AC_SUBST(TK_PLATFORM_DIR_NATIVE)\n\n    AC_SUBST(TK_INCLUDES)\n    AC_MSG_RESULT([Using srcdir found in tkConfig.sh: ${TK_SRC_DIR}])\n])\n\n#------------------------------------------------------------------------\n# TEA_PUBLIC_TK_HEADERS --\n#\n#\tLocate the installed public Tk header files\n#\n# Arguments:\n#\tNone.\n#\n# Requires:\n#\tCYGPATH must be set\n#\n# Results:\n#\n#\tAdds a --with-tkinclude switch to configure.\n#\tResult is cached.\n#\n#\tSubsts the following vars:\n#\t\tTK_INCLUDES\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_PUBLIC_TK_HEADERS, [\n    AC_MSG_CHECKING([for Tk public headers])\n\n    AC_ARG_WITH(tkinclude, [  --with-tkinclude      directory containing the public Tk header files.], with_tkinclude=${withval})\n\n    AC_CACHE_VAL(ac_cv_c_tkh, [\n\t# Use the value from --with-tkinclude, if it was given\n\n\tif test x\"${with_tkinclude}\" != x ; then\n\t    if test -f \"${with_tkinclude}/tk.h\" ; then\n\t\tac_cv_c_tkh=${with_tkinclude}\n\t    else\n\t\tAC_MSG_ERROR([${with_tkinclude} directory does not contain tk.h])\n\t    fi\n\telse\n\t    # Check order: pkg --prefix location, Tcl's --prefix location,\n\t    # directory of tclConfig.sh, and Tcl source directory.\n\t    # Looking in the source dir is not ideal, but OK.\n\n\t    eval \"temp_includedir=${includedir}\"\n\t    list=\"`ls -d ${temp_includedir}      2>/dev/null` \\\n\t\t`ls -d ${TK_PREFIX}/include      2>/dev/null` \\\n\t\t`ls -d ${TCL_PREFIX}/include     2>/dev/null` \\\n\t\t`ls -d ${TCL_BIN_DIR}/../include 2>/dev/null` \\\n\t\t`ls -d ${TK_SRC_DIR}/generic     2>/dev/null`\"\n\t    if test \"${TEA_PLATFORM}\" != \"windows\" -o \"$GCC\" = \"yes\"; then\n\t\tlist=\"$list /usr/local/include /usr/include\"\n\t    fi\n\t    for i in $list ; do\n\t\tif test -f \"$i/tk.h\" ; then\n\t\t    ac_cv_c_tkh=$i\n\t\t    break\n\t\tfi\n\t    done\n\tfi\n    ])\n\n    # Print a message based on how we determined the include path\n\n    if test x\"${ac_cv_c_tkh}\" = x ; then\n\tAC_MSG_ERROR([tk.h not found.  Please specify its location with --with-tkinclude])\n    else\n\tAC_MSG_RESULT([${ac_cv_c_tkh}])\n    fi\n\n    # Convert to a native path and substitute into the output files.\n\n    INCLUDE_DIR_NATIVE=`${CYGPATH} ${ac_cv_c_tkh}`\n\n    TK_INCLUDES=-I\\\"${INCLUDE_DIR_NATIVE}\\\"\n\n    AC_SUBST(TK_INCLUDES)\n])\n\n#------------------------------------------------------------------------\n# TEA_PROG_TCLSH\n#\tLocate a tclsh shell in the following directories:\n#\t\t${TCL_BIN_DIR}\t\t${TCL_BIN_DIR}/../bin\n#\t\t${exec_prefix}/bin\t${prefix}/bin\n#\t\t${PATH}\n#\n# Arguments\n#\tnone\n#\n# Results\n#\tSubst's the following values:\n#\t\tTCLSH_PROG\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_PROG_TCLSH, [\n    AC_MSG_CHECKING([for tclsh])\n\n    AC_CACHE_VAL(ac_cv_path_tclsh, [\n\tsearch_path=`echo ${TCL_BIN_DIR}:${TCL_BIN_DIR}/../bin:${exec_prefix}/bin:${prefix}/bin:${PATH} | sed -e 's/:/ /g'`\n\tfor dir in $search_path ; do\n\t    for j in `ls -r $dir/tclsh[[8-9]]*${EXEEXT} 2> /dev/null` \\\n\t\t    `ls -r $dir/tclsh*${EXEEXT} 2> /dev/null` ; do\n\t\tif test x\"$ac_cv_path_tclsh\" = x ; then\n\t\t    if test -f \"$j\" ; then\n\t\t\tac_cv_path_tclsh=$j\n\t\t\tbreak\n\t\t    fi\n\t\tfi\n\t    done\n\tdone\n    ])\n\n    if test -f \"$ac_cv_path_tclsh\" ; then\n\tTCLSH_PROG=$ac_cv_path_tclsh\n\tAC_MSG_RESULT([$TCLSH_PROG])\n    else\n\tAC_MSG_ERROR([No tclsh found in PATH:  $search_path])\n    fi\n    AC_SUBST(TCLSH_PROG)\n])\n\n#------------------------------------------------------------------------\n# TEA_PROG_WISH\n#\tLocate a wish shell in the following directories:\n#\t\t${TK_BIN_DIR}\t\t${TK_BIN_DIR}/../bin\n#\t\t${TCL_BIN_DIR}\t\t${TCL_BIN_DIR}/../bin\n#\t\t${exec_prefix}/bin\t${prefix}/bin\n#\t\t${PATH}\n#\n# Arguments\n#\tnone\n#\n# Results\n#\tSubst's the following values:\n#\t\tWISH_PROG\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_PROG_WISH, [\n    AC_MSG_CHECKING([for wish])\n\n    AC_CACHE_VAL(ac_cv_path_wish, [\n\tsearch_path=`echo ${TK_BIN_DIR}:${TK_BIN_DIR}/../bin:${TCL_BIN_DIR}:${TCL_BIN_DIR}/../bin:${exec_prefix}/bin:${prefix}/bin:${PATH} | sed -e 's/:/ /g'`\n\tfor dir in $search_path ; do\n\t    for j in `ls -r $dir/wish[[8-9]]*${EXEEXT} 2> /dev/null` \\\n\t\t    `ls -r $dir/wish*${EXEEXT} 2> /dev/null` ; do\n\t\tif test x\"$ac_cv_path_wish\" = x ; then\n\t\t    if test -f \"$j\" ; then\n\t\t\tac_cv_path_wish=$j\n\t\t\tbreak\n\t\t    fi\n\t\tfi\n\t    done\n\tdone\n    ])\n\n    if test -f \"$ac_cv_path_wish\" ; then\n\tWISH_PROG=$ac_cv_path_wish\n\tAC_MSG_RESULT([$WISH_PROG])\n    else\n\tAC_MSG_ERROR([No wish found in PATH:  $search_path])\n    fi\n    AC_SUBST(WISH_PROG)\n])\n\n#------------------------------------------------------------------------\n# TEA_PATH_CONFIG --\n#\n#\tLocate the ${1}Config.sh file and perform a sanity check on\n#\tthe ${1} compile flags.  These are used by packages like\n#\t[incr Tk] that load *Config.sh files from more than Tcl and Tk.\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--with-$1=...\n#\n#\tDefines the following vars:\n#\t\t$1_BIN_DIR\tFull path to the directory containing\n#\t\t\t\tthe $1Config.sh file\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_PATH_CONFIG, [\n    #\n    # Ok, lets find the $1 configuration\n    # First, look for one uninstalled.\n    # the alternative search directory is invoked by --with-$1\n    #\n\n    if test x\"${no_$1}\" = x ; then\n\t# we reset no_$1 in case something fails here\n\tno_$1=true\n\tAC_ARG_WITH($1, [  --with-$1              directory containing $1 configuration ($1Config.sh)], with_$1config=${withval})\n\tAC_MSG_CHECKING([for $1 configuration])\n\tAC_CACHE_VAL(ac_cv_c_$1config,[\n\n\t    # First check to see if --with-$1 was specified.\n\t    if test x\"${with_$1config}\" != x ; then\n\t\tif test -f \"${with_$1config}/$1Config.sh\" ; then\n\t\t    ac_cv_c_$1config=`(cd ${with_$1config}; pwd)`\n\t\telse\n\t\t    AC_MSG_ERROR([${with_$1config} directory doesn't contain $1Config.sh])\n\t\tfi\n\t    fi\n\n\t    # then check for a private $1 installation\n\t    if test x\"${ac_cv_c_$1config}\" = x ; then\n\t\tfor i in \\\n\t\t\t../$1 \\\n\t\t\t`ls -dr ../$1[[8-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t../../$1 \\\n\t\t\t`ls -dr ../../$1[[8-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t../../../$1 \\\n\t\t\t`ls -dr ../../../$1[[8-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t${srcdir}/../$1 \\\n\t\t\t`ls -dr ${srcdir}/../$1[[8-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t; do\n\t\t    if test -f \"$i/$1Config.sh\" ; then\n\t\t\tac_cv_c_$1config=`(cd $i; pwd)`\n\t\t\tbreak\n\t\t    fi\n\t\t    if test -f \"$i/unix/$1Config.sh\" ; then\n\t\t\tac_cv_c_$1config=`(cd $i/unix; pwd)`\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\n\t    # check in a few common install locations\n\t    if test x\"${ac_cv_c_$1config}\" = x ; then\n\t\tfor i in `ls -d ${exec_prefix}/lib 2>/dev/null` \\\n\t\t\t`ls -d ${prefix}/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/local/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/contrib/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/lib 2>/dev/null` \\\n\t\t\t; do\n\t\t    if test -f \"$i/$1Config.sh\" ; then\n\t\t\tac_cv_c_$1config=`(cd $i; pwd)`\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\t])\n\n\tif test x\"${ac_cv_c_$1config}\" = x ; then\n\t    $1_BIN_DIR=\"# no $1 configs found\"\n\t    AC_MSG_WARN(\"Cannot find $1 configuration definitions\")\n\t    exit 0\n\telse\n\t    no_$1=\n\t    $1_BIN_DIR=${ac_cv_c_$1config}\n\t    AC_MSG_RESULT([found $$1_BIN_DIR/$1Config.sh])\n\tfi\n    fi\n])\n\n#------------------------------------------------------------------------\n# TEA_LOAD_CONFIG --\n#\n#\tLoad the $1Config.sh file\n#\n# Arguments:\n#\t\n#\tRequires the following vars to be set:\n#\t\t$1_BIN_DIR\n#\n# Results:\n#\n#\tSubst the following vars:\n#\t\t$1_SRC_DIR\n#\t\t$1_LIB_FILE\n#\t\t$1_LIB_SPEC\n#\n#------------------------------------------------------------------------\n\nAC_DEFUN(TEA_LOAD_CONFIG, [\n    AC_MSG_CHECKING([for existence of ${$1_BIN_DIR}/$1Config.sh])\n\n    if test -f \"${$1_BIN_DIR}/$1Config.sh\" ; then\n        AC_MSG_RESULT([loading])\n\t. ${$1_BIN_DIR}/$1Config.sh\n    else\n        AC_MSG_RESULT([file not found])\n    fi\n\n    #\n    # If the $1_BIN_DIR is the build directory (not the install directory),\n    # then set the common variable name to the value of the build variables.\n    # For example, the variable $1_LIB_SPEC will be set to the value\n    # of $1_BUILD_LIB_SPEC. An extension should make use of $1_LIB_SPEC\n    # instead of $1_BUILD_LIB_SPEC since it will work with both an\n    # installed and uninstalled version of Tcl.\n    #\n\n    if test -f ${$1_BIN_DIR}/Makefile ; then\n\tAC_MSG_WARN([Found Makefile - using build library specs for $1])\n        $1_LIB_SPEC=${$1_BUILD_LIB_SPEC}\n        $1_STUB_LIB_SPEC=${$1_BUILD_STUB_LIB_SPEC}\n        $1_STUB_LIB_PATH=${$1_BUILD_STUB_LIB_PATH}\n    fi\n\n    AC_SUBST($1_VERSION)\n    AC_SUBST($1_SRC_DIR)\n\n    AC_SUBST($1_LIB_FILE)\n    AC_SUBST($1_LIB_SPEC)\n\n    AC_SUBST($1_STUB_LIB_FILE)\n    AC_SUBST($1_STUB_LIB_SPEC)\n    AC_SUBST($1_STUB_LIB_PATH)\n])\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-tcl-tclxml-3.1-rdt4s6lpi35mvji4rqao2aplknmuawfs/spack-src/README.html",
        "/tmp/vanessa/spack-stage/spack-stage-tcl-tclxml-3.1-rdt4s6lpi35mvji4rqao2aplknmuawfs/spack-src/examples/REC-xml-20001006.xml",
        "/tmp/vanessa/spack-stage/spack-stage-tcl-tclxml-3.1-rdt4s6lpi35mvji4rqao2aplknmuawfs/spack-src/doc/README.html"
    ],
    "total_files": 134
}