{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-biobloom-2.2.0-rq34mg463xk5adjyymxmwkdi6qyhouri/spack-src/configure.ac": "#                                               -*- Autoconf -*-\n# Process this file with autoconf to produce a configure script.\n\nAC_PREREQ(2.59)\nAC_INIT(BIOBLOOMTOOLS, 2.2.0, cjustin@bcgsc.ca)\nAM_INIT_AUTOMAKE\nAC_CONFIG_SRCDIR([BioBloomMaker/BioBloomMaker.cpp])\nAC_CONFIG_HEADER([config.h])\n\n#see http://stackoverflow.com/questions/8215785/how-can-i-use-ac-revision-with-git\nAC_REVISION([m4_esyscmd([./tools/configure.commit])])\nAC_DEFINE([GIT_REVISION], \"[m4_esyscmd([./tools/configure.commit])]\", [git revision information])\n\nAC_PROG_RANLIB\n\n# Checks for programs.\nAC_PROG_CXX\n\n# Checks for libraries.\nAC_CHECK_LIB([dl], [dlopen])\n\n# Checks for typedefs, structures, and compiler characteristics.\nAC_TYPE_SIZE_T\n\n# Set compiler flags. (TODO Probably doing some bad stuff here)\nAC_SUBST(CPPFLAGS,\"-std=c++11 $CPPFLAGS\")\nAC_SUBST(AM_CXXFLAGS, \"-Wall -Wextra -Werror $AM_CXXFLAGS\")\n\n# Options to configure.\n# Boost\nAC_ARG_WITH(boost, AS_HELP_STRING([--with-boost=PATH],\n\t\t\t[specify directory for the boost header files]))\nif test \"$with_boost\" -a -d \"$with_boost\"; then\n\tboost_cppflags=\"-isystem$with_boost\"\nfi\n\nAC_ARG_WITH(sparsehash, AS_HELP_STRING([--with-sparsehash=PATH],\n\t\t\t[specify directory for the google sparsehash header files]))\nif test \"$with_sparsehash\" -a -d \"$with_sparsehash\"; then\n\tsparsehash_cppflags=\"-isystem$with_sparsehash\"\nfi\n\nAC_ARG_WITH(sdsl, AS_HELP_STRING([--with-sdsl=PATH],\n\t\t\t[specify directory for the sdsl header files]))\nif test \"$with_sdsl\" -a -d \"$with_sdsl\"; then\n\tsdsl_cppflags=\"-isystem$with_sdsl/include\"\n\tsdsl_ldflags=\"-L$with_sdsl/lib\"\nfi\n\n# Find the absolute paths.\nsrcdir=$(cd $srcdir; pwd)\n\n# Set compiler flags.\nAC_SUBST(CPPFLAGS,\"-I$srcdir $boost_cppflags $sparsehash_cppflags $sdsl_cppflags $CPPFLAGS\")\nAC_SUBST(LDFLAGS,\"$sdsl_ldflags $LDFLAGS\")\n\n# Checks for header files.\nAC_LANG([C++])\t#sets the auto conf to look for c++ headers\nAC_CHECK_HEADERS([boost/property_tree/ptree.hpp])\nAC_CHECK_HEADERS([boost/property_tree/ini_parser.hpp])\nAC_CHECK_HEADERS([btl_bloomfilter/BloomFilter.hpp])\nAC_CHECK_HEADERS([zlib.h])\n\nAC_CHECK_HEADERS([google/dense_hash_map])\nif test $ac_cv_header_google_dense_hash_map != yes; then\n\tAC_MSG_ERROR([Requires google sparsehash])\nfi\n\nAC_CHECK_HEADERS([sdsl/bit_vector_il.hpp])\nif test $ac_cv_header_sdsl_bit_vector_il_hpp != yes; then\n\tAC_MSG_ERROR([Requires sdsl])\nfi\n\n# Check for Boost.\nif test $ac_cv_header_boost_property_tree_ptree_hpp != yes; then\n\tAC_MSG_ERROR([Requires Boost])\nfi\n\n# Check for OpenMP.\nAC_OPENMP\nif test -z $OPENMP_CXXFLAGS; then\n\tOPENMP_CXXFLAGS=-Wno-unknown-pragmas\nfi\n\n# Checks for typedefs, structures, and compiler characteristics.\n\nAC_CONFIG_FILES([\n\t\tMakefile\n\t\tCommon/Makefile\n\t\tBioBloomMaker/Makefile\n\t\tBioBloomCategorizer/Makefile\n\t\tTests/Makefile\n])\nAC_OUTPUT\n\n"
    },
    "skipped": [],
    "total_files": 55
}