{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-czmq-4.1.1-says5pbmqlkny25jy7iuqojyumw3jjn4/spack-src/src/Makemodule-local.am": "# Project-local changes to auto-generated content\n\n# Android-qt requires this special link dependency\nif ON_ANDROID\nsrc_libczmq_la_LIBADD += -llog\nendif\n\n# Add a way to customize test_randof binary for quick recompiles, e.g.\n#   gmake test_randof_macros=\"-DZSYS_RANDOF_FLT=double -DZSYS_RANDOF_MAX=INT8_MAX\" src/test_randof\nif ENABLE_TEST_RANDOF\nsrc_test_randof_CPPFLAGS += $(test_randof_macros)\nendif\n\n# Make sure there is the helper utility for the zproc tests\nif ENABLE_ZSP\ncoverage \\\n    check-local check-verbose \\\n    memcheck memcheck-verbose \\\n    debug debug-verbose \\\n    callcheck callcheck-verbose \\\n    animate animate-verbose \\\n    : src/zsp\nendif\n\ncheck-py: src/libczmq.la\n\t$(LIBTOOL) --mode=execute -dlopen src/libczmq.la python bindings/python/test.py\n",
        "/tmp/vanessa/spack-stage/spack-stage-czmq-4.1.1-says5pbmqlkny25jy7iuqojyumw3jjn4/spack-src/bindings/python_cffi/README.md": "################################################################################\n#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #\n#  Read the zproject/README.md for information about making permanent changes. #\n################################################################################\n#czmq cffi bindings\n\nThis package contains low level python bindings for czmq based on cffi library.\nModule is compatible with\n * The \u201cin-line\u201d, \u201cABI mode\u201d, which simply **dlopen** main library and parse C declaration on runtime\n * The \u201cout-of-line\u201d, \u201cAPI mode\u201d, which build C **native** Python extension\n\n#Build the native extension\n\n    python setup.py build\n\nNote you need to have setuptools and cffi packages installed. As well as a checkout of all dependencies\nat the same level as this project, because all dependant defs.py will be included in project cdefs.py.\n\n#Using more cffi modules together\nWhile zproject and CLASS encourages you to split your dependencies to smaller libraries, this does\nnot work well for cffi. zproject generated backends have own private cffi instance, which can't\nbe easily combined with others in one function call.\n\nSee ML thread about topic https://groups.google.com/forum/#!topic/python-cffi/JtAKU-g9Exg\n\nThis is the reason the Lib and CompiledFFi objects are referenced from utils module and dynamically\naccessed on each call. Calling `lower.utils.rebind (higher.utils.lib, higher.utils.ffi)' you can\nchange instance used by lower module and enforce all Python classes will use single instance.\n",
        "/tmp/vanessa/spack-stage/spack-stage-czmq-4.1.1-says5pbmqlkny25jy7iuqojyumw3jjn4/spack-src/bindings/python_cffi/czmq_cffi/dlopen.py": "################################################################################\n#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #\n#  Read the zproject/README.md for information about making permanent changes. #\n################################################################################\nfrom __future__ import print_function\nimport os\nimport sys\nfrom ctypes.util import find_library\n\nimport cffi\nffi = cffi.FFI()\n\ntry:\n    # If LD_LIBRARY_PATH or your OSs equivalent is set, this is the only way to\n    # load the library.  If we use find_library below, we get the wrong result.\n    if os.name == 'posix':\n        if sys.platform == 'darwin':\n            libpath = 'libczmq.4.dylib'\n        else:\n            libpath = 'libczmq.so.4'\n    elif os.name == 'nt':\n        libpath = 'libczmq.dll'\n    lib = ffi.dlopen(libpath)\nexcept OSError:\n    libpath = find_library(\"czmq\")\n    if not libpath:\n        raise ImportError(\"Unable to find libczmq\")\n    lib = ffi.dlopen(libpath)\n\nfrom czmq_cffi.cdefs import czmq_cdefs\n\nfor cdef in czmq_cdefs:\n   ffi.cdef (cdef)\n",
        "/tmp/vanessa/spack-stage/spack-stage-czmq-4.1.1-says5pbmqlkny25jy7iuqojyumw3jjn4/spack-src/bindings/python_cffi/czmq_cffi/utils.py": "################################################################################\n#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #\n#  Read the zproject/README.md for information about making permanent changes. #\n################################################################################\ntry:\n    from . import native\n    lib = native.lib\n    ffi = native.ffi\nexcept ImportError:\n    from . import dlopen\n    lib = dlopen.lib\n    ffi = dlopen.ffi\n\ndef rebind (_lib, _ffi):\n    \"\"\"Rebind Lib and CompiledFFi objects for given package. Lib object MUST expose all functions\n       required by the classes. This is default for zproject based projects\"\"\"\n    global lib\n    global ffi\n    lib = _lib\n    ffi = _ffi\n\ntry:\n    text_type = unicode  # Python 2\n    binary_type = str\nexcept NameError:\n    text_type = str      # Python 3\n    binary_type = bytes\n\n\ndef to_bytes(s):\n    return s if isinstance(s, binary_type) else text_type(s).encode(\"utf-8\")\n\n\ndef to_unicode(s):\n    return s if isinstance(s, text_type) else binary_type(s).decode(\"utf-8\")\n\n\ndef to_strings (s):\n    \"\"\"Convert Python native list types to zlist_t of strings\"\"\"\n    if issubclass (s.__class__, (list, set, frozenset, tuple)):\n        foo = lib.zlist_new ()\n        lib.zlist_autofree (foo)\n        for item in s:\n            lib.zlist_append (foo, to_bytes (item))\n        return foo\n    return None\n################################################################################\n#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #\n#  Read the zproject/README.md for information about making permanent changes. #\n################################################################################\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-czmq-4.1.1-says5pbmqlkny25jy7iuqojyumw3jjn4/spack-src/images/README_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-czmq-4.1.1-says5pbmqlkny25jy7iuqojyumw3jjn4/spack-src/bindings/jni/gradle/wrapper/gradle-wrapper.jar"
    ],
    "total_files": 670
}