{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/pure.cpp": "/************************************************************************\n ************************************************************************\n    FAUST Architecture File\n    Copyright (C) 2009-2011 Albert Graef <Dr.Graef@t-online.de>\n    ---------------------------------------------------------------------\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as\n    published by the Free Software Foundation; either version 2.1 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with the GNU C Library; if not, write to the Free\n    Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n    02111-1307 USA.\n ************************************************************************\n ************************************************************************/\n\n/* Pure architecture for Faust. This is similar to the Q architecture, but\n   uses double precision for the audio buffers and control variables. See\n   http://purelang.bitbucket.org for a Pure module which can load these\n   extensions. */\n\n#include <stdlib.h>\n#include <math.h>\n#include <list>\n#include <map>\n\nusing namespace std;\n\ntypedef pair<const char*,const char*> strpair;\n\nstruct Meta\n{\n  list< strpair > data;\n  void declare(const char* key, const char* value)\n  { data.push_back(strpair(key, value)); }\n};\n\ninline int lsr(int x, int n) { return int(((unsigned int)x) >> n); }\n\n/******************************************************************************\n*******************************************************************************\n\n\t\t\t\t\t\t\t       VECTOR INTRINSICS\n\n*******************************************************************************\n*******************************************************************************/\n\n//inline void *aligned_calloc(size_t nmemb, size_t size) { return (void*)((unsigned)(calloc((nmemb*size)+15,sizeof(char)))+15 & 0xfffffff0); }\n//inline void *aligned_calloc(size_t nmemb, size_t size) { return (void*)((size_t)(calloc((nmemb*size)+15,sizeof(char)))+15 & ~15); }\n\n<<includeIntrinsic>>\n\n/******************************************************************************\n*******************************************************************************\n\n\t\t\tABSTRACT USER INTERFACE\n\n*******************************************************************************\n*******************************************************************************/\n\nclass UI\n{\n  bool\tfStopped;\npublic:\n\n  UI() : fStopped(false) {}\n  virtual ~UI() {}\n\n  virtual void addButton(const char* label, double* zone) = 0;\n  virtual void addCheckButton(const char* label, double* zone) = 0;\n  virtual void addVerticalSlider(const char* label, double* zone, double init, double min, double max, double step) = 0;\n  virtual void addHorizontalSlider(const char* label, double* zone, double init, double min, double max, double step) = 0;\n  virtual void addNumEntry(const char* label, double* zone, double init, double min, double max, double step) = 0;\n\n  virtual void addHorizontalBargraph(const char* label, double* zone, double min, double max) = 0;\n  virtual void addVerticalBargraph(const char* label, double* zone, double min, double max) = 0;\n\n  virtual void openTabBox(const char* label) = 0;\n  virtual void openHorizontalBox(const char* label) = 0;\n  virtual void openVerticalBox(const char* label) = 0;\n  virtual void closeBox() = 0;\n\n  virtual void run() = 0;\n\n  void stop() { fStopped = true; }\n  bool stopped() { return fStopped; }\n\n  virtual void declare(double* zone, const char* key, const char* value) {}\n};\n\n/***************************************************************************\n   Pure UI interface\n ***************************************************************************/\n\nenum ui_elem_type_t {\n  UI_BUTTON, UI_CHECK_BUTTON,\n  UI_V_SLIDER, UI_H_SLIDER, UI_NUM_ENTRY,\n  UI_V_BARGRAPH, UI_H_BARGRAPH,\n  UI_END_GROUP, UI_V_GROUP, UI_H_GROUP, UI_T_GROUP\n};\n\nstruct ui_elem_t {\n  ui_elem_type_t type;\n  const char *label;\n  double *zone;\n  void *ref;\n  double init, min, max, step;\n};\n\nclass PureUI : public UI\n{\npublic:\n  int nelems;\n  ui_elem_t *elems;\n  map< int, list<strpair> > metadata;\n\n  PureUI();\n  virtual ~PureUI();\n\nprotected:\n  void add_elem(ui_elem_type_t type, const char *label = NULL);\n  void add_elem(ui_elem_type_t type, const char *label, double *zone);\n  void add_elem(ui_elem_type_t type, const char *label, double *zone,\n\t\tdouble init, double min, double max, double step);\n  void add_elem(ui_elem_type_t type, const char *label, double *zone,\n\t\tdouble min, double max);\n\npublic:\n  virtual void addButton(const char* label, double* zone);\n  virtual void addCheckButton(const char* label, double* zone);\n  virtual void addVerticalSlider(const char* label, double* zone, double init, double min, double max, double step);\n  virtual void addHorizontalSlider(const char* label, double* zone, double init, double min, double max, double step);\n  virtual void addNumEntry(const char* label, double* zone, double init, double min, double max, double step);\n\n  virtual void addHorizontalBargraph(const char* label, double* zone, double min, double max);\n  virtual void addVerticalBargraph(const char* label, double* zone, double min, double max);\n\n  virtual void openTabBox(const char* label);\n  virtual void openHorizontalBox(const char* label);\n  virtual void openVerticalBox(const char* label);\n  virtual void closeBox();\n\n  virtual void run();\n\n  virtual void declare(double* zone, const char* key, const char* value);\n};\n\nPureUI::PureUI()\n{\n  nelems = 0;\n  elems = NULL;\n}\n\nPureUI::~PureUI()\n{\n  if (elems) free(elems);\n}\n\nvoid PureUI::declare(double* zone, const char* key, const char* value)\n{\n  map< int, list<strpair> >::iterator it = metadata.find(nelems);\n  if (it != metadata.end())\n    it->second.push_back(strpair(key, value));\n  else\n    metadata[nelems] = list<strpair>(1, strpair(key, value));\n}\n\ninline void PureUI::add_elem(ui_elem_type_t type, const char *label)\n{\n  ui_elem_t *elems1 = (ui_elem_t*)realloc(elems, (nelems+1)*sizeof(ui_elem_t));\n  if (elems1)\n    elems = elems1;\n  else\n    return;\n  elems[nelems].type = type;\n  elems[nelems].label = label;\n  elems[nelems].zone = NULL;\n  elems[nelems].ref = NULL;\n  elems[nelems].init = 0.0;\n  elems[nelems].min = 0.0;\n  elems[nelems].max = 0.0;\n  elems[nelems].step = 0.0;\n  nelems++;\n}\n\ninline void PureUI::add_elem(ui_elem_type_t type, const char *label, double *zone)\n{\n  ui_elem_t *elems1 = (ui_elem_t*)realloc(elems, (nelems+1)*sizeof(ui_elem_t));\n  if (elems1)\n    elems = elems1;\n  else\n    return;\n  elems[nelems].type = type;\n  elems[nelems].label = label;\n  elems[nelems].zone = zone;\n  elems[nelems].ref = NULL;\n  elems[nelems].init = 0.0;\n  elems[nelems].min = 0.0;\n  elems[nelems].max = 0.0;\n  elems[nelems].step = 0.0;\n  nelems++;\n}\n\ninline void PureUI::add_elem(ui_elem_type_t type, const char *label, double *zone,\n\t\t\t     double init, double min, double max, double step)\n{\n  ui_elem_t *elems1 = (ui_elem_t*)realloc(elems, (nelems+1)*sizeof(ui_elem_t));\n  if (elems1)\n    elems = elems1;\n  else\n    return;\n  elems[nelems].type = type;\n  elems[nelems].label = label;\n  elems[nelems].zone = zone;\n  elems[nelems].ref = NULL;\n  elems[nelems].init = init;\n  elems[nelems].min = min;\n  elems[nelems].max = max;\n  elems[nelems].step = step;\n  nelems++;\n}\n\ninline void PureUI::add_elem(ui_elem_type_t type, const char *label, double *zone,\n\t\t\t     double min, double max)\n{\n  ui_elem_t *elems1 = (ui_elem_t*)realloc(elems, (nelems+1)*sizeof(ui_elem_t));\n  if (elems1)\n    elems = elems1;\n  else\n    return;\n  elems[nelems].type = type;\n  elems[nelems].label = label;\n  elems[nelems].zone = zone;\n  elems[nelems].ref = NULL;\n  elems[nelems].init = 0.0;\n  elems[nelems].min = min;\n  elems[nelems].max = max;\n  elems[nelems].step = 0.0;\n  nelems++;\n}\n\nvoid PureUI::addButton(const char* label, double* zone)\n{ add_elem(UI_BUTTON, label, zone); }\nvoid PureUI::addCheckButton(const char* label, double* zone)\n{ add_elem(UI_CHECK_BUTTON, label, zone); }\nvoid PureUI::addVerticalSlider(const char* label, double* zone, double init, double min, double max, double step)\n{ add_elem(UI_V_SLIDER, label, zone, init, min, max, step); }\nvoid PureUI::addHorizontalSlider(const char* label, double* zone, double init, double min, double max, double step)\n{ add_elem(UI_H_SLIDER, label, zone, init, min, max, step); }\nvoid PureUI::addNumEntry(const char* label, double* zone, double init, double min, double max, double step)\n{ add_elem(UI_NUM_ENTRY, label, zone, init, min, max, step); }\n\nvoid PureUI::addHorizontalBargraph(const char* label, double* zone, double min, double max)\n{ add_elem(UI_H_BARGRAPH, label, zone, min, max); }\nvoid PureUI::addVerticalBargraph(const char* label, double* zone, double min, double max)\n{ add_elem(UI_V_BARGRAPH, label, zone, min, max); }\n\nvoid PureUI::openTabBox(const char* label)\n{ add_elem(UI_T_GROUP, label); }\nvoid PureUI::openHorizontalBox(const char* label)\n{ add_elem(UI_H_GROUP, label); }\nvoid PureUI::openVerticalBox(const char* label)\n{ add_elem(UI_V_GROUP, label); }\nvoid PureUI::closeBox()\n{ add_elem(UI_END_GROUP); }\n\nvoid PureUI::run() {}\n\n/******************************************************************************\n*******************************************************************************\n\n\t\t\t    FAUST DSP\n\n*******************************************************************************\n*******************************************************************************/\n\n//----------------------------------------------------------------\n//  abstract definition of a signal processor\n//----------------------------------------------------------------\n\nclass dsp {\n protected:\n  int fSampleRate;\n public:\n  // internal freelist for custom voice allocation\n  dsp *prev, *next;\n  dsp() {}\n  virtual ~dsp() {}\n  virtual int getNumInputs() = 0;\n  virtual int getNumOutputs() = 0;\n  virtual void buildUserInterface(UI* interface) = 0;\n  virtual void init(int sample_date) = 0;\n  virtual void compute(int len, double** inputs, double** outputs) = 0;\n};\n\n//----------------------------------------------------------------------------\n//  FAUST generated signal processor\n//----------------------------------------------------------------------------\n\n/* Define FAUSTFLOAT so that audio buffers and control values are always\n   represented as double pointers. This probably requires a recent Faust\n   version (0.9.9.6 or later should be ok). */\n\n#define FAUSTFLOAT double\n\n<<includeclass>>\n\n#include <assert.h>\n\n// Define this to get some debugging output.\n//#define DEBUG\n#ifdef DEBUG\n#include <stdio.h>\n#define FAUST_CN \"mydsp\"\n#endif\n\n/* Dynamic voice allocation. We go to some lengths here to make this as\n   realtime-friendly as possible. The idea is that we keep a pool of allocated\n   mydsp instances. When a dsp is freed with deldsp(), it's in fact never\n   deleted, but put at the end of a freelist from where it may eventually be\n   reused by a subsequent call to newdsp(). By these means, the number of\n   actual calls to malloc() can be kept to a minimum. In addition, a small\n   number of voices are preallocated in static memory (1 by default in the\n   present implementation, but you can set this at compile time by redefining\n   the NVOICES constant accordingly). If you choose a suitable NVOICES value,\n   chances are that your application may never need to allocate dsp instances\n   on the heap at all. Also, even if dsp instances have to be created\n   dynamically, they are allocated in chunks of NVOICES units, in order to\n   reduce the calls to malloc(). Thus we generally recommend to set NVOICES to\n   a value >1 which best suits your application. */\n\n#ifndef NVOICES\n#define NVOICES 1\n#endif\n\n// Make sure that NVOICES is at least 1.\n#if NVOICES<1\n#undefine NVOICES\n#define NVOICES 1\n#endif\n\nstruct dspmem_t {\n  char x[sizeof(mydsp)];\n};\n\nstruct mem_t {\n  dspmem_t mem[NVOICES];\n  mem_t *next;\n};\n\n// statically and dynamically allocated dsp instances\nstatic mem_t mem0, *mem;\n// beginning and end of the freelist\nstatic mydsp *first, *last;\n\n/* This is supposed to be executed when the module gets unloaded. You'll need\n   a recent gcc version (or compatible) to make this work. */\n\nvoid __attribute__ ((destructor)) mydsp_fini(void)\n{\n  if (!mem) return;\n  mem = mem->next;\n  while (mem) {\n    mem_t *mem1 = mem->next;\n    free(mem); mem = mem1;\n  }\n}\n\n/* The class factory, used to create and destroy mydsp objects in the client.\n   This is implemented using C linkage to facilitate dlopen access. */\n\n#include <new>\n\nextern \"C\" mydsp *newdsp()\n{\n  if (!mem) {\n    mem = &mem0; mem->next = 0;\n    // initialize the freelist with the statically allocated voices\n    mydsp *prev = 0, *next = (mydsp*)&mem->mem[0];\n    first = next;\n    for (int i = 0; i < NVOICES; i++) {\n      void *p = &mem->mem[i];\n      mydsp *d = new(p) mydsp;\n      d->prev = prev; prev = d;\n      d->next = ++next;\n    }\n    last = prev; last->next = 0;\n#ifdef DEBUG\n    fprintf(stderr, \">>> %s: preallocated %d voices\\n\", FAUST_CN, NVOICES);\n#endif\n  }\n  assert(mem);\n  if (!first) {\n    // allocate a new chunk of voices and add them to the freelist\n    mem_t *block = (mem_t*)calloc(1, sizeof(mem_t));\n    block->next = mem->next; mem->next = block;\n    mydsp *prev = 0, *next = (mydsp*)&block->mem[0];\n    first = next;\n    for (int i = 0; i < NVOICES; i++) {\n      void *p = &block->mem[i];;\n      mydsp *d = new(p) mydsp;\n      d->prev = prev; prev = d;\n      d->next = ++next;\n    }\n    last = prev; last->next = 0;\n#ifdef DEBUG\n    fprintf(stderr, \">>> %s: allocated %d voices\\n\", FAUST_CN, NVOICES);\n#endif\n  }\n  assert(first && last);\n  mydsp *d = first;\n  if (first == last) {\n    // freelist is now empty\n    first = last = 0;\n  } else {\n    // remove d from the freelist\n    first = (mydsp*)first->next;\n  }\n  d->prev = d->next = 0;\n#ifdef DEBUG\n  fprintf(stderr, \">>> %s: allocating instance %p\\n\", FAUST_CN, d);\n#endif\n  return d;\n}\n\nextern \"C\" void deldsp(mydsp* d)\n{\n#ifdef DEBUG\n  fprintf(stderr, \">>> %s: freeing instance %p\\n\", FAUST_CN, d);\n#endif\n  // add d to the freelist\n  assert(!d->prev && !d->next);\n  if (last) {\n    last->next = d; d->prev = last; last = d;\n  } else\n    first = last = d;\n}\n\nextern \"C\" Meta *newmeta()\n{\n  Meta *m = new Meta;\n  mydsp tmp_dsp;\n  tmp_dsp.metadata(m);\n  return m;\n}\n\nextern \"C\" void delmeta(Meta* m)\n{\n  delete m;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/AU/AUPublic/AUBase/ComponentBase.cpp": "/*\n     File: ComponentBase.cpp \n Abstract:  ComponentBase.h  \n  Version: 1.01 \n  \n Disclaimer: IMPORTANT:  This Apple software is supplied to you by Apple \n Inc. (\"Apple\") in consideration of your agreement to the following \n terms, and your use, installation, modification or redistribution of \n this Apple software constitutes acceptance of these terms.  If you do \n not agree with these terms, please do not use, install, modify or \n redistribute this Apple software. \n  \n In consideration of your agreement to abide by the following terms, and \n subject to these terms, Apple grants you a personal, non-exclusive \n license, under Apple's copyrights in this original Apple software (the \n \"Apple Software\"), to use, reproduce, modify and redistribute the Apple \n Software, with or without modifications, in source and/or binary forms; \n provided that if you redistribute the Apple Software in its entirety and \n without modifications, you must retain this notice and the following \n text and disclaimers in all such redistributions of the Apple Software. \n Neither the name, trademarks, service marks or logos of Apple Inc. may \n be used to endorse or promote products derived from the Apple Software \n without specific prior written permission from Apple.  Except as \n expressly stated in this notice, no other rights or licenses, express or \n implied, are granted by Apple herein, including but not limited to any \n patent rights that may be infringed by your derivative works or by other \n works in which the Apple Software may be incorporated. \n  \n The Apple Software is provided by Apple on an \"AS IS\" basis.  APPLE \n MAKES NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION \n THE IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS \n FOR A PARTICULAR PURPOSE, REGARDING THE APPLE SOFTWARE OR ITS USE AND \n OPERATION ALONE OR IN COMBINATION WITH YOUR PRODUCTS. \n  \n IN NO EVENT SHALL APPLE BE LIABLE FOR ANY SPECIAL, INDIRECT, INCIDENTAL \n OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS \n INTERRUPTION) ARISING IN ANY WAY OUT OF THE USE, REPRODUCTION, \n MODIFICATION AND/OR DISTRIBUTION OF THE APPLE SOFTWARE, HOWEVER CAUSED \n AND WHETHER UNDER THEORY OF CONTRACT, TORT (INCLUDING NEGLIGENCE), \n STRICT LIABILITY OR OTHERWISE, EVEN IF APPLE HAS BEEN ADVISED OF THE \n POSSIBILITY OF SUCH DAMAGE. \n  \n Copyright (C) 2012 Apple Inc. All Rights Reserved. \n  \n*/\n#include \"ComponentBase.h\"\n#include \"CAXException.h\"\n\n#if TARGET_OS_MAC\npthread_mutex_t ComponentInitLocker::sComponentOpenMutex = PTHREAD_MUTEX_INITIALIZER;\npthread_once_t ComponentInitLocker::sOnce = PTHREAD_ONCE_INIT;\n\nvoid ComponentInitLocker::InitComponentInitLocker()\n{\n\t// have to do this because OS X lacks PTHREAD_MUTEX_RECURSIVE_INITIALIZER_NP\n\tpthread_mutexattr_t attr;\n\tpthread_mutexattr_init(&attr);\n\tpthread_mutexattr_settype(&attr, PTHREAD_MUTEX_RECURSIVE);\n\tpthread_mutex_init(&sComponentOpenMutex, &attr);\n\tpthread_mutexattr_destroy(&attr);\n}\n\n#elif TARGET_OS_WIN32\nCAGuard\tComponentInitLocker::sComponentOpenGuard(\"sComponentOpenGuard\");\n#endif\n\nComponentBase::EInstanceType ComponentBase::sNewInstanceType;\n\nstatic OSStatus CB_GetComponentDescription (const AudioComponentInstance inInstance, AudioComponentDescription * outDesc);\n#if !CA_USE_AUDIO_PLUGIN_ONLY && !TARGET_OS_WIN32\n\tstatic OSStatus CMgr_GetComponentDescription (const AudioComponentInstance inInstance, AudioComponentDescription * outDesc);\n#endif\n\nComponentBase::ComponentBase(AudioComponentInstance inInstance) \n\t: mComponentInstance(inInstance), \n\t  mInstanceType(sNewInstanceType) \n{ \n\tGetComponentDescription(); \n}\n\nComponentBase::~ComponentBase()\n{\n}\n\nvoid\t\t\tComponentBase::PostConstructor()\n{\n}\n\nvoid\t\t\tComponentBase::PreDestructor()\n{\n}\n\n#define ACPI\t((AudioComponentPlugInInstance *)self)\n#define ACImp\t((ComponentBase *)&ACPI->mInstanceStorage)\n\nOSStatus ComponentBase::AP_Open(void *self, AudioUnit compInstance)\n{\n\tOSStatus result = noErr;\n\ttry {\n\t\tComponentInitLocker lock;\n\t\t\n\t\tComponentBase::sNewInstanceType = ComponentBase::kAudioComponentInstance;\n\t\tComponentBase *cb = (ComponentBase *)(*ACPI->mConstruct)(&ACPI->mInstanceStorage, compInstance);\n\t\tcb->PostConstructor();\t// allows base class to do additional initialization\n\t\t// once the derived class is fully constructed\n\t\tresult = noErr;\n\t}\n\tCOMPONENT_CATCH\n\tif (result)\n\t\tdelete ACPI;\n\treturn result;\n}\n\nOSStatus ComponentBase::AP_Close(void *self)\n{\n\tOSStatus result = noErr;\n\ttry {\n\t\tif (ACImp) {\n\t\t\tACImp->PreDestructor();\n\t\t\t(*ACPI->mDestruct)(&ACPI->mInstanceStorage);\n\t\t\tfree(self);\n\t\t}\n\t}\n\tCOMPONENT_CATCH\n\treturn result;\n}\n\n#if !CA_USE_AUDIO_PLUGIN_ONLY\nOSStatus\t\tComponentBase::Version()\n{\n\treturn 0x00000001;\n}\n\nOSStatus\t\tComponentBase::ComponentEntryDispatch(ComponentParameters *p, ComponentBase *This)\n{\n\tif (This == NULL) return kAudio_ParamError;\n\n\tOSStatus result = noErr;\n\t\n\tswitch (p->what) {\n\tcase kComponentCloseSelect:\n\t\tThis->PreDestructor();\n\t\tdelete This;\n\t\tbreak;\n\t\n\tcase kComponentVersionSelect:\n\t\tresult = This->Version();\n\t\tbreak;\n\n\tcase kComponentCanDoSelect:\n\t\tswitch (GetSelectorForCanDo(p)) {\n\t\tcase kComponentOpenSelect:\n\t\tcase kComponentCloseSelect:\n\t\tcase kComponentVersionSelect:\n\t\tcase kComponentCanDoSelect:\n\t\t\treturn 1;\n\t\tdefault:\n\t\t\treturn 0;\n\t\t}\n\t\t\n\tdefault:\n\t\tresult = badComponentSelector;\n\t\tbreak;\n\t}\n\treturn result;\n}\n\nSInt16\t\tComponentBase::GetSelectorForCanDo(ComponentParameters *params)\n{\n\tif (params->what != kComponentCanDoSelect) return 0;\n\t\n\t#if TARGET_CPU_X86\n\t\tSInt16 sel = params->params[0];\n\t#elif TARGET_CPU_X86_64\n\t\tSInt16 sel = params->params[1];\n\t#elif TARGET_CPU_PPC\n\t\tSInt16 sel = (params->params[0] >> 16);\n\t#else\n\t\tSInt16 sel = params->params[0];\n\t#endif\n\t\n\treturn sel;\n/*\t\t\n\t\tprintf (\"flags:%d, paramSize: %d, what: %d\\n\\t\", params->flags, params->paramSize, params->what);\n\t\tfor (int i = 0; i < params->paramSize; ++i) {\n\t\t\tprintf (\"[%d]:%d(0x%x), \", i, params->params[i], params->params[i]);\n\t\t}\n\t\tprintf(\"\\n\\tsel:%d\\n\", sel);\n*/\n}\n\n#endif\n\n#if CA_DO_NOT_USE_AUDIO_COMPONENT \nstatic OSStatus ComponentBase_GetComponentDescription (const AudioComponentInstance & inInstance, AudioComponentDescription &outDesc);\n#endif\n\nAudioComponentDescription ComponentBase::GetComponentDescription() const\n{\n\tAudioComponentDescription desc;\n\tOSStatus result = 1;\n\t\n\tif (IsPluginObject()) {\n\t\tca_require_noerr(result = CB_GetComponentDescription (mComponentInstance, &desc), home);\n\t}\n#if !CA_USE_AUDIO_PLUGIN_ONLY\n\telse {\n\t\tca_require_noerr(result = CMgr_GetComponentDescription (mComponentInstance, &desc), home);\t\n\t}\n#endif\n\nhome:\n\tif (result)\n\t\tmemset (&desc, 0, sizeof(AudioComponentDescription));\n\t\n\treturn desc;\n}\n\n#if CA_USE_AUDIO_PLUGIN_ONLY\n// everything we need is there and we should be linking against it\nstatic OSStatus CB_GetComponentDescription (const AudioComponentInstance inInstance, AudioComponentDescription * outDesc)\n{\n\tAudioComponent comp = AudioComponentInstanceGetComponent(inInstance);\n\tif (comp)\n\t\treturn AudioComponentGetDescription(comp, outDesc);\n\n\treturn kAudio_ParamError;\n}\n\n#elif !TARGET_OS_WIN32\n// these are the direct dependencies on ComponentMgr calls that an AU\n// that is a component mgr is dependent on\n\n// these are dynamically loaded so that these calls will work on Leopard\n#include <dlfcn.h>\n\nstatic OSStatus CB_GetComponentDescription (const AudioComponentInstance inInstance, AudioComponentDescription * outDesc)\n{\n\ttypedef AudioComponent (*AudioComponentInstanceGetComponentProc) (AudioComponentInstance);\n\tstatic AudioComponentInstanceGetComponentProc aciGCProc = NULL;\n\t\n\ttypedef OSStatus (*AudioComponentGetDescriptionProc)(AudioComponent, AudioComponentDescription *);\n\tstatic AudioComponentGetDescriptionProc acGDProc = NULL;\n\t\n\tstatic int doneInit = 0;\n\tif (doneInit == 0) {\n\t\tdoneInit = 1;\t\n\t\tvoid* theImage = dlopen(\"/System/Library/Frameworks/AudioUnit.framework/AudioUnit\", RTLD_LAZY);\n\t\tif (theImage != NULL)\n\t\t{\n\t\t\taciGCProc = (AudioComponentInstanceGetComponentProc)dlsym (theImage, \"AudioComponentInstanceGetComponent\");\n\t\t\tif (aciGCProc) {\n\t\t\t\tacGDProc = (AudioComponentGetDescriptionProc)dlsym (theImage, \"AudioComponentGetDescription\");\n\t\t\t}\n\t\t}\n\t}\n\t\n\tOSStatus result = kAudio_UnimplementedError;\n\tif (acGDProc && aciGCProc) {\n\t\tAudioComponent comp = (*aciGCProc)(inInstance);\n\t\tif (comp)\n\t\t\tresult = (*acGDProc)(comp, outDesc);\n\t} \n#if !CA_USE_AUDIO_PLUGIN_ONLY\n\telse {\n\t\tresult = CMgr_GetComponentDescription (inInstance, outDesc);\n\t}\n#endif\n\n\treturn result;\n}\n\n#if !CA_USE_AUDIO_PLUGIN_ONLY\n// these are the direct dependencies on ComponentMgr calls that an AU\n// that is a component mgr is dependent on\n\n// these are dynamically loaded\n\n#include <CoreServices/CoreServices.h>\n#include <AudioUnit/AudioUnit.h>\n#include \"CAXException.h\"\n#include \"ComponentBase.h\"\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// Component Manager\n// Used for fast dispatch with audio units\ntypedef Handle (*GetComponentInstanceStorageProc)(ComponentInstance aComponentInstance);\nstatic GetComponentInstanceStorageProc sGetComponentInstanceStorageProc = NULL;\n\ntypedef OSErr (*GetComponentInfoProc)(Component, ComponentDescription *, void*, void*, void*);\nstatic GetComponentInfoProc sGetComponentInfoProc = NULL;\n\ntypedef void (*SetComponentInstanceStorageProc)(ComponentInstance, Handle);\nstatic SetComponentInstanceStorageProc sSetComponentInstanceStorageProc = NULL;\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nstatic void CSInitOnce(void* /*unused*/)\n{\n\tvoid *theImage = dlopen(\"/System/Library/Frameworks/CoreServices.framework/CoreServices\", RTLD_LAZY);\n\tif (!theImage) return;\n\n\tsGetComponentInstanceStorageProc = (GetComponentInstanceStorageProc) dlsym(theImage, \"GetComponentInstanceStorage\");\n\tsGetComponentInfoProc = (GetComponentInfoProc)dlsym (theImage, \"GetComponentInfo\");\n\tsSetComponentInstanceStorageProc = (SetComponentInstanceStorageProc) dlsym(theImage, \"SetComponentInstanceStorage\");\n}\n\n#if TARGET_OS_MAC\n\n#include <dispatch/dispatch.h>\n\nstatic dispatch_once_t sCSInitOnce = 0;\n\nstatic void CSInit ()\n{\n\tdispatch_once_f(&sCSInitOnce, NULL, CSInitOnce);\n}\n\n#else \n\nstatic void CSInit ()\n{\n\tstatic int sDoCSLoad = 1;\n\tif (sDoCSLoad) {\n\t\tsDoCSLoad = 0;\n\t\tCSInitOnce(NULL);\n\t}\n}\n\n#endif\n\nOSStatus CMgr_GetComponentDescription (const AudioComponentInstance inInstance, AudioComponentDescription * outDesc)\n{\n\tCSInit();\n\tif (sGetComponentInfoProc)\n\t\treturn (*sGetComponentInfoProc)((Component)inInstance, (ComponentDescription*)outDesc, NULL, NULL, NULL);\n\treturn kAudio_UnimplementedError;\n}\n\nHandle CMgr_GetComponentInstanceStorage(ComponentInstance aComponentInstance)\n{\n\tCSInit();\n\tif (sGetComponentInstanceStorageProc)\n\t\treturn (*sGetComponentInstanceStorageProc)(aComponentInstance);\n\treturn NULL;\n}\n\nvoid CMgr_SetComponentInstanceStorage(ComponentInstance aComponentInstance, Handle theStorage)\n{\n\tCSInit();\n\tif (sSetComponentInstanceStorageProc)\n\t\t(*sSetComponentInstanceStorageProc)(aComponentInstance, theStorage);\n}\n#endif // !CA_USE_AUDIO_PLUGIN_ONLY\n\n#else\n//#include \"ComponentManagerDependenciesWin.h\"\n// everything we need is there and we should be linking against it\nstatic OSStatus CB_GetComponentDescription (const AudioComponentInstance inInstance, AudioComponentDescription * outDesc)\n{\n\tAudioComponent comp = AudioComponentInstanceGetComponent(inInstance);\n\tif (comp)\n\t\treturn AudioComponentGetDescription(comp, outDesc);\n\n\treturn kAudio_ParamError;\n}\n\n#endif\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/unsupported-arch/q.cpp": "/************************************************************************\n ************************************************************************\n    FAUST Architecture File\n    Copyright (C) 2006-2011 Albert Graef <Dr.Graef@t-online.de>\n    ---------------------------------------------------------------------\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as \n    published by the Free Software Foundation; either version 2.1 of the \n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with the GNU C Library; if not, write to the Free\n    Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n    02111-1307 USA. \n ************************************************************************\n ************************************************************************/\n\n/* Q architecture file. Derived from minimal.cpp included in the Faust\n   distribution. Please note that this is to be compiled as a shared library,\n   which is then loaded dynamically by Q's faust module. */\n\n#include <stdlib.h>\n#include <math.h>\n\nstruct Meta\n{\n    void declare (const char* key, const char* value) { }\n};\n\n// abs is now predefined\n//template<typename T> T abs (T a)\t\t\t{ return (a<T(0)) ? -a : a; }\n\n\ninline int\t\tlsr (int x, int n)\t\t\t{ return int(((unsigned int)x) >> n); }\n\n/******************************************************************************\n*******************************************************************************\n\n\t\t\t\t\t\t\t       VECTOR INTRINSICS\n\n*******************************************************************************\n*******************************************************************************/\n\n//inline void *aligned_calloc(size_t nmemb, size_t size) { return (void*)((unsigned)(calloc((nmemb*size)+15,sizeof(char)))+15 & 0xfffffff0); }\n//inline void *aligned_calloc(size_t nmemb, size_t size) { return (void*)((size_t)(calloc((nmemb*size)+15,sizeof(char)))+15 & ~15); }\n\n<<includeIntrinsic>>\n\n/******************************************************************************\n*******************************************************************************\n\n\t\t\tABSTRACT USER INTERFACE\n\n*******************************************************************************\n*******************************************************************************/\n\nclass UI\n{\n  bool\tfStopped;\npublic:\n\t\t\n  UI() : fStopped(false) {}\n  virtual ~UI() {}\n\t\n  virtual void addButton(char* label, float* zone) = 0;\n  virtual void addCheckButton(char* label, float* zone) = 0;\n  virtual void addVerticalSlider(char* label, float* zone, float init, float min, float max, float step) = 0;\n  virtual void addHorizontalSlider(char* label, float* zone, float init, float min, float max, float step) = 0;\n  virtual void addNumEntry(char* label, float* zone, float init, float min, float max, float step) = 0;\n\n  virtual void addHorizontalBargraph(char* label, float* zone, float min, float max) = 0;\n  virtual void addVerticalBargraph(char* label, float* zone, float min, float max) = 0;\n\t\n  virtual void openTabBox(char* label) = 0;\n  virtual void openHorizontalBox(char* label) = 0;\n  virtual void openVerticalBox(char* label) = 0;\n  virtual void closeBox() = 0;\n\t\n  virtual void run() = 0;\n\t\n  void stop()\t{ fStopped = true; }\n  bool stopped() \t{ return fStopped; }\n\n  virtual void declare(float* zone, const char* key, const char* value) {}\n};\n\n/***************************************************************************\n   Q UI interface\n ***************************************************************************/\n\nenum ui_elem_type_t {\n  UI_BUTTON, UI_CHECK_BUTTON,\n  UI_V_SLIDER, UI_H_SLIDER, UI_NUM_ENTRY,\n  UI_V_BARGRAPH, UI_H_BARGRAPH,\n  UI_END_GROUP, UI_V_GROUP, UI_H_GROUP, UI_T_GROUP\n};\n\nstruct ui_elem_t {\n  ui_elem_type_t type;\n  char *label;\n  float *zone;\n  void *ref;\n  float init, min, max, step;\n};\n\nclass QUI : public UI\n{\npublic:\n  int nelems;\n  ui_elem_t *elems;\n\t\t\n  QUI();\n  virtual ~QUI();\n\nprotected:\n  void add_elem(ui_elem_type_t type, char *label = NULL);\n  void add_elem(ui_elem_type_t type, char *label, float *zone);\n  void add_elem(ui_elem_type_t type, char *label, float *zone,\n\t\tfloat init, float min, float max, float step);\n  void add_elem(ui_elem_type_t type, char *label, float *zone,\n\t\tfloat min, float max);\n\npublic:\n  virtual void addButton(char* label, float* zone);\n  virtual void addCheckButton(char* label, float* zone);\n  virtual void addVerticalSlider(char* label, float* zone, float init, float min, float max, float step);\n  virtual void addHorizontalSlider(char* label, float* zone, float init, float min, float max, float step);\n  virtual void addNumEntry(char* label, float* zone, float init, float min, float max, float step);\n\n  virtual void addHorizontalBargraph(char* label, float* zone, float min, float max);\n  virtual void addVerticalBargraph(char* label, float* zone, float min, float max);\n  \n  virtual void openTabBox(char* label);\n  virtual void openHorizontalBox(char* label);\n  virtual void openVerticalBox(char* label);\n  virtual void closeBox();\n\t\n  virtual void run();\n};\n\nQUI::QUI()\n{\n  nelems = 0;\n  elems = NULL;\n}\n\nQUI::~QUI()\n{\n  if (elems) free(elems);\n}\n\ninline void QUI::add_elem(ui_elem_type_t type, char *label)\n{\n  ui_elem_t *elems1 = (ui_elem_t*)realloc(elems, (nelems+1)*sizeof(ui_elem_t));\n  if (elems1)\n    elems = elems1;\n  else\n    return;\n  elems[nelems].type = type;\n  elems[nelems].label = label;\n  elems[nelems].zone = NULL;\n  elems[nelems].ref = NULL;\n  elems[nelems].init = 0.0;\n  elems[nelems].min = 0.0;\n  elems[nelems].max = 0.0;\n  elems[nelems].step = 0.0;\n  nelems++;\n}\n\ninline void QUI::add_elem(ui_elem_type_t type, char *label, float *zone)\n{\n  ui_elem_t *elems1 = (ui_elem_t*)realloc(elems, (nelems+1)*sizeof(ui_elem_t));\n  if (elems1)\n    elems = elems1;\n  else\n    return;\n  elems[nelems].type = type;\n  elems[nelems].label = label;\n  elems[nelems].zone = zone;\n  elems[nelems].ref = NULL;\n  elems[nelems].init = 0.0;\n  elems[nelems].min = 0.0;\n  elems[nelems].max = 0.0;\n  elems[nelems].step = 0.0;\n  nelems++;\n}\n\ninline void QUI::add_elem(ui_elem_type_t type, char *label, float *zone,\n\t\t\t  float init, float min, float max, float step)\n{\n  ui_elem_t *elems1 = (ui_elem_t*)realloc(elems, (nelems+1)*sizeof(ui_elem_t));\n  if (elems1)\n    elems = elems1;\n  else\n    return;\n  elems[nelems].type = type;\n  elems[nelems].label = label;\n  elems[nelems].zone = zone;\n  elems[nelems].ref = NULL;\n  elems[nelems].init = init;\n  elems[nelems].min = min;\n  elems[nelems].max = max;\n  elems[nelems].step = step;\n  nelems++;\n}\n\ninline void QUI::add_elem(ui_elem_type_t type, char *label, float *zone,\n\t\t\t  float min, float max)\n{\n  ui_elem_t *elems1 = (ui_elem_t*)realloc(elems, (nelems+1)*sizeof(ui_elem_t));\n  if (elems1)\n    elems = elems1;\n  else\n    return;\n  elems[nelems].type = type;\n  elems[nelems].label = label;\n  elems[nelems].zone = zone;\n  elems[nelems].ref = NULL;\n  elems[nelems].init = 0.0;\n  elems[nelems].min = min;\n  elems[nelems].max = max;\n  elems[nelems].step = 0.0;\n  nelems++;\n}\n\nvoid QUI::addButton(char* label, float* zone)\n{ add_elem(UI_BUTTON, label, zone); }\nvoid QUI::addCheckButton(char* label, float* zone)\n{ add_elem(UI_CHECK_BUTTON, label, zone); }\nvoid QUI::addVerticalSlider(char* label, float* zone, float init, float min, float max, float step)\n{ add_elem(UI_V_SLIDER, label, zone, init, min, max, step); }\nvoid QUI::addHorizontalSlider(char* label, float* zone, float init, float min, float max, float step)\n{ add_elem(UI_H_SLIDER, label, zone, init, min, max, step); }\nvoid QUI::addNumEntry(char* label, float* zone, float init, float min, float max, float step)\n{ add_elem(UI_NUM_ENTRY, label, zone, init, min, max, step); }\n\nvoid QUI::addHorizontalBargraph(char* label, float* zone, float min, float max)\n{ add_elem(UI_H_BARGRAPH, label, zone, min, max); }\nvoid QUI::addVerticalBargraph(char* label, float* zone, float min, float max)\n{ add_elem(UI_V_BARGRAPH, label, zone, min, max); }\n\nvoid QUI::openTabBox(char* label)\n{ add_elem(UI_T_GROUP, label); }\nvoid QUI::openHorizontalBox(char* label)\n{ add_elem(UI_H_GROUP, label); }\nvoid QUI::openVerticalBox(char* label)\n{ add_elem(UI_V_GROUP, label); }\nvoid QUI::closeBox()\n{ add_elem(UI_END_GROUP); }\n\nvoid QUI::run() {}\n\n/******************************************************************************\n*******************************************************************************\n\n\t\t\t    FAUST DSP\n\n*******************************************************************************\n*******************************************************************************/\n\n\n\n//----------------------------------------------------------------\n//  abstract definition of a signal processor\n//----------------------------------------------------------------\n\t\t\t\nclass dsp {\n protected:\n\tint fSampleRate;\n public:\n\tdsp() {}\n\tvirtual ~dsp() {}\n\tvirtual int getNumInputs() = 0;\n\tvirtual int getNumOutputs() = 0;\n\tvirtual void buildUserInterface(UI* interface) = 0;\n\tvirtual void init(int sample_rate) = 0;\n \tvirtual void compute(int len, float** inputs, float** outputs) = 0;\n};\n\n//----------------------------------------------------------------------------\n//  FAUST generated signal processor\n//----------------------------------------------------------------------------\n\t\t\n\n<<includeclass>>\n\n/* The class factory, used to create and destroy mydsp objects in the\n   client. Implemented using C linkage to facilitate dlopen access. */\n\nextern \"C\" dsp *newdsp()\n{\n  mydsp *d = new mydsp();\n  return d;\n}\n\nextern \"C\" void deldsp(dsp* d)\n{\n  delete d;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/embedded/faustremote/dns_avahi/config.h": "/* config.h.  Generated from config.h.in by configure.  */\n/* config.h.in.  Generated from configure.ac by autoheader.  */\n\n/* Group for running the avahi-autoipd daemon */\n#define AVAHI_AUTOIPD_GROUP \"avahi-autoipd\"\n\n/* User for running the avahi-autoipd daemon */\n#define AVAHI_AUTOIPD_USER \"avahi-autoipd\"\n\n/* Group for Avahi */\n#define AVAHI_GROUP \"avahi\"\n\n/* Privileged access group for Avahi clients */\n#define AVAHI_PRIV_ACCESS_GROUP \"netdev\"\n\n/* User for running the Avahi daemon */\n#define AVAHI_USER \"avahi\"\n\n/* Enable chroot() usage */\n/* #undef ENABLE_CHROOT */\n\n/* always defined to indicate that i18n is enabled */\n#define ENABLE_NLS 1\n\n/* Define if SSP C support is enabled. */\n#define ENABLE_SSP_CC 1\n\n/* Define if SSP C++ support is enabled. */\n#define ENABLE_SSP_CXX 1\n\n/* Gettext package */\n#define GETTEXT_PACKAGE \"avahi\"\n\n/* Define to 1 if you have the <arpa/inet.h> header file. */\n#define HAVE_ARPA_INET_H 1\n\n/* Define to 1 if you have the `bind_textdomain_codeset' function. */\n#define HAVE_BIND_TEXTDOMAIN_CODESET 1\n\n/* Define to 1 if you have the <bsdxml.h> header file. */\n/* #undef HAVE_BSDXML_H */\n\n/* Define to 1 if your system has a working `chown' function. */\n#define HAVE_CHOWN 1\n\n/* Define to 1 if you have the `chroot' function. */\n#define HAVE_CHROOT 1\n\n/* Support for DBM */\n/* #undef HAVE_DBM */\n\n/* Whether we have D-Bus or not */\n#define HAVE_DBUS 1\n\n/* Define to 1 if you have the `dbus_bus_get_private' function. */\n#define HAVE_DBUS_BUS_GET_PRIVATE 1\n\n/* Define to 1 if you have the `dbus_connection_close' function. */\n#define HAVE_DBUS_CONNECTION_CLOSE 1\n\n/* Define to 1 if you have the `dcgettext' function. */\n#define HAVE_DCGETTEXT 1\n\n/* Define to 1 if you have the declaration of `environ', and to 0 if you\n   don't. */\n#define HAVE_DECL_ENVIRON 1\n\n/* Define to 1 if you have the <dlfcn.h> header file. */\n#define HAVE_DLFCN_H 1\n\n/* Have dlopen() */\n#define HAVE_DLOPEN 1\n\n/* Define to 1 if you have the <expat.h> header file. */\n#define HAVE_EXPAT_H 1\n\n/* Define to 1 if you have the <fcntl.h> header file. */\n#define HAVE_FCNTL_H 1\n\n/* Define if you have gcc -fvisibility=hidden support */\n#define HAVE_GCC_VISIBILITY 1\n\n/* Support for GDBM */\n#define HAVE_GDBM /**/\n\n/* Define to 1 if you have the <gdbm.h> header file. */\n#define HAVE_GDBM_H 1\n\n/* Define to 1 if you have the `gethostbyname' function. */\n#define HAVE_GETHOSTBYNAME 1\n\n/* Define to 1 if you have the `gethostname' function. */\n#define HAVE_GETHOSTNAME 1\n\n/* Define to 1 if you have the `getprogname' function. */\n/* #undef HAVE_GETPROGNAME */\n\n/* Define if the GNU gettext() function is already present or preinstalled. */\n#define HAVE_GETTEXT 1\n\n/* Define to 1 if you have the `gettimeofday' function. */\n#define HAVE_GETTIMEOFDAY 1\n\n/* Enable Linux inotify() usage */\n#define HAVE_INOTIFY 1\n\n/* Define to 1 if you have the <inttypes.h> header file. */\n#define HAVE_INTTYPES_H 1\n\n/* Enable BSD kqueue() usage */\n/* #undef HAVE_KQUEUE */\n\n/* Define if your <locale.h> file defines LC_MESSAGES. */\n#define HAVE_LC_MESSAGES 1\n\n/* Define to 1 if you have the <limits.h> header file. */\n#define HAVE_LIMITS_H 1\n\n/* Define to 1 if you have the <locale.h> header file. */\n#define HAVE_LOCALE_H 1\n\n/* Define to 1 if you have the `memchr' function. */\n#define HAVE_MEMCHR 1\n\n/* Define to 1 if you have the `memmove' function. */\n#define HAVE_MEMMOVE 1\n\n/* Define to 1 if you have the <memory.h> header file. */\n#define HAVE_MEMORY_H 1\n\n/* Define to 1 if you have the `memset' function. */\n#define HAVE_MEMSET 1\n\n/* Define to 1 if you have the `mkdir' function. */\n#define HAVE_MKDIR 1\n\n/* Define to 1 if you have the <ndbm.h> header file. */\n/* #undef HAVE_NDBM_H */\n\n/* Define to 1 if you have the <netdb.h> header file. */\n#define HAVE_NETDB_H 1\n\n/* Define to 1 if you have the <netinet/in.h> header file. */\n#define HAVE_NETINET_IN_H 1\n\n/* Support for Linux netlink */\n#define HAVE_NETLINK /**/\n\n/* Support for PF_ROUTE */\n/* #undef HAVE_PF_ROUTE */\n\n/* Define if you have POSIX threads libraries and header files. */\n#define HAVE_PTHREAD 1\n\n/* Define to 1 if you have the `putenv' function. */\n#define HAVE_PUTENV 1\n\n/* Define to 1 if you have the `select' function. */\n#define HAVE_SELECT 1\n\n/* Define to 1 if you have the `setegid' function. */\n#define HAVE_SETEGID 1\n\n/* Define to 1 if you have the `seteuid' function. */\n#define HAVE_SETEUID 1\n\n/* Define to 1 if you have the `setproctitle' function. */\n/* #undef HAVE_SETPROCTITLE */\n\n/* Define to 1 if you have the `setregid' function. */\n#define HAVE_SETREGID 1\n\n/* Define to 1 if you have the `setresgid' function. */\n#define HAVE_SETRESGID 1\n\n/* Define to 1 if you have the `setresuid' function. */\n#define HAVE_SETRESUID 1\n\n/* Define to 1 if you have the `setreuid' function. */\n#define HAVE_SETREUID 1\n\n/* Define to 1 if you have the `socket' function. */\n#define HAVE_SOCKET 1\n\n/* Define to 1 if `stat' has the bug that it succeeds when given the\n   zero-length file name argument. */\n/* #undef HAVE_STAT_EMPTY_STRING_BUG */\n\n/* Define to 1 if stdbool.h conforms to C99. */\n#define HAVE_STDBOOL_H 1\n\n/* Define to 1 if you have the <stdint.h> header file. */\n#define HAVE_STDINT_H 1\n\n/* Define to 1 if you have the <stdlib.h> header file. */\n#define HAVE_STDLIB_H 1\n\n/* Define to 1 if you have the `strcasecmp' function. */\n#define HAVE_STRCASECMP 1\n\n/* Define to 1 if you have the `strchr' function. */\n#define HAVE_STRCHR 1\n\n/* Define to 1 if you have the `strcspn' function. */\n#define HAVE_STRCSPN 1\n\n/* Define to 1 if you have the `strdup' function. */\n#define HAVE_STRDUP 1\n\n/* Define to 1 if you have the `strerror' function. */\n#define HAVE_STRERROR 1\n\n/* Define to 1 if you have the <strings.h> header file. */\n#define HAVE_STRINGS_H 1\n\n/* Define to 1 if you have the <string.h> header file. */\n#define HAVE_STRING_H 1\n\n/* Define to 1 if you have the `strlcpy' function. */\n/* #undef HAVE_STRLCPY */\n\n/* Define to 1 if you have the `strncasecmp' function. */\n#define HAVE_STRNCASECMP 1\n\n/* Define to 1 if you have the `strrchr' function. */\n#define HAVE_STRRCHR 1\n\n/* Define to 1 if you have the `strspn' function. */\n#define HAVE_STRSPN 1\n\n/* Define to 1 if you have the `strstr' function. */\n#define HAVE_STRSTR 1\n\n/* Support for struct ip_mreq */\n/* #undef HAVE_STRUCT_IP_MREQ */\n\n/* Support for struct ip_mreqn */\n#define HAVE_STRUCT_IP_MREQN /**/\n\n/* Define if there is a struct lifconf. */\n/* #undef HAVE_STRUCT_LIFCONF */\n\n/* Define to 1 if you have the <syslog.h> header file. */\n#define HAVE_SYSLOG_H 1\n\n/* Define to 1 if you have the <sys/capability.h> header file. */\n/* #undef HAVE_SYS_CAPABILITY_H */\n\n/* Support for sys/filio.h */\n/* #undef HAVE_SYS_FILIO_H */\n\n/* Define to 1 if you have the <sys/inotify.h> header file. */\n#define HAVE_SYS_INOTIFY_H 1\n\n/* Define to 1 if you have the <sys/ioctl.h> header file. */\n#define HAVE_SYS_IOCTL_H 1\n\n/* Define to 1 if you have the <sys/prctl.h> header file. */\n#define HAVE_SYS_PRCTL_H 1\n\n/* Define to 1 if you have the <sys/select.h> header file. */\n#define HAVE_SYS_SELECT_H 1\n\n/* Define to 1 if you have the <sys/socket.h> header file. */\n#define HAVE_SYS_SOCKET_H 1\n\n/* Define to 1 if you have the <sys/stat.h> header file. */\n#define HAVE_SYS_STAT_H 1\n\n/* Support for sys/sysctl.h */\n#define HAVE_SYS_SYSCTL_H /**/\n\n/* Define to 1 if you have the <sys/time.h> header file. */\n#define HAVE_SYS_TIME_H 1\n\n/* Define to 1 if you have the <sys/types.h> header file. */\n#define HAVE_SYS_TYPES_H 1\n\n/* Define to 1 if you have <sys/wait.h> that is POSIX.1 compatible. */\n#define HAVE_SYS_WAIT_H 1\n\n/* Define to 1 if you have the `uname' function. */\n#define HAVE_UNAME 1\n\n/* Define to 1 if you have the <unistd.h> header file. */\n#define HAVE_UNISTD_H 1\n\n/* Support for visibility hidden */\n#define HAVE_VISIBILITY_HIDDEN /**/\n\n/* Define to 1 if the system has the type `_Bool'. */\n#define HAVE__BOOL 1\n\n/* Define to 1 if `lstat' dereferences a symlink specified with a trailing\n   slash. */\n#define LSTAT_FOLLOWS_SLASHED_SYMLINK 1\n\n/* Define to the sub-directory in which libtool stores uninstalled libraries.\n   */\n#define LT_OBJDIR \".libs/\"\n\n/* Define to 1 if your C compiler doesn't accept -c and -o together. */\n/* #undef NO_MINUS_C_MINUS_O */\n\n/* Name of package */\n#define PACKAGE \"avahi\"\n\n/* Define to the address where bug reports for this package should be sent. */\n#define PACKAGE_BUGREPORT \"avahi (at) lists (dot) freedesktop (dot) org\"\n\n/* Define to the full name of this package. */\n#define PACKAGE_NAME \"avahi\"\n\n/* Define to the full name and version of this package. */\n#define PACKAGE_STRING \"avahi 0.6.31\"\n\n/* Define to the one symbol short name of this package. */\n#define PACKAGE_TARNAME \"avahi\"\n\n/* Define to the home page for this package. */\n#define PACKAGE_URL \"\"\n\n/* Define to the version of this package. */\n#define PACKAGE_VERSION \"0.6.31\"\n\n/* Define to necessary symbol if this constant uses a non-standard name on\n   your system. */\n/* #undef PTHREAD_CREATE_JOINABLE */\n\n/* Define to the type of arg 1 for `select'. */\n#define SELECT_TYPE_ARG1 int\n\n/* Define to the type of args 2, 3 and 4 for `select'. */\n#define SELECT_TYPE_ARG234 (fd_set *)\n\n/* Define to the type of arg 5 for `select'. */\n#define SELECT_TYPE_ARG5 (struct timeval *)\n\n/* Define to 1 if you have the ANSI C header files. */\n#define STDC_HEADERS 1\n\n/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */\n#define TIME_WITH_SYS_TIME 1\n\n/* Enable extensions on AIX 3, Interix.  */\n#ifndef _ALL_SOURCE\n# define _ALL_SOURCE 1\n#endif\n/* Enable GNU extensions on systems that have them.  */\n#ifndef _GNU_SOURCE\n# define _GNU_SOURCE 1\n#endif\n/* Enable threading extensions on Solaris.  */\n#ifndef _POSIX_PTHREAD_SEMANTICS\n# define _POSIX_PTHREAD_SEMANTICS 1\n#endif\n/* Enable extensions on HP NonStop.  */\n#ifndef _TANDEM_SOURCE\n# define _TANDEM_SOURCE 1\n#endif\n/* Enable general extensions on Solaris.  */\n#ifndef __EXTENSIONS__\n# define __EXTENSIONS__ 1\n#endif\n\n\n/* Version number of package */\n#define VERSION \"0.6.31\"\n\n/* Define to 1 if on MINIX. */\n/* #undef _MINIX */\n\n/* Define to 2 if the system does not provide POSIX.1 features except with\n   this defined. */\n/* #undef _POSIX_1_SOURCE */\n\n/* Define to 1 if you need to in order for `stat' and other things to work. */\n/* #undef _POSIX_SOURCE */\n\n/* Define to empty if `const' does not conform to ANSI C. */\n/* #undef const */\n\n/* Define to `int' if <sys/types.h> doesn't define. */\n/* #undef gid_t */\n\n/* Define to `int' if <sys/types.h> does not define. */\n/* #undef mode_t */\n\n/* Define to `int' if <sys/types.h> does not define. */\n/* #undef pid_t */\n\n/* Define to `unsigned int' if <sys/types.h> does not define. */\n/* #undef size_t */\n\n/* Define to `int' if <sys/types.h> doesn't define. */\n/* #undef uid_t */\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/ios-libsndfile.a",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/img/multiKeyb.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/img/faust2android.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/img/multi.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/img/keyb.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/img/accel.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-mdpi/ic_keyboardicon.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-mdpi/ic_launcher.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-mdpi/ic_accelnormon.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-mdpi/ic_accelinvertoff.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-mdpi/ic_reset.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-mdpi/ic_accelinverton.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-mdpi/ic_lockiconclose.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-mdpi/ic_accelinvertcurveoff.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-mdpi/ic_accelinvertcurveon.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-mdpi/ic_accelcurveon.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-mdpi/ic_zoomin.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-mdpi/ic_accelnormoff.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-mdpi/ic_accelcurveoff.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-mdpi/ic_zoomout.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-mdpi/ic_lockiconopen.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-hdpi/ic_keyboardicon.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-hdpi/ic_launcher.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-hdpi/ic_accelnormon.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-hdpi/ic_accelinvertoff.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-hdpi/ic_reset.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-hdpi/ic_accelinverton.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-hdpi/ic_lockiconclose.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-hdpi/ic_accelinvertcurveoff.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-hdpi/ic_accelinvertcurveon.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-hdpi/ic_accelcurveon.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-hdpi/ic_zoomin.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-hdpi/ic_accelnormoff.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-hdpi/ic_accelcurveoff.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-hdpi/ic_zoomout.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-hdpi/ic_lockiconopen.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/ic_keyboardicon.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/scrubber_control_disabled_holo.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/ic_launcher.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/ic_accelnormon.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/ic_accelinvertoff.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/piano_key_black_down.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/scrubber_control_normal_holo.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/ic_reset.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/ic_accelinverton.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/ic_lockiconclose.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/piano_key_left_down.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/scrubber_control_pressed_holo.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/piano_key_right.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/piano_key_left.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/ic_accelinvertcurveoff.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/scrubber_control_focused_holo.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/check_down.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/ic_accelinvertcurveon.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/ic_accelcurveon.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/ic_zoomin.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/ic_accelnormoff.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/piano_key_black.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/ic_accelcurveoff.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/piano_key_right_down.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/ic_zoomout.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/ic_lockiconopen.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/check_up.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/piano_key_center_down.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/piano_key_center.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/oldKeys/piano_key_right_.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/oldKeys/piano_key_black_down.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/oldKeys/piano_key_left_down.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/oldKeys/piano_key_right.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/oldKeys/piano_key_black_down_.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/oldKeys/piano_key_left.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/oldKeys/piano_key_left_.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/oldKeys/piano_key_center_.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/oldKeys/piano_key_black.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/oldKeys/piano_key_center_down_.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/oldKeys/piano_key_black_.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/oldKeys/piano_key_right_down_.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/oldKeys/piano_key_right_down.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/oldKeys/piano_key_center_down.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/src/main/res/drawable-xhdpi/oldKeys/piano_key_center.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/lib/libsndfile/lib/armeabi-v7a/libsndfile.so",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/lib/libsndfile/lib/arm64-v8a/libsndfile.so",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/app/tools/faust2android.keystore",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/android/gradle/wrapper/gradle-wrapper.jar",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Default-Landscape~ipad.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Default-Portrait~ipad.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Default-Portrait@2x~ipad.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Default@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Default-568h@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Default-Landscape@2x~ipad.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Default.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/iOS/close.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/iOS/close@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon-Output@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/jackview-midi-on.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon-Fx.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/jackview-midi-off.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/jackview-audio-off@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/jackview-midi-off@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/ic_accelnormon.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon-Expand@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon-Output136.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon-Delete@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon_Apple.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/jackview-midi-on@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/jackview-audio-on@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon-Output1024.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon-Analyzer136.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/ic_accelinverton.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon-Output.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon-Fx136.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon-Jack@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/jackview-out.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon-Fx@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/ic_accelinvertcurveon.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon-Delete.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon-Analyzer.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/jackview-audio-off.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon-Expand.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/ic_accelcurveon.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/jackview-out@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/jackview-in@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon-Jack.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon_Apple@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/jackview-in.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/jackview-audio-on.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/pix/Icon-Analyzer@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-40@2x-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-60@3x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-29@2x-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-20@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-40@3x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-76@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-29@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-60@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-40.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-83.5@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-20@2x-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-40@2x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-1024.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-29.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-20.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-76.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-29@3x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/iOS/Template_CoreAudio/Images.xcassets/AppIcon.appiconset/Icon_Faust_1024-20@3x.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/AU/SectionPatternLight.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/AU/English.lproj/InfoPlist.strings",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/webaudio/organ.wasm",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/webaudio/libfaust-wasm.wasm",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/webaudio/mixer64.wasm",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/webaudio/noise.wasm",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/webaudio/libfaust-glue.wasm",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/webaudio/favicon.ico",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/webaudio/mixer32.wasm",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/webaudio/osc.wasm",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/unsupported-arch/intrinsic.hh",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/osclib/faust/src/lib/deelx.h",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-ldpi/key_down_dark.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-ldpi/key_up_dark.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-ldpi/key_down_bright.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-ldpi/key_up_bright.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/mipmap-hdpi/ic_launcher.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/mipmap-mdpi/ic_launcher.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-mdpi/key_down_dark.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-mdpi/key_up_dark.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-mdpi/key_down_bright.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-mdpi/key_up_bright.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-hdpi/key_down_dark.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-hdpi/key_up_dark.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-hdpi/key_down_bright.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-hdpi/key_up_bright.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-xhdpi/key_down_dark.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-xhdpi/key_up_dark.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-xhdpi/key_down_bright.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-xhdpi/key_up_bright.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-xxhdpi/key_down_dark.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-xxhdpi/key_up_dark.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-xxhdpi/key_down_bright.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/drawable-xxhdpi/key_up_bright.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/app/tools/faust2android.keystore",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/android/gradle/wrapper/gradle-wrapper.jar",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/Assets.xcassets/AppIcon.appiconset/ic_launcher-7.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/Assets.xcassets/AppIcon.appiconset/ic_launcher.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/Assets.xcassets/AppIcon.appiconset/ic_launcher-11.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/Assets.xcassets/AppIcon.appiconset/ic_launcher-10.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/Assets.xcassets/AppIcon.appiconset/ic_launcher-15.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/Assets.xcassets/AppIcon.appiconset/ic_launcher-12.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/Assets.xcassets/AppIcon.appiconset/ic_launcher-3.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/Assets.xcassets/AppIcon.appiconset/ic_launcher-9.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/Assets.xcassets/AppIcon.appiconset/ic_launcher-16.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/Assets.xcassets/AppIcon.appiconset/ic_launcher-1.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/Assets.xcassets/AppIcon.appiconset/ic_launcher-5.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/Assets.xcassets/AppIcon.appiconset/ic_launcher-8.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/Assets.xcassets/AppIcon.appiconset/ic_launcher-6.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/Assets.xcassets/AppIcon.appiconset/ic_launcher-14.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/Assets.xcassets/AppIcon.appiconset/ic_launcher-13.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/Assets.xcassets/AppIcon.appiconset/ic_launcher-4.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/Assets.xcassets/AppIcon.appiconset/ic_launcher-2.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/img/keyUpBright.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/img/keyUpDark.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/img/keyDownDark.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/smartKeyboard/iOS/Faust/img/keyDownBright.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/architecture/httpdlib/src/lib/deelx.h",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/build/wasmglue/libvorbisenc.a",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/build/wasmglue/libsndfile.a",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/build/wasmglue/libogg.a",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/build/wasmglue/libvorbis.a",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/build/wasmglue/libFLAC.a",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/build/package/faust.ico",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/build/package/faust-310x310.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/faustManual.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/mix4-http.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/mix4-http-mute.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/metadata/metadata.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/notice/notice.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/expression/expression.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/library/library.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/listing/listing.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/includefile/includefile.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/documentation/documentation.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/numbers/numbers.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/envexp/envexp.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/diagramexp/diagramexp.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/abstraction/abstraction.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/diagcomposition/diagcomposition.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/definition/definition.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/infixop/infixop.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/signature/signature.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/application/application.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/diagiteration/diagiteration.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/access/access.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/waveform/waveform.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/diagram/diagram.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/equation/equation.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/patternabstraction/patternabstraction.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/explicitsubst/explicitsubst.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/environment/environment.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/letrec/letrec.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/pattern/pattern.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/foreignexp/foreignexp.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/src/component/component.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/juce/polyPlugin.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/juce/juceProject.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/juce/plugin.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/img/juce/newPlugin.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/misc/juce/SawtoothSynthPoly.zip",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-manual/misc/juce/SawtoothSynth.zip",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/misc/using-faust-with-ros.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/misc/lac06.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/misc/lac07_graef.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/misc/faust-soft-computing.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/misc/faust-den-haag-april-2006-v6.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/misc/faust_SMC2009.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/misc/Faust_tutorial2.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/misc/lac07_slides_graef.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/misc/faust-rewriting.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/misc/faust_tutorial.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/misc/using-faust-with-ros-src/images/tutocommandline.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/misc/using-faust-with-ros-src/images/faustlive-export.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/misc/using-faust-with-ros-src/images/noise_gtk.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/misc/using-faust-with-ros-src/images/harpe_gtk.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/seq1.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/poly_ui_effect1.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/poly_ui_effect2.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/poly_ui.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/mix4-http.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/noise-screenshot.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/noise.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/filter2.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/merge1.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/par1.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/mix4-http-mute.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/split1.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/midi-tester.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/rec1.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/noise-diagram.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/openmp-model.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/noisemetadata.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/compiler-stack.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/noise-http-control.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/bandeau-faust.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/images/noise-http.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/graphs/faustflow.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/graphs/faustextended2.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/graphs/faustextended1.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/graphs/loopgraph.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/graphs/loopgraph2.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/graphs/faustextended3.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/illustrations/faust-diagram4.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/illustrations/syntax-chart.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/illustrations/faust-diagram6.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/illustrations/faust-diagram5.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/documentation/faust-quick-reference-src/illustrations/button.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/tests/codegen-tests/freeverb.dsp",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/tests/codegen-tests/tests/CMakeFiles/feature_tests.bin",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/tests/codegen-tests/tests/CMakeFiles/3.9.4/CMakeDetermineCompilerABI_C.bin",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/tests/codegen-tests/tests/CMakeFiles/3.9.4/CMakeDetermineCompilerABI_CXX.bin",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/windows/libmicrohttpd/libmicrohttpd-dll.dll",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/windows/libmicrohttpd/libmicrohttpd-dll.lib",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/windows/libmicrohttpd/libmicrohttpd.lib",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/windows/libmicrohttpd/x64/libmicrohttpd-dll.dll",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/windows/libmicrohttpd/x64/libmicrohttpd-dll.lib",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/windows/libmicrohttpd/x64/libmicrohttpd.lib",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/windows/libmicrohttpd/x64/MSYS/libmicrohttpd.lib",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/benchmark/20121009-Bench-Faust-template.ots",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/compiler/normalize/privatise.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/embedded/faustgen/MacOS/sndfile/libvorbisenc.a",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/embedded/faustgen/MacOS/sndfile/libsndfile.a",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/embedded/faustgen/MacOS/sndfile/libogg.a",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/embedded/faustgen/MacOS/sndfile/libvorbis.a",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/embedded/faustgen/MacOS/sndfile/libFLAC.a",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/embedded/faustremote/RemoteServer/Faust_Compilation_Options.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/embedded/faustremote/dns_avahi/avahi-common/domain.h",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/examples/physicalModeling/faust-stk/pd-patches/fancy/what-a-friend/what_a_friend.mid",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/examples/physicalModeling/faust-stk/pd-patches/fancy/daisy/daisy.mid",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/examples/physicalModeling/faust-stk/pd-patches/fancy/canon/pachelbel.mid",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/examples/physicalModeling/faust-stk/pd-patches/fancy/take5/take5.mid",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/examples/physicalModeling/faust-stk/pd-patches/fancy/turkish-march/turkish-march.mid",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/examples/bela/ReadMe.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/examples/SAM/SHARC Audio Module Faust Interface.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/examples/SAM/effects/MIDI Mappings Effects.xlsx",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/examples/SAM/chorus/MIDI Mappings Chorus.xlsx",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/examples/SAM/freeverb/MIDI Mappings Freeverb.xlsx",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/examples/SAM/echo/MIDI Mappings Echo.xlsx",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/examples/SAM/virtualAnalog/MIDI Mappings VA.xlsx",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/examples/SAM/virtualAnalog/virtualAnalog.touchosc",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/examples/SAM/flanger/MIDI Mappings Flanger.xlsx",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/tools/physicalModeling/ir2dsp/lacPaper2017.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/tools/physicalModeling/mesh2faust/vega/libraries/glui/glui-2.35/src/glui_img_listbox_up_dis.ppm",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/tools/physicalModeling/mesh2faust/vega/libraries/glui/glui-2.35/src/glui_img_listbox_down.ppm",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/tools/physicalModeling/mesh2faust/vega/libraries/glui/glui-2.35/src/glui_img_listbox_up.ppm",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/tools/physicalModeling/mesh2faust/vega/libraries/glui/glui-2.35/src/doc/glui_manual.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/tools/physicalModeling/mesh2faust/vega/libraries/glui/glui-2.35/www/valid-html401.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/tools/physicalModeling/mesh2faust/vega/libraries/glui/glui-2.35/www/screen2.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/tools/physicalModeling/mesh2faust/vega/libraries/glui/glui-2.35/www/screen3.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/tools/physicalModeling/mesh2faust/vega/libraries/glui/glui-2.35/www/image1.png",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/tools/physicalModeling/mesh2faust/vega/libraries/glui/glui-2.35/www/title.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/tools/faust2flash_v0.1/Step_2_FlashBuilder_project/src/faustalchemy.swc",
        "/tmp/vanessa/spack-stage/spack-stage-faust-2.27.1-y34vcf6n2r7lfmhjyeg5zok247ddsl2b/spack-src/tools/faust2flash_v0.1/Step_2_FlashBuilder_project/html-template/playerProductInstall.swf"
    ],
    "total_files": 3149
}