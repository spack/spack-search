{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/config_h.SH": "#!/bin/sh\n#\n# THIS IS A GENERATED FILE\n# DO NOT HAND-EDIT\n#\n# See Porting/config_h.pl\n\n: Set up for generating config_h.SH\ncase \"$CONFIG_SH\" in\n'') CONFIG_SH=config.sh;;\nesac\ncase \"$CONFIG_H\" in\n'') CONFIG_H=config.h;;\nesac\ncase $PERL_CONFIG_SH in\n'')\n\tif test -f $CONFIG_SH; then TOP=.;\n\telif test -f ../$CONFIG_SH; then TOP=..;\n\telif test -f ../../$CONFIG_SH; then TOP=../..;\n\telif test -f ../../../$CONFIG_SH; then TOP=../../..;\n\telif test -f ../../../../$CONFIG_SH; then TOP=../../../..;\n\telse\n\t\techo \"Can't find $CONFIG_SH.\"; exit 1\n\tfi\n\t. $TOP/$CONFIG_SH\n\t;;\nesac\ncase \"$0\" in\n*/*) cd `expr X$0 : 'X\\(.*\\)/'` ;;\nesac\ncase \"$CONFIG_H\" in\nalready-done) echo \"Not re-extracting config.h\" ;;\n*)\necho \"Extracting $CONFIG_H (with variable substitutions)\"\nsed <<!GROK!THIS! >$CONFIG_H -e 's!^#undef\\(.*/\\)\\*!/\\*#define\\1 \\*!' -e 's!^#un-def!#undef!'\n/* This file was produced by running the config_h.SH script, which\n * gets its values from $CONFIG_SH, which is generally produced by\n * running Configure.\n *\n * Feel free to modify any of this as the need arises.  Note, however,\n * that running config_h.SH again will wipe out any changes you've made.\n * For a more permanent change edit $CONFIG_SH and rerun config_h.SH.\n */\n\n/* Package name      : $package\n * Source directory  : $src\n * Configuration time: $cf_time\n * Configured by     : $cf_by\n * Target system     : $myuname\n */\n\n#ifndef _config_h_\n#define _config_h_\n\n/* LOC_SED:\n *\tThis symbol holds the complete pathname to the sed program.\n */\n#define LOC_SED \t\"$full_sed\"\t/**/\n\n/* HAS_ALARM:\n *\tThis symbol, if defined, indicates that the alarm routine is\n *\tavailable.\n */\n#$d_alarm HAS_ALARM\t\t/**/\n\n/* HAS_CBRT:\n *\tThis symbol, if defined, indicates that the cbrt() (cube root)\n *\tfunction is available.\n */\n#$d_cbrt HAS_CBRT\t/**/\n\n/* HAS_CHOWN:\n *\tThis symbol, if defined, indicates that the chown routine is\n *\tavailable.\n */\n#$d_chown HAS_CHOWN\t\t/**/\n\n/* HAS_CHROOT:\n *\tThis symbol, if defined, indicates that the chroot routine is\n *\tavailable.\n */\n#$d_chroot HAS_CHROOT\t\t/**/\n\n/* HAS_CHSIZE:\n *\tThis symbol, if defined, indicates that the chsize routine is available\n *\tto truncate files.  You might need a -lx to get this routine.\n */\n#$d_chsize\tHAS_CHSIZE\t\t/**/\n\n/* HAS_CRYPT:\n *\tThis symbol, if defined, indicates that the crypt routine is available\n *\tto encrypt passwords and the like.\n */\n#$d_crypt HAS_CRYPT\t\t/**/\n\n/* HAS_CTERMID:\n *\tThis symbol, if defined, indicates that the ctermid routine is\n *\tavailable to generate filename for terminal.\n */\n#$d_ctermid HAS_CTERMID\t\t/**/\n\n/* HAS_CUSERID:\n *\tThis symbol, if defined, indicates that the cuserid routine is\n *\tavailable to get character login names.\n */\n#$d_cuserid HAS_CUSERID\t\t/**/\n\n/* HAS_DIFFTIME:\n *\tThis symbol, if defined, indicates that the difftime routine is\n *\tavailable.\n */\n#$d_difftime HAS_DIFFTIME\t\t/**/\n\n/* HAS_DLERROR:\n *\tThis symbol, if defined, indicates that the dlerror routine is\n *\tavailable to return a string describing the last error that\n *\toccurred from a call to dlopen(), dlclose() or dlsym().\n */\n#$d_dlerror HAS_DLERROR\t/**/\n\n/* HAS_DUP2:\n *\tThis symbol, if defined, indicates that the dup2 routine is\n *\tavailable to duplicate file descriptors.\n */\n#$d_dup2 HAS_DUP2\t/**/\n\n/* HAS_FCHMOD:\n *\tThis symbol, if defined, indicates that the fchmod routine is available\n *\tto change mode of opened files.  If unavailable, use chmod().\n */\n#$d_fchmod HAS_FCHMOD\t\t/**/\n\n/* HAS_FCHOWN:\n *\tThis symbol, if defined, indicates that the fchown routine is available\n *\tto change ownership of opened files.  If unavailable, use chown().\n */\n#$d_fchown HAS_FCHOWN\t\t/**/\n\n/* HAS_FCNTL:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe fcntl() function exists.\n */\n#$d_fcntl HAS_FCNTL\t\t/**/\n\n/* HAS_FGETPOS:\n *\tThis symbol, if defined, indicates that the fgetpos routine is\n *\tavailable to get the file position indicator, similar to ftell().\n */\n#$d_fgetpos HAS_FGETPOS\t/**/\n\n/* HAS_FLOCK:\n *\tThis symbol, if defined, indicates that the flock routine is\n *\tavailable to do file locking.\n */\n#$d_flock HAS_FLOCK\t\t/**/\n\n/* HAS_FORK:\n *\tThis symbol, if defined, indicates that the fork routine is\n *\tavailable.\n */\n#$d_fork HAS_FORK\t\t/**/\n\n/* HAS_FSETPOS:\n *\tThis symbol, if defined, indicates that the fsetpos routine is\n *\tavailable to set the file position indicator, similar to fseek().\n */\n#$d_fsetpos HAS_FSETPOS\t/**/\n\n/* HAS_GETTIMEOFDAY:\n *\tThis symbol, if defined, indicates that the gettimeofday() system\n *\tcall is available for a sub-second accuracy clock. Usually, the file\n *\t<sys/resource.h> needs to be included (see I_SYS_RESOURCE).\n *\tThe type \"Timeval\" should be used to refer to \"struct timeval\".\n */\n#$d_gettimeod HAS_GETTIMEOFDAY\t/**/\n#ifdef HAS_GETTIMEOFDAY\n#define Timeval struct timeval\t/* Structure used by gettimeofday() */\n#endif\n\n/* HAS_GETGROUPS:\n *\tThis symbol, if defined, indicates that the getgroups() routine is\n *\tavailable to get the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n#$d_getgrps HAS_GETGROUPS\t\t/**/\n\n/* HAS_GETLOGIN:\n *\tThis symbol, if defined, indicates that the getlogin routine is\n *\tavailable to get the login name.\n */\n#$d_getlogin HAS_GETLOGIN\t\t/**/\n\n/* HAS_GETPGID:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe getpgid(pid) function is available to get the\n *\tprocess group id.\n */\n#$d_getpgid HAS_GETPGID\t\t/**/\n\n/* HAS_GETPGRP2:\n *\tThis symbol, if defined, indicates that the getpgrp2() (as in DG/UX)\n *\troutine is available to get the current process group.\n */\n#$d_getpgrp2 HAS_GETPGRP2\t\t/**/\n\n/* HAS_GETPPID:\n *\tThis symbol, if defined, indicates that the getppid routine is\n *\tavailable to get the parent process ID.\n */\n#$d_getppid HAS_GETPPID\t\t/**/\n\n/* HAS_GETPRIORITY:\n *\tThis symbol, if defined, indicates that the getpriority routine is\n *\tavailable to get a process's priority.\n */\n#$d_getprior HAS_GETPRIORITY\t\t/**/\n\n/* HAS_INET_ATON:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tinet_aton() function is available to parse IP address \"dotted-quad\"\n *\tstrings.\n */\n#$d_inetaton HAS_INET_ATON\t\t/**/\n\n/* HAS_KILLPG:\n *\tThis symbol, if defined, indicates that the killpg routine is available\n *\tto kill process groups.  If unavailable, you probably should use kill\n *\twith a negative process number.\n */\n#$d_killpg HAS_KILLPG\t/**/\n\n/* HAS_LINK:\n *\tThis symbol, if defined, indicates that the link routine is\n *\tavailable to create hard links.\n */\n#$d_link HAS_LINK\t/**/\n\n/* HAS_LOCALECONV:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable for numeric and monetary formatting conventions.\n */\n#$d_locconv HAS_LOCALECONV\t/**/\n\n/* HAS_LOCKF:\n *\tThis symbol, if defined, indicates that the lockf routine is\n *\tavailable to do file locking.\n */\n#$d_lockf HAS_LOCKF\t\t/**/\n\n/* HAS_LSTAT:\n *\tThis symbol, if defined, indicates that the lstat routine is\n *\tavailable to do file stats on symbolic links.\n */\n#$d_lstat HAS_LSTAT\t\t/**/\n\n/* HAS_MBLEN:\n *\tThis symbol, if defined, indicates that the mblen routine is available\n *\tto find the number of bytes in a multibye character.\n */\n#$d_mblen HAS_MBLEN\t\t/**/\n\n/* HAS_MBSTOWCS:\n *\tThis symbol, if defined, indicates that the mbstowcs routine is\n *\tavailable to convert a multibyte string into a wide character string.\n */\n#$d_mbstowcs\tHAS_MBSTOWCS\t\t/**/\n\n/* HAS_MBTOWC:\n *\tThis symbol, if defined, indicates that the mbtowc routine is available\n *\tto convert a multibyte to a wide character.\n */\n#$d_mbtowc HAS_MBTOWC\t\t/**/\n\n/* HAS_MKDIR:\n *\tThis symbol, if defined, indicates that the mkdir routine is available\n *\tto create directories.  Otherwise you should fork off a new process to\n *\texec /bin/mkdir.\n */\n#$d_mkdir HAS_MKDIR\t\t/**/\n\n/* HAS_MKFIFO:\n *\tThis symbol, if defined, indicates that the mkfifo routine is\n *\tavailable to create FIFOs. Otherwise, mknod should be able to\n *\tdo it for you. However, if mkfifo is there, mknod might require\n *\tsuper-user privileges which mkfifo will not.\n */\n#$d_mkfifo HAS_MKFIFO\t\t/**/\n\n/* HAS_MKTIME:\n *\tThis symbol, if defined, indicates that the mktime routine is\n *\tavailable.\n */\n#$d_mktime HAS_MKTIME\t\t/**/\n\n/* HAS_MSG:\n *\tThis symbol, if defined, indicates that the entire msg*(2) library is\n *\tsupported (IPC mechanism based on message queues).\n */\n#$d_msg HAS_MSG\t\t/**/\n\n/* HAS_MSYNC:\n *\tThis symbol, if defined, indicates that the msync system call is\n *\tavailable to synchronize a mapped file.\n */\n#$d_msync HAS_MSYNC\t\t/**/\n\n/* HAS_MUNMAP:\n *\tThis symbol, if defined, indicates that the munmap system call is\n *\tavailable to unmap a region, usually mapped by mmap().\n */\n#$d_munmap HAS_MUNMAP\t\t/**/\n\n/* HAS_NICE:\n *\tThis symbol, if defined, indicates that the nice routine is\n *\tavailable.\n */\n#$d_nice HAS_NICE\t\t/**/\n\n/* HAS_PATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given filename.\n */\n/* HAS_FPATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given open file descriptor.\n */\n#$d_pathconf HAS_PATHCONF\t\t/**/\n#$d_fpathconf HAS_FPATHCONF\t\t/**/\n\n/* HAS_PAUSE:\n *\tThis symbol, if defined, indicates that the pause routine is\n *\tavailable to suspend a process until a signal is received.\n */\n#$d_pause HAS_PAUSE\t\t/**/\n\n/* HAS_PIPE:\n *\tThis symbol, if defined, indicates that the pipe routine is\n *\tavailable to create an inter-process channel.\n */\n#$d_pipe HAS_PIPE\t\t/**/\n\n/* HAS_POLL:\n *\tThis symbol, if defined, indicates that the poll routine is\n *\tavailable to poll active file descriptors.  Please check I_POLL and\n *\tI_SYS_POLL to know which header should be included as well.\n */\n#$d_poll HAS_POLL\t\t/**/\n\n/* HAS_READDIR:\n *\tThis symbol, if defined, indicates that the readdir routine is\n *\tavailable to read directory entries. You may have to include\n *\t<dirent.h>. See I_DIRENT.\n */\n#$d_readdir HAS_READDIR\t\t/**/\n\n/* HAS_SEEKDIR:\n *\tThis symbol, if defined, indicates that the seekdir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#$d_seekdir HAS_SEEKDIR\t\t/**/\n\n/* HAS_TELLDIR:\n *\tThis symbol, if defined, indicates that the telldir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#$d_telldir HAS_TELLDIR\t\t/**/\n\n/* HAS_REWINDDIR:\n *\tThis symbol, if defined, indicates that the rewinddir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#$d_rewinddir HAS_REWINDDIR\t\t/**/\n\n/* HAS_READLINK:\n *\tThis symbol, if defined, indicates that the readlink routine is\n *\tavailable to read the value of a symbolic link.\n */\n#$d_readlink HAS_READLINK\t\t/**/\n\n/* HAS_REGCOMP:\n *\tThis symbol, if defined, indicates that the regcomp() routine is\n *\tavailable to do some regular patern matching (usually on POSIX.2\n *\tconforming systems).\n */\n#$d_regcomp HAS_REGCOMP\t\t/* POSIX.2 */\n\n/* HAS_RENAME:\n *\tThis symbol, if defined, indicates that the rename routine is available\n *\tto rename files.  Otherwise you should do the unlink(), link(), unlink()\n *\ttrick.\n */\n#$d_rename HAS_RENAME\t/**/\n\n/* HAS_RMDIR:\n *\tThis symbol, if defined, indicates that the rmdir routine is\n *\tavailable to remove directories. Otherwise you should fork off a\n *\tnew process to exec /bin/rmdir.\n */\n#$d_rmdir HAS_RMDIR\t\t/**/\n\n/* HAS_SELECT:\n *\tThis symbol, if defined, indicates that the select routine is\n *\tavailable to select active file descriptors. If the timeout field\n *\tis used, <sys/time.h> may need to be included.\n */\n#$d_select HAS_SELECT\t/**/\n\n/* HAS_SEM:\n *\tThis symbol, if defined, indicates that the entire sem*(2) library is\n *\tsupported.\n */\n#$d_sem HAS_SEM\t\t/**/\n\n/* HAS_SETEGID:\n *\tThis symbol, if defined, indicates that the setegid routine is available\n *\tto change the effective gid of the current program.\n */\n#$d_setegid HAS_SETEGID\t\t/**/\n\n/* HAS_SETEUID:\n *\tThis symbol, if defined, indicates that the seteuid routine is available\n *\tto change the effective uid of the current program.\n */\n#$d_seteuid HAS_SETEUID\t\t/**/\n\n/* HAS_SETGROUPS:\n *\tThis symbol, if defined, indicates that the setgroups() routine is\n *\tavailable to set the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n#$d_setgrps HAS_SETGROUPS\t\t/**/\n\n/* HAS_SETLINEBUF:\n *\tThis symbol, if defined, indicates that the setlinebuf routine is\n *\tavailable to change stderr or stdout from block-buffered or unbuffered\n *\tto a line-buffered mode.\n */\n#$d_setlinebuf HAS_SETLINEBUF\t\t/**/\n\n/* HAS_SETPGID:\n *\tThis symbol, if defined, indicates that the setpgid(pid, gpid)\n *\troutine is available to set process group ID.\n */\n#$d_setpgid HAS_SETPGID\t/**/\n\n/* HAS_SETPGRP2:\n *\tThis symbol, if defined, indicates that the setpgrp2() (as in DG/UX)\n *\troutine is available to set the current process group.\n */\n#$d_setpgrp2 HAS_SETPGRP2\t\t/**/\n\n/* HAS_SETPRIORITY:\n *\tThis symbol, if defined, indicates that the setpriority routine is\n *\tavailable to set a process's priority.\n */\n#$d_setprior HAS_SETPRIORITY\t\t/**/\n\n/* HAS_SETREGID:\n *\tThis symbol, if defined, indicates that the setregid routine is\n *\tavailable to change the real and effective gid of the current\n *\tprocess.\n */\n/* HAS_SETRESGID:\n *\tThis symbol, if defined, indicates that the setresgid routine is\n *\tavailable to change the real, effective and saved gid of the current\n *\tprocess.\n */\n#$d_setregid HAS_SETREGID\t\t/**/\n#$d_setresgid HAS_SETRESGID\t\t/**/\n\n/* HAS_SETREUID:\n *\tThis symbol, if defined, indicates that the setreuid routine is\n *\tavailable to change the real and effective uid of the current\n *\tprocess.\n */\n/* HAS_SETRESUID:\n *\tThis symbol, if defined, indicates that the setresuid routine is\n *\tavailable to change the real, effective and saved uid of the current\n *\tprocess.\n */\n#$d_setreuid HAS_SETREUID\t\t/**/\n#$d_setresuid HAS_SETRESUID\t\t/**/\n\n/* HAS_SETRGID:\n *\tThis symbol, if defined, indicates that the setrgid routine is available\n *\tto change the real gid of the current program.\n */\n#$d_setrgid HAS_SETRGID\t\t/**/\n\n/* HAS_SETRUID:\n *\tThis symbol, if defined, indicates that the setruid routine is available\n *\tto change the real uid of the current program.\n */\n#$d_setruid HAS_SETRUID\t\t/**/\n\n/* HAS_SETSID:\n *\tThis symbol, if defined, indicates that the setsid routine is\n *\tavailable to set the process group ID.\n */\n#$d_setsid HAS_SETSID\t/**/\n\n/* HAS_STAT:\n *\tThis symbol, if defined, indicates that the stat routine is\n *\tavailable to get file status.\n */\n#$d_stat HAS_STAT\t/**/\n\n/* HAS_STRCOLL:\n *\tThis symbol, if defined, indicates that the strcoll routine is\n *\tavailable to compare strings using collating information.\n */\n#$d_strcoll HAS_STRCOLL\t/**/\n\n/* HAS_STRTOD:\n *\tThis symbol, if defined, indicates that the strtod routine is\n *\tavailable to provide better numeric string conversion than atof().\n */\n#$d_strtod HAS_STRTOD\t/**/\n\n/* HAS_STRTOL:\n *\tThis symbol, if defined, indicates that the strtol routine is available\n *\tto provide better numeric string conversion than atoi() and friends.\n */\n#$d_strtol HAS_STRTOL\t/**/\n\n/* HAS_STRXFRM:\n *\tThis symbol, if defined, indicates that the strxfrm() routine is\n *\tavailable to transform strings.\n */\n#$d_strxfrm HAS_STRXFRM\t/**/\n\n/* HAS_SYMLINK:\n *\tThis symbol, if defined, indicates that the symlink routine is available\n *\tto create symbolic links.\n */\n#$d_symlink HAS_SYMLINK\t/**/\n\n/* HAS_SYSCALL:\n *\tThis symbol, if defined, indicates that the syscall routine is\n *\tavailable to call arbitrary system calls. If undefined, that's tough.\n */\n#$d_syscall HAS_SYSCALL\t/**/\n\n/* HAS_SYSCONF:\n *\tThis symbol, if defined, indicates that sysconf() is available\n *\tto determine system related limits and options.\n */\n#$d_sysconf HAS_SYSCONF\t/**/\n\n/* HAS_SYSTEM:\n *\tThis symbol, if defined, indicates that the system routine is\n *\tavailable to issue a shell command.\n */\n#$d_system HAS_SYSTEM\t/**/\n\n/* HAS_TCGETPGRP:\n *\tThis symbol, if defined, indicates that the tcgetpgrp routine is\n *\tavailable to get foreground process group ID.\n */\n#$d_tcgetpgrp HAS_TCGETPGRP\t\t/**/\n\n/* HAS_TCSETPGRP:\n *\tThis symbol, if defined, indicates that the tcsetpgrp routine is\n *\tavailable to set foreground process group ID.\n */\n#$d_tcsetpgrp HAS_TCSETPGRP\t\t/**/\n\n/* HAS_TRUNCATE:\n *\tThis symbol, if defined, indicates that the truncate routine is\n *\tavailable to truncate files.\n */\n#$d_truncate HAS_TRUNCATE\t/**/\n\n/* HAS_TZNAME:\n *\tThis symbol, if defined, indicates that the tzname[] array is\n *\tavailable to access timezone names.\n */\n#$d_tzname HAS_TZNAME\t\t/**/\n\n/* HAS_UMASK:\n *\tThis symbol, if defined, indicates that the umask routine is\n *\tavailable to set and get the value of the file creation mask.\n */\n#$d_umask HAS_UMASK\t\t/**/\n\n/* HAS_USLEEP:\n *\tThis symbol, if defined, indicates that the usleep routine is\n *\tavailable to let the process sleep on a sub-second accuracy.\n */\n#$d_usleep HAS_USLEEP\t\t/**/\n\n/* HAS_WAIT4:\n *\tThis symbol, if defined, indicates that wait4() exists.\n */\n#$d_wait4 HAS_WAIT4\t/**/\n\n/* HAS_WAITPID:\n *\tThis symbol, if defined, indicates that the waitpid routine is\n *\tavailable to wait for child process.\n */\n#$d_waitpid HAS_WAITPID\t/**/\n\n/* HAS_WCSTOMBS:\n *\tThis symbol, if defined, indicates that the wcstombs routine is\n *\tavailable to convert wide character strings to multibyte strings.\n */\n#$d_wcstombs HAS_WCSTOMBS\t/**/\n\n/* HAS_WCTOMB:\n *\tThis symbol, if defined, indicates that the wctomb routine is available\n *\tto convert a wide character to a multibyte.\n */\n#$d_wctomb HAS_WCTOMB\t\t/**/\n\n/* Groups_t:\n *\tThis symbol holds the type used for the second argument to\n *\tgetgroups() and setgroups().  Usually, this is the same as\n *\tgidtype (gid_t) , but sometimes it isn't.\n *\tIt can be int, ushort, gid_t, etc...\n *\tIt may be necessary to include <sys/types.h> to get any\n *\ttypedef'ed information.  This is only required if you have\n *\tgetgroups() or setgroups()..\n */\n#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)\n#define Groups_t $groupstype\t/* Type for 2nd arg to [sg]etgroups() */\n#endif\n\n/* I_ARPA_INET:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <arpa/inet.h> to get inet_addr and friends declarations.\n */\n#$i_arpainet\tI_ARPA_INET\t\t/**/\n\n/* I_DBM:\n *\tThis symbol, if defined, indicates that <dbm.h> exists and should\n *\tbe included.\n */\n/* I_RPCSVC_DBM:\n *\tThis symbol, if defined, indicates that <rpcsvc/dbm.h> exists and\n *\tshould be included.\n */\n#$i_dbm I_DBM\t/**/\n#$i_rpcsvcdbm I_RPCSVC_DBM\t/**/\n\n/* I_DLFCN:\n *\tThis symbol, if defined, indicates that <dlfcn.h> exists and should\n *\tbe included.\n */\n#$i_dlfcn I_DLFCN\t\t/**/\n\n/* I_FCNTL:\n *\tThis manifest constant tells the C program to include <fcntl.h>.\n */\n#$i_fcntl I_FCNTL\t/**/\n\n/* I_GDBM:\n *\tThis symbol, if defined, indicates that <gdbm.h> exists and should\n *\tbe included.\n */\n#$i_gdbm I_GDBM\t/**/\n\n/* I_LOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <locale.h>.\n */\n#$i_locale\tI_LOCALE\t\t/**/\n\n/* I_NETINET_IN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/in.h>. Otherwise, you may try <sys/in.h>.\n */\n#$i_niin I_NETINET_IN\t/**/\n\n/* I_SYS_DIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/dir.h>.\n */\n#$i_sysdir I_SYS_DIR\t\t/**/\n\n/* I_SYS_FILE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/file.h> to get definition of R_OK and friends.\n */\n#$i_sysfile I_SYS_FILE\t\t/**/\n\n/* I_SYS_IOCTL:\n *\tThis symbol, if defined, indicates that <sys/ioctl.h> exists and should\n *\tbe included. Otherwise, include <sgtty.h> or <termio.h>.\n */\n/* I_SYS_SOCKIO:\n *\tThis symbol, if defined, indicates the <sys/sockio.h> should be included\n *\tto get socket ioctl options, like SIOCATMARK.\n */\n#$i_sysioctl\tI_SYS_IOCTL\t\t/**/\n#$i_syssockio I_SYS_SOCKIO\t/**/\n\n/* I_SYS_NDIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/ndir.h>.\n */\n#$i_sysndir I_SYS_NDIR\t/**/\n\n/* I_SYS_PARAM:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/param.h>.\n */\n#$i_sysparam I_SYS_PARAM\t\t/**/\n\n/* I_SYS_POLL:\n *\tThis symbol, if defined, indicates that the program may include\n *\t<sys/poll.h>.  When I_POLL is also defined, it's probably safest\n *\tto only include <poll.h>.\n */\n#$i_syspoll I_SYS_POLL\t/**/\n\n/* I_SYS_RESOURCE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/resource.h>.\n */\n#$i_sysresrc I_SYS_RESOURCE\t\t/**/\n\n/* I_SYS_SELECT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/select.h> in order to get definition of struct timeval.\n */\n#$i_sysselct I_SYS_SELECT\t/**/\n\n/* I_SYS_STAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/stat.h>.\n */\n#$i_sysstat\tI_SYS_STAT\t\t/**/\n\n/* I_SYS_TIMES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/times.h>.\n */\n#$i_systimes\tI_SYS_TIMES\t\t/**/\n\n/* I_SYS_TYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/types.h>.\n */\n#$i_systypes\tI_SYS_TYPES\t\t/**/\n\n/* I_SYS_UN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/un.h> to get UNIX domain socket definitions.\n */\n#$i_sysun I_SYS_UN\t\t/**/\n\n/* I_SYS_WAIT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/wait.h>.\n */\n#$i_syswait I_SYS_WAIT\t/**/\n\n/* I_UNISTD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <unistd.h>.\n */\n#$i_unistd I_UNISTD\t\t/**/\n\n/* I_UTIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <utime.h>.\n */\n#$i_utime I_UTIME\t\t/**/\n\n/* I_VFORK:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude vfork.h.\n */\n#$i_vfork I_VFORK\t/**/\n\n/* STDCHAR:\n *\tThis symbol is defined to be the type of char used in stdio.h.\n *\tIt has the values \"unsigned char\" or \"char\".\n */\n#define STDCHAR $stdchar\t/**/\n\n/* INTSIZE:\n *\tThis symbol contains the value of sizeof(int) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* LONGSIZE:\n *\tThis symbol contains the value of sizeof(long) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* SHORTSIZE:\n *\tThis symbol contains the value of sizeof(short) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n#define INTSIZE $intsize\t\t/**/\n#define LONGSIZE $longsize\t\t/**/\n#define SHORTSIZE $shortsize\t\t/**/\n\n/* MULTIARCH:\n *\tThis symbol, if defined, signifies that the build\n *\tprocess will produce some binary files that are going to be\n *\tused in a cross-platform environment.  This is the case for\n *\texample with the NeXT \"fat\" binaries that contain executables\n *\tfor several CPUs.\n */\n#$multiarch MULTIARCH\t\t/**/\n\n/* HAS_QUAD:\n *\tThis symbol, if defined, tells that there's a 64-bit integer type,\n *\tQuad_t, and its unsigned counterpart, Uquad_t. QUADKIND will be one\n *\tof QUAD_IS_INT, QUAD_IS_LONG, QUAD_IS_LONG_LONG, QUAD_IS_INT64_T,\n *\tor QUAD_IS___INT64.\n */\n#$d_quad HAS_QUAD\t/**/\n#ifdef HAS_QUAD\n#   define Quad_t $quadtype\t/**/\n#   define Uquad_t $uquadtype\t/**/\n#   define QUADKIND $quadkind\t/**/\n#   define QUAD_IS_INT\t1\n#   define QUAD_IS_LONG\t2\n#   define QUAD_IS_LONG_LONG\t3\n#   define QUAD_IS_INT64_T\t4\n#   define QUAD_IS___INT64\t5\n#endif\n\n/* HAS_ACCESSX:\n *\tThis symbol, if defined, indicates that the accessx routine is\n *\tavailable to do extended access checks.\n */\n#$d_accessx HAS_ACCESSX\t\t/**/\n\n/* HAS_EACCESS:\n *\tThis symbol, if defined, indicates that the eaccess routine is\n *\tavailable to do extended access checks.\n */\n#$d_eaccess HAS_EACCESS\t\t/**/\n\n/* I_SYS_ACCESS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/access.h>.\n */\n#$i_sysaccess   I_SYS_ACCESS                /**/\n\n/* I_SYS_SECURITY:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/security.h>.\n */\n#$i_syssecrt   I_SYS_SECURITY\t/**/\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble, or a long double when applicable. Usual values are 2,\n *\t4 and 8. The default is eight, for safety.  For cross-compiling\n *\tor multiarch support, Configure will set a minimum of 8.\n */\n#define MEM_ALIGNBYTES $alignbytes\n\n/* BYTEORDER:\n *\tThis symbol holds the hexadecimal constant defined in byteorder,\n *\tin a UV, i.e. 0x1234 or 0x4321 or 0x12345678, etc...\n *\tIf the compiler supports cross-compiling or multiple-architecture\n *\tbinaries, use compiler-defined macros to\n *\tdetermine the byte order.\n */\n#if defined(MULTIARCH)\n#  ifdef __LITTLE_ENDIAN__\n#    if LONGSIZE == 4\n#      define BYTEORDER 0x1234\n#    else\n#      if LONGSIZE == 8\n#        define BYTEORDER 0x12345678\n#      endif\n#    endif\n#  else\n#    ifdef __BIG_ENDIAN__\n#      if LONGSIZE == 4\n#        define BYTEORDER 0x4321\n#      else\n#        if LONGSIZE == 8\n#          define BYTEORDER 0x87654321\n#        endif\n#      endif\n#    endif\n#  endif\n#else\n#define BYTEORDER 0x$byteorder\t/* large digits for MSB */\n#endif\n\n/* CHARBITS:\n *\tThis symbol contains the size of a char, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define CHARBITS $charbits\t\t/**/\n\n/* CASTI32:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tor large floating point numbers to 32-bit ints.\n */\n#$d_casti32\tCASTI32\t\t/**/\n\n/* CASTNEGFLOAT:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tnumbers to unsigned longs, ints and shorts.\n */\n/* CASTFLAGS:\n *\tThis symbol contains flags that say what difficulties the compiler\n *\thas casting odd floating values to unsigned long:\n *\t\t0 = ok\n *\t\t1 = couldn't cast < 0\n *\t\t2 = couldn't cast >= 0x80000000\n *\t\t4 = couldn't cast in argument expression list\n */\n#$d_castneg\tCASTNEGFLOAT\t\t/**/\n#define CASTFLAGS $castflags\t\t/**/\n\n/* VOID_CLOSEDIR:\n *\tThis symbol, if defined, indicates that the closedir() routine\n *\tdoes not return a value.\n */\n#$d_void_closedir VOID_CLOSEDIR\t\t/**/\n\n/* HAS_FD_SET:\n *\tThis symbol, when defined, indicates presence of the fd_set typedef\n *\tin <sys/types.h>\n */\n#$d_fd_set HAS_FD_SET\t/**/\n\n/* Gconvert:\n *\tThis preprocessor macro is defined to convert a floating point\n *\tnumber to a string without a trailing decimal point.  This\n *\temulates the behavior of sprintf(\"%g\"), but is sometimes much more\n *\tefficient.  If gconvert() is not available, but gcvt() drops the\n *\ttrailing decimal point, then gcvt() is used.  If all else fails,\n *\ta macro using sprintf(\"%g\") is used. Arguments for the Gconvert\n *\tmacro are: value, number of digits, whether trailing zeros should\n *\tbe retained, and the output buffer.\n *\tThe usual values are:\n *\t\td_Gconvert='gconvert((x),(n),(t),(b))'\n *\t\td_Gconvert='gcvt((x),(n),(b))'\n *\t\td_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\n *\tThe last two assume trailing zeros should not be kept.\n */\n#define Gconvert(x,n,t,b) $d_Gconvert\n\n/* HAS_GETPAGESIZE:\n *\tThis symbol, if defined, indicates that the getpagesize system call\n *\tis available to get system page size, which is the granularity of\n *\tmany memory management calls.\n */\n#$d_getpagsz HAS_GETPAGESIZE\t\t/**/\n\n/* HAS_GNULIBC:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe GNU C library is being used.  A better check is to use\n *\tthe __GLIBC__ and __GLIBC_MINOR__ symbols supplied with glibc.\n */\n#$d_gnulibc HAS_GNULIBC\t/**/\n#if defined(HAS_GNULIBC) && !defined(_GNU_SOURCE)\n#   define _GNU_SOURCE\n#endif\n\n/* HAS_ISASCII:\n *\tThis manifest constant lets the C program know that isascii\n *\tis available.\n */\n#$d_isascii HAS_ISASCII\t\t/**/\n\n/* HAS_LCHOWN:\n *\tThis symbol, if defined, indicates that the lchown routine is\n *\tavailable to operate on a symbolic link (instead of following the\n *\tlink).\n */\n#$d_lchown HAS_LCHOWN\t\t/**/\n\n/* HAS_OPEN3:\n *\tThis manifest constant lets the C program know that the three\n *\targument form of open(2) is available.\n */\n#$d_open3 HAS_OPEN3\t\t/**/\n\n/* HAS_SIGACTION:\n *\tThis symbol, if defined, indicates that Vr4's sigaction() routine\n *\tis available.\n */\n#$d_sigaction HAS_SIGACTION\t/**/\n\n/* HAS_SIGINFO_SI_ERRNO:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_errno member\n */\n/* HAS_SIGINFO_SI_PID:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_pid member\n */\n/* HAS_SIGINFO_SI_UID:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_uid member\n */\n/* HAS_SIGINFO_SI_ADDR:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_addr member\n */\n/* HAS_SIGINFO_SI_STATUS:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_status member\n */\n/* HAS_SIGINFO_SI_BAND:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_band member\n */\n/* HAS_SIGINFO_SI_VALUE:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_value member\n */\n#$d_siginfo_si_errno\tHAS_SIGINFO_SI_ERRNO\t/**/\n#$d_siginfo_si_pid\tHAS_SIGINFO_SI_PID\t/**/\n#$d_siginfo_si_uid\tHAS_SIGINFO_SI_UID\t/**/\n#$d_siginfo_si_addr\tHAS_SIGINFO_SI_ADDR\t/**/\n#$d_siginfo_si_status\tHAS_SIGINFO_SI_STATUS\t/**/\n#$d_siginfo_si_band\tHAS_SIGINFO_SI_BAND\t/**/\n#$d_siginfo_si_value\tHAS_SIGINFO_SI_VALUE\t/**/\n\n/* HAS_SIGSETJMP:\n *\tThis variable indicates to the C program that the sigsetjmp()\n *\troutine is available to save the calling process's registers\n *\tand stack environment for later use by siglongjmp(), and\n *\tto optionally save the process's signal mask.  See\n *\tSigjmp_buf, Sigsetjmp, and Siglongjmp.\n */\n/* Sigjmp_buf:\n *\tThis is the buffer type to be used with Sigsetjmp and Siglongjmp.\n */\n/* Sigsetjmp:\n *\tThis macro is used in the same way as sigsetjmp(), but will invoke\n *\ttraditional setjmp() if sigsetjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/* Siglongjmp:\n *\tThis macro is used in the same way as siglongjmp(), but will invoke\n *\ttraditional longjmp() if siglongjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n#$d_sigsetjmp HAS_SIGSETJMP\t/**/\n#ifdef HAS_SIGSETJMP\n#define Sigjmp_buf sigjmp_buf\n#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))\n#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))\n#else\n#define Sigjmp_buf jmp_buf\n#define Sigsetjmp(buf,save_mask) setjmp((buf))\n#define Siglongjmp(buf,retval) longjmp((buf),(retval))\n#endif\n\n/* HAS_STATIC_INLINE:\n *\tThis symbol, if defined, indicates that the C compiler supports\n *\tC99-style static inline.  That is, the function can't be called\n *\tfrom another translation unit.\n */\n/* PERL_STATIC_INLINE:\n *\tThis symbol gives the best-guess incantation to use for static\n *\tinline functions.  If HAS_STATIC_INLINE is defined, this will\n *\tgive C99-style inline.  If HAS_STATIC_INLINE is not defined,\n *\tthis will give a plain 'static'.  It will always be defined\n *\tto something that gives static linkage.\n *\tPossibilities include\n *\t\tstatic inline       (c99)\n *\t\tstatic __inline__   (gcc -ansi)\n *\t\tstatic __inline     (MSVC)\n *\t\tstatic _inline      (older MSVC)\n *\t\tstatic              (c89 compilers)\n */\n#$d_static_inline HAS_STATIC_INLINE\t\t\t\t/**/\n#define PERL_STATIC_INLINE $perl_static_inline\t/**/\n\n/* USE_STDIO_PTR:\n *\tThis symbol is defined if the _ptr and _cnt fields (or similar)\n *\tof the stdio FILE structure can be used to access the stdio buffer\n *\tfor a file handle.  If this is defined, then the FILE_ptr(fp)\n *\tand FILE_cnt(fp) macros will also be defined and should be used\n *\tto access these fields.\n */\n/* FILE_ptr:\n *\tThis macro is used to access the _ptr field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_PTR_LVALUE:\n *\tThis symbol is defined if the FILE_ptr macro can be used as an\n *\tlvalue.\n */\n/* FILE_cnt:\n *\tThis macro is used to access the _cnt field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_CNT_LVALUE:\n *\tThis symbol is defined if the FILE_cnt macro can be used as an\n *\tlvalue.\n */\n/* STDIO_PTR_LVAL_SETS_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n has the side effect of decreasing the\n *\tvalue of File_cnt(fp) by n.\n */\n/* STDIO_PTR_LVAL_NOCHANGE_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n leaves File_cnt(fp) unchanged.\n */\n#$d_stdstdio USE_STDIO_PTR\t/**/\n#ifdef USE_STDIO_PTR\n#define FILE_ptr(fp)\t$stdio_ptr\n#$d_stdio_ptr_lval STDIO_PTR_LVALUE\t\t/**/\n#define FILE_cnt(fp)\t$stdio_cnt\n#$d_stdio_cnt_lval STDIO_CNT_LVALUE\t\t/**/\n#$d_stdio_ptr_lval_sets_cnt STDIO_PTR_LVAL_SETS_CNT\t/**/\n#$d_stdio_ptr_lval_nochange_cnt STDIO_PTR_LVAL_NOCHANGE_CNT\t/**/\n#endif\n\n/* USE_STDIO_BASE:\n *\tThis symbol is defined if the _base field (or similar) of the\n *\tstdio FILE structure can be used to access the stdio buffer for\n *\ta file handle.  If this is defined, then the FILE_base(fp) macro\n *\twill also be defined and should be used to access this field.\n *\tAlso, the FILE_bufsiz(fp) macro will be defined and should be used\n *\tto determine the number of bytes in the buffer.  USE_STDIO_BASE\n *\twill never be defined unless USE_STDIO_PTR is.\n */\n/* FILE_base:\n *\tThis macro is used to access the _base field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_BASE is defined.\n */\n/* FILE_bufsiz:\n *\tThis macro is used to determine the number of bytes in the I/O\n *\tbuffer pointed to by _base field (or equivalent) of the FILE\n *\tstructure pointed to its argument. This macro will always be defined\n *\tif USE_STDIO_BASE is defined.\n */\n#$d_stdiobase USE_STDIO_BASE\t/**/\n#ifdef USE_STDIO_BASE\n#define FILE_base(fp)\t$stdio_base\n#define FILE_bufsiz(fp)\t$stdio_bufsiz\n#endif\n\n/* DOUBLESIZE:\n *\tThis symbol contains the size of a double, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define DOUBLESIZE $doublesize\t\t/**/\n\n/* I_TIME:\n *\tThis symbol is always defined, and indicates to the C program that\n *\tit should include <time.h>.\n */\n/* I_SYS_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h>.\n */\n/* I_SYS_TIME_KERNEL:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h> with KERNEL defined.\n */\n/* HAS_TM_TM_ZONE:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_zone field.\n */\n/* HAS_TM_TM_GMTOFF:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_gmtoff field.\n */\n#$i_time I_TIME\t\t/**/\n#$i_systime I_SYS_TIME\t\t/**/\n#$i_systimek I_SYS_TIME_KERNEL\t\t/**/\n#$d_tm_tm_zone HAS_TM_TM_ZONE\t\t/**/\n#$d_tm_tm_gmtoff HAS_TM_TM_GMTOFF\t\t/**/\n\n/* VAL_O_NONBLOCK:\n *\tThis symbol is to be used during open() or fcntl(F_SETFL) to turn on\n *\tnon-blocking I/O for the file descriptor. Note that there is no way\n *\tback, i.e. you cannot turn it blocking again this way. If you wish to\n *\talternatively switch between blocking and non-blocking, use the\n *\tioctl(FIOSNBIO) call instead, but that is not supported by all devices.\n */\n/* VAL_EAGAIN:\n *\tThis symbol holds the errno error code set by read() when no data was\n *\tpresent on the non-blocking file descriptor.\n */\n/* RD_NODATA:\n *\tThis symbol holds the return code from read() when no data is present\n *\ton the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is\n *\tnot defined, then you can't distinguish between no data and EOF by\n *\tissuing a read(). You'll have to find another way to tell for sure!\n */\n/* EOF_NONBLOCK:\n *\tThis symbol, if defined, indicates to the C program that a read() on\n *\ta non-blocking file descriptor will return 0 on EOF, and not the value\n *\theld in RD_NODATA (-1 usually, in that case!).\n */\n#define VAL_O_NONBLOCK $o_nonblock\n#define VAL_EAGAIN $eagain\n#define RD_NODATA $rd_nodata\n#$d_eofnblk EOF_NONBLOCK\n\n/* PTRSIZE:\n *\tThis symbol contains the size of a pointer, so that the C preprocessor\n *\tcan make decisions based on it.  It will be sizeof(void *) if\n *\tthe compiler supports (void *); otherwise it will be\n *\tsizeof(char *).\n */\n#define PTRSIZE $ptrsize\t\t/**/\n\n/* Drand01:\n *\tThis macro is to be used to generate uniformly distributed\n *\trandom numbers over the range [0., 1.[.  You may have to supply\n *\tan 'extern double drand48();' in your program since SunOS 4.1.3\n *\tdoesn't provide you with anything relevant in its headers.\n *\tSee HAS_DRAND48_PROTO.\n */\n/* Rand_seed_t:\n *\tThis symbol defines the type of the argument of the\n *\trandom seed function.\n */\n/* seedDrand01:\n *\tThis symbol defines the macro to be used in seeding the\n *\trandom number generator (see Drand01).\n */\n/* RANDBITS:\n *\tThis symbol indicates how many bits are produced by the\n *\tfunction used to generate normalized random numbers.\n *\tValues include 15, 16, 31, and 48.\n */\n#define Drand01()\t\t$drand01\t\t/**/\n#define Rand_seed_t\t\t$randseedtype\t\t/**/\n#define seedDrand01(x)\t$seedfunc((Rand_seed_t)x)\t/**/\n#define RANDBITS\t\t$randbits\t\t/**/\n\n/* SSize_t:\n *\tThis symbol holds the type used by functions that return\n *\ta count of bytes or an error condition.  It must be a signed type.\n *\tIt is usually ssize_t, but may be long or int, etc.\n *\tIt may be necessary to include <sys/types.h> or <unistd.h>\n *\tto get any typedef'ed information.\n *\tWe will pick a type such that sizeof(SSize_t) == sizeof(Size_t).\n */\n#define SSize_t $ssizetype\t/* signed count of bytes */\n\n/* EBCDIC:\n *\tThis symbol, if defined, indicates that this system uses\n *\tEBCDIC encoding.\n */\n#$ebcdic\tEBCDIC\t\t/**/\n\n/* ARCHLIB:\n *\tThis variable, if defined, holds the name of the directory in\n *\twhich the user wants to put architecture-dependent public\n *\tlibrary files for $package.  It is most often a local directory\n *\tsuch as /usr/local/lib.  Programs using this variable must be\n *\tprepared to deal with filename expansion.  If ARCHLIB is the\n *\tsame as PRIVLIB, it is not defined, since presumably the\n *\tprogram already searches PRIVLIB.\n */\n/* ARCHLIB_EXP:\n *\tThis symbol contains the ~name expanded version of ARCHLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#$d_archlib ARCHLIB \"$archlib\"\t\t/**/\n#$d_archlib ARCHLIB_EXP \"$archlibexp\"\t\t/**/\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n/* PERL_RELOCATABLE_INC:\n *\tThis symbol, if defined, indicates that we'd like to relocate entries\n *\tin @INC at run time based on the location of the perl binary.\n */\n#define BIN \"$bin\"\t/**/\n#define BIN_EXP \"$binexp\"\t/**/\n#define PERL_RELOCATABLE_INC \"$userelocatableinc\"\t\t/**/\n\n/* PERL_INC_VERSION_LIST:\n *\tThis variable specifies the list of subdirectories in over\n *\twhich perl.c:incpush() and lib/lib.pm will automatically\n *\tsearch when adding directories to @INC, in a format suitable\n *\tfor a C initialization string.  See the inc_version_list entry\n *\tin Porting/Glossary for more details.\n */\n#$d_inc_version_list PERL_INC_VERSION_LIST $inc_version_list_init\t\t/**/\n\n/* INSTALL_USR_BIN_PERL:\n *\tThis symbol, if defined, indicates that Perl is to be installed\n *\talso as /usr/bin/perl.\n */\n#$installusrbinperl INSTALL_USR_BIN_PERL\t/**/\n\n/* PERL_OTHERLIBDIRS:\n *\tThis variable contains a colon-separated set of paths for the perl\n *\tbinary to search for additional library files or modules.\n *\tThese directories will be tacked to the end of @INC.\n *\tPerl will automatically search below each path for version-\n *\tand architecture-specific directories.  See PERL_INC_VERSION_LIST\n *\tfor more details.\n */\n#$d_perl_otherlibdirs PERL_OTHERLIBDIRS \"$otherlibdirs\"\t\t/**/\n\n/* PRIVLIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n */\n/* PRIVLIB_EXP:\n *\tThis symbol contains the ~name expanded version of PRIVLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define PRIVLIB \"$privlib\"\t\t/**/\n#define PRIVLIB_EXP \"$privlibexp\"\t\t/**/\n\n/* SITEARCH:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-dependent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITEARCH_EXP:\n *\tThis symbol contains the ~name expanded version of SITEARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#$d_sitearch SITEARCH \"$sitearch\"\t\t/**/\n#$d_sitearch SITEARCH_EXP \"$sitearchexp\"\t\t/**/\n\n/* SITELIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-independent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITELIB_EXP:\n *\tThis symbol contains the ~name expanded version of SITELIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* SITELIB_STEM:\n *\tThis define is SITELIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#define SITELIB \"$sitelib\"\t\t/**/\n#define SITELIB_EXP \"$sitelibexp\"\t\t/**/\n#define SITELIB_STEM \"$sitelib_stem\"\t\t/**/\n\n/* PERL_VENDORARCH:\n *\tIf defined, this symbol contains the name of a private library.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.\n *\tIt may have a ~ on the front.\n *\tThe standard distribution will put nothing in this directory.\n *\tVendors who distribute perl may wish to place their own\n *\tarchitecture-dependent modules and extensions in this directory with\n *\t\tMakeMaker Makefile.PL INSTALLDIRS=vendor\n *\tor equivalent.  See INSTALL for details.\n */\n/* PERL_VENDORARCH_EXP:\n *\tThis symbol contains the ~name expanded version of PERL_VENDORARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#$d_vendorarch PERL_VENDORARCH \"$vendorarch\"\t\t/**/\n#$d_vendorarch PERL_VENDORARCH_EXP \"$vendorarchexp\"\t\t/**/\n\n/* PERL_VENDORLIB_EXP:\n *\tThis symbol contains the ~name expanded version of VENDORLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* PERL_VENDORLIB_STEM:\n *\tThis define is PERL_VENDORLIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#$d_vendorlib PERL_VENDORLIB_EXP \"$vendorlibexp\"\t\t/**/\n#$d_vendorlib PERL_VENDORLIB_STEM \"$vendorlib_stem\"\t\t/**/\n\n/* OSNAME:\n *\tThis symbol contains the name of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n/* OSVERS:\n *\tThis symbol contains the version of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n#define OSNAME \"$osname\"\t\t/**/\n#define OSVERS \"$osvers\"\t\t/**/\n\n/* CAT2:\n *\tThis macro concatenates 2 tokens together.\n */\n/* STRINGIFY:\n *\tThis macro surrounds its token with double quotes.\n */\n#if $cpp_stuff == 1\n#define CAT2(a,b)\ta/**/b\n#define STRINGIFY(a)\t\"a\"\n#endif\n#if $cpp_stuff == 42\n#define PeRl_CaTiFy(a, b)\ta ## b\n#define PeRl_StGiFy(a)\t#a\n#define CAT2(a,b)\tPeRl_CaTiFy(a,b)\n#define StGiFy(a)\tPeRl_StGiFy(a)\n#define STRINGIFY(a)\tPeRl_StGiFy(a)\n#endif\n#if $cpp_stuff != 1 && $cpp_stuff != 42\n#include \"Bletch: How does this C preprocessor concatenate tokens?\"\n#endif\n\n/* CPPSTDIN:\n *\tThis symbol contains the first part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  Typical value of \"cc -E\" or \"/lib/cpp\", but it can also\n *\tcall a wrapper. See CPPRUN.\n */\n/* CPPMINUS:\n *\tThis symbol contains the second part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  This symbol will have the value \"-\" if CPPSTDIN needs a minus\n *\tto specify standard input, otherwise the value is \"\".\n */\n/* CPPRUN:\n *\tThis symbol contains the string which will invoke a C preprocessor on\n *\tthe standard input and produce to standard output. It needs to end\n *\twith CPPLAST, after all other preprocessor flags have been specified.\n *\tThe main difference with CPPSTDIN is that this program will never be a\n *\tpointer to a shell wrapper, i.e. it will be empty if no preprocessor is\n *\tavailable directly to the user. Note that it may well be different from\n *\tthe preprocessor used to compile the C program.\n */\n/* CPPLAST:\n *\tThis symbol is intended to be used along with CPPRUN in the same manner\n *\tsymbol CPPMINUS is used with CPPSTDIN. It contains either \"-\" or \"\".\n */\n#define CPPSTDIN \"$cppstdin\"\n#define CPPMINUS \"$cppminus\"\n#define CPPRUN \"$cpprun\"\n#define CPPLAST \"$cpplast\"\n\n/* HAS_ACCESS:\n *\tThis manifest constant lets the C program know that the access()\n *\tsystem call is available to check for accessibility using real UID/GID.\n *\t(always present on UNIX.)\n */\n#$d_access HAS_ACCESS\t\t/**/\n\n/* HASATTRIBUTE_FORMAT:\n *\tCan we handle GCC attribute for checking printf-style formats\n */\n/* PRINTF_FORMAT_NULL_OK:\n *\tAllows __printf__ format to be null when checking printf-style\n */\n/* HASATTRIBUTE_MALLOC:\n *\tCan we handle GCC attribute for malloc-style functions.\n */\n/* HASATTRIBUTE_NONNULL:\n *\tCan we handle GCC attribute for nonnull function parms.\n */\n/* HASATTRIBUTE_NORETURN:\n *\tCan we handle GCC attribute for functions that do not return\n */\n/* HASATTRIBUTE_PURE:\n *\tCan we handle GCC attribute for pure functions\n */\n/* HASATTRIBUTE_UNUSED:\n *\tCan we handle GCC attribute for unused variables and arguments\n */\n/* HASATTRIBUTE_DEPRECATED:\n *\tCan we handle GCC attribute for marking deprecated APIs\n */\n/* HASATTRIBUTE_WARN_UNUSED_RESULT:\n *\tCan we handle GCC attribute for warning on unused results\n */\n#$d_attribute_deprecated HASATTRIBUTE_DEPRECATED\t/**/\n#$d_attribute_format HASATTRIBUTE_FORMAT\t/**/\n#$d_printf_format_null PRINTF_FORMAT_NULL_OK\t/**/\n#$d_attribute_noreturn HASATTRIBUTE_NORETURN\t/**/\n#$d_attribute_malloc HASATTRIBUTE_MALLOC\t/**/\n#$d_attribute_nonnull HASATTRIBUTE_NONNULL\t/**/\n#$d_attribute_pure HASATTRIBUTE_PURE\t/**/\n#$d_attribute_unused HASATTRIBUTE_UNUSED\t/**/\n#$d_attribute_warn_unused_result HASATTRIBUTE_WARN_UNUSED_RESULT\t/**/\n\n/* HAS_BACKTRACE:\n *\tThis symbol, if defined, indicates that the backtrace() routine is\n *\tavailable to get a stack trace.  The <execinfo.h> header must be\n *\tincluded to use this routine.\n */\n#$d_backtrace HAS_BACKTRACE\t/**/\n\n/* HAS_CSH:\n *\tThis symbol, if defined, indicates that the C-shell exists.\n */\n/* CSH:\n *\tThis symbol, if defined, contains the full pathname of csh.\n */\n#$d_csh HAS_CSH\t\t/**/\n#ifdef HAS_CSH\n#define CSH \"$full_csh\"\t/**/\n#endif\n\n/* HAS_DLADDR:\n *\tThis symbol, if defined, indicates that the dladdr() routine is\n *\tavailable to query dynamic linker information for an address.\n *\tThe <dlfcn.h> header must be included to use this routine.\n */\n#$d_dladdr HAS_DLADDR\t/**/\n\n/* SETUID_SCRIPTS_ARE_SECURE_NOW:\n *\tThis symbol, if defined, indicates that the bug that prevents\n *\tsetuid scripts from being secure is not present in this kernel.\n */\n/* DOSUID:\n *\tThis symbol, if defined, indicates that the C program should\n *\tcheck the script that it is executing for setuid/setgid bits, and\n *\tattempt to emulate setuid/setgid on systems that have disabled\n *\tsetuid #! scripts because the kernel can't do it securely.\n *\tIt is up to the package designer to make sure that this emulation\n *\tis done securely.  Among other things, it should do an fstat on\n *\tthe script it just opened to make sure it really is a setuid/setgid\n *\tscript, it should make sure the arguments passed correspond exactly\n *\tto the argument on the #! line, and it should not trust any\n *\tsubprocesses to which it must pass the filename rather than the\n *\tfile descriptor of the script to be executed.\n */\n#$d_suidsafe SETUID_SCRIPTS_ARE_SECURE_NOW\t/**/\n#$d_dosuid DOSUID\t\t/**/\n\n/* HAS_ENDGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the group database.\n */\n#$d_endgrent HAS_ENDGRENT\t\t/**/\n\n/* HAS_ENDHOSTENT:\n *\tThis symbol, if defined, indicates that the endhostent() routine is\n *\tavailable to close whatever was being used for host queries.\n */\n#$d_endhent HAS_ENDHOSTENT\t\t/**/\n\n/* HAS_ENDNETENT:\n *\tThis symbol, if defined, indicates that the endnetent() routine is\n *\tavailable to close whatever was being used for network queries.\n */\n#$d_endnent HAS_ENDNETENT\t\t/**/\n\n/* HAS_ENDPROTOENT:\n *\tThis symbol, if defined, indicates that the endprotoent() routine is\n *\tavailable to close whatever was being used for protocol queries.\n */\n#$d_endpent HAS_ENDPROTOENT\t\t/**/\n\n/* HAS_ENDPWENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the passwd database.\n */\n#$d_endpwent HAS_ENDPWENT\t\t/**/\n\n/* HAS_ENDSERVENT:\n *\tThis symbol, if defined, indicates that the endservent() routine is\n *\tavailable to close whatever was being used for service queries.\n */\n#$d_endsent HAS_ENDSERVENT\t\t/**/\n\n/* FLEXFILENAMES:\n *\tThis symbol, if defined, indicates that the system supports filenames\n *\tlonger than 14 characters.\n */\n#$d_flexfnam\tFLEXFILENAMES\t\t/**/\n\n/* HAS_GETGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for sequential access of the group database.\n */\n#$d_getgrent HAS_GETGRENT\t\t/**/\n\n/* HAS_GETHOSTBYADDR:\n *\tThis symbol, if defined, indicates that the gethostbyaddr() routine is\n *\tavailable to look up hosts by their IP addresses.\n */\n#$d_gethbyaddr HAS_GETHOSTBYADDR\t\t/**/\n\n/* HAS_GETHOSTBYNAME:\n *\tThis symbol, if defined, indicates that the gethostbyname() routine is\n *\tavailable to look up host names in some data base or other.\n */\n#$d_gethbyname HAS_GETHOSTBYNAME\t\t/**/\n\n/* HAS_GETHOSTENT:\n *\tThis symbol, if defined, indicates that the gethostent() routine is\n *\tavailable to look up host names in some data base or another.\n */\n#$d_gethent HAS_GETHOSTENT\t\t/**/\n\n/* HAS_GETHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tgethostname() routine to derive the host name.  See also HAS_UNAME\n *\tand PHOSTNAME.\n */\n/* HAS_UNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tuname() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand PHOSTNAME.\n */\n/* PHOSTNAME:\n *\tThis symbol, if defined, indicates the command to feed to the\n *\tpopen() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand HAS_UNAME.\tNote that the command uses a fully qualified path,\n *\tso that it is safe even if used by a process with super-user\n *\tprivileges.\n */\n/* HAS_PHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tcontents of PHOSTNAME as a command to feed to the popen() routine\n *\tto derive the host name.\n */\n#$d_gethname HAS_GETHOSTNAME\t/**/\n#$d_uname HAS_UNAME\t\t/**/\n#$d_phostname HAS_PHOSTNAME\t/**/\n#ifdef HAS_PHOSTNAME\n#define PHOSTNAME \"$aphostname\"\t/* How to get the host name */\n#endif\n\n/* HAS_GETNETBYADDR:\n *\tThis symbol, if defined, indicates that the getnetbyaddr() routine is\n *\tavailable to look up networks by their IP addresses.\n */\n#$d_getnbyaddr HAS_GETNETBYADDR\t\t/**/\n\n/* HAS_GETNETBYNAME:\n *\tThis symbol, if defined, indicates that the getnetbyname() routine is\n *\tavailable to look up networks by their names.\n */\n#$d_getnbyname HAS_GETNETBYNAME\t\t/**/\n\n/* HAS_GETNETENT:\n *\tThis symbol, if defined, indicates that the getnetent() routine is\n *\tavailable to look up network names in some data base or another.\n */\n#$d_getnent HAS_GETNETENT\t\t/**/\n\n/* HAS_GETPROTOENT:\n *\tThis symbol, if defined, indicates that the getprotoent() routine is\n *\tavailable to look up protocols in some data base or another.\n */\n#$d_getpent HAS_GETPROTOENT\t\t/**/\n\n/* HAS_GETPGRP:\n *\tThis symbol, if defined, indicates that the getpgrp routine is\n *\tavailable to get the current process group.\n */\n/* USE_BSD_GETPGRP:\n *\tThis symbol, if defined, indicates that getpgrp needs one\n *\targuments whereas USG one needs none.\n */\n#$d_getpgrp HAS_GETPGRP\t\t/**/\n#$d_bsdgetpgrp USE_BSD_GETPGRP\t/**/\n\n/* HAS_GETPROTOBYNAME:\n *\tThis symbol, if defined, indicates that the getprotobyname()\n *\troutine is available to look up protocols by their name.\n */\n/* HAS_GETPROTOBYNUMBER:\n *\tThis symbol, if defined, indicates that the getprotobynumber()\n *\troutine is available to look up protocols by their number.\n */\n#$d_getpbyname HAS_GETPROTOBYNAME\t\t/**/\n#$d_getpbynumber HAS_GETPROTOBYNUMBER\t\t/**/\n\n/* HAS_GETPWENT:\n *\tThis symbol, if defined, indicates that the getpwent routine is\n *\tavailable for sequential access of the passwd database.\n *\tIf this is not available, the older getpw() function may be available.\n */\n#$d_getpwent HAS_GETPWENT\t\t/**/\n\n/* HAS_GETSERVENT:\n *\tThis symbol, if defined, indicates that the getservent() routine is\n *\tavailable to look up network services in some data base or another.\n */\n#$d_getsent HAS_GETSERVENT\t\t/**/\n\n/* HAS_GETSERVBYNAME:\n *\tThis symbol, if defined, indicates that the getservbyname()\n *\troutine is available to look up services by their name.\n */\n/* HAS_GETSERVBYPORT:\n *\tThis symbol, if defined, indicates that the getservbyport()\n *\troutine is available to look up services by their port.\n */\n#$d_getsbyname HAS_GETSERVBYNAME\t\t/**/\n#$d_getsbyport HAS_GETSERVBYPORT\t\t/**/\n\n/* HAS_HTONL:\n *\tThis symbol, if defined, indicates that the htonl() routine (and\n *\tfriends htons() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_HTONS:\n *\tThis symbol, if defined, indicates that the htons() routine (and\n *\tfriends htonl() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHL:\n *\tThis symbol, if defined, indicates that the ntohl() routine (and\n *\tfriends htonl() htons() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHS:\n *\tThis symbol, if defined, indicates that the ntohs() routine (and\n *\tfriends htonl() htons() ntohl()) are available to do network\n *\torder byte swapping.\n */\n#$d_htonl HAS_HTONL\t\t/**/\n#$d_htonl HAS_HTONS\t\t/**/\n#$d_htonl HAS_NTOHL\t\t/**/\n#$d_htonl HAS_NTOHS\t\t/**/\n\n/* HAS_LONG_DOUBLE:\n *\tThis symbol will be defined if the C compiler supports long\n *\tdoubles.\n */\n/* LONG_DOUBLESIZE:\n *\tThis symbol contains the size of a long double, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long doubles.  Note that this\n *\tis sizeof(long double), which may include unused bytes.\n */\n/* HAS_LDEXPL:\n *\tThis symbol, if defined, indicates that the ldexpl routine is\n *\tavailable to shift a long double floating-point number\n *\tby an integral power of 2.\n */\n/* LONG_DOUBLEKIND:\n *\tLONG_DOUBLEKIND will be one of\n *\tLONG_DOUBLE_IS_DOUBLE\n *\tLONG_DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_X86_80_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_X86_80_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_LE\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_BE\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_BE\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_LE\n *\tLONG_DOUBLE_IS_VAX_H_FLOAT\n *\tLONG_DOUBLE_IS_UNKNOWN_FORMAT\n *\tIt is only defined if the system supports long doubles.\n */\n/* LONG_DOUBLE_STYLE_IEEE:\n *\tThis symbol, if defined, indicates that the long double\n *\tis any of the IEEE 754 style long doubles:\n *\tLONG_DOUBLE_STYLE_IEEE_STD, LONG_DOUBLE_STYLE_IEEE_EXTENDED,\n *\tLONG_DOUBLE_STYLE_IEEE_DOUBLEDOUBLE.\n */\n/* LONG_DOUBLE_STYLE_IEEE_DOUBLEDOUBLE:\n *\tThis symbol, if defined, indicates that the long double is\n *\tthe 128-bit double-double.\n */\n/* LONG_DOUBLE_STYLE_IEEE_EXTENDED:\n *\tThis symbol, if defined, indicates that the long double is\n *\tthe 80-bit IEEE 754. Note that despite the 'extended' this\n *\tis less than the 'std', since this is an extension of\n *\tthe double precision.\n */\n/* LONG_DOUBLE_STYLE_IEEE_STD:\n *\tThis symbol, if defined, indicates that the long double is\n *\tthe 128-bit IEEE 754.\n */\n/* LONG_DOUBLE_STYLE_VAX:\n *\tThis symbol, if defined, indicates that the long double is\n *\tthe 128-bit VAX format H.\n */\n#$d_ldexpl  HAS_LDEXPL\t\t/**/\n#$d_longdbl HAS_LONG_DOUBLE\t\t/**/\n#ifdef HAS_LONG_DOUBLE\n#define LONG_DOUBLESIZE $longdblsize\t\t/**/\n#define LONG_DOUBLEKIND $longdblkind\t\t/**/\n#define LONG_DOUBLE_IS_DOUBLE\t\t\t\t0\n#define LONG_DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\t1\n#define LONG_DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\t2\n#define LONG_DOUBLE_IS_X86_80_BIT_LITTLE_ENDIAN\t\t3\n#define LONG_DOUBLE_IS_X86_80_BIT_BIG_ENDIAN\t\t4\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_LE\t5\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_BE\t6\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_BE\t7\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_LE\t8\n#define LONG_DOUBLE_IS_VAX_H_FLOAT\t\t\t9\n#define LONG_DOUBLE_IS_UNKNOWN_FORMAT\t\t\t-1\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LITTLE_ENDIAN\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_LE /* back-compat */\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BIG_ENDIAN\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_BE /* back-compat */\n#$d_long_double_style_ieee LONG_DOUBLE_STYLE_IEEE\n#$d_long_double_style_ieee_doubledouble LONG_DOUBLE_STYLE_IEEE_DOUBLEDOUBLE\n#$d_long_double_style_ieee_extended LONG_DOUBLE_STYLE_IEEE_EXTENDED\n#$d_long_double_style_ieee_std LONG_DOUBLE_STYLE_IEEE_STD\n#$d_long_double_style_vax LONG_DOUBLE_STYLE_VAX\n#endif\n\n/* HAS_LONG_LONG:\n *\tThis symbol will be defined if the C compiler supports long long.\n */\n/* LONGLONGSIZE:\n *\tThis symbol contains the size of a long long, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long long.\n */\n#$d_longlong HAS_LONG_LONG\t\t/**/\n#ifdef HAS_LONG_LONG\n#define LONGLONGSIZE $longlongsize\t\t/**/\n#endif\n\n/* HAS_MKSTEMP:\n *\tThis symbol, if defined, indicates that the mkstemp routine is\n *\tavailable to exclusively create and open a uniquely named\n *\ttemporary file.\n */\n#$d_mkstemp HAS_MKSTEMP\t\t/**/\n\n/* HAS_MMAP:\n *\tThis symbol, if defined, indicates that the mmap system call is\n *\tavailable to map a file into memory.\n */\n/* Mmap_t:\n *\tThis symbol holds the return type of the mmap() system call\n *\t(and simultaneously the type of the first argument).\n *\tUsually set to 'void *' or 'caddr_t'.\n */\n#$d_mmap HAS_MMAP\t\t/**/\n#define Mmap_t $mmaptype\t/**/\n\n/* HAS_SETGRENT:\n *\tThis symbol, if defined, indicates that the setgrent routine is\n *\tavailable for initializing sequential access of the group database.\n */\n#$d_setgrent HAS_SETGRENT\t\t/**/\n\n/* HAS_SETHOSTENT:\n *\tThis symbol, if defined, indicates that the sethostent() routine is\n *\tavailable.\n */\n#$d_sethent HAS_SETHOSTENT\t\t/**/\n\n/* HAS_SETNETENT:\n *\tThis symbol, if defined, indicates that the setnetent() routine is\n *\tavailable.\n */\n#$d_setnent HAS_SETNETENT\t\t/**/\n\n/* HAS_SETPROTOENT:\n *\tThis symbol, if defined, indicates that the setprotoent() routine is\n *\tavailable.\n */\n#$d_setpent HAS_SETPROTOENT\t\t/**/\n\n/* HAS_SETPGRP:\n *\tThis symbol, if defined, indicates that the setpgrp routine is\n *\tavailable to set the current process group.\n */\n/* USE_BSD_SETPGRP:\n *\tThis symbol, if defined, indicates that setpgrp needs two\n *\targuments whereas USG one needs none.  See also HAS_SETPGID\n *\tfor a POSIX interface.\n */\n#$d_setpgrp HAS_SETPGRP\t\t/**/\n#$d_bsdsetpgrp USE_BSD_SETPGRP\t/**/\n\n/* HAS_SETPWENT:\n *\tThis symbol, if defined, indicates that the setpwent routine is\n *\tavailable for initializing sequential access of the passwd database.\n */\n#$d_setpwent HAS_SETPWENT\t\t/**/\n\n/* HAS_SETSERVENT:\n *\tThis symbol, if defined, indicates that the setservent() routine is\n *\tavailable.\n */\n#$d_setsent HAS_SETSERVENT\t\t/**/\n\n/* HAS_SETVBUF:\n *\tThis symbol, if defined, indicates that the setvbuf routine is\n *\tavailable to change buffering on an open stdio stream.\n *\tto a line-buffered mode.\n */\n#$d_setvbuf HAS_SETVBUF\t\t/**/\n\n/* HAS_SHM:\n *\tThis symbol, if defined, indicates that the entire shm*(2) library is\n *\tsupported.\n */\n#$d_shm HAS_SHM\t\t/**/\n\n/* Shmat_t:\n *\tThis symbol holds the return type of the shmat() system call.\n *\tUsually set to 'void *' or 'char *'.\n */\n/* HAS_SHMAT_PROTOTYPE:\n *\tThis symbol, if defined, indicates that the sys/shm.h includes\n *\ta prototype for shmat().  Otherwise, it is up to the program to\n *\tguess one.  Shmat_t shmat(int, Shmat_t, int) is a good guess,\n *\tbut not always right so it should be emitted by the program only\n *\twhen HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.\n */\n#define Shmat_t $shmattype\t/**/\n#$d_shmatprototype HAS_SHMAT_PROTOTYPE\t/**/\n\n/* HAS_SOCKET:\n *\tThis symbol, if defined, indicates that the BSD socket interface is\n *\tsupported.\n */\n/* HAS_SOCKETPAIR:\n *\tThis symbol, if defined, indicates that the BSD socketpair() call is\n *\tsupported.\n */\n/* HAS_SOCKADDR_SA_LEN:\n *\tThis symbol, if defined, indicates that the struct sockaddr\n *\tstructure has a member called sa_len, indicating the length of\n *\tthe structure.\n */\n/* HAS_SOCKADDR_IN6:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct sockaddr_in6;\n */\n/* HAS_SIN6_SCOPE_ID:\n *\tThis symbol, if defined, indicates that the struct sockaddr_in6\n *\tstructure has a member called sin6_scope_id.\n */\n/* HAS_IP_MREQ:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ip_mreq;\n */\n/* HAS_IP_MREQ_SOURCE:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ip_mreq_source;\n */\n/* HAS_IPV6_MREQ:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ipv6_mreq;\n */\n/* HAS_IPV6_MREQ_SOURCE:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ipv6_mreq_source;\n */\n#$d_socket\tHAS_SOCKET\t\t/**/\n#$d_sockpair\tHAS_SOCKETPAIR\t/**/\n#$d_sockaddr_sa_len\tHAS_SOCKADDR_SA_LEN\t/**/\n#$d_sockaddr_in6\tHAS_SOCKADDR_IN6\t/**/\n#$d_sin6_scope_id\tHAS_SIN6_SCOPE_ID\t/**/\n#$d_ip_mreq\tHAS_IP_MREQ\t/**/\n#$d_ip_mreq_source\tHAS_IP_MREQ_SOURCE\t/**/\n#$d_ipv6_mreq\tHAS_IPV6_MREQ\t/**/\n#$d_ipv6_mreq_source\tHAS_IPV6_MREQ_SOURCE\t/**/\n\n/* USE_STAT_BLOCKS:\n *\tThis symbol is defined if this system has a stat structure declaring\n *\tst_blksize and st_blocks.\n */\n#ifndef USE_STAT_BLOCKS\n#$d_statblks USE_STAT_BLOCKS\t/**/\n#endif\n\n/* HAS_SYS_ERRLIST:\n *\tThis symbol, if defined, indicates that the sys_errlist array is\n *\tavailable to translate error numbers to strings. The extern int\n *\tsys_nerr gives the size of that table.\n */\n#$d_syserrlst HAS_SYS_ERRLIST\t/**/\n\n/* HAS_STRTOUL:\n *\tThis symbol, if defined, indicates that the strtoul routine is\n *\tavailable to provide conversion of strings to unsigned long.\n */\n#$d_strtoul HAS_STRTOUL\t/**/\n\n/* HAS_UNION_SEMUN:\n *\tThis symbol, if defined, indicates that the union semun is\n *\tdefined by including <sys/sem.h>.  If not, the user code\n *\tprobably needs to define it as:\n *\tunion semun {\n *\t    int val;\n *\t    struct semid_ds *buf;\n *\t    unsigned short *array;\n *\t}\n */\n/* USE_SEMCTL_SEMUN:\n *\tThis symbol, if defined, indicates that union semun is\n *\tused for semctl IPC_STAT.\n */\n/* USE_SEMCTL_SEMID_DS:\n *\tThis symbol, if defined, indicates that struct semid_ds * is\n *\tused for semctl IPC_STAT.\n */\n#$d_union_semun HAS_UNION_SEMUN\t/**/\n#$d_semctl_semun USE_SEMCTL_SEMUN\t/**/\n#$d_semctl_semid_ds USE_SEMCTL_SEMID_DS\t/**/\n\n/* HAS_VFORK:\n *\tThis symbol, if defined, indicates that vfork() exists.\n */\n#$d_vfork HAS_VFORK\t/**/\n\n/* HAS_PSEUDOFORK:\n *\tThis symbol, if defined, indicates that an emulation of the\n *\tfork routine is available.\n */\n#$d_pseudofork HAS_PSEUDOFORK\t/**/\n\n/* Signal_t:\n *\tThis symbol's value is either \"void\" or \"int\", corresponding to the\n *\tappropriate return type of a signal handler.  Thus, you can declare\n *\ta signal handler using \"Signal_t (*handler)()\", and define the\n *\thandler using \"Signal_t handler(sig)\".\n */\n#define Signal_t $signal_t\t/* Signal handler's return type */\n\n/* I_DIRENT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <dirent.h>. Using this symbol also triggers the definition\n *\tof the Direntry_t define which ends up being 'struct dirent' or\n *\t'struct direct' depending on the availability of <dirent.h>.\n */\n/* DIRNAMLEN:\n *\tThis symbol, if defined, indicates to the C program that the length\n *\tof directory entry names is provided by a d_namlen field.  Otherwise\n *\tyou need to do strlen() on the d_name field.\n */\n/* Direntry_t:\n *\tThis symbol is set to 'struct direct' or 'struct dirent' depending on\n *\twhether dirent is available or not. You should use this pseudo type to\n *\tportably declare your directory entries.\n */\n#$i_dirent I_DIRENT\t\t/**/\n#$d_dirnamlen DIRNAMLEN\t/**/\n#define Direntry_t $direntrytype\n\n/* I_EXECINFO:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <execinfo.h> for backtrace() support.\n */\n#$i_execinfo I_EXECINFO\t\t/**/\n\n/* I_GRP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <grp.h>.\n */\n/* GRPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct group\n *\tin <grp.h> contains gr_passwd.\n */\n#$i_grp I_GRP\t\t/**/\n#$d_grpasswd GRPASSWD\t/**/\n\n/* I_NDBM:\n *\tThis symbol, if defined, indicates that <ndbm.h> exists and should\n *\tbe included.\n */\n/* I_GDBMNDBM:\n *\tThis symbol, if defined, indicates that <gdbm/ndbm.h> exists and should\n *\tbe included.  This was the location of the ndbm.h compatibility file\n *\tin RedHat 7.1.\n */\n/* I_GDBM_NDBM:\n *\tThis symbol, if defined, indicates that <gdbm-ndbm.h> exists and should\n *\tbe included.  This is the location of the ndbm.h compatibility file\n *\tin Debian 4.0.\n */\n/* NDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/* GDBMNDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <gdbm/ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/* GDBM_NDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <gdbm-ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n#$i_ndbm I_NDBM\t/**/\n#$i_gdbmndbm I_GDBMNDBM\t/**/\n#$i_gdbm_ndbm I_GDBM_NDBM\t/**/\n#$d_ndbm_h_uses_prototypes NDBM_H_USES_PROTOTYPES\t/**/\n#$d_gdbmndbm_h_uses_prototypes GDBMNDBM_H_USES_PROTOTYPES\t/**/\n#$d_gdbm_ndbm_h_uses_prototypes GDBM_NDBM_H_USES_PROTOTYPES\t/**/\n\n/* I_NETDB:\n *\tThis symbol, if defined, indicates that <netdb.h> exists and\n *\tshould be included.\n */\n#$i_netdb I_NETDB\t\t/**/\n\n/* I_NET_ERRNO:\n *\tThis symbol, if defined, indicates that <net/errno.h> exists and\n *\tshould be included.\n */\n#$i_neterrno I_NET_ERRNO\t\t/**/\n\n/* I_PWD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pwd.h>.\n */\n/* PWQUOTA:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_quota.\n */\n/* PWAGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_age.\n */\n/* PWCHANGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_change.\n */\n/* PWCLASS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_class.\n */\n/* PWEXPIRE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_expire.\n */\n/* PWCOMMENT:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_comment.\n */\n/* PWGECOS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_gecos.\n */\n/* PWPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_passwd.\n */\n#$i_pwd I_PWD\t\t/**/\n#$d_pwquota PWQUOTA\t/**/\n#$d_pwage PWAGE\t/**/\n#$d_pwchange PWCHANGE\t/**/\n#$d_pwclass PWCLASS\t/**/\n#$d_pwexpire PWEXPIRE\t/**/\n#$d_pwcomment PWCOMMENT\t/**/\n#$d_pwgecos PWGECOS\t/**/\n#$d_pwpasswd PWPASSWD\t/**/\n\n/* I_SYSUIO:\n *\tThis symbol, if defined, indicates that <sys/uio.h> exists and\n *\tshould be included.\n */\n#$i_sysuio\tI_SYSUIO\t\t/**/\n\n/* I_TERMIO:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<termio.h> rather than <sgtty.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/* I_TERMIOS:\n *\tThis symbol, if defined, indicates that the program should include\n *\tthe POSIX termios.h rather than sgtty.h or termio.h.\n *\tThere are also differences in the ioctl() calls that depend on the\n *\tvalue of this symbol.\n */\n/* I_SGTTY:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<sgtty.h> rather than <termio.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n#$i_termio I_TERMIO\t\t/**/\n#$i_termios I_TERMIOS\t\t/**/\n#$i_sgtty I_SGTTY\t\t/**/\n\n/* Free_t:\n *\tThis variable contains the return type of free().  It is usually\n *\tvoid, but occasionally int.\n */\n/* Malloc_t:\n *\tThis symbol is the type of pointer returned by malloc and realloc.\n */\n#define Malloc_t $malloctype\t\t\t/**/\n#define Free_t $freetype\t\t\t/**/\n\n/* PERL_MALLOC_WRAP:\n *\tThis symbol, if defined, indicates that we'd like malloc wrap checks.\n */\n#$usemallocwrap PERL_MALLOC_WRAP\t\t/**/\n\n/* MYMALLOC:\n *\tThis symbol, if defined, indicates that we're using our own malloc.\n */\n#$d_mymalloc MYMALLOC\t\t\t/**/\n\n/* SH_PATH:\n *\tThis symbol contains the full pathname to the shell used on this\n *\ton this system to execute Bourne shell scripts.  Usually, this will be\n *\t/bin/sh, though it's possible that some systems will have /bin/ksh,\n *\t/bin/pdksh, /bin/ash, /bin/bash, or even something such as\n *\tD:/bin/sh.exe.\n */\n#define SH_PATH \"$targetsh\"  /**/\n\n/* SIG_NAME:\n *\tThis symbol contains a list of signal names in order of\n *\tsignal number. This is intended\n *\tto be used as a static array initialization, like this:\n *\t\tchar *sig_name[] = { SIG_NAME };\n *\tThe signals in the list are separated with commas, and each signal\n *\tis surrounded by double quotes. There is no leading SIG in the signal\n *\tname, i.e. SIGQUIT is known as \"QUIT\".\n *\tGaps in the signal numbers (up to NSIG) are filled in with NUMnn,\n *\tetc., where nn is the actual signal number (e.g. NUM37).\n *\tThe signal number for sig_name[i] is stored in sig_num[i].\n *\tThe last element is 0 to terminate the list with a NULL.  This\n *\tcorresponds to the 0 at the end of the sig_name_init list.\n *\tNote that this variable is initialized from the sig_name_init,\n *\tnot from sig_name (which is unused).\n */\n/* SIG_NUM:\n *\tThis symbol contains a list of signal numbers, in the same order as the\n *\tSIG_NAME list. It is suitable for static array initialization, as in:\n *\t\tint sig_num[] = { SIG_NUM };\n *\tThe signals in the list are separated with commas, and the indices\n *\twithin that list and the SIG_NAME list match, so it's easy to compute\n *\tthe signal name from a number or vice versa at the price of a small\n *\tdynamic linear lookup.\n *\tDuplicates are allowed, but are moved to the end of the list.\n *\tThe signal number corresponding to sig_name[i] is sig_number[i].\n *\tif (i < NSIG) then sig_number[i] == i.\n *\tThe last element is 0, corresponding to the 0 at the end of\n *\tthe sig_name_init list.\n *\tNote that this variable is initialized from the sig_num_init,\n *\tnot from sig_num (which is unused).\n */\n/* SIG_SIZE:\n *\tThis variable contains the number of elements of the SIG_NAME\n *\tand SIG_NUM arrays, excluding the final NULL entry.\n */\n#define SIG_NAME $sig_name_init\t\t/**/\n#define SIG_NUM  $sig_num_init\t\t/**/\n#define SIG_SIZE $sig_size\t\t\t/**/\n\n/* USE_CROSS_COMPILE:\n *\tThis symbol, if defined, indicates that Perl is being cross-compiled.\n */\n/* PERL_TARGETARCH:\n *\tThis symbol, if defined, indicates the target architecture\n *\tPerl has been cross-compiled to.  Undefined if not a cross-compile.\n */\n#ifndef USE_CROSS_COMPILE\n#$usecrosscompile\tUSE_CROSS_COMPILE\t/**/\n#define\tPERL_TARGETARCH\t\"$targetarch\"\t/**/\n#endif\n\n/* PERL_USE_DEVEL:\n *\tThis symbol, if defined, indicates that Perl was configured with\n *\t-Dusedevel, to enable development features.  This should not be\n *\tdone for production builds.\n */\n#$usedevel\tPERL_USE_DEVEL\t\t/**/\n\n/* HAS_ATOLF:\n *\tThis symbol, if defined, indicates that the atolf routine is\n *\tavailable to convert strings into long doubles.\n */\n#$d_atolf HAS_ATOLF\t\t/**/\n\n/* HAS_ATOLL:\n *\tThis symbol, if defined, indicates that the atoll routine is\n *\tavailable to convert strings into long longs.\n */\n#$d_atoll HAS_ATOLL\t\t/**/\n\n/* HAS__FWALK:\n *\tThis symbol, if defined, indicates that the _fwalk system call is\n *\tavailable to apply a function to all the file handles.\n */\n#$d__fwalk HAS__FWALK\t\t/**/\n\n/* HAS_ACCEPT4:\n *\tThis symbol, if defined, indicates that the accept4 routine is\n *\tavailable to accept socket connections.\n */\n#$d_accept4 HAS_ACCEPT4\t/**/\n\n/* HAS_ACOSH:\n *\tThis symbol, if defined, indicates that the acosh routine is\n *\tavailable to do the inverse hyperbolic cosine function.\n */\n#$d_acosh HAS_ACOSH\t\t/**/\n\n/* HAS_AINTL:\n *\tThis symbol, if defined, indicates that the aintl routine is\n *\tavailable.  If copysignl is also present we can emulate modfl.\n */\n#$d_aintl HAS_AINTL\t\t/**/\n\n/* HAS_ASINH:\n *\tThis symbol, if defined, indicates that the asinh routine is\n *\tavailable to do the inverse hyperbolic sine function.\n */\n#$d_asinh HAS_ASINH\t\t/**/\n\n/* HAS_ATANH:\n *\tThis symbol, if defined, indicates that the atanh routine is\n *\tavailable to do the inverse hyperbolic tangent function.\n */\n#$d_atanh HAS_ATANH\t\t/**/\n\n/* HAS_BUILTIN_CHOOSE_EXPR:\n *\tCan we handle GCC builtin for compile-time ternary-like expressions\n */\n/* HAS_BUILTIN_EXPECT:\n *\tCan we handle GCC builtin for telling that certain values are more\n *\tlikely\n */\n#$d_builtin_expect HAS_BUILTIN_EXPECT\t/**/\n#$d_builtin_choose_expr HAS_BUILTIN_CHOOSE_EXPR\t/**/\n\n/* HAS_BUILTIN_ADD_OVERFLOW:\n *\tThis symbol, if defined, indicates that the compiler supports\n *\t__builtin_add_overflow for adding integers with overflow checks.\n */\n/* HAS_BUILTIN_SUB_OVERFLOW:\n *\tThis symbol, if defined, indicates that the compiler supports\n *\t__builtin_sub_overflow for subtracting integers with overflow checks.\n */\n/* HAS_BUILTIN_MUL_OVERFLOW:\n *\tThis symbol, if defined, indicates that the compiler supports\n *\t__builtin_mul_overflow for multiplying integers with overflow checks.\n */\n#$d_builtin_add_overflow HAS_BUILTIN_ADD_OVERFLOW\t/**/\n#$d_builtin_sub_overflow HAS_BUILTIN_SUB_OVERFLOW\t/**/\n#$d_builtin_mul_overflow HAS_BUILTIN_MUL_OVERFLOW\t/**/\n\n/* HAS_C99_VARIADIC_MACROS:\n *\tIf defined, the compiler supports C99 variadic macros.\n */\n#$d_c99_variadic_macros\tHAS_C99_VARIADIC_MACROS\t/**/\n\n/* HAS_CLASS:\n *\tThis symbol, if defined, indicates that the class routine is\n *\tavailable to classify doubles.  Available for example in AIX.\n *\tThe returned values are defined in <float.h> and are:\n *\n *\tFP_PLUS_NORM\tPositive normalized, nonzero\n *\tFP_MINUS_NORM\tNegative normalized, nonzero\n *\tFP_PLUS_DENORM\tPositive denormalized, nonzero\n *\tFP_MINUS_DENORM\tNegative denormalized, nonzero\n *\tFP_PLUS_ZERO\t+0.0\n *\tFP_MINUS_ZERO\t-0.0\n *\tFP_PLUS_INF\t+INF\n *\tFP_MINUS_INF\t-INF\n *\tFP_NANS\t\tSignaling Not a Number (NaNS)\n *\tFP_NANQ\t\tQuiet Not a Number (NaNQ)\n */\n#$d_class HAS_CLASS\t\t/**/\n\n/* HAS_CLEARENV:\n *\tThis symbol, if defined, indicates that the clearenv () routine is\n *\tavailable for use.\n */\n#$d_clearenv HAS_CLEARENV\t\t/**/\n\n/* HAS_STRUCT_CMSGHDR:\n *\tThis symbol, if defined, indicates that the struct cmsghdr\n *\tis supported.\n */\n#$d_cmsghdr_s HAS_STRUCT_CMSGHDR\t/**/\n\n/* HAS_COPYSIGN:\n *\tThis symbol, if defined, indicates that the copysign routine is\n *\tavailable to do the copysign function.\n */\n#$d_copysign HAS_COPYSIGN\t\t/**/\n\n/* HAS_COPYSIGNL:\n *\tThis symbol, if defined, indicates that the copysignl routine is\n *\tavailable.  If aintl is also present we can emulate modfl.\n */\n#$d_copysignl HAS_COPYSIGNL\t\t/**/\n\n/* USE_CPLUSPLUS:\n *\tThis symbol, if defined, indicates that a C++ compiler was\n *\tused to compiled Perl and will be used to compile extensions.\n */\n#$d_cplusplus USE_CPLUSPLUS\t\t/**/\n\n/* HAS_DBMINIT_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the dbminit() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int dbminit(char *);\n */\n#$d_dbminitproto\tHAS_DBMINIT_PROTO\t/**/\n\n/* HAS_DIR_DD_FD:\n *\tThis symbol, if defined, indicates that the the DIR* dirstream\n *\tstructure contains a member variable named dd_fd.\n */\n#$d_dir_dd_fd HAS_DIR_DD_FD\t\t/**/\n\n/* HAS_DIRFD:\n *\tThis manifest constant lets the C program know that dirfd\n *\tis available.\n */\n#$d_dirfd HAS_DIRFD\t\t/**/\n\n/* DLSYM_NEEDS_UNDERSCORE:\n *\tThis symbol, if defined, indicates that we need to prepend an\n *\tunderscore to the symbol name before calling dlsym().  This only\n *\tmakes sense if you *have* dlsym, which we will presume is the\n *\tcase if you're using dl_dlopen.xs.\n */\n#$d_dlsymun\tDLSYM_NEEDS_UNDERSCORE\t/**/\n\n/* HAS_DUP3:\n *\tThis symbol, if defined, indicates that the dup3 routine is\n *\tavailable to duplicate file descriptors.\n */\n#$d_dup3 HAS_DUP3\t/**/\n\n/* HAS_ERF:\n *\tThis symbol, if defined, indicates that the erf routine is\n *\tavailable to do the error function.\n */\n#$d_erf HAS_ERF\t\t/**/\n\n/* HAS_ERFC:\n *\tThis symbol, if defined, indicates that the erfc routine is\n *\tavailable to do the complementary error function.\n */\n#$d_erfc HAS_ERFC\t\t/**/\n\n/* HAS_EXP2:\n *\tThis symbol, if defined, indicates that the exp2 routine is\n *\tavailable to do the 2**x function.\n */\n#$d_exp2 HAS_EXP2\t\t/**/\n\n/* HAS_EXPM1:\n *\tThis symbol, if defined, indicates that the expm1 routine is\n *\tavailable to do the exp(x) - 1 when x is near 1 function.\n */\n#$d_expm1 HAS_EXPM1\t\t/**/\n\n/* HAS_FAST_STDIO:\n *\tThis symbol, if defined, indicates that the \"fast stdio\"\n *\tis available to manipulate the stdio buffers directly.\n */\n#$d_faststdio HAS_FAST_STDIO\t\t/**/\n\n/* HAS_FCHDIR:\n *\tThis symbol, if defined, indicates that the fchdir routine is\n *\tavailable to change directory using a file descriptor.\n */\n#$d_fchdir HAS_FCHDIR\t\t/**/\n\n/* FCNTL_CAN_LOCK:\n *\tThis symbol, if defined, indicates that fcntl() can be used\n *\tfor file locking.  Normally on Unix systems this is defined.\n *\tIt may be undefined on VMS.\n */\n#$d_fcntl_can_lock FCNTL_CAN_LOCK\t\t/**/\n\n/* HAS_FDCLOSE:\n *\tThis symbol, if defined, indicates that the fdclose routine is\n *\tavailable to free a FILE structure without closing the underlying\n *\tfile descriptor.  This function appeared in FreeBSD 10.2.\n */\n#$d_fdclose HAS_FDCLOSE\t\t/**/\n\n/* HAS_FDIM:\n *\tThis symbol, if defined, indicates that the fdim routine is\n *\tavailable to do the positive difference function.\n */\n#$d_fdim HAS_FDIM\t\t/**/\n\n/* HAS_FEGETROUND:\n *\tThis symbol, if defined, indicates that the fegetround routine is\n *\tavailable to return the macro corresponding to the current rounding\n *\tmode.\n */\n#$d_fegetround HAS_FEGETROUND\t/**/\n\n/* HAS_FINITE:\n *\tThis symbol, if defined, indicates that the finite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n#$d_finite HAS_FINITE\t\t/**/\n\n/* HAS_FINITEL:\n *\tThis symbol, if defined, indicates that the finitel routine is\n *\tavailable to check whether a long double is finite\n *\t(non-infinity non-NaN).\n */\n#$d_finitel HAS_FINITEL\t\t/**/\n\n/* HAS_FLOCK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the flock() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int flock(int, int);\n */\n#$d_flockproto\tHAS_FLOCK_PROTO\t/**/\n\n/* HAS_FMA:\n *\tThis symbol, if defined, indicates that the fma routine is\n *\tavailable to do the multiply-add function.\n */\n#$d_fma HAS_FMA\t\t/**/\n\n/* HAS_FMAX:\n *\tThis symbol, if defined, indicates that the fmax routine is\n *\tavailable to do the maximum function.\n */\n#$d_fmax HAS_FMAX\t\t/**/\n\n/* HAS_FMIN:\n *\tThis symbol, if defined, indicates that the fmin routine is\n *\tavailable to do the minimum function.\n */\n#$d_fmin HAS_FMIN\t\t/**/\n\n/* HAS_FP_CLASS:\n *\tThis symbol, if defined, indicates that the fp_class routine is\n *\tavailable to classify doubles.  Available for example in Digital UNIX.\n *\tThe returned values are defined in <math.h> and are:\n *\n *\tFP_SNAN           Signaling NaN (Not-a-Number)\n *\tFP_QNAN           Quiet NaN (Not-a-Number)\n *\tFP_POS_INF        +infinity\n *\tFP_NEG_INF        -infinity\n *\tFP_POS_NORM       Positive normalized\n *\tFP_NEG_NORM       Negative normalized\n *\tFP_POS_DENORM     Positive denormalized\n *\tFP_NEG_DENORM     Negative denormalized\n *\tFP_POS_ZERO       +0.0 (positive zero)\n *\tFP_NEG_ZERO       -0.0 (negative zero)\n */\n#$d_fp_class HAS_FP_CLASS\t\t/**/\n\n/* HAS_FP_CLASSL:\n *\tThis symbol, if defined, indicates that the fp_classl routine is\n *\tavailable to classify long doubles.  Available for example in\n *\tDigital UNIX.  See for possible values HAS_FP_CLASS.\n */\n#$d_fp_classl HAS_FP_CLASSL\t\t/**/\n\n/* HAS_FPCLASS:\n *\tThis symbol, if defined, indicates that the fpclass routine is\n *\tavailable to classify doubles.  Available for example in Solaris/SVR4.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n#$d_fpclass HAS_FPCLASS\t\t/**/\n\n/* HAS_FPCLASSIFY:\n *\tThis symbol, if defined, indicates that the fpclassify routine is\n *\tavailable to classify doubles.  Available for example in HP-UX.\n *\tThe returned values are defined in <math.h> and are\n *\n *\t  FP_NORMAL     Normalized\n *\t  FP_ZERO       Zero\n *\t  FP_INFINITE   Infinity\n *\t  FP_SUBNORMAL  Denormalized\n *\t  FP_NAN        NaN\n *\n */\n/* HAS_FP_CLASSIFY:\n *\tThis symbol, if defined, indicates that the fp_classify routine is\n *\tavailable to classify doubles. The values are defined in <math.h>\n *\n *\t  FP_NORMAL     Normalized\n *\t  FP_ZERO       Zero\n *\t  FP_INFINITE   Infinity\n *\t  FP_SUBNORMAL  Denormalized\n *\t  FP_NAN        NaN\n *\n */\n#$d_fpclassify\tHAS_FPCLASSIFY\t\t/**/\n#$d_fp_classify\tHAS_FP_CLASSIFY\t\t/**/\n\n/* HAS_FPCLASSL:\n *\tThis symbol, if defined, indicates that the fpclassl routine is\n *\tavailable to classify long doubles.  Available for example in IRIX.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n#$d_fpclassl HAS_FPCLASSL\t\t/**/\n\n/* HAS_FPGETROUND:\n *\tThis symbol, if defined, indicates that the fpgetround routine is\n *\tavailable to get the floating point rounding mode.\n */\n#$d_fpgetround HAS_FPGETROUND\t\t/**/\n\n/* HAS_FPOS64_T:\n *\tThis symbol will be defined if the C compiler supports fpos64_t.\n */\n#$d_fpos64_t\tHAS_FPOS64_T\t/**/\n\n/* HAS_FREXPL:\n *\tThis symbol, if defined, indicates that the frexpl routine is\n *\tavailable to break a long double floating-point number into\n *\ta normalized fraction and an integral power of 2.\n */\n#$d_frexpl HAS_FREXPL\t\t/**/\n\n/* HAS_STRUCT_FS_DATA:\n *\tThis symbol, if defined, indicates that the struct fs_data\n *\tto do statfs() is supported.\n */\n#$d_fs_data_s HAS_STRUCT_FS_DATA\t/**/\n\n/* HAS_FCHMODAT:\n *\tThis symbol is defined if the fchmodat() routine is available.\n */\n/* HAS_LINKAT:\n *\tThis symbol is defined if the linkat() routine is available.\n */\n/* HAS_OPENAT:\n *\tThis symbol is defined if the openat() routine is available.\n */\n/* HAS_RENAMEAT:\n *\tThis symbol is defined if the renameat() routine is available.\n */\n/* HAS_UNLINKAT:\n *\tThis symbol is defined if the unlinkat() routine is available.\n */\n#$d_fchmodat\tHAS_FCHMODAT\t/**/\n#$d_linkat\tHAS_LINKAT\t/**/\n#$d_openat\tHAS_OPENAT\t/**/\n#$d_renameat\tHAS_RENAMEAT\t/**/\n#$d_unlinkat\tHAS_UNLINKAT\t/**/\n\n/* HAS_FSEEKO:\n *\tThis symbol, if defined, indicates that the fseeko routine is\n *\tavailable to fseek beyond 32 bits (useful for ILP32 hosts).\n */\n#$d_fseeko HAS_FSEEKO\t\t/**/\n\n/* HAS_FSTATFS:\n *\tThis symbol, if defined, indicates that the fstatfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n#$d_fstatfs HAS_FSTATFS\t\t/**/\n\n/* HAS_FSYNC:\n *\tThis symbol, if defined, indicates that the fsync routine is\n *\tavailable to write a file's modified data and attributes to\n *\tpermanent storage.\n */\n#$d_fsync HAS_FSYNC\t\t/**/\n\n/* HAS_FTELLO:\n *\tThis symbol, if defined, indicates that the ftello routine is\n *\tavailable to ftell beyond 32 bits (useful for ILP32 hosts).\n */\n#$d_ftello HAS_FTELLO\t\t/**/\n\n/* HAS_FUTIMES:\n *\tThis symbol, if defined, indicates that the futimes routine is\n *\tavailable to change file descriptor time stamps with struct timevals.\n */\n#$d_futimes HAS_FUTIMES\t\t/**/\n\n/* HAS_GAI_STRERROR:\n *\tThis symbol, if defined, indicates that the gai_strerror routine\n *\tis available to translate error codes returned by getaddrinfo()\n *\tinto human readable strings.\n */\n#$d_gai_strerror HAS_GAI_STRERROR\t/**/\n\n/* HAS_GETADDRINFO:\n *\tThis symbol, if defined, indicates that the getaddrinfo() function\n *\tis available for use.\n */\n#$d_getaddrinfo HAS_GETADDRINFO\t\t/**/\n\n/* HAS_GETCWD:\n *\tThis symbol, if defined, indicates that the getcwd routine is\n *\tavailable to get the current working directory.\n */\n#$d_getcwd HAS_GETCWD\t\t/**/\n\n/* HAS_GETESPWNAM:\n *\tThis symbol, if defined, indicates that the getespwnam system call is\n *\tavailable to retrieve enhanced (shadow) password entries by name.\n */\n#$d_getespwnam HAS_GETESPWNAM\t\t/**/\n\n/* HAS_GETFSSTAT:\n *\tThis symbol, if defined, indicates that the getfsstat routine is\n *\tavailable to stat filesystems in bulk.\n */\n#$d_getfsstat HAS_GETFSSTAT\t\t/**/\n\n/* HAS_GETITIMER:\n *\tThis symbol, if defined, indicates that the getitimer routine is\n *\tavailable to return interval timers.\n */\n#$d_getitimer HAS_GETITIMER\t\t/**/\n\n/* HAS_GETMNT:\n *\tThis symbol, if defined, indicates that the getmnt routine is\n *\tavailable to get filesystem mount info by filename.\n */\n#$d_getmnt HAS_GETMNT\t\t/**/\n\n/* HAS_GETMNTENT:\n *\tThis symbol, if defined, indicates that the getmntent routine is\n *\tavailable to iterate through mounted file systems to get their info.\n */\n#$d_getmntent HAS_GETMNTENT\t\t/**/\n\n/* HAS_GETNAMEINFO:\n *\tThis symbol, if defined, indicates that the getnameinfo() function\n *\tis available for use.\n */\n#$d_getnameinfo HAS_GETNAMEINFO\t\t/**/\n\n/* HAS_GETPRPWNAM:\n *\tThis symbol, if defined, indicates that the getprpwnam system call is\n *\tavailable to retrieve protected (shadow) password entries by name.\n */\n#$d_getprpwnam HAS_GETPRPWNAM\t\t/**/\n\n/* HAS_GETSPNAM:\n *\tThis symbol, if defined, indicates that the getspnam system call is\n *\tavailable to retrieve SysV shadow password entries by name.\n */\n#$d_getspnam HAS_GETSPNAM\t\t/**/\n\n/* HAS_HASMNTOPT:\n *\tThis symbol, if defined, indicates that the hasmntopt routine is\n *\tavailable to query the mount options of file systems.\n */\n#$d_hasmntopt HAS_HASMNTOPT\t\t/**/\n\n/* HAS_HYPOT:\n *\tThis symbol, if defined, indicates that the hypot routine is\n *\tavailable to do the hypotenuse function.\n */\n#$d_hypot HAS_HYPOT\t\t/**/\n\n/* HAS_ILOGB:\n *\tThis symbol, if defined, indicates that the ilogb routine is\n *\tavailable to get integer exponent of a floating-point value.\n */\n#$d_ilogb HAS_ILOGB\t\t/**/\n\n/* HAS_ILOGBL:\n *\tThis symbol, if defined, indicates that the ilogbl routine is\n *\tavailable.  If scalbnl is also present we can emulate frexpl.\n */\n#$d_ilogbl HAS_ILOGBL\t\t/**/\n\n/* HAS_INETNTOP:\n *\tThis symbol, if defined, indicates that the inet_ntop() function\n *\tis available to parse IPv4 and IPv6 strings.\n */\n#$d_inetntop HAS_INETNTOP\t\t/**/\n\n/* HAS_INETPTON:\n *\tThis symbol, if defined, indicates that the inet_pton() function\n *\tis available to parse IPv4 and IPv6 strings.\n */\n#$d_inetpton HAS_INETPTON\t\t/**/\n\n/* HAS_INT64_T:\n *\tThis symbol will defined if the C compiler supports int64_t.\n *\tUsually the <inttypes.h> needs to be included, but sometimes\n *\t<sys/types.h> is enough.\n */\n#$d_int64_t     HAS_INT64_T               /**/\n\n/* HAS_ISBLANK:\n *\tThis manifest constant lets the C program know that isblank\n *\tis available.\n */\n#$d_isblank HAS_ISBLANK\t\t/**/\n\n/* HAS_ISFINITE:\n *\tThis symbol, if defined, indicates that the isfinite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n#$d_isfinite HAS_ISFINITE\t\t/**/\n\n/* HAS_ISFINITEL:\n *\tThis symbol, if defined, indicates that the isfinitel routine is\n *\tavailable to check whether a long double is finite.\n *\t(non-infinity non-NaN).\n */\n#$d_isfinitel HAS_ISFINITEL\t\t/**/\n\n/* HAS_ISINF:\n *\tThis symbol, if defined, indicates that the isinf routine is\n *\tavailable to check whether a double is an infinity.\n */\n#$d_isinf HAS_ISINF\t\t/**/\n\n/* HAS_ISINFL:\n *\tThis symbol, if defined, indicates that the isinfl routine is\n *\tavailable to check whether a long double is an infinity.\n */\n#$d_isinfl HAS_ISINFL\t\t/**/\n\n/* HAS_ISLESS:\n *\tThis symbol, if defined, indicates that the isless routine is\n *\tavailable to do the isless function.\n */\n#$d_isless HAS_ISLESS\t\t/**/\n\n/* HAS_ISNAN:\n *\tThis symbol, if defined, indicates that the isnan routine is\n *\tavailable to check whether a double is a NaN.\n */\n#$d_isnan HAS_ISNAN\t\t/**/\n\n/* HAS_ISNANL:\n *\tThis symbol, if defined, indicates that the isnanl routine is\n *\tavailable to check whether a long double is a NaN.\n */\n#$d_isnanl HAS_ISNANL\t\t/**/\n\n/* HAS_ISNORMAL:\n *\tThis symbol, if defined, indicates that the isnormal routine is\n *\tavailable to check whether a double is normal (non-zero normalized).\n */\n#$d_isnormal HAS_ISNORMAL\t\t/**/\n\n/* HAS_J0:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tj0() function is available for Bessel functions of the first\n *\tkind of the order zero, for doubles.\n */\n/* HAS_J0L:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tj0l() function is available for Bessel functions of the first\n *\tkind of the order zero, for long doubles.\n */\n#$d_j0\tHAS_J0\t\t/**/\n#$d_j0l\tHAS_J0L\t\t/**/\n\n/* HAS_LC_MONETARY_2008:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable and has the additional members added in POSIX 1003.1-2008.\n */\n#$d_lc_monetary_2008 HAS_LC_MONETARY_2008\t\t/**/\n\n/* HAS_LDBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol LDBL_DIG, which is the number\n *\tof significant digits in a long double precision number. Unlike\n *\tfor DBL_DIG, there's no good guess for LDBL_DIG if it is undefined.\n */\n#$d_ldbl_dig HAS_LDBL_DIG\t/* */\n\n/* HAS_LGAMMA:\n *\tThis symbol, if defined, indicates that the lgamma routine is\n *\tavailable to do the log gamma function.  See also HAS_TGAMMA and\n *\tHAS_LGAMMA_R.\n */\n#$d_lgamma HAS_LGAMMA\t\t/**/\n\n/* HAS_LGAMMA_R:\n *\tThis symbol, if defined, indicates that the lgamma_r routine is\n *\tavailable to do the log gamma function without using the global\n *\tsigngam variable.\n */\n#$d_lgamma_r HAS_LGAMMA_R\t\t/**/\n\n/* LIBM_LIB_VERSION:\n *\tThis symbol, if defined, indicates that libm exports _LIB_VERSION\n *\tand that math.h defines the enum to manipulate it.\n */\n#$d_libm_lib_version LIBM_LIB_VERSION\t\t/**/\n\n/* HAS_LLRINT:\n *\tThis symbol, if defined, indicates that the llrint routine is\n *\tavailable to return the long long value closest to a double\n *\t(according to the current rounding mode).\n */\n#$d_llrint HAS_LLRINT\t\t/**/\n\n/* HAS_LLRINTL:\n *\tThis symbol, if defined, indicates that the llrintl routine is\n *\tavailable to return the long long value closest to a long double\n *\t(according to the current rounding mode).\n */\n#$d_llrintl HAS_LLRINTL\t\t/**/\n\n/* HAS_LLROUND:\n *\tThis symbol, if defined, indicates that the llround routine is\n *\tavailable to return the nearest long long value.\n */\n#$d_llround HAS_LLROUND\t\t/**/\n\n/* HAS_LLROUNDL:\n *\tThis symbol, if defined, indicates that the llroundl routine is\n *\tavailable to return the nearest long long value away from zero of\n *\tthe long double argument value.\n */\n#$d_llroundl HAS_LLROUNDL\t\t/**/\n\n/* HAS_LOG1P:\n *\tThis symbol, if defined, indicates that the log1p routine is\n *\tavailable to do the logarithm of 1 plus argument function.\n */\n#$d_log1p HAS_LOG1P\t\t/**/\n\n/* HAS_LOG2:\n *\tThis symbol, if defined, indicates that the log2 routine is\n *\tavailable to do the log2 function.\n */\n#$d_log2 HAS_LOG2\t\t/**/\n\n/* HAS_LOGB:\n *\tThis symbol, if defined, indicates that the logb routine is\n *\tavailable to do the logb function.\n */\n#$d_logb HAS_LOGB\t\t/**/\n\n/* HAS_LRINT:\n *\tThis symbol, if defined, indicates that the lrint routine is\n *\tavailable to return the integral value closest to a double\n *\t(according to the current rounding mode).\n */\n#$d_lrint HAS_LRINT\t\t/**/\n\n/* HAS_LRINTL:\n *\tThis symbol, if defined, indicates that the lrintl routine is\n *\tavailable to return the integral value closest to a long double\n *\t(according to the current rounding mode).\n */\n#$d_lrintl HAS_LRINTL\t\t/**/\n\n/* HAS_LROUND:\n *\tThis symbol, if defined, indicates that the lround routine is\n *\tavailable to return the nearest integral value.\n */\n#$d_lround HAS_LROUND\t\t/**/\n\n/* HAS_LROUNDL:\n *\tThis symbol, if defined, indicates that the lroundl routine is\n *\tavailable to return the nearest integral value away from zero of\n *\tthe long double argument value.\n */\n#$d_lroundl HAS_LROUNDL\t\t/**/\n\n/* HAS_MADVISE:\n *\tThis symbol, if defined, indicates that the madvise system call is\n *\tavailable to map a file into memory.\n */\n#$d_madvise HAS_MADVISE\t\t/**/\n\n/* HAS_MALLOC_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_size\n *\troutine is available for use.\n */\n#$d_malloc_size HAS_MALLOC_SIZE\t\t/**/\n\n/* HAS_MALLOC_GOOD_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_good_size\n *\troutine is available for use.\n */\n#$d_malloc_good_size HAS_MALLOC_GOOD_SIZE\t/**/\n\n/* HAS_MEMMEM:\n *\tThis symbol, if defined, indicates that the memmem routine is\n *\tavailable to return a pointer to the start of the first occurance\n *\tof a substring in a memory area (or NULL if not found).\n *\tIn glibc, memmem is a GNU extension.  The function is visible in\n *\tlibc, but the prototype is only visible if _GNU_SOURCE is #defined.\n *\tThus we only define this if both the prototype and symbol are found.\n */\n#$d_memmem HAS_MEMMEM\t\t/**/\n\n/* HAS_MEMRCHR:\n *\tThis symbol, if defined, indicates that the memrchr routine is\n *\tavailable to return a pointer to the last occurrence of a byte in\n *\ta memory area (or NULL if not found).\n */\n#$d_memrchr HAS_MEMRCHR\t\t/**/\n\n/* HAS_MKDTEMP:\n *\tThis symbol, if defined, indicates that the mkdtemp routine is\n *\tavailable to exclusively create a uniquely named temporary directory.\n */\n#$d_mkdtemp HAS_MKDTEMP\t\t/**/\n\n/* HAS_MKOSTEMP:\n *\tThis symbol, if defined, indicates that the mkostemp routine is\n *\tavailable to exclusively create and open a uniquely named (with a\n *\tsuffix) temporary file.\n */\n#$d_mkostemp HAS_MKOSTEMP\t/**/\n\n/* HAS_MKSTEMPS:\n *\tThis symbol, if defined, indicates that the mkstemps routine is\n *\tavailable to exclusively create and open a uniquely named\n *\t(with a suffix) temporary file.\n */\n#$d_mkstemps HAS_MKSTEMPS\t\t/**/\n\n/* HAS_MODFL:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tavailable to split a long double x into a fractional part f and\n *\tan integer part i such that |f| < 1.0 and (f + i) = x.\n */\n/* HAS_MODFL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the modfl() function.  Otherwise, it is up\n *\tto the program to supply one.\n */\n#$d_modfl HAS_MODFL\t\t/**/\n#$d_modflproto HAS_MODFL_PROTO\t\t/**/\n\n/* HAS_MPROTECT:\n *\tThis symbol, if defined, indicates that the mprotect system call is\n *\tavailable to modify the access protection of a memory mapped file.\n */\n#$d_mprotect HAS_MPROTECT\t\t/**/\n\n/* HAS_STRUCT_MSGHDR:\n *\tThis symbol, if defined, indicates that the struct msghdr\n *\tis supported.\n */\n#$d_msghdr_s HAS_STRUCT_MSGHDR\t/**/\n\n/* HAS_NAN:\n *\tThis symbol, if defined, indicates that the nan routine is\n *\tavailable to generate NaN.\n */\n#$d_nan HAS_NAN\t\t/**/\n\n/* HAS_NANOSLEEP:\n *\tThis symbol, if defined, indicates that the nanosleep\n *\tsystem call is available to sleep with 1E-9 sec accuracy.\n */\n#$d_nanosleep HAS_NANOSLEEP\t\t/**/\n\n/* HAS_NEARBYINT:\n *\tThis symbol, if defined, indicates that the nearbyint routine is\n *\tavailable to return the integral value closest to (according to\n *\tthe current rounding mode) to x.\n */\n#$d_nearbyint HAS_NEARBYINT\t\t/**/\n\n/* HAS_NEWLOCALE:\n *\tThis symbol, if defined, indicates that the newlocale routine is\n *\tavailable to return a new locale object or modify an existing\n *\tlocale object.\n */\n/* HAS_FREELOCALE:\n *\tThis symbol, if defined, indicates that the freelocale routine is\n *\tavailable to deallocates the resources associated with a locale object.\n */\n/* HAS_USELOCALE:\n *\tThis symbol, if defined, indicates that the uselocale routine is\n *\tavailable to set the current locale for the calling thread.\n */\n/* HAS_DUPLOCALE:\n *\tThis symbol, if defined, indicates that the duplocale routine is\n *\tavailable to duplicate a locale object.\n */\n/* HAS_QUERYLOCALE:\n *\tThis symbol, if defined, indicates that the querylocale routine is\n *\tavailable to return the name of the locale for a category mask.\n */\n/* I_XLOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <xlocale.h> to get uselocale() and its friends.\n */\n#$d_newlocale\tHAS_NEWLOCALE\t/**/\n#$d_freelocale\tHAS_FREELOCALE\t/**/\n#$d_uselocale\tHAS_USELOCALE\t/**/\n#$d_duplocale\tHAS_DUPLOCALE\t/**/\n#$d_querylocale\tHAS_QUERYLOCALE\t/**/\n#$i_xlocale\tI_XLOCALE               /**/\n\n/* HAS_NEXTAFTER:\n *\tThis symbol, if defined, indicates that the nextafter routine is\n *\tavailable to return the next machine representable double from\n *\tx in direction y.\n */\n#$d_nextafter HAS_NEXTAFTER\t\t/**/\n\n/* HAS_NEXTTOWARD:\n *\tThis symbol, if defined, indicates that the nexttoward routine is\n *\tavailable to return the next machine representable long double from\n *\tx in direction y.\n */\n#$d_nexttoward HAS_NEXTTOWARD\t\t/**/\n\n/* HAS_NL_LANGINFO:\n *\tThis symbol, if defined, indicates that the nl_langinfo routine is\n *\tavailable to return local data.  You will also need <langinfo.h>\n *\tand therefore I_LANGINFO.\n */\n#$d_nl_langinfo HAS_NL_LANGINFO\t\t/**/\n\n/* HAS_OFF64_T:\n *\tThis symbol will be defined if the C compiler supports off64_t.\n */\n#$d_off64_t\tHAS_OFF64_T\t\t/**/\n\n/* HAS_PIPE2:\n *\tThis symbol, if defined, indicates that the pipe2 routine is\n *\tavailable to create an inter-process channel.\n */\n#$d_pipe2 HAS_PIPE2\t\t/**/\n\n/* HAS_PRCTL:\n *\tThis symbol, if defined, indicates that the prctl routine is\n *\tavailable to set process title.\n *\tNote that there are at least two prctl variants: Linux and Irix.\n *\tWhile they are somewhat similar, they are incompatible.\n */\n/* HAS_PRCTL_SET_NAME:\n *\tThis symbol, if defined, indicates that the prctl routine is\n *\tavailable to set process title and supports PR_SET_NAME.\n */\n#$d_prctl HAS_PRCTL\t\t/**/\n#$d_prctl_set_name HAS_PRCTL_SET_NAME\t\t/**/\n\n/* HAS_PROCSELFEXE:\n *\tThis symbol is defined if PROCSELFEXE_PATH is a symlink\n *\tto the absolute pathname of the executing program.\n */\n/* PROCSELFEXE_PATH:\n *\tIf HAS_PROCSELFEXE is defined this symbol is the filename\n *\tof the symbolic link pointing to the absolute pathname of\n *\tthe executing program.\n */\n#$d_procselfexe HAS_PROCSELFEXE\t/**/\n#if defined(HAS_PROCSELFEXE) && !defined(PROCSELFEXE_PATH)\n#define PROCSELFEXE_PATH\t$procselfexe\t/**/\n#endif\n\n/* HAS_PTHREAD_ATTR_SETSCOPE:\n *\tThis symbol, if defined, indicates that the pthread_attr_setscope\n *\tsystem call is available to set the contention scope attribute of\n *\ta thread attribute object.\n */\n#$d_pthread_attr_setscope HAS_PTHREAD_ATTR_SETSCOPE\t\t/**/\n\n/* HAS_PTRDIFF_T:\n *\tThis symbol will be defined if the C compiler supports ptrdiff_t.\n */\n#$d_ptrdiff_t\tHAS_PTRDIFF_T\t\t/**/\n\n/* HAS_READV:\n *\tThis symbol, if defined, indicates that the readv routine is\n *\tavailable to do gather reads.  You will also need <sys/uio.h>\n *\tand there I_SYSUIO.\n */\n#$d_readv HAS_READV\t\t/**/\n\n/* HAS_RECVMSG:\n *\tThis symbol, if defined, indicates that the recvmsg routine is\n *\tavailable to send structured socket messages.\n */\n#$d_recvmsg HAS_RECVMSG\t\t/**/\n\n/* HAS_REMAINDER:\n *\tThis symbol, if defined, indicates that the remainder routine is\n *\tavailable to return the floating-point remainder.\n */\n#$d_remainder HAS_REMAINDER\t\t/**/\n\n/* HAS_REMQUO:\n *\tThis symbol, if defined, indicates that the remquo routine is\n *\tavailable to return the remainder and part of quotient.\n */\n#$d_remquo HAS_REMQUO\t\t/**/\n\n/* HAS_RINT:\n *\tThis symbol, if defined, indicates that the rint routine is\n *\tavailable to return the nearest integral value to x as double\n *\tusing the current rounding mode.\n */\n#$d_rint HAS_RINT\t\t/**/\n\n/* HAS_ROUND:\n *\tThis symbol, if defined, indicates that the round routine is\n *\tavailable to round to nearest integer, away from zero.\n */\n#$d_round HAS_ROUND\t\t/**/\n\n/* HAS_SBRK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sbrk() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern void* sbrk(int);\n *\t\textern void* sbrk(size_t);\n */\n#$d_sbrkproto\tHAS_SBRK_PROTO\t/**/\n\n/* HAS_SCALBN:\n *\tThis symbol, if defined, indicates that the scalbn routine is\n *\tavailable to multiply floating-point number by integral power\n *\tof radix.\n */\n#$d_scalbn HAS_SCALBN\t\t/**/\n\n/* HAS_SCALBNL:\n *\tThis symbol, if defined, indicates that the scalbnl routine is\n *\tavailable.  If ilogbl is also present we can emulate frexpl.\n */\n#$d_scalbnl HAS_SCALBNL\t\t/**/\n\n/* HAS_SENDMSG:\n *\tThis symbol, if defined, indicates that the sendmsg routine is\n *\tavailable to send structured socket messages.\n */\n#$d_sendmsg HAS_SENDMSG\t\t/**/\n\n/* HAS_SETITIMER:\n *\tThis symbol, if defined, indicates that the setitimer routine is\n *\tavailable to set interval timers.\n */\n#$d_setitimer HAS_SETITIMER\t\t/**/\n\n/* HAS_SETLOCALE:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable to handle locale-specific ctype implementations.\n */\n/* SETLOCALE_ACCEPTS_ANY_LOCALE_NAME:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable and it accepts any input locale name as valid.\n */\n#$d_setlocale HAS_SETLOCALE\t/**/\n#$d_setlocale_accepts_any_locale_name SETLOCALE_ACCEPTS_ANY_LOCALE_NAME\t/**/\n\n/* HAS_SETPROCTITLE:\n *\tThis symbol, if defined, indicates that the setproctitle routine is\n *\tavailable to set process title.\n */\n#$d_setproctitle HAS_SETPROCTITLE\t\t/**/\n\n/* HAS_SIGNBIT:\n *\tThis symbol, if defined, indicates that the signbit routine is\n *\tavailable to check if the given number has the sign bit set.\n *\tThis should include correct testing of -0.0.  This will only be set\n *\tif the signbit() routine is safe to use with the NV type used internally\n *\tin perl.  Users should call Perl_signbit(), which will be #defined to\n *\tthe system's signbit() function or macro if this symbol is defined.\n */\n#$d_signbit HAS_SIGNBIT\t\t/**/\n\n/* HAS_SIGPROCMASK:\n *\tThis symbol, if defined, indicates that the sigprocmask\n *\tsystem call is available to examine or change the signal mask\n *\tof the calling process.\n */\n#$d_sigprocmask HAS_SIGPROCMASK\t\t/**/\n\n/* USE_SITECUSTOMIZE:\n *\tThis symbol, if defined, indicates that sitecustomize should\n *\tbe used.\n */\n#ifndef USE_SITECUSTOMIZE\n#$usesitecustomize\tUSE_SITECUSTOMIZE\t\t/**/\n#endif\n\n/* HAS_SNPRINTF:\n *\tThis symbol, if defined, indicates that the snprintf () library\n *\tfunction is available for use.\n */\n/* HAS_VSNPRINTF:\n *\tThis symbol, if defined, indicates that the vsnprintf () library\n *\tfunction is available for use.\n */\n#$d_snprintf HAS_SNPRINTF\t/**/\n#$d_vsnprintf HAS_VSNPRINTF\t/**/\n\n/* HAS_SOCKATMARK:\n *\tThis symbol, if defined, indicates that the sockatmark routine is\n *\tavailable to test whether a socket is at the out-of-band mark.\n */\n#$d_sockatmark HAS_SOCKATMARK\t\t/**/\n\n/* HAS_SOCKATMARK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sockatmark() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int sockatmark(int);\n */\n#$d_sockatmarkproto\tHAS_SOCKATMARK_PROTO\t/**/\n\n/* HAS_SOCKS5_INIT:\n *\tThis symbol, if defined, indicates that the socks5_init routine is\n *\tavailable to initialize SOCKS 5.\n */\n#$d_socks5_init HAS_SOCKS5_INIT\t\t/**/\n\n/* HAS_SQRTL:\n *\tThis symbol, if defined, indicates that the sqrtl routine is\n *\tavailable to do long double square roots.\n */\n#$d_sqrtl HAS_SQRTL\t\t/**/\n\n/* HAS_SETRESGID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresgid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresgid(uid_t ruid, uid_t euid, uid_t suid);\n */\n#$d_sresgproto\tHAS_SETRESGID_PROTO\t/**/\n\n/* HAS_SETRESUID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresuid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresuid(uid_t ruid, uid_t euid, uid_t suid);\n */\n#$d_sresuproto\tHAS_SETRESUID_PROTO\t/**/\n\n/* HAS_STRUCT_STATFS_F_FLAGS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tdoes have the f_flags member containing the mount flags of\n *\tthe filesystem containing the file.\n *\tThis kind of struct statfs is coming from <sys/mount.h> (BSD 4.3),\n *\tnot from <sys/statfs.h> (SYSV).  Older BSDs (like Ultrix) do not\n *\thave statfs() and struct statfs, they have ustat() and getmnt()\n *\twith struct ustat and struct fs_data.\n */\n#$d_statfs_f_flags HAS_STRUCT_STATFS_F_FLAGS\t\t/**/\n\n/* HAS_STRUCT_STATFS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tto do statfs() is supported.\n */\n#$d_statfs_s HAS_STRUCT_STATFS\t/**/\n\n/* HAS_FSTATVFS:\n *\tThis symbol, if defined, indicates that the fstatvfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n#$d_fstatvfs HAS_FSTATVFS\t\t/**/\n\n/* HAS_STRERROR_L:\n *\tThis symbol, if defined, indicates that the strerror_l routine is\n *\tavailable to return the error message for a given errno value in\n *\ta particular locale (identified by a locale_t object).\n */\n#$d_strerror_l HAS_STRERROR_L\t\t/**/\n\n/* HAS_STRFTIME:\n *\tThis symbol, if defined, indicates that the strftime routine is\n *\tavailable to do time formatting.\n */\n#$d_strftime HAS_STRFTIME\t\t/**/\n\n/* HAS_STRLCAT:\n *\tThis symbol, if defined, indicates that the strlcat () routine is\n *\tavailable to do string concatenation.\n */\n#$d_strlcat HAS_STRLCAT\t\t/**/\n\n/* HAS_STRLCPY:\n *\tThis symbol, if defined, indicates that the strlcpy () routine is\n *\tavailable to do string copying.\n */\n#$d_strlcpy HAS_STRLCPY\t\t/**/\n\n/* HAS_STRNLEN:\n *\tThis symbol, if defined, indicates that the strnlen () routine is\n *\tavailable to check the length of a string up to a maximum.\n */\n#$d_strnlen HAS_STRNLEN\t\t/**/\n\n/* HAS_STRTOLD:\n *\tThis symbol, if defined, indicates that the strtold routine is\n *\tavailable to convert strings to long doubles.\n */\n#$d_strtold HAS_STRTOLD\t\t/**/\n\n/* HAS_STRTOLL:\n *\tThis symbol, if defined, indicates that the strtoll routine is\n *\tavailable to convert strings to long longs.\n */\n#$d_strtoll HAS_STRTOLL\t\t/**/\n\n/* HAS_STRTOQ:\n *\tThis symbol, if defined, indicates that the strtoq routine is\n *\tavailable to convert strings to long longs (quads).\n */\n#$d_strtoq HAS_STRTOQ\t\t/**/\n\n/* HAS_STRTOULL:\n *\tThis symbol, if defined, indicates that the strtoull routine is\n *\tavailable to convert strings to unsigned long longs.\n */\n#$d_strtoull HAS_STRTOULL\t\t/**/\n\n/* HAS_STRTOUQ:\n *\tThis symbol, if defined, indicates that the strtouq routine is\n *\tavailable to convert strings to unsigned long longs (quads).\n */\n#$d_strtouq HAS_STRTOUQ\t\t/**/\n\n/* HAS_SYSCALL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the syscall() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int syscall(int,  ...);\n *\t\textern int syscall(long, ...);\n */\n#$d_syscallproto\tHAS_SYSCALL_PROTO\t/**/\n\n/* HAS_TELLDIR_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the telldir() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern long telldir(DIR*);\n */\n#$d_telldirproto\tHAS_TELLDIR_PROTO\t/**/\n\n/* HAS_TGAMMA:\n *\tThis symbol, if defined, indicates that the tgamma routine is\n *\tavailable to do the gamma function. See also HAS_LGAMMA.\n */\n#$d_tgamma HAS_TGAMMA\t\t/**/\n\n/* HAS_CTIME64:\n *\tThis symbol, if defined, indicates that the ctime64 () routine is\n *\tavailable to do the 64bit variant of ctime ()\n */\n/* HAS_LOCALTIME64:\n *\tThis symbol, if defined, indicates that the localtime64 () routine is\n *\tavailable to do the 64bit variant of localtime ()\n */\n/* HAS_GMTIME64:\n *\tThis symbol, if defined, indicates that the gmtime64 () routine is\n *\tavailable to do the 64bit variant of gmtime ()\n */\n/* HAS_MKTIME64:\n *\tThis symbol, if defined, indicates that the mktime64 () routine is\n *\tavailable to do the 64bit variant of mktime ()\n */\n/* HAS_DIFFTIME64:\n *\tThis symbol, if defined, indicates that the difftime64 () routine is\n *\tavailable to do the 64bit variant of difftime ()\n */\n/* HAS_ASCTIME64:\n *\tThis symbol, if defined, indicates that the asctime64 () routine is\n *\tavailable to do the 64bit variant of asctime ()\n */\n#$d_ctime64\tHAS_CTIME64\t\t/**/\n#$d_localtime64\tHAS_LOCALTIME64\t\t/**/\n#$d_gmtime64\tHAS_GMTIME64\t\t/**/\n#$d_mktime64\tHAS_MKTIME64\t\t/**/\n#$d_difftime64\tHAS_DIFFTIME64\t\t/**/\n#$d_asctime64\tHAS_ASCTIME64\t\t/**/\n\n/* HAS_TIMEGM:\n *\tThis symbol, if defined, indicates that the timegm routine is\n *\tavailable to do the opposite of gmtime ()\n */\n#$d_timegm HAS_TIMEGM\t\t/**/\n\n/* HAS_TOWLOWER:\n *\tThis symbol, if defined, indicates that the towlower () routine is\n *\tavailable to do case conversion.\n */\n#$d_towlower HAS_TOWLOWER\t\t/**/\n\n/* HAS_TOWUPPER:\n *\tThis symbol, if defined, indicates that the towupper () routine is\n *\tavailable to do case conversion.\n */\n#$d_towupper HAS_TOWUPPER\t\t/**/\n\n/* HAS_TRUNC:\n *\tThis symbol, if defined, indicates that the trunc routine is\n *\tavailable to round doubles towards zero.\n */\n#$d_trunc HAS_TRUNC\t\t/**/\n\n/* HAS_TRUNCL:\n *\tThis symbol, if defined, indicates that the truncl routine is\n *\tavailable. If copysignl is also present we can emulate modfl.\n */\n#$d_truncl HAS_TRUNCL\t\t/**/\n\n/* U32_ALIGNMENT_REQUIRED:\n *\tThis symbol, if defined, indicates that you must access\n *\tcharacter data through U32-aligned pointers.\n */\n#ifndef U32_ALIGNMENT_REQUIRED\n#$d_u32align U32_ALIGNMENT_REQUIRED\t/**/\n#endif\n\n/* HAS_UALARM:\n *\tThis symbol, if defined, indicates that the ualarm routine is\n *\tavailable to do alarms with microsecond granularity.\n */\n#$d_ualarm HAS_UALARM\t\t/**/\n\n/* HAS_UNORDERED:\n *\tThis symbol, if defined, indicates that the unordered routine is\n *\tavailable to check whether two doubles are unordered\n *\t(effectively: whether either of them is NaN)\n */\n#$d_unordered HAS_UNORDERED\t\t/**/\n\n/* HAS_UNSETENV:\n *\tThis symbol, if defined, indicates that the unsetenv () routine is\n *\tavailable for use.\n */\n#$d_unsetenv HAS_UNSETENV\t\t/**/\n\n/* HAS_USLEEP_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the usleep() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int usleep(useconds_t);\n */\n#$d_usleepproto\tHAS_USLEEP_PROTO\t/**/\n\n/* HAS_USTAT:\n *\tThis symbol, if defined, indicates that the ustat system call is\n *\tavailable to query file system statistics by dev_t.\n */\n#$d_ustat HAS_USTAT\t\t/**/\n\n/* HAS_WCSCMP:\n *\tThis symbol, if defined, indicates that the wcscmp routine is\n *\tavailable to compare two wide character strings.\n */\n#$d_wcscmp HAS_WCSCMP\t/**/\n\n/* HAS_WCSXFRM:\n *\tThis symbol, if defined, indicates that the wcsxfrm routine is\n *\tavailable to tranform a wide character string for wcscmp().\n */\n#$d_wcsxfrm HAS_WCSXFRM\t/**/\n\n/* HAS_WRITEV:\n *\tThis symbol, if defined, indicates that the writev routine is\n *\tavailable to do scatter writes.\n */\n#$d_writev HAS_WRITEV\t\t/**/\n\n/* DEFAULT_INC_EXCLUDES_DOT:\n *\tThis symbol, if defined, removes the legacy default behavior of\n *\tincluding '.' at the end of @INC.\n */\n#$default_inc_excludes_dot DEFAULT_INC_EXCLUDES_DOT\t/**/\n\n/* USE_DYNAMIC_LOADING:\n *\tThis symbol, if defined, indicates that dynamic loading of\n *\tsome sort is available.\n */\n#$usedl USE_DYNAMIC_LOADING\t\t/**/\n\n/* FFLUSH_NULL:\n *\tThis symbol, if defined, tells that fflush(NULL) correctly\n *\tflushes all pending stdio output without side effects. In\n *\tparticular, on some platforms calling fflush(NULL) *still*\n *\tcorrupts STDIN if it is a pipe.\n */\n/* FFLUSH_ALL:\n *\tThis symbol, if defined, tells that to flush\n *\tall pending stdio output one must loop through all\n *\tthe stdio file handles stored in an array and fflush them.\n *\tNote that if fflushNULL is defined, fflushall will not\n *\teven be probed for and will be left undefined.\n */\n#$fflushNULL\tFFLUSH_NULL\t\t/**/\n#$fflushall\tFFLUSH_ALL\t\t/**/\n\n/* I_BFD:\n *\tThis symbol, if defined, indicates that <bfd.h> exists and\n *\tcan be included.\n */\n#$i_bfd\tI_BFD\t\t/**/\n\n/* I_CRYPT:\n *\tThis symbol, if defined, indicates that <crypt.h> exists and\n *\tshould be included.\n */\n#$i_crypt\tI_CRYPT\t\t/**/\n\n/* DB_Prefix_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is u_int32_t.\n */\n/* DB_Hash_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is size_t.\n */\n/* DB_VERSION_MAJOR_CFG:\n *\tThis symbol, if defined, defines the major version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n */\n/* DB_VERSION_MINOR_CFG:\n *\tThis symbol, if defined, defines the minor version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n/* DB_VERSION_PATCH_CFG:\n *\tThis symbol, if defined, defines the patch version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n#define DB_Hash_t\t$db_hashtype\t\t/**/\n#define DB_Prefix_t\t$db_prefixtype\t\t/**/\n#define DB_VERSION_MAJOR_CFG\t$db_version_major\t/**/\n#define DB_VERSION_MINOR_CFG\t$db_version_minor\t/**/\n#define DB_VERSION_PATCH_CFG\t$db_version_patch\t/**/\n\n/* I_FENV:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <fenv.h> to get the floating point environment definitions.\n */\n#$i_fenv I_FENV\t\t/**/\n\n/* I_FP:\n *\tThis symbol, if defined, indicates that <fp.h> exists and\n *\tshould be included.\n */\n#$i_fp\tI_FP\t\t/**/\n\n/* I_FP_CLASS:\n *\tThis symbol, if defined, indicates that <fp_class.h> exists and\n *\tshould be included.\n */\n#$i_fp_class\tI_FP_CLASS\t\t/**/\n\n/* I_IEEEFP:\n *\tThis symbol, if defined, indicates that <ieeefp.h> exists and\n *\tshould be included.\n */\n#$i_ieeefp\tI_IEEEFP\t\t/**/\n\n/* I_INTTYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <inttypes.h>.\n */\n#$i_inttypes   I_INTTYPES                /**/\n\n/* I_LANGINFO:\n *\tThis symbol, if defined, indicates that <langinfo.h> exists and\n *\tshould be included.\n */\n#$i_langinfo\tI_LANGINFO\t\t/**/\n\n/* I_LIBUTIL:\n *\tThis symbol, if defined, indicates that <libutil.h> exists and\n *\tshould be included.\n */\n#$i_libutil\tI_LIBUTIL\t\t/**/\n\n/* I_MALLOCMALLOC:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <malloc/malloc.h>.\n */\n#$i_mallocmalloc I_MALLOCMALLOC\t\t/**/\n\n/* I_MNTENT:\n *\tThis symbol, if defined, indicates that <mntent.h> exists and\n *\tshould be included.\n */\n#$i_mntent\tI_MNTENT\t\t/**/\n\n/* I_NETINET_TCP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/tcp.h>.\n */\n#$i_netinettcp   I_NETINET_TCP                /**/\n\n/* I_POLL:\n *\tThis symbol, if defined, indicates that <poll.h> exists and\n *\tshould be included. (see also HAS_POLL)\n */\n#$i_poll\tI_POLL\t\t/**/\n\n/* I_PROT:\n *\tThis symbol, if defined, indicates that <prot.h> exists and\n *\tshould be included.\n */\n#$i_prot\tI_PROT\t\t/**/\n\n/* I_QUADMATH:\n *\tThis symbol, if defined, indicates that <quadmath.h> exists and\n *\tshould be included.\n */\n#$i_quadmath\tI_QUADMATH\t\t/**/\n\n/* I_SHADOW:\n *\tThis symbol, if defined, indicates that <shadow.h> exists and\n *\tshould be included.\n */\n#$i_shadow\tI_SHADOW\t\t/**/\n\n/* I_SOCKS:\n *\tThis symbol, if defined, indicates that <socks.h> exists and\n *\tshould be included.\n */\n#$i_socks\tI_SOCKS\t\t/**/\n\n/* I_STDBOOL:\n *\tThis symbol, if defined, indicates that <stdbool.h> exists and\n *\tcan be included.\n */\n#$i_stdbool\tI_STDBOOL\t\t/**/\n\n/* I_STDINT:\n *\tThis symbol, if defined, indicates that <stdint.h> exists and\n *\tshould be included.\n */\n#$i_stdint I_STDINT\t\t/**/\n\n/* I_SUNMATH:\n *\tThis symbol, if defined, indicates that <sunmath.h> exists and\n *\tshould be included.\n */\n#$i_sunmath\tI_SUNMATH\t\t/**/\n\n/* I_SYSLOG:\n *\tThis symbol, if defined, indicates that <syslog.h> exists and\n *\tshould be included.\n */\n#$i_syslog\tI_SYSLOG\t\t/**/\n\n/* I_SYSMODE:\n *\tThis symbol, if defined, indicates that <sys/mode.h> exists and\n *\tshould be included.\n */\n#$i_sysmode\tI_SYSMODE\t\t/**/\n\n/* I_SYS_MOUNT:\n *\tThis symbol, if defined, indicates that <sys/mount.h> exists and\n *\tshould be included.\n */\n#$i_sysmount\tI_SYS_MOUNT\t\t/**/\n\n/* I_SYS_STATFS:\n *\tThis symbol, if defined, indicates that <sys/statfs.h> exists.\n */\n#$i_sysstatfs\tI_SYS_STATFS\t\t/**/\n\n/* I_SYS_STATVFS:\n *\tThis symbol, if defined, indicates that <sys/statvfs.h> exists and\n *\tshould be included.\n */\n#$i_sysstatvfs\tI_SYS_STATVFS\t\t/**/\n\n/* I_SYSUTSNAME:\n *\tThis symbol, if defined, indicates that <sys/utsname.h> exists and\n *\tshould be included.\n */\n#$i_sysutsname\tI_SYSUTSNAME\t\t/**/\n\n/* I_SYS_VFS:\n *\tThis symbol, if defined, indicates that <sys/vfs.h> exists and\n *\tshould be included.\n */\n#$i_sysvfs\tI_SYS_VFS\t\t/**/\n\n/* I_USTAT:\n *\tThis symbol, if defined, indicates that <ustat.h> exists and\n *\tshould be included.\n */\n#$i_ustat\tI_USTAT\t\t/**/\n\n/* I_WCHAR:\n *\tThis symbol, if defined, indicates to the C program that <wchar.h>\n *\tis available for inclusion\n */\n#$i_wchar   I_WCHAR\t/**/\n\n/* I_WCTYPE:\n *\tThis symbol, if defined, indicates that <wctype.h> exists.\n */\n#$i_wctype\tI_WCTYPE\t\t/**/\n\n/* DOUBLEINFBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes for the double precision infinity.\n */\n/* DOUBLENANBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes (0xHH) for the double precision not-a-number.\n */\n/* LONGDBLINFBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes for the long double precision infinity.\n */\n/* LONGDBLNANBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes (0xHH) for the long double precision not-a-number.\n */\n#define DOUBLEINFBYTES  $doubleinfbytes\t\t/**/\n#define DOUBLENANBYTES  $doublenanbytes\t\t/**/\n#define LONGDBLINFBYTES $longdblinfbytes\t\t/**/\n#define LONGDBLNANBYTES $longdblnanbytes\t\t/**/\n\n/* PERL_PRIfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for output.\n */\n/* PERL_PRIgldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'g') for output.\n */\n/* PERL_PRIeldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'e') for output.\n */\n/* PERL_SCNfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for input.\n */\n/* DOUBLEKIND:\n *\tDOUBLEKIND will be one of\n *\tDOUBLE_IS_IEEE_754_32_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_32_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_LE_BE\n *\tDOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_BE_LE\n *\tDOUBLE_IS_VAX_F_FLOAT\n *\tDOUBLE_IS_VAX_D_FLOAT\n *\tDOUBLE_IS_VAX_G_FLOAT\n *\tDOUBLE_IS_IBM_SINGLE_32_BIT\n *\tDOUBLE_IS_IBM_DOUBLE_64_BIT\n *\tDOUBLE_IS_CRAY_SINGLE_64_BIT\n *\tDOUBLE_IS_UNKNOWN_FORMAT\n */\n/* DOUBLE_HAS_INF:\n *\tThis symbol, if defined, indicates that the double has\n *\tthe infinity.\n */\n/* DOUBLE_HAS_NAN:\n *\tThis symbol, if defined, indicates that the double has\n *\tthe not-a-number.\n */\n/* DOUBLE_HAS_NEGATIVE_ZERO:\n *\tThis symbol, if defined, indicates that the double has\n *\tthe negative_zero.\n */\n/* DOUBLE_HAS_SUBNORMALS:\n *\tThis symbol, if defined, indicates that the double has\n *\tthe subnormals (denormals).\n */\n/* DOUBLE_STYLE_CRAY:\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit CRAY mainframe format.\n */\n/* DOUBLE_STYLE_IBM:\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit IBM mainframe format.\n */\n/* DOUBLE_STYLE_IEEE:\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit IEEE 754.\n */\n/* DOUBLE_STYLE_VAX:\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit VAX format D or G.\n */\n#define DOUBLEKIND $doublekind\t\t/**/\n#define DOUBLE_IS_IEEE_754_32_BIT_LITTLE_ENDIAN\t1\n#define DOUBLE_IS_IEEE_754_32_BIT_BIG_ENDIAN\t2\n#define DOUBLE_IS_IEEE_754_64_BIT_LITTLE_ENDIAN\t3\n#define DOUBLE_IS_IEEE_754_64_BIT_BIG_ENDIAN\t4\n#define DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\t5\n#define DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\t6\n#define DOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_LE_BE\t7\n#define DOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_BE_LE\t8\n#define DOUBLE_IS_VAX_F_FLOAT\t9\n#define DOUBLE_IS_VAX_D_FLOAT\t10\n#define DOUBLE_IS_VAX_G_FLOAT\t11\n#define DOUBLE_IS_IBM_SINGLE_32_BIT\t12\n#define DOUBLE_IS_IBM_DOUBLE_64_BIT\t13\n#define DOUBLE_IS_CRAY_SINGLE_64_BIT\t14\n#define DOUBLE_IS_UNKNOWN_FORMAT\t\t-1\n#$d_PRIfldbl PERL_PRIfldbl\t$sPRIfldbl\t/**/\n#$d_PRIgldbl PERL_PRIgldbl\t$sPRIgldbl\t/**/\n#$d_PRIeldbl PERL_PRIeldbl\t$sPRIeldbl\t/**/\n#$d_SCNfldbl PERL_SCNfldbl\t$sSCNfldbl\t/**/\n#$d_double_has_inf DOUBLE_HAS_INF\n#$d_double_has_nan DOUBLE_HAS_NAN\n#$d_double_has_negative_zero DOUBLE_HAS_NEGATIVE_ZERO\n#$d_double_has_subnormals DOUBLE_HAS_SUBNORMALS\n#$d_double_style_cray DOUBLE_STYLE_CRAY\n#$d_double_style_ibm DOUBLE_STYLE_IBM\n#$d_double_style_ieee DOUBLE_STYLE_IEEE\n#$d_double_style_vax DOUBLE_STYLE_VAX\n\n/* DOUBLEMANTBITS:\n *\tThis symbol, if defined, tells how many mantissa bits\n *\tthere are in double precision floating point format.\n *\tNote that this is usually DBL_MANT_DIG minus one, since\n *\twith the standard IEEE 754 formats DBL_MANT_DIG includes\n *\tthe implicit bit, which doesn't really exist.\n */\n/* LONGDBLMANTBITS:\n *\tThis symbol, if defined, tells how many mantissa bits\n *\tthere are in long double precision floating point format.\n *\tNote that this can be LDBL_MANT_DIG minus one,\n *\tsince LDBL_MANT_DIG can include the IEEE 754 implicit bit.\n *\tThe common x86-style 80-bit long double does not have\n *\tan implicit bit.\n */\n/* NVMANTBITS:\n *\tThis symbol, if defined, tells how many mantissa bits\n *\t(not including implicit bit) there are in a Perl NV.\n *\tThis depends on which floating point type was chosen.\n */\n#define DOUBLEMANTBITS  $doublemantbits\n#define LONGDBLMANTBITS $longdblmantbits\n#define NVMANTBITS      $nvmantbits\n\n/* NEED_VA_COPY:\n *\tThis symbol, if defined, indicates that the system stores\n *\tthe variable argument list datatype, va_list, in a format\n *\tthat cannot be copied by simple assignment, so that some\n *\tother means must be used when copying is required.\n *\tAs such systems vary in their provision (or non-provision)\n *\tof copying mechanisms, handy.h defines a platform-\n *\tindependent macro, Perl_va_copy(src, dst), to do the job.\n */\n#$need_va_copy\tNEED_VA_COPY\t\t/**/\n\n/* IVTYPE:\n *\tThis symbol defines the C type used for Perl's IV.\n */\n/* UVTYPE:\n *\tThis symbol defines the C type used for Perl's UV.\n */\n/* I8TYPE:\n *\tThis symbol defines the C type used for Perl's I8.\n */\n/* U8TYPE:\n *\tThis symbol defines the C type used for Perl's U8.\n */\n/* I16TYPE:\n *\tThis symbol defines the C type used for Perl's I16.\n */\n/* U16TYPE:\n *\tThis symbol defines the C type used for Perl's U16.\n */\n/* I32TYPE:\n *\tThis symbol defines the C type used for Perl's I32.\n */\n/* U32TYPE:\n *\tThis symbol defines the C type used for Perl's U32.\n */\n/* I64TYPE:\n *\tThis symbol defines the C type used for Perl's I64.\n */\n/* U64TYPE:\n *\tThis symbol defines the C type used for Perl's U64.\n */\n/* NVTYPE:\n *\tThis symbol defines the C type used for Perl's NV.\n */\n/* IVSIZE:\n *\tThis symbol contains the sizeof(IV).\n */\n/* UVSIZE:\n *\tThis symbol contains the sizeof(UV).\n */\n/* I8SIZE:\n *\tThis symbol contains the sizeof(I8).\n */\n/* U8SIZE:\n *\tThis symbol contains the sizeof(U8).\n */\n/* I16SIZE:\n *\tThis symbol contains the sizeof(I16).\n */\n/* U16SIZE:\n *\tThis symbol contains the sizeof(U16).\n */\n/* I32SIZE:\n *\tThis symbol contains the sizeof(I32).\n */\n/* U32SIZE:\n *\tThis symbol contains the sizeof(U32).\n */\n/* I64SIZE:\n *\tThis symbol contains the sizeof(I64).\n */\n/* U64SIZE:\n *\tThis symbol contains the sizeof(U64).\n */\n/* NVSIZE:\n *\tThis symbol contains the sizeof(NV).\n *\tNote that some floating point formats have unused bytes.\n *\tThe most notable example is the x86* 80-bit extended precision\n *\twhich comes in byte sizes of 12 and 16 (for 32 and 64 bit\n *\tplatforms, respectively), but which only uses 10 bytes.\n *\tPerl compiled with -Duselongdouble on x86* is like this.\n */\n/* NV_PRESERVES_UV:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tcan preserve all the bits of a variable of type UVTYPE.\n */\n/* NV_PRESERVES_UV_BITS:\n *\tThis symbol contains the number of bits a variable of type NVTYPE\n *\tcan preserve of a variable of type UVTYPE.\n */\n/* NV_OVERFLOWS_INTEGERS_AT:\n *\tThis symbol gives the largest integer value that NVs can hold. This\n *\tvalue + 1.0 cannot be stored accurately. It is expressed as constant\n *\tfloating point expression to reduce the chance of decimal/binary\n *\tconversion issues. If it can not be determined, the value 0 is given.\n */\n/* NV_ZERO_IS_ALLBITS_ZERO:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tstores 0.0 in memory as all bits zero.\n */\n#define\tIVTYPE\t\t$ivtype\t\t/**/\n#define\tUVTYPE\t\t$uvtype\t\t/**/\n#define\tI8TYPE\t\t$i8type\t\t/**/\n#define\tU8TYPE\t\t$u8type\t\t/**/\n#define\tI16TYPE\t\t$i16type\t/**/\n#define\tU16TYPE\t\t$u16type\t/**/\n#define\tI32TYPE\t\t$i32type\t/**/\n#define\tU32TYPE\t\t$u32type\t/**/\n#ifdef HAS_QUAD\n#define\tI64TYPE\t\t$i64type\t/**/\n#define\tU64TYPE\t\t$u64type\t/**/\n#endif\n#define\tNVTYPE\t\t$nvtype\t\t/**/\n#define\tIVSIZE\t\t$ivsize\t\t/**/\n#define\tUVSIZE\t\t$uvsize\t\t/**/\n#define\tI8SIZE\t\t$i8size\t\t/**/\n#define\tU8SIZE\t\t$u8size\t\t/**/\n#define\tI16SIZE\t\t$i16size\t/**/\n#define\tU16SIZE\t\t$u16size\t/**/\n#define\tI32SIZE\t\t$i32size\t/**/\n#define\tU32SIZE\t\t$u32size\t/**/\n#ifdef HAS_QUAD\n#define\tI64SIZE\t\t$i64size\t/**/\n#define\tU64SIZE\t\t$u64size\t/**/\n#endif\n#define\tNVSIZE\t\t$nvsize\t\t/**/\n#$d_nv_preserves_uv\tNV_PRESERVES_UV\n#define\tNV_PRESERVES_UV_BITS\t$nv_preserves_uv_bits\n#define\tNV_OVERFLOWS_INTEGERS_AT\t($nv_overflows_integers_at)\n#$d_nv_zero_is_allbits_zero\tNV_ZERO_IS_ALLBITS_ZERO\n#if UVSIZE == 8\n#   ifdef BYTEORDER\n#       if BYTEORDER == 0x1234\n#           undef BYTEORDER\n#           define BYTEORDER 0x12345678\n#       else\n#           if BYTEORDER == 0x4321\n#               undef BYTEORDER\n#               define BYTEORDER 0x87654321\n#           endif\n#       endif\n#   endif\n#endif\n\n/* IVdf:\n *\tThis symbol defines the format string used for printing a Perl IV\n *\tas a signed decimal integer.\n */\n/* UVuf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned decimal integer.\n */\n/* UVof:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned octal integer.\n */\n/* UVxf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in lowercase abcdef.\n */\n/* UVXf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in uppercase ABCDEF.\n */\n/* NVef:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %e-ish floating point format.\n */\n/* NVff:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %f-ish floating point format.\n */\n/* NVgf:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %g-ish floating point format.\n */\n#define\tIVdf\t\t$ivdformat\t\t/**/\n#define\tUVuf\t\t$uvuformat\t\t/**/\n#define\tUVof\t\t$uvoformat\t\t/**/\n#define\tUVxf\t\t$uvxformat\t\t/**/\n#define\tUVXf\t\t$uvXUformat\t\t/**/\n#define\tNVef\t\t$nveformat\t\t/**/\n#define\tNVff\t\t$nvfformat\t\t/**/\n#define\tNVgf\t\t$nvgformat\t\t/**/\n\n/* SELECT_MIN_BITS:\n *\tThis symbol holds the minimum number of bits operated by select.\n *\tThat is, if you do select(n, ...), how many bits at least will be\n *\tcleared in the masks if some activity is detected.  Usually this\n *\tis either n or 32*ceil(n/32), especially many little-endians do\n *\tthe latter.  This is only useful if you have select(), naturally.\n */\n#define SELECT_MIN_BITS\t$selectminbits\t/**/\n\n/* ST_INO_SIZE:\n *\tThis variable contains the size of struct stat's st_ino in bytes.\n */\n/* ST_INO_SIGN:\n *\tThis symbol holds the signedness of struct stat's st_ino.\n *\t1 for unsigned, -1 for signed.\n */\n#define ST_INO_SIGN $st_ino_sign\t/* st_ino sign */\n#define ST_INO_SIZE $st_ino_size\t/* st_ino size */\n\n/* STARTPERL:\n *\tThis variable contains the string to put in front of a perl\n *\tscript to make sure (one hopes) that it runs with perl and not\n *\tsome shell.\n */\n#define STARTPERL \"$startperl\"\t\t/**/\n\n/* HAS_STDIO_STREAM_ARRAY:\n *\tThis symbol, if defined, tells that there is an array\n *\tholding the stdio streams.\n */\n/* STDIO_STREAM_ARRAY:\n *\tThis symbol tells the name of the array holding the stdio streams.\n *\tUsual values include _iob, __iob, and __sF.\n */\n#$d_stdio_stream_array\tHAS_STDIO_STREAM_ARRAY\t/**/\n#ifdef HAS_STDIO_STREAM_ARRAY\n#define STDIO_STREAM_ARRAY\t$stdio_stream_array\n#endif\n\n/* GMTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* GMTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n#define GMTIME_MAX\t\t$sGMTIME_max\t/**/\n#define GMTIME_MIN\t\t$sGMTIME_min\t/**/\n#define LOCALTIME_MAX\t$sLOCALTIME_max\t/**/\n#define LOCALTIME_MIN\t$sLOCALTIME_min\t/**/\n\n/* USE_64_BIT_INT:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be employed (be they 32 or 64 bits).  The minimal possible\n *\t64-bitness is used, just enough to get 64-bit integers into Perl.\n *\tThis may mean using for example \"long longs\", while your memory\n *\tmay still be limited to 2 gigabytes.\n */\n/* USE_64_BIT_ALL:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be used (be they 32 or 64 bits).  The maximal possible\n *\t64-bitness is employed: LP64 or ILP64, meaning that you will\n *\tbe able to use more than 2 gigabytes of memory.  This mode is\n *\teven more binary incompatible than USE_64_BIT_INT. You may not\n *\tbe able to run the resulting executable in a 32-bit CPU at all or\n *\tyou may need at least to reboot your OS to 64-bit mode.\n */\n#ifndef USE_64_BIT_INT\n#$use64bitint\tUSE_64_BIT_INT\t\t/**/\n#endif\n#ifndef USE_64_BIT_ALL\n#$use64bitall\tUSE_64_BIT_ALL\t\t/**/\n#endif\n\n/* USE_CBACKTRACE:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for backtrace.\n */\n#$usecbacktrace USE_CBACKTRACE\t\t/**/\n\n/* USE_DTRACE:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for DTrace.\n */\n#$usedtrace USE_DTRACE\t\t/**/\n\n/* USE_FAST_STDIO:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use 'fast stdio'.\n *\tDefaults to define in Perls 5.8 and earlier, to undef later.\n */\n#ifndef USE_FAST_STDIO\n#$usefaststdio\tUSE_FAST_STDIO\t\t/**/\n#endif\n\n/* USE_KERN_PROC_PATHNAME:\n *\tThis symbol, if defined, indicates that we can use sysctl with\n *\tKERN_PROC_PATHNAME to get a full path for the executable, and hence\n *\tconvert $^X to an absolute path.\n */\n#$usekernprocpathname USE_KERN_PROC_PATHNAME\t/**/\n\n/* USE_LARGE_FILES:\n *\tThis symbol, if defined, indicates that large file support\n *\tshould be used when available.\n */\n#ifndef USE_LARGE_FILES\n#$uselargefiles\tUSE_LARGE_FILES\t\t/**/\n#endif\n\n/* USE_LONG_DOUBLE:\n *\tThis symbol, if defined, indicates that long doubles should\n *\tbe used when available.\n */\n#ifndef USE_LONG_DOUBLE\n#$uselongdouble\tUSE_LONG_DOUBLE\t\t/**/\n#endif\n\n/* USE_MORE_BITS:\n *\tThis symbol, if defined, indicates that 64-bit interfaces and\n *\tlong doubles should be used when available.\n */\n#ifndef USE_MORE_BITS\n#$usemorebits\tUSE_MORE_BITS\t\t/**/\n#endif\n\n/* MULTIPLICITY:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use multiplicity.\n */\n#ifndef MULTIPLICITY\n#$usemultiplicity\tMULTIPLICITY\t\t/**/\n#endif\n\n/* USE_NSGETEXECUTABLEPATH:\n *\tThis symbol, if defined, indicates that we can use _NSGetExecutablePath\n *\tand realpath to get a full path for the executable, and hence convert\n *\t$^X to an absolute path.\n */\n#$usensgetexecutablepath USE_NSGETEXECUTABLEPATH\t/**/\n\n/* USE_PERLIO:\n *\tThis symbol, if defined, indicates that the PerlIO abstraction should\n *\tbe used throughout.  If not defined, stdio should be\n *\tused in a fully backward compatible manner.\n */\n#ifndef USE_PERLIO\n#$useperlio\tUSE_PERLIO\t\t/**/\n#endif\n\n/* USE_QUADMATH:\n *\tThis symbol, if defined, indicates that the quadmath library should\n *\tbe used when available.\n */\n#ifndef USE_QUADMATH\n#$usequadmath\tUSE_QUADMATH\t\t/**/\n#endif\n\n/* USE_SOCKS:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use socks.\n */\n#ifndef USE_SOCKS\n#$usesocks\tUSE_SOCKS\t\t/**/\n#endif\n\n/* HAS_DRAND48_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the drand48() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern double drand48(void);\n */\n#$d_drand48proto\tHAS_DRAND48_PROTO\t/**/\n\n/* HAS_GETHOST_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for gethostent(), gethostbyname(), and\n *\tgethostbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#$d_gethostprotos\tHAS_GETHOST_PROTOS\t/**/\n\n/* HAS_GETNET_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getnetent(), getnetbyname(), and\n *\tgetnetbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#$d_getnetprotos\tHAS_GETNET_PROTOS\t/**/\n\n/* HAS_GETPROTO_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getprotoent(), getprotobyname(), and\n *\tgetprotobyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#$d_getprotoprotos\tHAS_GETPROTO_PROTOS\t/**/\n\n/* HAS_GETSERV_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getservent(), getservbyname(), and\n *\tgetservbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#$d_getservprotos\tHAS_GETSERV_PROTOS\t/**/\n\n/* HAS_LSEEK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the lseek() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern off_t lseek(int, off_t, int);\n */\n#$d_lseekproto\tHAS_LSEEK_PROTO\t/**/\n\n/* Netdb_host_t:\n *\tThis symbol holds the type used for the 1st argument\n *\tto gethostbyaddr().\n */\n/* Netdb_hlen_t:\n *\tThis symbol holds the type used for the 2nd argument\n *\tto gethostbyaddr().\n */\n/* Netdb_name_t:\n *\tThis symbol holds the type used for the argument to\n *\tgethostbyname().\n */\n/* Netdb_net_t:\n *\tThis symbol holds the type used for the 1st argument to\n *\tgetnetbyaddr().\n */\n#define Netdb_host_t\t\t$netdb_host_type /**/\n#define Netdb_hlen_t\t\t$netdb_hlen_type /**/\n#define Netdb_name_t\t\t$netdb_name_type /**/\n#define Netdb_net_t\t\t$netdb_net_type /**/\n\n/* Select_fd_set_t:\n *\tThis symbol holds the type used for the 2nd, 3rd, and 4th\n *\targuments to select.  Usually, this is 'fd_set *', if HAS_FD_SET\n *\tis defined, and 'int *' otherwise.  This is only useful if you\n *\thave select(), of course.\n */\n#define Select_fd_set_t\t$selecttype\t/**/\n\n/* Sock_size_t:\n *\tThis symbol holds the type used for the size argument of\n *\tvarious socket calls (just the base type, not the pointer-to).\n */\n#define Sock_size_t\t\t$socksizetype /**/\n\n/* ARCHNAME:\n *\tThis symbol holds a string representing the architecture name.\n *\tIt may be used to construct an architecture-dependant pathname\n *\twhere library files may be held under a private library, for\n *\tinstance.\n */\n#define ARCHNAME \"$archname\"\t\t/**/\n\n/* HAS_ASCTIME_R:\n *\tThis symbol, if defined, indicates that the asctime_r routine\n *\tis available to asctime re-entrantly.\n */\n/* ASCTIME_R_PROTO:\n *\tThis symbol encodes the prototype of asctime_r.\n *\tIt is zero if d_asctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_asctime_r\n *\tis defined.\n */\n#$d_asctime_r HAS_ASCTIME_R\t/**/\n#define ASCTIME_R_PROTO $asctime_r_proto\t/**/\n\n/* HAS_CRYPT_R:\n *\tThis symbol, if defined, indicates that the crypt_r routine\n *\tis available to crypt re-entrantly.\n */\n/* CRYPT_R_PROTO:\n *\tThis symbol encodes the prototype of crypt_r.\n *\tIt is zero if d_crypt_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_crypt_r\n *\tis defined.\n */\n#$d_crypt_r HAS_CRYPT_R\t/**/\n#define CRYPT_R_PROTO $crypt_r_proto\t/**/\n\n/* HAS_CTERMID_R:\n *\tThis symbol, if defined, indicates that the ctermid_r routine\n *\tis available to ctermid re-entrantly.\n */\n/* CTERMID_R_PROTO:\n *\tThis symbol encodes the prototype of ctermid_r.\n *\tIt is zero if d_ctermid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctermid_r\n *\tis defined.\n */\n#$d_ctermid_r HAS_CTERMID_R\t/**/\n#define CTERMID_R_PROTO $ctermid_r_proto\t/**/\n\n/* HAS_CTIME_R:\n *\tThis symbol, if defined, indicates that the ctime_r routine\n *\tis available to ctime re-entrantly.\n */\n/* CTIME_R_PROTO:\n *\tThis symbol encodes the prototype of ctime_r.\n *\tIt is zero if d_ctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctime_r\n *\tis defined.\n */\n#$d_ctime_r HAS_CTIME_R\t/**/\n#define CTIME_R_PROTO $ctime_r_proto\t/**/\n\n/* HAS_DRAND48_R:\n *\tThis symbol, if defined, indicates that the drand48_r routine\n *\tis available to drand48 re-entrantly.\n */\n/* DRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of drand48_r.\n *\tIt is zero if d_drand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_drand48_r\n *\tis defined.\n */\n#$d_drand48_r HAS_DRAND48_R\t/**/\n#define DRAND48_R_PROTO $drand48_r_proto\t/**/\n\n/* HAS_ENDGRENT_R:\n *\tThis symbol, if defined, indicates that the endgrent_r routine\n *\tis available to endgrent re-entrantly.\n */\n/* ENDGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of endgrent_r.\n *\tIt is zero if d_endgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endgrent_r\n *\tis defined.\n */\n#$d_endgrent_r HAS_ENDGRENT_R\t/**/\n#define ENDGRENT_R_PROTO $endgrent_r_proto\t/**/\n\n/* HAS_ENDHOSTENT_R:\n *\tThis symbol, if defined, indicates that the endhostent_r routine\n *\tis available to endhostent re-entrantly.\n */\n/* ENDHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of endhostent_r.\n *\tIt is zero if d_endhostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endhostent_r\n *\tis defined.\n */\n#$d_endhostent_r HAS_ENDHOSTENT_R\t/**/\n#define ENDHOSTENT_R_PROTO $endhostent_r_proto\t/**/\n\n/* HAS_ENDNETENT_R:\n *\tThis symbol, if defined, indicates that the endnetent_r routine\n *\tis available to endnetent re-entrantly.\n */\n/* ENDNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of endnetent_r.\n *\tIt is zero if d_endnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endnetent_r\n *\tis defined.\n */\n#$d_endnetent_r HAS_ENDNETENT_R\t/**/\n#define ENDNETENT_R_PROTO $endnetent_r_proto\t/**/\n\n/* HAS_ENDPROTOENT_R:\n *\tThis symbol, if defined, indicates that the endprotoent_r routine\n *\tis available to endprotoent re-entrantly.\n */\n/* ENDPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of endprotoent_r.\n *\tIt is zero if d_endprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endprotoent_r\n *\tis defined.\n */\n#$d_endprotoent_r HAS_ENDPROTOENT_R\t/**/\n#define ENDPROTOENT_R_PROTO $endprotoent_r_proto\t/**/\n\n/* HAS_ENDPWENT_R:\n *\tThis symbol, if defined, indicates that the endpwent_r routine\n *\tis available to endpwent re-entrantly.\n */\n/* ENDPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of endpwent_r.\n *\tIt is zero if d_endpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endpwent_r\n *\tis defined.\n */\n#$d_endpwent_r HAS_ENDPWENT_R\t/**/\n#define ENDPWENT_R_PROTO $endpwent_r_proto\t/**/\n\n/* HAS_ENDSERVENT_R:\n *\tThis symbol, if defined, indicates that the endservent_r routine\n *\tis available to endservent re-entrantly.\n */\n/* ENDSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of endservent_r.\n *\tIt is zero if d_endservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endservent_r\n *\tis defined.\n */\n#$d_endservent_r HAS_ENDSERVENT_R\t/**/\n#define ENDSERVENT_R_PROTO $endservent_r_proto\t/**/\n\n/* HAS_GETGRENT_R:\n *\tThis symbol, if defined, indicates that the getgrent_r routine\n *\tis available to getgrent re-entrantly.\n */\n/* GETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of getgrent_r.\n *\tIt is zero if d_getgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrent_r\n *\tis defined.\n */\n#$d_getgrent_r HAS_GETGRENT_R\t/**/\n#define GETGRENT_R_PROTO $getgrent_r_proto\t/**/\n\n/* HAS_GETGRGID_R:\n *\tThis symbol, if defined, indicates that the getgrgid_r routine\n *\tis available to getgrgid re-entrantly.\n */\n/* GETGRGID_R_PROTO:\n *\tThis symbol encodes the prototype of getgrgid_r.\n *\tIt is zero if d_getgrgid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrgid_r\n *\tis defined.\n */\n#$d_getgrgid_r HAS_GETGRGID_R\t/**/\n#define GETGRGID_R_PROTO $getgrgid_r_proto\t/**/\n\n/* HAS_GETGRNAM_R:\n *\tThis symbol, if defined, indicates that the getgrnam_r routine\n *\tis available to getgrnam re-entrantly.\n */\n/* GETGRNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getgrnam_r.\n *\tIt is zero if d_getgrnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrnam_r\n *\tis defined.\n */\n#$d_getgrnam_r HAS_GETGRNAM_R\t/**/\n#define GETGRNAM_R_PROTO $getgrnam_r_proto\t/**/\n\n/* HAS_GETHOSTBYADDR_R:\n *\tThis symbol, if defined, indicates that the gethostbyaddr_r routine\n *\tis available to gethostbyaddr re-entrantly.\n */\n/* GETHOSTBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyaddr_r.\n *\tIt is zero if d_gethostbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyaddr_r\n *\tis defined.\n */\n#$d_gethostbyaddr_r HAS_GETHOSTBYADDR_R\t/**/\n#define GETHOSTBYADDR_R_PROTO $gethostbyaddr_r_proto\t/**/\n\n/* HAS_GETHOSTBYNAME_R:\n *\tThis symbol, if defined, indicates that the gethostbyname_r routine\n *\tis available to gethostbyname re-entrantly.\n */\n/* GETHOSTBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyname_r.\n *\tIt is zero if d_gethostbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyname_r\n *\tis defined.\n */\n#$d_gethostbyname_r HAS_GETHOSTBYNAME_R\t/**/\n#define GETHOSTBYNAME_R_PROTO $gethostbyname_r_proto\t/**/\n\n/* HAS_GETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the gethostent_r routine\n *\tis available to gethostent re-entrantly.\n */\n/* GETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of gethostent_r.\n *\tIt is zero if d_gethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostent_r\n *\tis defined.\n */\n#$d_gethostent_r HAS_GETHOSTENT_R\t/**/\n#define GETHOSTENT_R_PROTO $gethostent_r_proto\t/**/\n\n/* HAS_GETLOGIN_R:\n *\tThis symbol, if defined, indicates that the getlogin_r routine\n *\tis available to getlogin re-entrantly.\n */\n/* GETLOGIN_R_PROTO:\n *\tThis symbol encodes the prototype of getlogin_r.\n *\tIt is zero if d_getlogin_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getlogin_r\n *\tis defined.\n */\n#$d_getlogin_r HAS_GETLOGIN_R\t/**/\n#define GETLOGIN_R_PROTO $getlogin_r_proto\t/**/\n\n/* HAS_GETNETBYADDR_R:\n *\tThis symbol, if defined, indicates that the getnetbyaddr_r routine\n *\tis available to getnetbyaddr re-entrantly.\n */\n/* GETNETBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyaddr_r.\n *\tIt is zero if d_getnetbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyaddr_r\n *\tis defined.\n */\n#$d_getnetbyaddr_r HAS_GETNETBYADDR_R\t/**/\n#define GETNETBYADDR_R_PROTO $getnetbyaddr_r_proto\t/**/\n\n/* HAS_GETNETBYNAME_R:\n *\tThis symbol, if defined, indicates that the getnetbyname_r routine\n *\tis available to getnetbyname re-entrantly.\n */\n/* GETNETBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyname_r.\n *\tIt is zero if d_getnetbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyname_r\n *\tis defined.\n */\n#$d_getnetbyname_r HAS_GETNETBYNAME_R\t/**/\n#define GETNETBYNAME_R_PROTO $getnetbyname_r_proto\t/**/\n\n/* HAS_GETNETENT_R:\n *\tThis symbol, if defined, indicates that the getnetent_r routine\n *\tis available to getnetent re-entrantly.\n */\n/* GETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of getnetent_r.\n *\tIt is zero if d_getnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetent_r\n *\tis defined.\n */\n#$d_getnetent_r HAS_GETNETENT_R\t/**/\n#define GETNETENT_R_PROTO $getnetent_r_proto\t/**/\n\n/* HAS_GETPROTOBYNAME_R:\n *\tThis symbol, if defined, indicates that the getprotobyname_r routine\n *\tis available to getprotobyname re-entrantly.\n */\n/* GETPROTOBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobyname_r.\n *\tIt is zero if d_getprotobyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobyname_r\n *\tis defined.\n */\n#$d_getprotobyname_r HAS_GETPROTOBYNAME_R\t/**/\n#define GETPROTOBYNAME_R_PROTO $getprotobyname_r_proto\t/**/\n\n/* HAS_GETPROTOBYNUMBER_R:\n *\tThis symbol, if defined, indicates that the getprotobynumber_r routine\n *\tis available to getprotobynumber re-entrantly.\n */\n/* GETPROTOBYNUMBER_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobynumber_r.\n *\tIt is zero if d_getprotobynumber_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobynumber_r\n *\tis defined.\n */\n#$d_getprotobynumber_r HAS_GETPROTOBYNUMBER_R\t/**/\n#define GETPROTOBYNUMBER_R_PROTO $getprotobynumber_r_proto\t/**/\n\n/* HAS_GETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the getprotoent_r routine\n *\tis available to getprotoent re-entrantly.\n */\n/* GETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of getprotoent_r.\n *\tIt is zero if d_getprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotoent_r\n *\tis defined.\n */\n#$d_getprotoent_r HAS_GETPROTOENT_R\t/**/\n#define GETPROTOENT_R_PROTO $getprotoent_r_proto\t/**/\n\n/* HAS_GETPWENT_R:\n *\tThis symbol, if defined, indicates that the getpwent_r routine\n *\tis available to getpwent re-entrantly.\n */\n/* GETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of getpwent_r.\n *\tIt is zero if d_getpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwent_r\n *\tis defined.\n */\n#$d_getpwent_r HAS_GETPWENT_R\t/**/\n#define GETPWENT_R_PROTO $getpwent_r_proto\t/**/\n\n/* HAS_GETPWNAM_R:\n *\tThis symbol, if defined, indicates that the getpwnam_r routine\n *\tis available to getpwnam re-entrantly.\n */\n/* GETPWNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getpwnam_r.\n *\tIt is zero if d_getpwnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwnam_r\n *\tis defined.\n */\n#$d_getpwnam_r HAS_GETPWNAM_R\t/**/\n#define GETPWNAM_R_PROTO $getpwnam_r_proto\t/**/\n\n/* HAS_GETPWUID_R:\n *\tThis symbol, if defined, indicates that the getpwuid_r routine\n *\tis available to getpwuid re-entrantly.\n */\n/* GETPWUID_R_PROTO:\n *\tThis symbol encodes the prototype of getpwuid_r.\n *\tIt is zero if d_getpwuid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwuid_r\n *\tis defined.\n */\n#$d_getpwuid_r HAS_GETPWUID_R\t/**/\n#define GETPWUID_R_PROTO $getpwuid_r_proto\t/**/\n\n/* HAS_GETSERVBYNAME_R:\n *\tThis symbol, if defined, indicates that the getservbyname_r routine\n *\tis available to getservbyname re-entrantly.\n */\n/* GETSERVBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyname_r.\n *\tIt is zero if d_getservbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyname_r\n *\tis defined.\n */\n#$d_getservbyname_r HAS_GETSERVBYNAME_R\t/**/\n#define GETSERVBYNAME_R_PROTO $getservbyname_r_proto\t/**/\n\n/* HAS_GETSERVBYPORT_R:\n *\tThis symbol, if defined, indicates that the getservbyport_r routine\n *\tis available to getservbyport re-entrantly.\n */\n/* GETSERVBYPORT_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyport_r.\n *\tIt is zero if d_getservbyport_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyport_r\n *\tis defined.\n */\n#$d_getservbyport_r HAS_GETSERVBYPORT_R\t/**/\n#define GETSERVBYPORT_R_PROTO $getservbyport_r_proto\t/**/\n\n/* HAS_GETSERVENT_R:\n *\tThis symbol, if defined, indicates that the getservent_r routine\n *\tis available to getservent re-entrantly.\n */\n/* GETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of getservent_r.\n *\tIt is zero if d_getservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservent_r\n *\tis defined.\n */\n#$d_getservent_r HAS_GETSERVENT_R\t/**/\n#define GETSERVENT_R_PROTO $getservent_r_proto\t/**/\n\n/* HAS_GETSPNAM_R:\n *\tThis symbol, if defined, indicates that the getspnam_r routine\n *\tis available to getspnam re-entrantly.\n */\n/* GETSPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getspnam_r.\n *\tIt is zero if d_getspnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getspnam_r\n *\tis defined.\n */\n#$d_getspnam_r HAS_GETSPNAM_R\t/**/\n#define GETSPNAM_R_PROTO $getspnam_r_proto\t/**/\n\n/* HAS_GMTIME_R:\n *\tThis symbol, if defined, indicates that the gmtime_r routine\n *\tis available to gmtime re-entrantly.\n */\n/* GMTIME_R_PROTO:\n *\tThis symbol encodes the prototype of gmtime_r.\n *\tIt is zero if d_gmtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gmtime_r\n *\tis defined.\n */\n#$d_gmtime_r HAS_GMTIME_R\t/**/\n#define GMTIME_R_PROTO $gmtime_r_proto\t/**/\n\n/* HAS_LOCALECONV_L:\n *\tThis symbol, if defined, indicates that the localeconv_l routine is\n *\tavailable to query certain information about a locale.\n */\n#$d_localeconv_l HAS_LOCALECONV_L\t\t/**/\n\n/* HAS_LOCALTIME_R:\n *\tThis symbol, if defined, indicates that the localtime_r routine\n *\tis available to localtime re-entrantly.\n */\n/* LOCALTIME_R_NEEDS_TZSET:\n *\tMany libc's localtime_r implementations do not call tzset,\n *\tmaking them differ from localtime(), and making timezone\n *\tchanges using \\$ENV{TZ} without explicitly calling tzset\n *\timpossible. This symbol makes us call tzset before localtime_r\n */\n#$d_localtime_r_needs_tzset LOCALTIME_R_NEEDS_TZSET /**/\n#ifdef LOCALTIME_R_NEEDS_TZSET\n#define L_R_TZSET tzset(),\n#else\n#define L_R_TZSET\n#endif\n\n/* LOCALTIME_R_PROTO:\n *\tThis symbol encodes the prototype of localtime_r.\n *\tIt is zero if d_localtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_localtime_r\n *\tis defined.\n */\n#$d_localtime_r HAS_LOCALTIME_R\t/**/\n#define LOCALTIME_R_PROTO $localtime_r_proto\t/**/\n\n/* HAS_MBRLEN:\n *\tThis symbol, if defined, indicates that the mbrlen routine is\n *\tavailable to get the length of multi-byte character strings.\n */\n#$d_mbrlen HAS_MBRLEN\t/**/\n\n/* HAS_MBRTOWC:\n *\tThis symbol, if defined, indicates that the mbrtowc routine is\n *\tavailable to convert a multi-byte character into a wide character.\n */\n#$d_mbrtowc HAS_MBRTOWC\t/**/\n\n/* HAS_THREAD_SAFE_NL_LANGINFO_L:\n *\tThis symbol, when defined, indicates presence of the nl_langinfo_l()\n *\tfunction, and that it is thread-safe.\n */\n#$d_thread_safe_nl_langinfo_l HAS_THREAD_SAFE_NL_LANGINFO_L\t/**/\n\n/* OLD_PTHREAD_CREATE_JOINABLE:\n *\tThis symbol, if defined, indicates how to create pthread\n *\tin joinable (aka undetached) state.  NOTE: not defined\n *\tif pthread.h already has defined PTHREAD_CREATE_JOINABLE\n *\t(the new version of the constant).\n *\tIf defined, known values are PTHREAD_CREATE_UNDETACHED\n *\tand __UNDETACHED.\n */\n#$d_old_pthread_create_joinable OLD_PTHREAD_CREATE_JOINABLE $old_pthread_create_joinable /**/\n\n/* HAS_PTHREAD_ATFORK:\n *\tThis symbol, if defined, indicates that the pthread_atfork routine\n *\tis available to setup fork handlers.\n */\n#$d_pthread_atfork HAS_PTHREAD_ATFORK\t\t/**/\n\n/* HAS_PTHREAD_YIELD:\n *\tThis symbol, if defined, indicates that the pthread_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/* SCHED_YIELD:\n *\tThis symbol defines the way to yield the execution of\n *\tthe current thread.  Known ways are sched_yield,\n *\tpthread_yield, and pthread_yield with NULL.\n */\n/* HAS_SCHED_YIELD:\n *\tThis symbol, if defined, indicates that the sched_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n#$d_pthread_yield HAS_PTHREAD_YIELD\t/**/\n#define SCHED_YIELD\t$sched_yield\t/**/\n#$d_sched_yield HAS_SCHED_YIELD\t/**/\n\n/* HAS_RANDOM_R:\n *\tThis symbol, if defined, indicates that the random_r routine\n *\tis available to random re-entrantly.\n */\n/* RANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of random_r.\n *\tIt is zero if d_random_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_random_r\n *\tis defined.\n */\n#$d_random_r HAS_RANDOM_R\t/**/\n#define RANDOM_R_PROTO $random_r_proto\t/**/\n\n/* HAS_READDIR64_R:\n *\tThis symbol, if defined, indicates that the readdir64_r routine\n *\tis available to readdir64 re-entrantly.\n */\n/* READDIR64_R_PROTO:\n *\tThis symbol encodes the prototype of readdir64_r.\n *\tIt is zero if d_readdir64_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir64_r\n *\tis defined.\n */\n#$d_readdir64_r HAS_READDIR64_R\t/**/\n#define READDIR64_R_PROTO $readdir64_r_proto\t/**/\n\n/* HAS_READDIR_R:\n *\tThis symbol, if defined, indicates that the readdir_r routine\n *\tis available to readdir re-entrantly.\n */\n/* READDIR_R_PROTO:\n *\tThis symbol encodes the prototype of readdir_r.\n *\tIt is zero if d_readdir_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir_r\n *\tis defined.\n */\n#$d_readdir_r HAS_READDIR_R\t/**/\n#define READDIR_R_PROTO $readdir_r_proto\t/**/\n\n/* HAS_SETGRENT_R:\n *\tThis symbol, if defined, indicates that the setgrent_r routine\n *\tis available to setgrent re-entrantly.\n */\n/* SETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of setgrent_r.\n *\tIt is zero if d_setgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setgrent_r\n *\tis defined.\n */\n#$d_setgrent_r HAS_SETGRENT_R\t/**/\n#define SETGRENT_R_PROTO $setgrent_r_proto\t/**/\n\n/* HAS_SETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the sethostent_r routine\n *\tis available to sethostent re-entrantly.\n */\n/* SETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of sethostent_r.\n *\tIt is zero if d_sethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_sethostent_r\n *\tis defined.\n */\n#$d_sethostent_r HAS_SETHOSTENT_R\t/**/\n#define SETHOSTENT_R_PROTO $sethostent_r_proto\t/**/\n\n/* HAS_SETLOCALE_R:\n *\tThis symbol, if defined, indicates that the setlocale_r routine\n *\tis available to setlocale re-entrantly.\n */\n/* SETLOCALE_R_PROTO:\n *\tThis symbol encodes the prototype of setlocale_r.\n *\tIt is zero if d_setlocale_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setlocale_r\n *\tis defined.\n */\n#$d_setlocale_r HAS_SETLOCALE_R\t/**/\n#define SETLOCALE_R_PROTO $setlocale_r_proto\t/**/\n\n/* HAS_SETNETENT_R:\n *\tThis symbol, if defined, indicates that the setnetent_r routine\n *\tis available to setnetent re-entrantly.\n */\n/* SETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of setnetent_r.\n *\tIt is zero if d_setnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setnetent_r\n *\tis defined.\n */\n#$d_setnetent_r HAS_SETNETENT_R\t/**/\n#define SETNETENT_R_PROTO $setnetent_r_proto\t/**/\n\n/* HAS_SETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the setprotoent_r routine\n *\tis available to setprotoent re-entrantly.\n */\n/* SETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of setprotoent_r.\n *\tIt is zero if d_setprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setprotoent_r\n *\tis defined.\n */\n#$d_setprotoent_r HAS_SETPROTOENT_R\t/**/\n#define SETPROTOENT_R_PROTO $setprotoent_r_proto\t/**/\n\n/* HAS_SETPWENT_R:\n *\tThis symbol, if defined, indicates that the setpwent_r routine\n *\tis available to setpwent re-entrantly.\n */\n/* SETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of setpwent_r.\n *\tIt is zero if d_setpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setpwent_r\n *\tis defined.\n */\n#$d_setpwent_r HAS_SETPWENT_R\t/**/\n#define SETPWENT_R_PROTO $setpwent_r_proto\t/**/\n\n/* HAS_SETSERVENT_R:\n *\tThis symbol, if defined, indicates that the setservent_r routine\n *\tis available to setservent re-entrantly.\n */\n/* SETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of setservent_r.\n *\tIt is zero if d_setservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setservent_r\n *\tis defined.\n */\n#$d_setservent_r HAS_SETSERVENT_R\t/**/\n#define SETSERVENT_R_PROTO $setservent_r_proto\t/**/\n\n/* HAS_SRAND48_R:\n *\tThis symbol, if defined, indicates that the srand48_r routine\n *\tis available to srand48 re-entrantly.\n */\n/* SRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of srand48_r.\n *\tIt is zero if d_srand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srand48_r\n *\tis defined.\n */\n#$d_srand48_r HAS_SRAND48_R\t/**/\n#define SRAND48_R_PROTO $srand48_r_proto\t/**/\n\n/* HAS_SRANDOM_R:\n *\tThis symbol, if defined, indicates that the srandom_r routine\n *\tis available to srandom re-entrantly.\n */\n/* SRANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of srandom_r.\n *\tIt is zero if d_srandom_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srandom_r\n *\tis defined.\n */\n#$d_srandom_r HAS_SRANDOM_R\t/**/\n#define SRANDOM_R_PROTO $srandom_r_proto\t/**/\n\n/* HAS_STRERROR_R:\n *\tThis symbol, if defined, indicates that the strerror_r routine\n *\tis available to strerror re-entrantly.\n */\n/* STRERROR_R_PROTO:\n *\tThis symbol encodes the prototype of strerror_r.\n *\tIt is zero if d_strerror_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_strerror_r\n *\tis defined.\n */\n#$d_strerror_r HAS_STRERROR_R\t/**/\n#define STRERROR_R_PROTO $strerror_r_proto\t/**/\n\n/* HAS_STRTOD_L:\n *\tThis symbol, if defined, indicates that the strtod_l routine is\n *\tavailable to convert strings to long doubles.\n */\n#$d_strtod_l HAS_STRTOD_L\t\t/**/\n\n/* HAS_STRTOLD_L:\n *\tThis symbol, if defined, indicates that the strtold_l routine is\n *\tavailable to convert strings to long doubles.\n */\n#$d_strtold_l HAS_STRTOLD_L\t\t/**/\n\n/* HAS_TMPNAM_R:\n *\tThis symbol, if defined, indicates that the tmpnam_r routine\n *\tis available to tmpnam re-entrantly.\n */\n/* TMPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of tmpnam_r.\n *\tIt is zero if d_tmpnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_tmpnam_r\n *\tis defined.\n */\n#$d_tmpnam_r HAS_TMPNAM_R\t/**/\n#define TMPNAM_R_PROTO $tmpnam_r_proto\t/**/\n\n/* HAS_TTYNAME_R:\n *\tThis symbol, if defined, indicates that the ttyname_r routine\n *\tis available to ttyname re-entrantly.\n */\n/* TTYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of ttyname_r.\n *\tIt is zero if d_ttyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ttyname_r\n *\tis defined.\n */\n#$d_ttyname_r HAS_TTYNAME_R\t/**/\n#define TTYNAME_R_PROTO $ttyname_r_proto\t/**/\n\n/* I_MACH_CTHREADS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <mach/cthreads.h>.\n */\n#$i_machcthr   I_MACH_CTHREADS\t/**/\n\n/* I_PTHREAD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pthread.h>.\n */\n#$i_pthread   I_PTHREAD\t/**/\n\n/* USE_ITHREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the interpreter-based threading implementation.\n */\n/* USE_5005THREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the 5.005-based threading implementation.\n *\tOnly valid up to 5.8.x.\n */\n/* OLD_PTHREADS_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use the old draft POSIX threads API.\n */\n/* USE_REENTRANT_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\ttry to use the various _r versions of library functions.\n *\tThis is extremely experimental.\n */\n#$use5005threads\tUSE_5005THREADS\t\t/**/\n#$useithreads\tUSE_ITHREADS\t\t/**/\n#if defined(USE_5005THREADS) && !defined(USE_ITHREADS)\n#define\t\tUSE_THREADS\t\t/* until src is revised*/\n#endif\n#$d_oldpthreads\tOLD_PTHREADS_API\t\t/**/\n#$usereentrant\tUSE_REENTRANT_API\t/**/\n\n/* HAS_TIME:\n *\tThis symbol, if defined, indicates that the time() routine exists.\n */\n/* Time_t:\n *\tThis symbol holds the type returned by time(). It can be long,\n *\tor time_t on BSD sites (in which case <sys/types.h> should be\n *\tincluded).\n */\n#$d_time HAS_TIME\t\t/**/\n#define Time_t $timetype\t\t/* Time type */\n\n/* HAS_TIMES:\n *\tThis symbol, if defined, indicates that the times() routine exists.\n *\tNote that this became obsolete on some systems (SUNOS), which now\n *\tuse getrusage(). It may be necessary to include <sys/times.h>.\n */\n#$d_times HAS_TIMES\t\t/**/\n\n/* Fpos_t:\n *\tThis symbol holds the type used to declare file positions in libc.\n *\tIt can be fpos_t, long, uint, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Fpos_t $fpostype\t\t/* File position type */\n\n/* Gid_t_f:\n *\tThis symbol defines the format string used for printing a Gid_t.\n */\n#define\tGid_t_f\t\t$gidformat\t\t/**/\n\n/* Gid_t_sign:\n *\tThis symbol holds the signedness of a Gid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Gid_t_sign\t$gidsign\t\t/* GID sign */\n\n/* Gid_t_size:\n *\tThis symbol holds the size of a Gid_t in bytes.\n */\n#define Gid_t_size $gidsize\t\t/* GID size */\n\n/* Gid_t:\n *\tThis symbol holds the return type of getgid() and the type of\n *\targument to setrgid() and related functions.  Typically,\n *\tit is the type of group ids in the kernel. It can be int, ushort,\n *\tgid_t, etc... It may be necessary to include <sys/types.h> to get\n *\tany typedef'ed information.\n */\n#define Gid_t $gidtype\t\t/* Type for getgid(), etc... */\n\n/* Off_t:\n *\tThis symbol holds the type used to declare offsets in the kernel.\n *\tIt can be int, long, off_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n/* LSEEKSIZE:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n/* Off_t_size:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n#define Off_t $lseektype\t\t/* <offset> type */\n#define LSEEKSIZE $lseeksize\t\t/* <offset> size */\n#define Off_t_size $lseeksize\t/* <offset> size */\n\n/* Mode_t:\n *\tThis symbol holds the type used to declare file modes\n *\tfor systems calls.  It is usually mode_t, but may be\n *\tint or unsigned short.  It may be necessary to include <sys/types.h>\n *\tto get any typedef'ed information.\n */\n#define Mode_t $modetype\t /* file mode parameter for system calls */\n\n/* Pid_t:\n *\tThis symbol holds the type used to declare process ids in the kernel.\n *\tIt can be int, uint, pid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Pid_t $pidtype\t\t/* PID type */\n\n/* Size_t_size:\n *\tThis symbol holds the size of a Size_t in bytes.\n */\n#define Size_t_size $sizesize\t\t/**/\n\n/* Size_t:\n *\tThis symbol holds the type used to declare length parameters\n *\tfor string functions.  It is usually size_t, but may be\n *\tunsigned long, int, etc.  It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Size_t $sizetype\t /* length parameter for string functions */\n\n/* Uid_t_f:\n *\tThis symbol defines the format string used for printing a Uid_t.\n */\n#define\tUid_t_f\t\t$uidformat\t\t/**/\n\n/* Uid_t_sign:\n *\tThis symbol holds the signedness of a Uid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Uid_t_sign\t$uidsign\t\t/* UID sign */\n\n/* Uid_t_size:\n *\tThis symbol holds the size of a Uid_t in bytes.\n */\n#define Uid_t_size $uidsize\t\t/* UID size */\n\n/* Uid_t:\n *\tThis symbol holds the type used to declare user ids in the kernel.\n *\tIt can be int, ushort, uid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Uid_t $uidtype\t\t/* UID type */\n\n#endif\n!GROK!THIS!\n;;\nesac\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/uconfig.sh": "#!/bin/sh\nAuthor=''\n_a='.a'\n_o='.o'\nafs='false'\nafsroot='/afs'\nalignbytes='4'\naphostname='/bin/hostname'\narchlib='/usr/local/lib/perl5/5.30/unknown'\narchlibexp='/usr/local/lib/perl5/5.30/unknown'\narchname='unknown'\nasctime_r_proto='0'\nbin='/usr/local/bin'\nbinexp='/usr/local/bin'\nbootstrap_charset='undef'\nbyteorder='1234'\ncastflags='0'\ncf_by='root@localhost'\ncf_time='Thu Jan  1 00:00:00 GMT 1970'\ncharbits='8'\nclocktype='clock_t'\ncpp_stuff='42'\ncpplast='-'\ncppminus='-'\ncpprun='cc -E'\ncppstdin='cc -E'\ncrypt_r_proto='0'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\nd_PRIEUldbl='undef'\nd_PRIFUldbl='undef'\nd_PRIGUldbl='undef'\nd_PRIXU64='undef'\nd_PRId64='undef'\nd_PRIeldbl='undef'\nd_PRIfldbl='undef'\nd_PRIgldbl='undef'\nd_PRIi64='undef'\nd_PRIo64='undef'\nd_PRIu64='undef'\nd_PRIx64='undef'\nd_SCNfldbl='undef'\nd__fwalk='undef'\nd_accept4='undef'\nd_access='undef'\nd_accessx='undef'\nd_acosh='undef'\nd_aintl='undef'\nd_alarm='undef'\nd_archlib='undef'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='undef'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bsd='undef'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_add_overflow='undef'\nd_builtin_choose_expr='undef'\nd_builtin_expect='undef'\nd_builtin_mul_overflow='undef'\nd_builtin_sub_overflow='undef'\nd_c99_variadic_macros='undef'\nd_casti32='undef'\nd_castneg='undef'\nd_cbrt='undef'\nd_chown='undef'\nd_chroot='undef'\nd_chsize='undef'\nd_class='undef'\nd_clearenv='undef'\nd_closedir='define'\nd_cmsghdr_s='undef'\nd_copysign='undef'\nd_copysignl='undef'\nd_cplusplus='undef'\nd_crypt='undef'\nd_crypt_r='undef'\nd_csh='undef'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='undef'\nd_dbl_dig='undef'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='undef'\nd_dir_dd_fd='undef'\nd_dirfd='undef'\nd_dirnamlen='undef'\nd_dladdr='undef'\nd_dlerror='undef'\nd_dlopen='undef'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_double_has_inf='define'\nd_double_has_nan='define'\nd_double_has_negative_zero='define'\nd_double_has_subnormals='define'\nd_double_style_cray='undef'\nd_double_style_ibm='undef'\nd_double_style_ieee='define'\nd_double_style_vax='undef'\nd_drand48_r='undef'\nd_drand48proto='undef'\nd_dup2='undef'\nd_dup3='undef'\nd_duplocale='undef'\nd_eaccess='undef'\nd_endgrent='undef'\nd_endgrent_r='undef'\nd_endhent='undef'\nd_endhostent_r='undef'\nd_endnent='undef'\nd_endnetent_r='undef'\nd_endpent='undef'\nd_endprotoent_r='undef'\nd_endpwent='undef'\nd_endpwent_r='undef'\nd_endsent='undef'\nd_endservent_r='undef'\nd_eofnblk='undef'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='undef'\nd_fchdir='undef'\nd_fchmod='undef'\nd_fchmodat='undef'\nd_fchown='undef'\nd_fcntl='undef'\nd_fcntl_can_lock='undef'\nd_fd_macros='undef'\nd_fd_set='undef'\nd_fdclose='undef'\nd_fdim='undef'\nd_fds_bits='undef'\nd_fegetround='undef'\nd_fgetpos='undef'\nd_finite='undef'\nd_finitel='undef'\nd_flexfnam='undef'\nd_flock='undef'\nd_flockproto='undef'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='define'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='undef'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_freelocale='undef'\nd_frexpl='undef'\nd_fs_data_s='undef'\nd_fseeko='undef'\nd_fsetpos='undef'\nd_fstatfs='undef'\nd_fstatvfs='undef'\nd_fsync='undef'\nd_ftello='undef'\nd_ftime='undef'\nd_futimes='undef'\nd_gai_strerror='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='undef'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='undef'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='undef'\nd_gethbyaddr='undef'\nd_gethbyname='undef'\nd_gethent='undef'\nd_gethname='undef'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='undef'\nd_getitimer='undef'\nd_getlogin='undef'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='undef'\nd_getnameinfo='undef'\nd_getnbyaddr='undef'\nd_getnbyname='undef'\nd_getnent='undef'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='undef'\nd_getpagsz='undef'\nd_getpbyname='undef'\nd_getpbynumber='undef'\nd_getpent='undef'\nd_getpgid='undef'\nd_getpgrp2='undef'\nd_getpgrp='undef'\nd_getppid='undef'\nd_getprior='undef'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='undef'\nd_getprpwnam='undef'\nd_getpwent='undef'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='undef'\nd_getsbyport='undef'\nd_getsent='undef'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='undef'\nd_getspent='undef'\nd_getspnam='undef'\nd_getspnam_r='undef'\nd_gettimeod='undef'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='undef'\nd_grpasswd='undef'\nd_hasmntopt='undef'\nd_htonl='undef'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='undef'\nd_inc_version_list='undef'\nd_index='undef'\nd_inetaton='undef'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='undef'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='undef'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='undef'\nd_isinfl='undef'\nd_isless='undef'\nd_isnan='undef'\nd_isnanl='undef'\nd_isnormal='undef'\nd_j0='undef'\nd_j0l='undef'\nd_killpg='undef'\nd_lc_monetary_2008='undef'\nd_lchown='undef'\nd_ldbl_dig='undef'\nd_ldexpl='undef'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='undef'\nd_link='undef'\nd_linkat='undef'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localeconv_l='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='undef'\nd_lockf='undef'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_long_double_style_ieee='undef'\nd_long_double_style_ieee_doubledouble='undef'\nd_long_double_style_ieee_extended='undef'\nd_long_double_style_ieee_std='undef'\nd_long_double_style_vax='undef'\nd_longdbl='undef'\nd_longlong='undef'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='undef'\nd_lstat='undef'\nd_madvise='undef'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='undef'\nd_mbrlen='undef'\nd_mbrtowc='undef'\nd_mbstowcs='undef'\nd_mbtowc='undef'\nd_memmem='undef'\nd_memrchr='undef'\nd_mkdir='undef'\nd_mkdtemp='undef'\nd_mkfifo='undef'\nd_mkostemp='undef'\nd_mkstemp='undef'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='undef'\nd_mmap='undef'\nd_modfl='undef'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='undef'\nd_msg='undef'\nd_msg_ctrunc='undef'\nd_msg_dontroute='undef'\nd_msg_oob='undef'\nd_msg_peek='undef'\nd_msg_proxy='undef'\nd_msgctl='undef'\nd_msgget='undef'\nd_msghdr_s='undef'\nd_msgrcv='undef'\nd_msgsnd='undef'\nd_msync='undef'\nd_munmap='undef'\nd_mymalloc='undef'\nd_nan='undef'\nd_nanosleep='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_newlocale='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='undef'\nd_nl_langinfo='undef'\nd_nv_preserves_uv='undef'\nd_nv_zero_is_allbits_zero='undef'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='undef'\nd_openat='undef'\nd_pathconf='undef'\nd_pause='undef'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe2='undef'\nd_pipe='undef'\nd_poll='undef'\nd_portable='undef'\nd_prctl='undef'\nd_prctl_set_name='undef'\nd_printf_format_null='undef'\nd_procselfexe='undef'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='undef'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='undef'\nd_pwpasswd='undef'\nd_pwquota='undef'\nd_qgcvt='undef'\nd_quad='undef'\nd_querylocale='undef'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='undef'\nd_readv='undef'\nd_recvmsg='undef'\nd_regcomp='define'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_renameat='undef'\nd_rewinddir='undef'\nd_rint='undef'\nd_rmdir='undef'\nd_round='undef'\nd_sbrkproto='undef'\nd_scalbn='undef'\nd_scalbnl='undef'\nd_sched_yield='undef'\nd_scm_rights='undef'\nd_seekdir='undef'\nd_select='undef'\nd_sem='undef'\nd_semctl='undef'\nd_semctl_semid_ds='undef'\nd_semctl_semun='undef'\nd_semget='undef'\nd_semop='undef'\nd_sendmsg='undef'\nd_setegid='undef'\nd_seteuid='undef'\nd_setgrent='undef'\nd_setgrent_r='undef'\nd_setgrps='undef'\nd_sethent='undef'\nd_sethostent_r='undef'\nd_setitimer='undef'\nd_setlinebuf='undef'\nd_setlocale='undef'\nd_setlocale_accepts_any_locale_name='undef'\nd_setlocale_r='undef'\nd_setnent='undef'\nd_setnetent_r='undef'\nd_setpent='undef'\nd_setpgid='undef'\nd_setpgrp2='undef'\nd_setpgrp='undef'\nd_setprior='undef'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='undef'\nd_setpwent_r='undef'\nd_setregid='undef'\nd_setresgid='undef'\nd_setresuid='undef'\nd_setreuid='undef'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='undef'\nd_setservent_r='undef'\nd_setsid='undef'\nd_setvbuf='undef'\nd_shm='undef'\nd_shmat='undef'\nd_shmatprototype='undef'\nd_shmctl='undef'\nd_shmdt='undef'\nd_shmget='undef'\nd_sigaction='undef'\nd_siginfo_si_addr='undef'\nd_siginfo_si_band='undef'\nd_siginfo_si_errno='undef'\nd_siginfo_si_pid='undef'\nd_siginfo_si_status='undef'\nd_siginfo_si_uid='undef'\nd_siginfo_si_value='undef'\nd_signbit='undef'\nd_sigprocmask='undef'\nd_sigsetjmp='undef'\nd_sin6_scope_id='undef'\nd_sitearch='undef'\nd_snprintf='undef'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='undef'\nd_socklen_t='undef'\nd_sockpair='undef'\nd_socks5_init='undef'\nd_sqrtl='undef'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='undef'\nd_statfs_f_flags='undef'\nd_statfs_s='undef'\nd_static_inline='undef'\nd_statvfs='undef'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='undef'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='undef'\nd_stdio_stream_array='undef'\nd_stdiobase='undef'\nd_stdstdio='undef'\nd_strcoll='undef'\nd_strerror_l='undef'\nd_strerror_r='undef'\nd_strftime='undef'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strnlen='undef'\nd_strtod='undef'\nd_strtod_l='undef'\nd_strtol='define'\nd_strtold='undef'\nd_strtold_l='undef'\nd_strtoll='undef'\nd_strtoq='undef'\nd_strtoul='define'\nd_strtoull='undef'\nd_strtouq='undef'\nd_strxfrm='undef'\nd_suidsafe='undef'\nd_symlink='undef'\nd_syscall='undef'\nd_syscallproto='undef'\nd_sysconf='undef'\nd_sysernlst=''\nd_syserrlst='undef'\nd_system='undef'\nd_tcgetpgrp='undef'\nd_tcsetpgrp='undef'\nd_telldir='undef'\nd_telldirproto='undef'\nd_tgamma='undef'\nd_thread_safe_nl_langinfo_l='undef'\nd_time='define'\nd_timegm='undef'\nd_times='undef'\nd_tm_tm_gmtoff='undef'\nd_tm_tm_zone='undef'\nd_tmpnam_r='undef'\nd_towlower='undef'\nd_towupper='undef'\nd_trunc='undef'\nd_truncate='undef'\nd_truncl='undef'\nd_ttyname_r='undef'\nd_tzname='undef'\nd_u32align='define'\nd_ualarm='undef'\nd_umask='undef'\nd_uname='undef'\nd_union_semun='undef'\nd_unlinkat='undef'\nd_unordered='undef'\nd_unsetenv='undef'\nd_uselocale='undef'\nd_usleep='undef'\nd_usleepproto='undef'\nd_ustat='undef'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='undef'\nd_voidtty=''\nd_vsnprintf='undef'\nd_wait4='undef'\nd_waitpid='undef'\nd_wcscmp='undef'\nd_wcstombs='undef'\nd_wcsxfrm='undef'\nd_wctomb='undef'\nd_writev='undef'\nd_xenix='undef'\ndb_hashtype='u_int32_t'\ndb_prefixtype='size_t'\ndb_version_major='0'\ndb_version_minor='0'\ndb_version_patch='0'\ndefault_inc_excludes_dot='undef'\ndirentrytype='struct dirent'\ndoubleinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f'\ndoublekind='3'\ndoublemantbits='52'\ndoublenanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f'\ndoublesize='8'\ndrand01=\"Perl_drand48()\"\ndrand48_r_proto='0'\ndtrace=''\neagain='EAGAIN'\nebcdic='undef'\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\nfflushNULL='undef'\nfflushall='undef'\nfirstmakefile='makefile'\nfpossize='4'\nfpostype=int\nfreetype=void\nfull_csh=''\nfull_sed=''\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"lu\"'\ngidsign='1'\ngidsize='4'\ngidtype=int\ngmtime_r_proto='0'\ngroupstype=int\nh_fcntl='false'\nh_sysfile='true'\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='int64_t'\ni8size='1'\ni8type='signed char'\ni_arpainet='undef'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='undef'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='undef'\ni_execinfo='undef'\ni_fcntl='undef'\ni_fenv='undef'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='undef'\ni_ieeefp='undef'\ni_inttypes='undef'\ni_langinfo='undef'\ni_libutil='undef'\ni_locale='undef'\ni_machcthr='undef'\ni_malloc='undef'\ni_mallocmalloc='undef'\ni_mntent='undef'\ni_ndbm='undef'\ni_netdb='undef'\ni_neterrno='undef'\ni_netinettcp='undef'\ni_niin='undef'\ni_poll='undef'\ni_prot='undef'\ni_pthread='undef'\ni_pwd='undef'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='undef'\ni_socks='undef'\ni_stdbool='undef'\ni_stdint='undef'\ni_stdlib='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='undef'\ni_sysfile='undef'\ni_sysfilio='undef'\ni_sysin='undef'\ni_sysioctl='undef'\ni_syslog='undef'\ni_sysmman='undef'\ni_sysmode='undef'\ni_sysmount='undef'\ni_sysndir='undef'\ni_sysparam='undef'\ni_syspoll='undef'\ni_sysresrc='undef'\ni_syssecrt='undef'\ni_sysselct='undef'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='undef'\ni_sysstatvfs='undef'\ni_systime='undef'\ni_systimek='undef'\ni_systimes='undef'\ni_systypes='undef'\ni_sysuio='undef'\ni_sysun='undef'\ni_sysutsname='undef'\ni_sysvfs='undef'\ni_syswait='undef'\ni_termio='undef'\ni_termios='undef'\ni_time='define'\ni_unistd='undef'\ni_ustat='undef'\ni_utime='undef'\ni_vfork='undef'\ni_wchar='undef'\ni_wctype='undef'\ni_xlocale='undef'\nignore_versioned_solibs='y'\ninc_version_list_init='NULL'\ninstallstyle='lib/perl5'\ninstallusrbinperl='undef'\nintsize='4'\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nld_can_script='define'\nlib_ext='.a'\nlocaltime_r_proto='0'\nlongdblinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'\nlongdblkind=0\nlongdblmantbits='64'\nlongdblnanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'\nlongdblsize=8\nlonglongsize=8\nlongsize='4'\nlseeksize=4\nlseektype=int\nmalloctype='int*'\nmalloctype='void *'\nmmaptype='void *'\nmodetype='mode_t'\nmodetype=int\nmultiarch='undef'\nmyarchname='unknown'\nmyuname='unknown'\nneed_va_copy='define'\nnetdb_hlen_type='int'\nnetdb_host_type='const char *'\nnetdb_name_type='const char *'\nnetdb_net_type='unsigned long'\nnroff='nroff'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='0'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvmantbits='52'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.o'\nold_pthread_create_joinable=''\noptimize=''\norderlib='false'\nosname='unknown'\nosvers='unknown'\notherlibdirs=' '\npackage='perl5'\nperl_static_inline='static'\nphostname='hostname'\npidtype=int\nprivlib='/usr/local/lib/perl5/5.30'\nprivlibexp='/usr/local/lib/perl5/5.30'\nprocselfexe=''\nprototype='undef'\nptrsize='4'\nquadkind='4'\nquadtype='int64_t'\nrandbits='48'\nrandfunc='Perl_drand48'\nrandom_r_proto='0'\nrandseedtype='U32'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nsGMTIME_max='2147483647'\nsGMTIME_min='0'\nsLOCALTIME_max='2147483647'\nsLOCALTIME_min='0'\nsPRIEUldbl='\"llE\"'\nsPRIFUldbl='\"llF\"'\nsPRIGUldbl='\"llG\"'\nsPRIXU64='\"LX\"'\nsPRId64='\"Ld\"'\nsPRIeldbl='\"lle\"'\nsPRIfldbl='\"llf\"'\nsPRIgldbl='\"llg\"'\nsPRIi64='\"Li\"'\nsPRIo64='\"Lo\"'\nsPRIu64='\"Lu\"'\nsPRIx64='\"Lx\"'\nsSCNfldbl='\"llf\"'\nsched_yield='sched_yield()'\nscriptdir='/usr/local/bin'\nscriptdirexp='/usr/local/bin'\nseedfunc='Perl_drand48_init'\nselectminbits='32'\nselecttype=int\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='/bin/sh'\nshmattype='void *'\nshortsize='2'\nsig_name_init='0'\nsig_num_init='0'\nsig_size='1'\nsignal_t=int\nsitearch='/usr/local/lib/perl5/5.30/unknown'\nsitearchexp='/usr/local/lib/perl5/5.30/unknown'\nsitelib='/usr/local/lib/perl5/5.30'\nsitelib_stem='/usr/local/lib/perl5'\nsitelibexp='/usr/local/lib/perl5/5.30'\nsizesize=4\nsizetype='size_t'\nsocksizetype='int'\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc='.'\nssizetype=int\nst_ino_sign='1'\nst_ino_size='4'\nstartperl='#!perl'\nstdchar=char\nstdio_base='((fp)->_IO_read_base)'\nstdio_bufsiz='((fp)->_IO_read_end - (fp)->_IO_read_base)'\nstdio_cnt='((fp)->_IO_read_end - (fp)->_IO_read_ptr)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_IO_read_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\ntargetarch=''\ntargetsh='/bin/sh'\ntimetype=time_t\ntmpnam_r_proto='0'\ntouch='touch'\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='uint64_t'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"lu\"'\nuidsign='1'\nuidsize='4'\nuidtype=int\nuquadtype='uint64_t'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='undef'\nusedl='undef'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='undef'\nusekernprocpathname='undef'\nuselargefiles='undef'\nuselongdouble='undef'\nusemallocwrap='undef'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='undef'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='false'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='false'\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvendorarch=''\nvendorarchexp=''\nvendorlib_stem=''\nvendorlibexp=''\nversiononly='undef'\nzip=''\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/README.os2": "If you read this file _as_is_, just ignore the funny characters you\nsee. It is written in the POD format (see perlpod manpage) which is\nspecially designed to be readable as is.\n\n=head1 NAME\n\nperlos2 - Perl under OS/2, DOS, Win0.3*, Win0.95 and WinNT.\n\n=head1 SYNOPSIS\n\nOne can read this document in the following formats:\n\n\tman perlos2\n\tview perl perlos2\n\texplorer perlos2.html\n\tinfo perlos2\n\nto list some (not all may be available simultaneously), or it may\nbe read I<as is>: either as F<README.os2>, or F<pod/perlos2.pod>.\n\nTo read the F<.INF> version of documentation (B<very> recommended)\noutside of OS/2, one needs an IBM's reader (may be available on IBM\nftp sites (?)  (URL anyone?)) or shipped with PC DOS 7.0 and IBM's\nVisual Age C++ 3.5.\n\nA copy of a Win* viewer is contained in the \"Just add OS/2 Warp\" package\n\n  ftp://ftp.software.ibm.com/ps/products/os2/tools/jaow/jaow.zip\n\nin F<?:\\JUST_ADD\\view.exe>. This gives one an access to EMX's \nF<.INF> docs as well (text form is available in F</emx/doc> in \nEMX's distribution).  There is also a different viewer named xview.\n\nNote that if you have F<lynx.exe> or F<netscape.exe> installed, you can follow WWW links\nfrom this document in F<.INF> format. If you have EMX docs installed \ncorrectly, you can follow library links (you need to have C<view emxbook>\nworking by setting C<EMXBOOK> environment variable as it is described\nin EMX docs).\n\n=cut\n\nContents (This may be a little bit obsolete)\n \n perlos2 - Perl under OS/2, DOS, Win0.3*, Win0.95 and WinNT.\n\n      NAME\n      SYNOPSIS\n      DESCRIPTION\n\t -  Target\n\t -  Other OSes\n\t -  Prerequisites\n\t -  Starting Perl programs under OS/2 (and DOS and...)\n\t -  Starting OS/2 (and DOS) programs under Perl\n      Frequently asked questions\n\t -  \"It does not work\"\n\t -  I cannot run external programs\n\t -  I cannot embed perl into my program, or use perl.dll from my\n\t -  `` and pipe-open do not work under DOS.\n\t -  Cannot start find.exe \"pattern\" file\n      INSTALLATION\n\t -  Automatic binary installation\n\t -  Manual binary installation\n\t -  Warning\n      Accessing documentation\n\t -  OS/2 .INF file\n\t -  Plain text\n\t -  Manpages\n\t -  HTML\n\t -  GNU info files\n\t -  PDF files\n\t -  LaTeX docs\n      BUILD\n\t -  The short story\n\t -  Prerequisites\n\t -  Getting perl source\n\t -  Application of the patches\n\t -  Hand-editing\n\t -  Making\n\t -  Testing\n\t -  Installing the built perl\n\t -  a.out-style build\n      Build FAQ\n\t -  Some / became \\ in pdksh.\n\t -  'errno' - unresolved external\n\t -  Problems with tr or sed\n\t -  Some problem (forget which ;-)\n\t -  Library ... not found\n\t -  Segfault in make\n\t -  op/sprintf test failure\n      Specific (mis)features of OS/2 port\n\t -  setpriority, getpriority\n\t -  system()\n\t -  extproc on the first line\n\t -  Additional modules:\n\t -  Prebuilt methods:\n\t -  Prebuilt variables:\n\t -  Misfeatures\n\t -  Modifications\n\t -  Identifying DLLs\n\t -  Centralized management of resources\n      Perl flavors\n\t -  perl.exe\n\t -  perl_.exe\n\t -  perl__.exe\n\t -  perl___.exe\n\t -  Why strange names?\n\t -  Why dynamic linking?\n\t -  Why chimera build?\n      ENVIRONMENT\n\t -  PERLLIB_PREFIX\n\t -  PERL_BADLANG\n\t -  PERL_BADFREE\n\t -  PERL_SH_DIR\n\t -  USE_PERL_FLOCK\n\t -  TMP or TEMP\n      Evolution\n\t -  Text-mode filehandles\n\t -  Priorities\n\t -  DLL name mangling: pre 5.6.2\n\t -  DLL name mangling: 5.6.2 and beyond\n\t -  DLL forwarder generation\n\t -  Threading\n\t -  Calls to external programs\n\t -  Memory allocation\n\t -  Threads\n      BUGS\n      AUTHOR\n      SEE ALSO\n\n=head1 DESCRIPTION\n\n=head2 Target\n\nThe target is to make OS/2 one of the best supported platform for\nusing/building/developing Perl and I<Perl applications>, as well as\nmake Perl the best language to use under OS/2. The secondary target is\nto try to make this work under DOS and Win* as well (but not B<too> hard).\n\nThe current state is quite close to this target. Known limitations:\n\n=over 5\n\n=item *\n\nSome *nix programs use fork() a lot; with the mostly useful flavors of\nperl for OS/2 (there are several built simultaneously) this is\nsupported; but some flavors do not support this (e.g., when Perl is\ncalled from inside REXX).  Using fork() after\nI<use>ing dynamically loading extensions would not work with I<very> old\nversions of EMX.\n\n=item *\n\nYou need a separate perl executable F<perl__.exe> (see L</perl__.exe>)\nif you want to use PM code in your application (as Perl/Tk or OpenGL\nPerl modules do) without having a text-mode window present.\n\nWhile using the standard F<perl.exe> from a text-mode window is possible\ntoo, I have seen cases when this causes degradation of the system stability.\nUsing F<perl__.exe> avoids such a degradation.\n\n=item *\n\nThere is no simple way to access WPS objects. The only way I know\nis via C<OS2::REXX> and C<SOM> extensions (see L<OS2::REXX>, L<SOM>).\nHowever, we do not have access to\nconvenience methods of Object-REXX. (Is it possible at all? I know\nof no Object-REXX API.)  The C<SOM> extension (currently in alpha-text)\nmay eventually remove this shortcoming; however, due to the fact that\nDII is not supported by the C<SOM> module, using C<SOM> is not as\nconvenient as one would like it.\n\n=back\n\nPlease keep this list up-to-date by informing me about other items.\n\n=head2 Other OSes\n\nSince OS/2 port of perl uses a remarkable EMX environment, it can\nrun (and build extensions, and - possibly - be built itself) under any\nenvironment which can run EMX. The current list is DOS,\nDOS-inside-OS/2, Win0.3*, Win0.95 and WinNT. Out of many perl flavors,\nonly one works, see L</\"F<perl_.exe>\">.\n\nNote that not all features of Perl are available under these\nenvironments. This depends on the features the I<extender> - most\nprobably RSX - decided to implement.\n\nCf. L</Prerequisites>.\n\n=head2 Prerequisites\n\n=over 6\n\n=item EMX\n\nEMX runtime is required (may be substituted by RSX). Note that\nit is possible to make F<perl_.exe> to run under DOS without any\nexternal support by binding F<emx.exe>/F<rsx.exe> to it, see C<emxbind>. Note\nthat under DOS for best results one should use RSX runtime, which\nhas much more functions working (like C<fork>, C<popen> and so on). In\nfact RSX is required if there is no VCPI present. Note the\nRSX requires DPMI.  Many implementations of DPMI are known to be very\nbuggy, beware!\n\nOnly the latest runtime is supported, currently C<0.9d fix 03>. Perl may run\nunder earlier versions of EMX, but this is not tested.\n\nOne can get different parts of EMX from, say\n\n  ftp://crydee.sai.msu.ru/pub/comp/os/os2/leo/gnu/emx+gcc/\n  http://hobbes.nmsu.edu/h-browse.php?dir=/pub/os2/dev/emx/v0.9d/\n\nThe runtime component should have the name F<emxrt.zip>.\n\nB<NOTE>. When using F<emx.exe>/F<rsx.exe>, it is enough to have them on your path. One\ndoes not need to specify them explicitly (though this\n\n  emx perl_.exe -de 0\n\nwill work as well.)\n\n=item RSX\n\nTo run Perl on DPMI platforms one needs RSX runtime. This is\nneeded under DOS-inside-OS/2, Win0.3*, Win0.95 and WinNT (see \nL</\"Other OSes\">). RSX would not work with VCPI\nonly, as EMX would, it requires DMPI.\n\nHaving RSX and the latest F<sh.exe> one gets a fully functional\nB<*nix>-ish environment under DOS, say, C<fork>, C<``> and\npipe-C<open> work. In fact, MakeMaker works (for static build), so one\ncan have Perl development environment under DOS. \n\nOne can get RSX from, say\n\n  http://cd.textfiles.com/hobbesos29804/disk1/EMX09C/\n  ftp://crydee.sai.msu.ru/pub/comp/os/os2/leo/gnu/emx+gcc/contrib/\n\nContact the author on C<rainer@mathematik.uni-bielefeld.de>.\n\nThe latest F<sh.exe> with DOS hooks is available in\n\n  http://www.ilyaz.org/software/os2/\n\nas F<sh_dos.zip> or under similar names starting with C<sh>, C<pdksh> etc.\n\n=item HPFS\n\nPerl does not care about file systems, but the perl library contains\nmany files with long names, so to install it intact one needs a file\nsystem which supports long file names.\n\nNote that if you do not plan to build the perl itself, it may be\npossible to fool EMX to truncate file names. This is not supported,\nread EMX docs to see how to do it.\n\n=item pdksh\n\nTo start external programs with complicated command lines (like with\npipes in between, and/or quoting of arguments), Perl uses an external\nshell. With EMX port such shell should be named F<sh.exe>, and located\neither in the wired-in-during-compile locations (usually F<F:/bin>),\nor in configurable location (see L</\"C<PERL_SH_DIR>\">).\n\nFor best results use EMX pdksh. The standard binary (5.2.14 or later) runs\nunder DOS (with L</RSX>) as well, see\n\n  http://www.ilyaz.org/software/os2/\n\n=back\n\n=head2 Starting Perl programs under OS/2 (and DOS and...)\n\nStart your Perl program F<foo.pl> with arguments C<arg1 arg2 arg3> the\nsame way as on any other platform, by\n\n\tperl foo.pl arg1 arg2 arg3\n\nIf you want to specify perl options C<-my_opts> to the perl itself (as\nopposed to your program), use\n\n\tperl -my_opts foo.pl arg1 arg2 arg3\n\nAlternately, if you use OS/2-ish shell, like CMD or 4os2, put\nthe following at the start of your perl script:\n\n\textproc perl -S -my_opts\n\nrename your program to F<foo.cmd>, and start it by typing\n\n\tfoo arg1 arg2 arg3\n\nNote that because of stupid OS/2 limitations the full path of the perl\nscript is not available when you use C<extproc>, thus you are forced to\nuse C<-S> perl switch, and your script should be on the C<PATH>. As a plus\nside, if you know a full path to your script, you may still start it\nwith \n\n\tperl ../../blah/foo.cmd arg1 arg2 arg3\n\n(note that the argument C<-my_opts> is taken care of by the C<extproc> line\nin your script, see L<C<extproc> on the first line>).\n\nTo understand what the above I<magic> does, read perl docs about C<-S>\nswitch - see L<perlrun>, and cmdref about C<extproc>:\n\n\tview perl perlrun\n\tman perlrun\n\tview cmdref extproc\n\thelp extproc\n\nor whatever method you prefer.\n\nThere are also endless possibilities to use I<executable extensions> of\n4os2, I<associations> of WPS and so on... However, if you use\n*nixish shell (like F<sh.exe> supplied in the binary distribution),\nyou need to follow the syntax specified in L<perlrun/\"Command Switches\">.\n\nNote that B<-S> switch supports scripts with additional extensions \nF<.cmd>, F<.btm>, F<.bat>, F<.pl> as well.\n\n=head2 Starting OS/2 (and DOS) programs under Perl\n\nThis is what system() (see L<perlfunc/system>), C<``> (see\nL<perlop/\"I/O Operators\">), and I<open pipe> (see L<perlfunc/open>)\nare for. (Avoid exec() (see L<perlfunc/exec>) unless you know what you\ndo).\n\nNote however that to use some of these operators you need to have a\nsh-syntax shell installed (see L</\"Pdksh\">, \nL</\"Frequently asked questions\">), and perl should be able to find it\n(see L</\"C<PERL_SH_DIR>\">).\n\nThe cases when the shell is used are:\n\n=over\n\n=item 1\n\nOne-argument system() (see L<perlfunc/system>), exec() (see L<perlfunc/exec>)\nwith redirection or shell meta-characters;\n\n=item 2\n\nPipe-open (see L<perlfunc/open>) with the command which contains redirection \nor shell meta-characters;\n\n=item 3\n\nBackticks C<``> (see L<perlop/\"I/O Operators\">) with the command which contains\nredirection or shell meta-characters;\n\n=item 4\n\nIf the executable called by system()/exec()/pipe-open()/C<``> is a script\nwith the \"magic\" C<#!> line or C<extproc> line which specifies shell;\n\n=item 5\n\nIf the executable called by system()/exec()/pipe-open()/C<``> is a script\nwithout \"magic\" line, and C<$ENV{EXECSHELL}> is set to shell;\n\n=item 6\n\nIf the executable called by system()/exec()/pipe-open()/C<``> is not\nfound (is not this remark obsolete?);\n\n=item 7\n\nFor globbing (see L<perlfunc/glob>, L<perlop/\"I/O Operators\">)\n(obsolete? Perl uses builtin globbing nowadays...).\n\n=back\n\nFor the sake of speed for a common case, in the above algorithms \nbackslashes in the command name are not considered as shell metacharacters.\n\nPerl starts scripts which begin with cookies\nC<extproc> or C<#!> directly, without an intervention of shell.  Perl uses the\nsame algorithm to find the executable as F<pdksh>: if the path\non C<#!> line does not work, and contains C</>, then the directory\npart of the executable is ignored, and the executable\nis searched in F<.> and on C<PATH>.  To find arguments for these scripts\nPerl uses a different algorithm than F<pdksh>: up to 3 arguments are \nrecognized, and trailing whitespace is stripped.\n\nIf a script\ndoes not contain such a cooky, then to avoid calling F<sh.exe>, Perl uses\nthe same algorithm as F<pdksh>: if C<$ENV{EXECSHELL}> is set, the\nscript is given as the first argument to this command, if not set, then\nC<$ENV{COMSPEC} /c> is used (or a hardwired guess if C<$ENV{COMSPEC}> is\nnot set).\n\nWhen starting scripts directly, Perl uses exactly the same algorithm as for \nthe search of script given by B<-S> command-line option: it will look in\nthe current directory, then on components of C<$ENV{PATH}> using the \nfollowing order of appended extensions: no extension, F<.cmd>, F<.btm>, \nF<.bat>, F<.pl>.\n\nNote that Perl will start to look for scripts only if OS/2 cannot start the\nspecified application, thus C<system 'blah'> will not look for a script if \nthere is an executable file F<blah.exe> I<anywhere> on C<PATH>.  In\nother words, C<PATH> is essentially searched twice: once by the OS for\nan executable, then by Perl for scripts.\n\nNote also that executable files on OS/2 can have an arbitrary extension, but\nF<.exe> will be automatically appended if no dot is present in the name.  The\nworkaround is as simple as that:  since F<blah.> and F<blah> denote the same\nfile (at list on FAT and HPFS file systems), to start an executable residing in\nfile F<n:/bin/blah> (no extension) give an argument C<n:/bin/blah.> (dot\nappended) to system().\n\nPerl will start PM programs from VIO (=text-mode) Perl process in a\nseparate PM session;\nthe opposite is not true: when you start a non-PM program from a PM\nPerl process, Perl would not run it in a separate session.  If a separate\nsession is desired, either ensure\nthat shell will be used, as in C<system 'cmd /c myprog'>, or start it using\noptional arguments to system() documented in C<OS2::Process> module.  This\nis considered to be a feature.\n\n=head1 Frequently asked questions\n\n=head2 \"It does not work\"\n\nPerl binary distributions come with a F<testperl.cmd> script which tries\nto detect common problems with misconfigured installations.  There is a\npretty large chance it will discover which step of the installation you\nmanaged to goof.  C<;-)>\n\n=head2 I cannot run external programs\n\n=over 4\n\n=item *\n\nDid you run your programs with C<-w> switch? See \nL<Starting OSE<sol>2 (and DOS) programs under Perl>.\n\n=item *\n\nDo you try to run I<internal> shell commands, like C<`copy a b`>\n(internal for F<cmd.exe>), or C<`glob a*b`> (internal for ksh)? You\nneed to specify your shell explicitly, like C<`cmd /c copy a b`>,\nsince Perl cannot deduce which commands are internal to your shell.\n\n=back\n\n=head2 I cannot embed perl into my program, or use F<perl.dll> from my\nprogram. \n\n=over 4\n\n=item Is your program EMX-compiled with C<-Zmt -Zcrtdll>?\n\nWell, nowadays Perl DLL should be usable from a differently compiled\nprogram too...  If you can run Perl code from REXX scripts (see\nL<OS2::REXX>), then there are some other aspect of interaction which\nare overlooked by the current hackish code to support\ndifferently-compiled principal programs.\n\nIf everything else fails, you need to build a stand-alone DLL for\nperl. Contact me, I did it once. Sockets would not work, as a lot of\nother stuff.\n\n=item Did you use L<ExtUtils::Embed>?\n\nSome time ago I had reports it does not work.  Nowadays it is checked\nin the Perl test suite, so grep F<./t> subdirectory of the build tree\n(as well as F<*.t> files in the F<./lib> subdirectory) to find how it\nshould be done \"correctly\".\n\n=back\n\n=head2 C<``> and pipe-C<open> do not work under DOS.\n\nThis may a variant of just L</\"I cannot run external programs\">, or a\ndeeper problem. Basically: you I<need> RSX (see L</Prerequisites>)\nfor these commands to work, and you may need a port of F<sh.exe> which\nunderstands command arguments. One of such ports is listed in\nL</Prerequisites> under RSX. Do not forget to set variable\nL</\"C<PERL_SH_DIR>\"> as well.\n\nDPMI is required for RSX.\n\n=head2 Cannot start C<find.exe \"pattern\" file>\n\nThe whole idea of the \"standard C API to start applications\" is that\nthe forms C<foo> and C<\"foo\"> of program arguments are completely\ninterchangeable.  F<find> breaks this paradigm;\n\n  find \"pattern\" file\n  find pattern file\n\nare not equivalent; F<find> cannot be started directly using the above\nAPI.  One needs a way to surround the doublequotes in some other\nquoting construction, necessarily having an extra non-Unixish shell in\nbetween.\n\nUse one of\n\n  system 'cmd', '/c', 'find \"pattern\" file';\n  `cmd /c 'find \"pattern\" file'`\n\nThis would start F<find.exe> via F<cmd.exe> via C<sh.exe> via\nC<perl.exe>, but this is a price to pay if you want to use\nnon-conforming program.\n\n=head1 INSTALLATION\n\n=head2 Automatic binary installation\n\nThe most convenient way of installing a binary distribution of perl is via perl installer\nF<install.exe>. Just follow the instructions, and 99% of the\ninstallation blues would go away. \n\nNote however, that you need to have F<unzip.exe> on your path, and\nEMX environment I<running>. The latter means that if you just\ninstalled EMX, and made all the needed changes to F<Config.sys>,\nyou may need to reboot in between. Check EMX runtime by running\n\n\temxrev\n\nBinary installer also creates a folder on your desktop with some useful\nobjects.  If you need to change some aspects of the work of the binary\ninstaller, feel free to edit the file F<Perl.pkg>.  This may be useful\ne.g., if you need to run the installer many times and do not want to\nmake many interactive changes in the GUI.\n\nB<Things not taken care of by automatic binary installation:>\n\n=over 15\n\n=item C<PERL_BADLANG>\n\nmay be needed if you change your codepage I<after> perl installation,\nand the new value is not supported by EMX. See L</\"C<PERL_BADLANG>\">.\n\n=item C<PERL_BADFREE>\n\nsee L</\"C<PERL_BADFREE>\">.\n\n=item F<Config.pm>\n\nThis file resides somewhere deep in the location you installed your\nperl library, find it out by \n\n  perl -MConfig -le \"print $INC{'Config.pm'}\"\n\nWhile most important values in this file I<are> updated by the binary\ninstaller, some of them may need to be hand-edited. I know no such\ndata, please keep me informed if you find one.  Moreover, manual\nchanges to the installed version may need to be accompanied by an edit\nof this file.\n\n=back\n\nB<NOTE>. Because of a typo the binary installer of 5.00305\nwould install a variable C<PERL_SHPATH> into F<Config.sys>. Please\nremove this variable and put L</C<PERL_SH_DIR>> instead.\n\n=head2 Manual binary installation\n\nAs of version 5.00305, OS/2 perl binary distribution comes split\ninto 11 components. Unfortunately, to enable configurable binary\ninstallation, the file paths in the zip files are not absolute, but\nrelative to some directory.\n\nNote that the extraction with the stored paths is still necessary\n(default with unzip, specify C<-d> to pkunzip). However, you\nneed to know where to extract the files. You need also to manually\nchange entries in F<Config.sys> to reflect where did you put the\nfiles. Note that if you have some primitive unzipper (like\nC<pkunzip>), you may get a lot of warnings/errors during\nunzipping. Upgrade to C<(w)unzip>.\n\nBelow is the sample of what to do to reproduce the configuration on my\nmachine.  In F<VIEW.EXE> you can press C<Ctrl-Insert> now, and\ncut-and-paste from the resulting file - created in the directory you\nstarted F<VIEW.EXE> from.\n\nFor each component, we mention environment variables related to each\ninstallation directory.  Either choose directories to match your\nvalues of the variables, or create/append-to variables to take into\naccount the directories.\n\n=over 3\n\n=item Perl VIO and PM executables (dynamically linked)\n\n  unzip perl_exc.zip *.exe *.ico -d f:/emx.add/bin\n  unzip perl_exc.zip *.dll -d f:/emx.add/dll\n\n(have the directories with C<*.exe> on PATH, and C<*.dll> on\nLIBPATH);\n\n=item Perl_ VIO executable (statically linked)\n\n  unzip perl_aou.zip -d f:/emx.add/bin\n\n(have the directory on PATH);\n\n=item Executables for Perl utilities\n\n  unzip perl_utl.zip -d f:/emx.add/bin\n\n(have the directory on PATH);\n\n=item Main Perl library\n\n  unzip perl_mlb.zip -d f:/perllib/lib\n\nIf this directory is exactly the same as the prefix which was compiled\ninto F<perl.exe>, you do not need to change\nanything. However, for perl to find the library if you use a different\npath, you need to\nC<set PERLLIB_PREFIX> in F<Config.sys>, see L</\"C<PERLLIB_PREFIX>\">.\n\n=item Additional Perl modules\n\n  unzip perl_ste.zip -d f:/perllib/lib/site_perl/5.30.3/\n\nSame remark as above applies.  Additionally, if this directory is not\none of directories on @INC (and @INC is influenced by C<PERLLIB_PREFIX>), you\nneed to put this\ndirectory and subdirectory F<./os2> in C<PERLLIB> or C<PERL5LIB>\nvariable. Do not use C<PERL5LIB> unless you have it set already. See\nL<perl/\"ENVIRONMENT\">.\n\nB<[Check whether this extraction directory is still applicable with\nthe new directory structure layout!]>\n\n=item Tools to compile Perl modules\n\n  unzip perl_blb.zip -d f:/perllib/lib\n\nSame remark as for F<perl_ste.zip>.\n\n=item Manpages for Perl and utilities\n\n  unzip perl_man.zip -d f:/perllib/man\n\nThis directory should better be on C<MANPATH>. You need to have a\nworking F<man> to access these files.\n\n=item Manpages for Perl modules\n\n  unzip perl_mam.zip -d f:/perllib/man\n\nThis directory should better be on C<MANPATH>. You need to have a\nworking man to access these files.\n\n=item Source for Perl documentation\n\n  unzip perl_pod.zip -d f:/perllib/lib\n\nThis is used by the C<perldoc> program (see L<perldoc>), and may be used to\ngenerate HTML documentation usable by WWW browsers, and\ndocumentation in zillions of other formats: C<info>, C<LaTeX>,\nC<Acrobat>, C<FrameMaker> and so on.  [Use programs such as\nF<pod2latex> etc.]\n\n=item Perl manual in F<.INF> format\n\n  unzip perl_inf.zip -d d:/os2/book\n\nThis directory should better be on C<BOOKSHELF>.\n\n=item Pdksh\n\n  unzip perl_sh.zip -d f:/bin\n\nThis is used by perl to run external commands which explicitly\nrequire shell, like the commands using I<redirection> and I<shell\nmetacharacters>. It is also used instead of explicit F</bin/sh>.\n\nSet C<PERL_SH_DIR> (see L</\"C<PERL_SH_DIR>\">) if you move F<sh.exe> from\nthe above location.\n\nB<Note.> It may be possible to use some other sh-compatible shell (untested).\n\n=back\n\nAfter you installed the components you needed and updated the\nF<Config.sys> correspondingly, you need to hand-edit\nF<Config.pm>. This file resides somewhere deep in the location you\ninstalled your perl library, find it out by\n\n  perl -MConfig -le \"print $INC{'Config.pm'}\"\n\nYou need to correct all the entries which look like file paths (they\ncurrently start with C<f:/>).\n\n=head2 B<Warning>\n\nThe automatic and manual perl installation leave precompiled paths\ninside perl executables. While these paths are overwritable (see\nL</\"C<PERLLIB_PREFIX>\">, L</\"C<PERL_SH_DIR>\">), some people may prefer\nbinary editing of paths inside the executables/DLLs.\n\n=head1 Accessing documentation\n\nDepending on how you built/installed perl you may have (otherwise\nidentical) Perl documentation in the following formats:\n\n=head2 OS/2 F<.INF> file\n\nMost probably the most convenient form. Under OS/2 view it as\n\n  view perl\n  view perl perlfunc\n  view perl less\n  view perl ExtUtils::MakeMaker\n\n(currently the last two may hit a wrong location, but this may improve\nsoon). Under Win* see L</\"SYNOPSIS\">.\n\nIf you want to build the docs yourself, and have I<OS/2 toolkit>, run\n\n\tpod2ipf > perl.ipf\n\nin F</perllib/lib/pod> directory, then\n\n\tipfc /inf perl.ipf\n\n(Expect a lot of errors during the both steps.) Now move it on your\nBOOKSHELF path.\n\n=head2 Plain text\n\nIf you have perl documentation in the source form, perl utilities\ninstalled, and GNU groff installed, you may use \n\n\tperldoc perlfunc\n\tperldoc less\n\tperldoc ExtUtils::MakeMaker\n\nto access the perl documentation in the text form (note that you may get\nbetter results using perl manpages).\n\nAlternately, try running pod2text on F<.pod> files.\n\n=head2 Manpages\n\nIf you have F<man> installed on your system, and you installed perl\nmanpages, use something like this:\n\n\tman perlfunc\n\tman 3 less\n\tman ExtUtils.MakeMaker\n\nto access documentation for different components of Perl. Start with\n\n\tman perl\n\nNote that dot (F<.>) is used as a package separator for documentation\nfor packages, and as usual, sometimes you need to give the section - C<3>\nabove - to avoid shadowing by the I<less(1) manpage>.\n\nMake sure that the directory B<above> the directory with manpages is\non our C<MANPATH>, like this\n\n  set MANPATH=c:/man;f:/perllib/man\n\nfor Perl manpages in C<f:/perllib/man/man1/> etc.\n\n=head2 HTML\n\nIf you have some WWW browser available, installed the Perl\ndocumentation in the source form, and Perl utilities, you can build\nHTML docs. Cd to directory with F<.pod> files, and do like this\n\n\tcd f:/perllib/lib/pod\n\tpod2html\n\nAfter this you can direct your browser the file F<perl.html> in this\ndirectory, and go ahead with reading docs, like this:\n\n\texplore file:///f:/perllib/lib/pod/perl.html\n\nAlternatively you may be able to get these docs prebuilt from CPAN.\n\n=head2 GNU C<info> files\n\nUsers of Emacs would appreciate it very much, especially with\nC<CPerl> mode loaded. You need to get latest C<pod2texi> from C<CPAN>,\nor, alternately, the prebuilt info pages.\n\n=head2 F<PDF> files\n\nfor C<Acrobat> are available on CPAN (may be for slightly older version of\nperl).\n\n=head2 C<LaTeX> docs\n\ncan be constructed using C<pod2latex>.\n\n=head1 BUILD\n\nHere we discuss how to build Perl under OS/2.\n\n=head2 The short story\n\nAssume that you are a seasoned porter, so are sure that all the necessary\ntools are already present on your system, and you know how to get the Perl\nsource distribution.  Untar it, change to the extract directory, and\n\n  gnupatch -p0 < os2\\diff.configure\n  sh Configure -des -D prefix=f:/perllib\n  make\n  make test\n  make install\n  make aout_test\n  make aout_install\n\nThis puts the executables in f:/perllib/bin.  Manually move them to the\nC<PATH>, manually move the built F<perl*.dll> to C<LIBPATH> (here for\nPerl DLL F<*> is a not-very-meaningful hex checksum), and run\n\n  make installcmd INSTALLCMDDIR=d:/ir/on/path\n\nAssuming that the C<man>-files were put on an appropriate location,\nthis completes the installation of minimal Perl system.  (The binary\ndistribution contains also a lot of additional modules, and the\ndocumentation in INF format.)\n\nWhat follows is a detailed guide through these steps.\n\n=head2 Prerequisites\n\nYou need to have the latest EMX development environment, the full\nGNU tool suite (gawk renamed to awk, and GNU F<find.exe>\nearlier on path than the OS/2 F<find.exe>, same with F<sort.exe>, to\ncheck use\n\n  find --version\n  sort --version\n\n). You need the latest version of F<pdksh> installed as F<sh.exe>.\n\nCheck that you have B<BSD> libraries and headers installed, and - \noptionally - Berkeley DB headers and libraries, and crypt.\n\nPossible locations to get the files:\n\n\n  ftp://ftp.uni-heidelberg.de/pub/os2/unix/\n  http://hobbes.nmsu.edu/h-browse.php?dir=/pub/os2\n  http://cd.textfiles.com/hobbesos29804/disk1/DEV32/\n  http://cd.textfiles.com/hobbesos29804/disk1/EMX09C/\n\nIt is reported that the following archives contain enough utils to\nbuild perl: F<gnufutil.zip>, F<gnusutil.zip>, F<gnututil.zip>, F<gnused.zip>,\nF<gnupatch.zip>, F<gnuawk.zip>, F<gnumake.zip>, F<gnugrep.zip>, F<bsddev.zip> and\nF<ksh527rt.zip> (or a later version).  Note that all these utilities are\nknown to be available from LEO:\n\n  ftp://crydee.sai.msu.ru/pub/comp/os/os2/leo/gnu/\n\nNote also that the F<db.lib> and F<db.a> from the EMX distribution\nare not suitable for multi-threaded compile (even single-threaded\nflavor of Perl uses multi-threaded C RTL, for\ncompatibility with XFree86-OS/2). Get a corrected one from\n\n  http://www.ilyaz.org/software/os2/db_mt.zip\n\nIf you have I<exactly the same version of Perl> installed already,\nmake sure that no copies or perl are currently running.  Later steps\nof the build may fail since an older version of F<perl.dll> loaded into\nmemory may be found.  Running C<make test> becomes meaningless, since\nthe test are checking a previous build of perl (this situation is detected\nand reported by F<os2/os2_base.t> test).  Do not forget to unset\nC<PERL_EMXLOAD_SEC> in environment.\n\nAlso make sure that you have F</tmp> directory on the current drive,\nand F<.> directory in your C<LIBPATH>. One may try to correct the\nlatter condition by\n\n  set BEGINLIBPATH .\\.\n\nif you use something like F<CMD.EXE> or latest versions of\nF<4os2.exe>.  (Setting BEGINLIBPATH to just C<.> is ignored by the\nOS/2 kernel.)\n\nMake sure your gcc is good for C<-Zomf> linking: run C<omflibs>\nscript in F</emx/lib> directory.\n\nCheck that you have link386 installed. It comes standard with OS/2,\nbut may be not installed due to customization. If typing\n\n  link386\n\nshows you do not have it, do I<Selective install>, and choose C<Link\nobject modules> in I<Optional system utilities/More>. If you get into\nlink386 prompts, press C<Ctrl-C> to exit.\n\n=head2 Getting perl source\n\nYou need to fetch the latest perl source (including developers\nreleases). With some probability it is located in \n\n  http://www.cpan.org/src/\n  http://www.cpan.org/src/unsupported\n\nIf not, you may need to dig in the indices to find it in the directory\nof the current maintainer.\n\nQuick cycle of developers release may break the OS/2 build time to\ntime, looking into \n\n  http://www.cpan.org/ports/os2/\n\nmay indicate the latest release which was publicly released by the\nmaintainer. Note that the release may include some additional patches\nto apply to the current source of perl.\n\nExtract it like this\n\n  tar vzxf perl5.00409.tar.gz\n\nYou may see a message about errors while extracting F<Configure>. This is\nbecause there is a conflict with a similarly-named file F<configure>.\n\nChange to the directory of extraction.\n\n=head2 Application of the patches\n\nYou need to apply the patches in F<./os2/diff.*> like this:\n\n  gnupatch -p0 < os2\\diff.configure\n\nYou may also need to apply the patches supplied with the binary\ndistribution of perl.  It also makes sense to look on the\nperl5-porters mailing list for the latest OS/2-related patches (see\nL<http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/>).  Such\npatches usually contain strings C</os2/> and C<patch>, so it makes\nsense looking for these strings.\n\n=head2 Hand-editing\n\nYou may look into the file F<./hints/os2.sh> and correct anything\nwrong you find there. I do not expect it is needed anywhere.\n\n=head2 Making\n\n  sh Configure -des -D prefix=f:/perllib\n\nC<prefix> means: where to install the resulting perl library. Giving\ncorrect prefix you may avoid the need to specify C<PERLLIB_PREFIX>,\nsee L</\"C<PERLLIB_PREFIX>\">.\n\nI<Ignore the message about missing C<ln>, and about C<-c> option to\ntr>. The latter is most probably already fixed, if you see it and can trace\nwhere the latter spurious warning comes from, please inform me.\n\nNow\n\n  make\n\nAt some moment the built may die, reporting a I<version mismatch> or\nI<unable to run F<perl>>.  This means that you do not have F<.> in\nyour LIBPATH, so F<perl.exe> cannot find the needed F<perl67B2.dll> (treat\nthese hex digits as line noise).  After this is fixed the build\nshould finish without a lot of fuss.\n\n=head2 Testing\n\nNow run\n\n  make test\n\nAll tests should succeed (with some of them skipped).  If you have the\nsame version of Perl installed, it is crucial that you have C<.> early\nin your LIBPATH (or in BEGINLIBPATH), otherwise your tests will most\nprobably test the wrong version of Perl.\n\nSome tests may generate extra messages similar to\n\n=over 4\n\n=item A lot of C<bad free>\n\nin database tests related to Berkeley DB. I<This should be fixed already.>\nIf it persists, you may disable this warnings, see L</\"C<PERL_BADFREE>\">.\n\n=item Process terminated by SIGTERM/SIGINT\n\nThis is a standard message issued by OS/2 applications. *nix\napplications die in silence. It is considered to be a feature. One can\neasily disable this by appropriate sighandlers. \n\nHowever the test engine bleeds these message to screen in unexpected\nmoments. Two messages of this kind I<should> be present during\ntesting.\n\n=back\n\nTo get finer test reports, call\n\n  perl t/harness\n\nThe report with F<io/pipe.t> failing may look like this:\n\n Failed Test  Status Wstat Total Fail  Failed  List of failed\n ------------------------------------------------------------\n io/pipe.t                    12    1   8.33%  9\n 7 tests skipped, plus 56 subtests skipped.\n Failed 1/195 test scripts, 99.49% okay. 1/6542 subtests failed,\n    99.98% okay.\n\nThe reasons for most important skipped tests are:\n\n=over 8\n\n=item F<op/fs.t>\n\n=over 4\n\n=item Z<>18\n\nChecks C<atime> and C<mtime> of C<stat()> - unfortunately, HPFS\nprovides only 2sec time granularity (for compatibility with FAT?).\n\n=item Z<>25\n\nChecks C<truncate()> on a filehandle just opened for write - I do not\nknow why this should or should not work.\n\n=back\n\n=item F<op/stat.t>\n\nChecks C<stat()>. Tests:\n\n=over 4\n\n=item 4\n\nChecks C<atime> and C<mtime> of C<stat()> - unfortunately, HPFS\nprovides only 2sec time granularity (for compatibility with FAT?).\n\n=back\n\n=back\n\n=head2 Installing the built perl\n\nIf you haven't yet moved C<perl*.dll> onto LIBPATH, do it now.\n\nRun\n\n  make install\n\nIt would put the generated files into needed locations. Manually put\nF<perl.exe>, F<perl__.exe> and F<perl___.exe> to a location on your\nPATH, F<perl.dll> to a location on your LIBPATH.\n\nRun\n\n  make installcmd INSTALLCMDDIR=d:/ir/on/path\n\nto convert perl utilities to F<.cmd> files and put them on\nPATH. You need to put F<.EXE>-utilities on path manually. They are\ninstalled in C<$prefix/bin>, here C<$prefix> is what you gave to\nF<Configure>, see L</Making>.\n\nIf you use C<man>, either move the installed F<*/man/> directories to\nyour C<MANPATH>, or modify C<MANPATH> to match the location.  (One\ncould have avoided this by providing a correct C<manpath> option to\nF<./Configure>, or editing F<./config.sh> between configuring and\nmaking steps.)\n\n=head2 C<a.out>-style build\n\nProceed as above, but make F<perl_.exe> (see L</\"F<perl_.exe>\">) by\n\n  make perl_\n\ntest and install by\n\n  make aout_test\n  make aout_install\n\nManually put F<perl_.exe> to a location on your PATH.\n\nB<Note.> The build process for C<perl_> I<does not know> about all the\ndependencies, so you should make sure that anything is up-to-date,\nsay, by doing\n\n  make perl_dll\n\nfirst.\n\n=head1 Building a binary distribution\n\n[This section provides a short overview only...]\n\nBuilding should proceed differently depending on whether the version of perl\nyou install is already present and used on your system, or is a new version\nnot yet used.  The description below assumes that the version is new, so\ninstalling its DLLs and F<.pm> files will not disrupt the operation of your\nsystem even if some intermediate steps are not yet fully working.\n\nThe other cases require a little bit more convoluted procedures.  Below I\nsuppose that the current version of Perl is C<5.8.2>, so the executables are\nnamed accordingly.\n\n=over\n\n=item 1.\n\nFully build and test the Perl distribution.  Make sure that no tests are\nfailing with C<test> and C<aout_test> targets; fix the bugs in Perl and\nthe Perl test suite detected by these tests.  Make sure that C<all_test>\nmake target runs as clean as possible.  Check that F<os2/perlrexx.cmd>\nruns fine.\n\n=item 2.\n\nFully install Perl, including C<installcmd> target.  Copy the generated DLLs\nto C<LIBPATH>; copy the numbered Perl executables (as in F<perl5.8.2.exe>)\nto C<PATH>; copy C<perl_.exe> to C<PATH> as C<perl_5.8.2.exe>.  Think whether\nyou need backward-compatibility DLLs.  In most cases you do not need to install\nthem yet; but sometime this may simplify the following steps.\n\n=item 3.\n\nMake sure that C<CPAN.pm> can download files from CPAN.  If not, you may need\nto manually install C<Net::FTP>.\n\n=item 4.\n\nInstall the bundle C<Bundle::OS2_default>\n\n perl5.8.2 -MCPAN -e \"install Bundle::OS2_default\" < nul |& tee 00cpan_i_1\n\nThis may take a couple of hours on 1GHz processor (when run the first time).\nAnd this should not be necessarily a smooth procedure.  Some modules may not\nspecify required dependencies, so one may need to repeat this procedure several\ntimes until the results stabilize.\n\n perl5.8.2 -MCPAN -e \"install Bundle::OS2_default\" < nul |& tee 00cpan_i_2\n perl5.8.2 -MCPAN -e \"install Bundle::OS2_default\" < nul |& tee 00cpan_i_3\n\nEven after they stabilize, some tests may fail.\n\nFix as many discovered bugs as possible.  Document all the bugs which are not\nfixed, and all the failures with unknown reasons.  Inspect the produced logs\nF<00cpan_i_1> to find suspiciously skipped tests, and other fishy events.\n\nKeep in mind that I<installation> of some modules may fail too: for example,\nthe DLLs to update may be already loaded by F<CPAN.pm>.  Inspect the C<install>\nlogs (in the example above F<00cpan_i_1> etc) for errors, and install things\nmanually, as in\n\n  cd $CPANHOME/.cpan/build/Digest-MD5-2.31\n  make install\n\nSome distributions may fail some tests, but you may want to install them\nanyway (as above, or via C<force install> command of C<CPAN.pm> shell-mode).\n\nSince this procedure may take quite a long time to complete, it makes sense\nto \"freeze\" your CPAN configuration by disabling periodic updates of the\nlocal copy of CPAN index: set C<index_expire> to some big value (I use 365),\nthen save the settings\n\n  CPAN> o conf index_expire 365\n  CPAN> o conf commit\n\nReset back to the default value C<1> when you are finished.\n\n=item 5.\n\nWhen satisfied with the results, rerun the C<installcmd> target.  Now you\ncan copy C<perl5.8.2.exe> to C<perl.exe>, and install the other OMF-build\nexecutables: C<perl__.exe> etc.  They are ready to be used.\n\n=item 6.\n\nChange to the C<./pod> directory of the build tree, download the Perl logo\nF<CamelGrayBig.BMP>, and run\n\n  ( perl2ipf > perl.ipf ) |& tee 00ipf\n  ipfc /INF perl.ipf |& tee 00inf\n\nThis produces the Perl docs online book C<perl.INF>.  Install in on\nC<BOOKSHELF> path.\n\n=item 7.\n\nNow is the time to build statically linked executable F<perl_.exe> which\nincludes newly-installed via C<Bundle::OS2_default> modules.  Doing testing\nvia C<CPAN.pm> is going to be painfully slow, since it statically links\na new executable per XS extension.\n\nHere is a possible workaround: create a toplevel F<Makefile.PL> in\nF<$CPANHOME/.cpan/build/> with contents being (compare with L</Making\nexecutables with a custom collection of statically loaded extensions>)\n\n  use ExtUtils::MakeMaker;\n  WriteMakefile NAME => 'dummy';\n\nexecute this as\n\n  perl_5.8.2.exe Makefile.PL <nul |& tee 00aout_c1\n  make -k all test <nul |& 00aout_t1\n\nAgain, this procedure should not be absolutely smooth.  Some C<Makefile.PL>'s\nin subdirectories may be buggy, and would not run as \"child\" scripts.  The\ninterdependency of modules can strike you; however, since non-XS modules\nare already installed, the prerequisites of most modules have a very good\nchance to be present.\n\nIf you discover some glitches, move directories of problematic modules to a\ndifferent location; if these modules are non-XS modules, you may just ignore\nthem - they are already installed; the remaining, XS, modules you need to\ninstall manually one by one.\n\nAfter each such removal you need to rerun the C<Makefile.PL>/C<make> process;\nusually this procedure converges soon.  (But be sure to convert all the\nnecessary external C libraries from F<.lib> format to F<.a> format: run one of\n\n  emxaout foo.lib\n  emximp -o foo.a foo.lib\n\nwhichever is appropriate.)  Also, make sure that the DLLs for external\nlibraries are usable with with executables compiled without C<-Zmtd> options.\n\nWhen you are sure that only a few subdirectories\nlead to failures, you may want to add C<-j4> option to C<make> to speed up\nskipping subdirectories with already finished build.\n\nWhen you are satisfied with the results of tests, install the build C libraries\nfor extensions:\n\n  make install |& tee 00aout_i\n\nNow you can rename the file F<./perl.exe> generated during the last phase\nto F<perl_5.8.2.exe>; place it on C<PATH>; if there is an inter-dependency\nbetween some XS modules, you may need to repeat the C<test>/C<install> loop\nwith this new executable and some excluded modules - until the procedure\nconverges.\n\nNow you have all the necessary F<.a> libraries for these Perl modules in the\nplaces where Perl builder can find it.  Use the perl builder: change to an\nempty directory, create a \"dummy\" F<Makefile.PL> again, and run\n\n  perl_5.8.2.exe Makefile.PL |& tee 00c\n  make perl\t\t     |& tee 00p\n\nThis should create an executable F<./perl.exe> with all the statically loaded\nextensions built in.  Compare the generated F<perlmain.c> files to make sure\nthat during the iterations the number of loaded extensions only increases.\nRename F<./perl.exe> to F<perl_5.8.2.exe> on C<PATH>.\n\nWhen it converges, you got a functional variant of F<perl_5.8.2.exe>; copy it\nto C<perl_.exe>.  You are done with generation of the local Perl installation.\n\n=item 8.\n\nMake sure that the installed modules are actually installed in the location\nof the new Perl, and are not inherited from entries of @INC given for\ninheritance from the older versions of Perl: set C<PERLLIB_582_PREFIX> to\nredirect the new version of Perl to a new location, and copy the installed\nfiles to this new location.  Redo the tests to make sure that the versions of\nmodules inherited from older versions of Perl are not needed.\n\nActually, the log output of L<pod2ipf(1)> during the step 6 gives a very detailed\ninfo about which modules are loaded from which place; so you may use it as\nan additional verification tool.\n\nCheck that some temporary files did not make into the perl install tree.\nRun something like this\n\n  pfind . -f \"!(/\\.(pm|pl|ix|al|h|a|lib|txt|pod|imp|bs|dll|ld|bs|inc|xbm|yml|cgi|uu|e2x|skip|packlist|eg|cfg|html|pub|enc|all|ini|po|pot)$/i or /^\\w+$/\") | less\n\nin the install tree (both top one and F<sitelib> one).\n\nCompress all the DLLs with F<lxlite>.  The tiny F<.exe> can be compressed with\nC</c:max> (the bug only appears when there is a fixup in the last 6 bytes of a\npage (?); since the tiny executables are much smaller than a page, the bug\nwill not hit).  Do not compress C<perl_.exe> - it would not work under DOS.\n\n=item 9.\n\nNow you can generate the binary distribution.  This is done by running the\ntest of the CPAN distribution C<OS2::SoftInstaller>.  Tune up the file\nF<test.pl> to suit the layout of current version of Perl first.  Do not\nforget to pack the necessary external DLLs accordingly.  Include the\ndescription of the bugs and test suite failures you could not fix.  Include\nthe small-stack versions of Perl executables from Perl build directory.\n\nInclude F<perl5.def> so that people can relink the perl DLL preserving\nthe binary compatibility, or can create compatibility DLLs.  Include the diff\nfiles (C<diff -pu old new>) of fixes you did so that people can rebuild your\nversion.  Include F<perl5.map> so that one can use remote debugging.\n\n=item 10.\n\nShare what you did with the other people.  Relax.  Enjoy fruits of your work.\n\n=item 11.\n\nBrace yourself for thanks, bug reports, hate mail and spam coming as result\nof the previous step.  No good deed should remain unpunished!\n\n=back\n\n=head1 Building custom F<.EXE> files\n\nThe Perl executables can be easily rebuilt at any moment.  Moreover, one can\nuse the I<embedding> interface (see L<perlembed>) to make very customized\nexecutables.\n\n=head2 Making executables with a custom collection of statically loaded extensions\n\nIt is a little bit easier to do so while I<decreasing> the list of statically\nloaded extensions.  We discuss this case only here.\n\n=over\n\n=item 1.\n\nChange to an empty directory, and create a placeholder <Makefile.PL>:\n\n  use ExtUtils::MakeMaker;\n  WriteMakefile NAME => 'dummy';\n\n=item 2.\n\nRun it with the flavor of Perl (F<perl.exe> or F<perl_.exe>) you want to\nrebuild.\n\n  perl_ Makefile.PL\n\n=item 3.\n\nAsk it to create new Perl executable:\n\n  make perl\n\n(you may need to manually add C<PERLTYPE=-DPERL_CORE> to this commandline on\nsome versions of Perl; the symptom is that the command-line globbing does not\nwork from OS/2 shells with the newly-compiled executable; check with\n\n  .\\perl.exe -wle \"print for @ARGV\" *\n\n).\n\n=item 4.\n\nThe previous step created F<perlmain.c> which contains a list of newXS() calls\nnear the end.  Removing unnecessary calls, and rerunning\n\n  make perl\n\nwill produce a customized executable.\n\n=back\n\n=head2 Making executables with a custom search-paths\n\nThe default perl executable is flexible enough to support most usages.\nHowever, one may want something yet more flexible; for example, one may want\nto find Perl DLL relatively to the location of the EXE file; or one may want\nto ignore the environment when setting the Perl-library search patch, etc.\n\nIf you fill comfortable with I<embedding> interface (see L<perlembed>), such\nthings are easy to do repeating the steps outlined in L/<Making\nexecutables with a custom collection of statically loaded extensions>, and\ndoing more comprehensive edits to main() of F<perlmain.c>.  The people with\nlittle desire to understand Perl can just rename main(), and do necessary\nmodification in a custom main() which calls the renamed function in appropriate\ntime.\n\nHowever, there is a third way: perl DLL exports the main() function and several\ncallbacks to customize the search path.  Below is a complete example of a\n\"Perl loader\" which\n\n=over\n\n=item 1.\n\nLooks for Perl DLL in the directory C<$exedir/../dll>;\n\n=item 2.\n\nPrepends the above directory to C<BEGINLIBPATH>;\n\n=item 3.\n\nFails if the Perl DLL found via C<BEGINLIBPATH> is different from what was\nloaded on step 1; e.g., another process could have loaded it from C<LIBPATH>\nor from a different value of C<BEGINLIBPATH>.  In these cases one needs to\nmodify the setting of the system so that this other process either does not\nrun, or loads the DLL from C<BEGINLIBPATH> with C<LIBPATHSTRICT=T> (available\nwith kernels after September 2000).\n\n=item 4.\n\nLoads Perl library from C<$exedir/../dll/lib/>.\n\n=item 5.\n\nUses Bourne shell from C<$exedir/../dll/sh/ksh.exe>.\n\n=back\n\nFor best results compile the C file below with the same options as the Perl\nDLL.  However, a lot of functionality will work even if the executable is not\nan EMX applications, e.g., if compiled with\n\n  gcc -Wall -DDOSISH -DOS2=1 -O2 -s -Zomf -Zsys perl-starter.c \\\n    -DPERL_DLL_BASENAME=\\\"perl312F\\\" -Zstack 8192 -Zlinker /PM:VIO\n\nHere is the sample C file:\n\n #define INCL_DOS\n #define INCL_NOPM\n /* These are needed for compile if os2.h includes os2tk.h, not\n  * os2emx.h */\n #define INCL_DOSPROCESS\n #include <os2.h>\n\n #include \"EXTERN.h\"\n #define PERL_IN_MINIPERLMAIN_C\n #include \"perl.h\"\n\n static char *me;\n HMODULE handle;\n\n static void\n die_with(char *msg1, char *msg2, char *msg3, char *msg4)\n {\n    ULONG c;\n    char *s = \" error: \";\n\n    DosWrite(2, me, strlen(me), &c);\n    DosWrite(2, s, strlen(s), &c);\n    DosWrite(2, msg1, strlen(msg1), &c);\n    DosWrite(2, msg2, strlen(msg2), &c);\n    DosWrite(2, msg3, strlen(msg3), &c);\n    DosWrite(2, msg4, strlen(msg4), &c);\n    DosWrite(2, \"\\r\\n\", 2, &c);\n    exit(255);\n }\n\n typedef ULONG (*fill_extLibpath_t)(int type,\n                                    char *pre,\n                                    char *post,\n                                    int replace,\n                                    char *msg);\n typedef int (*main_t)(int type, char *argv[], char *env[]);\n typedef int (*handler_t)(void* data, int which);\n\n #ifndef PERL_DLL_BASENAME\n #  define PERL_DLL_BASENAME \"perl\"\n #endif\n\n static HMODULE\n load_perl_dll(char *basename)\n {\n     char buf[300], fail[260];\n     STRLEN l, dirl;\n     fill_extLibpath_t f;\n     ULONG rc_fullname;\n     HMODULE handle, handle1;\n\n     if (_execname(buf, sizeof(buf) - 13) != 0)\n         die_with(\"Can't find full path: \", strerror(errno), \"\", \"\");\n     /* XXXX Fill 'me' with new value */\n     l = strlen(buf);\n     while (l && buf[l-1] != '/' && buf[l-1] != '\\\\')\n         l--;\n     dirl = l - 1;\n     strcpy(buf + l, basename);\n     l += strlen(basename);\n     strcpy(buf + l, \".dll\");\n     if ( (rc_fullname = DosLoadModule(fail, sizeof fail, buf, &handle))\n                                                                    != 0\n          && DosLoadModule(fail, sizeof fail, basename, &handle) != 0 )\n         die_with(\"Can't load DLL \", buf, \"\", \"\");\n     if (rc_fullname)\n         return handle;    /* was loaded with short name; all is fine */\n     if (DosQueryProcAddr(handle, 0, \"fill_extLibpath\", (PFN*)&f))\n         die_with(buf,\n                  \": DLL exports no symbol \",\n                  \"fill_extLibpath\",\n                  \"\");\n     buf[dirl] = 0;\n     if (f(0 /*BEGINLIBPATH*/, buf /* prepend */, NULL /* append */,\n           0 /* keep old value */, me))\n         die_with(me, \": prepending BEGINLIBPATH\", \"\", \"\");\n     if (DosLoadModule(fail, sizeof fail, basename, &handle1) != 0)\n         die_with(me,\n                  \": finding perl DLL again via BEGINLIBPATH\",\n                  \"\",\n                  \"\");\n     buf[dirl] = '\\\\';\n     if (handle1 != handle) {\n         if (DosQueryModuleName(handle1, sizeof(fail), fail))\n             strcpy(fail, \"???\");\n         die_with(buf,\n                  \":\\n\\tperl DLL via BEGINLIBPATH is different: \\n\\t\",\n                  fail,\n                  \"\\n\\tYou may need to manipulate global BEGINLIBPATH\"\n                     \" and LIBPATHSTRICT\"\n                     \"\\n\\tso that the other copy is loaded via\"\n                     BEGINLIBPATH.\");\n     }\n     return handle;\n }\n\n int\n main(int argc, char **argv, char **env)\n {\n     main_t f;\n     handler_t h;\n\n     me = argv[0];\n     /**/\n     handle = load_perl_dll(PERL_DLL_BASENAME);\n\n     if (DosQueryProcAddr(handle,\n                          0,\n                          \"Perl_OS2_handler_install\",\n                          (PFN*)&h))\n         die_with(PERL_DLL_BASENAME,\n                  \": DLL exports no symbol \",\n                  \"Perl_OS2_handler_install\",\n                  \"\");\n     if ( !h((void *)\"~installprefix\", Perlos2_handler_perllib_from)\n          || !h((void *)\"~dll\", Perlos2_handler_perllib_to)\n          || !h((void *)\"~dll/sh/ksh.exe\", Perlos2_handler_perl_sh) )\n         die_with(PERL_DLL_BASENAME,\n                  \": Can't install @INC manglers\",\n                  \"\",\n                  \"\");\n     if (DosQueryProcAddr(handle, 0, \"dll_perlmain\", (PFN*)&f))\n         die_with(PERL_DLL_BASENAME,\n                  \": DLL exports no symbol \",\n                  \"dll_perlmain\",\n                  \"\");\n     return f(argc, argv, env);\n }\n\n=head1 Build FAQ\n\n=head2 Some C</> became C<\\> in pdksh.\n\nYou have a very old pdksh. See L</Prerequisites>.\n\n=head2 C<'errno'> - unresolved external\n\nYou do not have MT-safe F<db.lib>. See L</Prerequisites>.\n\n=head2 Problems with tr or sed\n\nreported with very old version of tr and sed.\n\n=head2 Some problem (forget which ;-)\n\nYou have an older version of F<perl.dll> on your LIBPATH, which\nbroke the build of extensions.\n\n=head2 Library ... not found\n\nYou did not run C<omflibs>. See L</Prerequisites>.\n\n=head2 Segfault in make\n\nYou use an old version of GNU make. See L</Prerequisites>.\n\n=head2 op/sprintf test failure\n\nThis can result from a bug in emx sprintf which was fixed in 0.9d fix 03.\n\n=head1 Specific (mis)features of OS/2 port\n\n=head2 C<setpriority>, C<getpriority>\n\nNote that these functions are compatible with *nix, not with the older\nports of '94 - 95. The priorities are absolute, go from 32 to -95,\nlower is quicker. 0 is the default priority.\n\nB<WARNING>.  Calling C<getpriority> on a non-existing process could lock\nthe system before Warp3 fixpak22.  Starting with Warp3, Perl will use\na workaround: it aborts getpriority() if the process is not present.\nThis is not possible on older versions C<2.*>, and has a race\ncondition anyway.\n\n=head2 C<system()>\n\nMulti-argument form of C<system()> allows an additional numeric\nargument. The meaning of this argument is described in\nL<OS2::Process>.\n\nWhen finding a program to run, Perl first asks the OS to look for executables\non C<PATH> (OS/2 adds extension F<.exe> if no extension is present).\nIf not found, it looks for a script with possible extensions \nadded in this order: no extension, F<.cmd>, F<.btm>, \nF<.bat>, F<.pl>.  If found, Perl checks the start of the file for magic\nstrings C<\"#!\"> and C<\"extproc \">.  If found, Perl uses the rest of the\nfirst line as the beginning of the command line to run this script.  The\nonly mangling done to the first line is extraction of arguments (currently\nup to 3), and ignoring of the path-part of the \"interpreter\" name if it can't\nbe found using the full path.\n\nE.g., C<system 'foo', 'bar', 'baz'> may lead Perl to finding\nF<C:/emx/bin/foo.cmd> with the first line being\n\n extproc /bin/bash    -x   -c\n\nIf F</bin/bash.exe> is not found, then Perl looks for an executable F<bash.exe> on\nC<PATH>.  If found in F<C:/emx.add/bin/bash.exe>, then the above system() is\ntranslated to\n\n  system qw(C:/emx.add/bin/bash.exe -x -c C:/emx/bin/foo.cmd bar baz)\n\nOne additional translation is performed: instead of F</bin/sh> Perl uses\nthe hardwired-or-customized shell (see L</\"C<PERL_SH_DIR>\">).\n\nThe above search for \"interpreter\" is recursive: if F<bash> executable is not\nfound, but F<bash.btm> is found, Perl will investigate its first line etc.\nThe only hardwired limit on the recursion depth is implicit: there is a limit\n4 on the number of additional arguments inserted before the actual arguments\ngiven to system().  In particular, if no additional arguments are specified\non the \"magic\" first lines, then the limit on the depth is 4.\n\nIf Perl finds that the found executable is of PM type when the\ncurrent session is not, it will start the new process in a separate session of\nnecessary type.  Call via C<OS2::Process> to disable this magic.\n\nB<WARNING>.  Due to the described logic, you need to explicitly\nspecify F<.com> extension if needed.  Moreover, if the executable\nF<perl5.6.1> is requested, Perl will not look for F<perl5.6.1.exe>.\n[This may change in the future.]\n\n=head2 C<extproc> on the first line\n\nIf the first chars of a Perl script are C<\"extproc \">, this line is treated\nas C<#!>-line, thus all the switches on this line are processed (twice\nif script was started via cmd.exe).  See L<perlrun/DESCRIPTION>.\n\n=head2 Additional modules:\n\nL<OS2::Process>, L<OS2::DLL>, L<OS2::REXX>, L<OS2::PrfDB>, L<OS2::ExtAttr>. These\nmodules provide access to additional numeric argument for C<system>\nand to the information about the running process,\nto DLLs having functions with REXX signature and to the REXX runtime, to\nOS/2 databases in the F<.INI> format, and to Extended Attributes.\n\nTwo additional extensions by Andreas Kaiser, C<OS2::UPM>, and\nC<OS2::FTP>, are included into C<ILYAZ> directory, mirrored on CPAN.\nOther OS/2-related extensions are available too.\n\n=head2 Prebuilt methods:\n\n=over 4\n\n=item C<File::Copy::syscopy>\n\nused by C<File::Copy::copy>, see L<File::Copy>.\n\n=item C<DynaLoader::mod2fname>\n\nused by C<DynaLoader> for DLL name mangling.\n\n=item  C<Cwd::current_drive()>\n\nSelf explanatory.\n\n=item  C<Cwd::sys_chdir(name)>\n\nleaves drive as it is.\n\n=item  C<Cwd::change_drive(name)>\n\nchanges the \"current\" drive.\n\n=item  C<Cwd::sys_is_absolute(name)>\n\nmeans has drive letter and is_rooted.\n\n=item  C<Cwd::sys_is_rooted(name)>\n\nmeans has leading C<[/\\\\]> (maybe after a drive-letter:).\n\n=item  C<Cwd::sys_is_relative(name)>\n\nmeans changes with current dir.\n\n=item  C<Cwd::sys_cwd(name)>\n\nInterface to cwd from EMX. Used by C<Cwd::cwd>.\n\n=item  C<Cwd::sys_abspath(name, dir)>\n\nReally really odious function to implement. Returns absolute name of\nfile which would have C<name> if CWD were C<dir>.  C<Dir> defaults to the\ncurrent dir.\n\n=item  C<Cwd::extLibpath([type])>\n\nGet current value of extended library search path. If C<type> is\npresent and positive, works with C<END_LIBPATH>, if negative, works\nwith C<LIBPATHSTRICT>, otherwise with C<BEGIN_LIBPATH>. \n\n=item  C<Cwd::extLibpath_set( path [, type ] )>\n\nSet current value of extended library search path. If C<type> is\npresent and positive, works with <END_LIBPATH>, if negative, works\nwith C<LIBPATHSTRICT>, otherwise with C<BEGIN_LIBPATH>.\n\n=item C<OS2::Error(do_harderror,do_exception)>\n\nReturns\tC<undef> if it was not called yet, otherwise bit 1 is\nset if on the previous call do_harderror was enabled, bit\n2 is set if on previous call do_exception was enabled.\n\nThis function enables/disables error popups associated with \nhardware errors (Disk not ready etc.) and software exceptions.\n\nI know of no way to find out the state of popups I<before> the first call\nto this function.\n\n=item C<OS2::Errors2Drive(drive)>\n\nReturns C<undef> if it was not called yet, otherwise return false if errors\nwere not requested to be written to a hard drive, or the drive letter if\nthis was requested.\n\nThis function may redirect error popups associated with hardware errors\n(Disk not ready etc.) and software exceptions to the file POPUPLOG.OS2 at\nthe root directory of the specified drive.  Overrides OS2::Error() specified\nby individual programs.  Given argument undef will disable redirection.\n\nHas global effect, persists after the application exits.\n\nI know of no way to find out the state of redirection of popups to the disk\nI<before> the first call to this function.\n\n=item OS2::SysInfo()\n\nReturns a hash with system information. The keys of the hash are\n\n\tMAX_PATH_LENGTH, MAX_TEXT_SESSIONS, MAX_PM_SESSIONS,\n\tMAX_VDM_SESSIONS, BOOT_DRIVE, DYN_PRI_VARIATION,\n\tMAX_WAIT, MIN_SLICE, MAX_SLICE, PAGE_SIZE,\n\tVERSION_MAJOR, VERSION_MINOR, VERSION_REVISION,\n\tMS_COUNT, TIME_LOW, TIME_HIGH, TOTPHYSMEM, TOTRESMEM,\n\tTOTAVAILMEM, MAXPRMEM, MAXSHMEM, TIMER_INTERVAL,\n\tMAX_COMP_LENGTH, FOREGROUND_FS_SESSION,\n\tFOREGROUND_PROCESS\n\n=item OS2::BootDrive()\n\nReturns a letter without colon.\n\n=item C<OS2::MorphPM(serve)>, C<OS2::UnMorphPM(serve)>\n\nTransforms the current application into a PM application and back.\nThe argument true means that a real message loop is going to be served.\nOS2::MorphPM() returns the PM message queue handle as an integer.\n\nSee L</\"Centralized management of resources\"> for additional details.\n\n=item C<OS2::Serve_Messages(force)>\n\nFake on-demand retrieval of outstanding PM messages.  If C<force> is false,\nwill not dispatch messages if a real message loop is known to\nbe present.  Returns number of messages retrieved.\n\nDies with \"QUITing...\" if WM_QUIT message is obtained.\n\n=item C<OS2::Process_Messages(force [, cnt])>\n\nRetrieval of PM messages until window creation/destruction.  \nIf C<force> is false, will not dispatch messages if a real message loop\nis known to be present.\n\nReturns change in number of windows.  If C<cnt> is given,\nit is incremented by the number of messages retrieved.\n\nDies with \"QUITing...\" if WM_QUIT message is obtained.\n\n=item C<OS2::_control87(new,mask)>\n\nthe same as L<_control87(3)> of EMX.  Takes integers as arguments, returns\nthe previous coprocessor control word as an integer.  Only bits in C<new> which\nare present in C<mask> are changed in the control word.\n\n=item OS2::get_control87()\n\ngets the coprocessor control word as an integer.\n\n=item C<OS2::set_control87_em(new=MCW_EM,mask=MCW_EM)>\n\nThe variant of OS2::_control87() with default values good for\nhandling exception mask: if no C<mask>, uses exception mask part of C<new>\nonly.  If no C<new>, disables all the floating point exceptions.\n\nSee L</\"Misfeatures\"> for details.\n\n=item C<OS2::DLLname([how [, \\&xsub]])>\n\nGives the information about the Perl DLL or the DLL containing the C\nfunction bound to by C<&xsub>.  The meaning of C<how> is: default (2):\nfull name; 0: handle; 1: module name.\n\n=back\n\n(Note that some of these may be moved to different libraries -\neventually).\n\n\n=head2 Prebuilt variables:\n\n=over 4\n\n=item $OS2::emx_rev\n\nnumeric value is the same as _emx_rev of EMX, a string value the same\nas _emx_vprt (similar to C<0.9c>).\n\n=item $OS2::emx_env\n\nsame as _emx_env of EMX, a number similar to 0x8001.\n\n=item $OS2::os_ver\n\na number C<OS_MAJOR + 0.001 * OS_MINOR>.\n\n=item $OS2::is_aout\n\ntrue if the Perl library was compiled in AOUT format.\n\n=item $OS2::can_fork\n\ntrue if the current executable is an AOUT EMX executable, so Perl can\nfork.  Do not use this, use the portable check for\n$Config::Config{dfork}.\n\n=item $OS2::nsyserror\n\nThis variable (default is 1) controls whether to enforce the contents\nof $^E to start with C<SYS0003>-like id.  If set to 0, then the string\nvalue of $^E is what is available from the OS/2 message file.  (Some\nmessages in this file have an C<SYS0003>-like id prepended, some not.)\n\n=back\n\n=head2 Misfeatures\n\n=over 4\n\n=item *\n\nSince L<flock(3)> is present in EMX, but is not functional, it is \nemulated by perl.  To disable the emulations, set environment variable\nC<USE_PERL_FLOCK=0>.\n\n=item *\n\nHere is the list of things which may be \"broken\" on\nEMX (from EMX docs):\n\n=over 4\n\n=item *\n\nThe functions L<recvmsg(3)>, L<sendmsg(3)>, and L<socketpair(3)> are not\nimplemented.\n\n=item *\n\nL<sock_init(3)> is not required and not implemented.\n\n=item *\n\nL<flock(3)> is not yet implemented (dummy function).  (Perl has a workaround.)\n\n=item *\n\nL<kill(3)>:  Special treatment of PID=0, PID=1 and PID=-1 is not implemented.\n\n=item *\n\nL<waitpid(3)>:\n\n      WUNTRACED\n\t      Not implemented.\n      waitpid() is not implemented for negative values of PID.\n\n=back\n\nNote that C<kill -9> does not work with the current version of EMX.\n\n=item *\n\nSee L</\"Text-mode filehandles\">.\n\n=item *\n\nUnix-domain sockets on OS/2 live in a pseudo-file-system C</sockets/...>.\nTo avoid a failure to create a socket with a name of a different form,\nC<\"/socket/\"> is prepended to the socket name (unless it starts with this\nalready).\n\nThis may lead to problems later in case the socket is accessed via the\n\"usual\" file-system calls using the \"initial\" name.\n\n=item *\n\nApparently, IBM used a compiler (for some period of time around '95?) which\nchanges FP mask right and left.  This is not I<that> bad for IBM's\nprograms, but the same compiler was used for DLLs which are used with\ngeneral-purpose applications.  When these DLLs are used, the state of\nfloating-point flags in the application is not predictable.\n\nWhat is much worse, some DLLs change the floating point flags when in\n_DLLInitTerm() (e.g., F<TCP32IP>).  This means that even if you do not I<call>\nany function in the DLL, just the act of loading this DLL will reset your\nflags.  What is worse, the same compiler was used to compile some HOOK DLLs.\nGiven that HOOK dlls are executed in the context of I<all> the applications\nin the system, this means a complete unpredictability of floating point\nflags on systems using such HOOK DLLs.  E.g., F<GAMESRVR.DLL> of B<DIVE>\norigin changes the floating point flags on each write to the TTY of a VIO\n(windowed text-mode) applications.\n\nSome other (not completely debugged) situations when FP flags change include\nsome video drivers (?), and some operations related to creation of the windows.\nPeople who code B<OpenGL> may have more experience on this.\n\nPerl is generally used in the situation when all the floating-point\nexceptions are ignored, as is the default under EMX.  If they are not ignored,\nsome benign Perl programs would get a C<SIGFPE> and would die a horrible death.\n\nTo circumvent this, Perl uses two hacks.  They help against I<one> type of\ndamage only: FP flags changed when loading a DLL.\n\nOne of the hacks is to disable floating point exceptions on Perl startup (as\nis the default with EMX).  This helps only with compile-time-linked DLLs\nchanging the flags before main() had a chance to be called.\n\nThe other hack is to restore FP flags after a call to dlopen().  This helps\nagainst similar damage done by DLLs _DLLInitTerm() at runtime.  Currently\nno way to switch these hacks off is provided.\n\n=back\n\n=head2 Modifications\n\nPerl modifies some standard C library calls in the following ways:\n\n=over 9\n\n=item C<popen>\n\nC<my_popen> uses F<sh.exe> if shell is required, cf. L</\"C<PERL_SH_DIR>\">.\n\n=item C<tmpnam>\n\nis created using C<TMP> or C<TEMP> environment variable, via\nC<tempnam>.\n\n=item C<tmpfile>\n\nIf the current directory is not writable, file is created using modified\nC<tmpnam>, so there may be a race condition.\n\n=item C<ctermid>\n\na dummy implementation.\n\n=item C<stat>\n\nC<os2_stat> special-cases F</dev/tty> and F</dev/con>.\n\n=item C<mkdir>, C<rmdir>\n\nthese EMX functions do not work if the path contains a trailing C</>.\nPerl contains a workaround for this.\n\n=item C<flock>\n\nSince L<flock(3)> is present in EMX, but is not functional, it is \nemulated by perl.  To disable the emulations, set environment variable\nC<USE_PERL_FLOCK=0>.\n\n=back\n\n=head2 Identifying DLLs\n\nAll the DLLs built with the current versions of Perl have ID strings\nidentifying the name of the extension, its version, and the version\nof Perl required for this DLL.  Run C<bldlevel DLL-name> to find this\ninfo.\n\n=head2 Centralized management of resources\n\nSince to call certain OS/2 API one needs to have a correctly initialized\nC<Win> subsystem, OS/2-specific extensions may require getting C<HAB>s and\nC<HMQ>s.  If an extension would do it on its own, another extension could\nfail to initialize.\n\nPerl provides a centralized management of these resources:\n\n=over\n\n=item C<HAB>\n\nTo get the HAB, the extension should call C<hab = perl_hab_GET()> in C.  After\nthis call is performed, C<hab> may be accessed as C<Perl_hab>.  There is\nno need to release the HAB after it is used.\n\nIf by some reasons F<perl.h> cannot be included, use\n\n  extern int Perl_hab_GET(void);\n\ninstead.\n\n=item C<HMQ>\n\nThere are two cases:\n\n=over\n\n=item *\n\nthe extension needs an C<HMQ> only because some API will not work otherwise.\nUse C<serve = 0> below.\n\n=item *\n\nthe extension needs an C<HMQ> since it wants to engage in a PM event loop.\nUse C<serve = 1> below.\n\n=back\n\nTo get an C<HMQ>, the extension should call C<hmq = perl_hmq_GET(serve)> in C.\nAfter this call is performed, C<hmq> may be accessed as C<Perl_hmq>.\n\nTo signal to Perl that HMQ is not needed any more, call\nC<perl_hmq_UNSET(serve)>.  Perl process will automatically morph/unmorph itself\ninto/from a PM process if HMQ is needed/not-needed.  Perl will automatically\nenable/disable C<WM_QUIT> message during shutdown if the message queue is\nserved/not-served.\n\nB<NOTE>.  If during a shutdown there is a message queue which did not disable\nWM_QUIT, and which did not process the received WM_QUIT message, the\nshutdown will be automatically cancelled.  Do not call C<perl_hmq_GET(1)>\nunless you are going to process messages on an orderly basis.\n\n=item Treating errors reported by OS/2 API\n\nThere are two principal conventions (it is useful to call them C<Dos*>\nand C<Win*> - though this part of the function signature is not always\ndetermined by the name of the API) of reporting the error conditions\nof OS/2 API.  Most of C<Dos*> APIs report the error code as the result\nof the call (so 0 means success, and there are many types of errors).\nMost of C<Win*> API report success/fail via the result being\nC<TRUE>/C<FALSE>; to find the reason for the failure one should call\nWinGetLastError() API.\n\nSome C<Win*> entry points also overload a \"meaningful\" return value\nwith the error indicator; having a 0 return value indicates an error.\nYet some other C<Win*> entry points overload things even more, and 0\nreturn value may mean a successful call returning a valid value 0, as\nwell as an error condition; in the case of a 0 return value one should\ncall WinGetLastError() API to distinguish a successful call from a\nfailing one.\n\nBy convention, all the calls to OS/2 API should indicate their\nfailures by resetting $^E.  All the Perl-accessible functions which\ncall OS/2 API may be broken into two classes: some die()s when an API\nerror is encountered, the other report the error via a false return\nvalue (of course, this does not concern Perl-accessible functions\nwhich I<expect> a failure of the OS/2 API call, having some workarounds\ncoded).\n\nObviously, in the situation of the last type of the signature of an OS/2\nAPI, it is must more convenient for the users if the failure is\nindicated by die()ing: one does not need to check $^E to know that\nsomething went wrong.  If, however, this solution is not desirable by\nsome reason, the code in question should reset $^E to 0 before making\nthis OS/2 API call, so that the caller of this Perl-accessible\nfunction has a chance to distinguish a success-but-0-return value from\na failure.  (One may return undef as an alternative way of reporting\nan error.)\n\nThe macros to simplify this type of error propagation are\n\n=over\n\n=item C<CheckOSError(expr)>\n\nReturns true on error, sets $^E.  Expects expr() be a call of\nC<Dos*>-style API.\n\n=item C<CheckWinError(expr)>\n\nReturns true on error, sets $^E.  Expects expr() be a call of\nC<Win*>-style API.\n\n=item C<SaveWinError(expr)>\n\nReturns C<expr>, sets $^E from WinGetLastError() if C<expr> is false.\n\n=item C<SaveCroakWinError(expr,die,name1,name2)>\n\nReturns C<expr>, sets $^E from WinGetLastError() if C<expr> is false,\nand die()s if C<die> and $^E are true.  The message to die is the\nconcatenated strings C<name1> and C<name2>, separated by C<\": \"> from\nthe contents of $^E.\n\n=item C<WinError_2_Perl_rc>\n\nSets C<Perl_rc> to the return value of WinGetLastError().\n\n=item C<FillWinError>\n\nSets C<Perl_rc> to the return value of WinGetLastError(), and sets $^E\nto the corresponding value.\n\n=item C<FillOSError(rc)>\n\nSets C<Perl_rc> to C<rc>, and sets $^E to the corresponding value.\n\n=back\n\n=item Loading DLLs and ordinals in DLLs\n\nSome DLLs are only present in some versions of OS/2, or in some\nconfigurations of OS/2.  Some exported entry points are present only\nin DLLs shipped with some versions of OS/2.  If these DLLs and entry\npoints were linked directly for a Perl executable/DLL or from a Perl\nextensions, this binary would work only with the specified\nversions/setups.  Even if these entry points were not needed, the\nI<load> of the executable (or DLL) would fail.\n\nFor example, many newer useful APIs are not present in OS/2 v2; many\nPM-related APIs require DLLs not available on floppy-boot setup.\n\nTo make these calls fail I<only when the calls are executed>, one\nshould call these API via a dynamic linking API.  There is a subsystem\nin Perl to simplify such type of calls.  A large number of entry\npoints available for such linking is provided (see C<entries_ordinals>\n- and also C<PMWIN_entries> - in F<os2ish.h>).  These ordinals can be\naccessed via the APIs:\n\n CallORD(), DeclFuncByORD(), DeclVoidFuncByORD(),\n DeclOSFuncByORD(), DeclWinFuncByORD(), AssignFuncPByORD(),\n DeclWinFuncByORD_CACHE(), DeclWinFuncByORD_CACHE_survive(),\n DeclWinFuncByORD_CACHE_resetError_survive(),\n DeclWinFunc_CACHE(), DeclWinFunc_CACHE_resetError(),\n DeclWinFunc_CACHE_survive(), DeclWinFunc_CACHE_resetError_survive()\n\nSee the header files and the C code in the supplied OS/2-related\nmodules for the details on usage of these functions.\n\nSome of these functions also combine dynaloading semantic with the\nerror-propagation semantic discussed above.\n\n=back\n\n=head1 Perl flavors\n\nBecause of idiosyncrasies of OS/2 one cannot have all the eggs in the\nsame basket (though EMX environment tries hard to overcome this\nlimitations, so the situation may somehow improve). There are 4\nexecutables for Perl provided by the distribution:\n\n=head2 F<perl.exe>\n\nThe main workhorse. This is a chimera executable: it is compiled as an\nC<a.out>-style executable, but is linked with C<omf>-style dynamic\nlibrary F<perl.dll>, and with dynamic CRT DLL. This executable is a\nVIO application.\n\nIt can load perl dynamic extensions, and it can fork().\n\nB<Note.> Keep in mind that fork() is needed to open a pipe to yourself.\n\n=head2 F<perl_.exe>\n\nThis is a statically linked C<a.out>-style executable. It cannot\nload dynamic Perl extensions. The executable supplied in binary\ndistributions has a lot of extensions prebuilt, thus the above restriction is \nimportant only if you use custom-built extensions. This executable is a VIO\napplication.\n\nI<This is the only executable with does not require OS/2.> The\nfriends locked into C<M$> world would appreciate the fact that this\nexecutable runs under DOS, Win0.3*, Win0.95 and WinNT with an\nappropriate extender. See L</\"Other OSes\">.\n\n=head2 F<perl__.exe>\n\nThis is the same executable as F<perl___.exe>, but it is a PM\napplication. \n\nB<Note.> Usually (unless explicitly redirected during the startup)\nSTDIN, STDERR, and STDOUT of a PM\napplication are redirected to F<nul>. However, it is possible to I<see>\nthem if you start C<perl__.exe> from a PM program which emulates a\nconsole window, like I<Shell mode> of Emacs or EPM. Thus it I<is\npossible> to use Perl debugger (see L<perldebug>) to debug your PM\napplication (but beware of the message loop lockups - this will not\nwork if you have a message queue to serve, unless you hook the serving\ninto the getc() function of the debugger).\n\nAnother way to see the output of a PM program is to run it as\n\n  pm_prog args 2>&1 | cat -\n\nwith a shell I<different> from F<cmd.exe>, so that it does not create\na link between a VIO session and the session of C<pm_porg>.  (Such a link\ncloses the VIO window.)  E.g., this works with F<sh.exe> - or with Perl!\n\n  open P, 'pm_prog args 2>&1 |' or die;\n  print while <P>;\n\nThe flavor F<perl__.exe> is required if you want to start your program without\na VIO window present, but not C<detach>ed (run C<help detach> for more info).\nVery useful for extensions which use PM, like C<Perl/Tk> or C<OpenGL>.\n\nNote also that the differences between PM and VIO executables are only\nin the I<default> behaviour.  One can start I<any> executable in\nI<any> kind of session by using the arguments C</fs>, C</pm> or\nC</win> switches of the command C<start> (of F<CMD.EXE> or a similar\nshell).  Alternatively, one can use the numeric first argument of the\nC<system> Perl function (see L<OS2::Process>).\n\n=head2 F<perl___.exe>\n\nThis is an C<omf>-style executable which is dynamically linked to\nF<perl.dll> and CRT DLL. I know no advantages of this executable\nover C<perl.exe>, but it cannot fork() at all. Well, one advantage is\nthat the build process is not so convoluted as with C<perl.exe>.\n\nIt is a VIO application.\n\n=head2 Why strange names?\n\nSince Perl processes the C<#!>-line (cf. \nL<perlrun/DESCRIPTION>, L<perlrun/Command Switches>,\nL<perldiag/\"No Perl script found in input\">), it should know when a\nprogram I<is a Perl>. There is some naming convention which allows\nPerl to distinguish correct lines from wrong ones. The above names are\nalmost the only names allowed by this convention which do not contain\ndigits (which have absolutely different semantics).\n\n=head2 Why dynamic linking?\n\nWell, having several executables dynamically linked to the same huge\nlibrary has its advantages, but this would not substantiate the\nadditional work to make it compile. The reason is the complicated-to-developers\nbut very quick and convenient-to-users \"hard\" dynamic linking used by OS/2.\n\nThere are two distinctive features of the dyna-linking model of OS/2:\nfirst, all the references to external functions are resolved at the compile time;\nsecond, there is no runtime fixup of the DLLs after they are loaded into memory.\nThe first feature is an enormous advantage over other models: it avoids\nconflicts when several DLLs used by an application export entries with\nthe same name.  In such cases \"other\" models of dyna-linking just choose\nbetween these two entry points using some random criterion - with predictable\ndisasters as results.  But it is the second feature which requires the build\nof F<perl.dll>.\n\nThe address tables of DLLs are patched only once, when they are\nloaded. The addresses of the entry points into DLLs are guaranteed to be\nthe same for all the programs which use the same DLL.  This removes the\nruntime fixup - once DLL is loaded, its code is read-only.\n\nWhile this allows some (significant?) performance advantages, this makes life\nmuch harder for developers, since the above scheme makes it impossible\nfor a DLL to be \"linked\" to a symbol in the F<.EXE> file.  Indeed, this\nwould need a DLL to have different relocations tables for the\n(different) executables which use this DLL.\n\nHowever, a dynamically loaded Perl extension is forced to use some symbols\nfrom the perl\nexecutable, e.g., to know how to find the arguments to the functions:\nthe arguments live on the perl\ninternal evaluation stack. The solution is to put the main code of\nthe interpreter into a DLL, and make the F<.EXE> file which just loads\nthis DLL into memory and supplies command-arguments.  The extension DLL\ncannot link to symbols in F<.EXE>, but it has no problem linking\nto symbols in the F<.DLL>.\n\nThis I<greatly> increases the load time for the application (as well as\ncomplexity of the compilation). Since interpreter is in a DLL,\nthe C RTL is basically forced to reside in a DLL as well (otherwise\nextensions would not be able to use CRT).  There are some advantages if\nyou use different flavors of perl, such as running F<perl.exe> and\nF<perl__.exe> simultaneously: they share the memory of F<perl.dll>.\n\nB<NOTE>.  There is one additional effect which makes DLLs more wasteful:\nDLLs are loaded in the shared memory region, which is a scarse resource\ngiven the 512M barrier of the \"standard\" OS/2 virtual memory.  The code of\nF<.EXE> files is also shared by all the processes which use the particular\nF<.EXE>, but they are \"shared in the private address space of the process\";\nthis is possible because the address at which different sections\nof the F<.EXE> file are loaded is decided at compile-time, thus all the\nprocesses have these sections loaded at same addresses, and no fixup\nof internal links inside the F<.EXE> is needed.\n\nSince DLLs may be loaded at run time, to have the same mechanism for DLLs\none needs to have the address range of I<any of the loaded> DLLs in the\nsystem to be available I<in all the processes> which did not load a particular\nDLL yet.  This is why the DLLs are mapped to the shared memory region.\n\n=head2 Why chimera build?\n\nCurrent EMX environment does not allow DLLs compiled using Unixish\nC<a.out> format to export symbols for data (or at least some types of\ndata). This forces C<omf>-style compile of F<perl.dll>.\n\nCurrent EMX environment does not allow F<.EXE> files compiled in\nC<omf> format to fork(). fork() is needed for exactly three Perl\noperations:\n\n=over 4\n\n=item *\n\nexplicit fork() in the script, \n\n=item *\n\nC<open FH, \"|-\">\n\n=item *\n\nC<open FH, \"-|\">, in other words, opening pipes to itself.\n\n=back\n\nWhile these operations are not questions of life and death, they are\nneeded for a lot of\nuseful scripts. This forces C<a.out>-style compile of\nF<perl.exe>.\n\n\n=head1 ENVIRONMENT\n\nHere we list environment variables with are either OS/2- and DOS- and\nWin*-specific, or are more important under OS/2 than under other OSes.\n\n=head2 C<PERLLIB_PREFIX>\n\nSpecific for EMX port. Should have the form\n\n  path1;path2\n\nor\n\n  path1 path2\n\nIf the beginning of some prebuilt path matches F<path1>, it is\nsubstituted with F<path2>.\n\nShould be used if the perl library is moved from the default\nlocation in preference to C<PERL(5)LIB>, since this would not leave wrong\nentries in @INC.  For example, if the compiled version of perl looks for @INC\nin F<f:/perllib/lib>, and you want to install the library in\nF<h:/opt/gnu>, do\n\n  set PERLLIB_PREFIX=f:/perllib/lib;h:/opt/gnu\n\nThis will cause Perl with the prebuilt @INC of\n\n  f:/perllib/lib/5.00553/os2\n  f:/perllib/lib/5.00553\n  f:/perllib/lib/site_perl/5.00553/os2\n  f:/perllib/lib/site_perl/5.00553\n  .\n\nto use the following @INC:\n\n  h:/opt/gnu/5.00553/os2\n  h:/opt/gnu/5.00553\n  h:/opt/gnu/site_perl/5.00553/os2\n  h:/opt/gnu/site_perl/5.00553\n  .\n\n=head2 C<PERL_BADLANG>\n\nIf 0, perl ignores setlocale() failing. May be useful with some\nstrange I<locale>s.\n\n=head2 C<PERL_BADFREE>\n\nIf 0, perl would not warn of in case of unwarranted free(). With older\nperls this might be\nuseful in conjunction with the module DB_File, which was buggy when\ndynamically linked and OMF-built.\n\nShould not be set with newer Perls, since this may hide some I<real> problems.\n\n=head2 C<PERL_SH_DIR>\n\nSpecific for EMX port. Gives the directory part of the location for\nF<sh.exe>.\n\n=head2 C<USE_PERL_FLOCK>\n\nSpecific for EMX port. Since L<flock(3)> is present in EMX, but is not \nfunctional, it is emulated by perl.  To disable the emulations, set \nenvironment variable C<USE_PERL_FLOCK=0>.\n\n=head2 C<TMP> or C<TEMP>\n\nSpecific for EMX port. Used as storage place for temporary files.\n\n=head1 Evolution\n\nHere we list major changes which could make you by surprise.\n\n=head2 Text-mode filehandles\n\nStarting from version 5.8, Perl uses a builtin translation layer for\ntext-mode files.  This replaces the efficient well-tested EMX layer by\nsome code which should be best characterized as a \"quick hack\".\n\nIn addition to possible bugs and an inability to follow changes to the\ntranslation policy with off/on switches of TERMIO translation, this\nintroduces a serious incompatible change: before sysread() on\ntext-mode filehandles would go through the translation layer, now it\nwould not.\n\n=head2 Priorities\n\nC<setpriority> and C<getpriority> are not compatible with earlier\nports by Andreas Kaiser. See C<\"setpriority, getpriority\">.\n\n=head2 DLL name mangling: pre 5.6.2\n\nWith the release 5.003_01 the dynamically loadable libraries\nshould be rebuilt when a different version of Perl is compiled. In particular,\nDLLs (including F<perl.dll>) are now created with the names\nwhich contain a checksum, thus allowing workaround for OS/2 scheme of\ncaching DLLs.\n\nIt may be possible to code a simple workaround which would \n\n=over\n\n=item *\n\nfind the old DLLs looking through the old @INC;\n\n=item *\n\nmangle the names according to the scheme of new perl and copy the DLLs to\nthese names;\n\n=item *\n\nedit the internal C<LX> tables of DLL to reflect the change of the name\n(probably not needed for Perl extension DLLs, since the internally coded names\nare not used for \"specific\" DLLs, they used only for \"global\" DLLs).\n\n=item *\n\nedit the internal C<IMPORT> tables and change the name of the \"old\"\nF<perl????.dll> to the \"new\" F<perl????.dll>.\n\n=back\n\n=head2 DLL name mangling: 5.6.2 and beyond\n\nIn fact mangling of I<extension> DLLs was done due to misunderstanding\nof the OS/2 dynaloading model.  OS/2 (effectively) maintains two\ndifferent tables of loaded DLL:\n\n=over\n\n=item Global DLLs\n\nthose loaded by the base name from C<LIBPATH>; including those\nassociated at link time;\n\n=item specific DLLs\n\nloaded by the full name.\n\n=back\n\nWhen resolving a request for a global DLL, the table of already-loaded\nspecific DLLs is (effectively) ignored; moreover, specific DLLs are\nI<always> loaded from the prescribed path.\n\nThere is/was a minor twist which makes this scheme fragile: what to do\nwith DLLs loaded from\n\n=over\n\n=item C<BEGINLIBPATH> and C<ENDLIBPATH>\n\n(which depend on the process)\n\n=item F<.> from C<LIBPATH>\n\nwhich I<effectively> depends on the process (although C<LIBPATH> is the\nsame for all the processes).\n\n=back\n\nUnless C<LIBPATHSTRICT> is set to C<T> (and the kernel is after\n2000/09/01), such DLLs are considered to be global.  When loading a\nglobal DLL it is first looked in the table of already-loaded global\nDLLs.  Because of this the fact that one executable loaded a DLL from\nC<BEGINLIBPATH> and C<ENDLIBPATH>, or F<.> from C<LIBPATH> may affect\nI<which> DLL is loaded when I<another> executable requests a DLL with\nthe same name.  I<This> is the reason for version-specific mangling of\nthe DLL name for perl DLL.\n\nSince the Perl extension DLLs are always loaded with the full path,\nthere is no need to mangle their names in a version-specific ways:\ntheir directory already reflects the corresponding version of perl,\nand @INC takes into account binary compatibility with older version.\nStarting from C<5.6.2> the name mangling scheme is fixed to be the\nsame as for Perl 5.005_53 (same as in a popular binary release).  Thus\nnew Perls will be able to I<resolve the names> of old extension DLLs\nif @INC allows finding their directories.\n\nHowever, this still does not guarantee that these DLL may be loaded.\nThe reason is the mangling of the name of the I<Perl DLL>.  And since\nthe extension DLLs link with the Perl DLL, extension DLLs for older\nversions would load an older Perl DLL, and would most probably\nsegfault (since the data in this DLL is not properly initialized).\n\nThere is a partial workaround (which can be made complete with newer\nOS/2 kernels): create a forwarder DLL with the same name as the DLL of\nthe older version of Perl, which forwards the entry points to the\nnewer Perl's DLL.  Make this DLL accessible on (say) the C<BEGINLIBPATH> of\nthe new Perl executable.  When the new executable accesses old Perl's\nextension DLLs, they would request the old Perl's DLL by name, get the\nforwarder instead, so effectively will link with the currently running\n(new) Perl DLL.\n\nThis may break in two ways:\n\n=over\n\n=item *\n\nOld perl executable is started when a new executable is running has\nloaded an extension compiled for the old executable (ouph!).  In this\ncase the old executable will get a forwarder DLL instead of the old\nperl DLL, so would link with the new perl DLL.  While not directly\nfatal, it will behave the same as new executable.  This beats the whole\npurpose of explicitly starting an old executable.\n\n=item *\n\nA new executable loads an extension compiled for the old executable\nwhen an old perl executable is running.  In this case the extension\nwill not pick up the forwarder - with fatal results.\n\n=back\n\nWith support for C<LIBPATHSTRICT> this may be circumvented - unless\none of DLLs is started from F<.> from C<LIBPATH> (I do not know\nwhether C<LIBPATHSTRICT> affects this case).\n\nB<REMARK>.  Unless newer kernels allow F<.> in C<BEGINLIBPATH> (older\ndo not), this mess cannot be completely cleaned.  (It turns out that\nas of the beginning of 2002, F<.> is not allowed, but F<.\\.> is - and\nit has the same effect.)\n\n\nB<REMARK>.  C<LIBPATHSTRICT>, C<BEGINLIBPATH> and C<ENDLIBPATH> are\nnot environment variables, although F<cmd.exe> emulates them on C<SET\n...> lines.  From Perl they may be accessed by\nL<Cwd::extLibpath|/Cwd::extLibpath([type])> and\nL<Cwd::extLibpath_set|/Cwd::extLibpath_set( path [, type ] )>.\n\n=head2 DLL forwarder generation\n\nAssume that the old DLL is named F<perlE0AC.dll> (as is one for\n5.005_53), and the new version is 5.6.1.  Create a file\nF<perl5shim.def-leader> with\n\n  LIBRARY 'perlE0AC' INITINSTANCE TERMINSTANCE\n  DESCRIPTION '@#perl5-porters@perl.org:5.006001#@ Perl module for 5.00553 -> Perl 5.6.1 forwarder'\n  CODE LOADONCALL\n  DATA LOADONCALL NONSHARED MULTIPLE\n  EXPORTS\n\nmodifying the versions/names as needed.  Run\n\n perl -wnle \"next if 0../EXPORTS/; print qq(  \\\"$1\\\")\n                                          if /\\\"(\\w+)\\\"/\" perl5.def >lst\n\nin the Perl build directory (to make the DLL smaller replace perl5.def\nwith the definition file for the older version of Perl if present).\n\n cat perl5shim.def-leader lst >perl5shim.def\n gcc -Zomf -Zdll -o perlE0AC.dll perl5shim.def -s -llibperl\n\n(ignore multiple C<warning L4085>).\n\n=head2 Threading\n\nAs of release 5.003_01 perl is linked to multithreaded C RTL\nDLL.  If perl itself is not compiled multithread-enabled, so will not be perl's\nmalloc(). However, extensions may use multiple thread on their own\nrisk. \n\nThis was needed to compile C<Perl/Tk> for XFree86-OS/2 out-of-the-box, and\nlink with DLLs for other useful libraries, which typically are compiled\nwith C<-Zmt -Zcrtdll>.\n\n=head2 Calls to external programs\n\nDue to a popular demand the perl external program calling has been\nchanged wrt Andreas Kaiser's port.  I<If> perl needs to call an\nexternal program I<via shell>, the F<f:/bin/sh.exe> will be called, or\nwhatever is the override, see L</\"C<PERL_SH_DIR>\">.\n\nThus means that you need to get some copy of a F<sh.exe> as well (I\nuse one from pdksh). The path F<F:/bin> above is set up automatically during\nthe build to a correct value on the builder machine, but is\noverridable at runtime,\n\nB<Reasons:> a consensus on C<perl5-porters> was that perl should use\none non-overridable shell per platform. The obvious choices for OS/2\nare F<cmd.exe> and F<sh.exe>. Having perl build itself would be impossible\nwith F<cmd.exe> as a shell, thus I picked up C<sh.exe>. This assures almost\n100% compatibility with the scripts coming from *nix. As an added benefit \nthis works as well under DOS if you use DOS-enabled port of pdksh \n(see L</Prerequisites>).\n\nB<Disadvantages:> currently F<sh.exe> of pdksh calls external programs\nvia fork()/exec(), and there is I<no> functioning exec() on\nOS/2. exec() is emulated by EMX by an asynchronous call while the caller\nwaits for child completion (to pretend that the C<pid> did not change). This\nmeans that 1 I<extra> copy of F<sh.exe> is made active via fork()/exec(),\nwhich may lead to some resources taken from the system (even if we do\nnot count extra work needed for fork()ing).\n\nNote that this a lesser issue now when we do not spawn F<sh.exe>\nunless needed (metachars found).\n\nOne can always start F<cmd.exe> explicitly via\n\n  system 'cmd', '/c', 'mycmd', 'arg1', 'arg2', ...\n\nIf you need to use F<cmd.exe>, and do not want to hand-edit thousands of your\nscripts, the long-term solution proposed on p5-p is to have a directive\n\n  use OS2::Cmd;\n\nwhich will override system(), exec(), C<``>, and\nC<open(,'...|')>. With current perl you may override only system(),\nreadpipe() - the explicit version of C<``>, and maybe exec(). The code\nwill substitute the one-argument call to system() by\nC<CORE::system('cmd.exe', '/c', shift)>.\n\nIf you have some working code for C<OS2::Cmd>, please send it to me,\nI will include it into distribution. I have no need for such a module, so\ncannot test it.\n\nFor the details of the current situation with calling external programs,\nsee L<Starting OSE<sol>2 (and DOS) programs under Perl>.  Set us mention a couple\nof features:\n\n=over 4\n\n=item *\n\nExternal scripts may be called by their basename.  Perl will try the same\nextensions as when processing B<-S> command-line switch.\n\n=item *\n\nExternal scripts starting with C<#!> or C<extproc > will be executed directly,\nwithout calling the shell, by calling the program specified on the rest of\nthe first line.\n\n=back\n\n=head2 Memory allocation\n\nPerl uses its own malloc() under OS/2 - interpreters are usually malloc-bound\nfor speed, but perl is not, since its malloc is lightning-fast.\nPerl-memory-usage-tuned benchmarks show that Perl's malloc is 5 times quicker\nthan EMX one.  I do not have convincing data about memory footprint, but\na (pretty random) benchmark showed that Perl's one is 5% better.\n\nCombination of perl's malloc() and rigid DLL name resolution creates\na special problem with library functions which expect their return value to\nbe free()d by system's free(). To facilitate extensions which need to call \nsuch functions, system memory-allocation functions are still available with\nthe prefix C<emx_> added. (Currently only DLL perl has this, it should \npropagate to F<perl_.exe> shortly.)\n\n=head2 Threads\n\nOne can build perl with thread support enabled by providing C<-D usethreads>\noption to F<Configure>.  Currently OS/2 support of threads is very \npreliminary.\n\nMost notable problems: \n\n=over 4\n\n=item C<COND_WAIT> \n\nmay have a race condition (but probably does not due to edge-triggered\nnature of OS/2 Event semaphores).  (Needs a reimplementation (in terms of chaining\nwaiting threads, with the linked list stored in per-thread structure?)?)\n\n=item F<os2.c>\n\nhas a couple of static variables used in OS/2-specific functions.  (Need to be\nmoved to per-thread structure, or serialized?)\n\n=back\n\nNote that these problems should not discourage experimenting, since they\nhave a low probability of affecting small programs.\n\n=head1 BUGS\n\nThis description is not updated often (since 5.6.1?), see F<./os2/Changes>\nfor more info.\n\n=cut\n\nOS/2 extensions\n~~~~~~~~~~~~~~~\nI include 3 extensions by Andreas Kaiser, OS2::REXX, OS2::UPM, and OS2::FTP, \ninto my ftp directory, mirrored on CPAN. I made\nsome minor changes needed to compile them by standard tools. I cannot \ntest UPM and FTP, so I will appreciate your feedback. Other extensions\nthere are OS2::ExtAttr, OS2::PrfDB for tied access to EAs and .INI\nfiles - and maybe some other extensions at the time you read it.\n\nNote that OS2 perl defines 2 pseudo-extension functions\nOS2::Copy::copy and DynaLoader::mod2fname (many more now, see\nL</Prebuilt methods>).\n\nThe -R switch of older perl is deprecated. If you need to call a REXX code\nwhich needs access to variables, include the call into a REXX compartment\ncreated by \n\tREXX_call {...block...};\n\nTwo new functions are supported by REXX code, \n\tREXX_eval 'string';\n\tREXX_eval_with 'string', REXX_function_name => \\&perl_sub_reference;\n\nIf you have some other extensions you want to share, send the code to\nme.  At least two are available: tied access to EA's, and tied access\nto system databases.\n\n=head1 AUTHOR\n\nIlya Zakharevich, cpan@ilyaz.org\n\n=head1 SEE ALSO\n\nperl(1).\n\n=cut\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/configure.com": "$! OpenVMS configuration procedure for Perl -- do not attempt to run under DOS\n$ sav_ver = 'F$VERIFY(0)'\n$ on control_y then goto clean_up\n$! SET VERIFY\n$!\n$! For example, if you unpacked perl into: [USER.PERL-5n...] then you will \n$! want to cd into the tree and execute Configure:\n$!\n$! $ SET DEFAULT [USER.PERL5_xxx]\n$! $ @Configure \n$!\n$! or\n$!\n$! $ SET DEFAULT [USER.PERL5_xxx]\n$! $ @Configure \"-des\"\n$!\n$! That's it. If you get into a bind trying to build perl on VMS then \n$! definitely read through the README.VMS file.\n$! Beyond that send email to vmsperl@perl.org\n$!\n$! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n$!\n$! send suggestions to: \n$!  Dan Sugalski <dan@sidhe.org>\n$! Thank you!!!!\n$!\n$! Adapted and converted from Larry Wall & Andy Dougherty's\n$! \"Configure generated by metaconfig 3.0 PL60.\" by Peter Prymmer\n$! (a Bourne sh[ell] script for configuring the installation of perl \n$! on non-VMS systems) in the perl5.002|3 epoch (spring/summer 1996)\n$! with much valuable help from Charles Bailey & \n$! the whole VMSPerl crew.\n$! Extended and messed about with by Dan Sugalski\n$!\n$! VMS-isms we will need:\n$ echo = \"write sys$output \"\n$ cat  = \"type\"\n$ delete := delete ! local symbol overrides globals with qualifiers\n$ gcc_symbol = \"gcc\"\n$ ld = \"Link/nodebug\"\n$ ans = \"\"\n$ macros = \"\"\n$ extra_flags = \"\"\n$ user_c_flags = \"\"\n$ use_ieee_math = \"y\"\n$ be_case_sensitive = \"n\"\n$ shorten_long_symbols = \"y\"\n$ unlink_all_versions = \"n\"\n$ builder = \"MMK\"\n$ use_vmsdebug_perl = \"n\"\n$ use64bitall = \"n\"\n$ use64bitint = \"n\"\n$ uselongdouble = \"n\"\n$ uselargefiles = \"y\"\n$ usestdstat = \"n\"\n$ usesitecustomize = \"n\"\n$ C_Compiler_Replace = \"CC=\"\n$ thread_upcalls = \"MTU=\"\n$ thread_kernel = \"MTK=\"\n$ use_two_pot_malloc = \"N\"\n$ use_pack_malloc = \"N\"\n$ use_debugmalloc = \"N\"\n$ ccflags = \"\"\n$ static_ext = \"\"\n$ dynamic_ext = \"\"\n$ nonxs_ext = \"\"\n$ nonxs_ext2 = \"\"\n$ vms_default_directory_name = F$ENVIRONMENT(\"DEFAULT\")\n$!\n$! Sebastian Bazley's request: close the CONFIG handle with /NOLOG\n$! qualifier \"just in case\" (configure.com is re @ed in a bad state).\n$! This construct was tested to be not a problem as far back as\n$! VMS V5.5-2, hopefully earlier versions are OK as well.\n$!\n$ CLOSE/NOLOG CONFIG\n$!\n$! Now keep track of open files\n$!\n$ vms_filcnt = F$GETJPI (\"\",\"FILCNT\")\n$!\n$!: compute my invocation name\n$ me = F$ENVIRONMENT(\"PROCEDURE\")\n$!\n$! Many null statements (begin with colon ':') in the Bourne shell version of\n$! this script serve as comments/placeholders. I have retained some of the ones\n$! that will help you compare this .COM file to the sh version - as well as\n$! leave placeholders for future improvements to this .COM file.\n$! sfn = VMS \"skipped for now\"\n$!\n$!: Proper PATH separator                              !sfn\n$!: Proper PATH setting                                !sfn\n$!: Sanity checks                                      !sfn \"Say '@''$me''\"\n$!: On HP-UX, large Configure scripts may exercise a bug in /bin/sh !sfn\n$!: Configure runs within the UU subdirectory          !->after find MANIFEST\n$!   <big long list of default values (mostly null)>\n$!: We must find out about Eunice early                !(?)\n$!: list of known cpp symbols, sorted alphabetically   !sfn\n$!   al = al + \"...\"\n$!: default library list                               !sfn\n$!   <no hints files in use (yet?)>\n$!: Extra object files, if any, needed on this platform. !sfn\n$!: Possible local include directories to search.      !sfn\n$!: Set locincpth to \"\" in a hint file to defeat local include searches. !sfn\n$!locincpth=\"/usr/local/include /opt/local/include /usr/gnu/include\" !sfn\n$!locincpth=\"$locincpth /opt/gnu/include /usr/GNU/include /opt/GNU/include\"\n$!: no include file wanted by default                  !sfn\n$!inclwanted=''                                        !sfn\n$!: Possible local library directories to search.      !sfn\n$!loclibpth=\"/usr/local/lib /opt/local/lib /usr/gnu/lib\" !sfn\n$!loclibpth=\"$loclibpth /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib\" !sfn\n$!: general looking path for locating libraries        !sfn\n$!glibpth=\"/lib/pa1.1 /usr/shlib /usr/lib/large /lib /usr/lib\" !sfn\n$!glibpth=\"$glibpth $xlibpth /lib/large /usr/lib/small /lib/small\" !sfn\n$!glibpth=\"$glibpth /usr/ccs/lib /usr/ucblib /usr/shlib\" !sfn\n$!: Private path used by Configure to find libraries.  Its value !sfn\n$!: is prepended to libpth. This variable takes care of special !sfn\n$!: machines, like the mips.  Usually, it should be empty. !sfn\n$!plibpth=''                                           !sfn\n$!: List of libraries we want.                         !sfn\n$!libswanted='net socket inet nsl nm ndbm gdbm dbm db malloc dl' !sfn\n$!libswanted=\"$libswanted ld sun m c cposix posix ndir dir crypt\" !sfn\n$!libswanted=\"$libswanted ucb bsd BSD PW x\"            !sfn\n$!: We probably want to search /usr/shlib before most other libraries. !sfn\n$!: This is only used by the lib/ExtUtils/MakeMaker.pm routine extliblist. !sfn\n$!glibpth=`echo \" $glibpth \" | sed -e 's! /usr/shlib ! !'` !sfn\n$!glibpth=\"/usr/shlib $glibpth\"                        !sfn\n$!: Do not use vfork unless overridden by a hint file. !sfn\n$!usevfork=false                                       !sfn\n$!: script used to extract .SH files with variable substitutions !sfn\n$!: produce awk script to parse command line options   !sfn\n$!sfn (assume no sed awk) see below\n$!: process the command line options         \n$!\n$!: set up default values\n$ fastread=\"\"\n$ reuseval=\"false\"\n$ maniskip = \"false\"\n$ IF F$TYPE(config_sh) .EQS. \"\" THEN config_sh=\"\"\n$ alldone=\"\"\n$ error=\"\"\n$ silent=\"\"\n$ extractsh=\"\"\n$ override=\"\"\n$ knowitall=\"\"\n$ ccname=\"DECC\"\n$ Dec_C_Version = \"\"\n$ cxxversion = \"\"\n$ use_threads = \"F\"\n$ use_5005_threads = \"N\"\n$ use_ithreads = \"N\"\n$!\n$!: option parsing\n$ config_args = \"\"\n$ IF (P1 .NES. \"\")\n$ THEN            !one or more switches was thrown\n$   i = 1\n$   bang = 0\n$Param_loop:\n$   IF (P'i'.NES.\"\") \n$   THEN\n$     bang = bang + 1\n$     config_args = config_args + F$FAO(\" !AS\",P'i')\n$   ENDIF\n$   i = i + 1\n$   IF (i.LT.9) THEN GOTO Param_loop !DCL allows P1..P8\n$!\n$   i = 1\n$Opt_loop:\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"-\") THEN P'i' = P'i' - \"-\"\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"/\") THEN P'i' = P'i' - \"/\"\n$Remove_quotation_mark:\n$   P'i' = P'i' - \"\"\"\"\n$   IF F$LOCATE(\"\"\"\",P'i') .LT. F$LENGTH(P'i') THEN GOTO Remove_quotation_mark\n$   gotopt      = \"f\" !\"alse\"\n$   gotshortopt = \"f\" !\"alse\"\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"d\")\n$   THEN\n$     fastread    = \"yes\"\n$     gotopt      = \"t\" !\"rue\"\n$     P'i'        = P'i' - \"d\"\n$     gotshortopt = \"t\" !\"rue\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"e\")\n$   THEN\n$     alldone = \"cont\"\n$     gotopt = \"t\"\n$     P'i' = P'i' - \"e\"\n$     gotshortopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"f\") ! \"-f\"\n$   THEN\n$     P'i' = P'i' - \"f\"\n$     config_sh = P'i'\n$     IF (F$SEARCH(config_sh).NES.\"\")\n$     THEN\n$       test_config_sh = F$FILE_ATTRIBUTES(config_sh,\"PRO\")\n$       IF (F$LOCATE(\"R\",test_config_sh).NE.F$LENGTH(test_config_sh)) \n$       THEN\n$         config_dflt = \"y\"\n$         CONTINUE !at this point check UIC && if test allows...\n$                  !to be continued ?\n$       ELSE\n$         echo \"''me': cannot read config file ''config_sh'.\"\n$         error=\"true\"\n$       ENDIF\n$     ELSE\n$       echo \"''me': cannot read config file ''config_sh'.\"\n$       error=\"true\"\n$     ENDIF\n$     gotopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"h\") ! \"-h\"\n$   THEN\n$     error = \"true\"\n$     gotopt = \"t\"\n$     P'i' = P'i' - \"h\"\n$     gotshortopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"m\")  ! \"-m\"\n$   THEN\n$     maniskip = \"true\"\n$     gotopt = \"t\"\n$     P'i' = P'i' - \"m\"\n$     gotshortopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"r\")  ! \"-r\"\n$   THEN\n$     reuseval = \"true\"\n$     gotopt = \"t\"\n$     P'i' = P'i' - \"r\"\n$     gotshortopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"s\") ! \"-s\"\n$   THEN\n$     silent = \"true\"\n$     gotopt = \"t\"\n$     P'i' = P'i' - \"s\"\n$     gotshortopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"E\") ! \"-E\"\n$   THEN\n$     alldone = \"exit\"\n$     gotopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"K\") ! \"-K\"\n$   THEN\n$     knowitall = \"true\"\n$     gotopt = \"t\"\n$     P'i' = P'i' - \"K\"\n$     gotshortopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"O\") ! \"-O\"\n$   THEN\n$     override = \"true\"\n$     gotopt = \"t\"\n$     P'i' = P'i' - \"O\"\n$     gotshortopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"S\") ! \"-S\"\n$   THEN\n$     extractsh = \"true\"  !VMS?  Yes with munchconfig\n$     gotopt = \"t\"\n$     P'i' = P'i' - \"S\"\n$     gotshortopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"D\") ! \"-D\"\n$   THEN\n$     P'i' = P'i' - \"D\"\n$     IF (F$LOCATE(\"=\",P'i') .EQ. F$LENGTH(P'i'))\n$     THEN\n$       tmp = P'i' + \"=\"\"define\"\"\"\n$       'tmp'\n$       DELETE/SYMBOL tmp\n$     ELSE \n$       IF (F$LOCATE(\"=\",P'i') .EQ. (F$LENGTH(P'i') - 1))\n$       THEN\n$         me = F$PARSE(me,,,\"NAME\") + F$PARSE(me,,,\"TYPE\")\n$         echo \"''me': use \"\"-Usymbol=val\"\" not \"\"-Dsymbol=\"\".\"\n$         echo \"''me': ignoring -D\",P'i'\n$       ELSE\n$          tmp = F$EXTRACT(0,F$LOCATE(\"=\",P'i'),P'i')\n$          tmp = tmp + \"=\"\"\" + F$EXTRACT(F$LOCATE(\"=\",P'i')+1,F$LENGTH(P'i'),P'i') + \"\"\"\"\n$         'tmp'\n$         DELETE/SYMBOL tmp\n$       ENDIF\n$     ENDIF\n$     gotopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"U\") ! \"-U\"\n$   THEN\n$     P'i' = P'i' - \"U\"\n$     IF (F$LOCATE(\"=\",P'i') .EQ. F$LENGTH(P'i'))\n$     THEN\n$       tmp = P'i' + \"=\"\"\"\"\"\n$       'tmp'\n$       DELETE/SYMBOL tmp\n$     ELSE \n$       IF (F$LOCATE(\"=\",P'i') .LT. (F$LENGTH(P'i') - 1))\n$       THEN\n$         me = F$PARSE(me,,,\"NAME\") + F$PARSE(me,,,\"TYPE\")\n$         echo \"''me': use \"\"-Dsymbol=val\"\" not \"\"-Usymbol=val\"\".\"\n$         echo \"''me': ignoring -U\",P'i'\n$       ELSE\n$         tmp = P'i' + \"=\"\"undef\"\"\"\n$         'tmp'\n$         DELETE/SYMBOL tmp\n$       ENDIF\n$     ENDIF\n$     gotopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"V\")\n$   THEN\n$     me = F$PARSE(me,,,\"NAME\") + F$PARSE(me,,,\"TYPE\")\n$     echo \"''me' generated by an unknown version of EDT.\"\n$     STOP\n$     EXIT\n$   ENDIF\n$   IF .NOT.gotopt \n$   THEN\n$     echo \"''me': unknown option \",P'i'\n$     error = \"true\"\n$   ENDIF\n$   IF (F$LENGTH(P'i').GT.0).AND.(gotshortopt) THEN i = i - 1 !clustered switch\n$   i = i + 1 \n$   IF (i .LT. (bang + 1)) THEN GOTO Opt_loop\n$!\n$ ENDIF  ! (P1 .NES. \"\")\n$ config_args = F$EDIT(config_args,\"TRIM\")\n$!\n$ IF (error)\n$ THEN\n$   me = F$PARSE(me,,,\"DIRECTORY\")+ F$PARSE(me,,,\"NAME\")\n$   echo \"Usage: @''me' [-dehmr\"\"EKOSV\"\"] [-fconfig.sh] [\"\"-Dsymbol\"\"] [\"\"-Dsymbol=value\"\"]\"\n$   echo \"                [-Usymbol]  [-Usymbol=]\"\n$   TYPE SYS$INPUT:\n$   DECK\n \"-d\" : use defaults for all answers.\n \"-e\" : go on without questioning past the production of config.sh.    *\n \"-f\" : specify an alternate default configuration file.\n \"-h\" : print this help message and exit (with an error status).\n \"-m\" : skip the MANIFEST check to see that all files are present\n \"-r\" : reuse C symbols value if possible (skips costly nm extraction).*\n \"-s\" : silent mode, only echoes questions and essential information.\n -\"D\" : define symbol to have some value:                              *\n         -\"Dsymbol\"         symbol gets the value 'define'\n         -\"Dsymbol=value\"   symbol gets the value 'value'\n  -E  : stop at the end of questions, after having produced config.sh. *\n  -K  : do not use unless you know what you are doing.\n  -O  : let -D and -U override definitions from loaded configuration file. *\n  -S  : perform variable substitutions on all .SH files (can mix with -f) *\n -\"U\" : undefine symbol:                                               *\n         -\"Usymbol\"    symbol gets the value 'undef'\n         -\"Usymbol=\"   symbol gets completely empty\n  -V  : print version number and exit (with a zero status).\n$   EOD\n$   echo \"%Config-I-VMS, lower case switches must be enclosed\"\n$   echo \"-Config-I-VMS, in double quotation marks, e.g.:\"\n$   echo \"-Config-I-VMS,   @Configure \"\"-des\"\"\"\n$   echo \"-Config-I-VMS, * indicates switch may not be fully implemented for VMS.\"\n$   SET DEFAULT 'vms_default_directory_name' !be kind rewind\n$   STOP\n$   EXIT 3 ! $STATUS = \"%X00000003\" (informational)\n$ ENDIF\n$!\n$ GOTO Check_silence\n$!\n$Shut_up:\n$ IF F$Mode() .eqs. \"BATCH\"\n$ THEN\n$   x = F$GETQUI(\"CANCEL_OPERATION\")        ! clear the deck\n$   x = \"THIS_JOB\"\n$   bproc_queue = f$getqui(\"DISPLAY_QUEUE\",\"QUEUE_NAME\",\"*\",x)\n$   bproc_entry = f$getqui(\"DISPLAY_JOB\",\"ENTRY_NUMBER\",,x)\n$   bproc_name = f$getqui(\"DISPLAY_JOB\",\"JOB_NAME\",,x)\n$   bproc_log_spec = f$getqui(\"DISPLAY_JOB\",\"LOG_SPECIFICATION\",,x)\n$   STDOUT = F$PARSE(bproc_name, bproc_log_spec, \".LOG\")\n$   WRITE SYS$OUTPUT \"Writing output of entry ''bproc_entry' in queue ''bproc_queue' to a new version of: \"\n$   WRITE SYS$OUTPUT STDOUT\n$   DELETE_/SYMBOL x\n$   DELETE_/SYMBOL bproc_queue\n$   DELETE_/SYMBOL bproc_entry\n$   DELETE_/SYMBOL bproc_name\n$   DELETE_/SYMBOL bproc_log_spec\n$ ELSE\n$   STDOUT = F$TRNLNM(\"SYS$OUTPUT\")\n$ ENDIF\n$ DEFINE SYS$OUTPUT \"_NLA0:\"\n$ echo4 = \"write STDOUT \"\n$ cat4 = \"TYPE/OUTPUT=''STDOUT'\"\n$ open/write/share=read STDOUT 'STDOUT'\n$ RETURN\n$!\n$Check_silence:\n$ IF (silent) \n$ THEN\n$   GOSUB Shut_up\n$ ELSE\n$   echo4 = \"write SYS$OUTPUT \"\n$   cat4 = \"TYPE\"\n$ ENDIF\n$!\n$!: run the defines and the undefines, if any, but leave the file out there...\n$! Unfortunately Configure.COM in DCL is not yet set up to do this - \n$! maybe someday\n$!\n$!: set package name\n$ package = \"perl5\"\n$ packageup = F$EDIT((package - \"5\"),\"UPCASE\")\n$!\n$!: Eunice requires \" \" instead of \"\", can you believe it\n$ echo \"\"\n$!: Here we go...\n$ echo \"Beginning of configuration questions for ''package'.\"\n$ echo \"\"\n$!\n$!: Some greps do not return status, grrr.\n$ contains = \"SEARCH\"\n$!\n$!: first determine how to suppress newline on echo command !cant DCL is record oriented\n$! echo \"Checking ''echo' to see how to suppress newlines...\"\n$! echo \"giving up...\"\n$! echo \"The star should be here-->*\"\n$!\n$!: Now test for existence of everything in MANIFEST\n$ echo \"\"\n$ echo4 \"First let's make sure your kit is complete.  Checking...\"\n$ manifestfound = \"\" \n$ miss_list = \"\" \n$! Here I assume we are in the [foo.PERLxxx...] tree\n$! because the search routine simply does set def [-] if necessary.\n$ file_2_find = \"MANIFEST\" !I hope this one is not in [foo.PERL5xxx.VMS...] \n$Research_manifest:\n$ manifestfound = F$SEARCH(file_2_find)\n$ IF (manifestfound .EQS. \"\")\n$ THEN\n$   IF F$PARSE(F$ENVIRONMENT(\"DEFAULT\"),,,\"DIRECTORY\",).NES.\"[000000]\"\n$   THEN\n$     SET DEFAULT [-]\n$     GOTO Research_manifest\n$   ELSE\n$     echo \"\"\n$     echo \"There is no MANIFEST file.  I hope your kit is complete !\"\n$     miss_list = \"\"\n$     GOTO Beyond_manifest\n$   ENDIF\n$ ELSE\n$! MANIFEST. has been found and we have set def'ed there.\n$!\n$ escape_extended_chars: subroutine\n$   string = 'p1' ! It's the name of the symbol\n$   chars_to_escape = p2\n$   sindex = 0\n$   slength = f$length(string)\n$   loop_over_chars:\n$     if sindex .eq. slength then goto end_loop_over_chars\n$     char = f$extract(sindex, 1, string)\n$     if f$locate(char, chars_to_escape) .lt. f$length(chars_to_escape)\n$     then\n$       string = f$extract(0, sindex, string) + \"^\" + f$extract(sindex, slength, string)\n$       slength = slength + 1 ! we've increased overall length by 1\n$       sindex = sindex + 1   ! don't check the char we just escaped again\n$     endif\n$     sindex = sindex + 1\n$     goto loop_over_chars\n$ end_loop_over_chars:\n$ 'p1' == string\n$!\n$ endsubroutine\n$!\n$! after finding MANIFEST let's create (but not yet enter) the UU subdirectory\n$!\n$   IF (manifestfound .NES. \"\")\n$   THEN\n$     IF ( F$SEARCH(\"UU.DIR\").EQS.\"\" )\n$     THEN\n$       CREATE/DIRECTORY [.UU]\n$     ELSE\n$       IF ( F$SEARCH(\"[.UU.CXX_REPOSITORY]*.*\").NES.\"\" )\n$       THEN\n$         DELETE/NOLOG/NOCONFIRM [.UU.CXX_REPOSITORY]*.*;*\n$         SET PROTECTION=(SYSTEM:RWED,OWNER:RWED) [.UU]CXX_REPOSITORY.DIR\n$       ENDIF\n$       IF ( F$SEARCH(\"[.UU]*.*\").NES.\"\" ) THEN DELETE/NOLOG/NOCONFIRM [.UU]*.*;*\n$     ENDIF\n$!: Configure runs within the UU subdirectory\n$     SET DEFAULT [.UU]\n$!\n$! a little redundancy never hurt anybody?\n$     file_2_find = \"[-]\" + file_2_find\n$     manifestfound = F$SEARCH(file_2_find)\n$!\n$     OPEN/WRITE MISSING MISSING.\n$!change to \"FALSE\" if you wish to skip the manifest search \n$!(which after all is rather slow in DCL :-)\n$     IF (maniskip)\n$     THEN\n$       echo \"Skipping MANIFEST check as requested\"\n$     ELSE\n$!\n$       OPEN/READ CONFIG 'manifestfound'\n$Read_loop_manifest:\n$       READ/END_OF_FILE = Done_manifest CONFIG line\n$! This algorithm turns \"foo/bar/baz.c\" into \"[.foo.bar]baz.c\"\n$! pvhp@lns62.lns.cornell.edu 10-JUN-1996 20:31:46\n$! 2-MAR-1998 15:46:11 Improved to turn \"foo/bar/baz.c.buz\"\n$! into \"[.foo.bar]baz.c_buz as happens with vmstar and unzip\n$       line = F$EDIT(line,\"TRIM, COMPRESS\")\n$       file_2_find = F$EXTRACT(0,F$LOCATE(\" \",line),line) \n$       IF F$LOCATE(\"/\",file_2_find) .NE. F$LENGTH(file_2_find) \n$       THEN \n$         escaped_fname == file_2_find\n$         call escape_extended_chars escaped_fname \"~!#&\\'`()+@{},;[]%^=\\\"\n$         file_2_find = escaped_fname\n$Re_strip_line_manifest:\n$         loca = F$LOCATE(\"/\",file_2_find)\n$         ante = F$EXTRACT(0,loca,file_2_find)\n$         post = F$EXTRACT(loca,F$LENGTH(file_2_find),file_2_find)\n$         test_this = ante + \".\" + (post - \"/\")\n$         IF F$LOCATE(\"/\",test_this) .NE. F$LENGTH(test_this)\n$         THEN \n$           file_2_find = ante + \".\" + (post - \"/\")\n$           GOTO Re_strip_line_manifest\n$         ELSE\n$           file_2_find = ante + \"]\" + (post - \"/\")\n$         ENDIF\n$           file_2_find = \"[-.\"+file_2_find\n$       ELSE\n$         file_2_find = \"[-]\" + file_2_find\n$       ENDIF\n$!\n$       tmp = F$PARSE(file_2_find + \";\",,,,\"SYNTAX_ONLY\")\n$       IF F$SEARCH(tmp) .NES. \"\" THEN file_2_find = tmp\n$       dirname = F$EXTRACT(0,F$LOCATE(\"]\",file_2_find),file_2_find) + \"]\"\n$       file_2_find = file_2_find - dirname\n$!\n$!      may not need double dot check on ODS-5 volumes\n$       found = F$SEARCH(dirname + file_2_find)\n$       IF found .NES. \"\" THEN GOTO Read_loop_manifest\n$!\n$       dots = 0\n$Dot_loop:\n$       dot_ele = F$ELEMENT(dots,\".\",file_2_find)\n$       IF dot_ele .EQS. \".\" THEN GOTO Eo_dot_loop\n$       IF dots .eq. 0\n$       THEN basename = f$extract(0,f$locate(\".\",file_2_find),file_2_find) + \".\"\n$       ELSE basename = basename + dot_ele + \"_\"\n$       ENDIF\n$       dots = dots + 1\n$       GOTO dot_loop\n$Eo_dot_loop:\n$       IF (((f$length(file_2_find)+1) .eq. f$length(basename)) .and. -\n             (f$extract(f$length(basename)-1,1,basename) .eqs. \"_\")) THEN -\n          basename = f$extract(0,f$length(basename)-1,basename)\n$       file_2_find = dirname + basename\n$!\n$       found = F$SEARCH(file_2_find)\n$       IF (found .EQS. \"\" .AND. dots .GT. 2)\n$       THEN\n$! 17-DEC-1999 Improved to turn \"[.foo.bar]baz.c_buz\" into\n$! \"[.foo.bar]baz_c.buz\" to cover unzipped archives and put\n$! \"[.foo.bar]baz.c_buz,baz_c.buz\" into missing list if neither is found.\n$         dotloc = f$locate(\".\",basename)\n$         basename[dotloc,1] := \"_\"\n$         dot_ele = F$ELEMENT(dots - 1,\"_\",f$extract(dotloc,f$length(basename),basename))\n$         basename = -\n            f$extract(0,f$length(basename)-(f$length(dot_ele)+1),basename) -\n              + \".\" + dot_ele\n$         found = F$SEARCH(dirname + basename)\n$         file_2_find = file_2_find + \",\" + basename\n$       ENDIF\n$       tildeloc = f$locate(\"~\",basename)\n$       IF (found .EQS. \"\" .AND. tildeloc .LT. f$length(basename))\n$       THEN\n$         basename[tildeloc,1] := \"_\"\n$         found = F$SEARCH(dirname + basename)\n$         file_2_find = file_2_find + \",\" + basename\n$       ENDIF\n$       IF (found .EQS. \"\")\n$       THEN\n$         WRITE MISSING file_2_find\n$         IF ((F$LENGTH(miss_list)+F$LENGTH(file_2_find)).LT.250)\n$         THEN\n$           miss_list = miss_list + \",\" + file_2_find\n$         ENDIF\n$       ENDIF\n$       GOTO Read_loop_manifest\n$Done_manifest:\n$       CLOSE CONFIG\n$     ENDIF  !\"TRUE\"\n$     CLOSE MISSING\n$   ENDIF ! (manifestfound .NES. \"\")\n$Beyond_manifest:\n$   IF (miss_list .NES. \"\")\n$   THEN\n$     echo \"Some of the files not found include:\"\n$     cat4 MISSING.\n$   ENDIF\n$   IF ((miss_list .NES. \"\").OR.(manifestfound .EQS. \"\"))\n$   THEN\n$     TYPE SYS$INPUT:\n$     DECK\n\n\nTHIS PACKAGE SEEMS TO BE INCOMPLETE.\n\nYou have the option of continuing the configuration process, despite the\ndistinct possibility that your kit is damaged, by typing 'y'es.  If you\ndo, don't blame me if something goes wrong.  I advise you to type 'n'o\nand contact the author (dan@sidhe.org)\n\n$     EOD\n$     READ SYS$COMMAND/PROMPT=\"Continue? [n] \" ans\n$     IF ans\n$     THEN\n$       echo4 \"Continuing...\"\n$     ELSE\n$       echo4 \"ABORTING...\"\n$       GOTO Clean_up\n$     ENDIF\n$   ELSE\n$     echo4 \"Looks good...\"\n$     DELETE/NOLOG/NOCONFIRM MISSING.;\n$   ENDIF ! (miss_list .NES. \"\")\n$ ENDIF   ! (manifestfound .EQS. \"\") ELSE \n$!\n$! after finding MANIFEST (see above)\n$!: Configure runs within the UU subdirectory \n$!\n$!: compute the number of columns on the terminal for proper question formatting\n$ IF F$MODE() .EQS. \"BATCH\"\n$! else it winds up being 512 in batch\n$ THEN COLUMNS = 80\n$ ELSE COLUMNS = F$GETDVI(\"SYS$OUTPUT\",\"DEVBUFSIZ\")\n$ ENDIF\n$! \"-des\" sets SYS$OUTPUT to NL: with a DEVBUFSIZ too large (512 again)\n$ IF COLUMNS .GT. 210 THEN COLUMNS = 80\n$! not sure if this would actually be needed - it hopefully will not hurt\n$ IF COLUMNS .LT. 40 THEN COLUMNS = 40\n$!\n$!: set up the echo used in my read              !sfn\n$!: now set up to do reads with possible shell escape and default assignment !sfn\n$ GOTO Beyond_myread\n$!\n$! The sub_rp splitting is intended to handle long symbols such as the dflt for\n$! extensions.\n$!\n$myread:\n$ ans = \"\"\n$ len_rp = F$LENGTH(rp)\n$   If (.NOT. silent) Then echo \"\"\n$   IF len_rp .GT. 210\n$   THEN\n$     i_rp = 0\n$   rp_loop:\n$       sub_rp = F$EXTRACT(i_rp,COLUMNS,rp)\n$       i_rp = i_rp + COLUMNS\n$       if i_rp .LT. len_rp THEN echo4 \"''sub_rp'\"\n$     IF i_rp .LT. len_rp THEN GOTO rp_loop\n$   ELSE\n$   sub_rp = rp\n$   ENDIF\n$ if (fastread)\n$ then\n$     echo4 \"''sub_rp'\"\n$ else\n$     READ SYS$COMMAND/PROMPT=\"''sub_rp'\" ans\n$ endif\n$   IF (ans .EQS. \"&-d\")\n$   THEN\n$     echo4 \"(OK, I will run with -d after this question.)\"\n$   echo \"\"\n$   deferred_fastread =1\n$   goto myread\n$   ENDIF\n$   IF (ans .EQS. \"&-s\")\n$   THEN\n$     echo4 \"(OK, I will run with -s after this question.)\"\n$     echo \"\"\n$   deferred_silent = 1\n$   goto myread\n$     ENDIF\n$ if (bool_dflt .nes. \"\")\n$ then\n$   if (ans .eqs. \"\") then ans = bool_dflt\n$   ans = f$extract(0,1,f$edit(ans,\"collapse,upcase\"))\n$   if (ans .eqs. \"Y\" .or. ans .eqs. \"1\" .or. ans .eqs. \"T\") \n$   then\n$       ans = \"Y\"\n$   else\n$       if (ans .eqs. \"N\" .or. ans .eqs. \"0\" .or. ans .eqs. \"F\") \n$       then\n$           ans = \"N\"\n$       else\n$           echo4 \"Input not understood please answer 'Yes' or 'No'\"\n$           goto myread\n$       endif\n$   endif\n$   bool_dflt = \"\"\n$ else\n$   ans = f$edit(ans,\"trim,compress\")\n$   if (ans .eqs. \"\") then ans = dflt\n$   if (f$edit(ans,\"upcase\") .eqs. \"NONE\") then ans = \"\"\n$ endif\n$ if f$type(deferred_silent) .nes. \"\"  \n$ then\n$     silent := true\n$     GOSUB Shut_up\n$     delete/symbol deferred_silent\n$   ENDIF\n$ if f$type(deferred_fastread) .nes. \"\"\n$ then \n$   fastread = 1\n$   delete/symbol deferred_fastread\n$ endif\n$ RETURN\n$!\n$Beyond_myread:\n$!\n$!: create .config dir to save info across Configure sessions\n$ IF ( F$SEARCH(\"[-]CONFIG.DIR\").EQS.\"\" )\n$ THEN\n$   CREATE/DIRECTORY [-.CONFIG]\n$   OPEN/WRITE CONFIG [-.CONFIG]README.\n$   WRITE CONFIG -\n      \"This directory created by Configure to save information that should\"\n$   WRITE CONFIG -\n      \"persist across sessions.\"\n$   WRITE CONFIG \"\"\n$   WRITE CONFIG -\n      \"You may safely delete it if you wish.\"\n$   CLOSE CONFIG\n$ ENDIF\n$!\n$ IF F$TYPE(usedevel) .EQS. \"\" THEN usedevel = \"undef\"\n$ patchlevel_h = F$SEARCH(\"[-]patchlevel.h\")\n$ IF (patchlevel_h.NES.\"\")\n$ THEN\n$   SEARCH 'patchlevel_h' \"define\",\"PERL_VERSION\",\"epoch\"/match=and/out=[]ver.out\n$   IF .NOT. usedevel .AND. usedevel .NES. \"define\"\n$   THEN\n$     OPEN/READ CONFIG []ver.out\n$     READ CONFIG line\n$     CLOSE CONFIG\n$     tmp = F$EDIT(line,\"TRIM,COMPRESS\")\n$     xpatchlevel = F$INTEGER(F$ELEMENT(2,\" \",tmp))\n$     line = xpatchlevel / 2\n$     tmp = xpatchlevel - ( line * 2 )\n$     IF tmp .NE. 0\n$     THEN\n$       echo4 \"patchlevel is \" + F$STRING(xpatchlevel)\n$       cat4 SYS$INPUT:\n$       DECK\n*** WHOA THERE!!! ***\n\n    This is an UNSTABLE DEVELOPMENT release.\n    (The patchlevel, is odd--as opposed to even,\n     and that signifies a development release.  If you want a\n     maintenance release, you want an even-numbered release.)\n\n    Do ***NOT*** install this into production use.\n    Data corruption and crashes are possible.\n\n    It is most seriously suggested that you do not continue any further\n    unless you want to help in developing and debugging Perl.\n\n$       EOD\n$       bool_dflt=\"n\"\n$       rp=\"Do you really want to continue? [''bool_dflt'] \"\n$       fastread_save = fastread\n$       fastread := FALSE\n$       GOSUB myread\n$       fastread = fastread_save\n$       delete/symbol fastread_save\n$       IF ans\n$       THEN\n$         echo4 \"Okay, continuing.\"\n$       ELSE\n$         echo4 \"Okay, bye.\"\n$         DELETE/NOLOG/NOCONFIRM []ver.out;\n$         GOTO Clean_up\n$       ENDIF\n$     ENDIF\n$     DELETE/SYMBOL line\n$     DELETE/SYMBOL tmp\n$   ENDIF\n$   DELETE/NOLOG/NOCONFIRM []ver.out;\n$ ENDIF\n$!: general instructions\n$ needman = \"true\"\n$ firsttime = \"true\"\n$ user = F$EDIT(F$GETJPI(\"\",\"USERNAME\"),\"TRIM,COLLAPSE\")\n$ IF .NOT.(F$SEARCH(\"[-.CONFIG]INSTRUCT.\").EQS.\"\")\n$ THEN\n$   messages = F$ENVIRONMENT(\"MESSAGE\")\n$   SET MESSAGE/NOFAC/NOSEV/NOIDENT/NOTEXT\n$   contains /NOOUTPUT [-.CONFIG]INSTRUCT. 'user'\n$   IF .NOT.($status.EQ.%X08D78053)\n$   THEN\n$     firsttime=\"\"\n$     bool_dflt = \"n\"\n$     rp = \"Would you like to see the instructions? [''bool_dflt'] \"\n$     GOSUB myread\n$     if .NOT.ans THEN needman=\"\"\n$   ENDIF\n$   SET MESSAGE 'messages'\n$ ENDIF\n$ if (fastread.AND.silent.AND.(alldone.eqs.\"cont\")) THEN needman=\"\"\n$!\n$ IF (needman)\n$ THEN\n$   TYPE SYS$INPUT:\n$   DECK\n\nThis installation shell script will examine your system and ask you questions\nto determine how the perl5 package should be installed. If you get\nstuck on a question, you may use a ^C or ^Y shell escape to STOP this\nprocess, edit something, then restart this process as you just did.\nMany of the questions will have default answers in square\nbrackets; typing carriage return will give you the default.\n\n$   EOD\n$   if (fastread)\n$   then\n$     echo4 \"\"\n$   else\n$     READ SYS$COMMAND/PROMPT=\"Type carriage return to continue \" ans\n$   endif\n$   TYPE SYS$INPUT:\n$   DECK\n\nIn a hurry? You may run '@Configure \"-d\"'.  This will bypass nearly all\nthe questions and use the computed defaults (or the previous answers provided \nthere was already a config.sh file). Type '@Configure \"-h\"' for a list of \noptions.\n\n$   EOD\n$   if (fastread)\n$   then\n$     echo4 \"\"\n$   else\n$     READ SYS$COMMAND/PROMPT=\"Type carriage return to continue \" ans\n$   endif\n$   TYPE SYS$INPUT:\n$   DECK\n\nMuch effort has been expended to ensure that this shell script will\nrun on any VMS system.  If despite that it blows up on yours, your\nbest bet is to edit Configure.com and @ it again.  Whatever problems\nyou have with Configure.com, let me (dan@sidhe.org) know how I blew\nit.\n\n$   EOD\n$!This installation script affects things in two ways:\n$!\n$!1) it may do direct variable substitutions on some of the files included\n$!   in this kit.\n$!2) it builds a config.h file for inclusion in C programs.  You may edit\n$!   any of these files as the need arises after running this script.\n$!\n$!If you make a mistake on a question, there is no easy way to back up to it\n$!currently.\n$!\n$   if (fastread)\n$   then\n$     echo4 \"\"\n$   else\n$     READ SYS$COMMAND/PROMPT=\"Type carriage return to continue \" ans\n$   endif\n$   IF (F$SEARCH(\"[-.CONFIG]INSTRUCT.\").EQS.\"\")\n$   THEN\n$     OPEN/WRITE CONFIG [-.CONFIG]INSTRUCT.\n$     WRITE CONFIG user \n$     CLOSE CONFIG\n$   ENDIF\n$ ENDIF  !(needman .EQS. \"true\")\n$!\n$!: see if sh knows # comments             !sfn\n$!: figure out how to guarantee sh startup !sfn\n$!: find out where common programs are     !sfn\n$!loclist=\"awk/cat/comm/cp/echo/expr/find/grep/ln/ls/mkdir/rm/sed/sort/touch/tr/uniq\"\n$!trylist=\"byacc/cpp/csh/date/egrep/less/line/more/nroff/perl/pg/sendmail/test/uname\"\n$! echo \"I don't know where '$file' is, and my life depends on it.\"\n$! echo \"Go find a public domain implementation or fix your PATH setting!\"\n$! echo \"\"\n$! echo \"Don't worry if any of the following aren't found...\"\n$!: determine whether symbolic links are supported !sfn !jem- further down\n$!: see whether [:lower:] and [:upper:] are supported character classes !sfn\n$!: set up the translation script tr, must be called with ./tr of course !sfn\n$!\n$!: Try to determine whether config.sh was made on this system\n$!: Get old answers from old config file if Configure was run on the\n$!: same system, otherwise use the hints.\n$ config_sh_es = \"''config_sh'/[-]config.sh/\"\n$ i = 0\n$ max = 3\n$Config_sh_look:\n$ config_sh = F$ELEMENT(i,\"/\",config_sh_es)\n$ i = i + 1\n$ IF (config_sh.NES.\"/\").AND.(config_sh.NES.\"\")\n$ THEN\n$   configshfound = F$SEARCH(config_sh)\n$   IF (configshfound.NES.\"\") THEN GOTO Config_sh_found\n$ ENDIF\n$ IF (i.LT.max) THEN GOTO Config_sh_look\n$ osname = F$EDIT(F$GETSYI(\"NODE_SWTYPE\"),\"COLLAPSE\")\n$ IF (configshfound.EQS.\"\")\n$ THEN\n$   config_sh = \"[-]config.sh\" ! the fallback default\n$   GOTO Beyond_config_sh\n$ ENDIF\n$Config_sh_found:\n$ IF F$TYPE(osname) .EQS. \"\" THEN osname = F$EDIT(F$GETSYI(\"NODE_SWTYPE\"),\"COLLAPSE\")\n$ bool_dflt = \"n\"\n$ IF F$TYPE(config_dflt) .NES. \"\" THEN bool_dflt = config_dflt\n$ rp = \"Shall I use ''config_sh' for default answers? [''bool_dflt'] \"\n$ GOSUB myread\n$ IF ans\n$ THEN\n$   echo \"\"\n$   echo \"Fetching default answers from ''config_sh'...\"\n$!\n$!  we do our own parsing of the shell-script stuff\n$!  ...and only accept symbols if they're in the | delimited list below\n$!\n$   config_symbols0 =\"|archlib|archlibexp|bin|binexp|builddir|cf_email|config_sh|installarchlib|installbin|installman1dir|installman3dir|\"\n$   config_symbols1 =\"|installprivlib|installscript|installsitearch|installsitelib|most|oldarchlib|oldarchlibexp|osname|pager|perl_symbol|perl_verb|\"\n$   config_symbols2 =\"|prefix|privlib|privlibexp|scriptdir|sitearch|sitearchexp|sitebin|sitelib|sitelib_stem|sitelibexp|usecxx|use64bitall|use64bitint|\"\n$   config_symbols3 =\"|usecasesensitive|usedefaulttypes|usedevel|useieee|useithreads|uselongdouble|usemultiplicity|usemymalloc|usedebugging_perl|\"\n$   config_symbols4 =\"|usesecurelog|usethreads|usevmsdebug|usefaststdio|usemallocwrap|unlink_all_versions|uselargefiles|usesitecustomize|\"\n$   config_symbols5 =\"|buildmake|builder|usethreadupcalls|usekernelthreads|useshortenedsymbols|useversionedarchname|default_inc_excludes_dot\"\n$!  \n$   open/read CONFIG 'config_sh'\n$   rd_conf_loop:\n$     read/end=erd_conf_loop CONFIG line\n$     line = f$edit(line,\"trim\")\n$     if line .eqs. \"\" .or. f$extract(0,1,line) .eqs. \"#\" then goto rd_conf_loop\n$     sym = f$element(0,\"=\",line)\n$     if sym .eqs. \"=\" then goto rd_conf_loop\n$     dsym = \"|\"+sym+\"|\"\n$     k = 0\n$     rd_ck_loop:\n$         syms = config_symbols'k'\n$         j = f$locate(dsym, syms)\n$         if j .lt. f$length(syms) then goto erd_ck_loop\n$         k = k + 1\n$     if k .lt. 6 then goto rd_ck_loop\n$     goto rd_conf_loop\n$     erd_ck_loop:\n$     val = f$element(1,\"=\",line)\n$     val = f$extract(1,f$length(val)-2,val)\n$     write sys$output \"''sym' = \"\"''val'\"\"\"\n$    'sym' = \"''val'\"\n$   goto rd_conf_loop\n$   erd_conf_loop:\n$   close CONFIG\n$   delete/symbol config_symbols0\n$   delete/symbol config_symbols1\n$   delete/symbol config_symbols2\n$   delete/symbol config_symbols3\n$   delete/symbol config_symbols4\n$   delete/symbol config_symbols5\n$   delete/symbol sym\n$   delete/symbol val\n$   delete/symbol dsym\n$   if f$type(usedebugging_perl) .nes. \"\"\n$   then\n$       DEBUGGING = usedebugging_perl\n$       delete/symbol usedebugging_perl\n$   endif\n$!\n$ ENDIF\n$ if f$type(config_dflt) .nes. \"\" then DELETE/SYMBOL config_dflt\n$!\n$!we actually do not have \"hints/\" for VMS\n$!     TYPE SYS$INPUT:\n$!     DECK\n$!\n$!First time through, eh?  I have some defaults handy for the following systems:\n$!\n$!     EOD\n$!     echo \"     \",\"VMS_AXP\"\n$!     echo \"     \",\"VMS_IA64\"\n$!        : Now look for a hint file osname_osvers, unless one has been\n$!        : specified already.\n$!     TYPE SYS$INPUT:\n$!\n$!You may give one or more space-separated answers, or \"none\" if appropriate.\n$!If your OS version has no hints, DO NOT give a wrong version -- say \"none\".\n$!\n$!     READ SYS$COMMAND/PROMPT=\"Which of these apply, if any? \" ans\n$!\n$Beyond_config_sh:\n$!\n$!: Restore computed paths          !sfn\n$!\n$! %Config-I-VMS, a necessary error trap (could be PC running VCL)\n$!\n$ IF (osname .NES. \"VMS\")\n$ THEN\n$   echo4 \"Hmm.. I wonder what ''osname' is (?)\"\n$   TYPE SYS$INPUT:\n$   DECK\n\n%Config-E-VMS, ERROR:\n\n           Err, you do not appear to be running VMS!\n This procedure is intended to Configure the building of Perl for VMS.\n\n$   EOD\n$   bool_dflt = \"n\"\n$   GOSUB myread\n$   IF ans\n$   THEN\n$     echo4 \"Continuing...\"\n$   ELSE\n$     echo4 \"ABORTING...\"\n$     SET DEFAULT 'vms_default_directory_name' !be kind rewind\n$     STOP\n$     EXIT 2 !$STATUS = \"%X00000002\" (error)\n$   ENDIF\n$ ENDIF !(osname .NES./.EQS. \"VMS\")\n$!\n$!: who configured the system\n$ cf_by = F$EDIT(user,\"LOWERCASE\")\n$ osvers = F$EDIT(F$GETSYI(\"VERSION\"),\"TRIM\")\n$!\n$! Peter Prymmer has seen:\n$!  \"SYS$TIMEZONE_DIFFERENTIAL\" = \"-46800\"  (sic)\n$!  \"SYS$TIME_ZONE\" = \"EDT\"\n$!\n$! Charles Lane recommended:\n$!  \"SYS$TIMEZONE_DIFFERENTIAL\" = \"-14400\"\n$!  \"NEWS_TIMEZONE\" = \"-0500\"\n$!  \"ST_TIMEZONE\" = \"EDT\"\n$!  \"JAN_TIME_ZONE\" = \"EST  \"\n$!  \"MULTINET_TIMEZONE\" = \"EST\"\n$!  \"DAYLIGHT_SAVINGS\"  = \"1\"\n$!\n$! Charles Bailey recommends (in ANU NEWS Doc Jan 1995):\n$!   \"PMDF_Timezone\"\n$!   \"Multinet_Timezone\"\n$!   \"TCPware_Timezone\"\n$!   \"WIN$Time_Zone\"\n$!\n$! This snippet o' DCL returns a string in default Unix `date` format,\n$! and it will prompt to set SYS$TIMEZONE_DIFFERENTIAL.\n$!\n$ MIN_TZO = -840  !units are minutes here\n$ MAX_TZO =  840\n$!\n$ wkday  = F$EXTRACT(0,3,F$CVTIME(,,\"WEEKDAY\"))\n$ monn   = F$CVTIME(,,\"MONTH\")\n$ mday   = F$EXTRACT(8,2,F$CVTIME(,,\"DATE\"))\n$ hour   = F$CVTIME(,,\"HOUR\")\n$ min    = F$CVTIME(,,\"MINUTE\")\n$ sec    = F$CVTIME(,,\"SECOND\")\n$ year   = F$CVTIME(,,\"YEAR\")\n$!\n$ months = \"/Jan/Feb/Mar/Apr/May/Jun/Jul/Aug/Sep/Oct/Nov/Dec/\"\n$ i = 0\n$Mon_loop:\n$ i = i + 1\n$ mon = F$ELEMENT(i,\"/\",months)\n$ IF i.LT.monn THEN GOTO Mon_loop\n$!\n$ tzneedset = \"t\"\n$ systz = F$TRNLNM(\"SYS$TIMEZONE_DIFFERENTIAL\")\n$ IF systz.NES.\"\"\n$ THEN\n$   tzhour = F$INTEGER(systz)/3600\n$   tzmins = F$INTEGER(systz)/60\n$   tzminrem = tzmins - tzhour*60\n$   IF tzminrem.lt.0 THEN tzminrem = -1*tzminrem  !keeps !2ZL happy\n$   IF tzhour.ge.0 \n$   THEN signothetime = \"+\" \n$     IF tzhour.EQ.0.AND.tzminrem.EQ.0 \n$     THEN direction = \"on GMT/\"\n$     ELSE direction = \"east of \"\n$     ENDIF\n$   ELSE signothetime = \"-\"\n$     tzhour = -1*tzhour                          !keeps !UL happy\n$     direction = \"west of \"\n$   ENDIF\n$   echo \"\"\n$   echo \"According to the setting of your \"\"SYS$TIMEZONE_DIFFERENTIAL\"\" (= ''systz')\"\n$   IF tzminrem.ne.0\n$   THEN\n$     tzspan = \"''tzhour' hours & ''tzminrem' minutes\"\n$   ELSE\n$     tzspan = \"''tzhour' hours\"\n$   ENDIF\n$   bool_dflt = \"y\"\n$   echo \"Your system is ''tzspan' ''direction'UTC in England.\"\n$   rp = \"(''systz') Is this UTC Time Zone Offset correct? [''bool_dflt'] \"\n$   GOSUB myread\n$   IF ans\n$   THEN \n$     tzneedset = \"f\"\n$     tzd = systz\n$     GOTO Beyond_TimeZone\n$   ENDIF\n$ ELSE\n$   echo \"\"\n$   echo4 \"\"\"SYS$TIMEZONE_DIFFERENTIAL\"\" does not appear to be DEFINEd on your system\"\n$ ENDIF\n$!\n$TZSet:\n$ echo \"\"\n$ echo \"Please tell me in hh:mm form what time offset from GMT/UTC in England\"\n$ echo \"you are.  As an example Eastern (US) Standard Time is -5:00 offset, but\"\n$ echo \"Eastern Daylight Time (summer) is -4:00 offset.\"\n$ dflt = \"0:00\"\n$ rp = \"Enter the Time Zone offset: [''dflt'] \"\n$ GOSUB myread\n$ ans = F$Edit(ans,\"collapse,trim,uncomment,upcase\")\n$ IF ans.EQS.\"\" THEN ans = dflt\n$ tzhour   = F$ELEMENT(0,\":\",\"''ans'\") !first\n$ IF tzhour.EQS.\"\" THEN tzhour = 0\n$ tzhour   = F$INTEGER(tzhour)\n$ tzminrem = F$ELEMENT(1,\":\",\"''ans'\") !second\n$ IF tzminrem.NES.\"\" \n$ THEN \n$   tzminrem = F$INTEGER(tzminrem)\n$   IF F$EXTRACT(0,1,\"''ans'\") .EQS. \"-\" THEN tzminrem = tzminrem * -1\n$ ELSE \n$   tzminrem = 0\n$ ENDIF\n$ tzmins = tzhour*60 + tzminrem\n$ tzd = F$STRING(tzmins*60)\n$ IF tzhour .GE. 0 \n$ THEN\n$   signothetime = \"+\" \n$ ELSE\n$   tzhour = -1*tzhour       !keeps !UL happy\n$   signothetime = \"-\"\n$ ENDIF\n$ IF (tzmins.GT.MAX_TZO).OR.(tzmins.LT.MIN_TZO)\n$ THEN\n$   echo \"\"\n$   echo \"%Config-W-VMS-TIMERANGE, Response must be in the range -14:00 to 14:00.\"\n$   goto TZSet\n$ ENDIF\n$!\n$Beyond_TimeZone:\n$ tz = f$fao(\"UTC!AS!UL:!2ZL\",signothetime,tzhour,tzminrem)\n$ cf_time = \"''wkday' ''mon' ''mday' ''hour':''min':''sec' ''tz' ''year'\"\n$!\n$! This quotation from Configure has to be included on VMS:\n$!\n$ TYPE SYS$INPUT:\n$ DECK\n\nThere is, however, a strange, musty smell in the air that reminds me of\nsomething...hmm...yes...I've got it...there's a VMS nearby, or I'm a Blit.\n$ EOD\n$!\n$! Determine the architecture name.  For now we just get the base\n$! architecture name, which may accumulate various minus sign-delimited\n$! appendages later depending on configuration options.  But we need the\n$! base name early because not all questions are worth asking on all\n$! platforms.\n$!\n$! Please use F$ELEMENT(0,\"-\",archname) .EQS. \"VMS_AXP\" (or\n$! \"VMS_IA64\") from here on to allow cross-platform configuration (e.g.\n$! configure a IA64 build on an Alpha).\n$!\n$ IF (F$GETSYI(\"HW_MODEL\") .LT. 1024 .AND. F$GETSYI(\"HW_MODEL\") .GT. 0)\n$ THEN \n$   echo \"Sorry, VAX is  no longer supported by this Perl version.\"\n$   echo \"Please try Perl 5.22 or earlier\"\n$   exit 44\n$ ELSE\n$   IF (F$GETSYI(\"ARCH_TYPE\") .EQ. 2)\n$   THEN\n$       archname = \"VMS_AXP\"\n$       otherarch = \"IA64\"\n$       arch_type = \"ARCH-TYPE=__AXP__\"\n$   ELSE\n$       archname = \"VMS_IA64\"\n$       otherarch = \"Alpha\"\n$       arch_type = \"ARCH-TYPE=__IA64__\"\n$   ENDIF\n$   alignbytes=\"8\"\n$ ENDIF\n$!\n$!: set the base revision\n$ baserev=\"5.0\"\n$ revision = baserev - \".0\"\n$!: get the patchlevel\n$ echo \"\"\n$ echo4 \"Getting the current patchlevel...\"\n$ patchlevel=\"0\"\n$ subversion=\"0\"\n$ api_revision=\"0\"\n$ api_version=\"0\"\n$ api_subversion=\"0\"\n$ perl_patchlevel=\"0\"\n$ patchlevel_h = F$SEARCH(\"[-]patchlevel.h\")\n$ IF (patchlevel_h.NES.\"\")\n$ THEN\n$   got_patch = \"false\"\n$   got_sub   = \"false\"\n$   got_api_revision   = \"false\"\n$   got_api_version    = \"false\"\n$   got_api_subversion = \"false\"\n$   got_perl_patchlevel= \"false\"\n$   OPEN/READONLY CONFIG 'patchlevel_h' \n$Patchlevel_h_loop:\n$   READ/END_Of_File=Close_patch/ERROR=Close_patch CONFIG line\n$   IF ((F$LOCATE(\"#define PERL_VERSION\",line).NE.F$LENGTH(line)).AND.(.NOT.got_patch))\n$   THEN\n$     line = F$EDIT(line,\"COMPRESS, TRIM\")\n$     patchlevel = F$ELEMENT(2,\" \",line)\n$     got_patch = \"true\"\n$   ENDIF\n$   IF ((F$LOCATE(\"#define PERL_SUBVERSION\",line).NE.F$LENGTH(line)).AND.(.NOT.got_sub))\n$   THEN\n$     line = F$EDIT(line,\"COMPRESS, TRIM\")\n$     subversion = F$ELEMENT(2,\" \",line)\n$     got_sub = \"true\"\n$   ENDIF\n$   IF ((F$LOCATE(\"#define PERL_API_REVISION\",line).NE.F$LENGTH(line)).AND.(.NOT.got_api_revision))\n$   THEN\n$     line = F$EDIT(line,\"COMPRESS, TRIM\")\n$     api_revision = F$ELEMENT(2,\" \",line)\n$     got_api_revision = \"true\"\n$   ENDIF\n$   IF ((F$LOCATE(\"#define PERL_API_VERSION\",line).NE.F$LENGTH(line)).AND.(.NOT.got_api_version))\n$   THEN\n$     line = F$EDIT(line,\"COMPRESS, TRIM\")\n$     api_version = F$ELEMENT(2,\" \",line)\n$     got_api_version = \"true\"\n$   ENDIF\n$   IF ((F$LOCATE(\"#define PERL_API_SUBVERSION\",line).NE.F$LENGTH(line)).AND.(.NOT.got_api_subversion))\n$   THEN\n$     line = F$EDIT(line,\"COMPRESS, TRIM\")\n$     api_subversion = F$ELEMENT(2,\" \",line)\n$     got_api_subversion = \"true\"\n$   ENDIF\n$   IF ((F$LOCATE(\"\"\"DEVEL\",line).NE.F$LENGTH(line)).AND.(.NOT.got_perl_patchlevel))\n$   THEN\n$     line = F$EDIT(line,\"COMPRESS, TRIM\")\n$     perl_patchlevel = F$ELEMENT(1,\"\"\"\",line)\n$     perl_patchlevel = perl_patchlevel - \"DEVEL\"\n$     got_perl_patchlevel = \"true\"\n$   ENDIF\n$   IF ((F$LOCATE(\"\"\"SMOKE\",line).NE.F$LENGTH(line)).AND.(.NOT.got_perl_patchlevel))\n$   THEN\n$     line = F$EDIT(line,\"COMPRESS, TRIM\")\n$     perl_patchlevel = F$ELEMENT(1,\"\"\"\",line)\n$     perl_patchlevel = perl_patchlevel - \"SMOKE\"\n$     got_perl_patchlevel = \"true\"\n$   ENDIF\n$   IF ((F$LOCATE(\"\"\"MAINT\",line).NE.F$LENGTH(line)).AND.(.NOT.got_perl_patchlevel))\n$   THEN\n$     line = F$EDIT(line,\"COMPRESS, TRIM\")\n$     perl_patchlevel = F$ELEMENT(1,\"\"\"\",line)\n$     perl_patchlevel = perl_patchlevel - \"MAINT\"\n$     got_perl_patchlevel = \"true\"\n$   ENDIF\n$   IF (.NOT. got_patch) .OR. -\n       (.NOT. got_sub) .OR. - \n       (.NOT. got_api_revision) .OR. -\n       (.NOT. got_api_version) .OR. -\n       (.NOT. got_api_subversion) .OR. -\n       (.NOT. got_perl_patchlevel) -\n      THEN GOTO Patchlevel_h_loop\n$Close_patch:\n$   CLOSE CONFIG\n$ ENDIF\n$!\n$ IF F$SEARCH(\"[-].patch\") .NES. \"\"\n$ THEN\n$   SET NOON\n$   OPEN/READ PATCH [-].patch\n$   READ PATCH line\n$   CLOSE PATCH\n$   tmp = F$EDIT(line,\"TRIM,COMPRESS\")\n$   IF F$ELEMENT(3, \" \", tmp) .NES. \"\" THEN tmp = F$ELEMENT(3, \" \", tmp)\n$   SET ON\n$   IF tmp .NES. \"\" THEN perl_patchlevel = tmp\n$ ENDIF\n$!\n$ version_patchlevel_string = \"version ''patchlevel' subversion ''subversion'\"\n$ IF got_perl_patchlevel .AND. perl_patchlevel .NES. \"0\"\n$ THEN\n$   version_patchlevel_string = \"''version_patchlevel_string' patch ''perl_patchlevel'\"\n$ ENDIF\n$ echo \"(You have ''package' ''version_patchlevel_string'.)\"\n$!\n$ version = revision + \"_\" + patchlevel + \"_\" + subversion\n$!\n$!: see if we need a special compiler\n$! cc_list = \"cc/decc|gcc\" !%Config-I-VMS, compiler symbols/commands\n$!\n$ nocc = \"f\"\n$ vms_cc_dflt = \"\"\n$ vms_cc_available = \"\"\n$!\n$ OPEN/WRITE CONFIG ccvms.c\n$ WRITE CONFIG \"#ifdef __DECC\"\n$ WRITE CONFIG \"#include <stdlib.h>\"  !DECC is sooo picky\n$ WRITE CONFIG \"#endif\"\n$ WRITE CONFIG \"#include <stdio.h>\"\n$ WRITE CONFIG \"int main() {\"\n$ WRITE CONFIG \"#ifdef __DECC\"\n$ WRITE CONFIG \"        printf(\"\"/DECC\\n\"\");\"\n$ WRITE CONFIG \"#else\"\n$ WRITE CONFIG \"        printf(\"\"/VAXC\\n\"\");\"\n$ WRITE CONFIG \"#endif\"\n$ WRITE CONFIG \"        exit(0);\"\n$ WRITE CONFIG \"}\"\n$ CLOSE CONFIG\n$!\n$ SET NOON\n$ DEFINE/USER_MODE SYS$ERROR _NLA0:\n$ DEFINE/USER_MODE SYS$OUTPUT _NLA0:\n$ cc/NoObj/list=ccvms.lis ccvms.c\n$ tmp = $status\n$ SET ON\n$ IF (silent) THEN GOSUB Shut_up\n$ IF tmp.NE.%X10B90001\n$ THEN \n$  IF tmp.NE.%X10000001\n$  THEN \n$    nocc = \"t\"  !%X10000001 is return from gcc\n$    GOTO Gcc_initial_check\n$  ENDIF\n$ ENDIF\n$!\n$ GOSUB List_Parse\n$ IF .NOT.silent THEN echo \"\"\n$ echo \"Default \"\"cc\"\" is ''line' ''archsufx' ''F$GETSYI(\"VERSION\")'\" \n$ IF (F$LOCATE(\"VSI\",line).NE.F$LENGTH(line)) -\n  .or.(F$LOCATE(\"HP\",F$EDIT(line,\"UPCASE\")).NE.F$LENGTH(line)) -\n  .or.(F$LOCATE(\"Compaq\",line).NE.F$LENGTH(line))\n$ THEN \n$   vms_cc_dflt = \"/decc\"\n$   vms_cc_available = vms_cc_available + \"cc/decc \"\n$ ENDIF\n$!\n$Gcc_initial_check:\n$ echo \"Checking for gcc\"\n$ OPEN/WRITE CONFIG gccvers.lis\n$ SET NOON\n$ DEFINE/USER_MODE SYS$ERROR CONFIG\n$ DEFINE/USER_MODE SYS$OUTPUT CONFIG\n$ 'gcc_symbol'/noobj/version _nla0:\n$ tmp = $status\n$ SET ON\n$ IF (silent) THEN GOSUB Shut_up\n$ CLOSE CONFIG\n$ IF (tmp.NE.%X10000001).and.(tmp.ne.%X00030001)\n$ THEN\n$   echo \"Symbol \"\"''gcc_symbol'\"\" is not defined. I guess you do not have it.\"\n$   DELETE/NOLOG/NOCONFIRM gccvers.lis;\n$   GOTO Cxx_initial_check\n$ ENDIF\n$ OPEN/READ CONFIG gccvers.lis\n$GCC_List_Read:\n$ READ/END_OF_FILE=GCC_List_End CONFIG line\n$ GOTO GCC_List_Read\n$GCC_List_End:\n$ CLOSE CONFIG\n$ echo line\n$ vms_cc_available = vms_cc_available + \"''gcc_symbol' \"\n$ DELETE/NOLOG/NOCONFIRM gccvers.lis;\n$!\n$Cxx_initial_check:\n$!\n$! In order to build with the HP C++ compiler, invoke configure.com with \"-Dusecxx\" on\n$! the command line.\n$!\n$ IF F$TYPE(usecxx) .EQS. \"\" THEN usecxx := n\n$ IF usecxx .OR. usecxx .EQS. \"define\"\n$ THEN\n$!\n$ echo \"Checking for CXX...\"\n$ OPEN/WRITE CONFIG ccvms.c\n$ WRITE CONFIG \"#include <iostream>\"\n$ WRITE CONFIG \"int main() {\"\n$ WRITE CONFIG \"#ifdef __DECCXX\"\n$ WRITE CONFIG \"        cout << __DECCXX, endl;\"\n$ WRITE CONFIG \"#else\"\n$ WRITE CONFIG \"        cout << 0,endl;\"\n$ WRITE CONFIG \"#endif\"\n$! Todo: add G++ identifier check ??\n$ WRITE CONFIG \"        return(0);\"\n$ WRITE CONFIG \"}\"\n$ CLOSE CONFIG\n$ SET NOON\n$ DEFINE/USER_MODE SYS$OUTPUT NL:\n$ DEFINE/USER_MODE SYS$ERROR NL:\n$ cxx ccvms.c\n$ tmp = $status\n$ SET ON\n$! success $status with:\n$! DEC C++ V1.1-001 on VMS VAX V5.5-2\n$! DEC C++ V5.6-013 on OpenVMS VAX V7.1\n$! DEC C++ V6.1-003 on OpenVMS Alpha V7.1\n$! Compaq C++ V6.2-016 for OpenVMS Alpha V7.2-1\n$ IF tmp .eq. %X15F60001  \n$ THEN\n$! Which linker?\n$   SET NOON\n$   DEFINE/USER_MODE SYS$OUTPUT NL:\n$   DEFINE/USER_MODE SYS$ERROR NL:\n$   link/nodebug ccvms.obj\n$   tmp = $status\n$   SET ON\n$   ! success $status with:\n$   ! link && DEC C++ V1.1-001 on VMS VAX V5.5-2\n$   ! link && DEC C++ V5.6-013 on OpenVMS VAX V7.1\n$   IF tmp .eq. %X10000001\n$   THEN\n$     ld_try = \"Link/nodebug\"\n$     vms_cc_available = vms_cc_available + \"cxx \"\n$     echo \"CXX and LINK are available.\"\n$   ELSE\n$     IF F$SEARCH(\"ccvms.exe\") .NES. \"\" THEN DELETE/NOLOG/NOCONFIRM ccvms.exe;\n$     SET NOON\n$     DEFINE/USER_MODE SYS$OUTPUT NL:\n$     DEFINE/USER_MODE SYS$ERROR NL:\n$     cxxlink ccvms.obj\n$     tmp = $status\n$     SET ON\n$     ! success $status with:\n$     ! cxxlink && DEC C++ V6.1-003 on OpenVMS Alpha V7.1\n$     ! cxxlink && Compaq C++ V6.2-016 for OpenVMS Alpha V7.2-1\n$     IF tmp .eq. %X10000001 \n$     THEN \n$       ld_try = \"cxxlink\"\n$       vms_cc_available = vms_cc_available + \"cxx \"\n$       echo \"CXX and CXXLINK are available.\"\n$     ENDIF\n$   ENDIF\n$   IF F$SEARCH(\"ccvms.exe\") .NES. \"\" THEN DELETE/NOLOG/NOCONFIRM ccvms.exe;\n$ ELSE\n$   echo \"Nope.\"\n$ ENDIF\n$ DELETE/NOLOG/NOCONFIRM ccvms.c;\n$ IF F$SEARCH(\"ccvms.obj\") .NES. \"\" THEN DELETE/NOLOG/NOCONFIRM ccvms.obj;\n$ CALL Cxx_demangler_cleanup\n$!\n$ ENDIF ! 1 .eq. 0 or 1 .eq. 1\n$!\n$CC_Cleanup:\n$ DELETE/NOLOG/NOCONFIRM ccvms.*;\n$CC_Desired:\n$!: see if we need a special compiler\n$! echo \"\"\n$ echo \"Available compiler(s):\"\n$ echo \"( ''vms_cc_available')\"\n$ IF .NOT.nocc \n$ THEN\n$   IF usecxx .OR. usecxx .EQS. \"define\"\n$   THEN\n$     dflt = \"cxx\"\n$   ELSE\n$     dflt = \"cc''vms_cc_dflt'\"  !-> \"cc\" in case first compile went OK\n$   ENDIF\n$ ELSE\n$   dflt = gcc_symbol\n$ ENDIF\n$ rp = \"Use which C compiler? [''dflt'] \"\n$ GOSUB myread\n$ IF ans.NES.\"\"\n$ THEN\n$   ans = F$EDIT(ans,\"TRIM, COMPRESS, LOWERCASE\")\n$   Mcc = ans\n$   IF (F$LOCATE(\"dec\",ans).NE.F$LENGTH(ans)).or.(F$LOCATE(\"compaq\",ans).NE.F$LENGTH(ans)) -\n    .or.(F$LOCATE(\"hp\",ans).NE.F$LENGTH(ans)) -\n    .or.(F$LOCATE(\"vsi\",ans).NE.F$LENGTH(ans))\n$   THEN\n$     Mcc = \"cc/decc\"\n$! CPQ ?\n$     ccname := DEC\n$     C_COMPILER_Replace = \"CC=cc=''Mcc'\"\n$   ENDIF\n$   IF F$LOCATE(\"cxx\",F$EDIT(ans,\"COLLAPSE,LOWERCASE\")) .NE. F$LENGTH(ans)\n$   THEN\n$     Mcc = \"cxx\"\n$     ccname := CXX\n$     ld = ld_try\n$     C_COMPILER_Replace = \"CC=cc=''Mcc'\"\n$   ELSE ! Not_cxx\n$     IF Mcc.NES.dflt\n$     THEN\n$       IF F$LOCATE(\"dec\",dflt) .NE. F$LENGTH(dflt) .or. -\n           F$LOCATE(\"compaq\",dflt) .NE. F$LENGTH(dflt) -\n          .or.(F$LOCATE(\"vsi\",dflt).NE.F$LENGTH(dflt))\n$       THEN \n$         C_COMPILER_Replace = \"CC=cc=''Mcc'\"\n$       ELSE\n$         ccname := DEC\n$       ENDIF\n$     ELSE\n$       IF Mcc .EQS. \"cc/decc\"\n$       THEN\n$         ccname := DEC\n$         C_COMPILER_Replace = \"CC=cc=''Mcc'\"\n$       ENDIF\n$     ENDIF\n$   ENDIF\n$ ELSE \n$   Mcc = dflt\n$   IF Mcc .EQS. \"cc/decc\"\n$   THEN\n$     ccname := DEC\n$     C_COMPILER_Replace = \"CC=cc=''Mcc'\"\n$   ENDIF\n$   IF Mcc .EQS. \"gcc\"\n$   THEN\n$     ccname := GCC\n$     C_COMPILER_Replace = \"CC=cc=''Mcc'\"\n$   ENDIF\n$ ENDIF\n$Decc_Version_check:\n$ ccversion=\"\"\n$ IF ccname .EQS. \"DEC\"\n$ THEN\n$   echo \"\"\n$   echo4 \"Checking for the Dec C version number...\"\n$   OPEN/WRITE CONFIG deccvers.c\n$   WRITE CONFIG \"#include <stdlib.h>\"  !DECC is sooo picky\n$   WRITE CONFIG \"#include <stdio.h>\"\n$   WRITE CONFIG \"int main() {\"\n$   WRITE CONFIG \"#ifdef __DECC\"\n$   WRITE CONFIG \"#ifdef __DECC_VER\"\n$   WRITE CONFIG \"        printf(\"\"%i\\n\"\", __DECC_VER);\"\n$   WRITE CONFIG \"#else\"\n$   WRITE CONFIG \"        printf(\"\"%i\\n\"\", \"\"1\"\");\"\n$   WRITE CONFIG \"#endif\"\n$   WRITE CONFIG \"#endif\"\n$   WRITE CONFIG \"        exit(0);\"\n$   WRITE CONFIG \"}\"\n$   CLOSE CONFIG\n$   SET NOON\n$   DEFINE/USER_MODE SYS$ERROR NL:\n$   DEFINE/USER_MODE SYS$OUTPUT NL:\n$   'Mcc' deccvers.c\n$   tmp = $status\n$   IF (silent) THEN GOSUB Shut_up\n$   DEFINE/USER_MODE SYS$ERROR NL:\n$   DEFINE/USER_MODE SYS$OUTPUT NL:\n$   link/nodebug deccvers.obj\n$   tmp = $status\n$   IF (silent) THEN GOSUB Shut_up\n$   OPEN/WRITE CONFIG deccvers.out\n$   DEFINE/USER_MODE SYS$ERROR CONFIG\n$   DEFINE/USER_MODE SYS$OUTPUT CONFIG\n$   mcr []deccvers.exe\n$   tmp = $status\n$   SET ON\n$   CLOSE CONFIG\n$   IF (silent) THEN GOSUB Shut_up\n$   OPEN/READ CONFIG deccvers.out\n$   READ/END_OF_FILE=Dec_c_cleanup CONFIG line\n$Dec_c_cleanup:\n$   CLOSE CONFIG\n$   echo \"You are using Dec C ''line'\"\n$   ccversion = line\n$   Dec_C_Version = F$INTEGER(line)\n$   echo4 \"adding /NOANSI_ALIAS qualifier to ccflags.\"\n$   ccflags = ccflags + \"/NOANSI_ALIAS\"\n$   DELETE/NOLOG/NOCONFIRM deccvers.*;\n$ ENDIF\n$Gcc_check:\n$ gccversion = \"\"\n$ IF ccname .EQS. \"GCC\"\n$ THEN\n$   vaxcrtl_olb = F$SEARCH(\"SYS$LIBRARY:VAXCRTL.OLB\")\n$   vaxcrtl_exe = F$SEARCH(\"SYS$SHARE:VAXCRTL.EXE\")\n$   gcclib_olb  = F$SEARCH(\"GNU_CC:[000000]GCCLIB.OLB\")\n$   IF gcclib_olb .EQS. \"\" \n$   THEN \n$!    These objects/libs come w/ gcc 2.7.2 for AXP:\n$     tmp = F$SEARCH(\"GNU_CC:[000000]libgcc2.olb\")\n$     IF tmp .NES. \"\" then gcclib_olb = tmp\n$     tmp = F$SEARCH(\"GNU_CC:[000000]libgcclib.olb\")\n$     IF tmp .NES. \"\" \n$     THEN \n$       IF gcclib_olb .EQS. \"\" \n$       THEN gcclib_olb = tmp\n$       ELSE gcclib_olb = gcclib_olb + \"/lib,\" + tmp\n$       ENDIF\n$     ENDIF\n$     tmp = F$SEARCH(\"SYS$LIBRARY:VAXCRTL.OLB\")\n$     IF tmp .NES. \"\" \n$     THEN \n$       IF gcclib_olb .EQS. \"\" \n$       THEN gcclib_olb = tmp\n$       ELSE gcclib_olb = gcclib_olb + \"/lib,\" + tmp\n$       ENDIF\n$     ENDIF\n$     tmp = F$SEARCH(\"GNU_CC:[000000]crt0.obj\")\n$     IF tmp .NES. \"\" \n$     THEN \n$       IF gcclib_olb .EQS. \"\" \n$       THEN gcclib_olb = tmp\n$       ELSE gcclib_olb = gcclib_olb + \"/lib,\" + tmp\n$       ENDIF\n$     ENDIF\n$     IF gcclib_olb .EQS. vaxcrtl_olb THEN gcclib_olb = \"\" !goofy order of axplibs\n$   ELSE\n$     gcclib_olb = gcclib_olb + \"/lib\"\n$   ENDIF\n$   IF   gcclib_olb .NES. \"\" .AND. -\n     (vaxcrtl_olb .NES. \"\" .OR. -\n      vaxcrtl_exe .NES. \"\" )\n$   THEN\n$     echo \"\"\n$     echo4 \"Checking for GNU cc in disguise and/or its version number...\" !>&4\n$     OPEN/WRITE CONFIG gccvers.c\n$     WRITE CONFIG \"#include <stdio.h>\"\n$     WRITE CONFIG \"int main() {\"\n$     WRITE CONFIG \"#ifdef __GNUC__\"\n$     WRITE CONFIG \"#ifdef __VERSION__\"\n$     WRITE CONFIG \"        printf(\"\"%s\\n\"\", __VERSION__);\"\n$     WRITE CONFIG \"#else\"\n$     WRITE CONFIG \"        printf(\"\"%s\\n\"\", \"\"1\"\");\"\n$     WRITE CONFIG \"#endif\"\n$     WRITE CONFIG \"#endif\"\n$     WRITE CONFIG \"        exit(0);\"\n$     WRITE CONFIG \"}\"\n$     CLOSE CONFIG\n$     DEFINE SYS$ERROR _NLA0:\n$     DEFINE SYS$OUTPUT _NLA0:\n$     'Mcc' gccvers.c\n$     tmp = $status\n$     DEASSIGN SYS$ERROR _NLA0:\n$     DEASSIGN SYS$OUTPUT _NLA0:\n$     IF (silent) THEN GOSUB Shut_up\n$     DEFINE SYS$ERROR _NLA0:\n$     DEFINE SYS$OUTPUT _NLA0:\n$     IF vaxcrtl_exe .EQS. \"\"\n$     THEN \n$       IF F$LOCATE(\"VAXCRTL\",gcclib_olb).NE.F$LENGTH(gcclib_olb)\n$       THEN \n$         link/nodebug gccvers.obj,'gcclib_olb',SYS$LIBRARY:VAXCRTL/Library\n$         tmp = $status\n$       ELSE\n$         link/nodebug gccvers.obj,'gcclib_olb'\n$         tmp = $status\n$       ENDIF\n$     ELSE\n$       OPEN/WRITE CONFIG GCCVERS.OPT\n$       WRITE CONFIG \"SYS$SHARE:VAXCRTL/SHARE\"\n$       CLOSE CONFIG\n$       link/nodebug gccvers.obj,GCCVERS.OPT/OPT,'gcclib_olb'\n$       tmp = $status\n$     ENDIF\n$     DEASSIGN SYS$ERROR\n$     DEASSIGN SYS$OUTPUT\n$     IF (silent) THEN GOSUB Shut_up\n$     OPEN/WRITE CONFIG gccvers.out\n$     DEFINE SYS$ERROR CONFIG\n$     DEFINE SYS$OUTPUT CONFIG\n$     mcr []gccvers.exe\n$     tmp = $status\n$     CLOSE CONFIG\n$     DEASSIGN SYS$OUTPUT\n$     DEASSIGN SYS$ERROR\n$     IF (silent) THEN GOSUB Shut_up\n$     OPEN/READ CONFIG gccvers.out\n$     READ/END_OF_FILE=Gcc_cleanup CONFIG line\n$Gcc_cleanup:\n$     CLOSE CONFIG\n$     DELETE/NOLOG/NOCONFIRM gccvers.*;\n$     IF F$LOCATE(\"GNU C version \",line).NE.F$LENGTH(line)\n$     THEN \n$       echo \"You are not using GNU cc.\"\n$       GOTO Host_name\n$     ELSE \n$       echo \"You are using GNU cc ''line'\"\n$       gccversion = line\n$       ccname := \"GCC\"\n$       C_COMPILER_Replace = \"CC=cc=''Mcc'\"\n$       GOTO Include_dirs\n$     ENDIF\n$   ENDIF\n$ ENDIF\n$Cxx_Version_check:\n$ IF ccname .EQS. \"CXX\"\n$ THEN\n$   OPEN/WRITE CONFIG cxxvers.c\n$   WRITE CONFIG \"#include <stdio.h>\"\n$   WRITE CONFIG \"int main() {\"\n$   WRITE CONFIG \"#ifdef __DECCXX_VER\"\n$   WRITE CONFIG \"        printf(\"\"%i\\n\"\", __DECCXX_VER);\"\n$   WRITE CONFIG \"#else\"\n$   WRITE CONFIG \"        printf(\"\"%i\\n\"\", \"\"0\"\");\"\n$   WRITE CONFIG \"#endif\"\n$   WRITE CONFIG \"        return(0);\"\n$   WRITE CONFIG \"}\"\n$   CLOSE CONFIG\n$   SET NOON\n$   DEFINE/USER_MODE SYS$ERROR NL:\n$   DEFINE/USER_MODE SYS$OUTPUT NL:\n$   'Mcc' cxxvers.c\n$   tmp = $status\n$   SET ON\n$   IF (silent) THEN GOSUB Shut_up\n$   SET NOON\n$   DEFINE/USER_MODE SYS$ERROR NL:\n$   DEFINE/USER_MODE SYS$OUTPUT NL:\n$   'ld' cxxvers.obj\n$   tmp = $status\n$   SET ON\n$   IF (silent) THEN GOSUB Shut_up\n$   OPEN/WRITE CONFIG cxxvers.out\n$   SET NOON\n$   DEFINE/USER_MODE SYS$ERROR CONFIG\n$   DEFINE/USER_MODE SYS$OUTPUT CONFIG\n$   mcr []cxxvers.exe\n$   tmp = $status\n$   SET ON\n$   CLOSE CONFIG\n$   IF (silent) THEN GOSUB Shut_up\n$   OPEN/READ CONFIG cxxvers.out\n$   READ/END_OF_FILE=Cxx_cleanup CONFIG line\n$Cxx_cleanup:\n$   CLOSE CONFIG\n$   DELETE/NOLOG/NOCONFIRM cxxvers.*;\n$   echo \"You are using CXX ''line'\"\n$   cxxversion = line\n$   ccversion = line\n$   d_cplusplus = \"define\"\n$   echo4 \"adding /NOANSI_ALIAS qualifier to ccflags.\"\n$   ccflags = ccflags + \"/NOANSI_ALIAS\"\n$   CALL Cxx_demangler_cleanup\n$ ELSE\n$   d_cplusplus = \"undef\"\n$ ENDIF\n$!\n$Cxx_demangler_cleanup: SUBROUTINE\n$!\n$!  If we do build with CXX these demangler Dbs will be left all over.\n$!  However, configure.com does try to remove the [.UU] sub directory.\n$!  Be sure to set default to the correct place before calling this sub.\n$!\n$ SET NOON\n$ IF F$SEARCH(\"[.CXX_REPOSITORY]*.*\") .NES. \"\" THEN DELETE/NOLOG/NOCONFIRM [.CXX_REPOSITORY]*.*;*\n$ IF F$SEARCH(\"CXX_REPOSITORY.DIR\") .NES. \"\"\n$ THEN\n$   SET PROTECTION=(SYSTEM:RWED,OWNER:RWED) CXX_REPOSITORY.DIR\n$   DELETE/NOLOG/NOCONFIRM CXX_REPOSITORY.DIR;\n$ ENDIF\n$ SET ON\n$ EXIT\n$ ENDSUBROUTINE ! Cxx_demangler_cleanup\n$!\n$ GOTO Host_name\n$!\n$List_Parse:\n$ OPEN/READ CONFIG ccvms.lis\n$ READ CONFIG line\n$ IF F$ELEMENT(0, \"-\", archname) .EQS. \"VMS_AXP\"\n$ THEN\n$     archsufx = \"AXP\"\n$ ELSE\n$     archsufx = \"IA64\"\n$ ENDIF\n$ CLOSE CONFIG\n$ line = F$EDIT(line,\"TRIM,COMPRESS\")\n$ line = line - \"Page 1\"           ! occurs at end all compilers\n$ line = line - \"CCVMS \"           ! filename appears w/ VAXC\n$ line = line - \"Source Listing \"  ! Seen w/ AXP DECC\n$ tmp = F$EXTRACT(0,20,line)       !timestamp, e.g. \"30-JUL-1996 21:12:54 \"\n$ line = line - tmp\n$ line = F$EDIT(line,\"TRIM\")       !bit redundant but we're in no big hurry\n$ DELETE/NOLOG/NOCONFIRM ccvms.lis;\n$ RETURN\n$!\n$Include_dirs:\n$!: What should the include directory be ? (.TLB text libraries)\n$ dflt = gcclib_olb \n$ rp = \"Where are the include files you want to use? \"\n$ IF f$length( rp + \"[''dflt'] \" ) .GT. 76\n$ THEN rp = F$FAO(\"!AS!/!AS\",rp,\"[''dflt'] \")\n$ ELSE rp = rp + \"[''dflt'] \"\n$ ENDIF\n$ GOSUB myread\n$ usrinc = ans\n$!\n$!: see if we have to deal with yellow pages, now NIS.\n$!: now get the host name\n$Host_name:\n$ echo \"\"\n$ echo4 \"Figuring out host name...\" !>&4\n$ myhostname = \"\"\n$  IF myhostname.eqs.\"\" THEN myhostname = F$TRNLNM(\"ARPANET_HOST_NAME\")\n$  IF myhostname.eqs.\"\" THEN myhostname = F$TRNLNM(\"INTERNET_HOST_NAME\")\n$  IF myhostname.eqs.\"\" THEN myhostname = F$TRNLNM(\"MULTINET_HOST_NAME\")\n$  IF myhostname.eqs.\"\" THEN myhostname = F$TRNLNM(\"UCX$INET_HOST_NAME\")\n$  IF myhostname.eqs.\"\".and. -\n      F$TRNLNM(\"UCX$INET_HOST\") .nes. \"\" .and. -\n      F$TRNLNM(\"UCX$INET_DOMAIN\") .nes. \"\" THEN - \n     myhostname = F$TRNLNM(\"UCX$INET_HOST\") + \".\" + F$TRNLNM(\"UCX$INET_DOMAIN\") \n$  IF myhostname.eqs.\"\".and. -\n      F$TRNLNM(\"TCPIP$INET_HOST\") .nes. \"\" .and. -\n      F$TRNLNM(\"TCPIP$INET_DOMAIN\") .nes. \"\" THEN - \n     myhostname = F$TRNLNM(\"TCPIP$INET_HOST\") + \".\" + F$TRNLNM(\"TCPIP$INET_DOMAIN\") \n$  IF myhostname.eqs.\"\" THEN myhostname = F$TRNLNM(\"TCPWARE_DOMAINNAME\")\n$  IF myhostname.eqs.\"\" THEN myhostname = F$TRNLNM(\"NEWS_ADDRESS\")\n$  IF myhostname.eqs.\"\" THEN myhostname = F$TRNLNM(\"SYS$NODE\") - \"::\"\n$  IF myhostname.eqs.\"\" THEN myhostname = F$EDIT(F$GETSYI(\"SCSNODE\"),\"TRIM\")\n$!: you do not want to know about this\n$!: verify guess\n$ rp = \"Your host name appears to be \"\"\"\"''myhostname'\"\"\"\". Right? \"\n$ bool_dflt = \"y\"\n$ GOSUB myread\n$ IF (.not.ans)\n$   THEN \n$     READ SYS$COMMAND/PROMPT= - \n \"Please type the (one word) name of your host: \" ans\n$     myhostname = ans\n$ ENDIF\n$!: translate upper to lower if necessary\n$ myhostname = F$EDIT(myhostname,\"COLLAPSE\")\n$ mylowhostname = F$EDIT(myhostname,\" LOWERCASE\")\n$ IF mylowhostname.NES.myhostname\n$ THEN\n$   echo \"(Normalizing case in your host name)\"\n$   myhostname = mylowhostname\n$ ENDIF\n$!\n$ fp = F$LOCATE(\".\",myhostname)\n$ mydomain = F$EXTRACT(fp,(F$LENGTH(myhostname)-fp)+1,myhostname)\n$ IF mydomain.NES.\"\"  !no periods in DECnet names like \"MYDECNODE::\"\n$ THEN\n$   rp = \"What is your domain name? [''mydomain'] \"\n$   dflt = mydomain\n$   GOSUB myread\n$   mydomain = ans\n$!: translate upper to lower if necessary\n$   mydomain = F$EDIT(mydomain,\"COLLAPSE\")\n$   mylowdomain = F$EDIT(mydomain,\" LOWERCASE\")\n$   IF mylowdomain.NES.mydomain\n$   THEN\n$     echo \"(Normalizing case in your domain name)\"\n$     mydomain = mylowdomain\n$   ENDIF\n$ ENDIF\n$ myhostname = myhostname - mydomain\n$ echo \"(Trimming domain name from host name--host name is now ''myhostname')\"\n$ IF .NOT.silent \n$ THEN\n$   TYPE SYS$INPUT:\n$   DECK\n\nI need to get your e-mail address in Internet format if possible, i.e.\nsomething like user@host.domain. Please answer accurately since I have\nno easy means to double check it. The default value provided below\nis most probably close to the reality but may not be valid from outside\nyour organization...\n$   EOD\n$ ENDIF\n$ IF F$TYPE(cf_email) .EQS. \"\" \n$ THEN \n$   dflt = \"''cf_by'@''myhostname'\"+\"''mydomain'\"\n$   rp = \"What is your e-mail address? [''dflt'] \"\n$   GOSUB myread\n$   cf_email = ans\n$ ENDIF\n$!\n$ IF .NOT.silent \n$ THEN\n$   TYPE SYS$INPUT:\n$   DECK\n\nIf you or somebody else will be maintaining perl at your site, please\nfill in the correct e-mail address here so that they may be contacted\nif necessary. Currently, the \"perlbug\" program included with perl\nwill send mail to this address in addition to perlbug@perl.org. You may\nenter \"none\" for no administrator.\n$   EOD\n$ ENDIF\n$ dflt = \"''cf_email'\"\n$ rp = \"Perl administrator e-mail address [''dflt'] \"\n$ GOSUB myread\n$ perladmin = ans\n$!\n$!: determine where public executable scripts go\n$!: determine perl absolute location\n$!: figure out how to guarantee perl startup\n$!\n$!: see how we invoke the C preprocessor\n$! echo \"\"\n$! echo4 \"Now, how can we feed standard input to your C preprocessor...\" !>&4\n$!: Set private lib path\n$!: Now check and see which directories actually exist, avoiding duplicates\n$!: determine optimize, if desired, or use for debug flag also\n$!: We will not override a previous value, but we might want to\n$!: augment a hint file\n$!: the following weeds options from ccflags that are of no interest to cpp\n$!: flags used in final linking phase\n$!: Try to guess additional flags to pick up local libraries.\n$!: coherency check\n$! echo \"\"\n$! echo4 \"Checking your choice of C compiler and flags for coherency...\" !>&4\n$!: compute shared library extension\n$!: Looking for optional libraries\n$!: see if nm is to be used to determine whether a symbol is defined or not\n$!: get list of predefined functions in a handy place\n$!: see if we have sigaction or sigprocmask\n$ IF (ccname .EQS. \"DEC\" .AND. Dec_C_Version .GE. 50200000) .OR. (ccname .EQS. \"CXX\")\n$ THEN\n$   Has_Dec_C_Sockets = \"T\"\n$   echo \"\"\n$   echo4 \"Hmm... Looks like you have Dec C Berkeley networking support.\"\n$ ELSE\n$   Has_Dec_C_Sockets = \"F\"\n$ ENDIF\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   echo \"\"\n$   echo \"You have sockets available via the C library. Should socket support\"\n$   echo \"be built into Perl?\"\n$   dflt = \"DECC\"\n$   rp = \"Choose socket support option (NONE\"\n$   IF Has_Dec_C_Sockets THEN rp = rp + \",DECC\"\n$   rp = rp + \") [''dflt'] \"\n$   GOSUB myread\n$   Has_Dec_C_Sockets = \"F\"\n$   Has_socketshr = \"F\"\n$   ans = F$EDIT(ans,\"TRIM,COMPRESS,LOWERCASE\")\n$   IF ans.eqs.\"decc\" THEN Has_Dec_C_Sockets = \"T\"\n$ ENDIF\n$!\n$!\n$! Ask if they want to build with VMS_DEBUG perl\n$ echo \"\"\n$ echo \"Perl can be built to run under the VMS debugger.\"\n$ echo \"You should only select this option if you are debugging\"\n$ echo \"perl itself.  This can be a useful feature if you are \"\n$ echo \"embedding perl in a program.\"\n$ bool_dflt = \"n\"\n$ if f$type(usevmsdebug) .nes. \"\" \n$ then\n$   if usevmsdebug .or. usevmsdebug .eqs. \"define\" then bool_dflt=\"y\"\n$ endif\n$ rp = \"Build a VMS-DEBUG version of Perl? [''bool_dflt'] \"\n$ GOSUB myread\n$ use_vmsdebug_perl = ans\n$ IF use_vmsdebug_perl\n$ THEN\n$   usevmsdebug = \"define\"\n$ ELSE\n$   usevmsdebug = \"undef\"\n$ ENDIF\n$!\n$! Ask if they want to build with DEBUGGING\n$ echo \"\"\n$ echo \"Perl can be built with extra runtime debugging enabled. This\"\n$ echo \"enables the -D switch, at the cost of some performance.  It\"\n$ echo \"was mandatory on perl 5.005 and before on VMS, but is now\"\n$ echo \"optional.  If you do not generally use it you should probably\"\n$ echo \"leave this off and gain a bit of extra speed.\"\n$ bool_dflt = \"n\"\n$ if f$type(DEBUGGING) .nes. \"\" \n$ then\n$   if f$extract(0,1,f$edit(DEBUGGING,\"collapse,upcase\")).eqs.\"Y\"  .or. DEBUGGING .eqs. \"define\" then bool_dflt=\"y\"\n$ endif\n$ rp = \"Build a DEBUGGING version of Perl? [''bool_dflt'] \"\n$ GOSUB myread\n$ use_debugging_perl = ans\n$!\n$!\n$! Ask about threads, if appropriate\n$ IF ccname .EQS. \"DEC\" .OR. ccname .EQS. \"CXX\"\n$ THEN\n$   echo \"\"\n$   echo \"Perl can be built to offer a form of threading support on some systems.\"\n$   echo \"To do so, configure.com can be run with -\"\"Dusethreads\"\".\"\n$   echo \"\"\n$   echo \"Note that Perl built with threading support runs slightly slower\"\n$   echo \"and uses slightly more memory than plain Perl.\"\n$   echo \"\"\n$   bool_dflt = \"n\"\n$   if f$type(usethreads) .nes. \"\" \n$   then \n$       if usethreads .or. usethreads .eqs. \"define\" then bool_dflt=\"y\"\n$   endif\n$!  Catch cases where user specified ithreads but\n$!  forgot -Dusethreads \n$   if f$type(useithreads) .nes. \"\"\n$   then\n$         if useithreads .or. useithreads .eqs. \"define\" then bool_dflt=\"y\"\n$   endif\n$   echo \"If this doesn't make any sense to you, just accept the default '\" + bool_dflt + \"'.\"\n$   rp = \"Build a threading Perl? [''bool_dflt'] \"\n$   GOSUB myread\n$   if ans\n$   THEN\n$     usethreads = \"define\"\n$     use_threads=\"T\"\n$     bool_dflt = \"y\"\n$     if f$type(useithreads) .nes. \"\"\n$     then\n$         if useithreads .eqs. \"undef\" then bool_dflt=\"n\"\n$     endif\n$     if f$type(use5005threads) .nes. \"\"\n$     then\n$         if use5005threads .or. use5005threads .eqs. \"define\"\n$         then\n$             echo \"5.005 threads are no longer supported\"\n$             exit 44\n$         endif\n$     endif\n$     rp = \"Use the newer interpreter-based ithreads? [''bool_dflt'] \"\n$     GOSUB myread\n$     use_ithreads=ans\n$     use_5005_threads=\"N\"\n$     ! Are they on VMS 7.1 or greater?\n$     IF \"''f$extract(1,3, f$getsyi(\"\"version\"\"))'\" .GES. \"7.1\"\n$     THEN\n$       echo \"\"\n$\techo \"Threaded Perl can be linked to use system upcalls on your system. This feature\"\n$\techo \"allows the thread scheduler to be made aware of system events (such as I/O)\"\n$\techo \"so as to prevent a single thread from blocking all the threads in a program,\"\n$\techo \"even on a single-processor machine.\"\n$\tbool_dflt = \"y\"\n$\tIF f$type(usethreadupcalls) .NES. \"\"\n$\tTHEN\n$       \tif .not. usethreadupcalls .or. usethreadupcalls .eqs. \"undef\" then bool_dflt=\"n\"\n$\tENDIF\n$       rp = \"Enable thread upcalls? [''bool_dflt'] \"\n$       gosub myread\n$       IF ans\n$       THEN\n$           thread_upcalls = \"MTU=MTU=1\"\n$\t    usethreadupcalls = \"define\"\n$     \t    ! Are they on alpha or itanium?\n$\t    IF (\"''f$extract(1,3, f$getsyi(\"\"version\"\"))'\" .GES. \"7.2\")\n$     \t    THEN\n$       \techo \"\"\n$       \techo \"Threaded Perl can be linked to use multiple kernel threads on your system.\"\n$       \techo \"This feature allows multiple user threads to make use of multiple CPUs on\"\n$\t\techo \"a multi-processor machine.\"\n$       \tbool_dflt = \"n\"\n$\t\tIF f$type(usekernelthreads) .nes. \"\"\n$\t\tTHEN\n$       \t\tif usekernelthreads .or. usekernelthreads .eqs. \"define\" then bool_dflt=\"y\"\n$\t\tENDIF\n$       \trp = \"Enable multiple kernel threads? [''bool_dflt'] \"\n$       \tgosub myread\n$       \tIF ans\n$\t\tTHEN\n$           \t    thread_kernel = \"MTK=MTK=1\"\n$\t    \t    usekernelthreads = \"define\"\n$           \tENDIF\n$           ENDIF\n$       ENDIF\n$     ENDIF\n$   ELSE\n$     usethreads = \"undef\"\n$   ENDIF\n$ ELSE\n$   usethreads = \"undef\"\n$ ENDIF\n$ IF F$TYPE(usethreadupcalls) .EQS. \"\" THEN usethreadupcalls = \"undef\"\n$ IF F$TYPE(usekernelthreads) .EQS. \"\" THEN usekernelthreads = \"undef\"\n$!\n$! Ask if they want to build with MULTIPLICITY\n$ echo \"\"\n$ echo \"Perl can be built so that multiple Perl interpreters can coexist\"\n$ echo \"within the same Perl executable.\"\n$ IF usethreads .OR. usethreads .EQS. \"define\"\n$ THEN\n$   echo \"This multiple interpreter support is required for interpreter-based threads.\"\n$   usemultiplicity=\"define\"\n$ ELSE\n$   bool_dflt = \"n\"\n$   if f$type(usemultiplicity) .nes. \"\" \n$   then\n$     if usemultiplicity .or. usemultiplicity .eqs. \"define\" then bool_dflt = \"y\"\n$   endif\n$   rp = \"Build Perl for multiplicity? [''bool_dflt'] \"\n$   GOSUB myread\n$   IF ans\n$   THEN\n$     usemultiplicity=\"define\"\n$   ELSE\n$     usemultiplicity=\"undef\"\n$   ENDIF\n$ ENDIF\n$!\n$! Ask if they want to build with 64-bit support\n$ bool_dflt = \"n\"\n$ IF F$TYPE(use64bitint) .NES. \"\"\n$ THEN\n$   IF use64bitint .OR. use64bitint .eqs. \"define\" THEN bool_dflt = \"y\"\n$ ENDIF\n$ echo \"\"\n$ echo \"You have natively 64-bit long integers.\"\n$ echo \"\"\n$ echo \"Perl can be built to take advantage of 64-bit integer types\"\n$ echo \"on some systems, To do so, Configure can be run with -Duse64bitint.\"\n$ echo \"Choosing this option will most probably introduce binary incompatibilities.\"\n$ echo \"\"\n$ echo \"If this does not make any sense to you, just accept the default '\" + bool_dflt + \"'.\"\n$ rp = \"Try to use 64-bit integers, if available? [''bool_dflt'] \"\n$ GOSUB myread\n$ use64bitint = ans\n$!\n$ bool_dflt = \"n\"\n$ IF F$TYPE(use64bitall) .NES. \"\"\n$ THEN\n$   IF use64bitall .OR. use64bitall .eqs. \"define\" THEN bool_dflt = \"y\"\n$ ENDIF\n$ echo \"\"\n$ echo \"You may also choose to try maximal 64-bitness.  It means using as much\"\n$ echo \"64-bitness as possible on the platform.  This in turn means even more\"\n$ echo \"binary incompatibilities.  On the other hand, your platform may not\"\n$ echo \"have any more 64-bitness available than what you already have chosen.\"\n$ echo \"\"\n$ echo \"If this does not make any sense to you, just accept the default '\" + bool_dflt + \"'.\"\n$ rp = \"Try to use maximal 64-bit support, if available? [''bool_dflt'] \"\n$ GOSUB myread\n$ use64bitall=ans\n$ IF use64bitall .AND. .NOT. use64bitint\n$ THEN\n$   echo \"\"\n$   echo \"Since you have chosen a maximally 64-bit build, I'm also turning on\"\n$   echo \"the use of 64-bit integers.\"\n$   use64bitint=\"Y\"\n$ ENDIF\n$!\n$ bool_dflt = use64bitall\n$ IF F$TYPE(uselargefiles) .NES. \"\" \n$ THEN\n$   IF uselargefiles .OR. uselargefiles .eqs. \"define\" THEN bool_dflt = \"y\"\n$ ENDIF\n$ echo \"\"\n$ echo \"Perl can be built to understand large files (files larger than 2 gigabytes)\"\n$ echo \"on some systems.  To do so, Configure can be run with -Duselargefiles.\"\n$ echo \"\"\n$ echo \"If this does not make any sense to you, just accept the default '\" + bool_dflt + \"'.\"\n$ rp = \"Try to understand large files, if available? [''bool_dflt'] \"\n$ GOSUB myread\n$ uselargefiles=ans\n$!\n$ bool_dflt = \"n\"\n$ IF F$TYPE(uselongdouble) .NES. \"\"\n$ THEN\n$   IF uselongdouble .OR. uselongdouble .eqs. \"define\" THEN bool_dflt = \"y\"\n$ ENDIF\n$ echo \"\"\n$ echo \"Perl can be built to take advantage of long doubles which\"\n$ echo \"(if available) may give more accuracy and range for floating point numbers.\"\n$ echo \"\"\n$ echo \"If this does not make any sense to you, just accept the default '\" + bool_dflt + \"'.\"\n$ rp = \"Try to use long doubles, if available? [''bool_dflt'] \"\n$ GOSUB myread\n$ uselongdouble = ans\n$!\n$!\n$ IF usesitecustomize .OR. usesitecustomize .eqs. \"define\" \n$ THEN \n$   usesitecustomize = \"define\"\n$ ELSE\n$   usesitecustomize = \"undef\"\n$ ENDIF\n$!\n$! Case sensitive?\n$ echo \"\"\n$ echo \"By default, perl (and pretty much everything else on VMS) uses\"\n$ echo \"case-insensitive linker symbols. Which is to say, when the\"\n$ echo \"underlying C code makes a call to a routine called Perl_foo in\"\n$ echo \"the source, the name in the object modules or shareable images\"\n$ echo \"is really PERL_FOO. There are some packages that use an\"\n$ echo \"embedded perl interpreter that instead require case-sensitive\"\n$ echo \"linker symbols.\"\n$ echo \"\"\n$ echo \"If you have no idea what this means, and do not have\"\n$ echo \"any program requiring anything, choose the default.\"\n$ bool_dflt = be_case_sensitive\n$ if f$type(usecasesensitive) .nes. \"\"\n$ then\n$   if usecasesensitive .or. usecasesensitive .eqs. \"define\" then bool_dflt = \"y\"\n$   if f$extract(0,1,f$edit(usecasesensitive,\"collapse,upcase\")).eqs.\"N\" .or. usecasesensitive .eqs. \"undef\"  then bool_dflt = \"n\"\n$ endif\n$ rp = \"Build with case-sensitive symbols? [''bool_dflt'] \"\n$ GOSUB myread\n$ be_case_sensitive = ans\n$!\n$! Shortened symbols?\n$   echo \"\"\n$   echo \"The VMS linker does not handle symbol names longer than 31 characters,\"\n$   echo \"but the compiler can shorten long symbols if requested.\"\n$   bool_dflt = shorten_long_symbols\n$   if f$type(useshortenedsymbols) .nes. \"\"\n$   then\n$       if useshortenedsymbols .or. useshortenedsymbols .eqs. \"define\" then bool_dflt = \"y\"\n$       if f$extract(0,1,f$edit(useshortenedsymbols,\"collapse,upcase\")) .eqs. \"N\" .or. useshortenedsymbols .eqs. \"undef\"  then bool_dflt = \"n\"\n$   endif\n$   rp = \"Build with long symbols shortened? [''bool_dflt'] \"\n$   GOSUB myread\n$   shorten_long_symbols = ans\n$! IEEE math?\n$ echo \"\"\n$ echo \"Perl normally uses IEEE format (T_FLOAT) floating point numbers on\"\n$ echo \"Alpha and Itanium, but if you need G_FLOAT for binary compatibility\"\n$ echo \"with an external library or existing data, you may wish to disable\"\n$ echo \"the IEEE math option.\"\n$ bool_dflt = use_ieee_math\n$ if f$type(useieee) .nes. \"\"\n$ then\n$   if useieee .or. useieee .eqs. \"define\"\n$   then\n$     bool_dflt=\"y\"\n$   else\n$     bool_dflt=\"n\"\n$   endif\n$ endif\n$ rp = \"Use IEEE math? [''bool_dflt'] \"\n$ GOSUB myread\n$ use_ieee_math = ans\n$ useieee = \"undef\"\n$ usecasesensitive = \"undef\"\n$ useshortenedsymbols = \"undef\"\n$ if (use_ieee_math) then useieee = \"define\"\n$ if (be_case_sensitive) then usecasesensitive = \"define\"\n$ if (shorten_long_symbols) then useshortenedsymbols = \"define\"\n$! Unlink all versions?\n$ echo \"\"\n$ echo \"By default, Perl's unlink() provides VMS-like behavior and only\"\n$ echo \"deletes the latest version of a file.  Enabling this option builds\"\n$ echo \"Perl so that unlink() deletes all versions of a file.\"\n$ bool_dflt = unlink_all_versions\n$ if f$type(unlink_all_versions) .nes. \"\"\n$ then\n$       if unlink_all_versions .or. unlink_all_versions .eqs. \"define\"\n$       then\n$         bool_dflt=\"y\"\n$       else\n$         bool_dflt=\"n\"\n$       endif\n$ endif\n$ rp = \"Make unlink() delete all versions of a file? [''bool_dflt'] \"\n$ GOSUB myread\n$ unlink_all_versions = ans\n$ IF unlink_all_versions\n$ THEN\n$     d_unlink_all_versions = \"define\"\n$ ELSE\n$     d_unlink_all_versions = \"undef\"\n$ ENDIF\n$!\n$! CC Flags\n$ echo \"\"\n$ echo \"Your compiler may want other flags.  For this question you should include\"\n$ echo \"/INCLUDE=(whatever) and /DEFINE=(whatever), flags and any other flags\"\n$ echo \"or qualifiers used by the compiler.\"\n$ echo \"\"\n$ echo \"To use no flags, specify the word \"\"none\"\".\"\n$ dflt = user_c_flags\n$ rp = \"Any additional cc flags? [''dflt'] \"\n$ GOSUB myread\n$ IF ans .EQS. \"none\" THEN ans = \"\"\n$ user_c_flags = \"''ans'\"\n$!\n$! Ask whether they want to use secure logical translation when tainting\n$ echo \"\"\n$ echo \"As Perl starts up, it checks several logical names, such as\"\n$ echo \"PERL5LIB and PERL_ENV_TABLES, which allow you to modify aspects\"\n$ echo \"of its behavior.  For additional security, you may limit this\"\n$ echo \"process to executive- and kernel-mode translation when tainting\"\n$ echo \"is enabled.  In this case, logical names normally skipped when\"\n$ echo \"tainting is enabled (e.g. PERL5OPTS) are translated as well.\"\n$ echo \"If you do not choose to do this, the usual order of access modes\"\n$ echo \"is used for logical name translation.\"\n$ echo \"\"\n$ echo \"This restriction does not apply to the %ENV hash or to implicit\"\n$ echo \"logical name translation during parsing of file specifications;\"\n$ echo \"these always use the normal sequence of access modes for logical\"\n$ echo \"name translation.\"\n$ bool_dflt = \"y\"\n$ if f$type(usesecurelog) .nes. \"\" \n$ then\n$   if f$extract(0,1,f$edit(usesecurelog,\"collapse,upcase\")).eqs.\"N\" .or. usesecurelog .eqs. \"undef\" then bool_dflt = \"n\"\n$ endif\n$ rp = \"Use secure logical name translation? [''bool_dflt'] \"\n$ GOSUB myread\n$ d_secintgenv  = ans\n$ usesecurelog = \"undef\"\n$ if (d_secintgenv) then usesecurelog = \"define\"\n$!\n$! Ask whether they want to default filetypes\n$ echo \"\"\n$ echo \"When you pass the name of a program to Perl on the command line,\"\n$ echo \"it generally doesn't supply any defaults unless the -S command\"\n$ echo \"line switch is specified.  In keeping with the VMS tradition of\"\n$ echo \"default file types, however, you can configure Perl to try default\"\n$ echo \"file types of nothing, .pl, and .com, in that order (e.g. typing\"\n$ echo \"\"\"$ perl foo\"\" would cause Perl to look for foo., then foo.pl, and\"\n$ echo \"finally foo.com).\"\n$ echo \"\"\n$ echo \"This is currently broken in some configurations. Only enable it if\"\n$ echo \"you know what you are doing.\"\n$ bool_dflt = \"n\"\n$ if f$type(usedefaulttypes) .nes. \"\" \n$ then\n$     if usedefaulttypes .or. usedefaulttypes .eqs. \"define\" then bool_dflt=\"y\"\n$ endif\n$ rp = \"Always use default file types? [''bool_dflt'] \"\n$ GOSUB myread\n$ d_alwdeftype = ans\n$ usedefaulttypes = \"undef\"\n$ if (d_alwdeftype) then usedefaulttypes = \"define\"\n$!\n$ dflt = archname\n$ rp = \"What is your architecture name? [''archname'] \"\n$ GOSUB myread\n$ IF ans.NES.\"\"\n$ THEN\n$   ans = F$EDIT(ans,\"COLLAPSE, UPCASE\")\n$   IF (ans.NES.archname) !.AND.knowitall\n$   THEN\n$     echo4 \"I'll go with ''archname' anyway...\"\n$   ENDIF\n$ ENDIF\n$!\n$ bool_dflt = \"n\"\n$ if f$type(useversionedarchname) .nes. \"\"\n$ then\n$   if useversionedarchname .or. useversionedarchname .eqs. \"define\" then bool_dflt = \"y\"\n$ endif\n$ rp = \"Add the Perl API version to your archname? [''bool_dflt'] \"\n$ GOSUB myread\n$ IF ans\n$ THEN\n$   useversionedarchname = \"define\"\n$   IF F$LOCATE(\"-''version'\", archname) .EQ. F$LENGTH(archname)\n$   THEN\n$     archname = \"''archname'-''version'\"\n$     echo4 \"...setting architecture name to ''archname'.\"\n$   ELSE\n$     echo4 \"...and architecture name already has -''version'.\"\n$   ENDIF\n$ ELSE\n$   useversionedarchname = \"undef\"\n$ ENDIF\n$!\n$ IF usethreads .OR. usethreads .EQS. \"define\"\n$ THEN\n$   echo4 \"Threads selected.\"\n$   IF F$LOCATE(\"-thread\", archname) .EQ. F$LENGTH(archname)\n$   THEN\n$     archname = \"''archname'-thread\"\n$     echo4 \"...setting architecture name to ''archname'.\"\n$   ELSE\n$     echo4 \"...and architecture name already has -thread.\"\n$   ENDIF\n$ ENDIF\n$!\n$ IF usemultiplicity .OR. usemultiplicity .EQS. \"define\"\n$ THEN\n$   echo4 \"Multiplicity selected.\"\n$   IF F$LOCATE(\"-multi\", archname) .EQ. F$LENGTH(archname)\n$   THEN\n$     archname = \"''archname'-multi\"\n$     echo4 \"...setting architecture name to ''archname'.\"\n$   ELSE\n$     echo4 \"...and architecture name already has -multi.\"\n$   ENDIF\n$ ENDIF\n$!\n$ IF uselongdouble .OR. uselongdouble .EQS. \"define\"\n$ THEN\n$   echo4 \"Long doubles selected.\"\n$   IF F$LOCATE(\"-ld\", archname) .EQ. F$LENGTH(archname)\n$   THEN\n$     archname = \"''archname'-ld\"\n$     echo4 \"...setting architecture name to ''archname'.\"\n$   ELSE\n$     echo4 \"...and architecture name already has -ld.\"\n$   ENDIF\n$ ENDIF\n$!\n$ bool_dflt = \"n\"\n$ vms_prefix = \"perl_root\"\n$ vms_prefixup = F$EDIT(vms_prefix,\"UPCASE\")\n$ rp = \"Will you be sharing your ''vms_prefixup' with ''otherarch'? [''bool_dflt'] \"\n$ GOSUB myread\n$ IF .NOT. ans\n$ THEN\n$   sharedperl = \"N\"\n$ ELSE\n$   sharedperl = \"Y\"\n$   IF (F$ELEMENT(0, \"-\", archname).EQS.\"VMS_AXP\")\n$   THEN\n$     macros = macros + \"\"\"AXE=1\"\",\"\n$   ENDIF\n$   IF (F$ELEMENT(0, \"-\", archname).EQS.\"VMS_IA64\")\n$   THEN\n$     macros = macros + \"\"\"IXE=1\"\",\"\n$   ENDIF\n$ ENDIF\n$!\n$!: is AFS running?                       !sfn\n$!: decide how portable to be.  Allow command line overrides. !sfn\n$!: set up shell script to do ~ expansion !sfn\n$!: expand filename                       !sfn\n$!: now set up to get a file name         !sfn\n$!\n$ IF F$TYPE(prefix) .EQS. \"\"\n$ THEN\n$   prefix = F$ENVIRONMENT(\"DEFAULT\") - \".UU]\" + \"]\"\n$   prefix = F$PARSE(prefix,,,,\"NO_CONCEAL\") - \"][\" - \"000000.\" - \".000000\" - \".;\"\n$   prefixbase = prefix - \"]\"\n$!  Add _ROOT to make install PERL_ROOT differ from build directory.\n$   prefix = prefixbase + \"_ROOT.]\"\n$ ENDIF\n$ ! more redundant scrubbing of values\n$ prefix = prefix - \"000000.\"\n$ IF F$LOCATE(\".]\",prefix) .EQ. F$LENGTH(prefix) THEN prefix = prefix - \"]\" + \".]\"\n$ src = prefix - \"_ROOT.\"\n$!: determine root of directory hierarchy where package will be installed.\n$ dflt = prefix\n$ IF .NOT.silent \n$ THEN \n$   echo \"\"\n$   echo \"By default, ''package' will be installed in ''dflt', pod\"\n$   echo \"pages under ''prefixbase'.LIB.POD], etc..., i.e. with ''dflt' as prefix for\"\n$   echo \"all installation directories.\"\n$   echo \"On ''osname' the prefix is used to DEFINE the ''vms_prefixup' prior to installation\"\n$   echo \"as well as during subsequent use of ''package' via ''packageup'_SETUP.COM.\"\n$ ENDIF\n$ rp = \"Installation prefix to use (for ''vms_prefixup')? [ ''dflt' ] \"\n$ GOSUB myread\n$ IF ans.NES.\"\"\n$ THEN \n$   prefix = ans\n$   IF F$LOCATE(\".]\",ans) .EQ. F$LENGTH(ans) THEN prefix = prefix - \"]\" + \".]\"\n$ ELSE \n$   prefix = dflt\n$ ENDIF\n$ perl_root = prefix\n$!\n$! Check here for pre-existing PERL_ROOT.\n$!  -> ask if removal desired.\n$! Check here for writability of requested PERL_ROOT if it is not the default (cwd).\n$!  -> recommend letting PERL_ROOT be PERL_SRC if requested PERL_ROOT is not writable.\n$!\n$   tmp = perl_root - \".]\" + \"]\"\n$ dflt = f$parse(tmp,,,,)\n$   IF dflt .eqs. \"\"\n$   THEN\n$       echo4 \"''tmp' does not yet exist.\"\n$!      create/directory 'tmp'\n$   ELSE\n$       echo4 \"''tmp' already exists.\"\n$   ENDIF\n$!\n$ vms_skip_install = \"true\"\n$ bool_dflt = \"y\"\n$! echo \"\"\n$ rp = \"Skip the remaining \"\"\"\"where install\"\"\"\" questions? [''bool_dflt'] \"\n$ GOSUB myread\n$ IF (.NOT.ans) THEN vms_skip_install = \"false\"\n$ IF (.NOT.vms_skip_install)\n$ THEN\n$!\n$!: set the prefixit variable, to compute a suitable default value\n$!\n$!: determine where private library files go\n$!: Usual default is /usr/local/lib/perl5.  Also allow things like \n$!: /opt/perl/lib, since /opt/perl/lib/perl5 would be redundant.\n$   IF .NOT.silent \n$   THEN\n$     TYPE SYS$INPUT:\n$     DECK\n\nThere are some auxiliary files for perl5 that need to be put into a\nprivate library directory that is accessible by everyone.\n$     EOD\n$   ENDIF\n$   IF F$TYPE(privlib) .NES. \"\"\n$   THEN dflt = privlib\n$   ELSE dflt = \"/''vms_prefix'/lib\"\n$   ENDIF\n$   rp = \"Pathname where the private library files will reside? \" \n$   rp = F$FAO(\"!AS!/!AS\",rp,\"[ ''dflt' ] \")\n$   GOSUB myread\n$   privlib = ans\n$!\n$ ENDIF !%Config-I-VMS, skip remaining \"where install\" questions\n$!\n$ IF F$TYPE(perl_symbol) .EQS. \"\" THEN perl_symbol := true\n$ IF F$TYPE(perl_verb) .EQS. \"\" THEN perl_verb = \"\"\n$ IF perl_symbol\n$ THEN bool_dflt = \"y\"\n$ ELSE bool_dflt = \"n\"\n$ ENDIF\n$ IF .NOT.silent \n$ THEN \n$   echo \"\"\n$   echo \"You may choose to write ''packageup'_SETUP.COM to assign a foreign\"\n$   echo \"symbol to invoke ''package', which is the usual method.\"\n$   echO \"If you do not do so then you would need a DCL command verb at the\"\n$   echo \"process or the system wide level.\"\n$ ENDIF\n$ rp = \"Invoke perl as a global symbol foreign command? [''bool_dflt'] \"\n$ GOSUB myread\n$ IF (.NOT.ans) THEN perl_symbol = \"false\"\n$!\n$ IF (.NOT.perl_symbol)\n$ THEN\n$   IF perl_verb .EQS. \"DCLTABLES\"\n$   THEN bool_dflt = \"n\"\n$   ELSE bool_dflt = \"y\"\n$   ENDIF\n$   IF .NOT.silent \n$   THEN \n$     echo \"\"\n$     echo \"Since you won't be using a symbol you must choose to put the ''packageup'\"\n$     echo \"verb in a per-process table or in the system wide DCLTABLES (which\"\n$     echo \"would require write privilege).\"\n$   ENDIF\n$   rp = \"Invoke perl as a per process command verb? [ ''bool_dflt' ] \"\n$   GOSUB myread\n$   IF (.NOT.ans)\n$   THEN perl_verb = \"DCLTABLES\"\n$   ELSE perl_verb = \"PROCESS\"\n$   ENDIF\n$ ENDIF ! (.NOT.perl_symbol)\n$!\n$ IF (.NOT.vms_skip_install)\n$ THEN\n$!: set the prefixup variable, to restore leading tilde escape !sfn\n$!\n$!: determine where public architecture dependent libraries go\n$   IF (.NOT.silent) \n$   THEN \n$     echo \"\"\n$     echo \"''package' contains architecture-dependent library files.  If you are\"\n$   ENDIF\n$   IF (.NOT.silent) \n$   THEN\n$     TYPE SYS$INPUT:\n$     DECK\nsharing libraries in a heterogeneous environment, you might store\nthese files in a separate location.  Otherwise, you can just include\nthem with the rest of the public library files.\n$     EOD\n$   ENDIF\n$   IF F$TYPE(archlib) .NES. \"\"\n$   THEN dflt = archlib\n$   ELSE dflt = privlib + \"/\" + archname + \"/\" + version\n$   ENDIF\n$   rp = \"Where do you want to put the public architecture-dependent libraries? \"\n$   rp = F$FAO(\"!AS!/!AS\",rp,\"[ ''dflt' ] \")\n$   GOSUB myread\n$   archlib = ans\n$!\n$ ENDIF !%Config-I-VMS, skip \"where install\" questions\n$ IF (.NOT.vms_skip_install)\n$ THEN\n$!: it so happens the Eunice I know will not run shell scripts in Unix format\n$!\n$!: see if setuid scripts can be secure           !sfn\n$!: now see if they want to do setuid emulation   !sfn\n$!\n$!: determine where site specific libraries go.\n$   IF .NOT.silent \n$   THEN\n$     TYPE SYS$INPUT:\n$     DECK\n\nThe installation process will also create a directory for\nsite-specific extensions and modules.  Some users find it convenient\nto place all local files in this directory rather than in the main\ndistribution directory.\n$     EOD\n$   ENDIF\n$   IF F$TYPE(sitelib) .NES. \"\"\n$   THEN dflt = sitelib\n$   ELSE dflt = privlib + \"/site_perl\"\n$   ENDIF\n$   rp = \"Pathname for the site-specific library files? \"\n$   rp = F$FAO(\"!AS!/!AS\",rp,\"[ ''dflt' ] \")\n$   GOSUB myread\n$   sitelib = ans\n$!\n$!: determine where site specific architecture-dependent libraries go.\n$   IF .NOT.silent \n$   THEN TYPE SYS$INPUT:\n$     DECK\n\nThe installation process will also create a directory for\narchitecture-dependent site-specific extensions and modules.\n$     EOD\n$   ENDIF\n$   IF F$TYPE(sitearch) .NES. \"\"\n$   THEN dflt = sitearch\n$   ELSE dflt = sitelib + \"/\" + archname\n$   ENDIF\n$   rp = \"Pathname for the site-specific architecture-dependent library files? \"\n$   rp = F$FAO(\"!AS!/!AS\",rp,\"[ ''dflt' ] \")\n$   GOSUB myread\n$   sitearch = ans\n$!\n$!: determine where old public architecture dependent libraries might be\n$!\n$!: determine where public executables go\n$   IF F$TYPE(bin) .NES. \"\"\n$   THEN dflt = bin\n$   ELSE dflt = \"/''vms_prefix'\"\n$   ENDIF\n$   rp = \"Pathname where the public executables will reside? \"\n$   rp = F$FAO(\"!AS!/!AS\",rp,\"[ ''dflt' ] \")\n$   GOSUB myread\n$   bin = ans\n$!\n$!: determine where add-on public executables go\n$   IF F$TYPE(sitebin) .NES. \"\"\n$   THEN dflt = sitebin\n$   ELSE dflt = \"/''vms_prefix'/bin/''archname'\"\n$   ENDIF\n$   rp = \"Pathname where the add-on public executables should be installed? \"\n$   rp = F$FAO(\"!AS!/!AS\",rp,\"[ ''dflt' ] \")\n$   GOSUB myread\n$   sitebin = ans\n$!\n$!: determine where manual pages are on this system\n$!: What suffix to use on installed man pages\n$!: see if we can have long filenames\n$!: determine where library module manual pages go\n$!: What suffix to use on installed man pages\n$!: see what memory models we can support\n$!\n$ ELSE ! skipping \"where install\" questions, we must set some symbols\n$   IF F$TYPE(archlib).EQS.\"\" THEN -\n      archlib=\"/''vms_prefix'/lib/''archname'/''version'\"\n$   IF F$TYPE(bin) .EQS. \"\" THEN -\n      bin=\"/''vms_prefix'\"\n$   IF F$TYPE(privlib) .EQS. \"\" THEN -\n      privlib =\"/''vms_prefix'/lib\"\n$   IF F$TYPE(sitearch) .EQS. \"\" THEN -\n      sitearch=\"/''vms_prefix'/lib/site_perl/''archname'\"\n$   IF F$TYPE(sitelib) .EQS. \"\" THEN -\n      sitelib =\"/''vms_prefix'/lib/site_perl\"\n$   IF F$TYPE(sitebin) .EQS. \"\" THEN -\n      sitebin=\"/''vms_prefix'/bin/''archname'\"\n$ ENDIF !%Config-I-VMS, skip \"where install\" questions\n$!\n$! These derived locations can be set whether we've opted to\n$! skip the where install questions or not.\n$!\n$ IF F$TYPE(archlibexp) .EQS. \"\" THEN -\n    archlibexp=\"/''vms_prefix'/lib/''archname'/''version'\"\n$ IF F$TYPE(binexp) .EQS. \"\" THEN -\n    binexp =\"/''vms_prefix'\"\n$ IF F$TYPE(builddir) .EQS. \"\" THEN -\n    builddir =\"/''vms_prefix'\"\n$ IF F$TYPE(installarchlib) .EQS. \"\" THEN -\n    installarchlib=\"/''vms_prefix'/lib/''archname'/''version'\"\n$ IF F$TYPE(installbin) .EQS. \"\" THEN -\n    installbin =\"/''vms_prefix'\"\n$ IF F$TYPE(installscript) .EQS. \"\" THEN -\n    installscript =\"/''vms_prefix'/utils\"\n$ IF F$TYPE(installman1dir) .EQS. \"\" THEN -\n    installman1dir =\"/''vms_prefix'/man/man1\"\n$ IF F$TYPE(installman3dir) .EQS. \"\" THEN -\n    installman3dir =\"/''vms_prefix'/man/man3\"\n$ IF F$TYPE(installprivlib) .EQS. \"\" THEN -\n    installprivlib =\"/''vms_prefix'/lib\"\n$ IF F$TYPE(installsitearch) .EQS. \"\" THEN -\n    installsitearch=\"/''vms_prefix'/lib/site_perl/''archname'\"\n$ IF F$TYPE(installsitelib) .EQS. \"\" THEN -\n    installsitelib =\"/''vms_prefix'/lib/site_perl\"\n$ IF F$TYPE(oldarchlib) .EQS. \"\" THEN -\n    oldarchlib=\"/''vms_prefix'/lib/''archname'\"\n$ IF F$TYPE(oldarchlibexp) .EQS. \"\" THEN -\n    oldarchlibexp=\"/''vms_prefix'/lib/''archname'\"\n$ IF F$TYPE(privlibexp) .EQS. \"\" THEN -\n    privlibexp =\"/''vms_prefix'/lib\"\n$ IF F$TYPE(scriptdir) .EQS. \"\" THEN -\n    scriptdir =\"/''vms_prefix'/utils\"\n$ IF F$TYPE(sitearchexp) .EQS. \"\" THEN -\n    sitearchexp =\"/''vms_prefix'/lib/site_perl/''archname'\"\n$ IF F$TYPE(sitelib_stem) .EQS. \"\" THEN -\n    sitelib_stem =\"/''vms_prefix'/lib/site_perl\"\n$ IF F$TYPE(sitelibexp) .EQS. \"\" THEN -\n    sitelibexp =\"/''vms_prefix'/lib/site_perl\"\n$!\n$! determine whether to use malloc wrapping\n$ echo \"\"\n$ bool_dflt = \"y\"\n$ IF F$TYPE(usemallocwrap) .nes. \"\"\n$ then\n$   if .NOT. usemallocwrap .or. usemallocwrap .eqs. \"undef\" then bool_dflt = \"n\"\n$ endif\n$ rp = \"Do you wish to wrap malloc calls to protect against potential overflows? [''bool_dflt'] \"\n$ GOSUB myread\n$ IF ans\n$ THEN usemallocwrap = \"define\"\n$ ELSE usemallocwrap = \"undef\"\n$ ENDIF\n$!\n$! Ask if they want to use perl's memory allocator\n$ echo \"\"\n$ echo \"Perl has a built-in memory allocator that is tuned for normal\"\n$ echo \"memory usage.  It is oftentimes better than the standard system\"\n$ echo \"memory allocator.  It also has the advantage of providing memory\"\n$ echo \"allocation statistics, if you choose to enable them.\"\n$ bool_dflt = \"n\"\n$ IF F$TYPE(usemymalloc) .nes. \"\"\n$ then\n$   if usemymalloc .or. usemymalloc .eqs. \"define\" then bool_dflt = \"y\"\n$ endif\n$ rp = \"Do you wish to attempt to use the malloc that comes with ''package'? [''bool_dflt'] \"\n$ GOSUB myread\n$ mymalloc = ans\n$ IF mymalloc\n$ THEN\n$   IF use_debugging_perl\n$   THEN\n$     echo \"\"\n$     echo \"Perl can keep statistics on memory usage if you choose to use\"\n$     echo \"them.  This is useful for debugging, but does have some\"\n$     echo \"performance overhead.\"\n$     bool_dflt = \"n\"\n$     rp = \"Do you want the debugging memory allocator? [''bool_dflt'] \"\n$     gosub myread\n$     use_debugmalloc = ans\n$   ENDIF\n$   ! Check which memory allocator we want\n$   echo \"\"\n$   echo \"There are currently three different memory allocators: the\"\n$   echo \"default (which is a pretty good general-purpose memory manager),\"\n$   echo \"the TWO_POT allocator (which is optimized to save memory for\"\n$   echo \"larger allocations), and PACK_MALLOC (which is optimized to save\"\n$   echo \"memory for smaller allocations). They're all good, but if your\"\n$   echo \"usage tends towards larger chunks use TWO_POT, otherwise use\"\n$   echo \"PACK_MALLOC.\"\n$   dflt = \"DEFAULT\"\n$   rp = \"Memory allocator (DEFAULT, TWO_POT, PACK_MALLOC) [''dflt'] \"\n$   GOSUB myread\n$   if ans.eqs.\"TWO_POT\" then use_two_pot_malloc = \"Y\"\n$   if ans.eqs.\"PACK_MALLOC\" then use_pack_malloc = \"Y\"\n$ ENDIF\n$!\n$ xs_extensions = \"\"\n$ xxx = \"\"\n$ OPEN/READ CONFIG 'manifestfound'\n$ext_loop:\n$   READ/END_OF_FILE=end_ext/ERROR=end_ext CONFIG line\n$   IF F$EXTRACT(0,4,line) .NES. \"ext/\" .AND. -\n       F$EXTRACT(0,5,line) .NES. \"dist/\".AND. -\n       F$EXTRACT(0,5,line) .NES. \"cpan/\" THEN goto ext_loop\n$   line = F$EDIT(line,\"COMPRESS\")\n$   line = F$ELEMENT(0,\" \",line)\n$   IF F$EXTRACT(0,4,line) .EQS. \"ext/\"\n$   THEN\n$     xxx = F$ELEMENT(1,\"/\",line)\n$     IF F$SEARCH(\"[-.ext]''xxx'.DIR;1\") .EQS. \"\" THEN GOTO ext_loop\n$   ENDIF\n$   IF F$EXTRACT(0,5,line) .EQS. \"dist/\"\n$   THEN\n$     xxx = F$ELEMENT(1,\"/\",line)\n$     IF F$SEARCH(\"[-.dist]''xxx'.DIR;1\") .EQS. \"\" THEN GOTO ext_loop\n$   ENDIF\n$   IF F$EXTRACT(0,5,line) .EQS. \"cpan/\"\n$   THEN\n$     xxx = F$ELEMENT(1,\"/\",line)\n$     IF F$SEARCH(\"[-.cpan]''xxx'.DIR;1\") .EQS. \"\" THEN GOTO ext_loop\n$   ENDIF\n$   IF xxx .EQS. \"DynaLoader\" THEN goto ext_loop     ! omit\n$!\n$! (extspec = xxx) =~ tr!-!/!\n$ extspec = \"\"\n$ idx = 0\n$ extension_dir_name = xxx\n$ replace_dash_with_slash:\n$   before = F$ELEMENT(idx, \"-\", xxx)\n$   IF before .EQS. \"-\" THEN goto end_replace_dash_with_slash\n$   IF extspec .NES. \"\" \n$   THEN\n$\textspec = extspec + \"/\"\n$   ENDIF\n$   extspec = extspec + before\n$   idx = idx + 1\n$   goto replace_dash_with_slash\n$\n$ end_replace_dash_with_slash:\n$!\n$ IF extspec .EQS. \"Scalar/List/Utils\" THEN extspec = \"List/Util\"\n$ IF extspec .EQS. \"PathTools\" THEN extspec = \"Cwd\"\n$!\n$ xxx = xs_extensions\n$ gosub may_already_have_extension\n$ IF $STATUS .EQ. 1\n$ THEN\n$     xxx = nonxs_ext\n$     gosub may_already_have_extension\n$ ENDIF\n$ IF $STATUS .EQ. 1\n$ THEN\n$     xxx = nonxs_ext2\n$     gosub may_already_have_extension\n$ ENDIF\n$ IF $STATUS .NE. 1 THEN goto ext_loop\n$ goto found_new_extension\n$!\n$ may_already_have_extension:\n$   idx = F$LOCATE(extspec, xxx)\n$   extlen = F$LENGTH(xxx) \n$   IF idx .EQ. extlen THEN return 1\t! didn't find it\n$!  But \"Flirble\" may just be part of \"Acme-Flirble\".  This is not\n$!  bullet-proof because we may only be looking at one chunk of the\n$!  existing extension list.\n$   IF idx .GT. 0 .AND. F$EXTRACT(idx - 1, 1, xxx) .NES. \" \"\n$   THEN\n$\txxx = F$EXTRACT(idx + F$LENGTH(extspec) + 1, extlen, xxx)\n$\tGOTO may_already_have_extension\n$   ENDIF\n$!  But \"Foo\" may just be part of \"Foo-Bar\" so check for equality.\n$   xxx = F$EXTRACT(idx, extlen - idx, xxx)\n$   IF F$ELEMENT(0, \" \", xxx) .EQS. extspec\n$   THEN \n$\tRETURN 3\n$   ELSE \n$\txxx = F$EXTRACT(F$LENGTH(extspec) + 1, extlen, xxx)\n\tGOTO may_already_have_extension\n$   ENDIF\n$!\n$ found_new_extension:\n$   IF F$SEARCH(\"[-.ext.''extension_dir_name']*.xs\") .EQS. \"\" -\n        .AND. F$SEARCH(\"[-.dist.''extension_dir_name']*.xs\") .EQS. \"\" -\n        .AND. F$SEARCH(\"[-.cpan.''extension_dir_name']*.xs\") .EQS. \"\" -\n        .AND. extension_dir_name .NES. \"VMS-Filespec\"\n$   THEN\n$!  Bit if a hack to get around the 1K buffer on older systems.\n$       IF F$LENGTH(nonxs_ext) .GT. 950\n$       THEN\n$           nonxs_ext2 = nonxs_ext2 + \" ''extspec'\"\n$       ELSE\n$           nonxs_ext = nonxs_ext + \" ''extspec'\"\n$       ENDIF\n$   ELSE\n$       xs_extensions = xs_extensions + \" ''extspec'\"\n$   ENDIF\n$   goto ext_loop\n$end_ext:\n$ close CONFIG\n$ DELETE/SYMBOL xxx\n$ DELETE/SYMBOL idx\n$ DELETE/SYMBOL extspec\n$ DELETE/SYMBOL extlen\n$ DELETE/SYMBOL extension_dir_name\n$ xs_extensions = F$EDIT(xs_extensions,\"TRIM,COMPRESS\")\n$ dflt = xs_extensions\n$ dflt = dflt - \"ByteLoader\"          ! needs to be ported\n$ dflt = dflt - \"DB_File\"             ! needs to be ported\n$ dflt = dflt - \"GDBM_File\"           ! needs porting/special library\n$ dflt = dflt - \"IPC/SysV\"            ! needs to be ported\n$ dflt = dflt - \"NDBM_File\"           ! needs porting/special library\n$ dflt = dflt - \"ODBM_File\"           ! needs porting/special library\n$ dflt = dflt - \"Sys/Syslog\"          ! needs porting/special library \"GDBM_File macro LOG_DEBUG\"\n$ IF .NOT. Has_Dec_C_Sockets\n$ THEN\n$   dflt = dflt - \"Socket\"            ! optional on VMS\n$ ENDIF\n$ dflt = dflt - \"Win32API/File\" - \"Win32\"  ! need Dave Cutler's other project\n$ dflt = dflt - \"Amiga/ARexx\" - \"Amiga/Exec\" ! this is not AmigaOS\n$ nonxs_ext = nonxs_ext - \"Win32CORE\"\n$ nonxs_ext2 = nonxs_ext2 - \"Win32CORE\"\n$ dflt = F$EDIT(dflt,\"TRIM,COMPRESS\")\n$ nonxs_ext = F$EDIT(nonxs_ext,\"TRIM,COMPRESS\")\n$ nonxs_ext2 = F$EDIT(nonxs_ext2,\"TRIM,COMPRESS\")\n$!\n$! Ask for their default list of extensions to build\n$ echo \"\"\n$ echo \"It is time to specify which modules you want to build into\"\n$ echo \"perl. Most of these are standard and should be chosen, though\"\n$ echo \"you might, for example, want to build GDBM_File instead of\"\n$ echo \"SDBM_File if you have the GDBM library built on your machine.\"\n$ echo \"\"\n$ echo \"Which modules do you want to build into perl?\"\n$ rp = \"[''dflt'] \"\n$ GOSUB myread\n$ dynamic_ext = F$EDIT(ans,\"TRIM,COMPRESS\")\n$!\n$! %Config-I-VMS, determine build/make utility here (make gmake mmk mms)\n$ echo \"\"\n$ echo \"Checking your \"\"make\"\" utilities...\"\n$! If the 'build' that you use is not here add it and it's test\n$! switch to the _END_ of these strings (and increment max_build)\n$! (e.g. builders = builders + \"/FOOMAKE\" \n$!       probers  = probers + \" -fooVersionSwitch\"\n$! ) & please let me know about it.\n$ builders = \"IMAKE/GNUMAKE/MGMAKE/GMAKE/MAKE/MMS/MMK\"\n$ probers  = \"-f Makefile. -v!-f Makefile. -v!-f Makefile. -v!-f Makefile. -v!-f Makefile. -v!/IDENT!/IDENT\"\n$ max_build = 7\n$!\n$ orig_dflt = f$edit(builder,\"UPCASE\")\n$ if orig_dflt .eqs. \"\" then orig_dflt = \"MMK\"\n$ default_set = \"\"\n$ ok_builders = \"\"\n$ OPEN/WRITE/ERROR=Open_error CONFIG Makefile.\n$ WRITE CONFIG \"dont_make_anything_yet:\"\n$ WRITE CONFIG F$FAO(\"!_\")\n$ CLOSE CONFIG\n$ n = 0\n$ messages = F$ENVIRONMENT(\"MESSAGE\")\n$Build_probe:\n$ build = F$ELEMENT(n,\"/\",builders)\n$ probe  = F$ELEMENT(n,\"!\",probers)\n$ echo \"Testing whether you have ''build' on your system...\"\n$!\n$! Noted with GNU Make version 3.60  that the $status and $severity\n$! with the 'probe' Makefile appear to be: $STATUS == \"%X1000000C\"\n$! $SEVERITY == \"4\".\n$!\n$ SET NOON\n$ ON CONTROL_Y THEN GOTO Reenable_messages_build\n$ SET MESSAGE/NOFAC/NOSEV/NOIDENT/NOTEXT\n$ 'build' 'probe'\n$ IF ($SEVERITY .EQ. 1) ! not adequate?\n$ THEN \n$   echo \"OK.\"\n$   IF (build .EQS. orig_dflt) \n$   THEN \n$     default_set = \"TRUE\"\n$     dflt = build\n$   ENDIF\n$   ok_builders = ok_builders + \" \" + build\n$   IF (.NOT. default_set) THEN dflt = build\n$ ELSE \n$   echo \"Nope.\"\n$ ENDIF\n$Reenable_messages_build:\n$ SET MESSAGE 'messages'\n$ SET ON\n$ on control_y then goto clean_up\n$ n = n + 1\n$ IF (n .LT. max_build) THEN GOTO Build_probe\n$!\n$ echo \"\"\n$ IF (ok_builders .NES. \"\") \n$ THEN\n$   echo \"Here is the list of builders you can apparently use:\"\n$   echo \"(\",ok_builders,\" )\"\n$   rp = \"Which \"\"\"\"make\"\"\"\" utility do you wish to use? [''dflt'] \"\n$   GOSUB myread\n$   ans = F$EDIT(ans,\"TRIM, COMPRESS\")\n$   ans = F$EXTRACT(0,F$LOCATE(\" \",ans),ans) !throw out \"-f Makefile.\" here\n$   IF (ans .EQS. \"\") \n$   THEN build = dflt\n$   ELSE build = ans\n$   ENDIF\n$ ELSE\n$   TYPE SYS$INPUT:\n$   DECK\n\n%Config-E-VMS, ERROR:\n Well this looks pretty serious. Perl5 cannot be compiled without a \"make\"\n utility of some sort and after checking my \"builders\" list I cannot find\n the symbol or command you use on your system to compile programs.\n\n$   EOD\n$   READ SYS$COMMAND/PROMPT=\"Which \"\"MMS\"\" do you use? \" ans\n$   ans = F$EDIT(ans,\"TRIM, COMPRESS\")\n$   ans = F$EXTRACT(0,F$LOCATE(\" \",ans),ans) !throw out \"-f Makefile.\" here\n$   IF (ans .EQS. \"\") \n$   THEN build = dflt\n$     echo \"I do not know where \"\"make\"\" is, and my life depends on it.\"\n$     echo \"Go find a make program or fix your DCL$PATH setting!\"\n$     echo \"ABORTING...\"\n$     SET DEFAULT 'vms_default_directory_name' !be kind rewind\n$     STOP\n$     EXIT 2 !$STATUS = \"%X00000002\" (error)\n$   ELSE \n$     build = ans\n$   ENDIF\n$ ENDIF\n$!\n$ DELETE/NOLOG/NOCONFIRM Makefile.;\n$ GOTO Beyond_open\n$Open_error:\n$ TYPE SYS$INPUT:\n$ DECK\n\n There seems to be trouble. I just tried to create a file in\n$ EOD\n$ echo4 'F$ENVIRONMENT(\"DEFAULT\")'\n$ TYPE SYS$INPUT:\n$ DECK\n but was unsuccessful. I am stopping now. Please check that directories'\n PROTECTION bits. I will leave you in the directory where you started\n Configure.com\n$ EOD\n$ echo4 \"ABORTING...\"\n$ GOTO Clean_up\n$ STOP\n$ EXIT\n$!\n$Beyond_open:\n$! echo \" Very well I will proceed with \"\"''build'\"\"\"\n$ make = F$EDIT(build,\"UPCASE\")\n$!\n$!: locate the preferred pager for this system\n$!pagers = \"most|more|less|type/page\"\n$ IF osvers .GES. \"V6.1\"\n$ THEN\n$   dflt = \"type/page=save=10\"\n$ ELSE\n$   dflt = \"type/page\"\n$ ENDIF\n$! assume that the presence of a most symbol indicates the presence\n$! of the pager.\n$ IF F$TYPE(most) .EQS. \"STRING\" THEN dflt = \"most\"\n$ IF F$TYPE(pager) .EQS. \"STRING\" THEN dflt = pager\n$ rp=\"What pager is used on your system? [''dflt'] \"\n$ GOSUB myread\n$ pager = ans\n$!\n$ bool_dflt = \"y\"\n$ IF F$TYPE(default_inc_excludes_dot) .NES. \"\"\n$ THEN\n$   IF .not. default_inc_excludes_dot .or. default_inc_excludes_dot .eqs. \"undef\" THEN bool_dflt = \"n\"\n$ ENDIF\n$ echo \"\"\n$ echo \"Historically Perl has provided a final fallback of the current working\"\n$ echo \"directory '.' when searching for a library. This, however, can lead to\"\n$ echo \"problems when a Perl program which loads optional modules is called from\"\n$ echo \"a shared directory. This can lead to executing unexpected code.\"\n$ echo \"\"\n$ rp = \"Exclude '.' from @INC by default? [''bool_dflt'] \"\n$ GOSUB myread\n$ default_inc_excludes_dot = ans\n$ IF default_inc_excludes_dot\n$ THEN\n$   default_inc_excludes_dot = \"define\"\n$ ELSE\n$   default_inc_excludes_dot = \"undef\"\n$ ENDIF\n$!\n$! update makefile here\n$! echo4 \"Updating makefile...\"\n$!\n$ IF (make .EQS. \"MMS\").OR.(make .EQS. \"MMK\")\n$ THEN \n$   makefile    = \"\" \t\t   !wrt MANIFEST dir\n$   UUmakefile  = \"[-]DESCRIP.MMS\" !wrt CWD dir\n$   DEFmakefile = \"DESCRIP.MMS\"    !wrt DEF dir (?)\n$   Makefile_SH = \"descrip_mms.template\"\n$ ELSE\n$   makefile    = \" -f Makefile.\"  !wrt MANIFEST dir\n$   UUmakefile  = \"[-]Makefile.\"   !wrt CWD dir\n$   DEFmakefile = \"Makefile.\"      !wrt DEF dir (?)\n$   Makefile_SH = \"Makefile.in\"\n$ ENDIF\n$!\n$ IF macros .NES. \"\" \n$ THEN\n$   tmp = F$LENGTH(macros)\n$   macros = F$EXTRACT(0,(tmp-1),macros) !miss trailing comma\n$   macros = \"/macro=(\" + macros  + \")\"\n$ ENDIF\n$! Build up the extra C flags\n$!\n$ IF use_ieee_math\n$ THEN\n$   extra_flags = \"''extra_flags'\" + \"/float=ieee/ieee=denorm\"\n$ ELSE\n$   IF (F$ELEMENT(0, \"-\", archname).EQS.\"VMS_IA64\")\n$   THEN\n$     extra_flags = \"''extra_flags'\" + \"/float=g_float\"\n$   ENDIF\n$ ENDIF\n$ names_flags = \"\"\n$ IF be_case_sensitive\n$ THEN\n$   names_flags = \"AS_IS\"\n$ ENDIF\n$ IF shorten_long_symbols\n$ THEN\n$   IF be_case_sensitive\n$   THEN\n$     names_flags = \"''names_flags',SHORTENED\"\n$   ELSE\n$     names_flags = \"SHORTENED\"\n$   ENDIF\n$ ENDIF\n$ IF F$LENGTH(names_flags) .ne. 0\n$ THEN\n$   extra_flags = \"''extra_flags'\" + \"/NAMES=(''names_flags')\"\n$ ENDIF\n$ DELETE/SYMBOLS names_flags\n$ extra_flags = \"''extra_flags'\" + \"''user_c_flags'\"\n$!\n$ min_pgflquota = \"100000\"\n$ pgflquota = F$STRING(F$GETJPI(\"\",\"PGFLQUOTA\"))\n$ IF pgflquota .LES. min_pgflquota\n$ THEN\n$   echo4 \"Your PGFLQUOTA of ''pgflquota' appears too small to build ''package'.\"\n$   READ SYS$COMMAND/PROMPT=\"Continue? [n] \" ans\n$   IF ans\n$   THEN\n$     echo4 \"Continuing...\"\n$   ELSE\n$     echo4 \"ABORTING...\"\n$     GOTO Clean_up\n$   ENDIF\n$ ENDIF\n$!\n$ echo \"\"\n$ echo4 \"Checking the C run-time library.\"\n$!\n$! Former SUBCONFIGURE.COM\n$!\n$!  - build a config.sh for VMS Perl.\n$!  - use built config.sh to take config_h.SH -> config.h\n$!  - also take vms/descrip_mms.template -> descrip.mms (VMS Makefile)\n$!              vms/Makefile.in -> Makefile. (VMS GNU Makefile?)\n$!              vms/Makefile.SH -> Makefile. (VMS GNU Makefile?)\n$!\n$! Note for folks from other platforms changing things in here:\n$!\n$!   Fancy changes (based on compiler capabilities or VMS version or\n$!   whatever) are tricky, so go ahead and punt on those.\n$!\n$!   Simple changes, though (say, always setting something to 1, or undef,\n$!   or something like that) are straightforward.  Adding a new constant \n$!   item for the ultimately created config.sh requires at least one \n$!   (possibly more) line(s) to this file.\n$!\n$!   Add a line in the format:\n$!\n$!     $ WC \"foo='undef'\"\n$!\n$!   somewhere between the line tagged '##BEGIN WRITE NEW CONSTANTS HERE##'\n$!   and the one tagged '##END WRITE NEW CONSTANTS HERE##' (note the order\n$!   is sorted ASCII and corresponds to the output of config.sh in the \n$!   Bourne shell version of Configure).\n$!   Be very careful with quoting, as it can be tricky.\n$!   For example if instead of a constant string like 'undef' or 'define' \n$!   you wanted to add something to VMS's config.sh that looks like:\n$!\n$!     blank_string=''\n$!\n$!   then add a line that looks like this before the \n$!   '##END WRITE NEW CONSTANTS HERE##' tagged line:\n$!\n$!     $ WC \"blank_string='\" + \"'\"\n$!\n$!   (+ is the string concatenator and \"''var'\" has the effect \n$!    of \"${var}\" in perl or sh, but \"'const'\" is not interpolated).\n$!\n$!   Note that unitialized variables, such as a line like:\n$!\n$!     $ WC \"new_var='\" + new_var + \"'\"\n$!\n$!   should be avoided unless new_var has a value assigned prior \n$!   to that line (think of perl's -w warnings).\n$!\n$!     %DCL-W-UNDSYM, undefined symbol - check validity and spelling\n$!     \\NEW_VAR\\\n$!\n$!\n$ vms_ver = F$EXTRACT(1,3, osvers)\n$ IF F$LENGTH(Mcc) .EQ. 0 THEN Mcc := \"cc\"\n$ MCC = f$edit(mcc, \"UPCASE\")\n$ C_Compiler_Replace := \"CC=CC=''Mcc'''ccflags'\"\n$ IF ccname .EQS. \"DEC\"\n$ THEN\n$   Checkcc := \"''Mcc'/prefix=all\"\n$ ELSE\n$   IF ccname .EQS. \"CXX\"\n$   THEN\n$     Checkcc := cxx\n$   ELSE\n$     Checkcc := \"''Mcc'\"\n$   ENDIF\n$ ENDIF\n$ ccflags = ccflags + extra_flags\n$ IF be_case_sensitive\n$ THEN\n$   d_vms_be_case_sensitive = \"define\"\n$ ELSE\n$   d_vms_be_case_sensitive = \"undef\"\n$ ENDIF\n$ IF shorten_long_symbols\n$ THEN\n$   d_vms_shorten_long_symbols = \"define\"\n$ ELSE\n$   d_vms_shorten_long_symbols = \"undef\"\n$ ENDIF\n$! Some constant defaults.\n$ hwname = f$getsyi(\"HW_NAME\")\n$ myname = myhostname\n$ IF myname .EQS. \"\" THEN myname = F$TRNLNM(\"SYS$NODE\")\n$!\n$ ccdlflags=\"\"\n$ cccdlflags=\"\"\n$!\n$! FIXME -- This section does not really handle all the different permutations \n$! of 64-bitness, and it does not provide for the /POINTER_SIZE=64 compiler\n$! option that would be necessary to support the \"explicit 64-bit interfaces\"\n$! promised by -Dusemorebits.\n$!\n$ usemorebits = \"undef\"\n$ IF use64bitint .OR. use64bitint .EQS. \"define\"\n$ THEN\n$   use64bitint = \"define\"\n$   ivdformat=\"\"\"Ld\"\"\"\n$   uvuformat=\"\"\"Lu\"\"\"\n$   uvoformat=\"\"\"Lo\"\"\"\n$   uvxformat=\"\"\"Lx\"\"\"\n$   uvXUformat=\"\"\"LX\"\"\"\n$ ELSE\n$   use64bitint = \"undef\"\n$   ivdformat=\"\"\"ld\"\"\"\n$   uvuformat=\"\"\"lu\"\"\"\n$   uvoformat=\"\"\"lo\"\"\"\n$   uvxformat=\"\"\"lx\"\"\"\n$   uvXUformat=\"\"\"lX\"\"\"\n$ ENDIF\n$ IF uselongdouble .OR. uselongdouble .EQS. \"define\"\n$ THEN\n$   uselongdouble = \"define\"\n$   alignbytes=\"16\"\n$   nveformat=\"\"\"Le\"\"\"\n$   nvEUformat=\"\"\"LE\"\"\"\n$   nvfformat=\"\"\"Lf\"\"\"\n$   nvFUformat=\"\"\"LF\"\"\"\n$   nvgformat=\"\"\"Lg\"\"\"\n$   nvGUformat=\"\"\"LG\"\"\"\n$ ELSE\n$   uselongdouble = \"undef\"\n$   nveformat=\"\"\"e\"\"\"\n$   nvEUformat=\"\"\"E\"\"\"\n$   nvfformat=\"\"\"f\"\"\"\n$   nvFUformat=\"\"\"F\"\"\"\n$   nvgformat=\"\"\"g\"\"\"\n$   nvGUformat=\"\"\"G\"\"\"\n$ ENDIF\n$ IF use64bitall .OR. use64bitall .EQS. \"define\"\n$ THEN\n$   use64bitall = \"define\"\n$ ELSE\n$   use64bitall = \"undef\"\n$ ENDIF\n$ IF uselargefiles .OR. uselargefiles .EQS. \"define\"\n$ THEN\n$   uselargefiles = \"define\"\n$ ELSE\n$   uselargefiles = \"undef\"\n$ ENDIF\n$!\n$ usemymalloc = \"undef\"\n$ if mymalloc then usemymalloc = \"define\"\n$!\n$ perl_cc=Mcc\n$!\n$ IF (sharedperl .AND. F$ELEMENT(0, \"-\", archname) .EQS. \"VMS_AXP\")\n$ THEN\n$   obj_ext=\".abj\"\n$   so=\"axe\"\n$   dlext=\"axe\"\n$   exe_ext=\".axe\"\n$   lib_ext=\".alb\"\n$ ELSE\n$   IF (sharedperl .AND. F$ELEMENT(0, \"-\", archname) .EQS. \"VMS_IA64\")\n$   THEN\n$     obj_ext=\".ibj\"\n$     so=\"ixe\"\n$     dlext=\"ixe\"\n$     exe_ext=\".ixe\"\n$     lib_ext=\".ilb\"\n$   ELSE\n$     obj_ext=\".obj\"\n$     so=\"exe\"\n$     dlext=\"exe\"\n$     exe_ext=\".exe\"\n$     lib_ext=\".olb\"\n$   ENDIF\n$ ENDIF\n$ dlobj=\"dl_vms''obj_ext'\"\n$!\n$ cppstdin=\"''perl_cc'/noobj/comments=as_is/preprocess=sys$output sys$input\"\n$ cppminus=\" \"\n$ cpprun=\"''perl_cc'/noobj/comments=as_is/preprocess=sys$output sys$input\"\n$ cpplast=\" \"\n$!\n$ timetype=\"time_t\"\n$ signal_t=\"void\"\n$ stdchar=\"char\"\n$!\n$ IF mymalloc\n$ THEN d_mymalloc=\"define\"\n$ ELSE d_mymalloc=\"undef\"\n$ ENDIF\n$!\n$ usedl=\"define\"\n$ startperl=\"\"\"$ perl 'f$env(\\\"\"procedure\\\"\")' \\\"\"'\"+\"'p1'\\\"\" \\\"\"'\"+\"'p2'\\\"\" \\\"\"'\"+\"'p3'\\\"\" \\\"\"'\"+\"'p4'\\\"\" \\\"\"'\"+\"'p5'\\\"\" \\\"\"'\"+\"'p6'\\\"\" \\\"\"'\"+\"'p7'\\\"\" \\\"\"'\"+\"'p8'\\\"\"!\\n\"\n$ startperl=startperl + \"$ exit++ + ++$status!=0 and $exit=$status=undef; while($#ARGV != -1 and $ARGV[$#ARGV] eq '\"+\"'){pop @ARGV;}\"\"\"\n$!\n$ libs=\" \"\n$ libc=\"(DECCRTL)\"\n$!\n$! perllibs should be libs with all non-core libs (such as gdbm) removed.\n$!\n$ perllibs=libs\n$!\n$!\n$ d_PRId64 = \"define\"\n$ d_PRIi64 = \"define\"\n$ d_PRIu64 = \"define\"\n$ d_PRIo64 = \"define\"\n$ d_PRIx64 = \"define\"\n$ d_PRIXU64 = \"define\"\n$ sPRId64 = \"\"\"Ld\"\"\"\n$ sPRIXU64 = \"\"\"LX\"\"\"\n$ sPRIi64 = \"\"\"Li\"\"\"\n$ sPRIo64 = \"\"\"Lo\"\"\"\n$ sPRIu64 = \"\"\"Lu\"\"\"\n$ sPRIx64 = \"\"\"Lx\"\"\"\n$ d_quad = \"define\"\n$ quadtype = \"long long\"\n$ uquadtype = \"unsigned long long\"\n$ quadkind  = \"3\"\n$!\n$ d_frexpl = \"define\"\n$ d_ldexpl = \"define\"\n$ d_modfl = \"define\"\n$ d_modflproto = \"define\"\n$!\n$ d_double_has_inf = \"undef\"\n$ d_double_has_nan = \"undef\"\n$ d_double_has_negative_zero = \"undef\"\n$ d_double_has_subnormals = \"undef\"\n$ d_double_style_cray = \"undef\"\n$ d_double_style_ibm = \"undef\"\n$ d_double_style_ieee = \"undef\"\n$ d_double_style_vax = \"undef\"\n$ d_long_double_style_ieee = \"undef\"\n$ d_long_double_style_ieee_extended = \"undef\"\n$ d_long_double_style_ieee_std = \"undef\"\n$ d_long_double_style_vax = \"undef\"\n$ IF useieee .OR. useieee .EQS. \"define\"\n$ THEN\n$   d_double_has_inf = \"define\"\n$   d_double_has_nan = \"define\"\n$   d_double_has_negative_zero = \"define\"\n$   d_double_has_subnormals = \"define\"\n$   d_double_style_ieee = \"define\"\n$   IF uselongdouble .OR. uselongdouble .EQS. \"define\"\n$   THEN\n$       d_long_double_style_ieee = \"define\"\n$! TODO: will the Intel port have ieee_extended for long doubles?\n$       d_long_double_style_ieee_std = \"define\"\n$   ENDIF\n$   d_acosh = \"define\"\n$   d_asinh = \"define\"\n$   d_atanh = \"define\"\n$   d_cbrt = \"define\"\n$   d_copysign = \"define\"\n$   d_erf = \"define\"\n$   d_erfc = \"define\"\n$   d_exp2 = \"define\"\n$   d_expm1 = \"define\"\n$   d_fdim = \"define\"\n$   d_fma = \"define\"\n$   d_fmax = \"define\"\n$   d_fmin = \"define\"\n$   d_fp_classify = \"define\"\n$   d_hypot = \"define\"\n$   d_ilogb = \"define\"\n$   d_isnan = \"define\"\n$   d_isnanl = \"define\"\n$   d_isnormal = \"define\"\n$   d_j0 = \"define\"\n$   d_lgamma = \"define\"\n$   d_log1p = \"define\"\n$   d_log2 = \"define\"\n$   d_logb = \"define\"\n$   d_lrint = \"define\"\n$   d_lrintl = \"define\"\n$   d_lround = \"define\"\n$   d_lroundl = \"define\"\n$   d_nearbyint = \"define\"\n$   d_nextafter = \"define\"\n$   d_nexttoward = \"define\"\n$   d_remainder = \"define\"\n$   d_remquo = \"define\"\n$   d_rint = \"define\"\n$   d_tgamma = \"define\"\n$   d_trunc = \"define\"\n$   d_truncl = \"define\"\n$ ELSE\n$   d_double_style_vax = \"define\"\n$   IF uselongdouble .OR. uselongdouble .EQS. \"define\"\n$   THEN\n$\td_long_double_style_vax = \"undef\" ! VAX format H unlikely\n$   ENDIF\n$   d_acosh = \"undef\"\n$   d_acosh = \"undef\"\n$   d_asinh = \"undef\"\n$   d_atanh = \"undef\"\n$   d_cbrt = \"undef\"\n$   d_copysign = \"undef\"\n$   d_erf = \"undef\"\n$   d_erfc = \"undef\"\n$   d_exp2 = \"undef\"\n$   d_expm1 = \"undef\"\n$   d_fdim = \"undef\"\n$   d_fma = \"undef\"\n$   d_fmax = \"undef\"\n$   d_fmin = \"undef\"\n$   d_fp_classify = \"undef\"\n$   d_hypot = \"undef\"\n$   d_ilogb = \"undef\"\n$   d_isnan = \"undef\"\n$   d_isnanl = \"undef\"\n$   d_isnormal = \"undef\"\n$   d_j0 = \"undef\"\n$   d_lgamma = \"undef\"\n$   d_log1p = \"undef\"\n$   d_log2 = \"undef\"\n$   d_logb = \"undef\"\n$   d_lrint = \"undef\"\n$   d_lrintl = \"undef\"\n$   d_lround = \"undef\"\n$   d_lroundl = \"undef\"\n$   d_nearbyint = \"undef\"\n$   d_nextafter = \"undef\"\n$   d_nexttoward = \"undef\"\n$   d_remainder = \"undef\"\n$   d_remquo = \"undef\"\n$   d_rint = \"undef\"\n$   d_tgamma = \"undef\"\n$   d_trunc = \"undef\"\n$   d_truncl = \"undef\"\n$ ENDIF\n$!\n$! Now some that we build up\n$!\n$ use5005threads = \"undef\"\n$ d_old_pthread_create_joinable = \"undef\"\n$ old_pthread_create_joinable = \" \"\n$ IF use_threads\n$ THEN\n$    useithreads = \"define\"\n$ ELSE\n$   useithreads = \"undef\"\n$ ENDIF\n$!\n$! Some that we need to invoke the compiler for\n$!\n$!\n$! handy construction aliases/symbols\n$!\n$ OS := \"open/write CONFIG []try.c\"\n$ WS := \"write CONFIG\"\n$ CS := \"close CONFIG\"\n$ DS := \"delete/nolog/noconfirm []try.*;*\"\n$ Needs_Opt := N\n$ good_compile = %X10B90001\n$ IF ccname .EQS. \"GCC\"\n$ THEN\n$   open/write OPTCHAN []try.opt\n$   write OPTCHAN \"Gnu_CC:[000000]gcclib.olb/library\"\n$   write OPTCHAN \"Sys$Share:VAXCRTL/Share\"\n$   Close OPTCHAN\n$   Needs_Opt := Y\n$   good_compile = %X10000001\n$ ENDIF\n$ IF ccname .EQS. \"CXX\"\n$ THEN\n$   good_compile = %X15F60001\n$ ENDIF\n$ good_link = %X10000001\n$ tmp = \"\" ! null string default\n$!\n$ GOTO beyond_compile_ok\n$!\n$! Check for type sizes \n$!\n$type_size_check: \n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"printf(\"\"%d\\n\"\", sizeof(''tmp'));\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile\n$ RETURN\n$!\n$!: locate header file\n$findhdr:\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <''tmp'>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"printf(\"\"define\\n\"\");\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB link_ok\n$ RETURN\n$!\n$!: define an alternate in-header-list? function\n$inhdr:\n$!\n$ GOSUB findhdr\n$ IF compile_status .EQ. good_compile .AND. link_status .EQ. good_link\n$ THEN\n$   echo4 \"<''tmp'> found.\"\n$   tmp = \"define\"\n$ ELSE\n$   echo4 \"<''tmp'> NOT found.\"\n$   tmp = \"undef\"\n$ ENDIF\n$ RETURN\n$!\n$!: define an is-in-libc? function\n$inlibc: \n$ GOSUB link_ok\n$ IF compile_status .EQ. good_compile .AND. link_status .EQ. good_link\n$ THEN\n$   echo4 \"''tmp'() found.\"\n$   tmp = \"define\"\n$ ELSE\n$   echo4 \"''tmp'() NOT found.\"\n$   tmp = \"undef\"\n$ ENDIF\n$ RETURN\n$!\n$!: define a shorthand compile call\n$compile:\n$ GOSUB link_ok\n$just_mcr_it:\n$ IF compile_status .EQ. good_compile .AND. link_status .EQ. good_link\n$ THEN\n$   OPEN/WRITE CONFIG []try.out\n$   DEFINE/USER_MODE SYS$ERROR CONFIG\n$   DEFINE/USER_MODE  SYS$OUTPUT CONFIG\n$   MCR []try.exe\n$   CLOSE CONFIG\n$   OPEN/READ CONFIG []try.out\n$   READ CONFIG tmp\n$   CLOSE CONFIG\n$   DELETE/NOLOG/NOCONFIRM []try.out;\n$   DELETE/NOLOG/NOCONFIRM []try.exe;\n$ ELSE\n$   tmp = \"\" ! null string default\n$ ENDIF\n$ RETURN\n$!\n$link_ok:\n$ GOSUB compile_ok\n$ DEFINE/USER_MODE SYS$ERROR _NLA0:\n$ DEFINE/USER_MODE SYS$OUTPUT _NLA0:\n$ SET NOON\n$ IF Needs_Opt\n$ THEN\n$   'ld' try.obj,try.opt/opt\n$   link_status = $status\n$ ELSE\n$   'ld' try.obj\n$   link_status = $status\n$ ENDIF\n$ SET ON\n$ IF F$SEARCH(\"try.obj\") .NES. \"\" THEN DELETE/NOLOG/NOCONFIRM try.obj;\n$ RETURN\n$!\n$!: define a shorthand compile call for compilations that should be ok.\n$compile_ok:\n$ DEFINE/USER_MODE SYS$ERROR _NLA0:\n$ DEFINE/USER_MODE SYS$OUTPUT _NLA0:\n$ SET NOON\n$ 'Checkcc' try.c\n$ compile_status = $status\n$ SET ON\n$ DELETE/NOLOG/NOCONFIRM try.c;\n$ RETURN\n$!\n$beyond_compile_ok:\n$!\n$! Check for __STDC__\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"#ifdef __STDC__\"\n$ WS \"printf(\"\"42\\n\"\");\"\n$ WS \"#elif defined (__STD_ANSI)\" ! for CXX\n$ WS \"printf(\"\"42\\n\"\");\"\n$ WS \"#else\"\n$ WS \"printf(\"\"1\\n\"\");\"\n$ WS \"#endif\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile\n$ cpp_stuff=tmp\n$ IF F$INTEGER(tmp) .eq. 42\n$ THEN\n$   echo4 \"Oh!  Smells like ANSI's been here.\"\n$   echo \"We can catify or stringify, separately or together!\"\n$ ENDIF\n$!\n$! Check for double size\n$!\n$ echo4 \"Checking to see how big your double precision numbers are...\"\n$ tmp=\"double\"\n$ GOSUB type_size_check\n$ doublesize = tmp\n$ echo \"Your double is ''doublesize' bytes long.\"\n$!\n$! Check for long double size\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#pragma message disable ALL\"  ! VAX compilers may have distracting informationals\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"printf(\"\"%d\\n\"\", sizeof(long double));\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ echo4 \"Checking to see if you have long double...\"\n$ GOSUB link_ok\n$ IF link_status .NE. good_link\n$ THEN\n$   longdblsize=\"0\"\n$   longdblkind=\"0\"\n$   longdblinfbytes=\"undef\"\n$   longdblnanbytes=\"undef\"\n$   longdblmantbits=\"undef\"\n$   d_longdbl=\"undef\"\n$   echo \"You do not have long double.\"\n$ ELSE\n$   echo \"You have long double.\"\n$   echo4 \"Checking to see how big your long doubles are...\"\n$   GOSUB just_mcr_it\n$   longdblsize = tmp\n$   longdblkind = \"1\"\n$   longdblinfbytes=\"0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7f\"\n$   longdblnanbytes=\"0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff\"\n$   longdblmantbits=\"112\"\n$   d_longdbl = \"define\"\n$   echo \"Your long doubles are ''longdblsize' bytes long.\"\n$ ENDIF\n$!\n$ IF d_longdbl .OR. d_longdbl .EQS. \"define\"\n$ THEN\n$   d_PRIEUldbl = \"define\"\n$   d_PRIFUldbl = \"define\"\n$   d_PRIGUldbl = \"define\"\n$   d_PRIeldbl = \"define\"\n$   d_PRIfldbl = \"define\"\n$   d_PRIgldbl = \"define\"\n$   sPRIEUldbl = \"\"\"LE\"\"\"\n$   sPRIFUldbl = \"\"\"LF\"\"\"\n$   sPRIGUldbl = \"\"\"LG\"\"\"\n$   sPRIeldbl = \"\"\"Le\"\"\"\n$   sPRIfldbl = \"\"\"Lf\"\"\"\n$   sPRIgldbl = \"\"\"Lg\"\"\"\n$ ELSE\n$   d_PRIEUldbl = \"undef\"\n$   d_PRIFUldbl = \"undef\"\n$   d_PRIGUldbl = \"undef\"\n$   d_PRIeldbl = \"undef\"\n$   d_PRIfldbl = \"undef\"\n$   d_PRIgldbl = \"undef\"\n$   sPRIEUldbl = \"\"\n$   sPRIFUldbl = \"\"\n$   sPRIGUldbl = \"\"\n$   sPRIeldbl = \"\"\n$   sPRIfldbl = \"\"\n$   sPRIgldbl = \"\"\n$ ENDIF\n$ d_SCNfldbl = d_PRIfldbl\n$ sSCNfldbl = sPRIfldbl ! expect consistency\n$!\n$!: check for long long\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"printf(\"\"%d\\n\"\", sizeof(long long));\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ echo4 \"Checking to see if you have long long...\"\n$ GOSUB link_ok\n$ IF link_status .NE. good_link\n$ THEN\n$   longlongsize=\"0\"\n$   d_longlong=\"undef\"\n$   echo \"You do not have long long.\"\n$ ELSE\n$   echo \"You have long long.\"\n$   echo4 \"Checking to see how big your long longs are...\"\n$   GOSUB just_mcr_it\n$   longlongsize = tmp\n$   d_longlong = \"define\"\n$   echo \"Your long longs are ''longlongsize' bytes long.\"\n$ ENDIF\n$!\n$! Check the prototype for getgid\n$!\n$ echo \"Looking for the type for group ids returned by getgid().\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <types.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"gid_t foo;\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile_ok\n$ IF compile_status .NE. good_compile\n$ THEN\n$!   Okay, gid_t failed. Must be unsigned int\n$   gidtype = \"unsigned int\"\n$   echo4 \"assuming \"\"''gidtype'\"\".\"\n$ ELSE\n$   gidtype = \"gid_t\"\n$   echo4 \"gid_t found.\"\n$ ENDIF\n$!\n$! Check to see if we've got dev_t\n$!\n$ echo \"Looking for the type for dev.\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <types.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"dev_t foo;\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile_ok\n$ IF compile_status .NE. good_compile\n$ THEN\n$!   Okay, dev_t failed. Must be unsigned int\n$   devtype = \"unsigned int\"\n$   echo4 \"assuming \"\"''devtype'\"\".\"\n$ ELSE\n$   devtype = \"dev_t\"\n$   echo4 \"dev_t found.\"\n$ ENDIF\n$!\n$! Check to see if we've got unistd.h (which we ought to, but you never know)\n$!\n$ i_netdb = \"undef\"\n$ tmp = \"unistd.h\"\n$ GOSUB inhdr\n$ i_unistd = tmp\n$!\n$! Check to see if we've got utime.h (which we should use if we have)\n$!\n$ i_netdb = \"undef\"\n$ tmp = \"utime.h\"\n$ GOSUB inhdr\n$ i_utime = tmp\n$!\n$! do we have getppid()?\n$!\n$ IF i_unistd .EQS. \"define\"\n$ THEN\n$   OS\n$   WS \"#include <stdio.h>\"\n$   WS \"#include <unistd.h>\"\n$   WS \"int main() {\"\n$   WS \"printf(\"\"%d\\n\"\",getppid());\"\n$   WS \"return(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"getppid\"\n$   GOSUB inlibc\n$   d_getppid = tmp\n$ ELSE\n$   d_getppid = \"undef\"\n$ ENDIF\n$!\n$!: see if this is a libutil.h system\n$!\n$ tmp = \"libutil.h\"\n$ GOSUB inhdr\n$ i_libutil = tmp\n$!\n$! Check to see if we've got shadow.h (probably not, but...)\n$!\n$ tmp = \"shadow.h\"\n$ GOSUB inhdr\n$ i_shadow = tmp\n$!\n$! Check to see if we've got socks.h (probably not, but...)\n$!\n$ tmp = \"socks.h\"\n$ GOSUB inhdr\n$ i_socks = tmp\n$!\n$! Check the prototype for select\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   WS \"#include <types.h>\"\n$   IF i_unistd .EQS. \"define\" THEN WS \"#include <unistd.h>\"\n$   WS \"#include <time.h>\"\n$   WS \"#include <socket.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"fd_set *foo;\"\n$   WS \"int bar;\"\n$   WS \"foo = NULL;\"\n$   WS \"bar = select(2, foo, foo, foo, NULL);\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   GOSUB compile_ok\n$   IF compile_status .NE. good_compile\n$   THEN\n$!   Okay, select failed.  Must be an int *\n$     selecttype = \"int *\"\n$     echo4 \"select() NOT found.\"\n$   ELSE\n$     selecttype=\"fd_set *\"\n$     echo4 \"select() found.\"\n$   ENDIF\n$ ELSE\n$   ! No sockets, so stick in an int * : no select, so pick a harmless default\n$   selecttype = \"int *\"\n$ ENDIF\n$!\n$! Check to see if fd_set exists\n$!\n$ echo \"Checking to see how well your C compiler handles fd_set and friends ...\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <types.h>\"\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   WS \"#include <time.h>\"\n$   WS \"#include <socket.h>\"\n$ ENDIF\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"fd_set *foo;\"\n$ WS \"int bar;\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile_ok\n$ IF compile_status .ne. good_compile\n$ THEN\n$!  Okay, fd_set failed. Must not exist\n$   d_fd_set = \"undef\"\n$   echo4 \"Hmm, your compiler has some difficulty with fd_set.\"\n$ ELSE\n$   d_fd_set=\"define\"\n$   echo4 \"Well, your system knows about the normal fd_set typedef...\"\n$ ENDIF\n$!\n$! Check for inttypes.h\n$!\n$ tmp = \"inttypes.h\"\n$ GOSUB inhdr\n$ i_inttypes = tmp\n$!\n$! Check to see if off64_t exists\n$!\n$ echo4 \"Checking to see if you have off64_t...\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <types.h>\"\n$ WS \"#''i_inttypes' IIH\"\n$ WS \"#ifdef IIH\"\n$ WS \"#include <inttypes.h>\"\n$ WS \"#endif\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"off64_t bar;\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile_ok\n$ IF compile_status .EQ. good_compile\n$ THEN\n$   d_off64_t=\"define\"\n$   echo \"You have off64_t.\"\n$ ELSE\n$   d_off64_t = \"undef\"\n$   echo \"You do not have off64_t.\"\n$ ENDIF\n$!\n$! Check to see if fpos64_t exists\n$!\n$ echo4 \"Checking to see if you have fpos64_t...\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <types.h>\"\n$ WS \"#''i_inttypes' IIH\"\n$ WS \"#ifdef IIH\"\n$ WS \"#include <inttypes.h>\"\n$ WS \"#endif\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"fpos64_t bar;\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile_ok\n$ IF compile_status .EQ. good_compile\n$ THEN\n$   d_fpos64_t=\"define\"\n$   echo \"You have fpos64_t.\"\n$ ELSE\n$   d_fpos64_t = \"undef\"\n$   echo \"You do not have fpos64_t.\"\n$ ENDIF\n$!\n$! Check to see if int64_t exists\n$!\n$ echo4 \"Checking to see if you have int64_t...\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <types.h>\"\n$ WS \"#''i_inttypes' IIH\"\n$ WS \"#ifdef IIH\"\n$ WS \"#include <inttypes.h>\"\n$ WS \"#endif\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"int64_t bar;\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile_ok\n$ IF compile_status .EQ. good_compile\n$ THEN\n$   d_int64_t=\"define\"\n$   echo \"You have int64_t.\"\n$ ELSE\n$   d_int64_t = \"undef\"\n$   echo \"You do not have int64_t.\"\n$ ENDIF\n$!\n$! Check to see if fseeko exists\n$!\n$ OS\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"FILE *f=NULL;\"\n$ WS \"fseeko(f,(off_t)0,SEEK_SET);\"\n$ WS \"return(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"fseeko\"\n$ GOSUB inlibc\n$ d_fseeko = tmp\n$!\n$! Check to see if ftello exists\n$!\n$ OS\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"FILE *f=NULL; off_t o=0;\"\n$ WS \"o=ftello(f);\"\n$ WS \"return(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"ftello\"\n$ GOSUB inlibc\n$ d_ftello = tmp\n$!\n$!: see if this is a netdb.h system\n$ IF Has_Dec_C_Sockets\n$ THEN \n$   tmp = \"netdb.h\"\n$   GOSUB inhdr\n$   i_netdb = tmp\n$ ENDIF\n$!\n$! Check for h_errno\n$!\n$ echo4 \"Checking to see if you have h_errno...\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ IF i_unistd .EQS. \"define\" THEN WS \"#include <unistd.h>\"\n$ IF i_netdb  .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"h_errno = 3;\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB link_ok\n$ IF compile_status .EQ. good_compile .AND. link_status .EQ. good_link\n$ THEN\n$   d_herrno=\"define\"\n$   echo \"You have h_errno.\"\n$ ELSE\n$   d_herrno=\"undef\"\n$   echo \"You do not have h_errno.\"\n$ ENDIF\n$!\n$! Check to see if gethostname exists\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   WS \"#include <types.h>\"\n$   WS \"#include <time.h>\"\n$   WS \"#include <socket.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"char name[100];\"\n$   WS \"int bar, baz;\"\n$   WS \"bar = 100;\"\n$   WS \"baz = gethostname(name, bar);\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   GOSUB link_ok\n$   IF compile_status .EQ. good_compile .AND. link_status .EQ. good_link\n$   THEN\n$     d_gethname=\"define\"\n$     echo4 \"gethostname() found.\"\n$   ELSE\n$     d_gethname=\"undef\"\n$   ENDIF\n$ ELSE\n$   ! No sockets, so no gethname\n$   d_gethname = \"undef\"\n$ ENDIF\n$!\n$! Check for sys/file.h\n$!\n$ tmp = \"sys/file.h\"\n$ GOSUB inhdr\n$ i_sysfile = tmp\n$!\n$!\n$! Check for sys/ioctl.h\n$!\n$ tmp = \"sys/ioctl.h\"\n$ GOSUB inhdr\n$ i_sysioctl = tmp\n$!\n$! Check for sys/utsname.h\n$!\n$ tmp = \"sys/utsname.h\"\n$ GOSUB inhdr\n$ i_sysutsname = tmp\n$!\n$! Check for syslog.h\n$!\n$ tmp = \"syslog.h\"\n$ GOSUB inhdr\n$ i_syslog = tmp\n$!\n$! Check for poll.h\n$!\n$ tmp = \"poll.h\"\n$ GOSUB inhdr\n$ i_poll = tmp\n$!\n$! Check for sys/uio.h\n$!\n$ tmp = \"sys/uio.h\"\n$ GOSUB inhdr\n$ i_sysuio = tmp\n$!\n$! Check for sys/mode.h\n$!\n$ tmp = \"sys/mode.h\"\n$ GOSUB inhdr\n$ i_sysmode = tmp\n$!\n$! Check for poll.h\n$!\n$ tmp = \"sys/poll.h\"\n$ gosub inhdr\n$ i_syspoll = tmp\n$!\n$! Check for sys/access.h\n$!\n$ tmp = \"sys/access.h\"\n$ GOSUB inhdr\n$ i_sysaccess = tmp\n$!\n$! Check for sys/security.h\n$!\n$ tmp = \"sys/security.h\"\n$ GOSUB inhdr\n$ i_syssecrt = tmp\n$!\n$! Check for fcntl.h\n$!\n$ tmp = \"fcntl.h\"\n$ GOSUB inhdr\n$ i_fcntl = tmp\n$!\n$! Check for fcntl\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <fcntl.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"fcntl(1,2,3);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"fcntl\"\n$ GOSUB inlibc\n$ d_fcntl = tmp\n$!\n$! Check for fcntl locking capability\n$!\n$ echo4 \"Checking if fcntl-based file locking works... \"\n$ tmp = \"undef\"\n$ IF d_fcntl .EQS. \"define\"\n$ THEN\n$   OS\n$   WS \"#include <stdio.h>\"\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <fcntl.h>\"\n$   WS \"#include <unistd.h>\"\n$   WS \"int main() {\"\n$   WS \"#if defined(F_SETLK) && defined(F_SETLKW)\"\n$   WS \"     struct flock flock;\"\n$   WS \"     int retval, fd;\"\n$   WS \"     fd = open(\"\"[-]perl.c\"\", O_RDONLY);\"\n$   WS \"     flock.l_type = F_RDLCK;\"\n$   WS \"     flock.l_whence = SEEK_SET;\"\n$   WS \"     flock.l_start = flock.l_len = 0;\"\n$   WS \"     retval = fcntl(fd, F_SETLK, &flock);\"\n$   WS \"     close(fd);\"\n$   WS \"     (retval < 0 ? printf(\"\"undef\\n\"\") : printf(\"\"define\\n\"\"));\"\n$   WS \"#else\"\n$   WS \"     printf(\"\"undef\\n\"\");\"\n$   WS \"#endif\"\n$   WS \"}\"\n$   CS\n$   GOSUB link_ok\n$   IF compile_status .EQ. good_compile .AND. link_status .EQ. good_link\n$   THEN\n$     GOSUB just_mcr_it\n$     IF tmp .EQS. \"define\"\n$     THEN\n$       echo4 \"Yes, it seems to work.\"\n$     ELSE\n$       echo4 \"Nope, it didn't work.\"\n$     ENDIF\n$   ELSE\n$     echo4 \"I'm unable to compile the test program, so I'll assume not.\"\n$     tmp = \"undef\"\n$   ENDIF\n$ ELSE\n$   echo4 \"Nope, since you don't even have fcntl().\"\n$ ENDIF\n$ d_fcntl_can_lock = tmp\n$!\n$! Check for memrchr\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <string.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"char * place;\"\n$ WS \"place = (char *)memrchr(\"\"foo\"\", 47, 3);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"memrchr\"\n$ GOSUB inlibc\n$ d_memrchr = tmp\n$!\n$! Check for strnlen\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <string.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"size_t len;\"\n$ WS \"len = strnlen(\"\"foot\"\", 3);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"strnlen\"\n$ GOSUB inlibc\n$ d_strnlen = tmp\n$!\n$! Check for strtoull\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <string.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"unsigned __int64 result;\"\n$ WS \"result = strtoull(\"\"123123\"\", NULL, 10);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"strtoull\"\n$ GOSUB inlibc\n$ d_strtoull = tmp\n$!\n$! Check for strtouq\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <string.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"unsigned __int64 result;\"\n$ WS \"result = strtouq(\"\"123123\"\", NULL, 10);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"strtouq\"\n$ GOSUB inlibc\n$ d_strtouq = tmp\n$!\n$! Check for strtoll\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <string.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"__int64 result;\"\n$ WS \"result = strtoll(\"\"123123\"\", NULL, 10);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"strtoll\"\n$ GOSUB inlibc\n$ d_strtoll = tmp\n$!\n$! Check for strtoq\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <string.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"__int64 result;\"\n$ WS \"result = strtoq(\"\"123123\"\", NULL, 10);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"strtoq\"\n$ GOSUB inlibc\n$ d_strtoq = tmp\n$!\n$! Check for strtold\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <string.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"long double result;\"\n$ WS \"result = strtold(\"\"123123\"\", NULL, 10);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"strtold\"\n$ GOSUB inlibc\n$ d_strtold = tmp\n$!\n$! Check for atoll\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <string.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \" __int64 result;\"\n$ WS \"result = atoll(\"\"123123\"\");\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"atoll\"\n$ GOSUB inlibc\n$ d_atoll = tmp\n$!\n$! Check for atolf\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <string.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"long double\"\n$ WS \"result = atolf(\"\"123123\"\");\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"atolf\"\n$ GOSUB inlibc\n$ d_atolf = tmp\n$!\n$! Check for access\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"access(\"\"foo\"\", F_OK);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"acess\"\n$ GOSUB inlibc\n$ d_access = tmp\n$!\n$! Check for mkstemp\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"mkstemp(\"\"foo\"\");\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"mkstemp\"\n$ GOSUB inlibc\n$ d_mkstemp = tmp\n$!\n$! Check for mkstemps\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"mkstemps(\"\"foo\"\", 1);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"mkstemps\"\n$ GOSUB inlibc\n$ d_mkstemps = tmp\n$!\n$! Check for mkdtemp\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"mkdtemp(\"\"foo\"\");\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"mkdtemp\"\n$ GOSUB inlibc\n$ d_mkdtemp = tmp\n$!\n$! Check for poll\n$!\n$ if i_poll .eqs. \"define\"\n$ then\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <poll.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"struct pollfd pfd;\"\n$   WS \"int count=poll(&pfd,1,0);\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"poll\"\n$   GOSUB inlibc\n$   d_poll = tmp\n$ else\n$   d_poll = \"undef\"\n$ endif\n$!\n$! Check for setvbuf\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"FILE *foo;\"\n$ WS \"char Buffer[99];\"\n$ WS \"foo = fopen(\"\"foo\"\", \"\"r\"\");\"\n$ WS \"setvbuf(foo, Buffer, 0, 0);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"setvbuf\"\n$ GOSUB inlibc\n$ d_setvbuf = tmp\n$!\n$! Check for the shm* routines.\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <sys/shm.h>\"\n$ WS \"#include <sys/stat.h>\"\n$ WS \"int shmget(key_t key, size_t size, int shmflg);\"\n$ WS \"void* shmat(int shmid,const void *shmaddr,int shmflg);\"\n$ WS \"int shmctl(int shmid,  int cmd, struct shmid_ds *buf);\"\n$ WS \"int shmdt(const void *shmaddr);\"\n$ WS \"int main() {\"\n$ WS \"int shm_id = shmget(IPC_PRIVATE, 8, S_IRWXU);\"\n$ WS \"if (shm_id == -1) printf(\"\"0\\n\"\"); else printf (\"\"1\\n\"\");\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile\n$ IF tmp .EQS. \"1\"\n$ THEN\n$   d_shm = \"define\"\n$   d_shmat = \"define\"\n$   d_shmatprototype = \"define\"\n$   d_shmctl = \"define\"\n$   d_shmdt = \"define\"\n$   d_shmget = \"define\"\n$   shmattype = \"void *\"\n$ ELSE\n$   d_shm = \"undef\"\n$   d_shmat = \"undef\"\n$   d_shmatprototype = \"undef\"\n$   d_shmctl = \"undef\"\n$   d_shmdt = \"undef\"\n$   d_shmget = \"undef\"\n$   shmattype = \"undef\"\n$ ENDIF\n$!\n$! Check for setenv\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"setenv(\"\"FOO\"\", \"\"BAR\"\", 0);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"setenv\"\n$ GOSUB inlibc\n$ d_setenv = tmp\n$!\n$! Check for setproctitle\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"setproctitle(\"\"%s\"\", \"\"FOO\"\");\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"setproctitle\"\n$ GOSUB inlibc\n$ d_setproctitle = tmp\n$!\n$! Check for <netinet/in.h>\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   tmp = \"netinet/in.h\"\n$   GOSUB inhdr\n$   i_niin = tmp\n$ ELSE\n$   i_niin=\"undef\"\n$ ENDIF\n$!\n$! Check for <arpa/inet.h>\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   tmp = \"arpa/inet.h\"\n$   GOSUB inhdr\n$   i_arpainet = tmp\n$ ELSE\n$   i_arpainet=\"undef\"\n$ ENDIF\n$!\n$! Check for <sys/un.h>\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   tmp = \"sys/un.h\"\n$   GOSUB inhdr\n$   i_sysun = tmp\n$ ELSE\n$   i_sysun=\"undef\"\n$ ENDIF\n$!\n$!\n$! Check for <netinet/tcp.h>\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   tmp = \"netinet/tcp.h\"\n$   GOSUB inhdr\n$   i_netinettcp = tmp\n$ ELSE\n$   i_netinettcp=\"undef\"\n$ ENDIF\n$!\n$! Check for endhostent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"endhostent();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"endhostent\"\n$   GOSUB inlibc\n$   d_endhent = tmp\n$ ELSE\n$   d_endhent=\"undef\"\n$ ENDIF\n$!\n$! Check for endnetent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"endnetent();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"endnetent\"\n$   GOSUB inlibc\n$   d_endnent = tmp\n$ ELSE\n$   d_endnent=\"undef\"\n$ ENDIF\n$!\n$! Check for endprotoent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"endprotoent();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"endprotoent\"\n$   GOSUB inlibc\n$   d_endpent = tmp\n$ ELSE\n$   d_endpent=\"undef\"\n$ ENDIF\n$!\n$! Check for endservent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"endservent();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"endservent\"\n$   GOSUB inlibc\n$   d_endsent = tmp\n$ ELSE\n$   d_endsent=\"undef\"\n$ ENDIF\n$!\n$! Check for sethostent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"sethostent(1);\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"sethostent\"\n$   GOSUB inlibc\n$   d_sethent = tmp\n$ ELSE\n$   d_sethent=\"undef\"\n$ ENDIF\n$!\n$! Check for setnetent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"setnetent(1);\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"setnetent\"\n$   GOSUB inlibc\n$   d_setnent = tmp\n$ ELSE\n$   d_setnent=\"undef\"\n$ ENDIF\n$!\n$! Check for setprotoent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"setprotoent(1);\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"setprotoent\"\n$   GOSUB inlibc\n$   d_setpent = tmp\n$ ELSE\n$   d_setpent=\"undef\"\n$ ENDIF\n$!\n$! Check for setservent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"setservent(1);\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"setservent\"\n$   GOSUB inlibc\n$   d_setsent = tmp\n$ ELSE\n$   d_setsent=\"undef\"\n$ ENDIF\n$!\n$! Check for gethostent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"gethostent();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"gethostent\"\n$   GOSUB inlibc\n$   d_gethent = tmp\n$ ELSE\n$   d_gethent=\"undef\"\n$ ENDIF\n$!\n$! Check for getnetent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"getnetent();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"getnetent\"\n$   GOSUB inlibc\n$   d_getnent = tmp\n$ ELSE\n$   d_getnent=\"undef\"\n$ ENDIF\n$!\n$! Check for getprotoent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"getprotoent();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"getprotoent\"\n$   GOSUB inlibc\n$   d_getpent = tmp\n$ ELSE\n$   d_getpent=\"undef\"\n$ ENDIF\n$!\n$! Check for getservent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"getservent();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"getservent\"\n$   GOSUB inlibc\n$   d_getsent = tmp\n$ ELSE\n$   d_getsent=\"undef\"\n$ ENDIF\n$!\n$!\n$! Check for sa_len\n$!\n$ echo4 \"Checking the availability of sa_len in the sockaddr struct ...\"\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#define _SOCKADDR_LEN\"\n$   WS \"#include <types.h>\"\n$   WS \"#include <socket.h>\"\n$   WS \"#include <string.h>\"\n$   WS \"int main() {\"\n$   WS \"struct sockaddr sa;\"\n$   WS \"memset((char *)&sa, 0, sizeof(sa));\"\n$   WS \"return (sa.sa_len);\"\n$   WS \"}\"\n$   CS\n$   GOSUB compile_ok\n$   IF compile_status .EQ. good_compile\n$   THEN\n$     d_sockaddr_sa_len=\"define\"\n$     echo \"You have sa_len in the sockaddr struct.\"\n$   ELSE\n$     d_sockaddr_sa_len=\"undef\"\n$     echo \"You do not have sa_len in the sockaddr struct.\"\n$   ENDIF\n$ ELSE\n$   d_sockaddr_sa_len=\"undef\"\n$   echo \"You do not have sa_len in the sockaddr struct.\"\n$ ENDIF\n$!\n$! Check for sin6_scope_id\n$!\n$ echo4 \"Checking the availability of sin6_scope_id in the struct sockaddr_in6 ...\"\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#include <types.h>\"\n$   WS \"#include <socket.h>\"\n$   WS \"#include <in.h>\"\n$   WS \"#include <string.h>\"\n$   WS \"int main() {\"\n$   WS \"struct sockaddr_in6 sin6;\"\n$   WS \"memset((char *)&sin6, 0, sizeof(sin6));\"\n$   WS \"return (sin6.sin6_scope_id);\"\n$   WS \"}\"\n$   CS\n$   GOSUB compile_ok\n$   IF compile_status .EQ. good_compile\n$   THEN\n$     d_sin6_scope_id=\"define\"\n$     echo \"You have sin6_scope_id in the sockaddr_in6 struct.\"\n$   ELSE\n$     d_sin6_scope_id=\"undef\"\n$     echo \"You do not have sin6_scope_id in the sockaddr_in6 struct.\"\n$   ENDIF\n$ ELSE\n$   d_sin6_scope_id=\"undef\"\n$   echo \"You do not have sin6_scope_id in the sockaddr_in6 struct.\"\n$ ENDIF\n$!\n$! Check for nanosleep\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <time.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"int asleep = nanosleep(NULL,NULL);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"nanosleep\"\n$ GOSUB inlibc\n$ d_nanosleep = tmp\n$!\n$! Check for socklen_t\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   echo4 \"Checking to see if you have socklen_t...\"\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"socklen_t x = 16;\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   GOSUB link_ok\n$   IF compile_status .EQ. good_compile .AND. link_status .EQ. good_link\n$   THEN\n$     d_socklen_t=\"define\"\n$     echo \"You have socklen_t.\"\n$   ELSE\n$     d_socklen_t=\"undef\"\n$     echo \"You do not have socklen_t.\"\n$   ENDIF\n$ ELSE\n$   d_socklen_t=\"undef\"\n$ ENDIF\n$!\n$! Check for pthread_yield\n$!\n$ IF use_threads\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <pthread.h>\"\n$   WS \"#include <stdio.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"pthread_yield();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"pthread_yield\"\n$   GOSUB inlibc\n$   d_pthread_yield = tmp\n$ ELSE\n$   d_pthread_yield=\"undef\"\n$ ENDIF\n$!\n$! Check for sched_yield\n$!\n$ IF use_threads\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <pthread.h>\"\n$   WS \"#include <stdio.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"sched_yield();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"sched_yield\"\n$   GOSUB inlibc\n$   d_sched_yield = tmp\n$   IF d_sched_yield .EQS. \"define\"\n$   THEN sched_yield = \"sched_yield\"\n$   ELSE sched_yield = \" \"\n$   ENDIF\n$ ELSE\n$   d_sched_yield=\"undef\"\n$   sched_yield = \" \"\n$ ENDIF\n$!\n$! Check for pthread_attr_setscope and PTHREAD_SCOPE_SYSTEM.\n$! (The actual test is to be written.)\n$!\n$ d_pthread_attr_setscope=\"undef\"\n$!\n$! Check for generic pointer size\n$!\n$ echo4 \"Checking to see how big your pointers are...\" \n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"int foo;\"\n$ WS \"foo = sizeof(char *);\"\n$ WS \"printf(\"\"%d\\n\"\", foo);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"char *\"\n$ GOSUB type_size_check\n$ ptrsize = tmp\n$ echo \"Your pointers are ''ptrsize' bytes long.\"\n$!\n$! Check for size_t size\n$!\n$ tmp = \"size_t\"\n$ zzz = tmp\n$ echo4 \"Checking the size of ''zzz'...\"\n$ GOSUB type_size_check\n$ sizesize = tmp\n$ echo \"Your ''zzz' size is ''sizesize' bytes.\"\n$!\n$! Check for _LARGEFILE capability.\n$!\n$ off_t_size = 4\n$ OS\n$ WS \"#define _LARGEFILE\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"printf(\"\"%d\\n\"\", sizeof(off_t));\"\n$ WS \"return(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB link_ok\n$ IF link_status .EQ. good_link\n$ THEN\n$   GOSUB just_mcr_it\n$   off_t_size = tmp\n$ ENDIF\n$ echo \"Your off_t size is ''off_t_size' bytes when _LARGEFILE is defined.\"\n$ IF off_t_size .ne. 8 .AND. (uselargefiles .OR. uselargefiles .eqs. \"define\")\n$ THEN\n$   echo4 \"You configured with -Duselargefiles but your CRTL does not support _LARGEFILE.\"\n$   echo4 \"I'm disabling large file support.\"\n$   uselargefiles = \"undef\"\n$ ENDIF\n$!\n$! Check for st_ino size.\n$!\n$ st_ino_size = 4\n$ OS\n$ WS \"#include <sys/stat.h>\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\n$ WS \"#endif\"\n$ WS \"int main() {\n$ WS \"#''uselargefiles' _LARGEFILE\"\n$ WS \"#ifdef _LARGEFILE\"\n$ WS \"    printf(\"\"%d\\n\"\", sizeof(__ino64_t));\"\n$ WS \"#else\"\n$ WS \"    printf(\"\"%d\\n\"\", sizeof(unsigned short)*3);\"\n$ WS \"#endif\"\n$ WS \"    exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB link_ok\n$ IF link_status .EQ. good_link\n$ THEN\n$   GOSUB just_mcr_it\n$   st_ino_size = tmp\n$ ENDIF\n$ echo \"Your st_ino size is ''st_ino_size' bytes.\"\n$!\n$! Tests for hard link, symbolic links, and 7.3 + CRTL features\n$!\n$  d_lchown = \"undef\"\n$  d_link = \"undef\"\n$  d_lstat = \"undef\"\n$  d_readlink = \"undef\"\n$  d_symlink = \"undef\"\n$  d_realpath = \"undef\"\n$!\n$! Hard link support has been present since 7.3-1 except for the\n$! easy to use DCL test to see if hardlinks are enabled on the build\n$! disk.  That would require more work to test, and I am only testing\n$! this on 8.2, so that is why the 8.2 test.\n$!\n$  IF (vms_ver .GES. \"8.2\")\n$  THEN\n$   IF f$getdvi(\"SYS$DISK\",\"HARDLINKS_SUPPORTED\")\n$   THEN\n$       echo \"I Found 64 bit OpenVMS 8.2 or later, and hard links enabled on build disk.\"\n$\techo \"I will build with hard link support\"\n$\td_link = \"define\"\n$   ELSE\n$\techo \"I Found 64 bit OpenVMS 8.2 or later, and hard links disabled on build disk.\"\n$\techo \"I will not build with hard link support.\"\n$   ENDIF\n$  ELSE\n$    echo4 \"I can not detect if your CRTL and build disk support hard links.\"\n$    echo4 \"I am disabling hard link support.\"\n$  ENDIF\n$!\n$  IF uselargefiles .OR. uselargefiles .eqs. \"define\"\n$  THEN\n$    IF (vms_ver .GES. \"8.2\")\n$    THEN\n$      echo4 \"Largefile support enabled, so enabling standard stat support too.\"\n$      usestdstat = \"y\"\n$      echo4 -\n   \"Looking for the realpath() function to indicate symbolic link support...\"\n$      OS\n$      WS \"#include <stdlib.h>\"\n$      WS \"char *realpath(const char *file_name, char * resolved_name, ...);\"\n$      WS \"int main()\"\n$      WS \"{\"\n$      WS \"char result[255];\"\n$      WS \"realpath(\"\"foo\"\",result);\"\n$      WS \"exit(0);\"\n$      WS \"}\"\n$      CS\n$      GOSUB link_ok\n$      IF compile_status .EQ. good_compile .AND. link_status .EQ. good_link\n$      THEN\n$        echo -\n           \"Found realpath() which indicates symbolic link support is present.\"\n$\t d_lchown = \"define\"\n$\t d_lstat = \"define\"\n$\t d_readlink = \"define\"\n$\t d_symlink = \"define\"\n$!\t d_realpath = \"define\" ! Perl will not put it in the config.h file?\n$!\tPerl apparently does not use a built in realpath() on other platforms,\n$!      but there is a severe performance penatly on OpenVMS to use the Perl\n$!      script that implements a realpath().  The d_symlink symbol is used\n$!      as a replacement for the d_realpath since they are related and both\n$!      were activated by the CRTL at the same time.\n$!\n$\t ELSE\n$\t  echo4 \"Your system does not support symbolic links.\"\n$\t  echo4 \"I am disabling symbolic link support.\"\n$\tENDIF\n$    ELSE\n$       echo4 \"Your system does not support symbolic links.\"\n$       echo4 \"I am disabling symbolic link support.\"\n$    ENDIF\n$  ELSE\n$    IF (vms_ver .GES. \"8.2\")\n$    THEN\n$       echo4 \"-Duselargefiles is required for symbolic link support.\"\n$       echo4 \"You did not specify that, so I am disabling symbolic link support.\"\n$    ENDIF\n$  ENDIF\n$!\n$!\n$! Check for grp.h -- should be 7.3 and later, but test to be sure\n$!\n$ tmp = \"grp.h\"\n$ GOSUB inhdr\n$ i_grp = tmp\n$!\n$! VMS V7.3-2 powered options\n$! We know that it is only available for V7.3-2 and later on 64 bit platforms.\n$!\n$  d_getgrgid_r = \"undef\"\n$  getgrgid_r_proto = \"0\"\n$  d_getgrnam_r = \"undef\"\n$  getgrnam_r_proto = \"0\"\n$  d_getpgid = \"undef\"\n$  d_getpgrp = \"undef\"\n$! N.B.  We already have home-grown thread-safe versions of\n$!       getpwnam and getpwuid -- no need to use CRTL versions\n$  d_getpwnam_r = \"undef\"\n$  getpwnam_r_proto = \"0\"\n$  d_getpwuid_r = \"undef\"\n$  getpwuid_r_proto = \"0\"\n$  echo \"Asumming 64-bit OpenVMS ''vms_ver' -- will build with V7.3-2 routines\"\n$  d_getgrgid_r = \"define\"\n$  getgrgid_r_proto = \"1\"\n$  d_getgrnam_r = \"define\"\n$  getgrnam_r_proto = \"1\"\n$  if d_symlink .or. d_symlink .EQS. \"define\"\n$  then\n$!\t FIXME: Need to find how to activate this.\n$!       d_getpgid = \"define\"\n$!       d_getpgrp = \"define\"\n$  endif\n$  d_setgrent = \"define\"\n$  d_ttyname_r = \"define\"\n$  ttyname_r_proto = \"1\"\n$  d_snprintf = \"define\"\n$  d_vsnprintf = \"define\"\n$!\n$! VMS V7.3-2 powered options\n$! We know that it is only available for V7.3-2 and later on 64 bit platforms.\n$! Only implementing right now on 8.2 because that is what I am testing\n$! These functions may require POSIX UIDs/GIDs to be active, so I am\n$! not activating the features at this time, just preparing this file\n$! to easily use them in the future.\n$!\n$  d_seteuid = \"undef\"\n$  d_setpgid = \"undef\"\n$  d_setpgrp = \"undef\"\n$  d_setregid = \"undef\"\n$  d_setreuid = \"undef\"\n$  d_setsid = \"undef\"\n$  ! Disable this section for now.\n$!$  if (vms_ver .GES. \"8.2\")\n$  if .NOT. 1\n$  then\n$    echo \"Found 64 bit OpenVMS ''vms_ver' -- will build with V7.3-2 UID setting routines\"\n$    d_seteuid = \"define\"\n$    d_setpgid = \"define\"\n$    d_setpgrp = \"define\"\n$    d_setregid = \"define\"\n$    d_setreuid = \"define\"\n$    d_setsid = \"define\"\n$  endif\n$!\n$! VMS V8 powered options\n$! We know that it is only available for 8.2 and later on 64 bit platforms.\n$!\n$  d_fstatvfs = \"undef\"\n$  d_statvfs = \"undef\"\n$  i_sysstatvfs = \"undef\"\n$  if (vms_ver .GES. \"8.2\")\n$  then\n$    echo \"Found 64 bit OpenVMS ''vms_ver' -- will build with 8.2 routines\"\n$    d_fstatvfs = \"define\"\n$    d_statvfs = \"define\"\n$    i_sysstatvfs = \"define\"\n$  endif\n$!\n$! Check rand48 and its ilk\n$!\n$ echo4 \"Using our internal random number implementation...\"\n$!\n$ randfunc = \"Perl_drand48\"\n$ drand01 = \"Perl_drand48()\"\n$ seedfunc = \"Perl_drand48_init\"\n$ randbits = \"48\"\n$ randseedtype = \"U32\"\n$ d_drand48proto = \"define\"\n$!\n$! Done with compiler checks. Clean up.\n$ IF F$SEARCH(\"try.c\")  .NES.\"\" THEN DELETE/NOLOG/NOCONFIRM try.c;*\n$ IF F$SEARCH(\"try.obj\").NES.\"\" THEN DELETE/NOLOG/NOCONFIRM try.obj;*\n$ IF F$SEARCH(\"try.exe\").NES.\"\" THEN DELETE/NOLOG/NOCONFIRM try.exe;*\n$ IF F$SEARCH(\"try.opt\").NES.\"\" THEN DELETE/NOLOG/NOCONFIRM try.opt;*\n$ IF F$SEARCH(\"try.out\").NES.\"\" THEN DELETE/NOLOG/NOCONFIRM try.out;*\n$ IF ccname .EQS. \"CXX\"\n$ THEN\n$   CALL Cxx_demangler_cleanup\n$ ENDIF\n$!\n$! Some that are compiler or VMS version sensitive\n$!\n$! Gnu C stuff\n$ IF ccname .EQS. \"GCC\"\n$ THEN\n$   d_attribut=\"define\"\n$   vms_cc_type=\"gcc\"\n$ ELSE\n$   IF ccname .EQS. \"CXX\"\n$   THEN\n$      vms_cc_type=\"cxx\"\n$   ELSE\n$      vms_cc_type=\"cc\"\n$   ENDIF\n$   d_attribut=\"undef\"\n$ ENDIF\n$!\n$ d_getitimer=\"define\"\n$ d_gettimeod=\"define\"\n$ d_mmap=\"define\"\n$ d_mprotect=\"define\"\n$ d_munmap=\"define\"\n$ d_msync=\"define\"\n$ d_ualarm=\"define\"\n$ d_uname=\"define\"\n$! d_unsetenv=\"define\" ! Fix me - Activating requires changing VMS code\n$ d_unsetenv=\"undef\"   ! Change will be needed to allow GNV integration\n$ d_clearenv=\"undef\"\n$ d_usleep=\"define\"\n$ d_setitimer=\"define\"\n$ d_sigaction=\"define\"\n$ d_siginfo_si_addr=\"define\"\n$ d_siginfo_si_band=\"define\"\n$ d_siginfo_si_errno=\"define\"\n$ d_siginfo_si_fd=\"define\"\n$ d_siginfo_si_pid=\"define\"\n$ d_siginfo_si_status=\"define\"\n$ d_siginfo_si_uid=\"define\"\n$ d_siginfo_si_value=\"define\"\n$ d_sigprocmask=\"define\"\n$ d_truncate=\"define\"\n$ d_wait4=\"define\"\n$ d_index=\"define\"\n$ pidtype=\"pid_t\"\n$ sig_name1=\"ZERO HUP INT QUIT ILL TRAP ABRT EMT FPE KILL BUS SEGV SYS PIPE\"\n$ sig_name2=\" ALRM TERM USR1 USR2 NUM18 NUM19 CHLD CONT STOP TSTP TTIN TTOU DEBUG\"\n$ sig_name2 = sig_name2 + \" NUM27 WINCH\"\n$!* signal.h defines SIGRTMIN as 33 and SIGRTMAX as 64, but there is no \n$!* sigqueue function or other apparent means to do realtime signalling,\n$!* so let's not try to include the realtime range for now.\n$!* sig_name3=\" NUM29 NUM30 NUM31 NUM32 RTMIN NUM34 NUM35 NUM36 NUM37 NUM38 NUM39 NUM40 NUM41 NUM42 NUM43\"\n$!* sig_name4=\" NUM44 NUM45 NUM46 NUM47 NUM48 NUM49 NUM50 NUM51 NUM52 NUM53 NUM54 NUM55 NUM56 NUM57 NUM58\"\n$!* sig_name5=\" NUM59 NUM60 NUM61 NUMT62 NUM63 RTMAX\"\n$ sig_name = sig_name1 + sig_name2\n$ sig_num = \"\"\n$ sig_num_init = \"\"\n$ sig_name_init = \"\"\n$ sig_index = 0\n$!\n$ PARSE_SIG_NAME_LOOP:\n$!\n$   tmp = F$ELEMENT(sig_index, \" \", sig_name)\n$   IF F$LENGTH(F$EDIT(tmp,\"TRIM\")) .eq. 0 THEN GOTO END_SIG_NAME_LOOP\n$   sig_name_init = sig_name_init + \"\"\"''tmp'\"\",\"\n$   sig_num = sig_num + \"''sig_index' \"\n$   sig_num_init = sig_num_init + \"''sig_index',\"\n$   sig_index = sig_index + 1\n$   GOTO PARSE_SIG_NAME_LOOP\n$!\n$ END_SIG_NAME_LOOP:\n$!\n$   sig_name_init = sig_name_init + \"0\"\n$   sig_num_init = sig_num_init + \"0\"\n$   sig_size = \"''sig_index'\"\n$   sig_index = sig_index - 1\n$   sig_count = \"''sig_index'\"\n$   uidtype=\"uid_t\"\n$   d_pathconf=\"define\"\n$   d_fpathconf=\"define\"\n$   d_sysconf=\"define\"\n$   d_sigsetjmp=\"define\"\n$!\n$!: see if tzname[] exists\n$ OS\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <time.h>\"\n$ WS \"int main() { extern short tzname[]; printf(\"\"%hd\"\", tzname[0]); }\"\n$ CS\n$ GOSUB compile_ok\n$ IF compile_status .EQ. good_compile\n$ THEN\n$   d_tzname = \"undef\"\n$   echo4 \"tzname[] NOT found.\"\n$ ELSE\n$   d_tzname = \"define\"\n$   echo4 \"tzname[] found.\"\n$ ENDIF\n$ IF F$SEARCH(\"try.obj\") .NES. \"\" THEN DELETE/NOLOG/NOCONFIRM try.obj;\n$!\n$ IF d_gethname .EQS. \"undef\" .AND. d_uname .EQS. \"undef\"\n$ THEN\n$   d_phostname=\"define\"\n$ ELSE\n$   d_phostname=\"undef\"\n$ ENDIF\n$!\n$! Dec C alone\n$ IF ccname .EQS. \"DEC\" .OR. ccname .EQS. \"CXX\"\n$ THEN\n$   vms_cc_type=\"decc\"\n$ ENDIF\n$ d_faststdio=\"define\"\n$ d_locconv=\"define\"\n$ d_mblen=\"define\"\n$ d_mbstowcs=\"define\"\n$ d_mbtowc=\"define\"\n$ d_mktime=\"define\"\n$ d_nl_langinfo=\"define\"\n$ d_setlocale=\"define\"\n$ d_setlocale_accepts_any_locale_name=\"undef\"\n$ d_stdiobase=\"define\"\n$ d_stdio_cnt_lval=\"define\"\n$ d_stdio_ptr_lval=\"define\"\n$ d_stdstdio=\"define\"\n$ d_strcoll=\"define\"\n$ d_strxfrm=\"define\"\n$ i_langinfo=\"define\"\n$ i_locale=\"define\"\n$ d_stdio_ptr_lval_sets_cnt=\"undef\"\n$ d_stdio_ptr_lval_nochange_cnt=\"define\"\n$ usefaststdio=\"undef\"\n$!\n$! Sockets?\n$ if Has_Dec_C_Sockets\n$ THEN\n$   d_vms_do_sockets=\"define\"\n$   d_htonl=\"define\"\n$   d_socket=\"define\"\n$   d_sockpair = \"undef\"\n$   if (vms_ver .GES. \"8.2\")\n$   then\n$     echo \"Found 64 bit OpenVMS 8.2, will build with socketpair support\"\n$     d_sockpair = \"define\"\n$   endif\n$   d_select=\"define\"\n$   netdb_hlen_type=\"int\"\n$   netdb_host_type=\"char *\"\n$   netdb_name_type=\"char *\"\n$   netdb_net_type=\"long\"\n$   d_gethbyaddr=\"define\"\n$   d_gethbyname=\"define\"\n$   d_getnbyaddr=\"define\"\n$   d_getnbyname=\"define\"\n$   d_getpbynumber=\"define\"\n$   d_getpbyname=\"define\"\n$   d_getsbyport=\"define\"\n$   d_getsbyname=\"define\"\n$   d_gethostprotos=\"define\"\n$   d_getnetprotos=\"define\"\n$   d_getprotoprotos=\"define\"\n$   d_getservprotos=\"define\"\n$   socksizetype=\"size_t\"\n$ ELSE\n$   d_vms_do_sockets=\"undef\"\n$   d_htonl=\"undef\"\n$   d_socket=\"undef\"\n$   d_socketpair = \"undef\"\n$   d_select=\"undef\"\n$   netdb_hlen_type=\"int\"\n$   netdb_host_type=\"char *\"\n$   netdb_name_type=\"char *\"\n$   netdb_net_type=\"long\"\n$   d_gethbyaddr=\"undef\"\n$   d_gethbyname=\"undef\"\n$   d_getnbyaddr=\"undef\"\n$   d_getnbyname=\"undef\"\n$   d_getpbynumber=\"undef\"\n$   d_getpbyname=\"undef\"\n$   d_getsbyport=\"undef\"\n$   d_getsbyname=\"undef\"\n$   d_gethostprotos=\"undef\"\n$   d_getnetprotos=\"undef\"\n$   d_getprotoprotos=\"undef\"\n$   d_getservprotos=\"undef\"\n$   socksizetype=\"undef\"\n$ ENDIF\n$! Threads\n$ d_oldpthreads=\"undef\"\n$ IF use_threads\n$ THEN\n$   usethreads=\"define\"\n$   d_pthreads_created_joinable=\"define\"\n$ ELSE\n$   usethreads=\"undef\"\n$   d_pthreads_created_joinable=\"undef\"\n$ ENDIF\n$! \n$! new (5.005_62++) typedefs for primitives\n$!\n$ echo \"Choosing the C types to be used for Perl's internal types...\"\n$ ivtype=\"long\"\n$ uvtype=\"unsigned long\"\n$ i8type=\"char\"\n$ u8type=\"unsigned char\"\n$ i16type=\"short\"\n$ u16type=\"unsigned short\"\n$ i32type=\"int\"\n$ u32type=\"unsigned int\"\n$ i64type=\"long long\"\n$ u64type=\"unsigned long long\"\n$ nvtype=\"double\"\n$!\n$ IF use64bitint .OR. use64bitint .EQS. \"define\"\n$ THEN\n$   ivtype = \"''i64type'\"\n$   uvtype = \"''u64type'\"\n$ ENDIF\n$ i64size=\"8\"\n$ u64size=\"8\"\n$!\n$ doublemantbits = \"52\"\n$ IF uselongdouble .OR. uselongdouble .EQS. \"define\"\n$ THEN\n$   nvtype=\"long double\"\n$   nvmantbits = longdblmantbits\n$ ELSE\n$   nvmantbits = doublemantbits\n$ ENDIF\n$!\n$ tmp = \"''ivtype'\"\n$ GOSUB type_size_check\n$ ivsize = tmp\n$ IF ivtype .eqs. \"long\"\n$ THEN longsize = tmp\n$ ELSE\n$   tmp = \"long\"\n$   GOSUB type_size_check\n$   longsize = tmp\n$ ENDIF\n$!\n$ tmp = \"''uvtype'\"\n$ GOSUB type_size_check\n$ uvsize = tmp\n$!\n$ tmp = \"''i8type'\"\n$ GOSUB type_size_check\n$ i8size = tmp\n$!\n$ tmp = \"''u8type'\"\n$ GOSUB type_size_check\n$ u8size = tmp\n$!\n$ tmp = \"''i16type'\"\n$ GOSUB type_size_check\n$ i16size = tmp\n$ IF i16type .eqs. \"short\"\n$ THEN shortsize = tmp\n$ ELSE\n$   tmp = \"short\"\n$   gosub type_size_check\n$   shortsize = tmp\n$ ENDIF\n$!\n$ tmp = \"''u16type'\"\n$ GOSUB type_size_check\n$ u16size = tmp\n$!\n$ tmp = \"''i32type'\"\n$ GOSUB type_size_check\n$ i32size = tmp\n$ IF i32type .eqs. \"int\"\n$ THEN intsize = tmp\n$ ELSE\n$   tmp = \"int\"\n$   gosub type_size_check\n$   intsize = tmp\n$ ENDIF\n$!\n$ tmp = \"''u32type'\"\n$ gosub type_size_check\n$ u32size = tmp\n$!\n$ tmp = \"''nvtype'\"\n$ GOSUB type_size_check\n$ nvsize = tmp\n$!\n$ echo \"(IV will be \"\"''ivtype'\"\", ''ivsize' bytes)\"\n$ echo \"(UV will be \"\"''uvtype'\"\", ''uvsize' bytes)\"\n$ echo \"(NV will be \"\"''nvtype'\"\", ''nvsize' bytes)\"\n$!\n$ d_nv_preserves_uv = \"undef\"\n$ echo4 \"Checking how many bits of your UVs your NVs can preserve...\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main() {\"\n$ WS \"    ''uvtype' u = 0;\"\n$ WS \"    int     n = 8 * ''uvsize';\"\n$ WS \"    int     i;\"\n$ WS \"    for (i = 0; i < n; i++) {\"\n$ WS \"      u = u << 1 | (''uvtype')1;\"\n$ WS \"      if ((''uvtype')(''nvtype')u != u)\"\n$ WS \"        break;\"\n$ WS \"    }\"\n$ WS \"    printf(\"\"%d\\n\"\", i);\"\n$ WS \"    exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile\n$ nv_preserves_uv_bits = tmp\n$ IF F$INTEGER(nv_preserves_uv_bits) .GE. (F$INTEGER(uvsize) * 8)\n$ THEN\n$   d_nv_preserves_uv = \"define\"\n$   echo \"Your NVs can preserve all ''nv_preserves_uv_bits' bits of your UVs.\"\n$ ELSE\n$   d_nv_preserves_uv = \"undef\"\n$   echo \"Your NVs can preserve only ''nv_preserves_uv_bits' bits of your UVs.\"\t\n$ ENDIF\n$!\n$ nv_overflows_integers_at = \"0\"\n$ echo4 \"Checking to find the largest integer value your NVs can hold...\"\n$ OS\n$ WS \"#include <stdio.h>\"\n$ WS \"\"\n$ WS \"typedef ''nvtype' NV;\"\n$ WS \"\"\n$ WS \"int\"\n$ WS \"main() {\"\n$ WS \"  NV value = 2;\"\n$ WS \"  int count = 1;\"\n$ WS \"\"\n$ WS \"  while(count < 256) {\"\n$ WS \"    volatile NV up = value + 1.0;\"\n$ WS \"    volatile NV negated = -value;\"\n$ WS \"    volatile NV down = negated - 1.0;\"\n$ WS \"    volatile NV got_up = up - value;\"\n$ WS \"    int up_good = got_up == 1.0;\"\n$ WS \"    int got_down = down - negated;\"\n$ WS \"    int down_good = got_down == -1.0;\"\n$ WS \"\"\n$ WS \"    if (down_good != up_good) {\"\n$ WS \"      fprintf(stderr,\"\n$ WS \"              \"\"Inconsistency - up %d %f; down %d %f; for 2**%d (%.20f)\\n\"\",\"\n$ WS \"              up_good, (double) got_up, down_good, (double) got_down,\"\n$ WS \"              count, (double) value);\"\n$ WS \"      return 1;\"\n$ WS \"    }\"\n$ WS \"    if (!up_good) {\"\n$ WS \"      while (1) {\"\n$ WS \"        if (count > 8) {\"\n$ WS \"          count -= 8;\"\n$ WS \"          fputs(\"\"256.0\"\", stdout);\"\n$ WS \"        } else {\"\n$ WS \"          count--;\"\n$ WS \"          fputs(\"\"2.0\"\", stdout);\"\n$ WS \"        }\"\n$ WS \"        if (!count) {\"\n$ WS \"          puts(\"\"\"\");\"\n$ WS \"          return 0;\"\n$ WS \"        }\"\n$ WS \"        fputs(\"\"*\"\", stdout);\"\n$ WS \"      }\"\n$ WS \"    }\"\n$ WS \"    value *= 2;\"\n$ WS \"    ++count;\"\n$ WS \"  }\"\n$ WS \"  fprintf(stderr, \"\"Cannot overflow integer range, even at 2**%d (%.20f)\\n\"\",\"\n$ WS \"          count, (double) value);\"\n$ WS \"  return 1;\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile\n$ IF F$LENGTH(tmp) .GT. 0\n$ THEN\n$   IF F$EXTRACT(0,1,tmp) .EQS. \"2\"\n$   THEN\n$     echo \"The largest integer your NVs can preserve is equal to ''tmp'\"\n$     nv_overflows_integers_at = tmp\n$   ELSE\n$     echo \"Cannot determine the largest integer value your NVs can hold, unexpected output\"\n$     echo \"''tmp'\"\n$   ENDIF\n$ ELSE\n$   echo \"Cannot determine the largest integer value your NVs can hold\"\n$ ENDIF\n$!\n$! Check for signbit (must already know nvtype)\n$!\n$ echo4 \"Checking to see if you have signbit() available to work on ''nvtype'...\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <fp.h>\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"    ''nvtype' x = 0.0;\"\n$ WS \"    ''nvtype' y = -0.0;\"\n$ WS \"    if ((signbit(x) == 0) && (signbit(y) != 0))\"\n$ WS \"        printf(\"\"1\\n\"\");\"\n$ WS \"    else\"\n$ WS \"        printf(\"\"0\\n\"\");\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile\n$ IF tmp .EQS. \"1\" \n$ THEN \n$     d_signbit = \"define\"\n$     echo4 \"Yes.\"\n$ ELSE\n$     d_signbit = \"undef\"\n$     echo4 \"Nope.\"\n$ ENDIF\n$!\n$ echo4 \"Checking if kill() uses SYS$FORCEX, can't be called from a signal handler,\"\n$ echo4 \"or fails to handle a signal value of zero...\"\n$ kill_by_sigprc = \"undef\"\n$ OS\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <signal.h>\"\n$ WS \"#include <unistd.h>\"\n$ WS \"void handler1(int s) { printf(\"\"%d\"\",s); kill(getpid(),2); }\"\n$ WS \"void handler2(int s) { printf(\"\"%d\"\",s); }\"\n$ WS \"main(){\"\n$ WS \"    printf(\"\"0\"\");\"\n$ WS \"    signal(1,handler1);\"\n$ WS \"    signal(2,handler2);\"\n$ WS \"    kill(getpid(),1);\"\n$ WS \"    sleep(1);\"\n$ WS \"    kill(getpid(),0);\"\n$ WS \"    printf(\"\"3\\n\"\");\"\n$ WS \"}\"\n$ CS\n$ ON ERROR THEN CONTINUE\n$ GOSUB compile\n$ IF tmp .NES. \"0123\"\n$ THEN \n$   echo4 \"Yes, it has at least one of those limitations.\"\n$   echo4 \"Checking whether we can use SYS$SIGPRC instead...\"\n$   OS\n$   WS \"#include <stdio.h>\"\n$   WS \"#include <lib$routines.h>\"\n$   WS \"unsigned long code = 0;\"\n$   WS \"#define sys$sigprc SYS$SIGPRC\"\n$   WS \"#ifdef __cplusplus\"\n$   WS \"extern \"\"C\"\" {\"\n$   WS \"#endif\"\n$   WS \"    int sys$sigprc(unsigned int *,void *,unsigned int);\"\n$   WS \"#ifdef __cplusplus\"\n$   WS \"}\"\n$   WS \"#endif\"\n$   WS \"int handler(unsigned long *args) {\"\n$   WS \"    code = args[1];\"\n$   WS \"    return 1;\"\n$   WS \"}\"\n$   WS \"main() { \"\n$   WS \"    int iss;\"\n$   WS \"    lib$establish(handler);\"\n$   WS \"    iss = sys$sigprc(0,0,0x1234);\"\n$   WS \"    iss =  ((iss&1)==1 && code == 0x1234);\" \n$   WS \"    printf(\"\"%d\\n\"\",iss);\"\n$   WS \"}\"\n$   CS\n$   ON ERROR THEN CONTINUE\n$   GOSUB compile\n$   IF tmp .EQS. \"1\"\n$   THEN\n$       echo4 \"Yep, we can.\"\n$       kill_by_sigprc = \"define\"\n$!\n$   ELSE\n$       echo4 \"Nope, we can't.\"\n$   ENDIF\n$ ELSE\n$   echo4 \"Nope, it doesn't.\"\n$ ENDIF\n$ DELETE/SYMBOL tmp\n$!\n$! Finally the composite ones. All config\n$!\n$ myuname=\"''osname' ''myname' ''osvers' ''F$EDIT(hwname, \"TRIM\")'\"\n$!\n$ IF ccname .EQS. \"DEC\"\n$ THEN\n$   ccflags=\"/Include=[]/Standard=Relaxed_ANSI/Prefix=All/Obj=''obj_ext' ''ccflags'\"\n$ ENDIF\n$ IF ccname .EQS. \"CXX\"\n$ THEN\n$   ccflags=\"/Include=[]/Standard=ANSI/Prefix=All/Obj=''obj_ext' ''ccflags'\"\n$ ENDIF\n$ IF use_vmsdebug_perl\n$ THEN\n$   optimize=\"/List/Debug/NoOpt\"\n$   ldflags=\"/Debug/Trace/Map\"\n$   dbgprefix = \"DBG\"\n$ ELSE\n$   optimize= \"/NoList\"\n$   ldflags=\"/NoTrace/NoMap\"\n$   dbgprefix = \"\"\n$ ENDIF\n$!\n$! Okay, we've got everything configured. Now go write out a config.sh.\n$ basename_config_sh = F$PARSE(config_sh,,,\"NAME\",)+F$PARSE(config_sh,,,\"TYPE\",)\n$ echo4 \"Creating ''basename_config_sh'...\"\n$ open/write CONFIG 'config_sh'\n$ WC := write CONFIG\n$!\n$! ##BEGIN WRITE NEW CONSTANTS HERE##\n$!\n$ WC \"#!/bin/sh\"\n$ WC \"#\"\n$ WC \"# This file was produced by Configure.COM on a ''osname' system.\"\n$ WC \"#\"\n$ WC \"# Package name      : ''package'\"\n$ WC \"# Source directory  : ''src'\"\n$ WC \"# Configuration time: \" + cf_time\n$ WC \"# Configuration by  : \" + cf_by\n$ WC \"# Target system     : \" + myuname\n$ WC \"\"\n$ WC \"Makefile_SH='\" + Makefile_SH + \"'\"\n$ WC \"Mcc='\" + Mcc + \"'\"\n$ WC \"PERL_REVISION='\" + revision + \"'\"\n$ WC \"PERL_VERSION='\" + patchlevel + \"'\" \n$ WC \"PERL_SUBVERSION='\" + subversion + \"'\" \n$ WC \"PERL_API_REVISION='\" + api_revision + \"'\"\n$ WC \"PERL_API_VERSION='\" + api_version + \"'\" \n$ WC \"PERL_API_SUBVERSION='\" + api_subversion + \"'\"\n$ WC \"PERL_PATCHLEVEL='\" + perl_patchlevel + \"'\"\n$ WC \"perl_patchlevel='\" + perl_patchlevel + \"'\"\n$ WC \"PERL_CONFIG_SH='true'\"\n$ WC \"_a='\" + lib_ext + \"'\"\n$ WC \"_exe='\" + exe_ext + \"'\"\n$ WC \"_o='\" + obj_ext + \"'\"\n$ WC \"afs='undef'\"\n$ WC \"afsroot='/afs'\"\n$ WC \"alignbytes='\" + alignbytes + \"'\"\n$ WC \"aphostname='write sys$output f$edit(f$getsyi(\\\"\"SCSNODE\\\"\"),\\\"\"TRIM,LOWERCASE\\\"\")'\"\n$ WC \"api_revision='\" + api_revision + \"'\"\n$ WC \"api_subversion='\" + api_subversion + \"'\"\n$ WC \"api_version='\" + api_version + \"'\" \n$ WC \"api_versionstring='\" + version + \"'\" \n$ WC \"ar='\" + \"'\"\n$ WC \"archlib='\" + archlib + \"'\"\n$ WC \"archlibexp='\" + archlibexp + \"'\"\n$ WC \"archname='\" + archname + \"'\"\n$ WC \"baserev='\" + baserev + \"'\"\n$ WC \"bin='\" + bin + \"'\"\n$ WC \"binexp='\" + binexp + \"'\"\n$ WC \"bootstrap_charset='undef'\"\n$ WC \"builddir='\" + builddir + \"'\"\n$ WC \"byteorder='1234'\"\n$ WC \"castflags='0'\"\n$ WC \"cc='\" + perl_cc + \"'\"\n$ WC \"cccdlflags='\" + cccdlflags + \"'\"\n$ WC \"ccdlflags='\" + ccdlflags + \"'\"\n$ IF uselargefiles .OR. uselargefiles .EQS. \"define\"\n$ THEN\n$    IF usestdstat .OR. usestdstat .EQS. \"define\"\n$    THEN\n$\tccdefines = \"_USE_STD_STAT=1\"\n$    ELSE\n$\tccdefines = \"_LARGEFILE=1\"\n$    ENDIF\n$ ELSE\n$     ccdefines = \"\"\n$ ENDIF\n$ IF ccdefines .NES. \"\"\n$ THEN\n$   WC \"ccflags='\" + ccflags + \"/Define=\" + ccdefines + \"'\"\n$ ELSE\n$   WC \"ccflags='\" + ccflags + \"'\"\n$ ENDIF\n$ WC \"ccflags_uselargefiles='\" + \"'\"\n$ WC \"ccname='\" + ccname + \"'\"\n$ WC \"ccversion='\" + ccversion + \"'\"\n$ WC \"cf_by='\" + cf_by + \"'\"\n$ WC \"cf_email='\" + cf_email + \"'\"\n$ WC \"cf_time='\" + cf_time + \"'\"\n$ WC \"charbits='8'\"\n$ WC \"config_args='\" + config_args + \"'\"\n$ WC \"config_sh='\" + config_sh + \"'\"\n$ WC \"cpp_stuff='\" + cpp_stuff + \"'\"\n$ WC \"cpplast='\" + cpplast + \"'\"\n$ WC \"cppminus='\" + cppminus + \"'\"\n$ WC \"cpprun='\" + cpprun + \"'\"\n$ WC \"cppstdin='\" + cppstdin + \"'\"\n$ IF use64bitint .OR. use64bitint .EQS. \"define\"\n$ THEN\n$!  gcvt() does not work for > 16 decimal places; fallback to sprintf\n$   WC \"d_Gconvert='sprintf((b),\"\"%.*\" + (nvgformat-\"\"\"\") + \",(n),(x))'\"\n$ ELSE\n$   WC \"d_Gconvert='my_gconvert(x,n,t,b)'\"\n$ ENDIF\n$ WC \"d_PRIEUldbl='\" + d_PRIEUldbl + \"'\"\n$ WC \"d_PRIFUldbl='\" + d_PRIFUldbl + \"'\"\n$ WC \"d_PRIGUldbl='\" + d_PRIGUldbl + \"'\"\n$ WC \"d_PRIXU64='\" + d_PRIXU64 + \"'\"\n$ WC \"d_PRId64='\" + d_PRId64 + \"'\"\n$ WC \"d_PRIeldbl='\" + d_PRIeldbl + \"'\"\n$ WC \"d_PRIfldbl='\" + d_PRIfldbl + \"'\"\n$ WC \"d_PRIgldbl='\" + d_PRIgldbl + \"'\"\n$ WC \"d_PRIi64='\" + d_PRIi64 + \"'\"\n$ WC \"d_PRIo64='\" + d_PRIo64 + \"'\"\n$ WC \"d_PRIu64='\" + d_PRIu64 + \"'\"\n$ WC \"d_PRIx64='\" + d_PRIx64 + \"'\"\n$ WC \"d_SCNfldbl='\" + d_SCNfldbl + \"'\"\n$ WC \"d__fwalk='undef'\"\n$ WC \"d_accept4='undef'\"\n$ WC \"d_access='\" + d_access + \"'\"\n$ WC \"d_accessx='undef'\"\n$ WC \"d_acosh='\" + d_acosh + \"'\"\n$ WC \"d_aintl='undef'\"\n$ WC \"d_alarm='define'\"\n$ WC \"d_archlib='define'\"\n$ WC \"d_asctime64='undef'\"\n$ WC \"d_asinh='\" + d_asinh + \"'\"\n$ WC \"d_atanh='\" + d_atanh + \"'\"\n$ WC \"d_atolf='\" + d_atolf + \"'\"\n$ WC \"d_atoll='\" + d_atoll + \"'\"\n$ WC \"d_attribute_format='\" + d_attribut + \"'\"\n$ WC \"d_attribute_deprecated='undef'\"\n$ WC \"d_attribute_malloc='undef'\"\n$ WC \"d_attribute_nonnull='undef'\"\n$ WC \"d_attribute_noreturn='undef'\"\n$ WC \"d_attribute_pure='undef'\"\n$ WC \"d_attribute_unused='undef'\"\n$ WC \"d_attribute_warn_unused_result='undef'\"\n$ WC \"d_prctl='undef'\"\n$ WC \"d_prctl_set_name='undef'\"\n$ WC \"d_printf_format_null='undef'\"\n$ WC \"d_bincompat3='undef'\"\n$ WC \"d_bsd='undef'\"\n$ WC \"d_bsdgetpgrp='undef'\"\n$ WC \"d_bsdsetpgrp='undef'\"\n$ WC \"d_builtin_choose_expr='undef'\" ! GCC only\n$ WC \"d_builtin_expect='undef'\" ! GCC only\n$ WC \"d_builtin_add_overflow='undef'\" ! GCC only\n$ WC \"d_builtin_mul_overflow='undef'\" ! GCC only\n$ WC \"d_builtin_sub_overflow='undef'\" ! GCC only\n$ WC \"d_casti32='define'\"\n$ WC \"d_castneg='define'\"\n$ WC \"d_cbrt='\" + d_cbrt + \"'\"\n$ WC \"d_chown='define'\"\n$ WC \"d_chroot='undef'\"\n$ WC \"d_chsize='undef'\"\n$ WC \"d_class='undef'\"\n$ WC \"d_closedir='define'\"\n$ WC \"d_cmsghdr_s='undef'\"\n$ WC \"d_copysign='\" + d_copysign + \"'\"\n$ WC \"d_copysignl='define'\"\n$ WC \"d_cplusplus='\" + d_cplusplus + \"'\"\n$ WC \"d_crypt='define'\"\n$ WC \"d_csh='undef'\"\n$ WC \"d_ctermid='define'\"\n$ WC \"d_ctime64='undef'\"\n$ WC \"d_cuserid='define'\"\n$ WC \"d_c99_variadic_macros='undef'\"\n$ WC \"d_dbl_dig='define'\"\n$ WC \"d_dbminitproto='undef'\"\n$ WC \"d_difftime='define'\"\n$ WC \"d_difftime64='undef'\"\n$ WC \"d_dir_dd_fd='undef'\"\n$ WC \"d_dirfd='undef'\"\n$ WC \"d_dirnamlen='define'\"\n$ WC \"d_dladdr='undef'\"\n$ IF (\"''F$EXTRACT(1,3, F$GETSYI(\"\"VERSION\"\"))'\".GES.\"7.2\")\n$ THEN\n$   WC \"d_dlerror='define'\"\n$   WC \"d_dlopen='define'\"\n$ ELSE\n$   WC \"d_dlerror='undef'\"\n$   WC \"d_dlopen='undef'\"\n$ ENDIF\n$ WC \"d_dlsymun='undef'\"\n$ WC \"d_backtrace='undef'\"\n$ WC \"d_dosuid='undef'\"\n$ WC \"d_double_has_inf='\" + d_double_has_inf + \"'\"\n$ WC \"d_double_has_nan='\" + d_double_has_nan + \"'\"\n$ WC \"d_double_has_negative_zero='\" + d_double_has_negative_zero + \"'\"\n$ WC \"d_double_has_subnormals='\" + d_double_has_subnormals + \"'\"\n$ WC \"d_double_style_cray='undef'\"\n$ WC \"d_double_style_ibm='undef'\"\n$ WC \"d_double_style_ieee='\" + d_double_style_ieee + \"'\"\n$ WC \"d_double_style_vax='\" + d_double_style_vax + \"'\"\n$ WC \"d_drand48proto='\" + d_drand48proto + \"'\"\n$ WC \"d_dup2='define'\"\n$ WC \"d_dup3='undef'\"\n$ WC \"d_duplocale='undef'\"\n$ WC \"d_eaccess='undef'\"\n$ WC \"d_endgrent='define'\"\n$ WC \"d_endhent='\" + d_endhent + \"'\"\n$ WC \"d_endnent='\" + d_endnent + \"'\"\n$ WC \"d_endpent='\" + d_endpent + \"'\"\n$ WC \"d_endpwent='define'\"\n$ WC \"d_endsent='\" + d_endsent + \"'\"\n$ WC \"d_eofnblk='undef'\"\n$ WC \"d_erf='\" + d_erf + \"'\"\n$ WC \"d_erfc='\" + d_erfc + \"'\"\n$ WC \"d_eunice='undef'\"\n$ WC \"d_exp2='\" + d_exp2 + \"'\"\n$ WC \"d_expm1='\" + d_expm1 + \"'\"\n$ IF (\"''F$EXTRACT(1,3, F$GETSYI(\"\"VERSION\"\"))'\".GES.\"8.3\")\n$ THEN\n$   WC \"d_fchmod='define'\"\n$ ELSE\n$   WC \"d_fchmod='undef'\"\n$ ENDIF\n$ WC \"d_fchdir='undef'\"\n$ WC \"d_fchown='define'\"\n$ WC \"d_fcntl='\" + d_fcntl + \"'\"\n$ WC \"d_fcntl_can_lock='\" + d_fcntl_can_lock + \"'\"\n$ WC \"d_fd_set='\" + d_fd_set + \"'\"\n$ WC \"d_fd_macros='define'\"\n$ WC \"d_fdclose='undef'\"\n$ WC \"d_fdim='\" + d_fdim + \"'\"\n$ WC \"d_fds_bits='define'\"\n$ WC \"d_fegetround='undef'\"\n$ WC \"d_fgetpos='define'\"\n$ IF use_ieee_math\n$ THEN\n$   WC \"d_finite='define'\"\n$   WC \"d_finitel='define'\"\n$ ELSE\n$   WC \"d_finite='undef'\"\n$   WC \"d_finitel='undef'\"\n$ ENDIF\n$ WC \"d_flexfnam='define'\"\n$ WC \"d_flock='undef'\"\n$ WC \"d_flockproto='undef'\"\n$ WC \"d_fma='\" + d_fma + \"'\"\n$ WC \"d_fmax='\" + d_fmax + \"'\"\n$ WC \"d_fmin='\" + d_fmin + \"'\"\n$ WC \"d_fork='undef'\"\n$ WC \"d_fp_class='undef'\"\n$ WC \"d_fp_classify='\" + d_fp_classify + \"'\"\n$ WC \"d_fp_classify='undef'\"\n$ WC \"d_fp_classl='undef'\"\n$ WC \"d_fpathconf='\" + d_fpathconf + \"'\"\n$ WC \"d_fpclass='undef'\"\n$ WC \"d_fpclassify='undef'\"\n$ WC \"d_fpclassl='undef'\"\n$ WC \"d_fpgetround='undef'\"\n$ WC \"d_fpos64_t='\" + d_fpos64_t + \"'\"\n$ WC \"d_frexpl='\" + d_frexpl + \"'\"\n$ WC \"d_fs_data_s='undef'\"\n$ WC \"d_fseeko='\" + d_fseeko + \"'\"\n$ WC \"d_fsetpos='define'\"\n$ WC \"d_fstatfs='undef'\"\n$ WC \"d_fstatvfs='\" + d_fstatvfs + \"'\"\n$ WC \"d_fsync='define'\"\n$ WC \"d_ftello='\" + d_ftello + \"'\"\n$ WC \"d_ftime='define'\"\n$ WC \"d_futimes='undef'\"\n$ WC \"d_gdbmndbm_h_uses_prototypes='undef'\"\n$ WC \"d_gdbm_ndbm_h_uses_prototypes='undef'\"\n$ WC \"d_getaddrinfo='define'\"\n$ WC \"d_getcwd='define'\"\n$ WC \"d_getespwnam='undef'\"\n$ WC \"d_getfsstat='undef'\"\n$ WC \"d_getgrent='define'\"\n$ WC \"d_getgrps='undef'\"\n$ WC \"d_gethbyaddr='\" + d_gethbyaddr + \"'\"\n$ WC \"d_gethbyname='\" + d_gethbyname + \"'\"\n$ WC \"d_gethent='\" + d_gethent + \"'\"\n$ WC \"d_gethname='\" + d_gethname + \"'\"\n$ WC \"d_gethostprotos='\" + d_gethostprotos + \"'\"\n$ WC \"d_getitimer='\" + d_getitimer + \"'\"\n$ WC \"d_getlogin='define'\"\n$ WC \"d_getmnt='undef'\"\n$ WC \"d_getmntent='undef'\"\n$ WC \"d_getnameinfo='define'\"\n$ WC \"d_getnbyaddr='\" + d_getnbyaddr + \"'\"\n$ WC \"d_getnbyname='\" + d_getnbyname + \"'\"\n$ WC \"d_getnent='\" + d_getnent + \"'\"\n$ WC \"d_getnetprotos='\" + d_getnetprotos + \"'\"\n$ WC \"d_getpagsz='undef'\"\n$ WC \"d_getpbyname='\" + d_getpbyname + \"'\"\n$ WC \"d_getpbynumber='\" + d_getpbynumber + \"'\"\n$ WC \"d_getpent='\" + d_getpent + \"'\"\n$ WC \"d_getpgid='\" + d_getpgid + \"'\"\n$ WC \"d_getpgrp2='undef'\"\n$ WC \"d_getpgrp='\" + d_getpgrp + \"'\"\n$ WC \"d_getppid='\" + d_getppid + \"'\"\n$ WC \"d_getprior='undef'\"\n$ WC \"d_getprotoprotos='\" + d_getprotoprotos + \"'\"\n$ WC \"d_getprpwnam='undef'\"\n$ WC \"d_getpwent='define'\"\n$ WC \"d_getsbyname='\" + d_getsbyname + \"'\"\n$ WC \"d_getsbyport='\" + d_getsbyport + \"'\"\n$ WC \"d_getsent='\" + d_getsent + \"'\"\n$ WC \"d_getservprotos='\" + d_getservprotos + \"'\"\n$ WC \"d_getspnam='undef'\"\n$ WC \"d_gettimeod='\" + d_gettimeod + \"'\"\n$ WC \"d_gmtime64='undef'\"\n$ WC \"d_gnulibc='undef'\"\n$ WC \"d_grpasswd='undef'\"\n$ WC \"d_hasmntopt='undef'\"\n$ WC \"d_htonl='\" + d_htonl + \"'\"\n$ WC \"d_hypot='\" + d_hypot + \"'\"\n$ WC \"d_ilogb='\" + d_ilogb + \"'\"\n$ WC \"d_ilogbl='undef'\"\n$ WC \"d_inc_version_list='undef'\"\n$ WC \"d_index='\" + d_index + \"'\"\n$ WC \"d_inetaton='define'\"\n$ WC \"d_inetntop='define'\"\n$ WC \"d_inetpton='define'\"\n$ WC \"d_int64_t='\" + d_int64_t + \"'\"\n$ WC \"d_ip_mreq='define'\"\n$ WC \"d_ip_mreq_source='undef'\"\n$ WC \"d_ipv6_mreq='define'\"\n$ WC \"d_ipv6_mreq_source='undef'\"\n$ WC \"d_isascii='define'\"\n$ WC \"d_isblank='undef'\"\n$ WC \"d_isfinite='undef'\"\n$ WC \"d_isfinitel='undef'\"\n$ WC \"d_isinf='undef'\"\n$ WC \"d_isinfl='undef'\"\n$ WC \"d_isless='undef'\"\n$ WC \"d_isnan='\" + d_isnan + \"'\"\n$ WC \"d_isnanl='\" + d_isnanl + \"'\"\n$ WC \"d_isnormal='\" + d_isnormal + \"'\"\n$ WC \"d_j0='\" + d_j0 + \"'\"\n$ WC \"d_j0l='undef'\"\n$ WC \"d_killpg='define'\"\n$ WC \"d_lchown='\" + d_lchown + \"'\"\n$ WC \"d_ldbl_dig='define'\"\n$ WC \"d_ldexpl='\" + d_ldexpl + \"'\"\n$ WC \"d_lgamma='\" + d_lgamma + \"'\"\n$ WC \"d_libm_lib_version='undef'\"\n$ WC \"d_link='\" + d_link + \"'\"\n$ WC \"d_llrint='undef'\"\n$ WC \"d_llrintl='undef'\"\n$ WC \"d_llround='undef'\"\n$ WC \"d_llroundl='undef'\"\n$ WC \"d_llseek='undef'\"\n$ WC \"d_localeconv_l='undef'\"\n$ WC \"d_localtime64='undef'\"\n$ WC \"d_locconv='\" + d_locconv + \"'\"\n$ WC \"d_lc_monetary_2008='undef'\"\n$ WC \"d_lockf='undef'\"\n$ WC \"d_log1p='\" + d_log1p + \"'\"\n$ WC \"d_log2='\" + d_log2 + \"'\"\n$ WC \"d_logb='\" + d_logb + \"'\"\n$ WC \"d_long_double_style_ieee='\" + d_long_double_style_ieee + \"'\"\n$ WC \"d_long_double_style_ieee_doubledouble='undef'\"\n$ WC \"d_long_double_style_ieee_extended='\" + d_long_double_style_ieee_extended + \"'\"\n$ WC \"d_long_double_style_ieee_std='\" + d_long_double_style_ieee_std + \"'\"\n$ WC \"d_long_double_style_vax='\" + d_long_double_style_vax + \"'\"\n$ WC \"d_longdbl='\" + d_longdbl + \"'\"\n$ WC \"d_longlong='\" + d_longlong + \"'\"\n$ WC \"d_lrint='\" + d_lrint + \"'\"\n$ WC \"d_lrintl='\" + d_lrintl + \"'\"\n$ WC \"d_lround='\" + d_lround + \"'\"\n$ WC \"d_lroundl='\" + d_lroundl + \"'\"\n$ WC \"d_lseekproto='define'\"\n$ WC \"d_lstat='\" + d_lstat + \"'\"\n$ WC \"d_madvise='undef'\"\n$ WC \"d_malloc_size='undef'\"\n$ WC \"d_malloc_good_size='undef'\"\n$ WC \"d_mblen='\" + d_mblen + \"'\"\n$ WC \"d_mbrlen='define'\"\n$ WC \"d_mbrtowc='define'\"\n$ WC \"d_mbstowcs='\" + d_mbstowcs + \"'\"\n$ WC \"d_mbtowc='\" + d_mbtowc + \"'\"\n$ WC \"d_memmem='undef'\"\n$ WC \"d_memrchr='\" + d_memrchr + \"'\"\n$ WC \"d_mkdir='define'\"\n$ WC \"d_mkdtemp='\" + d_mkdtemp + \"'\"\n$ WC \"d_mkfifo='undef'\"\n$ WC \"d_mknod='undef'\"\n$ WC \"d_mkostemp='undef'\"\n$ WC \"d_mkstemp='\" + d_mkstemp + \"'\"\n$ WC \"d_mkstemps='\" + d_mkstemps + \"'\"\n$ WC \"d_mktime='\" + d_mktime + \"'\"\n$ WC \"d_mktime64='undef'\"\n$ WC \"d_mmap='\" + d_mmap + \"'\"\n$ WC \"d_modfl='\" + d_modfl + \"'\"\n$ WC \"d_modflproto='\" + d_modflproto + \"'\"\n$ WC \"d_modfl_pow32_bug='undef'\"\n$ WC \"d_mprotect='\" + d_mprotect + \"'\"\n$ WC \"d_msg='undef'\"\n$ WC \"d_msgctl='undef'\"\n$ WC \"d_msgget='undef'\"\n$ WC \"d_msgrcv='undef'\"\n$ WC \"d_msgsnd='undef'\"\n$ WC \"d_msg_ctrunc='undef'\"\n$ WC \"d_msg_dontroute='undef'\"\n$ WC \"d_msg_oob='undef'\"\n$ WC \"d_msg_peek='undef'\"\n$ WC \"d_msg_proxy='undef'\"\n$ WC \"d_msghdr_s='undef'\"\n$ WC \"d_msync='\" + d_msync + \"'\"\n$ WC \"d_munmap='\" + d_munmap + \"'\"\n$ WC \"d_mymalloc='\" + d_mymalloc + \"'\"\n$ WC \"d_nan='undef'\"\n$ WC \"d_nanosleep='\" + d_nanosleep + \"'\"\n$ WC \"d_ndbm='undef'\"\n$ WC \"d_ndbm_h_uses_prototypes='undef'\"\n$ WC \"d_nearbyint='undef'\"\n$ WC \"d_nextafter='\" + d_nextafter + \"'\"\n$ WC \"d_nexttoward='\" + d_nexttoward + \"'\"\n$ WC \"d_nice='define'\"\n$ WC \"d_nl_langinfo='\" + d_nl_langinfo + \"'\"\n$ WC \"d_nv_preserves_uv='\" + d_nv_preserves_uv + \"'\"\n$ WC \"nv_overflows_integers_at='\" + nv_overflows_integers_at + \"'\"\n$ WC \"nv_preserves_uv_bits='\" + nv_preserves_uv_bits + \"'\"\n$ WC \"d_nv_zero_is_allbits_zero='define'\"\n$ WC \"d_off64_t='\" + d_off64_t + \"'\"\n$ WC \"d_old_pthread_create_joinable='\" + d_old_pthread_create_joinable + \"'\"\n$ WC \"d_oldarchlib='define'\"\n$ WC \"d_oldpthreads='\" + d_oldpthreads + \"'\"\n$ WC \"d_oldsock='undef'\"\n$ WC \"d_open3='define'\"\n$ WC \"d_openat='undef'\"\n$ WC \"d_unlinkat='undef'\"\n$ WC \"d_renameat='undef'\"\n$ WC \"d_linkat='undef'\"\n$ WC \"d_fchmodat='undef'\"\n$ WC \"d_pathconf='\" + d_pathconf + \"'\"\n$ WC \"d_pause='define'\"\n$ WC \"d_perl_otherlibdirs='undef'\"\n$ WC \"d_phostname='\" + d_phostname + \"'\"\n$ WC \"d_pipe='define'\"\n$ WC \"d_pipe2='undef'\"\n$ WC \"d_poll='\" + d_poll + \"'\"\n$ WC \"d_portable='define'\"\n$ WC \"d_procselfexe='undef'\"\n$ WC \"d_pseudofork='undef'\"\n$ WC \"d_pthread_atfork='undef'\"\n$ WC \"d_pthread_attr_setscope='\" + d_pthread_attr_setscope + \"'\"\n$ WC \"d_pthread_yield='\" + d_pthread_yield + \"'\"\n$ WC \"d_pthreads_created_joinable='\" + d_pthreads_created_joinable + \"'\"\n$ WC \"d_ptrdiff_t='define'\"\n$ WC \"d_pwage='undef'\"\n$ WC \"d_pwchange='undef'\"\n$ WC \"d_pwclass='undef'\"\n$ WC \"d_pwcomment='define'\"\n$ WC \"d_pwexpire='undef'\"\n$ WC \"d_pwgecos='define'\"\n$ WC \"d_pwpasswd='define'\"\n$ WC \"d_pwquota='undef'\"\n$ WC \"d_qgcvt='undef'\"\n$ WC \"d_quad='\" + d_quad + \"'\"\n$ WC \"d_re_comp='undef'\"\n$ WC \"d_readdir='define'\"\n$ WC \"d_readlink='\" + d_readlink + \"'\"\n$ WC \"d_readv='define'\"\n$ WC \"d_realpath='\" + d_realpath + \"'\"\n$ WC \"d_recvmsg='define'\"\n$ WC \"d_regcmp='undef'\"\n$ WC \"d_regcomp='undef'\"\n$ WC \"d_remainder='\" + d_remainder + \"'\"\n$ WC \"d_remquo='\" + d_remquo + \"'\"\n$ WC \"d_rename='define'\"\n$ WC \"d_rewinddir='define'\"\n$ WC \"d_rint='\" + d_rint + \"'\"\n$ WC \"d_rmdir='define'\"\n$ WC \"d_round='undef'\"\n$ WC \"d_sbrkproto='define'\"\n$ WC \"d_scalbn='undef'\"\n$ WC \"d_scalbnl='undef'\"\n$ WC \"d_sched_yield='\" + d_sched_yield + \"'\"\n$ WC \"d_scm_rights='undef'\"\n$ WC \"d_seekdir='define'\"\n$ WC \"d_select='\" + d_select + \"'\"\n$ IF (\"''F$EXTRACT(1,3, F$GETSYI(\"\"VERSION\"\"))'\".GES.\"8.4\")\n$ THEN\n$   WC \"d_sem='define'\"\n$   WC \"d_semctl='define'\"\n$   WC \"d_semctl_semid_ds='define'\"\n$   WC \"d_semctl_semun='define'\"\n$   WC \"d_semget='define'\"\n$   WC \"d_semop='define'\"\n$ ELSE\n$   WC \"d_sem='undef'\"\n$   WC \"d_semctl='undef'\"\n$   WC \"d_semctl_semid_ds='undef'\"\n$   WC \"d_semctl_semun='undef'\"\n$   WC \"d_semget='undef'\"\n$   WC \"d_semop='undef'\"\n$ ENDIF\n$ WC \"d_sendmsg='define'\"\n$ WC \"d_setegid='undef'\"\n$ WC \"d_setenv='\" + d_setenv + \"'\"\n$ WC \"d_seteuid='\" + d_seteuid + \"'\"\n$ WC \"d_setgrent='\" + d_setgrent + \"'\"\n$ WC \"d_setgrps='undef'\"\n$ WC \"d_sethent='\" + d_sethent + \"'\"\n$ WC \"d_setitimer='\" + d_setitimer + \"'\"\n$ WC \"d_setlinebuf='undef'\"\n$ WC \"d_setlocale='\" + d_setlocale + \"'\"\n$ WC \"d_setlocale_accepts_any_locale_name='\" + d_setlocale_accepts_any_locale_name + \"'\"\n$ WC \"d_setnent='\" + d_setnent + \"'\"\n$ WC \"d_setpent='\" + d_setpent + \"'\"\n$ WC \"d_setpgid='\" + d_setpgid + \"'\"\n$ WC \"d_setpgrp2='undef'\"\n$ WC \"d_setpgrp='\" + d_setpgrp + \"'\"\n$ WC \"d_setprior='undef'\"\n$ WC \"d_setproctitle='\" + d_setproctitle + \"'\"\n$ WC \"d_setpwent='define'\"\n$ WC \"d_setregid='\" + d_setregid + \"'\"\n$ WC \"d_setresgid='undef'\"\n$ WC \"d_setresuid='undef'\"\n$ WC \"d_setreuid='\" + d_setreuid + \"'\"\n$ WC \"d_setrgid='undef'\"\n$ WC \"d_setruid='undef'\"\n$ WC \"d_setsent='\" + d_setsent + \"'\"\n$ WC \"d_setsid='\" + d_setsid + \"'\"\n$ WC \"d_setvbuf='\" + d_setvbuf + \"'\"\n$ WC \"d_shm='\" + d_shm + \"'\"\n$ WC \"d_shmat='\" + d_shmat + \"'\"\n$ WC \"d_shmatprototype='\" + d_shmatprototype + \"'\"\n$ WC \"d_shmctl='\" + d_shmctl + \"'\"\n$ WC \"d_shmdt='\" + d_shmdt + \"'\"\n$ WC \"d_shmget='\" + d_shmget + \"'\"\n$ WC \"d_sigaction='\" + d_sigaction + \"'\"\n$ WC \"d_siginfo_si_addr='\" + d_siginfo_si_addr + \"'\"\n$ WC \"d_siginfo_si_band='\" + d_siginfo_si_band + \"'\"\n$ WC \"d_siginfo_si_errno='\" + d_siginfo_si_errno + \"'\"\n$ WC \"d_siginfo_si_fd='\" + d_siginfo_si_fd + \"'\"\n$ WC \"d_siginfo_si_pid='\" + d_siginfo_si_pid + \"'\"\n$ WC \"d_siginfo_si_status='\" + d_siginfo_si_status + \"'\"\n$ WC \"d_siginfo_si_uid='\" + d_siginfo_si_uid + \"'\"\n$ WC \"d_siginfo_si_value='\" + d_siginfo_si_value + \"'\"\n$ WC \"d_signbit='\" + d_signbit + \"'\"\n$ WC \"d_sigprocmask='\" + d_sigprocmask + \"'\"\n$ WC \"d_sigsetjmp='\" + d_sigsetjmp + \"'\"\n$ WC \"d_sin6_scope_id='\" + d_sin6_scope_id + \"'\"\n$ WC \"d_sitearch='define'\"\n$ WC \"d_sockaddr_in6='define'\"\n$ WC \"d_sockaddr_sa_len='\" + d_sockaddr_sa_len + \"'\"\n$ WC \"d_sockatmark='undef'\"\n$ WC \"d_sockatmarkproto='undef'\"\n$ WC \"d_socket='\" + d_socket + \"'\"\n$ WC \"d_socklen_t='\" + d_socklen_t + \"'\"\n$ WC \"d_sockpair='\" + d_sockpair + \"'\"\n$ WC \"d_socks5_init='undef'\"\n$ WC \"d_sqrtl='define'\"\n$ WC \"d_sresgproto='undef'\"\n$ WC \"d_sresgproto='undef'\"\n$ WC \"d_sresproto='undef'\"\n$ WC \"d_sresuproto='undef'\"\n$ WC \"d_stat='define'\"\n$ WC \"d_statblks='undef'\"\n$ WC \"d_statfs_f_flags='undef'\"\n$ WC \"d_statfs_s='undef'\"\n$ WC \"d_statfsflags='undef'\"\n$ WC \"d_static_inline='define'\"\n$ WC \"d_stdio_cnt_lval='\" + d_stdio_cnt_lval + \"'\"\n$ WC \"d_stdio_ptr_lval='\" + d_stdio_ptr_lval + \"'\"\n$ WC \"d_stdio_ptr_lval_nochange_cnt='\" + d_stdio_ptr_lval_nochange_cnt + \"'\"\n$ WC \"d_stdio_ptr_lval_sets_cnt='\" + d_stdio_ptr_lval_sets_cnt + \"'\"\n$ WC \"d_stdio_stream_array='undef'\"\n$ WC \"d_stdiobase='\" + d_stdiobase + \"'\"\n$ WC \"d_stdstdio='\" + d_stdstdio + \"'\"\n$ WC \"d_faststdio='\" + d_faststdio + \"'\"\n$ WC \"d_statvfs='\" + d_statvfs + \"'\"\n$ WC \"d_strcoll='\" + d_strcoll + \"'\"\n$ WC \"d_strftime='define'\"\n$ WC \"d_strlcat='undef'\"\n$ WC \"d_strlcpy='undef'\"\n$ WC \"d_strnlen='\" + d_strnlen + \"'\"\n$ WC \"d_strtod='define'\"\n$ WC \"d_strtod_l='undef'\"\n$ WC \"d_strtol='define'\"\n$ WC \"d_strtold='\" + d_strtold + \"'\"\n$ WC \"d_strtold_l='undef'\"\n$ WC \"d_strtoll='\" + d_strtoll + \"'\"\n$ WC \"d_strtoq='\" + d_strtoq + \"'\"\n$ WC \"d_strtoul='define'\"\n$ WC \"d_strtoull='\" + d_strtoull + \"'\"\n$ WC \"d_strtouq='\" + d_strtouq + \"'\"\n$ WC \"d_strxfrm='\" + d_strxfrm  + \"'\"\n$ WC \"d_suidsafe='undef'\"\n$ WC \"d_symlink='\" + d_symlink + \"'\"\n$ WC \"d_syscall='undef'\"\n$ WC \"d_syscallproto='undef'\"\n$ WC \"d_sysconf='\" + d_sysconf + \"'\"\n$ WC \"d_sysernlst='undef'\"\n$ WC \"d_syserrlst='undef'\"\n$ WC \"d_system='define'\"\n$ WC \"d_tcgetpgrp='undef'\"\n$ WC \"d_tcsetpgrp='undef'\"\n$ WC \"d_telldir='define'\"\n$ WC \"d_telldirproto='define'\"\n$ WC \"d_tgamma='\" + d_tgamma + \"'\"\n$ WC \"d_thread_safe_nl_langinfo_l='undef'\"\n$ WC \"d_time='define'\"\n$ WC \"d_timegm='undef'\"\n$ WC \"d_times='define'\"\n$ IF (\"''F$EXTRACT(1,3, F$GETSYI(\"\"VERSION\"\"))'\".GES.\"7.0\")\n$ THEN\n$   WC \"d_tm_tm_gmtoff='define'\"\n$   WC \"d_tm_tm_zone='define'\"\n$ ELSE\n$   WC \"d_tm_tm_gmtoff='undef'\"\n$   WC \"d_tm_tm_zone='undef'\"\n$ ENDIF\n$ WC \"d_truncate='\" + d_truncate + \"'\"\n$ WC \"d_trunc='\" + d_trunc + \"'\"\n$ WC \"d_truncl='\" + d_truncl + \"'\"\n$ WC \"d_tzname='\" + d_tzname + \"'\"\n$ WC \"d_u32align='define'\"\n$ WC \"d_ualarm='\" + d_ualarm + \"'\"\n$ WC \"d_umask='define'\"\n$ WC \"d_uname='\" + d_uname + \"'\"\n$ WC \"d_union_semun='undef'\"\n$ WC \"d_unlink_all_versions='\" + d_unlink_all_versions + \"'\"\t! VMS-specific\n$ WC \"d_unordered='undef'\"\n$ WC \"d_unsetenv='\" + d_unsetenv + \"'\"\n$ WC \"d_clearenv='\" + d_clearenv + \"'\"\n$ WC \"d_usleep='\" + d_usleep + \"'\"\n$ WC \"d_usleepproto='\" + d_usleep + \"'\"\n$ WC \"d_ustat='undef'\"\n$ WC \"d_vendorarch='undef'\"\n$ WC \"d_vendorbin='undef'\"\n$ WC \"d_vendorlib='undef'\"\n$ WC \"d_vendorscript='undef'\"\n$ WC \"d_vfork='define'\"\n$ WC \"d_vms_case_sensitive_symbols='\" + d_vms_be_case_sensitive + \"'\" ! VMS\n$ WC \"d_vms_do_sockets='\" + d_vms_do_sockets + \"'\" ! VMS\n$ WC \"d_vms_shorten_long_symbols='\" + d_vms_shorten_long_symbols + \"'\" ! VMS\n$ WC \"d_void_closedir='define'\"\n$ WC \"d_voidsig='undef'\"\n$ WC \"d_voidtty='\" + \"'\"\n$ WC \"d_vsnprintf='\" + d_vsnprintf + \"'\"\n$ WC \"d_wait4='\" + d_wait4 + \"'\"\n$ WC \"d_waitpid='define'\"\n$ WC \"d_wcscmp='define'\"\n$ WC \"d_wcstombs='define'\"\n$ WC \"d_wcsxfrm='define'\"\n$ WC \"d_wctomb='define'\"\n$ WC \"d_writev='define'\"\n$ WC \"d_xenix='undef'\"\n$ WC \"db_hashtype=' '\"\n$ WC \"db_prefixtype=' '\"\n$ WC \"db_version_major='\" + \"'\"\n$ WC \"db_version_minor='\" + \"'\"\n$ WC \"db_version_patch='\" + \"'\"\n$ WC \"dbgprefix='\" + dbgprefix + \"'\"\n$ WC \"devtype='\" + devtype + \"'\"\n$ WC \"default_inc_excludes_dot='\" + default_inc_excludes_dot + \"'\"\n$ WC \"direntrytype='struct dirent'\"\n$ WC \"dlext='\" + dlext + \"'\"\n$ WC \"dlobj='\" + dlobj + \"'\"\n$ WC \"dlsrc='dl_vms.xs'\"\n$ WC \"doublekind='3'\"\n$ WC \"doubleinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f'\"\n$ WC \"doublenanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f'\"\n$ WC \"doublemantbits='\" + doublemantbits + \"'\"\n$ WC \"doublesize='\" + doublesize + \"'\"\n$ WC \"drand01='\" + drand01 + \"'\"\n$ WC \"dtrace='\" + \"'\"\n$!\n$! The dynamic_ext symbol may be quite long\n$!\n$ tmp = \"dynamic_ext='\" + dynamic_ext + \"'\"\n$ WC/symbol tmp\n$ DELETE/SYMBOL tmp\n$ WC \"eagain=' '\"\n$ WC \"ebcdic='undef'\"\n$ WC \"embedmymalloc='\" + usemymalloc + \"'\"\n$ WC \"eunicefix=':'\"\n$ WC \"exe_ext='\" + exe_ext + \"'\"\n$!\n$! The extensions symbols may be quite long\n$!\n$ WC/symbol \"extensions='\", nonxs_ext, \" \", nonxs_ext2, \" \", dynamic_ext, \"'\"\n$ WC \"fflushNULL='define'\"\n$ WC \"fflushall='undef'\"\n$ WC \"fpostype='fpos_t'\"\n$ WC \"freetype='void'\"\n$ WC \"full_ar='\" + \"'\"\n$ WC \"full_csh='\" + \" '\"\n$ WC \"full_sed='_NLA0:'\"\n$ WC \"gccversion='\" + gccversion + \"'\"\n$ WC \"gidformat='lu'\"\n$ WC \"gidsign='1'\"\n$ WC \"gidsize='4'\"\n$ WC \"gidtype='\" + gidtype + \"'\"\n$ WC \"groupstype='Gid_t'\"\n$ WC \"h_fcntl='false'\"\n$ WC \"h_sysfile='false'\"\n$ WC \"hint='none'\"\n$ WC \"hintfile='\" + \"'\"\n$ WC \"i16size='\" + i16size + \"'\"\n$ WC \"i16type='\" + i16type + \"'\"\n$ WC \"i32size='\" + i32size + \"'\"\n$ WC \"i32type='\" + i32type + \"'\"\n$ WC \"i64size='\" + i64size + \"'\"\n$ WC \"i64type='\" + i64type + \"'\"\n$ WC \"i8size='\" + i8size + \"'\"\n$ WC \"i8type='\" + i8type + \"'\"\n$ WC \"i_arpainet='\" + i_arpainet + \"'\"\n$ WC \"i_bfd='undef'\"\n$ WC \"i_bsdioctl='undef'\"\n$ WC \"i_crypt='undef'\"\n$ WC \"i_db='undef'\"\n$ WC \"i_dbm='undef'\"\n$ WC \"i_dirent='undef'\"\t! we roll our own\n$ WC \"i_dlfcn='undef'\"\n$ WC \"i_execinfo='undef'\"\n$ WC \"i_fcntl='\" + i_fcntl + \"'\"\n$ WC \"i_fenv='undef'\"\n$ WC \"i_fp='undef'\"\n$ WC \"i_fp_class='undef'\"\n$ WC \"i_gdbm='undef'\"\n$ WC \"i_gdbm_ndbm='undef'\"\n$ WC \"i_gdbmndbm='undef'\"\n$ WC \"i_grp='\" + i_grp + \"'\"\n$ WC \"i_ieeefp='undef'\"\n$ WC \"i_inttypes='\" + i_inttypes + \"'\"\n$ WC \"i_langinfo='\" + i_langinfo + \"'\"\n$ WC \"i_libutil='\" + i_libutil + \"'\"\n$ WC \"i_locale='\" + i_locale + \"'\"\n$ WC \"i_machcthr='undef'\"\n$ WC \"i_machcthreads='undef'\"\n$ WC \"i_malloc='undef'\"\n$ WC \"i_mallocmalloc='undef'\"\n$ WC \"i_mntent='undef'\"\n$ WC \"i_ndbm='undef'\"\n$ WC \"i_netdb='\" + i_netdb + \"'\"\n$ WC \"i_neterrno='define'\"\n$ WC \"i_netinettcp='\" + i_netinettcp + \"'\"\n$ WC \"i_niin='\" + i_niin + \"'\"\n$ WC \"i_poll='\" + i_poll + \"'\"\n$ WC \"i_prot='undef'\"\n$ WC \"i_pthread='define'\"\n$ WC \"i_pwd='undef'\"\n$ WC \"i_quadmath='undef'\"\n$ WC \"i_rpcsvcdbm='undef'\"\n$ WC \"i_sgtty='undef'\"\n$ WC \"i_shadow='\" + i_shadow + \"'\"\n$ WC \"i_socks='\" + i_socks + \"'\"\n$ IF ccname .EQS. \"DEC\" .AND. F$INTEGER(Dec_C_Version).GE.60400000\n$ THEN\n$   WC \"i_stdbool='define'\"\n$ ELSE\n$   WC \"i_stdbool='undef'\"\n$ ENDIF\n$ WC \"i_stdint='undef'\"\n$ WC \"i_stdlib='define'\"\n$ WC \"i_sunmath='undef'\"\n$ WC \"i_sysaccess='\" + i_sysaccess + \"'\"\n$ WC \"i_sysdir='undef'\"\n$ WC \"i_sysfile='\" + i_sysfile + \"'\"\n$ WC \"i_sysfilio='undef'\"\n$ WC \"i_sysin='undef'\"\n$ WC \"i_sysioctl='\" + i_sysioctl + \"'\"\n$ WC \"i_syslog='\" + i_syslog + \"'\"\n$ WC \"i_sysmman='undef'\"\n$ WC \"i_sysmode='\" + i_sysmode + \"'\"\n$ WC \"i_sysmount='undef'\"\n$ WC \"i_sysndir='undef'\"\n$ WC \"i_sysparam='undef'\"\n$ WC \"i_syspoll='\" + i_syspoll + \"'\"\n$ WC \"i_sysresrc='undef'\"\n$ WC \"i_syssecrt='\" + i_syssecrt + \"'\"\n$ WC \"i_sysselct='undef'\"\n$ WC \"i_syssockio='undef'\"\n$ WC \"i_sysstat='define'\"\n$ WC \"i_sysstatfs='undef'\"\n$ WC \"i_sysstatvfs='\" + i_sysstatvfs + \"'\"\n$ WC \"i_systime='undef'\"\n$ WC \"i_systimek='undef'\"\n$ WC \"i_systimes='undef'\"\n$ WC \"i_systypes='define'\"\n$ WC \"i_sysuio='\" + i_sysuio + \"'\"\n$ WC \"i_sysun='\" + i_sysun + \"'\"\n$ WC \"i_sysutsname='\" + i_sysutsname + \"'\"\n$ WC \"i_sysvfs='undef'\"\n$ WC \"i_syswait='undef'\"\n$ WC \"i_termio='undef'\"\n$ WC \"i_termios='undef'\"\n$ WC \"i_time='define'\"\n$ WC \"i_unistd='\" + i_unistd + \"'\"\n$ WC \"i_ustat='undef'\"\n$ WC \"i_utime='\" + i_utime + \"'\"\n$ WC \"i_vfork='undef'\"\n$ WC \"i_wchar='define'\"\n$ WC \"i_wctype='define'\"\n$ WC \"i_xlocale='undef'\"\n$ WC \"inc_version_list='0'\"\n$ WC \"inc_version_list_init='0'\"\n$ WC \"installarchlib='\" + installarchlib + \"'\"\n$ WC \"installbin='\" + installbin + \"'\"\n$ WC \"installman1dir='\" + installman1dir + \"'\"\n$ WC \"installman3dir='\" + installman3dir + \"'\"\n$ WC \"installprefix='\" + vms_prefix + \"'\"\n$ WC \"installprefixexp='/\" + vms_prefix + \"'\"\n$ WC \"installprivlib='\" + installprivlib + \"'\"\n$ WC \"installscript='\" + installscript + \"'\"\n$ WC \"installsitearch='\" + installsitearch + \"'\"\n$ WC \"installsitebin='\" + sitebin + \"'\"\n$ WC \"installsitelib='\" + installsitelib + \"'\"\n$ WC \"installusrbinperl='undef'\"\n$ WC \"intsize='\" + intsize + \"'\"\n$ WC \"ivdformat='\" + ivdformat + \"'\"\n$ WC \"ivsize='\" + ivsize + \"'\"\n$ WC \"ivtype='\" + ivtype + \"'\"\n$!\n$! The xs_extensions symbol may be quite long\n$!\n$ WC/symbol \"known_extensions='\", xs_extensions, \" \", nonxs_ext, \" \", nonxs_ext2, \"'\"\n$ WC \"ld='\" + ld + \"'\"\n$ WC \"ld_can_script='undef'\"\n$ WC \"lddlflags='/Share'\"\n$ WC \"ldflags='\" + ldflags + \"'\"\n$ WC \"ldflags_uselargefiles='\" + \"'\"\n$ WC \"ldlibpthname='\" + \"'\"\n$ WC \"lib_ext='\" + lib_ext + \"'\"\n$ WC \"libc='\" + libc + \"'\"\n$ WC \"libpth='/sys$share /sys$library'\"\n$ WC \"libs='\" + libs + \"'\"\n$ WC \"libswanted='\" + \"'\"\n$ WC \"libswanted_uselargefiles='\" + \"'\"\n$ WC \"longdblsize='\" + longdblsize + \"'\"\n$ WC \"longdblkind='\" + longdblkind + \"'\"\n$ WC \"longdblinfbytes='\" + longdblinfbytes + \"'\"\n$ WC \"longdblnanbytes='\" + longdblnanbytes + \"'\"\n$ WC \"longdblmantbits='\" + longdblmantbits + \"'\"\n$ WC \"longlongsize='\" + longlongsize + \"'\"\n$ WC \"longsize='\" + longsize + \"'\"\n$ IF uselargefiles .OR. uselargefiles .EQS. \"define\"\n$ THEN\n$   WC \"lseeksize='8'\"\n$   WC \"lseektype='off_t'\"\n$ ELSE\n$   WC \"lseeksize='4'\"\n$   WC \"lseektype='int'\"\n$ ENDIF\n$ WC \"mab='\" + \"'\"\n$ WC \"mad='undef'\"\n$ WC \"make='\" + make + \"'\"\n$ WC \"malloctype='void *'\"\n$ WC \"usemallocwrap='\" + usemallocwrap + \"'\"\n$ WC \"man1ext='rno'\"\n$ WC \"man3ext='rno'\"\n$ WC \"mmaptype='void *'\"\n$ WC \"modetype='unsigned int'\"\n$ WC \"multiarch='undef'\"\n$ WC \"mydomain='\" + mydomain + \"'\"\n$ WC \"myhostname='\" + myhostname + \"'\"\n$ WC \"myuname='\" + myuname + \"'\"\n$ WC \"need_va_copy='undef'\"\n$ WC \"netdb_hlen_type='\" + netdb_hlen_type + \"'\"\n$ WC \"netdb_host_type='\" + netdb_host_type + \"'\"\n$ WC \"netdb_name_type='\" + netdb_name_type + \"'\"\n$ WC \"netdb_net_type='\" + netdb_net_type + \"'\"\n$ WC/symbol \"nonxs_ext='\", nonxs_ext, \" \", nonxs_ext2, \"'\"\n$ WC \"nveformat='\" + nveformat + \"'\"\n$ WC \"nvEUformat='\" + nvEUformat + \"'\"\n$ WC \"nvfformat='\" + nvfformat + \"'\"\n$ WC \"nvFUformat='\" + nvFUformat + \"'\"\n$ WC \"nvgformat='\" + nvgformat + \"'\"\n$ WC \"nvGUformat='\" + nvGUformat + \"'\"\n$ WC \"nvmantbits='\" + nvmantbits + \"'\"\n$ WC \"nvsize='\" + nvsize + \"'\"\n$ WC \"nvtype='\" + nvtype + \"'\"\n$ WC \"o_nonblock=' '\"\n$ WC \"obj_ext='\" + obj_ext + \"'\"\n$ WC \"old_pthread_create_joinable='\" + old_pthread_create_joinable + \"'\"\n$ WC \"oldarchlib='\" + oldarchlib + \"'\"\n$ WC \"oldarchlibexp='\" + oldarchlibexp + \"'\"\n$ WC \"optimize='\" + optimize + \"'\"\n$ WC \"osname='\" + osname + \"'\"\n$ WC \"osvers='\" + osvers + \"'\"\n$ WC \"otherlibdirs='\" + \"'\"\n$ WC \"package='\" + package + \"'\"\n$ WC \"pager='\" + pager + \"'\"\n$ WC \"patchlevel='\" + patchlevel + \"'\"\n$ WC \"path_sep='|'\"\n$ WC \"perl_root='\" + perl_root + \"'\" ! VMS specific $trnlnm()\n$ WC \"perladmin='\" + perladmin + \"'\"\n$ WC \"perllibs='\" + perllibs + \"'\"\n$ WC \"perlpath='\" + \"''vms_prefix':[000000]Perl''exe_ext'\" + \"'\"\n$ WC \"perl_static_inline='static inline'\"\n$ WC \"perl_symbol='\" + perl_symbol + \"'\"  ! VMS specific\n$ WC \"perl_verb='\" + perl_verb + \"'\"      ! VMS specific\n$ WC \"pgflquota='\" + pgflquota + \"'\"\n$ WC \"pidtype='\" + pidtype + \"'\"\n$ WC \"prefix='\" + vms_prefix + \"'\"\n$ WC \"prefixexp='/\" + vms_prefix + \"'\"\n$ WC \"privlib='\" + privlib + \"'\"\n$ WC \"privlibexp='\" + privlibexp + \"'\"\n$ WC \"procselfexe=' '\"\n$ WC \"prototype='define'\"\n$ WC \"ptrsize='\" + ptrsize + \"'\"\n$ WC \"quadkind='\" + quadkind + \"'\"\n$ WC \"quadtype='\" + quadtype + \"'\" \n$ WC \"randbits='\" + randbits + \"'\"\n$ WC \"randfunc='\" + randfunc + \"'\"\n$ WC \"randseedtype='\" + randseedtype + \"'\"\n$ WC \"ranlib='\" + \"'\"\n$ WC \"rd_nodata=' '\"\n$ WC \"revision='\" + revision + \"'\"\n$ WC \"sGMTIME_max='4294967295'\"\n$ WC \"sGMTIME_min='0'\"\n$ WC \"sLOCALTIME_max='4294967295'\"\n$ WC \"sLOCALTIME_min='0'\"\n$ WC \"sPRId64='\" + sPRId64 + \"'\"\n$ WC \"sPRIEUldbl='\" + sPRIEUldbl + \"'\"\n$ WC \"sPRIFUldbl='\" + sPRIFUldbl + \"'\"\n$ WC \"sPRIGUldbl='\" + sPRIGUldbl + \"'\"\n$ WC \"sPRIXU64='\" + sPRIXU64 + \"'\"\n$ WC \"sPRIeldbl='\" + sPRIeldbl + \"'\"\n$ WC \"sPRIfldbl='\" + sPRIfldbl + \"'\"\n$ WC \"sPRIgldbl='\" + sPRIgldbl + \"'\"\n$ WC \"sPRIi64='\" + sPRIi64 + \"'\"\n$ WC \"sPRIo64='\" + sPRIo64 + \"'\"\n$ WC \"sPRIu64='\" + sPRIu64 + \"'\"\n$ WC \"sPRIx64='\" + sPRIx64 + \"'\"\n$ WC \"sSCNfldbl='\" + sSCNfldbl + \"'\"\n$ WC \"sched_yield='\" + sched_yield + \"'\"\n$ WC \"scriptdir='\" + scriptdir + \"'\"\n$ WC \"scriptdirexp='\" + scriptdir + \"'\"  ! use scriptdir for now\n$ WC \"seedfunc='\" + seedfunc + \"'\"\n$ WC \"selectminbits='32'\"\n$ WC \"selecttype='\" + selecttype + \"'\"\n$ WC \"sh='MCR'\"\n$ WC \"sharpbang='#!'\"\n$ WC \"shmattype='\" + shmattype + \"'\"\n$ WC \"shortsize='\" + shortsize + \"'\"\n$ IF (f$length(sig_name) .GE. 244)\n$ THEN\n$     tmp = \"sig_name='\" + sig_name + \"'\"\n$     WC/symbol tmp\n$     DELETE/SYMBOL tmp\n$ ELSE\n$     WC \"sig_name='\" + sig_name + \"'\"\n$ ENDIF\n$ IF (f$length(sig_name_init) .GE. 244)\n$ THEN\n$     tmp = \"sig_name_init='\" + sig_name_init + \"'\"\n$     WC/symbol tmp\n$     DELETE/SYMBOL tmp\n$ ELSE\n$     WC \"sig_name_init='\" + sig_name_init + \"'\"\n$ ENDIF\n$ WC \"sig_num='\" + sig_num + \"'\"\n$ WC \"sig_num_init='\" + sig_num_init + \"'\"\n$ WC \"sig_count='\" + sig_count + \"'\"\n$ WC \"sig_size='\" + sig_size + \"'\"\n$ WC \"signal_t='\" + signal_t + \"'\"\n$ WC \"sitearch='\" + sitearch + \"'\"\n$ WC \"sitearchexp='\" + sitearchexp + \"'\"\n$ WC \"sitebin='\" + sitebin + \"'\"\n$ WC \"sitebinexp='\" + sitebin + \"'\"\n$ WC \"sitelib='\" + sitelib + \"'\"\n$ WC \"sitelib_stem='\" + sitelib_stem + \"'\"\n$ WC \"sitelibexp='\" + sitelibexp + \"'\"\n$ WC \"siteprefix='\" + vms_prefix + \"'\"\n$ WC \"siteprefixexp='/\" + vms_prefix + \"'\"\n$ WC \"sizesize='\" + sizesize + \"'\"\n$ WC \"sizetype='size_t'\"\n$ WC \"so='\" + so + \"'\"\n$ WC \"socksizetype='\" + socksizetype + \"'\"\n$ WC \"spitshell='write sys$output '\"\n$ WC \"src='\" + src + \"'\"\n$ WC \"ssizetype='int'\"\n$ WC \"startperl=\" + startperl ! This one's special--no enclosing single quotes\n$ WC \"static_ext='\" + static_ext + \"'\"\n$ WC \"st_ino_size='\" + st_ino_size + \"'\"\n$ WC \"st_ino_sign='1'\"\n$ WC \"stdchar='\" + stdchar + \"'\"\n$ WC \"stdio_base='((*fp)->_base)'\"\n$ WC \"stdio_bufsiz='((*fp)->_cnt + (*fp)->_ptr - (*fp)->_base)'\"\n$ WC \"stdio_cnt='((*fp)->_cnt)'\"\n$ WC \"stdio_ptr='((*fp)->_ptr)'\"\n$ WC \"stdio_stream_array=' \" + \"'\"\n$ WC \"subversion='\" + subversion + \"'\"\n$ WC \"targetarch='\" + \"'\"\n$ WC \"targetsh='MCR'\"\n$ WC \"timetype='\" + timetype + \"'\"\n$ WC \"u16size='\" + u16size + \"'\"\n$ WC \"u16type='\" + u16type + \"'\"\n$ WC \"u32size='\" + u32size + \"'\"\n$ WC \"u32type='\" + u32type + \"'\"\n$ WC \"u64size='\" + u64size + \"'\"\n$ WC \"u64type='\" + u64type + \"'\"\n$ WC \"u8size='\" + u8size + \"'\"\n$ WC \"u8type='\" + u8type + \"'\"\n$ WC \"uidformat='lu'\"\n$ WC \"uidsign='1'\"\n$ WC \"uidsize='4'\"\n$ WC \"uidtype='\" + uidtype + \"'\"\n$ WC \"uquadtype='\" + uquadtype + \"'\" \n$ WC \"use5005threads='\" + use5005threads + \"'\"\n$ WC \"use64bitall='\" + use64bitall + \"'\"\n$ WC \"use64bitint='\" + use64bitint + \"'\"\n$ WC \"usecasesensitive='\" + be_case_sensitive + \"'\"    ! VMS-specific\n$ WC \"usedebugging_perl='\"+use_debugging_perl+\"'\"\n$ WC \"usedefaulttypes='\" + usedefaulttypes + \"'\"    ! VMS-specific\n$ WC \"usecbacktrace='undef'\"\n$ WC \"usecrosscompile='undef'\"\n$ WC \"usedevel='\" + usedevel + \"'\"\n$ WC \"usedl='\" + usedl + \"'\"\n$ WC \"usedtrace='undef'\"\n$ WC \"usefaststdio='\" + usefaststdio + \"'\"\n$ WC \"useieee='\" + useieee + \"'\"                    ! VMS-specific\n$ WC \"useithreads='\" + useithreads + \"'\"\n$ WC \"usekernelthreads='\" + usekernelthreads + \"'\"\t! VMS-specific\n$ WC \"usekernprocpathname='undef'\"\n$ WC \"usensgetexecutablepath='undef'\"\n$ WC \"uselargefiles='\" + uselargefiles + \"'\"\n$ WC \"uselongdouble='\" + uselongdouble + \"'\"\n$ WC \"usemorebits='\" + usemorebits + \"'\"\n$ WC \"usemultiplicity='\" + usemultiplicity + \"'\"\n$ WC \"usemymalloc='\" + usemymalloc + \"'\"\n$ WC \"useperlio='define'\"\n$ WC \"useposix='false'\"\n$ WC \"usequadmath='undef'\"\n$ WC \"usereentrant='undef'\"\n$ WC \"userelocatableinc='undef'\"\n$ WC \"usesecurelog='\" + usesecurelog + \"'\"  ! VMS-specific\n$ WC \"useshortenedsymbols='\" + useshortenedsymbols + \"'\"    ! VMS-specific\n$ WC \"useshrplib='true'\"\n$ WC \"usesitecustomize='\" + usesitecustomize + \"'\"\n$ WC \"usesocks='undef'\"\n$ WC \"usethreads='\" + usethreads + \"'\"\n$ WC \"usethreadupcalls='\" + usethreadupcalls + \"'\"\t! VMS-specific\n$ WC \"usevendorprefix='\" + \"'\" ! try to say no, though we'll be ignored as of MM 5.90_01\n$ WC \"useversionedarchname='\" + useversionedarchname + \"'\"\n$ WC \"usevfork='true'\"\n$ WC \"usevmsdebug='\" + usevmsdebug + \"'\"     ! VMS-specific\n$ WC \"uvoformat='\" + uvoformat + \"'\"\n$ WC \"uvsize='\" + uvsize + \"'\"\n$ WC \"uvtype='\" + uvtype + \"'\"\n$ WC \"uvuformat='\" + uvuformat + \"'\"\n$ WC \"uvxformat='\" + uvxformat + \"'\"\n$ WC \"uvXUformat='\" + uvXUformat + \"'\"\n$ WC \"vendorarch='\" + \"'\"\n$ WC \"vendorarchexp='\" + \"'\"\n$ WC \"vendorbin='\" + \"'\"\n$ WC \"vendorbinexp='\" + \"'\"\n$ WC \"vendorlib_stem='\" + \"'\"\n$ WC \"vendorlib='\" + \"'\"\n$ WC \"vendorlibexp='\" + \"'\"\n$ WC \"vendorprefix='\" + \"'\"\n$ WC \"vendorprefixexp='\" + \"'\"\n$ WC \"version='\" + version + \"'\"\n$ WC \"version_patchlevel_string='\" + version_patchlevel_string + \"'\"\n$ WC \"vms_cc_type='\" + vms_cc_type + \"'\" ! VMS specific\n$ WC \"vms_prefix='\" + vms_prefix + \"'\" ! VMS specific\n$ WC \"vms_ver='\" + vms_ver + \"'\" ! VMS specific\n$!\n$! ## The UNIXy POSIXy reentrantey thingys ##\n$! See \"Appendix B, Version-Dependency Tables\" in the C RTL\n$! manual for when assorted _r functions became available.\n$!\n$ IF use_threads\n$ THEN\n$   WC \"asctime_r_proto='REENTRANT_PROTO_B_SB'\"\n$   WC \"d_asctime_r='define'\"\n$   WC \"ctime_r_proto='REENTRANT_PROTO_B_SB'\"\n$   WC \"d_ctime_r='define'\"\n$ ELSE\n$   WC \"asctime_r_proto='0'\"\n$   WC \"d_asctime_r='undef'\"\n$   WC \"ctime_r_proto='0'\"\n$   WC \"d_ctime_r='undef'\"\n$ ENDIF\n$ WC \"d_crypt_r='undef'\"\n$ WC \"d_ctermid_r='undef'\"\n$ WC \"d_drand48_r='undef'\"\n$ WC \"d_endgrent_r='undef'\"\n$ WC \"d_endhostent_r='undef'\"\n$ WC \"d_endnetent_r='undef'\"\n$ WC \"d_endprotoent_r='undef'\"\n$ WC \"d_endpwent_r='undef'\"\n$ WC \"d_endservent_r='undef'\"\n$ WC \"d_freelocale='undef'\"\n$ WC \"d_gai_strerror='define'\"\n$ WC \"d_getgrent_r='undef'\"\n$ WC \"d_getgrgid_r='\" + d_getgrgid_r + \"'\"\n$ WC \"d_getgrnam_r='\" + d_getgrnam_r + \"'\"\n$ WC \"d_gethostbyaddr_r='undef'\"\n$ WC \"d_gethostbyname_r='undef'\"\n$ WC \"d_gethostent_r='undef'\"\n$ WC \"d_getlogin_r='define'\"\n$ WC \"d_getnetbyaddr_r='undef'\"\n$ WC \"d_getnetbyname_r='undef'\"\n$ WC \"d_getnetent_r='undef'\"\n$ WC \"d_getprotobyname_r='undef'\"\n$ WC \"d_getprotobynumber_r='undef'\"\n$ WC \"d_getprotoent_r='undef'\"\n$ WC \"d_getpwent_r='undef'\"\n$ WC \"d_getpwnam_r='\" + d_getpwnam_r + \"'\"\n$ WC \"d_getpwuid_r='\" + d_getpwuid_r + \"'\"\n$ WC \"d_getservbyname_r='undef'\"\n$ WC \"d_getservbyport_r='undef'\"\n$ WC \"d_getservent_r='undef'\"\n$ WC \"d_getspnam_r='undef'\"\n$ WC \"d_gmtime_r='undef'\"      ! leave undef'd; we use my_gmtime\n$ WC \"d_lgamma_r='undef'\"\n$ WC \"d_localtime_r='undef'\"   ! leave undef'd; we use my_localtime\n$ WC \"d_localtime_r_needs_tzset='undef'\"\n$ WC \"d_newlocale='undef'\"\n$ WC \"d_querylocale='undef'\"\n$ WC \"d_random_r='undef'\"\n$ WC \"d_readdir_r='define'\"\t! always defined; we roll our own\n$ WC \"d_readdir64_r='undef'\"\n$ WC \"d_setgrent_r='undef'\"\n$ WC \"d_sethostent_r='undef'\"\n$ WC \"d_setlocale_r='undef'\"\n$ WC \"d_setnetent_r='undef'\"\n$ WC \"d_setprotoent_r='undef'\"\n$ WC \"d_setpwent_r='undef'\"\n$ WC \"d_setservent_r='undef'\"\n$ WC \"d_snprintf='\" + d_snprintf + \"'\"\n$ WC \"d_srand48_r='undef'\"\n$ WC \"d_srandom_r='undef'\"\n$ WC \"d_strerror_l='undef'\"\n$ WC \"d_strerror_r='undef'\"\n$ WC \"d_tmpnam_r='undef'\"\n$ WC \"d_towlower='define'\"\n$ WC \"d_towupper='define'\"\n$ WC \"d_ttyname_r='\" + d_ttyname_r + \"'\"\n$ WC \"d_uselocale='undef'\"\n$ WC \"ctermid_r_proto='0'\"\n$ WC \"crypt_r_proto='0'\"\n$ WC \"drand48_r_proto='0'\"\n$ WC \"endgrent_r_proto='0'\"\n$ WC \"endhostent_r_proto='0'\"\n$ WC \"endnetent_r_proto='0'\"\n$ WC \"endprotoent_r_proto='0'\"\n$ WC \"endpwent_r_proto='0'\"\n$ WC \"endservent_r_proto='0'\"\n$ WC \"getgrent_r_proto='0'\"\n$ WC \"getgrgid_r_proto='\" + getgrgid_r_proto + \"'\"\n$ WC \"getgrnam_r_proto='\" + getgrnam_r_proto + \"'\"\n$ WC \"gethostbyaddr_r_proto='0'\"\n$ WC \"gethostbyname_r_proto='0'\"\n$ WC \"gethostent_r_proto='0'\"\n$ IF use_threads\n$ THEN\n$   WC \"getlogin_r_proto='REENTRANT_PROTO_I_BW'\"\n$ ELSE\n$   WC \"getlogin_r_proto='0'\"\n$ ENDIF\n$ WC \"getnetbyaddr_r_proto='0'\"\n$ WC \"getnetbyname_r_proto='0'\"\n$ WC \"getnetent_r_proto='0'\"\n$ WC \"getprotobyname_r_proto='0'\"\n$ WC \"getprotobynumber_r_proto='0'\"\n$ WC \"getprotoent_r_proto='0'\"\n$ WC \"getpwent_r_proto='0'\"\n$ WC \"getpwnam_r_proto='0'\"\n$ WC \"getpwuid_r_proto='0'\"\n$ WC \"getservbyname_r_proto='0'\"\n$ WC \"getservbyport_r_proto='0'\"\n$ WC \"getservent_r_proto='0'\"\n$ WC \"getspnam_r_proto='0'\"\n$ WC \"gmtime_r_proto='0'\"\n$ WC \"localtime_r_proto='0'\"\n$ WC \"random_r_proto='0'\"\n$ WC \"readdir_r_proto='REENTRANT_PROTO_I_TSR'\"  ! always defined; we roll our own\n$ WC \"readdir64_r_proto='0'\"\n$ WC \"setgrent_r_proto='0'\"\n$ WC \"sethostent_r_proto='0'\"\n$ WC \"setlocale_r_proto='0'\"\n$ WC \"setnetent_r_proto='0'\"\n$ WC \"setprotoent_r_proto='0'\"\n$ WC \"setpwent_r_proto='0'\"\n$ WC \"setservent_r_proto='0'\"\n$ WC \"srand48_r_proto='0'\"\n$ WC \"srandom_r_proto='0'\"\n$ WC \"strerror_r_proto='0'\"\n$ WC \"tmpnam_r_proto='0'\"\n$ WC \"ttyname_r_proto='\" + ttyname_r_proto + \"'\"\n$!\n$! ##END WRITE NEW CONSTANTS HERE##\n$!\n$ CLOSE CONFIG\n$!\n$! Okay, we've gotten here. Build munchconfig.exe\n$ COPY/NOLOG [-.vms]munchconfig.c []\n$ COPY/NOLOG [-.vms]'Makefile_SH' []\n$ 'Perl_CC' 'ccflags' munchconfig.c\n$ IF Needs_Opt\n$ THEN\n$   OPEN/WRITE CONFIG []munchconfig.opt\n$   IF ccname .EQS. \"GCC\"\n$   THEN\n$     WRITE CONFIG \"Gnu_CC:[000000]gcclib.olb/library\"\n$   ENDIF\n$   WRITE CONFIG \"Sys$Share:VAXCRTL/Share\"\n$   CLOSE CONFIG\n$   'ld'/EXE='exe_ext' munchconfig'obj_ext',munchconfig.opt/opt\n$   DELETE/NOLOG/NOCONFIRM munchconfig.opt;\n$ ELSE\n$   'ld'/EXE='exe_ext' munchconfig'obj_ext'\n$ ENDIF\n$ IF F$SEARCH(\"munchconfig''obj_ext'\") .NES. \"\" THEN DELETE/NOLOG/NOCONFIRM munchconfig'obj_ext';\n$ IF F$SEARCH(\"munchconfig.c\") .NES. \"\" THEN DELETE/NOLOG/NOCONFIRM munchconfig.c;\n$ IF ccname .EQS. \"CXX\"\n$ THEN\n$   CALL Cxx_demangler_cleanup\n$ ENDIF\n$!\n$ IF alldone .EQS. \"\"\n$ THEN\n$   cat4 SYS$INPUT:\n$   DECK\n\nIf you'd like to make any changes to the config.sh file before I begin\nto configure things, answer yes to the following question.\n\n$   EOD\n$   bool_dflt=\"n\"\n$   rp=\"Do you wish to edit ''basename_config_sh'? [''bool_dflt'] \"\n$   GOSUB myread\n$   IF ans\n$   THEN\n$     echo4 \"\"\n$     echo4 \"Be sure to type LOGOUT after you have edited the file,\"\n$     echo4 \"then this procedure will resume.\"\n$     echo4 \"\"\n$     default = F$ENVIRONMENT(\"DEFAULT\")\n$     DIRECTORY 'config_sh'\n$     SET DEFAULT [-]\n$     SPAWN/WAIT\n$     SET DEFAULT 'default'\n$   ENDIF\n$ ENDIF\n$!\n$ echo \"\"\n$ echo4 \"Adding ''osname' specific preprocessor commands.\"\n$ !\n$ ! we need an fdl file\n$ CREATE [-]CONFIG.FDL\n$ DECK\nRECORD\n  FORMAT STREAM_LF\n$ EOD\n$ CREATE /FDL=[-]CONFIG.FDL [-]CONFIG.LOCAL\n$ ! First spit out the header info with the local defines (to get\n$ ! around the 255 character command line limit)\n$ OPEN/APPEND CONFIG [-]config.local\n$ IF use_debugging_perl THEN WC \"#define DEBUGGING\"\n$ IF use_two_pot_malloc THEN WC \"#define TWO_POT_OPTIMIZE\"\n$ IF mymalloc THEN WC \"#define EMBEDMYMALLOC\"\n$ IF use_pack_malloc THEN WC \"#define PACK_MALLOC\"\n$ IF use_debugmalloc THEN WC \"#define DEBUGGING_MSTATS\"\n$ IF ccname .EQS. \"GCC\" THEN WC \"#define GNUC_ATTRIBUTE_CHECK\"\n$ IF (Has_Dec_C_Sockets)\n$ THEN\n$    WC \"#define VMS_DO_SOCKETS\"\n$    WC \"#define DECCRTL_SOCKETS\"\n$ ENDIF\n$! This is VMS-specific for now\n$ WC \"#''d_setenv' HAS_SETENV\"\n$ IF d_secintgenv THEN WC \"#define SECURE_INTERNAL_GETENV\"\n$ IF d_alwdeftype THEN WC \"#define ALWAYS_DEFTYPES\"\n$ IF use64bitint .OR. use64bitint .EQS. \"define\"\n$ THEN\n$   WC \"#define USE_64_BIT_INT\"\n$ ENDIF\n$ IF uselongdouble .OR. uselongdouble .EQS. \"define\"\n$ THEN\n$   WC \"#define USE_LONG_DOUBLE\"\n$ ENDIF\n$ IF use64bitall .OR. use64bitall .EQS. \"define\" THEN -\n    WC \"#define USE_64_BIT_ALL\"\n$ IF be_case_sensitive THEN WC \"#define VMS_WE_ARE_CASE_SENSITIVE\"\n$ IF shorten_long_symbols THEN WC \"#define VMS_SHORTEN_LONG_SYMBOLS\"\n$ IF use_ieee_math THEN WC \"#define USE_IEEE\"\n$ IF d_herrno .EQS. \"undef\" THEN WC \"#define NEED_AN_H_ERRNO\"\n$ WC \"#define HAS_ENVGETENV\"\n$ WC \"#define PERL_EXTERNAL_GLOB\"\n$ IF kill_by_sigprc .EQS. \"define\" then WC \"#define KILL_BY_SIGPRC\"\n$ IF unlink_all_versions .OR. unlink_all_versions .EQS. \"define\" THEN -\n    WC \"#define UNLINK_ALL_VERSIONS\"\n$ IF d_sockaddr_sa_len .EQS. \"define\" then WC \"#define _SOCKADDR_LEN 1\"\n$ IF ccname .EQS. \"CXX\" then WC \"#define NO_ENVIRON_ARRAY\"\n$ IF ccname .EQS. \"CXX\" then WC \"#define VMS\" ! only has __VMS by default\n$ CLOSE CONFIG\n$!\n$ echo4 \"Doing variable substitutions on .SH files...\"\n$ echo4 \"Extracting config.h (with variable substitutions)\"\n$!\n$! Now build the normal config.h\n$ DEFINE/USER_MODE sys$output [-]config.main\n$ mcr []munchconfig'exe_ext' 'config_sh' [-]config_h.sh\n$ ! Concatenate them together\n$ copy [-]config.local,[-]config.main [-]config.h\n$! Clean up\n$ DELETE/NOLOG/NOCONFIRM [-]CONFIG.MAIN;*\n$ DELETE/NOLOG/NOCONFIRM [-]CONFIG.LOCAL;*\n$ DELETE/NOLOG/NOCONFIRM [-]CONFIG.FDL;*\n$!\n$ IF ccname .EQS. \"DEC\"\n$ THEN\n$   DECC_REPLACE = \"DECC=decc=1\"\n$ ELSE\n$   DECC_REPLACE = \"DECC=\"\n$ ENDIF\n$ IF ccname .EQS. \"CXX\"\n$ THEN\n$   DECCXX_REPLACE = \"DECCXX=DECCXX=1\"\n$ ELSE\n$   DECCXX_REPLACE = \"DECCXX=\"\n$ ENDIF\n$ IF ccname .EQS. \"GCC\"\n$ THEN\n$   GNUC_REPLACE = \"GNUC=gnuc=1\"\n$ ELSE\n$   GNUC_REPLACE = \"GNUC=\" \n$ ENDIF\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   SOCKET_REPLACE = \"SOCKET=DECC_SOCKETS=1\"\n$ ELSE\n$   SOCKET_REPLACE = \"SOCKET=\"\n$ ENDIF\n$ IF use_threads\n$ THEN\n$   THREAD_REPLACE = \"THREAD=THREADED=1\"\n$ ELSE\n$   THREAD_REPLACE = \"THREAD=\"\n$ ENDIF\n$ IF mymalloc\n$ THEN\n$   MALLOC_REPLACE = \"MALLOC=MALLOC=1\"\n$ ELSE\n$   MALLOC_REPLACE = \"MALLOC=\"\n$ ENDIF\n$ IF uselargefiles .OR. uselargefiles .EQS. \"define\"\n$ THEN\n$   IF usestdstat .or. usestdstat .eqs. \"define\"\n$   THEN\n$      LARGEFILE_REPLACE = \"LARGEFILE=LARGEFILE=_USE_STD_STAT=1\"\n$   ELSE\n$      LARGEFILE_REPLACE = \"LARGEFILE=LARGEFILE=_LARGEFILE=1\"\n$   ENDIF\n$ ELSE\n$   LARGEFILE_REPLACE = \"LARGEFILE=\"\n$ ENDIF\n$ IF use_vmsdebug_perl\n$ THEN\n$   DEBUG_REPLACE = \"USEVMSDEBUG=__DEBUG__=1\"\n$ ELSE\n$   DEBUG_REPLACE = \"USEVMSDEBUG=\"\n$ ENDIF\n$ PREFIX_REPLACE = \"PREFIX=PREFIX=''prefix'\"\n$!\n$! In order not to stress the tiny command buffer on pre-7.3-2 systems,\n$! we put the following substitutions in a file and pass the file to\n$! munchconfig.\n$!\n$ open/write CONFIG extra_subs.txt\n$ WC := write CONFIG\n$ WC \"''DECC_REPLACE'\"\n$ WC \"''DECCXX_REPLACE'\"\n$ WC \"''ARCH_TYPE'\"\n$ WC \"''GNUC_REPLACE'\"\n$ WC \"''SOCKET_REPLACE'\"\n$ WC \"''THREAD_REPLACE'\"\n$ WC \"''C_Compiler_Replace'\"\n$ WC \"''MALLOC_REPLACE'\"\n$ WC \"''THREAD_UPCALLS'\"\n$ WC \"''THREAD_KERNEL'\"\n$ WC \"PV=''version'\"\n$ WC \"FLAGS=FLAGS=''extra_flags'\"\n$ WC \"''LARGEFILE_REPLACE'\"\n$ WC \"ARCHNAME=ARCHNAME=''archname'\"\n$ WC \"''DEBUG_REPLACE'\"\n$ WC \"''PREFIX_REPLACE'\"\n$ close CONFIG\n$!\n$ echo4 \"Extracting ''defmakefile' (with variable substitutions)\"\n$ DEFINE/USER_MODE sys$output 'UUmakefile'\n$ mcr []munchconfig'exe_ext' 'config_sh' 'Makefile_SH' -f extra_subs.txt\n$! Clean up after ourselves\n$ DELETE/NOLOG/NOCONFIRM []munchconfig'exe_ext';\n$ DELETE/NOLOG/NOCONFIRM []extra_subs.txt;\n$!\n$! Note that the /key qualifier to search, as in:\n$! search README.* \"=head\"/key=(position=1)/window=0/output=extra.pods\n$! is not supported on VMS V5.5-2, hence not used in extra_pods.com.\n$!\n$ echo4 \"Extracting extra_pods.com (without variable substitutions)\"\n$ Create Sys$Disk:[-]extra_pods.com\n$ Deck/Dollar=\"$EOExtra_Pods$\"\n$!++ extra_pods.com\n$!   NOTE: This file is extracted as part of the VMS configuration process.\n$!   Any changes made to it directly will be lost.  If you need to make any\n$!   changes, please edit the template in Configure.Com instead.\n$!   Use FORCE if you've just podified a README.* file on VMS.\n$ miniperl = f$search(\"sys$disk:[]miniperl.%xe;\") ! could have alternate extension\n$ if f$search(\"extra.pods\") .eqs. \"\" .or. P1 .eqs. \"FORCE\" then -\n    search README.* \"=head\"/window=0/output=extra.pods\n$ open/read/error=extra_close EXTRA extra.pods\n$extra_loop:\n$ read/error=extra_close/END_OF_FILE=extra_close EXTRA file\n$ file_type = f$edit(f$parse(file,,,\"TYPE\",),\"LOWERCASE\") - \".\"\n$ if file_type .nes. \"VMS\" .and. file_type .nes. \"vms\"\n$ then\n$   pod_file = \"[.pod]perl''file_type'.pod\"\n$   file = file - \"''f$parse(file,,,\"VERSION\",)'\"\n$   if p1 .eqs. \"CLEAN\"\n$   then if f$search(pod_file) .nes. \"\" then delete/log 'pod_file';*\n$   else\n$     do_copy := false\n$     if f$search(pod_file) .eqs. \"\"\n$     then do_copy := true\n$     else\n$       file_rdt = f$cvtime(f$file_attributes(file,\"RDT\"))\n$       pod_file_rdt = f$cvtime(f$file_attributes(pod_file,\"RDT\"))\n$       if file_rdt .GTS. pod_file_rdt then do_copy := true\n$     endif\n$     ! wacky method to preserve case on ODS-5 even when parse style is traditional\n$     if do_copy then mcr 'miniperl' -e \"exit 0+$^E unless File::Copy::rmscopy(q{''file'}, q{''pod_file'});\"\n$   endif\n$ endif\n$ goto extra_loop\n$extra_close:\n$ close EXTRA\n$ if p1 .eqs. \"CLEAN\" .and. f$search(\"extra.pods;-1\") .nes. \"\" then -\n    purge/nolog extra.pods\n$!-- extra_pods.com\n$EOExtra_Pods$\n$!\n$!  Warn of dangerous symbols or logical names\n$!\n$Bad_environment: SUBROUTINE\n$   Bad_env = \"\"\n$   IF p2 .eqs. \"SYMBOL\"\n$   THEN\n$     IF f$type('p1') .nes. \"\" THEN  Bad_env := SYMBOL\n$   ELSE\n$     IF f$trnlnm(p1) .nes. \"\" THEN Bad_env := LOGICAL\n$   ENDIF\n$   IF Bad_env .eqs. \"SYMBOL\" .or. Bad_env .eqs. \"LOGICAL\"\n$   THEN\n$     IF f$search(\"config.msg\") .nes. \"\"\n$     THEN\n$       OPEN/APPEND CONFIG config.msg\n$     ELSE\n$       OPEN/WRITE CONFIG config.msg\n$     ENDIF\n$     IF Bad_env .eqs. \"SYMBOL\"\n$     THEN\n$       WRITE CONFIG \"\"\n$       WRITE CONFIG \"Symbol name ''p1' found in environment as \" + &p1\n$       WRITE CONFIG \" delete before building ''package' via:\"\n$       WRITE CONFIG \"     $ DELETE/SYMBOL/GLOBAL ''p1'\"\n$       IF f$locate(\"\"\"\",&p1) .ge. f$length(&p1)\n$       THEN\n$       WRITE CONFIG \" after building, testing, and installing ''package'\"\n$       WRITE CONFIG \" restore the symbol with:\"\n$       WRITE CONFIG \"     $ ''p1' == \"\"\" + &p1 + \"\"\"\"\n$       ENDIF\n$     ENDIF\n$     IF Bad_env .eqs. \"LOGICAL\"\n$     THEN\n$       WRITE CONFIG \"\"\n$       WRITE CONFIG \"Logical name ''p1' found in environment as \" + f$trnlnm(p1)\n$       WRITE CONFIG \" deassign before building ''package'\"\n$     ENDIF\n$     CLOSE CONFIG\n$     Bad_env = \"\"\n$   ENDIF\n$ EXIT\n$ ENDSUBROUTINE ! Bad_environment\n$ echo \"\"\n$ echo4 \"Checking for dangerous pre-existing global symbols and logical names.\"\n$ CALL Bad_environment \"COMP\"\n$ CALL Bad_environment \"EXT\"\n$ CALL Bad_environment \"FOO\"\n$ CALL Bad_environment \"LIB\"\n$ CALL Bad_environment \"LIST\"\n$ CALL Bad_environment \"MIME\"\n$ CALL Bad_environment \"POSIX\"\n$ CALL Bad_environment \"SYS\"\n$ CALL Bad_environment \"T\"\n$ CALL Bad_environment \"THREAD\"\n$ CALL Bad_environment \"THREADS\"\n$ CALL Bad_environment \"TIME\"\n$ CALL Bad_environment \"TMP\"\n$ CALL Bad_environment \"UNICODE\"\n$ CALL Bad_environment \"UTIL\"\n$ CALL Bad_environment \"TEST\" \"SYMBOL\"\n$ IF f$search(\"config.msg\") .eqs. \"\" THEN echo \"OK.\"\n$!\n$! %Config-I-VMS, write perl_setup.com here\n$!\n$ IF (.NOT.perl_symbol)\n$ THEN\n$   file_2_find = \"[-]''packageup'.cld\"\n$   echo \"\"\n$   echo4 \"The perl.cld file is now being written...\"\n$   OPEN/WRITE CONFIG 'file_2_find'\n$   ext = \".exe\"\n$   IF (sharedperl .AND. F$ELEMENT(0, \"-\", archname) .EQS. \"VMS_AXP\") THEN ext := .AXE\n$   IF (sharedperl .AND. F$ELEMENT(0, \"-\", archname) .EQS. \"VMS_IA64\") THEN ext := .IXE\n$   IF (use_vmsdebug_perl)\n$   THEN\n$     WRITE CONFIG \"define verb dbgperl\"\n$     WRITE CONFIG F$FAO(\"!_!AS\",\"image ''vms_prefix':[000000]dbgperl''ext'\")\n$     WRITE CONFIG F$FAO(\"!_!AS\",\"cliflags (foreign)\")\n$     WRITE CONFIG \"\"\n$     WRITE CONFIG \"define verb perl\"\n$     WRITE CONFIG F$FAO(\"!_!AS\",\"image ''vms_prefix':[000000]ndbgPerl''ext'\")\n$     WRITE CONFIG F$FAO(\"!_!AS\",\"cliflags (foreign)\")\n$   ELSE\n$     WRITE CONFIG \"define verb perl\"\n$     WRITE CONFIG F$FAO(\"!_!AS\",\"image ''vms_prefix':[000000]perl''ext'\")\n$     WRITE CONFIG F$FAO(\"!_!AS\",\"cliflags (foreign)\")\n$   ENDIF\n$   CLOSE CONFIG\n$ ENDIF ! (.NOT.perl_symbol)\n$ echo \"\"\n$ echo4 \"The perl_setup.com file is now being written...\"\n$ file_2_find = \"[-]perl_setup.com\"\n$!\n$! Folks are likely to want to edit perl_setup.com.\n$! STMLF RFM plays nicer with ported editors than does VFC.\n$!\n$ CREATE [-]CONFIG.FDL\n$ DECK\nRECORD\n  FORMAT STREAM_LF\n$ EOD\n$ CREATE /FDL=[-]CONFIG.FDL 'file_2_find'\n$ OPEN/APPEND CONFIG 'file_2_find'\n$ DELETE/NOLOG/NOCONFIRM [-]CONFIG.FDL;\n$ WRITE CONFIG \"$!\"\n$ WRITE CONFIG \"$! Perl_Setup.com    ''cf_time'\"\n$ IF cf_email.NES.perladmin\n$ THEN\n$ WRITE CONFIG \"$! perl configured by ''cf_email'\"\n$ ELSE\n$ WRITE CONFIG \"$! This perl configured & administered by ''perladmin'\"\n$ ENDIF\n$ WRITE CONFIG \"$!\"\n$ WRITE CONFIG \"$ if P1 .EQS. \"\"\"\"\"\n$ WRITE CONFIG \"$ then\"\n$ WRITE CONFIG \"$   myproc = f$environment(\"\"PROCEDURE\"\")\"\n$ WRITE CONFIG \"$   myroot_dev = f$parse(myproc,,,\"\"DEVICE\"\",\"\"NO_CONCEAL\"\")\"\n$ WRITE CONFIG \"$   myroot_dir = f$parse(myproc,,,\"\"DIRECTORY\"\",\"\"NO_CONCEAL\"\")\"\n$ WRITE CONFIG \"$   myroot_dir = myroot_dir - \"\"][000000.\"\" - \"\"><000000.\"\"\"\n$ WRITE CONFIG \"$   myroot_dir = myroot_dir - \"\"][000000]\"\" - \"\"><000000>\"\"\"\n$ WRITE CONFIG \"$   myroot_dir = myroot_dir - \"\"][\"\" - \"\"><\"\"\"\n$ WRITE CONFIG \"$   myroot_dir = myroot_dir - \"\".]\"\" - \"\".>\"\" - \"\"[\"\" - \"\"]\"\" - \"\"<\"\" - \"\">\"\"\"\n$ WRITE CONFIG \"$   root_spec = myroot_dev + \"\"[\"\" + myroot_dir + \"\".]\"\"\"\n$ WRITE CONFIG \"$ else\"\n$ WRITE CONFIG \"$   root_spec = P1\"\n$ WRITE CONFIG \"$ endif\"\n$ WRITE CONFIG \"$ define/translation=concealed ''vms_prefix' 'root_spec'\"\n$ WRITE CONFIG \"$ ext = \"\".exe\"\"\"\n$ IF sharedperl\n$ THEN\n$ WRITE CONFIG \"$ if f$getsyi(\"\"ARCH_TYPE\"\") .eq. 2 then ext = \"\".AXE\"\"\"\n$ WRITE CONFIG \"$ if f$getsyi(\"\"ARCH_TYPE\"\") .eq. 3 then ext = \"\".IXE\"\"\"\n$ ENDIF\n$ IF (perl_symbol)\n$ THEN\n$   perl_setup_perl = \"'\" + \"'perl'\" ! triple quoted foreign command symbol\n$   IF (use_vmsdebug_perl)\n$   THEN\n$     WRITE CONFIG \"$ dbgperl :== $''vms_prefix':[000000]dbgperl'ext'\"\n$     WRITE CONFIG \"$ perl    :== $''vms_prefix':[000000]ndbgperl'ext'\"\n$     WRITE CONFIG \"$ define dbgperlshr ''vms_prefix':[000000]dbgperlshr'ext'\"\n$   ELSE\n$     WRITE CONFIG \"$ perl :== $''vms_prefix':[000000]Perl'ext'\"\n$     WRITE CONFIG \"$ define perlshr ''vms_prefix':[000000]perlshr'ext'\"\n$   ENDIF\n$ ELSE ! .NOT.perl_symbol\n$   perl_setup_perl = \"perl\" ! command verb\n$   IF (use_vmsdebug_perl)\n$   THEN\n$     WRITE CONFIG \"$ define dbgperlshr ''vms_prefix':[000000]dbgperlshr'ext'\"\n$   ELSE\n$     WRITE CONFIG \"$ define perlshr ''vms_prefix':[000000]perlshr'ext'\"\n$   ENDIF\n$   IF perl_verb .EQS. \"PROCESS\"\n$   THEN\n$     WRITE CONFIG \"$ set command ''vms_prefix':[000000]''packageup'.CLD\"\n$   ENDIF\n$ ENDIF !  perl_symbol\n$!\n$ IF (tzneedset)\n$ THEN\n$ WRITE CONFIG \"$ define SYS$TIMEZONE_DIFFERENTIAL ''tzd'\"\n$ ELSE    !leave in but commented out (in case setting was from perl :-)\n$ WRITE CONFIG \"$! define SYS$TIMEZONE_DIFFERENTIAL ''tzd'\"\n$ ENDIF\n$ WRITE CONFIG \"$!\"\n$ WRITE CONFIG \"$! Symbols for Perl-based utility programs:\"\n$ WRITE CONFIG \"$!\"\n$ WRITE CONFIG \"$ corelist   == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]corelist.com\"\"\"\n$ WRITE CONFIG \"$ cpan       == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]cpan.com\"\"\"\n$ WRITE CONFIG \"$ enc2xs     == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]enc2xs.com\"\"\"\n$ WRITE CONFIG \"$ encguess   == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]encguess.com\"\"\"\n$ WRITE CONFIG \"$ h2ph       == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]h2ph.com\"\"\"\n$ WRITE CONFIG \"$ h2xs       == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]h2xs.com\"\"\"\n$ WRITE CONFIG \"$ instmodsh  == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]instmodsh.com\"\"\"\n$ WRITE CONFIG \"$ json_pp    == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]json_pp.com\"\"\"\n$ WRITE CONFIG \"$ libnetcfg  == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]libnetcfg.com\"\"\"\n$ WRITE CONFIG \"$ perlbug    == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]perlbug.com\"\"\"\n$ WRITE CONFIG \"$ perldoc    == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]perldoc.com \"\"\"\"-t\"\"\"\"\"\"\"\n$ WRITE CONFIG \"$ perlivp    == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]perlivp.com\"\"\"\n$ WRITE CONFIG \"$ perlthanks == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]perlthanks.com\"\"\"\n$ WRITE CONFIG \"$ piconv     == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]piconv.com\"\"\"\n$ WRITE CONFIG \"$ pl2pm      == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]pl2pm.com\"\"\"\n$ WRITE CONFIG \"$ pod2html   == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]pod2html.com\"\"\"\n$ WRITE CONFIG \"$ pod2text   == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]pod2text.com\"\"\"\n$ WRITE CONFIG \"$!pod2man    == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]pod2man.com\"\"\"\n$ WRITE CONFIG \"$ pod2usage  == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]pod2usage.com\"\"\"\n$ WRITE CONFIG \"$ podchecker == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]podchecker.com\"\"\"\n$ WRITE CONFIG \"$ podselect  == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]podselect.com\"\"\"\n$ WRITE CONFIG \"$ prove      == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]prove.com\"\"\"\n$ WRITE CONFIG \"$ ptar       == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]ptar.com\"\"\"\n$ WRITE CONFIG \"$ ptardiff   == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]ptardiff.com\"\"\"\n$ WRITE CONFIG \"$ ptargrep   == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]ptargrep.com\"\"\"\n$ WRITE CONFIG \"$ shasum     == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]shasum.com\"\"\"\n$ WRITE CONFIG \"$ splain     == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]splain.com\"\"\"\n$ WRITE CONFIG \"$ xsubpp     == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]xsubpp.com\"\"\"\n$ WRITE CONFIG \"$ zipdetails == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]zipdetails.com\"\"\"\n$ CLOSE CONFIG\n$!\n$ echo  \"\"\n$ echo  \"The file can be found at:\"\n$ echo4 \"    ''F$SEARCH(file_2_find)'\"\n$ echo  \"Add that file (or an @ call to it) to your [SY]LOGIN.COM\"\n$ echo  \"when you are satisfied with a successful compilation,\"\n$ echo  \"testing, and installation of your perl.\"\n$ echo  \"\"\n$ IF ((.NOT.perl_symbol) .AND. (perl_verb .EQS. \"DCLTABLES\"))\n$ THEN\n$   file_2_find = \"[-]''packageup'_install.com\"\n$   OPEN/WRITE CONFIG 'file_2_find'\n$   WRITE CONFIG \"$ set command perl /table=sys$common:[syslib]dcltables.exe -\"\n$   WRITE CONFIG \"    /output=sys$common:[syslib]dcltables.exe\"\n$   WRITE CONFIG \"$ install replace sys$common:[syslib]dcltables.exe\"\n$   CLOSE CONFIG\n$   echo4 \"\"\n$   echo4 \"In order to install the ''packageup' verb into DCLTABLES run:\"\n$   echo4 \"    @ ''F$SEARCH(file_2_find)'\"\n$   echo4 \"after a successful build, test, and install.  Do so with CMKRNL privilege.\"\n$   echo4 \"\"\n$ ENDIF\n$!\n$!figure out where we \"are\" by parsing 'vms_default_directory_name' \n$!\n$ set_def_command = \"\"\n$ dflt = F$ENVIRONMENT(\"DEFAULT\") - \".UU]\" \n$ tmp = vms_default_directory_name - dflt - \"]\"\n$ i = 0\n$ IF tmp .EQS. \"\" THEN GOTO Beyond_set_def_loop\n$Set_def_loop:\n$ tmp1 = F$ELEMENT(i,\".\",tmp)\n$ IF tmp1 .EQS. \".\" THEN GOTO Beyond_set_def_loop\n$ IF i .EQ. 0 \n$ THEN set_def_command = \"set default [-\"\n$ ELSE set_def_command = set_def_command + \"-\"\n$ ENDIF\n$ i = i + 1\n$ GOTO Set_def_loop\n$Beyond_set_def_loop:\n$ IF set_def_command.NES.\"\"\n$ THEN\n$   set_def_command = set_def_command - \"-\" + \"]\"\n$   echo4 \"\"\n$   echo4 \"In order to build ''package' you must now issue the commands:\"\n$   echo4 \"\"\n$   echo4 \" ''set_def_command'\"\n$ ELSE\n$   echo4 \"\"\n$   echo4 \"In order to build ''package' you must now issue the command:\"\n$   echo4 \"\"\n$ ENDIF\n$ echo4 \" ''make'''makefile'\", macros\n$ echo4 \"\"\n$!\n$ IF ( F$SEARCH(\"config.msg\").NES.\"\" ) \n$ THEN\n$   echo4 \"Hmm.  I also noted the following information while running:\"\n$   echo4 \"\"\n$   TYPE/OUTPUT=SYS$ERROR: config.msg\n$   SET PROTECTION=(SYSTEM:RWED,OWNER:RWED) config.msg\n$   DELETE/NOLOG/NOCONFIRM config.msg;\n$ ENDIF\n$!\n$Clean_up:\n$ SET NOON\n$ IF (silent)\n$ THEN\n$   CLOSE/NOLOG STDOUT\n$   DEASSIGN SYS$OUTPUT\n$ ENDIF\n$ CLOSE/NOLOG CONFIG\n$ IF F$GETJPI(\"\",\"FILCNT\").GT.vms_filcnt\n$ THEN WRITE SYS$ERROR \"%Config-W-VMS, WARNING: There is a file still open\"\n$ ENDIF\n$ dflt = F$ENVIRONMENT(\"DEFAULT\")\n$ IF F$LOCATE(\"UU]\",dflt).EQS.(F$LENGTH(dflt)-3)\n$ THEN\n$   IF ( F$SEARCH(\"[.CXX_REPOSITORY]*.*\").NES.\"\" ) \n$   THEN \n$     DELETE/NOLOG/NOCONFIRM [.CXX_REPOSITORY]*.*;*\n$     SET PROTECTION=(SYSTEM:RWED,OWNER:RWED) CXX_REPOSITORY.DIR\n$   ENDIF\n$   IF ( F$SEARCH(\"[]*.*\").NES.\"\" ) THEN DELETE/NOLOG/NOCONFIRM []*.*;*\n$   SET DEFAULT [-]\n$   SET PROTECTION=(SYSTEM:RWED,OWNER:RWED) UU.DIR\n$   DELETE/NOLOG/NOCONFIRM UU.DIR;\n$ ENDIF\n$ SET DEFAULT 'vms_default_directory_name' !be kind rewind\n$ EXIT\n$!: End of Configure\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/makedef.pl": "#./perl -w\n#\n# Create the export list for perl.\n#\n# Needed by WIN32 and OS/2 for creating perl.dll,\n# and by AIX for creating libperl.a when -Duseshrplib is in effect,\n# and by VMS for creating perlshr.exe.\n#\n# Reads from information stored in\n#\n#    %Config::Config (ie config.sh)\n#    config.h\n#    embed.fnc\n#    globvar.sym\n#    intrpvar.h\n#    miniperl.map (on OS/2)\n#    perl5.def    (on OS/2; this is the old version of the file being made)\n#    perlio.sym\n#    perlvars.h\n#    regen/opcodes\n#\n# plus long lists of function names hard-coded directly in this script.\n#\n# Writes the result to STDOUT.\n#\n# Normally this script is invoked from a makefile (e.g. win32/Makefile),\n# which redirects STDOUT to a suitable file, such as:\n#\n#    perl5.def   OS/2\n#    perldll.def Windows\n#    perl.exp    AIX\n#    perl.imp    NetWare\n#    makedef.lis VMS\n\nmy $fold;\nmy %ARGS;\nmy %define;\n\nBEGIN {\n    BEGIN { unshift @INC, \"lib\" }\n    use Config;\n    use strict;\n\n    %ARGS = (CCTYPE => 'MSVC', TARG_DIR => '');\n\n    sub process_cc_flags {\n\tforeach (map {split /\\s+/, $_} @_) {\n\t    $define{$1} = $2 // 1 if /^-D(\\w+)(?:=(.+))?/;\n\t}\n    }\n\n    while (@ARGV) {\n\tmy $flag = shift;\n\tif ($flag =~ /^(?:CC_FLAGS=)?(-D\\w.*)/) {\n\t    process_cc_flags($1);\n\t} elsif ($flag =~ /^(CCTYPE|FILETYPE|PLATFORM|TARG_DIR)=(.+)$/) {\n\t    $ARGS{$1} = $2;\n\t} elsif ($flag eq '--sort-fold') {\n\t    ++$fold;\n\t}\n    }\n    my @PLATFORM = qw(aix win32 wince os2 netware vms test);\n    my %PLATFORM;\n    @PLATFORM{@PLATFORM} = ();\n\n    die \"PLATFORM undefined, must be one of: @PLATFORM\\n\"\n\tunless defined $ARGS{PLATFORM};\n    die \"PLATFORM must be one of: @PLATFORM\\n\"\n\tunless exists $PLATFORM{$ARGS{PLATFORM}};\n}\nuse constant PLATFORM => $ARGS{PLATFORM};\n\nrequire \"./$ARGS{TARG_DIR}regen/embed_lib.pl\";\n\n# Is the following guard strictly necessary? Added during refactoring\n# to keep the same behaviour when merging other code into here.\nprocess_cc_flags(@Config{qw(ccflags optimize)})\n    if $ARGS{PLATFORM} ne 'win32' && $ARGS{PLATFORM} ne 'wince'\n    && $ARGS{PLATFORM} ne 'netware';\n\n# Add the compile-time options that miniperl was built with to %define.\n# On Win32 these are not the same options as perl itself will be built\n# with since miniperl is built with a canned config (one of the win32/\n# config_H.*) and none of the BUILDOPT's that are set in the makefiles,\n# but they do include some #define's that are hard-coded in various\n# source files and header files and don't include any BUILDOPT's that\n# the user might have chosen to disable because the canned configs are\n# minimal configs that don't include any of those options.\n\n#don't use the host Perl's -V defines for the WinCE Perl\nif($ARGS{PLATFORM} ne 'wince') {\n    my @options = sort(Config::bincompat_options(), Config::non_bincompat_options());\n    print STDERR \"Options: (@options)\\n\" unless $ARGS{PLATFORM} eq 'test';\n    $define{$_} = 1 foreach @options;\n}\n\nmy %exportperlmalloc =\n    (\n       Perl_malloc\t\t=>\t\"malloc\",\n       Perl_mfree\t\t=>\t\"free\",\n       Perl_realloc\t\t=>\t\"realloc\",\n       Perl_calloc\t\t=>\t\"calloc\",\n    );\n\nmy $exportperlmalloc = $ARGS{PLATFORM} eq 'os2';\n\nmy $config_h = 'config.h';\nopen(CFG, '<', $config_h) || die \"Cannot open $config_h: $!\\n\";\nwhile (<CFG>) {\n    $define{$1} = 1 if /^\\s*\\#\\s*define\\s+(MYMALLOC|MULTIPLICITY\n                                           |KILL_BY_SIGPRC\n                                           |(?:PERL|USE|HAS)_\\w+)\\b/x;\n}\nclose(CFG);\n\n# perl.h logic duplication begins\n\nif ($define{USE_ITHREADS}) {\n    if (!$define{MULTIPLICITY}) {\n        $define{MULTIPLICITY} = 1;\n    }\n}\n\n$define{PERL_IMPLICIT_CONTEXT} ||=\n    $define{USE_ITHREADS} ||\n    $define{MULTIPLICITY} ;\n\nif ($define{USE_ITHREADS} && $ARGS{PLATFORM} ne 'win32' && $ARGS{PLATFORM} ne 'netware') {\n    $define{USE_REENTRANT_API} = 1;\n}\n\nif (! $define{NO_LOCALE}) {\n    if ( ! $define{NO_POSIX_2008_LOCALE}\n        && $define{HAS_NEWLOCALE}\n        && $define{HAS_USELOCALE}\n        && $define{HAS_DUPLOCALE}\n        && $define{HAS_FREELOCALE})\n    {\n        $define{HAS_POSIX_2008_LOCALE} = 1;\n        $define{USE_LOCALE} = 1;\n    }\n    elsif ($define{HAS_SETLOCALE}) {\n        $define{USE_LOCALE} = 1;\n    }\n}\n\nmy $cctype = $ARGS{CCTYPE} =~ s/MSVC//r;\nif (! $define{HAS_SETLOCALE} && $define{HAS_POSIX_2008_LOCALE}) {\n    $define{USE_POSIX_2008_LOCALE} = 1;\n    $define{USE_THREAD_SAFE_LOCALE} = 1;\n}\nelsif (   ($define{USE_ITHREADS} || $define{USE_THREAD_SAFE_LOCALE})\n       && (    $define{HAS_POSIX_2008_LOCALE}\n           || ($ARGS{PLATFORM} eq 'win32' && (   $cctype !~ /\\D/\n                                              && $cctype >= 80)))\n       && ! $define{NO_THREAD_SAFE_LOCALE})\n{\n    $define{USE_THREAD_SAFE_LOCALE} = 1 unless $define{USE_THREAD_SAFE_LOCALE};\n    $define{USE_POSIX_2008_LOCALE} = 1 if $define{HAS_POSIX_2008_LOCALE};\n}\n\nif (   $ARGS{PLATFORM} eq 'win32'\n    && $define{USE_THREAD_SAFE_LOCALE}\n    && $cctype < 140)\n{\n    $define{TS_W32_BROKEN_LOCALECONV} = 1;\n}\n\n# perl.h logic duplication ends\n\nprint STDERR \"Defines: (\" . join(' ', sort keys %define) . \")\\n\"\n     unless $ARGS{PLATFORM} eq 'test';\n\nmy $sym_ord = 0;\nmy %ordinal;\n\nif ($ARGS{PLATFORM} eq 'os2') {\n    if (open my $fh, '<', 'perl5.def') {\n      while (<$fh>) {\n\tlast if /^\\s*EXPORTS\\b/;\n      }\n      while (<$fh>) {\n\t$ordinal{$1} = $2 if /^\\s*\"(\\w+)\"\\s*(?:=\\s*\"\\w+\"\\s*)?\\@(\\d+)\\s*$/;\n\t# This allows skipping ordinals which were used in older versions\n\t$sym_ord = $1 if /^\\s*;\\s*LAST_ORDINAL\\s*=\\s*(\\d+)\\s*$/;\n      }\n      $sym_ord < $_ and $sym_ord = $_ for values %ordinal; # Take the max\n    }\n}\n\nmy %skip;\n# All platforms export boot_DynaLoader unconditionally.\nmy %export = ( boot_DynaLoader => 1 );\n\nsub try_symbols {\n    foreach my $symbol (@_) {\n\t++$export{$symbol} unless exists $skip{$symbol};\n    }\n}\n\nsub readvar {\n    # $hash is the hash that we're adding to. For one of our callers, it will\n    # actually be the skip hash but that doesn't affect the intent of what\n    # we're doing, as in that case we skip adding something to the skip hash\n    # for the second time.\n\n    my $file = $ARGS{TARG_DIR} . shift;\n    my $hash = shift;\n    my $proc = shift;\n    open my $vars, '<', $file or die die \"Cannot open $file: $!\\n\";\n\n    while (<$vars>) {\n\t# All symbols have a Perl_ prefix because that's what embed.h sticks\n\t# in front of them.  The A?I?S?C? is strictly speaking wrong.\n\tnext unless /\\bPERLVAR(A?I?S?C?)\\(([IGT]),\\s*(\\w+)/;\n\n\tmy $var = \"PL_$3\";\n\tmy $symbol = $proc ? &$proc($1,$2,$3) : $var;\n\t++$hash->{$symbol} unless exists $skip{$var};\n    }\n}\n\nif ($ARGS{PLATFORM} ne 'os2') {\n    ++$skip{$_} foreach qw(\n\t\t     PL_cryptseen\n\t\t     PL_opsave\n\t\t     Perl_GetVars\n\t\t     Perl_dump_fds\n\t\t     Perl_my_bcopy\n\t\t     Perl_my_bzero\n\t\t     Perl_my_chsize\n\t\t     Perl_my_htonl\n\t\t     Perl_my_memcmp\n\t\t     Perl_my_memset\n\t\t     Perl_my_ntohl\n\t\t     Perl_my_swap\n\t\t\t );\n    if ($ARGS{PLATFORM} eq 'vms') {\n\t++$skip{PL_statusvalue_posix};\n        # This is a wrapper if we have symlink, not a replacement\n        # if we don't.\n        ++$skip{Perl_my_symlink} unless $Config{d_symlink};\n    } else {\n\t++$skip{PL_statusvalue_vms};\n\t++$skip{PL_perllib_sep};\n\tif ($ARGS{PLATFORM} ne 'aix') {\n\t    ++$skip{$_} foreach qw(\n\t\t\t\tPL_DBcv\n\t\t\t\tPL_generation\n\t\t\t\tPL_lastgotoprobe\n\t\t\t\tPL_modcount\n\t\t\t\tmain\n\t\t\t\t );\n\t}\n    }\n}\n\nif ($ARGS{PLATFORM} ne 'vms') {\n    # VMS does its own thing for these symbols.\n    ++$skip{$_} foreach qw(\n\t\t\tPL_sig_handlers_initted\n\t\t\tPL_sig_ignoring\n\t\t\tPL_sig_defaulting\n\t\t\t );\n    if ($ARGS{PLATFORM} ne 'win32') {\n\t++$skip{$_} foreach qw(\n\t\t\t    Perl_do_spawn\n\t\t\t    Perl_do_spawn_nowait\n\t\t\t    Perl_do_aspawn\n\t\t\t     );\n    }\n}\n\nif ($ARGS{PLATFORM} ne 'win32') {\n    ++$skip{$_} foreach qw(\n\t\t    Perl_my_setlocale\n\t\t\t );\n}\n\nunless ($define{UNLINK_ALL_VERSIONS}) {\n    ++$skip{Perl_unlnk};\n}\n\nunless ($define{'DEBUGGING'}) {\n    ++$skip{$_} foreach qw(\n\t\t    Perl_debop\n\t\t    Perl_debprofdump\n\t\t    Perl_debstack\n\t\t    Perl_debstackptrs\n\t\t    Perl_pad_sv\n\t\t    Perl_pad_setsv\n                    Perl__setlocale_debug_string\n\t\t    Perl_set_padlist\n\t\t    Perl_hv_assert\n\t\t    PL_watchaddr\n\t\t    PL_watchok\n\t\t\t );\n}\n\nif ($define{'PERL_IMPLICIT_SYS'}) {\n    ++$skip{$_} foreach qw(\n\t\t    Perl_my_popen\n\t\t    Perl_my_pclose\n\t\t\t );\n    ++$export{$_} foreach qw(perl_get_host_info perl_alloc_override);\n    ++$export{perl_clone_host} if $define{USE_ITHREADS};\n}\nelse {\n    ++$skip{$_} foreach qw(\n\t\t    PL_Mem\n\t\t    PL_MemShared\n\t\t    PL_MemParse\n\t\t    PL_Env\n\t\t    PL_StdIO\n\t\t    PL_LIO\n\t\t    PL_Dir\n\t\t    PL_Sock\n\t\t    PL_Proc\n\t\t    perl_alloc_using\n\t\t    perl_clone_using\n\t\t\t );\n}\n\nif (!$define{'PERL_COPY_ON_WRITE'} || $define{'PERL_NO_COW'}) {\n    ++$skip{Perl_sv_setsv_cow};\n}\n\nunless ($define{PERL_SAWAMPERSAND}) {\n    ++$skip{PL_sawampersand};\n}\n\nunless ($define{'USE_REENTRANT_API'}) {\n    ++$skip{PL_reentrant_buffer};\n}\n\nif ($define{'MYMALLOC'}) {\n    try_symbols(qw(\n\t\t    Perl_dump_mstats\n\t\t    Perl_get_mstats\n\t\t    Perl_strdup\n\t\t    Perl_putenv\n\t\t    MallocCfg_ptr\n\t\t    MallocCfgP_ptr\n\t\t    ));\n    unless ($define{USE_ITHREADS}) {\n\t++$skip{PL_malloc_mutex}\n    }\n}\nelse {\n    ++$skip{$_} foreach qw(\n\t\t    PL_malloc_mutex\n\t\t    Perl_dump_mstats\n\t\t    Perl_get_mstats\n\t\t    MallocCfg_ptr\n\t\t    MallocCfgP_ptr\n\t\t\t );\n}\n\nif ($define{'PERL_USE_SAFE_PUTENV'}) {\n    ++$skip{PL_use_safe_putenv};\n}\n\nunless ($define{'USE_ITHREADS'}) {\n    ++$skip{PL_thr_key};\n    ++$skip{PL_user_prop_mutex};\n    ++$skip{PL_user_def_props_aTHX};\n}\n\n# USE_5005THREADS symbols. Kept as reference for easier removal\n++$skip{$_} foreach qw(\n\t\t    PL_sv_mutex\n\t\t    PL_strtab_mutex\n\t\t    PL_svref_mutex\n\t\t    PL_cred_mutex\n\t\t    PL_eval_mutex\n\t\t    PL_fdpid_mutex\n\t\t    PL_sv_lock_mutex\n\t\t    PL_eval_cond\n\t\t    PL_eval_owner\n\t\t    PL_threads_mutex\n\t\t    PL_nthreads\n\t\t    PL_nthreads_cond\n\t\t    PL_threadnum\n\t\t    PL_threadsv_names\n\t\t    PL_thrsv\n\t\t    PL_vtbl_mutex\n\t\t    Perl_condpair_magic\n\t\t    Perl_new_struct_thread\n\t\t    Perl_per_thread_magicals\n\t\t    Perl_thread_create\n\t\t    Perl_find_threadsv\n\t\t    Perl_unlock_condpair\n\t\t    Perl_magic_mutexfree\n\t\t    Perl_sv_lock\n\t\t     );\n\nunless ($define{'USE_ITHREADS'}) {\n    ++$skip{$_} foreach qw(\n                    PL_keyword_plugin_mutex\n\t\t    PL_check_mutex\n\t\t    PL_op_mutex\n\t\t    PL_regex_pad\n\t\t    PL_regex_padav\n\t\t    PL_dollarzero_mutex\n\t\t    PL_hints_mutex\n\t\t    PL_locale_mutex\n\t\t    PL_lc_numeric_mutex\n\t\t    PL_lc_numeric_mutex_depth\n\t\t    PL_my_ctx_mutex\n\t\t    PL_perlio_mutex\n\t\t    PL_stashpad\n\t\t    PL_stashpadix\n\t\t    PL_stashpadmax\n\t\t    Perl_alloccopstash\n\t\t    Perl_allocfilegv\n\t\t    Perl_clone_params_del\n\t\t    Perl_clone_params_new\n\t\t    Perl_parser_dup\n\t\t    Perl_dirp_dup\n\t\t    Perl_cx_dup\n\t\t    Perl_si_dup\n\t\t    Perl_any_dup\n\t\t    Perl_ss_dup\n\t\t    Perl_fp_dup\n\t\t    Perl_gp_dup\n\t\t    Perl_he_dup\n\t\t    Perl_mg_dup\n\t\t    Perl_re_dup_guts\n\t\t    Perl_sv_dup\n\t\t    Perl_sv_dup_inc\n\t\t    Perl_rvpv_dup\n\t\t    Perl_hek_dup\n\t\t    Perl_sys_intern_dup\n\t\t    perl_clone\n\t\t    perl_clone_using\n\t\t    Perl_stashpv_hvname_match\n\t\t    Perl_regdupe_internal\n\t\t    Perl_newPADOP\n\t\t\t );\n}\n\nif (      $define{NO_LOCALE}\n    || (! $define{USE_ITHREADS} && ! $define{USE_THREAD_SAFE_LOCALE}))\n{\n    ++$skip{$_} foreach qw(\n        PL_C_locale_obj\n        PL_curlocales\n    );\n}\n\nunless ( $define{'HAS_NEWLOCALE'}\n    &&   $define{'HAS_FREELOCALE'}\n    &&   $define{'HAS_USELOCALE'}\n    && ! $define{'NO_POSIX_2008_LOCALE'})\n{\n    ++$skip{$_} foreach qw(\n        PL_C_locale_obj\n        PL_underlying_numeric_obj\n    );\n}\n\nunless ($define{'PERL_IMPLICIT_CONTEXT'}) {\n    ++$skip{$_} foreach qw(\n\t\t    PL_my_cxt_index\n\t\t    PL_my_cxt_list\n\t\t    PL_my_cxt_size\n\t\t    PL_my_cxt_keys\n\t\t    PL_my_cxt_keys_size\n\t\t    Perl_croak_nocontext\n\t\t    Perl_die_nocontext\n\t\t    Perl_deb_nocontext\n\t\t    Perl_form_nocontext\n\t\t    Perl_load_module_nocontext\n\t\t    Perl_mess_nocontext\n\t\t    Perl_warn_nocontext\n\t\t    Perl_warner_nocontext\n\t\t    Perl_newSVpvf_nocontext\n\t\t    Perl_sv_catpvf_nocontext\n\t\t    Perl_sv_setpvf_nocontext\n\t\t    Perl_sv_catpvf_mg_nocontext\n\t\t    Perl_sv_setpvf_mg_nocontext\n\t\t    Perl_my_cxt_init\n\t\t    Perl_my_cxt_index\n\t\t\t );\n}\n\nif ($define{USE_THREAD_SAFE_LOCALE}) {\n    ++$skip{PL_lc_numeric_mutex};\n    ++$skip{PL_lc_numeric_mutex_depth};\n    if (! $define{TS_W32_BROKEN_LOCALECONV}) {\n        ++$skip{PL_locale_mutex};\n    }\n}\n\nunless ($define{'USE_DTRACE'}) {\n    ++$skip{$_} foreach qw(\n                    Perl_dtrace_probe_call\n                    Perl_dtrace_probe_load\n                    Perl_dtrace_probe_op\n                    Perl_dtrace_probe_phase\n                );\n}\n\nunless ($define{'PERL_NEED_APPCTX'}) {\n    ++$skip{PL_appctx};\n}\n\nunless ($define{'PERL_NEED_TIMESBASE'}) {\n    ++$skip{PL_timesbase};\n}\n\nunless ($define{'DEBUG_LEAKING_SCALARS'}) {\n    ++$skip{PL_sv_serial};\n}\n\nunless ($define{'DEBUG_LEAKING_SCALARS_FORK_DUMP'}) {\n    ++$skip{PL_dumper_fd};\n}\n\nunless ($define{'PERL_DONT_CREATE_GVSV'}) {\n    ++$skip{Perl_gv_SVadd};\n}\n\nunless ($define{'PERL_USES_PL_PIDSTATUS'}) {\n    ++$skip{PL_pidstatus};\n}\n\nunless ($define{'PERL_TRACK_MEMPOOL'}) {\n    ++$skip{PL_memory_debug_header};\n}\n\nunless ($define{'MULTIPLICITY'}) {\n    ++$skip{$_} foreach qw(\n\t\t    PL_interp_size\n\t\t    PL_interp_size_5_18_0\n                    PL_sv_yes\n                    PL_sv_undef\n                    PL_sv_no\n                    PL_sv_zero\n\t\t\t );\n}\n\nunless ($define{'PERL_GLOBAL_STRUCT'}) {\n    ++$skip{PL_global_struct_size};\n}\n\nunless ($define{'PERL_GLOBAL_STRUCT_PRIVATE'}) {\n    ++$skip{$_} foreach qw(\n\t\t    PL_my_cxt_keys\n\t\t    PL_my_cxt_keys_size\n\t\t    Perl_my_cxt_index\n\t\t\t );\n}\n\nunless ($define{HAS_MMAP}) {\n    ++$skip{PL_mmap_page_size};\n}\n\nif ($define{HAS_SIGACTION}) {\n    ++$skip{PL_sig_trapped};\n\n    if ($ARGS{PLATFORM} eq 'vms') {\n        # FAKE_PERSISTENT_SIGNAL_HANDLERS defined as !defined(HAS_SIGACTION)\n        ++$skip{PL_sig_ignoring};\n        ++$skip{PL_sig_handlers_initted} unless $define{KILL_BY_SIGPRC};\n    }\n}\n\nif ($ARGS{PLATFORM} eq 'vms' && !$define{KILL_BY_SIGPRC}) {\n    # FAKE_DEFAULT_SIGNAL_HANDLERS defined as KILL_BY_SIGPRC\n    ++$skip{Perl_csighandler_init};\n    ++$skip{Perl_my_kill};\n    ++$skip{Perl_sig_to_vmscondition};\n    ++$skip{PL_sig_defaulting};\n    ++$skip{PL_sig_handlers_initted} unless !$define{HAS_SIGACTION};\n}\n\nif ($define{'HAS_STRNLEN'})\n{\n    ++$skip{Perl_my_strnlen};\n}\n\nunless ($define{USE_LOCALE_COLLATE}) {\n    ++$skip{$_} foreach qw(\n\t\t    PL_collation_ix\n\t\t    PL_collation_name\n\t\t    PL_collation_standard\n\t\t    PL_collxfrm_base\n\t\t    PL_collxfrm_mult\n\t\t    Perl_sv_collxfrm\n\t\t    Perl_sv_collxfrm_flags\n                    PL_strxfrm_NUL_replacement\n                    PL_strxfrm_is_behaved\n                    PL_strxfrm_max_cp\n\t\t\t );\n}\n\nunless ($define{USE_LOCALE_NUMERIC}) {\n    ++$skip{$_} foreach qw(\n\t\t    PL_numeric_local\n\t\t    PL_numeric_name\n\t\t    PL_numeric_radix_sv\n\t\t    PL_numeric_standard\n                    PL_numeric_underlying\n                    PL_numeric_underlying_is_standard\n                    PL_underlying_numeric_obj\n\t\t\t );\n}\n\nunless ($define{'USE_C_BACKTRACE'}) {\n    ++$skip{Perl_get_c_backtrace_dump};\n    ++$skip{Perl_dump_c_backtrace};\n}\n\nunless ($define{HAVE_INTERP_INTERN}) {\n    ++$skip{$_} foreach qw(\n\t\t    Perl_sys_intern_clear\n\t\t    Perl_sys_intern_dup\n\t\t    Perl_sys_intern_init\n\t\t    PL_sys_intern\n\t\t\t );\n}\n\nif ($define{HAS_SIGNBIT}) {\n    ++$skip{Perl_signbit};\n}\n\nif ($define{'PERL_GLOBAL_STRUCT'}) {\n    readvar('perlvars.h', \\%skip);\n    # This seems like the least ugly way to cope with the fact that PL_sh_path\n    # is mentioned in perlvar.h and globvar.sym, and always exported.\n    delete $skip{PL_sh_path};\n    ++$export{Perl_GetVars};\n    try_symbols(qw(PL_Vars PL_VarsPtr))\n      unless $ARGS{CCTYPE} eq 'GCC' || $define{PERL_GLOBAL_STRUCT_PRIVATE};\n} else {\n    ++$skip{$_} foreach qw(Perl_init_global_struct Perl_free_global_struct);\n}\n\n++$skip{PL_op_exec_cnt}\n    unless $define{PERL_TRACE_OPS};\n\n++$skip{PL_hash_chars}\n    unless $define{PERL_USE_SINGLE_CHAR_HASH_CACHE};\n\n# functions from *.sym files\n\nmy @syms = qw(globvar.sym);\n\n# Symbols that are the public face of the PerlIO layers implementation\n# These are in _addition to_ the public face of the abstraction\n# and need to be exported to allow XS modules to implement layers\nmy @layer_syms = qw(\n\t\t    PerlIOBase_binmode\n\t\t    PerlIOBase_clearerr\n\t\t    PerlIOBase_close\n\t\t    PerlIOBase_dup\n\t\t    PerlIOBase_eof\n\t\t    PerlIOBase_error\n\t\t    PerlIOBase_fileno\n\t\t    PerlIOBase_open\n\t\t    PerlIOBase_noop_fail\n\t\t    PerlIOBase_noop_ok\n\t\t    PerlIOBase_popped\n\t\t    PerlIOBase_pushed\n\t\t    PerlIOBase_read\n\t\t    PerlIOBase_setlinebuf\n\t\t    PerlIOBase_unread\n\t\t    PerlIOBuf_bufsiz\n\t\t    PerlIOBuf_close\n\t\t    PerlIOBuf_dup\n\t\t    PerlIOBuf_fill\n\t\t    PerlIOBuf_flush\n\t\t    PerlIOBuf_get_base\n\t\t    PerlIOBuf_get_cnt\n\t\t    PerlIOBuf_get_ptr\n\t\t    PerlIOBuf_open\n\t\t    PerlIOBuf_popped\n\t\t    PerlIOBuf_pushed\n\t\t    PerlIOBuf_read\n\t\t    PerlIOBuf_seek\n\t\t    PerlIOBuf_set_ptrcnt\n\t\t    PerlIOBuf_tell\n\t\t    PerlIOBuf_unread\n\t\t    PerlIOBuf_write\n\t\t    PerlIO_allocate\n\t\t    PerlIO_apply_layera\n\t\t    PerlIO_apply_layers\n\t\t    PerlIO_arg_fetch\n\t\t    PerlIO_debug\n\t\t    PerlIO_define_layer\n\t\t    PerlIO_find_layer\n\t\t    PerlIO_isutf8\n\t\t    PerlIO_layer_fetch\n\t\t    PerlIO_list_alloc\n\t\t    PerlIO_list_free\n\t\t    PerlIO_modestr\n\t\t    PerlIO_parse_layers\n\t\t    PerlIO_pending\n\t\t    PerlIO_perlio\n\t\t    PerlIO_pop\n\t\t    PerlIO_push\n\t\t    PerlIO_sv_dup\n\t\t    Perl_PerlIO_clearerr\n\t\t    Perl_PerlIO_close\n\t\t    Perl_PerlIO_context_layers\n\t\t    Perl_PerlIO_eof\n\t\t    Perl_PerlIO_error\n\t\t    Perl_PerlIO_fileno\n\t\t    Perl_PerlIO_fill\n\t\t    Perl_PerlIO_flush\n\t\t    Perl_PerlIO_get_base\n\t\t    Perl_PerlIO_get_bufsiz\n\t\t    Perl_PerlIO_get_cnt\n\t\t    Perl_PerlIO_get_ptr\n\t\t    Perl_PerlIO_read\n\t\t    Perl_PerlIO_restore_errno\n\t\t    Perl_PerlIO_save_errno\n\t\t    Perl_PerlIO_seek\n\t\t    Perl_PerlIO_set_cnt\n\t\t    Perl_PerlIO_set_ptrcnt\n\t\t    Perl_PerlIO_setlinebuf\n\t\t    Perl_PerlIO_stderr\n\t\t    Perl_PerlIO_stdin\n\t\t    Perl_PerlIO_stdout\n\t\t    Perl_PerlIO_tell\n\t\t    Perl_PerlIO_unread\n\t\t    Perl_PerlIO_write\n);\nif ($ARGS{PLATFORM} eq 'netware') {\n    push(@layer_syms,'PL_def_layerlist','PL_known_layers','PL_perlio');\n}\n\n# Export the symbols that make up the PerlIO abstraction, regardless\n# of its implementation - read from a file\npush @syms, 'perlio.sym';\n\n# PerlIO with layers - export implementation\ntry_symbols(@layer_syms, 'perlsio_binmode');\n\n\nunless ($define{'USE_QUADMATH'}) {\n  ++$skip{Perl_quadmath_format_needed};\n  ++$skip{Perl_quadmath_format_single};\n}\n\n###############################################################################\n\n# At this point all skip lists should be completed, as we are about to test\n# many symbols against them.\n\n{\n    my %seen;\n    my ($embed) = setup_embed($ARGS{TARG_DIR});\n    my $excludedre = $define{'NO_MATHOMS'} ? qr/[xmib]/ : qr/[xmi]/;\n\n    foreach (@$embed) {\n\tmy ($flags, $retval, $func, @args) = @$_;\n\tnext unless $func;\n\tif (($flags =~ /[AX]/ && $flags !~ $excludedre)\n            || (!$define{'NO_MATHOMS'} && $flags =~ /b/))\n        {\n\t    # public API, so export\n\n\t    # If a function is defined twice, for example before and after\n\t    # an #else, only export its name once. Important to do this test\n\t    # within the block, as the *first* definition may have flags which\n\t    # mean \"don't export\"\n\t    next if $seen{$func}++;\n\t    # Should we also skip adding the Perl_ prefix if $flags =~ /o/ ?\n\t    $func = \"Perl_$func\" if ($flags =~ /[pX]/ && $func !~ /^Perl_/);\n\t    ++$export{$func} unless exists $skip{$func};\n\t}\n    }\n}\n\nforeach (@syms) {\n    my $syms = $ARGS{TARG_DIR} . $_;\n    open my $global, '<', $syms or die \"failed to open $syms: $!\\n\";\n    while (<$global>) {\n\tnext unless /^([A-Za-z].*)/;\n\tmy $symbol = \"$1\";\n\t++$export{$symbol} unless exists $skip{$symbol};\n    }\n}\n\n# variables\n\nif ($define{'MULTIPLICITY'} && $define{PERL_GLOBAL_STRUCT}) {\n    readvar('perlvars.h', \\%export, sub { \"Perl_\" . $_[1] . $_[2] . \"_ptr\" });\n    # XXX AIX seems to want the perlvars.h symbols, for some reason\n    if ($ARGS{PLATFORM} eq 'aix' or $ARGS{PLATFORM} eq 'os2') {\t# OS/2 needs PL_thr_key\n\treadvar('perlvars.h', \\%export);\n    }\n}\nelse {\n    unless ($define{'PERL_GLOBAL_STRUCT'}) {\n\treadvar('perlvars.h', \\%export);\n    }\n    unless ($define{MULTIPLICITY}) {\n\treadvar('intrpvar.h', \\%export);\n    }\n}\n\n# Oddities from PerlIO\n# All have alternate implementations in perlio.c, so always exist.\n# Should they be considered to be part of the API?\ntry_symbols(qw(\n\t\t    PerlIO_binmode\n\t\t    PerlIO_getpos\n\t\t    PerlIO_init\n\t\t    PerlIO_setpos\n\t\t    PerlIO_tmpfile\n\t     ));\n\nif ($ARGS{PLATFORM} eq 'win32') {\n    try_symbols(qw(\n\t\t\t\t win32_free_childdir\n\t\t\t\t win32_free_childenv\n\t\t\t\t win32_get_childdir\n\t\t\t\t win32_get_childenv\n\t\t\t\t win32_spawnvp\n\t\t ));\n}\n\nif ($ARGS{PLATFORM} eq 'wince') {\n    ++$skip{'win32_isatty'}; # commit 4342f4d6df is win32-only\n}\n\nif ($ARGS{PLATFORM} =~ /^win(?:32|ce)$/) {\n    try_symbols(qw(\n\t\t\t    Perl_init_os_extras\n\t\t\t    Perl_thread_create\n\t\t\t    Perl_win32_init\n\t\t\t    Perl_win32_term\n\t\t\t    RunPerl\n\t\t\t    win32_async_check\n\t\t\t    win32_errno\n\t\t\t    win32_environ\n\t\t\t    win32_abort\n\t\t\t    win32_fstat\n\t\t\t    win32_stat\n\t\t\t    win32_pipe\n\t\t\t    win32_popen\n\t\t\t    win32_pclose\n\t\t\t    win32_rename\n\t\t\t    win32_setmode\n\t\t\t    win32_chsize\n\t\t\t    win32_lseek\n\t\t\t    win32_tell\n\t\t\t    win32_dup\n\t\t\t    win32_dup2\n\t\t\t    win32_open\n\t\t\t    win32_close\n\t\t\t    win32_eof\n\t\t\t    win32_isatty\n\t\t\t    win32_read\n\t\t\t    win32_write\n\t\t\t    win32_mkdir\n\t\t\t    win32_rmdir\n\t\t\t    win32_chdir\n\t\t\t    win32_flock\n\t\t\t    win32_execv\n\t\t\t    win32_execvp\n\t\t\t    win32_htons\n\t\t\t    win32_ntohs\n\t\t\t    win32_htonl\n\t\t\t    win32_ntohl\n\t\t\t    win32_inet_addr\n\t\t\t    win32_inet_ntoa\n\t\t\t    win32_socket\n\t\t\t    win32_bind\n\t\t\t    win32_listen\n\t\t\t    win32_accept\n\t\t\t    win32_connect\n\t\t\t    win32_send\n\t\t\t    win32_sendto\n\t\t\t    win32_recv\n\t\t\t    win32_recvfrom\n\t\t\t    win32_shutdown\n\t\t\t    win32_closesocket\n\t\t\t    win32_ioctlsocket\n\t\t\t    win32_setsockopt\n\t\t\t    win32_getsockopt\n\t\t\t    win32_getpeername\n\t\t\t    win32_getsockname\n\t\t\t    win32_gethostname\n\t\t\t    win32_gethostbyname\n\t\t\t    win32_gethostbyaddr\n\t\t\t    win32_getprotobyname\n\t\t\t    win32_getprotobynumber\n\t\t\t    win32_getservbyname\n\t\t\t    win32_getservbyport\n\t\t\t    win32_select\n\t\t\t    win32_endhostent\n\t\t\t    win32_endnetent\n\t\t\t    win32_endprotoent\n\t\t\t    win32_endservent\n\t\t\t    win32_getnetent\n\t\t\t    win32_getnetbyname\n\t\t\t    win32_getnetbyaddr\n\t\t\t    win32_getprotoent\n\t\t\t    win32_getservent\n\t\t\t    win32_sethostent\n\t\t\t    win32_setnetent\n\t\t\t    win32_setprotoent\n\t\t\t    win32_setservent\n\t\t\t    win32_getenv\n\t\t\t    win32_putenv\n\t\t\t    win32_perror\n\t\t\t    win32_malloc\n\t\t\t    win32_calloc\n\t\t\t    win32_realloc\n\t\t\t    win32_free\n\t\t\t    win32_sleep\n\t\t\t    win32_pause\n\t\t\t    win32_times\n\t\t\t    win32_access\n\t\t\t    win32_alarm\n\t\t\t    win32_chmod\n\t\t\t    win32_open_osfhandle\n\t\t\t    win32_get_osfhandle\n\t\t\t    win32_ioctl\n\t\t\t    win32_link\n\t\t\t    win32_unlink\n\t\t\t    win32_utime\n\t\t\t    win32_gettimeofday\n\t\t\t    win32_uname\n\t\t\t    win32_wait\n\t\t\t    win32_waitpid\n\t\t\t    win32_kill\n\t\t\t    win32_str_os_error\n\t\t\t    win32_opendir\n\t\t\t    win32_readdir\n\t\t\t    win32_telldir\n\t\t\t    win32_seekdir\n\t\t\t    win32_rewinddir\n\t\t\t    win32_closedir\n\t\t\t    win32_longpath\n\t\t\t    win32_ansipath\n\t\t\t    win32_os_id\n\t\t\t    win32_getpid\n\t\t\t    win32_crypt\n\t\t\t    win32_dynaload\n\t\t\t    win32_clearenv\n\t\t\t    win32_stdin\n\t\t\t    win32_stdout\n\t\t\t    win32_stderr\n\t\t\t    win32_ferror\n\t\t\t    win32_feof\n\t\t\t    win32_strerror\n\t\t\t    win32_fprintf\n\t\t\t    win32_printf\n\t\t\t    win32_vfprintf\n\t\t\t    win32_vprintf\n\t\t\t    win32_fread\n\t\t\t    win32_fwrite\n\t\t\t    win32_fopen\n\t\t\t    win32_fdopen\n\t\t\t    win32_freopen\n\t\t\t    win32_fclose\n\t\t\t    win32_fputs\n\t\t\t    win32_fputc\n\t\t\t    win32_ungetc\n\t\t\t    win32_getc\n\t\t\t    win32_fileno\n\t\t\t    win32_clearerr\n\t\t\t    win32_fflush\n\t\t\t    win32_ftell\n\t\t\t    win32_fseek\n\t\t\t    win32_fgetpos\n\t\t\t    win32_fsetpos\n\t\t\t    win32_rewind\n\t\t\t    win32_tmpfile\n\t\t\t    win32_setbuf\n\t\t\t    win32_setvbuf\n\t\t\t    win32_flushall\n\t\t\t    win32_fcloseall\n\t\t\t    win32_fgets\n\t\t\t    win32_gets\n\t\t\t    win32_fgetc\n\t\t\t    win32_putc\n\t\t\t    win32_puts\n\t\t\t    win32_getchar\n\t\t\t    win32_putchar\n\t\t ));\n}\nelsif ($ARGS{PLATFORM} eq 'vms') {\n    try_symbols(qw(\n\t\t      Perl_cando\n\t\t      Perl_cando_by_name\n\t\t      Perl_closedir\n\t\t      Perl_csighandler_init\n\t\t      Perl_do_rmdir\n\t\t      Perl_fileify_dirspec\n\t\t      Perl_fileify_dirspec_ts\n\t\t      Perl_fileify_dirspec_utf8\n\t\t      Perl_fileify_dirspec_utf8_ts\n\t\t      Perl_flex_fstat\n\t\t      Perl_flex_lstat\n\t\t      Perl_flex_stat\n\t\t      Perl_kill_file\n\t\t      Perl_my_chdir\n\t\t      Perl_my_chmod\n\t\t      Perl_my_crypt\n\t\t      Perl_my_endpwent\n\t\t      Perl_my_fclose\n\t\t      Perl_my_fdopen\n\t\t      Perl_my_fgetname\n\t\t      Perl_my_flush\n\t\t      Perl_my_fwrite\n\t\t      Perl_my_gconvert\n\t\t      Perl_my_getenv\n\t\t      Perl_my_getenv_len\n\t\t      Perl_my_getpwnam\n\t\t      Perl_my_getpwuid\n\t\t      Perl_my_gmtime\n\t\t      Perl_my_kill\n\t\t      Perl_my_killpg\n\t\t      Perl_my_localtime\n\t\t      Perl_my_mkdir\n\t\t      Perl_my_sigaction\n\t\t      Perl_my_symlink\n\t\t      Perl_my_time\n\t\t      Perl_my_tmpfile\n\t\t      Perl_my_trnlnm\n\t\t      Perl_my_utime\n\t\t      Perl_my_waitpid\n\t\t      Perl_opendir\n\t\t      Perl_pathify_dirspec\n\t\t      Perl_pathify_dirspec_ts\n\t\t      Perl_pathify_dirspec_utf8\n\t\t      Perl_pathify_dirspec_utf8_ts\n\t\t      Perl_readdir\n\t\t      Perl_readdir_r\n\t\t      Perl_rename\n\t\t      Perl_rmscopy\n\t\t      Perl_rmsexpand\n\t\t      Perl_rmsexpand_ts\n\t\t      Perl_rmsexpand_utf8\n\t\t      Perl_rmsexpand_utf8_ts\n\t\t      Perl_seekdir\n\t\t      Perl_sig_to_vmscondition\n\t\t      Perl_telldir\n\t\t      Perl_tounixpath\n\t\t      Perl_tounixpath_ts\n\t\t      Perl_tounixpath_utf8\n\t\t      Perl_tounixpath_utf8_ts\n\t\t      Perl_tounixspec\n\t\t      Perl_tounixspec_ts\n\t\t      Perl_tounixspec_utf8\n\t\t      Perl_tounixspec_utf8_ts\n\t\t      Perl_tovmspath\n\t\t      Perl_tovmspath_ts\n\t\t      Perl_tovmspath_utf8\n\t\t      Perl_tovmspath_utf8_ts\n\t\t      Perl_tovmsspec\n\t\t      Perl_tovmsspec_ts\n\t\t      Perl_tovmsspec_utf8\n\t\t      Perl_tovmsspec_utf8_ts\n\t\t      Perl_trim_unixpath\n\t\t      Perl_vms_case_tolerant\n\t\t      Perl_vms_do_aexec\n\t\t      Perl_vms_do_exec\n\t\t      Perl_vms_image_init\n\t\t      Perl_vms_realpath\n\t\t      Perl_vmssetenv\n\t\t      Perl_vmssetuserlnm\n\t\t      Perl_vmstrnenv\n\t\t      PerlIO_openn\n\t\t ));\n}\nelsif ($ARGS{PLATFORM} eq 'os2') {\n    try_symbols(qw(\n\t\t      ctermid\n\t\t      get_sysinfo\n\t\t      Perl_OS2_init\n\t\t      Perl_OS2_init3\n\t\t      Perl_OS2_term\n\t\t      OS2_Perl_data\n\t\t      dlopen\n\t\t      dlsym\n\t\t      dlerror\n\t\t      dlclose\n\t\t      dup2\n\t\t      dup\n\t\t      my_tmpfile\n\t\t      my_tmpnam\n\t\t      my_flock\n\t\t      my_rmdir\n\t\t      my_mkdir\n\t\t      my_getpwuid\n\t\t      my_getpwnam\n\t\t      my_getpwent\n\t\t      my_setpwent\n\t\t      my_endpwent\n\t\t      fork_with_resources\n\t\t      croak_with_os2error\n\t\t      setgrent\n\t\t      endgrent\n\t\t      getgrent\n\t\t      malloc_mutex\n\t\t      threads_mutex\n\t\t      nthreads\n\t\t      nthreads_cond\n\t\t      os2_cond_wait\n\t\t      os2_stat\n\t\t      os2_execname\n\t\t      async_mssleep\n\t\t      msCounter\n\t\t      InfoTable\n\t\t      pthread_join\n\t\t      pthread_create\n\t\t      pthread_detach\n\t\t      XS_Cwd_change_drive\n\t\t      XS_Cwd_current_drive\n\t\t      XS_Cwd_extLibpath\n\t\t      XS_Cwd_extLibpath_set\n\t\t      XS_Cwd_sys_abspath\n\t\t      XS_Cwd_sys_chdir\n\t\t      XS_Cwd_sys_cwd\n\t\t      XS_Cwd_sys_is_absolute\n\t\t      XS_Cwd_sys_is_relative\n\t\t      XS_Cwd_sys_is_rooted\n\t\t      XS_DynaLoader_mod2fname\n\t\t      XS_File__Copy_syscopy\n\t\t      Perl_Register_MQ\n\t\t      Perl_Deregister_MQ\n\t\t      Perl_Serve_Messages\n\t\t      Perl_Process_Messages\n\t\t      init_PMWIN_entries\n\t\t      PMWIN_entries\n\t\t      Perl_hab_GET\n\t\t      loadByOrdinal\n\t\t      pExtFCN\n\t\t      os2error\n\t\t      ResetWinError\n\t\t      CroakWinError\n\t\t      PL_do_undump\n\t\t ));\n}\nelsif ($ARGS{PLATFORM} eq 'netware') {\n    try_symbols(qw(\n\t\t\tPerl_init_os_extras\n\t\t\tPerl_thread_create\n\t\t\tPerl_nw5_init\n\t\t\tRunPerl\n\t\t\tAllocStdPerl\n\t\t\tFreeStdPerl\n\t\t\tdo_spawn2\n\t\t\tdo_aspawn\n\t\t\tnw_uname\n\t\t\tnw_stdin\n\t\t\tnw_stdout\n\t\t\tnw_stderr\n\t\t\tnw_feof\n\t\t\tnw_ferror\n\t\t\tnw_fopen\n\t\t\tnw_fclose\n\t\t\tnw_clearerr\n\t\t\tnw_getc\n\t\t\tnw_fgets\n\t\t\tnw_fputc\n\t\t\tnw_fputs\n\t\t\tnw_fflush\n\t\t\tnw_ungetc\n\t\t\tnw_fileno\n\t\t\tnw_fdopen\n\t\t\tnw_freopen\n\t\t\tnw_fread\n\t\t\tnw_fwrite\n\t\t\tnw_setbuf\n\t\t\tnw_setvbuf\n\t\t\tnw_vfprintf\n\t\t\tnw_ftell\n\t\t\tnw_fseek\n\t\t\tnw_rewind\n\t\t\tnw_tmpfile\n\t\t\tnw_fgetpos\n\t\t\tnw_fsetpos\n\t\t\tnw_dup\n\t\t\tnw_access\n\t\t\tnw_chmod\n\t\t\tnw_chsize\n\t\t\tnw_close\n\t\t\tnw_dup2\n\t\t\tnw_flock\n\t\t\tnw_isatty\n\t\t\tnw_link\n\t\t\tnw_lseek\n\t\t\tnw_stat\n\t\t\tnw_mktemp\n\t\t\tnw_open\n\t\t\tnw_read\n\t\t\tnw_rename\n\t\t\tnw_setmode\n\t\t\tnw_unlink\n\t\t\tnw_utime\n\t\t\tnw_write\n\t\t\tnw_chdir\n\t\t\tnw_rmdir\n\t\t\tnw_closedir\n\t\t\tnw_opendir\n\t\t\tnw_readdir\n\t\t\tnw_rewinddir\n\t\t\tnw_seekdir\n\t\t\tnw_telldir\n\t\t\tnw_htonl\n\t\t\tnw_htons\n\t\t\tnw_ntohl\n\t\t\tnw_ntohs\n\t\t\tnw_accept\n\t\t\tnw_bind\n\t\t\tnw_connect\n\t\t\tnw_endhostent\n\t\t\tnw_endnetent\n\t\t\tnw_endprotoent\n\t\t\tnw_endservent\n\t\t\tnw_gethostbyaddr\n\t\t\tnw_gethostbyname\n\t\t\tnw_gethostent\n\t\t\tnw_gethostname\n\t\t\tnw_getnetbyaddr\n\t\t\tnw_getnetbyname\n\t\t\tnw_getnetent\n\t\t\tnw_getpeername\n\t\t\tnw_getprotobyname\n\t\t\tnw_getprotobynumber\n\t\t\tnw_getprotoent\n\t\t\tnw_getservbyname\n\t\t\tnw_getservbyport\n\t\t\tnw_getservent\n\t\t\tnw_getsockname\n\t\t\tnw_getsockopt\n\t\t\tnw_inet_addr\n\t\t\tnw_listen\n\t\t\tnw_socket\n\t\t\tnw_recv\n\t\t\tnw_recvfrom\n\t\t\tnw_select\n\t\t\tnw_send\n\t\t\tnw_sendto\n\t\t\tnw_sethostent\n\t\t\tnw_setnetent\n\t\t\tnw_setprotoent\n\t\t\tnw_setservent\n\t\t\tnw_setsockopt\n\t\t\tnw_inet_ntoa\n\t\t\tnw_shutdown\n\t\t\tnw_crypt\n\t\t\tnw_execvp\n\t\t\tnw_kill\n\t\t\tnw_Popen\n\t\t\tnw_Pclose\n\t\t\tnw_Pipe\n\t\t\tnw_times\n\t\t\tnw_waitpid\n\t\t\tnw_getpid\n\t\t\tnw_spawnvp\n\t\t\tnw_os_id\n\t\t\tnw_open_osfhandle\n\t\t\tnw_get_osfhandle\n\t\t\tnw_abort\n\t\t\tnw_sleep\n\t\t\tnw_wait\n\t\t\tnw_dynaload\n\t\t\tnw_strerror\n\t\t\tfnFpSetMode\n\t\t\tfnInsertHashListAddrs\n\t\t\tfnGetHashListAddrs\n\t\t\tPerl_deb\n\t\t\tPerl_sv_setsv\n\t\t\tPerl_sv_catsv\n\t\t\tPerl_sv_catpvn\n\t\t\tPerl_sv_2pv\n\t\t\tnw_freeenviron\n\t\t\tRemove_Thread_Ctx\n\t\t ));\n}\n\n# When added this code was only run for Win32 and WinCE\n# Currently only Win32 links static extensions into the shared library.\n# The WinCE makefile doesn't appear to support static extensions, so this code\n# can't have any effect there.\n# The NetWare Makefile doesn't support static extensions (and hardcodes the\n# list of dynamic extensions, and the rules to build them)\n# For *nix (and presumably OS/2) with a shared libperl, Makefile.SH compiles\n# static extensions with -fPIC, but links them to perl, not libperl.so\n# The VMS build scripts don't yet implement static extensions at all.\n\nif ($ARGS{PLATFORM} =~ /^win(?:32|ce)$/) {\n    # records of type boot_module for statically linked modules (except Dynaloader)\n    my $static_ext = $Config{static_ext} // \"\";\n    $static_ext =~ s/\\//__/g;\n    $static_ext =~ s/\\bDynaLoader\\b//;\n    try_symbols(map {\"boot_$_\"} grep {/\\S/} split /\\s+/, $static_ext);\n    try_symbols(\"init_Win32CORE\") if $static_ext =~ /\\bWin32CORE\\b/;\n}\n\nif ($ARGS{PLATFORM} eq 'os2') {\n    my (%mapped, @missing);\n    open MAP, '<', 'miniperl.map' or die 'Cannot read miniperl.map';\n    /^\\s*[\\da-f:]+\\s+(\\w+)/i and $mapped{$1}++ foreach <MAP>;\n    close MAP or die 'Cannot close miniperl.map';\n\n    @missing = grep { !exists $mapped{$_} }\n\t\t    keys %export;\n    @missing = grep { !exists $exportperlmalloc{$_} } @missing;\n    delete $export{$_} foreach @missing;\n}\n\n###############################################################################\n\n# Now all symbols should be defined because next we are going to output them.\n\n# Start with platform specific headers:\n\nif ($ARGS{PLATFORM} =~ /^win(?:32|ce)$/) {\n    my $dll = $define{PERL_DLL} ? $define{PERL_DLL} =~ s/\\.dll$//ir\n\t: \"perl$Config{api_revision}$Config{api_version}\";\n    print \"LIBRARY $dll\\n\";\n    # The DESCRIPTION module definition file statement is not supported\n    # by VC7 onwards.\n    if ($ARGS{CCTYPE} =~ /^(?:MSVC60|GCC)$/) {\n\tprint \"DESCRIPTION 'Perl interpreter'\\n\";\n    }\n    print \"EXPORTS\\n\";\n}\nelsif ($ARGS{PLATFORM} eq 'os2') {\n    (my $v = $]) =~ s/(\\d\\.\\d\\d\\d)(\\d\\d)$/$1_$2/;\n    $v .= '-thread' if $Config{archname} =~ /-thread/;\n    (my $dll = $define{PERL_DLL}) =~ s/\\.dll$//i;\n    $v .= \"\\@$Config{perl_patchlevel}\" if $Config{perl_patchlevel};\n    my $d = \"DESCRIPTION '\\@#perl5-porters\\@perl.org:$v#\\@ Perl interpreter, configured as $Config{config_args}'\";\n    $d = substr($d, 0, 249) . \"...'\" if length $d > 253;\n    print <<\"---EOP---\";\nLIBRARY '$dll' INITINSTANCE TERMINSTANCE\n$d\nSTACKSIZE 32768\nCODE LOADONCALL\nDATA LOADONCALL NONSHARED MULTIPLE\nEXPORTS\n---EOP---\n}\nelsif ($ARGS{PLATFORM} eq 'aix') {\n    my $OSVER = `uname -v`;\n    chop $OSVER;\n    my $OSREL = `uname -r`;\n    chop $OSREL;\n    if ($OSVER > 4 || ($OSVER == 4 && $OSREL >= 3)) {\n\tprint \"#! ..\\n\";\n    } else {\n\tprint \"#!\\n\";\n    }\n}\nelsif ($ARGS{PLATFORM} eq 'netware') {\n\tif ($ARGS{FILETYPE} eq 'def') {\n\tprint \"LIBRARY perl$Config{api_revision}$Config{api_version}\\n\";\n\tprint \"DESCRIPTION 'Perl interpreter for NetWare'\\n\";\n\tprint \"EXPORTS\\n\";\n\t}\n}\n\n# Then the symbols\n\nmy @symbols = $fold ? sort {lc $a cmp lc $b} keys %export : sort keys %export;\nforeach my $symbol (@symbols) {\n    if (PLATFORM eq 'win32' || PLATFORM eq 'wince') {\n\t# Remembering the origin file of each symbol is an alternative to PL_ matching\n\tif (substr($symbol, 0, 3) eq 'PL_') {\n\t    print \"\\t$symbol DATA\\n\";\n\t}\n\telse {\n\t    print \"\\t$symbol\\n\";\n\t}\n    }\n    elsif (PLATFORM eq 'os2') {\n\tprintf qq(    %-31s \\@%s\\n),\n\t  qq(\"$symbol\"), $ordinal{$symbol} || ++$sym_ord;\n\tprintf qq(    %-31s \\@%s\\n),\n\t  qq(\"$exportperlmalloc{$symbol}\" = \"$symbol\"),\n\t  $ordinal{$exportperlmalloc{$symbol}} || ++$sym_ord\n\t  if $exportperlmalloc and exists $exportperlmalloc{$symbol};\n    }\n    elsif (PLATFORM eq 'netware') {\n\tprint \"\\t$symbol,\\n\";\n    } else {\n\tprint \"$symbol\\n\";\n    }\n}\n\n# Then platform specific footers.\n\nif ($ARGS{PLATFORM} eq 'os2') {\n    print <<EOP;\n    dll_perlmain=main\n    fill_extLibpath\n    dir_subst\n    Perl_OS2_handler_install\n\n; LAST_ORDINAL=$sym_ord\nEOP\n}\n\n1;\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/uconfig64.sh": "#!/bin/sh\nAuthor=''\n_a='.a'\n_o='.o'\nafs='false'\nafsroot='/afs'\nalignbytes='8'\naphostname='/bin/hostname'\narchlib='/usr/local/lib/perl5/5.30/unknown'\narchlibexp='/usr/local/lib/perl5/5.30/unknown'\narchname='unknown64'\nasctime_r_proto='0'\nbin='/usr/local/bin'\nbinexp='/usr/local/bin'\nbootstrap_charset='undef'\nbyteorder='12345678'\ncastflags='0'\ncf_by='root@localhost'\ncf_time='Thu Jan  1 00:00:00 GMT 1970'\ncharbits='8'\nclocktype='clock_t'\ncpp_stuff='42'\ncpplast='-'\ncppminus='-'\ncpprun='cc -E'\ncppstdin='cc -E'\ncrypt_r_proto='0'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\nd_PRIEUldbl='undef'\nd_PRIFUldbl='undef'\nd_PRIGUldbl='undef'\nd_PRIXU64='define'\nd_PRId64='define'\nd_PRIeldbl='undef'\nd_PRIfldbl='undef'\nd_PRIgldbl='undef'\nd_PRIi64='define'\nd_PRIo64='define'\nd_PRIu64='define'\nd_PRIx64='define'\nd_SCNfldbl='define'\nd__fwalk='undef'\nd_accept4='undef'\nd_access='undef'\nd_accessx='undef'\nd_acosh='undef'\nd_aintl='undef'\nd_alarm='undef'\nd_archlib='undef'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='undef'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bsd='undef'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_add_overflow='undef'\nd_builtin_choose_expr='undef'\nd_builtin_expect='undef'\nd_builtin_mul_overflow='undef'\nd_builtin_sub_overflow='undef'\nd_c99_variadic_macros='undef'\nd_casti32='undef'\nd_castneg='undef'\nd_cbrt='undef'\nd_chown='undef'\nd_chroot='undef'\nd_chsize='undef'\nd_class='undef'\nd_clearenv='undef'\nd_closedir='define'\nd_cmsghdr_s='undef'\nd_copysign='undef'\nd_copysignl='undef'\nd_cplusplus='undef'\nd_crypt='undef'\nd_crypt_r='undef'\nd_csh='undef'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='undef'\nd_dbl_dig='undef'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='undef'\nd_dir_dd_fd='undef'\nd_dirfd='undef'\nd_dirnamlen='undef'\nd_dladdr='undef'\nd_dlerror='undef'\nd_dlopen='undef'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_double_has_inf='define'\nd_double_has_nan='define'\nd_double_has_negative_zero='define'\nd_double_has_subnormals='define'\nd_double_style_cray='undef'\nd_double_style_ibm='undef'\nd_double_style_ieee='define'\nd_double_style_vax='undef'\nd_drand48_r='undef'\nd_drand48proto='undef'\nd_dup2='undef'\nd_dup3='undef'\nd_duplocale='undef'\nd_eaccess='undef'\nd_endgrent='undef'\nd_endgrent_r='undef'\nd_endhent='undef'\nd_endhostent_r='undef'\nd_endnent='undef'\nd_endnetent_r='undef'\nd_endpent='undef'\nd_endprotoent_r='undef'\nd_endpwent='undef'\nd_endpwent_r='undef'\nd_endsent='undef'\nd_endservent_r='undef'\nd_eofnblk='undef'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='undef'\nd_fchdir='undef'\nd_fchmod='undef'\nd_fchmodat='undef'\nd_fchown='undef'\nd_fcntl='undef'\nd_fcntl_can_lock='undef'\nd_fd_macros='undef'\nd_fd_set='undef'\nd_fdclose='undef'\nd_fdim='undef'\nd_fds_bits='undef'\nd_fegetround='undef'\nd_fgetpos='undef'\nd_finite='undef'\nd_finitel='undef'\nd_flexfnam='undef'\nd_flock='undef'\nd_flockproto='undef'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='define'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='undef'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_freelocale='undef'\nd_frexpl='undef'\nd_fs_data_s='undef'\nd_fseeko='undef'\nd_fsetpos='undef'\nd_fstatfs='undef'\nd_fstatvfs='undef'\nd_fsync='undef'\nd_ftello='undef'\nd_ftime='undef'\nd_futimes='undef'\nd_gai_strerror='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='undef'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='undef'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='undef'\nd_gethbyaddr='undef'\nd_gethbyname='undef'\nd_gethent='undef'\nd_gethname='undef'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='undef'\nd_getitimer='undef'\nd_getlogin='undef'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='undef'\nd_getnameinfo='undef'\nd_getnbyaddr='undef'\nd_getnbyname='undef'\nd_getnent='undef'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='undef'\nd_getpagsz='undef'\nd_getpbyname='undef'\nd_getpbynumber='undef'\nd_getpent='undef'\nd_getpgid='undef'\nd_getpgrp2='undef'\nd_getpgrp='undef'\nd_getppid='undef'\nd_getprior='undef'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='undef'\nd_getprpwnam='undef'\nd_getpwent='undef'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='undef'\nd_getsbyport='undef'\nd_getsent='undef'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='undef'\nd_getspent='undef'\nd_getspnam='undef'\nd_getspnam_r='undef'\nd_gettimeod='undef'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='undef'\nd_grpasswd='undef'\nd_hasmntopt='undef'\nd_htonl='undef'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='undef'\nd_inc_version_list='undef'\nd_index='undef'\nd_inetaton='undef'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='undef'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='undef'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='undef'\nd_isinfl='undef'\nd_isless='undef'\nd_isnan='undef'\nd_isnanl='undef'\nd_isnormal='undef'\nd_j0='undef'\nd_j0l='undef'\nd_killpg='undef'\nd_lc_monetary_2008='undef'\nd_lchown='undef'\nd_ldbl_dig='undef'\nd_ldexpl='undef'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='undef'\nd_link='undef'\nd_linkat='undef'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localeconv_l='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='undef'\nd_lockf='undef'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_long_double_style_ieee='undef'\nd_long_double_style_ieee_doubledouble='undef'\nd_long_double_style_ieee_extended='undef'\nd_long_double_style_ieee_std='undef'\nd_long_double_style_vax='undef'\nd_longdbl='undef'\nd_longlong='undef'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='undef'\nd_lstat='undef'\nd_madvise='undef'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='undef'\nd_mbrlen='undef'\nd_mbrtowc='undef'\nd_mbstowcs='undef'\nd_mbtowc='undef'\nd_memmem='undef'\nd_memrchr='undef'\nd_mkdir='undef'\nd_mkdtemp='undef'\nd_mkfifo='undef'\nd_mkostemp='undef'\nd_mkstemp='undef'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='undef'\nd_mmap='undef'\nd_modfl='undef'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='undef'\nd_msg='undef'\nd_msg_ctrunc='undef'\nd_msg_dontroute='undef'\nd_msg_oob='undef'\nd_msg_peek='undef'\nd_msg_proxy='undef'\nd_msgctl='undef'\nd_msgget='undef'\nd_msghdr_s='undef'\nd_msgrcv='undef'\nd_msgsnd='undef'\nd_msync='undef'\nd_munmap='undef'\nd_mymalloc='undef'\nd_nan='undef'\nd_nanosleep='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_newlocale='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='undef'\nd_nl_langinfo='undef'\nd_nv_preserves_uv='undef'\nd_nv_zero_is_allbits_zero='undef'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='undef'\nd_openat='undef'\nd_pathconf='undef'\nd_pause='undef'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe2='undef'\nd_pipe='undef'\nd_poll='undef'\nd_portable='undef'\nd_prctl='undef'\nd_prctl_set_name='undef'\nd_printf_format_null='undef'\nd_procselfexe='undef'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='undef'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='undef'\nd_pwpasswd='undef'\nd_pwquota='undef'\nd_qgcvt='undef'\nd_quad='define'\nd_querylocale='undef'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='undef'\nd_readv='undef'\nd_recvmsg='undef'\nd_regcomp='undef'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_renameat='undef'\nd_rewinddir='undef'\nd_rint='undef'\nd_rmdir='undef'\nd_round='undef'\nd_sbrkproto='undef'\nd_scalbn='undef'\nd_scalbnl='undef'\nd_sched_yield='undef'\nd_scm_rights='undef'\nd_seekdir='undef'\nd_select='undef'\nd_sem='undef'\nd_semctl='undef'\nd_semctl_semid_ds='undef'\nd_semctl_semun='undef'\nd_semget='undef'\nd_semop='undef'\nd_sendmsg='undef'\nd_setegid='undef'\nd_seteuid='undef'\nd_setgrent='undef'\nd_setgrent_r='undef'\nd_setgrps='undef'\nd_sethent='undef'\nd_sethostent_r='undef'\nd_setitimer='undef'\nd_setlinebuf='undef'\nd_setlocale='undef'\nd_setlocale_accepts_any_locale_name='undef'\nd_setlocale_r='undef'\nd_setnent='undef'\nd_setnetent_r='undef'\nd_setpent='undef'\nd_setpgid='undef'\nd_setpgrp2='undef'\nd_setpgrp='undef'\nd_setprior='undef'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='undef'\nd_setpwent_r='undef'\nd_setregid='undef'\nd_setresgid='undef'\nd_setresuid='undef'\nd_setreuid='undef'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='undef'\nd_setservent_r='undef'\nd_setsid='undef'\nd_setvbuf='undef'\nd_shm='undef'\nd_shmat='undef'\nd_shmatprototype='undef'\nd_shmctl='undef'\nd_shmdt='undef'\nd_shmget='undef'\nd_sigaction='undef'\nd_siginfo_si_addr='undef'\nd_siginfo_si_band='undef'\nd_siginfo_si_errno='undef'\nd_siginfo_si_pid='undef'\nd_siginfo_si_status='undef'\nd_siginfo_si_uid='undef'\nd_siginfo_si_value='undef'\nd_signbit='undef'\nd_sigprocmask='undef'\nd_sigsetjmp='undef'\nd_sin6_scope_id='undef'\nd_sitearch='undef'\nd_snprintf='undef'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='undef'\nd_socklen_t='undef'\nd_sockpair='undef'\nd_socks5_init='undef'\nd_sqrtl='undef'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='undef'\nd_statfs_f_flags='undef'\nd_statfs_s='undef'\nd_static_inline='undef'\nd_statvfs='undef'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='undef'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='undef'\nd_stdio_stream_array='undef'\nd_stdiobase='undef'\nd_stdstdio='undef'\nd_strcoll='undef'\nd_strerror_l='undef'\nd_strerror_r='undef'\nd_strftime='undef'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strnlen='undef'\nd_strtod='undef'\nd_strtod_l='undef'\nd_strtol='define'\nd_strtold='undef'\nd_strtold_l='undef'\nd_strtoll='undef'\nd_strtoq='undef'\nd_strtoul='define'\nd_strtoull='undef'\nd_strtouq='undef'\nd_strxfrm='undef'\nd_suidsafe='undef'\nd_symlink='undef'\nd_syscall='undef'\nd_syscallproto='undef'\nd_sysconf='undef'\nd_sysernlst=''\nd_syserrlst='undef'\nd_system='undef'\nd_tcgetpgrp='undef'\nd_tcsetpgrp='undef'\nd_telldir='undef'\nd_telldirproto='undef'\nd_tgamma='undef'\nd_thread_safe_nl_langinfo_l='undef'\nd_time='define'\nd_timegm='undef'\nd_times='undef'\nd_tm_tm_gmtoff='undef'\nd_tm_tm_zone='undef'\nd_tmpnam_r='undef'\nd_towlower='undef'\nd_towupper='undef'\nd_trunc='undef'\nd_truncate='undef'\nd_truncl='undef'\nd_ttyname_r='undef'\nd_tzname='undef'\nd_u32align='define'\nd_ualarm='undef'\nd_umask='undef'\nd_uname='undef'\nd_union_semun='undef'\nd_unlinkat='undef'\nd_unordered='undef'\nd_unsetenv='undef'\nd_uselocale='undef'\nd_usleep='undef'\nd_usleepproto='undef'\nd_ustat='undef'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='undef'\nd_voidtty=''\nd_vsnprintf='undef'\nd_wait4='undef'\nd_waitpid='undef'\nd_wcscmp='undef'\nd_wcstombs='undef'\nd_wcsxfrm='undef'\nd_wctomb='undef'\nd_writev='undef'\nd_xenix='undef'\ndb_hashtype='u_int32_t'\ndb_prefixtype='size_t'\ndb_version_major='0'\ndb_version_minor='0'\ndb_version_patch='0'\ndefault_inc_excludes_dot='undef'\ndirentrytype='struct dirent'\ndoubleinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f'\ndoublekind='3'\ndoublemantbits='52'\ndoublenanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f'\ndoublesize='8'\ndrand01=\"((rand() & 0x7FFF) / (double) ((unsigned long)1 << 15))\"\ndrand48_r_proto='0'\ndtrace=''\neagain='EAGAIN'\nebcdic='undef'\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\nfflushNULL='undef'\nfflushall='undef'\nfirstmakefile='makefile'\nfpossize='4'\nfpostype=int\nfreetype=void\nfull_csh=''\nfull_sed=''\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"u\"'\ngidsign='1'\ngidsize='4'\ngidtype=int\ngmtime_r_proto='0'\ngroupstype=int\nh_fcntl='false'\nh_sysfile='true'\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='int'\ni64size='8'\ni64type='long'\ni8size='1'\ni8type='signed char'\ni_arpainet='undef'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='undef'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='undef'\ni_execinfo='undef'\ni_fcntl='undef'\ni_fenv='undef'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='undef'\ni_ieeefp='undef'\ni_inttypes='undef'\ni_langinfo='undef'\ni_libutil='undef'\ni_locale='undef'\ni_machcthr='undef'\ni_malloc='undef'\ni_mallocmalloc='undef'\ni_mntent='undef'\ni_ndbm='undef'\ni_netdb='undef'\ni_neterrno='undef'\ni_netinettcp='undef'\ni_niin='undef'\ni_poll='undef'\ni_prot='undef'\ni_pthread='undef'\ni_pwd='undef'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='undef'\ni_socks='undef'\ni_stdbool='undef'\ni_stdint='undef'\ni_stdlib='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='undef'\ni_sysfile='undef'\ni_sysfilio='undef'\ni_sysin='undef'\ni_sysioctl='undef'\ni_syslog='undef'\ni_sysmman='undef'\ni_sysmode='undef'\ni_sysmount='undef'\ni_sysndir='undef'\ni_sysparam='undef'\ni_syspoll='undef'\ni_sysresrc='undef'\ni_syssecrt='undef'\ni_sysselct='undef'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='undef'\ni_sysstatvfs='undef'\ni_systime='undef'\ni_systimek='undef'\ni_systimes='undef'\ni_systypes='undef'\ni_sysuio='undef'\ni_sysun='undef'\ni_sysutsname='undef'\ni_sysvfs='undef'\ni_syswait='undef'\ni_termio='undef'\ni_termios='undef'\ni_time='define'\ni_unistd='undef'\ni_ustat='undef'\ni_utime='undef'\ni_vfork='undef'\ni_wchar='undef'\ni_wctype='undef'\ni_xlocale='undef'\nignore_versioned_solibs='y'\ninc_version_list_init='NULL'\ninstallstyle='lib/perl5'\ninstallusrbinperl='undef'\nintsize='4'\nivdformat='\"ld\"'\nivsize='8'\nivtype='long'\nlib_ext='.a'\nlocaltime_r_proto='0'\nlongdblinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'\nlongdblkind=0\nlongdblmantbits='64'\nlongdblnanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'\nlongdblsize=8\nlonglongsize=8\nlongsize='8'\nlseeksize=8\nlseektype=long\nmad='undef'\nmalloctype='int*'\nmalloctype='void *'\nmmaptype='void *'\nmodetype='mode_t'\nmodetype=int\nmultiarch='undef'\nmyarchname='unknown64'\nmyuname='unknown'\nneed_va_copy='define'\nnetdb_hlen_type='int'\nnetdb_host_type='const char *'\nnetdb_name_type='const char *'\nnetdb_net_type='unsigned long'\nnroff='nroff'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='0'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvmantbits='52'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.o'\nold_pthread_create_joinable=''\noptimize=''\norderlib='false'\nosname='unknown'\nosvers='unknown'\notherlibdirs=' '\npackage='perl5'\nperl_static_inline='static'\nphostname='hostname'\npidtype=int\nprivlib='/usr/local/lib/perl5/5.30'\nprivlibexp='/usr/local/lib/perl5/5.30'\nprocselfexe=''\nprototype='undef'\nptrsize='8'\nquadkind='2'\nquadtype='long'\nrandbits='48'\nrandfunc='drand48'\nrandom_r_proto='0'\nrandseedtype='int'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nsGMTIME_max='2147483647'\nsGMTIME_min='0'\nsLOCALTIME_max='2147483647'\nsLOCALTIME_min='0'\nsPRIEUldbl='\"llE\"'\nsPRIFUldbl='\"llF\"'\nsPRIGUldbl='\"llG\"'\nsPRIXU64='\"lX\"'\nsPRId64='\"ld\"'\nsPRIeldbl='\"lle\"'\nsPRIfldbl='\"llf\"'\nsPRIgldbl='\"llg\"'\nsPRIi64='\"li\"'\nsPRIo64='\"lo\"'\nsPRIu64='\"lu\"'\nsPRIx64='\"lx\"'\nsSCNfldbl='\"llf\"'\nsched_yield='sched_yield()'\nscriptdir='/usr/local/bin'\nscriptdirexp='/usr/local/bin'\nseedfunc='srand'\nselectminbits='64'\nselecttype=int\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='/bin/sh'\nshmattype='void *'\nshortsize='2'\nsig_name_init='0'\nsig_num_init='0'\nsig_size='1'\nsignal_t=int\nsitearch='/usr/local/lib/perl5/5.30/unknown'\nsitearchexp='/usr/local/lib/perl5/5.30/unknown'\nsitelib='/usr/local/lib/perl5/5.30'\nsitelib_stem='/usr/local/lib/perl5'\nsitelibexp='/usr/local/lib/perl5/5.30'\nsizesize=4\nsizetype='size_t'\nsocksizetype='int'\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc='.'\nssizetype=long\nst_ino_sign='1'\nst_ino_size='8'\nstartperl='#!perl'\nstdchar=char\nstdio_base='((fp)->_IO_read_base)'\nstdio_bufsiz='((fp)->_IO_read_end - (fp)->_IO_read_base)'\nstdio_cnt='((fp)->_IO_read_end - (fp)->_IO_read_ptr)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_IO_read_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\ntargetarch=''\ntargetsh='/bin/sh'\ntimetype=time_t\ntmpnam_r_proto='0'\ntouch='touch'\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned int'\nu64size='8'\nu64type='unsigned long'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"u\"'\nuidsign='1'\nuidsize='4'\nuidtype=int\nuquadtype='unsigned long'\nuse5005threads='undef'\nuse64bitall='define'\nuse64bitint='define'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='undef'\nusedl='undef'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='undef'\nusekernprocpathname='undef'\nuselargefiles='undef'\nuselongdouble='undef'\nusemallocwrap='undef'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='undef'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='false'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='false'\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='8'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvendorarch=''\nvendorarchexp=''\nvendorlib_stem=''\nvendorlibexp=''\nversiononly='undef'\nzip=''\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/README.solaris": "If you read this file _as_is_, just ignore the funny characters you\nsee.  It is written in the POD format (see pod/perlpod.pod) which is\nspecifically designed to be readable as is.\n\n=head1 NAME\n\nperlsolaris - Perl version 5 on Solaris systems\n\n=head1 DESCRIPTION\n\nThis document describes various features of Sun's Solaris operating system\nthat will affect how Perl version 5 (hereafter just perl) is\ncompiled and/or runs.  Some issues relating to the older SunOS 4.x are\nalso discussed, though they may be out of date.\n\nFor the most part, everything should just work.\n\nStarting with Solaris 8, perl5.00503 (or higher) is supplied with the\noperating system, so you might not even need to build a newer version\nof perl at all.  The Sun-supplied version is installed in /usr/perl5\nwith F</usr/bin/perl> pointing to F</usr/perl5/bin/perl>.  Do not disturb\nthat installation unless you really know what you are doing.  If you\nremove the perl supplied with the OS, you will render some bits of\nyour system inoperable.  If you wish to install a newer version of perl,\ninstall it under a different prefix from /usr/perl5.  Common prefixes\nto use are /usr/local and /opt/perl.\n\nYou may wish to put your version of perl in the PATH of all users by\nchanging the link F</usr/bin/perl>.  This is probably OK, as most perl\nscripts shipped with Solaris use an explicit path.  (There are a few\nexceptions, such as F</usr/bin/rpm2cpio> and F</etc/rcm/scripts/README>, but\nthese are also sufficiently generic that the actual version of perl\nprobably doesn't matter too much.)\n\nSolaris ships with a range of Solaris-specific modules.  If you choose\nto install your own version of perl you will find the source of many of\nthese modules is available on CPAN under the Sun::Solaris:: namespace.\n\nSolaris may include two versions of perl, e.g. Solaris 9 includes\nboth 5.005_03 and 5.6.1.  This is to provide stability across Solaris\nreleases, in cases where a later perl version has incompatibilities\nwith the version included in the preceding Solaris release.  The\ndefault perl version will always be the most recent, and in general\nthe old version will only be retained for one Solaris release.  Note\nalso that the default perl will NOT be configured to search for modules\nin the older version, again due to compatibility/stability concerns.\nAs a consequence if you upgrade Solaris, you will have to\nrebuild/reinstall any additional CPAN modules that you installed for\nthe previous Solaris version.  See the CPAN manpage under 'autobundle'\nfor a quick way of doing this.\n\nAs an interim measure, you may either change the #! line of your\nscripts to specifically refer to the old perl version, e.g. on\nSolaris 9 use #!/usr/perl5/5.00503/bin/perl to use the perl version\nthat was the default for Solaris 8, or if you have a large number of\nscripts it may be more convenient to make the old version of perl the\ndefault on your system.  You can do this by changing the appropriate\nsymlinks under /usr/perl5 as follows (example for Solaris 9):\n\n # cd /usr/perl5\n # rm bin man pod\n # ln -s ./5.00503/bin\n # ln -s ./5.00503/man\n # ln -s ./5.00503/lib/pod\n # rm /usr/bin/perl\n # ln -s ../perl5/5.00503/bin/perl /usr/bin/perl\n\nIn both cases this should only be considered to be a temporary\nmeasure - you should upgrade to the later version of perl as soon as\nis practicable.\n\nNote also that the perl command-line utilities (e.g. perldoc) and any\nthat are added by modules that you install will be under\n/usr/perl5/bin, so that directory should be added to your PATH.\n\n=head2 Solaris Version Numbers.\n\nFor consistency with common usage, perl's Configure script performs\nsome minor manipulations on the operating system name and version\nnumber as reported by uname.  Here's a partial translation table:\n\n          Sun:                      perl's Configure:\n uname    uname -r   Name           osname     osvers\n SunOS    4.1.3     Solaris 1.1     sunos      4.1.3\n SunOS    5.6       Solaris 2.6     solaris    2.6\n SunOS    5.8       Solaris 8       solaris    2.8\n SunOS    5.9       Solaris 9       solaris    2.9\n SunOS    5.10      Solaris 10      solaris    2.10\n\nThe complete table can be found in the Sun Managers' FAQ\nL<ftp://ftp.cs.toronto.edu/pub/jdd/sunmanagers/faq> under\n\"9.1) Which Sun models run which versions of SunOS?\".\n\n=head1 RESOURCES\n\nThere are many, many sources for Solaris information.  A few of the\nimportant ones for perl:\n\n=over 4\n\n=item Solaris FAQ\n\nThe Solaris FAQ is available at\nL<http://www.science.uva.nl/pub/solaris/solaris2.html>.\n\nThe Sun Managers' FAQ is available at\nL<ftp://ftp.cs.toronto.edu/pub/jdd/sunmanagers/faq>\n\n=item Precompiled Binaries\n\nPrecompiled binaries, links to many sites, and much, much more are\navailable at L<http://www.sunfreeware.com/> and\nL<http://www.blastwave.org/>.\n\n=item Solaris Documentation\n\nAll Solaris documentation is available on-line at L<http://docs.sun.com/>.\n\n=back\n\n=head1 SETTING UP\n\n=head2 File Extraction Problems on Solaris.\n\nBe sure to use a tar program compiled under Solaris (not SunOS 4.x)\nto extract the perl-5.x.x.tar.gz file.  Do not use GNU tar compiled\nfor SunOS4 on Solaris.  (GNU tar compiled for Solaris should be fine.)\nWhen you run SunOS4 binaries on Solaris, the run-time system magically\nalters pathnames matching m#lib/locale# so that when tar tries to create\nlib/locale.pm, a file named lib/oldlocale.pm gets created instead.\nIf you found this advice too late and used a SunOS4-compiled tar\nanyway, you must find the incorrectly renamed file and move it back\nto lib/locale.pm.\n\n=head2 Compiler and Related Tools on Solaris.\n\nYou must use an ANSI C compiler to build perl.  Perl can be compiled\nwith either Sun's add-on C compiler or with gcc.  The C compiler that\nshipped with SunOS4 will not do.\n\n=head3 Include /usr/ccs/bin/ in your PATH.\n\nSeveral tools needed to build perl are located in /usr/ccs/bin/:  ar,\nas, ld, and make.  Make sure that /usr/ccs/bin/ is in your PATH.\n\n\nOn all the released versions of Solaris (8, 9 and 10) you need to make sure the following packages are installed (this info is extracted from the Solaris FAQ):\n\nfor tools (sccs, lex, yacc, make, nm, truss, ld, as): SUNWbtool,\nSUNWsprot, SUNWtoo\n\nfor libraries & headers: SUNWhea, SUNWarc, SUNWlibm, SUNWlibms, SUNWdfbh,\nSUNWcg6h, SUNWxwinc\n\nAdditionally, on Solaris 8 and 9 you also need:\n\nfor 64 bit development: SUNWarcx, SUNWbtoox, SUNWdplx, SUNWscpux,\nSUNWsprox, SUNWtoox, SUNWlmsx, SUNWlmx, SUNWlibCx\n\nAnd only on Solaris 8 you also need:\n\nfor libraries & headers: SUNWolinc\n\n\nIf you are in doubt which package contains a file you are missing,\ntry to find an installation that has that file. Then do a\n\n $ grep /my/missing/file /var/sadm/install/contents\n\nThis will display a line like this:\n\n/usr/include/sys/errno.h f none 0644 root bin 7471 37605 956241356 SUNWhea\n\nThe last item listed (SUNWhea in this example) is the package you need.\n\n=head3 Avoid /usr/ucb/cc.\n\nYou don't need to have /usr/ucb/ in your PATH to build perl.  If you\nwant /usr/ucb/ in your PATH anyway, make sure that /usr/ucb/ is NOT\nin your PATH before the directory containing the right C compiler.\n\n=head3 Sun's C Compiler\n\nIf you use Sun's C compiler, make sure the correct directory\n(usually /opt/SUNWspro/bin/) is in your PATH (before /usr/ucb/).\n\n=head3 GCC\n\nIf you use gcc, make sure your installation is recent and complete.\nperl versions since 5.6.0 build fine with gcc > 2.8.1 on Solaris >=\n2.6.\n\nYou must Configure perl with\n\n $ sh Configure -Dcc=gcc\n\nIf you don't, you may experience strange build errors.\n\nIf you have updated your Solaris version, you may also have to update\nyour gcc.  For example, if you are running Solaris 2.6 and your gcc is\ninstalled under /usr/local, check in /usr/local/lib/gcc-lib and make\nsure you have the appropriate directory, sparc-sun-solaris2.6/ or\ni386-pc-solaris2.6/.  If gcc's directory is for a different version of\nSolaris than you are running, then you will need to rebuild gcc for\nyour new version of Solaris.\n\nYou can get a precompiled version of gcc from\nL<http://www.sunfreeware.com/> or L<http://www.blastwave.org/>. Make\nsure you pick up the package for your Solaris release.\n\nIf you wish to use gcc to build add-on modules for use with the perl\nshipped with Solaris, you should use the Solaris::PerlGcc module\nwhich is available from CPAN.  The perl shipped with Solaris\nis configured and built with the Sun compilers, and the compiler\nconfiguration information stored in Config.pm is therefore only\nrelevant to the Sun compilers.  The Solaris:PerlGcc module contains a\nreplacement Config.pm that is correct for gcc - see the module for\ndetails.\n\n=head3 GNU as and GNU ld\n\nThe following information applies to gcc version 2.  Volunteers to\nupdate it as appropriately for gcc version 3 would be appreciated.\n\nThe versions of as and ld supplied with Solaris work fine for building\nperl.  There is normally no need to install the GNU versions to\ncompile perl.\n\nIf you decide to ignore this advice and use the GNU versions anyway,\nthen be sure that they are relatively recent.  Versions newer than 2.7\nare apparently new enough.  Older versions may have trouble with\ndynamic loading.\n\nIf you wish to use GNU ld, then you need to pass it the -Wl,-E flag.\nThe hints/solaris_2.sh file tries to do this automatically by setting\nthe following Configure variables:\n\n ccdlflags=\"$ccdlflags -Wl,-E\"\n lddlflags=\"$lddlflags -Wl,-E -G\"\n\nHowever, over the years, changes in gcc, GNU ld, and Solaris ld have made\nit difficult to automatically detect which ld ultimately gets called.\nYou may have to manually edit config.sh and add the -Wl,-E flags\nyourself, or else run Configure interactively and add the flags at the\nappropriate prompts.\n\nIf your gcc is configured to use GNU as and ld but you want to use the\nSolaris ones instead to build perl, then you'll need to add\n-B/usr/ccs/bin/ to the gcc command line.  One convenient way to do\nthat is with\n\n $ sh Configure -Dcc='gcc -B/usr/ccs/bin/'\n\nNote that the trailing slash is required.  This will result in some\nharmless warnings as Configure is run:\n\n gcc: file path prefix `/usr/ccs/bin/' never used\n\nThese messages may safely be ignored.\n(Note that for a SunOS4 system, you must use -B/bin/ instead.)\n\nAlternatively, you can use the GCC_EXEC_PREFIX environment variable to\nensure that Sun's as and ld are used.  Consult your gcc documentation\nfor further information on the -B option and the GCC_EXEC_PREFIX variable.\n\n=head3 Sun and GNU make\n\nThe make under /usr/ccs/bin works fine for building perl.  If you\nhave the Sun C compilers, you will also have a parallel version of\nmake (dmake).  This works fine to build perl, but can sometimes cause\nproblems when running 'make test' due to underspecified dependencies\nbetween the different test harness files.  The same problem can also\naffect the building of some add-on modules, so in those cases either\nspecify '-m serial' on the dmake command line, or use\n/usr/ccs/bin/make instead.  If you wish to use GNU make, be sure that\nthe set-group-id bit is not set.  If it is, then arrange your PATH so\nthat /usr/ccs/bin/make is before GNU make or else have the system\nadministrator disable the set-group-id bit on GNU make.\n\n=head3 Avoid libucb.\n\nSolaris provides some BSD-compatibility functions in /usr/ucblib/libucb.a.\nPerl will not build and run correctly if linked against -lucb since it\ncontains routines that are incompatible with the standard Solaris libc.\nNormally this is not a problem since the solaris hints file prevents\nConfigure from even looking in /usr/ucblib for libraries, and also\nexplicitly omits -lucb.\n\n=head2 Environment for Compiling perl on Solaris\n\n=head3 PATH\n\nMake sure your PATH includes the compiler (/opt/SUNWspro/bin/ if you're\nusing Sun's compiler) as well as /usr/ccs/bin/ to pick up the other\ndevelopment tools (such as make, ar, as, and ld).  Make sure your path\neither doesn't include /usr/ucb or that it includes it after the\ncompiler and compiler tools and other standard Solaris directories.\nYou definitely don't want /usr/ucb/cc.\n\n=head3 LD_LIBRARY_PATH\n\nIf you have the LD_LIBRARY_PATH environment variable set, be sure that\nit does NOT include /lib or /usr/lib.  If you will be building\nextensions that call third-party shared libraries (e.g. Berkeley DB)\nthen make sure that your LD_LIBRARY_PATH environment variable includes\nthe directory with that library (e.g. /usr/local/lib).\n\nIf you get an error message\n\n dlopen: stub interception failed\n\nit is probably because your LD_LIBRARY_PATH environment variable\nincludes a directory which is a symlink to /usr/lib (such as /lib).\nThe reason this causes a problem is quite subtle.  The file\nlibdl.so.1.0 actually *only* contains functions which generate 'stub\ninterception failed' errors!  The runtime linker intercepts links to\n\"/usr/lib/libdl.so.1.0\" and links in internal implementations of those\nfunctions instead.  [Thanks to Tim Bunce for this explanation.]\n\n=head1 RUN CONFIGURE.\n\nSee the INSTALL file for general information regarding Configure.\nOnly Solaris-specific issues are discussed here.  Usually, the\ndefaults should be fine.\n\n=head2 64-bit perl on Solaris.\n\nSee the INSTALL file for general information regarding 64-bit compiles.\nIn general, the defaults should be fine for most people.\n\nBy default, perl-5.6.0 (or later) is compiled as a 32-bit application\nwith largefile and long-long support.\n\n=head3 General 32-bit vs. 64-bit issues.\n\nSolaris 7 and above will run in either 32 bit or 64 bit mode on SPARC\nCPUs, via a reboot. You can build 64 bit apps whilst running 32 bit\nmode and vice-versa. 32 bit apps will run under Solaris running in\neither 32 or 64 bit mode.  64 bit apps require Solaris to be running\n64 bit mode.\n\nExisting 32 bit apps are properly known as LP32, i.e. Longs and\nPointers are 32 bit.  64-bit apps are more properly known as LP64.\nThe discriminating feature of a LP64 bit app is its ability to utilise a\n64-bit address space.  It is perfectly possible to have a LP32 bit app\nthat supports both 64-bit integers (long long) and largefiles (> 2GB),\nand this is the default for perl-5.6.0.\n\nFor a more complete explanation of 64-bit issues, see the\n\"Solaris 64-bit Developer's Guide\" at L<http://docs.sun.com/>\n\nYou can detect the OS mode using \"isainfo -v\", e.g.\n\n $ isainfo -v   # Ultra 30 in 64 bit mode\n 64-bit sparcv9 applications\n 32-bit sparc applications\n\nBy default, perl will be compiled as a 32-bit application.  Unless\nyou want to allocate more than ~ 4GB of memory inside perl, or unless\nyou need more than 255 open file descriptors, you probably don't need\nperl to be a 64-bit app.\n\n=head3 Large File Support\n\nFor Solaris 2.6 and onwards, there are two different ways for 32-bit\napplications to manipulate large files (files whose size is > 2GByte).\n(A 64-bit application automatically has largefile support built in\nby default.)\n\nFirst is the \"transitional compilation environment\", described in\nlfcompile64(5).  According to the man page,\n\n The transitional compilation  environment  exports  all  the\n explicit 64-bit functions (xxx64()) and types in addition to\n all the regular functions (xxx()) and types. Both xxx()  and\n xxx64()  functions  are  available to the program source.  A\n 32-bit application must use the xxx64() functions in  order\n to  access  large  files.  See the lf64(5) manual page for a\n complete listing of the 64-bit transitional interfaces.\n\nThe transitional compilation environment is obtained with the\nfollowing compiler and linker flags:\n\n getconf LFS64_CFLAGS        -D_LARGEFILE64_SOURCE\n getconf LFS64_LDFLAG        # nothing special needed\n getconf LFS64_LIBS          # nothing special needed\n\nSecond is the \"large file compilation environment\", described in\nlfcompile(5).  According to the man page,\n\n Each interface named xxx() that needs to access 64-bit entities\n to  access  large  files maps to a xxx64() call in the\n resulting binary. All relevant data types are defined to  be\n of correct size (for example, off_t has a typedef definition\n for a 64-bit entity).\n\n An application compiled in this environment is able  to  use\n the  xxx()  source interfaces to access both large and small\n files, rather than having to explicitly utilize the  transitional\n xxx64()  interface  calls to access large files.\n\nTwo exceptions are fseek() and ftell().  32-bit applications should\nuse fseeko(3C) and ftello(3C).  These will get automatically mapped\nto fseeko64() and ftello64().\n\nThe large file compilation environment is obtained with\n\n getconf LFS_CFLAGS      -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64\n getconf LFS_LDFLAGS     # nothing special needed\n getconf LFS_LIBS        # nothing special needed\n\nBy default, perl uses the large file compilation environment and\nrelies on Solaris to do the underlying mapping of interfaces.\n\n=head3 Building an LP64 perl\n\nTo compile a 64-bit application on an UltraSparc with a recent Sun Compiler,\nyou need to use the flag \"-xarch=v9\".  getconf(1) will tell you this, e.g.\n\n $ getconf -a | grep v9\n XBS5_LP64_OFF64_CFLAGS:         -xarch=v9\n XBS5_LP64_OFF64_LDFLAGS:        -xarch=v9\n XBS5_LP64_OFF64_LINTFLAGS:      -xarch=v9\n XBS5_LPBIG_OFFBIG_CFLAGS:       -xarch=v9\n XBS5_LPBIG_OFFBIG_LDFLAGS:      -xarch=v9\n XBS5_LPBIG_OFFBIG_LINTFLAGS:    -xarch=v9\n _XBS5_LP64_OFF64_CFLAGS:        -xarch=v9\n _XBS5_LP64_OFF64_LDFLAGS:       -xarch=v9\n _XBS5_LP64_OFF64_LINTFLAGS:     -xarch=v9\n _XBS5_LPBIG_OFFBIG_CFLAGS:      -xarch=v9\n _XBS5_LPBIG_OFFBIG_LDFLAGS:     -xarch=v9\n _XBS5_LPBIG_OFFBIG_LINTFLAGS:   -xarch=v9\n\nThis flag is supported in Sun WorkShop Compilers 5.0 and onwards\n(now marketed under the name Forte) when used on Solaris 7 or later on\nUltraSparc systems.\n\nIf you are using gcc, you would need to use -mcpu=v9 -m64 instead.  This\noption is not yet supported as of gcc 2.95.2; from install/SPECIFIC\nin that release:\n\n GCC version 2.95 is not able to compile code correctly for sparc64\n targets. Users of the Linux kernel, at least, can use the sparc32\n program to start up a new shell invocation with an environment that\n causes configure to recognize (via uname -a) the system as sparc-*-*\n instead.\n\nAll this should be handled automatically by the hints file, if\nrequested.\n\n=head3 Long Doubles.\n\nAs of 5.8.1, long doubles are working if you use the Sun compilers\n(needed for additional math routines not included in libm).\n\n=head2 Threads in perl on Solaris.\n\nIt is possible to build a threaded version of perl on Solaris.  The entire\nperl thread implementation is still experimental, however, so beware.\n\n=head2 Malloc Issues with perl on Solaris.\n\nStarting from perl 5.7.1 perl uses the Solaris malloc, since the perl\nmalloc breaks when dealing with more than 2GB of memory, and the Solaris\nmalloc also seems to be faster.\n\nIf you for some reason (such as binary backward compatibility) really\nneed to use perl's malloc, you can rebuild perl from the sources\nand Configure the build with \n\n $ sh Configure -Dusemymalloc\n\nYou should not use perl's malloc if you are building with gcc.  There\nare reports of core dumps, especially in the PDL module.  The problem\nappears to go away under -DDEBUGGING, so it has been difficult to\ntrack down.  Sun's compiler appears to be okay with or without perl's\nmalloc. [XXX further investigation is needed here.]\n\n=head1 MAKE PROBLEMS.\n\n=over 4\n\n=item Dynamic Loading Problems With GNU as and GNU ld\n\nIf you have problems with dynamic loading using gcc on SunOS or\nSolaris, and you are using GNU as and GNU ld, see the section\nL</\"GNU as and GNU ld\"> above.\n\n=item ld.so.1: ./perl: fatal: relocation error:\n\nIf you get this message on SunOS or Solaris, and you're using gcc,\nit's probably the GNU as or GNU ld problem in the previous item\nL</\"GNU as and GNU ld\">.\n\n=item dlopen: stub interception failed\n\nThe primary cause of the 'dlopen: stub interception failed' message is\nthat the LD_LIBRARY_PATH environment variable includes a directory\nwhich is a symlink to /usr/lib (such as /lib).  See\nL</\"LD_LIBRARY_PATH\"> above.\n\n=item #error \"No DATAMODEL_NATIVE specified\"\n\nThis is a common error when trying to build perl on Solaris 2.6 with a\ngcc installation from Solaris 2.5 or 2.5.1.  The Solaris header files\nchanged, so you need to update your gcc installation.  You can either\nrerun the fixincludes script from gcc or take the opportunity to\nupdate your gcc installation.\n\n=item sh: ar: not found\n\nThis is a message from your shell telling you that the command 'ar'\nwas not found.  You need to check your PATH environment variable to\nmake sure that it includes the directory with the 'ar' command.  This\nis a common problem on Solaris, where 'ar' is in the /usr/ccs/bin/\ndirectory.\n\n=back\n\n=head1 MAKE TEST\n\n=head2 op/stat.t test 4 in Solaris\n\nF<op/stat.t> test 4 may fail if you are on a tmpfs of some sort.\nBuilding in /tmp sometimes shows this behavior.  The\ntest suite detects if you are building in /tmp, but it may not be able\nto catch all tmpfs situations.\n\n=head2 nss_delete core dump from op/pwent or op/grent\n\nSee L<perlhpux/\"nss_delete core dump from op/pwent or op/grent\">.\n\n=head1 CROSS-COMPILATION\n\nNothing too unusual here.  You can easily do this if you have a \ncross-compiler available;  A usual Configure invocation when targetting a\nSolaris x86 looks something like this:\n\n    sh ./Configure -des -Dusecrosscompile \\\n        -Dcc=i386-pc-solaris2.11-gcc      \\\n        -Dsysroot=$SYSROOT                \\\n        -Alddlflags=\" -Wl,-z,notext\"      \\\n        -Dtargethost=... # The usual cross-compilation options\n\nThe lddlflags addition is the only abnormal bit.\n\n=head1 PREBUILT BINARIES OF PERL FOR SOLARIS.\n\nYou can pick up prebuilt binaries for Solaris from\nL<http://www.sunfreeware.com/>, L<http://www.blastwave.org>,\nActiveState L<http://www.activestate.com/>, and\nL<http://www.perl.com/> under the Binaries list at the top of the\npage.  There are probably other sources as well.  Please note that\nthese sites are under the control of their respective owners, not the\nperl developers.\n\n=head1 RUNTIME ISSUES FOR PERL ON SOLARIS.\n\n=head2 Limits on Numbers of Open Files on Solaris.\n\nThe stdio(3C) manpage notes that for LP32 applications, only 255\nfiles may be opened using fopen(), and only file descriptors 0\nthrough 255 can be used in a stream.  Since perl calls open() and\nthen fdopen(3C) with the resulting file descriptor, perl is limited\nto 255 simultaneous open files, even if sysopen() is used.  If this\nproves to be an insurmountable problem, you can compile perl as a\nLP64 application, see L</Building an LP64 perl> for details.  Note\nalso that the default resource limit for open file descriptors on\nSolaris is 255, so you will have to modify your ulimit or rctl\n(Solaris 9 onwards) appropriately.\n\n=head1 SOLARIS-SPECIFIC MODULES.\n\nSee the modules under the Solaris:: and Sun::Solaris namespaces on CPAN,\nsee L<http://www.cpan.org/modules/by-module/Solaris/> and\nL<http://www.cpan.org/modules/by-module/Sun/>.\n\n=head1 SOLARIS-SPECIFIC PROBLEMS WITH MODULES.\n\n=head2 Proc::ProcessTable on Solaris\n\nProc::ProcessTable does not compile on Solaris with perl5.6.0 and higher\nif you have LARGEFILES defined.  Since largefile support is the\ndefault in 5.6.0 and later, you have to take special steps to use this\nmodule.\n\nThe problem is that various structures visible via procfs use off_t,\nand if you compile with largefile support these change from 32 bits to\n64 bits.  Thus what you get back from procfs doesn't match up with\nthe structures in perl, resulting in garbage.  See proc(4) for further\ndiscussion.\n\nA fix for Proc::ProcessTable is to edit Makefile to\nexplicitly remove the largefile flags from the ones MakeMaker picks up\nfrom Config.pm.  This will result in Proc::ProcessTable being built\nunder the correct environment.  Everything should then be OK as long as\nProc::ProcessTable doesn't try to share off_t's with the rest of perl,\nor if it does they should be explicitly specified as off64_t.\n\n=head2 BSD::Resource on Solaris\n\nBSD::Resource versions earlier than 1.09 do not compile on Solaris\nwith perl 5.6.0 and higher, for the same reasons as Proc::ProcessTable.\nBSD::Resource versions starting from 1.09 have a workaround for the problem.\n\n=head2 Net::SSLeay on Solaris\n\nNet::SSLeay requires a /dev/urandom to be present. This device is\navailable from Solaris 9 onwards.  For earlier Solaris versions you\ncan either get the package SUNWski (packaged with several Sun\nsoftware products, for example the Sun WebServer, which is part of\nthe Solaris Server Intranet Extension, or the Sun Directory Services,\npart of Solaris for ISPs) or download the ANDIrand package from\nL<http://www.cosy.sbg.ac.at/~andi/>. If you use SUNWski, make a\nsymbolic link /dev/urandom pointing to /dev/random.  For more details,\nsee Document ID27606 entitled \"Differing /dev/random support requirements\nwithin Solaris[TM] Operating Environments\", available at\nL<http://sunsolve.sun.com> .\n\nIt may be possible to use the Entropy Gathering Daemon (written in\nPerl!), available from L<http://www.lothar.com/tech/crypto/>.\n\n=head1 SunOS 4.x\n\nIn SunOS 4.x you most probably want to use the SunOS ld, /usr/bin/ld,\nsince the more recent versions of GNU ld (like 2.13) do not seem to\nwork for building Perl anymore.  When linking the extensions, the\nGNU ld gets very unhappy and spews a lot of errors like this\n\n  ... relocation truncated to fit: BASE13 ...\n\nand dies.  Therefore the SunOS 4.1 hints file explicitly sets the\nld to be F</usr/bin/ld>.\n\nAs of Perl 5.8.1 the dynamic loading of libraries (DynaLoader, XSLoader)\nalso seems to have become broken in in SunOS 4.x.  Therefore the default\nis to build Perl statically.\n\nRunning the test suite in SunOS 4.1 is a bit tricky since the\nF<dist/Tie-File/t/09_gen_rs.t> test hangs (subtest #51, FWIW) for some\nunknown reason.  Just stop the test and kill that particular Perl\nprocess.\n\nThere are various other failures, that as of SunOS 4.1.4 and gcc 3.2.2\nlook a lot like gcc bugs.  Many of the failures happen in the Encode\ntests, where for example when the test expects \"0\" you get \"&#48;\"\nwhich should after a little squinting look very odd indeed.\nAnother example is earlier in F<t/run/fresh_perl> where chr(0xff) is\nexpected but the test fails because the result is chr(0xff).  Exactly.\n\nThis is the \"make test\" result from the said combination:\n\n  Failed 27 test scripts out of 745, 96.38% okay.\n\nRunning the C<harness> is painful because of the many failing\nUnicode-related tests will output megabytes of failure messages,\nbut if one patiently waits, one gets these results:\n\n Failed Test                     Stat Wstat Total Fail  Failed  List of Failed\n -----------------------------------------------------------------------------\n ...\n ../ext/Encode/t/at-cn.t            4  1024    29    4  13.79%  14-17\n ../ext/Encode/t/at-tw.t           10  2560    17   10  58.82%  2 4 6 8 10 12\n                                                                14-17\n ../ext/Encode/t/enc_data.t        29  7424    ??   ??       %  ??\n ../ext/Encode/t/enc_eucjp.t       29  7424    ??   ??       %  ??\n ../ext/Encode/t/enc_module.t      29  7424    ??   ??       %  ??\n ../ext/Encode/t/encoding.t        29  7424    ??   ??       %  ??\n ../ext/Encode/t/grow.t            12  3072    24   12  50.00%  2 4 6 8 10 12 14\n                                                                16 18 20 22 24\n  Failed Test                     Stat Wstat Total Fail  Failed  List of Failed\n ------------------------------------------------------------------------------\n ../ext/Encode/t/guess.t          255 65280    29   40 137.93%  10-29\n ../ext/Encode/t/jperl.t           29  7424    15   30 200.00%  1-15\n ../ext/Encode/t/mime-header.t      2   512    10    2  20.00%  2-3\n ../ext/Encode/t/perlio.t          22  5632    38   22  57.89%  1-4 9-16 19-20\n                                                                23-24 27-32\n ../ext/List/Util/t/shuffle.t       0   139    ??   ??       %  ??\n ../ext/PerlIO/t/encoding.t                    14    1   7.14%  11\n ../ext/PerlIO/t/fallback.t                     9    2  22.22%  3 5\n ../ext/Socket/t/socketpair.t       0     2    45   70 155.56%  11-45\n ../lib/CPAN/t/vcmp.t                          30    1   3.33%  25\n ../lib/Tie/File/t/09_gen_rs.t      0    15    ??   ??       %  ??\n ../lib/Unicode/Collate/t/test.t              199   30  15.08%  7 26-27 71-75\n                                                                81-88 95 101\n                                                                103-104 106 108-\n                                                                109 122 124 161\n                                                                169-172\n ../lib/sort.t                      0   139   119   26  21.85%  107-119\n op/alarm.t                                     4    1  25.00%  4\n op/utfhash.t                                  97    1   1.03%  31\n run/fresh_perl.t                              91    1   1.10%  32\n uni/tr_7jis.t                                 ??   ??       %  ??\n uni/tr_eucjp.t                    29  7424     6   12 200.00%  1-6\n uni/tr_sjis.t                     29  7424     6   12 200.00%  1-6\n 56 tests and 467 subtests skipped.\n Failed 27/811 test scripts, 96.67% okay. 1383/75399 subtests failed,\n   98.17% okay.\n\nThe alarm() test failure is caused by system() apparently blocking\nalarm().  That is probably a libc bug, and given that SunOS 4.x\nhas been end-of-lifed years ago, don't hold your breath for a fix.\nIn addition to that, don't try anything too Unicode-y, especially\nwith Encode, and you should be fine in SunOS 4.x.\n\n=head1 AUTHOR\n\nThe original was written by Andy Dougherty F<doughera@lafayette.edu>\ndrawing heavily on advice from Alan Burlison, Nick Ing-Simmons, Tim Bunce,\nand many other Solaris users over the years.\n\nPlease report any errors, updates, or suggestions to\nL<https://github.com/Perl/perl5/issues>.\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/uconfig.h": "/* This file was produced by running the config_h.SH script, which\n * gets its values from uconfig.sh, which is generally produced by\n * running Configure.\n *\n * Feel free to modify any of this as the need arises.  Note, however,\n * that running config_h.SH again will wipe out any changes you've made.\n * For a more permanent change edit uconfig.sh and rerun config_h.SH.\n */\n\n/* Package name      : perl5\n * Source directory  : .\n * Configuration time: Thu Jan  1 00:00:00 GMT 1970\n * Configured by     : root@localhost\n * Target system     : unknown\n */\n\n#ifndef _config_h_\n#define _config_h_\n\n/* LOC_SED:\n *\tThis symbol holds the complete pathname to the sed program.\n */\n#define LOC_SED \t\"\"\t/**/\n\n/* HAS_ALARM:\n *\tThis symbol, if defined, indicates that the alarm routine is\n *\tavailable.\n */\n/*#define HAS_ALARM\t\t/ **/\n\n/* HAS_CBRT:\n *\tThis symbol, if defined, indicates that the cbrt() (cube root)\n *\tfunction is available.\n */\n/*#define HAS_CBRT\t/ **/\n\n/* HAS_CHOWN:\n *\tThis symbol, if defined, indicates that the chown routine is\n *\tavailable.\n */\n/*#define HAS_CHOWN\t\t/ **/\n\n/* HAS_CHROOT:\n *\tThis symbol, if defined, indicates that the chroot routine is\n *\tavailable.\n */\n/*#define HAS_CHROOT\t\t/ **/\n\n/* HAS_CHSIZE:\n *\tThis symbol, if defined, indicates that the chsize routine is available\n *\tto truncate files.  You might need a -lx to get this routine.\n */\n/*#define\tHAS_CHSIZE\t\t/ **/\n\n/* HAS_CRYPT:\n *\tThis symbol, if defined, indicates that the crypt routine is available\n *\tto encrypt passwords and the like.\n */\n/*#define HAS_CRYPT\t\t/ **/\n\n/* HAS_CTERMID:\n *\tThis symbol, if defined, indicates that the ctermid routine is\n *\tavailable to generate filename for terminal.\n */\n/*#define HAS_CTERMID\t\t/ **/\n\n/* HAS_CUSERID:\n *\tThis symbol, if defined, indicates that the cuserid routine is\n *\tavailable to get character login names.\n */\n/*#define HAS_CUSERID\t\t/ **/\n\n/* HAS_DIFFTIME:\n *\tThis symbol, if defined, indicates that the difftime routine is\n *\tavailable.\n */\n/*#define HAS_DIFFTIME\t\t/ **/\n\n/* HAS_DLERROR:\n *\tThis symbol, if defined, indicates that the dlerror routine is\n *\tavailable to return a string describing the last error that\n *\toccurred from a call to dlopen(), dlclose() or dlsym().\n */\n/*#define HAS_DLERROR\t/ **/\n\n/* HAS_DUP2:\n *\tThis symbol, if defined, indicates that the dup2 routine is\n *\tavailable to duplicate file descriptors.\n */\n/*#define HAS_DUP2\t/ **/\n\n/* HAS_FCHMOD:\n *\tThis symbol, if defined, indicates that the fchmod routine is available\n *\tto change mode of opened files.  If unavailable, use chmod().\n */\n/*#define HAS_FCHMOD\t\t/ **/\n\n/* HAS_FCHOWN:\n *\tThis symbol, if defined, indicates that the fchown routine is available\n *\tto change ownership of opened files.  If unavailable, use chown().\n */\n/*#define HAS_FCHOWN\t\t/ **/\n\n/* HAS_FCNTL:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe fcntl() function exists.\n */\n/*#define HAS_FCNTL\t\t/ **/\n\n/* HAS_FGETPOS:\n *\tThis symbol, if defined, indicates that the fgetpos routine is\n *\tavailable to get the file position indicator, similar to ftell().\n */\n/*#define HAS_FGETPOS\t/ **/\n\n/* HAS_FLOCK:\n *\tThis symbol, if defined, indicates that the flock routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_FLOCK\t\t/ **/\n\n/* HAS_FORK:\n *\tThis symbol, if defined, indicates that the fork routine is\n *\tavailable.\n */\n#define HAS_FORK\t\t/**/\n\n/* HAS_FSETPOS:\n *\tThis symbol, if defined, indicates that the fsetpos routine is\n *\tavailable to set the file position indicator, similar to fseek().\n */\n/*#define HAS_FSETPOS\t/ **/\n\n/* HAS_GETTIMEOFDAY:\n *\tThis symbol, if defined, indicates that the gettimeofday() system\n *\tcall is available for a sub-second accuracy clock. Usually, the file\n *\t<sys/resource.h> needs to be included (see I_SYS_RESOURCE).\n *\tThe type \"Timeval\" should be used to refer to \"struct timeval\".\n */\n/*#define HAS_GETTIMEOFDAY\t/ **/\n#ifdef HAS_GETTIMEOFDAY\n#define Timeval struct timeval\t/* Structure used by gettimeofday() */\n#endif\n\n/* HAS_GETGROUPS:\n *\tThis symbol, if defined, indicates that the getgroups() routine is\n *\tavailable to get the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_GETGROUPS\t\t/ **/\n\n/* HAS_GETLOGIN:\n *\tThis symbol, if defined, indicates that the getlogin routine is\n *\tavailable to get the login name.\n */\n/*#define HAS_GETLOGIN\t\t/ **/\n\n/* HAS_GETPGID:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe getpgid(pid) function is available to get the\n *\tprocess group id.\n */\n/*#define HAS_GETPGID\t\t/ **/\n\n/* HAS_GETPGRP2:\n *\tThis symbol, if defined, indicates that the getpgrp2() (as in DG/UX)\n *\troutine is available to get the current process group.\n */\n/*#define HAS_GETPGRP2\t\t/ **/\n\n/* HAS_GETPPID:\n *\tThis symbol, if defined, indicates that the getppid routine is\n *\tavailable to get the parent process ID.\n */\n/*#define HAS_GETPPID\t\t/ **/\n\n/* HAS_GETPRIORITY:\n *\tThis symbol, if defined, indicates that the getpriority routine is\n *\tavailable to get a process's priority.\n */\n/*#define HAS_GETPRIORITY\t\t/ **/\n\n/* HAS_INET_ATON:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tinet_aton() function is available to parse IP address \"dotted-quad\"\n *\tstrings.\n */\n/*#define HAS_INET_ATON\t\t/ **/\n\n/* HAS_KILLPG:\n *\tThis symbol, if defined, indicates that the killpg routine is available\n *\tto kill process groups.  If unavailable, you probably should use kill\n *\twith a negative process number.\n */\n/*#define HAS_KILLPG\t/ **/\n\n/* HAS_LINK:\n *\tThis symbol, if defined, indicates that the link routine is\n *\tavailable to create hard links.\n */\n/*#define HAS_LINK\t/ **/\n\n/* HAS_LOCALECONV:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable for numeric and monetary formatting conventions.\n */\n/*#define HAS_LOCALECONV\t/ **/\n\n/* HAS_LOCKF:\n *\tThis symbol, if defined, indicates that the lockf routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_LOCKF\t\t/ **/\n\n/* HAS_LSTAT:\n *\tThis symbol, if defined, indicates that the lstat routine is\n *\tavailable to do file stats on symbolic links.\n */\n/*#define HAS_LSTAT\t\t/ **/\n\n/* HAS_MBLEN:\n *\tThis symbol, if defined, indicates that the mblen routine is available\n *\tto find the number of bytes in a multibye character.\n */\n/*#define HAS_MBLEN\t\t/ **/\n\n/* HAS_MBSTOWCS:\n *\tThis symbol, if defined, indicates that the mbstowcs routine is\n *\tavailable to convert a multibyte string into a wide character string.\n */\n/*#define\tHAS_MBSTOWCS\t\t/ **/\n\n/* HAS_MBTOWC:\n *\tThis symbol, if defined, indicates that the mbtowc routine is available\n *\tto convert a multibyte to a wide character.\n */\n/*#define HAS_MBTOWC\t\t/ **/\n\n/* HAS_MKDIR:\n *\tThis symbol, if defined, indicates that the mkdir routine is available\n *\tto create directories.  Otherwise you should fork off a new process to\n *\texec /bin/mkdir.\n */\n/*#define HAS_MKDIR\t\t/ **/\n\n/* HAS_MKFIFO:\n *\tThis symbol, if defined, indicates that the mkfifo routine is\n *\tavailable to create FIFOs. Otherwise, mknod should be able to\n *\tdo it for you. However, if mkfifo is there, mknod might require\n *\tsuper-user privileges which mkfifo will not.\n */\n/*#define HAS_MKFIFO\t\t/ **/\n\n/* HAS_MKTIME:\n *\tThis symbol, if defined, indicates that the mktime routine is\n *\tavailable.\n */\n/*#define HAS_MKTIME\t\t/ **/\n\n/* HAS_MSG:\n *\tThis symbol, if defined, indicates that the entire msg*(2) library is\n *\tsupported (IPC mechanism based on message queues).\n */\n/*#define HAS_MSG\t\t/ **/\n\n/* HAS_MSYNC:\n *\tThis symbol, if defined, indicates that the msync system call is\n *\tavailable to synchronize a mapped file.\n */\n/*#define HAS_MSYNC\t\t/ **/\n\n/* HAS_MUNMAP:\n *\tThis symbol, if defined, indicates that the munmap system call is\n *\tavailable to unmap a region, usually mapped by mmap().\n */\n/*#define HAS_MUNMAP\t\t/ **/\n\n/* HAS_NICE:\n *\tThis symbol, if defined, indicates that the nice routine is\n *\tavailable.\n */\n/*#define HAS_NICE\t\t/ **/\n\n/* HAS_PATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given filename.\n */\n/* HAS_FPATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given open file descriptor.\n */\n/*#define HAS_PATHCONF\t\t/ **/\n/*#define HAS_FPATHCONF\t\t/ **/\n\n/* HAS_PAUSE:\n *\tThis symbol, if defined, indicates that the pause routine is\n *\tavailable to suspend a process until a signal is received.\n */\n/*#define HAS_PAUSE\t\t/ **/\n\n/* HAS_PIPE:\n *\tThis symbol, if defined, indicates that the pipe routine is\n *\tavailable to create an inter-process channel.\n */\n/*#define HAS_PIPE\t\t/ **/\n\n/* HAS_POLL:\n *\tThis symbol, if defined, indicates that the poll routine is\n *\tavailable to poll active file descriptors.  Please check I_POLL and\n *\tI_SYS_POLL to know which header should be included as well.\n */\n/*#define HAS_POLL\t\t/ **/\n\n/* HAS_READDIR:\n *\tThis symbol, if defined, indicates that the readdir routine is\n *\tavailable to read directory entries. You may have to include\n *\t<dirent.h>. See I_DIRENT.\n */\n#define HAS_READDIR\t\t/**/\n\n/* HAS_SEEKDIR:\n *\tThis symbol, if defined, indicates that the seekdir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n/*#define HAS_SEEKDIR\t\t/ **/\n\n/* HAS_TELLDIR:\n *\tThis symbol, if defined, indicates that the telldir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n/*#define HAS_TELLDIR\t\t/ **/\n\n/* HAS_REWINDDIR:\n *\tThis symbol, if defined, indicates that the rewinddir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n/*#define HAS_REWINDDIR\t\t/ **/\n\n/* HAS_READLINK:\n *\tThis symbol, if defined, indicates that the readlink routine is\n *\tavailable to read the value of a symbolic link.\n */\n/*#define HAS_READLINK\t\t/ **/\n\n/* HAS_REGCOMP:\n *\tThis symbol, if defined, indicates that the regcomp() routine is\n *\tavailable to do some regular patern matching (usually on POSIX.2\n *\tconforming systems).\n */\n#define HAS_REGCOMP\t\t/* POSIX.2 */\n\n/* HAS_RENAME:\n *\tThis symbol, if defined, indicates that the rename routine is available\n *\tto rename files.  Otherwise you should do the unlink(), link(), unlink()\n *\ttrick.\n */\n#define HAS_RENAME\t/**/\n\n/* HAS_RMDIR:\n *\tThis symbol, if defined, indicates that the rmdir routine is\n *\tavailable to remove directories. Otherwise you should fork off a\n *\tnew process to exec /bin/rmdir.\n */\n/*#define HAS_RMDIR\t\t/ **/\n\n/* HAS_SELECT:\n *\tThis symbol, if defined, indicates that the select routine is\n *\tavailable to select active file descriptors. If the timeout field\n *\tis used, <sys/time.h> may need to be included.\n */\n/*#define HAS_SELECT\t/ **/\n\n/* HAS_SEM:\n *\tThis symbol, if defined, indicates that the entire sem*(2) library is\n *\tsupported.\n */\n/*#define HAS_SEM\t\t/ **/\n\n/* HAS_SETEGID:\n *\tThis symbol, if defined, indicates that the setegid routine is available\n *\tto change the effective gid of the current program.\n */\n/*#define HAS_SETEGID\t\t/ **/\n\n/* HAS_SETEUID:\n *\tThis symbol, if defined, indicates that the seteuid routine is available\n *\tto change the effective uid of the current program.\n */\n/*#define HAS_SETEUID\t\t/ **/\n\n/* HAS_SETGROUPS:\n *\tThis symbol, if defined, indicates that the setgroups() routine is\n *\tavailable to set the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_SETGROUPS\t\t/ **/\n\n/* HAS_SETLINEBUF:\n *\tThis symbol, if defined, indicates that the setlinebuf routine is\n *\tavailable to change stderr or stdout from block-buffered or unbuffered\n *\tto a line-buffered mode.\n */\n/*#define HAS_SETLINEBUF\t\t/ **/\n\n/* HAS_SETPGID:\n *\tThis symbol, if defined, indicates that the setpgid(pid, gpid)\n *\troutine is available to set process group ID.\n */\n/*#define HAS_SETPGID\t/ **/\n\n/* HAS_SETPGRP2:\n *\tThis symbol, if defined, indicates that the setpgrp2() (as in DG/UX)\n *\troutine is available to set the current process group.\n */\n/*#define HAS_SETPGRP2\t\t/ **/\n\n/* HAS_SETPRIORITY:\n *\tThis symbol, if defined, indicates that the setpriority routine is\n *\tavailable to set a process's priority.\n */\n/*#define HAS_SETPRIORITY\t\t/ **/\n\n/* HAS_SETREGID:\n *\tThis symbol, if defined, indicates that the setregid routine is\n *\tavailable to change the real and effective gid of the current\n *\tprocess.\n */\n/* HAS_SETRESGID:\n *\tThis symbol, if defined, indicates that the setresgid routine is\n *\tavailable to change the real, effective and saved gid of the current\n *\tprocess.\n */\n/*#define HAS_SETREGID\t\t/ **/\n/*#define HAS_SETRESGID\t\t/ **/\n\n/* HAS_SETREUID:\n *\tThis symbol, if defined, indicates that the setreuid routine is\n *\tavailable to change the real and effective uid of the current\n *\tprocess.\n */\n/* HAS_SETRESUID:\n *\tThis symbol, if defined, indicates that the setresuid routine is\n *\tavailable to change the real, effective and saved uid of the current\n *\tprocess.\n */\n/*#define HAS_SETREUID\t\t/ **/\n/*#define HAS_SETRESUID\t\t/ **/\n\n/* HAS_SETRGID:\n *\tThis symbol, if defined, indicates that the setrgid routine is available\n *\tto change the real gid of the current program.\n */\n/*#define HAS_SETRGID\t\t/ **/\n\n/* HAS_SETRUID:\n *\tThis symbol, if defined, indicates that the setruid routine is available\n *\tto change the real uid of the current program.\n */\n/*#define HAS_SETRUID\t\t/ **/\n\n/* HAS_SETSID:\n *\tThis symbol, if defined, indicates that the setsid routine is\n *\tavailable to set the process group ID.\n */\n/*#define HAS_SETSID\t/ **/\n\n/* HAS_STAT:\n *\tThis symbol, if defined, indicates that the stat routine is\n *\tavailable to get file status.\n */\n#define HAS_STAT\t/**/\n\n/* HAS_STRCOLL:\n *\tThis symbol, if defined, indicates that the strcoll routine is\n *\tavailable to compare strings using collating information.\n */\n/*#define HAS_STRCOLL\t/ **/\n\n/* HAS_STRTOD:\n *\tThis symbol, if defined, indicates that the strtod routine is\n *\tavailable to provide better numeric string conversion than atof().\n */\n/*#define HAS_STRTOD\t/ **/\n\n/* HAS_STRTOL:\n *\tThis symbol, if defined, indicates that the strtol routine is available\n *\tto provide better numeric string conversion than atoi() and friends.\n */\n#define HAS_STRTOL\t/**/\n\n/* HAS_STRXFRM:\n *\tThis symbol, if defined, indicates that the strxfrm() routine is\n *\tavailable to transform strings.\n */\n/*#define HAS_STRXFRM\t/ **/\n\n/* HAS_SYMLINK:\n *\tThis symbol, if defined, indicates that the symlink routine is available\n *\tto create symbolic links.\n */\n/*#define HAS_SYMLINK\t/ **/\n\n/* HAS_SYSCALL:\n *\tThis symbol, if defined, indicates that the syscall routine is\n *\tavailable to call arbitrary system calls. If undefined, that's tough.\n */\n/*#define HAS_SYSCALL\t/ **/\n\n/* HAS_SYSCONF:\n *\tThis symbol, if defined, indicates that sysconf() is available\n *\tto determine system related limits and options.\n */\n/*#define HAS_SYSCONF\t/ **/\n\n/* HAS_SYSTEM:\n *\tThis symbol, if defined, indicates that the system routine is\n *\tavailable to issue a shell command.\n */\n/*#define HAS_SYSTEM\t/ **/\n\n/* HAS_TCGETPGRP:\n *\tThis symbol, if defined, indicates that the tcgetpgrp routine is\n *\tavailable to get foreground process group ID.\n */\n/*#define HAS_TCGETPGRP\t\t/ **/\n\n/* HAS_TCSETPGRP:\n *\tThis symbol, if defined, indicates that the tcsetpgrp routine is\n *\tavailable to set foreground process group ID.\n */\n/*#define HAS_TCSETPGRP\t\t/ **/\n\n/* HAS_TRUNCATE:\n *\tThis symbol, if defined, indicates that the truncate routine is\n *\tavailable to truncate files.\n */\n/*#define HAS_TRUNCATE\t/ **/\n\n/* HAS_TZNAME:\n *\tThis symbol, if defined, indicates that the tzname[] array is\n *\tavailable to access timezone names.\n */\n/*#define HAS_TZNAME\t\t/ **/\n\n/* HAS_UMASK:\n *\tThis symbol, if defined, indicates that the umask routine is\n *\tavailable to set and get the value of the file creation mask.\n */\n/*#define HAS_UMASK\t\t/ **/\n\n/* HAS_USLEEP:\n *\tThis symbol, if defined, indicates that the usleep routine is\n *\tavailable to let the process sleep on a sub-second accuracy.\n */\n/*#define HAS_USLEEP\t\t/ **/\n\n/* HAS_WAIT4:\n *\tThis symbol, if defined, indicates that wait4() exists.\n */\n/*#define HAS_WAIT4\t/ **/\n\n/* HAS_WAITPID:\n *\tThis symbol, if defined, indicates that the waitpid routine is\n *\tavailable to wait for child process.\n */\n/*#define HAS_WAITPID\t/ **/\n\n/* HAS_WCSTOMBS:\n *\tThis symbol, if defined, indicates that the wcstombs routine is\n *\tavailable to convert wide character strings to multibyte strings.\n */\n/*#define HAS_WCSTOMBS\t/ **/\n\n/* HAS_WCTOMB:\n *\tThis symbol, if defined, indicates that the wctomb routine is available\n *\tto convert a wide character to a multibyte.\n */\n/*#define HAS_WCTOMB\t\t/ **/\n\n/* Groups_t:\n *\tThis symbol holds the type used for the second argument to\n *\tgetgroups() and setgroups().  Usually, this is the same as\n *\tgidtype (gid_t) , but sometimes it isn't.\n *\tIt can be int, ushort, gid_t, etc...\n *\tIt may be necessary to include <sys/types.h> to get any\n *\ttypedef'ed information.  This is only required if you have\n *\tgetgroups() or setgroups()..\n */\n#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)\n#define Groups_t int\t/* Type for 2nd arg to [sg]etgroups() */\n#endif\n\n/* I_ARPA_INET:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <arpa/inet.h> to get inet_addr and friends declarations.\n */\n/*#define\tI_ARPA_INET\t\t/ **/\n\n/* I_DBM:\n *\tThis symbol, if defined, indicates that <dbm.h> exists and should\n *\tbe included.\n */\n/* I_RPCSVC_DBM:\n *\tThis symbol, if defined, indicates that <rpcsvc/dbm.h> exists and\n *\tshould be included.\n */\n/*#define I_DBM\t/ **/\n/*#define I_RPCSVC_DBM\t/ **/\n\n/* I_DLFCN:\n *\tThis symbol, if defined, indicates that <dlfcn.h> exists and should\n *\tbe included.\n */\n/*#define I_DLFCN\t\t/ **/\n\n/* I_FCNTL:\n *\tThis manifest constant tells the C program to include <fcntl.h>.\n */\n/*#define I_FCNTL\t/ **/\n\n/* I_GDBM:\n *\tThis symbol, if defined, indicates that <gdbm.h> exists and should\n *\tbe included.\n */\n/*#define I_GDBM\t/ **/\n\n/* I_LOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <locale.h>.\n */\n/*#define\tI_LOCALE\t\t/ **/\n\n/* I_NETINET_IN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/in.h>. Otherwise, you may try <sys/in.h>.\n */\n/*#define I_NETINET_IN\t/ **/\n\n/* I_SYS_DIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/dir.h>.\n */\n/*#define I_SYS_DIR\t\t/ **/\n\n/* I_SYS_FILE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/file.h> to get definition of R_OK and friends.\n */\n/*#define I_SYS_FILE\t\t/ **/\n\n/* I_SYS_IOCTL:\n *\tThis symbol, if defined, indicates that <sys/ioctl.h> exists and should\n *\tbe included. Otherwise, include <sgtty.h> or <termio.h>.\n */\n/* I_SYS_SOCKIO:\n *\tThis symbol, if defined, indicates the <sys/sockio.h> should be included\n *\tto get socket ioctl options, like SIOCATMARK.\n */\n/*#define\tI_SYS_IOCTL\t\t/ **/\n/*#define I_SYS_SOCKIO\t/ **/\n\n/* I_SYS_NDIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/ndir.h>.\n */\n/*#define I_SYS_NDIR\t/ **/\n\n/* I_SYS_PARAM:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/param.h>.\n */\n/*#define I_SYS_PARAM\t\t/ **/\n\n/* I_SYS_POLL:\n *\tThis symbol, if defined, indicates that the program may include\n *\t<sys/poll.h>.  When I_POLL is also defined, it's probably safest\n *\tto only include <poll.h>.\n */\n/*#define I_SYS_POLL\t/ **/\n\n/* I_SYS_RESOURCE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/resource.h>.\n */\n/*#define I_SYS_RESOURCE\t\t/ **/\n\n/* I_SYS_SELECT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/select.h> in order to get definition of struct timeval.\n */\n/*#define I_SYS_SELECT\t/ **/\n\n/* I_SYS_STAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/stat.h>.\n */\n#define\tI_SYS_STAT\t\t/**/\n\n/* I_SYS_TIMES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/times.h>.\n */\n/*#define\tI_SYS_TIMES\t\t/ **/\n\n/* I_SYS_TYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/types.h>.\n */\n/*#define\tI_SYS_TYPES\t\t/ **/\n\n/* I_SYS_UN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/un.h> to get UNIX domain socket definitions.\n */\n/*#define I_SYS_UN\t\t/ **/\n\n/* I_SYS_WAIT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/wait.h>.\n */\n/*#define I_SYS_WAIT\t/ **/\n\n/* I_UNISTD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <unistd.h>.\n */\n/*#define I_UNISTD\t\t/ **/\n\n/* I_UTIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <utime.h>.\n */\n/*#define I_UTIME\t\t/ **/\n\n/* I_VFORK:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude vfork.h.\n */\n/*#define I_VFORK\t/ **/\n\n/* STDCHAR:\n *\tThis symbol is defined to be the type of char used in stdio.h.\n *\tIt has the values \"unsigned char\" or \"char\".\n */\n#define STDCHAR char\t/**/\n\n/* INTSIZE:\n *\tThis symbol contains the value of sizeof(int) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* LONGSIZE:\n *\tThis symbol contains the value of sizeof(long) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* SHORTSIZE:\n *\tThis symbol contains the value of sizeof(short) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n#define INTSIZE 4\t\t/**/\n#define LONGSIZE 4\t\t/**/\n#define SHORTSIZE 2\t\t/**/\n\n/* MULTIARCH:\n *\tThis symbol, if defined, signifies that the build\n *\tprocess will produce some binary files that are going to be\n *\tused in a cross-platform environment.  This is the case for\n *\texample with the NeXT \"fat\" binaries that contain executables\n *\tfor several CPUs.\n */\n/*#define MULTIARCH\t\t/ **/\n\n/* HAS_QUAD:\n *\tThis symbol, if defined, tells that there's a 64-bit integer type,\n *\tQuad_t, and its unsigned counterpart, Uquad_t. QUADKIND will be one\n *\tof QUAD_IS_INT, QUAD_IS_LONG, QUAD_IS_LONG_LONG, QUAD_IS_INT64_T,\n *\tor QUAD_IS___INT64.\n */\n/*#define HAS_QUAD\t/ **/\n#ifdef HAS_QUAD\n#   define Quad_t int64_t\t/**/\n#   define Uquad_t uint64_t\t/**/\n#   define QUADKIND 4\t/**/\n#   define QUAD_IS_INT\t1\n#   define QUAD_IS_LONG\t2\n#   define QUAD_IS_LONG_LONG\t3\n#   define QUAD_IS_INT64_T\t4\n#   define QUAD_IS___INT64\t5\n#endif\n\n/* HAS_ACCESSX:\n *\tThis symbol, if defined, indicates that the accessx routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_ACCESSX\t\t/ **/\n\n/* HAS_EACCESS:\n *\tThis symbol, if defined, indicates that the eaccess routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_EACCESS\t\t/ **/\n\n/* I_SYS_ACCESS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/access.h>.\n */\n/*#define   I_SYS_ACCESS                / **/\n\n/* I_SYS_SECURITY:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/security.h>.\n */\n/*#define   I_SYS_SECURITY\t/ **/\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble, or a long double when applicable. Usual values are 2,\n *\t4 and 8. The default is eight, for safety.  For cross-compiling\n *\tor multiarch support, Configure will set a minimum of 8.\n */\n#define MEM_ALIGNBYTES 4\n\n/* BYTEORDER:\n *\tThis symbol holds the hexadecimal constant defined in byteorder,\n *\tin a UV, i.e. 0x1234 or 0x4321 or 0x12345678, etc...\n *\tIf the compiler supports cross-compiling or multiple-architecture\n *\tbinaries, use compiler-defined macros to\n *\tdetermine the byte order.\n */\n#if defined(MULTIARCH)\n#  ifdef __LITTLE_ENDIAN__\n#    if LONGSIZE == 4\n#      define BYTEORDER 0x1234\n#    else\n#      if LONGSIZE == 8\n#        define BYTEORDER 0x12345678\n#      endif\n#    endif\n#  else\n#    ifdef __BIG_ENDIAN__\n#      if LONGSIZE == 4\n#        define BYTEORDER 0x4321\n#      else\n#        if LONGSIZE == 8\n#          define BYTEORDER 0x87654321\n#        endif\n#      endif\n#    endif\n#  endif\n#else\n#define BYTEORDER 0x1234\t/* large digits for MSB */\n#endif\n\n/* CHARBITS:\n *\tThis symbol contains the size of a char, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define CHARBITS 8\t\t/**/\n\n/* CASTI32:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tor large floating point numbers to 32-bit ints.\n */\n/*#define\tCASTI32\t\t/ **/\n\n/* CASTNEGFLOAT:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tnumbers to unsigned longs, ints and shorts.\n */\n/* CASTFLAGS:\n *\tThis symbol contains flags that say what difficulties the compiler\n *\thas casting odd floating values to unsigned long:\n *\t\t0 = ok\n *\t\t1 = couldn't cast < 0\n *\t\t2 = couldn't cast >= 0x80000000\n *\t\t4 = couldn't cast in argument expression list\n */\n/*#define\tCASTNEGFLOAT\t\t/ **/\n#define CASTFLAGS 0\t\t/**/\n\n/* VOID_CLOSEDIR:\n *\tThis symbol, if defined, indicates that the closedir() routine\n *\tdoes not return a value.\n */\n/*#define VOID_CLOSEDIR\t\t/ **/\n\n/* HAS_FD_SET:\n *\tThis symbol, when defined, indicates presence of the fd_set typedef\n *\tin <sys/types.h>\n */\n/*#define HAS_FD_SET\t/ **/\n\n/* Gconvert:\n *\tThis preprocessor macro is defined to convert a floating point\n *\tnumber to a string without a trailing decimal point.  This\n *\temulates the behavior of sprintf(\"%g\"), but is sometimes much more\n *\tefficient.  If gconvert() is not available, but gcvt() drops the\n *\ttrailing decimal point, then gcvt() is used.  If all else fails,\n *\ta macro using sprintf(\"%g\") is used. Arguments for the Gconvert\n *\tmacro are: value, number of digits, whether trailing zeros should\n *\tbe retained, and the output buffer.\n *\tThe usual values are:\n *\t\td_Gconvert='gconvert((x),(n),(t),(b))'\n *\t\td_Gconvert='gcvt((x),(n),(b))'\n *\t\td_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\n *\tThe last two assume trailing zeros should not be kept.\n */\n#define Gconvert(x,n,t,b) sprintf((b),\"%.*g\",(n),(x))\n\n/* HAS_GETPAGESIZE:\n *\tThis symbol, if defined, indicates that the getpagesize system call\n *\tis available to get system page size, which is the granularity of\n *\tmany memory management calls.\n */\n/*#define HAS_GETPAGESIZE\t\t/ **/\n\n/* HAS_GNULIBC:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe GNU C library is being used.  A better check is to use\n *\tthe __GLIBC__ and __GLIBC_MINOR__ symbols supplied with glibc.\n */\n/*#define HAS_GNULIBC\t/ **/\n#if defined(HAS_GNULIBC) && !defined(_GNU_SOURCE)\n#   define _GNU_SOURCE\n#endif\n\n/* HAS_ISASCII:\n *\tThis manifest constant lets the C program know that isascii\n *\tis available.\n */\n/*#define HAS_ISASCII\t\t/ **/\n\n/* HAS_LCHOWN:\n *\tThis symbol, if defined, indicates that the lchown routine is\n *\tavailable to operate on a symbolic link (instead of following the\n *\tlink).\n */\n/*#define HAS_LCHOWN\t\t/ **/\n\n/* HAS_OPEN3:\n *\tThis manifest constant lets the C program know that the three\n *\targument form of open(2) is available.\n */\n/*#define HAS_OPEN3\t\t/ **/\n\n/* HAS_SIGACTION:\n *\tThis symbol, if defined, indicates that Vr4's sigaction() routine\n *\tis available.\n */\n/*#define HAS_SIGACTION\t/ **/\n\n/* HAS_SIGINFO_SI_ERRNO:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_errno member\n */\n/* HAS_SIGINFO_SI_PID:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_pid member\n */\n/* HAS_SIGINFO_SI_UID:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_uid member\n */\n/* HAS_SIGINFO_SI_ADDR:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_addr member\n */\n/* HAS_SIGINFO_SI_STATUS:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_status member\n */\n/* HAS_SIGINFO_SI_BAND:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_band member\n */\n/* HAS_SIGINFO_SI_VALUE:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_value member\n */\n/*#define\tHAS_SIGINFO_SI_ERRNO\t/ **/\n/*#define\tHAS_SIGINFO_SI_PID\t/ **/\n/*#define\tHAS_SIGINFO_SI_UID\t/ **/\n/*#define\tHAS_SIGINFO_SI_ADDR\t/ **/\n/*#define\tHAS_SIGINFO_SI_STATUS\t/ **/\n/*#define\tHAS_SIGINFO_SI_BAND\t/ **/\n/*#define\tHAS_SIGINFO_SI_VALUE\t/ **/\n\n/* HAS_SIGSETJMP:\n *\tThis variable indicates to the C program that the sigsetjmp()\n *\troutine is available to save the calling process's registers\n *\tand stack environment for later use by siglongjmp(), and\n *\tto optionally save the process's signal mask.  See\n *\tSigjmp_buf, Sigsetjmp, and Siglongjmp.\n */\n/* Sigjmp_buf:\n *\tThis is the buffer type to be used with Sigsetjmp and Siglongjmp.\n */\n/* Sigsetjmp:\n *\tThis macro is used in the same way as sigsetjmp(), but will invoke\n *\ttraditional setjmp() if sigsetjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/* Siglongjmp:\n *\tThis macro is used in the same way as siglongjmp(), but will invoke\n *\ttraditional longjmp() if siglongjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/*#define HAS_SIGSETJMP\t/ **/\n#ifdef HAS_SIGSETJMP\n#define Sigjmp_buf sigjmp_buf\n#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))\n#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))\n#else\n#define Sigjmp_buf jmp_buf\n#define Sigsetjmp(buf,save_mask) setjmp((buf))\n#define Siglongjmp(buf,retval) longjmp((buf),(retval))\n#endif\n\n/* HAS_STATIC_INLINE:\n *\tThis symbol, if defined, indicates that the C compiler supports\n *\tC99-style static inline.  That is, the function can't be called\n *\tfrom another translation unit.\n */\n/* PERL_STATIC_INLINE:\n *\tThis symbol gives the best-guess incantation to use for static\n *\tinline functions.  If HAS_STATIC_INLINE is defined, this will\n *\tgive C99-style inline.  If HAS_STATIC_INLINE is not defined,\n *\tthis will give a plain 'static'.  It will always be defined\n *\tto something that gives static linkage.\n *\tPossibilities include\n *\t\tstatic inline       (c99)\n *\t\tstatic __inline__   (gcc -ansi)\n *\t\tstatic __inline     (MSVC)\n *\t\tstatic _inline      (older MSVC)\n *\t\tstatic              (c89 compilers)\n */\n/*#define HAS_STATIC_INLINE\t\t\t\t/ **/\n#define PERL_STATIC_INLINE static\t/**/\n\n/* USE_STDIO_PTR:\n *\tThis symbol is defined if the _ptr and _cnt fields (or similar)\n *\tof the stdio FILE structure can be used to access the stdio buffer\n *\tfor a file handle.  If this is defined, then the FILE_ptr(fp)\n *\tand FILE_cnt(fp) macros will also be defined and should be used\n *\tto access these fields.\n */\n/* FILE_ptr:\n *\tThis macro is used to access the _ptr field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_PTR_LVALUE:\n *\tThis symbol is defined if the FILE_ptr macro can be used as an\n *\tlvalue.\n */\n/* FILE_cnt:\n *\tThis macro is used to access the _cnt field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_CNT_LVALUE:\n *\tThis symbol is defined if the FILE_cnt macro can be used as an\n *\tlvalue.\n */\n/* STDIO_PTR_LVAL_SETS_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n has the side effect of decreasing the\n *\tvalue of File_cnt(fp) by n.\n */\n/* STDIO_PTR_LVAL_NOCHANGE_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n leaves File_cnt(fp) unchanged.\n */\n/*#define USE_STDIO_PTR\t/ **/\n#ifdef USE_STDIO_PTR\n#define FILE_ptr(fp)\t((fp)->_IO_read_ptr)\n/*#define STDIO_PTR_LVALUE\t\t/ **/\n#define FILE_cnt(fp)\t((fp)->_IO_read_end - (fp)->_IO_read_ptr)\n/*#define STDIO_CNT_LVALUE\t\t/ **/\n/*#define STDIO_PTR_LVAL_SETS_CNT\t/ **/\n/*#define STDIO_PTR_LVAL_NOCHANGE_CNT\t/ **/\n#endif\n\n/* USE_STDIO_BASE:\n *\tThis symbol is defined if the _base field (or similar) of the\n *\tstdio FILE structure can be used to access the stdio buffer for\n *\ta file handle.  If this is defined, then the FILE_base(fp) macro\n *\twill also be defined and should be used to access this field.\n *\tAlso, the FILE_bufsiz(fp) macro will be defined and should be used\n *\tto determine the number of bytes in the buffer.  USE_STDIO_BASE\n *\twill never be defined unless USE_STDIO_PTR is.\n */\n/* FILE_base:\n *\tThis macro is used to access the _base field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_BASE is defined.\n */\n/* FILE_bufsiz:\n *\tThis macro is used to determine the number of bytes in the I/O\n *\tbuffer pointed to by _base field (or equivalent) of the FILE\n *\tstructure pointed to its argument. This macro will always be defined\n *\tif USE_STDIO_BASE is defined.\n */\n/*#define USE_STDIO_BASE\t/ **/\n#ifdef USE_STDIO_BASE\n#define FILE_base(fp)\t((fp)->_IO_read_base)\n#define FILE_bufsiz(fp)\t((fp)->_IO_read_end - (fp)->_IO_read_base)\n#endif\n\n/* DOUBLESIZE:\n *\tThis symbol contains the size of a double, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define DOUBLESIZE 8\t\t/**/\n\n/* I_TIME:\n *\tThis symbol is always defined, and indicates to the C program that\n *\tit should include <time.h>.\n */\n/* I_SYS_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h>.\n */\n/* I_SYS_TIME_KERNEL:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h> with KERNEL defined.\n */\n/* HAS_TM_TM_ZONE:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_zone field.\n */\n/* HAS_TM_TM_GMTOFF:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_gmtoff field.\n */\n#define I_TIME\t\t/**/\n/*#define I_SYS_TIME\t\t/ **/\n/*#define I_SYS_TIME_KERNEL\t\t/ **/\n/*#define HAS_TM_TM_ZONE\t\t/ **/\n/*#define HAS_TM_TM_GMTOFF\t\t/ **/\n\n/* VAL_O_NONBLOCK:\n *\tThis symbol is to be used during open() or fcntl(F_SETFL) to turn on\n *\tnon-blocking I/O for the file descriptor. Note that there is no way\n *\tback, i.e. you cannot turn it blocking again this way. If you wish to\n *\talternatively switch between blocking and non-blocking, use the\n *\tioctl(FIOSNBIO) call instead, but that is not supported by all devices.\n */\n/* VAL_EAGAIN:\n *\tThis symbol holds the errno error code set by read() when no data was\n *\tpresent on the non-blocking file descriptor.\n */\n/* RD_NODATA:\n *\tThis symbol holds the return code from read() when no data is present\n *\ton the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is\n *\tnot defined, then you can't distinguish between no data and EOF by\n *\tissuing a read(). You'll have to find another way to tell for sure!\n */\n/* EOF_NONBLOCK:\n *\tThis symbol, if defined, indicates to the C program that a read() on\n *\ta non-blocking file descriptor will return 0 on EOF, and not the value\n *\theld in RD_NODATA (-1 usually, in that case!).\n */\n#define VAL_O_NONBLOCK O_NONBLOCK\n#define VAL_EAGAIN EAGAIN\n#define RD_NODATA -1\n#undef EOF_NONBLOCK\n\n/* PTRSIZE:\n *\tThis symbol contains the size of a pointer, so that the C preprocessor\n *\tcan make decisions based on it.  It will be sizeof(void *) if\n *\tthe compiler supports (void *); otherwise it will be\n *\tsizeof(char *).\n */\n#define PTRSIZE 4\t\t/**/\n\n/* Drand01:\n *\tThis macro is to be used to generate uniformly distributed\n *\trandom numbers over the range [0., 1.[.  You may have to supply\n *\tan 'extern double drand48();' in your program since SunOS 4.1.3\n *\tdoesn't provide you with anything relevant in its headers.\n *\tSee HAS_DRAND48_PROTO.\n */\n/* Rand_seed_t:\n *\tThis symbol defines the type of the argument of the\n *\trandom seed function.\n */\n/* seedDrand01:\n *\tThis symbol defines the macro to be used in seeding the\n *\trandom number generator (see Drand01).\n */\n/* RANDBITS:\n *\tThis symbol indicates how many bits are produced by the\n *\tfunction used to generate normalized random numbers.\n *\tValues include 15, 16, 31, and 48.\n */\n#define Drand01()\t\tPerl_drand48()\t\t/**/\n#define Rand_seed_t\t\tU32\t\t/**/\n#define seedDrand01(x)\tPerl_drand48_init((Rand_seed_t)x)\t/**/\n#define RANDBITS\t\t48\t\t/**/\n\n/* SSize_t:\n *\tThis symbol holds the type used by functions that return\n *\ta count of bytes or an error condition.  It must be a signed type.\n *\tIt is usually ssize_t, but may be long or int, etc.\n *\tIt may be necessary to include <sys/types.h> or <unistd.h>\n *\tto get any typedef'ed information.\n *\tWe will pick a type such that sizeof(SSize_t) == sizeof(Size_t).\n */\n#define SSize_t int\t/* signed count of bytes */\n\n/* EBCDIC:\n *\tThis symbol, if defined, indicates that this system uses\n *\tEBCDIC encoding.\n */\n/*#define\tEBCDIC\t\t/ **/\n\n/* ARCHLIB:\n *\tThis variable, if defined, holds the name of the directory in\n *\twhich the user wants to put architecture-dependent public\n *\tlibrary files for perl5.  It is most often a local directory\n *\tsuch as /usr/local/lib.  Programs using this variable must be\n *\tprepared to deal with filename expansion.  If ARCHLIB is the\n *\tsame as PRIVLIB, it is not defined, since presumably the\n *\tprogram already searches PRIVLIB.\n */\n/* ARCHLIB_EXP:\n *\tThis symbol contains the ~name expanded version of ARCHLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define ARCHLIB \"/usr/local/lib/perl5/5.30/unknown\"\t\t/ **/\n/*#define ARCHLIB_EXP \"/usr/local/lib/perl5/5.30/unknown\"\t\t/ **/\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n/* PERL_RELOCATABLE_INC:\n *\tThis symbol, if defined, indicates that we'd like to relocate entries\n *\tin @INC at run time based on the location of the perl binary.\n */\n#define BIN \"/usr/local/bin\"\t/**/\n#define BIN_EXP \"/usr/local/bin\"\t/**/\n#define PERL_RELOCATABLE_INC \"undef\"\t\t/**/\n\n/* PERL_INC_VERSION_LIST:\n *\tThis variable specifies the list of subdirectories in over\n *\twhich perl.c:incpush() and lib/lib.pm will automatically\n *\tsearch when adding directories to @INC, in a format suitable\n *\tfor a C initialization string.  See the inc_version_list entry\n *\tin Porting/Glossary for more details.\n */\n/*#define PERL_INC_VERSION_LIST NULL\t\t/ **/\n\n/* INSTALL_USR_BIN_PERL:\n *\tThis symbol, if defined, indicates that Perl is to be installed\n *\talso as /usr/bin/perl.\n */\n/*#define INSTALL_USR_BIN_PERL\t/ **/\n\n/* PERL_OTHERLIBDIRS:\n *\tThis variable contains a colon-separated set of paths for the perl\n *\tbinary to search for additional library files or modules.\n *\tThese directories will be tacked to the end of @INC.\n *\tPerl will automatically search below each path for version-\n *\tand architecture-specific directories.  See PERL_INC_VERSION_LIST\n *\tfor more details.\n */\n/*#define PERL_OTHERLIBDIRS \" \"\t\t/ **/\n\n/* PRIVLIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n */\n/* PRIVLIB_EXP:\n *\tThis symbol contains the ~name expanded version of PRIVLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define PRIVLIB \"/usr/local/lib/perl5/5.30\"\t\t/**/\n#define PRIVLIB_EXP \"/usr/local/lib/perl5/5.30\"\t\t/**/\n\n/* SITEARCH:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-dependent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITEARCH_EXP:\n *\tThis symbol contains the ~name expanded version of SITEARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define SITEARCH \"/usr/local/lib/perl5/5.30/unknown\"\t\t/ **/\n/*#define SITEARCH_EXP \"/usr/local/lib/perl5/5.30/unknown\"\t\t/ **/\n\n/* SITELIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-independent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITELIB_EXP:\n *\tThis symbol contains the ~name expanded version of SITELIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* SITELIB_STEM:\n *\tThis define is SITELIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#define SITELIB \"/usr/local/lib/perl5/5.30\"\t\t/**/\n#define SITELIB_EXP \"/usr/local/lib/perl5/5.30\"\t\t/**/\n#define SITELIB_STEM \"/usr/local/lib/perl5\"\t\t/**/\n\n/* PERL_VENDORARCH:\n *\tIf defined, this symbol contains the name of a private library.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.\n *\tIt may have a ~ on the front.\n *\tThe standard distribution will put nothing in this directory.\n *\tVendors who distribute perl may wish to place their own\n *\tarchitecture-dependent modules and extensions in this directory with\n *\t\tMakeMaker Makefile.PL INSTALLDIRS=vendor\n *\tor equivalent.  See INSTALL for details.\n */\n/* PERL_VENDORARCH_EXP:\n *\tThis symbol contains the ~name expanded version of PERL_VENDORARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define PERL_VENDORARCH \"\"\t\t/ **/\n/*#define PERL_VENDORARCH_EXP \"\"\t\t/ **/\n\n/* PERL_VENDORLIB_EXP:\n *\tThis symbol contains the ~name expanded version of VENDORLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* PERL_VENDORLIB_STEM:\n *\tThis define is PERL_VENDORLIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n/*#define PERL_VENDORLIB_EXP \"\"\t\t/ **/\n/*#define PERL_VENDORLIB_STEM \"\"\t\t/ **/\n\n/* OSNAME:\n *\tThis symbol contains the name of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n/* OSVERS:\n *\tThis symbol contains the version of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n#define OSNAME \"unknown\"\t\t/**/\n#define OSVERS \"unknown\"\t\t/**/\n\n/* CAT2:\n *\tThis macro concatenates 2 tokens together.\n */\n/* STRINGIFY:\n *\tThis macro surrounds its token with double quotes.\n */\n#if 42 == 1\n#define CAT2(a,b)\ta/**/b\n#define STRINGIFY(a)\t\"a\"\n#endif\n#if 42 == 42\n#define PeRl_CaTiFy(a, b)\ta ## b\n#define PeRl_StGiFy(a)\t#a\n#define CAT2(a,b)\tPeRl_CaTiFy(a,b)\n#define StGiFy(a)\tPeRl_StGiFy(a)\n#define STRINGIFY(a)\tPeRl_StGiFy(a)\n#endif\n#if 42 != 1 && 42 != 42\n#include \"Bletch: How does this C preprocessor concatenate tokens?\"\n#endif\n\n/* CPPSTDIN:\n *\tThis symbol contains the first part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  Typical value of \"cc -E\" or \"/lib/cpp\", but it can also\n *\tcall a wrapper. See CPPRUN.\n */\n/* CPPMINUS:\n *\tThis symbol contains the second part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  This symbol will have the value \"-\" if CPPSTDIN needs a minus\n *\tto specify standard input, otherwise the value is \"\".\n */\n/* CPPRUN:\n *\tThis symbol contains the string which will invoke a C preprocessor on\n *\tthe standard input and produce to standard output. It needs to end\n *\twith CPPLAST, after all other preprocessor flags have been specified.\n *\tThe main difference with CPPSTDIN is that this program will never be a\n *\tpointer to a shell wrapper, i.e. it will be empty if no preprocessor is\n *\tavailable directly to the user. Note that it may well be different from\n *\tthe preprocessor used to compile the C program.\n */\n/* CPPLAST:\n *\tThis symbol is intended to be used along with CPPRUN in the same manner\n *\tsymbol CPPMINUS is used with CPPSTDIN. It contains either \"-\" or \"\".\n */\n#define CPPSTDIN \"cc -E\"\n#define CPPMINUS \"-\"\n#define CPPRUN \"cc -E\"\n#define CPPLAST \"-\"\n\n/* HAS_ACCESS:\n *\tThis manifest constant lets the C program know that the access()\n *\tsystem call is available to check for accessibility using real UID/GID.\n *\t(always present on UNIX.)\n */\n/*#define HAS_ACCESS\t\t/ **/\n\n/* HASATTRIBUTE_FORMAT:\n *\tCan we handle GCC attribute for checking printf-style formats\n */\n/* PRINTF_FORMAT_NULL_OK:\n *\tAllows __printf__ format to be null when checking printf-style\n */\n/* HASATTRIBUTE_MALLOC:\n *\tCan we handle GCC attribute for malloc-style functions.\n */\n/* HASATTRIBUTE_NONNULL:\n *\tCan we handle GCC attribute for nonnull function parms.\n */\n/* HASATTRIBUTE_NORETURN:\n *\tCan we handle GCC attribute for functions that do not return\n */\n/* HASATTRIBUTE_PURE:\n *\tCan we handle GCC attribute for pure functions\n */\n/* HASATTRIBUTE_UNUSED:\n *\tCan we handle GCC attribute for unused variables and arguments\n */\n/* HASATTRIBUTE_DEPRECATED:\n *\tCan we handle GCC attribute for marking deprecated APIs\n */\n/* HASATTRIBUTE_WARN_UNUSED_RESULT:\n *\tCan we handle GCC attribute for warning on unused results\n */\n/*#define HASATTRIBUTE_DEPRECATED\t/ **/\n/*#define HASATTRIBUTE_FORMAT\t/ **/\n/*#define PRINTF_FORMAT_NULL_OK\t/ **/\n/*#define HASATTRIBUTE_NORETURN\t/ **/\n/*#define HASATTRIBUTE_MALLOC\t/ **/\n/*#define HASATTRIBUTE_NONNULL\t/ **/\n/*#define HASATTRIBUTE_PURE\t/ **/\n/*#define HASATTRIBUTE_UNUSED\t/ **/\n/*#define HASATTRIBUTE_WARN_UNUSED_RESULT\t/ **/\n\n/* HAS_BACKTRACE:\n *\tThis symbol, if defined, indicates that the backtrace() routine is\n *\tavailable to get a stack trace.  The <execinfo.h> header must be\n *\tincluded to use this routine.\n */\n/*#define HAS_BACKTRACE\t/ **/\n\n/* HAS_CSH:\n *\tThis symbol, if defined, indicates that the C-shell exists.\n */\n/* CSH:\n *\tThis symbol, if defined, contains the full pathname of csh.\n */\n/*#define HAS_CSH\t\t/ **/\n#ifdef HAS_CSH\n#define CSH \"\"\t/**/\n#endif\n\n/* HAS_DLADDR:\n *\tThis symbol, if defined, indicates that the dladdr() routine is\n *\tavailable to query dynamic linker information for an address.\n *\tThe <dlfcn.h> header must be included to use this routine.\n */\n/*#define HAS_DLADDR\t/ **/\n\n/* SETUID_SCRIPTS_ARE_SECURE_NOW:\n *\tThis symbol, if defined, indicates that the bug that prevents\n *\tsetuid scripts from being secure is not present in this kernel.\n */\n/* DOSUID:\n *\tThis symbol, if defined, indicates that the C program should\n *\tcheck the script that it is executing for setuid/setgid bits, and\n *\tattempt to emulate setuid/setgid on systems that have disabled\n *\tsetuid #! scripts because the kernel can't do it securely.\n *\tIt is up to the package designer to make sure that this emulation\n *\tis done securely.  Among other things, it should do an fstat on\n *\tthe script it just opened to make sure it really is a setuid/setgid\n *\tscript, it should make sure the arguments passed correspond exactly\n *\tto the argument on the #! line, and it should not trust any\n *\tsubprocesses to which it must pass the filename rather than the\n *\tfile descriptor of the script to be executed.\n */\n/*#define SETUID_SCRIPTS_ARE_SECURE_NOW\t/ **/\n/*#define DOSUID\t\t/ **/\n\n/* HAS_ENDGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the group database.\n */\n/*#define HAS_ENDGRENT\t\t/ **/\n\n/* HAS_ENDHOSTENT:\n *\tThis symbol, if defined, indicates that the endhostent() routine is\n *\tavailable to close whatever was being used for host queries.\n */\n/*#define HAS_ENDHOSTENT\t\t/ **/\n\n/* HAS_ENDNETENT:\n *\tThis symbol, if defined, indicates that the endnetent() routine is\n *\tavailable to close whatever was being used for network queries.\n */\n/*#define HAS_ENDNETENT\t\t/ **/\n\n/* HAS_ENDPROTOENT:\n *\tThis symbol, if defined, indicates that the endprotoent() routine is\n *\tavailable to close whatever was being used for protocol queries.\n */\n/*#define HAS_ENDPROTOENT\t\t/ **/\n\n/* HAS_ENDPWENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the passwd database.\n */\n/*#define HAS_ENDPWENT\t\t/ **/\n\n/* HAS_ENDSERVENT:\n *\tThis symbol, if defined, indicates that the endservent() routine is\n *\tavailable to close whatever was being used for service queries.\n */\n/*#define HAS_ENDSERVENT\t\t/ **/\n\n/* FLEXFILENAMES:\n *\tThis symbol, if defined, indicates that the system supports filenames\n *\tlonger than 14 characters.\n */\n/*#define\tFLEXFILENAMES\t\t/ **/\n\n/* HAS_GETGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for sequential access of the group database.\n */\n/*#define HAS_GETGRENT\t\t/ **/\n\n/* HAS_GETHOSTBYADDR:\n *\tThis symbol, if defined, indicates that the gethostbyaddr() routine is\n *\tavailable to look up hosts by their IP addresses.\n */\n/*#define HAS_GETHOSTBYADDR\t\t/ **/\n\n/* HAS_GETHOSTBYNAME:\n *\tThis symbol, if defined, indicates that the gethostbyname() routine is\n *\tavailable to look up host names in some data base or other.\n */\n/*#define HAS_GETHOSTBYNAME\t\t/ **/\n\n/* HAS_GETHOSTENT:\n *\tThis symbol, if defined, indicates that the gethostent() routine is\n *\tavailable to look up host names in some data base or another.\n */\n/*#define HAS_GETHOSTENT\t\t/ **/\n\n/* HAS_GETHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tgethostname() routine to derive the host name.  See also HAS_UNAME\n *\tand PHOSTNAME.\n */\n/* HAS_UNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tuname() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand PHOSTNAME.\n */\n/* PHOSTNAME:\n *\tThis symbol, if defined, indicates the command to feed to the\n *\tpopen() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand HAS_UNAME.\tNote that the command uses a fully qualified path,\n *\tso that it is safe even if used by a process with super-user\n *\tprivileges.\n */\n/* HAS_PHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tcontents of PHOSTNAME as a command to feed to the popen() routine\n *\tto derive the host name.\n */\n/*#define HAS_GETHOSTNAME\t/ **/\n/*#define HAS_UNAME\t\t/ **/\n/*#define HAS_PHOSTNAME\t/ **/\n#ifdef HAS_PHOSTNAME\n#define PHOSTNAME \"/bin/hostname\"\t/* How to get the host name */\n#endif\n\n/* HAS_GETNETBYADDR:\n *\tThis symbol, if defined, indicates that the getnetbyaddr() routine is\n *\tavailable to look up networks by their IP addresses.\n */\n/*#define HAS_GETNETBYADDR\t\t/ **/\n\n/* HAS_GETNETBYNAME:\n *\tThis symbol, if defined, indicates that the getnetbyname() routine is\n *\tavailable to look up networks by their names.\n */\n/*#define HAS_GETNETBYNAME\t\t/ **/\n\n/* HAS_GETNETENT:\n *\tThis symbol, if defined, indicates that the getnetent() routine is\n *\tavailable to look up network names in some data base or another.\n */\n/*#define HAS_GETNETENT\t\t/ **/\n\n/* HAS_GETPROTOENT:\n *\tThis symbol, if defined, indicates that the getprotoent() routine is\n *\tavailable to look up protocols in some data base or another.\n */\n/*#define HAS_GETPROTOENT\t\t/ **/\n\n/* HAS_GETPGRP:\n *\tThis symbol, if defined, indicates that the getpgrp routine is\n *\tavailable to get the current process group.\n */\n/* USE_BSD_GETPGRP:\n *\tThis symbol, if defined, indicates that getpgrp needs one\n *\targuments whereas USG one needs none.\n */\n/*#define HAS_GETPGRP\t\t/ **/\n/*#define USE_BSD_GETPGRP\t/ **/\n\n/* HAS_GETPROTOBYNAME:\n *\tThis symbol, if defined, indicates that the getprotobyname()\n *\troutine is available to look up protocols by their name.\n */\n/* HAS_GETPROTOBYNUMBER:\n *\tThis symbol, if defined, indicates that the getprotobynumber()\n *\troutine is available to look up protocols by their number.\n */\n/*#define HAS_GETPROTOBYNAME\t\t/ **/\n/*#define HAS_GETPROTOBYNUMBER\t\t/ **/\n\n/* HAS_GETPWENT:\n *\tThis symbol, if defined, indicates that the getpwent routine is\n *\tavailable for sequential access of the passwd database.\n *\tIf this is not available, the older getpw() function may be available.\n */\n/*#define HAS_GETPWENT\t\t/ **/\n\n/* HAS_GETSERVENT:\n *\tThis symbol, if defined, indicates that the getservent() routine is\n *\tavailable to look up network services in some data base or another.\n */\n/*#define HAS_GETSERVENT\t\t/ **/\n\n/* HAS_GETSERVBYNAME:\n *\tThis symbol, if defined, indicates that the getservbyname()\n *\troutine is available to look up services by their name.\n */\n/* HAS_GETSERVBYPORT:\n *\tThis symbol, if defined, indicates that the getservbyport()\n *\troutine is available to look up services by their port.\n */\n/*#define HAS_GETSERVBYNAME\t\t/ **/\n/*#define HAS_GETSERVBYPORT\t\t/ **/\n\n/* HAS_HTONL:\n *\tThis symbol, if defined, indicates that the htonl() routine (and\n *\tfriends htons() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_HTONS:\n *\tThis symbol, if defined, indicates that the htons() routine (and\n *\tfriends htonl() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHL:\n *\tThis symbol, if defined, indicates that the ntohl() routine (and\n *\tfriends htonl() htons() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHS:\n *\tThis symbol, if defined, indicates that the ntohs() routine (and\n *\tfriends htonl() htons() ntohl()) are available to do network\n *\torder byte swapping.\n */\n/*#define HAS_HTONL\t\t/ **/\n/*#define HAS_HTONS\t\t/ **/\n/*#define HAS_NTOHL\t\t/ **/\n/*#define HAS_NTOHS\t\t/ **/\n\n/* HAS_LONG_DOUBLE:\n *\tThis symbol will be defined if the C compiler supports long\n *\tdoubles.\n */\n/* LONG_DOUBLESIZE:\n *\tThis symbol contains the size of a long double, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long doubles.  Note that this\n *\tis sizeof(long double), which may include unused bytes.\n */\n/* HAS_LDEXPL:\n *\tThis symbol, if defined, indicates that the ldexpl routine is\n *\tavailable to shift a long double floating-point number\n *\tby an integral power of 2.\n */\n/* LONG_DOUBLEKIND:\n *\tLONG_DOUBLEKIND will be one of\n *\tLONG_DOUBLE_IS_DOUBLE\n *\tLONG_DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_X86_80_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_X86_80_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_LE\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_BE\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_BE\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_LE\n *\tLONG_DOUBLE_IS_VAX_H_FLOAT\n *\tLONG_DOUBLE_IS_UNKNOWN_FORMAT\n *\tIt is only defined if the system supports long doubles.\n */\n/* LONG_DOUBLE_STYLE_IEEE:\n *\tThis symbol, if defined, indicates that the long double\n *\tis any of the IEEE 754 style long doubles:\n *\tLONG_DOUBLE_STYLE_IEEE_STD, LONG_DOUBLE_STYLE_IEEE_EXTENDED,\n *\tLONG_DOUBLE_STYLE_IEEE_DOUBLEDOUBLE.\n */\n/* LONG_DOUBLE_STYLE_IEEE_DOUBLEDOUBLE:\n *\tThis symbol, if defined, indicates that the long double is\n *\tthe 128-bit double-double.\n */\n/* LONG_DOUBLE_STYLE_IEEE_EXTENDED:\n *\tThis symbol, if defined, indicates that the long double is\n *\tthe 80-bit IEEE 754. Note that despite the 'extended' this\n *\tis less than the 'std', since this is an extension of\n *\tthe double precision.\n */\n/* LONG_DOUBLE_STYLE_IEEE_STD:\n *\tThis symbol, if defined, indicates that the long double is\n *\tthe 128-bit IEEE 754.\n */\n/* LONG_DOUBLE_STYLE_VAX:\n *\tThis symbol, if defined, indicates that the long double is\n *\tthe 128-bit VAX format H.\n */\n/*#define  HAS_LDEXPL\t\t/ **/\n/*#define HAS_LONG_DOUBLE\t\t/ **/\n#ifdef HAS_LONG_DOUBLE\n#define LONG_DOUBLESIZE 8\t\t/**/\n#define LONG_DOUBLEKIND 0\t\t/**/\n#define LONG_DOUBLE_IS_DOUBLE\t\t\t\t0\n#define LONG_DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\t1\n#define LONG_DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\t2\n#define LONG_DOUBLE_IS_X86_80_BIT_LITTLE_ENDIAN\t\t3\n#define LONG_DOUBLE_IS_X86_80_BIT_BIG_ENDIAN\t\t4\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_LE\t5\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_BE\t6\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_BE\t7\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_LE\t8\n#define LONG_DOUBLE_IS_VAX_H_FLOAT\t\t\t9\n#define LONG_DOUBLE_IS_UNKNOWN_FORMAT\t\t\t-1\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LITTLE_ENDIAN\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_LE /* back-compat */\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BIG_ENDIAN\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_BE /* back-compat */\n#undef LONG_DOUBLE_STYLE_IEEE\n#undef LONG_DOUBLE_STYLE_IEEE_DOUBLEDOUBLE\n#undef LONG_DOUBLE_STYLE_IEEE_EXTENDED\n#undef LONG_DOUBLE_STYLE_IEEE_STD\n#undef LONG_DOUBLE_STYLE_VAX\n#endif\n\n/* HAS_LONG_LONG:\n *\tThis symbol will be defined if the C compiler supports long long.\n */\n/* LONGLONGSIZE:\n *\tThis symbol contains the size of a long long, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long long.\n */\n/*#define HAS_LONG_LONG\t\t/ **/\n#ifdef HAS_LONG_LONG\n#define LONGLONGSIZE 8\t\t/**/\n#endif\n\n/* HAS_MKSTEMP:\n *\tThis symbol, if defined, indicates that the mkstemp routine is\n *\tavailable to exclusively create and open a uniquely named\n *\ttemporary file.\n */\n/*#define HAS_MKSTEMP\t\t/ **/\n\n/* HAS_MMAP:\n *\tThis symbol, if defined, indicates that the mmap system call is\n *\tavailable to map a file into memory.\n */\n/* Mmap_t:\n *\tThis symbol holds the return type of the mmap() system call\n *\t(and simultaneously the type of the first argument).\n *\tUsually set to 'void *' or 'caddr_t'.\n */\n/*#define HAS_MMAP\t\t/ **/\n#define Mmap_t void *\t/**/\n\n/* HAS_SETGRENT:\n *\tThis symbol, if defined, indicates that the setgrent routine is\n *\tavailable for initializing sequential access of the group database.\n */\n/*#define HAS_SETGRENT\t\t/ **/\n\n/* HAS_SETHOSTENT:\n *\tThis symbol, if defined, indicates that the sethostent() routine is\n *\tavailable.\n */\n/*#define HAS_SETHOSTENT\t\t/ **/\n\n/* HAS_SETNETENT:\n *\tThis symbol, if defined, indicates that the setnetent() routine is\n *\tavailable.\n */\n/*#define HAS_SETNETENT\t\t/ **/\n\n/* HAS_SETPROTOENT:\n *\tThis symbol, if defined, indicates that the setprotoent() routine is\n *\tavailable.\n */\n/*#define HAS_SETPROTOENT\t\t/ **/\n\n/* HAS_SETPGRP:\n *\tThis symbol, if defined, indicates that the setpgrp routine is\n *\tavailable to set the current process group.\n */\n/* USE_BSD_SETPGRP:\n *\tThis symbol, if defined, indicates that setpgrp needs two\n *\targuments whereas USG one needs none.  See also HAS_SETPGID\n *\tfor a POSIX interface.\n */\n/*#define HAS_SETPGRP\t\t/ **/\n/*#define USE_BSD_SETPGRP\t/ **/\n\n/* HAS_SETPWENT:\n *\tThis symbol, if defined, indicates that the setpwent routine is\n *\tavailable for initializing sequential access of the passwd database.\n */\n/*#define HAS_SETPWENT\t\t/ **/\n\n/* HAS_SETSERVENT:\n *\tThis symbol, if defined, indicates that the setservent() routine is\n *\tavailable.\n */\n/*#define HAS_SETSERVENT\t\t/ **/\n\n/* HAS_SETVBUF:\n *\tThis symbol, if defined, indicates that the setvbuf routine is\n *\tavailable to change buffering on an open stdio stream.\n *\tto a line-buffered mode.\n */\n/*#define HAS_SETVBUF\t\t/ **/\n\n/* HAS_SHM:\n *\tThis symbol, if defined, indicates that the entire shm*(2) library is\n *\tsupported.\n */\n/*#define HAS_SHM\t\t/ **/\n\n/* Shmat_t:\n *\tThis symbol holds the return type of the shmat() system call.\n *\tUsually set to 'void *' or 'char *'.\n */\n/* HAS_SHMAT_PROTOTYPE:\n *\tThis symbol, if defined, indicates that the sys/shm.h includes\n *\ta prototype for shmat().  Otherwise, it is up to the program to\n *\tguess one.  Shmat_t shmat(int, Shmat_t, int) is a good guess,\n *\tbut not always right so it should be emitted by the program only\n *\twhen HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.\n */\n#define Shmat_t void *\t/**/\n/*#define HAS_SHMAT_PROTOTYPE\t/ **/\n\n/* HAS_SOCKET:\n *\tThis symbol, if defined, indicates that the BSD socket interface is\n *\tsupported.\n */\n/* HAS_SOCKETPAIR:\n *\tThis symbol, if defined, indicates that the BSD socketpair() call is\n *\tsupported.\n */\n/* HAS_SOCKADDR_SA_LEN:\n *\tThis symbol, if defined, indicates that the struct sockaddr\n *\tstructure has a member called sa_len, indicating the length of\n *\tthe structure.\n */\n/* HAS_SOCKADDR_IN6:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct sockaddr_in6;\n */\n/* HAS_SIN6_SCOPE_ID:\n *\tThis symbol, if defined, indicates that the struct sockaddr_in6\n *\tstructure has a member called sin6_scope_id.\n */\n/* HAS_IP_MREQ:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ip_mreq;\n */\n/* HAS_IP_MREQ_SOURCE:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ip_mreq_source;\n */\n/* HAS_IPV6_MREQ:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ipv6_mreq;\n */\n/* HAS_IPV6_MREQ_SOURCE:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ipv6_mreq_source;\n */\n/*#define\tHAS_SOCKET\t\t/ **/\n/*#define\tHAS_SOCKETPAIR\t/ **/\n/*#define\tHAS_SOCKADDR_SA_LEN\t/ **/\n/*#define\tHAS_SOCKADDR_IN6\t/ **/\n/*#define\tHAS_SIN6_SCOPE_ID\t/ **/\n/*#define\tHAS_IP_MREQ\t/ **/\n/*#define\tHAS_IP_MREQ_SOURCE\t/ **/\n/*#define\tHAS_IPV6_MREQ\t/ **/\n/*#define\tHAS_IPV6_MREQ_SOURCE\t/ **/\n\n/* USE_STAT_BLOCKS:\n *\tThis symbol is defined if this system has a stat structure declaring\n *\tst_blksize and st_blocks.\n */\n#ifndef USE_STAT_BLOCKS\n/*#define USE_STAT_BLOCKS\t/ **/\n#endif\n\n/* HAS_SYS_ERRLIST:\n *\tThis symbol, if defined, indicates that the sys_errlist array is\n *\tavailable to translate error numbers to strings. The extern int\n *\tsys_nerr gives the size of that table.\n */\n/*#define HAS_SYS_ERRLIST\t/ **/\n\n/* HAS_STRTOUL:\n *\tThis symbol, if defined, indicates that the strtoul routine is\n *\tavailable to provide conversion of strings to unsigned long.\n */\n#define HAS_STRTOUL\t/**/\n\n/* HAS_UNION_SEMUN:\n *\tThis symbol, if defined, indicates that the union semun is\n *\tdefined by including <sys/sem.h>.  If not, the user code\n *\tprobably needs to define it as:\n *\tunion semun {\n *\t    int val;\n *\t    struct semid_ds *buf;\n *\t    unsigned short *array;\n *\t}\n */\n/* USE_SEMCTL_SEMUN:\n *\tThis symbol, if defined, indicates that union semun is\n *\tused for semctl IPC_STAT.\n */\n/* USE_SEMCTL_SEMID_DS:\n *\tThis symbol, if defined, indicates that struct semid_ds * is\n *\tused for semctl IPC_STAT.\n */\n/*#define HAS_UNION_SEMUN\t/ **/\n/*#define USE_SEMCTL_SEMUN\t/ **/\n/*#define USE_SEMCTL_SEMID_DS\t/ **/\n\n/* HAS_VFORK:\n *\tThis symbol, if defined, indicates that vfork() exists.\n */\n/*#define HAS_VFORK\t/ **/\n\n/* HAS_PSEUDOFORK:\n *\tThis symbol, if defined, indicates that an emulation of the\n *\tfork routine is available.\n */\n/*#define HAS_PSEUDOFORK\t/ **/\n\n/* Signal_t:\n *\tThis symbol's value is either \"void\" or \"int\", corresponding to the\n *\tappropriate return type of a signal handler.  Thus, you can declare\n *\ta signal handler using \"Signal_t (*handler)()\", and define the\n *\thandler using \"Signal_t handler(sig)\".\n */\n#define Signal_t int\t/* Signal handler's return type */\n\n/* I_DIRENT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <dirent.h>. Using this symbol also triggers the definition\n *\tof the Direntry_t define which ends up being 'struct dirent' or\n *\t'struct direct' depending on the availability of <dirent.h>.\n */\n/* DIRNAMLEN:\n *\tThis symbol, if defined, indicates to the C program that the length\n *\tof directory entry names is provided by a d_namlen field.  Otherwise\n *\tyou need to do strlen() on the d_name field.\n */\n/* Direntry_t:\n *\tThis symbol is set to 'struct direct' or 'struct dirent' depending on\n *\twhether dirent is available or not. You should use this pseudo type to\n *\tportably declare your directory entries.\n */\n#define I_DIRENT\t\t/**/\n/*#define DIRNAMLEN\t/ **/\n#define Direntry_t struct dirent\n\n/* I_EXECINFO:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <execinfo.h> for backtrace() support.\n */\n/*#define I_EXECINFO\t\t/ **/\n\n/* I_GRP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <grp.h>.\n */\n/* GRPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct group\n *\tin <grp.h> contains gr_passwd.\n */\n/*#define I_GRP\t\t/ **/\n/*#define GRPASSWD\t/ **/\n\n/* I_NDBM:\n *\tThis symbol, if defined, indicates that <ndbm.h> exists and should\n *\tbe included.\n */\n/* I_GDBMNDBM:\n *\tThis symbol, if defined, indicates that <gdbm/ndbm.h> exists and should\n *\tbe included.  This was the location of the ndbm.h compatibility file\n *\tin RedHat 7.1.\n */\n/* I_GDBM_NDBM:\n *\tThis symbol, if defined, indicates that <gdbm-ndbm.h> exists and should\n *\tbe included.  This is the location of the ndbm.h compatibility file\n *\tin Debian 4.0.\n */\n/* NDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/* GDBMNDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <gdbm/ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/* GDBM_NDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <gdbm-ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/*#define I_NDBM\t/ **/\n/*#define I_GDBMNDBM\t/ **/\n/*#define I_GDBM_NDBM\t/ **/\n/*#define NDBM_H_USES_PROTOTYPES\t/ **/\n/*#define GDBMNDBM_H_USES_PROTOTYPES\t/ **/\n/*#define GDBM_NDBM_H_USES_PROTOTYPES\t/ **/\n\n/* I_NETDB:\n *\tThis symbol, if defined, indicates that <netdb.h> exists and\n *\tshould be included.\n */\n/*#define I_NETDB\t\t/ **/\n\n/* I_NET_ERRNO:\n *\tThis symbol, if defined, indicates that <net/errno.h> exists and\n *\tshould be included.\n */\n/*#define I_NET_ERRNO\t\t/ **/\n\n/* I_PWD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pwd.h>.\n */\n/* PWQUOTA:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_quota.\n */\n/* PWAGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_age.\n */\n/* PWCHANGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_change.\n */\n/* PWCLASS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_class.\n */\n/* PWEXPIRE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_expire.\n */\n/* PWCOMMENT:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_comment.\n */\n/* PWGECOS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_gecos.\n */\n/* PWPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_passwd.\n */\n/*#define I_PWD\t\t/ **/\n/*#define PWQUOTA\t/ **/\n/*#define PWAGE\t/ **/\n/*#define PWCHANGE\t/ **/\n/*#define PWCLASS\t/ **/\n/*#define PWEXPIRE\t/ **/\n/*#define PWCOMMENT\t/ **/\n/*#define PWGECOS\t/ **/\n/*#define PWPASSWD\t/ **/\n\n/* I_SYSUIO:\n *\tThis symbol, if defined, indicates that <sys/uio.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUIO\t\t/ **/\n\n/* I_TERMIO:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<termio.h> rather than <sgtty.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/* I_TERMIOS:\n *\tThis symbol, if defined, indicates that the program should include\n *\tthe POSIX termios.h rather than sgtty.h or termio.h.\n *\tThere are also differences in the ioctl() calls that depend on the\n *\tvalue of this symbol.\n */\n/* I_SGTTY:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<sgtty.h> rather than <termio.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/*#define I_TERMIO\t\t/ **/\n/*#define I_TERMIOS\t\t/ **/\n/*#define I_SGTTY\t\t/ **/\n\n/* Free_t:\n *\tThis variable contains the return type of free().  It is usually\n *\tvoid, but occasionally int.\n */\n/* Malloc_t:\n *\tThis symbol is the type of pointer returned by malloc and realloc.\n */\n#define Malloc_t void *\t\t\t/**/\n#define Free_t void\t\t\t/**/\n\n/* PERL_MALLOC_WRAP:\n *\tThis symbol, if defined, indicates that we'd like malloc wrap checks.\n */\n/*#define PERL_MALLOC_WRAP\t\t/ **/\n\n/* MYMALLOC:\n *\tThis symbol, if defined, indicates that we're using our own malloc.\n */\n/*#define MYMALLOC\t\t\t/ **/\n\n/* SH_PATH:\n *\tThis symbol contains the full pathname to the shell used on this\n *\ton this system to execute Bourne shell scripts.  Usually, this will be\n *\t/bin/sh, though it's possible that some systems will have /bin/ksh,\n *\t/bin/pdksh, /bin/ash, /bin/bash, or even something such as\n *\tD:/bin/sh.exe.\n */\n#define SH_PATH \"/bin/sh\"  /**/\n\n/* SIG_NAME:\n *\tThis symbol contains a list of signal names in order of\n *\tsignal number. This is intended\n *\tto be used as a static array initialization, like this:\n *\t\tchar *sig_name[] = { SIG_NAME };\n *\tThe signals in the list are separated with commas, and each signal\n *\tis surrounded by double quotes. There is no leading SIG in the signal\n *\tname, i.e. SIGQUIT is known as \"QUIT\".\n *\tGaps in the signal numbers (up to NSIG) are filled in with NUMnn,\n *\tetc., where nn is the actual signal number (e.g. NUM37).\n *\tThe signal number for sig_name[i] is stored in sig_num[i].\n *\tThe last element is 0 to terminate the list with a NULL.  This\n *\tcorresponds to the 0 at the end of the sig_name_init list.\n *\tNote that this variable is initialized from the sig_name_init,\n *\tnot from sig_name (which is unused).\n */\n/* SIG_NUM:\n *\tThis symbol contains a list of signal numbers, in the same order as the\n *\tSIG_NAME list. It is suitable for static array initialization, as in:\n *\t\tint sig_num[] = { SIG_NUM };\n *\tThe signals in the list are separated with commas, and the indices\n *\twithin that list and the SIG_NAME list match, so it's easy to compute\n *\tthe signal name from a number or vice versa at the price of a small\n *\tdynamic linear lookup.\n *\tDuplicates are allowed, but are moved to the end of the list.\n *\tThe signal number corresponding to sig_name[i] is sig_number[i].\n *\tif (i < NSIG) then sig_number[i] == i.\n *\tThe last element is 0, corresponding to the 0 at the end of\n *\tthe sig_name_init list.\n *\tNote that this variable is initialized from the sig_num_init,\n *\tnot from sig_num (which is unused).\n */\n/* SIG_SIZE:\n *\tThis variable contains the number of elements of the SIG_NAME\n *\tand SIG_NUM arrays, excluding the final NULL entry.\n */\n#define SIG_NAME 0\t\t/**/\n#define SIG_NUM  0\t\t/**/\n#define SIG_SIZE 1\t\t\t/**/\n\n/* USE_CROSS_COMPILE:\n *\tThis symbol, if defined, indicates that Perl is being cross-compiled.\n */\n/* PERL_TARGETARCH:\n *\tThis symbol, if defined, indicates the target architecture\n *\tPerl has been cross-compiled to.  Undefined if not a cross-compile.\n */\n#ifndef USE_CROSS_COMPILE\n/*#define\tUSE_CROSS_COMPILE\t/ **/\n#define\tPERL_TARGETARCH\t\"\"\t/**/\n#endif\n\n/* PERL_USE_DEVEL:\n *\tThis symbol, if defined, indicates that Perl was configured with\n *\t-Dusedevel, to enable development features.  This should not be\n *\tdone for production builds.\n */\n/*#define\tPERL_USE_DEVEL\t\t/ **/\n\n/* HAS_ATOLF:\n *\tThis symbol, if defined, indicates that the atolf routine is\n *\tavailable to convert strings into long doubles.\n */\n/*#define HAS_ATOLF\t\t/ **/\n\n/* HAS_ATOLL:\n *\tThis symbol, if defined, indicates that the atoll routine is\n *\tavailable to convert strings into long longs.\n */\n/*#define HAS_ATOLL\t\t/ **/\n\n/* HAS__FWALK:\n *\tThis symbol, if defined, indicates that the _fwalk system call is\n *\tavailable to apply a function to all the file handles.\n */\n/*#define HAS__FWALK\t\t/ **/\n\n/* HAS_ACCEPT4:\n *\tThis symbol, if defined, indicates that the accept4 routine is\n *\tavailable to accept socket connections.\n */\n/*#define HAS_ACCEPT4\t/ **/\n\n/* HAS_ACOSH:\n *\tThis symbol, if defined, indicates that the acosh routine is\n *\tavailable to do the inverse hyperbolic cosine function.\n */\n/*#define HAS_ACOSH\t\t/ **/\n\n/* HAS_AINTL:\n *\tThis symbol, if defined, indicates that the aintl routine is\n *\tavailable.  If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_AINTL\t\t/ **/\n\n/* HAS_ASINH:\n *\tThis symbol, if defined, indicates that the asinh routine is\n *\tavailable to do the inverse hyperbolic sine function.\n */\n/*#define HAS_ASINH\t\t/ **/\n\n/* HAS_ATANH:\n *\tThis symbol, if defined, indicates that the atanh routine is\n *\tavailable to do the inverse hyperbolic tangent function.\n */\n/*#define HAS_ATANH\t\t/ **/\n\n/* HAS_BUILTIN_CHOOSE_EXPR:\n *\tCan we handle GCC builtin for compile-time ternary-like expressions\n */\n/* HAS_BUILTIN_EXPECT:\n *\tCan we handle GCC builtin for telling that certain values are more\n *\tlikely\n */\n/*#define HAS_BUILTIN_EXPECT\t/ **/\n/*#define HAS_BUILTIN_CHOOSE_EXPR\t/ **/\n\n/* HAS_BUILTIN_ADD_OVERFLOW:\n *\tThis symbol, if defined, indicates that the compiler supports\n *\t__builtin_add_overflow for adding integers with overflow checks.\n */\n/* HAS_BUILTIN_SUB_OVERFLOW:\n *\tThis symbol, if defined, indicates that the compiler supports\n *\t__builtin_sub_overflow for subtracting integers with overflow checks.\n */\n/* HAS_BUILTIN_MUL_OVERFLOW:\n *\tThis symbol, if defined, indicates that the compiler supports\n *\t__builtin_mul_overflow for multiplying integers with overflow checks.\n */\n/*#define HAS_BUILTIN_ADD_OVERFLOW\t/ **/\n/*#define HAS_BUILTIN_SUB_OVERFLOW\t/ **/\n/*#define HAS_BUILTIN_MUL_OVERFLOW\t/ **/\n\n/* HAS_C99_VARIADIC_MACROS:\n *\tIf defined, the compiler supports C99 variadic macros.\n */\n/*#define\tHAS_C99_VARIADIC_MACROS\t/ **/\n\n/* HAS_CLASS:\n *\tThis symbol, if defined, indicates that the class routine is\n *\tavailable to classify doubles.  Available for example in AIX.\n *\tThe returned values are defined in <float.h> and are:\n *\n *\tFP_PLUS_NORM\tPositive normalized, nonzero\n *\tFP_MINUS_NORM\tNegative normalized, nonzero\n *\tFP_PLUS_DENORM\tPositive denormalized, nonzero\n *\tFP_MINUS_DENORM\tNegative denormalized, nonzero\n *\tFP_PLUS_ZERO\t+0.0\n *\tFP_MINUS_ZERO\t-0.0\n *\tFP_PLUS_INF\t+INF\n *\tFP_MINUS_INF\t-INF\n *\tFP_NANS\t\tSignaling Not a Number (NaNS)\n *\tFP_NANQ\t\tQuiet Not a Number (NaNQ)\n */\n/*#define HAS_CLASS\t\t/ **/\n\n/* HAS_CLEARENV:\n *\tThis symbol, if defined, indicates that the clearenv () routine is\n *\tavailable for use.\n */\n/*#define HAS_CLEARENV\t\t/ **/\n\n/* HAS_STRUCT_CMSGHDR:\n *\tThis symbol, if defined, indicates that the struct cmsghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_CMSGHDR\t/ **/\n\n/* HAS_COPYSIGN:\n *\tThis symbol, if defined, indicates that the copysign routine is\n *\tavailable to do the copysign function.\n */\n/*#define HAS_COPYSIGN\t\t/ **/\n\n/* HAS_COPYSIGNL:\n *\tThis symbol, if defined, indicates that the copysignl routine is\n *\tavailable.  If aintl is also present we can emulate modfl.\n */\n/*#define HAS_COPYSIGNL\t\t/ **/\n\n/* USE_CPLUSPLUS:\n *\tThis symbol, if defined, indicates that a C++ compiler was\n *\tused to compiled Perl and will be used to compile extensions.\n */\n/*#define USE_CPLUSPLUS\t\t/ **/\n\n/* HAS_DBMINIT_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the dbminit() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int dbminit(char *);\n */\n/*#define\tHAS_DBMINIT_PROTO\t/ **/\n\n/* HAS_DIR_DD_FD:\n *\tThis symbol, if defined, indicates that the the DIR* dirstream\n *\tstructure contains a member variable named dd_fd.\n */\n/*#define HAS_DIR_DD_FD\t\t/ **/\n\n/* HAS_DIRFD:\n *\tThis manifest constant lets the C program know that dirfd\n *\tis available.\n */\n/*#define HAS_DIRFD\t\t/ **/\n\n/* DLSYM_NEEDS_UNDERSCORE:\n *\tThis symbol, if defined, indicates that we need to prepend an\n *\tunderscore to the symbol name before calling dlsym().  This only\n *\tmakes sense if you *have* dlsym, which we will presume is the\n *\tcase if you're using dl_dlopen.xs.\n */\n/*#define\tDLSYM_NEEDS_UNDERSCORE\t/ **/\n\n/* HAS_DUP3:\n *\tThis symbol, if defined, indicates that the dup3 routine is\n *\tavailable to duplicate file descriptors.\n */\n/*#define HAS_DUP3\t/ **/\n\n/* HAS_ERF:\n *\tThis symbol, if defined, indicates that the erf routine is\n *\tavailable to do the error function.\n */\n/*#define HAS_ERF\t\t/ **/\n\n/* HAS_ERFC:\n *\tThis symbol, if defined, indicates that the erfc routine is\n *\tavailable to do the complementary error function.\n */\n/*#define HAS_ERFC\t\t/ **/\n\n/* HAS_EXP2:\n *\tThis symbol, if defined, indicates that the exp2 routine is\n *\tavailable to do the 2**x function.\n */\n/*#define HAS_EXP2\t\t/ **/\n\n/* HAS_EXPM1:\n *\tThis symbol, if defined, indicates that the expm1 routine is\n *\tavailable to do the exp(x) - 1 when x is near 1 function.\n */\n/*#define HAS_EXPM1\t\t/ **/\n\n/* HAS_FAST_STDIO:\n *\tThis symbol, if defined, indicates that the \"fast stdio\"\n *\tis available to manipulate the stdio buffers directly.\n */\n/*#define HAS_FAST_STDIO\t\t/ **/\n\n/* HAS_FCHDIR:\n *\tThis symbol, if defined, indicates that the fchdir routine is\n *\tavailable to change directory using a file descriptor.\n */\n/*#define HAS_FCHDIR\t\t/ **/\n\n/* FCNTL_CAN_LOCK:\n *\tThis symbol, if defined, indicates that fcntl() can be used\n *\tfor file locking.  Normally on Unix systems this is defined.\n *\tIt may be undefined on VMS.\n */\n/*#define FCNTL_CAN_LOCK\t\t/ **/\n\n/* HAS_FDCLOSE:\n *\tThis symbol, if defined, indicates that the fdclose routine is\n *\tavailable to free a FILE structure without closing the underlying\n *\tfile descriptor.  This function appeared in FreeBSD 10.2.\n */\n/*#define HAS_FDCLOSE\t\t/ **/\n\n/* HAS_FDIM:\n *\tThis symbol, if defined, indicates that the fdim routine is\n *\tavailable to do the positive difference function.\n */\n/*#define HAS_FDIM\t\t/ **/\n\n/* HAS_FEGETROUND:\n *\tThis symbol, if defined, indicates that the fegetround routine is\n *\tavailable to return the macro corresponding to the current rounding\n *\tmode.\n */\n/*#define HAS_FEGETROUND\t/ **/\n\n/* HAS_FINITE:\n *\tThis symbol, if defined, indicates that the finite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_FINITE\t\t/ **/\n\n/* HAS_FINITEL:\n *\tThis symbol, if defined, indicates that the finitel routine is\n *\tavailable to check whether a long double is finite\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_FINITEL\t\t/ **/\n\n/* HAS_FLOCK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the flock() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int flock(int, int);\n */\n/*#define\tHAS_FLOCK_PROTO\t/ **/\n\n/* HAS_FMA:\n *\tThis symbol, if defined, indicates that the fma routine is\n *\tavailable to do the multiply-add function.\n */\n/*#define HAS_FMA\t\t/ **/\n\n/* HAS_FMAX:\n *\tThis symbol, if defined, indicates that the fmax routine is\n *\tavailable to do the maximum function.\n */\n/*#define HAS_FMAX\t\t/ **/\n\n/* HAS_FMIN:\n *\tThis symbol, if defined, indicates that the fmin routine is\n *\tavailable to do the minimum function.\n */\n/*#define HAS_FMIN\t\t/ **/\n\n/* HAS_FP_CLASS:\n *\tThis symbol, if defined, indicates that the fp_class routine is\n *\tavailable to classify doubles.  Available for example in Digital UNIX.\n *\tThe returned values are defined in <math.h> and are:\n *\n *\tFP_SNAN           Signaling NaN (Not-a-Number)\n *\tFP_QNAN           Quiet NaN (Not-a-Number)\n *\tFP_POS_INF        +infinity\n *\tFP_NEG_INF        -infinity\n *\tFP_POS_NORM       Positive normalized\n *\tFP_NEG_NORM       Negative normalized\n *\tFP_POS_DENORM     Positive denormalized\n *\tFP_NEG_DENORM     Negative denormalized\n *\tFP_POS_ZERO       +0.0 (positive zero)\n *\tFP_NEG_ZERO       -0.0 (negative zero)\n */\n/*#define HAS_FP_CLASS\t\t/ **/\n\n/* HAS_FP_CLASSL:\n *\tThis symbol, if defined, indicates that the fp_classl routine is\n *\tavailable to classify long doubles.  Available for example in\n *\tDigital UNIX.  See for possible values HAS_FP_CLASS.\n */\n/*#define HAS_FP_CLASSL\t\t/ **/\n\n/* HAS_FPCLASS:\n *\tThis symbol, if defined, indicates that the fpclass routine is\n *\tavailable to classify doubles.  Available for example in Solaris/SVR4.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASS\t\t/ **/\n\n/* HAS_FPCLASSIFY:\n *\tThis symbol, if defined, indicates that the fpclassify routine is\n *\tavailable to classify doubles.  Available for example in HP-UX.\n *\tThe returned values are defined in <math.h> and are\n *\n *\t  FP_NORMAL     Normalized\n *\t  FP_ZERO       Zero\n *\t  FP_INFINITE   Infinity\n *\t  FP_SUBNORMAL  Denormalized\n *\t  FP_NAN        NaN\n *\n */\n/* HAS_FP_CLASSIFY:\n *\tThis symbol, if defined, indicates that the fp_classify routine is\n *\tavailable to classify doubles. The values are defined in <math.h>\n *\n *\t  FP_NORMAL     Normalized\n *\t  FP_ZERO       Zero\n *\t  FP_INFINITE   Infinity\n *\t  FP_SUBNORMAL  Denormalized\n *\t  FP_NAN        NaN\n *\n */\n/*#define\tHAS_FPCLASSIFY\t\t/ **/\n/*#define\tHAS_FP_CLASSIFY\t\t/ **/\n\n/* HAS_FPCLASSL:\n *\tThis symbol, if defined, indicates that the fpclassl routine is\n *\tavailable to classify long doubles.  Available for example in IRIX.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASSL\t\t/ **/\n\n/* HAS_FPGETROUND:\n *\tThis symbol, if defined, indicates that the fpgetround routine is\n *\tavailable to get the floating point rounding mode.\n */\n/*#define HAS_FPGETROUND\t\t/ **/\n\n/* HAS_FPOS64_T:\n *\tThis symbol will be defined if the C compiler supports fpos64_t.\n */\n/*#define\tHAS_FPOS64_T\t/ **/\n\n/* HAS_FREXPL:\n *\tThis symbol, if defined, indicates that the frexpl routine is\n *\tavailable to break a long double floating-point number into\n *\ta normalized fraction and an integral power of 2.\n */\n/*#define HAS_FREXPL\t\t/ **/\n\n/* HAS_STRUCT_FS_DATA:\n *\tThis symbol, if defined, indicates that the struct fs_data\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_FS_DATA\t/ **/\n\n/* HAS_FCHMODAT:\n *\tThis symbol is defined if the fchmodat() routine is available.\n */\n/* HAS_LINKAT:\n *\tThis symbol is defined if the linkat() routine is available.\n */\n/* HAS_OPENAT:\n *\tThis symbol is defined if the openat() routine is available.\n */\n/* HAS_RENAMEAT:\n *\tThis symbol is defined if the renameat() routine is available.\n */\n/* HAS_UNLINKAT:\n *\tThis symbol is defined if the unlinkat() routine is available.\n */\n/*#define\tHAS_FCHMODAT\t/ **/\n/*#define\tHAS_LINKAT\t/ **/\n/*#define\tHAS_OPENAT\t/ **/\n/*#define\tHAS_RENAMEAT\t/ **/\n/*#define\tHAS_UNLINKAT\t/ **/\n\n/* HAS_FSEEKO:\n *\tThis symbol, if defined, indicates that the fseeko routine is\n *\tavailable to fseek beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FSEEKO\t\t/ **/\n\n/* HAS_FSTATFS:\n *\tThis symbol, if defined, indicates that the fstatfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATFS\t\t/ **/\n\n/* HAS_FSYNC:\n *\tThis symbol, if defined, indicates that the fsync routine is\n *\tavailable to write a file's modified data and attributes to\n *\tpermanent storage.\n */\n/*#define HAS_FSYNC\t\t/ **/\n\n/* HAS_FTELLO:\n *\tThis symbol, if defined, indicates that the ftello routine is\n *\tavailable to ftell beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FTELLO\t\t/ **/\n\n/* HAS_FUTIMES:\n *\tThis symbol, if defined, indicates that the futimes routine is\n *\tavailable to change file descriptor time stamps with struct timevals.\n */\n/*#define HAS_FUTIMES\t\t/ **/\n\n/* HAS_GAI_STRERROR:\n *\tThis symbol, if defined, indicates that the gai_strerror routine\n *\tis available to translate error codes returned by getaddrinfo()\n *\tinto human readable strings.\n */\n/*#define HAS_GAI_STRERROR\t/ **/\n\n/* HAS_GETADDRINFO:\n *\tThis symbol, if defined, indicates that the getaddrinfo() function\n *\tis available for use.\n */\n/*#define HAS_GETADDRINFO\t\t/ **/\n\n/* HAS_GETCWD:\n *\tThis symbol, if defined, indicates that the getcwd routine is\n *\tavailable to get the current working directory.\n */\n/*#define HAS_GETCWD\t\t/ **/\n\n/* HAS_GETESPWNAM:\n *\tThis symbol, if defined, indicates that the getespwnam system call is\n *\tavailable to retrieve enhanced (shadow) password entries by name.\n */\n/*#define HAS_GETESPWNAM\t\t/ **/\n\n/* HAS_GETFSSTAT:\n *\tThis symbol, if defined, indicates that the getfsstat routine is\n *\tavailable to stat filesystems in bulk.\n */\n/*#define HAS_GETFSSTAT\t\t/ **/\n\n/* HAS_GETITIMER:\n *\tThis symbol, if defined, indicates that the getitimer routine is\n *\tavailable to return interval timers.\n */\n/*#define HAS_GETITIMER\t\t/ **/\n\n/* HAS_GETMNT:\n *\tThis symbol, if defined, indicates that the getmnt routine is\n *\tavailable to get filesystem mount info by filename.\n */\n/*#define HAS_GETMNT\t\t/ **/\n\n/* HAS_GETMNTENT:\n *\tThis symbol, if defined, indicates that the getmntent routine is\n *\tavailable to iterate through mounted file systems to get their info.\n */\n/*#define HAS_GETMNTENT\t\t/ **/\n\n/* HAS_GETNAMEINFO:\n *\tThis symbol, if defined, indicates that the getnameinfo() function\n *\tis available for use.\n */\n/*#define HAS_GETNAMEINFO\t\t/ **/\n\n/* HAS_GETPRPWNAM:\n *\tThis symbol, if defined, indicates that the getprpwnam system call is\n *\tavailable to retrieve protected (shadow) password entries by name.\n */\n/*#define HAS_GETPRPWNAM\t\t/ **/\n\n/* HAS_GETSPNAM:\n *\tThis symbol, if defined, indicates that the getspnam system call is\n *\tavailable to retrieve SysV shadow password entries by name.\n */\n/*#define HAS_GETSPNAM\t\t/ **/\n\n/* HAS_HASMNTOPT:\n *\tThis symbol, if defined, indicates that the hasmntopt routine is\n *\tavailable to query the mount options of file systems.\n */\n/*#define HAS_HASMNTOPT\t\t/ **/\n\n/* HAS_HYPOT:\n *\tThis symbol, if defined, indicates that the hypot routine is\n *\tavailable to do the hypotenuse function.\n */\n/*#define HAS_HYPOT\t\t/ **/\n\n/* HAS_ILOGB:\n *\tThis symbol, if defined, indicates that the ilogb routine is\n *\tavailable to get integer exponent of a floating-point value.\n */\n/*#define HAS_ILOGB\t\t/ **/\n\n/* HAS_ILOGBL:\n *\tThis symbol, if defined, indicates that the ilogbl routine is\n *\tavailable.  If scalbnl is also present we can emulate frexpl.\n */\n/*#define HAS_ILOGBL\t\t/ **/\n\n/* HAS_INETNTOP:\n *\tThis symbol, if defined, indicates that the inet_ntop() function\n *\tis available to parse IPv4 and IPv6 strings.\n */\n/*#define HAS_INETNTOP\t\t/ **/\n\n/* HAS_INETPTON:\n *\tThis symbol, if defined, indicates that the inet_pton() function\n *\tis available to parse IPv4 and IPv6 strings.\n */\n/*#define HAS_INETPTON\t\t/ **/\n\n/* HAS_INT64_T:\n *\tThis symbol will defined if the C compiler supports int64_t.\n *\tUsually the <inttypes.h> needs to be included, but sometimes\n *\t<sys/types.h> is enough.\n */\n/*#define     HAS_INT64_T               / **/\n\n/* HAS_ISBLANK:\n *\tThis manifest constant lets the C program know that isblank\n *\tis available.\n */\n/*#define HAS_ISBLANK\t\t/ **/\n\n/* HAS_ISFINITE:\n *\tThis symbol, if defined, indicates that the isfinite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_ISFINITE\t\t/ **/\n\n/* HAS_ISFINITEL:\n *\tThis symbol, if defined, indicates that the isfinitel routine is\n *\tavailable to check whether a long double is finite.\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_ISFINITEL\t\t/ **/\n\n/* HAS_ISINF:\n *\tThis symbol, if defined, indicates that the isinf routine is\n *\tavailable to check whether a double is an infinity.\n */\n/*#define HAS_ISINF\t\t/ **/\n\n/* HAS_ISINFL:\n *\tThis symbol, if defined, indicates that the isinfl routine is\n *\tavailable to check whether a long double is an infinity.\n */\n/*#define HAS_ISINFL\t\t/ **/\n\n/* HAS_ISLESS:\n *\tThis symbol, if defined, indicates that the isless routine is\n *\tavailable to do the isless function.\n */\n/*#define HAS_ISLESS\t\t/ **/\n\n/* HAS_ISNAN:\n *\tThis symbol, if defined, indicates that the isnan routine is\n *\tavailable to check whether a double is a NaN.\n */\n/*#define HAS_ISNAN\t\t/ **/\n\n/* HAS_ISNANL:\n *\tThis symbol, if defined, indicates that the isnanl routine is\n *\tavailable to check whether a long double is a NaN.\n */\n/*#define HAS_ISNANL\t\t/ **/\n\n/* HAS_ISNORMAL:\n *\tThis symbol, if defined, indicates that the isnormal routine is\n *\tavailable to check whether a double is normal (non-zero normalized).\n */\n/*#define HAS_ISNORMAL\t\t/ **/\n\n/* HAS_J0:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tj0() function is available for Bessel functions of the first\n *\tkind of the order zero, for doubles.\n */\n/* HAS_J0L:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tj0l() function is available for Bessel functions of the first\n *\tkind of the order zero, for long doubles.\n */\n/*#define\tHAS_J0\t\t/ **/\n/*#define\tHAS_J0L\t\t/ **/\n\n/* HAS_LC_MONETARY_2008:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable and has the additional members added in POSIX 1003.1-2008.\n */\n/*#define HAS_LC_MONETARY_2008\t\t/ **/\n\n/* HAS_LDBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol LDBL_DIG, which is the number\n *\tof significant digits in a long double precision number. Unlike\n *\tfor DBL_DIG, there's no good guess for LDBL_DIG if it is undefined.\n */\n/*#define HAS_LDBL_DIG\t/ * */\n\n/* HAS_LGAMMA:\n *\tThis symbol, if defined, indicates that the lgamma routine is\n *\tavailable to do the log gamma function.  See also HAS_TGAMMA and\n *\tHAS_LGAMMA_R.\n */\n/*#define HAS_LGAMMA\t\t/ **/\n\n/* HAS_LGAMMA_R:\n *\tThis symbol, if defined, indicates that the lgamma_r routine is\n *\tavailable to do the log gamma function without using the global\n *\tsigngam variable.\n */\n/*#define HAS_LGAMMA_R\t\t/ **/\n\n/* LIBM_LIB_VERSION:\n *\tThis symbol, if defined, indicates that libm exports _LIB_VERSION\n *\tand that math.h defines the enum to manipulate it.\n */\n/*#define LIBM_LIB_VERSION\t\t/ **/\n\n/* HAS_LLRINT:\n *\tThis symbol, if defined, indicates that the llrint routine is\n *\tavailable to return the long long value closest to a double\n *\t(according to the current rounding mode).\n */\n/*#define HAS_LLRINT\t\t/ **/\n\n/* HAS_LLRINTL:\n *\tThis symbol, if defined, indicates that the llrintl routine is\n *\tavailable to return the long long value closest to a long double\n *\t(according to the current rounding mode).\n */\n/*#define HAS_LLRINTL\t\t/ **/\n\n/* HAS_LLROUND:\n *\tThis symbol, if defined, indicates that the llround routine is\n *\tavailable to return the nearest long long value.\n */\n/*#define HAS_LLROUND\t\t/ **/\n\n/* HAS_LLROUNDL:\n *\tThis symbol, if defined, indicates that the llroundl routine is\n *\tavailable to return the nearest long long value away from zero of\n *\tthe long double argument value.\n */\n/*#define HAS_LLROUNDL\t\t/ **/\n\n/* HAS_LOG1P:\n *\tThis symbol, if defined, indicates that the log1p routine is\n *\tavailable to do the logarithm of 1 plus argument function.\n */\n/*#define HAS_LOG1P\t\t/ **/\n\n/* HAS_LOG2:\n *\tThis symbol, if defined, indicates that the log2 routine is\n *\tavailable to do the log2 function.\n */\n/*#define HAS_LOG2\t\t/ **/\n\n/* HAS_LOGB:\n *\tThis symbol, if defined, indicates that the logb routine is\n *\tavailable to do the logb function.\n */\n/*#define HAS_LOGB\t\t/ **/\n\n/* HAS_LRINT:\n *\tThis symbol, if defined, indicates that the lrint routine is\n *\tavailable to return the integral value closest to a double\n *\t(according to the current rounding mode).\n */\n/*#define HAS_LRINT\t\t/ **/\n\n/* HAS_LRINTL:\n *\tThis symbol, if defined, indicates that the lrintl routine is\n *\tavailable to return the integral value closest to a long double\n *\t(according to the current rounding mode).\n */\n/*#define HAS_LRINTL\t\t/ **/\n\n/* HAS_LROUND:\n *\tThis symbol, if defined, indicates that the lround routine is\n *\tavailable to return the nearest integral value.\n */\n/*#define HAS_LROUND\t\t/ **/\n\n/* HAS_LROUNDL:\n *\tThis symbol, if defined, indicates that the lroundl routine is\n *\tavailable to return the nearest integral value away from zero of\n *\tthe long double argument value.\n */\n/*#define HAS_LROUNDL\t\t/ **/\n\n/* HAS_MADVISE:\n *\tThis symbol, if defined, indicates that the madvise system call is\n *\tavailable to map a file into memory.\n */\n/*#define HAS_MADVISE\t\t/ **/\n\n/* HAS_MALLOC_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_size\n *\troutine is available for use.\n */\n/*#define HAS_MALLOC_SIZE\t\t/ **/\n\n/* HAS_MALLOC_GOOD_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_good_size\n *\troutine is available for use.\n */\n/*#define HAS_MALLOC_GOOD_SIZE\t/ **/\n\n/* HAS_MEMMEM:\n *\tThis symbol, if defined, indicates that the memmem routine is\n *\tavailable to return a pointer to the start of the first occurance\n *\tof a substring in a memory area (or NULL if not found).\n *\tIn glibc, memmem is a GNU extension.  The function is visible in\n *\tlibc, but the prototype is only visible if _GNU_SOURCE is #defined.\n *\tThus we only define this if both the prototype and symbol are found.\n */\n/*#define HAS_MEMMEM\t\t/ **/\n\n/* HAS_MEMRCHR:\n *\tThis symbol, if defined, indicates that the memrchr routine is\n *\tavailable to return a pointer to the last occurrence of a byte in\n *\ta memory area (or NULL if not found).\n */\n/*#define HAS_MEMRCHR\t\t/ **/\n\n/* HAS_MKDTEMP:\n *\tThis symbol, if defined, indicates that the mkdtemp routine is\n *\tavailable to exclusively create a uniquely named temporary directory.\n */\n/*#define HAS_MKDTEMP\t\t/ **/\n\n/* HAS_MKOSTEMP:\n *\tThis symbol, if defined, indicates that the mkostemp routine is\n *\tavailable to exclusively create and open a uniquely named (with a\n *\tsuffix) temporary file.\n */\n/*#define HAS_MKOSTEMP\t/ **/\n\n/* HAS_MKSTEMPS:\n *\tThis symbol, if defined, indicates that the mkstemps routine is\n *\tavailable to exclusively create and open a uniquely named\n *\t(with a suffix) temporary file.\n */\n/*#define HAS_MKSTEMPS\t\t/ **/\n\n/* HAS_MODFL:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tavailable to split a long double x into a fractional part f and\n *\tan integer part i such that |f| < 1.0 and (f + i) = x.\n */\n/* HAS_MODFL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the modfl() function.  Otherwise, it is up\n *\tto the program to supply one.\n */\n/*#define HAS_MODFL\t\t/ **/\n/*#define HAS_MODFL_PROTO\t\t/ **/\n\n/* HAS_MPROTECT:\n *\tThis symbol, if defined, indicates that the mprotect system call is\n *\tavailable to modify the access protection of a memory mapped file.\n */\n/*#define HAS_MPROTECT\t\t/ **/\n\n/* HAS_STRUCT_MSGHDR:\n *\tThis symbol, if defined, indicates that the struct msghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_MSGHDR\t/ **/\n\n/* HAS_NAN:\n *\tThis symbol, if defined, indicates that the nan routine is\n *\tavailable to generate NaN.\n */\n/*#define HAS_NAN\t\t/ **/\n\n/* HAS_NANOSLEEP:\n *\tThis symbol, if defined, indicates that the nanosleep\n *\tsystem call is available to sleep with 1E-9 sec accuracy.\n */\n/*#define HAS_NANOSLEEP\t\t/ **/\n\n/* HAS_NEARBYINT:\n *\tThis symbol, if defined, indicates that the nearbyint routine is\n *\tavailable to return the integral value closest to (according to\n *\tthe current rounding mode) to x.\n */\n/*#define HAS_NEARBYINT\t\t/ **/\n\n/* HAS_NEWLOCALE:\n *\tThis symbol, if defined, indicates that the newlocale routine is\n *\tavailable to return a new locale object or modify an existing\n *\tlocale object.\n */\n/* HAS_FREELOCALE:\n *\tThis symbol, if defined, indicates that the freelocale routine is\n *\tavailable to deallocates the resources associated with a locale object.\n */\n/* HAS_USELOCALE:\n *\tThis symbol, if defined, indicates that the uselocale routine is\n *\tavailable to set the current locale for the calling thread.\n */\n/* HAS_DUPLOCALE:\n *\tThis symbol, if defined, indicates that the duplocale routine is\n *\tavailable to duplicate a locale object.\n */\n/* HAS_QUERYLOCALE:\n *\tThis symbol, if defined, indicates that the querylocale routine is\n *\tavailable to return the name of the locale for a category mask.\n */\n/* I_XLOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <xlocale.h> to get uselocale() and its friends.\n */\n/*#define\tHAS_NEWLOCALE\t/ **/\n/*#define\tHAS_FREELOCALE\t/ **/\n/*#define\tHAS_USELOCALE\t/ **/\n/*#define\tHAS_DUPLOCALE\t/ **/\n/*#define\tHAS_QUERYLOCALE\t/ **/\n/*#define\tI_XLOCALE               / **/\n\n/* HAS_NEXTAFTER:\n *\tThis symbol, if defined, indicates that the nextafter routine is\n *\tavailable to return the next machine representable double from\n *\tx in direction y.\n */\n/*#define HAS_NEXTAFTER\t\t/ **/\n\n/* HAS_NEXTTOWARD:\n *\tThis symbol, if defined, indicates that the nexttoward routine is\n *\tavailable to return the next machine representable long double from\n *\tx in direction y.\n */\n/*#define HAS_NEXTTOWARD\t\t/ **/\n\n/* HAS_NL_LANGINFO:\n *\tThis symbol, if defined, indicates that the nl_langinfo routine is\n *\tavailable to return local data.  You will also need <langinfo.h>\n *\tand therefore I_LANGINFO.\n */\n/*#define HAS_NL_LANGINFO\t\t/ **/\n\n/* HAS_OFF64_T:\n *\tThis symbol will be defined if the C compiler supports off64_t.\n */\n/*#define\tHAS_OFF64_T\t\t/ **/\n\n/* HAS_PIPE2:\n *\tThis symbol, if defined, indicates that the pipe2 routine is\n *\tavailable to create an inter-process channel.\n */\n/*#define HAS_PIPE2\t\t/ **/\n\n/* HAS_PRCTL:\n *\tThis symbol, if defined, indicates that the prctl routine is\n *\tavailable to set process title.\n *\tNote that there are at least two prctl variants: Linux and Irix.\n *\tWhile they are somewhat similar, they are incompatible.\n */\n/* HAS_PRCTL_SET_NAME:\n *\tThis symbol, if defined, indicates that the prctl routine is\n *\tavailable to set process title and supports PR_SET_NAME.\n */\n/*#define HAS_PRCTL\t\t/ **/\n/*#define HAS_PRCTL_SET_NAME\t\t/ **/\n\n/* HAS_PROCSELFEXE:\n *\tThis symbol is defined if PROCSELFEXE_PATH is a symlink\n *\tto the absolute pathname of the executing program.\n */\n/* PROCSELFEXE_PATH:\n *\tIf HAS_PROCSELFEXE is defined this symbol is the filename\n *\tof the symbolic link pointing to the absolute pathname of\n *\tthe executing program.\n */\n/*#define HAS_PROCSELFEXE\t/ **/\n#if defined(HAS_PROCSELFEXE) && !defined(PROCSELFEXE_PATH)\n#define PROCSELFEXE_PATH\t\t/**/\n#endif\n\n/* HAS_PTHREAD_ATTR_SETSCOPE:\n *\tThis symbol, if defined, indicates that the pthread_attr_setscope\n *\tsystem call is available to set the contention scope attribute of\n *\ta thread attribute object.\n */\n/*#define HAS_PTHREAD_ATTR_SETSCOPE\t\t/ **/\n\n/* HAS_PTRDIFF_T:\n *\tThis symbol will be defined if the C compiler supports ptrdiff_t.\n */\n#define\tHAS_PTRDIFF_T\t\t/**/\n\n/* HAS_READV:\n *\tThis symbol, if defined, indicates that the readv routine is\n *\tavailable to do gather reads.  You will also need <sys/uio.h>\n *\tand there I_SYSUIO.\n */\n/*#define HAS_READV\t\t/ **/\n\n/* HAS_RECVMSG:\n *\tThis symbol, if defined, indicates that the recvmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_RECVMSG\t\t/ **/\n\n/* HAS_REMAINDER:\n *\tThis symbol, if defined, indicates that the remainder routine is\n *\tavailable to return the floating-point remainder.\n */\n/*#define HAS_REMAINDER\t\t/ **/\n\n/* HAS_REMQUO:\n *\tThis symbol, if defined, indicates that the remquo routine is\n *\tavailable to return the remainder and part of quotient.\n */\n/*#define HAS_REMQUO\t\t/ **/\n\n/* HAS_RINT:\n *\tThis symbol, if defined, indicates that the rint routine is\n *\tavailable to return the nearest integral value to x as double\n *\tusing the current rounding mode.\n */\n/*#define HAS_RINT\t\t/ **/\n\n/* HAS_ROUND:\n *\tThis symbol, if defined, indicates that the round routine is\n *\tavailable to round to nearest integer, away from zero.\n */\n/*#define HAS_ROUND\t\t/ **/\n\n/* HAS_SBRK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sbrk() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern void* sbrk(int);\n *\t\textern void* sbrk(size_t);\n */\n/*#define\tHAS_SBRK_PROTO\t/ **/\n\n/* HAS_SCALBN:\n *\tThis symbol, if defined, indicates that the scalbn routine is\n *\tavailable to multiply floating-point number by integral power\n *\tof radix.\n */\n/*#define HAS_SCALBN\t\t/ **/\n\n/* HAS_SCALBNL:\n *\tThis symbol, if defined, indicates that the scalbnl routine is\n *\tavailable.  If ilogbl is also present we can emulate frexpl.\n */\n/*#define HAS_SCALBNL\t\t/ **/\n\n/* HAS_SENDMSG:\n *\tThis symbol, if defined, indicates that the sendmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_SENDMSG\t\t/ **/\n\n/* HAS_SETITIMER:\n *\tThis symbol, if defined, indicates that the setitimer routine is\n *\tavailable to set interval timers.\n */\n/*#define HAS_SETITIMER\t\t/ **/\n\n/* HAS_SETLOCALE:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable to handle locale-specific ctype implementations.\n */\n/* SETLOCALE_ACCEPTS_ANY_LOCALE_NAME:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable and it accepts any input locale name as valid.\n */\n/*#define HAS_SETLOCALE\t/ **/\n/*#define SETLOCALE_ACCEPTS_ANY_LOCALE_NAME\t/ **/\n\n/* HAS_SETPROCTITLE:\n *\tThis symbol, if defined, indicates that the setproctitle routine is\n *\tavailable to set process title.\n */\n/*#define HAS_SETPROCTITLE\t\t/ **/\n\n/* HAS_SIGNBIT:\n *\tThis symbol, if defined, indicates that the signbit routine is\n *\tavailable to check if the given number has the sign bit set.\n *\tThis should include correct testing of -0.0.  This will only be set\n *\tif the signbit() routine is safe to use with the NV type used internally\n *\tin perl.  Users should call Perl_signbit(), which will be #defined to\n *\tthe system's signbit() function or macro if this symbol is defined.\n */\n/*#define HAS_SIGNBIT\t\t/ **/\n\n/* HAS_SIGPROCMASK:\n *\tThis symbol, if defined, indicates that the sigprocmask\n *\tsystem call is available to examine or change the signal mask\n *\tof the calling process.\n */\n/*#define HAS_SIGPROCMASK\t\t/ **/\n\n/* USE_SITECUSTOMIZE:\n *\tThis symbol, if defined, indicates that sitecustomize should\n *\tbe used.\n */\n#ifndef USE_SITECUSTOMIZE\n/*#define\tUSE_SITECUSTOMIZE\t\t/ **/\n#endif\n\n/* HAS_SNPRINTF:\n *\tThis symbol, if defined, indicates that the snprintf () library\n *\tfunction is available for use.\n */\n/* HAS_VSNPRINTF:\n *\tThis symbol, if defined, indicates that the vsnprintf () library\n *\tfunction is available for use.\n */\n/*#define HAS_SNPRINTF\t/ **/\n/*#define HAS_VSNPRINTF\t/ **/\n\n/* HAS_SOCKATMARK:\n *\tThis symbol, if defined, indicates that the sockatmark routine is\n *\tavailable to test whether a socket is at the out-of-band mark.\n */\n/*#define HAS_SOCKATMARK\t\t/ **/\n\n/* HAS_SOCKATMARK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sockatmark() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int sockatmark(int);\n */\n/*#define\tHAS_SOCKATMARK_PROTO\t/ **/\n\n/* HAS_SOCKS5_INIT:\n *\tThis symbol, if defined, indicates that the socks5_init routine is\n *\tavailable to initialize SOCKS 5.\n */\n/*#define HAS_SOCKS5_INIT\t\t/ **/\n\n/* HAS_SQRTL:\n *\tThis symbol, if defined, indicates that the sqrtl routine is\n *\tavailable to do long double square roots.\n */\n/*#define HAS_SQRTL\t\t/ **/\n\n/* HAS_SETRESGID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresgid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresgid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESGID_PROTO\t/ **/\n\n/* HAS_SETRESUID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresuid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresuid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESUID_PROTO\t/ **/\n\n/* HAS_STRUCT_STATFS_F_FLAGS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tdoes have the f_flags member containing the mount flags of\n *\tthe filesystem containing the file.\n *\tThis kind of struct statfs is coming from <sys/mount.h> (BSD 4.3),\n *\tnot from <sys/statfs.h> (SYSV).  Older BSDs (like Ultrix) do not\n *\thave statfs() and struct statfs, they have ustat() and getmnt()\n *\twith struct ustat and struct fs_data.\n */\n/*#define HAS_STRUCT_STATFS_F_FLAGS\t\t/ **/\n\n/* HAS_STRUCT_STATFS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_STATFS\t/ **/\n\n/* HAS_FSTATVFS:\n *\tThis symbol, if defined, indicates that the fstatvfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATVFS\t\t/ **/\n\n/* HAS_STRERROR_L:\n *\tThis symbol, if defined, indicates that the strerror_l routine is\n *\tavailable to return the error message for a given errno value in\n *\ta particular locale (identified by a locale_t object).\n */\n/*#define HAS_STRERROR_L\t\t/ **/\n\n/* HAS_STRFTIME:\n *\tThis symbol, if defined, indicates that the strftime routine is\n *\tavailable to do time formatting.\n */\n/*#define HAS_STRFTIME\t\t/ **/\n\n/* HAS_STRLCAT:\n *\tThis symbol, if defined, indicates that the strlcat () routine is\n *\tavailable to do string concatenation.\n */\n/*#define HAS_STRLCAT\t\t/ **/\n\n/* HAS_STRLCPY:\n *\tThis symbol, if defined, indicates that the strlcpy () routine is\n *\tavailable to do string copying.\n */\n/*#define HAS_STRLCPY\t\t/ **/\n\n/* HAS_STRNLEN:\n *\tThis symbol, if defined, indicates that the strnlen () routine is\n *\tavailable to check the length of a string up to a maximum.\n */\n/*#define HAS_STRNLEN\t\t/ **/\n\n/* HAS_STRTOLD:\n *\tThis symbol, if defined, indicates that the strtold routine is\n *\tavailable to convert strings to long doubles.\n */\n/*#define HAS_STRTOLD\t\t/ **/\n\n/* HAS_STRTOLL:\n *\tThis symbol, if defined, indicates that the strtoll routine is\n *\tavailable to convert strings to long longs.\n */\n/*#define HAS_STRTOLL\t\t/ **/\n\n/* HAS_STRTOQ:\n *\tThis symbol, if defined, indicates that the strtoq routine is\n *\tavailable to convert strings to long longs (quads).\n */\n/*#define HAS_STRTOQ\t\t/ **/\n\n/* HAS_STRTOULL:\n *\tThis symbol, if defined, indicates that the strtoull routine is\n *\tavailable to convert strings to unsigned long longs.\n */\n/*#define HAS_STRTOULL\t\t/ **/\n\n/* HAS_STRTOUQ:\n *\tThis symbol, if defined, indicates that the strtouq routine is\n *\tavailable to convert strings to unsigned long longs (quads).\n */\n/*#define HAS_STRTOUQ\t\t/ **/\n\n/* HAS_SYSCALL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the syscall() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int syscall(int,  ...);\n *\t\textern int syscall(long, ...);\n */\n/*#define\tHAS_SYSCALL_PROTO\t/ **/\n\n/* HAS_TELLDIR_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the telldir() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern long telldir(DIR*);\n */\n/*#define\tHAS_TELLDIR_PROTO\t/ **/\n\n/* HAS_TGAMMA:\n *\tThis symbol, if defined, indicates that the tgamma routine is\n *\tavailable to do the gamma function. See also HAS_LGAMMA.\n */\n/*#define HAS_TGAMMA\t\t/ **/\n\n/* HAS_CTIME64:\n *\tThis symbol, if defined, indicates that the ctime64 () routine is\n *\tavailable to do the 64bit variant of ctime ()\n */\n/* HAS_LOCALTIME64:\n *\tThis symbol, if defined, indicates that the localtime64 () routine is\n *\tavailable to do the 64bit variant of localtime ()\n */\n/* HAS_GMTIME64:\n *\tThis symbol, if defined, indicates that the gmtime64 () routine is\n *\tavailable to do the 64bit variant of gmtime ()\n */\n/* HAS_MKTIME64:\n *\tThis symbol, if defined, indicates that the mktime64 () routine is\n *\tavailable to do the 64bit variant of mktime ()\n */\n/* HAS_DIFFTIME64:\n *\tThis symbol, if defined, indicates that the difftime64 () routine is\n *\tavailable to do the 64bit variant of difftime ()\n */\n/* HAS_ASCTIME64:\n *\tThis symbol, if defined, indicates that the asctime64 () routine is\n *\tavailable to do the 64bit variant of asctime ()\n */\n/*#define\tHAS_CTIME64\t\t/ **/\n/*#define\tHAS_LOCALTIME64\t\t/ **/\n/*#define\tHAS_GMTIME64\t\t/ **/\n/*#define\tHAS_MKTIME64\t\t/ **/\n/*#define\tHAS_DIFFTIME64\t\t/ **/\n/*#define\tHAS_ASCTIME64\t\t/ **/\n\n/* HAS_TIMEGM:\n *\tThis symbol, if defined, indicates that the timegm routine is\n *\tavailable to do the opposite of gmtime ()\n */\n/*#define HAS_TIMEGM\t\t/ **/\n\n/* HAS_TOWLOWER:\n *\tThis symbol, if defined, indicates that the towlower () routine is\n *\tavailable to do case conversion.\n */\n/*#define HAS_TOWLOWER\t\t/ **/\n\n/* HAS_TOWUPPER:\n *\tThis symbol, if defined, indicates that the towupper () routine is\n *\tavailable to do case conversion.\n */\n/*#define HAS_TOWUPPER\t\t/ **/\n\n/* HAS_TRUNC:\n *\tThis symbol, if defined, indicates that the trunc routine is\n *\tavailable to round doubles towards zero.\n */\n/*#define HAS_TRUNC\t\t/ **/\n\n/* HAS_TRUNCL:\n *\tThis symbol, if defined, indicates that the truncl routine is\n *\tavailable. If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_TRUNCL\t\t/ **/\n\n/* U32_ALIGNMENT_REQUIRED:\n *\tThis symbol, if defined, indicates that you must access\n *\tcharacter data through U32-aligned pointers.\n */\n#ifndef U32_ALIGNMENT_REQUIRED\n#define U32_ALIGNMENT_REQUIRED\t/**/\n#endif\n\n/* HAS_UALARM:\n *\tThis symbol, if defined, indicates that the ualarm routine is\n *\tavailable to do alarms with microsecond granularity.\n */\n/*#define HAS_UALARM\t\t/ **/\n\n/* HAS_UNORDERED:\n *\tThis symbol, if defined, indicates that the unordered routine is\n *\tavailable to check whether two doubles are unordered\n *\t(effectively: whether either of them is NaN)\n */\n/*#define HAS_UNORDERED\t\t/ **/\n\n/* HAS_UNSETENV:\n *\tThis symbol, if defined, indicates that the unsetenv () routine is\n *\tavailable for use.\n */\n/*#define HAS_UNSETENV\t\t/ **/\n\n/* HAS_USLEEP_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the usleep() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int usleep(useconds_t);\n */\n/*#define\tHAS_USLEEP_PROTO\t/ **/\n\n/* HAS_USTAT:\n *\tThis symbol, if defined, indicates that the ustat system call is\n *\tavailable to query file system statistics by dev_t.\n */\n/*#define HAS_USTAT\t\t/ **/\n\n/* HAS_WCSCMP:\n *\tThis symbol, if defined, indicates that the wcscmp routine is\n *\tavailable to compare two wide character strings.\n */\n/*#define HAS_WCSCMP\t/ **/\n\n/* HAS_WCSXFRM:\n *\tThis symbol, if defined, indicates that the wcsxfrm routine is\n *\tavailable to tranform a wide character string for wcscmp().\n */\n/*#define HAS_WCSXFRM\t/ **/\n\n/* HAS_WRITEV:\n *\tThis symbol, if defined, indicates that the writev routine is\n *\tavailable to do scatter writes.\n */\n/*#define HAS_WRITEV\t\t/ **/\n\n/* DEFAULT_INC_EXCLUDES_DOT:\n *\tThis symbol, if defined, removes the legacy default behavior of\n *\tincluding '.' at the end of @INC.\n */\n/*#define DEFAULT_INC_EXCLUDES_DOT\t/ **/\n\n/* USE_DYNAMIC_LOADING:\n *\tThis symbol, if defined, indicates that dynamic loading of\n *\tsome sort is available.\n */\n/*#define USE_DYNAMIC_LOADING\t\t/ **/\n\n/* FFLUSH_NULL:\n *\tThis symbol, if defined, tells that fflush(NULL) correctly\n *\tflushes all pending stdio output without side effects. In\n *\tparticular, on some platforms calling fflush(NULL) *still*\n *\tcorrupts STDIN if it is a pipe.\n */\n/* FFLUSH_ALL:\n *\tThis symbol, if defined, tells that to flush\n *\tall pending stdio output one must loop through all\n *\tthe stdio file handles stored in an array and fflush them.\n *\tNote that if fflushNULL is defined, fflushall will not\n *\teven be probed for and will be left undefined.\n */\n/*#define\tFFLUSH_NULL\t\t/ **/\n/*#define\tFFLUSH_ALL\t\t/ **/\n\n/* I_BFD:\n *\tThis symbol, if defined, indicates that <bfd.h> exists and\n *\tcan be included.\n */\n/*#define\tI_BFD\t\t/ **/\n\n/* I_CRYPT:\n *\tThis symbol, if defined, indicates that <crypt.h> exists and\n *\tshould be included.\n */\n/*#define\tI_CRYPT\t\t/ **/\n\n/* DB_Prefix_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is u_int32_t.\n */\n/* DB_Hash_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is size_t.\n */\n/* DB_VERSION_MAJOR_CFG:\n *\tThis symbol, if defined, defines the major version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n */\n/* DB_VERSION_MINOR_CFG:\n *\tThis symbol, if defined, defines the minor version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n/* DB_VERSION_PATCH_CFG:\n *\tThis symbol, if defined, defines the patch version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n#define DB_Hash_t\tu_int32_t\t\t/**/\n#define DB_Prefix_t\tsize_t\t\t/**/\n#define DB_VERSION_MAJOR_CFG\t0\t/**/\n#define DB_VERSION_MINOR_CFG\t0\t/**/\n#define DB_VERSION_PATCH_CFG\t0\t/**/\n\n/* I_FENV:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <fenv.h> to get the floating point environment definitions.\n */\n/*#define I_FENV\t\t/ **/\n\n/* I_FP:\n *\tThis symbol, if defined, indicates that <fp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP\t\t/ **/\n\n/* I_FP_CLASS:\n *\tThis symbol, if defined, indicates that <fp_class.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP_CLASS\t\t/ **/\n\n/* I_IEEEFP:\n *\tThis symbol, if defined, indicates that <ieeefp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_IEEEFP\t\t/ **/\n\n/* I_INTTYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <inttypes.h>.\n */\n/*#define   I_INTTYPES                / **/\n\n/* I_LANGINFO:\n *\tThis symbol, if defined, indicates that <langinfo.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LANGINFO\t\t/ **/\n\n/* I_LIBUTIL:\n *\tThis symbol, if defined, indicates that <libutil.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LIBUTIL\t\t/ **/\n\n/* I_MALLOCMALLOC:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <malloc/malloc.h>.\n */\n/*#define I_MALLOCMALLOC\t\t/ **/\n\n/* I_MNTENT:\n *\tThis symbol, if defined, indicates that <mntent.h> exists and\n *\tshould be included.\n */\n/*#define\tI_MNTENT\t\t/ **/\n\n/* I_NETINET_TCP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/tcp.h>.\n */\n/*#define   I_NETINET_TCP                / **/\n\n/* I_POLL:\n *\tThis symbol, if defined, indicates that <poll.h> exists and\n *\tshould be included. (see also HAS_POLL)\n */\n/*#define\tI_POLL\t\t/ **/\n\n/* I_PROT:\n *\tThis symbol, if defined, indicates that <prot.h> exists and\n *\tshould be included.\n */\n/*#define\tI_PROT\t\t/ **/\n\n/* I_QUADMATH:\n *\tThis symbol, if defined, indicates that <quadmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_QUADMATH\t\t/ **/\n\n/* I_SHADOW:\n *\tThis symbol, if defined, indicates that <shadow.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SHADOW\t\t/ **/\n\n/* I_SOCKS:\n *\tThis symbol, if defined, indicates that <socks.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SOCKS\t\t/ **/\n\n/* I_STDBOOL:\n *\tThis symbol, if defined, indicates that <stdbool.h> exists and\n *\tcan be included.\n */\n/*#define\tI_STDBOOL\t\t/ **/\n\n/* I_STDINT:\n *\tThis symbol, if defined, indicates that <stdint.h> exists and\n *\tshould be included.\n */\n/*#define I_STDINT\t\t/ **/\n\n/* I_SUNMATH:\n *\tThis symbol, if defined, indicates that <sunmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SUNMATH\t\t/ **/\n\n/* I_SYSLOG:\n *\tThis symbol, if defined, indicates that <syslog.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSLOG\t\t/ **/\n\n/* I_SYSMODE:\n *\tThis symbol, if defined, indicates that <sys/mode.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSMODE\t\t/ **/\n\n/* I_SYS_MOUNT:\n *\tThis symbol, if defined, indicates that <sys/mount.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_MOUNT\t\t/ **/\n\n/* I_SYS_STATFS:\n *\tThis symbol, if defined, indicates that <sys/statfs.h> exists.\n */\n/*#define\tI_SYS_STATFS\t\t/ **/\n\n/* I_SYS_STATVFS:\n *\tThis symbol, if defined, indicates that <sys/statvfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_STATVFS\t\t/ **/\n\n/* I_SYSUTSNAME:\n *\tThis symbol, if defined, indicates that <sys/utsname.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUTSNAME\t\t/ **/\n\n/* I_SYS_VFS:\n *\tThis symbol, if defined, indicates that <sys/vfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_VFS\t\t/ **/\n\n/* I_USTAT:\n *\tThis symbol, if defined, indicates that <ustat.h> exists and\n *\tshould be included.\n */\n/*#define\tI_USTAT\t\t/ **/\n\n/* I_WCHAR:\n *\tThis symbol, if defined, indicates to the C program that <wchar.h>\n *\tis available for inclusion\n */\n/*#define   I_WCHAR\t/ **/\n\n/* I_WCTYPE:\n *\tThis symbol, if defined, indicates that <wctype.h> exists.\n */\n/*#define\tI_WCTYPE\t\t/ **/\n\n/* DOUBLEINFBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes for the double precision infinity.\n */\n/* DOUBLENANBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes (0xHH) for the double precision not-a-number.\n */\n/* LONGDBLINFBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes for the long double precision infinity.\n */\n/* LONGDBLNANBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes (0xHH) for the long double precision not-a-number.\n */\n#define DOUBLEINFBYTES  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f\t\t/**/\n#define DOUBLENANBYTES  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f\t\t/**/\n#define LONGDBLINFBYTES 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\t\t/**/\n#define LONGDBLNANBYTES 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\t\t/**/\n\n/* PERL_PRIfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for output.\n */\n/* PERL_PRIgldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'g') for output.\n */\n/* PERL_PRIeldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'e') for output.\n */\n/* PERL_SCNfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for input.\n */\n/* DOUBLEKIND:\n *\tDOUBLEKIND will be one of\n *\tDOUBLE_IS_IEEE_754_32_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_32_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_LE_BE\n *\tDOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_BE_LE\n *\tDOUBLE_IS_VAX_F_FLOAT\n *\tDOUBLE_IS_VAX_D_FLOAT\n *\tDOUBLE_IS_VAX_G_FLOAT\n *\tDOUBLE_IS_IBM_SINGLE_32_BIT\n *\tDOUBLE_IS_IBM_DOUBLE_64_BIT\n *\tDOUBLE_IS_CRAY_SINGLE_64_BIT\n *\tDOUBLE_IS_UNKNOWN_FORMAT\n */\n/* DOUBLE_HAS_INF:\n *\tThis symbol, if defined, indicates that the double has\n *\tthe infinity.\n */\n/* DOUBLE_HAS_NAN:\n *\tThis symbol, if defined, indicates that the double has\n *\tthe not-a-number.\n */\n/* DOUBLE_HAS_NEGATIVE_ZERO:\n *\tThis symbol, if defined, indicates that the double has\n *\tthe negative_zero.\n */\n/* DOUBLE_HAS_SUBNORMALS:\n *\tThis symbol, if defined, indicates that the double has\n *\tthe subnormals (denormals).\n */\n/* DOUBLE_STYLE_CRAY:\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit CRAY mainframe format.\n */\n/* DOUBLE_STYLE_IBM:\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit IBM mainframe format.\n */\n/* DOUBLE_STYLE_IEEE:\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit IEEE 754.\n */\n/* DOUBLE_STYLE_VAX:\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit VAX format D or G.\n */\n#define DOUBLEKIND 3\t\t/**/\n#define DOUBLE_IS_IEEE_754_32_BIT_LITTLE_ENDIAN\t1\n#define DOUBLE_IS_IEEE_754_32_BIT_BIG_ENDIAN\t2\n#define DOUBLE_IS_IEEE_754_64_BIT_LITTLE_ENDIAN\t3\n#define DOUBLE_IS_IEEE_754_64_BIT_BIG_ENDIAN\t4\n#define DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\t5\n#define DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\t6\n#define DOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_LE_BE\t7\n#define DOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_BE_LE\t8\n#define DOUBLE_IS_VAX_F_FLOAT\t9\n#define DOUBLE_IS_VAX_D_FLOAT\t10\n#define DOUBLE_IS_VAX_G_FLOAT\t11\n#define DOUBLE_IS_IBM_SINGLE_32_BIT\t12\n#define DOUBLE_IS_IBM_DOUBLE_64_BIT\t13\n#define DOUBLE_IS_CRAY_SINGLE_64_BIT\t14\n#define DOUBLE_IS_UNKNOWN_FORMAT\t\t-1\n/*#define PERL_PRIfldbl\t\"llf\"\t/ **/\n/*#define PERL_PRIgldbl\t\"llg\"\t/ **/\n/*#define PERL_PRIeldbl\t\"lle\"\t/ **/\n/*#define PERL_SCNfldbl\t\"llf\"\t/ **/\n#define DOUBLE_HAS_INF\n#define DOUBLE_HAS_NAN\n#define DOUBLE_HAS_NEGATIVE_ZERO\n#define DOUBLE_HAS_SUBNORMALS\n#undef DOUBLE_STYLE_CRAY\n#undef DOUBLE_STYLE_IBM\n#define DOUBLE_STYLE_IEEE\n#undef DOUBLE_STYLE_VAX\n\n/* DOUBLEMANTBITS:\n *\tThis symbol, if defined, tells how many mantissa bits\n *\tthere are in double precision floating point format.\n *\tNote that this is usually DBL_MANT_DIG minus one, since\n *\twith the standard IEEE 754 formats DBL_MANT_DIG includes\n *\tthe implicit bit, which doesn't really exist.\n */\n/* LONGDBLMANTBITS:\n *\tThis symbol, if defined, tells how many mantissa bits\n *\tthere are in long double precision floating point format.\n *\tNote that this can be LDBL_MANT_DIG minus one,\n *\tsince LDBL_MANT_DIG can include the IEEE 754 implicit bit.\n *\tThe common x86-style 80-bit long double does not have\n *\tan implicit bit.\n */\n/* NVMANTBITS:\n *\tThis symbol, if defined, tells how many mantissa bits\n *\t(not including implicit bit) there are in a Perl NV.\n *\tThis depends on which floating point type was chosen.\n */\n#define DOUBLEMANTBITS  52\n#define LONGDBLMANTBITS 64\n#define NVMANTBITS      52\n\n/* NEED_VA_COPY:\n *\tThis symbol, if defined, indicates that the system stores\n *\tthe variable argument list datatype, va_list, in a format\n *\tthat cannot be copied by simple assignment, so that some\n *\tother means must be used when copying is required.\n *\tAs such systems vary in their provision (or non-provision)\n *\tof copying mechanisms, handy.h defines a platform-\n *\tindependent macro, Perl_va_copy(src, dst), to do the job.\n */\n#define\tNEED_VA_COPY\t\t/**/\n\n/* IVTYPE:\n *\tThis symbol defines the C type used for Perl's IV.\n */\n/* UVTYPE:\n *\tThis symbol defines the C type used for Perl's UV.\n */\n/* I8TYPE:\n *\tThis symbol defines the C type used for Perl's I8.\n */\n/* U8TYPE:\n *\tThis symbol defines the C type used for Perl's U8.\n */\n/* I16TYPE:\n *\tThis symbol defines the C type used for Perl's I16.\n */\n/* U16TYPE:\n *\tThis symbol defines the C type used for Perl's U16.\n */\n/* I32TYPE:\n *\tThis symbol defines the C type used for Perl's I32.\n */\n/* U32TYPE:\n *\tThis symbol defines the C type used for Perl's U32.\n */\n/* I64TYPE:\n *\tThis symbol defines the C type used for Perl's I64.\n */\n/* U64TYPE:\n *\tThis symbol defines the C type used for Perl's U64.\n */\n/* NVTYPE:\n *\tThis symbol defines the C type used for Perl's NV.\n */\n/* IVSIZE:\n *\tThis symbol contains the sizeof(IV).\n */\n/* UVSIZE:\n *\tThis symbol contains the sizeof(UV).\n */\n/* I8SIZE:\n *\tThis symbol contains the sizeof(I8).\n */\n/* U8SIZE:\n *\tThis symbol contains the sizeof(U8).\n */\n/* I16SIZE:\n *\tThis symbol contains the sizeof(I16).\n */\n/* U16SIZE:\n *\tThis symbol contains the sizeof(U16).\n */\n/* I32SIZE:\n *\tThis symbol contains the sizeof(I32).\n */\n/* U32SIZE:\n *\tThis symbol contains the sizeof(U32).\n */\n/* I64SIZE:\n *\tThis symbol contains the sizeof(I64).\n */\n/* U64SIZE:\n *\tThis symbol contains the sizeof(U64).\n */\n/* NVSIZE:\n *\tThis symbol contains the sizeof(NV).\n *\tNote that some floating point formats have unused bytes.\n *\tThe most notable example is the x86* 80-bit extended precision\n *\twhich comes in byte sizes of 12 and 16 (for 32 and 64 bit\n *\tplatforms, respectively), but which only uses 10 bytes.\n *\tPerl compiled with -Duselongdouble on x86* is like this.\n */\n/* NV_PRESERVES_UV:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tcan preserve all the bits of a variable of type UVTYPE.\n */\n/* NV_PRESERVES_UV_BITS:\n *\tThis symbol contains the number of bits a variable of type NVTYPE\n *\tcan preserve of a variable of type UVTYPE.\n */\n/* NV_OVERFLOWS_INTEGERS_AT:\n *\tThis symbol gives the largest integer value that NVs can hold. This\n *\tvalue + 1.0 cannot be stored accurately. It is expressed as constant\n *\tfloating point expression to reduce the chance of decimal/binary\n *\tconversion issues. If it can not be determined, the value 0 is given.\n */\n/* NV_ZERO_IS_ALLBITS_ZERO:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tstores 0.0 in memory as all bits zero.\n */\n#define\tIVTYPE\t\tlong\t\t/**/\n#define\tUVTYPE\t\tunsigned long\t\t/**/\n#define\tI8TYPE\t\tsigned char\t\t/**/\n#define\tU8TYPE\t\tunsigned char\t\t/**/\n#define\tI16TYPE\t\tshort\t/**/\n#define\tU16TYPE\t\tunsigned short\t/**/\n#define\tI32TYPE\t\tlong\t/**/\n#define\tU32TYPE\t\tunsigned long\t/**/\n#ifdef HAS_QUAD\n#define\tI64TYPE\t\tint64_t\t/**/\n#define\tU64TYPE\t\tuint64_t\t/**/\n#endif\n#define\tNVTYPE\t\tdouble\t\t/**/\n#define\tIVSIZE\t\t4\t\t/**/\n#define\tUVSIZE\t\t4\t\t/**/\n#define\tI8SIZE\t\t1\t\t/**/\n#define\tU8SIZE\t\t1\t\t/**/\n#define\tI16SIZE\t\t2\t/**/\n#define\tU16SIZE\t\t2\t/**/\n#define\tI32SIZE\t\t4\t/**/\n#define\tU32SIZE\t\t4\t/**/\n#ifdef HAS_QUAD\n#define\tI64SIZE\t\t8\t/**/\n#define\tU64SIZE\t\t8\t/**/\n#endif\n#define\tNVSIZE\t\t8\t\t/**/\n#undef\tNV_PRESERVES_UV\n#define\tNV_PRESERVES_UV_BITS\t0\n#define\tNV_OVERFLOWS_INTEGERS_AT\t(256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0)\n#undef\tNV_ZERO_IS_ALLBITS_ZERO\n#if UVSIZE == 8\n#   ifdef BYTEORDER\n#       if BYTEORDER == 0x1234\n#           undef BYTEORDER\n#           define BYTEORDER 0x12345678\n#       else\n#           if BYTEORDER == 0x4321\n#               undef BYTEORDER\n#               define BYTEORDER 0x87654321\n#           endif\n#       endif\n#   endif\n#endif\n\n/* IVdf:\n *\tThis symbol defines the format string used for printing a Perl IV\n *\tas a signed decimal integer.\n */\n/* UVuf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned decimal integer.\n */\n/* UVof:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned octal integer.\n */\n/* UVxf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in lowercase abcdef.\n */\n/* UVXf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in uppercase ABCDEF.\n */\n/* NVef:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %e-ish floating point format.\n */\n/* NVff:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %f-ish floating point format.\n */\n/* NVgf:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %g-ish floating point format.\n */\n#define\tIVdf\t\t\"ld\"\t\t/**/\n#define\tUVuf\t\t\"lu\"\t\t/**/\n#define\tUVof\t\t\"lo\"\t\t/**/\n#define\tUVxf\t\t\"lx\"\t\t/**/\n#define\tUVXf\t\t\"lX\"\t\t/**/\n#define\tNVef\t\t\"e\"\t\t/**/\n#define\tNVff\t\t\"f\"\t\t/**/\n#define\tNVgf\t\t\"g\"\t\t/**/\n\n/* SELECT_MIN_BITS:\n *\tThis symbol holds the minimum number of bits operated by select.\n *\tThat is, if you do select(n, ...), how many bits at least will be\n *\tcleared in the masks if some activity is detected.  Usually this\n *\tis either n or 32*ceil(n/32), especially many little-endians do\n *\tthe latter.  This is only useful if you have select(), naturally.\n */\n#define SELECT_MIN_BITS\t32\t/**/\n\n/* ST_INO_SIZE:\n *\tThis variable contains the size of struct stat's st_ino in bytes.\n */\n/* ST_INO_SIGN:\n *\tThis symbol holds the signedness of struct stat's st_ino.\n *\t1 for unsigned, -1 for signed.\n */\n#define ST_INO_SIGN 1\t/* st_ino sign */\n#define ST_INO_SIZE 4\t/* st_ino size */\n\n/* STARTPERL:\n *\tThis variable contains the string to put in front of a perl\n *\tscript to make sure (one hopes) that it runs with perl and not\n *\tsome shell.\n */\n#define STARTPERL \"#!perl\"\t\t/**/\n\n/* HAS_STDIO_STREAM_ARRAY:\n *\tThis symbol, if defined, tells that there is an array\n *\tholding the stdio streams.\n */\n/* STDIO_STREAM_ARRAY:\n *\tThis symbol tells the name of the array holding the stdio streams.\n *\tUsual values include _iob, __iob, and __sF.\n */\n/*#define\tHAS_STDIO_STREAM_ARRAY\t/ **/\n#ifdef HAS_STDIO_STREAM_ARRAY\n#define STDIO_STREAM_ARRAY\t\n#endif\n\n/* GMTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* GMTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n#define GMTIME_MAX\t\t2147483647\t/**/\n#define GMTIME_MIN\t\t0\t/**/\n#define LOCALTIME_MAX\t2147483647\t/**/\n#define LOCALTIME_MIN\t0\t/**/\n\n/* USE_64_BIT_INT:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be employed (be they 32 or 64 bits).  The minimal possible\n *\t64-bitness is used, just enough to get 64-bit integers into Perl.\n *\tThis may mean using for example \"long longs\", while your memory\n *\tmay still be limited to 2 gigabytes.\n */\n/* USE_64_BIT_ALL:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be used (be they 32 or 64 bits).  The maximal possible\n *\t64-bitness is employed: LP64 or ILP64, meaning that you will\n *\tbe able to use more than 2 gigabytes of memory.  This mode is\n *\teven more binary incompatible than USE_64_BIT_INT. You may not\n *\tbe able to run the resulting executable in a 32-bit CPU at all or\n *\tyou may need at least to reboot your OS to 64-bit mode.\n */\n#ifndef USE_64_BIT_INT\n/*#define\tUSE_64_BIT_INT\t\t/ **/\n#endif\n#ifndef USE_64_BIT_ALL\n/*#define\tUSE_64_BIT_ALL\t\t/ **/\n#endif\n\n/* USE_CBACKTRACE:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for backtrace.\n */\n/*#define USE_CBACKTRACE\t\t/ **/\n\n/* USE_DTRACE:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for DTrace.\n */\n/*#define USE_DTRACE\t\t/ **/\n\n/* USE_FAST_STDIO:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use 'fast stdio'.\n *\tDefaults to define in Perls 5.8 and earlier, to undef later.\n */\n#ifndef USE_FAST_STDIO\n/*#define\tUSE_FAST_STDIO\t\t/ **/\n#endif\n\n/* USE_KERN_PROC_PATHNAME:\n *\tThis symbol, if defined, indicates that we can use sysctl with\n *\tKERN_PROC_PATHNAME to get a full path for the executable, and hence\n *\tconvert $^X to an absolute path.\n */\n/*#define USE_KERN_PROC_PATHNAME\t/ **/\n\n/* USE_LARGE_FILES:\n *\tThis symbol, if defined, indicates that large file support\n *\tshould be used when available.\n */\n#ifndef USE_LARGE_FILES\n/*#define\tUSE_LARGE_FILES\t\t/ **/\n#endif\n\n/* USE_LONG_DOUBLE:\n *\tThis symbol, if defined, indicates that long doubles should\n *\tbe used when available.\n */\n#ifndef USE_LONG_DOUBLE\n/*#define\tUSE_LONG_DOUBLE\t\t/ **/\n#endif\n\n/* USE_MORE_BITS:\n *\tThis symbol, if defined, indicates that 64-bit interfaces and\n *\tlong doubles should be used when available.\n */\n#ifndef USE_MORE_BITS\n/*#define\tUSE_MORE_BITS\t\t/ **/\n#endif\n\n/* MULTIPLICITY:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use multiplicity.\n */\n#ifndef MULTIPLICITY\n/*#define\tMULTIPLICITY\t\t/ **/\n#endif\n\n/* USE_NSGETEXECUTABLEPATH:\n *\tThis symbol, if defined, indicates that we can use _NSGetExecutablePath\n *\tand realpath to get a full path for the executable, and hence convert\n *\t$^X to an absolute path.\n */\n/*#define USE_NSGETEXECUTABLEPATH\t/ **/\n\n/* USE_PERLIO:\n *\tThis symbol, if defined, indicates that the PerlIO abstraction should\n *\tbe used throughout.  If not defined, stdio should be\n *\tused in a fully backward compatible manner.\n */\n#ifndef USE_PERLIO\n/*#define\tUSE_PERLIO\t\t/ **/\n#endif\n\n/* USE_QUADMATH:\n *\tThis symbol, if defined, indicates that the quadmath library should\n *\tbe used when available.\n */\n#ifndef USE_QUADMATH\n/*#define\tUSE_QUADMATH\t\t/ **/\n#endif\n\n/* USE_SOCKS:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use socks.\n */\n#ifndef USE_SOCKS\n/*#define\tUSE_SOCKS\t\t/ **/\n#endif\n\n/* HAS_DRAND48_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the drand48() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern double drand48(void);\n */\n/*#define\tHAS_DRAND48_PROTO\t/ **/\n\n/* HAS_GETHOST_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for gethostent(), gethostbyname(), and\n *\tgethostbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETHOST_PROTOS\t/ **/\n\n/* HAS_GETNET_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getnetent(), getnetbyname(), and\n *\tgetnetbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETNET_PROTOS\t/ **/\n\n/* HAS_GETPROTO_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getprotoent(), getprotobyname(), and\n *\tgetprotobyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETPROTO_PROTOS\t/ **/\n\n/* HAS_GETSERV_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getservent(), getservbyname(), and\n *\tgetservbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETSERV_PROTOS\t/ **/\n\n/* HAS_LSEEK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the lseek() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern off_t lseek(int, off_t, int);\n */\n/*#define\tHAS_LSEEK_PROTO\t/ **/\n\n/* Netdb_host_t:\n *\tThis symbol holds the type used for the 1st argument\n *\tto gethostbyaddr().\n */\n/* Netdb_hlen_t:\n *\tThis symbol holds the type used for the 2nd argument\n *\tto gethostbyaddr().\n */\n/* Netdb_name_t:\n *\tThis symbol holds the type used for the argument to\n *\tgethostbyname().\n */\n/* Netdb_net_t:\n *\tThis symbol holds the type used for the 1st argument to\n *\tgetnetbyaddr().\n */\n#define Netdb_host_t\t\tconst char * /**/\n#define Netdb_hlen_t\t\tint /**/\n#define Netdb_name_t\t\tconst char * /**/\n#define Netdb_net_t\t\tunsigned long /**/\n\n/* Select_fd_set_t:\n *\tThis symbol holds the type used for the 2nd, 3rd, and 4th\n *\targuments to select.  Usually, this is 'fd_set *', if HAS_FD_SET\n *\tis defined, and 'int *' otherwise.  This is only useful if you\n *\thave select(), of course.\n */\n#define Select_fd_set_t\tint\t/**/\n\n/* Sock_size_t:\n *\tThis symbol holds the type used for the size argument of\n *\tvarious socket calls (just the base type, not the pointer-to).\n */\n#define Sock_size_t\t\tint /**/\n\n/* ARCHNAME:\n *\tThis symbol holds a string representing the architecture name.\n *\tIt may be used to construct an architecture-dependant pathname\n *\twhere library files may be held under a private library, for\n *\tinstance.\n */\n#define ARCHNAME \"unknown\"\t\t/**/\n\n/* HAS_ASCTIME_R:\n *\tThis symbol, if defined, indicates that the asctime_r routine\n *\tis available to asctime re-entrantly.\n */\n/* ASCTIME_R_PROTO:\n *\tThis symbol encodes the prototype of asctime_r.\n *\tIt is zero if d_asctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_asctime_r\n *\tis defined.\n */\n/*#define HAS_ASCTIME_R\t/ **/\n#define ASCTIME_R_PROTO 0\t/**/\n\n/* HAS_CRYPT_R:\n *\tThis symbol, if defined, indicates that the crypt_r routine\n *\tis available to crypt re-entrantly.\n */\n/* CRYPT_R_PROTO:\n *\tThis symbol encodes the prototype of crypt_r.\n *\tIt is zero if d_crypt_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_crypt_r\n *\tis defined.\n */\n/*#define HAS_CRYPT_R\t/ **/\n#define CRYPT_R_PROTO 0\t/**/\n\n/* HAS_CTERMID_R:\n *\tThis symbol, if defined, indicates that the ctermid_r routine\n *\tis available to ctermid re-entrantly.\n */\n/* CTERMID_R_PROTO:\n *\tThis symbol encodes the prototype of ctermid_r.\n *\tIt is zero if d_ctermid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctermid_r\n *\tis defined.\n */\n/*#define HAS_CTERMID_R\t/ **/\n#define CTERMID_R_PROTO 0\t/**/\n\n/* HAS_CTIME_R:\n *\tThis symbol, if defined, indicates that the ctime_r routine\n *\tis available to ctime re-entrantly.\n */\n/* CTIME_R_PROTO:\n *\tThis symbol encodes the prototype of ctime_r.\n *\tIt is zero if d_ctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctime_r\n *\tis defined.\n */\n/*#define HAS_CTIME_R\t/ **/\n#define CTIME_R_PROTO 0\t/**/\n\n/* HAS_DRAND48_R:\n *\tThis symbol, if defined, indicates that the drand48_r routine\n *\tis available to drand48 re-entrantly.\n */\n/* DRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of drand48_r.\n *\tIt is zero if d_drand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_drand48_r\n *\tis defined.\n */\n/*#define HAS_DRAND48_R\t/ **/\n#define DRAND48_R_PROTO 0\t/**/\n\n/* HAS_ENDGRENT_R:\n *\tThis symbol, if defined, indicates that the endgrent_r routine\n *\tis available to endgrent re-entrantly.\n */\n/* ENDGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of endgrent_r.\n *\tIt is zero if d_endgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endgrent_r\n *\tis defined.\n */\n/*#define HAS_ENDGRENT_R\t/ **/\n#define ENDGRENT_R_PROTO 0\t/**/\n\n/* HAS_ENDHOSTENT_R:\n *\tThis symbol, if defined, indicates that the endhostent_r routine\n *\tis available to endhostent re-entrantly.\n */\n/* ENDHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of endhostent_r.\n *\tIt is zero if d_endhostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endhostent_r\n *\tis defined.\n */\n/*#define HAS_ENDHOSTENT_R\t/ **/\n#define ENDHOSTENT_R_PROTO 0\t/**/\n\n/* HAS_ENDNETENT_R:\n *\tThis symbol, if defined, indicates that the endnetent_r routine\n *\tis available to endnetent re-entrantly.\n */\n/* ENDNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of endnetent_r.\n *\tIt is zero if d_endnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endnetent_r\n *\tis defined.\n */\n/*#define HAS_ENDNETENT_R\t/ **/\n#define ENDNETENT_R_PROTO 0\t/**/\n\n/* HAS_ENDPROTOENT_R:\n *\tThis symbol, if defined, indicates that the endprotoent_r routine\n *\tis available to endprotoent re-entrantly.\n */\n/* ENDPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of endprotoent_r.\n *\tIt is zero if d_endprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endprotoent_r\n *\tis defined.\n */\n/*#define HAS_ENDPROTOENT_R\t/ **/\n#define ENDPROTOENT_R_PROTO 0\t/**/\n\n/* HAS_ENDPWENT_R:\n *\tThis symbol, if defined, indicates that the endpwent_r routine\n *\tis available to endpwent re-entrantly.\n */\n/* ENDPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of endpwent_r.\n *\tIt is zero if d_endpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endpwent_r\n *\tis defined.\n */\n/*#define HAS_ENDPWENT_R\t/ **/\n#define ENDPWENT_R_PROTO 0\t/**/\n\n/* HAS_ENDSERVENT_R:\n *\tThis symbol, if defined, indicates that the endservent_r routine\n *\tis available to endservent re-entrantly.\n */\n/* ENDSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of endservent_r.\n *\tIt is zero if d_endservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endservent_r\n *\tis defined.\n */\n/*#define HAS_ENDSERVENT_R\t/ **/\n#define ENDSERVENT_R_PROTO 0\t/**/\n\n/* HAS_GETGRENT_R:\n *\tThis symbol, if defined, indicates that the getgrent_r routine\n *\tis available to getgrent re-entrantly.\n */\n/* GETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of getgrent_r.\n *\tIt is zero if d_getgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrent_r\n *\tis defined.\n */\n/*#define HAS_GETGRENT_R\t/ **/\n#define GETGRENT_R_PROTO 0\t/**/\n\n/* HAS_GETGRGID_R:\n *\tThis symbol, if defined, indicates that the getgrgid_r routine\n *\tis available to getgrgid re-entrantly.\n */\n/* GETGRGID_R_PROTO:\n *\tThis symbol encodes the prototype of getgrgid_r.\n *\tIt is zero if d_getgrgid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrgid_r\n *\tis defined.\n */\n/*#define HAS_GETGRGID_R\t/ **/\n#define GETGRGID_R_PROTO 0\t/**/\n\n/* HAS_GETGRNAM_R:\n *\tThis symbol, if defined, indicates that the getgrnam_r routine\n *\tis available to getgrnam re-entrantly.\n */\n/* GETGRNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getgrnam_r.\n *\tIt is zero if d_getgrnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrnam_r\n *\tis defined.\n */\n/*#define HAS_GETGRNAM_R\t/ **/\n#define GETGRNAM_R_PROTO 0\t/**/\n\n/* HAS_GETHOSTBYADDR_R:\n *\tThis symbol, if defined, indicates that the gethostbyaddr_r routine\n *\tis available to gethostbyaddr re-entrantly.\n */\n/* GETHOSTBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyaddr_r.\n *\tIt is zero if d_gethostbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYADDR_R\t/ **/\n#define GETHOSTBYADDR_R_PROTO 0\t/**/\n\n/* HAS_GETHOSTBYNAME_R:\n *\tThis symbol, if defined, indicates that the gethostbyname_r routine\n *\tis available to gethostbyname re-entrantly.\n */\n/* GETHOSTBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyname_r.\n *\tIt is zero if d_gethostbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyname_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYNAME_R\t/ **/\n#define GETHOSTBYNAME_R_PROTO 0\t/**/\n\n/* HAS_GETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the gethostent_r routine\n *\tis available to gethostent re-entrantly.\n */\n/* GETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of gethostent_r.\n *\tIt is zero if d_gethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostent_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTENT_R\t/ **/\n#define GETHOSTENT_R_PROTO 0\t/**/\n\n/* HAS_GETLOGIN_R:\n *\tThis symbol, if defined, indicates that the getlogin_r routine\n *\tis available to getlogin re-entrantly.\n */\n/* GETLOGIN_R_PROTO:\n *\tThis symbol encodes the prototype of getlogin_r.\n *\tIt is zero if d_getlogin_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getlogin_r\n *\tis defined.\n */\n/*#define HAS_GETLOGIN_R\t/ **/\n#define GETLOGIN_R_PROTO 0\t/**/\n\n/* HAS_GETNETBYADDR_R:\n *\tThis symbol, if defined, indicates that the getnetbyaddr_r routine\n *\tis available to getnetbyaddr re-entrantly.\n */\n/* GETNETBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyaddr_r.\n *\tIt is zero if d_getnetbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYADDR_R\t/ **/\n#define GETNETBYADDR_R_PROTO 0\t/**/\n\n/* HAS_GETNETBYNAME_R:\n *\tThis symbol, if defined, indicates that the getnetbyname_r routine\n *\tis available to getnetbyname re-entrantly.\n */\n/* GETNETBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyname_r.\n *\tIt is zero if d_getnetbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyname_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYNAME_R\t/ **/\n#define GETNETBYNAME_R_PROTO 0\t/**/\n\n/* HAS_GETNETENT_R:\n *\tThis symbol, if defined, indicates that the getnetent_r routine\n *\tis available to getnetent re-entrantly.\n */\n/* GETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of getnetent_r.\n *\tIt is zero if d_getnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetent_r\n *\tis defined.\n */\n/*#define HAS_GETNETENT_R\t/ **/\n#define GETNETENT_R_PROTO 0\t/**/\n\n/* HAS_GETPROTOBYNAME_R:\n *\tThis symbol, if defined, indicates that the getprotobyname_r routine\n *\tis available to getprotobyname re-entrantly.\n */\n/* GETPROTOBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobyname_r.\n *\tIt is zero if d_getprotobyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobyname_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNAME_R\t/ **/\n#define GETPROTOBYNAME_R_PROTO 0\t/**/\n\n/* HAS_GETPROTOBYNUMBER_R:\n *\tThis symbol, if defined, indicates that the getprotobynumber_r routine\n *\tis available to getprotobynumber re-entrantly.\n */\n/* GETPROTOBYNUMBER_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobynumber_r.\n *\tIt is zero if d_getprotobynumber_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobynumber_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNUMBER_R\t/ **/\n#define GETPROTOBYNUMBER_R_PROTO 0\t/**/\n\n/* HAS_GETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the getprotoent_r routine\n *\tis available to getprotoent re-entrantly.\n */\n/* GETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of getprotoent_r.\n *\tIt is zero if d_getprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotoent_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOENT_R\t/ **/\n#define GETPROTOENT_R_PROTO 0\t/**/\n\n/* HAS_GETPWENT_R:\n *\tThis symbol, if defined, indicates that the getpwent_r routine\n *\tis available to getpwent re-entrantly.\n */\n/* GETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of getpwent_r.\n *\tIt is zero if d_getpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwent_r\n *\tis defined.\n */\n/*#define HAS_GETPWENT_R\t/ **/\n#define GETPWENT_R_PROTO 0\t/**/\n\n/* HAS_GETPWNAM_R:\n *\tThis symbol, if defined, indicates that the getpwnam_r routine\n *\tis available to getpwnam re-entrantly.\n */\n/* GETPWNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getpwnam_r.\n *\tIt is zero if d_getpwnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwnam_r\n *\tis defined.\n */\n/*#define HAS_GETPWNAM_R\t/ **/\n#define GETPWNAM_R_PROTO 0\t/**/\n\n/* HAS_GETPWUID_R:\n *\tThis symbol, if defined, indicates that the getpwuid_r routine\n *\tis available to getpwuid re-entrantly.\n */\n/* GETPWUID_R_PROTO:\n *\tThis symbol encodes the prototype of getpwuid_r.\n *\tIt is zero if d_getpwuid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwuid_r\n *\tis defined.\n */\n/*#define HAS_GETPWUID_R\t/ **/\n#define GETPWUID_R_PROTO 0\t/**/\n\n/* HAS_GETSERVBYNAME_R:\n *\tThis symbol, if defined, indicates that the getservbyname_r routine\n *\tis available to getservbyname re-entrantly.\n */\n/* GETSERVBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyname_r.\n *\tIt is zero if d_getservbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyname_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYNAME_R\t/ **/\n#define GETSERVBYNAME_R_PROTO 0\t/**/\n\n/* HAS_GETSERVBYPORT_R:\n *\tThis symbol, if defined, indicates that the getservbyport_r routine\n *\tis available to getservbyport re-entrantly.\n */\n/* GETSERVBYPORT_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyport_r.\n *\tIt is zero if d_getservbyport_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyport_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYPORT_R\t/ **/\n#define GETSERVBYPORT_R_PROTO 0\t/**/\n\n/* HAS_GETSERVENT_R:\n *\tThis symbol, if defined, indicates that the getservent_r routine\n *\tis available to getservent re-entrantly.\n */\n/* GETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of getservent_r.\n *\tIt is zero if d_getservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservent_r\n *\tis defined.\n */\n/*#define HAS_GETSERVENT_R\t/ **/\n#define GETSERVENT_R_PROTO 0\t/**/\n\n/* HAS_GETSPNAM_R:\n *\tThis symbol, if defined, indicates that the getspnam_r routine\n *\tis available to getspnam re-entrantly.\n */\n/* GETSPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getspnam_r.\n *\tIt is zero if d_getspnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getspnam_r\n *\tis defined.\n */\n/*#define HAS_GETSPNAM_R\t/ **/\n#define GETSPNAM_R_PROTO 0\t/**/\n\n/* HAS_GMTIME_R:\n *\tThis symbol, if defined, indicates that the gmtime_r routine\n *\tis available to gmtime re-entrantly.\n */\n/* GMTIME_R_PROTO:\n *\tThis symbol encodes the prototype of gmtime_r.\n *\tIt is zero if d_gmtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gmtime_r\n *\tis defined.\n */\n/*#define HAS_GMTIME_R\t/ **/\n#define GMTIME_R_PROTO 0\t/**/\n\n/* HAS_LOCALECONV_L:\n *\tThis symbol, if defined, indicates that the localeconv_l routine is\n *\tavailable to query certain information about a locale.\n */\n/*#define HAS_LOCALECONV_L\t\t/ **/\n\n/* HAS_LOCALTIME_R:\n *\tThis symbol, if defined, indicates that the localtime_r routine\n *\tis available to localtime re-entrantly.\n */\n/* LOCALTIME_R_NEEDS_TZSET:\n *\tMany libc's localtime_r implementations do not call tzset,\n *\tmaking them differ from localtime(), and making timezone\n *\tchanges using $ENV{TZ} without explicitly calling tzset\n *\timpossible. This symbol makes us call tzset before localtime_r\n */\n/*#define LOCALTIME_R_NEEDS_TZSET / **/\n#ifdef LOCALTIME_R_NEEDS_TZSET\n#define L_R_TZSET tzset(),\n#else\n#define L_R_TZSET\n#endif\n\n/* LOCALTIME_R_PROTO:\n *\tThis symbol encodes the prototype of localtime_r.\n *\tIt is zero if d_localtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_localtime_r\n *\tis defined.\n */\n/*#define HAS_LOCALTIME_R\t/ **/\n#define LOCALTIME_R_PROTO 0\t/**/\n\n/* HAS_MBRLEN:\n *\tThis symbol, if defined, indicates that the mbrlen routine is\n *\tavailable to get the length of multi-byte character strings.\n */\n/*#define HAS_MBRLEN\t/ **/\n\n/* HAS_MBRTOWC:\n *\tThis symbol, if defined, indicates that the mbrtowc routine is\n *\tavailable to convert a multi-byte character into a wide character.\n */\n/*#define HAS_MBRTOWC\t/ **/\n\n/* HAS_THREAD_SAFE_NL_LANGINFO_L:\n *\tThis symbol, when defined, indicates presence of the nl_langinfo_l()\n *\tfunction, and that it is thread-safe.\n */\n/*#define HAS_THREAD_SAFE_NL_LANGINFO_L\t/ **/\n\n/* OLD_PTHREAD_CREATE_JOINABLE:\n *\tThis symbol, if defined, indicates how to create pthread\n *\tin joinable (aka undetached) state.  NOTE: not defined\n *\tif pthread.h already has defined PTHREAD_CREATE_JOINABLE\n *\t(the new version of the constant).\n *\tIf defined, known values are PTHREAD_CREATE_UNDETACHED\n *\tand __UNDETACHED.\n */\n/*#define OLD_PTHREAD_CREATE_JOINABLE  / **/\n\n/* HAS_PTHREAD_ATFORK:\n *\tThis symbol, if defined, indicates that the pthread_atfork routine\n *\tis available to setup fork handlers.\n */\n/*#define HAS_PTHREAD_ATFORK\t\t/ **/\n\n/* HAS_PTHREAD_YIELD:\n *\tThis symbol, if defined, indicates that the pthread_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/* SCHED_YIELD:\n *\tThis symbol defines the way to yield the execution of\n *\tthe current thread.  Known ways are sched_yield,\n *\tpthread_yield, and pthread_yield with NULL.\n */\n/* HAS_SCHED_YIELD:\n *\tThis symbol, if defined, indicates that the sched_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/*#define HAS_PTHREAD_YIELD\t/ **/\n#define SCHED_YIELD\tsched_yield()\t/**/\n/*#define HAS_SCHED_YIELD\t/ **/\n\n/* HAS_RANDOM_R:\n *\tThis symbol, if defined, indicates that the random_r routine\n *\tis available to random re-entrantly.\n */\n/* RANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of random_r.\n *\tIt is zero if d_random_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_random_r\n *\tis defined.\n */\n/*#define HAS_RANDOM_R\t/ **/\n#define RANDOM_R_PROTO 0\t/**/\n\n/* HAS_READDIR64_R:\n *\tThis symbol, if defined, indicates that the readdir64_r routine\n *\tis available to readdir64 re-entrantly.\n */\n/* READDIR64_R_PROTO:\n *\tThis symbol encodes the prototype of readdir64_r.\n *\tIt is zero if d_readdir64_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir64_r\n *\tis defined.\n */\n/*#define HAS_READDIR64_R\t/ **/\n#define READDIR64_R_PROTO 0\t/**/\n\n/* HAS_READDIR_R:\n *\tThis symbol, if defined, indicates that the readdir_r routine\n *\tis available to readdir re-entrantly.\n */\n/* READDIR_R_PROTO:\n *\tThis symbol encodes the prototype of readdir_r.\n *\tIt is zero if d_readdir_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir_r\n *\tis defined.\n */\n/*#define HAS_READDIR_R\t/ **/\n#define READDIR_R_PROTO 0\t/**/\n\n/* HAS_SETGRENT_R:\n *\tThis symbol, if defined, indicates that the setgrent_r routine\n *\tis available to setgrent re-entrantly.\n */\n/* SETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of setgrent_r.\n *\tIt is zero if d_setgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setgrent_r\n *\tis defined.\n */\n/*#define HAS_SETGRENT_R\t/ **/\n#define SETGRENT_R_PROTO 0\t/**/\n\n/* HAS_SETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the sethostent_r routine\n *\tis available to sethostent re-entrantly.\n */\n/* SETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of sethostent_r.\n *\tIt is zero if d_sethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_sethostent_r\n *\tis defined.\n */\n/*#define HAS_SETHOSTENT_R\t/ **/\n#define SETHOSTENT_R_PROTO 0\t/**/\n\n/* HAS_SETLOCALE_R:\n *\tThis symbol, if defined, indicates that the setlocale_r routine\n *\tis available to setlocale re-entrantly.\n */\n/* SETLOCALE_R_PROTO:\n *\tThis symbol encodes the prototype of setlocale_r.\n *\tIt is zero if d_setlocale_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setlocale_r\n *\tis defined.\n */\n/*#define HAS_SETLOCALE_R\t/ **/\n#define SETLOCALE_R_PROTO 0\t/**/\n\n/* HAS_SETNETENT_R:\n *\tThis symbol, if defined, indicates that the setnetent_r routine\n *\tis available to setnetent re-entrantly.\n */\n/* SETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of setnetent_r.\n *\tIt is zero if d_setnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setnetent_r\n *\tis defined.\n */\n/*#define HAS_SETNETENT_R\t/ **/\n#define SETNETENT_R_PROTO 0\t/**/\n\n/* HAS_SETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the setprotoent_r routine\n *\tis available to setprotoent re-entrantly.\n */\n/* SETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of setprotoent_r.\n *\tIt is zero if d_setprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setprotoent_r\n *\tis defined.\n */\n/*#define HAS_SETPROTOENT_R\t/ **/\n#define SETPROTOENT_R_PROTO 0\t/**/\n\n/* HAS_SETPWENT_R:\n *\tThis symbol, if defined, indicates that the setpwent_r routine\n *\tis available to setpwent re-entrantly.\n */\n/* SETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of setpwent_r.\n *\tIt is zero if d_setpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setpwent_r\n *\tis defined.\n */\n/*#define HAS_SETPWENT_R\t/ **/\n#define SETPWENT_R_PROTO 0\t/**/\n\n/* HAS_SETSERVENT_R:\n *\tThis symbol, if defined, indicates that the setservent_r routine\n *\tis available to setservent re-entrantly.\n */\n/* SETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of setservent_r.\n *\tIt is zero if d_setservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setservent_r\n *\tis defined.\n */\n/*#define HAS_SETSERVENT_R\t/ **/\n#define SETSERVENT_R_PROTO 0\t/**/\n\n/* HAS_SRAND48_R:\n *\tThis symbol, if defined, indicates that the srand48_r routine\n *\tis available to srand48 re-entrantly.\n */\n/* SRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of srand48_r.\n *\tIt is zero if d_srand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srand48_r\n *\tis defined.\n */\n/*#define HAS_SRAND48_R\t/ **/\n#define SRAND48_R_PROTO 0\t/**/\n\n/* HAS_SRANDOM_R:\n *\tThis symbol, if defined, indicates that the srandom_r routine\n *\tis available to srandom re-entrantly.\n */\n/* SRANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of srandom_r.\n *\tIt is zero if d_srandom_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srandom_r\n *\tis defined.\n */\n/*#define HAS_SRANDOM_R\t/ **/\n#define SRANDOM_R_PROTO 0\t/**/\n\n/* HAS_STRERROR_R:\n *\tThis symbol, if defined, indicates that the strerror_r routine\n *\tis available to strerror re-entrantly.\n */\n/* STRERROR_R_PROTO:\n *\tThis symbol encodes the prototype of strerror_r.\n *\tIt is zero if d_strerror_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_strerror_r\n *\tis defined.\n */\n/*#define HAS_STRERROR_R\t/ **/\n#define STRERROR_R_PROTO 0\t/**/\n\n/* HAS_STRTOD_L:\n *\tThis symbol, if defined, indicates that the strtod_l routine is\n *\tavailable to convert strings to long doubles.\n */\n/*#define HAS_STRTOD_L\t\t/ **/\n\n/* HAS_STRTOLD_L:\n *\tThis symbol, if defined, indicates that the strtold_l routine is\n *\tavailable to convert strings to long doubles.\n */\n/*#define HAS_STRTOLD_L\t\t/ **/\n\n/* HAS_TMPNAM_R:\n *\tThis symbol, if defined, indicates that the tmpnam_r routine\n *\tis available to tmpnam re-entrantly.\n */\n/* TMPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of tmpnam_r.\n *\tIt is zero if d_tmpnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_tmpnam_r\n *\tis defined.\n */\n/*#define HAS_TMPNAM_R\t/ **/\n#define TMPNAM_R_PROTO 0\t/**/\n\n/* HAS_TTYNAME_R:\n *\tThis symbol, if defined, indicates that the ttyname_r routine\n *\tis available to ttyname re-entrantly.\n */\n/* TTYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of ttyname_r.\n *\tIt is zero if d_ttyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ttyname_r\n *\tis defined.\n */\n/*#define HAS_TTYNAME_R\t/ **/\n#define TTYNAME_R_PROTO 0\t/**/\n\n/* I_MACH_CTHREADS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <mach/cthreads.h>.\n */\n/*#define   I_MACH_CTHREADS\t/ **/\n\n/* I_PTHREAD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pthread.h>.\n */\n/*#define   I_PTHREAD\t/ **/\n\n/* USE_ITHREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the interpreter-based threading implementation.\n */\n/* USE_5005THREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the 5.005-based threading implementation.\n *\tOnly valid up to 5.8.x.\n */\n/* OLD_PTHREADS_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use the old draft POSIX threads API.\n */\n/* USE_REENTRANT_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\ttry to use the various _r versions of library functions.\n *\tThis is extremely experimental.\n */\n/*#define\tUSE_5005THREADS\t\t/ **/\n/*#define\tUSE_ITHREADS\t\t/ **/\n#if defined(USE_5005THREADS) && !defined(USE_ITHREADS)\n#define\t\tUSE_THREADS\t\t/* until src is revised*/\n#endif\n/*#define\tOLD_PTHREADS_API\t\t/ **/\n/*#define\tUSE_REENTRANT_API\t/ **/\n\n/* HAS_TIME:\n *\tThis symbol, if defined, indicates that the time() routine exists.\n */\n/* Time_t:\n *\tThis symbol holds the type returned by time(). It can be long,\n *\tor time_t on BSD sites (in which case <sys/types.h> should be\n *\tincluded).\n */\n#define HAS_TIME\t\t/**/\n#define Time_t time_t\t\t/* Time type */\n\n/* HAS_TIMES:\n *\tThis symbol, if defined, indicates that the times() routine exists.\n *\tNote that this became obsolete on some systems (SUNOS), which now\n *\tuse getrusage(). It may be necessary to include <sys/times.h>.\n */\n/*#define HAS_TIMES\t\t/ **/\n\n/* Fpos_t:\n *\tThis symbol holds the type used to declare file positions in libc.\n *\tIt can be fpos_t, long, uint, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Fpos_t int\t\t/* File position type */\n\n/* Gid_t_f:\n *\tThis symbol defines the format string used for printing a Gid_t.\n */\n#define\tGid_t_f\t\t\"lu\"\t\t/**/\n\n/* Gid_t_sign:\n *\tThis symbol holds the signedness of a Gid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Gid_t_sign\t1\t\t/* GID sign */\n\n/* Gid_t_size:\n *\tThis symbol holds the size of a Gid_t in bytes.\n */\n#define Gid_t_size 4\t\t/* GID size */\n\n/* Gid_t:\n *\tThis symbol holds the return type of getgid() and the type of\n *\targument to setrgid() and related functions.  Typically,\n *\tit is the type of group ids in the kernel. It can be int, ushort,\n *\tgid_t, etc... It may be necessary to include <sys/types.h> to get\n *\tany typedef'ed information.\n */\n#define Gid_t int\t\t/* Type for getgid(), etc... */\n\n/* Off_t:\n *\tThis symbol holds the type used to declare offsets in the kernel.\n *\tIt can be int, long, off_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n/* LSEEKSIZE:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n/* Off_t_size:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n#define Off_t int\t\t/* <offset> type */\n#define LSEEKSIZE 4\t\t/* <offset> size */\n#define Off_t_size 4\t/* <offset> size */\n\n/* Mode_t:\n *\tThis symbol holds the type used to declare file modes\n *\tfor systems calls.  It is usually mode_t, but may be\n *\tint or unsigned short.  It may be necessary to include <sys/types.h>\n *\tto get any typedef'ed information.\n */\n#define Mode_t int\t /* file mode parameter for system calls */\n\n/* Pid_t:\n *\tThis symbol holds the type used to declare process ids in the kernel.\n *\tIt can be int, uint, pid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Pid_t int\t\t/* PID type */\n\n/* Size_t_size:\n *\tThis symbol holds the size of a Size_t in bytes.\n */\n#define Size_t_size 4\t\t/**/\n\n/* Size_t:\n *\tThis symbol holds the type used to declare length parameters\n *\tfor string functions.  It is usually size_t, but may be\n *\tunsigned long, int, etc.  It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Size_t size_t\t /* length parameter for string functions */\n\n/* Uid_t_f:\n *\tThis symbol defines the format string used for printing a Uid_t.\n */\n#define\tUid_t_f\t\t\"lu\"\t\t/**/\n\n/* Uid_t_sign:\n *\tThis symbol holds the signedness of a Uid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Uid_t_sign\t1\t\t/* UID sign */\n\n/* Uid_t_size:\n *\tThis symbol holds the size of a Uid_t in bytes.\n */\n#define Uid_t_size 4\t\t/* UID size */\n\n/* Uid_t:\n *\tThis symbol holds the type used to declare user ids in the kernel.\n *\tIt can be int, ushort, uid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Uid_t int\t\t/* UID type */\n\n#endif\n\n/* Generated from:\n * 6608de918c3c876975f74b684da2536ab1ee23459783d691ae02ce2526a497a7 config_h.SH\n * 2aaf18b9277e180fc5e5d60290ecb0c91fcac3531bd8825e5687a212daa586e9 uconfig.sh\n * ex: set ro: */\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cygwin/cygwin.c": "/*\n * Cygwin extras\n */\n\n#define PERLIO_NOT_STDIO 0\n#include \"EXTERN.h\"\n#include \"perl.h\"\n#undef USE_DYNAMIC_LOADING\n#include \"XSUB.h\"\n\n#include <unistd.h>\n#include <process.h>\n#include <sys/cygwin.h>\n#include <cygwin/version.h>\n#include <mntent.h>\n#include <alloca.h>\n#include <dlfcn.h>\n#if (CYGWIN_VERSION_API_MINOR >= 181)\n#include <wchar.h>\n#endif\n\n/*\n * pp_system() implemented via spawn()\n * - more efficient and useful when embedding Perl in non-Cygwin apps\n * - code mostly borrowed from djgpp.c\n */\nstatic int\ndo_spawnvp (const char *path, const char * const *argv)\n{\n    dTHX;\n    Sigsave_t ihand,qhand;\n    int childpid, result, status;\n\n    rsignal_save(SIGINT, (Sighandler_t) SIG_IGN, &ihand);\n    rsignal_save(SIGQUIT, (Sighandler_t) SIG_IGN, &qhand);\n    childpid = spawnvp(_P_NOWAIT,path,argv);\n    if (childpid < 0) {\n\tstatus = -1;\n\tif(ckWARN(WARN_EXEC))\n\t    Perl_warner(aTHX_ packWARN(WARN_EXEC),\"Can't spawn \\\"%s\\\": %s\",\n\t\t    path,Strerror (errno));\n    } else {\n\tdo {\n\t    result = wait4pid(childpid, &status, 0);\n\t} while (result == -1 && errno == EINTR);\n\tif(result < 0)\n\t    status = -1;\n    }\n    (void)rsignal_restore(SIGINT, &ihand);\n    (void)rsignal_restore(SIGQUIT, &qhand);\n    return status;\n}\n\nint\ndo_aspawn (SV *really, void **mark, void **sp)\n{\n    dTHX;\n    int  rc;\n    char const **a;\n    char *tmps,**argv;\n    STRLEN n_a;\n\n    if (sp<=mark)\n        return -1;\n    argv=(char**) alloca ((sp-mark+3)*sizeof (char*));\n    a=(char const **)argv;\n\n    while (++mark <= sp)\n        if (*mark)\n            *a++ = SvPVx((SV *)*mark, n_a);\n        else\n            *a++ = \"\";\n    *a = (char*)NULL;\n\n    if (argv[0][0] != '/' && argv[0][0] != '\\\\'\n        && !(argv[0][0] && argv[0][1] == ':'\n        && (argv[0][2] == '/' || argv[0][2] != '\\\\'))\n     ) /* will swawnvp use PATH? */\n         TAINT_ENV();\t/* testing IFS here is overkill, probably */\n\n    if (really && *(tmps = SvPV(really, n_a)))\n        rc=do_spawnvp (tmps,(const char * const *)argv);\n    else\n        rc=do_spawnvp (argv[0],(const char *const *)argv);\n\n    return rc;\n}\n\nint\ndo_spawn (char *cmd)\n{\n    dTHX;\n    char const **argv, **a;\n    char *s;\n    char const *metachars = \"$&*(){}[]'\\\";\\\\?>|<~`\\n\";\n    const char *command[4];\n    int result;\n\n    ENTER;\n    while (*cmd && isSPACE(*cmd))\n\tcmd++;\n\n    if (strBEGINs (cmd,\"/bin/sh\") && isSPACE (cmd[7]))\n        cmd+=5;\n\n    /* save an extra exec if possible */\n    /* see if there are shell metacharacters in it */\n    if (strstr (cmd,\"...\"))\n\tgoto doshell;\n    if (*cmd=='.' && isSPACE (cmd[1]))\n\tgoto doshell;\n    if (strBEGINs (cmd,\"exec\") && isSPACE (cmd[4]))\n\tgoto doshell;\n    for (s=cmd; *s && isALPHA (*s); s++) ;\t/* catch VAR=val gizmo */\n\tif (*s=='=')\n\t    goto doshell;\n\n    for (s=cmd; *s; s++)\n\tif (strchr (metachars,*s))\n\t{\n\t    if (*s=='\\n' && s[1]=='\\0')\n\t    {\n\t\t*s='\\0';\n\t\tbreak;\n\t    }\n\tdoshell:\n\t    command[0] = \"sh\";\n\t    command[1] = \"-c\";\n\t    command[2] = cmd;\n\t    command[3] = NULL;\n\n\t    result = do_spawnvp(\"sh\",command);\n\t    goto leave;\n\t}\n\n    Newx (argv, (s-cmd)/2+2, const char*);\n    SAVEFREEPV(argv);\n    cmd=savepvn (cmd,s-cmd);\n    SAVEFREEPV(cmd);\n    a=argv;\n    for (s=cmd; *s;) {\n\twhile (*s && isSPACE (*s)) s++;\n\tif (*s)\n\t    *(a++)=s;\n\twhile (*s && !isSPACE (*s)) s++;\n\tif (*s)\n\t    *s++='\\0';\n    }\n    *a = (char*)NULL;\n    if (!argv[0])\n        result = -1;\n    else\n\tresult = do_spawnvp(argv[0],(const char * const *)argv);\nleave:\n    LEAVE;\n    return result;\n}\n\n#if (CYGWIN_VERSION_API_MINOR >= 181)\nchar*\nwide_to_utf8(const wchar_t *wbuf)\n{\n    char *buf;\n    int wlen = 0;\n    char *oldlocale;\n    dVAR;\n\n    /* Here and elsewhere in this file, we have a critical section to prevent\n     * another thread from changing the locale out from under us.  XXX But why\n     * not just use uvchr_to_utf8? */\n    LOCALE_LOCK;\n\n    oldlocale = setlocale(LC_CTYPE, NULL);\n    setlocale(LC_CTYPE, \"utf-8\");\n\n    /* uvchr_to_utf8(buf, chr) or Encoding::_bytes_to_utf8(sv, \"UCS-2BE\"); */\n    wlen = wcsrtombs(NULL, (const wchar_t **)&wbuf, wlen, NULL);\n    buf = (char *) safemalloc(wlen+1);\n    wcsrtombs(buf, (const wchar_t **)&wbuf, wlen, NULL);\n\n    if (oldlocale) setlocale(LC_CTYPE, oldlocale);\n    else setlocale(LC_CTYPE, \"C\");\n\n    LOCALE_UNLOCK;\n\n    return buf;\n}\n\nwchar_t*\nutf8_to_wide(const char *buf)\n{\n    wchar_t *wbuf;\n    mbstate_t mbs;\n    char *oldlocale;\n    int wlen = sizeof(wchar_t)*strlen(buf);\n    dVAR;\n\n    LOCALE_LOCK;\n\n    oldlocale = setlocale(LC_CTYPE, NULL);\n\n    setlocale(LC_CTYPE, \"utf-8\");\n    wbuf = (wchar_t *) safemalloc(wlen);\n    /* utf8_to_uvchr_buf(pathname, pathname + wlen, wpath) or Encoding::_utf8_to_bytes(sv, \"UCS-2BE\"); */\n    wlen = mbsrtowcs(wbuf, (const char**)&buf, wlen, &mbs);\n\n    if (oldlocale) setlocale(LC_CTYPE, oldlocale);\n    else setlocale(LC_CTYPE, \"C\");\n\n    LOCALE_UNLOCK;\n\n    return wbuf;\n}\n#endif /* cygwin 1.7 */\n\n/* see also Cwd.pm */\nXS(Cygwin_cwd)\n{\n    dXSARGS;\n    char *cwd;\n\n    /* See http://rt.perl.org/rt3/Ticket/Display.html?id=38628 \n       There is Cwd->cwd() usage in the wild, and previous versions didn't die.\n     */\n    if(items > 1)\n\tPerl_croak(aTHX_ \"Usage: Cwd::cwd()\");\n    if((cwd = getcwd(NULL, -1))) {\n\tST(0) = sv_2mortal(newSVpv(cwd, 0));\n\tfree(cwd);\n\tSvTAINTED_on(ST(0));\n\tXSRETURN(1);\n    }\n    XSRETURN_UNDEF;\n}\n\nXS(XS_Cygwin_pid_to_winpid)\n{\n    dXSARGS;\n    dXSTARG;\n    pid_t pid, RETVAL;\n\n    if (items != 1)\n        Perl_croak(aTHX_ \"Usage: Cygwin::pid_to_winpid(pid)\");\n\n    pid = (pid_t)SvIV(ST(0));\n\n    if ((RETVAL = cygwin_internal(CW_CYGWIN_PID_TO_WINPID, pid)) > 0) {\n\tXSprePUSH; PUSHi((IV)RETVAL);\n        XSRETURN(1);\n    }\n    XSRETURN_UNDEF;\n}\n\nXS(XS_Cygwin_winpid_to_pid)\n{\n    dXSARGS;\n    dXSTARG;\n    pid_t pid, RETVAL;\n\n    if (items != 1)\n        Perl_croak(aTHX_ \"Usage: Cygwin::winpid_to_pid(pid)\");\n\n    pid = (pid_t)SvIV(ST(0));\n\n#if (CYGWIN_VERSION_API_MINOR >= 181)\n    RETVAL = cygwin_winpid_to_pid(pid);\n#else\n    RETVAL = cygwin32_winpid_to_pid(pid);\n#endif\n    if (RETVAL > 0) {\n        XSprePUSH; PUSHi((IV)RETVAL);\n        XSRETURN(1);\n    }\n    XSRETURN_UNDEF;\n}\n\nXS(XS_Cygwin_win_to_posix_path)\n\n{\n    dXSARGS;\n    int absolute_flag = 0;\n    STRLEN len;\n    int err = 0;\n    char *src_path;\n    char *posix_path;\n    int isutf8 = 0;\n\n    if (items < 1 || items > 2)\n        Perl_croak(aTHX_ \"Usage: Cygwin::win_to_posix_path(pathname, [absolute])\");\n\n    src_path = SvPV(ST(0), len);\n    if (items == 2)\n\tabsolute_flag = SvTRUE(ST(1));\n\n    if (!len)\n\tPerl_croak(aTHX_ \"can't convert empty path\");\n    isutf8 = SvUTF8(ST(0));\n\n#if (CYGWIN_VERSION_API_MINOR >= 181)\n    /* Check utf8 flag and use wide api then.\n       Size calculation: On overflow let cygwin_conv_path calculate the final size.\n     */\n    if (isutf8) {\n\tint what = absolute_flag ? CCP_WIN_W_TO_POSIX : CCP_WIN_W_TO_POSIX | CCP_RELATIVE;\n\tint wlen = sizeof(wchar_t)*(len + 260 + 1001);\n\twchar_t *wpath = (wchar_t *) safemalloc(sizeof(wchar_t)*len);\n\twchar_t *wbuf = (wchar_t *) safemalloc(wlen);\n\tif (!IN_BYTES) {\n\t    mbstate_t mbs;\n            char *oldlocale;\n            dVAR;\n\n            LOCALE_LOCK;\n\n            oldlocale = setlocale(LC_CTYPE, NULL);\n            setlocale(LC_CTYPE, \"utf-8\");\n\t    /* utf8_to_uvchr_buf(src_path, src_path + wlen, wpath) or Encoding::_utf8_to_bytes(sv, \"UCS-2BE\"); */\n\t    wlen = mbsrtowcs(wpath, (const char**)&src_path, wlen, &mbs);\n\t    if (wlen > 0)\n\t\terr = cygwin_conv_path(what, wpath, wbuf, wlen);\n            if (oldlocale) setlocale(LC_CTYPE, oldlocale);\n            else setlocale(LC_CTYPE, \"C\");\n\n            LOCALE_UNLOCK;\n\t} else { /* use bytes; assume already ucs-2 encoded bytestream */\n\t    err = cygwin_conv_path(what, src_path, wbuf, wlen);\n\t}\n\tif (err == ENOSPC) { /* our space assumption was wrong, not enough space */\n\t    int newlen = cygwin_conv_path(what, wpath, wbuf, 0);\n\t    wbuf = (wchar_t *) realloc(&wbuf, newlen);\n\t    err = cygwin_conv_path(what, wpath, wbuf, newlen);\n\t    wlen = newlen;\n\t}\n\t/* utf16_to_utf8(*p, *d, bytlen, *newlen) */\n\tposix_path = (char *) safemalloc(wlen*3);\n\tPerl_utf16_to_utf8(aTHX_ (U8*)&wpath, (U8*)posix_path, (I32)wlen*2, (I32*)&len);\n\t/*\n\twlen = wcsrtombs(NULL, (const wchar_t **)&wbuf, wlen, NULL);\n\tposix_path = (char *) safemalloc(wlen+1);\n\twcsrtombs(posix_path, (const wchar_t **)&wbuf, wlen, NULL);\n\t*/\n    } else {\n\tint what = absolute_flag ? CCP_WIN_A_TO_POSIX : CCP_WIN_A_TO_POSIX | CCP_RELATIVE;\n\tposix_path = (char *) safemalloc (len + 260 + 1001);\n\terr = cygwin_conv_path(what, src_path, posix_path, len + 260 + 1001);\n\tif (err == ENOSPC) { /* our space assumption was wrong, not enough space */\n\t    int newlen = cygwin_conv_path(what, src_path, posix_path, 0);\n\t    posix_path = (char *) realloc(&posix_path, newlen);\n\t    err = cygwin_conv_path(what, src_path, posix_path, newlen);\n\t}\n    }\n#else\n    posix_path = (char *) safemalloc (len + 260 + 1001);\n    if (absolute_flag)\n\terr = cygwin_conv_to_full_posix_path(src_path, posix_path);\n    else\n\terr = cygwin_conv_to_posix_path(src_path, posix_path);\n#endif\n    if (!err) {\n\tEXTEND(SP, 1);\n\tST(0) = sv_2mortal(newSVpv(posix_path, 0));\n\tif (isutf8) { /* src was utf-8, so result should also */\n\t    /* TODO: convert ANSI (local windows encoding) to utf-8 on cygwin-1.5 */\n\t    SvUTF8_on(ST(0));\n\t}\n\tsafefree(posix_path);\n        XSRETURN(1);\n    } else {\n\tsafefree(posix_path);\n\tXSRETURN_UNDEF;\n    }\n}\n\nXS(XS_Cygwin_posix_to_win_path)\n{\n    dXSARGS;\n    int absolute_flag = 0;\n    STRLEN len;\n    int err = 0;\n    char *src_path, *win_path;\n    int isutf8 = 0;\n\n    if (items < 1 || items > 2)\n        Perl_croak(aTHX_ \"Usage: Cygwin::posix_to_win_path(pathname, [absolute])\");\n\n    src_path = SvPVx(ST(0), len);\n    if (items == 2)\n\tabsolute_flag = SvTRUE(ST(1));\n\n    if (!len)\n\tPerl_croak(aTHX_ \"can't convert empty path\");\n    isutf8 = SvUTF8(ST(0));\n#if (CYGWIN_VERSION_API_MINOR >= 181)\n    /* Check utf8 flag and use wide api then.\n       Size calculation: On overflow let cygwin_conv_path calculate the final size.\n     */\n    if (isutf8) {\n\tint what = absolute_flag ? CCP_POSIX_TO_WIN_W : CCP_POSIX_TO_WIN_W | CCP_RELATIVE;\n\tint wlen = sizeof(wchar_t)*(len + 260 + 1001);\n\twchar_t *wpath = (wchar_t *) safemalloc(sizeof(wchar_t)*len);\n\twchar_t *wbuf = (wchar_t *) safemalloc(wlen);\n\tchar *oldlocale;\n        dVAR;\n\n        LOCALE_LOCK;\n\n\toldlocale = setlocale(LC_CTYPE, NULL);\n\tsetlocale(LC_CTYPE, \"utf-8\");\n\tif (!IN_BYTES) {\n\t    mbstate_t mbs;\n\t    /* utf8_to_uvchr_buf(src_path, src_path + wlen, wpath) or Encoding::_utf8_to_bytes(sv, \"UCS-2BE\"); */\n\t    wlen = mbsrtowcs(wpath, (const char**)&src_path, wlen, &mbs);\n\t    if (wlen > 0)\n\t\terr = cygwin_conv_path(what, wpath, wbuf, wlen);\n\t} else { /* use bytes; assume already ucs-2 encoded bytestream */\n\t    err = cygwin_conv_path(what, src_path, wbuf, wlen);\n\t}\n\tif (err == ENOSPC) { /* our space assumption was wrong, not enough space */\n\t    int newlen = cygwin_conv_path(what, wpath, wbuf, 0);\n\t    wbuf = (wchar_t *) realloc(&wbuf, newlen);\n\t    err = cygwin_conv_path(what, wpath, wbuf, newlen);\n\t    wlen = newlen;\n\t}\n\t/* also see utf8.c: Perl_utf16_to_utf8() or Encoding::_bytes_to_utf8(sv, \"UCS-2BE\"); */\n\twlen = wcsrtombs(NULL, (const wchar_t **)&wbuf, wlen, NULL);\n\twin_path = (char *) safemalloc(wlen+1);\n\twcsrtombs(win_path, (const wchar_t **)&wbuf, wlen, NULL);\n\tif (oldlocale) setlocale(LC_CTYPE, oldlocale);\n\telse setlocale(LC_CTYPE, \"C\");\n\n        LOCALE_UNLOCK;\n    } else {\n\tint what = absolute_flag ? CCP_POSIX_TO_WIN_A : CCP_POSIX_TO_WIN_A | CCP_RELATIVE;\n\twin_path = (char *) safemalloc(len + 260 + 1001);\n\terr = cygwin_conv_path(what, src_path, win_path, len + 260 + 1001);\n\tif (err == ENOSPC) { /* our space assumption was wrong, not enough space */\n\t    int newlen = cygwin_conv_path(what, src_path, win_path, 0);\n\t    win_path = (char *) realloc(&win_path, newlen);\n\t    err = cygwin_conv_path(what, src_path, win_path, newlen);\n\t}\n    }\n#else\n    if (isutf8)\n\tPerl_warn(aTHX_ \"can't convert utf8 path\");\n    win_path = (char *) safemalloc(len + 260 + 1001);\n    if (absolute_flag)\n\terr = cygwin_conv_to_full_win32_path(src_path, win_path);\n    else\n\terr = cygwin_conv_to_win32_path(src_path, win_path);\n#endif\n    if (!err) {\n\tEXTEND(SP, 1);\n\tST(0) = sv_2mortal(newSVpv(win_path, 0));\n\tif (isutf8) {\n\t    SvUTF8_on(ST(0));\n\t}\n\tsafefree(win_path);\n\tXSRETURN(1);\n    } else {\n\tsafefree(win_path);\n\tXSRETURN_UNDEF;\n    }\n}\n\nXS(XS_Cygwin_mount_table)\n{\n    dXSARGS;\n    struct mntent *mnt;\n\n    if (items != 0)\n        Perl_croak(aTHX_ \"Usage: Cygwin::mount_table\");\n    /* => array of [mnt_dir mnt_fsname mnt_type mnt_opts] */\n\n    setmntent (0, 0);\n    while ((mnt = getmntent (0))) {\n\tAV* av = newAV();\n\tav_push(av, newSVpvn(mnt->mnt_dir, strlen(mnt->mnt_dir)));\n\tav_push(av, newSVpvn(mnt->mnt_fsname, strlen(mnt->mnt_fsname)));\n\tav_push(av, newSVpvn(mnt->mnt_type, strlen(mnt->mnt_type)));\n\tav_push(av, newSVpvn(mnt->mnt_opts, strlen(mnt->mnt_opts)));\n\tXPUSHs(sv_2mortal(newRV_noinc((SV*)av)));\n    }\n    endmntent (0);\n    PUTBACK;\n}\n\nXS(XS_Cygwin_mount_flags)\n{\n    dXSARGS;\n    char *pathname;\n    char flags[PATH_MAX];\n    flags[0] = '\\0';\n\n    if (items != 1)\n        Perl_croak(aTHX_ \"Usage: Cygwin::mount_flags( mnt_dir | '/cygdrive' )\");\n\n    pathname = SvPV_nolen(ST(0));\n\n    if (strEQ(pathname, \"/cygdrive\")) {\n\tchar user[PATH_MAX];\n\tchar system[PATH_MAX];\n\tchar user_flags[PATH_MAX];\n\tchar system_flags[PATH_MAX];\n\n\tcygwin_internal (CW_GET_CYGDRIVE_INFO, user, system,\n\t\t\t user_flags, system_flags);\n\n        if (strlen(user) > 0) {\n            sprintf(flags, \"%s,cygdrive,%s\", user_flags, user);\n        } else {\n            sprintf(flags, \"%s,cygdrive,%s\", system_flags, system);\n        }\n\n\tST(0) = sv_2mortal(newSVpv(flags, 0));\n\tXSRETURN(1);\n\n    } else {\n\tstruct mntent *mnt;\n\tint found = 0;\n\tsetmntent (0, 0);\n\twhile ((mnt = getmntent (0))) {\n\t    if (strEQ(pathname, mnt->mnt_dir)) {\n\t\tstrcpy(flags, mnt->mnt_type);\n\t\tif (strlen(mnt->mnt_opts) > 0) {\n\t\t    strcat(flags, \",\");\n\t\t    strcat(flags, mnt->mnt_opts);\n\t\t}\n\t\tfound++;\n\t\tbreak;\n\t    }\n\t}\n\tendmntent (0);\n\n\t/* Check if arg is the current volume moint point if not default,\n\t * and then use CW_GET_CYGDRIVE_INFO also.\n\t */\n\tif (!found) {\n\t    char user[PATH_MAX];\n\t    char system[PATH_MAX];\n\t    char user_flags[PATH_MAX];\n\t    char system_flags[PATH_MAX];\n\n\t    cygwin_internal (CW_GET_CYGDRIVE_INFO, user, system,\n\t\t\t     user_flags, system_flags);\n\n\t    if (strlen(user) > 0) {\n\t\tif (strNE(user,pathname)) {\n\t\t    sprintf(flags, \"%s,cygdrive,%s\", user_flags, user);\n\t\t    found++;\n\t\t}\n\t    } else {\n\t\tif (strNE(user,pathname)) {\n\t\t    sprintf(flags, \"%s,cygdrive,%s\", system_flags, system);\n\t\t    found++;\n\t\t}\n\t    }\n\t}\n\tif (found) {\n\t    ST(0) = sv_2mortal(newSVpv(flags, 0));\n\t    XSRETURN(1);\n\t} else {\n\t    XSRETURN_UNDEF;\n\t}\n    }\n}\n\nXS(XS_Cygwin_is_binmount)\n{\n    dXSARGS;\n    char *pathname;\n\n    if (items != 1)\n        Perl_croak(aTHX_ \"Usage: Cygwin::is_binmount(pathname)\");\n\n    pathname = SvPV_nolen(ST(0));\n\n    ST(0) = boolSV(cygwin_internal(CW_GET_BINMODE, pathname));\n    XSRETURN(1);\n}\n\nXS(XS_Cygwin_sync_winenv){ cygwin_internal(CW_SYNC_WINENV); }\n\nvoid\ninit_os_extras(void)\n{\n    dTHX;\n    char const *file = __FILE__;\n    void *handle;\n\n    newXS(\"Cwd::cwd\", Cygwin_cwd, file);\n    newXSproto(\"Cygwin::winpid_to_pid\", XS_Cygwin_winpid_to_pid, file, \"$\");\n    newXSproto(\"Cygwin::pid_to_winpid\", XS_Cygwin_pid_to_winpid, file, \"$\");\n    newXSproto(\"Cygwin::win_to_posix_path\", XS_Cygwin_win_to_posix_path, file, \"$;$\");\n    newXSproto(\"Cygwin::posix_to_win_path\", XS_Cygwin_posix_to_win_path, file, \"$;$\");\n    newXSproto(\"Cygwin::mount_table\", XS_Cygwin_mount_table, file, \"\");\n    newXSproto(\"Cygwin::mount_flags\", XS_Cygwin_mount_flags, file, \"$\");\n    newXSproto(\"Cygwin::is_binmount\", XS_Cygwin_is_binmount, file, \"$\");\n    newXS(\"Cygwin::sync_winenv\", XS_Cygwin_sync_winenv, file);\n\n    /* Initialize Win32CORE if it has been statically linked. */\n    handle = dlopen(NULL, RTLD_LAZY);\n    if (handle) {\n        void (*pfn_init)(pTHX);\n        pfn_init = (void (*)(pTHX))dlsym(handle, \"init_Win32CORE\");\n        if (pfn_init)\n            pfn_init(aTHX);\n        dlclose(handle);\n    }\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/ext/DynaLoader/dl_dlopen.xs": "/* dl_dlopen.xs\n * \n * Platform:\tSunOS/Solaris, possibly others which use dlopen.\n * Author:\tPaul Marquess (Paul.Marquess@btinternet.com)\n * Created:\t10th July 1994\n *\n * Modified:\n * 15th July 1994     - Added code to explicitly save any error messages.\n * 3rd August 1994    - Upgraded to v3 spec.\n * 9th August 1994    - Changed to use IV\n * 10th August 1994   - Tim Bunce: Added RTLD_LAZY, switchable debugging,\n *                      basic FreeBSD support, removed ClearError\n * 29th February 2000 - Alan Burlison: Added functionality to close dlopen'd\n *                      files when the interpreter exits\n * 2015-03-12         - rurban: Added optional 3rd dl_find_symbol argument\n *\n */\n\n/* Porting notes:\n\n\n   Definition of Sunos dynamic Linking functions\n   =============================================\n   In order to make this implementation easier to understand here is a\n   quick definition of the SunOS Dynamic Linking functions which are\n   used here.\n\n   dlopen\n   ------\n     void *\n     dlopen(path, mode)\n     char * path; \n     int    mode;\n\n     This function takes the name of a dynamic object file and returns\n     a descriptor which can be used by dlsym later. It returns NULL on\n     error.\n\n     The mode parameter must be set to 1 for Solaris 1 and to\n     RTLD_LAZY (==2) on Solaris 2.\n\n\n   dlclose\n   -------\n     int\n     dlclose(handle)\n     void * handle;\n\n     This function takes the handle returned by a previous invocation of\n     dlopen and closes the associated dynamic object file.  It returns zero\n     on success, and non-zero on failure.\n\n\n   dlsym\n   ------\n     void *\n     dlsym(handle, symbol)\n     void * handle; \n     char * symbol;\n\n     Takes the handle returned from dlopen and the name of a symbol to\n     get the address of. If the symbol was found a pointer is\n     returned.  It returns NULL on error. If DL_PREPEND_UNDERSCORE is\n     defined an underscore will be added to the start of symbol. This\n     is required on some platforms (freebsd).\n\n   dlerror\n   ------\n     char * dlerror()\n\n     Returns a null-terminated string which describes the last error\n     that occurred with either dlopen or dlsym. After each call to\n     dlerror the error message will be reset to a null pointer. The\n     SaveError function is used to save the error as soon as it happens.\n\n\n   Return Types\n   ============\n   In this implementation the two functions, dl_load_file &\n   dl_find_symbol, return void *. This is because the underlying SunOS\n   dynamic linker calls also return void *.  This is not necessarily\n   the case for all architectures. For example, some implementation\n   will want to return a char * for dl_load_file.\n\n   If void * is not appropriate for your architecture, you will have to\n   change the void * to whatever you require. If you are not certain of\n   how Perl handles C data types, I suggest you start by consulting\t\n   Dean Roerich's Perl 5 API document. Also, have a look in the typemap \n   file (in the ext directory) for a fairly comprehensive list of types \n   that are already supported. If you are completely stuck, I suggest you\n   post a message to perl5-porters.\n\n   Remember when you are making any changes that the return value from \n   dl_load_file is used as a parameter in the dl_find_symbol \n   function. Also the return value from find_symbol is used as a parameter \n   to install_xsub.\n\n\n   Dealing with Error Messages\n   ============================\n   In order to make the handling of dynamic linking errors as generic as\n   possible you should store any error messages associated with your\n   implementation with the StoreError function.\n\n   In the case of SunOS the function dlerror returns the error message \n   associated with the last dynamic link error. As the SunOS dynamic \n   linker functions dlopen & dlsym both return NULL on error every call \n   to a SunOS dynamic link routine is coded like this\n\n\tRETVAL = dlopen(filename, 1) ;\n\tif (RETVAL == NULL)\n\t    SaveError(\"%s\",dlerror()) ;\n\n   Note that SaveError() takes a printf format string. Use a \"%s\" as\n   the first parameter if the error may contain any % characters.\n\n*/\n\n#define PERL_NO_GET_CONTEXT\n#define PERL_EXT\n\n#include \"EXTERN.h\"\n#define PERL_IN_DL_DLOPEN_XS\n#include \"perl.h\"\n#include \"XSUB.h\"\n\n#ifdef I_DLFCN\n#include <dlfcn.h>\t/* the dynamic linker include file for Sunos/Solaris */\n#else\n#include <nlist.h>\n#include <link.h>\n#endif\n\n#ifndef RTLD_LAZY\n# define RTLD_LAZY 1\t/* Solaris 1 */\n#endif\n\n#ifndef HAS_DLERROR\n# ifdef __NetBSD__\n#  define dlerror() strerror(errno)\n# else\n#  define dlerror() \"Unknown error - dlerror() not implemented\"\n# endif\n#endif\n\n\n#include \"dlutils.c\"\t/* SaveError() etc\t*/\n\n\nstatic void\ndl_private_init(pTHX)\n{\n    (void)dl_generic_private_init(aTHX);\n}\n\nMODULE = DynaLoader\tPACKAGE = DynaLoader\n\nBOOT:\n    (void)dl_private_init(aTHX);\n\n\nvoid\ndl_load_file(filename, flags=0)\n    char *\tfilename\n    int\t\tflags\n  PREINIT:\n    int mode = RTLD_LAZY;\n    void *handle;\n  CODE:\n{\n#if defined(DLOPEN_WONT_DO_RELATIVE_PATHS)\n    char pathbuf[PATH_MAX + 2];\n    if (*filename != '/' && strchr(filename, '/')) {\n        const size_t filename_len = strlen(filename);\n        if (getcwd(pathbuf, PATH_MAX - filename_len)) {\n            const size_t path_len = strlen(pathbuf);\n            pathbuf[path_len] = '/';\n            filename = (char *) memcpy(pathbuf + path_len + 1, filename, filename_len + 1);\n\t}\n    }\n#endif\n#ifdef RTLD_NOW\n    {\n\tdMY_CXT;\n\tif (dl_nonlazy)\n\t    mode = RTLD_NOW;\n    }\n#endif\n    if (flags & 0x01)\n#ifdef RTLD_GLOBAL\n\tmode |= RTLD_GLOBAL;\n#else\n\tPerl_warn(aTHX_ \"Can't make loaded symbols global on this platform while loading %s\",filename);\n#endif\n    DLDEBUG(1,PerlIO_printf(Perl_debug_log, \"dl_load_file(%s,%x):\\n\", filename,flags));\n    handle = dlopen(filename, mode) ;\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \" libref=%lx\\n\", (unsigned long) handle));\n    ST(0) = sv_newmortal() ;\n    if (handle == NULL)\n\tSaveError(aTHX_ \"%s\",dlerror()) ;\n    else\n\tsv_setiv( ST(0), PTR2IV(handle));\n}\n\n\nint\ndl_unload_file(libref)\n    void *\tlibref\n  CODE:\n    DLDEBUG(1,PerlIO_printf(Perl_debug_log, \"dl_unload_file(%lx):\\n\", PTR2ul(libref)));\n    RETVAL = (dlclose(libref) == 0 ? 1 : 0);\n    if (!RETVAL)\n        SaveError(aTHX_ \"%s\", dlerror()) ;\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \" retval = %d\\n\", RETVAL));\n  OUTPUT:\n    RETVAL\n\n\nvoid\ndl_find_symbol(libhandle, symbolname, ign_err=0)\n    void *\tlibhandle\n    char *\tsymbolname\n    int\t        ign_err\n    PREINIT:\n    void *sym;\n    CODE:\n#ifdef DLSYM_NEEDS_UNDERSCORE\n    symbolname = Perl_form_nocontext(\"_%s\", symbolname);\n#endif\n    DLDEBUG(2, PerlIO_printf(Perl_debug_log,\n\t\t\t     \"dl_find_symbol(handle=%lx, symbol=%s)\\n\",\n\t\t\t     (unsigned long) libhandle, symbolname));\n    sym = dlsym(libhandle, symbolname);\n    DLDEBUG(2, PerlIO_printf(Perl_debug_log,\n\t\t\t     \"  symbolref = %lx\\n\", (unsigned long) sym));\n    ST(0) = sv_newmortal();\n    if (sym == NULL) {\n        if (!ign_err)\n\t    SaveError(aTHX_ \"%s\", dlerror());\n    } else\n\tsv_setiv( ST(0), PTR2IV(sym));\n\n\nvoid\ndl_undef_symbols()\n    CODE:\n\n\n\n# These functions should not need changing on any platform:\n\nvoid\ndl_install_xsub(perl_name, symref, filename=\"$Package\")\n    char *\t\tperl_name\n    void *\t\tsymref \n    const char *\tfilename\n    CODE:\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \"dl_install_xsub(name=%s, symref=%\" UVxf \")\\n\",\n\t\tperl_name, PTR2UV(symref)));\n    ST(0) = sv_2mortal(newRV((SV*)newXS_flags(perl_name,\n\t\t\t\t\t      DPTR2FPTR(XSUBADDR_t, symref),\n\t\t\t\t\t      filename, NULL,\n\t\t\t\t\t      XS_DYNAMIC_FILENAME)));\n\n\nSV *\ndl_error()\n    CODE:\n    dMY_CXT;\n    RETVAL = newSVsv(MY_CXT.x_dl_last_error);\n    OUTPUT:\n    RETVAL\n\n#if defined(USE_ITHREADS)\n\nvoid\nCLONE(...)\n    CODE:\n    MY_CXT_CLONE;\n\n    PERL_UNUSED_VAR(items);\n\n    /* MY_CXT_CLONE just does a memcpy on the whole structure, so to avoid\n     * using Perl variables that belong to another thread, we create our \n     * own for this thread.\n     */\n    MY_CXT.x_dl_last_error = newSVpvs(\"\");\n\n#endif\n\n# end.\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/ext/DynaLoader/dl_dyld.xs": "/* dl_dyld.xs\n *\n * Platform:\tDarwin (Mac OS)\n * Author:\tWilfredo Sanchez <wsanchez@apple.com>\n * Based on:\tdl_next.xs by Paul Marquess\n * Based on:\tdl_dlopen.xs by Anno Siegel\n * Created:\tAug 15th, 1994\n *\n */\n\n/*\n *  And Gandalf said: 'Many folk like to know beforehand what is to\n *  be set on the table; but those who have laboured to prepare the\n *  feast like to keep their secret; for wonder makes the words of\n *  praise louder.'\n *\n *     [p.970 of _The Lord of the Rings_, VI/v: \"The Steward and the King\"]\n */\n\n/* Porting notes:\n\ndl_dyld.xs is based on dl_next.xs by Anno Siegel.\n\ndl_next.xs is in turn a port from dl_dlopen.xs by Paul Marquess.  It\nshould not be used as a base for further ports though it may be used\nas an example for how dl_dlopen.xs can be ported to other platforms.\n\nThe method used here is just to supply the sun style dlopen etc.\nfunctions in terms of NeXT's/Apple's dyld.  The xs code proper is\nunchanged from Paul's original.\n\nThe port could use some streamlining.  For one, error handling could\nbe simplified.\n\nThis should be useable as a replacement for dl_next.xs, but it has not\nbeen tested on NeXT platforms.\n\n  Wilfredo Sanchez\n\n*/\n\n#define PERL_EXT\n#include \"EXTERN.h\"\n#define PERL_IN_DL_DYLD_XS\n#include \"perl.h\"\n#include \"XSUB.h\"\n\n#include \"dlutils.c\"\t/* for SaveError() etc */\n\n#undef environ\n#undef bool\n#import <mach-o/dyld.h>\n\nstatic char *dlerror()\n{\n    dTHX;\n    dMY_CXT;\n    return dl_last_error;\n}\n\nstatic int dlclose(void *handle) /* stub only */\n{\n    return 0;\n}\n\nenum dyldErrorSource\n{\n    OFImage,\n};\n\nstatic void TranslateError\n    (const char *path, enum dyldErrorSource type, int number)\n{\n    dTHX;\n    dMY_CXT;\n    char *error;\n    unsigned int index;\n    static char *OFIErrorStrings[] =\n    {\n\t\"%s(%d): Object Image Load Failure\\n\",\n\t\"%s(%d): Object Image Load Success\\n\",\n\t\"%s(%d): Not a recognisable object file\\n\",\n\t\"%s(%d): No valid architecture\\n\",\n\t\"%s(%d): Object image has an invalid format\\n\",\n\t\"%s(%d): Invalid access (permissions?)\\n\",\n\t\"%s(%d): Unknown error code from NSCreateObjectFileImageFromFile\\n\",\n    };\n#define NUM_OFI_ERRORS (sizeof(OFIErrorStrings) / sizeof(OFIErrorStrings[0]))\n\n    switch (type)\n    {\n    case OFImage:\n\tindex = number;\n\tif (index > NUM_OFI_ERRORS - 1)\n\t    index = NUM_OFI_ERRORS - 1;\n\terror = Perl_form_nocontext(OFIErrorStrings[index], path, number);\n\tbreak;\n\n    default:\n\terror = Perl_form_nocontext(\"%s(%d): Totally unknown error type %d\\n\",\n\t\t     path, number, type);\n\tbreak;\n    }\n    sv_setpv(MY_CXT.x_dl_last_error, error);\n}\n\nstatic char *dlopen(char *path, int mode /* mode is ignored */)\n{\n    int dyld_result;\n    NSObjectFileImage ofile;\n    NSModule handle = NULL;\n\n    dyld_result = NSCreateObjectFileImageFromFile(path, &ofile);\n    if (dyld_result != NSObjectFileImageSuccess)\n\tTranslateError(path, OFImage, dyld_result);\n    else\n    {\n    \t// NSLinkModule will cause the run to abort on any link errors\n\t// not very friendly but the error recovery functionality is limited.\n\thandle = NSLinkModule(ofile, path, TRUE);\n\tNSDestroyObjectFileImage(ofile);\n    }\n\n    return handle;\n}\n\nstatic void *\ndlsym(void *handle, char *symbol)\n{\n    void *addr;\n\n    if (NSIsSymbolNameDefined(symbol))\n\taddr = NSAddressOfSymbol(NSLookupAndBindSymbol(symbol));\n    else\n    \taddr = NULL;\n\n    return addr;\n}\n\n\n\n/* ----- code from dl_dlopen.xs below here ----- */\n\n\nstatic void\ndl_private_init(pTHX)\n{\n    (void)dl_generic_private_init(aTHX);\n}\n\nMODULE = DynaLoader     PACKAGE = DynaLoader\n\nBOOT:\n    (void)dl_private_init(aTHX);\n\n\n\nvoid *\ndl_load_file(filename, flags=0)\n    char *\tfilename\n    int\t\tflags\n    PREINIT:\n    int mode = 1;\n    CODE:\n    DLDEBUG(1,PerlIO_printf(Perl_debug_log, \"dl_load_file(%s,%x):\\n\", filename,flags));\n    if (flags & 0x01)\n\tPerl_warn(aTHX_ \"Can't make loaded symbols global on this platform while loading %s\",filename);\n    RETVAL = dlopen(filename, mode) ;\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \" libref=%x\\n\", RETVAL));\n    ST(0) = sv_newmortal() ;\n    if (RETVAL == NULL)\n\tSaveError(aTHX_ \"%s\",dlerror()) ;\n    else\n\tsv_setiv( ST(0), PTR2IV(RETVAL) );\n\n\nvoid *\ndl_find_symbol(libhandle, symbolname, ign_err=0)\n    void *\t\tlibhandle\n    char *\t\tsymbolname\n    int\t        \tign_err\n    CODE:\n    symbolname = Perl_form_nocontext(\"_%s\", symbolname);\n    DLDEBUG(2, PerlIO_printf(Perl_debug_log,\n\t\t\t     \"dl_find_symbol(handle=%lx, symbol=%s)\\n\",\n\t\t\t     (unsigned long) libhandle, symbolname));\n    RETVAL = dlsym(libhandle, symbolname);\n    DLDEBUG(2, PerlIO_printf(Perl_debug_log,\n\t\t\t     \"  symbolref = %lx\\n\", (unsigned long) RETVAL));\n    ST(0) = sv_newmortal() ;\n    if (RETVAL == NULL) {\n        if (!ign_err)\n\t    SaveError(aTHX_ \"%s\",dlerror()) ;\n    } else\n\tsv_setiv( ST(0), PTR2IV(RETVAL) );\n\n\nvoid\ndl_undef_symbols()\n    PPCODE:\n\n\n\n# These functions should not need changing on any platform:\n\nvoid\ndl_install_xsub(perl_name, symref, filename=\"$Package\")\n    char *\tperl_name\n    void *\tsymref\n    const char *\tfilename\n    CODE:\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \"dl_install_xsub(name=%s, symref=%x)\\n\",\n\t    perl_name, symref));\n    ST(0) = sv_2mortal(newRV((SV*)newXS_flags(perl_name,\n\t\t\t\t\t      (void(*)(pTHX_ CV *))symref,\n\t\t\t\t\t      filename, NULL,\n\t\t\t\t\t      XS_DYNAMIC_FILENAME)));\n\n\nSV *\ndl_error()\n    CODE:\n    dMY_CXT;\n    RETVAL = newSVsv(MY_CXT.x_dl_last_error);\n    OUTPUT:\n    RETVAL\n\n#if defined(USE_ITHREADS)\n\nvoid\nCLONE(...)\n    CODE:\n    MY_CXT_CLONE;\n\n    PERL_UNUSED_VAR(items);\n\n    /* MY_CXT_CLONE just does a memcpy on the whole structure, so to avoid\n     * using Perl variables that belong to another thread, we create our \n     * own for this thread.\n     */\n    MY_CXT.x_dl_last_error = newSVpvs(\"\");\n\n#endif\n\n# end.\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/ext/DynaLoader/dl_dllload.xs": "/* dl_dllload.xs\n *\n * Platform:\tOS/390, possibly others that use dllload(),dllfree() (VM/ESA?).\n * Authors:\tJohn Goodyear && Peter Prymmer\n * Created:     28 October 2000\n * Modified:\n * 16 January 2001 - based loosely on dl_dlopen.xs.\n */\n \n/* Porting notes:\n\n   OS/390 Dynamic Loading functions: \n\n   dllload\n   -------\n     dllhandle * dllload(const char *dllName)\n\n     This function takes the name of a dynamic object file and returns\n     a descriptor which can be used by dlllqueryfn() and/or dllqueryvar() \n     later.  If dllName contains a slash, it is used to locate the dll.\n     If not then the LIBPATH environment variable is used to\n     search for the requested dll (at least within the HFS).\n     It returns NULL on error and sets errno.\n\n   dllfree\n   -------\n     int dllfree(dllhandle *handle);\n\n     dllfree() decrements the load count for the dll and frees\n     it if the count is 0.  It returns zero on success, and \n     non-zero on failure.\n\n   dllqueryfn && dllqueryvar\n   -------------------------\n     void (* dllqueryfn(dllhandle *handle, const char *function))();\n     void * dllqueryvar(dllhandle *handle, const char *symbol);\n\n     dllqueryfn() takes the handle returned from dllload() and the name \n     of a function to get the address of.  If the function was found \n     a pointer is returned, otherwise NULL is returned.\n\n     dllqueryvar() takes the handle returned from dllload() and the name \n     of a symbol to get the address of.  If the variable was found a \n     pointer is returned, otherwise NULL is returned.\n\n     The XS dl_find_symbol() first calls dllqueryfn().  If it fails\n     dlqueryvar() is then called.\n\n   strerror\n   --------\n     char * strerror(int errno)\n\n     Returns a null-terminated string which describes the last error\n     that occurred with other functions (not necessarily unique to\n     dll loading).\n\n   Return Types\n   ============\n   In this implementation the two functions, dl_load_file() &&\n   dl_find_symbol(), return (void *).  This is primarily because the \n   dlopen() && dlsym() style dynamic linker calls return (void *).\n   We suspect that casting to (void *) may be easier than teaching XS\n   typemaps about the (dllhandle *) type.\n\n   Dealing with Error Messages\n   ===========================\n   In order to make the handling of dynamic linking errors as generic as\n   possible you should store any error messages associated with your\n   implementation with the StoreError function.\n\n   In the case of OS/390 the function strerror(errno) returns the error \n   message associated with the last dynamic link error.  As the S/390 \n   dynamic linker functions dllload() && dllqueryvar() both return NULL \n   on error every call to an S/390 dynamic link routine is coded \n   like this:\n\n\tRETVAL = dllload(filename) ;\n\tif (RETVAL == NULL)\n\t    SaveError(\"%s\",strerror(errno)) ;\n\n   Note that SaveError() takes a printf format string. Use a \"%s\" as\n   the first parameter if the error may contain any % characters.\n\n   Other comments within the dl_dlopen.xs file may be helpful as well.\n*/\n\n#define PERL_EXT\n#include \"EXTERN.h\"\n#define PERL_IN_DL_DLLLOAD_XS\n#include \"perl.h\"\n#include \"XSUB.h\"\n\n#include <dll.h>\t/* the dynamic linker include file for S/390 */\n#include <errno.h>\t/* strerror() and friends */\n\n#include \"dlutils.c\"\t/* SaveError() etc */\n\nstatic void\ndl_private_init(pTHX)\n{\n    (void)dl_generic_private_init(aTHX);\n}\n\nMODULE = DynaLoader\tPACKAGE = DynaLoader\n\nBOOT:\n    (void)dl_private_init(aTHX);\n\n\nvoid\ndl_load_file(filename, flags=0)\n    char *\tfilename\n    int\t\tflags\n  PREINIT:\n    int mode = 0;\n    void *retv;\n  PPCODE:\n    DLDEBUG(1,PerlIO_printf(Perl_debug_log, \"dl_load_file(%s,%x):\\n\", filename,flags));\n    /* add a (void *) dllload(filename) ; cast if needed */\n    retv = dllload(filename) ;\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \" libref=%lx\\n\", (unsigned long) retv));\n    ST(0) = sv_newmortal() ;\n    if (retv == NULL)\n\tSaveError(aTHX_ \"%s\",strerror(errno)) ;\n    else\n\tsv_setiv( ST(0), PTR2IV(retv));\n    XSRETURN(1);\n\n\nint\ndl_unload_file(libref)\n    void *\tlibref\n  CODE:\n    DLDEBUG(1,PerlIO_printf(Perl_debug_log, \"dl_unload_file(%lx):\\n\", PTR2ul(libref)));\n    /* RETVAL = (dllfree((dllhandle *)libref) == 0 ? 1 : 0); */\n    RETVAL = (dllfree(libref) == 0 ? 1 : 0);\n    if (!RETVAL)\n        SaveError(aTHX_ \"%s\", strerror(errno)) ;\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \" retval = %d\\n\", RETVAL));\n  OUTPUT:\n    RETVAL\n\n\nvoid\ndl_find_symbol(libhandle, symbolname, ign_err=0)\n    void *\tlibhandle\n    char *\tsymbolname\n    int\t        ign_err\n    PREINIT:\n    void *retv;\n    PPCODE:\n    DLDEBUG(2, PerlIO_printf(Perl_debug_log,\n\t\t\t     \"dl_find_symbol(handle=%lx, symbol=%s)\\n\",\n\t\t\t     (unsigned long) libhandle, symbolname));\n    if((retv = (void*)dllqueryfn(libhandle, symbolname)) == NULL)\n    retv  = dllqueryvar(libhandle, symbolname);\n    DLDEBUG(2, PerlIO_printf(Perl_debug_log,\n\t\t\t     \"  symbolref = %lx\\n\", (unsigned long) retv));\n    ST(0) = sv_newmortal();\n    if (retv == NULL) {\n\tif (!ign_err) SaveError(aTHX_ \"%s\", strerror(errno));\n    }\n    else\n\tsv_setiv( ST(0), PTR2IV(retv));\n    XSRETURN(1);\n\n\nvoid\ndl_undef_symbols()\n    CODE:\n\n\n\n# These functions should not need changing on any platform:\n\nvoid\ndl_install_xsub(perl_name, symref, filename=\"$Package\")\n    char *\t\tperl_name\n    void *\t\tsymref \n    const char *\tfilename\n    PPCODE:\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \"dl_install_xsub(name=%s, symref=%lx)\\n\",\n\t\tperl_name, (unsigned long) symref));\n    ST(0) = sv_2mortal(newRV((SV*)newXS_flags(perl_name,\n\t\t\t\t\t      (void(*)(pTHX_ CV *))symref,\n\t\t\t\t\t      filename, NULL,\n\t\t\t\t\t      XS_DYNAMIC_FILENAME)));\n    XSRETURN(1);\n\n\nSV *\ndl_error()\n    CODE:\n    dMY_CXT;\n    RETVAL = newSVsv(MY_CXT.x_dl_last_error);\n    OUTPUT:\n    RETVAL\n\n#if defined(USE_ITHREADS)\n\nvoid\nCLONE(...)\n    CODE:\n    MY_CXT_CLONE;\n\n    PERL_UNUSED_VAR(items);\n\n    /* MY_CXT_CLONE just does a memcpy on the whole structure, so to avoid\n     * using Perl variables that belong to another thread, we create our \n     * own for this thread.\n     */\n    MY_CXT.x_dl_last_error = newSVpvs(\"\");\n\n#endif\n\n# end.\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/ext/DynaLoader/dl_aix.xs": "/* dl_aix.xs\n *\n * Written: 8/31/94 by Wayne Scott (wscott@ichips.intel.com)\n *\n *  All I did was take Jens-Uwe Mager's libdl emulation library for\n *  AIX and merged it with the dl_dlopen.xs file to create a dynamic library\n *  package that works for AIX.\n *\n *  I did change all malloc's, free's, strdup's, calloc's to use the perl\n *  equilvant.  I also removed some stuff we will not need.  Call fini()\n *  on startup...   It can probably be trimmed more.\n */\n\n#define PERLIO_NOT_STDIO 0\n#define PERL_EXT\n#define PERL_IN_DL_AIX_XS\n\n/*\n * On AIX 4.3 and above the emulation layer is not needed any more, and\n * indeed if perl uses its emulation and perl is linked into apache\n * which is supposed to use the native dlopen conflicts arise.\n * Jens-Uwe Mager jum@helios.de\n */\n#ifdef USE_NATIVE_DLOPEN\n\n#include \"EXTERN.h\"\n#include \"perl.h\"\n#include \"XSUB.h\"\n#include <dlfcn.h>\n\n#include \"dlutils.c\"\t/* SaveError() etc\t*/\n\n#else\n\n/*\n * @(#)dlfcn.c\t1.5 revision of 93/02/14  20:14:17\n * This is an unpublished work copyright (c) 1992 Helios Software GmbH\n * 3000 Hannover 1, Germany\n */\n#include \"EXTERN.h\"\n#include \"perl.h\"\n#include \"XSUB.h\"\n\n/* When building as a 64-bit binary on AIX, define this to get the\n * correct structure definitions.  Also determines the field-name\n * macros and gates some logic in readEntries().  -- Steven N. Hirsch\n * <hirschs@btv.ibm.com> */\n#ifdef USE_64_BIT_ALL\n#   define __XCOFF64__\n#   define __XCOFF32__\n#endif\n\n#include <stdio.h>\n#include <errno.h>\n#include <string.h>\n#include <stdlib.h>\n#include <sys/types.h>\n#include <sys/ldr.h>\n#include <a.out.h>\n#undef FREAD\n#undef FWRITE\n#include <ldfcn.h>\n\n#ifdef USE_64_BIT_ALL\n#   define AIX_SCNHDR SCNHDR_64\n#   define AIX_LDHDR LDHDR_64\n#   define AIX_LDSYM LDSYM_64\n#   define AIX_LDHDRSZ LDHDRSZ_64\n#else\n#   define AIX_SCNHDR SCNHDR\n#   define AIX_LDHDR LDHDR\n#   define AIX_LDSYM LDSYM\n#   define AIX_LDHDRSZ LDHDRSZ\n#endif\n\n/* When using Perl extensions written in C++ the longer versions\n * of load() and unload() from libC and libC_r need to be used,\n * otherwise statics in the extensions won't get initialized right.\n * -- Stephanie Beals <bealzy@us.ibm.com> */\n\n/* Older AIX C compilers cannot deal with C++ double-slash comments in\n   the ibmcxx and/or xlC includes.  Since we only need a single file,\n   be more fine-grained about what's included <hirschs@btv.ibm.com> */\n\n#ifdef USE_libC /* The define comes, when it comes, from hints/aix.pl. */\n#   define LOAD   loadAndInit\n#   define UNLOAD terminateAndUnload\n#   if defined(USE_vacpp_load_h)\n#       include \"/usr/vacpp/include/load.h\"\n#   elif defined(USE_ibmcxx_load_h)\n#       include \"/usr/ibmcxx/include/load.h\"\n#   elif defined(USE_xlC_load_h)\n#       include \"/usr/lpp/xlC/include/load.h\"\n#   elif defined(USE_load_h)\n#       include \"/usr/include/load.h\"\n#   endif\n#else\n#   define LOAD   load\n#   define UNLOAD unload\n#endif\n\n/*\n * AIX 4.3 does remove some useful definitions from ldfcn.h. Define\n * these here to compensate for that lossage.\n */\n#ifndef BEGINNING\n# define BEGINNING SEEK_SET\n#endif\n#ifndef FSEEK\n# define FSEEK(ldptr,o,p)\tfseek(IOPTR(ldptr),(p==BEGINNING)?(OFFSET(ldptr) +o):o,p)\n#endif\n#ifndef FREAD\n# define FREAD(p,s,n,ldptr)\tfread(p,s,n,IOPTR(ldptr))\n#endif\n\n#ifndef RTLD_LAZY\n# define RTLD_LAZY 0\n#endif\n#ifndef RTLD_GLOBAL\n# define RTLD_GLOBAL 0\n#endif\n\n/*\n * We simulate dlopen() et al. through a call to load. Because AIX has\n * no call to find an exported symbol we read the loader section of the\n * loaded module and build a list of exported symbols and their virtual\n * address.\n */\n\ntypedef struct {\n\tchar\t\t*name;\t\t/* the symbols's name */\n\tvoid\t\t*addr;\t\t/* its relocated virtual address */\n} Export, *ExportPtr;\n\n/*\n * The void * handle returned from dlopen is actually a ModulePtr.\n */\ntypedef struct Module {\n\tstruct Module\t*next;\n\tchar\t\t*name;\t\t/* module name for refcounting */\n\tint\t\trefCnt;\t\t/* the number of references */\n\tvoid\t\t*entry;\t\t/* entry point from load */\n\tint\t\tnExports;\t/* the number of exports found */\n\tExportPtr\texports;\t/* the array of exports */\n} Module, *ModulePtr;\n\ntypedef struct {\n    /*\n     * We keep a list of all loaded modules to be able to reference count\n     * duplicate dlopen's.\n     */\n    ModulePtr\tx_modList;\n\n    /*\n     * The last error from one of the dl* routines is kept in static\n     * variables here. Each error is returned only once to the caller.\n     */\n    char\tx_errbuf[BUFSIZ];\n    int\t\tx_errvalid;\n    void *\tx_mainModule;\n} my_cxtx_t;\t\t/* this *must* be named my_cxtx_t */\n\n#define DL_CXT_EXTRA\t/* ask for dl_cxtx to be defined in dlutils.c */\n#include \"dlutils.c\"\t/* SaveError() etc\t*/\n\n#define dl_modList\t(dl_cxtx.x_modList)\n#define dl_errbuf\t(dl_cxtx.x_errbuf)\n#define dl_errvalid\t(dl_cxtx.x_errvalid)\n#define dl_mainModule\t(dl_cxtx.x_mainModule)\n\nstatic void caterr(char *);\nstatic int readExports(ModulePtr);\nstatic void *findMain(void);\n\n/* these statics are ok because they're constants */\nstatic char *strerror_failed   = \"(strerror failed)\";\nstatic char *strerror_r_failed = \"(strerror_r failed)\";\n\nchar *strerrorcat(char *str, int err) {\n    int strsiz = strlen(str);\n    int msgsiz;\n    char *msg;\n\n    dTHX;\n\n    if ((msg = strerror(err)) == 0)\n      msg = strerror_failed;\n    msgsiz = strlen(msg);\t\t/* Note msg = buf and free() above. */\n    if (strsiz + msgsiz < BUFSIZ)\t/* Do not move this after #endif. */\n      strcat(str, msg);\n\n    return str;\n}\n\nchar *strerrorcpy(char *str, int err) {\n    int msgsiz;\n    char *msg;\n\n    dTHX;\n\n    if ((msg = strerror(err)) == 0)\n      msg = strerror_failed;\n    msgsiz = strlen(msg);\t/* Note msg = buf and free() above. */\n    if (msgsiz < BUFSIZ)\t/* Do not move this after #endif. */\n      strcpy(str, msg);\n\n    return str;\n}\n  \n/* ARGSUSED */\nvoid *dlopen(char *path, int mode)\n{\n\tdTHX;\n\tdMY_CXT;\n\tModulePtr mp;\n\n\t/*\n\t * Upon the first call register a terminate handler that will\n\t * close all libraries.\n\t */\n\tif (dl_mainModule == NULL) {\n\t\tif ((dl_mainModule = findMain()) == NULL)\n\t\t\treturn NULL;\n\t}\n\t/*\n\t * Scan the list of modules if have the module already loaded.\n\t */\n\tfor (mp = dl_modList; mp; mp = mp->next)\n\t\tif (strEQ(mp->name, path)) {\n\t\t\tmp->refCnt++;\n\t\t\treturn mp;\n\t\t}\n\tNewxz(mp,1,Module);\n\tif (mp == NULL) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"Newz: \");\n\t\tstrerrorcat(dl_errbuf, errno);\n\t\treturn NULL;\n\t}\n\t\n\tif ((mp->name = savepv(path)) == NULL) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"savepv: \");\n\t\tstrerrorcat(dl_errbuf, errno);\n\t\tsafefree(mp);\n\t\treturn NULL;\n\t}\n\n\t/*\n\t * load should be declared load(const char *...). Thus we\n\t * cast the path to a normal char *. Ugly.\n\t */\n\tif ((mp->entry = (void *)LOAD((char *)path,\n#ifdef L_LIBPATH_EXEC\n\t\t\t\t      L_LIBPATH_EXEC |\n#endif\n\t\t\t\t      L_NOAUTODEFER,\n\t\t\t\t      NULL)) == NULL) {\n\t        int saverrno = errno;\n\t\t\n\t\tsafefree(mp->name);\n\t\tsafefree(mp);\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"dlopen: \");\n\t\tstrcat(dl_errbuf, path);\n\t\tstrcat(dl_errbuf, \": \");\n\t\t/*\n\t\t * If AIX says the file is not executable, the error\n\t\t * can be further described by querying the loader about\n\t\t * the last error.\n\t\t */\n\t\tif (saverrno == ENOEXEC) {\n\t\t\tchar *moreinfo[BUFSIZ/sizeof(char *)];\n\t\t\tif (loadquery(L_GETMESSAGES, moreinfo, sizeof(moreinfo)) == -1)\n\t\t\t\tstrerrorcpy(dl_errbuf, saverrno);\n\t\t\telse {\n\t\t\t\tchar **p;\n\t\t\t\tfor (p = moreinfo; *p; p++)\n\t\t\t\t\tcaterr(*p);\n\t\t\t}\n\t\t} else\n\t\t\tstrerrorcat(dl_errbuf, saverrno);\n\t\treturn NULL;\n\t}\n\tmp->refCnt = 1;\n\tmp->next = dl_modList;\n\tdl_modList = mp;\n\t/*\n\t * Assume anonymous exports come from the module this dlopen\n\t * is linked into, that holds true as long as dlopen and all\n\t * of the perl core are in the same shared object. Also bind\n\t * against the main part, in the case a perl is not the main\n\t * part, e.g mod_perl as DSO in Apache so perl modules can\n\t * also reference Apache symbols.\n\t */\n\tif (loadbind(0, (void *)dlopen, mp->entry) == -1 ||\n\t    loadbind(0, dl_mainModule, mp->entry)) {\n\t        int saverrno = errno;\n\n\t\tdlclose(mp);\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"loadbind: \");\n\t\tstrerrorcat(dl_errbuf, saverrno);\n\t\treturn NULL;\n\t}\n\tif (readExports(mp) == -1) {\n\t\tdlclose(mp);\n\t\treturn NULL;\n\t}\n\treturn mp;\n}\n\n/*\n * Attempt to decipher an AIX loader error message and append it\n * to our static error message buffer.\n */\nstatic void caterr(char *s)\n{\n\tdTHX;\n\tdMY_CXT;\n\tchar *p = s;\n\n\twhile (*p >= '0' && *p <= '9')\n\t\tp++;\n\tswitch(atoi(s)) {\n\tcase L_ERROR_TOOMANY:\n\t\tstrcat(dl_errbuf, \"too many errors\");\n\t\tbreak;\n\tcase L_ERROR_NOLIB:\n\t\tstrcat(dl_errbuf, \"can't load library\");\n\t\tstrcat(dl_errbuf, p);\n\t\tbreak;\n\tcase L_ERROR_UNDEF:\n\t\tstrcat(dl_errbuf, \"can't find symbol\");\n\t\tstrcat(dl_errbuf, p);\n\t\tbreak;\n\tcase L_ERROR_RLDBAD:\n\t\tstrcat(dl_errbuf, \"bad RLD\");\n\t\tstrcat(dl_errbuf, p);\n\t\tbreak;\n\tcase L_ERROR_FORMAT:\n\t\tstrcat(dl_errbuf, \"bad exec format in\");\n\t\tstrcat(dl_errbuf, p);\n\t\tbreak;\n\tcase L_ERROR_ERRNO:\n\t\tstrerrorcat(dl_errbuf, atoi(++p));\n\t\tbreak;\n\tdefault:\n\t\tstrcat(dl_errbuf, s);\n\t\tbreak;\n\t}\n}\n\nvoid *dlsym(void *handle, const char *symbol)\n{\n\tdTHX;\n\tdMY_CXT;\n\tModulePtr mp = (ModulePtr)handle;\n\tExportPtr ep;\n\tint i;\n\n\t/*\n\t * Could speed up search, but I assume that one assigns\n\t * the result to function pointers anyways.\n\t */\n\tfor (ep = mp->exports, i = mp->nExports; i; i--, ep++)\n\t\tif (strEQ(ep->name, symbol))\n\t\t\treturn ep->addr;\n\tdl_errvalid++;\n\tstrcpy(dl_errbuf, \"dlsym: undefined symbol \");\n\tstrcat(dl_errbuf, symbol);\n\treturn NULL;\n}\n\nchar *dlerror(void)\n{\n\tdTHX;\n\tdMY_CXT;\n\tif (dl_errvalid) {\n\t\tdl_errvalid = 0;\n\t\treturn dl_errbuf;\n\t}\n\treturn NULL;\n}\n\nint dlclose(void *handle)\n{\n\tdTHX;\n\tdMY_CXT;\n\tModulePtr mp = (ModulePtr)handle;\n\tint result;\n\tModulePtr mp1;\n\n\tif (--mp->refCnt > 0)\n\t\treturn 0;\n\tresult = UNLOAD(mp->entry);\n\tif (result == -1) {\n\t\tdl_errvalid++;\n\t\tstrerrorcpy(dl_errbuf, errno);\n\t}\n\tif (mp->exports) {\n\t\tExportPtr ep;\n\t\tint i;\n\t\tfor (ep = mp->exports, i = mp->nExports; i; i--, ep++)\n\t\t\tif (ep->name)\n\t\t\t\tsafefree(ep->name);\n\t\tsafefree(mp->exports);\n\t}\n\tif (mp == dl_modList)\n\t\tdl_modList = mp->next;\n\telse {\n\t\tfor (mp1 = dl_modList; mp1; mp1 = mp1->next)\n\t\t\tif (mp1->next == mp) {\n\t\t\t\tmp1->next = mp->next;\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\tsafefree(mp->name);\n\tsafefree(mp);\n\treturn result;\n}\n\n/* Added by Wayne Scott \n * This is needed because the ldopen system call calls\n * calloc to allocated a block of date.  The ldclose call calls free.\n * Without this we get this system calloc and perl's free, resulting\n * in a \"Bad free\" message.  This way we always use perl's malloc.\n */\nvoid *calloc(size_t ne, size_t sz) \n{\n  void *out;\n\n  out = (void *) safemalloc(ne*sz);\n  memzero(out, ne*sz);\n  return(out);\n}\n \n/*\n * Build the export table from the XCOFF .loader section.\n */\nstatic int readExports(ModulePtr mp)\n{\n\tdTHX;\n\tdMY_CXT;\n\tLDFILE *ldp = NULL;\n\tAIX_SCNHDR sh;\n\tAIX_LDHDR *lhp;\n\tchar *ldbuf;\n\tAIX_LDSYM *ls;\n\tint i;\n\tExportPtr ep;\n\n\tif ((ldp = ldopen(mp->name, ldp)) == NULL) {\n\t\tstruct ld_info *lp;\n\t\tchar *buf;\n\t\tint size = 4*1024;\n\t\tif (errno != ENOENT) {\n\t\t\tdl_errvalid++;\n\t\t\tstrcpy(dl_errbuf, \"readExports: \");\n\t\t\tstrerrorcat(dl_errbuf, errno);\n\t\t\treturn -1;\n\t\t}\n\t\t/*\n\t\t * The module might be loaded due to the LIBPATH\n\t\t * environment variable. Search for the loaded\n\t\t * module using L_GETINFO.\n\t\t */\n\t\tif ((buf = safemalloc(size)) == NULL) {\n\t\t\tdl_errvalid++;\n\t\t\tstrcpy(dl_errbuf, \"readExports: \");\n\t\t\tstrerrorcat(dl_errbuf, errno);\n\t\t\treturn -1;\n\t\t}\n\t\twhile ((i = loadquery(L_GETINFO, buf, size)) == -1 && errno == ENOMEM) {\n\t\t\tsafefree(buf);\n\t\t\tsize += 4*1024;\n\t\t\tif ((buf = safemalloc(size)) == NULL) {\n\t\t\t\tdl_errvalid++;\n\t\t\t\tstrcpy(dl_errbuf, \"readExports: \");\n\t\t\t\tstrerrorcat(dl_errbuf, errno);\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t\tif (i == -1) {\n\t\t\tdl_errvalid++;\n\t\t\tstrcpy(dl_errbuf, \"readExports: \");\n\t\t\tstrerrorcat(dl_errbuf, errno);\n\t\t\tsafefree(buf);\n\t\t\treturn -1;\n\t\t}\n\t\t/*\n\t\t * Traverse the list of loaded modules. The entry point\n\t\t * returned by LOAD() does actually point to the data\n\t\t * segment origin.\n\t\t */\n\t\tlp = (struct ld_info *)buf;\n\t\twhile (lp) {\n\t\t\tif (lp->ldinfo_dataorg == mp->entry) {\n\t\t\t\tldp = ldopen(lp->ldinfo_filename, ldp);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (lp->ldinfo_next == 0)\n\t\t\t\tlp = NULL;\n\t\t\telse\n\t\t\t\tlp = (struct ld_info *)((char *)lp + lp->ldinfo_next);\n\t\t}\n\t\tsafefree(buf);\n\t\tif (!ldp) {\n\t\t\tdl_errvalid++;\n\t\t\tstrcpy(dl_errbuf, \"readExports: \");\n\t\t\tstrerrorcat(dl_errbuf, errno);\n\t\t\treturn -1;\n\t\t}\n\t}\n#ifdef USE_64_BIT_ALL\n\tif (TYPE(ldp) != U803XTOCMAGIC) {\n#else\n\tif (TYPE(ldp) != U802TOCMAGIC) {\n#endif\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"readExports: bad magic\");\n\t\twhile(ldclose(ldp) == FAILURE)\n\t\t\t;\n\t\treturn -1;\n\t}\n\tif (ldnshread(ldp, _LOADER, &sh) != SUCCESS) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"readExports: cannot read loader section header\");\n\t\twhile(ldclose(ldp) == FAILURE)\n\t\t\t;\n\t\treturn -1;\n\t}\n\t/*\n\t * We read the complete loader section in one chunk, this makes\n\t * finding long symbol names residing in the string table easier.\n\t */\n\tif ((ldbuf = (char *)safemalloc(sh.s_size)) == NULL) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"readExports: \");\n\t\tstrerrorcat(dl_errbuf, errno);\n\t\twhile(ldclose(ldp) == FAILURE)\n\t\t\t;\n\t\treturn -1;\n\t}\n\tif (FSEEK(ldp, sh.s_scnptr, BEGINNING) != OKFSEEK) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"readExports: cannot seek to loader section\");\n\t\tsafefree(ldbuf);\n\t\twhile(ldclose(ldp) == FAILURE)\n\t\t\t;\n\t\treturn -1;\n\t}\n/* This first case is a hack, since it assumes that the 3rd parameter to\n   FREAD is 1. See the redefinition of FREAD above to see how this works. */\n\tif (FREAD(ldbuf, sh.s_size, 1, ldp) != 1) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"readExports: cannot read loader section\");\n\t\tsafefree(ldbuf);\n\t\twhile(ldclose(ldp) == FAILURE)\n\t\t\t;\n\t\treturn -1;\n\t}\n\tlhp = (AIX_LDHDR *)ldbuf;\n\tls = (AIX_LDSYM *)(ldbuf+AIX_LDHDRSZ);\n\t/*\n\t * Count the number of exports to include in our export table.\n\t */\n\tfor (i = lhp->l_nsyms; i; i--, ls++) {\n\t\tif (!LDR_EXPORT(*ls))\n\t\t\tcontinue;\n\t\tmp->nExports++;\n\t}\n\tNewxz(mp->exports, mp->nExports, Export);\n\tif (mp->exports == NULL) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"readExports: \");\n\t\tstrerrorcat(dl_errbuf, errno);\n\t\tsafefree(ldbuf);\n\t\twhile(ldclose(ldp) == FAILURE)\n\t\t\t;\n\t\treturn -1;\n\t}\n\t/*\n\t * Fill in the export table. All entries are relative to\n\t * the entry point we got from load.\n\t */\n\tep = mp->exports;\n\tls = (AIX_LDSYM *)(ldbuf+AIX_LDHDRSZ);\n\tfor (i = lhp->l_nsyms; i; i--, ls++) {\n\t\tchar *symname;\n\t\tif (!LDR_EXPORT(*ls))\n\t\t\tcontinue;\n#ifndef USE_64_BIT_ALL\n\t\tif (ls->l_zeroes == 0)\n#endif\n\t\t\tsymname = ls->l_offset+lhp->l_stoff+ldbuf;\n#ifndef USE_64_BIT_ALL\n\t\telse\n\t\t\tsymname = ls->l_name;\n#endif\n\t\tep->name = savepv(symname);\n\t\tep->addr = (void *)((unsigned long)mp->entry + ls->l_value);\n\t\tep++;\n\t}\n\tsafefree(ldbuf);\n\twhile(ldclose(ldp) == FAILURE)\n\t\t;\n\treturn 0;\n}\n\n/*\n * Find the main modules entry point. This is used as export pointer\n * for loadbind() to be able to resolve references to the main part.\n */\nstatic void * findMain(void)\n{\n\tdTHX;\n\tdMY_CXT;\n\tstruct ld_info *lp;\n\tchar *buf;\n\tint size = 4*1024;\n\tint i;\n\tvoid *ret;\n\n\tif ((buf = safemalloc(size)) == NULL) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"findMain: \");\n\t\tstrerrorcat(dl_errbuf, errno);\n\t\treturn NULL;\n\t}\n\twhile ((i = loadquery(L_GETINFO, buf, size)) == -1 && errno == ENOMEM) {\n\t\tsafefree(buf);\n\t\tsize += 4*1024;\n\t\tif ((buf = safemalloc(size)) == NULL) {\n\t\t\tdl_errvalid++;\n\t\t\tstrcpy(dl_errbuf, \"findMain: \");\n\t\t\tstrerrorcat(dl_errbuf, errno);\n\t\t\treturn NULL;\n\t\t}\n\t}\n\tif (i == -1) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"findMain: \");\n\t\tstrerrorcat(dl_errbuf, errno);\n\t\tsafefree(buf);\n\t\treturn NULL;\n\t}\n\t/*\n\t * The first entry is the main module. The entry point\n\t * returned by load() does actually point to the data\n\t * segment origin.\n\t */\n\tlp = (struct ld_info *)buf;\n\tret = lp->ldinfo_dataorg;\n\tsafefree(buf);\n\treturn ret;\n}\n#endif /* USE_NATIVE_DLOPEN */\n\n/* dl_dlopen.xs\n * \n * Platform:\tSunOS/Solaris, possibly others which use dlopen.\n * Author:\tPaul Marquess (Paul.Marquess@btinternet.com)\n * Created:\t10th July 1994\n *\n * Modified:\n * 15th July 1994   - Added code to explicitly save any error messages.\n * 3rd August 1994  - Upgraded to v3 spec.\n * 9th August 1994  - Changed to use IV\n * 10th August 1994 - Tim Bunce: Added RTLD_LAZY, switchable debugging,\n *                    basic FreeBSD support, removed ClearError\n *\n */\n\n/* Porting notes:\n\n\tsee dl_dlopen.xs\n\n*/\n\nstatic void\ndl_private_init(pTHX)\n{\n    (void)dl_generic_private_init(aTHX);\n}\n \nMODULE = DynaLoader     PACKAGE = DynaLoader\n\nBOOT:\n    (void)dl_private_init(aTHX);\n\n\nvoid\ndl_load_file(filename, flags=0)\n\tchar *\tfilename\n\tint\tflags\n        PREINIT:\n        void *retv;\n\tPPCODE:\n\tDLDEBUG(1,PerlIO_printf(Perl_debug_log, \"dl_load_file(%s,%x):\\n\", filename,flags));\n\tif (flags & 0x01)\n\t    Perl_warn(aTHX_ \"Can't make loaded symbols global on this platform while loading %s\",filename);\n\tretv = dlopen(filename, RTLD_GLOBAL|RTLD_LAZY) ;\n\tDLDEBUG(2,PerlIO_printf(Perl_debug_log, \" libref=%x\\n\", retv));\n\tST(0) = sv_newmortal() ;\n\tif (retv == NULL)\n\t    SaveError(aTHX_ \"%s\",dlerror()) ;\n\telse\n\t    sv_setiv( ST(0), PTR2IV(retv) );\n        XSRETURN(1);\n\nint\ndl_unload_file(libref)\n    void *\tlibref\n  CODE:\n    DLDEBUG(1,PerlIO_printf(Perl_debug_log, \"dl_unload_file(%lx):\\n\", libref));\n    RETVAL = (dlclose(libref) == 0 ? 1 : 0);\n    if (!RETVAL)\n        SaveError(aTHX_ \"%s\", dlerror()) ;\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \" retval = %d\\n\", RETVAL));\n  OUTPUT:\n    RETVAL\n\nvoid\ndl_find_symbol(libhandle, symbolname, ign_err=0)\n\tvoid *\t\tlibhandle\n\tchar *\t\tsymbolname\n        int\t        ign_err\n\tPREINIT:\n        void *retv;\n        CODE:\n\tDLDEBUG(2,PerlIO_printf(Perl_debug_log, \"dl_find_symbol(handle=%x, symbol=%s)\\n\",\n\t\tlibhandle, symbolname));\n\tretv = dlsym(libhandle, symbolname);\n\tDLDEBUG(2,PerlIO_printf(Perl_debug_log, \"  symbolref = %x\\n\", retv));\n\tST(0) = sv_newmortal();\n\tif (retv == NULL) {\n            if (!ign_err)\n\t        SaveError(aTHX_ \"%s\", dlerror());\n\t} else\n\t    sv_setiv( ST(0), PTR2IV(retv));\n\n\nvoid\ndl_undef_symbols()\n\tCODE:\n\n\n\n# These functions should not need changing on any platform:\n\nvoid\ndl_install_xsub(perl_name, symref, filename=\"$Package\")\n    char *\tperl_name\n    void *\tsymref \n    const char *\tfilename\n    CODE:\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \"dl_install_xsub(name=%s, symref=%x)\\n\",\n\tperl_name, symref));\n    ST(0) = sv_2mortal(newRV((SV*)newXS_flags(perl_name,\n\t\t\t\t\t      (void(*)(pTHX_ CV *))symref,\n\t\t\t\t\t      filename, NULL,\n\t\t\t\t\t      XS_DYNAMIC_FILENAME)));\n\n\nSV *\ndl_error()\n    CODE:\n    dMY_CXT;\n    RETVAL = newSVsv(MY_CXT.x_dl_last_error);\n    OUTPUT:\n    RETVAL\n\n#if defined(USE_ITHREADS)\n\nvoid\nCLONE(...)\n    CODE:\n    MY_CXT_CLONE;\n\n    PERL_UNUSED_VAR(items);\n\n    /* MY_CXT_CLONE just does a memcpy on the whole structure, so to avoid\n     * using Perl variables that belong to another thread, we create our \n     * own for this thread.\n     */\n    MY_CXT.x_dl_last_error = newSVpvs(\"\");\n\n#endif\n\n# end.\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/ext/DynaLoader/dl_win32.xs": "/* dl_win32.xs\n * \n * Platform:\tWin32 (Windows NT/Windows 95)\n * Author:\tWei-Yuen Tan (wyt@hip.com)\n * Created:\tA warm day in June, 1995\n *\n * Modified:\n *    August 23rd 1995 - rewritten after losing everything when I\n *                       wiped off my NT partition (eek!)\n */\n\n/* Porting notes:\n\nI merely took Paul's dl_dlopen.xs, took out extraneous stuff and\nreplaced the appropriate SunOS calls with the corresponding Win32\ncalls.\n\n*/\n\n#define WIN32_LEAN_AND_MEAN\n#ifdef __GNUC__\n#define Win32_Winsock\n#endif\n#include <windows.h>\n#include <string.h>\n\n#define PERL_NO_GET_CONTEXT\n#define PERL_EXT\n#define PERL_IN_DL_WIN32_XS\n\n#include \"EXTERN.h\"\n#include \"perl.h\"\n#include \"win32.h\"\n\n#include \"XSUB.h\"\n\ntypedef struct {\n    SV *\tx_error_sv;\n} my_cxtx_t;\t\t/* this *must* be named my_cxtx_t */\n\n#define DL_CXT_EXTRA\t/* ask for dl_cxtx to be defined in dlutils.c */\n#include \"dlutils.c\"\t/* SaveError() etc\t*/\n\n#define dl_error_sv\t(dl_cxtx.x_error_sv)\n\nstatic char *\nOS_Error_String(pTHX)\n{\n    dMY_CXT;\n    DWORD err = GetLastError();\n    STRLEN len;\n    SV ** l_dl_error_svp = &dl_error_sv;\n    SV * l_dl_error_sv;\n    if (!*l_dl_error_svp)\n\t*l_dl_error_svp = newSVpvs(\"\");\n    l_dl_error_sv = *l_dl_error_svp;\n    PerlProc_GetOSError(l_dl_error_sv,err);\n    return SvPV(l_dl_error_sv,len);\n}\n\nstatic void\ndl_private_init(pTHX)\n{\n    (void)dl_generic_private_init(aTHX);\n}\n\n/* \n    This function assumes the list staticlinkmodules\n    will be formed from package names with '::' replaced\n    with '/'. Thus Win32::OLE is in the list as Win32/OLE\n*/\nstatic int\ndl_static_linked(char *filename)\n{\n    const char * const *p;\n    char *ptr, *hptr;\n    static const char subStr[] = \"/auto/\";\n    char szBuffer[MAX_PATH];\n\n    /* avoid buffer overflow when called with invalid filenames */\n    if (strlen(filename) >= sizeof(szBuffer))\n        return 0;\n\n    /* change all the '\\\\' to '/' */\n    my_strlcpy(szBuffer, filename, sizeof(szBuffer));\n    for(ptr = szBuffer; ptr = strchr(ptr, '\\\\'); ++ptr)\n\t*ptr = '/';\n\n    /* delete the file name */\n    ptr = strrchr(szBuffer, '/');\n    if(ptr != NULL)\n\t*ptr = '\\0';\n\n    /* remove leading lib path */\n    ptr = strstr(szBuffer, subStr);\n    if(ptr != NULL)\n\tptr += sizeof(subStr)-1;\n    else\n\tptr = szBuffer;\n\n    for (p = staticlinkmodules; *p;p++) {\n\tif (hptr = strstr(ptr, *p)) {\n\t    /* found substring, need more detailed check if module name match */\n\t    if (hptr==ptr) {\n\t\treturn strEQ(ptr, *p);\n\t    }\n\t    if (hptr[strlen(*p)] == 0)\n\t\treturn hptr[-1]=='/';\n\t}\n    };\n    return 0;\n}\n\nMODULE = DynaLoader\tPACKAGE = DynaLoader\n\nBOOT:\n    (void)dl_private_init(aTHX);\n\nvoid\ndl_load_file(filename,flags=0)\n    char *\t\tfilename\n#flags is unused\n    SV *\t\tflags = NO_INIT\n    PREINIT:\n    void *retv;\n    SV * retsv;\n    CODE:\n  {\n    PERL_UNUSED_VAR(flags);\n    DLDEBUG(1,PerlIO_printf(Perl_debug_log,\"dl_load_file(%s):\\n\", filename));\n    if (dl_static_linked(filename) == 0) {\n\tretv = PerlProc_DynaLoad(filename);\n    }\n    else\n\tretv = (void*) Win_GetModuleHandle(NULL);\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log,\" libref=%x\\n\", retv));\n\n    if (retv == NULL) {\n\tSaveError(aTHX_ \"load_file:%s\",\n\t\t  OS_Error_String(aTHX)) ;\n\tretsv = &PL_sv_undef;\n    }\n    else\n\tretsv = sv_2mortal(newSViv((IV)retv));\n    ST(0) = retsv;\n  }\n\nint\ndl_unload_file(libref)\n    void *\tlibref\n  CODE:\n    DLDEBUG(1,PerlIO_printf(Perl_debug_log, \"dl_unload_file(%lx):\\n\", PTR2ul(libref)));\n    RETVAL = FreeLibrary((HMODULE)libref);\n    if (!RETVAL)\n        SaveError(aTHX_ \"unload_file:%s\", OS_Error_String(aTHX)) ;\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \" retval = %d\\n\", RETVAL));\n  OUTPUT:\n    RETVAL\n\nvoid\ndl_find_symbol(libhandle, symbolname, ign_err=0)\n    void *\tlibhandle\n    char *\tsymbolname\n    int\t        ign_err\n    PREINIT:\n    void *retv;\n    CODE:\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log,\"dl_find_symbol(handle=%x, symbol=%s)\\n\",\n\t\t      libhandle, symbolname));\n    retv = (void*) GetProcAddress((HINSTANCE) libhandle, symbolname);\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log,\"  symbolref = %x\\n\", retv));\n    ST(0) = sv_newmortal();\n    if (retv == NULL) {\n        if (!ign_err) SaveError(aTHX_ \"find_symbol:%s\", OS_Error_String(aTHX));\n    } else\n\tsv_setiv( ST(0), (IV)retv);\n\n\nvoid\ndl_undef_symbols()\n    CODE:\n\n\n\n# These functions should not need changing on any platform:\n\nvoid\ndl_install_xsub(perl_name, symref, filename=\"$Package\")\n    char *\t\tperl_name\n    void *\t\tsymref \n    char *\t\tfilename\n    CODE:\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log,\"dl_install_xsub(name=%s, symref=%x)\\n\",\n\t\t      perl_name, symref));\n    ST(0) = sv_2mortal(newRV((SV*)newXS(perl_name,\n\t\t\t\t\t(void(*)(pTHX_ CV *))symref,\n\t\t\t\t\tfilename)));\n\n\nSV *\ndl_error()\n    CODE:\n    dMY_CXT;\n    RETVAL = newSVsv(MY_CXT.x_dl_last_error);\n    OUTPUT:\n    RETVAL\n\n#if defined(USE_ITHREADS)\n\nvoid\nCLONE(...)\n    CODE:\n    MY_CXT_CLONE;\n\n    PERL_UNUSED_VAR(items);\n\n    /* MY_CXT_CLONE just does a memcpy on the whole structure, so to avoid\n     * using Perl variables that belong to another thread, we create our \n     * own for this thread.\n     */\n    MY_CXT.x_dl_last_error = newSVpvs(\"\");\n\n#endif\n\n# end.\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/ext/DynaLoader/DynaLoader_pm.PL": "use Config;\n\nsub to_string {\n    my ($value) = @_;\n    $value =~ s/\\\\/\\\\\\\\/g;\n    $value =~ s/'/\\\\'/g;\n    return \"'$value'\";\n}\n\n#\n# subroutine expand_os_specific expands $^O-specific preprocessing information\n# so that it will not be re-calculated at runtime in Dynaloader.pm\n#\n# Syntax of preprocessor should be kept extremely simple:\n#  - directives are in double angle brackets <<...>>\n#  - <<=string>> will be just evaluated\n#  - for $^O-specific there are two forms:\n#   <<$^O-eq-osname>>\n#   <<$^O-ne-osname>>\n#  this directive should be closed with respectively\n#   <</$^O-eq-osname>>\n#   <</$^O-ne-osname>>\n#  construct <<|$^O-ne-osname>> means #else\n#  nested <<$^O...>>-constructs are allowed but nested values must be for \n#   different OS-names!\n#   \n#  -- added by VKON, 03-10-2004 to separate $^O-specific between OSes\n#     (so that Win32 never checks for $^O eq 'VMS' for example)\n#\n# The $^O tests test both for $^O and for $Config{osname}.\n# The latter is better for some for cross-compilation setups.\n#\nsub expand_os_specific {\n    my $s = shift;\n    for ($s) {\n\ts/<<=(.*?)>>/$1/gee;\n\ts/<<\\$\\^O-(eq|ne)-(\\w+)>>(.*?)<<\\/\\$\\^O-\\1-\\2>>/\n\t  my ($op, $os, $expr) = ($1,$2,$3);\n\t  if ($op ne 'eq' and $op ne 'ne') {die \"wrong eq-ne arg in $&\"};\n\t  if ($expr =~ m[^(.*?)<<\\|\\$\\^O-$op-$os>>(.*?)$]s) {\n\t      # #if;#else;#endif\n\t      my ($if,$el) = ($1,$2);\n\t      if (($op eq 'eq' and ($^O eq $os || $Config{osname} eq $os)) || ($op eq 'ne' and ($^O ne $os || $Config{osname} ne $os))) {\n\t\t  $if\n\t      }\n\t      else {\n\t\t  $el\n\t      }\n\t  }\n\t  else {\n\t      # #if;#endif\n\t      if (($op eq 'eq' and ($^O eq $os || $Config{osname} eq $os)) || ($op eq 'ne' and ($^O ne $os || $Config{osname} ne $os))) {\n\t\t  $expr\n\t      }\n\t      else {\n\t      \t  \"\"\n\t      }\n\t  }\n\t/ges;\n\tif (/<<(=|\\$\\^O-)/) {die \"bad <<\\$^O-eq/ne-osname>> expression.\".\n\t    \" Unclosed brackets?\";\n\t}\n    }\n    $s;\n}\n\nunlink \"DynaLoader.pm\" if -f \"DynaLoader.pm\";\nopen OUT, '>', \"DynaLoader.pm\" or die $!;\nprint OUT <<'EOT';\n\n# Generated from DynaLoader_pm.PL, this file is unique for every OS\n\npackage DynaLoader;\n\n#   And Gandalf said: 'Many folk like to know beforehand what is to\n#   be set on the table; but those who have laboured to prepare the\n#   feast like to keep their secret; for wonder makes the words of\n#   praise louder.'\n\n#   (Quote from Tolkien suggested by Anno Siegel.)\n#\n# See pod text at end of file for documentation.\n# See also ext/DynaLoader/README in source tree for other information.\n#\n# Tim.Bunce@ig.co.uk, August 1994\n\nBEGIN {\n    $VERSION = '1.45';\n}\n\nEOT\n\nif (!$ENV{PERL_BUILD_EXPAND_CONFIG_VARS}) {\n    print OUT \"use Config;\\n\";\n}\n\nprint OUT <<'EOT';\n\n# enable debug/trace messages from DynaLoader perl code\n$dl_debug = $ENV{PERL_DL_DEBUG} || 0 unless defined $dl_debug;\n\n#\n# Flags to alter dl_load_file behaviour.  Assigned bits:\n#   0x01  make symbols available for linking later dl_load_file's.\n#         (only known to work on Solaris 2 using dlopen(RTLD_GLOBAL))\n#         (ignored under VMS; effect is built-in to image linking)\n#         (ignored under Android; the linker always uses RTLD_LOCAL)\n#\n# This is called as a class method $module->dl_load_flags.  The\n# definition here will be inherited and result on \"default\" loading\n# behaviour unless a sub-class of DynaLoader defines its own version.\n#\n\nsub dl_load_flags { 0x00 }\n\nEOT\n\nif ($ENV{PERL_BUILD_EXPAND_CONFIG_VARS}) {\n    print OUT \"(\\$dl_dlext, \\$dl_so, \\$dlsrc) = (\",\n              to_string($Config{'dlext'}), \",\",\n              to_string($Config{'so'}), \",\",\n              to_string($Config{'dlsrc'}), \")\\n;\" ;\n}\nelse {\n    print OUT <<'EOT';\n($dl_dlext, $dl_so, $dlsrc) = @Config::Config{qw(dlext so dlsrc)};\nEOT\n}\n\nprint OUT expand_os_specific(<<'EOT');\n\n<<$^O-eq-VMS>>\n# Some systems need special handling to expand file specifications\n# (VMS support by Charles Bailey <bailey@HMIVAX.HUMGEN.UPENN.EDU>)\n# See dl_expandspec() for more details. Should be harmless but\n# inefficient to define on systems that don't need it.\n$Is_VMS    = $^O eq 'VMS';\n<</$^O-eq-VMS>>\n$do_expand = <<$^O-eq-VMS>>1<<|$^O-eq-VMS>>0<</$^O-eq-VMS>>;\n\n@dl_require_symbols = ();       # names of symbols we need<<$^O-eq-freemint>>\n@dl_resolve_using   = ();       # names of files to link with<</$^O-eq-freemint>><<$^O-eq-hpux>>\n@dl_resolve_using   = ();       # names of files to link with<</$^O-eq-hpux>>\n@dl_library_path    = ();       # path to look for files\n\n#XSLoader.pm may have added elements before we were required\n#@dl_shared_objects  = ();       # shared objects for symbols we have \n#@dl_librefs         = ();       # things we have loaded\n#@dl_modules         = ();       # Modules we have loaded\n\nEOT\n\nmy $cfg_dl_library_path = <<'EOT';\npush(@dl_library_path, split(' ', $Config::Config{libpth}));\nEOT\n\nsub dquoted_comma_list {\n    join(\", \", map {'\"'.quotemeta($_).'\"'} @_);\n}\n\nif ($ENV{PERL_BUILD_EXPAND_CONFIG_VARS}) {\n    eval $cfg_dl_library_path;\n    if (!$ENV{PERL_BUILD_EXPAND_ENV_VARS}) {\n        my $dl_library_path = dquoted_comma_list(@dl_library_path);\n        print OUT <<EOT;\n# The below \\@dl_library_path has been expanded (%Config) in Perl build time.\n\n\\@dl_library_path = ($dl_library_path);\n\nEOT\n    }\n}\nelse {\n    print OUT <<EOT;\n# Initialise \\@dl_library_path with the 'standard' library path\n# for this platform as determined by Configure.\n\n$cfg_dl_library_path\n\nEOT\n}\n\nmy $ldlibpthname;\nmy $ldlibpthname_defined;\nmy $pthsep;\n\nif ($ENV{PERL_BUILD_EXPAND_CONFIG_VARS}) {\n    $ldlibpthname         = to_string($Config::Config{ldlibpthname});\n    $ldlibpthname_defined = to_string(defined $Config::Config{ldlibpthname} ? 1 : 0);\n    $pthsep               = to_string($Config::Config{path_sep});\n}\nelse {\n    $ldlibpthname         = q($Config::Config{ldlibpthname});\n    $ldlibpthname_defined = q(defined $Config::Config{ldlibpthname});\n    $pthsep               = q($Config::Config{path_sep});\n}\nprint OUT <<EOT;\nmy \\$ldlibpthname         = $ldlibpthname;\nmy \\$ldlibpthname_defined = $ldlibpthname_defined;\nmy \\$pthsep               = $pthsep;\n\nEOT\n\nmy $env_dl_library_path = <<'EOT';\nif ($ldlibpthname_defined &&\n    exists $ENV{$ldlibpthname}) {\n    push(@dl_library_path, split(/$pthsep/, $ENV{$ldlibpthname}));\n}\n\n# E.g. HP-UX supports both its native SHLIB_PATH *and* LD_LIBRARY_PATH.\n\nif ($ldlibpthname_defined &&\n    $ldlibpthname ne 'LD_LIBRARY_PATH' &&\n    exists $ENV{LD_LIBRARY_PATH}) {\n    push(@dl_library_path, split(/$pthsep/, $ENV{LD_LIBRARY_PATH}));\n}\nEOT\n\nif ($ENV{PERL_BUILD_EXPAND_CONFIG_VARS} && $ENV{PERL_BUILD_EXPAND_ENV_VARS}) {\n    eval $env_dl_library_path;\n}\nelse {\n    print OUT <<EOT;\n# Add to \\@dl_library_path any extra directories we can gather from environment\n# during runtime.\n\n$env_dl_library_path\n\nEOT\n}\n\nif ($ENV{PERL_BUILD_EXPAND_CONFIG_VARS} && $ENV{PERL_BUILD_EXPAND_ENV_VARS}) {\n    my $dl_library_path = dquoted_comma_list(@dl_library_path);\n    print OUT <<EOT;\n# The below \\@dl_library_path has been expanded (%Config, %ENV)\n# in Perl build time.\n\n\\@dl_library_path = ($dl_library_path);\n\nEOT\n}\n\nif ( $Config::Config{d_libname_unique} ) {\n    printf OUT <<'EOT', length($Config::Config{dlext}) + 1;\nsub mod2fname {\n    my $parts = shift;\n    my $so_len = %d;\n    my $name_max = 255; # No easy way to get this here\n    \n    my $libname = \"PL_\" .  join(\"__\", @$parts);\n    \n    return $libname if (length($libname)+$so_len) <= $name_max;\n    \n    # It's too darned big, so we need to go strip. We use the same\n    # algorithm as xsubpp does. First, strip out doubled __\n    $libname =~ s/__/_/g;\n    return $libname if (length($libname)+$so_len) <= $name_max;\n    \n    # Strip duplicate letters\n    1 while $libname =~ s/(.)\\1/\\U$1/i;\n    return $libname if (length($libname)+$so_len) <= $name_max;\n    \n    # Still too long. Truncate.\n    $libname = substr($libname, 0, $name_max - $so_len);\n    return $libname;\n}\nEOT\n}\n\n# following long string contains $^O-specific stuff, which is factored out\nprint OUT expand_os_specific(<<'EOT');\n# No prizes for guessing why we don't say 'bootstrap DynaLoader;' here.\n# NOTE: All dl_*.xs (including dl_none.xs) define a dl_error() XSUB\nboot_DynaLoader('DynaLoader') if defined(&boot_DynaLoader) &&\n                                !defined(&dl_error);\n\nif ($dl_debug) {\n    print STDERR \"DynaLoader.pm loaded (@INC, @dl_library_path)\\n\";\n    print STDERR \"DynaLoader not linked into this perl\\n\"\n\t    unless defined(&boot_DynaLoader);\n}\n\n1; # End of main code\n\n\nsub croak   { require Carp; Carp::croak(@_)   }\n\nsub bootstrap_inherit {\n    my $module = $_[0];\n    local *isa = *{\"$module\\::ISA\"};\n    local @isa = (@isa, 'DynaLoader');\n    # Cannot goto due to delocalization.  Will report errors on a wrong line?\n    bootstrap(@_);\n}\n\nsub bootstrap {\n    # use local vars to enable $module.bs script to edit values\n    local(@args) = @_;\n    local($module) = $args[0];\n    local(@dirs, $file);\n\n    unless ($module) {\n\trequire Carp;\n\tCarp::confess(\"Usage: DynaLoader::bootstrap(module)\");\n    }\n\n    # A common error on platforms which don't support dynamic loading.\n    # Since it's fatal and potentially confusing we give a detailed message.\n    croak(\"Can't load module $module, dynamic loading not available in this perl.\\n\".\n\t\"  (You may need to build a new perl executable which either supports\\n\".\n\t\"  dynamic loading or has the $module module statically linked into it.)\\n\")\n\tunless defined(&dl_load_file);\n\n\n    <<$^O-eq-os2>>\n    # Can dynaload, but cannot dynaload Perl modules...\n    die 'Dynaloaded Perl modules are not available in this build of Perl' if $OS2::is_static;\n\n    <</$^O-eq-os2>>\n    my @modparts = split(/::/,$module);\n    my $modfname = $modparts[-1];\n    my $modfname_orig = $modfname; # For .bs file search\n\n    # Some systems have restrictions on files names for DLL's etc.\n    # mod2fname returns appropriate file base name (typically truncated)\n    # It may also edit @modparts if required.\n    $modfname = &mod2fname(\\@modparts) if defined &mod2fname;\n\n    <<$^O-eq-NetWare>>\n    # Truncate the module name to 8.3 format for NetWare\n\tif ((length($modfname) > 8)) {\n\t\t$modfname = substr($modfname, 0, 8);\n\t}\n    <</$^O-eq-NetWare>>\n\n    my $modpname = join('/',@modparts);\n\n    print STDERR \"DynaLoader::bootstrap for $module \",\n\t\t       \"(auto/$modpname/$modfname.$dl_dlext)\\n\"\n\tif $dl_debug;\n\n    my $dir;\n    foreach (@INC) {\n\t<<$^O-eq-VMS>>chop($_ = VMS::Filespec::unixpath($_));<</$^O-eq-VMS>>\n\t    $dir = \"$_/auto/$modpname\";\n\t\n\tnext unless -d $dir; # skip over uninteresting directories\n\t\n\t# check for common cases to avoid autoload of dl_findfile\n        my $try = \"$dir/$modfname.$dl_dlext\";\n\tlast if $file = ($do_expand) ? dl_expandspec($try) : ((-f $try) && $try);\n\t\n\t# no luck here, save dir for possible later dl_findfile search\n\tpush @dirs, $dir;\n    }\n    # last resort, let dl_findfile have a go in all known locations\n    $file = dl_findfile(map(\"-L$_\",@dirs,@INC), $modfname) unless $file;\n\n    croak(\"Can't locate loadable object for module $module in \\@INC (\\@INC contains: @INC)\")\n\tunless $file;\t# wording similar to error from 'require'\n\n    <<$^O-eq-VMS>>$file = uc($file) if $Config::Config{d_vms_case_sensitive_symbols};<</$^O-eq-VMS>>\n    my $bootname = \"boot_$module\";\n    $bootname =~ s/\\W/_/g;\n    @dl_require_symbols = ($bootname);\n\n    # Execute optional '.bootstrap' perl script for this module.\n    # The .bs file can be used to configure @dl_resolve_using etc to\n    # match the needs of the individual module on this architecture.\n    # N.B. The .bs file does not following the naming convention used\n    # by mod2fname.\n    my $bs = \"$dir/$modfname_orig\";\n    $bs =~ s/(\\.\\w+)?(;\\d*)?$/\\.bs/; # look for .bs 'beside' the library\n    if (-s $bs) { # only read file if it's not empty\n        print STDERR \"BS: $bs ($^O, $dlsrc)\\n\" if $dl_debug;\n        eval { local @INC = ('.'); do $bs; };\n        warn \"$bs: $@\\n\" if $@;\n    }\n\n    my $boot_symbol_ref;\n\n    <<$^O-eq-darwin>>\n    if ($boot_symbol_ref = dl_find_symbol(0, $bootname, 1)) {\n        goto boot; #extension library has already been loaded, e.g. darwin\n    }\n    <</$^O-eq-darwin>>\n\n    # Many dynamic extension loading problems will appear to come from\n    # this section of code: XYZ failed at line 123 of DynaLoader.pm.\n    # Often these errors are actually occurring in the initialisation\n    # C code of the extension XS file. Perl reports the error as being\n    # in this perl code simply because this was the last perl code\n    # it executed.\n\n    my $flags = $module->dl_load_flags;\n    <<$^O-eq-android>>\n    # See the note above regarding the linker.\n    $flags = 0x00;\n    <</$^O-eq-android>>\n    my $libref = dl_load_file($file, $flags) or\n\tcroak(\"Can't load '$file' for module $module: \".dl_error());\n\n    push(@dl_librefs,$libref);  # record loaded object\n<<$^O-eq-freemint>>\n    my @unresolved = dl_undef_symbols();\n    if (@unresolved) {\n\trequire Carp;\n\tCarp::carp(\"Undefined symbols present after loading $file: @unresolved\\n\");\n    }\n<</$^O-eq-freemint>>\n    $boot_symbol_ref = dl_find_symbol($libref, $bootname) or\n         croak(\"Can't find '$bootname' symbol in $file\\n\");\n\n    push(@dl_modules, $module); # record loaded module\n\n  boot:\n    my $xs = dl_install_xsub(\"${module}::bootstrap\", $boot_symbol_ref, $file);\n\n    # See comment block above\n\n\tpush(@dl_shared_objects, $file); # record files loaded\n\n    &$xs(@args);\n}\n\nsub dl_findfile {\n    # This function does not automatically consider the architecture\n    # or the perl library auto directories.\n    my (@args) = @_;\n    my (@dirs,  $dir);   # which directories to search\n    my (@found);         # full paths to real files we have found\n    #my $dl_ext= <<=to_string($Config::Config{'dlext'})>>; # $Config::Config{'dlext'} suffix for perl extensions\n    #my $dl_so = <<=to_string($Config::Config{'so'})>>; # $Config::Config{'so'} suffix for shared libraries\n\n    print STDERR \"dl_findfile(@args)\\n\" if $dl_debug;\n\n    # accumulate directories but process files as they appear\n    arg: foreach(@args) {\n        #  Special fast case: full filepath requires no search\n\t<<$^O-eq-VMS>>\n        if (m%[:>/\\]]% && -f $_) {\n\t    push(@found,dl_expandspec(VMS::Filespec::vmsify($_)));\n\t    last arg unless wantarray;\n\t    next;\n        }\n\t<</$^O-eq-VMS>>\n\t<<$^O-ne-VMS>>\n        if (m:/: && -f $_) {\n\t    push(@found,$_);\n\t    last arg unless wantarray;\n\t    next;\n\t}\n\t<</$^O-ne-VMS>>\n\n        # Deal with directories first:\n        #  Using a -L prefix is the preferred option (faster and more robust)\n        if ( s{^-L}{} ) { push(@dirs, $_); next; }\n\n        #  Otherwise we try to try to spot directories by a heuristic\n        #  (this is a more complicated issue than it first appears)\n        if (m:/: && -d $_) {   push(@dirs, $_); next; }\n\n\t<<$^O-eq-VMS>>\n        # VMS: we may be using native VMS directory syntax instead of\n        # Unix emulation, so check this as well\n        if (/[:>\\]]/ && -d $_) {   push(@dirs, $_); next; }\n\t<</$^O-eq-VMS>>\n\n        #  Only files should get this far...\n        my(@names, $name);    # what filenames to look for\n        if ( s{^-l}{} ) {          # convert -lname to appropriate library name\n            push(@names, \"lib$_.$dl_so\", \"lib$_.a\");\n        } else {                # Umm, a bare name. Try various alternatives:\n            # these should be ordered with the most likely first\n            push(@names,\"$_.$dl_dlext\")    unless m/\\.$dl_dlext$/o;\n            push(@names,\"$_.$dl_so\")     unless m/\\.$dl_so$/o;\n\t    <<$^O-eq-cygwin>>\n            push(@names,\"cyg$_.$dl_so\")  unless m:/:;\n\t    <</$^O-eq-cygwin>>\n            push(@names,\"lib$_.$dl_so\")  unless m:/:;\n            push(@names, $_);\n        }\n\tmy $dirsep = '/';\n\t<<$^O-eq-symbian>>\n\t$dirsep = '\\\\';\n\tif ($0 =~ /^([a-z]):/i) {\n\t    my $drive = $1;\n\t    @dirs = map { \"$drive:$_\" } @dirs;\n\t    @dl_library_path = map { \"$drive:$_\" } @dl_library_path;\n\t}\n\t<</$^O-eq-symbian>>\n        foreach $dir (@dirs, @dl_library_path) {\n            next unless -d $dir;\n\t    <<$^O-eq-VMS>>\n            chop($dir = VMS::Filespec::unixpath($dir));\n\t    <</$^O-eq-VMS>>\n            foreach $name (@names) {\n\t\tmy($file) = \"$dir$dirsep$name\";\n                print STDERR \" checking in $dir for $name\\n\" if $dl_debug;\n\t\t$file = ($do_expand) ? dl_expandspec($file) : (-f $file && $file);\n\t\t#$file = _check_file($file);\n\t\tif ($file) {\n                    push(@found, $file);\n                    next arg; # no need to look any further\n                }\n            }\n        }\n    }\n    if ($dl_debug) {\n        foreach(@dirs) {\n            print STDERR \" dl_findfile ignored non-existent directory: $_\\n\" unless -d $_;\n        }\n        print STDERR \"dl_findfile found: @found\\n\";\n    }\n    return $found[0] unless wantarray;\n    @found;\n}\n\n\n<<$^O-eq-VMS>>\n# dl_expandspec should be defined in dl_vms.xs\n<<|$^O-eq-VMS>>\nsub dl_expandspec {\n    my($spec) = @_;\n    # Optional function invoked if DynaLoader.pm sets $do_expand.\n    # Most systems do not require or use this function.\n    # Some systems may implement it in the dl_*.xs file in which case\n    # this Perl version should be excluded at build time.\n\n    # This function is designed to deal with systems which treat some\n    # 'filenames' in a special way. For example VMS 'Logical Names'\n    # (something like unix environment variables - but different).\n    # This function should recognise such names and expand them into\n    # full file paths.\n    # Must return undef if $spec is invalid or file does not exist.\n\n    my $file = $spec; # default output to input\n\n\treturn undef unless -f $file;\n    print STDERR \"dl_expandspec($spec) => $file\\n\" if $dl_debug;\n    $file;\n}\n<</$^O-eq-VMS>>\n\nsub dl_find_symbol_anywhere\n{\n    my $sym = shift;\n    my $libref;\n    foreach $libref (@dl_librefs) {\n\tmy $symref = dl_find_symbol($libref,$sym,1);\n\treturn $symref if $symref;\n    }\n    return undef;\n}\n\n__END__\n\n=head1 NAME\n\nDynaLoader - Dynamically load C libraries into Perl code\n\n=head1 SYNOPSIS\n\n    package YourPackage;\n    require DynaLoader;\n    @ISA = qw(... DynaLoader ...);\n    __PACKAGE__->bootstrap;\n\n    # optional method for 'global' loading\n    sub dl_load_flags { 0x01 }     \n\n\n=head1 DESCRIPTION\n\nThis document defines a standard generic interface to the dynamic\nlinking mechanisms available on many platforms.  Its primary purpose is\nto implement automatic dynamic loading of Perl modules.\n\nThis document serves as both a specification for anyone wishing to\nimplement the DynaLoader for a new platform and as a guide for\nanyone wishing to use the DynaLoader directly in an application.\n\nThe DynaLoader is designed to be a very simple high-level\ninterface that is sufficiently general to cover the requirements\nof SunOS, HP-UX, Linux, VMS and other platforms.\n\nIt is also hoped that the interface will cover the needs of OS/2, NT\netc and also allow pseudo-dynamic linking (using C<ld -A> at runtime).\n\nIt must be stressed that the DynaLoader, by itself, is practically\nuseless for accessing non-Perl libraries because it provides almost no\nPerl-to-C 'glue'.  There is, for example, no mechanism for calling a C\nlibrary function or supplying arguments.  A C::DynaLib module\nis available from CPAN sites which performs that function for some\ncommon system types.  And since the year 2000, there's also Inline::C,\na module that allows you to write Perl subroutines in C.  Also available\nfrom your local CPAN site.\n\nDynaLoader Interface Summary\n\n  @dl_library_path\n  @dl_resolve_using\n  @dl_require_symbols\n  $dl_debug\n  $dl_dlext\n  @dl_librefs\n  @dl_modules\n  @dl_shared_objects\n                                                  Implemented in:\n  bootstrap($modulename)                               Perl\n  @filepaths = dl_findfile(@names)                     Perl\n  $flags = $modulename->dl_load_flags                  Perl\n  $symref  = dl_find_symbol_anywhere($symbol)          Perl\n\n  $libref  = dl_load_file($filename, $flags)           C\n  $status  = dl_unload_file($libref)                   C\n  $symref  = dl_find_symbol($libref, $symbol)          C\n  @symbols = dl_undef_symbols()                        C\n  dl_install_xsub($name, $symref [, $filename])        C\n  $message = dl_error                                  C\n\n=over 4\n\n=item @dl_library_path\n\nThe standard/default list of directories in which dl_findfile() will\nsearch for libraries etc.  Directories are searched in order:\n$dl_library_path[0], [1], ... etc\n\n@dl_library_path is initialised to hold the list of 'normal' directories\n(F</usr/lib>, etc) determined by B<Configure> (C<$Config{'libpth'}>).  This should\nensure portability across a wide range of platforms.\n\n@dl_library_path should also be initialised with any other directories\nthat can be determined from the environment at runtime (such as\nLD_LIBRARY_PATH for SunOS).\n\nAfter initialisation @dl_library_path can be manipulated by an\napplication using push and unshift before calling dl_findfile().\nUnshift can be used to add directories to the front of the search order\neither to save search time or to override libraries with the same name\nin the 'normal' directories.\n\nThe load function that dl_load_file() calls may require an absolute\npathname.  The dl_findfile() function and @dl_library_path can be\nused to search for and return the absolute pathname for the\nlibrary/object that you wish to load.\n\n=item @dl_resolve_using\n\nA list of additional libraries or other shared objects which can be\nused to resolve any undefined symbols that might be generated by a\nlater call to load_file().\n\nThis is only required on some platforms which do not handle dependent\nlibraries automatically.  For example the Socket Perl extension\nlibrary (F<auto/Socket/Socket.so>) contains references to many socket\nfunctions which need to be resolved when it's loaded.  Most platforms\nwill automatically know where to find the 'dependent' library (e.g.,\nF</usr/lib/libsocket.so>).  A few platforms need to be told the\nlocation of the dependent library explicitly.  Use @dl_resolve_using\nfor this.\n\nExample usage:\n\n    @dl_resolve_using = dl_findfile('-lsocket');\n\n=item @dl_require_symbols\n\nA list of one or more symbol names that are in the library/object file\nto be dynamically loaded.  This is only required on some platforms.\n\n=item @dl_librefs\n\nAn array of the handles returned by successful calls to dl_load_file(),\nmade by bootstrap, in the order in which they were loaded.\nCan be used with dl_find_symbol() to look for a symbol in any of\nthe loaded files.\n\n=item @dl_modules\n\nAn array of module (package) names that have been bootstrap'ed.\n\n=item @dl_shared_objects\n\nAn array of file names for the shared objects that were loaded.\n\n=item dl_error()\n\nSyntax:\n\n    $message = dl_error();\n\nError message text from the last failed DynaLoader function.  Note\nthat, similar to errno in unix, a successful function call does not\nreset this message.\n\nImplementations should detect the error as soon as it occurs in any of\nthe other functions and save the corresponding message for later\nretrieval.  This will avoid problems on some platforms (such as SunOS)\nwhere the error message is very temporary (e.g., dlerror()).\n\n=item $dl_debug\n\nInternal debugging messages are enabled when $dl_debug is set true.\nCurrently setting $dl_debug only affects the Perl side of the\nDynaLoader.  These messages should help an application developer to\nresolve any DynaLoader usage problems.\n\n$dl_debug is set to C<$ENV{'PERL_DL_DEBUG'}> if defined.\n\nFor the DynaLoader developer/porter there is a similar debugging\nvariable added to the C code (see dlutils.c) and enabled if Perl was\nbuilt with the B<-DDEBUGGING> flag.  This can also be set via the\nPERL_DL_DEBUG environment variable.  Set to 1 for minimal information or\nhigher for more.\n\n=item $dl_dlext\n\nWhen specified (localised) in a module's F<.pm> file, indicates the extension\nwhich the module's loadable object will have. For example:\n\n    local $DynaLoader::dl_dlext = 'unusual_ext';\n\nwould indicate that the module's loadable object has an extension of\nC<unusual_ext> instead of the more usual C<$Config{dlext}>.  NOTE: This also\nrequires that the module's F<Makefile.PL> specify (in C<WriteMakefile()>):\n\n    DLEXT => 'unusual_ext',\n\n=item dl_findfile()\n\nSyntax:\n\n    @filepaths = dl_findfile(@names)\n\nDetermine the full paths (including file suffix) of one or more\nloadable files given their generic names and optionally one or more\ndirectories.  Searches directories in @dl_library_path by default and\nreturns an empty list if no files were found.\n\nNames can be specified in a variety of platform independent forms.  Any\nnames in the form B<-lname> are converted into F<libname.*>, where F<.*> is\nan appropriate suffix for the platform.\n\nIf a name does not already have a suitable prefix and/or suffix then\nthe corresponding file will be searched for by trying combinations of\nprefix and suffix appropriate to the platform: \"$name.o\", \"lib$name.*\"\nand \"$name\".\n\nIf any directories are included in @names they are searched before\n@dl_library_path.  Directories may be specified as B<-Ldir>.  Any other\nnames are treated as filenames to be searched for.\n\nUsing arguments of the form C<-Ldir> and C<-lname> is recommended.\n\nExample: \n\n    @dl_resolve_using = dl_findfile(qw(-L/usr/5lib -lposix));\n\n\n=item dl_expandspec()\n\nSyntax:\n\n    $filepath = dl_expandspec($spec)\n\nSome unusual systems, such as VMS, require special filename handling in\norder to deal with symbolic names for files (i.e., VMS's Logical Names).\n\nTo support these systems a dl_expandspec() function can be implemented\neither in the F<dl_*.xs> file or code can be added to the dl_expandspec()\nfunction in F<DynaLoader.pm>.  See F<DynaLoader_pm.PL> for more information.\n\n=item dl_load_file()\n\nSyntax:\n\n    $libref = dl_load_file($filename, $flags)\n\nDynamically load $filename, which must be the path to a shared object\nor library.  An opaque 'library reference' is returned as a handle for\nthe loaded object.  Returns undef on error.\n\nThe $flags argument to alters dl_load_file behaviour.  \nAssigned bits:\n\n 0x01  make symbols available for linking later dl_load_file's.\n       (only known to work on Solaris 2 using dlopen(RTLD_GLOBAL))\n       (ignored under VMS; this is a normal part of image linking)\n\n(On systems that provide a handle for the loaded object such as SunOS\nand HPUX, $libref will be that handle.  On other systems $libref will\ntypically be $filename or a pointer to a buffer containing $filename.\nThe application should not examine or alter $libref in any way.)\n\nThis is the function that does the real work.  It should use the\ncurrent values of @dl_require_symbols and @dl_resolve_using if required.\n\n    SunOS: dlopen($filename)\n    HP-UX: shl_load($filename)\n    Linux: dld_create_reference(@dl_require_symbols); dld_link($filename)\n    VMS:   lib$find_image_symbol($filename,$dl_require_symbols[0])\n\n(The dlopen() function is also used by Solaris and some versions of\nLinux, and is a common choice when providing a \"wrapper\" on other\nmechanisms as is done in the OS/2 port.)\n\n=item dl_unload_file()\n\nSyntax:\n\n    $status = dl_unload_file($libref)\n\nDynamically unload $libref, which must be an opaque 'library reference' as\nreturned from dl_load_file.  Returns one on success and zero on failure.\nThis function is optional and may not necessarily be provided on all platforms.\n\nIf it is defined and perl is compiled with the C macro C<DL_UNLOAD_ALL_AT_EXIT>\ndefined, then it is called automatically when the interpreter exits for\nevery shared object or library loaded by DynaLoader::bootstrap.  All such\nlibrary references are stored in @dl_librefs by DynaLoader::Bootstrap as it\nloads the libraries.  The files are unloaded in last-in, first-out order.\n\nThis unloading is usually necessary when embedding a shared-object perl (e.g.\none configured with -Duseshrplib) within a larger application, and the perl\ninterpreter is created and destroyed several times within the lifetime of the\napplication.  In this case it is possible that the system dynamic linker will\nunload and then subsequently reload the shared libperl without relocating any\nreferences to it from any files DynaLoaded by the previous incarnation of the\ninterpreter.  As a result, any shared objects opened by DynaLoader may point to\na now invalid 'ghost' of the libperl shared object, causing apparently random\nmemory corruption and crashes.  This behaviour is most commonly seen when using\nApache and mod_perl built with the APXS mechanism.\n\n    SunOS: dlclose($libref)\n    HP-UX: ???\n    Linux: ???\n    VMS:   ???\n\n(The dlclose() function is also used by Solaris and some versions of\nLinux, and is a common choice when providing a \"wrapper\" on other\nmechanisms as is done in the OS/2 port.)\n\n=item dl_load_flags()\n\nSyntax:\n\n    $flags = dl_load_flags $modulename;\n\nDesigned to be a method call, and to be overridden by a derived class\n(i.e. a class which has DynaLoader in its @ISA).  The definition in\nDynaLoader itself returns 0, which produces standard behavior from\ndl_load_file().\n\n=item dl_find_symbol()\n\nSyntax:\n\n    $symref = dl_find_symbol($libref, $symbol)\n\nReturn the address of the symbol $symbol or C<undef> if not found.  If the\ntarget system has separate functions to search for symbols of different\ntypes then dl_find_symbol() should search for function symbols first and\nthen other types.\n\nThe exact manner in which the address is returned in $symref is not\ncurrently defined.  The only initial requirement is that $symref can\nbe passed to, and understood by, dl_install_xsub().\n\n    SunOS: dlsym($libref, $symbol)\n    HP-UX: shl_findsym($libref, $symbol)\n    Linux: dld_get_func($symbol) and/or dld_get_symbol($symbol)\n    VMS:   lib$find_image_symbol($libref,$symbol)\n\n\n=item dl_find_symbol_anywhere()\n\nSyntax:\n\n    $symref = dl_find_symbol_anywhere($symbol)\n\nApplies dl_find_symbol() to the members of @dl_librefs and returns\nthe first match found.\n\n=item dl_undef_symbols()\n\nExample\n\n    @symbols = dl_undef_symbols()\n\nReturn a list of symbol names which remain undefined after load_file().\nReturns C<()> if not known.  Don't worry if your platform does not provide\na mechanism for this.  Most do not need it and hence do not provide it,\nthey just return an empty list.\n\n\n=item dl_install_xsub()\n\nSyntax:\n\n    dl_install_xsub($perl_name, $symref [, $filename])\n\nCreate a new Perl external subroutine named $perl_name using $symref as\na pointer to the function which implements the routine.  This is simply\na direct call to newXS()/newXS_flags().  Returns a reference to the installed\nfunction.\n\nThe $filename parameter is used by Perl to identify the source file for\nthe function if required by die(), caller() or the debugger.  If\n$filename is not defined then \"DynaLoader\" will be used.\n\n\n=item bootstrap()\n\nSyntax:\n\nbootstrap($module [...])\n\nThis is the normal entry point for automatic dynamic loading in Perl.\n\nIt performs the following actions:\n\n=over 8\n\n=item *\n\nlocates an auto/$module directory by searching @INC\n\n=item *\n\nuses dl_findfile() to determine the filename to load\n\n=item *\n\nsets @dl_require_symbols to C<(\"boot_$module\")>\n\n=item *\n\nexecutes an F<auto/$module/$module.bs> file if it exists\n(typically used to add to @dl_resolve_using any files which\nare required to load the module on the current platform)\n\n=item *\n\ncalls dl_load_flags() to determine how to load the file.\n\n=item *\n\ncalls dl_load_file() to load the file\n\n=item *\n\ncalls dl_undef_symbols() and warns if any symbols are undefined\n\n=item *\n\ncalls dl_find_symbol() for \"boot_$module\"\n\n=item *\n\ncalls dl_install_xsub() to install it as \"${module}::bootstrap\"\n\n=item *\n\ncalls &{\"${module}::bootstrap\"} to bootstrap the module (actually\nit uses the function reference returned by dl_install_xsub for speed)\n\n=back\n\nAll arguments to bootstrap() are passed to the module's bootstrap function.\nThe default code generated by F<xsubpp> expects $module [, $version]\nIf the optional $version argument is not given, it defaults to\nC<$XS_VERSION // $VERSION> in the module's symbol table. The default code\ncompares the Perl-space version with the version of the compiled XS code,\nand croaks with an error if they do not match.\n\n=back\n\n\n=head1 AUTHOR\n\nTim Bunce, 11 August 1994.\n\nThis interface is based on the work and comments of (in no particular\norder): Larry Wall, Robert Sanders, Dean Roehrich, Jeff Okamoto, Anno\nSiegel, Thomas Neumann, Paul Marquess, Charles Bailey, myself and others.\n\nLarry Wall designed the elegant inherited bootstrap mechanism and\nimplemented the first Perl 5 dynamic loader using it.\n\nSolaris global loading added by Nick Ing-Simmons with design/coding\nassistance from Tim Bunce, January 1996.\n\n=cut\nEOT\n\nclose OUT or die $!;\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/ext/DynaLoader/dl_symbian.xs": "/* dl_symbian.xs\n * \n * Platform:\tSymbian 7.0s\n * Author:\tJarkko Hietaniemi <jarkko.hietaniemi@nokia.com>\n * Copyright:\t2004, Nokia\n * License:\tArtistic/GPL\n *\n */\n\n/*\n * In Symbian DLLs there is no name information, one can only access\n * the functions by their ordinals.  Perl, however, very much would like\n * to load functions by their names.  We fake this by having a special\n * setup function at the ordinal 1 (this is arranged by building the DLLs\n * in a special way).  The setup function builds a Perl hash mapping the\n * names to the ordinals, and the hash is then used by dlsym().\n *\n */\n\n#include <e32base.h>\n#include <eikdll.h>\n#include <utf.h>\n\n/* This is a useful pattern: first include the Symbian headers,\n * only after that the Perl ones.  Otherwise you will get a lot\n * trouble because of Symbian's New(), Copy(), etc definitions. */\n\n#define PERL_EXT\n#define PERL_IN_DL_SYMBIAN_XS\n\n#include \"EXTERN.h\"\n#include \"perl.h\"\n#include \"XSUB.h\"\n\nSTART_EXTERN_C\n\nvoid *dlopen(const char *filename, int flag);\nvoid *dlsym(void *handle, const char *symbol);\nint   dlclose(void *handle);\nconst char *dlerror(void);\n\nextern void*  memset(void *s, int c, size_t n);\nextern size_t strlen(const char *s);\n\nEND_EXTERN_C\n\n#include \"dlutils.c\"\n\n#define RTLD_LAZY   0x0001\n#define RTLD_NOW    0x0002\n#define RTLD_GLOBAL 0x0004\n\n#ifndef NULL\n#  define NULL 0\n#endif\n\n/* No need to pull in symbian_dll.cpp for this. */\n#define symbian_get_vars() ((void*)Dll::Tls())\n\nconst TInt KPerlDllSetupFunction = 1;\n\ntypedef struct {\n    RLibrary\thandle;\n    TInt\terror;\n    HV*\t\tsymbols;\n} PerlSymbianLibHandle;\n\ntypedef void (*PerlSymbianLibInit)(void *);\n\nvoid* dlopen(const char *filename, int flags) {\n    TBuf16<KMaxFileName> utf16fn;\n    const TUint8* utf8fn = (const TUint8*)filename;\n    PerlSymbianLibHandle* h = NULL;\n    TInt error;\n\n    error =\n        CnvUtfConverter::ConvertToUnicodeFromUtf8(utf16fn, TPtrC8(utf8fn));\n    if (error == KErrNone) {\n        h = new PerlSymbianLibHandle;\n        if (h) {\n            h->error   = KErrNone;\n            h->symbols = (HV *)NULL;\n        } else\n            error = KErrNoMemory;\n    }\n\n    if (h && error == KErrNone) {\n        error = (h->handle).Load(utf16fn);\n        if (error == KErrNone) {\n            TLibraryFunction init = (h->handle).Lookup(KPerlDllSetupFunction);\n            ((PerlSymbianLibInit)init)(h);\n        } else {\n\t    free(h);\n            h = NULL;\n        }\n    }\n\n    if (h)\n        h->error = error;\n\n    return h;\n}\n\nvoid* dlsym(void *handle, const char *symbol) {\n    if (handle) {\n        dTHX;\n        PerlSymbianLibHandle* h = (PerlSymbianLibHandle*)handle;\n        HV* symbols = h->symbols;\n        if (symbols) {\n            SV** svp = hv_fetch(symbols, symbol, strlen(symbol), FALSE);\n            if (svp && *svp && SvIOK(*svp)) {\n                IV ord = SvIV(*svp);\n                if (ord > 0)\n                    return (void*)((h->handle).Lookup(ord));\n            }\n        }\n    }\n    return NULL;\n}\n\nint dlclose(void *handle) {\n    PerlSymbianLibHandle* h = (PerlSymbianLibHandle*)handle;\n    if (h) {\n        (h->handle).Close();\n        if (h->symbols) {\n            dTHX;\n            hv_undef(h->symbols);\n            h->symbols = NULL;\n        }\n        return 0;\n    } else\n        return 1;\n}\n\nconst char* dlerror(void) {\n    return 0;\t/* Bad interface: assumes static data. */\n}\n\nstatic void\ndl_private_init(pTHX)\n{\n    (void)dl_generic_private_init(aTHX);\n}\n \nMODULE = DynaLoader\tPACKAGE = DynaLoader\n\nPROTOTYPES:  ENABLE\n\nBOOT:\n    (void)dl_private_init(aTHX);\n\n\nvoid\ndl_load_file(filename, flags=0)\n    char *\tfilename\n    int\t\tflags\n  PREINIT:\n    PerlSymbianLibHandle* h;\n  CODE:\n{\n    ST(0) = sv_newmortal();\n    h = (PerlSymbianLibHandle*)dlopen(filename, flags);\n    if (h && h->error == KErrNone)\n\tsv_setiv(ST(0), PTR2IV(h));\n    else\n        SaveError(aTHX_ \"(dl_load_file %s %d)\"\n                        filename, h ? h->error : -1);\n}\n\n\nint\ndl_unload_file(libhandle)\n    void *\tlibhandle\n  CODE:\n    RETVAL = (dlclose(libhandle) == 0 ? 1 : 0);\n  OUTPUT:\n    RETVAL\n\n\nvoid\ndl_find_symbol(libhandle, symbolname, ign_err=0)\n    void *\tlibhandle\n    char *\tsymbolname\n    int\t        ign_err\n    PREINIT:\n    void *sym;\n    CODE:\n    PerlSymbianLibHandle* h = (PerlSymbianLibHandle*)libhandle;\n    sym = dlsym(libhandle, symbolname);\n    ST(0) = sv_newmortal();\n    if (sym) {\n       sv_setiv(ST(0), PTR2IV(sym));\n    } else {\n       if (!ign_err)\n           SaveError(aTHX_ \"(dl_find_symbol %s %d)\",\n                     symbolname, h ? h->error : -1);\n    }\n\n\nvoid\ndl_undef_symbols()\n    CODE:\n\n\n\n# These functions should not need changing on any platform:\n\nvoid\ndl_install_xsub(perl_name, symref, filename=\"$Package\")\n    char *\t\tperl_name\n    void *\t\tsymref \n    const char *\tfilename\n    CODE:\n    ST(0) = sv_2mortal(newRV((SV*)newXS_flags(perl_name,\n\t\t\t\t\t      (void(*)(pTHX_ CV *))symref,\n\t\t\t\t\t      filename, NULL,\n\t\t\t\t\t      XS_DYNAMIC_FILENAME)));\n\n\nSV *\ndl_error()\n    CODE:\n    dMY_CXT;\n    RETVAL = newSVsv(MY_CXT.x_dl_last_error);\n    OUTPUT:\n    RETVAL\n\n#if defined(USE_ITHREADS)\n\nvoid\nCLONE(...)\n    CODE:\n    MY_CXT_CLONE;\n\n    PERL_UNUSED_VAR(items);\n\n    /* MY_CXT_CLONE just does a memcpy on the whole structure, so to avoid\n     * using Perl variables that belong to another thread, we create our \n     * own for this thread.\n     */\n    MY_CXT.x_dl_last_error = newSVpvs(\"\");\n\n#endif\n\n# end.\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/ext/DynaLoader/dlutils.c": "/* dlutils.c - handy functions and definitions for dl_*.xs files\n *\n * Currently this file is simply #included into dl_*.xs/.c files.\n * It should really be split into a dlutils.h and dlutils.c\n *\n * Modified:\n * 29th Feburary 2000 - Alan Burlison: Added functionality to close dlopen'd\n *                      files when the interpreter exits\n */\n\n#define PERL_EUPXS_ALWAYS_EXPORT\n#ifndef START_MY_CXT /* Some IDEs try compiling this standalone. */\n#   define PERL_EXT\n#   include \"EXTERN.h\"\n#   include \"perl.h\"\n#   include \"XSUB.h\"\n#endif\n\n#ifndef XS_VERSION\n#  define XS_VERSION \"0\"\n#endif\n#define MY_CXT_KEY \"DynaLoader::_guts\" XS_VERSION\n\n/* disable version checking since DynaLoader can't be DynaLoaded */\n#undef dXSBOOTARGSXSAPIVERCHK\n#define dXSBOOTARGSXSAPIVERCHK dXSBOOTARGSNOVERCHK\n\ntypedef struct {\n    SV*\t\tx_dl_last_error;\t/* pointer to allocated memory for\n\t\t\t\t\t   last error message */\n#if defined(PERL_IN_DL_HPUX_XS) || defined(PERL_IN_DL_DLOPEN_XS)\n    int\t\tx_dl_nonlazy;\t\t/* flag for immediate rather than lazy\n\t\t\t\t\t   linking (spots unresolved symbol) */\n#endif\n#ifdef DL_LOADONCEONLY\n    HV *\tx_dl_loaded_files;\t/* only needed on a few systems */\n#endif\n#ifdef DL_CXT_EXTRA\n    my_cxtx_t\tx_dl_cxtx;\t\t/* extra platform-specific data */\n#endif\n#ifdef DEBUGGING\n    int\t\tx_dl_debug;\t/* value copied from $DynaLoader::dl_debug */\n#endif\n} my_cxt_t;\n\nSTART_MY_CXT\n\n#define dl_last_error\t(SvPVX(MY_CXT.x_dl_last_error))\n#if defined(PERL_IN_DL_HPUX_XS) || defined(PERL_IN_DL_DLOPEN_XS)\n#define dl_nonlazy\t(MY_CXT.x_dl_nonlazy)\n#endif\n#ifdef DL_LOADONCEONLY\n#define dl_loaded_files\t(MY_CXT.x_dl_loaded_files)\n#endif\n#ifdef DL_CXT_EXTRA\n#define dl_cxtx\t\t(MY_CXT.x_dl_cxtx)\n#endif\n#ifdef DEBUGGING\n#define dl_debug\t(MY_CXT.x_dl_debug)\n#endif\n\n#ifdef DEBUGGING\n#define DLDEBUG(level,code) \\\n    STMT_START {\t\t\t\t\t\\\n\tdMY_CXT;\t\t\t\t\t\\\n\tif (dl_debug>=level) { code; }\t\t\t\\\n    } STMT_END\n#else\n#define DLDEBUG(level,code)\tNOOP\n#endif\n\n#ifdef DL_UNLOAD_ALL_AT_EXIT\n/* Close all dlopen'd files */\nstatic void\ndl_unload_all_files(pTHX_ void *unused)\n{\n    CV *sub;\n    PERL_UNUSED_ARG(unused);\n    if ((sub = get_cvs(\"DynaLoader::dl_unload_file\", 0)) != NULL) {\n        AV *dl_librefs = get_av(\"DynaLoader::dl_librefs\", 0);\n        SV *dl_libref;\n        while ((dl_libref = av_pop(dl_librefs)) != &PL_sv_undef) {\n           dSP;\n           ENTER;\n           SAVETMPS;\n           PUSHMARK(SP);\n           XPUSHs(sv_2mortal(dl_libref));\n           PUTBACK;\n           call_sv((SV*)sub, G_DISCARD | G_NODEBUG);\n           FREETMPS;\n           LEAVE;\n        }\n    }\n}\n#endif\n\nstatic void\ndl_generic_private_init(pTHX)\t/* called by dl_*.xs dl_private_init() */\n{\n#if defined(PERL_IN_DL_HPUX_XS) || defined(PERL_IN_DL_DLOPEN_XS)\n    char *perl_dl_nonlazy;\n    UV uv;\n#endif\n    MY_CXT_INIT;\n\n    MY_CXT.x_dl_last_error = newSVpvs(\"\");\n#ifdef DL_LOADONCEONLY\n    dl_loaded_files = NULL;\n#endif\n#ifdef DEBUGGING\n    {\n\tSV *sv = get_sv(\"DynaLoader::dl_debug\", 0);\n\tdl_debug = sv ? SvIV(sv) : 0;\n    }\n#endif\n\n#if defined(PERL_IN_DL_HPUX_XS) || defined(PERL_IN_DL_DLOPEN_XS)\n    if ( (perl_dl_nonlazy = getenv(\"PERL_DL_NONLAZY\")) != NULL\n\t&& grok_atoUV(perl_dl_nonlazy, &uv, NULL)\n\t&& uv <= INT_MAX\n    ) {\n\tdl_nonlazy = (int)uv;\n    } else\n\tdl_nonlazy = 0;\n    if (dl_nonlazy)\n\tDLDEBUG(1,PerlIO_printf(Perl_debug_log, \"DynaLoader bind mode is 'non-lazy'\\n\"));\n#endif\n#ifdef DL_LOADONCEONLY\n    if (!dl_loaded_files)\n\tdl_loaded_files = newHV(); /* provide cache for dl_*.xs if needed */\n#endif\n#ifdef DL_UNLOAD_ALL_AT_EXIT\n    call_atexit(&dl_unload_all_files, (void*)0);\n#endif\n}\n\n\n#ifndef SYMBIAN\n/* SaveError() takes printf style args and saves the result in dl_last_error */\nstatic void\nSaveError(pTHX_ const char* pat, ...)\n{\n    va_list args;\n    SV *msv;\n    const char *message;\n    STRLEN len;\n\n    /* This code is based on croak/warn, see mess() in util.c */\n\n    va_start(args, pat);\n    msv = vmess(pat, &args);\n    va_end(args);\n\n    message = SvPV(msv,len);\n    len++;\t\t/* include terminating null char */\n\n    {\n\tdMY_CXT;\n    /* Copy message into dl_last_error (including terminating null char) */\n\tsv_setpvn(MY_CXT.x_dl_last_error, message, len) ;\n\tDLDEBUG(2,PerlIO_printf(Perl_debug_log, \"DynaLoader: stored error msg '%s'\\n\",dl_last_error));\n    }\n}\n#endif\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/ext/DynaLoader/hints/netbsd.pl": "# XXX Configure test needed?\n# Some NetBSDs seem to have a dlopen() that won't accept relative paths\n$self->{CCFLAGS} = $Config{ccflags} . ' -DDLOPEN_WONT_DO_RELATIVE_PATHS';\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/ext/DynaLoader/hints/android.pl": "# Android's linker will actually do relative paths just fine; the problem\n# is that it won't search from the current directory, only on\n# /vendor/lib, /system/lib, and whatever is in LD_LIBRARY_PATH.\n# The core handles that just fine, but bits of CPAN rather rightfully\n# expect things like these to work:\n# use lib 'foo'            # puts foo/ in @INC\n# use My::Module::In::Foo; # calls dlopen() with foo/My/Module/...\n#                          # which will likely fail\n# So we take this route instead.\n$self->{CCFLAGS} = $Config{ccflags} . ' -DDLOPEN_WONT_DO_RELATIVE_PATHS';\n1;\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/ext/DynaLoader/hints/openbsd.pl": "# XXX Configure test needed?\n# Some OpenBSDs seem to have a dlopen() that won't accept relative paths\n$self->{CCFLAGS} = $Config{ccflags} . ' -DDLOPEN_WONT_DO_RELATIVE_PATHS';\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Config-Perl-V/t/22_plv510.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 99;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, 0, \"No build time known\");\nis ($conf->{config}{version}, \"5.10.0\", \"reconstructed \\%Config{version}\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\neval { require Digest::MD5; };\nmy $md5 = $@ ? \"0\" x 32 : \"ce0a7871dfddbbed0a6c685c0f52dbf9\";\nok (my $sig = Config::Perl::V::signature ($conf), \"Get signature\");\nis ($sig, $md5, \"MD5\");\n\n__END__\nSummary of my perl5 (revision 5 version 10 subversion 0) configuration:\n  Platform:\n    osname=linux, osvers=2.6.22.13-0.3-default, archname=i686-linux-64int\n    uname='linux nb09 2.6.22.13-0.3-default #1 smp 20071119 15:02:58 utc i686 i686 i386 gnulinux '\n    config_args='-Duse64bitint -des'\n    hint=recommended, useposix=true, d_sigaction=define\n    useithreads=undef, usemultiplicity=undef\n    useperlio=define, d_sfio=undef, uselargefiles=define, usesocks=undef\n    use64bitint=define, use64bitall=undef, uselongdouble=undef\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags ='-fno-strict-aliasing -pipe -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64',\n    optimize='-O2 -g',\n    cppflags='-fno-strict-aliasing -pipe -I/pro/local/include'\n    ccversion='', gccversion='4.2.1 (SUSE Linux)', gccosandvers=''\n    intsize=4, longsize=4, ptrsize=4, doublesize=8, byteorder=12345678\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=12\n    ivtype='long long', ivsize=8, nvtype='double', nvsize=8, Off_t='off_t', lseeksize=8\n    alignbytes=4, prototype=define\n  Linker and Libraries:\n    ld='cc', ldflags ='-L/pro/local/lib'\n    libpth=/pro/local/lib /lib /usr/lib /usr/local/lib\n    libs=-lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lc\n    perllibs=-lnsl -ldl -lm -lcrypt -lutil -lc\n    libc=/lib/libc-2.6.1.so, so=so, useshrplib=false, libperl=libperl.a\n    gnulibc_version='2.6.1'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC', lddlflags='-shared -O2 -L/pro/local/lib'\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Config-Perl-V/t/25_plv516.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 100;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Mar 12 2013 08:36:17\", \"Build time\");\nis ($conf->{config}{version}, \"5.16.3\", \"reconstructed \\%Config{version}\");\nis ($conf->{config}{ccversion}, \"\", \"Using gcc. non-gcc version should not be defined\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tHAS_TIMES PERLIO_LAYERS PERL_DONT_CREATE_GVSV\n\tPERL_MALLOC_WRAP PERL_PRESERVE_IVUV USE_64_BIT_INT\n\tUSE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n\tUSE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_PERLIO\n\tUSE_PERL_ATOF\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\neval { require Digest::MD5; };\nmy $md5 = $@ ? \"0\" x 32 : \"7b00cf3b306d96fa802892e6ad4b070f\";\nok (my $sig = Config::Perl::V::signature ($conf), \"Get signature\");\nis ($sig, $md5, \"MD5\");\n\n__END__\nSummary of my perl5 (revision 5 version 16 subversion 3) configuration:\n   \n  Platform:\n    osname=linux, osvers=3.4.33-2.24-desktop, archname=i686-linux-64int\n    uname='linux lx09 3.4.33-2.24-desktop #1 smp preempt tue feb 26 03:34:33 utc 2013 (5f00a32) i686 i686 i386 gnulinux '\n    config_args='-Duse64bitint -Duselongdouble -des'\n    hint=previous, useposix=true, d_sigaction=define\n    useithreads=undef, usemultiplicity=undef\n    useperlio=define, d_sfio=undef, uselargefiles=define, usesocks=undef\n    use64bitint=define, use64bitall=undef, uselongdouble=undef\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags ='-fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64',\n    optimize='-O2',\n    cppflags='-fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include -fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'\n    ccversion='', gccversion='4.7.1 20120723 [gcc-4_7-branch revision 189773]', gccosandvers=''\n    intsize=4, longsize=4, ptrsize=4, doublesize=8, byteorder=12345678\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=12\n    ivtype='long long', ivsize=8, nvtype='double', nvsize=8, Off_t='off_t', lseeksize=8\n    alignbytes=4, prototype=define\n  Linker and Libraries:\n    ld='cc', ldflags ='-L/pro/local/lib -fstack-protector'\n    libpth=/pro/local/lib /lib /usr/lib /usr/local/lib\n    libs=-lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lc -lgdbm_compat\n    perllibs=-lnsl -ldl -lm -lcrypt -lutil -lc\n    libc=/lib/libc-2.15.so, so=so, useshrplib=false, libperl=libperl.a\n    gnulibc_version='2.15'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC', lddlflags='-shared -O2 -L/pro/local/lib -fstack-protector'\n\n\nCharacteristics of this binary (from libperl): \n  Compile-time options: HAS_TIMES PERLIO_LAYERS PERL_DONT_CREATE_GVSV\n                        PERL_MALLOC_WRAP PERL_PRESERVE_IVUV USE_64_BIT_INT\n                        USE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n                        USE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_PERLIO\n                        USE_PERL_ATOF\n  Built under linux\n  Compiled at Mar 12 2013 08:36:17\n  @INC:\n    /pro/lib/perl5/site_perl/5.16.3/i686-linux-64int\n    /pro/lib/perl5/site_perl/5.16.3\n    /pro/lib/perl5/5.16.3/i686-linux-64int\n    /pro/lib/perl5/5.16.3\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Config-Perl-V/t/27_plv5202.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 120;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Apr 19 2015 12:35:54\", \"Build time\");\nis ($conf->{config}{version}, \"5.20.2\", \"reconstructed \\$Config{version}\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tHAS_TIMES MULTIPLICITY PERLIO_LAYERS\n\tPERL_DONT_CREATE_GVSV\n\tPERL_HASH_FUNC_ONE_AT_A_TIME_HARD\n\tPERL_IMPLICIT_CONTEXT PERL_MALLOC_WRAP\n\tPERL_NEW_COPY_ON_WRITE PERL_PRESERVE_IVUV\n\tPERL_USE_DEVEL USE_64_BIT_ALL USE_64_BIT_INT USE_ITHREADS\n\tUSE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n\tUSE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LONG_DOUBLE\n\tUSE_PERLIO USE_PERL_ATOF USE_REENTRANT_API\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\neval { require Digest::MD5; };\nmy $md5 = $@ ? \"0\" x 32 : \"9f954ebc2be7b1d7e151ab28dbdf7062\";\nok (my $sig = Config::Perl::V::signature ($conf), \"Get signature\");\nis ($sig, $md5, \"MD5\");\n\nis_deeply ($conf->{build}{patches}, [], \"No local patches\");\n\nmy %check = (\n    alignbytes      => 16,\n    api_version     => 20,\n    bincompat5005   => \"undef\",\n    byteorder       => 12345678,\n    cc              => \"cc\",\n    cccdlflags      => \"-fPIC\",\n    ccdlflags       => \"-Wl,-E\",\n    config_args     => \"-Dusedevel -Duse64bitall -Dusethreads -Duseithreads -Duselongdouble -des\",\n    gccversion      => \"4.8.3 20140627 [gcc-4_8-branch revision 212064]\",\n    gnulibc_version => \"2.19\",\n    ivsize          => 8,\n    ivtype          => \"long\",\n    ld              => \"cc\",\n    lddlflags       => \"-shared -O2 -L/pro/local/lib -fstack-protector\",\n    ldflags         => \"-L/pro/local/lib -fstack-protector\",\n    libc            => \"libc-2.19.so\",\n    lseektype       => \"off_t\",\n    osvers          => \"3.16.7-13-desktop\",\n    use64bitall     => \"define\",\n    use64bitint     => \"define\",\n    );\nis ($conf->{config}{$_}, $check{$_}, \"reconstructed \\$Config{$_}\") for sort keys %check;\n\n__END__\nSummary of my perl5 (revision 5 version 20 subversion 2) configuration:\n   \n  Platform:\n    osname=linux, osvers=3.16.7-13-desktop, archname=x86_64-linux-thread-multi-ld\n    uname='linux lx09 3.16.7-13-desktop #1 smp preempt wed mar 18 17:31:15 utc 2015 (ba2afab) x86_64 x86_64 x86_64 gnulinux '\n    config_args='-Dusedevel -Duse64bitall -Dusethreads -Duseithreads -Duselongdouble -des'\n    hint=recommended, useposix=true, d_sigaction=define\n    useithreads=define, usemultiplicity=define\n    use64bitint=define, use64bitall=define, uselongdouble=define\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags ='-D_REENTRANT -D_GNU_SOURCE -fPIC -fwrapv -fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64',\n    optimize='-O2',\n    cppflags='-D_REENTRANT -D_GNU_SOURCE -fwrapv -fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include'\n    ccversion='', gccversion='4.8.3 20140627 [gcc-4_8-branch revision 212064]', gccosandvers=''\n    intsize=4, longsize=8, ptrsize=8, doublesize=8, byteorder=12345678\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=16\n    ivtype='long', ivsize=8, nvtype='long double', nvsize=16, Off_t='off_t', lseeksize=8\n    alignbytes=16, prototype=define\n  Linker and Libraries:\n    ld='cc', ldflags ='-L/pro/local/lib -fstack-protector'\n    libpth=/usr/local/lib /usr/lib64/gcc/x86_64-suse-linux/4.8/include-fixed /usr/lib64/gcc/x86_64-suse-linux/4.8/../../../../x86_64-suse-linux/lib /usr/lib /pro/local/lib /lib/../lib64 /usr/lib/../lib64 /lib /lib64 /usr/lib64 /usr/local/lib64\n    libs=-lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lpthread -lc -lgdbm_compat\n    perllibs=-lnsl -ldl -lm -lcrypt -lutil -lpthread -lc\n    libc=libc-2.19.so, so=so, useshrplib=false, libperl=libperl.a\n    gnulibc_version='2.19'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC', lddlflags='-shared -O2 -L/pro/local/lib -fstack-protector'\n\n\nCharacteristics of this binary (from libperl): \n  Compile-time options: HAS_TIMES MULTIPLICITY PERLIO_LAYERS\n                        PERL_DONT_CREATE_GVSV\n                        PERL_HASH_FUNC_ONE_AT_A_TIME_HARD\n                        PERL_IMPLICIT_CONTEXT PERL_MALLOC_WRAP\n                        PERL_NEW_COPY_ON_WRITE PERL_PRESERVE_IVUV\n                        PERL_USE_DEVEL USE_64_BIT_ALL USE_64_BIT_INT\n                        USE_ITHREADS USE_LARGE_FILES USE_LOCALE\n                        USE_LOCALE_COLLATE USE_LOCALE_CTYPE\n                        USE_LOCALE_NUMERIC USE_LONG_DOUBLE USE_PERLIO\n                        USE_PERL_ATOF USE_REENTRANT_API\n  Built under linux\n  Compiled at Apr 19 2015 12:35:54\n  @INC:\n    /pro/lib/perl5/site_perl/5.20.2/x86_64-linux-thread-multi-ld\n    /pro/lib/perl5/site_perl/5.20.2\n    /pro/lib/perl5/5.20.2/x86_64-linux-thread-multi-ld\n    /pro/lib/perl5/5.20.2\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Config-Perl-V/t/31_plv52511.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 128;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V qw( summary );\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Feb 27 2017 15:02:41\", \"Build time\");\nis ($conf->{config}{version}, \"5.25.11\", \"reconstructed \\$Config{version}\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tDEBUGGING HAS_TIMES MULTIPLICITY PERLIO_LAYERS PERL_COPY_ON_WRITE\n\tPERL_DONT_CREATE_GVSV PERL_TRACK_MEMPOOL PERL_IMPLICIT_CONTEXT\n\tPERL_MALLOC_WRAP PERL_OP_PARENT PERL_PRESERVE_IVUV PERL_USE_DEVEL\n\tUSE_64_BIT_ALL\n\tUSE_64_BIT_INT USE_ITHREADS USE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n\tUSE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LOCALE_TIME\n\tUSE_LONG_DOUBLE USE_PERLIO USE_PERL_ATOF USE_REENTRANT_API\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\neval { require Digest::MD5; };\nmy $md5 = $@ ? \"0\" x 32 : \"f0e463400e40ca35b67cec3834b5b9b7\";\nok (my $sig = Config::Perl::V::signature ($conf), \"Get signature\");\nis ($sig, $md5, \"MD5\");\n\nis_deeply ($conf->{build}{patches},\n    [ \"SMOKEaa9ac6cf00899a6f55881d4ca6c1214215dc83ee\" ], \"Local patches\");\n\nmy %check = (\n    alignbytes      => 16,\n    api_version     => 25,\n    bincompat5005   => \"undef\",\n    byteorder       => 12345678,\n    cc              => \"cc\",\n    cccdlflags      => \"-fPIC\",\n    ccdlflags       => \"-Wl,-E\",\n    config_args     => \"-des -Dusedevel -Duseithreads -Duse64bitall -Duselongdouble -DDEBUGGING\",\n    gccversion      => \"6.3.1 20170202 [gcc-6-branch revision 245119]\",\n    gnulibc_version => \"2.24\",\n    ivsize          => 8,\n    ivtype          => \"long\",\n    ld              => \"cc\",\n    lddlflags       => \"-shared -O2 -g -L/pro/local/lib -fstack-protector-strong\",\n    ldflags         => \"-L/pro/local/lib -fstack-protector-strong\",\n    libc            => \"libc-2.24.so\",\n    lseektype       => \"off_t\",\n    osvers          => \"4.10.0-1-default\",\n    use64bitall     => \"define\",\n    use64bitint     => \"define\",\n    usemymalloc     => \"n\",\n    default_inc_excludes_dot\n\t\t    => \"undef\",\n    );\nis ($conf->{config}{$_}, $check{$_}, \"reconstructed \\$Config{$_}\") for sort keys %check;\n\nok (my $info = summary ($conf), \"A summary\");\nok (exists $info->{$_}, \"Summary has $_\") for qw( cc config_args usemymalloc default_inc_excludes_dot );\nis ($info->{default_inc_excludes_dot}, \"undef\", \"This build has . in INC\");\n\n__END__\nSummary of my perl5 (revision 5 version 25 subversion 11) configuration:\n  Snapshot of: aa9ac6cf00899a6f55881d4ca6c1214215dc83ee\n  Platform:\n    osname=linux\n    osvers=4.10.0-1-default\n    archname=x86_64-linux-thread-multi-ld\n    uname='linux lx09 4.10.0-1-default #1 smp preempt mon feb 20 16:47:26 utc 2017 (81ace5a) x86_64 x86_64 x86_64 gnulinux '\n    config_args='-des -Dusedevel -Duseithreads -Duse64bitall -Duselongdouble -DDEBUGGING'\n    hint=recommended\n    useposix=true\n    d_sigaction=define\n    useithreads=define\n    usemultiplicity=define\n    use64bitint=define\n    use64bitall=define\n    uselongdouble=define\n    usemymalloc=n\n    default_inc_excludes_dot=undef\n    bincompat5005=undef\n  Compiler:\n    cc='cc'\n    ccflags ='-D_REENTRANT -D_GNU_SOURCE -fPIC -DDEBUGGING -fwrapv -DDEBUGGING -fno-strict-aliasing -pipe -fstack-protector-strong -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'\n    optimize='-O2 -g'\n    cppflags='-D_REENTRANT -D_GNU_SOURCE -fPIC -DDEBUGGING -fwrapv -DDEBUGGING -fno-strict-aliasing -pipe -fstack-protector-strong -I/pro/local/include'\n    ccversion=''\n    gccversion='6.3.1 20170202 [gcc-6-branch revision 245119]'\n    gccosandvers=''\n    intsize=4\n    longsize=8\n    ptrsize=8\n    doublesize=8\n    byteorder=12345678\n    doublekind=3\n    d_longlong=define\n    longlongsize=8\n    d_longdbl=define\n    longdblsize=16\n    longdblkind=3\n    ivtype='long'\n    ivsize=8\n    nvtype='long double'\n    nvsize=16\n    Off_t='off_t'\n    lseeksize=8\n    alignbytes=16\n    prototype=define\n  Linker and Libraries:\n    ld='cc'\n    ldflags ='-L/pro/local/lib -fstack-protector-strong'\n    libpth=/usr/local/lib /usr/lib64/gcc/x86_64-suse-linux/6/include-fixed /usr/lib64/gcc/x86_64-suse-linux/6/../../../../x86_64-suse-linux/lib /usr/lib /pro/local/lib /lib/../lib64 /usr/lib/../lib64 /lib /lib64 /usr/lib64 /usr/local/lib64\n    libs=-lpthread -lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lc -lgdbm_compat\n    perllibs=-lpthread -lnsl -ldl -lm -lcrypt -lutil -lc\n    libc=libc-2.24.so\n    so=so\n    useshrplib=false\n    libperl=libperl.a\n    gnulibc_version='2.24'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs\n    dlext=so\n    d_dlsymun=undef\n    ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC'\n    lddlflags='-shared -O2 -g -L/pro/local/lib -fstack-protector-strong'\n\n\nCharacteristics of this binary (from libperl):\n  Compile-time options:\n    DEBUGGING\n    HAS_TIMES\n    MULTIPLICITY\n    PERLIO_LAYERS\n    PERL_COPY_ON_WRITE\n    PERL_DONT_CREATE_GVSV\n    PERL_IMPLICIT_CONTEXT\n    PERL_MALLOC_WRAP\n    PERL_OP_PARENT\n    PERL_PRESERVE_IVUV\n    PERL_TRACK_MEMPOOL\n    PERL_USE_DEVEL\n    USE_64_BIT_ALL\n    USE_64_BIT_INT\n    USE_ITHREADS\n    USE_LARGE_FILES\n    USE_LOCALE\n    USE_LOCALE_COLLATE\n    USE_LOCALE_CTYPE\n    USE_LOCALE_NUMERIC\n    USE_LOCALE_TIME\n    USE_LONG_DOUBLE\n    USE_PERLIO\n    USE_PERL_ATOF\n    USE_REENTRANT_API\n  Locally applied patches:\n    SMOKEaa9ac6cf00899a6f55881d4ca6c1214215dc83ee\n  Built under linux\n  Compiled at Feb 27 2017 15:02:41\n  @INC:\n    lib\n    /pro/lib/perl5/site_perl/5.25.11/x86_64-linux-thread-multi-ld\n    /pro/lib/perl5/site_perl/5.25.11\n    /pro/lib/perl5/5.25.11/x86_64-linux-thread-multi-ld\n    /pro/lib/perl5/5.25.11\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Config-Perl-V/t/26_plv5182.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 119;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Jan  9 2014 09:22:04\", \"Build time\");\nis ($conf->{config}{version}, \"5.18.2\", \"reconstructed \\$Config{version}\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tHAS_TIMES PERLIO_LAYERS PERL_DONT_CREATE_GVSV\n\tPERL_HASH_FUNC_ONE_AT_A_TIME_HARD PERL_MALLOC_WRAP\n\tPERL_PRESERVE_IVUV PERL_SAWAMPERSAND USE_64_BIT_INT\n\tUSE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n\tUSE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LONG_DOUBLE\n\tUSE_PERLIO USE_PERL_ATOF\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\neval { require Digest::MD5; };\nmy $md5 = $@ ? \"0\" x 32 : \"874325856acfea3dab7e7c944660f398\";\nok (my $sig = Config::Perl::V::signature ($conf), \"Get signature\");\nis ($sig, $md5, \"MD5\");\n\nis_deeply ($conf->{build}{patches}, [], \"No local patches\");\n\nmy %check = (\n    alignbytes      => 4,\n    api_version     => 18,\n    bincompat5005   => \"undef\",\n    byteorder       => 12345678,\n    cc              => \"cc\",\n    cccdlflags      => \"-fPIC\",\n    ccdlflags       => \"-Wl,-E\",\n    config_args     => \"-Duse64bitint -Duselongdouble -des\",\n    gccversion      => \"4.8.1 20130909 [gcc-4_8-branch revision 202388]\",\n    gnulibc_version => \"2.18\",\n    ivsize          => 8,\n    ivtype          => \"long long\",\n    ld              => \"cc\",\n    lddlflags       => \"-shared -O2 -L/pro/local/lib -fstack-protector\",\n    ldflags         => \"-L/pro/local/lib -fstack-protector\",\n    libc            => \"/lib/libc-2.18.so\",\n    lseektype       => \"off_t\",\n    osvers          => \"3.11.6-4-desktop\",\n    use64bitint     => \"define\",\n    );\nis ($conf->{config}{$_}, $check{$_}, \"reconstructed \\$Config{$_}\") for sort keys %check;\n\n__END__\nSummary of my perl5 (revision 5 version 18 subversion 2) configuration:\n   \n  Platform:\n    osname=linux, osvers=3.11.6-4-desktop, archname=i686-linux-64int-ld\n    uname='linux lx09 3.11.6-4-desktop #1 smp preempt wed oct 30 18:04:56 utc 2013 (e6d4a27) i686 i686 i386 gnulinux '\n    config_args='-Duse64bitint -Duselongdouble -des'\n    hint=recommended, useposix=true, d_sigaction=define\n    useithreads=undef, usemultiplicity=undef\n    useperlio=define, d_sfio=undef, uselargefiles=define, usesocks=undef\n    use64bitint=define, use64bitall=undef, uselongdouble=define\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags ='-fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64',\n    optimize='-O2',\n    cppflags='-fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include'\n    ccversion='', gccversion='4.8.1 20130909 [gcc-4_8-branch revision 202388]', gccosandvers=''\n    intsize=4, longsize=4, ptrsize=4, doublesize=8, byteorder=12345678\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=12\n    ivtype='long long', ivsize=8, nvtype='long double', nvsize=12, Off_t='off_t', lseeksize=8\n    alignbytes=4, prototype=define\n  Linker and Libraries:\n    ld='cc', ldflags ='-L/pro/local/lib -fstack-protector'\n    libpth=/pro/local/lib /lib /usr/lib /usr/local/lib\n    libs=-lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lc -lgdbm_compat\n    perllibs=-lnsl -ldl -lm -lcrypt -lutil -lc\n    libc=/lib/libc-2.18.so, so=so, useshrplib=false, libperl=libperl.a\n    gnulibc_version='2.18'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC', lddlflags='-shared -O2 -L/pro/local/lib -fstack-protector'\n\n\nCharacteristics of this binary (from libperl): \n  Compile-time options: HAS_TIMES PERLIO_LAYERS PERL_DONT_CREATE_GVSV\n                        PERL_HASH_FUNC_ONE_AT_A_TIME_HARD PERL_MALLOC_WRAP\n                        PERL_PRESERVE_IVUV PERL_SAWAMPERSAND USE_64_BIT_INT\n                        USE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n                        USE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LONG_DOUBLE\n                        USE_PERLIO USE_PERL_ATOF\n  Built under linux\n  Compiled at Jan  9 2014 09:22:04\n  @INC:\n    /pro/lib/perl5/site_perl/5.18.2/i686-linux-64int-ld\n    /pro/lib/perl5/site_perl/5.18.2\n    /pro/lib/perl5/5.18.2/i686-linux-64int-ld\n    /pro/lib/perl5/5.18.2\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Config-Perl-V/t/34_plv5280.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 128;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V qw( summary );\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Jun 26 2018 12:17:32\", \"Build time\");\nis ($conf->{config}{version}, \"5.28.0\", \"reconstructed \\$Config{version}\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tHAS_TIMES MULTIPLICITY PERLIO_LAYERS PERL_COPY_ON_WRITE\n\tPERL_DONT_CREATE_GVSV PERL_IMPLICIT_CONTEXT PERL_MALLOC_WRAP\n\tPERL_OP_PARENT PERL_PRESERVE_IVUV USE_64_BIT_ALL USE_64_BIT_INT\n\tUSE_ITHREADS USE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n\tUSE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LOCALE_TIME\n\tUSE_LONG_DOUBLE USE_PERLIO USE_PERL_ATOF USE_REENTRANT_API\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\neval { require Digest::MD5; };\nmy $md5 = $@ ? \"0\" x 32 : \"4add7fd04b60c2048a46ff47087e6952\";\nok (my $sig = Config::Perl::V::signature ($conf), \"Get signature\");\nis ($sig, $md5, \"MD5\");\n\nis_deeply ($conf->{build}{patches}, [], \"No local patches\");\n\nmy %check = (\n    alignbytes      => 16,\n    api_version     => 28,\n    bincompat5005   => \"undef\",\n    byteorder       => 12345678,\n    cc              => \"cc\",\n    cccdlflags      => \"-fPIC\",\n    ccdlflags       => \"-Wl,-E\",\n    config_args     => \"-Dusethreads -Duseithreads -Duse64bitall -Duselongdouble -des\",\n    gccversion      => \"8.1.1 20180523 [gcc-8-branch revision 260570]\",\n    gnulibc_version => \"2.27\",\n    ivsize          => 8,\n    ivtype          => \"long\",\n    ld              => \"cc\",\n    lddlflags       => \"-shared -O2 -L/pro/local/lib -fstack-protector-strong\",\n    ldflags         => \"-L/pro/local/lib -fstack-protector-strong\",\n    libc            => \"libc-2.27.so\",\n    lseektype       => \"off_t\",\n    osvers          => \"4.17.2-1-default\",\n    use64bitall     => \"define\",\n    use64bitint     => \"define\",\n    usemymalloc     => \"n\",\n    default_inc_excludes_dot\n\t\t    => \"define\",\n    );\nis ($conf->{config}{$_}, $check{$_}, \"reconstructed \\$Config{$_}\") for sort keys %check;\n\nok (my $info = summary ($conf), \"A summary\");\nok (exists $info->{$_}, \"Summary has $_\") for qw( cc config_args usemymalloc default_inc_excludes_dot );\nis ($info->{default_inc_excludes_dot}, \"define\", \"This build has . NOT in INC\");\n\n__END__\nSummary of my perl5 (revision 5 version 28 subversion 0) configuration:\n\n  Platform:\n    osname=linux\n    osvers=4.17.2-1-default\n    archname=x86_64-linux-thread-multi-ld\n    uname='linux lx09 4.17.2-1-default #1 smp preempt sat jun 16 10:58:03 utc 2018 (ddde22d) x86_64 x86_64 x86_64 gnulinux '\n    config_args='-Dusethreads -Duseithreads -Duse64bitall -Duselongdouble -des'\n    hint=recommended\n    useposix=true\n    d_sigaction=define\n    useithreads=define\n    usemultiplicity=define\n    use64bitint=define\n    use64bitall=define\n    uselongdouble=define\n    usemymalloc=n\n    default_inc_excludes_dot=define\n    bincompat5005=undef\n  Compiler:\n    cc='cc'\n    ccflags ='-D_REENTRANT -D_GNU_SOURCE -fPIC -fwrapv -fno-strict-aliasing -pipe -fstack-protector-strong -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'\n    optimize='-O2'\n    cppflags='-D_REENTRANT -D_GNU_SOURCE -fPIC -fwrapv -fno-strict-aliasing -pipe -fstack-protector-strong -I/pro/local/include'\n    ccversion=''\n    gccversion='8.1.1 20180523 [gcc-8-branch revision 260570]'\n    gccosandvers=''\n    intsize=4\n    longsize=8\n    ptrsize=8\n    doublesize=8\n    byteorder=12345678\n    doublekind=3\n    d_longlong=define\n    longlongsize=8\n    d_longdbl=define\n    longdblsize=16\n    longdblkind=3\n    ivtype='long'\n    ivsize=8\n    nvtype='long double'\n    nvsize=16\n    Off_t='off_t'\n    lseeksize=8\n    alignbytes=16\n    prototype=define\n  Linker and Libraries:\n    ld='cc'\n    ldflags ='-L/pro/local/lib -fstack-protector-strong'\n    libpth=/usr/local/lib /usr/lib64/gcc/x86_64-suse-linux/8/include-fixed /usr/lib64/gcc/x86_64-suse-linux/8/../../../../x86_64-suse-linux/lib /usr/lib /pro/local/lib /lib/../lib64 /usr/lib/../lib64 /lib /lib64 /usr/lib64 /usr/local/lib64\n    libs=-lpthread -lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lc -lgdbm_compat\n    perllibs=-lpthread -lnsl -ldl -lm -lcrypt -lutil -lc\n    libc=libc-2.27.so\n    so=so\n    useshrplib=false\n    libperl=libperl.a\n    gnulibc_version='2.27'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs\n    dlext=so\n    d_dlsymun=undef\n    ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC'\n    lddlflags='-shared -O2 -L/pro/local/lib -fstack-protector-strong'\n\n\nCharacteristics of this binary (from libperl):\n  Compile-time options:\n    HAS_TIMES\n    MULTIPLICITY\n    PERLIO_LAYERS\n    PERL_COPY_ON_WRITE\n    PERL_DONT_CREATE_GVSV\n    PERL_IMPLICIT_CONTEXT\n    PERL_MALLOC_WRAP\n    PERL_OP_PARENT\n    PERL_PRESERVE_IVUV\n    USE_64_BIT_ALL\n    USE_64_BIT_INT\n    USE_ITHREADS\n    USE_LARGE_FILES\n    USE_LOCALE\n    USE_LOCALE_COLLATE\n    USE_LOCALE_CTYPE\n    USE_LOCALE_NUMERIC\n    USE_LOCALE_TIME\n    USE_LONG_DOUBLE\n    USE_PERLIO\n    USE_PERL_ATOF\n    USE_REENTRANT_API\n  Built under linux\n  Compiled at Jun 26 2018 12:17:32\n  @INC:\n    /pro/lib/perl5/site_perl/5.28.0/x86_64-linux-thread-multi-ld\n    /pro/lib/perl5/site_perl/5.28.0\n    /pro/lib/perl5/5.28.0/x86_64-linux-thread-multi-ld\n    /pro/lib/perl5/5.28.0\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Config-Perl-V/t/28_plv5220.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 120;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Jun  4 2015 17:51:24\", \"Build time\");\nis ($conf->{config}{version}, \"5.22.0\", \"reconstructed \\$Config{version}\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tHAS_TIMES MULTIPLICITY PERLIO_LAYERS\n\tPERL_DONT_CREATE_GVSV\n\tPERL_HASH_FUNC_ONE_AT_A_TIME_HARD\n\tPERL_IMPLICIT_CONTEXT PERL_MALLOC_WRAP\n\tPERL_NEW_COPY_ON_WRITE PERL_PRESERVE_IVUV\n\tUSE_64_BIT_ALL USE_64_BIT_INT USE_ITHREADS\n\tUSE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n\tUSE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LOCALE_TIME\n\tUSE_LONG_DOUBLE USE_PERLIO USE_PERL_ATOF USE_REENTRANT_API\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\neval { require Digest::MD5; };\nmy $md5 = $@ ? \"0\" x 32 : \"ddcc2d51e43bf18f5234ba66529068ef\";\nok (my $sig = Config::Perl::V::signature ($conf), \"Get signature\");\nis ($sig, $md5, \"MD5\");\n\nis_deeply ($conf->{build}{patches}, [], \"No local patches\");\n\nmy %check = (\n    alignbytes      => 16,\n    api_version     => 22,\n    bincompat5005   => \"undef\",\n    byteorder       => 12345678,\n    cc              => \"cc\",\n    cccdlflags      => \"-fPIC\",\n    ccdlflags       => \"-Wl,-E\",\n    config_args     => \"-Duse64bitall -Duselongdouble -Dusethreads -Duseithreads -des\",\n    gccversion      => \"4.8.3 20140627 [gcc-4_8-branch revision 212064]\",\n    gnulibc_version => \"2.19\",\n    ivsize          => 8,\n    ivtype          => \"long\",\n    ld              => \"cc\",\n    lddlflags       => \"-shared -O2 -L/pro/local/lib -fstack-protector\",\n    ldflags         => \"-L/pro/local/lib -fstack-protector\",\n    libc            => \"libc-2.19.so\",\n    lseektype       => \"off_t\",\n    osvers          => \"3.16.7-21-desktop\",\n    use64bitall     => \"define\",\n    use64bitint     => \"define\",\n    );\nis ($conf->{config}{$_}, $check{$_}, \"reconstructed \\$Config{$_}\") for sort keys %check;\n\n__END__\nSummary of my perl5 (revision 5 version 22 subversion 0) configuration:\n   \n  Platform:\n    osname=linux, osvers=3.16.7-21-desktop, archname=x86_64-linux-thread-multi-ld\n    uname='linux lx09 3.16.7-21-desktop #1 smp preempt tue apr 14 07:11:37 utc 2015 (93c1539) x86_64 x86_64 x86_64 gnulinux '\n    config_args='-Duse64bitall -Duselongdouble -Dusethreads -Duseithreads -des'\n    hint=recommended, useposix=true, d_sigaction=define\n    useithreads=define, usemultiplicity=define\n    use64bitint=define, use64bitall=define, uselongdouble=define\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags ='-D_REENTRANT -D_GNU_SOURCE -fPIC -fwrapv -fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_FORTIFY_SOURCE=2',\n    optimize='-O2',\n    cppflags='-D_REENTRANT -D_GNU_SOURCE -fPIC -fwrapv -fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include'\n    ccversion='', gccversion='4.8.3 20140627 [gcc-4_8-branch revision 212064]', gccosandvers=''\n    intsize=4, longsize=8, ptrsize=8, doublesize=8, byteorder=12345678, doublekind=3\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=16, longdblkind=3\n    ivtype='long', ivsize=8, nvtype='long double', nvsize=16, Off_t='off_t', lseeksize=8\n    alignbytes=16, prototype=define\n  Linker and Libraries:\n    ld='cc', ldflags ='-L/pro/local/lib -fstack-protector'\n    libpth=/usr/local/lib /usr/lib64/gcc/x86_64-suse-linux/4.8/include-fixed /usr/lib64/gcc/x86_64-suse-linux/4.8/../../../../x86_64-suse-linux/lib /usr/lib /pro/local/lib /lib/../lib64 /usr/lib/../lib64 /lib /lib64 /usr/lib64 /usr/local/lib64\n    libs=-lpthread -lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lc -lgdbm_compat\n    perllibs=-lpthread -lnsl -ldl -lm -lcrypt -lutil -lc\n    libc=libc-2.19.so, so=so, useshrplib=false, libperl=libperl.a\n    gnulibc_version='2.19'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC', lddlflags='-shared -O2 -L/pro/local/lib -fstack-protector'\n\n\nCharacteristics of this binary (from libperl): \n  Compile-time options: HAS_TIMES MULTIPLICITY PERLIO_LAYERS\n                        PERL_DONT_CREATE_GVSV\n                        PERL_HASH_FUNC_ONE_AT_A_TIME_HARD\n                        PERL_IMPLICIT_CONTEXT PERL_MALLOC_WRAP\n                        PERL_NEW_COPY_ON_WRITE PERL_PRESERVE_IVUV\n                        USE_64_BIT_ALL USE_64_BIT_INT USE_ITHREADS\n                        USE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n                        USE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LOCALE_TIME\n                        USE_LONG_DOUBLE USE_PERLIO USE_PERL_ATOF\n                        USE_REENTRANT_API\n  Built under linux\n  Compiled at Jun  4 2015 17:51:24\n  @INC:\n    /pro/lib/perl5/site_perl/5.22.0/x86_64-linux-thread-multi-ld\n    /pro/lib/perl5/site_perl/5.22.0\n    /pro/lib/perl5/5.22.0/x86_64-linux-thread-multi-ld\n    /pro/lib/perl5/5.22.0\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Config-Perl-V/t/21_plv58.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 100;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Oct 21 2010 14:50:53\", \"Build time\");\nis ($conf->{config}{version}, \"5.8.9\", \"reconstructed \\%Config{version}\");\nis ($conf->{config}{usethreads}, \"define\", \"This was a threaded perl\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tDEBUGGING MULTIPLICITY PERL_IMPLICIT_CONTEXT\n\tPERL_MALLOC_WRAP THREADS_HAVE_PIDS USE_64_BIT_INT\n\tUSE_FAST_STDIO USE_ITHREADS USE_LARGE_FILES\n\tUSE_LONG_DOUBLE USE_PERLIO USE_REENTRANT_API\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\neval { require Digest::MD5; };\nmy $md5 = $@ ? \"0\" x 32 : \"df48dce1adaaf63855d8acd455c51818\";\nok (my $sig = Config::Perl::V::signature ($conf), \"Get signature\");\nis ($sig, $md5, \"MD5\");\n\n__END__\nSummary of my perl5 (revision 5 version 8 subversion 9) configuration:\n  Platform:\n    osname=linux, osvers=2.6.34.7-0.4-desktop, archname=i686-linux-thread-multi-64int-ld\n    uname='linux tux09.procura.nl 2.6.34.7-0.4-desktop #1 smp preempt 2010-10-07 19:07:51 +0200 i686 i686 i386 gnulinux '\n    config_args='-Dusedevel -Dusethreads -Duseithreads -Duse64bitint -Duselongdouble -Duseperlio -des -Dusedevel -Uinstallusrbinperl -Dprefix=/media/Tux/perls-t'\n    hint=recommended, useposix=true, d_sigaction=define\n    usethreads=define use5005threads=undef useithreads=define usemultiplicity=define\n    useperlio=define d_sfio=undef uselargefiles=define usesocks=undef\n    use64bitint=define use64bitall=undef uselongdouble=define\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags ='-D_REENTRANT -D_GNU_SOURCE -DTHREADS_HAVE_PIDS -DDEBUGGING -fno-strict-aliasing -pipe -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64',\n    optimize='-O2',\n    cppflags='-D_REENTRANT -D_GNU_SOURCE -DTHREADS_HAVE_PIDS -DDEBUGGING -fno-strict-aliasing -pipe -I/pro/local/include'\n    ccversion='', gccversion='4.5.0 20100604 [gcc-4_5-branch revision 160292]', gccosandvers=''\n    intsize=4, longsize=4, ptrsize=4, doublesize=8, byteorder=12345678\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=12\n    ivtype='long long', ivsize=8, nvtype='long double', nvsize=12, Off_t='off_t', lseeksize=8\n    alignbytes=4, prototype=define\n  Linker and Libraries:\n    ld='cc', ldflags ='-L/pro/local/lib'\n    libpth=/pro/local/lib /lib /usr/lib /usr/local/lib\n    libs=-lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lpthread -lc\n    perllibs=-lnsl -ldl -lm -lcrypt -lutil -lpthread -lc\n    libc=/lib/libc-2.11.2.so, so=so, useshrplib=false, libperl=libperl.a\n    gnulibc_version='2.11.2'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC', lddlflags='-shared -O2 -L/pro/local/lib'\n\n\nCharacteristics of this binary (from libperl): \n  Compile-time options: DEBUGGING MULTIPLICITY PERL_IMPLICIT_CONTEXT\n                        PERL_MALLOC_WRAP THREADS_HAVE_PIDS USE_64_BIT_INT\n                        USE_FAST_STDIO USE_ITHREADS USE_LARGE_FILES\n                        USE_LONG_DOUBLE USE_PERLIO USE_REENTRANT_API\n  Built under linux\n  Compiled at Oct 21 2010 14:50:53\n  @INC:\n    /media/Tux/perls-t/lib/5.8.9/i686-linux-thread-multi-64int-ld\n    /media/Tux/perls-t/lib/5.8.9\n    /media/Tux/perls-t/lib/site_perl/5.8.9/i686-linux-thread-multi-64int-ld\n    /media/Tux/perls-t/lib/site_perl/5.8.9\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Config-Perl-V/t/27_plv5200.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 119;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Jun 30 2014 15:37:09\", \"Build time\");\nis ($conf->{config}{version}, \"5.20.0\", \"reconstructed \\$Config{version}\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tHAS_TIMES MULTIPLICITY PERLIO_LAYERS\n\tPERL_DONT_CREATE_GVSV\n\tPERL_HASH_FUNC_ONE_AT_A_TIME_HARD\n\tPERL_IMPLICIT_CONTEXT PERL_MALLOC_WRAP\n\tPERL_NEW_COPY_ON_WRITE PERL_PRESERVE_IVUV\n\tPERL_USE_DEVEL USE_64_BIT_INT USE_ITHREADS\n\tUSE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n\tUSE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LONG_DOUBLE\n\tUSE_PERLIO USE_PERL_ATOF USE_REENTRANT_API\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\neval { require Digest::MD5; };\nmy $md5 = $@ ? \"0\" x 32 : \"3e7b4513cd80c6ef00fcd77e5e16f8b4\";\nok (my $sig = Config::Perl::V::signature ($conf), \"Get signature\");\nis ($sig, $md5, \"MD5\");\n\nis_deeply ($conf->{build}{patches}, [], \"No local patches\");\n\nmy %check = (\n    alignbytes      => 4,\n    api_version     => 20,\n    bincompat5005   => \"undef\",\n    byteorder       => 12345678,\n    cc              => \"cc\",\n    cccdlflags      => \"-fPIC\",\n    ccdlflags       => \"-Wl,-E\",\n    config_args     => \"-Dusedevel -Uversiononly -Dinc_version_list=none -Duse64bitint -Dusethreads -Duseithreads -Duselongdouble -des\",\n    gccversion      => \"4.8.1 20130909 [gcc-4_8-branch revision 202388]\",\n    gnulibc_version => \"2.18\",\n    ivsize          => 8,\n    ivtype          => \"long long\",\n    ld              => \"cc\",\n    lddlflags       => \"-shared -O2 -L/pro/local/lib -fstack-protector\",\n    ldflags         => \"-L/pro/local/lib -fstack-protector\",\n    libc            => \"libc-2.18.so\",\n    lseektype       => \"off_t\",\n    osvers          => \"3.11.10-17-desktop\",\n    use64bitint     => \"define\",\n    );\nis ($conf->{config}{$_}, $check{$_}, \"reconstructed \\$Config{$_}\") for sort keys %check;\n\n__END__\nSummary of my perl5 (revision 5 version 20 subversion 0) configuration:\n   \n  Platform:\n    osname=linux, osvers=3.11.10-17-desktop, archname=i686-linux-thread-multi-64int-ld\n    uname='linux lx09 3.11.10-17-desktop #1 smp preempt mon jun 16 15:28:13 utc 2014 (fba7c1f) i686 i686 i386 gnulinux '\n    config_args='-Dusedevel -Uversiononly -Dinc_version_list=none -Duse64bitint -Dusethreads -Duseithreads -Duselongdouble -des'\n    hint=recommended, useposix=true, d_sigaction=define\n    useithreads=define, usemultiplicity=define\n    use64bitint=define, use64bitall=undef, uselongdouble=define\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags ='-D_REENTRANT -D_GNU_SOURCE -fwrapv -fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64',\n    optimize='-O2',\n    cppflags='-D_REENTRANT -D_GNU_SOURCE -fwrapv -fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include'\n    ccversion='', gccversion='4.8.1 20130909 [gcc-4_8-branch revision 202388]', gccosandvers=''\n    intsize=4, longsize=4, ptrsize=4, doublesize=8, byteorder=12345678\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=12\n    ivtype='long long', ivsize=8, nvtype='long double', nvsize=12, Off_t='off_t', lseeksize=8\n    alignbytes=4, prototype=define\n  Linker and Libraries:\n    ld='cc', ldflags ='-L/pro/local/lib -fstack-protector'\n    libpth=/usr/local/lib /usr/lib/gcc/i586-suse-linux/4.8/include-fixed /usr/lib/gcc/i586-suse-linux/4.8/../../../../i586-suse-linux/lib /usr/lib /pro/local/lib /lib\n    libs=-lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lpthread -lc -lgdbm_compat\n    perllibs=-lnsl -ldl -lm -lcrypt -lutil -lpthread -lc\n    libc=libc-2.18.so, so=so, useshrplib=false, libperl=libperl.a\n    gnulibc_version='2.18'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC', lddlflags='-shared -O2 -L/pro/local/lib -fstack-protector'\n\n\nCharacteristics of this binary (from libperl): \n  Compile-time options: HAS_TIMES MULTIPLICITY PERLIO_LAYERS\n                        PERL_DONT_CREATE_GVSV\n                        PERL_HASH_FUNC_ONE_AT_A_TIME_HARD\n                        PERL_IMPLICIT_CONTEXT PERL_MALLOC_WRAP\n                        PERL_NEW_COPY_ON_WRITE PERL_PRESERVE_IVUV\n                        PERL_USE_DEVEL USE_64_BIT_INT USE_ITHREADS\n                        USE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n                        USE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LONG_DOUBLE\n                        USE_PERLIO USE_PERL_ATOF USE_REENTRANT_API\n  Built under linux\n  Compiled at Jun 30 2014 15:37:09\n  @INC:\n    /pro/lib/perl5/site_perl/5.20.0/i686-linux-thread-multi-64int-ld\n    /pro/lib/perl5/site_perl/5.20.0\n    /pro/lib/perl5/5.20.0/i686-linux-thread-multi-64int-ld\n    /pro/lib/perl5/5.20.0\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Config-Perl-V/t/30_plv5240.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 128;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V qw( summary );\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"May 10 2016 15:39:18\", \"Build time\");\nis ($conf->{config}{version}, \"5.24.0\", \"reconstructed \\$Config{version}\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tDEBUGGING HAS_TIMES MULTIPLICITY PERLIO_LAYERS PERL_COPY_ON_WRITE\n\tPERL_DONT_CREATE_GVSV PERL_HASH_FUNC_ONE_AT_A_TIME_HARD\n\tPERL_TRACK_MEMPOOL PERL_IMPLICIT_CONTEXT PERL_MALLOC_WRAP\n\tPERL_PRESERVE_IVUV USE_64_BIT_ALL USE_64_BIT_INT USE_ITHREADS\n\tUSE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n\tUSE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LOCALE_TIME\n\tUSE_LONG_DOUBLE USE_PERLIO USE_PERL_ATOF USE_REENTRANT_API\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\neval { require Digest::MD5; };\nmy $md5 = $@ ? \"0\" x 32 : \"3dffae79f6d2c74073f0d64646709101\";\nok (my $sig = Config::Perl::V::signature ($conf), \"Get signature\");\nis ($sig, $md5, \"MD5\");\n\nis_deeply ($conf->{build}{patches}, [], \"No local patches\");\n\nmy %check = (\n    alignbytes      => 16,\n    api_version     => 24,\n    bincompat5005   => \"undef\",\n    byteorder       => 12345678,\n    cc              => \"cc\",\n    cccdlflags      => \"-fPIC\",\n    ccdlflags       => \"-Wl,-E\",\n    config_args     => \"-Duse64bitall -Duselongdouble -Dusethreads -Duseithreads -des\",\n    gccversion      => \"5.3.1 20160412 [gcc-5-branch revision 234894]\",\n    gnulibc_version => \"2.23\",\n    ivsize          => 8,\n    ivtype          => \"long\",\n    ld              => \"cc\",\n    lddlflags       => \"-shared -O2 -L/pro/local/lib -fstack-protector-strong\",\n    ldflags         => \"-L/pro/local/lib -fstack-protector-strong\",\n    libc            => \"libc-2.23.so\",\n    lseektype       => \"off_t\",\n    osvers          => \"4.5.2-1-default\",\n    use64bitall     => \"define\",\n    use64bitint     => \"define\",\n    usemymalloc     => \"n\",\n    default_inc_excludes_dot\n\t\t    => \"undef\",\n    );\nis ($conf->{config}{$_}, $check{$_}, \"reconstructed \\$Config{$_}\") for sort keys %check;\n\nok (my $info = summary ($conf), \"A summary\");\nok (exists $info->{$_}, \"Summary has $_\") for qw( cc config_args usemymalloc default_inc_excludes_dot );\nis ($info->{default_inc_excludes_dot}, \"undef\", \"This build has . in INC\");\n\n__END__\nSummary of my perl5 (revision 5 version 24 subversion 0) configuration:\n\n  Platform:\n    osname=linux, osvers=4.5.2-1-default, archname=x86_64-linux-thread-multi-ld\n    uname='linux lx09 4.5.2-1-default #1 smp preempt thu apr 21 09:07:52 utc 2016 (0454a6e) x86_64 x86_64 x86_64 gnulinux '\n    config_args='-Duse64bitall -Duselongdouble -Dusethreads -Duseithreads -des'\n    hint=recommended, useposix=true, d_sigaction=define\n    useithreads=define, usemultiplicity=define\n    use64bitint=define, use64bitall=define, uselongdouble=define\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags ='-D_REENTRANT -D_GNU_SOURCE -fPIC -DDEBUGGING -fwrapv -fno-strict-aliasing -pipe -fstack-protector-strong -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_FORTIFY_SOURCE=2',\n    optimize='-O2',\n    cppflags='-D_REENTRANT -D_GNU_SOURCE -fPIC -DDEBUGGING -fwrapv -fno-strict-aliasing -pipe -fstack-protector-strong -I/pro/local/include'\n    ccversion='', gccversion='5.3.1 20160412 [gcc-5-branch revision 234894]', gccosandvers=''\n    intsize=4, longsize=8, ptrsize=8, doublesize=8, byteorder=12345678, doublekind=3\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=16, longdblkind=3\n    ivtype='long', ivsize=8, nvtype='long double', nvsize=16, Off_t='off_t', lseeksize=8\n    alignbytes=16, prototype=define\n  Linker and Libraries:\n    ld='cc', ldflags ='-L/pro/local/lib -fstack-protector-strong'\n    libpth=/usr/local/lib /usr/lib64/gcc/x86_64-suse-linux/5/include-fixed /usr/lib64/gcc/x86_64-suse-linux/5/../../../../x86_64-suse-linux/lib /usr/lib /pro/local/lib /lib/../lib64 /usr/lib/../lib64 /lib /lib64 /usr/lib64 /usr/local/lib64\n    libs=-lpthread -lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lc -lgdbm_compat\n    perllibs=-lpthread -lnsl -ldl -lm -lcrypt -lutil -lc\n    libc=libc-2.23.so, so=so, useshrplib=false, libperl=libperl.a\n    gnulibc_version='2.23'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC', lddlflags='-shared -O2 -L/pro/local/lib -fstack-protector-strong'\n\n\nCharacteristics of this binary (from libperl):\n  Compile-time options: DEBUGGING HAS_TIMES MULTIPLICITY PERLIO_LAYERS\n                        PERL_COPY_ON_WRITE PERL_DONT_CREATE_GVSV\n                        PERL_HASH_FUNC_ONE_AT_A_TIME_HARD\n                        PERL_IMPLICIT_CONTEXT PERL_MALLOC_WRAP\n                        PERL_PRESERVE_IVUV PERL_TRACK_MEMPOOL USE_64_BIT_ALL\n                        USE_64_BIT_INT USE_ITHREADS USE_LARGE_FILES\n                        USE_LOCALE USE_LOCALE_COLLATE USE_LOCALE_CTYPE\n                        USE_LOCALE_NUMERIC USE_LOCALE_TIME USE_LONG_DOUBLE\n                        USE_PERLIO USE_PERL_ATOF USE_REENTRANT_API\n  Built under linux\n  Compiled at May 10 2016 15:39:18\n  @INC:\n    lib\n    /pro/lib/perl5/site_perl/5.24.0/x86_64-linux-thread-multi-ld\n    /pro/lib/perl5/site_perl/5.24.0\n    /pro/lib/perl5/5.24.0/x86_64-linux-thread-multi-ld\n    /pro/lib/perl5/5.24.0\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Config-Perl-V/t/25_plv5162.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 158;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Aug 25 2013 01:24:40\", \"Build time\");\nis ($conf->{config}{version}, \"5.16.2\", \"reconstructed \\%Config{version}\");\nis ($conf->{config}{ccversion}, \"\", \"Using gcc. non-gcc version should not be defined\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tHAS_TIMES MULTIPLICITY PERLIO_LAYERS\n\tPERL_DONT_CREATE_GVSV PERL_IMPLICIT_CONTEXT\n\tPERL_MALLOC_WRAP PERL_PRESERVE_IVUV USE_64_BIT_ALL\n\tUSE_64_BIT_INT USE_ITHREADS USE_LARGE_FILES\n\tUSE_LOCALE USE_LOCALE_COLLATE USE_LOCALE_CTYPE\n\tUSE_LOCALE_NUMERIC USE_PERLIO USE_PERL_ATOF\n\tUSE_REENTRANT_API\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\neval { require Digest::MD5; };\nmy $md5 = $@ ? \"0\" x 32 : \"2917ca2a97b6db1ab8fb08798f53c0bb\";\nok (my $sig = Config::Perl::V::signature ($conf), \"Get signature\");\nis ($sig, $md5, \"MD5\");\n\nis_deeply ($conf->{build}{patches}, [\n    \"/Library/Perl/Updates/<version> comes before system perl directories\",\n    \"installprivlib and installarchlib points to the Updates directory\",\n    \"CVE-2013-1667 hashtable DOS fix\",\n    ], \"Local patches\");\n\nmy %check = (\n\n    archname        => \"darwin-thread-multi-2level\",\n    bincompat5005   => \"undef\",\n    config_args     => \"-ds -e -Dprefix=/usr -Dccflags=-g  -pipe  -Dldflags= -Dman3ext=3pm -Duseithreads -Duseshrplib -Dinc_version_list=none -Dcc=cc\",\n    d_sfio          => \"undef\",\n    d_sigaction     => \"define\",\n    hint            => \"recommended\",\n    myuname         => \"darwin jackson.apple.com 13.0 darwin kernel version 13.0.0: tue jul 30 20:52:22 pdt 2013; root:xnu-2422.1.53~3release_x86_64 x86_64\",\n    use64bitall     => \"define\",\n    use64bitint     => \"define\",\n    useithreads     => \"define\",\n    uselargefiles   => \"define\",\n    uselongdouble   => \"undef\",\n    usemultiplicity => \"define\",\n    usemymalloc     => \"n\",\n    useperlio       => \"define\",\n    useposix        => \"true\",\n    usesocks        => \"undef\",\n\n    alignbytes      => 8,\n    byteorder       => \"12345678\",\n    cc              => \"cc\",\n    ccflags         => \"-arch x86_64 -arch i386 -g -pipe -fno-common -DPERL_DARWIN -fno-strict-aliasing -fstack-protector -I/usr/local/include\",\n    ccversion       => \"\",\n    cppflags        => \"-g -pipe -fno-common -DPERL_DARWIN -fno-strict-aliasing -fstack-protector -I/usr/local/include\",\n    d_longdbl       => \"define\",\n    d_longlong      => \"define\",\n    doublesize      => 8,\n    gccosandvers    => \"\",\n    gccversion      => \"4.2.1 Compatible Apple LLVM 5.0 (clang-500.0.68)\",\n    intsize         => 4,\n    ivsize          => 8,\n    ivtype          => \"long\",\n    longdblsize     => 16,\n    longlongsize    => 8,\n    longsize        => 8,\n    lseeksize       => 8,\n    nvsize          => 8,\n    nvtype          => \"double\",\n    lseektype       => \"off_t\",\n    optimize        => \"-Os\",\n    prototype       => \"define\",\n    ptrsize         => 8,\n\n    gnulibc_version => \"\",\n    ld              => \"cc -mmacosx-version-min=10.9\",\n    ldflags         => \"-arch x86_64 -arch i386 -fstack-protector -L/usr/local/lib\",\n    libc            => \"\",\n    libperl         => \"libperl.dylib\",\n    libpth          => \"/usr/local/lib /usr/lib\",\n    libs            => \"\",\n    perllibs        => \"\",\n    so              => \"dylib\",\n    useshrplib      => \"true\",\n\n    cccdlflags      => \"\",\n    ccdlflags       => \"\",\n    d_dlsymun       => \"undef\",\n    dlext           => \"bundle\",\n    dlsrc           => \"dl_dlopen.xs\",\n    lddlflags       => \"-arch x86_64 -arch i386 -bundle -undefined dynamic_lookup -L/usr/local/lib -fstack-protector\",\n    );\nis ($conf->{config}{$_}, $check{$_}, \"reconstructed \\$Config{$_}\") for sort keys %check;\n\n\n__END__\nSummary of my perl5 (revision 5 version 16 subversion 2) configuration:\n   \n  Platform:\n    osname=darwin, osvers=13.0, archname=darwin-thread-multi-2level\n    uname='darwin jackson.apple.com 13.0 darwin kernel version 13.0.0: tue jul 30 20:52:22 pdt 2013; root:xnu-2422.1.53~3release_x86_64 x86_64 '\n    config_args='-ds -e -Dprefix=/usr -Dccflags=-g  -pipe  -Dldflags= -Dman3ext=3pm -Duseithreads -Duseshrplib -Dinc_version_list=none -Dcc=cc'\n    hint=recommended, useposix=true, d_sigaction=define\n    useithreads=define, usemultiplicity=define\n    useperlio=define, d_sfio=undef, uselargefiles=define, usesocks=undef\n    use64bitint=define, use64bitall=define, uselongdouble=undef\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags ='-arch x86_64 -arch i386 -g -pipe -fno-common -DPERL_DARWIN -fno-strict-aliasing -fstack-protector -I/usr/local/include',\n    optimize='-Os',\n    cppflags='-g -pipe -fno-common -DPERL_DARWIN -fno-strict-aliasing -fstack-protector -I/usr/local/include'\n    ccversion='', gccversion='4.2.1 Compatible Apple LLVM 5.0 (clang-500.0.68)', gccosandvers=''\n    intsize=4, longsize=8, ptrsize=8, doublesize=8, byteorder=12345678\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=16\n    ivtype='long', ivsize=8, nvtype='double', nvsize=8, Off_t='off_t', lseeksize=8\n    alignbytes=8, prototype=define\n  Linker and Libraries:\n    ld='cc -mmacosx-version-min=10.9', ldflags ='-arch x86_64 -arch i386 -fstack-protector -L/usr/local/lib'\n    libpth=/usr/local/lib /usr/lib\n    libs= \n    perllibs=\n    libc=, so=dylib, useshrplib=true, libperl=libperl.dylib\n    gnulibc_version=''\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=bundle, d_dlsymun=undef, ccdlflags=' '\n    cccdlflags=' ', lddlflags='-arch x86_64 -arch i386 -bundle -undefined dynamic_lookup -L/usr/local/lib -fstack-protector'\n\n\nCharacteristics of this binary (from libperl): \n  Compile-time options: HAS_TIMES MULTIPLICITY PERLIO_LAYERS\n                        PERL_DONT_CREATE_GVSV PERL_IMPLICIT_CONTEXT\n                        PERL_MALLOC_WRAP PERL_PRESERVE_IVUV USE_64_BIT_ALL\n                        USE_64_BIT_INT USE_ITHREADS USE_LARGE_FILES\n                        USE_LOCALE USE_LOCALE_COLLATE USE_LOCALE_CTYPE\n                        USE_LOCALE_NUMERIC USE_PERLIO USE_PERL_ATOF\n                        USE_REENTRANT_API\n  Locally applied patches:\n\t/Library/Perl/Updates/<version> comes before system perl directories\n\tinstallprivlib and installarchlib points to the Updates directory\n\tCVE-2013-1667 hashtable DOS fix\n  Built under darwin\n  Compiled at Aug 25 2013 01:24:40\n  %ENV:\n    PERL5LIB=\"\"\n    PERL5OPT=\"\"\n    PERL5_CPANPLUS_IS_RUNNING=\"37393\"\n    PERL5_CPAN_IS_RUNNING=\"37393\"\n  @INC:\n    /Library/Perl/5.16/darwin-thread-multi-2level\n    /Library/Perl/5.16\n    /Network/Library/Perl/5.16/darwin-thread-multi-2level\n    /Network/Library/Perl/5.16\n    /Library/Perl/Updates/5.16.2/darwin-thread-multi-2level\n    /Library/Perl/Updates/5.16.2\n    /System/Library/Perl/5.16/darwin-thread-multi-2level\n    /System/Library/Perl/5.16\n    /System/Library/Perl/Extras/5.16/darwin-thread-multi-2level\n    /System/Library/Perl/Extras/5.16\n    .\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Config-Perl-V/t/33_plv52711r.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 128;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V qw( summary );\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Apr 12 2018 13:37:01\", \"Build time\");\nis ($conf->{config}{version}, \"5.27.11\", \"reconstructed \\$Config{version}\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tDEBUGGING HAS_TIMES MULTIPLICITY PERLIO_LAYERS PERL_COPY_ON_WRITE\n\tPERL_DONT_CREATE_GVSV PERL_TRACK_MEMPOOL PERL_IMPLICIT_CONTEXT\n\tPERL_MALLOC_WRAP PERL_OP_PARENT PERL_PRESERVE_IVUV PERL_USE_DEVEL\n\tUSE_64_BIT_ALL\n\tUSE_64_BIT_INT USE_ITHREADS USE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n\tUSE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LOCALE_TIME\n\tUSE_LONG_DOUBLE USE_PERLIO USE_PERL_ATOF USE_REENTRANT_API\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\neval { require Digest::MD5; };\nmy $md5 = $@ ? \"0\" x 32 : \"bd9cf7a142ddbb434adea5b08eaefdc8\";\nok (my $sig = Config::Perl::V::signature ($conf), \"Get signature\");\nis ($sig, $md5, \"MD5\");\n\nis_deeply ($conf->{build}{patches}, [], \"Local patches\");\n\nmy %check = (\n    alignbytes      => 16,\n    api_version     => 27,\n    bincompat5005   => \"undef\",\n    byteorder       => 12345678,\n    cc              => \"cc\",\n    cccdlflags      => \"-fPIC\",\n    ccdlflags       => \"-Wl,-E\",\n    config_args     => \"-Dusedevel -Duse64bitall -Dusethreads -Duseithreads -Duselongdouble -des\",\n    gccversion      => \"7.3.1 20180307 [gcc-7-branch revision 258314]\",\n    gnulibc_version => \"2.27\",\n    ivsize          => 8,\n    ivtype          => \"long\",\n    ld              => \"cc\",\n    lddlflags       => \"-shared -O2 -L/pro/local/lib -fstack-protector-strong\",\n    ldflags         => \"-L/pro/local/lib -fstack-protector-strong\",\n    libc            => \"libc-2.27.so\",\n    lseektype       => \"off_t\",\n    osvers          => \"4.16.0-1-default\",\n    use64bitall     => \"define\",\n    use64bitint     => \"define\",\n    usemymalloc     => \"n\",\n    default_inc_excludes_dot\n\t\t    => \"define\",\n    );\nis ($conf->{config}{$_}, $check{$_}, \"reconstructed \\$Config{$_}\") for sort keys %check;\n\nok (my $info = summary ($conf), \"A summary\");\nok (exists $info->{$_}, \"Summary has $_\") for qw( cc config_args usemymalloc default_inc_excludes_dot );\nis ($info->{default_inc_excludes_dot}, \"define\", \"This build does not have . in INC\");\n\n__END__\nSummary of my perl5 (revision 5 version 27 subversion 11) configuration:\n  Snapshot of: 5f6af817add6d2df3603e0e94b6eb27ba5fb3970\n  Platform:\n    osname=linux\n    osvers=4.16.0-1-default\n    archname=x86_64-linux-thread-multi-ld\n    uname='linux lx09 4.16.0-1-default #1 smp preempt wed apr 4 13:35:56 utc 2018 (e16f96d) x86_64 x86_64 x86_64 gnulinux '\n    config_args='-Dusedevel -Duse64bitall -Dusethreads -Duseithreads -Duselongdouble -des'\n    hint=recommended\n    useposix=true\n    d_sigaction=define\n    useithreads=define\n    usemultiplicity=define\n    use64bitint=define\n    use64bitall=define\n    uselongdouble=define\n    usemymalloc=n\n    default_inc_excludes_dot=define\n    bincompat5005=undef\n  Compiler:\n    cc='cc'\n    ccflags ='-D_REENTRANT -D_GNU_SOURCE -fPIC -DDEBUGGING -fwrapv -fno-strict-aliasing -pipe -fstack-protector-strong -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_FORTIFY_SOURCE=2'\n    optimize='-O2'\n    cppflags='-D_REENTRANT -D_GNU_SOURCE -fPIC -DDEBUGGING -fwrapv -fno-strict-aliasing -pipe -fstack-protector-strong -I/pro/local/include'\n    ccversion=''\n    gccversion='7.3.1 20180307 [gcc-7-branch revision 258314]'\n    gccosandvers=''\n    intsize=4\n    longsize=8\n    ptrsize=8\n    doublesize=8\n    byteorder=12345678\n    doublekind=3\n    d_longlong=define\n    longlongsize=8\n    d_longdbl=define\n    longdblsize=16\n    longdblkind=3\n    ivtype='long'\n    ivsize=8\n    nvtype='long double'\n    nvsize=16\n    Off_t='off_t'\n    lseeksize=8\n    alignbytes=16\n    prototype=define\n  Linker and Libraries:\n    ld='cc'\n    ldflags ='-L/pro/local/lib -fstack-protector-strong'\n    libpth=/usr/local/lib /usr/lib64/gcc/x86_64-suse-linux/7/include-fixed /usr/lib64/gcc/x86_64-suse-linux/7/../../../../x86_64-suse-linux/lib /usr/lib /pro/local/lib /lib/../lib64 /usr/lib/../lib64 /lib /lib64 /usr/lib64 /usr/local/lib64\n    libs=-lpthread -lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lc -lgdbm_compat\n    perllibs=-lpthread -lnsl -ldl -lm -lcrypt -lutil -lc\n    libc=libc-2.27.so\n    so=so\n    useshrplib=false\n    libperl=libperl.a\n    gnulibc_version='2.27'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs\n    dlext=so\n    d_dlsymun=undef\n    ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC'\n    lddlflags='-shared -O2 -L/pro/local/lib -fstack-protector-strong'\n\n\nCharacteristics of this binary (from libperl):\n  Compile-time options:\n    DEBUGGING\n    HAS_TIMES\n    MULTIPLICITY\n    PERLIO_LAYERS\n    PERL_COPY_ON_WRITE\n    PERL_DONT_CREATE_GVSV\n    PERL_IMPLICIT_CONTEXT\n    PERL_MALLOC_WRAP\n    PERL_OP_PARENT\n    PERL_PRESERVE_IVUV\n    PERL_TRACK_MEMPOOL\n    PERL_USE_DEVEL\n    USE_64_BIT_ALL\n    USE_64_BIT_INT\n    USE_ITHREADS\n    USE_LARGE_FILES\n    USE_LOCALE\n    USE_LOCALE_COLLATE\n    USE_LOCALE_CTYPE\n    USE_LOCALE_NUMERIC\n    USE_LOCALE_TIME\n    USE_LONG_DOUBLE\n    USE_PERLIO\n    USE_PERL_ATOF\n    USE_REENTRANT_API\n  Built under linux\n  Compiled at Apr 12 2018 13:37:01\n  @INC:\n    lib\n    /pro/lib/perl5/site_perl/5.27.11/x86_64-linux-thread-multi-ld\n    /pro/lib/perl5/site_perl/5.27.11\n    /pro/lib/perl5/5.27.11/x86_64-linux-thread-multi-ld\n    /pro/lib/perl5/5.27.11\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Config-Perl-V/t/20_plv56.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 100;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Mar 23 2010 17:34:56\", \"Build time\");\nis ($conf->{config}{\"package\"}, \"perl5\", \"reconstructed \\%Config{package}\");\nis ($conf->{config}{version}, \"5.6.2\", \"reconstructed \\%Config{version}\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tDEBUGGING USE_64_BIT_INT USE_LARGE_FILES\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\neval { require Digest::MD5; };\nmy $md5 = $@ ? \"0\" x 32 : \"9dc187182be100c1713f210a8c6d9f45\";\nok (my $sig = Config::Perl::V::signature ($conf), \"Get signature\");\nis ($sig, $md5, \"MD5\");\n\n__END__\nSummary of my perl5 (revision 5.0 version 6 subversion 2) configuration:\n  Platform:\n    osname=linux, osvers=2.6.31.12-0.2-default, archname=i686-linux-64int-perlio\n    uname='linux nb09 2.6.31.12-0.2-default #1 smp 2010-03-16 21:25:39 +0100 i686 i686 i386 gnulinux '\n    config_args='-Dusedevel -Duse64bitint -Duseperlio -des -Dusedevel -Uinstallusrbinperl -Dprefix=/media/Tux/perls'\n    hint=recommended, useposix=true, d_sigaction=define\n    usethreads=undef use5005threads=undef useithreads=undef usemultiplicity=undef\n    useperlio=define d_sfio=undef uselargefiles=define usesocks=undef\n    use64bitint=define use64bitall=undef uselongdouble=undef\n  Compiler:\n    cc='cc', ccflags ='-DDEBUGGING -fno-strict-aliasing -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64',\n    optimize='-O2',\n    cppflags='-DDEBUGGING -fno-strict-aliasing -I/pro/local/include'\n    ccversion='', gccversion='4.4.1 [gcc-4_4-branch revision 150839]', gccosandvers=''\n    intsize=4, longsize=4, ptrsize=4, doublesize=8, byteorder=12345678\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=12\n    ivtype='long long', ivsize=8, nvtype='double', nvsize=8, Off_t='off_t', lseeksize=8\n    alignbytes=4, usemymalloc=n, prototype=define\n  Linker and Libraries:\n    ld='cc', ldflags ='-L/pro/local/lib'\n    libpth=/pro/local/lib /lib /usr/lib /usr/local/lib\n    libs=-lnsl -lgdbm -ldb -ldl -lm -lc -lcrypt -lutil\n    perllibs=-lnsl -ldl -lm -lc -lcrypt -lutil\n    libc=/lib/libc-2.10.1.so, so=so, useshrplib=false, libperl=libperl.a\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-rdynamic'\n    cccdlflags='-fpic', lddlflags='-shared -L/pro/local/lib'\n\n\nCharacteristics of this binary (from libperl): \n  Compile-time options: DEBUGGING USE_64_BIT_INT USE_LARGE_FILES\n  Built under linux\n  Compiled at Mar 23 2010 17:34:56\n  @INC:\n    /media/Tux/perls/lib/5.6.2/i686-linux-64int-perlio\n    /media/Tux/perls/lib/5.6.2\n    /media/Tux/perls/lib/site_perl/5.6.2/i686-linux-64int-perlio\n    /media/Tux/perls/lib/site_perl/5.6.2\n    /media/Tux/perls/lib/site_perl\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Config-Perl-V/t/32_plv5261rc1.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 128;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V qw( summary );\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Sep 19 2017 11:20:22\", \"Build time\");\nis ($conf->{config}{version}, \"5.26.1\", \"reconstructed \\$Config{version}\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tDEBUGGING HAS_TIMES MULTIPLICITY PERLIO_LAYERS PERL_COPY_ON_WRITE\n\tPERL_DONT_CREATE_GVSV PERL_OP_PARENT\n\tPERL_TRACK_MEMPOOL PERL_IMPLICIT_CONTEXT PERL_MALLOC_WRAP\n\tPERL_PRESERVE_IVUV USE_64_BIT_ALL USE_64_BIT_INT USE_ITHREADS\n\tUSE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n\tUSE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LOCALE_TIME\n\tUSE_LONG_DOUBLE USE_PERLIO USE_PERL_ATOF USE_REENTRANT_API\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\neval { require Digest::MD5; };\nmy $md5 = $@ ? \"0\" x 32 : \"dd710670fec7d2e260414648dcc94e89\";\nok (my $sig = Config::Perl::V::signature ($conf), \"Get signature\");\nis ($sig, $md5, \"MD5\");\n\nis_deeply ($conf->{build}{patches}, [ \"RC1\" ], \"No local patches\");\n\nmy %check = (\n    alignbytes      => 16,\n    api_version     => 26,\n    bincompat5005   => \"undef\",\n    byteorder       => 12345678,\n    cc              => \"ccache cc\",\n    cccdlflags      => \"-fPIC\",\n    ccdlflags       => \"-Wl,-E\",\n    config_args     => \"-Duse64bitall -Duselongdouble -Dusethreads -Duseithreads -Uversiononly -Dinc_version_list=none -des\",\n    gccversion      => \"4.8.3 20140627 [gcc-4_8-branch revision 212064]\",\n    gnulibc_version => \"2.19\",\n    ivsize          => 8,\n    ivtype          => \"long\",\n    ld              => \"ccache cc\",\n    lddlflags       => \"-shared -O2 -L/pro/local/lib -fstack-protector\",\n    ldflags         => \"-L/pro/local/lib -fstack-protector\",\n    libc            => \"libc-2.19.so\",\n    lseektype       => \"off_t\",\n    osvers          => \"3.16.7-32-desktop\",\n    use64bitall     => \"define\",\n    use64bitint     => \"define\",\n    usemymalloc     => \"n\",\n    default_inc_excludes_dot\n\t\t    => \"define\",\n    );\nis ($conf->{config}{$_}, $check{$_}, \"reconstructed \\$Config{$_}\") for sort keys %check;\n\nok (my $info = summary ($conf), \"A summary\");\nok (exists $info->{$_}, \"Summary has $_\") for qw( cc config_args usemymalloc default_inc_excludes_dot );\nis ($info->{default_inc_excludes_dot}, \"define\", \"This build has . in INC\");\n\n__END__\nSummary of my perl5 (revision 5 version 26 subversion 1) configuration:\n\n  Platform:\n    osname=linux\n    osvers=3.16.7-32-desktop\n    archname=x86_64-linux-thread-multi-ld\n    uname='linux sv02 3.16.7-32-desktop #1 smp preempt wed jan 20 14:05:33 utc 2016 (d4df98a) x86_64 x86_64 x86_64 gnulinux '\n    config_args='-Duse64bitall -Duselongdouble -Dusethreads -Duseithreads -Uversiononly -Dinc_version_list=none -des'\n    hint=recommended\n    useposix=true\n    d_sigaction=define\n    useithreads=define\n    usemultiplicity=define\n    use64bitint=define\n    use64bitall=define\n    uselongdouble=define\n    usemymalloc=n\n    default_inc_excludes_dot=define\n    bincompat5005=undef\n  Compiler:\n    cc='ccache cc'\n    ccflags ='-D_REENTRANT -D_GNU_SOURCE -fPIC -DDEBUGGING -fwrapv -fno-strict-aliasing -pipe -fstack-protector -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_FORTIFY_SOURCE=2'\n    optimize='-O2'\n    cppflags='-D_REENTRANT -D_GNU_SOURCE -fPIC -DDEBUGGING -fwrapv -fno-strict-aliasing -pipe -fstack-protector'\n    ccversion=''\n    gccversion='4.8.3 20140627 [gcc-4_8-branch revision 212064]'\n    gccosandvers=''\n    intsize=4\n    longsize=8\n    ptrsize=8\n    doublesize=8\n    byteorder=12345678\n    doublekind=3\n    d_longlong=define\n    longlongsize=8\n    d_longdbl=define\n    longdblsize=16\n    longdblkind=3\n    ivtype='long'\n    ivsize=8\n    nvtype='long double'\n    nvsize=16\n    Off_t='off_t'\n    lseeksize=8\n    alignbytes=16\n    prototype=define\n  Linker and Libraries:\n    ld='ccache cc'\n    ldflags ='-L/pro/local/lib -fstack-protector'\n    libpth=/usr/local/lib /usr/lib64/gcc/x86_64-suse-linux/4.8/include-fixed /usr/lib64/gcc/x86_64-suse-linux/4.8/../../../../x86_64-suse-linux/lib /usr/lib /pro/local/lib /lib/../lib64 /usr/lib/../lib64 /lib /lib64 /usr/lib64 /usr/local/lib64\n    libs=-lpthread -lnsl -ldb -ldl -lm -lcrypt -lutil -lc\n    perllibs=-lpthread -lnsl -ldl -lm -lcrypt -lutil -lc\n    libc=libc-2.19.so\n    so=so\n    useshrplib=false\n    libperl=libperl.a\n    gnulibc_version='2.19'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs\n    dlext=so\n    d_dlsymun=undef\n    ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC'\n    lddlflags='-shared -O2 -L/pro/local/lib -fstack-protector'\n\n\nCharacteristics of this binary (from libperl):\n  Compile-time options:\n    DEBUGGING\n    HAS_TIMES\n    MULTIPLICITY\n    PERLIO_LAYERS\n    PERL_COPY_ON_WRITE\n    PERL_DONT_CREATE_GVSV\n    PERL_IMPLICIT_CONTEXT\n    PERL_MALLOC_WRAP\n    PERL_OP_PARENT\n    PERL_PRESERVE_IVUV\n    PERL_TRACK_MEMPOOL\n    USE_64_BIT_ALL\n    USE_64_BIT_INT\n    USE_ITHREADS\n    USE_LARGE_FILES\n    USE_LOCALE\n    USE_LOCALE_COLLATE\n    USE_LOCALE_CTYPE\n    USE_LOCALE_NUMERIC\n    USE_LOCALE_TIME\n    USE_LONG_DOUBLE\n    USE_PERLIO\n    USE_PERL_ATOF\n    USE_REENTRANT_API\n  Locally applied patches:\n    RC1\n  Built under linux\n  Compiled at Sep 19 2017 11:20:22\n  @INC:\n    /pro/lib/perl5/site_perl/5.26.1/x86_64-linux-thread-multi-ld\n    /pro/lib/perl5/site_perl/5.26.1\n    /pro/lib/perl5/5.26.1/x86_64-linux-thread-multi-ld\n    /pro/lib/perl5/5.26.1\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Config-Perl-V/t/26_plv518.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 119;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"May 18 2013 17:34:20\", \"Build time\");\nis ($conf->{config}{version}, \"5.18.0\", \"reconstructed \\$Config{version}\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tHAS_TIMES PERLIO_LAYERS PERL_DONT_CREATE_GVSV\n\tPERL_HASH_FUNC_ONE_AT_A_TIME_HARD PERL_MALLOC_WRAP\n\tPERL_PRESERVE_IVUV PERL_SAWAMPERSAND USE_64_BIT_INT\n\tUSE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n\tUSE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LONG_DOUBLE\n\tUSE_PERLIO USE_PERL_ATOF\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\neval { require Digest::MD5; };\nmy $md5 = $@ ? \"0\" x 32 : \"8f46b07a7775e6a92347d4cd564b8f03\";\nok (my $sig = Config::Perl::V::signature ($conf), \"Get signature\");\nis ($sig, $md5, \"MD5\");\n\nis_deeply ($conf->{build}{patches}, [], \"No local patches\");\n\nmy %check = (\n    alignbytes      => 4,\n    api_version     => 18,\n    bincompat5005   => \"undef\",\n    byteorder       => 12345678,\n    cc              => \"cc\",\n    cccdlflags      => \"-fPIC\",\n    ccdlflags       => \"-Wl,-E\",\n    config_args     => \"-Duse64bitint -Duselongdouble -des\",\n    gccversion      => \"4.7.2 20130108 [gcc-4_7-branch revision 195012]\",\n    gnulibc_version => \"2.17\",\n    ivsize          => 8,\n    ivtype          => \"long long\",\n    ld              => \"cc\",\n    lddlflags       => \"-shared -O3 -L/pro/local/lib -fstack-protector\",\n    ldflags         => \"-L/pro/local/lib -fstack-protector\",\n    libc            => \"/lib/libc-2.17.so\",\n    lseektype       => \"off_t\",\n    osvers          => \"3.7.10-1.4-desktop\",\n    use64bitint     => \"define\",\n    );\nis ($conf->{config}{$_}, $check{$_}, \"reconstructed \\$Config{$_}\") for sort keys %check;\n\n__END__\nSummary of my perl5 (revision 5 version 18 subversion 0) configuration:\n   \n  Platform:\n    osname=linux, osvers=3.7.10-1.4-desktop, archname=i686-linux-64int-ld\n    uname='linux test 3.7.10-1.4-desktop #1 smp preempt fri apr 19 12:06:34 utc 2013 (8ef74f8) i686 i686 i386 gnulinux '\n    config_args='-Duse64bitint -Duselongdouble -des'\n    hint=recommended, useposix=true, d_sigaction=define\n    useithreads=undef, usemultiplicity=undef\n    useperlio=define, d_sfio=undef, uselargefiles=define, usesocks=undef\n    use64bitint=define, use64bitall=undef, uselongdouble=define\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags ='-fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64',\n    optimize='-O3',\n    cppflags='-fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include'\n    ccversion='', gccversion='4.7.2 20130108 [gcc-4_7-branch revision 195012]', gccosandvers=''\n    intsize=4, longsize=4, ptrsize=4, doublesize=8, byteorder=12345678\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=12\n    ivtype='long long', ivsize=8, nvtype='long double', nvsize=12, Off_t='off_t', lseeksize=8\n    alignbytes=4, prototype=define\n  Linker and Libraries:\n    ld='cc', ldflags ='-L/pro/local/lib -fstack-protector'\n    libpth=/pro/local/lib /lib /usr/lib /usr/local/lib\n    libs=-lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lc -lgdbm_compat\n    perllibs=-lnsl -ldl -lm -lcrypt -lutil -lc\n    libc=/lib/libc-2.17.so, so=so, useshrplib=false, libperl=libperl.a\n    gnulibc_version='2.17'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC', lddlflags='-shared -O3 -L/pro/local/lib -fstack-protector'\n\n\nCharacteristics of this binary (from libperl): \n  Compile-time options: HAS_TIMES PERLIO_LAYERS PERL_DONT_CREATE_GVSV\n                        PERL_HASH_FUNC_ONE_AT_A_TIME_HARD PERL_MALLOC_WRAP\n                        PERL_PRESERVE_IVUV PERL_SAWAMPERSAND USE_64_BIT_INT\n                        USE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n                        USE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LONG_DOUBLE\n                        USE_PERLIO USE_PERL_ATOF\n  Built under linux\n  Compiled at May 18 2013 17:34:20\n  @INC:\n    /pro/lib/perl5/site_perl/5.18.0/i686-linux-64int-ld\n    /pro/lib/perl5/site_perl/5.18.0\n    /pro/lib/perl5/5.18.0/i686-linux-64int-ld\n    /pro/lib/perl5/5.18.0\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/os2/dlfcn.h": "void *dlopen(const char *path, int mode);\nvoid *dlsym(void *handle, const char *symbol);\nchar *dlerror(void);\nint dlclose(void *handle);\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/os2/os2.sym": "ctermid\nget_sysinfo\nPerl_OS2_init\nOS2_Perl_data\ndlopen\ndlsym\ndlerror\ndlclose\nmy_tmpfile\nmy_tmpnam\nmy_flock\nmy_rmdir\nmy_mkdir\nmalloc_mutex\nthreads_mutex\nnthreads\nnthreads_cond\nos2_cond_wait\npthread_join\npthread_create\npthread_detach\nXS_Cwd_change_drive\nXS_Cwd_current_drive\nXS_Cwd_extLibpath\nXS_Cwd_extLibpath_set\nXS_Cwd_sys_abspath\nXS_Cwd_sys_chdir\nXS_Cwd_sys_cwd\nXS_Cwd_sys_is_absolute\nXS_Cwd_sys_is_relative\nXS_Cwd_sys_is_rooted\nXS_DynaLoader_mod2fname\nXS_File__Copy_syscopy\nPerl_Register_MQ\nPerl_Deregister_MQ\nPerl_Serve_Messages\nPerl_Process_Messages\ninit_PMWIN_entries\nPMWIN_entries\nPerl_hab_GET\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/os2/dl_os2.c": "#include \"dlfcn.h\"\n#include \"string.h\"\n#include \"stdio.h\"\n\n#define INCL_BASE\n#include <os2.h>\n#include <float.h>\n#include <stdlib.h>\n\nstatic ULONG retcode;\nstatic char fail[300];\n\nstatic ULONG dllHandle;\nstatic int handle_found;\nstatic int handle_loaded;\n#ifdef PERL_CORE\n\n#include \"EXTERN.h\"\n#include \"perl.h\"\n\n#else\n\nchar *os2error(int rc);\n\n#endif\n\n#ifdef DLOPEN_INITTERM\nunsigned long _DLL_InitTerm(unsigned long modHandle, unsigned long flag)\n{\n    switch (flag) {\n    case 0:     /* INIT */\n        /* Save handle */\n        dllHandle = modHandle;\n\thandle_found = 1;\n        return TRUE;\n\n    case 1:     /* TERM */\n\thandle_found = 0;\n        dllHandle = (unsigned long)NULLHANDLE;\n        return TRUE;\n    }\n\n    return FALSE;\n}\n\n#endif\n\nHMODULE\nfind_myself(void)\n{\n\n  static APIRET APIENTRY (*pDosQueryModFromEIP) (HMODULE * hmod, ULONG * obj, ULONG BufLen, PCHAR Buf,\n\t\t    ULONG * Offset, ULONG Address);\n  HMODULE doscalls_h, mod;\n  static int failed;\n  ULONG obj, offset, rc;\n  char buf[260];\n\n  if (failed)\n\treturn 0;\n  failed = 1;\n  doscalls_h = (HMODULE)dlopen(\"DOSCALLS\",0);\n  if (!doscalls_h)\n\treturn 0;\n/*  {&doscalls_handle, NULL, 360}, */\t/* DosQueryModFromEIP */\n  rc = DosQueryProcAddr(doscalls_h, 360, 0, (PFN*)&pDosQueryModFromEIP);\n  if (rc)\n\treturn 0;\n  rc = pDosQueryModFromEIP(&mod, &obj, sizeof(buf), buf, &offset, (ULONG)dlopen);\n  if (rc)\n\treturn 0;\n  failed = 0;\n  handle_found = 1;\n  dllHandle = mod;\n  return mod;\n}\n\nvoid *\ndlopen(const char *path, int mode)\n{\n\tHMODULE handle;\n\tchar tmp[260];\n\tconst char *beg, *dot;\n\tULONG rc;\n\tunsigned fpflag = _control87(0,0);\n\n\tfail[0] = 0;\n\tif (!path) {\t\t\t/* Our own handle. */\n\t    if (handle_found || find_myself()) {\n\t\tchar dllname[260];\n\n\t\tif (handle_loaded)\n\t\t    return (void*)dllHandle;\n\t\trc = DosQueryModuleName(dllHandle, sizeof(dllname), dllname);\n\t\tif (rc) {\n\t            strcpy(fail, \"can't find my DLL name by the handle\");\n\t\t    retcode = rc;\n\t\t    return 0;\n\t\t}\n\t\trc = DosLoadModule(fail, sizeof fail, dllname, &handle);\n\t\tif (rc) {\n\t            strcpy(fail, \"can't load my own DLL\");\n\t\t    retcode = rc;\n\t\t    return 0;\n\t\t}\n\t\thandle_loaded = 1;\n\t\tgoto ret;\n\t    }\n\t    retcode = ERROR_MOD_NOT_FOUND;\n            strcpy(fail, \"can't load from myself: compiled without -DDLOPEN_INITTERM\");\n\t    return 0;\n\t}\n\tif ((rc = DosLoadModule(fail, sizeof fail, (char*)path, &handle)) == 0)\n\t\tgoto ret;\n\n\tretcode = rc;\n\n\tif (strlen(path) >= sizeof(tmp))\n\t    return NULL;\n\n\t/* Not found. Check for non-FAT name and try truncated name. */\n\t/* Don't know if this helps though... */\n\tfor (beg = dot = path + strlen(path);\n\t     beg > path && !strchr(\":/\\\\\", *(beg-1));\n\t     beg--)\n\t\tif (*beg == '.')\n\t\t\tdot = beg;\n\tif (dot - beg > 8) {\n\t\tint n = beg+8-path;\n\n\t\tmemmove(tmp, path, n);\n\t\tmemmove(tmp+n, dot, strlen(dot)+1);\n\t\tif (DosLoadModule(fail, sizeof fail, tmp, &handle) == 0)\n\t\t    goto ret;\n\t}\n\thandle = 0;\n\n      ret:\n\t_control87(fpflag, MCW_EM); /* Some modules reset FP flags on load */\n\treturn (void *)handle;\n}\n\n#define ERROR_WRONG_PROCTYPE 0xffffffff\n\nvoid *\ndlsym(void *handle, const char *symbol)\n{\n\tULONG rc, type;\n\tPFN addr;\n\n\tfail[0] = 0;\n\trc = DosQueryProcAddr((HMODULE)handle, 0, symbol, &addr);\n\tif (rc == 0) {\n\t\trc = DosQueryProcType((HMODULE)handle, 0, symbol, &type);\n\t\tif (rc == 0 && type == PT_32BIT)\n\t\t\treturn (void *)addr;\n\t\trc = ERROR_WRONG_PROCTYPE;\n\t}\n\tretcode = rc;\n\treturn NULL;\n}\n\nchar *\ndlerror(void)\n{\n\tstatic char buf[700];\n\tULONG len;\n\tchar *err;\n\n\tif (retcode == 0)\n\t\treturn NULL;\n\tif (retcode == ERROR_WRONG_PROCTYPE)\n\t    err = \"Wrong procedure type\";\n\telse\n\t    err = os2error(retcode);\n\tlen = strlen(err);\n\tif (len > sizeof(buf) - 1)\n\t    len = sizeof(buf) - 1;\n\tstrncpy(buf, err, len+1);\n\tif (fail[0] && len + strlen(fail) < sizeof(buf) - 100)\n\t    sprintf(buf + len, \", possible problematic module: '%s'\", fail);\n\tretcode = 0;\n\treturn buf;\n}\n\nint\ndlclose(void *handle)\n{\n\tULONG rc;\n\n\tif ((rc = DosFreeModule((HMODULE)handle)) == 0) return 0;\n\n\tretcode = rc;\n\treturn 2;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/os2/os2add.sym": "dlopen\ndlsym\ndlerror\ndlclose\nmalloc\nrealloc\nfree\ncalloc\nctermid\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/os2/os2.c": "#define INCL_DOS\n#define INCL_NOPM\n#define INCL_DOSFILEMGR\n#define INCL_DOSMEMMGR\n#define INCL_DOSERRORS\n#define INCL_WINERRORS\n#define INCL_WINSYS\n/* These 3 are needed for compile if os2.h includes os2tk.h, not os2emx.h */\n#define INCL_DOSPROCESS\n#define SPU_DISABLESUPPRESSION          0\n#define SPU_ENABLESUPPRESSION           1\n#include <os2.h>\n#include \"dlfcn.h\"\n#include <emx/syscalls.h>\n#include <sys/emxload.h>\n\n#include <sys/uflags.h>\n\n/*\n * Various Unix compatibility functions for OS/2\n */\n\n#include <stdio.h>\n#include <errno.h>\n#include <limits.h>\n#include <process.h>\n#include <fcntl.h>\n#include <pwd.h>\n#include <grp.h>\n\n#define PERLIO_NOT_STDIO 0\n\n#include \"EXTERN.h\"\n#include \"perl.h\"\n\nenum module_name_how { mod_name_handle, mod_name_shortname, mod_name_full,\n  mod_name_C_function = 0x100, mod_name_HMODULE = 0x200};\n\n/* Find module name to which *this* subroutine is compiled */\n#define module_name(how)\tmodule_name_at(&module_name_at, how)\n\nstatic SV* module_name_at(void *pp, enum module_name_how how);\n\nvoid\ncroak_with_os2error(char *s)\n{\n    Perl_croak_nocontext(\"%s: %s\", s, os2error(Perl_rc));\n}\n\nstruct PMWIN_entries_t PMWIN_entries;\n\n/*****************************************************************************/\n/* 2.1 would not resolve symbols on demand, and has no ExtLIBPATH. */\n\nstruct dll_handle_t {\n    const char *modname;\n    HMODULE handle;\n    int requires_pm;\n};\n\nstatic struct dll_handle_t dll_handles[] = {\n    {\"doscalls\", 0, 0},\n    {\"tcp32dll\", 0, 0},\n    {\"pmwin\", 0, 1},\n    {\"rexx\", 0, 0},\n    {\"rexxapi\", 0, 0},\n    {\"sesmgr\", 0, 0},\n    {\"pmshapi\", 0, 1},\n    {\"pmwp\", 0, 1},\n    {\"pmgpi\", 0, 1},\n    {NULL, 0},\n};\n\nenum dll_handle_e {\n    dll_handle_doscalls,\n    dll_handle_tcp32dll,\n    dll_handle_pmwin,\n    dll_handle_rexx,\n    dll_handle_rexxapi,\n    dll_handle_sesmgr,\n    dll_handle_pmshapi,\n    dll_handle_pmwp,\n    dll_handle_pmgpi,\n    dll_handle_LAST,\n};\n\n#define doscalls_handle\t\t(dll_handles[dll_handle_doscalls])\n#define tcp_handle\t\t(dll_handles[dll_handle_tcp32dll])\n#define pmwin_handle\t\t(dll_handles[dll_handle_pmwin])\n#define rexx_handle\t\t(dll_handles[dll_handle_rexx])\n#define rexxapi_handle\t\t(dll_handles[dll_handle_rexxapi])\n#define sesmgr_handle\t\t(dll_handles[dll_handle_sesmgr])\n#define pmshapi_handle\t\t(dll_handles[dll_handle_pmshapi])\n#define pmwp_handle\t\t(dll_handles[dll_handle_pmwp])\n#define pmgpi_handle\t\t(dll_handles[dll_handle_pmgpi])\n\n/*  The following local-scope data is not yet included:\n       fargs.140\t\t\t// const => OK\n       ino.165\t\t\t\t// locked - and the access is almost cosmetic\n       layout_table.260\t\t\t// startup only, locked\n       osv_res.257\t\t\t// startup only, locked\n       old_esp.254\t\t\t// startup only, locked\n       priors\t\t\t\t// const ==> OK\n       use_my_flock.283\t\t\t// locked\n       emx_init_done.268\t\t// locked\n       dll_handles\t\t\t// locked\n       hmtx_emx_init.267\t\t// THIS is the lock for startup\n       perlos2_state_mutex\t\t// THIS is the lock for all the rest\nBAD:\n       perlos2_state\t\t\t// see below\n*/\n/*  The following global-scope data is not yet included:\n       OS2_Perl_data\n       pthreads_states\t\t\t// const now?\n       start_thread_mutex\n       thread_join_count\t\t// protected\n       thread_join_data\t\t\t// protected\n       tmppath\n\n       pDosVerifyPidTid\n\n       Perl_OS2_init3() - should it be protected?\n*/\nOS2_Perl_data_t OS2_Perl_data;\n\nstatic struct perlos2_state_t {\n  int po2__my_pwent;\t\t\t\t/* = -1; */\n  int po2_DOS_harderr_state;\t\t\t/* = -1;    */\n  signed char po2_DOS_suppression_state;\t/* = -1;    */\n\n  PFN po2_ExtFCN[ORD_NENTRIES];\t/* Labeled by ord ORD_*. */\n/*  struct PMWIN_entries_t po2_PMWIN_entries; */\n\n  int po2_emx_wasnt_initialized;\n\n  char po2_fname[9];\n  int po2_rmq_cnt;\n\n  int po2_grent_cnt;\n\n  char *po2_newp;\n  char *po2_oldp;\n  int po2_newl;\n  int po2_oldl;\n  int po2_notfound;\n  char po2_mangle_ret[STATIC_FILE_LENGTH+1];\n  ULONG po2_os2_dll_fake;\n  ULONG po2_os2_mytype;\n  ULONG po2_os2_mytype_ini;\n  int po2_pidtid_lookup;\n  struct passwd po2_pw;\n\n  int po2_pwent_cnt;\n  char po2_pthreads_state_buf[80];\n  char po2_os2error_buf[300];\n/* There is no big sense to make it thread-specific, since signals \n   are delivered to thread 1 only.  XXXX Maybe make it into an array? */\n  int po2_spawn_pid;\n  int po2_spawn_killed;\n\n  jmp_buf po2_at_exit_buf;\n  int po2_longjmp_at_exit;\n  int po2_emx_runtime_init;\t\t/* If 1, we need to manually init it */\n  int po2_emx_exception_init;\t\t/* If 1, we need to manually set it */\n  int po2_emx_runtime_secondary;\n  char* (*po2_perllib_mangle_installed)(char *s, unsigned int l);\n  char* po2_perl_sh_installed;\n  PGINFOSEG po2_gTable;\n  PLINFOSEG po2_lTable;\n} perlos2_state = {\n    -1,\t\t\t\t\t/* po2__my_pwent */\n    -1,\t\t\t\t\t/* po2_DOS_harderr_state */\n    -1,\t\t\t\t\t/* po2_DOS_suppression_state */\n};\n\n#define Perl_po2()\t\t(&perlos2_state)\n\n#define ExtFCN\t\t\t(Perl_po2()->po2_ExtFCN)\n/* #define PMWIN_entries\t\t(Perl_po2()->po2_PMWIN_entries) */\n#define emx_wasnt_initialized\t(Perl_po2()->po2_emx_wasnt_initialized)\n#define fname\t\t\t(Perl_po2()->po2_fname)\n#define rmq_cnt\t\t\t(Perl_po2()->po2_rmq_cnt)\n#define grent_cnt\t\t(Perl_po2()->po2_grent_cnt)\n#define newp\t\t\t(Perl_po2()->po2_newp)\n#define oldp\t\t\t(Perl_po2()->po2_oldp)\n#define newl\t\t\t(Perl_po2()->po2_newl)\n#define oldl\t\t\t(Perl_po2()->po2_oldl)\n#define notfound\t\t(Perl_po2()->po2_notfound)\n#define mangle_ret\t\t(Perl_po2()->po2_mangle_ret)\n#define os2_dll_fake\t\t(Perl_po2()->po2_os2_dll_fake)\n#define os2_mytype\t\t(Perl_po2()->po2_os2_mytype)\n#define os2_mytype_ini\t\t(Perl_po2()->po2_os2_mytype_ini)\n#define pidtid_lookup\t\t(Perl_po2()->po2_pidtid_lookup)\n#define pw\t\t\t(Perl_po2()->po2_pw)\n#define pwent_cnt\t\t(Perl_po2()->po2_pwent_cnt)\n#define _my_pwent\t\t(Perl_po2()->po2__my_pwent)\n#define pthreads_state_buf\t(Perl_po2()->po2_pthreads_state_buf)\n#define os2error_buf\t\t(Perl_po2()->po2_os2error_buf)\n/* There is no big sense to make it thread-specific, since signals \n   are delivered to thread 1 only.  XXXX Maybe make it into an array? */\n#define spawn_pid\t\t(Perl_po2()->po2_spawn_pid)\n#define spawn_killed\t\t(Perl_po2()->po2_spawn_killed)\n#define DOS_harderr_state\t(Perl_po2()->po2_DOS_harderr_state)\n#define DOS_suppression_state\t\t(Perl_po2()->po2_DOS_suppression_state)\n\n#define at_exit_buf\t\t(Perl_po2()->po2_at_exit_buf)\n#define longjmp_at_exit\t\t(Perl_po2()->po2_longjmp_at_exit)\n#define emx_runtime_init\t(Perl_po2()->po2_emx_runtime_init)\n#define emx_exception_init\t(Perl_po2()->po2_emx_exception_init)\n#define emx_runtime_secondary\t(Perl_po2()->po2_emx_runtime_secondary)\n#define perllib_mangle_installed\t(Perl_po2()->po2_perllib_mangle_installed)\n#define perl_sh_installed\t(Perl_po2()->po2_perl_sh_installed)\n#define gTable\t\t\t(Perl_po2()->po2_gTable)\n#define lTable\t\t\t(Perl_po2()->po2_lTable)\n\nconst Perl_PFN * const pExtFCN = (Perl_po2()->po2_ExtFCN);\n\n#if defined(USE_5005THREADS) || defined(USE_ITHREADS)\n\ntypedef void (*emx_startroutine)(void *);\ntypedef void* (*pthreads_startroutine)(void *);\n\nenum pthreads_state {\n    pthreads_st_none = 0, \n    pthreads_st_run,\n    pthreads_st_exited, \n    pthreads_st_detached, \n    pthreads_st_waited,\n    pthreads_st_norun,\n    pthreads_st_exited_waited,\n};\nconst char * const pthreads_states[] = {\n    \"uninit\",\n    \"running\",\n    \"exited\",\n    \"detached\",\n    \"waited for\",\n    \"could not start\",\n    \"exited, then waited on\",\n};\n\nenum pthread_exists { pthread_not_existant = -0xff };\n\nstatic const char*\npthreads_state_string(enum pthreads_state state)\n{\n  if (state < 0 || state >= sizeof(pthreads_states)/sizeof(*pthreads_states)) {\n    snprintf(pthreads_state_buf, sizeof(pthreads_state_buf),\n\t     \"unknown thread state %d\", (int)state);\n    return pthreads_state_buf;\n  }\n  return pthreads_states[state];\n}\n\ntypedef struct {\n    void *status;\n    perl_cond cond;\n    enum pthreads_state state;\n} thread_join_t;\n\nthread_join_t *thread_join_data;\nint thread_join_count;\nperl_mutex start_thread_mutex;\nstatic perl_mutex perlos2_state_mutex;\n\n\nint\npthread_join(perl_os_thread tid, void **status)\n{\n    MUTEX_LOCK(&start_thread_mutex);\n    if (tid < 1 || tid >= thread_join_count) {\n\tMUTEX_UNLOCK(&start_thread_mutex);\n\tif (tid != pthread_not_existant)\n\t    Perl_croak_nocontext(\"panic: join with a thread with strange ordinal %d\", (int)tid);\n\tPerl_warn_nocontext(\"panic: join with a thread which could not start\");\n\t*status = 0;\n\treturn 0;\n    }\n    switch (thread_join_data[tid].state) {\n    case pthreads_st_exited:\n\tthread_join_data[tid].state = pthreads_st_exited_waited;\n\t*status = thread_join_data[tid].status;\n\tMUTEX_UNLOCK(&start_thread_mutex);\n\tCOND_SIGNAL(&thread_join_data[tid].cond);    \n\tbreak;\n    case pthreads_st_waited:\n\tMUTEX_UNLOCK(&start_thread_mutex);\n\tPerl_croak_nocontext(\"join with a thread with a waiter\");\n\tbreak;\n    case pthreads_st_norun:\n    {\n\tint state = (int)thread_join_data[tid].status;\n\n\tthread_join_data[tid].state = pthreads_st_none;\n\tMUTEX_UNLOCK(&start_thread_mutex);\n\tPerl_croak_nocontext(\"panic: join with a thread which could not run\"\n\t\t\t     \" due to attempt of tid reuse (state='%s')\",\n\t\t\t     pthreads_state_string(state));\n\tbreak;\n    }\n    case pthreads_st_run:\n    {\n\tperl_cond cond;\n\n\tthread_join_data[tid].state = pthreads_st_waited;\n\tthread_join_data[tid].status = (void *)status;\n\tCOND_INIT(&thread_join_data[tid].cond);\n\tcond = thread_join_data[tid].cond;\n\tCOND_WAIT(&thread_join_data[tid].cond, &start_thread_mutex);\n\tCOND_DESTROY(&cond);\n\tMUTEX_UNLOCK(&start_thread_mutex);\n\tbreak;\n    }\n    default:\n\tMUTEX_UNLOCK(&start_thread_mutex);\n\tPerl_croak_nocontext(\"panic: join with thread in unknown thread state: '%s'\", \n\t      pthreads_state_string(thread_join_data[tid].state));\n\tbreak;\n    }\n    return 0;\n}\n\ntypedef struct {\n  pthreads_startroutine sub;\n  void *arg;\n  void *ctx;\n} pthr_startit;\n\n/* The lock is used:\n\ta) Since we temporarily usurp the caller interp, so malloc() may\n\t   use it to decide on debugging the call;\n\tb) Since *args is on the caller's stack.\n */\nvoid\npthread_startit(void *arg1)\n{\n    /* Thread is already started, we need to transfer control only */\n    pthr_startit args = *(pthr_startit *)arg1;\n    int tid = pthread_self();\n    void *rc;\n    int state;\n\n    if (tid <= 1) {\n\t/* Can't croak, the setjmp() is not in scope... */\n\tchar buf[80];\n\n\tsnprintf(buf, sizeof(buf),\n\t\t \"panic: thread with strange ordinal %d created\\n\\r\", tid);\n\twrite(2,buf,strlen(buf));\n\tMUTEX_UNLOCK(&start_thread_mutex);\n\treturn;\n    }\n    /* Until args.sub resets it, makes debugging Perl_malloc() work: */\n    PERL_SET_CONTEXT(0);\n    if (tid >= thread_join_count) {\n\tint oc = thread_join_count;\n\t\n\tthread_join_count = tid + 5 + tid/5;\n\tif (thread_join_data) {\n\t    Renew(thread_join_data, thread_join_count, thread_join_t);\n\t    Zero(thread_join_data + oc, thread_join_count - oc, thread_join_t);\n\t} else {\n\t    Newxz(thread_join_data, thread_join_count, thread_join_t);\n\t}\n    }\n    if (thread_join_data[tid].state != pthreads_st_none) {\n\t/* Can't croak, the setjmp() is not in scope... */\n\tchar buf[80];\n\n\tsnprintf(buf, sizeof(buf),\n\t\t \"panic: attempt to reuse thread id %d (state='%s')\\n\\r\",\n\t\t tid, pthreads_state_string(thread_join_data[tid].state));\n\twrite(2,buf,strlen(buf));\n\tthread_join_data[tid].status = (void*)thread_join_data[tid].state;\n\tthread_join_data[tid].state = pthreads_st_norun;\n\tMUTEX_UNLOCK(&start_thread_mutex);\n\treturn;\n    }\n    thread_join_data[tid].state = pthreads_st_run;\n    /* Now that we copied/updated the guys, we may release the caller... */\n    MUTEX_UNLOCK(&start_thread_mutex);\n    rc = (*args.sub)(args.arg);\n    MUTEX_LOCK(&start_thread_mutex);\n    switch (thread_join_data[tid].state) {\n    case pthreads_st_waited:\n\tCOND_SIGNAL(&thread_join_data[tid].cond);\n\tthread_join_data[tid].state = pthreads_st_none;\n\t*((void**)thread_join_data[tid].status) = rc;\n\tbreak;\n    case pthreads_st_detached:\n\tthread_join_data[tid].state = pthreads_st_none;\n\tbreak;\n    case pthreads_st_run:\n\t/* Somebody can wait on us; cannot exit, since OS can reuse the tid\n\t   and our waiter will get somebody else's status. */\n\tthread_join_data[tid].state = pthreads_st_exited;\n\tthread_join_data[tid].status = rc;\n\tCOND_INIT(&thread_join_data[tid].cond);\n\tCOND_WAIT(&thread_join_data[tid].cond, &start_thread_mutex);\n\tCOND_DESTROY(&thread_join_data[tid].cond);\n\tthread_join_data[tid].state = pthreads_st_none;\t/* Ready to reuse */\n\tbreak;\n    default:\n\tstate = thread_join_data[tid].state;\n\tMUTEX_UNLOCK(&start_thread_mutex);\n\tPerl_croak_nocontext(\"panic: unexpected thread state on exit: '%s'\",\n\t\t\t     pthreads_state_string(state));\n    }\n    MUTEX_UNLOCK(&start_thread_mutex);\n}\n\nint\npthread_create(perl_os_thread *tidp, const pthread_attr_t *attr, \n\t       void *(*start_routine)(void*), void *arg)\n{\n    dTHX;\n    pthr_startit args;\n\n    args.sub = (void*)start_routine;\n    args.arg = arg;\n    args.ctx = PERL_GET_CONTEXT;\n\n    MUTEX_LOCK(&start_thread_mutex);\n    /* Test suite creates 31 extra threads;\n       on machine without shared-memory-hogs this stack sizeis OK with 31: */\n    *tidp = _beginthread(pthread_startit, /*stack*/ NULL, \n\t\t\t /*stacksize*/ 4*1024*1024, (void*)&args);\n    if (*tidp == -1) {\n\t*tidp = pthread_not_existant;\n\tMUTEX_UNLOCK(&start_thread_mutex);\n\treturn EINVAL;\n    }\n    MUTEX_LOCK(&start_thread_mutex);\t\t/* Wait for init to proceed */\n    MUTEX_UNLOCK(&start_thread_mutex);\n    return 0;\n}\n\nint \npthread_detach(perl_os_thread tid)\n{\n    MUTEX_LOCK(&start_thread_mutex);\n    if (tid < 1 || tid >= thread_join_count) {\n\tMUTEX_UNLOCK(&start_thread_mutex);\n\tif (tid != pthread_not_existant)\n\t    Perl_croak_nocontext(\"panic: detach of a thread with strange ordinal %d\", (int)tid);\n\tPerl_warn_nocontext(\"detach of a thread which could not start\");\n\treturn 0;\n    }\n    switch (thread_join_data[tid].state) {\n    case pthreads_st_waited:\n\tMUTEX_UNLOCK(&start_thread_mutex);\n\tPerl_croak_nocontext(\"detach on a thread with a waiter\");\n\tbreak;\n    case pthreads_st_run:\n\tthread_join_data[tid].state = pthreads_st_detached;\n\tMUTEX_UNLOCK(&start_thread_mutex);\n\tbreak;\n    case pthreads_st_exited:\n\tMUTEX_UNLOCK(&start_thread_mutex);\n\tCOND_SIGNAL(&thread_join_data[tid].cond);    \n\tbreak;\n    case pthreads_st_detached:\n\tMUTEX_UNLOCK(&start_thread_mutex);\n\tPerl_warn_nocontext(\"detach on an already detached thread\");\n\tbreak;\n    case pthreads_st_norun:\n    {\n\tint state = (int)thread_join_data[tid].status;\n\n\tthread_join_data[tid].state = pthreads_st_none;\n\tMUTEX_UNLOCK(&start_thread_mutex);\n\tPerl_croak_nocontext(\"panic: detaching thread which could not run\"\n\t\t\t     \" due to attempt of tid reuse (state='%s')\",\n\t\t\t     pthreads_state_string(state));\n\tbreak;\n    }\n    default:\n\tMUTEX_UNLOCK(&start_thread_mutex);\n\tPerl_croak_nocontext(\"panic: detach of a thread with unknown thread state: '%s'\", \n\t      pthreads_state_string(thread_join_data[tid].state));\n\tbreak;\n    }\n    return 0;\n}\n\n/* This is a very bastardized version; may be OK due to edge trigger of Wait */\nint\nos2_cond_wait(perl_cond *c, perl_mutex *m)\n{\t\t\t\t\t\t\n    int rc;\n    STRLEN n_a;\n    if ((rc = DosResetEventSem(*c,&n_a)) && (rc != ERROR_ALREADY_RESET))\n\tPerl_rc = CheckOSError(rc), croak_with_os2error(\"panic: COND_WAIT-reset\");\n    if (m) MUTEX_UNLOCK(m);\t\t\t\t\t\n    if (CheckOSError(DosWaitEventSem(*c,SEM_INDEFINITE_WAIT))\n\t&& (rc != ERROR_INTERRUPT))\n\tcroak_with_os2error(\"panic: COND_WAIT\");\t\t\n    if (rc == ERROR_INTERRUPT)\n\terrno = EINTR;\n    if (m) MUTEX_LOCK(m);\n    return 0;\n} \n#endif\n\nstatic int exe_is_aout(void);\n\n/* This should match enum entries_ordinals defined in os2ish.h. */\nstatic const struct {\n    struct dll_handle_t *dll;\n    const char *entryname;\n    int entrypoint;\n} loadOrdinals[] = {\n  {&doscalls_handle, NULL, 874},\t/* DosQueryExtLibpath */\n  {&doscalls_handle, NULL, 873},\t/* DosSetExtLibpath */\n  {&doscalls_handle, NULL, 460},\t/* DosVerifyPidTid */\n  {&tcp_handle, \"SETHOSTENT\", 0},\n  {&tcp_handle, \"SETNETENT\" , 0},\n  {&tcp_handle, \"SETPROTOENT\", 0},\n  {&tcp_handle, \"SETSERVENT\", 0},\n  {&tcp_handle, \"GETHOSTENT\", 0},\n  {&tcp_handle, \"GETNETENT\" , 0},\n  {&tcp_handle, \"GETPROTOENT\", 0},\n  {&tcp_handle, \"GETSERVENT\", 0},\n  {&tcp_handle, \"ENDHOSTENT\", 0},\n  {&tcp_handle, \"ENDNETENT\", 0},\n  {&tcp_handle, \"ENDPROTOENT\", 0},\n  {&tcp_handle, \"ENDSERVENT\", 0},\n  {&pmwin_handle, NULL, 763},\t\t/* WinInitialize */\n  {&pmwin_handle, NULL, 716},\t\t/* WinCreateMsgQueue */\n  {&pmwin_handle, NULL, 726},\t\t/* WinDestroyMsgQueue */\n  {&pmwin_handle, NULL, 918},\t\t/* WinPeekMsg */\n  {&pmwin_handle, NULL, 915},\t\t/* WinGetMsg */\n  {&pmwin_handle, NULL, 912},\t\t/* WinDispatchMsg */\n  {&pmwin_handle, NULL, 753},\t\t/* WinGetLastError */\n  {&pmwin_handle, NULL, 705},\t\t/* WinCancelShutdown */\n\t/* These are needed in extensions.\n\t   How to protect PMSHAPI: it comes through EMX functions? */\n  {&rexx_handle,    \"RexxStart\", 0},\n  {&rexx_handle,    \"RexxVariablePool\", 0},\n  {&rexxapi_handle, \"RexxRegisterFunctionExe\", 0},\n  {&rexxapi_handle, \"RexxDeregisterFunction\", 0},\n  {&sesmgr_handle,  \"DOSSMSETTITLE\", 0}, /* Would not work runtime-loaded */\n  {&pmshapi_handle, \"PRF32QUERYPROFILESIZE\", 0},\n  {&pmshapi_handle, \"PRF32OPENPROFILE\", 0},\n  {&pmshapi_handle, \"PRF32CLOSEPROFILE\", 0},\n  {&pmshapi_handle, \"PRF32QUERYPROFILE\", 0},\n  {&pmshapi_handle, \"PRF32RESET\", 0},\n  {&pmshapi_handle, \"PRF32QUERYPROFILEDATA\", 0},\n  {&pmshapi_handle, \"PRF32WRITEPROFILEDATA\", 0},\n\n  /* At least some of these do not work by name, since they need\n\tWIN32 instead of WIN... */\n#if 0\n  These were generated with\n    nm I:\\emx\\lib\\os2.a  | fgrep -f API-list | grep = > API-list-entries\n    perl -wnle \"next unless /^0+\\s+E\\s+_(\\w+)=(\\w+).(\\d+)/; print qq(    ORD_$1,)\" API-list-entries > API-list-ORD_\n    perl -wnle \"next unless /^0+\\s+E\\s+_(\\w+)=(\\w+).(\\d+)/; print qq(  {${2}_handle, NULL, $3},\\t\\t/* $1 */)\" WinSwitch-API-list-entries  >API-list-entry\n#endif\n  {&pmshapi_handle, NULL, 123},\t\t/* WinChangeSwitchEntry */\n  {&pmshapi_handle, NULL, 124},\t\t/* WinQuerySwitchEntry */\n  {&pmshapi_handle, NULL, 125},\t\t/* WinQuerySwitchHandle */\n  {&pmshapi_handle, NULL, 126},\t\t/* WinQuerySwitchList */\n  {&pmshapi_handle, NULL, 131},\t\t/* WinSwitchToProgram */\n  {&pmwin_handle, NULL, 702},\t\t/* WinBeginEnumWindows */\n  {&pmwin_handle, NULL, 737},\t\t/* WinEndEnumWindows */\n  {&pmwin_handle, NULL, 740},\t\t/* WinEnumDlgItem */\n  {&pmwin_handle, NULL, 756},\t\t/* WinGetNextWindow */\n  {&pmwin_handle, NULL, 768},\t\t/* WinIsChild */\n  {&pmwin_handle, NULL, 799},\t\t/* WinQueryActiveWindow */\n  {&pmwin_handle, NULL, 805},\t\t/* WinQueryClassName */\n  {&pmwin_handle, NULL, 817},\t\t/* WinQueryFocus */\n  {&pmwin_handle, NULL, 834},\t\t/* WinQueryWindow */\n  {&pmwin_handle, NULL, 837},\t\t/* WinQueryWindowPos */\n  {&pmwin_handle, NULL, 838},\t\t/* WinQueryWindowProcess */\n  {&pmwin_handle, NULL, 841},\t\t/* WinQueryWindowText */\n  {&pmwin_handle, NULL, 842},\t\t/* WinQueryWindowTextLength */\n  {&pmwin_handle, NULL, 860},\t\t/* WinSetFocus */\n  {&pmwin_handle, NULL, 875},\t\t/* WinSetWindowPos */\n  {&pmwin_handle, NULL, 877},\t\t/* WinSetWindowText */\n  {&pmwin_handle, NULL, 883},\t\t/* WinShowWindow */\n  {&pmwin_handle, NULL, 772},\t\t/* WinIsWindow */\n  {&pmwin_handle, NULL, 899},\t\t/* WinWindowFromId */\n  {&pmwin_handle, NULL, 900},\t\t/* WinWindowFromPoint */\n  {&pmwin_handle, NULL, 919},\t\t/* WinPostMsg */\n  {&pmwin_handle, NULL, 735},\t\t/* WinEnableWindow */\n  {&pmwin_handle, NULL, 736},\t\t/* WinEnableWindowUpdate */\n  {&pmwin_handle, NULL, 773},\t\t/* WinIsWindowEnabled */\n  {&pmwin_handle, NULL, 774},\t\t/* WinIsWindowShowing */\n  {&pmwin_handle, NULL, 775},\t\t/* WinIsWindowVisible */\n  {&pmwin_handle, NULL, 839},\t\t/* WinQueryWindowPtr */\n  {&pmwin_handle, NULL, 843},\t\t/* WinQueryWindowULong */\n  {&pmwin_handle, NULL, 844},\t\t/* WinQueryWindowUShort */\n  {&pmwin_handle, NULL, 874},\t\t/* WinSetWindowBits */\n  {&pmwin_handle, NULL, 876},\t\t/* WinSetWindowPtr */\n  {&pmwin_handle, NULL, 878},\t\t/* WinSetWindowULong */\n  {&pmwin_handle, NULL, 879},\t\t/* WinSetWindowUShort */\n  {&pmwin_handle, NULL, 813},\t\t/* WinQueryDesktopWindow */\n  {&pmwin_handle, NULL, 851},\t\t/* WinSetActiveWindow */\n  {&doscalls_handle, NULL, 360},\t/* DosQueryModFromEIP */\n  {&doscalls_handle, NULL, 582},\t/* Dos32QueryHeaderInfo */\n  {&doscalls_handle, NULL, 362},\t/* DosTmrQueryFreq */\n  {&doscalls_handle, NULL, 363},\t/* DosTmrQueryTime */\n  {&pmwp_handle, NULL, 262},\t\t/* WinQueryActiveDesktopPathname */\n  {&pmwin_handle, NULL, 765},\t\t/* WinInvalidateRect */\n  {&pmwin_handle, NULL, 906},\t\t/* WinCreateFrameControl */\n  {&pmwin_handle, NULL, 807},\t\t/* WinQueryClipbrdFmtInfo */\n  {&pmwin_handle, NULL, 808},\t\t/* WinQueryClipbrdOwner */\n  {&pmwin_handle, NULL, 809},\t\t/* WinQueryClipbrdViewer */\n  {&pmwin_handle, NULL, 806},\t\t/* WinQueryClipbrdData */\n  {&pmwin_handle, NULL, 793},\t\t/* WinOpenClipbrd */\n  {&pmwin_handle, NULL, 707},\t\t/* WinCloseClipbrd */\n  {&pmwin_handle, NULL, 854},\t\t/* WinSetClipbrdData */\n  {&pmwin_handle, NULL, 855},\t\t/* WinSetClipbrdOwner */\n  {&pmwin_handle, NULL, 856},\t\t/* WinSetClipbrdViewer */\n  {&pmwin_handle, NULL, 739},\t\t/* WinEnumClipbrdFmts  */\n  {&pmwin_handle, NULL, 733},\t\t/* WinEmptyClipbrd */\n  {&pmwin_handle, NULL, 700},\t\t/* WinAddAtom */\n  {&pmwin_handle, NULL, 744},\t\t/* WinFindAtom */\n  {&pmwin_handle, NULL, 721},\t\t/* WinDeleteAtom */\n  {&pmwin_handle, NULL, 803},\t\t/* WinQueryAtomUsage */\n  {&pmwin_handle, NULL, 802},\t\t/* WinQueryAtomName */\n  {&pmwin_handle, NULL, 801},\t\t/* WinQueryAtomLength */\n  {&pmwin_handle, NULL, 830},\t\t/* WinQuerySystemAtomTable */\n  {&pmwin_handle, NULL, 714},\t\t/* WinCreateAtomTable */\n  {&pmwin_handle, NULL, 724},\t\t/* WinDestroyAtomTable */\n  {&pmwin_handle, NULL, 794},\t\t/* WinOpenWindowDC */\n  {&pmgpi_handle, NULL, 610},\t\t/* DevOpenDC */\n  {&pmgpi_handle, NULL, 606},\t\t/* DevQueryCaps */\n  {&pmgpi_handle, NULL, 604},\t\t/* DevCloseDC */\n  {&pmwin_handle, NULL, 789},\t\t/* WinMessageBox */\n  {&pmwin_handle, NULL, 1015},\t\t/* WinMessageBox2 */\n  {&pmwin_handle, NULL, 829},\t\t/* WinQuerySysValue */\n  {&pmwin_handle, NULL, 873},\t\t/* WinSetSysValue */\n  {&pmwin_handle, NULL, 701},\t\t/* WinAlarm */\n  {&pmwin_handle, NULL, 745},\t\t/* WinFlashWindow */\n  {&pmwin_handle, NULL, 780},\t\t/* WinLoadPointer */\n  {&pmwin_handle, NULL, 828},\t\t/* WinQuerySysPointer */\n  {&doscalls_handle, NULL, 417},\t/* DosReplaceModule */\n  {&doscalls_handle, NULL, 976},\t/* DosPerfSysCall */\n  {&rexxapi_handle, \"RexxRegisterSubcomExe\", 0},\n};\n\nHMODULE\nloadModule(const char *modname, int fail)\n{\n    HMODULE h = (HMODULE)dlopen(modname, 0);\n\n    if (!h && fail)\n\tPerl_croak_nocontext(\"Error loading module '%s': %s\", \n\t\t\t     modname, dlerror());\n    return h;\n}\n\n/* const char* const ptypes[] = { \"FS\", \"DOS\", \"VIO\", \"PM\", \"DETACH\" }; */\n\nstatic int\nmy_type()\n{\n    int rc;\n    TIB *tib;\n    PIB *pib;\n    \n    if (!(_emx_env & 0x200)) return 1; /* not OS/2. */\n    if (CheckOSError(DosGetInfoBlocks(&tib, &pib))) \n\treturn -1; \n    \n    return (pib->pib_ultype);\n}\n\nstatic void\nmy_type_set(int type)\n{\n    int rc;\n    TIB *tib;\n    PIB *pib;\n    \n    if (!(_emx_env & 0x200))\n\tPerl_croak_nocontext(\"Can't set type on DOS\"); /* not OS/2. */\n    if (CheckOSError(DosGetInfoBlocks(&tib, &pib))) \n\tcroak_with_os2error(\"Error getting info blocks\");\n    pib->pib_ultype = type;\n}\n\nPFN\nloadByOrdinal(enum entries_ordinals ord, int fail)\n{\n    if (sizeof(loadOrdinals)/sizeof(loadOrdinals[0]) != ORD_NENTRIES)\n\t    Perl_croak_nocontext(\n\t\t \"Wrong size of loadOrdinals array: expected %d, actual %d\", \n\t\t sizeof(loadOrdinals)/sizeof(loadOrdinals[0]), ORD_NENTRIES);\n    if (ExtFCN[ord] == NULL) {\n\tPFN fcn = (PFN)-1;\n\tAPIRET rc;\n\n\tif (!loadOrdinals[ord].dll->handle) {\n\t    if (loadOrdinals[ord].dll->requires_pm && my_type() < 2) { /* FS */\n\t\tchar *s = getenv(\"PERL_ASIF_PM\");\n\t\t\n\t\tif (!s || !atoi(s)) {\n\t\t    /* The module will not function well without PM.\n\t\t       The usual way to detect PM is the existence of the mutex\n\t\t       \\SEM32\\PMDRAG.SEM. */\n\t\t    HMTX hMtx = 0;\n\n\t\t    if (CheckOSError(DosOpenMutexSem(\"\\\\SEM32\\\\PMDRAG.SEM\",\n\t\t\t\t\t\t     &hMtx)))\n\t\t\tPerl_croak_nocontext(\"Looks like we have no PM; will not load DLL %s without $ENV{PERL_ASIF_PM}\",\n\t\t\t\t\t     loadOrdinals[ord].dll->modname);\n\t\t    DosCloseMutexSem(hMtx);\n\t\t}\n\t    }\n\t    MUTEX_LOCK(&perlos2_state_mutex);\n\t    loadOrdinals[ord].dll->handle\n\t\t= loadModule(loadOrdinals[ord].dll->modname, fail);\n\t    MUTEX_UNLOCK(&perlos2_state_mutex);\n\t}\n\tif (!loadOrdinals[ord].dll->handle)\n\t    return 0;\t\t\t/* Possible with FAIL==0 only */\n\tif (CheckOSError(DosQueryProcAddr(loadOrdinals[ord].dll->handle,\n\t\t\t\t\t  loadOrdinals[ord].entrypoint,\n\t\t\t\t\t  loadOrdinals[ord].entryname,&fcn))) {\n\t    char buf[20], *s = (char*)loadOrdinals[ord].entryname;\n\n\t    if (!fail)\n\t\treturn 0;\n\t    if (!s)\n\t\tsprintf(s = buf, \"%d\", loadOrdinals[ord].entrypoint);\n\t    Perl_croak_nocontext(\n\t\t \"This version of OS/2 does not support %s.%s\", \n\t\t loadOrdinals[ord].dll->modname, s);\n\t}\n\tExtFCN[ord] = fcn;\n    } \n    if ((long)ExtFCN[ord] == -1)\n\tPerl_croak_nocontext(\"panic queryaddr\");\n    return ExtFCN[ord];\n}\n\nvoid \ninit_PMWIN_entries(void)\n{\n    int i;\n\n    for (i = ORD_WinInitialize; i <= ORD_WinCancelShutdown; i++)\n\t((PFN*)&PMWIN_entries)[i - ORD_WinInitialize] = loadByOrdinal(i, 1);\n}\n\n/*****************************************************/\n/* socket forwarders without linking with tcpip DLLs */\n\nDeclFuncByORD(struct hostent *,  gethostent,  ORD_GETHOSTENT,  (void), ())\nDeclFuncByORD(struct netent  *,  getnetent,   ORD_GETNETENT,   (void), ())\nDeclFuncByORD(struct protoent *, getprotoent, ORD_GETPROTOENT, (void), ())\nDeclFuncByORD(struct servent *,  getservent,  ORD_GETSERVENT,  (void), ())\n\nDeclVoidFuncByORD(sethostent,  ORD_SETHOSTENT,  (int x), (x))\nDeclVoidFuncByORD(setnetent,   ORD_SETNETENT,   (int x), (x))\nDeclVoidFuncByORD(setprotoent, ORD_SETPROTOENT, (int x), (x))\nDeclVoidFuncByORD(setservent,  ORD_SETSERVENT,  (int x), (x))\n\nDeclVoidFuncByORD(endhostent,  ORD_ENDHOSTENT,  (void), ())\nDeclVoidFuncByORD(endnetent,   ORD_ENDNETENT,   (void), ())\nDeclVoidFuncByORD(endprotoent, ORD_ENDPROTOENT, (void), ())\nDeclVoidFuncByORD(endservent,  ORD_ENDSERVENT,  (void), ())\n\n/* priorities */\nstatic const signed char priors[] = {0, 1, 3, 2}; /* Last two interchanged,\n\t\t\t\t\t\t     self inverse. */\n#define QSS_INI_BUFFER 1024\n\nULONG (*pDosVerifyPidTid) (PID pid, TID tid);\n\nPQTOPLEVEL\nget_sysinfo(ULONG pid, ULONG flags)\n{\n    char *pbuffer;\n    ULONG rc, buf_len = QSS_INI_BUFFER;\n    PQTOPLEVEL psi;\n\n    if (pid) {\n\tif (!pidtid_lookup) {\n\t    pidtid_lookup = 1;\n\t    *(PFN*)&pDosVerifyPidTid = loadByOrdinal(ORD_DosVerifyPidTid, 0);\n\t}\n\tif (pDosVerifyPidTid) {\t/* Warp3 or later */\n\t    /* Up to some fixpak QuerySysState() kills the system if a non-existent\n\t       pid is used. */\n\t    if (CheckOSError(pDosVerifyPidTid(pid, 1)))\n\t\treturn 0;\n        }\n    }\n    Newx(pbuffer, buf_len, char);\n    /* QSS_PROCESS | QSS_MODULE | QSS_SEMAPHORES | QSS_SHARED */\n    rc = QuerySysState(flags, pid, pbuffer, buf_len);\n    while (rc == ERROR_BUFFER_OVERFLOW) {\n\tRenew(pbuffer, buf_len *= 2, char);\n\trc = QuerySysState(flags, pid, pbuffer, buf_len);\n    }\n    if (rc) {\n\tFillOSError(rc);\n\tSafefree(pbuffer);\n\treturn 0;\n    }\n    psi = (PQTOPLEVEL)pbuffer;\n    if (psi && pid && psi->procdata && pid != psi->procdata->pid) {\n      Safefree(psi);\n      Perl_croak_nocontext(\"panic: wrong pid in sysinfo\");\n    }\n    return psi;\n}\n\n#define PRIO_ERR 0x1111\n\nstatic ULONG\nsys_prio(pid)\n{\n  ULONG prio;\n  PQTOPLEVEL psi;\n\n  if (!pid)\n      return PRIO_ERR;\n  psi = get_sysinfo(pid, QSS_PROCESS);\n  if (!psi)\n      return PRIO_ERR;\n  prio = psi->procdata->threads->priority;\n  Safefree(psi);\n  return prio;\n}\n\nint \nsetpriority(int which, int pid, int val)\n{\n  ULONG rc, prio = sys_prio(pid);\n\n  if (!(_emx_env & 0x200)) return 0; /* Nop if not OS/2. */\n  if (priors[(32 - val) >> 5] + 1 == (prio >> 8)) {\n      /* Do not change class. */\n      return CheckOSError(DosSetPriority((pid < 0) \n\t\t\t\t\t ? PRTYS_PROCESSTREE : PRTYS_PROCESS,\n\t\t\t\t\t 0, \n\t\t\t\t\t (32 - val) % 32 - (prio & 0xFF), \n\t\t\t\t\t abs(pid)))\n      ? -1 : 0;\n  } else /* if ((32 - val) % 32 == (prio & 0xFF)) */ {\n      /* Documentation claims one can change both class and basevalue,\n       * but I find it wrong. */\n      /* Change class, but since delta == 0 denotes absolute 0, correct. */\n      if (CheckOSError(DosSetPriority((pid < 0) \n\t\t\t\t      ? PRTYS_PROCESSTREE : PRTYS_PROCESS,\n\t\t\t\t      priors[(32 - val) >> 5] + 1, \n\t\t\t\t      0, \n\t\t\t\t      abs(pid)))) \n\t  return -1;\n      if ( ((32 - val) % 32) == 0 ) return 0;\n      return CheckOSError(DosSetPriority((pid < 0) \n\t\t\t\t\t ? PRTYS_PROCESSTREE : PRTYS_PROCESS,\n\t\t\t\t\t 0, \n\t\t\t\t\t (32 - val) % 32, \n\t\t\t\t\t abs(pid)))\n\t  ? -1 : 0;\n  } \n}\n\nint \ngetpriority(int which /* ignored */, int pid)\n{\n  ULONG ret;\n\n  if (!(_emx_env & 0x200)) return 0; /* Nop if not OS/2. */\n  ret = sys_prio(pid);\n  if (ret == PRIO_ERR) {\n      return -1;\n  }\n  return (1 - priors[((ret >> 8) - 1)])*32 - (ret & 0xFF);\n}\n\n/*****************************************************************************/\n/* spawn */\n\n\n\nstatic Signal_t\nspawn_sighandler(int sig)\n{\n    /* Some programs do not arrange for the keyboard signals to be\n       delivered to them.  We need to deliver the signal manually. */\n    /* We may get a signal only if \n       a) kid does not receive keyboard signal: deliver it;\n       b) kid already died, and we get a signal.  We may only hope\n          that the pid number was not reused.\n     */\n    \n    if (spawn_killed) \n\tsig = SIGKILL;\t\t\t/* Try harder. */\n    kill(spawn_pid, sig);\n    spawn_killed = 1;\n}\n\nstatic int\nresult(pTHX_ int flag, int pid)\n{\n\tint r, status;\n\tSignal_t (*ihand)();     /* place to save signal during system() */\n\tSignal_t (*qhand)();     /* place to save signal during system() */\n#ifndef __EMX__\n\tRESULTCODES res;\n\tint rpid;\n#endif\n\n\tif (pid < 0 || flag != 0)\n\t\treturn pid;\n\n#ifdef __EMX__\n\tspawn_pid = pid;\n\tspawn_killed = 0;\n\tihand = rsignal(SIGINT, &spawn_sighandler);\n\tqhand = rsignal(SIGQUIT, &spawn_sighandler);\n\tdo {\n\t    r = wait4pid(pid, &status, 0);\n\t} while (r == -1 && errno == EINTR);\n\trsignal(SIGINT, ihand);\n\trsignal(SIGQUIT, qhand);\n\n\tPL_statusvalue = (U16)status;\n\tif (r < 0)\n\t\treturn -1;\n\treturn status & 0xFFFF;\n#else\n\tihand = rsignal(SIGINT, SIG_IGN);\n\tr = DosWaitChild(DCWA_PROCESS, DCWW_WAIT, &res, &rpid, pid);\n\trsignal(SIGINT, ihand);\n\tPL_statusvalue = res.codeResult << 8 | res.codeTerminate;\n\tif (r)\n\t\treturn -1;\n\treturn PL_statusvalue;\n#endif\n}\n\nenum execf_t {\n  EXECF_SPAWN,\n  EXECF_EXEC,\n  EXECF_TRUEEXEC,\n  EXECF_SPAWN_NOWAIT,\n  EXECF_SPAWN_BYFLAG,\n  EXECF_SYNC\n};\n\nstatic ULONG\nfile_type(char *path)\n{\n    int rc;\n    ULONG apptype;\n    \n    if (!(_emx_env & 0x200)) \n\tPerl_croak_nocontext(\"file_type not implemented on DOS\"); /* not OS/2. */\n    if (CheckOSError(DosQueryAppType(path, &apptype))) {\n\tswitch (rc) {\n\tcase ERROR_FILE_NOT_FOUND:\n\tcase ERROR_PATH_NOT_FOUND:\n\t    return -1;\n\tcase ERROR_ACCESS_DENIED:\t/* Directory with this name found? */\n\t    return -3;\n\tdefault:\t\t\t/* Found, but not an\n\t\t\t\t\t   executable, or some other\n\t\t\t\t\t   read error. */\n\t    return -2;\n\t}\n    }    \n    return apptype;\n}\n\n/* Spawn/exec a program, revert to shell if needed. */\n\nextern ULONG _emx_exception (\tEXCEPTIONREPORTRECORD *,\n\t\t\t\tEXCEPTIONREGISTRATIONRECORD *,\n                                CONTEXTRECORD *,\n                                void *);\n\nint\ndo_spawn_ve(pTHX_ SV *really, const char **argv, U32 flag, U32 execf, char *inicmd, U32 addflag)\n{\n\tint trueflag = flag;\n\tint rc, pass = 1;\n\tchar *real_name = NULL;\t\t\t/* Shut down the warning */\n\tchar const * args[4];\n\tstatic const char * const fargs[4] \n\t    = { \"/bin/sh\", \"-c\", \"\\\"$@\\\"\", \"spawn-via-shell\", };\n\tconst char * const *argsp = fargs;\n\tint nargs = 4;\n\tint force_shell;\n \tint new_stderr = -1, nostderr = 0;\n\tint fl_stderr = 0;\n\tSTRLEN n_a;\n\tchar *buf;\n\tPerlIO *file;\n\t\n\tif (flag == P_WAIT)\n\t\tflag = P_NOWAIT;\n\tif (really) {\n\t    real_name = SvPV(really, n_a);\n\t    real_name = savepv(real_name);\n\t    SAVEFREEPV(real_name);\n\t    if (!*real_name)\n\t\treally = NULL;\n\t}\n\n      retry:\n\tif (strEQ(argv[0],\"/bin/sh\")) \n\t    argv[0] = PL_sh_path;\n\n\t/* We should check PERL_SH* and PERLLIB_* as well? */\n\tif (!really || pass >= 2)\n\t    real_name = argv[0];\n\tif (real_name[0] != '/' && real_name[0] != '\\\\'\n\t    && !(real_name[0] && real_name[1] == ':' \n\t\t && (real_name[2] == '/' || real_name[2] != '\\\\'))\n\t    ) /* will spawnvp use PATH? */\n\t    TAINT_ENV();\t/* testing IFS here is overkill, probably */\n\n      reread:\n\tforce_shell = 0;\n\tif (_emx_env & 0x200) { /* OS/2. */ \n\t    int type = file_type(real_name);\n\t  type_again:\n\t    if (type == -1) {\t\t/* Not found */\n\t\terrno = ENOENT;\n\t\trc = -1;\n\t\tgoto do_script;\n\t    }\n\t    else if (type == -2) {\t\t/* Not an EXE */\n\t\terrno = ENOEXEC;\n\t\trc = -1;\n\t\tgoto do_script;\n\t    }\n\t    else if (type == -3) {\t\t/* Is a directory? */\n\t\t/* Special-case this */\n\t\tchar tbuf[512];\n\t\tint l = strlen(real_name);\n\n\t\tif (l + 5 <= sizeof tbuf) {\n\t\t    strcpy(tbuf, real_name);\n\t\t    strcpy(tbuf + l, \".exe\");\n\t\t    type = file_type(tbuf);\n\t\t    if (type >= -3)\n\t\t\tgoto type_again;\n\t\t}\n\t\t\n\t\terrno = ENOEXEC;\n\t\trc = -1;\n\t\tgoto do_script;\n\t    }\n\t    switch (type & 7) {\n\t\t/* Ignore WINDOWCOMPAT and FAPI, start them the same type we are. */\n\t    case FAPPTYP_WINDOWAPI: \n\t    {\t/* Apparently, kids are started basing on startup type, not the morphed type */\n\t\tif (os2_mytype != 3) {\t/* not PM */\n\t\t    if (flag == P_NOWAIT)\n\t\t\tflag = P_PM;\n\t\t    else if ((flag & 7) != P_PM && (flag & 7) != P_SESSION && ckWARN(WARN_EXEC))\n\t\t\tPerl_warner(aTHX_ packWARN(WARN_EXEC), \"Starting PM process with flag=%d, mytype=%d\",\n\t\t\t     flag, os2_mytype);\n\t\t}\n\t    }\n\t    break;\n\t    case FAPPTYP_NOTWINDOWCOMPAT: \n\t    {\n\t\tif (os2_mytype != 0) {\t/* not full screen */\n\t\t    if (flag == P_NOWAIT)\n\t\t\tflag = P_SESSION;\n\t\t    else if ((flag & 7) != P_SESSION && ckWARN(WARN_EXEC))\n\t\t\tPerl_warner(aTHX_ packWARN(WARN_EXEC), \"Starting Full Screen process with flag=%d, mytype=%d\",\n\t\t\t     flag, os2_mytype);\n\t\t}\n\t    }\n\t    break;\n\t    case FAPPTYP_NOTSPEC: \n\t\t/* Let the shell handle this... */\n\t\tforce_shell = 1;\n\t\tbuf = \"\";\t\t/* Pacify a warning */\n\t\tfile = 0;\t\t/* Pacify a warning */\n\t\tgoto doshell_args;\n\t\tbreak;\n\t    }\n\t}\n\n\tif (addflag) {\n\t    addflag = 0;\n\t    new_stderr = dup(2);\t\t/* Preserve stderr */\n\t    if (new_stderr == -1) {\n\t\tif (errno == EBADF)\n\t\t    nostderr = 1;\n\t\telse {\n\t\t    rc = -1;\n\t\t    goto finish;\n\t\t}\n\t    } else\n\t\tfl_stderr = fcntl(2, F_GETFD);\n\t    rc = dup2(1,2);\n\t    if (rc == -1)\n\t\tgoto finish;\n\t    fcntl(new_stderr, F_SETFD, FD_CLOEXEC);\n\t}\n\n#if 0\n\trc = result(aTHX_ trueflag, spawnvp(flag,real_name,argv));\n#else\n\tif (execf == EXECF_TRUEEXEC)\n\t    rc = execvp(real_name,argv);\n\telse if (execf == EXECF_EXEC)\n\t    rc = spawnvp(trueflag | P_OVERLAY,real_name,argv);\n\telse if (execf == EXECF_SPAWN_NOWAIT)\n\t    rc = spawnvp(flag,real_name,argv);\n        else if (execf == EXECF_SYNC)\n\t    rc = spawnvp(trueflag,real_name,argv);\n        else\t\t\t\t/* EXECF_SPAWN, EXECF_SPAWN_BYFLAG */\n\t    rc = result(aTHX_ trueflag, \n\t\t\tspawnvp(flag,real_name,argv));\n#endif \n\tif (rc < 0 && pass == 1) {\n\t      do_script:\n\t  if (real_name == argv[0]) {\n\t    int err = errno;\n\n\t    if (err == ENOENT || err == ENOEXEC) {\n\t\t/* No such file, or is a script. */\n\t\t/* Try adding script extensions to the file name, and\n\t\t   search on PATH. */\n\t\tchar *scr = find_script(argv[0], TRUE, NULL, 0);\n\n\t\tif (scr) {\n\t\t    char *s = 0, *s1;\n\t\t    SV *scrsv = sv_2mortal(newSVpv(scr, 0));\n\t\t    SV *bufsv = sv_newmortal();\n\n                    Safefree(scr);\n\t\t    scr = SvPV(scrsv, n_a); /* free()ed later */\n\n\t\t    file = PerlIO_open(scr, \"r\");\n\t\t    argv[0] = scr;\n\t\t    if (!file)\n\t\t\tgoto panic_file;\n\n\t\t    buf = sv_gets(bufsv, file, 0 /* No append */);\n\t\t    if (!buf)\n\t\t\tbuf = \"\";\t/* XXX Needed? */\n\t\t    if (!buf[0]) {\t/* Empty... */\n                        struct stat statbuf;\n\t\t\tPerlIO_close(file);\n\t\t\t/* Special case: maybe from -Zexe build, so\n\t\t\t   there is an executable around (contrary to\n\t\t\t   documentation, DosQueryAppType sometimes (?)\n\t\t\t   does not append \".exe\", so we could have\n\t\t\t   reached this place). */\n\t\t\tsv_catpvs(scrsv, \".exe\");\n\t                argv[0] = scr = SvPV(scrsv, n_a);\t/* Reload */\n                        if (PerlLIO_stat(scr,&statbuf) >= 0\n                            && !S_ISDIR(statbuf.st_mode)) {\t/* Found */\n\t\t\t\treal_name = scr;\n\t\t\t\tpass++;\n\t\t\t\tgoto reread;\n\t\t\t} else {\t\t/* Restore */\n\t\t\t\tSvCUR_set(scrsv, SvCUR(scrsv) - 4);\n\t\t\t\t*SvEND(scrsv) = 0;\n\t\t\t}\n\t\t    }\n\t\t    if (PerlIO_close(file) != 0) { /* Failure */\n\t\t      panic_file:\n\t\t\tif (ckWARN(WARN_EXEC))\n\t\t\t   Perl_warner(aTHX_ packWARN(WARN_EXEC), \"Error reading \\\"%s\\\": %s\", \n\t\t\t     scr, Strerror(errno));\n\t\t\tbuf = \"\";\t/* Not #! */\n\t\t\tgoto doshell_args;\n\t\t    }\n\t\t    if (buf[0] == '#') {\n\t\t\tif (buf[1] == '!')\n\t\t\t    s = buf + 2;\n\t\t    } else if (buf[0] == 'e') {\n\t\t\tif (strBEGINs(buf, \"extproc\")\n\t\t\t    && isSPACE(buf[7]))\n\t\t\t    s = buf + 8;\n\t\t    } else if (buf[0] == 'E') {\n\t\t\tif (strBEGINs(buf, \"EXTPROC\")\n\t\t\t    && isSPACE(buf[7]))\n\t\t\t    s = buf + 8;\n\t\t    }\n\t\t    if (!s) {\n\t\t\tbuf = \"\";\t/* Not #! */\n\t\t\tgoto doshell_args;\n\t\t    }\n\t\t    \n\t\t    s1 = s;\n\t\t    nargs = 0;\n\t\t    argsp = args;\n\t\t    while (1) {\n\t\t\t/* Do better than pdksh: allow a few args,\n\t\t\t   strip trailing whitespace.  */\n\t\t\twhile (isSPACE(*s))\n\t\t\t    s++;\n\t\t\tif (*s == 0) \n\t\t\t    break;\n\t\t\tif (nargs == 4) {\n\t\t\t    nargs = -1;\n\t\t\t    break;\n\t\t\t}\n\t\t\targs[nargs++] = s;\n\t\t\twhile (*s && !isSPACE(*s))\n\t\t\t    s++;\n\t\t\tif (*s == 0) \n\t\t\t    break;\n\t\t\t*s++ = 0;\n\t\t    }\n\t\t    if (nargs == -1) {\n\t\t\tPerl_warner(aTHX_ packWARN(WARN_EXEC), \"Too many args on %.*s line of \\\"%s\\\"\",\n\t\t\t     s1 - buf, buf, scr);\n\t\t\tnargs = 4;\n\t\t\targsp = fargs;\n\t\t    }\n\t\t    /* Can jump from far, buf/file invalid if force_shell: */\n\t\t  doshell_args:\n\t\t    {\n\t\t\tchar **a = argv;\n\t\t\tconst char *exec_args[2];\n\n\t\t\tif (force_shell \n\t\t\t    || (!buf[0] && file)) { /* File without magic */\n\t\t\t    /* In fact we tried all what pdksh would\n\t\t\t       try.  There is no point in calling\n\t\t\t       pdksh, we may just emulate its logic. */\n\t\t\t    char *shell = getenv(\"EXECSHELL\");\n\t\t\t    char *shell_opt = NULL;\n\n\t\t\t    if (!shell) {\n\t\t\t\tchar *s;\n\n\t\t\t\tshell_opt = \"/c\";\n\t\t\t\tshell = getenv(\"OS2_SHELL\");\n\t\t\t\tif (inicmd) { /* No spaces at start! */\n\t\t\t\t    s = inicmd;\n\t\t\t\t    while (*s && !isSPACE(*s)) {\n\t\t\t\t\tif (*s++ == '/') {\n\t\t\t\t\t    inicmd = NULL; /* Cannot use */\n\t\t\t\t\t    break;\n\t\t\t\t\t}\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\tif (!inicmd) {\n\t\t\t\t    s = argv[0];\n\t\t\t\t    while (*s) { \n\t\t\t\t\t/* Dosish shells will choke on slashes\n\t\t\t\t\t   in paths, fortunately, this is\n\t\t\t\t\t   important for zeroth arg only. */\n\t\t\t\t\tif (*s == '/') \n\t\t\t\t\t    *s = '\\\\';\n\t\t\t\t\ts++;\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t    }\n\t\t\t    /* If EXECSHELL is set, we do not set */\n\t\t\t    \n\t\t\t    if (!shell)\n\t\t\t\tshell = ((_emx_env & 0x200)\n\t\t\t\t\t ? \"c:/os2/cmd.exe\"\n\t\t\t\t\t : \"c:/command.com\");\n\t\t\t    nargs = shell_opt ? 2 : 1;\t/* shell file args */\n\t\t\t    exec_args[0] = shell;\n\t\t\t    exec_args[1] = shell_opt;\n\t\t\t    argsp = exec_args;\n\t\t\t    if (nargs == 2 && inicmd) {\n\t\t\t\t/* Use the original cmd line */\n\t\t\t\t/* XXXX This is good only until we refuse\n\t\t\t\t        quoted arguments... */\n\t\t\t\targv[0] = inicmd;\n\t\t\t\targv[1] = NULL;\n\t\t\t    }\n\t\t\t} else if (!buf[0] && inicmd) { /* No file */\n\t\t\t    /* Start with the original cmdline. */\n\t\t\t    /* XXXX This is good only until we refuse\n\t\t\t            quoted arguments... */\n\n\t\t\t    argv[0] = inicmd;\n\t\t\t    argv[1] = NULL;\n\t\t\t    nargs = 2;\t/* shell -c */\n\t\t\t} \n\n\t\t\twhile (a[1])\t\t/* Get to the end */\n\t\t\t    a++;\n\t\t\ta++;\t\t\t/* Copy finil NULL too */\n\t\t\twhile (a >= argv) {\n\t\t\t    *(a + nargs) = *a;\t/* argv was preallocated to be\n\t\t\t\t\t\t   long enough. */\n\t\t\t    a--;\n\t\t\t}\n\t\t\twhile (--nargs >= 0) /* XXXX Discard const... */\n\t\t\t    argv[nargs] = (char*)argsp[nargs];\n\t\t\t/* Enable pathless exec if #! (as pdksh). */\n\t\t\tpass = (buf[0] == '#' ? 2 : 3);\n\t\t\tgoto retry;\n\t\t    }\n\t\t}\n\t\t/* Not found: restore errno */\n\t\terrno = err;\n\t    }\n\t  } else if (errno == ENOEXEC) { /* Cannot transfer `real_name' via shell. */\n\t\tif (rc < 0 && ckWARN(WARN_EXEC))\n\t\t    Perl_warner(aTHX_ packWARN(WARN_EXEC), \"Can't %s script `%s' with ARGV[0] being `%s'\", \n\t\t\t ((execf != EXECF_EXEC && execf != EXECF_TRUEEXEC) \n\t\t\t  ? \"spawn\" : \"exec\"),\n\t\t\t real_name, argv[0]);\n\t\tgoto warned;\n\t  } else if (errno == ENOENT) { /* Cannot transfer `real_name' via shell. */\n\t\tif (rc < 0 && ckWARN(WARN_EXEC))\n\t\t    Perl_warner(aTHX_ packWARN(WARN_EXEC), \"Can't %s `%s' with ARGV[0] being `%s' (looking for executables only, not found)\", \n\t\t\t ((execf != EXECF_EXEC && execf != EXECF_TRUEEXEC) \n\t\t\t  ? \"spawn\" : \"exec\"),\n\t\t\t real_name, argv[0]);\n\t\tgoto warned;\n\t  }\n\t} else if (rc < 0 && pass == 2 && errno == ENOENT) { /* File not found */\n\t    char *no_dir = strrchr(argv[0], '/');\n\n\t    /* Do as pdksh port does: if not found with /, try without\n\t       path. */\n\t    if (no_dir) {\n\t\targv[0] = no_dir + 1;\n\t\tpass++;\n\t\tgoto retry;\n\t    }\n\t}\n\tif (rc < 0 && ckWARN(WARN_EXEC))\n\t    Perl_warner(aTHX_ packWARN(WARN_EXEC), \"Can't %s \\\"%s\\\": %s\\n\", \n\t\t ((execf != EXECF_EXEC && execf != EXECF_TRUEEXEC) \n\t\t  ? \"spawn\" : \"exec\"),\n\t\t real_name, Strerror(errno));\n      warned:\n\tif (rc < 0 && (execf != EXECF_SPAWN_NOWAIT) \n\t    && ((trueflag & 0xFF) == P_WAIT)) \n\t    rc = -1;\n\n  finish:\n    if (new_stderr != -1) {\t/* How can we use error codes? */\n\tdup2(new_stderr, 2);\n\tclose(new_stderr);\n\tfcntl(2, F_SETFD, fl_stderr);\n    } else if (nostderr)\n       close(2);\n    return rc;\n}\n\n/* Try converting 1-arg form to (usually shell-less) multi-arg form. */\nint\ndo_spawn3(pTHX_ char *cmd, int execf, int flag)\n{\n    char **argv, **a;\n    char *s;\n    char *shell, *copt, *news = NULL;\n    int rc, seenspace = 0, mergestderr = 0;\n\n    ENTER;\n#ifdef TRYSHELL\n    if ((shell = getenv(\"EMXSHELL\")) != NULL)\n    \tcopt = \"-c\";\n    else if ((shell = getenv(\"SHELL\")) != NULL)\n    \tcopt = \"-c\";\n    else if ((shell = getenv(\"COMSPEC\")) != NULL)\n    \tcopt = \"/C\";\n    else\n    \tshell = \"cmd.exe\";\n#else\n    /* Consensus on perl5-porters is that it is _very_ important to\n       have a shell which will not change between computers with the\n       same architecture, to avoid \"action on a distance\". \n       And to have simple build, this shell should be sh. */\n    shell = PL_sh_path;\n    copt = \"-c\";\n#endif \n\n    while (*cmd && isSPACE(*cmd))\n\tcmd++;\n\n    if (strBEGINs(cmd,\"/bin/sh\") && isSPACE(cmd[7])) {\n\tSTRLEN l = strlen(PL_sh_path);\n\t\n\tNewx(news, strlen(cmd) - 7 + l + 1, char);\n\tstrcpy(news, PL_sh_path);\n\tstrcpy(news + l, cmd + 7);\n\tcmd = news;\n    }\n\n    /* save an extra exec if possible */\n    /* see if there are shell metacharacters in it */\n\n    if (*cmd == '.' && isSPACE(cmd[1]))\n\tgoto doshell;\n\n    if (strBEGINs(cmd,\"exec\") && isSPACE(cmd[4]))\n\tgoto doshell;\n\n    for (s = cmd; *s && isALPHA(*s); s++) ;\t/* catch VAR=val gizmo */\n    if (*s == '=')\n\tgoto doshell;\n\n    for (s = cmd; *s; s++) {\n\tif (*s != ' ' && !isALPHA(*s) && strchr(\"$&*(){}[]'\\\";\\\\|?<>~`\\n\",*s)) {\n\t    if (*s == '\\n' && s[1] == '\\0') {\n\t\t*s = '\\0';\n\t\tbreak;\n\t    } else if (*s == '\\\\' && !seenspace) {\n\t\tcontinue;\t\t/* Allow backslashes in names */\n\t    } else if (*s == '>' && s >= cmd + 3\n\t\t\t&& s[-1] == '2' && s[1] == '&' && s[2] == '1'\n\t\t\t&& isSPACE(s[-2]) ) {\n\t\tchar *t = s + 3;\n\n\t\twhile (*t && isSPACE(*t))\n\t\t    t++;\n\t\tif (!*t) {\n\t\t    s[-2] = '\\0';\n\t\t    mergestderr = 1;\n\t\t    break;\t\t/* Allow 2>&1 as the last thing */\n\t\t}\n\t    }\n\t    /* We do not convert this to do_spawn_ve since shell\n\t       should be smart enough to start itself gloriously. */\n\t  doshell:\n\t    if (execf == EXECF_TRUEEXEC)\n                rc = execl(shell,shell,copt,cmd,(char*)0);\n\t    else if (execf == EXECF_EXEC)\n                rc = spawnl(P_OVERLAY,shell,shell,copt,cmd,(char*)0);\n\t    else if (execf == EXECF_SPAWN_NOWAIT)\n                rc = spawnl(P_NOWAIT,shell,shell,copt,cmd,(char*)0);\n\t    else if (execf == EXECF_SPAWN_BYFLAG)\n                rc = spawnl(flag,shell,shell,copt,cmd,(char*)0);\n\t    else {\n\t\t/* In the ak code internal P_NOWAIT is P_WAIT ??? */\n\t\tif (execf == EXECF_SYNC)\n\t\t   rc = spawnl(P_WAIT,shell,shell,copt,cmd,(char*)0);\n\t\telse\n\t\t   rc = result(aTHX_ P_WAIT,\n\t\t\t       spawnl(P_NOWAIT,shell,shell,copt,cmd,(char*)0));\n\t\tif (rc < 0 && ckWARN(WARN_EXEC))\n\t\t    Perl_warner(aTHX_ packWARN(WARN_EXEC), \"Can't %s \\\"%s\\\": %s\", \n\t\t\t (execf == EXECF_SPAWN ? \"spawn\" : \"exec\"),\n\t\t\t shell, Strerror(errno));\n\t\tif (rc < 0)\n\t\t    rc = -1;\n\t    }\n\t    if (news)\n\t\tSafefree(news);\n\t    goto leave;\n\t} else if (*s == ' ' || *s == '\\t') {\n\t    seenspace = 1;\n\t}\n    }\n\n    /* cmd=\"a\" may lead to \"sh\", \"-c\", \"\\\"$@\\\"\", \"a\", \"a.cmd\", NULL */\n    Newx(argv, (s - cmd + 11) / 2, char*);\n    SAVEFREEPV(argv);\n    cmd = savepvn(cmd, s-cmd);\n    SAVEFREEPV(cmd);\n    a = argv;\n    for (s = cmd; *s;) {\n\twhile (*s && isSPACE(*s)) s++;\n\tif (*s)\n\t    *(a++) = s;\n\twhile (*s && !isSPACE(*s)) s++;\n\tif (*s)\n\t    *s++ = '\\0';\n    }\n    *a = NULL;\n    if (argv[0])\n\trc = do_spawn_ve(aTHX_ NULL, argv, flag, execf, cmd, mergestderr);\n    else\n    \trc = -1;\n    if (news)\n\tSafefree(news);\nleave:\n    LEAVE;\n    return rc;\n}\n\n#define ASPAWN_WAIT\t0\n#define ASPAWN_EXEC\t1\n#define ASPAWN_NOWAIT\t2\n\n/* Array spawn/exec.  */\nint\nos2_aspawn_4(pTHX_ SV *really, SV **args, I32 cnt, int execing)\n{\n    SV **argp = (SV **)args;\n    SV **last = argp + cnt;\n    char **argv, **a;\n    int rc;\n    int flag = P_WAIT, flag_set = 0;\n    STRLEN n_a;\n\n    ENTER;\n    if (cnt) {\n\tNewx(argv, cnt + 3, char*); /* 3 extra to expand #! */\n\tSAVEFREEPV(argv);\n\ta = argv;\n\n\tif (cnt > 1 && SvNIOKp(*argp) && !SvPOKp(*argp)) {\n\t    flag = SvIVx(*argp);\n\t    flag_set = 1;\n\t} else\n\t    --argp;\n\n\twhile (++argp < last) {\n\t    if (*argp) {\n\t\tchar *arg = SvPVx(*argp, n_a);\n\t\targ = savepv(arg);\n\t\tSAVEFREEPV(arg);\n\t\t*a++ = arg;\n\t    } else\n\t\t*a++ = \"\";\n\t}\n\t*a = NULL;\n\n\tif ( flag_set && (a == argv + 1)\n\t     && !really && execing == ASPAWN_WAIT ) { \t\t/* One arg? */\n\t    rc = do_spawn3(aTHX_ a[-1], EXECF_SPAWN_BYFLAG, flag);\n\t} else {\n\t    const int execf[3] = {EXECF_SPAWN, EXECF_EXEC, EXECF_SPAWN_NOWAIT};\n\t    \n\t    rc = do_spawn_ve(aTHX_ really, argv, flag, execf[execing], NULL, 0);\n\t}\n    } else\n    \trc = -1;\n    LEAVE;\n    return rc;\n}\n\n/* Array spawn.  */\nint\nos2_do_aspawn(pTHX_ SV *really, SV **vmark, SV **vsp)\n{\n    return os2_aspawn_4(aTHX_ really, vmark + 1, vsp - vmark, ASPAWN_WAIT);\n}\n\n/* Array exec.  */\nbool\nPerl_do_aexec(pTHX_ SV* really, SV** vmark, SV** vsp)\n{\n    return os2_aspawn_4(aTHX_ really, vmark + 1, vsp - vmark, ASPAWN_EXEC);\n}\n\nint\nos2_do_spawn(pTHX_ char *cmd)\n{\n    return do_spawn3(aTHX_ cmd, EXECF_SPAWN, 0);\n}\n\nint\ndo_spawn_nowait(pTHX_ char *cmd)\n{\n    return do_spawn3(aTHX_ cmd, EXECF_SPAWN_NOWAIT,0);\n}\n\nbool\nPerl_do_exec(pTHX_ const char *cmd)\n{\n    do_spawn3(aTHX_ cmd, EXECF_EXEC, 0);\n    return FALSE;\n}\n\nbool\nos2exec(pTHX_ char *cmd)\n{\n    return do_spawn3(aTHX_ cmd, EXECF_TRUEEXEC, 0);\n}\n\nPerlIO *\nmy_syspopen4(pTHX_ char *cmd, char *mode, I32 cnt, SV** args)\n{\n#ifndef USE_POPEN\n    int p[2];\n    I32 this, that, newfd;\n    I32 pid;\n    SV *sv;\n    int fh_fl = 0;\t\t\t/* Pacify the warning */\n    \n    /* `this' is what we use in the parent, `that' in the child. */\n    this = (*mode == 'w');\n    that = !this;\n    if (TAINTING_get) {\n\ttaint_env();\n\ttaint_proper(\"Insecure %s%s\", \"EXEC\");\n    }\n    if (pipe(p) < 0)\n\treturn NULL;\n    /* Now we need to spawn the child. */\n    if (p[this] == (*mode == 'r')) {\t/* if fh 0/1 was initially closed. */\n\tint new = dup(p[this]);\n\n\tif (new == -1)\n\t    goto closepipes;\n\tclose(p[this]);\n\tp[this] = new;\n    }\n    newfd = dup(*mode == 'r');\t\t/* Preserve std* */\n    if (newfd == -1) {\t\t\n\t/* This cannot happen due to fh being bad after pipe(), since\n\t   pipe() should have created fh 0 and 1 even if they were\n\t   initially closed.  But we closed p[this] before.  */\n\tif (errno != EBADF) {\n\t  closepipes:\n\t    close(p[0]);\n\t    close(p[1]);\n\t    return NULL;\n\t}\n    } else\n\tfh_fl = fcntl(*mode == 'r', F_GETFD);\n    if (p[that] != (*mode == 'r')) {\t/* if fh 0/1 was initially closed. */\n\tdup2(p[that], *mode == 'r');\n\tclose(p[that]);\n    }\n    /* Where is `this' and newfd now? */\n    fcntl(p[this], F_SETFD, FD_CLOEXEC);\n    if (newfd != -1)\n\tfcntl(newfd, F_SETFD, FD_CLOEXEC);\n    if (cnt) {\t/* Args: \"Real cmd\", before first arg, the last, execing */\n\tpid = os2_aspawn_4(aTHX_ NULL, args, cnt, ASPAWN_NOWAIT);\n    } else\n\tpid = do_spawn_nowait(aTHX_ cmd);\n    if (newfd == -1)\n\tclose(*mode == 'r');\t\t/* It was closed initially */\n    else if (newfd != (*mode == 'r')) {\t/* Probably this check is not needed */\n\tdup2(newfd, *mode == 'r');\t/* Return std* back. */\n\tclose(newfd);\n\tfcntl(*mode == 'r', F_SETFD, fh_fl);\n    } else\n\tfcntl(*mode == 'r', F_SETFD, fh_fl);\n    if (p[that] == (*mode == 'r'))\n\tclose(p[that]);\n    if (pid == -1) {\n\tclose(p[this]);\n\treturn NULL;\n    }\n    if (p[that] < p[this]) {\t\t/* Make fh as small as possible */\n\tdup2(p[this], p[that]);\n\tclose(p[this]);\n\tp[this] = p[that];\n    }\n    sv = *av_fetch(PL_fdpid,p[this],TRUE);\n    (void)SvUPGRADE(sv,SVt_IV);\n    SvIVX(sv) = pid;\n    PL_forkprocess = pid;\n    return PerlIO_fdopen(p[this], mode);\n\n#else  /* USE_POPEN */\n\n    PerlIO *res;\n    SV *sv;\n\n    if (cnt)\n\tPerl_croak(aTHX_ \"List form of piped open not implemented\");\n\n#  ifdef TRYSHELL\n    res = popen(cmd, mode);\n#  else\n    char *shell = getenv(\"EMXSHELL\");\n\n    my_setenv(\"EMXSHELL\", PL_sh_path);\n    res = popen(cmd, mode);\n    my_setenv(\"EMXSHELL\", shell);\n#  endif \n    sv = *av_fetch(PL_fdpid, PerlIO_fileno(res), TRUE);\n    (void)SvUPGRADE(sv,SVt_IV);\n    SvIVX(sv) = -1;\t\t\t/* A cooky. */\n    return res;\n\n#endif /* USE_POPEN */\n\n}\n\nPerlIO *\nmy_syspopen(pTHX_ char *cmd, char *mode)\n{\n    return my_syspopen4(aTHX_ cmd, mode, 0, NULL);\n}\n\n/******************************************************************/\n\n#ifndef HAS_FORK\nint\nfork(void)\n{\n    Perl_croak_nocontext(PL_no_func, \"Unsupported function fork\");\n    errno = EINVAL;\n    return -1;\n}\n#endif\n\n/*******************************************************************/\n/* not implemented in EMX 0.9d */\n\nchar *\tctermid(char *s)\t{ return 0; }\n\n#ifdef MYTTYNAME /* was not in emx0.9a */\nvoid *\tttyname(x)\t{ return 0; }\n#endif\n\n/*****************************************************************************/\n/* not implemented in C Set++ */\n\n#ifndef __EMX__\nint\tsetuid(x)\t{ errno = EINVAL; return -1; }\nint\tsetgid(x)\t{ errno = EINVAL; return -1; }\n#endif\n\n/*****************************************************************************/\n/* stat() hack for char/block device */\n\n#if OS2_STAT_HACK\n\nenum os2_stat_extra {\t/* EMX 0.9d fix 4 defines up to 0100000 */\n  os2_stat_archived\t= 0x1000000,\t/* 0100000000 */\n  os2_stat_hidden\t= 0x2000000,\t/* 0200000000 */\n  os2_stat_system\t= 0x4000000,\t/* 0400000000 */\n  os2_stat_force\t= 0x8000000,\t/* Do not ignore flags on chmod */\n};\n\n#define OS2_STAT_SPECIAL (os2_stat_system | os2_stat_archived | os2_stat_hidden)\n\nstatic void\nmassage_os2_attr(struct stat *st)\n{\n    if ( ((st->st_mode & S_IFMT) != S_IFREG\n\t  && (st->st_mode & S_IFMT) != S_IFDIR)\n         || !(st->st_attr & (FILE_ARCHIVED | FILE_HIDDEN | FILE_SYSTEM)))\n\treturn;\n\n    if ( st->st_attr & FILE_ARCHIVED )\n\tst->st_mode |= (os2_stat_archived | os2_stat_force);\n    if ( st->st_attr & FILE_HIDDEN )\n\tst->st_mode |= (os2_stat_hidden | os2_stat_force);\n    if ( st->st_attr & FILE_SYSTEM )\n\tst->st_mode |= (os2_stat_system | os2_stat_force);\n}\n\n    /* First attempt used DosQueryFSAttach which crashed the system when\n       used with 5.001. Now just look for /dev/. */\nint\nos2_stat(const char *name, struct stat *st)\n{\n    static int ino = SHRT_MAX;\n    STRLEN l = strlen(name);\n\n    if ( ( l < 8 || l > 9) || strnicmp(name, \"/dev/\", 5) != 0\n         || (    stricmp(name + 5, \"con\") != 0\n\t      && stricmp(name + 5, \"tty\") != 0\n\t      && stricmp(name + 5, \"nul\") != 0\n\t      && stricmp(name + 5, \"null\") != 0) ) {\n\tint s = stat(name, st);\n\n\tif (s)\n\t    return s;\n\tmassage_os2_attr(st);\n\treturn 0;\n    }\n\n    memset(st, 0, sizeof *st);\n    st->st_mode = S_IFCHR|0666;\n    MUTEX_LOCK(&perlos2_state_mutex);\n    st->st_ino = (ino-- & 0x7FFF);\n    MUTEX_UNLOCK(&perlos2_state_mutex);\n    st->st_nlink = 1;\n    return 0;\n}\n\nint\nos2_fstat(int handle, struct stat *st)\n{\n    int s = fstat(handle, st);\n\n    if (s)\n\treturn s;\n    massage_os2_attr(st);\n    return 0;\n}\n\n#undef chmod\nint\nos2_chmod (const char *name, int pmode)\t/* Modelled after EMX src/lib/io/chmod.c */\n{\n    int attr, rc;\n\n    if (!(pmode & os2_stat_force))\n\treturn chmod(name, pmode);\n\n    attr = __chmod (name, 0, 0);           /* Get attributes */\n    if (attr < 0)\n\treturn -1;\n    if (pmode & S_IWRITE)\n\tattr &= ~FILE_READONLY;\n    else\n\tattr |= FILE_READONLY;\n    /* New logic */\n    attr &= ~(FILE_ARCHIVED | FILE_HIDDEN | FILE_SYSTEM);\n\n    if ( pmode & os2_stat_archived )\n        attr |= FILE_ARCHIVED;\n    if ( pmode & os2_stat_hidden )\n        attr |= FILE_HIDDEN;\n    if ( pmode & os2_stat_system )\n        attr |= FILE_SYSTEM;\n\n    rc = __chmod (name, 1, attr);\n    if (rc >= 0) rc = 0;\n    return rc;\n}\n\n#endif\n\n#ifdef USE_PERL_SBRK\n\n/* SBRK() emulation, mostly moved to malloc.c. */\n\nvoid *\nsys_alloc(int size) {\n    void *got;\n    APIRET rc = DosAllocMem(&got, size, PAG_COMMIT | PAG_WRITE);\n\n    if (rc == ERROR_NOT_ENOUGH_MEMORY) {\n\treturn (void *) -1;\n    } else if ( rc ) \n\tPerl_croak_nocontext(\"Got an error from DosAllocMem: %li\", (long)rc);\n    return got;\n}\n\n#endif /* USE_PERL_SBRK */\n\n/* tmp path */\n\nconst char *tmppath = TMPPATH1;\n\nvoid\nsettmppath()\n{\n    char *p = getenv(\"TMP\"), *tpath;\n    int len;\n\n    if (!p) p = getenv(\"TEMP\");\n    if (!p) p = getenv(\"TMPDIR\");\n    if (!p) return;\n    len = strlen(p);\n    tpath = (char *)malloc(len + strlen(TMPPATH1) + 2);\n    if (tpath) {\n\tstrcpy(tpath, p);\n\ttpath[len] = '/';\n\tstrcpy(tpath + len + 1, TMPPATH1);\n\ttmppath = tpath;\n    }\n}\n\n#include \"XSUB.h\"\n\nXS(XS_File__Copy_syscopy)\n{\n    dXSARGS;\n    if (items < 2 || items > 3)\n\tPerl_croak_nocontext(\"Usage: File::Copy::syscopy(src,dst,flag=0)\");\n    {\n\tSTRLEN n_a;\n\tchar *\tsrc = (char *)SvPV(ST(0),n_a);\n\tchar *\tdst = (char *)SvPV(ST(1),n_a);\n\tU32\tflag;\n\tint\tRETVAL, rc;\n\tdXSTARG;\n\n\tif (items < 3)\n\t    flag = 0;\n\telse {\n\t    flag = (unsigned long)SvIV(ST(2));\n\t}\n\n\tRETVAL = !CheckOSError(DosCopy(src, dst, flag));\n\tXSprePUSH; PUSHi((IV)RETVAL);\n    }\n    XSRETURN(1);\n}\n\n/* APIRET APIENTRY DosReplaceModule (PCSZ pszOld, PCSZ pszNew, PCSZ pszBackup); */\n\nDeclOSFuncByORD(ULONG,replaceModule,ORD_DosReplaceModule,\n\t\t(char *old, char *new, char *backup), (old, new, backup))\n\nXS(XS_OS2_replaceModule); /* prototype to pass -Wmissing-prototypes */\nXS(XS_OS2_replaceModule)\n{\n    dXSARGS;\n    if (items < 1 || items > 3)\n\tPerl_croak(aTHX_ \"Usage: OS2::replaceModule(target [, source [, backup]])\");\n    {\n\tchar *\ttarget = (char *)SvPV_nolen(ST(0));\n\tchar *\tsource = (items < 2) ? NULL : (char *)SvPV_nolen(ST(1));\n\tchar *\tbackup = (items < 3) ? NULL : (char *)SvPV_nolen(ST(2));\n\n\tif (!replaceModule(target, source, backup))\n\t    croak_with_os2error(\"replaceModule() error\");\n    }\n    XSRETURN_YES;\n}\n\n/* APIRET APIENTRY DosPerfSysCall(ULONG ulCommand, ULONG ulParm1,\n                                  ULONG ulParm2, ULONG ulParm3); */\n\nDeclOSFuncByORD(ULONG,perfSysCall,ORD_DosPerfSysCall,\n\t\t(ULONG ulCommand, ULONG ulParm1, ULONG ulParm2, ULONG ulParm3),\n\t\t(ulCommand, ulParm1, ulParm2, ulParm3))\n\n#ifndef CMD_KI_RDCNT\n#  define CMD_KI_RDCNT\t0x63\n#endif\n#ifndef CMD_KI_GETQTY\n#  define CMD_KI_GETQTY 0x41\n#endif\n#ifndef QSV_NUMPROCESSORS\n#  define QSV_NUMPROCESSORS         26\n#endif\n\ntypedef unsigned long long myCPUUTIL[4];\t/* time/idle/busy/intr */\n\n/*\nNO_OUTPUT ULONG\nperfSysCall(ULONG ulCommand, ULONG ulParm1, ULONG ulParm2, ULONG ulParm3)\n    PREINIT:\n\tULONG rc;\n    POSTCALL:\n\tif (!RETVAL)\n\t    croak_with_os2error(\"perfSysCall() error\");\n */\n\nstatic int\nnumprocessors(void)\n{\n    ULONG res;\n\n    if (DosQuerySysInfo(QSV_NUMPROCESSORS, QSV_NUMPROCESSORS, (PVOID)&res, sizeof(res)))\n\treturn 1;\t\t\t/* Old system? */\n    return res;\n}\n\nXS(XS_OS2_perfSysCall); /* prototype to pass -Wmissing-prototypes */\nXS(XS_OS2_perfSysCall)\n{\n    dXSARGS;\n    if (items < 0 || items > 4)\n\tPerl_croak(aTHX_ \"Usage: OS2::perfSysCall(ulCommand = CMD_KI_RDCNT, ulParm1= 0, ulParm2= 0, ulParm3= 0)\");\n    SP -= items;\n    {\n\tdXSTARG;\n\tULONG RETVAL, ulCommand, ulParm1, ulParm2, ulParm3, res;\n\tmyCPUUTIL u[64];\n\tint total = 0, tot2 = 0;\n\n\tif (items < 1)\n\t    ulCommand = CMD_KI_RDCNT;\n\telse {\n\t    ulCommand = (ULONG)SvUV(ST(0));\n\t}\n\n\tif (items < 2) {\n\t    total = (ulCommand == CMD_KI_RDCNT ? numprocessors() : 0);\n\t    ulParm1 = (total ? (ULONG)u : 0);\n\n\t    if (total > C_ARRAY_LENGTH(u))\n\t\tcroak(\"Unexpected number of processors: %d\", total);\n\t} else {\n\t    ulParm1 = (ULONG)SvUV(ST(1));\n\t}\n\n\tif (items < 3) {\n\t    tot2 = (ulCommand == CMD_KI_GETQTY);\n\t    ulParm2 = (tot2 ? (ULONG)&res : 0);\n\t} else {\n\t    ulParm2 = (ULONG)SvUV(ST(2));\n\t}\n\n\tif (items < 4)\n\t    ulParm3 = 0;\n\telse {\n\t    ulParm3 = (ULONG)SvUV(ST(3));\n\t}\n\n\tRETVAL = perfSysCall(ulCommand, ulParm1, ulParm2, ulParm3);\n\tif (!RETVAL)\n\t    croak_with_os2error(\"perfSysCall() error\");\n\tXSprePUSH;\n\tif (total) {\n\t    int i,j;\n\n\t    if (GIMME_V != G_ARRAY) {\n\t\tPUSHn(u[0][0]);\t\t/* Total ticks on the first processor */\n\t\tXSRETURN(1);\n\t    }\n\t    EXTEND(SP, 4*total);\n\t    for (i=0; i < total; i++)\n\t\tfor (j=0; j < 4; j++)\n\t\t    PUSHs(sv_2mortal(newSVnv(u[i][j])));\n\t    XSRETURN(4*total);\n\t}\n\tif (tot2) {\n\t    PUSHu(res);\n\t    XSRETURN(1);\n\t}\n    }\n    XSRETURN_EMPTY;\n}\n\n#define PERL_PATCHLEVEL_H_IMPLICIT\t/* Do not init local_patches. */\n#include \"patchlevel.h\"\n#undef PERL_PATCHLEVEL_H_IMPLICIT\n\nchar *\nmod2fname(pTHX_ SV *sv)\n{\n    int pos = 6, len, avlen;\n    unsigned int sum = 0;\n    char *s;\n    STRLEN n_a;\n\n    if (!SvROK(sv)) Perl_croak_nocontext(\"Not a reference given to mod2fname\");\n    sv = SvRV(sv);\n    if (SvTYPE(sv) != SVt_PVAV) \n      Perl_croak_nocontext(\"Not array reference given to mod2fname\");\n\n    avlen = av_tindex((AV*)sv);\n    if (avlen < 0) \n      Perl_croak_nocontext(\"Empty array reference given to mod2fname\");\n\n    s = SvPV(*av_fetch((AV*)sv, avlen, FALSE), n_a);\n    strncpy(fname, s, 8);\n    len = strlen(s);\n    if (len < 6) pos = len;\n    while (*s) {\n\tsum = 33 * sum + *(s++);\t/* Checksumming first chars to\n\t\t\t\t\t * get the capitalization into c.s. */\n    }\n    avlen --;\n    while (avlen >= 0) {\n\ts = SvPV(*av_fetch((AV*)sv, avlen, FALSE), n_a);\n\twhile (*s) {\n\t    sum = 33 * sum + *(s++);\t/* 7 is primitive mod 13. */\n\t}\n\tavlen --;\n    }\n   /* We always load modules as *specific* DLLs, and with the full name.\n      When loading a specific DLL by its full name, one cannot get a\n      different DLL, even if a DLL with the same basename is loaded already.\n      Thus there is no need to include the version into the mangling scheme. */\n#if 0\n    sum += PERL_VERSION * 200 + PERL_SUBVERSION * 2;  /* Up to 5.6.1 */\n#else\n#  ifndef COMPATIBLE_VERSION_SUM  /* Binary compatibility with the 5.00553 binary */\n#    define COMPATIBLE_VERSION_SUM (5 * 200 + 53 * 2)\n#  endif\n    sum += COMPATIBLE_VERSION_SUM;\n#endif\n    fname[pos] = 'A' + (sum % 26);\n    fname[pos + 1] = 'A' + (sum / 26 % 26);\n    fname[pos + 2] = '\\0';\n    return (char *)fname;\n}\n\nXS(XS_DynaLoader_mod2fname)\n{\n    dXSARGS;\n    if (items != 1)\n\tPerl_croak_nocontext(\"Usage: DynaLoader::mod2fname(sv)\");\n    {\n\tSV *\tsv = ST(0);\n\tchar *\tRETVAL;\n\tdXSTARG;\n\n\tRETVAL = mod2fname(aTHX_ sv);\n\tsv_setpv(TARG, RETVAL);\n\tXSprePUSH; PUSHTARG;\n    }\n    XSRETURN(1);\n}\n\nchar *\nos2error(int rc)\n{\n\tdTHX;\n\tULONG len;\n\tchar *s;\n\tint number = SvTRUE(get_sv(\"OS2::nsyserror\", GV_ADD));\n\n        if (!(_emx_env & 0x200)) return \"\"; /* Nop if not OS/2. */\n\tif (rc == 0)\n\t\treturn \"\";\n\tif (number) {\n\t    sprintf(os2error_buf, \"SYS%04d=%#x: \", rc, rc);\n\t    s = os2error_buf + strlen(os2error_buf);\n\t} else\n\t    s = os2error_buf;\n\tif (DosGetMessage(NULL, 0, s, sizeof(os2error_buf) - 1 - (s-os2error_buf), \n\t\t\t  rc, \"OSO001.MSG\", &len)) {\n\t    char *name = \"\";\n\n\t    if (!number) {\n\t\tsprintf(os2error_buf, \"SYS%04d=%#x: \", rc, rc);\n\t\ts = os2error_buf + strlen(os2error_buf);\n\t    }\n\t    switch (rc) {\n\t    case PMERR_INVALID_HWND:\n\t\tname = \"PMERR_INVALID_HWND\";\n\t\tbreak;\n\t    case PMERR_INVALID_HMQ:\n\t\tname = \"PMERR_INVALID_HMQ\";\n\t\tbreak;\n\t    case PMERR_CALL_FROM_WRONG_THREAD:\n\t\tname = \"PMERR_CALL_FROM_WRONG_THREAD\";\n\t\tbreak;\n\t    case PMERR_NO_MSG_QUEUE:\n\t\tname = \"PMERR_NO_MSG_QUEUE\";\n\t\tbreak;\n\t    case PMERR_NOT_IN_A_PM_SESSION:\n\t\tname = \"PMERR_NOT_IN_A_PM_SESSION\";\n\t\tbreak;\n\t    case PMERR_INVALID_ATOM:\n\t\tname = \"PMERR_INVALID_ATOM\";\n\t\tbreak;\n\t    case PMERR_INVALID_HATOMTBL:\n\t\tname = \"PMERR_INVALID_HATOMTMB\";\n\t\tbreak;\n\t    case PMERR_INVALID_INTEGER_ATOM:\n\t\tname = \"PMERR_INVALID_INTEGER_ATOM\";\n\t\tbreak;\n\t    case PMERR_INVALID_ATOM_NAME:\n\t\tname = \"PMERR_INVALID_ATOM_NAME\";\n\t\tbreak;\n\t    case PMERR_ATOM_NAME_NOT_FOUND:\n\t\tname = \"PMERR_ATOM_NAME_NOT_FOUND\";\n\t\tbreak;\n\t    }\n\t    sprintf(s, \"%s%s[No description found in OSO001.MSG]\", \n\t\t    name, (*name ? \"=\" : \"\"));\n\t} else {\n\t\ts[len] = '\\0';\n\t\tif (len && s[len - 1] == '\\n')\n\t\t\ts[--len] = 0;\n\t\tif (len && s[len - 1] == '\\r')\n\t\t\ts[--len] = 0;\n\t\tif (len && s[len - 1] == '.')\n\t\t\ts[--len] = 0;\n\t\tif (len >= 10 && number && strnEQ(s, os2error_buf, 7)\n\t\t    && s[7] == ':' && s[8] == ' ')\n\t\t    /* Some messages start with SYSdddd:, some not */\n\t\t    Move(s + 9, s, (len -= 9) + 1, char);\n\t}\n\treturn os2error_buf;\n}\n\nvoid\nResetWinError(void)\n{\n  WinError_2_Perl_rc;\n}\n\nvoid\nCroakWinError(int die, char *name)\n{\n  FillWinError;\n  if (die && Perl_rc)\n    croak_with_os2error(name ? name : \"Win* API call\");\n}\n\nstatic char *\ndllname2buffer(pTHX_ char *buf, STRLEN l)\n{\n    char *o;\n    STRLEN ll;\n    SV *dll = NULL;\n\n    dll = module_name(mod_name_full);\n    o = SvPV(dll, ll);\n    if (ll < l)\n       memcpy(buf,o,ll);\n    SvREFCNT_dec(dll);\n    return (ll >= l ? \"???\" : buf);\n}\n\nstatic char *\nexecname2buffer(char *buf, STRLEN l, char *oname)\n{\n  char *p, *orig = oname, ok = oname != NULL;\n\n  if (_execname(buf, l) != 0) {\n    if (!oname || strlen(oname) >= l)\n      return oname;\n    strcpy(buf, oname);\n    ok = 0;\n  }\n  p = buf;\n  while (*p) {\n    if (*p == '\\\\')\n\t*p = '/';\n    if (*p == '/') {\n\tif (ok && *oname != '/' && *oname != '\\\\')\n\t    ok = 0;\n    } else if (ok && tolower(*oname) != tolower(*p))\n\tok = 0;\t\n    p++;\n    oname++;\n  }\n  if (ok) { /* orig matches the real name.  Use orig: */\n     strcpy(buf, orig);\t\t/* _execname() is always uppercased */\n     p = buf;\n     while (*p) {\n       if (*p == '\\\\')\n           *p = '/';\n       p++;\n     }     \n  }\n  return buf;\n}\n\nchar *\nos2_execname(pTHX)\n{\n  char buf[300], *p = execname2buffer(buf, sizeof buf, PL_origargv[0]);\n\n  p = savepv(p);\n  SAVEFREEPV(p);\n  return p;\n}\n\nint\nPerl_OS2_handler_install(void *handler, enum Perlos2_handler how)\n{\n    char *s, b[300];\n\n    switch (how) {\n      case Perlos2_handler_mangle:\n\tperllib_mangle_installed = (char *(*)(char *s, unsigned int l))handler;\n\treturn 1;\n      case Perlos2_handler_perl_sh:\n\ts = (char *)handler;\n\ts = dir_subst(s, strlen(s), b, sizeof b, 0, \"handler_perl_sh\");\n\tperl_sh_installed = savepv(s);\n\treturn 1;\n      case Perlos2_handler_perllib_from:\n\ts = (char *)handler;\n\ts = dir_subst(s, strlen(s), b, sizeof b, 0, \"handler_perllib_from\");\n\toldl = strlen(s);\n\toldp = savepv(s);\n\treturn 1;\n      case Perlos2_handler_perllib_to:\n\ts = (char *)handler;\n\ts = dir_subst(s, strlen(s), b, sizeof b, 0, \"handler_perllib_to\");\n\tnewl = strlen(s);\n\tnewp = savepv(s);\n\tstrcpy(mangle_ret, newp);\n\ts = mangle_ret - 1;\n\twhile (*++s)\n\t    if (*s == '\\\\')\n\t\t*s = '/';\n\treturn 1;\n      default:\n\treturn 0;\n    }\n}\n\n/* Returns a malloc()ed copy */\nchar *\ndir_subst(char *s, unsigned int l, char *b, unsigned int bl, enum dir_subst_e flags, char *msg)\n{\n    char *from, *to = b, *e = b; /* `to' assignment: shut down the warning */\n    STRLEN froml = 0, tol = 0, rest = 0;\t/* froml: likewise */\n\n    if (l >= 2 && s[0] == '~') {\n\tswitch (s[1]) {\n\t  case 'i': case 'I':\n\t    from = \"installprefix\";\tbreak;\n\t  case 'd': case 'D':\n\t    from = \"dll\";\t\tbreak;\n\t  case 'e': case 'E':\n\t    from = \"exe\";\t\tbreak;\n\t  default:\n\t    from = NULL;\n\t    froml = l + 1;\t\t\t/* Will not match */\n\t    break;\n\t}\n\tif (from)\n\t    froml = strlen(from) + 1;\n\tif (l >= froml && strnicmp(s + 2, from + 1, froml - 2) == 0) {\n\t    int strip = 1;\n\n\t    switch (s[1]) {\n\t      case 'i': case 'I':\n\t\tstrip = 0;\n\t\ttol = strlen(INSTALL_PREFIX);\n\t\tif (tol >= bl) {\n\t\t    if (flags & dir_subst_fatal)\n\t\t\tPerl_croak_nocontext(\"INSTALL_PREFIX too long: `%s'\", INSTALL_PREFIX);\n\t\t    else\n\t\t\treturn NULL;\n\t\t}\n\t\tmemcpy(b, INSTALL_PREFIX, tol + 1);\n\t\tto = b;\n\t\te = b + tol;\n\t\tbreak;\n\t      case 'd': case 'D':\n\t\tif (flags & dir_subst_fatal) {\n\t\t    dTHX;\n\n\t\t    to = dllname2buffer(aTHX_ b, bl);\n\t\t} else {\t\t\t\t/* No Perl present yet */\n\t\t    HMODULE self = find_myself();\n\t\t    APIRET rc = DosQueryModuleName(self, bl, b);\n\n\t\t    if (rc)\n\t\t\treturn 0;\n\t\t    to = b - 1;\n\t\t    while (*++to)\n\t\t\tif (*to == '\\\\')\n\t\t\t    *to = '/';\n\t\t    to = b;\n\t\t}\n\t\tbreak;\n\t      case 'e': case 'E':\n\t\tif (flags & dir_subst_fatal) {\n\t\t    dTHX;\n\n\t\t    to = execname2buffer(b, bl, PL_origargv[0]);\n\t        } else\n\t\t    to = execname2buffer(b, bl, NULL);\n\t\tbreak;\n\t    }\n\t    if (!to)\n\t\treturn NULL;\n\t    if (strip) {\n\t\te = strrchr(to, '/');\n\t\tif (!e && (flags & dir_subst_fatal))\n\t\t    Perl_croak_nocontext(\"%s: Can't parse EXE/DLL name: '%s'\", msg, to);\n\t\telse if (!e)\n\t\t    return NULL;\n\t\t*e = 0;\n\t    }\n\t    s += froml; l -= froml;\n\t    if (!l)\n\t\treturn to;\n\t    if (!tol)\n\t\ttol = strlen(to);\n\n\t    while (l >= 3 && (s[0] == '/' || s[0] == '\\\\')\n\t\t   && s[1] == '.' && s[2] == '.'\n\t\t   && (l == 3 || s[3] == '/' || s[3] == '\\\\' || s[3] == ';')) {\n\t\te = strrchr(b, '/');\n\t\tif (!e && (flags & dir_subst_fatal))\n\t\t\tPerl_croak_nocontext(\"%s: Error stripping dirs from EXE/DLL/INSTALLDIR name\", msg);\n\t\telse if (!e)\n\t\t\treturn NULL;\n\t\t*e = 0;\n\t\tl -= 3; s += 3;\n\t    }\n\t    if (l && s[0] != '/' && s[0] != '\\\\' && s[0] != ';')\n\t\t*e++ = '/';\n\t}\n    }\t\t\t\t\t\t/* Else: copy as is */\n    if (l && (flags & dir_subst_pathlike)) {\n\tSTRLEN i = 0;\n\n\twhile ( i < l - 2 && s[i] != ';')\t/* May have ~char after `;' */\n\t    i++;\n\tif (i < l - 2) {\t\t\t/* Found */\n\t    rest = l - i - 1;\n\t    l = i + 1;\n\t}\n    }\n    if (e + l >= b + bl) {\n\tif (flags & dir_subst_fatal)\n\t    Perl_croak_nocontext(\"%s: name `%s%s' too long\", msg, b, s);\n\telse\n\t    return NULL;\n    }\n    memcpy(e, s, l);\n    if (rest) {\n\te = dir_subst(s + l, rest, e + l, bl - (e + l - b), flags, msg);\n\treturn e ? b : e;\n    }\n    e[l] = 0;\n    return b;\n}\n\nchar *\nperllib_mangle_with(char *s, unsigned int l, char *from, unsigned int froml, char *to, unsigned int tol)\n{\n    if (!to)\n\treturn s;\n    if (l == 0)\n\tl = strlen(s);\n    if (l < froml || strnicmp(from, s, froml) != 0)\n\treturn s;\n    if (l + tol - froml > STATIC_FILE_LENGTH || tol > STATIC_FILE_LENGTH)\n\tPerl_croak_nocontext(\"Malformed PERLLIB_PREFIX\");\n    if (to && to != mangle_ret)\n\tmemcpy(mangle_ret, to, tol);\n    strcpy(mangle_ret + tol, s + froml);\n    return mangle_ret;\n}\n\nchar *\nperllib_mangle(char *s, unsigned int l)\n{\n    char *name;\n\n    if (perllib_mangle_installed && (name = perllib_mangle_installed(s,l)))\n\treturn name;\n    if (!newp && !notfound) {\n\tnewp = getenv(name = \"PERLLIB_\" STRINGIFY(PERL_REVISION)\n\t\t      STRINGIFY(PERL_VERSION) STRINGIFY(PERL_SUBVERSION)\n\t\t      \"_PREFIX\");\n\tif (!newp)\n\t    newp = getenv(name = \"PERLLIB_\" STRINGIFY(PERL_REVISION)\n\t\t\t  STRINGIFY(PERL_VERSION) \"_PREFIX\");\n\tif (!newp)\n\t    newp = getenv(name = \"PERLLIB_\" STRINGIFY(PERL_REVISION) \"_PREFIX\");\n\tif (!newp)\n\t    newp = getenv(name = \"PERLLIB_PREFIX\");\n\tif (newp) {\n\t    char *s, b[300];\n\t    \n\t    oldp = newp;\n\t    while (*newp && !isSPACE(*newp) && *newp != ';')\n\t\tnewp++;\t\t\t/* Skip old name. */\n\t    oldl = newp - oldp;\n\t    s = dir_subst(oldp, oldl, b, sizeof b, dir_subst_fatal, name);\n\t    oldp = savepv(s);\n\t    oldl = strlen(s);\n\t    while (*newp && (isSPACE(*newp) || *newp == ';'))\n\t\tnewp++;\t\t\t/* Skip whitespace. */\n\t    Perl_OS2_handler_install((void *)newp, Perlos2_handler_perllib_to);\n\t    if (newl == 0 || oldl == 0)\n\t\tPerl_croak_nocontext(\"Malformed %s\", name);\n\t} else\n\t    notfound = 1;\n    }\n    if (!newp)\n\treturn s;\n    if (l == 0)\n\tl = strlen(s);\n    if (l < oldl || strnicmp(oldp, s, oldl) != 0)\n\treturn s;\n    if (l + newl - oldl > STATIC_FILE_LENGTH || newl > STATIC_FILE_LENGTH)\n\tPerl_croak_nocontext(\"Malformed PERLLIB_PREFIX\");\n    strcpy(mangle_ret + newl, s + oldl);\n    return mangle_ret;\n}\n\nunsigned long \nPerl_hab_GET()\t\t\t/* Needed if perl.h cannot be included */\n{\n    return perl_hab_GET();\n}\n\nstatic void\nCreate_HMQ(int serve, char *message)\t/* Assumes morphing */\n{\n    unsigned fpflag = _control87(0,0);\n\n    init_PMWIN_entries();\n    /* 64 messages if before OS/2 3.0, ignored otherwise */\n    Perl_hmq = (*PMWIN_entries.CreateMsgQueue)(perl_hab_GET(), 64);\n    if (!Perl_hmq) {\n\tdTHX;\n\n\tSAVEINT(rmq_cnt);\t\t/* Allow catch()ing. */\n\tif (rmq_cnt++)\n\t    _exit(188);\t\t/* Panic can try to create a window. */\n\tCroakWinError(1, message ? message : \"Cannot create a message queue\");\n    }\n    if (serve != -1)\n\t(*PMWIN_entries.CancelShutdown)(Perl_hmq, !serve);\n    /* We may have loaded some modules */\n    _control87(fpflag, MCW_EM); /* Some modules reset FP flags on (un)load */\n}\n\n#define REGISTERMQ_WILL_SERVE\t\t1\n#define REGISTERMQ_IMEDIATE_UNMORPH\t2\n\nHMQ\nPerl_Register_MQ(int serve)\n{\n  if (Perl_hmq_refcnt <= 0) {\n    PPIB pib;\n    PTIB tib;\n\n    Perl_hmq_refcnt = 0;\t\t/* Be extra safe */\n    DosGetInfoBlocks(&tib, &pib);\n    if (!Perl_morph_refcnt) {    \n\tPerl_os2_initial_mode = pib->pib_ultype;\n\t/* Try morphing into a PM application. */\n\tif (pib->pib_ultype != 3)\t\t/* 2 is VIO */\n\t    pib->pib_ultype = 3;\t\t/* 3 is PM */\t\n    }\n    Create_HMQ(-1,\t\t\t/* We do CancelShutdown ourselves */\n\t       \"Cannot create a message queue, or morph to a PM application\");\n    if ((serve & REGISTERMQ_IMEDIATE_UNMORPH)) {\n\tif (!Perl_morph_refcnt && Perl_os2_initial_mode != 3)\n\t    pib->pib_ultype = Perl_os2_initial_mode;\n    }\n  }\n    if (serve & REGISTERMQ_WILL_SERVE) {\n\tif ( Perl_hmq_servers <= 0\t/* Safe to inform us on shutdown, */\n\t     && Perl_hmq_refcnt > 0 )\t/* this was switched off before... */\n\t    (*PMWIN_entries.CancelShutdown)(Perl_hmq, 0);\n\tPerl_hmq_servers++;\n    } else if (!Perl_hmq_servers)\t/* Do not inform us on shutdown */\n\t(*PMWIN_entries.CancelShutdown)(Perl_hmq, 1);\n    Perl_hmq_refcnt++;\n    if (!(serve & REGISTERMQ_IMEDIATE_UNMORPH))\n\tPerl_morph_refcnt++;\n    return Perl_hmq;\n}\n\nint\nPerl_Serve_Messages(int force)\n{\n    int cnt = 0;\n    QMSG msg;\n\n    if (Perl_hmq_servers > 0 && !force)\n\treturn 0;\n    if (Perl_hmq_refcnt <= 0)\n\tPerl_croak_nocontext(\"No message queue\");\n    while ((*PMWIN_entries.PeekMsg)(Perl_hab, &msg, NULLHANDLE, 0, 0, PM_REMOVE)) {\n\tcnt++;\n\tif (msg.msg == WM_QUIT)\n\t    Perl_croak_nocontext(\"QUITing...\");\n\t(*PMWIN_entries.DispatchMsg)(Perl_hab, &msg);\n    }\n    return cnt;\n}\n\nint\nPerl_Process_Messages(int force, I32 *cntp)\n{\n    QMSG msg;\n\n    if (Perl_hmq_servers > 0 && !force)\n\treturn 0;\n    if (Perl_hmq_refcnt <= 0)\n\tPerl_croak_nocontext(\"No message queue\");\n    while ((*PMWIN_entries.GetMsg)(Perl_hab, &msg, NULLHANDLE, 0, 0)) {\n\tif (cntp)\n\t    (*cntp)++;\n\t(*PMWIN_entries.DispatchMsg)(Perl_hab, &msg);\n\tif (msg.msg == WM_DESTROY)\n\t    return -1;\n\tif (msg.msg == WM_CREATE)\n\t    return +1;\n    }\n    Perl_croak_nocontext(\"QUITing...\");\n}\n\nvoid\nPerl_Deregister_MQ(int serve)\n{\n    if (serve & REGISTERMQ_WILL_SERVE)\n\tPerl_hmq_servers--;\n\n    if (--Perl_hmq_refcnt <= 0) {\n\tunsigned fpflag = _control87(0,0);\n\n\tinit_PMWIN_entries();\t\t\t/* To be extra safe */\n\t(*PMWIN_entries.DestroyMsgQueue)(Perl_hmq);\n\tPerl_hmq = 0;\n\t/* We may have (un)loaded some modules */\n\t_control87(fpflag, MCW_EM); /* Some modules reset FP flags on (un)load */\n    } else if ((serve & REGISTERMQ_WILL_SERVE) && Perl_hmq_servers <= 0)\n\t(*PMWIN_entries.CancelShutdown)(Perl_hmq, 1); /* Last server exited */\n    if (!(serve & REGISTERMQ_IMEDIATE_UNMORPH) && (--Perl_morph_refcnt <= 0)) {\n\t/* Try morphing back from a PM application. */\n\tPPIB pib;\n\tPTIB tib;\n\n\tDosGetInfoBlocks(&tib, &pib);\n\tif (pib->pib_ultype == 3)\t\t/* 3 is PM */\n\t    pib->pib_ultype = Perl_os2_initial_mode;\n\telse\n\t    Perl_warn_nocontext(\"Unexpected program mode %d when morphing back from PM\",\n\t\t\t\tpib->pib_ultype);\n    }\n}\n\n#define sys_is_absolute(path) ( isALPHA((path)[0]) && (path)[1] == ':' \\\n\t\t\t\t&& ((path)[2] == '/' || (path)[2] == '\\\\'))\n#define sys_is_rooted _fnisabs\n#define sys_is_relative _fnisrel\n#define current_drive _getdrive\n\n#undef chdir\t\t\t\t/* Was _chdir2. */\n#define sys_chdir(p) (chdir(p) == 0)\n#define change_drive(d) (_chdrive(d), (current_drive() == toupper(d)))\n\nXS(XS_OS2_Error)\n{\n    dXSARGS;\n    if (items != 2)\n\tPerl_croak_nocontext(\"Usage: OS2::Error(harderr, exception)\");\n    {\n\tint\targ1 = SvIV(ST(0));\n\tint\targ2 = SvIV(ST(1));\n\tint\ta = ((arg1 ? FERR_ENABLEHARDERR : FERR_DISABLEHARDERR)\n\t\t     | (arg2 ? FERR_ENABLEEXCEPTION : FERR_DISABLEEXCEPTION));\n\tint\tRETVAL = ((arg1 ? 1 : 0) | (arg2 ? 2 : 0));\n\tunsigned long rc;\n\n\tif (CheckOSError(DosError(a)))\n\t    Perl_croak_nocontext(\"DosError(%d) failed: %s\", a, os2error(Perl_rc));\n\tST(0) = sv_newmortal();\n\tif (DOS_harderr_state >= 0)\n\t    sv_setiv(ST(0), DOS_harderr_state);\n\tDOS_harderr_state = RETVAL;\n    }\n    XSRETURN(1);\n}\n\nXS(XS_OS2_Errors2Drive)\n{\n    dXSARGS;\n    if (items != 1)\n\tPerl_croak_nocontext(\"Usage: OS2::Errors2Drive(drive)\");\n    {\n\tSTRLEN n_a;\n\tSV  *sv = ST(0);\n\tint\tsuppress = SvOK(sv);\n\tchar\t*s = suppress ? SvPV(sv, n_a) : NULL;\n\tchar\tdrive = (s ? *s : 0);\n\tunsigned long rc;\n\n\tif (suppress && !isALPHA(drive))\n\t    Perl_croak_nocontext(\"Non-char argument '%c' to OS2::Errors2Drive()\", drive);\n\tif (CheckOSError(DosSuppressPopUps((suppress\n\t\t\t\t\t    ? SPU_ENABLESUPPRESSION \n\t\t\t\t\t    : SPU_DISABLESUPPRESSION),\n\t\t\t\t\t   drive)))\n\t    Perl_croak_nocontext(\"DosSuppressPopUps(%c) failed: %s\", drive,\n\t\t\t\t os2error(Perl_rc));\n\tST(0) = sv_newmortal();\n\tif (DOS_suppression_state > 0)\n\t    sv_setpvn(ST(0), &DOS_suppression_state, 1);\n\telse if (DOS_suppression_state == 0)\n            SvPVCLEAR(ST(0));\n\tDOS_suppression_state = drive;\n    }\n    XSRETURN(1);\n}\n\nint\nasync_mssleep(ULONG ms, int switch_priority) {\n  /* This is similar to DosSleep(), but has 8ms granularity in time-critical\n     threads even on Warp3. */\n  HEV     hevEvent1     = 0;\t\t\t/* Event semaphore handle    */\n  HTIMER  htimerEvent1  = 0;\t\t\t/* Timer handle              */\n  APIRET  rc            = NO_ERROR;\t\t/* Return code               */\n  int ret = 1;\n  ULONG priority = 0, nesting;\t\t\t/* Shut down the warnings */\n  PPIB pib;\n  PTIB tib;\n  char *e = NULL;\n  APIRET badrc;\n\n  if (!(_emx_env & 0x200))\t/* DOS */\n    return !_sleep2(ms);\n\n  os2cp_croak(DosCreateEventSem(NULL,\t     /* Unnamed */\n\t\t\t\t&hevEvent1,  /* Handle of semaphore returned */\n\t\t\t\tDC_SEM_SHARED, /* Shared needed for DosAsyncTimer */\n\t\t\t\tFALSE),      /* Semaphore is in RESET state  */\n\t      \"DosCreateEventSem\");\n\n  if (ms >= switch_priority)\n    switch_priority = 0;\n  if (switch_priority) {\n    if (CheckOSError(DosGetInfoBlocks(&tib, &pib))) \n\tswitch_priority = 0;\n    else {\n\t/* In Warp3, to switch scheduling to 8ms step, one needs to do \n\t   DosAsyncTimer() in time-critical thread.  On laters versions,\n\t   more and more cases of wait-for-something are covered.\n\n\t   It turns out that on Warp3fp42 it is the priority at the time\n\t   of DosAsyncTimer() which matters.  Let's hope that this works\n\t   with later versions too...\t\tXXXX\n\t */\n\tpriority = (tib->tib_ptib2->tib2_ulpri);\n\tif ((priority & 0xFF00) == 0x0300) /* already time-critical */\n\t    switch_priority = 0;\n\t/* Make us time-critical.  Just modifying TIB is not enough... */\n\t/* tib->tib_ptib2->tib2_ulpri = 0x0300;*/\n\t/* We do not want to run at high priority if a signal causes us\n\t   to longjmp() out of this section... */\n\tif (DosEnterMustComplete(&nesting))\n\t    switch_priority = 0;\n\telse\n\t    DosSetPriority(PRTYS_THREAD, PRTYC_TIMECRITICAL, 0, 0);\n    }\n  }\n\n  if ((badrc = DosAsyncTimer(ms,\n\t\t\t     (HSEM) hevEvent1,\t/* Semaphore to post        */\n\t\t\t     &htimerEvent1)))\t/* Timer handler (returned) */\n     e = \"DosAsyncTimer\";\n\n  if (switch_priority && tib->tib_ptib2->tib2_ulpri == 0x0300) {\n\t/* Nobody switched priority while we slept...  Ignore errors... */\n\t/* tib->tib_ptib2->tib2_ulpri = priority; */\t/* Get back... */\n\tif (!(rc = DosSetPriority(PRTYS_THREAD, (priority>>8) & 0xFF, 0, 0)))\n\t    rc = DosSetPriority(PRTYS_THREAD, 0, priority & 0xFF, 0);\n  }\n  if (switch_priority)\n      rc = DosExitMustComplete(&nesting);\t/* Ignore errors */\n\n  /* The actual blocking call is made with \"normal\" priority.  This way we\n     should not bother with DosSleep(0) etc. to compensate for us interrupting\n     higher-priority threads.  The goal is to prohibit the system spending too\n     much time halt()ing, not to run us \"no matter what\". */\n  if (!e)\t\t\t\t\t/* Wait for AsyncTimer event */\n      badrc = DosWaitEventSem(hevEvent1, SEM_INDEFINITE_WAIT);\n\n  if (e) ;\t\t\t\t/* Do nothing */\n  else if (badrc == ERROR_INTERRUPT)\n     ret = 0;\n  else if (badrc)\n     e = \"DosWaitEventSem\";\n  if ((rc = DosCloseEventSem(hevEvent1)) && !e) { /* Get rid of semaphore */\n     e = \"DosCloseEventSem\";\n     badrc = rc;\n  }\n  if (e)\n     os2cp_croak(badrc, e);\n  return ret;\n}\n\nXS(XS_OS2_ms_sleep)\t\t/* for testing only... */\n{\n    dXSARGS;\n    ULONG ms, lim;\n\n    if (items > 2 || items < 1)\n\tPerl_croak_nocontext(\"Usage: OS2::ms_sleep(wait_ms [, high_priority_limit])\");\n    ms = SvUV(ST(0));\n    lim = items > 1 ? SvUV(ST(1)) : ms + 1;\n    async_mssleep(ms, lim);\n    XSRETURN_YES;\n}\n\nULONG (*pDosTmrQueryFreq) (PULONG);\nULONG (*pDosTmrQueryTime) (unsigned long long *);\n\nXS(XS_OS2_Timer)\n{\n    dXSARGS;\n    static ULONG freq;\n    unsigned long long count;\n    ULONG rc;\n\n    if (items != 0)\n\tPerl_croak_nocontext(\"Usage: OS2::Timer()\");\n    if (!freq) {\n\t*(PFN*)&pDosTmrQueryFreq = loadByOrdinal(ORD_DosTmrQueryFreq, 0);\n\t*(PFN*)&pDosTmrQueryTime = loadByOrdinal(ORD_DosTmrQueryTime, 0);\n\tMUTEX_LOCK(&perlos2_state_mutex);\n\tif (!freq)\n\t    if (CheckOSError(pDosTmrQueryFreq(&freq)))\n\t\tcroak_with_os2error(\"DosTmrQueryFreq\");\n\tMUTEX_UNLOCK(&perlos2_state_mutex);\n    }\n    if (CheckOSError(pDosTmrQueryTime(&count)))\n\tcroak_with_os2error(\"DosTmrQueryTime\");\n    {    \n\tdXSTARG;\n\n\tXSprePUSH; PUSHn(((NV)count)/freq);\n    }\n    XSRETURN(1);\n}\n\nXS(XS_OS2_msCounter)\n{\n    dXSARGS;\n\n    if (items != 0)\n\tPerl_croak_nocontext(\"Usage: OS2::msCounter()\");\n    {    \n\tdXSTARG;\n\n\tXSprePUSH; PUSHu(msCounter());\n    }\n    XSRETURN(1);\n}\n\nXS(XS_OS2__InfoTable)\n{\n    dXSARGS;\n    int is_local = 0;\n\n    if (items > 1)\n\tPerl_croak_nocontext(\"Usage: OS2::_infoTable([isLocal])\");\n    if (items == 1)\n\tis_local = (int)SvIV(ST(0));\n    {    \n\tdXSTARG;\n\n\tXSprePUSH; PUSHu(InfoTable(is_local));\n    }\n    XSRETURN(1);\n}\n\nstatic const char * const dc_fields[] = {\n  \"FAMILY\",\n  \"IO_CAPS\",\n  \"TECHNOLOGY\",\n  \"DRIVER_VERSION\",\n  \"WIDTH\",\n  \"HEIGHT\",\n  \"WIDTH_IN_CHARS\",\n  \"HEIGHT_IN_CHARS\",\n  \"HORIZONTAL_RESOLUTION\",\n  \"VERTICAL_RESOLUTION\",\n  \"CHAR_WIDTH\",\n  \"CHAR_HEIGHT\",\n  \"SMALL_CHAR_WIDTH\",\n  \"SMALL_CHAR_HEIGHT\",\n  \"COLORS\",\n  \"COLOR_PLANES\",\n  \"COLOR_BITCOUNT\",\n  \"COLOR_TABLE_SUPPORT\",\n  \"MOUSE_BUTTONS\",\n  \"FOREGROUND_MIX_SUPPORT\",\n  \"BACKGROUND_MIX_SUPPORT\",\n  \"VIO_LOADABLE_FONTS\",\n  \"WINDOW_BYTE_ALIGNMENT\",\n  \"BITMAP_FORMATS\",\n  \"RASTER_CAPS\",\n  \"MARKER_HEIGHT\",\n  \"MARKER_WIDTH\",\n  \"DEVICE_FONTS\",\n  \"GRAPHICS_SUBSET\",\n  \"GRAPHICS_VERSION\",\n  \"GRAPHICS_VECTOR_SUBSET\",\n  \"DEVICE_WINDOWING\",\n  \"ADDITIONAL_GRAPHICS\",\n  \"PHYS_COLORS\",\n  \"COLOR_INDEX\",\n  \"GRAPHICS_CHAR_WIDTH\",\n  \"GRAPHICS_CHAR_HEIGHT\",\n  \"HORIZONTAL_FONT_RES\",\n  \"VERTICAL_FONT_RES\",\n  \"DEVICE_FONT_SIM\",\n  \"LINEWIDTH_THICK\",\n  \"DEVICE_POLYSET_POINTS\",\n};\n\nenum {\n    DevCap_dc, DevCap_hwnd\n};\n\nHDC (*pWinOpenWindowDC) (HWND hwnd);\nHMF (*pDevCloseDC) (HDC hdc);\nHDC (*pDevOpenDC) (HAB hab, LONG lType, PCSZ pszToken, LONG lCount,\n    PDEVOPENDATA pdopData, HDC hdcComp);\nBOOL (*pDevQueryCaps) (HDC hdc, LONG lStart, LONG lCount, PLONG alArray);\n\n\nXS(XS_OS2_DevCap)\n{\n    dXSARGS;\n    if (items > 2)\n\tPerl_croak_nocontext(\"Usage: OS2::DevCap()\");\n    {\n\t/* Device Capabilities Data Buffer (10 extra w.r.t. Warp 4.5) */\n\tLONG   si[CAPS_DEVICE_POLYSET_POINTS - CAPS_FAMILY + 1];\n\tint i = 0, j = 0, how = DevCap_dc;\n\tHDC hScreenDC;\n\tDEVOPENSTRUC doStruc= {0L, (PSZ)\"DISPLAY\", NULL, 0L, 0L, 0L, 0L, 0L, 0L};\n\tULONG rc1 = NO_ERROR;\n\tHWND hwnd;\n\tstatic volatile int devcap_loaded;\n\n\tif (!devcap_loaded) {\n\t    *(PFN*)&pWinOpenWindowDC = loadByOrdinal(ORD_WinOpenWindowDC, 0);\n\t    *(PFN*)&pDevOpenDC = loadByOrdinal(ORD_DevOpenDC, 0);\n\t    *(PFN*)&pDevCloseDC = loadByOrdinal(ORD_DevCloseDC, 0);\n\t    *(PFN*)&pDevQueryCaps = loadByOrdinal(ORD_DevQueryCaps, 0);\n\t    devcap_loaded = 1;\n\t}\n\n\tif (items >= 2)\n\t    how = SvIV(ST(1));\n\tif (!items) {\t\t\t/* Get device contents from PM */\n\t    hScreenDC = pDevOpenDC(perl_hab_GET(), OD_MEMORY, (PSZ)\"*\", 0,\n\t\t\t\t  (PDEVOPENDATA)&doStruc, NULLHANDLE);\n\t    if (CheckWinError(hScreenDC))\n\t\tcroak_with_os2error(\"DevOpenDC() failed\");\n\t} else if (how == DevCap_dc)\n\t    hScreenDC = (HDC)SvIV(ST(0));\n\telse {\t\t\t\t/* DevCap_hwnd */\n\t    if (!Perl_hmq)\n\t\tPerl_croak(aTHX_ \"Getting a window's device context without a message queue would lock PM\");\n\t    hwnd = (HWND)SvIV(ST(0));\n\t    hScreenDC = pWinOpenWindowDC(hwnd); /* No need to DevCloseDC() */\n\t    if (CheckWinError(hScreenDC))\n\t\tcroak_with_os2error(\"WinOpenWindowDC() failed\");\n\t}\n\tif (CheckWinError(pDevQueryCaps(hScreenDC,\n\t\t\t\t\tCAPS_FAMILY, /* W3 documented caps */\n\t\t\t\t\tCAPS_DEVICE_POLYSET_POINTS\n\t\t\t\t\t  - CAPS_FAMILY + 1,\n\t\t\t\t\tsi)))\n\t    rc1 = Perl_rc;\n\telse {\n\t    EXTEND(SP,2*(CAPS_DEVICE_POLYSET_POINTS - CAPS_FAMILY + 1));\n\t    while (i < CAPS_DEVICE_POLYSET_POINTS - CAPS_FAMILY + 1) {\n\t\tST(j) = sv_newmortal();\n\t\tsv_setpv(ST(j++), dc_fields[i]);\n\t\tST(j) = sv_newmortal();\n\t\tsv_setiv(ST(j++), si[i]);\n\t\ti++;\n\t    }\n\t    i = CAPS_DEVICE_POLYSET_POINTS + 1;\n\t    while (i < CAPS_DEVICE_POLYSET_POINTS + 11) { /* Just in case... */\n\t\tLONG l;\n\n\t\tif (CheckWinError(pDevQueryCaps(hScreenDC, i, 1, &l)))\n\t\t    break;\n\t\tEXTEND(SP, j + 2);\n\t\tST(j) = sv_newmortal();\n\t\tsv_setiv(ST(j++), i);\n\t\tST(j) = sv_newmortal();\n\t\tsv_setiv(ST(j++), l);\n\t\ti++;\n\t    }\t    \n\t}\n\tif (!items && CheckWinError(pDevCloseDC(hScreenDC)))\n\t    Perl_warn_nocontext(\"DevCloseDC() failed: %s\", os2error(Perl_rc));\n\tif (rc1)\n\t    Perl_rc = rc1, croak_with_os2error(\"DevQueryCaps() failed\");\n\tXSRETURN(j);\n    }\n}\n\nLONG (*pWinQuerySysValue) (HWND hwndDesktop, LONG iSysValue);\nBOOL (*pWinSetSysValue) (HWND hwndDesktop, LONG iSysValue, LONG lValue);\n\nconst char * const sv_keys[] = {\n  \"SWAPBUTTON\",\n  \"DBLCLKTIME\",\n  \"CXDBLCLK\",\n  \"CYDBLCLK\",\n  \"CXSIZEBORDER\",\n  \"CYSIZEBORDER\",\n  \"ALARM\",\n  \"7\",\n  \"8\",\n  \"CURSORRATE\",\n  \"FIRSTSCROLLRATE\",\n  \"SCROLLRATE\",\n  \"NUMBEREDLISTS\",\n  \"WARNINGFREQ\",\n  \"NOTEFREQ\",\n  \"ERRORFREQ\",\n  \"WARNINGDURATION\",\n  \"NOTEDURATION\",\n  \"ERRORDURATION\",\n  \"19\",\n  \"CXSCREEN\",\n  \"CYSCREEN\",\n  \"CXVSCROLL\",\n  \"CYHSCROLL\",\n  \"CYVSCROLLARROW\",\n  \"CXHSCROLLARROW\",\n  \"CXBORDER\",\n  \"CYBORDER\",\n  \"CXDLGFRAME\",\n  \"CYDLGFRAME\",\n  \"CYTITLEBAR\",\n  \"CYVSLIDER\",\n  \"CXHSLIDER\",\n  \"CXMINMAXBUTTON\",\n  \"CYMINMAXBUTTON\",\n  \"CYMENU\",\n  \"CXFULLSCREEN\",\n  \"CYFULLSCREEN\",\n  \"CXICON\",\n  \"CYICON\",\n  \"CXPOINTER\",\n  \"CYPOINTER\",\n  \"DEBUG\",\n  \"CPOINTERBUTTONS\",\n  \"POINTERLEVEL\",\n  \"CURSORLEVEL\",\n  \"TRACKRECTLEVEL\",\n  \"CTIMERS\",\n  \"MOUSEPRESENT\",\n  \"CXALIGN\",\n  \"CYALIGN\",\n  \"DESKTOPWORKAREAYTOP\",\n  \"DESKTOPWORKAREAYBOTTOM\",\n  \"DESKTOPWORKAREAXRIGHT\",\n  \"DESKTOPWORKAREAXLEFT\",\n  \"55\",\n  \"NOTRESERVED\",\n  \"EXTRAKEYBEEP\",\n  \"SETLIGHTS\",\n  \"INSERTMODE\",\n  \"60\",\n  \"61\",\n  \"62\",\n  \"63\",\n  \"MENUROLLDOWNDELAY\",\n  \"MENUROLLUPDELAY\",\n  \"ALTMNEMONIC\",\n  \"TASKLISTMOUSEACCESS\",\n  \"CXICONTEXTWIDTH\",\n  \"CICONTEXTLINES\",\n  \"CHORDTIME\",\n  \"CXCHORD\",\n  \"CYCHORD\",\n  \"CXMOTIONSTART\",\n  \"CYMOTIONSTART\",\n  \"BEGINDRAG\",\n  \"ENDDRAG\",\n  \"SINGLESELECT\",\n  \"OPEN\",\n  \"CONTEXTMENU\",\n  \"CONTEXTHELP\",\n  \"TEXTEDIT\",\n  \"BEGINSELECT\",\n  \"ENDSELECT\",\n  \"BEGINDRAGKB\",\n  \"ENDDRAGKB\",\n  \"SELECTKB\",\n  \"OPENKB\",\n  \"CONTEXTMENUKB\",\n  \"CONTEXTHELPKB\",\n  \"TEXTEDITKB\",\n  \"BEGINSELECTKB\",\n  \"ENDSELECTKB\",\n  \"ANIMATION\",\n  \"ANIMATIONSPEED\",\n  \"MONOICONS\",\n  \"KBDALTERED\",\n  \"PRINTSCREEN\",\t\t/* 97, the last one on one of the DDK header */\n  \"LOCKSTARTINPUT\",\n  \"DYNAMICDRAG\",\n  \"100\",\n  \"101\",\n  \"102\",\n  \"103\",\n  \"104\",\n  \"105\",\n  \"106\",\n  \"107\",\n/*  \"CSYSVALUES\",*/\n\t\t\t\t\t/* In recent DDK the limit is 108 */\n};\n\nXS(XS_OS2_SysValues)\n{\n    dXSARGS;\n    if (items > 2)\n\tPerl_croak_nocontext(\"Usage: OS2::SysValues(which = -1, hwndDesktop = HWND_DESKTOP)\");\n    {\n\tint i = 0, j = 0, which = -1;\n\tHWND hwnd = HWND_DESKTOP;\n\tstatic volatile int sv_loaded;\n\tLONG RETVAL;\n\n\tif (!sv_loaded) {\n\t    *(PFN*)&pWinQuerySysValue = loadByOrdinal(ORD_WinQuerySysValue, 0);\n\t    sv_loaded = 1;\n\t}\n\n\tif (items == 2)\n\t    hwnd = (HWND)SvIV(ST(1));\n\tif (items >= 1)\n\t    which = (int)SvIV(ST(0));\n\tif (which == -1) {\n\t    EXTEND(SP,2*C_ARRAY_LENGTH(sv_keys));\n\t    while (i < C_ARRAY_LENGTH(sv_keys)) {\n\t\tResetWinError();\n\t\tRETVAL = pWinQuerySysValue(hwnd, i);\n\t\tif ( !RETVAL\n\t\t     && !(sv_keys[i][0] >= '0' && sv_keys[i][0] <= '9'\n\t\t\t  && i <= SV_PRINTSCREEN) ) {\n\t\t    FillWinError;\n\t\t    if (Perl_rc) {\n\t\t\tif (i > SV_PRINTSCREEN)\n\t\t\t    break; /* May be not present on older systems */\n\t\t\tcroak_with_os2error(\"SysValues():\");\n\t\t    }\n\t\t    \n\t\t}\n\t\tST(j) = sv_newmortal();\n\t\tsv_setpv(ST(j++), sv_keys[i]);\n\t\tST(j) = sv_newmortal();\n\t\tsv_setiv(ST(j++), RETVAL);\n\t\ti++;\n\t    }\n\t    XSRETURN(2 * i);\n\t} else {\n\t    dXSTARG;\n\n\t    ResetWinError();\n\t    RETVAL = pWinQuerySysValue(hwnd, which);\n\t    if (!RETVAL) {\n\t\tFillWinError;\n\t\tif (Perl_rc)\n\t\t    croak_with_os2error(\"SysValues():\");\n\t    }\n\t    XSprePUSH; PUSHi((IV)RETVAL);\n\t}\n    }\n}\n\nXS(XS_OS2_SysValues_set)\n{\n    dXSARGS;\n    if (items < 2 || items > 3)\n\tPerl_croak_nocontext(\"Usage: OS2::SysValues_set(which, val, hwndDesktop = HWND_DESKTOP)\");\n    {\n\tint which = (int)SvIV(ST(0));\n\tLONG val = (LONG)SvIV(ST(1));\n\tHWND hwnd = HWND_DESKTOP;\n\tstatic volatile int svs_loaded;\n\n\tif (!svs_loaded) {\n\t    *(PFN*)&pWinSetSysValue = loadByOrdinal(ORD_WinSetSysValue, 0);\n\t    svs_loaded = 1;\n\t}\n\n\tif (items == 3)\n\t    hwnd = (HWND)SvIV(ST(2));\n\tif (CheckWinError(pWinSetSysValue(hwnd, which, val)))\n\t    croak_with_os2error(\"SysValues_set()\");\n    }\n    XSRETURN_YES;\n}\n\n#define QSV_MAX_WARP3\t\t\t\tQSV_MAX_COMP_LENGTH\n\nstatic const char * const si_fields[] = {\n  \"MAX_PATH_LENGTH\",\n  \"MAX_TEXT_SESSIONS\",\n  \"MAX_PM_SESSIONS\",\n  \"MAX_VDM_SESSIONS\",\n  \"BOOT_DRIVE\",\n  \"DYN_PRI_VARIATION\",\n  \"MAX_WAIT\",\n  \"MIN_SLICE\",\n  \"MAX_SLICE\",\n  \"PAGE_SIZE\",\n  \"VERSION_MAJOR\",\n  \"VERSION_MINOR\",\n  \"VERSION_REVISION\",\n  \"MS_COUNT\",\n  \"TIME_LOW\",\n  \"TIME_HIGH\",\n  \"TOTPHYSMEM\",\n  \"TOTRESMEM\",\n  \"TOTAVAILMEM\",\n  \"MAXPRMEM\",\n  \"MAXSHMEM\",\n  \"TIMER_INTERVAL\",\n  \"MAX_COMP_LENGTH\",\n  \"FOREGROUND_FS_SESSION\",\n  \"FOREGROUND_PROCESS\",\t\t\t/* Warp 3 toolkit defines up to this */\n  \"NUMPROCESSORS\",\n  \"MAXHPRMEM\",\n  \"MAXHSHMEM\",\n  \"MAXPROCESSES\",\n  \"VIRTUALADDRESSLIMIT\",\n  \"INT10ENABLED\",\t\t\t/* From $TOOLKIT-ddk\\DDK\\video\\rel\\os2c\\include\\base\\os2\\bsedos.h */\n};\n\nXS(XS_OS2_SysInfo)\n{\n    dXSARGS;\n    if (items != 0)\n\tPerl_croak_nocontext(\"Usage: OS2::SysInfo()\");\n    {\n\t/* System Information Data Buffer (10 extra w.r.t. Warp 4.5) */\n\tULONG   si[C_ARRAY_LENGTH(si_fields) + 10];\n\tAPIRET  rc\t= NO_ERROR;\t/* Return code            */\n\tint i = 0, j = 0, last = QSV_MAX_WARP3;\n\n\tif (CheckOSError(DosQuerySysInfo(1L, /* Request documented system */\n\t\t\t\t\t last, /* info for Warp 3 */\n\t\t\t\t\t (PVOID)si,\n\t\t\t\t\t sizeof(si))))\n\t    croak_with_os2error(\"DosQuerySysInfo() failed\");\n\twhile (++last <= C_ARRAY_LENGTH(si)) {\n\t    if (CheckOSError(DosQuerySysInfo(last, last, /* One entry only */\n\t\t\t\t\t     (PVOID)(si+last-1),\n\t\t\t\t\t     sizeof(*si)))) {\n\t\tif (Perl_rc != ERROR_INVALID_PARAMETER)\n\t\t    croak_with_os2error(\"DosQuerySysInfo() failed\");\n\t\tbreak;\n\t    }\n\t}\n\tlast--;\t\t\t/* Count of successfully processed offsets */\n\tEXTEND(SP,2*last);\n\twhile (i < last) {\n\t    ST(j) = sv_newmortal();\n\t    if (i < C_ARRAY_LENGTH(si_fields))\n\t\tsv_setpv(ST(j++),  si_fields[i]);\n\t    else\n\t\tsv_setiv(ST(j++),  i + 1);\n\t    ST(j) = sv_newmortal();\n\t    sv_setuv(ST(j++), si[i]);\n\t    i++;\n\t}\n\tXSRETURN(2 * last);\n    }\n}\n\nXS(XS_OS2_SysInfoFor)\n{\n    dXSARGS;\n    int count = (items == 2 ? (int)SvIV(ST(1)) : 1);\n\n    if (items < 1 || items > 2)\n\tPerl_croak_nocontext(\"Usage: OS2::SysInfoFor(id[,count])\");\n    {\n\t/* System Information Data Buffer (10 extra w.r.t. Warp 4.5) */\n\tULONG   si[C_ARRAY_LENGTH(si_fields) + 10];\n\tAPIRET  rc\t= NO_ERROR;\t/* Return code            */\n\tint i = 0;\n\tint start = (int)SvIV(ST(0));\n\n\tif (count > C_ARRAY_LENGTH(si) || count <= 0)\n\t    Perl_croak(aTHX_ \"unexpected count %d for OS2::SysInfoFor()\", count);\n\tif (CheckOSError(DosQuerySysInfo(start,\n\t\t\t\t\t start + count - 1,\n\t\t\t\t\t (PVOID)si,\n\t\t\t\t\t sizeof(si))))\n\t    croak_with_os2error(\"DosQuerySysInfo() failed\");\n\tEXTEND(SP,count);\n\twhile (i < count) {\n\t    ST(i) = sv_newmortal();\n\t    sv_setiv(ST(i), si[i]);\n\t    i++;\n\t}\n    }\n    XSRETURN(count);\n}\n\nXS(XS_OS2_BootDrive)\n{\n    dXSARGS;\n    if (items != 0)\n\tPerl_croak_nocontext(\"Usage: OS2::BootDrive()\");\n    {\n\tULONG   si[1] = {0};\t/* System Information Data Buffer */\n\tAPIRET  rc    = NO_ERROR;\t/* Return code            */\n\tchar c;\n\tdXSTARG;\n\t\n\tif (CheckOSError(DosQuerySysInfo(QSV_BOOT_DRIVE, QSV_BOOT_DRIVE,\n\t\t\t\t\t (PVOID)si, sizeof(si))))\n\t    croak_with_os2error(\"DosQuerySysInfo() failed\");\n\tc = 'a' - 1 + si[0];\n\tsv_setpvn(TARG, &c, 1);\n\tXSprePUSH; PUSHTARG;\n    }\n    XSRETURN(1);\n}\n\nXS(XS_OS2_Beep)\n{\n    dXSARGS;\n    if (items > 2)\t\t\t/* Defaults as for WinAlarm(ERROR) */\n\tPerl_croak_nocontext(\"Usage: OS2::Beep(freq = 440, ms = 100)\");\n    {\n\tULONG freq\t= (items > 0 ? (ULONG)SvUV(ST(0)) : 440);\n\tULONG ms\t= (items > 1 ? (ULONG)SvUV(ST(1)) : 100);\n\tULONG rc;\n\n\tif (CheckOSError(DosBeep(freq, ms)))\n\t    croak_with_os2error(\"SysValues_set()\");\n    }\n    XSRETURN_YES;\n}\n\n\n\nXS(XS_OS2_MorphPM)\n{\n    dXSARGS;\n    if (items != 1)\n\tPerl_croak_nocontext(\"Usage: OS2::MorphPM(serve)\");\n    {\n\tbool  serve = SvOK(ST(0));\n\tunsigned long   pmq = perl_hmq_GET(serve);\n\tdXSTARG;\n\n\tXSprePUSH; PUSHi((IV)pmq);\n    }\n    XSRETURN(1);\n}\n\nXS(XS_OS2_UnMorphPM)\n{\n    dXSARGS;\n    if (items != 1)\n\tPerl_croak_nocontext(\"Usage: OS2::UnMorphPM(serve)\");\n    {\n\tbool  serve = SvOK(ST(0));\n\n\tperl_hmq_UNSET(serve);\n    }\n    XSRETURN(0);\n}\n\nXS(XS_OS2_Serve_Messages)\n{\n    dXSARGS;\n    if (items != 1)\n\tPerl_croak_nocontext(\"Usage: OS2::Serve_Messages(force)\");\n    {\n\tbool  force = SvOK(ST(0));\n\tunsigned long   cnt = Perl_Serve_Messages(force);\n\tdXSTARG;\n\n\tXSprePUSH; PUSHi((IV)cnt);\n    }\n    XSRETURN(1);\n}\n\nXS(XS_OS2_Process_Messages)\n{\n    dXSARGS;\n    if (items < 1 || items > 2)\n\tPerl_croak_nocontext(\"Usage: OS2::Process_Messages(force [, cnt])\");\n    {\n\tbool  force = SvOK(ST(0));\n\tunsigned long   cnt;\n\tdXSTARG;\n\n\tif (items == 2) {\n\t    I32 cntr;\n\t    SV *sv = ST(1);\n\n\t    (void)SvIV(sv);\t\t/* Force SvIVX */\t    \n\t    if (!SvIOK(sv))\n\t\tPerl_croak_nocontext(\"Can't upgrade count to IV\");\n\t    cntr = SvIVX(sv);\n\t    cnt =  Perl_Process_Messages(force, &cntr);\n\t    SvIVX(sv) = cntr;\n\t} else {\n\t    cnt =  Perl_Process_Messages(force, NULL);\n        }\n\tXSprePUSH; PUSHi((IV)cnt);\n    }\n    XSRETURN(1);\n}\n\nXS(XS_Cwd_current_drive)\n{\n    dXSARGS;\n    if (items != 0)\n\tPerl_croak_nocontext(\"Usage: Cwd::current_drive()\");\n    {\n\tchar\tRETVAL;\n\tdXSTARG;\n\n\tRETVAL = current_drive();\n\tsv_setpvn(TARG, (char *)&RETVAL, 1);\n\tXSprePUSH; PUSHTARG;\n    }\n    XSRETURN(1);\n}\n\nXS(XS_Cwd_sys_chdir)\n{\n    dXSARGS;\n    if (items != 1)\n\tPerl_croak_nocontext(\"Usage: Cwd::sys_chdir(path)\");\n    {\n\tSTRLEN n_a;\n\tchar *\tpath = (char *)SvPV(ST(0),n_a);\n\tbool\tRETVAL;\n\n\tRETVAL = sys_chdir(path);\n\tST(0) = boolSV(RETVAL);\n\tif (SvREFCNT(ST(0))) sv_2mortal(ST(0));\n    }\n    XSRETURN(1);\n}\n\nXS(XS_Cwd_change_drive)\n{\n    dXSARGS;\n    if (items != 1)\n\tPerl_croak_nocontext(\"Usage: Cwd::change_drive(d)\");\n    {\n\tSTRLEN n_a;\n\tchar\td = (char)*SvPV(ST(0),n_a);\n\tbool\tRETVAL;\n\n\tRETVAL = change_drive(d);\n\tST(0) = boolSV(RETVAL);\n\tif (SvREFCNT(ST(0))) sv_2mortal(ST(0));\n    }\n    XSRETURN(1);\n}\n\nXS(XS_Cwd_sys_is_absolute)\n{\n    dXSARGS;\n    if (items != 1)\n\tPerl_croak_nocontext(\"Usage: Cwd::sys_is_absolute(path)\");\n    {\n\tSTRLEN n_a;\n\tchar *\tpath = (char *)SvPV(ST(0),n_a);\n\tbool\tRETVAL;\n\n\tRETVAL = sys_is_absolute(path);\n\tST(0) = boolSV(RETVAL);\n\tif (SvREFCNT(ST(0))) sv_2mortal(ST(0));\n    }\n    XSRETURN(1);\n}\n\nXS(XS_Cwd_sys_is_rooted)\n{\n    dXSARGS;\n    if (items != 1)\n\tPerl_croak_nocontext(\"Usage: Cwd::sys_is_rooted(path)\");\n    {\n\tSTRLEN n_a;\n\tchar *\tpath = (char *)SvPV(ST(0),n_a);\n\tbool\tRETVAL;\n\n\tRETVAL = sys_is_rooted(path);\n\tST(0) = boolSV(RETVAL);\n\tif (SvREFCNT(ST(0))) sv_2mortal(ST(0));\n    }\n    XSRETURN(1);\n}\n\nXS(XS_Cwd_sys_is_relative)\n{\n    dXSARGS;\n    if (items != 1)\n\tPerl_croak_nocontext(\"Usage: Cwd::sys_is_relative(path)\");\n    {\n\tSTRLEN n_a;\n\tchar *\tpath = (char *)SvPV(ST(0),n_a);\n\tbool\tRETVAL;\n\n\tRETVAL = sys_is_relative(path);\n\tST(0) = boolSV(RETVAL);\n\tif (SvREFCNT(ST(0))) sv_2mortal(ST(0));\n    }\n    XSRETURN(1);\n}\n\nXS(XS_Cwd_sys_cwd)\n{\n    dXSARGS;\n    if (items != 0)\n\tPerl_croak_nocontext(\"Usage: Cwd::sys_cwd()\");\n    {\n\tchar p[MAXPATHLEN];\n\tchar *\tRETVAL;\n\n\t/* Can't use TARG, since tainting behaves differently */\n\tRETVAL = _getcwd2(p, MAXPATHLEN);\n\tST(0) = sv_newmortal();\n\tsv_setpv(ST(0), RETVAL);\n\tSvTAINTED_on(ST(0));\n    }\n    XSRETURN(1);\n}\n\nXS(XS_Cwd_sys_abspath)\n{\n    dXSARGS;\n    if (items > 2)\n\tPerl_croak_nocontext(\"Usage: Cwd::sys_abspath(path = '.', dir = NULL)\");\n    {\n\tSTRLEN n_a;\n\tchar *\tpath = items ? (char *)SvPV(ST(0),n_a) : \".\";\n\tchar *\tdir, *s, *t, *e;\n\tchar p[MAXPATHLEN];\n\tchar *\tRETVAL;\n\tint l;\n\tSV *sv;\n\n\tif (items < 2)\n\t    dir = NULL;\n\telse {\n\t    dir = (char *)SvPV(ST(1),n_a);\n\t}\n\tif (path[0] == '.' && (path[1] == '/' || path[1] == '\\\\')) {\n\t    path += 2;\n\t}\n\tif (dir == NULL) {\n\t    if (_abspath(p, path, MAXPATHLEN) == 0) {\n\t\tRETVAL = p;\n\t    } else {\n\t\tRETVAL = NULL;\n\t    }\n\t} else {\n\t    /* Absolute with drive: */\n\t    if ( sys_is_absolute(path) ) {\n\t\tif (_abspath(p, path, MAXPATHLEN) == 0) {\n\t\t    RETVAL = p;\n\t\t} else {\n\t\t    RETVAL = NULL;\n\t\t}\n\t    } else if (path[0] == '/' || path[0] == '\\\\') {\n\t\t/* Rooted, but maybe on different drive. */\n\t\tif (isALPHA(dir[0]) && dir[1] == ':' ) {\n\t\t    char p1[MAXPATHLEN];\n\n\t\t    /* Need to prepend the drive. */\n\t\t    p1[0] = dir[0];\n\t\t    p1[1] = dir[1];\n\t\t    Copy(path, p1 + 2, strlen(path) + 1, char);\n\t\t    RETVAL = p;\n\t\t    if (_abspath(p, p1, MAXPATHLEN) == 0) {\n\t\t\tRETVAL = p;\n\t\t    } else {\n\t\t\tRETVAL = NULL;\n\t\t    }\n\t\t} else if (_abspath(p, path, MAXPATHLEN) == 0) {\n\t\t    RETVAL = p;\n\t\t} else {\n\t\t    RETVAL = NULL;\n\t\t}\n\t    } else {\n\t\t/* Either path is relative, or starts with a drive letter. */\n\t\t/* If the path starts with a drive letter, then dir is\n\t\t   relevant only if \n\t\t   a/b)\tit is absolute/x:relative on the same drive.  \n\t\t   c)\tpath is on current drive, and dir is rooted\n\t\t   In all the cases it is safe to drop the drive part\n\t\t   of the path. */\n\t\tif ( !sys_is_relative(path) ) {\n\t\t    if ( ( ( sys_is_absolute(dir)\n\t\t\t     || (isALPHA(dir[0]) && dir[1] == ':' \n\t\t\t\t && strnicmp(dir, path,1) == 0)) \n\t\t\t   && strnicmp(dir, path,1) == 0)\n\t\t\t || ( !(isALPHA(dir[0]) && dir[1] == ':')\n\t\t\t      && toupper(path[0]) == current_drive())) {\n\t\t\tpath += 2;\n\t\t    } else if (_abspath(p, path, MAXPATHLEN) == 0) {\n\t\t\tRETVAL = p; goto done;\n\t\t    } else {\n\t\t\tRETVAL = NULL; goto done;\n\t\t    }\n\t\t}\n\t\t{\n\t\t    /* Need to prepend the absolute path of dir. */\n\t\t    char p1[MAXPATHLEN];\n\n\t\t    if (_abspath(p1, dir, MAXPATHLEN) == 0) {\n\t\t\tint l = strlen(p1);\n\n\t\t\tif (p1[ l - 1 ] != '/') {\n\t\t\t    p1[ l ] = '/';\n\t\t\t    l++;\n\t\t\t}\n\t\t\tCopy(path, p1 + l, strlen(path) + 1, char);\n\t\t\tif (_abspath(p, p1, MAXPATHLEN) == 0) {\n\t\t\t    RETVAL = p;\n\t\t\t} else {\n\t\t\t    RETVAL = NULL;\n\t\t\t}\n\t\t    } else {\n\t\t\tRETVAL = NULL;\n\t\t    }\n\t\t}\n\t      done:\n\t    }\n\t}\n\tif (!RETVAL)\n\t    XSRETURN_EMPTY;\n\t/* Backslashes are already converted to slashes. */\n\t/* Remove trailing slashes */\n\tl = strlen(RETVAL);\n\twhile (l > 0 && RETVAL[l-1] == '/')\n\t    l--;\n\tST(0) = sv_newmortal();\n\tsv_setpvn( sv = (SV*)ST(0), RETVAL, l);\n\t/* Remove duplicate slashes, skipping the first three, which\n\t   may be parts of a server-based path */\n\ts = t = 3 + SvPV_force(sv, n_a);\n\te = SvEND(sv);\n\t/* Do not worry about multibyte chars here, this would contradict the\n\t   eventual UTFization, and currently most other places break too... */\n\twhile (s < e) {\n\t    if (s[0] == t[-1] && s[0] == '/')\n\t\ts++;\t\t\t\t/* Skip duplicate / */\n\t    else\n\t\t*t++ = *s++;\n\t}\n\tif (t < e) {\n\t    *t = 0;\n\t    SvCUR_set(sv, t - SvPVX(sv));\n\t}\n\tif (!items)\n\t    SvTAINTED_on(ST(0));\n    }\n    XSRETURN(1);\n}\ntypedef APIRET (*PELP)(PSZ path, ULONG type);\n\n/* Kernels after 2000/09/15 understand this too: */\n#ifndef LIBPATHSTRICT\n#  define LIBPATHSTRICT 3\n#endif\n\nAPIRET\nExtLIBPATH(ULONG ord, PSZ path, IV type, int fatal)\n{\n    ULONG what;\n    PFN f = loadByOrdinal(ord, fatal);\t/* if fatal: load or die! */\n\n    if (!f)\t\t\t\t/* Impossible with fatal */\n\treturn Perl_rc;\n    if (type > 0)\n\twhat = END_LIBPATH;\n    else if (type == 0)\n\twhat = BEGIN_LIBPATH;\n    else\n\twhat = LIBPATHSTRICT;\n    return (*(PELP)f)(path, what);\n}\n\n#define extLibpath(to,type, fatal) \t\t\t\t\t\\\n    (CheckOSError(ExtLIBPATH(ORD_DosQueryExtLibpath, (to), (type), fatal)) ? NULL : (to) )\n\n#define extLibpath_set(p,type, fatal) \t\t\t\t\t\\\n    (!CheckOSError(ExtLIBPATH(ORD_DosSetExtLibpath, (p), (type), fatal)))\n\nstatic void\nearly_error(char *msg1, char *msg2, char *msg3)\n{\t/* Buffer overflow detected; there is very little we can do... */\n    ULONG rc;\n\n    DosWrite(2, msg1, strlen(msg1), &rc);\n    DosWrite(2, msg2, strlen(msg2), &rc);\n    DosWrite(2, msg3, strlen(msg3), &rc);\n    DosExit(EXIT_PROCESS, 2);\n}\n\nXS(XS_Cwd_extLibpath)\n{\n    dXSARGS;\n    if (items < 0 || items > 1)\n\tPerl_croak_nocontext(\"Usage: OS2::extLibpath(type = 0)\");\n    {\n\tIV\ttype;\n\tchar\tto[1024];\n\tU32\trc;\n\tchar *\tRETVAL;\n\tdXSTARG;\n\tSTRLEN l;\n\n\tif (items < 1)\n\t    type = 0;\n\telse {\n\t    type = SvIV(ST(0));\n\t}\n\n\tto[0] = 1; to[1] = 0;\t\t/* Sometimes no error reported */\n\tRETVAL = extLibpath(to, type, 1);\t/* Make errors fatal */\n\tif (RETVAL && RETVAL[0] == 1 && RETVAL[1] == 0)\n\t    Perl_croak_nocontext(\"panic OS2::extLibpath parameter\");\n\tl = strlen(to);\n\tif (l >= sizeof(to))\n\t    early_error(\"Buffer overflow while getting BEGIN/ENDLIBPATH: `\",\n\t\t\tto, \"'\\r\\n\");\t\t/* Will not return */\n\tsv_setpv(TARG, RETVAL);\n\tXSprePUSH; PUSHTARG;\n    }\n    XSRETURN(1);\n}\n\nXS(XS_Cwd_extLibpath_set)\n{\n    dXSARGS;\n    if (items < 1 || items > 2)\n\tPerl_croak_nocontext(\"Usage: OS2::extLibpath_set(s, type = 0)\");\n    {\n\tSTRLEN n_a;\n\tchar *\ts = (char *)SvPV(ST(0),n_a);\n\tIV\ttype;\n\tU32\trc;\n\tbool\tRETVAL;\n\n\tif (items < 2)\n\t    type = 0;\n\telse {\n\t    type = SvIV(ST(1));\n\t}\n\n\tRETVAL = extLibpath_set(s, type, 1);\t/* Make errors fatal */\n\tST(0) = boolSV(RETVAL);\n\tif (SvREFCNT(ST(0))) sv_2mortal(ST(0));\n    }\n    XSRETURN(1);\n}\n\nULONG\nfill_extLibpath(int type, char *pre, char *post, int replace, char *msg)\n{\n    char buf[2048], *to = buf, buf1[300], *s;\n    STRLEN l;\n    ULONG rc;\n\n    if (!pre && !post)\n\treturn 0;\n    if (pre) {\n\tpre = dir_subst(pre, strlen(pre), buf1, sizeof buf1, dir_subst_pathlike, msg);\n\tif (!pre)\n\t    return ERROR_INVALID_PARAMETER;\n\tl = strlen(pre);\n\tif (l >= sizeof(buf)/2)\n\t    return ERROR_BUFFER_OVERFLOW;\n\ts = pre - 1;\n\twhile (*++s)\n\t    if (*s == '/')\n\t\t*s = '\\\\';\t\t\t/* Be extra cautious */\n\tmemcpy(to, pre, l);\n\tif (!l || to[l-1] != ';')\n\t    to[l++] = ';';\n\tto += l;\n    }\n\n    if (!replace) {\n      to[0] = 1; to[1] = 0;\t\t/* Sometimes no error reported */\n      rc = ExtLIBPATH(ORD_DosQueryExtLibpath, to, type, 0);\t/* Do not croak */\n      if (rc)\n\treturn rc;\n      if (to[0] == 1 && to[1] == 0)\n\treturn ERROR_INVALID_PARAMETER;\n      to += strlen(to);\n      if (buf + sizeof(buf) - 1 <= to)\t/* Buffer overflow */\n\tearly_error(\"Buffer overflow while getting BEGIN/ENDLIBPATH: `\",\n\t\t    buf, \"'\\r\\n\");\t\t/* Will not return */\n      if (to > buf && to[-1] != ';')\n\t*to++ = ';';\n    }\n    if (post) {\n\tpost = dir_subst(post, strlen(post), buf1, sizeof buf1, dir_subst_pathlike, msg);\n\tif (!post)\n\t    return ERROR_INVALID_PARAMETER;\n\tl = strlen(post);\n\tif (l + to - buf >= sizeof(buf) - 1)\n\t    return ERROR_BUFFER_OVERFLOW;\n\ts = post - 1;\n\twhile (*++s)\n\t    if (*s == '/')\n\t\t*s = '\\\\';\t\t\t/* Be extra cautious */\n\tmemcpy(to, post, l);\n\tif (!l || to[l-1] != ';')\n\t    to[l++] = ';';\n\tto += l;\n    }\n    *to = 0;\n    rc = ExtLIBPATH(ORD_DosSetExtLibpath, buf, type, 0); /* Do not croak */\n    return rc;\n}\n\n/* Input: Address, BufLen\nAPIRET APIENTRY\nDosQueryModFromEIP (HMODULE * hmod, ULONG * obj, ULONG BufLen, PCHAR Buf,\n\t\t    ULONG * Offset, ULONG Address);\n*/\n\nDeclOSFuncByORD(APIRET, _DosQueryModFromEIP,ORD_DosQueryModFromEIP,\n\t\t\t(HMODULE * hmod, ULONG * obj, ULONG BufLen, PCHAR Buf,\n\t\t\tULONG * Offset, ULONG Address),\n\t\t\t(hmod, obj, BufLen, Buf, Offset, Address))\n\nstatic SV*\nmodule_name_at(void *pp, enum module_name_how how)\n{\n    dTHX;\n    char buf[MAXPATHLEN];\n    char *p = buf;\n    HMODULE mod;\n    ULONG obj, offset, rc, addr = (ULONG)pp;\n\n    if (how & mod_name_HMODULE) {\n\tif ((how & ~mod_name_HMODULE) == mod_name_shortname)\n\t    Perl_croak(aTHX_ \"Can't get short module name from a handle\");\n\tmod = (HMODULE)pp;\n\thow &= ~mod_name_HMODULE;\n    } else if (!_DosQueryModFromEIP(&mod, &obj, sizeof(buf), buf, &offset, addr))\n\treturn &PL_sv_undef;\n    if (how == mod_name_handle)\n\treturn newSVuv(mod);\n    /* Full name... */\n    if ( how != mod_name_shortname\n\t && CheckOSError(DosQueryModuleName(mod, sizeof(buf), buf)) )\n\treturn &PL_sv_undef;\n    while (*p) {\n\tif (*p == '\\\\')\n\t    *p = '/';\n\tp++;\n    }\n    return newSVpv(buf, 0);\n}\n\nstatic SV*\nmodule_name_of_cv(SV *cv, enum module_name_how how)\n{\n    if (!cv || !SvROK(cv) || SvTYPE(SvRV(cv)) != SVt_PVCV || !CvXSUB(SvRV(cv))) {\n\tdTHX;\n\n\tif (how & mod_name_C_function)\n\t    return module_name_at((void*)SvIV(cv), how & ~mod_name_C_function);\n\telse if (how & mod_name_HMODULE)\n\t    return module_name_at((void*)SvIV(cv), how);\n\tPerl_croak(aTHX_ \"Not an XSUB reference\");\n    }\n    return module_name_at(CvXSUB(SvRV(cv)), how);\n}\n\nXS(XS_OS2_DLLname)\n{\n    dXSARGS;\n    if (items > 2)\n\tPerl_croak(aTHX_ \"Usage: OS2::DLLname( [ how, [\\\\&xsub] ] )\");\n    {\n\tSV *\tRETVAL;\n\tint\thow;\n\n\tif (items < 1)\n\t    how = mod_name_full;\n\telse {\n\t    how = (int)SvIV(ST(0));\n\t}\n\tif (items < 2)\n\t    RETVAL = module_name(how);\n\telse\n\t    RETVAL = module_name_of_cv(ST(1), how);\n\tST(0) = RETVAL;\n\tsv_2mortal(ST(0));\n    }\n    XSRETURN(1);\n}\n\nDeclOSFuncByORD(INT, _Dos32QueryHeaderInfo, ORD_Dos32QueryHeaderInfo,\n\t\t\t(ULONG r1, ULONG r2, PVOID buf, ULONG szbuf, ULONG fnum),\n\t\t\t(r1, r2, buf, szbuf, fnum))\n\nXS(XS_OS2__headerInfo)\n{\n    dXSARGS;\n    if (items > 4 || items < 2)\n\tPerl_croak(aTHX_ \"Usage: OS2::_headerInfo(req,size[,handle,[offset]])\");\n    {\n\tULONG\treq = (ULONG)SvIV(ST(0));\n\tSTRLEN\tsize = (STRLEN)SvIV(ST(1)), n_a;\n\tULONG\thandle = (items >= 3 ? (ULONG)SvIV(ST(2)) : 0);\n\tULONG\toffset = (items >= 4 ? (ULONG)SvIV(ST(3)) : 0);\n\n\tif (size <= 0)\n\t    Perl_croak(aTHX_ \"OS2::_headerInfo(): unexpected size: %d\", (int)size);\n\tST(0) = newSVpvs(\"\");\n\tSvGROW(ST(0), size + 1);\n\tsv_2mortal(ST(0));\n\n\tif (!_Dos32QueryHeaderInfo(handle, offset, SvPV(ST(0), n_a), size, req)) \n\t    Perl_croak(aTHX_ \"OS2::_headerInfo(%ld,%ld,%ld,%ld) error: %s\",\n\t\t       req, size, handle, offset, os2error(Perl_rc));\n\tSvCUR_set(ST(0), size);\n\t*SvEND(ST(0)) = 0;\n    }\n    XSRETURN(1);\n}\n\n#define DQHI_QUERYLIBPATHSIZE      4\n#define DQHI_QUERYLIBPATH          5\n\nXS(XS_OS2_libPath)\n{\n    dXSARGS;\n    if (items != 0)\n\tPerl_croak(aTHX_ \"Usage: OS2::libPath()\");\n    {\n\tULONG\tsize;\n\tSTRLEN\tn_a;\n\n\tif (!_Dos32QueryHeaderInfo(0, 0, &size, sizeof(size), \n\t\t\t\t   DQHI_QUERYLIBPATHSIZE)) \n\t    Perl_croak(aTHX_ \"OS2::_headerInfo(%ld,%ld,%ld,%ld) error: %s\",\n\t\t       DQHI_QUERYLIBPATHSIZE, sizeof(size), 0, 0,\n\t\t       os2error(Perl_rc));\n\tST(0) = newSVpvs(\"\");\n\tSvGROW(ST(0), size + 1);\n\tsv_2mortal(ST(0));\n\n\t/* We should be careful: apparently, this entry point does not\n\t   pay attention to the size argument, so may overwrite\n\t   unrelated data! */\n\tif (!_Dos32QueryHeaderInfo(0, 0, SvPV(ST(0), n_a), size,\n\t\t\t\t   DQHI_QUERYLIBPATH)) \n\t    Perl_croak(aTHX_ \"OS2::_headerInfo(%ld,%ld,%ld,%ld) error: %s\",\n\t\t       DQHI_QUERYLIBPATH, size, 0, 0, os2error(Perl_rc));\n\tSvCUR_set(ST(0), size);\n\t*SvEND(ST(0)) = 0;\n    }\n    XSRETURN(1);\n}\n\n#define get_control87()\t\t_control87(0,0)\n#define set_control87\t\t_control87\n\nXS(XS_OS2__control87)\n{\n    dXSARGS;\n    if (items != 2)\n\tPerl_croak(aTHX_ \"Usage: OS2::_control87(new,mask)\");\n    {\n\tunsigned\tnew = (unsigned)SvIV(ST(0));\n\tunsigned\tmask = (unsigned)SvIV(ST(1));\n\tunsigned\tRETVAL;\n\tdXSTARG;\n\n\tRETVAL = _control87(new, mask);\n\tXSprePUSH; PUSHi((IV)RETVAL);\n    }\n    XSRETURN(1);\n}\n\nXS(XS_OS2_mytype)\n{\n    dXSARGS;\n    int which = 0;\n\n    if (items < 0 || items > 1)\n\tPerl_croak(aTHX_ \"Usage: OS2::mytype([which])\");\n    if (items == 1)\n\twhich = (int)SvIV(ST(0));\n    {\n\tunsigned\tRETVAL;\n\tdXSTARG;\n\n\tswitch (which) {\n\tcase 0:\n\t    RETVAL = os2_mytype;\t/* Reset after fork */\n\t    break;\n\tcase 1:\n\t    RETVAL = os2_mytype_ini;\t/* Before any fork */\n\t    break;\n\tcase 2:\n\t    RETVAL = Perl_os2_initial_mode;\t/* Before first morphing */\n\t    break;\n\tcase 3:\n\t    RETVAL = my_type();\t\t/* Morphed type */\n\t    break;\n\tdefault:\n\t    Perl_croak(aTHX_ \"OS2::mytype(which): unknown which=%d\", which);\n\t}\n\tXSprePUSH; PUSHi((IV)RETVAL);\n    }\n    XSRETURN(1);\n}\n\n\nXS(XS_OS2_mytype_set)\n{\n    dXSARGS;\n    int type;\n\n    if (items == 1)\n\ttype = (int)SvIV(ST(0));\n    else\n\tPerl_croak(aTHX_ \"Usage: OS2::mytype_set(type)\");\n    my_type_set(type);\n    XSRETURN_YES;\n}\n\n\nXS(XS_OS2_get_control87)\n{\n    dXSARGS;\n    if (items != 0)\n\tPerl_croak(aTHX_ \"Usage: OS2::get_control87()\");\n    {\n\tunsigned\tRETVAL;\n\tdXSTARG;\n\n\tRETVAL = get_control87();\n\tXSprePUSH; PUSHi((IV)RETVAL);\n    }\n    XSRETURN(1);\n}\n\n\nXS(XS_OS2_set_control87)\n{\n    dXSARGS;\n    if (items < 0 || items > 2)\n\tPerl_croak(aTHX_ \"Usage: OS2::set_control87(new=MCW_EM, mask=MCW_EM)\");\n    {\n\tunsigned\tnew;\n\tunsigned\tmask;\n\tunsigned\tRETVAL;\n\tdXSTARG;\n\n\tif (items < 1)\n\t    new = MCW_EM;\n\telse {\n\t    new = (unsigned)SvIV(ST(0));\n\t}\n\n\tif (items < 2)\n\t    mask = MCW_EM;\n\telse {\n\t    mask = (unsigned)SvIV(ST(1));\n\t}\n\n\tRETVAL = set_control87(new, mask);\n\tXSprePUSH; PUSHi((IV)RETVAL);\n    }\n    XSRETURN(1);\n}\n\nXS(XS_OS2_incrMaxFHandles)\t\t/* DosSetRelMaxFH */\n{\n    dXSARGS;\n    if (items < 0 || items > 1)\n\tPerl_croak(aTHX_ \"Usage: OS2::incrMaxFHandles(delta = 0)\");\n    {\n\tLONG\tdelta;\n\tULONG\tRETVAL, rc;\n\tdXSTARG;\n\n\tif (items < 1)\n\t    delta = 0;\n\telse\n\t    delta = (LONG)SvIV(ST(0));\n\n\tif (CheckOSError(DosSetRelMaxFH(&delta, &RETVAL)))\n\t    croak_with_os2error(\"OS2::incrMaxFHandles(): DosSetRelMaxFH() error\");\n\tXSprePUSH; PUSHu((UV)RETVAL);\n    }\n    XSRETURN(1);\n}\n\n/* wait>0: force wait, wait<0: force nowait;\n   if restore, save/restore flags; otherwise flags are in oflags.\n\n   Returns 1 if connected, 0 if not (due to nowait); croaks on error. */\nstatic ULONG\nconnectNPipe(ULONG hpipe, int wait, ULONG restore, ULONG oflags)\n{\n    ULONG ret = ERROR_INTERRUPT, rc, flags;\n\n    if (restore && wait)\n\tos2cp_croak(DosQueryNPHState(hpipe, &oflags), \"DosQueryNPHState()\");\n    /* DosSetNPHState fails if more bits than NP_NOWAIT|NP_READMODE_MESSAGE */\n    oflags &= (NP_NOWAIT | NP_READMODE_MESSAGE);\n    flags = (oflags & ~NP_NOWAIT) | (wait > 0 ? NP_WAIT : NP_NOWAIT);\n    /* We know (o)flags unless wait == 0 && restore */\n    if (wait && (flags != oflags))\n\tos2cp_croak(DosSetNPHState(hpipe, flags), \"DosSetNPHState()\");\n    while (ret == ERROR_INTERRUPT)\n\tret = DosConnectNPipe(hpipe);\n    (void)CheckOSError(ret);\n    if (restore && wait && (flags != oflags))\n\tos2cp_croak(DosSetNPHState(hpipe, oflags), \"DosSetNPHState() back\");\n    /* We know flags unless wait == 0 && restore */\n    if ( ((wait || restore) ? (flags & NP_NOWAIT) : 1)\n\t && (ret == ERROR_PIPE_NOT_CONNECTED) )\n\treturn 0;\t\t\t/* normal return value */\n    if (ret == NO_ERROR)\n\treturn 1;\n    croak_with_os2error(\"DosConnectNPipe()\");\n}\n\n/* With a lot of manual editing:\nNO_OUTPUT ULONG\nDosCreateNPipe(PCSZ pszName, OUTLIST HPIPE hpipe, ULONG ulOpenMode, int connect = 1, int count = 1, ULONG ulInbufLength = 8192, ULONG ulOutbufLength = ulInbufLength, ULONG ulPipeMode = count | NP_NOWAIT | NP_TYPE_BYTE | NP_READMODE_BYTE, ULONG ulTimeout = 0)\n   PREINIT:\n\tULONG rc;\n   C_ARGS:\n\tpszName, &hpipe, ulOpenMode, ulPipeMode, ulInbufLength, ulOutbufLength, ulTimeout\n   POSTCALL:\n\tif (CheckOSError(RETVAL))\n\t    croak_with_os2error(\"OS2::mkpipe() error\");\n*/\nXS(XS_OS2_pipe); /* prototype to pass -Wmissing-prototypes */\nXS(XS_OS2_pipe)\n{\n    dXSARGS;\n    if (items < 2 || items > 8)\n\tPerl_croak(aTHX_ \"Usage: OS2::pipe(pszName, ulOpenMode, connect= 1, count= 1, ulInbufLength= 8192, ulOutbufLength= ulInbufLength, ulPipeMode= count | NP_NOWAIT | NP_TYPE_BYTE | NP_READMODE_BYTE, ulTimeout= 0)\");\n    {\n\tULONG\tRETVAL;\n\tPCSZ\tpszName = ( SvOK(ST(0)) ? (PCSZ)SvPV_nolen(ST(0)) : NULL );\n\tHPIPE\thpipe;\n\tSV\t*OpenMode = ST(1);\n\tULONG\tulOpenMode;\n\tint\tconnect = 0, count, message_r = 0, message = 0, b = 0;\n\tULONG\tulInbufLength,\tulOutbufLength,\tulPipeMode, ulTimeout, rc;\n\tSTRLEN\tlen;\n\tchar\t*s, buf[10], *s1, *perltype = NULL;\n\tPerlIO\t*perlio;\n\tdouble\ttimeout;\n\n\tif (!pszName || !*pszName)\n\t    Perl_croak(aTHX_ \"OS2::pipe(): empty pipe name\");\n\ts = SvPV(OpenMode, len);\n\tif (memEQs(s, len, \"wait\")) {\t/* DosWaitNPipe() */\n\t    ULONG ms = 0xFFFFFFFF, ret = ERROR_INTERRUPT; /* Indefinite */\n\n\t    if (items == 3) {\n\t\ttimeout = (double)SvNV(ST(2));\n\t\tms = timeout * 1000;\n\t\tif (timeout < 0)\n\t\t    ms = 0xFFFFFFFF; /* Indefinite */\n\t\telse if (timeout && !ms)\n\t\t    ms = 1;\n\t    } else if (items > 3)\n\t\tPerl_croak(aTHX_ \"OS2::pipe(): too many arguments for wait-for-connect: %ld\", (long)items);\n\n\t    while (ret == ERROR_INTERRUPT)\n\t\tret = DosWaitNPipe(pszName, ms);\t/* XXXX Update ms? */\n\t    os2cp_croak(ret, \"DosWaitNPipe()\");\n\t    XSRETURN_YES;\n\t}\n\tif (memEQs(s, len, \"call\")) {\t/* DosCallNPipe() */\n\t    ULONG ms = 0xFFFFFFFF, got; /* Indefinite */\n\t    STRLEN l;\n\t    char *s;\n\t    char buf[8192];\n\t    STRLEN ll = sizeof(buf);\n\t    char *b = buf;\n\n\t    if (items < 3 || items > 5)\n\t\tPerl_croak(aTHX_ \"usage: OS2::pipe(pszName, 'call', write [, timeout= 0xFFFFFFFF, buffsize = 8192])\");\n\t    s = SvPV(ST(2), l);\n\t    if (items >= 4) {\n\t\ttimeout = (double)SvNV(ST(3));\n\t\tms = timeout * 1000;\n\t\tif (timeout < 0)\n\t\t    ms = 0xFFFFFFFF; /* Indefinite */\n\t\telse if (timeout && !ms)\n\t\t    ms = 1;\n\t    }\n\t    if (items >= 5) {\n\t\tSTRLEN lll = SvUV(ST(4));\n\t\tSV *sv = NEWSV(914, lll);\n\n\t\tsv_2mortal(sv);\n\t\tll = lll;\n\t\tb = SvPVX(sv);\n\t    }\t    \n\n\t    os2cp_croak(DosCallNPipe(pszName, s, l, b, ll, &got, ms),\n\t\t\t\"DosCallNPipe()\");\n\t    XSRETURN_PVN(b, got);\n\t}\n\ts1 = buf;\n\tif (len && len <= 3 && !(*s >= '0' && *s <= '9')) {\n\t    int r, w, R, W;\n\n\t    r = strchr(s, 'r') != 0;\n\t    w = strchr(s, 'w') != 0;\n\t    R = strchr(s, 'R') != 0;\n\t    W = strchr(s, 'W') != 0;\n\t    b = strchr(s, 'b') != 0;\n\t    if (r + w + R + W + b != len || (r && R) || (w && W))\n\t\tPerl_croak(aTHX_ \"OS2::pipe(): unknown OpenMode argument: `%s'\", s);\n\t    if ((r || R) && (w || W))\n\t\tulOpenMode = NP_INHERIT | NP_NOWRITEBEHIND | NP_ACCESS_DUPLEX;\n\t    else if (r || R)\n\t\tulOpenMode = NP_INHERIT | NP_NOWRITEBEHIND | NP_ACCESS_INBOUND;\n\t    else\n\t\tulOpenMode = NP_INHERIT | NP_NOWRITEBEHIND | NP_ACCESS_OUTBOUND;\n\t    if (R)\n\t\tmessage = message_r = 1;\n\t    if (W)\n\t\tmessage = 1;\n\t    else if (w && R)\n\t\tPerl_croak(aTHX_ \"OS2::pipe(): can't have message read mode for non-message pipes\");\n\t} else\n\t    ulOpenMode = (ULONG)SvUV(OpenMode);\t/* ST(1) */\n\n\tif ( (ulOpenMode & 0x3) == NP_ACCESS_DUPLEX\n\t     || (ulOpenMode & 0x3) == NP_ACCESS_INBOUND )\n\t    *s1++ = 'r';\n\tif ( (ulOpenMode & 0x3) == NP_ACCESS_DUPLEX )\n\t    *s1++ = '+';\n\tif ( (ulOpenMode & 0x3) == NP_ACCESS_OUTBOUND )\n\t    *s1++ = 'w';\n\tif (b)\n\t    *s1++ = 'b';\n\t*s1 = 0;\n\tif ( (ulOpenMode & 0x3) == NP_ACCESS_DUPLEX )\n\t    perltype = \"+<&\";\n\telse if ( (ulOpenMode & 0x3) == NP_ACCESS_OUTBOUND )\n\t    perltype = \">&\";\n\telse\n\t    perltype = \"<&\";\n\n\tif (items < 3)\n\t    connect = -1;\t\t\t/* no wait */\n\telse if (SvTRUE(ST(2))) {\n\t    s = SvPV(ST(2), len);\n\t    if (memEQs(s, len, \"nowait\"))\n\t\tconnect = -1;\t\t\t/* no wait */\n\t    else if (memEQs(s, len, \"wait\"))\n\t\tconnect = 1;\t\t\t/* wait */\n\t    else\n\t\tPerl_croak(aTHX_ \"OS2::pipe(): unknown connect argument: `%s'\", s);\n\t}\n\n\tif (items < 4)\n\t    count = 1;\n\telse\n\t    count = (int)SvIV(ST(3));\n\n\tif (items < 5)\n\t    ulInbufLength = 8192;\n\telse\n\t    ulInbufLength = (ULONG)SvUV(ST(4));\n\n\tif (items < 6)\n\t    ulOutbufLength = ulInbufLength;\n\telse\n\t    ulOutbufLength = (ULONG)SvUV(ST(5));\n\n\tif (count < -1 || count == 0 || count >= 255)\n\t    Perl_croak(aTHX_ \"OS2::pipe(): count should be -1 or between 1 and 254: %ld\", (long)count);\n\tif (count < 0 )\n\t    count = 255;\t\t/* Unlimited */\n\n\tulPipeMode = count;\n\tif (items < 7)\n\t    ulPipeMode |= (NP_WAIT \n\t\t\t   | (message ? NP_TYPE_MESSAGE : NP_TYPE_BYTE)\n\t\t\t   | (message_r ? NP_READMODE_MESSAGE : NP_READMODE_BYTE));\n\telse\n\t    ulPipeMode |= (ULONG)SvUV(ST(6));\n\n\tif (items < 8)\n\t    timeout = 0;\n\telse\n\t    timeout = (double)SvNV(ST(7));\n\tulTimeout = timeout * 1000;\n\tif (timeout < 0)\n\t    ulTimeout = 0xFFFFFFFF; /* Indefinite */\n\telse if (timeout && !ulTimeout)\n\t    ulTimeout = 1;\n\n\tRETVAL = DosCreateNPipe(pszName, &hpipe, ulOpenMode, ulPipeMode, ulInbufLength, ulOutbufLength, ulTimeout);\n\tif (CheckOSError(RETVAL))\n\t    croak_with_os2error(\"OS2::pipe(): DosCreateNPipe() error\");\n\n\tif (connect)\n\t    connectNPipe(hpipe, connect, 1, 0);\t/* XXXX wait, retval */\n\thpipe = __imphandle(hpipe);\n\n\tperlio = PerlIO_fdopen(hpipe, buf);\n\tST(0) = sv_newmortal();\n\t{\n\t    GV *gv = (GV *)sv_newmortal();\n\t    gv_init_pvn(gv, gv_stashpvs(\"OS2::pipe\",1),\"__ANONIO__\",10,0);\n\t    if ( do_open6(gv, perltype, strlen(perltype), perlio, NULL, 0) )\n\t\tsv_setsv(ST(0), sv_bless(newRV((SV*)gv), gv_stashpv(\"IO::Handle\",1)));\n\t    else\n\t\tST(0) = &PL_sv_undef;\n\t}\n    }\n    XSRETURN(1);\n}\n\nXS(XS_OS2_pipeCntl); /* prototype to pass -Wmissing-prototypes */\nXS(XS_OS2_pipeCntl)\n{\n    dXSARGS;\n    if (items < 2 || items > 3)\n\tPerl_croak(aTHX_ \"Usage: OS2::pipeCntl(pipe, op [, wait])\");\n    {\n\tULONG\trc;\n\tPerlIO *perlio = IoIFP(sv_2io(ST(0)));\n\tIV\tfn = PerlIO_fileno(perlio);\n\tHPIPE\thpipe = (HPIPE)fn;\n\tSTRLEN\tlen;\n\tchar\t*s = SvPV(ST(1), len);\n\tint\twait = 0, disconnect = 0, connect = 0, message = -1, query = 0;\n\tint\tpeek = 0, state = 0, info = 0;\n\n\tif (fn < 0)\n\t    Perl_croak(aTHX_ \"OS2::pipeCntl(): not a pipe\");\t\n\tif (items == 3)\n\t    wait = (SvTRUE(ST(2)) ? 1 : -1);\n\n\tswitch (len) {\n\tcase 4:\n\t    if (strEQ(s, \"byte\"))\n\t\tmessage = 0;\n\t    else if (strEQ(s, \"peek\"))\n\t\tpeek = 1;\n\t    else if (strEQ(s, \"info\"))\n\t\tinfo = 1;\n\t    else\n\t\tgoto unknown;\n\t    break;\n\tcase 5:\n\t    if (strEQ(s, \"reset\"))\n\t\tdisconnect = connect = 1;\n\t    else if (strEQ(s, \"state\"))\n\t\tquery = 1;\n\t    else\n\t\tgoto unknown;\n\t    break;\n\tcase 7:\n\t    if (strEQ(s, \"connect\"))\n\t\tconnect = 1;\n\t    else if (strEQ(s, \"message\"))\n\t\tmessage = 1;\n\t    else\n\t\tgoto unknown;\n\t    break;\n\tcase 9:\n\t    if (!strEQ(s, \"readstate\"))\n\t\tgoto unknown;\n\t    state = 1;\n\t    break;\n\tcase 10:\n\t    if (!strEQ(s, \"disconnect\"))\n\t\tgoto unknown;\n\t    disconnect = 1;\n\t    break;\n\tdefault:\n\t  unknown:\n\t    Perl_croak(aTHX_ \"OS2::pipeCntl(): unknown argument: `%s'\", s);\n\t    break;\n\t}\n\n\tif (items == 3 && !connect)\n\t    Perl_croak(aTHX_ \"OS2::pipeCntl(): no wait argument for `%s'\", s);\n\n\tXSprePUSH;\t\t/* Do not need arguments any more */\n\tif (disconnect) {\n\t    os2cp_croak(DosDisConnectNPipe(hpipe), \"OS2::pipeCntl(): DosDisConnectNPipe()\");\n\t    PerlIO_clearerr(perlio);\n\t}\n\tif (connect) {\n\t    if (!connectNPipe(hpipe, wait , 1, 0))\n\t\tXSRETURN_IV(-1);\n\t}\n\tif (query) {\n\t    ULONG flags;\n\n\t    os2cp_croak(DosQueryNPHState(hpipe, &flags), \"DosQueryNPHState()\");\n\t    XSRETURN_UV(flags);\n\t}\n\tif (peek || state || info) {\n\t    ULONG BytesRead, PipeState;\n\t    AVAILDATA BytesAvail;\n\n\t    os2cp_croak( DosPeekNPipe(hpipe, NULL, 0, &BytesRead, &BytesAvail,\n\t\t\t\t      &PipeState), \"DosPeekNPipe() for state\");\n\t    if (state) {\n\t\tEXTEND(SP, 3);\n\t\tmPUSHu(PipeState);\n\t\t/*   Bytes (available/in-message) */\n\t\tmPUSHi(BytesAvail.cbpipe);\n\t\tmPUSHi(BytesAvail.cbmessage);\n\t\tXSRETURN(3);\n\t    } else if (info) {\n\t\t/* L S S C C C/Z*\n\t\t   ID of the (remote) computer\n\t\t   buffers (out/in)\n\t\t   instances (max/actual)\n\t\t */\n\t\tstruct pipe_info_t {\n\t\t    ULONG id;\t\t\t/* char id[4]; */\n\t\t    PIPEINFO pInfo;\n\t\t    char buf[512];\n\t\t} b;\n\t\tint size;\n\n\t\tos2cp_croak( DosQueryNPipeInfo(hpipe, 1, &b.pInfo, sizeof(b) - STRUCT_OFFSET(struct pipe_info_t, pInfo)),\n\t\t\t     \"DosQueryNPipeInfo(1)\");\n\t\tos2cp_croak( DosQueryNPipeInfo(hpipe, 2, &b.id, sizeof(b.id)),\n\t\t\t     \"DosQueryNPipeInfo(2)\");\n\t\tsize = b.pInfo.cbName;\n\t\t/* Trailing 0 is included in cbName - undocumented; so\n\t\t   one should always extract with Z* */\n\t\tif (size)\t\t/* name length 254 or less */\n\t\t    size--;\n\t\telse\n\t\t    size = strlen(b.pInfo.szName);\n\t\tEXTEND(SP, 6);\n\t\tmPUSHp(b.pInfo.szName, size);\n\t\tmPUSHu(b.id);\n\t\tmPUSHi(b.pInfo.cbOut);\n\t\tmPUSHi(b.pInfo.cbIn);\n\t\tmPUSHi(b.pInfo.cbMaxInst);\n\t\tmPUSHi(b.pInfo.cbCurInst);\n\t\tXSRETURN(6);\n\t    } else if (BytesAvail.cbpipe == 0) {\n\t\tXSRETURN_NO;\n\t    } else {\n\t\tSV *tmp = NEWSV(914, BytesAvail.cbpipe);\n\t\tchar *s = SvPVX(tmp);\n\n\t\tsv_2mortal(tmp);\n\t\tos2cp_croak( DosPeekNPipe(hpipe, s, BytesAvail.cbpipe, &BytesRead,\n\t\t\t\t\t  &BytesAvail, &PipeState), \"DosPeekNPipe()\");\n\t\tSvCUR_set(tmp, BytesRead);\n\t\t*SvEND(tmp) = 0;\n\t\tSvPOK_on(tmp);\n\t\tXSprePUSH; PUSHs(tmp);\n\t\tXSRETURN(1);\n\t    }\n\t}\n\tif (message > -1) {\n\t    ULONG oflags, flags;\n\n\t    os2cp_croak(DosQueryNPHState(hpipe, &oflags), \"DosQueryNPHState()\");\n\t    /* DosSetNPHState fails if more bits than NP_NOWAIT|NP_READMODE_MESSAGE */\n\t    oflags &= (NP_NOWAIT | NP_READMODE_MESSAGE);\n\t    flags = (oflags & NP_NOWAIT)\n\t\t| (message ? NP_READMODE_MESSAGE : NP_READMODE_BYTE);\n\t    if (flags != oflags)\n\t\tos2cp_croak(DosSetNPHState(hpipe, flags), \"DosSetNPHState()\");\n\t}\n    }\n    XSRETURN_YES;\n}\n\n/*\nNO_OUTPUT ULONG\nDosOpen(PCSZ pszFileName, OUTLIST HFILE hFile, OUTLIST ULONG ulAction, ULONG ulOpenFlags, ULONG ulOpenMode = OPEN_ACTION_OPEN_IF_EXISTS | OPEN_ACTION_FAIL_IF_NEW, ULONG ulAttribute = FILE_NORMAL, ULONG ulFileSize = 0, PEAOP2 pEABuf = NULL);\n   PREINIT:\n\tULONG rc;\n   C_ARGS:\n\tpszFileName, &hFile, &ulAction, ulFileSize, ulAttribute, ulOpenFlags, ulOpenMode, pEABuf\n   POSTCALL:\n\tif (CheckOSError(RETVAL))\n\t    croak_with_os2error(\"OS2::open() error\");\n*/\nXS(XS_OS2_open); /* prototype to pass -Wmissing-prototypes */\nXS(XS_OS2_open)\n{\n    dXSARGS;\n    if (items < 2 || items > 6)\n\tPerl_croak(aTHX_ \"Usage: OS2::open(pszFileName, ulOpenMode, ulOpenFlags= OPEN_ACTION_OPEN_IF_EXISTS | OPEN_ACTION_FAIL_IF_NEW, ulAttribute= FILE_NORMAL, ulFileSize= 0, pEABuf= NULL)\");\n    {\n#line 39 \"pipe.xs\"\n\tULONG rc;\n#line 113 \"pipe.c\"\n\tULONG\tRETVAL;\n\tPCSZ\tpszFileName = ( SvOK(ST(0)) ? (PCSZ)SvPV_nolen(ST(0)) : NULL );\n\tHFILE\thFile;\n\tULONG\tulAction;\n\tULONG\tulOpenMode = (ULONG)SvUV(ST(1));\n\tULONG\tulOpenFlags;\n\tULONG\tulAttribute;\n\tULONG\tulFileSize;\n\tPEAOP2\tpEABuf;\n\n\tif (items < 3)\n\t    ulOpenFlags = OPEN_ACTION_OPEN_IF_EXISTS | OPEN_ACTION_FAIL_IF_NEW;\n\telse {\n\t    ulOpenFlags = (ULONG)SvUV(ST(2));\n\t}\n\n\tif (items < 4)\n\t    ulAttribute = FILE_NORMAL;\n\telse {\n\t    ulAttribute = (ULONG)SvUV(ST(3));\n\t}\n\n\tif (items < 5)\n\t    ulFileSize = 0;\n\telse {\n\t    ulFileSize = (ULONG)SvUV(ST(4));\n\t}\n\n\tif (items < 6)\n\t    pEABuf = NULL;\n\telse {\n\t    pEABuf = (PEAOP2)SvUV(ST(5));\n\t}\n\n\tRETVAL = DosOpen(pszFileName, &hFile, &ulAction, ulFileSize, ulAttribute, ulOpenFlags, ulOpenMode, pEABuf);\n\tif (CheckOSError(RETVAL))\n\t    croak_with_os2error(\"OS2::open() error\");\n\tXSprePUSH;\tEXTEND(SP,2);\n\tPUSHs(sv_newmortal());\n\tsv_setuv(ST(0), (UV)hFile);\n\tPUSHs(sv_newmortal());\n\tsv_setuv(ST(1), (UV)ulAction);\n    }\n    XSRETURN(2);\n}\n\nint\nXs_OS2_init(pTHX)\n{\n    char *file = __FILE__;\n    {\n\tGV *gv;\n\n\tif (_emx_env & 0x200) {\t/* OS/2 */\n            newXS(\"File::Copy::syscopy\", XS_File__Copy_syscopy, file);\n            newXS(\"Cwd::extLibpath\", XS_Cwd_extLibpath, file);\n            newXS(\"Cwd::extLibpath_set\", XS_Cwd_extLibpath_set, file);\n            newXS(\"OS2::extLibpath\", XS_Cwd_extLibpath, file);\n            newXS(\"OS2::extLibpath_set\", XS_Cwd_extLibpath_set, file);\n\t}\n        newXS(\"OS2::Error\", XS_OS2_Error, file);\n        newXS(\"OS2::Errors2Drive\", XS_OS2_Errors2Drive, file);\n        newXS(\"OS2::SysInfo\", XS_OS2_SysInfo, file);\n        newXSproto(\"OS2::DevCap\", XS_OS2_DevCap, file, \";$$\");\n        newXSproto(\"OS2::SysInfoFor\", XS_OS2_SysInfoFor, file, \"$;$\");\n        newXS(\"OS2::BootDrive\", XS_OS2_BootDrive, file);\n        newXS(\"OS2::MorphPM\", XS_OS2_MorphPM, file);\n        newXS(\"OS2::UnMorphPM\", XS_OS2_UnMorphPM, file);\n        newXS(\"OS2::Serve_Messages\", XS_OS2_Serve_Messages, file);\n        newXS(\"OS2::Process_Messages\", XS_OS2_Process_Messages, file);\n        newXS(\"DynaLoader::mod2fname\", XS_DynaLoader_mod2fname, file);\n        newXS(\"Cwd::current_drive\", XS_Cwd_current_drive, file);\n        newXS(\"Cwd::sys_chdir\", XS_Cwd_sys_chdir, file);\n        newXS(\"Cwd::change_drive\", XS_Cwd_change_drive, file);\n        newXS(\"Cwd::sys_is_absolute\", XS_Cwd_sys_is_absolute, file);\n        newXS(\"Cwd::sys_is_rooted\", XS_Cwd_sys_is_rooted, file);\n        newXS(\"Cwd::sys_is_relative\", XS_Cwd_sys_is_relative, file);\n        newXS(\"Cwd::sys_cwd\", XS_Cwd_sys_cwd, file);\n        newXS(\"Cwd::sys_abspath\", XS_Cwd_sys_abspath, file);\n        newXS(\"OS2::replaceModule\", XS_OS2_replaceModule, file);\n        newXS(\"OS2::perfSysCall\", XS_OS2_perfSysCall, file);\n        newXSproto(\"OS2::_control87\", XS_OS2__control87, file, \"$$\");\n        newXSproto(\"OS2::get_control87\", XS_OS2_get_control87, file, \"\");\n        newXSproto(\"OS2::set_control87\", XS_OS2_set_control87, file, \";$$\");\n        newXSproto(\"OS2::DLLname\", XS_OS2_DLLname, file, \";$$\");\n        newXSproto(\"OS2::mytype\", XS_OS2_mytype, file, \";$\");\n        newXSproto(\"OS2::mytype_set\", XS_OS2_mytype_set, file, \"$\");\n        newXSproto(\"OS2::_headerInfo\", XS_OS2__headerInfo, file, \"$$;$$\");\n        newXSproto(\"OS2::libPath\", XS_OS2_libPath, file, \"\");\n        newXSproto(\"OS2::Timer\", XS_OS2_Timer, file, \"\");\n        newXSproto(\"OS2::msCounter\", XS_OS2_msCounter, file, \"\");\n        newXSproto(\"OS2::ms_sleep\", XS_OS2_ms_sleep, file, \"$;$\");\n        newXSproto(\"OS2::_InfoTable\", XS_OS2__InfoTable, file, \";$\");\n        newXSproto(\"OS2::incrMaxFHandles\", XS_OS2_incrMaxFHandles, file, \";$\");\n        newXSproto(\"OS2::SysValues\", XS_OS2_SysValues, file, \";$$\");\n        newXSproto(\"OS2::SysValues_set\", XS_OS2_SysValues_set, file, \"$$;$\");\n        newXSproto(\"OS2::Beep\", XS_OS2_Beep, file, \";$$\");\n        newXSproto(\"OS2::pipe\", XS_OS2_pipe, file, \"$$;$$$$$$\");\n        newXSproto(\"OS2::pipeCntl\", XS_OS2_pipeCntl, file, \"$$;$\");\n        newXSproto(\"OS2::open\", XS_OS2_open, file, \"$$;$$$$\");\n\tgv = gv_fetchpv(\"OS2::is_aout\", TRUE, SVt_PV);\n\tGvMULTI_on(gv);\n#ifdef PERL_IS_AOUT\n\tsv_setiv(GvSV(gv), 1);\n#endif\n\tgv = gv_fetchpv(\"OS2::is_static\", TRUE, SVt_PV);\n\tGvMULTI_on(gv);\n#ifdef PERL_IS_AOUT\n\tsv_setiv(GvSV(gv), 1);\n#endif\n\tgv = gv_fetchpv(\"OS2::can_fork\", TRUE, SVt_PV);\n\tGvMULTI_on(gv);\n\tsv_setiv(GvSV(gv), exe_is_aout());\n\tgv = gv_fetchpv(\"OS2::emx_rev\", TRUE, SVt_PV);\n\tGvMULTI_on(gv);\n\tsv_setiv(GvSV(gv), _emx_rev);\n\tsv_setpv(GvSV(gv), _emx_vprt);\n\tSvIOK_on(GvSV(gv));\n\tgv = gv_fetchpv(\"OS2::emx_env\", TRUE, SVt_PV);\n\tGvMULTI_on(gv);\n\tsv_setiv(GvSV(gv), _emx_env);\n\tgv = gv_fetchpv(\"OS2::os_ver\", TRUE, SVt_PV);\n\tGvMULTI_on(gv);\n\tsv_setnv(GvSV(gv), _osmajor + 0.001 * _osminor);\n\tgv = gv_fetchpv(\"OS2::nsyserror\", TRUE, SVt_PV);\n\tGvMULTI_on(gv);\n\tsv_setiv(GvSV(gv), 1);\t\t/* DEFAULT: Show number on syserror */\n    }\n    return 0;\n}\n\nextern void _emx_init(void*);\n\nstatic void jmp_out_of_atexit(void);\n\n#define FORCE_EMX_INIT_CONTRACT_ARGV\t1\n#define FORCE_EMX_INIT_INSTALL_ATEXIT\t2\n\nstatic void\nmy_emx_init(void *layout) {\n    static volatile void *old_esp = 0;\t/* Cannot be on stack! */\n\n    /* Can't just call emx_init(), since it moves the stack pointer */\n    /* It also busts a lot of registers, so be extra careful */\n    __asm__(\t\"pushf\\n\"\n\t\t\"pusha\\n\"\n\t\t\"movl %%esp, %1\\n\"\n\t\t\"push %0\\n\"\n\t\t\"call __emx_init\\n\"\n\t\t\"movl %1, %%esp\\n\"\n\t\t\"popa\\n\"\n\t\t\"popf\\n\" : : \"r\" (layout), \"m\" (old_esp)\t);\n}\n\nstruct layout_table_t {\n    ULONG text_base;\n    ULONG text_end;\n    ULONG data_base;\n    ULONG data_end;\n    ULONG bss_base;\n    ULONG bss_end;\n    ULONG heap_base;\n    ULONG heap_end;\n    ULONG heap_brk;\n    ULONG heap_off;\n    ULONG os2_dll;\n    ULONG stack_base;\n    ULONG stack_end;\n    ULONG flags;\n    ULONG reserved[2];\n    char options[64];\n};\n\nstatic ULONG\nmy_os_version() {\n    static ULONG osv_res;\t\t/* Cannot be on stack! */\n\n    /* Can't just call __os_version(), since it does not follow C\n       calling convention: it busts a lot of registers, so be extra careful */\n    __asm__(\t\"pushf\\n\"\n\t\t\"pusha\\n\"\n\t\t\"call ___os_version\\n\"\n\t\t\"movl %%eax, %0\\n\"\n\t\t\"popa\\n\"\n\t\t\"popf\\n\" : \"=m\" (osv_res)\t);\n\n    return osv_res;\n}\n\nstatic void\nforce_init_emx_runtime(EXCEPTIONREGISTRATIONRECORD *preg, ULONG flags)\n{\n    /* Calling emx_init() will bust the top of stack: it installs an\n       exception handler and puts argv data there. */\n    char *oldarg, *oldenv;\n    void *oldstackend, *oldstack;\n    PPIB pib;\n    PTIB tib;\n    ULONG rc, error = 0, out;\n    char buf[512];\n    static struct layout_table_t layout_table;\n    struct {\n\tchar buf[48*1024]; /* _emx_init() requires 32K, cmd.exe has 64K only */\n\tdouble alignment1;\n\tEXCEPTIONREGISTRATIONRECORD xreg;\n    } *newstack;\n    char *s;\n\n    layout_table.os2_dll = (ULONG)&os2_dll_fake;\n    layout_table.flags   = 0x02000002;\t/* flags: application, OMF */\n\n    DosGetInfoBlocks(&tib, &pib);\n    oldarg = pib->pib_pchcmd;\n    oldenv = pib->pib_pchenv;\n    oldstack = tib->tib_pstack;\n    oldstackend = tib->tib_pstacklimit;\n\n    if ( (char*)&s < (char*)oldstack + 4*1024 \n\t || (char *)oldstackend < (char*)oldstack + 52*1024 )\n\tearly_error(\"It is a lunacy to try to run EMX Perl \",\n\t\t    \"with less than 64K of stack;\\r\\n\",\n\t\t    \"  at least with non-EMX starter...\\r\\n\");\n\n    /* Minimize the damage to the stack via reducing the size of argv. */\n    if (flags & FORCE_EMX_INIT_CONTRACT_ARGV) {\n\tpib->pib_pchcmd = \"\\0\\0\";\t/* Need 3 concatenated strings */\n\tpib->pib_pchcmd = \"\\0\";\t\t/* Ended by an extra \\0. */\n    }\n\n    newstack = alloca(sizeof(*newstack));\n    /* Emulate the stack probe */\n    s = ((char*)newstack) + sizeof(*newstack);\n    while (s > (char*)newstack) {\n\ts[-1] = 0;\n\ts -= 4096;\n    }\n\n    /* Reassigning stack is documented to work */\n    tib->tib_pstack = (void*)newstack;\n    tib->tib_pstacklimit = (void*)((char*)newstack + sizeof(*newstack));\n\n    /* Can't just call emx_init(), since it moves the stack pointer */\n    my_emx_init((void*)&layout_table);\n\n    /* Remove the exception handler, cannot use it - too low on the stack.\n       Check whether it is inside the new stack.  */\n    buf[0] = 0;\n    if (tib->tib_pexchain >= tib->tib_pstacklimit\n\t|| tib->tib_pexchain < tib->tib_pstack) {\n\terror = 1;\n\tsprintf(buf,\n\t\t\"panic: ExceptionHandler misplaced: not %#lx <= %#lx < %#lx\\n\",\n\t\t(unsigned long)tib->tib_pstack,\n\t\t(unsigned long)tib->tib_pexchain,\n\t\t(unsigned long)tib->tib_pstacklimit);\t\n\tgoto finish;\n    }\n    if (tib->tib_pexchain != &(newstack->xreg)) {\n\tsprintf(buf, \"ExceptionHandler misplaced: %#lx != %#lx\\n\",\n\t\t(unsigned long)tib->tib_pexchain,\n\t\t(unsigned long)&(newstack->xreg));\t\n    }\n    rc = DosUnsetExceptionHandler((EXCEPTIONREGISTRATIONRECORD *)tib->tib_pexchain);\n    if (rc)\n\tsprintf(buf + strlen(buf), \n\t\t\"warning: DosUnsetExceptionHandler rc=%#lx=%lu\\n\", rc, rc);\n\n    if (preg) {\n\t/* ExceptionRecords should be on stack, in a correct order.  Sigh... */\n\tpreg->prev_structure = 0;\n\tpreg->ExceptionHandler = _emx_exception;\n\trc = DosSetExceptionHandler(preg);\n\tif (rc) {\n\t    sprintf(buf + strlen(buf),\n\t\t    \"warning: DosSetExceptionHandler rc=%#lx=%lu\\n\", rc, rc);\n\t    DosWrite(2, buf, strlen(buf), &out);\n\t    emx_exception_init = 1;\t/* Do it around spawn*() calls */\n\t}\n    } else\n\temx_exception_init = 1;\t\t/* Do it around spawn*() calls */\n\n  finish:\n    /* Restore the damage */\n    pib->pib_pchcmd = oldarg;\n    pib->pib_pchcmd = oldenv;\n    tib->tib_pstacklimit = oldstackend;\n    tib->tib_pstack = oldstack;\n    emx_runtime_init = 1;\n    if (buf[0])\n\tDosWrite(2, buf, strlen(buf), &out);\n    if (error)\n\texit(56);\n}\n\nstatic void\njmp_out_of_atexit(void)\n{\n    if (longjmp_at_exit)\n\tlongjmp(at_exit_buf, 1);\n}\n\nextern void _CRT_term(void);\n\nvoid\nPerl_OS2_term(void **p, int exitstatus, int flags)\n{\n    if (!emx_runtime_secondary)\n\treturn;\n\n    /* The principal executable is not running the same CRTL, so there\n       is nobody to shutdown *this* CRTL except us... */\n    if (flags & FORCE_EMX_DEINIT_EXIT) {\n\tif (p && !emx_exception_init)\n\t    DosUnsetExceptionHandler((EXCEPTIONREGISTRATIONRECORD *)p);\n\t/* Do not run the executable's CRTL's termination routines */\n\texit(exitstatus);\t\t/* Run at-exit, flush buffers, etc */\n    }\n    /* Run at-exit list, and jump out at the end */\n    if ((flags & FORCE_EMX_DEINIT_RUN_ATEXIT) && !setjmp(at_exit_buf)) {\n\tlongjmp_at_exit = 1;\n\texit(exitstatus);\t\t/* The first pass through \"if\" */\n    }\n\n    /* Get here if we managed to jump out of exit(), or did not run atexit. */\n    longjmp_at_exit = 0;\t\t/* Maybe exit() is called again? */\n#if 0 /* _atexit_n is not exported */\n    if (flags & FORCE_EMX_DEINIT_RUN_ATEXIT)\n\t_atexit_n = 0;\t\t\t/* Remove the atexit() handlers */\n#endif\n    /* Will segfault on program termination if we leave this dangling... */\n    if (p && !emx_exception_init)\n\tDosUnsetExceptionHandler((EXCEPTIONREGISTRATIONRECORD *)p);\n    /* Typically there is no need to do this, done from _DLL_InitTerm() */\n    if (flags & FORCE_EMX_DEINIT_CRT_TERM)\n\t_CRT_term();\t\t\t/* Flush buffers, etc. */\n    /* Now it is a good time to call exit() in the caller's CRTL... */\n}\n\n#include <emx/startup.h>\n\nextern ULONG __os_version();\t\t/* See system.doc */\n\nvoid\ncheck_emx_runtime(char **env, EXCEPTIONREGISTRATIONRECORD *preg)\n{\n    ULONG v_crt, v_emx, count = 0, rc = NO_ERROR, rc1, maybe_inited = 0;\n    static HMTX hmtx_emx_init = NULLHANDLE;\n    static int emx_init_done = 0;\n\n    /*  If _environ is not set, this code sits in a DLL which\n\tuses a CRT DLL which not compatible with the executable's\n\tCRT library.  Some parts of the DLL are not initialized.\n     */\n    if (_environ != NULL)\n\treturn;\t\t\t\t/* Properly initialized */\n\n    /* It is not DOS, so we may use OS/2 API now */\n    /* Some data we manipulate is static; protect ourselves from\n       calling the same API from a different thread. */\n    DosEnterMustComplete(&count);\n\n    rc1 = DosEnterCritSec();\n    if (!hmtx_emx_init)\n\trc = DosCreateMutexSem(NULL, &hmtx_emx_init, 0, TRUE); /*Create owned*/\n    else\n\tmaybe_inited = 1;\n\n    if (rc != NO_ERROR)\n\thmtx_emx_init = NULLHANDLE;\n\n    if (rc1 == NO_ERROR)\n\tDosExitCritSec();\n    DosExitMustComplete(&count);\n\n    while (maybe_inited) { /* Other thread did or is doing the same now */\n\tif (emx_init_done)\n\t    return;\n\trc = DosRequestMutexSem(hmtx_emx_init,\n\t\t\t\t(ULONG) SEM_INDEFINITE_WAIT);  /* Timeout (none) */\n\tif (rc == ERROR_INTERRUPT)\n\t    continue;\n\tif (rc != NO_ERROR) {\n\t    char buf[80];\n\t    ULONG out;\n\n\t    sprintf(buf,\n\t\t    \"panic: EMX backdoor init: DosRequestMutexSem error: %lu=%#lx\\n\", rc, rc);\t    \n\t    DosWrite(2, buf, strlen(buf), &out);\n\t    return;\n\t}\n\tDosReleaseMutexSem(hmtx_emx_init);\n\treturn;\n    }\n\n    /*  If the executable does not use EMX.DLL, EMX.DLL is not completely\n\tinitialized either.  Uninitialized EMX.DLL returns 0 in the low\n\tnibble of __os_version().  */\n    v_emx = my_os_version();\n\n    /*\t_osmajor and _osminor are normally set in _DLL_InitTerm of CRT DLL\n\t(=>_CRT_init=>_entry2) via a call to __os_version(), then\n\treset when the EXE initialization code calls _text=>_init=>_entry2.\n\tThe first time they are wrongly set to 0; the second time the\n\tEXE initialization code had already called emx_init=>initialize1\n\twhich correctly set version_major, version_minor used by\n\t__os_version().  */\n    v_crt = (_osmajor | _osminor);\n\n    if ((_emx_env & 0x200) && !(v_emx & 0xFFFF)) {\t/* OS/2, EMX uninit. */ \n\tforce_init_emx_runtime( preg,\n\t\t\t\tFORCE_EMX_INIT_CONTRACT_ARGV \n\t\t\t\t| FORCE_EMX_INIT_INSTALL_ATEXIT );\n\temx_wasnt_initialized = 1;\n\t/* Update CRTL data basing on now-valid EMX runtime data */\n\tif (!v_crt) {\t\t/* The only wrong data are the versions. */\n\t    v_emx = my_os_version();\t\t\t/* *Now* it works */\n\t    *(unsigned char *)&_osmajor = v_emx & 0xFF;\t/* Cast out const */\n\t    *(unsigned char *)&_osminor = (v_emx>>8) & 0xFF;\n\t}\n    }\n    emx_runtime_secondary = 1;\n    /* if (flags & FORCE_EMX_INIT_INSTALL_ATEXIT) */\n    atexit(jmp_out_of_atexit);\t\t/* Allow run of atexit() w/o exit()  */\n\n    if (env == NULL) {\t\t\t/* Fetch from the process info block */\n\tint c = 0;\n\tPPIB pib;\n\tPTIB tib;\n\tchar *e, **ep;\n\n\tDosGetInfoBlocks(&tib, &pib);\n\te = pib->pib_pchenv;\n\twhile (*e) {\t\t\t/* Get count */\n\t    c++;\n\t    e = e + strlen(e) + 1;\n\t}\n\tNewx(env, c + 1, char*);\n\tep = env;\n\te = pib->pib_pchenv;\n\twhile (c--) {\n\t    *ep++ = e;\n\t    e = e + strlen(e) + 1;\n\t}\n\t*ep = NULL;\n    }\n    _environ = _org_environ = env;\n    emx_init_done = 1;\n    if (hmtx_emx_init)\n\tDosReleaseMutexSem(hmtx_emx_init);\n}\n\n#define ENTRY_POINT 0x10000\n\nstatic int\nexe_is_aout(void)\n{\n    struct layout_table_t *layout;\n    if (emx_wasnt_initialized)\n\treturn 0;\n    /* Now we know that the principal executable is an EMX application \n       - unless somebody did already play with delayed initialization... */\n    /* With EMX applications to determine whether it is AOUT one needs\n       to examine the start of the executable to find \"layout\" */\n    if ( *(unsigned char*)ENTRY_POINT != 0x68\t\t/* PUSH n */\n\t || *(unsigned char*)(ENTRY_POINT+5) != 0xe8\t/* CALL */\n\t || *(unsigned char*)(ENTRY_POINT+10) != 0xeb\t/* JMP */\n\t || *(unsigned char*)(ENTRY_POINT+12) != 0xe8)\t/* CALL */\n\treturn 0;\t\t\t\t\t/* ! EMX executable */\n    /* Fix alignment */\n    Copy((char*)(ENTRY_POINT+1), &layout, 1, struct layout_table_t*);\n    return !(layout->flags & 2);\t\t\t\n}\n\nvoid\nPerl_OS2_init(char **env)\n{\n    Perl_OS2_init3(env, 0, 0);\n}\n\nvoid\nPerl_OS2_init3(char **env, void **preg, int flags)\n{\n    char *shell, *s;\n    ULONG rc;\n\n    _uflags (_UF_SBRK_MODEL, _UF_SBRK_ARBITRARY);\n    MALLOC_INIT;\n\n    check_emx_runtime(env, (EXCEPTIONREGISTRATIONRECORD *)preg);\n\n    settmppath();\n    OS2_Perl_data.xs_init = &Xs_OS2_init;\n    if (perl_sh_installed) {\n\tint l = strlen(perl_sh_installed);\n\n\tNewx(PL_sh_path, l + 1, char);\n\tmemcpy(PL_sh_path, perl_sh_installed, l + 1);\n    } else if ( (shell = getenv(\"PERL_SH_DRIVE\")) ) {\n\tNewx(PL_sh_path, strlen(SH_PATH) + 1, char);\n\tstrcpy(PL_sh_path, SH_PATH);\n\tPL_sh_path[0] = shell[0];\n    } else if ( (shell = getenv(\"PERL_SH_DIR\")) ) {\n\tint l = strlen(shell), i;\n\n\twhile (l && (shell[l-1] == '/' || shell[l-1] == '\\\\'))\n\t    l--;\n\tNewx(PL_sh_path, l + 8, char);\n\tstrncpy(PL_sh_path, shell, l);\n\tstrcpy(PL_sh_path + l, \"/sh.exe\");\n\tfor (i = 0; i < l; i++) {\n\t    if (PL_sh_path[i] == '\\\\') PL_sh_path[i] = '/';\n\t}\n    }\n    MUTEX_INIT(&start_thread_mutex);\n    MUTEX_INIT(&perlos2_state_mutex);\n    os2_mytype = my_type();\t\t/* Do it before morphing.  Needed? */\n    os2_mytype_ini = os2_mytype;\n    Perl_os2_initial_mode = -1;\t\t/* Uninit */\n\n    s = getenv(\"PERL_BEGINLIBPATH\");\n    if (s)\n      rc = fill_extLibpath(0, s, NULL, 1, \"PERL_BEGINLIBPATH\");\n    else\n      rc = fill_extLibpath(0, getenv(\"PERL_PRE_BEGINLIBPATH\"), getenv(\"PERL_POST_BEGINLIBPATH\"), 0, \"PERL_(PRE/POST)_BEGINLIBPATH\");\n    if (!rc) {\n\ts = getenv(\"PERL_ENDLIBPATH\");\n\tif (s)\n\t    rc = fill_extLibpath(1, s, NULL, 1, \"PERL_ENDLIBPATH\");\n\telse\n\t    rc = fill_extLibpath(1, getenv(\"PERL_PRE_ENDLIBPATH\"), getenv(\"PERL_POST_ENDLIBPATH\"), 0, \"PERL_(PRE/POST)_ENDLIBPATH\");\n    }\n    if (rc) {\n\tchar buf[1024];\n\n\tsnprintf(buf, sizeof buf, \"Error setting BEGIN/ENDLIBPATH: %s\\n\",\n\t\t os2error(rc));\n\tDosWrite(2, buf, strlen(buf), &rc);\n\texit(2);\n    }\n\n    _emxload_env(\"PERL_EMXLOAD_SECS\");\n    /* Some DLLs reset FP flags on load.  We may have been linked with them */\n    _control87(MCW_EM, MCW_EM);\n}\n\nint\nfd_ok(int fd)\n{\n    static ULONG max_fh = 0;\n\n    if (!(_emx_env & 0x200)) return 1;\t\t/* not OS/2. */\n    if (fd >= max_fh) {\t\t\t\t/* Renew */\n\tLONG delta = 0;\n\n\tif (DosSetRelMaxFH(&delta, &max_fh))\t/* Assume it OK??? */\n\t    return 1;\n    }\n    return fd < max_fh;\n}\n\n/* Kernels up to Oct 2003 trap on (invalid) dup(max_fh); [off-by-one + double fault].  */\nint\ndup2(int from, int to)\n{\n    if (fd_ok(from < to ? to : from))\n\treturn _dup2(from, to);\n    errno = EBADF;\n    return -1;\n}\n\nint\ndup(int from)\n{\n    if (fd_ok(from))\n\treturn _dup(from);\n    errno = EBADF;\n    return -1;\n}\n\n#undef tmpnam\n#undef tmpfile\n\nchar *\nmy_tmpnam (char *str)\n{\n    char *p = getenv(\"TMP\"), *tpath;\n\n    if (!p) p = getenv(\"TEMP\");\n    tpath = tempnam(p, \"pltmp\");\n    if (str && tpath) {\n\tstrcpy(str, tpath);\n\treturn str;\n    }\n    return tpath;\n}\n\nFILE *\nmy_tmpfile ()\n{\n    struct stat s;\n\n    stat(\".\", &s);\n    if (s.st_mode & S_IWOTH) {\n\treturn tmpfile();\n    }\n    return fopen(my_tmpnam(NULL), \"w+b\"); /* Race condition, but\n\t\t\t\t\t     grants TMP. */\n}\n\n#undef rmdir\n\n/* EMX flavors do not tolerate trailing slashes.  t/op/mkdir.t has many\n   trailing slashes, so we need to support this as well. */\n\nint\nmy_rmdir (__const__ char *s)\n{\n    char b[MAXPATHLEN];\n    char *buf = b;\n    STRLEN l = strlen(s);\n    int rc;\n\n    if (s[l-1] == '/' || s[l-1] == '\\\\') {\t/* EMX mkdir fails... */\n\tif (l >= sizeof b)\n\t    Newx(buf, l + 1, char);\n\tstrcpy(buf,s);\n\twhile (l > 1 && (s[l-1] == '/' || s[l-1] == '\\\\'))\n\t    l--;\n\tbuf[l] = 0;\n\ts = buf;\n    }\n    rc = rmdir(s);\n    if (b != buf)\n\tSafefree(buf);\n    return rc;\n}\n\n#undef mkdir\n\nint\nmy_mkdir (__const__ char *s, long perm)\n{\n    char b[MAXPATHLEN];\n    char *buf = b;\n    STRLEN l = strlen(s);\n    int rc;\n\n    if (s[l-1] == '/' || s[l-1] == '\\\\') {\t/* EMX mkdir fails... */\n\tif (l >= sizeof b)\n\t    Newx(buf, l + 1, char);\n\tstrcpy(buf,s);\n\twhile (l > 1 && (s[l-1] == '/' || s[l-1] == '\\\\'))\n\t    l--;\n\tbuf[l] = 0;\n\ts = buf;\n    }\n    rc = mkdir(s, perm);\n    if (b != buf)\n\tSafefree(buf);\n    return rc;\n}\n\n#undef flock\n\n/* This code was contributed by Rocco Caputo. */\nint \nmy_flock(int handle, int o)\n{\n  FILELOCK      rNull, rFull;\n  ULONG         timeout, handle_type, flag_word;\n  APIRET        rc;\n  int           blocking, shared;\n  static int\tuse_my_flock = -1;\n\n  if (use_my_flock == -1) {\n   MUTEX_LOCK(&perlos2_state_mutex);\n   if (use_my_flock == -1) {\n    char *s = getenv(\"USE_PERL_FLOCK\");\n    if (s)\n\tuse_my_flock = atoi(s);\n    else \n\tuse_my_flock = 1;\n   }\n   MUTEX_UNLOCK(&perlos2_state_mutex);\n  }\n  if (!(_emx_env & 0x200) || !use_my_flock) \n    return flock(handle, o);\t/* Delegate to EMX. */\n  \n                                        /* is this a file? */\n  if ((DosQueryHType(handle, &handle_type, &flag_word) != 0) ||\n      (handle_type & 0xFF))\n  {\n    errno = EBADF;\n    return -1;\n  }\n                                        /* set lock/unlock ranges */\n  rNull.lOffset = rNull.lRange = rFull.lOffset = 0;\n  rFull.lRange = 0x7FFFFFFF;\n                                        /* set timeout for blocking */\n  timeout = ((blocking = !(o & LOCK_NB))) ? 100 : 1;\n                                        /* shared or exclusive? */\n  shared = (o & LOCK_SH) ? 1 : 0;\n                                        /* do not block the unlock */\n  if (o & (LOCK_UN | LOCK_SH | LOCK_EX)) {\n    rc = DosSetFileLocks(handle, &rFull, &rNull, timeout, shared);\n    switch (rc) {\n      case 0:\n        errno = 0;\n        return 0;\n      case ERROR_INVALID_HANDLE:\n        errno = EBADF;\n        return -1;\n      case ERROR_SHARING_BUFFER_EXCEEDED:\n        errno = ENOLCK;\n        return -1;\n      case ERROR_LOCK_VIOLATION:\n        break;                          /* not an error */\n      case ERROR_INVALID_PARAMETER:\n      case ERROR_ATOMIC_LOCK_NOT_SUPPORTED:\n      case ERROR_READ_LOCKS_NOT_SUPPORTED:\n        errno = EINVAL;\n        return -1;\n      case ERROR_INTERRUPT:\n        errno = EINTR;\n        return -1;\n      default:\n        errno = EINVAL;\n        return -1;\n    }\n  }\n                                        /* lock may block */\n  if (o & (LOCK_SH | LOCK_EX)) {\n                                        /* for blocking operations */\n    for (;;) {\n      rc =\n        DosSetFileLocks(\n                handle,\n                &rNull,\n                &rFull,\n                timeout,\n                shared\n        );\n      switch (rc) {\n        case 0:\n          errno = 0;\n          return 0;\n        case ERROR_INVALID_HANDLE:\n          errno = EBADF;\n          return -1;\n        case ERROR_SHARING_BUFFER_EXCEEDED:\n          errno = ENOLCK;\n          return -1;\n        case ERROR_LOCK_VIOLATION:\n          if (!blocking) {\n            errno = EWOULDBLOCK;\n            return -1;\n          }\n          break;\n        case ERROR_INVALID_PARAMETER:\n        case ERROR_ATOMIC_LOCK_NOT_SUPPORTED:\n        case ERROR_READ_LOCKS_NOT_SUPPORTED:\n          errno = EINVAL;\n          return -1;\n        case ERROR_INTERRUPT:\n          errno = EINTR;\n          return -1;\n        default:\n          errno = EINVAL;\n          return -1;\n      }\n                                        /* give away timeslice */\n      DosSleep(1);\n    }\n  }\n\n  errno = 0;\n  return 0;\n}\n\nstatic int\nuse_my_pwent(void)\n{\n  if (_my_pwent == -1) {\n    char *s = getenv(\"USE_PERL_PWENT\");\n    if (s)\n\t_my_pwent = atoi(s);\n    else \n\t_my_pwent = 1;\n  }\n  return _my_pwent;\n}\n\n#undef setpwent\n#undef getpwent\n#undef endpwent\n\nvoid\nmy_setpwent(void)\n{\n  if (!use_my_pwent()) {\n    setpwent();\t\t\t/* Delegate to EMX. */\n    return;\n  }\n  pwent_cnt = 0;\n}\n\nvoid\nmy_endpwent(void)\n{\n  if (!use_my_pwent()) {\n    endpwent();\t\t\t/* Delegate to EMX. */\n    return;\n  }\n}\n\nstruct passwd *\nmy_getpwent (void)\n{\n  if (!use_my_pwent())\n    return getpwent();\t\t\t/* Delegate to EMX. */\n  if (pwent_cnt++)\n    return 0;\t\t\t\t/* Return one entry only */\n  return getpwuid(0);\n}\n\nvoid\nsetgrent(void)\n{\n  grent_cnt = 0;\n}\n\nvoid\nendgrent(void)\n{\n}\n\nstruct group *\ngetgrent (void)\n{\n  if (grent_cnt++)\n    return 0;\t\t\t\t/* Return one entry only */\n  return getgrgid(0);\n}\n\n#undef getpwuid\n#undef getpwnam\n\n/* Too long to be a crypt() of anything, so it is not-a-valid pw_passwd. */\nstatic const char pw_p[] = \"Jf0Wb/BzMFvk7K7lrzK\";\n\nstatic struct passwd *\npassw_wrap(struct passwd *p)\n{\n    char *s;\n\n    if (!p || (p->pw_passwd && *p->pw_passwd)) /* Not a dangerous password */\n\treturn p;\n    pw = *p;\n    s = getenv(\"PW_PASSWD\");\n    if (!s)\n\ts = (char*)pw_p;\t\t/* Make match impossible */\n\n    pw.pw_passwd = s;\n    return &pw;    \n}\n\nstruct passwd *\nmy_getpwuid (uid_t id)\n{\n    return passw_wrap(getpwuid(id));\n}\n\nstruct passwd *\nmy_getpwnam (__const__ char *n)\n{\n    return passw_wrap(getpwnam(n));\n}\n\nchar *\ngcvt_os2 (double value, int digits, char *buffer)\n{\n  double absv = value > 0 ? value : -value;\n  /* EMX implementation is lousy between 0.1 and 0.0001 (uses exponents below\n     0.1), 1-digit stuff is ok below 0.001; multi-digit below 0.0001. */\n  int buggy;\n\n  absv *= 10000;\n  buggy = (absv < 1000 && (absv >= 10 || (absv > 1 && floor(absv) != absv)));\n  \n  if (buggy) {\n    char pat[12];\n\n    sprintf(pat, \"%%.%dg\", digits);\n    sprintf(buffer, pat, value);\n    return buffer;\n  }\n  return gcvt (value, digits, buffer);\n}\n\n#undef fork\nint fork_with_resources()\n{\n#if (defined(USE_5005THREADS) || defined(USE_ITHREADS)) && !defined(USE_SLOW_THREAD_SPECIFIC)\n  dTHX;\n  void *ctx = PERL_GET_CONTEXT;\n#endif\n  unsigned fpflag = _control87(0,0);\n  int rc = fork();\n\n  if (rc == 0) {\t\t\t/* child */\n#if (defined(USE_5005THREADS) || defined(USE_ITHREADS)) && !defined(USE_SLOW_THREAD_SPECIFIC)\n    ALLOC_THREAD_KEY;\t\t\t/* Acquire the thread-local memory */\n    PERL_SET_CONTEXT(ctx);\t\t/* Reinit the thread-local memory */\n#endif\n    \n    {\t\t\t\t\t/* Reload loaded-on-demand DLLs */\n\tstruct dll_handle_t *dlls = dll_handles;\n\n\twhile (dlls->modname) {\n\t    char dllname[260], fail[260];\n\t    ULONG rc;\n\n\t    if (!dlls->handle) {\t/* Was not loaded */\n\t\tdlls++;\n\t\tcontinue;\n\t    }\n\t    /* It was loaded in the parent.  We need to reload it. */\n\n\t    rc = DosQueryModuleName(dlls->handle, sizeof(dllname), dllname);\n\t    if (rc) {\n\t\tPerl_warn_nocontext(\"Can't find DLL name for the module `%s' by the handle %d, rc=%lu=%#lx\",\n\t\t\t\t    dlls->modname, (int)dlls->handle, rc, rc);\n\t\tdlls++;\n\t\tcontinue;\n\t    }\n\t    rc = DosLoadModule(fail, sizeof fail, dllname, &dlls->handle);\n\t    if (rc)\n\t\tPerl_warn_nocontext(\"Can't load DLL `%s', possible problematic module `%s'\",\n\t\t\t\t    dllname, fail);\n\t    dlls++;\n\t}\n    }\n    \n    {\t\t\t\t\t/* Support message queue etc. */\n\tos2_mytype = my_type();\n\t/* Apparently, subprocesses (in particular, fork()) do not\n\t   inherit the morphed state, so os2_mytype is the same as\n\t   os2_mytype_ini. */\n\n\tif (Perl_os2_initial_mode != -1\n\t    && Perl_os2_initial_mode != os2_mytype) {\n\t\t\t\t\t/* XXXX ??? */\n\t}\n    }\n    if (Perl_HAB_set)\n\t(void)_obtain_Perl_HAB;\n    if (Perl_hmq_refcnt) {\n\tif (my_type() != 3)\n\t    my_type_set(3);\n\tCreate_HMQ(Perl_hmq_servers != 0,\n\t\t   \"Cannot create a message queue on fork\");\n    }\n\n    /* We may have loaded some modules */\n    _control87(fpflag, MCW_EM); /* Some modules reset FP flags on (un)load */\n  }\n  return rc;\n}\n\n/* APIRET  APIENTRY DosGetInfoSeg(PSEL pselGlobal, PSEL pselLocal); */\n\nULONG _THUNK_FUNCTION(Dos16GetInfoSeg)(USHORT *pGlobal, USHORT *pLocal);\n\nAPIRET  APIENTRY\nmyDosGetInfoSeg(PGINFOSEG *pGlobal, PLINFOSEG *pLocal)\n{\n    APIRET rc;\n    USHORT gSel, lSel;\t\t/* Will not cross 64K boundary */\n\n    rc = ((USHORT)\n          (_THUNK_PROLOG (4+4);\n           _THUNK_FLAT (&gSel);\n           _THUNK_FLAT (&lSel);\n           _THUNK_CALL (Dos16GetInfoSeg)));\n    if (rc)\n\treturn rc;\n    *pGlobal = MAKEPGINFOSEG(gSel);\n    *pLocal  = MAKEPLINFOSEG(lSel);\n    return rc;\n}\n\nstatic void\nGetInfoTables(void)\n{\n    ULONG rc = 0;\n\n    MUTEX_LOCK(&perlos2_state_mutex);\n    if (!gTable)\n      rc = myDosGetInfoSeg(&gTable, &lTable);\n    MUTEX_UNLOCK(&perlos2_state_mutex);\n    os2cp_croak(rc, \"Dos16GetInfoSeg\");\n}\n\nULONG\nmsCounter(void)\n{\t\t\t\t/* XXXX Is not lTable thread-specific? */\n  if (!gTable)\n    GetInfoTables();\n  return gTable->SIS_MsCount;\n}\n\nULONG\nInfoTable(int local)\n{\n  if (!gTable)\n    GetInfoTables();\n  return local ? (ULONG)lTable : (ULONG)gTable;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/symbian/config.sh": "#!\\\\bin\\\\sh\nAuthor=''\n_a='.a'\n_o='.o'\nafs='false'\nafsroot='/afs'\nalignbytes='4'\naphostname='localhost'\napiversion='5.005'\nar=':'\narchlib='\\\\system\\\\libs\\\\perl\\\\x.y.z\\\\thumb-symbian'\narchlibexp='\\\\system\\\\libs\\\\perl\\\\x.y.z\\\\thumb-symbian'\narchname='thumb-symbian'\nasctime_r_proto='0'\nbin='\\\\system\\\\apps\\\\perl'\nbincompat5005='n'\nbinexp='\\\\system\\\\apps\\\\perl'\nbootstrap_charset='undef'\nbyteorder='1234'\ncastflags='0'\ncc='gcc'\ncccdlflags=''\nccdlflags=''\ncf_by='root@localhost'\ncf_time='Thu Jan  1 00:00:00 GMT 1970'\ncharbits='8'\nclocktype='clock_t'\ncpp_stuff='42'\ncpplast=''\ncppminus='-'\ncpprun='gcc -E'\ncppstdin='gcc -E'\ncrypt_r_proto='0'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\nd_PRIEUldbl='undef'\nd_PRIFUldbl='undef'\nd_PRIGUldbl='undef'\nd_PRIXU64='undef'\nd_PRId64='undef'\nd_PRIeldbl='undef'\nd_PRIfldbl='undef'\nd_PRIgldbl='undef'\nd_PRIi64='undef'\nd_PRIo64='undef'\nd_PRIu64='undef'\nd_PRIx64='undef'\nd_SCNfldbl='undef'\nd__fwalk='undef'\nd_accept4='undef'\nd_access='undef'\nd_accessx='undef'\nd_acosh='undef'\nd_aintl='undef'\nd_alarm='undef'\nd_archlib='define'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='undef'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bsd='undef'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_add_overflow='undef'\nd_builtin_choose_expr='undef'\nd_builtin_expect='undef'\nd_builtin_mul_overflow='undef'\nd_builtin_sub_overflow='undef'\nd_c99_variadic_macros='undef'\nd_casti32='undef'\nd_castneg='undef'\nd_cbrt='undef'\nd_chown='undef'\nd_chroot='undef'\nd_chsize='undef'\nd_class='undef'\nd_clearenv='undef'\nd_closedir='undef'\nd_cmsghdr_s='undef'\nd_copysign='undef'\nd_copysignl='undef'\nd_cplusplus='undef'\nd_crypt='undef'\nd_crypt_r='undef'\nd_csh='undef'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='undef'\nd_dbl_dig='undef'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='undef'\nd_dir_dd_fd='undef'\nd_dirfd='undef'\nd_dirnamlen='define'\nd_dladdr='undef'\nd_dlerror='undef'\nd_dlopen='undef'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_double_has_inf='define'\nd_double_has_nan='define'\nd_double_has_negative_zero='define'\nd_double_has_subnormals='define'\nd_double_style_cray='undef'\nd_double_style_ibm='undef'\nd_double_style_ieee='define'\nd_double_style_vax='undef'\nd_drand48_r='undef'\nd_drand48proto='undef'\nd_dup2='undef'\nd_dup3='undef'\nd_duplocale='undef'\nd_eaccess='undef'\nd_endgrent='undef'\nd_endgrent_r='undef'\nd_endhent='undef'\nd_endhostent_r='undef'\nd_endnent='undef'\nd_endnetent_r='undef'\nd_endpent='undef'\nd_endprotoent_r='undef'\nd_endpwent='undef'\nd_endpwent_r='undef'\nd_endsent='undef'\nd_endservent_r='undef'\nd_eofnblk='undef'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='undef'\nd_fchdir='undef'\nd_fchmod='undef'\nd_fchmodat='undef'\nd_fchown='undef'\nd_fcntl='undef'\nd_fcntl_can_lock='undef'\nd_fd_macros='undef'\nd_fd_set='undef'\nd_fdclose='undef'\nd_fdim='undef'\nd_fds_bits='undef'\nd_fegetround='undef'\nd_fgetpos='undef'\nd_finite='undef'\nd_finitel='undef'\nd_flexfnam='define'\nd_flock='undef'\nd_flockproto='undef'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='undef'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='undef'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_freelocale='undef'\nd_frexpl='undef'\nd_fs_data_s='undef'\nd_fseeko='undef'\nd_fsetpos='define'\nd_fstatfs='undef'\nd_fstatvfs='undef'\nd_fsync='undef'\nd_ftello='undef'\nd_ftime='undef'\nd_futimes='undef'\nd_futimesat='undef'\nd_gai_strerror='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='undef'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='undef'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='undef'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='define'\nd_getitimer='undef'\nd_getlogin='undef'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='undef'\nd_getnameinfo='undef'\nd_getnbyaddr='undef'\nd_getnbyname='undef'\nd_getnent='undef'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='undef'\nd_getpagsz='undef'\nd_getpbyname='define'\nd_getpbynumber='define'\nd_getpent='undef'\nd_getpgid='undef'\nd_getpgrp2='undef'\nd_getpgrp='undef'\nd_getppid='undef'\nd_getprior='undef'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='define'\nd_getprpwnam='undef'\nd_getpwent='undef'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='define'\nd_getsent='undef'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='define'\nd_getspent='undef'\nd_getspnam='undef'\nd_getspnam_r='undef'\nd_gettimeod='define'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='undef'\nd_grpasswd='undef'\nd_hasmntopt='undef'\nd_htonl='define'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='undef'\nd_inc_version_list='undef'\nd_index='undef'\nd_inetaton='undef'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='undef'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='undef'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='undef'\nd_isinfl='undef'\nd_isless='undef'\nd_isnan='undef'\nd_isnanl='undef'\nd_isnormal='undef'\nd_j0='undef'\nd_j0l='undef'\nd_killpg='undef'\nd_lc_monetary_2008='undef'\nd_lchown='undef'\nd_ldbl_dig='undef'\nd_ldexpl='undef'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='undef'\nd_link='undef'\nd_linkat='undef'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localeconv_l='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='undef'\nd_lockf='undef'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_long_double_style_ieee='undef'\nd_long_double_style_ieee_doubledouble='undef'\nd_long_double_style_ieee_extended='undef'\nd_long_double_style_ieee_std='undef'\nd_long_double_style_vax='undef'\nd_longdbl='undef'\nd_longlong='undef'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='undef'\nd_lstat='undef'\nd_madvise='undef'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='undef'\nd_mbrlen='undef'\nd_mbrtowc='undef'\nd_mbstowcs='undef'\nd_mbtowc='undef'\nd_memmem='undef'\nd_memrchr='undef'\nd_mkdir='define'\nd_mkdtemp='undef'\nd_mkfifo='undef'\nd_mkostemp='undef'\nd_mkstemp='undef'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='undef'\nd_mmap='undef'\nd_modfl='undef'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='undef'\nd_msg='undef'\nd_msg_ctrunc='undef'\nd_msg_dontroute='undef'\nd_msg_oob='undef'\nd_msg_peek='undef'\nd_msg_proxy='undef'\nd_msgctl='undef'\nd_msgget='undef'\nd_msghdr_s='undef'\nd_msgrcv='undef'\nd_msgsnd='undef'\nd_msync='undef'\nd_munmap='undef'\nd_mymalloc='undef'\nd_nan='undef'\nd_nanosleep='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_newlocale='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='undef'\nd_nl_langinfo='undef'\nd_nv_preserves_uv='undef'\nd_nv_zero_is_allbits_zero='define'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='undef'\nd_openat='undef'\nd_pathconf='undef'\nd_pause='undef'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe2='undef'\nd_pipe='undef'\nd_poll='undef'\nd_portable='undef'\nd_prctl='undef'\nd_prctl_set_name='undef'\nd_printf_format_null='undef'\nd_procselfexe='undef'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='undef'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='undef'\nd_pwpasswd='undef'\nd_pwquota='undef'\nd_qgcvt='undef'\nd_quad='undef'\nd_querylocale='undef'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='undef'\nd_readv='undef'\nd_recvmsg='undef'\nd_regcomp='undef'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_renameat='undef'\nd_rewinddir='define'\nd_rint='undef'\nd_rmdir='define'\nd_round='undef'\nd_sbrkproto='undef'\nd_scalbn='undef'\nd_scalbnl='undef'\nd_sched_yield='undef'\nd_scm_rights='undef'\nd_seekdir='define'\nd_select='undef'\nd_sem='undef'\nd_semctl='undef'\nd_semctl_semid_ds='undef'\nd_semctl_semun='undef'\nd_semget='undef'\nd_semop='undef'\nd_sendmsg='undef'\nd_setegid='undef'\nd_seteuid='undef'\nd_setgrent='undef'\nd_setgrent_r='undef'\nd_setgrps='undef'\nd_sethent='undef'\nd_sethostent_r='undef'\nd_setitimer='undef'\nd_setlinebuf='undef'\nd_setlocale='undef'\nd_setlocale_accepts_any_locale_name='undef'\nd_setlocale_r='undef'\nd_setnent='undef'\nd_setnetent_r='undef'\nd_setpent='undef'\nd_setpgid='undef'\nd_setpgrp2='undef'\nd_setpgrp='undef'\nd_setprior='undef'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='undef'\nd_setpwent_r='undef'\nd_setregid='undef'\nd_setresgid='undef'\nd_setresuid='undef'\nd_setreuid='undef'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='undef'\nd_setservent_r='undef'\nd_setsid='undef'\nd_setvbuf='define'\nd_shm='undef'\nd_shmat='undef'\nd_shmatprototype='undef'\nd_shmctl='undef'\nd_shmdt='undef'\nd_shmget='undef'\nd_sigaction='undef'\nd_siginfo_si_addr='undef'\nd_siginfo_si_band='undef'\nd_siginfo_si_errno='undef'\nd_siginfo_si_pid='undef'\nd_siginfo_si_status='undef'\nd_siginfo_si_uid='undef'\nd_siginfo_si_value='undef'\nd_signbit='undef'\nd_sigprocmask='undef'\nd_sigsetjmp='undef'\nd_sin6_scope_id='undef'\nd_sitearch='define'\nd_sitecustomize='undef'\nd_sitecustomize='undef'\nd_snprintf='undef'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='define'\nd_socklen_t='undef'\nd_sockpair='undef'\nd_socks5_init='undef'\nd_sqrtl='undef'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='undef'\nd_statfs_f_flags='undef'\nd_statfs_s='undef'\nd_static_inline='undef'\nd_statvfs='undef'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='undef'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='undef'\nd_stdio_stream_array='undef'\nd_stdiobase='undef'\nd_stdstdio='undef'\nd_strcoll='undef'\nd_strerror_l='undef'\nd_strerror_r='undef'\nd_strftime='undef'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strnlen='undef'\nd_strtod='define'\nd_strtod_l='undef'\nd_strtol='define'\nd_strtold='undef'\nd_strtold_l='undef'\nd_strtoll='undef'\nd_strtoq='undef'\nd_strtoul='define'\nd_strtoull='undef'\nd_strtouq='undef'\nd_strxfrm='undef'\nd_suidsafe='undef'\nd_symlink='undef'\nd_syscall='undef'\nd_syscallproto='undef'\nd_sysconf='undef'\nd_sysernlst=''\nd_syserrlst='undef'\nd_system='define'\nd_tcgetpgrp='undef'\nd_tcsetpgrp='undef'\nd_telldir='define'\nd_telldirproto='define'\nd_tgamma='undef'\nd_thread_safe_nl_langinfo_l='undef'\nd_time='define'\nd_timegm='undef'\nd_times='define'\nd_tm_tm_gmtoff='undef'\nd_tm_tm_zone='undef'\nd_tmpnam_r='undef'\nd_towlower='undef'\nd_towupper='undef'\nd_trunc='undef'\nd_truncate='undef'\nd_truncl='undef'\nd_ttyname_r='undef'\nd_tzname='undef'\nd_u32align='define'\nd_ualarm='undef'\nd_umask='undef'\nd_uname='undef'\nd_union_semun='undef'\nd_unlinkat='undef'\nd_unordered='undef'\nd_unsetenv='undef'\nd_uselocale='undef'\nd_usleep='define'\nd_usleepproto='undef'\nd_ustat='undef'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='undef'\nd_voidtty=''\nd_vsnprintf='undef'\nd_wait4='undef'\nd_waitpid='undef'\nd_wcscmp='undef'\nd_wcstombs='undef'\nd_wcsxfrm='undef'\nd_wctomb='undef'\nd_writev='undef'\nd_xenix='undef'\ndb_hashtype='u_int32_t'\ndb_prefixtype='size_t'\ndb_version_major='0'\ndb_version_minor='0'\ndb_version_patch='0'\ndefault_inc_excludes_dot='undef'\ndirentrytype='struct dirent'\ndlext='dll'\ndlsrc='dl_symbian.xs'\ndoubleinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f'\ndoublekind='4'\ndoublemantbits='52'\ndoublenanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f'\ndoublesize='8'\ndrand01=\"((rand() & 0x7FFF) / (double) ((unsigned long)1 << 15))\"\ndrand48_r_proto='0'\ndtrace=''\neagain='EAGAIN'\nebcdic='undef'\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext='.exe'\nfflushNULL='undef'\nfflushall='undef'\nfirstmakefile='makefile'\nfpossize='4'\nfpostype=fpos_t\nfreetype=void\nfull_ar=':'\nfull_csh=':'\nfull_sed=':'\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"lu\"'\ngidsign='1'\ngidsize='4'\ngidtype=int\ngmtime_r_proto='0'\ngroupstype=int\nh_fcntl='false'\nh_sysfile='true'\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='int64_t'\ni8size='1'\ni8type='char'\ni_arpainet='undef'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='undef'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='undef'\ni_execinfo='undef'\ni_fcntl='define'\ni_fenv='undef'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='undef'\ni_ieeefp='undef'\ni_inttypes='undef'\ni_langinfo='undef'\ni_libutil='undef'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='undef'\ni_mallocmalloc='undef'\ni_mntent='undef'\ni_ndbm='undef'\ni_netdb='define'\ni_neterrno='undef'\ni_netinettcp='undef'\ni_niin='define'\ni_poll='undef'\ni_prot='undef'\ni_pthread='undef'\ni_pwd='define'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='undef'\ni_socks='undef'\ni_stdarg='define'\ni_stdbool='undef'\ni_stdint='undef'\ni_stdlib='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='undef'\ni_sysfile='undef'\ni_sysfilio='undef'\ni_sysin='undef'\ni_sysioctl='define'\ni_syslog='undef'\ni_sysmman='undef'\ni_sysmode='undef'\ni_sysmount='undef'\ni_sysndir='undef'\ni_sysparam='undef'\ni_syspoll='undef'\ni_sysresrc='undef'\ni_syssecrt='undef'\ni_sysselct='undef'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='undef'\ni_sysstatvfs='undef'\ni_systime='define'\ni_systimek='undef'\ni_systimes='define'\ni_systypes='define'\ni_sysuio='undef'\ni_sysun='undef'\ni_sysutsname='undef'\ni_sysvfs='undef'\ni_syswait='undef'\ni_termio='undef'\ni_termios='undef'\ni_time='define'\ni_unistd='define'\ni_ustat='undef'\ni_utime='undef'\ni_varargs='undef'\ni_varhdr='stdarg.h'\ni_vfork='undef'\ni_wchar='undef'\ni_wctype='undef'\ni_xlocale='undef'\nignore_versioned_solibs='y'\ninc_version_list=''\ninc_version_list_init='0'\ninstallprefix='\\\\system'\ninstallprefixexp='\\\\system'\ninstallsitearch='\\\\system\\\\libs\\\\perl\\\\siteperl\\\\x.y.z\\\\thumb-symbian'\ninstallsitelib='\\\\system\\\\libs\\\\perl\\\\siteperl\\\\x.y.z'\ninstallstyle='lib\\\\perl5'\ninstallusrbinperl='undef'\nintsize='4'\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nld=':'\nlddlflags=''\nldflags=''\nlib_ext='.a'\nlibc='stdlib'\nlibm_lib_version='0'\nlibperl='libperl.a'\nlocaltime_r_proto='0'\nlongdblinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'\nlongdblkind=0\nlongdblmantbits='64'\nlongdblnanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'\nlongdblsize=8\nlonglongsize=8\nlongsize='4'\nlseeksize=4\nlseektype=int\nmad='undef'\nmake='make'\nmalloctype='int*'\nmalloctype='void *'\nmmaptype='void *'\nmodetype='mode_t'\nmodetype=int\nmultiarch='undef'\nmyarchname='thumb-symbian'\nmyuname='symbian'\nneed_va_copy='undef'\nnetdb_hlen_type='int'\nnetdb_host_type='const char *'\nnetdb_name_type='const char *'\nnetdb_net_type='unsigned long'\nnroff='nroff'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='0'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvmantbits='52'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.o'\nold_pthread_create_joinable=''\noptimize='-O2'\norderlib='false'\nosname='symbian'\nosvers='7.0s'\notherlibdirs=''\npackage=''\npath_sep=';'\nperl_static_inline='static'\nphostname='hostname'\npidtype='int'\npm_apiversion='5.005'\nprivlib='\\\\system\\\\libs\\\\perl\\\\x.y.z'\nprivlibexp='\\\\system\\\\libs\\\\perl\\\\x.y.z'\nprocselfexe=''\nprototype='define'\nptrsize='4'\nquadkind='4'\nquadtype='int64_t'\nrandbits='48'\nrandfunc='drand48'\nrandom_r_proto='0'\nrandseedtype='int'\nranlib=':'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nsGMTIME_max='2147483647'\nsGMTIME_min='0'\nsLOCALTIME_max='2147483647'\nsLOCALTIME_min='0'\nsPRIEUldbl='\"llE\"'\nsPRIFUldbl='\"llF\"'\nsPRIGUldbl='\"llG\"'\nsPRIXU64='\"LX\"'\nsPRId64='\"Ld\"'\nsPRIeldbl=''\nsPRIfldbl=''\nsPRIgldbl=''\nsPRIi64='\"Li\"'\nsPRIo64='\"Lo\"'\nsPRIu64='\"Lu\"'\nsPRIx64='\"Lx\"'\nsSCNfldbl=''\nsched_yield='sched_yield()'\nscriptdir='\\\\system\\\\apps\\\\perl'\nscriptdirexp='\\\\system\\\\apps\\\\perl'\nsdkvers=''\nseedfunc='srand'\nselectminbits='32'\nselecttype=int\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh=':'\nshmattype='void *'\nshortsize=2\nsig_name_init='0'\nsig_num_init='0'\nsig_size='1'\nsignal_t=void\nsitearch='\\\\system\\\\libs\\\\perl\\\\siteperl\\\\x.y.z\\\\thumb-symbian'\nsitearchexp='\\\\system\\\\libs\\\\perl\\\\siteperl\\\\x.y.z\\\\thumb-symbian'\nsitelib='\\\\system\\\\libs\\\\perl\\\\siteperl\\\\x.y.z'\nsitelib_stem='\\\\system\\\\libs\\\\perl'\nsitelibexp='\\\\system\\\\libs\\\\perl\\\\siteperl\\\\x.y.z'\nsiteprefix='\\\\system'\nsiteprefixexp='\\\\system'\nsizesize=4\nsizetype=size_t\nso='o'\nsocksizetype='unsigned int'\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc=''\nssizetype=int\nst_ino_sign='1'\nst_ino_size='4'\nstartperl=''\nstdchar=char\nstdio_base='((fp)->_IO_read_base)'\nstdio_bufsiz='((fp)->_IO_read_end - (fp)->_IO_read_base)'\nstdio_cnt='((fp)->_IO_read_end - (fp)->_IO_read_ptr)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_IO_read_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\ntargetarch='thumb-symbian'\ntargetsh=':'\ntimetype=time_t\ntmpnam_r_proto='0'\ntouch='touch'\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='uint64_t'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"lu\"'\nuidsign='1'\nuidsize='4'\nuidtype=int\nuquadtype='uint64_t'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='undef'\nusedl='undef'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='undef'\nusekernprocpathname='undef'\nuselargefiles='undef'\nuselongdouble='undef'\nusemallocwrap='define'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='define'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='false'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='n'\nusevfork='false'\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvendorarch=''\nvendorarchexp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorprefix=''\nvendorprefixexp=''\nversion='x.y.z'\nversiononly='undef'\nxs_apiversion='5.008'\nzip=''\nPERL_CONFIG_SH='true'\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/pod/perl58delta.pod": "=head1 NAME\n\nperl58delta - what is new for perl v5.8.0\n\n=head1 DESCRIPTION\n\nThis document describes differences between the 5.6.0 release and\nthe 5.8.0 release.\n\nMany of the bug fixes in 5.8.0 were already seen in the 5.6.1\nmaintenance release since the two releases were kept closely\ncoordinated (while 5.8.0 was still called 5.7.something).\n\nChanges that were integrated into the 5.6.1 release are marked C<[561]>.\nMany of these changes have been further developed since 5.6.1 was released,\nthose are marked C<[561+]>.\n\nYou can see the list of changes in the 5.6.1 release (both from the\n5.005_03 release and the 5.6.0 release) by reading L<perl561delta>.\n\n=head1 Highlights In 5.8.0\n\n=over 4\n\n=item *\n\nBetter Unicode support\n\n=item *\n\nNew IO Implementation\n\n=item *\n\nNew Thread Implementation\n\n=item *\n\nBetter Numeric Accuracy\n\n=item *\n\nSafe Signals\n\n=item *\n\nMany New Modules\n\n=item *\n\nMore Extensive Regression Testing\n\n=back\n\n=head1 Incompatible Changes\n\n=head2 Binary Incompatibility\n\nB<Perl 5.8 is not binary compatible with earlier releases of Perl.>\n\nB<You have to recompile your XS modules.>\n\n(Pure Perl modules should continue to work.)\n\nThe major reason for the discontinuity is the new IO architecture\ncalled PerlIO.  PerlIO is the default configuration because without\nit many new features of Perl 5.8 cannot be used.  In other words:\nyou just have to recompile your modules containing XS code, sorry\nabout that.\n\nIn future releases of Perl, non-PerlIO aware XS modules may become\ncompletely unsupported.  This shouldn't be too difficult for module\nauthors, however: PerlIO has been designed as a drop-in replacement\n(at the source code level) for the stdio interface.\n\nDepending on your platform, there are also other reasons why\nwe decided to break binary compatibility, please read on.\n\n=head2 64-bit platforms and malloc\n\nIf your pointers are 64 bits wide, the Perl malloc is no longer being\nused because it does not work well with 8-byte pointers.  Also,\nusually the system mallocs on such platforms are much better optimized\nfor such large memory models than the Perl malloc.  Some memory-hungry\nPerl applications like the PDL don't work well with Perl's malloc.\nFinally, other applications than Perl (such as mod_perl) tend to prefer\nthe system malloc.  Such platforms include Alpha and 64-bit HPPA,\nMIPS, PPC, and Sparc.\n\n=head2 AIX Dynaloading\n\nThe AIX dynaloading now uses in AIX releases 4.3 and newer the native\ndlopen interface of AIX instead of the old emulated interface.  This\nchange will probably break backward compatibility with compiled\nmodules.  The change was made to make Perl more compliant with other\napplications like mod_perl which are using the AIX native interface.\n\n=head2 Attributes for C<my> variables now handled at run-time\n\nThe C<my EXPR : ATTRS> syntax now applies variable attributes at\nrun-time.  (Subroutine and C<our> variables still get attributes applied\nat compile-time.)  See L<attributes> for additional details.  In particular,\nhowever, this allows variable attributes to be useful for C<tie> interfaces,\nwhich was a deficiency of earlier releases.  Note that the new semantics\ndoesn't work with the Attribute::Handlers module (as of version 0.76).\n\n=head2 Socket Extension Dynamic in VMS\n\nThe Socket extension is now dynamically loaded instead of being\nstatically built in.  This may or may not be a problem with ancient\nTCP/IP stacks of VMS: we do not know since we weren't able to test\nPerl in such configurations.\n\n=head2 IEEE-format Floating Point Default on OpenVMS Alpha\n\nPerl now uses IEEE format (T_FLOAT) as the default internal floating\npoint format on OpenVMS Alpha, potentially breaking binary compatibility\nwith external libraries or existing data.  G_FLOAT is still available as\na configuration option.  The default on VAX (D_FLOAT) has not changed.\n\n=head2 New Unicode Semantics (no more C<use utf8>, almost)\n\nPreviously in Perl 5.6 to use Unicode one would say \"use utf8\" and\nthen the operations (like string concatenation) were Unicode-aware\nin that lexical scope.\n\nThis was found to be an inconvenient interface, and in Perl 5.8 the\nUnicode model has completely changed: now the \"Unicodeness\" is bound\nto the data itself, and for most of the time \"use utf8\" is not needed\nat all.  The only remaining use of \"use utf8\" is when the Perl script\nitself has been written in the UTF-8 encoding of Unicode.  (UTF-8 has\nnot been made the default since there are many Perl scripts out there\nthat are using various national eight-bit character sets, which would\nbe illegal in UTF-8.)\n\nSee L<perluniintro> for the explanation of the current model,\nand L<utf8> for the current use of the utf8 pragma.\n\n=head2 New Unicode Properties\n\nUnicode I<scripts> are now supported. Scripts are similar to (and superior\nto) Unicode I<blocks>. The difference between scripts and blocks is that\nscripts are the glyphs used by a language or a group of languages, while\nthe blocks are more artificial groupings of (mostly) 256 characters based\non the Unicode numbering.\n\nIn general, scripts are more inclusive, but not universally so. For\nexample, while the script C<Latin> includes all the Latin characters and\ntheir various diacritic-adorned versions, it does not include the various\npunctuation or digits (since they are not solely C<Latin>).\n\nA number of other properties are now supported, including C<\\p{L&}>,\nC<\\p{Any}> C<\\p{Assigned}>, C<\\p{Unassigned}>, C<\\p{Blank}> [561] and\nC<\\p{SpacePerl}> [561] (along with their C<\\P{...}> versions, of course).\nSee L<perlunicode> for details, and more additions.\n\nThe C<In> or C<Is> prefix to names used with the C<\\p{...}> and C<\\P{...}>\nare now almost always optional. The only exception is that a C<In> prefix\nis required to signify a Unicode block when a block name conflicts with a\nscript name. For example, C<\\p{Tibetan}> refers to the script, while\nC<\\p{InTibetan}> refers to the block. When there is no name conflict, you\ncan omit the C<In> from the block name (e.g. C<\\p{BraillePatterns}>), but\nto be safe, it's probably best to always use the C<In>).\n\n=head2 REF(...) Instead Of SCALAR(...)\n\nA reference to a reference now stringifies as \"REF(0x81485ec)\" instead\nof \"SCALAR(0x81485ec)\" in order to be more consistent with the return\nvalue of ref().\n\n=head2 pack/unpack D/F recycled\n\nThe undocumented pack/unpack template letters D/F have been recycled\nfor better use: now they stand for long double (if supported by the\nplatform) and NV (Perl internal floating point type).  (They used\nto be aliases for d/f, but you never knew that.)\n\n=head2 glob() now returns filenames in alphabetical order\n\nThe list of filenames from glob() (or <...>) is now by default sorted\nalphabetically to be csh-compliant (which is what happened before\nin most Unix platforms).  (bsd_glob() does still sort platform\nnatively, ASCII or EBCDIC, unless GLOB_ALPHASORT is specified.) [561]\n\n=head2 Deprecations\n\n=over 4\n\n=item *\n\nThe semantics of bless(REF, REF) were unclear and until someone proves\nit to make some sense, it is forbidden.\n\n=item *\n\nThe obsolete chat2 library that should never have been allowed\nto escape the laboratory has been decommissioned.\n\n=item *\n\nUsing chdir(\"\") or chdir(undef) instead of explicit chdir() is\ndoubtful.  A failure (think chdir(some_function()) can lead into\nunintended chdir() to the home directory, therefore this behaviour\nis deprecated.\n\n=item *\n\nThe builtin dump() function has probably outlived most of its\nusefulness.  The core-dumping functionality will remain in future\navailable as an explicit call to C<CORE::dump()>, but in future\nreleases the behaviour of an unqualified C<dump()> call may change.\n\n=item *\n\nThe very dusty examples in the eg/ directory have been removed.\nSuggestions for new shiny examples welcome but the main issue is that\nthe examples need to be documented, tested and (most importantly)\nmaintained.\n\n=item *\n\nThe (bogus) escape sequences \\8 and \\9 now give an optional warning\n(\"Unrecognized escape passed through\").  There is no need to \\-escape\nany C<\\w> character.\n\n=item *\n\nThe *glob{FILEHANDLE} is deprecated, use *glob{IO} instead.\n\n=item *\n\nThe C<package;> syntax (C<package> without an argument) has been\ndeprecated.  Its semantics were never that clear and its\nimplementation even less so.  If you have used that feature to\ndisallow all but fully qualified variables, C<use strict;> instead.\n\n=item *\n\nThe unimplemented POSIX regex features [[.cc.]] and [[=c=]] are still\nrecognised but now cause fatal errors.  The previous behaviour of\nignoring them by default and warning if requested was unacceptable\nsince it, in a way, falsely promised that the features could be used.\n\n=item *\n\nIn future releases, non-PerlIO aware XS modules may become completely\nunsupported.  Since PerlIO is a drop-in replacement for stdio at the\nsource code level, this shouldn't be that drastic a change.\n\n=item *\n\nPrevious versions of perl and some readings of some sections of Camel\nIII implied that the C<:raw> \"discipline\" was the inverse of C<:crlf>.\nTurning off \"clrfness\" is no longer enough to make a stream truly\nbinary. So the PerlIO C<:raw> layer (or \"discipline\", to use the Camel\nbook's older terminology) is now formally defined as being equivalent\nto binmode(FH) - which is in turn defined as doing whatever is\nnecessary to pass each byte as-is without any translation.  In\nparticular binmode(FH) - and hence C<:raw> - will now turn off both\nCRLF and UTF-8 translation and remove other layers (e.g. :encoding())\nwhich would modify byte stream.\n\n=item *\n\nThe current user-visible implementation of pseudo-hashes (the weird\nuse of the first array element) is deprecated starting from Perl 5.8.0\nand will be removed in Perl 5.10.0, and the feature will be\nimplemented differently.  Not only is the current interface rather\nugly, but the current implementation slows down normal array and hash\nuse quite noticeably. The C<fields> pragma interface will remain\navailable.  The I<restricted hashes> interface is expected to\nbe the replacement interface (see L<Hash::Util>).  If your existing\nprograms depends on the underlying implementation, consider using\nL<Class::PseudoHash> from CPAN.\n\n=item *\n\nThe syntaxes C<< @a->[...] >> and  C<< %h->{...} >> have now been deprecated.\n\n=item *\n\nAfter years of trying, suidperl is considered to be too complex to\never be considered truly secure.  The suidperl functionality is likely\nto be removed in a future release.\n\n=item *\n\nThe 5.005 threads model (module C<Thread>) is deprecated and expected\nto be removed in Perl 5.10.  Multithreaded code should be migrated to\nthe new ithreads model (see L<threads>, L<threads::shared> and\nL<perlthrtut>).\n\n=item *\n\nThe long deprecated uppercase aliases for the string comparison\noperators (EQ, NE, LT, LE, GE, GT) have now been removed.\n\n=item *\n\nThe tr///C and tr///U features have been removed and will not return;\nthe interface was a mistake.  Sorry about that.  For similar\nfunctionality, see pack('U0', ...) and pack('C0', ...). [561]\n\n=item *\n\nEarlier Perls treated \"sub foo (@bar)\" as equivalent to \"sub foo (@)\".\nThe prototypes are now checked better at compile-time for invalid\nsyntax.  An optional warning is generated (\"Illegal character in\nprototype...\")  but this may be upgraded to a fatal error in a future\nrelease.\n\n=item *\n\nThe C<exec LIST> and C<system LIST> operations now produce warnings on\ntainted data and in some future release they will produce fatal errors.\n\n=item *\n\nThe existing behaviour when localising tied arrays and hashes is wrong,\nand will be changed in a future release, so do not rely on the existing\nbehaviour. See L</\"Localising Tied Arrays and Hashes Is Broken\">.\n\n=back\n\n=head1 Core Enhancements\n\n=head2 Unicode Overhaul\n\nUnicode in general should be now much more usable than in Perl 5.6.0\n(or even in 5.6.1).  Unicode can be used in hash keys, Unicode in\nregular expressions should work now, Unicode in tr/// should work now,\nUnicode in I/O should work now.  See L<perluniintro> for introduction\nand L<perlunicode> for details.\n\n=over 4\n\n=item *\n\nThe Unicode Character Database coming with Perl has been upgraded\nto Unicode 3.2.0.  For more information, see http://www.unicode.org/ .\n[561+] (5.6.1 has UCD 3.0.1.)\n\n=item *\n\nFor developers interested in enhancing Perl's Unicode capabilities:\nalmost all the UCD files are included with the Perl distribution in\nthe F<lib/unicore> subdirectory.  The most notable omission, for space\nconsiderations, is the Unihan database.\n\n=item *\n\nThe properties \\p{Blank} and \\p{SpacePerl} have been added. \"Blank\" is like\nC isblank(), that is, it contains only \"horizontal whitespace\" (the space\ncharacter is, the newline isn't), and the \"SpacePerl\" is the Unicode\nequivalent of C<\\s> (\\p{Space} isn't, since that includes the vertical\ntabulator character, whereas C<\\s> doesn't.)\n\nSee \"New Unicode Properties\" earlier in this document for additional\ninformation on changes with Unicode properties.\n\n=back\n\n=head2 PerlIO is Now The Default\n\n=over 4\n\n=item *\n\nIO is now by default done via PerlIO rather than system's \"stdio\".\nPerlIO allows \"layers\" to be \"pushed\" onto a file handle to alter the\nhandle's behaviour.  Layers can be specified at open time via 3-arg\nform of open:\n\n   open($fh,'>:crlf :utf8', $path) || ...\n\nor on already opened handles via extended C<binmode>:\n\n   binmode($fh,':encoding(iso-8859-7)');\n\nThe built-in layers are: unix (low level read/write), stdio (as in\nprevious Perls), perlio (re-implementation of stdio buffering in a\nportable manner), crlf (does CRLF <=> \"\\n\" translation as on Win32,\nbut available on any platform).  A mmap layer may be available if\nplatform supports it (mostly Unixes).\n\nLayers to be applied by default may be specified via the 'open' pragma.\n\nSee L</\"Installation and Configuration Improvements\"> for the effects\nof PerlIO on your architecture name.\n\n=item *\n\nIf your platform supports fork(), you can use the list form of C<open>\nfor pipes.  For example:\n\n    open KID_PS, \"-|\", \"ps\", \"aux\" or die $!;\n\nforks the ps(1) command (without spawning a shell, as there are more\nthan three arguments to open()), and reads its standard output via the\nC<KID_PS> filehandle.  See L<perlipc>.\n\n=item *\n\nFile handles can be marked as accepting Perl's internal encoding of Unicode\n(UTF-8 or UTF-EBCDIC depending on platform) by a pseudo layer \":utf8\" :\n\n   open($fh,\">:utf8\",\"Uni.txt\");\n\nNote for EBCDIC users: the pseudo layer \":utf8\" is erroneously named\nfor you since it's not UTF-8 what you will be getting but instead\nUTF-EBCDIC.  See L<perlunicode>, L<utf8>, and\nhttp://www.unicode.org/unicode/reports/tr16/ for more information.\nIn future releases this naming may change.  See L<perluniintro>\nfor more information about UTF-8.\n\n=item *\n\nIf your environment variables (LC_ALL, LC_CTYPE, LANG) look like you\nwant to use UTF-8 (any of the variables match C</utf-?8/i>), your\nSTDIN, STDOUT, STDERR handles and the default open layer (see L<open>)\nare marked as UTF-8.  (This feature, like other new features that\ncombine Unicode and I/O, work only if you are using PerlIO, but that's\nthe default.)\n\nNote that after this Perl really does assume that everything is UTF-8:\nfor example if some input handle is not, Perl will probably very soon\ncomplain about the input data like this \"Malformed UTF-8 ...\" since\nany old eight-bit data is not legal UTF-8.\n\nNote for code authors: if you want to enable your users to use UTF-8\nas their default encoding  but in your code still have eight-bit I/O streams\n(such as images or zip files), you need to explicitly open() or binmode()\nwith C<:bytes> (see L<perlfunc/open> and L<perlfunc/binmode>), or you\ncan just use C<binmode(FH)> (nice for pre-5.8.0 backward compatibility).\n\n=item *\n\nFile handles can translate character encodings from/to Perl's internal\nUnicode form on read/write via the \":encoding()\" layer.\n\n=item *\n\nFile handles can be opened to \"in memory\" files held in Perl scalars via:\n\n   open($fh,'>', \\$variable) || ...\n\n=item *\n\nAnonymous temporary files are available without need to\n'use FileHandle' or other module via\n\n   open($fh,\"+>\", undef) || ...\n\nThat is a literal undef, not an undefined value.\n\n=back\n\n=head2 ithreads\n\nThe new interpreter threads (\"ithreads\" for short) implementation of\nmultithreading, by Arthur Bergman, replaces the old \"5.005 threads\"\nimplementation.  In the ithreads model any data sharing between\nthreads must be explicit, as opposed to the model where data sharing\nwas implicit.  See L<threads> and L<threads::shared>, and\nL<perlthrtut>.\n\nAs a part of the ithreads implementation Perl will also use\nany necessary and detectable reentrant libc interfaces.\n\n=head2 Restricted Hashes\n\nA restricted hash is restricted to a certain set of keys, no keys\noutside the set can be added.  Also individual keys can be restricted\nso that the key cannot be deleted and the value cannot be changed.\nNo new syntax is involved: the Hash::Util module is the interface.\n\n=head2 Safe Signals\n\nPerl used to be fragile in that signals arriving at inopportune moments\ncould corrupt Perl's internal state.  Now Perl postpones handling of\nsignals until it's safe (between opcodes).\n\nThis change may have surprising side effects because signals no longer\ninterrupt Perl instantly.  Perl will now first finish whatever it was\ndoing, like finishing an internal operation (like sort()) or an\nexternal operation (like an I/O operation), and only then look at any\narrived signals (and before starting the next operation).  No more corrupt\ninternal state since the current operation is always finished first,\nbut the signal may take more time to get heard.  Note that breaking\nout from potentially blocking operations should still work, though.\n\n=head2 Understanding of Numbers\n\nIn general a lot of fixing has happened in the area of Perl's\nunderstanding of numbers, both integer and floating point.  Since in\nmany systems the standard number parsing functions like C<strtoul()>\nand C<atof()> seem to have bugs, Perl tries to work around their\ndeficiencies.  This results hopefully in more accurate numbers.\n\nPerl now tries internally to use integer values in numeric conversions\nand basic arithmetics (+ - * /) if the arguments are integers, and\ntries also to keep the results stored internally as integers.\nThis change leads to often slightly faster and always less lossy\narithmetics. (Previously Perl always preferred floating point numbers\nin its math.)\n\n=head2 Arrays now always interpolate into double-quoted strings [561]\n\nIn double-quoted strings, arrays now interpolate, no matter what.  The\nbehavior in earlier versions of perl 5 was that arrays would interpolate\ninto strings if the array had been mentioned before the string was\ncompiled, and otherwise Perl would raise a fatal compile-time error.\nIn versions 5.000 through 5.003, the error was\n\n        Literal @example now requires backslash\n\nIn versions 5.004_01 through 5.6.0, the error was\n\n        In string, @example now must be written as \\@example\n\nThe idea here was to get people into the habit of writing\nC<\"fred\\@example.com\"> when they wanted a literal C<@> sign, just as\nthey have always written C<\"Give me back my \\$5\"> when they wanted a\nliteral C<$> sign.\n\nStarting with 5.6.1, when Perl now sees an C<@> sign in a\ndouble-quoted string, it I<always> attempts to interpolate an array,\nregardless of whether or not the array has been used or declared\nalready.  The fatal error has been downgraded to an optional warning:\n\n        Possible unintended interpolation of @example in string\n\nThis warns you that C<\"fred@example.com\"> is going to turn into\nC<fred.com> if you don't backslash the C<@>.\nSee http://perl.plover.com/at-error.html for more details\nabout the history here.\n\n=head2 Miscellaneous Changes\n\n=over 4\n\n=item *\n\nAUTOLOAD is now lvaluable, meaning that you can add the :lvalue attribute\nto AUTOLOAD subroutines and you can assign to the AUTOLOAD return value.\n\n=item *\n\nThe $Config{byteorder} (and corresponding BYTEORDER in config.h) was\npreviously wrong in platforms if sizeof(long) was 4, but sizeof(IV)\nwas 8.  The byteorder was only sizeof(long) bytes long (1234 or 4321),\nbut now it is correctly sizeof(IV) bytes long, (12345678 or 87654321).\n(This problem didn't affect Windows platforms.)\n\nAlso, $Config{byteorder} is now computed dynamically--this is more\nrobust with \"fat binaries\" where an executable image contains binaries\nfor more than one binary platform, and when cross-compiling.\n\n=item *\n\nC<perl -d:Module=arg,arg,arg> now works (previously one couldn't pass\nin multiple arguments.)\n\n=item *\n\nC<do> followed by a bareword now ensures that this bareword isn't\na keyword (to avoid a bug where C<do q(foo.pl)> tried to call a\nsubroutine called C<q>).  This means that for example instead of\nC<do format()> you must write C<do &format()>.\n\n=item *\n\nThe builtin dump() now gives an optional warning\nC<dump() better written as CORE::dump()>,\nmeaning that by default C<dump(...)> is resolved as the builtin\ndump() which dumps core and aborts, not as (possibly) user-defined\nC<sub dump>.  To call the latter, qualify the call as C<&dump(...)>.\n(The whole dump() feature is to considered deprecated, and possibly\nremoved/changed in future releases.)\n\n=item *\n\nchomp() and chop() are now overridable.  Note, however, that their\nprototype (as given by C<prototype(\"CORE::chomp\")> is undefined,\nbecause it cannot be expressed and therefore one cannot really write\nreplacements to override these builtins.\n\n=item *\n\nEND blocks are now run even if you exit/die in a BEGIN block.\nInternally, the execution of END blocks is now controlled by\nPL_exit_flags & PERL_EXIT_DESTRUCT_END. This enables the new\nbehaviour for Perl embedders. This will default in 5.10. See\nL<perlembed>.\n\n=item *\n\nFormats now support zero-padded decimal fields.\n\n=item *\n\nAlthough \"you shouldn't do that\", it was possible to write code that\ndepends on Perl's hashed key order (Data::Dumper does this).  The new\nalgorithm \"One-at-a-Time\" produces a different hashed key order.\nMore details are in L</\"Performance Enhancements\">.\n\n=item *\n\nlstat(FILEHANDLE) now gives a warning because the operation makes no sense.\nIn future releases this may become a fatal error.\n\n=item *\n\nSpurious syntax errors generated in certain situations, when glob()\ncaused File::Glob to be loaded for the first time, have been fixed. [561]\n\n=item *\n\nLvalue subroutines can now return C<undef> in list context.  However,\nthe lvalue subroutine feature still remains experimental.  [561+]\n\n=item *\n\nA lost warning \"Can't declare ... dereference in my\" has been\nrestored (Perl had it earlier but it became lost in later releases.)\n\n=item *\n\nA new special regular expression variable has been introduced:\nC<$^N>, which contains the most-recently closed group (submatch).\n\n=item *\n\nC<no Module;> does not produce an error even if Module does not have an\nunimport() method.  This parallels the behavior of C<use> vis-a-vis\nC<import>. [561]\n\n=item *\n\nThe numerical comparison operators return C<undef> if either operand\nis a NaN.  Previously the behaviour was unspecified.\n\n=item *\n\nC<our> can now have an experimental optional attribute C<unique> that\naffects how global variables are shared among multiple interpreters,\nsee L<perlfunc/our>.\n\n=item *\n\nThe following builtin functions are now overridable: each(), keys(),\npop(), push(), shift(), splice(), unshift(). [561]\n\n=item *\n\nC<pack() / unpack()> can now group template letters with C<()> and then\napply repetition/count modifiers on the groups.\n\n=item *\n\nC<pack() / unpack()> can now process the Perl internal numeric types:\nIVs, UVs, NVs-- and also long doubles, if supported by the platform.\nThe template letters are C<j>, C<J>, C<F>, and C<D>.\n\n=item *\n\nC<pack('U0a*', ...)> can now be used to force a string to UTF-8.\n\n=item *\n\nmy __PACKAGE__ $obj now works. [561]\n\n=item *\n\nPOSIX::sleep() now returns the number of I<unslept> seconds\n(as the POSIX standard says), as opposed to CORE::sleep() which\nreturns the number of slept seconds.\n\n=item *\n\nprintf() and sprintf() now support parameter reordering using the\nC<%\\d+\\$> and C<*\\d+\\$> syntaxes.  For example\n\n    printf \"%2\\$s %1\\$s\\n\", \"foo\", \"bar\";\n\nwill print \"bar foo\\n\".  This feature helps in writing\ninternationalised software, and in general when the order\nof the parameters can vary.\n\n=item *\n\nThe (\\&) prototype now works properly. [561]\n\n=item *\n\nprototype(\\[$@%&]) is now available to implicitly create references\n(useful for example if you want to emulate the tie() interface).\n\n=item *\n\nA new command-line option, C<-t> is available.  It is the\nlittle brother of C<-T>: instead of dying on taint violations,\nlexical warnings are given.  B<This is only meant as a temporary\ndebugging aid while securing the code of old legacy applications.\nThis is not a substitute for -T.>\n\n=item *\n\nIn other taint news, the C<exec LIST> and C<system LIST> have now been\nconsidered too risky (think C<exec @ARGV>: it can start any program\nwith any arguments), and now the said forms cause a warning under\nlexical warnings.  You should carefully launder the arguments to\nguarantee their validity.  In future releases of Perl the forms will\nbecome fatal errors so consider starting laundering now.\n\n=item *\n\nTied hash interfaces are now required to have the EXISTS and DELETE\nmethods (either own or inherited).\n\n=item *\n\nIf tr/// is just counting characters, it doesn't attempt to\nmodify its target.\n\n=item *\n\nuntie() will now call an UNTIE() hook if it exists.  See L<perltie>\nfor details. [561]\n\n=item *\n\nL<perlfunc/utime> now supports C<utime undef, undef, @files> to change the\nfile timestamps to the current time.\n\n=item *\n\nThe rules for allowing underscores (underbars) in numeric constants\nhave been relaxed and simplified: now you can have an underscore\nsimply B<between digits>.\n\n=item *\n\nRather than relying on C's argv[0] (which may not contain a full pathname)\nwhere possible $^X is now set by asking the operating system.\n(eg by reading F</proc/self/exe> on Linux, F</proc/curproc/file> on FreeBSD)\n\n=item *\n\nA new variable, C<${^TAINT}>, indicates whether taint mode is enabled.\n\n=item *\n\nYou can now override the readline() builtin, and this overrides also\nthe <FILEHANDLE> angle bracket operator.\n\n=item *\n\nThe command-line options -s and -F are now recognized on the shebang\n(#!) line.\n\n=item *\n\nUse of the C</c> match modifier without an accompanying C</g> modifier\nelicits a new warning: C<Use of /c modifier is meaningless without /g>.\n\nUse of C</c> in substitutions, even with C</g>, elicits\nC<Use of /c modifier is meaningless in s///>.\n\nUse of C</g> with C<split> elicits C<Use of /g modifier is meaningless\nin split>.\n\n=item *\n\nSupport for the C<CLONE> special subroutine had been added.\nWith ithreads, when a new thread is created, all Perl data is cloned,\nhowever non-Perl data cannot be cloned automatically.  In C<CLONE> you\ncan do whatever you need to do, like for example handle the cloning of\nnon-Perl data, if necessary.  C<CLONE> will be executed once for every\npackage that has it defined or inherited.  It will be called in the\ncontext of the new thread, so all modifications are made in the new area.\n\nSee L<perlmod>\n\n=back\n\n=head1 Modules and Pragmata\n\n=head2 New Modules and Pragmata\n\n=over 4\n\n=item *\n\nC<Attribute::Handlers>, originally by Damian Conway and now maintained\nby Arthur Bergman, allows a class to define attribute handlers.\n\n    package MyPack;\n    use Attribute::Handlers;\n    sub Wolf :ATTR(SCALAR) { print \"howl!\\n\" }\n\n    # later, in some package using or inheriting from MyPack...\n\n    my MyPack $Fluffy : Wolf; # the attribute handler Wolf will be called\n\nBoth variables and routines can have attribute handlers.  Handlers can\nbe specific to type (SCALAR, ARRAY, HASH, or CODE), or specific to the\nexact compilation phase (BEGIN, CHECK, INIT, or END).\nSee L<Attribute::Handlers>.\n\n=item *\n\nC<B::Concise>, by Stephen McCamant, is a new compiler backend for\nwalking the Perl syntax tree, printing concise info about ops.\nThe output is highly customisable.  See L<B::Concise>. [561+]\n\n=item *\n\nThe new bignum, bigint, and bigrat pragmas, by Tels, implement\ntransparent bignum support (using the Math::BigInt, Math::BigFloat,\nand Math::BigRat backends).\n\n=item *\n\nC<Class::ISA>, by Sean Burke, is a module for reporting the search\npath for a class's ISA tree.  See L<Class::ISA>.\n\n=item *\n\nC<Cwd> now has a split personality: if possible, an XS extension is\nused, (this will hopefully be faster, more secure, and more robust)\nbut if not possible, the familiar Perl implementation is used.\n\n=item *\n\nC<Devel::PPPort>, originally by Kenneth Albanowski and now\nmaintained by Paul Marquess, has been added.  It is primarily used\nby C<h2xs> to enhance portability of XS modules between different\nversions of Perl.  See L<Devel::PPPort>.\n\n=item *\n\nC<Digest>, frontend module for calculating digests (checksums), from\nGisle Aas, has been added.  See L<Digest>.\n\n=item *\n\nC<Digest::MD5> for calculating MD5 digests (checksums) as defined in\nRFC 1321, from Gisle Aas, has been added.  See L<Digest::MD5>.\n\n    use Digest::MD5 'md5_hex';\n\n    $digest = md5_hex(\"Thirsty Camel\");\n\n    print $digest, \"\\n\"; # 01d19d9d2045e005c3f1b80e8b164de1\n\nNOTE: the C<MD5> backward compatibility module is deliberately not\nincluded since its further use is discouraged.\n\nSee also L<PerlIO::via::QuotedPrint>.\n\n=item *\n\nC<Encode>, originally by Nick Ing-Simmons and now maintained by Dan\nKogai, provides a mechanism to translate between different character\nencodings.  Support for Unicode, ISO-8859-1, and ASCII are compiled in\nto the module.  Several other encodings (like the rest of the\nISO-8859, CP*/Win*, Mac, KOI8-R, three variants EBCDIC, Chinese,\nJapanese, and Korean encodings) are included and can be loaded at\nruntime.  (For space considerations, the largest Chinese encodings\nhave been separated into their own CPAN module, Encode::HanExtra,\nwhich Encode will use if available).  See L<Encode>.\n\nAny encoding supported by Encode module is also available to the\n\":encoding()\" layer if PerlIO is used.\n\n=item *\n\nC<Hash::Util> is the interface to the new I<restricted hashes>\nfeature.  (Implemented by Jeffrey Friedl, Nick Ing-Simmons, and\nMichael Schwern.)  See L<Hash::Util>.\n\n=item *\n\nC<I18N::Langinfo> can be used to query locale information.\nSee L<I18N::Langinfo>.\n\n=item *\n\nC<I18N::LangTags>, by Sean Burke, has functions for dealing with\nRFC3066-style language tags.  See L<I18N::LangTags>.\n\n=item *\n\nC<ExtUtils::Constant>, by Nicholas Clark, is a new tool for extension\nwriters for generating XS code to import C header constants.\nSee L<ExtUtils::Constant>.\n\n=item *\n\nC<Filter::Simple>, by Damian Conway, is an easy-to-use frontend to\nFilter::Util::Call.  See L<Filter::Simple>.\n\n    # in MyFilter.pm:\n\n    package MyFilter;\n\n    use Filter::Simple sub {\n        while (my ($from, $to) = splice @_, 0, 2) {\n                s/$from/$to/g;\n        }\n    };\n\n    1;\n\n    # in user's code:\n\n    use MyFilter qr/red/ => 'green';\n\n    print \"red\\n\";   # this code is filtered, will print \"green\\n\"\n    print \"bored\\n\"; # this code is filtered, will print \"bogreen\\n\"\n\n    no MyFilter;\n\n    print \"red\\n\";   # this code is not filtered, will print \"red\\n\"\n\n=item *\n\nC<File::Temp>, by Tim Jenness, allows one to create temporary files\nand directories in an easy, portable, and secure way.  See L<File::Temp>.\n[561+]\n\n=item *\n\nC<Filter::Util::Call>, by Paul Marquess, provides you with the\nframework to write I<source filters> in Perl.  For most uses, the\nfrontend Filter::Simple is to be preferred.  See L<Filter::Util::Call>.\n\n=item *\n\nC<if>, by Ilya Zakharevich, is a new pragma for conditional inclusion\nof modules.\n\n=item *\n\nL<libnet>, by Graham Barr, is a collection of perl5 modules related\nto network programming.  See L<Net::FTP>, L<Net::NNTP>, L<Net::Ping>\n(not part of libnet, but related), L<Net::POP3>, L<Net::SMTP>,\nand L<Net::Time>.\n\nPerl installation leaves libnet unconfigured; use F<libnetcfg>\nto configure it.\n\n=item *\n\nC<List::Util>, by Graham Barr, is a selection of general-utility\nlist subroutines, such as sum(), min(), first(), and shuffle().\nSee L<List::Util>.\n\n=item *\n\nC<Locale::Constants>, C<Locale::Country>, C<Locale::Currency>\nC<Locale::Language>, and L<Locale::Script>, by Neil Bowers, have\nbeen added.  They provide the codes for various locale standards, such\nas \"fr\" for France, \"usd\" for US Dollar, and \"ja\" for Japanese.\n\n    use Locale::Country;\n\n    $country = code2country('jp');               # $country gets 'Japan'\n    $code    = country2code('Norway');           # $code gets 'no'\n\nSee L<Locale::Constants>, L<Locale::Country>, L<Locale::Currency>,\nand L<Locale::Language>.\n\n=item *\n\nC<Locale::Maketext>, by Sean Burke, is a localization framework.  See\nL<Locale::Maketext>, and L<Locale::Maketext::TPJ13>.  The latter is an\narticle about software localization, originally published in The Perl\nJournal #13, and republished here with kind permission.\n\n=item *\n\nC<Math::BigRat> for big rational numbers, to accompany Math::BigInt and\nMath::BigFloat, from Tels.  See L<Math::BigRat>.\n\n=item *\n\nC<Memoize> can make your functions faster by trading space for time,\nfrom Mark-Jason Dominus.  See L<Memoize>.\n\n=item *\n\nC<MIME::Base64>, by Gisle Aas, allows you to encode data in base64,\nas defined in RFC 2045 - I<MIME (Multipurpose Internet Mail\nExtensions)>.\n\n    use MIME::Base64;\n\n    $encoded = encode_base64('Aladdin:open sesame');\n    $decoded = decode_base64($encoded);\n\n    print $encoded, \"\\n\"; # \"QWxhZGRpbjpvcGVuIHNlc2FtZQ==\"\n\nSee L<MIME::Base64>.\n\n=item *\n\nC<MIME::QuotedPrint>, by Gisle Aas, allows you to encode data\nin quoted-printable encoding, as defined in RFC 2045 - I<MIME\n(Multipurpose Internet Mail Extensions)>.\n\n    use MIME::QuotedPrint;\n\n    $encoded = encode_qp(\"\\xDE\\xAD\\xBE\\xEF\");\n    $decoded = decode_qp($encoded);\n\n    print $encoded, \"\\n\"; # \"=DE=AD=BE=EF\\n\"\n    print $decoded, \"\\n\"; # \"\\xDE\\xAD\\xBE\\xEF\\n\"\n\nSee also L<PerlIO::via::QuotedPrint>.\n\n=item *\n\nC<NEXT>, by Damian Conway, is a pseudo-class for method redispatch.\nSee L<NEXT>.\n\n=item *\n\nC<open> is a new pragma for setting the default I/O layers\nfor open().\n\n=item *\n\nC<PerlIO::scalar>, by Nick Ing-Simmons, provides the implementation\nof IO to \"in memory\" Perl scalars as discussed above.  It also serves\nas an example of a loadable PerlIO layer.  Other future possibilities\ninclude PerlIO::Array and PerlIO::Code.  See L<PerlIO::scalar>.\n\n=item *\n\nC<PerlIO::via>, by Nick Ing-Simmons, acts as a PerlIO layer and wraps\nPerlIO layer functionality provided by a class (typically implemented\nin Perl code).\n\n=item *\n\nC<PerlIO::via::QuotedPrint>, by Elizabeth Mattijsen, is an example\nof a C<PerlIO::via> class:\n\n    use PerlIO::via::QuotedPrint;\n    open($fh,\">:via(QuotedPrint)\",$path);\n\nThis will automatically convert everything output to C<$fh> to\nQuoted-Printable.  See L<PerlIO::via> and L<PerlIO::via::QuotedPrint>.\n\n=item *\n\nC<Pod::ParseLink>, by Russ Allbery, has been added,\nto parse LZ<><> links in pods as described in the new\nperlpodspec.\n\n=item *\n\nC<Pod::Text::Overstrike>, by Joe Smith, has been added.\nIt converts POD data to formatted overstrike text.\nSee L<Pod::Text::Overstrike>. [561+]\n\n=item *\n\nC<Scalar::Util> is a selection of general-utility scalar subroutines,\nsuch as blessed(), reftype(), and tainted().  See L<Scalar::Util>.\n\n=item *\n\nC<sort> is a new pragma for controlling the behaviour of sort().\n\n=item *\n\nC<Storable> gives persistence to Perl data structures by allowing the\nstorage and retrieval of Perl data to and from files in a fast and\ncompact binary format.  Because in effect Storable does serialisation\nof Perl data structures, with it you can also clone deep, hierarchical\ndatastructures.  Storable was originally created by Raphael Manfredi,\nbut it is now maintained by Abhijit Menon-Sen.  Storable has been\nenhanced to understand the two new hash features, Unicode keys and\nrestricted hashes.  See L<Storable>.\n\n=item *\n\nC<Switch>, by Damian Conway, has been added.  Just by saying\n\n    use Switch;\n\nyou have C<switch> and C<case> available in Perl.\n\n    use Switch;\n\n    switch ($val) {\n\n\t\tcase 1\t\t{ print \"number 1\" }\n\t\tcase \"a\"\t{ print \"string a\" }\n\t\tcase [1..10,42]\t{ print \"number in list\" }\n\t\tcase (@array)\t{ print \"number in list\" }\n\t\tcase /\\w+/\t{ print \"pattern\" }\n\t\tcase qr/\\w+/\t{ print \"pattern\" }\n\t\tcase (%hash)\t{ print \"entry in hash\" }\n\t\tcase (\\%hash)\t{ print \"entry in hash\" }\n\t\tcase (\\&sub)\t{ print \"arg to subroutine\" }\n\t\telse\t\t{ print \"previous case not true\" }\n    }\n\nSee L<Switch>.\n\n=item *\n\nC<Test::More>, by Michael Schwern, is yet another framework for writing\ntest scripts, more extensive than Test::Simple.  See L<Test::More>.\n\n=item *\n\nC<Test::Simple>, by Michael Schwern, has basic utilities for writing\ntests.   See L<Test::Simple>.\n\n=item *\n\nC<Text::Balanced>, by Damian Conway, has been added, for extracting\ndelimited text sequences from strings.\n\n    use Text::Balanced 'extract_delimited';\n\n    ($a, $b) = extract_delimited(\"'never say never', he never said\", \"'\", '');\n\n$a will be \"'never say never'\", $b will be ', he never said'.\n\nIn addition to extract_delimited(), there are also extract_bracketed(),\nextract_quotelike(), extract_codeblock(), extract_variable(),\nextract_tagged(), extract_multiple(), gen_delimited_pat(), and\ngen_extract_tagged().  With these, you can implement rather advanced\nparsing algorithms.  See L<Text::Balanced>.\n\n=item *\n\nC<threads>, by Arthur Bergman, is an interface to interpreter threads.\nInterpreter threads (ithreads) is the new thread model introduced in\nPerl 5.6 but only available as an internal interface for extension\nwriters (and for Win32 Perl for C<fork()> emulation).  See L<threads>,\nL<threads::shared>, and L<perlthrtut>.\n\n=item *\n\nC<threads::shared>, by Arthur Bergman, allows data sharing for\ninterpreter threads.  See L<threads::shared>.\n\n=item *\n\nC<Tie::File>, by Mark-Jason Dominus, associates a Perl array with the\nlines of a file.  See L<Tie::File>.\n\n=item *\n\nC<Tie::Memoize>, by Ilya Zakharevich, provides on-demand loaded hashes.\nSee L<Tie::Memoize>.\n\n=item *\n\nC<Tie::RefHash::Nestable>, by Edward Avis, allows storing hash\nreferences (unlike the standard Tie::RefHash)  The module is contained\nwithin Tie::RefHash.  See L<Tie::RefHash>.\n\n=item *\n\nC<Time::HiRes>, by Douglas E. Wegscheid, provides high resolution\ntiming (ualarm, usleep, and gettimeofday).  See L<Time::HiRes>.\n\n=item *\n\nC<Unicode::UCD> offers a querying interface to the Unicode Character\nDatabase.  See L<Unicode::UCD>.\n\n=item *\n\nC<Unicode::Collate>, by SADAHIRO Tomoyuki, implements the UCA\n(Unicode Collation Algorithm) for sorting Unicode strings.\nSee L<Unicode::Collate>.\n\n=item *\n\nC<Unicode::Normalize>, by SADAHIRO Tomoyuki, implements the various\nUnicode normalization forms.  See L<Unicode::Normalize>.\n\n=item *\n\nC<XS::APItest>, by Tim Jenness, is a test extension that exercises XS\nAPIs.  Currently only C<printf()> is tested: how to output various\nbasic data types from XS.\n\n=item *\n\nC<XS::Typemap>, by Tim Jenness, is a test extension that exercises\nXS typemaps.  Nothing gets installed, but the code is worth studying\nfor extension writers.\n\n=back\n\n=head2 Updated And Improved Modules and Pragmata\n\n=over 4\n\n=item *\n\nThe following independently supported modules have been updated to the\nnewest versions from CPAN: CGI, CPAN, DB_File, File::Spec, File::Temp,\nGetopt::Long, Math::BigFloat, Math::BigInt, the podlators bundle\n(Pod::Man, Pod::Text), Pod::LaTeX [561+], Pod::Parser, Storable,\nTerm::ANSIColor, Test, Text-Tabs+Wrap.\n\n=item *\n\nattributes::reftype() now works on tied arguments.\n\n=item *\n\nAutoLoader can now be disabled with C<no AutoLoader;>.\n\n=item *\n\nB::Deparse has been significantly enhanced by Robin Houston.  It can\nnow deparse almost all of the standard test suite (so that the tests\nstill succeed).  There is a make target \"test.deparse\" for trying this\nout.\n\n=item *\n\nCarp now has better interface documentation, and the @CARP_NOT\ninterface has been added to get optional control over where errors\nare reported independently of @ISA, by Ben Tilly.\n\n=item *\n\nClass::Struct can now define the classes in compile time.\n\n=item *\n\nClass::Struct now assigns the array/hash element if the accessor\nis called with an array/hash element as the B<sole> argument.\n\n=item *\n\nThe return value of Cwd::fastcwd() is now tainted.\n\n=item *\n\nData::Dumper now has an option to sort hashes.\n\n=item *\n\nData::Dumper now has an option to dump code references\nusing B::Deparse.\n\n=item *\n\nDB_File now supports newer Berkeley DB versions, among\nother improvements.\n\n=item *\n\nDevel::Peek now has an interface for the Perl memory statistics\n(this works only if you are using perl's malloc, and if you have\ncompiled with debugging).\n\n=item *\n\nThe English module can now be used without the infamous performance\nhit by saying\n\n\tuse English '-no_match_vars';\n\n(Assuming, of course, that you don't need the troublesome variables\nC<$`>, C<$&>, or C<$'>.)  Also, introduced C<@LAST_MATCH_START> and\nC<@LAST_MATCH_END> English aliases for C<@-> and C<@+>.\n\n=item *\n\nExtUtils::MakeMaker has been significantly cleaned up and fixed.\nThe enhanced version has also been backported to earlier releases\nof Perl and submitted to CPAN so that the earlier releases can\nenjoy the fixes.\n\n=item *\n\nThe arguments of WriteMakefile() in Makefile.PL are now checked\nfor sanity much more carefully than before.  This may cause new\nwarnings when modules are being installed.  See L<ExtUtils::MakeMaker>\nfor more details.\n\n=item *\n\nExtUtils::MakeMaker now uses File::Spec internally, which hopefully\nleads to better portability.\n\n=item *\n\nFcntl, Socket, and Sys::Syslog have been rewritten by Nicholas Clark\nto use the new-style constant dispatch section (see L<ExtUtils::Constant>).\nThis means that they will be more robust and hopefully faster.\n\n=item *\n\nFile::Find now chdir()s correctly when chasing symbolic links. [561]\n\n=item *\n\nFile::Find now has pre- and post-processing callbacks.  It also\ncorrectly changes directories when chasing symbolic links.  Callbacks\n(naughtily) exiting with \"next;\" instead of \"return;\" now work.\n\n=item *\n\nFile::Find is now (again) reentrant.  It also has been made\nmore portable.\n\n=item *\n\nThe warnings issued by File::Find now belong to their own category.\nYou can enable/disable them with C<use/no warnings 'File::Find';>.\n\n=item *\n\nFile::Glob::glob() has been renamed to File::Glob::bsd_glob()\nbecause the name clashes with the builtin glob().  The older\nname is still available for compatibility, but is deprecated. [561]\n\n=item *\n\nFile::Glob now supports C<GLOB_LIMIT> constant to limit the size of\nthe returned list of filenames.\n\n=item *\n\nIPC::Open3 now allows the use of numeric file descriptors.\n\n=item *\n\nIO::Socket now has an atmark() method, which returns true if the socket\nis positioned at the out-of-band mark.  The method is also exportable\nas a sockatmark() function.\n\n=item *\n\nIO::Socket::INET failed to open the specified port if the service name\nwas not known.  It now correctly uses the supplied port number as is. [561]\n\n=item *\n\nIO::Socket::INET has support for the ReusePort option (if your\nplatform supports it).  The Reuse option now has an alias, ReuseAddr.\nFor clarity, you may want to prefer ReuseAddr.\n\n=item *\n\nIO::Socket::INET now supports a value of zero for C<LocalPort>\n(usually meaning that the operating system will make one up.)\n\n=item *\n\n'use lib' now works identically to @INC.  Removing directories\nwith 'no lib' now works.\n\n=item *\n\nMath::BigFloat and Math::BigInt have undergone a full rewrite by Tels.\nThey are now magnitudes faster, and they support various bignum\nlibraries such as GMP and PARI as their backends.\n\n=item *\n\nMath::Complex handles inf, NaN etc., better.\n\n=item *\n\nNet::Ping has been considerably enhanced by Rob Brown: multihoming is\nnow supported, Win32 functionality is better, there is now time\nmeasuring functionality (optionally high-resolution using\nTime::HiRes), and there is now \"external\" protocol which uses\nNet::Ping::External module which runs your external ping utility and\nparses the output.  A version of Net::Ping::External is available in\nCPAN.\n\nNote that some of the Net::Ping tests are disabled when running\nunder the Perl distribution since one cannot assume one or more\nof the following: enabled echo port at localhost, full Internet\nconnectivity, or sympathetic firewalls.  You can set the environment\nvariable PERL_TEST_Net_Ping to \"1\" (one) before running the Perl test\nsuite to enable all the Net::Ping tests.\n\n=item *\n\nPOSIX::sigaction() is now much more flexible and robust.\nYou can now install coderef handlers, 'DEFAULT', and 'IGNORE'\nhandlers, installing new handlers was not atomic.\n\n=item *\n\nIn Safe, C<%INC> is now localised in a Safe compartment so that\nuse/require work.\n\n=item *\n\nIn SDBM_File on DOSish platforms, some keys went missing because of\nlack of support for files with \"holes\".  A workaround for the problem\nhas been added.\n\n=item *\n\nIn Search::Dict one can now have a pre-processing hook for the\nlines being searched.\n\n=item *\n\nThe Shell module now has an OO interface.\n\n=item *\n\nIn Sys::Syslog there is now a failover mechanism that will go\nthrough alternative connection mechanisms until the message\nis successfully logged.\n\n=item *\n\nThe Test module has been significantly enhanced.\n\n=item *\n\nTime::Local::timelocal() does not handle fractional seconds anymore.\nThe rationale is that neither does localtime(), and timelocal() and\nlocaltime() are supposed to be inverses of each other.\n\n=item *\n\nThe vars pragma now supports declaring fully qualified variables.\n(Something that C<our()> does not and will not support.)\n\n=item *\n\nThe C<utf8::> name space (as in the pragma) provides various\nPerl-callable functions to provide low level access to Perl's\ninternal Unicode representation.  At the moment only length()\nhas been implemented.\n\n=back\n\n=head1 Utility Changes\n\n=over 4\n\n=item *\n\nEmacs perl mode (emacs/cperl-mode.el) has been updated to version\n4.31.\n\n=item *\n\nF<emacs/e2ctags.pl> is now much faster.\n\n=item *\n\nC<enc2xs> is a tool for people adding their own encodings to the\nEncode module.\n\n=item *\n\nC<h2ph> now supports C trigraphs.\n\n=item *\n\nC<h2xs> now produces a template README.\n\n=item *\n\nC<h2xs> now uses C<Devel::PPPort> for better portability between\ndifferent versions of Perl.\n\n=item *\n\nC<h2xs> uses the new L<ExtUtils::Constant|ExtUtils::Constant> module\nwhich will affect newly created extensions that define constants.\nSince the new code is more correct (if you have two constants where the\nfirst one is a prefix of the second one, the first constant B<never>\ngot defined), less lossy (it uses integers for integer constant,\nas opposed to the old code that used floating point numbers even for\ninteger constants), and slightly faster, you might want to consider\nregenerating your extension code (the new scheme makes regenerating\neasy).  L<h2xs> now also supports C trigraphs.\n\n=item *\n\nC<libnetcfg> has been added to configure libnet.\n\n=item *\n\nC<perlbug> is now much more robust.  It also sends the bug report to\nperl.org, not perl.com.\n\n=item *\n\nC<perlcc> has been rewritten and its user interface (that is,\ncommand line) is much more like that of the Unix C compiler, cc.\n(The perlbc tools has been removed.  Use C<perlcc -B> instead.)\nB<Note that perlcc is still considered very experimental and\nunsupported.> [561]\n\n=item *\n\nC<perlivp> is a new Installation Verification Procedure utility\nfor running any time after installing Perl.\n\n=item *\n\nC<piconv> is an implementation of the character conversion utility\nC<iconv>, demonstrating the new Encode module.\n\n=item *\n\nC<pod2html> now allows specifying a cache directory.\n\n=item *\n\nC<pod2html> now produces XHTML 1.0.\n\n=item *\n\nC<pod2html> now understands POD written using different line endings\n(PC-like CRLF versus Unix-like LF versus MacClassic-like CR).\n\n=item *\n\nC<s2p> has been completely rewritten in Perl.  (It is in fact a full\nimplementation of sed in Perl: you can use the sed functionality by\nusing the C<psed> utility.)\n\n=item *\n\nC<xsubpp> now understands POD documentation embedded in the *.xs\nfiles. [561]\n\n=item *\n\nC<xsubpp> now supports the OUT keyword.\n\n=back\n\n=head1 New Documentation\n\n=over 4\n\n=item *\n\nperl56delta details the changes between the 5.005 release and the\n5.6.0 release.\n\n=item *\n\nperlclib documents the internal replacements for standard C library\nfunctions.  (Interesting only for extension writers and Perl core\nhackers.) [561+]\n\n=item *\n\nperldebtut is a Perl debugging tutorial. [561+]\n\n=item *\n\nperlebcdic contains considerations for running Perl on EBCDIC\nplatforms. [561+]\n\n=item *\n\nperlintro is a gentle introduction to Perl.\n\n=item *\n\nperliol documents the internals of PerlIO with layers.\n\n=item *\n\nperlmodstyle is a style guide for writing modules.\n\n=item *\n\nperlnewmod tells about writing and submitting a new module. [561+]\n\n=item *\n\nperlpacktut is a pack() tutorial.\n\n=item *\n\nperlpod has been rewritten to be clearer and to record the best\npractices gathered over the years.\n\n=item *\n\nperlpodspec is a more formal specification of the pod format,\nmainly of interest for writers of pod applications, not to\npeople writing in pod.\n\n=item *\n\nperlretut is a regular expression tutorial. [561+]\n\n=item *\n\nperlrequick is a regular expressions quick-start guide.\nYes, much quicker than perlretut. [561]\n\n=item *\n\nperltodo has been updated.\n\n=item *\n\nperltootc has been renamed as perltooc (to not to conflict\nwith perltoot in filesystems restricted to \"8.3\" names).\n\n=item *\n\nperluniintro is an introduction to using Unicode in Perl.\n(perlunicode is more of a detailed reference and background\ninformation)\n\n=item *\n\nperlutil explains the command line utilities packaged with the Perl\ndistribution. [561+]\n\n=back\n\nThe following platform-specific documents are available before\nthe installation as README.I<platform>, and after the installation\nas perlI<platform>:\n\n    perlaix perlamiga perlapollo perlbeos perlbs2000\n    perlce perlcygwin perldgux perldos perlepoc perlfreebsd perlhpux\n    perlhurd perlirix perlmachten perlmacos perlmint perlmpeix\n    perlnetware perlos2 perlos390 perlplan9 perlqnx perlsolaris\n    perltru64 perluts perlvmesa perlvms perlvos perlwin32\n\nThese documents usually detail one or more of the following subjects:\nconfiguring, building, testing, installing, and sometimes also using\nPerl on the said platform.\n\nEastern Asian Perl users are now welcomed in their own languages:\nREADME.jp (Japanese), README.ko (Korean), README.cn (simplified\nChinese) and README.tw (traditional Chinese), which are written in\nnormal pod but encoded in EUC-JP, EUC-KR, EUC-CN and Big5.  These\nwill get installed as\n\n   perljp perlko perlcn perltw\n\n=over 4\n\n=item *\n\nThe documentation for the POSIX-BC platform is called \"BS2000\", to avoid\nconfusion with the Perl POSIX module.\n\n=item *\n\nThe documentation for the WinCE platform is called perlce (README.ce\nin the source code kit), to avoid confusion with the perlwin32\ndocumentation on 8.3-restricted filesystems.\n\n=back\n\n=head1 Performance Enhancements\n\n=over 4\n\n=item *\n\nmap() could get pathologically slow when the result list it generates\nis larger than the source list.  The performance has been improved for\ncommon scenarios. [561]\n\n=item *\n\nsort() is also fully reentrant, in the sense that the sort function\ncan itself call sort().  This did not work reliably in previous\nreleases. [561]\n\n=item *\n\nsort() has been changed to use primarily mergesort internally as\nopposed to the earlier quicksort.  For very small lists this may\nresult in slightly slower sorting times, but in general the speedup\nshould be at least 20%.  Additional bonuses are that the worst case\nbehaviour of sort() is now better (in computer science terms it now\nruns in time O(N log N), as opposed to quicksort's Theta(N**2)\nworst-case run time behaviour), and that sort() is now stable\n(meaning that elements with identical keys will stay ordered as they\nwere before the sort).  See the C<sort> pragma for information.\n\nThe story in more detail: suppose you want to serve yourself a little\nslice of Pi.\n\n    @digits = ( 3,1,4,1,5,9 );\n\nA numerical sort of the digits will yield (1,1,3,4,5,9), as expected.\nWhich C<1> comes first is hard to know, since one C<1> looks pretty\nmuch like any other.  You can regard this as totally trivial,\nor somewhat profound.  However, if you just want to sort the even\ndigits ahead of the odd ones, then what will\n\n    sort { ($a % 2) <=> ($b % 2) } @digits;\n\nyield?  The only even digit, C<4>, will come first.  But how about\nthe odd numbers, which all compare equal?  With the quicksort algorithm\nused to implement Perl 5.6 and earlier, the order of ties is left up\nto the sort.  So, as you add more and more digits of Pi, the order\nin which the sorted even and odd digits appear will change.\nand, for sufficiently large slices of Pi, the quicksort algorithm\nin Perl 5.8 won't return the same results even if reinvoked with the\nsame input.  The justification for this rests with quicksort's\nworst case behavior.  If you run\n\n   sort { $a <=> $b } ( 1 .. $N , 1 .. $N );\n\n(something you might approximate if you wanted to merge two sorted\narrays using sort), doubling $N doesn't just double the quicksort time,\nit I<quadruples> it.  Quicksort has a worst case run time that can\ngrow like N**2, so-called I<quadratic> behaviour, and it can happen\non patterns that may well arise in normal use.  You won't notice this\nfor small arrays, but you I<will> notice it with larger arrays,\nand you may not live long enough for the sort to complete on arrays\nof a million elements.  So the 5.8 quicksort scrambles large arrays\nbefore sorting them, as a statistical defence against quadratic behaviour.\nBut that means if you sort the same large array twice, ties may be\nbroken in different ways.\n\nBecause of the unpredictability of tie-breaking order, and the quadratic\nworst-case behaviour, quicksort was I<almost> replaced completely with\na stable mergesort.  I<Stable> means that ties are broken to preserve\nthe original order of appearance in the input array.  So\n\n    sort { ($a % 2) <=> ($b % 2) } (3,1,4,1,5,9);\n\nwill yield (4,3,1,1,5,9), guaranteed.  The even and odd numbers\nappear in the output in the same order they appeared in the input.\nMergesort has worst case O(N log N) behaviour, the best value\nattainable.  And, ironically, this mergesort does particularly\nwell where quicksort goes quadratic:  mergesort sorts (1..$N, 1..$N)\nin O(N) time.  But quicksort was rescued at the last moment because\nit is faster than mergesort on certain inputs and platforms.\nFor example, if you really I<don't> care about the order of even\nand odd digits, quicksort will run in O(N) time; it's very good\nat sorting many repetitions of a small number of distinct elements.\nThe quicksort divide and conquer strategy works well on platforms\nwith relatively small, very fast, caches.  Eventually, the problem gets\nwhittled down to one that fits in the cache, from which point it\nbenefits from the increased memory speed.\n\nQuicksort was rescued by implementing a sort pragma to control aspects\nof the sort.  The B<stable> subpragma forces stable behaviour,\nregardless of algorithm.  The B<_quicksort> and B<_mergesort>\nsubpragmas are heavy-handed ways to select the underlying implementation.\nThe leading C<_> is a reminder that these subpragmas may not survive\nbeyond 5.8.  More appropriate mechanisms for selecting the implementation\nexist, but they wouldn't have arrived in time to save quicksort.\n\n=item *\n\nHashes now use Bob Jenkins \"One-at-a-Time\" hashing key algorithm\n( http://burtleburtle.net/bob/hash/doobs.html ).  This algorithm is\nreasonably fast while producing a much better spread of values than\nthe old hashing algorithm (originally by Chris Torek, later tweaked by\nIlya Zakharevich).  Hash values output from the algorithm on a hash of\nall 3-char printable ASCII keys comes much closer to passing the\nDIEHARD random number generation tests.  According to perlbench, this\nchange has not affected the overall speed of Perl.\n\n=item *\n\nunshift() should now be noticeably faster.\n\n=back\n\n=head1 Installation and Configuration Improvements\n\n=head2 Generic Improvements\n\n=over 4\n\n=item *\n\nINSTALL now explains how you can configure Perl to use 64-bit\nintegers even on non-64-bit platforms.\n\n=item *\n\nPolicy.sh policy change: if you are reusing a Policy.sh file\n(see INSTALL) and you use Configure -Dprefix=/foo/bar and in the old\nPolicy $prefix eq $siteprefix and $prefix eq $vendorprefix, all of\nthem will now be changed to the new prefix, /foo/bar.  (Previously\nonly $prefix changed.)  If you do not like this new behaviour,\nspecify prefix, siteprefix, and vendorprefix explicitly.\n\n=item *\n\nA new optional location for Perl libraries, otherlibdirs, is available.\nIt can be used for example for vendor add-ons without disturbing Perl's\nown library directories.\n\n=item *\n\nIn many platforms, the vendor-supplied 'cc' is too stripped-down to\nbuild Perl (basically, 'cc' doesn't do ANSI C).  If this seems\nto be the case and 'cc' does not seem to be the GNU C compiler\n'gcc', an automatic attempt is made to find and use 'gcc' instead.\n\n=item *\n\ngcc needs to closely track the operating system release to avoid\nbuild problems. If Configure finds that gcc was built for a different\noperating system release than is running, it now gives a clearly visible\nwarning that there may be trouble ahead.\n\n=item *\n\nSince Perl 5.8 is not binary-compatible with previous releases\nof Perl, Configure no longer suggests including the 5.005\nmodules in @INC.\n\n=item *\n\nConfigure C<-S> can now run non-interactively. [561]\n\n=item *\n\nConfigure support for pdp11-style memory models has been removed due\nto obsolescence. [561]\n\n=item *\n\nconfigure.gnu now works with options with whitespace in them.\n\n=item *\n\ninstallperl now outputs everything to STDERR.\n\n=item *\n\nBecause PerlIO is now the default on most platforms, \"-perlio\" doesn't\nget appended to the $Config{archname} (also known as $^O) anymore.\nInstead, if you explicitly choose not to use perlio (Configure command\nline option -Uuseperlio), you will get \"-stdio\" appended.\n\n=item *\n\nAnother change related to the architecture name is that \"-64all\"\n(-Duse64bitall, or \"maximally 64-bit\") is appended only if your\npointers are 64 bits wide.  (To be exact, the use64bitall is ignored.)\n\n=item *\n\nIn AFS installations, one can configure the root of the AFS to be\nsomewhere else than the default F</afs> by using the Configure\nparameter C<-Dafsroot=/some/where/else>.\n\n=item *\n\nAPPLLIB_EXP, a lesser-known configuration-time definition, has been\ndocumented.  It can be used to prepend site-specific directories\nto Perl's default search path (@INC); see INSTALL for information.\n\n=item *\n\nThe version of Berkeley DB used when the Perl (and, presumably, the\nDB_File extension) was built is now available as\nC<@Config{qw(db_version_major db_version_minor db_version_patch)}>\nfrom Perl and as C<DB_VERSION_MAJOR_CFG DB_VERSION_MINOR_CFG\nDB_VERSION_PATCH_CFG> from C.\n\n=item *\n\nBuilding Berkeley DB3 for compatibility modes for DB, NDBM, and ODBM\nhas been documented in INSTALL.\n\n=item *\n\nIf you have CPAN access (either network or a local copy such as a\nCD-ROM) you can during specify extra modules to Configure to build and\ninstall with Perl using the -Dextras=...  option.  See INSTALL for\nmore details.\n\n=item *\n\nIn addition to config.over, a new override file, config.arch, is\navailable.  This file is supposed to be used by hints file writers\nfor architecture-wide changes (as opposed to config.over which is\nfor site-wide changes).\n\n=item *\n\nIf your file system supports symbolic links, you can build Perl outside\nof the source directory by\n\n\tmkdir perl/build/directory\n\tcd perl/build/directory\n\tsh /path/to/perl/source/Configure -Dmksymlinks ...\n\nThis will create in perl/build/directory a tree of symbolic links\npointing to files in /path/to/perl/source.  The original files are left\nunaffected.  After Configure has finished, you can just say\n\n\tmake all test\n\nand Perl will be built and tested, all in perl/build/directory.\n[561]\n\n=item *\n\nFor Perl developers, several new make targets for profiling\nand debugging have been added; see L<perlhack>.\n\n=over 8\n\n=item *\n\nUse of the F<gprof> tool to profile Perl has been documented in\nL<perlhack>.  There is a make target called \"perl.gprof\" for\ngenerating a gprofiled Perl executable.\n\n=item *\n\nIf you have GCC 3, there is a make target called \"perl.gcov\" for\ncreating a gcoved Perl executable for coverage analysis.  See\nL<perlhack>.\n\n=item *\n\nIf you are on IRIX or Tru64 platforms, new profiling/debugging options\nhave been added; see L<perlhack> for more information about pixie and\nThird Degree.\n\n=back\n\n=item *\n\nGuidelines of how to construct minimal Perl installations have\nbeen added to INSTALL.\n\n=item *\n\nThe Thread extension is now not built at all under ithreads\n(C<Configure -Duseithreads>) because it wouldn't work anyway (the\nThread extension requires being Configured with C<-Duse5005threads>).\n\nB<Note that the 5.005 threads are unsupported and deprecated: if you\nhave code written for the old threads you should migrate it to the\nnew ithreads model.>\n\n=item *\n\nThe Gconvert macro ($Config{d_Gconvert}) used by perl for stringifying\nfloating-point numbers is now more picky about using sprintf %.*g\nrules for the conversion.  Some platforms that used to use gcvt may\nnow resort to the slower sprintf.\n\n=item *\n\nThe obsolete method of making a special (e.g., debugging) flavor\nof perl by saying\n\n\tmake LIBPERL=libperld.a\n\nhas been removed. Use -DDEBUGGING instead.\n\n=back\n\n=head2 New Or Improved Platforms\n\nFor the list of platforms known to support Perl,\nsee L<perlport/\"Supported Platforms\">.\n\n=over 4\n\n=item *\n\nAIX dynamic loading should be now better supported.\n\n=item *\n\nAIX should now work better with gcc, threads, and 64-bitness.  Also the\nlong doubles support in AIX should be better now.  See L<perlaix>.\n\n=item *\n\nAtheOS ( http://www.atheos.cx/ ) is a new platform.\n\n=item *\n\nBeOS has been reclaimed.\n\n=item *\n\nThe DG/UX platform now supports 5.005-style threads.\nSee L<perldgux>.\n\n=item *\n\nThe DYNIX/ptx platform (also known as dynixptx) is supported at or\nnear osvers 4.5.2.\n\n=item *\n\nEBCDIC platforms (z/OS (also known as OS/390), POSIX-BC, and VM/ESA)\nhave been regained.  Many test suite tests still fail and the\nco-existence of Unicode and EBCDIC isn't quite settled, but the\nsituation is much better than with Perl 5.6.  See L<perlos390>,\nL<perlbs2000> (for POSIX-BC), and perlvmesa for more information.\n(B<Note:> support for VM/ESA was removed in Perl v5.18.0. The relevant\ninformation was in F<README.vmesa>)\n\n=item *\n\nBuilding perl with -Duseithreads or -Duse5005threads now works under\nHP-UX 10.20 (previously it only worked under 10.30 or later). You will\nneed a thread library package installed. See README.hpux. [561]\n\n=item *\n\nMac OS Classic is now supported in the mainstream source package\n(MacPerl has of course been available since perl 5.004 but now the\nsource code bases of standard Perl and MacPerl have been synchronised)\n[561]\n\n=item *\n\nMac OS X (or Darwin) should now be able to build Perl even on HFS+\nfilesystems.  (The case-insensitivity used to confuse the Perl build\nprocess.)\n\n=item *\n\nNCR MP-RAS is now supported. [561]\n\n=item *\n\nAll the NetBSD specific patches (except for the installation\nspecific ones) have been merged back to the main distribution.\n\n=item *\n\nNetWare from Novell is now supported.  See L<perlnetware>.\n\n=item *\n\nNonStop-UX is now supported. [561]\n\n=item *\n\nNEC SUPER-UX is now supported.\n\n=item *\n\nAll the OpenBSD specific patches (except for the installation\nspecific ones) have been merged back to the main distribution.\n\n=item *\n\nPerl has been tested with the GNU pth userlevel thread package\n( http://www.gnu.org/software/pth/pth.html ).  All thread tests\nof Perl now work, but not without adding some yield()s to the tests,\nso while pth (and other userlevel thread implementations) can be\nconsidered to be \"working\" with Perl ithreads, keep in mind the\npossible non-preemptability of the underlying thread implementation.\n\n=item *\n\nStratus VOS is now supported using Perl's native build method\n(Configure).  This is the recommended method to build Perl on\nVOS.  The older methods, which build miniperl, are still\navailable.  See L<perlvos>. [561+]\n\n=item *\n\nThe Amdahl UTS Unix mainframe platform is now supported. [561]\n\n=item *\n\nWinCE is now supported.  See L<perlce>.\n\n=item *\n\nz/OS (formerly known as OS/390, formerly known as MVS OE) now has\nsupport for dynamic loading.  This is not selected by default,\nhowever, you must specify -Dusedl in the arguments of Configure. [561]\n\n=back\n\n=head1 Selected Bug Fixes\n\nNumerous memory leaks and uninitialized memory accesses have been\nhunted down.  Most importantly, anonymous subs used to leak quite\na bit. [561]\n\n=over 4\n\n=item *\n\nThe autouse pragma didn't work for Multi::Part::Function::Names.\n\n=item *\n\ncaller() could cause core dumps in certain situations.  Carp was\nsometimes affected by this problem.  In particular, caller() now\nreturns a subroutine name of C<(unknown)> for subroutines that have\nbeen removed from the symbol table.\n\n=item *\n\nchop(@list) in list context returned the characters chopped in\nreverse order.  This has been reversed to be in the right order. [561]\n\n=item *\n\nConfigure no longer includes the DBM libraries (dbm, gdbm, db, ndbm)\nwhen building the Perl binary.  The only exception to this is SunOS 4.x,\nwhich needs them. [561]\n\n=item *\n\nThe behaviour of non-decimal but numeric string constants such as\n\"0x23\" was platform-dependent: in some platforms that was seen as 35,\nin some as 0, in some as a floating point number (don't ask).  This\nwas caused by Perl's using the operating system libraries in a situation\nwhere the result of the string to number conversion is undefined: now\nPerl consistently handles such strings as zero in numeric contexts.\n\n=item *\n\nSeveral debugger fixes: exit code now reflects the script exit code,\ncondition C<\"0\"> now treated correctly, the C<d> command now checks\nline number, C<$.> no longer gets corrupted, and all debugger output\nnow goes correctly to the socket if RemotePort is set. [561]\n\n=item *\n\nThe debugger (perl5db.pl) has been modified to present a more\nconsistent commands interface, via (CommandSet=580).  perl5db.t was\nalso added to test the changes, and as a placeholder for further tests.\n\nSee L<perldebug>.\n\n=item *\n\nThe debugger has a new C<dumpDepth> option to control the maximum\ndepth to which nested structures are dumped.  The C<x> command has\nbeen extended so that C<x N EXPR> dumps out the value of I<EXPR> to a\ndepth of at most I<N> levels.\n\n=item *\n\nThe debugger can now show lexical variables if you have the CPAN\nmodule PadWalker installed.\n\n=item *\n\nThe order of DESTROYs has been made more predictable.\n\n=item *\n\nPerl 5.6.0 could emit spurious warnings about redefinition of\ndl_error() when statically building extensions into perl.\nThis has been corrected. [561]\n\n=item *\n\nL<dprofpp> -R didn't work.\n\n=item *\n\nC<*foo{FORMAT}> now works.\n\n=item *\n\nInfinity is now recognized as a number.\n\n=item *\n\nUNIVERSAL::isa no longer caches methods incorrectly.  (This broke\nthe Tk extension with 5.6.0.) [561]\n\n=item *\n\nLexicals I: lexicals outside an eval \"\" weren't resolved\ncorrectly inside a subroutine definition inside the eval \"\" if they\nwere not already referenced in the top level of the eval\"\"ed code.\n\n=item *\n\nLexicals II: lexicals leaked at file scope into subroutines that\nwere declared before the lexicals.\n\n=item *\n\nLexical warnings now propagating correctly between scopes\nand into C<eval \"...\">.\n\n=item *\n\nC<use warnings qw(FATAL all)> did not work as intended.  This has been\ncorrected. [561]\n\n=item *\n\nwarnings::enabled() now reports the state of $^W correctly if the caller\nisn't using lexical warnings. [561]\n\n=item *\n\nLine renumbering with eval and C<#line> now works. [561]\n\n=item *\n\nFixed numerous memory leaks, especially in eval \"\".\n\n=item *\n\nLocalised tied variables no longer leak memory\n\n    use Tie::Hash;\n    tie my %tied_hash => 'Tie::StdHash';\n\n    ...\n\n    # Used to leak memory every time local() was called;\n    # in a loop, this added up.\n    local($tied_hash{Foo}) = 1;\n\n=item *\n\nLocalised hash elements (and %ENV) are correctly unlocalised to not\nexist, if they didn't before they were localised.\n\n\n    use Tie::Hash;\n    tie my %tied_hash => 'Tie::StdHash';\n\n    ...\n\n    # Nothing has set the FOO element so far\n\n    { local $tied_hash{FOO} = 'Bar' }\n\n    # This used to print, but not now.\n    print \"exists!\\n\" if exists $tied_hash{FOO};\n\nAs a side effect of this fix, tied hash interfaces B<must> define\nthe EXISTS and DELETE methods.\n\n=item *\n\nmkdir() now ignores trailing slashes in the directory name,\nas mandated by POSIX.\n\n=item *\n\nSome versions of glibc have a broken modfl().  This affects builds\nwith C<-Duselongdouble>.  This version of Perl detects this brokenness\nand has a workaround for it.  The glibc release 2.2.2 is known to have\nfixed the modfl() bug.\n\n=item *\n\nModulus of unsigned numbers now works (4063328477 % 65535 used to\nreturn 27406, instead of 27047). [561]\n\n=item *\n\nSome \"not a number\" warnings introduced in 5.6.0 eliminated to be\nmore compatible with 5.005.  Infinity is now recognised as a number. [561]\n\n=item *\n\nNumeric conversions did not recognize changes in the string value\nproperly in certain circumstances. [561]\n\n=item *\n\nAttributes (such as :shared) didn't work with our().\n\n=item *\n\nour() variables will not cause bogus \"Variable will not stay shared\"\nwarnings. [561]\n\n=item *\n\n\"our\" variables of the same name declared in two sibling blocks\nresulted in bogus warnings about \"redeclaration\" of the variables.\nThe problem has been corrected. [561]\n\n=item *\n\npack \"Z\" now correctly terminates the string with \"\\0\".\n\n=item *\n\nFix password routines which in some shadow password platforms\n(e.g. HP-UX) caused getpwent() to return every other entry.\n\n=item *\n\nThe PERL5OPT environment variable (for passing command line arguments\nto Perl) didn't work for more than a single group of options. [561]\n\n=item *\n\nPERL5OPT with embedded spaces didn't work.\n\n=item *\n\nprintf() no longer resets the numeric locale to \"C\".\n\n=item *\n\nC<qw(a\\\\b)> now parses correctly as C<'a\\\\b'>: that is, as three\ncharacters, not four. [561]\n\n=item *\n\npos() did not return the correct value within s///ge in earlier\nversions.  This is now handled correctly. [561]\n\n=item *\n\nPrinting quads (64-bit integers) with printf/sprintf now works\nwithout the q L ll prefixes (assuming you are on a quad-capable platform).\n\n=item *\n\nRegular expressions on references and overloaded scalars now work. [561+]\n\n=item *\n\nRight-hand side magic (GMAGIC) could in many cases such as string\nconcatenation be invoked too many times.\n\n=item *\n\nscalar() now forces scalar context even when used in void context.\n\n=item *\n\nSOCKS support is now much more robust.\n\n=item *\n\nsort() arguments are now compiled in the right wantarray context\n(they were accidentally using the context of the sort() itself).\nThe comparison block is now run in scalar context, and the arguments\nto be sorted are always provided list context. [561]\n\n=item *\n\nChanged the POSIX character class C<[[:space:]]> to include the (very\nrarely used) vertical tab character.  Added a new POSIX-ish character\nclass C<[[:blank:]]> which stands for horizontal whitespace\n(currently, the space and the tab).\n\n=item *\n\nThe tainting behaviour of sprintf() has been rationalized.  It does\nnot taint the result of floating point formats anymore, making the\nbehaviour consistent with that of string interpolation. [561]\n\n=item *\n\nSome cases of inconsistent taint propagation (such as within hash\nvalues) have been fixed.\n\n=item *\n\nThe RE engine found in Perl 5.6.0 accidentally pessimised certain kinds\nof simple pattern matches.  These are now handled better. [561]\n\n=item *\n\nRegular expression debug output (whether through C<use re 'debug'>\nor via C<-Dr>) now looks better. [561]\n\n=item *\n\nMulti-line matches like C<\"a\\nxb\\n\" =~ /(?!\\A)x/m> were flawed.  The\nbug has been fixed. [561]\n\n=item *\n\nUse of $& could trigger a core dump under some situations.  This\nis now avoided. [561]\n\n=item *\n\nThe regular expression captured submatches ($1, $2, ...) are now\nmore consistently unset if the match fails, instead of leaving false\ndata lying around in them. [561]\n\n=item *\n\nreadline() on files opened in \"slurp\" mode could return an extra\n\"\" (blank line) at the end in certain situations.  This has been\ncorrected. [561]\n\n=item *\n\nAutovivification of symbolic references of special variables described\nin L<perlvar> (as in C<${$num}>) was accidentally disabled.  This works\nagain now. [561]\n\n=item *\n\nSys::Syslog ignored the C<LOG_AUTH> constant.\n\n=item *\n\n$AUTOLOAD, sort(), lock(), and spawning subprocesses\nin multiple threads simultaneously are now thread-safe.\n\n=item *\n\nTie::Array's SPLICE method was broken.\n\n=item *\n\nAllow a read-only string on the left-hand side of a non-modifying tr///.\n\n=item *\n\nIf C<STDERR> is tied, warnings caused by C<warn> and C<die> now\ncorrectly pass to it.\n\n=item *\n\nSeveral Unicode fixes.\n\n=over 8\n\n=item *\n\nBOMs (byte order marks) at the beginning of Perl files\n(scripts, modules) should now be transparently skipped.\nUTF-16 and UCS-2 encoded Perl files should now be read correctly.\n\n=item *\n\nThe character tables have been updated to Unicode 3.2.0.\n\n=item *\n\nComparing with utf8 data does not magically upgrade non-utf8 data\ninto utf8.  (This was a problem for example if you were mixing data\nfrom I/O and Unicode data: your output might have got magically encoded\nas UTF-8.)\n\n=item *\n\nGenerating illegal Unicode code points such as U+FFFE, or the UTF-16\nsurrogates, now also generates an optional warning.\n\n=item *\n\nC<IsAlnum>, C<IsAlpha>, and C<IsWord> now match titlecase.\n\n=item *\n\nConcatenation with the C<.> operator or via variable interpolation,\nC<eq>, C<substr>, C<reverse>, C<quotemeta>, the C<x> operator,\nsubstitution with C<s///>, single-quoted UTF-8, should now work.\n\n=item *\n\nThe C<tr///> operator now works.  Note that the C<tr///CU>\nfunctionality has been removed (but see pack('U0', ...)).\n\n=item *\n\nC<eval \"v200\"> now works.\n\n=item *\n\nPerl 5.6.0 parsed m/\\x{ab}/ incorrectly, leading to spurious warnings.\nThis has been corrected. [561]\n\n=item *\n\nZero entries were missing from the Unicode classes such as C<IsDigit>.\n\n=back\n\n=item *\n\nLarge unsigned numbers (those above 2**31) could sometimes lose their\nunsignedness, causing bogus results in arithmetic operations. [561]\n\n=item *\n\nThe Perl parser has been stress tested using both random input and\nMarkov chain input and the few found crashes and lockups have been\nfixed.\n\n=back\n\n=head2 Platform Specific Changes and Fixes\n\n=over 4\n\n=item *\n\nBSDI 4.*\n\nPerl now works on post-4.0 BSD/OSes.\n\n=item *\n\nAll BSDs\n\nSetting C<$0> now works (as much as possible; see L<perlvar> for details).\n\n=item *\n\nCygwin\n\nNumerous updates; currently synchronised with Cygwin 1.3.10.\n\n=item *\n\nPreviously DYNIX/ptx had problems in its Configure probe for non-blocking I/O.\n\n=item *\n\nEPOC\n\nEPOC now better supported.  See README.epoc. [561]\n\n=item *\n\nFreeBSD 3.*\n\nPerl now works on post-3.0 FreeBSDs.\n\n=item *\n\nHP-UX\n\nREADME.hpux updated; C<Configure -Duse64bitall> now works;\nnow uses HP-UX malloc instead of Perl malloc.\n\n=item *\n\nIRIX\n\nNumerous compilation flag and hint enhancements; accidental mixing\nof 32-bit and 64-bit libraries (a doomed attempt) made much harder.\n\n=item *\n\nLinux\n\n=over 8\n\n=item *\n\nLong doubles should now work (see INSTALL). [561]\n\n=item *\n\nLinux previously had problems related to sockaddrlen when using\naccept(), recvfrom() (in Perl: recv()), getpeername(), and\ngetsockname().\n\n=back\n\n=item *\n\nMac OS Classic\n\nCompilation of the standard Perl distribution in Mac OS Classic should\nnow work if you have the Metrowerks development environment and the\nmissing Mac-specific toolkit bits.  Contact the macperl mailing list\nfor details.\n\n=item *\n\nMPE/iX\n\nMPE/iX update after Perl 5.6.0.  See README.mpeix. [561]\n\n=item *\n\nNetBSD/threads: try installing the GNU pth (should be in the\npackages collection, or http://www.gnu.org/software/pth/),\nand Configure with -Duseithreads.\n\n=item *\n\nNetBSD/sparc\n\nPerl now works on NetBSD/sparc.\n\n=item *\n\nOS/2\n\nNow works with usethreads (see INSTALL). [561]\n\n=item *\n\nSolaris\n\n64-bitness using the Sun Workshop compiler now works.\n\n=item *\n\nStratus VOS\n\nThe native build method requires at least VOS Release 14.5.0\nand GNU C++/GNU Tools 2.0.1 or later.  The Perl pack function\nnow maps overflowed values to +infinity and underflowed values\nto -infinity.\n\n=item *\n\nTru64 (aka Digital UNIX, aka DEC OSF/1)\n\nThe operating system version letter now recorded in $Config{osvers}.\nAllow compiling with gcc (previously explicitly forbidden).  Compiling\nwith gcc still not recommended because buggy code results, even with\ngcc 2.95.2.\n\n=item *\n\nUnicos\n\nFixed various alignment problems that lead into core dumps either\nduring build or later; no longer dies on math errors at runtime;\nnow using full quad integers (64 bits), previously was using\nonly 46 bit integers for speed.\n\n=item *\n\nVMS\n\nSee L</\"Socket Extension Dynamic in VMS\"> and L</\"IEEE-format Floating Point\nDefault on OpenVMS Alpha\"> for important changes not otherwise listed here.\n\nchdir() now works better despite a CRT bug; now works with MULTIPLICITY\n(see INSTALL); now works with Perl's malloc.\n\nThe tainting of C<%ENV> elements via C<keys> or C<values> was previously\nunimplemented.  It now works as documented.\n\nThe C<waitpid> emulation has been improved.  The worst bug (now fixed)\nwas that a pid of -1 would cause a wildcard search of all processes on\nthe system.\n\nPOSIX-style signals are now emulated much better on VMS versions prior\nto 7.0.\n\nThe C<system> function and backticks operator have improved\nfunctionality and better error handling. [561]\n\nFile access tests now use current process privileges rather than the\nuser's default privileges, which could sometimes result in a mismatch\nbetween reported access and actual access.  This improvement is only\navailable on VMS v6.0 and later.\n\nThere is a new C<kill> implementation based on C<sys$sigprc> that allows\nolder VMS systems (pre-7.0) to use C<kill> to send signals rather than\nsimply force exit.  This implementation also allows later systems to\ncall C<kill> from within a signal handler.\n\nIterative logical name translations are now limited to 10 iterations in\nimitation of SHOW LOGICAL and other OpenVMS facilities.\n\n=item *\n\nWindows\n\n=over 8\n\n=item *\n\nSignal handling now works better than it used to.  It is now implemented\nusing a Windows message loop, and is therefore less prone to random\ncrashes.\n\n=item *\n\nfork() emulation is now more robust, but still continues to have a few\nesoteric bugs and caveats.  See L<perlfork> for details. [561+]\n\n=item *\n\nA failed (pseudo)fork now returns undef and sets errno to EAGAIN. [561]\n\n=item *\n\nThe following modules now work on Windows:\n\n    ExtUtils::Embed         [561]\n    IO::Pipe\n    IO::Poll\n    Net::Ping\n\n=item *\n\nIO::File::new_tmpfile() is no longer limited to 32767 invocations\nper-process.\n\n=item *\n\nBetter chdir() return value for a non-existent directory.\n\n=item *\n\nCompiling perl using the 64-bit Platform SDK tools is now supported.\n\n=item *\n\nThe Win32::SetChildShowWindow() builtin can be used to control the\nvisibility of windows created by child processes.  See L<Win32> for\ndetails.\n\n=item *\n\nNon-blocking waits for child processes (or pseudo-processes) are\nsupported via C<waitpid($pid, &POSIX::WNOHANG)>.\n\n=item *\n\nThe behavior of system() with multiple arguments has been rationalized.\nEach unquoted argument will be automatically quoted to protect whitespace,\nand any existing whitespace in the arguments will be preserved.  This\nimproves the portability of system(@args) by avoiding the need for\nWindows C<cmd> shell specific quoting in perl programs.\n\nNote that this means that some scripts that may have relied on earlier\nbuggy behavior may no longer work correctly.  For example,\nC<system(\"nmake /nologo\", @args)> will now attempt to run the file\nC<nmake /nologo> and will fail when such a file isn't found.\nOn the other hand, perl will now execute code such as\nC<system(\"c:/Program Files/MyApp/foo.exe\", @args)> correctly.\n\n=item *\n\nThe perl header files no longer suppress common warnings from the\nMicrosoft Visual C++ compiler.  This means that additional warnings may\nnow show up when compiling XS code.\n\n=item *\n\nBorland C++ v5.5 is now a supported compiler that can build Perl.\nHowever, the generated binaries continue to be incompatible with those\ngenerated by the other supported compilers (GCC and Visual C++). [561]\n\n=item *\n\nDuping socket handles with open(F, \">&MYSOCK\") now works under Windows 9x.\n[561]\n\n=item *\n\nCurrent directory entries in %ENV are now correctly propagated to child\nprocesses. [561]\n\n=item *\n\nNew %ENV entries now propagate to subprocesses. [561]\n\n=item *\n\nWin32::GetCwd() correctly returns C:\\ instead of C: when at the drive root.\nOther bugs in chdir() and Cwd::cwd() have also been fixed. [561]\n\n=item *\n\nThe makefiles now default to the features enabled in ActiveState ActivePerl\n(a popular Win32 binary distribution). [561]\n\n=item *\n\nHTML files will now be installed in c:\\perl\\html instead of\nc:\\perl\\lib\\pod\\html\n\n=item *\n\nREG_EXPAND_SZ keys are now allowed in registry settings used by perl. [561]\n\n=item *\n\nCan now send() from all threads, not just the first one. [561]\n\n=item *\n\nExtUtils::MakeMaker now uses $ENV{LIB} to search for libraries. [561]\n\n=item *\n\nLess stack reserved per thread so that more threads can run\nconcurrently. (Still 16M per thread.) [561]\n\n=item *\n\nC<< File::Spec->tmpdir() >> now prefers C:/temp over /tmp\n(works better when perl is running as service).\n\n=item *\n\nBetter UNC path handling under ithreads. [561]\n\n=item *\n\nwait(), waitpid(), and backticks now return the correct exit status\nunder Windows 9x. [561]\n\n=item *\n\nA socket handle leak in accept() has been fixed. [561]\n\n=back\n\n=back\n\n=head1 New or Changed Diagnostics\n\nPlease see L<perldiag> for more details.\n\n=over 4\n\n=item *\n\nAmbiguous range in the transliteration operator (like a-z-9) now\ngives a warning.\n\n=item *\n\nchdir(\"\") and chdir(undef) now give a deprecation warning because they\ncause a possible unintentional chdir to the home directory.\nSay chdir() if you really mean that.\n\n=item *\n\nTwo new debugging options have been added: if you have compiled your\nPerl with debugging, you can use the -DT [561] and -DR options to trace\ntokenising and to add reference counts to displaying variables,\nrespectively.\n\n=item *\n\nThe lexical warnings category \"deprecated\" is no longer a sub-category\nof the \"syntax\" category. It is now a top-level category in its own\nright.\n\n=item *\n\nUnadorned dump() will now give a warning suggesting to\nuse explicit CORE::dump() if that's what really is meant.\n\n=item *\n\nThe \"Unrecognized escape\" warning has been extended to include C<\\8>,\nC<\\9>, and C<\\_>.  There is no need to escape any of the C<\\w> characters.\n\n=item *\n\nAll regular expression compilation error messages are now hopefully\neasier to understand both because the error message now comes before\nthe failed regex and because the point of failure is now clearly\nmarked by a C<E<lt>-- HERE> marker.\n\n=item *\n\nVarious I/O (and socket) functions like binmode(), close(), and so\nforth now more consistently warn if they are used illogically either\non a yet unopened or on an already closed filehandle (or socket).\n\n=item *\n\nUsing lstat() on a filehandle now gives a warning.  (It's a non-sensical\nthing to do.)\n\n=item *\n\nThe C<-M> and C<-m> options now warn if you didn't supply the module name.\n\n=item *\n\nIf you in C<use> specify a required minimum version, modules matching\nthe name and but not defining a $VERSION will cause a fatal failure.\n\n=item *\n\nUsing negative offset for vec() in lvalue context is now a warnable offense.\n\n=item *\n\nOdd number of arguments to overload::constant now elicits a warning.\n\n=item *\n\nOdd number of elements in anonymous hash now elicits a warning.\n\n=item *\n\nThe various \"opened only for\", \"on closed\", \"never opened\" warnings\ndrop the C<main::> prefix for filehandles in the C<main> package,\nfor example C<STDIN> instead of C<main::STDIN>.\n\n=item *\n\nSubroutine prototypes are now checked more carefully, you may\nget warnings for example if you have used non-prototype characters.\n\n=item *\n\nIf an attempt to use a (non-blessed) reference as an array index\nis made, a warning is given.\n\n=item *\n\nC<push @a;> and C<unshift @a;> (with no values to push or unshift)\nnow give a warning.  This may be a problem for generated and eval'ed\ncode.\n\n=item *\n\nIf you try to L<perlfunc/pack> a number less than 0 or larger than 255\nusing the C<\"C\"> format you will get an optional warning.  Similarly\nfor the C<\"c\"> format and a number less than -128 or more than 127.\n\n=item *\n\npack C<P> format now demands an explicit size.\n\n=item *\n\nunpack C<w> now warns of unterminated compressed integers.\n\n=item *\n\nWarnings relating to the use of PerlIO have been added.\n\n=item *\n\nCertain regex modifiers such as C<(?o)> make sense only if applied to\nthe entire regex.  You will get an optional warning if you try to do\notherwise.\n\n=item *\n\nVariable length lookbehind has not yet been implemented, trying to\nuse it will tell that.\n\n=item *\n\nUsing arrays or hashes as references (e.g. C<< %foo->{bar} >>\nhas been deprecated for a while.  Now you will get an optional warning.\n\n=item *\n\nWarnings relating to the use of the new restricted hashes feature\nhave been added.\n\n=item *\n\nSelf-ties of arrays and hashes are not supported and fatal errors\nwill happen even at an attempt to do so.\n\n=item *\n\nUsing C<sort> in scalar context now issues an optional warning.\nThis didn't do anything useful, as the sort was not performed.\n\n=item *\n\nUsing the /g modifier in split() is meaningless and will cause a warning.\n\n=item *\n\nUsing splice() past the end of an array now causes a warning.\n\n=item *\n\nMalformed Unicode encodings (UTF-8 and UTF-16) cause a lot of warnings,\nas does trying to use UTF-16 surrogates (which are unimplemented).\n\n=item *\n\nTrying to use Unicode characters on an I/O stream without marking the\nstream's encoding (using open() or binmode()) will cause \"Wide character\"\nwarnings.\n\n=item *\n\nUse of v-strings in use/require causes a (backward) portability warning.\n\n=item *\n\nWarnings relating to the use interpreter threads and their shared data\nhave been added.\n\n=back\n\n=head1 Changed Internals\n\n=over 4\n\n=item *\n\nPerlIO is now the default.\n\n=item *\n\nperlapi.pod (a companion to perlguts) now attempts to document the\ninternal API.\n\n=item *\n\nYou can now build a really minimal perl called microperl.\nBuilding microperl does not require even running Configure;\nC<make -f Makefile.micro> should be enough.  Beware: microperl makes\nmany assumptions, some of which may be too bold; the resulting\nexecutable may crash or otherwise misbehave in wondrous ways.\nFor careful hackers only.\n\n=item *\n\nAdded rsignal(), whichsig(), do_join(), op_clear, op_null,\nptr_table_clear(), ptr_table_free(), sv_setref_uv(), and several UTF-8\ninterfaces to the publicised API.  For the full list of the available\nAPIs see L<perlapi>.\n\n=item *\n\nMade possible to propagate customised exceptions via croak()ing.\n\n=item *\n\nNow xsubs can have attributes just like subs.  (Well, at least the\nbuilt-in attributes.)\n\n=item *\n\ndTHR and djSP have been obsoleted; the former removed (because it's\na no-op) and the latter replaced with dSP.\n\n=item *\n\nPERL_OBJECT has been completely removed.\n\n=item *\n\nThe MAGIC constants (e.g. C<'P'>) have been macrofied\n(e.g. C<PERL_MAGIC_TIED>) for better source code readability\nand maintainability.\n\n=item *\n\nThe regex compiler now maintains a structure that identifies nodes in\nthe compiled bytecode with the corresponding syntactic features of the\noriginal regex expression.  The information is attached to the new\nC<offsets> member of the C<struct regexp>. See L<perldebguts> for more\ncomplete information.\n\n=item *\n\nThe C code has been made much more C<gcc -Wall> clean.  Some warning\nmessages still remain in some platforms, so if you are compiling with\ngcc you may see some warnings about dubious practices.  The warnings\nare being worked on.\n\n=item *\n\nF<perly.c>, F<sv.c>, and F<sv.h> have now been extensively commented.\n\n=item *\n\nDocumentation on how to use the Perl source repository has been added\nto F<Porting/repository.pod>.\n\n=item *\n\nThere are now several profiling make targets.\n\n=back\n\n=head1 Security Vulnerability Closed [561]\n\n(This change was already made in 5.7.0 but bears repeating here.)\n(5.7.0 came out before 5.6.1: the development branch 5.7 released\nearlier than the maintenance branch 5.6)\n\nA potential security vulnerability in the optional suidperl component\nof Perl was identified in August 2000.  suidperl is neither built nor\ninstalled by default.  As of November 2001 the only known vulnerable\nplatform is Linux, most likely all Linux distributions.  CERT and\nvarious vendors and distributors have been alerted about the vulnerability.\nSee http://www.cpan.org/src/5.0/sperl-2000-08-05/sperl-2000-08-05.txt\nfor more information.\n\nThe problem was caused by Perl trying to report a suspected security\nexploit attempt using an external program, /bin/mail.  On Linux\nplatforms the /bin/mail program had an undocumented feature which\nwhen combined with suidperl gave access to a root shell, resulting in\na serious compromise instead of reporting the exploit attempt.  If you\ndon't have /bin/mail, or if you have 'safe setuid scripts', or if\nsuidperl is not installed, you are safe.\n\nThe exploit attempt reporting feature has been completely removed from\nPerl 5.8.0 (and the maintenance release 5.6.1, and it was removed also\nfrom all the Perl 5.7 releases), so that particular vulnerability\nisn't there anymore.  However, further security vulnerabilities are,\nunfortunately, always possible.  The suidperl functionality is most\nprobably going to be removed in Perl 5.10.  In any case, suidperl\nshould only be used by security experts who know exactly what they are\ndoing and why they are using suidperl instead of some other solution\nsuch as sudo ( see http://www.courtesan.com/sudo/ ).\n\n=head1 New Tests\n\nSeveral new tests have been added, especially for the F<lib> and\nF<ext> subsections.  There are now about 69 000 individual tests\n(spread over about 700 test scripts), in the regression suite (5.6.1\nhas about 11 700 tests, in 258 test scripts)  The exact numbers depend\non the platform and Perl configuration used.  Many of the new tests\nare of course introduced by the new modules, but still in general Perl\nis now more thoroughly tested.\n\nBecause of the large number of tests, running the regression suite\nwill take considerably longer time than it used to: expect the suite\nto take up to 4-5 times longer to run than in perl 5.6.  On a really\nfast machine you can hope to finish the suite in about 6-8 minutes\n(wallclock time).\n\nThe tests are now reported in a different order than in earlier Perls.\n(This happens because the test scripts from under t/lib have been moved\nto be closer to the library/extension they are testing.)\n\n=head1 Known Problems\n\n=head2 The Compiler Suite Is Still Very Experimental\n\nThe compiler suite is slowly getting better but it continues to be\nhighly experimental.  Use in production environments is discouraged.\n\n=head2 Localising Tied Arrays and Hashes Is Broken\n\n    local %tied_array;\n\ndoesn't work as one would expect: the old value is restored\nincorrectly.  This will be changed in a future release, but we don't\nknow yet what the new semantics will exactly be.  In any case, the\nchange will break existing code that relies on the current\n(ill-defined) semantics, so just avoid doing this in general.\n\n=head2 Building Extensions Can Fail Because Of Largefiles\n\nSome extensions like mod_perl are known to have issues with\n`largefiles', a change brought by Perl 5.6.0 in which file offsets\ndefault to 64 bits wide, where supported.  Modules may fail to compile\nat all, or they may compile and work incorrectly.  Currently, there\nis no good solution for the problem, but Configure now provides\nappropriate non-largefile ccflags, ldflags, libswanted, and libs\nin the %Config hash (e.g., $Config{ccflags_nolargefiles}) so the\nextensions that are having problems can try configuring themselves\nwithout the largefileness.  This is admittedly not a clean solution,\nand the solution may not even work at all.  One potential failure is\nwhether one can (or, if one can, whether it's a good idea to) link\ntogether at all binaries with different ideas about file offsets;\nall this is platform-dependent.\n\n=head2 Modifying $_ Inside for(..)\n\n   for (1..5) { $_++ }\n\nworks without complaint.  It shouldn't.  (You should be able to\nmodify only lvalue elements inside the loops.)  You can see the\ncorrect behaviour by replacing the 1..5 with 1, 2, 3, 4, 5.\n\n=head2 mod_perl 1.26 Doesn't Build With Threaded Perl\n\nUse mod_perl 1.27 or higher.\n\n=head2 lib/ftmp-security tests warn 'system possibly insecure'\n\nDon't panic.  Read the 'make test' section of INSTALL instead.\n\n=head2 libwww-perl (LWP) fails base/date #51\n\nUse libwww-perl 5.65 or later.\n\n=head2 PDL failing some tests\n\nUse PDL 2.3.4 or later.\n\n=head2 Perl_get_sv\n\nYou may get errors like 'Undefined symbol \"Perl_get_sv\"' or \"can't\nresolve symbol 'Perl_get_sv'\", or the symbol may be \"Perl_sv_2pv\".\nThis probably means that you are trying to use an older shared Perl\nlibrary (or extensions linked with such) with Perl 5.8.0 executable.\nPerl used to have such a subroutine, but that is no more the case.\nCheck your shared library path, and any shared Perl libraries in those\ndirectories.\n\nSometimes this problem may also indicate a partial Perl 5.8.0\ninstallation, see L</\"Mac OS X dyld undefined symbols\"> for an\nexample and how to deal with it.\n\n=head2 Self-tying Problems\n\nSelf-tying of arrays and hashes is broken in rather deep and\nhard-to-fix ways.  As a stop-gap measure to avoid people from getting\nfrustrated at the mysterious results (core dumps, most often), it is\nforbidden for now (you will get a fatal error even from an attempt).\n\nA change to self-tying of globs has caused them to be recursively\nreferenced (see: L<perlobj/\"Two-Phased Garbage Collection\">).  You\nwill now need an explicit untie to destroy a self-tied glob.  This\nbehaviour may be fixed at a later date.\n\nSelf-tying of scalars and IO thingies works.\n\n=head2 ext/threads/t/libc\n\nIf this test fails, it indicates that your libc (C library) is not\nthreadsafe.  This particular test stress tests the localtime() call to\nfind out whether it is threadsafe.  See L<perlthrtut> for more information.\n\n=head2 Failure of Thread (5.005-style) tests\n\nB<Note that support for 5.005-style threading is deprecated,\nexperimental and practically unsupported.  In 5.10, it is expected\nto be removed.  You should migrate your code to ithreads.>\n\nThe following tests are known to fail due to fundamental problems in\nthe 5.005 threading implementation. These are not new failures--Perl\n5.005_0x has the same bugs, but didn't have these tests.\n\n ../ext/B/t/xref.t                    255 65280    14   12  85.71%  3-14\n ../ext/List/Util/t/first.t           255 65280     7    4  57.14%  2 5-7\n ../lib/English.t                       2   512    54    2   3.70%  2-3\n ../lib/FileCache.t                                 5    1  20.00%  5\n ../lib/Filter/Simple/t/data.t                      6    3  50.00%  1-3\n ../lib/Filter/Simple/t/filter_only.                9    3  33.33%  1-2 5\n ../lib/Math/BigInt/t/bare_mbf.t                 1627    4   0.25%  8 11 1626-1627\n ../lib/Math/BigInt/t/bigfltpm.t                 1629    4   0.25%  10 13 1628-\n                                                                    1629\n ../lib/Math/BigInt/t/sub_mbf.t                  1633    4   0.24%  8 11 1632-1633\n ../lib/Math/BigInt/t/with_sub.t                 1628    4   0.25%  9 12 1627-1628\n ../lib/Tie/File/t/31_autodefer.t     255 65280    65   32  49.23%  34-65\n ../lib/autouse.t                                  10    1  10.00%  4\n op/flip.t                                         15    1   6.67%  15\n\nThese failures are unlikely to get fixed as 5.005-style threads\nare considered fundamentally broken.  (Basically what happens is that\ncompeting threads can corrupt shared global state, one good example\nbeing regular expression engine's state.)\n\n=head2 Timing problems\n\nThe following tests may fail intermittently because of timing\nproblems, for example if the system is heavily loaded.\n\n    t/op/alarm.t\n    ext/Time/HiRes/HiRes.t\n    lib/Benchmark.t\n    lib/Memoize/t/expmod_t.t\n    lib/Memoize/t/speed.t\n\nIn case of failure please try running them manually, for example\n\n    ./perl -Ilib ext/Time/HiRes/HiRes.t\n\n=head2 Tied/Magical Array/Hash Elements Do Not Autovivify\n\nFor normal arrays C<$foo = \\$bar[1]> will assign C<undef> to\nC<$bar[1]> (assuming that it didn't exist before), but for\ntied/magical arrays and hashes such autovivification does not happen\nbecause there is currently no way to catch the reference creation.\nThe same problem affects slicing over non-existent indices/keys of\na tied/magical array/hash.\n\n=head2 Unicode in package/class and subroutine names does not work\n\nOne can have Unicode in identifier names, but not in package/class or\nsubroutine names.  While some limited functionality towards this does\nexist as of Perl 5.8.0, that is more accidental than designed; use of\nUnicode for the said purposes is unsupported.\n\nOne reason of this unfinishedness is its (currently) inherent\nunportability: since both package names and subroutine names may\nneed to be mapped to file and directory names, the Unicode capability\nof the filesystem becomes important-- and there unfortunately aren't\nportable answers.\n\n=head1 Platform Specific Problems\n\n=head2 AIX\n\n=over 4\n\n=item *\n\nIf using the AIX native make command, instead of just \"make\" issue\n\"make all\".  In some setups the former has been known to spuriously\nalso try to run \"make install\".  Alternatively, you may want to use\nGNU make.\n\n=item *\n\nIn AIX 4.2, Perl extensions that use C++ functions that use statics\nmay have problems in that the statics are not getting initialized.\nIn newer AIX releases, this has been solved by linking Perl with\nthe libC_r library, but unfortunately in AIX 4.2 the said library\nhas an obscure bug where the various functions related to time\n(such as time() and gettimeofday()) return broken values, and\ntherefore in AIX 4.2 Perl is not linked against libC_r.\n\n=item *\n\nvac 5.0.0.0 May Produce Buggy Code For Perl\n\nThe AIX C compiler vac version 5.0.0.0 may produce buggy code,\nresulting in a few random tests failing when run as part of \"make\ntest\", but when the failing tests are run by hand, they succeed.\nWe suggest upgrading to at least vac version 5.0.1.0, that has been\nknown to compile Perl correctly.  \"lslpp -L|grep vac.C\" will tell\nyou the vac version.  See README.aix.\n\n=item *\n\nIf building threaded Perl, you may get compilation warning from pp_sys.c:\n\n  \"pp_sys.c\", line 4651.39: 1506-280 (W) Function argument assignment between types \"unsigned char*\" and \"const void*\" is not allowed.\n\nThis is harmless; it is caused by the getnetbyaddr() and getnetbyaddr_r()\nhaving slightly different types for their first argument.\n\n=back\n\n=head2 Alpha systems with old gccs fail several tests\n\nIf you see op/pack, op/pat, op/regexp, or ext/Storable tests failing\nin a Linux/alpha or *BSD/Alpha, it's probably time to upgrade your gcc.\ngccs prior to 2.95.3 are definitely not good enough, and gcc 3.1 may\nbe even better.  (RedHat Linux/alpha with gcc 3.1 reported no problems,\nas did Linux 2.4.18 with gcc 2.95.4.)  (In Tru64, it is preferable to\nuse the bundled C compiler.)\n\n=head2 AmigaOS\n\nPerl 5.8.0 doesn't build in AmigaOS.  It broke at some point during\nthe ithreads work and we could not find Amiga experts to unbreak the\nproblems.  Perl 5.6.1 still works for AmigaOS (as does the 5.7.2\ndevelopment release).\n\n=head2 BeOS\n\nThe following tests fail on 5.8.0 Perl in BeOS Personal 5.03:\n\n t/op/lfs............................FAILED at test 17\n t/op/magic..........................FAILED at test 24\n ext/Fcntl/t/syslfs..................FAILED at test 17\n ext/File/Glob/t/basic...............FAILED at test 3\n ext/POSIX/t/sigaction...............FAILED at test 13\n ext/POSIX/t/waitpid.................FAILED at test 1\n\n(B<Note:> more information was available in F<README.beos> until support for\nBeOS was removed in Perl v5.18.0)\n\n=head2 Cygwin \"unable to remap\"\n\nFor example when building the Tk extension for Cygwin,\nyou may get an error message saying \"unable to remap\".\nThis is known problem with Cygwin, and a workaround is\ndetailed in here: http://sources.redhat.com/ml/cygwin/2001-12/msg00894.html\n\n=head2 Cygwin ndbm tests fail on FAT\n\nOne can build but not install (or test the build of) the NDBM_File\non FAT filesystems.  Installation (or build) on NTFS works fine.\nIf one attempts the test on a FAT install (or build) the following\nfailures are expected:\n\n ../ext/NDBM_File/ndbm.t       13  3328    71   59  83.10%  1-2 4 16-71\n ../ext/ODBM_File/odbm.t      255 65280    ??   ??       %  ??\n ../lib/AnyDBM_File.t           2   512    12    2  16.67%  1 4\n ../lib/Memoize/t/errors.t      0   139    11    5  45.45%  7-11\n ../lib/Memoize/t/tie_ndbm.t   13  3328     4    4 100.00%  1-4\n run/fresh_perl.t                          97    1   1.03%  91\n\nNDBM_File fails and ODBM_File just coredumps.\n\nIf you intend to run only on FAT (or if using AnyDBM_File on FAT),\nrun Configure with the -Ui_ndbm and -Ui_dbm options to prevent\nNDBM_File and ODBM_File being built.\n\n=head2 DJGPP Failures\n\n t/op/stat............................FAILED at test 29\n lib/File/Find/t/find.................FAILED at test 1\n lib/File/Find/t/taint................FAILED at test 1\n lib/h2xs.............................FAILED at test 15\n lib/Pod/t/eol........................FAILED at test 1\n lib/Test/Harness/t/strap-analyze.....FAILED at test 8\n lib/Test/Harness/t/test-harness......FAILED at test 23\n lib/Test/Simple/t/exit...............FAILED at test 1\n\nThe above failures are known as of 5.8.0 with native builds with long\nfilenames, but there are a few more if running under dosemu because of\nlimitations (and maybe bugs) of dosemu:\n\n t/comp/cpp...........................FAILED at test 3\n t/op/inccode.........................(crash)\n\nand a few lib/ExtUtils tests, and several hundred Encode/t/Aliases.t\nfailures that work fine with long filenames.  So you really might\nprefer native builds and long filenames.\n\n=head2 FreeBSD built with ithreads coredumps reading large directories\n\nThis is a known bug in FreeBSD 4.5's readdir_r(), it has been fixed in\nFreeBSD 4.6 (see L<perlfreebsd> (README.freebsd)).\n\n=head2 FreeBSD Failing locale Test 117 For ISO 8859-15 Locales\n\nThe ISO 8859-15 locales may fail the locale test 117 in FreeBSD.\nThis is caused by the characters \\xFF (y with diaeresis) and \\xBE\n(Y with diaeresis) not behaving correctly when being matched\ncase-insensitively.  Apparently this problem has been fixed in\nthe latest FreeBSD releases.\n( http://www.freebsd.org/cgi/query-pr.cgi?pr=34308 )\n\n=head2 IRIX fails ext/List/Util/t/shuffle.t or Digest::MD5\n\nIRIX with MIPSpro 7.3.1.2m or 7.3.1.3m compiler may fail the List::Util\ntest ext/List/Util/t/shuffle.t by dumping core.  This seems to be\na compiler error since if compiled with gcc no core dump ensues, and\nno failures have been seen on the said test on any other platform.\n\nSimilarly, building the Digest::MD5 extension has been\nknown to fail with \"*** Termination code 139 (bu21)\".\n\nThe cure is to drop optimization level (Configure -Doptimize=-O2).\n\n=head2 HP-UX lib/posix Subtest 9 Fails When LP64-Configured\n\nIf perl is configured with -Duse64bitall, the successful result of the\nsubtest 10 of lib/posix may arrive before the successful result of the\nsubtest 9, which confuses the test harness so much that it thinks the\nsubtest 9 failed.\n\n=head2 Linux with glibc 2.2.5 fails t/op/int subtest #6 with -Duse64bitint\n\nThis is a known bug in the glibc 2.2.5 with long long integers.\n( http://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=65612 )\n\n=head2 Linux With Sfio Fails op/misc Test 48\n\nNo known fix.\n\n=head2 Mac OS X\n\nPlease remember to set your environment variable LC_ALL to \"C\"\n(setenv LC_ALL C) before running \"make test\" to avoid a lot of\nwarnings about the broken locales of Mac OS X.\n\nThe following tests are known to fail in Mac OS X 10.1.5 because of\nbuggy (old) implementations of Berkeley DB included in Mac OS X:\n\n Failed Test                 Stat Wstat Total Fail  Failed  List of Failed\n -------------------------------------------------------------------------\n ../ext/DB_File/t/db-btree.t    0    11    ??   ??       %  ??\n ../ext/DB_File/t/db-recno.t              149    3   2.01%  61 63 65\n\nIf you are building on a UFS partition, you will also probably see\nt/op/stat.t subtest #9 fail.  This is caused by Darwin's UFS not\nsupporting inode change time.\n\nAlso the ext/POSIX/t/posix.t subtest #10 fails but it is skipped for\nnow because the failure is Apple's fault, not Perl's (blocked signals\nare lost).\n\nIf you Configure with ithreads, ext/threads/t/libc.t will fail. Again,\nthis is not Perl's fault-- the libc of Mac OS X is not threadsafe\n(in this particular test, the localtime() call is found to be\nthreadunsafe.)\n\n=head2 Mac OS X dyld undefined symbols\n\nIf after installing Perl 5.8.0 you are getting warnings about missing\nsymbols, for example\n\n    dyld: perl Undefined symbols\n    _perl_sv_2pv\n    _perl_get_sv\n\nyou probably have an old pre-Perl-5.8.0 installation (or parts of one)\nin /Library/Perl (the undefined symbols used to exist in pre-5.8.0 Perls).\nIt seems that for some reason \"make install\" doesn't always completely\noverwrite the files in /Library/Perl.  You can move the old Perl\nshared library out of the way like this:\n\n    cd /Library/Perl/darwin/CORE\n    mv libperl.dylib libperlold.dylib\n\nand then reissue \"make install\".  Note that the above of course is\nextremely disruptive for anything using the /usr/local/bin/perl.\nIf that doesn't help, you may have to try removing all the .bundle\nfiles from beneath /Library/Perl, and again \"make install\"-ing.\n\n=head2 OS/2 Test Failures\n\nThe following tests are known to fail on OS/2 (for clarity\nonly the failures are shown, not the full error messages):\n\n ../lib/ExtUtils/t/Mkbootstrap.t    1   256    18    1   5.56%  8\n ../lib/ExtUtils/t/Packlist.t       1   256    34    1   2.94%  17\n ../lib/ExtUtils/t/basic.t          1   256    17    1   5.88%  14\n lib/os2_process.t                  2   512   227    2   0.88%  174 209\n lib/os2_process_kid.t                        227    2   0.88%  174 209\n lib/rx_cmprt.t                   255 65280    18    3  16.67%  16-18\n\n=head2 op/sprintf tests 91, 129, and 130\n\nThe op/sprintf tests 91, 129, and 130 are known to fail on some platforms.\nExamples include any platform using sfio, and Compaq/Tandem's NonStop-UX.\n\nTest 91 is known to fail on QNX6 (nto), because C<sprintf '%e',0>\nincorrectly produces C<0.000000e+0> instead of C<0.000000e+00>.\n\nFor tests 129 and 130, the failing platforms do not comply with\nthe ANSI C Standard: lines 19ff on page 134 of ANSI X3.159 1989, to\nbe exact.  (They produce something other than \"1\" and \"-1\" when\nformatting 0.6 and -0.6 using the printf format \"%.0f\"; most often,\nthey produce \"0\" and \"-0\".)\n\n=head2 SCO\n\nThe socketpair tests are known to be unhappy in SCO 3.2v5.0.4:\n\n ext/Socket/socketpair.t...............FAILED tests 15-45\n\n=head2 Solaris 2.5\n\nIn case you are still using Solaris 2.5 (aka SunOS 5.5), you may\nexperience failures (the test core dumping) in lib/locale.t.\nThe suggested cure is to upgrade your Solaris.\n\n=head2 Solaris x86 Fails Tests With -Duse64bitint\n\nThe following tests are known to fail in Solaris x86 with Perl\nconfigured to use 64 bit integers:\n\n ext/Data/Dumper/t/dumper.............FAILED at test 268\n ext/Devel/Peek/Peek..................FAILED at test 7\n\n=head2 SUPER-UX (NEC SX)\n\nThe following tests are known to fail on SUPER-UX:\n\n op/64bitint...........................FAILED tests 29-30, 32-33, 35-36\n op/arith..............................FAILED tests 128-130\n op/pack...............................FAILED tests 25-5625\n op/pow................................\n op/taint..............................# msgsnd failed\n ../ext/IO/lib/IO/t/io_poll............FAILED tests 3-4\n ../ext/IPC/SysV/ipcsysv...............FAILED tests 2, 5-6\n ../ext/IPC/SysV/t/msg.................FAILED tests 2, 4-6\n ../ext/Socket/socketpair..............FAILED tests 12\n ../lib/IPC/SysV.......................FAILED tests 2, 5-6\n ../lib/warnings.......................FAILED tests 115-116, 118-119\n\nThe op/pack failure (\"Cannot compress negative numbers at op/pack.t line 126\")\nis serious but as of yet unsolved.  It points at some problems with the\nsignedness handling of the C compiler, as do the 64bitint, arith, and pow\nfailures.  Most of the rest point at problems with SysV IPC.\n\n=head2 Term::ReadKey not working on Win32\n\nUse Term::ReadKey 2.20 or later.\n\n=head2 UNICOS/mk\n\n=over 4\n\n=item *\n\nDuring Configure, the test\n\n    Guessing which symbols your C compiler and preprocessor define...\n\nwill probably fail with error messages like\n\n    CC-20 cc: ERROR File = try.c, Line = 3\n      The identifier \"bad\" is undefined.\n\n      bad switch yylook 79bad switch yylook 79bad switch yylook 79bad switch yylook 79#ifdef A29K\n      ^\n\n    CC-65 cc: ERROR File = try.c, Line = 3\n      A semicolon is expected at this point.\n\nThis is caused by a bug in the awk utility of UNICOS/mk.  You can ignore\nthe error, but it does cause a slight problem: you cannot fully\nbenefit from the h2ph utility (see L<h2ph>) that can be used to\nconvert C headers to Perl libraries, mainly used to be able to access\nfrom Perl the constants defined using C preprocessor, cpp.  Because of\nthe above error, parts of the converted headers will be invisible.\nLuckily, these days the need for h2ph is rare.\n\n=item *\n\nIf building Perl with interpreter threads (ithreads), the\ngetgrent(), getgrnam(), and getgrgid() functions cannot return the\nlist of the group members due to a bug in the multithreaded support of\nUNICOS/mk.  What this means is that in list context the functions will\nreturn only three values, not four.\n\n=back\n\n=head2 UTS\n\nThere are a few known test failures.  (B<Note:> the relevant information was\navailable in F<README.uts> until support for UTS was removed in Perl\nv5.18.0)\n\n=head2 VOS (Stratus)\n\nWhen Perl is built using the native build process on VOS Release\n14.5.0 and GNU C++/GNU Tools 2.0.1, all attempted tests either\npass or result in TODO (ignored) failures.\n\n=head2 VMS\n\nThere should be no reported test failures with a default configuration,\nthough there are a number of tests marked TODO that point to areas\nneeding further debugging and/or porting work.\n\n=head2 Win32\n\nIn multi-CPU boxes, there are some problems with the I/O buffering:\nsome output may appear twice.\n\n=head2 XML::Parser not working\n\nUse XML::Parser 2.31 or later.\n\n=head2 z/OS (OS/390)\n\nz/OS has rather many test failures but the situation is actually much\nbetter than it was in 5.6.0; it's just that so many new modules and\ntests have been added.\n\n Failed Test                   Stat Wstat Total Fail  Failed  List of Failed\n ---------------------------------------------------------------------------\n ../ext/Data/Dumper/t/dumper.t              357    8   2.24%  311 314 325 327\n                                                              331 333 337 339\n ../ext/IO/lib/IO/t/io_unix.t                 5    4  80.00%  2-5\n ../ext/Storable/t/downgrade.t   12  3072   169   12   7.10%  14-15 46-47 78-79\n                                                              110-111 150 161\n ../lib/ExtUtils/t/Constant.t   121 30976    48   48 100.00%  1-48\n ../lib/ExtUtils/t/Embed.t                    9    9 100.00%  1-9\n op/pat.t                                   922    7   0.76%  665 776 785 832-\n                                                              834 845\n op/sprintf.t                               224    3   1.34%  98 100 136\n op/tr.t                                     97    5   5.15%  63 71-74\n uni/fold.t                                 780    6   0.77%  61 169 196 661\n                                                              710-711\n\nThe failures in dumper.t and downgrade.t are problems in the tests,\nthose in io_unix and sprintf are problems in the USS (UDP sockets and\nprintf formats).  The pat, tr, and fold failures are genuine Perl\nproblems caused by EBCDIC (and in the pat and fold cases, combining\nthat with Unicode).  The Constant and Embed are probably problems in\nthe tests (since they test Perl's ability to build extensions, and\nthat seems to be working reasonably well.)\n\n=head2 Unicode Support on EBCDIC Still Spotty\n\nThough mostly working, Unicode support still has problem spots on\nEBCDIC platforms.  One such known spot are the C<\\p{}> and C<\\P{}>\nregular expression constructs for code points less than 256: the\nC<pP> are testing for Unicode code points, not knowing about EBCDIC.\n\n=head2 Seen In Perl 5.7 But Gone Now\n\nC<Time::Piece> (previously known as C<Time::Object>) was removed\nbecause it was felt that it didn't have enough value in it to be a\ncore module.  It is still a useful module, though, and is available\nfrom the CPAN.\n\nPerl 5.8 unfortunately does not build anymore on AmigaOS; this broke\naccidentally at some point.  Since there are not that many Amiga\ndevelopers available, we could not get this fixed and tested in time\nfor 5.8.0.  Perl 5.6.1 still works for AmigaOS (as does the 5.7.2\ndevelopment release).\n\nThe C<PerlIO::Scalar> and C<PerlIO::Via> (capitalised) were renamed as\nC<PerlIO::scalar> and C<PerlIO::via> (all lowercase) just before 5.8.0.\nThe main rationale was to have all core PerlIO layers to have all\nlowercase names.  The \"plugins\" are named as usual, for example\nC<PerlIO::via::QuotedPrint>.\n\nThe C<threads::shared::queue> and C<threads::shared::semaphore> were\nrenamed as C<Thread::Queue> and C<Thread::Semaphore> just before 5.8.0.\nThe main rationale was to have thread modules to obey normal naming,\nC<Thread::> (the C<threads> and C<threads::shared> themselves are\nmore pragma-like, they affect compile-time, so they stay lowercase).\n\n=head1 Reporting Bugs\n\nIf you find what you think is a bug, you might check the articles\nrecently posted to the comp.lang.perl.misc newsgroup and the perl\nbug database at http://bugs.perl.org/ .  There may also be\ninformation at http://www.perl.com/ , the Perl Home Page.\n\nIf you believe you have an unreported bug, please run the B<perlbug>\nprogram included with your release.  Be sure to trim your bug down\nto a tiny but sufficient test case.  Your bug report, along with the\noutput of C<perl -V>, will be sent off to perlbug@perl.org to be\nanalysed by the Perl porting team.\n\n=head1 SEE ALSO\n\nThe F<Changes> file for exhaustive details on what changed.\n\nThe F<INSTALL> file for how to build Perl.\n\nThe F<README> file for general stuff.\n\nThe F<Artistic> and F<Copying> files for copyright information.\n\n=head1 HISTORY\n\nWritten by Jarkko Hietaniemi <F<jhi@iki.fi>>.\n\n=cut\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/svr5.sh": "# svr5 hints, System V Release 5.x (UnixWare 7, OpenUNIX 8)\n# mods after mail fm Andy Dougherty\n# Reworked by hops@sco.com Sept/Oct 1999 for UW7.1 platform support \n#   Boyd Gerber, gerberb@zenez.com 1999/09/21 for threads support.\n# Originally taken from svr4 hints.sh  21-Sep-98 hops@sco.com\n# which was version of 1996/10/25 by Tye McQueen, tye@metronet.com\n\n# Use Configure -Dusethreads to enable threads.\n# Use Configure -Dcc=gcc to use gcc.\ncase \"$cc\" in\n*gcc*)\n    #  \"$gccversion\" not set yet\n    if [ \"X$gccversion\" = \"X\" ]; then\n\t# Done too late in Configure if hinted\n\tgccversion=`$cc -dumpversion`\n    fi\n    case $gccversion in\n    *2.95*)\n         ccflags='-fno-strict-aliasing'\n        # More optimisation provided in gcc-2.95 causes miniperl to segv.\n        # -fno-strict-aliasing is supposed to correct this but \n        # if it doesn't and you get segv when the build runs miniperl then \n        # disable optimisation as below\n        #  optimize=' '\n        ;;\n    esac\n    ;;  \nesac\n\n# Hardwire the processor to 586 for consistency with autoconf\n# archname='i586-svr5'\n#  -- seems this is generally disliked by perl porters so leave it to float\n\n# Our default setup excludes anything from /usr/ucblib (and consequently dbm)\n# as later modules assume symbols found are available in shared libs \n# On svr5 these are static archives which causes problems for\n# dynamic modules loaded later (and ucblib is a bad dream anyway)\n# \n# However there is a dbm library built from the ucb sources outside ucblib\n# at http://www.sco.com/skunkware (installing into /usr/local) so if we\n# detect this we'll use it. You can change the default\n# (to allow ucblib and its dbm or disallowing non ucb dbm) by \n# changing 'want_*' config values below to '' to disable or otherwise to enable\n\n#    Leave leading tabs so Configure doesn't propagate variables to config.sh\n\n\twant_ucb=''\t\t# don't use anything from /usr/ucblib - icky\n\twant_dbm='yes'\t\t# use dbm if can find library in /usr/local/lib\n\twant_gdbm='yes'\t\t# use gdbm if can find library in /usr/local/lib\n\twant_udk70=''\t\t# link with old static libc pieces\n            # link with udk70 if building on 7.1 and want resulting binary\n            # to run on uw7.0* - it will link in referenced static symbols \n            # of libc that are (now) in the shared libc.so on 7.1 but were \n            # not there in 7.0.\n            # There are still scenarios where this is still insufficient so \n            # overall it is preferable to get ptf7051e \n            #   ftp://ftp.sco.com/SLS/ptf7051e.Z\n            # installed on any/all 7.0 systems and leave the above unset\n            # (sadly this is unavailable as of 2009-08-03)\n\nif [ \"$want_ucb\" ] ; then \n    ldflags= '-L/usr/ucblib'\n    ccflags='-I/usr/ucbinclude'\n    # /usr/ccs/include and /usr/ccs/lib are used implicitly by cc as reqd\nelse\n    libswanted=`echo \" $libswanted \" | sed -e 's/ ucb / /'`\n    glibpth=`echo \" $glibpth \" | sed -e 's/ \\/usr\\/ucblib / /'`\n\n    # If see libdbm in /usr/local and not overridden assume its the\n    # non ucblib rebuild from skunkware  and use it\n    if [ ! -f /usr/local/lib/libdbm.so -o ! \"$want_dbm\" ] ; then\n        i_dbm='undef'\n        libswanted=`echo \" $libswanted \" | sed -e 's/ dbm / /'`\n    fi\nfi\n\nif [ ! \"$want_gdbm\" ] ; then \n   i_gdbm='undef'\n   libswanted=`echo \" $libswanted \" | sed -e 's/ gdbm / /'`\nfi\n\n\n# Don't use problematic libraries:\n#   libmalloc.a - Probably using Perl's malloc() anyway.\n#   libc:  on UW7 don't want -lc explicitly as native cc gives warnings/errors\nlibswanted=`echo \" $libswanted \" | sed -e 's/ malloc / /' -e 's/ c / /'`\n\n# remove /shlib and /lib from library search path as both symlink to /usr/lib\n# where runtime shared libc is \nglibpth=`echo \" $glibpth \" | sed -e 's/ \\/shlib / /' -e 's/ \\/lib / /'`\n\n# Don't use BSD emulation pieces (/usr/ucblib) regardless\n# these would probably be autonondetected anyway but ...\ngconvert_preference='gcvt sprintf'\t# Try gcvt() before gconvert().\nd_index='undef' d_killpg='undef' d_getprior='undef' d_setprior='undef'\nd_setlinebuf='undef' \nd_setregid='undef' d_setreuid='undef'  # -- in /usr/lib/libc.so.1\n\n# Broken C-Shell tests (Thanks to Tye McQueen):\n# The OS-specific checks may be obsoleted by the this generic test.\n\tsh_cnt=`sh -c 'echo /*' | wc -c`\n\tcsh_cnt=`csh -f -c 'glob /*' 2>/dev/null | wc -c`\n\tcsh_cnt=`expr 1 + $csh_cnt`\nif [ \"$sh_cnt\" -ne \"$csh_cnt\" ]; then\n    echo \"Your csh has a broken 'glob', disabling...\" >&2\n    d_csh='undef'\nfi\n\n# Unixware-specific problems.  UW7 give correctname with uname -s\n# UnixWare has a broken csh.  (This might already be detected above).\n# Configure can't detect memcpy or memset on Unixware 2 or 7\n#\n#    Leave leading tabs on the next two lines so Configure doesn't \n#    propagate these variables to config.sh\n\tuw_ver=`uname -v`\n\tuw_isuw=`uname -s 2>&1`\n\nif [ \"$uw_isuw\" = \"UnixWare\" -o \"$uw_isuw\" = \"OpenUNIX\" ]; then\n   case $uw_ver in\n   8.*|7.1*)\n\td_csh='undef'\n\tstdio_cnt='((fp)->__cnt)'\n\td_stdio_cnt_lval='define'\n\tstdio_ptr='((fp)->__ptr)'\n\td_stdio_ptr_lval='define'\n\n        d_setregid='define' #  \" \n        d_setreuid='define' #  \" \n\n        if [ -f /usr/ccs/lib/libcudk70.a -a \"$want_udk70\" ] ; then\n            libswanted=\" $libswanted cudk70\"\n        fi\n\t;;\n   7*)\n\td_csh='undef'\n\tstdio_cnt='((fp)->__cnt)'\n\td_stdio_cnt_lval='define'\n\tstdio_ptr='((fp)->__ptr)'\n\td_stdio_ptr_lval='define'\n\t;;\n   esac\nfi\n# End of Unixware-specific tests.\n\n###############################################################\n# Dynamic loading section: Is default so it should just happen.\n# set below to explicitly force.\n# usedl='define'\n# dlext='so'\n# dlsrc='dl_dlopen.xs'\n#\n# ccdlflags : must tell the linker to export all global symbols\n# cccdlflags: must tell the compiler to generate relocatable code\n# lddlflags : must tell the linker to output a shared library\n\n# use shared perl lib if the user doesn't choose otherwise\nif test \"$uw_isuw\" != \"OpenUNIX\"; then\n    if test \"x$useshrplib\" = \"x\"; then\n\tuseshrplib='true'\n    fi\nfi\n\ncase \"$cc\" in\n       *gcc*)\n           ccdlflags='-Xlinker -Bexport '\n           cccdlflags='-fpic'\n           lddlflags='-G '\n        ;;\n\n        *)\n           ccdlflags='-Wl,-Bexport'\n           cccdlflags='-Kpic'\n           lddlflags='-G -Wl,-Bexport'\n        ;;\nesac\n\n############################################################################\n# Thread support\n# use Configure -Dusethreads to enable\n# This script UU/usethreads.cbu will get 'called-back' by Configure \n# after it has prompted the user for whether to use threads.\ncat > UU/usethreads.cbu <<'EOCBU'\ncase \"$usethreads\" in\n$define|true|[yY]*)\n        ccflags=\"$ccflags\"\n        shift\n        libswanted=\"$libswanted $*\"\n  case \"$cc\" in\n       *gcc*)\n           ccflags=\"-D_REENTRANT $ccflags -fpic -pthread\"\n           cccdlflags='-fpic'\n           lddlflags='-pthread -G '\n        ;;\n        *)\n           ccflags=\"-D_REENTRANT $ccflags -KPIC -Kthread\"\n           ccdlflags='-Kthread -Wl,-Bexport'\n           cccdlflags='-KPIC -Kthread'\n           lddlflags='-G -Kthread -Wl,-Bexport '\n     \t   ldflags='-Kthread'\n        ;;\n  esac\nesac\nEOCBU\n\n\nd_suidsafe='define'\t# \"./Configure -d\" can't figure this out easily\n\n################## final caveat msgs to builder ###############\ncat <<'EOM' >&4\n\nIf you wish to use dynamic linking, you must use \n\tLD_LIBRARY_PATH=`pwd`; export LD_LIBRARY_PATH\nor\n\tsetenv LD_LIBRARY_PATH `pwd`\nbefore running make.\n\nIf you are using shared libraries from /usr/local/lib\nfor libdbm or libgdbm you may need to set\n\tLD_RUN_PATH=/usr/local/lib; export LD_RUN_PATH\nin order for Configure to compile the simple test program\n\nEOM\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/unicos.sh": "case `uname -r` in\n6.1*) shellflags=\"-m+65536\" ;;\nesac\n\ncase \"$optimize\" in\n# If we used fastmd (the default) integer values would be limited to 46 bits.\n# --Mark P. Lutz\n'') optimize=\"$optimize -O1 -h nofastmd\" ;;\nesac\n\n# At least in the following environment\n# uname -a: snxxxx xxxx 9.0.2.2 sin.0 CRAY Y-MP\n# cc -V:    Cray Standard C Version 4.0.3  (057126) Jan 29 2006  07:27:26\n# one has to drop optimisation from perl.c or otherwise\n# the resulting miniperl executable does nothing (visible)\n# but always exits with zero (success) exit status, this\n# making it impossible to build the perl executable. --jhi\nperl_cflags='optimize=\"-O0\"'\n\n# The default is to die in runtime on math overflows.\n# Let's not do that. --jhi\nccflags=\"$ccflags -h matherror=errno\" \n\n# Cray floating point (cfp) CPUs need -h rounddiv\n# (It gives int((2/3)*3) a chance to be 2, not 1. --jhi)\n# (but IEEE CPUs, IEEE/ieee/CPE1 CPUs should not have -h rounddiv,\n#  since the compiler on those CPUs doesn't even support the option.)\nif /etc/cpu -i | grep -q cfp\nthen\n    ccflags=\"$ccflags -h rounddiv\"\nfi\n\n# Avoid an optimizer bug where a volatile variables\n# isn't correctly saved and restored --Mark P. Lutz \npp_ctl_cflags='ccflags=\"$ccflags -h scalar0 -h vector0\"'\n# Otherwise the unpack %65c checksums will fail.\npp_pack_cflags='optimize=\"$ccflags -h scalar0 -h vector0\"'\ncase \"$usemymalloc\" in\n'') # The perl malloc.c SHOULD work says Ilya.\n    # But for the time being (5.004_68), alas, it doesn't. --jhi\n    # usemymalloc='y'\n    # ccflags=\"$ccflags -DNO_RCHECK\"\n    usemymalloc='n'\n    ;;\nesac\n# Configure gets fooled for some reason, these do not exist.\nd_getpgid='undef'\nd_setitimer='undef'\n# These exist but do not really work.\nd_setregid='undef'\nd_setreuid='undef'\n# No shared libraries.\nso='none'\n# No dynaloading.\nd_dlopen='undef'\ni_dlfcn='undef'\n# Threads call-back unit.\ncat > UU/usethreads.cbu <<'EOCBU'\n# This script UU/usethreads.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use threads.\ncase \"$usethreads\" in\n$define|true|[yY]*)\n        set `echo X \"$libswanted \"| sed -e \"s/ c / pthread c /\"`\n        shift\n        libswanted=\"$*\"\n\t;;\nesac\nEOCBU\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/linux-android.sh": "# set -x\n\n# Install the perl and its libraries anywhere:\ncase \"$userelocatableinc\" in\n'') userelocatableinc='define' ;;\nesac\n\n# The Android linker has some unusual behavior: No matter what\n# path is passed in to dlopen(), it'll only use the path's\n# basename when trying to find a cached library.\n# Unfortunately, this is quite problematic for us, since for example,\n# Hash::Util and List::Util both end up creating a Util.so --\n# So if you load List::Util and then Hash::Util, the dlopen() for\n# the latter will return the handle for the former.\n# See the implementation for details:\n# https://code.google.com/p/android-source-browsing/source/browse/linker/linker.c?repo=platform--bionic&r=9ec0f03a0d0b17bbb94ac0b9fef6add28a133c3a#1231\n# What d_libname_unique does is inform MakeMaker that, rather than\n# creating Hash/Util/Util.so, it needs to make Hash/Util/Perl_Hash_Util.so\nd_libname_unique='define'\n\n# On Android the shell is /system/bin/sh:\ntargetsh='/system/bin/sh'\ncase \"$usecrosscompile\" in\ndefine) ;;\n   # If we aren't cross-compiling, then sh should also point\n   # to /system/bin/sh.\n*) sh=$targetsh ;;\nesac\n\n# Make sure that we look for libm\nlibswanted=\"$libswanted m\"\n\n# Down with locales!\n# https://github.com/android/platform_bionic/blob/master/libc/CAVEATS\nd_locconv='undef'\nd_setlocale='undef'\nd_setlocale_r='undef'\nd_lc_monetary_2008='undef'\ni_locale='undef'\n\n# https://code.google.com/p/android-source-browsing/source/browse/libc/netbsd/net/getservent_r.c?repo=platform--bionic&r=ca6fe7bebe3cc6ed7e2db5a3ede2de0fcddf411d#95\nd_getservent_r='undef'\n\n# Bionic defines several stubs that just warn and return NULL\n# https://gitorious.org/0xdroid/bionic/blobs/70b2ef0ec89a9c9d4c2d4bcab728a0e72bafb18e/libc/bionic/stubs.c\n# https://android.googlesource.com/platform/bionic/+/master/libc/bionic/stubs.cpp\n\n# If they warn with 'FIX' or 'Android', assume they are the stubs\n# we want to avoid.\n\n# These are all stubs as well, but the core doesn't use them:\n# getusershell setusershell endusershell\n\n# This script UU/archname.cbu will get 'called-back' by Configure.\n$cat > UU/archname.cbu <<'EOCBU'\n# egrep pattern to detect a stub warning on Android.\n# Right now we're checking for:\n# Android 2.x: FIX ME! implement FUNC\n# Android 4.x: FUNC is not implemented on Android\nandroid_stub='FIX|Android'\n\n$cat > try.c << 'EOM'\n#include <netdb.h>\nint main() { (void) getnetbyname(\"foo\"); return(0); }\nEOM\n$cc $ccflags try.c -o try\nandroid_warn=`$run ./try 2>&1 | $egrep \"$android_stub\"`\nif test \"X$android_warn\" != X; then\n   d_getnbyname=\"$undef\"\nfi\n\n$cat > try.c << 'EOM'\n#include <netdb.h>\nint main() { (void) getnetbyaddr((uint32_t)1, AF_INET); return(0); }\nEOM\n$cc $ccflags try.c -o try\nandroid_warn=`$run ./try 2>&1 | $egrep \"$android_stub\"`\nif test \"X$android_warn\" != X; then\n   d_getnbyaddr=\"$undef\"\nfi\n\n$cat > try.c << 'EOM'\n#include <stdio.h>\n#include <mntent.h>\n#include <unistd.h>\nint main() { (void) getmntent(stdout); return(0); }\nEOM\n$cc $ccflags try.c -o try\nandroid_warn=`$run ./try 2>&1 | $egrep \"$android_stub\"`\nif test \"X$android_warn\" != X; then\n   d_getmntent=\"$undef\"\nfi\n\n$cat > try.c << 'EOM'\n#include <netdb.h>\nint main() { (void) getprotobyname(\"foo\"); return(0); }\nEOM\n$cc $ccflags try.c -o try\nandroid_warn=`$run ./try 2>&1 | $egrep \"$android_stub\"`\nif test \"X$android_warn\" != X; then\n   d_getpbyname=\"$undef\"\nfi\n\n$cat > try.c << 'EOM'\n#include <netdb.h>\nint main() { (void) getprotobynumber(1); return(0); }\nEOM\n$cc $ccflags try.c -o try\nandroid_warn=`$run ./try 2>&1 | $egrep \"$android_stub\"`\nif test \"X$android_warn\" != X; then\n   d_getpbynumber=\"$undef\"\nfi\n\n$cat > try.c << 'EOM'\n#include <sys/types.h>\n#include <pwd.h>\nint main() { endpwent(); return(0); }\nEOM\n$cc $ccflags try.c -o try\nandroid_warn=`$run ./try 2>&1 | $egrep \"$android_stub\"`\nif test \"X$android_warn\" != X; then\n   d_endpwent=\"$undef\"\nfi\n\n$cat > try.c << 'EOM'\n#include <unistd.h>\nint main() { (void) ttyname(STDIN_FILENO); return(0); }\nEOM\n$cc $ccflags try.c -o try\nandroid_warn=`$run ./try 2>&1 | $egrep \"$android_stub\"`\nif test \"X$android_warn\" != X; then\n   d_ttyname=\"$undef\"\nfi\n\nEOCBU\n\nif $test \"X$targetrun\" = \"Xadb\"; then\n\n$rm $run $to $from $targetmkdir\n\ncase \"$src\" in\n    /*) run=$src/Cross/run\n            targetmkdir=$src/Cross/mkdir\n            to=$src/Cross/to\n            from=$src/Cross/from\n            ;;\n    *)  pwd=`test -f ../Configure && cd ..; pwd`\n            run=$pwd/Cross/run\n            targetmkdir=$pwd/Cross/mkdir\n            to=$pwd/Cross/to\n            from=$pwd/Cross/from\n               ;;\nesac\n\ntargetrun=adb-shell\ntargetto=adb-push\ntargetfrom=adb-pull\nrun=$run-$targetrun\nto=$to-$targetto\nfrom=$from-$targetfrom\n\n$cat >$run <<EOF\n#!/bin/sh\ndoexit=\"echo \\\\\\$? >$targetdir/output.status\"\nenv=''\ncase \"\\$1\" in\n-cwd)\n  shift\n  cwd=\\$1\n  shift\n  ;;\nesac\ncase \"\\$1\" in\n-env)\n  shift\n  env=\\$1\n  shift\n  ;;\nesac\ncase \"\\$cwd\" in\n'') cwd=$targetdir ;;\nesac\ncase \"\\$env\" in\n'') env=\"echo \"\nesac\nexe=\\$1\nshift\nargs=\\$@\n$to \\$exe > /dev/null 2>&1\n\n# send copy results to /dev/null as otherwise it outputs speed stats which gets in our way.\n# sometimes there is no $?, I dunno why? we then get Cross/run-adb-shell: line 39: exit: XX: numeric argument required\nadb -s $targethost shell \"sh -c '(cd \\$cwd && \\$env ; \\$exe \\$args > $targetdir/output.stdout 2>$targetdir/output.stderr) ; \\$doexit '\" > /dev/null\n\nrm output.stdout output.stderr output.status 2>/dev/null\n\n$from output.stdout\n$from output.stderr\n$from output.status\n\n# We get back Ok\\r\\n on android for some reason, grrr:\n$cat output.stdout | $tr -d '\\r'\nif test -s output.stderr; then\n    $cat output.stderr | $tr -d '\\r' >&2\nfi\n\nresult_status=\\`$cat output.status | $tr -d '\\r'\\`\n\nrm output.stdout output.stderr output.status\n\n# Also, adb doesn't exit with the commands exit code, like ssh does, double-grr\nexit \\$result_status\n\nEOF\n$chmod a+rx $run\n\n$cat >$targetmkdir <<EOF\n#!/bin/sh\nadb -s $targethost shell \"mkdir -p \\$@\"\nEOF\n$chmod a+rx $targetmkdir\n\n$cat >$to <<EOF\n#!/bin/sh\nfor f in \\$@\ndo\n  case \"\\$f\" in\n  /*)\n    adb -s $targethost push \\$f \\$f            || exit 1\n    ;;\n  *)\n    (adb -s $targethost push \\$f $targetdir/\\$f < /dev/null 2>&1) || exit 1\n    ;;\n  esac\ndone\nexit 0\nEOF\n$chmod a+rx $to\n\n$cat >$from <<EOF\n#!/bin/sh\nfor f in \\$@\ndo\n  $rm -f \\$f\n  (adb -s $targethost pull $targetdir/\\$f . > /dev/null 2>&1) || exit 1\ndone\nexit 0\nEOF\n$chmod a+rx $from\n\nfi # Cross-compiling with adb\n\ncase \"$usecrosscompile\" in\ndefine)\n# The tests for this in Configure doesn't play nicely with\n# cross-compiling\nd_procselfexe=\"define\"\nif $test \"X$hostosname\" = \"Xdarwin\"; then\n  firstmakefile=GNUmakefile;\nfi\n\n# When cross-compiling, full_csh and d_csh will get the\n# host's values, which is all sorts of wrong.  So unless\n# full_csh has been set on the command line, set d_csh to\n# undef.\ncase \"$full_csh\" in\n'') d_csh=\"$undef\"\n;;\nesac\n\n;;\n*)\nldflags=\"$ldflags -L/system/lib\"\n;;\nesac\n\nosvers=\"`$run getprop ro.build.version.release`\"\n\n# We want osname to be linux-android during Configure,\n# but plain 'android' afterwards.\ncase \"$src\" in\n    /*) pwd=\"$src\";;\n    *)  pwd=`test -f ../Configure && cd ..; pwd`\n        ;;\nesac\n\n$cat <<'EOO' >> $pwd/config.arch\n\nosname='android'\neval \"libpth='$libpth /system/lib /vendor/lib'\"\n\nif $test \"X$procselfexe\" = X; then\n    case \"$d_procselfexe\" in\n        define) procselfexe='\"/proc/self/exe\"';;\n    esac\nfi\nEOO\n\n# Android is a linux variant, so run those hints.\n. ./hints/linux.sh\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/aix_4.sh": "# hints/aix.sh\n#\n# Split off from aix.sh on 04 Feb 2004 by H.Merijn Brand\n#\n# AIX 4.1 hints thanks to Christopher Chan-Nui <channui@austin.ibm.com>.\n# AIX 4.1 pthreading by Christopher Chan-Nui <channui@austin.ibm.com> and\n#\t  Jarkko Hietaniemi <jhi@iki.fi>.\n# AIX 4.3.x LP64 build by Steven Hirsch <hirschs@btv.ibm.com>\n# Merged on Mon Feb  6 10:22:35 EST 1995 by\n#   Andy Dougherty  <doughera@lafayette.edu>\n\n# Contact dfavor@corridor.com for any of the following:\n#\n#    - AIX 43x and above support\n#    - gcc + threads support\n#    - socks support\n#\n# Apr 99 changes:\n#\n#    - use nm in AIX 43x and above\n#    - gcc + threads now builds\n#    [(added support for socks) Jul 99 SOCKS support rewritten]\n#\n# Notes:\n#\n#    - shared libperl support is tricky. if ever libperl.a ends up\n#      in /usr/local/lib/* it can override any subsequent builds of\n#      that same perl release. to make sure you know where the shared\n#      libperl.a is coming from do a 'dump -Hv perl' and check all the\n#      library search paths in the loader header.\n#\n#      it would be nice to warn the user if a libperl.a exists that is\n#      going to override the current build, but that would be complex.\n#\n#      better yet, a solid fix for this situation should be developed.\n#\n\n# Configure finds setrgid and setruid, but they're useless.  The man\n# pages state:\n#    setrgid: The EPERM error code is always returned.\n#    setruid: The EPERM error code is always returned. Processes cannot\n#\t      reset only their real user IDs.\nd_setrgid='undef'\nd_setruid='undef'\n\nalignbytes=8\n\ncase \"$usemymalloc\" in\n    '')  usemymalloc='n' ;;\n    esac\n\n# Intuiting the existence of system calls under AIX is difficult,\n# at best; the safest technique is to find them empirically.\n\n# AIX 4.3.* and above default to letting Configure test if nm\n# extraction will work.\ncase \"$osvers\" in\n    4.1.*|4.2.*)\n\tcase \"$usenm\" in\n\t    '') usenm='undef' ;;\n\t    esac\n\tcase \"$usenativedlopen\" in\n\t    '') usenativedlopen='false' ;;\n\t    esac\n\t;;\n    *)\n\tcase \"$usenativedlopen\" in\n\t    '') usenativedlopen='true' ;;\n\t    esac\n\t;;\n    esac\n\nso=\"a\"\n# AIX itself uses .o (libc.o) but we prefer compatibility\n# with the rest of the world and with rest of the scripting\n# languages (Tcl, Python) and related systems (SWIG).\n# Stephanie Beals <bealzy@us.ibm.com>\ndlext=\"so\"\n\n# Take possible hint from the environment.  If 32-bit is set in the\n# environment, we can override it later.  If set for 64, the\n# 'sizeof' test sees a native 64-bit architecture and never looks back.\ncase \"$OBJECT_MODE\" in\n    32)\n\tcat >&4 <<EOF\n\nYou have OBJECT_MODE=32 set in the environment.\nI take this as a hint you do not want to\nbuild for a 64-bit address space. You will be\ngiven the opportunity to change this later.\nEOF\n\t;;\n    64)\n\tcat >&4 <<EOF\n\nYou have OBJECT_MODE=64 set in the environment.\nThis forces a full 64-bit build.  If that is\nnot what you intended, please terminate this\nprogram, unset it and restart.\nEOF\n\t;;\n    *)  ;;\n    esac\n\n# uname -m output is too specific and not appropriate here\ncase \"$archname\" in\n    '') archname=\"$osname\" ;;\n    esac\n\ncc=${cc:-cc}\nccflags=\"$ccflags -D_ALL_SOURCE -D_ANSI_C_SOURCE -D_POSIX_SOURCE\"\ncase \"$cc\" in\n    *gcc*) ;;\n    *) ccflags=\"$ccflags -qmaxmem=-1 -qnoansialias\" ;;\n    esac\n\n# since change #28654, _XOPEN_SOURCE symbol needs to be defined on aix 4.2\n# to avoid the following build error in perlio.c :\n# 1506-294 (S) Syntax error in expression on #if directive.\n#\ncase \"$osvers\" in\n    4.2.1.0)\n\tccflags=\"$ccflags -D_XOPEN_SOURCE\"\n\t# aix 4.2 does not have IPv6 support\n\td_inetpton='undef'\n\td_inetntop='undef'\n\t;;\n    esac\nnm_opt='-B'\n\n# These functions don't work like Perl expects them to.\nd_setregid='undef'\nd_setreuid='undef'\n\n# Changes for dynamic linking by Wayne Scott <wscott@ichips.intel.com>\n#\n# Tell perl which symbols to export for dynamic linking.\ncccdlflags='none'\t# All AIX code is position independent\n   cc_type=xlc\t\t# do not export to config.sh\ncase \"$cc\" in\n    *gcc*)\n\tcc_type=gcc\n\tccdlflags='-Xlinker'\n\tif [ \"X$gccversion\" = \"X\" ]; then\n\t    # Done too late in Configure if hinted\n\t    gccversion=`$cc -dumpversion`\n\t    fi\n\t;;\n\n    *)  ccversion=`lslpp -L | grep 'C for AIX Compiler$' | grep -v '\\.msg\\.[A-Za-z_]*\\.' | head -1 | awk '{print $1,$2}'`\n\tcase \"$ccversion\" in\n\t    '') ccversion=`lslpp -L | grep 'IBM C and C++ Compilers LUM$'`\n\t\t;;\n\n\t    *.*.*.*.*.*.*)\t\t# Ahhrgg, more than one C compiler installed\n\t\tfirst_cc_path=`which ${cc:-cc}`\n\t\tcase \"$first_cc_path\" in\n\t\t    *vac*)\n\t\t\tcc_type=vac ;;\n\t\t    /usr/bin/cc)\t\t# Check the symlink\n\t\t\tif [ -h $first_cc_path ] ; then\n\t\t\t    ls -l $first_cc_path > reflect\n\t\t\t    if grep -i vac reflect >/dev/null 2>&1 ; then\n\t\t\t\tcc_type=vac\n\t\t\t\tfi\n\t\t\t    rm -f reflect\n\t\t\t    fi\n\t\t\t;;\n\t\t    esac\n\t\tccversion=`lslpp -L | grep 'C for AIX Compiler$' | grep -i $cc_type | head -1`\n\t\t;;\n\n\t    vac*.*.*.*)\n\t\tcc_type=vac\n\t\t;;\n\t    esac\n\tccversion=`echo \"$ccversion\" | awk '{print $2}'`\n\n\tcase \"$ccversion\" in\n\t    3.6.6.0)\n\t\toptimize='none'\n\t\t;;\n\n\t    4.4.0.0|4.4.0.1|4.4.0.2)\n\t\tcat >&4 <<EOF\n***\n*** This C compiler ($ccversion) is outdated.\n***\n*** Please upgrade to at least 4.4.0.3.\n***\nEOF\n\t\t;;\n\n\t    5.0.0.0)\n\t\tcat >&4 <<EOF\n***\n*** This C compiler ($ccversion) is known to have too many optimizer\n*** bugs to compile a working Perl.\n***\n*** Consider upgrading your C compiler, or getting the GNU cc (gcc).\n***\n*** Cannot continue, aborting.\nEOF\n\t\texit 1\n\t\t;;\n\n\t    5.0.1.0)\n\t\tcat >&4 <<EOF\n***\n*** This C compiler ($ccversion) is known to have optimizer problems\n*** when compiling regcomp.c.\n***\n*** Disabling optimization for that file but consider upgrading\n*** your C compiler.\n***\nEOF\nregcomp_cflags='optimize='\n\t\t;;\n\t    esac\n\tcase \"$ccversion\" in\n\t    5*) usemallocwrap='n' ;; # causes panic in miniperl\n\t    esac\n    esac\n# the required -bE:$installarchlib/CORE/perl.exp is added by\n# libperl.U (Configure) later.\n\n# The first 3 options would not be needed if dynamic libs. could be linked\n# with the compiler instead of ld.\n# -bI:$(PERL_INC)/perl.exp  Read the exported symbols from the perl binary\n# -bE:$(BASEEXT).exp\t    Export these symbols.  This file contains only one\n#\t\t\t    symbol: boot_$(EXP)\t can it be auto-generated?\nif test $usenativedlopen = 'true' ; then\n    lddlflags=\"$lddlflags -bhalt:4 -bexpall -G -bnoentry -lc\"\nelse\n    lddlflags=\"$lddlflags -bhalt:4 -bM:SRE -bI:\\$(PERL_INC)/perl.exp -bE:\\$(BASEEXT).exp -bnoentry -lc\"\n    fi\n\ncase \"$use64bitall\" in\n    $define|true|[yY]*) use64bitint=\"$define\" ;;\n    esac\n\ncase \"$usemorebits\" in\n    $define|true|[yY]*) use64bitint=\"$define\"; uselongdouble=\"$define\" ;;\n    esac\n\ncase $cc_type in\n    vac|xlc)\n\tcase \"$uselongdouble\" in\n\t    $define|true|[yY]*)\n\t\tccflags=\"$ccflags -qlongdouble\"\n\t\tlibswanted=\"c128 $libswanted\"\n\t\tlddlflags=`echo \"$lddlflags \" | sed -e 's/ -lc / -lc128 -lc /'`\n\t\t;;\n\t    esac\n    esac\n\ncase \"$cc\" in\n    *gcc*) ;;\n    cc*|xlc*) # cc should've been set by line 116 or so if empty.\n\tif test ! -x /usr/bin/$cc -a -x /usr/vac/bin/$cc; then\n\t    case \":$PATH:\" in\n\t\t*:/usr/vac/bin:*) ;;\n\t\t*)  if test ! -x /QOpenSys/usr/bin/$cc; then\n\t\t\t# The /QOpenSys/usr/bin/$cc saves us if we are\n\t\t\t# building natively in OS/400 PASE.\n\t\t\tcat >&4 <<EOF\n\n***\n*** You either implicitly or explicitly specified an IBM C compiler,\n*** but you do not seem to have one in /usr/bin, but you seem to have\n*** the VAC installed in /usr/vac, but you do not have the /usr/vac/bin\n*** in your PATH.  I suggest adding that and retrying Configure.\n***\nEOF\n\t\t\texit 1\n\t\t\tfi\n\t\t\t;;\n\t\tesac\n\t    fi\n\t;;\n    esac\n\ncase \"$ldlibpthname\" in\n    '') ldlibpthname=LIBPATH ;;\n    esac\n\n# AIX 4.2 (using latest patchlevels on 20001130) has a broken bind\n# library (getprotobyname and getprotobynumber are outversioned by\n# the same calls in libc, at least for xlc version 3...\ncase \"`oslevel`\" in\n    4.2.1.*)\n        case \"$ccversion\" in    # Don't know if needed for gcc\n\t    3.1.4.*|5.0.2.*)    # libswanted \"bind ... c ...\" => \"... c bind ...\"\n\t        set `echo X \"$libswanted \"| sed -e 's/ bind\\( .*\\) \\([cC]\\) / \\1 \\2 bind /'`\n\t        shift\n\t        libswanted=\"$*\"\n\t        ;;\n\t    esac\n        ;;\n    esac\n\n# This script UU/usethreads.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use threads.\ncat > UU/usethreads.cbu <<'EOCBU'\ncase \"$usethreads\" in\n    $define|true|[yY]*)\n\td_drand48_r='undef'\n\td_endgrent_r='undef'\n\td_endpwent_r='undef'\n\td_getgrent_r='undef'\n\td_getpwent_r='undef'\n\td_random_r='undef'\n\td_setgrent_r='undef'\n\td_setpwent_r='undef'\n\td_srand48_r='undef'\n\td_strerror_r='undef'\n\n\tccflags=\"$ccflags -DNEED_PTHREAD_INIT\"\n\tcase \"$cc\" in\n\t    *gcc*)\n\t\tccflags=\"-D_THREAD_SAFE $ccflags\"\n\t\t;;\n\t    cc_r) ;;\n\t    cc|xl[cC]|xl[cC]_r)\n\t\techo >&4 \"Switching cc to cc_r because of POSIX threads.\"\n\t\t# xlc_r has been known to produce buggy code in AIX 4.3.2.\n\t\t# (e.g. pragma/overload core dumps)\t Let's suspect xlC_r, too.\n\t\t# --jhi@iki.fi\n\t\tcc=cc_r\n\n\t\tcase \"`oslevel`\" in\n\t\t    4.2.1.*) i_crypt='undef' ;;\n\t\t    esac\n\t\t;;\n\t    '')\n\t\tcc=cc_r\n\t\t;;\n\t    *)\n\t\tcat >&4 <<EOM\n*** For pthreads you should use the AIX C compiler cc_r.\n*** (now your compiler was set to '$cc')\n*** Cannot continue, aborting.\nEOM\n\t\texit 1\n\t\t;;\n\t    esac\n\n\t# c_rify libswanted.\n\tset `echo X \"$libswanted \"| sed -e 's/ \\([cC]\\) / \\1_r /g'`\n\tshift\n\tlibswanted=\"$*\"\n\t# c_rify lddlflags.\n\tset `echo X \"$lddlflags \"| sed -e 's/ \\(-l[cC]\\) / \\1_r /g'`\n\tshift\n\tlddlflags=\"$*\"\n\n\t# Insert pthreads to libswanted, before any libc or libC.\n\tset `echo X \"$libswanted \"| sed -e 's/ \\([cC]_r\\) / pthreads \\1 /'`\n\tshift\n\tlibswanted=\"$*\"\n\t# Insert pthreads to lddlflags, before any libc or libC.\n\tset `echo X \"$lddlflags \" | sed -e 's/ \\(-l[cC]_r\\) / -lpthreads \\1 /'`\n\tshift\n\tlddlflags=\"$*\"\n\t;;\n    esac\nEOCBU\n\n# This script UU/uselargefiles.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use large files.\ncat > UU/uselargefiles.cbu <<'EOCBU'\ncase \"$uselargefiles\" in\n    ''|$define|true|[yY]*)\n\t# Configure should take care of use64bitint and use64bitall being\n\t# defined before uselargefiles.cbu is consulted.\n\tif test X\"$use64bitint:$quadtype\" = X\"$define:long\" -o X\"$use64bitall\" = Xdefine; then\n# Keep these at the left margin.\nccflags_uselargefiles=\"`getconf XBS5_LP64_OFF64_CFLAGS 2>/dev/null`\"\nldflags_uselargefiles=\"`getconf XBS5_LP64_OFF64_LDFLAGS 2>/dev/null`\"\n\telse\n# Keep these at the left margin.\nccflags_uselargefiles=\"`getconf XBS5_ILP32_OFFBIG_CFLAGS 2>/dev/null`\"\nldflags_uselargefiles=\"`getconf XBS5_ILP32_OFFBIG_LDFLAGS 2>/dev/null`\"\n\t    fi\n\n\t# _Somehow_ in AIX 4.3.1.0 the above getconf call manages to\n\t# insert(?) *something* to $ldflags so that later (in Configure) evaluating\n\t# $ldflags causes a newline after the '-b64' (the result of the getconf).\n\t# (nothing strange shows up in $ldflags even in hexdump;\n\t#  so it may be something (a bug) in the shell, instead?)\n\t# Try it out: just uncomment the below line and rerun Configure:\n# echo >&4 \"AIX 4.3.1.0 $ldflags_uselargefiles mystery\" ; exit 1\n\t# Just don't ask me how AIX does it, I spent hours wondering.\n\t# Therefore the line re-evaluating ldflags_uselargefiles: it seems to fix\n\t# the whatever it was that AIX managed to break. --jhi\n\tldflags_uselargefiles=\"`echo $ldflags_uselargefiles`\"\n\tif test X\"$use64bitint:$quadtype\" = X\"$define:long\" -o X\"$use64bitall\" = Xdefine; then\n# Keep this at the left margin.\nlibswanted_uselargefiles=\"`getconf XBS5_LP64_OFF64_LIBS 2>/dev/null|sed -e 's@^-l@@' -e 's@ -l@ @g'`\"\n\telse\n# Keep this at the left margin.\nlibswanted_uselargefiles=\"`getconf XBS5_ILP32_OFFBIG_LIBS 2>/dev/null|sed -e 's@^-l@@' -e 's@ -l@ @g'`\"\n\t    fi\n\n\tcase \"$ccflags_uselargefiles$ldflags_uselargefiles$libs_uselargefiles\" in\n\t    '') ;;\n\t    *)  ccflags=\"$ccflags $ccflags_uselargefiles\"\n\t        ldflags=\"$ldflags $ldflags_uselargefiles\"\n\t        libswanted=\"$libswanted $libswanted_uselargefiles\"\n\t        ;;\n\t    esac\n\n\tcase \"$gccversion\" in\n\t    '') ;;\n\t    *)  # Remove xlc-specific -qflags.\n\t        ccflags=\"`echo $ccflags | sed -e 's@ -q[^ ]*@ @g' -e 's@^-q[^ ]* @@g'`\"\n\t        ldflags=\"`echo $ldflags | sed -e 's@ -q[^ ]*@ @g' -e 's@^-q[^ ]* @@g'`\"\n\t        # Move xlc-specific -bflags.\n\t        ccflags=\"`echo $ccflags | sed -e 's@ -b@ -Wl,-b@g'`\"\n\t        ldflags=\"`echo ' '$ldflags | sed -e 's@ -b@ -Wl,-b@g'`\"\n\t        lddlflags=\"`echo ' '$lddlflags | sed -e 's@ -b@ -Wl,-b@g'`\"\n\t\tlddlflags=\"`echo ' '$lddlflags | sed -e 's@ -G @ -Wl,-G @g'`\"\n\t        ld='gcc'\n\t        echo >&4 \"(using ccflags   $ccflags)\"\n\t        echo >&4 \"(using ldflags   $ldflags)\"\n\t        echo >&4 \"(using lddlflags $lddlflags)\"\n\t        ;;\n\t    esac\n\t;;\n    esac\nEOCBU\n\n# This script UU/use64bitint.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use 64 bit integers.\ncat > UU/use64bitint.cbu <<'EOCBU'\ncase \"$use64bitint\" in\n    $define|true|[yY]*)\n\tcase \"`oslevel`\" in\n\t    4.[012].*)\n\t\tcat >&4 <<EOM\nAIX `oslevel` does not support 64-bit interfaces.\nYou should upgrade to at least AIX 4.3.\nEOM\n\t\texit 1\n\t\t;;\n\t    esac\n\t;;\n    esac\nEOCBU\n\ncat > UU/use64bitall.cbu <<'EOCBU'\n# This script UU/use64bitall.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to be maximally 64-bitty.\ncase \"$use64bitall\" in\n    $define|true|[yY]*)\n\tcase \"`oslevel`\" in\n\t    4.[012].*)\n\t\tcat >&4 <<EOM\nAIX `oslevel` does not support 64-bit interfaces.\nYou should upgrade to at least AIX 4.3.\nEOM\n\t\texit 1\n\t\t;;\n\t    esac\n\techo \" \"\n\techo \"Checking the CPU width of your hardware...\" >&4\n\t$cat >size.c <<EOCP\n#include <stdio.h>\n#include <sys/systemcfg.h>\nint main (void)\n{\n    printf (\"%d\\n\", _system_configuration.width);\n    return (0);\n    }\nEOCP\n\tset size\n\tif eval $compile_ok; then\n\t    qacpuwidth=`./size`\n\t    echo \"You are running on $qacpuwidth bit hardware.\"\n\telse\n\t    dflt=\"32\"\n\t    echo \" \"\n\t    echo \"(I can't seem to compile the test program.  Guessing...)\"\n\t    rp=\"What is the width of your CPU (in bits)?\"\n\t    . ./myread\n\t    qacpuwidth=\"$ans\"\n\t    fi\n\t$rm -f size.c size\n\tcase \"$qacpuwidth\" in\n\t    32*)\n\t\tcat >&4 <<EOM\nBzzzt! At present, you can only perform a\nfull 64-bit build on a 64-bit machine.\nEOM\n\t\texit 1\n\t\t;;\n\t    esac\n\n\tqacflags=\"`getconf XBS5_LP64_OFF64_CFLAGS 2>/dev/null`\"\n\tqaldflags=\"`getconf XBS5_LP64_OFF64_LDFLAGS 2>/dev/null`\"\n\t# See jhi's comments above regarding this re-eval.  I've\n\t# seen similar weirdness in the form of:\n\t#\n\t# 1506-173 (W) Option lm is not valid.  Enter xlc for list of valid options.\n\t#\n\t# error messages from 'cc -E' invocation. Again, the offending\n\t# string is simply not detectable by any means.  Since it doesn't\n\t# do any harm, I didn't pursue it. -- sh\n\tqaldflags=\"`echo $qaldflags`\"\n\tqalibs=\"`getconf XBS5_LP64_OFF64_LIBS 2>/dev/null|sed -e 's@^-l@@' -e 's@ -l@ @g'`\"\n\t# -q32 and -b32 may have been set by uselargefiles or user.\n\t# Remove them.\n\tccflags=\"`echo $ccflags | sed -e 's@-q32@@'`\"\n\tldflags=\"`echo $ldflags | sed -e 's@-b32@@'`\"\n\t# Tell archiver to use large format.  Unless we remove 'ar'\n\t# from 'trylist', the Configure script will just reset it to 'ar'\n\t# immediately prior to writing config.sh.  This took me hours\n\t# to figure out.\n\ttrylist=\"`echo $trylist | sed -e 's@^ar @@' -e 's@ ar @ @g' -e 's@ ar$@@'`\"\n\tar=\"ar -X64\"\n\tnm_opt=\"-X64 $nm_opt\"\n\t# Note: Placing the 'qacflags' variable into the 'ldflags' string\n\t# is NOT a typo.  ldflags is passed to the C compiler for final\n\t# linking, and it wants -q64 (-b64 is for ld only!).\n\tcase \"$qacflags$qaldflags$qalibs\" in\n\t    '') ;;\n\t    *)  ccflags=\"$ccflags $qacflags\"\n\t        ldflags=\"$ldflags $qacflags\"\n\t        lddlflags=\"$qaldflags $lddlflags\"\n\t        libswanted=\"$libswanted $qalibs\"\n\t        ;;\n\t    esac\n\tcase \"$ccflags\" in\n\t    *-DUSE_64_BIT_ALL*) ;;\n\t    *) ccflags=\"$ccflags -DUSE_64_BIT_ALL\";;\n\t    esac\n\tcase \"$archname64\" in\n\t    ''|64*) archname64=64all ;;\n\t    esac\n\tlongsize=\"8\"\n\tqacflags=''\n\tqaldflags=''\n\tqalibs=''\n\tqacpuwidth=''\n\t;;\n    esac\nEOCBU\n\nif test $usenativedlopen = 'true' ; then\n    ccflags=\"$ccflags -DUSE_NATIVE_DLOPEN\"\n    case \"$cc\" in\n        *gcc*) ldflags=\"$ldflags -Wl,-brtl\" ;;\n        *)     ldflags=\"$ldflags -brtl\" ;;\n        esac\nelse\n    case `oslevel` in\n\t4.2.*)\t;;\t# libC_r has broke gettimeofday\n\t*)  # If the C++ libraries, libC and libC_r, are available we will\n\t    # prefer them over the vanilla libc, because the libC contain\n\t    # loadAndInit() and terminateAndUnload() which work correctly\n\t    # with C++ statics while libc load() and unload() do not. See\n\t    # ext/DynaLoader/dl_aix.xs. The C-to-C_r switch is done by\n\t    # usethreads.cbu, if needed.\n\t    if test -f /lib/libC.a -a X\"`$cc -v 2>&1 | grep gcc`\" = X; then\n\t\t# Cify libswanted.\n\t\tset `echo X \"$libswanted \"| sed -e 's/ c / C c /'`\n\t\tshift\n\t\tlibswanted=\"$*\"\n\t\t# Cify lddlflags.\n\t\tset `echo X \"$lddlflags \"| sed -e 's/ -lc / -lC -lc /'`\n\t\tshift\n\t\tlddlflags=\"$*\"\n\t\tfi\n\tesac\n    fi\n\ncase \"$PASE\" in\n    define)\n\tcase \"$prefix\" in\n\t    '') prefix=/QOpenSys/perl ;;\n\t    esac\n\tcat >&4 <<EOF\n\n***\n*** You seem to be compiling in AIX for the OS/400 PASE environment.\n*** I'm not going to use the AIX bind, nsl, and possible util libraries, then.\n*** I'm also not going to install perl as /usr/bin/perl.\n*** Perl will be installed under $prefix.\n*** For instructions how to install this build from AIX to PASE,\n*** see the file README.os400.  Accept the \"aix\" for the question\n*** about \"Operating system name\".\n***\nEOF\n\tset `echo \" $libswanted \" | sed -e 's@ bind @ @' -e 's@ nsl @ @' -e 's@ util @ @'`\n\tshift\n\tlibswanted=\"$*\"\n\tinstallusrbinperl=\"$undef\"\n\n\t# V5R1 doesn't have this (V5R2 does), without knowing\n\t# which one we have it's safer to be pessimistic.\n\t# Cwd will work fine even without fchdir(), but if\n\t# V5R1 tries to use code compiled assuming fchdir(),\n\t# lots of grief will issue forth from Cwd.\n\tcase \"$d_fchdir\" in\n\t    '') d_fchdir=\"$undef\" ;;\n\t    esac\n\t;;\n    esac\n\n# EOF\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/freebsd.sh": "# Original based on info from\n# Carl M. Fongheiser <cmf@ins.infonet.net>\n# Date: Thu, 28 Jul 1994 19:17:05 -0500 (CDT)\n#\n# Additional 1.1.5 defines from \n# Ollivier Robert <Ollivier.Robert@keltia.frmug.fr.net>\n# Date: Wed, 28 Sep 1994 00:37:46 +0100 (MET)\n#\n# Additional 2.* defines from\n# Ollivier Robert <Ollivier.Robert@keltia.frmug.fr.net>\n# Date: Sat, 8 Apr 1995 20:53:41 +0200 (MET DST)\n#\n# Additional 2.0.5 and 2.1 defined from\n# Ollivier Robert <Ollivier.Robert@keltia.frmug.fr.net>\n# Date: Fri, 12 May 1995 14:30:38 +0200 (MET DST)\n#\n# Additional 2.2 defines from\n# Mark Murray <mark@grondar.za>\n# Date: Wed, 6 Nov 1996 09:44:58 +0200 (MET)\n#\n# Modified to ensure we replace -lc with -lc_r, and\n# to put in place-holders for various specific hints.\n# Andy Dougherty <doughera@lafayette.edu>\n# Date: Tue Mar 10 16:07:00 EST 1998\n#\n# Support for FreeBSD/ELF\n# Ollivier Robert <roberto@keltia.freenix.fr>\n# Date: Wed Sep  2 16:22:12 CEST 1998\n#\n# The two flags \"-fpic -DPIC\" are used to indicate a\n# will-be-shared object.  Configure will guess the -fpic, (and the\n# -DPIC is not used by perl proper) but the full define is included to \n# be consistent with the FreeBSD general shared libs building process.\n#\n# setreuid and friends are inherently broken in all versions of FreeBSD\n# before 2.1-current (before approx date 4/15/95). It is fixed in 2.0.5\n# and what-will-be-2.1\n#\n\ncase \"$osvers\" in\n0.*|1.0*)\n\tusedl=\"$undef\"\n\t;;\n1.1*)\n\tmalloctype='void *'\n\tgroupstype='int'\n\td_setregid='undef'\n\td_setreuid='undef'\n\td_setrgid='undef'\n\td_setruid='undef'\n\t;;\n2.0-release*)\n\td_setregid='undef'\n\td_setreuid='undef'\n\td_setrgid='undef'\n\td_setruid='undef'\n\t;;\n#\n# Trying to cover 2.0.5, 2.1-current and future 2.1/2.2\n# It does not covert all 2.1-current versions as the output of uname\n# changed a few times.\n#\n# Even though seteuid/setegid are available, they've been turned off\n# because perl isn't coded with saved set[ug]id variables in mind.\n# In addition, a small patch is required to suidperl to avoid a security\n# problem with FreeBSD.\n#\n2.0.5*|2.0-built*|2.1*)\n \tusevfork='true'\n\tcase \"$usemymalloc\" in\n\t    \"\") usemymalloc='n'\n\t        ;;\n\tesac\n\td_setregid='define'\n\td_setreuid='define'\n\td_setegid='undef'\n\td_seteuid='undef'\n\ttest -r ./broken-db.msg && . ./broken-db.msg\n\t;;\n#\n# 2.2 and above have phkmalloc(3).\n# don't use -lmalloc (maybe there's an old one from 1.1.5.1 floating around)\n2.2*)\n \tusevfork='true'\n\tcase \"$usemymalloc\" in\n\t    \"\") usemymalloc='n'\n\t        ;;\n\tesac\n\tlibswanted=`echo $libswanted | sed 's/ malloc / /'`\n\tlibswanted=`echo $libswanted | sed 's/ bind / /'`\n\t# iconv gone in Perl 5.8.1, but if someone compiles 5.8.0 or earlier.\n\tlibswanted=`echo $libswanted | sed 's/ iconv / /'`\n\td_setregid='define'\n\td_setreuid='define'\n\td_setegid='define'\n\td_seteuid='define'\n\t# d_dosuid='define' # Obsolete.\n\t;;\n*)\tusevfork='true'\n\tcase \"$usemymalloc\" in\n\t    \"\") usemymalloc='n'\n\t        ;;\n\tesac\n\tlibswanted=`echo $libswanted | sed 's/ malloc / /'`\n\t;;\nesac\n\ncase \"$osvers\" in\n10.*)\n\t# dtrace on 10.x needs libelf symbols, but we don't know if the\n\t# user is going to request usedtrace and there's no .cbu for usedtrace\n\tlibswanted=\"$libswanted elf\"\n\t;;\nesac\n\n# Dynamic Loading flags have not changed much, so they are separated\n# out here to avoid duplicating them everywhere.\ncase \"$osvers\" in\n0.*|1.0*) ;;\n\n1.*|2.*)\n\tcccdlflags='-DPIC -fpic'\n\tlddlflags=\"-Bshareable $lddlflags\"\n\t;;\n\n3*|4*|5*|6*)\n        objformat=`/usr/bin/objformat`\n        if [ x$objformat = xaout ]; then\n            if [ -e /usr/lib/aout ]; then\n                libpth=\"/usr/lib/aout /usr/local/lib /usr/lib\"\n                glibpth=\"/usr/lib/aout /usr/local/lib /usr/lib\"\n            fi\n            lddlflags='-Bshareable'\n        else\n            libpth=\"/usr/lib /usr/local/lib\"\n            glibpth=\"/usr/lib /usr/local/lib\"\n            ldflags=\"-Wl,-E \"\n            lddlflags=\"-shared \"\n        fi\n        cccdlflags='-DPIC -fPIC'\n        ;;\n*)\n       libpth=\"/usr/lib /usr/local/lib\"\n       glibpth=\"/usr/lib /usr/local/lib\"\n       ldflags=\"-Wl,-E \"\n        lddlflags=\"-shared \"\n        cccdlflags='-DPIC -fPIC'\n       ;;\nesac\n\ncase \"$osvers\" in\n0.*|1.*|2.*|3.*) ;;\n\n*)\n\tccflags=\"${ccflags} -DHAS_FPSETMASK -DHAS_FLOATINGPOINT_H\"\n\tif /usr/bin/file -L /usr/lib/libc.so | /usr/bin/grep -vq \"not stripped\" ; then\n\t    usenm=false\n\tfi\n        ;;\nesac\n\ncat <<'EOM' >&4\n\nSome users have reported that Configure halts when testing for\nthe O_NONBLOCK symbol with a syntax error.  This is apparently a\nsh error.  Rerunning Configure with ksh apparently fixes the\nproblem.  Try\n\tksh Configure [your options]\n\nEOM\n\n# From: Anton Berezin <tobez@plab.ku.dk>\n# To: perl5-porters@perl.org\n# Subject: [PATCH 5.005_54] Configure - hints/freebsd.sh signal handler type\n# Date: 30 Nov 1998 19:46:24 +0100\n# Message-ID: <864srhhvcv.fsf@lion.plab.ku.dk>\n\nsignal_t='void'\nd_voidsig='define'\n\n# set libperl.so.X.X for 2.2.X\ncase \"$osvers\" in\n2.2*)\n    # unfortunately this code gets executed before\n    # the equivalent in the main Configure so we copy a little\n    # from Configure XXX Configure should be fixed.\n    if $test -r $src/patchlevel.h;then\n       patchlevel=`awk '/define[ \t]+PERL_VERSION/ {print $3}' $src/patchlevel.h`\n       subversion=`awk '/define[ \t]+PERL_SUBVERSION/ {print $3}' $src/patchlevel.h`\n    else\n       patchlevel=0\n       subversion=0\n    fi\n    libperl=\"libperl.so.$patchlevel.$subversion\"\n    unset patchlevel\n    unset subversion\n    ;;\nesac\n\n# This script UU/usethreads.cbu will get 'called-back' by Configure \n# after it has prompted the user for whether to use threads.\ncat > UU/usethreads.cbu <<'EOCBU'\ncase \"$usethreads\" in\n$define|true|[yY]*)\n        lc_r=`/sbin/ldconfig -r|grep ':-lc_r'|awk '{print $NF}'|sed -n '$p'`\n        case \"$osvers\" in  \n\t0.*|1.*|2.0*|2.1*)   cat <<EOM >&4\nI did not know that FreeBSD $osvers supports POSIX threads.\n\nFeel free to tell https://github.com/Perl/perl5/issues otherwise.\nEOM\n\t      exit 1\n\t      ;;\n\n        2.2.[0-7]*)\n              cat <<EOM >&4\nPOSIX threads are not supported well by FreeBSD $osvers.\n\nPlease consider upgrading to at least FreeBSD 2.2.8,\nor preferably to the most recent -RELEASE or -STABLE\nversion (see http://www.freebsd.org/releases/).\n\n(While 2.2.7 does have pthreads, it has some problems\n with the combination of threads and pipes and therefore\n many Perl tests will either hang or fail.)\nEOM\n\t      exit 1\n\t      ;;\n\n\t[3-5].*)\n\t      if [ ! -r \"$lc_r\" ]; then\n\t      cat <<EOM >&4\nPOSIX threads should be supported by FreeBSD $osvers --\nbut your system is missing the shared libc_r.\n(/sbin/ldconfig -r doesn't find any).\n\nConsider using the latest STABLE release.\nEOM\n\t\t exit 1\n\t      fi\n\t      # 500016 is the first osreldate in which one could\n\t      # just link against libc_r without disposing of libc\n\t      # at the same time.  500016 ... up to whatever it was\n\t      # on the 31st of August 2003 can still be used with -pthread,\n\t      # but it is not necessary.\n\n\t      # Anton Berezin says that post 500something we're wrong to be\n\t      # to be using -lc_r, and should just be using -pthread on the\n\t      # linker line.\n\t      # So presumably really we should be checking that $osver is 5.*)\n\t      # and that `/sbin/sysctl -n kern.osreldate` -ge 500016\n\t      # or -lt 500something and only in that range not doing this:\n\t      ldflags=\"-pthread $ldflags\"\n\n\t      # Both in 4.x and 5.x gethostbyaddr_r exists but\n\t      # it is \"Temporary function, not threadsafe\"...\n\t      # Presumably earlier it didn't even exist.\n\t      d_gethostbyaddr_r=\"undef\"\n\t      d_gethostbyaddr_r_proto=\"0\"\n\t      ;;\n\n\t*)\n\t      # 7.x doesn't install libc_r by default, and Configure\n\t      # would fail in the code following\n\t      #\n\t      # gethostbyaddr_r() appears to have been implemented in 6.x+\n\t      ldflags=\"-pthread $ldflags\"\n\t      ;;\n\n\tesac\n\n        case \"$osvers\" in\n        [1-4]*)\n\t    set `echo X \"$libswanted \"| sed -e 's/ c / c_r /'`\n\t    shift\n\t    libswanted=\"$*\"\n\t    ;;\n        *)\n\t    set `echo X \"$libswanted \"| sed -e 's/ c //'`\n\t    shift\n\t    libswanted=\"$*\"\n\t    ;;\n\tesac\n\t    \n\t# Configure will probably pick the wrong libc to use for nm scan.\n\t# The safest quick-fix is just to not use nm at all...\n\tusenm=false\n\n        case \"$osvers\" in\n        2.2.8*)\n            # ... but this does not apply for 2.2.8 - we know it's safe\n            libc=\"$lc_r\"\n            usenm=true\n           ;;\n        esac\n\n        unset lc_r\n\n\t# Even with the malloc mutexes the Perl malloc does not\n\t# seem to be threadsafe in FreeBSD?\n\tcase \"$usemymalloc\" in\n\t'') usemymalloc=n ;;\n\tesac\nesac\nEOCBU\n\n# malloc wrap works\ncase \"$usemallocwrap\" in\n'') usemallocwrap='define' ;;\nesac\n\n# XXX Under FreeBSD 6.0 (and probably most other similar versions)\n# Perl_die(NULL) generates a warning:\n#    pp_sys.c:491: warning: null format string\n# Configure supposedly tests for this, but apparently the test doesn't\n# work.  Volunteers with FreeBSD are needed to improving the Configure test.\n# Meanwhile, the following workaround should be safe on all versions\n# of FreeBSD.\nd_printf_format_null='undef'\n\n# See [perl #128867]\n# Interpreting: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=211743#c10\n# khw workaround no longer needed in the following FREEBSD_KERNEL_VERSIONs\n#1200004 and up\n#1100502 >= version < 1200000\n#1003507 >= version < 1100000\n# Experiments have shown that this doesn't fully work.  The first kernel we know it works is 1200056\n\nFREEBSD_KERNEL_VERSION=`uname -U`\n#if  [ $FREEBSD_KERNEL_VERSION -lt 1003507 ] || \\\n#    [ $FREEBSD_KERNEL_VERSION -ge 1100000 ] && [ $FREEBSD_KERNEL_VERSION -lt 1100502 ] || \\\n#    [ $FREEBSD_KERNEL_VERSION -ge 1200000 ] && [ $FREEBSD_KERNEL_VERSION -lt 1200004 ]\nif  [ $FREEBSD_KERNEL_VERSION -lt 1200056 ]\nthen\n    d_uselocale='undef'\nfi\n\n# https://rt.perl.org/Ticket/Display.html?id=131337\n# Reported in 11.0-CURRENT with g++-4.8.5:\n# If using g++, the Configure scan for dlopen() fails.\n# Easier for now to just to forcibly set it.\ncase \"$cc\" in\n*g++*)\n  d_dlopen='define'\n  ;;\nesac\n\ncase `uname -p` in\narm|mips)\n  ;;\n*)\n  test \"$optimize\" || optimize='-O2'\n  ;;\nesac\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/aix_3.sh": "# hints/aix_3.sh\n#\n# On Tue 03 Feb 2004 split off from aix.sh by H.Merijn Brand\n# AIX 3.x.x hints thanks to Wayne Scott <wscott@ichips.intel.com>\n\n# Notes:\n#\n#    - shared libperl support is tricky. if ever libperl.a ends up\n#      in /usr/local/lib/* it can override any subsequent builds of\n#      that same perl release. to make sure you know where the shared\n#      libperl.a is coming from do a 'dump -Hv perl' and check all the\n#      library search paths in the loader header.\n#\n#      it would be nice to warn the user if a libperl.a exists that is\n#      going to override the current build, but that would be complex.\n#\n#      better yet, a solid fix for this situation should be developed.\n\nalignbytes=8\n\ncase \"$usemymalloc\" in\n    '')  usemymalloc='n' ;;\n    esac\n\n# Intuiting the existence of system calls under AIX is difficult,\n# at best; the safest technique is to find them empirically.\n\ncase \"$usenm\" in\n    '') usenm='undef'\n    esac\n\nso=\"a\"\n# AIX itself uses .o (libc.o) but we prefer compatibility\n# with the rest of the world and with rest of the scripting\n# languages (Tcl, Python) and related systems (SWIG).\n# Stephanie Beals <bealzy@us.ibm.com>\ndlext=\"so\"\n\n# Take possible hint from the environment.  If 32-bit is set in the\n# environment, we can override it later.  If set for 64, the\n# 'sizeof' test sees a native 64-bit architecture and never looks back.\ncase \"$use64bitint$use64bitall$usemorebits\" in\n    *$define*) cat >&4 <<EOM\n\nAIX `oslevel` does not support 64-bit interfaces.\nYou should upgrade to at least AIX 4.3.\nEOM\n\texit\n\t;;\n    esac\n\ncase \"$usemorebits\" in\nif [ \"$OBJECT_MODE\"  = \"64\" ] then\n    cat >&4 <<EOF\n\nYou have OBJECT_MODE=64 set in the environment. \nThis would force a full 64-bit build, but AIX 3\ndoes not support 64bit.\nEOF\n    fi\n\n# uname -m output is too specific and not appropriate here\ncase \"$archname\" in\n    '') archname=\"$osname\" ;;\n    esac\n\ncc=${cc:-cc}\nd_fchmod='undef'\nccflags=\"$ccflags -D_ALL_SOURCE\"\n\n# These functions don't work like Perl expects them to.\nd_setregid='undef'\nd_setreuid='undef'\n\n# Configure finds setrgid and setruid, but they're useless.  The man\n# pages state:\n#    setrgid: The EPERM error code is always returned.\n#    setruid: The EPERM error code is always returned. Processes cannot\n#\t      reset only their real user IDs.\nd_setrgid='undef'\nd_setruid='undef'\n\n# Changes for dynamic linking by Wayne Scott <wscott@ichips.intel.com>\n#\n# Tell perl which symbols to export for dynamic linking.\ncccdlflags='none'\t# All AIX code is position independent\n   cc_type=xlc\t\t# do not export to config.sh\ncase \"$cc\" in\n    *gcc*)\n        cc_type=gcc\n        ccdlflags='-Xlinker'\n        if [ \"X$gccversion\" = \"X\" ]; then\n\t    # Done too late in Configure if hinted\n\t    gccversion=`$cc -dumpversion`\n\t    fi\n        ;;\n\n    *)  ccversion=`lslpp -L | grep 'C for AIX Compiler$' | grep -v '\\.msg\\.[A-Za-z_]*\\.' | head -1 | awk '{print $1,$2}'`\n        case \"$ccversion\" in\n\t    '') ccversion=`lslpp -L | grep 'IBM C and C++ Compilers LUM$'`\n\t        ;;\n\n\t    *.*.*.*.*.*.*)\t\t# Ahhrgg, more than one C compiler installed\n\t        first_cc_path=`which ${cc:-cc}`\n\t        case \"$first_cc_path\" in\n\t            *vac*)\n\t\t\tcc_type=vac\n\t\t\t;;\n\t\t    /usr/bin/cc)\t\t# Check the symlink\n\t\t\tif [ -h $first_cc_path ]; then\n\t\t\t    ls -l $first_cc_path > reflect\n\t\t\t    if grep -i vac reflect >/dev/null 2>&1 ; then\n\t\t\t\tcc_type=vac\n\t\t\t\tfi\n\t\t\t    rm -f reflect\n\t\t\t    fi\n\t\t\t;;\n\t\t    esac\n\t\tccversion=`lslpp -L | grep 'C for AIX Compiler$' | grep -i $cc_type | head -1`\n\t\t;;\n\t    vac*.*.*.*)\n\t\tcc_type=vac\n\t\t;;\n\t    esac\n\n\tccversion=`echo \"$ccversion\" | awk '{print $2}'`\n\tcase \"$ccversion\" in\n\t    3.6.6.0)\n\t\toptimize='none'\n\t\t;;\n\t    4.4.0.0|4.4.0.1|4.4.0.2)\n\t\tcat >&4 <<EOF\n***\n*** This C compiler ($ccversion) is outdated.\n***\n*** Please upgrade to at least 4.4.0.3.\n***\nEOF\n\t\t;;\n\t    5.0.0.0)\n\t\tcat >&4 <<EOF\n***\n*** This C compiler ($ccversion) is known to have too many optimizer\n*** bugs to compile a working Perl.\n***\n*** Consider upgrading your C compiler, or getting the GNU cc (gcc).\n***\n*** Cannot continue, aborting.\nEOF\n\t\texit 1\n\t\t;;\n\t    5.0.1.0)\n\t\tcat >&4 <<EOF\n***\n*** This C compiler ($ccversion) is known to have optimizer problems\n*** when compiling regcomp.c.\n***\n*** Disabling optimization for that file but consider upgrading\n*** your C compiler.\n***\nEOF\nregcomp_cflags='optimize='\n\t\t;;\n\t    esac\n    esac\n# the required -bE:$installarchlib/CORE/perl.exp is added by\n# libperl.U (Configure) later.\n\n# The first 3 options would not be needed if dynamic libs. could be linked\n# with the compiler instead of ld.\n# -bI:$(PERL_INC)/perl.exp  Read the exported symbols from the perl binary\n# -bE:$(BASEEXT).exp\t    Export these symbols.  This file contains only one\n#\t\t\t    symbol: boot_$(EXP)\t can it be auto-generated?\nlddlflags=\"$lddlflags -H512 -T512 -bhalt:4 -bM:SRE -bI:\\$(PERL_INC)/perl.exp -bE:\\$(BASEEXT).exp -e _nostart -lc\"\n\ncase $cc_type in\n    vac|xlc)\n\tcase \"$uselongdouble\" in\n\t    $define|true|[yY]*)\n\t\tccflags=\"$ccflags -qlongdouble\"\n\t\tlibswanted=\"c128 $libswanted\"\n\t\tlddlflags=`echo \"$lddlflags \" | sed -e 's/ -lc / -lc128 -lc /'`\n\t\t;;\n\t    esac\n    esac\n\ncase \"$cc\" in\n    *gcc*) ;;\n    cc*|xlc*) # cc should've been set by line 116 or so if empty.\n\tif test ! -x /usr/bin/$cc -a -x /usr/vac/bin/$cc; then\n\t    case \":$PATH:\" in\n\t\t*:/usr/vac/bin:*) ;;\n\t\t*) if test ! -x /QOpenSys/usr/bin/$cc; then\n\t\t       # The /QOpenSys/usr/bin/$cc saves us if we are\n\t\t       # building natively in OS/400 PASE.\n\t\t       cat >&4 <<EOF\n\n***\n*** You either implicitly or explicitly specified an IBM C compiler,\n*** but you do not seem to have one in /usr/bin, but you seem to have\n*** the VAC installed in /usr/vac, but you do not have the /usr/vac/bin\n*** in your PATH.  I suggest adding that and retrying Configure.\n***\nEOF\n\t\t       exit 1\n\t\t       fi \n\t\t   ;;\n\t\tesac\n\t    fi\n\t;;\n    esac\n\ncase \"$ldlibpthname\" in\n    '') ldlibpthname=LIBPATH ;;\n    esac\n\n# This script UU/usethreads.cbu will get 'called-back' by Configure \n# after it has prompted the user for whether to use threads.\ncat > UU/usethreads.cbu <<'EOCBU'\ncase \"$usethreads\" in\n    $define|true|[yY]*)\n\td_drand48_r='undef'\n\td_endgrent_r='undef'\n\td_endpwent_r='undef'\n\td_getgrent_r='undef'\n\td_getpwent_r='undef'\n\td_random_r='undef'\n\td_setgrent_r='undef'\n\td_setpwent_r='undef'\n\td_srand48_r='undef'\n\td_strerror_r='undef'\n\tccflags=\"$ccflags -DNEED_PTHREAD_INIT\"\n\tcase \"$cc\" in\n\t    *gcc*)\n\t\tccflags=\"-D_THREAD_SAFE $ccflags\"\n\t\t;;\n\t    cc_r) ;;\n\t    cc|xl[cC]_r) \n\t\techo >&4 \"Switching cc to cc_r because of POSIX threads.\"\n\t\t# xlc_r has been known to produce buggy code in AIX 4.3.2.\n\t\t# (e.g. pragma/overload core dumps)\t Let's suspect xlC_r, too.\n\t\t# --jhi@iki.fi\n\t\tcc=cc_r\n\t\t;;\n\t    '') \n\t\tcc=cc_r\n\t\t;;\n\t    *)\n\t\tcat >&4 <<EOM\n*** For pthreads you should use the AIX C compiler cc_r.\n*** (now your compiler was set to '$cc')\n*** Cannot continue, aborting.\nEOM\n\t\texit 1\n\t\t;;\n\t    esac\n\n\t# c_rify libswanted.\n\tset `echo X \"$libswanted \"| sed -e 's/ \\([cC]\\) / \\1_r /g'`\n\tshift\n\tlibswanted=\"$*\"\n\t# c_rify lddlflags.\n\tset `echo X \"$lddlflags \"| sed -e 's/ \\(-l[cC]\\) / \\1_r /g'`\n\tshift\n\tlddlflags=\"$*\"\n\n\t# Insert pthreads to libswanted, before any libc or libC.\n\tset `echo X \"$libswanted \"| sed -e 's/ \\([cC]_r\\) / pthreads \\1 /'`\n\tshift\n\tlibswanted=\"$*\"\n\t# Insert pthreads to lddlflags, before any libc or libC.\n\tset `echo X \"$lddlflags \" | sed -e 's/ \\(-l[cC]_r\\) / -lpthreads \\1 /'`\n\tshift\n\tlddlflags=\"$*\"\n\t;;\n    esac\nEOCBU\n\n# This script UU/uselargefiles.cbu will get 'called-back' by Configure \n# after it has prompted the user for whether to use large files.\ncat > UU/uselargefiles.cbu <<'EOCBU'\ncase \"$uselargefiles\" in\n    ''|$define|true|[yY]*)\n\t# Configure should take care of use64bitint and use64bitall being\n\t# defined before uselargefiles.cbu is consulted.\n\tif test X\"$use64bitint:$quadtype\" = X\"$define:long\" -o X\"$use64bitall\" = Xdefine; then\n# Keep these at the left margin.\nccflags_uselargefiles=\"`getconf XBS5_LP64_OFF64_CFLAGS 2>/dev/null`\"\nldflags_uselargefiles=\"`getconf XBS5_LP64_OFF64_LDFLAGS 2>/dev/null`\"\n\telse\n# Keep these at the left margin.\nccflags_uselargefiles=\"`getconf XBS5_ILP32_OFFBIG_CFLAGS 2>/dev/null`\"\nldflags_uselargefiles=\"`getconf XBS5_ILP32_OFFBIG_LDFLAGS 2>/dev/null`\"\n\t    fi\n\tif test X\"$use64bitint:$quadtype\" = X\"$define:long\" -o X\"$use64bitall\" = Xdefine; then\n# Keep this at the left margin.\nlibswanted_uselargefiles=\"`getconf XBS5_LP64_OFF64_LIBS 2>/dev/null|sed -e 's@^-l@@' -e 's@ -l@ @g'`\"\n\telse\n# Keep this at the left margin.\nlibswanted_uselargefiles=\"`getconf XBS5_ILP32_OFFBIG_LIBS 2>/dev/null|sed -e 's@^-l@@' -e 's@ -l@ @g'`\"\n\t    fi\n\tcase \"$ccflags_uselargefiles$ldflags_uselargefiles$libs_uselargefiles\" in\n\t    '') ;;\n\t    *)  ccflags=\"$ccflags $ccflags_uselargefiles\"\n\t        ldflags=\"$ldflags $ldflags_uselargefiles\"\n\t        libswanted=\"$libswanted $libswanted_uselargefiles\"\n\t        ;;\n\t    esac\n\tcase \"$gccversion\" in\n\t    '') ;;\n\t    *)  # Remove xlc-specific -qflags.\n\t\tccflags=\"`echo $ccflags | sed -e 's@ -q[^ ]*@ @g' -e 's@^-q[^ ]* @@g'`\"\n\t\tldflags=\"`echo $ldflags | sed -e 's@ -q[^ ]*@ @g' -e 's@^-q[^ ]* @@g'`\"\n\t\t# Move xlc-specific -bflags.\n\t\tccflags=\"`echo $ccflags | sed -e 's@ -b@ -Wl,-b@g'`\"\n\t\tldflags=\"`echo ' '$ldflags | sed -e 's@ -b@ -Wl,-b@g'`\"\n\t\tlddlflags=\"`echo ' '$lddlflags | sed -e 's@ -b@ -Wl,-b@g'`\"\n\t\tld='gcc'\n\t\techo >&4 \"(using ccflags   $ccflags)\"\n\t\techo >&4 \"(using ldflags   $ldflags)\"\n\t\techo >&4 \"(using lddlflags $lddlflags)\"\n\t\t;; \n\t    esac\n        ;;\n    esac\nEOCBU\n\nif test $usenativedlopen = 'true' ; then\n    ccflags=\"$ccflags -DUSE_NATIVE_DLOPEN\"\n    case \"$cc\" in\n        *gcc*) ldflags=\"$ldflags -Wl,-brtl\" ;;\n        *)     ldflags=\"$ldflags -brtl\" ;;\n        esac\nelse\n    # If the C++ libraries, libC and libC_r, are available we will\n    # prefer them over the vanilla libc, because the libC contain\n    # loadAndInit() and terminateAndUnload() which work correctly\n    # with C++ statics while libc load() and unload() do not. See\n    # ext/DynaLoader/dl_aix.xs. The C-to-C_r switch is done by\n    # usethreads.cbu, if needed.\n    if test -f /lib/libC.a -a X\"`$cc -v 2>&1 | grep gcc`\" = X; then\n\t# Cify libswanted.\n\tset `echo X \"$libswanted \"| sed -e 's/ c / C c /'`\n\tshift\n\tlibswanted=\"$*\"\n\t# Cify lddlflags.\n\tset `echo X \"$lddlflags \"| sed -e 's/ -lc / -lC -lc /'`\n\tshift\n\tlddlflags=\"$*\"\n\tfi\n    fi\n\n# EOF\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/aix.sh": "# hints/aix.sh\n\n# AIX 3 and AIX 4 are split off to aix_3.sh and aix_4.sh\n#    early Feb 2004 by H.Merijn Brand\n# please read comments in there for historic questions.\n#    many now stripped here\n\n# Contact dfavor@corridor.com for any of the following:\n#\n#    - AIX 43x and above support\n#    - gcc + threads support\n#    - socks support\n#\n# Notes:\n#\n#    - shared libperl support is tricky. if ever libperl.a ends up\n#      in /usr/local/lib/* it can override any subsequent builds of\n#      that same perl release. to make sure you know where the shared\n#      libperl.a is coming from do a 'dump -Hv perl' and check all the\n#      library search paths in the loader header.\n#\n#      it would be nice to warn the user if a libperl.a exists that is\n#      going to override the current build, but that would be complex.\n#\n#      better yet, a solid fix for this situation should be developed.\n#\n\n# Configure finds setrgid and setruid, but they're useless.  The man\n# pages state:\n#    setrgid: The EPERM error code is always returned.\n#    setruid: The EPERM error code is always returned. Processes cannot\n#\t      reset only their real user IDs.\nd_setrgid='undef'\nd_setruid='undef'\n\nalignbytes=8\ncase \"$usemymalloc\" in\n    '')  usemymalloc='n' ;;\n    esac\n\n# malloc wrap works, but not in vac-5, see later\ncase \"$usemallocwrap\" in\n    '') usemallocwrap='define' ;;\n    esac\n\n# Intuiting the existence of system calls under AIX is difficult,\n# at best; the safest technique is to find them empirically.\n\ncase \"$usenativedlopen\" in\n    '') usenativedlopen='true' ;;\n    esac\n\nso=\"a\"\n# AIX itself uses .o (libc.o) but we prefer compatibility\n# with the rest of the world and with rest of the scripting\n# languages (Tcl, Python) and related systems (SWIG).\n# Stephanie Beals <bealzy@us.ibm.com>\ndlext=\"so\"\n\n# Take possible hint from the environment.  If 32-bit is set in the\n# environment, we can override it later.  If set for 64, the\n# 'sizeof' test sees a native 64-bit architecture and never looks back.\ncase \"$OBJECT_MODE\" in\n    32) cat >&4 <<EOF\n\nYou have OBJECT_MODE=32 set in the environment.\nI take this as a hint you do not want to\nbuild for a 64-bit address space. You will be\ngiven the opportunity to change this later.\nEOF\n\t;;\n    64) cat >&4 <<EOF\n\nYou have OBJECT_MODE=64 set in the environment.\nThis forces a full 64-bit build.  If that is\nnot what you intended, please terminate this\nprogram, unset it and restart.\nEOF\n\t;;\n    esac\n\n s=`lslpp -lc bos.adt.libm >/dev/null`\nif [ $? != 0 ]; then\n    echo \"You cannot build perl without the bos.adt.libm package installed\" >&4\n    exit\n    fi\n\n# uname -m output is too specific and not appropriate here\ncase \"$archname\" in\n    '') archname=\"$osname\" ;;\n    esac\n\ncc=${cc:-cc}\n\nccflags=\"$ccflags -D_ALL_SOURCE -D_ANSI_C_SOURCE -D_POSIX_SOURCE\"\ncase \"$cc\" in\n    *gcc*|*g++*) ;;\n    *) ccflags=\"$ccflags -qmaxmem=-1 -qnoansialias -qlanglvl=extc99\" ;;\n    esac\nnm_opt='-B'\n\n# These functions don't work like Perl expects them to.\nd_setregid='undef'\nd_setreuid='undef'\n\n# Changes for dynamic linking by Wayne Scott <wscott@ichips.intel.com>\n#\n# Tell perl which symbols to export for dynamic linking.\ncccdlflags='none'\t# All AIX code is position independent\n   cc_type=xlc\t\t# do not export to config.sh\ncase \"$cc\" in\n    *gcc*|*g++*)\n\tcc_type=gcc\n\tccdlflags='-Xlinker'\n\tif [ \"X$gccversion\" = \"X\" ]; then\n\t    # Done too late in Configure if hinted\n\t    gccversion=`$cc -dumpversion`\n\t    fi\n\t;;\n\n    *)  ccversion=`lslpp -ql -Ou vac.C | grep -v '^Path' | head -1 | awk '{print $1,$2}'`\n\tcase \"$ccversion\" in\n\t    '') ccversion=`lslpp -L | grep 'IBM C and C++ Compilers LUM$'` ;;\n\n\t    *.*.*.*.*.*.*)\t# Ahhrgg, more than one C compiler installed\n\t\tfirst_cc_path=`which ${cc:-cc}`\n\t\tcase \"$first_cc_path\" in\n\t\t    *vac*)\n\t\t\tcc_type=vac ;;\n\n\t\t    /usr/bin/cc)\t\t# Check the symlink\n\t\t\tif [ -h $first_cc_path ] ; then\n\t\t\t    ls -l $first_cc_path > reflect\n\t\t\t    if grep -i vac reflect >/dev/null 2>&1 ; then\n\t\t\t\tcc_type=vac\n\t\t\t\tfi\n\t\t\t    rm -f reflect\n\t\t\t    fi\n\t\t\t;;\n\t\t    esac\n\t\tccversion=`lslpp -L | grep 'C for AIX Compiler$' | grep -i $cc_type | head -1`\n\t\t;;\n\n\t    vac*.*.*.*)\n\t\tcc_type=vac\n\t\t;;\n\t    esac\n\n\tccversion=`echo \"$ccversion\" | awk '{print $2}'`\n\t# Redbooks state AIX-5 only supports vac-5.0.2.0 and up\n\tcase \"$ccversion\" in\n\t    5*) usemallocwrap='n' ;; # panic in miniperl\n\t    esac\n\t;;\n    esac\n\n# the required -bE:$installarchlib/CORE/perl.exp is added by\n# libperl.U (Configure) later.\n\n# The first 3 options would not be needed if dynamic libs. could be linked\n# with the compiler instead of ld.\n# -bI:$(PERL_INC)/perl.exp  Read the exported symbols from the perl binary\n# -bE:$(BASEEXT).exp\t    Export these symbols.  This file contains only one\n#\t\t\t    symbol: boot_$(EXP)\t can it be auto-generated?\nif test $usenativedlopen = 'true' ; then\n    lddlflags=\"$lddlflags -bhalt:4 -G -bI:\\$(PERL_INC)/perl.exp -bE:\\$(BASEEXT).exp -bnoentry -lc -lm\"\nelse\n    lddlflags=\"$lddlflags -bhalt:4 -bM:SRE -bI:\\$(PERL_INC)/perl.exp -bE:\\$(BASEEXT).exp -bnoentry -lc\"\n    fi\n\ncase \"$use64bitall\" in\n    $define|true|[yY]*) use64bitint=\"$define\" ;;\n    esac\n\ncase \"$usemorebits\" in\n    $define|true|[yY]*) use64bitint=\"$define\"; uselongdouble=\"$define\" ;;\n    esac\n\ncase $cc_type in\n    vac|xlc)\n\tcase \"$uselongdouble\" in\n\t    $define|true|[yY]*)\n\t\tccflags=\"$ccflags -qlongdouble\"\n\t\tlibswanted=\"c128 $libswanted\"\n\t\tlddlflags=`echo \"$lddlflags \" | sed -e 's/ -lc / -lc128 -lc /'`\n\t\t;;\n\t    esac\n\t;;\n    esac\n\ncase \"$cc\" in\n    *gcc*|*g++*) ;;\n\n    cc*|xlc*) # cc should've been set by line 116 or so if empty.\n\tif test ! -x /usr/bin/$cc -a -x /usr/vac/bin/$cc; then\n\t    case \":$PATH:\" in\n\t\t*:/usr/vac/bin:*) ;;\n\t\t*)  if test ! -x /QOpenSys/usr/bin/$cc; then\n\t\t\t# The /QOpenSys/usr/bin/$cc saves us if we are\n\t\t\t# building natively in OS/400 PASE.\n\t\t\tcat >&4 <<EOF\n\n***\n*** You either implicitly or explicitly specified an IBM C compiler,\n*** but you do not seem to have one in /usr/bin, but you seem to have\n*** the VAC installed in /usr/vac, but you do not have the /usr/vac/bin\n*** in your PATH.  I suggest adding that and retrying Configure.\n***\nEOF\n\t\t\texit 1\n\t\t\tfi\n\t\t    ;;\n\t\tesac\n\t    fi\n\t;;\n    esac\n\ncase \"$ldlibpthname\" in\n    '') ldlibpthname=LIBPATH ;;\n    esac\n\n# This script UU/usethreads.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use threads.\ncat > UU/usethreads.cbu <<'EOCBU'\ncase \"$usethreads\" in\n    $define|true|[yY]*)\n\td_drand48_r='undef'\n\td_endgrent_r='undef'\n\td_endpwent_r='undef'\n\td_getgrent_r='undef'\n\td_getpwent_r='undef'\n\td_random_r='undef'\n\td_setgrent_r='undef'\n\td_setpwent_r='undef'\n\td_srand48_r='undef'\n\td_srandom_r='undef'\n\td_strerror_r='undef'\n\n\tccflags=\"$ccflags -DNEED_PTHREAD_INIT\"\n\tcase \"$cc\" in\n\t    *gcc*|*g++*)\n\t      ccflags=\"-D_THREAD_SAFE $ccflags\"\n\t      ;;\n\t    cc_r)\n\t      ;;\n\t    xlc_r)\n\t      ;;\n\t    # we do not need the C++ compiler\n\t    xlC_r)\n\t      cc=xlc_r\n\t      ;;\n\t    '')\n\t      cc=cc_r\n\t      ;;\n\t    *)\n\tesac\n\n\t# Insert pthreads to libswanted, before any libc or libC.\n\tset `echo X \"$libswanted \"| sed -e 's/ \\([cC]\\) / pthreads \\1 /'`\n\tshift\n\tlibswanted=\"$*\"\n\t# Insert pthreads to lddlflags, before any libc or libC.\n\tset `echo X \"$lddlflags \" | sed -e 's/ \\(-l[cC]\\) / -lpthreads \\1 /'`\n\tshift\n\tlddlflags=\"$*\"\n\t;;\n    *)\n\tcase \"$cc\" in\n\t    xlc)\n\t      ;;\n\t    # we do not need the C++ compiler\n\t    xlC)\n\t      cc=xlc\n\t      ;;\n\t    *)\n\tesac\n\t;;\nesac\nEOCBU\n\n# This script UU/uselargefiles.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use large files.\ncat > UU/uselargefiles.cbu <<'EOCBU'\ncase \"$uselargefiles\" in\n    ''|$define|true|[yY]*)\n\t# Configure should take care of use64bitint and use64bitall being\n\t# defined before uselargefiles.cbu is consulted.\n\tif test X\"$use64bitint:$quadtype\" = X\"$define:long\" -o X\"$use64bitall\" = Xdefine; then\n# Keep these at the left margin.\nccflags_uselargefiles=\"`getconf XBS5_LP64_OFF64_CFLAGS 2>/dev/null`\"\nldflags_uselargefiles=\"`getconf XBS5_LP64_OFF64_LDFLAGS 2>/dev/null`\"\n\telse\n# Keep these at the left margin.\nccflags_uselargefiles=\"`getconf XBS5_ILP32_OFFBIG_CFLAGS 2>/dev/null`\"\nldflags_uselargefiles=\"`getconf XBS5_ILP32_OFFBIG_LDFLAGS 2>/dev/null`\"\n\t    fi\n\tif test X\"$use64bitint:$quadtype\" = X\"$define:long\" -o X\"$use64bitall\" = Xdefine; then\n# Keep this at the left margin.\nlibswanted_uselargefiles=\"`getconf XBS5_LP64_OFF64_LIBS 2>/dev/null|sed -e 's@^-l@@' -e 's@ -l@ @g'`\"\n\telse\n# Keep this at the left margin.\nlibswanted_uselargefiles=\"`getconf XBS5_ILP32_OFFBIG_LIBS 2>/dev/null|sed -e 's@^-l@@' -e 's@ -l@ @g'`\"\n\t    fi\n\n\tcase \"$ccflags_uselargefiles$ldflags_uselargefiles$libs_uselargefiles\" in\n\t    '') ;;\n\t    *)  ccflags=\"$ccflags $ccflags_uselargefiles\"\n\t\tldflags=\"$ldflags $ldflags_uselargefiles\"\n\t\tlibswanted=\"$libswanted $libswanted_uselargefiles\"\n\t\t;;\n\t    esac\n\n\t# -bmaxdata:0x80000000\n\t# - This increases the size of heap memory available to perl.\n\t#   Default is 256 MB, which sounds large but caused a software\n\t#   vendor problems. So this sets heap to 2 GB maximum. Anything\n\t#   higher and you'd want to consider 64 bit perl.\n\t# - NOTE however, that setting this in 64bit mode will limit your\n\t#   amount of available memory to 2GB, so we set this only in\n\t#   32bit mode to avoid future problems a la \"should be enough\n\t#   for everyone\" ...\n\t#\n\tcase \"$use64bitall\" in\n\t    $define|true|[yY]*)\n\t\t:\n\t\t;;\n\t    *)\n\t    \tldflags=\"$ldflags -bmaxdata:0x80000000\"\n\t\t;;\n\t    esac\n\n\tcase \"$gccversion\" in\n\t    '') # Not using gcc.\n\t    \t# Due to calling $cc without $cflags when linking some\n\t\t# binaries we need to hardwire $cc to the right mode.\n\t\t# The correct fix would be to have Makefile.SH not set\n\t\t# CLDFLAGS from $ldflags ...\n\t\tcase \"$use64bitall\" in\n\t\t    $define|true|[yY]*) cc=\"$cc -q64\"\t;;\n\t\t    *)\t\t\tcc=\"$cc -q32\"\t;;\n\t\t    esac\n                # Some 32-bit getconfs will set ccflags to include -qlonglong\n                # but that's no longer needed with an explicit -qextc99.\n                ccflags=\"`echo $ccflags | sed -e 's@ -qlonglong@@'`\"\n\t\t;;\n\t    *)  # Remove xlc-specific -qflags.\n\t\tccflags=\"`echo $ccflags | sed -e 's@ -q[^ ]*@ @g' -e 's@^-q[^ ]* @@g'`\"\n\t\tldflags=\"`echo $ldflags | sed -e 's@ -q[^ ]*@ @g' -e 's@^-q[^ ]* @@g'`\"\n\t\t# Move xlc-specific -bflags.\n\t\tccflags=\"`echo $ccflags | sed -e 's@ -b@ -Wl,-b@g'`\"\n\t\tldflags=\"`echo ' '$ldflags | sed -e 's@ -b@ -Wl,-b@g'`\"\n\t\tlddlflags=\"`echo ' '$lddlflags | sed -e 's@ -b@ -Wl,-b@g'`\"\n\t\tlddlflags=\"`echo ' '$lddlflags | sed -e 's@ -G @ -Wl,-G @g'`\"\n\n\t    \t# Due to calling $cc without $cflags when linking some\n\t\t# binaries we need to hardwire $cc to the right mode.\n\t\tcase \"$use64bitall\" in\n\t\t    $define|true|[yY]*)\n\t\t\tcc=\"$cc -maix64\"\n\t\t\tld=\"$cc\"\n\t\t\t;;\n\t\t    *)\n\t\t\tcc=\"$cc -maix32\"\n\t\t\tld=\"$cc\"\n\t\t\t;;\n\t\t    esac\n\t\techo >&4 \"(using ccflags   $ccflags)\"\n\t\techo >&4 \"(using ldflags   $ldflags)\"\n\t\techo >&4 \"(using lddlflags $lddlflags)\"\n\t\t;;\n\t    esac\n\t;;\n    esac\nEOCBU\n\ncat > UU/use64bitall.cbu <<'EOCBU'\n# This script UU/use64bitall.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to be maximally 64-bitty.\ncase \"$use64bitall\" in\n    $define|true|[yY]*)\n\techo \" \"\n\techo \"Checking the CPU width of your hardware...\" >&4\n\t$cat >size.c <<EOCP\n#include <stdio.h>\n#include <sys/systemcfg.h>\nint main (void)\n{\n    printf (\"%d\\n\", _system_configuration.width);\n    return (0);\n    }\nEOCP\n\tset size\n\tif eval $compile_ok; then\n\t    qacpuwidth=`./size`\n\t    echo \"You are running on $qacpuwidth bit hardware.\"\n\telse\n\t    dflt=\"32\"\n\t    echo \" \"\n\t    echo \"(I can't seem to compile the test program.  Guessing...)\"\n\t    rp=\"What is the width of your CPU (in bits)?\"\n\t    . ./myread\n\t    qacpuwidth=\"$ans\"\n\t    fi\n\t$rm -f size.c size\n\n\tcase \"$qacpuwidth\" in\n\t    32*)\n\t\tcat >&4 <<EOM\nBzzzt! At present, you can only perform a\nfull 64-bit build on a 64-bit machine.\nEOM\n\t\texit 1\n\t\t;;\n\t    esac\n\tqacflags=\"`getconf XBS5_LP64_OFF64_CFLAGS 2>/dev/null`\"\n\tqaldflags=\"`getconf XBS5_LP64_OFF64_LDFLAGS 2>/dev/null`\"\n\t# See jhi's comments above regarding this re-eval.  I've\n\t# seen similar weirdness in the form of:\n\t#\n# 1506-173 (W) Option lm is not valid.  Enter xlc for list of valid options.\n\t#\n\t# error messages from 'cc -E' invocation. Again, the offending\n\t# string is simply not detectable by any means.  Since it doesn't\n\t# do any harm, I didn't pursue it. -- sh\n\tqaldflags=\"`echo $qaldflags`\"\n\tqalibs=\"`getconf XBS5_LP64_OFF64_LIBS 2>/dev/null|sed -e 's@^-l@@' -e 's@ -l@ @g'`\"\n\t# -q32 and -b32 may have been set by uselargefiles or user.\n\t# Remove them.\n\tccflags=\"`echo $ccflags | sed -e 's@-q32@@'`\"\n\tldflags=\"`echo $ldflags | sed -e 's@-b32@@'`\"\n\tcase \"$cc\" in\n\t    *gcc*|*g++*)\n\t\tccflags=\"`echo $ccflags | sed -e 's@-q64@-maix64@'`\"\n\t\tccflags_uselargefiles=\"`echo $ccflags_uselargefiles | sed -e 's@-q64@-maix64@'`\"\n\t\tqacflags=\"`echo $qacflags | sed -e 's@-q64@-maix64@'`\"\n\t\t;;\n\t    esac\n\t# Tell archiver to use large format.  Unless we remove 'ar'\n\t# from 'trylist', the Configure script will just reset it to 'ar'\n\t# immediately prior to writing config.sh.  This took me hours\n\t# to figure out.\n\ttrylist=\"`echo $trylist | sed -e 's@^ar @@' -e 's@ ar @ @g' -e 's@ ar$@@'`\"\n\tar=\"ar -X64\"\n\tnm_opt=\"-X64 $nm_opt\"\n\tcase \"$qacflags$qaldflags$qalibs\" in\n\t    '') ;;\n\t    *)  ccflags=\"$ccflags $qacflags\"\n\t\tldflags=\"$ldflags\"\n\t\tlddlflags=\"$qaldflags $lddlflags\"\n\t\tlibswanted=\"$libswanted $qalibs\"\n\t\t;;\n\t    esac\n\tcase \"$ccflags\" in\n\t    *-DUSE_64_BIT_ALL*) ;;\n\t    *) ccflags=\"$ccflags -DUSE_64_BIT_ALL\";;\n\t    esac\n\tcase \"$archname64\" in\n\t    ''|64*) archname64=64all ;;\n\t    esac\n\tlongsize=\"8\"\n\tqacflags=''\n\tqaldflags=''\n\tqalibs=''\n\tqacpuwidth=''\n\t;;\n    esac\nEOCBU\n\nif test $usenativedlopen = 'true' ; then\n    ccflags=\"$ccflags -DUSE_NATIVE_DLOPEN\"\n    # -brtl\t\t    Enables a binary to use run time linking\n    # -bdynamic\t\t    When used with -brtl, tells linker to search for\n    #\t\t\t    \".so\"-suffix libraries as well as \".a\" suffix\n    #\t\t\t    libraries. AIX allows both .so and .a libraries to\n    #\t\t\t    contain dynamic shared objects.\n    case \"$cc\" in\n\t*gcc*|*g++*) ldflags=\"$ldflags -Wl,-brtl -Wl,-bdynamic\" ;;\n\t*)           ldflags=\"$ldflags -brtl -bdynamic\" ;;\n\tesac\nelif test -f /lib/libC.a -a X\"`$cc -v 2>&1 | grep gcc`\" = X; then\n    # If the C++ libraries, libC and libC_r, are available we will\n    # prefer them over the vanilla libc, because the libC contain\n    # loadAndInit() and terminateAndUnload() which work correctly\n    # with C++ statics while libc load() and unload() do not. See\n    # ext/DynaLoader/dl_aix.xs. The C-to-C_r switch is done by\n    # usethreads.cbu, if needed.\n\n    # Cify libswanted.\n    set `echo X \"$libswanted \"| sed -e 's/ c / C c /'`\n    shift\n    libswanted=\"$*\"\n    # Cify lddlflags.\n    set `echo X \"$lddlflags \"| sed -e 's/ -lc / -lC -lc /'`\n    shift\n    lddlflags=\"$*\"\n    fi\n\ncase \"$PASE\" in\n    define)\n\tcase \"$prefix\" in\n\t    '') prefix=/QOpenSys/perl ;;\n\t    esac\n\tcat >&4 <<EOF\n\n***\n*** You seem to be compiling in AIX for the OS/400 PASE environment.\n*** I'm not going to use the AIX bind, nsl, and possible util libraries, then.\n*** I'm also not going to install perl as /usr/bin/perl.\n*** Perl will be installed under $prefix.\n*** For instructions how to install this build from AIX to PASE,\n*** see the file README.os400.  Accept the \"aix\" for the question\n*** about \"Operating system name\".\n***\nEOF\n\tset `echo \" $libswanted \" | sed -e 's@ bind @ @' -e 's@ nsl @ @' -e 's@ util @ @'`\n\tshift\n\tlibswanted=\"$*\"\n\tinstallusrbinperl=\"$undef\"\n\n\t# V5R1 doesn't have this (V5R2 does), without knowing\n\t# which one we have it's safer to be pessimistic.\n\t# Cwd will work fine even without fchdir(), but if\n\t# V5R1 tries to use code compiled assuming fchdir(),\n\t# lots of grief will issue forth from Cwd.\n\tcase \"$d_fchdir\" in\n\t    '') d_fchdir=\"$undef\" ;;\n\t    esac\n\t;;\n    esac\n\n# remove libbsd.a from wanted libraries\nlibswanted=`echo \" $libswanted \" | sed -e 's/ bsd / /'`\nlibswanted=`echo \" $libswanted \" | sed -e 's/ BSD / /'`\nd_flock='undef'\n\n# remove libgdbm from wanted libraries\n# The libgdbm < 1.8.3-5 from the AIX Toolbox is not working\n# because two wrong .h are present\nif [ -f \"/opt/freeware/include/gdbm/dbm.h\" ] ||\n   [ -f \"/opt/freeware/include/gdbm/ndbm.h\" ]; then\n    echo \"GDBM support disabled because your GDBM package contains extraneous headers - see README.aix.\"\n    libswanted=`echo \" $libswanted \" | sed -e 's/ gdbm / /'`\n    i_gdbm='undef'\n    i_gdbmndbm='undef'\nfi\n\n# Some releases (and patch levels) of AIX cannot have both\n# long doubles and infinity (infinity plus one equals ... NaNQ!)\n#\n# This deficiency, and others, is apparently a well-documented feature\n# of AIX 128-bit long doubles:\n#\n# http://www-01.ibm.com/support/knowledgecenter/ssw_aix_61/com.ibm.aix.genprogc/128bit_long_double_floating-point_datatype.htm\n#\n# The URL seems to be fragile, it has moved around over the years,\n# but searching AIX docs at ibm.com for \"128-bit long double\n# floating-point data type\" should surface the latest info.\n#\n# Some salient points:\n#\n# <quote>\n# * The 128-bit implementation differs from the IEEE standard for long double\n#   in the following ways:\n# * Supports only round-to-nearest mode. If the application changes\n#   the rounding mode, results are undefined.\n# * Does not fully support the IEEE special numbers NaN and INF.\n# * Does not support IEEE status flags for overflow, underflow,\n#   and other conditions. These flags have no meaning for the 128-bit\n#   long double inplementation.\n# * The 128-bit long double data type does not support the following math\n#   APIs: atanhl, cbrtl, copysignl, exp2l, expm1l, fdiml, fmal, fmaxl,\n#   fminl, hypotl, ilogbl, llrintl, llroundl, log1pl, log2l, logbl,\n#   lrintl, lroundl, nanl, nearbyintl, nextafterl, nexttoward,\n#   nexttowardf, nexttowardl, remainderl, remquol, rintl, roundl,\n#   scalblnl, scalbnl, tgammal, and truncl.\n# * The representation of 128-bit long double numbers means that the\n#   following macros required by standard C in the values.h file do not\n#   have clear meaning:\n#   * Number of bits in the mantissa (LDBL_MANT_DIG)\n#   * Epsilon (LBDL_EPSILON)\n#   * Maximum representable finite value (LDBL_MAX)\n# </quote>\n#\n# The missing math functions affect the POSIX extension math interfaces.\n\ncase \"$uselongdouble\" in\n$define)\n  echo \"Checking if your infinity is working with long doubles...\" >&4\n  cat > inf$$.c <<EOF\n#include <math.h>\n#include <stdio.h>\nint main() {\n  long double inf = INFINITY;\n  long double one = 1.0L;\n  printf(\"%Lg\\n\", inf + one);\n}\nEOF\n  $cc -qlongdouble -o inf$$ inf$$.c -lm\n  case `./inf$$` in\n  INF) echo \"Your infinity is working correctly with long doubles.\" >&4 ;;\n  *) # NaNQ (or anything else than INF)\n    echo \" \"\n    echo \"Your infinity is broken, I suggest disabling long doubles.\" >&4\n    rp=\"Disable long doubles?\"\n    dflt=\"y\"\n    . UU/myread\n    case \"$ans\" in\n    [Yy]*)\n      echo \"Okay, disabling long doubles.\" >&4\n      uselongdouble=\"$undef\"\n      ccflags=`echo \" $ccflags \" | sed -e 's/ -qlongdouble / /'`\n      libswanted=`echo \" $libswanted \" | sed -e 's/ c128/ /'`\n      lddlflags=`echo \" $lddlflags \" | sed -e 's/ -lc128 / /'`\n      ;;\n    *)\n      echo \"Okay, keeping long doubles enabled.\" >&4\n      ;;\n    esac\n    ;;\n  esac\n  rm -f inf$$.c inf$$\n  ;;\nesac\n\n# Some releases (and patch levels) of AIX have a broken powl().\npp_cflags=''\ncase \"$uselongdouble\" in\ndefine)\n  echo \"Checking if your powl() is broken...\" >&4\n  cat > powl$$.c <<EOF\n#include <math.h>\n#include <stdio.h>\nint main() {\n  printf(\"%Lg\\n\", powl(-3.0L, 2.0L));\n}\nEOF\n  case \"$gccversion\" in\n  '') $cc -qlongdouble -o powl$$ powl$$.c -lm ;;\n  *) $cc -o powl$$ powl$$.c -lm ;;\n  esac\n  case `./powl$$` in\n  9) echo \"Your powl() is working correctly.\" >&4 ;;\n  *)\n    echo \"Your powl() is broken, will use a workaround.\" >&4\n    pp_cflags='ccflags=\"$ccflags -DHAS_AIX_POWL_NEG_BASE_BUG\"'\n    ;;\n  esac\n  rm -f powl$$.c powl$$\n  ;;\nesac\n\n# Some releases of AIX cc/xlc a broken fmodl(), but -q64 seems to help.\ncase \"$gccversion\" in\n'') case \"$uselongdouble\" in\n   define)\n     case \"$ccflags\" in\n     *-q64*) ;;\n     *) echo \"Checking if your fmodl() is broken...\" >&4\n        cat > fmodl$$.c <<EOF\n#include <math.h>\n#include <stdio.h>\nint main() {\n  printf(\"%ld\\n\", (long)fmodl(powl(2, 31), (long double)4294967295));\n}\nEOF\n        $cc -qlongdouble -o fmodl$$ fmodl$$.c -lm\n        case `./fmodl$$` in\n        2147483648) echo \"Your fmodl() is working correctly.\" >&4 ;;\n        *) echo \"Your fmodl() is broken, will try with -q64...\" >&4\n           $cc -q64 -qlongdouble -o fmodl$$ fmodl$$.c -lm\n           case `./fmodl$$` in\n           2147483648)\n             echo \"The -q64 did the trick, will use it.\" >& 4\n             ccflags=\"`echo $ccflags | sed -e 's@-q32@@g'`\"\n             ldflags=\"`echo $ldflags | sed -e 's@-q32@@g'`\"\n             ccflags=\"$ccflags -q64\"\n             ldflags=\"$ldflags -q64\"\n             ;;\n           *) echo \"Not even the -q64 worked.  I'm disabling long doubles.\" >&4\n              echo \"And you should have stern talk with your IBM rep.\" >&4\n              uselongdouble=\"$undef\"\n              ccflags=`echo \" $ccflags \" | sed -e 's/ -qlongdouble / /'`\n              libswanted=`echo \" $libswanted \" | sed -e 's/ c128/ /'`\n              lddlflags=`echo \" $lddlflags \" | sed -e 's/ -lc128 / /'`\n              ;;\n           esac  # second fmodl$$\n           ;;\n        esac # first fmodl$$\n        ;;\n     esac # Checking if ...\n     ;;\n  esac # uselongdouble\n  rm -f fmodl$$.c fmodl$$\n  ;;\nesac # not gcc\n\n\n# EOF\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/solaris_2.sh": "# hints/solaris_2.sh\n# Contributions by (in alphabetical order) Alan Burlison, Andy Dougherty,\n# Dean Roehrich, Jarkko Hietaniemi, Lupe Christoph, Richard Soderberg and\n# many others.\n#\n# See README.solaris for additional information.\n#\n# For consistency with gcc, we do not adopt Sun Marketing's\n# removal of the '2.' prefix from the Solaris version number.\n# (Configure tries to detect an old fixincludes and needs\n# this information.)\n\n# If perl fails tests that involve dynamic loading of extensions, and\n# you are using gcc, be sure that you are NOT using GNU as and ld.  One\n# way to do that is to invoke Configure with\n#\n#     sh Configure -Dcc='gcc -B/usr/ccs/bin/'\n#\n#  (Note that the trailing slash is *required*.)\n#  gcc will occasionally emit warnings about \"unused prefix\", but\n#  these ought to be harmless.  See below for more details.\n\n# Solaris has secure SUID scripts\nd_suidsafe=${d_suidsafe:-define}\n\n# Be paranoid about nm failing to find symbols\nmistrustnm=${mistrustnm:-run}\n\n# Several people reported problems with perl's malloc, especially\n# when use64bitall is defined or when using gcc.\n#     http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/2001-01/msg01318.html\n#     http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/2001-01/msg00465.html\nusemymalloc=${usemymalloc:-false}\n\n# malloc wrap works\ncase \"$usemallocwrap\" in\n'') usemallocwrap='define' ;;\nesac\n\n# Avoid all libraries in /usr/ucblib.\n# /lib is just a symlink to /usr/lib\nset `echo $glibpth | sed -e 's@/usr/ucblib@@' -e 's@ /lib @ @'`\nglibpth=\"$*\"\n\n# Starting with Solaris 10, we don't want versioned shared libraries because\n# those often indicate a private use only library.  Especially badly that would\n# break things with SUNWbdb (Berkeley DB) being installed, which brings in\n# /usr/lib/libdb.so.1, but that is not really meant for public consumption.\n#  XXX Revisit after perl 5.10 -- should we apply this to older Solaris\n# versions too?  (A.D. 11/2007).\ncase \"`$run uname -r`\" in\n5.[0-9]) ;;\n*) ignore_versioned_solibs=y ;;\nesac\n\n# Remove unwanted libraries.  -lucb contains incompatible routines.\n# -lld and -lsec don't do anything useful. -lcrypt does not\n# really provide anything we need over -lc, so we drop it, too.\n# -lmalloc can cause a problem with GNU CC & Solaris.  Specifically,\n# libmalloc.a may allocate memory that is only 4 byte aligned, but\n# GNU CC on the Sparc assumes that doubles are 8 byte aligned.\n# Thanks to  Hallvard B. Furuseth <h.b.furuseth@usit.uio.no>\nset `echo \" $libswanted \" | sed -e 's@ ld @ @' -e 's@ malloc @ @' -e 's@ ucb @ @' -e 's@ sec @ @' -e 's@ crypt @ @'`\nlibswanted=\"$*\"\n\n# Look for architecture name.  We want to suggest a useful default.\ncase \"$archname\" in\n'')\n    if test -f /usr/bin/arch; then\n\tarchname=`/usr/bin/arch`\n\tarchname=\"${archname}-${osname}\"\n    elif test -f /usr/ucb/arch; then\n\tarchname=`/usr/ucb/arch`\n\tarchname=\"${archname}-${osname}\"\n    fi\n    ;;\nesac\n\n#\n# This extracts the library directories that will be searched by the Sun\n# Workshop compiler, given the command-line supplied in $tryworkshopcc.\n# Use thusly: loclibpth=\"`$getworkshoplibs` $loclibpth\"\n#\n\tgetworkshoplibs=`cat <<'END'\neval $tryworkshopcc -### 2>&1 | \\\nsed -n '/ -Y /s!.* -Y \"P,\\([^\"]*\\)\".*!\\1!p' | tr ':' ' ' | \\\nsed -e 's!/usr/lib/sparcv9!!' -e 's!/usr/ccs/lib/sparcv9!!' \\\n    -e 's!/usr/lib!!g' -e 's!/usr/ccs/lib!!g'\nEND\n`\n\ncase \"$cc\" in\n'')    for i in `ls -r /opt/sol*studio*/bin/cc` /opt/SUNWspro/bin/cc\n       do\n\t       if test -f \"$i\"; then\n\t\t       cc=$i\n\t\t       cat <<EOF >&4\n\nYou specified no cc but you seem to have the Workshop compiler\n($cc) installed, using that.\nIf you want something else, specify that in the command line,\ne.g. Configure -Dcc=gcc\n\nEOF\n\t\t\tbreak\n\t\tfi\n\tdone\n\t;;\nesac\n\n######################################################\n# General sanity testing.  See below for excerpts from the Solaris FAQ.\n#\n# From roehrich@ironwood-fddi.cray.com Wed Sep 27 12:51:46 1995\n# Date: Thu, 7 Sep 1995 16:31:40 -0500\n# From: Dean Roehrich <roehrich@ironwood-fddi.cray.com>\n# To: perl5-porters@africa.nicoh.com\n# Subject: Re: On perl5/solaris/gcc\n#\n# Here's another draft of the perl5/solaris/gcc sanity-checker.\n\ncase `type ${cc:-cc}` in\n*/usr/ucb/cc*) cat <<END >&4\n\nNOTE:  Some people have reported problems with /usr/ucb/cc.\nIf you have difficulties, please make sure the directory\ncontaining your C compiler is before /usr/ucb in your PATH.\n\nEND\n;;\nesac\n\n\n# Check that /dev/fd is mounted.  If it is not mounted, let the\n# user know that suid scripts may not work.\n$run mount | grep '^/dev/fd ' 2>&1 > /dev/null\ncase $? in\n0) ;;\n*)\n\tcat <<END >&4\n\nNOTE: Your system does not have /dev/fd mounted.  If you want to\nbe able to use set-uid scripts you must ask your system administrator\nto mount /dev/fd.\n\nEND\n\t;;\nesac\n\n\n# See if libucb can be found in /usr/lib.  If it is, warn the user\n# that this may cause problems while building Perl extensions.\nfound_libucb=''\ncase \"$run\" in\n'') /usr/bin/ls /usr/lib/libucb* >/dev/null 2>&1\n    found_libucb=$?\n    ;;\n*)  $run /usr/bin/ls '/usr/lib/libucb*' >/dev/null 2>&1\n    found_libucb=$?\n    ;;\nesac\n\ncase $found_libucb in\n0)\n\tcat <<END >&4\n\nNOTE: libucb has been found in /usr/lib.  libucb should reside in\n/usr/ucblib.  You may have trouble while building Perl extensions.\n\nEND\n;;\nesac\n\n# Use shell built-in 'type' command instead of /usr/bin/which to\n# avoid possible csh start-up problems and also to use the same shell\n# we'll be using to Configure and make perl.\n# The path name is the last field in the output, but the type command\n# has an annoying array of possible outputs, e.g.:\n#\tmake is hashed (/opt/gnu/bin/make)\n#\tcc is /usr/ucb/cc\n#\tfoo not found\n# use a command like type make | awk '{print $NF}' | sed 's/[()]//g'\n\n# See if make(1) is GNU make(1).\n# If it is, make sure the setgid bit is not set.\nmake -v > make.vers 2>&1\nif grep GNU make.vers > /dev/null 2>&1; then\n    tmp=`type make | awk '{print $NF}' | sed 's/[()]//g'`\n    case \"`${ls:-'/usr/bin/ls'} -lL $tmp`\" in\n    ??????s*)\n\t    cat <<END >&2\n\nNOTE: Your PATH points to GNU make, and your GNU make has the set-group-id\nbit set.  You must either rearrange your PATH to put /usr/ccs/bin before the\nGNU utilities or you must ask your system administrator to disable the\nset-group-id bit on GNU make.\n\nEND\n\t    ;;\n    esac\nfi\nrm -f make.vers\n\ncat > UU/cc.cbu <<'EOCBU'\n# This script UU/cc.cbu will get 'called-back' by Configure after it\n# has prompted the user for the C compiler to use.\n\n# If the C compiler is gcc:\n#   - check the fixed-includes\n#   - check as(1) and ld(1), they should not be GNU\n#\t(GNU as and ld 2.8.1 and later are reportedly ok, however.)\n# If the C compiler is not gcc:\n#   - Check if it is the Workshop/Forte compiler.\n#     If it is, prepare for 64 bit and long doubles.\n#   - check as(1) and ld(1), they should not be GNU\n#\t(GNU as and ld 2.8.1 and later are reportedly ok, however.)\n#\n# Watch out in case they have not set $cc.\n\n# Perl compiled with some combinations of GNU as and ld may not\n# be able to perform dynamic loading of extensions.  If you have a\n# problem with dynamic loading, be sure that you are using the Solaris\n# /usr/ccs/bin/as and /usr/ccs/bin/ld.  You can do that with\n#\tsh Configure -Dcc='gcc -B/usr/ccs/bin/'\n# (note the trailing slash is required).\n# Combinations that are known to work with the following hints:\n#\n#  gcc-2.7.2, GNU as 2.7, GNU ld 2.7\n#  egcs-1.0.3, GNU as 2.9.1 and GNU ld 2.9.1\n#\t--Andy Dougherty  <doughera@lafayette.edu>\n#\tTue Apr 13 17:19:43 EDT 1999\n\n# Get gcc to share its secrets.\necho 'int main() { return 0; }' > try.c\n\t# Indent to avoid propagation to config.sh\n\tverbose=`${cc:-cc} $ccflags -v -o try try.c 2>&1`\n\n# XXX TODO:  'specs' output changed from 'Reading specs from' in gcc-[23] to 'Using\n# built-in specs' in gcc-4.  Perhaps we should just use the same gcc test as\n# in Configure to see if we're using gcc.\nif echo \"$verbose\" | egrep '(Reading specs from)|(Using built-in specs)' >/dev/null 2>&1; then\n\t#\n\t# Using gcc.\n\t#\n\tcc_name='gcc'\n\n\t# See if as(1) is GNU as(1).  GNU as(1) might not work for this job.\n\tif echo \"$verbose\" | grep ' /usr/ccs/bin/as ' >/dev/null 2>&1; then\n\t    :\n\telse\n\t    cat <<END >&2\n\nNOTE: You are using GNU as(1).  GNU as(1) might not build Perl.  If you\nhave trouble, you can use /usr/ccs/bin/as by including -B/usr/ccs/bin/\nin your ${cc:-cc} command.  (Note that the trailing \"/\" is required.)\n\nEND\n\t    # Apparently not needed, at least for as 2.7 and later.\n\t    # cc=\"${cc:-cc} $ccflags -B/usr/ccs/bin/\"\n\tfi\n\n\t# See if ld(1) is GNU ld(1).  GNU ld(1) might not work for this job.\n\t# Recompute $verbose since we may have just changed $cc.\n\tverbose=`${cc:-cc} $ccflags -v -o try try.c 2>&1 | grep ld 2>&1`\n\n\tif echo \"$verbose\" | grep ' /usr/ccs/bin/ld ' >/dev/null 2>&1; then\n\t    # Ok, gcc directly calls the Solaris /usr/ccs/bin/ld.\n\t    :\n\telif echo \"$verbose\" | grep \"ld: Software Generation Utilities\" >/dev/null 2>&1; then\n\t    # Hmm.  gcc doesn't call /usr/ccs/bin/ld directly, but it\n\t    # does appear to be using it eventually.  egcs-1.0.3's ld\n\t    # wrapper does this.\n\t    # Most Solaris versions of ld I've seen contain the magic\n\t    # string used in the grep.\n\t    :\n\telif echo \"$verbose\" | grep \"Solaris Link Editors\" >/dev/null 2>&1; then\n\t    # However some Solaris 8 versions prior to ld 5.8-1.286 contain\n\t    # this string instead.\n\t    :\n\telse\n\t    # No evidence yet of /usr/ccs/bin/ld.  Some versions\n\t    # of egcs's ld wrapper call /usr/ccs/bin/ld in turn but\n\t    # apparently don't reveal that unless you pass in -V.\n\t    # (This may all depend on local configurations too.)\n\n\t    # Recompute verbose with -Wl,-v to find GNU ld if present\n\t    verbose=`${cc:-cc} $ccflags -Wl,-v -o try try.c 2>&1 | grep /ld 2>&1`\n\n\t    myld=`echo $verbose | awk '/\\/ld/ {print $1}'`\n\t    # This assumes that gcc's output will not change, and that\n\t    # /full/path/to/ld will be the first word of the output.\n\t    # Thus myld is something like /opt/gnu/sparc-sun-solaris2.5/bin/ld\n\n\t    # Allow that $myld may be '', due to changes in gcc's output\n\t    if ${myld:-ld} -V 2>&1 |\n\t\tgrep \"ld: Software Generation Utilities\" >/dev/null 2>&1; then\n\t\t# Ok, /usr/ccs/bin/ld eventually does get called.\n\t\t:\n\t    elif ${myld:-ld} -V 2>&1 |\n\t\tgrep \"Solaris Link Editors\" >/dev/null 2>&1; then\n\t\t# Ok, /usr/ccs/bin/ld eventually does get called.\n\t\t:\n\t    else\n\t\techo \"Found GNU ld='$myld'\" >&4\n\t\tcat <<END >&2\n\nNOTE: You are using GNU ld(1).  GNU ld(1) might not build Perl.  If you\nhave trouble, you can use /usr/ccs/bin/ld by including -B/usr/ccs/bin/\nin your ${cc:-cc} command.  (Note that the trailing \"/\" is required.)\n\nI will try to use GNU ld by passing in the -Wl,-E flag, but if that\ndoesn't work, you should use -B/usr/ccs/bin/ instead.\n\nEND\n\t\tccdlflags=\"$ccdlflags -Wl,-E\"\n\t\tlddlflags=\"$lddlflags -Wl,-E -shared\"\n\t    fi\n\tfi\n\nelse\n\t#\n\t# Not using gcc.\n\t#\n\tcat > try.c << 'EOM'\n#include <stdio.h>\nint main() {\n#if defined(__SUNPRO_C)\n\tprintf(\"workshop\\n\");\n#else\n#if defined(__SUNPRO_CC)\n\tprintf(\"workshop CC\\n\");\n#else\n\tprintf(\"\\n\");\n#endif\n#endif\nreturn(0);\n}\nEOM\n\ttryworkshopcc=\"${cc:-cc} $ccflags try.c -o try\"\n\tif $tryworkshopcc >/dev/null 2>&1; then\n\t\tcc_name=`$run ./try`\n\t\tif test \"$cc_name\" = \"workshop\"; then\n\t\t\tccversion=\"`${cc:-cc} -V 2>&1|sed -n -e '1s/^[Cc][Cc9]9*: //p'`\"\n\t\tfi\n\t\tif test \"$cc_name\" = \"workshop CC\"; then\n\t\t\tccversion=\"`${cc:-CC} -V 2>&1|sed -n -e '1s/^[Cc][C]: //p'`\"\n\t\tfi\n\t\tcase \"$cc_name\" in\n\t\tworkshop*)\n\t\t\t# Settings for either cc or CC\n\t\t\tif test ! \"$use64bitall_done\"; then\n\t\t\t\tloclibpth=\"/usr/lib /usr/ccs/lib `$getworkshoplibs` $loclibpth\"\n\t\t\tfi\n\t\t\t# Sun CC/cc don't support gcc attributes\n\t\t\td_attribute_format='undef'\n\t\t\td_attribute_malloc='undef'\n\t\t\td_attribute_nonnull='undef'\n\t\t\td_attribute_noreturn='undef'\n\t\t\td_attribute_pure='undef'\n\t\t\td_attribute_unused='undef'\n\t\t\td_attribute_warn_unused_result='undef'\n\t\t\tcase \"$cc\" in\n\t\t\t*c99)\t# c99 rejects bare '-O'.\n\t\t\t\tcase \"$optimize\" in\n\t\t\t\t''|-O) optimize=-O3 ;;\n\t\t\t\tesac\n\t\t\t\t# Without -Xa c99 doesn't see\n\t\t\t\t# many OS interfaces.\n\t\t\t\tcase \"$ccflags\" in\n\t\t\t\t*-Xa*)\t;;\n\t\t\t\t*) ccflags=\"$ccflags -Xa\" ;;\n\t\t\t\tesac\n\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\t\tesac\n\tfi\n\n\t# See if as(1) is GNU as(1).  GNU might not work for this job.\n\tcase `as --version < /dev/null 2>&1` in\n\t*GNU*)\n\t\tcat <<END >&2\n\nNOTE: You are using GNU as(1).  GNU as(1) might not build Perl.\nYou must arrange to use /usr/ccs/bin/as, perhaps by adding /usr/ccs/bin\nto the beginning of your PATH.\n\nEND\n\t\t;;\n\tesac\n\n\t# See if ld(1) is GNU ld(1).  GNU ld(1) might not work for this job.\n\t# ld --version doesn't properly report itself as a GNU tool,\n\t# as of ld version 2.6, so we need to be more strict. TWP 9/5/96\n\t# Sun's ld always emits the \"Software Generation Utilities\" string.\n\tif ld -V 2>&1 | grep \"ld: Software Generation Utilities\" >/dev/null 2>&1; then\n\t    # Ok, ld is /usr/ccs/bin/ld.\n\t    :\n\telse\n\t    cat <<END >&2\n\nNOTE: You are apparently using GNU ld(1).  GNU ld(1) might not build Perl.\nYou should arrange to use /usr/ccs/bin/ld, perhaps by adding /usr/ccs/bin\nto the beginning of your PATH.\n\nEND\n\tfi\nfi\n\n# as --version or ld --version might dump core.\nrm -f try try.c core\nEOCBU\n\ncat > UU/usethreads.cbu <<'EOCBU'\n# This script UU/usethreads.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use threads.\ncase \"$usethreads\" in\n$define|true|[yY]*)\n\tccflags=\"-D_REENTRANT $ccflags\"\n\n\t# -lpthread overrides some lib C functions, so put it before c.\n\tset `echo X \"$libswanted \"| sed -e \"s/ c / pthread c /\"`\n\tshift\n\tlibswanted=\"$*\"\n\n\t# sched_yield is available in the -lrt library.  However,\n\t# we can also pick up the equivalent yield() function in the\n\t# normal C library.  To avoid pulling in unnecessary\n\t# libraries, we'll normally avoid sched_yield()/-lrt and\n\t# just use yield().  However, we'll honor a command-line\n\t# override : \"-Dsched_yield=sched_yield\".\n\t# If we end up using sched_yield, we're going to need -lrt.\n\tsched_yield=${sched_yield:-yield}\n\tif test \"$sched_yield\" = \"sched_yield\"; then\n\t    set `echo X \"$libswanted \"| sed -e \"s/ pthread / rt pthread /\"`\n\t    shift\n\t    libswanted=\"$*\"\n\tfi\n\n\t# On Solaris 2.6 x86 there is a bug with sigsetjmp() and siglongjmp()\n\t# when linked with the threads library, such that whatever positive\n\t# value you pass to siglongjmp(), sigsetjmp() returns 1.\n\t# Thanks to Simon Parsons <S.Parsons@ftel.co.uk> for this report.\n\t# Sun BugID is 4117946, \"sigsetjmp always returns 1 when called by\n\t# siglongjmp in a MT program\". As of 19980622, there is no patch\n\t# available.\n\tcat >try.c <<'EOM'\n\t/* Test for sig(set|long)jmp bug. */\n\t#include <setjmp.h>\n\n\tint main()\n\t{\n\t    sigjmp_buf env;\n\t    int ret;\n\n\t    ret = sigsetjmp(env, 1);\n\t    if (ret) { return ret == 2; }\n\t    siglongjmp(env, 2);\n\t}\nEOM\n\tif test \"`arch`\" = i86pc -a `uname -r` = 5.6 && \\\n\t   ${cc:-cc} try.c -lpthread >/dev/null 2>&1 && ./a.out; then\n\t    d_sigsetjmp=$undef\n\tfi\n\n\t# These prototypes should be visible since we using\n\t# -D_REENTRANT, but that does not seem to work.\n\t# It does seem to work for getnetbyaddr_r, weirdly enough,\n\t# and other _r functions. (Solaris 8)\n\n\td_ctermid_r_proto=\"$define\"\n\td_gethostbyaddr_r_proto=\"$define\"\n\td_gethostbyname_r_proto=\"$define\"\n\td_getnetbyname_r_proto=\"$define\"\n\td_getprotobyname_r_proto=\"$define\"\n\td_getprotobynumber_r_proto=\"$define\"\n\td_getservbyname_r_proto=\"$define\"\n\td_getservbyport_r_proto=\"$define\"\n\n\t# Ditto. (Solaris 7)\n\td_readdir_r_proto=\"$define\"\n\td_readdir64_r_proto=\"$define\"\n\td_tmpnam_r_proto=\"$define\"\n\td_ttyname_r_proto=\"$define\"\n\n\t;;\nesac\nEOCBU\n\ncat > UU/uselargefiles.cbu <<'EOCBU'\n# This script UU/uselargefiles.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use large files.\ncase \"$uselargefiles\" in\n''|$define|true|[yY]*)\n\n# Keep these in the left margin.\nccflags_uselargefiles=\"`$run getconf LFS_CFLAGS 2>/dev/null`\"\nldflags_uselargefiles=\"`$run getconf LFS_LDFLAGS 2>/dev/null`\"\nlibswanted_uselargefiles=\"`$run getconf LFS_LIBS 2>/dev/null|sed -e 's@^-l@@' -e 's@ -l@ @g'`\"\n\n    ccflags=\"$ccflags $ccflags_uselargefiles\"\n    ldflags=\"$ldflags $ldflags_uselargefiles\"\n    libswanted=\"$libswanted $libswanted_uselargefiles\"\n    ;;\nesac\nEOCBU\n\n# This is truly a mess.\ncase \"$usemorebits\" in\n\"$define\"|true|[yY]*)\n\tuse64bitint=\"$define\"\n\tuselongdouble=\"$define\"\n\t;;\nesac\n\nif test `$run uname -p` = i386; then\n    case \"$use64bitint\" in\n    \"$define\"|true|[yY]*)\n            ccflags=\"$ccflags -DPTR_IS_LONG\"\n            ;;\n    esac\nfi\n\nif test `$run uname -p` = sparc -o `$run uname -p` = i386; then\n    cat > UU/use64bitint.cbu <<'EOCBU'\n# This script UU/use64bitint.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use 64 bit integers.\ncase \"$use64bitint\" in\n\"$define\"|true|[yY]*)\n\t    case \"`$run uname -r`\" in\n\t    5.[0-4])\n\t\tcat >&4 <<EOM\nSolaris `uname -r|sed -e 's/^5\\./2./'` does not support 64-bit integers.\nYou should upgrade to at least Solaris 2.5.\nEOM\n\t\texit 1\n\t\t;;\n\t    esac\n\n# gcc-2.8.1 on Solaris 8 with -Duse64bitint fails op/pat.t test 822\n# if we compile regexec.c with -O.  Turn off optimization for that one\n# file.  See hints/README.hints , especially\n# =head2 Propagating variables to config.sh, method 3.\n#  A. Dougherty  May 24, 2002\n    case \"${gccversion}-${optimize}\" in\n    2.8*-O*)\n\t# Honor a command-line override (rather unlikely)\n\tcase \"$regexec_cflags\" in\n\t'') echo \"Disabling optimization on regexec.c for gcc $gccversion\" >&4\n\t    regexec_cflags='optimize='\n\t    echo \"regexec_cflags='optimize=\\\"\\\"'\" >> config.sh\n\t    ;;\n\tesac\n\t;;\n    esac\n    ;;\nesac\nEOCBU\n\n    cat > UU/use64bitall.cbu <<'EOCBU'\n# This script UU/use64bitall.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to be maximally 64 bitty.\ncase \"$use64bitall-$use64bitall_done\" in\n\"$define-\"|true-|[yY]*-)\n\t    case \"`$run uname -r`\" in\n\t    5.[0-6])\n\t\tcat >&4 <<EOM\nSolaris `uname -r|sed -e 's/^5\\./2./'` does not support 64-bit pointers.\nYou should upgrade to at least Solaris 2.7.\nEOM\n\t\texit 1\n\t\t;;\n\t    esac\n\t    processor=`$run uname -p`;\n\t    if test \"$processor\" = sparc; then\n\t\tlibc='/usr/lib/sparcv9/libc.so'\n\t\tif test ! -f $libc; then\n\t\t    cat >&4 <<EOM\n\nI do not see the 64-bit libc, $libc.\nCannot continue, aborting.\n\nEOM\n\t\t    exit 1\n\t\tfi\n\t    fi\n\t    case \"${cc:-cc} -v 2>/dev/null\" in\n\t    *gcc*)\n\t\techo 'int main() { return 0; }' > try.c\n\t\tcase \"`${cc:-cc} $ccflags -mcpu=v9 -m64 -S try.c 2>&1 | grep 'm64 is not supported by this configuration'`\" in\n\t\t*\"m64 is not supported\"*)\n\t\t    cat >&4 <<EOM\n\nFull 64-bit build is not supported by this gcc configuration.\nCheck http://gcc.gnu.org/ for the latest news of availability\nof gcc for 64-bit Sparc.\n\nCannot continue, aborting.\n\nEOM\n\t\t    exit 1\n\t\t    ;;\n\t\tesac\n\t\tif test \"$processor\" = sparc; then\n\t\t    loclibpth=\"/usr/lib/sparcv9 $loclibpth\"\n\t\t    ccflags=\"$ccflags -mcpu=v9\"\n\t\tfi\n\t\tccflags=\"$ccflags -m64\"\n\n\t\t# This adds in -Wa,-xarch=v9.  I suspect that's superfluous,\n\t\t# since the -m64 above should do that already.  Someone\n\t\t# with gcc-3.x.x, please test with gcc -v.   A.D. 20-Nov-2003\n#\t\tif test $processor = sparc -a X`$run getconf XBS5_LP64_OFF64_CFLAGS 2>/dev/null` != X; then\n#\t\t    ccflags=\"$ccflags -Wa,`$run getconf XBS5_LP64_OFF64_CFLAGS 2>/dev/null`\"\n#\t\tfi\n\t\tldflags=\"$ldflags -m64\"\n\n\t\t# See [perl #66604]:  On Solaris 11, gcc -m64 on amd64\n\t\t# appears not to understand -G.  (gcc -G has not caused\n\t\t# problems on other platforms in the past.)  gcc versions\n\t\t# at least as old as 3.4.3 support -shared, so just\n\t\t# use that with Solaris 11 and later, but keep\n\t\t# the old behavior for older Solaris versions.\n\t\tcase \"$osvers\" in\n\t\t\t2.?|2.10) lddlflags=\"$lddlflags -G -m64\" ;;\n\t\t\t*) lddlflags=\"$lddlflags -shared -m64\" ;;\n\t\tesac\n\t\t;;\n\t    *)\n\t\tgetconfccflags=\"`$run getconf XBS5_LP64_OFF64_CFLAGS 2>/dev/null`\"\n\t\tgetconfldflags=\"`$run getconf XBS5_LP64_OFF64_LDFLAGS 2>/dev/null`\"\n\t\tgetconflddlflags=\"`$run getconf XBS5_LP64_OFF64_LDFLAGS 2>/dev/null`\"\n\t\techo \"int main() { return(0); } \" > try.c\n\t\tcase \"`${cc:-cc} $getconfccflags try.c 2>&1 | grep 'deprecated'`\" in\n\t\t*\" -xarch=generic64 is deprecated, use -m64 \"*)\n\t\t    getconfccflags=`echo $getconfccflags | sed -e 's/xarch=generic64/m64/'`\n\t\t    getconfldflags=`echo $getconfldflags | sed -e 's/xarch=generic64/m64/'`\n\t\t    getconflddlflags=`echo $getconflddlflags | sed -e 's/xarch=generic64/m64/'`\n\t\t    ;;\n\t\tesac\n\t\tccflags=\"$ccflags $getconfccflags\"\n\t\tldflags=\"$ldflags $getconfldflags\"\n\t\tlddlflags=\"$lddlflags -G $getconflddlflags\"\n\n\t\techo \"int main() { return(0); } \" > try.c\n\t\ttryworkshopcc=\"${cc:-cc} try.c -o try $ccflags\"\n\t\tif test \"$processor\" = sparc; then\n\t\t    loclibpth=\"/usr/lib/sparcv9 /usr/ccs/lib/sparcv9 $loclibpth\"\n\t\tfi\n\t\tloclibpth=\"`$getworkshoplibs` $loclibpth\"\n\t\t;;\n\t    esac\n\t    unset processor\n\t    use64bitall_done=yes\n\t    archname64=64\n\t    ;;\nesac\nEOCBU\n\n    # Actually, we want to run this already now, if so requested,\n    # because we need to fix up things right now.\n    case \"$use64bitall\" in\n    \"$define\"|true|[yY]*)\n\t# CBUs expect to be run in UU\n\tcd UU; . ./use64bitall.cbu; cd ..\n\t;;\n    esac\nfi\n\ncat > UU/uselongdouble.cbu <<'EOCBU'\n# This script UU/uselongdouble.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use long doubles.\ncase \"$uselongdouble\" in\n\"$define\"|true|[yY]*)\n\tif test \"$cc_name\" = \"workshop\"; then\n\t\tcat > try.c << 'EOM'\n#include <sunmath.h>\nint main() { (void) powl(2, 256); return(0); }\nEOM\n\t\tif ${cc:-cc} try.c -lsunmath -o try > /dev/null 2>&1 && ./try; then\n\t\t\tlibswanted=\"$libswanted sunmath\"\n\t\tfi\n\telse\n\t\tcat >&4 <<EOM\n\nThe Sun Workshop math library is either not available or not working,\nso I do not know how to do long doubles, sorry.\nI'm therefore disabling the use of long doubles.\nEOM\n\t\tuselongdouble=\"$undef\"\n\tfi\n\t;;\nesac\nEOCBU\n\n#\n# If unsetenv is available, use it in conjunction with PERL_USE_SAFE_PUTENV to\n# work around Sun bugid 6333830.  Both unsetenv and 6333830 only appear in\n# Solaris 10, so we don't need to probe explicitly for an OS version.  We have\n# to append this test to the end of config.over as it needs to run after\n# Configure has probed for unsetenv, and this hints file is processed before\n# that has happened.\n#\ncat >> config.over <<'EOOVER'\nif test \"$d_unsetenv\" = \"$define\" -a \\\n    `expr \"$ccflags\" : '.*-DPERL_USE_SAFE_PUTENV'` -eq 0; then\n        ccflags=\"$ccflags -DPERL_USE_SAFE_PUTENV\"\nfi\nEOOVER\n\nrm -f try.c try.o try a.out\n\n# If using C++, the Configure scan for dlopen() will fail in Solaris\n# because one of the two (1) an extern \"C\" linkage definition is needed\n# (2) #include <dlfcn.h> is needed, *and* a cast to (void*(*)())\n# is needed for the &dlopen.  Adding any of these would require changing\n# a delicate spot in Configure, so easier just to force our guess here\n# for Solaris.  Much the same goes for dlerror().\ncase \"$cc\" in\n*g++*|*CC*)\n  d_dlopen='define'\n  d_dlerror='define'\n  ;;\nesac\n\n# Oracle/Sun builds their Perl shared since 5.6.1, and they also\n# strongly recommend using shared libraries in general.\n#\n# Furthermore, OpenIndiana seems to effectively require building perl\n# shared, or otherwise perl scripts won't even find the Perl library.\nuseshrplib='true'\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/linux.sh": "# hints/linux.sh\n# Original version by rsanders\n# Additional support by Kenneth Albanowski <kjahds@kjahds.com>\n#\n# ELF support by H.J. Lu <hjl@nynexst.com>\n# Additional info from Nigel Head <nhead@ESOC.bitnet>\n# and Kenneth Albanowski <kjahds@kjahds.com>\n#\n# Consolidated by Andy Dougherty <doughera@lafayette.edu>\n#\n# Updated Thu Feb  8 11:56:10 EST 1996\n\n# Updated Thu May 30 10:50:22 EDT 1996 by <doughera@lafayette.edu>\n\n# Updated Fri Jun 21 11:07:54 EDT 1996\n# NDBM support for ELF re-enabled by <kjahds@kjahds.com>\n\n# No version of Linux supports setuid scripts.\nd_suidsafe='undef'\n\n# No version of Linux needs libutil for perl.\ni_libutil='undef'\n\n# Debian and Red Hat, and perhaps other vendors, provide both runtime and\n# development packages for some libraries.  The runtime packages contain shared\n# libraries with version information in their names (e.g., libgdbm.so.1.7.3);\n# the development packages supplement this with versionless shared libraries\n# (e.g., libgdbm.so).\n#\n# If you want to link against such a library, you must install the development\n# version of the package.\n#\n# These packages use a -dev naming convention in both Debian and Red Hat:\n#   libgdbmg1  (non-development version of GNU libc 2-linked GDBM library)\n#   libgdbmg1-dev (development version of GNU libc 2-linked GDBM library)\n# So make sure that for any libraries you wish to link Perl with under\n# Debian or Red Hat you have the -dev packages installed.\n\n# SuSE Linux can be used as cross-compilation host for Cray XT4 Catamount/Qk.\nif test -d /opt/xt-pe\nthen\n  case \"`${cc:-cc} -V 2>&1`\" in\n  *catamount*) . hints/catamount.sh; return ;;\n  esac\nfi\n\n# Some operating systems (e.g., Solaris 2.6) will link to a versioned shared\n# library implicitly.  For example, on Solaris, `ld foo.o -lgdbm' will find an\n# appropriate version of libgdbm, if one is available; Linux, however, doesn't\n# do the implicit mapping.\nignore_versioned_solibs='y'\n\n# BSD compatibility library no longer needed\n# 'kaffe' has a /usr/lib/libnet.so which is not at all relevant for perl.\n# bind causes issues with several reentrant functions\nset `echo X \"$libswanted \"| sed -e 's/ bsd / /' -e 's/ net / /' -e 's/ bind / /'`\nshift\nlibswanted=\"$*\"\n\n# Debian 4.0 puts ndbm in the -lgdbm_compat library.\necho $libs\nif echo \" $libswanted \" | grep -q ' gdbm '; then\n    # Only add if gdbm is in libswanted.\n    libswanted=\"$libswanted gdbm_compat\"\nfi\n\n# Configure may fail to find lstat() since it's a static/inline\n# function in <sys/stat.h>.\nd_lstat=define\n\n# malloc wrap works\ncase \"$usemallocwrap\" in\n'') usemallocwrap='define' ;;\nesac\n\n# The system malloc() is about as fast and as frugal as perl's.\n# Since the system malloc() has been the default since at least\n# 5.001, we might as well leave it that way.  --AD  10 Jan 2002\ncase \"$usemymalloc\" in\n'') usemymalloc='n' ;;\nesac\n\nuname_minus_m=\"`$run uname -m 2>/dev/null`\"\nuname_minus_m=\"${uname_minus_m:-\"$targetarch\"}\"\n\n# Check if we're about to use Intel's ICC compiler\ncase \"`${cc:-cc} -V 2>&1`\" in\n*\"Intel(R) C++ Compiler\"*|*\"Intel(R) C Compiler\"*)\n    # record the version, formats:\n    # icc (ICC) 10.1 20080801\n    # icpc (ICC) 10.1 20080801\n    # followed by a copyright on the second line\n    ccversion=`${cc:-cc} --version | sed -n -e 's/^icp\\?c \\((ICC) \\)\\?//p'`\n    # This is needed for Configure's prototype checks to work correctly\n    # The -mp flag is needed to pass various floating point related tests\n    # The -no-gcc flag is needed otherwise, icc pretends (poorly) to be gcc\n    ccflags=\"-we147 -mp -no-gcc $ccflags\"\n    # Prevent relocation errors on 64bits arch\n    case \"$uname_minus_m\" in\n\t*ia64*|*x86_64*)\n\t    cccdlflags='-fPIC'\n\t;;\n    esac\n    # If we're using ICC, we usually want the best performance\n    case \"$optimize\" in\n    '') optimize='-O3' ;;\n    esac\n    ;;\n*\" Sun \"*\"C\"*)\n    # Sun's C compiler, which might have a 'tag' name between\n    # 'Sun' and the 'C':  Examples:\n    # cc: Sun C 5.9 Linux_i386 Patch 124871-01 2007/07/31\n    # cc: Sun Ceres C 5.10 Linux_i386 2008/07/10\n    test \"$optimize\" || optimize='-xO2'\n    cccdlflags='-KPIC'\n    lddlflags='-G -Bdynamic'\n    # Sun C doesn't support gcc attributes, but, in many cases, doesn't\n    # complain either.  Not all cases, though.\n    d_attribute_format='undef'\n    d_attribute_malloc='undef'\n    d_attribute_nonnull='undef'\n    d_attribute_noreturn='undef'\n    d_attribute_pure='undef'\n    d_attribute_unused='undef'\n    d_attribute_warn_unused_result='undef'\n    ;;\nesac\n\ncase \"$optimize\" in\n# use -O2 by default ; -O3 doesn't seem to bring significant benefits with gcc\n'')\n    optimize='-O2'\n    case \"$uname_minus_m\" in\n        ppc*)\n            # on ppc, it seems that gcc (at least gcc 3.3.2) isn't happy\n            # with -O2 ; so downgrade to -O1.\n            optimize='-O1'\n        ;;\n        ia64*)\n            # This architecture has had various problems with gcc's\n            # in the 3.2, 3.3, and 3.4 releases when optimized to -O2.  See\n            # RT #37156 for a discussion of the problem.\n            case \"`${cc:-gcc} -v 2>&1`\" in\n            *\"version 3.2\"*|*\"version 3.3\"*|*\"version 3.4\"*)\n                ccflags=\"-fno-delete-null-pointer-checks $ccflags\"\n            ;;\n            esac\n        ;;\n    esac\n    ;;\nesac\n\n# Ubuntu 11.04 (and later, presumably) doesn't keep most libraries\n# (such as -lm) in /lib or /usr/lib.  So we have to ask gcc to tell us\n# where to look.  We don't want gcc's own libraries, however, so we\n# filter those out.\n# This could be conditional on Unbuntu, but other distributions may\n# follow suit, and this scheme seems to work even on rather old gcc's.\n# This unconditionally uses gcc because even if the user is using another\n# compiler, we still need to find the math library and friends, and I don't\n# know how other compilers will cope with that situation.\n# Morever, if the user has their own gcc earlier in $PATH than the system gcc,\n# we don't want its libraries. So we try to prefer the system gcc\n# Still, as an escape hatch, allow Configure command line overrides to\n# plibpth to bypass this check.\nif [ -x /usr/bin/gcc ] ; then\n    gcc=/usr/bin/gcc\nelse\n    gcc=gcc\nfi\n\ncase \"$plibpth\" in\n'') plibpth=`LANG=C LC_ALL=C $gcc $ccflags $ldflags -print-search-dirs | grep libraries |\n\tcut -f2- -d= | tr ':' $trnl | grep -v 'gcc' | sed -e 's:/$::'`\n    set X $plibpth # Collapse all entries on one line\n    shift\n    plibpth=\"$*\"\n    ;;\nesac\n\n# For the musl libc, perl should #define _GNU_SOURCE.  Otherwise, some\n# available functions, like memem, won't be used.  See the discussion in\n# [perl #133760].  musl doesn't offer an easy way to identify it, but,\n# at least on alpine linux, the ldd --version output contains the\n# string 'musl.'\ncase `ldd --version 2>&1` in\n    musl*)  ccflags=\"$ccflags -D_GNU_SOURCE\" ;;\n        *) ;;\nesac\n\n# libquadmath is sometimes installed as gcc internal library,\n# so contrary to our usual policy of *not* looking at gcc internal\n# directories we now *do* look at them, in case they contain\n# the quadmath library.\n# XXX This may apply to other gcc internal libraries, if such exist.\n# XXX This could be at Configure level, but then the $gcc is messy.\ncase \"$usequadmath\" in\n\"$define\")\n  for d in `LANG=C LC_ALL=C $gcc $ccflags $ldflags -print-search-dirs | grep libraries | cut -f2- -d= | tr ':' $trnl | grep 'gcc' | sed -e 's:/$::'`\n  do\n    case `ls $d/*libquadmath*$so* 2>/dev/null` in\n    $d/*libquadmath*$so*) xlibpth=\"$xlibpth $d\" ;;\n    esac\n  done\n  ;;\nesac\n\ncase \"$libc\" in\n'')\n# If you have glibc, then report the version for ./myconfig bug reporting.\n# (Configure doesn't need to know the specific version since it just uses\n# gcc to load the library for all tests.)\n# We don't use __GLIBC__ and  __GLIBC_MINOR__ because they\n# are insufficiently precise to distinguish things like\n# libc-2.0.6 and libc-2.0.7.\n    for p in $plibpth\n    do\n        for trylib in libc.so.6 libc.so\n        do\n            if $test -e $p/$trylib; then\n                libc=`ls -l $p/$trylib | awk '{print $NF}'`\n                if $test \"X$libc\" != X; then\n                    break\n                fi\n            fi\n        done\n        if $test \"X$libc\" != X; then\n            break\n        fi\n    done\n    ;;\nesac\n\nif ${sh:-/bin/sh} -c exit; then\n  echo ''\n  echo 'You appear to have a working bash.  Good.'\nelse\n  cat << 'EOM' >&4\n\n*********************** Warning! *********************\nIt would appear you have a defective bash shell installed. This is likely to\ngive you a failure of op/exec test #5 during the test phase of the build,\nUpgrading to a recent version (1.14.4 or later) should fix the problem.\n******************************************************\nEOM\n\nfi\n\n# On SPARClinux,\n# The following csh consistently coredumped in the test directory\n# \"/home/mikedlr/perl5.003_94/t\", though not most other directories.\n\n#Name        : csh                    Distribution: Red Hat Linux (Rembrandt)\n#Version     : 5.2.6                        Vendor: Red Hat Software\n#Release     : 3                        Build Date: Fri May 24 19:42:14 1996\n#Install date: Thu Jul 11 16:20:14 1996 Build Host: itchy.redhat.com\n#Group       : Shells                   Source RPM: csh-5.2.6-3.src.rpm\n#Size        : 184417\n#Description : BSD c-shell\n\n# For this reason I suggest using the much bug-fixed tcsh for globbing\n# where available.\n\n# November 2001:  That warning's pretty old now and probably not so\n# relevant, especially since perl now uses File::Glob for globbing.\n# We'll still look for tcsh, but tone down the warnings.\n# Andy Dougherty, Nov. 6, 2001\nif $csh -c 'echo $version' >/dev/null 2>&1; then\n    echo 'Your csh is really tcsh.  Good.'\nelse\n    if xxx=`./UU/loc tcsh blurfl $pth`; $test -f \"$xxx\"; then\n\techo \"Found tcsh.  I'll use it for globbing.\"\n\t# We can't change Configure's setting of $csh, due to the way\n\t# Configure handles $d_portable and commands found in $loclist.\n\t# We can set the value for CSH in config.h by setting full_csh.\n\tfull_csh=$xxx\n    elif [ -f \"$csh\" ]; then\n\techo \"Couldn't find tcsh.  Csh-based globbing might be broken.\"\n    fi\nfi\n\n# Shimpei Yamashita <shimpei@socrates.patnet.caltech.edu>\n# Message-Id: <33EF1634.B36B6500@pobox.com>\n#\n# The DR2 of MkLinux (osname=linux,archname=ppc-linux) may need\n# special flags passed in order for dynamic loading to work.\n# instead of the recommended:\n#\n# ccdlflags='-rdynamic'\n#\n# it should be:\n# ccdlflags='-Wl,-E'\n#\n# So if your DR2 (DR3 came out summer 1998, consider upgrading)\n# has problems with dynamic loading, uncomment the\n# following three lines, make distclean, and re-Configure:\n#case \"`uname -r | sed 's/^[0-9.-]*//'``arch`\" in\n#'osfmach3ppc') ccdlflags='-Wl,-E' ;;\n#esac\n\ncase \"$uname_minus_m\" in\nsparc*)\n\tcase \"$cccdlflags\" in\n\t*-fpic*) cccdlflags=\"`echo $cccdlflags|sed 's/-fpic/-fPIC/'`\" ;;\n\t*-fPIC*) ;;\n\t*)\t cccdlflags=\"$cccdlflags -fPIC\" ;;\n\tesac\n\t;;\nesac\n\n# SuSE8.2 has /usr/lib/libndbm* which are ld scripts rather than\n# true libraries. The scripts cause binding against static\n# version of -lgdbm which is a bad idea. So if we have 'nm'\n# make sure it can read the file\n# NI-S 2003/08/07\ncase \"$nm\" in\n    '') ;;\n    *)\n    for p in $plibpth\n    do\n        if $test -r $p/libndbm.so; then\n            if $nm $p/libndbm.so >/dev/null 2>&1 ; then\n                echo 'Your shared -lndbm seems to be a real library.'\n                _libndbm_real=1\n                break\n            fi\n        fi\n    done\n    if $test \"X$_libndbm_real\" = X; then\n        echo 'Your shared -lndbm is not a real library.'\n        set `echo X \"$libswanted \"| sed -e 's/ ndbm / /'`\n        shift\n        libswanted=\"$*\"\n    fi\n    ;;\nesac\n\n# Linux on Synology.\nif [ -f /etc/synoinfo.conf -a -d /usr/syno ]; then\n    # Tested on Synology DS213 and DS413\n    #  OS version info in /etc.defaults/VERSION\n    #  http://forum.synology.com/wiki/index.php/What_kind_of_CPU_does_my_NAS_have\n    # Synology DS213 running DSM 4.3-3810-0 (2013-11-06)\n    #  CPU model Marvell Kirkwood mv6282 ARMv5te\n    #  Linux 2.6.32.12 #3810 Wed Nov 6 05:13:41 CST 2013 armv5tel GNU/Linux\n    # Synology DS413 running DSM 4.3-3810-0 (2013-11-06)\n    #  CPU model Freescale QorIQ P1022 ppc (e500v2)\n    #  linux 2.6.32.12 #3810 ppc GNU/Linux\n    # All development stuff installed with ipkg is in /opt\n    if [ \"$LANG\" = \"\" -o \"$LANG\" = \"C\" ]; then\n\techo 'Your LANG is safe'\n    else\n\techo 'Please set $LANG to \"C\". All other $LANG settings will cause havoc' >&4\n\tLANG=C\n    fi\n    echo 'Setting up to use /opt/*' >&4\n    locincpth=\"/opt/include $locincpth\"\n    libpth=\"/opt/lib $libpth\"\n    libspth=\"/opt/lib $libspth\"\n    loclibpth=\"/opt/lib $loclibpth\"\n    # POSIX will not link without the pthread lib\n    libswanted=\"$libswanted pthread\"\n    echo \"$libswanted\" >&4\nfi\n\n# This script UU/usethreads.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use threads.\ncat > UU/usethreads.cbu <<'EOCBU'\ncase \"$usethreads\" in\n$define|true|[yY]*)\n        ccflags=\"-D_REENTRANT -D_GNU_SOURCE $ccflags\"\n        if echo $libswanted | grep -v pthread >/dev/null\n        then\n            set `echo X \"$libswanted \"| sed -e 's/ c / pthread c /'`\n            shift\n            libswanted=\"$*\"\n        fi\n\n\t# Somehow at least in Debian 2.2 these manage to escape\n\t# the #define forest of <features.h> and <time.h> so that\n\t# the hasproto macro of Configure doesn't see these protos,\n\t# even with the -D_GNU_SOURCE.\n\n\td_asctime_r_proto=\"$define\"\n\td_crypt_r_proto=\"$define\"\n\td_ctime_r_proto=\"$define\"\n\td_gmtime_r_proto=\"$define\"\n\td_localtime_r_proto=\"$define\"\n\td_random_r_proto=\"$define\"\n\n\t;;\nesac\nEOCBU\n\ncat > UU/uselargefiles.cbu <<'EOCBU'\n# This script UU/uselargefiles.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use large files.\ncase \"$uselargefiles\" in\n''|$define|true|[yY]*)\n# Keep this in the left margin.\nccflags_uselargefiles=\"-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64\"\n\n\tccflags=\"$ccflags $ccflags_uselargefiles\"\n\t;;\nesac\nEOCBU\n\n# Purify fails to link Perl if a \"-lc\" is passed into its linker\n# due to duplicate symbols.\ncase \"$PURIFY\" in\n$define|true|[yY]*)\n    set `echo X \"$libswanted \"| sed -e 's/ c / /'`\n    shift\n    libswanted=\"$*\"\n    ;;\nesac\n\n# If using g++, the Configure scan for dlopen() and (especially)\n# dlerror() might fail, easier just to forcibly hint them in.\ncase \"$cc\" in\n*g++*)\n  d_dlopen='define'\n  d_dlerror='define'\n  ;;\nesac\n\n# Under some circumstances libdb can get built in such a way as to\n# need pthread explicitly linked.\n\nlibdb_needs_pthread=\"N\"\n\nif echo \" $libswanted \" | grep -v \" pthread \" >/dev/null\nthen\n   if echo \" $libswanted \" | grep \" db \" >/dev/null\n   then\n     for DBDIR in $glibpth\n     do\n       DBLIB=\"$DBDIR/libdb.so\"\n       if [ -f $DBLIB ]\n       then\n         if ${nm:-nm} -u $DBLIB 2>/dev/null | grep pthread >/dev/null\n         then\n           if ldd $DBLIB | grep pthread >/dev/null\n           then\n             libdb_needs_pthread=\"N\"\n           else\n             libdb_needs_pthread=\"Y\"\n           fi\n         fi\n       fi\n     done\n   fi\nfi\n\ncase \"$libdb_needs_pthread\" in\n  \"Y\")\n    libswanted=\"$libswanted pthread\"\n    ;;\nesac\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/netbsd.sh": "# hints/netbsd.sh\n#\n# Please check with packages@netbsd.org before making modifications\n# to this file.\n\ncase \"$archname\" in\n'')\n    archname=`uname -m`-${osname}\n    ;;\nesac\n\n# NetBSD keeps dynamic loading dl*() functions in /usr/lib/crt0.o,\n# so Configure doesn't find them (unless you abandon the nm scan).\n# Also, NetBSD 0.9a was the first release to introduce shared\n# libraries.\n#\ncase \"$osvers\" in\n0.9|0.8*)\n\tusedl=\"$undef\"\n\t;;\n*)\n\tcase `uname -m` in\n\tpmax)\n\t\t# NetBSD 1.3 and 1.3.1 on pmax shipped an `old' ld.so,\n\t\t# which will not work.\n\t\tcase \"$osvers\" in\n\t\t1.3|1.3.1)\n\t\t\td_dlopen=$undef\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tesac\n\tif test -f /usr/libexec/ld.elf_so; then\n\t\t# ELF\n\t\td_dlopen=$define\n\t\td_dlerror=$define\n\t\tcccdlflags=\"-DPIC -fPIC $cccdlflags\"\n\t\tlddlflags=\"-shared $lddlflags\"\n\t\tcat >UU/cc.cbu <<'EOCBU'\n# gcc 4.6 doesn't support --whole-archive, but it's required for the\n# system gcc to build correctly, so check for it\necho 'int f(void) { return 0; }' >try.c\nif ${cc:-cc} $cccdlflags -c try.c -otry.o 2>&1 &&\n   ${cc:-cc} --whole-archive $lddlflags try.o -otry.so 2>&1 ; then\n    lddlflags=\"--whole-archive $lddlflags\"\nfi\nrm try.c try.o try.so 2>/dev/null\nEOCBU\n\t\trpathflag=\"-Wl,-rpath,\"\n\t\tcase \"$osvers\" in\n\t\t1.[0-5]*)\n\t\t\t#\n\t\t\t# Include the whole libgcc.a into the perl executable\n\t\t\t# so that certain symbols needed by loadable modules\n\t\t\t# built as C++ objects (__eh_alloc, __pure_virtual,\n\t\t\t# etc.) will always be defined.\n\t\t\t#\n\t\t\tccdlflags=\"-Wl,-whole-archive -lgcc \\\n\t\t\t\t-Wl,-no-whole-archive -Wl,-E $ccdlflags\"\n\t\t\t;;\n\t\t*)\n\t\t\tccdlflags=\"-Wl,-E $ccdlflags\"\n\t\t\t;;\n\t\tesac\n\telif test -f /usr/libexec/ld.so; then\n\t\t# a.out\n\t\td_dlopen=$define\n\t\td_dlerror=$define\n\t\tcccdlflags=\"-DPIC -fPIC $cccdlflags\"\n\t\tlddlflags=\"-Bshareable $lddlflags\"\n\t\trpathflag=\"-R\"\n\telse\n\t\td_dlopen=$undef\n\t\trpathflag=\n\tfi\n\t;;\nesac\n\n# netbsd had these but they don't really work as advertised, in the\n# versions listed below.  if they are defined, then there isn't a\n# way to make perl call setuid() or setgid().  if they aren't, then\n# ($<, $>) = ($u, $u); will work (same for $(/$)).  this is because\n# you can not change the real userid of a process under 4.4BSD.\n# netbsd fixed this in 1.3.2.\ncase \"$osvers\" in\n0.9*|1.[012]*|1.3|1.3.1)\n\td_setregid=\"$undef\"\n\td_setreuid=\"$undef\"\n\t;;\nesac\ncase \"$osvers\" in\n0.8*)\n\t;;\n*)\n\td_getprotoent_r=\"$undef\"\n\td_getprotobyname_r=\"$undef\"\n\td_getprotobynumber_r=\"$undef\"\n\td_setprotoent_r=\"$undef\"\n\td_endprotoent_r=\"$undef\"\n\td_getservent_r=\"$undef\"\n\td_getservbyname_r=\"$undef\"\n\td_getservbyport_r=\"$undef\"\n\td_setservent_r=\"$undef\"\n\td_endservent_r=\"$undef\"\n\td_gethostbyname_r=\"$undef\"\n\td_gethostbyaddr2_r=\"$undef\"\n\td_gethostbyaddr_r=\"$undef\"\n\td_sethostent_r=\"$undef\"\n\td_gethostent_r=\"$undef\"\n\td_endhostent_r=\"$undef\"\n\td_getprotoent_r_proto=\"0\"\n\td_getprotobyname_r_proto=\"0\"\n\td_getprotobynumber_r_proto=\"0\"\n\td_setprotoent_r_proto=\"0\"\n\td_endprotoent_r_proto=\"0\"\n\td_getservent_r_proto=\"0\"\n\td_getservbyname_r_proto=\"0\"\n\td_getservbyport_r_proto=\"0\"\n\td_setservent_r_proto=\"0\"\n\td_endservent_r_proto=\"0\"\n\td_gethostbyname_r_proto=\"0\"\n\td_gethostbyaddr2_r_proto=\"0\"\n\td_gethostbyaddr_r_proto=\"0\"\n\td_sethostent_r_proto=\"0\"\n\td_endhostent_r_proto=\"0\"\n\td_gethostent_r_proto=\"0\"\n\t;;\nesac\n\n# These are obsolete in any netbsd.\nd_setrgid=\"$undef\"\nd_setruid=\"$undef\"\n\n# there's no problem with vfork.\nusevfork=true\n\n# This is there but in machine/ieeefp_h.\nieeefp_h=\"define\"\n\n# This script UU/usethreads.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use threads.\ncat > UU/usethreads.cbu <<'EOCBU'\ncase \"$usethreads\" in\n$define|true|[yY]*)\n\tlpthread=\n\tfor xxx in pthread; do\n\t\tfor yyy in $loclibpth $plibpth $glibpth dummy; do\n\t\t\tzzz=$yyy/lib$xxx.a\n\t\t\tif test -f \"$zzz\"; then\n\t\t\t\tlpthread=$xxx\n\t\t\t\tbreak;\n\t\t\tfi\n\t\t\tzzz=$yyy/lib$xxx.so\n\t\t\tif test -f \"$zzz\"; then\n\t\t\t\tlpthread=$xxx\n\t\t\t\tbreak;\n\t\t\tfi\n\t\t\tzzz=`ls $yyy/lib$xxx.so.* 2>/dev/null`\n\t\t\tif test \"X$zzz\" != X; then\n\t\t\t\tlpthread=$xxx\n\t\t\t\tbreak;\n\t\t\tfi\n\t\tdone\n\t\tif test \"X$lpthread\" != X; then\n\t\t\tbreak;\n\t\tfi\n\tdone\n\tif test \"X$lpthread\" != X; then\n\t\t# Add -lpthread.\n\t\tlibswanted=\"$libswanted $lpthread\"\n\t\t# There is no libc_r as of NetBSD 1.5.2, so no c -> c_r.\n\t\t# This will be revisited when NetBSD gains a native pthreads\n\t\t# implementation.\n\telse\n\t\techo \"$0: No POSIX threads library (-lpthread) found.  \" \\\n\t\t     \"You may want to install GNU pth.  Aborting.\" >&4\n\t\texit 1\n\tfi\n\tunset lpthread\n\n\t# several reentrant functions are embedded in libc, but haven't\n\t# been added to the header files yet.  Let's hold off on using\n\t# them until they are a valid part of the API\n\tcase \"$osvers\" in\n\t[012].*|3.[0-1])\n\t\td_getprotobyname_r=$undef\n\t\td_getprotobynumber_r=$undef\n\t\td_getprotoent_r=$undef\n\t\td_getservbyname_r=$undef\n\t\td_getservbyport_r=$undef\n\t\td_getservent_r=$undef\n\t\td_setprotoent_r=$undef\n\t\td_setservent_r=$undef\n\t\td_endprotoent_r=$undef\n\t\td_endservent_r=$undef ;;\n\tesac\n\t;;\n\nesac\nEOCBU\n\n# Set sensible defaults for NetBSD: look for local software in\n# /usr/pkg (NetBSD Packages Collection) and in /usr/local.\n#\nloclibpth=\"/usr/pkg/lib /usr/local/lib\"\nlocincpth=\"/usr/pkg/include /usr/local/include\"\ncase \"$rpathflag\" in\n'')\n\tldflags=\n\t;;\n*)\n\tldflags=\n\tfor yyy in $loclibpth; do\n\t\tldflags=\"$ldflags $rpathflag$yyy\"\n\tdone\n\t;;\nesac\n\ncase `uname -m` in\nalpha)\n    echo 'int main() {}' > try.c\n    gcc=`${cc:-cc} -v -c try.c 2>&1|grep 'gcc version egcs-2'`\n    case \"$gcc\" in\n    '' | \"gcc version egcs-2.95.\"[3-9]*) ;; # 2.95.3 or better okay\n    *)\tcat >&4 <<EOF\n***\n*** Your gcc ($gcc) is known to be\n*** too buggy on netbsd/alpha to compile Perl with optimization.\n*** It is suggested you install the lang/gcc package which should\n*** have at least gcc 2.95.3 which should work okay: use for example\n*** Configure -Dcc=/usr/pkg/gcc-2.95.3/bin/cc.  You could also\n*** Configure -Doptimize=-O0 to compile Perl without any optimization\n*** but that is not recommended.\n***\nEOF\n\texit 1\n\t;;\n    esac\n    rm -f try.*\n    ;;\nesac\n\n# NetBSD/sparc 1.5.3/1.6.1 dumps core in the semid_ds test of Configure.\ncase `uname -m` in\nsparc) d_semctl_semid_ds=undef ;;\nesac\n\n# malloc wrap works\ncase \"$usemallocwrap\" in\n'') usemallocwrap='define' ;;\nesac\n\n# don't use perl malloc by default\ncase \"$usemymalloc\" in\n'') usemymalloc=n ;;\nesac\n\n# NetBSD 6 defines the *at() functions in libc, but either doesn't\n# implement them, or implements them only for AT_FDCWD\ncase \"$osver\" in\n[1-6].*)\n        d_unlinkat=\"$undef\"\n        d_renameat=\"$undef\"\n        d_linkat=\"$undef\"\n        d_fchmodat=\"$undef\"\n        ;;\nesac\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/dec_osf.sh": "# hints/dec_osf.sh\n\n#\t* If you want to debug perl or want to send a\n#\tstack trace for inclusion into an bug report, call\n#\tConfigure with the additional argument  -Doptimize=-g2\n#\tor uncomment this assignment to \"optimize\":\n#\n#optimize=-g2\n#\n#\tIf you want both to optimise and debug with the DEC cc\n#\tyou must have -g3, e.g. \"-O4 -g3\", and (re)run Configure.\n#\n#\t* gcc can always have both -g and optimisation on.\n#\n#\t* debugging optimised code, no matter what compiler\n#\tone is using, can be surprising and confusing because of\n#\tthe optimisation tricks like code motion, code removal,\n#\tloop unrolling, and inlining. The source code and the\n#\texecutable code simply do not agree any more while in\n#\tmid-execution, the optimiser only cares about the results.\n#\n#\t* Configure will automatically add the often quoted\n#\t-DDEBUGGING for you if the -g is specified.\n#\n#\t* There is even more optimisation available in the new\n#\t(GEM) DEC cc: -O5 and -fast. \"man cc\" will tell more about them.\n#\tThe jury is still out whether either or neither help for Perl\n#\tand how much. Based on very quick testing, -fast boosts\n#\traw data copy by about 5-15% (-fast brings in, among other\n#\tthings, inlined, ahem, fast memcpy()), while on the other\n#\thand searching things (index, m//, s///), seems to get slower.\n#\tYour mileage will vary.\n#\n#\t* The -std is needed because the following compiled\n#\twithout the -std and linked with -lm\n#\n#\t#include <math.h>\n#\t#include <stdio.h>\n#\tint main(){short x=10,y=sqrt(x);printf(\"%d\\n\",y);}\n#\n#\twill in Digital UNIX 3.* and 4.0b print 0 -- and in Digital\n#\tUNIX 4.0{,a} dump core: Floating point exception in the printf(),\n#\tthe y has become a signaling NaN.\n#\n#\t* Compilation warnings like:\n#\n#\t\"Undefined the ANSI standard macro ...\"\n#\n#\tcan be ignored, at least while compiling the POSIX extension\n#\tand especially if using the sfio (the latter is not a standard\n#\tpart of Perl, never mind if it says little to you).\n#\n\n# If using the DEC compiler we must find out the DEC compiler style:\n# the style changed between Digital UNIX (aka DEC OSF/1) 3 and\n# Digital UNIX 4. The old compiler was originally from Ultrix and\n# the MIPS company, the new compiler is originally from the VAX world\n# and it is called GEM. Many of the options we are going to use depend\n# on the compiler style.\n\ncc=${cc:-cc}\n\n# Intentional leading tabs.\n\tmyosvers=\"`/usr/sbin/sizer -v 2>/dev/null || uname -r`\"\n\tunamer=\"`uname -r`\"\n\n# Fancy compiler suites use optimising linker as well as compiler.\n# <spider@Orb.Nashua.NH.US>\ncase \"$unamer\" in\n*[123].*)\t# old loader\n\t\tlddlflags=\"$lddlflags -O3\"\n\t\t;;\n*)            if $test \"X$optimize\" = \"X$undef\"; then\n                      lddlflags=\"$lddlflags -msym\"\n              else\n\t\t  case \"$myosvers\" in\n\t\t  *4.0D*)\n\t\t      # QAR 56761: -O4 + .so may produce broken code,\n\t\t      # fixed in 4.0E or better.\n\t\t      ;;\n\t\t  *)\n                      lddlflags=\"$lddlflags $optimize\"\n\t\t      ;;\n\t\t  esac\n\t\t  # -msym: If using a sufficiently recent /sbin/loader,\n\t\t  # keep the module symbols with the modules.\n                  lddlflags=\"$lddlflags -msym $_lddlflags_strict_ansi\"\n              fi\n\t\t;;\nesac\n# Yes, the above loses if gcc does not use the system linker.\n# If that happens, let me know about it. <jhi@iki.fi>\n\n# Because there is no other handy way to recognize 3.X.\ncase \"$unamer\" in\n*3.*)\tccflags=\"$ccflags -DDEC_OSF1_3_X\" ;;\nesac\n\ncase \"`$cc -v 2>&1 | grep cc`\" in\n*gcc*) isgcc=gcc ;;\nesac\n\n# do NOT, I repeat, *NOT* take away the leading tabs\n# Configure Black Magic (TM)\n\t# reset\n\t_DEC_cc_style=\ncase \"$isgcc\" in\ngcc)\tif [ \"X$gccversion\" = \"X\" ]; then\n\t    # Done too late in Configure if hinted\n\t    gccversion=`$cc -dumpversion`\n\tfi\n\tset $gccversion\n\tif test \"$1\" -lt 2 -o \\( \"$1\" -eq 2 -a \\( \"$2\" -lt 95 -o \\( \"$2\" -eq 95 -a \"$3\" -lt 3 \\) \\) \\); then\n\t    cat >&4 <<EOF\n\n*** Your cc seems to be gcc and its version ($gccversion) seems to be\n*** less than 2.95.3.  This is not a good idea since old versions of gcc\n*** are known to produce buggy code when compiling Perl (and no doubt for\n*** other programs, too).\n***\n*** Therefore, I strongly suggest upgrading your gcc.  (Why don't you use\n*** the vendor cc is also a good question.  It comes with the operating\n*** system, produces good code, and is very ANSI C fastidious.)\n\nCannot continue, aborting.\n\nEOF\n\t    exit 1\n\tfi\n\tif test \"$1\" -eq 2 -a \"$2\" -eq 95 -a \"$3\" -le 2; then\n\t    cat >&4 <<EOF\n\n*** Note that as of gcc 2.95.2 (19991024) and Perl 5.6.0 (March 2000)\n*** if the said Perl is compiled with the said gcc the lib/sdbm test\n*** may dump core (meaning that the SDBM_File extension is unusable).\n*** As this core dump never happens with the vendor cc, this is most\n*** probably a lingering bug in gcc.  Therefore unless you have a better\n*** gcc installation you are still better off using the vendor cc.\n\nSince you explicitly chose gcc, I assume that you know what are doing.\n\nEOF\n\tfi\n\t# -ansi is fine for gcc in Tru64 (-ansi is not universally so).\n\t_ccflags_strict_ansi=\"-ansi\"\n        ;;\n*)\t# compile something.\n\tcat >try.c <<EOF\nint main() { return 0; }\nEOF\n\tccversion=`cc -V | awk '/(Compaq|DEC) C/ {print $3}' | grep '^V'`\n\t# the main point is the '-v' flag of 'cc'.\n\tcase \"`cc -v -c try.c 2>&1`\" in\n\t*/gemc_cc*)\t# we have the new DEC GEM CC\n\t\t\t_DEC_cc_style=new\n\t\t\t;;\n\t*)\t\t# we have the old MIPS CC\n\t\t\t_DEC_cc_style=old\n\t\t\t;;\n\tesac\n\t# We need to figure out whether -c99 is a valid flag to use.\n\t# If it is, we can use it for being nauseatingly C99 ANSI --\n\t# but even then the lddlflags needs to stay -std1.\n\t# If it is not, we must use -std1 for both flags.\n\t#\n\tcase \"`cc -c99 try.c 2>&1`\" in\n\t*\"-c99: Unknown flag\"*)\n\t\t_ccflags_strict_ansi=\"-std1\"\n\t\t;;\n\t*)\t_ccflags_strict_ansi=\"-c99\"\n\t\t;;\n\tesac\n\t_lddlflags_strict_ansi=\"-std1\"\n\t# -no_ansi_alias because Perl code is not that strict\n\t# (also gcc uses by default -fno-strict-aliasing).\n\tcase \"$unamer\" in\n\t*[1234].*) ;;\n\t*5.*)\t_ccflags_strict_ansi=\"$_ccflags_strict_ansi -no_ansi_alias\" ;;\n\tesac\n\t# Cleanup.\n\trm -f try.c try.o\n\t;;\nesac\n\n# Be nauseatingly ANSI\nccflags=\"$ccflags $_ccflags_strict_ansi\"\n\n# g++ needs a lot of definitions to see the same set of\n# prototypes from <unistd.h> et alia as cxx/cc see.\n# Note that we cannot define _XOPEN_SOURCE_EXTENDED or\n# its moral equivalent, _XOPEN_SOURCE=500 (which would\n# define a lot of the required prototypes for us), because\n# the gcc-processed version of <sys/wait.h> contains fatally\n# conflicting prototypes for wait3().  The _SOCKADDR_LEN is\n# needed to get struct sockaddr and struct sockaddr_in to align.\ncase \"$cc\" in\n*g++*) ccflags=\"$ccflags -D_XOPEN_SOURCE -D_OSF_SOURCE -D_AES_SOURCE -D_BSD -D_POSIX_C_SOURCE=199309L -D_POSIX_PII_SOCKET -D_SOCKADDR_LEN\" ;;\nesac\n\n# for gcc the Configure knows about the -fpic:\n# position-independent code for dynamic loading\n\n# we want optimisation\n\ncase \"$optimize\" in\n'')\tcase \"$isgcc\" in\n\tgcc)\toptimize='-O3'\t\t\t\t;;\n\t*)\tcase \"$_DEC_cc_style\" in\n\t\tnew)\toptimize='-O4'\t\t\t;;\n\t\told)\toptimize='-O2 -Olimit 3200'\t;;\n\t\tesac\n\t\tccflags=\"$ccflags -D_INTRINSICS\"\n\t\t;;\n\tesac\n\t;;\nesac\n\ncase \"$isgcc\" in\ngcc)\t;;\n*)\tcase \"$optimize\" in\n\t*-O*)\t# With both -O and -g, the -g must be -g3.\n\t\toptimize=\"`echo $optimize | sed 's/-g[1-4]*/-g3/'`\"\n\t\t;;\n\tesac\n\t;;\nesac\n\n## Optimization limits\ncase \"$isgcc\" in\ngcc) #  gcc 3.2.1 wants a lot of memory for -O3'ing toke.c\ncat >try.c <<EOF\n#include <stdio.h>\n#include <sys/resource.h>\n\nint main ()\n{\n    struct rlimit rl;\n    int i = getrlimit (RLIMIT_DATA, &rl);\n    printf (\"%d\\n\", rl.rlim_cur / (1024 * 1024));\n    } /* main */\nEOF\n$cc -o try $ccflags $ldflags try.c\n\tmaxdsiz=`./try`\nrm -f try try.c core\nif [ $maxdsiz -lt 256 ]; then\n    # less than 256 MB is probably not enough to optimize toke.c with gcc -O3\n    cat <<EOM >&4\n\nYour process datasize is limited to $maxdsiz MB, which is (sadly) not\nalways enough to fully optimize some source code files of Perl,\nat least 256 MB seems to be necessary as of Perl 5.8.0.  I'll try to\nuse a lower optimization level for those parts.  You could either try\nusing your shell's ulimit/limit/limits command to raise your datasize\n(assuming the system-wide hard resource limits allow you to go higher),\nor if you can't go higher and if you are a sysadmin, and you *do* want\nthe full optimization, you can tune the 'max_per_proc_data_size'\nkernel parameter: see man sysconfigtab, and man sys_attrs_proc.\n\nEOM\ntoke_cflags='optimize=-O2'\n    fi\n;;\nesac\n\n# The patch 23787\n# https://github.com/Perl/perl5/commit/73cb726371990cd489597c4fee405a9815abf4da\n# broke things for gcc (at least gcc 3.3) so that many of the pack()\n# checksum tests for formats L, j, J, especially when combined\n# with the < and > specifiers, started to fail if compiled with plain -O3.\ncase \"$isgcc\" in\ngcc)\npp_pack_cflags='optimize=\"-O3 -fno-cse-skip-blocks\"'\n;;\nesac\n\n# we want dynamic fp rounding mode, and we want ieee exception semantics\ncase \"$isgcc\" in\ngcc)\tccflags=\"$ccflags -mfp-rounding-mode=d -mieee\" ;;\n*)\tcase \"$_DEC_cc_style\" in\n\tnew)\tccflags=\"$ccflags -fprm d -ieee\"\t;;\n\tesac\n\t;;\nesac\n\n# Make glibpth agree with the compiler suite.  Note that /shlib\n# is not here.  That's on purpose.  Even though that's where libc\n# really lives from V4.0 on, the linker (and /sbin/loader) won't\n# look there by default.  The sharable /sbin utilities were all\n# built with \"-Wl,-rpath,/shlib\" to get around that.  This makes\n# no attempt to figure out the additional location(s) searched by\n# gcc, since not all versions of gcc are easily coerced into\n# revealing that information.\nglibpth=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc\"\nglibpth=\"$glibpth /usr/lib /usr/local/lib /var/shlib\"\n\n# dlopen() is in libc\nlibswanted=\"`echo $libswanted | sed -e 's/ dl / /'`\"\n\n# libPW contains nothing useful for perl\nlibswanted=\"`echo $libswanted | sed -e 's/ PW / /'`\"\n\n# libnet contains nothing useful for perl here, and doesn't work\nlibswanted=\"`echo $libswanted | sed -e 's/ net / /'`\"\n\n# libbsd contains nothing used by perl that is not already in libc\nlibswanted=\"`echo $libswanted | sed -e 's/ bsd / /'`\"\n\n# libc need not be separately listed\nlibswanted=\"`echo $libswanted | sed -e 's/ c / /'`\"\n\n# ndbm is already in libc\nlibswanted=\"`echo $libswanted | sed -e 's/ ndbm / /'`\"\n\n# the basic lddlflags used always\nlddlflags='-shared -expect_unresolved \"*\"'\n\n# If debugging or (old systems and doing shared)\n# then do not strip the lib, otherwise, strip.\n# As noted above the -DDEBUGGING is added automagically by Configure if -g.\ncase \"$optimize\" in\n\t*-g*) ;; # left intentionally blank\n*)\tcase \"$unamer\" in\n\t*[123].*)\n\t\tcase \"$useshrplib\" in\n\t\tfalse|undef|'')\tlddlflags=\"$lddlflags -s\"\t;;\n\t\tesac\n\t\t;;\n        *) lddlflags=\"$lddlflags -s\"\n\t        ;;\n\tesac\n\t;;\nesac\n\n#\n# Make embedding in things like INN and Apache more memory friendly.\n# Keep it overridable on the Configure command line, though, so that\n# \"-Uuseshrplib\" prevents this default.\n#\n\ncase \"$_DEC_cc_style.$useshrplib\" in\n\tnew.)\tuseshrplib=\"$define\"\t;;\nesac\n\n# The EFF_ONLY_OK from <sys/access.h> is present but dysfunctional for\n# [RWX]_OK as of Digital UNIX 4.0[A-D]?.  If and when this gets fixed,\n# please adjust this appropriately.  See also pp_sys.c just before the\n# emulate_eaccess().\n\n# Fixed in V5.0A.\ncase \"$myosvers\" in\n*5.0[A-Z]*|*5.[1-9]*|*[6-9].[0-9]*)\n\t: ok\n\t;;\n*)\n# V5.0 or previous\npp_sys_cflags='ccflags=\"$ccflags -DNO_EFF_ONLY_OK\"'\n\t;;\nesac\n\n# The off_t is already 8 bytes, so we do have largefileness.\n\ncat > UU/usethreads.cbu <<'EOCBU'\n# This script UU/usethreads.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use threads.\ncase \"$usethreads\" in\n$define|true|[yY]*)\n\t# In Tru64 V5 (at least V5.1A, V5.1B) gcc (at least 3.2.2)\n\t# cannot be used to compile a threaded Perl.\n\tcat > pthread.c <<EOF\n#include <pthread.h>\nextern int foo;\nEOF\n\t$cc -c pthread.c 2> pthread.err\n\tif egrep -q \"unrecognized compiler|syntax error\" pthread.err; then\n\t    cat >&4 <<EOF\n***\n*** I'm sorry but your C compiler ($cc) cannot be used to\n*** compile Perl with threads.  The system C compiler should work.\n***\n\nCannot continue, aborting.\n\nEOF\n\t    rm -f pthread.*\n\t    exit 1\n\tfi\n\trm -f pthread.*\n\t# Threads interfaces changed with V4.0.\n\tcase \"$isgcc\" in\n\tgcc)\n\t    ccflags=\"-D_REENTRANT $ccflags\"\n\t    ;;\n\t*)  case \"$unamer\" in\n\t    *[123].*)\tccflags=\"-threads $ccflags\" ;;\n\t    *)          ccflags=\"-pthread $ccflags\" ;;\n\t    esac\n\t    ;;\n\tesac\n\tcase \"$unamer\" in\n\t*[123].*) libswanted=\"$libswanted pthreads mach exc c_r\" ;;\n\t*)        libswanted=\"$libswanted pthread exc\" ;;\n\tesac\n\n\tcase \"$usemymalloc\" in\n\t'')\n\t\tusemymalloc='n'\n\t\t;;\n\tesac\n\t# These symbols are renamed in <time.h> so\n\t# that the Configure hasproto doesn't see them.\n\td_asctime_r_proto=\"$define\"\n\td_ctime_r_proto=\"$define\"\n\td_gmtime_r_proto=\"$define\"\n\td_localtime_r_proto=\"$define\"\n\t;;\nesac\nEOCBU\n\n# malloc wrap works\ncase \"$usemallocwrap\" in\n'') usemallocwrap='define' ;;\nesac\n\ncat > UU/uselongdouble.cbu <<'EOCBU'\n# This script UU/uselongdouble.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use long doubles.\ncase \"$uselongdouble\" in\n$define|true|[yY]*)\n\tcase \"$myosvers\" in\n\t*[1-4].0*)\tcat >&4 <<EOF\n\n***\n*** Sorry, you cannot use long doubles in pre-V5.0 releases of Tru64.\n***\n\nCannot continue, aborting.\n\nEOF\n\t\texit 1\n\t\t;;\n\t*)\n\t\t# Test whether libc's been fixed yet for long doubles.\n\t\tcat >try.c <<\\TRY\n#include <stdio.h>\nint main(int argc, char **argv)\n{\n\tunsigned long uvmax = ~0UL;\n\tlong double ld = uvmax + 0.0L;\n\tchar buf1[30], buf2[30];\n\n\t(void) sprintf(buf1, \"%lu\", uvmax);\n\t(void) sprintf(buf2, \"%.0Lf\", ld);\n\treturn strcmp(buf1, buf2) != 0;\n}\nTRY\n\t\t# Don't bother trying to work with Configure's idea of\n\t\t# cc and the various flags.  This might not work as-is\n\t\t# with gcc -- but we're testing libc, not the compiler.\n\t\tif cc -o try $_ccflags_strict_ansi try.c && ./try\n\t\tthen\n\t\t\t: ok\n\t\telse\n\t\t\tcat <<\\UGLY >&4\n!\nWarning!  Your libc has not yet been patched so that its \"%Lf\" format for\nprinting long doubles shows all the significant digits.  You will get errors\nin the t/op/numconvert test because of this.  (The data is still good\ninternally, and the \"%e\" format of printf() or sprintf() in perl will still\nproduce valid results.)  See README.tru64 for additional details.\n\nContinuing anyway.\n!\nUGLY\n\t\tfi\n\t\t$rm -f try try.c\n\tesac\n\t;;\nesac\nEOCBU\n\ncase \"$myosvers\" in\n*[1-4].0*) d_modfl=undef ;; # must wait till 5.0\nesac\n\n# Keep that leading tab.\n\told_LD_LIBRARY_PATH=$LD_LIBRARY_PATH\nfor p in $loclibpth\ndo\n\tif test -d $p; then\n\t    echo \"Appending $p to LD_LIBRARY_PATH.\" >& 4\n\t    case \"$LD_LIBRARY_PATH\" in\n\t    '') LD_LIBRARY_PATH=$p                  ;;\n\t    *)  LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$p ;;\n\t    esac\n\tfi\ndone\ncase \"$LD_LIBRARY_PATH\" in\n\"$old_LD_LIBRARY_PATH\") ;;\n*) echo \"LD_LIBRARY_PATH is now $LD_LIBRARY_PATH.\" >& 4 ;;\nesac\ncase \"$LD_LIBRARY_PATH\" in\n'') ;;\n* ) export LD_LIBRARY_PATH ;;\nesac\n\n# Enforce strict data.\ncase \"$isgcc\" in\ngcc)   ;;\n*)     # -trapuv poisons uninitialized stack with\n       #  0xfff58005fff58005 which is as a pointer a segmentation fault and\n       #  as a floating point a signaling NaN.  As integers/longs that causes\n       #  no traps but at least it is not zero.\n       # -readonly_strings moves string constants into read-only section\n       #  which hopefully means that modifying them leads into segmentation\n       #  faults.\n       for i in -trapuv -readonly_strings\n       do\n               case \"$ccflags\" in\n               *$i*) ;;\n               *) ccflags=\"$ccflags $i\" ;;\n               esac\n       done\n       ;;\nesac\n\n# In Tru64 several slightly incompatible socket APIs are supported,\n# which one applies is chosen with a set of defines:\n# -D_SOCKADDR_LEN enables 4.4BSD and IPv6 interfaces\n# -D_POSIX_PII_SOCKET enables socklen_t instead of size_t\nfor i in -D_SOCKADDR_LEN -D_POSIX_PII_SOCKET\ndo\n    case \"$ccflags\" in\n    *$i*) ;;\n    *) ccflags=\"$ccflags $i\" ;;\n    esac\ndone\n# For OSF/1 3.2, however, defining _SOCKADDR_LEN would be\n# a bad idea since it breaks send() and recv().\ncase \"$ccflags\" in\n*DEC_OSF1_3_X*SOCKADDR_LEN*)\n ccflags=`echo \" $ccflags \" | sed -e 's/ -D_SOCKADDR_LEN / /'`\n ;;\nesac\n\n# These are in libm, but seem broken (there are no protos in headers,\n# or man pages, either)\nd_fdim='undef'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_llrint='undef'\nd_llround='undef'\nd_lrint='undef'\nd_lround='undef'\nd_nan='undef'\nd_nearbyint='undef'\nd_round='undef'\nd_scalbn='undef'\nd_tgamma='undef'\n\n#\n# Unset temporary variables no more needed.\n#\n\nunset _DEC_cc_style\n\n#\n# History:\n#\n# perl5.005_51:\n#\n#\tSeptember-1998 Jarkko Hietaniemi <jhi@iki.fi>\n#\n#\t* Added the -DNO_EFF_ONLY_OK flag ('use filetest;' support).\n#\n# perl5.004_57:\n#\n#\t19-Dec-1997 Spider Boardman <spider@Orb.Nashua.NH.US>\n#\n#\t* Newer Digital UNIX compilers enforce signaling for NaN without\n#\t  -ieee.  Added -fprm d at the same time since it's friendlier for\n#\t  embedding.\n#\n#\t* Fixed the library search path to match cc, ld, and /sbin/loader.\n#\n#\t* Default to building -Duseshrplib on newer systems.  -Uuseshrplib\n#\t  still overrides.\n#\n#\t* Fix -pthread additions for useshrplib.  ld has no -pthread option.\n#\n#\n# perl5.004_04:\n#\n#       19-Sep-1997 Spider Boardman <spider@Orb.Nashua.NH.US>\n#\n#\t* libnet on Digital UNIX is for JAVA, not for sockets.\n#\n#\n# perl5.003_28:\n#\n#       22-Feb-1997 Jarkko Hietaniemi <jhi@iki.fi>\n#\n#\t* Restructuring Spider's suggestions.\n#\n#\t* Older Digital UNIXes cannot handle -Olimit ... for $lddlflags.\n#\n#\t* ld -s cannot be used in older Digital UNIXes when doing shared.\n#\n#\n#       21-Feb-1997 Spider Boardman <spider@Orb.Nashua.NH.US>\n#\n#\t* -hidden removed.\n#\n#\t* -DSTANDARD_C removed.\n#\n#\t* -D_INTRINSICS added. (that -fast does not seem to buy much confirmed)\n#\n#\t* odbm not in libc, only ndbm. Therefore dbm back to $libswanted.\n#\n#\t* -msym for the newer runtime loaders.\n#\n#\t* $optimize also in $lddflags.\n#\n#\n# perl5.003_27:\n#\n#\t18-Feb-1997 Jarkko Hietaniemi <jhi@iki.fi>\n#\n#\t* unset _DEC_cc_style and more commentary on -std.\n#\n#\n# perl5.003_26:\n#\n#\t15-Feb-1997 Jarkko Hietaniemi <jhi@iki.fi>\n#\n#\t* -std and -ansi.\n#\n#\n# perl5.003_24:\n#\n#\t30-Jan-1997 Jarkko Hietaniemi <jhi@iki.fi>\n#\n#\t* Fixing the note on -DDEBUGGING.\n#\n#\t* Note on -O5 -fast.\n#\n#\n# perl5.003_23:\n#\n#\t26-Jan-1997 Jarkko Hietaniemi <jhi@iki.fi>\n#\n#\t* Notes on how to do both optimisation and debugging.\n#\n#\n#\t25-Jan-1997 Jarkko Hietaniemi <jhi@iki.fi>\n#\n#\t* Remove unneeded libraries from $libswanted: PW, bsd, c, dbm\n#\n#\t* Restructure the $lddlflags build.\n#\n#\t* $optimize based on which compiler we have.\n#\n#\n# perl5.003_22:\n#\n#\t23-Jan-1997 Achim Bohnet <ach@rosat.mpe-garching.mpg.de>\n#\n#\t* Added comments 'how to create a debugging version of perl'\n#\n#\t* Fixed logic of this script to prevent stripping of shared\n#         objects by the loader (see ld man page for -s) is debugging\n#         is set via the -g switch.\n#\n#\n#\t21-Jan-1997 Achim Bohnet <ach@rosat.mpe-garching.mpg.de>\n#\n#\t* now 'dl' is always removed from libswanted. Not only if\n#\t  optimize is an empty string.\n#\n#\n#\t17-Jan-1997 Achim Bohnet <ach@rosat.mpe-garching.mpg.de>\n#\n#\t* Removed 'dl' from libswanted: When the FreePort binary\n#\t  translator for Sun binaries is installed Configure concludes\n#\t  that it should use libdl.x.yz.fpx.so :-(\n#\t  Because the dlopen, dlclose,... calls are in the\n#\t  C library it not necessary at all to check for the\n#\t  dl library.  Therefore dl is removed from libswanted.\n#\n#\n#\t1-Jan-1997 Achim Bohnet <ach@rosat.mpe-garching.mpg.de>\n#\n#\t* Set -Olimit to 3200 because perl_yylex.c got too big\n#\t  for the optimizer.\n#\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/minix.sh": "# hints/minix.sh\n#\n# Please check with packages@netbsd.org before making modifications\n# to this file.\n\ncase \"$archname\" in\n'')\n    archname=`uname -m`-${osname}\n    ;;\nesac\n\n# NetBSD keeps dynamic loading dl*() functions in /usr/lib/crt0.o,\n# so Configure doesn't find them (unless you abandon the nm scan).\n#\ncase \"$osvers\" in\n*)\n\tif test -f /usr/libexec/ld.elf_so; then\n\t\t# ELF\n\t\td_dlopen=$define\n\t\td_dlerror=$define\n\t\tcccdlflags=\"-DPIC -fPIC $cccdlflags\"\n\t\tlddlflags=\"-shared $lddlflags\"\n\t\trpathflag=\"-Wl,-rpath,\"\n\t\tccdlflags=\"-Wl,-E $ccdlflags\"\n\telif test -f /usr/libexec/ld.so; then\n\t\t# a.out\n\t\td_dlopen=$define\n\t\td_dlerror=$define\n\t\tcccdlflags=\"-DPIC -fPIC $cccdlflags\"\n\t\tlddlflags=\"-Bshareable $lddlflags\"\n\t\trpathflag=\"-R\"\n\telse\n\t\td_dlopen=$undef\n\t\trpathflag=\n\tfi\n\td_getprotoent_r=\"$undef\"\n\td_getprotobyname_r=\"$undef\"\n\td_getprotobynumber_r=\"$undef\"\n\td_setprotoent_r=\"$undef\"\n\td_endprotoent_r=\"$undef\"\n\td_getservent_r=\"$undef\"\n\td_getservbyname_r=\"$undef\"\n\td_getservbyport_r=\"$undef\"\n\td_setservent_r=\"$undef\"\n\td_endservent_r=\"$undef\"\n\td_gethostbyname_r=\"$undef\"\n\td_gethostbyaddr2_r=\"$undef\"\n\td_gethostbyaddr_r=\"$undef\"\n\td_sethostent_r=\"$undef\"\n\td_gethostent_r=\"$undef\"\n\td_endhostent_r=\"$undef\"\n\td_getprotoent_r_proto=\"0\"\n\td_getprotobyname_r_proto=\"0\"\n\td_getprotobynumber_r_proto=\"0\"\n\td_setprotoent_r_proto=\"0\"\n\td_endprotoent_r_proto=\"0\"\n\td_getservent_r_proto=\"0\"\n\td_getservbyname_r_proto=\"0\"\n\td_getservbyport_r_proto=\"0\"\n\td_setservent_r_proto=\"0\"\n\td_endservent_r_proto=\"0\"\n\td_gethostbyname_r_proto=\"0\"\n\td_gethostbyaddr2_r_proto=\"0\"\n\td_gethostbyaddr_r_proto=\"0\"\n\td_sethostent_r_proto=\"0\"\n\td_endhostent_r_proto=\"0\"\n\td_gethostent_r_proto=\"0\"\n\t;;\nesac\n\n# there's no problem with vfork.\nusevfork=true\n\n# This is there but in machine/ieeefp_h.\nieeefp_h=\"define\"\n\n# This script UU/usethreads.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use threads.\ncat > UU/usethreads.cbu <<'EOCBU'\ncase \"$usethreads\" in\n$define|true|[yY]*)\n\tlpthread=\n\tfor xxx in pthread; do\n\t\tfor yyy in $loclibpth $plibpth $glibpth dummy; do\n\t\t\tzzz=$yyy/lib$xxx.a\n\t\t\tif test -f \"$zzz\"; then\n\t\t\t\tlpthread=$xxx\n\t\t\t\tbreak;\n\t\t\tfi\n\t\t\tzzz=$yyy/lib$xxx.so\n\t\t\tif test -f \"$zzz\"; then\n\t\t\t\tlpthread=$xxx\n\t\t\t\tbreak;\n\t\t\tfi\n\t\t\tzzz=`ls $yyy/lib$xxx.so.* 2>/dev/null`\n\t\t\tif test \"X$zzz\" != X; then\n\t\t\t\tlpthread=$xxx\n\t\t\t\tbreak;\n\t\t\tfi\n\t\tdone\n\t\tif test \"X$lpthread\" != X; then\n\t\t\tbreak;\n\t\tfi\n\tdone\n\tif test \"X$lpthread\" != X; then\n\t\t# Add -lpthread.\n\t\tlibswanted=\"$libswanted $lpthread\"\n\t\t# There is no libc_r as of NetBSD 1.5.2, so no c -> c_r.\n\t\t# This will be revisited when NetBSD gains a native pthreads\n\t\t# implementation.\n\telse\n\t\techo \"$0: No POSIX threads library (-lpthread) found.  \" \\\n\t\t     \"You may want to install GNU pth.  Aborting.\" >&4\n\t\texit 1\n\tfi\n\tunset lpthread\nesac\nEOCBU\n\n# Set sensible defaults for Minix: look for local software in\n# /usr/local, plus the build prefix, which might or might not be\n# /usr/pkg.\n#\nloclibpth=\"/usr/local/lib ${prefix}/lib\"\nlocincpth=\"/usr/local/include ${prefix}/include\"\n\ncase \"$rpathflag\" in\n'')\n\tldflags=\n\t;;\n*)\n\tldflags=\n\tfor yyy in $loclibpth; do\n\t\tldflags=\"$ldflags $rpathflag$yyy\"\n\tdone\n\t;;\nesac\n\n# malloc wrap works\ncase \"$usemallocwrap\" in\n'') usemallocwrap='define' ;;\nesac\n\n# don't use perl malloc by default\ncase \"$usemymalloc\" in\n'') usemymalloc=n ;;\nesac\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/vos.sh": "# This is a hints file for Stratus OpenVOS, using the POSIX environment\n# found in VOS 17.1.0 and higher.\n#\n# OpenVOS POSIX is based on POSIX.1-1996 and contains elements of\n# POSIX.1-2001.  It ships with gcc as the standard compiler.\n#\n# Paul Green (Paul.Green@stratus.com)\n\n# C compiler and default options.\ncc=${CC-gcc}\nccflags=${CFLAGS-\"-D_XOPEN_SOURCE=700 -D_SYSV -D_VOS_EXTENDED_NAMES -D_FILE_OFFSET_BITS=64\"}\n\n# Make command.\nmake=${MAKE-\"/system/gnu_library/bin/gmake\"}\n# indented to not put it into config.sh\n  _make=${MAKE-\"/system/gnu_library/bin/gmake\"}\n\n# Check for the minimum acceptable release of OpenVOS (17.1.0).\nif test `uname -r | sed -e 's/OpenVOS Release //' -e 's/VOS Release //'` \\< \"17.1.0\"; then\ncat >&4 <<EOF\n***\n*** This version of Perl 5 must be built on OpenVOS Release 17.1.0 or later.\n***\nEOF\nexit 1\nfi\n\n# Architecture name always X86\narchname=`uname -m`\n\n# Executable suffix.\n# No, this is not a typo.  The \".pm\" really is the native\n# executable suffix in VOS.  Talk about cosmic resonance.\n_exe=\".pm\"\n\n# Object library paths.\nloclibpth=\"$loclibpth /system/posix_object_library\"\nloclibpth=\"$loclibpth /system/c_object_library\"\nloclibpth=\"$loclibpth /system/object_library\"\nglibpth=\"$loclibpth\"\n\n# Include library paths\nlocincpth=\"\"\nusrinc=${USRINC-\"/system/include_library\"}\n\n# Where to install perl5.\nprefix=/system/ported\n\n# Linker is gcc.\nld=${CC-\"gcc\"}\n\n# Don't use nm. The VOS copy of libc.a is empty.\nusenm=\"n\"\n\n# Don't use malloc that comes with perl.\nusemymalloc=\"n\"\n\n# Make bison the default compiler-compiler.\nyacc=\"/system/gnu_library/bin/bison\"\n\n# VOS doesn't need a pager, but perl does.\npager=\"/system/gnu_library/bin/less.pm\"\n\n# VOS has a bug that causes _exit() to flush all files.\n# This confuses the tests.  Make 'em happy here.\nfflushNULL=define\n\n# VOS has a link() function but it is a dummy.\nd_link=\"undef\"\n\n# VOS does not have truncate() but we supply one in vos.c\nd_truncate=\"define\"\narchobjs=\"vos.o\"\n\n# Help gmake find vos.c\ntest -h vos.c || ln -s vos/vos.c vos.c\n\n# Tell Configure where to find the hosts file.\nhostcat=\"cat /system/stcp/hosts\"\n\n# VOS 17.1 has support for dynamic linking.\nusedl=\"define\"\n\n# Filename suffix for shared libraries.\nso=\"so\"\n\n# Flags used when compiling a module for a shared library.\ncccdlflags=\"-fPIC\"\n\n# Flags passed to $ld to produce shared libraries.\nlddlflags=\"-shared\"\n\n# Flags passed to $cc when linking a program that uses shared libraries.\nccdlflags=\"-Wl,-export-dynamic\"\n\n# Filename suffix for dynamically-loaded perl modules.\ndlext=\"so\"\n\n# Use dlopen() to open shared libraries.\ndlsrc=\"dl_dlopen.xs\"\n\n# Build a shared libperl?  (Define on Configure cmd line.)\n# useshrplib=\"true\"\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/sco.sh": "# sco.sh\n# Courtesy of Joel Rosi-Schwartz <j.schwartz@agonet.it>\n###############################################################\n# Additional SCO version info from\n# Peter Wolfe\t<wolfe@teloseng.com>\n# Fri Jul 19 14:54:25 EDT 1996\n# and again Tue Sep 29 16:37:25 EDT 1998\n# by Andy Dougherty  <doughera@lafayette.edu>\n# Mostly rewritten on\n# Tue Jan 19 23:00:00 CET 1999\n# by Francois Desarmenien <desar@club-internet.fr>\n# Modified by Boyd Gerber <gerberb@zenez.com>\n# Tue Sep 21 1999\n###############################################################\n#\n# To use cc,  use   sh Configure\n# To use gcc, use   sh Configure -Dcc=gcc\n#\n# Default on 3.2v4 is to use static link (dynamic loading unsupported).\n# Default on 3.2v5 is to use dynamic loading.\n# To use static linkink instead, use to sh Configure -Dusedl=n\n#\n# Warning: - to use dynamic loading with gcc, you need gcc 2.8.0 or later\n# ******** - to compile with older releases of gcc, use Configure -Dusedl=n\n#            or it wont compile properly\n#\n###############################################################\n# NOTES:\n# -----\n#\n# I Have removed inclusion of ODBM_File for OSR5\n# because it core dumps and make tests fails.\n#\n# Support for icc compiler has been removed, because it 'breaks'\n# a lot of code :-(\n#\n# It's *always* a good idea to first make a static link to be sure to\n# have all symbols resolved with the current choice of libraries, since\n# with dynamic linking, unresolved symbols are allowed an will be detected\n# only at runtime (when you try to load the module or worse, when you call\n# the symbol)\n#\n# The best choice of compiler on OSR 5 (3.2v5.*) seems to be gcc >= 2.8.0:\n# -You cannot optimize with genuine sco cc (miniperl core dumps),\n#  so Perl is faster if compiled with gcc.\n# -Even optimized for speed, gcc generated code is smaller (!!!)\n# -gcc is free\n# -I use ld to link which is distributed with the core OS distribution, so you\n#  don't need to buy the development kit, just find someone kind enough to\n#  give you a binary release of gcc.\n#\n#\n\n###############################################################\n# figure out what SCO version we are. The output of uname -X is\n# something like:\n#\tSystem = SCO_SV\n#\tNode = xxxxx\n#\tRelease = 3.2v5.0.0\n#\tKernelID = 95/08/08\n#   Machine = Pentium\n#\tBusType = ISA\n#\tSerial = xxxxx\n#\tUsers = 5-user\n#\tOEM# = 0\n#\tOrigin# = 1\n#   NumCPU = 1\n\n# Use /bin/uname (because GNU uname may be first in $PATH and\n# it does not support -X) to figure out what SCO version we are:\n# Matching '^Release' is broken by locale setting:\n# matching '3.2v' should be enough -- FD\ncase `/bin/uname -X | egrep '3\\.2v'` in\n*3.2v4.*) scorls=3 ;;   # OSR 3\n*3.2v5.*) scorls=5 ;;   # OSR 5\n*)\n   # Future of SCO OSR is SCO UnixWare: there should not be new OSR releases\n   echo \"************************************************************\" >&4\n   echo \"\u0007\" >&4\n   echo \"  sco.sh hints file only supports:\" >&4\n   echo \"\u0007\" >&4\n   echo \"    - SCO Unix 3.2v4.x (OSR 3)\" >&4\n   echo \"    - SCO Unix 3.2v5.x (OSR 5)\" >&4\n   echo \"\u0007\" >&4\n   echo \"\u0007\" >&4\n   echo \"  For UnixWare, use svr4.sh hints instead\" >&4\n   echo \"  For UnixWare 7.*, use svr5.sh hints instead\" >&4\n   echo \"\u0007\" >&4\n   echo \"***********************************************************\" >&4\n   exit\n;;\nesac\n\n###############################################################\n# Common fixes for all compilers an releases:\n\n###############################################################\n# What is true for SCO5 is true for SCO3 too today, so let's have a single\n# symbol for both\nccflags=\"-U M_XENIX -D PERL_SCO\"\n\n###############################################################\n# Compilers options section:\nif test \"$scorls\" = \"3\"\nthen \n    dlext=''\n    case \"$cc\" in\n        *gcc*)  optimize='-O2' ;;\n        *)      ccflags=\"$ccflags -W0 -quiet\"\n                optimize='-O' ;;\n    esac\nelse\n    ###############################################################\n    # Need this in release 5 because of changed fpu exception rules\n    ccflags=\"$ccflags -D HAS_FPSETMASK\"\n\n    ###############################################################\n    # In Release 5, always compile ELF objects\n    case \"$cc\" in\n        *gcc*)\n            ccflags=\"$ccflags -melf\"\n            optimize='-O2'\n        ;;\n        *)\n            ccflags=\"$ccflags -w0 -belf\"\n            optimize='-O0'\n        ;;\n    esac\n    ###############################################################\n    # Dynamic loading section:\n    #\n    # We use ld to build shared libraries as it is always available\n    # and seems to work better than GNU's one on SCO\n    #\n    # ccdlflags : must tell the linker to export all global symbols\n    # cccdlflags: must tell the compiler to generate relocatable code\n    # lddlflags : must tell the linker to output a shared library\n    #\n    # /usr/local/lib is added for convenience, since 'foreign' libraries\n    # are usually put there in sco\n    #\n    if test \"$usedl\" != \"n\"; then\n        ld='ld'\n        case \"$cc\" in\n            *gcc*)\n                ccdlflags='-Xlinker -Bexport -L/usr/local/lib'\n                cccdlflags='-fpic'\n                lddlflags='-G -L/usr/local/lib'\n            ;;\n            *)\n                ccdlflags='-Wl,-Bexport -L/usr/local/lib'\n                cccdlflags='-Kpic'\n                lddlflags='-G -L/usr/local/lib'\n            ;;\n        esac\n\n        ###############################################################\n        # Use dynamic loading\n        usedl='define'\n        dlext='so'\n        dlsrc='dl_dlopen.xs'\n\n        ###############################################################\n        # Force to define those symbols, as they are #defines and not\n        # caught by Configure, and they are useful\n        d_dlopen='define'\n        d_dlerror='define'\n    fi\nfi\n\n\n###############################################################\n# Various hints, common to all releases, to have it work better:\n\n###############################################################\n# We need to remove libdl, as libdl.so exists, but ld complains\n# it can't find libdl.a ! Bug or feature ? :-)\nlibswanted=`echo \" $libswanted \" | sed -e 's/ dl / /'`\nset X $libswanted\nshift\nlibswanted=\"$*\"\n\n###############################################################\n# Remove libbind because it conflicts with libsocket.\nlibswanted=`echo \" $libswanted \" | sed -e 's/ bind / /'`\nset X $libswanted\nshift\nlibswanted=\"$*\"\n\n###############################################################\n# Try to use libintl.a since it has strcoll and strxfrm\nlibswanted=\"intl $libswanted\"\n\n###############################################################\n# Try to use libdbm.nfs.a since it has dbmclose.\nif test -f /usr/lib/libdbm.nfs.a ; then\n    libswanted=`echo \"dbm.nfs $libswanted \" | sed -e 's/ dbm / /'`\n    set X $libswanted\n    shift\n    libswanted=\"$*\"\nfi\n\n###############################################################\n# At least for ORS5.0.2, prefer sprintf() over gcvt(), since gcvt()\n# used to cause a SIGFPE and a core dump when passed a NaN.\n# This may not be an issue in perl-5.8.x and later since we\n# try to trap SIGFPE.  However, preferring sprintf() should be\n# safe anyway, so let's go ahead and set it.  See the bugs database\n# item [perl #3100].   --A.D. 12/2004.\n\tgconvert_preference='sprintf'\n\n###############################################################\n# We disable ODBM_File if OSR5 because it's mostly broken\n# but keep it for ODT3 as it seems to work.\nif test \"$scorls\" = \"5\"; then\n    i_dbm='undef'\nfi\n\n###############################################################\n# We don't want Xenix cross-development libraries\nglibpth=`echo $glibpth | sed -e 's! /usr/lib/386 ! !' -e 's! /lib/386 ! !'`\nxlibpth=''\n\n###############################################################\n# I have received one report that nm extraction doesn't work if you're\n# using the scocc compiler.  This system had the following 'myconfig'\n# uname='xxx xxx 3.2 2 i386 '\n# cc='scocc', optimize='-O'\n# You can override this with Configure -Dusenm.\ncase \"$usenm\" in\n'') usenm='false' ;;\nesac\n\n###############################################################\n# If you want to use nm, you'll probably have to use nm -p.  The\n# following does that for you:\nnm_opt='-p'\n\n###############################################################\n# I have received one report that you can't include utime.h in\n# pp_sys.c.  Uncomment the following line if that happens to you:\n# i_utime=undef\n\n###############################################################\n# Perl 5.003_05 and later try to include both <time.h> and <sys/select.h>\n# in pp_sys.c, but that fails due to a redefinition of struct timeval.\ni_sysselct=$undef\n\n\n###############################################################\n#END of hint file\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/bitrig.sh": "# hints/openbsd.sh\n#\n# hints file for OpenBSD; Todd Miller <millert@openbsd.org>\n# Edited to allow Configure command-line overrides by\n#  Andy Dougherty <doughera@lafayette.edu>\n#\n# To build with distribution paths, use:\n#\t./Configure -des -Dopenbsd_distribution=defined\n#\n\n# OpenBSD has a better malloc than perl...\ntest \"$usemymalloc\" || usemymalloc='n'\n\n# Currently, vfork(2) is not a real win over fork(2).\nusevfork=\"$undef\"\n\n#\n# Not all platforms support dynamic loading...\n# For the case of \"$openbsd_distribution\", the hints file\n# needs to know whether we are using dynamic loading so that\n# it can set the libperl name appropriately.\n# Allow command line overrides.\n#\n#ARCH=`arch | sed 's/^OpenBSD.//'`\nARCH=`arch | sed 's/^Bitrig.//'`\ncase \"${ARCH}-${osvers}\" in\n*)\n\ttest -z \"$usedl\" && usedl=$define\n\t# We use -fPIC here because -fpic is *NOT* enough for some of the\n\t# extensions like Tk on some OpenBSD platforms (ie: sparc)\n\tcccdlflags=\"-DPIC -fPIC $cccdlflags\"\n\tcase \"$osvers\" in\n\t*) # from 3.1 onwards\n\t\tld=${cc:-cc}\n\t\tlddlflags=\"-shared -fPIC $lddlflags\"\n\t\tlibswanted=`echo $libswanted | sed 's/ dl / /'`\n\t\t;;\n\tesac\n\n\t# We need to force ld to export symbols on ELF platforms.\n\t# Without this, dlopen() is crippled.\n\tELF=`${cc:-cc} -dM -E - </dev/null | grep __ELF__`\n\ttest -n \"$ELF\" && ldflags=\"-Wl,-E $ldflags\"\n\t;;\nesac\n\n# malloc wrap causes problems on m68k\nif [ X\"$usemallocwrap\" = X\"\" ]; then\n\tcase \"${ARCH}\" in\n\t*)    usemallocwrap=\"define\" ;;\n\tesac\nfi\n\n# OpenBSD doesn't need libcrypt but many folks keep a stub lib\n# around for old NetBSD binaries.\nlibswanted=`echo $libswanted | sed 's/ crypt / /'`\n\n# Configure can't figure this out non-interactively\nd_suidsafe=$define\n\n# cc is gcc so we can do better than -O\n# Allow a command-line override, such as -Doptimize=-g\ncase \"${ARCH}-${osvers}\" in\n*)\n   test \"$optimize\" || optimize='-O2'\n   ;;\nesac\n\n# This script UU/usethreads.cbu will get 'called-back' by Configure \n# after it has prompted the user for whether to use threads.\ncat > UU/usethreads.cbu <<'EOCBU'\ncase \"$usethreads\" in\n$define|true|[yY]*)\n\t# any openbsd version dependencies with pthreads?\n\tccflags=\"-pthread $ccflags\"\n\tldflags=\"-pthread $ldflags\"\nesac\nEOCBU\n\n# When building in the OpenBSD tree we use different paths\n# This is only part of the story, the rest comes from config.over\ncase \"$openbsd_distribution\" in\n''|$undef|false) ;;\n*)\n\t# We put things in /usr, not /usr/local\n\tprefix='/usr'\n\tprefixexp='/usr'\n\tsysman='/usr/share/man/man1'\n\tlibpth='/usr/lib'\n\tglibpth='/usr/lib'\n\t# Local things, however, do go in /usr/local\n\tsiteprefix='/usr/local'\n\tsiteprefixexp='/usr/local'\n\t# Ports installs non-std libs in /usr/local/lib so look there too\n\tlocincpth='/usr/local/include'\n\tloclibpth='/usr/local/lib'\n\t# Link perl with shared libperl\n\tif [ \"$usedl\" = \"$define\" -a -r $src/shlib_version ]; then\n\t\tuseshrplib=true\n\t\tlibperl=`. $src/shlib_version; echo libperl.so.${major}.${minor}`\n\tfi\n\t;;\nesac\n\n# end\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/darwin.sh": "##\n# Darwin (Mac OS) hints\n# Wilfredo Sanchez <wsanchez@wsanchez.net>\n##\n\n##\n# Paths\n##\n\n# Configure hasn't figured out the version number yet.  Bummer.\nperl_revision=`awk '/define[ \t]+PERL_REVISION/ {print $3}' $src/patchlevel.h`\nperl_version=`awk '/define[ \t]+PERL_VERSION/ {print $3}' $src/patchlevel.h`\nperl_subversion=`awk '/define[ \t]+PERL_SUBVERSION/ {print $3}' $src/patchlevel.h`\nversion=\"${perl_revision}.${perl_version}.${perl_subversion}\"\n\n# Pretend that Darwin doesn't know about those system calls in Tiger\n# (10.4/darwin 8) and earlier [perl #24122]\ncase \"$osvers\" in\n[1-8].*)\n    d_setregid='undef'\n    d_setreuid='undef'\n    d_setrgid='undef'\n    d_setruid='undef'\n    ;;\nesac\n\n# finite() deprecated in 10.9, use isfinite() instead.\ncase \"$osvers\" in\n[1-8].*) ;;\n*) d_finite='undef' ;;\nesac\n\n# This was previously used in all but causes three cases\n# (no -Ddprefix=, -Dprefix=/usr, -Dprefix=/some/thing/else)\n# but that caused too much grief.\n# vendorlib=\"/System/Library/Perl/${version}\"; # Apple-supplied modules\n\ncase \"$darwin_distribution\" in\n$define) # We are building/replacing the built-in perl\n\tprefix='/usr';\n\tinstallprefix='/usr';\n\tbin='/usr/bin';\n\tsiteprefix='/usr/local';\n\t# We don't want /usr/bin/HEAD issues.\n\tsitebin='/usr/local/bin';\n\tsitescript='/usr/local/bin';\n\tinstallusrbinperl='define'; # You knew what you were doing.\n\tprivlib=\"/System/Library/Perl/${version}\";\n\tsitelib=\"/Library/Perl/${version}\";\n\tvendorprefix='/';\n\tusevendorprefix='define';\n\tvendorbin='/usr/bin';\n\tvendorscript='/usr/bin';\n\tvendorlib=\"/Network/Library/Perl/${version}\";\n\t# 4BSD uses ${prefix}/share/man, not ${prefix}/man.\n\tman1dir='/usr/share/man/man1';\n\tman3dir='/usr/share/man/man3';\n\t# But users' installs shouldn't touch the system man pages.\n\t# Transient obsoleted style.\n\tsiteman1='/usr/local/share/man/man1';\n\tsiteman3='/usr/local/share/man/man3';\n\t# New style.\n\tsiteman1dir='/usr/local/share/man/man1';\n\tsiteman3dir='/usr/local/share/man/man3';\n\t;;\nesac\n\n##\n# Tool chain settings\n##\n\n# Since we can build fat, the archname doesn't need the processor type\narchname='darwin';\n\n# nm isn't known to work after Snow Leopard and XCode 4; testing with OS X 10.5\n# and Xcode 3 shows a working nm, but pretending it doesn't work produces no\n# problems.\nusenm='false';\n\ncase \"$optimize\" in\n'')\n#    Optimizing for size also mean less resident memory usage on the part\n# of Perl.  Apple asserts that this is a more important optimization than\n# saving on CPU cycles.  Given that memory speed has not increased at\n# pace with CPU speed over time (on any platform), this is probably a\n# reasonable assertion.\nif [ -z \"${optimize}\" ]; then\n  case \"`${cc:-gcc} -v 2>&1`\" in\n    *\"gcc version 3.\"*) optimize='-Os' ;;\n    *) optimize='-O3' ;;\n  esac\nelse\n  optimize='-O3'\nfi\n;;\nesac\n\n# -fno-common because common symbols are not allowed in MH_DYLIB\n# -DPERL_DARWIN: apparently the __APPLE__ is not sanctioned by Apple\n# as the way to differentiate Mac OS X.  (The official line is that\n# *no* cpp symbol does differentiate Mac OS X.)\nccflags=\"${ccflags} -fno-common -DPERL_DARWIN\"\n\n# At least on Darwin 1.3.x:\n#\n# # define INT32_MIN -2147483648\n# int main () {\n#  double a = INT32_MIN;\n#  printf (\"INT32_MIN=%g\\n\", a);\n#  return 0;\n# }\n# will output:\n# INT32_MIN=2.14748e+09\n# Note that the INT32_MIN has become positive.\n# INT32_MIN is set in /usr/include/stdint.h by:\n# #define INT32_MIN        -2147483648\n# which seems to break the gcc.  Defining INT32_MIN as (-2147483647-1)\n# seems to work.  INT64_MIN seems to be similarly broken.\n# -- Nicholas Clark, Ken Williams, and Edward Moy\n#\n# This seems to have been fixed since at least Mac OS X 10.1.3,\n# stdint.h defining INT32_MIN as (-INT32_MAX-1)\n# -- Edward Moy\n#\nif test -f /usr/include/stdint.h; then\n  case \"$(grep '^#define INT32_MIN' /usr/include/stdint.h)\" in\n  *-2147483648) ccflags=\"${ccflags} -DINT32_MIN_BROKEN -DINT64_MIN_BROKEN\" ;;\n  esac\nfi\n\n# Avoid Apple's cpp precompiler, better for extensions\nif [ \"X`echo | ${cc} -no-cpp-precomp -E - 2>&1 >/dev/null`\" = \"X\" ]; then\n    cppflags=\"${cppflags} -no-cpp-precomp\"\n\n    # This is necessary because perl's build system doesn't\n    # apply cppflags to cc compile lines as it should.\n    ccflags=\"${ccflags} ${cppflags}\"\nfi\n\n# Known optimizer problems.\ncase \"`cc -v 2>&1`\" in\n  *\"3.1 20020105\"*) toke_cflags='optimize=\"\"' ;;\nesac\n\n# Shared library extension is .dylib.\n# Bundle extension is .bundle.\nso='dylib';\ndlext='bundle';\nusedl='define';\n\n# 10.4 can use dlopen.\n# 10.4 broke poll().\ncase \"$osvers\" in\n[1-7].*)\n    dlsrc='dl_dyld.xs';\n    ;;\n*)\n    dlsrc='dl_dlopen.xs';\n    d_poll='undef';\n    i_poll='undef';\n    ;;\nesac\n\ncase \"$ccdlflags\" in\t\t# If passed in from command line, presume user knows best\n'')\n   cccdlflags=' '; # space, not empty, because otherwise we get -fpic\n;;\nesac\n\n# Allow the user to override ld, but modify it as necessary below\ncase \"$ld\" in\n    '') case \"$cc\" in\n        # If the cc is explicitly something else than cc (or empty),\n        # set the ld to be that explicitly something else.  Conversely,\n        # if the cc is 'cc' (or empty), set the ld to be 'cc'.\n        cc|'') ld='cc';;\n        *) ld=\"$cc\" ;;\n        esac\n        ;;\nesac\n\n# From http://ftp.netbsd.org/pub/pkgsrc/current/pkgsrc/mk/platform/Darwin.mk\n# and https://trac.macports.org/wiki/XcodeVersionInfo\n# and https://trac.macports.org/wiki/UsingTheRightCompiler\n# and https://gist.github.com/yamaya/2924292\n# and http://opensource.apple.com/source/clang/\n#\n# Note that Xcode gets updates on older systems sometimes, and in\n# general that the OS levels and XCode levels are not synchronized\n# since new releases of XCode usually support both some new and some\n# old OS releases.\n#\n# Note that Apple hijacks the clang preprocessor symbols __clang_major__\n# and __clang_minor__ so they cannot be used (easily) to detect the\n# actual clang release.  For example:\n#\n# \"Yosemite 10.10.x 14.x.y 6.3 (clang 3.6 as 6.1/602.0.49)\"\n#\n# means that the Xcode 6.3 provided the clang 6.3 but called it 6.1\n# (__clang_major__, __clang_minor__) and in addition the preprocessor\n# symbol __apple_build_version__ was 6020049.\n#\n# Codename        OS      Kernel  Xcode\n#\n# Cheetah         10.0.x  1.3.1\n# Puma            10.1    1.4.1\n#                 10.1.x  5.x.y\n# Jaguar          10.2.x  6.x.y\n# Panther         10.3.x  7.x.y\n# Tiger           10.4.x  8.x.y   2.0   (gcc4 4.0.0)\n#                                 2.2   (gcc4 4.0.1)\n#                                 2.2.1 (gcc 3.3)\n#                                 2.5 ?\n# Leopard         10.5.x  9.x.y   3.0   (gcc 4.0.1 default)\n#                                 3.1   (gcc 4.2.1)\n# Snow Leopard    10.6.x  10.x.y  3.2   (llvm gcc 4.2, clang 2.3 as 1.0)\n#                                 3.2.1 (clang 1.0.1 as 1.0.1/24)\n#                                 3.2.2 (clang 1.0.2 as 1.0.2/32)\n#                                 3.2.3 (clang 1.5 as 1.5/60)\n#                                 4.0.1 (clang 2.9 as 2.0/138)\n# Lion            10.7.x  11.x.y  4.1   (llvm gcc 4.2.1, clang 3.0 as 2.1/163.7.1)\n#                                 4.2   (clang 3.0 as 3.0/211.10.1)\n#                                 4.3.3 (clang 3.1 as 3.1/318.0.61)\n#                                 4.4   (clang 3.1 as 4.0/421.0.57)\n# Mountain Lion   10.8.x  12.x.y  4.5   (clang 3.1 as 4.1/421.11.65, real gcc removed, there is gcc but it's really clang)\n#                                 4.6   (clang 3.2 as 4.2/425.0.24)\n#                                 5.0   (clang 3.3 as 5.0/500.2.75)\n#                                 5.1   (clang 3.4 as 5.1/503.0.38)\n#                                 5.1.1 (clang 3.4 as 5.1/503.0.40)\n# Mavericks       10.9.x  13.x.y  6.0.1 (clang 3.5 as 6.0/600.0.51)\n#                                 6.1   (clang 3.5 as 6.0/600.0.54)\n#                                 6.1.1 (clang 3.5 as 6.0/600.0.56)\n#                                 6.2   (clang 3.5 as 6.0/600.0.57)\n# Yosemite        10.10.x 14.x.y  6.3   (clang 3.6 as 6.1/602.0.49)\n#                                 6.3.1 (clang 3.6 as 6.1/602.0.49)\n#                                 6.3.2 (clang 3.6 as 6.1/602.0.53)\n# El Capitan      10.11.x 15.x.y  7.0   (clang 3.7 as 7.0/700.0.72)\n#                                 7.1   (clang 3.7 as 7.0/700.1.76)\n#                                 7.2   (clang 3.7 as 7.0.2/700.1.81)\n#                                 7.2.1 (clang 3.7 as 7.0.2/700.1.81)\n#                                 7.3   (clang 3.8 as 7.3.0/703.0.29)\n# Sierra          10.12.x 16.x.y  8.0.0 (clang 3.8 as 8.0/800.0.38)\n#\n\n# Processors Supported\n#\n# PowerPC (PPC):       10.0.x - 10.5.8 (final 10.5.x)\n# PowerPC via Rosetta: 10.4.4 - 10.6.8 (final 10.6.x)\n# IA-32:               10.4.4 - 10.6.8 (though still supported on x86-64)\n# x86-64:              10.4.7 - current\n\n# MACOSX_DEPLOYMENT_TARGET selects the minimum OS level we want to support\n#\n# It is needed for OS releases before 10.6.\n#\n# https://developer.apple.com/library/mac/documentation/DeveloperTools/Conceptual/cross_development/Configuring/configuring.html\n#\n# If it is set, we also propagate its value to ccflags and ldflags\n# using the -mmacosx-version-min flag.  If it is not set, we use\n# the OS X release as the min value for the flag.\n\n# Adds \"-mmacosx-version-min=$2\" to \"$1\" unless it already is there.\nadd_macosx_version_min () {\n  local v\n  eval \"v=\\$$1\"\n  case \" $v \" in\n  *\"-mmacosx-version-min\"*)\n     echo \"NOT adding -mmacosx-version-min=$2 to $1 ($v)\" >&4\n     ;;\n  *) echo \"Adding -mmacosx-version-min=$2 to $1\" >&4\n     eval \"$1='$v -mmacosx-version-min=$2'\"\n     ;;\n  esac\n}\n\n# Perl bundles do not expect two-level namespace, added in Darwin 1.4.\n# But starting from perl 5.8.1/Darwin 7 the default is the two-level.\ncase \"$osvers\" in  # Note: osvers is the kernel version, not the 10.x\n1.[0-3].*) # OS X 10.0.x\n   lddlflags=\"${ldflags} -bundle -undefined suppress\"\n   ;;\n1.*)       # OS X 10.1\n   ldflags=\"${ldflags} -flat_namespace\"\n   lddlflags=\"${ldflags} -bundle -undefined suppress\"\n   ;;\n[2-6].*)   # OS X 10.1.x - 10.2.x (though [2-4] never existed publicly)\n   ldflags=\"${ldflags} -flat_namespace\"\n   lddlflags=\"${ldflags} -bundle -undefined suppress\"\n   ;;\n[7-9].*)   # OS X 10.3.x - 10.5.x\n   lddlflags=\"${ldflags} -bundle -undefined dynamic_lookup\"\n   case \"$ld\" in\n       *MACOSX_DEPLOYMENT_TARGET*) ;;\n       *) ld=\"env MACOSX_DEPLOYMENT_TARGET=10.3 ${ld}\" ;;\n   esac\n   ;;\n*)        # OS X 10.6.x - current\n   # The MACOSX_DEPLOYMENT_TARGET is not needed,\n   # but the -mmacosx-version-min option is always used.\n\n   # We now use MACOSX_DEPLOYMENT_TARGET, if set, as an override by\n   # capturing its value and adding it to the flags.\n    case \"$MACOSX_DEPLOYMENT_TARGET\" in\n    10.*)\n      add_macosx_version_min ccflags $MACOSX_DEPLOYMENT_TARGET\n      add_macosx_version_min ldflags $MACOSX_DEPLOYMENT_TARGET\n      ;;\n    '')\n      # Empty MACOSX_DEPLOYMENT_TARGET is okay.\n      ;;\n    *)\n      cat <<EOM >&4\n\n*** Unexpected MACOSX_DEPLOYMENT_TARGET=$MACOSX_DEPLOYMENT_TARGET\n***\n*** Please either set it to 10.something, or to empty.\n\nEOM\n      exit 1\n      ;;\n    esac\n\n    # Keep the prodvers leading whitespace (Configure magic).\n    # Cannot use $osvers here since that is the kernel version.\n    # sw_vers output                 what we want\n    # \"ProductVersion:    10.10.5\"   \"10.10\"\n    # \"ProductVersion:    10.11\"     \"10.11\"\n        prodvers=`sw_vers|awk '/^ProductVersion:/{print $2}'|awk -F. '{print $1\".\"$2}'`\n    case \"$prodvers\" in\n    10.*)\n      add_macosx_version_min ccflags $prodvers\n      add_macosx_version_min ldflags $prodvers\n      ;;\n    *)\n      cat <<EOM >&4\n\n*** Unexpected product version $prodvers.\n***\n*** Try running sw_vers and see what its ProductVersion says.\n\nEOM\n      exit 1\n    esac\n\n    # The X in 10.X\n    prodvers_minor=$(echo $prodvers|awk -F. '{print $2}')\n\n    # macOS (10.12) deprecated syscall().\n    if [ \"$prodvers_minor\" -ge 12 ]; then\n        d_syscall='undef'\n        # If deploying to pre-10.12, suppress Time::HiRes's detection of the system clock_gettime()\n        case \"$MACOSX_DEPLOYMENT_TARGET\" in\n          10.[6-9]|10.10|10.11)\n          ccflags=\"$ccflags -Werror=partial-availability -D_DARWIN_FEATURE_CLOCK_GETTIME=0\"\n          ;;\n        *)\n          ;;\n        esac\n    fi\n\n   lddlflags=\"${ldflags} -bundle -undefined dynamic_lookup\"\n   ;;\nesac\n\nldlibpthname='DYLD_LIBRARY_PATH';\n\n# useshrplib=true results in much slower startup times.\n# 'false' is the default value.  Use Configure -Duseshrplib to override.\n\ncat > UU/archname.cbu <<'EOCBU'\n# This script UU/archname.cbu will get 'called-back' by Configure \n# after it has otherwise determined the architecture name.\ncase \"$ldflags\" in\n*\"-flat_namespace\"*) ;; # Backward compat, be flat.\n# If we are using two-level namespace, we will munge the archname to show it.\n*) archname=\"${archname}-2level\" ;;\nesac\nEOCBU\n\n# 64-bit addressing support. Currently strictly experimental. DFD 2005-06-06\ncase \"$use64bitall\" in\n$define|true|[yY]*)\ncase \"$osvers\" in\n[1-7].*)\n     cat <<EOM >&4\n\n\n\n*** 64-bit addressing is not supported for Mac OS X versions\n*** below 10.4 (\"Tiger\") or Darwin versions below 8. Please try\n*** again without -Duse64bitall. (-Duse64bitint will work, however.)\n\nEOM\n     exit 1\n  ;;\n*)\n    case \"$osvers\" in\n    8.*)\n        cat <<EOM >&4\n\n\n\n*** Perl 64-bit addressing support is experimental for Mac OS X\n*** 10.4 (\"Tiger\") and Darwin version 8. System V IPC is disabled\n*** due to problems with the 64-bit versions of msgctl, semctl,\n*** and shmctl. You should also expect the following test failures:\n***\n***    ext/threads-shared/t/wait (threaded builds only)\n\nEOM\n\n        [ \"$d_msgctl\" ] || d_msgctl='undef'\n        [ \"$d_semctl\" ] || d_semctl='undef'\n        [ \"$d_shmctl\" ] || d_shmctl='undef'\n    ;;\n    esac\n\n    case `uname -p` in \n    powerpc) arch=ppc64 ;;\n    i386) arch=x86_64 ;;\n    *) cat <<EOM >&4\n\n*** Don't recognize processor, can't specify 64 bit compilation.\n\nEOM\n    ;;\n    esac\n    for var in ccflags cppflags ld ldflags\n    do\n       eval $var=\"\\$${var}\\ -arch\\ $arch\"\n    done\n\n    ;;\nesac\n;;\nesac\n\n##\n# System libraries\n##\n\n# vfork works\nusevfork='true';\n\n# malloc wrap works\ncase \"$usemallocwrap\" in\n'') usemallocwrap='define' ;;\nesac\n\n# our malloc works (but allow users to override)\ncase \"$usemymalloc\" in\n'') usemymalloc='n' ;;\nesac\n# However sbrk() returns -1 (failure) somewhere in lib/unicore/mktables at\n# around 14M, so we need to use system malloc() as our sbrk()\n#\n# sbrk() in Darwin deprecated since Mavericks (10.9), it still exists\n# in Yosemite (10.10) but that is just an emulation, and fails for\n# allocations beyond 4MB.  One should use e.g. mmap instead (or system\n# malloc, as suggested above, that but is kind of backward).\nmalloc_cflags='ccflags=\"-DUSE_PERL_SBRK -DPERL_SBRK_VIA_MALLOC $ccflags\"'\n\n# Locales aren't feeling well.\nLC_ALL=C; export LC_ALL;\nLANG=C; export LANG;\n\n#\n# The libraries are not threadsafe as of OS X 10.1.\n#\n# Fix when Apple fixes libc.\n#\ncase \"$usethreads$useithreads\" in\n  *define*)\n  case \"$osvers\" in\n    [12345].*)     cat <<EOM >&4\n\n\n\n*** Warning, there might be problems with your libraries with\n*** regards to threading.  The test ext/threads/t/libc.t is likely\n*** to fail.\n\nEOM\n    ;;\n    *) usereentrant='define';;\n  esac\n\nesac\n\n# Fink can install a GDBM library that claims to have the ODBM interfaces\n# but Perl dynaloader cannot for some reason use that library.  We don't\n# really need ODBM_FIle, though, so let's just hint ODBM away.\ni_dbm=undef;\n\n# Configure doesn't detect ranlib on Tiger properly.\n# NeilW says this should be acceptable on all darwin versions.\nranlib='ranlib'\n\n# Catch MacPorts gcc/g++ extra libdir\ncase \"$($cc -v 2>&1)\" in\n*\"MacPorts gcc\"*) loclibpth=\"$loclibpth /opt/local/lib/libgcc\" ;;\nesac\n\n##\n# Build process\n##\n\n# Case-insensitive filesystems don't get along with Makefile and\n# makefile in the same place.  Since Darwin uses GNU make, this dodges\n# the problem.\nfirstmakefile=GNUmakefile;\n\n# Parts of the system call setenv(), in particular in an atfork handler.\n# This causes problems when the child tries to clean up environ[], so\n# let libc manage environ[].\ncat >> config.over <<'EOOVER'\nif test \"$d_unsetenv\" = \"$define\" -a \\\n    `expr \"$ccflags\" : '.*-DPERL_USE_SAFE_PUTENV'` -eq 0; then\n        ccflags=\"$ccflags -DPERL_USE_SAFE_PUTENV\"\nfi\nEOOVER\n\n# if you use a newer toolchain before OS X 10.9 these functions may be\n# incorrectly detected, so disable them\n# OS X 10.10.x corresponds to kernel 14.x\ncase \"$osvers\" in\n    [1-9].*|1[0-3].*)\n\td_linkat=undef\n\td_openat=undef\n\td_renameat=undef\n\td_unlinkat=undef\n\td_fchmodat=undef\n\t;;\nesac\n\n# mkostemp() was autodetected as present but found to not be linkable\n# on 15.6.0.  Unknown what other OS versions are affected.\nd_mkostemp=undef\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/os2.sh": "#! /bin/sh\n# hints/os2.sh\n# This file reflects the tireless work of\n# Ilya Zakharevich <ilya@math.ohio-state.edu>\n#\n# Trimmed and comments added by \n#     Andy Dougherty  <doughera@lafayette.edu>\n#     Exactly what is required beyond a standard OS/2 installation?\n#     (see in README.os2)\n\n# Note that symbol extraction code gives wrong answers (sometimes?) on\n# gethostent and setsid.\n\n# Optimization (GNU make 3.74 cannot be loaded :-():\nemxload -m 30 sh.exe ls.exe tr.exe id.exe sed.exe # make.exe \nemxload -m 30 grep.exe egrep.exe fgrep.exe cat.exe rm.exe mv.exe cp.exe\nemxload -m 30 uniq.exe basename.exe sort.exe awk.exe echo.exe\n\npath_sep=\\;\n\nif test -f $sh.exe; then sh=$sh.exe; fi\n\nstartsh=\"#!$sh\"\ncc='gcc'\n\n# Make denser object files and DLL\ncase \"X$optimize\" in\n  X)\n\toptimize=\"-O2 -fomit-frame-pointer -malign-loops=2 -malign-jumps=2 -malign-functions=2 -s\"\n\tld_dll_optimize=\"-s\"\n\t;;\nesac\n\n# Get some standard things (indented to avoid putting in config.sh):\n oifs=\"$IFS\"\n IFS=\" ;\"\n set $MANPATH\n tryman=\"$@\"\n set $LIBRARY_PATH\n libemx=\"$@\"\n set $C_INCLUDE_PATH\n usrinc=\"$@\"\n IFS=\"$oifs\"\n tryman=\"`./UU/loc . /man $tryman`\"\n tryman=\"`echo $tryman | tr '\\\\\\' '/'`\"\n \n # indented to avoid having it *two* times at start\n libemx=\"`./UU/loc os2.a /emx/lib $libemx`\"\n\nusrinc=\"`./UU/loc stdlib.h /emx/include $usrinc`\"\nusrinc=\"`dirname $usrinc | tr '\\\\\\' '/'`\"\nlibemx=\"`dirname $libemx | tr '\\\\\\' '/'`\"\n\nif test -d $tryman/man1; then\n  sysman=\"$tryman/man1\"\nelse\n  sysman=\"`./UU/loc . /man/man1 c:/man/man1 c:/usr/man/man1 d:/man/man1 d:/usr/man/man1 e:/man/man1 e:/usr/man/man1 f:/man/man1 f:/usr/man/man1 g:/man/man1 g:/usr/man/man1 /usr/man/man1`\"\nfi\n\nemxpath=\"`dirname $libemx`\"\nif test ! -d \"$emxpath\"; then \n  emxpath=\"`./UU/loc . /emx c:/emx d:/emx e:/emx f:/emx g:/emx h:/emx /emx`\"\nfi\n\nif test ! -d \"$libemx\"; then \n  libemx=\"$emxpath/lib\"\nfi\nif test ! -d \"$libemx\"; then \n  if test -d \"$LIBRARY_PATH\"; then\n    libemx=\"$LIBRARY_PATH\"\n  else\n    libemx=\"`./UU/loc . X c:/emx/lib d:/emx/lib e:/emx/lib f:/emx/lib g:/emx/lib h:/emx/lib /emx/lib`\"\n  fi\nfi\n\nif test ! -d \"$usrinc\"; then \n  if test -d \"$emxpath/include\"; then \n    usrinc=\"$emxpath/include\"\n  else\n    if test -d \"$C_INCLUDE_PATH\"; then\n      usrinc=\"$C_INCLUDE_PATH\"\n    else\n      usrinc=\"`./UU/loc . X c:/emx/include d:/emx/include e:/emx/include f:/emx/include g:/emx/include h:/emx/include /emx/include`\"\n    fi\n  fi\nfi\n\nrsx=\"`./UU/loc rsx.exe undef $pth`\"\n\nif test \"$libemx\" = \"X\"; then echo \"Cannot find C library!\" >&2; fi\n\n# Acute backslashitis:\nlibpth=\"`echo \\\"$LIBRARY_PATH\\\" | tr ';\\\\\\' ' /'`\"\nlibpth=\"$libpth $libemx/mt $libemx\"\n\nset `cmd /c emxrev -f emxlibcm`\nemxcrtrev=$5\n# indented to not put it into config.sh\n  _defemxcrtrev=-D_EMX_CRT_REV_=$emxcrtrev\n\nso='dll'\n\n# Additional definitions:\n\nfirstmakefile='GNUmakefile'\nexe_ext='.exe'\n\n# We provide it\ni_dlfcn='define'\n\n# The default one uses exponential notation between 0.0001 and 0.1\nd_Gconvert='gcvt_os2((x),(n),(b))'\n\ncat > UU/uselongdouble.cbu <<'EOCBU'\n# This script UU/uselongdouble.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use long doubles.\n# If we will use them, let Configure choose us a Gconvert.\ncase \"$uselongdouble:$d_longdbl:$d_sqrtl:$d_modfl\" in\n\"$define:$define:$define:$define\") d_Gconvert='' ;;\nesac\nEOCBU\n\n# -Zomf build has a problem with _exit() *flushing*, so the test\n# gets confused:\nfflushNULL=\"define\"\n\naout_d_shrplib='undef'\naout_useshrplib='false'\naout_obj_ext='.o'\naout_lib_ext='.a'\naout_ar='ar'\naout_plibext='.a'\naout_lddlflags=\"-Zdll $ld_dll_optimize\"\n\n# -D__ST_MT_ERRNO__ allows a quick relink with -Zmtd to check problems\n# which may be due to linking with -Zmtd DLLs\n\n# Cannot have 32000K stack: get SYS0170  ?!\nif [ $emxcrtrev -ge 50 ]; then \n    aout_ldflags='-Zexe -Zsmall-conv -Zstack 16000 -D__ST_MT_ERRNO__'\nelse\n    aout_ldflags='-Zexe -Zstack 16000 -D__ST_MT_ERRNO__'\nfi\n\n# To get into config.sh:\naout_ldflags=\"$aout_ldflags\"\n\naout_d_fork='define'\naout_ccflags=\"-DDOSISH -DPERL_IS_AOUT -DOS2=2 -DEMBED -I. $_defemxcrtrev -D__ST_MT_ERRNO__\"\naout_cppflags=\"-DDOSISH -DPERL_IS_AOUT -DOS2=2 -DEMBED -I. $_defemxcrtrev -D__ST_MT_ERRNO__\"\naout_use_clib='c'\naout_usedl='undef'\naout_archobjs=\"os2.o dl_os2.o\"\n# Not listed in dynamic_ext, but needed for AOUT static_ext nevertheless\naout_extra_static_ext=\"OS2::DLL\"\n\n# variable which have different values for aout compile\nused_aout='d_shrplib useshrplib plibext lib_ext obj_ext ar plibext d_fork lddlflags ldflags ccflags use_clib usedl archobjs cppflags'\n\nif [ \"$emxaout\" != \"\" ]; then\n    d_shrplib=\"$aout_d_shrplib\"\n    useshrplib=\"$aout_useshrplib\"\n    obj_ext=\"$aout_obj_ext\"\n    lib_ext=\"$aout_lib_ext\"\n    ar=\"$aout_ar\"\n    plibext=\"$aout_plibext\"\n    if [ $emxcrtrev -lt 50 ]; then \n\td_fork=\"$aout_d_fork\"\n    fi\n    lddlflags=\"$aout_lddlflags\"\n    ldflags=\"$aout_ldflags\"\n    ccflags=\"$aout_ccflags\"\n    cppflags=\"$aout_cppflags\"\n    use_clib=\"$aout_use_clib\"\n    usedl=\"$aout_usedl\"\nelse\n    d_shrplib='define'\n    useshrplib='true'\n    obj_ext='.obj'\n    lib_ext='.lib'\n    ar='emxomfar'\n    plibext='.lib'\n    if [ $emxcrtrev -ge 50 ]; then \n\td_fork='define'\n    else\n\td_fork='undef'\n    fi\n    lddlflags=\"-Zdll -Zomf -Zmt -Zcrtdll -Zlinker /e:2\"\n    # Recursive regmatch may eat 2.5M of stack alone.\n    ldflags='-Zexe -Zomf -Zmt -Zcrtdll -Zstack 32000 -Zlinker /e:2'\n    if [ $emxcrtrev -ge 50 ]; then \n\tccflags=\"-Zomf -Zmt -DDOSISH -DOS2=2 -DEMBED -I. $_defemxcrtrev\"\n    else\n\tccflags=\"-Zomf -Zmt -DDOSISH -DOS2=2 -DEMBED -I. -DEMX_BAD_SBRK $_defemxcrtrev\"\n    fi\n    use_clib='c_import'\n    usedl='define'\nfi\n\n# indented to miss config.sh\n  _ar=\"$ar\"\n\n# To get into config.sh (should start at the beginning of line)\n# or you can put it into config.over.\nplibext=\"$plibext\"\n# plibext is not needed anymore.  Just directly set $libperl.\nlibperl=\"libperl${plibext}\"\n\n#libc=\"/emx/lib/st/c_import$lib_ext\"\nlibc=\"$libemx/mt/$use_clib$lib_ext\"\n\nif test -r \"$libemx/c_alias$lib_ext\"; then \n    libnames=\"$libemx/c_alias$lib_ext\"\nfi\n# otherwise puts -lc ???\n\n# [Maybe we should just remove c from $libswanted ?]\n\n# Test would pick up wrong rand, so we hardwire the value for random()\nlibs='-lsocket -lm -lbsd'\nrandbits=31\narchobjs=\"os2$obj_ext dl_os2$obj_ext\"\n\n# Run files without extension with sh:\nEXECSHELL=sh\n\ncccdlflags='-Zdll'\ndlsrc='dl_dlopen.xs'\nld='gcc'\n\n#cppflags='-DDOSISH -DOS2=2 -DEMBED -I.'\n\n# for speedup: (some patches to ungetc are also needed):\n# Note that without this guy tests 8 and 10 of io/tell.t fail, with it 11 fails\n\nstdstdunder=`echo \"#include <stdio.h>\" | cpp | egrep -c \"char +\\* +_ptr\"`\nd_stdstdio='define'\nd_stdiobase='define'\nd_stdio_ptr_lval='define'\nd_stdio_cnt_lval='define'\n\nif test \"$stdstdunder\" = 0; then\n  stdio_ptr='((fp)->ptr)'\n  stdio_cnt='((fp)->rcount)'\n  stdio_base='((fp)->buffer)'\n  stdio_bufsiz='((fp)->rcount + (fp)->ptr - (fp)->buffer)'\n  ccflags=\"$ccflags -DMYTTYNAME\"\n  myttyname='define'\nelse\n  stdio_ptr='((fp)->_ptr)'\n  stdio_cnt='((fp)->_rcount)'\n  stdio_base='((fp)->_buffer)'\n  stdio_bufsiz='((fp)->_rcount + (fp)->_ptr - (fp)->_buffer)'\nfi\n\n# to put into config.sh\nmyttyname=\"$myttyname\"\n\n# To have manpages installed\nnroff='nroff.cmd'\n# above will be overwritten otherwise, indented to avoid config.sh\n  _nroff='nroff.cmd'\n\n# should be handled automatically by Configure now.\nln='cp'\n# Will be rewritten otherwise, indented to not put in config.sh\n  _ln='cp'\nlns='cp'\n\nnm_opt='-p'\n\n####### We define these functions ourselves\n\nd_strtoll='define'\nd_strtoull='define'\nd_getprior='define'\nd_setprior='define'\nd_usleep='define'\nd_usleepproto='define'\n\n# The next two are commented. pdksh handles #!, extproc gives no path part.\n# sharpbang='extproc '\n# shsharp='false'\n\n# Commented:\n#startsh='extproc ksh\\\\n#! sh'\n\n# Find patch:\ngnupatch='patch'\nif (gnupatch -v || gnupatch --version)   2>&1 >/dev/null; then\n    gnupatch=gnupatch\nelse\n    if (gpatch -v || gpatch --version)   2>&1 >/dev/null; then\n\tgnupatch=gpatch\n    else\n\t# They may have a special PATH during configuring\n\tif (patch -v || patch --version) 2>&1 >/dev/null; then\n\t    gnupatch=\"`./UU/loc patch.exe undef $pth`\"\n\tfi\n    fi\nfi\n\nfor f in less.exe less.sh less.ksh less.cmd more.exe more.sh more.ksh more.cmd ; do\n  if test -z \"$pager\"; then\n    pager=\"`./UU/loc $f '' $pth`\"\n  fi\ndone\nif test -z \"$pager\"; then\n  pager='cmd /c more'\nfi\n\n# Apply patches if needed\ncase \"$0$running_c_cmd\" in\n  *[/\\\\]Configure|*[/\\\\]Configure.|Configure|Configure.) # Skip Configure.cmd\n    if test \"Xyes\" = \"X$configure_cmd_loop\"; then\n\tcat <<EOC >&2\n!!!\n!!! PANIC: Loop of self-invocations detected, aborting!\n!!!\nEOC\n\texit 20\n    fi\n    configure_cmd_loop=yes\n    export configure_cmd_loop\n\n    configure_needs_patch=''\n    if test -s ./os2/diff.configure; then\n\tif ! grep \"^#OS2-PATCH-APPLIED\" ./Configure > /dev/null; then\n\t    configure_needs_patch=yes\t    \n\tfi\n    fi\n    if test -n \"$configure_needs_patch\"; then\n\t# Not patched!\n\t# Restore the initial command line arguments\n\tif test -f ./Configure.cmd ; then\n\t    cat <<EOC >&2\n!!!\n!!! I see that what is running is ./Configure.\n!!! ./Configure is not patched, but ./Configure.cmd exists.\n!!!\n!!! You are supposed to run Configure.cmd, not Configure\n!!!  after an automagic patching.\n!!!\n!!! If you insist on running Configure, you may\n!!!  patch it manually from ./os2/diff.configure.\n!!!\n!!! However, I went through incredible hoolahoops, and I expect I can\n!!!  auto-restart Configure.cmd myself.  I will start it with arguments:\n!!!\n!!!    Configure.cmd $args_exp\n!!!\nEOC\n\t    rp='Do you want to auto-restart Configure.cmd?'\n\t    dflt='y'\n\t    . UU/myread\n\t    case \"$ans\" in\n\t\t[yY]) echo >&4 \"Okay, continuing.\" ;;\n\t\t*) echo >&4 \"Okay, bye.\"\n\t\t   exit 2\n\t\t   ;;\n\t    esac\n\t    eval \"set X $args_exp\";\n\t    shift;\n\t    # Restore the output\n\t    exec Configure.cmd \"$@\" 1>&2\n\t    exit 2\n\tfi\n\tcat <<EOC >&2\n!!!\n!!! You did not patch ./Configure!\n!!! I can create Configure.cmd and patch it from ./os2/diff.configure with the command\n!!!\n!!!   $gnupatch -b -p1 --output=Configure.cmd <./os2/diff.configure 2>&1 | tee 00_auto_patch\nEOC\n\trp='Do you want to auto-patch Configure to Configure.cmd?'\n\tdflt='y'\n\t. UU/myread\n\tcase \"$ans\" in\n\t\t[yY]) echo >&4 \"Okay, continuing.\" ;;\n\t\t*) echo >&4 \"Okay, bye.\"\n\t\t   exit 2\n\t\t   ;;\n\tesac\n\t($gnupatch -b -p1 --output=Configure.cmd <./os2/diff.configure 2>&1 | tee 00_auto_patch) >&2\n\tcat <<EOC >&2\n!!!\n!!! The report of patching is copied to 00_auto_patch.\n!!! Now we need to restart Configure.cmd with all the options.\n!!!\nEOC\n\techo \"extproc sh\" > Configure.ctm\n\t( cat Configure.cmd >> Configure.ctm && mv -f Configure.ctm Configure.cmd ) || (echo \"!!! Failure to add extproc-line to Configure.cmd.\" >&2 ; exit 21)\n\tcat <<EOC >&2\n!!! I went through incredible hoolahoops, and I expect I can\n!!!  auto-restart Configure.cmd myself.  I will start it with arguments:\n!!!\n!!!    Configure.cmd $args_exp\n!!!\nEOC\n\trp='Do you want to auto-restart Configure.cmd?'\n\tdflt='y'\n\t. UU/myread\n\tcase \"$ans\" in\n\t\t[yY]) echo >&4 \"Okay, continuing.\" ;;\n\t\t*) echo >&4 \"Okay, bye.\"\n\t\t   exit 2\n\t\t   ;;\n\tesac\n\teval \"set X $args_exp\";\n\tshift;\n\texec Configure.cmd \"$@\" 1>&2\n\texit 2\n    else\n\tif test -s ./os2/diff.configure; then\n\t    echo \"!!! Apparently we are running a patched Configure.\" >&2\n\telse\n\t    echo \"!!! Apparently there is no need to patch Configure.\" >&2\n\tfi\n    fi \n    ;;\n  *) echo \"!!! Apparently we are running a renamed Configure: '$0'.\" >&2\nesac\n\n# This script UU/usethreads.cbu will get 'called-back' by Configure \n# after it has prompted the user for whether to use threads.\ncat > UU/usethreads.cbu <<'EOCBU'\ncase \"$usethreads\" in\n$define|true|[yY]*)\n\tccflags=\"-Zmt $ccflags\"\n        cppflags=\"-Zmt $cppflags\"  # Do we really need to set this?\n        aout_ccflags=\"-DUSE_THREADS $aout_ccflags\"\n        aout_cppflags=\"-DUSE_THREADS $aout_cppflags\"\n        aout_lddlflags=\"-Zmt $aout_lddlflags\"\n        aout_ldflags=\"-Zmt $aout_ldflags\"\n\t;;\nesac\nEOCBU\n\nif test -z \"$cryptlib\"; then\n\tcryptlib=`UU/loc crypt$lib_ext \"\" $libpth`\n\tif $test -n \"$cryptlib\"; then\n\t\tcryptlib=-lcrypt\n\telse\n\t\tcryptlib=`UU/loc ufc$lib_ext \"\" $libpth`\n\t\tif $test -n \"$cryptlib\"; then\n\t\t\tcryptlib=-lufc\n\t\tfi\n\tfi\nfi\nif test -n \"$cryptlib\"; then\n\tlibs=\"$libs $cryptlib\"\n\t# d_crypt=define\nfi\n\n# Now install the external modules. We are in the ./hints directory.\n\ncd ./os2/OS2\n\ncp -rfu * ../../ext/\n\n# Install tests:\n\ncp -uf ../*.t ../../t/lib\nfor xxx in * ; do\n\tif $test -d $xxx/t; then\n\t\tcp -uf $xxx/t/*.t ../../t/lib\n\telse\n\t\tif $test -d $xxx; then\n\t\t\tcd $xxx\n\t\t\tfor yyy in * ; do\n\t\t\t\tif $test -d $yyy/t; then\n\t\t\t\t    cp -uf $yyy/t/*.t ../../t/lib\n\t\t\t\tfi\n\t\t\tdone\n\t\t\tcd ..\n\t\tfi\n\tfi\ndone\n\ncase \"$ldlibpthname\" in\n'') ldlibpthname=none ;;\nesac\n\n# Now go back\ncd ../..\ncp os2/*.t t/lib\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/openbsd.sh": "# hints/openbsd.sh\n#\n# hints file for OpenBSD; Todd Miller <millert@openbsd.org>\n# Edited to allow Configure command-line overrides by\n#  Andy Dougherty <doughera@lafayette.edu>\n#\n# To build with distribution paths, use:\n#\t./Configure -des -Dopenbsd_distribution=defined\n#\n\n# OpenBSD has a better malloc than perl...\ntest \"$usemymalloc\" || usemymalloc='n'\n\n# malloc wrap works\ncase \"$usemallocwrap\" in\n'') usemallocwrap='define' ;;\nesac\n\n# Currently, vfork(2) is not a real win over fork(2).\nusevfork=\"$undef\"\n\n# In OpenBSD < 3.3, the setre?[ug]id() are emulated using the\n# _POSIX_SAVED_IDS functionality which does not have the same\n# semantics as 4.3BSD.  Starting with OpenBSD 3.3, the original\n# semantics have been restored.\ncase \"$osvers\" in\n[0-2].*|3.[0-2])\n\td_setregid=$undef\n\td_setreuid=$undef\n\td_setrgid=$undef\n\td_setruid=$undef\nesac\n\n#\n# Not all platforms support dynamic loading...\n# For the case of \"$openbsd_distribution\", the hints file\n# needs to know whether we are using dynamic loading so that\n# it can set the libperl name appropriately.\n# Allow command line overrides.\n#\nARCH=`arch | sed 's/^OpenBSD.//'`\ncase \"${ARCH}-${osvers}\" in\nalpha-2.[0-8]|mips-2.[0-8]|powerpc-2.[0-7]|m88k-[2-4].*|m88k-5.[0-2]|hppa-3.[0-5]|vax-*)\n\ttest -z \"$usedl\" && usedl=$undef\n\t;;\n*)\n\ttest -z \"$usedl\" && usedl=$define\n\t# We use -fPIC here because -fpic is *NOT* enough for some of the\n\t# extensions like Tk on some OpenBSD platforms (ie: sparc)\n\tcccdlflags=\"-DPIC -fPIC $cccdlflags\"\n\tcase \"$osvers\" in\n\t[01].*|2.[0-7]|2.[0-7].*)\n\t\tlddlflags=\"-Bshareable $lddlflags\"\n\t\t;;\n\t2.[8-9]|3.0)\n\t\tld=${cc:-cc}\n\t\tlddlflags=\"-shared -fPIC $lddlflags\"\n\t\t;;\n\t*) # from 3.1 onwards\n\t\tld=${cc:-cc}\n\t\tlddlflags=\"-shared -fPIC $lddlflags\"\n\t\tlibswanted=`echo $libswanted | sed 's/ dl / /'`\n\t\t;;\n\tesac\n\n\t# We need to force ld to export symbols on ELF platforms.\n\t# Without this, dlopen() is crippled.\n\tELF=`${cc:-cc} -dM -E - </dev/null | grep __ELF__`\n\ttest -n \"$ELF\" && ldflags=\"-Wl,-E $ldflags\"\n\t;;\nesac\n\n#\n# Tweaks for various versions of OpenBSD\n#\ncase \"$osvers\" in\n2.5)\n\t# OpenBSD 2.5 has broken odbm support\n\ti_dbm=$undef\n\t;;\nesac\n\n# OpenBSD doesn't need libcrypt but many folks keep a stub lib\n# around for old NetBSD binaries.\nlibswanted=`echo $libswanted | sed 's/ crypt / /'`\n\n# Configure can't figure this out non-interactively\nd_suidsafe=$define\n\n# cc is gcc so we can do better than -O\n# Allow a command-line override, such as -Doptimize=-g\ncase \"${ARCH}-${osvers}\" in\nhppa-3.3|m88k-2.*|m88k-3.[0-3])\n   test \"$optimize\" || optimize='-O0'\n   ;;\nm88k-3.4)\n   test \"$optimize\" || optimize='-O1'\n   ;;\n*)\n   test \"$optimize\" || optimize='-O2'\n   ;;\nesac\n\n# This script UU/usethreads.cbu will get 'called-back' by Configure \n# after it has prompted the user for whether to use threads.\ncat > UU/usethreads.cbu <<'EOCBU'\ncase \"$usethreads\" in\n$define|true|[yY]*)\n\t# any openbsd version dependencies with pthreads?\n\tccflags=\"-pthread $ccflags\"\n\tldflags=\"-pthread $ldflags\"\n\tcase \"$osvers\" in\n\t[0-2].*|3.[0-2])\n\t\t# Change from -lc to -lc_r\n\t\tset `echo \"X $libswanted \" | sed 's/ c / c_r /'`\n\t\tshift\n\t\tlibswanted=\"$*\"\n\t;;\n\tesac\n\tcase \"$osvers\" in\n\t[012].*|3.[0-6])\n        \t# Broken up to OpenBSD 3.6, fixed in OpenBSD 3.7\n\t\td_getservbyname_r=$undef ;;\n\tesac\nesac\nEOCBU\n\n# When building in the OpenBSD tree we use different paths\n# This is only part of the story, the rest comes from config.over\ncase \"$openbsd_distribution\" in\n''|$undef|false) ;;\n*)\n\t# We put things in /usr, not /usr/local\n\tprefix='/usr'\n\tprefixexp='/usr'\n\tsysman='/usr/share/man/man1'\n\tlibpth='/usr/lib'\n\tglibpth='/usr/lib'\n\t# Local things, however, do go in /usr/local\n\tsiteprefix='/usr/local'\n\tsiteprefixexp='/usr/local'\n\t# Ports installs non-std libs in /usr/local/lib so look there too\n\tlocincpth='/usr/local/include'\n\tloclibpth='/usr/local/lib'\n\t# Link perl with shared libperl\n\tif [ \"$usedl\" = \"$define\" -a -r shlib_version ]; then\n\t\tuseshrplib=true\n\t\tlibperl=`. ./shlib_version; echo libperl.so.${major}.${minor}`\n\tfi\n\t;;\nesac\n\n# openbsd has a problem regarding newlocale()\n# https://marc.info/?l=openbsd-bugs&m=155364568608759&w=2\n# which is being fixed.  In the meantime, forbid POSIX 2008 locales\nd_newlocale=\"$undef\"\n\n# end\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/hints/mirbsd.sh": "# $MirOS: src/gnu/usr.bin/perl/hints/mirbsd.sh,v 1.3 2007/05/07 20:32:09 tg Exp $\n#\n# hints file for MirOS by Thorsten Glaser <tg@mirbsd.de>\n# based upon hints for OpenBSD\n\n[ -z \"$cc\" ] && cc=\"${CC:-mgcc}\"\n\n# MirOS has a better malloc than perl...\nusemymalloc='n'\n\n# Added by bingos. \nloclibpth=\"/usr/mpkg/lib /usr/local/lib\"\nlocincpath=\"/usr/mpkg/include /usr/local/include\"\nccflags=\"$ccflags -fhonour-copts -I/usr/mpkg/include\"\ncppflags=\"$cppflags -fhonour-copts -I/usr/mpkg/include\"\n\n# Currently, vfork(2) is not a real win over fork(2).\nusevfork=\"$undef\"\n\ntest -z \"$usedl\" && usedl=$define\n# We use -fPIC here because -fpic is *NOT* enough for some of the\n# extensions like Tk on some platforms (ie: sparc)\ncccdlflags=\"-DPIC -fPIC $cccdlflags\"\nld=$cc\nlddlflags=\"-shared -fPIC $lddlflags\"\nlibswanted=$(echo $libswanted | sed 's/ dl / /')\n\n# We need to force ld to export symbols on ELF platforms.\n# Without this, dlopen() is crippled. All platforms are ELF.\nldflags=\"-Wl,-E $ldflags\"\n\n# malloc wrap works\ncase \"$usemallocwrap\" in\n'') usemallocwrap='define' ;;\nesac\n\n# MirOS doesn't need libcrypt\nlibswanted=$(echo $libswanted | sed 's/ crypt / /')\n\n# Configure can't figure this out non-interactively\nd_suidsafe=$define\n\n# cc is gcc so we can do better than -O\n# Allow a command-line override, such as -Doptimize=-g\ntest \"$optimize\" || optimize='-O2'\n\n# This script UU/usethreads.cbu will get 'called-back' by Configure\n# after it has prompted the user for whether to use threads.\ncat > UU/usethreads.cbu <<'EOCBU'\ncase \"$usethreads\" in\n$define|true|[yY]*)\n\tccflags=\"-pthread $ccflags\"\n\tldflags=\"-pthread $ldflags\"\nesac\nEOCBU\n\n# When building in the MirOS tree we use different paths\n# This is only part of the story, the rest comes from config.over\ncase \"$mirbsd_distribution\" in\n''|$undef|false) ;;\n*)\n\t# We put things in /usr, not /usr/local\n\tprefix='/usr'\n\tprefixexp='/usr'\n\tsysman='/usr/share/man/man1'\n\tlibpth='/usr/lib'\n\tglibpth='/usr/lib'\n\t# Local things, however, do go in /usr/local\n\tsiteprefix='/usr/local'\n\tsiteprefixexp='/usr/local'\n\t# Ports installs non-std libs in /usr/local/lib so look there too\n\tlocincpth='/usr/local/include'\n\tloclibpth='/usr/local/lib'\n\t# Link perl with shared libperl\n\tif [ \"$usedl\" = \"$define\" -a -r shlib_version ]; then\n\t\tuseshrplib=true\n\t\tlibperl=$(. ./shlib_version; echo libperl.so.${major}.${minor})\n\tfi\n\t;;\nesac\n\n# end\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/Cross/config.sh-arm-linux": "#!/bin/sh\n#\n# This file was produced by running the Configure script. It holds all the\n# definitions figured out by Configure. Should you modify one of these values,\n# do not forget to propagate your changes by running \"Configure -der\". You may\n# instead choose to run each of the .SH files by yourself, or \"Configure -S\".\n#\n\n# Package name      : perl5\n# Source directory  : .\n# Configuration time: Wed Sep  3 22:24:58 EDT 2003\n# Configured by     : red\n# Target system     : linux openzaurus.criticalintegration.com 2.4.6-rmk1-np2-embedix #15 Wed Aug 6 07:49:44 UTC 2003 armv4l unknown \n\nAuthor=''\nDate='$Date'\nHeader=''\nId='$Id'\nLocker=''\nLog='$Log'\nMcc='Mcc'\nRCSfile='$RCSfile'\nRevision='$Revision'\nSource=''\nState=''\n_a='.a'\n_exe=''\n_o='.o'\nafs='false'\nafsroot='/afs'\nalignbytes='4'\naphostname='/bin/hostname'\napi_revision='5'\napi_subversion='0'\napi_version='30'\napi_versionstring='5.30.0'\nar='ar'\narchlib='/usr/lib/perl5/5.30.3/armv4l-linux'\narchlibexp='/usr/lib/perl5/5.30.3/armv4l-linux'\narchname64=''\narchname='armv4l-linux'\narchobjs=''\nasctime_r_proto='0'\nawk='awk'\nbaserev='5.0'\nbash=''\nbin='/usr/bin'\nbinexp='/usr/bin'\nbison='bison'\nbootstrap_charset='undef'\nbyacc='byacc'\nbyteorder='1234'\nc=''\ncastflags='0'\ncat='cat'\ncc='cc'\ncccdlflags='-fpic'\nccdlflags='-rdynamic -Wl,-rpath,/usr/lib/perl5/5.30.3/armv4l-linux/CORE'\nccflags='-fno-strict-aliasing -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'\nccflags_uselargefiles='-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'\nccname='arm-linux-gcc'\nccsymbols='__APCS_32__=1 __ARM_ARCH_3__=1 __CHAR_UNSIGNED__=1 __GNUC_MINOR__=95 __arm__=1 __linux=1 __linux__=1 __unix=1 __unix__=1 cpu=arm machine=arm system=posix system=unix'\nccversion=''\ncf_by='red'\ncf_email='red@criticalintegration.com'\ncf_time='Wed Sep  3 22:24:58 EDT 2003'\ncharbits='8'\nchgrp=''\nchmod='chmod'\nchown=''\nclocktype='clock_t'\ncomm='comm'\ncompress=''\ncontains='grep'\ncp='cp'\ncpio=''\ncpp='cpp'\ncpp_stuff='42'\ncppccsymbols='__ELF__=1 __GNUC__=2 linux=1 unix=1'\ncppflags='-fno-strict-aliasing -I/usr/local/include'\ncpplast='-'\ncppminus='-'\ncpprun='cc -E'\ncppstdin='cc -E'\ncppsymbols='_FILE_OFFSET_BITS=64 __GLIBC__=2 __GLIBC_MINOR__=2 __GNUC_MINOR__=95 __GNU_LIBRARY__=6 _LARGEFILE_SOURCE=1 _POSIX_C_SOURCE=199506 _POSIX_SOURCE=1 __STDC__=1 __USE_BSD=1 __USE_FILE_OFFSET64=1 __USE_LARGEFILE=1 __USE_MISC=1 __USE_POSIX=1 __USE_POSIX199309=1 __USE_POSIX199506=1 __USE_POSIX2=1 __USE_SVID=1 __linux=1 __linux__=1 __unix=1 __unix__=1'\ncrypt_r_proto='0'\ncryptlib=''\ncsh='csh'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='gcvt((x),(n),(b))'\nd_PRIEUldbl='define'\nd_PRIFUldbl='define'\nd_PRIGUldbl='define'\nd_PRIXU64='define'\nd_PRId64='define'\nd_PRIeldbl='define'\nd_PRIfldbl='define'\nd_PRIgldbl='define'\nd_PRIi64='define'\nd_PRIo64='define'\nd_PRIu64='define'\nd_PRIx64='define'\nd_SCNfldbl='define'\nd__fwalk='undef'\nd_accept4='undef'\nd_access='define'\nd_accessx='undef'\nd_acosh='define'\nd_aintl='undef'\nd_alarm='define'\nd_archlib='define'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='define'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bsd='undef'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_add_overflow='undef'\nd_builtin_choose_expr='define'\nd_builtin_expect='define'\nd_builtin_mul_overflow='undef'\nd_builtin_sub_overflow='undef'\nd_c99_variadic_macros='undef'\nd_casti32='define'\nd_castneg='define'\nd_cbrt='undef'\nd_chown='define'\nd_chroot='define'\nd_chsize='undef'\nd_class='undef'\nd_clearenv='define'\nd_closedir='define'\nd_cmsghdr_s='define'\nd_copysign='undef'\nd_copysignl='define'\nd_cplusplus='undef'\nd_crypt='define'\nd_crypt_r='undef'\nd_csh='define'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='define'\nd_dbl_dig='define'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='define'\nd_dir_dd_fd='undef'\nd_dirfd='define'\nd_dirnamlen='undef'\nd_dladdr='undef'\nd_dlerror='define'\nd_dlopen='define'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_double_has_inf='define'\nd_double_has_nan='define'\nd_double_has_negative_zero='define'\nd_double_has_subnormals='define'\nd_double_style_cray='undef'\nd_double_style_ibm='undef'\nd_double_style_ieee='define'\nd_double_style_vax='undef'\nd_drand48_r='undef'\nd_drand48proto='define'\nd_dup2='define'\nd_dup3='undef'\nd_duplocale='undef'\nd_eaccess='undef'\nd_endgrent='define'\nd_endgrent_r='undef'\nd_endhent='define'\nd_endhostent_r='undef'\nd_endnent='define'\nd_endnetent_r='undef'\nd_endpent='define'\nd_endprotoent_r='undef'\nd_endpwent='define'\nd_endpwent_r='undef'\nd_endsent='define'\nd_endservent_r='undef'\nd_eofnblk='define'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='define'\nd_fchdir='define'\nd_fchmod='define'\nd_fchmodat='undef'\nd_fchown='define'\nd_fcntl='define'\nd_fcntl_can_lock='define'\nd_fd_macros='define'\nd_fd_set='define'\nd_fdclose='undef'\nd_fdim='undef'\nd_fds_bits='undef'\nd_fegetround='define'\nd_fgetpos='define'\nd_finite='define'\nd_finitel='define'\nd_flexfnam='define'\nd_flock='define'\nd_flockproto='define'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='define'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='define'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_freelocale='undef'\nd_frexpl='define'\nd_fs_data_s='undef'\nd_fseeko='define'\nd_fsetpos='define'\nd_fstatfs='define'\nd_fstatvfs='define'\nd_fsync='define'\nd_ftello='define'\nd_ftime='undef'\nd_futimes='undef'\nd_gai_strerror='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='define'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='define'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='define'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='define'\nd_getitimer='define'\nd_getlogin='define'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='define'\nd_getnameinfo='undef'\nd_getnbyaddr='define'\nd_getnbyname='define'\nd_getnent='define'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='define'\nd_getpagsz='define'\nd_getpbyname='define'\nd_getpbynumber='define'\nd_getpent='define'\nd_getpgid='define'\nd_getpgrp2='undef'\nd_getpgrp='define'\nd_getppid='define'\nd_getprior='define'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='define'\nd_getprpwnam='undef'\nd_getpwent='define'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='define'\nd_getsent='define'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='define'\nd_getspnam='define'\nd_getspnam_r='undef'\nd_gettimeod='define'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='define'\nd_grpasswd='define'\nd_hasmntopt='define'\nd_htonl='define'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='define'\nd_inc_version_list='define'\nd_index='undef'\nd_inetaton='define'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='define'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='define'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='define'\nd_isinfl='define'\nd_isless='undef'\nd_isnan='define'\nd_isnanl='define'\nd_isnormal='undef'\nd_j0='define'\nd_j0l='define'\nd_killpg='define'\nd_lc_monetary_2008='undef'\nd_lchown='define'\nd_ldbl_dig='define'\nd_ldexpl='define'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='define'\nd_link='define'\nd_linkat='undef'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localeconv_l='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='define'\nd_lockf='define'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_long_double_style_ieee='undef'\nd_long_double_style_ieee_doubledouble='undef'\nd_long_double_style_ieee_extended='undef'\nd_long_double_style_ieee_std='undef'\nd_long_double_style_vax='undef'\nd_longdbl='define'\nd_longlong='define'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='define'\nd_lstat='define'\nd_madvise='define'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='define'\nd_mbrlen='undef'\nd_mbrtowc='undef'\nd_mbstowcs='define'\nd_mbtowc='define'\nd_memmem='undef'\nd_memrchr='undef'\nd_mkdir='define'\nd_mkdtemp='define'\nd_mkfifo='define'\nd_mkostemp='undef'\nd_mkstemp='define'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='define'\nd_mmap='define'\nd_modfl='define'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='define'\nd_msg='define'\nd_msg_ctrunc='define'\nd_msg_dontroute='define'\nd_msg_oob='define'\nd_msg_peek='define'\nd_msg_proxy='define'\nd_msgctl='define'\nd_msgget='define'\nd_msghdr_s='define'\nd_msgrcv='define'\nd_msgsnd='define'\nd_msync='define'\nd_munmap='define'\nd_mymalloc='undef'\nd_nan='undef'\nd_nanosleep='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_newlocale='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='define'\nd_nl_langinfo='define'\nd_nv_preserves_uv='define'\nd_nv_zero_is_allbits_zero='undef'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='define'\nd_openat='undef'\nd_pathconf='define'\nd_pause='define'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe2='undef'\nd_pipe='define'\nd_poll='define'\nd_portable='define'\nd_prctl='define'\nd_prctl_set_name='define'\nd_printf_format_null='undef'\nd_procselfexe='define'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='define'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='define'\nd_pwpasswd='define'\nd_pwquota='undef'\nd_qgcvt='define'\nd_quad='define'\nd_querylocale='undef'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='define'\nd_readv='define'\nd_recvmsg='define'\nd_regcomp='undef'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_renameat='undef'\nd_rewinddir='define'\nd_rint='undef'\nd_rmdir='define'\nd_round='undef'\nd_sbrkproto='define'\nd_scalbn='undef'\nd_scalbnl='define'\nd_sched_yield='define'\nd_scm_rights='define'\nd_seekdir='define'\nd_select='define'\nd_sem='define'\nd_semctl='define'\nd_semctl_semid_ds='define'\nd_semctl_semun='define'\nd_semget='define'\nd_semop='define'\nd_sendmsg='define'\nd_setegid='define'\nd_seteuid='define'\nd_setgrent='define'\nd_setgrent_r='undef'\nd_setgrps='define'\nd_sethent='define'\nd_sethostent_r='undef'\nd_setitimer='define'\nd_setlinebuf='define'\nd_setlocale='define'\nd_setlocale_accepts_any_locale_name='undef'\nd_setlocale_r='undef'\nd_setnent='define'\nd_setnetent_r='undef'\nd_setpent='define'\nd_setpgid='define'\nd_setpgrp2='undef'\nd_setpgrp='define'\nd_setprior='define'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='define'\nd_setpwent_r='undef'\nd_setregid='define'\nd_setresgid='define'\nd_setresuid='define'\nd_setreuid='define'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='define'\nd_setservent_r='undef'\nd_setsid='define'\nd_setvbuf='define'\nd_shm='define'\nd_shmat='define'\nd_shmatprototype='define'\nd_shmctl='define'\nd_shmdt='define'\nd_shmget='define'\nd_sigaction='define'\nd_siginfo_si_addr='undef'\nd_siginfo_si_band='undef'\nd_siginfo_si_errno='undef'\nd_siginfo_si_pid='undef'\nd_siginfo_si_status='undef'\nd_siginfo_si_uid='undef'\nd_siginfo_si_value='undef'\nd_signbit='define'\nd_sigprocmask='define'\nd_sigsetjmp='define'\nd_sin6_scope_id='undef'\nd_sitearch='define'\nd_snprintf='undef'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='define'\nd_socklen_t='define'\nd_sockpair='define'\nd_socks5_init='undef'\nd_sqrtl='define'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='define'\nd_statfs_f_flags='undef'\nd_statfs_s='define'\nd_static_inline='undef'\nd_statvfs='define'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='define'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='define'\nd_stdio_stream_array='undef'\nd_stdiobase='define'\nd_stdstdio='define'\nd_strcoll='define'\nd_strerror_l='undef'\nd_strerror_r='undef'\nd_strftime='define'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strnlen='undef'\nd_strtod='define'\nd_strtod_l='undef'\nd_strtol='define'\nd_strtold='define'\nd_strtold_l='undef'\nd_strtoll='define'\nd_strtoq='define'\nd_strtoul='define'\nd_strtoull='define'\nd_strtouq='define'\nd_strxfrm='define'\nd_suidsafe='undef'\nd_symlink='define'\nd_syscall='define'\nd_syscallproto='define'\nd_sysconf='define'\nd_sysernlst=''\nd_syserrlst='define'\nd_system='define'\nd_tcgetpgrp='define'\nd_tcsetpgrp='define'\nd_telldir='define'\nd_telldirproto='define'\nd_tgamma='undef'\nd_thread_safe_nl_langinfo_l='undef'\nd_time='define'\nd_timegm='define'\nd_times='define'\nd_tm_tm_gmtoff='define'\nd_tm_tm_zone='define'\nd_tmpnam_r='undef'\nd_towlower='undef'\nd_towupper='undef'\nd_trunc='undef'\nd_truncate='define'\nd_truncl='define'\nd_ttyname_r='undef'\nd_tzname='define'\nd_u32align='undef'\nd_ualarm='define'\nd_umask='define'\nd_uname='define'\nd_union_semun='undef'\nd_unlinkat='undef'\nd_unordered='undef'\nd_unsetenv='define'\nd_uselocale='undef'\nd_usleep='define'\nd_usleepproto='define'\nd_ustat='define'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vendorscript='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='define'\nd_voidtty=''\nd_vsnprintf='define'\nd_wait4='define'\nd_waitpid='define'\nd_wcscmp='undef'\nd_wcstombs='define'\nd_wcsxfrm='undef'\nd_wctomb='define'\nd_writev='define'\nd_xenix='undef'\ndate='date'\ndb_hashtype='u_int32_t'\ndb_prefixtype='size_t'\ndb_version_major=''\ndb_version_minor=''\ndb_version_patch=''\ndefault_inc_excludes_dot='undef'\ndirentrytype='struct dirent'\ndlext='so'\ndlsrc='dl_dlopen.xs'\ndoubleinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f'\ndoublekind='3'\ndoublemantbits='52'\ndoublenanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f'\ndoublesize='8'\ndrand01='Perl_drand48()'\ndrand48_r_proto='0'\ndtrace=''\ndynamic_ext='B ByteLoader Cwd Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call I18N/Langinfo IO IPC/SysV List/Util MIME/Base64 Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap attributes re threads threads/shared'\neagain='EAGAIN'\nebcdic='undef'\necho='echo'\negrep='egrep'\nemacs=''\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext=''\nexpr='expr'\nextensions='B ByteLoader Cwd Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call I18N/Langinfo IO IPC/SysV List/Util MIME/Base64 Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap attributes re threads threads/shared Errno'\nextras=''\nfflushNULL='define'\nfflushall='undef'\nfind=''\nfirstmakefile='makefile'\nflex=''\nfpossize='16'\nfpostype='fpos_t'\nfreetype='void'\nfrom=':'\nfull_ar='/usr/bin/ar'\nfull_csh='/bin/csh'\nfull_sed='/bin/sed'\ngccansipedantic=''\ngccosandvers=''\ngccversion='2.95.3 20010125 (prerelease)'\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"lu\"'\ngidsign='1'\ngidsize='4'\ngidtype='gid_t'\nglibpth='/usr/shlib  /lib /usr/lib /usr/lib/386 /lib/386 /usr/ccs/lib /usr/ucblib /usr/local/lib '\ngmake='gmake'\ngmtime_r_proto='0'\ngnulibc_version='2.2.2'\ngrep='grep'\ngroupcat='cat /etc/group'\ngroupstype='gid_t'\ngzip='gzip'\nh_fcntl='false'\nh_sysfile='true'\nhint='recommended'\nhostcat='cat /etc/hosts'\nhtml1dir=' '\nhtml1direxp=''\nhtml3dir=' '\nhtml3direxp=''\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='long long'\ni8size='1'\ni8type='char'\ni_arpainet='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='define'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='define'\ni_execinfo='undef'\ni_fcntl='undef'\ni_fenv='define'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='define'\ni_ieeefp='undef'\ni_inttypes='define'\ni_langinfo='define'\ni_libutil='undef'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='define'\ni_mallocmalloc='undef'\ni_mntent='define'\ni_ndbm='undef'\ni_netdb='define'\ni_neterrno='undef'\ni_netinettcp='define'\ni_niin='define'\ni_poll='define'\ni_prot='undef'\ni_pthread='define'\ni_pwd='define'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='define'\ni_socks='undef'\ni_stdbool='undef'\ni_stdint='define'\ni_stdlib='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='define'\ni_sysfile='define'\ni_sysfilio='undef'\ni_sysin='undef'\ni_sysioctl='define'\ni_syslog='define'\ni_sysmman='define'\ni_sysmode='undef'\ni_sysmount='define'\ni_sysndir='undef'\ni_sysparam='define'\ni_syspoll='undef'\ni_sysresrc='define'\ni_syssecrt='undef'\ni_sysselct='define'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='define'\ni_sysstatvfs='define'\ni_systime='define'\ni_systimek='undef'\ni_systimes='define'\ni_systypes='define'\ni_sysuio='define'\ni_sysun='define'\ni_sysutsname='define'\ni_sysvfs='define'\ni_syswait='define'\ni_termio='undef'\ni_termios='define'\ni_time='define'\ni_unistd='define'\ni_ustat='define'\ni_utime='define'\ni_vfork='undef'\ni_wchar='undef'\ni_wctype='undef'\ni_xlocale='undef'\nignore_versioned_solibs='y'\ninc_version_list=' '\ninc_version_list_init='0'\nincpath=''\ninews=''\ninstallarchlib='./install_me_here/usr/lib/perl5/5.30.3/armv4l-linux'\ninstallbin='./install_me_here/usr/bin'\ninstallhtml1dir=''\ninstallhtml3dir=''\ninstallman1dir='./install_me_here/usr/share/man/man1'\ninstallman3dir='./install_me_here/usr/share/man/man3'\ninstallprefix='./install_me_here/usr'\ninstallprefixexp='./install_me_here/usr'\ninstallprivlib='./install_me_here/usr/lib/perl5/5.30.3'\ninstallscript='./install_me_here/usr/bin'\ninstallsitearch='./install_me_here/usr/lib/perl5/site_perl/5.30.3/armv4l-linux'\ninstallsitebin='./install_me_here/usr/bin'\ninstallsitehtml1dir=''\ninstallsitehtml3dir=''\ninstallsitelib='./install_me_here/usr/lib/perl5/site_perl/5.30.3'\ninstallsiteman1dir='./install_me_here/usr/share/man/man1'\ninstallsiteman3dir='./install_me_here/usr/share/man/man3'\ninstallsitescript='./install_me_here/usr/bin'\ninstallstyle='./install_me_herelib/perl5'\ninstallusrbinperl='undef'\ninstallvendorarch=''\ninstallvendorbin=''\ninstallvendorhtml1dir=''\ninstallvendorhtml3dir=''\ninstallvendorlib=''\ninstallvendorman1dir=''\ninstallvendorman3dir=''\ninstallvendorscript=''\nintsize='4'\nissymlink='/usr/bin/test -h'\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nknown_extensions='B ByteLoader Cwd DB_File Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call GDBM_File I18N/Langinfo IO IPC/SysV List/Util MIME/Base64 NDBM_File ODBM_File Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap attributes re threads threads/shared'\nksh=''\nld='cc'\nlddlflags='-shared -L/usr/local/lib'\nldflags=' -L/usr/local/lib'\nldflags_uselargefiles=''\nldlibpthname='LD_LIBRARY_PATH'\nless='less'\nlib_ext='.a'\nlibc='/lib/libc-2.2.2.so'\nlibperl='libperl.so'\nlibpth='/usr/local/lib /lib /usr/lib'\nlibs='-lnsl -ldl -lm -lcrypt -lutil -lc'\nlibsdirs=' /usr/lib'\nlibsfiles=' libnsl.so libdl.so libm.so libcrypt.so libutil.so libc.so'\nlibsfound=' /usr/lib/libnsl.so /usr/lib/libdl.so /usr/lib/libm.so /usr/lib/libcrypt.so /usr/lib/libutil.so /usr/lib/libc.so'\nlibspath=' /usr/local/lib /lib /usr/lib'\nlibswanted='socket bind inet nsl nm ndbm gdbm dbm db malloc dl ld sun m crypt sec util c cposix posix ucb BSD'\nlibswanted_uselargefiles=''\nline=''\nlint=''\nlkflags=''\nln='ln'\nlns='/bin/ln -s'\nlocaltime_r_proto='0'\nlocincpth='/usr/local/include /opt/local/include /usr/gnu/include /opt/gnu/include /usr/GNU/include /opt/GNU/include'\nloclibpth='/usr/local/lib /opt/local/lib /usr/gnu/lib /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib'\nlongdblinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'\nlongdblkind='0'\nlongdblmantbits='64'\nlongdblnanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'\nlongdblsize='8'\nlonglongsize='8'\nlongsize='4'\nlp=''\nlpr=''\nls='ls'\nlseeksize='8'\nlseektype='off_t'\nmad='undef'\nmail=''\nmailx=''\nmake='make'\nmake_set_make='#'\nmallocobj=''\nmallocsrc=''\nmalloctype='void *'\nman1dir='/usr/share/man/man1'\nman1direxp='/usr/share/man/man1'\nman1ext='1'\nman3dir='/usr/share/man/man3'\nman3direxp='/usr/share/man/man3'\nman3ext='3'\nmips_type=''\nmistrustnm=''\nmkdir='mkdir'\nmmaptype='void *'\nmodetype='mode_t'\nmore='more'\nmultiarch='undef'\nmv=''\nmyarchname='armv4l-linux'\nmydomain='.criticalintegration.com'\nmyhostname='openzaurus'\nmyuname='linux openzaurus.criticalintegration.com 2.4.6-rmk1-np2-embedix #15 Wed Aug 6 07:49:44 UTC 2003 armv4l unknown '\nn='-n'\nneed_va_copy='undef'\nnetdb_hlen_type='size_t'\nnetdb_host_type='const void *'\nnetdb_name_type='const char *'\nnetdb_net_type='in_addr_t'\nnm='nm'\nnm_opt=''\nnm_so_opt='--dynamic'\nnonxs_ext='Errno'\nnroff='nroff'\nnvEUformat='\"E\"'\nnvFUformat='\"F\"'\nnvGUformat='\"G\"'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='32'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvmantbits='52'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.o'\nold_pthread_create_joinable=''\noptimize='-O2'\norderlib='false'\nosname='linux'\nosvers='2.4.6-rmk1-np2-embedix'\notherlibdirs=' '\npackage='perl5'\npager='/usr/bin/less'\npasscat='cat /etc/passwd'\npatchlevel='9'\npath_sep=':'\nperl5='/usr/bin/perl'\nperl=''\nperl_patchlevel=''\nperl_static_inline='static'\nperladmin='red@criticalintegration.com'\nperllibs='-lnsl -ldl -lm -lcrypt -lutil -lc'\nperlpath='/usr/bin/perl'\npg='pg'\nphostname='hostname'\npidtype='pid_t'\nplibpth=''\npmake=''\npr=''\nprefix='/usr'\nprefixexp='/usr'\nprivlib='/usr/lib/perl5/5.30.3'\nprivlibexp='/usr/lib/perl5/5.30.3'\nprocselfexe='\"/proc/self/exe\"'\nprototype='define'\nptrsize='4'\nquadkind='3'\nquadtype='long long'\nrandbits='48'\nrandfunc='Perl_drand48'\nrandom_r_proto='0'\nrandseedtype='U32'\nranlib=':'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nrevision='5'\nrm='rm'\nrmail=''\nrun=''\nrunnm='false'\nsGMTIME_max='2147483647'\nsGMTIME_min='0'\nsLOCALTIME_max='2147483647'\nsLOCALTIME_min='0'\nsPRIEUldbl='\"E\"'\nsPRIFUldbl='\"F\"'\nsPRIGUldbl='\"G\"'\nsPRIXU64='\"LX\"'\nsPRId64='\"Ld\"'\nsPRIeldbl='\"e\"'\nsPRIfldbl='\"f\"'\nsPRIgldbl='\"g\"'\nsPRIi64='\"Li\"'\nsPRIo64='\"Lo\"'\nsPRIu64='\"Lu\"'\nsPRIx64='\"Lx\"'\nsSCNfldbl='\"f\"'\nsched_yield='sched_yield()'\nscriptdir='/usr/bin'\nscriptdirexp='/usr/bin'\nsed='sed'\nseedfunc='Perl_drand48_init'\nselectminbits='32'\nselecttype='fd_set *'\nsendmail=''\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='/bin/sh'\nshar=''\nsharpbang='#!'\nshmattype='void *'\nshortsize='2'\nshrpenv=''\nshsharp='true'\nsig_count='64'\nsig_name='ZERO HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH IO PWR SYS RTMIN NUM33 NUM34 NUM35 NUM36 NUM37 NUM38 NUM39 NUM40 NUM41 NUM42 NUM43 NUM44 NUM45 NUM46 NUM47 NUM48 NUM49 NUM50 NUM51 NUM52 NUM53 NUM54 NUM55 NUM56 NUM57 NUM58 NUM59 NUM60 NUM61 NUM62 RTMAX IOT CLD POLL UNUSED '\nsig_name_init='\"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"TRAP\", \"ABRT\", \"BUS\", \"FPE\", \"KILL\", \"USR1\", \"SEGV\", \"USR2\", \"PIPE\", \"ALRM\", \"TERM\", \"STKFLT\", \"CHLD\", \"CONT\", \"STOP\", \"TSTP\", \"TTIN\", \"TTOU\", \"URG\", \"XCPU\", \"XFSZ\", \"VTALRM\", \"PROF\", \"WINCH\", \"IO\", \"PWR\", \"SYS\", \"RTMIN\", \"NUM33\", \"NUM34\", \"NUM35\", \"NUM36\", \"NUM37\", \"NUM38\", \"NUM39\", \"NUM40\", \"NUM41\", \"NUM42\", \"NUM43\", \"NUM44\", \"NUM45\", \"NUM46\", \"NUM47\", \"NUM48\", \"NUM49\", \"NUM50\", \"NUM51\", \"NUM52\", \"NUM53\", \"NUM54\", \"NUM55\", \"NUM56\", \"NUM57\", \"NUM58\", \"NUM59\", \"NUM60\", \"NUM61\", \"NUM62\", \"RTMAX\", \"IOT\", \"CLD\", \"POLL\", \"UNUSED\", 0'\nsig_num='0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 6 17 29 31 '\nsig_num_init='0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 6, 17, 29, 31, 0'\nsig_size='68'\nsignal_t='void'\nsitearch='/usr/lib/perl5/site_perl/5.30.3/armv4l-linux'\nsitearchexp='/usr/lib/perl5/site_perl/5.30.3/armv4l-linux'\nsitebin='/usr/bin'\nsitebinexp='/usr/bin'\nsitehtml1dir=''\nsitehtml1direxp=''\nsitehtml3dir=''\nsitehtml3direxp=''\nsitelib='/usr/lib/perl5/site_perl/5.30.3'\nsitelib_stem='/usr/lib/perl5/site_perl'\nsitelibexp='/usr/lib/perl5/site_perl/5.30.3'\nsiteman1dir='/usr/share/man/man1'\nsiteman1direxp='/usr/share/man/man1'\nsiteman3dir='/usr/share/man/man3'\nsiteman3direxp='/usr/share/man/man3'\nsiteprefix='/usr'\nsiteprefixexp='/usr'\nsitescript='/usr/bin'\nsitescriptexp='/usr/bin'\nsizesize='4'\nsizetype='size_t'\nsleep=''\nsmail=''\nso='so'\nsockethdr=''\nsocketlib=''\nsocksizetype='socklen_t'\nsort='sort'\nspackage='Perl5'\nspitshell='cat'\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc='.'\nssizetype='ssize_t'\nst_ino_sign='1'\nst_ino_size='4'\nstartperl='#!/usr/bin/perl'\nstartsh='#!/bin/sh'\nstatic_ext=' '\nstdchar='char'\nstdio_base='((fp)->_IO_read_base)'\nstdio_bufsiz='((fp)->_IO_read_end - (fp)->_IO_read_base)'\nstdio_cnt='((fp)->_IO_read_end - (fp)->_IO_read_ptr)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_IO_read_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\nstrings='/usr/include/string.h'\nsubmit=''\nsubversion='3'\nsysman='/usr/share/man/man1'\ntail=''\ntar=''\ntargetarch=''\ntargetsh='/bin/sh'\ntbl=''\ntee=''\ntest='test'\ntimeincl='/usr/include/sys/time.h /usr/include/time.h '\ntimetype='time_t'\ntmpnam_r_proto='0'\nto=':'\ntouch='touch'\ntr='tr'\ntrnl='\\n'\ntroff=''\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='unsigned long long'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"lu\"'\nuidsign='1'\nuidsize='4'\nuidtype='uid_t'\nuname='uname'\nuniq='uniq'\nuquadtype='unsigned long long'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='undef'\nusedl='define'\nusedtrace='undef'\nusefaststdio='define'\nuseithreads='undef'\nusekernprocpathname='undef'\nuselargefiles='define'\nuselongdouble='undef'\nusemallocwrap='define'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='define'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='true'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='false'\nusrinc='/usr/include'\nuuname=''\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvendorarch=''\nvendorarchexp=''\nvendorbin=''\nvendorbinexp=''\nvendorhtml1dir=' '\nvendorhtml1direxp=''\nvendorhtml3dir=' '\nvendorhtml3direxp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorman1dir=' '\nvendorman1direxp=''\nvendorman3dir=' '\nvendorman3direxp=''\nvendorprefix=''\nvendorprefixexp=''\nvendorscript=''\nvendorscriptexp=''\nversion='5.30.3'\nversion_patchlevel_string='version 30 subversion 3'\nversiononly='undef'\nvi=''\nxlibpth='/usr/lib/386 /lib/386'\nyacc='yacc'\nyaccflags=''\nzcat=''\nzip='zip'\n# Configure command line arguments.\nconfig_arg0='Configure'\nconfig_args=''\nconfig_argc=0\nPERL_REVISION=5\nPERL_VERSION=30\nPERL_SUBVERSION=3\nPERL_API_REVISION=5\nPERL_API_VERSION=30\nPERL_API_SUBVERSION=0\nPERL_PATCHLEVEL=\nPERL_CONFIG_SH=true\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/Cross/config.sh-arm-linux-n770": "#!/bin/sh\n#\n# This file was produced by running the Configure script. It holds all the\n# definitions figured out by Configure. Should you modify one of these values,\n# do not forget to propagate your changes by running \"Configure -der\". You may\n# instead choose to run each of the .SH files by yourself, or \"Configure -S\".\n#\n\n# Package name      : perl5\n# Source directory  : .\n# Configuration time: Wed Sep  3 22:24:58 EDT 2003\n# Configured by     : vadrer\n# Target system     : linux nokia770 armv5teji1\n\nAuthor=''\nDate='$Date'\nHeader=''\nId='$Id'\nLocker=''\nLog='$Log'\nMcc='Mcc'\nRCSfile='$RCSfile'\nRevision='$Revision'\nSource=''\nState=''\n_a='.arma'\n_exe='.arm'\n_o='.armo'\nafs='false'\nafsroot='/afs'\nalignbytes='4'\naphostname='/bin/hostname'\napi_revision='5'\napi_subversion='0'\napi_version='30'\napi_versionstring='5.30.0'\nar='ar'\narchlib='/usr/lib/perl5/5.30.3/armv4l-linux'\narchlibexp='/usr/lib/perl5/5.30.3/armv4l-linux'\narchname64=''\narchname='armv4l-linux'\narchobjs=''\nasctime_r_proto='0'\nawk='awk'\nbaserev='5.0'\nbash=''\nbin='/usr/bin'\nbinexp='/usr/bin'\nbison='bison'\nbyacc='byacc'\nbyteorder='1234'\nc=''\ncastflags='0'\ncat='cat'\ncc='arm-none-linux-gnueabi-gcc'\ncccdlflags='-fpic'\nccdlflags='-rdynamic -Wl,-rpath,/usr/lib/perl5/5.30.3/armv4l-linux/CORE'\nccflags='-fno-strict-aliasing -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'\nccflags_uselargefiles='-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'\nccname='arm-linux-gcc'\nccsymbols='__APCS_32__=1 __ARM_ARCH_3__=1 __CHAR_UNSIGNED__=1 __GNUC_MINOR__=95 __arm__=1 __linux=1 __linux__=1 __unix=1 __unix__=1 cpu=arm machine=arm system=posix system=unix'\nccversion=''\ncf_by='red'\ncf_email='red@criticalintegration.com'\ncf_time='Wed Sep  3 22:24:58 EDT 2003'\ncharbits='8'\nchgrp=''\nchmod='chmod'\nchown=''\nclocktype='clock_t'\ncomm='comm'\ncompress=''\ncontains='grep'\ncp='cp'\ncpio=''\ncpp='cpp'\ncpp_stuff='42'\ncppccsymbols='__ELF__=1 __GNUC__=2 linux=1 unix=1'\ncppflags='-fno-strict-aliasing -I/usr/local/include'\ncpplast='-'\ncppminus='-'\ncpprun='arm-none-linux-gnueabi-gcc -E'\ncppstdin='arm-none-linux-gnueabi-gcc -E'\ncppsymbols='_FILE_OFFSET_BITS=64 __GLIBC__=2 __GLIBC_MINOR__=2 __GNUC_MINOR__=95 __GNU_LIBRARY__=6 _LARGEFILE_SOURCE=1 _POSIX_C_SOURCE=199506 _POSIX_SOURCE=1 __STDC__=1 __USE_BSD=1 __USE_FILE_OFFSET64=1 __USE_LARGEFILE=1 __USE_MISC=1 __USE_POSIX=1 __USE_POSIX199309=1 __USE_POSIX199506=1 __USE_POSIX2=1 __USE_SVID=1 __linux=1 __linux__=1 __unix=1 __unix__=1'\ncrypt_r_proto='0'\ncryptlib=''\ncsh='csh'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='gcvt((x),(n),(b))'\nd_PRIEUldbl='define'\nd_PRIFUldbl='define'\nd_PRIGUldbl='define'\nd_PRIXU64='define'\nd_PRId64='define'\nd_PRIeldbl='define'\nd_PRIfldbl='define'\nd_PRIgldbl='define'\nd_PRIi64='define'\nd_PRIo64='define'\nd_PRIu64='define'\nd_PRIx64='define'\nd_SCNfldbl='define'\nd__fwalk='undef'\nd_accept4='undef'\nd_access='define'\nd_accessx='undef'\nd_acosh='define'\nd_aintl='undef'\nd_alarm='define'\nd_archlib='define'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='define'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bsd='undef'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_add_overflow='undef'\nd_builtin_choose_expr='define'\nd_builtin_expect='define'\nd_builtin_mul_overflow='undef'\nd_builtin_sub_overflow='undef'\nd_c99_variadic_macros='undef'\nd_casti32='define'\nd_castneg='define'\nd_cbrt='undef'\nd_chown='define'\nd_chroot='define'\nd_chsize='undef'\nd_class='undef'\nd_clearenv='define'\nd_closedir='define'\nd_cmsghdr_s='define'\nd_copysign='undef'\nd_copysignl='define'\nd_cplusplus='undef'\nd_crypt='define'\nd_crypt_r='undef'\nd_csh='define'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='define'\nd_dbl_dig='define'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='define'\nd_dir_dd_fd='undef'\nd_dirfd='define'\nd_dirnamlen='undef'\nd_dladdr='undef'\nd_dlerror='define'\nd_dlopen='define'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_double_has_inf='define'\nd_double_has_nan='define'\nd_double_has_negative_zero='define'\nd_double_has_subnormals='define'\nd_double_style_cray='undef'\nd_double_style_ibm='undef'\nd_double_style_ieee='define'\nd_double_style_vax='undef'\nd_drand48_r='undef'\nd_drand48proto='define'\nd_dup2='define'\nd_dup3='undef'\nd_duplocale='undef'\nd_eaccess='undef'\nd_endgrent='define'\nd_endgrent_r='undef'\nd_endhent='define'\nd_endhostent_r='undef'\nd_endnent='define'\nd_endnetent_r='undef'\nd_endpent='define'\nd_endprotoent_r='undef'\nd_endpwent='define'\nd_endpwent_r='undef'\nd_endsent='define'\nd_endservent_r='undef'\nd_eofnblk='define'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='define'\nd_fchdir='define'\nd_fchmod='define'\nd_fchmodat='undef'\nd_fchown='define'\nd_fcntl='define'\nd_fcntl_can_lock='define'\nd_fd_macros='define'\nd_fd_set='define'\nd_fdclose='undef'\nd_fdim='undef'\nd_fds_bits='undef'\nd_fegetround='define'\nd_fgetpos='define'\nd_finite='define'\nd_finitel='define'\nd_flexfnam='define'\nd_flock='define'\nd_flockproto='define'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='define'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='define'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_freelocale='undef'\nd_frexpl='define'\nd_fs_data_s='undef'\nd_fseeko='define'\nd_fsetpos='define'\nd_fstatfs='define'\nd_fstatvfs='define'\nd_fsync='define'\nd_ftello='define'\nd_ftime='undef'\nd_futimes='undef'\nd_gai_strerror='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='define'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='define'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='define'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='define'\nd_getitimer='define'\nd_getlogin='define'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='define'\nd_getnameinfo='undef'\nd_getnbyaddr='define'\nd_getnbyname='define'\nd_getnent='define'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='define'\nd_getpagsz='define'\nd_getpbyname='define'\nd_getpbynumber='define'\nd_getpent='define'\nd_getpgid='define'\nd_getpgrp2='undef'\nd_getpgrp='define'\nd_getppid='define'\nd_getprior='define'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='define'\nd_getprpwnam='undef'\nd_getpwent='define'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='define'\nd_getsent='define'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='define'\nd_getspnam='define'\nd_getspnam_r='undef'\nd_gettimeod='define'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='define'\nd_grpasswd='define'\nd_hasmntopt='define'\nd_htonl='define'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='define'\nd_inc_version_list='define'\nd_index='undef'\nd_inetaton='define'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='define'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='define'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='define'\nd_isinfl='define'\nd_isless='undef'\nd_isnan='define'\nd_isnanl='define'\nd_isnormal='undef'\nd_j0='define'\nd_j0l='define'\nd_killpg='define'\nd_lc_monetary_2008='undef'\nd_lchown='define'\nd_ldbl_dig='define'\nd_ldexpl='define'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='define'\nd_link='define'\nd_linkat='undef'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localeconv_l='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='define'\nd_lockf='define'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_long_double_style_ieee='undef'\nd_long_double_style_ieee_doubledouble='undef'\nd_long_double_style_ieee_extended='undef'\nd_long_double_style_ieee_std='undef'\nd_long_double_style_vax='undef'\nd_longdbl='define'\nd_longlong='define'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='define'\nd_lstat='define'\nd_madvise='define'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='define'\nd_mbrlen='undef'\nd_mbrtowc='undef'\nd_mbstowcs='define'\nd_mbtowc='define'\nd_memmem='undef'\nd_memrchr='undef'\nd_mkdir='define'\nd_mkdtemp='define'\nd_mkfifo='define'\nd_mkostemp='undef'\nd_mkstemp='define'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='define'\nd_mmap='define'\nd_modfl='define'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='define'\nd_msg='define'\nd_msg_ctrunc='define'\nd_msg_dontroute='define'\nd_msg_oob='define'\nd_msg_peek='define'\nd_msg_proxy='define'\nd_msgctl='define'\nd_msgget='define'\nd_msghdr_s='define'\nd_msgrcv='define'\nd_msgsnd='define'\nd_msync='define'\nd_munmap='define'\nd_mymalloc='undef'\nd_nan='undef'\nd_nanosleep='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_newlocale='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='define'\nd_nl_langinfo='define'\nd_nv_preserves_uv='define'\nd_nv_zero_is_allbits_zero='undef'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='define'\nd_openat='undef'\nd_pathconf='define'\nd_pause='define'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe2='undef'\nd_pipe='define'\nd_poll='define'\nd_portable='define'\nd_prctl='define'\nd_prctl_set_name='define'\nd_printf_format_null='undef'\nd_procselfexe='define'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='define'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='define'\nd_pwpasswd='define'\nd_pwquota='undef'\nd_qgcvt='define'\nd_quad='define'\nd_querylocale='undef'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='define'\nd_readv='define'\nd_recvmsg='define'\nd_regcomp='undef'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_renameat='undef'\nd_rewinddir='define'\nd_rint='undef'\nd_rmdir='define'\nd_round='undef'\nd_sbrkproto='define'\nd_scalbn='undef'\nd_scalbnl='define'\nd_sched_yield='define'\nd_scm_rights='define'\nd_seekdir='define'\nd_select='define'\nd_sem='define'\nd_semctl='define'\nd_semctl_semid_ds='define'\nd_semctl_semun='define'\nd_semget='define'\nd_semop='define'\nd_sendmsg='define'\nd_setegid='define'\nd_seteuid='define'\nd_setgrent='define'\nd_setgrent_r='undef'\nd_setgrps='define'\nd_sethent='define'\nd_sethostent_r='undef'\nd_setitimer='define'\nd_setlinebuf='define'\nd_setlocale='define'\nd_setlocale_accepts_any_locale_name='undef'\nd_setlocale_r='undef'\nd_setnent='define'\nd_setnetent_r='undef'\nd_setpent='define'\nd_setpgid='define'\nd_setpgrp2='undef'\nd_setpgrp='define'\nd_setprior='define'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='define'\nd_setpwent_r='undef'\nd_setregid='define'\nd_setresgid='define'\nd_setresuid='define'\nd_setreuid='define'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='define'\nd_setservent_r='undef'\nd_setsid='define'\nd_setvbuf='define'\nd_shm='define'\nd_shmat='define'\nd_shmatprototype='define'\nd_shmctl='define'\nd_shmdt='define'\nd_shmget='define'\nd_sigaction='define'\nd_siginfo_si_addr='undef'\nd_siginfo_si_band='undef'\nd_siginfo_si_errno='undef'\nd_siginfo_si_pid='undef'\nd_siginfo_si_status='undef'\nd_siginfo_si_uid='undef'\nd_siginfo_si_value='undef'\nd_signbit='define'\nd_sigprocmask='define'\nd_sigsetjmp='define'\nd_sin6_scope_id='undef'\nd_sitearch='define'\nd_snprintf='undef'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='define'\nd_socklen_t='define'\nd_sockpair='define'\nd_socks5_init='undef'\nd_sqrtl='define'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='define'\nd_statfs_f_flags='undef'\nd_statfs_s='define'\nd_static_inline='undef'\nd_statvfs='define'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='define'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='define'\nd_stdio_stream_array='undef'\nd_stdiobase='define'\nd_stdstdio='define'\nd_strcoll='define'\nd_strerror_l='undef'\nd_strerror_r='undef'\nd_strftime='define'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strnlen='undef'\nd_strtod='define'\nd_strtod_l='undef'\nd_strtol='define'\nd_strtold='define'\nd_strtold_l='undef'\nd_strtoll='define'\nd_strtoq='define'\nd_strtoul='define'\nd_strtoull='define'\nd_strtouq='define'\nd_strxfrm='define'\nd_suidsafe='undef'\nd_symlink='define'\nd_syscall='define'\nd_syscallproto='define'\nd_sysconf='define'\nd_sysernlst=''\nd_syserrlst='define'\nd_system='define'\nd_tcgetpgrp='define'\nd_tcsetpgrp='define'\nd_telldir='define'\nd_telldirproto='define'\nd_tgamma='undef'\nd_thread_safe_nl_langinfo_l='undef'\nd_time='define'\nd_timegm='define'\nd_times='define'\nd_tm_tm_gmtoff='define'\nd_tm_tm_zone='define'\nd_tmpnam_r='undef'\nd_towlower='undef'\nd_towupper='undef'\nd_trunc='undef'\nd_truncate='define'\nd_truncl='define'\nd_ttyname_r='undef'\nd_tzname='define'\nd_u32align='undef'\nd_ualarm='define'\nd_umask='define'\nd_uname='define'\nd_union_semun='undef'\nd_unlinkat='undef'\nd_unordered='undef'\nd_unsetenv='define'\nd_uselocale='undef'\nd_usleep='define'\nd_usleepproto='define'\nd_ustat='define'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vendorscript='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='define'\nd_voidtty=''\nd_vsnprintf='define'\nd_wait4='define'\nd_waitpid='define'\nd_wcscmp='undef'\nd_wcstombs='define'\nd_wcsxfrm='undef'\nd_wctomb='define'\nd_writev='define'\nd_xenix='undef'\ndate='date'\ndb_hashtype='u_int32_t'\ndb_prefixtype='size_t'\ndb_version_major=''\ndb_version_minor=''\ndb_version_patch=''\ndefault_inc_excludes_dot='undef'\ndirentrytype='struct dirent'\ndlext='so'\ndlsrc='dl_dlopen.xs'\ndoubleinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f'\ndoublekind='3'\ndoublemantbits='52'\ndoublenanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f'\ndoublesize='8'\ndrand01='Perl_drand48()'\ndrand48_r_proto='0'\ndynamic_ext='B ByteLoader Cwd Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call I18N/Langinfo IO IPC/SysV List/Util MIME/Base64 Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap attributes re threads threads/shared'\neagain='EAGAIN'\nebcdic='undef'\necho='echo'\negrep='egrep'\nemacs=''\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext=''\nexpr='expr'\nextensions='B ByteLoader Cwd Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call I18N/Langinfo IO IPC/SysV List/Util MIME/Base64 Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap attributes re threads threads/shared Errno'\nextras=''\nfflushNULL='define'\nfflushall='undef'\nfind=''\nfirstmakefile='makefile'\nflex=''\nfpossize='16'\nfpostype='fpos_t'\nfreetype='void'\nfrom=':'\nfull_ar='/usr/bin/ar'\nfull_csh='/bin/csh'\nfull_sed='/bin/sed'\ngccansipedantic=''\ngccosandvers=''\ngccversion='2.95.3 20010125 (prerelease)'\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"lu\"'\ngidsign='1'\ngidsize='4'\ngidtype='gid_t'\nglibpth='/usr/shlib  /lib /usr/lib /usr/lib/386 /lib/386 /usr/ccs/lib /usr/ucblib /usr/local/lib '\ngmake='gmake'\ngmtime_r_proto='0'\ngnulibc_version='2.2.2'\ngrep='grep'\ngroupcat='cat /etc/group'\ngroupstype='gid_t'\ngzip='gzip'\nh_fcntl='false'\nh_sysfile='true'\nhint='recommended'\nhostcat='cat /etc/hosts'\nhtml1dir=' '\nhtml1direxp=''\nhtml3dir=' '\nhtml3direxp=''\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='long long'\ni8size='1'\ni8type='char'\ni_arpainet='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='define'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='define'\ni_execinfo='undef'\ni_fcntl='undef'\ni_fenv='define'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='define'\ni_ieeefp='undef'\ni_inttypes='define'\ni_langinfo='define'\ni_libutil='undef'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='define'\ni_mallocmalloc='undef'\ni_mntent='define'\ni_ndbm='undef'\ni_netdb='define'\ni_neterrno='undef'\ni_netinettcp='define'\ni_niin='define'\ni_poll='define'\ni_prot='undef'\ni_pthread='define'\ni_pwd='define'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='define'\ni_socks='undef'\ni_stdbool='undef'\ni_stdint='define'\ni_stdlib='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='define'\ni_sysfile='define'\ni_sysfilio='undef'\ni_sysin='undef'\ni_sysioctl='define'\ni_syslog='define'\ni_sysmman='define'\ni_sysmode='undef'\ni_sysmount='define'\ni_sysndir='undef'\ni_sysparam='define'\ni_syspoll='undef'\ni_sysresrc='define'\ni_syssecrt='undef'\ni_sysselct='define'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='define'\ni_sysstatvfs='define'\ni_systime='define'\ni_systimek='undef'\ni_systimes='define'\ni_systypes='define'\ni_sysuio='define'\ni_sysun='define'\ni_sysutsname='define'\ni_sysvfs='define'\ni_syswait='define'\ni_termio='undef'\ni_termios='define'\ni_time='define'\ni_unistd='define'\ni_ustat='define'\ni_utime='define'\ni_vfork='undef'\ni_wchar='undef'\ni_wctype='undef'\ni_xlocale='undef'\nignore_versioned_solibs='y'\ninc_version_list=' '\ninc_version_list_init='0'\nincpath=''\ninews=''\ninstallarchlib='./install_me_here/usr/lib/perl5/5.30.3/armv4l-linux'\ninstallbin='./install_me_here/usr/bin'\ninstallhtml1dir=''\ninstallhtml3dir=''\ninstallman1dir='./install_me_here/usr/share/man/man1'\ninstallman3dir='./install_me_here/usr/share/man/man3'\ninstallprefix='./install_me_here/usr'\ninstallprefixexp='./install_me_here/usr'\ninstallprivlib='./install_me_here/usr/lib/perl5/5.30.3'\ninstallscript='./install_me_here/usr/bin'\ninstallsitearch='./install_me_here/usr/lib/perl5/site_perl/5.30.3/armv4l-linux'\ninstallsitebin='./install_me_here/usr/bin'\ninstallsitehtml1dir=''\ninstallsitehtml3dir=''\ninstallsitelib='./install_me_here/usr/lib/perl5/site_perl/5.30.3'\ninstallsiteman1dir='./install_me_here/usr/share/man/man1'\ninstallsiteman3dir='./install_me_here/usr/share/man/man3'\ninstallsitescript='./install_me_here/usr/bin'\ninstallstyle='./install_me_herelib/perl5'\ninstallusrbinperl='undef'\ninstallvendorarch=''\ninstallvendorbin=''\ninstallvendorhtml1dir=''\ninstallvendorhtml3dir=''\ninstallvendorlib=''\ninstallvendorman1dir=''\ninstallvendorman3dir=''\ninstallvendorscript=''\nintsize='4'\nissymlink='/usr/bin/test -h'\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nknown_extensions='B ByteLoader Cwd DB_File Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call GDBM_File I18N/Langinfo IO IPC/SysV List/Util MIME/Base64 NDBM_File ODBM_File Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap attributes re threads threads/shared'\nksh=''\nld='arm-none-linux-gnueabi-gcc'\nlddlflags='-shared -L/usr/local/lib'\nldflags=' -L/usr/local/lib'\nldflags_uselargefiles=''\nldlibpthname='LD_LIBRARY_PATH'\nless='less'\nlib_ext='.arma'\nlibc='/lib/libc-2.2.2.so'\nlibperl='libperl.arma'\nlibpth='/usr/local/lib /lib /usr/lib'\nlibs='-lnsl -ldl -lm -lcrypt -lutil -lc'\nlibsdirs=' /usr/lib'\nlibsfiles=' libnsl.so libdl.so libm.so libcrypt.so libutil.so libc.so'\nlibsfound=' /usr/lib/libnsl.so /usr/lib/libdl.so /usr/lib/libm.so /usr/lib/libcrypt.so /usr/lib/libutil.so /usr/lib/libc.so'\nlibspath=' /usr/local/lib /lib /usr/lib'\nlibswanted='socket bind inet nsl nm ndbm gdbm dbm db malloc dl ld sun m crypt sec util c cposix posix ucb BSD'\nlibswanted_uselargefiles=''\nline=''\nlint=''\nlkflags=''\nln='ln'\nlns='/bin/ln -s'\nlocaltime_r_proto='0'\nlocincpth='/usr/local/include /opt/local/include /usr/gnu/include /opt/gnu/include /usr/GNU/include /opt/GNU/include'\nloclibpth='/usr/local/lib /opt/local/lib /usr/gnu/lib /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib'\nlongdblinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'\nlongdblkind='0'\nlongdblmantbits='64'\nlongdblnanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'\nlongdblsize='8'\nlonglongsize='8'\nlongsize='4'\nlp=''\nlpr=''\nls='ls'\nlseeksize='8'\nlseektype='off_t'\nmad='undef'\nmail=''\nmailx=''\nmake='make'\nmake_set_make='#'\nmallocobj=''\nmallocsrc=''\nmalloctype='void *'\nman1dir='/usr/share/man/man1'\nman1direxp='/usr/share/man/man1'\nman1ext='1'\nman3dir='/usr/share/man/man3'\nman3direxp='/usr/share/man/man3'\nman3ext='3'\nmips_type=''\nmistrustnm=''\nmkdir='mkdir'\nmmaptype='void *'\nmodetype='mode_t'\nmore='more'\nmultiarch='undef'\nmv=''\nmyarchname='armv4l-linux'\nmydomain='.criticalintegration.com'\nmyhostname='openzaurus'\nmyuname='linux openzaurus.criticalintegration.com 2.4.6-rmk1-np2-embedix #15 Wed Aug 6 07:49:44 UTC 2003 armv4l unknown '\nn='-n'\nneed_va_copy='undef'\nnetdb_hlen_type='size_t'\nnetdb_host_type='const void *'\nnetdb_name_type='const char *'\nnetdb_net_type='in_addr_t'\nnm='nm'\nnm_opt=''\nnm_so_opt='--dynamic'\nnonxs_ext='Errno'\nnroff='nroff'\nnvEUformat='\"E\"'\nnvFUformat='\"F\"'\nnvGUformat='\"G\"'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='32'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvmantbits='52'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.armo'\nold_pthread_create_joinable=''\noptimize='-O2'\norderlib='false'\nosname='linux'\nosvers='2.6'\notherlibdirs=' '\npackage='perl5'\npager='/usr/bin/less'\npasscat='cat /etc/passwd'\npatchlevel='11'\npath_sep=':'\nperl5='/usr/bin/perl'\nperl=''\nperl_patchlevel=''\nperl_static_inline='static'\nperladmin='red@criticalintegration.com'\nperllibs='-lnsl -ldl -lm -lcrypt -lutil -lc'\nperlpath='/usr/bin/perl'\npg='pg'\nphostname='hostname'\npidtype='pid_t'\nplibpth=''\npmake=''\npr=''\nprefix='/usr'\nprefixexp='/usr'\nprivlib='/usr/lib/perl5/5.30.3'\nprivlibexp='/usr/lib/perl5/5.30.3'\nprocselfexe='\"/proc/self/exe\"'\nprototype='define'\nptrsize='4'\nquadkind='3'\nquadtype='long long'\nrandbits='48'\nrandfunc='Perl_drand48'\nrandom_r_proto='0'\nrandseedtype='U32'\nranlib=':'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nrevision='5'\nrm='rm'\nrmail=''\nrun=''\nrunnm='false'\nsGMTIME_max='2147483647'\nsGMTIME_min='0'\nsLOCALTIME_max='2147483647'\nsLOCALTIME_min='0'\nsPRIEUldbl='\"E\"'\nsPRIFUldbl='\"F\"'\nsPRIGUldbl='\"G\"'\nsPRIXU64='\"LX\"'\nsPRId64='\"Ld\"'\nsPRIeldbl='\"e\"'\nsPRIfldbl='\"f\"'\nsPRIgldbl='\"g\"'\nsPRIi64='\"Li\"'\nsPRIo64='\"Lo\"'\nsPRIu64='\"Lu\"'\nsPRIx64='\"Lx\"'\nsSCNfldbl='\"f\"'\nsched_yield='sched_yield()'\nscriptdir='/usr/bin'\nscriptdirexp='/usr/bin'\nsed='sed'\nseedfunc='Perl_drand48_init'\nselectminbits='32'\nselecttype='fd_set *'\nsendmail=''\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='/bin/sh'\nshar=''\nsharpbang='#!'\nshmattype='void *'\nshortsize='2'\nshrpenv=''\nshsharp='true'\nsig_count='64'\nsig_name='ZERO HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH IO PWR SYS RTMIN NUM33 NUM34 NUM35 NUM36 NUM37 NUM38 NUM39 NUM40 NUM41 NUM42 NUM43 NUM44 NUM45 NUM46 NUM47 NUM48 NUM49 NUM50 NUM51 NUM52 NUM53 NUM54 NUM55 NUM56 NUM57 NUM58 NUM59 NUM60 NUM61 NUM62 RTMAX IOT CLD POLL UNUSED '\nsig_name_init='\"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"TRAP\", \"ABRT\", \"BUS\", \"FPE\", \"KILL\", \"USR1\", \"SEGV\", \"USR2\", \"PIPE\", \"ALRM\", \"TERM\", \"STKFLT\", \"CHLD\", \"CONT\", \"STOP\", \"TSTP\", \"TTIN\", \"TTOU\", \"URG\", \"XCPU\", \"XFSZ\", \"VTALRM\", \"PROF\", \"WINCH\", \"IO\", \"PWR\", \"SYS\", \"RTMIN\", \"NUM33\", \"NUM34\", \"NUM35\", \"NUM36\", \"NUM37\", \"NUM38\", \"NUM39\", \"NUM40\", \"NUM41\", \"NUM42\", \"NUM43\", \"NUM44\", \"NUM45\", \"NUM46\", \"NUM47\", \"NUM48\", \"NUM49\", \"NUM50\", \"NUM51\", \"NUM52\", \"NUM53\", \"NUM54\", \"NUM55\", \"NUM56\", \"NUM57\", \"NUM58\", \"NUM59\", \"NUM60\", \"NUM61\", \"NUM62\", \"RTMAX\", \"IOT\", \"CLD\", \"POLL\", \"UNUSED\", 0'\nsig_num='0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 6 17 29 31 '\nsig_num_init='0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 6, 17, 29, 31, 0'\nsig_size='68'\nsignal_t='void'\nsitearch='/usr/lib/perl5/site_perl/5.30.3/armv4l-linux'\nsitearchexp='/usr/lib/perl5/site_perl/5.30.3/armv4l-linux'\nsitebin='/usr/bin'\nsitebinexp='/usr/bin'\nsitehtml1dir=''\nsitehtml1direxp=''\nsitehtml3dir=''\nsitehtml3direxp=''\nsitelib='/usr/lib/perl5/site_perl/5.30.3'\nsitelib_stem='/usr/lib/perl5/site_perl'\nsitelibexp='/usr/lib/perl5/site_perl/5.30.3'\nsiteman1dir='/usr/share/man/man1'\nsiteman1direxp='/usr/share/man/man1'\nsiteman3dir='/usr/share/man/man3'\nsiteman3direxp='/usr/share/man/man3'\nsiteprefix='/usr'\nsiteprefixexp='/usr'\nsitescript='/usr/bin'\nsitescriptexp='/usr/bin'\nsizesize='4'\nsizetype='size_t'\nsleep=''\nsmail=''\nso='so'\nsockethdr=''\nsocketlib=''\nsocksizetype='socklen_t'\nsort='sort'\nspackage='Perl5'\nspitshell='cat'\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc='.'\nssizetype='ssize_t'\nst_ino_sign='1'\nst_ino_size='4'\nstartperl='#!/usr/bin/perl'\nstartsh='#!/bin/sh'\nstatic_ext='DynaLoader '\nstdchar='char'\nstdio_base='((fp)->_IO_read_base)'\nstdio_bufsiz='((fp)->_IO_read_end - (fp)->_IO_read_base)'\nstdio_cnt='((fp)->_IO_read_end - (fp)->_IO_read_ptr)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_IO_read_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\nstrings='/usr/include/string.h'\nsubmit=''\nsubversion='3'\nsysman='/usr/share/man/man1'\ntail=''\ntar=''\ntargetarch=''\ntargetsh='/bin/sh'\ntbl=''\ntee=''\ntest='test'\ntimeincl='/usr/include/sys/time.h /usr/include/time.h '\ntimetype='time_t'\ntmpnam_r_proto='0'\nto=':'\ntouch='touch'\ntr='tr'\ntrnl='\\n'\ntroff=''\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='unsigned long long'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"lu\"'\nuidsign='1'\nuidsize='4'\nuidtype='uid_t'\nuname='uname'\nuniq='uniq'\nuquadtype='unsigned long long'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='undef'\nusedl='define'\nusedtrace='undef'\nusefaststdio='define'\nuseithreads='undef'\nusekernprocpathname='undef'\nuselargefiles='define'\nuselongdouble='undef'\nusemallocwrap='define'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='define'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='true'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='false'\nusrinc='/usr/include'\nuuname=''\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvendorarch=''\nvendorarchexp=''\nvendorbin=''\nvendorbinexp=''\nvendorhtml1dir=' '\nvendorhtml1direxp=''\nvendorhtml3dir=' '\nvendorhtml3direxp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorman1dir=' '\nvendorman1direxp=''\nvendorman3dir=' '\nvendorman3direxp=''\nvendorprefix=''\nvendorprefixexp=''\nvendorscript=''\nvendorscriptexp=''\nversion='5.30.3'\nversion_patchlevel_string='version 30 subversion 3'\nversiononly='undef'\nvi=''\nxlibpth='/usr/lib/386 /lib/386'\nyacc='yacc'\nyaccflags=''\nzcat=''\nzip='zip'\n# Configure command line arguments.\nconfig_arg0='Configure'\nconfig_args=''\nconfig_argc=0\nPERL_REVISION=5\nPERL_VERSION=30\nPERL_SUBVERSION=3\nPERL_API_REVISION=5\nPERL_API_VERSION=30\nPERL_API_SUBVERSION=0\nPERL_PATCHLEVEL=\nPERL_CONFIG_SH=true\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/plan9/config.plan9": "/*\n * This file is mangled by fndvers (and perhaps other scripts) to produce\n * the config.h for Plan 9. It was handwritten because the standard\n * configuration scripts were written in a shell dialect incomprehensible\n * to Plan 9. \n * config.h for Plan 9\n * Version: 5.8.0\n */                 \n\n/* Configuration time: 21-Oct-1996 15:11\n * Configured by: Luther Huffman, lutherh@stratcom.com\n * Target system: Plan 9\n */\n\n/*\n * Mangled by Jarkko Hietaniemi 2003-02-02 based on Russ Cox'\n * blood, sweat, and tears.\n *\n */\n\n#ifndef _config_h_\n#define _config_h_\n\n/* CAT2:\n *\tThis macro catenates 2 tokens together.\n */\n\n#define CAT2(a,b)a ## b\n#define CAT3(a,b,c)a ## b ## c\n#define CAT4(a,b,c,d)a ## b ## c ## d\n#define CAT5(a,b,c,d,e)a ## b ## c ## d ## e\n#define StGiFy(a)# a\n#define STRINGIFY(a)StGiFy(a)\n#define SCAT2(a,b)StGiFy(a) StGiFy(b)\n#define SCAT3(a,b,c)StGiFy(a) StGiFy(b) StGiFy(c)\n#define SCAT4(a,b,c,d)StGiFy(a) StGiFy(b) StGiFy(c) StGiFy(d)\n#define SCAT5(a,b,c,d,e)StGiFy(a) StGiFy(b) StGiFy(c) StGiFy(d) StGiFy(e)\n\n/* config-start */\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble. Usual values are 2, 4 and 8.\n */\n#if (_P9P_OBJTYPE == 386) || (_P9P_OBJTYPE==power)\n#\tdefine MEM_ALIGNBYTES 4\t /* config-skip */\n#else\n# if _P9P_OBJTYPE == 68020\n#\tdefine MEM_ALIGNBYTES 2  /* config-skip */\n# else\n#\tdefine MEM_ALIGNBYTES 8 /* config-skip */\n# endif\n#endif\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n#define BIN \"/_P9P_OBJTYPE/bin\"\t/*  */\n#define BIN_EXP \"/_P9P_OBJTYPE/bin\"\t/*  */\n\n/* LOC_SED:\n *\tThis symbol holds the complete pathname to the sed program.\n */\n#define LOC_SED \t\"/bin/sed\"\t/**/\n\n/* HAS_AINTL:\n *\tThis symbol, if defined, indicates that the aintl routine is\n *\tavailable.  If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_AINTL\t\t/ **/\n\n/* HAS_ALARM:\n *\tThis symbol, if defined, indicates that the alarm routine is\n *\tavailable.\n */\n#define HAS_ALARM\t\t/**/\n\n/* HASATTRIBUTE:\n *\tThis symbol indicates the C compiler can check for function attributes,\n *\tsuch as printf formats. This is normally only supported by GNU cc.\n */\n/*#define HASATTRIBUTE \t/* config-skip */\n#ifndef HASATTRIBUTE\n#ifdef __attribute__\n#undef __attribute__\n#endif\n#define __attribute__(_arg_)\n#endif\n\n/* HAS_CHOWN:\n *\tThis symbol, if defined, indicates that the chown routine is\n *\tavailable.\n */\n#define HAS_CHOWN\t\t/**/\n\n/* HAS_CHROOT:\n *\tThis symbol, if defined, indicates that the chroot routine is\n *\tavailable.\n */\n/*#define HAS_CHROOT\t\t/ **/\n\n/* HAS_CHSIZE:\n *\tThis symbol, if defined, indicates that the chsize routine is available\n *\tto truncate files.  You might need a -lx to get this routine.\n */\n/*#define\tHAS_CHSIZE\t\t/ **/\n\n/* HAS_CUSERID:\n *\tThis symbol, if defined, indicates that the cuserid routine is\n *\tavailable to get character login names.\n */\n#define HAS_CUSERID\t\t/**/\n\n/* HAS_DIFFTIME:\n *\tThis symbol, if defined, indicates that the difftime routine is\n *\tavailable.\n */\n#define HAS_DIFFTIME\t\t/**/\n\n/* HAS_DLERROR:\n *\tThis symbol, if defined, indicates that the dlerror routine is\n *\tavailable to return a string describing the last error that\n *\toccurred from a call to dlopen(), dlclose() or dlsym().\n */\n/*#define HAS_DLERROR\t/ **/\n\n/* HAS_DUP2:\n *\tThis symbol, if defined, indicates that the dup2 routine is\n *\tavailable to duplicate file descriptors.\n */\n#define HAS_DUP2\t/**/\n\n/* HAS_FCHMOD:\n *\tThis symbol, if defined, indicates that the fchmod routine is available\n *\tto change mode of opened files.  If unavailable, use chmod().\n */\n#define HAS_FCHMOD\t\t/**/\n\n/* HAS_FCHOWN:\n *\tThis symbol, if defined, indicates that the fchown routine is available\n *\tto change ownership of opened files.  If unavailable, use chown().\n */\n/*#define HAS_FCHOWN\t\t/ **/\n\n/* HAS_FCNTL:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe fcntl() function exists.\n */\n#define HAS_FCNTL\t\t/**/\n\n/* HAS_FGETPOS:\n *\tThis symbol, if defined, indicates that the fgetpos routine is\n *\tavailable to get the file position indicator, similar to ftell().\n */\n#define HAS_FGETPOS\t/**/\n\n/* HAS_FLOCK:\n *\tThis symbol, if defined, indicates that the flock routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_FLOCK\t\t/ **/\n\n/* HAS_FORK:\n *\tThis symbol, if defined, indicates that the fork routine is\n *\tavailable.\n */\n#define HAS_FORK\t\t/**/\n\n/* HAS_FSETPOS:\n *\tThis symbol, if defined, indicates that the fsetpos routine is\n *\tavailable to set the file position indicator, similar to fseek().\n */\n#define HAS_FSETPOS\t/**/\n\n/* HAS_GETTIMEOFDAY:\n *\tThis symbol, if defined, indicates that the gettimeofday() system\n *\tcall is available for a sub-second accuracy clock. Usually, the file\n *\t<sys/resource.h> needs to be included (see I_SYS_RESOURCE).\n *\tThe type \"Timeval\" should be used to refer to \"struct timeval\".\n */\n#define HAS_GETTIMEOFDAY\t/**/\n#ifdef HAS_GETTIMEOFDAY\n#define Timeval struct timeval\t/* Structure used by gettimeofday() */ /* config-skip */\n#endif\n\n/* HAS_GETGROUPS:\n *\tThis symbol, if defined, indicates that the getgroups() routine is\n *\tavailable to get the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n#define HAS_GETGROUPS\t\t/* config-skip */\n\n/* HAS_GETLOGIN:\n *\tThis symbol, if defined, indicates that the getlogin routine is\n *\tavailable to get the login name.\n */\n#define HAS_GETLOGIN\t\t/**/\n\n/* HAS_GETPGID:\n *\tThis symbol, if defined, indicates to the C program that \n *\tthe getpgid(pid) function is available to get the\n *\tprocess group id.\n */\n/*#define HAS_GETPGID\t\t/ **/\n\n/* HAS_GETPGRP2:\n *\tThis symbol, if defined, indicates that the getpgrp2() (as in DG/UX)\n *\troutine is available to get the current process group.\n */\n/*#define HAS_GETPGRP2\t\t/ **/\n\n/* HAS_GETPPID:\n *\tThis symbol, if defined, indicates that the getppid routine is\n *\tavailable to get the parent process ID.\n */\n#define HAS_GETPPID\t\t/**/\n\n/* HAS_GETPRIORITY:\n *\tThis symbol, if defined, indicates that the getpriority routine is\n *\tavailable to get a process's priority.\n */\n/*#define HAS_GETPRIORITY\t\t/ **/\n\n/* HAS_INET_ATON:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tinet_aton() function is available to parse IP address \"dotted-quad\"\n *\tstrings.\n */\n/*#define HAS_INET_ATON\t\t/ **/\n\n/* HAS_KILLPG:\n *\tThis symbol, if defined, indicates that the killpg routine is available\n *\tto kill process groups.  If unavailable, you probably should use kill\n *\twith a negative process number.\n */\n/*#define HAS_KILLPG\t/ **/\n\n/* HAS_LINK:\n *\tThis symbol, if defined, indicates that the link routine is\n *\tavailable to create hard links.\n */\n/* #define HAS_LINK\t/**/\n\n/* HAS_LOCALECONV:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable for numeric and monetary formatting conventions.\n */\n#define HAS_LOCALECONV\t/**/\n\n/* HAS_LOCKF:\n *\tThis symbol, if defined, indicates that the lockf routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_LOCKF\t\t/ **/\n\n/* HAS_LSTAT:\n *\tThis symbol, if defined, indicates that the lstat routine is\n *\tavailable to do file stats on symbolic links.\n */\n/*#define HAS_LSTAT\t\t/**/\n\n/* HAS_MBLEN:\n *\tThis symbol, if defined, indicates that the mblen routine is available\n *\tto find the number of bytes in a multibye character.\n */\n#define HAS_MBLEN\t\t/**/\n\n/* HAS_MBSTOWCS:\n *\tThis symbol, if defined, indicates that the mbstowcs routine is\n *\tavailable to covert a multibyte string into a wide character string.\n */\n#define\tHAS_MBSTOWCS\t\t/**/\n\n/* HAS_MBTOWC:\n *\tThis symbol, if defined, indicates that the mbtowc routine is available\n *\tto covert a multibyte to a wide character.\n */\n#define HAS_MBTOWC\t\t/**/\n\n/* HAS_MKDIR:\n *\tThis symbol, if defined, indicates that the mkdir routine is available\n *\tto create directories.  Otherwise you should fork off a new process to\n *\texec /bin/mkdir.\n */\n#define HAS_MKDIR\t\t/**/\n\n/* HAS_MKFIFO:\n *\tThis symbol, if defined, indicates that the mkfifo routine is\n *\tavailable to create FIFOs. Otherwise, mknod should be able to\n *\tdo it for you. However, if mkfifo is there, mknod might require\n *\tsuper-user privileges which mkfifo will not.\n */\n#define HAS_MKFIFO\t\t/**/\n\n/* HAS_MKTIME:\n *\tThis symbol, if defined, indicates that the mktime routine is\n *\tavailable.\n */\n#define HAS_MKTIME\t\t/**/\n\n/* HAS_MSYNC:\n *\tThis symbol, if defined, indicates that the msync system call is\n *\tavailable to synchronize a mapped file.\n */\n/*#define HAS_MSYNC\t\t/ **/\n\n/* HAS_MUNMAP:\n *\tThis symbol, if defined, indicates that the munmap system call is\n *\tavailable to unmap a region, usually mapped by mmap().\n */\n/*#define HAS_MUNMAP\t\t/ **/\n\n/* HAS_NICE:\n *\tThis symbol, if defined, indicates that the nice routine is\n *\tavailable.\n */\n/*#define HAS_NICE\t\t/ **/\n\n/* HAS_PATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given filename.\n */\n/* HAS_FPATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given open file descriptor.\n */\n#define HAS_PATHCONF\t\t/**/\n#define HAS_FPATHCONF\t\t/**/\n\n/* HAS_PAUSE:\n *\tThis symbol, if defined, indicates that the pause routine is\n *\tavailable to suspend a process until a signal is received.\n */\n#define HAS_PAUSE\t\t/**/\n\n/* HAS_PIPE:\n *\tThis symbol, if defined, indicates that the pipe routine is\n *\tavailable to create an inter-process channel.\n */\n#define HAS_PIPE\t\t/**/\n\n/* HAS_POLL:\n *\tThis symbol, if defined, indicates that the poll routine is\n *\tavailable to poll active file descriptors. You may safely\n *\tinclude <poll.h> when this symbol is defined.\n */\n/*#define HAS_POLL\t\t/ **/\n\n/* HAS_READDIR:\n *\tThis symbol, if defined, indicates that the readdir routine is\n *\tavailable to read directory entries. You may have to include\n *\t<dirent.h>. See I_DIRENT.\n */\n#define HAS_READDIR\t\t/**/\n\n/* HAS_SEEKDIR:\n *\tThis symbol, if defined, indicates that the seekdir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n/*#define HAS_SEEKDIR\t\t/ **/\n\n/* HAS_TELLDIR:\n *\tThis symbol, if defined, indicates that the telldir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n/*#define HAS_TELLDIR\t\t/ **/\n\n/* HAS_REWINDDIR:\n *\tThis symbol, if defined, indicates that the rewinddir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_REWINDDIR\t\t/**/\n\n/* HAS_READLINK:\n *\tThis symbol, if defined, indicates that the readlink routine is\n *\tavailable to read the value of a symbolic link.\n */\n/*#define HAS_READLINK\t\t/**/\n\n/* HAS_RENAME:\n *\tThis symbol, if defined, indicates that the rename routine is available\n *\tto rename files.  Otherwise you should do the unlink(), link(), unlink()\n *\ttrick.\n */\n#define HAS_RENAME\t/**/\n\n/* HAS_RMDIR:\n *\tThis symbol, if defined, indicates that the rmdir routine is\n *\tavailable to remove directories. Otherwise you should fork off a\n *\tnew process to exec /bin/rmdir.\n */\n#define HAS_RMDIR\t\t/**/\n\n/* HAS_SELECT:\n *\tThis symbol, if defined, indicates that the select routine is\n *\tavailable to select active file descriptors. If the timeout field\n *\tis used, <sys/time.h> may need to be included.\n */\n#define HAS_SELECT\t/* config-skip */\n\n/* HAS_SETEGID:\n *\tThis symbol, if defined, indicates that the setegid routine is available\n *\tto change the effective gid of the current program.\n */\n/*#define HAS_SETEGID\t\t/ **/\n\n/* HAS_SETEUID:\n *\tThis symbol, if defined, indicates that the seteuid routine is available\n *\tto change the effective uid of the current program.\n */\n/*#define HAS_SETEUID\t\t/ **/\n\n/* HAS_SETLINEBUF:\n *\tThis symbol, if defined, indicates that the setlinebuf routine is\n *\tavailable to change stderr or stdout from block-buffered or unbuffered\n *\tto a line-buffered mode.\n */\n#define HAS_SETLINEBUF\t\t/**/\n\n/* HAS_SETLOCALE:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable to handle locale-specific ctype implementations.\n */\n#define HAS_SETLOCALE\t/**/\n\n/* HAS_SETPGID:\n *\tThis symbol, if defined, indicates that the setpgid(pid, gpid)\n *\troutine is available to set process group ID.\n */\n#define HAS_SETPGID\t/**/\n\n/* HAS_SETPGRP2:\n *\tThis symbol, if defined, indicates that the setpgrp2() (as in DG/UX)\n *\troutine is available to set the current process group.\n */\n/*#define HAS_SETPGRP2\t\t/ **/\n\n/* HAS_SETPRIORITY:\n *\tThis symbol, if defined, indicates that the setpriority routine is\n *\tavailable to set a process's priority.\n */\n/*#define HAS_SETPRIORITY\t\t/ **/\n\n/* HAS_SETREGID:\n *\tThis symbol, if defined, indicates that the setregid routine is\n *\tavailable to change the real and effective gid of the current\n *\tprocess.\n */\n/* HAS_SETRESGID:\n *\tThis symbol, if defined, indicates that the setresgid routine is\n *\tavailable to change the real, effective and saved gid of the current\n *\tprocess.\n */\n/*#define HAS_SETREGID\t\t/ **/\n/*#define HAS_SETRESGID\t\t/ **/\n\n/* HAS_SETREUID:\n *\tThis symbol, if defined, indicates that the setreuid routine is\n *\tavailable to change the real and effective uid of the current\n *\tprocess.\n */\n/* HAS_SETRESUID:\n *\tThis symbol, if defined, indicates that the setresuid routine is\n *\tavailable to change the real, effective and saved uid of the current\n *\tprocess.\n */\n/*#define HAS_SETREUID\t\t/ **/\n/*#define HAS_SETRESUID\t\t/ **/\n\n/* HAS_SETRGID:\n *\tThis symbol, if defined, indicates that the setrgid routine is available\n *\tto change the real gid of the current program.\n */\n/*#define HAS_SETRGID\t\t/ **/\n\n/* HAS_SETRUID:\n *\tThis symbol, if defined, indicates that the setruid routine is available\n *\tto change the real uid of the current program.\n */\n/*#define HAS_SETRUID\t\t/ **/\n\n/* HAS_SETSID:\n *\tThis symbol, if defined, indicates that the setsid routine is\n *\tavailable to set the process group ID.\n */\n#define HAS_SETSID\t/**/\n\n/* HAS_STRCOLL:\n *\tThis symbol, if defined, indicates that the strcoll routine is\n *\tavailable to compare strings using collating information.\n */\n#define HAS_STRCOLL\t/**/\n\n/* HAS_STRTOD:\n *\tThis symbol, if defined, indicates that the strtod routine is\n *\tavailable to provide better numeric string conversion than atof().\n */\n#define HAS_STRTOD\t/**/\n\n/* HAS_STRTOL:\n *\tThis symbol, if defined, indicates that the strtol routine is available\n *\tto provide better numeric string conversion than atoi() and friends.\n */\n#define HAS_STRTOL\t/**/\n\n/* HAS_STRXFRM:\n *\tThis symbol, if defined, indicates that the strxfrm() routine is\n *\tavailable to transform strings.\n */\n#define HAS_STRXFRM\t/**/\n\n/* HAS_SYMLINK:\n *\tThis symbol, if defined, indicates that the symlink routine is available\n *\tto create symbolic links.\n */\n/*#define HAS_SYMLINK\t/**/\n\n/* HAS_SYSCALL:\n *\tThis symbol, if defined, indicates that the syscall routine is\n *\tavailable to call arbitrary system calls. If undefined, that's tough.\n */\n/*#define HAS_SYSCALL\t/ **/\n\n/* HAS_SYSCONF:\n *\tThis symbol, if defined, indicates that sysconf() is available\n *\tto determine system related limits and options.\n */\n#define HAS_SYSCONF\t/**/\n\n/* HAS_SYSTEM:\n *\tThis symbol, if defined, indicates that the system routine is\n *\tavailable to issue a shell command.\n */\n#define HAS_SYSTEM\t/**/\n\n/* HAS_TCGETPGRP:\n *\tThis symbol, if defined, indicates that the tcgetpgrp routine is\n *\tavailable to get foreground process group ID.\n */\n#define HAS_TCGETPGRP\t\t/**/\n\n/* HAS_TCSETPGRP:\n *\tThis symbol, if defined, indicates that the tcsetpgrp routine is\n *\tavailable to set foreground process group ID.\n */\n#define HAS_TCSETPGRP\t\t/**/\n\n/* HAS_TRUNCATE:\n *\tThis symbol, if defined, indicates that the truncate routine is\n *\tavailable to truncate files.\n */\n/*#define HAS_TRUNCATE\t/ **/\n\n/* HAS_TZNAME:\n *\tThis symbol, if defined, indicates that the tzname[] array is\n *\tavailable to access timezone names.\n */\n#define HAS_TZNAME\t\t/**/\n\n/* HAS_UMASK:\n *\tThis symbol, if defined, indicates that the umask routine is\n *\tavailable to set and get the value of the file creation mask.\n */\n#define HAS_UMASK\t\t/**/\n\n/* HAS_USLEEP:\n *\tThis symbol, if defined, indicates that the usleep routine is\n *\tavailable to let the process sleep on a sub-second accuracy.\n */\n/*#define HAS_USLEEP\t\t/ **/\n\n/* HAS_WAIT4:\n *\tThis symbol, if defined, indicates that wait4() exists.\n */\n/*#define HAS_WAIT4\t/ **/\n\n/* HAS_WAITPID:\n *\tThis symbol, if defined, indicates that the waitpid routine is\n *\tavailable to wait for child process.\n */\n#define HAS_WAITPID\t/**/\n\n/* HAS_WCSTOMBS:\n *\tThis symbol, if defined, indicates that the wcstombs routine is\n *\tavailable to convert wide character strings to multibyte strings.\n */\n#define HAS_WCSTOMBS\t/**/\n\n/* HAS_WCTOMB:\n *\tThis symbol, if defined, indicates that the wctomb routine is available\n *\tto covert a wide character to a multibyte.\n */\n#define HAS_WCTOMB\t\t/**/\n\n/* I_ARPA_INET:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <arpa/inet.h> to get inet_addr and friends declarations.\n */\n#define\tI_ARPA_INET\t\t/**/\n\n/* I_DBM:\n *\tThis symbol, if defined, indicates that <dbm.h> exists and should\n *\tbe included.\n */\n/* I_RPCSVC_DBM:\n *\tThis symbol, if defined, indicates that <rpcsvc/dbm.h> exists and\n *\tshould be included.\n */\n/*#define I_DBM\t/ **/\n/*#define I_RPCSVC_DBM\t/ **/\n\n/* I_DIRENT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <dirent.h>. Using this symbol also triggers the definition\n *\tof the Direntry_t define which ends up being 'struct dirent' or\n *\t'struct direct' depending on the availability of <dirent.h>.\n */\n/* DIRNAMLEN:\n *\tThis symbol, if defined, indicates to the C program that the length\n *\tof directory entry names is provided by a d_namlen field.  Otherwise\n *\tyou need to do strlen() on the d_name field.\n */\n/* Direntry_t:\n *\tThis symbol is set to 'struct direct' or 'struct dirent' depending on\n *\twhether dirent is available or not. You should use this pseudo type to\n *\tportably declare your directory entries.\n */\n#define I_DIRENT\t\t/**/\n/*#define DIRNAMLEN\t/ **/\n#define Direntry_t struct dirent\n\n/* I_DLFCN:\n *\tThis symbol, if defined, indicates that <dlfcn.h> exists and should\n *\tbe included.\n */\n/*#define I_DLFCN\t\t/ **/\n\n/* I_FCNTL:\n *\tThis manifest constant tells the C program to include <fcntl.h>.\n */\n#define I_FCNTL\t/**/\n\n/* I_LOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <locale.h>.\n */\n#define\tI_LOCALE\t\t/**/\n\n/* I_NET_ERRNO:\n *\tThis symbol, if defined, indicates that <net/errno.h> exists and \n *\tshould be included.\n */\n/*#define I_NET_ERRNO\t\t/* config-skip */\n\n/* I_NETINET_IN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/in.h>. Otherwise, you may try <sys/in.h>.\n */\n#define I_NETINET_IN\t/* config-skip */\n\n/* I_SYS_DIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/dir.h>.\n */\n/*#define I_SYS_DIR\t\t/ **/\n\n/* I_SYS_FILE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/file.h> to get definition of R_OK and friends.\n */\n/*#define I_SYS_FILE\t\t/ **/\n\n/* I_SYS_IOCTL:\n *\tThis symbol, if defined, indicates that <sys/ioctl.h> exists and should\n *\tbe included. Otherwise, include <sgtty.h> or <termio.h>.\n */\n/* I_SYS_SOCKIO:\n *\tThis symbol, if defined, indicates the <sys/sockio.h> should be included\n *\tto get socket ioctl options, like SIOCATMARK.\n */\n#define\tI_SYS_IOCTL\t\t/**/\n/*#define I_SYS_SOCKIO\t/ **/\n\n/* I_SYS_NDIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/ndir.h>.\n */\n/*#define I_SYS_NDIR\t/ **/\n\n/* I_SYS_PARAM:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/param.h>.\n */\n#define I_SYS_PARAM\t\t/**/\n\n/* I_SYS_RESOURCE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/resource.h>.\n */\n#define I_SYS_RESOURCE\t\t/**/\n\n/* Plan 9: file position in Plan 9 is <select.h> */\n/* I_SYS_SELECT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/select.h> in order to get definition of struct timeval.\n */\n#define I_SYS_SELECT\t/**/\n\n/* I_SYS_STAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/stat.h>.\n */\n#define\tI_SYS_STAT\t\t/**/\n\n/* I_SYS_TIMES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/times.h>.\n */\n#define\tI_SYS_TIMES\t\t/**/\n\n/* I_SYS_TYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/types.h>.\n */\n#define\tI_SYS_TYPES\t\t/**/\n\n/* I_SYS_UN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/un.h> to get UNIX domain socket definitions.\n */\n#define I_SYS_UN\t\t/**/\n\n/* I_SYS_WAIT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/wait.h>.\n */\n#define I_SYS_WAIT\t/**/\n\n/* I_TERMIO:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<termio.h> rather than <sgtty.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/* I_TERMIOS:\n *\tThis symbol, if defined, indicates that the program should include\n *\tthe POSIX termios.h rather than sgtty.h or termio.h.\n *\tThere are also differences in the ioctl() calls that depend on the\n *\tvalue of this symbol.\n */\n/* I_SGTTY:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<sgtty.h> rather than <termio.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/*#define I_TERMIO\t\t/ **/\n#define I_TERMIOS\t\t/**/\n/*#define I_SGTTY\t\t/ **/\n\n/* I_UNISTD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <unistd.h>.\n */\n#define I_UNISTD\t\t/**/\n\n/* I_UTIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <utime.h>.\n */\n#define I_UTIME\t\t/**/\n\n/* I_VFORK:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude vfork.h.\n */\n/*#define I_VFORK\t/ **/\n\n/* INTSIZE:\n *\tThis symbol contains the value of sizeof(int) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* LONGSIZE:\n *\tThis symbol contains the value of sizeof(long) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* SHORTSIZE:\n *\tThis symbol contains the value of sizeof(short) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n#define INTSIZE 4\t\t/**/\n#define LONGSIZE 4\t\t/**/\n#define SHORTSIZE 2\t\t/**/\n\n/* MULTIARCH:\n *\tThis symbol, if defined, signifies that the build\n *\tprocess will produce some binary files that are going to be\n *\tused in a cross-platform environment.  This is the case for\n *\texample with the NeXT \"fat\" binaries that contain executables\n *\tfor several CPUs.\n */\n/*#define MULTIARCH\t\t/ **/\n\n/* HAS_QUAD:\n *\tThis symbol, if defined, tells that there's a 64-bit integer type,\n *\tQuad_t, and its unsigned counterpart, Uquad_t. QUADKIND will be one\n *\tof QUAD_IS_INT, QUAD_IS_LONG, QUAD_IS_LONG_LONG, or QUAD_IS_INT64_T.\n */\n#define HAS_QUAD\t/**/\n#ifdef HAS_QUAD\n#   define Quad_t long long\t/**/\n#   define Uquad_t unsigned long long\t/**/\n#   define QUADKIND 3\t/**/\n#   define QUAD_IS_INT\t1\n#   define QUAD_IS_LONG\t2\n#   define QUAD_IS_LONG_LONG\t3\n#   define QUAD_IS_INT64_T\t4\n#endif\n\n/* HAS_ACCESSX:\n *\tThis symbol, if defined, indicates that the accessx routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_ACCESSX\t\t/ **/\n\n/* HAS_EACCESS:\n *\tThis symbol, if defined, indicates that the eaccess routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_EACCESS\t\t/ **/\n\n/* I_SYS_ACCESS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/access.h>.\n */\n/*#define   I_SYS_ACCESS                / **/\n\n/* I_SYS_SECURITY:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/security.h>.\n */\n/*#define   I_SYS_SECURITY\t/ **/\n\n/* OSNAME:\n *\tThis symbol contains the name of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n/* OSVERS:\n *\tThis symbol contains the version of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n#define OSNAME \"plan9\"\t\t/**/\n#define OSVERS \"1\"\t\t/**/\n\n/* PLAN9:\n * This symbol, if defined, indicates that the program is running under the\n * Plan 9 operating system.\n */\n#define PLAN9           /**/\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble, or a long double when applicable. Usual values are 2,\n *\t4 and 8. The default is eight, for safety.\n */\n#if defined(MULTIARCH)\n#  define MEM_ALIGNBYTES 8\n#else\n#define MEM_ALIGNBYTES 4\n#endif\n\n/* ARCHLIB:\n *\tThis variable, if defined, holds the name of the directory in\n *\twhich the user wants to put architecture-dependent public\n *\tlibrary files for perl.  It is most often a local directory\n *\tsuch as /usr/local/lib.  Programs using this variable must be\n *\tprepared to deal with filename expansion.  If ARCHLIB is the\n *\tsame as PRIVLIB, it is not defined, since presumably the\n *\tprogram already searches PRIVLIB.\n */\n/* ARCHLIB_EXP:\n *\tThis symbol contains the ~name expanded version of ARCHLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define ARCHLIB_EXP \"/_P9P_OBJTYPE/lib/perl/_P9P_VERSION\"\n#define ARCHLIB \"/_P9P_OBJTYPE/lib/perl/_P9P_VERSION\"\n\n/* ARCHNAME:\n *\tThis symbol holds a string representing the architecture name.\n *\tIt may be used to construct an architecture-dependant pathname\n *\twhere library files may be held under a private library, for\n *\tinstance.\n */\n#define ARCHNAME \"plan9__P9P_OBJTYPE\"  /**/\n\n/* HAS_ATOLF:\n *\tThis symbol, if defined, indicates that the atolf routine is\n *\tavailable to convert strings into long doubles.\n */\n/*#define HAS_ATOLF\t\t/ **/\n\n/* HAS_ATOLL:\n *\tThis symbol, if defined, indicates that the atoll routine is\n *\tavailable to convert strings into long longs.\n */\n#define HAS_ATOLL\t\t/**/\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n#define BIN \"/usr/bin\"\t/**/\n#define BIN_EXP \"/usr/bin\"\t/**/\n\n/* BYTEORDER:\n *\tThis symbol holds the hexadecimal constant defined in byteorder,\n *\tin a UV, i.e. 0x1234 or 0x4321 or 0x12345678, etc...\n *\tIf the compiler supports cross-compiling or multiple-architecture\n *\tbinaries (eg. on NeXT systems), use compiler-defined macros to\n *\tdetermine the byte order.\n *\tOn NeXT 3.2 (and greater), you can build \"Fat\" Multiple Architecture\n *\tBinaries (MAB) on either big endian or little endian machines.\n *\tThe endian-ness is available at compile-time.  This only matters\n *\tfor perl, where the config.h can be generated and installed on \n *\tone system, and used by a different architecture to build an\n *\textension.  Older versions of NeXT that might not have\n *\tdefined either *_ENDIAN__ were all on Motorola 680x0 series,\n *\tso the default case (for NeXT) is big endian to catch them. \n *\tThis might matter for NeXT 3.0.\n */\n#if defined(MULTIARCH)\n#  ifdef __LITTLE_ENDIAN__\n#    if LONGSIZE == 4\n#      define BYTEORDER 0x1234\t/* config-skip */\n#    else\n#      if LONGSIZE == 8\n#        define BYTEORDER 0x12345678\t/* config-skip */\n#      endif\n#    endif\n#  else\n#    ifdef __BIG_ENDIAN__\n#      if LONGSIZE == 4\n#        define BYTEORDER 0x4321\n#      else\n#        if LONGSIZE == 8\n#          define BYTEORDER 0x87654321\n#        endif\n#      endif\n#    endif\n#  endif\n#  if !defined(BYTEORDER) && (defined(NeXT) || defined(__NeXT__))\n#    define BYTEORDER 0x4321\n#  endif\n#else\n#define BYTEORDER 0x1234\t/* large digits for MSB */\n#endif /* NeXT */\n\n/* CAT2:\n *\tThis macro catenates 2 tokens together.\n */\n/* STRINGIFY:\n *\tThis macro surrounds its token with double quotes.\n */\n#if 42 == 1\n#define CAT2(a,b)\ta/**/b\n#define STRINGIFY(a)\t\"a\"\n\t\t/* If you can get stringification with catify, tell me how! */\n#endif\n#if 42 == 42\n#define PeRl_CaTiFy(a, b)\ta ## b\t\n#define PeRl_StGiFy(a)\t#a\n/* the additional level of indirection enables these macros to be\n * used as arguments to other macros.  See K&R 2nd ed., page 231. */\n#define CAT2(a,b)\tPeRl_CaTiFy(a,b)\n#define StGiFy(a)\tPeRl_StGiFy(a)\n#define STRINGIFY(a)\tPeRl_StGiFy(a)\n#endif\n#if 42 != 1 && 42 != 42\n#   include \"Bletch: How does this C preprocessor concatenate tokens?\"\n#endif\n\n/* CPPSTDIN:\n *\tThis symbol contains the first part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.\t Typical value of \"cc -E\" or \"/lib/cpp\", but it can also\n *\tcall a wrapper. See CPPRUN.\n */\n/* CPPMINUS:\n *\tThis symbol contains the second part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  This symbol will have the value \"-\" if CPPSTDIN needs a minus\n *\tto specify standard input, otherwise the value is \"\".\n */\n/* CPPRUN:\n *\tThis symbol contains the string which will invoke a C preprocessor on\n *\tthe standard input and produce to standard output. It needs to end\n *\twith CPPLAST, after all other preprocessor flags have been specified.\n *\tThe main difference with CPPSTDIN is that this program will never be a\n *\tpointer to a shell wrapper, i.e. it will be empty if no preprocessor is\n *\tavailable directly to the user. Note that it may well be different from\n *\tthe preprocessor used to compile the C program.\n */\n/* CPPLAST:\n *\tThis symbol is intended to be used along with CPPRUN in the same manner\n *\tsymbol CPPMINUS is used with CPPSTDIN. It contains either \"-\" or \"\".\n */\n#define CPPSTDIN \"cppstdin\"\n#define CPPMINUS \"\"\n#define CPPRUN \"/bin/cpp\"\n#define CPPLAST \"\"\n\n/* HAS__FWALK:\n *\tThis symbol, if defined, indicates that the _fwalk system call is\n *\tavailable to apply a function to all the file handles.\n */\n/*#define HAS__FWALK\t\t/ **/\n\n/* HAS_ACCESS:\n *\tThis manifest constant lets the C program know that the access()\n *\tsystem call is available to check for accessibility using real UID/GID.\n *\t(always present on UNIX.)\n */\n#define HAS_ACCESS\t\t/**/\n\n/* HAS_ASCTIME_R:\n *\tThis symbol, if defined, indicates that the asctime_r routine\n *\tis available to asctime re-entrantly.\n */\n/* ASCTIME_R_PROTO:\n *\tThis symbol encodes the prototype of asctime_r.\n *\tIt is zero if d_asctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_asctime_r\n *\tis defined.\n */\n/*#define HAS_ASCTIME_R\t   / **/\n#define ASCTIME_R_PROTO 0\t   /**/\n\n/* CASTI32:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tor large floating point numbers to 32-bit ints.\n */\n/*#define\tCASTI32\t\t/ **/\n\n/* CASTNEGFLOAT:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tnumbers to unsigned longs, ints and shorts.\n */\n/* CASTFLAGS:\n *\tThis symbol contains flags that say what difficulties the compiler\n *\thas casting odd floating values to unsigned long:\n *\t\t0 = ok\n *\t\t1 = couldn't cast < 0\n *\t\t2 = couldn't cast >= 0x80000000\n *\t\t4 = couldn't cast in argument expression list\n */\n/*#define\tCASTNEGFLOAT\t\t/* config-skip */\n#if _P9P_OBJTYPE == 386\n#  define CASTFLAGS 3           /**/ /* config-skip */\n#else\n#  define CASTFLAGS 0           /**/ /* config-skip */\n#endif\n\n/* HAS_CLASS:\n *\tThis symbol, if defined, indicates that the class routine is\n *\tavailable to classify doubles.  Available for example in AIX.\n *\tThe returned values are defined in <float.h> and are:\n *\n *\tFP_PLUS_NORM\tPositive normalized, nonzero\n *\tFP_MINUS_NORM\tNegative normalized, nonzero\n *\tFP_PLUS_DENORM\tPositive denormalized, nonzero\n *\tFP_MINUS_DENORM\tNegative denormalized, nonzero\n *\tFP_PLUS_ZERO\t+0.0\n *\tFP_MINUS_ZERO\t-0.0\n *\tFP_PLUS_INF\t+INF\n *\tFP_MINUS_INF\t-INF\n *\tFP_NANS\t\tSignaling Not a Number (NaNS)\n *\tFP_NANQ\t\tQuiet Not a Number (NaNQ)\n */\n/*#define HAS_CLASS\t\t/ **/\n\n/* VOID_CLOSEDIR:\n *\tThis symbol, if defined, indicates that the closedir() routine\n *\tdoes not return a value.\n */\n/*#define VOID_CLOSEDIR\t\t/ **/\n\n/* HAS_STRUCT_CMSGHDR:\n *\tThis symbol, if defined, indicates that the struct cmsghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_CMSGHDR\t/ **/\n\n/* HAS_CRYPT_R:\n *\tThis symbol, if defined, indicates that the crypt_r routine\n *\tis available to crypt re-entrantly.\n */\n/* CRYPT_R_PROTO:\n *\tThis symbol encodes the prototype of crypt_r.\n *\tIt is zero if d_crypt_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_crypt_r\n *\tis defined.\n */\n/*#define HAS_CRYPT_R\t   / **/\n#define CRYPT_R_PROTO 0\t   /**/\n\n/* HAS_CSH:\n *\tThis symbol, if defined, indicates that the C-shell exists.\n */\n/* CSH:\n *\tThis symbol, if defined, contains the full pathname of csh.\n */\n/*#define HAS_CSH\t\t/ **/\n#ifdef HAS_CSH\n#define CSH \"csh\"\t/**/\n#endif\n\n/* HAS_CTIME_R:\n *\tThis symbol, if defined, indicates that the ctime_r routine\n *\tis available to ctime re-entrantly.\n */\n/* CTIME_R_PROTO:\n *\tThis symbol encodes the prototype of ctime_r.\n *\tIt is zero if d_ctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctime_r\n *\tis defined.\n */\n/*#define HAS_CTIME_R\t   / **/\n#define CTIME_R_PROTO 0\t   /**/\n\n/* DLSYM_NEEDS_UNDERSCORE:\n *\tThis symbol, if defined, indicates that we need to prepend an\n *\tunderscore to the symbol name before calling dlsym().  This only\n *\tmakes sense if you *have* dlsym, which we will presume is the\n *\tcase if you're using dl_dlopen.xs.\n */\n/*#define \tDLSYM_NEEDS_UNDERSCORE \t/ **/\n\n/* HAS_DRAND48_R:\n *\tThis symbol, if defined, indicates that the drand48_r routine\n *\tis available to drand48 re-entrantly.\n */\n/* DRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of drand48_r.\n *\tIt is zero if d_drand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_drand48_r\n *\tis defined.\n */\n/*#define HAS_DRAND48_R\t   / **/\n#define DRAND48_R_PROTO 0\t   /**/\n\n/* HAS_DRAND48_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the drand48() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern double drand48(void);\n */\n/*#define\tHAS_DRAND48_PROTO\t/ **/\n\n/* HAS_ENDGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the group database.\n */\n#define HAS_ENDGRENT\t\t/**/\n\n/* HAS_ENDGRENT_R:\n *\tThis symbol, if defined, indicates that the endgrent_r routine\n *\tis available to endgrent re-entrantly.\n */\n/* ENDGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of endgrent_r.\n *\tIt is zero if d_endgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endgrent_r\n *\tis defined.\n */\n/*#define HAS_ENDGRENT_R\t   / **/\n#define ENDGRENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDHOSTENT:\n *\tThis symbol, if defined, indicates that the endhostent() routine is\n *\tavailable to close whatever was being used for host queries.\n */\n#define HAS_ENDHOSTENT\t\t/**/\n\n/* HAS_ENDNETENT:\n *\tThis symbol, if defined, indicates that the endnetent() routine is\n *\tavailable to close whatever was being used for network queries.\n */\n/*#define HAS_ENDNETENT\t\t/ **/\n\n/* HAS_ENDPROTOENT:\n *\tThis symbol, if defined, indicates that the endprotoent() routine is\n *\tavailable to close whatever was being used for protocol queries.\n */\n/*#define HAS_ENDPROTOENT\t\t/ **/\n\n/* HAS_ENDPWENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the passwd database.\n */\n#define HAS_ENDPWENT\t\t/**/\n\n/* HAS_ENDPWENT_R:\n *\tThis symbol, if defined, indicates that the endpwent_r routine\n *\tis available to endpwent re-entrantly.\n */\n/* ENDPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of endpwent_r.\n *\tIt is zero if d_endpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endpwent_r\n *\tis defined.\n */\n/*#define HAS_ENDPWENT_R\t   / **/\n#define ENDPWENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDSERVENT:\n *\tThis symbol, if defined, indicates that the endservent() routine is\n *\tavailable to close whatever was being used for service queries.\n */\n/*#define HAS_ENDSERVENT\t\t/ **/\n\n/* HAS_FAST_STDIO:\n *\tThis symbol, if defined, indicates that the \"fast stdio\"\n *\tis available to manipulate the stdio buffers directly.\n */\n/*#define HAS_FAST_STDIO\t\t/**/\n\n/* HAS_FCHDIR:\n *\tThis symbol, if defined, indicates that the fchdir routine is\n *\tavailable to change directory using a file descriptor.\n */\n/*#define HAS_FCHDIR\t\t/ **/\n\n/* FCNTL_CAN_LOCK:\n *\tThis symbol, if defined, indicates that fcntl() can be used\n *\tfor file locking.  Normally on Unix systems this is defined.\n *\tIt may be undefined on VMS.\n */\n/*#define FCNTL_CAN_LOCK\t\t/ **/\n\n/* HAS_FD_SET:\n *\tThis symbol, when defined, indicates presence of the fd_set typedef\n *\tin <sys/types.h>\n */\n/*#define HAS_FD_SET\t/ **/\n\n/* HAS_FINITE:\n *\tThis symbol, if defined, indicates that the finite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_FINITE\t\t/ **/\n\n/* HAS_FINITEL:\n *\tThis symbol, if defined, indicates that the finitel routine is\n *\tavailable to check whether a long double is finite\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_FINITEL\t\t/ **/\n\n/* FLEXFILENAMES:\n *\tThis symbol, if defined, indicates that the system supports filenames\n *\tlonger than 14 characters.\n */\n#define\tFLEXFILENAMES\t\t/**/\n\n/* HAS_FP_CLASS:\n *\tThis symbol, if defined, indicates that the fp_class routine is\n *\tavailable to classify doubles.  Available for example in Digital UNIX.\n *\tThe returned values are defined in <math.h> and are:\n *\n *\tFP_SNAN           Signaling NaN (Not-a-Number)\n *\tFP_QNAN           Quiet NaN (Not-a-Number)\n *\tFP_POS_INF        +infinity\n *\tFP_NEG_INF        -infinity\n *\tFP_POS_NORM       Positive normalized\n *\tFP_NEG_NORM       Negative normalized\n *\tFP_POS_DENORM     Positive denormalized\n *\tFP_NEG_DENORM     Negative denormalized\n *\tFP_POS_ZERO       +0.0 (positive zero)\n *\tFP_NEG_ZERO       -0.0 (negative zero)\n */\n/*#define HAS_FP_CLASS\t\t/ **/\n\n/* HAS_FPCLASS:\n *\tThis symbol, if defined, indicates that the fpclass routine is\n *\tavailable to classify doubles.  Available for example in Solaris/SVR4.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASS\t\t/ **/\n\n/* HAS_FPCLASSIFY:\n *\tThis symbol, if defined, indicates that the fpclassify routine is\n *\tavailable to classify doubles.  Available for example in HP-UX.\n *\tThe returned values are defined in <math.h> and are\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n/*#define HAS_FPCLASSIFY\t\t/ **/\n\n/* HAS_FPOS64_T:\n *\tThis symbol will be defined if the C compiler supports fpos64_t.\n */\n/*#define\tHAS_FPOS64_T    \t/ **/\n\n/* HAS_FREXPL:\n *\tThis symbol, if defined, indicates that the frexpl routine is\n *\tavailable to break a long double floating-point number into\n *\ta normalized fraction and an integral power of 2.\n */\n/*#define HAS_FREXPL\t\t/ **/\n\n/* HAS_STRUCT_FS_DATA:\n *\tThis symbol, if defined, indicates that the struct fs_data\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_FS_DATA\t/ **/\n\n/* HAS_FSEEKO:\n *\tThis symbol, if defined, indicates that the fseeko routine is\n *\tavailable to fseek beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FSEEKO\t\t/ **/\n\n/* HAS_FSTATFS:\n *\tThis symbol, if defined, indicates that the fstatfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATFS\t\t/ **/\n\n/* HAS_FSYNC:\n *\tThis symbol, if defined, indicates that the fsync routine is\n *\tavailable to write a file's modified data and attributes to\n *\tpermanent storage.\n */\n#define HAS_FSYNC\t\t/**/\n\n/* HAS_FTELLO:\n *\tThis symbol, if defined, indicates that the ftello routine is\n *\tavailable to ftell beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FTELLO\t\t/ **/\n\n/* Gconvert:\n *\tThis preprocessor macro is defined to convert a floating point\n *\tnumber to a string without a trailing decimal point.  This\n *\temulates the behavior of sprintf(\"%g\"), but is sometimes much more\n *\tefficient.  If gconvert() is not available, but gcvt() drops the\n *\ttrailing decimal point, then gcvt() is used.  If all else fails,\n *\ta macro using sprintf(\"%g\") is used. Arguments for the Gconvert\n *\tmacro are: value, number of digits, whether trailing zeros should\n *\tbe retained, and the output buffer.\n *\tThe usual values are:\n *\t\td_Gconvert='gconvert((x),(n),(t),(b))'\n *\t\td_Gconvert='gcvt((x),(n),(b))'\n *\t\td_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\n *\tThe last two assume trailing zeros should not be kept.\n */\n#define Gconvert(x,n,t,b) sprintf((b),\"%.*g\",(n),(x))\n\n/* HAS_GETCWD:\n *\tThis symbol, if defined, indicates that the getcwd routine is\n *\tavailable to get the current working directory.\n */\n#define HAS_GETCWD\t\t/**/\n\n/* HAS_GETESPWNAM:\n *\tThis symbol, if defined, indicates that the getespwnam system call is\n *\tavailable to retrieve enhanced (shadow) password entries by name.\n */\n/*#define HAS_GETESPWNAM\t\t/ **/\n\n/* HAS_GETFSSTAT:\n *\tThis symbol, if defined, indicates that the getfsstat routine is\n *\tavailable to stat filesystems in bulk.\n */\n/*#define HAS_GETFSSTAT\t\t/ **/\n\n/* HAS_GETGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for sequential access of the group database.\n */\n#define HAS_GETGRENT\t\t/**/\n\n/* HAS_GETGRENT_R:\n *\tThis symbol, if defined, indicates that the getgrent_r routine\n *\tis available to getgrent re-entrantly.\n */\n/* GETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of getgrent_r.\n *\tIt is zero if d_getgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrent_r\n *\tis defined.\n */\n/*#define HAS_GETGRENT_R\t   / **/\n#define GETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_GETGRGID_R:\n *\tThis symbol, if defined, indicates that the getgrgid_r routine\n *\tis available to getgrgid re-entrantly.\n */\n/* GETGRGID_R_PROTO:\n *\tThis symbol encodes the prototype of getgrgid_r.\n *\tIt is zero if d_getgrgid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrgid_r\n *\tis defined.\n */\n/*#define HAS_GETGRGID_R\t   / **/\n#define GETGRGID_R_PROTO 0\t   /**/\n\n/* HAS_GETGRNAM_R:\n *\tThis symbol, if defined, indicates that the getgrnam_r routine\n *\tis available to getgrnam re-entrantly.\n */\n/* GETGRNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getgrnam_r.\n *\tIt is zero if d_getgrnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrnam_r\n *\tis defined.\n */\n/*#define HAS_GETGRNAM_R\t   / **/\n#define GETGRNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYADDR:\n *\tThis symbol, if defined, indicates that the gethostbyaddr() routine is\n *\tavailable to look up hosts by their IP addresses.\n */\n#define HAS_GETHOSTBYADDR\t\t/**/\n\n/* HAS_GETHOSTBYNAME:\n *\tThis symbol, if defined, indicates that the gethostbyname() routine is\n *\tavailable to look up host names in some data base or other.\n */\n#define HAS_GETHOSTBYNAME\t\t/**/\n\n/* HAS_GETHOSTENT:\n *\tThis symbol, if defined, indicates that the gethostent() routine is\n *\tavailable to look up host names in some data base or another.\n */\n/*#define HAS_GETHOSTENT\t\t/ **/\n\n/* HAS_GETHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tgethostname() routine to derive the host name.  See also HAS_UNAME\n *\tand PHOSTNAME.\n */\n/* HAS_UNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tuname() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand PHOSTNAME.\n */\n/* PHOSTNAME:\n *\tThis symbol, if defined, indicates the command to feed to the\n *\tpopen() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand HAS_UNAME.\tNote that the command uses a fully qualified path,\n *\tso that it is safe even if used by a process with super-user\n *\tprivileges.\n */\n/* HAS_PHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tcontents of PHOSTNAME as a command to feed to the popen() routine\n *\tto derive the host name.\n */\n#define HAS_GETHOSTNAME\t/**/\n#define HAS_UNAME\t\t/**/\n/*#define HAS_PHOSTNAME\t/ **/\n#ifdef HAS_PHOSTNAME\n#define PHOSTNAME \"/bin/uname -n\"\t/* How to get the host name */\n#endif\n\n/* HAS_GETHOST_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for gethostent(), gethostbyname(), and\n *\tgethostbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETHOST_PROTOS\t/ **/\n\n/* HAS_GETITIMER:\n *\tThis symbol, if defined, indicates that the getitimer routine is\n *\tavailable to return interval timers.\n */\n/*#define HAS_GETITIMER\t\t/ **/\n\n/* HAS_GETLOGIN_R:\n *\tThis symbol, if defined, indicates that the getlogin_r routine\n *\tis available to getlogin re-entrantly.\n */\n/* GETLOGIN_R_PROTO:\n *\tThis symbol encodes the prototype of getlogin_r.\n *\tIt is zero if d_getlogin_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getlogin_r\n *\tis defined.\n */\n/*#define HAS_GETLOGIN_R\t   / **/\n#define GETLOGIN_R_PROTO 0\t   /**/\n\n/* HAS_GETMNT:\n *\tThis symbol, if defined, indicates that the getmnt routine is\n *\tavailable to get filesystem mount info by filename.\n */\n/*#define HAS_GETMNT\t\t/ **/\n\n/* HAS_GETMNTENT:\n *\tThis symbol, if defined, indicates that the getmntent routine is\n *\tavailable to iterate through mounted file systems to get their info.\n */\n/*#define HAS_GETMNTENT\t\t/ **/\n\n/* HAS_GETNETBYADDR:\n *\tThis symbol, if defined, indicates that the getnetbyaddr() routine is\n *\tavailable to look up networks by their IP addresses.\n */\n/*#define HAS_GETNETBYADDR\t\t/ **/\n\n/* HAS_GETNETBYNAME:\n *\tThis symbol, if defined, indicates that the getnetbyname() routine is\n *\tavailable to look up networks by their names.\n */\n/*#define HAS_GETNETBYNAME\t\t/ **/\n\n/* HAS_GETNETENT:\n *\tThis symbol, if defined, indicates that the getnetent() routine is\n *\tavailable to look up network names in some data base or another.\n */\n/*#define HAS_GETNETENT\t\t/ **/\n\n/* HAS_GETNET_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getnetent(), getnetbyname(), and\n *\tgetnetbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETNET_PROTOS\t/ **/\n\n/* HAS_GETPAGESIZE:\n *\tThis symbol, if defined, indicates that the getpagesize system call\n *\tis available to get system page size, which is the granularity of\n *\tmany memory management calls.\n */\n/*#define HAS_GETPAGESIZE\t\t/ **/\n\n/* HAS_GETPROTOENT:\n *\tThis symbol, if defined, indicates that the getprotoent() routine is\n *\tavailable to look up protocols in some data base or another.\n */\n/*#define HAS_GETPROTOENT\t\t/ **/\n\n/* HAS_GETPGRP:\n *\tThis symbol, if defined, indicates that the getpgrp routine is\n *\tavailable to get the current process group.\n */\n/* USE_BSD_GETPGRP:\n *\tThis symbol, if defined, indicates that getpgrp needs one\n *\targuments whereas USG one needs none.\n */\n#define HAS_GETPGRP\t\t/**/\n/*#define USE_BSD_GETPGRP\t/ **/\n\n/* HAS_GETPROTOBYNAME:\n *\tThis symbol, if defined, indicates that the getprotobyname()\n *\troutine is available to look up protocols by their name.\n */\n/* HAS_GETPROTOBYNUMBER:\n *\tThis symbol, if defined, indicates that the getprotobynumber()\n *\troutine is available to look up protocols by their number.\n */\n#define HAS_GETPROTOBYNAME\t\t/**/\n/*#define HAS_GETPROTOBYNUMBER\t\t/ **/\n\n/* HAS_GETPROTO_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getprotoent(), getprotobyname(), and\n *\tgetprotobyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETPROTO_PROTOS\t/ **/\n\n/* HAS_GETPRPWNAM:\n *\tThis symbol, if defined, indicates that the getprpwnam system call is\n *\tavailable to retrieve protected (shadow) password entries by name.\n */\n/*#define HAS_GETPRPWNAM\t\t/ **/\n\n/* HAS_GETPWENT:\n *\tThis symbol, if defined, indicates that the getpwent routine is\n *\tavailable for sequential access of the passwd database.\n *\tIf this is not available, the older getpw() function may be available.\n */\n#define HAS_GETPWENT\t\t/**/\n\n/* HAS_GETPWENT_R:\n *\tThis symbol, if defined, indicates that the getpwent_r routine\n *\tis available to getpwent re-entrantly.\n */\n/* GETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of getpwent_r.\n *\tIt is zero if d_getpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwent_r\n *\tis defined.\n */\n/*#define HAS_GETPWENT_R\t   / **/\n#define GETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPWNAM_R:\n *\tThis symbol, if defined, indicates that the getpwnam_r routine\n *\tis available to getpwnam re-entrantly.\n */\n/* GETPWNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getpwnam_r.\n *\tIt is zero if d_getpwnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwnam_r\n *\tis defined.\n */\n/*#define HAS_GETPWNAM_R\t   / **/\n#define GETPWNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETPWUID_R:\n *\tThis symbol, if defined, indicates that the getpwuid_r routine\n *\tis available to getpwuid re-entrantly.\n */\n/* GETPWUID_R_PROTO:\n *\tThis symbol encodes the prototype of getpwuid_r.\n *\tIt is zero if d_getpwuid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwuid_r\n *\tis defined.\n */\n/*#define HAS_GETPWUID_R\t   / **/\n#define GETPWUID_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT:\n *\tThis symbol, if defined, indicates that the getservent() routine is\n *\tavailable to look up network services in some data base or another.\n */\n/*#define HAS_GETSERVENT\t\t/ **/\n\n/* HAS_GETSERV_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getservent(), getservbyname(), and\n *\tgetservbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETSERV_PROTOS\t/ **/\n\n/* HAS_GETSPNAM:\n *\tThis symbol, if defined, indicates that the getspnam system call is\n *\tavailable to retrieve SysV shadow password entries by name.\n */\n/*#define HAS_GETSPNAM\t\t/ **/\n\n/* HAS_GETSPNAM_R:\n *\tThis symbol, if defined, indicates that the getspnam_r routine\n *\tis available to getspnam re-entrantly.\n */\n/* GETSPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getspnam_r.\n *\tIt is zero if d_getspnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getspnam_r\n *\tis defined.\n */\n/*#define HAS_GETSPNAM_R\t   / **/\n#define GETSPNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYNAME:\n *\tThis symbol, if defined, indicates that the getservbyname()\n *\troutine is available to look up services by their name.\n */\n/* HAS_GETSERVBYPORT:\n *\tThis symbol, if defined, indicates that the getservbyport()\n *\troutine is available to look up services by their port.\n */\n#define HAS_GETSERVBYNAME\t\t/**/\n/*#define HAS_GETSERVBYPORT\t\t/ **/\n\n/* HAS_GMTIME_R:\n *\tThis symbol, if defined, indicates that the gmtime_r routine\n *\tis available to gmtime re-entrantly.\n */\n/* GMTIME_R_PROTO:\n *\tThis symbol encodes the prototype of gmtime_r.\n *\tIt is zero if d_gmtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gmtime_r\n *\tis defined.\n */\n/*#define HAS_GMTIME_R\t   / **/\n#define GMTIME_R_PROTO 0\t   /**/\n\n/* HAS_GNULIBC:\n *\tThis symbol, if defined, indicates to the C program that \n *\tthe GNU C library is being used.  A better check is to use\n *\tthe __GLIBC__ and __GLIBC_MINOR__ symbols supplied with glibc.\n */\n/*#define HAS_GNULIBC  \t/ **/\n#if defined(HAS_GNULIBC) && !defined(_GNU_SOURCE)\n#   define _GNU_SOURCE\n#endif\n/* HAS_HASMNTOPT:\n *\tThis symbol, if defined, indicates that the hasmntopt routine is\n *\tavailable to query the mount options of file systems.\n */\n/*#define HAS_HASMNTOPT\t\t/ **/\n\n/* HAS_HTONL:\n *\tThis symbol, if defined, indicates that the htonl() routine (and\n *\tfriends htons() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_HTONS:\n *\tThis symbol, if defined, indicates that the htons() routine (and\n *\tfriends htonl() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHL:\n *\tThis symbol, if defined, indicates that the ntohl() routine (and\n *\tfriends htonl() htons() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHS:\n *\tThis symbol, if defined, indicates that the ntohs() routine (and\n *\tfriends htonl() htons() ntohl()) are available to do network\n *\torder byte swapping.\n */\n#define HAS_HTONL\t\t/**/\n#define HAS_HTONS\t\t/**/\n#define HAS_NTOHL\t\t/**/\n#define HAS_NTOHS\t\t/**/\n\n/* HAS_ILOGBL:\n *\tThis symbol, if defined, indicates that the ilogbl routine is\n *\tavailable.  If scalbnl is also present we can emulate frexpl.\n */\n/*#define HAS_ILOGBL\t\t/**/\n\n/* HAS_INT64_T:\n *     This symbol will defined if the C compiler supports int64_t.\n *     Usually the <inttypes.h> needs to be included, but sometimes\n *\t<sys/types.h> is enough.\n */\n#define     HAS_INT64_T               /**/\n\n/* HAS_ISASCII:\n *\tThis manifest constant lets the C program know that isascii \n *\tis available.\n */\n/*#define HAS_ISASCII\t\t/ **/\n\n/* HAS_ISFINITE:\n *\tThis symbol, if defined, indicates that the isfinite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_ISFINITE\t\t/ **/\n\n/* HAS_ISINF:\n *\tThis symbol, if defined, indicates that the isinf routine is\n *\tavailable to check whether a double is an infinity.\n */\n/*#define HAS_ISINF\t\t/ **/\n\n/* HAS_ISNAN:\n *\tThis symbol, if defined, indicates that the isnan routine is\n *\tavailable to check whether a double is a NaN.\n */\n/*#define HAS_ISNAN\t\t/ **/\n\n/* HAS_ISNANL:\n *\tThis symbol, if defined, indicates that the isnanl routine is\n *\tavailable to check whether a long double is a NaN.\n */\n/*#define HAS_ISNANL\t\t/ **/\n\n/* HAS_LCHOWN:\n *\tThis symbol, if defined, indicates that the lchown routine is\n *\tavailable to operate on a symbolic link (instead of following the\n *\tlink).\n */\n/*#define HAS_LCHOWN\t\t/ **/\n\n/* HAS_LDBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol LDBL_DIG, which is the number\n *\tof significant digits in a long double precision number. Unlike\n *\tfor DBL_DIG, there's no good guess for LDBL_DIG if it is undefined.\n */\n#define HAS_LDBL_DIG \t/* */\n\n/* HAS_LOCALTIME_R:\n *\tThis symbol, if defined, indicates that the localtime_r routine\n *\tis available to localtime re-entrantly.\n */\n/* LOCALTIME_R_NEEDS_TZSET:\n *\tMany libc's localtime_r implementations do not call tzset,\n *\tmaking them differ from localtime(), and making timezone\n *\tchanges using $ENV{TZ} without explicitly calling tzset\n *\timpossible. This symbol makes us call tzset before localtime_r\n */\n/* LOCALTIME_R_PROTO:\n *\tThis symbol encodes the prototype of localtime_r.\n *\tIt is zero if d_localtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_localtime_r\n *\tis defined.\n */\n/*#define HAS_LOCALTIME_R\t   / **/\n/*#define LOCALTIME_R_NEEDS_TZSET\t   / **/\n#define LOCALTIME_R_PROTO 0\t   /**/\n\n/* HAS_LONG_DOUBLE:\n *\tThis symbol will be defined if the C compiler supports long\n *\tdoubles.\n */\n/* LONG_DOUBLESIZE:\n *\tThis symbol contains the size of a long double, so that the \n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long doubles.\n */\n#define HAS_LONG_DOUBLE\t\t/**/\n#ifdef HAS_LONG_DOUBLE\n#define LONG_DOUBLESIZE 8\t\t/**/\n#endif\n\n/* HAS_LONG_LONG:\n *\tThis symbol will be defined if the C compiler supports long long.\n */\n/* LONGLONGSIZE:\n *\tThis symbol contains the size of a long long, so that the \n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long long.\n */\n#define HAS_LONG_LONG\t\t/**/\n#ifdef HAS_LONG_LONG\n#define LONGLONGSIZE 8\t\t/**/\n#endif\n\n/* HAS_LSEEK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the lseek() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern off_t lseek(int, off_t, int);\n */\n/*#define\tHAS_LSEEK_PROTO\t/ **/\n\n/* HAS_MADVISE:\n *\tThis symbol, if defined, indicates that the madvise system call is\n *\tavailable to map a file into memory.\n */\n/*#define HAS_MADVISE\t\t/ **/\n\n/* HAS_MKDTEMP:\n *\tThis symbol, if defined, indicates that the mkdtemp routine is\n *\tavailable to exclusively create a uniquely named temporary directory.\n */\n/*#define HAS_MKDTEMP\t\t/ **/\n\n/* HAS_MKSTEMP:\n *\tThis symbol, if defined, indicates that the mkstemp routine is\n *\tavailable to exclusively create and open a uniquely named\n *\ttemporary file.\n */\n/*#define HAS_MKSTEMP\t\t/ **/\n\n/* HAS_MKSTEMPS:\n *\tThis symbol, if defined, indicates that the mkstemps routine is\n *\tavailable to exclusively create and open a uniquely named\n *\t(with a suffix) temporary file.\n */\n/*#define HAS_MKSTEMPS\t\t/ **/\n\n/* HAS_MMAP:\n *\tThis symbol, if defined, indicates that the mmap system call is\n *\tavailable to map a file into memory.\n */\n/* Mmap_t:\n *\tThis symbol holds the return type of the mmap() system call\n *\t(and simultaneously the type of the first argument).\n *\tUsually set to 'void *' or 'cadd_t'.\n */\n/*#define HAS_MMAP\t\t/ **/\n#define Mmap_t void *\t/**/\n\n/* HAS_MODFL:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tavailable to split a long double x into a fractional part f and\n *\tan integer part i such that |f| < 1.0 and (f + i) = x.\n */\n/*#define HAS_MODFL\t\t/ **/\n\n/* HAS_MPROTECT:\n *\tThis symbol, if defined, indicates that the mprotect system call is\n *\tavailable to modify the access protection of a memory mapped file.\n */\n/*#define HAS_MPROTECT\t\t/ **/\n\n/* HAS_MSG:\n *\tThis symbol, if defined, indicates that the entire msg*(2) library is\n *\tsupported (IPC mechanism based on message queues).\n */\n/*#define HAS_MSG\t\t/ **/\n\n/* HAS_STRUCT_MSGHDR:\n *\tThis symbol, if defined, indicates that the struct msghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_MSGHDR\t/ **/\n\n/* HAS_OFF64_T:\n *\tThis symbol will be defined if the C compiler supports off64_t.\n */\n/*#define\tHAS_OFF64_T    \t\t/ **/\n\n/* HAS_OPEN3:\n *\tThis manifest constant lets the C program know that the three\n *\targument form of open(2) is available.\n */\n#define HAS_OPEN3\t\t/**/\n\n/* OLD_PTHREAD_CREATE_JOINABLE:\n *\tThis symbol, if defined, indicates how to create pthread\n *\tin joinable (aka undetached) state.  NOTE: not defined\n *\tif pthread.h already has defined PTHREAD_CREATE_JOINABLE\n *\t(the new version of the constant).\n *\tIf defined, known values are PTHREAD_CREATE_UNDETACHED\n *\tand __UNDETACHED.\n */\n/*#define OLD_PTHREAD_CREATE_JOINABLE  / **/\n\n/* HAS_PTHREAD_YIELD:\n *\tThis symbol, if defined, indicates that the pthread_yield \n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/* SCHED_YIELD:\n *\tThis symbol defines the way to yield the execution of\n *\tthe current thread.  Known ways are sched_yield,\n *\tpthread_yield, and pthread_yield with NULL.\n */\n/* HAS_SCHED_YIELD:\n *\tThis symbol, if defined, indicates that the sched_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/*#define HAS_PTHREAD_YIELD\t/ **/\n#define SCHED_YIELD\tundef\t/**/\n/*#define HAS_SCHED_YIELD\t/ **/\n\n/* HAS_RANDOM_R:\n *\tThis symbol, if defined, indicates that the random_r routine\n *\tis available to random re-entrantly.\n */\n/* RANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of random_r.\n *\tIt is zero if d_random_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_random_r\n *\tis defined.\n */\n/*#define HAS_RANDOM_R\t   / **/\n#define RANDOM_R_PROTO 0\t   /**/\n\n/* HAS_READDIR_R:\n *\tThis symbol, if defined, indicates that the readdir_r routine\n *\tis available to readdir re-entrantly.\n */\n/* READDIR_R_PROTO:\n *\tThis symbol encodes the prototype of readdir_r.\n *\tIt is zero if d_readdir_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir_r\n *\tis defined.\n */\n/*#define HAS_READDIR_R\t   / **/\n#define READDIR_R_PROTO 0\t   /**/\n\n/* HAS_READV:\n *\tThis symbol, if defined, indicates that the readv routine is\n *\tavailable to do gather reads.  You will also need <sys/uio.h>\n *\tand there I_SYSUIO.\n */\n#define HAS_READV\t\t/**/\n\n/* HAS_RECVMSG:\n *\tThis symbol, if defined, indicates that the recvmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_RECVMSG\t\t/ **/\n\n/* HAS_SBRK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sbrk() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern void* sbrk(int);\n *\t\textern void* sbrk(size_t);\n */\n/*#define\tHAS_SBRK_PROTO\t/ **/\n\n/* HAS_SEM:\n *\tThis symbol, if defined, indicates that the entire sem*(2) library is\n *\tsupported.\n */\n/*#define HAS_SEM\t\t/ **/\n\n/* HAS_SCALBNL:\n *\tThis symbol, if defined, indicates that the scalbnl routine is\n *\tavailable.  If ilogbl is also present we can emulate frexpl.\n */\n/*#define HAS_SCALBNL\t\t/**/\n\n/* HAS_SENDMSG:\n *\tThis symbol, if defined, indicates that the sendmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_SENDMSG\t\t/ **/\n\n/* HAS_SETGRENT:\n *\tThis symbol, if defined, indicates that the setgrent routine is\n *\tavailable for initializing sequential access of the group database.\n */\n#define HAS_SETGRENT\t\t/**/\n\n/* HAS_SETGRENT_R:\n *\tThis symbol, if defined, indicates that the setgrent_r routine\n *\tis available to setgrent re-entrantly.\n */\n/* SETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of setgrent_r.\n *\tIt is zero if d_setgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setgrent_r\n *\tis defined.\n */\n/*#define HAS_SETGRENT_R\t   / **/\n#define SETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_SETGROUPS:\n *\tThis symbol, if defined, indicates that the setgroups() routine is\n *\tavailable to set the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_SETGROUPS\t\t/* config-skip */\n\n/* HAS_SETHOSTENT:\n *\tThis symbol, if defined, indicates that the sethostent() routine is\n *\tavailable.\n */\n/*#define HAS_SETHOSTENT\t\t/ **/\n\n/* HAS_SETITIMER:\n *\tThis symbol, if defined, indicates that the setitimer routine is\n *\tavailable to set interval timers.\n */\n/*#define HAS_SETITIMER\t\t/ **/\n\n/* HAS_SETNETENT:\n *\tThis symbol, if defined, indicates that the setnetent() routine is\n *\tavailable.\n */\n/*#define HAS_SETNETENT\t\t/ **/\n\n/* HAS_SETPROTOENT:\n *\tThis symbol, if defined, indicates that the setprotoent() routine is\n *\tavailable.\n */\n/*#define HAS_SETPROTOENT\t\t/ **/\n\n/* HAS_SETPGRP:\n *\tThis symbol, if defined, indicates that the setpgrp routine is\n *\tavailable to set the current process group.\n */\n/* USE_BSD_SETPGRP:\n *\tThis symbol, if defined, indicates that setpgrp needs two\n *\targuments whereas USG one needs none.  See also HAS_SETPGID\n *\tfor a POSIX interface.\n */\n/*#define HAS_SETPGRP\t\t/ **/\n/*#define USE_BSD_SETPGRP\t/ **/\n\n/* HAS_SETPROCTITLE:\n *\tThis symbol, if defined, indicates that the setproctitle routine is\n *\tavailable to set process title.\n */\n/*#define HAS_SETPROCTITLE\t\t/ **/\n\n/* HAS_SETPWENT:\n *\tThis symbol, if defined, indicates that the setpwent routine is\n *\tavailable for initializing sequential access of the passwd database.\n */\n#define HAS_SETPWENT\t\t/**/\n\n/* HAS_SETPWENT_R:\n *\tThis symbol, if defined, indicates that the setpwent_r routine\n *\tis available to setpwent re-entrantly.\n */\n/* SETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of setpwent_r.\n *\tIt is zero if d_setpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setpwent_r\n *\tis defined.\n */\n/*#define HAS_SETPWENT_R\t   / **/\n#define SETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_SETSERVENT:\n *\tThis symbol, if defined, indicates that the setservent() routine is\n *\tavailable.\n */\n/*#define HAS_SETSERVENT\t\t/ **/\n\n/* HAS_SETVBUF:\n *\tThis symbol, if defined, indicates that the setvbuf routine is\n *\tavailable to change buffering on an open stdio stream.\n *\tto a line-buffered mode.\n */\n#define HAS_SETVBUF\t\t/**/\n\n/* HAS_SHM:\n *\tThis symbol, if defined, indicates that the entire shm*(2) library is\n *\tsupported.\n */\n/*#define HAS_SHM\t\t/ **/\n\n/* HAS_SIGACTION:\n *\tThis symbol, if defined, indicates that Vr4's sigaction() routine\n *\tis available.\n */\n#define HAS_SIGACTION\t/**/\n\n/* HAS_SIGSETJMP:\n *\tThis variable indicates to the C program that the sigsetjmp()\n *\troutine is available to save the calling process's registers\n *\tand stack environment for later use by siglongjmp(), and\n *\tto optionally save the process's signal mask.  See\n *\tSigjmp_buf, Sigsetjmp, and Siglongjmp.\n */\n/* Sigjmp_buf:\n *\tThis is the buffer type to be used with Sigsetjmp and Siglongjmp.\n */\n/* Sigsetjmp:\n *\tThis macro is used in the same way as sigsetjmp(), but will invoke\n *\ttraditional setjmp() if sigsetjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/* Siglongjmp:\n *\tThis macro is used in the same way as siglongjmp(), but will invoke\n *\ttraditional longjmp() if siglongjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n#define HAS_SIGSETJMP\t/* config-skip */\n#ifdef HAS_SIGSETJMP\n#define Sigjmp_buf sigjmp_buf\t/* config-skip */\n#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))\t/* config-skip */\n#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))\t/* config-skip */\n#else\n#define Sigjmp_buf jmp_buf\n#define Sigsetjmp(buf,save_mask) setjmp((buf))\n#define Siglongjmp(buf,retval) longjmp((buf),(retval))\n#endif\n\n/* HAS_STATIC_INLINE:\n *\tThis symbol, if defined, indicates that the C compiler supports\n *\tC99-style static inline.  That is, the function can't be called\n *\tfrom another translation unit.\n */\n/* PERL_STATIC_INLINE:\n *\tThis symbol gives the best-guess incantation to use for static\n *\tinline functions.  If HAS_STATIC_INLINE is defined, this will\n *\tgive C99-style inline.  If HAS_STATIC_INLINE is not defined,\n *\tthis will give a plain 'static'.  It will always be defined\n *\tto something that gives static linkage.\n *\tPossibilities include\n *\t\tstatic inline       (c99)\n *\t\tstatic __inline__   (gcc -ansi)\n *\t\tstatic __inline     (MSVC)\n *\t\tstatic _inline      (older MSVC)\n *\t\tstatic              (c89 compilers)\n */\n/*#define HAS_STATIC_INLINE\t\t\t\t/ **/\n#define PERL_STATIC_INLINE static           \t/**/\n\n/* HAS_SOCKET:\n *\tThis symbol, if defined, indicates that the BSD socket interface is\n *\tsupported.\n */\n/* HAS_SOCKETPAIR:\n *\tThis symbol, if defined, indicates that the BSD socketpair() call is\n *\tsupported.\n */\n#define\tHAS_SOCKET\t\t/**/\n#define\tHAS_SOCKETPAIR\t/**/\n\n/* HAS_SOCKS5_INIT:\n *\tThis symbol, if defined, indicates that the socks5_init routine is\n *\tavailable to initialize SOCKS 5.\n */\n/*#define HAS_SOCKS5_INIT\t\t/ **/\n\n/* HAS_SQRTL:\n *\tThis symbol, if defined, indicates that the sqrtl routine is\n *\tavailable to do long double square roots.\n */\n/*#define HAS_SQRTL\t\t/ **/\n\n/* HAS_SRAND48_R:\n *\tThis symbol, if defined, indicates that the srand48_r routine\n *\tis available to srand48 re-entrantly.\n */\n/* SRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of srand48_r.\n *\tIt is zero if d_srand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srand48_r\n *\tis defined.\n */\n/*#define HAS_SRAND48_R\t   / **/\n#define SRAND48_R_PROTO 0\t   /**/\n\n/* HAS_SRANDOM_R:\n *\tThis symbol, if defined, indicates that the srandom_r routine\n *\tis available to srandom re-entrantly.\n */\n/* SRANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of srandom_r.\n *\tIt is zero if d_srandom_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srandom_r\n *\tis defined.\n */\n/*#define HAS_SRANDOM_R\t   / **/\n#define SRANDOM_R_PROTO 0\t   /**/\n\n/* USE_STAT_BLOCKS:\n *\tThis symbol is defined if this system has a stat structure declaring\n *\tst_blksize and st_blocks.\n */\n#ifndef USE_STAT_BLOCKS\n/*#define USE_STAT_BLOCKS \t/ **/\n#endif\n\n/* HAS_STRUCT_STATFS_F_FLAGS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tdoes have the f_flags member containing the mount flags of\n *\tthe filesystem containing the file.\n *\tThis kind of struct statfs is coming from <sys/mount.h> (BSD 4.3),\n *\tnot from <sys/statfs.h> (SYSV).  Older BSDs (like Ultrix) do not\n *\thave statfs() and struct statfs, they have ustat() and getmnt()\n *\twith struct ustat and struct fs_data.\n */\n/*#define HAS_STRUCT_STATFS_F_FLAGS\t\t/ **/\n\n/* HAS_STRUCT_STATFS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_STATFS\t/ **/\n\n/* HAS_FSTATVFS:\n *\tThis symbol, if defined, indicates that the fstatvfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATVFS\t\t/ **/\n\n/* USE_STDIO_PTR:\n *\tThis symbol is defined if the _ptr and _cnt fields (or similar)\n *\tof the stdio FILE structure can be used to access the stdio buffer\n *\tfor a file handle.  If this is defined, then the FILE_ptr(fp)\n *\tand FILE_cnt(fp) macros will also be defined and should be used\n *\tto access these fields.\n */\n/* FILE_ptr:\n *\tThis macro is used to access the _ptr field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_PTR_LVALUE:\n *\tThis symbol is defined if the FILE_ptr macro can be used as an\n *\tlvalue.\n */\n/* FILE_cnt:\n *\tThis macro is used to access the _cnt field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_CNT_LVALUE:\n *\tThis symbol is defined if the FILE_cnt macro can be used as an\n *\tlvalue.\n */\n/* STDIO_PTR_LVAL_SETS_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n has the side effect of decreasing the\n *\tvalue of File_cnt(fp) by n.\n */\n/* STDIO_PTR_LVAL_NOCHANGE_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n leaves File_cnt(fp) unchanged.\n */\n/*#define USE_STDIO_PTR \t/ **/\n#ifdef USE_STDIO_PTR\n#define FILE_ptr(fp)\t((fp)->_ptr)\n/*#define STDIO_PTR_LVALUE \t\t/ **/\n#define FILE_cnt(fp)\t((fp)->_cnt)\n/*#define STDIO_CNT_LVALUE \t\t/ **/\n/*#define STDIO_PTR_LVAL_SETS_CNT\t/ **/\n/*#define STDIO_PTR_LVAL_NOCHANGE_CNT\t/ **/\n#endif\n\n/* USE_STDIO_BASE:\n *\tThis symbol is defined if the _base field (or similar) of the\n *\tstdio FILE structure can be used to access the stdio buffer for\n *\ta file handle.  If this is defined, then the FILE_base(fp) macro\n *\twill also be defined and should be used to access this field.\n *\tAlso, the FILE_bufsiz(fp) macro will be defined and should be used\n *\tto determine the number of bytes in the buffer.  USE_STDIO_BASE\n *\twill never be defined unless USE_STDIO_PTR is.\n */\n/* FILE_base:\n *\tThis macro is used to access the _base field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_BASE is defined.\n */\n/* FILE_bufsiz:\n *\tThis macro is used to determine the number of bytes in the I/O\n *\tbuffer pointed to by _base field (or equivalent) of the FILE\n *\tstructure pointed to its argument. This macro will always be defined\n *\tif USE_STDIO_BASE is defined.\n */\n/*#define USE_STDIO_BASE \t/ **/\n#ifdef USE_STDIO_BASE\n#define FILE_base(fp)\t((fp)->_base)\n#define FILE_bufsiz(fp)\t((fp)->_cnt + (fp)->_ptr - (fp)->_base)\n#endif\n\n/* HAS_SYS_ERRLIST:\n *\tThis symbol, if defined, indicates that the sys_errlist array is\n *\tavailable to translate error numbers to strings. The extern int\n *\tsys_nerr gives the size of that table.\n */\n#define HAS_SYS_ERRLIST\t/**/\n\n/* HAS_STRERROR_R:\n *\tThis symbol, if defined, indicates that the strerror_r routine\n *\tis available to strerror re-entrantly.\n */\n/* STRERROR_R_PROTO:\n *\tThis symbol encodes the prototype of strerror_r.\n *\tIt is zero if d_strerror_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_strerror_r\n *\tis defined.\n */\n/*#define HAS_STRERROR_R\t   / **/\n#define STRERROR_R_PROTO 0\t   /**/\n\n/* HAS_STRTOLD:\n *\tThis symbol, if defined, indicates that the strtold routine is\n *\tavailable to convert strings to long doubles.\n */\n/*#define HAS_STRTOLD\t\t/ **/\n\n/* HAS_STRTOLL:\n *\tThis symbol, if defined, indicates that the strtoll routine is\n *\tavailable to convert strings to long longs.\n */\n/*#define HAS_STRTOLL\t\t/ **/\n\n/* HAS_STRTOQ:\n *\tThis symbol, if defined, indicates that the strtoq routine is\n *\tavailable to convert strings to long longs (quads).\n */\n/*#define HAS_STRTOQ\t\t/ **/\n\n/* HAS_STRTOUL:\n *\tThis symbol, if defined, indicates that the strtoul routine is\n *\tavailable to provide conversion of strings to unsigned long.\n */\n#define HAS_STRTOUL\t/**/\n\n/* HAS_STRTOULL:\n *\tThis symbol, if defined, indicates that the strtoull routine is\n *\tavailable to convert strings to unsigned long longs.\n */\n/*#define HAS_STRTOULL\t\t/ **/\n\n/* HAS_STRTOUQ:\n *\tThis symbol, if defined, indicates that the strtouq routine is\n *\tavailable to convert strings to unsigned long longs (quads).\n */\n/*#define HAS_STRTOUQ\t\t/ **/\n\n/* HAS_TELLDIR_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the telldir() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern long telldir(DIR*);\n */\n/*#define\tHAS_TELLDIR_PROTO\t/ **/\n\n/* HAS_TIME:\n *\tThis symbol, if defined, indicates that the time() routine exists.\n */\n/* Time_t:\n *\tThis symbol holds the type returned by time(). It can be long,\n *\tor time_t on BSD sites (in which case <sys/types.h> should be\n *\tincluded).\n */\n#define HAS_TIME\t\t/**/\n#define Time_t time_t\t\t/* Time type */\n\n/* HAS_TIMES:\n *\tThis symbol, if defined, indicates that the times() routine exists.\n *\tNote that this became obsolete on some systems (SUNOS), which now\n * use getrusage(). It may be necessary to include <sys/times.h>.\n */\n#define HAS_TIMES\t\t/**/\n\n/* HAS_TMPNAM_R:\n *\tThis symbol, if defined, indicates that the tmpnam_r routine\n *\tis available to tmpnam re-entrantly.\n */\n/* TMPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of tmpnam_r.\n *\tIt is zero if d_tmpnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_tmpnam_r\n *\tis defined.\n */\n/*#define HAS_TMPNAM_R\t   / **/\n#define TMPNAM_R_PROTO 0\t   /**/\n\n/* HAS_UALARM:\n *\tThis symbol, if defined, indicates that the ualarm routine is\n *\tavailable to do alarms with microsecond granularity.\n */\n/*#define HAS_UALARM\t\t/ **/\n\n/* HAS_UNION_SEMUN:\n *\tThis symbol, if defined, indicates that the union semun is\n *\tdefined by including <sys/sem.h>.  If not, the user code\n *\tprobably needs to define it as:\n *\tunion semun {\n *\t    int val;\n *\t    struct semid_ds *buf;\n *\t    unsigned short *array;\n *\t}\n */\n/* USE_SEMCTL_SEMUN:\n *\tThis symbol, if defined, indicates that union semun is\n *\tused for semctl IPC_STAT.\n */\n/* USE_SEMCTL_SEMID_DS:\n *\tThis symbol, if defined, indicates that struct semid_ds * is\n *\tused for semctl IPC_STAT.\n */\n/*#define HAS_UNION_SEMUN\t/ **/\n/*#define USE_SEMCTL_SEMUN\t/ **/\n/*#define USE_SEMCTL_SEMID_DS\t/ **/\n\n/* HAS_UNORDERED:\n *\tThis symbol, if defined, indicates that the unordered routine is\n *\tavailable to check whether two doubles are unordered\n *\t(effectively: whether either of them is NaN)\n */\n/*#define HAS_UNORDERED\t\t/ **/\n\n/* HAS_USTAT:\n *\tThis symbol, if defined, indicates that the ustat system call is\n *\tavailable to query file system statistics by dev_t.\n */\n/*#define HAS_USTAT\t\t/ **/\n\n/* HAS_VFORK:\n *\tThis symbol, if defined, indicates that vfork() exists.\n */\n/*#define HAS_VFORK\t/ **/\n\n/* Signal_t:\n *\tThis symbol's value is either \"void\" or \"int\", corresponding to the\n *\tappropriate return type of a signal handler.  Thus, you can declare\n *\ta signal handler using \"Signal_t (*handler)()\", and define the\n *\thandler using \"Signal_t handler(sig)\".\n */\n#define Signal_t void\t/* Signal handler's return type */\n\n/* HAS_WRITEV:\n *\tThis symbol, if defined, indicates that the writev routine is\n *\tavailable to do scatter writes.\n */\n#define HAS_WRITEV\t\t/**/\n\n/* USE_DYNAMIC_LOADING:\n *\tThis symbol, if defined, indicates that dynamic loading of\n *\tsome sort is available.\n */\n/*#define USE_DYNAMIC_LOADING\t\t/ **/\n\n/* DOUBLESIZE:\n *\tThis symbol contains the size of a double, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define DOUBLESIZE 8\t\t/**/\n\n/* EBCDIC:\n *     This symbol, if defined, indicates that this system uses\n *\tEBCDIC encoding.\n */\n/*#define\tEBCDIC \t\t/ **/\n\n/* FFLUSH_NULL:\n *\tThis symbol, if defined, tells that fflush(NULL) does flush\n *\tall pending stdio output.\n */\n/* FFLUSH_ALL:\n *\tThis symbol, if defined, tells that to flush\n *\tall pending stdio output one must loop through all\n *\tthe stdio file handles stored in an array and fflush them.\n *\tNote that if fflushNULL is defined, fflushall will not\n *\teven be probed for and will be left undefined.\n */\n#define\tFFLUSH_NULL \t\t/**/\n/*#define\tFFLUSH_ALL \t\t/ **/\n\n/* Fpos_t:\n *\tThis symbol holds the type used to declare file positions in libc.\n *\tIt can be fpos_t, long, uint, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Fpos_t fpos_t\t\t/* File position type */\n\n/* Gid_t_f:\n *\tThis symbol defines the format string used for printing a Gid_t.\n */\n#define\tGid_t_f\t\t\"hd\"\t\t/**/\n\n/* Gid_t_sign:\n *\tThis symbol holds the signedess of a Gid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Gid_t_sign\t-1\t\t/* GID sign */\n\n/* Gid_t_size:\n *\tThis symbol holds the size of a Gid_t in bytes.\n */\n#define Gid_t_size 2\t\t/* GID size */\n\n/* Gid_t:\n *\tThis symbol holds the return type of getgid() and the type of\n *\targument to setrgid() and related functions.  Typically,\n *\tit is the type of group ids in the kernel. It can be int, ushort,\n *\tgid_t, etc... It may be necessary to include <sys/types.h> to get\n *\tany typedef'ed information.\n */\n#define Gid_t gid_t\t\t/* Type for getgid(), etc... */ /* config-skip */\n\n/* Groups_t:\n *\tThis symbol holds the type used for the second argument to\n *\tgetgroups() and setgroups().  Usually, this is the same as\n *\tgidtype (gid_t) , but sometimes it isn't.\n *\tIt can be int, ushort, gid_t, etc... \n *\tIt may be necessary to include <sys/types.h> to get any \n *\ttypedef'ed information.  This is only required if you have\n *\tgetgroups() or setgroups()..\n */\n#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)\n#define Groups_t gid_t\t/* Type for 2nd arg to [sg]etgroups() */\n#endif\n\n/* DB_Prefix_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is u_int32_t.\n */\n/* DB_Hash_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is size_t.\n */\n/* DB_VERSION_MAJOR_CFG:\n *\tThis symbol, if defined, defines the major version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n */\n/* DB_VERSION_MINOR_CFG:\n *\tThis symbol, if defined, defines the minor version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n/* DB_VERSION_PATCH_CFG:\n *\tThis symbol, if defined, defines the patch version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n#define DB_Hash_t\tu_int32_t\t\t/**/\n#define DB_Prefix_t\tsize_t  \t/**/\n#define DB_VERSION_MAJOR_CFG\t  \t/**/\n#define DB_VERSION_MINOR_CFG\t  \t/**/\n#define DB_VERSION_PATCH_CFG\t  \t/**/\n\n/* I_FP_CLASS:\n *\tThis symbol, if defined, indicates that <fp_class.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP_CLASS\t\t/ **/\n\n/* I_GRP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <grp.h>.\n */\n/* GRPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct group\n *\tin <grp.h> contains gr_passwd.\n */\n#define I_GRP\t\t/**/\n/*#define GRPASSWD\t/ **/\n\n/* I_IEEEFP:\n *\tThis symbol, if defined, indicates that <ieeefp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_IEEEFP\t\t/ **/\n\n/* I_INTTYPES:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <inttypes.h>.\n */\n#define   I_INTTYPES                /**/\n\n/* I_LIBUTIL:\n *\tThis symbol, if defined, indicates that <libutil.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LIBUTIL\t\t/ **/\n\n/* I_MACH_CTHREADS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <mach/cthreads.h>.\n */\n/*#define   I_MACH_CTHREADS\t/ **/\n\n/* I_MNTENT:\n *\tThis symbol, if defined, indicates that <mntent.h> exists and\n *\tshould be included.\n */\n/*#define\tI_MNTENT\t\t/ **/\n\n/* I_NETDB:\n *\tThis symbol, if defined, indicates that <netdb.h> exists and\n *\tshould be included.\n */\n#define I_NETDB\t\t/**/\n\n/* I_NETINET_TCP:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <netinet/tcp.h>.\n */\n#define   I_NETINET_TCP                /**/\n\n/* I_POLL:\n *\tThis symbol, if defined, indicates that <poll.h> exists and\n *\tshould be included.\n */\n/*#define\tI_POLL\t\t/ **/\n\n/* I_PROT:\n *\tThis symbol, if defined, indicates that <prot.h> exists and\n *\tshould be included.\n */\n/*#define\tI_PROT\t\t/ **/\n\n/* I_PTHREAD:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <pthread.h>.\n */\n/*#define   I_PTHREAD\t/ **/\n\n/* I_PWD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pwd.h>.\n */\n/* PWQUOTA:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_quota.\n */\n/* PWAGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_age.\n */\n/* PWCHANGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_change.\n */\n/* PWCLASS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_class.\n */\n/* PWEXPIRE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_expire.\n */\n/* PWCOMMENT:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_comment.\n */\n/* PWGECOS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_gecos.\n */\n/* PWPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_passwd.\n */\n#define I_PWD\t\t/**/\n/*#define PWQUOTA\t/ **/\n/*#define PWAGE\t/ **/\n/*#define PWCHANGE\t/ **/\n/*#define PWCLASS\t/ **/\n/*#define PWEXPIRE\t/ **/\n/*#define PWCOMMENT\t/ **/\n/*#define PWGECOS\t/ **/\n/*#define PWPASSWD\t/ **/\n\n/* I_SHADOW:\n *\tThis symbol, if defined, indicates that <shadow.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SHADOW\t\t/ **/\n\n/* I_SOCKS:\n *\tThis symbol, if defined, indicates that <socks.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SOCKS\t\t/ **/\n\n/* I_SUNMATH:\n *\tThis symbol, if defined, indicates that <sunmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SUNMATH\t\t/ **/\n\n/* I_SYSLOG:\n *\tThis symbol, if defined, indicates that <syslog.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSLOG\t\t/ **/\n\n/* I_SYSMODE:\n *\tThis symbol, if defined, indicates that <sys/mode.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSMODE\t\t/ **/\n\n/* I_SYS_MOUNT:\n *\tThis symbol, if defined, indicates that <sys/mount.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_MOUNT\t\t/ **/\n\n/* I_SYS_STATFS:\n *\tThis symbol, if defined, indicates that <sys/statfs.h> exists.\n */\n/*#define\tI_SYS_STATFS\t\t/ **/\n\n/* I_SYS_STATVFS:\n *\tThis symbol, if defined, indicates that <sys/statvfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_STATVFS\t\t/ **/\n\n/* I_SYSUIO:\n *\tThis symbol, if defined, indicates that <sys/uio.h> exists and\n *\tshould be included.\n */\n#define\tI_SYSUIO\t\t/**/\n\n/* I_SYSUTSNAME:\n *\tThis symbol, if defined, indicates that <sys/utsname.h> exists and\n *\tshould be included.\n */\n#define\tI_SYSUTSNAME\t\t/**/\n\n/* I_SYS_VFS:\n *\tThis symbol, if defined, indicates that <sys/vfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_VFS\t\t/ **/\n\n/* Plan 9: P9 has both <time.h> and <sys/time.h> */\n/* I_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <time.h>.\n */\n/* I_SYS_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h>.\n */\n#define I_SYS_TIME\t/**/\n\n\n/* I_SYS_TIME_KERNEL:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h> with KERNEL defined.\n */\n/* HAS_TM_TM_ZONE:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_zone field.\n */\n#define I_TIME\t\t/**/\n/*#define I_SYS_TIME\t\t/ **/\n/*#define I_SYS_TIME_KERNEL\t\t/ **/\n/*#define HAS_TM_TM_ZONE\t\t/ **/\n\n/* I_USTAT:\n *\tThis symbol, if defined, indicates that <ustat.h> exists and\n *\tshould be included.\n */\n/*#define\tI_USTAT\t\t/ **/\n\n/* PERL_INC_VERSION_LIST:\n *\tThis variable specifies the list of subdirectories in over\n *\twhich perl.c:incpush() and lib/lib.pm will automatically\n *\tsearch when adding directories to @INC, in a format suitable\n *\tfor a C initialization string.  See the inc_version_list entry\n *\tin Porting/Glossary for more details.\n */\n#define PERL_INC_VERSION_LIST 0\t\t/**/\n\n/* INSTALL_USR_BIN_PERL:\n *\tThis symbol, if defined, indicates that Perl is to be installed\n * \talso as /usr/bin/perl.\n */\n/*#define INSTALL_USR_BIN_PERL\t/ **/\n\n/* PERL_PRIfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for output.\n */\n/* PERL_PRIgldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'g') for output.\n */\n/* PERL_PRIeldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'e') for output.\n */\n/* PERL_SCNfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for input.\n */\n#define PERL_PRIfldbl\t\"f\"\t/**/\n#define PERL_PRIgldbl\t\"g\"\t/**/\n#define PERL_PRIeldbl\t\"e\"\t/**/\n#define PERL_SCNfldbl\t\"f\"\t/**/\n\n/* Off_t:\n *\tThis symbol holds the type used to declare offsets in the kernel.\n *\tIt can be int, long, off_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n/* LSEEKSIZE:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n/* Off_t_size:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n#define Off_t off_t\t\t/* <offset> type */\n#define LSEEKSIZE 8\t\t/* <offset> size */\n#define Off_t_size 8\t/* <offset> size */\n\n/* Free_t:\n *\tThis variable contains the return type of free().  It is usually\n * void, but occasionally int.\n */\n/* Malloc_t:\n *\tThis symbol is the type of pointer returned by malloc and realloc.\n */\n#define Malloc_t void *\t\t\t/**/\n#define Free_t void\t\t\t/**/\n\n/* MYMALLOC:\n *\tThis symbol, if defined, indicates that we're using our own malloc.\n */\n#define MYMALLOC\t\t\t/**/\n\n/* Mode_t:\n *\tThis symbol holds the type used to declare file modes \n *\tfor systems calls.  It is usually mode_t, but may be\n *\tint or unsigned short.  It may be necessary to include <sys/types.h>\n *\tto get any typedef'ed information.\n */\n#define Mode_t mode_t\t /* file mode parameter for system calls */\n\n/* VAL_O_NONBLOCK:\n *\tThis symbol is to be used during open() or fcntl(F_SETFL) to turn on\n *\tnon-blocking I/O for the file descriptor. Note that there is no way\n *\tback, i.e. you cannot turn it blocking again this way. If you wish to\n *\talternatively switch between blocking and non-blocking, use the\n *\tioctl(FIOSNBIO) call instead, but that is not supported by all devices.\n */\n/* VAL_EAGAIN:\n *\tThis symbol holds the errno error code set by read() when no data was\n *\tpresent on the non-blocking file descriptor.\n */\n/* RD_NODATA:\n *\tThis symbol holds the return code from read() when no data is present\n *\ton the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is\n *\tnot defined, then you can't distinguish between no data and EOF by\n *\tissuing a read(). You'll have to find another way to tell for sure!\n */\n/* EOF_NONBLOCK:\n *\tThis symbol, if defined, indicates to the C program that a read() on\n *\ta non-blocking file descriptor will return 0 on EOF, and not the value\n *\theld in RD_NODATA (-1 usually, in that case!).\n */\n#define VAL_O_NONBLOCK O_NONBLOCK\n#define VAL_EAGAIN EAGAIN\n#define RD_NODATA -1\n#define EOF_NONBLOCK\n\n/* NEED_VA_COPY:\n *\tThis symbol, if defined, indicates that the system stores\n *\tthe variable argument list datatype, va_list, in a format\n *\tthat cannot be copied by simple assignment, so that some\n *\tother means must be used when copying is required.\n *\tAs such systems vary in their provision (or non-provision)\n *\tof copying mechanisms, handy.h defines a platform-\n *\tindependent macro, Perl_va_copy(src, dst), to do the job.\n */\n/*#define\tNEED_VA_COPY\t\t/ **/\n\n/* Netdb_host_t:\n *\tThis symbol holds the type used for the 1st argument\n *\tto gethostbyaddr().\n */\n/* Netdb_hlen_t:\n *\tThis symbol holds the type used for the 2nd argument\n *\tto gethostbyaddr().\n */\n/* Netdb_name_t:\n *\tThis symbol holds the type used for the argument to\n *\tgethostbyname().\n */\n/* Netdb_net_t:\n *\tThis symbol holds the type used for the 1st argument to\n *\tgetnetbyaddr().\n */\n#define Netdb_host_t\t\tchar * /**/\n#define Netdb_hlen_t\t\tsize_t /**/\n#define Netdb_name_t\t\tchar * /**/\n#define Netdb_net_t\t\tlong /**/\n\n/* PERL_OTHERLIBDIRS:\n *\tThis variable contains a colon-separated set of paths for the perl\n *\tbinary to search for additional library files or modules.\n *\tThese directories will be tacked to the end of @INC.\n *\tPerl will automatically search below each path for version-\n *\tand architecture-specific directories.  See PERL_INC_VERSION_LIST\n *\tfor more details.\n */\n/*#define PERL_OTHERLIBDIRS \" \"\t\t/ **/\n\n/* IVTYPE:\n *\tThis symbol defines the C type used for Perl's IV.\n */\n/* UVTYPE:\n *\tThis symbol defines the C type used for Perl's UV.\n */\n/* I8TYPE:\n *\tThis symbol defines the C type used for Perl's I8.\n */\n/* U8TYPE:\n *\tThis symbol defines the C type used for Perl's U8.\n */\n/* I16TYPE:\n *\tThis symbol defines the C type used for Perl's I16.\n */\n/* U16TYPE:\n *\tThis symbol defines the C type used for Perl's U16.\n */\n/* I32TYPE:\n *\tThis symbol defines the C type used for Perl's I32.\n */\n/* U32TYPE:\n *\tThis symbol defines the C type used for Perl's U32.\n */\n/* I64TYPE:\n *\tThis symbol defines the C type used for Perl's I64.\n */\n/* U64TYPE:\n *\tThis symbol defines the C type used for Perl's U64.\n */\n/* NVTYPE:\n *\tThis symbol defines the C type used for Perl's NV.\n */\n/* IVSIZE:\n *\tThis symbol contains the sizeof(IV).\n */\n/* UVSIZE:\n *\tThis symbol contains the sizeof(UV).\n */\n/* I8SIZE:\n *\tThis symbol contains the sizeof(I8).\n */\n/* U8SIZE:\n *\tThis symbol contains the sizeof(U8).\n */\n/* I16SIZE:\n *\tThis symbol contains the sizeof(I16).\n */\n/* U16SIZE:\n *\tThis symbol contains the sizeof(U16).\n */\n/* I32SIZE:\n *\tThis symbol contains the sizeof(I32).\n */\n/* U32SIZE:\n *\tThis symbol contains the sizeof(U32).\n */\n/* I64SIZE:\n *\tThis symbol contains the sizeof(I64).\n */\n/* U64SIZE:\n *\tThis symbol contains the sizeof(U64).\n */\n/* NVSIZE:\n *\tThis symbol contains the sizeof(NV).\n */\n/* NV_PRESERVES_UV:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tcan preserve all the bits of a variable of type UVTYPE.\n */\n/* NV_PRESERVES_UV_BITS:\n *\tThis symbol contains the number of bits a variable of type NVTYPE\n *\tcan preserve of a variable of type UVTYPE.\n */\n#define\tIVTYPE\t\tlong\t\t/**/\n#define\tUVTYPE\t\tunsigned long\t\t/**/\n#define\tI8TYPE\t\tchar\t\t/**/\n#define\tU8TYPE\t\tunsigned char\t\t/**/\n#define\tI16TYPE\t\tshort\t/**/\n#define\tU16TYPE\t\tunsigned short\t/**/\n#define\tI32TYPE\t\tlong\t/**/\n#define\tU32TYPE\t\tunsigned long\t/**/\n#ifdef HAS_QUAD\n#define\tI64TYPE\t\tlong long\t/**/\n#define\tU64TYPE\t\tunsigned long long\t/**/\n#endif\n#define\tNVTYPE\t\tdouble\t\t/**/\n#define\tIVSIZE\t\t4\t\t/**/\n#define\tUVSIZE\t\t4\t\t/**/\n#define\tI8SIZE\t\t1\t\t/**/\n#define\tU8SIZE\t\t1\t\t/**/\n#define\tI16SIZE\t\t2\t/**/\n#define\tU16SIZE\t\t2\t/**/\n#define\tI32SIZE\t\t4\t/**/\n#define\tU32SIZE\t\t4\t/**/\n#ifdef HAS_QUAD\n#define\tI64SIZE\t\t8\t/**/\n#define\tU64SIZE\t\t8\t/**/\n#endif\n#define\tNVSIZE\t\t8\t\t/**/\n/*#define\tNV_PRESERVES_UV\n#define\tNV_PRESERVES_UV_BITS\t31\n\n/* IVdf:\n *\tThis symbol defines the format string used for printing a Perl IV\n *\tas a signed decimal integer.\n */\n/* UVuf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned decimal integer.\n */\n/* UVof:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned octal integer.\n */\n/* UVxf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in lowercase abcdef.\n */\n/* UVXf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in uppercase ABCDEF.\n */\n/* NVef:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %e-ish floating point format.\n */\n/* NVff:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %f-ish floating point format.\n */\n/* NVgf:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %g-ish floating point format.\n */\n#define\tIVdf\t\t\"ld\"\t\t/**/\n#define\tUVuf\t\t\"lu\"\t\t/**/\n#define\tUVof\t\t\"lo\"\t\t/**/\n#define\tUVxf\t\t\"lx\"\t\t/**/\n#define\tUVXf\t\t\"lX\"\t\t/**/\n#define\tNVef\t\t\"e\"\t\t/**/\n#define\tNVff\t\t\"f\"\t\t/**/\n#define\tNVgf\t\t\"g\"\t\t/**/\n\n/* Pid_t:\n *\tThis symbol holds the type used to declare process ids in the kernel.\n *\tIt can be int, uint, pid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Pid_t pid_t\t\t/* PID type */\n\n/* PRIVLIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n */\n/* PRIVLIB_EXP:\n *\tThis symbol contains the ~name expanded version of PRIVLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define PRIVLIB \"/sys/lib/perl/5.30.3\"\t\t/**/\n#define PRIVLIB_EXP \"/sys/lib/perl/5.30.3\"\t\t/**/\n\n/* PTRSIZE:\n *\tThis symbol contains the size of a pointer, so that the C preprocessor\n *\tcan make decisions based on it.  It will be sizeof(void *) if\n *\tthe compiler supports (void *); otherwise it will be\n *\tsizeof(char *).\n */\n#define PTRSIZE 4\t\t/**/\n\n/* Drand01:\n *\tThis macro is to be used to generate uniformly distributed\n *\trandom numbers over the range [0., 1.[.  You may have to supply\n *\tan 'extern double drand48();' in your program since SunOS 4.1.3\n *\tdoesn't provide you with anything relevant in its headers.\n *\tSee HAS_DRAND48_PROTO.\n */\n/* Rand_seed_t:\n *\tThis symbol defines the type of the argument of the\n *\trandom seed function.\n */\n/* seedDrand01:\n *\tThis symbol defines the macro to be used in seeding the\n *\trandom number generator (see Drand01).\n */\n/* RANDBITS:\n *\tThis symbol indicates how many bits are produced by the\n *\tfunction used to generate normalized random numbers.\n *\tValues include 15, 16, 31, and 48.\n */\n#define Drand01()\t\t(rand() / (double) ((unsigned long)1 << 15))\t\t/**/\n#define Rand_seed_t\t\tunsigned\t\t/**/\n#define seedDrand01(x)\tsrand((Rand_seed_t)x)\t/**/\n#define RANDBITS\t\t15\t\t/**/\n\n/* SELECT_MIN_BITS:\n *\tThis symbol holds the minimum number of bits operated by select.\n *\tThat is, if you do select(n, ...), how many bits at least will be\n *\tcleared in the masks if some activity is detected.  Usually this\n *\tis either n or 32*ceil(n/32), especially many little-endians do\n *\tthe latter.  This is only useful if you have select(), naturally.\n */\n#define SELECT_MIN_BITS \t32\t/**/\n\n/* Select_fd_set_t:\n *\tThis symbol holds the type used for the 2nd, 3rd, and 4th\n *\targuments to select.  Usually, this is 'fd_set *', if HAS_FD_SET\n *\tis defined, and 'int *' otherwise.  This is only useful if you \n *\thave select(), of course.\n */\n#define Select_fd_set_t \tfd_set*\t/**/\n\n/* SIG_NAME:\n *\tThis symbol contains a list of signal names in order of\n *\tsignal number. This is intended\n *\tto be used as a static array initialization, like this:\n *\t\tchar *sig_name[] = { SIG_NAME };\n *\tThe signals in the list are separated with commas, and each signal\n *\tis surrounded by double quotes. There is no leading SIG in the signal\n *\tname, i.e. SIGQUIT is known as \"QUIT\".\n *\tGaps in the signal numbers (up to NSIG) are filled in with NUMnn,\n *\tetc., where nn is the actual signal number (e.g. NUM37).\n *\tThe signal number for sig_name[i] is stored in sig_num[i].\n *\tThe last element is 0 to terminate the list with a NULL.  This\n *\tcorresponds to the 0 at the end of the sig_num list.\n */\n/* SIG_NUM:\n *\tThis symbol contains a list of signal numbers, in the same order as the\n *\tSIG_NAME list. It is suitable for static array initialization, as in:\n *\t\tint sig_num[] = { SIG_NUM };\n *\tThe signals in the list are separated with commas, and the indices\n *\twithin that list and the SIG_NAME list match, so it's easy to compute\n *\tthe signal name from a number or vice versa at the price of a small\n *\tdynamic linear lookup. \n *\tDuplicates are allowed, but are moved to the end of the list.\n *\tThe signal number corresponding to sig_name[i] is sig_number[i].\n *\tif (i < NSIG) then sig_number[i] == i.  \n *\tThe last element is 0, corresponding to the 0 at the end of\n *\tthe sig_name list.\n */\n/* SIG_SIZE:\n *\tThis variable contains the number of elements of the SIG_NAME\n *\tand SIG_NUM arrays, excluding the final NULL entry.\n */\n#define SIG_NAME \"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"ABRT\", \"FPE\", \"KILL\", \"SEGV\", \"PIPE\", \"ALRM\", \"TERM\", \"USR1\", \"USR2\", \"BUS\", \"CHLD\", \"CONT\", \"STOP\", \"TSTP\", \"TTIN\", \"TTOU\", \"NUM21\", \"NUM22\", \"NUM23\", \"NUM24\", \"NUM25\", \"NUM26\", \"NUM27\", \"NUM28\", \"NUM29\", \"NUM30\", \"NUM31\", \"NUM32\", \"NUM33\", \"NUM34\", \"NUM35\", \"NUM36\", \"NUM37\", \"NUM38\", \"NUM39\", \"NUM40\", \"NUM41\", \"NUM42\", \"NUM43\", \"NUM44\", \"NUM45\", \"NUM46\", \"NUM47\", \"NUM48\", \"NUM49\", 0\t\t/**/\n#define SIG_NUM  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0\t\t/**/\n#define SIG_SIZE 50\t\t\t/**/\n\n/* SITEARCH:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-dependent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITEARCH_EXP:\n *\tThis symbol contains the ~name expanded version of SITEARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define SITEARCH_EXP  \"/_P9P_OBJTYPE/lib/perl/_P9P_VERSION/site_perl\"\t/* */\n#define SITEARCH  \"/_P9P_OBJTYPE/lib/perl/_P9P_VERSION/site_perl\"\t/* */\n\n\n/* SITELIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-independent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITELIB_EXP:\n *\tThis symbol contains the ~name expanded version of SITELIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* SITELIB_STEM:\n *\tThis define is SITELIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#define SITELIB \"/sys/lib/perl/5.30.3/site_perl\"\t\t/**/\n#define SITELIB_EXP \"/sys/lib/perl/5.30.3/site_perl\"\t\t/**/\n#define SITELIB_STEM \"/sys/lib/perl/5.30.3/site_perl\"\t\t/**/\n\n/* Size_t_size:\n *\tThis symbol holds the size of a Size_t in bytes.\n */\n#define Size_t_size 4\t\t/* */\n\n/* Size_t:\n *\tThis symbol holds the type used to declare length parameters\n *\tfor string functions.  It is usually size_t, but may be\n *\tunsigned long, int, etc.  It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Size_t size_t\t /* length parameter for string functions */\n\n/* Sock_size_t:\n *\tThis symbol holds the type used for the size argument of\n *\tvarious socket calls (just the base type, not the pointer-to).\n */\n#define Sock_size_t\t\tint /**/\n\n/* SSize_t:\n *\tThis symbol holds the type used by functions that return\n *\ta count of bytes or an error condition.  It must be a signed type.\n *\tIt is usually ssize_t, but may be long or int, etc.\n *\tIt may be necessary to include <sys/types.h> or <unistd.h>\n *\tto get any typedef'ed information.\n *\tWe will pick a type such that sizeof(SSize_t) == sizeof(Size_t).\n */\n#define SSize_t ssize_t\t /* signed count of bytes */\n\n/* STARTPERL:\n *\tThis variable contains the string to put in front of a perl\n *\tscript to make sure (one hopes) that it runs with perl and not\n *\tsome shell.\n */\n#define STARTPERL \"#!/bin/perl\"\t\t/**/\n\n/* STDCHAR:\n *\tThis symbol is defined to be the type of char used in stdio.h.\n *\tIt has the values \"unsigned char\" or \"char\".\n */\n#define STDCHAR char\t/**/\n\n/* HAS_STDIO_STREAM_ARRAY:\n *\tThis symbol, if defined, tells that there is an array\n *\tholding the stdio streams.\n */\n/* STDIO_STREAM_ARRAY:\n *\tThis symbol tells the name of the array holding the stdio streams.\n *\tUsual values include _iob, __iob, and __sF.\n */\n/*#define\tHAS_STDIO_STREAM_ARRAY\t/ **/\n#define STDIO_STREAM_ARRAY\t\n\n/* Uid_t_f:\n *\tThis symbol defines the format string used for printing a Uid_t.\n */\n#define\tUid_t_f\t\t\"hd\"\t\t/**/\n\n/* Uid_t_sign:\n *\tThis symbol holds the signedess of a Uid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Uid_t_sign\t-1\t\t/* UID sign */\n\n/* Uid_t_size:\n *\tThis symbol holds the size of a Uid_t in bytes.\n */\n#define Uid_t_size 2\t\t/* UID size */\n\n/* Uid_t:\n *\tThis symbol holds the type used to declare user ids in the kernel.\n *\tIt can be int, ushort, uid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Uid_t uid_t\t\t/* UID type */\n\n/* USE_64_BIT_INT:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be employed (be they 32 or 64 bits).  The minimal possible\n *\t64-bitness is used, just enough to get 64-bit integers into Perl.\n *\tThis may mean using for example \"long longs\", while your memory\n *\tmay still be limited to 2 gigabytes.\n */\n/* USE_64_BIT_ALL:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be used (be they 32 or 64 bits).  The maximal possible\n *\t64-bitness is employed: LP64 or ILP64, meaning that you will\n *\tbe able to use more than 2 gigabytes of memory.  This mode is\n *\teven more binary incompatible than USE_64_BIT_INT. You may not\n *\tbe able to run the resulting executable in a 32-bit CPU at all or\n *\tyou may need at least to reboot your OS to 64-bit mode.\n */\n#ifndef USE_64_BIT_INT\n/*#define\tUSE_64_BIT_INT\t\t/ **/\n#endif\n\n#ifndef USE_64_BIT_ALL\n/*#define\tUSE_64_BIT_ALL\t\t/ **/\n#endif\n\n/* USE_FAST_STDIO:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use 'fast stdio'.\n *\tDefaults to define in Perls 5.8 and earlier, to undef later.\n */\n#ifndef USE_FAST_STDIO\n/*#define\tUSE_FAST_STDIO\t\t/ **/\n#endif\n\n/* USE_LARGE_FILES:\n *\tThis symbol, if defined, indicates that large file support\n *\tshould be used when available.\n */\n#ifndef USE_LARGE_FILES\n#define\tUSE_LARGE_FILES\t\t/**/\n#endif\n\n/* USE_LONG_DOUBLE:\n *\tThis symbol, if defined, indicates that long doubles should\n *\tbe used when available.\n */\n#ifndef USE_LONG_DOUBLE\n/*#define\tUSE_LONG_DOUBLE\t\t/ **/\n#endif\n\n/* USE_MORE_BITS:\n *\tThis symbol, if defined, indicates that 64-bit interfaces and\n *\tlong doubles should be used when available.\n */\n#ifndef USE_MORE_BITS\n/*#define\tUSE_MORE_BITS\t\t/ **/\n#endif\n\n/* MULTIPLICITY:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use multiplicity.\n */\n#ifndef MULTIPLICITY\n/*#define\tMULTIPLICITY\t\t/ **/\n#endif\n\n/* USE_PERLIO:\n *\tThis symbol, if defined, indicates that the PerlIO abstraction should\n *\tbe used throughout.  If not defined, stdio should be\n *\tused in a fully backward compatible manner.\n */\n#ifndef USE_PERLIO\n#define\tUSE_PERLIO\t\t/**/\n#endif\n\n/* USE_SOCKS:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use socks.\n */\n#ifndef USE_SOCKS\n/*#define\tUSE_SOCKS\t\t/ **/\n#endif\n\n/* USE_ITHREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the interpreter-based threading implementation.\n */\n/* USE_5005THREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the 5.005-based threading implementation.\n */\n/* OLD_PTHREADS_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use the old draft POSIX threads API.\n */\n/* USE_REENTRANT_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\ttry to use the various _r versions of library functions.\n *\tThis is extremely experimental.\n */\n/*#define\tUSE_5005THREADS\t\t/ **/\n/*#define\tUSE_ITHREADS\t\t/ **/\n#if defined(USE_5005THREADS) && !defined(USE_ITHREADS)\n#define\t\tUSE_THREADS\t\t/* until src is revised*/\n#endif\n/*#define\tOLD_PTHREADS_API\t\t/ **/\n/*#define\tUSE_REENTRANT_API\t/ **/\n\n/* PERL_VENDORARCH:\n *\tIf defined, this symbol contains the name of a private library.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.\n *\tIt may have a ~ on the front. \n *\tThe standard distribution will put nothing in this directory.\n *\tVendors who distribute perl may wish to place their own\n *\tarchitecture-dependent modules and extensions in this directory with\n *\t\tMakeMaker Makefile.PL INSTALLDIRS=vendor \n *\tor equivalent.  See INSTALL for details.\n */\n/* PERL_VENDORARCH_EXP:\n *\tThis symbol contains the ~name expanded version of PERL_VENDORARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define PERL_VENDORARCH \"\"\t\t/ **/\n/*#define PERL_VENDORARCH_EXP \"\"\t\t/ **/\n\n/* PERL_VENDORLIB_EXP:\n *\tThis symbol contains the ~name expanded version of VENDORLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* PERL_VENDORLIB_STEM:\n *\tThis define is PERL_VENDORLIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n/*#define PERL_VENDORLIB_EXP \"\"\t\t/ **/\n/*#define PERL_VENDORLIB_STEM \"\"\t\t/ **/\n\n/* HAS_CRYPT:\n *\tThis symbol, if defined, indicates that the crypt routine is available\n *\tto encrypt passwords and the like.\n */\n/*#define HAS_CRYPT\t\t/ **/\n\n/* SETUID_SCRIPTS_ARE_SECURE_NOW:\n *\tThis symbol, if defined, indicates that the bug that prevents\n *\tsetuid scripts from being secure is not present in this kernel.\n */\n/* DOSUID:\n *\tThis symbol, if defined, indicates that the C program should\n *\tcheck the script that it is executing for setuid/setgid bits, and\n *\tattempt to emulate setuid/setgid on systems that have disabled\n *\tsetuid #! scripts because the kernel can't do it securely.\n *\tIt is up to the package designer to make sure that this emulation\n *\tis done securely.  Among other things, it should do an fstat on\n *\tthe script it just opened to make sure it really is a setuid/setgid\n *\tscript, it should make sure the arguments passed correspond exactly\n *\tto the argument on the #! line, and it should not trust any\n *\tsubprocesses to which it must pass the filename rather than the\n *\tfile descriptor of the script to be executed.\n */\n/*#define SETUID_SCRIPTS_ARE_SECURE_NOW\t/ **/\n/*#define DOSUID\t\t/ **/\n\n/* Shmat_t:\n *\tThis symbol holds the return type of the shmat() system call.\n *\tUsually set to 'void *' or 'char *'.\n */\n/* HAS_SHMAT_PROTOTYPE:\n *\tThis symbol, if defined, indicates that the sys/shm.h includes\n *\ta prototype for shmat().  Otherwise, it is up to the program to\n *\tguess one.  Shmat_t shmat(int, Shmat_t, int) is a good guess,\n *\tbut not always right so it should be emitted by the program only\n *\twhen HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.\n */\n#define Shmat_t \t/* config-skip */\n/*#define HAS_SHMAT_PROTOTYPE\t/ **/\n\n/* I_NDBM:\n *\tThis symbol, if defined, indicates that <ndbm.h> exists and should\n *\tbe included.\n */\n/*#define I_NDBM\t/ **/\n\n/* SH_PATH:\n *\tThis symbol contains the full pathname to the shell used on this\n *\ton this system to execute Bourne shell scripts.  Usually, this will be\n *\t/bin/sh, though it's possible that some systems will have /bin/ksh,\n *\t/bin/pdksh, /bin/ash, /bin/bash, or even something such as\n *\tD:/bin/sh.exe.\n */\n#define SH_PATH \"/bin/sh\"  /* config-skip */\n\n/* USE_CROSS_COMPILE:\n *\tThis symbol, if defined, indicates that Perl is being cross-compiled.\n */\n/* PERL_TARGETARCH:\n *\tThis symbol, if defined, indicates the target architecture\n *\tPerl has been cross-compiled to.  Undefined if not a cross-compile.\n */\n#ifndef USE_CROSS_COMPILE\n/*#define\tUSE_CROSS_COMPILE\t/ **/\n#define\tPERL_TARGETARCH\t\"\"\t/**/\n#endif\n\n/* HAS_COPYSIGNL:\n *\tThis symbol, if defined, indicates that the copysignl routine is\n *\tavailable.  If aintl is also present we can emulate modfl.\n */\n/*#define HAS_COPYSIGNL\t\t/**/\n\n/* USE_CPLUSPLUS:\n *\tThis symbol, if defined, indicates that a C++ compiler was\n *\tused to compiled Perl and will be used to compile extensions.\n */\n/*#define USE_CPLUSPLUS\t\t/**/\n\n/* HAS_DBMINIT_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the dbminit() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int dbminit(char *);\n */\n/*#define\tHAS_DBMINIT_PROTO\t/ **/\n\n/* HAS_DIRFD:\n *\tThis manifest constant lets the C program know that dirfd\n *\tis available.\n */\n/*#define HAS_DIRFD\t\t/ **/\n\n/* HAS_FLOCK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the flock() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int flock(int, int);\n */\n/*#define\tHAS_FLOCK_PROTO\t/ **/\n\n/* HAS_FPCLASSL:\n *\tThis symbol, if defined, indicates that the fpclassl routine is\n *\tavailable to classify long doubles.  Available for example in IRIX.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASSL\t\t/ **/\n\n/* HAS_NL_LANGINFO:\n *\tThis symbol, if defined, indicates that the nl_langinfo routine is\n *\tavailable to return local data.  You will also need <langinfo.h>\n *\tand therefore I_LANGINFO.\n */\n/*#define HAS_NL_LANGINFO\t\t/ **/\n\n/* HAS_PROCSELFEXE:\n *\tThis symbol is defined if PROCSELFEXE_PATH is a symlink\n *\tto the absolute pathname of the executing program.\n */\n/* PROCSELFEXE_PATH:\n *\tIf HAS_PROCSELFEXE is defined this symbol is the filename\n *\tof the symbolic link pointing to the absolute pathname of\n *\tthe executing program.\n */\n/*#define HAS_PROCSELFEXE\t/ **/\n#if defined(HAS_PROCSELFEXE) && !defined(PROCSELFEXE_PATH)\n#define PROCSELFEXE_PATH\t\t/**/\n#endif\n\n/* HAS_PTHREAD_ATTR_SETSCOPE:\n *\tThis symbol, if defined, indicates that the pthread_attr_setscope\n *\tsystem call is available to set the contention scope attribute of\n *\ta thread attribute object.\n */\n/*#define HAS_PTHREAD_ATTR_SETSCOPE\t\t/ **/\n\n/* HAS_SIGPROCMASK:\n *\tThis symbol, if defined, indicates that the sigprocmask\n *\tsystem call is available to examine or change the signal mask\n *\tof the calling process.\n */\n#define HAS_SIGPROCMASK\t\t/**/\n\n/* HAS_SOCKATMARK:\n *\tThis symbol, if defined, indicates that the sockatmark routine is\n *\tavailable to test whether a socket is at the out-of-band mark.\n */\n/*#define HAS_SOCKATMARK\t\t/ **/\n\n/* HAS_SOCKATMARK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sockatmark() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int sockatmark(int);\n */\n/*#define\tHAS_SOCKATMARK_PROTO\t/ **/\n\n/* HAS_SETRESGID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresgid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresgid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESGID_PROTO\t/ **/\n\n/* HAS_SETRESUID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresuid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresuid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESUID_PROTO\t/ **/\n\n/* HAS_STRFTIME:\n *\tThis symbol, if defined, indicates that the strftime routine is\n *\tavailable to do time formatting.\n */\n#define HAS_STRFTIME\t\t/**/\n\n/* HAS_SYSCALL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the syscall() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int syscall(int,  ...);\n *\t\textern int syscall(long, ...);\n */\n/*#define\tHAS_SYSCALL_PROTO\t/ **/\n\n/* U32_ALIGNMENT_REQUIRED:\n *\tThis symbol, if defined, indicates that you must access\n *\tcharacter data through U32-aligned pointers.\n */\n#ifndef U32_ALIGNMENT_REQUIRED\n#define U32_ALIGNMENT_REQUIRED\t/**/\n#endif\n\n/* HAS_USLEEP_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the usleep() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int usleep(useconds_t);\n */\n/*#define\tHAS_USLEEP_PROTO\t/ **/\n\n/* I_CRYPT:\n *\tThis symbol, if defined, indicates that <crypt.h> exists and\n *\tshould be included.\n */\n/*#define\tI_CRYPT\t\t/ **/\n\n/* I_FP:\n *\tThis symbol, if defined, indicates that <fp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP\t\t/ **/\n\n/* I_LANGINFO:\n *\tThis symbol, if defined, indicates that <langinfo.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LANGINFO\t\t/ **/\n\n/* HAS_CTERMID_R:\n *\tThis symbol, if defined, indicates that the ctermid_r routine\n *\tis available to ctermid re-entrantly.\n */\n/* CTERMID_R_PROTO:\n *\tThis symbol encodes the prototype of ctermid_r.\n *\tIt is zero if d_ctermid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctermid_r\n *\tis defined.\n */\n/*#define HAS_CTERMID_R\t   / **/\n#define CTERMID_R_PROTO 0\t   /**/\n\n/* HAS_ENDHOSTENT_R:\n *\tThis symbol, if defined, indicates that the endhostent_r routine\n *\tis available to endhostent re-entrantly.\n */\n/* ENDHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of endhostent_r.\n *\tIt is zero if d_endhostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endhostent_r\n *\tis defined.\n */\n/*#define HAS_ENDHOSTENT_R\t   / **/\n#define ENDHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDNETENT_R:\n *\tThis symbol, if defined, indicates that the endnetent_r routine\n *\tis available to endnetent re-entrantly.\n */\n/* ENDNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of endnetent_r.\n *\tIt is zero if d_endnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endnetent_r\n *\tis defined.\n */\n/*#define HAS_ENDNETENT_R\t   / **/\n#define ENDNETENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDPROTOENT_R:\n *\tThis symbol, if defined, indicates that the endprotoent_r routine\n *\tis available to endprotoent re-entrantly.\n */\n/* ENDPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of endprotoent_r.\n *\tIt is zero if d_endprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endprotoent_r\n *\tis defined.\n */\n/*#define HAS_ENDPROTOENT_R\t   / **/\n#define ENDPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDSERVENT_R:\n *\tThis symbol, if defined, indicates that the endservent_r routine\n *\tis available to endservent re-entrantly.\n */\n/* ENDSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of endservent_r.\n *\tIt is zero if d_endservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endservent_r\n *\tis defined.\n */\n/*#define HAS_ENDSERVENT_R\t   / **/\n#define ENDSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYADDR_R:\n *\tThis symbol, if defined, indicates that the gethostbyaddr_r routine\n *\tis available to gethostbyaddr re-entrantly.\n */\n/* GETHOSTBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyaddr_r.\n *\tIt is zero if d_gethostbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYADDR_R\t   / **/\n#define GETHOSTBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYNAME_R:\n *\tThis symbol, if defined, indicates that the gethostbyname_r routine\n *\tis available to gethostbyname re-entrantly.\n */\n/* GETHOSTBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyname_r.\n *\tIt is zero if d_gethostbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyname_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYNAME_R\t   / **/\n#define GETHOSTBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the gethostent_r routine\n *\tis available to gethostent re-entrantly.\n */\n/* GETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of gethostent_r.\n *\tIt is zero if d_gethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostent_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTENT_R\t   /* config-skip */\n#define GETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYADDR_R:\n *\tThis symbol, if defined, indicates that the getnetbyaddr_r routine\n *\tis available to getnetbyaddr re-entrantly.\n */\n/* GETNETBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyaddr_r.\n *\tIt is zero if d_getnetbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYADDR_R\t   / **/\n#define GETNETBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYNAME_R:\n *\tThis symbol, if defined, indicates that the getnetbyname_r routine\n *\tis available to getnetbyname re-entrantly.\n */\n/* GETNETBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyname_r.\n *\tIt is zero if d_getnetbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyname_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYNAME_R\t   / **/\n#define GETNETBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETNETENT_R:\n *\tThis symbol, if defined, indicates that the getnetent_r routine\n *\tis available to getnetent re-entrantly.\n */\n/* GETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of getnetent_r.\n *\tIt is zero if d_getnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetent_r\n *\tis defined.\n */\n/*#define HAS_GETNETENT_R\t   / **/\n#define GETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNAME_R:\n *\tThis symbol, if defined, indicates that the getprotobyname_r routine\n *\tis available to getprotobyname re-entrantly.\n */\n/* GETPROTOBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobyname_r.\n *\tIt is zero if d_getprotobyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobyname_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNAME_R\t   / **/\n#define GETPROTOBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNUMBER_R:\n *\tThis symbol, if defined, indicates that the getprotobynumber_r routine\n *\tis available to getprotobynumber re-entrantly.\n */\n/* GETPROTOBYNUMBER_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobynumber_r.\n *\tIt is zero if d_getprotobynumber_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobynumber_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNUMBER_R\t   / **/\n#define GETPROTOBYNUMBER_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the getprotoent_r routine\n *\tis available to getprotoent re-entrantly.\n */\n/* GETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of getprotoent_r.\n *\tIt is zero if d_getprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotoent_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOENT_R\t   / **/\n#define GETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYNAME_R:\n *\tThis symbol, if defined, indicates that the getservbyname_r routine\n *\tis available to getservbyname re-entrantly.\n */\n/* GETSERVBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyname_r.\n *\tIt is zero if d_getservbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyname_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYNAME_R\t   / **/\n#define GETSERVBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYPORT_R:\n *\tThis symbol, if defined, indicates that the getservbyport_r routine\n *\tis available to getservbyport re-entrantly.\n */\n/* GETSERVBYPORT_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyport_r.\n *\tIt is zero if d_getservbyport_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyport_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYPORT_R\t   / **/\n#define GETSERVBYPORT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT_R:\n *\tThis symbol, if defined, indicates that the getservent_r routine\n *\tis available to getservent re-entrantly.\n */\n/* GETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of getservent_r.\n *\tIt is zero if d_getservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservent_r\n *\tis defined.\n */\n/*#define HAS_GETSERVENT_R\t   / **/\n#define GETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_PTHREAD_ATFORK:\n *\tThis symbol, if defined, indicates that the pthread_atfork routine\n *\tis available to setup fork handlers.\n */\n/*#define HAS_PTHREAD_ATFORK\t\t/ **/\n\n/* HAS_READDIR64_R:\n *\tThis symbol, if defined, indicates that the readdir64_r routine\n *\tis available to readdir64 re-entrantly.\n */\n/* READDIR64_R_PROTO:\n *\tThis symbol encodes the prototype of readdir64_r.\n *\tIt is zero if d_readdir64_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir64_r\n *\tis defined.\n */\n/*#define HAS_READDIR64_R\t   / **/\n#define READDIR64_R_PROTO 0\t   /**/\n\n/* HAS_SETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the sethostent_r routine\n *\tis available to sethostent re-entrantly.\n */\n/* SETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of sethostent_r.\n *\tIt is zero if d_sethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_sethostent_r\n *\tis defined.\n */\n/*#define HAS_SETHOSTENT_R\t   / **/\n#define SETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_SETLOCALE_R:\n *\tThis symbol, if defined, indicates that the setlocale_r routine\n *\tis available to setlocale re-entrantly.\n */\n/* SETLOCALE_R_PROTO:\n *\tThis symbol encodes the prototype of setlocale_r.\n *\tIt is zero if d_setlocale_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setlocale_r\n *\tis defined.\n */\n/*#define HAS_SETLOCALE_R\t   / **/\n#define SETLOCALE_R_PROTO 0\t   /**/\n\n/* HAS_SETNETENT_R:\n *\tThis symbol, if defined, indicates that the setnetent_r routine\n *\tis available to setnetent re-entrantly.\n */\n/* SETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of setnetent_r.\n *\tIt is zero if d_setnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setnetent_r\n *\tis defined.\n */\n/*#define HAS_SETNETENT_R\t   / **/\n#define SETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_SETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the setprotoent_r routine\n *\tis available to setprotoent re-entrantly.\n */\n/* SETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of setprotoent_r.\n *\tIt is zero if d_setprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setprotoent_r\n *\tis defined.\n */\n/*#define HAS_SETPROTOENT_R\t   / **/\n#define SETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_SETSERVENT_R:\n *\tThis symbol, if defined, indicates that the setservent_r routine\n *\tis available to setservent re-entrantly.\n */\n/* SETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of setservent_r.\n *\tIt is zero if d_setservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setservent_r\n *\tis defined.\n */\n/*#define HAS_SETSERVENT_R\t   / **/\n#define SETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_TTYNAME_R:\n *\tThis symbol, if defined, indicates that the ttyname_r routine\n *\tis available to ttyname re-entrantly.\n */\n/* TTYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of ttyname_r.\n *\tIt is zero if d_ttyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ttyname_r\n *\tis defined.\n */\n/*#define HAS_TTYNAME_R\t   / **/\n#define TTYNAME_R_PROTO 0\t   /**/\n\n#endif\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/plan9/config_h.sample": "/*\n * This file was produced by running the config_h.SH script, which\n * gets its values from config.sh, which is generally produced by\n * running Configure.\n *\n * Feel free to modify any of this as the need arises.  Note, however,\n * that running config_h.SH again will wipe out any changes you've made.\n * For a more permanent change edit config.sh and rerun config_h.SH.\n *\n * $Id: Config_h.U,v 3.0.1.5 1997/02/28 14:57:43 ram Exp $\n */\n\n/*\n * Package name      : perl\n * Source directory  : .\n * Configuration time: Sun Nov 24 20:57:48 EST 2002\n * Configured by     : 9trouble\n * Target system     : plan9 17genr 1 0 generic pcfl \n */\n\n#ifndef _config_h_\n#define _config_h_\n\n/* LOC_SED:\n *\tThis symbol holds the complete pathname to the sed program.\n */\n#define LOC_SED \t\"/bin/sed\"\t/**/\n\n/* HAS_AINTL:\n *\tThis symbol, if defined, indicates that the aintl routine is\n *\tavailable.  If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_AINTL\t\t/ **/\n\n/* HAS_ALARM:\n *\tThis symbol, if defined, indicates that the alarm routine is\n *\tavailable.\n */\n#define HAS_ALARM\t\t/**/\n\n/* HASATTRIBUTE:\n *\tThis symbol indicates the C compiler can check for function attributes,\n *\tsuch as printf formats. This is normally only supported by GNU cc.\n */\n/*#define HASATTRIBUTE \t/ **/\n#ifndef HASATTRIBUTE\n#ifdef __attribute__\n#undef __attribute__\n#endif\n#define __attribute__(_arg_)\n#endif\n\n/* HAS_CHOWN:\n *\tThis symbol, if defined, indicates that the chown routine is\n *\tavailable.\n */\n#define HAS_CHOWN\t\t/**/\n\n/* HAS_CHROOT:\n *\tThis symbol, if defined, indicates that the chroot routine is\n *\tavailable.\n */\n/*#define HAS_CHROOT\t\t/ **/\n\n/* HAS_CHSIZE:\n *\tThis symbol, if defined, indicates that the chsize routine is available\n *\tto truncate files.  You might need a -lx to get this routine.\n */\n/*#define\tHAS_CHSIZE\t\t/ **/\n\n/* HAS_CUSERID:\n *\tThis symbol, if defined, indicates that the cuserid routine is\n *\tavailable to get character login names.\n */\n#define HAS_CUSERID\t\t/**/\n\n/* HAS_DIFFTIME:\n *\tThis symbol, if defined, indicates that the difftime routine is\n *\tavailable.\n */\n#define HAS_DIFFTIME\t\t/**/\n\n/* HAS_DLERROR:\n *\tThis symbol, if defined, indicates that the dlerror routine is\n *\tavailable to return a string describing the last error that\n *\toccurred from a call to dlopen(), dlclose() or dlsym().\n */\n/*#define HAS_DLERROR\t/ **/\n\n/* HAS_DUP2:\n *\tThis symbol, if defined, indicates that the dup2 routine is\n *\tavailable to duplicate file descriptors.\n */\n#define HAS_DUP2\t/**/\n\n/* HAS_FCHMOD:\n *\tThis symbol, if defined, indicates that the fchmod routine is available\n *\tto change mode of opened files.  If unavailable, use chmod().\n */\n#define HAS_FCHMOD\t\t/**/\n\n/* HAS_FCHOWN:\n *\tThis symbol, if defined, indicates that the fchown routine is available\n *\tto change ownership of opened files.  If unavailable, use chown().\n */\n/*#define HAS_FCHOWN\t\t/ **/\n\n/* HAS_FCNTL:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe fcntl() function exists.\n */\n#define HAS_FCNTL\t\t/**/\n\n/* HAS_FGETPOS:\n *\tThis symbol, if defined, indicates that the fgetpos routine is\n *\tavailable to get the file position indicator, similar to ftell().\n */\n#define HAS_FGETPOS\t/**/\n\n/* HAS_FLOCK:\n *\tThis symbol, if defined, indicates that the flock routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_FLOCK\t\t/ **/\n\n/* HAS_FORK:\n *\tThis symbol, if defined, indicates that the fork routine is\n *\tavailable.\n */\n#define HAS_FORK\t\t/**/\n\n/* HAS_FSETPOS:\n *\tThis symbol, if defined, indicates that the fsetpos routine is\n *\tavailable to set the file position indicator, similar to fseek().\n */\n#define HAS_FSETPOS\t/**/\n\n/* HAS_GETTIMEOFDAY:\n *\tThis symbol, if defined, indicates that the gettimeofday() system\n *\tcall is available for a sub-second accuracy clock. Usually, the file\n *\t<sys/resource.h> needs to be included (see I_SYS_RESOURCE).\n *\tThe type \"Timeval\" should be used to refer to \"struct timeval\".\n */\n#define HAS_GETTIMEOFDAY\t/**/\n#ifdef HAS_GETTIMEOFDAY\n#define Timeval struct timeval\t/* Structure used by gettimeofday() */\n#endif\n\n/* HAS_GETGROUPS:\n *\tThis symbol, if defined, indicates that the getgroups() routine is\n *\tavailable to get the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n#define HAS_GETGROUPS\t\t/**/\n\n/* HAS_GETLOGIN:\n *\tThis symbol, if defined, indicates that the getlogin routine is\n *\tavailable to get the login name.\n */\n#define HAS_GETLOGIN\t\t/**/\n\n/* HAS_GETPGID:\n *\tThis symbol, if defined, indicates to the C program that \n *\tthe getpgid(pid) function is available to get the\n *\tprocess group id.\n */\n/*#define HAS_GETPGID\t\t/ **/\n\n/* HAS_GETPGRP2:\n *\tThis symbol, if defined, indicates that the getpgrp2() (as in DG/UX)\n *\troutine is available to get the current process group.\n */\n/*#define HAS_GETPGRP2\t\t/ **/\n\n/* HAS_GETPPID:\n *\tThis symbol, if defined, indicates that the getppid routine is\n *\tavailable to get the parent process ID.\n */\n#define HAS_GETPPID\t\t/**/\n\n/* HAS_GETPRIORITY:\n *\tThis symbol, if defined, indicates that the getpriority routine is\n *\tavailable to get a process's priority.\n */\n/*#define HAS_GETPRIORITY\t\t/ **/\n\n/* HAS_INET_ATON:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tinet_aton() function is available to parse IP address \"dotted-quad\"\n *\tstrings.\n */\n/*#define HAS_INET_ATON\t\t/ **/\n\n/* HAS_KILLPG:\n *\tThis symbol, if defined, indicates that the killpg routine is available\n *\tto kill process groups.  If unavailable, you probably should use kill\n *\twith a negative process number.\n */\n/*#define HAS_KILLPG\t/ **/\n\n/* HAS_LINK:\n *\tThis symbol, if defined, indicates that the link routine is\n *\tavailable to create hard links.\n */\n/* #define HAS_LINK\t/**/\n\n/* HAS_LOCALECONV:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable for numeric and monetary formatting conventions.\n */\n#define HAS_LOCALECONV\t/**/\n\n/* HAS_LOCKF:\n *\tThis symbol, if defined, indicates that the lockf routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_LOCKF\t\t/ **/\n\n/* HAS_LSTAT:\n *\tThis symbol, if defined, indicates that the lstat routine is\n *\tavailable to do file stats on symbolic links.\n */\n/*#define HAS_LSTAT\t\t/ **/\n\n/* HAS_MBLEN:\n *\tThis symbol, if defined, indicates that the mblen routine is available\n *\tto find the number of bytes in a multibye character.\n */\n#define HAS_MBLEN\t\t/**/\n\n/* HAS_MBSTOWCS:\n *\tThis symbol, if defined, indicates that the mbstowcs routine is\n *\tavailable to covert a multibyte string into a wide character string.\n */\n#define\tHAS_MBSTOWCS\t\t/**/\n\n/* HAS_MBTOWC:\n *\tThis symbol, if defined, indicates that the mbtowc routine is available\n *\tto covert a multibyte to a wide character.\n */\n#define HAS_MBTOWC\t\t/**/\n\n/* HAS_MKDIR:\n *\tThis symbol, if defined, indicates that the mkdir routine is available\n *\tto create directories.  Otherwise you should fork off a new process to\n *\texec /bin/mkdir.\n */\n#define HAS_MKDIR\t\t/**/\n\n/* HAS_MKFIFO:\n *\tThis symbol, if defined, indicates that the mkfifo routine is\n *\tavailable to create FIFOs. Otherwise, mknod should be able to\n *\tdo it for you. However, if mkfifo is there, mknod might require\n *\tsuper-user privileges which mkfifo will not.\n */\n#define HAS_MKFIFO\t\t/**/\n\n/* HAS_MKTIME:\n *\tThis symbol, if defined, indicates that the mktime routine is\n *\tavailable.\n */\n#define HAS_MKTIME\t\t/**/\n\n/* HAS_MSYNC:\n *\tThis symbol, if defined, indicates that the msync system call is\n *\tavailable to synchronize a mapped file.\n */\n/*#define HAS_MSYNC\t\t/ **/\n\n/* HAS_MUNMAP:\n *\tThis symbol, if defined, indicates that the munmap system call is\n *\tavailable to unmap a region, usually mapped by mmap().\n */\n/*#define HAS_MUNMAP\t\t/ **/\n\n/* HAS_NICE:\n *\tThis symbol, if defined, indicates that the nice routine is\n *\tavailable.\n */\n/*#define HAS_NICE\t\t/ **/\n\n/* HAS_PATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given filename.\n */\n/* HAS_FPATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given open file descriptor.\n */\n#define HAS_PATHCONF\t\t/**/\n#define HAS_FPATHCONF\t\t/**/\n\n/* HAS_PAUSE:\n *\tThis symbol, if defined, indicates that the pause routine is\n *\tavailable to suspend a process until a signal is received.\n */\n#define HAS_PAUSE\t\t/**/\n\n/* HAS_PIPE:\n *\tThis symbol, if defined, indicates that the pipe routine is\n *\tavailable to create an inter-process channel.\n */\n#define HAS_PIPE\t\t/**/\n\n/* HAS_POLL:\n *\tThis symbol, if defined, indicates that the poll routine is\n *\tavailable to poll active file descriptors. You may safely\n *\tinclude <poll.h> when this symbol is defined.\n */\n/*#define HAS_POLL\t\t/ **/\n\n/* HAS_READDIR:\n *\tThis symbol, if defined, indicates that the readdir routine is\n *\tavailable to read directory entries. You may have to include\n *\t<dirent.h>. See I_DIRENT.\n */\n#define HAS_READDIR\t\t/**/\n\n/* HAS_SEEKDIR:\n *\tThis symbol, if defined, indicates that the seekdir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n/*#define HAS_SEEKDIR\t\t/ **/\n\n/* HAS_TELLDIR:\n *\tThis symbol, if defined, indicates that the telldir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n/*#define HAS_TELLDIR\t\t/ **/\n\n/* HAS_REWINDDIR:\n *\tThis symbol, if defined, indicates that the rewinddir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_REWINDDIR\t\t/**/\n\n/* HAS_READLINK:\n *\tThis symbol, if defined, indicates that the readlink routine is\n *\tavailable to read the value of a symbolic link.\n */\n/*#define HAS_READLINK\t\t/* */\n\n/* HAS_RENAME:\n *\tThis symbol, if defined, indicates that the rename routine is available\n *\tto rename files.  Otherwise you should do the unlink(), link(), unlink()\n *\ttrick.\n */\n#define HAS_RENAME\t/**/\n\n/* HAS_RMDIR:\n *\tThis symbol, if defined, indicates that the rmdir routine is\n *\tavailable to remove directories. Otherwise you should fork off a\n *\tnew process to exec /bin/rmdir.\n */\n#define HAS_RMDIR\t\t/**/\n\n/* HAS_SELECT:\n *\tThis symbol, if defined, indicates that the select routine is\n *\tavailable to select active file descriptors. If the timeout field\n *\tis used, <sys/time.h> may need to be included.\n */\n#define HAS_SELECT\t/**/\n\n/* HAS_SETEGID:\n *\tThis symbol, if defined, indicates that the setegid routine is available\n *\tto change the effective gid of the current program.\n */\n/*#define HAS_SETEGID\t\t/ **/\n\n/* HAS_SETEUID:\n *\tThis symbol, if defined, indicates that the seteuid routine is available\n *\tto change the effective uid of the current program.\n */\n/*#define HAS_SETEUID\t\t/ **/\n\n/* HAS_SETLINEBUF:\n *\tThis symbol, if defined, indicates that the setlinebuf routine is\n *\tavailable to change stderr or stdout from block-buffered or unbuffered\n *\tto a line-buffered mode.\n */\n#define HAS_SETLINEBUF\t\t/**/\n\n/* HAS_SETLOCALE:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable to handle locale-specific ctype implementations.\n */\n#define HAS_SETLOCALE\t/**/\n\n/* HAS_SETPGID:\n *\tThis symbol, if defined, indicates that the setpgid(pid, gpid)\n *\troutine is available to set process group ID.\n */\n#define HAS_SETPGID\t/**/\n\n/* HAS_SETPGRP2:\n *\tThis symbol, if defined, indicates that the setpgrp2() (as in DG/UX)\n *\troutine is available to set the current process group.\n */\n/*#define HAS_SETPGRP2\t\t/ **/\n\n/* HAS_SETPRIORITY:\n *\tThis symbol, if defined, indicates that the setpriority routine is\n *\tavailable to set a process's priority.\n */\n/*#define HAS_SETPRIORITY\t\t/ **/\n\n/* HAS_SETREGID:\n *\tThis symbol, if defined, indicates that the setregid routine is\n *\tavailable to change the real and effective gid of the current\n *\tprocess.\n */\n/* HAS_SETRESGID:\n *\tThis symbol, if defined, indicates that the setresgid routine is\n *\tavailable to change the real, effective and saved gid of the current\n *\tprocess.\n */\n/*#define HAS_SETREGID\t\t/ **/\n/*#define HAS_SETRESGID\t\t/ **/\n\n/* HAS_SETREUID:\n *\tThis symbol, if defined, indicates that the setreuid routine is\n *\tavailable to change the real and effective uid of the current\n *\tprocess.\n */\n/* HAS_SETRESUID:\n *\tThis symbol, if defined, indicates that the setresuid routine is\n *\tavailable to change the real, effective and saved uid of the current\n *\tprocess.\n */\n/*#define HAS_SETREUID\t\t/ **/\n/*#define HAS_SETRESUID\t\t/ **/\n\n/* HAS_SETRGID:\n *\tThis symbol, if defined, indicates that the setrgid routine is available\n *\tto change the real gid of the current program.\n */\n/*#define HAS_SETRGID\t\t/ **/\n\n/* HAS_SETRUID:\n *\tThis symbol, if defined, indicates that the setruid routine is available\n *\tto change the real uid of the current program.\n */\n/*#define HAS_SETRUID\t\t/ **/\n\n/* HAS_SETSID:\n *\tThis symbol, if defined, indicates that the setsid routine is\n *\tavailable to set the process group ID.\n */\n#define HAS_SETSID\t/**/\n\n/* HAS_STRCOLL:\n *\tThis symbol, if defined, indicates that the strcoll routine is\n *\tavailable to compare strings using collating information.\n */\n#define HAS_STRCOLL\t/**/\n\n/* HAS_STRTOD:\n *\tThis symbol, if defined, indicates that the strtod routine is\n *\tavailable to provide better numeric string conversion than atof().\n */\n#define HAS_STRTOD\t/**/\n\n/* HAS_STRTOL:\n *\tThis symbol, if defined, indicates that the strtol routine is available\n *\tto provide better numeric string conversion than atoi() and friends.\n */\n#define HAS_STRTOL\t/**/\n\n/* HAS_STRXFRM:\n *\tThis symbol, if defined, indicates that the strxfrm() routine is\n *\tavailable to transform strings.\n */\n#define HAS_STRXFRM\t/**/\n\n/* HAS_SYMLINK:\n *\tThis symbol, if defined, indicates that the symlink routine is available\n *\tto create symbolic links.\n */\n/*#define HAS_SYMLINK\t/ **/\n\n/* HAS_SYSCALL:\n *\tThis symbol, if defined, indicates that the syscall routine is\n *\tavailable to call arbitrary system calls. If undefined, that's tough.\n */\n/*#define HAS_SYSCALL\t/ **/\n\n/* HAS_SYSCONF:\n *\tThis symbol, if defined, indicates that sysconf() is available\n *\tto determine system related limits and options.\n */\n#define HAS_SYSCONF\t/**/\n\n/* HAS_SYSTEM:\n *\tThis symbol, if defined, indicates that the system routine is\n *\tavailable to issue a shell command.\n */\n#define HAS_SYSTEM\t/**/\n\n/* HAS_TCGETPGRP:\n *\tThis symbol, if defined, indicates that the tcgetpgrp routine is\n *\tavailable to get foreground process group ID.\n */\n#define HAS_TCGETPGRP\t\t/**/\n\n/* HAS_TCSETPGRP:\n *\tThis symbol, if defined, indicates that the tcsetpgrp routine is\n *\tavailable to set foreground process group ID.\n */\n#define HAS_TCSETPGRP\t\t/**/\n\n/* HAS_TRUNCATE:\n *\tThis symbol, if defined, indicates that the truncate routine is\n *\tavailable to truncate files.\n */\n/*#define HAS_TRUNCATE\t/ **/\n\n/* HAS_TZNAME:\n *\tThis symbol, if defined, indicates that the tzname[] array is\n *\tavailable to access timezone names.\n */\n#define HAS_TZNAME\t\t/**/\n\n/* HAS_UMASK:\n *\tThis symbol, if defined, indicates that the umask routine is\n *\tavailable to set and get the value of the file creation mask.\n */\n#define HAS_UMASK\t\t/**/\n\n/* HAS_USLEEP:\n *\tThis symbol, if defined, indicates that the usleep routine is\n *\tavailable to let the process sleep on a sub-second accuracy.\n */\n/*#define HAS_USLEEP\t\t/ **/\n\n/* HAS_WAIT4:\n *\tThis symbol, if defined, indicates that wait4() exists.\n */\n/*#define HAS_WAIT4\t/ **/\n\n/* HAS_WAITPID:\n *\tThis symbol, if defined, indicates that the waitpid routine is\n *\tavailable to wait for child process.\n */\n#define HAS_WAITPID\t/**/\n\n/* HAS_WCSTOMBS:\n *\tThis symbol, if defined, indicates that the wcstombs routine is\n *\tavailable to convert wide character strings to multibyte strings.\n */\n#define HAS_WCSTOMBS\t/**/\n\n/* HAS_WCTOMB:\n *\tThis symbol, if defined, indicates that the wctomb routine is available\n *\tto covert a wide character to a multibyte.\n */\n#define HAS_WCTOMB\t\t/**/\n\n/* I_ARPA_INET:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <arpa/inet.h> to get inet_addr and friends declarations.\n */\n#define\tI_ARPA_INET\t\t/**/\n\n/* I_DBM:\n *\tThis symbol, if defined, indicates that <dbm.h> exists and should\n *\tbe included.\n */\n/* I_RPCSVC_DBM:\n *\tThis symbol, if defined, indicates that <rpcsvc/dbm.h> exists and\n *\tshould be included.\n */\n/*#define I_DBM\t/ **/\n/*#define I_RPCSVC_DBM\t/ **/\n\n/* I_DIRENT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <dirent.h>. Using this symbol also triggers the definition\n *\tof the Direntry_t define which ends up being 'struct dirent' or\n *\t'struct direct' depending on the availability of <dirent.h>.\n */\n/* DIRNAMLEN:\n *\tThis symbol, if defined, indicates to the C program that the length\n *\tof directory entry names is provided by a d_namlen field.  Otherwise\n *\tyou need to do strlen() on the d_name field.\n */\n/* Direntry_t:\n *\tThis symbol is set to 'struct direct' or 'struct dirent' depending on\n *\twhether dirent is available or not. You should use this pseudo type to\n *\tportably declare your directory entries.\n */\n#define I_DIRENT\t\t/**/\n/*#define DIRNAMLEN\t/ **/\n#define Direntry_t struct dirent\n\n/* I_DLFCN:\n *\tThis symbol, if defined, indicates that <dlfcn.h> exists and should\n *\tbe included.\n */\n/*#define I_DLFCN\t\t/ **/\n\n/* I_FCNTL:\n *\tThis manifest constant tells the C program to include <fcntl.h>.\n */\n#define I_FCNTL\t/**/\n\n/* I_LOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <locale.h>.\n */\n#define\tI_LOCALE\t\t/**/\n\n/* I_NET_ERRNO:\n *\tThis symbol, if defined, indicates that <net/errno.h> exists and \n *\tshould be included.\n */\n/*#define I_NET_ERRNO\t\t/ **/\n\n/* I_NETINET_IN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/in.h>. Otherwise, you may try <sys/in.h>.\n */\n#define I_NETINET_IN\t/**/\n\n/* I_SYS_DIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/dir.h>.\n */\n/*#define I_SYS_DIR\t\t/ **/\n\n/* I_SYS_FILE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/file.h> to get definition of R_OK and friends.\n */\n/*#define I_SYS_FILE\t\t/ **/\n\n/* I_SYS_IOCTL:\n *\tThis symbol, if defined, indicates that <sys/ioctl.h> exists and should\n *\tbe included. Otherwise, include <sgtty.h> or <termio.h>.\n */\n/* I_SYS_SOCKIO:\n *\tThis symbol, if defined, indicates the <sys/sockio.h> should be included\n *\tto get socket ioctl options, like SIOCATMARK.\n */\n#define\tI_SYS_IOCTL\t\t/**/\n/*#define I_SYS_SOCKIO\t/ **/\n\n/* I_SYS_NDIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/ndir.h>.\n */\n/*#define I_SYS_NDIR\t/ **/\n\n/* I_SYS_PARAM:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/param.h>.\n */\n#define I_SYS_PARAM\t\t/**/\n\n/* I_SYS_RESOURCE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/resource.h>.\n */\n#define I_SYS_RESOURCE\t\t/**/\n\n/* I_SYS_SELECT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/select.h> in order to get definition of struct timeval.\n */\n#define I_SYS_SELECT\t/**/\n\n/* I_SYS_STAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/stat.h>.\n */\n#define\tI_SYS_STAT\t\t/**/\n\n/* I_SYS_TIMES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/times.h>.\n */\n#define\tI_SYS_TIMES\t\t/**/\n\n/* I_SYS_TYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/types.h>.\n */\n#define\tI_SYS_TYPES\t\t/**/\n\n/* I_SYS_UN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/un.h> to get UNIX domain socket definitions.\n */\n#define I_SYS_UN\t\t/**/\n\n/* I_SYS_WAIT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/wait.h>.\n */\n#define I_SYS_WAIT\t/**/\n\n/* I_TERMIO:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<termio.h> rather than <sgtty.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/* I_TERMIOS:\n *\tThis symbol, if defined, indicates that the program should include\n *\tthe POSIX termios.h rather than sgtty.h or termio.h.\n *\tThere are also differences in the ioctl() calls that depend on the\n *\tvalue of this symbol.\n */\n/* I_SGTTY:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<sgtty.h> rather than <termio.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/*#define I_TERMIO\t\t/ **/\n#define I_TERMIOS\t\t/**/\n/*#define I_SGTTY\t\t/ **/\n\n/* I_UNISTD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <unistd.h>.\n */\n#define I_UNISTD\t\t/**/\n\n/* I_UTIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <utime.h>.\n */\n#define I_UTIME\t\t/**/\n\n/* I_VFORK:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude vfork.h.\n */\n/*#define I_VFORK\t/ **/\n\n/* INTSIZE:\n *\tThis symbol contains the value of sizeof(int) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* LONGSIZE:\n *\tThis symbol contains the value of sizeof(long) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* SHORTSIZE:\n *\tThis symbol contains the value of sizeof(short) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n#define INTSIZE 4\t\t/**/\n#define LONGSIZE 4\t\t/**/\n#define SHORTSIZE 2\t\t/**/\n\n/* MULTIARCH:\n *\tThis symbol, if defined, signifies that the build\n *\tprocess will produce some binary files that are going to be\n *\tused in a cross-platform environment.  This is the case for\n *\texample with the NeXT \"fat\" binaries that contain executables\n *\tfor several CPUs.\n */\n/*#define MULTIARCH\t\t/ **/\n\n/* HAS_QUAD:\n *\tThis symbol, if defined, tells that there's a 64-bit integer type,\n *\tQuad_t, and its unsigned counterpart, Uquad_t. QUADKIND will be one\n *\tof QUAD_IS_INT, QUAD_IS_LONG, QUAD_IS_LONG_LONG, or QUAD_IS_INT64_T.\n */\n#define HAS_QUAD\t/**/\n#ifdef HAS_QUAD\n#   define Quad_t long long\t/**/\n#   define Uquad_t unsigned long long\t/**/\n#   define QUADKIND 3\t/**/\n#   define QUAD_IS_INT\t1\n#   define QUAD_IS_LONG\t2\n#   define QUAD_IS_LONG_LONG\t3\n#   define QUAD_IS_INT64_T\t4\n#endif\n\n/* HAS_ACCESSX:\n *\tThis symbol, if defined, indicates that the accessx routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_ACCESSX\t\t/ **/\n\n/* HAS_EACCESS:\n *\tThis symbol, if defined, indicates that the eaccess routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_EACCESS\t\t/ **/\n\n/* I_SYS_ACCESS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/access.h>.\n */\n/*#define   I_SYS_ACCESS                / **/\n\n/* I_SYS_SECURITY:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/security.h>.\n */\n/*#define   I_SYS_SECURITY\t/ **/\n\n/* OSNAME:\n *\tThis symbol contains the name of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n/* OSVERS:\n *\tThis symbol contains the version of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n#define OSNAME \"plan9\"\t\t/**/\n#define OSVERS \"1\"\t\t/**/\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble, or a long double when applicable. Usual values are 2,\n *\t4 and 8. The default is eight, for safety.\n */\n#if defined(MULTIARCH)\n#  define MEM_ALIGNBYTES 8\n#else\n#define MEM_ALIGNBYTES 4\n#endif\n\n/* ARCHLIB:\n *\tThis variable, if defined, holds the name of the directory in\n *\twhich the user wants to put architecture-dependent public\n *\tlibrary files for perl.  It is most often a local directory\n *\tsuch as /usr/local/lib.  Programs using this variable must be\n *\tprepared to deal with filename expansion.  If ARCHLIB is the\n *\tsame as PRIVLIB, it is not defined, since presumably the\n *\tprogram already searches PRIVLIB.\n */\n/* ARCHLIB_EXP:\n *\tThis symbol contains the ~name expanded version of ARCHLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define ARCHLIB \"/sys/lib/perl/5.8.0/386\"\t\t/**/\n#define ARCHLIB_EXP \"/sys/lib/perl/5.8.0/386\"\t\t/**/\n\n/* ARCHNAME:\n *\tThis symbol holds a string representing the architecture name.\n *\tIt may be used to construct an architecture-dependant pathname\n *\twhere library files may be held under a private library, for\n *\tinstance.\n */\n#define ARCHNAME \"386\"\t\t/**/\n\n/* HAS_ATOLF:\n *\tThis symbol, if defined, indicates that the atolf routine is\n *\tavailable to convert strings into long doubles.\n */\n/*#define HAS_ATOLF\t\t/ **/\n\n/* HAS_ATOLL:\n *\tThis symbol, if defined, indicates that the atoll routine is\n *\tavailable to convert strings into long longs.\n */\n#define HAS_ATOLL\t\t/**/\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n#define BIN \"/usr/bin\"\t/**/\n#define BIN_EXP \"/usr/bin\"\t/**/\n\n/* BYTEORDER:\n *\tThis symbol holds the hexadecimal constant defined in byteorder,\n *\tin a UV, i.e. 0x1234 or 0x4321 or 0x12345678, etc...\n *\tIf the compiler supports cross-compiling or multiple-architecture\n *\tbinaries (eg. on NeXT systems), use compiler-defined macros to\n *\tdetermine the byte order.\n *\tOn NeXT 3.2 (and greater), you can build \"Fat\" Multiple Architecture\n *\tBinaries (MAB) on either big endian or little endian machines.\n *\tThe endian-ness is available at compile-time.  This only matters\n *\tfor perl, where the config.h can be generated and installed on \n *\tone system, and used by a different architecture to build an\n *\textension.  Older versions of NeXT that might not have\n *\tdefined either *_ENDIAN__ were all on Motorola 680x0 series,\n *\tso the default case (for NeXT) is big endian to catch them. \n *\tThis might matter for NeXT 3.0.\n */\n#if defined(MULTIARCH)\n#  ifdef __LITTLE_ENDIAN__\n#    if LONGSIZE == 4\n#      define BYTEORDER 0x1234\n#    else\n#      if LONGSIZE == 8\n#        define BYTEORDER 0x12345678\n#      endif\n#    endif\n#  else\n#    ifdef __BIG_ENDIAN__\n#      if LONGSIZE == 4\n#        define BYTEORDER 0x4321\n#      else\n#        if LONGSIZE == 8\n#          define BYTEORDER 0x87654321\n#        endif\n#      endif\n#    endif\n#  endif\n#  if !defined(BYTEORDER) && (defined(NeXT) || defined(__NeXT__))\n#    define BYTEORDER 0x4321\n#  endif\n#else\n#define BYTEORDER 0x1234\t/* large digits for MSB */\n#endif /* NeXT */\n\n/* CAT2:\n *\tThis macro catenates 2 tokens together.\n */\n/* STRINGIFY:\n *\tThis macro surrounds its token with double quotes.\n */\n#if 42 == 1\n#define CAT2(a,b)\ta/**/b\n#define STRINGIFY(a)\t\"a\"\n\t\t/* If you can get stringification with catify, tell me how! */\n#endif\n#if 42 == 42\n#define PeRl_CaTiFy(a, b)\ta ## b\t\n#define PeRl_StGiFy(a)\t#a\n/* the additional level of indirection enables these macros to be\n * used as arguments to other macros.  See K&R 2nd ed., page 231. */\n#define CAT2(a,b)\tPeRl_CaTiFy(a,b)\n#define StGiFy(a)\tPeRl_StGiFy(a)\n#define STRINGIFY(a)\tPeRl_StGiFy(a)\n#endif\n#if 42 != 1 && 42 != 42\n#   include \"Bletch: How does this C preprocessor concatenate tokens?\"\n#endif\n\n/* CPPSTDIN:\n *\tThis symbol contains the first part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.\t Typical value of \"cc -E\" or \"/lib/cpp\", but it can also\n *\tcall a wrapper. See CPPRUN.\n */\n/* CPPMINUS:\n *\tThis symbol contains the second part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  This symbol will have the value \"-\" if CPPSTDIN needs a minus\n *\tto specify standard input, otherwise the value is \"\".\n */\n/* CPPRUN:\n *\tThis symbol contains the string which will invoke a C preprocessor on\n *\tthe standard input and produce to standard output. It needs to end\n *\twith CPPLAST, after all other preprocessor flags have been specified.\n *\tThe main difference with CPPSTDIN is that this program will never be a\n *\tpointer to a shell wrapper, i.e. it will be empty if no preprocessor is\n *\tavailable directly to the user. Note that it may well be different from\n *\tthe preprocessor used to compile the C program.\n */\n/* CPPLAST:\n *\tThis symbol is intended to be used along with CPPRUN in the same manner\n *\tsymbol CPPMINUS is used with CPPSTDIN. It contains either \"-\" or \"\".\n */\n#define CPPSTDIN \"cppstdin\"\n#define CPPMINUS \"\"\n#define CPPRUN \"/bin/cpp\"\n#define CPPLAST \"\"\n\n/* HAS__FWALK:\n *\tThis symbol, if defined, indicates that the _fwalk system call is\n *\tavailable to apply a function to all the file handles.\n */\n/*#define HAS__FWALK\t\t/ **/\n\n/* HAS_ACCESS:\n *\tThis manifest constant lets the C program know that the access()\n *\tsystem call is available to check for accessibility using real UID/GID.\n *\t(always present on UNIX.)\n */\n#define HAS_ACCESS\t\t/**/\n\n/* HAS_ASCTIME_R:\n *\tThis symbol, if defined, indicates that the asctime_r routine\n *\tis available to asctime re-entrantly.\n */\n/* ASCTIME_R_PROTO:\n *\tThis symbol encodes the prototype of asctime_r.\n *\tIt is zero if d_asctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_asctime_r\n *\tis defined.\n */\n/*#define HAS_ASCTIME_R\t   / **/\n#define ASCTIME_R_PROTO 0\t   /**/\n\n/* CASTI32:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tor large floating point numbers to 32-bit ints.\n */\n/*#define\tCASTI32\t\t/ **/\n\n/* CASTNEGFLOAT:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tnumbers to unsigned longs, ints and shorts.\n */\n/* CASTFLAGS:\n *\tThis symbol contains flags that say what difficulties the compiler\n *\thas casting odd floating values to unsigned long:\n *\t\t0 = ok\n *\t\t1 = couldn't cast < 0\n *\t\t2 = couldn't cast >= 0x80000000\n *\t\t4 = couldn't cast in argument expression list\n */\n/*#define\tCASTNEGFLOAT\t\t/ **/\n#define CASTFLAGS 7\t\t/**/\n\n/* HAS_CLASS:\n *\tThis symbol, if defined, indicates that the class routine is\n *\tavailable to classify doubles.  Available for example in AIX.\n *\tThe returned values are defined in <float.h> and are:\n *\n *\tFP_PLUS_NORM\tPositive normalized, nonzero\n *\tFP_MINUS_NORM\tNegative normalized, nonzero\n *\tFP_PLUS_DENORM\tPositive denormalized, nonzero\n *\tFP_MINUS_DENORM\tNegative denormalized, nonzero\n *\tFP_PLUS_ZERO\t+0.0\n *\tFP_MINUS_ZERO\t-0.0\n *\tFP_PLUS_INF\t+INF\n *\tFP_MINUS_INF\t-INF\n *\tFP_NANS\t\tSignaling Not a Number (NaNS)\n *\tFP_NANQ\t\tQuiet Not a Number (NaNQ)\n */\n/*#define HAS_CLASS\t\t/ **/\n\n/* VOID_CLOSEDIR:\n *\tThis symbol, if defined, indicates that the closedir() routine\n *\tdoes not return a value.\n */\n/*#define VOID_CLOSEDIR\t\t/ **/\n\n/* HAS_STRUCT_CMSGHDR:\n *\tThis symbol, if defined, indicates that the struct cmsghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_CMSGHDR\t/ **/\n\n/* HAS_CRYPT_R:\n *\tThis symbol, if defined, indicates that the crypt_r routine\n *\tis available to crypt re-entrantly.\n */\n/* CRYPT_R_PROTO:\n *\tThis symbol encodes the prototype of crypt_r.\n *\tIt is zero if d_crypt_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_crypt_r\n *\tis defined.\n */\n/*#define HAS_CRYPT_R\t   / **/\n#define CRYPT_R_PROTO 0\t   /**/\n\n/* HAS_CSH:\n *\tThis symbol, if defined, indicates that the C-shell exists.\n */\n/* CSH:\n *\tThis symbol, if defined, contains the full pathname of csh.\n */\n/*#define HAS_CSH\t\t/ **/\n#ifdef HAS_CSH\n#define CSH \"csh\"\t/**/\n#endif\n\n/* HAS_CTIME_R:\n *\tThis symbol, if defined, indicates that the ctime_r routine\n *\tis available to ctime re-entrantly.\n */\n/* CTIME_R_PROTO:\n *\tThis symbol encodes the prototype of ctime_r.\n *\tIt is zero if d_ctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctime_r\n *\tis defined.\n */\n/*#define HAS_CTIME_R\t   / **/\n#define CTIME_R_PROTO 0\t   /**/\n\n/* DLSYM_NEEDS_UNDERSCORE:\n *\tThis symbol, if defined, indicates that we need to prepend an\n *\tunderscore to the symbol name before calling dlsym().  This only\n *\tmakes sense if you *have* dlsym, which we will presume is the\n *\tcase if you're using dl_dlopen.xs.\n */\n/*#define \tDLSYM_NEEDS_UNDERSCORE \t/ **/\n\n/* HAS_DRAND48_R:\n *\tThis symbol, if defined, indicates that the drand48_r routine\n *\tis available to drand48 re-entrantly.\n */\n/* DRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of drand48_r.\n *\tIt is zero if d_drand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_drand48_r\n *\tis defined.\n */\n/*#define HAS_DRAND48_R\t   / **/\n#define DRAND48_R_PROTO 0\t   /**/\n\n/* HAS_DRAND48_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the drand48() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern double drand48(void);\n */\n/*#define\tHAS_DRAND48_PROTO\t/ **/\n\n/* HAS_ENDGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the group database.\n */\n#define HAS_ENDGRENT\t\t/**/\n\n/* HAS_ENDGRENT_R:\n *\tThis symbol, if defined, indicates that the endgrent_r routine\n *\tis available to endgrent re-entrantly.\n */\n/* ENDGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of endgrent_r.\n *\tIt is zero if d_endgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endgrent_r\n *\tis defined.\n */\n/*#define HAS_ENDGRENT_R\t   / **/\n#define ENDGRENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDHOSTENT:\n *\tThis symbol, if defined, indicates that the endhostent() routine is\n *\tavailable to close whatever was being used for host queries.\n */\n#define HAS_ENDHOSTENT\t\t/**/\n\n/* HAS_ENDNETENT:\n *\tThis symbol, if defined, indicates that the endnetent() routine is\n *\tavailable to close whatever was being used for network queries.\n */\n/*#define HAS_ENDNETENT\t\t/ **/\n\n/* HAS_ENDPROTOENT:\n *\tThis symbol, if defined, indicates that the endprotoent() routine is\n *\tavailable to close whatever was being used for protocol queries.\n */\n/*#define HAS_ENDPROTOENT\t\t/ **/\n\n/* HAS_ENDPWENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the passwd database.\n */\n#define HAS_ENDPWENT\t\t/**/\n\n/* HAS_ENDPWENT_R:\n *\tThis symbol, if defined, indicates that the endpwent_r routine\n *\tis available to endpwent re-entrantly.\n */\n/* ENDPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of endpwent_r.\n *\tIt is zero if d_endpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endpwent_r\n *\tis defined.\n */\n/*#define HAS_ENDPWENT_R\t   / **/\n#define ENDPWENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDSERVENT:\n *\tThis symbol, if defined, indicates that the endservent() routine is\n *\tavailable to close whatever was being used for service queries.\n */\n/*#define HAS_ENDSERVENT\t\t/ **/\n\n/* HAS_FAST_STDIO:\n *\tThis symbol, if defined, indicates that the \"fast stdio\"\n *\tis available to manipulate the stdio buffers directly.\n */\n/*#define HAS_FAST_STDIO\t\t/**/\n\n/* HAS_FCHDIR:\n *\tThis symbol, if defined, indicates that the fchdir routine is\n *\tavailable to change directory using a file descriptor.\n */\n/*#define HAS_FCHDIR\t\t/ **/\n\n/* FCNTL_CAN_LOCK:\n *\tThis symbol, if defined, indicates that fcntl() can be used\n *\tfor file locking.  Normally on Unix systems this is defined.\n *\tIt may be undefined on VMS.\n */\n/*#define FCNTL_CAN_LOCK\t\t/ **/\n\n/* HAS_FD_SET:\n *\tThis symbol, when defined, indicates presence of the fd_set typedef\n *\tin <sys/types.h>\n */\n/*#define HAS_FD_SET\t/ **/\n\n/* HAS_FINITE:\n *\tThis symbol, if defined, indicates that the finite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_FINITE\t\t/ **/\n\n/* HAS_FINITEL:\n *\tThis symbol, if defined, indicates that the finitel routine is\n *\tavailable to check whether a long double is finite\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_FINITEL\t\t/ **/\n\n/* FLEXFILENAMES:\n *\tThis symbol, if defined, indicates that the system supports filenames\n *\tlonger than 14 characters.\n */\n#define\tFLEXFILENAMES\t\t/**/\n\n/* HAS_FP_CLASS:\n *\tThis symbol, if defined, indicates that the fp_class routine is\n *\tavailable to classify doubles.  Available for example in Digital UNIX.\n *\tThe returned values are defined in <math.h> and are:\n *\n *\tFP_SNAN           Signaling NaN (Not-a-Number)\n *\tFP_QNAN           Quiet NaN (Not-a-Number)\n *\tFP_POS_INF        +infinity\n *\tFP_NEG_INF        -infinity\n *\tFP_POS_NORM       Positive normalized\n *\tFP_NEG_NORM       Negative normalized\n *\tFP_POS_DENORM     Positive denormalized\n *\tFP_NEG_DENORM     Negative denormalized\n *\tFP_POS_ZERO       +0.0 (positive zero)\n *\tFP_NEG_ZERO       -0.0 (negative zero)\n */\n/*#define HAS_FP_CLASS\t\t/ **/\n\n/* HAS_FPCLASS:\n *\tThis symbol, if defined, indicates that the fpclass routine is\n *\tavailable to classify doubles.  Available for example in Solaris/SVR4.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASS\t\t/ **/\n\n/* HAS_FPCLASSIFY:\n *\tThis symbol, if defined, indicates that the fpclassify routine is\n *\tavailable to classify doubles.  Available for example in HP-UX.\n *\tThe returned values are defined in <math.h> and are\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n/*#define HAS_FPCLASSIFY\t\t/ **/\n\n/* HAS_FPOS64_T:\n *\tThis symbol will be defined if the C compiler supports fpos64_t.\n */\n/*#define\tHAS_FPOS64_T    \t/ **/\n\n/* HAS_FREXPL:\n *\tThis symbol, if defined, indicates that the frexpl routine is\n *\tavailable to break a long double floating-point number into\n *\ta normalized fraction and an integral power of 2.\n */\n/*#define HAS_FREXPL\t\t/ **/\n\n/* HAS_STRUCT_FS_DATA:\n *\tThis symbol, if defined, indicates that the struct fs_data\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_FS_DATA\t/ **/\n\n/* HAS_FSEEKO:\n *\tThis symbol, if defined, indicates that the fseeko routine is\n *\tavailable to fseek beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FSEEKO\t\t/ **/\n\n/* HAS_FSTATFS:\n *\tThis symbol, if defined, indicates that the fstatfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATFS\t\t/ **/\n\n/* HAS_FSYNC:\n *\tThis symbol, if defined, indicates that the fsync routine is\n *\tavailable to write a file's modified data and attributes to\n *\tpermanent storage.\n */\n#define HAS_FSYNC\t\t/**/\n\n/* HAS_FTELLO:\n *\tThis symbol, if defined, indicates that the ftello routine is\n *\tavailable to ftell beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FTELLO\t\t/ **/\n\n/* Gconvert:\n *\tThis preprocessor macro is defined to convert a floating point\n *\tnumber to a string without a trailing decimal point.  This\n *\temulates the behavior of sprintf(\"%g\"), but is sometimes much more\n *\tefficient.  If gconvert() is not available, but gcvt() drops the\n *\ttrailing decimal point, then gcvt() is used.  If all else fails,\n *\ta macro using sprintf(\"%g\") is used. Arguments for the Gconvert\n *\tmacro are: value, number of digits, whether trailing zeros should\n *\tbe retained, and the output buffer.\n *\tThe usual values are:\n *\t\td_Gconvert='gconvert((x),(n),(t),(b))'\n *\t\td_Gconvert='gcvt((x),(n),(b))'\n *\t\td_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\n *\tThe last two assume trailing zeros should not be kept.\n */\n#define Gconvert(x,n,t,b) sprintf((b),\"%.*g\",(n),(x))\n\n/* HAS_GETCWD:\n *\tThis symbol, if defined, indicates that the getcwd routine is\n *\tavailable to get the current working directory.\n */\n#define HAS_GETCWD\t\t/**/\n\n/* HAS_GETESPWNAM:\n *\tThis symbol, if defined, indicates that the getespwnam system call is\n *\tavailable to retrieve enhanced (shadow) password entries by name.\n */\n/*#define HAS_GETESPWNAM\t\t/ **/\n\n/* HAS_GETFSSTAT:\n *\tThis symbol, if defined, indicates that the getfsstat routine is\n *\tavailable to stat filesystems in bulk.\n */\n/*#define HAS_GETFSSTAT\t\t/ **/\n\n/* HAS_GETGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for sequential access of the group database.\n */\n#define HAS_GETGRENT\t\t/**/\n\n/* HAS_GETGRENT_R:\n *\tThis symbol, if defined, indicates that the getgrent_r routine\n *\tis available to getgrent re-entrantly.\n */\n/* GETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of getgrent_r.\n *\tIt is zero if d_getgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrent_r\n *\tis defined.\n */\n/*#define HAS_GETGRENT_R\t   / **/\n#define GETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_GETGRGID_R:\n *\tThis symbol, if defined, indicates that the getgrgid_r routine\n *\tis available to getgrgid re-entrantly.\n */\n/* GETGRGID_R_PROTO:\n *\tThis symbol encodes the prototype of getgrgid_r.\n *\tIt is zero if d_getgrgid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrgid_r\n *\tis defined.\n */\n/*#define HAS_GETGRGID_R\t   / **/\n#define GETGRGID_R_PROTO 0\t   /**/\n\n/* HAS_GETGRNAM_R:\n *\tThis symbol, if defined, indicates that the getgrnam_r routine\n *\tis available to getgrnam re-entrantly.\n */\n/* GETGRNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getgrnam_r.\n *\tIt is zero if d_getgrnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrnam_r\n *\tis defined.\n */\n/*#define HAS_GETGRNAM_R\t   / **/\n#define GETGRNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYADDR:\n *\tThis symbol, if defined, indicates that the gethostbyaddr() routine is\n *\tavailable to look up hosts by their IP addresses.\n */\n#define HAS_GETHOSTBYADDR\t\t/**/\n\n/* HAS_GETHOSTBYNAME:\n *\tThis symbol, if defined, indicates that the gethostbyname() routine is\n *\tavailable to look up host names in some data base or other.\n */\n#define HAS_GETHOSTBYNAME\t\t/**/\n\n/* HAS_GETHOSTENT:\n *\tThis symbol, if defined, indicates that the gethostent() routine is\n *\tavailable to look up host names in some data base or another.\n */\n/*#define HAS_GETHOSTENT\t\t/ **/\n\n/* HAS_GETHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tgethostname() routine to derive the host name.  See also HAS_UNAME\n *\tand PHOSTNAME.\n */\n/* HAS_UNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tuname() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand PHOSTNAME.\n */\n/* PHOSTNAME:\n *\tThis symbol, if defined, indicates the command to feed to the\n *\tpopen() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand HAS_UNAME.\tNote that the command uses a fully qualified path,\n *\tso that it is safe even if used by a process with super-user\n *\tprivileges.\n */\n/* HAS_PHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tcontents of PHOSTNAME as a command to feed to the popen() routine\n *\tto derive the host name.\n */\n#define HAS_GETHOSTNAME\t/**/\n#define HAS_UNAME\t\t/**/\n/*#define HAS_PHOSTNAME\t/ **/\n#ifdef HAS_PHOSTNAME\n#define PHOSTNAME \"/bin/uname -n\"\t/* How to get the host name */\n#endif\n\n/* HAS_GETHOST_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for gethostent(), gethostbyname(), and\n *\tgethostbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETHOST_PROTOS\t/ **/\n\n/* HAS_GETITIMER:\n *\tThis symbol, if defined, indicates that the getitimer routine is\n *\tavailable to return interval timers.\n */\n/*#define HAS_GETITIMER\t\t/ **/\n\n/* HAS_GETLOGIN_R:\n *\tThis symbol, if defined, indicates that the getlogin_r routine\n *\tis available to getlogin re-entrantly.\n */\n/* GETLOGIN_R_PROTO:\n *\tThis symbol encodes the prototype of getlogin_r.\n *\tIt is zero if d_getlogin_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getlogin_r\n *\tis defined.\n */\n/*#define HAS_GETLOGIN_R\t   / **/\n#define GETLOGIN_R_PROTO 0\t   /**/\n\n/* HAS_GETMNT:\n *\tThis symbol, if defined, indicates that the getmnt routine is\n *\tavailable to get filesystem mount info by filename.\n */\n/*#define HAS_GETMNT\t\t/ **/\n\n/* HAS_GETMNTENT:\n *\tThis symbol, if defined, indicates that the getmntent routine is\n *\tavailable to iterate through mounted file systems to get their info.\n */\n/*#define HAS_GETMNTENT\t\t/ **/\n\n/* HAS_GETNETBYADDR:\n *\tThis symbol, if defined, indicates that the getnetbyaddr() routine is\n *\tavailable to look up networks by their IP addresses.\n */\n/*#define HAS_GETNETBYADDR\t\t/ **/\n\n/* HAS_GETNETBYNAME:\n *\tThis symbol, if defined, indicates that the getnetbyname() routine is\n *\tavailable to look up networks by their names.\n */\n/*#define HAS_GETNETBYNAME\t\t/ **/\n\n/* HAS_GETNETENT:\n *\tThis symbol, if defined, indicates that the getnetent() routine is\n *\tavailable to look up network names in some data base or another.\n */\n/*#define HAS_GETNETENT\t\t/ **/\n\n/* HAS_GETNET_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getnetent(), getnetbyname(), and\n *\tgetnetbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETNET_PROTOS\t/ **/\n\n/* HAS_GETPAGESIZE:\n *\tThis symbol, if defined, indicates that the getpagesize system call\n *\tis available to get system page size, which is the granularity of\n *\tmany memory management calls.\n */\n/*#define HAS_GETPAGESIZE\t\t/ **/\n\n/* HAS_GETPROTOENT:\n *\tThis symbol, if defined, indicates that the getprotoent() routine is\n *\tavailable to look up protocols in some data base or another.\n */\n/*#define HAS_GETPROTOENT\t\t/ **/\n\n/* HAS_GETPGRP:\n *\tThis symbol, if defined, indicates that the getpgrp routine is\n *\tavailable to get the current process group.\n */\n/* USE_BSD_GETPGRP:\n *\tThis symbol, if defined, indicates that getpgrp needs one\n *\targuments whereas USG one needs none.\n */\n#define HAS_GETPGRP\t\t/**/\n/*#define USE_BSD_GETPGRP\t/ **/\n\n/* HAS_GETPROTOBYNAME:\n *\tThis symbol, if defined, indicates that the getprotobyname()\n *\troutine is available to look up protocols by their name.\n */\n/* HAS_GETPROTOBYNUMBER:\n *\tThis symbol, if defined, indicates that the getprotobynumber()\n *\troutine is available to look up protocols by their number.\n */\n#define HAS_GETPROTOBYNAME\t\t/**/\n/*#define HAS_GETPROTOBYNUMBER\t\t/ **/\n\n/* HAS_GETPROTO_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getprotoent(), getprotobyname(), and\n *\tgetprotobyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETPROTO_PROTOS\t/ **/\n\n/* HAS_GETPRPWNAM:\n *\tThis symbol, if defined, indicates that the getprpwnam system call is\n *\tavailable to retrieve protected (shadow) password entries by name.\n */\n/*#define HAS_GETPRPWNAM\t\t/ **/\n\n/* HAS_GETPWENT:\n *\tThis symbol, if defined, indicates that the getpwent routine is\n *\tavailable for sequential access of the passwd database.\n *\tIf this is not available, the older getpw() function may be available.\n */\n#define HAS_GETPWENT\t\t/**/\n\n/* HAS_GETPWENT_R:\n *\tThis symbol, if defined, indicates that the getpwent_r routine\n *\tis available to getpwent re-entrantly.\n */\n/* GETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of getpwent_r.\n *\tIt is zero if d_getpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwent_r\n *\tis defined.\n */\n/*#define HAS_GETPWENT_R\t   / **/\n#define GETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPWNAM_R:\n *\tThis symbol, if defined, indicates that the getpwnam_r routine\n *\tis available to getpwnam re-entrantly.\n */\n/* GETPWNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getpwnam_r.\n *\tIt is zero if d_getpwnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwnam_r\n *\tis defined.\n */\n/*#define HAS_GETPWNAM_R\t   / **/\n#define GETPWNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETPWUID_R:\n *\tThis symbol, if defined, indicates that the getpwuid_r routine\n *\tis available to getpwuid re-entrantly.\n */\n/* GETPWUID_R_PROTO:\n *\tThis symbol encodes the prototype of getpwuid_r.\n *\tIt is zero if d_getpwuid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwuid_r\n *\tis defined.\n */\n/*#define HAS_GETPWUID_R\t   / **/\n#define GETPWUID_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT:\n *\tThis symbol, if defined, indicates that the getservent() routine is\n *\tavailable to look up network services in some data base or another.\n */\n/*#define HAS_GETSERVENT\t\t/ **/\n\n/* HAS_GETSERV_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getservent(), getservbyname(), and\n *\tgetservbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETSERV_PROTOS\t/ **/\n\n/* HAS_GETSPNAM:\n *\tThis symbol, if defined, indicates that the getspnam system call is\n *\tavailable to retrieve SysV shadow password entries by name.\n */\n/*#define HAS_GETSPNAM\t\t/ **/\n\n/* HAS_GETSPNAM_R:\n *\tThis symbol, if defined, indicates that the getspnam_r routine\n *\tis available to getspnam re-entrantly.\n */\n/* GETSPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getspnam_r.\n *\tIt is zero if d_getspnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getspnam_r\n *\tis defined.\n */\n/*#define HAS_GETSPNAM_R\t   / **/\n#define GETSPNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYNAME:\n *\tThis symbol, if defined, indicates that the getservbyname()\n *\troutine is available to look up services by their name.\n */\n/* HAS_GETSERVBYPORT:\n *\tThis symbol, if defined, indicates that the getservbyport()\n *\troutine is available to look up services by their port.\n */\n#define HAS_GETSERVBYNAME\t\t/**/\n/*#define HAS_GETSERVBYPORT\t\t/ **/\n\n/* HAS_GMTIME_R:\n *\tThis symbol, if defined, indicates that the gmtime_r routine\n *\tis available to gmtime re-entrantly.\n */\n/* GMTIME_R_PROTO:\n *\tThis symbol encodes the prototype of gmtime_r.\n *\tIt is zero if d_gmtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gmtime_r\n *\tis defined.\n */\n/*#define HAS_GMTIME_R\t   / **/\n#define GMTIME_R_PROTO 0\t   /**/\n\n/* HAS_GNULIBC:\n *\tThis symbol, if defined, indicates to the C program that \n *\tthe GNU C library is being used.  A better check is to use\n *\tthe __GLIBC__ and __GLIBC_MINOR__ symbols supplied with glibc.\n */\n/*#define HAS_GNULIBC  \t/ **/\n#if defined(HAS_GNULIBC) && !defined(_GNU_SOURCE)\n#   define _GNU_SOURCE\n#endif\n/* HAS_HASMNTOPT:\n *\tThis symbol, if defined, indicates that the hasmntopt routine is\n *\tavailable to query the mount options of file systems.\n */\n/*#define HAS_HASMNTOPT\t\t/ **/\n\n/* HAS_HTONL:\n *\tThis symbol, if defined, indicates that the htonl() routine (and\n *\tfriends htons() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_HTONS:\n *\tThis symbol, if defined, indicates that the htons() routine (and\n *\tfriends htonl() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHL:\n *\tThis symbol, if defined, indicates that the ntohl() routine (and\n *\tfriends htonl() htons() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHS:\n *\tThis symbol, if defined, indicates that the ntohs() routine (and\n *\tfriends htonl() htons() ntohl()) are available to do network\n *\torder byte swapping.\n */\n#define HAS_HTONL\t\t/**/\n#define HAS_HTONS\t\t/**/\n#define HAS_NTOHL\t\t/**/\n#define HAS_NTOHS\t\t/**/\n\n/* HAS_ILOGBL:\n *\tThis symbol, if defined, indicates that the ilogbl routine is\n *\tavailable.  If scalbnl is also present we can emulate frexpl.\n */\n/*#define HAS_ILOGBL\t\t/**/\n\n/* HAS_INT64_T:\n *     This symbol will defined if the C compiler supports int64_t.\n *     Usually the <inttypes.h> needs to be included, but sometimes\n *\t<sys/types.h> is enough.\n */\n#define     HAS_INT64_T               /**/\n\n/* HAS_ISASCII:\n *\tThis manifest constant lets the C program know that isascii \n *\tis available.\n */\n/*#define HAS_ISASCII\t\t/ **/\n\n/* HAS_ISFINITE:\n *\tThis symbol, if defined, indicates that the isfinite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_ISFINITE\t\t/ **/\n\n/* HAS_ISINF:\n *\tThis symbol, if defined, indicates that the isinf routine is\n *\tavailable to check whether a double is an infinity.\n */\n/*#define HAS_ISINF\t\t/ **/\n\n/* HAS_ISNAN:\n *\tThis symbol, if defined, indicates that the isnan routine is\n *\tavailable to check whether a double is a NaN.\n */\n/*#define HAS_ISNAN\t\t/ **/\n\n/* HAS_ISNANL:\n *\tThis symbol, if defined, indicates that the isnanl routine is\n *\tavailable to check whether a long double is a NaN.\n */\n/*#define HAS_ISNANL\t\t/ **/\n\n/* HAS_LCHOWN:\n *\tThis symbol, if defined, indicates that the lchown routine is\n *\tavailable to operate on a symbolic link (instead of following the\n *\tlink).\n */\n/*#define HAS_LCHOWN\t\t/ **/\n\n/* HAS_LDBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol LDBL_DIG, which is the number\n *\tof significant digits in a long double precision number. Unlike\n *\tfor DBL_DIG, there's no good guess for LDBL_DIG if it is undefined.\n */\n#define HAS_LDBL_DIG \t/* */\n\n/* HAS_LOCALTIME_R:\n *\tThis symbol, if defined, indicates that the localtime_r routine\n *\tis available to localtime re-entrantly.\n */\n/* LOCALTIME_R_NEEDS_TZSET:\n *\tMany libc's localtime_r implementations do not call tzset,\n *\tmaking them differ from localtime(), and making timezone\n *\tchanges using $ENV{TZ} without explicitly calling tzset\n *\timpossible. This symbol makes us call tzset before localtime_r\n */\n/* LOCALTIME_R_PROTO:\n *\tThis symbol encodes the prototype of localtime_r.\n *\tIt is zero if d_localtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_localtime_r\n *\tis defined.\n */\n/*#define HAS_LOCALTIME_R\t   / **/\n/*#define LOCALTIME_R_NEEDS_TZSET\t   / **/\n#define LOCALTIME_R_PROTO 0\t   /**/\n\n/* HAS_LONG_DOUBLE:\n *\tThis symbol will be defined if the C compiler supports long\n *\tdoubles.\n */\n/* LONG_DOUBLESIZE:\n *\tThis symbol contains the size of a long double, so that the \n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long doubles.\n */\n#define HAS_LONG_DOUBLE\t\t/**/\n#ifdef HAS_LONG_DOUBLE\n#define LONG_DOUBLESIZE 8\t\t/**/\n#endif\n\n/* HAS_LONG_LONG:\n *\tThis symbol will be defined if the C compiler supports long long.\n */\n/* LONGLONGSIZE:\n *\tThis symbol contains the size of a long long, so that the \n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long long.\n */\n#define HAS_LONG_LONG\t\t/**/\n#ifdef HAS_LONG_LONG\n#define LONGLONGSIZE 8\t\t/**/\n#endif\n\n/* HAS_LSEEK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the lseek() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern off_t lseek(int, off_t, int);\n */\n/*#define\tHAS_LSEEK_PROTO\t/ **/\n\n/* HAS_MADVISE:\n *\tThis symbol, if defined, indicates that the madvise system call is\n *\tavailable to map a file into memory.\n */\n/*#define HAS_MADVISE\t\t/ **/\n\n/* HAS_MKDTEMP:\n *\tThis symbol, if defined, indicates that the mkdtemp routine is\n *\tavailable to exclusively create a uniquely named temporary directory.\n */\n/*#define HAS_MKDTEMP\t\t/ **/\n\n/* HAS_MKSTEMP:\n *\tThis symbol, if defined, indicates that the mkstemp routine is\n *\tavailable to exclusively create and open a uniquely named\n *\ttemporary file.\n */\n/*#define HAS_MKSTEMP\t\t/ **/\n\n/* HAS_MKSTEMPS:\n *\tThis symbol, if defined, indicates that the mkstemps routine is\n *\tavailable to exclusively create and open a uniquely named\n *\t(with a suffix) temporary file.\n */\n/*#define HAS_MKSTEMPS\t\t/ **/\n\n/* HAS_MMAP:\n *\tThis symbol, if defined, indicates that the mmap system call is\n *\tavailable to map a file into memory.\n */\n/* Mmap_t:\n *\tThis symbol holds the return type of the mmap() system call\n *\t(and simultaneously the type of the first argument).\n *\tUsually set to 'void *' or 'cadd_t'.\n */\n/*#define HAS_MMAP\t\t/ **/\n#define Mmap_t void *\t/**/\n\n/* HAS_MODFL:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tavailable to split a long double x into a fractional part f and\n *\tan integer part i such that |f| < 1.0 and (f + i) = x.\n */\n/*#define HAS_MODFL\t\t/ **/\n\n/* HAS_MPROTECT:\n *\tThis symbol, if defined, indicates that the mprotect system call is\n *\tavailable to modify the access protection of a memory mapped file.\n */\n/*#define HAS_MPROTECT\t\t/ **/\n\n/* HAS_MSG:\n *\tThis symbol, if defined, indicates that the entire msg*(2) library is\n *\tsupported (IPC mechanism based on message queues).\n */\n/*#define HAS_MSG\t\t/ **/\n\n/* HAS_STRUCT_MSGHDR:\n *\tThis symbol, if defined, indicates that the struct msghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_MSGHDR\t/ **/\n\n/* HAS_OFF64_T:\n *\tThis symbol will be defined if the C compiler supports off64_t.\n */\n/*#define\tHAS_OFF64_T    \t\t/ **/\n\n/* HAS_OPEN3:\n *\tThis manifest constant lets the C program know that the three\n *\targument form of open(2) is available.\n */\n#define HAS_OPEN3\t\t/**/\n\n/* OLD_PTHREAD_CREATE_JOINABLE:\n *\tThis symbol, if defined, indicates how to create pthread\n *\tin joinable (aka undetached) state.  NOTE: not defined\n *\tif pthread.h already has defined PTHREAD_CREATE_JOINABLE\n *\t(the new version of the constant).\n *\tIf defined, known values are PTHREAD_CREATE_UNDETACHED\n *\tand __UNDETACHED.\n */\n/*#define OLD_PTHREAD_CREATE_JOINABLE  / **/\n\n/* HAS_PTHREAD_YIELD:\n *\tThis symbol, if defined, indicates that the pthread_yield \n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/* SCHED_YIELD:\n *\tThis symbol defines the way to yield the execution of\n *\tthe current thread.  Known ways are sched_yield,\n *\tpthread_yield, and pthread_yield with NULL.\n */\n/* HAS_SCHED_YIELD:\n *\tThis symbol, if defined, indicates that the sched_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/*#define HAS_PTHREAD_YIELD\t/ **/\n#define SCHED_YIELD\tundef\t/**/\n/*#define HAS_SCHED_YIELD\t/ **/\n\n/* HAS_RANDOM_R:\n *\tThis symbol, if defined, indicates that the random_r routine\n *\tis available to random re-entrantly.\n */\n/* RANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of random_r.\n *\tIt is zero if d_random_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_random_r\n *\tis defined.\n */\n/*#define HAS_RANDOM_R\t   / **/\n#define RANDOM_R_PROTO 0\t   /**/\n\n/* HAS_READDIR_R:\n *\tThis symbol, if defined, indicates that the readdir_r routine\n *\tis available to readdir re-entrantly.\n */\n/* READDIR_R_PROTO:\n *\tThis symbol encodes the prototype of readdir_r.\n *\tIt is zero if d_readdir_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir_r\n *\tis defined.\n */\n/*#define HAS_READDIR_R\t   / **/\n#define READDIR_R_PROTO 0\t   /**/\n\n/* HAS_READV:\n *\tThis symbol, if defined, indicates that the readv routine is\n *\tavailable to do gather reads.  You will also need <sys/uio.h>\n *\tand there I_SYSUIO.\n */\n#define HAS_READV\t\t/**/\n\n/* HAS_RECVMSG:\n *\tThis symbol, if defined, indicates that the recvmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_RECVMSG\t\t/ **/\n\n/* HAS_SBRK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sbrk() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern void* sbrk(int);\n *\t\textern void* sbrk(size_t);\n */\n/*#define\tHAS_SBRK_PROTO\t/ **/\n\n/* HAS_SEM:\n *\tThis symbol, if defined, indicates that the entire sem*(2) library is\n *\tsupported.\n */\n/*#define HAS_SEM\t\t/ **/\n\n/* HAS_SCALBNL:\n *\tThis symbol, if defined, indicates that the scalbnl routine is\n *\tavailable.  If ilogbl is also present we can emulate frexpl.\n */\n/*#define HAS_SCALBNL\t\t/**/\n\n/* HAS_SENDMSG:\n *\tThis symbol, if defined, indicates that the sendmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_SENDMSG\t\t/ **/\n\n/* HAS_SETGRENT:\n *\tThis symbol, if defined, indicates that the setgrent routine is\n *\tavailable for initializing sequential access of the group database.\n */\n#define HAS_SETGRENT\t\t/**/\n\n/* HAS_SETGRENT_R:\n *\tThis symbol, if defined, indicates that the setgrent_r routine\n *\tis available to setgrent re-entrantly.\n */\n/* SETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of setgrent_r.\n *\tIt is zero if d_setgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setgrent_r\n *\tis defined.\n */\n/*#define HAS_SETGRENT_R\t   / **/\n#define SETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_SETGROUPS:\n *\tThis symbol, if defined, indicates that the setgroups() routine is\n *\tavailable to set the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_SETGROUPS\t\t/ **/\n\n/* HAS_SETHOSTENT:\n *\tThis symbol, if defined, indicates that the sethostent() routine is\n *\tavailable.\n */\n/*#define HAS_SETHOSTENT\t\t/ **/\n\n/* HAS_SETITIMER:\n *\tThis symbol, if defined, indicates that the setitimer routine is\n *\tavailable to set interval timers.\n */\n/*#define HAS_SETITIMER\t\t/ **/\n\n/* HAS_SETNETENT:\n *\tThis symbol, if defined, indicates that the setnetent() routine is\n *\tavailable.\n */\n/*#define HAS_SETNETENT\t\t/ **/\n\n/* HAS_SETPROTOENT:\n *\tThis symbol, if defined, indicates that the setprotoent() routine is\n *\tavailable.\n */\n/*#define HAS_SETPROTOENT\t\t/ **/\n\n/* HAS_SETPGRP:\n *\tThis symbol, if defined, indicates that the setpgrp routine is\n *\tavailable to set the current process group.\n */\n/* USE_BSD_SETPGRP:\n *\tThis symbol, if defined, indicates that setpgrp needs two\n *\targuments whereas USG one needs none.  See also HAS_SETPGID\n *\tfor a POSIX interface.\n */\n/*#define HAS_SETPGRP\t\t/ **/\n/*#define USE_BSD_SETPGRP\t/ **/\n\n/* HAS_SETPROCTITLE:\n *\tThis symbol, if defined, indicates that the setproctitle routine is\n *\tavailable to set process title.\n */\n/*#define HAS_SETPROCTITLE\t\t/ **/\n\n/* HAS_SETPWENT:\n *\tThis symbol, if defined, indicates that the setpwent routine is\n *\tavailable for initializing sequential access of the passwd database.\n */\n#define HAS_SETPWENT\t\t/**/\n\n/* HAS_SETPWENT_R:\n *\tThis symbol, if defined, indicates that the setpwent_r routine\n *\tis available to setpwent re-entrantly.\n */\n/* SETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of setpwent_r.\n *\tIt is zero if d_setpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setpwent_r\n *\tis defined.\n */\n/*#define HAS_SETPWENT_R\t   / **/\n#define SETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_SETSERVENT:\n *\tThis symbol, if defined, indicates that the setservent() routine is\n *\tavailable.\n */\n/*#define HAS_SETSERVENT\t\t/ **/\n\n/* HAS_SETVBUF:\n *\tThis symbol, if defined, indicates that the setvbuf routine is\n *\tavailable to change buffering on an open stdio stream.\n *\tto a line-buffered mode.\n */\n#define HAS_SETVBUF\t\t/**/\n\n/* HAS_SHM:\n *\tThis symbol, if defined, indicates that the entire shm*(2) library is\n *\tsupported.\n */\n/*#define HAS_SHM\t\t/ **/\n\n/* HAS_SIGACTION:\n *\tThis symbol, if defined, indicates that Vr4's sigaction() routine\n *\tis available.\n */\n#define HAS_SIGACTION\t/**/\n\n/* HAS_SIGSETJMP:\n *\tThis variable indicates to the C program that the sigsetjmp()\n *\troutine is available to save the calling process's registers\n *\tand stack environment for later use by siglongjmp(), and\n *\tto optionally save the process's signal mask.  See\n *\tSigjmp_buf, Sigsetjmp, and Siglongjmp.\n */\n/* Sigjmp_buf:\n *\tThis is the buffer type to be used with Sigsetjmp and Siglongjmp.\n */\n/* Sigsetjmp:\n *\tThis macro is used in the same way as sigsetjmp(), but will invoke\n *\ttraditional setjmp() if sigsetjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/* Siglongjmp:\n *\tThis macro is used in the same way as siglongjmp(), but will invoke\n *\ttraditional longjmp() if siglongjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n#define HAS_SIGSETJMP\t/**/\n#ifdef HAS_SIGSETJMP\n#define Sigjmp_buf sigjmp_buf\n#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))\n#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))\n#else\n#define Sigjmp_buf jmp_buf\n#define Sigsetjmp(buf,save_mask) setjmp((buf))\n#define Siglongjmp(buf,retval) longjmp((buf),(retval))\n#endif\n\n/* HAS_SOCKET:\n *\tThis symbol, if defined, indicates that the BSD socket interface is\n *\tsupported.\n */\n/* HAS_SOCKETPAIR:\n *\tThis symbol, if defined, indicates that the BSD socketpair() call is\n *\tsupported.\n */\n#define\tHAS_SOCKET\t\t/**/\n#define\tHAS_SOCKETPAIR\t/**/\n\n/* HAS_SOCKS5_INIT:\n *\tThis symbol, if defined, indicates that the socks5_init routine is\n *\tavailable to initialize SOCKS 5.\n */\n/*#define HAS_SOCKS5_INIT\t\t/ **/\n\n/* HAS_SQRTL:\n *\tThis symbol, if defined, indicates that the sqrtl routine is\n *\tavailable to do long double square roots.\n */\n/*#define HAS_SQRTL\t\t/ **/\n\n/* HAS_SRAND48_R:\n *\tThis symbol, if defined, indicates that the srand48_r routine\n *\tis available to srand48 re-entrantly.\n */\n/* SRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of srand48_r.\n *\tIt is zero if d_srand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srand48_r\n *\tis defined.\n */\n/*#define HAS_SRAND48_R\t   / **/\n#define SRAND48_R_PROTO 0\t   /**/\n\n/* HAS_SRANDOM_R:\n *\tThis symbol, if defined, indicates that the srandom_r routine\n *\tis available to srandom re-entrantly.\n */\n/* SRANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of srandom_r.\n *\tIt is zero if d_srandom_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srandom_r\n *\tis defined.\n */\n/*#define HAS_SRANDOM_R\t   / **/\n#define SRANDOM_R_PROTO 0\t   /**/\n\n/* USE_STAT_BLOCKS:\n *\tThis symbol is defined if this system has a stat structure declaring\n *\tst_blksize and st_blocks.\n */\n#ifndef USE_STAT_BLOCKS\n/*#define USE_STAT_BLOCKS \t/ **/\n#endif\n\n/* HAS_STRUCT_STATFS_F_FLAGS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tdoes have the f_flags member containing the mount flags of\n *\tthe filesystem containing the file.\n *\tThis kind of struct statfs is coming from <sys/mount.h> (BSD 4.3),\n *\tnot from <sys/statfs.h> (SYSV).  Older BSDs (like Ultrix) do not\n *\thave statfs() and struct statfs, they have ustat() and getmnt()\n *\twith struct ustat and struct fs_data.\n */\n/*#define HAS_STRUCT_STATFS_F_FLAGS\t\t/ **/\n\n/* HAS_STRUCT_STATFS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_STATFS\t/ **/\n\n/* HAS_FSTATVFS:\n *\tThis symbol, if defined, indicates that the fstatvfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATVFS\t\t/ **/\n\n/* USE_STDIO_PTR:\n *\tThis symbol is defined if the _ptr and _cnt fields (or similar)\n *\tof the stdio FILE structure can be used to access the stdio buffer\n *\tfor a file handle.  If this is defined, then the FILE_ptr(fp)\n *\tand FILE_cnt(fp) macros will also be defined and should be used\n *\tto access these fields.\n */\n/* FILE_ptr:\n *\tThis macro is used to access the _ptr field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_PTR_LVALUE:\n *\tThis symbol is defined if the FILE_ptr macro can be used as an\n *\tlvalue.\n */\n/* FILE_cnt:\n *\tThis macro is used to access the _cnt field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_CNT_LVALUE:\n *\tThis symbol is defined if the FILE_cnt macro can be used as an\n *\tlvalue.\n */\n/* STDIO_PTR_LVAL_SETS_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n has the side effect of decreasing the\n *\tvalue of File_cnt(fp) by n.\n */\n/* STDIO_PTR_LVAL_NOCHANGE_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n leaves File_cnt(fp) unchanged.\n */\n/*#define USE_STDIO_PTR \t/ **/\n#ifdef USE_STDIO_PTR\n#define FILE_ptr(fp)\t((fp)->_ptr)\n/*#define STDIO_PTR_LVALUE \t\t/ **/\n#define FILE_cnt(fp)\t((fp)->_cnt)\n/*#define STDIO_CNT_LVALUE \t\t/ **/\n/*#define STDIO_PTR_LVAL_SETS_CNT\t/ **/\n/*#define STDIO_PTR_LVAL_NOCHANGE_CNT\t/ **/\n#endif\n\n/* USE_STDIO_BASE:\n *\tThis symbol is defined if the _base field (or similar) of the\n *\tstdio FILE structure can be used to access the stdio buffer for\n *\ta file handle.  If this is defined, then the FILE_base(fp) macro\n *\twill also be defined and should be used to access this field.\n *\tAlso, the FILE_bufsiz(fp) macro will be defined and should be used\n *\tto determine the number of bytes in the buffer.  USE_STDIO_BASE\n *\twill never be defined unless USE_STDIO_PTR is.\n */\n/* FILE_base:\n *\tThis macro is used to access the _base field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_BASE is defined.\n */\n/* FILE_bufsiz:\n *\tThis macro is used to determine the number of bytes in the I/O\n *\tbuffer pointed to by _base field (or equivalent) of the FILE\n *\tstructure pointed to its argument. This macro will always be defined\n *\tif USE_STDIO_BASE is defined.\n */\n/*#define USE_STDIO_BASE \t/ **/\n#ifdef USE_STDIO_BASE\n#define FILE_base(fp)\t((fp)->_base)\n#define FILE_bufsiz(fp)\t((fp)->_cnt + (fp)->_ptr - (fp)->_base)\n#endif\n\n/* HAS_SYS_ERRLIST:\n *\tThis symbol, if defined, indicates that the sys_errlist array is\n *\tavailable to translate error numbers to strings. The extern int\n *\tsys_nerr gives the size of that table.\n */\n#define HAS_SYS_ERRLIST\t/**/\n\n/* HAS_STRERROR_R:\n *\tThis symbol, if defined, indicates that the strerror_r routine\n *\tis available to strerror re-entrantly.\n */\n/* STRERROR_R_PROTO:\n *\tThis symbol encodes the prototype of strerror_r.\n *\tIt is zero if d_strerror_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_strerror_r\n *\tis defined.\n */\n/*#define HAS_STRERROR_R\t   / **/\n#define STRERROR_R_PROTO 0\t   /**/\n\n/* HAS_STRTOLD:\n *\tThis symbol, if defined, indicates that the strtold routine is\n *\tavailable to convert strings to long doubles.\n */\n/*#define HAS_STRTOLD\t\t/ **/\n\n/* HAS_STRTOLL:\n *\tThis symbol, if defined, indicates that the strtoll routine is\n *\tavailable to convert strings to long longs.\n */\n/*#define HAS_STRTOLL\t\t/ **/\n\n/* HAS_STRTOQ:\n *\tThis symbol, if defined, indicates that the strtoq routine is\n *\tavailable to convert strings to long longs (quads).\n */\n/*#define HAS_STRTOQ\t\t/ **/\n\n/* HAS_STRTOUL:\n *\tThis symbol, if defined, indicates that the strtoul routine is\n *\tavailable to provide conversion of strings to unsigned long.\n */\n#define HAS_STRTOUL\t/**/\n\n/* HAS_STRTOULL:\n *\tThis symbol, if defined, indicates that the strtoull routine is\n *\tavailable to convert strings to unsigned long longs.\n */\n/*#define HAS_STRTOULL\t\t/ **/\n\n/* HAS_STRTOUQ:\n *\tThis symbol, if defined, indicates that the strtouq routine is\n *\tavailable to convert strings to unsigned long longs (quads).\n */\n/*#define HAS_STRTOUQ\t\t/ **/\n\n/* HAS_TELLDIR_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the telldir() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern long telldir(DIR*);\n */\n/*#define\tHAS_TELLDIR_PROTO\t/ **/\n\n/* HAS_TIME:\n *\tThis symbol, if defined, indicates that the time() routine exists.\n */\n/* Time_t:\n *\tThis symbol holds the type returned by time(). It can be long,\n *\tor time_t on BSD sites (in which case <sys/types.h> should be\n *\tincluded).\n */\n#define HAS_TIME\t\t/**/\n#define Time_t time_t\t\t/* Time type */\n\n/* HAS_TIMES:\n *\tThis symbol, if defined, indicates that the times() routine exists.\n *\tNote that this became obsolete on some systems (SUNOS), which now\n * use getrusage(). It may be necessary to include <sys/times.h>.\n */\n#define HAS_TIMES\t\t/**/\n\n/* HAS_TMPNAM_R:\n *\tThis symbol, if defined, indicates that the tmpnam_r routine\n *\tis available to tmpnam re-entrantly.\n */\n/* TMPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of tmpnam_r.\n *\tIt is zero if d_tmpnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_tmpnam_r\n *\tis defined.\n */\n/*#define HAS_TMPNAM_R\t   / **/\n#define TMPNAM_R_PROTO 0\t   /**/\n\n/* HAS_UALARM:\n *\tThis symbol, if defined, indicates that the ualarm routine is\n *\tavailable to do alarms with microsecond granularity.\n */\n/*#define HAS_UALARM\t\t/ **/\n\n/* HAS_UNION_SEMUN:\n *\tThis symbol, if defined, indicates that the union semun is\n *\tdefined by including <sys/sem.h>.  If not, the user code\n *\tprobably needs to define it as:\n *\tunion semun {\n *\t    int val;\n *\t    struct semid_ds *buf;\n *\t    unsigned short *array;\n *\t}\n */\n/* USE_SEMCTL_SEMUN:\n *\tThis symbol, if defined, indicates that union semun is\n *\tused for semctl IPC_STAT.\n */\n/* USE_SEMCTL_SEMID_DS:\n *\tThis symbol, if defined, indicates that struct semid_ds * is\n *\tused for semctl IPC_STAT.\n */\n/*#define HAS_UNION_SEMUN\t/ **/\n/*#define USE_SEMCTL_SEMUN\t/ **/\n/*#define USE_SEMCTL_SEMID_DS\t/ **/\n\n/* HAS_UNORDERED:\n *\tThis symbol, if defined, indicates that the unordered routine is\n *\tavailable to check whether two doubles are unordered\n *\t(effectively: whether either of them is NaN)\n */\n/*#define HAS_UNORDERED\t\t/ **/\n\n/* HAS_USTAT:\n *\tThis symbol, if defined, indicates that the ustat system call is\n *\tavailable to query file system statistics by dev_t.\n */\n/*#define HAS_USTAT\t\t/ **/\n\n/* HAS_VFORK:\n *\tThis symbol, if defined, indicates that vfork() exists.\n */\n/*#define HAS_VFORK\t/ **/\n\n/* Signal_t:\n *\tThis symbol's value is either \"void\" or \"int\", corresponding to the\n *\tappropriate return type of a signal handler.  Thus, you can declare\n *\ta signal handler using \"Signal_t (*handler)()\", and define the\n *\thandler using \"Signal_t handler(sig)\".\n */\n#define Signal_t void\t/* Signal handler's return type */\n\n/* HAS_WRITEV:\n *\tThis symbol, if defined, indicates that the writev routine is\n *\tavailable to do scatter writes.\n */\n#define HAS_WRITEV\t\t/**/\n\n/* USE_DYNAMIC_LOADING:\n *\tThis symbol, if defined, indicates that dynamic loading of\n *\tsome sort is available.\n */\n/*#define USE_DYNAMIC_LOADING\t\t/ **/\n\n/* DOUBLESIZE:\n *\tThis symbol contains the size of a double, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define DOUBLESIZE 8\t\t/**/\n\n/* EBCDIC:\n *     This symbol, if defined, indicates that this system uses\n *\tEBCDIC encoding.\n */\n/*#define\tEBCDIC \t\t/ **/\n\n/* FFLUSH_NULL:\n *\tThis symbol, if defined, tells that fflush(NULL) does flush\n *\tall pending stdio output.\n */\n/* FFLUSH_ALL:\n *\tThis symbol, if defined, tells that to flush\n *\tall pending stdio output one must loop through all\n *\tthe stdio file handles stored in an array and fflush them.\n *\tNote that if fflushNULL is defined, fflushall will not\n *\teven be probed for and will be left undefined.\n */\n#define\tFFLUSH_NULL \t\t/**/\n/*#define\tFFLUSH_ALL \t\t/ **/\n\n/* Fpos_t:\n *\tThis symbol holds the type used to declare file positions in libc.\n *\tIt can be fpos_t, long, uint, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Fpos_t fpos_t\t\t/* File position type */\n\n/* Gid_t_f:\n *\tThis symbol defines the format string used for printing a Gid_t.\n */\n#define\tGid_t_f\t\t\"hd\"\t\t/**/\n\n/* Gid_t_sign:\n *\tThis symbol holds the signedess of a Gid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Gid_t_sign\t-1\t\t/* GID sign */\n\n/* Gid_t_size:\n *\tThis symbol holds the size of a Gid_t in bytes.\n */\n#define Gid_t_size 2\t\t/* GID size */\n\n/* Gid_t:\n *\tThis symbol holds the return type of getgid() and the type of\n *\targument to setrgid() and related functions.  Typically,\n *\tit is the type of group ids in the kernel. It can be int, ushort,\n *\tgid_t, etc... It may be necessary to include <sys/types.h> to get\n *\tany typedef'ed information.\n */\n#define Gid_t gid_t\t\t/* Type for getgid(), etc... */\n\n/* Groups_t:\n *\tThis symbol holds the type used for the second argument to\n *\tgetgroups() and setgroups().  Usually, this is the same as\n *\tgidtype (gid_t) , but sometimes it isn't.\n *\tIt can be int, ushort, gid_t, etc... \n *\tIt may be necessary to include <sys/types.h> to get any \n *\ttypedef'ed information.  This is only required if you have\n *\tgetgroups() or setgroups()..\n */\n#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)\n#define Groups_t gid_t\t/* Type for 2nd arg to [sg]etgroups() */\n#endif\n\n/* DB_Prefix_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is u_int32_t.\n */\n/* DB_Hash_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is size_t.\n */\n/* DB_VERSION_MAJOR_CFG:\n *\tThis symbol, if defined, defines the major version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n */\n/* DB_VERSION_MINOR_CFG:\n *\tThis symbol, if defined, defines the minor version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n/* DB_VERSION_PATCH_CFG:\n *\tThis symbol, if defined, defines the patch version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n#define DB_Hash_t\tu_int32_t\t\t/**/\n#define DB_Prefix_t\tsize_t  \t/**/\n#define DB_VERSION_MAJOR_CFG\t  \t/**/\n#define DB_VERSION_MINOR_CFG\t  \t/**/\n#define DB_VERSION_PATCH_CFG\t  \t/**/\n\n/* I_FP_CLASS:\n *\tThis symbol, if defined, indicates that <fp_class.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP_CLASS\t\t/ **/\n\n/* I_GRP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <grp.h>.\n */\n/* GRPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct group\n *\tin <grp.h> contains gr_passwd.\n */\n#define I_GRP\t\t/**/\n/*#define GRPASSWD\t/ **/\n\n/* I_IEEEFP:\n *\tThis symbol, if defined, indicates that <ieeefp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_IEEEFP\t\t/ **/\n\n/* I_INTTYPES:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <inttypes.h>.\n */\n#define   I_INTTYPES                /**/\n\n/* I_LIBUTIL:\n *\tThis symbol, if defined, indicates that <libutil.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LIBUTIL\t\t/ **/\n\n/* I_MACH_CTHREADS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <mach/cthreads.h>.\n */\n/*#define   I_MACH_CTHREADS\t/ **/\n\n/* I_MNTENT:\n *\tThis symbol, if defined, indicates that <mntent.h> exists and\n *\tshould be included.\n */\n/*#define\tI_MNTENT\t\t/ **/\n\n/* I_NETDB:\n *\tThis symbol, if defined, indicates that <netdb.h> exists and\n *\tshould be included.\n */\n#define I_NETDB\t\t/**/\n\n/* I_NETINET_TCP:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <netinet/tcp.h>.\n */\n#define   I_NETINET_TCP                /**/\n\n/* I_POLL:\n *\tThis symbol, if defined, indicates that <poll.h> exists and\n *\tshould be included.\n */\n/*#define\tI_POLL\t\t/ **/\n\n/* I_PROT:\n *\tThis symbol, if defined, indicates that <prot.h> exists and\n *\tshould be included.\n */\n/*#define\tI_PROT\t\t/ **/\n\n/* I_PTHREAD:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <pthread.h>.\n */\n/*#define   I_PTHREAD\t/ **/\n\n/* I_PWD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pwd.h>.\n */\n/* PWQUOTA:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_quota.\n */\n/* PWAGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_age.\n */\n/* PWCHANGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_change.\n */\n/* PWCLASS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_class.\n */\n/* PWEXPIRE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_expire.\n */\n/* PWCOMMENT:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_comment.\n */\n/* PWGECOS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_gecos.\n */\n/* PWPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_passwd.\n */\n#define I_PWD\t\t/**/\n/*#define PWQUOTA\t/ **/\n/*#define PWAGE\t/ **/\n/*#define PWCHANGE\t/ **/\n/*#define PWCLASS\t/ **/\n/*#define PWEXPIRE\t/ **/\n/*#define PWCOMMENT\t/ **/\n/*#define PWGECOS\t/ **/\n/*#define PWPASSWD\t/ **/\n\n/* I_SHADOW:\n *\tThis symbol, if defined, indicates that <shadow.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SHADOW\t\t/ **/\n\n/* I_SOCKS:\n *\tThis symbol, if defined, indicates that <socks.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SOCKS\t\t/ **/\n\n/* I_SUNMATH:\n *\tThis symbol, if defined, indicates that <sunmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SUNMATH\t\t/ **/\n\n/* I_SYSLOG:\n *\tThis symbol, if defined, indicates that <syslog.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSLOG\t\t/ **/\n\n/* I_SYSMODE:\n *\tThis symbol, if defined, indicates that <sys/mode.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSMODE\t\t/ **/\n\n/* I_SYS_MOUNT:\n *\tThis symbol, if defined, indicates that <sys/mount.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_MOUNT\t\t/ **/\n\n/* I_SYS_STATFS:\n *\tThis symbol, if defined, indicates that <sys/statfs.h> exists.\n */\n/*#define\tI_SYS_STATFS\t\t/ **/\n\n/* I_SYS_STATVFS:\n *\tThis symbol, if defined, indicates that <sys/statvfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_STATVFS\t\t/ **/\n\n/* I_SYSUIO:\n *\tThis symbol, if defined, indicates that <sys/uio.h> exists and\n *\tshould be included.\n */\n#define\tI_SYSUIO\t\t/**/\n\n/* I_SYSUTSNAME:\n *\tThis symbol, if defined, indicates that <sys/utsname.h> exists and\n *\tshould be included.\n */\n#define\tI_SYSUTSNAME\t\t/**/\n\n/* I_SYS_VFS:\n *\tThis symbol, if defined, indicates that <sys/vfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_VFS\t\t/ **/\n\n/* I_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <time.h>.\n */\n/* I_SYS_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h>.\n */\n#define I_SYS_TIME\t/**/\n\n\n/* I_SYS_TIME_KERNEL:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h> with KERNEL defined.\n */\n/* HAS_TM_TM_ZONE:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_zone field.\n */\n#define I_TIME\t\t/**/\n/*#define I_SYS_TIME\t\t/ **/\n/*#define I_SYS_TIME_KERNEL\t\t/ **/\n/*#define HAS_TM_TM_ZONE\t\t/ **/\n\n/* I_USTAT:\n *\tThis symbol, if defined, indicates that <ustat.h> exists and\n *\tshould be included.\n */\n/*#define\tI_USTAT\t\t/ **/\n\n/* PERL_INC_VERSION_LIST:\n *\tThis variable specifies the list of subdirectories in over\n *\twhich perl.c:incpush() and lib/lib.pm will automatically\n *\tsearch when adding directories to @INC, in a format suitable\n *\tfor a C initialization string.  See the inc_version_list entry\n *\tin Porting/Glossary for more details.\n */\n#define PERL_INC_VERSION_LIST 0\t\t/**/\n\n/* INSTALL_USR_BIN_PERL:\n *\tThis symbol, if defined, indicates that Perl is to be installed\n * \talso as /usr/bin/perl.\n */\n/*#define INSTALL_USR_BIN_PERL\t/ **/\n\n/* PERL_PRIfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for output.\n */\n/* PERL_PRIgldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'g') for output.\n */\n/* PERL_PRIeldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'e') for output.\n */\n/* PERL_SCNfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for input.\n */\n#define PERL_PRIfldbl\t\"f\"\t/**/\n#define PERL_PRIgldbl\t\"g\"\t/**/\n#define PERL_PRIeldbl\t\"e\"\t/**/\n#define PERL_SCNfldbl\t\"f\"\t/**/\n\n/* Off_t:\n *\tThis symbol holds the type used to declare offsets in the kernel.\n *\tIt can be int, long, off_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n/* LSEEKSIZE:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n/* Off_t_size:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n#define Off_t off_t\t\t/* <offset> type */\n#define LSEEKSIZE 8\t\t/* <offset> size */\n#define Off_t_size 8\t/* <offset> size */\n\n/* Free_t:\n *\tThis variable contains the return type of free().  It is usually\n * void, but occasionally int.\n */\n/* Malloc_t:\n *\tThis symbol is the type of pointer returned by malloc and realloc.\n */\n#define Malloc_t void *\t\t\t/**/\n#define Free_t void\t\t\t/**/\n\n/* MYMALLOC:\n *\tThis symbol, if defined, indicates that we're using our own malloc.\n */\n#define MYMALLOC\t\t\t/**/\n\n/* Mode_t:\n *\tThis symbol holds the type used to declare file modes \n *\tfor systems calls.  It is usually mode_t, but may be\n *\tint or unsigned short.  It may be necessary to include <sys/types.h>\n *\tto get any typedef'ed information.\n */\n#define Mode_t mode_t\t /* file mode parameter for system calls */\n\n/* VAL_O_NONBLOCK:\n *\tThis symbol is to be used during open() or fcntl(F_SETFL) to turn on\n *\tnon-blocking I/O for the file descriptor. Note that there is no way\n *\tback, i.e. you cannot turn it blocking again this way. If you wish to\n *\talternatively switch between blocking and non-blocking, use the\n *\tioctl(FIOSNBIO) call instead, but that is not supported by all devices.\n */\n/* VAL_EAGAIN:\n *\tThis symbol holds the errno error code set by read() when no data was\n *\tpresent on the non-blocking file descriptor.\n */\n/* RD_NODATA:\n *\tThis symbol holds the return code from read() when no data is present\n *\ton the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is\n *\tnot defined, then you can't distinguish between no data and EOF by\n *\tissuing a read(). You'll have to find another way to tell for sure!\n */\n/* EOF_NONBLOCK:\n *\tThis symbol, if defined, indicates to the C program that a read() on\n *\ta non-blocking file descriptor will return 0 on EOF, and not the value\n *\theld in RD_NODATA (-1 usually, in that case!).\n */\n#define VAL_O_NONBLOCK O_NONBLOCK\n#define VAL_EAGAIN EAGAIN\n#define RD_NODATA -1\n#define EOF_NONBLOCK\n\n/* NEED_VA_COPY:\n *\tThis symbol, if defined, indicates that the system stores\n *\tthe variable argument list datatype, va_list, in a format\n *\tthat cannot be copied by simple assignment, so that some\n *\tother means must be used when copying is required.\n *\tAs such systems vary in their provision (or non-provision)\n *\tof copying mechanisms, handy.h defines a platform-\n *\tindependent macro, Perl_va_copy(src, dst), to do the job.\n */\n/*#define\tNEED_VA_COPY\t\t/ **/\n\n/* Netdb_host_t:\n *\tThis symbol holds the type used for the 1st argument\n *\tto gethostbyaddr().\n */\n/* Netdb_hlen_t:\n *\tThis symbol holds the type used for the 2nd argument\n *\tto gethostbyaddr().\n */\n/* Netdb_name_t:\n *\tThis symbol holds the type used for the argument to\n *\tgethostbyname().\n */\n/* Netdb_net_t:\n *\tThis symbol holds the type used for the 1st argument to\n *\tgetnetbyaddr().\n */\n#define Netdb_host_t\t\tchar * /**/\n#define Netdb_hlen_t\t\tsize_t /**/\n#define Netdb_name_t\t\tchar * /**/\n#define Netdb_net_t\t\tlong /**/\n\n/* PERL_OTHERLIBDIRS:\n *\tThis variable contains a colon-separated set of paths for the perl\n *\tbinary to search for additional library files or modules.\n *\tThese directories will be tacked to the end of @INC.\n *\tPerl will automatically search below each path for version-\n *\tand architecture-specific directories.  See PERL_INC_VERSION_LIST\n *\tfor more details.\n */\n/*#define PERL_OTHERLIBDIRS \" \"\t\t/ **/\n\n/* IVTYPE:\n *\tThis symbol defines the C type used for Perl's IV.\n */\n/* UVTYPE:\n *\tThis symbol defines the C type used for Perl's UV.\n */\n/* I8TYPE:\n *\tThis symbol defines the C type used for Perl's I8.\n */\n/* U8TYPE:\n *\tThis symbol defines the C type used for Perl's U8.\n */\n/* I16TYPE:\n *\tThis symbol defines the C type used for Perl's I16.\n */\n/* U16TYPE:\n *\tThis symbol defines the C type used for Perl's U16.\n */\n/* I32TYPE:\n *\tThis symbol defines the C type used for Perl's I32.\n */\n/* U32TYPE:\n *\tThis symbol defines the C type used for Perl's U32.\n */\n/* I64TYPE:\n *\tThis symbol defines the C type used for Perl's I64.\n */\n/* U64TYPE:\n *\tThis symbol defines the C type used for Perl's U64.\n */\n/* NVTYPE:\n *\tThis symbol defines the C type used for Perl's NV.\n */\n/* IVSIZE:\n *\tThis symbol contains the sizeof(IV).\n */\n/* UVSIZE:\n *\tThis symbol contains the sizeof(UV).\n */\n/* I8SIZE:\n *\tThis symbol contains the sizeof(I8).\n */\n/* U8SIZE:\n *\tThis symbol contains the sizeof(U8).\n */\n/* I16SIZE:\n *\tThis symbol contains the sizeof(I16).\n */\n/* U16SIZE:\n *\tThis symbol contains the sizeof(U16).\n */\n/* I32SIZE:\n *\tThis symbol contains the sizeof(I32).\n */\n/* U32SIZE:\n *\tThis symbol contains the sizeof(U32).\n */\n/* I64SIZE:\n *\tThis symbol contains the sizeof(I64).\n */\n/* U64SIZE:\n *\tThis symbol contains the sizeof(U64).\n */\n/* NVSIZE:\n *\tThis symbol contains the sizeof(NV).\n */\n/* NV_PRESERVES_UV:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tcan preserve all the bits of a variable of type UVTYPE.\n */\n/* NV_PRESERVES_UV_BITS:\n *\tThis symbol contains the number of bits a variable of type NVTYPE\n *\tcan preserve of a variable of type UVTYPE.\n */\n#define\tIVTYPE\t\tlong\t\t/**/\n#define\tUVTYPE\t\tunsigned long\t\t/**/\n#define\tI8TYPE\t\tchar\t\t/**/\n#define\tU8TYPE\t\tunsigned char\t\t/**/\n#define\tI16TYPE\t\tshort\t/**/\n#define\tU16TYPE\t\tunsigned short\t/**/\n#define\tI32TYPE\t\tlong\t/**/\n#define\tU32TYPE\t\tunsigned long\t/**/\n#ifdef HAS_QUAD\n#define\tI64TYPE\t\tlong long\t/**/\n#define\tU64TYPE\t\tunsigned long long\t/**/\n#endif\n#define\tNVTYPE\t\tdouble\t\t/**/\n#define\tIVSIZE\t\t4\t\t/**/\n#define\tUVSIZE\t\t4\t\t/**/\n#define\tI8SIZE\t\t1\t\t/**/\n#define\tU8SIZE\t\t1\t\t/**/\n#define\tI16SIZE\t\t2\t/**/\n#define\tU16SIZE\t\t2\t/**/\n#define\tI32SIZE\t\t4\t/**/\n#define\tU32SIZE\t\t4\t/**/\n#ifdef HAS_QUAD\n#define\tI64SIZE\t\t8\t/**/\n#define\tU64SIZE\t\t8\t/**/\n#endif\n#define\tNVSIZE\t\t8\t\t/**/\n#undef\tNV_PRESERVES_UV\n#define\tNV_PRESERVES_UV_BITS\t31\n\n/* IVdf:\n *\tThis symbol defines the format string used for printing a Perl IV\n *\tas a signed decimal integer.\n */\n/* UVuf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned decimal integer.\n */\n/* UVof:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned octal integer.\n */\n/* UVxf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in lowercase abcdef.\n */\n/* UVXf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in uppercase ABCDEF.\n */\n/* NVef:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %e-ish floating point format.\n */\n/* NVff:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %f-ish floating point format.\n */\n/* NVgf:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %g-ish floating point format.\n */\n#define\tIVdf\t\t\"ld\"\t\t/**/\n#define\tUVuf\t\t\"lu\"\t\t/**/\n#define\tUVof\t\t\"lo\"\t\t/**/\n#define\tUVxf\t\t\"lx\"\t\t/**/\n#define\tUVXf\t\t\"lX\"\t\t/**/\n#define\tNVef\t\t\"e\"\t\t/**/\n#define\tNVff\t\t\"f\"\t\t/**/\n#define\tNVgf\t\t\"g\"\t\t/**/\n\n/* Pid_t:\n *\tThis symbol holds the type used to declare process ids in the kernel.\n *\tIt can be int, uint, pid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Pid_t pid_t\t\t/* PID type */\n\n/* PRIVLIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n */\n/* PRIVLIB_EXP:\n *\tThis symbol contains the ~name expanded version of PRIVLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define PRIVLIB \"/sys/lib/perl/5.8.0\"\t\t/**/\n#define PRIVLIB_EXP \"/sys/lib/perl/5.8.0\"\t\t/**/\n\n/* PTRSIZE:\n *\tThis symbol contains the size of a pointer, so that the C preprocessor\n *\tcan make decisions based on it.  It will be sizeof(void *) if\n *\tthe compiler supports (void *); otherwise it will be\n *\tsizeof(char *).\n */\n#define PTRSIZE 4\t\t/**/\n\n/* Drand01:\n *\tThis macro is to be used to generate uniformly distributed\n *\trandom numbers over the range [0., 1.[.  You may have to supply\n *\tan 'extern double drand48();' in your program since SunOS 4.1.3\n *\tdoesn't provide you with anything relevant in its headers.\n *\tSee HAS_DRAND48_PROTO.\n */\n/* Rand_seed_t:\n *\tThis symbol defines the type of the argument of the\n *\trandom seed function.\n */\n/* seedDrand01:\n *\tThis symbol defines the macro to be used in seeding the\n *\trandom number generator (see Drand01).\n */\n/* RANDBITS:\n *\tThis symbol indicates how many bits are produced by the\n *\tfunction used to generate normalized random numbers.\n *\tValues include 15, 16, 31, and 48.\n */\n#define Drand01()\t\t(rand() / (double) ((unsigned long)1 << 15))\t\t/**/\n#define Rand_seed_t\t\tunsigned\t\t/**/\n#define seedDrand01(x)\tsrand((Rand_seed_t)x)\t/**/\n#define RANDBITS\t\t15\t\t/**/\n\n/* SELECT_MIN_BITS:\n *\tThis symbol holds the minimum number of bits operated by select.\n *\tThat is, if you do select(n, ...), how many bits at least will be\n *\tcleared in the masks if some activity is detected.  Usually this\n *\tis either n or 32*ceil(n/32), especially many little-endians do\n *\tthe latter.  This is only useful if you have select(), naturally.\n */\n#define SELECT_MIN_BITS \t32\t/**/\n\n/* Select_fd_set_t:\n *\tThis symbol holds the type used for the 2nd, 3rd, and 4th\n *\targuments to select.  Usually, this is 'fd_set *', if HAS_FD_SET\n *\tis defined, and 'int *' otherwise.  This is only useful if you \n *\thave select(), of course.\n */\n#define Select_fd_set_t \tfd_set*\t/**/\n\n/* SIG_NAME:\n *\tThis symbol contains a list of signal names in order of\n *\tsignal number. This is intended\n *\tto be used as a static array initialization, like this:\n *\t\tchar *sig_name[] = { SIG_NAME };\n *\tThe signals in the list are separated with commas, and each signal\n *\tis surrounded by double quotes. There is no leading SIG in the signal\n *\tname, i.e. SIGQUIT is known as \"QUIT\".\n *\tGaps in the signal numbers (up to NSIG) are filled in with NUMnn,\n *\tetc., where nn is the actual signal number (e.g. NUM37).\n *\tThe signal number for sig_name[i] is stored in sig_num[i].\n *\tThe last element is 0 to terminate the list with a NULL.  This\n *\tcorresponds to the 0 at the end of the sig_num list.\n */\n/* SIG_NUM:\n *\tThis symbol contains a list of signal numbers, in the same order as the\n *\tSIG_NAME list. It is suitable for static array initialization, as in:\n *\t\tint sig_num[] = { SIG_NUM };\n *\tThe signals in the list are separated with commas, and the indices\n *\twithin that list and the SIG_NAME list match, so it's easy to compute\n *\tthe signal name from a number or vice versa at the price of a small\n *\tdynamic linear lookup. \n *\tDuplicates are allowed, but are moved to the end of the list.\n *\tThe signal number corresponding to sig_name[i] is sig_number[i].\n *\tif (i < NSIG) then sig_number[i] == i.  \n *\tThe last element is 0, corresponding to the 0 at the end of\n *\tthe sig_name list.\n */\n/* SIG_SIZE:\n *\tThis variable contains the number of elements of the SIG_NAME\n *\tand SIG_NUM arrays, excluding the final NULL entry.\n */\n#define SIG_NAME \"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"ABRT\", \"FPE\", \"KILL\", \"SEGV\", \"PIPE\", \"ALRM\", \"TERM\", \"USR1\", \"USR2\", \"BUS\", \"CHLD\", \"CONT\", \"STOP\", \"TSTP\", \"TTIN\", \"TTOU\", \"NUM21\", \"NUM22\", \"NUM23\", \"NUM24\", \"NUM25\", \"NUM26\", \"NUM27\", \"NUM28\", \"NUM29\", \"NUM30\", \"NUM31\", \"NUM32\", \"NUM33\", \"NUM34\", \"NUM35\", \"NUM36\", \"NUM37\", \"NUM38\", \"NUM39\", \"NUM40\", \"NUM41\", \"NUM42\", \"NUM43\", \"NUM44\", \"NUM45\", \"NUM46\", \"NUM47\", \"NUM48\", \"NUM49\", 0\t\t/**/\n#define SIG_NUM  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0\t\t/**/\n#define SIG_SIZE 50\t\t\t/**/\n\n/* SITEARCH:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-dependent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITEARCH_EXP:\n *\tThis symbol contains the ~name expanded version of SITEARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define SITEARCH \"/sys/lib/perl/5.8.0/site_perl/386\"\t\t/**/\n#define SITEARCH_EXP \"/sys/lib/perl/site_perl/386\"\t\t/**/\n\n/* SITELIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-independent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITELIB_EXP:\n *\tThis symbol contains the ~name expanded version of SITELIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* SITELIB_STEM:\n *\tThis define is SITELIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#define SITELIB \"/sys/lib/perl/5.8.0/site_perl\"\t\t/**/\n#define SITELIB_EXP \"/sys/lib/perl/5.8.0/site_perl\"\t\t/**/\n#define SITELIB_STEM \"/sys/lib/perl/5.8.0/site_perl\"\t\t/**/\n\n/* Size_t_size:\n *\tThis symbol holds the size of a Size_t in bytes.\n */\n#define Size_t_size 4\t\t/* */\n\n/* Size_t:\n *\tThis symbol holds the type used to declare length parameters\n *\tfor string functions.  It is usually size_t, but may be\n *\tunsigned long, int, etc.  It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Size_t size_t\t /* length parameter for string functions */\n\n/* Sock_size_t:\n *\tThis symbol holds the type used for the size argument of\n *\tvarious socket calls (just the base type, not the pointer-to).\n */\n#define Sock_size_t\t\tint /**/\n\n/* SSize_t:\n *\tThis symbol holds the type used by functions that return\n *\ta count of bytes or an error condition.  It must be a signed type.\n *\tIt is usually ssize_t, but may be long or int, etc.\n *\tIt may be necessary to include <sys/types.h> or <unistd.h>\n *\tto get any typedef'ed information.\n *\tWe will pick a type such that sizeof(SSize_t) == sizeof(Size_t).\n */\n#define SSize_t ssize_t\t /* signed count of bytes */\n\n/* STARTPERL:\n *\tThis variable contains the string to put in front of a perl\n *\tscript to make sure (one hopes) that it runs with perl and not\n *\tsome shell.\n */\n#define STARTPERL \"#!/bin/perl\"\t\t/**/\n\n/* STDCHAR:\n *\tThis symbol is defined to be the type of char used in stdio.h.\n *\tIt has the values \"unsigned char\" or \"char\".\n */\n#define STDCHAR char\t/**/\n\n/* HAS_STDIO_STREAM_ARRAY:\n *\tThis symbol, if defined, tells that there is an array\n *\tholding the stdio streams.\n */\n/* STDIO_STREAM_ARRAY:\n *\tThis symbol tells the name of the array holding the stdio streams.\n *\tUsual values include _iob, __iob, and __sF.\n */\n/*#define\tHAS_STDIO_STREAM_ARRAY\t/ **/\n#define STDIO_STREAM_ARRAY\t\n\n/* Uid_t_f:\n *\tThis symbol defines the format string used for printing a Uid_t.\n */\n#define\tUid_t_f\t\t\"hd\"\t\t/**/\n\n/* Uid_t_sign:\n *\tThis symbol holds the signedess of a Uid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Uid_t_sign\t-1\t\t/* UID sign */\n\n/* Uid_t_size:\n *\tThis symbol holds the size of a Uid_t in bytes.\n */\n#define Uid_t_size 2\t\t/* UID size */\n\n/* Uid_t:\n *\tThis symbol holds the type used to declare user ids in the kernel.\n *\tIt can be int, ushort, uid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Uid_t uid_t\t\t/* UID type */\n\n/* USE_64_BIT_INT:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be employed (be they 32 or 64 bits).  The minimal possible\n *\t64-bitness is used, just enough to get 64-bit integers into Perl.\n *\tThis may mean using for example \"long longs\", while your memory\n *\tmay still be limited to 2 gigabytes.\n */\n/* USE_64_BIT_ALL:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be used (be they 32 or 64 bits).  The maximal possible\n *\t64-bitness is employed: LP64 or ILP64, meaning that you will\n *\tbe able to use more than 2 gigabytes of memory.  This mode is\n *\teven more binary incompatible than USE_64_BIT_INT. You may not\n *\tbe able to run the resulting executable in a 32-bit CPU at all or\n *\tyou may need at least to reboot your OS to 64-bit mode.\n */\n#ifndef USE_64_BIT_INT\n/*#define\tUSE_64_BIT_INT\t\t/ **/\n#endif\n\n#ifndef USE_64_BIT_ALL\n/*#define\tUSE_64_BIT_ALL\t\t/ **/\n#endif\n\n/* USE_FAST_STDIO:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use 'fast stdio'.\n *\tDefaults to define in Perls 5.8 and earlier, to undef later.\n */\n#ifndef USE_FAST_STDIO\n/*#define\tUSE_FAST_STDIO\t\t/ **/\n#endif\n\n/* USE_LARGE_FILES:\n *\tThis symbol, if defined, indicates that large file support\n *\tshould be used when available.\n */\n#ifndef USE_LARGE_FILES\n#define\tUSE_LARGE_FILES\t\t/**/\n#endif\n\n/* USE_LONG_DOUBLE:\n *\tThis symbol, if defined, indicates that long doubles should\n *\tbe used when available.\n */\n#ifndef USE_LONG_DOUBLE\n/*#define\tUSE_LONG_DOUBLE\t\t/ **/\n#endif\n\n/* USE_MORE_BITS:\n *\tThis symbol, if defined, indicates that 64-bit interfaces and\n *\tlong doubles should be used when available.\n */\n#ifndef USE_MORE_BITS\n/*#define\tUSE_MORE_BITS\t\t/ **/\n#endif\n\n/* MULTIPLICITY:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use multiplicity.\n */\n#ifndef MULTIPLICITY\n/*#define\tMULTIPLICITY\t\t/ **/\n#endif\n\n/* USE_PERLIO:\n *\tThis symbol, if defined, indicates that the PerlIO abstraction should\n *\tbe used throughout.  If not defined, stdio should be\n *\tused in a fully backward compatible manner.\n */\n#ifndef USE_PERLIO\n#define\tUSE_PERLIO\t\t/**/\n#endif\n\n/* USE_SOCKS:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use socks.\n */\n#ifndef USE_SOCKS\n/*#define\tUSE_SOCKS\t\t/ **/\n#endif\n\n/* USE_ITHREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the interpreter-based threading implementation.\n */\n/* USE_5005THREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the 5.005-based threading implementation.\n */\n/* OLD_PTHREADS_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use the old draft POSIX threads API.\n */\n/* USE_REENTRANT_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\ttry to use the various _r versions of library functions.\n *\tThis is extremely experimental.\n */\n/*#define\tUSE_5005THREADS\t\t/ **/\n/*#define\tUSE_ITHREADS\t\t/ **/\n#if defined(USE_5005THREADS) && !defined(USE_ITHREADS)\n#define\t\tUSE_THREADS\t\t/* until src is revised*/\n#endif\n/*#define\tOLD_PTHREADS_API\t\t/ **/\n/*#define\tUSE_REENTRANT_API\t/ **/\n\n/* PERL_VENDORARCH:\n *\tIf defined, this symbol contains the name of a private library.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.\n *\tIt may have a ~ on the front. \n *\tThe standard distribution will put nothing in this directory.\n *\tVendors who distribute perl may wish to place their own\n *\tarchitecture-dependent modules and extensions in this directory with\n *\t\tMakeMaker Makefile.PL INSTALLDIRS=vendor \n *\tor equivalent.  See INSTALL for details.\n */\n/* PERL_VENDORARCH_EXP:\n *\tThis symbol contains the ~name expanded version of PERL_VENDORARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define PERL_VENDORARCH \"\"\t\t/ **/\n/*#define PERL_VENDORARCH_EXP \"\"\t\t/ **/\n\n/* PERL_VENDORLIB_EXP:\n *\tThis symbol contains the ~name expanded version of VENDORLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* PERL_VENDORLIB_STEM:\n *\tThis define is PERL_VENDORLIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n/*#define PERL_VENDORLIB_EXP \"\"\t\t/ **/\n/*#define PERL_VENDORLIB_STEM \"\"\t\t/ **/\n\n/* HAS_CRYPT:\n *\tThis symbol, if defined, indicates that the crypt routine is available\n *\tto encrypt passwords and the like.\n */\n/*#define HAS_CRYPT\t\t/ **/\n\n/* SETUID_SCRIPTS_ARE_SECURE_NOW:\n *\tThis symbol, if defined, indicates that the bug that prevents\n *\tsetuid scripts from being secure is not present in this kernel.\n */\n/* DOSUID:\n *\tThis symbol, if defined, indicates that the C program should\n *\tcheck the script that it is executing for setuid/setgid bits, and\n *\tattempt to emulate setuid/setgid on systems that have disabled\n *\tsetuid #! scripts because the kernel can't do it securely.\n *\tIt is up to the package designer to make sure that this emulation\n *\tis done securely.  Among other things, it should do an fstat on\n *\tthe script it just opened to make sure it really is a setuid/setgid\n *\tscript, it should make sure the arguments passed correspond exactly\n *\tto the argument on the #! line, and it should not trust any\n *\tsubprocesses to which it must pass the filename rather than the\n *\tfile descriptor of the script to be executed.\n */\n/*#define SETUID_SCRIPTS_ARE_SECURE_NOW\t/ **/\n/*#define DOSUID\t\t/ **/\n\n/* Shmat_t:\n *\tThis symbol holds the return type of the shmat() system call.\n *\tUsually set to 'void *' or 'char *'.\n */\n/* HAS_SHMAT_PROTOTYPE:\n *\tThis symbol, if defined, indicates that the sys/shm.h includes\n *\ta prototype for shmat().  Otherwise, it is up to the program to\n *\tguess one.  Shmat_t shmat(int, Shmat_t, int) is a good guess,\n *\tbut not always right so it should be emitted by the program only\n *\twhen HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.\n */\n#define Shmat_t \t/**/\n/*#define HAS_SHMAT_PROTOTYPE\t/ **/\n\n/* I_NDBM:\n *\tThis symbol, if defined, indicates that <ndbm.h> exists and should\n *\tbe included.\n */\n/*#define I_NDBM\t/ **/\n\n/* SH_PATH:\n *\tThis symbol contains the full pathname to the shell used on this\n *\ton this system to execute Bourne shell scripts.  Usually, this will be\n *\t/bin/sh, though it's possible that some systems will have /bin/ksh,\n *\t/bin/pdksh, /bin/ash, /bin/bash, or even something such as\n *\tD:/bin/sh.exe.\n */\n#define SH_PATH \"/bin/sh\"  /**/\n\n/* USE_CROSS_COMPILE:\n *\tThis symbol, if defined, indicates that Perl is being cross-compiled.\n */\n/* PERL_TARGETARCH:\n *\tThis symbol, if defined, indicates the target architecture\n *\tPerl has been cross-compiled to.  Undefined if not a cross-compile.\n */\n#ifndef USE_CROSS_COMPILE\n/*#define\tUSE_CROSS_COMPILE\t/ **/\n#define\tPERL_TARGETARCH\t\"\"\t/**/\n#endif\n\n/* HAS_COPYSIGNL:\n *\tThis symbol, if defined, indicates that the copysignl routine is\n *\tavailable.  If aintl is also present we can emulate modfl.\n */\n/*#define HAS_COPYSIGNL\t\t/**/\n\n/* USE_CPLUSPLUS:\n *\tThis symbol, if defined, indicates that a C++ compiler was\n *\tused to compiled Perl and will be used to compile extensions.\n */\n/*#define USE_CPLUSPLUS\t\t/**/\n\n/* HAS_DBMINIT_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the dbminit() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int dbminit(char *);\n */\n/*#define\tHAS_DBMINIT_PROTO\t/ **/\n\n/* HAS_DIRFD:\n *\tThis manifest constant lets the C program know that dirfd\n *\tis available.\n */\n/*#define HAS_DIRFD\t\t/ **/\n\n/* HAS_FLOCK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the flock() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int flock(int, int);\n */\n/*#define\tHAS_FLOCK_PROTO\t/ **/\n\n/* HAS_FPCLASSL:\n *\tThis symbol, if defined, indicates that the fpclassl routine is\n *\tavailable to classify long doubles.  Available for example in IRIX.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASSL\t\t/ **/\n\n/* HAS_NL_LANGINFO:\n *\tThis symbol, if defined, indicates that the nl_langinfo routine is\n *\tavailable to return local data.  You will also need <langinfo.h>\n *\tand therefore I_LANGINFO.\n */\n/*#define HAS_NL_LANGINFO\t\t/ **/\n\n/* HAS_PROCSELFEXE:\n *\tThis symbol is defined if PROCSELFEXE_PATH is a symlink\n *\tto the absolute pathname of the executing program.\n */\n/* PROCSELFEXE_PATH:\n *\tIf HAS_PROCSELFEXE is defined this symbol is the filename\n *\tof the symbolic link pointing to the absolute pathname of\n *\tthe executing program.\n */\n/*#define HAS_PROCSELFEXE\t/ **/\n#if defined(HAS_PROCSELFEXE) && !defined(PROCSELFEXE_PATH)\n#define PROCSELFEXE_PATH\t\t/**/\n#endif\n\n/* HAS_PTHREAD_ATTR_SETSCOPE:\n *\tThis symbol, if defined, indicates that the pthread_attr_setscope\n *\tsystem call is available to set the contention scope attribute of\n *\ta thread attribute object.\n */\n/*#define HAS_PTHREAD_ATTR_SETSCOPE\t\t/ **/\n\n/* HAS_SIGPROCMASK:\n *\tThis symbol, if defined, indicates that the sigprocmask\n *\tsystem call is available to examine or change the signal mask\n *\tof the calling process.\n */\n#define HAS_SIGPROCMASK\t\t/**/\n\n/* HAS_SOCKATMARK:\n *\tThis symbol, if defined, indicates that the sockatmark routine is\n *\tavailable to test whether a socket is at the out-of-band mark.\n */\n/*#define HAS_SOCKATMARK\t\t/ **/\n\n/* HAS_SOCKATMARK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sockatmark() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int sockatmark(int);\n */\n/*#define\tHAS_SOCKATMARK_PROTO\t/ **/\n\n/* HAS_SETRESGID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresgid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresgid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESGID_PROTO\t/ **/\n\n/* HAS_SETRESUID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresuid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresuid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESUID_PROTO\t/ **/\n\n/* HAS_STRFTIME:\n *\tThis symbol, if defined, indicates that the strftime routine is\n *\tavailable to do time formatting.\n */\n#define HAS_STRFTIME\t\t/**/\n\n/* HAS_STRLCAT\n *      This symbol, if defined, indicates that the strlcat routine is\n *      available to do string concatenation.\n */\n/*#define HAS_STRLCAT\t\t\t/**/\n\n/* HAS_STRLCPY:\n *      This symbol, if defined, indicates that the strlcpy routine is\n *      available to do string copying.\n */\n/*#define HAS_STRLCPY\t\t\t/**/\n\n/* HAS_SYSCALL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the syscall() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int syscall(int,  ...);\n *\t\textern int syscall(long, ...);\n */\n/*#define\tHAS_SYSCALL_PROTO\t/ **/\n\n/* U32_ALIGNMENT_REQUIRED:\n *\tThis symbol, if defined, indicates that you must access\n *\tcharacter data through U32-aligned pointers.\n */\n#ifndef U32_ALIGNMENT_REQUIRED\n#define U32_ALIGNMENT_REQUIRED\t/**/\n#endif\n\n/* HAS_USLEEP_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the usleep() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int usleep(useconds_t);\n */\n/*#define\tHAS_USLEEP_PROTO\t/ **/\n\n/* I_CRYPT:\n *\tThis symbol, if defined, indicates that <crypt.h> exists and\n *\tshould be included.\n */\n/*#define\tI_CRYPT\t\t/ **/\n\n/* I_FP:\n *\tThis symbol, if defined, indicates that <fp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP\t\t/ **/\n\n/* I_LANGINFO:\n *\tThis symbol, if defined, indicates that <langinfo.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LANGINFO\t\t/ **/\n\n/* HAS_CTERMID_R:\n *\tThis symbol, if defined, indicates that the ctermid_r routine\n *\tis available to ctermid re-entrantly.\n */\n/* CTERMID_R_PROTO:\n *\tThis symbol encodes the prototype of ctermid_r.\n *\tIt is zero if d_ctermid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctermid_r\n *\tis defined.\n */\n/*#define HAS_CTERMID_R\t   / **/\n#define CTERMID_R_PROTO 0\t   /**/\n\n/* HAS_ENDHOSTENT_R:\n *\tThis symbol, if defined, indicates that the endhostent_r routine\n *\tis available to endhostent re-entrantly.\n */\n/* ENDHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of endhostent_r.\n *\tIt is zero if d_endhostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endhostent_r\n *\tis defined.\n */\n/*#define HAS_ENDHOSTENT_R\t   / **/\n#define ENDHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDNETENT_R:\n *\tThis symbol, if defined, indicates that the endnetent_r routine\n *\tis available to endnetent re-entrantly.\n */\n/* ENDNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of endnetent_r.\n *\tIt is zero if d_endnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endnetent_r\n *\tis defined.\n */\n/*#define HAS_ENDNETENT_R\t   / **/\n#define ENDNETENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDPROTOENT_R:\n *\tThis symbol, if defined, indicates that the endprotoent_r routine\n *\tis available to endprotoent re-entrantly.\n */\n/* ENDPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of endprotoent_r.\n *\tIt is zero if d_endprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endprotoent_r\n *\tis defined.\n */\n/*#define HAS_ENDPROTOENT_R\t   / **/\n#define ENDPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDSERVENT_R:\n *\tThis symbol, if defined, indicates that the endservent_r routine\n *\tis available to endservent re-entrantly.\n */\n/* ENDSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of endservent_r.\n *\tIt is zero if d_endservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endservent_r\n *\tis defined.\n */\n/*#define HAS_ENDSERVENT_R\t   / **/\n#define ENDSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYADDR_R:\n *\tThis symbol, if defined, indicates that the gethostbyaddr_r routine\n *\tis available to gethostbyaddr re-entrantly.\n */\n/* GETHOSTBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyaddr_r.\n *\tIt is zero if d_gethostbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYADDR_R\t   / **/\n#define GETHOSTBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYNAME_R:\n *\tThis symbol, if defined, indicates that the gethostbyname_r routine\n *\tis available to gethostbyname re-entrantly.\n */\n/* GETHOSTBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyname_r.\n *\tIt is zero if d_gethostbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyname_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYNAME_R\t   / **/\n#define GETHOSTBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the gethostent_r routine\n *\tis available to gethostent re-entrantly.\n */\n/* GETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of gethostent_r.\n *\tIt is zero if d_gethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostent_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTENT_R\t   / **/\n#define GETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYADDR_R:\n *\tThis symbol, if defined, indicates that the getnetbyaddr_r routine\n *\tis available to getnetbyaddr re-entrantly.\n */\n/* GETNETBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyaddr_r.\n *\tIt is zero if d_getnetbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYADDR_R\t   / **/\n#define GETNETBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYNAME_R:\n *\tThis symbol, if defined, indicates that the getnetbyname_r routine\n *\tis available to getnetbyname re-entrantly.\n */\n/* GETNETBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyname_r.\n *\tIt is zero if d_getnetbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyname_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYNAME_R\t   / **/\n#define GETNETBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETNETENT_R:\n *\tThis symbol, if defined, indicates that the getnetent_r routine\n *\tis available to getnetent re-entrantly.\n */\n/* GETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of getnetent_r.\n *\tIt is zero if d_getnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetent_r\n *\tis defined.\n */\n/*#define HAS_GETNETENT_R\t   / **/\n#define GETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNAME_R:\n *\tThis symbol, if defined, indicates that the getprotobyname_r routine\n *\tis available to getprotobyname re-entrantly.\n */\n/* GETPROTOBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobyname_r.\n *\tIt is zero if d_getprotobyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobyname_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNAME_R\t   / **/\n#define GETPROTOBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNUMBER_R:\n *\tThis symbol, if defined, indicates that the getprotobynumber_r routine\n *\tis available to getprotobynumber re-entrantly.\n */\n/* GETPROTOBYNUMBER_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobynumber_r.\n *\tIt is zero if d_getprotobynumber_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobynumber_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNUMBER_R\t   / **/\n#define GETPROTOBYNUMBER_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the getprotoent_r routine\n *\tis available to getprotoent re-entrantly.\n */\n/* GETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of getprotoent_r.\n *\tIt is zero if d_getprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotoent_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOENT_R\t   / **/\n#define GETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYNAME_R:\n *\tThis symbol, if defined, indicates that the getservbyname_r routine\n *\tis available to getservbyname re-entrantly.\n */\n/* GETSERVBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyname_r.\n *\tIt is zero if d_getservbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyname_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYNAME_R\t   / **/\n#define GETSERVBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYPORT_R:\n *\tThis symbol, if defined, indicates that the getservbyport_r routine\n *\tis available to getservbyport re-entrantly.\n */\n/* GETSERVBYPORT_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyport_r.\n *\tIt is zero if d_getservbyport_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyport_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYPORT_R\t   / **/\n#define GETSERVBYPORT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT_R:\n *\tThis symbol, if defined, indicates that the getservent_r routine\n *\tis available to getservent re-entrantly.\n */\n/* GETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of getservent_r.\n *\tIt is zero if d_getservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservent_r\n *\tis defined.\n */\n/*#define HAS_GETSERVENT_R\t   / **/\n#define GETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_PTHREAD_ATFORK:\n *\tThis symbol, if defined, indicates that the pthread_atfork routine\n *\tis available to setup fork handlers.\n */\n/*#define HAS_PTHREAD_ATFORK\t\t/ **/\n\n/* HAS_READDIR64_R:\n *\tThis symbol, if defined, indicates that the readdir64_r routine\n *\tis available to readdir64 re-entrantly.\n */\n/* READDIR64_R_PROTO:\n *\tThis symbol encodes the prototype of readdir64_r.\n *\tIt is zero if d_readdir64_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir64_r\n *\tis defined.\n */\n/*#define HAS_READDIR64_R\t   / **/\n#define READDIR64_R_PROTO 0\t   /**/\n\n/* HAS_SETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the sethostent_r routine\n *\tis available to sethostent re-entrantly.\n */\n/* SETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of sethostent_r.\n *\tIt is zero if d_sethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_sethostent_r\n *\tis defined.\n */\n/*#define HAS_SETHOSTENT_R\t   / **/\n#define SETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_SETLOCALE_R:\n *\tThis symbol, if defined, indicates that the setlocale_r routine\n *\tis available to setlocale re-entrantly.\n */\n/* SETLOCALE_R_PROTO:\n *\tThis symbol encodes the prototype of setlocale_r.\n *\tIt is zero if d_setlocale_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setlocale_r\n *\tis defined.\n */\n/*#define HAS_SETLOCALE_R\t   / **/\n#define SETLOCALE_R_PROTO 0\t   /**/\n\n/* HAS_SETNETENT_R:\n *\tThis symbol, if defined, indicates that the setnetent_r routine\n *\tis available to setnetent re-entrantly.\n */\n/* SETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of setnetent_r.\n *\tIt is zero if d_setnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setnetent_r\n *\tis defined.\n */\n/*#define HAS_SETNETENT_R\t   / **/\n#define SETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_SETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the setprotoent_r routine\n *\tis available to setprotoent re-entrantly.\n */\n/* SETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of setprotoent_r.\n *\tIt is zero if d_setprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setprotoent_r\n *\tis defined.\n */\n/*#define HAS_SETPROTOENT_R\t   / **/\n#define SETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_SETSERVENT_R:\n *\tThis symbol, if defined, indicates that the setservent_r routine\n *\tis available to setservent re-entrantly.\n */\n/* SETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of setservent_r.\n *\tIt is zero if d_setservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setservent_r\n *\tis defined.\n */\n/*#define HAS_SETSERVENT_R\t   / **/\n#define SETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_TTYNAME_R:\n *\tThis symbol, if defined, indicates that the ttyname_r routine\n *\tis available to ttyname re-entrantly.\n */\n/* TTYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of ttyname_r.\n *\tIt is zero if d_ttyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ttyname_r\n *\tis defined.\n */\n/*#define HAS_TTYNAME_R\t   / **/\n#define TTYNAME_R_PROTO 0\t   /**/\n\n#endif\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/plan9/config_sh.sample": "#!/bin/sh\n#\n# This file was produced by running the Configure script. It holds all the\n# definitions figured out by Configure. Should you modify one of these values,\n# do not forget to propagate your changes by running \"Configure -der\". You may\n# instead choose to run each of the .SH files by yourself, or \"Configure -S\".\n#\n\n# Package name      : perl5\n# Source directory  : .\n# Configuration time: Sun Nov 24 20:57:48 EST 2002\n# Configured by     : unknown\n# Target system     : plan9 17genr 1 0 generic pcfl \n\nAuthor=''\nDate='$Date'\nHeader=''\nId='$Id'\nLocker=''\nLog='$Log'\nMcc='Mcc'\nRCSfile='$RCSfile'\nRevision='$Revision'\nSource=''\nState=''\n_a='.a'\n_exe=''\n_o='.o'\nafs='false'\nafsroot='/afs'\nalignbytes='4'\naphostname='/bin/uname -n'\napi_revision='5'\napi_subversion='0'\napi_version='30'\napi_versionstring='5.30.0'\nar='ar'\narchlib='/sys/lib/perl5/5.30.3/386'\narchlibexp='/sys/lib/perl5/5.30.3/386'\narchname64=''\narchname='386'\narchobjs=''\nasctime_r_proto='0'\nawk='awk'\nbaserev='5.0'\nbash=''\nbin='/usr/bin'\nbinexp='/usr/bin'\nbison='bison'\nbootstrap_charset='undef'\nbyacc='byacc'\nbyteorder='1234'\nc=''\ncastflags='7'\ncat='cat'\ncc='cc'\ncccdlflags=''\nccdlflags=''\nccflags=''\nccflags_uselargefiles=''\nccname='cc'\nccsymbols='_POSIX_SOURCE= _BSD_EXTENSION='\nccversion=''\ncf_by='9trouble'\ncf_email='9trouble@plan9.bell-labs.com'\ncf_time='Sun Nov 24 20:57:48 EST 2002'\ncharbits='8'\nchgrp=''\nchmod='chmod'\nchown=''\nclocktype='clock_t'\ncomm='comm'\ncompress=''\ncontains='grep'\ncp='cp'\ncpio=''\ncpp='cpp'\ncpp_stuff='42'\ncppccsymbols='__STDC__=1'\ncppflags=''\ncpplast=''\ncppminus=''\ncpprun='/bin/cpp'\ncppstdin='cppstdin'\ncppsymbols='_POSIX_SOURCE=1 _BSD_EXTENSION=1'\ncrypt_r_proto='0'\ncryptlib=''\ncsh='csh'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\nd_PRIEUldbl='define'\nd_PRIFUldbl='define'\nd_PRIGUldbl='define'\nd_PRIXU64='define'\nd_PRId64='define'\nd_PRIeldbl='define'\nd_PRIfldbl='define'\nd_PRIgldbl='define'\nd_PRIi64='define'\nd_PRIo64='define'\nd_PRIu64='define'\nd_PRIx64='define'\nd_SCNfldbl='define'\nd__fwalk='undef'\nd_accept4='undef'\nd_access='define'\nd_accessx='undef'\nd_acosh='undef'\nd_aintl='undef'\nd_alarm='define'\nd_archlib='define'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='define'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bsd='undef'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_add_overflow='undef'\nd_builtin_choose_expr='undef'\nd_builtin_expect='undef'\nd_builtin_mul_overflow='undef'\nd_builtin_sub_overflow='undef'\nd_c99_variadic_macros='undef'\nd_casti32='undef'\nd_castneg='undef'\nd_cbrt='undef'\nd_chown='define'\nd_chroot='undef'\nd_chsize='undef'\nd_class='undef'\nd_clearenv='undef'\nd_closedir='define'\nd_cmsghdr_s='undef'\nd_copysign='undef'\nd_copysignl='undef'\nd_cplusplus='undef'\nd_crypt='undef'\nd_crypt_r='undef'\nd_csh='undef'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='define'\nd_dbl_dig='define'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='define'\nd_dir_dd_fd='undef'\nd_dirfd='undef'\nd_dirnamlen='undef'\nd_dladdr='undef'\nd_dlerror='undef'\nd_dlopen='undef'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_double_has_inf='define'\nd_double_has_nan='define'\nd_double_has_negative_zero='define'\nd_double_has_subnormals='define'\nd_double_style_cray='undef'\nd_double_style_ibm='undef'\nd_double_style_ieee='define'\nd_double_style_vax='undef'\nd_drand48_r='undef'\nd_drand48proto='undef'\nd_dup2='define'\nd_dup3='undef'\nd_duplocale='undef'\nd_eaccess='undef'\nd_endgrent='define'\nd_endgrent_r='undef'\nd_endhent='define'\nd_endhostent_r='undef'\nd_endnent='undef'\nd_endnetent_r='undef'\nd_endpent='undef'\nd_endprotoent_r='undef'\nd_endpwent='define'\nd_endpwent_r='undef'\nd_endsent='undef'\nd_endservent_r='undef'\nd_eofnblk='define'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='undef'\nd_fchdir='undef'\nd_fchmod='define'\nd_fchmodat='undef'\nd_fchown='undef'\nd_fcntl='define'\nd_fcntl_can_lock='undef'\nd_fd_macros='undef'\nd_fd_set='undef'\nd_fdclose='undef'\nd_fdim='undef'\nd_fds_bits='undef'\nd_fegetround='undef'\nd_fgetpos='define'\nd_finite='undef'\nd_finitel='undef'\nd_flexfnam='define'\nd_flock='undef'\nd_flockproto='undef'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='define'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='define'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_freelocale='undef'\nd_frexpl='undef'\nd_fs_data_s='undef'\nd_fseeko='undef'\nd_fsetpos='define'\nd_fstatfs='undef'\nd_fstatvfs='undef'\nd_fsync='define'\nd_ftello='undef'\nd_ftime='undef'\nd_futimes='undef'\nd_gai_strerror='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='define'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='define'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='undef'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='undef'\nd_getitimer='undef'\nd_getlogin='define'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='undef'\nd_getnameinfo='undef'\nd_getnbyaddr='undef'\nd_getnbyname='undef'\nd_getnent='undef'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='undef'\nd_getpagsz='undef'\nd_getpbyname='define'\nd_getpbynumber='undef'\nd_getpent='undef'\nd_getpgid='undef'\nd_getpgrp2='undef'\nd_getpgrp='define'\nd_getppid='define'\nd_getprior='undef'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='undef'\nd_getprpwnam='undef'\nd_getpwent='define'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='undef'\nd_getsent='undef'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='undef'\nd_getspnam='undef'\nd_getspnam_r='undef'\nd_gettimeod='define'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='undef'\nd_grpasswd='undef'\nd_hasmntopt='undef'\nd_htonl='define'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='undef'\nd_inc_version_list='undef'\nd_index='undef'\nd_inetaton='undef'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='define'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='undef'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='undef'\nd_isinfl='undef'\nd_isless='undef'\nd_isnan='undef'\nd_isnanl='undef'\nd_isnormal='undef'\nd_j0='undef'\nd_j0l='undef'\nd_killpg='undef'\nd_lc_monetary_2008='undef'\nd_lchown='undef'\nd_ldbl_dig='define'\nd_ldexpl='undef'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='0'\nd_link='define'\nd_linkat='undef'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localeconv_l='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='define'\nd_lockf='undef'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_long_double_style_ieee='undef'\nd_long_double_style_ieee_doubledouble='undef'\nd_long_double_style_ieee_extended='define'\nd_long_double_style_ieee_std='undef'\nd_long_double_style_vax='undef'\nd_longdbl='define'\nd_longlong='define'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='undef'\nd_lstat='define'\nd_madvise='undef'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='define'\nd_mbrlen='undef'\nd_mbrtowc='undef'\nd_mbstowcs='define'\nd_mbtowc='define'\nd_memmem='undef'\nd_memrchr='undef'\nd_mkdir='define'\nd_mkdtemp='undef'\nd_mkfifo='define'\nd_mkostemp='undef'\nd_mkstemp='undef'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='define'\nd_mmap='undef'\nd_modfl='undef'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='undef'\nd_msg='undef'\nd_msg_ctrunc='undef'\nd_msg_dontroute='undef'\nd_msg_oob='undef'\nd_msg_peek='undef'\nd_msg_proxy='undef'\nd_msgctl='undef'\nd_msgget='undef'\nd_msghdr_s='undef'\nd_msgrcv='undef'\nd_msgsnd='undef'\nd_msync='undef'\nd_munmap='undef'\nd_mymalloc='define'\nd_nan='undef'\nd_nanosleep='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_newlocale='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='undef'\nd_nl_langinfo='undef'\nd_nv_preserves_uv='undef'\nd_nv_zero_is_allbits_zero='undef'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='define'\nd_openat='undef'\nd_pathconf='define'\nd_pause='define'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe2='undef'\nd_pipe='define'\nd_poll='undef'\nd_portable='define'\nd_prctl='undef'\nd_prctl_set_name='undef'\nd_printf_format_null='undef'\nd_procselfexe='undef'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='undef'\nd_pthread_yield='undef'\nd_ptrdiff_t='undef'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='undef'\nd_pwpasswd='undef'\nd_pwquota='undef'\nd_qgcvt='undef'\nd_quad='define'\nd_querylocale='undef'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='define'\nd_readv='define'\nd_recvmsg='undef'\nd_regcomp='undef'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_renameat='undef'\nd_rewinddir='define'\nd_rint='undef'\nd_rmdir='define'\nd_round='undef'\nd_sbrkproto='undef'\nd_scalbn='undef'\nd_scalbnl='undef'\nd_sched_yield='undef'\nd_scm_rights='undef'\nd_seekdir='undef'\nd_select='define'\nd_sem='undef'\nd_semctl='undef'\nd_semctl_semid_ds='undef'\nd_semctl_semun='undef'\nd_semget='undef'\nd_semop='undef'\nd_sendmsg='undef'\nd_setegid='undef'\nd_seteuid='undef'\nd_setgrent='define'\nd_setgrent_r='undef'\nd_setgrps='undef'\nd_sethent='undef'\nd_sethostent_r='undef'\nd_setitimer='undef'\nd_setlinebuf='define'\nd_setlocale='define'\nd_setlocale_accepts_any_locale_name='undef'\nd_setlocale_r='undef'\nd_setnent='undef'\nd_setnetent_r='undef'\nd_setpent='undef'\nd_setpgid='define'\nd_setpgrp2='undef'\nd_setpgrp='undef'\nd_setprior='undef'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='define'\nd_setpwent_r='undef'\nd_setregid='undef'\nd_setresgid='undef'\nd_setresuid='undef'\nd_setreuid='undef'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='undef'\nd_setservent_r='undef'\nd_setsid='define'\nd_setvbuf='define'\nd_shm='undef'\nd_shmat='undef'\nd_shmatprototype='undef'\nd_shmctl='undef'\nd_shmdt='undef'\nd_shmget='undef'\nd_sigaction='define'\nd_siginfo_si_addr='undef'\nd_siginfo_si_band='undef'\nd_siginfo_si_errno='undef'\nd_siginfo_si_pid='undef'\nd_siginfo_si_status='undef'\nd_siginfo_si_uid='undef'\nd_siginfo_si_value='undef'\nd_signbit='define'\nd_sigprocmask='define'\nd_sigsetjmp='define'\nd_sin6_scope_id='undef'\nd_sitearch='define'\nd_snprintf='undef'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='define'\nd_socklen_t='undef'\nd_sockpair='define'\nd_socks5_init='undef'\nd_sqrtl='undef'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='undef'\nd_statfs_f_flags='undef'\nd_statfs_s='undef'\nd_static_inline='undef'\nd_statvfs='undef'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='undef'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='undef'\nd_stdio_stream_array='undef'\nd_stdiobase='undef'\nd_stdstdio='undef'\nd_strcoll='define'\nd_strerror_l='undef'\nd_strerror_r='undef'\nd_strftime='define'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strnlen='undef'\nd_strtod='define'\nd_strtod_l='undef'\nd_strtol='define'\nd_strtold='undef'\nd_strtold_l='undef'\nd_strtoll='undef'\nd_strtoq='undef'\nd_strtoul='define'\nd_strtoull='undef'\nd_strtouq='undef'\nd_strxfrm='define'\nd_suidsafe='undef'\nd_symlink='define'\nd_syscall='undef'\nd_syscallproto='undef'\nd_sysconf='define'\nd_sysernlst=''\nd_syserrlst='define'\nd_system='define'\nd_tcgetpgrp='define'\nd_tcsetpgrp='define'\nd_telldir='undef'\nd_telldirproto='undef'\nd_tgamma='undef'\nd_thread_safe_nl_langinfo_l='undef'\nd_time='define'\nd_timegm='undef'\nd_times='define'\nd_tm_tm_gmtoff='undef'\nd_tm_tm_zone='undef'\nd_tmpnam_r='undef'\nd_towlower='undef'\nd_towupper='undef'\nd_trunc='undef'\nd_truncate='undef'\nd_truncl='undef'\nd_ttyname_r='undef'\nd_tzname='define'\nd_u32align='define'\nd_ualarm='undef'\nd_umask='define'\nd_uname='define'\nd_union_semun='undef'\nd_unlinkat='undef'\nd_unordered='undef'\nd_unsetenv='undef'\nd_uselocale='undef'\nd_usleep='undef'\nd_usleepproto='undef'\nd_ustat='undef'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='define'\nd_voidtty=''\nd_vsnprintf='undef'\nd_wait4='undef'\nd_waitpid='define'\nd_wcscmp='undef'\nd_wcstombs='define'\nd_wcsxfrm='undef'\nd_wctomb='define'\nd_writev='define'\nd_xenix='undef'\ndate='date'\ndb_hashtype='u_int32_t'\ndb_prefixtype='size_t'\ndb_version_major=''\ndb_version_minor=''\ndb_version_patch=''\ndefault_inc_excludes_dot='undef'\ndirentrytype='struct dirent'\ndlext='none'\ndlsrc='dl_none.xs'\ndoubleinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f'\ndoublekind='3'\ndoublemantbits='52'\ndoublenanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f'\ndoublesize='8'\ndrand01='(rand() / (double) ((unsigned long)1 << 15))'\ndrand48_r_proto='0'\ndtrace=''\ndynamic_ext=''\neagain='EAGAIN'\nebcdic='undef'\necho='echo'\negrep='grep'\nemacs=''\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext=''\nexpr='expr'\nextensions='B ByteLoader Cwd Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call IO List/Util MIME/Base64 Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize attributes re threads threads/shared Encode/Byte Encode/CN Encode/EBCDIC Encode/JP Encode/KR Encode/Symbol Encode/TW Encode/Unicode Errno'\nextras=''\nfflushNULL='define'\nfflushall='undef'\nfind=''\nfirstmakefile='makefile'\nflex=''\nfpossize='8'\nfpostype='fpos_t'\nfreetype='void'\nfrom=':'\nfull_ar='/bin/ar'\nfull_csh='csh'\nfull_sed='/bin/sed'\ngccosandvers=''\ngccversion=''\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"hd\"'\ngidsign='-1'\ngidsize='2'\ngidtype='gid_t'\nglibpth=''\ngmake='gmake'\ngmtime_r_proto='0'\ngnulibc_version=''\ngrep='grep'\ngroupcat=''\ngroupstype='gid_t'\ngzip='gzip'\nh_fcntl='true'\nh_sysfile='false'\nhint='recommended'\nhostcat=''\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='long long'\ni8size='1'\ni8type='char'\ni_arpainet='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='undef'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='undef'\ni_execinfo='undef'\ni_fcntl='define'\ni_fenv='undef'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='define'\ni_ieeefp='undef'\ni_inttypes='define'\ni_langinfo='undef'\ni_libutil='undef'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='undef'\ni_mallocmalloc='undef'\ni_mntent='undef'\ni_ndbm='undef'\ni_netdb='define'\ni_neterrno='undef'\ni_netinettcp='define'\ni_niin='define'\ni_poll='undef'\ni_prot='undef'\ni_pthread='undef'\ni_pwd='define'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='undef'\ni_socks='undef'\ni_stdbool='undef'\ni_stdint='undef'\ni_stdlib='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='undef'\ni_sysfile='undef'\ni_sysfilio='undef'\ni_sysin='undef'\ni_sysioctl='define'\ni_syslog='undef'\ni_sysmman='undef'\ni_sysmode='undef'\ni_sysmount='undef'\ni_sysndir='undef'\ni_sysparam='define'\ni_syspoll='undef'\ni_sysresrc='define'\ni_syssecrt='undef'\ni_sysselct='define'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='undef'\ni_sysstatvfs='undef'\ni_systime='undef'\ni_systimek='undef'\ni_systimes='define'\ni_systypes='define'\ni_sysuio='define'\ni_sysun='define'\ni_sysutsname='define'\ni_sysvfs='undef'\ni_syswait='define'\ni_termio='undef'\ni_termios='define'\ni_time='define'\ni_unistd='define'\ni_ustat='undef'\ni_utime='define'\ni_vfork='undef'\ni_wchar='undef'\ni_wctype='undef'\ni_xlocale='undef'\nignore_versioned_solibs=''\ninc_version_list=' '\ninc_version_list_init='0'\nincpath=''\ninews=''\ninstallarchlib='/sys/lib/perl/5.30.3/386'\ninstallbin='/usr/bin'\ninstallman1dir='/sys/man/1pub'\ninstallman3dir='/sys/man/2pub'\ninstallprefix='/usr'\ninstallprefixexp='/usr'\ninstallprivlib='/sys/lib/perl/5.30.3'\ninstallscript='/usr/bin'\ninstallsitearch='/sys/lib/perl/5.30.3/site_perl/386'\ninstallsitebin='/usr/bin'\ninstallsitelib='/sys/lib/perl/5.30.3/site_perl'\ninstallstyle='lib/perl5'\ninstallusrbinperl='undef'\ninstallvendorarch=''\ninstallvendorbin=''\ninstallvendorlib=''\nintsize='4'\nissymlink='/bin/test -h'\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nknown_extensions='B ByteLoader Cwd DB_File Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call GDBM_File I18N/Langinfo IO IPC/SysV List/Util MIME/Base64 NDBM_File ODBM_File Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap attributes re threads threads/shared'\nksh=''\nld='ld'\nlddlflags=''\nldflags=''\nldflags_uselargefiles=''\nldlibpthname='LD_LIBRARY_PATH'\nless='less'\nlib_ext='.a'\nlibc=''\nlibperl='libperl.a'\nlibpth='/lib'\nlibs=' '\nlibsdirs=''\nlibsfiles=''\nlibsfound=''\nlibspath=' /lib'\nlibswanted='socket bind inet nsl nm ndbm gdbm dbm db malloc dl ld sun m c cposix posix ndir dir crypt sec ucb bsd BSD PW x util'\nlibswanted_uselargefiles=''\nline=''\nlint=''\nlkflags=''\nln='ln'\nlns='/bin/ln -s'\nlocaltime_r_proto='0'\nlocincpth=''\nloclibpth=''\nlongdblinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'\nlongdblkind='0'\nlongdblmantbits='64'\nlongdblnanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'\nlongdblsize='8'\nlonglongsize='8'\nlongsize='4'\nlp=''\nlpr=''\nls='ls'\nlseeksize='8'\nlseektype='off_t'\nmad='undef'\nmail=''\nmailx=''\nmake='make'\nmake_set_make='#'\nmallocobj='malloc.o'\nmallocsrc='malloc.c'\nmalloctype='void *'\nman1dir='/sys/man/1pub'\nman1direxp='/sys/man/1pub'\nman1ext=''\nman3dir='/sys/man/2pub'\nman3direxp='/sys/man/2pub'\nman3ext=''\nmips_type=''\nmkdir='mkdir'\nmmaptype='void *'\nmodetype='mode_t'\nmore='more'\nmultiarch='undef'\nmv=''\nmyarchname='386'\nmydomain='.nonet'\nmyhostname='17genr'\nmyuname='plan9 17genr 1 0 generic pcfl '\nn='-n'\nneed_va_copy='undef'\nnetdb_hlen_type='size_t'\nnetdb_host_type='char *'\nnetdb_name_type='char *'\nnetdb_net_type='long'\nnm='nm'\nnm_opt=''\nnm_so_opt=''\nnonxs_ext='Errno'\nnroff='nroff'\nnvEUformat='\"E\"'\nnvFUformat='\"F\"'\nnvGUformat='\"G\"'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='31'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvmantbits='52'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.o'\nold_pthread_create_joinable=''\noptimize='-O'\norderlib='false'\nosname='plan9'\nosvers='1'\notherlibdirs=' '\npackage='perl5'\npager='/usr/ucb/more'\npasscat=''\npatchlevel='8'\npath_sep=':'\nperl5=''\nperl=''\nperl_patchlevel=''\nperl_static_inline='static'\nperladmin='9trouble@plan9.bell-labs.com'\nperllibs=' '\nperlpath='/bin/perl'\npg='pg'\nphostname='uname -n'\npidtype='pid_t'\nplibpth=''\npmake=''\npr=''\nprefix='/usr'\nprefixexp='/usr'\nprivlib='/sys/lib/perl/5.30.3'\nprivlibexp='/sys/lib/perl/5.30.3'\nprocselfexe=''\nprototype='define'\nptrsize='4'\nquadkind='3'\nquadtype='long long'\nrandbits='15'\nrandfunc='rand'\nrandom_r_proto='0'\nrandseedtype='unsigned'\nranlib=':'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nrevision='5'\nrm='rm'\nrmail=''\nrun=''\nrunnm='false'\nsGMTIME_max='2147483647'\nsGMTIME_min='0'\nsLOCALTIME_max='2147483647'\nsLOCALTIME_min='0'\nsPRIEUldbl='\"E\"'\nsPRIFUldbl='\"F\"'\nsPRIGUldbl='\"G\"'\nsPRIXU64='\"llX\"'\nsPRId64='\"lld\"'\nsPRIeldbl='\"e\"'\nsPRIfldbl='\"f\"'\nsPRIgldbl='\"g\"'\nsPRIi64='\"lli\"'\nsPRIo64='\"llo\"'\nsPRIu64='\"llu\"'\nsPRIx64='\"llx\"'\nsSCNfldbl='\"f\"'\nsched_yield='undef'\nscriptdir='/usr/bin'\nscriptdirexp='/usr/bin'\nsed='sed'\nseedfunc='srand'\nselectminbits='32'\nselecttype='int *'\nsendmail=''\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='/bin/sh'\nshar=''\nsharpbang='#!'\nshmattype=''\nshortsize='2'\nshrpenv=''\nshsharp='true'\nsig_count='50'\nsig_name='ZERO HUP INT QUIT ILL ABRT FPE KILL SEGV PIPE ALRM TERM USR1 USR2 BUS CHLD CONT STOP TSTP TTIN TTOU NUM21 NUM22 NUM23 NUM24 NUM25 NUM26 NUM27 NUM28 NUM29 NUM30 NUM31 NUM32 NUM33 NUM34 NUM35 NUM36 NUM37 NUM38 NUM39 NUM40 NUM41 NUM42 NUM43 NUM44 NUM45 NUM46 NUM47 NUM48 NUM49 '\nsig_name_init='\"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"ABRT\", \"FPE\", \"KILL\", \"SEGV\", \"PIPE\", \"ALRM\", \"TERM\", \"USR1\", \"USR2\", \"BUS\", \"CHLD\", \"CONT\", \"STOP\", \"TSTP\", \"TTIN\", \"TTOU\", \"NUM21\", \"NUM22\", \"NUM23\", \"NUM24\", \"NUM25\", \"NUM26\", \"NUM27\", \"NUM28\", \"NUM29\", \"NUM30\", \"NUM31\", \"NUM32\", \"NUM33\", \"NUM34\", \"NUM35\", \"NUM36\", \"NUM37\", \"NUM38\", \"NUM39\", \"NUM40\", \"NUM41\", \"NUM42\", \"NUM43\", \"NUM44\", \"NUM45\", \"NUM46\", \"NUM47\", \"NUM48\", \"NUM49\", 0'\nsig_num='0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 '\nsig_num_init='0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0'\nsig_size='50'\nsignal_t='void'\nsitearch='/sys/lib/perl/5.30.3/site_perl/386'\nsitearchexp='/sys/lib/perl/site_perl/386'\nsitebin='/usr/bin'\nsitebinexp='/usr/bin'\nsitelib='/sys/lib/perl/5.30.3/site_perl'\nsitelib_stem='/sys/lib/perl/5.30.3/site_perl'\nsitelibexp='/sys/lib/perl/5.30.3/site_perl'\nsiteprefix='/usr'\nsiteprefixexp='/usr'\nsizesize='4'\nsizetype='size_t'\nsleep=''\nsmail=''\nso='so'\nsockethdr=''\nsocketlib=''\nsocksizetype='int'\nsort='sort'\nspackage='Perl5'\nspitshell='cat'\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc='.'\nssizetype='ssize_t'\nst_ino_sign='1'\nst_ino_size='4'\nstartperl='#!/bin/perl'\nstartsh='#!/bin/sh'\nstatic_ext='B ByteLoader Cwd Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call IO List/Util MIME/Base64 Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize attributes re threads threads/shared Encode/Byte Encode/CN Encode/EBCDIC Encode/JP Encode/KR Encode/Symbol Encode/TW Encode/Unicode'\nstdchar='char'\nstdio_base='((fp)->_base)'\nstdio_bufsiz='((fp)->_cnt + (fp)->_ptr - (fp)->_base)'\nstdio_cnt='((fp)->_cnt)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\nstrings='/sys/include/ape/string.h'\nsubmit=''\nsubversion='3'\nsysman='/sys/man/1pub'\ntail=''\ntar=''\ntargetarch=''\ntargetsh='/bin/sh'\ntbl=''\ntee=''\ntest='test'\ntimeincl='/sys/include/ape/time.h '\ntimetype='time_t'\ntmpnam_r_proto='0'\nto=':'\ntouch='touch'\ntr='tr'\ntrnl='\\012'\ntroff=''\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='unsigned long long'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"hd\"'\nuidsign='-1'\nuidsize='2'\nuidtype='uid_t'\nuname='uname'\nuniq='uniq'\nuquadtype='unsigned long long'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='undef'\nusedl='undef'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='undef'\nusekernprocpathname='undef'\nuselargefiles='define'\nuselongdouble='undef'\nusemallocwrap='undef'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='y'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='define'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='false'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='false'\nusrinc='/usr/include'\nuuname=''\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvendorarch=''\nvendorarchexp=''\nvendorbin=''\nvendorbinexp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorprefix=''\nvendorprefixexp=''\nversion='5.30.3'\nversion_patchlevel_string='version 30 subversion 3'\nversiononly='undef'\nvi=''\nxlibpth=''\nyacc='yacc'\nyaccflags=''\nzcat=''\nzip='zip'\n# Configure command line arguments.\nconfig_arg0='./Configure'\nconfig_args=''\nconfig_argc=0\nPERL_REVISION=5\nPERL_VERSION=30\nPERL_SUBVERSION=3\nPERL_API_REVISION=5\nPERL_API_VERSION=30\nPERL_API_SUBVERSION=0\nPERL_PATCHLEVEL=\nPERL_CONFIG_SH=true\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/Porting/bisect-runner.pl": "#!/usr/bin/perl -w\nuse strict;\n\nuse Getopt::Long qw(:config bundling no_auto_abbrev);\nuse Pod::Usage;\nuse Config;\nuse File::Temp qw(tempdir);\nuse File::Spec;\n\nmy @targets\n    = qw(none config.sh config.h miniperl lib/Config.pm Fcntl perl test_prep);\n\nmy %options =\n    (\n     'expect-pass' => 1,\n     clean => 1, # mostly for debugging this\n    );\n\n# We accept #!./miniperl and #!./perl\n# We don't accept #!miniperl and #!perl as their intent is ambiguous\nmy $run_with_our_perl = qr{\\A#!(\\./(?:mini)?perl)\\b};\n\nmy $linux64 = `uname -sm` eq \"Linux x86_64\\n\" ? '64' : '';\n\nmy @paths;\n\nif ($^O eq 'linux') {\n    # This is the search logic for a multi-arch library layout\n    # added to linux.sh in commits 40f026236b9959b7 and dcffd848632af2c7.\n    my $gcc = -x '/usr/bin/gcc' ? '/usr/bin/gcc' : 'gcc';\n\n    foreach (`$gcc -print-search-dirs`) {\n        next unless /^libraries: =(.*)/;\n        foreach (split ':', $1) {\n            next if m/gcc/;\n            next unless -d $_;\n            s!/$!!;\n            push @paths, $_;\n        }\n    }\n    push @paths, map {$_ . $linux64} qw(/usr/local/lib /lib /usr/lib)\n        if $linux64;\n}\n\nmy %defines =\n    (\n     usedevel => '',\n     optimize => '-g',\n     ld => 'cc',\n     (@paths ? (libpth => \\@paths) : ()),\n    );\n\n# Needed for the 'ignore_versioned_solibs' emulation below.\npush @paths, qw(/usr/local/lib /lib /usr/lib)\n        unless $linux64;\n\nunless(GetOptions(\\%options,\n                  'target=s', 'make=s', 'jobs|j=i', 'crash', 'expect-pass=i',\n                  'expect-fail' => sub { $options{'expect-pass'} = 0; },\n                  'clean!', 'one-liner|e=s@', 'c', 'l', 'w', 'match=s',\n                  'no-match=s' => sub {\n                      $options{match} = $_[1];\n                      $options{'expect-pass'} = 0;\n                  },\n                  'force-manifest', 'force-regen', 'setpgrp!', 'timeout=i',\n                  'test-build', 'validate',\n                  'all-fixups', 'early-fixup=s@', 'late-fixup=s@', 'valgrind',\n                  'check-args', 'check-shebang!', 'usage|help|?', 'gold=s',\n                  'module=s', 'with-module=s', 'cpan-config-dir=s',\n                  'test-module=s', 'no-module-tests',\n                  'A=s@',\n                  'D=s@' => sub {\n                      my (undef, $val) = @_;\n                      if ($val =~ /\\A([^=]+)=(.*)/s) {\n                          $defines{$1} = length $2 ? $2 : \"\\0\";\n                      } else {\n                          $defines{$val} = '';\n                      }\n                  },\n                  'U=s@' => sub {\n                      $defines{$_[1]} = undef;\n                  },\n\t\t )) {\n    pod2usage(exitval => 255, verbose => 1);\n}\n\nmy ($target, $match) = @options{qw(target match)};\n\n@ARGV = ('sh', '-c', 'cd t && ./perl TEST base/*.t')\n    if $options{validate} && !@ARGV;\n\npod2usage(exitval => 0, verbose => 2) if $options{usage};\n\n# This needs to be done before the next arguments check, as it's populating\n# @ARGV\nif (defined $target && $target =~ /\\.t\\z/) {\n    # t/TEST don't have a reliable way to run the test script under valgrind\n    # The $ENV{VALGRIND} code was only added after v5.8.0, and is more\n    # geared to logging than to exiting on failure if errors are found.\n    # I guess one could fudge things by replacing the symlink t/perl with a\n    # wrapper script which invokes valgrind, but leave doing that until\n    # someone needs it. (If that's you, then patches welcome.)\n    foreach (qw(valgrind match validate test-build one-liner)) {\n        die_255(\"$0: Test-case targets can't be run with --$_\")\n            if $options{$_};\n    }\n    die_255(\"$0: Test-case targets can't be combined with an explicit test\")\n        if @ARGV;\n\n    # Needing this unless is a smell suggesting that this implementation of\n    # test-case targets is not really in the right place.\n    unless ($options{'check-args'}) {\n        # The top level sanity tests refuse to start or end a test run at a\n        # revision which skips, hence this test ensures reasonable sanity at\n        # automatically picking a suitable start point for both normal operation\n        # and --expect-fail\n        skip(\"Test case $target is not a readable file\")\n            unless -f $target && -r _;\n    }\n\n    # t/TEST runs from and takes pathnames relative to t/, so need to strip\n    # out a leading t, or add ../ otherwise\n    unless ($target =~ s!\\At/!!) {\n        $target = \"../$target\";\n    }\n    @ARGV = ('sh', '-c', \"cd t && ./perl TEST \" . quotemeta $target);\n    $target = 'test_prep';\n}\n\npod2usage(exitval => 255, verbose => 1)\n    unless @ARGV || $match || $options{'test-build'}\n        || defined $options{'one-liner'} || defined $options{module}\n        || defined $options{'test-module'};\npod2usage(exitval => 255, verbose => 1)\n    if !$options{'one-liner'} && ($options{l} || $options{w});\nif ($options{'no-module-tests'} && $options{module}) {\n    print STDERR \"--module and --no-module-tests are exclusive.\\n\\n\";\n    pod2usage(exitval => 255, verbose => 1)\n}\nif ($options{'no-module-tests'} && $options{'test-module'}) {\n    print STDERR \"--test-module and --no-module-tests are exclusive.\\n\\n\";\n    pod2usage(exitval => 255, verbose => 1)\n}\nif ($options{module} && $options{'test-module'}) {\n    print STDERR \"--module and --test-module are exclusive.\\n\\n\";\n    pod2usage(exitval => 255, verbose => 1)\n}\n\ncheck_shebang($ARGV[0])\n    if $options{'check-shebang'} && @ARGV && !$options{match};\n\nexit 0 if $options{'check-args'};\n\n=head1 NAME\n\nbisect.pl - use git bisect to pinpoint changes\n\n=head1 SYNOPSIS\n\n # When did this become an error?\n .../Porting/bisect.pl -e 'my $a := 2;'\n # When did this stop being an error?\n .../Porting/bisect.pl --expect-fail -e '1 // 2'\n # When did this test start failing?\n .../Porting/bisect.pl --target t/op/sort.t\n # When were all lines matching this pattern removed from all files?\n .../Porting/bisect.pl --match '\\b(?:PL_)hash_seed_set\\b'\n # When was some line matching this pattern added to some file?\n .../Porting/bisect.pl --expect-fail --match '\\buseithreads\\b'\n # When did this test program stop exiting 0?\n .../Porting/bisect.pl -- ./perl -Ilib ../test_prog.pl\n # When did this test program start crashing (any signal or coredump)?\n .../Porting/bisect.pl --crash -- ./perl -Ilib ../test_prog.pl\n # When did this first become valid syntax?\n .../Porting/bisect.pl --target=miniperl --end=v5.10.0 \\\n      --expect-fail -e 'my $a := 2;'\n # What was the last revision to build with these options?\n .../Porting/bisect.pl --test-build -Dd_dosuid\n # When did this test program start generating errors from valgrind?\n .../Porting/bisect.pl --valgrind ../test_prog.pl\n # When did these cpan modules start failing to compile/pass tests?\n .../Porting/bisect.pl --module=autobox,Moose\n # When did this code stop working in blead with these modules?\n .../Porting/bisect.pl --with-module=Moose,Moo -e 'use Moose; 1;'\n # Like the above 2 but with custom CPAN::MyConfig\n .../Porting/bisect.pl --module=Moo --cpan-config-dir=/home/blah/custom/\n\n=head1 DESCRIPTION\n\nTogether F<bisect.pl> and F<bisect-runner.pl> attempt to automate the use\nof C<git bisect> as much as possible. With one command (and no other files)\nit's easy to find out\n\n=over 4\n\n=item *\n\nWhich commit caused this example code to break?\n\n=item *\n\nWhich commit caused this example code to start working?\n\n=item *\n\nWhich commit added the first file to match this regex?\n\n=item *\n\nWhich commit removed the last file to match this regex?\n\n=back\n\nusually without needing to know which versions of perl to use as start and\nend revisions.\n\nBy default F<bisect.pl> will process all options, then use the rest of the\ncommand line as arguments to list C<system> to run a test case. By default,\nthe test case should pass (exit with 0) on earlier perls, and fail (exit\nnon-zero) on I<blead>. F<bisect.pl> will use F<bisect-runner.pl> to find the\nearliest stable perl version on which the test case passes, check that it\nfails on blead, and then use F<bisect-runner.pl> with C<git bisect run> to\nfind the commit which caused the failure.\n\nMany of perl's own test scripts exit 0 even if their TAP reports test\nfailures, and some need particular setup (such as running from the right\ndirectory, or adding C<-T> to the command line). Hence if you want to bisect\na test script, you can specify it with the I<--target> option, and it will\nbe invoked using F<t/TEST> which performs all the setup, and exits non-zero\nif the TAP reports failures. This works for any file ending C<.t>, so you can\nuse it with a file outside of the working checkout, for example to test a\nparticular version of a test script, as a path inside the repository will\n(of course) be testing the version of the script checked out for the current\nrevision, which may be too early to have the test you are interested in.\n\nBecause the test case is the complete argument to C<system>, it is easy to\nrun something other than the F<perl> built, if necessary. If you need to run\nthe perl built, you'll probably need to invoke it as C<./perl -Ilib ...>.\nAs a special case, if the first argument of the test case is a readable file\n(whether executable or not), matching C<qr{\\A#!./(?:mini)?perl\\b}> then it\nwill have C<./perl> <-Ilib> (or C<./miniperl>) prepended to it.\n\nYou need a clean checkout to run a bisect. You can use the checkout\ncontaining F<Porting/bisect.pl> if you wish - in this case\nF<Porting/bisect.pl> will copy F<Porting/bisect-runner.pl> to a temporary\nfile generated by C<File::Temp::tempfile()>. If doing this, beware that when\nthe bisect ends (or you abort it) then your checkout is no longer at\nC<blead>, so you will need to C<git checkout blead> before restarting, to\nget the current version of F<Porting/bisect.pl> again. It's often easier\neither to copy F<Porting/bisect.pl> and F<Porting/bisect-runner.pl> to\nanother directory (I<e.g.> F<~/bin>, if you have one), or to create a second\ngit repository for running bisect. To create a second local repository, if\nyour working checkout is called F<perl>, a simple solution is to make a\nlocal clone, and run from that. I<i.e.>:\n\n    cd ..\n    git clone perl perl2\n    cd perl2\n    ../perl/Porting/bisect.pl ...\n\nBy default, F<bisect-runner.pl> will automatically disable the build of\nL<DB_File> for commits earlier than ccb44e3bf3be2c30, as it's not practical\nto patch DB_File 1.70 and earlier to build with current Berkeley DB headers.\n(ccb44e3bf3be2c30 was in September 1999, between 5.005_62 and 5.005_63.)\nIf your F<db.h> is old enough you can override this with C<-Unoextensions>.\n\n=head1 OPTIONS\n\n=over 4\n\n=item *\n\n--start I<commit-ish>\n\nEarliest revision to test, as a I<commit-ish> (a tag, commit or anything\nelse C<git> understands as a revision). If not specified, F<bisect.pl> will\nsearch stable .0 perl releases until it finds one where the test case\npasses. The default is to search from 5.002 to the most recent tagged stable\nrelease (v5.18.0 at the time of writing). If F<bisect.pl> detects that the\ncheckout is on a case insensitive file system, it will search from 5.005 to\nthe most recent tagged stable release. Only .0 stable releases are used\nbecause these are the only stable releases that are parents of blead, and\nhence suitable for a bisect run.\n\n=item *\n\n--end I<commit-ish>\n\nMost recent revision to test, as a I<commit-ish>. If not specified, defaults\nto I<blead>.\n\n=item *\n\n--target I<target>\n\nF<Makefile> target (or equivalent) needed, to run the test case. If specified,\nthis should be one of\n\n=over 4\n\n=item *\n\nI<none>\n\nDon't build anything - just run the user test case against a clean checkout.\nUsing this gives a couple of features that a plain C<git bisect run> can't\noffer - automatic start revision detection, and test case C<--timeout>.\n\n=item *\n\nI<config.sh>\n\nJust run F<./Configure>\n\n=item *\n\nI<config.h>\n\nRun the various F<*.SH> files to generate F<Makefile>, F<config.h>, I<etc>.\n\n=item *\n\nI<miniperl>\n\nBuild F<miniperl>.\n\n=item *\n\nI<lib/Config.pm>\n\nUse F<miniperl> to build F<lib/Config.pm>\n\n=item *\n\nI<Fcntl>\n\nBuild F<lib/auto/Fcntl/Fnctl.so> (strictly, C<.$Config{so}>). As L<Fcntl>\nis simple XS module present since 5.000, this provides a fast test of\nwhether XS modules can be built. Note, XS modules are built by F<miniperl>,\nhence this target will not build F<perl>.\n\n=item *\n\nI<perl>\n\nBuild F<perl>. This also builds pure-Perl modules in F<cpan>, F<dist> and\nF<ext>. XS modules (such as L<Fcntl>) are not built.\n\n=item *\n\nI<test_prep>\n\nBuild everything needed to run the tests. This is the default if we're\nrunning test code, but is time consuming, as it means building all\nXS modules. For older F<Makefile>s, the previous name of C<test-prep>\nis automatically substituted. For very old F<Makefile>s, C<make test> is\nrun, as there is no target provided to just get things ready, and for 5.004\nand earlier the tests run very quickly.\n\n=item *\n\nA file ending C<.t>\n\nBuild everything needed to run the tests, and then run this test script using\nF<t/TEST>. This is actually implemented internally by using the target\nI<test_prep>, and setting the test case to \"sh\", \"-c\", \"cd t && ./TEST ...\"\n\n=back\n\n=item *\n\n--one-liner 'code to run'\n\n=item *\n\n-e 'code to run'\n\nExample code to run, just like you'd use with C<perl -e>.\n\nThis prepends C<./perl -Ilib -e 'code to run'> to the test case given,\nor F<./miniperl> if I<target> is C<miniperl>.\n\n(Usually you'll use C<-e> instead of providing a test case in the\nnon-option arguments to F<bisect.pl>. You can repeat C<-e> on the command\nline, just like you can with C<perl>)\n\nC<-E> intentionally isn't supported, as it's an error in 5.8.0 and earlier,\nwhich interferes with detecting errors in the example code itself.\n\n=item *\n\n-c\n\nAdd C<-c> to the command line, to cause perl to exit after syntax checking.\n\n=item *\n\n-l\n\nAdd C<-l> to the command line with C<-e>\n\nThis will automatically append a newline to every output line of your testcase.\nNote that you can't specify an argument to F<perl>'s C<-l> with this, as it's\nnot feasible to emulate F<perl>'s somewhat quirky switch parsing with\nL<Getopt::Long>. If you need the full flexibility of C<-l>, you need to write\na full test case, instead of using C<bisect.pl>'s C<-e> shortcut.\n\n=item *\n\n-w\n\nAdd C<-w> to the command line with C<-e>\n\nIt's not valid to pass C<-c>,  C<-l> or C<-w> to C<bisect.pl> unless you are\nalso using C<-e>\n\n=item *\n\n--expect-fail\n\nThe test case should fail for the I<start> revision, and pass for the I<end>\nrevision. The bisect run will find the first commit where it passes.\n\n=item *\n\n--crash\n\nTreat any non-crash as success, any crash as failure. (Crashing defined\nas exiting with a signal or a core dump.)\n\n=item *\n\n-D I<config_arg=value>\n\n=item *\n\n-U I<config_arg>\n\n=item *\n\n-A I<config_arg=value>\n\nArguments (C<-A>, C<-D>, C<-U>) to pass to F<Configure>. For example,\n\n    -Dnoextensions=Encode\n    -Uusedevel\n    -Accflags=-DNO_MATHOMS\n\nRepeated C<-A> arguments are passed\nthrough as is. C<-D> and C<-U> are processed in order, and override\nprevious settings for the same parameter. F<bisect-runner.pl> emulates\nC<-Dnoextensions> when F<Configure> itself does not provide it, as it's\noften very useful to be able to disable some XS extensions.\n\n=item *\n\n--make I<make-prog>\n\nThe C<make> command to use. If this not set, F<make> is used. If this is\nset, it also adds a C<-Dmake=...> else some recursive make invocations\nin extensions may fail. Typically one would use this as C<--make gmake>\nto use F<gmake> in place of the system F<make>.\n\n=item *\n\n--jobs I<jobs>\n\n=item *\n\n-j I<jobs>\n\nNumber of C<make> jobs to run in parallel. A value of 0 suppresses\nparallelism. If F</proc/cpuinfo> exists and can be parsed, or F</sbin/sysctl>\nexists and reports C<hw.ncpu>, or F</usr/bin/getconf> exists and reports\nC<_NPROCESSORS_ONLN> defaults to 1 + I<number of CPUs>. On HP-UX with the\nsystem make defaults to 0, otherwise defaults to 2.\n\n=item *\n\n--match pattern\n\n=item *\n\n--no-match pattern\n\nInstead of running a test program to determine I<pass> or I<fail>,\nC<--match> will pass if the given regex matches, and hence search for the\ncommit that removes the last matching file. C<--no-match> inverts the test,\nto search for the first commit that adds files that match.\n\nThe remaining command line arguments are treated as glob patterns for files\nto match against. If none are specified, then they default as follows:\n\n=over 4\n\n=item *\n\nIf no I<target> is specified, the match is against all files in the\nrepository (which is fast).\n\n=item *\n\nIf a I<target> is specified, that target is built, and the match is against\nonly the built files.\n\n=back\n\nTreating the command line arguments as glob patterns should not cause\nproblems, as the perl distribution has never shipped or built files with\nnames that contain characters which are globbing metacharacters.\n\nAnything which is not a readable file is ignored, instead of generating an\nerror. (If you want an error, run C<grep> or C<ack> as a test case). This\npermits one to easily search in a file that changed its name. For example:\n\n    .../Porting/bisect.pl --match 'Pod.*Functions' 'pod/buildtoc*'\n\nC<--no-match ...> is implemented as C<--expect-fail --match ...>\n\n=item *\n\n--valgrind\n\nRun the test program under C<valgrind>. If you need to test for memory\nerrors when parsing invalid programs, the default parser fail exit code of\n255 will always override C<valgrind>, so try putting the test case invalid\ncode inside a I<string> C<eval>, so that the perl interpreter will exit with 0.\n(Be sure to check the output of $@, to avoid missing mistakes such as\nunintended C<eval> failures due to incorrect C<@INC>)\n\nSpecifically, this option prepends C<valgrind> C<--error-exitcode=124> to\nthe command line that runs the testcase, to cause valgrind to exit non-zero\nif it detects errors, with the assumption that the test program itself\nalways exits with zero. If you require more flexibility than this, either\nspecify your C<valgrind> invocation explicitly as part of the test case, or\nuse a wrapper script to control the command line or massage the exit codes.\n\n=item *\n\n--test-build\n\nTest that the build completes, without running any test case.\n\nBy default, if the build for the desired I<target> fails to complete,\nF<bisect-runner.pl> reports a I<skip> back to C<git bisect>, the assumption\nbeing that one wants to find a commit which changed state \"builds && passes\"\nto \"builds && fails\". If instead one is interested in which commit broke the\nbuild (possibly for particular F<Configure> options), use I<--test-build>\nto treat a build failure as a failure, not a \"skip\".\n\nOften this option isn't as useful as it first seems, because I<any> build\nfailure will be reported to C<git bisect> as a failure, not just the failure\nthat you're interested in. Generally, to debug a particular problem, it's\nmore useful to use a I<target> that builds properly at the point of interest,\nand then a test case that runs C<make>. For example:\n\n    .../Porting/bisect.pl --start=perl-5.000 --end=perl-5.002 \\\n        --expect-fail --force-manifest --target=miniperl make perl\n\nwill find the first revision capable of building L<DynaLoader> and then\nF<perl>, without becoming confused by revisions where F<miniperl> won't\neven link.\n\n=item *\n\n--module module1,module2,...\n\nInstall this (or these) module(s), die when it (the last of those)\ncannot be updated to the current version.\n\nMisnomer. the argument can be any argument that can be passed to CPAN\nshell's install command. B<But>: since we only have the uptodate\ncommand to verify that an install has taken place, we are unable to\ndetermine success for arguments like\nMSCHWERN/Test-Simple-1.005000_005.tar.gz.\n\nIn so far, it is not such a misnomer.\n\nNote that this and I<--with-module> will both require a C<CPAN::MyConfig>.\nIf F<$ENV{HOME}/.cpan/CPAN/MyConfig.pm> does not exist, a CPAN shell will\nbe started up for you so you can configure one. Feel free to let\nCPAN pick defaults for you. Enter 'quit' when you are done, and\nthen everything should be all set. Alternatively, you may\nspecify a custom C<CPAN::MyConfig> by using I<--cpan-config-dir>.\n\nAlso, if you want to bisect a module that needs a display (like\nTK) and you don't want random screens appearing and disappearing\non your computer while you're working, you can do something like\nthis:\n\nIn a terminal:\n\n $ while true; do date ; if ! ps auxww | grep -v grep \\\n   | grep -q Xvfb; then Xvfb :121 & fi; echo -n 'sleeping 60 '; \\\n   sleep 60; done\n\nAnd then:\n\n  DISPLAY=\":121\" .../Porting/bisect.pl --module=TK\n\n(Some display alternatives are vncserver and Xnest.)\n\n=item *\n\n--with-module module1,module2,...\n\nLike I<--module> above, except this simply installs the requested\nmodules and they can then be used in other tests.\n\nFor example:\n\n  .../Porting/bisect.pl --with-module=Moose -e 'use Moose; ...'\n\n=item *\n\n--no-module-tests\n\nUse in conjunction with I<--with-module> to install the modules without\nrunning their tests. This can be a big time saver.\n\nFor example:\n\n  .../Porting/bisect.pl --with-module=Moose --no-module-tests \\\n       -e 'use Moose; ...'\n\n=item *\n\n--test-module\n\nThis is like I<--module>, but just runs the module's tests, instead of\ninstalling it.\n\nWARNING: This is a somewhat experimental option, known to work on recent\nCPAN shell versions.  If you use this option and strange things happen,\nplease report them.\n\nUsually, you can just use I<--module>, but if you are getting inconsistent\ninstallation failures and you just want to see when the tests started\nfailing, you might find this option useful.\n\n=item *\n\n--cpan-config-dir /home/blah/custom\n\nIf defined, this will cause L<CPAN> to look for F<CPAN/MyConfig.pm> inside of\nthe specified directory, instead of using the default config of\nF<$ENV{HOME}/.cpan/>.\n\nIf no default config exists, a L<CPAN> shell will be fired up for you to\nconfigure things. Letting L<CPAN> automatically configure things for you\nshould work well enough. You probably want to choose I<manual> instead of\nI<local::lib> if it asks. When you're finished with configuration, just\ntype I<q> and hit I<ENTER> and the bisect should continue.\n\n=item *\n\n--force-manifest\n\nBy default, a build will \"skip\" if any files listed in F<MANIFEST> are not\npresent. Usually this is useful, as it avoids false-failures. However, there\nare some long ranges of commits where listed files are missing, which can\ncause a bisect to abort because all that remain are skipped revisions.\n\nIn these cases, particularly if the test case uses F<miniperl> and no modules,\nit may be more useful to force the build to continue, even if files\nF<MANIFEST> are missing.\n\n=item *\n\n--force-regen\n\nRun C<make regen_headers> before building F<miniperl>. This may fix a build\nthat otherwise would skip because the generated headers at that revision\nare stale. It's not the default because it conceals this error in the true\nstate of such revisions.\n\n=item *\n\n--expect-pass [0|1]\n\nC<--expect-pass=0> is equivalent to C<--expect-fail>. I<1> is the default.\n\n=item *\n\n--timeout I<seconds>\n\nRun the testcase with the given timeout. If this is exceeded, kill it (and\nby default all its children), and treat it as a failure.\n\n=item *\n\n--setpgrp\n\nRun the testcase in its own process group. Specifically, call C<setpgrp 0, 0>\njust before C<exec>-ing the user testcase. The default is not to set the\nprocess group, unless a timeout is used.\n\n=item *\n\n--all-fixups\n\nF<bisect-runner.pl> will minimally patch various files on a platform and\nversion dependent basis to get the build to complete. Normally it defers\ndoing this as long as possible - C<.SH> files aren't patched until after\nF<Configure> is run, and C<C> and C<XS> code isn't patched until after\nF<miniperl> is built. If C<--all-fixups> is specified, all the fixups are\ndone before running C<Configure>. In rare cases adding this may cause a\nbisect to abort, because an inapplicable patch or other fixup is attempted\nfor a revision which would usually have already I<skip>ped. If this happens,\nplease report it as a bug, giving the OS and problem revision.\n\n=item *\n\n--early-fixup file\n\n=item *\n\n--late-fixup file\n\nSpecify a file containing a patch or other fixup for the source code. The\naction to take depends on the first line of the fixup file\n\n=over 4\n\n=item *\n\nC<#!perl>\n\nIf the first line starts C<#!perl> then the file is run using C<$^X>\n\n=item *\n\nC<#!/absolute/path>\n\nIf a shebang line is present the file is executed using C<system>\n\n=item *\n\nC<I<filename> =~ /I<pattern>/>\n\n=item *\n\nC<I<filename> !~ /I<pattern>/>\n\nIf I<filename> does not exist then the fixup file's contents are ignored.\nOtherwise, for C<=~>, if it contains a line matching I<pattern>, then the\nfile is fed to C<patch -p1> on standard input. For C<=~>, the patch is\napplied if no lines match the pattern.\n\nAs the empty pattern in Perl is a special case (it matches the most recent\nsuccessful match) which is not useful here, the treatment of an empty pattern\nis special-cased. C<I<filename> =~ //> applies the patch if filename is\npresent. C<I<filename> !~ //> applies the patch if filename missing. This\nmakes it easy to unconditionally apply patches to files, and to use a patch\nas a way of creating a new file.\n\n=item *\n\nOtherwise, the file is assumed to be a patch, and always applied.\n\n=back\n\nI<early-fixup>s are applied before F<./Configure> is run. I<late-fixup>s are\napplied just after F<./Configure> is run.\n\nThese options can be specified more than once. I<file> is actually expanded\nas a glob pattern. Globs that do not match are errors, as are missing files.\n\n=item *\n\n--no-clean\n\nTell F<bisect-runner.pl> not to clean up after the build. This allows one\nto use F<bisect-runner.pl> to build the current particular perl revision for\ninteractive testing, or for debugging F<bisect-runner.pl>.\n\nPassing this to F<bisect.pl> will likely cause the bisect to fail badly.\n\n=item *\n\n--validate\n\nTest that all stable (.0) revisions can be built. By default, attempts to\nbuild I<blead>, then tagged stable releases in reverse order down to\nI<perl-5.002> (or I<perl5.005> on a case insensitive file system). Stops at\nthe first failure, without cleaning the checkout. Use I<--start> to specify\nthe earliest revision to test, I<--end> to specify the most recent. Useful\nfor validating a new OS/CPU/compiler combination. For example\n\n    ../perl/Porting/bisect.pl --validate -le 'print \"Hello from $]\"'\n\nIf no testcase is specified, the default is to use F<t/TEST> to run\nF<t/base/*.t>\n\n=item *\n\n--check-args\n\nValidate the options and arguments, and exit silently if they are valid.\n\n=item *\n\n--check-shebang\n\nValidate that the test case isn't an executable file with a\nC<#!/usr/bin/perl> line (or similar). As F<bisect-runner.pl> does B<not>\nautomatically prepend C<./perl> to the test case, a I<#!> line specifying an\nexternal F<perl> binary will cause the test case to always run with I<that>\nF<perl>, not the F<perl> built by the bisect runner. Likely this is not what\nyou wanted. If your test case is actually a wrapper script to run other\ncommands, you should run it with an explicit interpreter, to be clear. For\nexample, instead of C<../perl/Porting/bisect.pl ~/test/testcase.pl> you'd\nrun C<../perl/Porting/bisect.pl /usr/bin/perl ~/test/testcase.pl>\n\n=item *\n\n--gold\n\nRevision to use when checking out known-good recent versions of files,\nsuch as F<makedepend.SH>. F<bisect-runner.pl> defaults this to I<blead>,\nbut F<bisect.pl> will default it to the most recent stable release.\n\n=item *\n\n--usage\n\n=item *\n\n--help\n\n=item *\n\n-?\n\nDisplay the usage information and exit.\n\n=back\n\n=cut\n\n# Ensure we always exit with 255, to cause git bisect to abort.\nsub croak_255 {\n    my $message = join '', @_;\n    if ($message =~ /\\n\\z/) {\n        print STDERR $message;\n    } else {\n        my (undef, $file, $line) = caller 1;\n        print STDERR \"@_ at $file line $line\\n\";\n    }\n    exit 255;\n}\n\nsub die_255 {\n    croak_255(@_);\n}\n\ndie_255(\"$0: Can't build $target\")\n    if defined $target && !grep {@targets} $target;\n\nforeach my $phase (qw(early late)) {\n    next unless $options{\"$phase-fixup\"};\n    my $bail_out;\n    require File::Glob;\n    my @expanded;\n    foreach my $glob (@{$options{\"$phase-fixup\"}}) {\n        my @got = File::Glob::bsd_glob($glob);\n        push @expanded, @got ? @got : $glob;\n    }\n    @expanded = sort @expanded;\n    $options{\"$phase-fixup\"} = \\@expanded;\n    foreach (@expanded) {\n        unless (-f $_) {\n            print STDERR \"$phase-fixup '$_' is not a readable file\\n\";\n            ++$bail_out;\n        }\n    }\n    exit 255 if $bail_out;\n}\n\nunless (exists $defines{cc}) {\n    # If it fails, the heuristic of 63f9ec3008baf7d6 is noisy, and hence\n    # confusing.\n    # FIXME - really it should be replaced with a proper test of\n    # \"can we build something?\" and a helpful diagnostic if we can't.\n    # For now, simply move it here.\n    $defines{cc} = (`ccache -V`, $?) ? 'cc' : 'ccache cc';\n}\n\nmy $j = $options{jobs} ? \"-j$options{jobs}\" : '';\n\nif (exists $options{make}) {\n    if (!exists $defines{make}) {\n        $defines{make} = $options{make};\n    }\n} else {\n    $options{make} = 'make';\n}\n\n# Sadly, however hard we try, I don't think that it will be possible to build\n# modules in ext/ on x86_64 Linux before commit e1666bf5602ae794 on 1999/12/29,\n# which updated to MakeMaker 3.7, which changed from using a hard coded ld\n# in the Makefile to $(LD). On x86_64 Linux the \"linker\" is gcc.\n\nsub open_or_die {\n    my $file = shift;\n    my $mode = @_ ? shift : '<';\n    open my $fh, $mode, $file or croak_255(\"Can't open $file: $!\");\n    ${*$fh{SCALAR}} = $file;\n    return $fh;\n}\n\nsub close_or_die {\n    my $fh = shift;\n    return if close $fh;\n    croak_255(\"Can't close: $!\") unless ref $fh eq 'GLOB';\n    croak_255(\"Can't close ${*$fh{SCALAR}}: $!\");\n}\n\nsub system_or_die {\n    my $command = '</dev/null ' . shift;\n    system($command) and croak_255(\"'$command' failed, \\$!=$!, \\$?=$?\");\n}\n\nsub run_with_options {\n    my $options = shift;\n    my $name = $options->{name};\n    $name = \"@_\" unless defined $name;\n\n    my $setgrp = $options->{setpgrp};\n    if ($options->{timeout}) {\n        # Unless you explicitly disabled it on the commandline, set it:\n        $setgrp = 1 unless defined $setgrp;\n    }\n    my $pid = fork;\n    die_255(\"Can't fork: $!\") unless defined $pid;\n    if (!$pid) {\n        if (exists $options->{stdin}) {\n            open STDIN, '<', $options->{stdin}\n              or die \"Can't open STDIN from $options->{stdin}: $!\";\n        }\n        if ($setgrp) {\n            setpgrp 0, 0\n                or die \"Can't setpgrp 0, 0: $!\";\n        }\n        { exec @_ };\n        die_255(\"Failed to start $name: $!\");\n    }\n    my $start;\n    if ($options->{timeout}) {\n        require Errno;\n        require POSIX;\n        die_255(\"No POSIX::WNOHANG\")\n            unless &POSIX::WNOHANG;\n        $start = time;\n        $SIG{ALRM} = sub {\n            my $victim = $setgrp ? -$pid : $pid;\n            my $delay = 1;\n            kill 'TERM', $victim;\n            waitpid(-1, &POSIX::WNOHANG);\n            while (kill 0, $victim) {\n                sleep $delay;\n                waitpid(-1, &POSIX::WNOHANG);\n                $delay *= 2;\n                if ($delay > 8) {\n                    if (kill 'KILL', $victim) {\n                        print STDERR \"$0: Had to kill 'KILL', $victim\\n\"\n                    } elsif (! $!{ESRCH}) {\n                        print STDERR \"$0: kill 'KILL', $victim failed: $!\\n\";\n                    }\n                    last;\n                }\n            }\n            report_and_exit(0, 'No timeout', 'Timeout', \"when running $name\");\n        };\n        alarm $options->{timeout};\n    }\n    waitpid $pid, 0\n      or die_255(\"wait for $name, pid $pid failed: $!\");\n    alarm 0;\n    if ($options->{timeout}) {\n        my $elapsed = time - $start;\n        if ($elapsed / $options->{timeout} > 0.8) {\n            print STDERR \"$0: Beware, took $elapsed seconds of $options->{timeout} permitted to run $name\\n\";\n        }\n    }\n    return $?;\n}\n\nsub extract_from_file {\n    my ($file, $rx, $default) = @_;\n    my $fh = open_or_die($file);\n    while (<$fh>) {\n\tmy @got = $_ =~ $rx;\n\treturn wantarray ? @got : $got[0]\n\t    if @got;\n    }\n    return $default if defined $default;\n    return;\n}\n\nsub edit_file {\n    my ($file, $munger) = @_;\n    local $/;\n    my $fh = open_or_die($file);\n    my $orig = <$fh>;\n    die_255(\"Can't read $file: $!\") unless defined $orig && close $fh;\n    my $new = $munger->($orig);\n    return if $new eq $orig;\n    $fh = open_or_die($file, '>');\n    print $fh $new or die_255(\"Can't print to $file: $!\");\n    close_or_die($fh);\n}\n\n# AIX supplies a pre-historic patch program, which certainly predates Linux\n# and is probably older than NT. It can't cope with unified diffs. Meanwhile,\n# it's hard enough to get git diff to output context diffs, let alone git show,\n# and nearly all the patches embedded here are unified. So it seems that the\n# path of least resistance is to convert unified diffs to context diffs:\n\nsub process_hunk {\n    my ($from_out, $to_out, $has_from, $has_to, $delete, $add) = @_;\n    ++$$has_from if $delete;\n    ++$$has_to if $add;\n\n    if ($delete && $add) {\n        $$from_out .= \"! $_\\n\" foreach @$delete;\n        $$to_out .= \"! $_\\n\" foreach @$add;\n    } elsif ($delete) {\n        $$from_out .= \"- $_\\n\" foreach @$delete;\n    } elsif ($add) {\n         $$to_out .= \"+ $_\\n\" foreach @$add;\n    }\n}\n\n# This isn't quite general purpose, as it can't cope with\n# '\\ No newline at end of file'\nsub ud2cd {\n    my $diff_in = shift;\n    my $diff_out = '';\n\n    # Stuff before the diff\n    while ($diff_in =~ s/\\A(?!\\*\\*\\* )(?!--- )([^\\n]*\\n?)//ms && length $1) {\n        $diff_out .= $1;\n    }\n\n    if (!length $diff_in) {\n        die_255(\"That didn't seem to be a diff\");\n    }\n\n    if ($diff_in =~ /\\A\\*\\*\\* /ms) {\n        warn \"Seems to be a context diff already\\n\";\n        return $diff_out . $diff_in;\n    }\n\n    # Loop for files\n FILE: while (1) {\n        if ($diff_in =~ s/\\A((?:diff |index )[^\\n]+\\n)//ms) {\n            $diff_out .= $1;\n            next;\n        }\n        if ($diff_in !~ /\\A--- /ms) {\n            # Stuff after the diff;\n            return $diff_out . $diff_in;\n        }\n        $diff_in =~ s/\\A([^\\n]+\\n?)//ms;\n        my $line = $1;\n        die_255(\"Can't parse '$line'\") unless $line =~ s/\\A--- /*** /ms;\n        $diff_out .= $line;\n        $diff_in =~ s/\\A([^\\n]+\\n?)//ms;\n        $line = $1;\n        die_255(\"Can't parse '$line'\") unless $line =~ s/\\A\\+\\+\\+ /--- /ms;\n        $diff_out .= $line;\n\n        # Loop for hunks\n        while (1) {\n            next FILE\n                unless $diff_in =~ s/\\A\\@\\@ (-([0-9]+),([0-9]+) \\+([0-9]+),([0-9]+)) \\@\\@[^\\n]*\\n?//;\n            my ($hunk, $from_start, $from_count, $to_start, $to_count)\n                = ($1, $2, $3, $4, $5);\n            my $from_end = $from_start + $from_count - 1;\n            my $to_end = $to_start + $to_count - 1;\n            my ($from_out, $to_out, $has_from, $has_to, $add, $delete);\n            while (length $diff_in && ($from_count || $to_count)) {\n                die_255(\"Confused in $hunk\")\n                    unless $diff_in =~ s/\\A([^\\n]*)\\n//ms;\n                my $line = $1;\n                $line = ' ' unless length $line;\n                if ($line =~ /^ .*/) {\n                    process_hunk(\\$from_out, \\$to_out, \\$has_from, \\$has_to,\n                                 $delete, $add);\n                    undef $delete;\n                    undef $add;\n                    $from_out .= \" $line\\n\";\n                    $to_out .= \" $line\\n\";\n                    --$from_count;\n                    --$to_count;\n                } elsif ($line =~ /^-(.*)/) {\n                    push @$delete, $1;\n                    --$from_count;\n                } elsif ($line =~ /^\\+(.*)/) {\n                    push @$add, $1;\n                    --$to_count;\n                } else {\n                    die_255(\"Can't parse '$line' as part of hunk $hunk\");\n                }\n            }\n            process_hunk(\\$from_out, \\$to_out, \\$has_from, \\$has_to,\n                         $delete, $add);\n            die_255(\"No lines in hunk $hunk\")\n                unless length $from_out || length $to_out;\n            die_255(\"No changes in hunk $hunk\")\n                unless $has_from || $has_to;\n            $diff_out .= \"***************\\n\";\n            $diff_out .= \"*** $from_start,$from_end ****\\n\";\n            $diff_out .= $from_out if $has_from;\n            $diff_out .= \"--- $to_start,$to_end ----\\n\";\n            $diff_out .= $to_out if $has_to;\n        }\n    }\n}\n\n{\n    my $use_context;\n\n    sub placate_patch_prog {\n        my $patch = shift;\n\n        if (!defined $use_context) {\n            my $version = `patch -v 2>&1`;\n            die_255(\"Can't run `patch -v`, \\$?=$?, bailing out\")\n                unless defined $version;\n            if ($version =~ /Free Software Foundation/) {\n                $use_context = 0;\n            } elsif ($version =~ /Header: patch\\.c,v.*\\blwall\\b/) {\n                # The system patch is older than Linux, and probably older than\n                # Windows NT.\n                $use_context = 1;\n            } elsif ($version =~ /Header: patch\\.c,v.*\\babhinav\\b/) {\n                # Thank you HP. No, we have no idea *which* version this is:\n                # $Header: patch.c,v 76.1.1.2.1.3 2001/12/03 12:24:52 abhinav Exp $\n                $use_context = 1;\n            } else {\n                # Don't know.\n                $use_context = 0;\n            }\n        }\n\n        return $use_context ? ud2cd($patch) : $patch;\n    }\n}\n\nsub apply_patch {\n    my ($patch, $what, $files) = @_;\n    $what = 'patch' unless defined $what;\n    unless (defined $files) {\n        $patch =~ m!^--- [ab]/(\\S+)\\n\\+\\+\\+ [ba]/\\1!sm;\n        $files = \" $1\";\n    }\n    my $patch_to_use = placate_patch_prog($patch);\n    open my $fh, '|-', 'patch', '-p1' or die_255(\"Can't run patch: $!\");\n    print $fh $patch_to_use;\n    return if close $fh;\n    print STDERR \"Patch is <<'EOPATCH'\\n${patch}EOPATCH\\n\";\n    print STDERR \"\\nConverted to a context diff <<'EOCONTEXT'\\n${patch_to_use}EOCONTEXT\\n\"\n        if $patch_to_use ne $patch;\n    die_255(\"Can't $what$files: $?, $!\");\n}\n\nsub apply_commit {\n    my ($commit, @files) = @_;\n    my $patch = `git show $commit @files`;\n    if (!defined $patch) {\n        die_255(\"Can't get commit $commit for @files: $?\") if @files;\n        die_255(\"Can't get commit $commit: $?\");\n    }\n    apply_patch($patch, \"patch $commit\", @files ? \" for @files\" : '');\n}\n\nsub revert_commit {\n    my ($commit, @files) = @_;\n    my $patch = `git show -R $commit @files`;\n    if (!defined $patch) {\n        die_255(\"Can't get revert commit $commit for @files: $?\") if @files;\n        die_255(\"Can't get revert commit $commit: $?\");\n    }\n    apply_patch($patch, \"revert $commit\", @files ? \" for @files\" : '');\n}\n\nsub checkout_file {\n    my ($file, $commit) = @_;\n    $commit ||= $options{gold} || 'blead';\n    system \"git show $commit:$file > $file </dev/null\"\n        and die_255(\"Could not extract $file at revision $commit\");\n}\n\nsub check_shebang {\n    my $file = shift;\n    return unless -e $file;\n    my $fh = open_or_die($file);\n    my $line = <$fh>;\n    return if $line =~ $run_with_our_perl;\n    if (!-x $file) {\n        die_255(\"$file is not executable.\nsystem($file, ...) is always going to fail.\n\nBailing out\");\n    }\n    return unless $line =~ m{\\A#!(/\\S+/perl\\S*)\\s};\n    die_255(\"$file will always be run by $1\nIt won't be tested by the ./perl we build.\nIf you intended to run it with that perl binary, please change your\ntest case to\n\n    $1 @ARGV\n\nIf you intended to test it with the ./perl we build, please change your\ntest case to\n\n    ./perl -Ilib @ARGV\n\n[You may also need to add -- before ./perl to prevent that -Ilib as being\nparsed as an argument to bisect.pl]\n\nBailing out\");\n}\n\nsub clean {\n    if ($options{clean}) {\n        # Needed, because files that are build products in this checked out\n        # version might be in git in the next desired version.\n        system 'git clean -qdxf </dev/null';\n        # Needed, because at some revisions the build alters checked out files.\n        # (eg pod/perlapi.pod). Also undoes any changes to makedepend.SH\n        system 'git reset --hard HEAD </dev/null';\n    }\n}\n\nsub skip {\n    my $reason = shift;\n    clean();\n    warn \"skipping - $reason\";\n    exit 125;\n}\n\nsub report_and_exit {\n    my ($good, $pass, $fail, $desc) = @_;\n\n    clean();\n\n    my $got = ($options{'expect-pass'} ? $good : !$good) ? 'good' : 'bad';\n    if ($good) {\n        print \"$got - $pass $desc\\n\";\n    } else {\n        print \"$got - $fail $desc\\n\";\n    }\n\n    exit($got eq 'bad');\n}\n\nsub run_report_and_exit {\n    my $ret = run_with_options({setprgp => $options{setpgrp},\n                                timeout => $options{timeout},\n                               }, @_);\n    $ret &= 0xff if $options{crash};\n    report_and_exit(!$ret, 'zero exit from', 'non-zero exit from', \"@_\");\n}\n\nsub match_and_exit {\n    my ($target, @globs) = @_;\n    my $matches = 0;\n    my $re = qr/$match/;\n    my @files;\n\n    if (@globs) {\n        require File::Glob;\n        foreach (sort map { File::Glob::bsd_glob($_)} @globs) {\n            if (!-f $_ || !-r _) {\n                warn \"Skipping matching '$_' as it is not a readable file\\n\";\n            } else {\n                push @files, $_;\n            }\n        }\n    } else {\n        local $/ = \"\\0\";\n        @files = defined $target ? `git ls-files -o -z`: `git ls-files -z`;\n        chomp @files;\n    }\n\n    foreach my $file (@files) {\n        my $fh = open_or_die($file);\n        while (<$fh>) {\n            if ($_ =~ $re) {\n                ++$matches;\n                if (/[^[:^cntrl:]\\h\\v]/) { # Matches non-spacing non-C1 controls\n                    print \"Binary file $file matches\\n\";\n                } else {\n                    $_ .= \"\\n\" unless /\\n\\z/;\n                    print \"$file: $_\";\n                }\n            }\n        }\n        close_or_die($fh);\n    }\n    report_and_exit($matches,\n                    $matches == 1 ? '1 match for' : \"$matches matches for\",\n                    'no matches for', $match);\n}\n\n# Not going to assume that system perl is yet new enough to have autodie\nsystem_or_die('git clean -dxf');\n\nif (!defined $target) {\n    match_and_exit(undef, @ARGV) if $match;\n    $target = 'test_prep';\n} elsif ($target eq 'none') {\n    match_and_exit(undef, @ARGV) if $match;\n    run_report_and_exit(@ARGV);\n}\n\nskip('no Configure - is this the //depot/perlext/Compiler branch?')\n    unless -f 'Configure';\n\nmy $case_insensitive;\n{\n    my ($dev_C, $ino_C) = stat 'Configure';\n    die_255(\"Could not stat Configure: $!\") unless defined $dev_C;\n    my ($dev_c, $ino_c) = stat 'configure';\n    ++$case_insensitive\n        if defined $dev_c && $dev_C == $dev_c && $ino_C == $ino_c;\n}\n\n# This changes to PERL_VERSION in 4d8076ea25903dcb in 1999\nmy $major\n    = extract_from_file('patchlevel.h',\n\t\t\tqr/^#define\\s+(?:PERL_VERSION|PATCHLEVEL)\\s+(\\d+)\\s/,\n\t\t\t0);\n\nmy $unfixable_db_file;\n\nif ($major < 10\n    && !extract_from_file('ext/DB_File/DB_File.xs',\n                          qr!^#else /\\* Berkeley DB Version > 2 \\*/$!)) {\n    # This DB_File.xs is really too old to patch up.\n    # Skip DB_File, unless we're invoked with an explicit -Unoextensions\n    if (!exists $defines{noextensions}) {\n        $defines{noextensions} = 'DB_File';\n    } elsif (defined $defines{noextensions}) {\n        $defines{noextensions} .= ' DB_File';\n    }\n    ++$unfixable_db_file;\n}\n\npatch_Configure();\npatch_hints();\nif ($options{'all-fixups'}) {\n    patch_SH();\n    patch_C();\n    patch_ext();\n}\napply_fixups($options{'early-fixup'});\n\n# if Encode is not needed for the test, you can speed up the bisect by\n# excluding it from the runs with -Dnoextensions=Encode\n# ccache is an easy win. Remove it if it causes problems.\n# Commit 1cfa4ec74d4933da adds ignore_versioned_solibs to Configure, and sets it\n# to true in hints/linux.sh\n# On dromedary, from that point on, Configure (by default) fails to find any\n# libraries, because it scans /usr/local/lib /lib /usr/lib, which only contain\n# versioned libraries. Without -lm, the build fails.\n# Telling /usr/local/lib64 /lib64 /usr/lib64 works from that commit onwards,\n# until commit faae14e6e968e1c0 adds it to the hints.\n# However, prior to 1cfa4ec74d4933da telling Configure the truth doesn't work,\n# because it will spot versioned libraries, pass them to the compiler, and then\n# bail out pretty early on. Configure won't let us override libswanted, but it\n# will let us override the entire libs list.\n\nforeach (@{$options{A}}) {\n    push @paths, $1 if /^libpth=(.*)/s;\n}\n\nunless (extract_from_file('Configure', 'ignore_versioned_solibs')) {\n    # Before 1cfa4ec74d4933da, so force the libs list.\n\n    my @libs;\n    # This is the current libswanted list from Configure, less the libs removed\n    # by current hints/linux.sh\n    foreach my $lib (qw(sfio socket inet nsl nm ndbm gdbm dbm db malloc dl\n\t\t\tld sun m crypt sec util c cposix posix ucb BSD)) {\n\tforeach my $dir (@paths) {\n            # Note the wonderful consistency of dot-or-not in the config vars:\n            next unless -f \"$dir/lib$lib.$Config{dlext}\"\n                || -f \"$dir/lib$lib$Config{lib_ext}\";\n\t    push @libs, \"-l$lib\";\n\t    last;\n\t}\n    }\n    $defines{libs} = \\@libs unless exists $defines{libs};\n}\n\n$defines{usenm} = undef\n    if $major < 2 && !exists $defines{usenm};\n\nmy ($missing, $created_dirs);\n($missing, $created_dirs) = force_manifest()\n    if $options{'force-manifest'};\n\nmy @ARGS = '-dEs';\nforeach my $key (sort keys %defines) {\n    my $val = $defines{$key};\n    if (ref $val) {\n        push @ARGS, \"-D$key=@$val\";\n    } elsif (!defined $val) {\n        push @ARGS, \"-U$key\";\n    } elsif (!length $val) {\n        push @ARGS, \"-D$key\";\n    } else {\n        $val = \"\" if $val eq \"\\0\";\n        push @ARGS, \"-D$key=$val\";\n    }\n}\npush @ARGS, map {\"-A$_\"} @{$options{A}};\n\nmy $prefix;\n\n# Testing a module? We need to install perl/cpan modules to a temp dir\nif ($options{module} || $options{'with-module'} || $options{'test-module'})\n{\n  $prefix = tempdir(CLEANUP => 1);\n\n  push @ARGS, \"-Dprefix=$prefix\";\n  push @ARGS, \"-Uversiononly\", \"-Dinstallusrbinperl=n\";\n}\n\n# If a file in MANIFEST is missing, Configure asks if you want to\n# continue (the default being 'n'). With stdin closed or /dev/null,\n# it exits immediately and the check for config.sh below will skip.\n# Without redirecting stdin, the commands called will attempt to read from\n# stdin (and thus effectively hang)\nrun_with_options({stdin => '/dev/null', name => 'Configure'},\n                 './Configure', @ARGS);\n\npatch_SH() unless $options{'all-fixups'};\napply_fixups($options{'late-fixup'});\n\nif (-f 'config.sh') {\n    # Emulate noextensions if Configure doesn't support it.\n    fake_noextensions()\n        if $major < 10 && $defines{noextensions};\n    if (system './Configure -S') {\n        # See commit v5.23.5-89-g7a4fcb3.  Configure may try to run\n        # ./optdef.sh instead of UU/optdef.sh.  Copying the file is\n        # easier than patching Configure (which mentions optdef.sh multi-\n        # ple times).\n        require File::Copy;\n        File::Copy::copy(\"UU/optdef.sh\", \"./optdef.sh\");\n        system_or_die('./Configure -S');\n    }\n}\n\nif ($target =~ /config\\.s?h/) {\n    match_and_exit($target, @ARGV) if $match && -f $target;\n    report_and_exit(-f $target, 'could build', 'could not build', $target)\n        if $options{'test-build'};\n\n    skip(\"could not build $target\") unless -f $target;\n\n    run_report_and_exit(@ARGV);\n} elsif (!-f 'config.sh') {\n    # Skip if something went wrong with Configure\n\n    skip('could not build config.sh');\n}\n\nforce_manifest_cleanup($missing, $created_dirs)\n        if $missing;\n\nif($options{'force-regen'}\n   && extract_from_file('Makefile', qr/\\bregen_headers\\b/)) {\n    # regen_headers was added in e50aee73b3d4c555, patch.1m for perl5.001\n    # It's not worth faking it for earlier revisions.\n    system_or_die('make regen_headers');\n}\n\nunless ($options{'all-fixups'}) {\n    patch_C();\n    patch_ext();\n}\n\n# Parallel build for miniperl is safe\nsystem \"$options{make} $j miniperl </dev/null\";\n\n# This is the file we expect make to create\nmy $expected_file = $target =~ /^test/ ? 't/perl'\n    : $target eq 'Fcntl' ? \"lib/auto/Fcntl/Fcntl.$Config{so}\"\n    : $target;\n# This is the target we tell make to build in order to get $expected_file\nmy $real_target = $target eq 'Fcntl' ? $expected_file : $target;\n\nif ($target ne 'miniperl') {\n    # Nearly all parallel build issues fixed by 5.10.0. Untrustworthy before that.\n    $j = '' if $major < 10;\n\n    if ($real_target eq 'test_prep') {\n        if ($major < 8) {\n            # test-prep was added in 5.004_01, 3e3baf6d63945cb6.\n            # renamed to test_prep in 2001 in 5fe84fd29acaf55c.\n            # earlier than that, just make test. It will be fast enough.\n            $real_target = extract_from_file('Makefile.SH',\n                                             qr/^(test[-_]prep):/,\n                                             'test');\n        }\n    }\n\n    system \"$options{make} $j $real_target </dev/null\";\n}\n\nmy $expected_file_found = $expected_file =~ /perl$/\n    ? -x $expected_file : -r $expected_file;\n\nif ($expected_file_found && $expected_file eq 't/perl') {\n    # Check that it isn't actually pointing to ../miniperl, which will happen\n    # if the sanity check ./miniperl -Ilib -MExporter -e '<?>' fails, and\n    # Makefile tries to run minitest.\n\n    # Of course, helpfully sometimes it's called ../perl, other times .././perl\n    # and who knows if that list is exhaustive...\n    my ($dev0, $ino0) = stat 't/perl';\n    my ($dev1, $ino1) = stat 'perl';\n    unless (defined $dev0 && defined $dev1 && $dev0 == $dev1 && $ino0 == $ino1) {\n        undef $expected_file_found;\n        my $link = readlink $expected_file;\n        warn \"'t/perl' => '$link', not 'perl'\";\n        die_255(\"Could not realink t/perl: $!\") unless defined $link;\n    }\n}\n\nmy $just_testing = 0;\n\nif ($options{'test-build'}) {\n    report_and_exit($expected_file_found, 'could build', 'could not build',\n                    $real_target);\n} elsif (!$expected_file_found) {\n    skip(\"could not build $real_target\");\n} elsif (my $mod_opt = $options{module} || $options{'with-module'}\n               || ($just_testing++, $options{'test-module'})) {\n  # Testing a cpan module? See if it will install\n  # First we need to install this perl somewhere\n  system_or_die('./installperl');\n\n  my @m = split(',', $mod_opt);\n\n  my $bdir = File::Temp::tempdir(\n    CLEANUP => 1,\n  ) or die $!;\n\n  # Don't ever stop to ask the user for input\n  $ENV{AUTOMATED_TESTING} = 1;\n  $ENV{PERL_MM_USE_DEFAULT} = 1;\n\n  # Don't let these interfere with our cpan installs\n  delete $ENV{PERL_MB_OPT};\n  delete $ENV{PERL_MM_OPT};\n\n  # Make sure we load up our CPAN::MyConfig and then\n  # override the build_dir so we have a fresh one\n  # every build\n  my $cdir = $options{'cpan-config-dir'}\n          || File::Spec->catfile($ENV{HOME},\".cpan\");\n\n  my @cpanshell = (\n    \"$prefix/bin/perl\",\n    \"-I\", \"$cdir\",\n    \"-MCPAN::MyConfig\",\n    \"-MCPAN\",\n    \"-e\",\"\\$CPAN::Config->{build_dir}=q{$bdir};\",\n    \"-e\",\n  );\n\n  for (@m) {\n    s/-/::/g if /-/ and !m|/|;\n  }\n  my $install = join \",\", map { \"'$_'\" } @m;\n  if ($just_testing) {\n    $install = \"test($install)\";\n  } elsif ($options{'no-module-tests'}) {\n    $install = \"notest('install',$install)\";\n  } else {\n    $install = \"install($install)\";\n  }\n  my $last = $m[-1];\n  my $status_method = $just_testing ? 'test' : 'uptodate';\n  my $shellcmd = \"$install; die unless CPAN::Shell->expand(Module => '$last')->$status_method;\";\n\n  if ($options{module} || $options{'test-module'}) {\n    run_report_and_exit(@cpanshell, $shellcmd);\n  } else {\n    my $ret = run_with_options({setprgp => $options{setpgrp},\n                                timeout => $options{timeout},\n                               }, @cpanshell, $shellcmd);\n    $ret &= 0xff if $options{crash};\n\n    # Failed? Give up\n    if ($ret) {\n      report_and_exit(!$ret, 'zero exit from', 'non-zero exit from', \"@_\");\n    }\n  }\n}\n\nmatch_and_exit($real_target, @ARGV) if $match;\n\nif (defined $options{'one-liner'}) {\n    my $exe = $target =~ /^(?:perl$|test)/ ? 'perl' : 'miniperl';\n    unshift @ARGV, map {('-e', $_)} @{$options{'one-liner'}};\n    foreach (qw(c l w)) {\n        unshift @ARGV, \"-$_\" if $options{$_};\n    }\n    unshift @ARGV, \"./$exe\", '-Ilib';\n}\n\nif (-f $ARGV[0]) {\n    my $fh = open_or_die($ARGV[0]);\n    my $line = <$fh>;\n    unshift @ARGV, $1, '-Ilib'\n        if $line =~ $run_with_our_perl;\n}\n\nif ($options{valgrind}) {\n    # Turns out to be too confusing to use an optional argument with the path\n    # of the valgrind binary, as if --valgrind takes an optional argument,\n    # then specifying it as the last option eats the first part of the testcase.\n    # ie this: .../bisect.pl --valgrind testcase\n    # is treated as --valgrind=testcase and as there is no test case given,\n    # it's an invalid commandline, bailing out with the usage message.\n\n    # Currently, the test script can't signal a skip with 125, so anything\n    # non-zero would do. But to keep that option open in future, use 124\n    unshift @ARGV, 'valgrind', '--error-exitcode=124';\n}\n\n# This is what we came here to run:\n\nif (exists $Config{ldlibpthname}) {\n    require Cwd;\n    my $varname = $Config{ldlibpthname};\n    my $cwd = Cwd::getcwd();\n    if (defined $ENV{$varname}) {\n        $ENV{$varname} = $cwd . $Config{path_sep} . $ENV{$varname};\n    } else {\n        $ENV{$varname} = $cwd;\n    }\n}\n\nrun_report_and_exit(@ARGV);\n\n############################################################################\n#\n# Patching, editing and faking routines only below here.\n#\n############################################################################\n\nsub fake_noextensions {\n    edit_file('config.sh', sub {\n                  my @lines = split /\\n/, shift;\n                  my @ext = split /\\s+/, $defines{noextensions};\n                  foreach (@lines) {\n                      next unless /^extensions=/ || /^dynamic_ext/;\n                      foreach my $ext (@ext) {\n                          s/\\b$ext( )?\\b/$1/;\n                      }\n                  }\n                  return join \"\\n\", @lines;\n              });\n}\n\nsub force_manifest {\n    my (@missing, @created_dirs);\n    my $fh = open_or_die('MANIFEST');\n    while (<$fh>) {\n        next unless /^(\\S+)/;\n        # -d is special case needed (at least) between 27332437a2ed1941 and\n        # bf3d9ec563d25054^ inclusive, as manifest contains ext/Thread/Thread\n        push @missing, $1\n            unless -f $1 || -d $1;\n    }\n    close_or_die($fh);\n\n    foreach my $pathname (@missing) {\n        my @parts = split '/', $pathname;\n        my $leaf = pop @parts;\n        my $path = '.';\n        while (@parts) {\n            $path .= '/' . shift @parts;\n            next if -d $path;\n            mkdir $path, 0700 or die_255(\"Can't create $path: $!\");\n            unshift @created_dirs, $path;\n        }\n        $fh = open_or_die($pathname, '>');\n        close_or_die($fh);\n        chmod 0, $pathname or die_255(\"Can't chmod 0 $pathname: $!\");\n    }\n    return \\@missing, \\@created_dirs;\n}\n\nsub force_manifest_cleanup {\n    my ($missing, $created_dirs) = @_;\n    # This is probably way too paranoid:\n    my @errors;\n    require Fcntl;\n    foreach my $file (@$missing) {\n        my (undef, undef, $mode, undef, undef, undef, undef, $size)\n            = stat $file;\n        if (!defined $mode) {\n            push @errors, \"Added file $file has been deleted by Configure\";\n            next;\n        }\n        if (Fcntl::S_IMODE($mode) != 0) {\n            push @errors,\n                sprintf 'Added file %s had mode changed by Configure to %03o',\n                    $file, $mode;\n        }\n        if ($size != 0) {\n            push @errors,\n                \"Added file $file had sized changed by Configure to $size\";\n        }\n        unlink $file or die_255(\"Can't unlink $file: $!\");\n    }\n    foreach my $dir (@$created_dirs) {\n        rmdir $dir or die_255(\"Can't rmdir $dir: $!\");\n    }\n    skip(\"@errors\")\n        if @errors;\n}\n\nsub patch_Configure {\n    if ($major < 1) {\n        if (extract_from_file('Configure',\n                              qr/^\\t\\t\\*=\\*\\) echo \"\\$1\" >> \\$optdef;;$/)) {\n            # This is \"        Spaces now allowed in -D command line options.\",\n            # part of commit ecfc54246c2a6f42\n            apply_patch(<<'EOPATCH');\ndiff --git a/Configure b/Configure\nindex 3d3b38d..78ffe16 100755\n--- a/Configure\n+++ b/Configure\n@@ -652,7 +777,8 @@ while test $# -gt 0; do\n \t\t\techo \"$me: use '-U symbol=', not '-D symbol='.\" >&2\n \t\t\techo \"$me: ignoring -D $1\" >&2\n \t\t\t;;\n-\t\t*=*) echo \"$1\" >> $optdef;;\n+\t\t*=*) echo \"$1\" | \\\n+\t\t\t\tsed -e \"s/'/'\\\"'\\\"'/g\" -e \"s/=\\(.*\\)/='\\1'/\" >> $optdef;;\n \t\t*) echo \"$1='define'\" >> $optdef;;\n \t\tesac\n \t\tshift\nEOPATCH\n        }\n\n        if (extract_from_file('Configure', qr/^if \\$contains 'd_namlen' \\$xinc\\b/)) {\n            # Configure's original simple \"grep\" for d_namlen falls foul of the\n            # approach taken by the glibc headers:\n            # #ifdef _DIRENT_HAVE_D_NAMLEN\n            # # define _D_EXACT_NAMLEN(d) ((d)->d_namlen)\n            #\n            # where _DIRENT_HAVE_D_NAMLEN is not defined on Linux.\n            # This is also part of commit ecfc54246c2a6f42\n            apply_patch(<<'EOPATCH');\ndiff --git a/Configure b/Configure\nindex 3d3b38d..78ffe16 100755\n--- a/Configure\n+++ b/Configure\n@@ -3935,7 +4045,8 @@ $rm -f try.c\n \n : see if the directory entry stores field length\n echo \" \"\n-if $contains 'd_namlen' $xinc >/dev/null 2>&1; then\n+$cppstdin $cppflags $cppminus < \"$xinc\" > try.c\n+if $contains 'd_namlen' try.c >/dev/null 2>&1; then\n \techo \"Good, your directory entry keeps length information in d_namlen.\" >&4\n \tval=\"$define\"\n else\nEOPATCH\n        }\n    }\n\n    if ($major < 2\n        && !extract_from_file('Configure',\n                              qr/Try to guess additional flags to pick up local libraries/)) {\n        my $mips = extract_from_file('Configure',\n                                     qr!(''\\) if (?:\\./)?mips; then)!);\n        # This is part of perl-5.001n. It's needed, to add -L/usr/local/lib to\n        # the ld flags if libraries are found there. It shifts the code to set\n        # up libpth earlier, and then adds the code to add libpth entries to\n        # ldflags\n        # mips was changed to ./mips in ecfc54246c2a6f42, perl5.000 patch.0g\n        apply_patch(sprintf <<'EOPATCH', $mips);\ndiff --git a/Configure b/Configure\nindex 53649d5..0635a6e 100755\n--- a/Configure\n+++ b/Configure\n@@ -2749,6 +2749,52 @@ EOM\n \t;;\n esac\n \n+: Set private lib path\n+case \"$plibpth\" in\n+'') if ./mips; then\n+\t\tplibpth=\"$incpath/usr/lib /usr/local/lib /usr/ccs/lib\"\n+\tfi;;\n+esac\n+case \"$libpth\" in\n+' ') dlist='';;\n+'') dlist=\"$plibpth $glibpth\";;\n+*) dlist=\"$libpth\";;\n+esac\n+\n+: Now check and see which directories actually exist, avoiding duplicates\n+libpth=''\n+for xxx in $dlist\n+do\n+    if $test -d $xxx; then\n+\t\tcase \" $libpth \" in\n+\t\t*\" $xxx \"*) ;;\n+\t\t*) libpth=\"$libpth $xxx\";;\n+\t\tesac\n+    fi\n+done\n+$cat <<'EOM'\n+\n+Some systems have incompatible or broken versions of libraries.  Among\n+the directories listed in the question below, please remove any you\n+know not to be holding relevant libraries, and add any that are needed.\n+Say \"none\" for none.\n+\n+EOM\n+case \"$libpth\" in\n+'') dflt='none';;\n+*)\n+\tset X $libpth\n+\tshift\n+\tdflt=${1+\"$@\"}\n+\t;;\n+esac\n+rp=\"Directories to use for library searches?\"\n+. ./myread\n+case \"$ans\" in\n+none) libpth=' ';;\n+*) libpth=\"$ans\";;\n+esac\n+\n : flags used in final linking phase\n case \"$ldflags\" in\n '') if ./venix; then\n@@ -2765,6 +2811,23 @@ case \"$ldflags\" in\n \t;;\n *) dflt=\"$ldflags\";;\n esac\n+\n+: Possible local library directories to search.\n+loclibpth=\"/usr/local/lib /opt/local/lib /usr/gnu/lib\"\n+loclibpth=\"$loclibpth /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib\"\n+\n+: Try to guess additional flags to pick up local libraries.\n+for thislibdir in $libpth; do\n+\tcase \" $loclibpth \" in\n+\t*\" $thislibdir \"*)\n+\t\tcase \"$dflt \" in \n+\t\t\"-L$thislibdir \") ;;\n+\t\t*)  dflt=\"$dflt -L$thislibdir\" ;;\n+\t\tesac\n+\t\t;;\n+\tesac\n+done\n+\n echo \" \"\n rp=\"Any additional ld flags (NOT including libraries)?\"\n . ./myread\n@@ -2828,52 +2891,6 @@ n) echo \"OK, that should do.\";;\n esac\n $rm -f try try.* core\n \n-: Set private lib path\n-case \"$plibpth\" in\n-%s\n-\t\tplibpth=\"$incpath/usr/lib /usr/local/lib /usr/ccs/lib\"\n-\tfi;;\n-esac\n-case \"$libpth\" in\n-' ') dlist='';;\n-'') dlist=\"$plibpth $glibpth\";;\n-*) dlist=\"$libpth\";;\n-esac\n-\n-: Now check and see which directories actually exist, avoiding duplicates\n-libpth=''\n-for xxx in $dlist\n-do\n-    if $test -d $xxx; then\n-\t\tcase \" $libpth \" in\n-\t\t*\" $xxx \"*) ;;\n-\t\t*) libpth=\"$libpth $xxx\";;\n-\t\tesac\n-    fi\n-done\n-$cat <<'EOM'\n-\n-Some systems have incompatible or broken versions of libraries.  Among\n-the directories listed in the question below, please remove any you\n-know not to be holding relevant libraries, and add any that are needed.\n-Say \"none\" for none.\n-\n-EOM\n-case \"$libpth\" in\n-'') dflt='none';;\n-*)\n-\tset X $libpth\n-\tshift\n-\tdflt=${1+\"$@\"}\n-\t;;\n-esac\n-rp=\"Directories to use for library searches?\"\n-. ./myread\n-case \"$ans\" in\n-none) libpth=' ';;\n-*) libpth=\"$ans\";;\n-esac\n-\n : compute shared library extension\n case \"$so\" in\n '')\nEOPATCH\n    }\n\n    if ($major == 4 && extract_from_file('Configure', qr/^d_gethbynam=/)) {\n        # Fixes a bug introduced in 4599a1dedd47b916\n        apply_commit('3cbc818d1d0ac470');\n    }\n\n    if ($major == 4 && extract_from_file('Configure',\n                                         qr/gethbadd_addr_type=`echo \\$gethbadd_addr_type/)) {\n        # Fixes a bug introduced in 3fd537d4b944bc7a\n        apply_commit('6ff9219da6cf8cfd');\n    }\n\n    if ($major == 4 && extract_from_file('Configure',\n                                         qr/^pthreads_created_joinable=/)) {\n        # Fix for bug introduced in 52e1cb5ebf5e5a8c\n        # Part of commit ce637636a41b2fef\n        edit_file('Configure', sub {\n                      my $code = shift;\n                      $code =~ s{^pthreads_created_joinable=''}\n                                {d_pthreads_created_joinable=''}ms\n                                    or die_255(\"Substitution failed\");\n                      $code =~ s{^pthreads_created_joinable='\\$pthreads_created_joinable'}\n                                {d_pthreads_created_joinable='\\$d_pthreads_created_joinable'}ms\n                           or die_255(\"Substitution failed\");\n                      return $code;\n                  });\n    }\n\n    if ($major < 5 && extract_from_file('Configure',\n                                        qr!if \\$cc \\$ccflags try\\.c -o try >/dev/null 2>&1; then!)) {\n        # Analogous to the more general fix of dfe9444ca7881e71\n        # Without this flags such as -m64 may not be passed to this compile,\n        # which results in a byteorder of '1234' instead of '12345678', which\n        # can then cause crashes.\n\n        if (extract_from_file('Configure', qr/xxx_prompt=y/)) {\n            # 8e07c86ebc651fe9 or later\n            # (\"This is my patch  patch.1n  for perl5.001.\")\n            apply_patch(<<'EOPATCH');\ndiff --git a/Configure b/Configure\nindex 62249dd..c5c384e 100755\n--- a/Configure\n+++ b/Configure\n@@ -8247,7 +8247,7 @@ main()\n }\n EOCP\n \txxx_prompt=y\n-\tif $cc $ccflags try.c -o try >/dev/null 2>&1 && ./try > /dev/null; then\n+\tif $cc $ccflags $ldflags try.c -o try >/dev/null 2>&1 && ./try > /dev/null; then\n \t\tdflt=`./try`\n \t\tcase \"$dflt\" in\n \t\t[1-4][1-4][1-4][1-4]|12345678|87654321)\nEOPATCH\n        } else {\n            apply_patch(<<'EOPATCH');\ndiff --git a/Configure b/Configure\nindex 53649d5..f1cd64a 100755\n--- a/Configure\n+++ b/Configure\n@@ -6362,7 +6362,7 @@ main()\n \tprintf(\"\\n\");\n }\n EOCP\n-\tif $cc $ccflags try.c -o try >/dev/null 2>&1 ; then\n+\tif $cc $ccflags $ldflags try.c -o try >/dev/null 2>&1 ; then\n \t\tdflt=`./try`\n \t\tcase \"$dflt\" in\n \t\t????|????????) echo \"(The test program ran ok.)\";;\nEOPATCH\n        }\n    }\n\n    if ($major < 6 && !extract_from_file('Configure',\n                                         qr!^\\t-A\\)$!)) {\n        # This adds the -A option to Configure, which is incredibly useful\n        # Effectively this is commits 02e93a22d20fc9a5, 5f83a3e9d818c3ad,\n        # bde6b06b2c493fef, f7c3111703e46e0c and 2 lines of trailing whitespace\n        # removed by 613d6c3e99b9decc, but applied at slightly different\n        # locations to ensure a clean patch back to 5.000\n        # Note, if considering patching to the intermediate revisions to fix\n        # bugs in -A handling, f7c3111703e46e0c is from 2002, and hence\n        # $major == 8\n\n        # To add to the fun, early patches add -K and -O options, and it's not\n        # trivial to get patch to put the C<. ./posthint.sh> in the right place\n        edit_file('Configure', sub {\n                      my $code = shift;\n                      $code =~ s/(optstr = \")([^\"]+\";\\s*# getopt-style specification)/$1A:$2/\n                          or die_255(\"Substitution failed\");\n                      $code =~ s!^(: who configured the system)!\ntouch posthint.sh\n. ./posthint.sh\n\n$1!ms\n                          or die_255(\"Substitution failed\");\n                      return $code;\n                  });\n        apply_patch(<<'EOPATCH');\ndiff --git a/Configure b/Configure\nindex 4b55fa6..60c3c64 100755\n--- a/Configure\n+++ b/Configure\n@@ -1150,6 +1150,7 @@ set X `for arg in \"$@\"; do echo \"X$arg\"; done |\n eval \"set $*\"\n shift\n rm -f options.awk\n+rm -f posthint.sh\n \n : set up default values\n fastread=''\n@@ -1172,6 +1173,56 @@ while test $# -gt 0; do\n \tcase \"$1\" in\n \t-d) shift; fastread=yes;;\n \t-e) shift; alldone=cont;;\n+\t-A)\n+\t    shift\n+\t    xxx=''\n+\t    yyy=\"$1\"\n+\t    zzz=''\n+\t    uuu=undef\n+\t    case \"$yyy\" in\n+            *=*) zzz=`echo \"$yyy\"|sed 's!=.*!!'`\n+                 case \"$zzz\" in\n+                 *:*) zzz='' ;;\n+                 *)   xxx=append\n+                      zzz=\" \"`echo \"$yyy\"|sed 's!^[^=]*=!!'`\n+                      yyy=`echo \"$yyy\"|sed 's!=.*!!'` ;;\n+                 esac\n+                 ;;\n+            esac\n+            case \"$xxx\" in\n+            '')  case \"$yyy\" in\n+                 *:*) xxx=`echo \"$yyy\"|sed 's!:.*!!'`\n+                      yyy=`echo \"$yyy\"|sed 's!^[^:]*:!!'`\n+                      zzz=`echo \"$yyy\"|sed 's!^[^=]*=!!'`\n+                      yyy=`echo \"$yyy\"|sed 's!=.*!!'` ;;\n+                 *)   xxx=`echo \"$yyy\"|sed 's!:.*!!'`\n+                      yyy=`echo \"$yyy\"|sed 's!^[^:]*:!!'` ;;\n+                 esac\n+                 ;;\n+            esac\n+\t    case \"$xxx\" in\n+\t    append)\n+\t\techo \"$yyy=\\\"\\${$yyy}$zzz\\\"\"\t>> posthint.sh ;;\n+\t    clear)\n+\t\techo \"$yyy=''\"\t\t\t>> posthint.sh ;;\n+\t    define)\n+\t        case \"$zzz\" in\n+\t\t'') zzz=define ;;\n+\t\tesac\n+\t\techo \"$yyy='$zzz'\"\t\t>> posthint.sh ;;\n+\t    eval)\n+\t\techo \"eval \\\"$yyy=$zzz\\\"\"\t>> posthint.sh ;;\n+\t    prepend)\n+\t\techo \"$yyy=\\\"$zzz\\${$yyy}\\\"\"\t>> posthint.sh ;;\n+\t    undef)\n+\t        case \"$zzz\" in\n+\t\t'') zzz=\"$uuu\" ;;\n+\t\tesac\n+\t\techo \"$yyy=$zzz\"\t\t>> posthint.sh ;;\n+            *)  echo \"$me: unknown -A command '$xxx', ignoring -A $1\" >&2 ;;\n+\t    esac\n+\t    shift\n+\t    ;;\n \t-f)\n \t\tshift\n \t\tcd ..\nEOPATCH\n    }\n\n    if ($major < 8 && $^O eq 'aix') {\n        edit_file('Configure', sub {\n                      my $code = shift;\n                      # Replicate commit a8c676c69574838b\n                      # Whitespace allowed at the ends of /lib/syscalls.exp lines\n                      # and half of commit c6912327ae30e6de\n                      # AIX syscalls.exp scan: the syscall might be marked 32, 3264, or 64\n                      $code =~ s{(\\bsed\\b.*\\bsyscall)(?:\\[0-9\\]\\*)?(\\$.*/lib/syscalls\\.exp)}\n                                {$1 . \"[0-9]*[ \\t]*\" . $2}e;\n                      return $code;\n                  });\n    }\n\n    if ($major < 8 && !extract_from_file('Configure',\n                                         qr/^\\t\\tif test ! -t 0; then$/)) {\n        # Before dfe9444ca7881e71, Configure would refuse to run if stdin was\n        # not a tty. With that commit, the tty requirement was dropped for -de\n        # and -dE\n        # Commit aaeb8e512e8e9e14 dropped the tty requirement for -S\n        # For those older versions, it's probably easiest if we simply remove\n        # the sanity test.\n        edit_file('Configure', sub {\n                      my $code = shift;\n                      $code =~ s/test ! -t 0/test Perl = rules/;\n                      return $code;\n                  });\n    }\n\n    if ($major == 8 || $major == 9) {\n        # Fix symbol detection to that of commit 373dfab3839ca168 if it's any\n        # intermediate version 5129fff43c4fe08c or later, as the intermediate\n        # versions don't work correctly on (at least) Sparc Linux.\n        # 5129fff43c4fe08c adds the first mention of mistrustnm.\n        # 373dfab3839ca168 removes the last mention of lc=\"\"\n        edit_file('Configure', sub {\n                      my $code = shift;\n                      return $code\n                          if $code !~ /\\btc=\"\";/; # 373dfab3839ca168 or later\n                      return $code\n                          if $code !~ /\\bmistrustnm\\b/; # before 5129fff43c4fe08c\n                      my $fixed = <<'EOC';\n\n: is a C symbol defined?\ncsym='tlook=$1;\ncase \"$3\" in\n-v) tf=libc.tmp; tdc=\"\";;\n-a) tf=libc.tmp; tdc=\"[]\";;\n*) tlook=\"^$1\\$\"; tf=libc.list; tdc=\"()\";;\nesac;\ntx=yes;\ncase \"$reuseval-$4\" in\ntrue-) ;;\ntrue-*) tx=no; eval \"tval=\\$$4\"; case \"$tval\" in \"\") tx=yes;; esac;;\nesac;\ncase \"$tx\" in\nyes)\n\ttval=false;\n\tif $test \"$runnm\" = true; then\n\t\tif $contains $tlook $tf >/dev/null 2>&1; then\n\t\t\ttval=true;\n\t\telif $test \"$mistrustnm\" = compile -o \"$mistrustnm\" = run; then\n\t\t\techo \"void *(*(p()))$tdc { extern void *$1$tdc; return &$1; } int main() { if(p()) return(0); else return(1); }\"> try.c;\n\t\t\t$cc -o try $optimize $ccflags $ldflags try.c >/dev/null 2>&1 $libs && tval=true;\n\t\t\t$test \"$mistrustnm\" = run -a -x try && { $run ./try$_exe >/dev/null 2>&1 || tval=false; };\n\t\t\t$rm -f try$_exe try.c core core.* try.core;\n\t\tfi;\n\telse\n\t\techo \"void *(*(p()))$tdc { extern void *$1$tdc; return &$1; } int main() { if(p()) return(0); else return(1); }\"> try.c;\n\t\t$cc -o try $optimize $ccflags $ldflags try.c $libs >/dev/null 2>&1 && tval=true;\n\t\t$rm -f try$_exe try.c;\n\tfi;\n\t;;\n*)\n\tcase \"$tval\" in\n\t$define) tval=true;;\n\t*) tval=false;;\n\tesac;\n\t;;\nesac;\neval \"$2=$tval\"'\n\nEOC\n                      $code =~ s/\\n: is a C symbol defined\\?\\n.*?\\neval \"\\$2=\\$tval\"'\\n\\n/$fixed/sm\n                          or die_255(\"substitution failed\");\n                      return $code;\n                  });\n    }\n\n    if ($major < 10\n        && extract_from_file('Configure', qr/^set malloc\\.h i_malloc$/)) {\n        # This is commit 01d07975f7ef0e7d, trimmed, with $compile inlined as\n        # prior to bd9b35c97ad661cc Configure had the malloc.h test before the\n        # definition of $compile.\n        apply_patch(<<'EOPATCH');\ndiff --git a/Configure b/Configure\nindex 3d2e8b9..6ce7766 100755\n--- a/Configure\n+++ b/Configure\n@@ -6743,5 +6743,22 @@ set d_dosuid\n \n : see if this is a malloc.h system\n-set malloc.h i_malloc\n-eval $inhdr\n+: we want a real compile instead of Inhdr because some systems have a\n+: malloc.h that just gives a compile error saying to use stdlib.h instead\n+echo \" \"\n+$cat >try.c <<EOCP\n+#include <stdlib.h>\n+#include <malloc.h>\n+int main () { return 0; }\n+EOCP\n+set try\n+if $cc $optimize $ccflags $ldflags -o try $* try.c $libs > /dev/null 2>&1; then\n+    echo \"<malloc.h> found.\" >&4\n+    val=\"$define\"\n+else\n+    echo \"<malloc.h> NOT found.\" >&4\n+    val=\"$undef\"\n+fi\n+$rm -f try.c try\n+set i_malloc\n+eval $setvar\n \nEOPATCH\n    }\n}\n\nsub patch_hints {\n    if ($^O eq 'freebsd') {\n        # There are rather too many version-specific FreeBSD hints fixes to\n        # patch individually. Also, more than once the FreeBSD hints file has\n        # been written in what turned out to be a rather non-future-proof style,\n        # with case statements treating the most recent version as the\n        # exception, instead of treating previous versions' behaviour explicitly\n        # and changing the default to cater for the current behaviour. (As\n        # strangely, future versions inherit the current behaviour.)\n        checkout_file('hints/freebsd.sh');\n    } elsif ($^O eq 'darwin') {\n        if ($major < 8) {\n            # We can't build on darwin without some of the data in the hints\n            # file. Probably less surprising to use the earliest version of\n            # hints/darwin.sh and then edit in place just below, than use\n            # blead's version, as that would create a discontinuity at\n            # f556e5b971932902 - before it, hints bugs would be \"fixed\", after\n            # it they'd resurface. This way, we should give the illusion of\n            # monotonic bug fixing.\n            my $faking_it;\n            if (!-f 'hints/darwin.sh') {\n                checkout_file('hints/darwin.sh', 'f556e5b971932902');\n                ++$faking_it;\n            }\n\n            edit_file('hints/darwin.sh', sub {\n                      my $code = shift;\n                      # Part of commit 8f4f83badb7d1ba9, which mostly undoes\n                      # commit 0511a818910f476c.\n                      $code =~ s/^cppflags='-traditional-cpp';$/cppflags=\"\\${cppflags} -no-cpp-precomp\"/m;\n                      # commit 14c11978e9b52e08/803bb6cc74d36a3f\n                      # Without this, code in libperl.bundle links against op.o\n                      # in preference to opmini.o on the linker command line,\n                      # and hence miniperl tries to use File::Glob instead of\n                      # csh\n                      $code =~ s/^(lddlflags=)/ldflags=\"\\${ldflags} -flat_namespace\"\\n$1/m;\n                      # f556e5b971932902 also patches Makefile.SH with some\n                      # special case code to deal with useshrplib for darwin.\n                      # Given that post 5.8.0 the darwin hints default was\n                      # changed to false, and it would be very complex to splice\n                      # in that code in various versions of Makefile.SH back\n                      # to 5.002, lets just turn it off.\n                      $code =~ s/^useshrplib='true'/useshrplib='false'/m\n                          if $faking_it;\n\n                      # Part of commit d235852b65d51c44\n                      # Don't do this on a case sensitive HFS+ partition, as it\n                      # breaks the build for 5.003 and earlier.\n                      if ($case_insensitive\n                          && $code !~ /^firstmakefile=GNUmakefile/) {\n                          $code .= \"\\nfirstmakefile=GNUmakefile;\\n\";\n                      }\n\n                      return $code;\n                  });\n        }\n    } elsif ($^O eq 'netbsd') {\n        if ($major < 6) {\n            # These are part of commit 099685bc64c7dbce\n            edit_file('hints/netbsd.sh', sub {\n                          my $code = shift;\n                          my $fixed = <<'EOC';\ncase \"$osvers\" in\n0.9|0.8*)\n\tusedl=\"$undef\"\n\t;;\n*)\n\tif [ -f /usr/libexec/ld.elf_so ]; then\n\t\td_dlopen=$define\n\t\td_dlerror=$define\n\t\tccdlflags=\"-Wl,-E -Wl,-R${PREFIX}/lib $ccdlflags\"\n\t\tcccdlflags=\"-DPIC -fPIC $cccdlflags\"\n\t\tlddlflags=\"--whole-archive -shared $lddlflags\"\n\telif [ \"`uname -m`\" = \"pmax\" ]; then\n# NetBSD 1.3 and 1.3.1 on pmax shipped an 'old' ld.so, which will not work.\n\t\td_dlopen=$undef\n\telif [ -f /usr/libexec/ld.so ]; then\n\t\td_dlopen=$define\n\t\td_dlerror=$define\n\t\tccdlflags=\"-Wl,-R${PREFIX}/lib $ccdlflags\"\n# we use -fPIC here because -fpic is *NOT* enough for some of the\n# extensions like Tk on some netbsd platforms (the sparc is one)\n\t\tcccdlflags=\"-DPIC -fPIC $cccdlflags\"\n\t\tlddlflags=\"-Bforcearchive -Bshareable $lddlflags\"\n\telse\n\t\td_dlopen=$undef\n\tfi\n\t;;\nesac\nEOC\n                          $code =~ s/^case \"\\$osvers\" in\\n0\\.9\\|0\\.8.*?^esac\\n/$fixed/ms;\n                          return $code;\n                      });\n        }\n    } elsif ($^O eq 'openbsd') {\n        if ($major < 8) {\n            checkout_file('hints/openbsd.sh', '43051805d53a3e4c')\n                unless -f 'hints/openbsd.sh';\n            my $which = extract_from_file('hints/openbsd.sh',\n                                          qr/# from (2\\.8|3\\.1) onwards/,\n                                          '');\n            if ($which eq '') {\n                my $was = extract_from_file('hints/openbsd.sh',\n                                            qr/(lddlflags=\"(?:-Bforcearchive )?-Bshareable)/);\n                # This is commit 154d43cbcf57271c and parts of 5c75dbfa77b0949c\n                # and 29b5585702e5e025\n                apply_patch(sprintf <<'EOPATCH', $was);\ndiff --git a/hints/openbsd.sh b/hints/openbsd.sh\nindex a7d8bf2..5b79709 100644\n--- a/hints/openbsd.sh\n+++ b/hints/openbsd.sh\n@@ -37,7 +37,25 @@ OpenBSD.alpha|OpenBSD.mips|OpenBSD.powerpc|OpenBSD.vax)\n \t# we use -fPIC here because -fpic is *NOT* enough for some of the\n \t# extensions like Tk on some OpenBSD platforms (ie: sparc)\n \tcccdlflags=\"-DPIC -fPIC $cccdlflags\"\n-\t%s $lddlflags\"\n+\tcase \"$osvers\" in\n+\t[01].*|2.[0-7]|2.[0-7].*)\n+\t\tlddlflags=\"-Bshareable $lddlflags\"\n+\t\t;;\n+\t2.[8-9]|3.0)\n+\t\tld=${cc:-cc}\n+\t\tlddlflags=\"-shared -fPIC $lddlflags\"\n+\t\t;;\n+\t*) # from 3.1 onwards\n+\t\tld=${cc:-cc}\n+\t\tlddlflags=\"-shared -fPIC $lddlflags\"\n+\t\tlibswanted=`echo $libswanted | sed 's/ dl / /'`\n+\t\t;;\n+\tesac\n+\n+\t# We need to force ld to export symbols on ELF platforms.\n+\t# Without this, dlopen() is crippled.\n+\tELF=`${cc:-cc} -dM -E - </dev/null | grep __ELF__`\n+\ttest -n \"$ELF\" && ldflags=\"-Wl,-E $ldflags\"\n \t;;\n esac\n \nEOPATCH\n            } elsif ($which eq '2.8') {\n                # This is parts of 5c75dbfa77b0949c and 29b5585702e5e025, and\n                # possibly eb9cd59d45ad2908\n                my $was = extract_from_file('hints/openbsd.sh',\n                                            qr/lddlflags=\"(-shared(?: -fPIC)?) \\$lddlflags\"/);\n\n                apply_patch(sprintf <<'EOPATCH', $was);\n--- a/hints/openbsd.sh\t2011-10-21 17:25:20.000000000 +0200\n+++ b/hints/openbsd.sh\t2011-10-21 16:58:43.000000000 +0200\n@@ -44,11 +44,21 @@\n \t[01].*|2.[0-7]|2.[0-7].*)\n \t\tlddlflags=\"-Bshareable $lddlflags\"\n \t\t;;\n-\t*) # from 2.8 onwards\n+\t2.[8-9]|3.0)\n \t\tld=${cc:-cc}\n-\t\tlddlflags=\"%s $lddlflags\"\n+\t\tlddlflags=\"-shared -fPIC $lddlflags\"\n+\t\t;;\n+\t*) # from 3.1 onwards\n+\t\tld=${cc:-cc}\n+\t\tlddlflags=\"-shared -fPIC $lddlflags\"\n+\t\tlibswanted=`echo $libswanted | sed 's/ dl / /'`\n \t\t;;\n \tesac\n+\n+\t# We need to force ld to export symbols on ELF platforms.\n+\t# Without this, dlopen() is crippled.\n+\tELF=`${cc:-cc} -dM -E - </dev/null | grep __ELF__`\n+\ttest -n \"$ELF\" && ldflags=\"-Wl,-E $ldflags\"\n \t;;\n esac\n \nEOPATCH\n            } elsif ($which eq '3.1'\n                     && !extract_from_file('hints/openbsd.sh',\n                                           qr/We need to force ld to export symbols on ELF platforms/)) {\n                # This is part of 29b5585702e5e025\n                apply_patch(<<'EOPATCH');\ndiff --git a/hints/openbsd.sh b/hints/openbsd.sh\nindex c6b6bc9..4839d04 100644\n--- a/hints/openbsd.sh\n+++ b/hints/openbsd.sh\n@@ -54,6 +54,11 @@ alpha-2.[0-8]|mips-*|vax-*|powerpc-2.[0-7]|m88k-*)\n \t\tlibswanted=`echo $libswanted | sed 's/ dl / /'`\n \t\t;;\n \tesac\n+\n+\t# We need to force ld to export symbols on ELF platforms.\n+\t# Without this, dlopen() is crippled.\n+\tELF=`${cc:-cc} -dM -E - </dev/null | grep __ELF__`\n+\ttest -n \"$ELF\" && ldflags=\"-Wl,-E $ldflags\"\n \t;;\n esac\n \nEOPATCH\n            }\n        }\n    } elsif ($^O eq 'linux') {\n        if ($major < 1) {\n            # sparc linux seems to need the -Dbool=char -DHAS_BOOL part of\n            # perl5.000 patch.0n: [address Configure and build issues]\n            edit_file('hints/linux.sh', sub {\n                          my $code = shift;\n                          $code =~ s!-I/usr/include/bsd!-Dbool=char -DHAS_BOOL!g;\n                          return $code;\n                      });\n        }\n\n        if ($major <= 9) {\n            if (`uname -sm` =~ qr/^Linux sparc/) {\n                if (extract_from_file('hints/linux.sh', qr/sparc-linux/)) {\n                    # Be sure to use -fPIC not -fpic on Linux/SPARC\n                    apply_commit('f6527d0ef0c13ad4');\n                } elsif(!extract_from_file('hints/linux.sh',\n                                           qr/^sparc-linux\\)$/)) {\n                    my $fh = open_or_die('hints/linux.sh', '>>');\n                    print $fh <<'EOT' or die_255($!);\n\ncase \"`uname -m`\" in\nsparc*)\n\tcase \"$cccdlflags\" in\n\t*-fpic*) cccdlflags=\"`echo $cccdlflags|sed 's/-fpic/-fPIC/'`\" ;;\n\t*)\t cccdlflags=\"$cccdlflags -fPIC\" ;;\n\tesac\n\t;;\nesac\nEOT\n                    close_or_die($fh);\n                }\n            }\n        }\n    } elsif ($^O eq 'solaris') {\n        if (($major == 13 || $major == 14)\n            && extract_from_file('hints/solaris_2.sh', qr/getconfldllflags/)) {\n            apply_commit('c80bde4388070c45');\n        }\n    }\n}\n\nsub patch_SH {\n    # Cwd.xs added in commit 0d2079faa739aaa9. Cwd.pm moved to ext/ 8 years\n    # later in commit 403f501d5b37ebf0\n    if ($major > 0 && <*/Cwd/Cwd.xs>) {\n        if ($major < 10\n            && !extract_from_file('Makefile.SH', qr/^extra_dep=''$/)) {\n            # The Makefile.PL for Unicode::Normalize needs\n            # lib/unicore/CombiningClass.pl. Even without a parallel build, we\n            # need a dependency to ensure that it builds. This is a variant of\n            # commit 9f3ef600c170f61e. Putting this for earlier versions gives\n            # us a spot on which to hang the edits below\n            apply_patch(<<'EOPATCH');\ndiff --git a/Makefile.SH b/Makefile.SH\nindex f61d0db..6097954 100644\n--- a/Makefile.SH\n+++ b/Makefile.SH\n@@ -155,10 +155,20 @@ esac\n \n : Prepare dependency lists for Makefile.\n dynamic_list=' '\n+extra_dep=''\n for f in $dynamic_ext; do\n     : the dependency named here will never exist\n       base=`echo \"$f\" | sed 's/.*\\///'`\n-    dynamic_list=\"$dynamic_list lib/auto/$f/$base.$dlext\"\n+    this_target=\"lib/auto/$f/$base.$dlext\"\n+    dynamic_list=\"$dynamic_list $this_target\"\n+\n+    : Parallel makes reveal that we have some interdependencies\n+    case $f in\n+\tMath/BigInt/FastCalc) extra_dep=\"$extra_dep\n+$this_target: lib/auto/List/Util/Util.$dlext\" ;;\n+\tUnicode/Normalize) extra_dep=\"$extra_dep\n+$this_target: lib/unicore/CombiningClass.pl\" ;;\n+    esac\n done\n \n static_list=' '\n@@ -987,2 +997,9 @@ n_dummy $(nonxs_ext):\tminiperl$(EXE_EXT) preplibrary $(DYNALOADER) FORCE\n \t@$(LDLIBPTH) sh ext/util/make_ext nonxs $@ MAKE=$(MAKE) LIBPERL_A=$(LIBPERL)\n+!NO!SUBS!\n+\n+$spitshell >>Makefile <<EOF\n+$extra_dep\n+EOF\n+\n+$spitshell >>Makefile <<'!NO!SUBS!'\n \nEOPATCH\n        }\n\n        if ($major == 15 && $^O !~ /^(linux|darwin|.*bsd)$/\n            && extract_from_file('Makefile.SH', qr/^V.* \\?= /)) {\n            # Remove the GNU-make-ism (which the BSD makes also support, but\n            # most other makes choke on)\n            apply_patch(<<'EOPATCH');\ndiff --git a/Makefile.SH b/Makefile.SH\nindex 94952bd..13e9001 100755\n--- a/Makefile.SH\n+++ b/Makefile.SH\n@@ -338,8 +338,8 @@ linux*|darwin)\n $spitshell >>$Makefile <<!GROK!THIS!\n # If you're going to use valgrind and it can't be invoked as plain valgrind\n # then you'll need to change this, or override it on the make command line.\n-VALGRIND ?= valgrind\n-VG_TEST  ?= ./perl -e 1 2>/dev/null\n+VALGRIND = valgrind\n+VG_TEST  = ./perl -e 1 2>/dev/null\n \n !GROK!THIS!\n \t;;\nEOPATCH\n        }\n\n        if ($major == 11) {\n            if (extract_from_file('patchlevel.h',\n                                  qr/^#include \"unpushed\\.h\"/)) {\n                # I had thought it easier to detect when building one of the 52\n                # commits with the original method of incorporating the git\n                # revision and drop parallel make flags. Commits shown by\n                # git log 46807d8e809cc127^..dcff826f70bf3f64^ ^d4fb0a1f15d1a1c4\n                # However, it's not actually possible to make miniperl for that\n                # configuration as-is, because the file .patchnum is only made\n                # as a side effect of target 'all'\n                # I also don't think that it's \"safe\" to simply run\n                # make_patchnum.sh before the build. We need the proper\n                # dependency rules in the Makefile to *stop* it being run again\n                # at the wrong time.\n                # This range is important because contains the commit that\n                # merges Schwern's y2038 work.\n                apply_patch(<<'EOPATCH');\ndiff --git a/Makefile.SH b/Makefile.SH\nindex 9ad8b6f..106e721 100644\n--- a/Makefile.SH\n+++ b/Makefile.SH\n@@ -540,9 +544,14 @@ sperl.i: perl.c $(h)\n \n .PHONY: all translators utilities make_patchnum\n \n-make_patchnum:\n+make_patchnum: lib/Config_git.pl\n+\n+lib/Config_git.pl: make_patchnum.sh\n \tsh $(shellflags) make_patchnum.sh\n \n+# .patchnum, unpushed.h and lib/Config_git.pl are built by make_patchnum.sh\n+unpushed.h .patchnum: lib/Config_git.pl\n+\n # make sure that we recompile perl.c if .patchnum changes\n perl$(OBJ_EXT): .patchnum unpushed.h\n \nEOPATCH\n            } elsif (-f '.gitignore'\n                     && extract_from_file('.gitignore', qr/^\\.patchnum$/)) {\n                # 8565263ab8a47cda to 46807d8e809cc127^ inclusive.\n                edit_file('Makefile.SH', sub {\n                              my $code = shift;\n                              $code =~ s/^make_patchnum:\\n/make_patchnum: .patchnum\n\n.sha1: .patchnum\n\n.patchnum: make_patchnum.sh\n/m;\n                              return $code;\n                          });\n            } elsif (-f 'lib/.gitignore'\n                     && extract_from_file('lib/.gitignore',\n                                          qr!^/Config_git.pl!)\n                     && !extract_from_file('Makefile.SH',\n                                        qr/^uudmap\\.h.*:bitcount.h$/)) {\n                # Between commits and dcff826f70bf3f64 and 0f13ebd5d71f8177^\n                edit_file('Makefile.SH', sub {\n                              my $code = shift;\n                              # Bug introduced by 344af494c35a9f0f\n                              # fixed in 0f13ebd5d71f8177\n                              $code =~ s{^(pod/perlapi\\.pod) (pod/perlintern\\.pod): }\n                                        {$1: $2\\n\\n$2: }m;\n                              # Bug introduced by efa50c51e3301a2c\n                              # fixed in 0f13ebd5d71f8177\n                              $code =~ s{^(uudmap\\.h) (bitcount\\.h): }\n                                        {$1: $2\\n\\n$2: }m;\n\n                              # The rats nest of getting git_version.h correct\n\n                              if ($code =~ s{git_version\\.h: stock_git_version\\.h\n\\tcp stock_git_version\\.h git_version\\.h}\n                                            {}m) {\n                                  # before 486cd780047ff224\n\n                                  # We probably can't build between\n                                  # 953f6acfa20ec275^ and 8565263ab8a47cda\n                                  # inclusive, but all commits in that range\n                                  # relate to getting make_patchnum.sh working,\n                                  # so it is extremely unlikely to be an\n                                  # interesting bisect target. They will skip.\n\n                                  # No, don't spawn a submake if\n                                  # make_patchnum.sh or make_patchnum.pl fails\n                                  $code =~ s{\\|\\| \\$\\(MAKE\\) miniperl.*}\n                                            {}m;\n                                  $code =~ s{^\\t(sh.*make_patchnum\\.sh.*)}\n                                            {\\t-$1}m;\n\n                                  # Use an external perl to run make_patchnum.pl\n                                  # because miniperl still depends on\n                                  # git_version.h\n                                  $code =~ s{^\\t.*make_patchnum\\.pl}\n                                            {\\t-$^X make_patchnum.pl}m;\n\n\n                                  # \"Truth in advertising\" - running\n                                  # make_patchnum generates 2 files.\n                                  $code =~ s{^make_patchnum:.*}{\nmake_patchnum: lib/Config_git.pl\n\ngit_version.h: lib/Config_git.pl\n\nperlmini\\$(OBJ_EXT): git_version.h\n\nlib/Config_git.pl:}m;\n                              }\n                              # Right, now we've corrected Makefile.SH to\n                              # correctly describe how lib/Config_git.pl and\n                              # git_version.h are made, we need to fix the rest\n\n                              # This emulates commit 2b63e250843b907e\n                              # This might duplicate the rule stating that\n                              # git_version.h depends on lib/Config_git.pl\n                              # This is harmless.\n                              $code =~ s{^(?:lib/Config_git\\.pl )?git_version\\.h: (.* make_patchnum\\.pl.*)}\n                                        {git_version.h: lib/Config_git.pl\n\nlib/Config_git.pl: $1}m;\n\n                              # This emulates commits 0f13ebd5d71f8177 and\n                              # and a04d4598adc57886. It ensures that\n                              # lib/Config_git.pl is built before configpm,\n                              # and that configpm is run exactly once.\n                              $code =~ s{^(\\$\\(.*?\\) )?(\\$\\(CONFIGPOD\\))(: .*? configpm Porting/Glossary)( lib/Config_git\\.pl)?}{\n                                  # If present, other files depend on $(CONFIGPOD)\n                                  ($1 ? \"$1: $2\\n\\n\" : '')\n                                      # Then the rule we found\n                                      . $2 . $3\n                                          # Add dependency if not there\n                                          . ($4 ? $4 : ' lib/Config_git.pl')\n                              }me;\n\n                              return $code;\n                          });\n            }\n        }\n\n        if ($major < 14) {\n            # Commits dc0655f797469c47 and d11a62fe01f2ecb2\n            edit_file('Makefile.SH', sub {\n                          my $code = shift;\n                          foreach my $ext (qw(Encode SDBM_File)) {\n                              next if $code =~ /\\b$ext\\) extra_dep=/s;\n                              $code =~ s!(\\) extra_dep=\"\\$extra_dep\n\\$this_target: .*?\" ;;)\n(    esac\n)!$1\n\t$ext) extra_dep=\"\\$extra_dep\n\\$this_target: lib/auto/Cwd/Cwd.\\$dlext\" ;;\n$2!;\n                          }\n                          return $code;\n                      });\n        }\n    }\n\n    if ($major == 7) {\n        # Remove commits 9fec149bb652b6e9 and 5bab1179608f81d8, which add/amend\n        # rules to automatically run regen scripts that rebuild C headers. These\n        # cause problems because a git checkout doesn't preserve relative file\n        # modification times, hence the regen scripts may fire. This will\n        # obscure whether the repository had the correct generated headers\n        # checked in.\n        # Also, the dependency rules for running the scripts were not correct,\n        # which could cause spurious re-builds on re-running make, and can cause\n        # complete build failures for a parallel make.\n        if (extract_from_file('Makefile.SH',\n                              qr/Writing it this way gives make a big hint to always run opcode\\.pl before/)) {\n            apply_commit('70c6e6715e8fec53');\n        } elsif (extract_from_file('Makefile.SH',\n                                   qr/^opcode\\.h opnames\\.h pp_proto\\.h pp\\.sym: opcode\\.pl$/)) {\n            revert_commit('9fec149bb652b6e9');\n        }\n    }\n\n    if ($^O eq 'aix' && $major >= 11 && $major <= 15\n        && extract_from_file('makedef.pl', qr/^use Config/)) {\n        edit_file('Makefile.SH', sub {\n                      # The AIX part of commit e6807d8ab22b761c\n                      # It's safe to substitute lib/Config.pm for config.sh\n                      # as lib/Config.pm depends on config.sh\n                      # If the tree is post e6807d8ab22b761c, the substitution\n                      # won't match, which is harmless.\n                      my $code = shift;\n                      $code =~ s{^(perl\\.exp:.* )config\\.sh(\\b.*)}\n                                {$1 . '$(CONFIGPM)' . $2}me;\n                      return $code;\n                  });\n    }\n\n    # There was a bug in makedepend.SH which was fixed in version 96a8704c.\n    # Symptom was './makedepend: 1: Syntax error: Unterminated quoted string'\n    # Remove this if you're actually bisecting a problem related to\n    # makedepend.SH\n    # If you do this, you may need to add in code to correct the output of older\n    # makedepends, which don't correctly filter newer gcc output such as\n    # <built-in>\n    checkout_file('makedepend.SH');\n\n    if ($major < 4 && -f 'config.sh'\n        && !extract_from_file('config.sh', qr/^trnl=/)) {\n        # This seems to be necessary to avoid makedepend becoming confused,\n        # and hanging on stdin. Seems that the code after\n        # make shlist || ...here... is never run.\n        edit_file('makedepend.SH', sub {\n                      my $code = shift;\n                      $code =~ s/^trnl='\\$trnl'$/trnl='\\\\n'/m;\n                      return $code;\n                  });\n    }\n}\n\nsub patch_C {\n    # This is ordered by $major, as it's likely that different platforms may\n    # well want to share code.\n\n    if ($major == 2 && extract_from_file('perl.c', qr/^\\tfclose\\(e_fp\\);$/)) {\n        # need to patch perl.c to avoid calling fclose() twice on e_fp when\n        # using -e\n        # This diff is part of commit ab821d7fdc14a438. The second close was\n        # introduced with perl-5.002, commit a5f75d667838e8e7\n        # Might want a6c477ed8d4864e6 too, for the corresponding change to\n        # pp_ctl.c (likely without this, eval will have \"fun\")\n        apply_patch(<<'EOPATCH');\ndiff --git a/perl.c b/perl.c\nindex 03c4d48..3c814a2 100644\n--- a/perl.c\n+++ b/perl.c\n@@ -252,6 +252,7 @@ setuid perl scripts securely.\\n\");\n #ifndef VMS  /* VMS doesn't have environ array */\n     origenviron = environ;\n #endif\n+    e_tmpname = Nullch;\n \n     if (do_undump) {\n \n@@ -405,6 +406,7 @@ setuid perl scripts securely.\\n\");\n     if (e_fp) {\n \tif (Fflush(e_fp) || ferror(e_fp) || fclose(e_fp))\n \t    croak(\"Can't write to temp file for -e: %s\", Strerror(errno));\n+\te_fp = Nullfp;\n \targc++,argv--;\n \tscriptname = e_tmpname;\n     }\n@@ -470,10 +472,10 @@ setuid perl scripts securely.\\n\");\n     curcop->cop_line = 0;\n     curstash = defstash;\n     preprocess = FALSE;\n-    if (e_fp) {\n-\tfclose(e_fp);\n-\te_fp = Nullfp;\n+    if (e_tmpname) {\n \t(void)UNLINK(e_tmpname);\n+\tSafefree(e_tmpname);\n+\te_tmpname = Nullch;\n     }\n \n     /* now that script is parsed, we can modify record separator */\n@@ -1369,7 +1371,7 @@ SV *sv;\n \tscriptname = xfound;\n     }\n \n-    origfilename = savepv(e_fp ? \"-e\" : scriptname);\n+    origfilename = savepv(e_tmpname ? \"-e\" : scriptname);\n     curcop->cop_filegv = gv_fetchfile(origfilename);\n     if (strEQ(origfilename,\"-\"))\n \tscriptname = \"\";\n\nEOPATCH\n    }\n\n    if ($major < 3 && $^O eq 'openbsd'\n        && !extract_from_file('pp_sys.c', qr/BSD_GETPGRP/)) {\n        # Part of commit c3293030fd1b7489\n        apply_patch(<<'EOPATCH');\ndiff --git a/pp_sys.c b/pp_sys.c\nindex 4608a2a..f0c9d1d 100644\n--- a/pp_sys.c\n+++ b/pp_sys.c\n@@ -2903,8 +2903,8 @@ PP(pp_getpgrp)\n \tpid = 0;\n     else\n \tpid = SvIVx(POPs);\n-#ifdef USE_BSDPGRP\n-    value = (I32)getpgrp(pid);\n+#ifdef BSD_GETPGRP\n+    value = (I32)BSD_GETPGRP(pid);\n #else\n     if (pid != 0)\n \tDIE(\"POSIX getpgrp can't take an argument\");\n@@ -2933,8 +2933,8 @@ PP(pp_setpgrp)\n     }\n \n     TAINT_PROPER(\"setpgrp\");\n-#ifdef USE_BSDPGRP\n-    SETi( setpgrp(pid, pgrp) >= 0 );\n+#ifdef BSD_SETPGRP\n+    SETi( BSD_SETPGRP(pid, pgrp) >= 0 );\n #else\n     if ((pgrp != 0) || (pid != 0)) {\n \tDIE(\"POSIX setpgrp can't take an argument\");\nEOPATCH\n    }\n\n    if ($major < 4 && $^O eq 'openbsd') {\n        my $bad;\n        # Need changes from commit a6e633defa583ad5.\n        # Commits c07a80fdfe3926b5 and f82b3d4130164d5f changed the same part\n        # of perl.h\n\n        if (extract_from_file('perl.h',\n                              qr/^#ifdef HAS_GETPGRP2$/)) {\n            $bad = <<'EOBAD';\n***************\n*** 57,71 ****\n  #define TAINT_PROPER(s)\tif (tainting) taint_proper(no_security, s)\n  #define TAINT_ENV()\tif (tainting) taint_env()\n  \n! #ifdef HAS_GETPGRP2\n! #   ifndef HAS_GETPGRP\n! #\tdefine HAS_GETPGRP\n! #   endif\n! #endif\n! \n! #ifdef HAS_SETPGRP2\n! #   ifndef HAS_SETPGRP\n! #\tdefine HAS_SETPGRP\n! #   endif\n  #endif\n  \nEOBAD\n        } elsif (extract_from_file('perl.h',\n                                   qr/Gack, you have one but not both of getpgrp2/)) {\n            $bad = <<'EOBAD';\n***************\n*** 56,76 ****\n  #define TAINT_PROPER(s)\tif (tainting) taint_proper(no_security, s)\n  #define TAINT_ENV()\tif (tainting) taint_env()\n  \n! #if defined(HAS_GETPGRP2) && defined(HAS_SETPGRP2)\n! #   define getpgrp getpgrp2\n! #   define setpgrp setpgrp2\n! #   ifndef HAS_GETPGRP\n! #\tdefine HAS_GETPGRP\n! #   endif\n! #   ifndef HAS_SETPGRP\n! #\tdefine HAS_SETPGRP\n! #   endif\n! #   ifndef USE_BSDPGRP\n! #\tdefine USE_BSDPGRP\n! #   endif\n! #else\n! #   if defined(HAS_GETPGRP2) || defined(HAS_SETPGRP2)\n! \t#include \"Gack, you have one but not both of getpgrp2() and setpgrp2().\"\n! #   endif\n  #endif\n  \nEOBAD\n        } elsif (extract_from_file('perl.h',\n                                   qr/^#ifdef USE_BSDPGRP$/)) {\n            $bad = <<'EOBAD'\n***************\n*** 91,116 ****\n  #define TAINT_PROPER(s)\tif (tainting) taint_proper(no_security, s)\n  #define TAINT_ENV()\tif (tainting) taint_env()\n  \n! #ifdef USE_BSDPGRP\n! #   ifdef HAS_GETPGRP\n! #       define BSD_GETPGRP(pid) getpgrp((pid))\n! #   endif\n! #   ifdef HAS_SETPGRP\n! #       define BSD_SETPGRP(pid, pgrp) setpgrp((pid), (pgrp))\n! #   endif\n! #else\n! #   ifdef HAS_GETPGRP2\n! #       define BSD_GETPGRP(pid) getpgrp2((pid))\n! #       ifndef HAS_GETPGRP\n! #    \t    define HAS_GETPGRP\n! #    \tendif\n! #   endif\n! #   ifdef HAS_SETPGRP2\n! #       define BSD_SETPGRP(pid, pgrp) setpgrp2((pid), (pgrp))\n! #       ifndef HAS_SETPGRP\n! #    \t    define HAS_SETPGRP\n! #    \tendif\n! #   endif\n  #endif\n  \n  #ifndef _TYPES_\t\t/* If types.h defines this it's easy. */\nEOBAD\n        }\n        if ($bad) {\n            apply_patch(<<\"EOPATCH\");\n*** a/perl.h\t2011-10-21 09:46:12.000000000 +0200\n--- b/perl.h\t2011-10-21 09:46:12.000000000 +0200\n$bad--- 91,144 ----\n  #define TAINT_PROPER(s)\tif (tainting) taint_proper(no_security, s)\n  #define TAINT_ENV()\tif (tainting) taint_env()\n  \n! /* XXX All process group stuff is handled in pp_sys.c.  Should these \n!    defines move there?  If so, I could simplify this a lot. --AD  9/96.\n! */\n! /* Process group stuff changed from traditional BSD to POSIX.\n!    perlfunc.pod documents the traditional BSD-style syntax, so we'll\n!    try to preserve that, if possible.\n! */\n! #ifdef HAS_SETPGID\n! #  define BSD_SETPGRP(pid, pgrp)\tsetpgid((pid), (pgrp))\n! #else\n! #  if defined(HAS_SETPGRP) && defined(USE_BSD_SETPGRP)\n! #    define BSD_SETPGRP(pid, pgrp)\tsetpgrp((pid), (pgrp))\n! #  else\n! #    ifdef HAS_SETPGRP2  /* DG/UX */\n! #      define BSD_SETPGRP(pid, pgrp)\tsetpgrp2((pid), (pgrp))\n! #    endif\n! #  endif\n! #endif\n! #if defined(BSD_SETPGRP) && !defined(HAS_SETPGRP)\n! #  define HAS_SETPGRP  /* Well, effectively it does . . . */\n! #endif\n! \n! /* getpgid isn't POSIX, but at least Solaris and Linux have it, and it makes\n!     our life easier :-) so we'll try it.\n! */\n! #ifdef HAS_GETPGID\n! #  define BSD_GETPGRP(pid)\t\tgetpgid((pid))\n! #else\n! #  if defined(HAS_GETPGRP) && defined(USE_BSD_GETPGRP)\n! #    define BSD_GETPGRP(pid)\t\tgetpgrp((pid))\n! #  else\n! #    ifdef HAS_GETPGRP2  /* DG/UX */\n! #      define BSD_GETPGRP(pid)\t\tgetpgrp2((pid))\n! #    endif\n! #  endif\n! #endif\n! #if defined(BSD_GETPGRP) && !defined(HAS_GETPGRP)\n! #  define HAS_GETPGRP  /* Well, effectively it does . . . */\n! #endif\n! \n! /* These are not exact synonyms, since setpgrp() and getpgrp() may \n!    have different behaviors, but perl.h used to define USE_BSDPGRP\n!    (prior to 5.003_05) so some extension might depend on it.\n! */\n! #if defined(USE_BSD_SETPGRP) || defined(USE_BSD_GETPGRP)\n! #  ifndef USE_BSDPGRP\n! #    define USE_BSDPGRP\n! #  endif\n  #endif\n  \n  #ifndef _TYPES_\t\t/* If types.h defines this it's easy. */\nEOPATCH\n        }\n    }\n\n    if ($major < 4 && $^O eq 'hpux'\n        && extract_from_file('sv.c', qr/i = _filbuf\\(/)) {\n            apply_patch(<<'EOPATCH');\ndiff --git a/sv.c b/sv.c\nindex a1f1d60..0a806f1 100644\n--- a/sv.c\n+++ b/sv.c\n@@ -2641,7 +2641,7 @@ I32 append;\n \n \tFILE_cnt(fp) = cnt;\t\t/* deregisterize cnt and ptr */\n \tFILE_ptr(fp) = ptr;\n-\ti = _filbuf(fp);\t\t/* get more characters */\n+\ti = __filbuf(fp);\t\t/* get more characters */\n \tcnt = FILE_cnt(fp);\n \tptr = FILE_ptr(fp);\t\t/* reregisterize cnt and ptr */\n \n\nEOPATCH\n    }\n\n    if ($major == 4 && extract_from_file('scope.c', qr/\\(SV\\*\\)SSPOPINT/)) {\n        # [PATCH] 5.004_04 +MAINT_TRIAL_1 broken when sizeof(int) != sizeof(void)\n        # Fixes a bug introduced in 161b7d1635bc830b\n        apply_commit('9002cb76ec83ef7f');\n    }\n\n    if ($major == 4 && extract_from_file('av.c', qr/AvARRAY\\(av\\) = 0;/)) {\n        # Fixes a bug introduced in 1393e20655efb4bc\n        apply_commit('e1c148c28bf3335b', 'av.c');\n    }\n\n    if ($major == 4) {\n        my $rest = extract_from_file('perl.c', qr/delimcpy(.*)/);\n        if (defined $rest and $rest !~ /,$/) {\n            # delimcpy added in fc36a67e8855d031, perl.c refactored to use it.\n            # bug introduced in 2a92aaa05aa1acbf, fixed in 8490252049bf42d3\n            # code then moved to util.c in commit 491527d0220de34e\n            apply_patch(<<'EOPATCH');\ndiff --git a/perl.c b/perl.c\nindex 4eb69e3..54bbb00 100644\n--- a/perl.c\n+++ b/perl.c\n@@ -1735,7 +1735,7 @@ SV *sv;\n \t    if (len < sizeof tokenbuf)\n \t\ttokenbuf[len] = '\\0';\n #else\t/* ! (atarist || DOSISH) */\n-\t    s = delimcpy(tokenbuf, tokenbuf + sizeof tokenbuf, s, bufend\n+\t    s = delimcpy(tokenbuf, tokenbuf + sizeof tokenbuf, s, bufend,\n \t\t\t ':',\n \t\t\t &len);\n #endif\t/* ! (atarist || DOSISH) */\nEOPATCH\n        }\n    }\n\n    if ($major == 4 && $^O eq 'linux') {\n        # Whilst this is fixed properly in f0784f6a4c3e45e1 which provides the\n        # Configure probe, it's easier to back out the problematic changes made\n        # in these previous commits.\n\n        # In maint-5.004, the simplest addition is to \"correct\" the file to\n        # use the same pre-processor macros as blead had used. Whilst commit\n        # 9b599b2a63d2324d (reverted below) is described as\n        # [win32] merge change#887 from maintbranch\n        # it uses __sun__ and __svr4__ instead of the __sun and __SVR4 of the\n        # maint branch commit 6cdf74fe31f049dc\n\n        edit_file('doio.c', sub {\n                      my $code = shift;\n                      $code =~ s{defined\\(__sun\\) && defined\\(__SVR4\\)}\n                                {defined(__sun__) && defined(__svr4__)}g;\n                      return $code;\n                  });\n\n        if (extract_from_file('doio.c',\n                              qr!^/\\* XXX REALLY need metaconfig test \\*/$!)) {\n            revert_commit('4682965a1447ea44', 'doio.c');\n        }\n        if (my $token = extract_from_file('doio.c',\n                                          qr!^#if (defined\\(__sun(?:__)?\\)) && defined\\(__svr4__\\) /\\* XXX Need metaconfig test \\*/$!)) {\n            my $patch = `git show -R 9b599b2a63d2324d doio.c`;\n            $patch =~ s/defined\\(__sun__\\)/$token/g;\n            apply_patch($patch);\n        }\n        if (extract_from_file('doio.c',\n                              qr!^/\\* linux \\(and Solaris2\\?\\) uses :$!)) {\n            revert_commit('8490252049bf42d3', 'doio.c');\n        }\n        if (extract_from_file('doio.c',\n                              qr/^\t    unsemds.buf = &semds;$/)) {\n            revert_commit('8e591e46b4c6543e');\n        }\n        if (extract_from_file('doio.c',\n                              qr!^#ifdef __linux__\t/\\* XXX Need metaconfig test \\*/$!)) {\n            # Reverts part of commit 3e3baf6d63945cb6\n            apply_patch(<<'EOPATCH');\ndiff --git b/doio.c a/doio.c\nindex 62b7de9..0d57425 100644\n--- b/doio.c\n+++ a/doio.c\n@@ -1333,9 +1331,6 @@ SV **sp;\n     char *a;\n     I32 id, n, cmd, infosize, getinfo;\n     I32 ret = -1;\n-#ifdef __linux__\t/* XXX Need metaconfig test */\n-    union semun unsemds;\n-#endif\n \n     id = SvIVx(*++mark);\n     n = (optype == OP_SEMCTL) ? SvIVx(*++mark) : 0;\n@@ -1364,29 +1359,11 @@ SV **sp;\n \t    infosize = sizeof(struct semid_ds);\n \telse if (cmd == GETALL || cmd == SETALL)\n \t{\n-#ifdef __linux__\t/* XXX Need metaconfig test */\n-/* linux uses :\n-   int semctl (int semid, int semnun, int cmd, union semun arg)\n-\n-       union semun {\n-            int val;\n-            struct semid_ds *buf;\n-            ushort *array;\n-       };\n-*/\n-            union semun semds;\n-\t    if (semctl(id, 0, IPC_STAT, semds) == -1)\n-#else\n \t    struct semid_ds semds;\n \t    if (semctl(id, 0, IPC_STAT, &semds) == -1)\n-#endif\n \t\treturn -1;\n \t    getinfo = (cmd == GETALL);\n-#ifdef __linux__\t/* XXX Need metaconfig test */\n-\t    infosize = semds.buf->sem_nsems * sizeof(short);\n-#else\n \t    infosize = semds.sem_nsems * sizeof(short);\n-#endif\n \t\t/* \"short\" is technically wrong but much more portable\n \t\t   than guessing about u_?short(_t)? */\n \t}\n@@ -1429,12 +1406,7 @@ SV **sp;\n #endif\n #ifdef HAS_SEM\n     case OP_SEMCTL:\n-#ifdef __linux__\t/* XXX Need metaconfig test */\n-        unsemds.buf = (struct semid_ds *)a;\n-\tret = semctl(id, n, cmd, unsemds);\n-#else\n \tret = semctl(id, n, cmd, (struct semid_ds *)a);\n-#endif\n \tbreak;\n #endif\n #ifdef HAS_SHM\nEOPATCH\n        }\n        # Incorrect prototype added as part of 8ac853655d9b7447, fixed as part\n        # of commit dc45a647708b6c54, with at least one intermediate\n        # modification. Correct prototype for gethostbyaddr has socklen_t\n        # second. Linux has uint32_t first for getnetbyaddr.\n        # Easiest just to remove, instead of attempting more complex patching.\n        # Something similar may be needed on other platforms.\n        edit_file('pp_sys.c', sub {\n                      my $code = shift;\n                      $code =~ s/^    struct hostent \\*(?:PerlSock_)?gethostbyaddr\\([^)]+\\);$//m;\n                      $code =~ s/^    struct netent \\*getnetbyaddr\\([^)]+\\);$//m;\n                      return $code;\n                  });\n    }\n\n    if ($major < 5 && $^O eq 'aix'\n        && !extract_from_file('pp_sys.c',\n                              qr/defined\\(HOST_NOT_FOUND\\) && !defined\\(h_errno\\)/)) {\n        # part of commit dc45a647708b6c54\n        # Andy Dougherty's configuration patches (Config_63-01 up to 04).\n        apply_patch(<<'EOPATCH')\ndiff --git a/pp_sys.c b/pp_sys.c\nindex c2fcb6f..efa39fb 100644\n--- a/pp_sys.c\n+++ b/pp_sys.c\n@@ -54,7 +54,7 @@ extern \"C\" int syscall(unsigned long,...);\n #endif\n #endif\n \n-#ifdef HOST_NOT_FOUND\n+#if defined(HOST_NOT_FOUND) && !defined(h_errno)\n extern int h_errno;\n #endif\n \nEOPATCH\n    }\n\n    if ($major == 5\n        && `git rev-parse HEAD` eq \"22c35a8c2392967a5ba6b5370695be464bd7012c\\n\") {\n        # Commit 22c35a8c2392967a is significant,\n        # \"phase 1 of somewhat major rearrangement of PERL_OBJECT stuff\"\n        # but doesn't build due to 2 simple errors. blead in this broken state\n        # was merged to the cfgperl branch, and then these were immediately\n        # corrected there. cfgperl (with the fixes) was merged back to blead.\n        # The resultant rather twisty maze of commits looks like this:\n\n=begin comment\n\n* | |   commit 137225782c183172f360c827424b9b9f8adbef0e\n|\\ \\ \\  Merge: 22c35a8 2a8ee23\n| |/ /  Author: Gurusamy Sarathy <gsar@cpan.org>\n| | |   Date:   Fri Oct 30 17:38:36 1998 +0000\n| | |\n| | |       integrate cfgperl tweaks into mainline\n| | |\n| | |       p4raw-id: //depot/perl@2144\n| | |\n| * | commit 2a8ee23279873759693fa83eca279355db2b665c\n| | | Author: Jarkko Hietaniemi <jhi@iki.fi>\n| | | Date:   Fri Oct 30 13:27:39 1998 +0000\n| | |\n| | |     There can be multiple yacc/bison errors.\n| | |\n| | |     p4raw-id: //depot/cfgperl@2143\n| | |\n| * | commit 93fb2ac393172fc3e2c14edb20b718309198abbc\n| | | Author: Jarkko Hietaniemi <jhi@iki.fi>\n| | | Date:   Fri Oct 30 13:18:43 1998 +0000\n| | |\n| | |     README.posix-bc update.\n| | |\n| | |     p4raw-id: //depot/cfgperl@2142\n| | |\n| * | commit 4ec43091e8e6657cb260b5e563df30aaa154effe\n| | | Author: Jarkko Hietaniemi <jhi@iki.fi>\n| | | Date:   Fri Oct 30 09:12:59 1998 +0000\n| | |\n| | |     #2133 fallout.\n| | |\n| | |     p4raw-id: //depot/cfgperl@2141\n| | |\n| * |   commit 134ca994cfefe0f613d43505a885e4fc2100b05c\n| |\\ \\  Merge: 7093112 22c35a8\n| |/ /  Author: Jarkko Hietaniemi <jhi@iki.fi>\n|/| |   Date:   Fri Oct 30 08:43:18 1998 +0000\n| | |\n| | |       Integrate from mainperl.\n| | |\n| | |       p4raw-id: //depot/cfgperl@2140\n| | |\n* | | commit 22c35a8c2392967a5ba6b5370695be464bd7012c\n| | | Author: Gurusamy Sarathy <gsar@cpan.org>\n| | | Date:   Fri Oct 30 02:51:39 1998 +0000\n| | |\n| | |     phase 1 of somewhat major rearrangement of PERL_OBJECT stuff\n| | |     (objpp.h is gone, embed.pl now does some of that); objXSUB.h\n| | |     should soon be automated also; the global variables that\n| | |     escaped the PL_foo conversion are now reined in; renamed\n| | |     MAGIC in regcomp.h to REG_MAGIC to avoid collision with the\n| | |     type of same name; duplicated lists of pp_things in various\n| | |     places is now gone; result has only been tested on win32\n| | |\n| | |     p4raw-id: //depot/perl@2133\n\n=end comment\n\n=cut\n\n        # and completely confuses git bisect (and at least me), causing it to\n        # the bisect run to confidently return the wrong answer, an unrelated\n        # commit on the cfgperl branch.\n\n        apply_commit('4ec43091e8e6657c');\n    }\n\n    if ($major == 5\n        && extract_from_file('pp_sys.c', qr/PERL_EFF_ACCESS_R_OK/)\n        && !extract_from_file('pp_sys.c', qr/XXX Configure test needed for eaccess/)) {\n        # Between 5ff3f7a4e03a6b10 and c955f1177b2e311d^\n        # This is the meat of commit c955f1177b2e311d (without the other\n        # indenting changes that would cause a conflict).\n        # Without this 538 revisions won't build on (at least) Linux\n        apply_patch(<<'EOPATCH');\ndiff --git a/pp_sys.c b/pp_sys.c\nindex d60c8dc..867dee4 100644\n--- a/pp_sys.c\n+++ b/pp_sys.c\n@@ -198,9 +198,18 @@ static char zero_but_true[ZBTLEN + 1] = \"0 but true\";\n #   if defined(I_SYS_SECURITY)\n #       include <sys/security.h>\n #   endif\n-#   define PERL_EFF_ACCESS_R_OK(p) (eaccess((p), R_OK, ACC_SELF))\n-#   define PERL_EFF_ACCESS_W_OK(p) (eaccess((p), W_OK, ACC_SELF))\n-#   define PERL_EFF_ACCESS_X_OK(p) (eaccess((p), X_OK, ACC_SELF))\n+    /* XXX Configure test needed for eaccess */\n+#   ifdef ACC_SELF\n+        /* HP SecureWare */\n+#       define PERL_EFF_ACCESS_R_OK(p) (eaccess((p), R_OK, ACC_SELF))\n+#       define PERL_EFF_ACCESS_W_OK(p) (eaccess((p), W_OK, ACC_SELF))\n+#       define PERL_EFF_ACCESS_X_OK(p) (eaccess((p), X_OK, ACC_SELF))\n+#   else\n+        /* SCO */\n+#       define PERL_EFF_ACCESS_R_OK(p) (eaccess((p), R_OK))\n+#       define PERL_EFF_ACCESS_W_OK(p) (eaccess((p), W_OK))\n+#       define PERL_EFF_ACCESS_X_OK(p) (eaccess((p), X_OK))\n+#   endif\n #endif\n \n #if !defined(PERL_EFF_ACCESS_R_OK) && defined(HAS_ACCESSX) && defined(ACC_SELF)\nEOPATCH\n    }\n\n    if ($major == 5\n        && extract_from_file('mg.c', qr/If we're still on top of the stack, pop us off/)\n        && !extract_from_file('mg.c', qr/PL_savestack_ix -= popval/)) {\n        # Fix up commit 455ece5e082708b1:\n        # SSNEW() API for allocating memory on the savestack\n        # Message-Id: <tqemtae338.fsf@puma.genscan.com>\n        # Subject: [PATCH 5.005_51] (was: why SAVEDESTRUCTOR()...)\n        apply_commit('3c8a44569607336e', 'mg.c');\n    }\n\n    if ($major == 5) {\n        if (extract_from_file('doop.c', qr/croak\\(no_modify\\);/)\n            && extract_from_file('doop.c', qr/croak\\(PL_no_modify\\);/)) {\n            # Whilst the log suggests that this would only fix 5 commits, in\n            # practice this area of history is a complete tarpit, and git bisect\n            # gets very confused by the skips in the middle of the back and\n            # forth merging between //depot/perl and //depot/cfgperl\n            apply_commit('6393042b638dafd3');\n        }\n\n        # One error \"fixed\" with another:\n        if (extract_from_file('pp_ctl.c',\n                              qr/\\Qstatic void *docatch_body _((void *o));\\E/)) {\n            apply_commit('5b51e982882955fe');\n        }\n        # Which is then fixed by this:\n        if (extract_from_file('pp_ctl.c',\n                              qr/\\Qstatic void *docatch_body _((valist\\E/)) {\n            apply_commit('47aa779ee4c1a50e');\n        }\n\n        if (extract_from_file('thrdvar.h', qr/PERLVARI\\(Tprotect/)\n            && !extract_from_file('embedvar.h', qr/PL_protect/)) {\n            # Commit 312caa8e97f1c7ee didn't update embedvar.h\n            apply_commit('e0284a306d2de082', 'embedvar.h');\n        }\n    }\n\n    if ($major == 5\n        && extract_from_file('sv.c',\n                             qr/PerlDir_close\\(IoDIRP\\((?:\\(IO\\*\\))?sv\\)\\);/)\n        && !(extract_from_file('toke.c',\n                               qr/\\QIoDIRP(FILTER_DATA(AvFILLp(PL_rsfp_filters))) = NULL\\E/)\n             || extract_from_file('toke.c',\n                                  qr/\\QIoDIRP(datasv) = (DIR*)NULL;\\E/))) {\n        # Commit 93578b34124e8a3b, //depot/perl@3298\n        # close directory handles properly when localized,\n        # tweaked slightly by commit 1236053a2c722e2b,\n        # add test case for change#3298\n        #\n        # The fix is the last part of:\n        #\n        # various fixes for clean build and test on win32; configpm broken,\n        # needed to open myconfig.SH rather than myconfig; sundry adjustments\n        # to bytecode stuff; tweaks to DYNAMIC_ENV_FETCH code to make it\n        # work under win32; getenv_sv() changed to getenv_len() since SVs\n        # aren't visible in the lower echelons; remove bogus exports from\n        # config.sym; PERL_OBJECT-ness for C++ exception support; null out\n        # IoDIRP in filter_del() or sv_free() will attempt to close it\n        #\n        # The changed code is modified subsequently by commit e0c198038146b7a4\n        apply_commit('a6c403648ecd5cc7', 'toke.c');\n    }\n\n    if ($major < 6 && $^O eq 'netbsd'\n        && !extract_from_file('unixish.h',\n                              qr/defined\\(NSIG\\).*defined\\(__NetBSD__\\)/)) {\n        apply_patch(<<'EOPATCH')\ndiff --git a/unixish.h b/unixish.h\nindex 2a6cbcd..eab2de1 100644\n--- a/unixish.h\n+++ b/unixish.h\n@@ -89,7 +89,7 @@\n  */\n /* #define ALTERNATE_SHEBANG \"#!\" / **/\n \n-#if !defined(NSIG) || defined(M_UNIX) || defined(M_XENIX)\n+#if !defined(NSIG) || defined(M_UNIX) || defined(M_XENIX) || defined(__NetBSD__)\n # include <signal.h>\n #endif\n \nEOPATCH\n    }\n\n    if ($major == 7 && $^O eq 'aix' &&\n        extract_from_file('ext/List/Util/Util.xs', qr/PUSHBLOCK/)\n        && !extract_from_file('makedef.pl', qr/^Perl_cxinc/)) {\n        # Need this to get List::Utils 1.03 and later to compile.\n        # 1.03 also expects to call Perl_pp_rand. Commit d3632a54487acc5f\n        # fixes this (for the unthreaded case), but it's not until 1.05,\n        # two days later, that this is fixed properly.\n        apply_commit('cbb96eed3f175499');\n    }\n\n    if (($major >= 7 || $major <= 9) && $^O eq 'openbsd'\n        && `uname -m` eq \"sparc64\\n\"\n        # added in 2000 by commit cb434fcc98ac25f5:\n        && extract_from_file('regexec.c',\n                             qr!/\\* No need to save/restore up to this paren \\*/!)\n        # re-indented in 2006 by commit 95b2444054382532:\n        && extract_from_file('regexec.c', qr/^\\t\\tCURCUR cc;$/)) {\n        # Need to work around a bug in (at least) OpenBSD's 4.6's sparc64 #\n        # compiler [\"gcc (GCC) 3.3.5 (propolice)\"]. Between commits\n        # 3ec562b0bffb8b8b (2002) and 1a4fad37125bac3e^ (2005) the darling thing\n        # fails to compile any code for the statement cc.oldcc = PL_regcc;\n        #\n        # If you refactor the code to \"fix\" that, or force the issue using set\n        # in the debugger, the stack smashing detection code fires on return\n        # from S_regmatch(). Turns out that the compiler doesn't allocate any\n        # (or at least enough) space for cc.\n        #\n        # Restore the \"uninitialised\" value for cc before function exit, and the\n        # stack smashing code is placated.  \"Fix\" 3ec562b0bffb8b8b (which\n        # changes the size of auto variables used elsewhere in S_regmatch), and\n        # the crash is visible back to bc517b45fdfb539b (which also changes\n        # buffer sizes). \"Unfix\" 1a4fad37125bac3e and the crash is visible until\n        # 5b47454deb66294b.  Problem goes away if you compile with -O, or hack\n        # the code as below.\n        #\n        # Hence this turns out to be a bug in (old) gcc. Not a security bug we\n        # still need to fix.\n        apply_patch(<<'EOPATCH');\ndiff --git a/regexec.c b/regexec.c\nindex 900b491..6251a0b 100644\n--- a/regexec.c\n+++ b/regexec.c\n@@ -2958,7 +2958,11 @@ S_regmatch(pTHX_ regnode *prog)\n \t\t\t\tI,I\n  *******************************************************************/\n \tcase CURLYX: {\n-\t\tCURCUR cc;\n+\t    union {\n+\t\tCURCUR hack_cc;\n+\t\tchar hack_buff[sizeof(CURCUR) + 1];\n+\t    } hack;\n+#define cc hack.hack_cc\n \t\tCHECKPOINT cp = PL_savestack_ix;\n \t\t/* No need to save/restore up to this paren */\n \t\tI32 parenfloor = scan->flags;\n@@ -2983,6 +2987,7 @@ S_regmatch(pTHX_ regnode *prog)\n \t\tn = regmatch(PREVOPER(next));\t/* start on the WHILEM */\n \t\tregcpblow(cp);\n \t\tPL_regcc = cc.oldcc;\n+#undef cc\n \t\tsaySAME(n);\n \t    }\n \t    /* NOT REACHED */\nEOPATCH\n}\n\n    if ($major < 8 && $^O eq 'openbsd'\n        && !extract_from_file('perl.h', qr/include <unistd\\.h>/)) {\n        # This is part of commit 3f270f98f9305540, applied at a slightly\n        # different location in perl.h, where the context is stable back to\n        # 5.000\n        apply_patch(<<'EOPATCH');\ndiff --git a/perl.h b/perl.h\nindex 9418b52..b8b1a7c 100644\n--- a/perl.h\n+++ b/perl.h\n@@ -496,6 +496,10 @@ register struct op *Perl_op asm(stringify(OP_IN_REGISTER));\n #   include <sys/param.h>\n #endif\n \n+/* If this causes problems, set i_unistd=undef in the hint file.  */\n+#ifdef I_UNISTD\n+#   include <unistd.h>\n+#endif\n \n /* Use all the \"standard\" definitions? */\n #if defined(STANDARD_C) && defined(I_STDLIB)\nEOPATCH\n    }\n}\n\nsub patch_ext {\n    if (-f 'ext/POSIX/Makefile.PL'\n        && extract_from_file('ext/POSIX/Makefile.PL',\n                             qr/Explicitly avoid including/)) {\n        # commit 6695a346c41138df, which effectively reverts 170888cff5e2ffb7\n\n        # PERL5LIB is populated by make_ext.pl with paths to the modules we need\n        # to run, don't override this with \"../../lib\" since that may not have\n        # been populated yet in a parallel build.\n        apply_commit('6695a346c41138df');\n    }\n\n    if (-f 'ext/Hash/Util/Makefile.PL'\n        && extract_from_file('ext/Hash/Util/Makefile.PL',\n                             qr/\\bDIR\\b.*'FieldHash'/)) {\n        # ext/Hash/Util/Makefile.PL should not recurse to FieldHash's Makefile.PL\n        # *nix, VMS and Win32 all know how to (and have to) call the latter directly.\n        # As is, targets in ext/Hash/Util/FieldHash get called twice, which may result\n        # in race conditions, and certainly messes up make clean; make distclean;\n        apply_commit('550428fe486b1888');\n    }\n\n    if ($major < 8 && $^O eq 'darwin' && !-f 'ext/DynaLoader/dl_dyld.xs') {\n        checkout_file('ext/DynaLoader/dl_dyld.xs', 'f556e5b971932902');\n        apply_patch(<<'EOPATCH');\ndiff -u a/ext/DynaLoader/dl_dyld.xs~ a/ext/DynaLoader/dl_dyld.xs\n--- a/ext/DynaLoader/dl_dyld.xs~\t2011-10-11 21:41:27.000000000 +0100\n+++ b/ext/DynaLoader/dl_dyld.xs\t2011-10-11 21:42:20.000000000 +0100\n@@ -41,6 +41,35 @@\n #include \"perl.h\"\n #include \"XSUB.h\"\n \n+#ifndef pTHX\n+#  define pTHX\t\tvoid\n+#  define pTHX_\n+#endif\n+#ifndef aTHX\n+#  define aTHX\n+#  define aTHX_\n+#endif\n+#ifndef dTHX\n+#  define dTHXa(a)\textern int Perl___notused(void)\n+#  define dTHX\t\textern int Perl___notused(void)\n+#endif\n+\n+#ifndef Perl_form_nocontext\n+#  define Perl_form_nocontext form\n+#endif\n+\n+#ifndef Perl_warn_nocontext\n+#  define Perl_warn_nocontext warn\n+#endif\n+\n+#ifndef PTR2IV\n+#  define PTR2IV(p)\t(IV)(p)\n+#endif\n+\n+#ifndef get_av\n+#  define get_av perl_get_av\n+#endif\n+\n #define DL_LOADONCEONLY\n \n #include \"dlutils.c\"\t/* SaveError() etc\t*/\n@@ -185,7 +191,7 @@\n     CODE:\n     DLDEBUG(1,PerlIO_printf(Perl_debug_log, \"dl_load_file(%s,%x):\\n\", filename,flags));\n     if (flags & 0x01)\n-\tPerl_warn(aTHX_ \"Can't make loaded symbols global on this platform while loading %s\",filename);\n+\tPerl_warn_nocontext(\"Can't make loaded symbols global on this platform while loading %s\",filename);\n     RETVAL = dlopen(filename, mode) ;\n     DLDEBUG(2,PerlIO_printf(Perl_debug_log, \" libref=%x\\n\", RETVAL));\n     ST(0) = sv_newmortal() ;\nEOPATCH\n        if ($major < 4 && !extract_from_file('util.c', qr/^form/m)) {\n            apply_patch(<<'EOPATCH');\ndiff -u a/ext/DynaLoader/dl_dyld.xs~ a/ext/DynaLoader/dl_dyld.xs\n--- a/ext/DynaLoader/dl_dyld.xs~\t2011-10-11 21:56:25.000000000 +0100\n+++ b/ext/DynaLoader/dl_dyld.xs\t2011-10-11 22:00:00.000000000 +0100\n@@ -60,6 +60,18 @@\n #  define get_av perl_get_av\n #endif\n \n+static char *\n+form(char *pat, ...)\n+{\n+    char *retval;\n+    va_list args;\n+    va_start(args, pat);\n+    vasprintf(&retval, pat, &args);\n+    va_end(args);\n+    SAVEFREEPV(retval);\n+    return retval;\n+}\n+\n #define DL_LOADONCEONLY\n \n #include \"dlutils.c\"\t/* SaveError() etc\t*/\nEOPATCH\n        }\n    }\n\n    if ($major < 10) {\n        if ($unfixable_db_file) {\n            # Nothing we can do.\n        } elsif (!extract_from_file('ext/DB_File/DB_File.xs',\n                                    qr/^#ifdef AT_LEAST_DB_4_1$/)) {\n            # This line is changed by commit 3245f0580c13b3ab\n            my $line = extract_from_file('ext/DB_File/DB_File.xs',\n                                         qr/^(        status = \\(?RETVAL->dbp->open\\)?\\(RETVAL->dbp, name, NULL, RETVAL->type, $)/);\n            apply_patch(<<\"EOPATCH\");\ndiff --git a/ext/DB_File/DB_File.xs b/ext/DB_File/DB_File.xs\nindex 489ba96..fba8ded 100644\n--- a/ext/DB_File/DB_File.xs\n+++ b/ext/DB_File/DB_File.xs\n\\@\\@ -183,4 +187,8 \\@\\@\n #endif\n \n+#if DB_VERSION_MAJOR > 4 || (DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 1)\n+#    define AT_LEAST_DB_4_1\n+#endif\n+\n /* map version 2 features & constants onto their version 1 equivalent */\n \n\\@\\@ -1334,7 +1419,12 \\@\\@ SV *   sv ;\n #endif\n \n+#ifdef AT_LEAST_DB_4_1\n+        status = (RETVAL->dbp->open)(RETVAL->dbp, NULL, name, NULL, RETVAL->type, \n+\t    \t\t\tFlags, mode) ; \n+#else\n $line\n \t    \t\t\tFlags, mode) ; \n+#endif\n \t/* printf(\"open returned %d %s\\\\n\", status, db_strerror(status)) ; */\n \nEOPATCH\n        }\n    }\n\n    if ($major < 10 and -f 'ext/IPC/SysV/SysV.xs') {\n        edit_file('ext/IPC/SysV/SysV.xs', sub {\n                      my $xs = shift;\n                      my $fixed = <<'EOFIX';\n\n#include <sys/types.h>\n#if defined(HAS_MSG) || defined(HAS_SEM) || defined(HAS_SHM)\n#ifndef HAS_SEM\n#   include <sys/ipc.h>\n#endif\n#   ifdef HAS_MSG\n#       include <sys/msg.h>\n#   endif\n#   ifdef HAS_SHM\n#       if defined(PERL_SCO) || defined(PERL_ISC)\n#           include <sys/sysmacros.h>\t/* SHMLBA */\n#       endif\n#      include <sys/shm.h>\n#      ifndef HAS_SHMAT_PROTOTYPE\n           extern Shmat_t shmat (int, char *, int);\n#      endif\n#      if defined(HAS_SYSCONF) && defined(_SC_PAGESIZE)\n#          undef  SHMLBA /* not static: determined at boot time */\n#          define SHMLBA sysconf(_SC_PAGESIZE)\n#      elif defined(HAS_GETPAGESIZE)\n#          undef  SHMLBA /* not static: determined at boot time */\n#          define SHMLBA getpagesize()\n#      endif\n#   endif\n#endif\nEOFIX\n                      $xs =~ s!\n#include <sys/types\\.h>\n.*\n(#ifdef newCONSTSUB|/\\* Required)!$fixed$1!ms;\n                      return $xs;\n                  });\n    }\n}\n\nsub apply_fixups {\n    my $fixups = shift;\n    return unless $fixups;\n    foreach my $file (@$fixups) {\n        my $fh = open_or_die($file);\n        my $line = <$fh>;\n        close_or_die($fh);\n        if ($line =~ /^#!perl\\b/) {\n            system $^X, $file\n                and die_255(\"$^X $file failed: \\$!=$!, \\$?=$?\");\n        } elsif ($line =~ /^#!(\\/\\S+)/) {\n            system $file\n                and die_255(\"$file failed: \\$!=$!, \\$?=$?\");\n        } else {\n            if (my ($target, $action, $pattern)\n                = $line =~ m#^(\\S+) ([=!])~ /(.*)/#) {\n                if (length $pattern) {\n                    next unless -f $target;\n                    if ($action eq '=') {\n                        next unless extract_from_file($target, $pattern);\n                    } else {\n                        next if extract_from_file($target, $pattern);\n                    }\n                } else {\n                    # Avoid the special case meaning of the empty pattern,\n                    # and instead use this to simply test for the file being\n                    # present or absent\n                    if ($action eq '=') {\n                        next unless -f $target;\n                    } else {\n                        next if -f $target;\n                    }\n                }\n            }\n            system_or_die(\"patch -p1 <$file\");\n        }\n    }\n}\n\n# ex: set ts=8 sts=4 sw=4 et:\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/Porting/config.sh": "#!/bin/sh\n#\n# This file was produced by running the Configure script. It holds all the\n# definitions figured out by Configure. Should you modify one of these values,\n# do not forget to propagate your changes by running \"Configure -der\". You may\n# instead choose to run each of the .SH files by yourself, or \"Configure -S\".\n#\n\n# Package name      : perl5\n# Source directory  : .\n# Configuration time: Fri Dec 22 16:17:32 GMT 2017\n# Configured by     : yourname\n# Target system     : linux barba.rous.org 3.16.0-4-amd64 #1 smp debian 3.16.43-2+deb8u2 (2017-06-26) x86_64 gnulinux \n\n: Configure command line arguments.\nconfig_arg0='./Configure'\nconfig_args='-Dprefix=/opt/perl -Dcf_by=yourname -Dcf_email=yourname@yourhost.yourplace.com -Dperladmin=yourname@yourhost.yourplace.com -Dmydomain=.yourplace.com -Dmyhostname=yourhost -Duse64bitint -Dusedevel -dE'\nconfig_argc=9\nconfig_arg1='-Dprefix=/opt/perl'\nconfig_arg2='-Dcf_by=yourname'\nconfig_arg3='-Dcf_email=yourname@yourhost.yourplace.com'\nconfig_arg4='-Dperladmin=yourname@yourhost.yourplace.com'\nconfig_arg5='-Dmydomain=.yourplace.com'\nconfig_arg6='-Dmyhostname=yourhost'\nconfig_arg7='-Duse64bitint'\nconfig_arg8='-Dusedevel'\nconfig_arg9='-dE'\n\nAuthor=''\nDate=''\nHeader=''\nId=''\nLocker=''\nLog=''\nRCSfile=''\nRevision=''\nSource=''\nState=''\n_a='.a'\n_exe=''\n_o='.o'\nafs='false'\nafsroot='/afs'\nalignbytes='8'\naphostname=''\napi_revision='5'\napi_subversion='0'\napi_version='30'\napi_versionstring='5.30.0'\nar='ar'\narchlib='/opt/perl/lib/5.30.3/x86_64-linux'\narchlibexp='/opt/perl/lib/5.30.3/x86_64-linux'\narchname64=''\narchname='x86_64-linux'\narchobjs=''\nasctime_r_proto='0'\nawk='awk'\nbaserev='5.0'\nbash=''\nbin='/opt/perl/bin'\nbin_ELF='define'\nbinexp='/opt/perl/bin'\nbison='bison'\nbyacc='byacc'\nbyteorder='12345678'\nc=''\ncastflags='0'\ncat='cat'\ncc='cc'\ncccdlflags='-fPIC'\nccdlflags='-Wl,-E'\nccflags='-fwrapv -fno-strict-aliasing -pipe -fstack-protector-strong -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_FORTIFY_SOURCE=2'\nccflags_uselargefiles='-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'\nccname='gcc'\nccsymbols=''\nccversion=''\ncf_by='yourname'\ncf_email='yourname@yourhost.yourplace.com'\ncf_time='Fri Dec 22 16:17:32 GMT 2017'\ncharbits='8'\ncharsize='1'\nchgrp=''\nchmod='chmod'\nchown=''\nclocktype='clock_t'\ncomm='comm'\ncompress=''\ncontains='grep'\ncp='cp'\ncpio=''\ncpp='cpp'\ncpp_stuff='42'\ncppccsymbols=''\ncppflags='-fwrapv -fno-strict-aliasing -pipe -fstack-protector-strong -I/usr/local/include'\ncpplast='-'\ncppminus='-'\ncpprun='cc  -E'\ncppstdin='cc  -E'\ncppsymbols='_FILE_OFFSET_BITS=64 _LARGEFILE_SOURCE=1 _LP64=1 _POSIX_C_SOURCE=200809L _POSIX_SOURCE=1 _STDC_PREDEF_H=1 __ATOMIC_ACQUIRE=2 __ATOMIC_ACQ_REL=4 __ATOMIC_CONSUME=1 __ATOMIC_HLE_ACQUIRE=65536 __ATOMIC_HLE_RELEASE=131072 __ATOMIC_RELAXED=0 __ATOMIC_RELEASE=3 __ATOMIC_SEQ_CST=5 __BIGGEST_ALIGNMENT__=16 __BYTE_ORDER__=1234 __CHAR16_TYPE__=short\\ unsigned\\ int __CHAR32_TYPE__=unsigned\\ int __CHAR_BIT__=8 __DBL_DECIMAL_DIG__=17 __DBL_DENORM_MIN__=((double)4.94065645841246544177e-324L) __DBL_DIG__=15 __DBL_EPSILON__=((double)2.22044604925031308085e-16L) __DBL_HAS_DENORM__=1 __DBL_HAS_INFINITY__=1 __DBL_HAS_QUIET_NAN__=1 __DBL_MANT_DIG__=53 __DBL_MAX_10_EXP__=308 __DBL_MAX_EXP__=1024 __DBL_MAX__=((double)1.79769313486231570815e+308L) __DBL_MIN_10_EXP__=(-307) __DBL_MIN_EXP__=(-1021) __DBL_MIN__=((double)2.22507385850720138309e-308L) __DEC128_EPSILON__=1E-33DL __DEC128_MANT_DIG__=34 __DEC128_MAX_EXP__=6145 __DEC128_MAX__=9.999999999999999999999999999999999E6144DL __DEC128_MIN_EXP__=(-6142) __DEC128_MIN__=1E-6143DL __DEC128_SUBNORMAL_MIN__=0.000000000000000000000000000000001E-6143DL __DEC32_EPSILON__=1E-6DF __DEC32_MANT_DIG__=7 __DEC32_MAX_EXP__=97 __DEC32_MAX__=9.999999E96DF __DEC32_MIN_EXP__=(-94) __DEC32_MIN__=1E-95DF __DEC32_SUBNORMAL_MIN__=0.000001E-95DF __DEC64_EPSILON__=1E-15DD __DEC64_MANT_DIG__=16 __DEC64_MAX_EXP__=385 __DEC64_MAX__=9.999999999999999E384DD __DEC64_MIN_EXP__=(-382) __DEC64_MIN__=1E-383DD __DEC64_SUBNORMAL_MIN__=0.000000000000001E-383DD __DECIMAL_BID_FORMAT__=1 __DECIMAL_DIG__=21 __DEC_EVAL_METHOD__=2 __ELF__=1 __FINITE_MATH_ONLY__=0 __FLOAT_WORD_ORDER__=1234 __FLT_DECIMAL_DIG__=9 __FLT_DENORM_MIN__=1.40129846432481707092e-45F __FLT_DIG__=6 __FLT_EPSILON__=1.19209289550781250000e-7F __FLT_EVAL_METHOD__=0 __FLT_HAS_DENORM__=1 __FLT_HAS_INFINITY__=1 __FLT_HAS_QUIET_NAN__=1 __FLT_MANT_DIG__=24 __FLT_MAX_10_EXP__=38 __FLT_MAX_EXP__=128 __FLT_MAX__=3.40282346638528859812e+38F __FLT_MIN_10_EXP__=(-37) __FLT_MIN_EXP__=(-125) __FLT_MIN__=1.17549435082228750797e-38F __FLT_RADIX__=2 __FXSR__=1 __GCC_ATOMIC_BOOL_LOCK_FREE=2 __GCC_ATOMIC_CHAR16_T_LOCK_FREE=2 __GCC_ATOMIC_CHAR32_T_LOCK_FREE=2 __GCC_ATOMIC_CHAR_LOCK_FREE=2 __GCC_ATOMIC_INT_LOCK_FREE=2 __GCC_ATOMIC_LLONG_LOCK_FREE=2 __GCC_ATOMIC_LONG_LOCK_FREE=2 __GCC_ATOMIC_POINTER_LOCK_FREE=2 __GCC_ATOMIC_SHORT_LOCK_FREE=2 __GCC_ATOMIC_TEST_AND_SET_TRUEVAL=1 __GCC_ATOMIC_WCHAR_T_LOCK_FREE=2 __GCC_HAVE_DWARF2_CFI_ASM=1 __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1=1 __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2=1 __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4=1 __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8=1 __GCC_IEC_559=2 __GCC_IEC_559_COMPLEX=2 __GLIBC_MINOR__=19 __GLIBC__=2 __GNUC_GNU_INLINE__=1 __GNUC_MINOR__=9 __GNUC_PATCHLEVEL__=2 __GNUC__=4 __GNU_LIBRARY__=6 __GXX_ABI_VERSION=1002 __INT16_C=__INT16_C __INT16_MAX__=32767 __INT16_TYPE__=short\\ int __INT32_C=__INT32_C __INT32_MAX__=2147483647 __INT32_TYPE__=int __INT64_C=__INT64_C __INT64_MAX__=9223372036854775807L __INT64_TYPE__=long\\ int __INT8_C=__INT8_C __INT8_MAX__=127 __INT8_TYPE__=signed\\ char __INTMAX_C=__INTMAX_C __INTMAX_MAX__=9223372036854775807L __INTMAX_TYPE__=long\\ int __INTPTR_MAX__=9223372036854775807L __INTPTR_TYPE__=long\\ int __INT_FAST16_MAX__=9223372036854775807L __INT_FAST16_TYPE__=long\\ int __INT_FAST32_MAX__=9223372036854775807L __INT_FAST32_TYPE__=long\\ int __INT_FAST64_MAX__=9223372036854775807L __INT_FAST64_TYPE__=long\\ int __INT_FAST8_MAX__=127 __INT_FAST8_TYPE__=signed\\ char __INT_LEAST16_MAX__=32767 __INT_LEAST16_TYPE__=short\\ int __INT_LEAST32_MAX__=2147483647 __INT_LEAST32_TYPE__=int __INT_LEAST64_MAX__=9223372036854775807L __INT_LEAST64_TYPE__=long\\ int __INT_LEAST8_MAX__=127 __INT_LEAST8_TYPE__=signed\\ char __INT_MAX__=2147483647 __LDBL_DENORM_MIN__=3.64519953188247460253e-4951L __LDBL_DIG__=18 __LDBL_EPSILON__=1.08420217248550443401e-19L __LDBL_HAS_DENORM__=1 __LDBL_HAS_INFINITY__=1 __LDBL_HAS_QUIET_NAN__=1 __LDBL_MANT_DIG__=64 __LDBL_MAX_10_EXP__=4932 __LDBL_MAX_EXP__=16384 __LDBL_MAX__=1.18973149535723176502e+4932L __LDBL_MIN_10_EXP__=(-4931) __LDBL_MIN_EXP__=(-16381) __LDBL_MIN__=3.36210314311209350626e-4932L __LONG_LONG_MAX__=9223372036854775807LL __LONG_MAX__=9223372036854775807L __LP64__=1 __MMX__=1 __ORDER_BIG_ENDIAN__=4321 __ORDER_LITTLE_ENDIAN__=1234 __ORDER_PDP_ENDIAN__=3412 __PRAGMA_REDEFINE_EXTNAME=1 __PTRDIFF_MAX__=9223372036854775807L __PTRDIFF_TYPE__=long\\ int __REGISTER_PREFIX__= __SCHAR_MAX__=127 __SHRT_MAX__=32767 __SIG_ATOMIC_MAX__=2147483647 __SIG_ATOMIC_MIN__=(-2147483647\\ -\\ 1) __SIG_ATOMIC_TYPE__=int __SIZEOF_DOUBLE__=8 __SIZEOF_FLOAT__=4 __SIZEOF_INT128__=16 __SIZEOF_INT__=4 __SIZEOF_LONG_DOUBLE__=16 __SIZEOF_LONG_LONG__=8 __SIZEOF_LONG__=8 __SIZEOF_POINTER__=8 __SIZEOF_PTRDIFF_T__=8 __SIZEOF_SHORT__=2 __SIZEOF_SIZE_T__=8 __SIZEOF_WCHAR_T__=4 __SIZEOF_WINT_T__=4 __SIZE_MAX__=18446744073709551615UL __SIZE_TYPE__=long\\ unsigned\\ int __SSE2_MATH__=1 __SSE2__=1 __SSE_MATH__=1 __SSE__=1 __STDC_HOSTED__=1 __STDC_IEC_559_COMPLEX__=1 __STDC_IEC_559__=1 __STDC_ISO_10646__=201103L __STDC_NO_THREADS__=1 __STDC__=1 __UINT16_C=__UINT16_C __UINT16_MAX__=65535 __UINT16_TYPE__=short\\ unsigned\\ int __UINT32_C=__UINT32_C __UINT32_MAX__=4294967295U __UINT32_TYPE__=unsigned\\ int __UINT64_C=__UINT64_C __UINT64_MAX__=18446744073709551615UL __UINT64_TYPE__=long\\ unsigned\\ int __UINT8_C=__UINT8_C __UINT8_MAX__=255 __UINT8_TYPE__=unsigned\\ char __UINTMAX_C=__UINTMAX_C __UINTMAX_MAX__=18446744073709551615UL __UINTMAX_TYPE__=long\\ unsigned\\ int __UINTPTR_MAX__=18446744073709551615UL __UINTPTR_TYPE__=long\\ unsigned\\ int __UINT_FAST16_MAX__=18446744073709551615UL __UINT_FAST16_TYPE__=long\\ unsigned\\ int __UINT_FAST32_MAX__=18446744073709551615UL __UINT_FAST32_TYPE__=long\\ unsigned\\ int __UINT_FAST64_MAX__=18446744073709551615UL __UINT_FAST64_TYPE__=long\\ unsigned\\ int __UINT_FAST8_MAX__=255 __UINT_FAST8_TYPE__=unsigned\\ char __UINT_LEAST16_MAX__=65535 __UINT_LEAST16_TYPE__=short\\ unsigned\\ int __UINT_LEAST32_MAX__=4294967295U __UINT_LEAST32_TYPE__=unsigned\\ int __UINT_LEAST64_MAX__=18446744073709551615UL __UINT_LEAST64_TYPE__=long\\ unsigned\\ int __UINT_LEAST8_MAX__=255 __UINT_LEAST8_TYPE__=unsigned\\ char __USER_LABEL_PREFIX__= __USE_BSD=1 __USE_FILE_OFFSET64=1 __USE_LARGEFILE=1 __USE_MISC=1 __USE_POSIX199309=1 __USE_POSIX199506=1 __USE_POSIX2=1 __USE_POSIX=1 __USE_SVID=1 __VERSION__=\"4.9.2\" __WCHAR_MAX__=2147483647 __WCHAR_MIN__=(-2147483647\\ -\\ 1) __WCHAR_TYPE__=int __WINT_MAX__=4294967295U __WINT_MIN__=0U __WINT_TYPE__=unsigned\\ int __amd64=1 __amd64__=1 __code_model_small__=1 __gnu_linux__=1 __has_include=__has_include __has_include_next=__has_include_next __k8=1 __k8__=1 __linux=1 __linux__=1 __unix=1 __unix__=1 __x86_64=1 __x86_64__=1 linux=1 unix=1'\ncrypt_r_proto='0'\ncryptlib=''\ncsh='csh'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='gcvt((x),(n),(b))'\nd_PRIEUldbl='define'\nd_PRIFUldbl='define'\nd_PRIGUldbl='define'\nd_PRIXU64='define'\nd_PRId64='define'\nd_PRIeldbl='define'\nd_PRIfldbl='define'\nd_PRIgldbl='define'\nd_PRIi64='define'\nd_PRIo64='define'\nd_PRIu64='define'\nd_PRIx64='define'\nd_SCNfldbl='define'\nd__fwalk='undef'\nd_accept4='define'\nd_access='define'\nd_accessx='undef'\nd_acosh='define'\nd_aintl='undef'\nd_alarm='define'\nd_archlib='define'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='define'\nd_atanh='define'\nd_atolf='undef'\nd_atoll='define'\nd_attribute_deprecated='define'\nd_attribute_format='define'\nd_attribute_malloc='define'\nd_attribute_nonnull='define'\nd_attribute_noreturn='define'\nd_attribute_pure='define'\nd_attribute_unused='define'\nd_attribute_warn_unused_result='define'\nd_backtrace='define'\nd_bsd='undef'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_add_overflow='undef'\nd_builtin_choose_expr='define'\nd_builtin_expect='define'\nd_builtin_mul_overflow='undef'\nd_builtin_sub_overflow='undef'\nd_c99_variadic_macros='define'\nd_casti32='undef'\nd_castneg='define'\nd_cbrt='define'\nd_chown='define'\nd_chroot='define'\nd_chsize='undef'\nd_class='undef'\nd_clearenv='define'\nd_closedir='define'\nd_cmsghdr_s='define'\nd_copysign='define'\nd_copysignl='define'\nd_cplusplus='undef'\nd_crypt='define'\nd_crypt_r='undef'\nd_csh='define'\nd_ctermid='define'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='define'\nd_dbminitproto='define'\nd_difftime64='undef'\nd_difftime='define'\nd_dir_dd_fd='undef'\nd_dirfd='define'\nd_dirnamlen='undef'\nd_dladdr='define'\nd_dlerror='define'\nd_dlopen='define'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_double_has_inf='define'\nd_double_has_nan='define'\nd_double_has_negative_zero='define'\nd_double_has_subnormals='define'\nd_double_style_cray='undef'\nd_double_style_ibm='undef'\nd_double_style_ieee='define'\nd_double_style_vax='undef'\nd_drand48_r='undef'\nd_drand48proto='define'\nd_dup2='define'\nd_dup3='define'\nd_duplocale='define'\nd_eaccess='define'\nd_endgrent='define'\nd_endgrent_r='undef'\nd_endhent='define'\nd_endhostent_r='undef'\nd_endnent='define'\nd_endnetent_r='undef'\nd_endpent='define'\nd_endprotoent_r='undef'\nd_endpwent='define'\nd_endpwent_r='undef'\nd_endsent='define'\nd_endservent_r='undef'\nd_eofnblk='define'\nd_erf='define'\nd_erfc='define'\nd_eunice='undef'\nd_exp2='define'\nd_expm1='define'\nd_faststdio='define'\nd_fchdir='define'\nd_fchmod='define'\nd_fchmodat='define'\nd_fchown='define'\nd_fcntl='define'\nd_fcntl_can_lock='define'\nd_fd_macros='define'\nd_fd_set='define'\nd_fdclose='undef'\nd_fdim='define'\nd_fds_bits='undef'\nd_fegetround='define'\nd_fgetpos='define'\nd_finite='define'\nd_finitel='define'\nd_flexfnam='define'\nd_flock='define'\nd_flockproto='define'\nd_fma='define'\nd_fmax='define'\nd_fmin='define'\nd_fork='define'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='define'\nd_fpclass='undef'\nd_fpclassify='define'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_freelocale='define'\nd_frexpl='define'\nd_fs_data_s='undef'\nd_fseeko='define'\nd_fsetpos='define'\nd_fstatfs='define'\nd_fstatvfs='define'\nd_fsync='define'\nd_ftello='define'\nd_ftime='undef'\nd_futimes='define'\nd_gai_strerror='define'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='define'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='define'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='define'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='define'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='define'\nd_getitimer='define'\nd_getlogin='define'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='define'\nd_getnameinfo='define'\nd_getnbyaddr='define'\nd_getnbyname='define'\nd_getnent='define'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='define'\nd_getpagsz='define'\nd_getpbyname='define'\nd_getpbynumber='define'\nd_getpent='define'\nd_getpgid='define'\nd_getpgrp2='undef'\nd_getpgrp='define'\nd_getppid='define'\nd_getprior='define'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='define'\nd_getprpwnam='undef'\nd_getpwent='define'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='define'\nd_getsent='define'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='define'\nd_getspnam='define'\nd_getspnam_r='undef'\nd_gettimeod='define'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='define'\nd_grpasswd='define'\nd_hasmntopt='define'\nd_htonl='define'\nd_hypot='define'\nd_ilogb='define'\nd_ilogbl='define'\nd_inc_version_list='undef'\nd_inetaton='define'\nd_inetntop='define'\nd_inetpton='define'\nd_int64_t='define'\nd_ip_mreq='define'\nd_ip_mreq_source='define'\nd_ipv6_mreq='define'\nd_ipv6_mreq_source='undef'\nd_isascii='define'\nd_isblank='define'\nd_isfinite='define'\nd_isfinitel='undef'\nd_isinf='define'\nd_isinfl='define'\nd_isless='undef'\nd_isnan='define'\nd_isnanl='define'\nd_isnormal='define'\nd_j0='define'\nd_j0l='define'\nd_killpg='define'\nd_lc_monetary_2008='define'\nd_lchown='define'\nd_ldbl_dig='define'\nd_ldexpl='define'\nd_lgamma='define'\nd_lgamma_r='define'\nd_libm_lib_version='define'\nd_libname_unique='undef'\nd_link='define'\nd_linkat='define'\nd_llrint='define'\nd_llrintl='define'\nd_llround='define'\nd_llroundl='define'\nd_localeconv_l='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='define'\nd_lockf='define'\nd_log1p='define'\nd_log2='define'\nd_logb='define'\nd_long_double_style_ieee='define'\nd_long_double_style_ieee_doubledouble='undef'\nd_long_double_style_ieee_extended='define'\nd_long_double_style_ieee_std='undef'\nd_long_double_style_vax='undef'\nd_longdbl='define'\nd_longlong='define'\nd_lrint='define'\nd_lrintl='define'\nd_lround='define'\nd_lroundl='define'\nd_lseekproto='define'\nd_lstat='define'\nd_madvise='define'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='define'\nd_mbrlen='define'\nd_mbrtowc='define'\nd_mbstowcs='define'\nd_mbtowc='define'\nd_memmem='define'\nd_memrchr='define'\nd_mkdir='define'\nd_mkdtemp='define'\nd_mkfifo='define'\nd_mkostemp='define'\nd_mkstemp='define'\nd_mkstemps='define'\nd_mktime64='undef'\nd_mktime='define'\nd_mmap='define'\nd_modfl='define'\nd_modflproto='define'\nd_mprotect='define'\nd_msg='define'\nd_msg_ctrunc='define'\nd_msg_dontroute='define'\nd_msg_oob='define'\nd_msg_peek='define'\nd_msg_proxy='define'\nd_msgctl='define'\nd_msgget='define'\nd_msghdr_s='define'\nd_msgrcv='define'\nd_msgsnd='define'\nd_msync='define'\nd_munmap='define'\nd_mymalloc='undef'\nd_nan='define'\nd_nanosleep='define'\nd_ndbm='define'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='define'\nd_newlocale='define'\nd_nextafter='define'\nd_nexttoward='define'\nd_nice='define'\nd_nl_langinfo='define'\nd_nv_preserves_uv='undef'\nd_nv_zero_is_allbits_zero='define'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='define'\nd_openat='define'\nd_pathconf='define'\nd_pause='define'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe2='define'\nd_pipe='define'\nd_poll='define'\nd_portable='define'\nd_prctl='define'\nd_prctl_set_name='define'\nd_printf_format_null='undef'\nd_procselfexe='define'\nd_pseudofork='undef'\nd_pthread_atfork='define'\nd_pthread_attr_setscope='define'\nd_pthread_yield='define'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='define'\nd_pwpasswd='define'\nd_pwquota='undef'\nd_qgcvt='define'\nd_quad='define'\nd_querylocale='undef'\nd_random_r='undef'\nd_re_comp='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='define'\nd_readv='define'\nd_recvmsg='define'\nd_regcmp='undef'\nd_regcomp='define'\nd_remainder='define'\nd_remquo='define'\nd_rename='define'\nd_renameat='define'\nd_rewinddir='define'\nd_rint='define'\nd_rmdir='define'\nd_round='define'\nd_sbrkproto='define'\nd_scalbn='define'\nd_scalbnl='define'\nd_sched_yield='define'\nd_scm_rights='define'\nd_seekdir='define'\nd_select='define'\nd_sem='define'\nd_semctl='define'\nd_semctl_semid_ds='define'\nd_semctl_semun='define'\nd_semget='define'\nd_semop='define'\nd_sendmsg='define'\nd_setegid='define'\nd_seteuid='define'\nd_setgrent='define'\nd_setgrent_r='undef'\nd_setgrps='define'\nd_sethent='define'\nd_sethostent_r='undef'\nd_setitimer='define'\nd_setlinebuf='define'\nd_setlocale='define'\nd_setlocale_accepts_any_locale_name='undef'\nd_setlocale_r='undef'\nd_setnent='define'\nd_setnetent_r='undef'\nd_setpent='define'\nd_setpgid='define'\nd_setpgrp2='undef'\nd_setpgrp='define'\nd_setprior='define'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='define'\nd_setpwent_r='undef'\nd_setregid='define'\nd_setresgid='define'\nd_setresuid='define'\nd_setreuid='define'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='define'\nd_setservent_r='undef'\nd_setsid='define'\nd_setvbuf='define'\nd_shm='define'\nd_shmat='define'\nd_shmatprototype='define'\nd_shmctl='define'\nd_shmdt='define'\nd_shmget='define'\nd_sigaction='define'\nd_siginfo_si_addr='define'\nd_siginfo_si_band='define'\nd_siginfo_si_errno='define'\nd_siginfo_si_fd='define'\nd_siginfo_si_pid='define'\nd_siginfo_si_status='define'\nd_siginfo_si_uid='define'\nd_siginfo_si_value='define'\nd_signbit='define'\nd_sigprocmask='define'\nd_sigsetjmp='define'\nd_sin6_scope_id='define'\nd_sitearch='define'\nd_snprintf='define'\nd_sockaddr_in6='define'\nd_sockaddr_sa_len='undef'\nd_sockatmark='define'\nd_sockatmarkproto='define'\nd_socket='define'\nd_socklen_t='define'\nd_sockpair='define'\nd_socks5_init='undef'\nd_sqrtl='define'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='define'\nd_statfs_f_flags='define'\nd_statfs_s='define'\nd_static_inline='define'\nd_statvfs='define'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='define'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='define'\nd_stdio_stream_array='undef'\nd_stdiobase='define'\nd_stdstdio='define'\nd_strcoll='define'\nd_strerror_l='define'\nd_strerror_r='undef'\nd_strftime='define'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strnlen='define'\nd_strtod='define'\nd_strtod_l='undef'\nd_strtol='define'\nd_strtold='define'\nd_strtold_l='define'\nd_strtoll='define'\nd_strtoq='define'\nd_strtoul='define'\nd_strtoull='define'\nd_strtouq='define'\nd_strxfrm='define'\nd_suidsafe='undef'\nd_symlink='define'\nd_syscall='define'\nd_syscallproto='define'\nd_sysconf='define'\nd_sysernlst=''\nd_syserrlst='define'\nd_system='define'\nd_tcgetpgrp='define'\nd_tcsetpgrp='define'\nd_telldir='define'\nd_telldirproto='define'\nd_tgamma='define'\nd_thread_safe_nl_langinfo_l='undef'\nd_time='define'\nd_timegm='define'\nd_times='define'\nd_tm_tm_gmtoff='define'\nd_tm_tm_zone='define'\nd_tmpnam_r='undef'\nd_towlower='undef'\nd_towupper='undef'\nd_trunc='define'\nd_truncate='define'\nd_truncl='define'\nd_ttyname_r='undef'\nd_tzname='define'\nd_u32align='define'\nd_ualarm='define'\nd_umask='define'\nd_uname='define'\nd_union_semun='undef'\nd_unlinkat='define'\nd_unordered='undef'\nd_unsetenv='define'\nd_uselocale='define'\nd_usleep='define'\nd_usleepproto='define'\nd_ustat='define'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vendorscript='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='define'\nd_voidtty=''\nd_vsnprintf='define'\nd_wait4='define'\nd_waitpid='define'\nd_wcscmp='define'\nd_wcstombs='define'\nd_wcsxfrm='define'\nd_wctomb='define'\nd_writev='define'\nd_xenix='undef'\ndate='date'\ndb_hashtype='u_int32_t'\ndb_prefixtype='size_t'\ndb_version_major='5'\ndb_version_minor='1'\ndb_version_patch='29'\ndefault_inc_excludes_dot='define'\ndirentrytype='struct dirent'\ndlext='so'\ndlsrc='dl_dlopen.xs'\ndoubleinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f'\ndoublekind='3'\ndoublemantbits='52'\ndoublenanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff'\ndoublesize='8'\ndrand01='Perl_drand48()'\ndrand48_r_proto='0'\ndtrace=''\ndtraceobject=''\ndtracexnolibs=''\ndynamic_ext='B Compress/Raw/Bzip2 Compress/Raw/Zlib Cwd DB_File Data/Dumper Devel/PPPort Devel/Peek Digest/MD5 Digest/SHA Encode Fcntl File/DosGlob File/Glob Filter/Util/Call GDBM_File Hash/Util Hash/Util/FieldHash I18N/Langinfo IO IPC/SysV List/Util MIME/Base64 Math/BigInt/FastCalc NDBM_File ODBM_File Opcode POSIX PerlIO/encoding PerlIO/mmap PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Tie/Hash/NamedCapture Time/HiRes Time/Piece Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap arybase attributes mro re threads threads/shared'\neagain='EAGAIN'\nebcdic='undef'\necho='echo'\negrep='egrep'\nemacs=''\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext=''\nexpr='expr'\nextensions='B Compress/Raw/Bzip2 Compress/Raw/Zlib Cwd DB_File Data/Dumper Devel/PPPort Devel/Peek Digest/MD5 Digest/SHA Encode Fcntl File/DosGlob File/Glob Filter/Util/Call GDBM_File Hash/Util Hash/Util/FieldHash I18N/Langinfo IO IPC/SysV List/Util MIME/Base64 Math/BigInt/FastCalc NDBM_File ODBM_File Opcode POSIX PerlIO/encoding PerlIO/mmap PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Tie/Hash/NamedCapture Time/HiRes Time/Piece Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap arybase attributes mro re threads threads/shared Archive/Tar Attribute/Handlers AutoLoader B/Debug CPAN CPAN/Meta CPAN/Meta/Requirements CPAN/Meta/YAML Carp Config/Perl/V Devel/SelfStubber Digest Dumpvalue Env Errno Exporter ExtUtils/CBuilder ExtUtils/Constant ExtUtils/Install ExtUtils/MakeMaker ExtUtils/Manifest ExtUtils/Miniperl ExtUtils/ParseXS File/Fetch File/Find File/Path File/Temp FileCache Filter/Simple Getopt/Long HTTP/Tiny I18N/Collate I18N/LangTags IO/Compress IO/Socket/IP IO/Zlib IPC/Cmd IPC/Open3 JSON/PP Locale/Codes Locale/Maketext Locale/Maketext/Simple Math/BigInt Math/BigRat Math/Complex Memoize Module/CoreList Module/Load Module/Load/Conditional Module/Loaded Module/Metadata NEXT Net/Ping Params/Check Perl/OSType PerlIO/via/QuotedPrint Pod/Checker Pod/Escapes Pod/Functions Pod/Html Pod/Parser Pod/Perldoc Pod/Simple Pod/Usage Safe Search/Dict SelfLoader Term/ANSIColor Term/Cap Term/Complete Term/ReadLine Test Test/Harness Test/Simple Text/Abbrev Text/Balanced Text/ParseWords Text/Tabs Thread/Queue Thread/Semaphore Tie/File Tie/Memoize Tie/RefHash Time/Local XSLoader autodie autouse base bignum constant encoding/warnings experimental if lib libnet parent perlfaq podlators version'\nextern_C='extern'\nextras=''\nfflushNULL='define'\nfflushall='undef'\nfind=''\nfirstmakefile='makefile'\nflex=''\nfpossize='16'\nfpostype='fpos_t'\nfreetype='void'\nfrom=':'\nfull_ar='/usr/bin/ar'\nfull_csh='/bin/csh'\nfull_sed='/bin/sed'\ngccansipedantic=''\ngccosandvers=''\ngccversion='4.9.2'\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"u\"'\ngidsign='1'\ngidsize='4'\ngidtype='gid_t'\nglibpth='/usr/shlib  /lib /usr/lib /usr/lib/386 /lib/386 /usr/ccs/lib /usr/ucblib /usr/local/lib '\ngmake='gmake'\ngmtime_r_proto='0'\ngnulibc_version='2.19'\ngrep='grep'\ngroupcat='cat /etc/group'\ngroupstype='gid_t'\ngzip='gzip'\nh_fcntl='false'\nh_sysfile='true'\nhint='recommended'\nhostcat=''\nhostgenerate=''\nhostosname=''\nhostperl=''\nhtml1dir=' '\nhtml1direxp=''\nhtml3dir=' '\nhtml3direxp=''\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='int'\ni64size='8'\ni64type='long'\ni8size='1'\ni8type='signed char'\ni_arpainet='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='define'\ni_db='define'\ni_dbm='define'\ni_dirent='define'\ni_dlfcn='define'\ni_execinfo='define'\ni_fcntl='undef'\ni_fenv='define'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='define'\ni_gdbm_ndbm='define'\ni_gdbmndbm='undef'\ni_grp='define'\ni_ieeefp='undef'\ni_inttypes='define'\ni_langinfo='define'\ni_libutil='undef'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='define'\ni_mallocmalloc='undef'\ni_mntent='define'\ni_ndbm='undef'\ni_netdb='define'\ni_neterrno='undef'\ni_netinettcp='define'\ni_niin='define'\ni_poll='define'\ni_prot='undef'\ni_pthread='define'\ni_pwd='define'\ni_quadmath='define'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='define'\ni_socks='undef'\ni_stdbool='define'\ni_stdint='define'\ni_stdlib='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='define'\ni_sysfile='define'\ni_sysfilio='undef'\ni_sysin='undef'\ni_sysioctl='define'\ni_syslog='define'\ni_sysmman='define'\ni_sysmode='undef'\ni_sysmount='define'\ni_sysndir='undef'\ni_sysparam='define'\ni_syspoll='define'\ni_sysresrc='define'\ni_syssecrt='undef'\ni_sysselct='define'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='define'\ni_sysstatvfs='define'\ni_systime='define'\ni_systimek='undef'\ni_systimes='define'\ni_systypes='define'\ni_sysuio='define'\ni_sysun='define'\ni_sysutsname='define'\ni_sysvfs='define'\ni_syswait='define'\ni_termio='undef'\ni_termios='define'\ni_time='define'\ni_unistd='define'\ni_ustat='define'\ni_utime='define'\ni_vfork='undef'\ni_wchar='define'\ni_wctype='undef'\ni_xlocale='define'\nignore_versioned_solibs='y'\ninc_version_list=''\ninc_version_list_init='0'\nincpath=''\nincpth='/usr/lib/gcc/x86_64-linux-gnu/4.9/include /usr/local/include /usr/lib/gcc/x86_64-linux-gnu/4.9/include-fixed /usr/include/x86_64-linux-gnu /usr/include'\ninews=''\ninitialinstalllocation='/opt/perl/bin'\ninstallarchlib='/opt/perl/lib/5.30.3/x86_64-linux'\ninstallbin='/opt/perl/bin'\ninstallhtml1dir=''\ninstallhtml3dir=''\ninstallman1dir='/opt/perl/man/man1'\ninstallman3dir='/opt/perl/man/man3'\ninstallprefix='/opt/perl'\ninstallprefixexp='/opt/perl'\ninstallprivlib='/opt/perl/lib/5.30.3'\ninstallscript='/opt/perl/bin'\ninstallsitearch='/opt/perl/lib/site_perl/5.30.3/x86_64-linux'\ninstallsitebin='/opt/perl/bin'\ninstallsitehtml1dir=''\ninstallsitehtml3dir=''\ninstallsitelib='/opt/perl/lib/site_perl/5.30.3'\ninstallsiteman1dir='/opt/perl/man/man1'\ninstallsiteman3dir='/opt/perl/man/man3'\ninstallsitescript='/opt/perl/bin'\ninstallstyle='lib'\ninstallusrbinperl='undef'\ninstallvendorarch=''\ninstallvendorbin=''\ninstallvendorhtml1dir=''\ninstallvendorhtml3dir=''\ninstallvendorlib=''\ninstallvendorman1dir=''\ninstallvendorman3dir=''\ninstallvendorscript=''\nintsize='4'\nissymlink='test -h'\nivdformat='\"ld\"'\nivsize='8'\nivtype='long'\nknown_extensions='Amiga/ARexx Amiga/Exec Archive/Tar Attribute/Handlers AutoLoader B B/Debug CPAN CPAN/Meta CPAN/Meta/Requirements CPAN/Meta/YAML Carp Compress/Raw/Bzip2 Compress/Raw/Zlib Config/Perl/V Cwd DB_File Data/Dumper Devel/PPPort Devel/Peek Devel/SelfStubber Digest Digest/MD5 Digest/SHA Dumpvalue Encode Env Errno Exporter ExtUtils/CBuilder ExtUtils/Constant ExtUtils/Install ExtUtils/MakeMaker ExtUtils/Manifest ExtUtils/Miniperl ExtUtils/ParseXS Fcntl File/DosGlob File/Fetch File/Find File/Glob File/Path File/Temp FileCache Filter/Simple Filter/Util/Call GDBM_File Getopt/Long HTTP/Tiny Hash/Util Hash/Util/FieldHash I18N/Collate I18N/LangTags I18N/Langinfo IO IO/Compress IO/Socket/IP IO/Zlib IPC/Cmd IPC/Open3 IPC/SysV JSON/PP List/Util Locale/Codes Locale/Maketext Locale/Maketext/Simple MIME/Base64 Math/BigInt Math/BigInt/FastCalc Math/BigRat Math/Complex Memoize Module/CoreList Module/Load Module/Load/Conditional Module/Loaded Module/Metadata NDBM_File NEXT Net/Ping ODBM_File Opcode POSIX Params/Check Perl/OSType PerlIO/encoding PerlIO/mmap PerlIO/scalar PerlIO/via PerlIO/via/QuotedPrint Pod/Checker Pod/Escapes Pod/Functions Pod/Html Pod/Parser Pod/Perldoc Pod/Simple Pod/Usage SDBM_File Safe Search/Dict SelfLoader Socket Storable Sys/Hostname Sys/Syslog Term/ANSIColor Term/Cap Term/Complete Term/ReadLine Test Test/Harness Test/Simple Text/Abbrev Text/Balanced Text/ParseWords Text/Tabs Thread/Queue Thread/Semaphore Tie/File Tie/Hash/NamedCapture Tie/Memoize Tie/RefHash Time/HiRes Time/Local Time/Piece Unicode/Collate Unicode/Normalize VMS/DCLsym VMS/Filespec VMS/Stdio Win32 Win32API/File Win32CORE XS/APItest XS/Typemap XSLoader arybase attributes autodie autouse base bignum constant encoding/warnings experimental if lib libnet mro parent perlfaq podlators re threads threads/shared version '\nksh=''\nld='cc'\nld_can_script='define'\nlddlflags='-shared -O2 -L/usr/local/lib -fstack-protector-strong'\nldflags=' -fstack-protector-strong -L/usr/local/lib'\nldflags_uselargefiles=''\nldlibpthname='LD_LIBRARY_PATH'\nless='less'\nlib_ext='.a'\nlibc='libc-2.19.so'\nlibperl='libperl.a'\nlibpth='/usr/local/lib /usr/lib/gcc/x86_64-linux-gnu/4.9/include-fixed /usr/include/x86_64-linux-gnu /usr/lib /lib/x86_64-linux-gnu /lib/../lib /usr/lib/x86_64-linux-gnu /usr/lib/../lib /lib'\nlibs='-lpthread -lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lc -lgdbm_compat'\nlibsdirs=' /usr/lib/x86_64-linux-gnu'\nlibsfiles=' libpthread.so libnsl.so libgdbm.so libdb.so libdl.so libm.so libcrypt.so libutil.so libc.so libgdbm_compat.so'\nlibsfound=' /usr/lib/x86_64-linux-gnu/libpthread.so /usr/lib/x86_64-linux-gnu/libnsl.so /usr/lib/x86_64-linux-gnu/libgdbm.so /usr/lib/x86_64-linux-gnu/libdb.so /usr/lib/x86_64-linux-gnu/libdl.so /usr/lib/x86_64-linux-gnu/libm.so /usr/lib/x86_64-linux-gnu/libcrypt.so /usr/lib/x86_64-linux-gnu/libutil.so /usr/lib/x86_64-linux-gnu/libc.so /usr/lib/x86_64-linux-gnu/libgdbm_compat.so'\nlibspath=' /usr/local/lib /usr/lib/gcc/x86_64-linux-gnu/4.9/include-fixed /usr/include/x86_64-linux-gnu /usr/lib /lib/x86_64-linux-gnu /lib/../lib /usr/lib/x86_64-linux-gnu /usr/lib/../lib /lib'\nlibswanted='cl pthread cl pthread socket inet nsl gdbm dbm db malloc dl ld sun m crypt sec util c cposix posix ucb BSD gdbm_compat'\nlibswanted_uselargefiles=''\nline=''\nlint=''\nlkflags=''\nln='ln'\nlns='/bin/ln -s'\nlocaltime_r_proto='0'\nlocincpth='/usr/local/include /opt/local/include /usr/gnu/include /opt/gnu/include /usr/GNU/include /opt/GNU/include'\nloclibpth='/usr/local/lib /opt/local/lib /usr/gnu/lib /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib'\nlongdblinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'\nlongdblkind='3'\nlongdblmantbits='64'\nlongdblnanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'\nlongdblsize='16'\nlonglongsize='8'\nlongsize='8'\nlp=''\nlpr=''\nls='ls'\nlseeksize='8'\nlseektype='off_t'\nmail=''\nmailx=''\nmake='make'\nmake_set_make='#'\nmallocobj=''\nmallocsrc=''\nmalloctype='void *'\nman1dir='/opt/perl/man/man1'\nman1direxp='/opt/perl/man/man1'\nman1ext='1'\nman3dir='/opt/perl/man/man3'\nman3direxp='/opt/perl/man/man3'\nman3ext='3'\nmips_type=''\nmistrustnm=''\nmkdir='mkdir'\nmmaptype='void *'\nmodetype='mode_t'\nmore='more'\nmultiarch='undef'\nmv=''\nmyarchname='x86_64-linux'\nmydomain='.yourplace.com'\nmyhostname='yourhost'\nmyuname='linux barba.rous.org 3.16.0-4-amd64 #1 smp debian 3.16.43-2+deb8u2 (2017-06-26) x86_64 gnulinux '\nn='-n'\nneed_va_copy='define'\nnetdb_hlen_type='size_t'\nnetdb_host_type='char *'\nnetdb_name_type='const char *'\nnetdb_net_type='in_addr_t'\nnm='nm'\nnm_opt=''\nnm_so_opt='--dynamic'\nnonxs_ext='Archive/Tar Attribute/Handlers AutoLoader B/Debug CPAN CPAN/Meta CPAN/Meta/Requirements CPAN/Meta/YAML Carp Config/Perl/V Devel/SelfStubber Digest Dumpvalue Env Errno Exporter ExtUtils/CBuilder ExtUtils/Constant ExtUtils/Install ExtUtils/MakeMaker ExtUtils/Manifest ExtUtils/Miniperl ExtUtils/ParseXS File/Fetch File/Find File/Path File/Temp FileCache Filter/Simple Getopt/Long HTTP/Tiny I18N/Collate I18N/LangTags IO/Compress IO/Socket/IP IO/Zlib IPC/Cmd IPC/Open3 JSON/PP Locale/Codes Locale/Maketext Locale/Maketext/Simple Math/BigInt Math/BigRat Math/Complex Memoize Module/CoreList Module/Load Module/Load/Conditional Module/Loaded Module/Metadata NEXT Net/Ping Params/Check Perl/OSType PerlIO/via/QuotedPrint Pod/Checker Pod/Escapes Pod/Functions Pod/Html Pod/Parser Pod/Perldoc Pod/Simple Pod/Usage Safe Search/Dict SelfLoader Term/ANSIColor Term/Cap Term/Complete Term/ReadLine Test Test/Harness Test/Simple Text/Abbrev Text/Balanced Text/ParseWords Text/Tabs Thread/Queue Thread/Semaphore Tie/File Tie/Memoize Tie/RefHash Time/Local XSLoader autodie autouse base bignum constant encoding/warnings experimental if lib libnet parent perlfaq podlators version'\nnroff='nroff'\nnvEUformat='\"E\"'\nnvFUformat='\"F\"'\nnvGUformat='\"G\"'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='53'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvmantbits='52'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.o'\nold_pthread_create_joinable=''\noptimize='-O2'\norderlib='false'\nosname='linux'\nosvers='3.16.0-4-amd64'\notherlibdirs=' '\npackage='perl5'\npager='/usr/bin/less -R'\npasscat='cat /etc/passwd'\npatchlevel='27'\npath_sep=':'\nperl5='/usr/bin/perl'\nperl='perl'\nperl_patchlevel=''\nperl_static_inline='static __inline__'\nperladmin='yourname@yourhost.yourplace.com'\nperllibs='-lpthread -lnsl -ldl -lm -lcrypt -lutil -lc'\nperlpath='/opt/perl/bin/perl5.30.3'\npg='pg'\nphostname=''\npidtype='pid_t'\nplibpth='/lib/x86_64-linux-gnu/4.9 /lib/x86_64-linux-gnu /lib/../lib /usr/lib/x86_64-linux-gnu/4.9 /usr/lib/x86_64-linux-gnu /usr/lib/../lib /lib /usr/lib'\npmake=''\npr=''\nprefix='/opt/perl'\nprefixexp='/opt/perl'\nprivlib='/opt/perl/lib/5.30.3'\nprivlibexp='/opt/perl/lib/5.30.3'\nprocselfexe='\"/proc/self/exe\"'\nptrsize='8'\nquadkind='2'\nquadtype='long'\nrandbits='48'\nrandfunc='Perl_drand48'\nrandom_r_proto='0'\nrandseedtype='U32'\nranlib=':'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nrevision='5'\nrm='rm'\nrm_try='/bin/rm -f try try a.out .out try.[cho] try..o core core.try* try.core*'\nrmail=''\nrun=''\nrunnm='false'\nsGMTIME_max='67768036191676799'\nsGMTIME_min='-62167219200'\nsLOCALTIME_max='67768036191676799'\nsLOCALTIME_min='-62167219125'\nsPRIEUldbl='\"LE\"'\nsPRIFUldbl='\"LF\"'\nsPRIGUldbl='\"LG\"'\nsPRIXU64='\"lX\"'\nsPRId64='\"ld\"'\nsPRIeldbl='\"Le\"'\nsPRIfldbl='\"Lf\"'\nsPRIgldbl='\"Lg\"'\nsPRIi64='\"li\"'\nsPRIo64='\"lo\"'\nsPRIu64='\"lu\"'\nsPRIx64='\"lx\"'\nsSCNfldbl='\"Lf\"'\nsched_yield='sched_yield()'\nscriptdir='/opt/perl/bin'\nscriptdirexp='/opt/perl/bin'\nsed='sed'\nseedfunc='Perl_drand48_init'\nselectminbits='64'\nselecttype='fd_set *'\nsendmail=''\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='/bin/sh'\nshar=''\nsharpbang='#!'\nshmattype='void *'\nshortsize='2'\nshrpenv=''\nshsharp='true'\nsig_count='65'\nsig_name='ZERO HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH IO PWR SYS NUM32 NUM33 RTMIN NUM35 NUM36 NUM37 NUM38 NUM39 NUM40 NUM41 NUM42 NUM43 NUM44 NUM45 NUM46 NUM47 NUM48 NUM49 NUM50 NUM51 NUM52 NUM53 NUM54 NUM55 NUM56 NUM57 NUM58 NUM59 NUM60 NUM61 NUM62 NUM63 RTMAX IOT CLD POLL UNUSED '\nsig_name_init='\"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"TRAP\", \"ABRT\", \"BUS\", \"FPE\", \"KILL\", \"USR1\", \"SEGV\", \"USR2\", \"PIPE\", \"ALRM\", \"TERM\", \"STKFLT\", \"CHLD\", \"CONT\", \"STOP\", \"TSTP\", \"TTIN\", \"TTOU\", \"URG\", \"XCPU\", \"XFSZ\", \"VTALRM\", \"PROF\", \"WINCH\", \"IO\", \"PWR\", \"SYS\", \"NUM32\", \"NUM33\", \"RTMIN\", \"NUM35\", \"NUM36\", \"NUM37\", \"NUM38\", \"NUM39\", \"NUM40\", \"NUM41\", \"NUM42\", \"NUM43\", \"NUM44\", \"NUM45\", \"NUM46\", \"NUM47\", \"NUM48\", \"NUM49\", \"NUM50\", \"NUM51\", \"NUM52\", \"NUM53\", \"NUM54\", \"NUM55\", \"NUM56\", \"NUM57\", \"NUM58\", \"NUM59\", \"NUM60\", \"NUM61\", \"NUM62\", \"NUM63\", \"RTMAX\", \"IOT\", \"CLD\", \"POLL\", \"UNUSED\", 0'\nsig_num='0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 6 17 29 31 '\nsig_num_init='0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 6, 17, 29, 31, 0'\nsig_size='69'\nsignal_t='void'\nsitearch='/opt/perl/lib/site_perl/5.30.3/x86_64-linux'\nsitearchexp='/opt/perl/lib/site_perl/5.30.3/x86_64-linux'\nsitebin='/opt/perl/bin'\nsitebinexp='/opt/perl/bin'\nsitehtml1dir=''\nsitehtml1direxp=''\nsitehtml3dir=''\nsitehtml3direxp=''\nsitelib='/opt/perl/lib/site_perl/5.30.3'\nsitelib_stem='/opt/perl/lib/site_perl'\nsitelibexp='/opt/perl/lib/site_perl/5.30.3'\nsiteman1dir='/opt/perl/man/man1'\nsiteman1direxp='/opt/perl/man/man1'\nsiteman3dir='/opt/perl/man/man3'\nsiteman3direxp='/opt/perl/man/man3'\nsiteprefix='/opt/perl'\nsiteprefixexp='/opt/perl'\nsitescript='/opt/perl/bin'\nsitescriptexp='/opt/perl/bin'\nsizesize='8'\nsizetype='size_t'\nsleep=''\nsmail=''\nso='so'\nsockethdr=''\nsocketlib=''\nsocksizetype='socklen_t'\nsort='sort'\nspackage='Perl5'\nspitshell='cat'\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc='.'\nssizetype='ssize_t'\nst_ino_sign='1'\nst_ino_size='8'\nstartperl='#!/opt/perl/bin/perl5.30.3'\nstartsh='#!/bin/sh'\nstatic_ext=' '\nstdchar='char'\nstdio_base='((fp)->_IO_read_base)'\nstdio_bufsiz='((fp)->_IO_read_end - (fp)->_IO_read_base)'\nstdio_cnt='((fp)->_IO_read_end - (fp)->_IO_read_ptr)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_IO_read_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\nsubmit=''\nsubversion='3'\nsysman='/usr/share/man/man1'\nsysroot=''\ntail=''\ntar=''\ntargetarch=''\ntargetdir=''\ntargetenv=''\ntargethost=''\ntargetmkdir=''\ntargetport=''\ntargetsh='/bin/sh'\ntbl=''\ntee=''\ntest='test'\ntimeincl='/usr/include/x86_64-linux-gnu/sys/time.h '\ntimetype='time_t'\ntmpnam_r_proto='0'\nto=':'\ntouch='touch'\ntr='tr'\ntrnl='\\n'\ntroff=''\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned int'\nu64size='8'\nu64type='unsigned long'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"u\"'\nuidsign='1'\nuidsize='4'\nuidtype='uid_t'\nuname='uname'\nuniq='uniq'\nuquadtype='unsigned long'\nuse5005threads='undef'\nuse64bitall='define'\nuse64bitint='define'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='define'\nusedl='define'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='undef'\nusekernprocpathname='undef'\nuselargefiles='define'\nuselongdouble='undef'\nusemallocwrap='define'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='define'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='false'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nuseversionedarchname='undef'\nusevfork='false'\nusrinc='/usr/include'\nuuname=''\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='8'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvendorarch=''\nvendorarchexp=''\nvendorbin=''\nvendorbinexp=''\nvendorhtml1dir=' '\nvendorhtml1direxp=''\nvendorhtml3dir=' '\nvendorhtml3direxp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorman1dir=' '\nvendorman1direxp=''\nvendorman3dir=' '\nvendorman3direxp=''\nvendorprefix=''\nvendorprefixexp=''\nvendorscript=''\nvendorscriptexp=''\nversion='5.30.3'\nversion_patchlevel_string='version 30 subversion 3'\nversiononly='define'\nvi=''\nxlibpth='/usr/lib/386 /lib/386'\nyacc='yacc'\nyaccflags=''\nzcat=''\nzip='zip'\nPERL_REVISION=5\nPERL_VERSION=30\nPERL_SUBVERSION=3\nPERL_API_REVISION=5\nPERL_API_VERSION=30\nPERL_API_SUBVERSION=0\nPERL_PATCHLEVEL=''\nPERL_CONFIG_SH=true\n: Variables propagated from previous config.sh file.\nlibdb_needs_pthread='N'\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/NetWare/config_H.wc": "/*\n * This file was produced by running the config_h.SH script, which\n * gets its values from undef, which is generally produced by\n * running Configure.\n *\n * Feel free to modify any of this as the need arises.  Note, however,\n * that running config_h.SH again will wipe out any changes you've made.\n * For a more permanent change edit undef and rerun config_h.SH.\n *\n * $Id: Config_h.U,v 3.0.1.5 1997/02/28 14:57:43 ram Exp $\n */\n\n/*\n * Package name      : perl5\n * Source directory  : \n * Configuration time: Thu Jun 21 17:44:02 2001\n * Configured by     : Administrator\n * Target system     : \n */\n\n#ifndef _config_h_\n#define _config_h_\n\n/* LOC_SED:\n *\tThis symbol holds the complete pathname to the sed program.\n */\n#define LOC_SED \t\"\"\t/**/\n\n/* HAS_AINTL:\n *\tThis symbol, if defined, indicates that the aintl routine is\n *\tavailable.  If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_AINTL\t\t/ **/\n\n/* HAS_ALARM:\n *\tThis symbol, if defined, indicates that the alarm routine is\n *\tavailable.\n */\n/*#define HAS_ALARM\t\t/**/\n\n/* HASATTRIBUTE:\n *\tThis symbol indicates the C compiler can check for function attributes,\n *\tsuch as printf formats. This is normally only supported by GNU cc.\n */\n/*#define HASATTRIBUTE \t/**/\n#ifndef HASATTRIBUTE\n#ifdef __attribute__\n#undef __attribute__\n#endif\n#define __attribute__(_arg_)\n#endif\n\n/* HAS_CHOWN:\n *\tThis symbol, if defined, indicates that the chown routine is\n *\tavailable.\n */\n/*#define HAS_CHOWN\t\t/**/\n\n/* HAS_CHROOT:\n *\tThis symbol, if defined, indicates that the chroot routine is\n *\tavailable.\n */\n/*#define HAS_CHROOT\t\t/**/\n\n/* HAS_CHSIZE:\n *\tThis symbol, if defined, indicates that the chsize routine is available\n *\tto truncate files.  You might need a -lx to get this routine.\n */\n#define\tHAS_CHSIZE\t\t/**/\n\n/* HAS_CRYPT:\n *\tThis symbol, if defined, indicates that the crypt routine is available\n *\tto encrypt passwords and the like.\n */\n/*#define HAS_CRYPT\t\t/**/\n\n/* HAS_CUSERID:\n *\tThis symbol, if defined, indicates that the cuserid routine is\n *\tavailable to get character login names.\n */\n/*#define HAS_CUSERID\t\t/**/\n\n/* HAS_DIFFTIME:\n *\tThis symbol, if defined, indicates that the difftime routine is\n *\tavailable.\n */\n#define HAS_DIFFTIME\t\t/**/\n\n/* HAS_DLERROR:\n *\tThis symbol, if defined, indicates that the dlerror routine is\n *\tavailable to return a string describing the last error that\n *\toccurred from a call to dlopen(), dlclose() or dlsym().\n */\n#define HAS_DLERROR\t/**/\n\n/* HAS_DUP2:\n *\tThis symbol, if defined, indicates that the dup2 routine is\n *\tavailable to duplicate file descriptors.\n */\n#define HAS_DUP2\t/**/\n\n/* HAS_FAST_STDIO:\n *\tThis symbol, if defined, indicates that the \"fast stdio\"\n *\tis available to manipulate the stdio buffers directly.\n */\n/*#define HAS_FAST_STDIO\t\t/**/\n\n/* HAS_FCHDIR:\n *\tThis symbol, if defined, indicates that the fchdir routine is\n *\tavailable to change directory using a file descriptor.\n */\n/*#define HAS_FCHDIR\t\t/**/\n\n/* HAS_FCHMOD:\n *\tThis symbol, if defined, indicates that the fchmod routine is available\n *\tto change mode of opened files.  If unavailable, use chmod().\n */\n/*#define HAS_FCHMOD\t\t/**/\n\n/* HAS_FCHOWN:\n *\tThis symbol, if defined, indicates that the fchown routine is available\n *\tto change ownership of opened files.  If unavailable, use chown().\n */\n/*#define HAS_FCHOWN\t\t/**/\n\n/* HAS_FCNTL:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe fcntl() function exists.\n */\n/*#define HAS_FCNTL\t\t/**/\n\n/* HAS_FGETPOS:\n *\tThis symbol, if defined, indicates that the fgetpos routine is\n *\tavailable to get the file position indicator, similar to ftell().\n */\n#define HAS_FGETPOS\t/**/\n\n/* HAS_FLOCK:\n *\tThis symbol, if defined, indicates that the flock routine is\n *\tavailable to do file locking.\n */\n#define HAS_FLOCK\t\t/**/\n\n/* HAS_FORK:\n *\tThis symbol, if defined, indicates that the fork routine is\n *\tavailable.\n */\n/*#define HAS_FORK\t\t/**/\n\n/* HAS_FSETPOS:\n *\tThis symbol, if defined, indicates that the fsetpos routine is\n *\tavailable to set the file position indicator, similar to fseek().\n */\n#define HAS_FSETPOS\t/**/\n\n/* HAS_GETTIMEOFDAY:\n *\tThis symbol, if defined, indicates that the gettimeofday() system\n *\tcall is available for a sub-second accuracy clock. Usually, the file\n *\t<sys/resource.h> needs to be included (see I_SYS_RESOURCE).\n *\tThe type \"Timeval\" should be used to refer to \"struct timeval\".\n */\n/*#define HAS_GETTIMEOFDAY\t/**/\n#ifdef HAS_GETTIMEOFDAY\n#define Timeval struct timeval\t/* Structure used by gettimeofday() */\n#endif\n\n/* HAS_GETGROUPS:\n *\tThis symbol, if defined, indicates that the getgroups() routine is\n *\tavailable to get the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_GETGROUPS\t\t/**/\n\n/* HAS_GETLOGIN:\n *\tThis symbol, if defined, indicates that the getlogin routine is\n *\tavailable to get the login name.\n */\n#define HAS_GETLOGIN\t\t/**/\n\n/* HAS_GETPGID:\n *\tThis symbol, if defined, indicates to the C program that \n *\tthe getpgid(pid) function is available to get the\n *\tprocess group id.\n */\n/*#define HAS_GETPGID\t\t/**/\n\n/* HAS_GETPGRP2:\n *\tThis symbol, if defined, indicates that the getpgrp2() (as in DG/UX)\n *\troutine is available to get the current process group.\n */\n/*#define HAS_GETPGRP2\t\t/**/\n\n/* HAS_GETPPID:\n *\tThis symbol, if defined, indicates that the getppid routine is\n *\tavailable to get the parent process ID.\n */\n/*#define HAS_GETPPID\t\t/**/\n\n/* HAS_GETPRIORITY:\n *\tThis symbol, if defined, indicates that the getpriority routine is\n *\tavailable to get a process's priority.\n */\n/*#define HAS_GETPRIORITY\t\t/**/\n\n/* HAS_INET_ATON:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tinet_aton() function is available to parse IP address \"dotted-quad\"\n *\tstrings.\n */\n/*#define HAS_INET_ATON\t\t/**/\n\n/* HAS_KILLPG:\n *\tThis symbol, if defined, indicates that the killpg routine is available\n *\tto kill process groups.  If unavailable, you probably should use kill\n *\twith a negative process number.\n */\n/*#define HAS_KILLPG\t/**/\n\n/* HAS_LINK:\n *\tThis symbol, if defined, indicates that the link routine is\n *\tavailable to create hard links.\n */\n#define HAS_LINK\t/**/\n\n/* HAS_LOCALECONV:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable for numeric and monetary formatting conventions.\n */\n#define HAS_LOCALECONV\t/**/\n\n/* HAS_LOCKF:\n *\tThis symbol, if defined, indicates that the lockf routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_LOCKF\t\t/**/\n\n/* HAS_LSTAT:\n *\tThis symbol, if defined, indicates that the lstat routine is\n *\tavailable to do file stats on symbolic links.\n */\n/*#define HAS_LSTAT\t\t/**/\n\n/* HAS_MBLEN:\n *\tThis symbol, if defined, indicates that the mblen routine is available\n *\tto find the number of bytes in a multibye character.\n */\n#define HAS_MBLEN\t\t/**/\n\n/* HAS_MBSTOWCS:\n *\tThis symbol, if defined, indicates that the mbstowcs routine is\n *\tavailable to covert a multibyte string into a wide character string.\n */\n#define\tHAS_MBSTOWCS\t\t/**/\n\n/* HAS_MBTOWC:\n *\tThis symbol, if defined, indicates that the mbtowc routine is available\n *\tto covert a multibyte to a wide character.\n */\n#define HAS_MBTOWC\t\t/**/\n\n/* HAS_MKDIR:\n *\tThis symbol, if defined, indicates that the mkdir routine is available\n *\tto create directories.  Otherwise you should fork off a new process to\n *\texec /bin/mkdir.\n */\n#define HAS_MKDIR\t\t/**/\n\n/* HAS_MKFIFO:\n *\tThis symbol, if defined, indicates that the mkfifo routine is\n *\tavailable to create FIFOs. Otherwise, mknod should be able to\n *\tdo it for you. However, if mkfifo is there, mknod might require\n *\tsuper-user privileges which mkfifo will not.\n */\n/*#define HAS_MKFIFO\t\t/**/\n\n/* HAS_MKTIME:\n *\tThis symbol, if defined, indicates that the mktime routine is\n *\tavailable.\n */\n#define HAS_MKTIME\t\t/**/\n\n/* HAS_MSYNC:\n *\tThis symbol, if defined, indicates that the msync system call is\n *\tavailable to synchronize a mapped file.\n */\n/*#define HAS_MSYNC\t\t/**/\n\n/* HAS_MUNMAP:\n *\tThis symbol, if defined, indicates that the munmap system call is\n *\tavailable to unmap a region, usually mapped by mmap().\n */\n/*#define HAS_MUNMAP\t\t/**/\n\n/* HAS_NICE:\n *\tThis symbol, if defined, indicates that the nice routine is\n *\tavailable.\n */\n/*#define HAS_NICE\t\t/**/\n\n/* HAS_PATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given filename.\n */\n/* HAS_FPATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given open file descriptor.\n */\n/*#define HAS_PATHCONF\t\t/**/\n/*#define HAS_FPATHCONF\t\t/**/\n\n/* HAS_PAUSE:\n *\tThis symbol, if defined, indicates that the pause routine is\n *\tavailable to suspend a process until a signal is received.\n */\n/*#define HAS_PAUSE\t\t/**/\n\n/* HAS_PIPE:\n *\tThis symbol, if defined, indicates that the pipe routine is\n *\tavailable to create an inter-process channel.\n */\n#define HAS_PIPE\t\t/**/\n\n/* HAS_POLL:\n *\tThis symbol, if defined, indicates that the poll routine is\n *\tavailable to poll active file descriptors. You may safely\n *\tinclude <poll.h> when this symbol is defined.\n */\n/*#define HAS_POLL\t\t/**/\n\n/* HAS_READDIR:\n *\tThis symbol, if defined, indicates that the readdir routine is\n *\tavailable to read directory entries. You may have to include\n *\t<dirent.h>. See I_DIRENT.\n */\n#define HAS_READDIR\t\t/**/\n\n/* HAS_SEEKDIR:\n *\tThis symbol, if defined, indicates that the seekdir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_SEEKDIR\t\t/**/\n\n/* HAS_TELLDIR:\n *\tThis symbol, if defined, indicates that the telldir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_TELLDIR\t\t/**/\n\n/* HAS_REWINDDIR:\n *\tThis symbol, if defined, indicates that the rewinddir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_REWINDDIR\t\t/**/\n\n/* HAS_READLINK:\n *\tThis symbol, if defined, indicates that the readlink routine is\n *\tavailable to read the value of a symbolic link.\n */\n/*#define HAS_READLINK\t\t/**/\n\n/* HAS_RENAME:\n *\tThis symbol, if defined, indicates that the rename routine is available\n *\tto rename files.  Otherwise you should do the unlink(), link(), unlink()\n *\ttrick.\n */\n#define HAS_RENAME\t/**/\n\n/* HAS_RMDIR:\n *\tThis symbol, if defined, indicates that the rmdir routine is\n *\tavailable to remove directories. Otherwise you should fork off a\n *\tnew process to exec /bin/rmdir.\n */\n#define HAS_RMDIR\t\t/**/\n\n/* HAS_SELECT:\n *\tThis symbol, if defined, indicates that the select routine is\n *\tavailable to select active file descriptors. If the timeout field\n *\tis used, <sys/time.h> may need to be included.\n */\n#define HAS_SELECT\t/**/\n\n/* HAS_SETEGID:\n *\tThis symbol, if defined, indicates that the setegid routine is available\n *\tto change the effective gid of the current program.\n */\n/*#define HAS_SETEGID\t\t/**/\n\n/* HAS_SETEUID:\n *\tThis symbol, if defined, indicates that the seteuid routine is available\n *\tto change the effective uid of the current program.\n */\n/*#define HAS_SETEUID\t\t/**/\n\n/* HAS_SETLINEBUF:\n *\tThis symbol, if defined, indicates that the setlinebuf routine is\n *\tavailable to change stderr or stdout from block-buffered or unbuffered\n *\tto a line-buffered mode.\n */\n/*#define HAS_SETLINEBUF\t\t/**/\n\n/* HAS_SETLOCALE:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable to handle locale-specific ctype implementations.\n */\n#define HAS_SETLOCALE\t/**/\n\n/* HAS_SETPGID:\n *\tThis symbol, if defined, indicates that the setpgid(pid, gpid)\n *\troutine is available to set process group ID.\n */\n/*#define HAS_SETPGID\t/**/\n\n/* HAS_SETPGRP2:\n *\tThis symbol, if defined, indicates that the setpgrp2() (as in DG/UX)\n *\troutine is available to set the current process group.\n */\n/*#define HAS_SETPGRP2\t\t/**/\n\n/* HAS_SETPRIORITY:\n *\tThis symbol, if defined, indicates that the setpriority routine is\n *\tavailable to set a process's priority.\n */\n/*#define HAS_SETPRIORITY\t\t/**/\n\n/* HAS_SETREGID:\n *\tThis symbol, if defined, indicates that the setregid routine is\n *\tavailable to change the real and effective gid of the current\n *\tprocess.\n */\n/* HAS_SETRESGID:\n *\tThis symbol, if defined, indicates that the setresgid routine is\n *\tavailable to change the real, effective and saved gid of the current\n *\tprocess.\n */\n/*#define HAS_SETREGID\t\t/**/\n/*#define HAS_SETRESGID\t\t/**/\n\n/* HAS_SETREUID:\n *\tThis symbol, if defined, indicates that the setreuid routine is\n *\tavailable to change the real and effective uid of the current\n *\tprocess.\n */\n/* HAS_SETRESUID:\n *\tThis symbol, if defined, indicates that the setresuid routine is\n *\tavailable to change the real, effective and saved uid of the current\n *\tprocess.\n */\n/*#define HAS_SETREUID\t\t/**/\n/*#define HAS_SETRESUID\t\t/**/\n\n/* HAS_SETRGID:\n *\tThis symbol, if defined, indicates that the setrgid routine is available\n *\tto change the real gid of the current program.\n */\n/*#define HAS_SETRGID\t\t/**/\n\n/* HAS_SETRUID:\n *\tThis symbol, if defined, indicates that the setruid routine is available\n *\tto change the real uid of the current program.\n */\n/*#define HAS_SETRUID\t\t/**/\n\n/* HAS_SETSID:\n *\tThis symbol, if defined, indicates that the setsid routine is\n *\tavailable to set the process group ID.\n */\n/*#define HAS_SETSID\t/**/\n\n/* Shmat_t:\n *\tThis symbol holds the return type of the shmat() system call.\n *\tUsually set to 'void *' or 'char *'.\n */\n/* HAS_SHMAT_PROTOTYPE:\n *\tThis symbol, if defined, indicates that the sys/shm.h includes\n *\ta prototype for shmat().  Otherwise, it is up to the program to\n *\tguess one.  Shmat_t shmat(int, Shmat_t, int) is a good guess,\n *\tbut not always right so it should be emitted by the program only\n *\twhen HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.\n */\n#define Shmat_t void *\t/**/\n/*#define HAS_SHMAT_PROTOTYPE\t/**/\n\n/* HAS_STRCOLL:\n *\tThis symbol, if defined, indicates that the strcoll routine is\n *\tavailable to compare strings using collating information.\n */\n#define HAS_STRCOLL\t/**/\n\n/* HAS_STRTOD:\n *\tThis symbol, if defined, indicates that the strtod routine is\n *\tavailable to provide better numeric string conversion than atof().\n */\n#define HAS_STRTOD\t/**/\n\n/* HAS_STRTOL:\n *\tThis symbol, if defined, indicates that the strtol routine is available\n *\tto provide better numeric string conversion than atoi() and friends.\n */\n#define HAS_STRTOL\t/**/\n\n/* HAS_STRXFRM:\n *\tThis symbol, if defined, indicates that the strxfrm() routine is\n *\tavailable to transform strings.\n */\n#define HAS_STRXFRM\t/**/\n\n/* HAS_SYMLINK:\n *\tThis symbol, if defined, indicates that the symlink routine is available\n *\tto create symbolic links.\n */\n/*#define HAS_SYMLINK\t/**/\n\n/* HAS_SYSCALL:\n *\tThis symbol, if defined, indicates that the syscall routine is\n *\tavailable to call arbitrary system calls. If undefined, that's tough.\n */\n/*#define HAS_SYSCALL\t/**/\n\n/* HAS_SYSCONF:\n *\tThis symbol, if defined, indicates that sysconf() is available\n *\tto determine system related limits and options.\n */\n/*#define HAS_SYSCONF\t/**/\n\n/* HAS_SYSTEM:\n *\tThis symbol, if defined, indicates that the system routine is\n *\tavailable to issue a shell command.\n */\n#define HAS_SYSTEM\t/**/\n\n/* HAS_TCGETPGRP:\n *\tThis symbol, if defined, indicates that the tcgetpgrp routine is\n *\tavailable to get foreground process group ID.\n */\n/*#define HAS_TCGETPGRP\t\t/**/\n\n/* HAS_TCSETPGRP:\n *\tThis symbol, if defined, indicates that the tcsetpgrp routine is\n *\tavailable to set foreground process group ID.\n */\n/*#define HAS_TCSETPGRP\t\t/**/\n\n/* HAS_TRUNCATE:\n *\tThis symbol, if defined, indicates that the truncate routine is\n *\tavailable to truncate files.\n */\n/*#define HAS_TRUNCATE\t/**/\n\n/* HAS_TZNAME:\n *\tThis symbol, if defined, indicates that the tzname[] array is\n *\tavailable to access timezone names.\n */\n#define HAS_TZNAME\t\t/**/\n\n/* HAS_UMASK:\n *\tThis symbol, if defined, indicates that the umask routine is\n *\tavailable to set and get the value of the file creation mask.\n */\n#define HAS_UMASK\t\t/**/\n\n/* HAS_USLEEP:\n *\tThis symbol, if defined, indicates that the usleep routine is\n *\tavailable to let the process sleep on a sub-second accuracy.\n */\n/*#define HAS_USLEEP\t\t/**/\n\n/* HAS_WAIT4:\n *\tThis symbol, if defined, indicates that wait4() exists.\n */\n/*#define HAS_WAIT4\t/**/\n\n/* HAS_WAITPID:\n *\tThis symbol, if defined, indicates that the waitpid routine is\n *\tavailable to wait for child process.\n */\n#define HAS_WAITPID\t/**/\n\n/* HAS_WCSTOMBS:\n *\tThis symbol, if defined, indicates that the wcstombs routine is\n *\tavailable to convert wide character strings to multibyte strings.\n */\n#define HAS_WCSTOMBS\t/**/\n\n/* HAS_WCTOMB:\n *\tThis symbol, if defined, indicates that the wctomb routine is available\n *\tto covert a wide character to a multibyte.\n */\n#define HAS_WCTOMB\t\t/**/\n\n/* I_ARPA_INET:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <arpa/inet.h> to get inet_addr and friends declarations.\n */\n#define\tI_ARPA_INET\t\t/**/\n\n/* I_DBM:\n *\tThis symbol, if defined, indicates that <dbm.h> exists and should\n *\tbe included.\n */\n/* I_RPCSVC_DBM:\n *\tThis symbol, if defined, indicates that <rpcsvc/dbm.h> exists and\n *\tshould be included.\n */\n/*#define I_DBM\t/**/\n#define I_RPCSVC_DBM\t/**/\n\n/* I_DIRENT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <dirent.h>. Using this symbol also triggers the definition\n *\tof the Direntry_t define which ends up being 'struct dirent' or\n *\t'struct direct' depending on the availability of <dirent.h>.\n */\n/* DIRNAMLEN:\n *\tThis symbol, if defined, indicates to the C program that the length\n *\tof directory entry names is provided by a d_namlen field.  Otherwise\n *\tyou need to do strlen() on the d_name field.\n */\n/* Direntry_t:\n *\tThis symbol is set to 'struct direct' or 'struct dirent' depending on\n *\twhether dirent is available or not. You should use this pseudo type to\n *\tportably declare your directory entries.\n */\n#define I_DIRENT\t\t/**/\n/*#define DIRNAMLEN\t/**/\n#define Direntry_t DIR\n\n/* I_DLFCN:\n *\tThis symbol, if defined, indicates that <dlfcn.h> exists and should\n *\tbe included.\n */\n#define I_DLFCN\t\t/**/\n\n/* I_FCNTL:\n *\tThis manifest constant tells the C program to include <fcntl.h>.\n */\n#define I_FCNTL\t/**/\n\n/* I_LOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <locale.h>.\n */\n#define\tI_LOCALE\t\t/**/\n\n/* I_NDBM:\n *\tThis symbol, if defined, indicates that <ndbm.h> exists and should\n *\tbe included.\n */\n/*#define I_NDBM\t/**/\n\n/* I_NET_ERRNO:\n *\tThis symbol, if defined, indicates that <net/errno.h> exists and \n *\tshould be included.\n */\n/*#define I_NET_ERRNO\t\t/**/\n\n/* I_NETINET_IN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/in.h>. Otherwise, you may try <sys/in.h>.\n */\n#define I_NETINET_IN\t/**/\n\n/* I_SYS_DIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/dir.h>.\n */\n/*#define I_SYS_DIR\t\t/**/\n\n/* I_SYS_FILE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/file.h> to get definition of R_OK and friends.\n */\n/*#define I_SYS_FILE\t\t/**/\n\n/* I_SYS_IOCTL:\n *\tThis symbol, if defined, indicates that <sys/ioctl.h> exists and should\n *\tbe included. Otherwise, include <sgtty.h> or <termio.h>.\n */\n/* I_SYS_SOCKIO:\n *\tThis symbol, if defined, indicates the <sys/sockio.h> should be included\n *\tto get socket ioctl options, like SIOCATMARK.\n */\n#define\tI_SYS_IOCTL\t\t/**/\n#define I_SYS_SOCKIO\t/**/\n\n/* I_SYS_NDIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/ndir.h>.\n */\n/*#define I_SYS_NDIR\t/**/\n\n/* I_SYS_PARAM:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/param.h>.\n */\n/*#define I_SYS_PARAM\t\t/**/\n\n/* I_SYS_RESOURCE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/resource.h>.\n */\n/*#define I_SYS_RESOURCE\t\t/**/\n\n/* I_SYS_SELECT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/select.h> in order to get definition of struct timeval.\n */\n/*#define I_SYS_SELECT\t/**/\n\n/* I_SYS_STAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/stat.h>.\n */\n#define\tI_SYS_STAT\t\t/**/\n\n/* I_SYS_TIMES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/times.h>.\n */\n/*#define\tI_SYS_TIMES\t\t/**/\n\n/* I_SYS_TYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/types.h>.\n */\n#define\tI_SYS_TYPES\t\t/**/\n\n/* I_SYS_UN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/un.h> to get UNIX domain socket definitions.\n */\n/*#define I_SYS_UN\t\t/**/\n\n/* I_SYS_WAIT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/wait.h>.\n */\n/*#define I_SYS_WAIT\t/**/\n\n/* I_TERMIO:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<termio.h> rather than <sgtty.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/* I_TERMIOS:\n *\tThis symbol, if defined, indicates that the program should include\n *\tthe POSIX termios.h rather than sgtty.h or termio.h.\n *\tThere are also differences in the ioctl() calls that depend on the\n *\tvalue of this symbol.\n */\n/* I_SGTTY:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<sgtty.h> rather than <termio.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/*#define I_TERMIO\t\t/**/\n/*#define I_TERMIOS\t\t/**/\n/*#define I_SGTTY\t\t/**/\n\n/* I_UNISTD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <unistd.h>.\n */\n/*#define I_UNISTD\t\t/**/\n\n/* I_UTIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <utime.h>.\n */\n#define I_UTIME\t\t/**/\n\n/* I_VFORK:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude vfork.h.\n */\n/*#define I_VFORK\t/**/\n\n/* SH_PATH:\n *\tThis symbol contains the full pathname to the shell used on this\n *\ton this system to execute Bourne shell scripts.  Usually, this will be\n *\t/bin/sh, though it's possible that some systems will have /bin/ksh,\n *\t/bin/pdksh, /bin/ash, /bin/bash, or even something such as\n *\tD:/bin/sh.exe.\n */\n#define SH_PATH \"cmd /x /c\"  /**/\n\n/* INTSIZE:\n *\tThis symbol contains the value of sizeof(int) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* LONGSIZE:\n *\tThis symbol contains the value of sizeof(long) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* SHORTSIZE:\n *\tThis symbol contains the value of sizeof(short) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n#define INTSIZE 4\t\t/**/\n#define LONGSIZE 4\t\t/**/\n#define SHORTSIZE 2\t\t/**/\n\n/* MULTIARCH:\n *\tThis symbol, if defined, signifies that the build\n *\tprocess will produce some binary files that are going to be\n *\tused in a cross-platform environment.  This is the case for\n *\texample with the NeXT \"fat\" binaries that contain executables\n *\tfor several CPUs.\n */\n/*#define MULTIARCH\t\t/**/\n\n/* HAS_QUAD:\n *\tThis symbol, if defined, tells that there's a 64-bit integer type,\n *\tQuad_t, and its unsigned counterpart, Uquad_t. QUADKIND will be one\n *\tof QUAD_IS_INT, QUAD_IS_LONG, QUAD_IS_LONG_LONG, or QUAD_IS_INT64_T.\n */\n/*#define HAS_QUAD\t/**/\n#ifdef HAS_QUAD\n#   define Quad_t __int64\t/**/\n#   define Uquad_t unsigned __int64\t/**/\n#   define QUADKIND 5\t/**/\n#   define QUAD_IS_INT\t1\n#   define QUAD_IS_LONG\t2\n#   define QUAD_IS_LONG_LONG\t3\n#   define QUAD_IS_INT64_T\t4\n#endif\n\n/* HAS_ACCESSX:\n *\tThis symbol, if defined, indicates that the accessx routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_ACCESSX\t\t/**/\n\n/* HAS_EACCESS:\n *\tThis symbol, if defined, indicates that the eaccess routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_EACCESS\t\t/**/\n\n/* I_SYS_ACCESS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/access.h>.\n */\n/*#define   I_SYS_ACCESS                /**/\n\n/* I_SYS_SECURITY:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/security.h>.\n */\n/*#define   I_SYS_SECURITY\t/**/\n\n/* OSNAME:\n *\tThis symbol contains the name of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n/* OSVERS:\n *\tThis symbol contains the version of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n#define OSNAME \"NetWare\"\t\t/**/\n#define OSVERS \"5.x\"\t\t/**/\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble, or a long double when applicable. Usual values are 2,\n *\t4 and 8. The default is eight, for safety.\n */\n#if defined(MULTIARCH)\n#  define MEM_ALIGNBYTES 8\n#else\n#define MEM_ALIGNBYTES 8\n#endif\n\n/* ARCHLIB:\n *\tThis variable, if defined, holds the name of the directory in\n *\twhich the user wants to put architecture-dependent public\n *\tlibrary files for perl5.  It is most often a local directory\n *\tsuch as /usr/local/lib.  Programs using this variable must be\n *\tprepared to deal with filename expansion.  If ARCHLIB is the\n *\tsame as PRIVLIB, it is not defined, since presumably the\n *\tprogram already searches PRIVLIB.\n */\n/* ARCHLIB_EXP:\n *\tThis symbol contains the ~name expanded version of ARCHLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define ARCHLIB \"c:\\\\perl\\\\5.30.3\\\\lib\\\\NetWare-x86-multi-thread\"\t\t/**/\n/*#define ARCHLIB_EXP \"\"\t/**/\n\n/* ARCHNAME:\n *\tThis symbol holds a string representing the architecture name.\n *\tIt may be used to construct an architecture-dependant pathname\n *\twhere library files may be held under a private library, for\n *\tinstance.\n */\n#define ARCHNAME \"NetWare-x86-multi-thread\"\t\t/**/\n\n/* HAS_ATOLF:\n *\tThis symbol, if defined, indicates that the atolf routine is\n *\tavailable to convert strings into long doubles.\n */\n/*#define HAS_ATOLF\t\t/**/\n\n/* HAS_ATOLL:\n *\tThis symbol, if defined, indicates that the atoll routine is\n *\tavailable to convert strings into long longs.\n */\n/*#define HAS_ATOLL\t\t/**/\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n#define BIN \"c:\\\\perl\\\\5.30.3\\\\bin\\\\NetWare-x86-multi-thread\"\t/**/\n#define BIN_EXP \"c:\\\\perl\\\\5.30.3\\\\bin\\\\NetWare-x86-multi-thread\"\t/**/\n\n/* BYTEORDER:\n *\tThis symbol holds the hexadecimal constant defined in byteorder,\n *\ti.e. 0x1234 or 0x4321, etc...\n *\tIf the compiler supports cross-compiling or multiple-architecture\n *\tbinaries (eg. on NeXT systems), use compiler-defined macros to\n *\tdetermine the byte order.\n *\tOn NeXT 3.2 (and greater), you can build \"Fat\" Multiple Architecture\n *\tBinaries (MAB) on either big endian or little endian machines.\n *\tThe endian-ness is available at compile-time.  This only matters\n *\tfor perl, where the config.h can be generated and installed on \n *\tone system, and used by a different architecture to build an\n *\textension.  Older versions of NeXT that might not have\n *\tdefined either *_ENDIAN__ were all on Motorola 680x0 series,\n *\tso the default case (for NeXT) is big endian to catch them. \n *\tThis might matter for NeXT 3.0.\n */\n#if defined(MULTIARCH)\n#  ifdef __LITTLE_ENDIAN__\n#    if LONGSIZE == 4\n#      define BYTEORDER 0x1234\n#    else\n#      if LONGSIZE == 8\n#        define BYTEORDER 0x12345678\n#      endif\n#    endif\n#  else\n#    ifdef __BIG_ENDIAN__\n#      if LONGSIZE == 4\n#        define BYTEORDER 0x4321\n#      else\n#        if LONGSIZE == 8\n#          define BYTEORDER 0x87654321\n#        endif\n#      endif\n#    endif\n#  endif\n#  if !defined(BYTEORDER) && (defined(NeXT) || defined(__NeXT__))\n#    define BYTEORDER 0x4321\n#  endif\n#else\n#define BYTEORDER 0x1234\t/* large digits for MSB */\n#endif /* NeXT */\n\n/* CAT2:\n *\tThis macro catenates 2 tokens together.\n */\n/* STRINGIFY:\n *\tThis macro surrounds its token with double quotes.\n */\n#if 42 == 1\n#define CAT2(a,b)\ta/**/b\n#define STRINGIFY(a)\t\"a\"\n\t\t/* If you can get stringification with catify, tell me how! */\n#endif\n#if 42 == 42\n#define PeRl_CaTiFy(a, b)\ta ## b\t\n#define PeRl_StGiFy(a)\t#a\n/* the additional level of indirection enables these macros to be\n * used as arguments to other macros.  See K&R 2nd ed., page 231. */\n#define CAT2(a,b)\tPeRl_CaTiFy(a,b)\n#define StGiFy(a)\tPeRl_StGiFy(a)\n#define STRINGIFY(a)\tPeRl_StGiFy(a)\n#endif\n#if 42 != 1 && 42 != 42\n#   include \"Bletch: How does this C preprocessor concatenate tokens?\"\n#endif\n\n/* CPPSTDIN:\n *\tThis symbol contains the first part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.\t Typical value of \"cc -E\" or \"/lib/cpp\", but it can also\n *\tcall a wrapper. See CPPRUN.\n */\n/* CPPMINUS:\n *\tThis symbol contains the second part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  This symbol will have the value \"-\" if CPPSTDIN needs a minus\n *\tto specify standard input, otherwise the value is \"\".\n */\n/* CPPRUN:\n *\tThis symbol contains the string which will invoke a C preprocessor on\n *\tthe standard input and produce to standard output. It needs to end\n *\twith CPPLAST, after all other preprocessor flags have been specified.\n *\tThe main difference with CPPSTDIN is that this program will never be a\n *\tpointer to a shell wrapper, i.e. it will be empty if no preprocessor is\n *\tavailable directly to the user. Note that it may well be different from\n *\tthe preprocessor used to compile the C program.\n */\n/* CPPLAST:\n *\tThis symbol is intended to be used along with CPPRUN in the same manner\n *\tsymbol CPPMINUS is used with CPPSTDIN. It contains either \"-\" or \"\".\n */\n#define CPPSTDIN \"cl -nologo -E\"\n#define CPPMINUS \"\"\n#define CPPRUN \"cl -nologo -E\"\n#define CPPLAST \"\"\n\n/* HAS__FWALK:\n *\tThis symbol, if defined, indicates that the _fwalk system call is\n *\tavailable to apply a function to all the file handles.\n */\n/*#define HAS__FWALK\t\t/**/\n\n/* HAS_ACCESS:\n *\tThis manifest constant lets the C program know that the access()\n *\tsystem call is available to check for accessibility using real UID/GID.\n *\t(always present on UNIX.)\n */\n#define HAS_ACCESS\t\t/**/\n\n/* CASTI32:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tor large floating point numbers to 32-bit ints.\n */\n/*#define\tCASTI32\t\t/**/\n\n/* CASTNEGFLOAT:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tnumbers to unsigned longs, ints and shorts.\n */\n/* CASTFLAGS:\n *\tThis symbol contains flags that say what difficulties the compiler\n *\thas casting odd floating values to unsigned long:\n *\t\t0 = ok\n *\t\t1 = couldn't cast < 0\n *\t\t2 = couldn't cast >= 0x80000000\n *\t\t4 = couldn't cast in argument expression list\n */\n#define\tCASTNEGFLOAT\t\t/**/\n#define CASTFLAGS 0\t\t/**/\n\n/* VOID_CLOSEDIR:\n *\tThis symbol, if defined, indicates that the closedir() routine\n *\tdoes not return a value.\n */\n/*#define VOID_CLOSEDIR\t\t/**/\n\n/* HAS_STRUCT_CMSGHDR:\n *\tThis symbol, if defined, indicates that the struct cmsghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_CMSGHDR\t/**/\n\n/* HAS_CSH:\n *\tThis symbol, if defined, indicates that the C-shell exists.\n */\n/* CSH:\n *\tThis symbol, if defined, contains the full pathname of csh.\n */\n/*#define HAS_CSH\t\t/**/\n#ifdef HAS_CSH\n#define CSH \"\"\t/**/\n#endif\n\n/* DLSYM_NEEDS_UNDERSCORE:\n *\tThis symbol, if defined, indicates that we need to prepend an\n *\tunderscore to the symbol name before calling dlsym().  This only\n *\tmakes sense if you *have* dlsym, which we will presume is the\n *\tcase if you're using dl_dlopen.xs.\n */\n/*#define \tDLSYM_NEEDS_UNDERSCORE \t/**/\n\n/* HAS_DRAND48_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the drand48() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern double drand48(void);\n */\n/*#define\tHAS_DRAND48_PROTO\t/**/\n\n/* HAS_ENDGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the group database.\n */\n/*#define HAS_ENDGRENT\t\t/**/\n\n/* HAS_ENDHOSTENT:\n *\tThis symbol, if defined, indicates that the endhostent() routine is\n *\tavailable to close whatever was being used for host queries.\n */\n/*#define HAS_ENDHOSTENT\t\t/**/\n\n/* HAS_ENDNETENT:\n *\tThis symbol, if defined, indicates that the endnetent() routine is\n *\tavailable to close whatever was being used for network queries.\n */\n/*#define HAS_ENDNETENT\t\t/**/\n\n/* HAS_ENDPROTOENT:\n *\tThis symbol, if defined, indicates that the endprotoent() routine is\n *\tavailable to close whatever was being used for protocol queries.\n */\n/*#define HAS_ENDPROTOENT\t\t/**/\n\n/* HAS_ENDPWENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the passwd database.\n */\n/*#define HAS_ENDPWENT\t\t/**/\n\n/* HAS_ENDSERVENT:\n *\tThis symbol, if defined, indicates that the endservent() routine is\n *\tavailable to close whatever was being used for service queries.\n */\n/*#define HAS_ENDSERVENT\t\t/**/\n\n/* FCNTL_CAN_LOCK:\n *\tThis symbol, if defined, indicates that fcntl() can be used\n *\tfor file locking.  Normally on Unix systems this is defined.\n *\tIt may be undefined on VMS.\n */\n/*#define FCNTL_CAN_LOCK\t\t/**/\n\n/* HAS_FD_SET:\n *\tThis symbol, when defined, indicates presence of the fd_set typedef\n *\tin <sys/types.h>\n */\n#define HAS_FD_SET\t/**/\n\n/* FLEXFILENAMES:\n *\tThis symbol, if defined, indicates that the system supports filenames\n *\tlonger than 14 characters.\n */\n#define\tFLEXFILENAMES\t\t/**/\n\n/* HAS_FPOS64_T:\n *\tThis symbol will be defined if the C compiler supports fpos64_t.\n */\n/*#define\tHAS_FPOS64_T    \t/**/\n\n/* HAS_FREXPL:\n *\tThis symbol, if defined, indicates that the frexpl routine is\n *\tavailable to break a long double floating-point number into\n *\ta normalized fraction and an integral power of 2.\n */\n/*#define HAS_FREXPL\t\t/**/\n\n/* HAS_STRUCT_FS_DATA:\n *\tThis symbol, if defined, indicates that the struct fs_data\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_FS_DATA\t/**/\n\n/* HAS_FSEEKO:\n *\tThis symbol, if defined, indicates that the fseeko routine is\n *\tavailable to fseek beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FSEEKO\t\t/**/\n\n/* HAS_FSTATFS:\n *\tThis symbol, if defined, indicates that the fstatfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATFS\t\t/**/\n\n/* HAS_FSYNC:\n *\tThis symbol, if defined, indicates that the fsync routine is\n *\tavailable to write a file's modified data and attributes to\n *\tpermanent storage.\n */\n/*#define HAS_FSYNC\t\t/**/\n\n/* HAS_FTELLO:\n *\tThis symbol, if defined, indicates that the ftello routine is\n *\tavailable to ftell beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FTELLO\t\t/**/\n\n/* Gconvert:\n *\tThis preprocessor macro is defined to convert a floating point\n *\tnumber to a string without a trailing decimal point.  This\n *\temulates the behavior of sprintf(\"%g\"), but is sometimes much more\n *\tefficient.  If gconvert() is not available, but gcvt() drops the\n *\ttrailing decimal point, then gcvt() is used.  If all else fails,\n *\ta macro using sprintf(\"%g\") is used. Arguments for the Gconvert\n *\tmacro are: value, number of digits, whether trailing zeros should\n *\tbe retained, and the output buffer.\n *\tPossible values are:\n *\t\td_Gconvert='gconvert((x),(n),(t),(b))'\n *\t\td_Gconvert='gcvt((x),(n),(b))'\n *\t\td_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\n *\tThe last two assume trailing zeros should not be kept.\n */\n#define Gconvert(x,n,t,b) sprintf((b),\"%.*g\",(n),(x))\n\n/* HAS_GETCWD:\n *\tThis symbol, if defined, indicates that the getcwd routine is\n *\tavailable to get the current working directory.\n */\n#define HAS_GETCWD\t\t/**/\n\n/* HAS_GETESPWNAM:\n *\tThis symbol, if defined, indicates that the getespwnam system call is\n *\tavailable to retrieve enhanced (shadow) password entries by name.\n */\n/*#define HAS_GETESPWNAM\t\t/**/\n\n/* HAS_GETFSSTAT:\n *\tThis symbol, if defined, indicates that the getfsstat routine is\n *\tavailable to stat filesystems in bulk.\n */\n/*#define HAS_GETFSSTAT\t\t/**/\n\n/* HAS_GETGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for sequential access of the group database.\n */\n/*#define HAS_GETGRENT\t\t/**/\n\n/* HAS_GETHOSTBYADDR:\n *\tThis symbol, if defined, indicates that the gethostbyaddr() routine is\n *\tavailable to look up hosts by their IP addresses.\n */\n#define HAS_GETHOSTBYADDR\t\t/**/\n\n/* HAS_GETHOSTBYNAME:\n *\tThis symbol, if defined, indicates that the gethostbyname() routine is\n *\tavailable to look up host names in some data base or other.\n */\n#define HAS_GETHOSTBYNAME\t\t/**/\n\n/* HAS_GETHOSTENT:\n *\tThis symbol, if defined, indicates that the gethostent() routine is\n *\tavailable to look up host names in some data base or another.\n */\n/*#define HAS_GETHOSTENT\t\t/**/\n\n/* HAS_GETHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tgethostname() routine to derive the host name.  See also HAS_UNAME\n *\tand PHOSTNAME.\n */\n/* HAS_UNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tuname() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand PHOSTNAME.\n */\n/* PHOSTNAME:\n *\tThis symbol, if defined, indicates the command to feed to the\n *\tpopen() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand HAS_UNAME.\tNote that the command uses a fully qualified path,\n *\tso that it is safe even if used by a process with super-user\n *\tprivileges.\n */\n/* HAS_PHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tcontents of PHOSTNAME as a command to feed to the popen() routine\n *\tto derive the host name.\n */\n#define HAS_GETHOSTNAME\t/**/\n#define HAS_UNAME\t\t/**/\n/*#define HAS_PHOSTNAME\t/**/\n#ifdef HAS_PHOSTNAME\n#define PHOSTNAME \"\"\t/* How to get the host name */\n#endif\n\n/* HAS_GETHOST_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for gethostent(), gethostbyname(), and\n *\tgethostbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETHOST_PROTOS\t/**/\n\n/* HAS_GETITIMER:\n *\tThis symbol, if defined, indicates that the getitimer routine is\n *\tavailable to return interval timers.\n */\n/*#define HAS_GETITIMER\t\t/**/\n\n/* HAS_GETMNT:\n *\tThis symbol, if defined, indicates that the getmnt routine is\n *\tavailable to get filesystem mount info by filename.\n */\n/*#define HAS_GETMNT\t\t/**/\n\n/* HAS_GETMNTENT:\n *\tThis symbol, if defined, indicates that the getmntent routine is\n *\tavailable to iterate through mounted file systems to get their info.\n */\n/*#define HAS_GETMNTENT\t\t/**/\n\n/* HAS_GETNETBYADDR:\n *\tThis symbol, if defined, indicates that the getnetbyaddr() routine is\n *\tavailable to look up networks by their IP addresses.\n */\n/*#define HAS_GETNETBYADDR\t\t/**/\n\n/* HAS_GETNETBYNAME:\n *\tThis symbol, if defined, indicates that the getnetbyname() routine is\n *\tavailable to look up networks by their names.\n */\n/*#define HAS_GETNETBYNAME\t\t/**/\n\n/* HAS_GETNETENT:\n *\tThis symbol, if defined, indicates that the getnetent() routine is\n *\tavailable to look up network names in some data base or another.\n */\n/*#define HAS_GETNETENT\t\t/**/\n\n/* HAS_GETNET_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getnetent(), getnetbyname(), and\n *\tgetnetbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETNET_PROTOS\t/**/\n\n/* HAS_GETPAGESIZE:\n *\tThis symbol, if defined, indicates that the getpagesize system call\n *\tis available to get system page size, which is the granularity of\n *\tmany memory management calls.\n */\n/*#define HAS_GETPAGESIZE\t\t/**/\n\n/* HAS_GETPROTOENT:\n *\tThis symbol, if defined, indicates that the getprotoent() routine is\n *\tavailable to look up protocols in some data base or another.\n */\n/*#define HAS_GETPROTOENT\t\t/**/\n\n/* HAS_GETPGRP:\n *\tThis symbol, if defined, indicates that the getpgrp routine is\n *\tavailable to get the current process group.\n */\n/* USE_BSD_GETPGRP:\n *\tThis symbol, if defined, indicates that getpgrp needs one\n *\targuments whereas USG one needs none.\n */\n/*#define HAS_GETPGRP\t\t/**/\n/*#define USE_BSD_GETPGRP\t/**/\n\n/* HAS_GETPROTOBYNAME:\n *\tThis symbol, if defined, indicates that the getprotobyname()\n *\troutine is available to look up protocols by their name.\n */\n/* HAS_GETPROTOBYNUMBER:\n *\tThis symbol, if defined, indicates that the getprotobynumber()\n *\troutine is available to look up protocols by their number.\n */\n#define HAS_GETPROTOBYNAME\t\t/**/\n#define HAS_GETPROTOBYNUMBER\t\t/**/\n\n/* HAS_GETPROTO_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getprotoent(), getprotobyname(), and\n *\tgetprotobyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETPROTO_PROTOS\t/**/\n\n/* HAS_GETPRPWNAM:\n *\tThis symbol, if defined, indicates that the getprpwnam system call is\n *\tavailable to retrieve protected (shadow) password entries by name.\n */\n/*#define HAS_GETPRPWNAM\t\t/**/\n\n/* HAS_GETPWENT:\n *\tThis symbol, if defined, indicates that the getpwent routine is\n *\tavailable for sequential access of the passwd database.\n *\tIf this is not available, the older getpw() function may be available.\n */\n/*#define HAS_GETPWENT\t\t/**/\n\n/* HAS_GETSERVENT:\n *\tThis symbol, if defined, indicates that the getservent() routine is\n *\tavailable to look up network services in some data base or another.\n */\n/*#define HAS_GETSERVENT\t\t/**/\n\n/* HAS_GETSERV_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getservent(), getservbyname(), and\n *\tgetservbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETSERV_PROTOS\t/**/\n\n/* HAS_GETSPNAM:\n *\tThis symbol, if defined, indicates that the getspnam system call is\n *\tavailable to retrieve SysV shadow password entries by name.\n */\n/*#define HAS_GETSPNAM\t\t/**/\n\n/* HAS_GETSERVBYNAME:\n *\tThis symbol, if defined, indicates that the getservbyname()\n *\troutine is available to look up services by their name.\n */\n/* HAS_GETSERVBYPORT:\n *\tThis symbol, if defined, indicates that the getservbyport()\n *\troutine is available to look up services by their port.\n */\n#define HAS_GETSERVBYNAME\t\t/**/\n#define HAS_GETSERVBYPORT\t\t/**/\n\n/* HAS_GNULIBC:\n *\tThis symbol, if defined, indicates to the C program that \n *\tthe GNU C library is being used.  A better check is to use\n *\tthe __GLIBC__ and __GLIBC_MINOR__ symbols supplied with glibc.\n */\n/*#define HAS_GNULIBC  \t/**/\n#if defined(HAS_GNULIBC) && !defined(_GNU_SOURCE)\n#   define _GNU_SOURCE\n#endif\n/* HAS_HASMNTOPT:\n *\tThis symbol, if defined, indicates that the hasmntopt routine is\n *\tavailable to query the mount options of file systems.\n */\n/*#define HAS_HASMNTOPT\t\t/**/\n\n/* HAS_HTONL:\n *\tThis symbol, if defined, indicates that the htonl() routine (and\n *\tfriends htons() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_HTONS:\n *\tThis symbol, if defined, indicates that the htons() routine (and\n *\tfriends htonl() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHL:\n *\tThis symbol, if defined, indicates that the ntohl() routine (and\n *\tfriends htonl() htons() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHS:\n *\tThis symbol, if defined, indicates that the ntohs() routine (and\n *\tfriends htonl() htons() ntohl()) are available to do network\n *\torder byte swapping.\n */\n#define HAS_HTONL\t\t/**/\n#define HAS_HTONS\t\t/**/\n#define HAS_NTOHL\t\t/**/\n#define HAS_NTOHS\t\t/**/\n\n/* HAS_ILOGBL:\n *\tThis symbol, if defined, indicates that the ilogbl routine is\n *\tavailable.  If scalbnl is also present we can emulate frexpl.\n */\n/*#define HAS_ILOGBL\t\t/**/\n\n/* HAS_INT64_T:\n *     This symbol will defined if the C compiler supports int64_t.\n *     Usually the <inttypes.h> needs to be included, but sometimes\n *\t<sys/types.h> is enough.\n */\n/*#define     HAS_INT64_T               /**/\n\n/* HAS_ISASCII:\n *\tThis manifest constant lets the C program know that isascii \n *\tis available.\n */\n#define HAS_ISASCII\t\t/**/\n\n/* HAS_ISNAN:\n *\tThis symbol, if defined, indicates that the isnan routine is\n *\tavailable to check whether a double is a NaN.\n */\n/*#define HAS_ISNAN\t\t/**/\n\n/* HAS_ISNANL:\n *\tThis symbol, if defined, indicates that the isnanl routine is\n *\tavailable to check whether a long double is a NaN.\n */\n/*#define HAS_ISNANL\t\t/**/\n\n/* HAS_LCHOWN:\n *\tThis symbol, if defined, indicates that the lchown routine is\n *\tavailable to operate on a symbolic link (instead of following the\n *\tlink).\n */\n/*#define HAS_LCHOWN\t\t/**/\n\n/* HAS_LDBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol LDBL_DIG, which is the number\n *\tof significant digits in a long double precision number. Unlike\n *\tfor DBL_DIG, there's no good guess for LDBL_DIG if it is undefined.\n */\n#define HAS_LDBL_DIG \t/**/\n\n/* HAS_LONG_DOUBLE:\n *\tThis symbol will be defined if the C compiler supports long\n *\tdoubles.\n */\n/* LONG_DOUBLESIZE:\n *\tThis symbol contains the size of a long double, so that the \n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long doubles.\n */\n#define HAS_LONG_DOUBLE\t\t/**/\n#ifdef HAS_LONG_DOUBLE\n#define LONG_DOUBLESIZE 10\t\t/**/\n#endif\n\n/* HAS_LONG_LONG:\n *\tThis symbol will be defined if the C compiler supports long long.\n */\n/* LONGLONGSIZE:\n *\tThis symbol contains the size of a long long, so that the \n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long long.\n */\n/*#define HAS_LONG_LONG\t\t/**/\n#ifdef HAS_LONG_LONG\n#define LONGLONGSIZE 8\t\t/**/\n#endif\n\n/* HAS_LSEEK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the lseek() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern off_t lseek(int, off_t, int);\n */\n#define\tHAS_LSEEK_PROTO\t/**/\n\n/* HAS_MADVISE:\n *\tThis symbol, if defined, indicates that the madvise system call is\n *\tavailable to map a file into memory.\n */\n/*#define HAS_MADVISE\t\t/**/\n\n/* HAS_MKDTEMP:\n *\tThis symbol, if defined, indicates that the mkdtemp routine is\n *\tavailable to exclusively create a uniquely named temporary directory.\n */\n/*#define HAS_MKDTEMP\t\t/**/\n\n/* HAS_MKSTEMP:\n *\tThis symbol, if defined, indicates that the mkstemp routine is\n *\tavailable to exclusively create and open a uniquely named\n *\ttemporary file.\n */\n/*#define HAS_MKSTEMP\t\t/**/\n\n/* HAS_MKSTEMPS:\n *\tThis symbol, if defined, indicates that the mkstemps routine is\n *\tavailable to exclusively create and open a uniquely named\n *\t(with a suffix) temporary file.\n */\n/*#define HAS_MKSTEMPS\t\t/**/\n\n/* HAS_MMAP:\n *\tThis symbol, if defined, indicates that the mmap system call is\n *\tavailable to map a file into memory.\n */\n/* Mmap_t:\n *\tThis symbol holds the return type of the mmap() system call\n *\t(and simultaneously the type of the first argument).\n *\tUsually set to 'void *' or 'cadd_t'.\n */\n/*#define HAS_MMAP\t\t/**/\n#define Mmap_t void *\t/**/\n\n/* HAS_MODFL:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tavailable to split a long double x into a fractional part f and\n *\tan integer part i such that |f| < 1.0 and (f + i) = x.\n */\n/*#define HAS_MODFL\t\t/**/\n\n/* HAS_MPROTECT:\n *\tThis symbol, if defined, indicates that the mprotect system call is\n *\tavailable to modify the access protection of a memory mapped file.\n */\n/*#define HAS_MPROTECT\t\t/**/\n\n/* HAS_MSG:\n *\tThis symbol, if defined, indicates that the entire msg*(2) library is\n *\tsupported (IPC mechanism based on message queues).\n */\n/*#define HAS_MSG\t\t/**/\n\n/* HAS_STRUCT_MSGHDR:\n *\tThis symbol, if defined, indicates that the struct msghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_MSGHDR\t/**/\n\n/* HAS_OFF64_T:\n *\tThis symbol will be defined if the C compiler supports off64_t.\n */\n/*#define\tHAS_OFF64_T    \t\t/**/\n\n/* HAS_OPEN3:\n *\tThis manifest constant lets the C program know that the three\n *\targument form of open(2) is available.\n */\n/*#define HAS_OPEN3\t\t/**/\n\n/* OLD_PTHREAD_CREATE_JOINABLE:\n *\tThis symbol, if defined, indicates how to create pthread\n *\tin joinable (aka undetached) state.  NOTE: not defined\n *\tif pthread.h already has defined PTHREAD_CREATE_JOINABLE\n *\t(the new version of the constant).\n *\tIf defined, known values are PTHREAD_CREATE_UNDETACHED\n *\tand __UNDETACHED.\n */\n/*#define OLD_PTHREAD_CREATE_JOINABLE  /**/\n\n/* HAS_PTHREAD_YIELD:\n *\tThis symbol, if defined, indicates that the pthread_yield \n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/* SCHED_YIELD:\n *\tThis symbol defines the way to yield the execution of\n *\tthe current thread.  Known ways are sched_yield,\n *\tpthread_yield, and pthread_yield with NULL.\n */\n/* HAS_SCHED_YIELD:\n *\tThis symbol, if defined, indicates that the sched_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/*#define HAS_PTHREAD_YIELD\t/**/\n#define SCHED_YIELD\t\t/**/\n/*#define HAS_SCHED_YIELD\t/**/\n\n/* HAS_PTHREAD_ATTR_SETSCOPE:\n *\tThis symbol, if defined, indicates that the pthread_attr_setscope\n *\tsystem call is available to set the contention scope attribute of\n *\ta thread attribute object.\n */\n/*#define HAS_PTHREAD_ATTR_SETSCOPE\t\t/ **/\n\n/* HAS_READV:\n *\tThis symbol, if defined, indicates that the readv routine is\n *\tavailable to do gather reads.  You will also need <sys/uio.h>\n *\tand there I_SYSUIO.\n */\n/*#define HAS_READV\t\t/**/\n\n/* HAS_RECVMSG:\n *\tThis symbol, if defined, indicates that the recvmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_RECVMSG\t\t/**/\n\n/* HAS_SBRK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sbrk() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern void* sbrk(int);\n *\t\textern void* sbrk(size_t);\n */\n/*#define\tHAS_SBRK_PROTO\t/**/\n\n/* HAS_SEM:\n *\tThis symbol, if defined, indicates that the entire sem*(2) library is\n *\tsupported.\n */\n/*#define HAS_SEM\t\t/**/\n\n/* HAS_SCALBNL:\n *\tThis symbol, if defined, indicates that the scalbnl routine is\n *\tavailable.  If ilogbl is also present we can emulate frexpl.\n */\n/*#define HAS_SCALBNL\t\t/**/\n\n/* HAS_SENDMSG:\n *\tThis symbol, if defined, indicates that the sendmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_SENDMSG\t\t/**/\n\n/* HAS_SETGRENT:\n *\tThis symbol, if defined, indicates that the setgrent routine is\n *\tavailable for initializing sequential access of the group database.\n */\n/*#define HAS_SETGRENT\t\t/**/\n\n/* HAS_SETGROUPS:\n *\tThis symbol, if defined, indicates that the setgroups() routine is\n *\tavailable to set the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_SETGROUPS\t\t/**/\n\n/* HAS_SETHOSTENT:\n *\tThis symbol, if defined, indicates that the sethostent() routine is\n *\tavailable.\n */\n/*#define HAS_SETHOSTENT\t\t/**/\n\n/* HAS_SETITIMER:\n *\tThis symbol, if defined, indicates that the setitimer routine is\n *\tavailable to set interval timers.\n */\n/*#define HAS_SETITIMER\t\t/**/\n\n/* HAS_SETNETENT:\n *\tThis symbol, if defined, indicates that the setnetent() routine is\n *\tavailable.\n */\n/*#define HAS_SETNETENT\t\t/**/\n\n/* HAS_SETPROTOENT:\n *\tThis symbol, if defined, indicates that the setprotoent() routine is\n *\tavailable.\n */\n/*#define HAS_SETPROTOENT\t\t/**/\n\n/* HAS_SETPGRP:\n *\tThis symbol, if defined, indicates that the setpgrp routine is\n *\tavailable to set the current process group.\n */\n/* USE_BSD_SETPGRP:\n *\tThis symbol, if defined, indicates that setpgrp needs two\n *\targuments whereas USG one needs none.  See also HAS_SETPGID\n *\tfor a POSIX interface.\n */\n/*#define HAS_SETPGRP\t\t/**/\n/*#define USE_BSD_SETPGRP\t/**/\n\n/* HAS_SETPROCTITLE:\n *\tThis symbol, if defined, indicates that the setproctitle routine is\n *\tavailable to set process title.\n */\n/*#define HAS_SETPROCTITLE\t\t/**/\n\n/* HAS_SETPWENT:\n *\tThis symbol, if defined, indicates that the setpwent routine is\n *\tavailable for initializing sequential access of the passwd database.\n */\n/*#define HAS_SETPWENT\t\t/**/\n\n/* HAS_SETSERVENT:\n *\tThis symbol, if defined, indicates that the setservent() routine is\n *\tavailable.\n */\n/*#define HAS_SETSERVENT\t\t/**/\n\n/* HAS_SETVBUF:\n *\tThis symbol, if defined, indicates that the setvbuf routine is\n *\tavailable to change buffering on an open stdio stream.\n *\tto a line-buffered mode.\n */\n#define HAS_SETVBUF\t\t/**/\n\n/* HAS_SHM:\n *\tThis symbol, if defined, indicates that the entire shm*(2) library is\n *\tsupported.\n */\n/*#define HAS_SHM\t\t/**/\n\n/* HAS_SIGACTION:\n *\tThis symbol, if defined, indicates that Vr4's sigaction() routine\n *\tis available.\n */\n/*#define HAS_SIGACTION\t/**/\n\n/* HAS_SIGSETJMP:\n *\tThis variable indicates to the C program that the sigsetjmp()\n *\troutine is available to save the calling process's registers\n *\tand stack environment for later use by siglongjmp(), and\n *\tto optionally save the process's signal mask.  See\n *\tSigjmp_buf, Sigsetjmp, and Siglongjmp.\n */\n/* Sigjmp_buf:\n *\tThis is the buffer type to be used with Sigsetjmp and Siglongjmp.\n */\n/* Sigsetjmp:\n *\tThis macro is used in the same way as sigsetjmp(), but will invoke\n *\ttraditional setjmp() if sigsetjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/* Siglongjmp:\n *\tThis macro is used in the same way as siglongjmp(), but will invoke\n *\ttraditional longjmp() if siglongjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/*#define HAS_SIGSETJMP\t/**/\n#ifdef HAS_SIGSETJMP\n#define Sigjmp_buf sigjmp_buf\n#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))\n#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))\n#else\n#define Sigjmp_buf jmp_buf\n#define Sigsetjmp(buf,save_mask) setjmp((buf))\n#define Siglongjmp(buf,retval) longjmp((buf),(retval))\n#endif\n\n/* HAS_STATIC_INLINE:\n *\tThis symbol, if defined, indicates that the C compiler supports\n *\tC99-style static inline.  That is, the function can't be called\n *\tfrom another translation unit.\n */\n/* PERL_STATIC_INLINE:\n *\tThis symbol gives the best-guess incantation to use for static\n *\tinline functions.  If HAS_STATIC_INLINE is defined, this will\n *\tgive C99-style inline.  If HAS_STATIC_INLINE is not defined,\n *\tthis will give a plain 'static'.  It will always be defined\n *\tto something that gives static linkage.\n *\tPossibilities include\n *\t\tstatic inline       (c99)\n *\t\tstatic __inline__   (gcc -ansi)\n *\t\tstatic __inline     (MSVC)\n *\t\tstatic _inline      (older MSVC)\n *\t\tstatic              (c89 compilers)\n */\n/*#define HAS_STATIC_INLINE\t\t\t\t/ **/\n#define PERL_STATIC_INLINE static           \t/**/\n\n/* HAS_SOCKET:\n *\tThis symbol, if defined, indicates that the BSD socket interface is\n *\tsupported.\n */\n/* HAS_SOCKETPAIR:\n *\tThis symbol, if defined, indicates that the BSD socketpair() call is\n *\tsupported.\n */\n#define\tHAS_SOCKET\t\t/**/\n/*#define\tHAS_SOCKETPAIR\t/**/\n\n/* HAS_SOCKS5_INIT:\n *\tThis symbol, if defined, indicates that the socks5_init routine is\n *\tavailable to initialize SOCKS 5.\n */\n/*#define HAS_SOCKS5_INIT\t\t/**/\n\n/* HAS_SQRTL:\n *\tThis symbol, if defined, indicates that the sqrtl routine is\n *\tavailable to do long double square roots.\n */\n/*#define HAS_SQRTL\t\t/**/\n\n/* USE_STAT_BLOCKS:\n *\tThis symbol is defined if this system has a stat structure declaring\n *\tst_blksize and st_blocks.\n */\n#ifndef USE_STAT_BLOCKS\n/*#define USE_STAT_BLOCKS \t/**/\n#endif\n\n/* HAS_STRUCT_STATFS_F_FLAGS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tdoes have the f_flags member containing the mount flags of\n *\tthe filesystem containing the file.\n *\tThis kind of struct statfs is coming from <sys/mount.h> (BSD 4.3),\n *\tnot from <sys/statfs.h> (SYSV).  Older BSDs (like Ultrix) do not\n *\thave statfs() and struct statfs, they have ustat() and getmnt()\n *\twith struct ustat and struct fs_data.\n */\n/*#define HAS_STRUCT_STATFS_F_FLAGS\t\t/**/\n\n/* HAS_STRUCT_STATFS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_STATFS\t/**/\n\n/* HAS_FSTATVFS:\n *\tThis symbol, if defined, indicates that the fstatvfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATVFS\t\t/**/\n\n/* USE_STDIO_PTR:\n *\tThis symbol is defined if the _ptr and _cnt fields (or similar)\n *\tof the stdio FILE structure can be used to access the stdio buffer\n *\tfor a file handle.  If this is defined, then the FILE_ptr(fp)\n *\tand FILE_cnt(fp) macros will also be defined and should be used\n *\tto access these fields.\n */\n/* FILE_ptr:\n *\tThis macro is used to access the _ptr field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_PTR_LVALUE:\n *\tThis symbol is defined if the FILE_ptr macro can be used as an\n *\tlvalue.\n */\n/* FILE_cnt:\n *\tThis macro is used to access the _cnt field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_CNT_LVALUE:\n *\tThis symbol is defined if the FILE_cnt macro can be used as an\n *\tlvalue.\n */\n/* STDIO_PTR_LVAL_SETS_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n has the side effect of decreasing the\n *\tvalue of File_cnt(fp) by n.\n */\n/* STDIO_PTR_LVAL_NOCHANGE_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n leaves File_cnt(fp) unchanged.\n */\n/*#define USE_STDIO_PTR \t/**/\n#ifdef USE_STDIO_PTR\n#define FILE_ptr(fp)\t((fp)->_ptr)\n/*#define STDIO_PTR_LVALUE \t\t/**/\n#define FILE_cnt(fp)\t((fp)->_cnt)\n/*#define STDIO_CNT_LVALUE \t\t/**/\n/*#define STDIO_PTR_LVAL_SETS_CNT\t/**/\n/*#define STDIO_PTR_LVAL_NOCHANGE_CNT\t/**/\n#endif\n\n/* USE_STDIO_BASE:\n *\tThis symbol is defined if the _base field (or similar) of the\n *\tstdio FILE structure can be used to access the stdio buffer for\n *\ta file handle.  If this is defined, then the FILE_base(fp) macro\n *\twill also be defined and should be used to access this field.\n *\tAlso, the FILE_bufsiz(fp) macro will be defined and should be used\n *\tto determine the number of bytes in the buffer.  USE_STDIO_BASE\n *\twill never be defined unless USE_STDIO_PTR is.\n */\n/* FILE_base:\n *\tThis macro is used to access the _base field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_BASE is defined.\n */\n/* FILE_bufsiz:\n *\tThis macro is used to determine the number of bytes in the I/O\n *\tbuffer pointed to by _base field (or equivalent) of the FILE\n *\tstructure pointed to its argument. This macro will always be defined\n *\tif USE_STDIO_BASE is defined.\n */\n/*#define USE_STDIO_BASE \t/**/\n#ifdef USE_STDIO_BASE\n#define FILE_base(fp)\t((fp)->_base)\n#define FILE_bufsiz(fp)\t((fp)->_cnt + (fp)->_ptr - (fp)->_base)\n#endif\n\n/* HAS_SYS_ERRLIST:\n *\tThis symbol, if defined, indicates that the sys_errlist array is\n *\tavailable to translate error numbers to strings. The extern int\n *\tsys_nerr gives the size of that table.\n */\n#define HAS_SYS_ERRLIST\t/**/\n\n/* HAS_STRTOLD:\n *\tThis symbol, if defined, indicates that the strtold routine is\n *\tavailable to convert strings to long doubles.\n */\n/*#define HAS_STRTOLD\t\t/**/\n\n/* HAS_STRTOLL:\n *\tThis symbol, if defined, indicates that the strtoll routine is\n *\tavailable to convert strings to long longs.\n */\n/*#define HAS_STRTOLL\t\t/**/\n\n/* HAS_STRTOQ:\n *\tThis symbol, if defined, indicates that the strtoq routine is\n *\tavailable to convert strings to long longs (quads).\n */\n/*#define HAS_STRTOQ\t\t/**/\n\n/* HAS_STRTOUL:\n *\tThis symbol, if defined, indicates that the strtoul routine is\n *\tavailable to provide conversion of strings to unsigned long.\n */\n#define HAS_STRTOUL\t/**/\n\n/* HAS_STRTOULL:\n *\tThis symbol, if defined, indicates that the strtoull routine is\n *\tavailable to convert strings to unsigned long longs.\n */\n/*#define HAS_STRTOULL\t\t/**/\n\n/* HAS_STRTOUQ:\n *\tThis symbol, if defined, indicates that the strtouq routine is\n *\tavailable to convert strings to unsigned long longs (quads).\n */\n/*#define HAS_STRTOUQ\t\t/**/\n\n/* HAS_TELLDIR_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the telldir() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern long telldir(DIR*);\n */\n#define\tHAS_TELLDIR_PROTO\t/**/\n\n/* Time_t:\n *\tThis symbol holds the type returned by time(). It can be long,\n *\tor time_t on BSD sites (in which case <sys/types.h> should be\n *\tincluded).\n */\n#define Time_t time_t\t\t/* Time type */\n\n/* HAS_TIMES:\n *\tThis symbol, if defined, indicates that the times() routine exists.\n *\tNote that this became obsolete on some systems (SUNOS), which now\n * use getrusage(). It may be necessary to include <sys/times.h>.\n */\n/*#define HAS_TIMES\t\t/**/\n\n/* HAS_UALARM:\n *\tThis symbol, if defined, indicates that the ualarm routine is\n *\tavailable to do alarms with microsecond granularity.\n */\n/*#define HAS_UALARM\t\t/**/\n\n/* HAS_UNION_SEMUN:\n *\tThis symbol, if defined, indicates that the union semun is\n *\tdefined by including <sys/sem.h>.  If not, the user code\n *\tprobably needs to define it as:\n *\tunion semun {\n *\t    int val;\n *\t    struct semid_ds *buf;\n *\t    unsigned short *array;\n *\t}\n */\n/* USE_SEMCTL_SEMUN:\n *\tThis symbol, if defined, indicates that union semun is\n *\tused for semctl IPC_STAT.\n */\n/* USE_SEMCTL_SEMID_DS:\n *\tThis symbol, if defined, indicates that struct semid_ds * is\n *\tused for semctl IPC_STAT.\n */\n#define HAS_UNION_SEMUN\t/**/\n/*#define USE_SEMCTL_SEMUN\t/**/\n/*#define USE_SEMCTL_SEMID_DS\t/**/\n\n/* HAS_USTAT:\n *\tThis symbol, if defined, indicates that the ustat system call is\n *\tavailable to query file system statistics by dev_t.\n */\n/*#define HAS_USTAT\t\t/**/\n\n/* HAS_VFORK:\n *\tThis symbol, if defined, indicates that vfork() exists.\n */\n/*#define HAS_VFORK\t/**/\n\n/* Signal_t:\n *\tThis symbol's value is either \"void\" or \"int\", corresponding to the\n *\tappropriate return type of a signal handler.  Thus, you can declare\n *\ta signal handler using \"Signal_t (*handler)()\", and define the\n *\thandler using \"Signal_t handler(sig)\".\n */\n#define Signal_t void\t/* Signal handler's return type */\n\n/* HAS_WRITEV:\n *\tThis symbol, if defined, indicates that the writev routine is\n *\tavailable to do scatter writes.\n */\n/*#define HAS_WRITEV\t\t/**/\n\n/* USE_DYNAMIC_LOADING:\n *\tThis symbol, if defined, indicates that dynamic loading of\n *\tsome sort is available.\n */\n#define USE_DYNAMIC_LOADING\t\t/**/\n\n/* DOUBLESIZE:\n *\tThis symbol contains the size of a double, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define DOUBLESIZE 8\t\t/**/\n\n/* DOUBLE_STYLE_IEEE\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit IEEE 754.\n */\n/* DOUBLE_HAS_INF\n *\tThis symbol, if defined, indicates that the double has\n *\tthe infinity.\n */\n/* DOUBLE_HAS_NAN\n *\tThis symbol, if defined, indicates that the double has\n *\tthe not-a-number.\n */\n/* DOUBLE_HAS_NEGATIVE_ZERO\n *\tThis symbol, if defined, indicates that the double has\n *\tthe negative_zero.\n */\n/* DOUBLE_HAS_SUBNORMALS\n *\tThis symbol, if defined, indicates that the double has\n *\tthe subnormals (denormals).\n */\n#define DOUBLE_STYLE_IEEE\n#define DOUBLE_HAS_INF\n#define DOUBLE_HAS_INF\n#define DOUBLE_HAS_NEGATIVE_ZERO\n#define DOUBLE_HAS_SUBNORMALS\n\n/* DOUBLEINFBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes for the double precision infinity.\n */\n/* DOUBLENANBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes (0xHH) for the double precision not-a-number.\n */\n/* LONGDBLINFBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes for the long double precision infinity.\n */\n/* LONGDBLNANBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes (0xHH) for the long double precision not-a-number.\n */\n#define DOUBLEINFBYTES 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f\t\t/**/\n#define DOUBLENANBYTES 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f\t\t/**/\n#define LONGDBLINFBYTES 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7f\t\t/**/\n#define LONGDBLNANBYTES 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f\t\t/**/\n\n/* DOUBLEMANTBITS:\n *\tThis symbol, if defined, tells how many mantissa bits\n *\tthere are in double precision floating point format.\n *      Note that this is usually DBL_MANT_DIG minus one, since\n *      with the standard IEEE 754 formats DBL_MANT_DIG includes\n *\tthe implicit bit, which doesn't really exist.\n */\n#define DOUBLEMANTBITS 52\n\n/* LONGDBLMANTBITS:\n *\tThis symbol, if defined, tells how many mantissa bits\n *\tthere are in long double precision floating point format.\n *      Note that this can be LDBL_MANT_DIG minus one,\n *      since LDBL_MANT_DIG can include the IEEE 754 implicit bit.\n *      The common x86-style 80-bit long double does not have\n *\tan implicit bit.\n */\n#define LONGDBLMANTBITS 52\n\n/* LONG_DOUBLE_STYLE_IEEE\n *\tThis symbol, if defined, indicates that the long double\n *\tis any of the IEEE 754 style long doubles:\n *\tLONG_DOUBLE_STYLE_IEEE_STD, LONG_DOUBLE_STYLE_IEEE_EXTENDED,\n *\tLONG_DOUBLE_STYLE_IEEE_DOUBLEDOUBLE.\n */\n/* LONG_DOUBLE_STYLE_IEEE_EXTENDED\n *\tThis symbol, if defined, indicates that the long double is\n *\tthe 80-bit IEEE 754. Note that despite the 'extended' this\n *\tis less than the 'std', since this is an extension of\n *\tthe double precision.\n */\n#define LONG_DOUBLE_STYLE_IEEE\n#define LONG_DOUBLE_STYLE_IEEE_EXTENDED\n\n/* EBCDIC:\n *     This symbol, if defined, indicates that this system uses\n *\tEBCDIC encoding.\n */\n/*#define\tEBCDIC \t\t/**/\n\n/* FFLUSH_NULL:\n *\tThis symbol, if defined, tells that fflush(NULL) does flush\n *\tall pending stdio output.\n */\n/* FFLUSH_ALL:\n *\tThis symbol, if defined, tells that to flush\n *\tall pending stdio output one must loop through all\n *\tthe stdio file handles stored in an array and fflush them.\n *\tNote that if fflushNULL is defined, fflushall will not\n *\teven be probed for and will be left undefined.\n */\n#define\tFFLUSH_NULL \t\t/**/\n/*#define\tFFLUSH_ALL \t\t/**/\n\n/* Fpos_t:\n *\tThis symbol holds the type used to declare file positions in libc.\n *\tIt can be fpos_t, long, uint, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Fpos_t fpos_t\t\t/* File position type */\n\n/* Gid_t_f:\n *\tThis symbol defines the format string used for printing a Gid_t.\n */\n#define\tGid_t_f\t\t\"ld\"\t\t/**/\n\n/* Gid_t_sign:\n *\tThis symbol holds the signedess of a Gid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Gid_t_sign\t-1\t\t/* GID sign */\n\n/* Gid_t_size:\n *\tThis symbol holds the size of a Gid_t in bytes.\n */\n#define Gid_t_size 4\t\t/* GID size */\n\n/* Gid_t:\n *\tThis symbol holds the return type of getgid() and the type of\n *\targument to setrgid() and related functions.  Typically,\n *\tit is the type of group ids in the kernel. It can be int, ushort,\n *\tgid_t, etc... It may be necessary to include <sys/types.h> to get\n *\tany typedef'ed information.\n */\n#define Gid_t gid_t\t\t/* Type for getgid(), etc... */\n\n/* Groups_t:\n *\tThis symbol holds the type used for the second argument to\n *\tgetgroups() and setgroups().  Usually, this is the same as\n *\tgidtype (gid_t) , but sometimes it isn't.\n *\tIt can be int, ushort, gid_t, etc... \n *\tIt may be necessary to include <sys/types.h> to get any \n *\ttypedef'ed information.  This is only required if you have\n *\tgetgroups() or setgroups()..\n */\n#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)\n#define Groups_t gid_t\t/* Type for 2nd arg to [sg]etgroups() */\n#endif\n\n/* DB_Prefix_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is u_int32_t.\n */\n/* DB_Hash_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is size_t.\n */\n/* DB_VERSION_MAJOR_CFG:\n *\tThis symbol, if defined, defines the major version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n */\n/* DB_VERSION_MINOR_CFG:\n *\tThis symbol, if defined, defines the minor version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n/* DB_VERSION_PATCH_CFG:\n *\tThis symbol, if defined, defines the patch version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n#define DB_Hash_t\tint\t\t/**/\n#define DB_Prefix_t\tint  \t/**/\n#define DB_VERSION_MAJOR_CFG\tundef  \t/**/\n#define DB_VERSION_MINOR_CFG\tundef  \t/**/\n#define DB_VERSION_PATCH_CFG\tundef  \t/**/\n\n/* I_GRP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <grp.h>.\n */\n/* GRPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct group\n *\tin <grp.h> contains gr_passwd.\n */\n/*#define I_GRP\t\t/**/\n/*#define GRPASSWD\t/**/\n\n/* I_IEEEFP:\n *\tThis symbol, if defined, indicates that <ieeefp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_IEEEFP\t\t/**/\n\n/* I_INTTYPES:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <inttypes.h>.\n */\n/*#define   I_INTTYPES                /**/\n\n/* I_LIBUTIL:\n *\tThis symbol, if defined, indicates that <libutil.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LIBUTIL\t\t/**/\n\n/* I_MACH_CTHREADS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <mach/cthreads.h>.\n */\n/*#define   I_MACH_CTHREADS\t/**/\n\n/* I_MNTENT:\n *\tThis symbol, if defined, indicates that <mntent.h> exists and\n *\tshould be included.\n */\n/*#define\tI_MNTENT\t\t/**/\n\n/* I_NETDB:\n *\tThis symbol, if defined, indicates that <netdb.h> exists and\n *\tshould be included.\n */\n#define I_NETDB\t\t/**/\n\n/* I_NETINET_TCP:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <netinet/tcp.h>.\n */\n/*#define   I_NETINET_TCP                /**/\n\n/* I_POLL:\n *\tThis symbol, if defined, indicates that <poll.h> exists and\n *\tshould be included.\n */\n/*#define\tI_POLL\t\t/**/\n\n/* I_PROT:\n *\tThis symbol, if defined, indicates that <prot.h> exists and\n *\tshould be included.\n */\n/*#define\tI_PROT\t\t/**/\n\n/* I_PTHREAD:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <pthread.h>.\n */\n/*#define   I_PTHREAD\t/**/\n\n/* I_PWD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pwd.h>.\n */\n/* PWQUOTA:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_quota.\n */\n/* PWAGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_age.\n */\n/* PWCHANGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_change.\n */\n/* PWCLASS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_class.\n */\n/* PWEXPIRE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_expire.\n */\n/* PWCOMMENT:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_comment.\n */\n/* PWGECOS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_gecos.\n */\n/* PWPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_passwd.\n */\n/*#define I_PWD\t\t/**/\n/*#define PWQUOTA\t/**/\n/*#define PWAGE\t/**/\n/*#define PWCHANGE\t/**/\n/*#define PWCLASS\t/**/\n/*#define PWEXPIRE\t/**/\n/*#define PWCOMMENT\t/**/\n/*#define PWGECOS\t/**/\n/*#define PWPASSWD\t/**/\n\n/* I_SHADOW:\n *\tThis symbol, if defined, indicates that <shadow.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SHADOW\t\t/**/\n\n/* I_SOCKS:\n *\tThis symbol, if defined, indicates that <socks.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SOCKS\t\t/**/\n\n/* I_SUNMATH:\n *\tThis symbol, if defined, indicates that <sunmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SUNMATH\t\t/**/\n\n/* I_SYSLOG:\n *\tThis symbol, if defined, indicates that <syslog.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSLOG\t\t/**/\n\n/* I_SYSMODE:\n *\tThis symbol, if defined, indicates that <sys/mode.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSMODE\t\t/**/\n\n/* I_SYS_MOUNT:\n *\tThis symbol, if defined, indicates that <sys/mount.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_MOUNT\t\t/**/\n\n/* I_SYS_STATFS:\n *\tThis symbol, if defined, indicates that <sys/statfs.h> exists.\n */\n/*#define\tI_SYS_STATFS\t\t/**/\n\n/* I_SYS_STATVFS:\n *\tThis symbol, if defined, indicates that <sys/statvfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_STATVFS\t\t/**/\n\n/* I_SYSUIO:\n *\tThis symbol, if defined, indicates that <sys/uio.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUIO\t\t/**/\n\n/* I_SYSUTSNAME:\n *\tThis symbol, if defined, indicates that <sys/utsname.h> exists and\n *\tshould be included.\n */\n#define\tI_SYSUTSNAME\t\t/**/\n\n/* I_SYS_VFS:\n *\tThis symbol, if defined, indicates that <sys/vfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_VFS\t\t/**/\n\n/* I_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <time.h>.\n */\n/* I_SYS_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h>.\n */\n/* I_SYS_TIME_KERNEL:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h> with KERNEL defined.\n */\n#define I_TIME\t\t/**/\n/*#define I_SYS_TIME\t\t/**/\n/*#define I_SYS_TIME_KERNEL\t\t/**/\n\n/* I_USTAT:\n *\tThis symbol, if defined, indicates that <ustat.h> exists and\n *\tshould be included.\n */\n/*#define\tI_USTAT\t\t/**/\n\n/* PERL_INC_VERSION_LIST:\n *\tThis variable specifies the list of subdirectories in over\n *\twhich perl.c:incpush() and lib/lib.pm will automatically\n *\tsearch when adding directories to @INC, in a format suitable\n *\tfor a C initialization string.  See the inc_version_list entry\n *\tin Porting/Glossary for more details.\n */\n#define PERL_INC_VERSION_LIST 0\t\t/**/\n\n/* INSTALL_USR_BIN_PERL:\n *\tThis symbol, if defined, indicates that Perl is to be installed\n * \talso as /usr/bin/perl.\n */\n/*#define INSTALL_USR_BIN_PERL\t/**/\n\n/* PERL_PRIfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for output.\n */\n/* PERL_PRIgldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'g') for output.\n */\n/* PERL_PRIeldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'e') for output.\n */\n/* PERL_SCNfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for input.\n */\n/*#define PERL_PRIfldbl\t\"f\"\t/**/\n/*#define PERL_PRIgldbl\t\"g\"\t/**/\n/*#define PERL_PRIeldbl\t\"e\"\t/**/\n/*#define PERL_SCNfldbl\tundef\t/**/\n\n#$d_PRIfldbl PERL_PRIfldbl\t$sPRIfldbl\t/**/\n#$d_PRIgldbl PERL_PRIgldbl\t$sPRIgldbl\t/**/\n#$d_PRIeldbl PERL_PRIeldbl\t$sPRIeldbl\t/**/\n\n/*#$d_SCNfldbl PERL_SCNfldbl\t$sSCNfldbl\t/**/\n\n/* Off_t:\n *\tThis symbol holds the type used to declare offsets in the kernel.\n *\tIt can be int, long, off_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n/* LSEEKSIZE:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n/* Off_t_size:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n#define Off_t off_t\t\t/* <offset> type */\n#define LSEEKSIZE 4\t\t/* <offset> size */\n#define Off_t_size 4\t/* <offset> size */\n\n/* Free_t:\n *\tThis variable contains the return type of free().  It is usually\n * void, but occasionally int.\n */\n/* Malloc_t:\n *\tThis symbol is the type of pointer returned by malloc and realloc.\n */\n#define Malloc_t void *\t\t\t/**/\n#define Free_t void\t\t\t/**/\n\n/* MYMALLOC:\n *\tThis symbol, if defined, indicates that we're using our own malloc.\n */\n/*#define MYMALLOC\t\t\t/**/\n\n/* Mode_t:\n *\tThis symbol holds the type used to declare file modes \n *\tfor systems calls.  It is usually mode_t, but may be\n *\tint or unsigned short.  It may be necessary to include <sys/types.h>\n *\tto get any typedef'ed information.\n */\n#define Mode_t mode_t\t /* file mode parameter for system calls */\n\n/* VAL_O_NONBLOCK:\n *\tThis symbol is to be used during open() or fcntl(F_SETFL) to turn on\n *\tnon-blocking I/O for the file descriptor. Note that there is no way\n *\tback, i.e. you cannot turn it blocking again this way. If you wish to\n *\talternatively switch between blocking and non-blocking, use the\n *\tioctl(FIOSNBIO) call instead, but that is not supported by all devices.\n */\n/* VAL_EAGAIN:\n *\tThis symbol holds the errno error code set by read() when no data was\n *\tpresent on the non-blocking file descriptor.\n */\n/* RD_NODATA:\n *\tThis symbol holds the return code from read() when no data is present\n *\ton the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is\n *\tnot defined, then you can't distinguish between no data and EOF by\n *\tissuing a read(). You'll have to find another way to tell for sure!\n */\n/* EOF_NONBLOCK:\n *\tThis symbol, if defined, indicates to the C program that a read() on\n *\ta non-blocking file descriptor will return 0 on EOF, and not the value\n *\theld in RD_NODATA (-1 usually, in that case!).\n */\n#define VAL_O_NONBLOCK O_NONBLOCK\n#define VAL_EAGAIN EAGAIN\n#define RD_NODATA -1\n#define EOF_NONBLOCK\n\n/* NEED_VA_COPY:\n *\tThis symbol, if defined, indicates that the system stores\n *\tthe variable argument list datatype, va_list, in a format\n *\tthat cannot be copied by simple assignment, so that some\n *\tother means must be used when copying is required.\n *\tAs such systems vary in their provision (or non-provision)\n *\tof copying mechanisms, handy.h defines a platform-\n *\tindependent macro, Perl_va_copy(src, dst), to do the job.\n */\n/*#define\tNEED_VA_COPY\t\t/**/\n\n/* Netdb_host_t:\n *\tThis symbol holds the type used for the 1st argument\n *\tto gethostbyaddr().\n */\n/* Netdb_hlen_t:\n *\tThis symbol holds the type used for the 2nd argument\n *\tto gethostbyaddr().\n */\n/* Netdb_name_t:\n *\tThis symbol holds the type used for the argument to\n *\tgethostbyname().\n */\n/* Netdb_net_t:\n *\tThis symbol holds the type used for the 1st argument to\n *\tgetnetbyaddr().\n */\n#define Netdb_host_t\t\tchar * /**/\n#define Netdb_hlen_t\t\tint /**/\n#define Netdb_name_t\t\tchar * /**/\n#define Netdb_net_t\t\tlong /**/\n\n/* PERL_OTHERLIBDIRS:\n *\tThis variable contains a colon-separated set of paths for the perl\n *\tbinary to search for additional library files or modules.\n *\tThese directories will be tacked to the end of @INC.\n *\tPerl will automatically search below each path for version-\n *\tand architecture-specific directories.  See PERL_INC_VERSION_LIST\n *\tfor more details.\n */\n/*#define PERL_OTHERLIBDIRS \"undef\"\t\t/**/\n\n/* IVTYPE:\n *\tThis symbol defines the C type used for Perl's IV.\n */\n/* UVTYPE:\n *\tThis symbol defines the C type used for Perl's UV.\n */\n/* I8TYPE:\n *\tThis symbol defines the C type used for Perl's I8.\n */\n/* U8TYPE:\n *\tThis symbol defines the C type used for Perl's U8.\n */\n/* I16TYPE:\n *\tThis symbol defines the C type used for Perl's I16.\n */\n/* U16TYPE:\n *\tThis symbol defines the C type used for Perl's U16.\n */\n/* I32TYPE:\n *\tThis symbol defines the C type used for Perl's I32.\n */\n/* U32TYPE:\n *\tThis symbol defines the C type used for Perl's U32.\n */\n/* I64TYPE:\n *\tThis symbol defines the C type used for Perl's I64.\n */\n/* U64TYPE:\n *\tThis symbol defines the C type used for Perl's U64.\n */\n/* NVTYPE:\n *\tThis symbol defines the C type used for Perl's NV.\n */\n/* IVSIZE:\n *\tThis symbol contains the sizeof(IV).\n */\n/* UVSIZE:\n *\tThis symbol contains the sizeof(UV).\n */\n/* I8SIZE:\n *\tThis symbol contains the sizeof(I8).\n */\n/* U8SIZE:\n *\tThis symbol contains the sizeof(U8).\n */\n/* I16SIZE:\n *\tThis symbol contains the sizeof(I16).\n */\n/* U16SIZE:\n *\tThis symbol contains the sizeof(U16).\n */\n/* I32SIZE:\n *\tThis symbol contains the sizeof(I32).\n */\n/* U32SIZE:\n *\tThis symbol contains the sizeof(U32).\n */\n/* I64SIZE:\n *\tThis symbol contains the sizeof(I64).\n */\n/* U64SIZE:\n *\tThis symbol contains the sizeof(U64).\n */\n/* NVSIZE:\n *\tThis symbol contains the sizeof(NV).\n */\n/* NV_PRESERVES_UV:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tcan preserve all the bits of a variable of type UVTYPE.\n */\n/* NV_PRESERVES_UV_BITS:\n *\tThis symbol contains the number of bits a variable of type NVTYPE\n *\tcan preserve of a variable of type UVTYPE.\n */\n/* NV_ZERO_IS_ALLBITS_ZERO:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tstores 0.0 in memory as all bits zero.\n */\n#define\tIVTYPE\t\tlong\t\t/**/\n#define\tUVTYPE\t\tunsigned long\t\t/**/\n#define\tI8TYPE\t\tchar\t\t/**/\n#define\tU8TYPE\t\tunsigned char\t\t/**/\n#define\tI16TYPE\t\tshort\t/**/\n#define\tU16TYPE\t\tunsigned short\t/**/\n#define\tI32TYPE\t\tlong\t/**/\n#define\tU32TYPE\t\tunsigned long\t/**/\n#ifdef HAS_QUAD\n#define\tI64TYPE\t\t__int64\t/**/\n#define\tU64TYPE\t\tunsigned __int64\t/**/\n#endif\n#define\tNVTYPE\t\tdouble\t\t/**/\n#define\tIVSIZE\t\t4\t\t/**/\n#define\tUVSIZE\t\t4\t\t/**/\n#define\tI8SIZE\t\t1\t\t/**/\n#define\tU8SIZE\t\t1\t\t/**/\n#define\tI16SIZE\t\t2\t/**/\n#define\tU16SIZE\t\t2\t/**/\n#define\tI32SIZE\t\t4\t/**/\n#define\tU32SIZE\t\t4\t/**/\n#ifdef HAS_QUAD\n#define\tI64SIZE\t\t8\t/**/\n#define\tU64SIZE\t\t8\t/**/\n#endif\n#define\tNVSIZE\t\t8\t\t/**/\n#define\tNV_PRESERVES_UV\n#define\tNV_PRESERVES_UV_BITS\tundef\n#undef\tNV_ZERO_IS_ALLBITS_ZERO\n\n/* IVdf:\n *\tThis symbol defines the format string used for printing a Perl IV\n *\tas a signed decimal integer.\n */\n/* UVuf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned decimal integer.\n */\n/* UVof:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned octal integer.\n */\n/* UVxf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in lowercase abcdef.\n */\n/* UVXf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in uppercase ABCDEF.\n */\n/* NVef:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %e-ish floating point format.\n */\n/* NVff:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %f-ish floating point format.\n */\n/* NVgf:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %g-ish floating point format.\n */\n#define\tIVdf\t\t\"ld\"\t\t/**/\n#define\tUVuf\t\t\"lu\"\t\t/**/\n#define\tUVof\t\t\"lo\"\t\t/**/\n#define\tUVxf\t\t\"lx\"\t\t/**/\n#define\tUVXf\t\t\"lX\"\t\t/**/\n#define\tNVef\t\t\"e\"\t\t/**/\n#define\tNVff\t\t\"f\"\t\t/**/\n#define\tNVgf\t\t\"g\"\t\t/**/\n\n/* Pid_t:\n *\tThis symbol holds the type used to declare process ids in the kernel.\n *\tIt can be int, uint, pid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Pid_t int\t\t/* PID type */\n\n/* PRIVLIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n */\n/* PRIVLIB_EXP:\n *\tThis symbol contains the ~name expanded version of PRIVLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define PRIVLIB \"sys:\\\\perl\\\\lib\"\t\t/**/\n#define PRIVLIB_EXP (fnNwGetEnvironmentStr(\"PRIVLIB\", PRIVLIB))\t/**/\n\n/* PTRSIZE:\n *\tThis symbol contains the size of a pointer, so that the C preprocessor\n *\tcan make decisions based on it.  It will be sizeof(void *) if\n *\tthe compiler supports (void *); otherwise it will be\n *\tsizeof(char *).\n */\n#define PTRSIZE 4\t\t/**/\n\n/* Drand01:\n *\tThis macro is to be used to generate uniformly distributed\n *\trandom numbers over the range [0., 1.[.  You may have to supply\n *\tan 'extern double drand48();' in your program since SunOS 4.1.3\n *\tdoesn't provide you with anything relevant in its headers.\n *\tSee HAS_DRAND48_PROTO.\n */\n/* Rand_seed_t:\n *\tThis symbol defines the type of the argument of the\n *\trandom seed function.\n */\n/* seedDrand01:\n *\tThis symbol defines the macro to be used in seeding the\n *\trandom number generator (see Drand01).\n */\n/* RANDBITS:\n *\tThis symbol indicates how many bits are produced by the\n *\tfunction used to generate normalized random numbers.\n *\tValues include 15, 16, 31, and 48.\n */\n#define Drand01()\t\t(rand()/(double)((unsigned)1<<RANDBITS))\t\t/**/\n#define Rand_seed_t\t\tunsigned\t\t/**/\n#define seedDrand01(x)\tsrand((Rand_seed_t)x)\t/**/\n#define RANDBITS\t\t15\t\t/**/\n\n/* SELECT_MIN_BITS:\n *\tThis symbol holds the minimum number of bits operated by select.\n *\tThat is, if you do select(n, ...), how many bits at least will be\n *\tcleared in the masks if some activity is detected.  Usually this\n *\tis either n or 32*ceil(n/32), especially many little-endians do\n *\tthe latter.  This is only useful if you have select(), naturally.\n */\n#define SELECT_MIN_BITS \t32\t/**/\n\n/* Select_fd_set_t:\n *\tThis symbol holds the type used for the 2nd, 3rd, and 4th\n *\targuments to select.  Usually, this is 'fd_set *', if HAS_FD_SET\n *\tis defined, and 'int *' otherwise.  This is only useful if you \n *\thave select(), of course.\n */\n#define Select_fd_set_t \tfd_set *\t/**/\n\n/* SIG_NAME:\n *\tThis symbol contains a list of signal names in order of\n *\tsignal number. This is intended\n *\tto be used as a static array initialization, like this:\n *\t\tchar *sig_name[] = { SIG_NAME };\n *\tThe signals in the list are separated with commas, and each signal\n *\tis surrounded by double quotes. There is no leading SIG in the signal\n *\tname, i.e. SIGQUIT is known as \"QUIT\".\n *\tGaps in the signal numbers (up to NSIG) are filled in with NUMnn,\n *\tetc., where nn is the actual signal number (e.g. NUM37).\n *\tThe signal number for sig_name[i] is stored in sig_num[i].\n *\tThe last element is 0 to terminate the list with a NULL.  This\n *\tcorresponds to the 0 at the end of the sig_num list.\n */\n/* SIG_NUM:\n *\tThis symbol contains a list of signal numbers, in the same order as the\n *\tSIG_NAME list. It is suitable for static array initialization, as in:\n *\t\tint sig_num[] = { SIG_NUM };\n *\tThe signals in the list are separated with commas, and the indices\n *\twithin that list and the SIG_NAME list match, so it's easy to compute\n *\tthe signal name from a number or vice versa at the price of a small\n *\tdynamic linear lookup. \n *\tDuplicates are allowed, but are moved to the end of the list.\n *\tThe signal number corresponding to sig_name[i] is sig_number[i].\n *\tif (i < NSIG) then sig_number[i] == i.  \n *\tThe last element is 0, corresponding to the 0 at the end of\n *\tthe sig_name list.\n */\n/* SIG_SIZE:\n *\tThis variable contains the number of elements of the SIG_NAME\n *\tand SIG_NUM arrays, excluding the final NULL entry.\n */\n#define SIG_NAME \"ZERO\", \"NUM01\", \"INT\", \"QUIT\", \"ILL\", \"NUM05\", \"NUM06\", \"NUM07\", \"FPE\", \"KILL\", \"NUM10\", \"SEGV\", \"NUM12\", \"PIPE\", \"ALRM\", \"TERM\", \"NUM16\", \"NUM17\", \"NUM18\", \"NUM19\", \"CHLD\", \"BREAK\", \"ABRT\", \"STOP\", \"NUM24\", \"CONT\", \"CLD\", 0\t\t/**/\n#define SIG_NUM  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 20, 0\t\t/**/\n#define SIG_SIZE 27\t\t\t/**/\n\n/* SITEARCH:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-dependent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITEARCH_EXP:\n *\tThis symbol contains the ~name expanded version of SITEARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define SITEARCH \"c:\\\\perl\\\\site\\\\5.30.3\\\\lib\\\\NetWare-x86-multi-thread\"\t\t/**/\n/*#define SITEARCH_EXP \"\"\t/**/\n\n/* SITELIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-independent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITELIB_EXP:\n *\tThis symbol contains the ~name expanded version of SITELIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* SITELIB_STEM:\n *\tThis define is SITELIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#define SITELIB \"c:\\\\perl\\\\site\\\\5.30.3\\\\lib\"\t\t/**/\n/*#define SITELIB_EXP \"\"\t/**/\n#define SITELIB_STEM \"\"\t\t/**/\n\n/* Size_t_size:\n *\tThis symbol holds the size of a Size_t in bytes.\n */\n#define Size_t_size 4\t\t/**/\n\n/* Size_t:\n *\tThis symbol holds the type used to declare length parameters\n *\tfor string functions.  It is usually size_t, but may be\n *\tunsigned long, int, etc.  It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Size_t size_t\t /* length parameter for string functions */\n\n/* Sock_size_t:\n *\tThis symbol holds the type used for the size argument of\n *\tvarious socket calls (just the base type, not the pointer-to).\n */\n#define Sock_size_t\t\tint /**/\n\n/* SSize_t:\n *\tThis symbol holds the type used by functions that return\n *\ta count of bytes or an error condition.  It must be a signed type.\n *\tIt is usually ssize_t, but may be long or int, etc.\n *\tIt may be necessary to include <sys/types.h> or <unistd.h>\n *\tto get any typedef'ed information.\n *\tWe will pick a type such that sizeof(SSize_t) == sizeof(Size_t).\n */\n#define SSize_t int\t /* signed count of bytes */\n\n/* STARTPERL:\n *\tThis variable contains the string to put in front of a perl\n *\tscript to make sure (one hopes) that it runs with perl and not\n *\tsome shell.\n */\n#define STARTPERL \"#!perl\"\t\t/**/\n\n/* STDCHAR:\n *\tThis symbol is defined to be the type of char used in stdio.h.\n *\tIt has the values \"unsigned char\" or \"char\".\n */\n#define STDCHAR char\t/**/\n\n/* HAS_STDIO_STREAM_ARRAY:\n *\tThis symbol, if defined, tells that there is an array\n *\tholding the stdio streams.\n */\n/* STDIO_STREAM_ARRAY:\n *\tThis symbol tells the name of the array holding the stdio streams.\n *\tUsual values include _iob, __iob, and __sF.\n */\n/*#define\tHAS_STDIO_STREAM_ARRAY\t/**/\n#define STDIO_STREAM_ARRAY\t\n\n/* Uid_t_f:\n *\tThis symbol defines the format string used for printing a Uid_t.\n */\n#define\tUid_t_f\t\t\"ld\"\t\t/**/\n\n/* Uid_t_sign:\n *\tThis symbol holds the signedess of a Uid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Uid_t_sign\t-1\t\t/* UID sign */\n\n/* Uid_t_size:\n *\tThis symbol holds the size of a Uid_t in bytes.\n */\n#define Uid_t_size 4\t\t/* UID size */\n\n/* Uid_t:\n *\tThis symbol holds the type used to declare user ids in the kernel.\n *\tIt can be int, ushort, uid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Uid_t uid_t\t\t/* UID type */\n\n/* USE_64_BIT_INT:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be employed (be they 32 or 64 bits).  The minimal possible\n *\t64-bitness is used, just enough to get 64-bit integers into Perl.\n *\tThis may mean using for example \"long longs\", while your memory\n *\tmay still be limited to 2 gigabytes.\n */\n/* USE_64_BIT_ALL:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be used (be they 32 or 64 bits).  The maximal possible\n *\t64-bitness is employed: LP64 or ILP64, meaning that you will\n *\tbe able to use more than 2 gigabytes of memory.  This mode is\n *\teven more binary incompatible than USE_64_BIT_INT. You may not\n *\tbe able to run the resulting executable in a 32-bit CPU at all or\n *\tyou may need at least to reboot your OS to 64-bit mode.\n */\n#ifndef USE_64_BIT_INT\n/*#define\tUSE_64_BIT_INT\t\t/**/\n#endif\n\n#ifndef USE_64_BIT_ALL\n/*#define\tUSE_64_BIT_ALL\t\t/**/\n#endif\n\n/* USE_FAST_STDIO:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use 'fast stdio'.\n *\tDefaults to define in Perls 5.8 and earlier, to undef later.\n */\n#ifndef USE_FAST_STDIO\n/*#define\tUSE_FAST_STDIO\t\t/ **/\n#endif\n\n/* USE_LARGE_FILES:\n *\tThis symbol, if defined, indicates that large file support\n *\tshould be used when available.\n */\n#ifndef USE_LARGE_FILES\n/*#define\tUSE_LARGE_FILES\t\t/**/\n#endif\n\n/* USE_LONG_DOUBLE:\n *\tThis symbol, if defined, indicates that long doubles should\n *\tbe used when available.\n */\n#ifndef USE_LONG_DOUBLE\n/*#define\tUSE_LONG_DOUBLE\t\t/**/\n#endif\n\n/* USE_MORE_BITS:\n *\tThis symbol, if defined, indicates that 64-bit interfaces and\n *\tlong doubles should be used when available.\n */\n#ifndef USE_MORE_BITS\n/*#define\tUSE_MORE_BITS\t\t/**/\n#endif\n\n/* MULTIPLICITY:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use multiplicity.\n */\n#ifndef MULTIPLICITY\n#define\tMULTIPLICITY\t\t/**/\n#endif\n\n/* USE_PERLIO:\n *\tThis symbol, if defined, indicates that the PerlIO abstraction should\n *\tbe used throughout.  If not defined, stdio should be\n *\tused in a fully backward compatible manner.\n */\n#ifndef USE_PERLIO\n/*#define\tUSE_PERLIO\t\t/**/\n#endif\n\n/* USE_SOCKS:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use socks.\n */\n#ifndef USE_SOCKS\n/*#define\tUSE_SOCKS\t\t/**/\n#endif\n\n/* USE_ITHREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the interpreter-based threading implementation.\n */\n/* OLD_PTHREADS_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use the old draft POSIX threads API.\n */\n/* USE_REENTRANT_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\ttry to use the various _r versions of library functions.\n *\tThis is extremely experimental.\n */\n#define\tUSE_ITHREADS\t\t/**/\n/*#define\tOLD_PTHREADS_API\t\t/**/\n/*#define\tUSE_REENTRANT_API\t/**/\n\n/* PERL_VENDORARCH:\n *\tIf defined, this symbol contains the name of a private library.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.\n *\tIt may have a ~ on the front. \n *\tThe standard distribution will put nothing in this directory.\n *\tVendors who distribute perl may wish to place their own\n *\tarchitecture-dependent modules and extensions in this directory with\n *\t\tMakeMaker Makefile.PL INSTALLDIRS=vendor \n *\tor equivalent.  See INSTALL for details.\n */\n/* PERL_VENDORARCH_EXP:\n *\tThis symbol contains the ~name expanded version of PERL_VENDORARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define PERL_VENDORARCH \"\"\t\t/**/\n/*#define PERL_VENDORARCH_EXP \"\"\t\t/**/\n\n/* PERL_VENDORLIB_EXP:\n *\tThis symbol contains the ~name expanded version of VENDORLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* PERL_VENDORLIB_STEM:\n *\tThis define is PERL_VENDORLIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n/*#define PERL_VENDORLIB_EXP \"\"\t\t/**/\n/*#define PERL_VENDORLIB_STEM \"\"\t\t/**/\n\n/* SETUID_SCRIPTS_ARE_SECURE_NOW:\n *\tThis symbol, if defined, indicates that the bug that prevents\n *\tsetuid scripts from being secure is not present in this kernel.\n */\n/* DOSUID:\n *\tThis symbol, if defined, indicates that the C program should\n *\tcheck the script that it is executing for setuid/setgid bits, and\n *\tattempt to emulate setuid/setgid on systems that have disabled\n *\tsetuid #! scripts because the kernel can't do it securely.\n *\tIt is up to the package designer to make sure that this emulation\n *\tis done securely.  Among other things, it should do an fstat on\n *\tthe script it just opened to make sure it really is a setuid/setgid\n *\tscript, it should make sure the arguments passed correspond exactly\n *\tto the argument on the #! line, and it should not trust any\n *\tsubprocesses to which it must pass the filename rather than the\n *\tfile descriptor of the script to be executed.\n */\n/*#define SETUID_SCRIPTS_ARE_SECURE_NOW\t/**/\n/*#define DOSUID\t\t/**/\n\n/* USE_CROSS_COMPILE:\n *\tThis symbol, if defined, indicates that Perl is being cross-compiled.\n */\n/* PERL_TARGETARCH:\n *\tThis symbol, if defined, indicates the target architecture\n *\tPerl has been cross-compiled to.  Undefined if not a cross-compile.\n */\n#ifndef USE_CROSS_COMPILE\n/*#define\tUSE_CROSS_COMPILE\t/**/\n#define\tPERL_TARGETARCH\t\"undef\"\t/**/\n#endif\n\n/* HAS_COPYSIGNL:\n *\tThis symbol, if defined, indicates that the copysignl routine is\n *\tavailable.  If aintl is also present we can emulate modfl.\n */\n/*#define HAS_COPYSIGNL\t\t/**/\n\n/* HAS_DBMINIT_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the dbminit() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int dbminit(char *);\n */\n/*#define\tHAS_DBMINIT_PROTO\t/**/\n\n/* HAS_FLOCK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the flock() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int flock(int, int);\n */\n/*#define\tHAS_FLOCK_PROTO\t/**/\n\n/* HAS_REALPATH:\n *\tThis symbol, if defined, indicates that the realpath routine is\n *\tavailable to do resolve paths.\n */\n/*#define HAS_REALPATH\t\t/**/\n\n/* HAS_SIGPROCMASK:\n *\tThis symbol, if defined, indicates that the sigprocmask\n *\tsystem call is available to examine or change the signal mask\n *\tof the calling process.\n */\n/*#define HAS_SIGPROCMASK\t\t/**/\n\n/* HAS_SOCKATMARK:\n *\tThis symbol, if defined, indicates that the sockatmark routine is\n *\tavailable to test whether a socket is at the out-of-band mark.\n */\n/*#define HAS_SOCKATMARK\t\t/**/\n\n/* HAS_SOCKATMARK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sockatmark() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int sockatmark(int);\n */\n/*#define\tHAS_SOCKATMARK_PROTO\t/**/\n\n/* HAS_SETRESGID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresgid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresgid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESGID_PROTO\t/**/\n\n/* HAS_SETRESUID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresuid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresuid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESUID_PROTO\t/**/\n\n/* HAS_STRFTIME:\n *\tThis symbol, if defined, indicates that the strftime routine is\n *\tavailable to do time formatting.\n */\n#define HAS_STRFTIME\t\t/**/\n\n/* HAS_STRLCAT\n *      This symbol, if defined, indicates that the strlcat routine is\n *      available to do string concatenation.\n */\n/*#define HAS_STRLCAT\t\t\t/**/\n\n/* HAS_STRLCPY:\n *      This symbol, if defined, indicates that the strlcpy routine is\n *      available to do string copying.\n */\n/*#define HAS_STRLCPY\t\t\t/**/\n\n/* HAS_SYSCALL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the syscall() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int syscall(int,  ...);\n *\t\textern int syscall(long, ...);\n */\n/*#define\tHAS_SYSCALL_PROTO\t/**/\n\n/* U32_ALIGNMENT_REQUIRED:\n *\tThis symbol, if defined, indicates that you must access\n *\tcharacter data through U32-aligned pointers.\n */\n/*#define U32_ALIGNMENT_REQUIRED\t/**/\n\n/* HAS_USLEEP_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the usleep() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int usleep(useconds_t);\n */\n/*#define\tHAS_USLEEP_PROTO\t/**/\n\n/* HAS_PTHREAD_ATFORK:\n *\tThis symbol, if defined, indicates that the pthread_atfork routine\n *\tis available to setup fork handlers.\n */\n/*#define HAS_PTHREAD_ATFORK\t\t/**/\n\n#endif\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/NetWare/config.wc": "## Configured by: ~cf_email~\n## Target system: NetWare \nAuthor='Guruprasad'\nDate='$Date'\nHeader=''\nId='$Id'\nLocker=''\nLog='$Log'\nMcc='Mcc'\nRCSfile='$RCSfile'\nRevision='$Revision'\nSource=''\nState=''\n_a='.lib'\n_exe='.exe'\n_nlm='.nlm'\n_nlp='.nlp'\n_o='.obj'\nafs='false'\nalignbytes='8'\naphostname=''\napi_revision='~PERL_API_REVISION~'\napi_subversion='~PERL_API_SUBVERSION~'\napi_version='~PERL_API_VERSION~'\napi_versionstring='~PERL_API_REVISION~.~PERL_API_VERSION~.~PERL_API_SUBVERSION~'\nar='lib386'\narchlib='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\narchlibexp='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\narchname64=''\narchname='NetWare'\narchobjs=''\nasctime_r_proto='0'\nawk='awk'\nbaserev='5'\nbash=''\nbin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\nbinexp='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\nbison=''\nbootstrap_charset='undef'\nbyacc='byacc'\nbyteorder='1234'\nc=''\ncastflags='0'\ncat='type'\ncc='mwccnlm'\ncccdlflags=' '\nccdlflags=' '\nccflags='-MD -DNETWARE'\nccsymbols=''\ncf_by='nobody'\ncf_email='nobody@no.where.net'\ncf_time=''\ncharbits='8'\nchgrp=''\nchmod=''\nchown=''\nclocktype='clock_t'\ncomm=''\ncompress=''\ncontains='grep'\ncp='copy'\ncpio=''\ncpp='cl -nologo -E'\ncpp_stuff='42'\ncppccsymbols=''\ncppflags='-DNETWARE'\ncpplast=''\ncppminus=''\ncpprun='cl -nologo -E'\ncppstdin='cl -nologo -E'\ncppsymbols=''\ncrosscompile='undef'\ncrypt_r_proto='0'\ncryptlib=''\ncsh='undef'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\nd_PRIEldbl='undef'\nd_PRIFldbl='define'\nd_PRIGldbl='define'\nd_PRIX64='undef'\nd_PRId64='undef'\nd_PRIeldbl='undef'\nd_PRIfldbl='define'\nd_PRIgldbl='define'\nd_PRIi64='undef'\nd_PRIo64='undef'\nd_PRIu64='undef'\nd_PRIx64='undef'\nd_SCNfldbl='undef'\nd__fwalk='undef'\nd_accept4='undef'\nd_access='define'\nd_accessx='undef'\nd_acosh='undef'\nd_aintl='undef'\nd_alarm='undef'\nd_archlib='define'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='undef'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bsd='define'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_add_overflow='undef'\nd_builtin_choose_expr='undef'\nd_builtin_expect='undef'\nd_builtin_mul_overflow='undef'\nd_builtin_sub_overflow='undef'\nd_c99_variadic_macros='undef'\nd_casti32='undef'\nd_castneg='define'\nd_cbrt='undef'\nd_chown='undef'\nd_chroot='undef'\nd_chsize='define'\nd_class='undef'\nd_clearenv='undef'\nd_closedir='define'\nd_cmsghdr_s='undef'\nd_copysign='undef'\nd_copysignl='undef'\nd_cplusplus='undef'\nd_crypt='undef'\nd_crypt_r='undef'\nd_csh='undef'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='undef'\nd_dbl_dig='define'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='define'\nd_dir_dd_fd='undef'\nd_dirfd='undef'\nd_dirnamlen='undef'\nd_dladdr='undef'\nd_dlerror='define'\nd_dlopen='define'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_double_has_inf='define'\nd_double_has_nan='define'\nd_double_has_negative_zero='define'\nd_double_has_subnormals='define'\nd_double_style_cray='undef'\nd_double_style_ibm='undef'\nd_double_style_ieee='define'\nd_double_style_vax='undef'\nd_drand48_r='undef'\nd_drand48proto='undef'\nd_dup2='define'\nd_dup3='undef'\nd_duplocale='undef'\nd_eaccess='undef'\nd_endgrent='undef'\nd_endgrent_r='undef'\nd_endhent='undef'\nd_endhostent_r='undef'\nd_endnent='undef'\nd_endnetent_r='undef'\nd_endpent='undef'\nd_endprotoent_r='undef'\nd_endpwent='undef'\nd_endpwent_r='undef'\nd_endsent='undef'\nd_endservent_r='undef'\nd_endspent='undef'\nd_eofnblk='define'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='undef'\nd_fchdir='undef'\nd_fchmod='undef'\nd_fchmodat='undef'\nd_fchown='undef'\nd_fcntl='undef'\nd_fcntl_can_lock='undef'\nd_fd_macros='define'\nd_fd_set='define'\nd_fdclose='undef'\nd_fdim='undef'\nd_fds_bits='define'\nd_fegetround='undef'\nd_fgetpos='define'\nd_finite='undef'\nd_finitel='undef'\nd_flexfnam='define'\nd_flock='define'\nd_flockproto='undef'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='undef'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='undef'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_freelocale='undef'\nd_frexpl='undef'\nd_fs_data_s='undef'\nd_fseeko='undef'\nd_fsetpos='define'\nd_fstatfs='undef'\nd_fstatvfs='undef'\nd_fsync='undef'\nd_ftello='undef'\nd_ftime='define'\nd_futimes='undef'\nd_gai_strerror='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='undef'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='undef'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='undef'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='define'\nd_getitimer='undef'\nd_getlogin='define'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='undef'\nd_getnameinfo='undef'\nd_getnbyaddr='undef'\nd_getnbyname='undef'\nd_getnent='undef'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='define'\nd_getpagsz='undef'\nd_getpbyname='define'\nd_getpbynumber='define'\nd_getpent='undef'\nd_getpgid='undef'\nd_getpgrp2='undef'\nd_getpgrp='undef'\nd_getppid='undef'\nd_getprior='undef'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='define'\nd_getprpwnam='undef'\nd_getpwent='undef'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='define'\nd_getsent='undef'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='define'\nd_getspent='undef'\nd_getspnam='undef'\nd_getspnam_r='undef'\nd_gettimeod='undef'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='undef'\nd_grpasswd='undef'\nd_hasmntopt='undef'\nd_htonl='define'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='undef'\nd_inc_version_list='undef'\nd_index='undef'\nd_inetaton='undef'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='undef'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='define'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='undef'\nd_isinfl='undef'\nd_isless='undef'\nd_isnan='undef'\nd_isnanl='undef'\nd_isnormal='undef'\nd_j0='undef'\nd_j0l='undef'\nd_killpg='undef'\nd_lc_monetary_2008='undef'\nd_lchown='undef'\nd_ldbl_dig='define'\nd_ldexpl='undef'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='undef'\nd_link='define'\nd_linkat='undef'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localeconv_l='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='define'\nd_lockf='undef'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_long_double_style_ieee='undef'\nd_long_double_style_ieee_doubledouble='undef'\nd_long_double_style_ieee_extended='define'\nd_long_double_style_ieee_std='undef'\nd_long_double_style_vax='undef'\nd_longdbl='define'\nd_longlong='undef'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='define'\nd_lstat='undef'\nd_madvise='undef'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='define'\nd_mbrlen='undef'\nd_mbrtowc='undef'\nd_mbstowcs='define'\nd_mbtowc='define'\nd_memmem='undef'\nd_memrchr='undef'\nd_mkdir='define'\nd_mkdtemp='undef'\nd_mkfifo='undef'\nd_mkostemp='undef'\nd_mkstemp='undef'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='define'\nd_mmap='undef'\nd_modfl='undef'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='undef'\nd_msg='undef'\nd_msg_ctrunc='undef'\nd_msg_dontroute='undef'\nd_msg_oob='undef'\nd_msg_peek='undef'\nd_msg_proxy='undef'\nd_msgctl='undef'\nd_msgget='undef'\nd_msghdr_s='undef'\nd_msgrcv='undef'\nd_msgsnd='undef'\nd_msync='undef'\nd_munmap='undef'\nd_mymalloc='undef'\nd_nan='undef'\nd_nanosleep='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_newlocale='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='undef'\nd_nl_langinfo='undef'\nd_nv_preserves_uv='define'\nd_nv_zero_is_allbits_zero='undef'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='undef'\nd_openat='undef'\nd_pathconf='undef'\nd_pause='undef'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe2='undef'\nd_pipe='define'\nd_poll='undef'\nd_portable='define'\nd_prctl='undef'\nd_prctl_set_name='undef'\nd_printf_format_null='undef'\nd_procselfexe='undef'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='undef'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='undef'\nd_pwpasswd='undef'\nd_pwquota='undef'\nd_qgcvt='undef'\nd_quad='undef'\nd_querylocale='undef'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='undef'\nd_readv='undef'\nd_recvmsg='undef'\nd_regcomp='undef'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_renameat='undef'\nd_rewinddir='define'\nd_rint='undef'\nd_rmdir='define'\nd_round='undef'\nd_sbrkproto='undef'\nd_scalbn='undef'\nd_scalbnl='undef'\nd_sched_yield='undef'\nd_scm_rights='undef'\nd_seekdir='define'\nd_select='define'\nd_sem='undef'\nd_semctl='undef'\nd_semctl_semid_ds='undef'\nd_semctl_semun='undef'\nd_semget='undef'\nd_semop='undef'\nd_sendmsg='undef'\nd_setegid='undef'\nd_seteuid='undef'\nd_setgrent='undef'\nd_setgrent_r='undef'\nd_setgrps='undef'\nd_sethent='undef'\nd_sethostent_r='undef'\nd_setitimer='undef'\nd_setlinebuf='undef'\nd_setlocale='define'\nd_setlocale_accepts_any_locale_name='undef'\nd_setlocale_r='undef'\nd_setnent='undef'\nd_setnetent_r='undef'\nd_setpent='undef'\nd_setpgid='undef'\nd_setpgrp2='undef'\nd_setpgrp='undef'\nd_setprior='undef'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='undef'\nd_setpwent_r='undef'\nd_setregid='undef'\nd_setresgid='undef'\nd_setresuid='undef'\nd_setreuid='undef'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='undef'\nd_setservent_r='undef'\nd_setsid='undef'\nd_setspent='undef'\nd_setvbuf='define'\nd_shm='undef'\nd_shmat='undef'\nd_shmatprototype='undef'\nd_shmctl='undef'\nd_shmdt='undef'\nd_shmget='undef'\nd_sigaction='undef'\nd_siginfo_si_addr='undef'\nd_siginfo_si_band='undef'\nd_siginfo_si_errno='undef'\nd_siginfo_si_pid='undef'\nd_siginfo_si_status='undef'\nd_siginfo_si_uid='undef'\nd_siginfo_si_value='undef'\nd_signbit='undef'\nd_sigprocmask='undef'\nd_sigsetjmp='undef'\nd_sin6_scope_id='undef'\nd_sitearch='undef'\nd_snprintf='undef'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='define'\nd_socklen_t='undef'\nd_sockpair='undef'\nd_socks5_init='undef'\nd_sqrtl='undef'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='undef'\nd_statfs_f_flags='undef'\nd_statfs_s='undef'\nd_static_inline='undef'\nd_statvfs='undef'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='undef'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='undef'\nd_stdio_stream_array='undef'\nd_stdiobase='undef'\nd_stdstdio='undef'\nd_strcoll='define'\nd_strerror_l='undef'\nd_strerror_r='undef'\nd_strftime='define'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strnlen='undef'\nd_strtod='define'\nd_strtod_l='undef'\nd_strtol='define'\nd_strtold='undef'\nd_strtold_l='undef'\nd_strtoll='undef'\nd_strtoq='undef'\nd_strtoul='define'\nd_strtoull='undef'\nd_strtouq='undef'\nd_strxfrm='define'\nd_suidsafe='undef'\nd_symlink='undef'\nd_syscall='undef'\nd_syscallproto='undef'\nd_sysconf='undef'\nd_sysernlst=''\nd_syserrlst='define'\nd_system='define'\nd_tcgetpgrp='undef'\nd_tcsetpgrp='undef'\nd_telldir='define'\nd_telldirproto='define'\nd_tgamma='undef'\nd_thread_safe_nl_langinfo_l='undef'\nd_time='define'\nd_timegm='undef'\nd_times='undef'\nd_tm_tm_gmtoff='undef'\nd_tm_tm_zone='undef'\nd_tmpnam_r='undef'\nd_towlower='undef'\nd_towupper='undef'\nd_trunc='undef'\nd_truncate='undef'\nd_truncl='undef'\nd_ttyname_r='undef'\nd_tzname='define'\nd_u32align='undef'\nd_ualarm='undef'\nd_umask='define'\nd_uname='define'\nd_union_semun='define'\nd_unlinkat='undef'\nd_unordered='undef'\nd_unsetenv='undef'\nd_uselocale='undef'\nd_usleep='undef'\nd_usleepproto='undef'\nd_ustat='undef'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='define'\nd_voidtty=''\nd_vsnprintf='undef'\nd_wait4='undef'\nd_waitpid='define'\nd_wcscmp='undef'\nd_wcstombs='define'\nd_wcsxfrm='undef'\nd_wctomb='define'\nd_writev='undef'\nd_xenix='undef'\ndate='date'\ndb_hashtype='int'\ndb_prefixtype='int'\ndb_version_major='0'\ndb_version_minor='0'\ndb_version_patch='0'\ndef_perlroot='sys:\\perl\\scripts'\ndef_temp='sys:\\perl\\temp'\ndefault_inc_excludes_dot='undef'\ndirentrytype='DIR'\ndlext='nlm'\ndlsrc='dl_netware.xs'\ndoubleinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f'\ndoublekind='3'\ndoublemantbits='52'\ndoublenanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f'\ndoublesize='8'\ndrand01='Perl_drand48()'\ndrand48_r_proto='0'\ndtrace=''\ndynamic_ext='Socket IO Fcntl Opcode SDBM_File attributes'\neagain='EAGAIN'\nebcdic='undef'\necho='echo'\negrep='egrep'\nemacs=''\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext='.exe'\nexpr='expr'\nextensions='~static_ext~ ~dynamic_ext~ ~nonxs_ext~'\nfflushNULL='define'\nfflushall='undef'\nfind='find'\nfirstmakefile='makefile'\nflex=''\nfpossize='4'\nfpostype='fpos_t'\nfreetype='void'\nfull_ar=''\nfull_csh=''\nfull_sed=''\ngccversion=''\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"ld\"'\ngidsign='-1'\ngidsize='4'\ngidtype='gid_t'\nglibpth='/usr/shlib  /lib/pa1.1 /usr/lib/large /lib /usr/lib /usr/lib/386 /lib/386 /lib/large /usr/lib/small /lib/small /usr/ccs/lib /usr/ucblib /usr/shlib '\ngmtime_r_proto='0'\ngrep='grep'\ngroupcat=''\ngroupstype='gid_t'\ngzip='gzip'\nh_fcntl='false'\nh_sysfile='true'\nhint='recommended'\nhostcat='ypcat hosts'\nhuge=''\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='__int64'\ni8size='1'\ni8type='char'\ni_arpainet='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='undef'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='define'\ni_execinfo='undef'\ni_fcntl='define'\ni_fenv='undef'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='undef'\ni_ieeefp='undef'\ni_inttypes='undef'\ni_langinfo='undef'\ni_libutil='undef'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='define'\ni_mallocmalloc='undef'\ni_mntent='undef'\ni_ndbm='undef'\ni_netdb='define'\ni_neterrno='undef'\ni_netinettcp='undef'\ni_niin='define'\ni_poll='undef'\ni_prot='undef'\ni_pthread='undef'\ni_pwd='undef'\ni_quadmath='undef'\ni_rpcsvcdbm='define'\ni_sgtty='undef'\ni_shadow='undef'\ni_socks='undef'\ni_stdbool='define'\ni_stdint='undef'\ni_stdlib='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='undef'\ni_sysfile='undef'\ni_sysfilio='define'\ni_sysin='undef'\ni_sysioctl='define'\ni_syslog='undef'\ni_sysmman='undef'\ni_sysmode='undef'\ni_sysmount='undef'\ni_sysndir='undef'\ni_sysparam='undef'\ni_syspoll='undef'\ni_sysresrc='undef'\ni_syssecrt='undef'\ni_sysselct='undef'\ni_syssockio='define'\ni_sysstat='define'\ni_sysstatfs='undef'\ni_sysstatvfs='undef'\ni_systime='undef'\ni_systimek='undef'\ni_systimes='undef'\ni_systypes='define'\ni_sysuio='undef'\ni_sysun='undef'\ni_sysutsname='define'\ni_sysvfs='undef'\ni_syswait='undef'\ni_termio='undef'\ni_termios='undef'\ni_time='define'\ni_unistd='undef'\ni_ustat='undef'\ni_utime='define'\ni_vfork='undef'\ni_wchar='undef'\ni_wctype='undef'\ni_xlocale='undef'\nignore_versioned_solibs=''\ninc_version_list=''\ninc_version_list_init='0'\nincpath=''\ninews=''\ninstallarchlib='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\ninstallbin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\ninstallhtmldir='~INST_TOP~~INST_VER~\\html'\ninstallhtmlhelpdir='~INST_TOP~~INST_VER~\\htmlhelp'\ninstallman1dir='~INST_TOP~~INST_VER~\\man\\man1'\ninstallman3dir='~INST_TOP~~INST_VER~\\man\\man3'\ninstallnwlcgi='~INST_NW_TOP2~~INST_NW_VER~\\lcgi'\ninstallnwlib='~INST_NW_TOP2~~INST_NW_VER~\\lib'\ninstallnwscripts='~INST_NW_TOP2~~INST_NW_VER~\\scripts'\ninstallnwsystem='~INST_NW_TOP2~~INST_NW_VER~\\system'\ninstallprefix='~INST_TOP~~INST_VER~'\ninstallprefixexp='~INST_TOP~~INST_VER~'\ninstallprivlib='~INST_TOP~~INST_VER~\\lib'\ninstallscript='~INST_TOP~~INST_VER~\\bin'\ninstallsitearch='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\ninstallsitebin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\ninstallsitelib='~INST_TOP~\\site~INST_VER~\\lib'\ninstallstyle='lib'\ninstallusrbinperl='undef'\ninstallvendorarch=''\ninstallvendorbin=''\ninstallvendorlib=''\nintsize='4'\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nknown_extensions='~static_ext~ ~dynamic_ext~ ~nonxs_ext~'\nksh=''\nlarge=''\nld='link'\nlddlflags='-dll ~LINK_FLAGS~'\nldflags='~LINK_FLAGS~'\nldlibpthname=''\nless='less'\nlib_ext='.lib'\nlibc=''\nlibperl='perl.lib'\nlibpth=''\nlibs=''\nlibsdirs=''\nlibsfiles=''\nlibsfound=''\nlibspath=''\nlibswanted='net socket inet nsl nm ndbm gdbm dbm db malloc dl ld sun m c cposix posix ndir dir crypt ucb bsd BSD PW x'\nline='line'\nlint=''\nlkflags=''\nln=''\nlns='copy'\nlocaltime_r_proto='0'\nlocincpth='/usr/local/include /opt/local/include /usr/gnu/include /opt/gnu/include /usr/GNU/include /opt/GNU/include'\nloclibpth='/usr/local/lib /opt/local/lib /usr/gnu/lib /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib'\nlongdblinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7f'\nlongdblkind='3'\nlongdblmantbits='64'\nlongdblnanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'\nlongdblsize='10'\nlonglongsize='8'\nlongsize='4'\nlp=''\nlpr=''\nls='dir'\nlseeksize='4'\nlseektype='off_t'\nmad='undef'\nmail=''\nmailx=''\nmake='nmake'\nmake_set_make='#'\nmallocobj='malloc.o'\nmallocsrc='malloc.c'\nmalloctype='void *'\nman1dir='~INST_TOP~~INST_VER~\\man\\man1'\nman1direxp='~INST_TOP~~INST_VER~\\man\\man1'\nman1ext='1'\nman3dir='~INST_TOP~~INST_VER~\\man\\man3'\nman3direxp='~INST_TOP~~INST_VER~\\man\\man3'\nman3ext='3'\nmedium=''\nmips_type=''\nmkdir='mkdir'\nmmaptype='void *'\nmodels='none'\nmodetype='mode_t'\nmore='more /e'\nmultiarch='undef'\nmv=''\nmyarchname='MSWin32'\nmydomain=''\nmyhostname=''\nmyuname=''\nn='-n'\nneed_va_copy='define'\nnetdb_hlen_type='int'\nnetdb_host_type='char *'\nnetdb_name_type='char *'\nnetdb_net_type='long'\nnm=''\nnm_opt=''\nnm_so_opt=''\nnonxs_ext='Errno'\nnroff=''\nnvEUformat='\"E\"'\nnvFUformat='\"F\"'\nnvGUformat='\"G\"'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='32'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvmantbits='52'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.obj'\nold_pthread_create_joinable=''\noptimize='-O'\norderlib='false'\nosname='NetWare'\nosvers='5.x'\notherlibdirs=''\npackage='perl5'\npager='more /e'\npasscat=''\npatchlevel='~PATCHLEVEL~'\npath_sep=';'\nperl5=''\nperl='perl'\nperl_static_inline='static'\nperladmin=''\nperlpath='~INST_TOP~~INST_VER~\\bin~INST_ARCH~\\perl.nlm'\npg=''\nphostname='hostname'\npidtype='int'\nplibpth=''\npmake=''\npr=''\nprefix='~INST_TOP~'\nprefixexp='~INST_DRV~'\nprivlib='~INST_NW_TOP1~\\lib'\nprivlibexp='~INST_TOP~~INST_VER~\\lib'\nprocselfexe=''\nprototype='define'\nptrsize='4'\nquadkind='5'\nquadtype='__int64'\nrandbits='48'\nrandfunc='Perl_drand48'\nrandom_r_proto='0'\nrandseedtype='U32'\nranlib='rem'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nrevision='5'\nrm='del'\nrmail=''\nrunnm='true'\nsGMTIME_max='2147483647'\nsGMTIME_min='0'\nsLOCALTIME_max='2147483647'\nsLOCALTIME_min='0'\nsPRIEldbl='\"E\"'\nsPRIFldbl='\"F\"'\nsPRIGldbl='\"G\"'\nsPRIX64='\"lX\"'\nsPRId64='\"ld\"'\nsPRIeldbl='\"e\"'\nsPRIfldbl='\"f\"'\nsPRIgldbl='\"g\"'\nsPRIi64='\"li\"'\nsPRIo64='\"lo\"'\nsPRIu64='\"lu\"'\nsPRIx64='\"lx\"'\nsSCNfldbl=''\nsched_yield=''\nscriptdir='~INST_TOP~~INST_VER~\\bin'\nscriptdirexp='~INST_TOP~~INST_VER~\\bin'\nsed='sed'\nseedfunc='Perl_drand48_init'\nselectminbits='32'\nselecttype='fd_set *'\nsendmail='blat'\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='cmd /x /c'\nshar=''\nsharpbang='#!'\nshmattype='void *'\nshortsize='2'\nshrpenv=''\nshsharp='true'\nsig_count='26'\nsig_name='ZERO NUM01 INT QUIT ILL NUM05 NUM06 NUM07 FPE KILL NUM10 SEGV NUM12 PIPE ALRM TERM NUM16 NUM17 NUM18 NUM19 CHLD BREAK ABRT STOP NUM24 CONT CLD'\nsig_name_init='\"ZERO\", \"NUM01\", \"INT\", \"QUIT\", \"ILL\", \"NUM05\", \"NUM06\", \"NUM07\", \"FPE\", \"KILL\", \"NUM10\", \"SEGV\", \"NUM12\", \"PIPE\", \"ALRM\", \"TERM\", \"NUM16\", \"NUM17\", \"NUM18\", \"NUM19\", \"CHLD\", \"BREAK\", \"ABRT\", \"STOP\", \"NUM24\", \"CONT\", \"CLD\", 0'\nsig_num='0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 20 0'\nsig_num_init='0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 20, 0'\nsig_size='27'\nsignal_t='void'\nsitearch='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\nsitearchexp='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\nsitebin='~INST_TOP~\\site~INST_VER~\\bin~INST_ARCH~'\nsitebinexp='~INST_TOP~\\site~INST_VER~\\bin~INST_ARCH~'\nsitelib='~INST_TOP~\\site~INST_VER~\\lib'\nsitelib_stem=''\nsitelibexp='~INST_TOP~\\site~INST_VER~\\lib'\nsiteprefix='~INST_TOP~\\site~INST_VER~'\nsiteprefixexp='~INST_TOP~\\site~INST_VER~'\nsizesize='4'\nsizetype='size_t'\nsleep=''\nsmail=''\nsmall=''\nso='dll'\nsockethdr=''\nsocketlib=''\nsocksizetype='int'\nsort='sort'\nspackage='Perl5'\nspitshell=''\nsplit=''\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc=''\nssizetype='int'\nst_ino_sign='1'\nst_ino_size='4'\nstartperl='#!perl'\nstartsh='#!/bin/sh'\nstatic_ext='DynaLoader'\nstdchar='char'\nstdio_base='((fp)->_base)'\nstdio_bufsiz='((fp)->_cnt + (fp)->_ptr - (fp)->_base)'\nstdio_cnt='((fp)->_cnt)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\nstrings='/usr/include/string.h'\nsubmit=''\nsubversion='~SUBVERSION~'\nsysman='/usr/man/man1'\ntail=''\ntar=''\ntargetarch=''\ntargetsh='cmd /x /c'\ntbl=''\ntee=''\ntest=''\ntimeincl='/usr/include/sys/time.h '\ntimetype='time_t'\ntmpnam_r_proto='0'\ntouch='touch'\ntr=''\ntrnl='\\012'\ntroff=''\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='unsigned __int64'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"ld\"'\nuidsign='-1'\nuidsize='4'\nuidtype='uid_t'\nuname='uname'\nuniq='uniq'\nuquadtype='unsigned __int64'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='undef'\nusedl='define'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='define'\nusekernprocpathname='undef'\nuselargefiles='undef'\nuselongdouble='undef'\nusemallocwrap='undef'\nusemorebits='undef'\nusemultiplicity='define'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='undef'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='true'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='true'\nusrinc='/usr/include'\nuuname=''\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvendorarch=''\nvendorarchexp=''\nvendorbin=''\nvendorbinexp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorprefix=''\nvendorprefixexp=''\nversion='~VERSION~'\nvi=''\nxlibpth='/usr/lib/386 /lib/386'\nzcat=''\nzip='zip'\nPERL_REVISION='~PERL_REVISION~'\nPERL_SUBVERSION='~PERL_SUBVERSION~'\nPERL_VERSION='~PERL_VERSION~'\nPERL_API_REVISION='~PERL_API_REVISION~'\nPERL_API_SUBVERSION='~PERL_API_SUBVERSION~'\nPERL_API_VERSION='~PERL_API_VERSION~'\nPATCHLEVEL='~PERL_VERSION~'\nSUBVERSION='~PERL_SUBVERSION~'\nPERL_CONFIG_SH='true'\nbase_import=''\nnlm_version=''\nmpktool=''\ntoolpath=''\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/amigaos4/config.sh": "bin='/SDK/Local/C'\nbinexp='/SDK/Local/C'\nccflags='-fno-strict-aliasing  -mcrt=newlib -I/SDK/newlib/include -I/SDK/local/newlib/include -I/SDK/Local/common/include -DDEBUGGING'\ncppflags='-fno-strict-aliasing -I/SDK/newlib/include -I/SDK/local/newlib/include -I/SDK/Local/common/include -DDEBUGGING'\ninitialinstalllocation='/SDK/Local/C'\ninstallbin='/SDK/Local/C'\ninstallprefix='/SDK/Local/newlib'\ninstallprefixexp='/SDK/Local/newlib'\ninstallscript='/SDK/Local/C'\ninstallsitebin='/SDK/Local/C'\ninstallsitescript='/SDK/Local/C'\nlibc='/SDK/newlib/lib/libc.a'\nlibpth='/SDK/newlib/lib /SDK/local/newlib/lib'\nlibsdirs=' /SDK/newlib/lib'\nlibsfound=' /SDK/newlib/lib/libsocket.a /SDK/newlib/lib/libm.a /SDK/newlib/lib/libc.a'\nlibspath=' /SDK/newlib/lib /SDK/local/newlib/lib'\nmake_set_make='MAKE=/SDK/C/gmake'\npager='/SYS/Utilities/MultiView'\nperl5='/SDK/Local/C/perl'\nperlpath='/SDK/Local/C/perl'\nprefix='/SDK/Local/newlib'\nprefixexp='/SDK/Local/newlib'\nscriptdir='/SDK/Local/C'\nscriptdirexp='/SDK/Local/C'\nsitebin='/SDK/Local/C'\nsitebinexp='/SDK/Local/C'\nsiteprefix='/SDK/Local'\nsiteprefixexp='/SDK/Local'\nsitescript='/SDK/Local/C'\nsitescriptexp='/SDK/Local/C'\nstartperl='#!SDK:Local/C/perl'\nstartsh='#!SDK:C/sh'\nxlibpth='/lib /SDK/newlib/lib'\nlddlflags='-shared'\nldflags='-mcrt=newlib'\nldflags_uselargefiles=''\ndlext='pso'\ncccdlflags='-fPIC'\nccdlflags='-use-dynld  -Wl,--export-dynamic'\nlibs='-lm -lauto -lpthread -lunix'\nusedl='define'\nuseithreads='define'\nusemultiplicity='define'\nusemymalloc='n'\nusenm='false'\nusethreads='define'\ndlsrc='dl_dlopen.xs'\nd_procselfexe='undef'\nsig_count='50'\nsig_name='ZERO HUP INT QUIT ILL TRAP ABRT EMT FPE KILL BUS SEGV SYS PIPE ALRM TERM URG STOP TSTP CONT CHLD TTIN TTOU IO XCPU XFSZ VTALRM PROF WINCH LOST USR1 USR2 NUM32 NUM33 NUM34 NUM35 NUM36 NUM37 NUM38 NUM39 NUM40 NUM41 NUM42 NUM43 NUM44 NUM45 NUM46 NUM47 NUM48 NUM49 CLD IOT POLL '\nsig_name_init='\"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"TRAP\", \"ABRT\" , \"EMT\", \"FPE\",  \"KILL\", \"BUS\", \"SEGV\",\"SYS\",\"PIPE\",\"ALRM\",\"TERM\",\"URG\",\"STOP\",\"TSTP\",\"CONT\", \"CHLD\",\"TTIN\", \"TTOU\", \"IO\" , \"XCPU\", \"XFSZ\", \"VTALRM\", \"PROF\", \"WINCH\", \"LOST\" , \"USR1\", \"USR2\", \"NUM32\", \"NUM33\", \"NUM34\", \"NUM35\", \"NUM36\", \"NUM37\", \"NUM38\", \"NUM39\", \"NUM40\", \"NUM41\", \"NUM42\", \"NUM43\", \"NUM44\", \"NUM45\", \"NUM46\", \"NUM47\", \"NUM48\", \"NUM49\", \"CLD\", \"IOT\" , \"POLL\"'\nsig_num='0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 20 6 23 '\nsig_num_init='0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 20, 6, 23 '\nsig_size='53'\noptimize='-gstabs -O2'\narchobjs='amigaos.o amigaio.o'\nfirstmakefile='gnumakefile'\ni_sysfile='undef' # just a wrapper for fnctl and gets included after\ni_fcntl='define'\nh_fcntl='true'\nh_sysfile='false'\ni_syswait='undef'\nd_flock='define'\nd_flockproto='define'\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/win32/config_H.vc": "/* This file was produced by running the config_h.SH script, which\n * gets its values from undef, which is generally produced by\n * running Configure.\n *\n * Feel free to modify any of this as the need arises.  Note, however,\n * that running config_h.SH again will wipe out any changes you've made.\n * For a more permanent change edit undef and rerun config_h.SH.\n */\n\n/* Package name      : perl5\n * Source directory  : \n * Configuration time: Tue Oct 17 08:29:51 2017\n * Configured by     : shay\n * Target system     : \n */\n\n#ifndef _config_h_\n#define _config_h_\n\n/* LOC_SED:\n *\tThis symbol holds the complete pathname to the sed program.\n */\n#define LOC_SED \t\"\"\t/**/\n\n/* HAS_ALARM:\n *\tThis symbol, if defined, indicates that the alarm routine is\n *\tavailable.\n */\n#define HAS_ALARM\t\t/**/\n\n/* HAS_CBRT:\n *\tThis symbol, if defined, indicates that the cbrt() (cube root)\n *\tfunction is available.\n */\n/*#define HAS_CBRT\t/ **/\n\n/* HAS_CHOWN:\n *\tThis symbol, if defined, indicates that the chown routine is\n *\tavailable.\n */\n/*#define HAS_CHOWN\t\t/ **/\n\n/* HAS_CHROOT:\n *\tThis symbol, if defined, indicates that the chroot routine is\n *\tavailable.\n */\n/*#define HAS_CHROOT\t\t/ **/\n\n/* HAS_CHSIZE:\n *\tThis symbol, if defined, indicates that the chsize routine is available\n *\tto truncate files.  You might need a -lx to get this routine.\n */\n#define\tHAS_CHSIZE\t\t/**/\n\n/* HAS_CRYPT:\n *\tThis symbol, if defined, indicates that the crypt routine is available\n *\tto encrypt passwords and the like.\n */\n#define HAS_CRYPT\t\t/**/\n\n/* HAS_CTERMID:\n *\tThis symbol, if defined, indicates that the ctermid routine is\n *\tavailable to generate filename for terminal.\n */\n/*#define HAS_CTERMID\t\t/ **/\n\n/* HAS_CUSERID:\n *\tThis symbol, if defined, indicates that the cuserid routine is\n *\tavailable to get character login names.\n */\n/*#define HAS_CUSERID\t\t/ **/\n\n/* HAS_DIFFTIME:\n *\tThis symbol, if defined, indicates that the difftime routine is\n *\tavailable.\n */\n#define HAS_DIFFTIME\t\t/**/\n\n/* HAS_DLERROR:\n *\tThis symbol, if defined, indicates that the dlerror routine is\n *\tavailable to return a string describing the last error that\n *\toccurred from a call to dlopen(), dlclose() or dlsym().\n */\n#define HAS_DLERROR\t/**/\n\n/* HAS_DUP2:\n *\tThis symbol, if defined, indicates that the dup2 routine is\n *\tavailable to duplicate file descriptors.\n */\n#define HAS_DUP2\t/**/\n\n/* HAS_FCHMOD:\n *\tThis symbol, if defined, indicates that the fchmod routine is available\n *\tto change mode of opened files.  If unavailable, use chmod().\n */\n/*#define HAS_FCHMOD\t\t/ **/\n\n/* HAS_FCHOWN:\n *\tThis symbol, if defined, indicates that the fchown routine is available\n *\tto change ownership of opened files.  If unavailable, use chown().\n */\n/*#define HAS_FCHOWN\t\t/ **/\n\n/* HAS_FCNTL:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe fcntl() function exists.\n */\n/*#define HAS_FCNTL\t\t/ **/\n\n/* HAS_FGETPOS:\n *\tThis symbol, if defined, indicates that the fgetpos routine is\n *\tavailable to get the file position indicator, similar to ftell().\n */\n#define HAS_FGETPOS\t/**/\n\n/* HAS_FLOCK:\n *\tThis symbol, if defined, indicates that the flock routine is\n *\tavailable to do file locking.\n */\n#define HAS_FLOCK\t\t/**/\n\n/* HAS_FORK:\n *\tThis symbol, if defined, indicates that the fork routine is\n *\tavailable.\n */\n/*#define HAS_FORK\t\t/ **/\n\n/* HAS_FSETPOS:\n *\tThis symbol, if defined, indicates that the fsetpos routine is\n *\tavailable to set the file position indicator, similar to fseek().\n */\n#define HAS_FSETPOS\t/**/\n\n/* HAS_GETTIMEOFDAY:\n *\tThis symbol, if defined, indicates that the gettimeofday() system\n *\tcall is available for a sub-second accuracy clock. Usually, the file\n *\t<sys/resource.h> needs to be included (see I_SYS_RESOURCE).\n *\tThe type \"Timeval\" should be used to refer to \"struct timeval\".\n */\n#define HAS_GETTIMEOFDAY\t/**/\n#ifdef HAS_GETTIMEOFDAY\n#define Timeval struct timeval\t/* Structure used by gettimeofday() */\n#endif\n\n/* HAS_GETGROUPS:\n *\tThis symbol, if defined, indicates that the getgroups() routine is\n *\tavailable to get the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_GETGROUPS\t\t/ **/\n\n/* HAS_GETLOGIN:\n *\tThis symbol, if defined, indicates that the getlogin routine is\n *\tavailable to get the login name.\n */\n#define HAS_GETLOGIN\t\t/**/\n\n/* HAS_GETPGID:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe getpgid(pid) function is available to get the\n *\tprocess group id.\n */\n/*#define HAS_GETPGID\t\t/ **/\n\n/* HAS_GETPGRP2:\n *\tThis symbol, if defined, indicates that the getpgrp2() (as in DG/UX)\n *\troutine is available to get the current process group.\n */\n/*#define HAS_GETPGRP2\t\t/ **/\n\n/* HAS_GETPPID:\n *\tThis symbol, if defined, indicates that the getppid routine is\n *\tavailable to get the parent process ID.\n */\n/*#define HAS_GETPPID\t\t/ **/\n\n/* HAS_GETPRIORITY:\n *\tThis symbol, if defined, indicates that the getpriority routine is\n *\tavailable to get a process's priority.\n */\n/*#define HAS_GETPRIORITY\t\t/ **/\n\n/* HAS_INET_ATON:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tinet_aton() function is available to parse IP address \"dotted-quad\"\n *\tstrings.\n */\n/*#define HAS_INET_ATON\t\t/ **/\n\n/* HAS_KILLPG:\n *\tThis symbol, if defined, indicates that the killpg routine is available\n *\tto kill process groups.  If unavailable, you probably should use kill\n *\twith a negative process number.\n */\n#define HAS_KILLPG\t/**/\n\n/* HAS_LINK:\n *\tThis symbol, if defined, indicates that the link routine is\n *\tavailable to create hard links.\n */\n#define HAS_LINK\t/**/\n\n/* HAS_LOCALECONV:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable for numeric and monetary formatting conventions.\n */\n#define HAS_LOCALECONV\t/**/\n\n/* HAS_LOCKF:\n *\tThis symbol, if defined, indicates that the lockf routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_LOCKF\t\t/ **/\n\n/* HAS_LSTAT:\n *\tThis symbol, if defined, indicates that the lstat routine is\n *\tavailable to do file stats on symbolic links.\n */\n/*#define HAS_LSTAT\t\t/ **/\n\n/* HAS_MBLEN:\n *\tThis symbol, if defined, indicates that the mblen routine is available\n *\tto find the number of bytes in a multibye character.\n */\n#define HAS_MBLEN\t\t/**/\n\n/* HAS_MBSTOWCS:\n *\tThis symbol, if defined, indicates that the mbstowcs routine is\n *\tavailable to convert a multibyte string into a wide character string.\n */\n#define\tHAS_MBSTOWCS\t\t/**/\n\n/* HAS_MBTOWC:\n *\tThis symbol, if defined, indicates that the mbtowc routine is available\n *\tto convert a multibyte to a wide character.\n */\n#define HAS_MBTOWC\t\t/**/\n\n/* HAS_MKDIR:\n *\tThis symbol, if defined, indicates that the mkdir routine is available\n *\tto create directories.  Otherwise you should fork off a new process to\n *\texec /bin/mkdir.\n */\n#define HAS_MKDIR\t\t/**/\n\n/* HAS_MKFIFO:\n *\tThis symbol, if defined, indicates that the mkfifo routine is\n *\tavailable to create FIFOs. Otherwise, mknod should be able to\n *\tdo it for you. However, if mkfifo is there, mknod might require\n *\tsuper-user privileges which mkfifo will not.\n */\n/*#define HAS_MKFIFO\t\t/ **/\n\n/* HAS_MKTIME:\n *\tThis symbol, if defined, indicates that the mktime routine is\n *\tavailable.\n */\n#define HAS_MKTIME\t\t/**/\n\n/* HAS_MSYNC:\n *\tThis symbol, if defined, indicates that the msync system call is\n *\tavailable to synchronize a mapped file.\n */\n/*#define HAS_MSYNC\t\t/ **/\n\n/* HAS_MUNMAP:\n *\tThis symbol, if defined, indicates that the munmap system call is\n *\tavailable to unmap a region, usually mapped by mmap().\n */\n/*#define HAS_MUNMAP\t\t/ **/\n\n/* HAS_NICE:\n *\tThis symbol, if defined, indicates that the nice routine is\n *\tavailable.\n */\n/*#define HAS_NICE\t\t/ **/\n\n/* HAS_PATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given filename.\n */\n/* HAS_FPATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given open file descriptor.\n */\n/*#define HAS_PATHCONF\t\t/ **/\n/*#define HAS_FPATHCONF\t\t/ **/\n\n/* HAS_PAUSE:\n *\tThis symbol, if defined, indicates that the pause routine is\n *\tavailable to suspend a process until a signal is received.\n */\n#define HAS_PAUSE\t\t/**/\n\n/* HAS_PIPE:\n *\tThis symbol, if defined, indicates that the pipe routine is\n *\tavailable to create an inter-process channel.\n */\n#define HAS_PIPE\t\t/**/\n\n/* HAS_POLL:\n *\tThis symbol, if defined, indicates that the poll routine is\n *\tavailable to poll active file descriptors.  Please check I_POLL and\n *\tI_SYS_POLL to know which header should be included as well.\n */\n/*#define HAS_POLL\t\t/ **/\n\n/* HAS_READDIR:\n *\tThis symbol, if defined, indicates that the readdir routine is\n *\tavailable to read directory entries. You may have to include\n *\t<dirent.h>. See I_DIRENT.\n */\n#define HAS_READDIR\t\t/**/\n\n/* HAS_SEEKDIR:\n *\tThis symbol, if defined, indicates that the seekdir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_SEEKDIR\t\t/**/\n\n/* HAS_TELLDIR:\n *\tThis symbol, if defined, indicates that the telldir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_TELLDIR\t\t/**/\n\n/* HAS_REWINDDIR:\n *\tThis symbol, if defined, indicates that the rewinddir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_REWINDDIR\t\t/**/\n\n/* HAS_READLINK:\n *\tThis symbol, if defined, indicates that the readlink routine is\n *\tavailable to read the value of a symbolic link.\n */\n/*#define HAS_READLINK\t\t/ **/\n\n/* HAS_REGCOMP:\n *\tThis symbol, if defined, indicates that the regcomp() routine is\n *\tavailable to do some regular patern matching (usually on POSIX.2\n *\tconforming systems).\n */\n/*#define HAS_REGCOMP\t\t/ * POSIX.2 */\n\n/* HAS_RENAME:\n *\tThis symbol, if defined, indicates that the rename routine is available\n *\tto rename files.  Otherwise you should do the unlink(), link(), unlink()\n *\ttrick.\n */\n#define HAS_RENAME\t/**/\n\n/* HAS_RMDIR:\n *\tThis symbol, if defined, indicates that the rmdir routine is\n *\tavailable to remove directories. Otherwise you should fork off a\n *\tnew process to exec /bin/rmdir.\n */\n#define HAS_RMDIR\t\t/**/\n\n/* HAS_SELECT:\n *\tThis symbol, if defined, indicates that the select routine is\n *\tavailable to select active file descriptors. If the timeout field\n *\tis used, <sys/time.h> may need to be included.\n */\n#define HAS_SELECT\t/**/\n\n/* HAS_SETEGID:\n *\tThis symbol, if defined, indicates that the setegid routine is available\n *\tto change the effective gid of the current program.\n */\n/*#define HAS_SETEGID\t\t/ **/\n\n/* HAS_SETEUID:\n *\tThis symbol, if defined, indicates that the seteuid routine is available\n *\tto change the effective uid of the current program.\n */\n/*#define HAS_SETEUID\t\t/ **/\n\n/* HAS_SETGROUPS:\n *\tThis symbol, if defined, indicates that the setgroups() routine is\n *\tavailable to set the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_SETGROUPS\t\t/ **/\n\n/* HAS_SETLINEBUF:\n *\tThis symbol, if defined, indicates that the setlinebuf routine is\n *\tavailable to change stderr or stdout from block-buffered or unbuffered\n *\tto a line-buffered mode.\n */\n/*#define HAS_SETLINEBUF\t\t/ **/\n\n/* HAS_SETLOCALE:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable to handle locale-specific ctype implementations.\n */\n#define HAS_SETLOCALE\t/**/\n\n/* HAS_SETPGID:\n *\tThis symbol, if defined, indicates that the setpgid(pid, gpid)\n *\troutine is available to set process group ID.\n */\n/*#define HAS_SETPGID\t/ **/\n\n/* HAS_SETPGRP2:\n *\tThis symbol, if defined, indicates that the setpgrp2() (as in DG/UX)\n *\troutine is available to set the current process group.\n */\n/*#define HAS_SETPGRP2\t\t/ **/\n\n/* HAS_SETPRIORITY:\n *\tThis symbol, if defined, indicates that the setpriority routine is\n *\tavailable to set a process's priority.\n */\n/*#define HAS_SETPRIORITY\t\t/ **/\n\n/* HAS_SETREGID:\n *\tThis symbol, if defined, indicates that the setregid routine is\n *\tavailable to change the real and effective gid of the current\n *\tprocess.\n */\n/* HAS_SETRESGID:\n *\tThis symbol, if defined, indicates that the setresgid routine is\n *\tavailable to change the real, effective and saved gid of the current\n *\tprocess.\n */\n/*#define HAS_SETREGID\t\t/ **/\n/*#define HAS_SETRESGID\t\t/ **/\n\n/* HAS_SETREUID:\n *\tThis symbol, if defined, indicates that the setreuid routine is\n *\tavailable to change the real and effective uid of the current\n *\tprocess.\n */\n/* HAS_SETRESUID:\n *\tThis symbol, if defined, indicates that the setresuid routine is\n *\tavailable to change the real, effective and saved uid of the current\n *\tprocess.\n */\n/*#define HAS_SETREUID\t\t/ **/\n/*#define HAS_SETRESUID\t\t/ **/\n\n/* HAS_SETRGID:\n *\tThis symbol, if defined, indicates that the setrgid routine is available\n *\tto change the real gid of the current program.\n */\n/*#define HAS_SETRGID\t\t/ **/\n\n/* HAS_SETRUID:\n *\tThis symbol, if defined, indicates that the setruid routine is available\n *\tto change the real uid of the current program.\n */\n/*#define HAS_SETRUID\t\t/ **/\n\n/* HAS_SETSID:\n *\tThis symbol, if defined, indicates that the setsid routine is\n *\tavailable to set the process group ID.\n */\n/*#define HAS_SETSID\t/ **/\n\n/* HAS_STAT:\n *\tThis symbol, if defined, indicates that the stat routine is\n *\tavailable to get file status.\n */\n#define HAS_STAT\t/**/\n\n/* HAS_STRCOLL:\n *\tThis symbol, if defined, indicates that the strcoll routine is\n *\tavailable to compare strings using collating information.\n */\n#define HAS_STRCOLL\t/**/\n\n/* HAS_STRTOD:\n *\tThis symbol, if defined, indicates that the strtod routine is\n *\tavailable to provide better numeric string conversion than atof().\n */\n#define HAS_STRTOD\t/**/\n\n/* HAS_STRTOL:\n *\tThis symbol, if defined, indicates that the strtol routine is available\n *\tto provide better numeric string conversion than atoi() and friends.\n */\n#define HAS_STRTOL\t/**/\n\n/* HAS_STRXFRM:\n *\tThis symbol, if defined, indicates that the strxfrm() routine is\n *\tavailable to transform strings.\n */\n#define HAS_STRXFRM\t/**/\n\n/* HAS_SYMLINK:\n *\tThis symbol, if defined, indicates that the symlink routine is available\n *\tto create symbolic links.\n */\n/*#define HAS_SYMLINK\t/ **/\n\n/* HAS_SYSCALL:\n *\tThis symbol, if defined, indicates that the syscall routine is\n *\tavailable to call arbitrary system calls. If undefined, that's tough.\n */\n/*#define HAS_SYSCALL\t/ **/\n\n/* HAS_SYSCONF:\n *\tThis symbol, if defined, indicates that sysconf() is available\n *\tto determine system related limits and options.\n */\n/*#define HAS_SYSCONF\t/ **/\n\n/* HAS_SYSTEM:\n *\tThis symbol, if defined, indicates that the system routine is\n *\tavailable to issue a shell command.\n */\n#define HAS_SYSTEM\t/**/\n\n/* HAS_TCGETPGRP:\n *\tThis symbol, if defined, indicates that the tcgetpgrp routine is\n *\tavailable to get foreground process group ID.\n */\n/*#define HAS_TCGETPGRP\t\t/ **/\n\n/* HAS_TCSETPGRP:\n *\tThis symbol, if defined, indicates that the tcsetpgrp routine is\n *\tavailable to set foreground process group ID.\n */\n/*#define HAS_TCSETPGRP\t\t/ **/\n\n/* HAS_TRUNCATE:\n *\tThis symbol, if defined, indicates that the truncate routine is\n *\tavailable to truncate files.\n */\n/*#define HAS_TRUNCATE\t/ **/\n\n/* HAS_TZNAME:\n *\tThis symbol, if defined, indicates that the tzname[] array is\n *\tavailable to access timezone names.\n */\n#define HAS_TZNAME\t\t/**/\n\n/* HAS_UMASK:\n *\tThis symbol, if defined, indicates that the umask routine is\n *\tavailable to set and get the value of the file creation mask.\n */\n#define HAS_UMASK\t\t/**/\n\n/* HAS_USLEEP:\n *\tThis symbol, if defined, indicates that the usleep routine is\n *\tavailable to let the process sleep on a sub-second accuracy.\n */\n/*#define HAS_USLEEP\t\t/ **/\n\n/* HAS_WAIT4:\n *\tThis symbol, if defined, indicates that wait4() exists.\n */\n/*#define HAS_WAIT4\t/ **/\n\n/* HAS_WAITPID:\n *\tThis symbol, if defined, indicates that the waitpid routine is\n *\tavailable to wait for child process.\n */\n#define HAS_WAITPID\t/**/\n\n/* HAS_WCSTOMBS:\n *\tThis symbol, if defined, indicates that the wcstombs routine is\n *\tavailable to convert wide character strings to multibyte strings.\n */\n#define HAS_WCSTOMBS\t/**/\n\n/* HAS_WCTOMB:\n *\tThis symbol, if defined, indicates that the wctomb routine is available\n *\tto convert a wide character to a multibyte.\n */\n#define HAS_WCTOMB\t\t/**/\n\n/* Groups_t:\n *\tThis symbol holds the type used for the second argument to\n *\tgetgroups() and setgroups().  Usually, this is the same as\n *\tgidtype (gid_t) , but sometimes it isn't.\n *\tIt can be int, ushort, gid_t, etc...\n *\tIt may be necessary to include <sys/types.h> to get any\n *\ttypedef'ed information.  This is only required if you have\n *\tgetgroups() or setgroups()..\n */\n#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)\n#define Groups_t gid_t\t/* Type for 2nd arg to [sg]etgroups() */\n#endif\n\n/* I_ARPA_INET:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <arpa/inet.h> to get inet_addr and friends declarations.\n */\n#define\tI_ARPA_INET\t\t/**/\n\n/* I_DBM:\n *\tThis symbol, if defined, indicates that <dbm.h> exists and should\n *\tbe included.\n */\n/* I_RPCSVC_DBM:\n *\tThis symbol, if defined, indicates that <rpcsvc/dbm.h> exists and\n *\tshould be included.\n */\n/*#define I_DBM\t/ **/\n/*#define I_RPCSVC_DBM\t/ **/\n\n/* I_DLFCN:\n *\tThis symbol, if defined, indicates that <dlfcn.h> exists and should\n *\tbe included.\n */\n#define I_DLFCN\t\t/**/\n\n/* I_FCNTL:\n *\tThis manifest constant tells the C program to include <fcntl.h>.\n */\n#define I_FCNTL\t/**/\n\n/* I_GDBM:\n *\tThis symbol, if defined, indicates that <gdbm.h> exists and should\n *\tbe included.\n */\n/*#define I_GDBM\t/ **/\n\n/* I_LOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <locale.h>.\n */\n#define\tI_LOCALE\t\t/**/\n\n/* I_NETINET_IN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/in.h>. Otherwise, you may try <sys/in.h>.\n */\n/*#define I_NETINET_IN\t/ **/\n\n/* I_SYS_DIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/dir.h>.\n */\n/*#define I_SYS_DIR\t\t/ **/\n\n/* I_SYS_FILE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/file.h> to get definition of R_OK and friends.\n */\n/*#define I_SYS_FILE\t\t/ **/\n\n/* I_SYS_IOCTL:\n *\tThis symbol, if defined, indicates that <sys/ioctl.h> exists and should\n *\tbe included. Otherwise, include <sgtty.h> or <termio.h>.\n */\n/* I_SYS_SOCKIO:\n *\tThis symbol, if defined, indicates the <sys/sockio.h> should be included\n *\tto get socket ioctl options, like SIOCATMARK.\n */\n/*#define\tI_SYS_IOCTL\t\t/ **/\n/*#define I_SYS_SOCKIO\t/ **/\n\n/* I_SYS_NDIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/ndir.h>.\n */\n/*#define I_SYS_NDIR\t/ **/\n\n/* I_SYS_PARAM:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/param.h>.\n */\n/*#define I_SYS_PARAM\t\t/ **/\n\n/* I_SYS_POLL:\n *\tThis symbol, if defined, indicates that the program may include\n *\t<sys/poll.h>.  When I_POLL is also defined, it's probably safest\n *\tto only include <poll.h>.\n */\n/*#define I_SYS_POLL\t/ **/\n\n/* I_SYS_RESOURCE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/resource.h>.\n */\n/*#define I_SYS_RESOURCE\t\t/ **/\n\n/* I_SYS_SELECT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/select.h> in order to get definition of struct timeval.\n */\n/*#define I_SYS_SELECT\t/ **/\n\n/* I_SYS_STAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/stat.h>.\n */\n#define\tI_SYS_STAT\t\t/**/\n\n/* I_SYS_TIMES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/times.h>.\n */\n/*#define\tI_SYS_TIMES\t\t/ **/\n\n/* I_SYS_TYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/types.h>.\n */\n#define\tI_SYS_TYPES\t\t/**/\n\n/* I_SYS_UN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/un.h> to get UNIX domain socket definitions.\n */\n/*#define I_SYS_UN\t\t/ **/\n\n/* I_SYS_WAIT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/wait.h>.\n */\n/*#define I_SYS_WAIT\t/ **/\n\n/* I_UNISTD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <unistd.h>.\n */\n/*#define I_UNISTD\t\t/ **/\n\n/* I_UTIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <utime.h>.\n */\n#define I_UTIME\t\t/**/\n\n/* I_VFORK:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude vfork.h.\n */\n/*#define I_VFORK\t/ **/\n\n/* STDCHAR:\n *\tThis symbol is defined to be the type of char used in stdio.h.\n *\tIt has the values \"unsigned char\" or \"char\".\n */\n#define STDCHAR char\t/**/\n\n/* INTSIZE:\n *\tThis symbol contains the value of sizeof(int) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* LONGSIZE:\n *\tThis symbol contains the value of sizeof(long) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* SHORTSIZE:\n *\tThis symbol contains the value of sizeof(short) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n#define INTSIZE 4\t\t/**/\n#define LONGSIZE 4\t\t/**/\n#define SHORTSIZE 2\t\t/**/\n\n/* MULTIARCH:\n *\tThis symbol, if defined, signifies that the build\n *\tprocess will produce some binary files that are going to be\n *\tused in a cross-platform environment.  This is the case for\n *\texample with the NeXT \"fat\" binaries that contain executables\n *\tfor several CPUs.\n */\n/*#define MULTIARCH\t\t/ **/\n\n/* HAS_QUAD:\n *\tThis symbol, if defined, tells that there's a 64-bit integer type,\n *\tQuad_t, and its unsigned counterpart, Uquad_t. QUADKIND will be one\n *\tof QUAD_IS_INT, QUAD_IS_LONG, QUAD_IS_LONG_LONG, QUAD_IS_INT64_T,\n *\tor QUAD_IS___INT64.\n */\n#define HAS_QUAD\t/**/\n#ifdef HAS_QUAD\n#   define Quad_t __int64\t/**/\n#   define Uquad_t unsigned __int64\t/**/\n#   define QUADKIND 5\t/**/\n#   define QUAD_IS_INT\t1\n#   define QUAD_IS_LONG\t2\n#   define QUAD_IS_LONG_LONG\t3\n#   define QUAD_IS_INT64_T\t4\n#   define QUAD_IS___INT64\t5\n#endif\n\n/* HAS_ACCESSX:\n *\tThis symbol, if defined, indicates that the accessx routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_ACCESSX\t\t/ **/\n\n/* HAS_EACCESS:\n *\tThis symbol, if defined, indicates that the eaccess routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_EACCESS\t\t/ **/\n\n/* I_SYS_ACCESS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/access.h>.\n */\n/*#define   I_SYS_ACCESS                / **/\n\n/* I_SYS_SECURITY:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/security.h>.\n */\n/*#define   I_SYS_SECURITY\t/ **/\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble, or a long double when applicable. Usual values are 2,\n *\t4 and 8. The default is eight, for safety.  For cross-compiling\n *  \tor multiarch support, Configure will set a minimum of 8.\n */\n#define MEM_ALIGNBYTES 8\n\n/* BYTEORDER:\n *\tThis symbol holds the hexadecimal constant defined in byteorder,\n *\tin a UV, i.e. 0x1234 or 0x4321 or 0x12345678, etc...\n *\tIf the compiler supports cross-compiling or multiple-architecture\n *\tbinaries, use compiler-defined macros to\n *\tdetermine the byte order.\n */\n#if defined(MULTIARCH)\n#  ifdef __LITTLE_ENDIAN__\n#    if LONGSIZE == 4\n#      define BYTEORDER 0x1234\n#    else\n#      if LONGSIZE == 8\n#        define BYTEORDER 0x12345678\n#      endif\n#    endif\n#  else\n#    ifdef __BIG_ENDIAN__\n#      if LONGSIZE == 4\n#        define BYTEORDER 0x4321\n#      else\n#        if LONGSIZE == 8\n#          define BYTEORDER 0x87654321\n#        endif\n#      endif\n#    endif\n#  endif\n#else\n#define BYTEORDER 0x1234\t/* large digits for MSB */\n#endif\n\n/* CHARBITS:\n *\tThis symbol contains the size of a char, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define CHARBITS 8\t\t/**/\n\n/* CASTI32:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tor large floating point numbers to 32-bit ints.\n */\n/*#define\tCASTI32\t\t/ **/\n\n/* CASTNEGFLOAT:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tnumbers to unsigned longs, ints and shorts.\n */\n/* CASTFLAGS:\n *\tThis symbol contains flags that say what difficulties the compiler\n *\thas casting odd floating values to unsigned long:\n *\t\t0 = ok\n *\t\t1 = couldn't cast < 0\n *\t\t2 = couldn't cast >= 0x80000000\n *\t\t4 = couldn't cast in argument expression list\n */\n#define\tCASTNEGFLOAT\t\t/**/\n#define CASTFLAGS 0\t\t/**/\n\n/* VOID_CLOSEDIR:\n *\tThis symbol, if defined, indicates that the closedir() routine\n *\tdoes not return a value.\n */\n/*#define VOID_CLOSEDIR\t\t/ **/\n\n/* HAS_FD_SET:\n *\tThis symbol, when defined, indicates presence of the fd_set typedef\n *\tin <sys/types.h>\n */\n#define HAS_FD_SET\t/**/\n\n/* Gconvert:\n *\tThis preprocessor macro is defined to convert a floating point\n *\tnumber to a string without a trailing decimal point.  This\n *\temulates the behavior of sprintf(\"%g\"), but is sometimes much more\n *\tefficient.  If gconvert() is not available, but gcvt() drops the\n *\ttrailing decimal point, then gcvt() is used.  If all else fails,\n *\ta macro using sprintf(\"%g\") is used. Arguments for the Gconvert\n *\tmacro are: value, number of digits, whether trailing zeros should\n *\tbe retained, and the output buffer.\n *\tThe usual values are:\n *\t\td_Gconvert='gconvert((x),(n),(t),(b))'\n *\t\td_Gconvert='gcvt((x),(n),(b))'\n *\t\td_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\n *\tThe last two assume trailing zeros should not be kept.\n */\n#define Gconvert(x,n,t,b) sprintf((b),\"%.*g\",(n),(x))\n\n/* HAS_GETPAGESIZE:\n *\tThis symbol, if defined, indicates that the getpagesize system call\n *\tis available to get system page size, which is the granularity of\n *\tmany memory management calls.\n */\n/*#define HAS_GETPAGESIZE\t\t/ **/\n\n/* HAS_GNULIBC:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe GNU C library is being used.  A better check is to use\n *\tthe __GLIBC__ and __GLIBC_MINOR__ symbols supplied with glibc.\n */\n/*#define HAS_GNULIBC  \t/ **/\n#if defined(HAS_GNULIBC) && !defined(_GNU_SOURCE)\n#   define _GNU_SOURCE\n#endif\n\n/* HAS_ISASCII:\n *\tThis manifest constant lets the C program know that isascii\n *\tis available.\n */\n#define HAS_ISASCII\t\t/**/\n\n/* HAS_LCHOWN:\n *\tThis symbol, if defined, indicates that the lchown routine is\n *\tavailable to operate on a symbolic link (instead of following the\n *\tlink).\n */\n/*#define HAS_LCHOWN\t\t/ **/\n\n/* HAS_OPEN3:\n *\tThis manifest constant lets the C program know that the three\n *\targument form of open(2) is available.\n */\n/*#define HAS_OPEN3\t\t/ **/\n\n/* HAS_SIGACTION:\n *\tThis symbol, if defined, indicates that Vr4's sigaction() routine\n *\tis available.\n */\n/*#define HAS_SIGACTION\t/ **/\n\n/* HAS_SIGINFO_SI_ERRNO:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_errno member\n */\n/* HAS_SIGINFO_SI_PID:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_pid member\n */\n/* HAS_SIGINFO_SI_UID:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_uid member\n */\n/* HAS_SIGINFO_SI_ADDR:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_addr member\n */\n/* HAS_SIGINFO_SI_STATUS:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_status member\n */\n/* HAS_SIGINFO_SI_BAND:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_band member\n */\n/* HAS_SIGINFO_SI_VALUE:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_value member\n */\n/*#define\tHAS_SIGINFO_SI_ERRNO\t/ **/\n/*#define\tHAS_SIGINFO_SI_PID\t/ **/\n/*#define\tHAS_SIGINFO_SI_UID\t/ **/\n/*#define\tHAS_SIGINFO_SI_ADDR\t/ **/\n/*#define\tHAS_SIGINFO_SI_STATUS\t/ **/\n/*#define\tHAS_SIGINFO_SI_BAND\t/ **/\n/*#define\tHAS_SIGINFO_SI_VALUE\t/ **/\n\n/* HAS_SIGSETJMP:\n *\tThis variable indicates to the C program that the sigsetjmp()\n *\troutine is available to save the calling process's registers\n *\tand stack environment for later use by siglongjmp(), and\n *\tto optionally save the process's signal mask.  See\n *\tSigjmp_buf, Sigsetjmp, and Siglongjmp.\n */\n/* Sigjmp_buf:\n *\tThis is the buffer type to be used with Sigsetjmp and Siglongjmp.\n */\n/* Sigsetjmp:\n *\tThis macro is used in the same way as sigsetjmp(), but will invoke\n *\ttraditional setjmp() if sigsetjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/* Siglongjmp:\n *\tThis macro is used in the same way as siglongjmp(), but will invoke\n *\ttraditional longjmp() if siglongjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/*#define HAS_SIGSETJMP\t/ **/\n#ifdef HAS_SIGSETJMP\n#define Sigjmp_buf sigjmp_buf\n#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))\n#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))\n#else\n#define Sigjmp_buf jmp_buf\n#define Sigsetjmp(buf,save_mask) setjmp((buf))\n#define Siglongjmp(buf,retval) longjmp((buf),(retval))\n#endif\n\n/* HAS_STATIC_INLINE:\n *\tThis symbol, if defined, indicates that the C compiler supports\n *\tC99-style static inline.  That is, the function can't be called\n *\tfrom another translation unit.\n */\n/* PERL_STATIC_INLINE:\n *\tThis symbol gives the best-guess incantation to use for static\n *\tinline functions.  If HAS_STATIC_INLINE is defined, this will\n *\tgive C99-style inline.  If HAS_STATIC_INLINE is not defined,\n *\tthis will give a plain 'static'.  It will always be defined\n *\tto something that gives static linkage.\n *\tPossibilities include\n *\t\tstatic inline       (c99)\n *\t\tstatic __inline__   (gcc -ansi)\n *\t\tstatic __inline     (MSVC)\n *\t\tstatic _inline      (older MSVC)\n *\t\tstatic              (c89 compilers)\n */\n#define HAS_STATIC_INLINE\t\t\t\t/**/\n#define PERL_STATIC_INLINE static __inline\t/**/\n\n/* USE_STDIO_PTR:\n *\tThis symbol is defined if the _ptr and _cnt fields (or similar)\n *\tof the stdio FILE structure can be used to access the stdio buffer\n *\tfor a file handle.  If this is defined, then the FILE_ptr(fp)\n *\tand FILE_cnt(fp) macros will also be defined and should be used\n *\tto access these fields.\n */\n/* FILE_ptr:\n *\tThis macro is used to access the _ptr field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_PTR_LVALUE:\n *\tThis symbol is defined if the FILE_ptr macro can be used as an\n *\tlvalue.\n */\n/* FILE_cnt:\n *\tThis macro is used to access the _cnt field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_CNT_LVALUE:\n *\tThis symbol is defined if the FILE_cnt macro can be used as an\n *\tlvalue.\n */\n/* STDIO_PTR_LVAL_SETS_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n has the side effect of decreasing the\n *\tvalue of File_cnt(fp) by n.\n */\n/* STDIO_PTR_LVAL_NOCHANGE_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n leaves File_cnt(fp) unchanged.\n */\n#define USE_STDIO_PTR \t/**/\n#ifdef USE_STDIO_PTR\n#define FILE_ptr(fp)\t((fp)->_ptr)\n#define STDIO_PTR_LVALUE \t\t/**/\n#define FILE_cnt(fp)\t((fp)->_cnt)\n#define STDIO_CNT_LVALUE \t\t/**/\n/*#define STDIO_PTR_LVAL_SETS_CNT\t/ **/\n#define STDIO_PTR_LVAL_NOCHANGE_CNT\t/**/\n#endif\n\n/* USE_STDIO_BASE:\n *\tThis symbol is defined if the _base field (or similar) of the\n *\tstdio FILE structure can be used to access the stdio buffer for\n *\ta file handle.  If this is defined, then the FILE_base(fp) macro\n *\twill also be defined and should be used to access this field.\n *\tAlso, the FILE_bufsiz(fp) macro will be defined and should be used\n *\tto determine the number of bytes in the buffer.  USE_STDIO_BASE\n *\twill never be defined unless USE_STDIO_PTR is.\n */\n/* FILE_base:\n *\tThis macro is used to access the _base field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_BASE is defined.\n */\n/* FILE_bufsiz:\n *\tThis macro is used to determine the number of bytes in the I/O\n *\tbuffer pointed to by _base field (or equivalent) of the FILE\n *\tstructure pointed to its argument. This macro will always be defined\n *\tif USE_STDIO_BASE is defined.\n */\n#define USE_STDIO_BASE \t/**/\n#ifdef USE_STDIO_BASE\n#define FILE_base(fp)\t((fp)->_base)\n#define FILE_bufsiz(fp)\t((fp)->_cnt + (fp)->_ptr - (fp)->_base)\n#endif\n\n/* DOUBLESIZE:\n *\tThis symbol contains the size of a double, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define DOUBLESIZE 8\t\t/**/\n\n/* I_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <time.h>.\n */\n/* I_SYS_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h>.\n */\n/* I_SYS_TIME_KERNEL:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h> with KERNEL defined.\n */\n/* HAS_TM_TM_ZONE:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_zone field.\n */\n/* HAS_TM_TM_GMTOFF:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_gmtoff field.\n */\n#define I_TIME\t\t/**/\n/*#define I_SYS_TIME\t\t/ **/\n/*#define I_SYS_TIME_KERNEL\t\t/ **/\n/*#define HAS_TM_TM_ZONE\t\t/ **/\n/*#define HAS_TM_TM_GMTOFF\t\t/ **/\n\n/* VAL_O_NONBLOCK:\n *\tThis symbol is to be used during open() or fcntl(F_SETFL) to turn on\n *\tnon-blocking I/O for the file descriptor. Note that there is no way\n *\tback, i.e. you cannot turn it blocking again this way. If you wish to\n *\talternatively switch between blocking and non-blocking, use the\n *\tioctl(FIOSNBIO) call instead, but that is not supported by all devices.\n */\n/* VAL_EAGAIN:\n *\tThis symbol holds the errno error code set by read() when no data was\n *\tpresent on the non-blocking file descriptor.\n */\n/* RD_NODATA:\n *\tThis symbol holds the return code from read() when no data is present\n *\ton the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is\n *\tnot defined, then you can't distinguish between no data and EOF by\n *\tissuing a read(). You'll have to find another way to tell for sure!\n */\n/* EOF_NONBLOCK:\n *\tThis symbol, if defined, indicates to the C program that a read() on\n *\ta non-blocking file descriptor will return 0 on EOF, and not the value\n *\theld in RD_NODATA (-1 usually, in that case!).\n */\n#define VAL_O_NONBLOCK O_NONBLOCK\n#define VAL_EAGAIN EAGAIN\n#define RD_NODATA -1\n#define EOF_NONBLOCK\n\n/* PTRSIZE:\n *\tThis symbol contains the size of a pointer, so that the C preprocessor\n *\tcan make decisions based on it.  It will be sizeof(void *) if\n *\tthe compiler supports (void *); otherwise it will be\n *\tsizeof(char *).\n */\n#define PTRSIZE 4\t\t/**/\n\n/* Drand01:\n *\tThis macro is to be used to generate uniformly distributed\n *\trandom numbers over the range [0., 1.[.  You may have to supply\n *\tan 'extern double drand48();' in your program since SunOS 4.1.3\n *\tdoesn't provide you with anything relevant in its headers.\n *\tSee HAS_DRAND48_PROTO.\n */\n/* Rand_seed_t:\n *\tThis symbol defines the type of the argument of the\n *\trandom seed function.\n */\n/* seedDrand01:\n *\tThis symbol defines the macro to be used in seeding the\n *\trandom number generator (see Drand01).\n */\n/* RANDBITS:\n *\tThis symbol indicates how many bits are produced by the\n *\tfunction used to generate normalized random numbers.\n *\tValues include 15, 16, 31, and 48.\n */\n#define Drand01()\t\tPerl_drand48()\t\t/**/\n#define Rand_seed_t\t\tU32\t\t/**/\n#define seedDrand01(x)\tPerl_drand48_init((Rand_seed_t)x)\t/**/\n#define RANDBITS\t\t48\t\t/**/\n\n/* SSize_t:\n *\tThis symbol holds the type used by functions that return\n *\ta count of bytes or an error condition.  It must be a signed type.\n *\tIt is usually ssize_t, but may be long or int, etc.\n *\tIt may be necessary to include <sys/types.h> or <unistd.h>\n *\tto get any typedef'ed information.\n *\tWe will pick a type such that sizeof(SSize_t) == sizeof(Size_t).\n */\n#define SSize_t int\t /* signed count of bytes */\n\n/* EBCDIC:\n *\tThis symbol, if defined, indicates that this system uses\n *\tEBCDIC encoding.\n */\n/*#define\tEBCDIC \t\t/ **/\n\n/* ARCHLIB:\n *\tThis variable, if defined, holds the name of the directory in\n *\twhich the user wants to put architecture-dependent public\n *\tlibrary files for perl5.  It is most often a local directory\n *\tsuch as /usr/local/lib.  Programs using this variable must be\n *\tprepared to deal with filename expansion.  If ARCHLIB is the\n *\tsame as PRIVLIB, it is not defined, since presumably the\n *\tprogram already searches PRIVLIB.\n */\n/* ARCHLIB_EXP:\n *\tThis symbol contains the ~name expanded version of ARCHLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define ARCHLIB \"c:\\\\perl\\\\lib\"\t\t/**/\n/*#define ARCHLIB_EXP \"\"\t/ **/\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n/* PERL_RELOCATABLE_INC:\n *\tThis symbol, if defined, indicates that we'd like to relocate entries\n *\tin @INC at run time based on the location of the perl binary.\n */\n#define BIN \"c:\\\\perl\\\\bin\"\t/**/\n#define BIN_EXP \"c:\\\\perl\\\\bin\"\t/**/\n#define PERL_RELOCATABLE_INC \"undef\" \t\t/**/\n\n/* PERL_INC_VERSION_LIST:\n *\tThis variable specifies the list of subdirectories in over\n *\twhich perl.c:incpush() and lib/lib.pm will automatically\n *\tsearch when adding directories to @INC, in a format suitable\n *\tfor a C initialization string.  See the inc_version_list entry\n *\tin Porting/Glossary for more details.\n */\n/*#define PERL_INC_VERSION_LIST 0\t\t/ **/\n\n/* INSTALL_USR_BIN_PERL:\n *\tThis symbol, if defined, indicates that Perl is to be installed\n * \talso as /usr/bin/perl.\n */\n/*#define INSTALL_USR_BIN_PERL\t/ **/\n\n/* PERL_OTHERLIBDIRS:\n *\tThis variable contains a colon-separated set of paths for the perl\n *\tbinary to search for additional library files or modules.\n *\tThese directories will be tacked to the end of @INC.\n *\tPerl will automatically search below each path for version-\n *\tand architecture-specific directories.  See PERL_INC_VERSION_LIST\n *\tfor more details.\n */\n/*#define PERL_OTHERLIBDIRS \"\"\t\t/ **/\n\n/* PRIVLIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n */\n/* PRIVLIB_EXP:\n *\tThis symbol contains the ~name expanded version of PRIVLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define PRIVLIB \"c:\\\\perl\\\\lib\"\t\t/**/\n#define PRIVLIB_EXP (PerlEnv_lib_path(PERL_VERSION_STRING, NULL))\t/**/\n\n/* SITEARCH:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-dependent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITEARCH_EXP:\n *\tThis symbol contains the ~name expanded version of SITEARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define SITEARCH \"c:\\\\perl\\\\site\\\\lib\"\t\t/**/\n/*#define SITEARCH_EXP \"\"\t/ **/\n\n/* SITELIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-independent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITELIB_EXP:\n *\tThis symbol contains the ~name expanded version of SITELIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* SITELIB_STEM:\n *\tThis define is SITELIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#define SITELIB \"c:\\\\perl\\\\site\\\\lib\"\t\t/**/\n#define SITELIB_EXP (PerlEnv_sitelib_path(PERL_VERSION_STRING, NULL))\t/**/\n#define SITELIB_STEM \"\"\t\t/**/\n\n/* PERL_VENDORARCH:\n *\tIf defined, this symbol contains the name of a private library.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.\n *\tIt may have a ~ on the front.\n *\tThe standard distribution will put nothing in this directory.\n *\tVendors who distribute perl may wish to place their own\n *\tarchitecture-dependent modules and extensions in this directory with\n *\t\tMakeMaker Makefile.PL INSTALLDIRS=vendor\n *\tor equivalent.  See INSTALL for details.\n */\n/* PERL_VENDORARCH_EXP:\n *\tThis symbol contains the ~name expanded version of PERL_VENDORARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define PERL_VENDORARCH \"\"\t\t/ **/\n/*#define PERL_VENDORARCH_EXP \"\"\t\t/ **/\n\n/* PERL_VENDORLIB_EXP:\n *\tThis symbol contains the ~name expanded version of VENDORLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* PERL_VENDORLIB_STEM:\n *\tThis define is PERL_VENDORLIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n/*#define PERL_VENDORLIB_EXP \"\"\t\t/ **/\n/*#define PERL_VENDORLIB_STEM \"\"\t\t/ **/\n\n/* OSNAME:\n *\tThis symbol contains the name of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n/* OSVERS:\n *\tThis symbol contains the version of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n#define OSNAME \"MSWin32\"\t\t/**/\n#define OSVERS \"6.1\"\t\t/**/\n\n/* CAT2:\n *\tThis macro concatenates 2 tokens together.\n */\n/* STRINGIFY:\n *\tThis macro surrounds its token with double quotes.\n */\n#if 42 == 1\n#define CAT2(a,b)\ta/**/b\n#define STRINGIFY(a)\t\"a\"\n#endif\n#if 42 == 42\n#define PeRl_CaTiFy(a, b)\ta ## b\n#define PeRl_StGiFy(a)\t#a\n#define CAT2(a,b)\tPeRl_CaTiFy(a,b)\n#define StGiFy(a)\tPeRl_StGiFy(a)\n#define STRINGIFY(a)\tPeRl_StGiFy(a)\n#endif\n#if 42 != 1 && 42 != 42\n#include \"Bletch: How does this C preprocessor concatenate tokens?\"\n#endif\n\n/* CPPSTDIN:\n *\tThis symbol contains the first part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.\t Typical value of \"cc -E\" or \"/lib/cpp\", but it can also\n *\tcall a wrapper. See CPPRUN.\n */\n/* CPPMINUS:\n *\tThis symbol contains the second part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  This symbol will have the value \"-\" if CPPSTDIN needs a minus\n *\tto specify standard input, otherwise the value is \"\".\n */\n/* CPPRUN:\n *\tThis symbol contains the string which will invoke a C preprocessor on\n *\tthe standard input and produce to standard output. It needs to end\n *\twith CPPLAST, after all other preprocessor flags have been specified.\n *\tThe main difference with CPPSTDIN is that this program will never be a\n *\tpointer to a shell wrapper, i.e. it will be empty if no preprocessor is\n *\tavailable directly to the user. Note that it may well be different from\n *\tthe preprocessor used to compile the C program.\n */\n/* CPPLAST:\n *\tThis symbol is intended to be used along with CPPRUN in the same manner\n *\tsymbol CPPMINUS is used with CPPSTDIN. It contains either \"-\" or \"\".\n */\n#define CPPSTDIN \"cppstdin\"\n#define CPPMINUS \"\"\n#define CPPRUN \"cl -nologo -E\"\n#define CPPLAST \"\"\n\n/* HAS_ACCESS:\n *\tThis manifest constant lets the C program know that the access()\n *\tsystem call is available to check for accessibility using real UID/GID.\n *\t(always present on UNIX.)\n */\n#define HAS_ACCESS\t\t/**/\n\n/* HASATTRIBUTE_FORMAT:\n *\tCan we handle GCC attribute for checking printf-style formats\n */\n/* PRINTF_FORMAT_NULL_OK:\n *\tAllows __printf__ format to be null when checking printf-style\n */\n/* HASATTRIBUTE_MALLOC:\n *\tCan we handle GCC attribute for malloc-style functions.\n */\n/* HASATTRIBUTE_NONNULL:\n *\tCan we handle GCC attribute for nonnull function parms.\n */\n/* HASATTRIBUTE_NORETURN:\n *\tCan we handle GCC attribute for functions that do not return\n */\n/* HASATTRIBUTE_PURE:\n *\tCan we handle GCC attribute for pure functions\n */\n/* HASATTRIBUTE_UNUSED:\n *\tCan we handle GCC attribute for unused variables and arguments\n */\n/* HASATTRIBUTE_DEPRECATED:\n *\tCan we handle GCC attribute for marking deprecated APIs\n */\n/* HASATTRIBUTE_WARN_UNUSED_RESULT:\n *\tCan we handle GCC attribute for warning on unused results\n */\n/*#define HASATTRIBUTE_DEPRECATED\t/ **/\n/*#define HASATTRIBUTE_FORMAT\t/ **/\n/*#define PRINTF_FORMAT_NULL_OK\t/ **/\n/*#define HASATTRIBUTE_NORETURN\t/ **/\n/*#define HASATTRIBUTE_MALLOC\t/ **/\n/*#define HASATTRIBUTE_NONNULL\t/ **/\n/*#define HASATTRIBUTE_PURE\t/ **/\n/*#define HASATTRIBUTE_UNUSED\t/ **/\n/*#define HASATTRIBUTE_WARN_UNUSED_RESULT\t/ **/\n\n/* HAS_BACKTRACE:\n *\tThis symbol, if defined, indicates that the backtrace() routine is\n *\tavailable to get a stack trace.  The <execinfo.h> header must be\n *\tincluded to use this routine.\n */\n/*#define HAS_BACKTRACE\t/ **/\n\n/* HAS_CSH:\n *\tThis symbol, if defined, indicates that the C-shell exists.\n */\n/* CSH:\n *\tThis symbol, if defined, contains the full pathname of csh.\n */\n/*#define HAS_CSH\t\t/ **/\n#ifdef HAS_CSH\n#define CSH \"\"\t/**/\n#endif\n\n/* HAS_DLADDR:\n *\tThis symbol, if defined, indicates that the dladdr() routine is\n *\tavailable to query dynamic linker information for an address.\n *\tThe <dlfcn.h> header must be included to use this routine.\n */\n/*#define HAS_DLADDR\t/ **/\n\n/* SETUID_SCRIPTS_ARE_SECURE_NOW:\n *\tThis symbol, if defined, indicates that the bug that prevents\n *\tsetuid scripts from being secure is not present in this kernel.\n */\n/* DOSUID:\n *\tThis symbol, if defined, indicates that the C program should\n *\tcheck the script that it is executing for setuid/setgid bits, and\n *\tattempt to emulate setuid/setgid on systems that have disabled\n *\tsetuid #! scripts because the kernel can't do it securely.\n *\tIt is up to the package designer to make sure that this emulation\n *\tis done securely.  Among other things, it should do an fstat on\n *\tthe script it just opened to make sure it really is a setuid/setgid\n *\tscript, it should make sure the arguments passed correspond exactly\n *\tto the argument on the #! line, and it should not trust any\n *\tsubprocesses to which it must pass the filename rather than the\n *\tfile descriptor of the script to be executed.\n */\n/*#define SETUID_SCRIPTS_ARE_SECURE_NOW\t/ **/\n/*#define DOSUID\t\t/ **/\n\n/* HAS_ENDGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the group database.\n */\n/*#define HAS_ENDGRENT\t\t/ **/\n\n/* HAS_ENDHOSTENT:\n *\tThis symbol, if defined, indicates that the endhostent() routine is\n *\tavailable to close whatever was being used for host queries.\n */\n/*#define HAS_ENDHOSTENT\t\t/ **/\n\n/* HAS_ENDNETENT:\n *\tThis symbol, if defined, indicates that the endnetent() routine is\n *\tavailable to close whatever was being used for network queries.\n */\n/*#define HAS_ENDNETENT\t\t/ **/\n\n/* HAS_ENDPROTOENT:\n *\tThis symbol, if defined, indicates that the endprotoent() routine is\n *\tavailable to close whatever was being used for protocol queries.\n */\n/*#define HAS_ENDPROTOENT\t\t/ **/\n\n/* HAS_ENDPWENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the passwd database.\n */\n/*#define HAS_ENDPWENT\t\t/ **/\n\n/* HAS_ENDSERVENT:\n *\tThis symbol, if defined, indicates that the endservent() routine is\n *\tavailable to close whatever was being used for service queries.\n */\n/*#define HAS_ENDSERVENT\t\t/ **/\n\n/* FLEXFILENAMES:\n *\tThis symbol, if defined, indicates that the system supports filenames\n *\tlonger than 14 characters.\n */\n#define\tFLEXFILENAMES\t\t/**/\n\n/* HAS_GETGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for sequential access of the group database.\n */\n/*#define HAS_GETGRENT\t\t/ **/\n\n/* HAS_GETHOSTBYADDR:\n *\tThis symbol, if defined, indicates that the gethostbyaddr() routine is\n *\tavailable to look up hosts by their IP addresses.\n */\n#define HAS_GETHOSTBYADDR\t\t/**/\n\n/* HAS_GETHOSTBYNAME:\n *\tThis symbol, if defined, indicates that the gethostbyname() routine is\n *\tavailable to look up host names in some data base or other.\n */\n#define HAS_GETHOSTBYNAME\t\t/**/\n\n/* HAS_GETHOSTENT:\n *\tThis symbol, if defined, indicates that the gethostent() routine is\n *\tavailable to look up host names in some data base or another.\n */\n/*#define HAS_GETHOSTENT\t\t/ **/\n\n/* HAS_GETHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tgethostname() routine to derive the host name.  See also HAS_UNAME\n *\tand PHOSTNAME.\n */\n/* HAS_UNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tuname() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand PHOSTNAME.\n */\n/* PHOSTNAME:\n *\tThis symbol, if defined, indicates the command to feed to the\n *\tpopen() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand HAS_UNAME.\tNote that the command uses a fully qualified path,\n *\tso that it is safe even if used by a process with super-user\n *\tprivileges.\n */\n/* HAS_PHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tcontents of PHOSTNAME as a command to feed to the popen() routine\n *\tto derive the host name.\n */\n#define HAS_GETHOSTNAME\t/**/\n#define HAS_UNAME\t\t/**/\n/*#define HAS_PHOSTNAME\t/ **/\n#ifdef HAS_PHOSTNAME\n#define PHOSTNAME \"\"\t/* How to get the host name */\n#endif\n\n/* HAS_GETNETBYADDR:\n *\tThis symbol, if defined, indicates that the getnetbyaddr() routine is\n *\tavailable to look up networks by their IP addresses.\n */\n/*#define HAS_GETNETBYADDR\t\t/ **/\n\n/* HAS_GETNETBYNAME:\n *\tThis symbol, if defined, indicates that the getnetbyname() routine is\n *\tavailable to look up networks by their names.\n */\n/*#define HAS_GETNETBYNAME\t\t/ **/\n\n/* HAS_GETNETENT:\n *\tThis symbol, if defined, indicates that the getnetent() routine is\n *\tavailable to look up network names in some data base or another.\n */\n/*#define HAS_GETNETENT\t\t/ **/\n\n/* HAS_GETPROTOENT:\n *\tThis symbol, if defined, indicates that the getprotoent() routine is\n *\tavailable to look up protocols in some data base or another.\n */\n/*#define HAS_GETPROTOENT\t\t/ **/\n\n/* HAS_GETPGRP:\n *\tThis symbol, if defined, indicates that the getpgrp routine is\n *\tavailable to get the current process group.\n */\n/* USE_BSD_GETPGRP:\n *\tThis symbol, if defined, indicates that getpgrp needs one\n *\targuments whereas USG one needs none.\n */\n/*#define HAS_GETPGRP\t\t/ **/\n/*#define USE_BSD_GETPGRP\t/ **/\n\n/* HAS_GETPROTOBYNAME:\n *\tThis symbol, if defined, indicates that the getprotobyname()\n *\troutine is available to look up protocols by their name.\n */\n/* HAS_GETPROTOBYNUMBER:\n *\tThis symbol, if defined, indicates that the getprotobynumber()\n *\troutine is available to look up protocols by their number.\n */\n#define HAS_GETPROTOBYNAME\t\t/**/\n#define HAS_GETPROTOBYNUMBER\t\t/**/\n\n/* HAS_GETPWENT:\n *\tThis symbol, if defined, indicates that the getpwent routine is\n *\tavailable for sequential access of the passwd database.\n *\tIf this is not available, the older getpw() function may be available.\n */\n/*#define HAS_GETPWENT\t\t/ **/\n\n/* HAS_GETSERVENT:\n *\tThis symbol, if defined, indicates that the getservent() routine is\n *\tavailable to look up network services in some data base or another.\n */\n/*#define HAS_GETSERVENT\t\t/ **/\n\n/* HAS_GETSERVBYNAME:\n *\tThis symbol, if defined, indicates that the getservbyname()\n *\troutine is available to look up services by their name.\n */\n/* HAS_GETSERVBYPORT:\n *\tThis symbol, if defined, indicates that the getservbyport()\n *\troutine is available to look up services by their port.\n */\n#define HAS_GETSERVBYNAME\t\t/**/\n#define HAS_GETSERVBYPORT\t\t/**/\n\n/* HAS_HTONL:\n *\tThis symbol, if defined, indicates that the htonl() routine (and\n *\tfriends htons() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_HTONS:\n *\tThis symbol, if defined, indicates that the htons() routine (and\n *\tfriends htonl() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHL:\n *\tThis symbol, if defined, indicates that the ntohl() routine (and\n *\tfriends htonl() htons() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHS:\n *\tThis symbol, if defined, indicates that the ntohs() routine (and\n *\tfriends htonl() htons() ntohl()) are available to do network\n *\torder byte swapping.\n */\n#define HAS_HTONL\t\t/**/\n#define HAS_HTONS\t\t/**/\n#define HAS_NTOHL\t\t/**/\n#define HAS_NTOHS\t\t/**/\n\n/* HAS_LONG_DOUBLE:\n *\tThis symbol will be defined if the C compiler supports long\n *\tdoubles.\n */\n/* LONG_DOUBLESIZE:\n *\tThis symbol contains the size of a long double, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long doubles.  Note that this\n *\tis sizeof(long double), which may include unused bytes.\n */\n/* HAS_LDEXPL:\n *\tThis symbol, if defined, indicates that the ldexpl routine is\n *\tavailable to shift a long double floating-point number\n *\tby an integral power of 2.\n */\n/* LONG_DOUBLEKIND:\n *\tLONG_DOUBLEKIND will be one of\n *\tLONG_DOUBLE_IS_DOUBLE\n *\tLONG_DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_X86_80_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_X86_80_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_LE\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_BE\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_BE\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_LE\n *\tLONG_DOUBLE_IS_VAX_H_FLOAT\n *\tLONG_DOUBLE_IS_UNKNOWN_FORMAT\n *\tIt is only defined if the system supports long doubles.\n */\n/* LONG_DOUBLE_STYLE_IEEE:\n *\tThis symbol, if defined, indicates that the long double\n *\tis any of the IEEE 754 style long doubles:\n *\tLONG_DOUBLE_STYLE_IEEE_STD, LONG_DOUBLE_STYLE_IEEE_EXTENDED,\n *\tLONG_DOUBLE_STYLE_IEEE_DOUBLEDOUBLE.\n */\n/* LONG_DOUBLE_STYLE_IEEE_DOUBLEDOUBLE:\n *\tThis symbol, if defined, indicates that the long double is\n *\tthe 128-bit double-double.\n */\n/* LONG_DOUBLE_STYLE_IEEE_EXTENDED:\n *\tThis symbol, if defined, indicates that the long double is\n *\tthe 80-bit IEEE 754. Note that despite the 'extended' this\n *\tis less than the 'std', since this is an extension of\n *\tthe double precision.\n */\n/* LONG_DOUBLE_STYLE_IEEE_STD:\n *\tThis symbol, if defined, indicates that the long double is\n *\tthe 128-bit IEEE 754.\n */\n/* LONG_DOUBLE_STYLE_VAX:\n *\tThis symbol, if defined, indicates that the long double is\n *\tthe 128-bit VAX format H.\n */\n/*#define  HAS_LDEXPL\t\t/ **/\n#define HAS_LONG_DOUBLE\t\t/**/\n#ifdef HAS_LONG_DOUBLE\n#define LONG_DOUBLESIZE 8\t\t/**/\n#define LONG_DOUBLEKIND 0\t\t/**/\n#define LONG_DOUBLE_IS_DOUBLE\t\t\t\t0\n#define LONG_DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\t1\n#define LONG_DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\t2\n#define LONG_DOUBLE_IS_X86_80_BIT_LITTLE_ENDIAN\t\t3\n#define LONG_DOUBLE_IS_X86_80_BIT_BIG_ENDIAN\t\t4\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_LE\t5\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_BE\t6\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_BE\t7\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_LE\t8\n#define LONG_DOUBLE_IS_VAX_H_FLOAT\t\t\t9\n#define LONG_DOUBLE_IS_UNKNOWN_FORMAT\t\t\t-1\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LITTLE_ENDIAN\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_LE /* back-compat */\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BIG_ENDIAN\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_BE /* back-compat */\n#undef LONG_DOUBLE_STYLE_IEEE\n#undef LONG_DOUBLE_STYLE_IEEE_DOUBLEDOUBLE\n#define LONG_DOUBLE_STYLE_IEEE_EXTENDED\n#undef LONG_DOUBLE_STYLE_IEEE_STD\n#undef LONG_DOUBLE_STYLE_VAX\n#endif\n\n/* HAS_LONG_LONG:\n *\tThis symbol will be defined if the C compiler supports long long.\n */\n/* LONGLONGSIZE:\n *\tThis symbol contains the size of a long long, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long long.\n */\n/*#define HAS_LONG_LONG\t\t/ **/\n#ifdef HAS_LONG_LONG\n#define LONGLONGSIZE 8\t\t/**/\n#endif\n\n/* HAS_MKSTEMP:\n *\tThis symbol, if defined, indicates that the mkstemp routine is\n *\tavailable to exclusively create and open a uniquely named\n *\ttemporary file.\n */\n/*#define HAS_MKSTEMP\t\t/ **/\n\n/* HAS_MMAP:\n *\tThis symbol, if defined, indicates that the mmap system call is\n *\tavailable to map a file into memory.\n */\n/* Mmap_t:\n *\tThis symbol holds the return type of the mmap() system call\n *\t(and simultaneously the type of the first argument).\n *\tUsually set to 'void *' or 'caddr_t'.\n */\n/*#define HAS_MMAP\t\t/ **/\n#define Mmap_t void *\t/**/\n\n/* HAS_MSG:\n *\tThis symbol, if defined, indicates that the entire msg*(2) library is\n *\tsupported (IPC mechanism based on message queues).\n */\n/*#define HAS_MSG\t\t/ **/\n\n/* HAS_SEM:\n *\tThis symbol, if defined, indicates that the entire sem*(2) library is\n *\tsupported.\n */\n/*#define HAS_SEM\t\t/ **/\n\n/* HAS_SETGRENT:\n *\tThis symbol, if defined, indicates that the setgrent routine is\n *\tavailable for initializing sequential access of the group database.\n */\n/*#define HAS_SETGRENT\t\t/ **/\n\n/* HAS_SETHOSTENT:\n *\tThis symbol, if defined, indicates that the sethostent() routine is\n *\tavailable.\n */\n/*#define HAS_SETHOSTENT\t\t/ **/\n\n/* HAS_SETNETENT:\n *\tThis symbol, if defined, indicates that the setnetent() routine is\n *\tavailable.\n */\n/*#define HAS_SETNETENT\t\t/ **/\n\n/* HAS_SETPROTOENT:\n *\tThis symbol, if defined, indicates that the setprotoent() routine is\n *\tavailable.\n */\n/*#define HAS_SETPROTOENT\t\t/ **/\n\n/* HAS_SETPGRP:\n *\tThis symbol, if defined, indicates that the setpgrp routine is\n *\tavailable to set the current process group.\n */\n/* USE_BSD_SETPGRP:\n *\tThis symbol, if defined, indicates that setpgrp needs two\n *\targuments whereas USG one needs none.  See also HAS_SETPGID\n *\tfor a POSIX interface.\n */\n/*#define HAS_SETPGRP\t\t/ **/\n/*#define USE_BSD_SETPGRP\t/ **/\n\n/* HAS_SETPWENT:\n *\tThis symbol, if defined, indicates that the setpwent routine is\n *\tavailable for initializing sequential access of the passwd database.\n */\n/*#define HAS_SETPWENT\t\t/ **/\n\n/* HAS_SETSERVENT:\n *\tThis symbol, if defined, indicates that the setservent() routine is\n *\tavailable.\n */\n/*#define HAS_SETSERVENT\t\t/ **/\n\n/* HAS_SETVBUF:\n *\tThis symbol, if defined, indicates that the setvbuf routine is\n *\tavailable to change buffering on an open stdio stream.\n *\tto a line-buffered mode.\n */\n#define HAS_SETVBUF\t\t/**/\n\n/* HAS_SHM:\n *\tThis symbol, if defined, indicates that the entire shm*(2) library is\n *\tsupported.\n */\n/*#define HAS_SHM\t\t/ **/\n\n/* Shmat_t:\n *\tThis symbol holds the return type of the shmat() system call.\n *\tUsually set to 'void *' or 'char *'.\n */\n/* HAS_SHMAT_PROTOTYPE:\n *\tThis symbol, if defined, indicates that the sys/shm.h includes\n *\ta prototype for shmat().  Otherwise, it is up to the program to\n *\tguess one.  Shmat_t shmat(int, Shmat_t, int) is a good guess,\n *\tbut not always right so it should be emitted by the program only\n *\twhen HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.\n */\n#define Shmat_t void *\t/**/\n/*#define HAS_SHMAT_PROTOTYPE\t/ **/\n\n/* HAS_SOCKET:\n *\tThis symbol, if defined, indicates that the BSD socket interface is\n *\tsupported.\n */\n/* HAS_SOCKETPAIR:\n *\tThis symbol, if defined, indicates that the BSD socketpair() call is\n *\tsupported.\n */\n/* HAS_SOCKADDR_SA_LEN:\n *\tThis symbol, if defined, indicates that the struct sockaddr\n *\tstructure has a member called sa_len, indicating the length of\n *\tthe structure.\n */\n/* HAS_SOCKADDR_IN6:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct sockaddr_in6;\n */\n/* HAS_SIN6_SCOPE_ID:\n *\tThis symbol, if defined, indicates that the struct sockaddr_in6\n *\tstructure has a member called sin6_scope_id.\n */\n/* HAS_IP_MREQ:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ip_mreq;\n */\n/* HAS_IP_MREQ_SOURCE:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ip_mreq_source;\n */\n/* HAS_IPV6_MREQ:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ipv6_mreq;\n */\n/* HAS_IPV6_MREQ_SOURCE:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ipv6_mreq_source;\n */\n#define\tHAS_SOCKET\t\t/**/\n/*#define\tHAS_SOCKETPAIR\t/ **/\n/*#define\tHAS_SOCKADDR_SA_LEN\t/ **/\n/*#define\tHAS_SOCKADDR_IN6\t/ **/\n#define\tHAS_SIN6_SCOPE_ID\t/**/\n/*#define\tHAS_IP_MREQ\t/ **/\n/*#define\tHAS_IP_MREQ_SOURCE\t/ **/\n/*#define\tHAS_IPV6_MREQ\t/ **/\n/*#define\tHAS_IPV6_MREQ_SOURCE\t/ **/\n\n/* USE_STAT_BLOCKS:\n *\tThis symbol is defined if this system has a stat structure declaring\n *\tst_blksize and st_blocks.\n */\n#ifndef USE_STAT_BLOCKS\n/*#define USE_STAT_BLOCKS \t/ **/\n#endif\n\n/* HAS_SYS_ERRLIST:\n *\tThis symbol, if defined, indicates that the sys_errlist array is\n *\tavailable to translate error numbers to strings. The extern int\n *\tsys_nerr gives the size of that table.\n */\n#define HAS_SYS_ERRLIST\t/**/\n\n/* HAS_STRTOUL:\n *\tThis symbol, if defined, indicates that the strtoul routine is\n *\tavailable to provide conversion of strings to unsigned long.\n */\n#define HAS_STRTOUL\t/**/\n\n/* HAS_UNION_SEMUN:\n *\tThis symbol, if defined, indicates that the union semun is\n *\tdefined by including <sys/sem.h>.  If not, the user code\n *\tprobably needs to define it as:\n *\tunion semun {\n *\t    int val;\n *\t    struct semid_ds *buf;\n *\t    unsigned short *array;\n *\t}\n */\n/* USE_SEMCTL_SEMUN:\n *\tThis symbol, if defined, indicates that union semun is\n *\tused for semctl IPC_STAT.\n */\n/* USE_SEMCTL_SEMID_DS:\n *\tThis symbol, if defined, indicates that struct semid_ds * is\n *\tused for semctl IPC_STAT.\n */\n#define HAS_UNION_SEMUN\t/**/\n/*#define USE_SEMCTL_SEMUN\t/ **/\n/*#define USE_SEMCTL_SEMID_DS\t/ **/\n\n/* HAS_VFORK:\n *\tThis symbol, if defined, indicates that vfork() exists.\n */\n/*#define HAS_VFORK\t/ **/\n\n/* HAS_PSEUDOFORK:\n *\tThis symbol, if defined, indicates that an emulation of the\n *\tfork routine is available.\n */\n/*#define HAS_PSEUDOFORK\t/ **/\n\n/* Signal_t:\n *\tThis symbol's value is either \"void\" or \"int\", corresponding to the\n *\tappropriate return type of a signal handler.  Thus, you can declare\n *\ta signal handler using \"Signal_t (*handler)()\", and define the\n *\thandler using \"Signal_t handler(sig)\".\n */\n#define Signal_t void\t/* Signal handler's return type */\n\n/* I_DIRENT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <dirent.h>. Using this symbol also triggers the definition\n *\tof the Direntry_t define which ends up being 'struct dirent' or\n *\t'struct direct' depending on the availability of <dirent.h>.\n */\n/* DIRNAMLEN:\n *\tThis symbol, if defined, indicates to the C program that the length\n *\tof directory entry names is provided by a d_namlen field.  Otherwise\n *\tyou need to do strlen() on the d_name field.\n */\n/* Direntry_t:\n *\tThis symbol is set to 'struct direct' or 'struct dirent' depending on\n *\twhether dirent is available or not. You should use this pseudo type to\n *\tportably declare your directory entries.\n */\n#define I_DIRENT\t\t/**/\n#define DIRNAMLEN\t/**/\n#define Direntry_t struct direct\n\n/* I_EXECINFO:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <execinfo.h> for backtrace() support.\n */\n/*#define I_EXECINFO\t\t/ **/\n\n/* I_GRP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <grp.h>.\n */\n/* GRPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct group\n *\tin <grp.h> contains gr_passwd.\n */\n/*#define I_GRP\t\t/ **/\n/*#define GRPASSWD\t/ **/\n\n/* I_NDBM:\n *\tThis symbol, if defined, indicates that <ndbm.h> exists and should\n *\tbe included.\n */\n/* I_GDBMNDBM:\n *\tThis symbol, if defined, indicates that <gdbm/ndbm.h> exists and should\n *\tbe included.  This was the location of the ndbm.h compatibility file\n *\tin RedHat 7.1.\n */\n/* I_GDBM_NDBM:\n *\tThis symbol, if defined, indicates that <gdbm-ndbm.h> exists and should\n *\tbe included.  This is the location of the ndbm.h compatibility file\n *\tin Debian 4.0.\n */\n/* NDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/* GDBMNDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <gdbm/ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/* GDBM_NDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <gdbm-ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/*#define I_NDBM\t/ **/\n/*#define I_GDBMNDBM\t/ **/\n/*#define I_GDBM_NDBM\t/ **/\n/*#define NDBM_H_USES_PROTOTYPES\t/ **/\n/*#define GDBMNDBM_H_USES_PROTOTYPES\t/ **/\n/*#define GDBM_NDBM_H_USES_PROTOTYPES\t/ **/\n\n/* I_NETDB:\n *\tThis symbol, if defined, indicates that <netdb.h> exists and\n *\tshould be included.\n */\n/*#define I_NETDB\t\t/ **/\n\n/* I_NET_ERRNO:\n *\tThis symbol, if defined, indicates that <net/errno.h> exists and\n *\tshould be included.\n */\n/*#define I_NET_ERRNO\t\t/ **/\n\n/* I_PWD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pwd.h>.\n */\n/* PWQUOTA:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_quota.\n */\n/* PWAGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_age.\n */\n/* PWCHANGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_change.\n */\n/* PWCLASS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_class.\n */\n/* PWEXPIRE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_expire.\n */\n/* PWCOMMENT:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_comment.\n */\n/* PWGECOS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_gecos.\n */\n/* PWPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_passwd.\n */\n/*#define I_PWD\t\t/ **/\n/*#define PWQUOTA\t/ **/\n/*#define PWAGE\t/ **/\n/*#define PWCHANGE\t/ **/\n/*#define PWCLASS\t/ **/\n/*#define PWEXPIRE\t/ **/\n/*#define PWCOMMENT\t/ **/\n/*#define PWGECOS\t/ **/\n/*#define PWPASSWD\t/ **/\n\n/* I_SYSUIO:\n *\tThis symbol, if defined, indicates that <sys/uio.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUIO\t\t/ **/\n\n/* I_TERMIO:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<termio.h> rather than <sgtty.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/* I_TERMIOS:\n *\tThis symbol, if defined, indicates that the program should include\n *\tthe POSIX termios.h rather than sgtty.h or termio.h.\n *\tThere are also differences in the ioctl() calls that depend on the\n *\tvalue of this symbol.\n */\n/* I_SGTTY:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<sgtty.h> rather than <termio.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/*#define I_TERMIO\t\t/ **/\n/*#define I_TERMIOS\t\t/ **/\n/*#define I_SGTTY\t\t/ **/\n\n/* Free_t:\n *\tThis variable contains the return type of free().  It is usually\n * void, but occasionally int.\n */\n/* Malloc_t:\n *\tThis symbol is the type of pointer returned by malloc and realloc.\n */\n#define Malloc_t void *\t\t\t/**/\n#define Free_t void\t\t\t/**/\n\n/* PERL_MALLOC_WRAP:\n *\tThis symbol, if defined, indicates that we'd like malloc wrap checks.\n */\n#define PERL_MALLOC_WRAP\t\t/**/\n\n/* MYMALLOC:\n *\tThis symbol, if defined, indicates that we're using our own malloc.\n */\n/*#define MYMALLOC\t\t\t/ **/\n\n/* SH_PATH:\n *\tThis symbol contains the full pathname to the shell used on this\n *\ton this system to execute Bourne shell scripts.  Usually, this will be\n *\t/bin/sh, though it's possible that some systems will have /bin/ksh,\n *\t/bin/pdksh, /bin/ash, /bin/bash, or even something such as\n *\tD:/bin/sh.exe.\n */\n#define SH_PATH \"cmd /x /c\"  /**/\n\n/* SIG_NAME:\n *\tThis symbol contains a list of signal names in order of\n *\tsignal number. This is intended\n *\tto be used as a static array initialization, like this:\n *\t\tchar *sig_name[] = { SIG_NAME };\n *\tThe signals in the list are separated with commas, and each signal\n *\tis surrounded by double quotes. There is no leading SIG in the signal\n *\tname, i.e. SIGQUIT is known as \"QUIT\".\n *\tGaps in the signal numbers (up to NSIG) are filled in with NUMnn,\n *\tetc., where nn is the actual signal number (e.g. NUM37).\n *\tThe signal number for sig_name[i] is stored in sig_num[i].\n *\tThe last element is 0 to terminate the list with a NULL.  This\n *\tcorresponds to the 0 at the end of the sig_name_init list.\n *\tNote that this variable is initialized from the sig_name_init,\n *\tnot from sig_name (which is unused).\n */\n/* SIG_NUM:\n *\tThis symbol contains a list of signal numbers, in the same order as the\n *\tSIG_NAME list. It is suitable for static array initialization, as in:\n *\t\tint sig_num[] = { SIG_NUM };\n *\tThe signals in the list are separated with commas, and the indices\n *\twithin that list and the SIG_NAME list match, so it's easy to compute\n *\tthe signal name from a number or vice versa at the price of a small\n *\tdynamic linear lookup.\n *\tDuplicates are allowed, but are moved to the end of the list.\n *\tThe signal number corresponding to sig_name[i] is sig_number[i].\n *\tif (i < NSIG) then sig_number[i] == i.\n *\tThe last element is 0, corresponding to the 0 at the end of\n *\tthe sig_name_init list.\n *\tNote that this variable is initialized from the sig_num_init,\n *\tnot from sig_num (which is unused).\n */\n/* SIG_SIZE:\n *\tThis variable contains the number of elements of the SIG_NAME\n *\tand SIG_NUM arrays, excluding the final NULL entry.\n */\n#define SIG_NAME \"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"NUM05\", \"NUM06\", \"NUM07\", \"FPE\", \"KILL\", \"NUM10\", \"SEGV\", \"NUM12\", \"PIPE\", \"ALRM\", \"TERM\", \"NUM16\", \"NUM17\", \"NUM18\", \"NUM19\", \"CHLD\", \"BREAK\", \"ABRT\", \"STOP\", \"NUM24\", \"CONT\", \"CLD\", 0\t\t/**/\n#define SIG_NUM  0, 1, 2, 21, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 20, 0\t\t/**/\n#define SIG_SIZE 27\t\t\t/**/\n\n/* USE_CROSS_COMPILE:\n *\tThis symbol, if defined, indicates that Perl is being cross-compiled.\n */\n/* PERL_TARGETARCH:\n *\tThis symbol, if defined, indicates the target architecture\n *\tPerl has been cross-compiled to.  Undefined if not a cross-compile.\n */\n#ifndef USE_CROSS_COMPILE\n/*#define\tUSE_CROSS_COMPILE\t/ **/\n#define\tPERL_TARGETARCH\t\"\"\t/**/\n#endif\n\n/* PERL_USE_DEVEL:\n *\tThis symbol, if defined, indicates that Perl was configured with\n *\t-Dusedevel, to enable development features.  This should not be\n *\tdone for production builds.\n */\n/*#define\tPERL_USE_DEVEL\t\t/ **/\n\n/* HAS_ATOLF:\n *\tThis symbol, if defined, indicates that the atolf routine is\n *\tavailable to convert strings into long doubles.\n */\n/*#define HAS_ATOLF\t\t/ **/\n\n/* HAS_ATOLL:\n *\tThis symbol, if defined, indicates that the atoll routine is\n *\tavailable to convert strings into long longs.\n */\n/*#define HAS_ATOLL\t\t/ **/\n\n/* HAS__FWALK:\n *\tThis symbol, if defined, indicates that the _fwalk system call is\n *\tavailable to apply a function to all the file handles.\n */\n/*#define HAS__FWALK\t\t/ **/\n\n/* HAS_ACOSH:\n *\tThis symbol, if defined, indicates that the acosh routine is\n *\tavailable to do the inverse hyperbolic cosine function.\n */\n/*#define HAS_ACOSH\t\t/ **/\n\n/* HAS_AINTL:\n *\tThis symbol, if defined, indicates that the aintl routine is\n *\tavailable.  If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_AINTL\t\t/ **/\n\n/* HAS_ASINH:\n *\tThis symbol, if defined, indicates that the asinh routine is\n *\tavailable to do the inverse hyperbolic sine function.\n */\n/*#define HAS_ASINH\t\t/ **/\n\n/* HAS_ATANH:\n *\tThis symbol, if defined, indicates that the atanh routine is\n *\tavailable to do the inverse hyperbolic tangent function.\n */\n/*#define HAS_ATANH\t\t/ **/\n\n/* HAS_BUILTIN_CHOOSE_EXPR:\n *\tCan we handle GCC builtin for compile-time ternary-like expressions\n */\n/* HAS_BUILTIN_EXPECT:\n *\tCan we handle GCC builtin for telling that certain values are more\n *\tlikely\n */\n/*#define HAS_BUILTIN_EXPECT\t/ **/\n/*#define HAS_BUILTIN_CHOOSE_EXPR\t/ **/\n\n/* HAS_C99_VARIADIC_MACROS:\n *\tIf defined, the compiler supports C99 variadic macros.\n */\n/*#define\tHAS_C99_VARIADIC_MACROS\t/ **/\n\n/* HAS_CLASS:\n *\tThis symbol, if defined, indicates that the class routine is\n *\tavailable to classify doubles.  Available for example in AIX.\n *\tThe returned values are defined in <float.h> and are:\n *\n *\tFP_PLUS_NORM\tPositive normalized, nonzero\n *\tFP_MINUS_NORM\tNegative normalized, nonzero\n *\tFP_PLUS_DENORM\tPositive denormalized, nonzero\n *\tFP_MINUS_DENORM\tNegative denormalized, nonzero\n *\tFP_PLUS_ZERO\t+0.0\n *\tFP_MINUS_ZERO\t-0.0\n *\tFP_PLUS_INF\t+INF\n *\tFP_MINUS_INF\t-INF\n *\tFP_NANS\t\tSignaling Not a Number (NaNS)\n *\tFP_NANQ\t\tQuiet Not a Number (NaNQ)\n */\n/*#define HAS_CLASS\t\t/ **/\n\n/* HAS_CLEARENV:\n *\tThis symbol, if defined, indicates that the clearenv () routine is\n *\tavailable for use.\n */\n/*#define HAS_CLEARENV\t\t/ **/\n\n/* HAS_STRUCT_CMSGHDR:\n *\tThis symbol, if defined, indicates that the struct cmsghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_CMSGHDR\t/ **/\n\n/* HAS_COPYSIGN:\n *\tThis symbol, if defined, indicates that the copysign routine is\n *\tavailable to do the copysign function.\n */\n/*#define HAS_COPYSIGN\t\t/ **/\n\n/* HAS_COPYSIGNL:\n *\tThis symbol, if defined, indicates that the copysignl routine is\n *\tavailable.  If aintl is also present we can emulate modfl.\n */\n/*#define HAS_COPYSIGNL\t\t/ **/\n\n/* USE_CPLUSPLUS:\n *\tThis symbol, if defined, indicates that a C++ compiler was\n *\tused to compiled Perl and will be used to compile extensions.\n */\n/*#define USE_CPLUSPLUS\t\t/ **/\n\n/* HAS_DBMINIT_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the dbminit() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int dbminit(char *);\n */\n/*#define\tHAS_DBMINIT_PROTO\t/ **/\n\n/* HAS_DIR_DD_FD:\n *\tThis symbol, if defined, indicates that the the DIR* dirstream\n *\tstructure contains a member variable named dd_fd.\n */\n/*#define HAS_DIR_DD_FD\t\t/ **/\n\n/* HAS_DIRFD:\n *\tThis manifest constant lets the C program know that dirfd\n *\tis available.\n */\n/*#define HAS_DIRFD\t\t/ **/\n\n/* DLSYM_NEEDS_UNDERSCORE:\n *\tThis symbol, if defined, indicates that we need to prepend an\n *\tunderscore to the symbol name before calling dlsym().  This only\n *\tmakes sense if you *have* dlsym, which we will presume is the\n *\tcase if you're using dl_dlopen.xs.\n */\n/*#define \tDLSYM_NEEDS_UNDERSCORE \t/ **/\n\n/* HAS_ERF:\n *\tThis symbol, if defined, indicates that the erf routine is\n *\tavailable to do the error function.\n */\n/*#define HAS_ERF\t\t/ **/\n\n/* HAS_ERFC:\n *\tThis symbol, if defined, indicates that the erfc routine is\n *\tavailable to do the complementary error function.\n */\n/*#define HAS_ERFC\t\t/ **/\n\n/* HAS_EXP2:\n *\tThis symbol, if defined, indicates that the exp2 routine is\n *\tavailable to do the 2**x function.\n */\n/*#define HAS_EXP2\t\t/ **/\n\n/* HAS_EXPM1:\n *\tThis symbol, if defined, indicates that the expm1 routine is\n *\tavailable to do the exp(x) - 1 when x is near 1 function.\n */\n/*#define HAS_EXPM1\t\t/ **/\n\n/* HAS_FAST_STDIO:\n *\tThis symbol, if defined, indicates that the \"fast stdio\"\n *\tis available to manipulate the stdio buffers directly.\n */\n#define HAS_FAST_STDIO\t\t/**/\n\n/* HAS_FCHDIR:\n *\tThis symbol, if defined, indicates that the fchdir routine is\n *\tavailable to change directory using a file descriptor.\n */\n/*#define HAS_FCHDIR\t\t/ **/\n\n/* FCNTL_CAN_LOCK:\n *\tThis symbol, if defined, indicates that fcntl() can be used\n *\tfor file locking.  Normally on Unix systems this is defined.\n *\tIt may be undefined on VMS.\n */\n/*#define FCNTL_CAN_LOCK\t\t/ **/\n\n/* HAS_FDCLOSE:\n *\tThis symbol, if defined, indicates that the fdclose routine is\n *\tavailable to free a FILE structure without closing the underlying\n *\tfile descriptor.  This function appeared in FreeBSD 10.2.\n */\n/*#define HAS_FDCLOSE\t\t/ **/\n\n/* HAS_FDIM:\n *\tThis symbol, if defined, indicates that the fdim routine is\n *\tavailable to do the positive difference function.\n */\n/*#define HAS_FDIM\t\t/ **/\n\n/* HAS_FEGETROUND:\n *\tThis symbol, if defined, indicates that the fegetround routine is\n *\tavailable to return the macro corresponding to the current rounding\n *\tmode.\n */\n/*#define HAS_FEGETROUND\t/ **/\n\n/* HAS_FINITE:\n *\tThis symbol, if defined, indicates that the finite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_FINITE\t\t/ **/\n\n/* HAS_FINITEL:\n *\tThis symbol, if defined, indicates that the finitel routine is\n *\tavailable to check whether a long double is finite\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_FINITEL\t\t/ **/\n\n/* HAS_FLOCK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the flock() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int flock(int, int);\n */\n#define\tHAS_FLOCK_PROTO\t/**/\n\n/* HAS_FMA:\n *\tThis symbol, if defined, indicates that the fma routine is\n *\tavailable to do the multiply-add function.\n */\n/*#define HAS_FMA\t\t/ **/\n\n/* HAS_FMAX:\n *\tThis symbol, if defined, indicates that the fmax routine is\n *\tavailable to do the maximum function.\n */\n/*#define HAS_FMAX\t\t/ **/\n\n/* HAS_FMIN:\n *\tThis symbol, if defined, indicates that the fmin routine is\n *\tavailable to do the minimum function.\n */\n/*#define HAS_FMIN\t\t/ **/\n\n/* HAS_FP_CLASS:\n *\tThis symbol, if defined, indicates that the fp_class routine is\n *\tavailable to classify doubles.  Available for example in Digital UNIX.\n *\tThe returned values are defined in <math.h> and are:\n *\n *\tFP_SNAN           Signaling NaN (Not-a-Number)\n *\tFP_QNAN           Quiet NaN (Not-a-Number)\n *\tFP_POS_INF        +infinity\n *\tFP_NEG_INF        -infinity\n *\tFP_POS_NORM       Positive normalized\n *\tFP_NEG_NORM       Negative normalized\n *\tFP_POS_DENORM     Positive denormalized\n *\tFP_NEG_DENORM     Negative denormalized\n *\tFP_POS_ZERO       +0.0 (positive zero)\n *\tFP_NEG_ZERO       -0.0 (negative zero)\n */\n/*#define HAS_FP_CLASS\t\t/ **/\n\n/* HAS_FP_CLASSL:\n *\tThis symbol, if defined, indicates that the fp_classl routine is\n *\tavailable to classify long doubles.  Available for example in\n *\tDigital UNIX.  See for possible values HAS_FP_CLASS.\n */\n/*#define HAS_FP_CLASSL\t\t/ **/\n\n/* HAS_FPCLASS:\n *\tThis symbol, if defined, indicates that the fpclass routine is\n *\tavailable to classify doubles.  Available for example in Solaris/SVR4.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASS\t\t/ **/\n\n/* HAS_FPCLASSIFY:\n *\tThis symbol, if defined, indicates that the fpclassify routine is\n *\tavailable to classify doubles.  Available for example in HP-UX.\n *\tThe returned values are defined in <math.h> and are\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n/* HAS_FP_CLASSIFY:\n *\tThis symbol, if defined, indicates that the fp_classify routine is\n *\tavailable to classify doubles. The values are defined in <math.h>\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n/*#define\tHAS_FPCLASSIFY\t\t/ **/\n/*#define\tHAS_FP_CLASSIFY\t\t/ **/\n\n/* HAS_FPCLASSL:\n *\tThis symbol, if defined, indicates that the fpclassl routine is\n *\tavailable to classify long doubles.  Available for example in IRIX.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASSL\t\t/ **/\n\n/* HAS_FPGETROUND:\n *\tThis symbol, if defined, indicates that the fpgetround routine is\n *\tavailable to get the floating point rounding mode.\n */\n/*#define HAS_FPGETROUND\t\t/ **/\n\n/* HAS_FPOS64_T:\n *\tThis symbol will be defined if the C compiler supports fpos64_t.\n */\n/*#define\tHAS_FPOS64_T    \t/ **/\n\n/* HAS_FREXPL:\n *\tThis symbol, if defined, indicates that the frexpl routine is\n *\tavailable to break a long double floating-point number into\n *\ta normalized fraction and an integral power of 2.\n */\n/*#define HAS_FREXPL\t\t/ **/\n\n/* HAS_STRUCT_FS_DATA:\n *\tThis symbol, if defined, indicates that the struct fs_data\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_FS_DATA\t/ **/\n\n/* HAS_FCHMODAT:\n *\tThis symbol is defined if the fchmodat() routine is available.\n */\n/* HAS_LINKAT:\n *\tThis symbol is defined if the linkat() routine is available.\n */\n/* HAS_OPENAT:\n *\tThis symbol is defined if the openat() routine is available.\n */\n/* HAS_RENAMEAT:\n *\tThis symbol is defined if the renameat() routine is available.\n */\n/* HAS_UNLINKAT:\n *\tThis symbol is defined if the unlinkat() routine is available.\n */\n/*#define\tHAS_FCHMODAT\t/ **/\n/*#define\tHAS_LINKAT\t/ **/\n/*#define\tHAS_OPENAT\t/ **/\n/*#define\tHAS_RENAMEAT\t/ **/\n/*#define\tHAS_UNLINKAT\t/ **/\n\n/* HAS_FSEEKO:\n *\tThis symbol, if defined, indicates that the fseeko routine is\n *\tavailable to fseek beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FSEEKO\t\t/ **/\n\n/* HAS_FSTATFS:\n *\tThis symbol, if defined, indicates that the fstatfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATFS\t\t/ **/\n\n/* HAS_FSYNC:\n *\tThis symbol, if defined, indicates that the fsync routine is\n *\tavailable to write a file's modified data and attributes to\n *\tpermanent storage.\n */\n/*#define HAS_FSYNC\t\t/ **/\n\n/* HAS_FTELLO:\n *\tThis symbol, if defined, indicates that the ftello routine is\n *\tavailable to ftell beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FTELLO\t\t/ **/\n\n/* HAS_FUTIMES:\n *\tThis symbol, if defined, indicates that the futimes routine is\n *\tavailable to change file descriptor time stamps with struct timevals.\n */\n/*#define HAS_FUTIMES\t\t/ **/\n\n/* HAS_GAI_STRERROR:\n *\tThis symbol, if defined, indicates that the gai_strerror routine\n *\tis available to translate error codes returned by getaddrinfo()\n *\tinto human readable strings.\n */\n/*#define HAS_GAI_STRERROR\t/ **/\n\n/* HAS_GETADDRINFO:\n *\tThis symbol, if defined, indicates that the getaddrinfo() function\n *\tis available for use.\n */\n/*#define HAS_GETADDRINFO\t\t/ **/\n\n/* HAS_GETCWD:\n *\tThis symbol, if defined, indicates that the getcwd routine is\n *\tavailable to get the current working directory.\n */\n#define HAS_GETCWD\t\t/**/\n\n/* HAS_GETESPWNAM:\n *\tThis symbol, if defined, indicates that the getespwnam system call is\n *\tavailable to retrieve enhanced (shadow) password entries by name.\n */\n/*#define HAS_GETESPWNAM\t\t/ **/\n\n/* HAS_GETFSSTAT:\n *\tThis symbol, if defined, indicates that the getfsstat routine is\n *\tavailable to stat filesystems in bulk.\n */\n/*#define HAS_GETFSSTAT\t\t/ **/\n\n/* HAS_GETITIMER:\n *\tThis symbol, if defined, indicates that the getitimer routine is\n *\tavailable to return interval timers.\n */\n/*#define HAS_GETITIMER\t\t/ **/\n\n/* HAS_GETMNT:\n *\tThis symbol, if defined, indicates that the getmnt routine is\n *\tavailable to get filesystem mount info by filename.\n */\n/*#define HAS_GETMNT\t\t/ **/\n\n/* HAS_GETMNTENT:\n *\tThis symbol, if defined, indicates that the getmntent routine is\n *\tavailable to iterate through mounted file systems to get their info.\n */\n/*#define HAS_GETMNTENT\t\t/ **/\n\n/* HAS_GETNAMEINFO:\n *\tThis symbol, if defined, indicates that the getnameinfo() function\n *\tis available for use.\n */\n/*#define HAS_GETNAMEINFO\t\t/ **/\n\n/* HAS_GETPRPWNAM:\n *\tThis symbol, if defined, indicates that the getprpwnam system call is\n *\tavailable to retrieve protected (shadow) password entries by name.\n */\n/*#define HAS_GETPRPWNAM\t\t/ **/\n\n/* HAS_GETSPNAM:\n *\tThis symbol, if defined, indicates that the getspnam system call is\n *\tavailable to retrieve SysV shadow password entries by name.\n */\n/*#define HAS_GETSPNAM\t\t/ **/\n\n/* HAS_HASMNTOPT:\n *\tThis symbol, if defined, indicates that the hasmntopt routine is\n *\tavailable to query the mount options of file systems.\n */\n/*#define HAS_HASMNTOPT\t\t/ **/\n\n/* HAS_HYPOT:\n *\tThis symbol, if defined, indicates that the hypot routine is\n *\tavailable to do the hypotenuse function.\n */\n/*#define HAS_HYPOT\t\t/ **/\n\n/* HAS_ILOGB:\n *\tThis symbol, if defined, indicates that the ilogb routine is\n *\tavailable to get integer exponent of a floating-point value.\n */\n/*#define HAS_ILOGB\t\t/ **/\n\n/* HAS_ILOGBL:\n *\tThis symbol, if defined, indicates that the ilogbl routine is\n *\tavailable.  If scalbnl is also present we can emulate frexpl.\n */\n/*#define HAS_ILOGBL\t\t/ **/\n\n/* HAS_INETNTOP:\n *\tThis symbol, if defined, indicates that the inet_ntop() function\n *\tis available to parse IPv4 and IPv6 strings.\n */\n/*#define HAS_INETNTOP\t\t/ **/\n\n/* HAS_INETPTON:\n *\tThis symbol, if defined, indicates that the inet_pton() function\n *\tis available to parse IPv4 and IPv6 strings.\n */\n/*#define HAS_INETPTON\t\t/ **/\n\n/* HAS_INT64_T:\n *     This symbol will defined if the C compiler supports int64_t.\n *     Usually the <inttypes.h> needs to be included, but sometimes\n *\t<sys/types.h> is enough.\n */\n/*#define     HAS_INT64_T               / **/\n\n/* HAS_ISBLANK:\n *\tThis manifest constant lets the C program know that isblank\n *\tis available.\n */\n/*#define HAS_ISBLANK\t\t/ **/\n\n/* HAS_ISFINITE:\n *\tThis symbol, if defined, indicates that the isfinite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_ISFINITE\t\t/ **/\n\n/* HAS_ISFINITEL:\n *\tThis symbol, if defined, indicates that the isfinitel routine is\n *\tavailable to check whether a long double is finite.\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_ISFINITEL\t\t/ **/\n\n/* HAS_ISINF:\n *\tThis symbol, if defined, indicates that the isinf routine is\n *\tavailable to check whether a double is an infinity.\n */\n/*#define HAS_ISINF\t\t/ **/\n\n/* HAS_ISINFL:\n *\tThis symbol, if defined, indicates that the isinfl routine is\n *\tavailable to check whether a long double is an infinity.\n */\n/*#define HAS_ISINFL\t\t/ **/\n\n/* HAS_ISLESS:\n *\tThis symbol, if defined, indicates that the isless routine is\n *\tavailable to do the isless function.\n */\n/*#define HAS_ISLESS\t\t/ **/\n\n/* HAS_ISNAN:\n *\tThis symbol, if defined, indicates that the isnan routine is\n *\tavailable to check whether a double is a NaN.\n */\n#define HAS_ISNAN\t\t/**/\n\n/* HAS_ISNANL:\n *\tThis symbol, if defined, indicates that the isnanl routine is\n *\tavailable to check whether a long double is a NaN.\n */\n/*#define HAS_ISNANL\t\t/ **/\n\n/* HAS_ISNORMAL:\n *\tThis symbol, if defined, indicates that the isnormal routine is\n *\tavailable to check whether a double is normal (non-zero normalized).\n */\n/*#define HAS_ISNORMAL\t\t/ **/\n\n/* HAS_J0:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tj0() function is available for Bessel functions of the first\n *\tkind of the order zero, for doubles.\n */\n/* HAS_J0L:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tj0l() function is available for Bessel functions of the first\n *\tkind of the order zero, for long doubles.\n */\n/*#define\tHAS_J0\t\t/ **/\n/*#define\tHAS_J0L\t\t/ **/\n\n/* HAS_LC_MONETARY_2008:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable and has the additional members added in POSIX 1003.1-2008.\n */\n/*#define HAS_LC_MONETARY_2008\t\t/ **/\n\n/* HAS_LDBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol LDBL_DIG, which is the number\n *\tof significant digits in a long double precision number. Unlike\n *\tfor DBL_DIG, there's no good guess for LDBL_DIG if it is undefined.\n */\n#define HAS_LDBL_DIG \t/**/\n\n/* HAS_LGAMMA:\n *\tThis symbol, if defined, indicates that the lgamma routine is\n *\tavailable to do the log gamma function.  See also HAS_TGAMMA and\n *\tHAS_LGAMMA_R.\n */\n/*#define HAS_LGAMMA\t\t/ **/\n\n/* HAS_LGAMMA_R:\n *\tThis symbol, if defined, indicates that the lgamma_r routine is\n *\tavailable to do the log gamma function without using the global\n *\tsigngam variable.\n */\n/*#define HAS_LGAMMA_R\t\t/ **/\n\n/* LIBM_LIB_VERSION:\n *\tThis symbol, if defined, indicates that libm exports _LIB_VERSION\n *\tand that math.h defines the enum to manipulate it.\n */\n/*#define LIBM_LIB_VERSION\t\t/ **/\n\n/* HAS_LLRINT:\n *\tThis symbol, if defined, indicates that the llrint routine is\n *\tavailable to return the long long value closest to a double\n *\t(according to the current rounding mode).\n */\n/*#define HAS_LLRINT\t\t/ **/\n\n/* HAS_LLRINTL:\n *\tThis symbol, if defined, indicates that the llrintl routine is\n *\tavailable to return the long long value closest to a long double\n *\t(according to the current rounding mode).\n */\n/*#define HAS_LLRINTL\t\t/ **/\n\n/* HAS_LLROUND:\n *\tThis symbol, if defined, indicates that the llround routine is\n *\tavailable to return the nearest long long value.\n */\n/*#define HAS_LLROUND\t\t/ **/\n\n/* HAS_LLROUNDL:\n *\tThis symbol, if defined, indicates that the llroundl routine is\n *\tavailable to return the nearest long long value away from zero of\n *\tthe long double argument value.\n */\n/*#define HAS_LLROUNDL\t\t/ **/\n\n/* HAS_LOG1P:\n *\tThis symbol, if defined, indicates that the log1p routine is\n *\tavailable to do the logarithm of 1 plus argument function.\n */\n/*#define HAS_LOG1P\t\t/ **/\n\n/* HAS_LOG2:\n *\tThis symbol, if defined, indicates that the log2 routine is\n *\tavailable to do the log2 function.\n */\n/*#define HAS_LOG2\t\t/ **/\n\n/* HAS_LOGB:\n *\tThis symbol, if defined, indicates that the logb routine is\n *\tavailable to do the logb function.\n */\n/*#define HAS_LOGB\t\t/ **/\n\n/* HAS_LRINT:\n *\tThis symbol, if defined, indicates that the lrint routine is\n *\tavailable to return the integral value closest to a double\n *\t(according to the current rounding mode).\n */\n/*#define HAS_LRINT\t\t/ **/\n\n/* HAS_LRINTL:\n *\tThis symbol, if defined, indicates that the lrintl routine is\n *\tavailable to return the integral value closest to a long double\n *\t(according to the current rounding mode).\n */\n/*#define HAS_LRINTL\t\t/ **/\n\n/* HAS_LROUND:\n *\tThis symbol, if defined, indicates that the lround routine is\n *\tavailable to return the nearest integral value.\n */\n/*#define HAS_LROUND\t\t/ **/\n\n/* HAS_LROUNDL:\n *\tThis symbol, if defined, indicates that the lroundl routine is\n *\tavailable to return the nearest integral value away from zero of\n *\tthe long double argument value.\n */\n/*#define HAS_LROUNDL\t\t/ **/\n\n/* HAS_MADVISE:\n *\tThis symbol, if defined, indicates that the madvise system call is\n *\tavailable to map a file into memory.\n */\n/*#define HAS_MADVISE\t\t/ **/\n\n/* HAS_MALLOC_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_size\n *\troutine is available for use.\n */\n/*#define HAS_MALLOC_SIZE\t\t/ **/\n\n/* HAS_MALLOC_GOOD_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_good_size\n *\troutine is available for use.\n */\n/*#define HAS_MALLOC_GOOD_SIZE\t/ **/\n\n/* HAS_MEMMEM:\n *\tThis symbol, if defined, indicates that the memmem routine is\n *\tavailable to return a pointer to the start of the first occurance\n *\tof a substring in a memory area (or NULL if not found).\n */\n/*#define HAS_MEMMEM\t\t/ **/\n\n/* HAS_MEMRCHR:\n *\tThis symbol, if defined, indicates that the memrchr routine is\n *\tavailable to return a pointer to the last occurrence of a byte in\n *\ta memory area (or NULL if not found).\n */\n/*#define HAS_MEMRCHR\t\t/ **/\n\n/* HAS_MKDTEMP:\n *\tThis symbol, if defined, indicates that the mkdtemp routine is\n *\tavailable to exclusively create a uniquely named temporary directory.\n */\n/*#define HAS_MKDTEMP\t\t/ **/\n\n/* HAS_MKSTEMPS:\n *\tThis symbol, if defined, indicates that the mkstemps routine is\n *\tavailable to exclusively create and open a uniquely named\n *\t(with a suffix) temporary file.\n */\n/*#define HAS_MKSTEMPS\t\t/ **/\n\n/* HAS_MODFL:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tavailable to split a long double x into a fractional part f and\n *\tan integer part i such that |f| < 1.0 and (f + i) = x.\n */\n/* HAS_MODFL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the modfl() function.  Otherwise, it is up\n *\tto the program to supply one.\n */\n/*#define HAS_MODFL\t\t/ **/\n/*#define HAS_MODFL_PROTO\t\t/ **/\n\n/* HAS_MPROTECT:\n *\tThis symbol, if defined, indicates that the mprotect system call is\n *\tavailable to modify the access protection of a memory mapped file.\n */\n/*#define HAS_MPROTECT\t\t/ **/\n\n/* HAS_STRUCT_MSGHDR:\n *\tThis symbol, if defined, indicates that the struct msghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_MSGHDR\t/ **/\n\n/* HAS_NAN:\n *\tThis symbol, if defined, indicates that the nan routine is\n *\tavailable to generate NaN.\n */\n/*#define HAS_NAN\t\t/ **/\n\n/* HAS_NEARBYINT:\n *\tThis symbol, if defined, indicates that the nearbyint routine is\n *\tavailable to return the integral value closest to (according to\n *\tthe current rounding mode) to x.\n */\n/*#define HAS_NEARBYINT\t\t/ **/\n\n/* HAS_NEWLOCALE:\n *\tThis symbol, if defined, indicates that the newlocale routine is\n *\tavailable to return a new locale object or modify an existing\n *\tlocale object.\n */\n/* HAS_FREELOCALE:\n *\tThis symbol, if defined, indicates that the freelocale routine is\n *\tavailable to deallocates the resources associated with a locale object.\n */\n/* HAS_USELOCALE:\n *\tThis symbol, if defined, indicates that the uselocale routine is\n *\tavailable to set the current locale for the calling thread.\n */\n/* HAS_QUERYLOCALE:\n *\tThis symbol, if defined, indicates that the querylocale routine is\n *\tavailable to return the name of the locale for a category mask.\n */\n/* I_XLOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <xlocale.h> to get uselocale() and its friends.\n */\n/*#define\tHAS_NEWLOCALE\t/ **/\n/*#define\tHAS_FREELOCALE\t/ **/\n/*#define\tHAS_USELOCALE\t/ **/\n/*#define\tHAS_QUERYLOCALE\t/ **/\n/*#define\tI_XLOCALE               / **/\n\n/* HAS_NEXTAFTER:\n *\tThis symbol, if defined, indicates that the nextafter routine is\n *\tavailable to return the next machine representable double from\n *\tx in direction y.\n */\n/*#define HAS_NEXTAFTER\t\t/ **/\n\n/* HAS_NEXTTOWARD:\n *\tThis symbol, if defined, indicates that the nexttoward routine is\n *\tavailable to return the next machine representable long double from\n *\tx in direction y.\n */\n/*#define HAS_NEXTTOWARD\t\t/ **/\n\n/* HAS_NL_LANGINFO:\n *\tThis symbol, if defined, indicates that the nl_langinfo routine is\n *\tavailable to return local data.  You will also need <langinfo.h>\n *\tand therefore I_LANGINFO.\n */\n/*#define HAS_NL_LANGINFO\t\t/ **/\n\n/* HAS_OFF64_T:\n *\tThis symbol will be defined if the C compiler supports off64_t.\n */\n/*#define\tHAS_OFF64_T    \t\t/ **/\n\n/* HAS_PRCTL:\n *\tThis symbol, if defined, indicates that the prctl routine is\n *\tavailable to set process title.\n *\tNote that there are at least two prctl variants: Linux and Irix.\n *\tWhile they are somewhat similar, they are incompatible.\n */\n/* HAS_PRCTL_SET_NAME:\n *\tThis symbol, if defined, indicates that the prctl routine is\n *\tavailable to set process title and supports PR_SET_NAME.\n */\n/*#define HAS_PRCTL\t\t/ **/\n/*#define HAS_PRCTL_SET_NAME\t\t/ **/\n\n/* HAS_PROCSELFEXE:\n *\tThis symbol is defined if PROCSELFEXE_PATH is a symlink\n *\tto the absolute pathname of the executing program.\n */\n/* PROCSELFEXE_PATH:\n *\tIf HAS_PROCSELFEXE is defined this symbol is the filename\n *\tof the symbolic link pointing to the absolute pathname of\n *\tthe executing program.\n */\n/*#define HAS_PROCSELFEXE\t/ **/\n#if defined(HAS_PROCSELFEXE) && !defined(PROCSELFEXE_PATH)\n#define PROCSELFEXE_PATH\t\t/**/\n#endif\n\n/* HAS_PTHREAD_ATTR_SETSCOPE:\n *\tThis symbol, if defined, indicates that the pthread_attr_setscope\n *\tsystem call is available to set the contention scope attribute of\n *\ta thread attribute object.\n */\n/*#define HAS_PTHREAD_ATTR_SETSCOPE\t\t/ **/\n\n/* HAS_PTRDIFF_T:\n *\tThis symbol will be defined if the C compiler supports ptrdiff_t.\n */\n#define\tHAS_PTRDIFF_T    \t\t/**/\n\n/* HAS_READV:\n *\tThis symbol, if defined, indicates that the readv routine is\n *\tavailable to do gather reads.  You will also need <sys/uio.h>\n *\tand there I_SYSUIO.\n */\n/*#define HAS_READV\t\t/ **/\n\n/* HAS_RECVMSG:\n *\tThis symbol, if defined, indicates that the recvmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_RECVMSG\t\t/ **/\n\n/* HAS_REMAINDER:\n *\tThis symbol, if defined, indicates that the remainder routine is\n *\tavailable to return the floating-point remainder.\n */\n/*#define HAS_REMAINDER\t\t/ **/\n\n/* HAS_REMQUO:\n *\tThis symbol, if defined, indicates that the remquo routine is\n *\tavailable to return the remainder and part of quotient.\n */\n/*#define HAS_REMQUO\t\t/ **/\n\n/* HAS_RINT:\n *\tThis symbol, if defined, indicates that the rint routine is\n *\tavailable to return the nearest integral value to x as double\n *\tusing the current rounding mode.\n */\n/*#define HAS_RINT\t\t/ **/\n\n/* HAS_ROUND:\n *\tThis symbol, if defined, indicates that the round routine is\n *\tavailable to round to nearest integer, away from zero.\n */\n/*#define HAS_ROUND\t\t/ **/\n\n/* HAS_SBRK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sbrk() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern void* sbrk(int);\n *\t\textern void* sbrk(size_t);\n */\n/*#define\tHAS_SBRK_PROTO\t/ **/\n\n/* HAS_SCALBN:\n *\tThis symbol, if defined, indicates that the scalbn routine is\n *\tavailable to multiply floating-point number by integral power\n *\tof radix.\n */\n/*#define HAS_SCALBN\t\t/ **/\n\n/* HAS_SCALBNL:\n *\tThis symbol, if defined, indicates that the scalbnl routine is\n *\tavailable.  If ilogbl is also present we can emulate frexpl.\n */\n/*#define HAS_SCALBNL\t\t/ **/\n\n/* HAS_SENDMSG:\n *\tThis symbol, if defined, indicates that the sendmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_SENDMSG\t\t/ **/\n\n/* HAS_SETITIMER:\n *\tThis symbol, if defined, indicates that the setitimer routine is\n *\tavailable to set interval timers.\n */\n/*#define HAS_SETITIMER\t\t/ **/\n\n/* HAS_SETPROCTITLE:\n *\tThis symbol, if defined, indicates that the setproctitle routine is\n *\tavailable to set process title.\n */\n/*#define HAS_SETPROCTITLE\t\t/ **/\n\n/* HAS_SIGNBIT:\n *\tThis symbol, if defined, indicates that the signbit routine is\n *\tavailable to check if the given number has the sign bit set.\n *\tThis should include correct testing of -0.0.  This will only be set\n *\tif the signbit() routine is safe to use with the NV type used internally\n *\tin perl.  Users should call Perl_signbit(), which will be #defined to\n *\tthe system's signbit() function or macro if this symbol is defined.\n */\n/*#define HAS_SIGNBIT\t\t/ **/\n\n/* HAS_SIGPROCMASK:\n *\tThis symbol, if defined, indicates that the sigprocmask\n *\tsystem call is available to examine or change the signal mask\n *\tof the calling process.\n */\n/*#define HAS_SIGPROCMASK\t\t/ **/\n\n/* USE_SITECUSTOMIZE:\n *\tThis symbol, if defined, indicates that sitecustomize should\n *\tbe used.\n */\n#ifndef USE_SITECUSTOMIZE\n/*#define\tUSE_SITECUSTOMIZE\t\t/ **/\n#endif\n\n/* HAS_SNPRINTF:\n *\tThis symbol, if defined, indicates that the snprintf () library\n *\tfunction is available for use.\n */\n/* HAS_VSNPRINTF:\n *\tThis symbol, if defined, indicates that the vsnprintf () library\n *\tfunction is available for use.\n */\n#define HAS_SNPRINTF\t/**/\n#define HAS_VSNPRINTF\t/**/\n\n/* HAS_SOCKATMARK:\n *\tThis symbol, if defined, indicates that the sockatmark routine is\n *\tavailable to test whether a socket is at the out-of-band mark.\n */\n/*#define HAS_SOCKATMARK\t\t/ **/\n\n/* HAS_SOCKATMARK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sockatmark() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int sockatmark(int);\n */\n/*#define\tHAS_SOCKATMARK_PROTO\t/ **/\n\n/* HAS_SOCKS5_INIT:\n *\tThis symbol, if defined, indicates that the socks5_init routine is\n *\tavailable to initialize SOCKS 5.\n */\n/*#define HAS_SOCKS5_INIT\t\t/ **/\n\n/* HAS_SQRTL:\n *\tThis symbol, if defined, indicates that the sqrtl routine is\n *\tavailable to do long double square roots.\n */\n/*#define HAS_SQRTL\t\t/ **/\n\n/* HAS_SETRESGID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresgid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresgid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESGID_PROTO\t/ **/\n\n/* HAS_SETRESUID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresuid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresuid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESUID_PROTO\t/ **/\n\n/* HAS_STRUCT_STATFS_F_FLAGS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tdoes have the f_flags member containing the mount flags of\n *\tthe filesystem containing the file.\n *\tThis kind of struct statfs is coming from <sys/mount.h> (BSD 4.3),\n *\tnot from <sys/statfs.h> (SYSV).  Older BSDs (like Ultrix) do not\n *\thave statfs() and struct statfs, they have ustat() and getmnt()\n *\twith struct ustat and struct fs_data.\n */\n/*#define HAS_STRUCT_STATFS_F_FLAGS\t\t/ **/\n\n/* HAS_STRUCT_STATFS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_STATFS\t/ **/\n\n/* HAS_FSTATVFS:\n *\tThis symbol, if defined, indicates that the fstatvfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATVFS\t\t/ **/\n\n/* HAS_STRERROR_L:\n *\tThis symbol, if defined, indicates that the strerror_l routine is\n *\tavailable to return the error message for a given errno value in\n *\ta particular locale (identified by a locale_t object).\n */\n/*#define HAS_STRERROR_L\t\t/ **/\n\n/* HAS_STRFTIME:\n *\tThis symbol, if defined, indicates that the strftime routine is\n *\tavailable to do time formatting.\n */\n#define HAS_STRFTIME\t\t/**/\n\n/* HAS_STRLCAT:\n *\tThis symbol, if defined, indicates that the strlcat () routine is\n *\tavailable to do string concatenation.\n */\n/*#define HAS_STRLCAT\t\t/ **/\n\n/* HAS_STRLCPY:\n *\tThis symbol, if defined, indicates that the strlcpy () routine is\n *\tavailable to do string copying.\n */\n/*#define HAS_STRLCPY\t\t/ **/\n\n/* HAS_STRTOLD:\n *\tThis symbol, if defined, indicates that the strtold routine is\n *\tavailable to convert strings to long doubles.\n */\n/*#define HAS_STRTOLD\t\t/ **/\n\n/* HAS_STRTOLL:\n *\tThis symbol, if defined, indicates that the strtoll routine is\n *\tavailable to convert strings to long longs.\n */\n/*#define HAS_STRTOLL\t\t/ **/\n\n/* HAS_STRTOQ:\n *\tThis symbol, if defined, indicates that the strtoq routine is\n *\tavailable to convert strings to long longs (quads).\n */\n/*#define HAS_STRTOQ\t\t/ **/\n\n/* HAS_STRTOULL:\n *\tThis symbol, if defined, indicates that the strtoull routine is\n *\tavailable to convert strings to unsigned long longs.\n */\n/*#define HAS_STRTOULL\t\t/ **/\n\n/* HAS_STRTOUQ:\n *\tThis symbol, if defined, indicates that the strtouq routine is\n *\tavailable to convert strings to unsigned long longs (quads).\n */\n/*#define HAS_STRTOUQ\t\t/ **/\n\n/* HAS_SYSCALL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the syscall() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int syscall(int,  ...);\n *\t\textern int syscall(long, ...);\n */\n/*#define\tHAS_SYSCALL_PROTO\t/ **/\n\n/* HAS_TELLDIR_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the telldir() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern long telldir(DIR*);\n */\n#define\tHAS_TELLDIR_PROTO\t/**/\n\n/* HAS_TGAMMA:\n *\tThis symbol, if defined, indicates that the tgamma routine is\n *\tavailable to do the gamma function. See also HAS_LGAMMA.\n */\n/*#define HAS_TGAMMA\t\t/ **/\n\n/* HAS_CTIME64:\n *\tThis symbol, if defined, indicates that the ctime64 () routine is\n *\tavailable to do the 64bit variant of ctime ()\n */\n/* HAS_LOCALTIME64:\n *\tThis symbol, if defined, indicates that the localtime64 () routine is\n *\tavailable to do the 64bit variant of localtime ()\n */\n/* HAS_GMTIME64:\n *\tThis symbol, if defined, indicates that the gmtime64 () routine is\n *\tavailable to do the 64bit variant of gmtime ()\n */\n/* HAS_MKTIME64:\n *\tThis symbol, if defined, indicates that the mktime64 () routine is\n *\tavailable to do the 64bit variant of mktime ()\n */\n/* HAS_DIFFTIME64:\n *\tThis symbol, if defined, indicates that the difftime64 () routine is\n *\tavailable to do the 64bit variant of difftime ()\n */\n/* HAS_ASCTIME64:\n *\tThis symbol, if defined, indicates that the asctime64 () routine is\n *\tavailable to do the 64bit variant of asctime ()\n */\n/*#define\tHAS_CTIME64\t\t/ **/\n/*#define\tHAS_LOCALTIME64\t\t/ **/\n/*#define\tHAS_GMTIME64\t\t/ **/\n/*#define\tHAS_MKTIME64\t\t/ **/\n/*#define\tHAS_DIFFTIME64\t\t/ **/\n/*#define\tHAS_ASCTIME64\t\t/ **/\n\n/* HAS_TIMEGM:\n *\tThis symbol, if defined, indicates that the timegm routine is\n *\tavailable to do the opposite of gmtime ()\n */\n/*#define HAS_TIMEGM\t\t/ **/\n\n/* HAS_TRUNC:\n *\tThis symbol, if defined, indicates that the trunc routine is\n *\tavailable to round doubles towards zero.\n */\n/*#define HAS_TRUNC\t\t/ **/\n\n/* HAS_TRUNCL:\n *\tThis symbol, if defined, indicates that the truncl routine is\n *\tavailable. If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_TRUNCL\t\t/ **/\n\n/* U32_ALIGNMENT_REQUIRED:\n *\tThis symbol, if defined, indicates that you must access\n *\tcharacter data through U32-aligned pointers.\n */\n#ifndef U32_ALIGNMENT_REQUIRED\n#define U32_ALIGNMENT_REQUIRED\t/**/\n#endif\n\n/* HAS_UALARM:\n *\tThis symbol, if defined, indicates that the ualarm routine is\n *\tavailable to do alarms with microsecond granularity.\n */\n/*#define HAS_UALARM\t\t/ **/\n\n/* HAS_UNORDERED:\n *\tThis symbol, if defined, indicates that the unordered routine is\n *\tavailable to check whether two doubles are unordered\n *\t(effectively: whether either of them is NaN)\n */\n/*#define HAS_UNORDERED\t\t/ **/\n\n/* HAS_UNSETENV:\n *\tThis symbol, if defined, indicates that the unsetenv () routine is\n *\tavailable for use.\n */\n/*#define HAS_UNSETENV\t\t/ **/\n\n/* HAS_USLEEP_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the usleep() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int usleep(useconds_t);\n */\n/*#define\tHAS_USLEEP_PROTO\t/ **/\n\n/* HAS_USTAT:\n *\tThis symbol, if defined, indicates that the ustat system call is\n *\tavailable to query file system statistics by dev_t.\n */\n/*#define HAS_USTAT\t\t/ **/\n\n/* HAS_WCSCMP:\n *\tThis symbol, if defined, indicates that the wcscmp routine is\n *\tavailable to compare two wide character strings.\n */\n#define HAS_WCSCMP\t/**/\n\n/* HAS_WCSXFRM:\n *\tThis symbol, if defined, indicates that the wcsxfrm routine is\n *\tavailable to tranform a wide character string for wcscmp().\n */\n#define HAS_WCSXFRM\t/**/\n\n/* HAS_WRITEV:\n *\tThis symbol, if defined, indicates that the writev routine is\n *\tavailable to do scatter writes.\n */\n/*#define HAS_WRITEV\t\t/ **/\n\n/* DEFAULT_INC_EXCLUDES_DOT:\n *\tThis symbol, if defined, removes the legacy default behavior of\n *\tincluding '.' at the end of @INC.\n */\n#define DEFAULT_INC_EXCLUDES_DOT\t/**/\n\n/* USE_DYNAMIC_LOADING:\n *\tThis symbol, if defined, indicates that dynamic loading of\n *\tsome sort is available.\n */\n#define USE_DYNAMIC_LOADING\t\t/**/\n\n/* FFLUSH_NULL:\n *\tThis symbol, if defined, tells that fflush(NULL) correctly\n *\tflushes all pending stdio output without side effects. In\n *\tparticular, on some platforms calling fflush(NULL) *still*\n *\tcorrupts STDIN if it is a pipe.\n */\n/* FFLUSH_ALL:\n *\tThis symbol, if defined, tells that to flush\n *\tall pending stdio output one must loop through all\n *\tthe stdio file handles stored in an array and fflush them.\n *\tNote that if fflushNULL is defined, fflushall will not\n *\teven be probed for and will be left undefined.\n */\n#define\tFFLUSH_NULL \t\t/**/\n/*#define\tFFLUSH_ALL \t\t/ **/\n\n/* I_BFD:\n *\tThis symbol, if defined, indicates that <bfd.h> exists and\n *\tcan be included.\n */\n/*#define\tI_BFD\t\t/ **/\n\n/* I_CRYPT:\n *\tThis symbol, if defined, indicates that <crypt.h> exists and\n *\tshould be included.\n */\n/*#define\tI_CRYPT\t\t/ **/\n\n/* DB_Prefix_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is u_int32_t.\n */\n/* DB_Hash_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is size_t.\n */\n/* DB_VERSION_MAJOR_CFG:\n *\tThis symbol, if defined, defines the major version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n */\n/* DB_VERSION_MINOR_CFG:\n *\tThis symbol, if defined, defines the minor version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n/* DB_VERSION_PATCH_CFG:\n *\tThis symbol, if defined, defines the patch version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n#define DB_Hash_t\tint\t\t/**/\n#define DB_Prefix_t\tint  \t/**/\n#define DB_VERSION_MAJOR_CFG\t0  \t/**/\n#define DB_VERSION_MINOR_CFG\t0  \t/**/\n#define DB_VERSION_PATCH_CFG\t0  \t/**/\n\n/* I_FENV:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <fenv.h> to get the floating point environment definitions.\n */\n/*#define I_FENV\t\t/ **/\n\n/* I_FP:\n *\tThis symbol, if defined, indicates that <fp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP\t\t/ **/\n\n/* I_FP_CLASS:\n *\tThis symbol, if defined, indicates that <fp_class.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP_CLASS\t\t/ **/\n\n/* I_IEEEFP:\n *\tThis symbol, if defined, indicates that <ieeefp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_IEEEFP\t\t/ **/\n\n/* I_INTTYPES:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <inttypes.h>.\n */\n/*#define   I_INTTYPES                / **/\n\n/* I_LANGINFO:\n *\tThis symbol, if defined, indicates that <langinfo.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LANGINFO\t\t/ **/\n\n/* I_LIBUTIL:\n *\tThis symbol, if defined, indicates that <libutil.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LIBUTIL\t\t/ **/\n\n/* I_MALLOCMALLOC:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <malloc/malloc.h>.\n */\n/*#define I_MALLOCMALLOC\t\t/ **/\n\n/* I_MNTENT:\n *\tThis symbol, if defined, indicates that <mntent.h> exists and\n *\tshould be included.\n */\n/*#define\tI_MNTENT\t\t/ **/\n\n/* I_NETINET_TCP:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <netinet/tcp.h>.\n */\n/*#define   I_NETINET_TCP                / **/\n\n/* I_POLL:\n *\tThis symbol, if defined, indicates that <poll.h> exists and\n *\tshould be included. (see also HAS_POLL)\n */\n/*#define\tI_POLL\t\t/ **/\n\n/* I_PROT:\n *\tThis symbol, if defined, indicates that <prot.h> exists and\n *\tshould be included.\n */\n/*#define\tI_PROT\t\t/ **/\n\n/* I_QUADMATH:\n *\tThis symbol, if defined, indicates that <quadmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_QUADMATH\t\t/ **/\n\n/* I_SHADOW:\n *\tThis symbol, if defined, indicates that <shadow.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SHADOW\t\t/ **/\n\n/* I_SOCKS:\n *\tThis symbol, if defined, indicates that <socks.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SOCKS\t\t/ **/\n\n/* I_STDBOOL:\n *\tThis symbol, if defined, indicates that <stdbool.h> exists and\n *\tcan be included.\n */\n/*#define\tI_STDBOOL\t\t/ **/\n\n/* I_STDINT:\n *\tThis symbol, if defined, indicates that <stdint.h> exists and\n *\tshould be included.\n */\n/*#define I_STDINT\t\t/ **/\n\n/* I_SUNMATH:\n *\tThis symbol, if defined, indicates that <sunmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SUNMATH\t\t/ **/\n\n/* I_SYSLOG:\n *\tThis symbol, if defined, indicates that <syslog.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSLOG\t\t/ **/\n\n/* I_SYSMODE:\n *\tThis symbol, if defined, indicates that <sys/mode.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSMODE\t\t/ **/\n\n/* I_SYS_MOUNT:\n *\tThis symbol, if defined, indicates that <sys/mount.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_MOUNT\t\t/ **/\n\n/* I_SYS_STATFS:\n *\tThis symbol, if defined, indicates that <sys/statfs.h> exists.\n */\n/*#define\tI_SYS_STATFS\t\t/ **/\n\n/* I_SYS_STATVFS:\n *\tThis symbol, if defined, indicates that <sys/statvfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_STATVFS\t\t/ **/\n\n/* I_SYSUTSNAME:\n *\tThis symbol, if defined, indicates that <sys/utsname.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUTSNAME\t\t/ **/\n\n/* I_SYS_VFS:\n *\tThis symbol, if defined, indicates that <sys/vfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_VFS\t\t/ **/\n\n/* I_USTAT:\n *\tThis symbol, if defined, indicates that <ustat.h> exists and\n *\tshould be included.\n */\n/*#define\tI_USTAT\t\t/ **/\n\n/* DOUBLEINFBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes for the double precision infinity.\n */\n/* DOUBLENANBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes (0xHH) for the double precision not-a-number.\n */\n/* LONGDBLINFBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes for the long double precision infinity.\n */\n/* LONGDBLNANBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes (0xHH) for the long double precision not-a-number.\n */\n#define DOUBLEINFBYTES  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f\t\t/**/\n#define DOUBLENANBYTES  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f\t\t/**/\n#define LONGDBLINFBYTES 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f\t\t/**/\n#define LONGDBLNANBYTES 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f\t\t/**/\n\n/* PERL_PRIfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for output.\n */\n/* PERL_PRIgldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'g') for output.\n */\n/* PERL_PRIeldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'e') for output.\n */\n/* PERL_SCNfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for input.\n */\n/* DOUBLEKIND:\n *\tDOUBLEKIND will be one of\n *\tDOUBLE_IS_IEEE_754_32_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_32_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_LE_BE\n *\tDOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_BE_LE\n *\tDOUBLE_IS_VAX_F_FLOAT\n *\tDOUBLE_IS_VAX_D_FLOAT\n *\tDOUBLE_IS_VAX_G_FLOAT\n *\tDOUBLE_IS_IBM_SINGLE_32_BIT\n *\tDOUBLE_IS_IBM_DOUBLE_64_BIT\n *\tDOUBLE_IS_CRAY_SINGLE_64_BIT\n *\tDOUBLE_IS_UNKNOWN_FORMAT\n */\n/* DOUBLE_HAS_INF:\n *\tThis symbol, if defined, indicates that the double has\n *\tthe infinity.\n */\n/* DOUBLE_HAS_NAN:\n *\tThis symbol, if defined, indicates that the double has\n *\tthe not-a-number.\n */\n/* DOUBLE_HAS_NEGATIVE_ZERO:\n *\tThis symbol, if defined, indicates that the double has\n *\tthe negative_zero.\n */\n/* DOUBLE_HAS_SUBNORMALS:\n *\tThis symbol, if defined, indicates that the double has\n *\tthe subnormals (denormals).\n */\n/* DOUBLE_STYLE_CRAY:\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit CRAY mainframe format.\n */\n/* DOUBLE_STYLE_IBM:\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit IBM mainframe format.\n */\n/* DOUBLE_STYLE_IEEE:\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit IEEE 754.\n */\n/* DOUBLE_STYLE_VAX:\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit VAX format D or G.\n */\n#define DOUBLEKIND 3\t\t/**/\n#define DOUBLE_IS_IEEE_754_32_BIT_LITTLE_ENDIAN\t1\n#define DOUBLE_IS_IEEE_754_32_BIT_BIG_ENDIAN\t2\n#define DOUBLE_IS_IEEE_754_64_BIT_LITTLE_ENDIAN\t3\n#define DOUBLE_IS_IEEE_754_64_BIT_BIG_ENDIAN\t4\n#define DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\t5\n#define DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\t6\n#define DOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_LE_BE\t7\n#define DOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_BE_LE\t8\n#define DOUBLE_IS_VAX_F_FLOAT\t9\n#define DOUBLE_IS_VAX_D_FLOAT\t10\n#define DOUBLE_IS_VAX_G_FLOAT\t11\n#define DOUBLE_IS_IBM_SINGLE_32_BIT\t12\n#define DOUBLE_IS_IBM_DOUBLE_64_BIT\t13\n#define DOUBLE_IS_CRAY_SINGLE_64_BIT\t14\n#define DOUBLE_IS_UNKNOWN_FORMAT\t\t-1\n/*#define PERL_PRIfldbl\t\"f\"\t/ **/\n/*#define PERL_PRIgldbl\t\"g\"\t/ **/\n/*#define PERL_PRIeldbl\t\"e\"\t/ **/\n/*#define PERL_SCNfldbl\t\"f\"\t/ **/\n#define DOUBLE_HAS_INF\n#define DOUBLE_HAS_NAN\n#define DOUBLE_HAS_NEGATIVE_ZERO\n#define DOUBLE_HAS_SUBNORMALS\n#undef DOUBLE_STYLE_CRAY\n#undef DOUBLE_STYLE_IBM\n#define DOUBLE_STYLE_IEEE\n#undef DOUBLE_STYLE_VAX\n\n/* DOUBLEMANTBITS:\n *\tThis symbol, if defined, tells how many mantissa bits\n *\tthere are in double precision floating point format.\n *\tNote that this is usually DBL_MANT_DIG minus one, since\n *\twith the standard IEEE 754 formats DBL_MANT_DIG includes\n *\tthe implicit bit, which doesn't really exist.\n */\n/* LONGDBLMANTBITS:\n *\tThis symbol, if defined, tells how many mantissa bits\n *\tthere are in long double precision floating point format.\n *\tNote that this can be LDBL_MANT_DIG minus one,\n *\tsince LDBL_MANT_DIG can include the IEEE 754 implicit bit.\n *\tThe common x86-style 80-bit long double does not have\n *\tan implicit bit.\n */\n/* NVMANTBITS:\n *\tThis symbol, if defined, tells how many mantissa bits\n *\t(not including implicit bit) there are in a Perl NV.\n *\tThis depends on which floating point type was chosen.\n */\n#define DOUBLEMANTBITS  52\n#define LONGDBLMANTBITS 52\n#define NVMANTBITS      52\n\n/* NEED_VA_COPY:\n *\tThis symbol, if defined, indicates that the system stores\n *\tthe variable argument list datatype, va_list, in a format\n *\tthat cannot be copied by simple assignment, so that some\n *\tother means must be used when copying is required.\n *\tAs such systems vary in their provision (or non-provision)\n *\tof copying mechanisms, handy.h defines a platform-\n *\tindependent macro, Perl_va_copy(src, dst), to do the job.\n */\n/*#define\tNEED_VA_COPY\t\t/ **/\n\n/* IVTYPE:\n *\tThis symbol defines the C type used for Perl's IV.\n */\n/* UVTYPE:\n *\tThis symbol defines the C type used for Perl's UV.\n */\n/* I8TYPE:\n *\tThis symbol defines the C type used for Perl's I8.\n */\n/* U8TYPE:\n *\tThis symbol defines the C type used for Perl's U8.\n */\n/* I16TYPE:\n *\tThis symbol defines the C type used for Perl's I16.\n */\n/* U16TYPE:\n *\tThis symbol defines the C type used for Perl's U16.\n */\n/* I32TYPE:\n *\tThis symbol defines the C type used for Perl's I32.\n */\n/* U32TYPE:\n *\tThis symbol defines the C type used for Perl's U32.\n */\n/* I64TYPE:\n *\tThis symbol defines the C type used for Perl's I64.\n */\n/* U64TYPE:\n *\tThis symbol defines the C type used for Perl's U64.\n */\n/* NVTYPE:\n *\tThis symbol defines the C type used for Perl's NV.\n */\n/* IVSIZE:\n *\tThis symbol contains the sizeof(IV).\n */\n/* UVSIZE:\n *\tThis symbol contains the sizeof(UV).\n */\n/* I8SIZE:\n *\tThis symbol contains the sizeof(I8).\n */\n/* U8SIZE:\n *\tThis symbol contains the sizeof(U8).\n */\n/* I16SIZE:\n *\tThis symbol contains the sizeof(I16).\n */\n/* U16SIZE:\n *\tThis symbol contains the sizeof(U16).\n */\n/* I32SIZE:\n *\tThis symbol contains the sizeof(I32).\n */\n/* U32SIZE:\n *\tThis symbol contains the sizeof(U32).\n */\n/* I64SIZE:\n *\tThis symbol contains the sizeof(I64).\n */\n/* U64SIZE:\n *\tThis symbol contains the sizeof(U64).\n */\n/* NVSIZE:\n *\tThis symbol contains the sizeof(NV).\n *\tNote that some floating point formats have unused bytes.\n *\tThe most notable example is the x86* 80-bit extended precision\n *\twhich comes in byte sizes of 12 and 16 (for 32 and 64 bit\n *\tplatforms, respectively), but which only uses 10 bytes.\n *\tPerl compiled with -Duselongdouble on x86* is like this.\n */\n/* NV_PRESERVES_UV:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tcan preserve all the bits of a variable of type UVTYPE.\n */\n/* NV_PRESERVES_UV_BITS:\n *\tThis symbol contains the number of bits a variable of type NVTYPE\n *\tcan preserve of a variable of type UVTYPE.\n */\n/* NV_OVERFLOWS_INTEGERS_AT:\n *\tThis symbol gives the largest integer value that NVs can hold. This\n *\tvalue + 1.0 cannot be stored accurately. It is expressed as constant\n *\tfloating point expression to reduce the chance of decimal/binary\n *\tconversion issues. If it can not be determined, the value 0 is given.\n */\n/* NV_ZERO_IS_ALLBITS_ZERO:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tstores 0.0 in memory as all bits zero.\n */\n#define\tIVTYPE\t\tlong\t\t/**/\n#define\tUVTYPE\t\tunsigned long\t\t/**/\n#define\tI8TYPE\t\tchar\t\t/**/\n#define\tU8TYPE\t\tunsigned char\t\t/**/\n#define\tI16TYPE\t\tshort\t/**/\n#define\tU16TYPE\t\tunsigned short\t/**/\n#define\tI32TYPE\t\tlong\t/**/\n#define\tU32TYPE\t\tunsigned long\t/**/\n#ifdef HAS_QUAD\n#define\tI64TYPE\t\t__int64\t/**/\n#define\tU64TYPE\t\tunsigned __int64\t/**/\n#endif\n#define\tNVTYPE\t\tdouble\t\t/**/\n#define\tIVSIZE\t\t4\t\t/**/\n#define\tUVSIZE\t\t4\t\t/**/\n#define\tI8SIZE\t\t1\t\t/**/\n#define\tU8SIZE\t\t1\t\t/**/\n#define\tI16SIZE\t\t2\t/**/\n#define\tU16SIZE\t\t2\t/**/\n#define\tI32SIZE\t\t4\t/**/\n#define\tU32SIZE\t\t4\t/**/\n#ifdef HAS_QUAD\n#define\tI64SIZE\t\t8\t/**/\n#define\tU64SIZE\t\t8\t/**/\n#endif\n#define\tNVSIZE\t\t8\t\t/**/\n#define\tNV_PRESERVES_UV\n#define\tNV_PRESERVES_UV_BITS\t32\n#define\tNV_OVERFLOWS_INTEGERS_AT\t256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0\n#define\tNV_ZERO_IS_ALLBITS_ZERO\n#if UVSIZE == 8\n#   ifdef BYTEORDER\n#       if BYTEORDER == 0x1234\n#           undef BYTEORDER\n#           define BYTEORDER 0x12345678\n#       else\n#           if BYTEORDER == 0x4321\n#               undef BYTEORDER\n#               define BYTEORDER 0x87654321\n#           endif\n#       endif\n#   endif\n#endif\n\n/* IVdf:\n *\tThis symbol defines the format string used for printing a Perl IV\n *\tas a signed decimal integer.\n */\n/* UVuf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned decimal integer.\n */\n/* UVof:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned octal integer.\n */\n/* UVxf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in lowercase abcdef.\n */\n/* UVXf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in uppercase ABCDEF.\n */\n/* NVef:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %e-ish floating point format.\n */\n/* NVff:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %f-ish floating point format.\n */\n/* NVgf:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %g-ish floating point format.\n */\n#define\tIVdf\t\t\"ld\"\t\t/**/\n#define\tUVuf\t\t\"lu\"\t\t/**/\n#define\tUVof\t\t\"lo\"\t\t/**/\n#define\tUVxf\t\t\"lx\"\t\t/**/\n#define\tUVXf\t\t\"lX\"\t\t/**/\n#define\tNVef\t\t\"e\"\t\t/**/\n#define\tNVff\t\t\"f\"\t\t/**/\n#define\tNVgf\t\t\"g\"\t\t/**/\n\n/* SELECT_MIN_BITS:\n *\tThis symbol holds the minimum number of bits operated by select.\n *\tThat is, if you do select(n, ...), how many bits at least will be\n *\tcleared in the masks if some activity is detected.  Usually this\n *\tis either n or 32*ceil(n/32), especially many little-endians do\n *\tthe latter.  This is only useful if you have select(), naturally.\n */\n#define SELECT_MIN_BITS \t32\t/**/\n\n/* ST_INO_SIZE:\n *\tThis variable contains the size of struct stat's st_ino in bytes.\n */\n/* ST_INO_SIGN:\n *\tThis symbol holds the signedness of struct stat's st_ino.\n *\t1 for unsigned, -1 for signed.\n */\n#define ST_INO_SIGN 1\t/* st_ino sign */\n#define ST_INO_SIZE 4\t/* st_ino size */\n\n/* STARTPERL:\n *\tThis variable contains the string to put in front of a perl\n *\tscript to make sure (one hopes) that it runs with perl and not\n *\tsome shell.\n */\n#define STARTPERL \"#!perl\"\t\t/**/\n\n/* HAS_STDIO_STREAM_ARRAY:\n *\tThis symbol, if defined, tells that there is an array\n *\tholding the stdio streams.\n */\n/* STDIO_STREAM_ARRAY:\n *\tThis symbol tells the name of the array holding the stdio streams.\n *\tUsual values include _iob, __iob, and __sF.\n */\n/*#define\tHAS_STDIO_STREAM_ARRAY\t/ **/\n#ifdef HAS_STDIO_STREAM_ARRAY\n#define STDIO_STREAM_ARRAY\t\n#endif\n\n/* GMTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* GMTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n#define GMTIME_MAX\t\t2147483647\t/**/\n#define GMTIME_MIN\t\t0\t/**/\n#define LOCALTIME_MAX\t2147483647\t/**/\n#define LOCALTIME_MIN\t0\t/**/\n\n/* USE_64_BIT_INT:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be employed (be they 32 or 64 bits).  The minimal possible\n *\t64-bitness is used, just enough to get 64-bit integers into Perl.\n *\tThis may mean using for example \"long longs\", while your memory\n *\tmay still be limited to 2 gigabytes.\n */\n/* USE_64_BIT_ALL:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be used (be they 32 or 64 bits).  The maximal possible\n *\t64-bitness is employed: LP64 or ILP64, meaning that you will\n *\tbe able to use more than 2 gigabytes of memory.  This mode is\n *\teven more binary incompatible than USE_64_BIT_INT. You may not\n *\tbe able to run the resulting executable in a 32-bit CPU at all or\n *\tyou may need at least to reboot your OS to 64-bit mode.\n */\n#ifndef USE_64_BIT_INT\n/*#define\tUSE_64_BIT_INT\t\t/ **/\n#endif\n#ifndef USE_64_BIT_ALL\n/*#define\tUSE_64_BIT_ALL\t\t/ **/\n#endif\n\n/* USE_CBACKTRACE:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for backtrace.\n */\n/*#define USE_CBACKTRACE\t\t/ **/\n\n/* USE_DTRACE:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for DTrace.\n */\n/*#define USE_DTRACE\t\t/ **/\n\n/* USE_FAST_STDIO:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use 'fast stdio'.\n *\tDefaults to define in Perls 5.8 and earlier, to undef later.\n */\n#ifndef USE_FAST_STDIO\n/*#define\tUSE_FAST_STDIO\t\t/ **/\n#endif\n\n/* USE_KERN_PROC_PATHNAME:\n *\tThis symbol, if defined, indicates that we can use sysctl with\n *\tKERN_PROC_PATHNAME to get a full path for the executable, and hence\n * \tconvert $^X to an absolute path.\n */\n/*#define USE_KERN_PROC_PATHNAME\t/ **/\n\n/* USE_LARGE_FILES:\n *\tThis symbol, if defined, indicates that large file support\n *\tshould be used when available.\n */\n#ifndef USE_LARGE_FILES\n/*#define\tUSE_LARGE_FILES\t\t/ **/\n#endif\n\n/* USE_LONG_DOUBLE:\n *\tThis symbol, if defined, indicates that long doubles should\n *\tbe used when available.\n */\n#ifndef USE_LONG_DOUBLE\n/*#define\tUSE_LONG_DOUBLE\t\t/ **/\n#endif\n\n/* USE_MORE_BITS:\n *\tThis symbol, if defined, indicates that 64-bit interfaces and\n *\tlong doubles should be used when available.\n */\n#ifndef USE_MORE_BITS\n/*#define\tUSE_MORE_BITS\t\t/ **/\n#endif\n\n/* MULTIPLICITY:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use multiplicity.\n */\n#ifndef MULTIPLICITY\n/*#define\tMULTIPLICITY\t\t/ **/\n#endif\n\n/* USE_NSGETEXECUTABLEPATH:\n *\tThis symbol, if defined, indicates that we can use _NSGetExecutablePath\n *\tand realpath to get a full path for the executable, and hence convert\n *\t$^X to an absolute path.\n */\n/*#define USE_NSGETEXECUTABLEPATH\t/ **/\n\n/* USE_PERLIO:\n *\tThis symbol, if defined, indicates that the PerlIO abstraction should\n *\tbe used throughout.  If not defined, stdio should be\n *\tused in a fully backward compatible manner.\n */\n#ifndef USE_PERLIO\n#define\tUSE_PERLIO\t\t/**/\n#endif\n\n/* USE_QUADMATH:\n *\tThis symbol, if defined, indicates that the quadmath library should\n *\tbe used when available.\n */\n#ifndef USE_QUADMATH\n/*#define\tUSE_QUADMATH\t\t/ **/\n#endif\n\n/* USE_SOCKS:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use socks.\n */\n#ifndef USE_SOCKS\n/*#define\tUSE_SOCKS\t\t/ **/\n#endif\n\n/* HAS_DRAND48_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the drand48() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern double drand48(void);\n */\n/*#define\tHAS_DRAND48_PROTO\t/ **/\n\n/* HAS_GETHOST_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for gethostent(), gethostbyname(), and\n *\tgethostbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETHOST_PROTOS\t/**/\n\n/* HAS_GETNET_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getnetent(), getnetbyname(), and\n *\tgetnetbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETNET_PROTOS\t/ **/\n\n/* HAS_GETPROTO_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getprotoent(), getprotobyname(), and\n *\tgetprotobyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETPROTO_PROTOS\t/**/\n\n/* HAS_GETSERV_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getservent(), getservbyname(), and\n *\tgetservbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETSERV_PROTOS\t/**/\n\n/* HAS_LSEEK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the lseek() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern off_t lseek(int, off_t, int);\n */\n#define\tHAS_LSEEK_PROTO\t/**/\n\n/* Netdb_host_t:\n *\tThis symbol holds the type used for the 1st argument\n *\tto gethostbyaddr().\n */\n/* Netdb_hlen_t:\n *\tThis symbol holds the type used for the 2nd argument\n *\tto gethostbyaddr().\n */\n/* Netdb_name_t:\n *\tThis symbol holds the type used for the argument to\n *\tgethostbyname().\n */\n/* Netdb_net_t:\n *\tThis symbol holds the type used for the 1st argument to\n *\tgetnetbyaddr().\n */\n#define Netdb_host_t\t\tchar * /**/\n#define Netdb_hlen_t\t\tint /**/\n#define Netdb_name_t\t\tchar * /**/\n#define Netdb_net_t\t\tlong /**/\n\n/* Select_fd_set_t:\n *\tThis symbol holds the type used for the 2nd, 3rd, and 4th\n *\targuments to select.  Usually, this is 'fd_set *', if HAS_FD_SET\n *\tis defined, and 'int *' otherwise.  This is only useful if you\n *\thave select(), of course.\n */\n#define Select_fd_set_t \tPerl_fd_set *\t/**/\n\n/* Sock_size_t:\n *\tThis symbol holds the type used for the size argument of\n *\tvarious socket calls (just the base type, not the pointer-to).\n */\n#define Sock_size_t\t\tint /**/\n\n/* ARCHNAME:\n *\tThis symbol holds a string representing the architecture name.\n *\tIt may be used to construct an architecture-dependant pathname\n *\twhere library files may be held under a private library, for\n *\tinstance.\n */\n#define ARCHNAME \"MSWin32-x86-perlio\"\t\t/**/\n\n/* HAS_ASCTIME_R:\n *\tThis symbol, if defined, indicates that the asctime_r routine\n *\tis available to asctime re-entrantly.\n */\n/* ASCTIME_R_PROTO:\n *\tThis symbol encodes the prototype of asctime_r.\n *\tIt is zero if d_asctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_asctime_r\n *\tis defined.\n */\n/*#define HAS_ASCTIME_R\t   / **/\n#define ASCTIME_R_PROTO 0\t   /**/\n\n/* HAS_CRYPT_R:\n *\tThis symbol, if defined, indicates that the crypt_r routine\n *\tis available to crypt re-entrantly.\n */\n/* CRYPT_R_PROTO:\n *\tThis symbol encodes the prototype of crypt_r.\n *\tIt is zero if d_crypt_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_crypt_r\n *\tis defined.\n */\n/*#define HAS_CRYPT_R\t   / **/\n#define CRYPT_R_PROTO 0\t   /**/\n\n/* HAS_CTERMID_R:\n *\tThis symbol, if defined, indicates that the ctermid_r routine\n *\tis available to ctermid re-entrantly.\n */\n/* CTERMID_R_PROTO:\n *\tThis symbol encodes the prototype of ctermid_r.\n *\tIt is zero if d_ctermid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctermid_r\n *\tis defined.\n */\n/*#define HAS_CTERMID_R\t   / **/\n#define CTERMID_R_PROTO 0\t   /**/\n\n/* HAS_CTIME_R:\n *\tThis symbol, if defined, indicates that the ctime_r routine\n *\tis available to ctime re-entrantly.\n */\n/* CTIME_R_PROTO:\n *\tThis symbol encodes the prototype of ctime_r.\n *\tIt is zero if d_ctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctime_r\n *\tis defined.\n */\n/*#define HAS_CTIME_R\t   / **/\n#define CTIME_R_PROTO 0\t   /**/\n\n/* HAS_DRAND48_R:\n *\tThis symbol, if defined, indicates that the drand48_r routine\n *\tis available to drand48 re-entrantly.\n */\n/* DRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of drand48_r.\n *\tIt is zero if d_drand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_drand48_r\n *\tis defined.\n */\n/*#define HAS_DRAND48_R\t   / **/\n#define DRAND48_R_PROTO 0\t   /**/\n\n/* HAS_ENDGRENT_R:\n *\tThis symbol, if defined, indicates that the endgrent_r routine\n *\tis available to endgrent re-entrantly.\n */\n/* ENDGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of endgrent_r.\n *\tIt is zero if d_endgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endgrent_r\n *\tis defined.\n */\n/*#define HAS_ENDGRENT_R\t   / **/\n#define ENDGRENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDHOSTENT_R:\n *\tThis symbol, if defined, indicates that the endhostent_r routine\n *\tis available to endhostent re-entrantly.\n */\n/* ENDHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of endhostent_r.\n *\tIt is zero if d_endhostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endhostent_r\n *\tis defined.\n */\n/*#define HAS_ENDHOSTENT_R\t   / **/\n#define ENDHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDNETENT_R:\n *\tThis symbol, if defined, indicates that the endnetent_r routine\n *\tis available to endnetent re-entrantly.\n */\n/* ENDNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of endnetent_r.\n *\tIt is zero if d_endnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endnetent_r\n *\tis defined.\n */\n/*#define HAS_ENDNETENT_R\t   / **/\n#define ENDNETENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDPROTOENT_R:\n *\tThis symbol, if defined, indicates that the endprotoent_r routine\n *\tis available to endprotoent re-entrantly.\n */\n/* ENDPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of endprotoent_r.\n *\tIt is zero if d_endprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endprotoent_r\n *\tis defined.\n */\n/*#define HAS_ENDPROTOENT_R\t   / **/\n#define ENDPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDPWENT_R:\n *\tThis symbol, if defined, indicates that the endpwent_r routine\n *\tis available to endpwent re-entrantly.\n */\n/* ENDPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of endpwent_r.\n *\tIt is zero if d_endpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endpwent_r\n *\tis defined.\n */\n/*#define HAS_ENDPWENT_R\t   / **/\n#define ENDPWENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDSERVENT_R:\n *\tThis symbol, if defined, indicates that the endservent_r routine\n *\tis available to endservent re-entrantly.\n */\n/* ENDSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of endservent_r.\n *\tIt is zero if d_endservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endservent_r\n *\tis defined.\n */\n/*#define HAS_ENDSERVENT_R\t   / **/\n#define ENDSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_GETGRENT_R:\n *\tThis symbol, if defined, indicates that the getgrent_r routine\n *\tis available to getgrent re-entrantly.\n */\n/* GETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of getgrent_r.\n *\tIt is zero if d_getgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrent_r\n *\tis defined.\n */\n/*#define HAS_GETGRENT_R\t   / **/\n#define GETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_GETGRGID_R:\n *\tThis symbol, if defined, indicates that the getgrgid_r routine\n *\tis available to getgrgid re-entrantly.\n */\n/* GETGRGID_R_PROTO:\n *\tThis symbol encodes the prototype of getgrgid_r.\n *\tIt is zero if d_getgrgid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrgid_r\n *\tis defined.\n */\n/*#define HAS_GETGRGID_R\t   / **/\n#define GETGRGID_R_PROTO 0\t   /**/\n\n/* HAS_GETGRNAM_R:\n *\tThis symbol, if defined, indicates that the getgrnam_r routine\n *\tis available to getgrnam re-entrantly.\n */\n/* GETGRNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getgrnam_r.\n *\tIt is zero if d_getgrnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrnam_r\n *\tis defined.\n */\n/*#define HAS_GETGRNAM_R\t   / **/\n#define GETGRNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYADDR_R:\n *\tThis symbol, if defined, indicates that the gethostbyaddr_r routine\n *\tis available to gethostbyaddr re-entrantly.\n */\n/* GETHOSTBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyaddr_r.\n *\tIt is zero if d_gethostbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYADDR_R\t   / **/\n#define GETHOSTBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYNAME_R:\n *\tThis symbol, if defined, indicates that the gethostbyname_r routine\n *\tis available to gethostbyname re-entrantly.\n */\n/* GETHOSTBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyname_r.\n *\tIt is zero if d_gethostbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyname_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYNAME_R\t   / **/\n#define GETHOSTBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the gethostent_r routine\n *\tis available to gethostent re-entrantly.\n */\n/* GETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of gethostent_r.\n *\tIt is zero if d_gethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostent_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTENT_R\t   / **/\n#define GETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_GETLOGIN_R:\n *\tThis symbol, if defined, indicates that the getlogin_r routine\n *\tis available to getlogin re-entrantly.\n */\n/* GETLOGIN_R_PROTO:\n *\tThis symbol encodes the prototype of getlogin_r.\n *\tIt is zero if d_getlogin_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getlogin_r\n *\tis defined.\n */\n/*#define HAS_GETLOGIN_R\t   / **/\n#define GETLOGIN_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYADDR_R:\n *\tThis symbol, if defined, indicates that the getnetbyaddr_r routine\n *\tis available to getnetbyaddr re-entrantly.\n */\n/* GETNETBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyaddr_r.\n *\tIt is zero if d_getnetbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYADDR_R\t   / **/\n#define GETNETBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYNAME_R:\n *\tThis symbol, if defined, indicates that the getnetbyname_r routine\n *\tis available to getnetbyname re-entrantly.\n */\n/* GETNETBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyname_r.\n *\tIt is zero if d_getnetbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyname_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYNAME_R\t   / **/\n#define GETNETBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETNETENT_R:\n *\tThis symbol, if defined, indicates that the getnetent_r routine\n *\tis available to getnetent re-entrantly.\n */\n/* GETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of getnetent_r.\n *\tIt is zero if d_getnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetent_r\n *\tis defined.\n */\n/*#define HAS_GETNETENT_R\t   / **/\n#define GETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNAME_R:\n *\tThis symbol, if defined, indicates that the getprotobyname_r routine\n *\tis available to getprotobyname re-entrantly.\n */\n/* GETPROTOBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobyname_r.\n *\tIt is zero if d_getprotobyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobyname_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNAME_R\t   / **/\n#define GETPROTOBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNUMBER_R:\n *\tThis symbol, if defined, indicates that the getprotobynumber_r routine\n *\tis available to getprotobynumber re-entrantly.\n */\n/* GETPROTOBYNUMBER_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobynumber_r.\n *\tIt is zero if d_getprotobynumber_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobynumber_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNUMBER_R\t   / **/\n#define GETPROTOBYNUMBER_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the getprotoent_r routine\n *\tis available to getprotoent re-entrantly.\n */\n/* GETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of getprotoent_r.\n *\tIt is zero if d_getprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotoent_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOENT_R\t   / **/\n#define GETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPWENT_R:\n *\tThis symbol, if defined, indicates that the getpwent_r routine\n *\tis available to getpwent re-entrantly.\n */\n/* GETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of getpwent_r.\n *\tIt is zero if d_getpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwent_r\n *\tis defined.\n */\n/*#define HAS_GETPWENT_R\t   / **/\n#define GETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPWNAM_R:\n *\tThis symbol, if defined, indicates that the getpwnam_r routine\n *\tis available to getpwnam re-entrantly.\n */\n/* GETPWNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getpwnam_r.\n *\tIt is zero if d_getpwnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwnam_r\n *\tis defined.\n */\n/*#define HAS_GETPWNAM_R\t   / **/\n#define GETPWNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETPWUID_R:\n *\tThis symbol, if defined, indicates that the getpwuid_r routine\n *\tis available to getpwuid re-entrantly.\n */\n/* GETPWUID_R_PROTO:\n *\tThis symbol encodes the prototype of getpwuid_r.\n *\tIt is zero if d_getpwuid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwuid_r\n *\tis defined.\n */\n/*#define HAS_GETPWUID_R\t   / **/\n#define GETPWUID_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYNAME_R:\n *\tThis symbol, if defined, indicates that the getservbyname_r routine\n *\tis available to getservbyname re-entrantly.\n */\n/* GETSERVBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyname_r.\n *\tIt is zero if d_getservbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyname_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYNAME_R\t   / **/\n#define GETSERVBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYPORT_R:\n *\tThis symbol, if defined, indicates that the getservbyport_r routine\n *\tis available to getservbyport re-entrantly.\n */\n/* GETSERVBYPORT_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyport_r.\n *\tIt is zero if d_getservbyport_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyport_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYPORT_R\t   / **/\n#define GETSERVBYPORT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT_R:\n *\tThis symbol, if defined, indicates that the getservent_r routine\n *\tis available to getservent re-entrantly.\n */\n/* GETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of getservent_r.\n *\tIt is zero if d_getservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservent_r\n *\tis defined.\n */\n/*#define HAS_GETSERVENT_R\t   / **/\n#define GETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_GETSPNAM_R:\n *\tThis symbol, if defined, indicates that the getspnam_r routine\n *\tis available to getspnam re-entrantly.\n */\n/* GETSPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getspnam_r.\n *\tIt is zero if d_getspnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getspnam_r\n *\tis defined.\n */\n/*#define HAS_GETSPNAM_R\t   / **/\n#define GETSPNAM_R_PROTO 0\t   /**/\n\n/* HAS_GMTIME_R:\n *\tThis symbol, if defined, indicates that the gmtime_r routine\n *\tis available to gmtime re-entrantly.\n */\n/* GMTIME_R_PROTO:\n *\tThis symbol encodes the prototype of gmtime_r.\n *\tIt is zero if d_gmtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gmtime_r\n *\tis defined.\n */\n/*#define HAS_GMTIME_R\t   / **/\n#define GMTIME_R_PROTO 0\t   /**/\n\n/* HAS_LOCALTIME_R:\n *\tThis symbol, if defined, indicates that the localtime_r routine\n *\tis available to localtime re-entrantly.\n */\n/* LOCALTIME_R_NEEDS_TZSET:\n *\tMany libc's localtime_r implementations do not call tzset,\n *\tmaking them differ from localtime(), and making timezone\n *\tchanges using \\undef{TZ} without explicitly calling tzset\n *\timpossible. This symbol makes us call tzset before localtime_r\n */\n/*#define LOCALTIME_R_NEEDS_TZSET / **/\n#ifdef LOCALTIME_R_NEEDS_TZSET\n#define L_R_TZSET tzset(),\n#else\n#define L_R_TZSET\n#endif\n\n/* LOCALTIME_R_PROTO:\n *\tThis symbol encodes the prototype of localtime_r.\n *\tIt is zero if d_localtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_localtime_r\n *\tis defined.\n */\n/*#define HAS_LOCALTIME_R\t   / **/\n#define LOCALTIME_R_PROTO 0\t   /**/\n\n/* OLD_PTHREAD_CREATE_JOINABLE:\n *\tThis symbol, if defined, indicates how to create pthread\n *\tin joinable (aka undetached) state.  NOTE: not defined\n *\tif pthread.h already has defined PTHREAD_CREATE_JOINABLE\n *\t(the new version of the constant).\n *\tIf defined, known values are PTHREAD_CREATE_UNDETACHED\n *\tand __UNDETACHED.\n */\n/*#define OLD_PTHREAD_CREATE_JOINABLE  / **/\n\n/* HAS_PTHREAD_ATFORK:\n *\tThis symbol, if defined, indicates that the pthread_atfork routine\n *\tis available to setup fork handlers.\n */\n/*#define HAS_PTHREAD_ATFORK\t\t/ **/\n\n/* HAS_PTHREAD_YIELD:\n *\tThis symbol, if defined, indicates that the pthread_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/* SCHED_YIELD:\n *\tThis symbol defines the way to yield the execution of\n *\tthe current thread.  Known ways are sched_yield,\n *\tpthread_yield, and pthread_yield with NULL.\n */\n/* HAS_SCHED_YIELD:\n *\tThis symbol, if defined, indicates that the sched_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/*#define HAS_PTHREAD_YIELD\t/ **/\n#define SCHED_YIELD\t\t/**/\n/*#define HAS_SCHED_YIELD\t/ **/\n\n/* HAS_RANDOM_R:\n *\tThis symbol, if defined, indicates that the random_r routine\n *\tis available to random re-entrantly.\n */\n/* RANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of random_r.\n *\tIt is zero if d_random_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_random_r\n *\tis defined.\n */\n/*#define HAS_RANDOM_R\t   / **/\n#define RANDOM_R_PROTO 0\t   /**/\n\n/* HAS_READDIR64_R:\n *\tThis symbol, if defined, indicates that the readdir64_r routine\n *\tis available to readdir64 re-entrantly.\n */\n/* READDIR64_R_PROTO:\n *\tThis symbol encodes the prototype of readdir64_r.\n *\tIt is zero if d_readdir64_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir64_r\n *\tis defined.\n */\n/*#define HAS_READDIR64_R\t   / **/\n#define READDIR64_R_PROTO 0\t   /**/\n\n/* HAS_READDIR_R:\n *\tThis symbol, if defined, indicates that the readdir_r routine\n *\tis available to readdir re-entrantly.\n */\n/* READDIR_R_PROTO:\n *\tThis symbol encodes the prototype of readdir_r.\n *\tIt is zero if d_readdir_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir_r\n *\tis defined.\n */\n/*#define HAS_READDIR_R\t   / **/\n#define READDIR_R_PROTO 0\t   /**/\n\n/* HAS_SETGRENT_R:\n *\tThis symbol, if defined, indicates that the setgrent_r routine\n *\tis available to setgrent re-entrantly.\n */\n/* SETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of setgrent_r.\n *\tIt is zero if d_setgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setgrent_r\n *\tis defined.\n */\n/*#define HAS_SETGRENT_R\t   / **/\n#define SETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_SETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the sethostent_r routine\n *\tis available to sethostent re-entrantly.\n */\n/* SETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of sethostent_r.\n *\tIt is zero if d_sethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_sethostent_r\n *\tis defined.\n */\n/*#define HAS_SETHOSTENT_R\t   / **/\n#define SETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_SETLOCALE_R:\n *\tThis symbol, if defined, indicates that the setlocale_r routine\n *\tis available to setlocale re-entrantly.\n */\n/* SETLOCALE_R_PROTO:\n *\tThis symbol encodes the prototype of setlocale_r.\n *\tIt is zero if d_setlocale_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setlocale_r\n *\tis defined.\n */\n/*#define HAS_SETLOCALE_R\t   / **/\n#define SETLOCALE_R_PROTO 0\t   /**/\n\n/* HAS_SETNETENT_R:\n *\tThis symbol, if defined, indicates that the setnetent_r routine\n *\tis available to setnetent re-entrantly.\n */\n/* SETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of setnetent_r.\n *\tIt is zero if d_setnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setnetent_r\n *\tis defined.\n */\n/*#define HAS_SETNETENT_R\t   / **/\n#define SETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_SETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the setprotoent_r routine\n *\tis available to setprotoent re-entrantly.\n */\n/* SETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of setprotoent_r.\n *\tIt is zero if d_setprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setprotoent_r\n *\tis defined.\n */\n/*#define HAS_SETPROTOENT_R\t   / **/\n#define SETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_SETPWENT_R:\n *\tThis symbol, if defined, indicates that the setpwent_r routine\n *\tis available to setpwent re-entrantly.\n */\n/* SETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of setpwent_r.\n *\tIt is zero if d_setpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setpwent_r\n *\tis defined.\n */\n/*#define HAS_SETPWENT_R\t   / **/\n#define SETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_SETSERVENT_R:\n *\tThis symbol, if defined, indicates that the setservent_r routine\n *\tis available to setservent re-entrantly.\n */\n/* SETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of setservent_r.\n *\tIt is zero if d_setservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setservent_r\n *\tis defined.\n */\n/*#define HAS_SETSERVENT_R\t   / **/\n#define SETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_SRAND48_R:\n *\tThis symbol, if defined, indicates that the srand48_r routine\n *\tis available to srand48 re-entrantly.\n */\n/* SRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of srand48_r.\n *\tIt is zero if d_srand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srand48_r\n *\tis defined.\n */\n/*#define HAS_SRAND48_R\t   / **/\n#define SRAND48_R_PROTO 0\t   /**/\n\n/* HAS_SRANDOM_R:\n *\tThis symbol, if defined, indicates that the srandom_r routine\n *\tis available to srandom re-entrantly.\n */\n/* SRANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of srandom_r.\n *\tIt is zero if d_srandom_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srandom_r\n *\tis defined.\n */\n/*#define HAS_SRANDOM_R\t   / **/\n#define SRANDOM_R_PROTO 0\t   /**/\n\n/* HAS_STRERROR_R:\n *\tThis symbol, if defined, indicates that the strerror_r routine\n *\tis available to strerror re-entrantly.\n */\n/* STRERROR_R_PROTO:\n *\tThis symbol encodes the prototype of strerror_r.\n *\tIt is zero if d_strerror_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_strerror_r\n *\tis defined.\n */\n/*#define HAS_STRERROR_R\t   / **/\n#define STRERROR_R_PROTO 0\t   /**/\n\n/* HAS_TMPNAM_R:\n *\tThis symbol, if defined, indicates that the tmpnam_r routine\n *\tis available to tmpnam re-entrantly.\n */\n/* TMPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of tmpnam_r.\n *\tIt is zero if d_tmpnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_tmpnam_r\n *\tis defined.\n */\n/*#define HAS_TMPNAM_R\t   / **/\n#define TMPNAM_R_PROTO 0\t   /**/\n\n/* HAS_TTYNAME_R:\n *\tThis symbol, if defined, indicates that the ttyname_r routine\n *\tis available to ttyname re-entrantly.\n */\n/* TTYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of ttyname_r.\n *\tIt is zero if d_ttyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ttyname_r\n *\tis defined.\n */\n/*#define HAS_TTYNAME_R\t   / **/\n#define TTYNAME_R_PROTO 0\t   /**/\n\n/* I_MACH_CTHREADS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <mach/cthreads.h>.\n */\n/*#define   I_MACH_CTHREADS\t/ **/\n\n/* I_PTHREAD:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <pthread.h>.\n */\n/*#define   I_PTHREAD\t/ **/\n\n/* USE_ITHREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the interpreter-based threading implementation.\n */\n/* USE_5005THREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the 5.005-based threading implementation.\n *\tOnly valid up to 5.8.x.\n */\n/* OLD_PTHREADS_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use the old draft POSIX threads API.\n */\n/* USE_REENTRANT_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\ttry to use the various _r versions of library functions.\n *\tThis is extremely experimental.\n */\n/*#define\tUSE_5005THREADS\t\t/ **/\n/*#define\tUSE_ITHREADS\t\t/ **/\n#if defined(USE_5005THREADS) && !defined(USE_ITHREADS)\n#define\t\tUSE_THREADS\t\t/* until src is revised*/\n#endif\n/*#define\tOLD_PTHREADS_API\t\t/ **/\n/*#define\tUSE_REENTRANT_API\t/ **/\n\n/* HAS_TIME:\n *\tThis symbol, if defined, indicates that the time() routine exists.\n */\n/* Time_t:\n *\tThis symbol holds the type returned by time(). It can be long,\n *\tor time_t on BSD sites (in which case <sys/types.h> should be\n *\tincluded).\n */\n#define HAS_TIME\t\t/**/\n#define Time_t time_t\t\t/* Time type */\n\n/* HAS_TIMES:\n *\tThis symbol, if defined, indicates that the times() routine exists.\n *\tNote that this became obsolete on some systems (SUNOS), which now\n * use getrusage(). It may be necessary to include <sys/times.h>.\n */\n#define HAS_TIMES\t\t/**/\n\n/* Fpos_t:\n *\tThis symbol holds the type used to declare file positions in libc.\n *\tIt can be fpos_t, long, uint, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Fpos_t fpos_t\t\t/* File position type */\n\n/* Gid_t_f:\n *\tThis symbol defines the format string used for printing a Gid_t.\n */\n#define\tGid_t_f\t\t\"ld\"\t\t/**/\n\n/* Gid_t_sign:\n *\tThis symbol holds the signedness of a Gid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Gid_t_sign\t-1\t\t/* GID sign */\n\n/* Gid_t_size:\n *\tThis symbol holds the size of a Gid_t in bytes.\n */\n#define Gid_t_size 4\t\t/* GID size */\n\n/* Gid_t:\n *\tThis symbol holds the return type of getgid() and the type of\n *\targument to setrgid() and related functions.  Typically,\n *\tit is the type of group ids in the kernel. It can be int, ushort,\n *\tgid_t, etc... It may be necessary to include <sys/types.h> to get\n *\tany typedef'ed information.\n */\n#define Gid_t gid_t\t\t/* Type for getgid(), etc... */\n\n/* Off_t:\n *\tThis symbol holds the type used to declare offsets in the kernel.\n *\tIt can be int, long, off_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n/* LSEEKSIZE:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n/* Off_t_size:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n#define Off_t long\t\t/* <offset> type */\n#define LSEEKSIZE 4\t\t/* <offset> size */\n#define Off_t_size 4\t/* <offset> size */\n\n/* Mode_t:\n *\tThis symbol holds the type used to declare file modes\n *\tfor systems calls.  It is usually mode_t, but may be\n *\tint or unsigned short.  It may be necessary to include <sys/types.h>\n *\tto get any typedef'ed information.\n */\n#define Mode_t mode_t\t /* file mode parameter for system calls */\n\n/* Pid_t:\n *\tThis symbol holds the type used to declare process ids in the kernel.\n *\tIt can be int, uint, pid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Pid_t int\t\t/* PID type */\n\n/* Size_t_size:\n *\tThis symbol holds the size of a Size_t in bytes.\n */\n#define Size_t_size 4\t\t/**/\n\n/* Size_t:\n *\tThis symbol holds the type used to declare length parameters\n *\tfor string functions.  It is usually size_t, but may be\n *\tunsigned long, int, etc.  It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Size_t size_t\t /* length parameter for string functions */\n\n/* Uid_t_f:\n *\tThis symbol defines the format string used for printing a Uid_t.\n */\n#define\tUid_t_f\t\t\"ld\"\t\t/**/\n\n/* Uid_t_sign:\n *\tThis symbol holds the signedness of a Uid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Uid_t_sign\t-1\t\t/* UID sign */\n\n/* Uid_t_size:\n *\tThis symbol holds the size of a Uid_t in bytes.\n */\n#define Uid_t_size 4\t\t/* UID size */\n\n/* Uid_t:\n *\tThis symbol holds the type used to declare user ids in the kernel.\n *\tIt can be int, ushort, uid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Uid_t uid_t\t\t/* UID type */\n\n#endif\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/win32/config_H.ce": "/*\n * This file was produced by running the config_h.SH script, which\n * gets its values from undef, which is generally produced by\n * running Configure.\n *\n * Feel free to modify any of this as the need arises.  Note, however,\n * that running config_h.SH again will wipe out any changes you've made.\n * For a more permanent change edit undef and rerun config_h.SH.\n *\n * $Id: Config_h.U,v 3.0.1.5 1997/02/28 14:57:43 ram Exp $\n */\n\n/*\n * Package name      : perl5\n * Source directory  :\n * Configuration time: Thu Nov 10 20:47:18 2005\n * Configured by     : vkon\n * Target system     :\n */\n\n#ifndef _config_h_\n#define _config_h_\n\n/* LOC_SED:\n *\tThis symbol holds the complete pathname to the sed program.\n */\n#define LOC_SED \t\"\"\t/**/\n\n/* HAS_ALARM:\n *\tThis symbol, if defined, indicates that the alarm routine is\n *\tavailable.\n */\n/*#define HAS_ALARM\t\t/**/\n\n/* HAS_CHOWN:\n *\tThis symbol, if defined, indicates that the chown routine is\n *\tavailable.\n */\n/*#define HAS_CHOWN\t\t/**/\n\n/* HAS_CHROOT:\n *\tThis symbol, if defined, indicates that the chroot routine is\n *\tavailable.\n */\n/*#define HAS_CHROOT\t\t/**/\n\n/* HAS_CHSIZE:\n *\tThis symbol, if defined, indicates that the chsize routine is available\n *\tto truncate files.  You might need a -lx to get this routine.\n */\n#define\tHAS_CHSIZE\t\t/**/\n\n/* HAS_CUSERID:\n *\tThis symbol, if defined, indicates that the cuserid routine is\n *\tavailable to get character login names.\n */\n/*#define HAS_CUSERID\t\t/**/\n\n/* HAS_DIFFTIME:\n *\tThis symbol, if defined, indicates that the difftime routine is\n *\tavailable.\n */\n#define HAS_DIFFTIME\t\t/**/\n\n/* HAS_DLERROR:\n *\tThis symbol, if defined, indicates that the dlerror routine is\n *\tavailable to return a string describing the last error that\n *\toccurred from a call to dlopen(), dlclose() or dlsym().\n */\n#define HAS_DLERROR\t/**/\n\n/* HAS_DUP2:\n *\tThis symbol, if defined, indicates that the dup2 routine is\n *\tavailable to duplicate file descriptors.\n */\n#define HAS_DUP2\t/**/\n\n/* HAS_FCHMOD:\n *\tThis symbol, if defined, indicates that the fchmod routine is available\n *\tto change mode of opened files.  If unavailable, use chmod().\n */\n/*#define HAS_FCHMOD\t\t/**/\n\n/* HAS_FCHOWN:\n *\tThis symbol, if defined, indicates that the fchown routine is available\n *\tto change ownership of opened files.  If unavailable, use chown().\n */\n/*#define HAS_FCHOWN\t\t/**/\n\n/* HAS_FCNTL:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe fcntl() function exists.\n */\n/*#define HAS_FCNTL\t\t/**/\n\n/* HAS_FGETPOS:\n *\tThis symbol, if defined, indicates that the fgetpos routine is\n *\tavailable to get the file position indicator, similar to ftell().\n */\n#define HAS_FGETPOS\t/**/\n\n/* HAS_FLOCK:\n *\tThis symbol, if defined, indicates that the flock routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_FLOCK\t\t/**/\n\n/* HAS_FORK:\n *\tThis symbol, if defined, indicates that the fork routine is\n *\tavailable.\n */\n/*#define HAS_FORK\t\t/**/\n\n/* HAS_FSETPOS:\n *\tThis symbol, if defined, indicates that the fsetpos routine is\n *\tavailable to set the file position indicator, similar to fseek().\n */\n#define HAS_FSETPOS\t/**/\n\n/* HAS_GETTIMEOFDAY:\n *\tThis symbol, if defined, indicates that the gettimeofday() system\n *\tcall is available for a sub-second accuracy clock. Usually, the file\n *\t<sys/resource.h> needs to be included (see I_SYS_RESOURCE).\n *\tThe type \"Timeval\" should be used to refer to \"struct timeval\".\n */\n/*#define HAS_GETTIMEOFDAY\t/**/\n#ifdef HAS_GETTIMEOFDAY\n#define Timeval struct timeval\t/* Structure used by gettimeofday() */\n#endif\n\n/* HAS_GETGROUPS:\n *\tThis symbol, if defined, indicates that the getgroups() routine is\n *\tavailable to get the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_GETGROUPS\t\t/**/\n\n/* HAS_GETLOGIN:\n *\tThis symbol, if defined, indicates that the getlogin routine is\n *\tavailable to get the login name.\n */\n#define HAS_GETLOGIN\t\t/**/\n\n/* HAS_GETPGID:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe getpgid(pid) function is available to get the\n *\tprocess group id.\n */\n/*#define HAS_GETPGID\t\t/**/\n\n/* HAS_GETPGRP2:\n *\tThis symbol, if defined, indicates that the getpgrp2() (as in DG/UX)\n *\troutine is available to get the current process group.\n */\n/*#define HAS_GETPGRP2\t\t/**/\n\n/* HAS_GETPPID:\n *\tThis symbol, if defined, indicates that the getppid routine is\n *\tavailable to get the parent process ID.\n */\n/*#define HAS_GETPPID\t\t/**/\n\n/* HAS_GETPRIORITY:\n *\tThis symbol, if defined, indicates that the getpriority routine is\n *\tavailable to get a process's priority.\n */\n/*#define HAS_GETPRIORITY\t\t/**/\n\n/* HAS_INET_ATON:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tinet_aton() function is available to parse IP address \"dotted-quad\"\n *\tstrings.\n */\n/*#define HAS_INET_ATON\t\t/**/\n\n/* HAS_KILLPG:\n *\tThis symbol, if defined, indicates that the killpg routine is available\n *\tto kill process groups.  If unavailable, you probably should use kill\n *\twith a negative process number.\n */\n/*#define HAS_KILLPG\t/**/\n\n/* HAS_LINK:\n *\tThis symbol, if defined, indicates that the link routine is\n *\tavailable to create hard links.\n */\n#define HAS_LINK\t/**/\n\n/* HAS_LOCALECONV:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable for numeric and monetary formatting conventions.\n */\n/*#define HAS_LOCALECONV\t/**/\n\n/* HAS_LOCKF:\n *\tThis symbol, if defined, indicates that the lockf routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_LOCKF\t\t/**/\n\n/* HAS_LSTAT:\n *\tThis symbol, if defined, indicates that the lstat routine is\n *\tavailable to do file stats on symbolic links.\n */\n/*#define HAS_LSTAT\t\t/**/\n\n/* HAS_MBLEN:\n *\tThis symbol, if defined, indicates that the mblen routine is available\n *\tto find the number of bytes in a multibye character.\n */\n#define HAS_MBLEN\t\t/**/\n\n/* HAS_MBSTOWCS:\n *\tThis symbol, if defined, indicates that the mbstowcs routine is\n *\tavailable to covert a multibyte string into a wide character string.\n */\n#define\tHAS_MBSTOWCS\t\t/**/\n\n/* HAS_MBTOWC:\n *\tThis symbol, if defined, indicates that the mbtowc routine is available\n *\tto covert a multibyte to a wide character.\n */\n#define HAS_MBTOWC\t\t/**/\n\n/* HAS_MKDIR:\n *\tThis symbol, if defined, indicates that the mkdir routine is available\n *\tto create directories.  Otherwise you should fork off a new process to\n *\texec /bin/mkdir.\n */\n#define HAS_MKDIR\t\t/**/\n\n/* HAS_MKFIFO:\n *\tThis symbol, if defined, indicates that the mkfifo routine is\n *\tavailable to create FIFOs. Otherwise, mknod should be able to\n *\tdo it for you. However, if mkfifo is there, mknod might require\n *\tsuper-user privileges which mkfifo will not.\n */\n/*#define HAS_MKFIFO\t\t/**/\n\n/* HAS_MKTIME:\n *\tThis symbol, if defined, indicates that the mktime routine is\n *\tavailable.\n */\n#define HAS_MKTIME\t\t/**/\n\n/* HAS_MSYNC:\n *\tThis symbol, if defined, indicates that the msync system call is\n *\tavailable to synchronize a mapped file.\n */\n/*#define HAS_MSYNC\t\t/**/\n\n/* HAS_MUNMAP:\n *\tThis symbol, if defined, indicates that the munmap system call is\n *\tavailable to unmap a region, usually mapped by mmap().\n */\n/*#define HAS_MUNMAP\t\t/**/\n\n/* HAS_NICE:\n *\tThis symbol, if defined, indicates that the nice routine is\n *\tavailable.\n */\n/*#define HAS_NICE\t\t/**/\n\n/* HAS_PATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given filename.\n */\n/* HAS_FPATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given open file descriptor.\n */\n/*#define HAS_PATHCONF\t\t/**/\n/*#define HAS_FPATHCONF\t\t/**/\n\n/* HAS_PAUSE:\n *\tThis symbol, if defined, indicates that the pause routine is\n *\tavailable to suspend a process until a signal is received.\n */\n#define HAS_PAUSE\t\t/**/\n\n/* HAS_PIPE:\n *\tThis symbol, if defined, indicates that the pipe routine is\n *\tavailable to create an inter-process channel.\n */\n/*#define HAS_PIPE\t\t/**/\n\n/* HAS_POLL:\n *\tThis symbol, if defined, indicates that the poll routine is\n *\tavailable to poll active file descriptors. You may safely\n *\tinclude <poll.h> when this symbol is defined.\n */\n/*#define HAS_POLL\t\t/**/\n\n/* HAS_READDIR:\n *\tThis symbol, if defined, indicates that the readdir routine is\n *\tavailable to read directory entries. You may have to include\n *\t<dirent.h>. See I_DIRENT.\n */\n#define HAS_READDIR\t\t/**/\n\n/* HAS_SEEKDIR:\n *\tThis symbol, if defined, indicates that the seekdir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_SEEKDIR\t\t/**/\n\n/* HAS_TELLDIR:\n *\tThis symbol, if defined, indicates that the telldir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_TELLDIR\t\t/**/\n\n/* HAS_REWINDDIR:\n *\tThis symbol, if defined, indicates that the rewinddir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_REWINDDIR\t\t/**/\n\n/* HAS_READLINK:\n *\tThis symbol, if defined, indicates that the readlink routine is\n *\tavailable to read the value of a symbolic link.\n */\n/*#define HAS_READLINK\t\t/**/\n\n/* HAS_RENAME:\n *\tThis symbol, if defined, indicates that the rename routine is available\n *\tto rename files.  Otherwise you should do the unlink(), link(), unlink()\n *\ttrick.\n */\n#define HAS_RENAME\t/**/\n\n/* HAS_RMDIR:\n *\tThis symbol, if defined, indicates that the rmdir routine is\n *\tavailable to remove directories. Otherwise you should fork off a\n *\tnew process to exec /bin/rmdir.\n */\n#define HAS_RMDIR\t\t/**/\n\n/* HAS_SELECT:\n *\tThis symbol, if defined, indicates that the select routine is\n *\tavailable to select active file descriptors. If the timeout field\n *\tis used, <sys/time.h> may need to be included.\n */\n#define HAS_SELECT\t/**/\n\n/* HAS_SETEGID:\n *\tThis symbol, if defined, indicates that the setegid routine is available\n *\tto change the effective gid of the current program.\n */\n/*#define HAS_SETEGID\t\t/**/\n\n/* HAS_SETEUID:\n *\tThis symbol, if defined, indicates that the seteuid routine is available\n *\tto change the effective uid of the current program.\n */\n/*#define HAS_SETEUID\t\t/**/\n\n/* HAS_SETLINEBUF:\n *\tThis symbol, if defined, indicates that the setlinebuf routine is\n *\tavailable to change stderr or stdout from block-buffered or unbuffered\n *\tto a line-buffered mode.\n */\n/*#define HAS_SETLINEBUF\t\t/**/\n\n/* HAS_SETLOCALE:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable to handle locale-specific ctype implementations.\n */\n#define HAS_SETLOCALE\t/**/\n\n/* HAS_SETPGID:\n *\tThis symbol, if defined, indicates that the setpgid(pid, gpid)\n *\troutine is available to set process group ID.\n */\n/*#define HAS_SETPGID\t/**/\n\n/* HAS_SETPGRP2:\n *\tThis symbol, if defined, indicates that the setpgrp2() (as in DG/UX)\n *\troutine is available to set the current process group.\n */\n/*#define HAS_SETPGRP2\t\t/**/\n\n/* HAS_SETPRIORITY:\n *\tThis symbol, if defined, indicates that the setpriority routine is\n *\tavailable to set a process's priority.\n */\n/*#define HAS_SETPRIORITY\t\t/**/\n\n/* HAS_SETREGID:\n *\tThis symbol, if defined, indicates that the setregid routine is\n *\tavailable to change the real and effective gid of the current\n *\tprocess.\n */\n/* HAS_SETRESGID:\n *\tThis symbol, if defined, indicates that the setresgid routine is\n *\tavailable to change the real, effective and saved gid of the current\n *\tprocess.\n */\n/*#define HAS_SETREGID\t\t/**/\n/*#define HAS_SETRESGID\t\t/**/\n\n/* HAS_SETREUID:\n *\tThis symbol, if defined, indicates that the setreuid routine is\n *\tavailable to change the real and effective uid of the current\n *\tprocess.\n */\n/* HAS_SETRESUID:\n *\tThis symbol, if defined, indicates that the setresuid routine is\n *\tavailable to change the real, effective and saved uid of the current\n *\tprocess.\n */\n/*#define HAS_SETREUID\t\t/**/\n/*#define HAS_SETRESUID\t\t/**/\n\n/* HAS_SETRGID:\n *\tThis symbol, if defined, indicates that the setrgid routine is available\n *\tto change the real gid of the current program.\n */\n/*#define HAS_SETRGID\t\t/**/\n\n/* HAS_SETRUID:\n *\tThis symbol, if defined, indicates that the setruid routine is available\n *\tto change the real uid of the current program.\n */\n/*#define HAS_SETRUID\t\t/**/\n\n/* HAS_SETSID:\n *\tThis symbol, if defined, indicates that the setsid routine is\n *\tavailable to set the process group ID.\n */\n/*#define HAS_SETSID\t/**/\n\n/* HAS_STRCOLL:\n *\tThis symbol, if defined, indicates that the strcoll routine is\n *\tavailable to compare strings using collating information.\n */\n#define HAS_STRCOLL\t/**/\n\n/* HAS_STRTOD:\n *\tThis symbol, if defined, indicates that the strtod routine is\n *\tavailable to provide better numeric string conversion than atof().\n */\n#define HAS_STRTOD\t/**/\n\n/* HAS_STRTOL:\n *\tThis symbol, if defined, indicates that the strtol routine is available\n *\tto provide better numeric string conversion than atoi() and friends.\n */\n#define HAS_STRTOL\t/**/\n\n/* HAS_STRXFRM:\n *\tThis symbol, if defined, indicates that the strxfrm() routine is\n *\tavailable to transform strings.\n */\n/*#define HAS_STRXFRM\t/**/\n\n/* HAS_SYMLINK:\n *\tThis symbol, if defined, indicates that the symlink routine is available\n *\tto create symbolic links.\n */\n/*#define HAS_SYMLINK\t/**/\n\n/* HAS_SYSCALL:\n *\tThis symbol, if defined, indicates that the syscall routine is\n *\tavailable to call arbitrary system calls. If undefined, that's tough.\n */\n/*#define HAS_SYSCALL\t/**/\n\n/* HAS_SYSCONF:\n *\tThis symbol, if defined, indicates that sysconf() is available\n *\tto determine system related limits and options.\n */\n/*#define HAS_SYSCONF\t/**/\n\n/* HAS_SYSTEM:\n *\tThis symbol, if defined, indicates that the system routine is\n *\tavailable to issue a shell command.\n */\n#define HAS_SYSTEM\t/**/\n\n/* HAS_TCGETPGRP:\n *\tThis symbol, if defined, indicates that the tcgetpgrp routine is\n *\tavailable to get foreground process group ID.\n */\n/*#define HAS_TCGETPGRP\t\t/**/\n\n/* HAS_TCSETPGRP:\n *\tThis symbol, if defined, indicates that the tcsetpgrp routine is\n *\tavailable to set foreground process group ID.\n */\n/*#define HAS_TCSETPGRP\t\t/**/\n\n/* HAS_TRUNCATE:\n *\tThis symbol, if defined, indicates that the truncate routine is\n *\tavailable to truncate files.\n */\n/*#define HAS_TRUNCATE\t/**/\n\n/* HAS_TZNAME:\n *\tThis symbol, if defined, indicates that the tzname[] array is\n *\tavailable to access timezone names.\n */\n#define HAS_TZNAME\t\t/**/\n\n/* HAS_UMASK:\n *\tThis symbol, if defined, indicates that the umask routine is\n *\tavailable to set and get the value of the file creation mask.\n */\n#define HAS_UMASK\t\t/**/\n\n/* HAS_USLEEP:\n *\tThis symbol, if defined, indicates that the usleep routine is\n *\tavailable to let the process sleep on a sub-second accuracy.\n */\n/*#define HAS_USLEEP\t\t/**/\n\n/* HAS_WAIT4:\n *\tThis symbol, if defined, indicates that wait4() exists.\n */\n/*#define HAS_WAIT4\t/**/\n\n/* HAS_WAITPID:\n *\tThis symbol, if defined, indicates that the waitpid routine is\n *\tavailable to wait for child process.\n */\n#define HAS_WAITPID\t/**/\n\n/* HAS_WCSTOMBS:\n *\tThis symbol, if defined, indicates that the wcstombs routine is\n *\tavailable to convert wide character strings to multibyte strings.\n */\n#define HAS_WCSTOMBS\t/**/\n\n/* HAS_WCTOMB:\n *\tThis symbol, if defined, indicates that the wctomb routine is available\n *\tto covert a wide character to a multibyte.\n */\n#define HAS_WCTOMB\t\t/**/\n\n/* I_ARPA_INET:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <arpa/inet.h> to get inet_addr and friends declarations.\n */\n#define\tI_ARPA_INET\t\t/**/\n\n/* I_DBM:\n *\tThis symbol, if defined, indicates that <dbm.h> exists and should\n *\tbe included.\n */\n/* I_RPCSVC_DBM:\n *\tThis symbol, if defined, indicates that <rpcsvc/dbm.h> exists and\n *\tshould be included.\n */\n/*#define I_DBM\t/**/\n/*#define I_RPCSVC_DBM\t/ **/\n\n/* I_DIRENT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <dirent.h>. Using this symbol also triggers the definition\n *\tof the Direntry_t define which ends up being 'struct dirent' or\n *\t'struct direct' depending on the availability of <dirent.h>.\n */\n/* DIRNAMLEN:\n *\tThis symbol, if defined, indicates to the C program that the length\n *\tof directory entry names is provided by a d_namlen field.  Otherwise\n *\tyou need to do strlen() on the d_name field.\n */\n/* Direntry_t:\n *\tThis symbol is set to 'struct direct' or 'struct dirent' depending on\n *\twhether dirent is available or not. You should use this pseudo type to\n *\tportably declare your directory entries.\n */\n#define I_DIRENT\t\t/**/\n#define DIRNAMLEN\t/**/\n#define Direntry_t struct direct\n\n/* I_DLFCN:\n *\tThis symbol, if defined, indicates that <dlfcn.h> exists and should\n *\tbe included.\n */\n#define I_DLFCN\t\t/**/\n\n/* I_FCNTL:\n *\tThis manifest constant tells the C program to include <fcntl.h>.\n */\n#define I_FCNTL\t/**/\n\n/* I_LOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <locale.h>.\n */\n/*#define\tI_LOCALE\t\t/**/\n\n/* I_NET_ERRNO:\n *\tThis symbol, if defined, indicates that <net/errno.h> exists and\n *\tshould be included.\n */\n/*#define I_NET_ERRNO\t\t/**/\n\n/* I_NETINET_IN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/in.h>. Otherwise, you may try <sys/in.h>.\n */\n/*#define I_NETINET_IN\t/**/\n\n/* I_SYS_DIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/dir.h>.\n */\n/*#define I_SYS_DIR\t\t/**/\n\n/* I_SYS_FILE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/file.h> to get definition of R_OK and friends.\n */\n/*#define I_SYS_FILE\t\t/**/\n\n/* I_SYS_IOCTL:\n *\tThis symbol, if defined, indicates that <sys/ioctl.h> exists and should\n *\tbe included. Otherwise, include <sgtty.h> or <termio.h>.\n */\n/* I_SYS_SOCKIO:\n *\tThis symbol, if defined, indicates the <sys/sockio.h> should be included\n *\tto get socket ioctl options, like SIOCATMARK.\n */\n/*#define\tI_SYS_IOCTL\t\t/**/\n/*#define I_SYS_SOCKIO\t/**/\n\n/* I_SYS_NDIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/ndir.h>.\n */\n/*#define I_SYS_NDIR\t/**/\n\n/* I_SYS_PARAM:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/param.h>.\n */\n/*#define I_SYS_PARAM\t\t/**/\n\n/* I_SYS_RESOURCE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/resource.h>.\n */\n/*#define I_SYS_RESOURCE\t\t/**/\n\n/* I_SYS_SELECT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/select.h> in order to get definition of struct timeval.\n */\n/*#define I_SYS_SELECT\t/**/\n\n/* I_SYS_STAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/stat.h>.\n */\n#define\tI_SYS_STAT\t\t/**/\n\n/* I_SYS_TIMES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/times.h>.\n */\n/*#define\tI_SYS_TIMES\t\t/**/\n\n/* I_SYS_TYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/types.h>.\n */\n/*#define\tI_SYS_TYPES\t\t/**/\n\n/* I_SYS_UN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/un.h> to get UNIX domain socket definitions.\n */\n/*#define I_SYS_UN\t\t/**/\n\n/* I_SYS_WAIT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/wait.h>.\n */\n/*#define I_SYS_WAIT\t/**/\n\n/* I_TERMIO:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<termio.h> rather than <sgtty.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/* I_TERMIOS:\n *\tThis symbol, if defined, indicates that the program should include\n *\tthe POSIX termios.h rather than sgtty.h or termio.h.\n *\tThere are also differences in the ioctl() calls that depend on the\n *\tvalue of this symbol.\n */\n/* I_SGTTY:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<sgtty.h> rather than <termio.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/*#define I_TERMIO\t\t/**/\n/*#define I_TERMIOS\t\t/**/\n/*#define I_SGTTY\t\t/**/\n\n/* I_UNISTD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <unistd.h>.\n */\n/*#define I_UNISTD\t\t/**/\n\n/* I_UTIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <utime.h>.\n */\n#define I_UTIME\t\t/**/\n\n/* I_VFORK:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude vfork.h.\n */\n/*#define I_VFORK\t/**/\n\n/* HAS_ACCESSX:\n *\tThis symbol, if defined, indicates that the accessx routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_ACCESSX\t\t/**/\n\n/* HAS_EACCESS:\n *\tThis symbol, if defined, indicates that the eaccess routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_EACCESS\t\t/**/\n\n/* I_SYS_ACCESS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/access.h>.\n */\n/*#define   I_SYS_ACCESS                /**/\n\n/* I_SYS_SECURITY:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/security.h>.\n */\n/*#define   I_SYS_SECURITY\t/**/\n\n/* OSNAME:\n *\tThis symbol contains the name of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n/* OSVERS:\n *\tThis symbol contains the version of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n#define OSNAME \"MSWin32\"\t\t/**/\n#define OSVERS \"4.0\"\t\t/**/\n\n/* USE_CROSS_COMPILE:\n *\tThis symbol, if defined, indicates that Perl is being cross-compiled.\n */\n/* PERL_TARGETARCH:\n *\tThis symbol, if defined, indicates the target architecture\n *\tPerl has been cross-compiled to.  Undefined if not a cross-compile.\n */\n#ifndef USE_CROSS_COMPILE\n#define\tUSE_CROSS_COMPILE\t/**/\n#define\tPERL_TARGETARCH\t\"wince\"\t/**/\n#endif\n\n/* MULTIARCH:\n *\tThis symbol, if defined, signifies that the build\n *\tprocess will produce some binary files that are going to be\n *\tused in a cross-platform environment.  This is the case for\n *\texample with the NeXT \"fat\" binaries that contain executables\n *\tfor several CPUs.\n */\n/*#define MULTIARCH\t\t/**/\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble, or a long double when applicable. Usual values are 2,\n *\t4 and 8. The default is eight, for safety.\n */\n#if defined(MULTIARCH)\n#  define MEM_ALIGNBYTES 8\n#else\n#define MEM_ALIGNBYTES 8\n#endif\n\n/* ARCHLIB:\n *\tThis variable, if defined, holds the name of the directory in\n *\twhich the user wants to put architecture-dependent public\n *\tlibrary files for perl5.  It is most often a local directory\n *\tsuch as /usr/local/lib.  Programs using this variable must be\n *\tprepared to deal with filename expansion.  If ARCHLIB is the\n *\tsame as PRIVLIB, it is not defined, since presumably the\n *\tprogram already searches PRIVLIB.\n */\n/* ARCHLIB_EXP:\n *\tThis symbol contains the ~name expanded version of ARCHLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define ARCHLIB \"\\\\Storage Card\\\\perl58m\\\\lib\"\t\t/**/\n/*#define ARCHLIB_EXP \"\"\t/**/\n\n/* ARCHNAME:\n *\tThis symbol holds a string representing the architecture name.\n *\tIt may be used to construct an architecture-dependant pathname\n *\twhere library files may be held under a private library, for\n *\tinstance.\n */\n#define ARCHNAME \"MS Pocket PC-WCE300-ARM\"\t\t/**/\n\n/* HAS_ATOLF:\n *\tThis symbol, if defined, indicates that the atolf routine is\n *\tavailable to convert strings into long doubles.\n */\n/*#define HAS_ATOLF\t\t/**/\n\n/* HAS_ATOLL:\n *\tThis symbol, if defined, indicates that the atoll routine is\n *\tavailable to convert strings into long longs.\n */\n/*#define HAS_ATOLL\t\t/**/\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n#define BIN \"\\\\Storage Card\\\\perl58m\\\\bin\"\t/**/\n#define BIN_EXP \"\\\\Storage Card\\\\perl58m\\\\bin\"\t/**/\n\n/* INTSIZE:\n *\tThis symbol contains the value of sizeof(int) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* LONGSIZE:\n *\tThis symbol contains the value of sizeof(long) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* SHORTSIZE:\n *\tThis symbol contains the value of sizeof(short) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n#define INTSIZE 4\t\t/**/\n#define LONGSIZE 4\t\t/**/\n#define SHORTSIZE 2\t\t/**/\n\n/* BYTEORDER:\n *\tThis symbol holds the hexadecimal constant defined in byteorder,\n *\tin a UV, i.e. 0x1234 or 0x4321 or 0x12345678, etc...\n *\tIf the compiler supports cross-compiling or multiple-architecture\n *\tbinaries (eg. on NeXT systems), use compiler-defined macros to\n *\tdetermine the byte order.\n *\tOn NeXT 3.2 (and greater), you can build \"Fat\" Multiple Architecture\n *\tBinaries (MAB) on either big endian or little endian machines.\n *\tThe endian-ness is available at compile-time.  This only matters\n *\tfor perl, where the config.h can be generated and installed on\n *\tone system, and used by a different architecture to build an\n *\textension.  Older versions of NeXT that might not have\n *\tdefined either *_ENDIAN__ were all on Motorola 680x0 series,\n *\tso the default case (for NeXT) is big endian to catch them.\n *\tThis might matter for NeXT 3.0.\n */\n#if defined(MULTIARCH)\n#  ifdef __LITTLE_ENDIAN__\n#    if LONGSIZE == 4\n#      define BYTEORDER 0x1234\n#    else\n#      if LONGSIZE == 8\n#        define BYTEORDER 0x12345678\n#      endif\n#    endif\n#  else\n#    ifdef __BIG_ENDIAN__\n#      if LONGSIZE == 4\n#        define BYTEORDER 0x4321\n#      else\n#        if LONGSIZE == 8\n#          define BYTEORDER 0x87654321\n#        endif\n#      endif\n#    endif\n#  endif\n#  if !defined(BYTEORDER) && (defined(NeXT) || defined(__NeXT__))\n#    define BYTEORDER 0x4321\n#  endif\n#else\n#define BYTEORDER 0x1234\t/* large digits for MSB */\n#endif /* NeXT */\n\n/* CHARBITS:\n *\tThis symbol contains the size of a char, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define CHARBITS 8\t\t/**/\n\n/* CAT2:\n *\tThis macro concatenates 2 tokens together.\n */\n/* STRINGIFY:\n *\tThis macro surrounds its token with double quotes.\n */\n#if 42 == 1\n#define CAT2(a,b)\ta/**/b\n#define STRINGIFY(a)\t\"a\"\n\t\t/* If you can get stringification with catify, tell me how! */\n#endif\n#if 42 == 42\n#define PeRl_CaTiFy(a, b)\ta ## b\n#define PeRl_StGiFy(a)\t#a\n/* the additional level of indirection enables these macros to be\n * used as arguments to other macros.  See K&R 2nd ed., page 231. */\n#define CAT2(a,b)\tPeRl_CaTiFy(a,b)\n#define StGiFy(a)\tPeRl_StGiFy(a)\n#define STRINGIFY(a)\tPeRl_StGiFy(a)\n#endif\n#if 42 != 1 && 42 != 42\n#   include \"Bletch: How does this C preprocessor concatenate tokens?\"\n#endif\n\n/* CPPSTDIN:\n *\tThis symbol contains the first part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.\t Typical value of \"cc -E\" or \"/lib/cpp\", but it can also\n *\tcall a wrapper. See CPPRUN.\n */\n/* CPPMINUS:\n *\tThis symbol contains the second part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  This symbol will have the value \"-\" if CPPSTDIN needs a minus\n *\tto specify standard input, otherwise the value is \"\".\n */\n/* CPPRUN:\n *\tThis symbol contains the string which will invoke a C preprocessor on\n *\tthe standard input and produce to standard output. It needs to end\n *\twith CPPLAST, after all other preprocessor flags have been specified.\n *\tThe main difference with CPPSTDIN is that this program will never be a\n *\tpointer to a shell wrapper, i.e. it will be empty if no preprocessor is\n *\tavailable directly to the user. Note that it may well be different from\n *\tthe preprocessor used to compile the C program.\n */\n/* CPPLAST:\n *\tThis symbol is intended to be used along with CPPRUN in the same manner\n *\tsymbol CPPMINUS is used with CPPSTDIN. It contains either \"-\" or \"\".\n */\n#define CPPSTDIN \"clarm.exe -nologo -E\"\n#define CPPMINUS \"\"\n#define CPPRUN \"clarm.exe -nologo -E\"\n#define CPPLAST \"\"\n\n/* HAS__FWALK:\n *\tThis symbol, if defined, indicates that the _fwalk system call is\n *\tavailable to apply a function to all the file handles.\n */\n/*#define HAS__FWALK\t\t/**/\n\n/* HAS_ACCESS:\n *\tThis manifest constant lets the C program know that the access()\n *\tsystem call is available to check for accessibility using real UID/GID.\n *\t(always present on UNIX.)\n */\n#define HAS_ACCESS\t\t/**/\n\n/* HAS_ASCTIME_R:\n *\tThis symbol, if defined, indicates that the asctime_r routine\n *\tis available to asctime re-entrantly.\n */\n/* ASCTIME_R_PROTO:\n *\tThis symbol encodes the prototype of asctime_r.\n *\tIt is zero if d_asctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_asctime_r\n *\tis defined.\n */\n/*#define HAS_ASCTIME_R\t   /**/\n#define ASCTIME_R_PROTO 0\t   /**/\n\n/* CASTI32:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tor large floating point numbers to 32-bit ints.\n */\n/*#define\tCASTI32\t\t/**/\n\n/* CASTNEGFLOAT:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tnumbers to unsigned longs, ints and shorts.\n */\n/* CASTFLAGS:\n *\tThis symbol contains flags that say what difficulties the compiler\n *\thas casting odd floating values to unsigned long:\n *\t\t0 = ok\n *\t\t1 = couldn't cast < 0\n *\t\t2 = couldn't cast >= 0x80000000\n *\t\t4 = couldn't cast in argument expression list\n */\n#define\tCASTNEGFLOAT\t\t/**/\n#define CASTFLAGS 0\t\t/**/\n\n/* HAS_CLASS:\n *\tThis symbol, if defined, indicates that the class routine is\n *\tavailable to classify doubles.  Available for example in AIX.\n *\tThe returned values are defined in <float.h> and are:\n *\n *\tFP_PLUS_NORM\tPositive normalized, nonzero\n *\tFP_MINUS_NORM\tNegative normalized, nonzero\n *\tFP_PLUS_DENORM\tPositive denormalized, nonzero\n *\tFP_MINUS_DENORM\tNegative denormalized, nonzero\n *\tFP_PLUS_ZERO\t+0.0\n *\tFP_MINUS_ZERO\t-0.0\n *\tFP_PLUS_INF\t+INF\n *\tFP_MINUS_INF\t-INF\n *\tFP_NANS\t\tSignaling Not a Number (NaNS)\n *\tFP_NANQ\t\tQuiet Not a Number (NaNQ)\n */\n/*#define HAS_CLASS\t\t/**/\n\n/* VOID_CLOSEDIR:\n *\tThis symbol, if defined, indicates that the closedir() routine\n *\tdoes not return a value.\n */\n/*#define VOID_CLOSEDIR\t\t/**/\n\n/* HAS_STRUCT_CMSGHDR:\n *\tThis symbol, if defined, indicates that the struct cmsghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_CMSGHDR\t/**/\n\n/* HAS_CRYPT_R:\n *\tThis symbol, if defined, indicates that the crypt_r routine\n *\tis available to crypt re-entrantly.\n */\n/* CRYPT_R_PROTO:\n *\tThis symbol encodes the prototype of crypt_r.\n *\tIt is zero if d_crypt_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_crypt_r\n *\tis defined.\n */\n/*#define HAS_CRYPT_R\t   /**/\n#define CRYPT_R_PROTO 0\t   /**/\n\n/* HAS_CSH:\n *\tThis symbol, if defined, indicates that the C-shell exists.\n */\n/* CSH:\n *\tThis symbol, if defined, contains the full pathname of csh.\n */\n/*#define HAS_CSH\t\t/**/\n#ifdef HAS_CSH\n#define CSH \"\"\t/**/\n#endif\n\n/* HAS_CTIME_R:\n *\tThis symbol, if defined, indicates that the ctime_r routine\n *\tis available to ctime re-entrantly.\n */\n/* CTIME_R_PROTO:\n *\tThis symbol encodes the prototype of ctime_r.\n *\tIt is zero if d_ctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctime_r\n *\tis defined.\n */\n/*#define HAS_CTIME_R\t   /**/\n#define CTIME_R_PROTO 0\t   /**/\n\n/* DLSYM_NEEDS_UNDERSCORE:\n *\tThis symbol, if defined, indicates that we need to prepend an\n *\tunderscore to the symbol name before calling dlsym().  This only\n *\tmakes sense if you *have* dlsym, which we will presume is the\n *\tcase if you're using dl_dlopen.xs.\n */\n/*#define \tDLSYM_NEEDS_UNDERSCORE \t/**/\n\n/* HAS_DRAND48_R:\n *\tThis symbol, if defined, indicates that the drand48_r routine\n *\tis available to drand48 re-entrantly.\n */\n/* DRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of drand48_r.\n *\tIt is zero if d_drand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_drand48_r\n *\tis defined.\n */\n/*#define HAS_DRAND48_R\t   /**/\n#define DRAND48_R_PROTO 0\t   /**/\n\n/* HAS_DRAND48_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the drand48() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern double drand48(void);\n */\n/*#define\tHAS_DRAND48_PROTO\t/**/\n\n/* HAS_ENDGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the group database.\n */\n/*#define HAS_ENDGRENT\t\t/**/\n\n/* HAS_ENDGRENT_R:\n *\tThis symbol, if defined, indicates that the endgrent_r routine\n *\tis available to endgrent re-entrantly.\n */\n/* ENDGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of endgrent_r.\n *\tIt is zero if d_endgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endgrent_r\n *\tis defined.\n */\n/*#define HAS_ENDGRENT_R\t   /**/\n#define ENDGRENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDHOSTENT:\n *\tThis symbol, if defined, indicates that the endhostent() routine is\n *\tavailable to close whatever was being used for host queries.\n */\n/*#define HAS_ENDHOSTENT\t\t/**/\n\n/* HAS_ENDNETENT:\n *\tThis symbol, if defined, indicates that the endnetent() routine is\n *\tavailable to close whatever was being used for network queries.\n */\n/*#define HAS_ENDNETENT\t\t/**/\n\n/* HAS_ENDPROTOENT:\n *\tThis symbol, if defined, indicates that the endprotoent() routine is\n *\tavailable to close whatever was being used for protocol queries.\n */\n/*#define HAS_ENDPROTOENT\t\t/**/\n\n/* HAS_ENDPWENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the passwd database.\n */\n/*#define HAS_ENDPWENT\t\t/**/\n\n/* HAS_ENDPWENT_R:\n *\tThis symbol, if defined, indicates that the endpwent_r routine\n *\tis available to endpwent re-entrantly.\n */\n/* ENDPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of endpwent_r.\n *\tIt is zero if d_endpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endpwent_r\n *\tis defined.\n */\n/*#define HAS_ENDPWENT_R\t   /**/\n#define ENDPWENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDSERVENT:\n *\tThis symbol, if defined, indicates that the endservent() routine is\n *\tavailable to close whatever was being used for service queries.\n */\n/*#define HAS_ENDSERVENT\t\t/**/\n\n/* HAS_FCHDIR:\n *\tThis symbol, if defined, indicates that the fchdir routine is\n *\tavailable to change directory using a file descriptor.\n */\n/*#define HAS_FCHDIR\t\t/**/\n\n/* FCNTL_CAN_LOCK:\n *\tThis symbol, if defined, indicates that fcntl() can be used\n *\tfor file locking.  Normally on Unix systems this is defined.\n *\tIt may be undefined on VMS.\n */\n/*#define FCNTL_CAN_LOCK\t\t/**/\n\n/* HAS_FD_SET:\n *\tThis symbol, when defined, indicates presence of the fd_set typedef\n *\tin <sys/types.h>\n */\n#define HAS_FD_SET\t/**/\n\n/* HAS_FINITE:\n *\tThis symbol, if defined, indicates that the finite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_FINITE\t\t/**/\n\n/* HAS_FINITEL:\n *\tThis symbol, if defined, indicates that the finitel routine is\n *\tavailable to check whether a long double is finite\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_FINITEL\t\t/**/\n\n/* FLEXFILENAMES:\n *\tThis symbol, if defined, indicates that the system supports filenames\n *\tlonger than 14 characters.\n */\n#define\tFLEXFILENAMES\t\t/**/\n\n/* HAS_FP_CLASS:\n *\tThis symbol, if defined, indicates that the fp_class routine is\n *\tavailable to classify doubles.  Available for example in Digital UNIX.\n *\tThe returned values are defined in <math.h> and are:\n *\n *\tFP_SNAN           Signaling NaN (Not-a-Number)\n *\tFP_QNAN           Quiet NaN (Not-a-Number)\n *\tFP_POS_INF        +infinity\n *\tFP_NEG_INF        -infinity\n *\tFP_POS_NORM       Positive normalized\n *\tFP_NEG_NORM       Negative normalized\n *\tFP_POS_DENORM     Positive denormalized\n *\tFP_NEG_DENORM     Negative denormalized\n *\tFP_POS_ZERO       +0.0 (positive zero)\n *\tFP_NEG_ZERO       -0.0 (negative zero)\n */\n/*#define HAS_FP_CLASS\t\t/**/\n\n/* HAS_FPCLASS:\n *\tThis symbol, if defined, indicates that the fpclass routine is\n *\tavailable to classify doubles.  Available for example in Solaris/SVR4.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASS\t\t/**/\n\n/* HAS_FPCLASSIFY:\n *\tThis symbol, if defined, indicates that the fpclassify routine is\n *\tavailable to classify doubles.  Available for example in HP-UX.\n *\tThe returned values are defined in <math.h> and are\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n/*#define HAS_FPCLASSIFY\t\t/**/\n\n/* HAS_FPOS64_T:\n *\tThis symbol will be defined if the C compiler supports fpos64_t.\n */\n/*#define\tHAS_FPOS64_T    \t/**/\n\n/* HAS_FREXPL:\n *\tThis symbol, if defined, indicates that the frexpl routine is\n *\tavailable to break a long double floating-point number into\n *\ta normalized fraction and an integral power of 2.\n */\n/*#define HAS_FREXPL\t\t/**/\n\n/* HAS_STRUCT_FS_DATA:\n *\tThis symbol, if defined, indicates that the struct fs_data\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_FS_DATA\t/**/\n\n/* HAS_FSEEKO:\n *\tThis symbol, if defined, indicates that the fseeko routine is\n *\tavailable to fseek beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FSEEKO\t\t/**/\n\n/* HAS_FSTATFS:\n *\tThis symbol, if defined, indicates that the fstatfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATFS\t\t/**/\n\n/* HAS_FSYNC:\n *\tThis symbol, if defined, indicates that the fsync routine is\n *\tavailable to write a file's modified data and attributes to\n *\tpermanent storage.\n */\n/*#define HAS_FSYNC\t\t/**/\n\n/* HAS_FTELLO:\n *\tThis symbol, if defined, indicates that the ftello routine is\n *\tavailable to ftell beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FTELLO\t\t/**/\n\n/* HAS_FUTIMES:\n *\tThis symbol, if defined, indicates that the futimes routine is\n *\tavailable to change file descriptor time stamps with struct timevals.\n */\n/*#define HAS_FUTIMES\t\t/**/\n\n/* Gconvert:\n *\tThis preprocessor macro is defined to convert a floating point\n *\tnumber to a string without a trailing decimal point.  This\n *\temulates the behavior of sprintf(\"%g\"), but is sometimes much more\n *\tefficient.  If gconvert() is not available, but gcvt() drops the\n *\ttrailing decimal point, then gcvt() is used.  If all else fails,\n *\ta macro using sprintf(\"%g\") is used. Arguments for the Gconvert\n *\tmacro are: value, number of digits, whether trailing zeros should\n *\tbe retained, and the output buffer.\n *\tThe usual values are:\n *\t\td_Gconvert='gconvert((x),(n),(t),(b))'\n *\t\td_Gconvert='gcvt((x),(n),(b))'\n *\t\td_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\n *\tThe last two assume trailing zeros should not be kept.\n */\n#define Gconvert(x,n,t,b) sprintf((b),\"%.*g\",(n),(x))\n\n/* HAS_GETCWD:\n *\tThis symbol, if defined, indicates that the getcwd routine is\n *\tavailable to get the current working directory.\n */\n#define HAS_GETCWD\t\t/**/\n\n/* HAS_GETESPWNAM:\n *\tThis symbol, if defined, indicates that the getespwnam system call is\n *\tavailable to retrieve enchanced (shadow) password entries by name.\n */\n/*#define HAS_GETESPWNAM\t\t/**/\n\n/* HAS_GETFSSTAT:\n *\tThis symbol, if defined, indicates that the getfsstat routine is\n *\tavailable to stat filesystems in bulk.\n */\n/*#define HAS_GETFSSTAT\t\t/**/\n\n/* HAS_GETGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for sequential access of the group database.\n */\n/*#define HAS_GETGRENT\t\t/**/\n\n/* HAS_GETGRENT_R:\n *\tThis symbol, if defined, indicates that the getgrent_r routine\n *\tis available to getgrent re-entrantly.\n */\n/* GETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of getgrent_r.\n *\tIt is zero if d_getgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrent_r\n *\tis defined.\n */\n/*#define HAS_GETGRENT_R\t   /**/\n#define GETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_GETGRGID_R:\n *\tThis symbol, if defined, indicates that the getgrgid_r routine\n *\tis available to getgrgid re-entrantly.\n */\n/* GETGRGID_R_PROTO:\n *\tThis symbol encodes the prototype of getgrgid_r.\n *\tIt is zero if d_getgrgid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrgid_r\n *\tis defined.\n */\n/*#define HAS_GETGRGID_R\t   /**/\n#define GETGRGID_R_PROTO 0\t   /**/\n\n/* HAS_GETGRNAM_R:\n *\tThis symbol, if defined, indicates that the getgrnam_r routine\n *\tis available to getgrnam re-entrantly.\n */\n/* GETGRNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getgrnam_r.\n *\tIt is zero if d_getgrnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrnam_r\n *\tis defined.\n */\n/*#define HAS_GETGRNAM_R\t   /**/\n#define GETGRNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYADDR:\n *\tThis symbol, if defined, indicates that the gethostbyaddr() routine is\n *\tavailable to look up hosts by their IP addresses.\n */\n#define HAS_GETHOSTBYADDR\t\t/**/\n\n/* HAS_GETHOSTBYNAME:\n *\tThis symbol, if defined, indicates that the gethostbyname() routine is\n *\tavailable to look up host names in some data base or other.\n */\n#define HAS_GETHOSTBYNAME\t\t/**/\n\n/* HAS_GETHOSTENT:\n *\tThis symbol, if defined, indicates that the gethostent() routine is\n *\tavailable to look up host names in some data base or another.\n */\n/*#define HAS_GETHOSTENT\t\t/**/\n\n/* HAS_GETHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tgethostname() routine to derive the host name.  See also HAS_UNAME\n *\tand PHOSTNAME.\n */\n/* HAS_UNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tuname() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand PHOSTNAME.\n */\n/* PHOSTNAME:\n *\tThis symbol, if defined, indicates the command to feed to the\n *\tpopen() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand HAS_UNAME.\tNote that the command uses a fully qualified path,\n *\tso that it is safe even if used by a process with super-user\n *\tprivileges.\n */\n/* HAS_PHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tcontents of PHOSTNAME as a command to feed to the popen() routine\n *\tto derive the host name.\n */\n#define HAS_GETHOSTNAME\t/**/\n#define HAS_UNAME\t\t/**/\n/*#define HAS_PHOSTNAME\t/**/\n#ifdef HAS_PHOSTNAME\n#define PHOSTNAME \"\"\t/* How to get the host name */\n#endif\n\n/* HAS_GETHOST_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for gethostent(), gethostbyname(), and\n *\tgethostbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETHOST_PROTOS\t/**/\n\n/* HAS_GETITIMER:\n *\tThis symbol, if defined, indicates that the getitimer routine is\n *\tavailable to return interval timers.\n */\n/*#define HAS_GETITIMER\t\t/**/\n\n/* HAS_GETLOGIN_R:\n *\tThis symbol, if defined, indicates that the getlogin_r routine\n *\tis available to getlogin re-entrantly.\n */\n/* GETLOGIN_R_PROTO:\n *\tThis symbol encodes the prototype of getlogin_r.\n *\tIt is zero if d_getlogin_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getlogin_r\n *\tis defined.\n */\n/*#define HAS_GETLOGIN_R\t   /**/\n#define GETLOGIN_R_PROTO 0\t   /**/\n\n/* HAS_GETMNT:\n *\tThis symbol, if defined, indicates that the getmnt routine is\n *\tavailable to get filesystem mount info by filename.\n */\n/*#define HAS_GETMNT\t\t/**/\n\n/* HAS_GETMNTENT:\n *\tThis symbol, if defined, indicates that the getmntent routine is\n *\tavailable to iterate through mounted file systems to get their info.\n */\n/*#define HAS_GETMNTENT\t\t/**/\n\n/* HAS_GETNETBYADDR:\n *\tThis symbol, if defined, indicates that the getnetbyaddr() routine is\n *\tavailable to look up networks by their IP addresses.\n */\n/*#define HAS_GETNETBYADDR\t\t/**/\n\n/* HAS_GETNETBYNAME:\n *\tThis symbol, if defined, indicates that the getnetbyname() routine is\n *\tavailable to look up networks by their names.\n */\n/*#define HAS_GETNETBYNAME\t\t/**/\n\n/* HAS_GETNETENT:\n *\tThis symbol, if defined, indicates that the getnetent() routine is\n *\tavailable to look up network names in some data base or another.\n */\n/*#define HAS_GETNETENT\t\t/**/\n\n/* HAS_GETNET_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getnetent(), getnetbyname(), and\n *\tgetnetbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETNET_PROTOS\t/**/\n\n/* HAS_GETPAGESIZE:\n *\tThis symbol, if defined, indicates that the getpagesize system call\n *\tis available to get system page size, which is the granularity of\n *\tmany memory management calls.\n */\n/*#define HAS_GETPAGESIZE\t\t/**/\n\n/* HAS_GETPROTOENT:\n *\tThis symbol, if defined, indicates that the getprotoent() routine is\n *\tavailable to look up protocols in some data base or another.\n */\n/*#define HAS_GETPROTOENT\t\t/**/\n\n/* HAS_GETPGRP:\n *\tThis symbol, if defined, indicates that the getpgrp routine is\n *\tavailable to get the current process group.\n */\n/* USE_BSD_GETPGRP:\n *\tThis symbol, if defined, indicates that getpgrp needs one\n *\targuments whereas USG one needs none.\n */\n/*#define HAS_GETPGRP\t\t/**/\n/*#define USE_BSD_GETPGRP\t/**/\n\n/* HAS_GETPROTOBYNAME:\n *\tThis symbol, if defined, indicates that the getprotobyname()\n *\troutine is available to look up protocols by their name.\n */\n/* HAS_GETPROTOBYNUMBER:\n *\tThis symbol, if defined, indicates that the getprotobynumber()\n *\troutine is available to look up protocols by their number.\n */\n#define HAS_GETPROTOBYNAME\t\t/**/\n#define HAS_GETPROTOBYNUMBER\t\t/**/\n\n/* HAS_GETPROTO_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getprotoent(), getprotobyname(), and\n *\tgetprotobyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETPROTO_PROTOS\t/**/\n\n/* HAS_GETPRPWNAM:\n *\tThis symbol, if defined, indicates that the getprpwnam system call is\n *\tavailable to retrieve protected (shadow) password entries by name.\n */\n/*#define HAS_GETPRPWNAM\t\t/**/\n\n/* HAS_GETPWENT:\n *\tThis symbol, if defined, indicates that the getpwent routine is\n *\tavailable for sequential access of the passwd database.\n *\tIf this is not available, the older getpw() function may be available.\n */\n/*#define HAS_GETPWENT\t\t/**/\n\n/* HAS_GETPWENT_R:\n *\tThis symbol, if defined, indicates that the getpwent_r routine\n *\tis available to getpwent re-entrantly.\n */\n/* GETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of getpwent_r.\n *\tIt is zero if d_getpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwent_r\n *\tis defined.\n */\n/*#define HAS_GETPWENT_R\t   /**/\n#define GETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPWNAM_R:\n *\tThis symbol, if defined, indicates that the getpwnam_r routine\n *\tis available to getpwnam re-entrantly.\n */\n/* GETPWNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getpwnam_r.\n *\tIt is zero if d_getpwnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwnam_r\n *\tis defined.\n */\n/*#define HAS_GETPWNAM_R\t   /**/\n#define GETPWNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETPWUID_R:\n *\tThis symbol, if defined, indicates that the getpwuid_r routine\n *\tis available to getpwuid re-entrantly.\n */\n/* GETPWUID_R_PROTO:\n *\tThis symbol encodes the prototype of getpwuid_r.\n *\tIt is zero if d_getpwuid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwuid_r\n *\tis defined.\n */\n/*#define HAS_GETPWUID_R\t   /**/\n#define GETPWUID_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT:\n *\tThis symbol, if defined, indicates that the getservent() routine is\n *\tavailable to look up network services in some data base or another.\n */\n/*#define HAS_GETSERVENT\t\t/**/\n\n/* HAS_GETSERV_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getservent(), getservbyname(), and\n *\tgetservbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETSERV_PROTOS\t/**/\n\n/* HAS_GETSPNAM:\n *\tThis symbol, if defined, indicates that the getspnam system call is\n *\tavailable to retrieve SysV shadow password entries by name.\n */\n/*#define HAS_GETSPNAM\t\t/**/\n\n/* HAS_GETSPNAM_R:\n *\tThis symbol, if defined, indicates that the getspnam_r routine\n *\tis available to getspnam re-entrantly.\n */\n/* GETSPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getspnam_r.\n *\tIt is zero if d_getspnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getspnam_r\n *\tis defined.\n */\n/*#define HAS_GETSPNAM_R\t   /**/\n#define GETSPNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYNAME:\n *\tThis symbol, if defined, indicates that the getservbyname()\n *\troutine is available to look up services by their name.\n */\n/* HAS_GETSERVBYPORT:\n *\tThis symbol, if defined, indicates that the getservbyport()\n *\troutine is available to look up services by their port.\n */\n#define HAS_GETSERVBYNAME\t\t/**/\n#define HAS_GETSERVBYPORT\t\t/**/\n\n/* HAS_GMTIME_R:\n *\tThis symbol, if defined, indicates that the gmtime_r routine\n *\tis available to gmtime re-entrantly.\n */\n/* GMTIME_R_PROTO:\n *\tThis symbol encodes the prototype of gmtime_r.\n *\tIt is zero if d_gmtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gmtime_r\n *\tis defined.\n */\n/*#define HAS_GMTIME_R\t   /**/\n#define GMTIME_R_PROTO 0\t   /**/\n\n/* HAS_GNULIBC:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe GNU C library is being used.  A better check is to use\n *\tthe __GLIBC__ and __GLIBC_MINOR__ symbols supplied with glibc.\n */\n/*#define HAS_GNULIBC  \t/**/\n#if defined(HAS_GNULIBC) && !defined(_GNU_SOURCE)\n#   define _GNU_SOURCE\n#endif\n/* HAS_HASMNTOPT:\n *\tThis symbol, if defined, indicates that the hasmntopt routine is\n *\tavailable to query the mount options of file systems.\n */\n/*#define HAS_HASMNTOPT\t\t/**/\n\n/* HAS_HTONL:\n *\tThis symbol, if defined, indicates that the htonl() routine (and\n *\tfriends htons() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_HTONS:\n *\tThis symbol, if defined, indicates that the htons() routine (and\n *\tfriends htonl() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHL:\n *\tThis symbol, if defined, indicates that the ntohl() routine (and\n *\tfriends htonl() htons() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHS:\n *\tThis symbol, if defined, indicates that the ntohs() routine (and\n *\tfriends htonl() htons() ntohl()) are available to do network\n *\torder byte swapping.\n */\n#define HAS_HTONL\t\t/**/\n#define HAS_HTONS\t\t/**/\n#define HAS_NTOHL\t\t/**/\n#define HAS_NTOHS\t\t/**/\n\n/* HAS_INT64_T:\n *     This symbol will defined if the C compiler supports int64_t.\n *     Usually the <inttypes.h> needs to be included, but sometimes\n *\t<sys/types.h> is enough.\n */\n/*#define     HAS_INT64_T               /**/\n\n/* HAS_ISASCII:\n *\tThis manifest constant lets the C program know that isascii\n *\tis available.\n */\n#define HAS_ISASCII\t\t/**/\n\n/* HAS_ISFINITE:\n *\tThis symbol, if defined, indicates that the isfinite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_ISFINITE\t\t/**/\n\n/* HAS_ISINF:\n *\tThis symbol, if defined, indicates that the isinf routine is\n *\tavailable to check whether a double is an infinity.\n */\n/*#define HAS_ISINF\t\t/**/\n\n/* HAS_ISNAN:\n *\tThis symbol, if defined, indicates that the isnan routine is\n *\tavailable to check whether a double is a NaN.\n */\n#define HAS_ISNAN\t\t/**/\n\n/* HAS_ISNANL:\n *\tThis symbol, if defined, indicates that the isnanl routine is\n *\tavailable to check whether a long double is a NaN.\n */\n/*#define HAS_ISNANL\t\t/**/\n\n/* HAS_LCHOWN:\n *\tThis symbol, if defined, indicates that the lchown routine is\n *\tavailable to operate on a symbolic link (instead of following the\n *\tlink).\n */\n/*#define HAS_LCHOWN\t\t/**/\n\n/* HAS_LDBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol LDBL_DIG, which is the number\n *\tof significant digits in a long double precision number. Unlike\n *\tfor DBL_DIG, there's no good guess for LDBL_DIG if it is undefined.\n */\n#define HAS_LDBL_DIG \t/**/\n\n/* HAS_LOCALTIME_R:\n *\tThis symbol, if defined, indicates that the localtime_r routine\n *\tis available to localtime re-entrantly.\n */\n/* LOCALTIME_R_NEEDS_TZSET:\n *\tMany libc's localtime_r implementations do not call tzset,\n *\tmaking them differ from localtime(), and making timezone\n *\tchanges using \\undef{TZ} without explicitly calling tzset\n *\timpossible. This symbol makes us call tzset before localtime_r\n */\n/*#define LOCALTIME_R_NEEDS_TZSET /**/\n#ifdef LOCALTIME_R_NEEDS_TZSET\n#define L_R_TZSET tzset(),\n#else\n#define L_R_TZSET\n#endif\n\n/* LOCALTIME_R_PROTO:\n *\tThis symbol encodes the prototype of localtime_r.\n *\tIt is zero if d_localtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_localtime_r\n *\tis defined.\n */\n/*#define HAS_LOCALTIME_R\t   /**/\n#define LOCALTIME_R_PROTO 0\t   /**/\n\n/* HAS_LONG_DOUBLE:\n *\tThis symbol will be defined if the C compiler supports long\n *\tdoubles.\n */\n/* LONG_DOUBLESIZE:\n *\tThis symbol contains the size of a long double, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long doubles.\n */\n/*#define HAS_LONG_DOUBLE\t\t/**/\n#ifdef HAS_LONG_DOUBLE\n#define LONG_DOUBLESIZE 10\t\t/**/\n#endif\n\n/* HAS_LONG_LONG:\n *\tThis symbol will be defined if the C compiler supports long long.\n */\n/* LONGLONGSIZE:\n *\tThis symbol contains the size of a long long, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long long.\n */\n/*#define HAS_LONG_LONG\t\t/**/\n#ifdef HAS_LONG_LONG\n#define LONGLONGSIZE 8\t\t/**/\n#endif\n\n/* HAS_LSEEK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the lseek() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern off_t lseek(int, off_t, int);\n */\n#define\tHAS_LSEEK_PROTO\t/**/\n\n/* HAS_MADVISE:\n *\tThis symbol, if defined, indicates that the madvise system call is\n *\tavailable to map a file into memory.\n */\n/*#define HAS_MADVISE\t\t/**/\n\n/* HAS_MALLOC_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_size\n *\troutine is available for use.\n */\n/*#define HAS_MALLOC_SIZE\t\t/**/\n\n/* HAS_MALLOC_GOOD_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_good_size\n *\troutine is available for use.\n */\n/*#define HAS_MALLOC_GOOD_SIZE\t/**/\n\n/* HAS_MKDTEMP:\n *\tThis symbol, if defined, indicates that the mkdtemp routine is\n *\tavailable to exclusively create a uniquely named temporary directory.\n */\n/*#define HAS_MKDTEMP\t\t/**/\n\n/* HAS_MKSTEMP:\n *\tThis symbol, if defined, indicates that the mkstemp routine is\n *\tavailable to exclusively create and open a uniquely named\n *\ttemporary file.\n */\n/*#define HAS_MKSTEMP\t\t/**/\n\n/* HAS_MKSTEMPS:\n *\tThis symbol, if defined, indicates that the mkstemps routine is\n *\tavailable to excluslvely create and open a uniquely named\n *\t(with a suffix) temporary file.\n */\n/*#define HAS_MKSTEMPS\t\t/**/\n\n/* HAS_MMAP:\n *\tThis symbol, if defined, indicates that the mmap system call is\n *\tavailable to map a file into memory.\n */\n/* Mmap_t:\n *\tThis symbol holds the return type of the mmap() system call\n *\t(and simultaneously the type of the first argument).\n *\tUsually set to 'void *' or 'cadd_t'.\n */\n/*#define HAS_MMAP\t\t/**/\n#define Mmap_t void *\t/**/\n\n/* HAS_MODFL:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tavailable to split a long double x into a fractional part f and\n *\tan integer part i such that |f| < 1.0 and (f + i) = x.\n */\n/* HAS_MODFL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the modfl() function.  Otherwise, it is up\n *\tto the program to supply one.\n */\n/*#define HAS_MODFL\t\t/**/\n/*#define HAS_MODFL_PROTO\t\t/**/\n\n/* HAS_MPROTECT:\n *\tThis symbol, if defined, indicates that the mprotect system call is\n *\tavailable to modify the access protection of a memory mapped file.\n */\n/*#define HAS_MPROTECT\t\t/**/\n\n/* HAS_MSG:\n *\tThis symbol, if defined, indicates that the entire msg*(2) library is\n *\tsupported (IPC mechanism based on message queues).\n */\n/*#define HAS_MSG\t\t/**/\n\n/* HAS_STRUCT_MSGHDR:\n *\tThis symbol, if defined, indicates that the struct msghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_MSGHDR\t/**/\n\n/* HAS_OFF64_T:\n *\tThis symbol will be defined if the C compiler supports off64_t.\n */\n/*#define\tHAS_OFF64_T    \t\t/**/\n\n/* HAS_OPEN3:\n *\tThis manifest constant lets the C program know that the three\n *\targument form of open(2) is available.\n */\n/*#define HAS_OPEN3\t\t/**/\n\n/* OLD_PTHREAD_CREATE_JOINABLE:\n *\tThis symbol, if defined, indicates how to create pthread\n *\tin joinable (aka undetached) state.  NOTE: not defined\n *\tif pthread.h already has defined PTHREAD_CREATE_JOINABLE\n *\t(the new version of the constant).\n *\tIf defined, known values are PTHREAD_CREATE_UNDETACHED\n *\tand __UNDETACHED.\n */\n/*#define OLD_PTHREAD_CREATE_JOINABLE  /**/\n\n/* HAS_PTHREAD_YIELD:\n *\tThis symbol, if defined, indicates that the pthread_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/* SCHED_YIELD:\n *\tThis symbol defines the way to yield the execution of\n *\tthe current thread.  Known ways are sched_yield,\n *\tpthread_yield, and pthread_yield with NULL.\n */\n/* HAS_SCHED_YIELD:\n *\tThis symbol, if defined, indicates that the sched_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/*#define HAS_PTHREAD_YIELD\t/**/\n#define SCHED_YIELD\t\t/**/\n/*#define HAS_SCHED_YIELD\t/**/\n\n/* HAS_RANDOM_R:\n *\tThis symbol, if defined, indicates that the random_r routine\n *\tis available to random re-entrantly.\n */\n/* RANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of random_r.\n *\tIt is zero if d_random_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_random_r\n *\tis defined.\n */\n/*#define HAS_RANDOM_R\t   /**/\n#define RANDOM_R_PROTO 0\t   /**/\n\n/* HAS_READDIR_R:\n *\tThis symbol, if defined, indicates that the readdir_r routine\n *\tis available to readdir re-entrantly.\n */\n/* READDIR_R_PROTO:\n *\tThis symbol encodes the prototype of readdir_r.\n *\tIt is zero if d_readdir_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir_r\n *\tis defined.\n */\n/*#define HAS_READDIR_R\t   /**/\n#define READDIR_R_PROTO 0\t   /**/\n\n/* HAS_READV:\n *\tThis symbol, if defined, indicates that the readv routine is\n *\tavailable to do gather reads.  You will also need <sys/uio.h>\n *\tand there I_SYSUIO.\n */\n/*#define HAS_READV\t\t/**/\n\n/* HAS_RECVMSG:\n *\tThis symbol, if defined, indicates that the recvmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_RECVMSG\t\t/**/\n\n/* HAS_SBRK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sbrk() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern void* sbrk(int);\n *\t\textern void* sbrk(size_t);\n */\n/*#define\tHAS_SBRK_PROTO\t/**/\n\n/* HAS_SEM:\n *\tThis symbol, if defined, indicates that the entire sem*(2) library is\n *\tsupported.\n */\n/*#define HAS_SEM\t\t/**/\n\n/* HAS_SENDMSG:\n *\tThis symbol, if defined, indicates that the sendmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_SENDMSG\t\t/**/\n\n/* HAS_SETGRENT:\n *\tThis symbol, if defined, indicates that the setgrent routine is\n *\tavailable for initializing sequential access of the group database.\n */\n/*#define HAS_SETGRENT\t\t/**/\n\n/* HAS_SETGRENT_R:\n *\tThis symbol, if defined, indicates that the setgrent_r routine\n *\tis available to setgrent re-entrantly.\n */\n/* SETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of setgrent_r.\n *\tIt is zero if d_setgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setgrent_r\n *\tis defined.\n */\n/*#define HAS_SETGRENT_R\t   /**/\n#define SETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_SETGROUPS:\n *\tThis symbol, if defined, indicates that the setgroups() routine is\n *\tavailable to set the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_SETGROUPS\t\t/**/\n\n/* HAS_SETHOSTENT:\n *\tThis symbol, if defined, indicates that the sethostent() routine is\n *\tavailable.\n */\n/*#define HAS_SETHOSTENT\t\t/**/\n\n/* HAS_SETITIMER:\n *\tThis symbol, if defined, indicates that the setitimer routine is\n *\tavailable to set interval timers.\n */\n/*#define HAS_SETITIMER\t\t/**/\n\n/* HAS_SETNETENT:\n *\tThis symbol, if defined, indicates that the setnetent() routine is\n *\tavailable.\n */\n/*#define HAS_SETNETENT\t\t/**/\n\n/* HAS_SETPROTOENT:\n *\tThis symbol, if defined, indicates that the setprotoent() routine is\n *\tavailable.\n */\n/*#define HAS_SETPROTOENT\t\t/**/\n\n/* HAS_SETPGRP:\n *\tThis symbol, if defined, indicates that the setpgrp routine is\n *\tavailable to set the current process group.\n */\n/* USE_BSD_SETPGRP:\n *\tThis symbol, if defined, indicates that setpgrp needs two\n *\targuments whereas USG one needs none.  See also HAS_SETPGID\n *\tfor a POSIX interface.\n */\n/*#define HAS_SETPGRP\t\t/**/\n/*#define USE_BSD_SETPGRP\t/**/\n\n/* HAS_SETPROCTITLE:\n *\tThis symbol, if defined, indicates that the setproctitle routine is\n *\tavailable to set process title.\n */\n/*#define HAS_SETPROCTITLE\t\t/**/\n\n/* HAS_SETPWENT:\n *\tThis symbol, if defined, indicates that the setpwent routine is\n *\tavailable for initializing sequential access of the passwd database.\n */\n/*#define HAS_SETPWENT\t\t/**/\n\n/* HAS_SETPWENT_R:\n *\tThis symbol, if defined, indicates that the setpwent_r routine\n *\tis available to setpwent re-entrantly.\n */\n/* SETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of setpwent_r.\n *\tIt is zero if d_setpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setpwent_r\n *\tis defined.\n */\n/*#define HAS_SETPWENT_R\t   /**/\n#define SETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_SETSERVENT:\n *\tThis symbol, if defined, indicates that the setservent() routine is\n *\tavailable.\n */\n/*#define HAS_SETSERVENT\t\t/**/\n\n/* HAS_SETVBUF:\n *\tThis symbol, if defined, indicates that the setvbuf routine is\n *\tavailable to change buffering on an open stdio stream.\n *\tto a line-buffered mode.\n */\n/*#define HAS_SETVBUF\t\t/**/\n\n/* HAS_SHM:\n *\tThis symbol, if defined, indicates that the entire shm*(2) library is\n *\tsupported.\n */\n/*#define HAS_SHM\t\t/**/\n\n/* HAS_SIGACTION:\n *\tThis symbol, if defined, indicates that Vr4's sigaction() routine\n *\tis available.\n */\n/*#define HAS_SIGACTION\t/**/\n\n/* HAS_SIGSETJMP:\n *\tThis variable indicates to the C program that the sigsetjmp()\n *\troutine is available to save the calling process's registers\n *\tand stack environment for later use by siglongjmp(), and\n *\tto optionally save the process's signal mask.  See\n *\tSigjmp_buf, Sigsetjmp, and Siglongjmp.\n */\n/* Sigjmp_buf:\n *\tThis is the buffer type to be used with Sigsetjmp and Siglongjmp.\n */\n/* Sigsetjmp:\n *\tThis macro is used in the same way as sigsetjmp(), but will invoke\n *\ttraditional setjmp() if sigsetjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/* Siglongjmp:\n *\tThis macro is used in the same way as siglongjmp(), but will invoke\n *\ttraditional longjmp() if siglongjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/*#define HAS_SIGSETJMP\t/**/\n#ifdef HAS_SIGSETJMP\n#define Sigjmp_buf sigjmp_buf\n#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))\n#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))\n#else\n#define Sigjmp_buf jmp_buf\n#define Sigsetjmp(buf,save_mask) setjmp((buf))\n#define Siglongjmp(buf,retval) longjmp((buf),(retval))\n#endif\n\n/* HAS_STATIC_INLINE:\n *\tThis symbol, if defined, indicates that the C compiler supports\n *\tC99-style static inline.  That is, the function can't be called\n *\tfrom another translation unit.\n */\n/* PERL_STATIC_INLINE:\n *\tThis symbol gives the best-guess incantation to use for static\n *\tinline functions.  If HAS_STATIC_INLINE is defined, this will\n *\tgive C99-style inline.  If HAS_STATIC_INLINE is not defined,\n *\tthis will give a plain 'static'.  It will always be defined\n *\tto something that gives static linkage.\n *\tPossibilities include\n *\t\tstatic inline       (c99)\n *\t\tstatic __inline__   (gcc -ansi)\n *\t\tstatic __inline     (MSVC)\n *\t\tstatic _inline      (older MSVC)\n *\t\tstatic              (c89 compilers)\n */\n/*#define HAS_STATIC_INLINE\t\t\t\t/ **/\n#define PERL_STATIC_INLINE static           \t/**/\n\n/* USE_SITECUSTOMIZE:\n *\tThis symbol, if defined, indicates that sitecustomize should\n *\tbe used.\n */\n/*#define\tUSE_SITECUSTOMIZE\t\t/**/\n\n/* HAS_SOCKET:\n *\tThis symbol, if defined, indicates that the BSD socket interface is\n *\tsupported.\n */\n/* HAS_SOCKETPAIR:\n *\tThis symbol, if defined, indicates that the BSD socketpair() call is\n *\tsupported.\n */\n#define\tHAS_SOCKET\t\t/**/\n/*#define\tHAS_SOCKETPAIR\t/**/\n\n/* HAS_SOCKS5_INIT:\n *\tThis symbol, if defined, indicates that the socks5_init routine is\n *\tavailable to initialize SOCKS 5.\n */\n/*#define HAS_SOCKS5_INIT\t\t/**/\n\n/* HAS_SQRTL:\n *\tThis symbol, if defined, indicates that the sqrtl routine is\n *\tavailable to do long double square roots.\n */\n/*#define HAS_SQRTL\t\t/**/\n\n/* HAS_SRAND48_R:\n *\tThis symbol, if defined, indicates that the srand48_r routine\n *\tis available to srand48 re-entrantly.\n */\n/* SRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of srand48_r.\n *\tIt is zero if d_srand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srand48_r\n *\tis defined.\n */\n/*#define HAS_SRAND48_R\t   /**/\n#define SRAND48_R_PROTO 0\t   /**/\n\n/* HAS_SRANDOM_R:\n *\tThis symbol, if defined, indicates that the srandom_r routine\n *\tis available to srandom re-entrantly.\n */\n/* SRANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of srandom_r.\n *\tIt is zero if d_srandom_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srandom_r\n *\tis defined.\n */\n/*#define HAS_SRANDOM_R\t   /**/\n#define SRANDOM_R_PROTO 0\t   /**/\n\n/* USE_STAT_BLOCKS:\n *\tThis symbol is defined if this system has a stat structure declaring\n *\tst_blksize and st_blocks.\n */\n#ifndef USE_STAT_BLOCKS\n/*#define USE_STAT_BLOCKS \t/**/\n#endif\n\n/* HAS_STRUCT_STATFS_F_FLAGS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tdoes have the f_flags member containing the mount flags of\n *\tthe filesystem containing the file.\n *\tThis kind of struct statfs is coming from <sys/mount.h> (BSD 4.3),\n *\tnot from <sys/statfs.h> (SYSV).  Older BSDs (like Ultrix) do not\n *\thave statfs() and struct statfs, they have ustat() and getmnt()\n *\twith struct ustat and struct fs_data.\n */\n/*#define HAS_STRUCT_STATFS_F_FLAGS\t\t/**/\n\n/* HAS_STRUCT_STATFS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_STATFS\t/**/\n\n/* HAS_FSTATVFS:\n *\tThis symbol, if defined, indicates that the fstatvfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATVFS\t\t/**/\n\n/* USE_STDIO_PTR:\n *\tThis symbol is defined if the _ptr and _cnt fields (or similar)\n *\tof the stdio FILE structure can be used to access the stdio buffer\n *\tfor a file handle.  If this is defined, then the FILE_ptr(fp)\n *\tand FILE_cnt(fp) macros will also be defined and should be used\n *\tto access these fields.\n */\n/* FILE_ptr:\n *\tThis macro is used to access the _ptr field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_PTR_LVALUE:\n *\tThis symbol is defined if the FILE_ptr macro can be used as an\n *\tlvalue.\n */\n/* FILE_cnt:\n *\tThis macro is used to access the _cnt field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_CNT_LVALUE:\n *\tThis symbol is defined if the FILE_cnt macro can be used as an\n *\tlvalue.\n */\n/* STDIO_PTR_LVAL_SETS_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n has the side effect of decreasing the\n *\tvalue of File_cnt(fp) by n.\n */\n/* STDIO_PTR_LVAL_NOCHANGE_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n leaves File_cnt(fp) unchanged.\n */\n/*#define USE_STDIO_PTR \t/**/\n#ifdef USE_STDIO_PTR\n#define FILE_ptr(fp)\n/*#define STDIO_PTR_LVALUE \t\t/**/\n#define FILE_cnt(fp)\n/*#define STDIO_CNT_LVALUE \t\t/**/\n/*#define STDIO_PTR_LVAL_SETS_CNT\t/**/\n/*#define STDIO_PTR_LVAL_NOCHANGE_CNT\t/**/\n#endif\n\n/* USE_STDIO_BASE:\n *\tThis symbol is defined if the _base field (or similar) of the\n *\tstdio FILE structure can be used to access the stdio buffer for\n *\ta file handle.  If this is defined, then the FILE_base(fp) macro\n *\twill also be defined and should be used to access this field.\n *\tAlso, the FILE_bufsiz(fp) macro will be defined and should be used\n *\tto determine the number of bytes in the buffer.  USE_STDIO_BASE\n *\twill never be defined unless USE_STDIO_PTR is.\n */\n/* FILE_base:\n *\tThis macro is used to access the _base field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_BASE is defined.\n */\n/* FILE_bufsiz:\n *\tThis macro is used to determine the number of bytes in the I/O\n *\tbuffer pointed to by _base field (or equivalent) of the FILE\n *\tstructure pointed to its argument. This macro will always be defined\n *\tif USE_STDIO_BASE is defined.\n */\n/*#define USE_STDIO_BASE \t/**/\n#ifdef USE_STDIO_BASE\n#define FILE_base(fp)\n#define FILE_bufsiz(fp)\n#endif\n\n/* HAS_SYS_ERRLIST:\n *\tThis symbol, if defined, indicates that the sys_errlist array is\n *\tavailable to translate error numbers to strings. The extern int\n *\tsys_nerr gives the size of that table.\n */\n#define HAS_SYS_ERRLIST\t/**/\n\n/* HAS_STRERROR_R:\n *\tThis symbol, if defined, indicates that the strerror_r routine\n *\tis available to strerror re-entrantly.\n */\n/* STRERROR_R_PROTO:\n *\tThis symbol encodes the prototype of strerror_r.\n *\tIt is zero if d_strerror_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_strerror_r\n *\tis defined.\n */\n/*#define HAS_STRERROR_R\t   /**/\n#define STRERROR_R_PROTO 0\t   /**/\n\n/* HAS_STRTOLD:\n *\tThis symbol, if defined, indicates that the strtold routine is\n *\tavailable to convert strings to long doubles.\n */\n/*#define HAS_STRTOLD\t\t/**/\n\n/* HAS_STRTOLL:\n *\tThis symbol, if defined, indicates that the strtoll routine is\n *\tavailable to convert strings to long longs.\n */\n/*#define HAS_STRTOLL\t\t/**/\n\n/* HAS_STRTOQ:\n *\tThis symbol, if defined, indicates that the strtoq routine is\n *\tavailable to convert strings to long longs (quads).\n */\n/*#define HAS_STRTOQ\t\t/**/\n\n/* HAS_STRTOUL:\n *\tThis symbol, if defined, indicates that the strtoul routine is\n *\tavailable to provide conversion of strings to unsigned long.\n */\n#define HAS_STRTOUL\t/**/\n\n/* HAS_STRTOULL:\n *\tThis symbol, if defined, indicates that the strtoull routine is\n *\tavailable to convert strings to unsigned long longs.\n */\n/*#define HAS_STRTOULL\t\t/**/\n\n/* HAS_STRTOUQ:\n *\tThis symbol, if defined, indicates that the strtouq routine is\n *\tavailable to convert strings to unsigned long longs (quads).\n */\n/*#define HAS_STRTOUQ\t\t/**/\n\n/* HAS_TELLDIR_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the telldir() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern long telldir(DIR*);\n */\n#define\tHAS_TELLDIR_PROTO\t/**/\n\n/* HAS_TIME:\n *\tThis symbol, if defined, indicates that the time() routine exists.\n */\n/* Time_t:\n *\tThis symbol holds the type returned by time(). It can be long,\n *\tor time_t on BSD sites (in which case <sys/types.h> should be\n *\tincluded).\n */\n#define HAS_TIME\t\t/**/\n#define Time_t time_t\t\t/* Time type */\n\n/* HAS_TIMES:\n *\tThis symbol, if defined, indicates that the times() routine exists.\n *\tNote that this became obsolete on some systems (SUNOS), which now\n * use getrusage(). It may be necessary to include <sys/times.h>.\n */\n#define HAS_TIMES\t\t/**/\n\n/* HAS_TMPNAM_R:\n *\tThis symbol, if defined, indicates that the tmpnam_r routine\n *\tis available to tmpnam re-entrantly.\n */\n/* TMPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of tmpnam_r.\n *\tIt is zero if d_tmpnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_tmpnam_r\n *\tis defined.\n */\n/*#define HAS_TMPNAM_R\t   /**/\n#define TMPNAM_R_PROTO 0\t   /**/\n\n/* HAS_UALARM:\n *\tThis symbol, if defined, indicates that the ualarm routine is\n *\tavailable to do alarms with microsecond granularity.\n */\n/*#define HAS_UALARM\t\t/**/\n\n/* HAS_UNION_SEMUN:\n *\tThis symbol, if defined, indicates that the union semun is\n *\tdefined by including <sys/sem.h>.  If not, the user code\n *\tprobably needs to define it as:\n *\tunion semun {\n *\t    int val;\n *\t    struct semid_ds *buf;\n *\t    unsigned short *array;\n *\t}\n */\n/* USE_SEMCTL_SEMUN:\n *\tThis symbol, if defined, indicates that union semun is\n *\tused for semctl IPC_STAT.\n */\n/* USE_SEMCTL_SEMID_DS:\n *\tThis symbol, if defined, indicates that struct semid_ds * is\n *\tused for semctl IPC_STAT.\n */\n#define HAS_UNION_SEMUN\t/**/\n/*#define USE_SEMCTL_SEMUN\t/**/\n/*#define USE_SEMCTL_SEMID_DS\t/**/\n\n/* HAS_UNORDERED:\n *\tThis symbol, if defined, indicates that the unordered routine is\n *\tavailable to check whether two doubles are unordered\n *\t(effectively: whether either of them is NaN)\n */\n/*#define HAS_UNORDERED\t\t/**/\n\n/* HAS_UNSETENV:\n *\tThis symbol, if defined, indicates that the unsetenv () routine is\n *\tavailable for use.\n */\n/*#define HAS_UNSETENV\t\t/**/\n\n/* HAS_USTAT:\n *\tThis symbol, if defined, indicates that the ustat system call is\n *\tavailable to query file system statistics by dev_t.\n */\n/*#define HAS_USTAT\t\t/**/\n\n/* HAS_VFORK:\n *\tThis symbol, if defined, indicates that vfork() exists.\n */\n/*#define HAS_VFORK\t/**/\n\n/* Signal_t:\n *\tThis symbol's value is either \"void\" or \"int\", corresponding to the\n *\tappropriate return type of a signal handler.  Thus, you can declare\n *\ta signal handler using \"Signal_t (*handler)()\", and define the\n *\thandler using \"Signal_t handler(sig)\".\n */\n#define Signal_t void\t/* Signal handler's return type */\n\n/* HAS_WRITEV:\n *\tThis symbol, if defined, indicates that the writev routine is\n *\tavailable to do scatter writes.\n */\n/*#define HAS_WRITEV\t\t/**/\n\n/* DEFAULT_INC_EXCLUDES_DOT:\n *\tThis symbol, if defined, removes the legacy default behavior of\n *\tincluding '.' at the end of @INC.\n */\n/*#define DEFAULT_INC_EXCLUDES_DOT\t/**/\n\n/* USE_DYNAMIC_LOADING:\n *\tThis symbol, if defined, indicates that dynamic loading of\n *\tsome sort is available.\n */\n#define USE_DYNAMIC_LOADING\t\t/**/\n\n/* DOUBLESIZE:\n *\tThis symbol contains the size of a double, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define DOUBLESIZE 8\t\t/**/\n\n/* DOUBLE_STYLE_IEEE\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit IEEE 754.\n */\n/* DOUBLE_HAS_INF\n *\tThis symbol, if defined, indicates that the double has\n *\tthe infinity.\n */\n/* DOUBLE_HAS_NAN\n *\tThis symbol, if defined, indicates that the double has\n *\tthe not-a-number.\n */\n/* DOUBLE_HAS_NEGATIVE_ZERO\n *\tThis symbol, if defined, indicates that the double has\n *\tthe negative_zero.\n */\n/* DOUBLE_HAS_SUBNORMALS\n *\tThis symbol, if defined, indicates that the double has\n *\tthe subnormals (denormals).\n */\n#define DOUBLE_STYLE_IEEE\n#define DOUBLE_HAS_INF\n#define DOUBLE_HAS_INF\n#define DOUBLE_HAS_NEGATIVE_ZERO\n#define DOUBLE_HAS_SUBNORMALS\n\n/* DOUBLEINFBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes for the double precision infinity.\n */\n/* DOUBLENANBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes (0xHH) for the double precision not-a-number.\n */\n/* LONGDBLINFBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes for the long double precision infinity.\n */\n/* LONGDBLNANBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes (0xHH) for the long double precision not-a-number.\n */\n#define DOUBLEINFBYTES 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f\t\t/**/\n#define DOUBLENANBYTES 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f\t\t/**/\n#define LONGDBLINFBYTES 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7f\t\t/**/\n#define LONGDBLNANBYTES 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f\t\t/**/\n\n/* DOUBLEMANTBITS:\n *\tThis symbol, if defined, tells how many mantissa bits\n *\tthere are in double precision floating point format.\n *      Note that this is usually DBL_MANT_DIG minus one, since\n *      with the standard IEEE 754 formats DBL_MANT_DIG includes\n *\tthe implicit bit, which doesn't really exist.\n */\n#define DOUBLEMANTBITS 52\n\n/* LONGDBLMANTBITS:\n *\tThis symbol, if defined, tells how many mantissa bits\n *\tthere are in long double precision floating point format.\n *      Note that this can be LDBL_MANT_DIG minus one,\n *      since LDBL_MANT_DIG can include the IEEE 754 implicit bit.\n *      The common x86-style 80-bit long double does not have\n *\tan implicit bit.\n */\n#define LONGDBLMANTBITS 52\n\n/* EBCDIC:\n *     This symbol, if defined, indicates that this system uses\n *\tEBCDIC encoding.\n */\n/*#define\tEBCDIC \t\t/**/\n\n/* FFLUSH_NULL:\n *\tThis symbol, if defined, tells that fflush(NULL) does flush\n *\tall pending stdio output.\n */\n/* FFLUSH_ALL:\n *\tThis symbol, if defined, tells that to flush\n *\tall pending stdio output one must loop through all\n *\tthe stdio file handles stored in an array and fflush them.\n *\tNote that if fflushNULL is defined, fflushall will not\n *\teven be probed for and will be left undefined.\n */\n#define\tFFLUSH_NULL \t\t/**/\n/*#define\tFFLUSH_ALL \t\t/**/\n\n/* Fpos_t:\n *\tThis symbol holds the type used to declare file positions in libc.\n *\tIt can be fpos_t, long, uint, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Fpos_t fpos_t\t\t/* File position type */\n\n/* Gid_t_f:\n *\tThis symbol defines the format string used for printing a Gid_t.\n */\n#define\tGid_t_f\t\t\"ld\"\t\t/**/\n\n/* Gid_t_sign:\n *\tThis symbol holds the signedess of a Gid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Gid_t_sign\t-1\t\t/* GID sign */\n\n/* Gid_t_size:\n *\tThis symbol holds the size of a Gid_t in bytes.\n */\n#define Gid_t_size 4\t\t/* GID size */\n\n/* Gid_t:\n *\tThis symbol holds the return type of getgid() and the type of\n *\targument to setrgid() and related functions.  Typically,\n *\tit is the type of group ids in the kernel. It can be int, ushort,\n *\tgid_t, etc... It may be necessary to include <sys/types.h> to get\n *\tany typedef'ed information.\n */\n#define Gid_t gid_t\t\t/* Type for getgid(), etc... */\n\n/* Groups_t:\n *\tThis symbol holds the type used for the second argument to\n *\tgetgroups() and setgroups().  Usually, this is the same as\n *\tgidtype (gid_t) , but sometimes it isn't.\n *\tIt can be int, ushort, gid_t, etc...\n *\tIt may be necessary to include <sys/types.h> to get any\n *\ttypedef'ed information.  This is only required if you have\n *\tgetgroups() or setgroups()..\n */\n#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)\n#define Groups_t gid_t\t/* Type for 2nd arg to [sg]etgroups() */\n#endif\n\n/* DB_Prefix_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is u_int32_t.\n */\n/* DB_Hash_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is size_t.\n */\n/* DB_VERSION_MAJOR_CFG:\n *\tThis symbol, if defined, defines the major version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n */\n/* DB_VERSION_MINOR_CFG:\n *\tThis symbol, if defined, defines the minor version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n/* DB_VERSION_PATCH_CFG:\n *\tThis symbol, if defined, defines the patch version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n#define DB_Hash_t\tint\t\t/**/\n#define DB_Prefix_t\tint  \t/**/\n#define DB_VERSION_MAJOR_CFG\tundef  \t/**/\n#define DB_VERSION_MINOR_CFG\tundef  \t/**/\n#define DB_VERSION_PATCH_CFG\tundef  \t/**/\n\n/* I_FP_CLASS:\n *\tThis symbol, if defined, indicates that <fp_class.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP_CLASS\t\t/**/\n\n/* I_GRP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <grp.h>.\n */\n/* GRPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct group\n *\tin <grp.h> contains gr_passwd.\n */\n/*#define I_GRP\t\t/**/\n/*#define GRPASSWD\t/**/\n\n/* I_IEEEFP:\n *\tThis symbol, if defined, indicates that <ieeefp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_IEEEFP\t\t/**/\n\n/* I_INTTYPES:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <inttypes.h>.\n */\n/*#define   I_INTTYPES                /**/\n\n/* I_LIBUTIL:\n *\tThis symbol, if defined, indicates that <libutil.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LIBUTIL\t\t/**/\n\n/* I_MACH_CTHREADS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <mach/cthreads.h>.\n */\n/*#define   I_MACH_CTHREADS\t/**/\n\n/* I_MNTENT:\n *\tThis symbol, if defined, indicates that <mntent.h> exists and\n *\tshould be included.\n */\n/*#define\tI_MNTENT\t\t/**/\n\n/* I_NETDB:\n *\tThis symbol, if defined, indicates that <netdb.h> exists and\n *\tshould be included.\n */\n/*#define I_NETDB\t\t/**/\n\n/* I_NETINET_TCP:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <netinet/tcp.h>.\n */\n/*#define   I_NETINET_TCP                /**/\n\n/* I_POLL:\n *\tThis symbol, if defined, indicates that <poll.h> exists and\n *\tshould be included.\n */\n/*#define\tI_POLL\t\t/**/\n\n/* I_PROT:\n *\tThis symbol, if defined, indicates that <prot.h> exists and\n *\tshould be included.\n */\n/*#define\tI_PROT\t\t/**/\n\n/* I_PTHREAD:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <pthread.h>.\n */\n/*#define   I_PTHREAD\t/**/\n\n/* I_PWD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pwd.h>.\n */\n/* PWQUOTA:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_quota.\n */\n/* PWAGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_age.\n */\n/* PWCHANGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_change.\n */\n/* PWCLASS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_class.\n */\n/* PWEXPIRE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_expire.\n */\n/* PWCOMMENT:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_comment.\n */\n/* PWGECOS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_gecos.\n */\n/* PWPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_passwd.\n */\n/*#define I_PWD\t\t/**/\n/*#define PWQUOTA\t/**/\n/*#define PWAGE\t/**/\n/*#define PWCHANGE\t/**/\n/*#define PWCLASS\t/**/\n/*#define PWEXPIRE\t/**/\n/*#define PWCOMMENT\t/**/\n/*#define PWGECOS\t/**/\n/*#define PWPASSWD\t/**/\n\n/* I_SHADOW:\n *\tThis symbol, if defined, indicates that <shadow.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SHADOW\t\t/**/\n\n/* I_SOCKS:\n *\tThis symbol, if defined, indicates that <socks.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SOCKS\t\t/**/\n\n/* I_SUNMATH:\n *\tThis symbol, if defined, indicates that <sunmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SUNMATH\t\t/**/\n\n/* I_SYSLOG:\n *\tThis symbol, if defined, indicates that <syslog.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSLOG\t\t/**/\n\n/* I_SYSMODE:\n *\tThis symbol, if defined, indicates that <sys/mode.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSMODE\t\t/**/\n\n/* I_SYS_MOUNT:\n *\tThis symbol, if defined, indicates that <sys/mount.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_MOUNT\t\t/**/\n\n/* I_SYS_STATFS:\n *\tThis symbol, if defined, indicates that <sys/statfs.h> exists.\n */\n/*#define\tI_SYS_STATFS\t\t/**/\n\n/* I_SYS_STATVFS:\n *\tThis symbol, if defined, indicates that <sys/statvfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_STATVFS\t\t/**/\n\n/* I_SYSUIO:\n *\tThis symbol, if defined, indicates that <sys/uio.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUIO\t\t/**/\n\n/* I_SYSUTSNAME:\n *\tThis symbol, if defined, indicates that <sys/utsname.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUTSNAME\t\t/**/\n\n/* I_SYS_VFS:\n *\tThis symbol, if defined, indicates that <sys/vfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_VFS\t\t/**/\n\n/* I_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <time.h>.\n */\n/* I_SYS_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h>.\n */\n/* I_SYS_TIME_KERNEL:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h> with KERNEL defined.\n */\n/* HAS_TM_TM_ZONE:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_zone field.\n */\n/* HAS_TM_TM_GMTOFF:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_gmtoff field.\n */\n/*#define I_TIME\t\t/**/\n/*#define I_SYS_TIME\t\t/**/\n/*#define I_SYS_TIME_KERNEL\t\t/**/\n/*#define HAS_TM_TM_ZONE\t\t/**/\n/*#define HAS_TM_TM_GMTOFF\t\t/**/\n\n/* I_USTAT:\n *\tThis symbol, if defined, indicates that <ustat.h> exists and\n *\tshould be included.\n */\n/*#define\tI_USTAT\t\t/**/\n\n/* PERL_INC_VERSION_LIST:\n *\tThis variable specifies the list of subdirectories in over\n *\twhich perl.c:incpush() and lib/lib.pm will automatically\n *\tsearch when adding directories to @INC, in a format suitable\n *\tfor a C initialization string.  See the inc_version_list entry\n *\tin Porting/Glossary for more details.\n */\n#define PERL_INC_VERSION_LIST 0\t\t/**/\n\n/* INSTALL_USR_BIN_PERL:\n *\tThis symbol, if defined, indicates that Perl is to be installed\n * \talso as /usr/bin/perl.\n */\n/*#define INSTALL_USR_BIN_PERL\t/**/\n\n/* PERL_PRIfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for output.\n */\n/* PERL_PRIgldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'g') for output.\n */\n/* PERL_PRIeldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'e') for output.\n */\n/* PERL_SCNfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for input.\n */\n/*#define PERL_PRIfldbl\t\"f\"\t/**/\n/*#define PERL_PRIgldbl\t\"g\"\t/**/\n/*#define PERL_PRIeldbl\t\"e\"\t/**/\n/*#define PERL_SCNfldbl\tundef\t/**/\n\n/* Off_t:\n *\tThis symbol holds the type used to declare offsets in the kernel.\n *\tIt can be int, long, off_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n/* LSEEKSIZE:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n/* Off_t_size:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n#define Off_t long\t\t/* <offset> type */\n#define LSEEKSIZE 4\t\t/* <offset> size */\n#define Off_t_size 4\t/* <offset> size */\n\n/* Free_t:\n *\tThis variable contains the return type of free().  It is usually\n * void, but occasionally int.\n */\n/* Malloc_t:\n *\tThis symbol is the type of pointer returned by malloc and realloc.\n */\n#define Malloc_t void *\t\t\t/**/\n#define Free_t void\t\t\t/**/\n\n/* PERL_MALLOC_WRAP:\n *\tThis symbol, if defined, indicates that we'd like malloc wrap checks.\n */\n#define PERL_MALLOC_WRAP\t\t/**/\n\n/* MYMALLOC:\n *\tThis symbol, if defined, indicates that we're using our own malloc.\n */\n#define MYMALLOC\t\t\t/**/\n\n/* Mode_t:\n *\tThis symbol holds the type used to declare file modes\n *\tfor systems calls.  It is usually mode_t, but may be\n *\tint or unsigned short.  It may be necessary to include <sys/types.h>\n *\tto get any typedef'ed information.\n */\n#define Mode_t mode_t\t /* file mode parameter for system calls */\n\n/* VAL_O_NONBLOCK:\n *\tThis symbol is to be used during open() or fcntl(F_SETFL) to turn on\n *\tnon-blocking I/O for the file descriptor. Note that there is no way\n *\tback, i.e. you cannot turn it blocking again this way. If you wish to\n *\talternatively switch between blocking and non-blocking, use the\n *\tioctl(FIOSNBIO) call instead, but that is not supported by all devices.\n */\n/* VAL_EAGAIN:\n *\tThis symbol holds the errno error code set by read() when no data was\n *\tpresent on the non-blocking file descriptor.\n */\n/* RD_NODATA:\n *\tThis symbol holds the return code from read() when no data is present\n *\ton the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is\n *\tnot defined, then you can't distinguish between no data and EOF by\n *\tissuing a read(). You'll have to find another way to tell for sure!\n */\n/* EOF_NONBLOCK:\n *\tThis symbol, if defined, indicates to the C program that a read() on\n *\ta non-blocking file descriptor will return 0 on EOF, and not the value\n *\theld in RD_NODATA (-1 usually, in that case!).\n */\n#define VAL_O_NONBLOCK O_NONBLOCK\n#define VAL_EAGAIN EAGAIN\n#define RD_NODATA -1\n#define EOF_NONBLOCK\n\n/* NEED_VA_COPY:\n *\tThis symbol, if defined, indicates that the system stores\n *\tthe variable argument list datatype, va_list, in a format\n *\tthat cannot be copied by simple assignment, so that some\n *\tother means must be used when copying is required.\n *\tAs such systems vary in their provision (or non-provision)\n *\tof copying mechanisms, handy.h defines a platform-\n *\tindependent macro, Perl_va_copy(src, dst), to do the job.\n */\n/*#define\tNEED_VA_COPY\t\t/**/\n\n/* Netdb_host_t:\n *\tThis symbol holds the type used for the 1st argument\n *\tto gethostbyaddr().\n */\n/* Netdb_hlen_t:\n *\tThis symbol holds the type used for the 2nd argument\n *\tto gethostbyaddr().\n */\n/* Netdb_name_t:\n *\tThis symbol holds the type used for the argument to\n *\tgethostbyname().\n */\n/* Netdb_net_t:\n *\tThis symbol holds the type used for the 1st argument to\n *\tgetnetbyaddr().\n */\n#define Netdb_host_t\t\tchar * /**/\n#define Netdb_hlen_t\t\tint /**/\n#define Netdb_name_t\t\tchar * /**/\n#define Netdb_net_t\t\tlong /**/\n\n/* PERL_OTHERLIBDIRS:\n *\tThis variable contains a colon-separated set of paths for the perl\n *\tbinary to search for additional library files or modules.\n *\tThese directories will be tacked to the end of @INC.\n *\tPerl will automatically search below each path for version-\n *\tand architecture-specific directories.  See PERL_INC_VERSION_LIST\n *\tfor more details.\n */\n/*#define PERL_OTHERLIBDIRS \"\"\t\t/**/\n\n/* HAS_QUAD:\n *\tThis symbol, if defined, tells that there's a 64-bit integer type,\n *\tQuad_t, and its unsigned counterpar, Uquad_t. QUADKIND will be one\n *\tof QUAD_IS_INT, QUAD_IS_LONG, QUAD_IS_LONG_LONG, or QUAD_IS_INT64_T.\n */\n/*#define HAS_QUAD\t/**/\n#ifdef HAS_QUAD\n#   define Quad_t __int64\t/**/\n#   define Uquad_t unsigned __int64\t/**/\n#   define QUADKIND 5\t/**/\n#   define QUAD_IS_INT\t1\n#   define QUAD_IS_LONG\t2\n#   define QUAD_IS_LONG_LONG\t3\n#   define QUAD_IS_INT64_T\t4\n#endif\n\n/* IVTYPE:\n *\tThis symbol defines the C type used for Perl's IV.\n */\n/* UVTYPE:\n *\tThis symbol defines the C type used for Perl's UV.\n */\n/* I8TYPE:\n *\tThis symbol defines the C type used for Perl's I8.\n */\n/* U8TYPE:\n *\tThis symbol defines the C type used for Perl's U8.\n */\n/* I16TYPE:\n *\tThis symbol defines the C type used for Perl's I16.\n */\n/* U16TYPE:\n *\tThis symbol defines the C type used for Perl's U16.\n */\n/* I32TYPE:\n *\tThis symbol defines the C type used for Perl's I32.\n */\n/* U32TYPE:\n *\tThis symbol defines the C type used for Perl's U32.\n */\n/* I64TYPE:\n *\tThis symbol defines the C type used for Perl's I64.\n */\n/* U64TYPE:\n *\tThis symbol defines the C type used for Perl's U64.\n */\n/* NVTYPE:\n *\tThis symbol defines the C type used for Perl's NV.\n */\n/* IVSIZE:\n *\tThis symbol contains the sizeof(IV).\n */\n/* UVSIZE:\n *\tThis symbol contains the sizeof(UV).\n */\n/* I8SIZE:\n *\tThis symbol contains the sizeof(I8).\n */\n/* U8SIZE:\n *\tThis symbol contains the sizeof(U8).\n */\n/* I16SIZE:\n *\tThis symbol contains the sizeof(I16).\n */\n/* U16SIZE:\n *\tThis symbol contains the sizeof(U16).\n */\n/* I32SIZE:\n *\tThis symbol contains the sizeof(I32).\n */\n/* U32SIZE:\n *\tThis symbol contains the sizeof(U32).\n */\n/* I64SIZE:\n *\tThis symbol contains the sizeof(I64).\n */\n/* U64SIZE:\n *\tThis symbol contains the sizeof(U64).\n */\n/* NVSIZE:\n *\tThis symbol contains the sizeof(NV).\n */\n/* NV_PRESERVES_UV:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tcan preserve all the bits of a variable of type UVTYPE.\n */\n/* NV_PRESERVES_UV_BITS:\n *\tThis symbol contains the number of bits a variable of type NVTYPE\n *\tcan preserve of a variable of type UVTYPE.\n */\n/* NV_OVERFLOWS_INTEGERS_AT\n *\tThis symbol gives the largest integer value that NVs can hold. This\n *\tvalue + 1.0 cannot be stored accurately. It is expressed as constant\n *\tfloating point expression to reduce the chance of decimale/binary\n *\tconversion issues. If it can not be determined, the value 0 is given.\n */\n/* NV_ZERO_IS_ALLBITS_ZERO\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tstores 0.0 in memory as all bits zero.\n */\n#define\tIVTYPE\t\tlong\t\t/**/\n#define\tUVTYPE\t\tunsigned long\t\t/**/\n#define\tI8TYPE\t\tchar\t\t/**/\n#define\tU8TYPE\t\tunsigned char\t\t/**/\n#define\tI16TYPE\t\tshort\t/**/\n#define\tU16TYPE\t\tunsigned short\t/**/\n#define\tI32TYPE\t\tlong\t/**/\n#define\tU32TYPE\t\tunsigned long\t/**/\n#ifdef HAS_QUAD\n#define\tI64TYPE\t\t__int64\t/**/\n#define\tU64TYPE\t\tunsigned __int64\t/**/\n#endif\n#define\tNVTYPE\t\tdouble\t\t/**/\n#define\tIVSIZE\t\t4\t\t/**/\n#define\tUVSIZE\t\t4\t\t/**/\n#define\tI8SIZE\t\t1\t\t/**/\n#define\tU8SIZE\t\t1\t\t/**/\n#define\tI16SIZE\t\t2\t/**/\n#define\tU16SIZE\t\t2\t/**/\n#define\tI32SIZE\t\t4\t/**/\n#define\tU32SIZE\t\t4\t/**/\n#ifdef HAS_QUAD\n#define\tI64SIZE\t\t8\t/**/\n#define\tU64SIZE\t\t8\t/**/\n#endif\n#define\tNVSIZE\t\t8\t\t/**/\n#define\tNV_PRESERVES_UV\n#define\tNV_PRESERVES_UV_BITS\tundef\n#define\tNV_OVERFLOWS_INTEGERS_AT\t256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0\n#undef\tNV_ZERO_IS_ALLBITS_ZERO\n#if UVSIZE == 8\n#   ifdef BYTEORDER\n#       if BYTEORDER == 0x1234\n#           undef BYTEORDER\n#           define BYTEORDER 0x12345678\n#       else\n#           if BYTEORDER == 0x4321\n#               undef BYTEORDER\n#               define BYTEORDER 0x87654321\n#           endif\n#       endif\n#   endif\n#endif\n\n/* IVdf:\n *\tThis symbol defines the format string used for printing a Perl IV\n *\tas a signed decimal integer.\n */\n/* UVuf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned decimal integer.\n */\n/* UVof:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned octal integer.\n */\n/* UVxf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in lowercase abcdef.\n */\n/* UVXf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in uppercase ABCDEF.\n */\n/* NVef:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %e-ish floating point format.\n */\n/* NVff:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %f-ish floating point format.\n */\n/* NVgf:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %g-ish floating point format.\n */\n#define\tIVdf\t\t\"ld\"\t\t/**/\n#define\tUVuf\t\t\"lu\"\t\t/**/\n#define\tUVof\t\t\"lo\"\t\t/**/\n#define\tUVxf\t\t\"lx\"\t\t/**/\n#define\tUVXf\t\t\"lX\"\t\t/**/\n#define\tNVef\t\t\"e\"\t\t/**/\n#define\tNVff\t\t\"f\"\t\t/**/\n#define\tNVgf\t\t\"g\"\t\t/**/\n\n/* Pid_t:\n *\tThis symbol holds the type used to declare process ids in the kernel.\n *\tIt can be int, uint, pid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Pid_t int\t\t/* PID type */\n\n/* PRIVLIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n */\n/* PRIVLIB_EXP:\n *\tThis symbol contains the ~name expanded version of PRIVLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define PRIVLIB \"\\\\Storage Card\\\\perl58m\\\\lib\"\t\t/**/\n#define PRIVLIB_EXP (PerlEnv_lib_path(PERL_VERSION_STRING, NULL))\t/**/\n\n/* PTRSIZE:\n *\tThis symbol contains the size of a pointer, so that the C preprocessor\n *\tcan make decisions based on it.  It will be sizeof(void *) if\n *\tthe compiler supports (void *); otherwise it will be\n *\tsizeof(char *).\n */\n#define PTRSIZE 4\t\t/**/\n\n/* Drand01:\n *\tThis macro is to be used to generate uniformly distributed\n *\trandom numbers over the range [0., 1.[.  You may have to supply\n *\tan 'extern double drand48();' in your program since SunOS 4.1.3\n *\tdoesn't provide you with anything relevant in its headers.\n *\tSee HAS_DRAND48_PROTO.\n */\n/* Rand_seed_t:\n *\tThis symbol defines the type of the argument of the\n *\trandom seed function.\n */\n/* seedDrand01:\n *\tThis symbol defines the macro to be used in seeding the\n *\trandom number generator (see Drand01).\n */\n/* RANDBITS:\n *\tThis symbol indicates how many bits are produced by the\n *\tfunction used to generate normalized random numbers.\n *\tValues include 15, 16, 31, and 48.\n */\n#define Drand01()\t\t(rand()/(double)((unsigned)1<<RANDBITS))\t\t/**/\n#define Rand_seed_t\t\tunsigned\t\t/**/\n#define seedDrand01(x)\tsrand((Rand_seed_t)x)\t/**/\n#define RANDBITS\t\t15\t\t/**/\n\n/* SELECT_MIN_BITS:\n *\tThis symbol holds the minimum number of bits operated by select.\n *\tThat is, if you do select(n, ...), how many bits at least will be\n *\tcleared in the masks if some activity is detected.  Usually this\n *\tis either n or 32*ceil(n/32), especially many little-endians do\n *\tthe latter.  This is only useful if you have select(), naturally.\n */\n#define SELECT_MIN_BITS \t32\t/**/\n\n/* Select_fd_set_t:\n *\tThis symbol holds the type used for the 2nd, 3rd, and 4th\n *\targuments to select.  Usually, this is 'fd_set *', if HAS_FD_SET\n *\tis defined, and 'int *' otherwise.  This is only useful if you\n *\thave select(), of course.\n */\n#define Select_fd_set_t \tPerl_fd_set *\t/**/\n\n/* SIG_NAME:\n *\tThis symbol contains a list of signal names in order of\n *\tsignal number. This is intended\n *\tto be used as a static array initialization, like this:\n *\t\tchar *sig_name[] = { SIG_NAME };\n *\tThe signals in the list are separated with commas, and each signal\n *\tis surrounded by double quotes. There is no leading SIG in the signal\n *\tname, i.e. SIGQUIT is known as \"QUIT\".\n *\tGaps in the signal numbers (up to NSIG) are filled in with NUMnn,\n *\tetc., where nn is the actual signal number (e.g. NUM37).\n *\tThe signal number for sig_name[i] is stored in sig_num[i].\n *\tThe last element is 0 to terminate the list with a NULL.  This\n *\tcorresponds to the 0 at the end of the sig_name_init list.\n *\tNote that this variable is initialized from the sig_name_init,\n *\tnot from sig_name (which is unused).\n */\n/* SIG_NUM:\n *\tThis symbol contains a list of signal numbers, in the same order as the\n *\tSIG_NAME list. It is suitable for static array initialization, as in:\n *\t\tint sig_num[] = { SIG_NUM };\n *\tThe signals in the list are separated with commas, and the indices\n *\twithin that list and the SIG_NAME list match, so it's easy to compute\n *\tthe signal name from a number or vice versa at the price of a small\n *\tdynamic linear lookup.\n *\tDuplicates are allowed, but are moved to the end of the list.\n *\tThe signal number corresponding to sig_name[i] is sig_number[i].\n *\tif (i < NSIG) then sig_number[i] == i.\n *\tThe last element is 0, corresponding to the 0 at the end of\n *\tthe sig_name_init list.\n *\tNote that this variable is initialized from the sig_num_init,\n *\tnot from sig_num (which is unused).\n */\n/* SIG_SIZE:\n *\tThis variable contains the number of elements of the SIG_NAME\n *\tand SIG_NUM arrays, excluding the final NULL entry.\n */\n#define SIG_NAME \"ZERO\", \"NUM01\", \"INT\", \"QUIT\", \"ILL\", \"NUM05\", \"NUM06\", \"NUM07\", \"FPE\", \"KILL\", \"NUM10\", \"SEGV\", \"NUM12\", \"PIPE\", \"ALRM\", \"TERM\", \"NUM16\", \"NUM17\", \"NUM18\", \"NUM19\", \"CHLD\", \"BREAK\", \"ABRT\", \"STOP\", \"NUM24\", \"CONT\", \"CLD\", 0\t\t/**/\n#define SIG_NUM  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 20, 0\t\t/**/\n#define SIG_SIZE 27\t\t\t/**/\n\n/* SITEARCH:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-dependent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITEARCH_EXP:\n *\tThis symbol contains the ~name expanded version of SITEARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define SITEARCH \"\\\\Storage Card\\\\perl58m\\\\site\\\\lib\"\t\t/**/\n/*#define SITEARCH_EXP \"\"\t/**/\n\n/* SITELIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-independent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITELIB_EXP:\n *\tThis symbol contains the ~name expanded version of SITELIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* SITELIB_STEM:\n *\tThis define is SITELIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#define SITELIB \"\\\\Storage Card\\\\perl58m\\\\site\\\\lib\"\t\t/**/\n#define SITELIB_EXP (PerlEnv_sitelib_path(PERL_VERSION_STRING, NULL))\t/**/\n#define SITELIB_STEM \"\"\t\t/**/\n\n/* Size_t_size:\n *\tThis symbol holds the size of a Size_t in bytes.\n */\n#define Size_t_size 4\t\t/**/\n\n/* Size_t:\n *\tThis symbol holds the type used to declare length parameters\n *\tfor string functions.  It is usually size_t, but may be\n *\tunsigned long, int, etc.  It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Size_t size_t\t /* length paramater for string functions */\n\n/* Sock_size_t:\n *\tThis symbol holds the type used for the size argument of\n *\tvarious socket calls (just the base type, not the pointer-to).\n */\n#define Sock_size_t\t\tint /**/\n\n/* SSize_t:\n *\tThis symbol holds the type used by functions that return\n *\ta count of bytes or an error condition.  It must be a signed type.\n *\tIt is usually ssize_t, but may be long or int, etc.\n *\tIt may be necessary to include <sys/types.h> or <unistd.h>\n *\tto get any typedef'ed information.\n *\tWe will pick a type such that sizeof(SSize_t) == sizeof(Size_t).\n */\n#define SSize_t int\t /* signed count of bytes */\n\n/* STARTPERL:\n *\tThis variable contains the string to put in front of a perl\n *\tscript to make sure (one hopes) that it runs with perl and not\n *\tsome shell.\n */\n#define STARTPERL \"#!perl\"\t\t/**/\n\n/* STDCHAR:\n *\tThis symbol is defined to be the type of char used in stdio.h.\n *\tIt has the values \"unsigned char\" or \"char\".\n */\n#define STDCHAR char\t/**/\n\n/* HAS_STDIO_STREAM_ARRAY:\n *\tThis symbol, if defined, tells that there is an array\n *\tholding the stdio streams.\n */\n/* STDIO_STREAM_ARRAY:\n *\tThis symbol tells the name of the array holding the stdio streams.\n *\tUsual values include _iob, __iob, and __sF.\n */\n/*#define\tHAS_STDIO_STREAM_ARRAY\t/**/\n#define STDIO_STREAM_ARRAY\n\n/* Uid_t_f:\n *\tThis symbol defines the format string used for printing a Uid_t.\n */\n#define\tUid_t_f\t\t\"ld\"\t\t/**/\n\n/* Uid_t_sign:\n *\tThis symbol holds the signedess of a Uid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Uid_t_sign\t-1\t\t/* UID sign */\n\n/* Uid_t_size:\n *\tThis symbol holds the size of a Uid_t in bytes.\n */\n#define Uid_t_size 4\t\t/* UID size */\n\n/* Uid_t:\n *\tThis symbol holds the type used to declare user ids in the kernel.\n *\tIt can be int, ushort, uid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Uid_t uid_t\t\t/* UID type */\n\n/* USE_64_BIT_INT:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be employed (be they 32 or 64 bits).  The minimal possible\n *\t64-bitness is used, just enough to get 64-bit integers into Perl.\n *\tThis may mean using for example \"long longs\", while your memory\n *\tmay still be limited to 2 gigabytes.\n */\n/* USE_64_BIT_ALL:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be used (be they 32 or 64 bits).  The maximal possible\n *\t64-bitness is employed: LP64 or ILP64, meaning that you will\n *\tbe able to use more than 2 gigabytes of memory.  This mode is\n *\teven more binary incompatible than USE_64_BIT_INT. You may not\n *\tbe able to run the resulting executable in a 32-bit CPU at all or\n *\tyou may need at least to reboot your OS to 64-bit mode.\n */\n#ifndef USE_64_BIT_INT\n/*#define\tUSE_64_BIT_INT\t\t/**/\n#endif\n\n#ifndef USE_64_BIT_ALL\n/*#define\tUSE_64_BIT_ALL\t\t/**/\n#endif\n\n/* USE_LARGE_FILES:\n *\tThis symbol, if defined, indicates that large file support\n *\tshould be used when available.\n */\n#ifndef USE_LARGE_FILES\n/*#define\tUSE_LARGE_FILES\t\t/**/\n#endif\n\n/* USE_LONG_DOUBLE:\n *\tThis symbol, if defined, indicates that long doubles should\n *\tbe used when available.\n */\n#ifndef USE_LONG_DOUBLE\n/*#define\tUSE_LONG_DOUBLE\t\t/**/\n#endif\n\n/* USE_MORE_BITS:\n *\tThis symbol, if defined, indicates that 64-bit interfaces and\n *\tlong doubles should be used when available.\n */\n#ifndef USE_MORE_BITS\n/*#define\tUSE_MORE_BITS\t\t/**/\n#endif\n\n/* MULTIPLICITY:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use multiplicity.\n */\n#ifndef MULTIPLICITY\n/*#define\tMULTIPLICITY\t\t/**/\n#endif\n\n/* USE_PERLIO:\n *\tThis symbol, if defined, indicates that the PerlIO abstraction should\n *\tbe used throughout.  If not defined, stdio should be\n *\tused in a fully backward compatible manner.\n */\n#ifndef USE_PERLIO\n#define\tUSE_PERLIO\t\t/**/\n#endif\n\n/* USE_SOCKS:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use socks.\n */\n#ifndef USE_SOCKS\n/*#define\tUSE_SOCKS\t\t/**/\n#endif\n\n/* USE_ITHREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the interpreter-based threading implementation.\n */\n/* USE_5005THREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the 5.005-based threading implementation.\n */\n/* OLD_PTHREADS_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use the old draft POSIX threads API.\n */\n/* USE_REENTRANT_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\ttry to use the various _r versions of library functions.\n *\tThis is extremely experimental.\n */\n/*#define\tUSE_5005THREADS\t\t/**/\n/*#define\tUSE_ITHREADS\t\t/**/\n#if defined(USE_5005THREADS) && !defined(USE_ITHREADS)\n#define\t\tUSE_THREADS\t\t/* until src is revised*/\n#endif\n/*#define\tOLD_PTHREADS_API\t\t/**/\n/*#define\tUSE_REENTRANT_API\t/**/\n\n/* USE_DTRACE\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for DTrace.\n */\n/*#define USE_DTRACE\t\t\t/ **/\n\n/* PERL_VENDORARCH:\n *\tIf defined, this symbol contains the name of a private library.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.\n *\tIt may have a ~ on the front.\n *\tThe standard distribution will put nothing in this directory.\n *\tVendors who distribute perl may wish to place their own\n *\tarchitecture-dependent modules and extensions in this directory with\n *\t\tMakeMaker Makefile.PL INSTALLDIRS=vendor\n *\tor equivalent.  See INSTALL for details.\n */\n/* PERL_VENDORARCH_EXP:\n *\tThis symbol contains the ~name expanded version of PERL_VENDORARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define PERL_VENDORARCH \"\"\t\t/**/\n/*#define PERL_VENDORARCH_EXP \"\"\t\t/**/\n\n/* PERL_VENDORLIB_EXP:\n *\tThis symbol contains the ~name expanded version of VENDORLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* PERL_VENDORLIB_STEM:\n *\tThis define is PERL_VENDORLIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n/*#define PERL_VENDORLIB_EXP \"\"\t\t/**/\n/*#define PERL_VENDORLIB_STEM \"\"\t\t/**/\n\n/* HASATTRIBUTE_FORMAT:\n *\tCan we handle GCC attribute for checking printf-style formats\n */\n/* HASATTRIBUTE_MALLOC:\n *\tCan we handle GCC attribute for malloc-style functions.\n */\n/* HASATTRIBUTE_NONNULL:\n *\tCan we handle GCC attribute for nonnull function parms.\n */\n/* HASATTRIBUTE_NORETURN:\n *\tCan we handle GCC attribute for functions that do not return\n */\n/* HASATTRIBUTE_PURE:\n *\tCan we handle GCC attribute for pure functions\n */\n/* HASATTRIBUTE_UNUSED:\n *\tCan we handle GCC attribute for unused variables and arguments\n */\n/* HASATTRIBUTE_WARN_UNUSED_RESULT:\n *\tCan we handle GCC attribute for warning on unused results\n */\n/*#define HASATTRIBUTE_FORMAT\t/**/\n/*#define HASATTRIBUTE_NORETURN\t/**/\n/*#define HASATTRIBUTE_MALLOC\t/**/\n/*#define HASATTRIBUTE_NONNULL\t/**/\n/*#define HASATTRIBUTE_PURE\t/**/\n/*#define HASATTRIBUTE_UNUSED\t/**/\n/*#define HASATTRIBUTE_WARN_UNUSED_RESULT\t/**/\n\n/* HAS_CRYPT:\n *\tThis symbol, if defined, indicates that the crypt routine is available\n *\tto encrypt passwords and the like.\n */\n/*#define HAS_CRYPT\t\t/**/\n\n/* SETUID_SCRIPTS_ARE_SECURE_NOW:\n *\tThis symbol, if defined, indicates that the bug that prevents\n *\tsetuid scripts from being secure is not present in this kernel.\n */\n/* DOSUID:\n *\tThis symbol, if defined, indicates that the C program should\n *\tcheck the script that it is executing for setuid/setgid bits, and\n *\tattempt to emulate setuid/setgid on systems that have disabled\n *\tsetuid #! scripts because the kernel can't do it securely.\n *\tIt is up to the package designer to make sure that this emulation\n *\tis done securely.  Among other things, it should do an fstat on\n *\tthe script it just opened to make sure it really is a setuid/setgid\n *\tscript, it should make sure the arguments passed correspond exactly\n *\tto the argument on the #! line, and it should not trust any\n *\tsubprocesses to which it must pass the filename rather than the\n *\tfile descriptor of the script to be executed.\n */\n/*#define SETUID_SCRIPTS_ARE_SECURE_NOW\t/**/\n/*#define DOSUID\t\t/**/\n\n/* Shmat_t:\n *\tThis symbol holds the return type of the shmat() system call.\n *\tUsually set to 'void *' or 'char *'.\n */\n/* HAS_SHMAT_PROTOTYPE:\n *\tThis symbol, if defined, indicates that the sys/shm.h includes\n *\ta prototype for shmat().  Otherwise, it is up to the program to\n *\tguess one.  Shmat_t shmat(int, Shmat_t, int) is a good guess,\n *\tbut not always right so it should be emitted by the program only\n *\twhen HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.\n */\n#define Shmat_t void *\t/**/\n/*#define HAS_SHMAT_PROTOTYPE\t/**/\n\n/* I_NDBM:\n *\tThis symbol, if defined, indicates that <ndbm.h> exists and should\n *\tbe included.\n */\n/*#define I_NDBM\t/**/\n\n/* SH_PATH:\n *\tThis symbol contains the full pathname to the shell used on this\n *\ton this system to execute Bourne shell scripts.  Usually, this will be\n *\t/bin/sh, though it's possible that some systems will have /bin/ksh,\n *\t/bin/pdksh, /bin/ash, /bin/bash, or even something such as\n *\tD:/bin/sh.exe.\n */\n#define SH_PATH \"cmd /x /c\"  /**/\n\n/* HAS_AINTL:\n *\tThis symbol, if defined, indicates that the aintl routine is\n *\tavailable.  If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_AINTL\t\t/**/\n\n/* HAS_CLEARENV:\n *\tThis symbol, if defined, indicates that the clearenv () routine is\n *\tavailable for use.\n */\n/*#define HAS_CLEARENV\t\t/**/\n\n/* HAS_COPYSIGNL:\n *\tThis symbol, if defined, indicates that the copysignl routine is\n *\tavailable.  If aintl is also present we can emulate modfl.\n */\n/*#define HAS_COPYSIGNL\t\t/**/\n\n/* USE_CPLUSPLUS:\n *\tThis symbol, if defined, indicates that a C++ compiler was\n *\tused to compiled Perl and will be used to compile extensions.\n */\n/*#define USE_CPLUSPLUS\t\t/**/\n\n/* HAS_DBMINIT_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the dbminit() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int dbminit(char *);\n */\n/*#define\tHAS_DBMINIT_PROTO\t/**/\n\n/* HAS_DIRFD:\n *\tThis manifest constant lets the C program know that dirfd\n *\tis available.\n */\n/*#define HAS_DIRFD\t\t/**/\n\n/* HAS_FAST_STDIO:\n *\tThis symbol, if defined, indicates that the \"fast stdio\"\n *\tis available to manipulate the stdio buffers directly.\n */\n/*#define HAS_FAST_STDIO\t\t/**/\n\n/* HAS_FLOCK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the flock() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int flock(int, int);\n */\n/*#define\tHAS_FLOCK_PROTO\t/**/\n\n/* HAS_FPCLASSL:\n *\tThis symbol, if defined, indicates that the fpclassl routine is\n *\tavailable to classify long doubles.  Available for example in IRIX.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASSL\t\t/**/\n\n/* HAS_ILOGBL:\n *\tThis symbol, if defined, indicates that the ilogbl routine is\n *\tavailable.  If scalbnl is also present we can emulate frexpl.\n */\n/*#define HAS_ILOGBL\t\t/**/\n\n/* LIBM_LIB_VERSION:\n *\tThis symbol, if defined, indicates that libm exports _LIB_VERSION\n *\tand that math.h defines the enum to manipulate it.\n */\n/*#define LIBM_LIB_VERSION\t\t/**/\n\n/* HAS_NL_LANGINFO:\n *\tThis symbol, if defined, indicates that the nl_langinfo routine is\n *\tavailable to return local data.  You will also need <langinfo.h>\n *\tand therefore I_LANGINFO.\n */\n/*#define HAS_NL_LANGINFO\t\t/**/\n\n/* HAS_PROCSELFEXE:\n *\tThis symbol is defined if PROCSELFEXE_PATH is a symlink\n *\tto the absolute pathname of the executing program.\n */\n/* PROCSELFEXE_PATH:\n *\tIf HAS_PROCSELFEXE is defined this symbol is the filename\n *\tof the symbolic link pointing to the absolute pathname of\n *\tthe executing program.\n */\n/*#define HAS_PROCSELFEXE\t/**/\n#if defined(HAS_PROCSELFEXE) && !defined(PROCSELFEXE_PATH)\n#define PROCSELFEXE_PATH\t\t/**/\n#endif\n\n/* HAS_PTHREAD_ATTR_SETSCOPE:\n *\tThis symbol, if defined, indicates that the pthread_attr_setscope\n *\tsystem call is available to set the contention scope attribute of\n *\ta thread attribute object.\n */\n/*#define HAS_PTHREAD_ATTR_SETSCOPE\t\t/**/\n\n/* HAS_SCALBNL:\n *\tThis symbol, if defined, indicates that the scalbnl routine is\n *\tavailable.  If ilogbl is also present we can emulate frexpl.\n */\n/*#define HAS_SCALBNL\t\t/**/\n\n/* HAS_SIGPROCMASK:\n *\tThis symbol, if defined, indicates that the sigprocmask\n *\tsystem call is available to examine or change the signal mask\n *\tof the calling process.\n */\n/*#define HAS_SIGPROCMASK\t\t/**/\n\n/* HAS_SOCKATMARK:\n *\tThis symbol, if defined, indicates that the sockatmark routine is\n *\tavailable to test whether a socket is at the out-of-band mark.\n */\n/*#define HAS_SOCKATMARK\t\t/**/\n\n/* HAS_SOCKATMARK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sockatmark() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int sockatmark(int);\n */\n/*#define\tHAS_SOCKATMARK_PROTO\t/**/\n\n/* HAS_SETRESGID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresgid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresgid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESGID_PROTO\t/**/\n\n/* HAS_SETRESUID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresuid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresuid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESUID_PROTO\t/**/\n\n/* HAS_STRFTIME:\n *\tThis symbol, if defined, indicates that the strftime routine is\n *\tavailable to do time formatting.\n */\n/*#define HAS_STRFTIME\t\t/**/\n\n/* HAS_STRLCAT:\n *\tThis symbol, if defined, indicates that the strlcat () routine is\n *\tavailable to do string concatenation.\n */\n/*#define HAS_STRLCAT\t\t/**/\n\n/* HAS_STRLCPY:\n *\tThis symbol, if defined, indicates that the strlcpy () routine is\n *\tavailable to do string copying.\n */\n/*#define HAS_STRLCPY\t\t/**/\n\n/* HAS_SYSCALL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the syscall() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int syscall(int,  ...);\n *\t\textern int syscall(long, ...);\n */\n/*#define\tHAS_SYSCALL_PROTO\t/**/\n\n/* U32_ALIGNMENT_REQUIRED:\n *\tThis symbol, if defined, indicates that you must access\n *\tcharacter data through U32-aligned pointers.\n */\n#ifndef U32_ALIGNMENT_REQUIRED\n/*#define U32_ALIGNMENT_REQUIRED\t/**/\n#endif\n\n/* HAS_USLEEP_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the usleep() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int usleep(useconds_t);\n */\n/*#define\tHAS_USLEEP_PROTO\t/**/\n\n/* I_CRYPT:\n *\tThis symbol, if defined, indicates that <crypt.h> exists and\n *\tshould be included.\n */\n/*#define\tI_CRYPT\t\t/**/\n\n/* I_FP:\n *\tThis symbol, if defined, indicates that <fp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP\t\t/**/\n\n/* I_LANGINFO:\n *\tThis symbol, if defined, indicates that <langinfo.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LANGINFO\t\t/**/\n\n/* USE_FAST_STDIO:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use 'fast stdio'.\n *\tDefaults to define in Perls 5.8 and earlier, to undef later.\n */\n#ifndef USE_FAST_STDIO\n/*#define\tUSE_FAST_STDIO\t\t/**/\n#endif\n\n/* PERL_RELOCATABLE_INC:\n *\tThis symbol, if defined, indicates that we'd like to relocate entries\n *\tin @INC at run time based on the location of the perl binary.\n */\n#define PERL_RELOCATABLE_INC \"undef\" \t\t/**/\n\n/* HAS_CTERMID_R:\n *\tThis symbol, if defined, indicates that the ctermid_r routine\n *\tis available to ctermid re-entrantly.\n */\n/* CTERMID_R_PROTO:\n *\tThis symbol encodes the prototype of ctermid_r.\n *\tIt is zero if d_ctermid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctermid_r\n *\tis defined.\n */\n/*#define HAS_CTERMID_R\t   /**/\n#define CTERMID_R_PROTO 0\t   /**/\n\n/* HAS_ENDHOSTENT_R:\n *\tThis symbol, if defined, indicates that the endhostent_r routine\n *\tis available to endhostent re-entrantly.\n */\n/* ENDHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of endhostent_r.\n *\tIt is zero if d_endhostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endhostent_r\n *\tis defined.\n */\n/*#define HAS_ENDHOSTENT_R\t   /**/\n#define ENDHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDNETENT_R:\n *\tThis symbol, if defined, indicates that the endnetent_r routine\n *\tis available to endnetent re-entrantly.\n */\n/* ENDNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of endnetent_r.\n *\tIt is zero if d_endnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endnetent_r\n *\tis defined.\n */\n/*#define HAS_ENDNETENT_R\t   /**/\n#define ENDNETENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDPROTOENT_R:\n *\tThis symbol, if defined, indicates that the endprotoent_r routine\n *\tis available to endprotoent re-entrantly.\n */\n/* ENDPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of endprotoent_r.\n *\tIt is zero if d_endprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endprotoent_r\n *\tis defined.\n */\n/*#define HAS_ENDPROTOENT_R\t   /**/\n#define ENDPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDSERVENT_R:\n *\tThis symbol, if defined, indicates that the endservent_r routine\n *\tis available to endservent re-entrantly.\n */\n/* ENDSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of endservent_r.\n *\tIt is zero if d_endservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endservent_r\n *\tis defined.\n */\n/*#define HAS_ENDSERVENT_R\t   /**/\n#define ENDSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYADDR_R:\n *\tThis symbol, if defined, indicates that the gethostbyaddr_r routine\n *\tis available to gethostbyaddr re-entrantly.\n */\n/* GETHOSTBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyaddr_r.\n *\tIt is zero if d_gethostbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYADDR_R\t   /**/\n#define GETHOSTBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYNAME_R:\n *\tThis symbol, if defined, indicates that the gethostbyname_r routine\n *\tis available to gethostbyname re-entrantly.\n */\n/* GETHOSTBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyname_r.\n *\tIt is zero if d_gethostbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyname_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYNAME_R\t   /**/\n#define GETHOSTBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the gethostent_r routine\n *\tis available to gethostent re-entrantly.\n */\n/* GETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of gethostent_r.\n *\tIt is zero if d_gethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostent_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTENT_R\t   /**/\n#define GETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYADDR_R:\n *\tThis symbol, if defined, indicates that the getnetbyaddr_r routine\n *\tis available to getnetbyaddr re-entrantly.\n */\n/* GETNETBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyaddr_r.\n *\tIt is zero if d_getnetbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYADDR_R\t   /**/\n#define GETNETBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYNAME_R:\n *\tThis symbol, if defined, indicates that the getnetbyname_r routine\n *\tis available to getnetbyname re-entrantly.\n */\n/* GETNETBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyname_r.\n *\tIt is zero if d_getnetbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyname_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYNAME_R\t   /**/\n#define GETNETBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETNETENT_R:\n *\tThis symbol, if defined, indicates that the getnetent_r routine\n *\tis available to getnetent re-entrantly.\n */\n/* GETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of getnetent_r.\n *\tIt is zero if d_getnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetent_r\n *\tis defined.\n */\n/*#define HAS_GETNETENT_R\t   /**/\n#define GETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNAME_R:\n *\tThis symbol, if defined, indicates that the getprotobyname_r routine\n *\tis available to getprotobyname re-entrantly.\n */\n/* GETPROTOBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobyname_r.\n *\tIt is zero if d_getprotobyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobyname_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNAME_R\t   /**/\n#define GETPROTOBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNUMBER_R:\n *\tThis symbol, if defined, indicates that the getprotobynumber_r routine\n *\tis available to getprotobynumber re-entrantly.\n */\n/* GETPROTOBYNUMBER_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobynumber_r.\n *\tIt is zero if d_getprotobynumber_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobynumber_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNUMBER_R\t   /**/\n#define GETPROTOBYNUMBER_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the getprotoent_r routine\n *\tis available to getprotoent re-entrantly.\n */\n/* GETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of getprotoent_r.\n *\tIt is zero if d_getprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotoent_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOENT_R\t   /**/\n#define GETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYNAME_R:\n *\tThis symbol, if defined, indicates that the getservbyname_r routine\n *\tis available to getservbyname re-entrantly.\n */\n/* GETSERVBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyname_r.\n *\tIt is zero if d_getservbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyname_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYNAME_R\t   /**/\n#define GETSERVBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYPORT_R:\n *\tThis symbol, if defined, indicates that the getservbyport_r routine\n *\tis available to getservbyport re-entrantly.\n */\n/* GETSERVBYPORT_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyport_r.\n *\tIt is zero if d_getservbyport_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyport_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYPORT_R\t   /**/\n#define GETSERVBYPORT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT_R:\n *\tThis symbol, if defined, indicates that the getservent_r routine\n *\tis available to getservent re-entrantly.\n */\n/* GETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of getservent_r.\n *\tIt is zero if d_getservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservent_r\n *\tis defined.\n */\n/*#define HAS_GETSERVENT_R\t   /**/\n#define GETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_PTHREAD_ATFORK:\n *\tThis symbol, if defined, indicates that the pthread_atfork routine\n *\tis available to setup fork handlers.\n */\n/*#define HAS_PTHREAD_ATFORK\t\t/**/\n\n/* HAS_READDIR64_R:\n *\tThis symbol, if defined, indicates that the readdir64_r routine\n *\tis available to readdir64 re-entrantly.\n */\n/* READDIR64_R_PROTO:\n *\tThis symbol encodes the prototype of readdir64_r.\n *\tIt is zero if d_readdir64_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir64_r\n *\tis defined.\n */\n/*#define HAS_READDIR64_R\t   /**/\n#define READDIR64_R_PROTO 0\t   /**/\n\n/* HAS_SETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the sethostent_r routine\n *\tis available to sethostent re-entrantly.\n */\n/* SETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of sethostent_r.\n *\tIt is zero if d_sethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_sethostent_r\n *\tis defined.\n */\n/*#define HAS_SETHOSTENT_R\t   /**/\n#define SETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_SETLOCALE_R:\n *\tThis symbol, if defined, indicates that the setlocale_r routine\n *\tis available to setlocale re-entrantly.\n */\n/* SETLOCALE_R_PROTO:\n *\tThis symbol encodes the prototype of setlocale_r.\n *\tIt is zero if d_setlocale_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setlocale_r\n *\tis defined.\n */\n/*#define HAS_SETLOCALE_R\t   /**/\n#define SETLOCALE_R_PROTO 0\t   /**/\n\n/* HAS_SETNETENT_R:\n *\tThis symbol, if defined, indicates that the setnetent_r routine\n *\tis available to setnetent re-entrantly.\n */\n/* SETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of setnetent_r.\n *\tIt is zero if d_setnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setnetent_r\n *\tis defined.\n */\n/*#define HAS_SETNETENT_R\t   /**/\n#define SETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_SETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the setprotoent_r routine\n *\tis available to setprotoent re-entrantly.\n */\n/* SETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of setprotoent_r.\n *\tIt is zero if d_setprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setprotoent_r\n *\tis defined.\n */\n/*#define HAS_SETPROTOENT_R\t   /**/\n#define SETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_SETSERVENT_R:\n *\tThis symbol, if defined, indicates that the setservent_r routine\n *\tis available to setservent re-entrantly.\n */\n/* SETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of setservent_r.\n *\tIt is zero if d_setservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setservent_r\n *\tis defined.\n */\n/*#define HAS_SETSERVENT_R\t   /**/\n#define SETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_TTYNAME_R:\n *\tThis symbol, if defined, indicates that the ttyname_r routine\n *\tis available to ttyname re-entrantly.\n */\n/* TTYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of ttyname_r.\n *\tIt is zero if d_ttyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ttyname_r\n *\tis defined.\n */\n/*#define HAS_TTYNAME_R\t   /**/\n#define TTYNAME_R_PROTO 0\t   /**/\n/* GMTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* GMTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n#define GMTIME_MAX\t\t2147483647\t/**/\n#define GMTIME_MIN\t\t0\t/**/\n#define LOCALTIME_MAX\t2147483647\t/**/\n#define LOCALTIME_MIN\t0\t/**/\n\n#endif\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/win32/config.ce": "## Configured by: ~cf_email~\n## Target system: WINCE\nAuthor=''\nDate='$Date'\nHeader=''\nId='$Id'\nLocker=''\nLog='$Log'\nMcc='Mcc'\nRCSfile='$RCSfile'\nRevision='$Revision'\nSource=''\nState=''\n_a='.lib' # keep this for WinCE, as it is used by some mods...\n_exe='.exe'\n_o='.obj'\nafs='false'\nalignbytes='8'\naphostname=''\napi_revision='~PERL_API_REVISION~'\napi_subversion='~PERL_API_SUBVERSION~'\napi_version='~PERL_API_VERSION~'\napi_versionstring='~PERL_API_REVISION~.~PERL_API_VERSION~.~PERL_API_SUBVERSION~'\nar='lib'\narchlib='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\narchlibexp='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\narchname64=''\narchname='wince'\narchobjs=''\nasctime_r_proto='0'\nawk='awk'\nbaserev='5'\nbash=''\nbin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\nbinexp='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\nbison=''\nbootstrap_charset='undef'\nbyacc='byacc'\nbyteorder='1234'\nc=''\ncastflags='0'\ncat='type'\ncc='~cc~'\ncccdlflags=' '\nccdlflags=' '\nccflags='-DWIN32'\nccsymbols=''\ncf_by='nobody'\ncf_email='nobody@no.where.net'\ncf_time=''\ncharbits='8'\nchgrp=''\nchmod=''\nchown=''\nclocktype='clock_t'\ncomm=''\ncompress=''\ncontains='grep'\ncp='copy'\ncpio=''\ncpp='~cc~ -nologo -E'\ncpp_stuff='42'\ncppccsymbols=''\ncppflags='-DWIN32'\ncpplast=''\ncppminus=''\ncpprun='~cc~ -nologo -E'\ncppstdin='~cc~ -nologo -E'\ncppsymbols=''\ncrosscompile='undef'\ncrypt_r_proto='0'\ncryptlib=''\ncsh='undef'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\nd_PRIEldbl='undef'\nd_PRIFldbl='undef'\nd_PRIGldbl='undef'\nd_PRIX64='undef'\nd_PRId64='undef'\nd_PRIeldbl='undef'\nd_PRIfldbl='undef'\nd_PRIgldbl='undef'\nd_PRIi64='undef'\nd_PRIo64='undef'\nd_PRIu64='undef'\nd_PRIx64='undef'\nd_SCNfldbl='undef'\nd__fwalk='undef'\nd_accept4='undef'\nd_access='define'\nd_accessx='undef'\nd_acosh='undef'\nd_aintl='undef'\nd_alarm='undef'\nd_archlib='define'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='undef'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bsd='define'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_add_overflow='undef'\nd_builtin_choose_expr='undef'\nd_builtin_expect='undef'\nd_builtin_mul_overflow='undef'\nd_builtin_sub_overflow='undef'\nd_c99_variadic_macros='undef'\nd_casti32='undef'\nd_castneg='define'\nd_cbrt='undef'\nd_chown='undef'\nd_chroot='undef'\nd_chsize='define'\nd_class='undef'\nd_clearenv='undef'\nd_closedir='define'\nd_cmsghdr_s='undef'\nd_copysign='undef'\nd_copysignl='undef'\nd_cplusplus='undef'\nd_crypt='undef'\nd_crypt_r='undef'\nd_csh='undef'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='undef'\nd_dbl_dig='define'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='define'\nd_dir_dd_fd='undef'\nd_dirfd='undef'\nd_dirnamlen='define'\nd_dladdr='undef'\nd_dlerror='define'\nd_dlopen='define'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_double_has_inf='define'\nd_double_has_nan='define'\nd_double_has_negative_zero='define'\nd_double_has_subnormals='define'\nd_double_style_cray='undef'\nd_double_style_ibm='undef'\nd_double_style_ieee='define'\nd_double_style_vax='undef'\nd_drand48_r='undef'\nd_drand48proto='undef'\nd_dup2='define'\nd_dup3='undef'\nd_duplocale='undef'\nd_eaccess='undef'\nd_endgrent='undef'\nd_endgrent_r='undef'\nd_endhent='undef'\nd_endhostent_r='undef'\nd_endnent='undef'\nd_endnetent_r='undef'\nd_endpent='undef'\nd_endprotoent_r='undef'\nd_endpwent='undef'\nd_endpwent_r='undef'\nd_endsent='undef'\nd_endservent_r='undef'\nd_endspent='undef'\nd_eofnblk='define'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='undef'\nd_fchdir='undef'\nd_fchmod='undef'\nd_fchmodat='undef'\nd_fchown='undef'\nd_fcntl='undef'\nd_fcntl_can_lock='undef'\nd_fd_macros='define'\nd_fd_set='define'\nd_fdclose='undef'\nd_fdim='undef'\nd_fds_bits='define'\nd_fegetround='undef'\nd_fgetpos='define'\nd_finite='undef'\nd_finitel='undef'\nd_flexfnam='define'\nd_flock='undef'\nd_flockproto='undef'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='undef'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='undef'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_freelocale='undef'\nd_frexpl='undef'\nd_fs_data_s='undef'\nd_fseeko='undef'\nd_fsetpos='define'\nd_fstatfs='undef'\nd_fstatvfs='undef'\nd_fsync='undef'\nd_ftello='undef'\nd_ftime='define'\nd_futimes='undef'\nd_gai_strerror='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='undef'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='undef'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='undef'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='define'\nd_getitimer='undef'\nd_getlogin='define'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='undef'\nd_getnameinfo='undef'\nd_getnbyaddr='undef'\nd_getnbyname='undef'\nd_getnent='undef'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='undef'\nd_getpagsz='undef'\nd_getpbyname='define'\nd_getpbynumber='define'\nd_getpent='undef'\nd_getpgid='undef'\nd_getpgrp2='undef'\nd_getpgrp='undef'\nd_getppid='undef'\nd_getprior='undef'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='define'\nd_getprpwnam='undef'\nd_getpwent='undef'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='define'\nd_getsent='undef'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='define'\nd_getspent='undef'\nd_getspnam='undef'\nd_getspnam_r='undef'\nd_gettimeod='undef'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='undef'\nd_grpasswd='undef'\nd_has_C_UTF8='undef'\nd_hasmntopt='undef'\nd_htonl='define'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='undef'\nd_inc_version_list='undef'\nd_index='undef'\nd_inetaton='undef'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='undef'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='define'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='undef'\nd_isinfl='undef'\nd_isless='undef'\nd_isnan='define'\nd_isnanl='undef'\nd_isnormal='undef'\nd_j0='undef'\nd_j0l='undef'\nd_killpg='undef'\nd_lc_monetary_2008='undef'\nd_lchown='undef'\nd_ldbl_dig='define'\nd_ldexpl='undef'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='undef'\nd_link='define'\nd_linkat='undef'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localeconv_l='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='undef'\nd_lockf='undef'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_long_double_style_ieee='undef'\nd_long_double_style_ieee_doubledouble='undef'\nd_long_double_style_ieee_extended='undef'\nd_long_double_style_ieee_std='undef'\nd_long_double_style_vax='undef'\nd_longdbl='undef'\nd_longlong='undef'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='define'\nd_lstat='undef'\nd_madvise='undef'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='define'\nd_mbrlen='undef'\nd_mbrtowc='undef'\nd_mbstowcs='define'\nd_mbtowc='define'\nd_memmem='undef'\nd_memrchr='undef'\nd_mkdir='define'\nd_mkdtemp='undef'\nd_mkfifo='undef'\nd_mkostemp='undef'\nd_mkstemp='undef'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='define'\nd_mmap='undef'\nd_modfl='undef'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='undef'\nd_msg='undef'\nd_msg_ctrunc='undef'\nd_msg_dontroute='undef'\nd_msg_oob='undef'\nd_msg_peek='undef'\nd_msg_proxy='undef'\nd_msgctl='undef'\nd_msgget='undef'\nd_msghdr_s='undef'\nd_msgrcv='undef'\nd_msgsnd='undef'\nd_msync='undef'\nd_munmap='undef'\nd_mymalloc='~PERL_MALLOC~'\nd_nan='undef'\nd_nanosleep='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_newlocale='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='undef'\nd_nl_langinfo='undef'\nd_nv_preserves_uv='define'\nd_nv_zero_is_allbits_zero='undef'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='undef'\nd_openat='undef'\nd_pathconf='undef'\nd_pause='define'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe2='undef'\nd_pipe='undef'\nd_poll='undef'\nd_portable='define'\nd_prctl='undef'\nd_prctl_set_name='undef'\nd_printf_format_null='undef'\nd_procselfexe='undef'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='undef'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='undef'\nd_pwpasswd='undef'\nd_pwquota='undef'\nd_qgcvt='undef'\nd_quad='undef'\nd_querylocale='undef'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='undef'\nd_readv='undef'\nd_recvmsg='undef'\nd_regcomp='undef'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_renameat='undef'\nd_rewinddir='define'\nd_rint='undef'\nd_rmdir='define'\nd_round='undef'\nd_sbrkproto='undef'\nd_scalbn='undef'\nd_scalbnl='undef'\nd_sched_yield='undef'\nd_scm_rights='undef'\nd_seekdir='define'\nd_select='define'\nd_sem='undef'\nd_semctl='undef'\nd_semctl_semid_ds='undef'\nd_semctl_semun='undef'\nd_semget='undef'\nd_semop='undef'\nd_sendmsg='undef'\nd_setegid='undef'\nd_seteuid='undef'\nd_setgrent='undef'\nd_setgrent_r='undef'\nd_setgrps='undef'\nd_sethent='undef'\nd_sethostent_r='undef'\nd_setitimer='undef'\nd_setlinebuf='undef'\nd_setlocale='define'\nd_setlocale_accepts_any_locale_name='undef'\nd_setlocale_r='undef'\nd_setnent='undef'\nd_setnetent_r='undef'\nd_setpent='undef'\nd_setpgid='undef'\nd_setpgrp2='undef'\nd_setpgrp='undef'\nd_setprior='undef'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='undef'\nd_setpwent_r='undef'\nd_setregid='undef'\nd_setresgid='undef'\nd_setresuid='undef'\nd_setreuid='undef'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='undef'\nd_setservent_r='undef'\nd_setsid='undef'\nd_setspent='undef'\nd_setvbuf='undef'\nd_shm='undef'\nd_shmat='undef'\nd_shmatprototype='undef'\nd_shmctl='undef'\nd_shmdt='undef'\nd_shmget='undef'\nd_sigaction='undef'\nd_siginfo_si_addr='undef'\nd_siginfo_si_band='undef'\nd_siginfo_si_errno='undef'\nd_siginfo_si_pid='undef'\nd_siginfo_si_status='undef'\nd_siginfo_si_uid='undef'\nd_siginfo_si_value='undef'\nd_signbit='undef'\nd_sigprocmask='undef'\nd_sigsetjmp='undef'\nd_sin6_scope_id='undef'\nd_sitearch='define'\nd_snprintf='undef'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='define'\nd_socklen_t='undef'\nd_sockpair='undef'\nd_socks5_init='undef'\nd_sqrtl='undef'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='undef'\nd_statfs_f_flags='undef'\nd_statfs_s='undef'\nd_static_inline='undef'\nd_statvfs='undef'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='undef'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='undef'\nd_stdio_stream_array='undef'\nd_stdiobase='undef'\nd_stdstdio='undef'\nd_strcoll='define'\nd_strerror_l='undef'\nd_strerror_r='undef'\nd_strftime='undef'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strnlen='undef'\nd_strtod='define'\nd_strtod_l='undef'\nd_strtol='define'\nd_strtold='undef'\nd_strtold_l='undef'\nd_strtoll='undef'\nd_strtoq='undef'\nd_strtoul='define'\nd_strtoull='undef'\nd_strtouq='undef'\nd_strxfrm='undef'\nd_suidsafe='undef'\nd_symlink='undef'\nd_syscall='undef'\nd_syscallproto='undef'\nd_sysconf='undef'\nd_sysernlst=''\nd_syserrlst='define'\nd_system='define'\nd_tcgetpgrp='undef'\nd_tcsetpgrp='undef'\nd_telldir='define'\nd_telldirproto='define'\nd_tgamma='undef'\nd_thread_safe_nl_langinfo_l='undef'\nd_time='define'\nd_timegm='undef'\nd_times='define'\nd_tm_tm_gmtoff='undef'\nd_tm_tm_zone='undef'\nd_tmpnam_r='undef'\nd_towlower='undef'\nd_towupper='undef'\nd_trunc='undef'\nd_truncate='undef'\nd_truncl='undef'\nd_ttyname_r='undef'\nd_tzname='define'\nd_u32align='undef'\nd_ualarm='undef'\nd_umask='define'\nd_uname='define'\nd_union_semun='define'\nd_unlinkat='undef'\nd_unordered='undef'\nd_unsetenv='undef'\nd_uselocale='undef'\nd_usleep='undef'\nd_usleepproto='undef'\nd_ustat='undef'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='define'\nd_voidtty=''\nd_vsnprintf='undef'\nd_wait4='undef'\nd_waitpid='define'\nd_wcscmp='undef'\nd_wcstombs='define'\nd_wcsxfrm='undef'\nd_wctomb='define'\nd_writev='undef'\nd_xenix='undef'\ndate='date'\ndb_hashtype='int'\ndb_prefixtype='int'\ndb_version_major='0'\ndb_version_minor='0'\ndb_version_patch='0'\ndefault_inc_excludes_dot='undef'\ndirentrytype='struct direct'\ndlext='dll'\ndlsrc='dl_win32.xs'\ndoubleinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f'\ndoublekind='3'\ndoublemantbits='52'\ndoublenanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f'\ndoublesize='8'\ndrand01='Perl_drand48()'\ndrand48_r_proto='0'\ndtrace=''\ndynamic_ext='Socket IO Fcntl Opcode SDBM_File attributes'\neagain='EAGAIN'\nebcdic='undef'\necho='echo'\negrep='egrep'\nemacs=''\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext='.exe'\nexpr='expr'\nextensions='~static_ext~ ~dynamic_ext~ ~nonxs_ext~'\nfflushNULL='define'\nfflushall='undef'\nfind='find'\nfirstmakefile='makefile'\nflex=''\nfpossize='4'\nfpostype='fpos_t'\nfreetype='void'\nfull_ar=''\nfull_csh=''\nfull_sed=''\ngccversion=''\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"ld\"'\ngidsign='-1'\ngidsize='4'\ngidtype='gid_t'\nglibpth='/usr/shlib  /lib/pa1.1 /usr/lib/large /lib /usr/lib /usr/lib/386 /lib/386 /lib/large /usr/lib/small /lib/small /usr/ccs/lib /usr/ucblib /usr/shlib '\ngmtime_r_proto='0'\ngrep='grep'\ngroupcat=''\ngroupstype='gid_t'\ngzip='gzip'\nh_fcntl='true'\nh_sysfile='true'\nhint='recommended'\nhostcat='ypcat hosts'\nhuge=''\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='__int64'\ni8size='1'\ni8type='char'\ni_arpainet='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='undef'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='define'\ni_execinfo='undef'\ni_fcntl='define'\ni_fenv='undef'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='undef'\ni_ieeefp='undef'\ni_inttypes='undef'\ni_langinfo='undef'\ni_libutil='undef'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='define'\ni_mallocmalloc='undef'\ni_mntent='undef'\ni_ndbm='undef'\ni_netdb='undef'\ni_neterrno='undef'\ni_netinettcp='undef'\ni_niin='undef'\ni_poll='undef'\ni_prot='undef'\ni_pthread='undef'\ni_pwd='undef'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='undef'\ni_socks='undef'\ni_stdbool='undef'\ni_stdint='undef'\ni_stdlib='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='undef'\ni_sysfile='undef'\ni_sysfilio='define'\ni_sysin='undef'\ni_sysioctl='undef'\ni_syslog='undef'\ni_sysmman='undef'\ni_sysmode='undef'\ni_sysmount='undef'\ni_sysndir='undef'\ni_sysparam='undef'\ni_syspoll='undef'\ni_sysresrc='undef'\ni_syssecrt='undef'\ni_sysselct='undef'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='undef'\ni_sysstatvfs='undef'\ni_systime='undef'\ni_systimek='undef'\ni_systimes='undef'\ni_systypes='undef'\ni_sysuio='undef'\ni_sysun='undef'\ni_sysutsname='undef'\ni_sysvfs='undef'\ni_syswait='undef'\ni_termio='undef'\ni_termios='undef'\ni_time='undef'\ni_unistd='undef'\ni_ustat='undef'\ni_utime='define'\ni_vfork='undef'\ni_wchar='undef'\ni_wctype='undef'\ni_xlocale='undef'\nignore_versioned_solibs=''\ninc_version_list=''\ninc_version_list_init='0'\nincpath=''\ninews=''\ninstallarchlib='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\ninstallbin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\ninstallhtmldir='~INST_TOP~~INST_VER~\\html'\ninstallhtmlhelpdir='~INST_TOP~~INST_VER~\\htmlhelp'\ninstallman1dir='~INST_TOP~~INST_VER~\\man\\man1'\ninstallman3dir='~INST_TOP~~INST_VER~\\man\\man3'\ninstallprefix='~INST_TOP~~INST_VER~'\ninstallprefixexp='~INST_TOP~~INST_VER~'\ninstallprivlib='~INST_TOP~~INST_VER~\\lib'\ninstallscript='~INST_TOP~~INST_VER~\\bin'\ninstallsitearch='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\ninstallsitebin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\ninstallsitelib='~INST_TOP~\\site~INST_VER~\\lib'\ninstallstyle='lib'\ninstallusrbinperl='undef'\ninstallvendorarch=''\ninstallvendorbin=''\ninstallvendorlib=''\nintsize='4'\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nknown_extensions='~static_ext~ ~dynamic_ext~ ~nonxs_ext~'\nksh=''\nlarge=''\nld='link'\nlddlflags='-dll ~LINK_FLAGS~'\nldflags='~LINK_FLAGS~'\nldlibpthname=''\nless='less'\nlib_ext='.lib'\nlibc='msvcrt.lib'\nlibperl='perl.lib'\nlibpth=''\nlibs=''\nlibsdirs=''\nlibsfiles=''\nlibsfound=''\nlibspath=''\nlibswanted='net socket inet nsl nm ndbm gdbm dbm db malloc dl ld sun m c cposix posix ndir dir crypt ucb bsd BSD PW x'\nline='line'\nlint=''\nlkflags=''\nln=''\nlns='copy'\nlocaltime_r_proto='0'\nlocincpth='/usr/local/include /opt/local/include /usr/gnu/include /opt/gnu/include /usr/GNU/include /opt/GNU/include'\nloclibpth='/usr/local/lib /opt/local/lib /usr/gnu/lib /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib'\nlongdblinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7f'\nlongdblkind='3'\nlongdblmantbits='64'\nlongdblnanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f'\nlongdblsize='10'\nlonglongsize='8'\nlongsize='4'\nlp=''\nlpr=''\nls='dir'\nlseeksize='4'\nlseektype='long'\nmad='undef'\nmail=''\nmailx=''\nmake='nmake'\nmake_set_make='#'\nmallocobj='malloc.o'\nmallocsrc='malloc.c'\nmalloctype='void *'\nman1dir='~INST_TOP~~INST_VER~\\man\\man1'\nman1direxp='~INST_TOP~~INST_VER~\\man\\man1'\nman1ext='1'\nman3dir='~INST_TOP~~INST_VER~\\man\\man3'\nman3direxp='~INST_TOP~~INST_VER~\\man\\man3'\nman3ext='3'\nmedium=''\nmips_type=''\nmkdir='mkdir'\nmmaptype='void *'\nmodels='none'\nmodetype='mode_t'\nmore='more /e'\nmultiarch='undef'\nmv=''\nmyarchname='wince'\nmydomain=''\nmyhostname=''\nmyuname=''\nn='-n'\nneed_va_copy='undef'\nnetdb_hlen_type='int'\nnetdb_host_type='char *'\nnetdb_name_type='char *'\nnetdb_net_type='long'\nnm=''\nnm_opt=''\nnm_so_opt=''\nnonxs_ext='Errno'\nnroff=''\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='32'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvmantbits='52'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.obj'\nold_pthread_create_joinable=''\noptimize='-O'\norderlib='false'\nosname='MSWin32'\nosvers='4.0'\notherlibdirs=''\npackage='perl5'\npager='more /e'\npasscat=''\npatchlevel='~PERL_VERSION~'\npath_sep=';'\nperl5=''\nperl='perl'\nperl_patchlevel='~PERL_PATCHLEVEL~'\nperl_static_inline='static'\nperladmin=''\nperlpath='~INST_TOP~~INST_VER~\\bin~INST_ARCH~\\perl.exe'\npg=''\nphostname='hostname'\npidtype='int'\nplibpth=''\npmake=''\npr=''\nprefix='~INST_TOP~'\nprefixexp='~INST_TOP~'\nprivlib='~INST_TOP~~INST_VER~\\lib'\nprivlibexp='~INST_TOP~~INST_VER~\\lib'\nprocselfexe=''\nprototype='define'\nptrsize='4'\nquadkind='5'\nquadtype='__int64'\nrandbits='48'\nrandfunc='Perl_drand48'\nrandom_r_proto='0'\nrandseedtype='U32'\nranlib='rem'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nrevision='5'\nrm='del'\nrmail=''\nrunnm='true'\nsGMTIME_max='2147483647'\nsGMTIME_min='0'\nsLOCALTIME_max='2147483647'\nsLOCALTIME_min='0'\nsPRIEldbl='\"E\"'\nsPRIFldbl='\"F\"'\nsPRIGldbl='\"G\"'\nsPRIX64='\"lX\"'\nsPRId64='\"ld\"'\nsPRIeldbl='\"e\"'\nsPRIfldbl='\"f\"'\nsPRIgldbl='\"g\"'\nsPRIi64='\"li\"'\nsPRIo64='\"lo\"'\nsPRIu64='\"lu\"'\nsPRIx64='\"lx\"'\nsSCNfldbl=''\nsched_yield=''\nscriptdir='~INST_TOP~~INST_VER~\\bin'\nscriptdirexp='~INST_TOP~~INST_VER~\\bin'\nsed='sed'\nseedfunc='Perl_drand48_init'\nselectminbits='32'\nselecttype='Perl_fd_set *'\nsendmail='blat'\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='cmd /x /c'\nshar=''\nsharpbang='#!'\nshmattype='void *'\nshortsize='2'\nshrpenv=''\nshsharp='true'\nsig_count='26'\nsig_name='ZERO NUM01 INT QUIT ILL NUM05 NUM06 NUM07 FPE KILL NUM10 SEGV NUM12 PIPE ALRM TERM NUM16 NUM17 NUM18 NUM19 CHLD BREAK ABRT STOP NUM24 CONT CLD'\nsig_name_init='\"ZERO\", \"NUM01\", \"INT\", \"QUIT\", \"ILL\", \"NUM05\", \"NUM06\", \"NUM07\", \"FPE\", \"KILL\", \"NUM10\", \"SEGV\", \"NUM12\", \"PIPE\", \"ALRM\", \"TERM\", \"NUM16\", \"NUM17\", \"NUM18\", \"NUM19\", \"CHLD\", \"BREAK\", \"ABRT\", \"STOP\", \"NUM24\", \"CONT\", \"CLD\", 0'\nsig_num='0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 20 0'\nsig_num_init='0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 20, 0'\nsig_size='27'\nsignal_t='void'\nsitearch='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\nsitearchexp='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\nsitebin='~INST_TOP~\\site~INST_VER~\\bin~INST_ARCH~'\nsitebinexp='~INST_TOP~\\site~INST_VER~\\bin~INST_ARCH~'\nsitelib='~INST_TOP~\\site~INST_VER~\\lib'\nsitelib_stem=''\nsitelibexp='~INST_TOP~\\site~INST_VER~\\lib'\nsiteprefix='~INST_TOP~\\site~INST_VER~'\nsiteprefixexp='~INST_TOP~\\site~INST_VER~'\nsizesize='4'\nsizetype='size_t'\nsleep=''\nsmail=''\nsmall=''\nso='dll'\nsockethdr=''\nsocketlib=''\nsocksizetype='int'\nsort='sort'\nspackage='Perl5'\nspitshell=''\nsplit=''\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc=''\nssizetype='int'\nst_ino_sign='1'\nst_ino_size='4'\nstartperl='#!perl'\nstartsh='#!/bin/sh'\nstatic_ext='DynaLoader'\nstdchar='char'\nstdio_base=''\nstdio_bufsiz=''\nstdio_cnt=''\nstdio_filbuf=''\nstdio_ptr=''\nstdio_stream_array=''\nstrerror_r_proto='0'\nstrings='/usr/include/string.h'\nsubmit=''\nsubversion='~PERL_SUBVERSION~'\nsysman='/usr/man/man1'\ntail=''\ntar=''\ntargetarch='wince'\ntargetsh='cmd /x /c'\ntbl=''\ntee=''\ntest=''\ntimeincl='/usr/include/sys/time.h '\ntimetype='time_t'\ntmpnam_r_proto='0'\ntouch='touch'\ntr=''\ntrnl='\\012'\ntroff=''\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='unsigned __int64'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"ld\"'\nuidsign='-1'\nuidsize='4'\nuidtype='uid_t'\nuname='uname'\nuniq='uniq'\nuquadtype='unsigned __int64'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecbacktrace='undef'\nusecrosscompile='define'\nusedevel='undef'\nusedl='define'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='~USE_ITHREADS~'\nusekernprocpathname='undef'\nuselargefiles='undef'\nuselongdouble='undef'\nusemallocwrap='define'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='define'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='true'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='false'\nusrinc='/usr/include'\nuuname=''\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvendorarch=''\nvendorarchexp=''\nvendorbin=''\nvendorbinexp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorprefix=''\nvendorprefixexp=''\nversion=''\nversiononly='undef'\nvi=''\nxlibpth='/usr/lib/386 /lib/386'\nzcat=''\nzip='zip'\nPERL_REVISION='~PERL_REVISION~'\nPERL_SUBVERSION='~PERL_SUBVERSION~'\nPERL_VERSION='~PERL_VERSION~'\nPERL_API_REVISION='~PERL_API_REVISION~'\nPERL_API_SUBVERSION='~PERL_API_SUBVERSION~'\nPERL_API_VERSION='~PERL_API_VERSION~'\nPATCHLEVEL='~PERL_VERSION~'\nPERL_PATCHLEVEL='~PERL_PATCHLEVEL~'\nPERL_CONFIG_SH='true'\nCONFIGDOTSH='true'\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/win32/config.vc": "## Configured by: ~cf_email~\n## Target system: WIN32\nAuthor=''\nDate='$Date'\nHeader=''\nId='$Id'\nLocker=''\nLog='$Log'\nRCSfile='$RCSfile'\nRevision='$Revision'\nSource=''\nState=''\n_a='.lib'\n_exe='.exe'\n_o='.obj'\nafs='false'\nafsroot='/afs'\nalignbytes='8'\naphostname=''\napi_revision='~PERL_API_REVISION~'\napi_subversion='~PERL_API_SUBVERSION~'\napi_version='~PERL_API_VERSION~'\napi_versionstring='~PERL_API_REVISION~.~PERL_API_VERSION~.~PERL_API_SUBVERSION~'\nar='lib -ltcg'\narchlib='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\narchlibexp='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\narchname64=''\narchname='MSWin32'\narchobjs=''\nasctime_r_proto='0'\nawk='awk'\nbaserev='5'\nbash=''\nbin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\nbinexp='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\nbison=''\nbootstrap_charset='undef'\nbyacc='byacc'\nbyteorder='1234'\nc=''\ncastflags='0'\ncat='type'\ncc='cl'\ncccdlflags=' '\nccdlflags=' '\nccflags='-MD -DWIN32'\nccflags_uselargefiles=''\nccname='~cc~'\nccsymbols=''\nccversion=''\ncf_by='nobody'\ncf_email='nobody@no.where.net'\ncf_time=''\ncharbits='8'\nchgrp=''\nchmod=''\nchown=''\nclocktype='clock_t'\ncomm=''\ncompress=''\ncontains='grep'\ncp='copy'\ncpio=''\ncpp='~cc~ -nologo -E'\ncpp_stuff='42'\ncppccsymbols=''\ncppflags='-DWIN32'\ncpplast=''\ncppminus=''\ncpprun='~cc~ -nologo -E'\ncppstdin='cppstdin'\ncppsymbols=''\ncrypt_r_proto='0'\ncryptlib=''\ncsh='undef'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\nd_PRIEUldbl='undef'\nd_PRIFUldbl='undef'\nd_PRIGUldbl='undef'\nd_PRIXU64='define'\nd_PRId64='define'\nd_PRIeldbl='undef'\nd_PRIfldbl='undef'\nd_PRIgldbl='undef'\nd_PRIi64='define'\nd_PRIo64='define'\nd_PRIu64='define'\nd_PRIx64='define'\nd_SCNfldbl='undef'\nd__fwalk='undef'\nd_accept4='undef'\nd_access='define'\nd_accessx='undef'\nd_acosh='undef'\nd_aintl='undef'\nd_alarm='define'\nd_archlib='define'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='undef'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bsd='define'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_add_overflow='undef'\nd_builtin_choose_expr='undef'\nd_builtin_expect='undef'\nd_builtin_mul_overflow='undef'\nd_builtin_sub_overflow='undef'\nd_c99_variadic_macros='undef'\nd_casti32='undef'\nd_castneg='define'\nd_cbrt='undef'\nd_chown='undef'\nd_chroot='undef'\nd_chsize='define'\nd_class='undef'\nd_clearenv='undef'\nd_closedir='define'\nd_cmsghdr_s='undef'\nd_copysign='undef'\nd_copysignl='undef'\nd_cplusplus='undef'\nd_crypt='define'\nd_crypt_r='undef'\nd_csh='undef'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='undef'\nd_dbl_dig='define'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='define'\nd_dir_dd_fd='undef'\nd_dirfd='undef'\nd_dirnamlen='define'\nd_dladdr='undef'\nd_dlerror='define'\nd_dlopen='define'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_double_has_inf='define'\nd_double_has_nan='define'\nd_double_has_negative_zero='define'\nd_double_has_subnormals='define'\nd_double_style_cray='undef'\nd_double_style_ibm='undef'\nd_double_style_ieee='define'\nd_double_style_vax='undef'\nd_drand48_r='undef'\nd_drand48proto='undef'\nd_dup2='define'\nd_dup3='undef'\nd_duplocale='undef'\nd_eaccess='undef'\nd_endgrent='undef'\nd_endgrent_r='undef'\nd_endhent='undef'\nd_endhostent_r='undef'\nd_endnent='undef'\nd_endnetent_r='undef'\nd_endpent='undef'\nd_endprotoent_r='undef'\nd_endpwent='undef'\nd_endpwent_r='undef'\nd_endsent='undef'\nd_endservent_r='undef'\nd_eofnblk='define'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='define'\nd_fchdir='undef'\nd_fchmod='undef'\nd_fchmodat='undef'\nd_fchown='undef'\nd_fcntl='undef'\nd_fcntl_can_lock='undef'\nd_fd_macros='define'\nd_fd_set='define'\nd_fdclose='undef'\nd_fdim='undef'\nd_fds_bits='define'\nd_fegetround='undef'\nd_fgetpos='define'\nd_finite='undef'\nd_finitel='undef'\nd_flexfnam='define'\nd_flock='define'\nd_flockproto='define'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='undef'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='undef'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_freelocale='undef'\nd_frexpl='undef'\nd_fs_data_s='undef'\nd_fseeko='undef'\nd_fsetpos='define'\nd_fstatfs='undef'\nd_fstatvfs='undef'\nd_fsync='undef'\nd_ftello='undef'\nd_ftime='define'\nd_futimes='undef'\nd_gai_strerror='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='undef'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='undef'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='undef'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='define'\nd_getitimer='undef'\nd_getlogin='define'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='undef'\nd_getnameinfo='undef'\nd_getnbyaddr='undef'\nd_getnbyname='undef'\nd_getnent='undef'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='undef'\nd_getpagsz='undef'\nd_getpbyname='define'\nd_getpbynumber='define'\nd_getpent='undef'\nd_getpgid='undef'\nd_getpgrp2='undef'\nd_getpgrp='undef'\nd_getppid='undef'\nd_getprior='undef'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='define'\nd_getprpwnam='undef'\nd_getpwent='undef'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='define'\nd_getsent='undef'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='define'\nd_getspnam='undef'\nd_getspnam_r='undef'\nd_gettimeod='define'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='undef'\nd_grpasswd='undef'\nd_has_C_UTF8='undef'\nd_hasmntopt='undef'\nd_htonl='define'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='undef'\nd_inc_version_list='undef'\nd_index='undef'\nd_inetaton='undef'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='undef'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='define'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='undef'\nd_isinfl='undef'\nd_isless='undef'\nd_isnan='define'\nd_isnanl='undef'\nd_isnormal='undef'\nd_j0='undef'\nd_j0l='undef'\nd_killpg='define'\nd_lc_monetary_2008='undef'\nd_lchown='undef'\nd_ldbl_dig='define'\nd_ldexpl='undef'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='undef'\nd_link='define'\nd_linkat='undef'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localeconv_l='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='define'\nd_lockf='undef'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_long_double_style_ieee='undef'\nd_long_double_style_ieee_doubledouble='undef'\nd_long_double_style_ieee_extended='define'\nd_long_double_style_ieee_std='undef'\nd_long_double_style_vax='undef'\nd_longdbl='define'\nd_longlong='undef'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='define'\nd_lstat='undef'\nd_madvise='undef'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='define'\nd_mbrlen='undef'\nd_mbrtowc='undef'\nd_mbstowcs='define'\nd_mbtowc='define'\nd_memmem='undef'\nd_memrchr='undef'\nd_mkdir='define'\nd_mkdtemp='undef'\nd_mkfifo='undef'\nd_mkostemp='undef'\nd_mkstemp='undef'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='define'\nd_mmap='undef'\nd_modfl='undef'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='undef'\nd_msg='undef'\nd_msg_ctrunc='undef'\nd_msg_dontroute='undef'\nd_msg_oob='undef'\nd_msg_peek='undef'\nd_msg_proxy='undef'\nd_msgctl='undef'\nd_msgget='undef'\nd_msghdr_s='undef'\nd_msgrcv='undef'\nd_msgsnd='undef'\nd_msync='undef'\nd_munmap='undef'\nd_mymalloc='undef'\nd_nan='undef'\nd_nanosleep='undef'\nd_ndbm='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_newlocale='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='undef'\nd_nl_langinfo='undef'\nd_nv_preserves_uv='define'\nd_nv_zero_is_allbits_zero='define'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='undef'\nd_openat='undef'\nd_pathconf='undef'\nd_pause='define'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe2='undef'\nd_pipe='define'\nd_poll='undef'\nd_portable='define'\nd_prctl='undef'\nd_prctl_set_name='undef'\nd_printf_format_null='undef'\nd_procselfexe='undef'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='undef'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='undef'\nd_pwpasswd='undef'\nd_pwquota='undef'\nd_qgcvt='undef'\nd_quad='define'\nd_querylocale='undef'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='undef'\nd_readv='undef'\nd_recvmsg='undef'\nd_regcomp='undef'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_renameat='undef'\nd_rewinddir='define'\nd_rint='undef'\nd_rmdir='define'\nd_round='undef'\nd_sbrkproto='undef'\nd_scalbn='undef'\nd_scalbnl='undef'\nd_sched_yield='undef'\nd_scm_rights='undef'\nd_seekdir='define'\nd_select='define'\nd_sem='undef'\nd_semctl='undef'\nd_semctl_semid_ds='undef'\nd_semctl_semun='undef'\nd_semget='undef'\nd_semop='undef'\nd_sendmsg='undef'\nd_setegid='undef'\nd_seteuid='undef'\nd_setgrent='undef'\nd_setgrent_r='undef'\nd_setgrps='undef'\nd_sethent='undef'\nd_sethostent_r='undef'\nd_setitimer='undef'\nd_setlinebuf='undef'\nd_setlocale='define'\nd_setlocale_accepts_any_locale_name='undef'\nd_setlocale_r='undef'\nd_setnent='undef'\nd_setnetent_r='undef'\nd_setpent='undef'\nd_setpgid='undef'\nd_setpgrp2='undef'\nd_setpgrp='undef'\nd_setprior='undef'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='undef'\nd_setpwent_r='undef'\nd_setregid='undef'\nd_setresgid='undef'\nd_setresuid='undef'\nd_setreuid='undef'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='undef'\nd_setservent_r='undef'\nd_setsid='undef'\nd_setvbuf='define'\nd_shm='undef'\nd_shmat='undef'\nd_shmatprototype='undef'\nd_shmctl='undef'\nd_shmdt='undef'\nd_shmget='undef'\nd_sigaction='undef'\nd_siginfo_si_addr='undef'\nd_siginfo_si_band='undef'\nd_siginfo_si_errno='undef'\nd_siginfo_si_pid='undef'\nd_siginfo_si_status='undef'\nd_siginfo_si_uid='undef'\nd_siginfo_si_value='undef'\nd_signbit='undef'\nd_sigprocmask='undef'\nd_sigsetjmp='undef'\nd_sin6_scope_id='define'\nd_sitearch='define'\nd_snprintf='define'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='define'\nd_socklen_t='undef'\nd_sockpair='undef'\nd_socks5_init='undef'\nd_sqrtl='undef'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='undef'\nd_statfs_f_flags='undef'\nd_statfs_s='undef'\nd_static_inline='define'\nd_statvfs='undef'\nd_stdio_cnt_lval='define'\nd_stdio_ptr_lval='define'\nd_stdio_ptr_lval_nochange_cnt='define'\nd_stdio_ptr_lval_sets_cnt='undef'\nd_stdio_stream_array='undef'\nd_stdiobase='define'\nd_stdstdio='define'\nd_strcoll='define'\nd_strerror_l='undef'\nd_strerror_r='undef'\nd_strftime='define'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strnlen='undef'\nd_strtod='define'\nd_strtod_l='undef'\nd_strtol='define'\nd_strtold='undef'\nd_strtold_l='undef'\nd_strtoll='undef'\nd_strtoq='undef'\nd_strtoul='define'\nd_strtoull='undef'\nd_strtouq='undef'\nd_strxfrm='define'\nd_suidsafe='undef'\nd_symlink='undef'\nd_syscall='undef'\nd_syscallproto='undef'\nd_sysconf='undef'\nd_sysernlst=''\nd_syserrlst='define'\nd_system='define'\nd_tcgetpgrp='undef'\nd_tcsetpgrp='undef'\nd_telldir='define'\nd_telldirproto='define'\nd_tgamma='undef'\nd_thread_safe_nl_langinfo_l='undef'\nd_time='define'\nd_timegm='undef'\nd_times='define'\nd_tm_tm_gmtoff='undef'\nd_tm_tm_zone='undef'\nd_tmpnam_r='undef'\nd_towlower='undef'\nd_towupper='undef'\nd_trunc='undef'\nd_truncate='undef'\nd_truncl='undef'\nd_ttyname_r='undef'\nd_tzname='define'\nd_u32align='define'\nd_ualarm='undef'\nd_umask='define'\nd_uname='define'\nd_union_semun='define'\nd_unlinkat='undef'\nd_unordered='undef'\nd_unsetenv='undef'\nd_uselocale='undef'\nd_usleep='undef'\nd_usleepproto='undef'\nd_ustat='undef'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vendorscript='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='define'\nd_voidtty=''\nd_vsnprintf='define'\nd_wait4='undef'\nd_waitpid='define'\nd_wcscmp='define'\nd_wcstombs='define'\nd_wcsxfrm='define'\nd_wctomb='define'\nd_writev='undef'\nd_xenix='undef'\ndate='date'\ndb_hashtype='int'\ndb_prefixtype='int'\ndb_version_major='0'\ndb_version_minor='0'\ndb_version_patch='0'\ndefault_inc_excludes_dot='undef'\ndirentrytype='struct direct'\ndlext='dll'\ndlsrc='dl_win32.xs'\ndoubleinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f'\ndoublekind='3'\ndoublemantbits='52'\ndoublenanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f'\ndoublesize='8'\ndrand01='Perl_drand48()'\ndrand48_r_proto='0'\ndtrace=''\ndynamic_ext='Socket IO Fcntl Opcode SDBM_File attributes'\neagain='EAGAIN'\nebcdic='undef'\necho='echo'\negrep='egrep'\nemacs=''\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext='.exe'\nexpr='expr'\nextensions='~static_ext~ ~dynamic_ext~ ~nonxs_ext~'\nextern_C='extern'\nextras=''\nfflushNULL='define'\nfflushall='undef'\nfind='find'\nfirstmakefile='makefile'\nflex=''\nfpossize='8'\nfpostype='fpos_t'\nfreetype='void'\nfrom=':'\nfull_ar=''\nfull_csh=''\nfull_sed=''\ngccansipedantic=''\ngccosandvers=''\ngccversion=''\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"ld\"'\ngidsign='-1'\ngidsize='4'\ngidtype='gid_t'\nglibpth='/usr/shlib  /lib/pa1.1 /usr/lib/large /lib /usr/lib /usr/lib/386 /lib/386 /lib/large /usr/lib/small /lib/small /usr/ccs/lib /usr/ucblib /usr/shlib '\ngmake='gmake'\ngmtime_r_proto='0'\ngnulibc_version=''\ngrep='grep'\ngroupcat=''\ngroupstype='gid_t'\ngzip='gzip'\nh_fcntl='false'\nh_sysfile='true'\nhint='recommended'\nhostcat='ypcat hosts'\nhtml1dir=' '\nhtml1direxp=''\nhtml3dir=' '\nhtml3direxp=''\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='__int64'\ni8size='1'\ni8type='char'\ni_arpainet='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='undef'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='define'\ni_execinfo='undef'\ni_fcntl='define'\ni_fenv='undef'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='undef'\ni_ieeefp='undef'\ni_inttypes='undef'\ni_langinfo='undef'\ni_libutil='undef'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='define'\ni_mallocmalloc='undef'\ni_mntent='undef'\ni_ndbm='undef'\ni_netdb='undef'\ni_neterrno='undef'\ni_netinettcp='undef'\ni_niin='undef'\ni_poll='undef'\ni_prot='undef'\ni_pthread='undef'\ni_pwd='undef'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='undef'\ni_socks='undef'\ni_stdbool='undef'\ni_stdint='undef'\ni_stdlib='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='undef'\ni_sysfile='undef'\ni_sysfilio='define'\ni_sysin='undef'\ni_sysioctl='undef'\ni_syslog='undef'\ni_sysmman='undef'\ni_sysmode='undef'\ni_sysmount='undef'\ni_sysndir='undef'\ni_sysparam='undef'\ni_syspoll='undef'\ni_sysresrc='undef'\ni_syssecrt='undef'\ni_sysselct='undef'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='undef'\ni_sysstatvfs='undef'\ni_systime='undef'\ni_systimek='undef'\ni_systimes='undef'\ni_systypes='define'\ni_sysuio='undef'\ni_sysun='undef'\ni_sysutsname='undef'\ni_sysvfs='undef'\ni_syswait='undef'\ni_termio='undef'\ni_termios='undef'\ni_time='define'\ni_unistd='undef'\ni_ustat='undef'\ni_utime='define'\ni_vfork='undef'\ni_wchar='undef'\ni_wctype='undef'\ni_xlocale='undef'\nignore_versioned_solibs=''\ninc_version_list=''\ninc_version_list_init='0'\nincpath=''\ninews=''\ninitialinstalllocation=''\ninstallarchlib='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\ninstallbin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\ninstallhtml1dir=''\ninstallhtml3dir=''\ninstallhtmldir='~INST_TOP~~INST_VER~\\html'\ninstallhtmlhelpdir='~INST_TOP~~INST_VER~\\htmlhelp'\ninstallman1dir='~INST_TOP~~INST_VER~\\man\\man1'\ninstallman3dir='~INST_TOP~~INST_VER~\\man\\man3'\ninstallprefix='~INST_TOP~~INST_VER~'\ninstallprefixexp='~INST_TOP~~INST_VER~'\ninstallprivlib='~INST_TOP~~INST_VER~\\lib'\ninstallscript='~INST_TOP~~INST_VER~\\bin'\ninstallsitearch='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\ninstallsitebin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\ninstallsitehtml1dir=''\ninstallsitehtml3dir=''\ninstallsitelib='~INST_TOP~\\site~INST_VER~\\lib'\ninstallsiteman1dir=''\ninstallsiteman3dir=''\ninstallsitescript=''\ninstallstyle='lib'\ninstallusrbinperl='undef'\ninstallvendorarch=''\ninstallvendorbin=''\ninstallvendorhtml1dir=''\ninstallvendorhtml3dir=''\ninstallvendorlib=''\ninstallvendorman1dir=''\ninstallvendorman3dir=''\ninstallvendorscript=''\nintsize='4'\nissymlink=''\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nknown_extensions='~static_ext~ ~dynamic_ext~ ~nonxs_ext~'\nksh=''\nld='link'\nlddlflags='-dll ~LINK_FLAGS~'\nldflags='~LINK_FLAGS~'\nldflags_uselargefiles=''\nldlibpthname=''\nless='less'\nlib_ext='.lib'\nlibc='msvcrt.lib'\nlibperl='perl.lib'\nlibpth=''\nlibs=''\nlibsdirs=''\nlibsfiles=''\nlibsfound=''\nlibspath=''\nlibswanted='net socket inet nsl nm ndbm gdbm dbm db malloc dl ld sun m c cposix posix ndir dir crypt ucb bsd BSD PW x'\nlibswanted_uselargefiles='net socket inet nsl nm ndbm gdbm dbm db malloc dl ld sun m c cposix posix ndir dir crypt ucb bsd BSD PW x'\nline='line'\nlint=''\nlkflags=''\nln=''\nlns='copy'\nlocaltime_r_proto='0'\nlocincpth='/usr/local/include /opt/local/include /usr/gnu/include /opt/gnu/include /usr/GNU/include /opt/GNU/include'\nloclibpth='/usr/local/lib /opt/local/lib /usr/gnu/lib /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib'\nlongdblinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f'\nlongdblkind='0'\nlongdblmantbits='52'\nlongdblnanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f'\nlongdblsize='8'\nlonglongsize='8'\nlongsize='4'\nlp=''\nlpr=''\nls='dir'\nlseeksize='4'\nlseektype='long'\nmad='undef'\nmail=''\nmailx=''\nmake='nmake'\nmake_set_make='#'\nmallocobj='malloc.o'\nmallocsrc='malloc.c'\nmalloctype='void *'\nman1dir='~INST_TOP~~INST_VER~\\man\\man1'\nman1direxp='~INST_TOP~~INST_VER~\\man\\man1'\nman1ext='1'\nman3dir='~INST_TOP~~INST_VER~\\man\\man3'\nman3direxp='~INST_TOP~~INST_VER~\\man\\man3'\nman3ext='3'\nmips_type=''\nmistrustnm=''\nmkdir='mkdir'\nmmaptype='void *'\nmodetype='mode_t'\nmore='more /e'\nmultiarch='undef'\nmv=''\nmyarchname='MSWin32'\nmydomain=''\nmyhostname=''\nmyuname=''\nn='-n'\nneed_va_copy='undef'\nnetdb_hlen_type='int'\nnetdb_host_type='char *'\nnetdb_name_type='char *'\nnetdb_net_type='long'\nnm=''\nnm_opt=''\nnm_so_opt=''\nnonxs_ext='Errno'\nnroff=''\nnvEUformat='\"E\"'\nnvFUformat='\"F\"'\nnvGUformat='\"G\"'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='32'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvmantbits='52'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.obj'\nold_pthread_create_joinable=''\noptimize='-O'\norderlib='false'\nosname='MSWin32'\nosvers='4.0'\notherlibdirs=''\npackage='perl5'\npager='more /e'\npasscat=''\npatchlevel='~PERL_VERSION~'\npath_sep=';'\nperl5=''\nperl='perl'\nperl_patchlevel='~PERL_PATCHLEVEL~'\nperl_static_inline='static __inline'\nperladmin=''\nperllibs='~libs~'\nperlpath='~INST_TOP~~INST_VER~\\bin~INST_ARCH~\\perl.exe'\npg=''\nphostname='hostname'\npidtype='int'\nplibpth=''\npmake=''\npr=''\nprefix='~INST_TOP~'\nprefixexp='~INST_TOP~'\nprivlib='~INST_TOP~~INST_VER~\\lib'\nprivlibexp='~INST_TOP~~INST_VER~\\lib'\nprocselfexe=''\nprototype='define'\nptrsize='4'\nquadkind='5'\nquadtype='__int64'\nrandbits='48'\nrandfunc='Perl_drand48'\nrandom_r_proto='0'\nrandseedtype='U32'\nranlib='rem'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nrevision='5'\nrm='del'\nrm_try=''\nrmail=''\nrun=''\nrunnm='true'\nsGMTIME_max=\"2147483647\"\nsGMTIME_min=\"0\"\nsLOCALTIME_max=\"2147483647\"\nsLOCALTIME_min=\"0\"\nsPRIEUldbl='\"E\"'\nsPRIFUldbl='\"F\"'\nsPRIGUldbl='\"G\"'\nsPRIXU64='\"lX\"'\nsPRId64='\"ld\"'\nsPRIeldbl='\"e\"'\nsPRIfldbl='\"f\"'\nsPRIgldbl='\"g\"'\nsPRIi64='\"li\"'\nsPRIo64='\"lo\"'\nsPRIu64='\"lu\"'\nsPRIx64='\"lx\"'\nsSCNfldbl='\"f\"'\nsched_yield=''\nscriptdir='~INST_TOP~~INST_VER~\\bin'\nscriptdirexp='~INST_TOP~~INST_VER~\\bin'\nsed='sed'\nseedfunc='Perl_drand48_init'\nselectminbits='32'\nselecttype='Perl_fd_set *'\nsendmail='blat'\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='cmd /x /c'\nshar=''\nsharpbang='#!'\nshmattype='void *'\nshortsize='2'\nshrpenv=''\nshsharp='true'\nsig_count='26'\nsig_name='ZERO HUP INT QUIT ILL NUM05 NUM06 NUM07 FPE KILL NUM10 SEGV NUM12 PIPE ALRM TERM NUM16 NUM17 NUM18 NUM19 CHLD BREAK ABRT STOP NUM24 CONT CLD'\nsig_name_init='\"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"NUM05\", \"NUM06\", \"NUM07\", \"FPE\", \"KILL\", \"NUM10\", \"SEGV\", \"NUM12\", \"PIPE\", \"ALRM\", \"TERM\", \"NUM16\", \"NUM17\", \"NUM18\", \"NUM19\", \"CHLD\", \"BREAK\", \"ABRT\", \"STOP\", \"NUM24\", \"CONT\", \"CLD\", 0'\nsig_num='0 1 2 21 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 20'\nsig_num_init='0, 1, 2, 21, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 20, 0'\nsig_size='27'\nsignal_t='void'\nsitearch='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\nsitearchexp='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\nsitebin='~INST_TOP~\\site~INST_VER~\\bin~INST_ARCH~'\nsitebinexp='~INST_TOP~\\site~INST_VER~\\bin~INST_ARCH~'\nsitehtml1dir=''\nsitehtml1direxp=''\nsitehtml3dir=''\nsitehtml3direxp=''\nsitelib='~INST_TOP~\\site~INST_VER~\\lib'\nsitelib_stem=''\nsitelibexp='~INST_TOP~\\site~INST_VER~\\lib'\nsiteman1dir=''\nsiteman1direxp=''\nsiteman3dir=''\nsiteman3direxp=''\nsiteprefix='~INST_TOP~\\site~INST_VER~'\nsiteprefixexp='~INST_TOP~\\site~INST_VER~'\nsitescript=''\nsitescriptexp=''\nsizesize='4'\nsizetype='size_t'\nsleep=''\nsmail=''\nso='dll'\nsockethdr=''\nsocketlib=''\nsocksizetype='int'\nsort='sort'\nspackage='Perl5'\nspitshell=''\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc=''\nssizetype='int'\nst_ino_sign='1'\nst_ino_size='4'\nstartperl='#!perl'\nstartsh='#!/bin/sh'\nstatic_ext=' '\nstdchar='char'\nstdio_base='((fp)->_base)'\nstdio_bufsiz='((fp)->_cnt + (fp)->_ptr - (fp)->_base)'\nstdio_cnt='((fp)->_cnt)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\nstrings='/usr/include/string.h'\nsubmit=''\nsubversion='~PERL_SUBVERSION~'\nsysman='/usr/man/man1'\ntail=''\ntar=''\ntargetarch=''\ntargetsh='cmd /x /c'\ntbl=''\ntee=''\ntest=''\ntimeincl='/usr/include/sys/time.h '\ntimetype='time_t'\ntmpnam_r_proto='0'\nto=':'\ntouch='touch'\ntr=''\ntrnl='\\012'\ntroff=''\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='unsigned __int64'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"ld\"'\nuidsign='-1'\nuidsize='4'\nuidtype='uid_t'\nuname='uname'\nuniq='uniq'\nuquadtype='unsigned __int64'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='undef'\nusedl='define'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='undef'\nusekernprocpathname='undef'\nuselargefiles='undef'\nuselongdouble='undef'\nusemallocwrap='define'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='define'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='true'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='false'\nusrinc='/usr/include'\nuuname=''\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvendorarch=''\nvendorarchexp=''\nvendorbin=''\nvendorbinexp=''\nvendorhtml1dir=' '\nvendorhtml1direxp=''\nvendorhtml3dir=' '\nvendorhtml3direxp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorman1dir=' '\nvendorman1direxp=''\nvendorman3dir=' '\nvendorman3direxp=''\nvendorprefix=''\nvendorprefixexp=''\nvendorscript=''\nvendorscriptexp=''\nversion=''\nversion_patchlevel_string=''\nversiononly='undef'\nvi=''\nxlibpth='/usr/lib/386 /lib/386'\nyacc='yacc'\nyaccflags=''\nzcat=''\nzip='zip'\nPERL_REVISION='~PERL_REVISION~'\nPERL_SUBVERSION='~PERL_SUBVERSION~'\nPERL_VERSION='~PERL_VERSION~'\nPERL_API_REVISION='~PERL_API_REVISION~'\nPERL_API_SUBVERSION='~PERL_API_SUBVERSION~'\nPERL_API_VERSION='~PERL_API_VERSION~'\nPERL_PATCHLEVEL='~PERL_PATCHLEVEL~'\nPERL_CONFIG_SH='true'\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/win32/config.gc": "## Configured by: ~cf_email~\n## Target system: WIN32\nAuthor=''\nDate='$Date'\nHeader=''\nId='$Id'\nLocker=''\nLog='$Log'\nRCSfile='$RCSfile'\nRevision='$Revision'\nSource=''\nState=''\n_a='.a'\n_exe='.exe'\n_o='.o'\nafs='false'\nafsroot='/afs'\nalignbytes='8'\naphostname=''\napi_revision='~PERL_API_REVISION~'\napi_subversion='~PERL_API_SUBVERSION~'\napi_version='~PERL_API_VERSION~'\napi_versionstring='~PERL_API_REVISION~.~PERL_API_VERSION~.~PERL_API_SUBVERSION~'\nar='~ARCHPREFIX~ar'\narchlib='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\narchlibexp='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\narchname64=''\narchname='MSWin32'\narchobjs=''\nasctime_r_proto='0'\nawk='awk'\nbaserev='5'\nbash=''\nbin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\nbinexp='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\nbison=''\nbootstrap_charset='undef'\nbyacc='byacc'\nbyteorder='1234'\nc=''\ncastflags='0'\ncat='type'\ncc='~ARCHPREFIX~gcc'\ncccdlflags=' '\nccdlflags=' '\nccflags='-MD -DWIN32'\nccflags_uselargefiles=''\nccname='~cc~'\nccsymbols=''\nccversion=''\ncf_by='nobody'\ncf_email='nobody@no.where.net'\ncf_time=''\ncharbits='8'\nchgrp=''\nchmod=''\nchown=''\nclocktype='clock_t'\ncomm=''\ncompress=''\ncontains='grep'\ncp='copy'\ncpio=''\ncpp='~cc~ -E'\ncpp_stuff='42'\ncppccsymbols=''\ncppflags='-DWIN32'\ncpplast=''\ncppminus='-'\ncpprun='~cc~ -E'\ncppstdin='~cc~ -E'\ncppsymbols=''\ncrypt_r_proto='0'\ncryptlib=''\ncsh='undef'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\nd_PRIEUldbl='undef'\nd_PRIFUldbl='undef'\nd_PRIGUldbl='undef'\nd_PRIXU64='define'\nd_PRId64='define'\nd_PRIeldbl='undef'\nd_PRIfldbl='undef'\nd_PRIgldbl='undef'\nd_PRIi64='define'\nd_PRIo64='define'\nd_PRIu64='define'\nd_PRIx64='define'\nd_SCNfldbl='undef'\nd__fwalk='undef'\nd_accept4='undef'\nd_access='define'\nd_accessx='undef'\nd_acosh='define'\nd_aintl='undef'\nd_alarm='define'\nd_archlib='define'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='define'\nd_atanh='define'\nd_atolf='undef'\nd_atoll='undef'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bsd='define'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_add_overflow='undef'\nd_builtin_choose_expr='undef'\nd_builtin_expect='undef'\nd_builtin_mul_overflow='undef'\nd_builtin_sub_overflow='undef'\nd_c99_variadic_macros='undef'\nd_casti32='define'\nd_castneg='define'\nd_cbrt='define'\nd_chown='undef'\nd_chroot='undef'\nd_chsize='define'\nd_class='undef'\nd_clearenv='undef'\nd_closedir='define'\nd_cmsghdr_s='undef'\nd_copysign='define'\nd_copysignl='define'\nd_cplusplus='undef'\nd_crypt='define'\nd_crypt_r='undef'\nd_csh='undef'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='undef'\nd_dbl_dig='define'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='define'\nd_dir_dd_fd='undef'\nd_dirfd='undef'\nd_dirnamlen='define'\nd_dladdr='undef'\nd_dlerror='define'\nd_dlopen='define'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_double_has_inf='define'\nd_double_has_nan='define'\nd_double_has_negative_zero='define'\nd_double_has_subnormals='define'\nd_double_style_cray='undef'\nd_double_style_ibm='undef'\nd_double_style_ieee='define'\nd_double_style_vax='undef'\nd_drand48_r='undef'\nd_drand48proto='undef'\nd_dup2='define'\nd_dup3='undef'\nd_duplocale='undef'\nd_eaccess='undef'\nd_endgrent='undef'\nd_endgrent_r='undef'\nd_endhent='undef'\nd_endhostent_r='undef'\nd_endnent='undef'\nd_endnetent_r='undef'\nd_endpent='undef'\nd_endprotoent_r='undef'\nd_endpwent='undef'\nd_endpwent_r='undef'\nd_endsent='undef'\nd_endservent_r='undef'\nd_eofnblk='define'\nd_erf='define'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='define'\nd_expm1='define'\nd_faststdio='define'\nd_fchdir='undef'\nd_fchmod='undef'\nd_fchmodat='undef'\nd_fchown='undef'\nd_fcntl='undef'\nd_fcntl_can_lock='undef'\nd_fd_macros='define'\nd_fd_set='define'\nd_fdclose='undef'\nd_fdim='undef'\nd_fds_bits='define'\nd_fegetround='undef'\nd_fgetpos='define'\nd_finite='define'\nd_finitel='undef'\nd_flexfnam='define'\nd_flock='define'\nd_flockproto='define'\nd_fma='undef'\nd_fmax='define'\nd_fmin='define'\nd_fork='undef'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='undef'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_freelocale='undef'\nd_frexpl='define'\nd_fs_data_s='undef'\nd_fseeko='undef'\nd_fsetpos='define'\nd_fstatfs='undef'\nd_fstatvfs='undef'\nd_fsync='undef'\nd_ftello='undef'\nd_ftime='define'\nd_futimes='undef'\nd_gai_strerror='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='undef'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='undef'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='undef'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='define'\nd_getitimer='undef'\nd_getlogin='define'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='undef'\nd_getnameinfo='undef'\nd_getnbyaddr='undef'\nd_getnbyname='undef'\nd_getnent='undef'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='undef'\nd_getpagsz='undef'\nd_getpbyname='define'\nd_getpbynumber='define'\nd_getpent='undef'\nd_getpgid='undef'\nd_getpgrp2='undef'\nd_getpgrp='undef'\nd_getppid='undef'\nd_getprior='undef'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='define'\nd_getprpwnam='undef'\nd_getpwent='undef'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='define'\nd_getsent='undef'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='define'\nd_getspnam='undef'\nd_getspnam_r='undef'\nd_gettimeod='define'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='undef'\nd_grpasswd='undef'\nd_has_C_UTF8='undef'\nd_hasmntopt='undef'\nd_htonl='define'\nd_hypot='define'\nd_ilogb='define'\nd_ilogbl='define'\nd_inc_version_list='undef'\nd_index='undef'\nd_inetaton='undef'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='undef'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='define'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='define'\nd_isinfl='undef'\nd_isless='define'\nd_isnan='define'\nd_isnanl='define'\nd_isnormal='define'\nd_j0='define'\nd_j0l='undef'\nd_killpg='define'\nd_lc_monetary_2008='undef'\nd_lchown='undef'\nd_ldbl_dig='define'\nd_ldexpl='define'\nd_lgamma='define'\nd_lgamma_r='undef'\nd_libm_lib_version='undef'\nd_link='define'\nd_linkat='undef'\nd_llrint='define'\nd_llrintl='define'\nd_llround='define'\nd_llroundl='define'\nd_localeconv_l='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='define'\nd_lockf='undef'\nd_log1p='define'\nd_log2='define'\nd_logb='define'\nd_long_double_style_ieee='undef'\nd_long_double_style_ieee_doubledouble='undef'\nd_long_double_style_ieee_extended='define'\nd_long_double_style_ieee_std='undef'\nd_long_double_style_vax='undef'\nd_longdbl='define'\nd_longlong='define'\nd_lrint='define'\nd_lrintl='define'\nd_lround='define'\nd_lroundl='define'\nd_lseekproto='define'\nd_lstat='undef'\nd_madvise='undef'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='define'\nd_mbrlen='undef'\nd_mbrtowc='undef'\nd_mbstowcs='define'\nd_mbtowc='define'\nd_memmem='undef'\nd_memrchr='undef'\nd_mkdir='define'\nd_mkdtemp='undef'\nd_mkfifo='undef'\nd_mkostemp='undef'\nd_mkstemp='undef'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='define'\nd_mmap='undef'\nd_modfl='define'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='undef'\nd_msg='undef'\nd_msg_ctrunc='undef'\nd_msg_dontroute='undef'\nd_msg_oob='undef'\nd_msg_peek='undef'\nd_msg_proxy='undef'\nd_msgctl='undef'\nd_msgget='undef'\nd_msghdr_s='undef'\nd_msgrcv='undef'\nd_msgsnd='undef'\nd_msync='undef'\nd_munmap='undef'\nd_mymalloc='undef'\nd_nan='define'\nd_nanosleep='undef'\nd_ndbm='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='define'\nd_newlocale='undef'\nd_nextafter='define'\nd_nexttoward='define'\nd_nice='undef'\nd_nl_langinfo='undef'\nd_nv_preserves_uv='define'\nd_nv_zero_is_allbits_zero='define'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='undef'\nd_openat='undef'\nd_pathconf='undef'\nd_pause='define'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe2='undef'\nd_pipe='define'\nd_poll='undef'\nd_portable='define'\nd_prctl='undef'\nd_prctl_set_name='undef'\nd_printf_format_null='undef'\nd_procselfexe='undef'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='undef'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='undef'\nd_pwpasswd='undef'\nd_pwquota='undef'\nd_qgcvt='undef'\nd_quad='define'\nd_querylocale='undef'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='undef'\nd_readv='undef'\nd_recvmsg='undef'\nd_regcomp='undef'\nd_remainder='define'\nd_remquo='define'\nd_rename='define'\nd_renameat='undef'\nd_rewinddir='define'\nd_rint='define'\nd_rmdir='define'\nd_round='define'\nd_sbrkproto='undef'\nd_scalbn='define'\nd_scalbnl='define'\nd_sched_yield='undef'\nd_scm_rights='undef'\nd_seekdir='define'\nd_select='define'\nd_sem='undef'\nd_semctl='undef'\nd_semctl_semid_ds='undef'\nd_semctl_semun='undef'\nd_semget='undef'\nd_semop='undef'\nd_sendmsg='undef'\nd_setegid='undef'\nd_seteuid='undef'\nd_setgrent='undef'\nd_setgrent_r='undef'\nd_setgrps='undef'\nd_sethent='undef'\nd_sethostent_r='undef'\nd_setitimer='undef'\nd_setlinebuf='undef'\nd_setlocale='define'\nd_setlocale_accepts_any_locale_name='undef'\nd_setlocale_r='undef'\nd_setnent='undef'\nd_setnetent_r='undef'\nd_setpent='undef'\nd_setpgid='undef'\nd_setpgrp2='undef'\nd_setpgrp='undef'\nd_setprior='undef'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='undef'\nd_setpwent_r='undef'\nd_setregid='undef'\nd_setresgid='undef'\nd_setresuid='undef'\nd_setreuid='undef'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='undef'\nd_setservent_r='undef'\nd_setsid='undef'\nd_setvbuf='define'\nd_shm='undef'\nd_shmat='undef'\nd_shmatprototype='undef'\nd_shmctl='undef'\nd_shmdt='undef'\nd_shmget='undef'\nd_sigaction='undef'\nd_siginfo_si_addr='undef'\nd_siginfo_si_band='undef'\nd_siginfo_si_errno='undef'\nd_siginfo_si_pid='undef'\nd_siginfo_si_status='undef'\nd_siginfo_si_uid='undef'\nd_siginfo_si_value='undef'\nd_signbit='define'\nd_sigprocmask='undef'\nd_sigsetjmp='undef'\nd_sin6_scope_id='define'\nd_sitearch='define'\nd_snprintf='define'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='define'\nd_socklen_t='undef'\nd_sockpair='undef'\nd_socks5_init='undef'\nd_sqrtl='define'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='undef'\nd_statfs_f_flags='undef'\nd_statfs_s='undef'\nd_static_inline='define'\nd_statvfs='undef'\nd_stdio_cnt_lval='define'\nd_stdio_ptr_lval='define'\nd_stdio_ptr_lval_nochange_cnt='define'\nd_stdio_ptr_lval_sets_cnt='undef'\nd_stdio_stream_array='undef'\nd_stdiobase='define'\nd_stdstdio='define'\nd_strcoll='define'\nd_strerror_l='undef'\nd_strerror_r='undef'\nd_strftime='define'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strnlen='undef'\nd_strtod='define'\nd_strtod_l='undef'\nd_strtol='define'\nd_strtold='undef'\nd_strtold_l='undef'\nd_strtoll='undef'\nd_strtoq='undef'\nd_strtoul='define'\nd_strtoull='undef'\nd_strtouq='undef'\nd_strxfrm='define'\nd_suidsafe='undef'\nd_symlink='undef'\nd_syscall='undef'\nd_syscallproto='undef'\nd_sysconf='undef'\nd_sysernlst=''\nd_syserrlst='define'\nd_system='define'\nd_tcgetpgrp='undef'\nd_tcsetpgrp='undef'\nd_telldir='define'\nd_telldirproto='define'\nd_tgamma='define'\nd_thread_safe_nl_langinfo_l='undef'\nd_time='define'\nd_timegm='undef'\nd_times='define'\nd_tm_tm_gmtoff='undef'\nd_tm_tm_zone='undef'\nd_tmpnam_r='undef'\nd_towlower='undef'\nd_towupper='undef'\nd_trunc='define'\nd_truncate='undef'\nd_truncl='define'\nd_ttyname_r='undef'\nd_tzname='define'\nd_u32align='define'\nd_ualarm='undef'\nd_umask='define'\nd_uname='define'\nd_union_semun='define'\nd_unlinkat='undef'\nd_unordered='undef'\nd_unsetenv='undef'\nd_uselocale='undef'\nd_usleep='undef'\nd_usleepproto='undef'\nd_ustat='undef'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vendorscript='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='define'\nd_voidtty=''\nd_vsnprintf='define'\nd_wait4='undef'\nd_waitpid='define'\nd_wcscmp='define'\nd_wcstombs='define'\nd_wcsxfrm='define'\nd_wctomb='define'\nd_writev='undef'\nd_xenix='undef'\ndate='date'\ndb_hashtype='int'\ndb_prefixtype='int'\ndb_version_major='0'\ndb_version_minor='0'\ndb_version_patch='0'\ndefault_inc_excludes_dot='undef'\ndirentrytype='struct direct'\ndlext='dll'\ndlltool='~ARCHPREFIX~dlltool'\ndlsrc='dl_win32.xs'\ndoubleinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f'\ndoublekind='3'\ndoublemantbits='52'\ndoublenanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f'\ndoublesize='8'\ndrand01='Perl_drand48()'\ndrand48_r_proto='0'\ndtrace=''\ndynamic_ext='Socket IO Fcntl Opcode SDBM_File attributes'\neagain='EAGAIN'\nebcdic='undef'\necho='echo'\negrep='egrep'\nemacs=''\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext='.exe'\nexpr='expr'\nextensions='~static_ext~ ~dynamic_ext~ ~nonxs_ext~'\nextern_C='extern'\nextras=''\nfflushNULL='define'\nfflushall='undef'\nfind='find'\nfirstmakefile='makefile'\nflex=''\nfpossize='8'\nfpostype='fpos_t'\nfreetype='void'\nfrom=':'\nfull_ar=''\nfull_csh=''\nfull_sed=''\ngccansipedantic=''\ngccosandvers=''\ngccversion=''\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"ld\"'\ngidsign='-1'\ngidsize='4'\ngidtype='gid_t'\nglibpth='/usr/shlib  /lib/pa1.1 /usr/lib/large /lib /usr/lib /usr/lib/386 /lib/386 /lib/large /usr/lib/small /lib/small /usr/ccs/lib /usr/ucblib /usr/shlib '\ngmake='gmake'\ngmtime_r_proto='0'\ngnulibc_version=''\ngrep='grep'\ngroupcat=''\ngroupstype='gid_t'\ngzip='gzip'\nh_fcntl='false'\nh_sysfile='true'\nhint='recommended'\nhostcat='ypcat hosts'\nhtml1dir=' '\nhtml1direxp=''\nhtml3dir=' '\nhtml3direxp=''\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='long long'\ni8size='1'\ni8type='char'\ni_arpainet='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='undef'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='define'\ni_execinfo='undef'\ni_fcntl='define'\ni_fenv='undef'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='undef'\ni_ieeefp='undef'\ni_inttypes='undef'\ni_langinfo='undef'\ni_libutil='undef'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='define'\ni_mallocmalloc='undef'\ni_mntent='undef'\ni_ndbm='undef'\ni_netdb='undef'\ni_neterrno='undef'\ni_netinettcp='undef'\ni_niin='undef'\ni_poll='undef'\ni_prot='undef'\ni_pthread='undef'\ni_pwd='undef'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='undef'\ni_socks='undef'\ni_stdbool='define'\ni_stdint='define'\ni_stdlib='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='undef'\ni_sysfile='undef'\ni_sysfilio='define'\ni_sysin='undef'\ni_sysioctl='undef'\ni_syslog='undef'\ni_sysmman='undef'\ni_sysmode='undef'\ni_sysmount='undef'\ni_sysndir='undef'\ni_sysparam='undef'\ni_syspoll='undef'\ni_sysresrc='undef'\ni_syssecrt='undef'\ni_sysselct='undef'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='undef'\ni_sysstatvfs='undef'\ni_systime='undef'\ni_systimek='undef'\ni_systimes='undef'\ni_systypes='define'\ni_sysuio='undef'\ni_sysun='undef'\ni_sysutsname='undef'\ni_sysvfs='undef'\ni_syswait='undef'\ni_termio='undef'\ni_termios='undef'\ni_time='define'\ni_unistd='undef'\ni_ustat='undef'\ni_utime='define'\ni_vfork='undef'\ni_wchar='undef'\ni_wctype='undef'\ni_xlocale='undef'\nignore_versioned_solibs=''\ninc_version_list=''\ninc_version_list_init='0'\nincpath=''\ninews=''\ninitialinstalllocation=''\ninstallarchlib='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\ninstallbin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\ninstallhtml1dir=''\ninstallhtml3dir=''\ninstallhtmldir='~INST_TOP~~INST_VER~\\html'\ninstallhtmlhelpdir='~INST_TOP~~INST_VER~\\htmlhelp'\ninstallman1dir='~INST_TOP~~INST_VER~\\man\\man1'\ninstallman3dir='~INST_TOP~~INST_VER~\\man\\man3'\ninstallprefix='~INST_TOP~~INST_VER~'\ninstallprefixexp='~INST_TOP~~INST_VER~'\ninstallprivlib='~INST_TOP~~INST_VER~\\lib'\ninstallscript='~INST_TOP~~INST_VER~\\bin'\ninstallsitearch='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\ninstallsitebin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\ninstallsitehtml1dir=''\ninstallsitehtml3dir=''\ninstallsitelib='~INST_TOP~\\site~INST_VER~\\lib'\ninstallsiteman1dir=''\ninstallsiteman3dir=''\ninstallsitescript=''\ninstallstyle='lib'\ninstallusrbinperl='undef'\ninstallvendorarch=''\ninstallvendorbin=''\ninstallvendorhtml1dir=''\ninstallvendorhtml3dir=''\ninstallvendorlib=''\ninstallvendorman1dir=''\ninstallvendorman3dir=''\ninstallvendorscript=''\nintsize='4'\nissymlink=''\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nknown_extensions='~static_ext~ ~dynamic_ext~ ~nonxs_ext~'\nksh=''\nld='~ARCHPREFIX~g++'\nlddlflags='-mdll ~LINK_FLAGS~'\nldflags='~LINK_FLAGS~'\nldflags_uselargefiles=''\nldlibpthname=''\nless='less'\nlib_ext='.a'\nlibc='libmsvcrt.a'\nlibperl='libperl.a'\nlibpth=''\nlibs=''\nlibsdirs=''\nlibsfiles=''\nlibsfound=''\nlibspath=''\nlibswanted='net socket inet nsl nm ndbm gdbm dbm db malloc dl ld sun m c cposix posix ndir dir crypt ucb bsd BSD PW x'\nlibswanted_uselargefiles='net socket inet nsl nm ndbm gdbm dbm db malloc dl ld sun m c cposix posix ndir dir crypt ucb bsd BSD PW x'\nline='line'\nlint=''\nlkflags=''\nln=''\nlns='copy'\nlocaltime_r_proto='0'\nlocincpth='/usr/local/include /opt/local/include /usr/gnu/include /opt/gnu/include /usr/GNU/include /opt/GNU/include'\nloclibpth='/usr/local/lib /opt/local/lib /usr/gnu/lib /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib'\nlongdblinfbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7f, 0x00, 0x00'\nlongdblkind='3'\nlongdblmantbits='64'\nlongdblnanbytes='0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f, 0x00, 0x00'\nlongdblsize='12'\nlonglongsize='8'\nlongsize='4'\nlp=''\nlpr=''\nls='dir'\nlseeksize='4'\nlseektype='long'\nmad='undef'\nmail=''\nmailx=''\nmake='dmake'\nmake_set_make='#'\nmallocobj='malloc.o'\nmallocsrc='malloc.c'\nmalloctype='void *'\nman1dir='~INST_TOP~~INST_VER~\\man\\man1'\nman1direxp='~INST_TOP~~INST_VER~\\man\\man1'\nman1ext='1'\nman3dir='~INST_TOP~~INST_VER~\\man\\man3'\nman3direxp='~INST_TOP~~INST_VER~\\man\\man3'\nman3ext='3'\nmips_type=''\nmistrustnm=''\nmkdir='mkdir'\nmmaptype='void *'\nmodetype='mode_t'\nmore='more /e'\nmultiarch='undef'\nmv=''\nmyarchname='MSWin32'\nmydomain=''\nmyhostname=''\nmyuname=''\nn='-n'\nneed_va_copy='undef'\nnetdb_hlen_type='int'\nnetdb_host_type='char *'\nnetdb_name_type='char *'\nnetdb_net_type='long'\nnm='~ARCHPREFIX~nm'\nnm_opt=''\nnm_so_opt=''\nnonxs_ext='Errno'\nnroff=''\nnvEUformat='\"E\"'\nnvFUformat='\"F\"'\nnvGUformat='\"G\"'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='32'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvmantbits='52'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.o'\nold_pthread_create_joinable=''\noptimize='-O2'\norderlib='false'\nosname='MSWin32'\nosvers='4.0'\notherlibdirs=''\npackage='perl5'\npager='more /e'\npasscat=''\npatchlevel='~PERL_VERSION~'\npath_sep=';'\nperl5=''\nperl='perl'\nperl_patchlevel='~PERL_PATCHLEVEL~'\nperl_static_inline='static __inline__'\nperladmin=''\nperllibs='~libs~'\nperlpath='~INST_TOP~~INST_VER~\\bin~INST_ARCH~\\perl.exe'\npg=''\nphostname='hostname'\npidtype='int'\nplibpth=''\npmake=''\npr=''\nprefix='~INST_TOP~'\nprefixexp='~INST_TOP~'\nprivlib='~INST_TOP~~INST_VER~\\lib'\nprivlibexp='~INST_TOP~~INST_VER~\\lib'\nprocselfexe=''\nprototype='define'\nptrsize='4'\nquadkind='3'\nquadtype='long long'\nrandbits='48'\nrandfunc='Perl_drand48'\nrandom_r_proto='0'\nrandseedtype='U32'\nranlib='rem'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nrevision='5'\nrm='del'\nrm_try=''\nrmail=''\nrun=''\nrunnm='true'\nsGMTIME_max=\"2147483647\"\nsGMTIME_min=\"0\"\nsLOCALTIME_max=\"2147483647\"\nsLOCALTIME_min=\"0\"\nsPRIEUldbl='\"LE\"'\nsPRIFUldbl='\"LF\"'\nsPRIGUldbl='\"LG\"'\nsPRIXU64='\"lX\"'\nsPRId64='\"ld\"'\nsPRIeldbl='\"Le\"'\nsPRIfldbl='\"Lf\"'\nsPRIgldbl='\"Lg\"'\nsPRIi64='\"li\"'\nsPRIo64='\"lo\"'\nsPRIu64='\"lu\"'\nsPRIx64='\"lx\"'\nsSCNfldbl='\"Lf\"'\nsched_yield=''\nscriptdir='~INST_TOP~~INST_VER~\\bin'\nscriptdirexp='~INST_TOP~~INST_VER~\\bin'\nsed='sed'\nseedfunc='Perl_drand48_init'\nselectminbits='32'\nselecttype='Perl_fd_set *'\nsendmail='blat'\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='cmd /x /c'\nshar=''\nsharpbang='#!'\nshmattype='void *'\nshortsize='2'\nshrpenv=''\nshsharp='true'\nsig_count='26'\nsig_name='ZERO HUP INT QUIT ILL NUM05 NUM06 NUM07 FPE KILL NUM10 SEGV NUM12 PIPE ALRM TERM NUM16 NUM17 NUM18 NUM19 CHLD BREAK ABRT STOP NUM24 CONT CLD'\nsig_name_init='\"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"NUM05\", \"NUM06\", \"NUM07\", \"FPE\", \"KILL\", \"NUM10\", \"SEGV\", \"NUM12\", \"PIPE\", \"ALRM\", \"TERM\", \"NUM16\", \"NUM17\", \"NUM18\", \"NUM19\", \"CHLD\", \"BREAK\", \"ABRT\", \"STOP\", \"NUM24\", \"CONT\", \"CLD\", 0'\nsig_num='0 1 2 21 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 20'\nsig_num_init='0, 1, 2, 21, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 20, 0'\nsig_size='27'\nsignal_t='void'\nsitearch='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\nsitearchexp='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\nsitebin='~INST_TOP~\\site~INST_VER~\\bin~INST_ARCH~'\nsitebinexp='~INST_TOP~\\site~INST_VER~\\bin~INST_ARCH~'\nsitehtml1dir=''\nsitehtml1direxp=''\nsitehtml3dir=''\nsitehtml3direxp=''\nsitelib='~INST_TOP~\\site~INST_VER~\\lib'\nsitelib_stem=''\nsitelibexp='~INST_TOP~\\site~INST_VER~\\lib'\nsiteman1dir=''\nsiteman1direxp=''\nsiteman3dir=''\nsiteman3direxp=''\nsiteprefix='~INST_TOP~\\site~INST_VER~'\nsiteprefixexp='~INST_TOP~\\site~INST_VER~'\nsitescript=''\nsitescriptexp=''\nsizesize='4'\nsizetype='size_t'\nsleep=''\nsmail=''\nso='dll'\nsockethdr=''\nsocketlib=''\nsocksizetype='int'\nsort='sort'\nspackage='Perl5'\nspitshell=''\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc=''\nssizetype='int'\nst_ino_sign='1'\nst_ino_size='4'\nstartperl='#!perl'\nstartsh='#!/bin/sh'\nstatic_ext=' '\nstdchar='char'\nstdio_base='((fp)->_base)'\nstdio_bufsiz='((fp)->_cnt + (fp)->_ptr - (fp)->_base)'\nstdio_cnt='((fp)->_cnt)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\nstrings='/usr/include/string.h'\nsubmit=''\nsubversion='~PERL_SUBVERSION~'\nsysman='/usr/man/man1'\ntail=''\ntar=''\ntargetarch=''\ntargetsh='cmd /x /c'\ntbl=''\ntee=''\ntest=''\ntimeincl='/usr/include/sys/time.h '\ntimetype='time_t'\ntmpnam_r_proto='0'\nto=':'\ntouch='touch'\ntr=''\ntrnl='\\012'\ntroff=''\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='unsigned long long'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"ld\"'\nuidsign='-1'\nuidsize='4'\nuidtype='uid_t'\nuname='uname'\nuniq='uniq'\nuquadtype='unsigned long long'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='undef'\nusedl='define'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='undef'\nusekernprocpathname='undef'\nuselargefiles='undef'\nuselongdouble='undef'\nusemallocwrap='define'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='define'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='true'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='false'\nusrinc='/usr/include'\nuuname=''\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvendorarch=''\nvendorarchexp=''\nvendorbin=''\nvendorbinexp=''\nvendorhtml1dir=' '\nvendorhtml1direxp=''\nvendorhtml3dir=' '\nvendorhtml3direxp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorman1dir=' '\nvendorman1direxp=''\nvendorman3dir=' '\nvendorman3direxp=''\nvendorprefix=''\nvendorprefixexp=''\nvendorscript=''\nvendorscriptexp=''\nversion=''\nversion_patchlevel_string=''\nversiononly='undef'\nvi=''\nxlibpth='/usr/lib/386 /lib/386'\nyacc='yacc'\nyaccflags=''\nzcat=''\nzip='zip'\nPERL_REVISION='~PERL_REVISION~'\nPERL_SUBVERSION='~PERL_SUBVERSION~'\nPERL_VERSION='~PERL_VERSION~'\nPERL_API_REVISION='~PERL_API_REVISION~'\nPERL_API_SUBVERSION='~PERL_API_SUBVERSION~'\nPERL_API_VERSION='~PERL_API_VERSION~'\nPERL_PATCHLEVEL='~PERL_PATCHLEVEL~'\nPERL_CONFIG_SH='true'\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/win32/config_H.gc": "/* This file was produced by running the config_h.SH script, which\n * gets its values from undef, which is generally produced by\n * running Configure.\n *\n * Feel free to modify any of this as the need arises.  Note, however,\n * that running config_h.SH again will wipe out any changes you've made.\n * For a more permanent change edit undef and rerun config_h.SH.\n */\n\n/* Package name      : perl5\n * Source directory  : \n * Configuration time: Tue Oct 17 08:44:03 2017\n * Configured by     : shay\n * Target system     : \n */\n\n#ifndef _config_h_\n#define _config_h_\n\n/* LOC_SED:\n *\tThis symbol holds the complete pathname to the sed program.\n */\n#define LOC_SED \t\"\"\t/**/\n\n/* HAS_ALARM:\n *\tThis symbol, if defined, indicates that the alarm routine is\n *\tavailable.\n */\n#define HAS_ALARM\t\t/**/\n\n/* HAS_CBRT:\n *\tThis symbol, if defined, indicates that the cbrt() (cube root)\n *\tfunction is available.\n */\n#define HAS_CBRT\t\t/**/\n\n/* HAS_CHOWN:\n *\tThis symbol, if defined, indicates that the chown routine is\n *\tavailable.\n */\n/*#define HAS_CHOWN\t\t/ **/\n\n/* HAS_CHROOT:\n *\tThis symbol, if defined, indicates that the chroot routine is\n *\tavailable.\n */\n/*#define HAS_CHROOT\t\t/ **/\n\n/* HAS_CHSIZE:\n *\tThis symbol, if defined, indicates that the chsize routine is available\n *\tto truncate files.  You might need a -lx to get this routine.\n */\n#define\tHAS_CHSIZE\t\t/**/\n\n/* HAS_CRYPT:\n *\tThis symbol, if defined, indicates that the crypt routine is available\n *\tto encrypt passwords and the like.\n */\n#define HAS_CRYPT\t\t/**/\n\n/* HAS_CTERMID:\n *\tThis symbol, if defined, indicates that the ctermid routine is\n *\tavailable to generate filename for terminal.\n */\n/*#define HAS_CTERMID\t\t/ **/\n\n/* HAS_CUSERID:\n *\tThis symbol, if defined, indicates that the cuserid routine is\n *\tavailable to get character login names.\n */\n/*#define HAS_CUSERID\t\t/ **/\n\n/* HAS_DIFFTIME:\n *\tThis symbol, if defined, indicates that the difftime routine is\n *\tavailable.\n */\n#define HAS_DIFFTIME\t\t/**/\n\n/* HAS_DLERROR:\n *\tThis symbol, if defined, indicates that the dlerror routine is\n *\tavailable to return a string describing the last error that\n *\toccurred from a call to dlopen(), dlclose() or dlsym().\n */\n#define HAS_DLERROR\t/**/\n\n/* HAS_DUP2:\n *\tThis symbol, if defined, indicates that the dup2 routine is\n *\tavailable to duplicate file descriptors.\n */\n#define HAS_DUP2\t/**/\n\n/* HAS_FCHMOD:\n *\tThis symbol, if defined, indicates that the fchmod routine is available\n *\tto change mode of opened files.  If unavailable, use chmod().\n */\n/*#define HAS_FCHMOD\t\t/ **/\n\n/* HAS_FCHOWN:\n *\tThis symbol, if defined, indicates that the fchown routine is available\n *\tto change ownership of opened files.  If unavailable, use chown().\n */\n/*#define HAS_FCHOWN\t\t/ **/\n\n/* HAS_FCNTL:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe fcntl() function exists.\n */\n/*#define HAS_FCNTL\t\t/ **/\n\n/* HAS_FGETPOS:\n *\tThis symbol, if defined, indicates that the fgetpos routine is\n *\tavailable to get the file position indicator, similar to ftell().\n */\n#define HAS_FGETPOS\t/**/\n\n/* HAS_FLOCK:\n *\tThis symbol, if defined, indicates that the flock routine is\n *\tavailable to do file locking.\n */\n#define HAS_FLOCK\t\t/**/\n\n/* HAS_FORK:\n *\tThis symbol, if defined, indicates that the fork routine is\n *\tavailable.\n */\n/*#define HAS_FORK\t\t/ **/\n\n/* HAS_FSETPOS:\n *\tThis symbol, if defined, indicates that the fsetpos routine is\n *\tavailable to set the file position indicator, similar to fseek().\n */\n#define HAS_FSETPOS\t/**/\n\n/* HAS_GETTIMEOFDAY:\n *\tThis symbol, if defined, indicates that the gettimeofday() system\n *\tcall is available for a sub-second accuracy clock. Usually, the file\n *\t<sys/resource.h> needs to be included (see I_SYS_RESOURCE).\n *\tThe type \"Timeval\" should be used to refer to \"struct timeval\".\n */\n#define HAS_GETTIMEOFDAY\t/**/\n#ifdef HAS_GETTIMEOFDAY\n#define Timeval struct timeval\t/* Structure used by gettimeofday() */\n#endif\n\n/* HAS_GETGROUPS:\n *\tThis symbol, if defined, indicates that the getgroups() routine is\n *\tavailable to get the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_GETGROUPS\t\t/ **/\n\n/* HAS_GETLOGIN:\n *\tThis symbol, if defined, indicates that the getlogin routine is\n *\tavailable to get the login name.\n */\n#define HAS_GETLOGIN\t\t/**/\n\n/* HAS_GETPGID:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe getpgid(pid) function is available to get the\n *\tprocess group id.\n */\n/*#define HAS_GETPGID\t\t/ **/\n\n/* HAS_GETPGRP2:\n *\tThis symbol, if defined, indicates that the getpgrp2() (as in DG/UX)\n *\troutine is available to get the current process group.\n */\n/*#define HAS_GETPGRP2\t\t/ **/\n\n/* HAS_GETPPID:\n *\tThis symbol, if defined, indicates that the getppid routine is\n *\tavailable to get the parent process ID.\n */\n/*#define HAS_GETPPID\t\t/ **/\n\n/* HAS_GETPRIORITY:\n *\tThis symbol, if defined, indicates that the getpriority routine is\n *\tavailable to get a process's priority.\n */\n/*#define HAS_GETPRIORITY\t\t/ **/\n\n/* HAS_INET_ATON:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tinet_aton() function is available to parse IP address \"dotted-quad\"\n *\tstrings.\n */\n/*#define HAS_INET_ATON\t\t/ **/\n\n/* HAS_KILLPG:\n *\tThis symbol, if defined, indicates that the killpg routine is available\n *\tto kill process groups.  If unavailable, you probably should use kill\n *\twith a negative process number.\n */\n#define HAS_KILLPG\t/**/\n\n/* HAS_LINK:\n *\tThis symbol, if defined, indicates that the link routine is\n *\tavailable to create hard links.\n */\n#define HAS_LINK\t/**/\n\n/* HAS_LOCALECONV:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable for numeric and monetary formatting conventions.\n */\n#define HAS_LOCALECONV\t/**/\n\n/* HAS_LOCKF:\n *\tThis symbol, if defined, indicates that the lockf routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_LOCKF\t\t/ **/\n\n/* HAS_LSTAT:\n *\tThis symbol, if defined, indicates that the lstat routine is\n *\tavailable to do file stats on symbolic links.\n */\n/*#define HAS_LSTAT\t\t/ **/\n\n/* HAS_MBLEN:\n *\tThis symbol, if defined, indicates that the mblen routine is available\n *\tto find the number of bytes in a multibye character.\n */\n#define HAS_MBLEN\t\t/**/\n\n/* HAS_MBSTOWCS:\n *\tThis symbol, if defined, indicates that the mbstowcs routine is\n *\tavailable to convert a multibyte string into a wide character string.\n */\n#define\tHAS_MBSTOWCS\t\t/**/\n\n/* HAS_MBTOWC:\n *\tThis symbol, if defined, indicates that the mbtowc routine is available\n *\tto convert a multibyte to a wide character.\n */\n#define HAS_MBTOWC\t\t/**/\n\n/* HAS_MKDIR:\n *\tThis symbol, if defined, indicates that the mkdir routine is available\n *\tto create directories.  Otherwise you should fork off a new process to\n *\texec /bin/mkdir.\n */\n#define HAS_MKDIR\t\t/**/\n\n/* HAS_MKFIFO:\n *\tThis symbol, if defined, indicates that the mkfifo routine is\n *\tavailable to create FIFOs. Otherwise, mknod should be able to\n *\tdo it for you. However, if mkfifo is there, mknod might require\n *\tsuper-user privileges which mkfifo will not.\n */\n/*#define HAS_MKFIFO\t\t/ **/\n\n/* HAS_MKTIME:\n *\tThis symbol, if defined, indicates that the mktime routine is\n *\tavailable.\n */\n#define HAS_MKTIME\t\t/**/\n\n/* HAS_MSYNC:\n *\tThis symbol, if defined, indicates that the msync system call is\n *\tavailable to synchronize a mapped file.\n */\n/*#define HAS_MSYNC\t\t/ **/\n\n/* HAS_MUNMAP:\n *\tThis symbol, if defined, indicates that the munmap system call is\n *\tavailable to unmap a region, usually mapped by mmap().\n */\n/*#define HAS_MUNMAP\t\t/ **/\n\n/* HAS_NICE:\n *\tThis symbol, if defined, indicates that the nice routine is\n *\tavailable.\n */\n/*#define HAS_NICE\t\t/ **/\n\n/* HAS_PATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given filename.\n */\n/* HAS_FPATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given open file descriptor.\n */\n/*#define HAS_PATHCONF\t\t/ **/\n/*#define HAS_FPATHCONF\t\t/ **/\n\n/* HAS_PAUSE:\n *\tThis symbol, if defined, indicates that the pause routine is\n *\tavailable to suspend a process until a signal is received.\n */\n#define HAS_PAUSE\t\t/**/\n\n/* HAS_PIPE:\n *\tThis symbol, if defined, indicates that the pipe routine is\n *\tavailable to create an inter-process channel.\n */\n#define HAS_PIPE\t\t/**/\n\n/* HAS_POLL:\n *\tThis symbol, if defined, indicates that the poll routine is\n *\tavailable to poll active file descriptors.  Please check I_POLL and\n *\tI_SYS_POLL to know which header should be included as well.\n */\n/*#define HAS_POLL\t\t/ **/\n\n/* HAS_READDIR:\n *\tThis symbol, if defined, indicates that the readdir routine is\n *\tavailable to read directory entries. You may have to include\n *\t<dirent.h>. See I_DIRENT.\n */\n#define HAS_READDIR\t\t/**/\n\n/* HAS_SEEKDIR:\n *\tThis symbol, if defined, indicates that the seekdir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_SEEKDIR\t\t/**/\n\n/* HAS_TELLDIR:\n *\tThis symbol, if defined, indicates that the telldir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_TELLDIR\t\t/**/\n\n/* HAS_REWINDDIR:\n *\tThis symbol, if defined, indicates that the rewinddir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_REWINDDIR\t\t/**/\n\n/* HAS_READLINK:\n *\tThis symbol, if defined, indicates that the readlink routine is\n *\tavailable to read the value of a symbolic link.\n */\n/*#define HAS_READLINK\t\t/ **/\n\n/* HAS_REGCOMP:\n *\tThis symbol, if defined, indicates that the regcomp() routine is\n *\tavailable to do some regular patern matching (usually on POSIX.2\n *\tconforming systems).\n */\n/*#define HAS_REGCOMP\t\t/ * POSIX.2 */\n\n/* HAS_RENAME:\n *\tThis symbol, if defined, indicates that the rename routine is available\n *\tto rename files.  Otherwise you should do the unlink(), link(), unlink()\n *\ttrick.\n */\n#define HAS_RENAME\t/**/\n\n/* HAS_RMDIR:\n *\tThis symbol, if defined, indicates that the rmdir routine is\n *\tavailable to remove directories. Otherwise you should fork off a\n *\tnew process to exec /bin/rmdir.\n */\n#define HAS_RMDIR\t\t/**/\n\n/* HAS_SELECT:\n *\tThis symbol, if defined, indicates that the select routine is\n *\tavailable to select active file descriptors. If the timeout field\n *\tis used, <sys/time.h> may need to be included.\n */\n#define HAS_SELECT\t/**/\n\n/* HAS_SETEGID:\n *\tThis symbol, if defined, indicates that the setegid routine is available\n *\tto change the effective gid of the current program.\n */\n/*#define HAS_SETEGID\t\t/ **/\n\n/* HAS_SETEUID:\n *\tThis symbol, if defined, indicates that the seteuid routine is available\n *\tto change the effective uid of the current program.\n */\n/*#define HAS_SETEUID\t\t/ **/\n\n/* HAS_SETGROUPS:\n *\tThis symbol, if defined, indicates that the setgroups() routine is\n *\tavailable to set the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_SETGROUPS\t\t/ **/\n\n/* HAS_SETLINEBUF:\n *\tThis symbol, if defined, indicates that the setlinebuf routine is\n *\tavailable to change stderr or stdout from block-buffered or unbuffered\n *\tto a line-buffered mode.\n */\n/*#define HAS_SETLINEBUF\t\t/ **/\n\n/* HAS_SETLOCALE:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable to handle locale-specific ctype implementations.\n */\n#define HAS_SETLOCALE\t/**/\n\n/* HAS_SETPGID:\n *\tThis symbol, if defined, indicates that the setpgid(pid, gpid)\n *\troutine is available to set process group ID.\n */\n/*#define HAS_SETPGID\t/ **/\n\n/* HAS_SETPGRP2:\n *\tThis symbol, if defined, indicates that the setpgrp2() (as in DG/UX)\n *\troutine is available to set the current process group.\n */\n/*#define HAS_SETPGRP2\t\t/ **/\n\n/* HAS_SETPRIORITY:\n *\tThis symbol, if defined, indicates that the setpriority routine is\n *\tavailable to set a process's priority.\n */\n/*#define HAS_SETPRIORITY\t\t/ **/\n\n/* HAS_SETREGID:\n *\tThis symbol, if defined, indicates that the setregid routine is\n *\tavailable to change the real and effective gid of the current\n *\tprocess.\n */\n/* HAS_SETRESGID:\n *\tThis symbol, if defined, indicates that the setresgid routine is\n *\tavailable to change the real, effective and saved gid of the current\n *\tprocess.\n */\n/*#define HAS_SETREGID\t\t/ **/\n/*#define HAS_SETRESGID\t\t/ **/\n\n/* HAS_SETREUID:\n *\tThis symbol, if defined, indicates that the setreuid routine is\n *\tavailable to change the real and effective uid of the current\n *\tprocess.\n */\n/* HAS_SETRESUID:\n *\tThis symbol, if defined, indicates that the setresuid routine is\n *\tavailable to change the real, effective and saved uid of the current\n *\tprocess.\n */\n/*#define HAS_SETREUID\t\t/ **/\n/*#define HAS_SETRESUID\t\t/ **/\n\n/* HAS_SETRGID:\n *\tThis symbol, if defined, indicates that the setrgid routine is available\n *\tto change the real gid of the current program.\n */\n/*#define HAS_SETRGID\t\t/ **/\n\n/* HAS_SETRUID:\n *\tThis symbol, if defined, indicates that the setruid routine is available\n *\tto change the real uid of the current program.\n */\n/*#define HAS_SETRUID\t\t/ **/\n\n/* HAS_SETSID:\n *\tThis symbol, if defined, indicates that the setsid routine is\n *\tavailable to set the process group ID.\n */\n/*#define HAS_SETSID\t/ **/\n\n/* HAS_STAT:\n *\tThis symbol, if defined, indicates that the stat routine is\n *\tavailable to get file status.\n */\n#define HAS_STAT\t/**/\n\n/* HAS_STRCOLL:\n *\tThis symbol, if defined, indicates that the strcoll routine is\n *\tavailable to compare strings using collating information.\n */\n#define HAS_STRCOLL\t/**/\n\n/* HAS_STRTOD:\n *\tThis symbol, if defined, indicates that the strtod routine is\n *\tavailable to provide better numeric string conversion than atof().\n */\n#define HAS_STRTOD\t/**/\n\n/* HAS_STRTOL:\n *\tThis symbol, if defined, indicates that the strtol routine is available\n *\tto provide better numeric string conversion than atoi() and friends.\n */\n#define HAS_STRTOL\t/**/\n\n/* HAS_STRXFRM:\n *\tThis symbol, if defined, indicates that the strxfrm() routine is\n *\tavailable to transform strings.\n */\n#define HAS_STRXFRM\t/**/\n\n/* HAS_SYMLINK:\n *\tThis symbol, if defined, indicates that the symlink routine is available\n *\tto create symbolic links.\n */\n/*#define HAS_SYMLINK\t/ **/\n\n/* HAS_SYSCALL:\n *\tThis symbol, if defined, indicates that the syscall routine is\n *\tavailable to call arbitrary system calls. If undefined, that's tough.\n */\n/*#define HAS_SYSCALL\t/ **/\n\n/* HAS_SYSCONF:\n *\tThis symbol, if defined, indicates that sysconf() is available\n *\tto determine system related limits and options.\n */\n/*#define HAS_SYSCONF\t/ **/\n\n/* HAS_SYSTEM:\n *\tThis symbol, if defined, indicates that the system routine is\n *\tavailable to issue a shell command.\n */\n#define HAS_SYSTEM\t/**/\n\n/* HAS_TCGETPGRP:\n *\tThis symbol, if defined, indicates that the tcgetpgrp routine is\n *\tavailable to get foreground process group ID.\n */\n/*#define HAS_TCGETPGRP\t\t/ **/\n\n/* HAS_TCSETPGRP:\n *\tThis symbol, if defined, indicates that the tcsetpgrp routine is\n *\tavailable to set foreground process group ID.\n */\n/*#define HAS_TCSETPGRP\t\t/ **/\n\n/* HAS_TRUNCATE:\n *\tThis symbol, if defined, indicates that the truncate routine is\n *\tavailable to truncate files.\n */\n/*#define HAS_TRUNCATE\t/ **/\n\n/* HAS_TZNAME:\n *\tThis symbol, if defined, indicates that the tzname[] array is\n *\tavailable to access timezone names.\n */\n#define HAS_TZNAME\t\t/**/\n\n/* HAS_UMASK:\n *\tThis symbol, if defined, indicates that the umask routine is\n *\tavailable to set and get the value of the file creation mask.\n */\n#define HAS_UMASK\t\t/**/\n\n/* HAS_USLEEP:\n *\tThis symbol, if defined, indicates that the usleep routine is\n *\tavailable to let the process sleep on a sub-second accuracy.\n */\n/*#define HAS_USLEEP\t\t/ **/\n\n/* HAS_WAIT4:\n *\tThis symbol, if defined, indicates that wait4() exists.\n */\n/*#define HAS_WAIT4\t/ **/\n\n/* HAS_WAITPID:\n *\tThis symbol, if defined, indicates that the waitpid routine is\n *\tavailable to wait for child process.\n */\n#define HAS_WAITPID\t/**/\n\n/* HAS_WCSTOMBS:\n *\tThis symbol, if defined, indicates that the wcstombs routine is\n *\tavailable to convert wide character strings to multibyte strings.\n */\n#define HAS_WCSTOMBS\t/**/\n\n/* HAS_WCTOMB:\n *\tThis symbol, if defined, indicates that the wctomb routine is available\n *\tto convert a wide character to a multibyte.\n */\n#define HAS_WCTOMB\t\t/**/\n\n/* Groups_t:\n *\tThis symbol holds the type used for the second argument to\n *\tgetgroups() and setgroups().  Usually, this is the same as\n *\tgidtype (gid_t) , but sometimes it isn't.\n *\tIt can be int, ushort, gid_t, etc...\n *\tIt may be necessary to include <sys/types.h> to get any\n *\ttypedef'ed information.  This is only required if you have\n *\tgetgroups() or setgroups()..\n */\n#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)\n#define Groups_t gid_t\t/* Type for 2nd arg to [sg]etgroups() */\n#endif\n\n/* I_ARPA_INET:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <arpa/inet.h> to get inet_addr and friends declarations.\n */\n#define\tI_ARPA_INET\t\t/**/\n\n/* I_DBM:\n *\tThis symbol, if defined, indicates that <dbm.h> exists and should\n *\tbe included.\n */\n/* I_RPCSVC_DBM:\n *\tThis symbol, if defined, indicates that <rpcsvc/dbm.h> exists and\n *\tshould be included.\n */\n/*#define I_DBM\t/ **/\n/*#define I_RPCSVC_DBM\t/ **/\n\n/* I_DLFCN:\n *\tThis symbol, if defined, indicates that <dlfcn.h> exists and should\n *\tbe included.\n */\n#define I_DLFCN\t\t/**/\n\n/* I_FCNTL:\n *\tThis manifest constant tells the C program to include <fcntl.h>.\n */\n#define I_FCNTL\t/**/\n\n/* I_GDBM:\n *\tThis symbol, if defined, indicates that <gdbm.h> exists and should\n *\tbe included.\n */\n/*#define I_GDBM\t/ **/\n\n/* I_LOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <locale.h>.\n */\n#define\tI_LOCALE\t\t/**/\n\n/* I_NETINET_IN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/in.h>. Otherwise, you may try <sys/in.h>.\n */\n/*#define I_NETINET_IN\t/ **/\n\n/* I_SYS_DIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/dir.h>.\n */\n/*#define I_SYS_DIR\t\t/ **/\n\n/* I_SYS_FILE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/file.h> to get definition of R_OK and friends.\n */\n/*#define I_SYS_FILE\t\t/ **/\n\n/* I_SYS_IOCTL:\n *\tThis symbol, if defined, indicates that <sys/ioctl.h> exists and should\n *\tbe included. Otherwise, include <sgtty.h> or <termio.h>.\n */\n/* I_SYS_SOCKIO:\n *\tThis symbol, if defined, indicates the <sys/sockio.h> should be included\n *\tto get socket ioctl options, like SIOCATMARK.\n */\n/*#define\tI_SYS_IOCTL\t\t/ **/\n/*#define I_SYS_SOCKIO\t/ **/\n\n/* I_SYS_NDIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/ndir.h>.\n */\n/*#define I_SYS_NDIR\t/ **/\n\n/* I_SYS_PARAM:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/param.h>.\n */\n/*#define I_SYS_PARAM\t\t/ **/\n\n/* I_SYS_POLL:\n *\tThis symbol, if defined, indicates that the program may include\n *\t<sys/poll.h>.  When I_POLL is also defined, it's probably safest\n *\tto only include <poll.h>.\n */\n/*#define I_SYS_POLL\t/ **/\n\n/* I_SYS_RESOURCE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/resource.h>.\n */\n/*#define I_SYS_RESOURCE\t\t/ **/\n\n/* I_SYS_SELECT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/select.h> in order to get definition of struct timeval.\n */\n/*#define I_SYS_SELECT\t/ **/\n\n/* I_SYS_STAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/stat.h>.\n */\n#define\tI_SYS_STAT\t\t/**/\n\n/* I_SYS_TIMES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/times.h>.\n */\n/*#define\tI_SYS_TIMES\t\t/ **/\n\n/* I_SYS_TYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/types.h>.\n */\n#define\tI_SYS_TYPES\t\t/**/\n\n/* I_SYS_UN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/un.h> to get UNIX domain socket definitions.\n */\n/*#define I_SYS_UN\t\t/ **/\n\n/* I_SYS_WAIT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/wait.h>.\n */\n/*#define I_SYS_WAIT\t/ **/\n\n/* I_UNISTD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <unistd.h>.\n */\n/*#define I_UNISTD\t\t/ **/\n\n/* I_UTIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <utime.h>.\n */\n#define I_UTIME\t\t/**/\n\n/* I_VFORK:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude vfork.h.\n */\n/*#define I_VFORK\t/ **/\n\n/* STDCHAR:\n *\tThis symbol is defined to be the type of char used in stdio.h.\n *\tIt has the values \"unsigned char\" or \"char\".\n */\n#define STDCHAR char\t/**/\n\n/* INTSIZE:\n *\tThis symbol contains the value of sizeof(int) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* LONGSIZE:\n *\tThis symbol contains the value of sizeof(long) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* SHORTSIZE:\n *\tThis symbol contains the value of sizeof(short) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n#define INTSIZE 4\t\t/**/\n#define LONGSIZE 4\t\t/**/\n#define SHORTSIZE 2\t\t/**/\n\n/* MULTIARCH:\n *\tThis symbol, if defined, signifies that the build\n *\tprocess will produce some binary files that are going to be\n *\tused in a cross-platform environment.  This is the case for\n *\texample with the NeXT \"fat\" binaries that contain executables\n *\tfor several CPUs.\n */\n/*#define MULTIARCH\t\t/ **/\n\n/* HAS_QUAD:\n *\tThis symbol, if defined, tells that there's a 64-bit integer type,\n *\tQuad_t, and its unsigned counterpart, Uquad_t. QUADKIND will be one\n *\tof QUAD_IS_INT, QUAD_IS_LONG, QUAD_IS_LONG_LONG, QUAD_IS_INT64_T,\n *\tor QUAD_IS___INT64.\n */\n#define HAS_QUAD\t/**/\n#ifdef HAS_QUAD\n#   define Quad_t long long\t/**/\n#   define Uquad_t unsigned long long\t/**/\n#   define QUADKIND 3\t/**/\n#   define QUAD_IS_INT\t1\n#   define QUAD_IS_LONG\t2\n#   define QUAD_IS_LONG_LONG\t3\n#   define QUAD_IS_INT64_T\t4\n#   define QUAD_IS___INT64\t5\n#endif\n\n/* HAS_ACCESSX:\n *\tThis symbol, if defined, indicates that the accessx routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_ACCESSX\t\t/ **/\n\n/* HAS_EACCESS:\n *\tThis symbol, if defined, indicates that the eaccess routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_EACCESS\t\t/ **/\n\n/* I_SYS_ACCESS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/access.h>.\n */\n/*#define   I_SYS_ACCESS                / **/\n\n/* I_SYS_SECURITY:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/security.h>.\n */\n/*#define   I_SYS_SECURITY\t/ **/\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble, or a long double when applicable. Usual values are 2,\n *\t4 and 8. The default is eight, for safety.  For cross-compiling\n *  \tor multiarch support, Configure will set a minimum of 8.\n */\n#define MEM_ALIGNBYTES 8\n\n/* BYTEORDER:\n *\tThis symbol holds the hexadecimal constant defined in byteorder,\n *\tin a UV, i.e. 0x1234 or 0x4321 or 0x12345678, etc...\n *\tIf the compiler supports cross-compiling or multiple-architecture\n *\tbinaries, use compiler-defined macros to\n *\tdetermine the byte order.\n */\n#if defined(MULTIARCH)\n#  ifdef __LITTLE_ENDIAN__\n#    if LONGSIZE == 4\n#      define BYTEORDER 0x1234\n#    else\n#      if LONGSIZE == 8\n#        define BYTEORDER 0x12345678\n#      endif\n#    endif\n#  else\n#    ifdef __BIG_ENDIAN__\n#      if LONGSIZE == 4\n#        define BYTEORDER 0x4321\n#      else\n#        if LONGSIZE == 8\n#          define BYTEORDER 0x87654321\n#        endif\n#      endif\n#    endif\n#  endif\n#else\n#define BYTEORDER 0x1234\t/* large digits for MSB */\n#endif\n\n/* CHARBITS:\n *\tThis symbol contains the size of a char, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define CHARBITS 8\t\t/**/\n\n/* CASTI32:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tor large floating point numbers to 32-bit ints.\n */\n#define\tCASTI32\t\t/**/\n\n/* CASTNEGFLOAT:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tnumbers to unsigned longs, ints and shorts.\n */\n/* CASTFLAGS:\n *\tThis symbol contains flags that say what difficulties the compiler\n *\thas casting odd floating values to unsigned long:\n *\t\t0 = ok\n *\t\t1 = couldn't cast < 0\n *\t\t2 = couldn't cast >= 0x80000000\n *\t\t4 = couldn't cast in argument expression list\n */\n#define\tCASTNEGFLOAT\t\t/**/\n#define CASTFLAGS 0\t\t/**/\n\n/* VOID_CLOSEDIR:\n *\tThis symbol, if defined, indicates that the closedir() routine\n *\tdoes not return a value.\n */\n/*#define VOID_CLOSEDIR\t\t/ **/\n\n/* HAS_FD_SET:\n *\tThis symbol, when defined, indicates presence of the fd_set typedef\n *\tin <sys/types.h>\n */\n#define HAS_FD_SET\t/**/\n\n/* Gconvert:\n *\tThis preprocessor macro is defined to convert a floating point\n *\tnumber to a string without a trailing decimal point.  This\n *\temulates the behavior of sprintf(\"%g\"), but is sometimes much more\n *\tefficient.  If gconvert() is not available, but gcvt() drops the\n *\ttrailing decimal point, then gcvt() is used.  If all else fails,\n *\ta macro using sprintf(\"%g\") is used. Arguments for the Gconvert\n *\tmacro are: value, number of digits, whether trailing zeros should\n *\tbe retained, and the output buffer.\n *\tThe usual values are:\n *\t\td_Gconvert='gconvert((x),(n),(t),(b))'\n *\t\td_Gconvert='gcvt((x),(n),(b))'\n *\t\td_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\n *\tThe last two assume trailing zeros should not be kept.\n */\n#define Gconvert(x,n,t,b) sprintf((b),\"%.*g\",(n),(x))\n\n/* HAS_GETPAGESIZE:\n *\tThis symbol, if defined, indicates that the getpagesize system call\n *\tis available to get system page size, which is the granularity of\n *\tmany memory management calls.\n */\n/*#define HAS_GETPAGESIZE\t\t/ **/\n\n/* HAS_GNULIBC:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe GNU C library is being used.  A better check is to use\n *\tthe __GLIBC__ and __GLIBC_MINOR__ symbols supplied with glibc.\n */\n/*#define HAS_GNULIBC  \t/ **/\n#if defined(HAS_GNULIBC) && !defined(_GNU_SOURCE)\n#   define _GNU_SOURCE\n#endif\n\n/* HAS_ISASCII:\n *\tThis manifest constant lets the C program know that isascii\n *\tis available.\n */\n#define HAS_ISASCII\t\t/**/\n\n/* HAS_LCHOWN:\n *\tThis symbol, if defined, indicates that the lchown routine is\n *\tavailable to operate on a symbolic link (instead of following the\n *\tlink).\n */\n/*#define HAS_LCHOWN\t\t/ **/\n\n/* HAS_OPEN3:\n *\tThis manifest constant lets the C program know that the three\n *\targument form of open(2) is available.\n */\n/*#define HAS_OPEN3\t\t/ **/\n\n/* HAS_SIGACTION:\n *\tThis symbol, if defined, indicates that Vr4's sigaction() routine\n *\tis available.\n */\n/*#define HAS_SIGACTION\t/ **/\n\n/* HAS_SIGINFO_SI_ERRNO:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_errno member\n */\n/* HAS_SIGINFO_SI_PID:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_pid member\n */\n/* HAS_SIGINFO_SI_UID:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_uid member\n */\n/* HAS_SIGINFO_SI_ADDR:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_addr member\n */\n/* HAS_SIGINFO_SI_STATUS:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_status member\n */\n/* HAS_SIGINFO_SI_BAND:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_band member\n */\n/* HAS_SIGINFO_SI_VALUE:\n *\tThis symbol, if defined, indicates that siginfo_t has the\n *\tsi_value member\n */\n/*#define\tHAS_SIGINFO_SI_ERRNO\t/ **/\n/*#define\tHAS_SIGINFO_SI_PID\t/ **/\n/*#define\tHAS_SIGINFO_SI_UID\t/ **/\n/*#define\tHAS_SIGINFO_SI_ADDR\t/ **/\n/*#define\tHAS_SIGINFO_SI_STATUS\t/ **/\n/*#define\tHAS_SIGINFO_SI_BAND\t/ **/\n/*#define\tHAS_SIGINFO_SI_VALUE\t/ **/\n\n/* HAS_SIGSETJMP:\n *\tThis variable indicates to the C program that the sigsetjmp()\n *\troutine is available to save the calling process's registers\n *\tand stack environment for later use by siglongjmp(), and\n *\tto optionally save the process's signal mask.  See\n *\tSigjmp_buf, Sigsetjmp, and Siglongjmp.\n */\n/* Sigjmp_buf:\n *\tThis is the buffer type to be used with Sigsetjmp and Siglongjmp.\n */\n/* Sigsetjmp:\n *\tThis macro is used in the same way as sigsetjmp(), but will invoke\n *\ttraditional setjmp() if sigsetjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/* Siglongjmp:\n *\tThis macro is used in the same way as siglongjmp(), but will invoke\n *\ttraditional longjmp() if siglongjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/*#define HAS_SIGSETJMP\t/ **/\n#ifdef HAS_SIGSETJMP\n#define Sigjmp_buf sigjmp_buf\n#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))\n#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))\n#else\n#define Sigjmp_buf jmp_buf\n#define Sigsetjmp(buf,save_mask) setjmp((buf))\n#define Siglongjmp(buf,retval) longjmp((buf),(retval))\n#endif\n\n/* HAS_STATIC_INLINE:\n *\tThis symbol, if defined, indicates that the C compiler supports\n *\tC99-style static inline.  That is, the function can't be called\n *\tfrom another translation unit.\n */\n/* PERL_STATIC_INLINE:\n *\tThis symbol gives the best-guess incantation to use for static\n *\tinline functions.  If HAS_STATIC_INLINE is defined, this will\n *\tgive C99-style inline.  If HAS_STATIC_INLINE is not defined,\n *\tthis will give a plain 'static'.  It will always be defined\n *\tto something that gives static linkage.\n *\tPossibilities include\n *\t\tstatic inline       (c99)\n *\t\tstatic __inline__   (gcc -ansi)\n *\t\tstatic __inline     (MSVC)\n *\t\tstatic _inline      (older MSVC)\n *\t\tstatic              (c89 compilers)\n */\n#define HAS_STATIC_INLINE\t\t\t\t/**/\n#define PERL_STATIC_INLINE static __inline__\t/**/\n\n/* USE_STDIO_PTR:\n *\tThis symbol is defined if the _ptr and _cnt fields (or similar)\n *\tof the stdio FILE structure can be used to access the stdio buffer\n *\tfor a file handle.  If this is defined, then the FILE_ptr(fp)\n *\tand FILE_cnt(fp) macros will also be defined and should be used\n *\tto access these fields.\n */\n/* FILE_ptr:\n *\tThis macro is used to access the _ptr field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_PTR_LVALUE:\n *\tThis symbol is defined if the FILE_ptr macro can be used as an\n *\tlvalue.\n */\n/* FILE_cnt:\n *\tThis macro is used to access the _cnt field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_CNT_LVALUE:\n *\tThis symbol is defined if the FILE_cnt macro can be used as an\n *\tlvalue.\n */\n/* STDIO_PTR_LVAL_SETS_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n has the side effect of decreasing the\n *\tvalue of File_cnt(fp) by n.\n */\n/* STDIO_PTR_LVAL_NOCHANGE_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n leaves File_cnt(fp) unchanged.\n */\n#define USE_STDIO_PTR \t/**/\n#ifdef USE_STDIO_PTR\n#define FILE_ptr(fp)\t((fp)->_ptr)\n#define STDIO_PTR_LVALUE \t\t/**/\n#define FILE_cnt(fp)\t((fp)->_cnt)\n#define STDIO_CNT_LVALUE \t\t/**/\n/*#define STDIO_PTR_LVAL_SETS_CNT\t/ **/\n#define STDIO_PTR_LVAL_NOCHANGE_CNT\t/**/\n#endif\n\n/* USE_STDIO_BASE:\n *\tThis symbol is defined if the _base field (or similar) of the\n *\tstdio FILE structure can be used to access the stdio buffer for\n *\ta file handle.  If this is defined, then the FILE_base(fp) macro\n *\twill also be defined and should be used to access this field.\n *\tAlso, the FILE_bufsiz(fp) macro will be defined and should be used\n *\tto determine the number of bytes in the buffer.  USE_STDIO_BASE\n *\twill never be defined unless USE_STDIO_PTR is.\n */\n/* FILE_base:\n *\tThis macro is used to access the _base field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_BASE is defined.\n */\n/* FILE_bufsiz:\n *\tThis macro is used to determine the number of bytes in the I/O\n *\tbuffer pointed to by _base field (or equivalent) of the FILE\n *\tstructure pointed to its argument. This macro will always be defined\n *\tif USE_STDIO_BASE is defined.\n */\n#define USE_STDIO_BASE \t/**/\n#ifdef USE_STDIO_BASE\n#define FILE_base(fp)\t((fp)->_base)\n#define FILE_bufsiz(fp)\t((fp)->_cnt + (fp)->_ptr - (fp)->_base)\n#endif\n\n/* DOUBLESIZE:\n *\tThis symbol contains the size of a double, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define DOUBLESIZE 8\t\t/**/\n\n/* I_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <time.h>.\n */\n/* I_SYS_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h>.\n */\n/* I_SYS_TIME_KERNEL:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h> with KERNEL defined.\n */\n/* HAS_TM_TM_ZONE:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_zone field.\n */\n/* HAS_TM_TM_GMTOFF:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_gmtoff field.\n */\n#define I_TIME\t\t/**/\n/*#define I_SYS_TIME\t\t/ **/\n/*#define I_SYS_TIME_KERNEL\t\t/ **/\n/*#define HAS_TM_TM_ZONE\t\t/ **/\n/*#define HAS_TM_TM_GMTOFF\t\t/ **/\n\n/* VAL_O_NONBLOCK:\n *\tThis symbol is to be used during open() or fcntl(F_SETFL) to turn on\n *\tnon-blocking I/O for the file descriptor. Note that there is no way\n *\tback, i.e. you cannot turn it blocking again this way. If you wish to\n *\talternatively switch between blocking and non-blocking, use the\n *\tioctl(FIOSNBIO) call instead, but that is not supported by all devices.\n */\n/* VAL_EAGAIN:\n *\tThis symbol holds the errno error code set by read() when no data was\n *\tpresent on the non-blocking file descriptor.\n */\n/* RD_NODATA:\n *\tThis symbol holds the return code from read() when no data is present\n *\ton the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is\n *\tnot defined, then you can't distinguish between no data and EOF by\n *\tissuing a read(). You'll have to find another way to tell for sure!\n */\n/* EOF_NONBLOCK:\n *\tThis symbol, if defined, indicates to the C program that a read() on\n *\ta non-blocking file descriptor will return 0 on EOF, and not the value\n *\theld in RD_NODATA (-1 usually, in that case!).\n */\n#define VAL_O_NONBLOCK O_NONBLOCK\n#define VAL_EAGAIN EAGAIN\n#define RD_NODATA -1\n#define EOF_NONBLOCK\n\n/* PTRSIZE:\n *\tThis symbol contains the size of a pointer, so that the C preprocessor\n *\tcan make decisions based on it.  It will be sizeof(void *) if\n *\tthe compiler supports (void *); otherwise it will be\n *\tsizeof(char *).\n */\n#define PTRSIZE 4\t\t/**/\n\n/* Drand01:\n *\tThis macro is to be used to generate uniformly distributed\n *\trandom numbers over the range [0., 1.[.  You may have to supply\n *\tan 'extern double drand48();' in your program since SunOS 4.1.3\n *\tdoesn't provide you with anything relevant in its headers.\n *\tSee HAS_DRAND48_PROTO.\n */\n/* Rand_seed_t:\n *\tThis symbol defines the type of the argument of the\n *\trandom seed function.\n */\n/* seedDrand01:\n *\tThis symbol defines the macro to be used in seeding the\n *\trandom number generator (see Drand01).\n */\n/* RANDBITS:\n *\tThis symbol indicates how many bits are produced by the\n *\tfunction used to generate normalized random numbers.\n *\tValues include 15, 16, 31, and 48.\n */\n#define Drand01()\t\tPerl_drand48()\t\t/**/\n#define Rand_seed_t\t\tU32\t\t/**/\n#define seedDrand01(x)\tPerl_drand48_init((Rand_seed_t)x)\t/**/\n#define RANDBITS\t\t48\t\t/**/\n\n/* SSize_t:\n *\tThis symbol holds the type used by functions that return\n *\ta count of bytes or an error condition.  It must be a signed type.\n *\tIt is usually ssize_t, but may be long or int, etc.\n *\tIt may be necessary to include <sys/types.h> or <unistd.h>\n *\tto get any typedef'ed information.\n *\tWe will pick a type such that sizeof(SSize_t) == sizeof(Size_t).\n */\n#define SSize_t int\t /* signed count of bytes */\n\n/* EBCDIC:\n *\tThis symbol, if defined, indicates that this system uses\n *\tEBCDIC encoding.\n */\n/*#define\tEBCDIC \t\t/ **/\n\n/* ARCHLIB:\n *\tThis variable, if defined, holds the name of the directory in\n *\twhich the user wants to put architecture-dependent public\n *\tlibrary files for perl5.  It is most often a local directory\n *\tsuch as /usr/local/lib.  Programs using this variable must be\n *\tprepared to deal with filename expansion.  If ARCHLIB is the\n *\tsame as PRIVLIB, it is not defined, since presumably the\n *\tprogram already searches PRIVLIB.\n */\n/* ARCHLIB_EXP:\n *\tThis symbol contains the ~name expanded version of ARCHLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define ARCHLIB \"c:\\\\perl\\\\lib\"\t\t/**/\n/*#define ARCHLIB_EXP \"\"\t/ **/\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n/* PERL_RELOCATABLE_INC:\n *\tThis symbol, if defined, indicates that we'd like to relocate entries\n *\tin @INC at run time based on the location of the perl binary.\n */\n#define BIN \"c:\\\\perl\\\\bin\"\t/**/\n#define BIN_EXP \"c:\\\\perl\\\\bin\"\t/**/\n#define PERL_RELOCATABLE_INC \"undef\" \t\t/**/\n\n/* PERL_INC_VERSION_LIST:\n *\tThis variable specifies the list of subdirectories in over\n *\twhich perl.c:incpush() and lib/lib.pm will automatically\n *\tsearch when adding directories to @INC, in a format suitable\n *\tfor a C initialization string.  See the inc_version_list entry\n *\tin Porting/Glossary for more details.\n */\n/*#define PERL_INC_VERSION_LIST 0\t\t/ **/\n\n/* INSTALL_USR_BIN_PERL:\n *\tThis symbol, if defined, indicates that Perl is to be installed\n * \talso as /usr/bin/perl.\n */\n/*#define INSTALL_USR_BIN_PERL\t/ **/\n\n/* PERL_OTHERLIBDIRS:\n *\tThis variable contains a colon-separated set of paths for the perl\n *\tbinary to search for additional library files or modules.\n *\tThese directories will be tacked to the end of @INC.\n *\tPerl will automatically search below each path for version-\n *\tand architecture-specific directories.  See PERL_INC_VERSION_LIST\n *\tfor more details.\n */\n/*#define PERL_OTHERLIBDIRS \"\"\t\t/ **/\n\n/* PRIVLIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n */\n/* PRIVLIB_EXP:\n *\tThis symbol contains the ~name expanded version of PRIVLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define PRIVLIB \"c:\\\\perl\\\\lib\"\t\t/**/\n#define PRIVLIB_EXP (PerlEnv_lib_path(PERL_VERSION_STRING, NULL))\t/**/\n\n/* SITEARCH:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-dependent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITEARCH_EXP:\n *\tThis symbol contains the ~name expanded version of SITEARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define SITEARCH \"c:\\\\perl\\\\site\\\\lib\"\t\t/**/\n/*#define SITEARCH_EXP \"\"\t/ **/\n\n/* SITELIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-independent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITELIB_EXP:\n *\tThis symbol contains the ~name expanded version of SITELIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* SITELIB_STEM:\n *\tThis define is SITELIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#define SITELIB \"c:\\\\perl\\\\site\\\\lib\"\t\t/**/\n#define SITELIB_EXP (PerlEnv_sitelib_path(PERL_VERSION_STRING, NULL))\t/**/\n#define SITELIB_STEM \"\"\t\t/**/\n\n/* PERL_VENDORARCH:\n *\tIf defined, this symbol contains the name of a private library.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.\n *\tIt may have a ~ on the front.\n *\tThe standard distribution will put nothing in this directory.\n *\tVendors who distribute perl may wish to place their own\n *\tarchitecture-dependent modules and extensions in this directory with\n *\t\tMakeMaker Makefile.PL INSTALLDIRS=vendor\n *\tor equivalent.  See INSTALL for details.\n */\n/* PERL_VENDORARCH_EXP:\n *\tThis symbol contains the ~name expanded version of PERL_VENDORARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define PERL_VENDORARCH \"\"\t\t/ **/\n/*#define PERL_VENDORARCH_EXP \"\"\t\t/ **/\n\n/* PERL_VENDORLIB_EXP:\n *\tThis symbol contains the ~name expanded version of VENDORLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* PERL_VENDORLIB_STEM:\n *\tThis define is PERL_VENDORLIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n/*#define PERL_VENDORLIB_EXP \"\"\t\t/ **/\n/*#define PERL_VENDORLIB_STEM \"\"\t\t/ **/\n\n/* OSNAME:\n *\tThis symbol contains the name of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n/* OSVERS:\n *\tThis symbol contains the version of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n#define OSNAME \"MSWin32\"\t\t/**/\n#define OSVERS \"6.1\"\t\t/**/\n\n/* CAT2:\n *\tThis macro concatenates 2 tokens together.\n */\n/* STRINGIFY:\n *\tThis macro surrounds its token with double quotes.\n */\n#if 42 == 1\n#define CAT2(a,b)\ta/**/b\n#undef STRINGIFY\n#define STRINGIFY(a)\t\"a\"\n#endif\n#if 42 == 42\n#define PeRl_CaTiFy(a, b)\ta ## b\n#define PeRl_StGiFy(a)\t#a\n#define CAT2(a,b)\tPeRl_CaTiFy(a,b)\n#define StGiFy(a)\tPeRl_StGiFy(a)\n#undef STRINGIFY\n#define STRINGIFY(a)\tPeRl_StGiFy(a)\n#endif\n#if 42 != 1 && 42 != 42\n#include \"Bletch: How does this C preprocessor concatenate tokens?\"\n#endif\n\n/* CPPSTDIN:\n *\tThis symbol contains the first part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.\t Typical value of \"cc -E\" or \"/lib/cpp\", but it can also\n *\tcall a wrapper. See CPPRUN.\n */\n/* CPPMINUS:\n *\tThis symbol contains the second part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  This symbol will have the value \"-\" if CPPSTDIN needs a minus\n *\tto specify standard input, otherwise the value is \"\".\n */\n/* CPPRUN:\n *\tThis symbol contains the string which will invoke a C preprocessor on\n *\tthe standard input and produce to standard output. It needs to end\n *\twith CPPLAST, after all other preprocessor flags have been specified.\n *\tThe main difference with CPPSTDIN is that this program will never be a\n *\tpointer to a shell wrapper, i.e. it will be empty if no preprocessor is\n *\tavailable directly to the user. Note that it may well be different from\n *\tthe preprocessor used to compile the C program.\n */\n/* CPPLAST:\n *\tThis symbol is intended to be used along with CPPRUN in the same manner\n *\tsymbol CPPMINUS is used with CPPSTDIN. It contains either \"-\" or \"\".\n */\n#define CPPSTDIN \"gcc -E\"\n#define CPPMINUS \"-\"\n#define CPPRUN \"gcc -E\"\n#define CPPLAST \"\"\n\n/* HAS_ACCESS:\n *\tThis manifest constant lets the C program know that the access()\n *\tsystem call is available to check for accessibility using real UID/GID.\n *\t(always present on UNIX.)\n */\n#define HAS_ACCESS\t\t/**/\n\n\n/* The HASATTRIBUTE_* defines are left undefined here because they vary from\n * one version of GCC to another.  Instead, they are defined on the basis of\n * the compiler version in <perl.h>.\n */\n/* HASATTRIBUTE_FORMAT:\n *\tCan we handle GCC attribute for checking printf-style formats\n */\n/* PRINTF_FORMAT_NULL_OK:\n *\tAllows __printf__ format to be null when checking printf-style\n */\n/* HASATTRIBUTE_MALLOC:\n *\tCan we handle GCC attribute for malloc-style functions.\n */\n/* HASATTRIBUTE_NONNULL:\n *\tCan we handle GCC attribute for nonnull function parms.\n */\n/* HASATTRIBUTE_NORETURN:\n *\tCan we handle GCC attribute for functions that do not return\n */\n/* HASATTRIBUTE_PURE:\n *\tCan we handle GCC attribute for pure functions\n */\n/* HASATTRIBUTE_UNUSED:\n *\tCan we handle GCC attribute for unused variables and arguments\n */\n/* HASATTRIBUTE_DEPRECATED:\n *\tCan we handle GCC attribute for marking deprecated APIs\n */\n/* HASATTRIBUTE_WARN_UNUSED_RESULT:\n *\tCan we handle GCC attribute for warning on unused results\n */\n/*#define HASATTRIBUTE_DEPRECATED\t/ **/\n/*#define HASATTRIBUTE_FORMAT\t/ **/\n/*#define PRINTF_FORMAT_NULL_OK\t/ **/\n/*#define HASATTRIBUTE_NORETURN\t/ **/\n/*#define HASATTRIBUTE_MALLOC\t/ **/\n/*#define HASATTRIBUTE_NONNULL\t/ **/\n/*#define HASATTRIBUTE_PURE\t/ **/\n/*#define HASATTRIBUTE_UNUSED\t/ **/\n/*#define HASATTRIBUTE_WARN_UNUSED_RESULT\t/ **/\n\n/* HAS_BACKTRACE:\n *\tThis symbol, if defined, indicates that the backtrace() routine is\n *\tavailable to get a stack trace.  The <execinfo.h> header must be\n *\tincluded to use this routine.\n */\n/*#define HAS_BACKTRACE\t/ **/\n\n/* HAS_CSH:\n *\tThis symbol, if defined, indicates that the C-shell exists.\n */\n/* CSH:\n *\tThis symbol, if defined, contains the full pathname of csh.\n */\n/*#define HAS_CSH\t\t/ **/\n#ifdef HAS_CSH\n#define CSH \"\"\t/**/\n#endif\n\n/* HAS_DLADDR:\n *\tThis symbol, if defined, indicates that the dladdr() routine is\n *\tavailable to query dynamic linker information for an address.\n *\tThe <dlfcn.h> header must be included to use this routine.\n */\n/*#define HAS_DLADDR\t/ **/\n\n/* SETUID_SCRIPTS_ARE_SECURE_NOW:\n *\tThis symbol, if defined, indicates that the bug that prevents\n *\tsetuid scripts from being secure is not present in this kernel.\n */\n/* DOSUID:\n *\tThis symbol, if defined, indicates that the C program should\n *\tcheck the script that it is executing for setuid/setgid bits, and\n *\tattempt to emulate setuid/setgid on systems that have disabled\n *\tsetuid #! scripts because the kernel can't do it securely.\n *\tIt is up to the package designer to make sure that this emulation\n *\tis done securely.  Among other things, it should do an fstat on\n *\tthe script it just opened to make sure it really is a setuid/setgid\n *\tscript, it should make sure the arguments passed correspond exactly\n *\tto the argument on the #! line, and it should not trust any\n *\tsubprocesses to which it must pass the filename rather than the\n *\tfile descriptor of the script to be executed.\n */\n/*#define SETUID_SCRIPTS_ARE_SECURE_NOW\t/ **/\n/*#define DOSUID\t\t/ **/\n\n/* HAS_ENDGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the group database.\n */\n/*#define HAS_ENDGRENT\t\t/ **/\n\n/* HAS_ENDHOSTENT:\n *\tThis symbol, if defined, indicates that the endhostent() routine is\n *\tavailable to close whatever was being used for host queries.\n */\n/*#define HAS_ENDHOSTENT\t\t/ **/\n\n/* HAS_ENDNETENT:\n *\tThis symbol, if defined, indicates that the endnetent() routine is\n *\tavailable to close whatever was being used for network queries.\n */\n/*#define HAS_ENDNETENT\t\t/ **/\n\n/* HAS_ENDPROTOENT:\n *\tThis symbol, if defined, indicates that the endprotoent() routine is\n *\tavailable to close whatever was being used for protocol queries.\n */\n/*#define HAS_ENDPROTOENT\t\t/ **/\n\n/* HAS_ENDPWENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the passwd database.\n */\n/*#define HAS_ENDPWENT\t\t/ **/\n\n/* HAS_ENDSERVENT:\n *\tThis symbol, if defined, indicates that the endservent() routine is\n *\tavailable to close whatever was being used for service queries.\n */\n/*#define HAS_ENDSERVENT\t\t/ **/\n\n/* FLEXFILENAMES:\n *\tThis symbol, if defined, indicates that the system supports filenames\n *\tlonger than 14 characters.\n */\n#define\tFLEXFILENAMES\t\t/**/\n\n/* HAS_GETGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for sequential access of the group database.\n */\n/*#define HAS_GETGRENT\t\t/ **/\n\n/* HAS_GETHOSTBYADDR:\n *\tThis symbol, if defined, indicates that the gethostbyaddr() routine is\n *\tavailable to look up hosts by their IP addresses.\n */\n#define HAS_GETHOSTBYADDR\t\t/**/\n\n/* HAS_GETHOSTBYNAME:\n *\tThis symbol, if defined, indicates that the gethostbyname() routine is\n *\tavailable to look up host names in some data base or other.\n */\n#define HAS_GETHOSTBYNAME\t\t/**/\n\n/* HAS_GETHOSTENT:\n *\tThis symbol, if defined, indicates that the gethostent() routine is\n *\tavailable to look up host names in some data base or another.\n */\n/*#define HAS_GETHOSTENT\t\t/ **/\n\n/* HAS_GETHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tgethostname() routine to derive the host name.  See also HAS_UNAME\n *\tand PHOSTNAME.\n */\n/* HAS_UNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tuname() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand PHOSTNAME.\n */\n/* PHOSTNAME:\n *\tThis symbol, if defined, indicates the command to feed to the\n *\tpopen() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand HAS_UNAME.\tNote that the command uses a fully qualified path,\n *\tso that it is safe even if used by a process with super-user\n *\tprivileges.\n */\n/* HAS_PHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tcontents of PHOSTNAME as a command to feed to the popen() routine\n *\tto derive the host name.\n */\n#define HAS_GETHOSTNAME\t/**/\n#define HAS_UNAME\t\t/**/\n/*#define HAS_PHOSTNAME\t/ **/\n#ifdef HAS_PHOSTNAME\n#define PHOSTNAME \"\"\t/* How to get the host name */\n#endif\n\n/* HAS_GETNETBYADDR:\n *\tThis symbol, if defined, indicates that the getnetbyaddr() routine is\n *\tavailable to look up networks by their IP addresses.\n */\n/*#define HAS_GETNETBYADDR\t\t/ **/\n\n/* HAS_GETNETBYNAME:\n *\tThis symbol, if defined, indicates that the getnetbyname() routine is\n *\tavailable to look up networks by their names.\n */\n/*#define HAS_GETNETBYNAME\t\t/ **/\n\n/* HAS_GETNETENT:\n *\tThis symbol, if defined, indicates that the getnetent() routine is\n *\tavailable to look up network names in some data base or another.\n */\n/*#define HAS_GETNETENT\t\t/ **/\n\n/* HAS_GETPROTOENT:\n *\tThis symbol, if defined, indicates that the getprotoent() routine is\n *\tavailable to look up protocols in some data base or another.\n */\n/*#define HAS_GETPROTOENT\t\t/ **/\n\n/* HAS_GETPGRP:\n *\tThis symbol, if defined, indicates that the getpgrp routine is\n *\tavailable to get the current process group.\n */\n/* USE_BSD_GETPGRP:\n *\tThis symbol, if defined, indicates that getpgrp needs one\n *\targuments whereas USG one needs none.\n */\n/*#define HAS_GETPGRP\t\t/ **/\n/*#define USE_BSD_GETPGRP\t/ **/\n\n/* HAS_GETPROTOBYNAME:\n *\tThis symbol, if defined, indicates that the getprotobyname()\n *\troutine is available to look up protocols by their name.\n */\n/* HAS_GETPROTOBYNUMBER:\n *\tThis symbol, if defined, indicates that the getprotobynumber()\n *\troutine is available to look up protocols by their number.\n */\n#define HAS_GETPROTOBYNAME\t\t/**/\n#define HAS_GETPROTOBYNUMBER\t\t/**/\n\n/* HAS_GETPWENT:\n *\tThis symbol, if defined, indicates that the getpwent routine is\n *\tavailable for sequential access of the passwd database.\n *\tIf this is not available, the older getpw() function may be available.\n */\n/*#define HAS_GETPWENT\t\t/ **/\n\n/* HAS_GETSERVENT:\n *\tThis symbol, if defined, indicates that the getservent() routine is\n *\tavailable to look up network services in some data base or another.\n */\n/*#define HAS_GETSERVENT\t\t/ **/\n\n/* HAS_GETSERVBYNAME:\n *\tThis symbol, if defined, indicates that the getservbyname()\n *\troutine is available to look up services by their name.\n */\n/* HAS_GETSERVBYPORT:\n *\tThis symbol, if defined, indicates that the getservbyport()\n *\troutine is available to look up services by their port.\n */\n#define HAS_GETSERVBYNAME\t\t/**/\n#define HAS_GETSERVBYPORT\t\t/**/\n\n/* HAS_HTONL:\n *\tThis symbol, if defined, indicates that the htonl() routine (and\n *\tfriends htons() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_HTONS:\n *\tThis symbol, if defined, indicates that the htons() routine (and\n *\tfriends htonl() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHL:\n *\tThis symbol, if defined, indicates that the ntohl() routine (and\n *\tfriends htonl() htons() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHS:\n *\tThis symbol, if defined, indicates that the ntohs() routine (and\n *\tfriends htonl() htons() ntohl()) are available to do network\n *\torder byte swapping.\n */\n#define HAS_HTONL\t\t/**/\n#define HAS_HTONS\t\t/**/\n#define HAS_NTOHL\t\t/**/\n#define HAS_NTOHS\t\t/**/\n\n/* HAS_LONG_DOUBLE:\n *\tThis symbol will be defined if the C compiler supports long\n *\tdoubles.\n */\n/* LONG_DOUBLESIZE:\n *\tThis symbol contains the size of a long double, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long doubles.  Note that this\n *\tis sizeof(long double), which may include unused bytes.\n */\n/* HAS_LDEXPL:\n *\tThis symbol, if defined, indicates that the ldexpl routine is\n *\tavailable to shift a long double floating-point number\n *\tby an integral power of 2.\n */\n/* LONG_DOUBLEKIND:\n *\tLONG_DOUBLEKIND will be one of\n *\tLONG_DOUBLE_IS_DOUBLE\n *\tLONG_DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_X86_80_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_X86_80_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_LE\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_BE\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_BE\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_LE\n *\tLONG_DOUBLE_IS_VAX_H_FLOAT\n *\tLONG_DOUBLE_IS_UNKNOWN_FORMAT\n *\tIt is only defined if the system supports long doubles.\n */\n/* LONG_DOUBLE_STYLE_IEEE:\n *\tThis symbol, if defined, indicates that the long double\n *\tis any of the IEEE 754 style long doubles:\n *\tLONG_DOUBLE_STYLE_IEEE_STD, LONG_DOUBLE_STYLE_IEEE_EXTENDED,\n *\tLONG_DOUBLE_STYLE_IEEE_DOUBLEDOUBLE.\n */\n/* LONG_DOUBLE_STYLE_IEEE_DOUBLEDOUBLE:\n *\tThis symbol, if defined, indicates that the long double is\n *\tthe 128-bit double-double.\n */\n/* LONG_DOUBLE_STYLE_IEEE_EXTENDED:\n *\tThis symbol, if defined, indicates that the long double is\n *\tthe 80-bit IEEE 754. Note that despite the 'extended' this\n *\tis less than the 'std', since this is an extension of\n *\tthe double precision.\n */\n/* LONG_DOUBLE_STYLE_IEEE_STD:\n *\tThis symbol, if defined, indicates that the long double is\n *\tthe 128-bit IEEE 754.\n */\n/* LONG_DOUBLE_STYLE_VAX:\n *\tThis symbol, if defined, indicates that the long double is\n *\tthe 128-bit VAX format H.\n */\n#define HAS_LDEXPL\t\t/**/\n#define HAS_LONG_DOUBLE\t\t/**/\n#ifdef HAS_LONG_DOUBLE\n#define LONG_DOUBLESIZE 12\t\t/**/\n#define LONG_DOUBLEKIND 3\t\t/**/\n#define LONG_DOUBLE_IS_DOUBLE\t\t\t\t0\n#define LONG_DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\t1\n#define LONG_DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\t2\n#define LONG_DOUBLE_IS_X86_80_BIT_LITTLE_ENDIAN\t\t3\n#define LONG_DOUBLE_IS_X86_80_BIT_BIG_ENDIAN\t\t4\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_LE\t5\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_BE\t6\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_BE\t7\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_LE\t8\n#define LONG_DOUBLE_IS_VAX_H_FLOAT\t\t\t9\n#define LONG_DOUBLE_IS_UNKNOWN_FORMAT\t\t\t-1\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LITTLE_ENDIAN\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LE_LE /* back-compat */\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BIG_ENDIAN\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BE_BE /* back-compat */\n#undef LONG_DOUBLE_STYLE_IEEE\n#undef LONG_DOUBLE_STYLE_IEEE_DOUBLEDOUBLE\n#define LONG_DOUBLE_STYLE_IEEE_EXTENDED\n#undef LONG_DOUBLE_STYLE_IEEE_STD\n#undef LONG_DOUBLE_STYLE_VAX\n#endif\n\n/* HAS_LONG_LONG:\n *\tThis symbol will be defined if the C compiler supports long long.\n */\n/* LONGLONGSIZE:\n *\tThis symbol contains the size of a long long, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long long.\n */\n#define HAS_LONG_LONG\t\t/**/\n#ifdef HAS_LONG_LONG\n#define LONGLONGSIZE 8\t\t/**/\n#endif\n\n/* HAS_MKSTEMP:\n *\tThis symbol, if defined, indicates that the mkstemp routine is\n *\tavailable to exclusively create and open a uniquely named\n *\ttemporary file.\n */\n#if __MINGW64_VERSION_MAJOR >= 4\n#define HAS_MKSTEMP\n#endif\n\n/* HAS_MMAP:\n *\tThis symbol, if defined, indicates that the mmap system call is\n *\tavailable to map a file into memory.\n */\n/* Mmap_t:\n *\tThis symbol holds the return type of the mmap() system call\n *\t(and simultaneously the type of the first argument).\n *\tUsually set to 'void *' or 'caddr_t'.\n */\n/*#define HAS_MMAP\t\t/ **/\n#define Mmap_t void *\t/**/\n\n/* HAS_MSG:\n *\tThis symbol, if defined, indicates that the entire msg*(2) library is\n *\tsupported (IPC mechanism based on message queues).\n */\n/*#define HAS_MSG\t\t/ **/\n\n/* HAS_SEM:\n *\tThis symbol, if defined, indicates that the entire sem*(2) library is\n *\tsupported.\n */\n/*#define HAS_SEM\t\t/ **/\n\n/* HAS_SETGRENT:\n *\tThis symbol, if defined, indicates that the setgrent routine is\n *\tavailable for initializing sequential access of the group database.\n */\n/*#define HAS_SETGRENT\t\t/ **/\n\n/* HAS_SETHOSTENT:\n *\tThis symbol, if defined, indicates that the sethostent() routine is\n *\tavailable.\n */\n/*#define HAS_SETHOSTENT\t\t/ **/\n\n/* HAS_SETNETENT:\n *\tThis symbol, if defined, indicates that the setnetent() routine is\n *\tavailable.\n */\n/*#define HAS_SETNETENT\t\t/ **/\n\n/* HAS_SETPROTOENT:\n *\tThis symbol, if defined, indicates that the setprotoent() routine is\n *\tavailable.\n */\n/*#define HAS_SETPROTOENT\t\t/ **/\n\n/* HAS_SETPGRP:\n *\tThis symbol, if defined, indicates that the setpgrp routine is\n *\tavailable to set the current process group.\n */\n/* USE_BSD_SETPGRP:\n *\tThis symbol, if defined, indicates that setpgrp needs two\n *\targuments whereas USG one needs none.  See also HAS_SETPGID\n *\tfor a POSIX interface.\n */\n/*#define HAS_SETPGRP\t\t/ **/\n/*#define USE_BSD_SETPGRP\t/ **/\n\n/* HAS_SETPWENT:\n *\tThis symbol, if defined, indicates that the setpwent routine is\n *\tavailable for initializing sequential access of the passwd database.\n */\n/*#define HAS_SETPWENT\t\t/ **/\n\n/* HAS_SETSERVENT:\n *\tThis symbol, if defined, indicates that the setservent() routine is\n *\tavailable.\n */\n/*#define HAS_SETSERVENT\t\t/ **/\n\n/* HAS_SETVBUF:\n *\tThis symbol, if defined, indicates that the setvbuf routine is\n *\tavailable to change buffering on an open stdio stream.\n *\tto a line-buffered mode.\n */\n#define HAS_SETVBUF\t\t/**/\n\n/* HAS_SHM:\n *\tThis symbol, if defined, indicates that the entire shm*(2) library is\n *\tsupported.\n */\n/*#define HAS_SHM\t\t/ **/\n\n/* Shmat_t:\n *\tThis symbol holds the return type of the shmat() system call.\n *\tUsually set to 'void *' or 'char *'.\n */\n/* HAS_SHMAT_PROTOTYPE:\n *\tThis symbol, if defined, indicates that the sys/shm.h includes\n *\ta prototype for shmat().  Otherwise, it is up to the program to\n *\tguess one.  Shmat_t shmat(int, Shmat_t, int) is a good guess,\n *\tbut not always right so it should be emitted by the program only\n *\twhen HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.\n */\n#define Shmat_t void *\t/**/\n/*#define HAS_SHMAT_PROTOTYPE\t/ **/\n\n/* HAS_SOCKET:\n *\tThis symbol, if defined, indicates that the BSD socket interface is\n *\tsupported.\n */\n/* HAS_SOCKETPAIR:\n *\tThis symbol, if defined, indicates that the BSD socketpair() call is\n *\tsupported.\n */\n/* HAS_SOCKADDR_SA_LEN:\n *\tThis symbol, if defined, indicates that the struct sockaddr\n *\tstructure has a member called sa_len, indicating the length of\n *\tthe structure.\n */\n/* HAS_SOCKADDR_IN6:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct sockaddr_in6;\n */\n/* HAS_SIN6_SCOPE_ID:\n *\tThis symbol, if defined, indicates that the struct sockaddr_in6\n *\tstructure has a member called sin6_scope_id.\n */\n/* HAS_IP_MREQ:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ip_mreq;\n */\n/* HAS_IP_MREQ_SOURCE:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ip_mreq_source;\n */\n/* HAS_IPV6_MREQ:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ipv6_mreq;\n */\n/* HAS_IPV6_MREQ_SOURCE:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ipv6_mreq_source;\n */\n#define\tHAS_SOCKET\t\t/**/\n/*#define\tHAS_SOCKETPAIR\t/ **/\n/*#define\tHAS_SOCKADDR_SA_LEN\t/ **/\n/*#define\tHAS_SOCKADDR_IN6\t/ **/\n#define\tHAS_SIN6_SCOPE_ID\t/**/\n/*#define\tHAS_IP_MREQ\t/ **/\n/*#define\tHAS_IP_MREQ_SOURCE\t/ **/\n/*#define\tHAS_IPV6_MREQ\t/ **/\n/*#define\tHAS_IPV6_MREQ_SOURCE\t/ **/\n\n/* USE_STAT_BLOCKS:\n *\tThis symbol is defined if this system has a stat structure declaring\n *\tst_blksize and st_blocks.\n */\n#ifndef USE_STAT_BLOCKS\n/*#define USE_STAT_BLOCKS \t/ **/\n#endif\n\n/* HAS_SYS_ERRLIST:\n *\tThis symbol, if defined, indicates that the sys_errlist array is\n *\tavailable to translate error numbers to strings. The extern int\n *\tsys_nerr gives the size of that table.\n */\n#define HAS_SYS_ERRLIST\t/**/\n\n/* HAS_STRTOUL:\n *\tThis symbol, if defined, indicates that the strtoul routine is\n *\tavailable to provide conversion of strings to unsigned long.\n */\n#define HAS_STRTOUL\t/**/\n\n/* HAS_UNION_SEMUN:\n *\tThis symbol, if defined, indicates that the union semun is\n *\tdefined by including <sys/sem.h>.  If not, the user code\n *\tprobably needs to define it as:\n *\tunion semun {\n *\t    int val;\n *\t    struct semid_ds *buf;\n *\t    unsigned short *array;\n *\t}\n */\n/* USE_SEMCTL_SEMUN:\n *\tThis symbol, if defined, indicates that union semun is\n *\tused for semctl IPC_STAT.\n */\n/* USE_SEMCTL_SEMID_DS:\n *\tThis symbol, if defined, indicates that struct semid_ds * is\n *\tused for semctl IPC_STAT.\n */\n#define HAS_UNION_SEMUN\t/**/\n/*#define USE_SEMCTL_SEMUN\t/ **/\n/*#define USE_SEMCTL_SEMID_DS\t/ **/\n\n/* HAS_VFORK:\n *\tThis symbol, if defined, indicates that vfork() exists.\n */\n/*#define HAS_VFORK\t/ **/\n\n/* HAS_PSEUDOFORK:\n *\tThis symbol, if defined, indicates that an emulation of the\n *\tfork routine is available.\n */\n/*#define HAS_PSEUDOFORK\t/ **/\n\n/* Signal_t:\n *\tThis symbol's value is either \"void\" or \"int\", corresponding to the\n *\tappropriate return type of a signal handler.  Thus, you can declare\n *\ta signal handler using \"Signal_t (*handler)()\", and define the\n *\thandler using \"Signal_t handler(sig)\".\n */\n#define Signal_t void\t/* Signal handler's return type */\n\n/* I_DIRENT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <dirent.h>. Using this symbol also triggers the definition\n *\tof the Direntry_t define which ends up being 'struct dirent' or\n *\t'struct direct' depending on the availability of <dirent.h>.\n */\n/* DIRNAMLEN:\n *\tThis symbol, if defined, indicates to the C program that the length\n *\tof directory entry names is provided by a d_namlen field.  Otherwise\n *\tyou need to do strlen() on the d_name field.\n */\n/* Direntry_t:\n *\tThis symbol is set to 'struct direct' or 'struct dirent' depending on\n *\twhether dirent is available or not. You should use this pseudo type to\n *\tportably declare your directory entries.\n */\n#define I_DIRENT\t\t/**/\n#define DIRNAMLEN\t/**/\n#define Direntry_t struct direct\n\n/* I_EXECINFO:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <execinfo.h> for backtrace() support.\n */\n/*#define I_EXECINFO\t\t/ **/\n\n/* I_GRP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <grp.h>.\n */\n/* GRPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct group\n *\tin <grp.h> contains gr_passwd.\n */\n/*#define I_GRP\t\t/ **/\n/*#define GRPASSWD\t/ **/\n\n/* I_NDBM:\n *\tThis symbol, if defined, indicates that <ndbm.h> exists and should\n *\tbe included.\n */\n/* I_GDBMNDBM:\n *\tThis symbol, if defined, indicates that <gdbm/ndbm.h> exists and should\n *\tbe included.  This was the location of the ndbm.h compatibility file\n *\tin RedHat 7.1.\n */\n/* I_GDBM_NDBM:\n *\tThis symbol, if defined, indicates that <gdbm-ndbm.h> exists and should\n *\tbe included.  This is the location of the ndbm.h compatibility file\n *\tin Debian 4.0.\n */\n/* NDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/* GDBMNDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <gdbm/ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/* GDBM_NDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <gdbm-ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/*#define I_NDBM\t/ **/\n/*#define I_GDBMNDBM\t/ **/\n/*#define I_GDBM_NDBM\t/ **/\n/*#define NDBM_H_USES_PROTOTYPES\t/ **/\n/*#define GDBMNDBM_H_USES_PROTOTYPES\t/ **/\n/*#define GDBM_NDBM_H_USES_PROTOTYPES\t/ **/\n\n/* I_NETDB:\n *\tThis symbol, if defined, indicates that <netdb.h> exists and\n *\tshould be included.\n */\n/*#define I_NETDB\t\t/ **/\n\n/* I_NET_ERRNO:\n *\tThis symbol, if defined, indicates that <net/errno.h> exists and\n *\tshould be included.\n */\n/*#define I_NET_ERRNO\t\t/ **/\n\n/* I_PWD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pwd.h>.\n */\n/* PWQUOTA:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_quota.\n */\n/* PWAGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_age.\n */\n/* PWCHANGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_change.\n */\n/* PWCLASS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_class.\n */\n/* PWEXPIRE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_expire.\n */\n/* PWCOMMENT:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_comment.\n */\n/* PWGECOS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_gecos.\n */\n/* PWPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_passwd.\n */\n/*#define I_PWD\t\t/ **/\n/*#define PWQUOTA\t/ **/\n/*#define PWAGE\t/ **/\n/*#define PWCHANGE\t/ **/\n/*#define PWCLASS\t/ **/\n/*#define PWEXPIRE\t/ **/\n/*#define PWCOMMENT\t/ **/\n/*#define PWGECOS\t/ **/\n/*#define PWPASSWD\t/ **/\n\n/* I_SYSUIO:\n *\tThis symbol, if defined, indicates that <sys/uio.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUIO\t\t/ **/\n\n/* I_TERMIO:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<termio.h> rather than <sgtty.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/* I_TERMIOS:\n *\tThis symbol, if defined, indicates that the program should include\n *\tthe POSIX termios.h rather than sgtty.h or termio.h.\n *\tThere are also differences in the ioctl() calls that depend on the\n *\tvalue of this symbol.\n */\n/* I_SGTTY:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<sgtty.h> rather than <termio.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/*#define I_TERMIO\t\t/ **/\n/*#define I_TERMIOS\t\t/ **/\n/*#define I_SGTTY\t\t/ **/\n\n/* Free_t:\n *\tThis variable contains the return type of free().  It is usually\n * void, but occasionally int.\n */\n/* Malloc_t:\n *\tThis symbol is the type of pointer returned by malloc and realloc.\n */\n#define Malloc_t void *\t\t\t/**/\n#define Free_t void\t\t\t/**/\n\n/* PERL_MALLOC_WRAP:\n *\tThis symbol, if defined, indicates that we'd like malloc wrap checks.\n */\n#define PERL_MALLOC_WRAP\t\t/**/\n\n/* MYMALLOC:\n *\tThis symbol, if defined, indicates that we're using our own malloc.\n */\n/*#define MYMALLOC\t\t\t/ **/\n\n/* SH_PATH:\n *\tThis symbol contains the full pathname to the shell used on this\n *\ton this system to execute Bourne shell scripts.  Usually, this will be\n *\t/bin/sh, though it's possible that some systems will have /bin/ksh,\n *\t/bin/pdksh, /bin/ash, /bin/bash, or even something such as\n *\tD:/bin/sh.exe.\n */\n#define SH_PATH \"cmd /x /c\"  /**/\n\n/* SIG_NAME:\n *\tThis symbol contains a list of signal names in order of\n *\tsignal number. This is intended\n *\tto be used as a static array initialization, like this:\n *\t\tchar *sig_name[] = { SIG_NAME };\n *\tThe signals in the list are separated with commas, and each signal\n *\tis surrounded by double quotes. There is no leading SIG in the signal\n *\tname, i.e. SIGQUIT is known as \"QUIT\".\n *\tGaps in the signal numbers (up to NSIG) are filled in with NUMnn,\n *\tetc., where nn is the actual signal number (e.g. NUM37).\n *\tThe signal number for sig_name[i] is stored in sig_num[i].\n *\tThe last element is 0 to terminate the list with a NULL.  This\n *\tcorresponds to the 0 at the end of the sig_name_init list.\n *\tNote that this variable is initialized from the sig_name_init,\n *\tnot from sig_name (which is unused).\n */\n/* SIG_NUM:\n *\tThis symbol contains a list of signal numbers, in the same order as the\n *\tSIG_NAME list. It is suitable for static array initialization, as in:\n *\t\tint sig_num[] = { SIG_NUM };\n *\tThe signals in the list are separated with commas, and the indices\n *\twithin that list and the SIG_NAME list match, so it's easy to compute\n *\tthe signal name from a number or vice versa at the price of a small\n *\tdynamic linear lookup.\n *\tDuplicates are allowed, but are moved to the end of the list.\n *\tThe signal number corresponding to sig_name[i] is sig_number[i].\n *\tif (i < NSIG) then sig_number[i] == i.\n *\tThe last element is 0, corresponding to the 0 at the end of\n *\tthe sig_name_init list.\n *\tNote that this variable is initialized from the sig_num_init,\n *\tnot from sig_num (which is unused).\n */\n/* SIG_SIZE:\n *\tThis variable contains the number of elements of the SIG_NAME\n *\tand SIG_NUM arrays, excluding the final NULL entry.\n */\n#define SIG_NAME \"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"NUM05\", \"NUM06\", \"NUM07\", \"FPE\", \"KILL\", \"NUM10\", \"SEGV\", \"NUM12\", \"PIPE\", \"ALRM\", \"TERM\", \"NUM16\", \"NUM17\", \"NUM18\", \"NUM19\", \"CHLD\", \"BREAK\", \"ABRT\", \"STOP\", \"NUM24\", \"CONT\", \"CLD\", 0\t\t/**/\n#define SIG_NUM  0, 1, 2, 21, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 20, 0\t\t/**/\n#define SIG_SIZE 27\t\t\t/**/\n\n/* USE_CROSS_COMPILE:\n *\tThis symbol, if defined, indicates that Perl is being cross-compiled.\n */\n/* PERL_TARGETARCH:\n *\tThis symbol, if defined, indicates the target architecture\n *\tPerl has been cross-compiled to.  Undefined if not a cross-compile.\n */\n#ifndef USE_CROSS_COMPILE\n/*#define\tUSE_CROSS_COMPILE\t/ **/\n#define\tPERL_TARGETARCH\t\"\"\t/**/\n#endif\n\n/* PERL_USE_DEVEL:\n *\tThis symbol, if defined, indicates that Perl was configured with\n *\t-Dusedevel, to enable development features.  This should not be\n *\tdone for production builds.\n */\n/*#define\tPERL_USE_DEVEL\t\t/ **/\n\n/* HAS_ATOLF:\n *\tThis symbol, if defined, indicates that the atolf routine is\n *\tavailable to convert strings into long doubles.\n */\n/*#define HAS_ATOLF\t\t/ **/\n\n/* HAS_ATOLL:\n *\tThis symbol, if defined, indicates that the atoll routine is\n *\tavailable to convert strings into long longs.\n */\n/*#define HAS_ATOLL\t\t/ **/\n\n/* HAS__FWALK:\n *\tThis symbol, if defined, indicates that the _fwalk system call is\n *\tavailable to apply a function to all the file handles.\n */\n/*#define HAS__FWALK\t\t/ **/\n\n/* HAS_ACOSH:\n *\tThis symbol, if defined, indicates that the acosh routine is\n *\tavailable to do the inverse hyperbolic cosine function.\n */\n#define HAS_ACOSH\t\t/**/\n\n/* HAS_AINTL:\n *\tThis symbol, if defined, indicates that the aintl routine is\n *\tavailable.  If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_AINTL\t\t/ **/\n\n/* HAS_ASINH:\n *\tThis symbol, if defined, indicates that the asinh routine is\n *\tavailable to do the inverse hyperbolic sine function.\n */\n#define HAS_ASINH\t\t/**/\n\n/* HAS_ATANH:\n *\tThis symbol, if defined, indicates that the atanh routine is\n *\tavailable to do the inverse hyperbolic tangent function.\n */\n#define HAS_ATANH\t\t/**/\n\n/* HAS_BUILTIN_CHOOSE_EXPR:\n *\tCan we handle GCC builtin for compile-time ternary-like expressions\n */\n/* HAS_BUILTIN_EXPECT:\n *\tCan we handle GCC builtin for telling that certain values are more\n *\tlikely\n */\n/*#define HAS_BUILTIN_EXPECT\t/ **/\n/*#define HAS_BUILTIN_CHOOSE_EXPR\t/ **/\n\n/* HAS_C99_VARIADIC_MACROS:\n *\tIf defined, the compiler supports C99 variadic macros.\n */\n/*#define\tHAS_C99_VARIADIC_MACROS\t/ **/\n\n/* HAS_CLASS:\n *\tThis symbol, if defined, indicates that the class routine is\n *\tavailable to classify doubles.  Available for example in AIX.\n *\tThe returned values are defined in <float.h> and are:\n *\n *\tFP_PLUS_NORM\tPositive normalized, nonzero\n *\tFP_MINUS_NORM\tNegative normalized, nonzero\n *\tFP_PLUS_DENORM\tPositive denormalized, nonzero\n *\tFP_MINUS_DENORM\tNegative denormalized, nonzero\n *\tFP_PLUS_ZERO\t+0.0\n *\tFP_MINUS_ZERO\t-0.0\n *\tFP_PLUS_INF\t+INF\n *\tFP_MINUS_INF\t-INF\n *\tFP_NANS\t\tSignaling Not a Number (NaNS)\n *\tFP_NANQ\t\tQuiet Not a Number (NaNQ)\n */\n/*#define HAS_CLASS\t\t/ **/\n\n/* HAS_CLEARENV:\n *\tThis symbol, if defined, indicates that the clearenv () routine is\n *\tavailable for use.\n */\n/*#define HAS_CLEARENV\t\t/ **/\n\n/* HAS_STRUCT_CMSGHDR:\n *\tThis symbol, if defined, indicates that the struct cmsghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_CMSGHDR\t/ **/\n\n/* HAS_COPYSIGN:\n *\tThis symbol, if defined, indicates that the copysign routine is\n *\tavailable to do the copysign function.\n */\n#define HAS_COPYSIGN\t\t/**/\n\n/* HAS_COPYSIGNL:\n *\tThis symbol, if defined, indicates that the copysignl routine is\n *\tavailable.  If aintl is also present we can emulate modfl.\n */\n#define HAS_COPYSIGNL\t\t/**/\n\n/* USE_CPLUSPLUS:\n *\tThis symbol, if defined, indicates that a C++ compiler was\n *\tused to compiled Perl and will be used to compile extensions.\n */\n/*#define USE_CPLUSPLUS\t\t/ **/\n\n/* HAS_DBMINIT_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the dbminit() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int dbminit(char *);\n */\n/*#define\tHAS_DBMINIT_PROTO\t/ **/\n\n/* HAS_DIR_DD_FD:\n *\tThis symbol, if defined, indicates that the the DIR* dirstream\n *\tstructure contains a member variable named dd_fd.\n */\n/*#define HAS_DIR_DD_FD\t\t/ **/\n\n/* HAS_DIRFD:\n *\tThis manifest constant lets the C program know that dirfd\n *\tis available.\n */\n/*#define HAS_DIRFD\t\t/ **/\n\n/* DLSYM_NEEDS_UNDERSCORE:\n *\tThis symbol, if defined, indicates that we need to prepend an\n *\tunderscore to the symbol name before calling dlsym().  This only\n *\tmakes sense if you *have* dlsym, which we will presume is the\n *\tcase if you're using dl_dlopen.xs.\n */\n/*#define \tDLSYM_NEEDS_UNDERSCORE \t/ **/\n\n/* HAS_ERF:\n *\tThis symbol, if defined, indicates that the erf routine is\n *\tavailable to do the error function.\n */\n#define HAS_ERF\t\t/**/\n\n/* HAS_ERFC:\n *\tThis symbol, if defined, indicates that the erfc routine is\n *\tavailable to do the complementary error function.\n */\n/*#define HAS_ERFC\t\t/ **/\n\n/* HAS_EXP2:\n *\tThis symbol, if defined, indicates that the exp2 routine is\n *\tavailable to do the 2**x function.\n */\n#define HAS_EXP2\t\t/**/\n\n/* HAS_EXPM1:\n *\tThis symbol, if defined, indicates that the expm1 routine is\n *\tavailable to do the exp(x) - 1 when x is near 1 function.\n */\n#define HAS_EXPM1\t\t/**/\n\n/* HAS_FAST_STDIO:\n *\tThis symbol, if defined, indicates that the \"fast stdio\"\n *\tis available to manipulate the stdio buffers directly.\n */\n#define HAS_FAST_STDIO\t\t/**/\n\n/* HAS_FCHDIR:\n *\tThis symbol, if defined, indicates that the fchdir routine is\n *\tavailable to change directory using a file descriptor.\n */\n/*#define HAS_FCHDIR\t\t/ **/\n\n/* FCNTL_CAN_LOCK:\n *\tThis symbol, if defined, indicates that fcntl() can be used\n *\tfor file locking.  Normally on Unix systems this is defined.\n *\tIt may be undefined on VMS.\n */\n/*#define FCNTL_CAN_LOCK\t\t/ **/\n\n/* HAS_FDCLOSE:\n *\tThis symbol, if defined, indicates that the fdclose routine is\n *\tavailable to free a FILE structure without closing the underlying\n *\tfile descriptor.  This function appeared in FreeBSD 10.2.\n */\n/*#define HAS_FDCLOSE\t\t/ **/\n\n/* HAS_FDIM:\n *\tThis symbol, if defined, indicates that the fdim routine is\n *\tavailable to do the positive difference function.\n */\n/*#define HAS_FDIM\t\t/ **/\n\n/* HAS_FEGETROUND:\n *\tThis symbol, if defined, indicates that the fegetround routine is\n *\tavailable to return the macro corresponding to the current rounding\n *\tmode.\n */\n/*#define HAS_FEGETROUND\t/ **/\n\n/* HAS_FINITE:\n *\tThis symbol, if defined, indicates that the finite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n#define HAS_FINITE\t\t/**/\n\n/* HAS_FINITEL:\n *\tThis symbol, if defined, indicates that the finitel routine is\n *\tavailable to check whether a long double is finite\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_FINITEL\t\t/ **/\n\n/* HAS_FLOCK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the flock() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int flock(int, int);\n */\n#define\tHAS_FLOCK_PROTO\t/**/\n\n/* HAS_FMA:\n *\tThis symbol, if defined, indicates that the fma routine is\n *\tavailable to do the multiply-add function.\n */\n/*#define HAS_FMA\t\t/ **/\n\n/* HAS_FMAX:\n *\tThis symbol, if defined, indicates that the fmax routine is\n *\tavailable to do the maximum function.\n */\n#define HAS_FMAX\t\t/**/\n\n/* HAS_FMIN:\n *\tThis symbol, if defined, indicates that the fmin routine is\n *\tavailable to do the minimum function.\n */\n#define HAS_FMIN\t\t/**/\n\n/* HAS_FP_CLASS:\n *\tThis symbol, if defined, indicates that the fp_class routine is\n *\tavailable to classify doubles.  Available for example in Digital UNIX.\n *\tThe returned values are defined in <math.h> and are:\n *\n *\tFP_SNAN           Signaling NaN (Not-a-Number)\n *\tFP_QNAN           Quiet NaN (Not-a-Number)\n *\tFP_POS_INF        +infinity\n *\tFP_NEG_INF        -infinity\n *\tFP_POS_NORM       Positive normalized\n *\tFP_NEG_NORM       Negative normalized\n *\tFP_POS_DENORM     Positive denormalized\n *\tFP_NEG_DENORM     Negative denormalized\n *\tFP_POS_ZERO       +0.0 (positive zero)\n *\tFP_NEG_ZERO       -0.0 (negative zero)\n */\n/*#define HAS_FP_CLASS\t\t/ **/\n\n/* HAS_FP_CLASSL:\n *\tThis symbol, if defined, indicates that the fp_classl routine is\n *\tavailable to classify long doubles.  Available for example in\n *\tDigital UNIX.  See for possible values HAS_FP_CLASS.\n */\n/*#define HAS_FP_CLASSL\t\t/ **/\n\n/* HAS_FPCLASS:\n *\tThis symbol, if defined, indicates that the fpclass routine is\n *\tavailable to classify doubles.  Available for example in Solaris/SVR4.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASS\t\t/ **/\n\n/* HAS_FPCLASSIFY:\n *\tThis symbol, if defined, indicates that the fpclassify routine is\n *\tavailable to classify doubles.  Available for example in HP-UX.\n *\tThe returned values are defined in <math.h> and are\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n/* HAS_FP_CLASSIFY:\n *\tThis symbol, if defined, indicates that the fp_classify routine is\n *\tavailable to classify doubles. The values are defined in <math.h>\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n/*#define\tHAS_FPCLASSIFY\t\t/ **/\n/*#define\tHAS_FP_CLASSIFY\t\t/ **/\n\n/* HAS_FPCLASSL:\n *\tThis symbol, if defined, indicates that the fpclassl routine is\n *\tavailable to classify long doubles.  Available for example in IRIX.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASSL\t\t/ **/\n\n/* HAS_FPGETROUND:\n *\tThis symbol, if defined, indicates that the fpgetround routine is\n *\tavailable to get the floating point rounding mode.\n */\n/*#define HAS_FPGETROUND\t\t/ **/\n\n/* HAS_FPOS64_T:\n *\tThis symbol will be defined if the C compiler supports fpos64_t.\n */\n/*#define\tHAS_FPOS64_T    \t/ **/\n\n/* HAS_FREXPL:\n *\tThis symbol, if defined, indicates that the frexpl routine is\n *\tavailable to break a long double floating-point number into\n *\ta normalized fraction and an integral power of 2.\n */\n#define HAS_FREXPL\t\t/**/\n\n/* HAS_STRUCT_FS_DATA:\n *\tThis symbol, if defined, indicates that the struct fs_data\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_FS_DATA\t/ **/\n\n/* HAS_FCHMODAT:\n *\tThis symbol is defined if the fchmodat() routine is available.\n */\n/* HAS_LINKAT:\n *\tThis symbol is defined if the linkat() routine is available.\n */\n/* HAS_OPENAT:\n *\tThis symbol is defined if the openat() routine is available.\n */\n/* HAS_RENAMEAT:\n *\tThis symbol is defined if the renameat() routine is available.\n */\n/* HAS_UNLINKAT:\n *\tThis symbol is defined if the unlinkat() routine is available.\n */\n/*#define\tHAS_FCHMODAT\t/ **/\n/*#define\tHAS_LINKAT\t/ **/\n/*#define\tHAS_OPENAT\t/ **/\n/*#define\tHAS_RENAMEAT\t/ **/\n/*#define\tHAS_UNLINKAT\t/ **/\n\n/* HAS_FSEEKO:\n *\tThis symbol, if defined, indicates that the fseeko routine is\n *\tavailable to fseek beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FSEEKO\t\t/ **/\n\n/* HAS_FSTATFS:\n *\tThis symbol, if defined, indicates that the fstatfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATFS\t\t/ **/\n\n/* HAS_FSYNC:\n *\tThis symbol, if defined, indicates that the fsync routine is\n *\tavailable to write a file's modified data and attributes to\n *\tpermanent storage.\n */\n/*#define HAS_FSYNC\t\t/ **/\n\n/* HAS_FTELLO:\n *\tThis symbol, if defined, indicates that the ftello routine is\n *\tavailable to ftell beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FTELLO\t\t/ **/\n\n/* HAS_FUTIMES:\n *\tThis symbol, if defined, indicates that the futimes routine is\n *\tavailable to change file descriptor time stamps with struct timevals.\n */\n/*#define HAS_FUTIMES\t\t/ **/\n\n/* HAS_GAI_STRERROR:\n *\tThis symbol, if defined, indicates that the gai_strerror routine\n *\tis available to translate error codes returned by getaddrinfo()\n *\tinto human readable strings.\n */\n/*#define HAS_GAI_STRERROR\t/ **/\n\n/* HAS_GETADDRINFO:\n *\tThis symbol, if defined, indicates that the getaddrinfo() function\n *\tis available for use.\n */\n/*#define HAS_GETADDRINFO\t\t/ **/\n\n/* HAS_GETCWD:\n *\tThis symbol, if defined, indicates that the getcwd routine is\n *\tavailable to get the current working directory.\n */\n#define HAS_GETCWD\t\t/**/\n\n/* HAS_GETESPWNAM:\n *\tThis symbol, if defined, indicates that the getespwnam system call is\n *\tavailable to retrieve enhanced (shadow) password entries by name.\n */\n/*#define HAS_GETESPWNAM\t\t/ **/\n\n/* HAS_GETFSSTAT:\n *\tThis symbol, if defined, indicates that the getfsstat routine is\n *\tavailable to stat filesystems in bulk.\n */\n/*#define HAS_GETFSSTAT\t\t/ **/\n\n/* HAS_GETITIMER:\n *\tThis symbol, if defined, indicates that the getitimer routine is\n *\tavailable to return interval timers.\n */\n/*#define HAS_GETITIMER\t\t/ **/\n\n/* HAS_GETMNT:\n *\tThis symbol, if defined, indicates that the getmnt routine is\n *\tavailable to get filesystem mount info by filename.\n */\n/*#define HAS_GETMNT\t\t/ **/\n\n/* HAS_GETMNTENT:\n *\tThis symbol, if defined, indicates that the getmntent routine is\n *\tavailable to iterate through mounted file systems to get their info.\n */\n/*#define HAS_GETMNTENT\t\t/ **/\n\n/* HAS_GETNAMEINFO:\n *\tThis symbol, if defined, indicates that the getnameinfo() function\n *\tis available for use.\n */\n/*#define HAS_GETNAMEINFO\t\t/ **/\n\n/* HAS_GETPRPWNAM:\n *\tThis symbol, if defined, indicates that the getprpwnam system call is\n *\tavailable to retrieve protected (shadow) password entries by name.\n */\n/*#define HAS_GETPRPWNAM\t\t/ **/\n\n/* HAS_GETSPNAM:\n *\tThis symbol, if defined, indicates that the getspnam system call is\n *\tavailable to retrieve SysV shadow password entries by name.\n */\n/*#define HAS_GETSPNAM\t\t/ **/\n\n/* HAS_HASMNTOPT:\n *\tThis symbol, if defined, indicates that the hasmntopt routine is\n *\tavailable to query the mount options of file systems.\n */\n/*#define HAS_HASMNTOPT\t\t/ **/\n\n/* HAS_HYPOT:\n *\tThis symbol, if defined, indicates that the hypot routine is\n *\tavailable to do the hypotenuse function.\n */\n#define HAS_HYPOT\t\t/**/\n\n/* HAS_ILOGB:\n *\tThis symbol, if defined, indicates that the ilogb routine is\n *\tavailable to get integer exponent of a floating-point value.\n */\n#define HAS_ILOGB\t\t/**/\n\n/* HAS_ILOGBL:\n *\tThis symbol, if defined, indicates that the ilogbl routine is\n *\tavailable.  If scalbnl is also present we can emulate frexpl.\n */\n#define HAS_ILOGBL\t\t/**/\n\n/* HAS_INETNTOP:\n *\tThis symbol, if defined, indicates that the inet_ntop() function\n *\tis available to parse IPv4 and IPv6 strings.\n */\n/*#define HAS_INETNTOP\t\t/ **/\n\n/* HAS_INETPTON:\n *\tThis symbol, if defined, indicates that the inet_pton() function\n *\tis available to parse IPv4 and IPv6 strings.\n */\n/*#define HAS_INETPTON\t\t/ **/\n\n/* HAS_INT64_T:\n *     This symbol will defined if the C compiler supports int64_t.\n *     Usually the <inttypes.h> needs to be included, but sometimes\n *\t<sys/types.h> is enough.\n */\n/*#define     HAS_INT64_T               / **/\n\n/* HAS_ISBLANK:\n *\tThis manifest constant lets the C program know that isblank\n *\tis available.\n */\n/*#define HAS_ISBLANK\t\t/ **/\n\n/* HAS_ISFINITE:\n *\tThis symbol, if defined, indicates that the isfinite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_ISFINITE\t\t/ **/\n\n/* HAS_ISFINITEL:\n *\tThis symbol, if defined, indicates that the isfinitel routine is\n *\tavailable to check whether a long double is finite.\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_ISFINITEL\t\t/ **/\n\n/* HAS_ISINF:\n *\tThis symbol, if defined, indicates that the isinf routine is\n *\tavailable to check whether a double is an infinity.\n */\n#define HAS_ISINF\t\t/**/\n\n/* HAS_ISINFL:\n *\tThis symbol, if defined, indicates that the isinfl routine is\n *\tavailable to check whether a long double is an infinity.\n */\n/*#define HAS_ISINFL\t\t/ **/\n\n/* HAS_ISLESS:\n *\tThis symbol, if defined, indicates that the isless routine is\n *\tavailable to do the isless function.\n */\n#define HAS_ISLESS\t\t/**/\n\n/* HAS_ISNAN:\n *\tThis symbol, if defined, indicates that the isnan routine is\n *\tavailable to check whether a double is a NaN.\n */\n#define HAS_ISNAN\t\t/**/\n\n/* HAS_ISNANL:\n *\tThis symbol, if defined, indicates that the isnanl routine is\n *\tavailable to check whether a long double is a NaN.\n */\n#define HAS_ISNANL\t\t/**/\n\n/* HAS_ISNORMAL:\n *\tThis symbol, if defined, indicates that the isnormal routine is\n *\tavailable to check whether a double is normal (non-zero normalized).\n */\n#define HAS_ISNORMAL\t\t/**/\n\n/* HAS_J0:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tj0() function is available for Bessel functions of the first\n *\tkind of the order zero, for doubles.\n */\n/* HAS_J0L:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tj0l() function is available for Bessel functions of the first\n *\tkind of the order zero, for long doubles.\n */\n#define HAS_J0\t\t/**/\n/*#define\tHAS_J0L\t\t/ **/\n\n/* HAS_LC_MONETARY_2008:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable and has the additional members added in POSIX 1003.1-2008.\n */\n/*#define HAS_LC_MONETARY_2008\t\t/ **/\n\n/* HAS_LDBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol LDBL_DIG, which is the number\n *\tof significant digits in a long double precision number. Unlike\n *\tfor DBL_DIG, there's no good guess for LDBL_DIG if it is undefined.\n */\n#define HAS_LDBL_DIG \t/**/\n\n/* HAS_LGAMMA:\n *\tThis symbol, if defined, indicates that the lgamma routine is\n *\tavailable to do the log gamma function.  See also HAS_TGAMMA and\n *\tHAS_LGAMMA_R.\n */\n#define HAS_LGAMMA\t\t/**/\n\n/* HAS_LGAMMA_R:\n *\tThis symbol, if defined, indicates that the lgamma_r routine is\n *\tavailable to do the log gamma function without using the global\n *\tsigngam variable.\n */\n/*#define HAS_LGAMMA_R\t\t/ **/\n\n/* LIBM_LIB_VERSION:\n *\tThis symbol, if defined, indicates that libm exports _LIB_VERSION\n *\tand that math.h defines the enum to manipulate it.\n */\n/*#define LIBM_LIB_VERSION\t\t/ **/\n\n/* HAS_LLRINT:\n *\tThis symbol, if defined, indicates that the llrint routine is\n *\tavailable to return the long long value closest to a double\n *\t(according to the current rounding mode).\n */\n#define HAS_LLRINT\t\t/**/\n\n/* HAS_LLRINTL:\n *\tThis symbol, if defined, indicates that the llrintl routine is\n *\tavailable to return the long long value closest to a long double\n *\t(according to the current rounding mode).\n */\n#define HAS_LLRINTL\t\t/**/\n\n/* HAS_LLROUND:\n *\tThis symbol, if defined, indicates that the llround routine is\n *\tavailable to return the nearest long long value.\n */\n#define HAS_LLROUND\t\t/**/\n\n/* HAS_LLROUNDL:\n *\tThis symbol, if defined, indicates that the llroundl routine is\n *\tavailable to return the nearest long long value away from zero of\n *\tthe long double argument value.\n */\n#define HAS_LLROUNDL\t\t/**/\n\n/* HAS_LOG1P:\n *\tThis symbol, if defined, indicates that the log1p routine is\n *\tavailable to do the logarithm of 1 plus argument function.\n */\n#define HAS_LOG1P\t\t/**/\n\n/* HAS_LOG2:\n *\tThis symbol, if defined, indicates that the log2 routine is\n *\tavailable to do the log2 function.\n */\n#define HAS_LOG2\t\t/**/\n\n/* HAS_LOGB:\n *\tThis symbol, if defined, indicates that the logb routine is\n *\tavailable to do the logb function.\n */\n#define HAS_LOGB\t\t/**/\n\n/* HAS_LRINT:\n *\tThis symbol, if defined, indicates that the lrint routine is\n *\tavailable to return the integral value closest to a double\n *\t(according to the current rounding mode).\n */\n#define HAS_LRINT\t\t/**/\n\n/* HAS_LRINTL:\n *\tThis symbol, if defined, indicates that the lrintl routine is\n *\tavailable to return the integral value closest to a long double\n *\t(according to the current rounding mode).\n */\n#define HAS_LRINTL\t\t/**/\n\n/* HAS_LROUND:\n *\tThis symbol, if defined, indicates that the lround routine is\n *\tavailable to return the nearest integral value.\n */\n#define HAS_LROUND\t\t/**/\n\n/* HAS_LROUNDL:\n *\tThis symbol, if defined, indicates that the lroundl routine is\n *\tavailable to return the nearest integral value away from zero of\n *\tthe long double argument value.\n */\n#define HAS_LROUNDL\t\t/**/\n\n/* HAS_MADVISE:\n *\tThis symbol, if defined, indicates that the madvise system call is\n *\tavailable to map a file into memory.\n */\n/*#define HAS_MADVISE\t\t/ **/\n\n/* HAS_MALLOC_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_size\n *\troutine is available for use.\n */\n/*#define HAS_MALLOC_SIZE\t\t/ **/\n\n/* HAS_MALLOC_GOOD_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_good_size\n *\troutine is available for use.\n */\n/*#define HAS_MALLOC_GOOD_SIZE\t/ **/\n\n/* HAS_MEMMEM:\n *\tThis symbol, if defined, indicates that the memmem routine is\n *\tavailable to return a pointer to the start of the first occurance\n *\tof a substring in a memory area (or NULL if not found).\n */\n/*#define HAS_MEMMEM\t\t/ **/\n\n/* HAS_MEMRCHR:\n *\tThis symbol, if defined, indicates that the memrchr routine is\n *\tavailable to return a pointer to the last occurrence of a byte in\n *\ta memory area (or NULL if not found).\n */\n/*#define HAS_MEMRCHR\t\t/ **/\n\n/* HAS_MKDTEMP:\n *\tThis symbol, if defined, indicates that the mkdtemp routine is\n *\tavailable to exclusively create a uniquely named temporary directory.\n */\n/*#define HAS_MKDTEMP\t\t/ **/\n\n/* HAS_MKSTEMPS:\n *\tThis symbol, if defined, indicates that the mkstemps routine is\n *\tavailable to exclusively create and open a uniquely named\n *\t(with a suffix) temporary file.\n */\n/*#define HAS_MKSTEMPS\t\t/ **/\n\n/* HAS_MODFL:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tavailable to split a long double x into a fractional part f and\n *\tan integer part i such that |f| < 1.0 and (f + i) = x.\n */\n/* HAS_MODFL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the modfl() function.  Otherwise, it is up\n *\tto the program to supply one.\n */\n#define HAS_MODFL\t\t/**/\n/*#define HAS_MODFL_PROTO\t\t/ **/\n\n/* HAS_MPROTECT:\n *\tThis symbol, if defined, indicates that the mprotect system call is\n *\tavailable to modify the access protection of a memory mapped file.\n */\n/*#define HAS_MPROTECT\t\t/ **/\n\n/* HAS_STRUCT_MSGHDR:\n *\tThis symbol, if defined, indicates that the struct msghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_MSGHDR\t/ **/\n\n/* HAS_NAN:\n *\tThis symbol, if defined, indicates that the nan routine is\n *\tavailable to generate NaN.\n */\n#define HAS_NAN\t\t/**/\n\n/* HAS_NEARBYINT:\n *\tThis symbol, if defined, indicates that the nearbyint routine is\n *\tavailable to return the integral value closest to (according to\n *\tthe current rounding mode) to x.\n */\n#define HAS_NEARBYINT\t\t/**/\n\n/* HAS_NEWLOCALE:\n *\tThis symbol, if defined, indicates that the newlocale routine is\n *\tavailable to return a new locale object or modify an existing\n *\tlocale object.\n */\n/* HAS_FREELOCALE:\n *\tThis symbol, if defined, indicates that the freelocale routine is\n *\tavailable to deallocates the resources associated with a locale object.\n */\n/* HAS_USELOCALE:\n *\tThis symbol, if defined, indicates that the uselocale routine is\n *\tavailable to set the current locale for the calling thread.\n */\n/* HAS_QUERYLOCALE:\n *\tThis symbol, if defined, indicates that the querylocale routine is\n *\tavailable to return the name of the locale for a category mask.\n */\n/* I_XLOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <xlocale.h> to get uselocale() and its friends.\n */\n/*#define\tHAS_NEWLOCALE\t/ **/\n/*#define\tHAS_FREELOCALE\t/ **/\n/*#define\tHAS_USELOCALE\t/ **/\n/*#define\tHAS_QUERYLOCALE\t/ **/\n/*#define\tI_XLOCALE               / **/\n\n/* HAS_NEXTAFTER:\n *\tThis symbol, if defined, indicates that the nextafter routine is\n *\tavailable to return the next machine representable double from\n *\tx in direction y.\n */\n#define HAS_NEXTAFTER\t\t/**/\n\n/* HAS_NEXTTOWARD:\n *\tThis symbol, if defined, indicates that the nexttoward routine is\n *\tavailable to return the next machine representable long double from\n *\tx in direction y.\n */\n#define HAS_NEXTTOWARD\t\t/**/\n\n/* HAS_NL_LANGINFO:\n *\tThis symbol, if defined, indicates that the nl_langinfo routine is\n *\tavailable to return local data.  You will also need <langinfo.h>\n *\tand therefore I_LANGINFO.\n */\n/*#define HAS_NL_LANGINFO\t\t/ **/\n\n/* HAS_OFF64_T:\n *\tThis symbol will be defined if the C compiler supports off64_t.\n */\n/*#define\tHAS_OFF64_T    \t\t/ **/\n\n/* HAS_PRCTL:\n *\tThis symbol, if defined, indicates that the prctl routine is\n *\tavailable to set process title.\n *\tNote that there are at least two prctl variants: Linux and Irix.\n *\tWhile they are somewhat similar, they are incompatible.\n */\n/* HAS_PRCTL_SET_NAME:\n *\tThis symbol, if defined, indicates that the prctl routine is\n *\tavailable to set process title and supports PR_SET_NAME.\n */\n/*#define HAS_PRCTL\t\t/ **/\n/*#define HAS_PRCTL_SET_NAME\t\t/ **/\n\n/* HAS_PROCSELFEXE:\n *\tThis symbol is defined if PROCSELFEXE_PATH is a symlink\n *\tto the absolute pathname of the executing program.\n */\n/* PROCSELFEXE_PATH:\n *\tIf HAS_PROCSELFEXE is defined this symbol is the filename\n *\tof the symbolic link pointing to the absolute pathname of\n *\tthe executing program.\n */\n/*#define HAS_PROCSELFEXE\t/ **/\n#if defined(HAS_PROCSELFEXE) && !defined(PROCSELFEXE_PATH)\n#define PROCSELFEXE_PATH\t\t/**/\n#endif\n\n/* HAS_PTHREAD_ATTR_SETSCOPE:\n *\tThis symbol, if defined, indicates that the pthread_attr_setscope\n *\tsystem call is available to set the contention scope attribute of\n *\ta thread attribute object.\n */\n/*#define HAS_PTHREAD_ATTR_SETSCOPE\t\t/ **/\n\n/* HAS_PTRDIFF_T:\n *\tThis symbol will be defined if the C compiler supports ptrdiff_t.\n */\n#define\tHAS_PTRDIFF_T    \t\t/**/\n\n/* HAS_READV:\n *\tThis symbol, if defined, indicates that the readv routine is\n *\tavailable to do gather reads.  You will also need <sys/uio.h>\n *\tand there I_SYSUIO.\n */\n/*#define HAS_READV\t\t/ **/\n\n/* HAS_RECVMSG:\n *\tThis symbol, if defined, indicates that the recvmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_RECVMSG\t\t/ **/\n\n/* HAS_REMAINDER:\n *\tThis symbol, if defined, indicates that the remainder routine is\n *\tavailable to return the floating-point remainder.\n */\n#define HAS_REMAINDER\t\t/**/\n\n/* HAS_REMQUO:\n *\tThis symbol, if defined, indicates that the remquo routine is\n *\tavailable to return the remainder and part of quotient.\n */\n#define HAS_REMQUO\t\t/**/\n\n/* HAS_RINT:\n *\tThis symbol, if defined, indicates that the rint routine is\n *\tavailable to return the nearest integral value to x as double\n *\tusing the current rounding mode.\n */\n#define HAS_RINT\t\t/**/\n\n/* HAS_ROUND:\n *\tThis symbol, if defined, indicates that the round routine is\n *\tavailable to round to nearest integer, away from zero.\n */\n#define HAS_ROUND\t\t/**/\n\n/* HAS_SBRK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sbrk() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern void* sbrk(int);\n *\t\textern void* sbrk(size_t);\n */\n/*#define\tHAS_SBRK_PROTO\t/ **/\n\n/* HAS_SCALBN:\n *\tThis symbol, if defined, indicates that the scalbn routine is\n *\tavailable to multiply floating-point number by integral power\n *\tof radix.\n */\n#define HAS_SCALBN\t\t/**/\n\n/* HAS_SCALBNL:\n *\tThis symbol, if defined, indicates that the scalbnl routine is\n *\tavailable.  If ilogbl is also present we can emulate frexpl.\n */\n#define HAS_SCALBNL\t\t/**/\n\n/* HAS_SENDMSG:\n *\tThis symbol, if defined, indicates that the sendmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_SENDMSG\t\t/ **/\n\n/* HAS_SETITIMER:\n *\tThis symbol, if defined, indicates that the setitimer routine is\n *\tavailable to set interval timers.\n */\n/*#define HAS_SETITIMER\t\t/ **/\n\n/* HAS_SETPROCTITLE:\n *\tThis symbol, if defined, indicates that the setproctitle routine is\n *\tavailable to set process title.\n */\n/*#define HAS_SETPROCTITLE\t\t/ **/\n\n/* HAS_SIGNBIT:\n *\tThis symbol, if defined, indicates that the signbit routine is\n *\tavailable to check if the given number has the sign bit set.\n *\tThis should include correct testing of -0.0.  This will only be set\n *\tif the signbit() routine is safe to use with the NV type used internally\n *\tin perl.  Users should call Perl_signbit(), which will be #defined to\n *\tthe system's signbit() function or macro if this symbol is defined.\n */\n#define HAS_SIGNBIT\t\t/**/\n\n/* HAS_SIGPROCMASK:\n *\tThis symbol, if defined, indicates that the sigprocmask\n *\tsystem call is available to examine or change the signal mask\n *\tof the calling process.\n */\n/*#define HAS_SIGPROCMASK\t\t/ **/\n\n/* USE_SITECUSTOMIZE:\n *\tThis symbol, if defined, indicates that sitecustomize should\n *\tbe used.\n */\n#ifndef USE_SITECUSTOMIZE\n/*#define\tUSE_SITECUSTOMIZE\t\t/ **/\n#endif\n\n/* HAS_SNPRINTF:\n *\tThis symbol, if defined, indicates that the snprintf () library\n *\tfunction is available for use.\n */\n/* HAS_VSNPRINTF:\n *\tThis symbol, if defined, indicates that the vsnprintf () library\n *\tfunction is available for use.\n */\n#define HAS_SNPRINTF\t/**/\n#define HAS_VSNPRINTF\t/**/\n\n/* HAS_SOCKATMARK:\n *\tThis symbol, if defined, indicates that the sockatmark routine is\n *\tavailable to test whether a socket is at the out-of-band mark.\n */\n/*#define HAS_SOCKATMARK\t\t/ **/\n\n/* HAS_SOCKATMARK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sockatmark() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int sockatmark(int);\n */\n/*#define\tHAS_SOCKATMARK_PROTO\t/ **/\n\n/* HAS_SOCKS5_INIT:\n *\tThis symbol, if defined, indicates that the socks5_init routine is\n *\tavailable to initialize SOCKS 5.\n */\n/*#define HAS_SOCKS5_INIT\t\t/ **/\n\n/* HAS_SQRTL:\n *\tThis symbol, if defined, indicates that the sqrtl routine is\n *\tavailable to do long double square roots.\n */\n#define HAS_SQRTL\t\t/**/\n\n/* HAS_SETRESGID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresgid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresgid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESGID_PROTO\t/ **/\n\n/* HAS_SETRESUID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresuid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresuid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESUID_PROTO\t/ **/\n\n/* HAS_STRUCT_STATFS_F_FLAGS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tdoes have the f_flags member containing the mount flags of\n *\tthe filesystem containing the file.\n *\tThis kind of struct statfs is coming from <sys/mount.h> (BSD 4.3),\n *\tnot from <sys/statfs.h> (SYSV).  Older BSDs (like Ultrix) do not\n *\thave statfs() and struct statfs, they have ustat() and getmnt()\n *\twith struct ustat and struct fs_data.\n */\n/*#define HAS_STRUCT_STATFS_F_FLAGS\t\t/ **/\n\n/* HAS_STRUCT_STATFS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_STATFS\t/ **/\n\n/* HAS_FSTATVFS:\n *\tThis symbol, if defined, indicates that the fstatvfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATVFS\t\t/ **/\n\n/* HAS_STRERROR_L:\n *\tThis symbol, if defined, indicates that the strerror_l routine is\n *\tavailable to return the error message for a given errno value in\n *\ta particular locale (identified by a locale_t object).\n */\n/*#define HAS_STRERROR_L\t\t/ **/\n\n/* HAS_STRFTIME:\n *\tThis symbol, if defined, indicates that the strftime routine is\n *\tavailable to do time formatting.\n */\n#define HAS_STRFTIME\t\t/**/\n\n/* HAS_STRLCAT:\n *\tThis symbol, if defined, indicates that the strlcat () routine is\n *\tavailable to do string concatenation.\n */\n/*#define HAS_STRLCAT\t\t/ **/\n\n/* HAS_STRLCPY:\n *\tThis symbol, if defined, indicates that the strlcpy () routine is\n *\tavailable to do string copying.\n */\n/*#define HAS_STRLCPY\t\t/ **/\n\n/* HAS_STRTOLD:\n *\tThis symbol, if defined, indicates that the strtold routine is\n *\tavailable to convert strings to long doubles.\n */\n/*#define HAS_STRTOLD\t\t/ **/\n\n/* HAS_STRTOLL:\n *\tThis symbol, if defined, indicates that the strtoll routine is\n *\tavailable to convert strings to long longs.\n */\n/*#define HAS_STRTOLL\t\t/ **/\n\n/* HAS_STRTOQ:\n *\tThis symbol, if defined, indicates that the strtoq routine is\n *\tavailable to convert strings to long longs (quads).\n */\n/*#define HAS_STRTOQ\t\t/ **/\n\n/* HAS_STRTOULL:\n *\tThis symbol, if defined, indicates that the strtoull routine is\n *\tavailable to convert strings to unsigned long longs.\n */\n/*#define HAS_STRTOULL\t\t/ **/\n\n/* HAS_STRTOUQ:\n *\tThis symbol, if defined, indicates that the strtouq routine is\n *\tavailable to convert strings to unsigned long longs (quads).\n */\n/*#define HAS_STRTOUQ\t\t/ **/\n\n/* HAS_SYSCALL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the syscall() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int syscall(int,  ...);\n *\t\textern int syscall(long, ...);\n */\n/*#define\tHAS_SYSCALL_PROTO\t/ **/\n\n/* HAS_TELLDIR_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the telldir() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern long telldir(DIR*);\n */\n#define\tHAS_TELLDIR_PROTO\t/**/\n\n/* HAS_TGAMMA:\n *\tThis symbol, if defined, indicates that the tgamma routine is\n *\tavailable to do the gamma function. See also HAS_LGAMMA.\n */\n#define HAS_TGAMMA\t\t/**/\n\n/* HAS_CTIME64:\n *\tThis symbol, if defined, indicates that the ctime64 () routine is\n *\tavailable to do the 64bit variant of ctime ()\n */\n/* HAS_LOCALTIME64:\n *\tThis symbol, if defined, indicates that the localtime64 () routine is\n *\tavailable to do the 64bit variant of localtime ()\n */\n/* HAS_GMTIME64:\n *\tThis symbol, if defined, indicates that the gmtime64 () routine is\n *\tavailable to do the 64bit variant of gmtime ()\n */\n/* HAS_MKTIME64:\n *\tThis symbol, if defined, indicates that the mktime64 () routine is\n *\tavailable to do the 64bit variant of mktime ()\n */\n/* HAS_DIFFTIME64:\n *\tThis symbol, if defined, indicates that the difftime64 () routine is\n *\tavailable to do the 64bit variant of difftime ()\n */\n/* HAS_ASCTIME64:\n *\tThis symbol, if defined, indicates that the asctime64 () routine is\n *\tavailable to do the 64bit variant of asctime ()\n */\n/*#define\tHAS_CTIME64\t\t/ **/\n/*#define\tHAS_LOCALTIME64\t\t/ **/\n/*#define\tHAS_GMTIME64\t\t/ **/\n/*#define\tHAS_MKTIME64\t\t/ **/\n/*#define\tHAS_DIFFTIME64\t\t/ **/\n/*#define\tHAS_ASCTIME64\t\t/ **/\n\n/* HAS_TIMEGM:\n *\tThis symbol, if defined, indicates that the timegm routine is\n *\tavailable to do the opposite of gmtime ()\n */\n/*#define HAS_TIMEGM\t\t/ **/\n\n/* HAS_TRUNC:\n *\tThis symbol, if defined, indicates that the trunc routine is\n *\tavailable to round doubles towards zero.\n */\n#define HAS_TRUNC\t\t/**/\n\n/* HAS_TRUNCL:\n *\tThis symbol, if defined, indicates that the truncl routine is\n *\tavailable. If copysignl is also present we can emulate modfl.\n */\n#define HAS_TRUNCL\t\t/**/\n\n/* U32_ALIGNMENT_REQUIRED:\n *\tThis symbol, if defined, indicates that you must access\n *\tcharacter data through U32-aligned pointers.\n */\n#ifndef U32_ALIGNMENT_REQUIRED\n#define U32_ALIGNMENT_REQUIRED\t/**/\n#endif\n\n/* HAS_UALARM:\n *\tThis symbol, if defined, indicates that the ualarm routine is\n *\tavailable to do alarms with microsecond granularity.\n */\n/*#define HAS_UALARM\t\t/ **/\n\n/* HAS_UNORDERED:\n *\tThis symbol, if defined, indicates that the unordered routine is\n *\tavailable to check whether two doubles are unordered\n *\t(effectively: whether either of them is NaN)\n */\n/*#define HAS_UNORDERED\t\t/ **/\n\n/* HAS_UNSETENV:\n *\tThis symbol, if defined, indicates that the unsetenv () routine is\n *\tavailable for use.\n */\n/*#define HAS_UNSETENV\t\t/ **/\n\n/* HAS_USLEEP_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the usleep() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int usleep(useconds_t);\n */\n/*#define\tHAS_USLEEP_PROTO\t/ **/\n\n/* HAS_USTAT:\n *\tThis symbol, if defined, indicates that the ustat system call is\n *\tavailable to query file system statistics by dev_t.\n */\n/*#define HAS_USTAT\t\t/ **/\n\n/* HAS_WCSCMP:\n *\tThis symbol, if defined, indicates that the wcscmp routine is\n *\tavailable to compare two wide character strings.\n */\n#define HAS_WCSCMP\t/**/\n\n/* HAS_WCSXFRM:\n *\tThis symbol, if defined, indicates that the wcsxfrm routine is\n *\tavailable to tranform a wide character string for wcscmp().\n */\n#define HAS_WCSXFRM\t/**/\n\n/* HAS_WRITEV:\n *\tThis symbol, if defined, indicates that the writev routine is\n *\tavailable to do scatter writes.\n */\n/*#define HAS_WRITEV\t\t/ **/\n\n/* DEFAULT_INC_EXCLUDES_DOT:\n *\tThis symbol, if defined, removes the legacy default behavior of\n *\tincluding '.' at the end of @INC.\n */\n#define DEFAULT_INC_EXCLUDES_DOT\t/**/\n\n/* USE_DYNAMIC_LOADING:\n *\tThis symbol, if defined, indicates that dynamic loading of\n *\tsome sort is available.\n */\n#define USE_DYNAMIC_LOADING\t\t/**/\n\n/* FFLUSH_NULL:\n *\tThis symbol, if defined, tells that fflush(NULL) correctly\n *\tflushes all pending stdio output without side effects. In\n *\tparticular, on some platforms calling fflush(NULL) *still*\n *\tcorrupts STDIN if it is a pipe.\n */\n/* FFLUSH_ALL:\n *\tThis symbol, if defined, tells that to flush\n *\tall pending stdio output one must loop through all\n *\tthe stdio file handles stored in an array and fflush them.\n *\tNote that if fflushNULL is defined, fflushall will not\n *\teven be probed for and will be left undefined.\n */\n#define\tFFLUSH_NULL \t\t/**/\n/*#define\tFFLUSH_ALL \t\t/ **/\n\n/* I_BFD:\n *\tThis symbol, if defined, indicates that <bfd.h> exists and\n *\tcan be included.\n */\n/*#define\tI_BFD\t\t/ **/\n\n/* I_CRYPT:\n *\tThis symbol, if defined, indicates that <crypt.h> exists and\n *\tshould be included.\n */\n/*#define\tI_CRYPT\t\t/ **/\n\n/* DB_Prefix_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is u_int32_t.\n */\n/* DB_Hash_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is size_t.\n */\n/* DB_VERSION_MAJOR_CFG:\n *\tThis symbol, if defined, defines the major version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n */\n/* DB_VERSION_MINOR_CFG:\n *\tThis symbol, if defined, defines the minor version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n/* DB_VERSION_PATCH_CFG:\n *\tThis symbol, if defined, defines the patch version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n#define DB_Hash_t\tint\t\t/**/\n#define DB_Prefix_t\tint  \t/**/\n#define DB_VERSION_MAJOR_CFG\t0  \t/**/\n#define DB_VERSION_MINOR_CFG\t0  \t/**/\n#define DB_VERSION_PATCH_CFG\t0  \t/**/\n\n/* I_FENV:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <fenv.h> to get the floating point environment definitions.\n */\n/*#define I_FENV\t\t/ **/\n\n/* I_FP:\n *\tThis symbol, if defined, indicates that <fp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP\t\t/ **/\n\n/* I_FP_CLASS:\n *\tThis symbol, if defined, indicates that <fp_class.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP_CLASS\t\t/ **/\n\n/* I_IEEEFP:\n *\tThis symbol, if defined, indicates that <ieeefp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_IEEEFP\t\t/ **/\n\n/* I_INTTYPES:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <inttypes.h>.\n */\n/*#define   I_INTTYPES                / **/\n\n/* I_LANGINFO:\n *\tThis symbol, if defined, indicates that <langinfo.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LANGINFO\t\t/ **/\n\n/* I_LIBUTIL:\n *\tThis symbol, if defined, indicates that <libutil.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LIBUTIL\t\t/ **/\n\n/* I_MALLOCMALLOC:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <malloc/malloc.h>.\n */\n/*#define I_MALLOCMALLOC\t\t/ **/\n\n/* I_MNTENT:\n *\tThis symbol, if defined, indicates that <mntent.h> exists and\n *\tshould be included.\n */\n/*#define\tI_MNTENT\t\t/ **/\n\n/* I_NETINET_TCP:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <netinet/tcp.h>.\n */\n/*#define   I_NETINET_TCP                / **/\n\n/* I_POLL:\n *\tThis symbol, if defined, indicates that <poll.h> exists and\n *\tshould be included. (see also HAS_POLL)\n */\n/*#define\tI_POLL\t\t/ **/\n\n/* I_PROT:\n *\tThis symbol, if defined, indicates that <prot.h> exists and\n *\tshould be included.\n */\n/*#define\tI_PROT\t\t/ **/\n\n/* I_QUADMATH:\n *\tThis symbol, if defined, indicates that <quadmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_QUADMATH\t\t/ **/\n\n/* I_SHADOW:\n *\tThis symbol, if defined, indicates that <shadow.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SHADOW\t\t/ **/\n\n/* I_SOCKS:\n *\tThis symbol, if defined, indicates that <socks.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SOCKS\t\t/ **/\n\n/* I_STDBOOL:\n *\tThis symbol, if defined, indicates that <stdbool.h> exists and\n *\tcan be included.\n */\n#define\tI_STDBOOL\t\t/**/\n\n/* I_STDINT:\n *\tThis symbol, if defined, indicates that <stdint.h> exists and\n *\tshould be included.\n */\n#define I_STDINT\t\t/**/\n\n/* I_SUNMATH:\n *\tThis symbol, if defined, indicates that <sunmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SUNMATH\t\t/ **/\n\n/* I_SYSLOG:\n *\tThis symbol, if defined, indicates that <syslog.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSLOG\t\t/ **/\n\n/* I_SYSMODE:\n *\tThis symbol, if defined, indicates that <sys/mode.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSMODE\t\t/ **/\n\n/* I_SYS_MOUNT:\n *\tThis symbol, if defined, indicates that <sys/mount.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_MOUNT\t\t/ **/\n\n/* I_SYS_STATFS:\n *\tThis symbol, if defined, indicates that <sys/statfs.h> exists.\n */\n/*#define\tI_SYS_STATFS\t\t/ **/\n\n/* I_SYS_STATVFS:\n *\tThis symbol, if defined, indicates that <sys/statvfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_STATVFS\t\t/ **/\n\n/* I_SYSUTSNAME:\n *\tThis symbol, if defined, indicates that <sys/utsname.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUTSNAME\t\t/ **/\n\n/* I_SYS_VFS:\n *\tThis symbol, if defined, indicates that <sys/vfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_VFS\t\t/ **/\n\n/* I_USTAT:\n *\tThis symbol, if defined, indicates that <ustat.h> exists and\n *\tshould be included.\n */\n/*#define\tI_USTAT\t\t/ **/\n\n/* DOUBLEINFBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes for the double precision infinity.\n */\n/* DOUBLENANBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes (0xHH) for the double precision not-a-number.\n */\n/* LONGDBLINFBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes for the long double precision infinity.\n */\n/* LONGDBLNANBYTES:\n *\tThis symbol, if defined, is a comma-separated list of\n *\thexadecimal bytes (0xHH) for the long double precision not-a-number.\n */\n#define DOUBLEINFBYTES  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f\t\t/**/\n#define DOUBLENANBYTES  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f\t\t/**/\n#define LONGDBLINFBYTES 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f, 0x00, 0x00\t\t/**/\n#define LONGDBLNANBYTES 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0x00, 0x00\t\t/**/\n\n/* PERL_PRIfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for output.\n */\n/* PERL_PRIgldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'g') for output.\n */\n/* PERL_PRIeldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'e') for output.\n */\n/* PERL_SCNfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for input.\n */\n/* DOUBLEKIND:\n *\tDOUBLEKIND will be one of\n *\tDOUBLE_IS_IEEE_754_32_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_32_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_LE_BE\n *\tDOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_BE_LE\n *\tDOUBLE_IS_VAX_F_FLOAT\n *\tDOUBLE_IS_VAX_D_FLOAT\n *\tDOUBLE_IS_VAX_G_FLOAT\n *\tDOUBLE_IS_IBM_SINGLE_32_BIT\n *\tDOUBLE_IS_IBM_DOUBLE_64_BIT\n *\tDOUBLE_IS_CRAY_SINGLE_64_BIT\n *\tDOUBLE_IS_UNKNOWN_FORMAT\n */\n/* DOUBLE_HAS_INF:\n *\tThis symbol, if defined, indicates that the double has\n *\tthe infinity.\n */\n/* DOUBLE_HAS_NAN:\n *\tThis symbol, if defined, indicates that the double has\n *\tthe not-a-number.\n */\n/* DOUBLE_HAS_NEGATIVE_ZERO:\n *\tThis symbol, if defined, indicates that the double has\n *\tthe negative_zero.\n */\n/* DOUBLE_HAS_SUBNORMALS:\n *\tThis symbol, if defined, indicates that the double has\n *\tthe subnormals (denormals).\n */\n/* DOUBLE_STYLE_CRAY:\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit CRAY mainframe format.\n */\n/* DOUBLE_STYLE_IBM:\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit IBM mainframe format.\n */\n/* DOUBLE_STYLE_IEEE:\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit IEEE 754.\n */\n/* DOUBLE_STYLE_VAX:\n *\tThis symbol, if defined, indicates that the double is\n *\tthe 64-bit VAX format D or G.\n */\n#define DOUBLEKIND 3\t\t/**/\n#define DOUBLE_IS_IEEE_754_32_BIT_LITTLE_ENDIAN\t1\n#define DOUBLE_IS_IEEE_754_32_BIT_BIG_ENDIAN\t2\n#define DOUBLE_IS_IEEE_754_64_BIT_LITTLE_ENDIAN\t3\n#define DOUBLE_IS_IEEE_754_64_BIT_BIG_ENDIAN\t4\n#define DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\t5\n#define DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\t6\n#define DOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_LE_BE\t7\n#define DOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_BE_LE\t8\n#define DOUBLE_IS_VAX_F_FLOAT\t9\n#define DOUBLE_IS_VAX_D_FLOAT\t10\n#define DOUBLE_IS_VAX_G_FLOAT\t11\n#define DOUBLE_IS_IBM_SINGLE_32_BIT\t12\n#define DOUBLE_IS_IBM_DOUBLE_64_BIT\t13\n#define DOUBLE_IS_CRAY_SINGLE_64_BIT\t14\n#define DOUBLE_IS_UNKNOWN_FORMAT\t\t-1\n/*#define PERL_PRIfldbl\t\"Lf\"\t/ **/\n/*#define PERL_PRIgldbl\t\"Lg\"\t/ **/\n/*#define PERL_PRIeldbl\t\"Le\"\t/ **/\n/*#define PERL_SCNfldbl\t\"Lf\"\t/ **/\n#define DOUBLE_HAS_INF\n#define DOUBLE_HAS_NAN\n#define DOUBLE_HAS_NEGATIVE_ZERO\n#define DOUBLE_HAS_SUBNORMALS\n#undef DOUBLE_STYLE_CRAY\n#undef DOUBLE_STYLE_IBM\n#define DOUBLE_STYLE_IEEE\n#undef DOUBLE_STYLE_VAX\n\n/* DOUBLEMANTBITS:\n *\tThis symbol, if defined, tells how many mantissa bits\n *\tthere are in double precision floating point format.\n *\tNote that this is usually DBL_MANT_DIG minus one, since\n *\twith the standard IEEE 754 formats DBL_MANT_DIG includes\n *\tthe implicit bit, which doesn't really exist.\n */\n/* LONGDBLMANTBITS:\n *\tThis symbol, if defined, tells how many mantissa bits\n *\tthere are in long double precision floating point format.\n *\tNote that this can be LDBL_MANT_DIG minus one,\n *\tsince LDBL_MANT_DIG can include the IEEE 754 implicit bit.\n *\tThe common x86-style 80-bit long double does not have\n *\tan implicit bit.\n */\n/* NVMANTBITS:\n *\tThis symbol, if defined, tells how many mantissa bits\n *\t(not including implicit bit) there are in a Perl NV.\n *\tThis depends on which floating point type was chosen.\n */\n#define DOUBLEMANTBITS  52\n#define LONGDBLMANTBITS 64\n#define NVMANTBITS      52\n\n/* NEED_VA_COPY:\n *\tThis symbol, if defined, indicates that the system stores\n *\tthe variable argument list datatype, va_list, in a format\n *\tthat cannot be copied by simple assignment, so that some\n *\tother means must be used when copying is required.\n *\tAs such systems vary in their provision (or non-provision)\n *\tof copying mechanisms, handy.h defines a platform-\n *\tindependent macro, Perl_va_copy(src, dst), to do the job.\n */\n/*#define\tNEED_VA_COPY\t\t/ **/\n\n/* IVTYPE:\n *\tThis symbol defines the C type used for Perl's IV.\n */\n/* UVTYPE:\n *\tThis symbol defines the C type used for Perl's UV.\n */\n/* I8TYPE:\n *\tThis symbol defines the C type used for Perl's I8.\n */\n/* U8TYPE:\n *\tThis symbol defines the C type used for Perl's U8.\n */\n/* I16TYPE:\n *\tThis symbol defines the C type used for Perl's I16.\n */\n/* U16TYPE:\n *\tThis symbol defines the C type used for Perl's U16.\n */\n/* I32TYPE:\n *\tThis symbol defines the C type used for Perl's I32.\n */\n/* U32TYPE:\n *\tThis symbol defines the C type used for Perl's U32.\n */\n/* I64TYPE:\n *\tThis symbol defines the C type used for Perl's I64.\n */\n/* U64TYPE:\n *\tThis symbol defines the C type used for Perl's U64.\n */\n/* NVTYPE:\n *\tThis symbol defines the C type used for Perl's NV.\n */\n/* IVSIZE:\n *\tThis symbol contains the sizeof(IV).\n */\n/* UVSIZE:\n *\tThis symbol contains the sizeof(UV).\n */\n/* I8SIZE:\n *\tThis symbol contains the sizeof(I8).\n */\n/* U8SIZE:\n *\tThis symbol contains the sizeof(U8).\n */\n/* I16SIZE:\n *\tThis symbol contains the sizeof(I16).\n */\n/* U16SIZE:\n *\tThis symbol contains the sizeof(U16).\n */\n/* I32SIZE:\n *\tThis symbol contains the sizeof(I32).\n */\n/* U32SIZE:\n *\tThis symbol contains the sizeof(U32).\n */\n/* I64SIZE:\n *\tThis symbol contains the sizeof(I64).\n */\n/* U64SIZE:\n *\tThis symbol contains the sizeof(U64).\n */\n/* NVSIZE:\n *\tThis symbol contains the sizeof(NV).\n *\tNote that some floating point formats have unused bytes.\n *\tThe most notable example is the x86* 80-bit extended precision\n *\twhich comes in byte sizes of 12 and 16 (for 32 and 64 bit\n *\tplatforms, respectively), but which only uses 10 bytes.\n *\tPerl compiled with -Duselongdouble on x86* is like this.\n */\n/* NV_PRESERVES_UV:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tcan preserve all the bits of a variable of type UVTYPE.\n */\n/* NV_PRESERVES_UV_BITS:\n *\tThis symbol contains the number of bits a variable of type NVTYPE\n *\tcan preserve of a variable of type UVTYPE.\n */\n/* NV_OVERFLOWS_INTEGERS_AT:\n *\tThis symbol gives the largest integer value that NVs can hold. This\n *\tvalue + 1.0 cannot be stored accurately. It is expressed as constant\n *\tfloating point expression to reduce the chance of decimal/binary\n *\tconversion issues. If it can not be determined, the value 0 is given.\n */\n/* NV_ZERO_IS_ALLBITS_ZERO:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tstores 0.0 in memory as all bits zero.\n */\n#define\tIVTYPE\t\tlong\t\t/**/\n#define\tUVTYPE\t\tunsigned long\t\t/**/\n#define\tI8TYPE\t\tchar\t\t/**/\n#define\tU8TYPE\t\tunsigned char\t\t/**/\n#define\tI16TYPE\t\tshort\t/**/\n#define\tU16TYPE\t\tunsigned short\t/**/\n#define\tI32TYPE\t\tlong\t/**/\n#define\tU32TYPE\t\tunsigned long\t/**/\n#ifdef HAS_QUAD\n#define\tI64TYPE\t\tlong long\t/**/\n#define\tU64TYPE\t\tunsigned long long\t/**/\n#endif\n#define\tNVTYPE\t\tdouble\t\t/**/\n#define\tIVSIZE\t\t4\t\t/**/\n#define\tUVSIZE\t\t4\t\t/**/\n#define\tI8SIZE\t\t1\t\t/**/\n#define\tU8SIZE\t\t1\t\t/**/\n#define\tI16SIZE\t\t2\t/**/\n#define\tU16SIZE\t\t2\t/**/\n#define\tI32SIZE\t\t4\t/**/\n#define\tU32SIZE\t\t4\t/**/\n#ifdef HAS_QUAD\n#define\tI64SIZE\t\t8\t/**/\n#define\tU64SIZE\t\t8\t/**/\n#endif\n#define\tNVSIZE\t\t8\t\t/**/\n#define\tNV_PRESERVES_UV\n#define\tNV_PRESERVES_UV_BITS\t32\n#define\tNV_OVERFLOWS_INTEGERS_AT\t256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0\n#define\tNV_ZERO_IS_ALLBITS_ZERO\n#if UVSIZE == 8\n#   ifdef BYTEORDER\n#       if BYTEORDER == 0x1234\n#           undef BYTEORDER\n#           define BYTEORDER 0x12345678\n#       else\n#           if BYTEORDER == 0x4321\n#               undef BYTEORDER\n#               define BYTEORDER 0x87654321\n#           endif\n#       endif\n#   endif\n#endif\n\n/* IVdf:\n *\tThis symbol defines the format string used for printing a Perl IV\n *\tas a signed decimal integer.\n */\n/* UVuf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned decimal integer.\n */\n/* UVof:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned octal integer.\n */\n/* UVxf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in lowercase abcdef.\n */\n/* UVXf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in uppercase ABCDEF.\n */\n/* NVef:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %e-ish floating point format.\n */\n/* NVff:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %f-ish floating point format.\n */\n/* NVgf:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %g-ish floating point format.\n */\n#define\tIVdf\t\t\"ld\"\t\t/**/\n#define\tUVuf\t\t\"lu\"\t\t/**/\n#define\tUVof\t\t\"lo\"\t\t/**/\n#define\tUVxf\t\t\"lx\"\t\t/**/\n#define\tUVXf\t\t\"lX\"\t\t/**/\n#define\tNVef\t\t\"e\"\t\t/**/\n#define\tNVff\t\t\"f\"\t\t/**/\n#define\tNVgf\t\t\"g\"\t\t/**/\n\n/* SELECT_MIN_BITS:\n *\tThis symbol holds the minimum number of bits operated by select.\n *\tThat is, if you do select(n, ...), how many bits at least will be\n *\tcleared in the masks if some activity is detected.  Usually this\n *\tis either n or 32*ceil(n/32), especially many little-endians do\n *\tthe latter.  This is only useful if you have select(), naturally.\n */\n#define SELECT_MIN_BITS \t32\t/**/\n\n/* ST_INO_SIZE:\n *\tThis variable contains the size of struct stat's st_ino in bytes.\n */\n/* ST_INO_SIGN:\n *\tThis symbol holds the signedness of struct stat's st_ino.\n *\t1 for unsigned, -1 for signed.\n */\n#define ST_INO_SIGN 1\t/* st_ino sign */\n#define ST_INO_SIZE 4\t/* st_ino size */\n\n/* STARTPERL:\n *\tThis variable contains the string to put in front of a perl\n *\tscript to make sure (one hopes) that it runs with perl and not\n *\tsome shell.\n */\n#define STARTPERL \"#!perl\"\t\t/**/\n\n/* HAS_STDIO_STREAM_ARRAY:\n *\tThis symbol, if defined, tells that there is an array\n *\tholding the stdio streams.\n */\n/* STDIO_STREAM_ARRAY:\n *\tThis symbol tells the name of the array holding the stdio streams.\n *\tUsual values include _iob, __iob, and __sF.\n */\n/*#define\tHAS_STDIO_STREAM_ARRAY\t/ **/\n#ifdef HAS_STDIO_STREAM_ARRAY\n#define STDIO_STREAM_ARRAY\t\n#endif\n\n/* GMTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* GMTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n#define GMTIME_MAX\t\t2147483647\t/**/\n#define GMTIME_MIN\t\t0\t/**/\n#define LOCALTIME_MAX\t2147483647\t/**/\n#define LOCALTIME_MIN\t0\t/**/\n\n/* USE_64_BIT_INT:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be employed (be they 32 or 64 bits).  The minimal possible\n *\t64-bitness is used, just enough to get 64-bit integers into Perl.\n *\tThis may mean using for example \"long longs\", while your memory\n *\tmay still be limited to 2 gigabytes.\n */\n/* USE_64_BIT_ALL:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be used (be they 32 or 64 bits).  The maximal possible\n *\t64-bitness is employed: LP64 or ILP64, meaning that you will\n *\tbe able to use more than 2 gigabytes of memory.  This mode is\n *\teven more binary incompatible than USE_64_BIT_INT. You may not\n *\tbe able to run the resulting executable in a 32-bit CPU at all or\n *\tyou may need at least to reboot your OS to 64-bit mode.\n */\n#ifndef USE_64_BIT_INT\n/*#define\tUSE_64_BIT_INT\t\t/ **/\n#endif\n#ifndef USE_64_BIT_ALL\n/*#define\tUSE_64_BIT_ALL\t\t/ **/\n#endif\n\n/* USE_CBACKTRACE:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for backtrace.\n */\n/*#define USE_CBACKTRACE\t\t/ **/\n\n/* USE_DTRACE:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for DTrace.\n */\n/*#define USE_DTRACE\t\t/ **/\n\n/* USE_FAST_STDIO:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use 'fast stdio'.\n *\tDefaults to define in Perls 5.8 and earlier, to undef later.\n */\n#ifndef USE_FAST_STDIO\n/*#define\tUSE_FAST_STDIO\t\t/ **/\n#endif\n\n/* USE_KERN_PROC_PATHNAME:\n *\tThis symbol, if defined, indicates that we can use sysctl with\n *\tKERN_PROC_PATHNAME to get a full path for the executable, and hence\n * \tconvert $^X to an absolute path.\n */\n/*#define USE_KERN_PROC_PATHNAME\t/ **/\n\n/* USE_LARGE_FILES:\n *\tThis symbol, if defined, indicates that large file support\n *\tshould be used when available.\n */\n#ifndef USE_LARGE_FILES\n/*#define\tUSE_LARGE_FILES\t\t/ **/\n#endif\n\n/* USE_LONG_DOUBLE:\n *\tThis symbol, if defined, indicates that long doubles should\n *\tbe used when available.\n */\n#ifndef USE_LONG_DOUBLE\n/*#define\tUSE_LONG_DOUBLE\t\t/ **/\n#endif\n\n/* USE_MORE_BITS:\n *\tThis symbol, if defined, indicates that 64-bit interfaces and\n *\tlong doubles should be used when available.\n */\n#ifndef USE_MORE_BITS\n/*#define\tUSE_MORE_BITS\t\t/ **/\n#endif\n\n/* MULTIPLICITY:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use multiplicity.\n */\n#ifndef MULTIPLICITY\n/*#define\tMULTIPLICITY\t\t/ **/\n#endif\n\n/* USE_NSGETEXECUTABLEPATH:\n *\tThis symbol, if defined, indicates that we can use _NSGetExecutablePath\n *\tand realpath to get a full path for the executable, and hence convert\n *\t$^X to an absolute path.\n */\n/*#define USE_NSGETEXECUTABLEPATH\t/ **/\n\n/* USE_PERLIO:\n *\tThis symbol, if defined, indicates that the PerlIO abstraction should\n *\tbe used throughout.  If not defined, stdio should be\n *\tused in a fully backward compatible manner.\n */\n#ifndef USE_PERLIO\n#define\tUSE_PERLIO\t\t/**/\n#endif\n\n/* USE_QUADMATH:\n *\tThis symbol, if defined, indicates that the quadmath library should\n *\tbe used when available.\n */\n#ifndef USE_QUADMATH\n/*#define\tUSE_QUADMATH\t\t/ **/\n#endif\n\n/* USE_SOCKS:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use socks.\n */\n#ifndef USE_SOCKS\n/*#define\tUSE_SOCKS\t\t/ **/\n#endif\n\n/* HAS_DRAND48_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the drand48() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern double drand48(void);\n */\n/*#define\tHAS_DRAND48_PROTO\t/ **/\n\n/* HAS_GETHOST_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for gethostent(), gethostbyname(), and\n *\tgethostbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETHOST_PROTOS\t/**/\n\n/* HAS_GETNET_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getnetent(), getnetbyname(), and\n *\tgetnetbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETNET_PROTOS\t/ **/\n\n/* HAS_GETPROTO_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getprotoent(), getprotobyname(), and\n *\tgetprotobyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETPROTO_PROTOS\t/**/\n\n/* HAS_GETSERV_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getservent(), getservbyname(), and\n *\tgetservbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETSERV_PROTOS\t/**/\n\n/* HAS_LSEEK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the lseek() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern off_t lseek(int, off_t, int);\n */\n#define\tHAS_LSEEK_PROTO\t/**/\n\n/* Netdb_host_t:\n *\tThis symbol holds the type used for the 1st argument\n *\tto gethostbyaddr().\n */\n/* Netdb_hlen_t:\n *\tThis symbol holds the type used for the 2nd argument\n *\tto gethostbyaddr().\n */\n/* Netdb_name_t:\n *\tThis symbol holds the type used for the argument to\n *\tgethostbyname().\n */\n/* Netdb_net_t:\n *\tThis symbol holds the type used for the 1st argument to\n *\tgetnetbyaddr().\n */\n#define Netdb_host_t\t\tchar * /**/\n#define Netdb_hlen_t\t\tint /**/\n#define Netdb_name_t\t\tchar * /**/\n#define Netdb_net_t\t\tlong /**/\n\n/* Select_fd_set_t:\n *\tThis symbol holds the type used for the 2nd, 3rd, and 4th\n *\targuments to select.  Usually, this is 'fd_set *', if HAS_FD_SET\n *\tis defined, and 'int *' otherwise.  This is only useful if you\n *\thave select(), of course.\n */\n#define Select_fd_set_t \tPerl_fd_set *\t/**/\n\n/* Sock_size_t:\n *\tThis symbol holds the type used for the size argument of\n *\tvarious socket calls (just the base type, not the pointer-to).\n */\n#define Sock_size_t\t\tint /**/\n\n/* ARCHNAME:\n *\tThis symbol holds a string representing the architecture name.\n *\tIt may be used to construct an architecture-dependant pathname\n *\twhere library files may be held under a private library, for\n *\tinstance.\n */\n#define ARCHNAME \"MSWin32-x86-perlio\"\t\t/**/\n\n/* HAS_ASCTIME_R:\n *\tThis symbol, if defined, indicates that the asctime_r routine\n *\tis available to asctime re-entrantly.\n */\n/* ASCTIME_R_PROTO:\n *\tThis symbol encodes the prototype of asctime_r.\n *\tIt is zero if d_asctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_asctime_r\n *\tis defined.\n */\n/*#define HAS_ASCTIME_R\t   / **/\n#define ASCTIME_R_PROTO 0\t   /**/\n\n/* HAS_CRYPT_R:\n *\tThis symbol, if defined, indicates that the crypt_r routine\n *\tis available to crypt re-entrantly.\n */\n/* CRYPT_R_PROTO:\n *\tThis symbol encodes the prototype of crypt_r.\n *\tIt is zero if d_crypt_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_crypt_r\n *\tis defined.\n */\n/*#define HAS_CRYPT_R\t   / **/\n#define CRYPT_R_PROTO 0\t   /**/\n\n/* HAS_CTERMID_R:\n *\tThis symbol, if defined, indicates that the ctermid_r routine\n *\tis available to ctermid re-entrantly.\n */\n/* CTERMID_R_PROTO:\n *\tThis symbol encodes the prototype of ctermid_r.\n *\tIt is zero if d_ctermid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctermid_r\n *\tis defined.\n */\n/*#define HAS_CTERMID_R\t   / **/\n#define CTERMID_R_PROTO 0\t   /**/\n\n/* HAS_CTIME_R:\n *\tThis symbol, if defined, indicates that the ctime_r routine\n *\tis available to ctime re-entrantly.\n */\n/* CTIME_R_PROTO:\n *\tThis symbol encodes the prototype of ctime_r.\n *\tIt is zero if d_ctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctime_r\n *\tis defined.\n */\n/*#define HAS_CTIME_R\t   / **/\n#define CTIME_R_PROTO 0\t   /**/\n\n/* HAS_DRAND48_R:\n *\tThis symbol, if defined, indicates that the drand48_r routine\n *\tis available to drand48 re-entrantly.\n */\n/* DRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of drand48_r.\n *\tIt is zero if d_drand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_drand48_r\n *\tis defined.\n */\n/*#define HAS_DRAND48_R\t   / **/\n#define DRAND48_R_PROTO 0\t   /**/\n\n/* HAS_ENDGRENT_R:\n *\tThis symbol, if defined, indicates that the endgrent_r routine\n *\tis available to endgrent re-entrantly.\n */\n/* ENDGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of endgrent_r.\n *\tIt is zero if d_endgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endgrent_r\n *\tis defined.\n */\n/*#define HAS_ENDGRENT_R\t   / **/\n#define ENDGRENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDHOSTENT_R:\n *\tThis symbol, if defined, indicates that the endhostent_r routine\n *\tis available to endhostent re-entrantly.\n */\n/* ENDHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of endhostent_r.\n *\tIt is zero if d_endhostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endhostent_r\n *\tis defined.\n */\n/*#define HAS_ENDHOSTENT_R\t   / **/\n#define ENDHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDNETENT_R:\n *\tThis symbol, if defined, indicates that the endnetent_r routine\n *\tis available to endnetent re-entrantly.\n */\n/* ENDNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of endnetent_r.\n *\tIt is zero if d_endnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endnetent_r\n *\tis defined.\n */\n/*#define HAS_ENDNETENT_R\t   / **/\n#define ENDNETENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDPROTOENT_R:\n *\tThis symbol, if defined, indicates that the endprotoent_r routine\n *\tis available to endprotoent re-entrantly.\n */\n/* ENDPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of endprotoent_r.\n *\tIt is zero if d_endprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endprotoent_r\n *\tis defined.\n */\n/*#define HAS_ENDPROTOENT_R\t   / **/\n#define ENDPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDPWENT_R:\n *\tThis symbol, if defined, indicates that the endpwent_r routine\n *\tis available to endpwent re-entrantly.\n */\n/* ENDPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of endpwent_r.\n *\tIt is zero if d_endpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endpwent_r\n *\tis defined.\n */\n/*#define HAS_ENDPWENT_R\t   / **/\n#define ENDPWENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDSERVENT_R:\n *\tThis symbol, if defined, indicates that the endservent_r routine\n *\tis available to endservent re-entrantly.\n */\n/* ENDSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of endservent_r.\n *\tIt is zero if d_endservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endservent_r\n *\tis defined.\n */\n/*#define HAS_ENDSERVENT_R\t   / **/\n#define ENDSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_GETGRENT_R:\n *\tThis symbol, if defined, indicates that the getgrent_r routine\n *\tis available to getgrent re-entrantly.\n */\n/* GETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of getgrent_r.\n *\tIt is zero if d_getgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrent_r\n *\tis defined.\n */\n/*#define HAS_GETGRENT_R\t   / **/\n#define GETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_GETGRGID_R:\n *\tThis symbol, if defined, indicates that the getgrgid_r routine\n *\tis available to getgrgid re-entrantly.\n */\n/* GETGRGID_R_PROTO:\n *\tThis symbol encodes the prototype of getgrgid_r.\n *\tIt is zero if d_getgrgid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrgid_r\n *\tis defined.\n */\n/*#define HAS_GETGRGID_R\t   / **/\n#define GETGRGID_R_PROTO 0\t   /**/\n\n/* HAS_GETGRNAM_R:\n *\tThis symbol, if defined, indicates that the getgrnam_r routine\n *\tis available to getgrnam re-entrantly.\n */\n/* GETGRNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getgrnam_r.\n *\tIt is zero if d_getgrnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrnam_r\n *\tis defined.\n */\n/*#define HAS_GETGRNAM_R\t   / **/\n#define GETGRNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYADDR_R:\n *\tThis symbol, if defined, indicates that the gethostbyaddr_r routine\n *\tis available to gethostbyaddr re-entrantly.\n */\n/* GETHOSTBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyaddr_r.\n *\tIt is zero if d_gethostbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYADDR_R\t   / **/\n#define GETHOSTBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYNAME_R:\n *\tThis symbol, if defined, indicates that the gethostbyname_r routine\n *\tis available to gethostbyname re-entrantly.\n */\n/* GETHOSTBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyname_r.\n *\tIt is zero if d_gethostbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyname_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYNAME_R\t   / **/\n#define GETHOSTBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the gethostent_r routine\n *\tis available to gethostent re-entrantly.\n */\n/* GETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of gethostent_r.\n *\tIt is zero if d_gethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostent_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTENT_R\t   / **/\n#define GETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_GETLOGIN_R:\n *\tThis symbol, if defined, indicates that the getlogin_r routine\n *\tis available to getlogin re-entrantly.\n */\n/* GETLOGIN_R_PROTO:\n *\tThis symbol encodes the prototype of getlogin_r.\n *\tIt is zero if d_getlogin_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getlogin_r\n *\tis defined.\n */\n/*#define HAS_GETLOGIN_R\t   / **/\n#define GETLOGIN_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYADDR_R:\n *\tThis symbol, if defined, indicates that the getnetbyaddr_r routine\n *\tis available to getnetbyaddr re-entrantly.\n */\n/* GETNETBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyaddr_r.\n *\tIt is zero if d_getnetbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYADDR_R\t   / **/\n#define GETNETBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYNAME_R:\n *\tThis symbol, if defined, indicates that the getnetbyname_r routine\n *\tis available to getnetbyname re-entrantly.\n */\n/* GETNETBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyname_r.\n *\tIt is zero if d_getnetbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyname_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYNAME_R\t   / **/\n#define GETNETBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETNETENT_R:\n *\tThis symbol, if defined, indicates that the getnetent_r routine\n *\tis available to getnetent re-entrantly.\n */\n/* GETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of getnetent_r.\n *\tIt is zero if d_getnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetent_r\n *\tis defined.\n */\n/*#define HAS_GETNETENT_R\t   / **/\n#define GETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNAME_R:\n *\tThis symbol, if defined, indicates that the getprotobyname_r routine\n *\tis available to getprotobyname re-entrantly.\n */\n/* GETPROTOBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobyname_r.\n *\tIt is zero if d_getprotobyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobyname_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNAME_R\t   / **/\n#define GETPROTOBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNUMBER_R:\n *\tThis symbol, if defined, indicates that the getprotobynumber_r routine\n *\tis available to getprotobynumber re-entrantly.\n */\n/* GETPROTOBYNUMBER_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobynumber_r.\n *\tIt is zero if d_getprotobynumber_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobynumber_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNUMBER_R\t   / **/\n#define GETPROTOBYNUMBER_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the getprotoent_r routine\n *\tis available to getprotoent re-entrantly.\n */\n/* GETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of getprotoent_r.\n *\tIt is zero if d_getprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotoent_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOENT_R\t   / **/\n#define GETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPWENT_R:\n *\tThis symbol, if defined, indicates that the getpwent_r routine\n *\tis available to getpwent re-entrantly.\n */\n/* GETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of getpwent_r.\n *\tIt is zero if d_getpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwent_r\n *\tis defined.\n */\n/*#define HAS_GETPWENT_R\t   / **/\n#define GETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPWNAM_R:\n *\tThis symbol, if defined, indicates that the getpwnam_r routine\n *\tis available to getpwnam re-entrantly.\n */\n/* GETPWNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getpwnam_r.\n *\tIt is zero if d_getpwnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwnam_r\n *\tis defined.\n */\n/*#define HAS_GETPWNAM_R\t   / **/\n#define GETPWNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETPWUID_R:\n *\tThis symbol, if defined, indicates that the getpwuid_r routine\n *\tis available to getpwuid re-entrantly.\n */\n/* GETPWUID_R_PROTO:\n *\tThis symbol encodes the prototype of getpwuid_r.\n *\tIt is zero if d_getpwuid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwuid_r\n *\tis defined.\n */\n/*#define HAS_GETPWUID_R\t   / **/\n#define GETPWUID_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYNAME_R:\n *\tThis symbol, if defined, indicates that the getservbyname_r routine\n *\tis available to getservbyname re-entrantly.\n */\n/* GETSERVBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyname_r.\n *\tIt is zero if d_getservbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyname_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYNAME_R\t   / **/\n#define GETSERVBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYPORT_R:\n *\tThis symbol, if defined, indicates that the getservbyport_r routine\n *\tis available to getservbyport re-entrantly.\n */\n/* GETSERVBYPORT_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyport_r.\n *\tIt is zero if d_getservbyport_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyport_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYPORT_R\t   / **/\n#define GETSERVBYPORT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT_R:\n *\tThis symbol, if defined, indicates that the getservent_r routine\n *\tis available to getservent re-entrantly.\n */\n/* GETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of getservent_r.\n *\tIt is zero if d_getservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservent_r\n *\tis defined.\n */\n/*#define HAS_GETSERVENT_R\t   / **/\n#define GETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_GETSPNAM_R:\n *\tThis symbol, if defined, indicates that the getspnam_r routine\n *\tis available to getspnam re-entrantly.\n */\n/* GETSPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getspnam_r.\n *\tIt is zero if d_getspnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getspnam_r\n *\tis defined.\n */\n/*#define HAS_GETSPNAM_R\t   / **/\n#define GETSPNAM_R_PROTO 0\t   /**/\n\n/* HAS_GMTIME_R:\n *\tThis symbol, if defined, indicates that the gmtime_r routine\n *\tis available to gmtime re-entrantly.\n */\n/* GMTIME_R_PROTO:\n *\tThis symbol encodes the prototype of gmtime_r.\n *\tIt is zero if d_gmtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gmtime_r\n *\tis defined.\n */\n/*#define HAS_GMTIME_R\t   / **/\n#define GMTIME_R_PROTO 0\t   /**/\n\n/* HAS_LOCALTIME_R:\n *\tThis symbol, if defined, indicates that the localtime_r routine\n *\tis available to localtime re-entrantly.\n */\n/* LOCALTIME_R_NEEDS_TZSET:\n *\tMany libc's localtime_r implementations do not call tzset,\n *\tmaking them differ from localtime(), and making timezone\n *\tchanges using \\undef{TZ} without explicitly calling tzset\n *\timpossible. This symbol makes us call tzset before localtime_r\n */\n/*#define LOCALTIME_R_NEEDS_TZSET / **/\n#ifdef LOCALTIME_R_NEEDS_TZSET\n#define L_R_TZSET tzset(),\n#else\n#define L_R_TZSET\n#endif\n\n/* LOCALTIME_R_PROTO:\n *\tThis symbol encodes the prototype of localtime_r.\n *\tIt is zero if d_localtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_localtime_r\n *\tis defined.\n */\n/*#define HAS_LOCALTIME_R\t   / **/\n#define LOCALTIME_R_PROTO 0\t   /**/\n\n/* OLD_PTHREAD_CREATE_JOINABLE:\n *\tThis symbol, if defined, indicates how to create pthread\n *\tin joinable (aka undetached) state.  NOTE: not defined\n *\tif pthread.h already has defined PTHREAD_CREATE_JOINABLE\n *\t(the new version of the constant).\n *\tIf defined, known values are PTHREAD_CREATE_UNDETACHED\n *\tand __UNDETACHED.\n */\n/*#define OLD_PTHREAD_CREATE_JOINABLE  / **/\n\n/* HAS_PTHREAD_ATFORK:\n *\tThis symbol, if defined, indicates that the pthread_atfork routine\n *\tis available to setup fork handlers.\n */\n/*#define HAS_PTHREAD_ATFORK\t\t/ **/\n\n/* HAS_PTHREAD_YIELD:\n *\tThis symbol, if defined, indicates that the pthread_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/* SCHED_YIELD:\n *\tThis symbol defines the way to yield the execution of\n *\tthe current thread.  Known ways are sched_yield,\n *\tpthread_yield, and pthread_yield with NULL.\n */\n/* HAS_SCHED_YIELD:\n *\tThis symbol, if defined, indicates that the sched_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/*#define HAS_PTHREAD_YIELD\t/ **/\n#define SCHED_YIELD\t\t/**/\n/*#define HAS_SCHED_YIELD\t/ **/\n\n/* HAS_RANDOM_R:\n *\tThis symbol, if defined, indicates that the random_r routine\n *\tis available to random re-entrantly.\n */\n/* RANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of random_r.\n *\tIt is zero if d_random_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_random_r\n *\tis defined.\n */\n/*#define HAS_RANDOM_R\t   / **/\n#define RANDOM_R_PROTO 0\t   /**/\n\n/* HAS_READDIR64_R:\n *\tThis symbol, if defined, indicates that the readdir64_r routine\n *\tis available to readdir64 re-entrantly.\n */\n/* READDIR64_R_PROTO:\n *\tThis symbol encodes the prototype of readdir64_r.\n *\tIt is zero if d_readdir64_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir64_r\n *\tis defined.\n */\n/*#define HAS_READDIR64_R\t   / **/\n#define READDIR64_R_PROTO 0\t   /**/\n\n/* HAS_READDIR_R:\n *\tThis symbol, if defined, indicates that the readdir_r routine\n *\tis available to readdir re-entrantly.\n */\n/* READDIR_R_PROTO:\n *\tThis symbol encodes the prototype of readdir_r.\n *\tIt is zero if d_readdir_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir_r\n *\tis defined.\n */\n/*#define HAS_READDIR_R\t   / **/\n#define READDIR_R_PROTO 0\t   /**/\n\n/* HAS_SETGRENT_R:\n *\tThis symbol, if defined, indicates that the setgrent_r routine\n *\tis available to setgrent re-entrantly.\n */\n/* SETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of setgrent_r.\n *\tIt is zero if d_setgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setgrent_r\n *\tis defined.\n */\n/*#define HAS_SETGRENT_R\t   / **/\n#define SETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_SETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the sethostent_r routine\n *\tis available to sethostent re-entrantly.\n */\n/* SETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of sethostent_r.\n *\tIt is zero if d_sethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_sethostent_r\n *\tis defined.\n */\n/*#define HAS_SETHOSTENT_R\t   / **/\n#define SETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_SETLOCALE_R:\n *\tThis symbol, if defined, indicates that the setlocale_r routine\n *\tis available to setlocale re-entrantly.\n */\n/* SETLOCALE_R_PROTO:\n *\tThis symbol encodes the prototype of setlocale_r.\n *\tIt is zero if d_setlocale_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setlocale_r\n *\tis defined.\n */\n/*#define HAS_SETLOCALE_R\t   / **/\n#define SETLOCALE_R_PROTO 0\t   /**/\n\n/* HAS_SETNETENT_R:\n *\tThis symbol, if defined, indicates that the setnetent_r routine\n *\tis available to setnetent re-entrantly.\n */\n/* SETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of setnetent_r.\n *\tIt is zero if d_setnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setnetent_r\n *\tis defined.\n */\n/*#define HAS_SETNETENT_R\t   / **/\n#define SETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_SETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the setprotoent_r routine\n *\tis available to setprotoent re-entrantly.\n */\n/* SETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of setprotoent_r.\n *\tIt is zero if d_setprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setprotoent_r\n *\tis defined.\n */\n/*#define HAS_SETPROTOENT_R\t   / **/\n#define SETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_SETPWENT_R:\n *\tThis symbol, if defined, indicates that the setpwent_r routine\n *\tis available to setpwent re-entrantly.\n */\n/* SETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of setpwent_r.\n *\tIt is zero if d_setpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setpwent_r\n *\tis defined.\n */\n/*#define HAS_SETPWENT_R\t   / **/\n#define SETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_SETSERVENT_R:\n *\tThis symbol, if defined, indicates that the setservent_r routine\n *\tis available to setservent re-entrantly.\n */\n/* SETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of setservent_r.\n *\tIt is zero if d_setservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setservent_r\n *\tis defined.\n */\n/*#define HAS_SETSERVENT_R\t   / **/\n#define SETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_SRAND48_R:\n *\tThis symbol, if defined, indicates that the srand48_r routine\n *\tis available to srand48 re-entrantly.\n */\n/* SRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of srand48_r.\n *\tIt is zero if d_srand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srand48_r\n *\tis defined.\n */\n/*#define HAS_SRAND48_R\t   / **/\n#define SRAND48_R_PROTO 0\t   /**/\n\n/* HAS_SRANDOM_R:\n *\tThis symbol, if defined, indicates that the srandom_r routine\n *\tis available to srandom re-entrantly.\n */\n/* SRANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of srandom_r.\n *\tIt is zero if d_srandom_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srandom_r\n *\tis defined.\n */\n/*#define HAS_SRANDOM_R\t   / **/\n#define SRANDOM_R_PROTO 0\t   /**/\n\n/* HAS_STRERROR_R:\n *\tThis symbol, if defined, indicates that the strerror_r routine\n *\tis available to strerror re-entrantly.\n */\n/* STRERROR_R_PROTO:\n *\tThis symbol encodes the prototype of strerror_r.\n *\tIt is zero if d_strerror_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_strerror_r\n *\tis defined.\n */\n/*#define HAS_STRERROR_R\t   / **/\n#define STRERROR_R_PROTO 0\t   /**/\n\n/* HAS_TMPNAM_R:\n *\tThis symbol, if defined, indicates that the tmpnam_r routine\n *\tis available to tmpnam re-entrantly.\n */\n/* TMPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of tmpnam_r.\n *\tIt is zero if d_tmpnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_tmpnam_r\n *\tis defined.\n */\n/*#define HAS_TMPNAM_R\t   / **/\n#define TMPNAM_R_PROTO 0\t   /**/\n\n/* HAS_TTYNAME_R:\n *\tThis symbol, if defined, indicates that the ttyname_r routine\n *\tis available to ttyname re-entrantly.\n */\n/* TTYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of ttyname_r.\n *\tIt is zero if d_ttyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ttyname_r\n *\tis defined.\n */\n/*#define HAS_TTYNAME_R\t   / **/\n#define TTYNAME_R_PROTO 0\t   /**/\n\n/* I_MACH_CTHREADS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <mach/cthreads.h>.\n */\n/*#define   I_MACH_CTHREADS\t/ **/\n\n/* I_PTHREAD:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <pthread.h>.\n */\n/*#define   I_PTHREAD\t/ **/\n\n/* USE_ITHREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the interpreter-based threading implementation.\n */\n/* USE_5005THREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the 5.005-based threading implementation.\n *\tOnly valid up to 5.8.x.\n */\n/* OLD_PTHREADS_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use the old draft POSIX threads API.\n */\n/* USE_REENTRANT_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\ttry to use the various _r versions of library functions.\n *\tThis is extremely experimental.\n */\n/*#define\tUSE_5005THREADS\t\t/ **/\n/*#define\tUSE_ITHREADS\t\t/ **/\n#if defined(USE_5005THREADS) && !defined(USE_ITHREADS)\n#define\t\tUSE_THREADS\t\t/* until src is revised*/\n#endif\n/*#define\tOLD_PTHREADS_API\t\t/ **/\n/*#define\tUSE_REENTRANT_API\t/ **/\n\n/* HAS_TIME:\n *\tThis symbol, if defined, indicates that the time() routine exists.\n */\n/* Time_t:\n *\tThis symbol holds the type returned by time(). It can be long,\n *\tor time_t on BSD sites (in which case <sys/types.h> should be\n *\tincluded).\n */\n#define HAS_TIME\t\t/**/\n#define Time_t time_t\t\t/* Time type */\n\n/* HAS_TIMES:\n *\tThis symbol, if defined, indicates that the times() routine exists.\n *\tNote that this became obsolete on some systems (SUNOS), which now\n * use getrusage(). It may be necessary to include <sys/times.h>.\n */\n#define HAS_TIMES\t\t/**/\n\n/* Fpos_t:\n *\tThis symbol holds the type used to declare file positions in libc.\n *\tIt can be fpos_t, long, uint, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Fpos_t fpos_t\t\t/* File position type */\n\n/* Gid_t_f:\n *\tThis symbol defines the format string used for printing a Gid_t.\n */\n#define\tGid_t_f\t\t\"ld\"\t\t/**/\n\n/* Gid_t_sign:\n *\tThis symbol holds the signedness of a Gid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Gid_t_sign\t-1\t\t/* GID sign */\n\n/* Gid_t_size:\n *\tThis symbol holds the size of a Gid_t in bytes.\n */\n#define Gid_t_size 4\t\t/* GID size */\n\n/* Gid_t:\n *\tThis symbol holds the return type of getgid() and the type of\n *\targument to setrgid() and related functions.  Typically,\n *\tit is the type of group ids in the kernel. It can be int, ushort,\n *\tgid_t, etc... It may be necessary to include <sys/types.h> to get\n *\tany typedef'ed information.\n */\n#define Gid_t gid_t\t\t/* Type for getgid(), etc... */\n\n/* Off_t:\n *\tThis symbol holds the type used to declare offsets in the kernel.\n *\tIt can be int, long, off_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n/* LSEEKSIZE:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n/* Off_t_size:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n#define Off_t long\t\t/* <offset> type */\n#define LSEEKSIZE 4\t\t/* <offset> size */\n#define Off_t_size 4\t/* <offset> size */\n\n/* Mode_t:\n *\tThis symbol holds the type used to declare file modes\n *\tfor systems calls.  It is usually mode_t, but may be\n *\tint or unsigned short.  It may be necessary to include <sys/types.h>\n *\tto get any typedef'ed information.\n */\n#define Mode_t mode_t\t /* file mode parameter for system calls */\n\n/* Pid_t:\n *\tThis symbol holds the type used to declare process ids in the kernel.\n *\tIt can be int, uint, pid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Pid_t int\t\t/* PID type */\n\n/* Size_t_size:\n *\tThis symbol holds the size of a Size_t in bytes.\n */\n#define Size_t_size 4\t\t/**/\n\n/* Size_t:\n *\tThis symbol holds the type used to declare length parameters\n *\tfor string functions.  It is usually size_t, but may be\n *\tunsigned long, int, etc.  It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Size_t size_t\t /* length parameter for string functions */\n\n/* Uid_t_f:\n *\tThis symbol defines the format string used for printing a Uid_t.\n */\n#define\tUid_t_f\t\t\"ld\"\t\t/**/\n\n/* Uid_t_sign:\n *\tThis symbol holds the signedness of a Uid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Uid_t_sign\t-1\t\t/* UID sign */\n\n/* Uid_t_size:\n *\tThis symbol holds the size of a Uid_t in bytes.\n */\n#define Uid_t_size 4\t\t/* UID size */\n\n/* Uid_t:\n *\tThis symbol holds the type used to declare user ids in the kernel.\n *\tIt can be int, ushort, uid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Uid_t uid_t\t\t/* UID type */\n\n#endif\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/t/perl.supp": "## Catch various leaks during dlopen...\n{\n   calloc\n   Memcheck:Leak\n   fun:calloc\n   obj:/lib/ld-2.*.so\n}\n{\n   malloc\n   Memcheck:Leak\n   fun:malloc\n   obj:/lib/ld-2.*.so\n}\n{\n   realloc\n   Memcheck:Leak\n   fun:malloc\n   fun:realloc\n   obj:/lib/ld-2.*.so\n}\n{\n   calloc\n   Memcheck:Leak\n   fun:calloc\n   obj:/lib/libdl-2.*.so\n}\n{\n   malloc\n   Memcheck:Leak\n   fun:malloc\n   obj:/lib/libdl-2.*.so\n}\n{\n   realloc\n   Memcheck:Leak\n   fun:malloc\n   fun:realloc\n   obj:/lib/libdl-2.*.so\n}\n{\n   dlopen\n   Memcheck:Addr4\n   obj:/lib/ld-2.*.so\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/t/porting/libperl.t": "#!/usr/bin/perl -w\n\n# Try opening libperl.a with nm, and verifying it has the kind of\n# symbols we expect, and no symbols we should avoid.\n#\n# Fail softly, expect things only on known platforms:\n# - linux, x86 only (ppc linux has odd symbol tables)\n# - darwin (OS X), both x86 and ppc\n# - freebsd\n# and on other platforms, and if things seem odd, just give up (skip_all).\n#\n# Also, if the rarely-used builds options -DPERL_GLOBAL_STRUCT or\n# -DPERL_GLOBAL_STRUCT_PRIVATE are used, verify that they did what\n# they were meant to do, hide the global variables (see perlguts for\n# the details).\n#\n# Debugging tip: nm output (this script's input) can be faked by\n# giving one command line argument for this script: it should be\n# either the filename to read, or \"-\" for STDIN.  You can also append\n# \"@style\" (where style is a supported nm style, like \"gnu\" or \"darwin\")\n# to this filename for \"cross-parsing\".\n#\n# Some terminology:\n# - \"text\" symbols are code\n# - \"data\" symbols are data (duh), with subdivisions:\n#   - \"bss\": (Block-Started-by-Symbol: originally from IBM assembler...),\n#     uninitialized data, which often even doesn't exist in the object\n#     file as such, only its size does, which is then created on demand\n#     by the loader\n#  - \"const\": initialized read-only data, like string literals\n#  - \"common\": uninitialized data unless initialized...\n#    (the full story is too long for here, see \"man nm\")\n#  - \"data\": initialized read-write data\n#    (somewhat confusingly below: \"data data\", but it makes code simpler)\n#  - \"undefined\": external symbol referred to by an object,\n#    most likely a text symbol.  Can be either a symbol defined by\n#    a Perl object file but referred to by other Perl object files,\n#    or a completely external symbol from libc, or other system libraries.\n\nBEGIN {\n    chdir 't' if -d 't';\n    @INC = '../lib';\n    require \"./test.pl\";\n}\n\nuse strict;\n\nuse Config;\n\nif ($Config{cc} =~ /g\\+\\+/) {\n    # XXX Could use c++filt, maybe.\n    skip_all \"on g++\";\n}\n\nmy $libperl_a;\n\nfor my $f (qw(../libperl.a libperl.a)) {\n  if (-f $f) {\n    $libperl_a = $f;\n    last;\n  }\n}\n\nunless (defined $libperl_a) {\n  skip_all \"no libperl.a\";\n}\n\nprint \"# \\$^O = $^O\\n\";\nprint \"# \\$Config{archname} = $Config{archname}\\n\";\nprint \"# \\$Config{cc} = $Config{cc}\\n\";\nprint \"# libperl = $libperl_a\\n\";\n\nmy $nm;\nmy $nm_opt = '';\nmy $nm_style;\nmy $nm_fh;\nmy $nm_err_tmp = \"libperl$$\";\n\nEND {\n    # this is still executed when we skip_all above, avoid a warning\n    unlink $nm_err_tmp if $nm_err_tmp;\n}\n\nmy $fake_input;\nmy $fake_style;\n\nif (@ARGV == 1) {\n    $fake_input = shift @ARGV;\n    print \"# Faking nm output from $fake_input\\n\";\n    if ($fake_input =~ s/\\@(.+)$//) {\n        $fake_style = $1;\n        print \"# Faking nm style from $fake_style\\n\";\n        if ($fake_style eq 'gnu' ||\n            $fake_style eq 'linux' ||\n            $fake_style eq 'freebsd') {\n            $nm_style = 'gnu'\n        } elsif ($fake_style eq 'darwin' || $fake_style eq 'osx') {\n            $nm_style = 'darwin'\n        } else {\n            die \"$0: Unknown explicit nm style '$fake_style'\\n\";\n        }\n    }\n}\n\nunless (defined $nm_style) {\n    if ($^O eq 'linux') {\n        # The 'gnu' style could be equally well be called 'bsd' style,\n        # since the output format of the GNU binutils nm is really BSD.\n        $nm_style = 'gnu';\n    } elsif ($^O eq 'freebsd') {\n        $nm_style = 'gnu';\n    } elsif ($^O eq 'darwin') {\n        $nm_style = 'darwin';\n    }\n}\n\nif (defined $nm_style) {\n    if ($nm_style eq 'gnu') {\n        $nm = '/usr/bin/nm';\n    } elsif ($nm_style eq 'darwin') {\n        $nm = '/usr/bin/nm';\n        # With the -m option we get better information than the BSD-like\n        # default: with the default, a lot of symbols get dumped into 'S'\n        # or 's', for example one cannot tell the difference between const\n        # and non-const data symbols.\n        $nm_opt = '-m';\n    } else {\n        die \"$0: Unexpected nm style '$nm_style'\\n\";\n    }\n}\n\nif ($^O eq 'linux' && $Config{archname} !~ /^(?:x|i6)86/) {\n    # For example in ppc most (but not all!) code symbols are placed\n    # in 'D' (data), not in ' T '.  We cannot work under such conditions.\n    skip_all \"linux but archname $Config{archname} not x86*\";\n}\n\nunless (defined $nm) {\n  skip_all \"no nm\";\n}\n\nunless (defined $nm_style) {\n  skip_all \"no nm style\";\n}\n\nprint \"# nm = $nm\\n\";\nprint \"# nm_style = $nm_style\\n\";\nprint \"# nm_opt = $nm_opt\\n\";\n\nunless (-x $nm) {\n    skip_all \"no executable nm $nm\";\n}\n\nif ($nm_style eq 'gnu' && !defined $fake_style) {\n    open(my $gnu_verify, \"$nm --version|\") or\n        skip_all \"nm failed: $!\";\n    my $gnu_verified;\n    while (<$gnu_verify>) {\n        if (/^GNU nm/) {\n            $gnu_verified = 1;\n            last;\n        }\n    }\n    unless ($gnu_verified) {\n        skip_all \"no GNU nm\";\n    }\n}\n\nif (defined $fake_input) {\n    if ($fake_input eq '-') {\n        open($nm_fh, \"<&STDIN\") or\n            skip_all \"Duping STDIN failed: $!\";\n    } else {\n        open($nm_fh, \"<\", $fake_input) or\n            skip_all \"Opening '$fake_input' failed: $!\";\n    }\n    undef $nm_err_tmp; # In this case there will be no nm errors.\n} else {\n    print qq{# command: \"$nm $nm_opt $libperl_a 2>$nm_err_tmp |\"\\n};\n    open($nm_fh, \"$nm $nm_opt $libperl_a 2>$nm_err_tmp |\") or\n        skip_all \"$nm $nm_opt $libperl_a failed: $!\";\n}\n\nsub is_perlish_symbol {\n    $_[0] =~ /^(?:PL_|Perl|PerlIO)/;\n}\n\n# XXX Implement \"internal test\" for this script (option -t?)\n# to verify that the parsing does what it's intended to.\n\nsub nm_parse_gnu {\n    my $symbols = shift;\n    my $line = $_;\n    if (m{^(\\w+\\.o):$}) {\n        # object file name\n        $symbols->{obj}{$1}++;\n        $symbols->{o} = $1;\n        return;\n    } else {\n        die \"$0: undefined current object: $line\"\n            unless defined $symbols->{o};\n        # 64-bit systems have 16 hexdigits, 32-bit systems have 8.\n        if (s/^[0-9a-f]{8}(?:[0-9a-f]{8})? //) {\n            if (/^[Rr] (\\w+)$/) {\n                # R: read only (const)\n                $symbols->{data}{const}{$1}{$symbols->{o}}++;\n            } elsif (/^r .+$/) {\n                # Skip local const (read only).\n            } elsif (/^([Tti]) (\\w+)(\\..+)?$/) {\n                $symbols->{text}{$2}{$symbols->{o}}{$1}++;\n            } elsif (/^C (\\w+)$/) {\n                $symbols->{data}{common}{$1}{$symbols->{o}}++;\n            } elsif (/^[BbSs] (\\w+)(\\.\\d+)?$/) {\n                # Bb: uninitialized data (bss)\n                # Ss: uninitialized data \"for small objects\"\n                $symbols->{data}{bss}{$1}{$symbols->{o}}++;\n            } elsif (/^D _LIB_VERSION$/) {\n                # Skip the _LIB_VERSION (not ours, probably libm)\n            } elsif (/^[DdGg] (\\w+)$/) {\n                # Dd: initialized data\n                # Gg: initialized \"for small objects\"\n                $symbols->{data}{data}{$1}{$symbols->{o}}++;\n            } elsif (/^. \\.?(\\w+)$/) {\n                # Skip the unknown types.\n                print \"# Unknown type: $line ($symbols->{o})\\n\";\n            }\n            return;\n        } elsif (/^ {8}(?: {8})? U _?(\\w+)$/) {\n            my ($symbol) = $1;\n            return if is_perlish_symbol($symbol);\n            $symbols->{undef}{$symbol}{$symbols->{o}}++;\n            return;\n\t}\n    }\n    print \"# Unexpected nm output '$line' ($symbols->{o})\\n\";\n}\n\nsub nm_parse_darwin {\n    my $symbols = shift;\n    my $line = $_;\n    if (m{^(?:.+)?libperl\\.a\\((\\w+\\.o)\\):$}) {\n        # object file name\n        $symbols->{obj}{$1}++;\n        $symbols->{o} = $1;\n        return;\n    } else {\n        die \"$0: undefined current object: $line\" unless defined $symbols->{o};\n        # 64-bit systems have 16 hexdigits, 32-bit systems have 8.\n        if (s/^[0-9a-f]{8}(?:[0-9a-f]{8})? //) {\n            # String literals can live in different sections\n            # depending on the compiler and os release, assumedly\n            # also linker flags.\n            if (/^\\(__TEXT,__(?:const|(?:asan_)?cstring|literal\\d+)\\) (?:non-)?external _?(\\w+)(\\.\\w+)?$/) {\n                my ($symbol, $suffix) = ($1, $2);\n                # Ignore function-local constants like\n                # _Perl_av_extend_guts.oom_array_extend\n                return if defined $suffix && /__TEXT,__const/;\n                # Ignore the cstring unnamed strings.\n                return if $symbol =~ /^L\\.str\\d+$/;\n                $symbols->{data}{const}{$symbol}{$symbols->{o}}++;\n            } elsif (/^\\(__TEXT,__text\\) ((?:non-)?external) _(\\w+)$/) {\n                my ($exp, $sym) = ($1, $2);\n                $symbols->{text}{$sym}{$symbols->{o}}{$exp =~ /^non/ ? 't' : 'T'}++;\n            } elsif (/^\\(__DATA,__\\w*?(const|data|bss|common)\\w*\\) (?:non-)?external _?(\\w+)(\\.\\w+)?$/) {\n                my ($dtype, $symbol, $suffix) = ($1, $2, $3);\n                # Ignore function-local constants like\n                # _Perl_pp_gmtime.dayname\n                return if defined $suffix;\n                $symbols->{data}{$dtype}{$symbol}{$symbols->{o}}++;\n            } elsif (/^\\(__DATA,__const\\) non-external _\\.memset_pattern\\d*$/) {\n                # Skip this, whatever it is (some inlined leakage from\n                # darwin libc?)\n            } elsif (/^\\(__TEXT,__eh_frame/) {\n                # Skip the eh_frame (exception handling) symbols.\n                return;\n            } elsif (/^\\(__\\w+,__\\w+\\) /) {\n                # Skip the unknown types.\n                print \"# Unknown type: $line ($symbols->{o})\\n\";\n            }\n            return;\n        } elsif (/^ {8}(?: {8})? \\(undefined(?: \\[lazy bound\\])?\\) external _?(.+)/) {\n            # darwin/ppc marks most undefined text symbols\n            # as \"[lazy bound]\".\n            my ($symbol) = $1 =~ s/\\$UNIX2003\\z//r;\n            return if is_perlish_symbol($symbol);\n            $symbols->{undef}{$symbol}{$symbols->{o}}++;\n            return;\n        }\n    }\n    print \"# Unexpected nm output '$line' ($symbols->{o})\\n\";\n}\n\nmy $nm_parse;\n\nif ($nm_style eq 'gnu') {\n    $nm_parse = \\&nm_parse_gnu;\n} elsif ($nm_style eq 'darwin') {\n    $nm_parse = \\&nm_parse_darwin;\n}\n\nunless (defined $nm_parse) {\n    skip_all \"no nm parser ($nm_style $nm_style, \\$^O $^O)\";\n}\n\nmy %symbols;\n\nwhile (<$nm_fh>) {\n    next if /^$/;\n    chomp;\n    $nm_parse->(\\%symbols);\n}\n\n# use Data::Dumper; print Dumper(\\%symbols);\n\n# Something went awfully wrong.  Wrong nm?  Wrong options?\nunless (keys %symbols) {\n    skip_all \"no symbols\\n\";\n}\nunless (exists $symbols{text}) {\n    skip_all \"no text symbols\\n\";\n}\n\n# These should always be true for everyone.\n\nok($symbols{obj}{'pp.o'}, \"has object pp.o\");\nok($symbols{text}{'Perl_peep'}, \"has text Perl_peep\");\nok($symbols{text}{'Perl_pp_uc'}{'pp.o'}, \"has text Perl_pp_uc in pp.o\");\nok(exists $symbols{data}{const}, \"has data const symbols\");\nok($symbols{data}{const}{PL_no_mem}{'globals.o'}, \"has PL_no_mem\");\n\nmy $GS  = $Config{ccflags} =~ /-DPERL_GLOBAL_STRUCT\\b/ ? 1 : 0;\nmy $GSP = $Config{ccflags} =~ /-DPERL_GLOBAL_STRUCT_PRIVATE/ ? 1 : 0;\nmy $nocommon = $Config{ccflags} =~ /-fno-common/ ? 1 : 0;\n\nprint \"# GS  = $GS\\n\";\nprint \"# GSP = $GSP\\n\";\nprint \"# nocommon = $nocommon\\n\";\n\nmy %data_symbols;\n\nfor my $dtype (sort keys %{$symbols{data}}) {\n    for my $symbol (sort keys %{$symbols{data}{$dtype}}) {\n        $data_symbols{$symbol}++;\n    }\n}\n\n# The following tests differ between vanilla vs $GSP or $GS.\n\nif ($GSP) {\n    print \"# -DPERL_GLOBAL_STRUCT_PRIVATE\\n\";\n    ok(!exists $data_symbols{PL_hash_seed}, \"has no PL_hash_seed\");\n    ok(!exists $data_symbols{PL_ppaddr}, \"has no PL_ppaddr\");\n\n    ok(! exists $symbols{data}{bss}, \"has no data bss symbols\")\n        or do {\n            my $bad = \"BSS entries (there are supposed to be none):\\n\";\n            $bad .= \"  bss sym: $_\\n\" for sort keys %{$symbols{data}{bss}};\n            diag($bad);\n        };\n\n    ok(! exists $symbols{data}{data} ||\n            # clang with ASAN seems to add this symbol to every object file:\n            !grep($_ ne '__unnamed_1', keys %{$symbols{data}{data}}),\n        \"has no data data symbols\")\n        or do {\n            my $bad = \"DATA entries (there are supposed to be none):\\n\";\n            $bad .= \"  data sym: $_\\n\" for sort keys %{$symbols{data}{data}};\n            diag($bad);\n        };\n\n    ok(! exists $symbols{data}{common}, \"has no data common symbols\")\n        or do {\n            my $bad = \"COMMON entries (there are supposed to be none):\\n\";\n            $bad .= \"  common sym: $_\\n\" for sort keys %{$symbols{data}{common}};\n            diag($bad);\n        };\n\n    # -DPERL_GLOBAL_STRUCT_PRIVATE should NOT have\n    # the extra text symbol for accessing the vars\n    # (as opposed to \"just\" -DPERL_GLOBAL_STRUCT)\n    ok(! exists $symbols{text}{Perl_GetVars}, \"has no Perl_GetVars\");\n} elsif ($GS) {\n    print \"# -DPERL_GLOBAL_STRUCT\\n\";\n    ok(!exists $data_symbols{PL_hash_seed}, \"has no PL_hash_seed\");\n    ok(!exists $data_symbols{PL_ppaddr}, \"has no PL_ppaddr\");\n\n    if ($nocommon) {\n        $symbols{data}{common} = $symbols{data}{bss};\n        delete $symbols{data}{bss};\n    }\n\n    ok(! exists $symbols{data}{bss}, \"has no data bss symbols\")\n        or do {\n            my $bad = \"BSS entries (there are supposed to be none):\\n\";\n            $bad .= \"  bss sym: $_\\n\" for sort keys %{$symbols{data}{bss}};\n            diag($bad);\n        };\n\n\n    # These PerlIO data symbols are left visible with\n    # -DPERL_GLOBAL_STRUCT (as opposed to -DPERL_GLOBAL_STRUCT_PRIVATE)\n    my @PerlIO =\n        qw(\n           PerlIO_byte\n           PerlIO_crlf\n           PerlIO_pending\n           PerlIO_perlio\n           PerlIO_raw\n           PerlIO_remove\n           PerlIO_stdio\n           PerlIO_unix\n           PerlIO_utf8\n          );\n\n    # PL_magic_vtables is const with -DPERL_GLOBAL_STRUCT_PRIVATE but\n    # otherwise not const -- because of SWIG which wants to modify\n    # the table.  Evil SWIG, eeevil.\n\n    # my_cxt_index is used with PERL_IMPLICIT_CONTEXT, which\n    # -DPERL_GLOBAL_STRUCT has turned on.\n    eq_array([sort keys %{$symbols{data}{data}}],\n             [sort('PL_VarsPtr',\n                   @PerlIO,\n                   'PL_magic_vtables',\n                   'my_cxt_index')],\n             \"data data symbols\");\n\n    # Only one data common symbol, our \"supervariable\".\n    eq_array([sort keys %{$symbols{data}{common}}],\n             ['PL_Vars'],\n             \"data common symbols\");\n\n    ok($symbols{data}{data}{PL_VarsPtr}{'globals.o'}, \"has PL_VarsPtr\");\n    ok($symbols{data}{common}{PL_Vars}{'globals.o'}, \"has PL_Vars\");\n\n    # -DPERL_GLOBAL_STRUCT has extra text symbol for accessing the vars.\n    ok($symbols{text}{Perl_GetVars}{'util.o'}, \"has Perl_GetVars\");\n} else {\n    print \"# neither -DPERL_GLOBAL_STRUCT nor -DPERL_GLOBAL_STRUCT_PRIVATE\\n\";\n\n    if ( !$symbols{data}{common} ) {\n        # This is likely because Perl was compiled with\n        # -Accflags=\"-fno-common\"\n        $symbols{data}{common} = $symbols{data}{bss};\n    }\n\n    ok($symbols{data}{common}{PL_hash_seed}{'globals.o'}, \"has PL_hash_seed\");\n    ok($symbols{data}{data}{PL_ppaddr}{'globals.o'}, \"has PL_ppaddr\");\n\n    # None of the GLOBAL_STRUCT* business here.\n    ok(! exists $symbols{data}{data}{PL_VarsPtr}, \"has no PL_VarsPtr\");\n    ok(! exists $symbols{data}{common}{PL_Vars}, \"has no PL_Vars\");\n    ok(! exists $symbols{text}{Perl_GetVars}, \"has no Perl_GetVars\");\n}\n\n# See the comments in the beginning for what \"undefined symbols\"\n# really means.  We *should* have many of those, that is a good thing.\nok(keys %{$symbols{undef}}, \"has undefined symbols\");\n\n# There are certain symbols we expect to see.\n\n# chmod, socket, getenv, sigaction, exp, time are system/library\n# calls that should each see at least one use. exp can be expl\n# if so configured.\nmy %expected = (\n    chmod  => undef, # There is no Configure symbol for chmod.\n    socket => 'd_socket',\n    getenv => undef, # There is no Configure symbol for getenv,\n    sigaction => 'd_sigaction',\n    time   => 'd_time',\n    );\n\nif ($Config{uselongdouble} && $Config{longdblsize} > $Config{doublesize}) {\n    $expected{expl} = undef; # There is no Configure symbol for expl.\n} elsif ($Config{usequadmath}) {\n    $expected{expq} = undef; # There is no Configure symbol for expq.\n} else {\n    $expected{exp} = undef; # There is no Configure symbol for exp.\n}\n\n# DynaLoader will use dlopen, unless we are building static,\n# and it is used in the platforms we are supporting in this test.\nif ($Config{usedl} ) {\n    $expected{dlopen} = 'd_dlopen';\n}\n\nfor my $symbol (sort keys %expected) {\n    if (defined $expected{$symbol} && !$Config{$expected{$symbol}}) {\n      SKIP: {\n        skip(\"no $symbol\");\n      }\n      next;\n    }\n    my @o = exists $symbols{undef}{$symbol} ?\n        sort keys %{ $symbols{undef}{$symbol} } : ();\n    ok(@o, \"uses $symbol (@o)\");\n}\n\n# There are certain symbols we expect NOT to see.\n#\n# gets is horribly unsafe.\n#\n# fgets should not be used (Perl has its own API, sv_gets),\n# even without perlio.\n#\n# tmpfile is unsafe.\n#\n# strcat, strcpy, strncat, strncpy are unsafe.\n#\n# sprintf and vsprintf should not be used because\n# Perl has its own safer and more portable implementations.\n# (One exception: for certain floating point outputs\n# the native sprintf is still used in some platforms, see below.)\n#\n# atoi has unsafe and undefined failure modes, and is affected by locale.\n# Its cousins include atol and atoll.\n#\n# strtol and strtoul are affected by locale.\n# Cousins include strtoq.\n#\n# system should not be used, use pp_system or my_popen.\n#\n\nmy %unexpected;\n\nfor my $str (qw(system)) {\n    $unexpected{$str} = \"d_$str\";\n}\n\nfor my $stdio (qw(gets fgets tmpfile sprintf vsprintf)) {\n    $unexpected{$stdio} = undef; # No Configure symbol for these.\n}\nfor my $str (qw(strcat strcpy strncat strncpy)) {\n    $unexpected{$str} = undef; # No Configure symbol for these.\n}\n\n$unexpected{atoi} = undef; # No Configure symbol for atoi.\n$unexpected{atol} = undef; # No Configure symbol for atol.\n\nfor my $str (qw(atoll strtol strtoul strtoq)) {\n    $unexpected{$str} = \"d_$str\";\n}\n\nfor my $symbol (sort keys %unexpected) {\n    if (defined $unexpected{$symbol} && !$Config{$unexpected{$symbol}}) {\n      SKIP: {\n        skip(\"no $symbol\");\n      }\n      next;\n    }\n    my @o = exists $symbols{undef}{$symbol} ?\n        sort keys %{ $symbols{undef}{$symbol} } : ();\n    # While sprintf() is bad in the general case,\n    # some platforms implement Gconvert via sprintf, in sv.o.\n    if ($symbol eq 'sprintf' &&\n        $Config{d_Gconvert} =~ /^sprintf/ &&\n        @o == 1 && $o[0] eq 'sv.o') {\n      SKIP: {\n        skip(\"uses sprintf for Gconvert in sv.o\");\n      }\n    } else {\n        is(@o, 0, \"uses no $symbol (@o)\");\n    }\n}\n\n# Check that any text symbols named S_ are not exported.\nmy $export_S_prefix = 0;\nfor my $t (sort grep { /^S_/ } keys %{$symbols{text}}) {\n    for my $o (sort keys %{$symbols{text}{$t}}) {\n        if (exists $symbols{text}{$t}{$o}{T}) {\n            fail($t, \"$t exported from $o\");\n            $export_S_prefix++;\n        }\n    }\n}\nis($export_S_prefix, 0, \"no S_ exports\");\n\nif (defined $nm_err_tmp) {\n    if (open(my $nm_err_fh, $nm_err_tmp)) {\n        my $error;\n        while (<$nm_err_fh>) {\n            # OS X has weird error where nm warns about\n            # \"no name list\" but then outputs fine.\n            if ( $^O eq 'darwin' ) {\n                if (/nm: no name list/ || /^no symbols$/ ) {\n                    print \"# $^O ignoring $nm output: $_\";\n                    next;\n                }\n            }\n            warn \"$0: Unexpected $nm error: $_\";\n            $error++;\n        }\n        die \"$0: Unexpected $nm errors\\n\" if $error;\n    } else {\n        warn \"Failed to open '$nm_err_tmp': $!\\n\";\n    }\n}\n\ndone_testing();\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/lib/utf8.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Archive-Tar/t/src/long/foo.tbz",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Archive-Tar/t/src/long/foo.tgz",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Archive-Tar/t/src/short/foo.tbz",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Archive-Tar/t/src/short/foo.tgz",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Unicode-Collate/t/loc_test.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Sys-Syslog/win32/PerlLog.mc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/CPAN-Meta/corpus/BadMETA.yml",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/PerlIO-via-QuotedPrint/t/QuotedPrint.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/IPC-Cmd/t/src/x.tgz",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/CPAN-Meta-YAML/t/data/utf_16_le_bom.yml",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/CPAN-Meta-YAML/t/data/latin1.yml",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Module-Metadata/corpus/BOMTest/UTF16LE.pm",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Module-Metadata/corpus/BOMTest/UTF16BE.pm",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/IO-Compress/t/files/test.ods",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Encode/lib/Encode/CJKConstants.pm",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Encode/lib/Encode/JP/H2Z.pm",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Encode/t/jisx0201.enc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Encode/t/big5-eten.enc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Encode/t/jisx0208.enc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Encode/t/enc_module.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Encode/t/ksc5601.enc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Encode/t/mime_header_iso2022jp.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Encode/t/Mod_EUCJP.pm",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Encode/t/enc_module.enc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Encode/t/at-tw.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Encode/t/big5-hkscs.enc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Encode/t/at-cn.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Encode/t/jperl.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Encode/t/enc_data.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Encode/t/jisx0212.enc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Encode/t/gb2312.enc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/pulltitl.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/encod02.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus/encwarn01.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus/s2763_sjis.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus/fet_cont.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus/koi8r.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus/lat1frim.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus/cp1256.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus/laozi38b.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus/iso6.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus/thai_iso11.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus/lat1fr.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus/laozi38p.pod",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus/8859_7.pod",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus/fet_dup.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus/pasternak_cp1251.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus/laozi38.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/testlib1/Zonk/Pronk.pm",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus2/polish_utf16le_bom.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus2/polish_utf16be_bom.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/cpan/Pod-Simple/t/corpus2/fiqhakbar_iso6.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/dist/Storable/t/utf8hash.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/win32/perlexe.ico",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/t/io/utf8.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/t/uni/latin2.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/t/uni/greek.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/t/op/tr_latin1.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/t/op/utfhash.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/t/op/lc.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.30.3-z3liambtfg5q5ks4z2mtzg7u62bcmdie/spack-src/t/re/bigfuzzy_not_utf8.t"
    ],
    "total_files": 5413
}