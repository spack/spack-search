{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-macsio-develop-wbqduvvlokqpn25ktxemezys5ymse3dv/spack-src/doc/macsio_iface.rst": "Plugins\n-------\n\nOrdinarily, when we think of plugins in software, we think of shared libraries being opened\nwith `dlopen() <https://linux.die.net/man/3/dlopen>`_ at *runtime*. To avoid the requirement\nfor shared libraries and ``dlopen()``, MACSio_ uses a simpler *link-time* approach to handling\nplugins called *static plugins*. In this case, the plugin's available to MACSio_ are determined\nwhen MACSio_'s main() is linked. Whatever plugins are included on the link line are then\navailable to MACSio_.\n\nMACSio_ exploits a feature in C++ which permits `initialization of static variables via\nnon-constant expressions\n<https://eli.thegreenplace.net/2011/03/08/non-constant-global-initialization-in-c-and-c>`_\nIn fact, the only reason MACSio_ requires a C++ compiler is for the final link to support this\nfeature.\n\nAll symbols in a plugin source file are defined with ``static`` scope. Every plugin defines\nan ``int register_this_plugin(void)`` function and initializes a static dummy integer to the\nresult of a call to ``register_this_plugin()`` like so...\n\n.. code-block:: c\n\n    static int register_this_plugin(void)\n    {\n      MACSIO_IFACE_Handle_t iface;\n\n      strcpy(iface.name, iface_name);\n      strcpy(iface.ext, iface_ext);\n\n      if (!MACSIO_IFACE_Register(&iface))\n          MACSIO_LOG_MSG(Die, (\"Failed to register interface \\\"%s\\\"\", iface.name));\n    }\n    static int dummy = register_this_plugin();\n\nIn the above code example, the call to :any:`MACSIO_IFACE_Register` calls a method\nin MACSio_'s main which does the work of adding the plugin's interface specification\n(:any:`MACSIO_IFACE_Handle_t`) to a statically defined table of plugins. The plugin's\n``id`` is its location in that table.\n\nEach plugin is defined by a file such as ``macsio_foo.c``\nfor a plugin named foo in the ``plugins`` directory.\n``macsio_foo.c`` implements the ``MACSIO_IFACE`` interface for the foo plugin.\n\nAt the time the executable loads, the ``register_this_plugin()`` method is called. Note that\nthis is called long before even ``main()`` is called. The\ncall to ``MACSIO_IFACE_Register()`` from within ``register_this_plugin()`` winds up\nadding the plugin to MACSio_'s global list of plugins. This happens for each plugin. The order\nin which they are added to MACSio_ doesn't matter because plugins are identified by their\n(unique) names. If MACSio_ encounters a case where two different plugins have the same\nname, then it will abort and inform the user of the problem. The remedy is to\nadjust the name of one of the two plugins. MACSio_ is able to call ``static`` methods\ndefined within the plugin via function callback pointers registered with the interface.\n\n.. doxygengroup:: MACSIO_IFACE\n\n.. toctree::\n   :maxdepth: 1\n   :caption: Plugins:\n\n   Simple Example <macsio_miftmpl>\n   macsio_hdf5\n   macsio_silo\n   macsio_pdb\n   macsio_exodus\n   macsio_typhonio\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-macsio-develop-wbqduvvlokqpn25ktxemezys5ymse3dv/spack-src/src-stuff/all_noises.zip",
        "/tmp/vanessa/spack-stage/spack-stage-macsio-develop-wbqduvvlokqpn25ktxemezys5ymse3dv/spack-src/src-stuff/HDF5plugin_ZFP_0.3.0.tar.gz",
        "/tmp/vanessa/spack-stage/spack-stage-macsio-develop-wbqduvvlokqpn25ktxemezys5ymse3dv/spack-src/.git/objects/pack/pack-bab87c44fcbfe2fb9b94556ee3eade2e485b4340.idx",
        "/tmp/vanessa/spack-stage/spack-stage-macsio-develop-wbqduvvlokqpn25ktxemezys5ymse3dv/spack-src/.git/objects/pack/pack-bab87c44fcbfe2fb9b94556ee3eade2e485b4340.pack",
        "/tmp/vanessa/spack-stage/spack-stage-macsio-develop-wbqduvvlokqpn25ktxemezys5ymse3dv/spack-src/doc/macsio_design.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-macsio-develop-wbqduvvlokqpn25ktxemezys5ymse3dv/spack-src/doc/Ale3d_io_perf2.png",
        "/tmp/vanessa/spack-stage/spack-stage-macsio-develop-wbqduvvlokqpn25ktxemezys5ymse3dv/spack-src/doc/macsio_vis1.png",
        "/tmp/vanessa/spack-stage/spack-stage-macsio-develop-wbqduvvlokqpn25ktxemezys5ymse3dv/spack-src/doc/macsio_vis2.png",
        "/tmp/vanessa/spack-stage/spack-stage-macsio-develop-wbqduvvlokqpn25ktxemezys5ymse3dv/spack-src/doc/pmpio_diagram.png",
        "/tmp/vanessa/spack-stage/spack-stage-macsio-develop-wbqduvvlokqpn25ktxemezys5ymse3dv/spack-src/doc/macsio-logo.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-macsio-develop-wbqduvvlokqpn25ktxemezys5ymse3dv/spack-src/doc/scientific_data_objects.png"
    ],
    "total_files": 121
}