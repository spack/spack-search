{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/configure.in": "dnl configure.in for the SASL library\ndnl Rob Siemborski\ndnl Rob Earhart\ndnl $Id: configure.in,v 1.224 2011/09/22 14:44:15 mel Exp $\ndnl\ndnl Copyright (c) 2001 Carnegie Mellon University.  All rights reserved.\ndnl\ndnl Redistribution and use in source and binary forms, with or without\ndnl modification, are permitted provided that the following conditions\ndnl are met:\ndnl\ndnl 1. Redistributions of source code must retain the above copyright\ndnl    notice, this list of conditions and the following disclaimer. \ndnl\ndnl 2. Redistributions in binary form must reproduce the above copyright\ndnl    notice, this list of conditions and the following disclaimer in\ndnl    the documentation and/or other materials provided with the\ndnl    distribution.\ndnl\ndnl 3. The name \"Carnegie Mellon University\" must not be used to\ndnl    endorse or promote products derived from this software without\ndnl    prior written permission. For permission or any other legal\ndnl    details, please contact  \ndnl      Office of Technology Transfer\ndnl      Carnegie Mellon University\ndnl      5000 Forbes Avenue\ndnl      Pittsburgh, PA  15213-3890\ndnl      (412) 268-4387, fax: (412) 268-7395\ndnl      tech-transfer@andrew.cmu.edu\ndnl\ndnl 4. Redistributions of any form whatsoever must retain the following\ndnl    acknowledgment:\ndnl    \\\"This product includes software developed by Computing Services\ndnl     at Carnegie Mellon University (http://www.cmu.edu/computing/).\\\"\ndnl\ndnl CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO\ndnl THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\ndnl AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE\ndnl FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\ndnl WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN\ndnl AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING\ndnl OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\ndnl\nAC_INIT(lib/saslint.h)\nAC_PREREQ([2.54])\n\ndnl use ./config.cache as the default cache file.\ndnl we require a cache file to successfully configure our build.\nif test $cache_file = \"/dev/null\"; then\ncache_file=\"./config.cache\"\nAC_CACHE_LOAD\nfi\n\nAC_CONFIG_AUX_DIR(config)\nAC_CANONICAL_HOST\nAC_CANONICAL_TARGET\n\ndnl\ndnl REMINDER: When changing the version number here, please also update\ndnl the values in win32/include/config.h and include/sasl.h as well.\ndnl\nAM_INIT_AUTOMAKE(cyrus-sasl, 2.1.26)\nCMU_INIT_AUTOMAKE\n\n# and include our config dir scripts\nACLOCAL=\"$ACLOCAL -I \\$(top_srcdir)/config\"\n\nDIRS=\"\"\n\nAC_ARG_ENABLE(cmulocal,\n              [AC_HELP_STRING([--enable-cmulocal],\n                              [enable local mods for CMU [[no]]])],\n              [],\n              enable_cmulocal=no)\n\nAC_ARG_ENABLE(sample,\n              [AC_HELP_STRING([--enable-sample],\n                              [compile sample code [[yes]]])],\n              enable_sample=yes)\n\nAC_ARG_ENABLE(obsolete_cram_attr,\n              [AC_HELP_STRING([--enable-obsolete_cram_attr],\n                              [enable support for cmusaslsecretCRAM-MD5 auxprop property [[yes]]])],\n              enable_obsolete_cram_attr=$enableval,\n              enable_obsolete_cram_attr=yes)\n\nAC_PROG_CC\nAC_PROG_CPP\nAC_PROG_AWK\nAC_PROG_LN_S\nAC_PROG_MAKE_SET\nAC_PROG_INSTALL\nCMU_C___ATTRIBUTE__\n\ndnl check for -R, etc. switch\nCMU_GUESS_RUNPATH_SWITCH\n\ndnl xxx compatibility\nAC_ARG_WITH(staticsasl)\nif test \"$with_staticsasl\" = yes; then\n\tenable_shared=yes\n\tenable_static=yes\nfi\n\nsave_target=$target\nif test -z \"$target\"; then\n\ttarget=\"NONE\"\nfi\n\n# new libtool\nAM_DISABLE_STATIC\nAC_PROG_LIBTOOL\n\ntarget=$save_target\n\nif test \"$enable_static\" = yes; then\n\tSASL_STATIC_LIBS=libsasl2.a\nelse\n\tSASL_STATIC_LIBS=\nfi\n\nAC_ARG_ENABLE(staticdlopen, [  --enable-staticdlopen   try dynamic plugins when we are a static libsasl [[no]] ],\n                enable_staticdlopen=$enableval,\n                enable_staticdlopen=no)\n\nif test \"$enable_staticdlopen\" = yes; then\n  AC_DEFINE(TRY_DLOPEN_WHEN_STATIC,[],[Should we try to dlopen() plugins while statically compiled?])\nfi\n\nif test \"$ac_cv_prog_gcc\" = yes; then\n  CFLAGS=\"-Wall -W ${CFLAGS}\"\nfi\n\nAC_ARG_WITH(purecov,[  --with-purecov          link with purecov])\nif test \"$with_purecov\" = yes; then\n  AC_CHECK_PROGS(PURECOV, purecov)\nfi\nAC_ARG_WITH(purify,[  --with-purify           link with purify])\nif test \"$with_purify\" = yes; then\n  AC_CHECK_PROGS(PURIFY, purify)\nfi\n\nAC_ARG_ENABLE(java, [  --enable-java           compile Java support [[no]]],\n\tenable_java=$enableval, enable_java=no)\nif test \"$enable_java\" = yes; then\n  AC_PATH_PROG(JAVAC, javac, no)\n  AC_PATH_PROGS(JAVAH, javah kaffeh, no)\n  AC_CHECK_PROGS(JAVADOC, javadoc, :)\t\n  if test \"$JAVAC\" = \"no\" -o \"$JAVAH\" = \"no\"; then\n    AC_WARN([Disabling Java support])\n    enable_java=no\n  fi\nelse\n# Make distcheck work\n  JAVAC=\"true\"\n  JAVAH=\"true\"\n  JAVADOC=\"true\"\nfi\nAM_CONDITIONAL(JAVA, test \"$enable_java\" = yes)\n\nif test \"$enable_java\" = yes; then\n  AC_MSG_CHECKING([JNI cpp flags])\n  AC_CACHE_VAL(sasl_cv_java_includes,[\n  if test `echo $JAVAH | sed 's,.*/,,'` = \"kaffeh\"; then\n    sasl_cv_java_includes=-I`echo $JAVAH | sed -e 's,/bin.*,/include/kaffe,'`\n  else\n    java_base=`echo $JAVAC | sed 's,/bin.*,'','`\n\n    AC_ARG_WITH(javabase, [  --with-javabase=PATH    set path to find jni.h in [/usr/java/include] ],\n        java_base=$withval,)\n\t\n\n    sasl_cv_java_includes=''\n    for dir in `find ${java_base}/include -follow -type d -print | grep -v green_threads`; do\n      sasl_cv_java_includes=\"${sasl_cv_java_includes} -I$dir\"\n    done\n  fi\n\n  sasl_cv_java_includes=\"${sasl_cv_java_includes} -I$javapath/include\"])\n\n  JAVA_INCLUDES=$sasl_cv_java_includes\n  AC_SUBST(JAVA_INCLUDES)\n  AC_MSG_RESULT(ok)\n\n  JAVAROOT=\"..\"\n  AC_SUBST(JAVAROOT)\n  JAVAC=`echo \"$JAVAC\" | sed 's,.*/,,'`\n  JAVAH=`echo \"$JAVAH\" | sed 's,.*/,,'`\nfi\n\nAM_CONDITIONAL(SAMPLE, test \"$enable_sample\" = yes)\n\ndnl call before we do the berkeley DB checks\nCMU_SOCKETS\n\ndnl we extracted this to config/sasldb.m4\nSASL_DB_PATH_CHECK()\nSASL_DB_CHECK()\n\n# Do we not install the SASL DB man pages?\nAM_CONDITIONAL(NO_SASL_DB_MANS, test \"x$SASL_DB_MANS\" = \"x\")\n\nAC_ARG_ENABLE(keep_db_open, [  --enable-keep-db-open   keep handle to Berkeley DB open for improved performance [[no]] ],\n                keep_db_open=$enableval,\n                keep_db_open=no)\n\n# Disable if Berkeley DB is not used\nif test \"$dblib\" != berkeley; then\n  keep_db_open=no\nfi\n\nif test \"$keep_db_open\" = yes; then\n  AC_DEFINE(KEEP_DB_OPEN,[],[Should we keep handle to Berkeley DB open in SASLDB plugin?])\nfi\nAC_MSG_CHECKING(if Berkeley DB handle is kept open in SASLDB)\nAC_MSG_RESULT($keep_db_open)\n\nAC_CHECK_LIB(dl, dlopen, SASL_DL_LIB=\"-ldl\", SASL_DL_LIB=\"\")\nAC_SUBST(SASL_DL_LIB)\n\ndnl /dev/random ?\n\nAC_ARG_WITH(devrandom, [  --with-devrandom=PATH   set the path to /dev/random [[/dev/random]] ],\n  devrandom=$withval,\n  devrandom=/dev/random)\nAC_MSG_CHECKING(/dev/random to use)\nAC_MSG_RESULT($devrandom)\nAC_DEFINE_UNQUOTED(SASL_DEV_RANDOM, \"$devrandom\", [File to use for source of randomness])\n\ndnl Do we need leading underscores on our symbols?\n\nAC_CHECK_PROGS(NM, nm)\n\nAC_MSG_CHECKING(for underscore before symbols)\nAC_CACHE_VAL(sasl_cv_uscore,[\n    echo \"main(){int i=1;}\n    foo(){int i=6;}\" > conftest.c\n    ${CC} -o a.out conftest.c > /dev/null\n    if (${NM} a.out | grep _foo) > /dev/null; then\n      sasl_cv_uscore=yes\n    else\n      sasl_cv_uscore=no\n    fi])\nAC_MSG_RESULT($sasl_cv_uscore)\nrm -f conftest.c a.out\n\nif test $sasl_cv_uscore = yes; then\n  if test $ac_cv_lib_dl_dlopen = yes ; then\n\tAC_MSG_CHECKING(whether dlsym adds the underscore for us)\n\tcmu_save_LIBS=\"$LIBS\"\n\tLIBS=\"$LIBS $SASL_DL_LIB\"\n\tAC_CACHE_VAL(sasl_cv_dlsym_adds_uscore,AC_TRY_RUN( [\n#include <dlfcn.h>\n#include <stdio.h>\nfoo() { int i=0;}\nmain() { void *self, *ptr1, *ptr2; self=dlopen(NULL,RTLD_LAZY);\n    if(self) { ptr1=dlsym(self,\"foo\"); ptr2=dlsym(self,\"_foo\");\n    if(ptr1 && !ptr2) exit(0); } exit(1); } \n], [sasl_cv_dlsym_adds_uscore=yes], sasl_cv_dlsym_adds_uscore=no\n\tAC_DEFINE(DLSYM_NEEDS_UNDERSCORE, [], [Do we need a leading _ for dlsym?]),\n\tAC_MSG_WARN(cross-compiler, we'll do our best)))\n\tLIBS=\"$cmu_save_LIBS\"\n      AC_MSG_RESULT($sasl_cv_dlsym_adds_uscore)\n  fi\nfi\n\ndnl See if we can provide a default logging function...\nAC_CHECK_FUNCS(syslog)\n\nAC_ARG_WITH(pam, [  --with-pam=DIR          use PAM (rooted in DIR) [[yes]] ],\n\twith_pam=$withval,\n\twith_pam=yes)\nif test \"$with_pam\" != no; then\n  if test -d $with_pam; then\n    CPPFLAGS=\"$CPPFLAGS -I${with_pam}/include\"\n    LDFLAGS=\"$LDFLAGS -L${with_pam}/lib\"\n  fi\n  AC_CHECK_HEADERS(security/pam_appl.h pam/pam_appl.h)\n  cmu_save_LIBS=\"$LIBS\"\n  AC_CHECK_FUNC(pam_start, :,\n\tLIBS=\"-lpam $LIBS\"\n\tAC_TRY_LINK([[\n#include <sys/types.h>\n#ifdef HAVE_PAM_PAM_APPL_H\n#include <pam/pam_appl.h>\n#endif\n#ifdef HAVE_SECURITY_PAM_H\n#include <security/pam_appl.h>\n#endif]],[[\nconst char *service=\"foo\";\nconst char *user=\"bar\";\npam_handle_t *pamh;\nstruct pam_conv *conv;\nint baz;\nbaz = pam_start(service, user, conv, &pamh);\nreturn 0;\n]], LIBPAM=\"-lpam\")\n)\n  LIBS=\"$cmu_save_LIBS $LIBPAM\"\nfi\n\nAC_ARG_WITH(saslauthd, [  --with-saslauthd=DIR    enable use of the saslauth daemon using state dir DIR ],\n\t\twith_saslauthd=$withval,\n\t\twith_saslauthd=yes)\nif test \"$with_saslauthd\" != no; then\n  if test \"$with_saslauthd\" = yes; then\n    with_saslauthd=\"/var/state/saslauthd\"\n  fi\n  AC_DEFINE(HAVE_SASLAUTHD,[],[Include support for saslauthd?])\n  AC_DEFINE_UNQUOTED(PATH_SASLAUTHD_RUNDIR, \"$with_saslauthd\",\n\t\t     [Where do we look for saslauthd's socket?])\nfi\nAM_CONDITIONAL(SASLAUTHD, test \"$with_saslauthd\" != no)\nAC_MSG_CHECKING(if I should include saslauthd)\nAC_MSG_RESULT($with_saslauthd)\n\nAC_ARG_WITH(authdaemond, [  --with-authdaemond=PATH enable use of authdaemon with default socket=PATH [[yes]] ],\n\t\twith_authdaemon=$withval,\n\t\twith_authdaemon=yes)\nif test \"$with_authdaemon\" != no; then\n  if test \"$with_authdaemon\" = yes; then\n    with_authdaemon=\"/dev/null\"\n  fi\n  AC_DEFINE(HAVE_AUTHDAEMON,[],[Include support for Courier's authdaemond?])\n  AC_DEFINE_UNQUOTED(PATH_AUTHDAEMON_SOCKET, \"$with_authdaemon\",\n\t\t     [Where do we look for Courier authdaemond's socket?])\nfi\nAC_MSG_CHECKING(to include Courier authdaemond support)\nAC_MSG_RESULT($with_authdaemon)\n\nAC_ARG_WITH(pwcheck,\n[  --with-pwcheck=DIR     enable deprecated pwcheck daemon using statedir DIR ],\n\twith_pwcheck=$withval,\n\twith_pwcheck=no)\nif test \"$with_pwcheck\" != no; then\n   if test \"$with_pwcheck\" = yes; then\n     with_pwcheck=/var/pwcheck\n   fi\n   AC_DEFINE(HAVE_PWCHECK,[],[Include Support for pwcheck daemon?])\n   AC_DEFINE_UNQUOTED(PWCHECKDIR, \"$with_pwcheck\", [Location of pwcheck socket])\n   AC_CHECK_FUNC(getspnam,PWCHECKMETH=\"getspnam\",PWCHECKMETH=\"getpwnam\")\n   AC_SUBST(PWCHECKMETH)\nfi\nAM_CONDITIONAL(PWCHECK, test \"$with_pwcheck\" != no)\nAC_MSG_CHECKING(if I should include pwcheck)\nAC_MSG_RESULT($with_pwcheck)\n\nAC_ARG_WITH(ipctype, [  --with-ipctype={unix,doors}    use ipctype [[unix]] ],\n       with_ipctype=$withval,\n       with_ipctype=\"unix\")\nIPCTYPE=$with_ipctype\nAC_SUBST(IPCTYPE)\nLIB_DOOR=\nif test \"$with_ipctype\" = \"doors\"; then\n   LIB_DOOR=\"-ldoor\"\n   AC_DEFINE(USE_DOORS,[],[use the doors IPC API for saslauthd?])\nfi\nAC_SUBST(LIB_DOOR)\n\nAC_ARG_ENABLE(alwaystrue, [  --enable-alwaystrue     enable the alwaystrue password verifier (discouraged)],\n\t\tenable_alwaystrue=$enableval,\n\t\tenable_alwaystrue=no)\nif test \"$enable_alwaystrue\" = yes; then\n  AC_DEFINE(HAVE_ALWAYSTRUE, [], [Enable 'alwaystrue' password verifier?])\nfi\nAC_MSG_CHECKING(if I should include the alwaystrue verifier)\nAC_MSG_RESULT($enable_alwaystrue)\n\ndnl sasl_checkapop support\nAC_ARG_ENABLE(checkapop, [  --enable-checkapop      enable use of sasl_checkapop [[yes]] ],\n  checkapop=$enableval,\n  checkapop=yes)\n\nAC_MSG_CHECKING(if we should enable sasl_checkapop)\nif test \"$checkapop\" != no; then\n  AC_MSG_RESULT(enabled)\n  AC_DEFINE(DO_SASL_CHECKAPOP, [], [should we support sasl_checkapop?])\nelse\n  AC_MSG_RESULT(disabled)\nfi\n\ndnl CRAM-MD5\nAC_ARG_ENABLE(cram, [  --enable-cram           enable CRAM-MD5 authentication [[yes]] ],\n  cram=$enableval,\n  cram=yes)\n\nAC_MSG_CHECKING(CRAM-MD5)\nif test \"$cram\" != no; then\n  AC_MSG_RESULT(enabled)\n  SASL_MECHS=\"$SASL_MECHS libcrammd5.la\"\n  if test \"$enable_obsolete_cram_attr\" = yes; then\n    CPPFLAGS=\"$CPPFLAGS -DOBSOLETE_CRAM_ATTR=1\"\n  fi\n  if test \"$enable_static\" = yes; then\n    SASL_STATIC_OBJS=\"$SASL_STATIC_OBJS cram.o\"\n    SASL_STATIC_SRCS=\"$SASL_STATIC_SRCS \\$(top_srcdir)/plugins/cram.c\"\n    AC_DEFINE(STATIC_CRAMMD5, [], [Link CRAM-MD5 Statically])\n  fi\nelse\n  AC_MSG_RESULT(disabled)\nfi\n\nCMU_HAVE_OPENSSL\nAC_MSG_CHECKING(for OpenSSL)\nAC_MSG_RESULT($with_openssl)\n\nSASL_DES_CHK\n\ndnl DIGEST-MD5\nAC_ARG_ENABLE(digest, [  --enable-digest         enable DIGEST-MD5 authentication [[yes]] ],\n  digest=$enableval,\n  digest=yes)\n\nif test \"$digest\" != no; then\n  dnl In order to compile digest, we should look for need libdes.\n  if test -d $digest; then\n    CPPFLAGS=\"$CPPFLAGS -I$digest/include\"\n    LDFLAGS=\"$LDFLAGS -L$digest/lib\"\n  fi\n  if test \"$with_des\" = no; then\n    AC_WARN(No DES support for DIGEST-MD5)\n  fi\nfi\n\nAC_MSG_CHECKING(DIGEST-MD5)\nif test \"$digest\" != no; then\n  AC_MSG_RESULT(enabled)\n  SASL_MECHS=\"$SASL_MECHS libdigestmd5.la\"\n  if test \"$enable_static\" = yes; then\n    SASL_STATIC_SRCS=\"$SASL_STATIC_SRCS \\$(top_srcdir)/plugins/digestmd5.c\"\n    SASL_STATIC_OBJS=\"$SASL_STATIC_OBJS digestmd5.o\"\n    AC_DEFINE(STATIC_DIGESTMD5, [], [Link DIGEST-MD5 Statically])\n  fi\nelse\n  AC_MSG_RESULT(disabled)\nfi\n\ndnl SCRAM\nAC_ARG_ENABLE(scram, [  --enable-scram            enable SCRAM authentication [[yes]] ],\n  scram=$enableval,\n  scram=yes)\n\nif test \"$with_openssl\" = no; then\n  AC_WARN([OpenSSL not found -- SCRAM will be disabled])\n  scram=no\nfi\n\nAC_MSG_CHECKING(SCRAM)\nif test \"$scram\" != no; then\n  AC_MSG_RESULT(enabled)\n  SCRAM_LIBS=\"-lcrypto $LIB_RSAREF\"\n\n  SASL_MECHS=\"$SASL_MECHS libscram.la\"\n  if test \"$enable_static\" = yes; then\n    SASL_STATIC_SRCS=\"$SASL_STATIC_SRCS \\$(top_srcdir)/plugins/scram.c\"\n    SASL_STATIC_OBJS=\"$SASL_STATIC_OBJS scram.o\"\n    AC_DEFINE(STATIC_SCRAM, [], [Link SCRAM Statically])\n  fi\n\n  AC_SUBST(SCRAM_LIBS)\nelse\n  AC_MSG_RESULT(disabled)\nfi\n\ndnl OTP\nAC_ARG_ENABLE(otp, [  --enable-otp            enable OTP authentication [[yes]] ],\n  otp=$enableval,\n  otp=yes)\n\nif test \"$with_openssl\" = no; then\n  AC_WARN([OpenSSL not found -- OTP will be disabled])\n  otp=no\nfi\n\nAC_MSG_CHECKING(OTP)\nif test \"$otp\" != no; then\n  AC_MSG_RESULT(enabled)\n  OTP_LIBS=\"-lcrypto $LIB_RSAREF\"\n\n  SASL_MECHS=\"$SASL_MECHS libotp.la\"\n  if test \"$enable_static\" = yes; then\n    SASL_STATIC_SRCS=\"$SASL_STATIC_SRCS \\$(top_srcdir)/plugins/otp.c\"\n    SASL_STATIC_OBJS=\"$SASL_STATIC_OBJS otp.o\"\n    AC_DEFINE(STATIC_OTP, [], [Link OTP Statically])\n  fi\n\n  dnl Test for OPIE\n  AC_ARG_WITH(with-opie,[  --with-opie=PATH        use OPIE (One Time Passwords in Everything) from PATH],\n\twith_opie=\"${withval}\")\n\n  case \"$with_opie\" in\n\t\"\"|yes) \n\t\tAC_CHECK_LIB(opie, opiechallenge, [\n\t\t\tAC_CHECK_HEADER(opie.h, with_opie=\"yes\",\n\t\t\t\t\twith_opie=\"no\")],\n\t\t\twith_opie=\"no\")\n\t\t;;\n\t*)\n\t\tif test -d $with_opie; then\n\t\t  CPPFLAGS=\"${CPPFLAGS} -I${with_opie}/include\"\n\t\t  LDFLAGS=\"${LDFLAGS} -L${with_opie}/lib\"\n\t\telse\n\t\t  with_opie=\"no\"\n\t\tfi\n\t\t;;\n  esac\n\n  AC_MSG_CHECKING(for OPIE)\n  AC_MSG_RESULT($with_opie)\n\n  if test \"$with_opie\" != no; then\n    AC_DEFINE(HAVE_OPIE,[],[Use OPIE for server-side OTP?])\n    OTP_LIBS=\"$OTP_LIBS -lopie\"\n  fi\n\n  AC_SUBST(OTP_LIBS)\n\nelse\n  AC_MSG_RESULT(disabled)\nfi\n\ndnl SRP\nAC_ARG_ENABLE(srp, [  --enable-srp            enable SRP authentication [[no]] ],\n  srp=$enableval,\n  srp=no)\n\nif test \"$with_openssl\" = no; then\n  AC_WARN([OpenSSL not found -- SRP will be disabled])\n  srp=no\nfi\n\nAC_MSG_CHECKING(SRP)\nif test \"$srp\" != no; then\n  AC_MSG_RESULT(enabled)\n  SRP_LIBS=\"-lcrypto $LIB_RSAREF\"\n\n  SASL_MECHS=\"$SASL_MECHS libsrp.la\"\n  if test \"$enable_static\" = yes; then\n    SASL_STATIC_SRCS=\"$SASL_STATIC_SRCS \\$(top_srcdir)/plugins/srp.c\"\n    SASL_STATIC_OBJS=\"$SASL_STATIC_OBJS srp.o\"\n    AC_DEFINE(STATIC_SRP, [], [Link SRP Statically])\n  fi\n\ndnl srp_setpass support\n  AC_ARG_ENABLE(srp_setpass, [  --enable-srp-setpass    enable setting SRP secrets with saslpasswd [[no]]],\n      srp_setpass=$enableval,\n      srp_setpass=no)\n\n  AC_MSG_CHECKING(if we should enable setting SRP secrets with saslpasswd)\n  if test \"$srp_setpass\" != no; then\n    AC_MSG_RESULT(enabled)\n    AC_DEFINE(DO_SRP_SETPASS, [], [should we support setpass() for SRP?])\n  else\n    AC_MSG_RESULT(disabled)\n  fi\n\n  AC_SUBST(SRP_LIBS)\nelse\n  AC_MSG_RESULT(disabled)\nfi\n\ndnl Kerberos based Mechanisms\nSASL_KERBEROS_V4_CHK\nSASL_GSSAPI_CHK\n\nif test \"$gssapi\" != \"no\"; then\n  AC_DEFINE(STATIC_GSSAPIV2,[],[Link GSSAPI Statically])\n  mutex_default=\"no\"\n  if test \"$gss_impl\" = \"mit\"; then\n     mutex_default=\"yes\"\n  fi\n  AC_MSG_CHECKING(to use mutexes aroung GSS calls)\n  AC_ARG_ENABLE(gss_mutexes, [  --enable-gss_mutexes     use mutexes around calls to the GSS library],\n                use_gss_mutexes=$enableval,\n                use_gss_mutexes=$mutex_default)\n  if test $use_gss_mutexes = \"yes\"; then\n     AC_DEFINE(GSS_USE_MUTEXES, [], [should we mutex-wrap calls into the GSS library?])\n  fi\n  AC_MSG_RESULT($use_gss_mutexes)\nfi\n\ndnl PLAIN\nSASL_PLAIN_CHK\n\ndnl ANONYMOUS\nAC_ARG_ENABLE(anon, [  --enable-anon           enable ANONYMOUS authentication [[yes]] ],\n  anon=$enableval,\n  anon=yes)\n\nAC_MSG_CHECKING(ANONYMOUS)\nif test \"$anon\" != no; then\n  AC_MSG_RESULT(enabled)\n  SASL_MECHS=\"$SASL_MECHS libanonymous.la\"\n  if test \"$enable_static\" = yes; then\n    SASL_STATIC_OBJS=\"$SASL_STATIC_OBJS anonymous.o\"\n    SASL_STATIC_SRCS=\"$SASL_STATIC_SRCS \\$(top_srcdir)/plugins/anonymous.c\"\n    AC_DEFINE(STATIC_ANONYMOUS, [], [Link ANONYMOUS Statically])\n  fi\nelse\n  AC_MSG_RESULT(disabled)\nfi\n\ndnl LOGIN\nAC_ARG_ENABLE(login, [  --enable-login          enable unsupported LOGIN authentication [[no]] ],\n  login=$enableval,\n  login=no)\n\nAC_MSG_CHECKING(LOGIN)\nif test \"$login\" != no; then\n  AC_MSG_RESULT(enabled)\n  SASL_MECHS=\"$SASL_MECHS liblogin.la\"\n  if test \"$enable_static\" = yes; then\n    SASL_STATIC_SRCS=\"$SASL_STATIC_SRCS \\$(top_srcdir)/plugins/login.c\"\n    SASL_STATIC_OBJS=\"$SASL_STATIC_OBJS login.o\"\n    AC_DEFINE(STATIC_LOGIN,[],[Link LOGIN Statically])\n  fi\nelse\n  AC_MSG_RESULT(disabled)\nfi\n\ndnl NTLM\nAC_ARG_ENABLE(ntlm, [  --enable-ntlm           enable unsupported NTLM authentication [[no]] ],\n  ntlm=$enableval,\n  ntlm=no)\n\nif test \"$with_openssl\" = no; then\n  AC_WARN([OpenSSL not found -- NTLM will be disabled])\n  ntlm=no\nfi\n\nAC_MSG_CHECKING(NTLM)\nif test \"$ntlm\" != no; then\n  AC_MSG_RESULT(enabled)\n  NTLM_LIBS=\"-lcrypto $LIB_RSAREF\"\n  AC_SUBST(NTLM_LIBS)\n\n  SASL_MECHS=\"$SASL_MECHS libntlm.la\"\n  if test \"$enable_static\" = yes; then\n    SASL_STATIC_SRCS=\"$SASL_STATIC_SRCS \\$(top_srcdir)/plugins/ntlm.c\"\n    SASL_STATIC_OBJS=\"$SASL_STATIC_OBJS ntlm.o\"\n    AC_DEFINE(STATIC_NTLM,[],[Link NTLM Statically])\n  fi\nelse\n  AC_MSG_RESULT(disabled)\nfi\n\ndnl PASSDSS\nAC_ARG_ENABLE(passdss, [  --enable-passdss        enable PASSDSS authentication (experimental) [[no]] ],\n  passdss=$enableval,\n  passdss=no)\n\nif test \"$with_openssl\" = no; then\n  AC_WARN([OpenSSL not found -- PASSDSS will be disabled])\n  passdss=no\nfi\n\nAC_MSG_CHECKING(PASSDSS)\nif test \"$passdss\" != no; then\n  AC_MSG_RESULT(enabled)\n  PASSDSS_LIBS=\"-lcrypto $LIB_RSAREF\"\n  AC_SUBST(PASSDSS_LIBS)\n\n  SASL_MECHS=\"$SASL_MECHS libpassdss.la\"\n  if test \"$enable_static\" = yes; then\n    SASL_STATIC_OBJS=\"$SASL_STATIC_OBJS passdss.o\"\n    SASL_STATIC_SRCS=\"$SASL_STATIC_SRCS \\$(top_srcdir)/plugins/passdss.c\"\n    AC_DEFINE(STATIC_PASSDSS,[],[Link PASSDSS Statically])\n  fi\nelse\n  AC_MSG_RESULT(disabled)\nfi\n\n\n# make the option show up so people don't whine that it is only in the\n# saslauthd configure script --help\nAC_ARG_WITH(ldap,   [  --with-ldap=DIR         use LDAP (in DIR) for saslauthd [no] ],,with_ldap=no)\n\n\ndnl SQL\ndnl This flag also changes the requirements of --with-mysql and --with-pgsql\ndnl\ndnl Desired behavior:\ndnl\ndnl doesn't require mysql or postgres if --disable-sql is chosen\ndnl requires at least one (but not both) if --enable-sql is chosen\n\nAC_ARG_ENABLE(sql, [  --enable-sql            enable SQL auxprop [[no]] ],\n  sql=$enableval,\n  sql=no)\n\nAC_MSG_CHECKING(SQL)\nif test \"$sql\" != no; then\n  AC_MSG_RESULT(enabled)\n  SASL_MECHS=\"$SASL_MECHS libsql.la\"\n  if test \"$enable_static\" = yes; then\n    SASL_STATIC_SRCS=\"$SASL_STATIC_SRCS \\$(top_srcdir)/plugins/sql.c\"\n    SASL_STATIC_OBJS=\"$SASL_STATIC_OBJS sql.o\"\n    AC_DEFINE(STATIC_SQL,[],[Link SQL plugin statically])\n  fi\nelse\n  AC_MSG_RESULT(disabled)\nfi\n\ndnl MySQL\nAC_ARG_WITH(mysql,  [  --with-mysql=PATH       use MySQL from PATH ],\n  with_mysql=$withval,\n  with_mysql=$sql)\n\n# find location of library \n# presuming if one given then correct\nif test \"${with_mysql}\" = \"yes\"; then\n  with_mysql=notfound\n  for mysqlloc in lib/mysql lib mysql/lib\n  do\n    if test -f ${prefix}/${mysqlloc}/libmysqlclient.a; then\n      with_mysql=\"${prefix}\"\n      break\n    elif test -f /usr/local/${mysqlloc}/libmysqlclient.a; then\n      with_mysql=\"/usr/local\"\n      break\n    elif test -f /usr/${mysqlloc}/libmysqlclient.a; then\n      with_mysql=\"/usr\"\n      break\n    fi\n  done\nfi\n\nLIB_MYSQL=\"\"\n\ncase \"$with_mysql\" in\n    no) true;;\n    notfound) AC_WARN([MySQL Library not found]); true;;\n    *)\n     if test -d ${with_mysql}/lib/mysql; then\n\tCMU_ADD_LIBPATH_TO(${with_mysql}/lib/mysql, LIB_MYSQL)\n     elif test -d ${with_mysql}/mysql/lib; then\n\tCMU_ADD_LIBPATH_TO(${with_mysql}/mysql/lib, LIB_MYSQL)\n     elif test -d ${with_mysql}/lib; then\n\tCMU_ADD_LIBPATH_TO(${with_mysql}/lib, LIB_MYSQL)\n     else\n\tCMU_ADD_LIBPATH_TO(${with_mysql}, LIB_MYSQL)\n     fi\n\n     LIB_MYSQL_DIR=$LIB_MYSQL\n     LIB_MYSQL=\"$LIB_MYSQL -lmysqlclient\"\n\n     if test -d ${with_mysql}/include/mysql; then\n         CPPFLAGS=\"${CPPFLAGS} -I${with_mysql}/include/mysql\"\n     elif test -d ${with_mysql}/mysql/include; then\n         CPPFLAGS=\"${CPPFLAGS} -I${with_mysql}/mysql/include\"\n     elif test -d ${with_mysql}/include; then\n         CPPFLAGS=\"${CPPFLAGS} -I${with_mysql}/include\"\n     else\n         CPPFLAGS=\"${CPPFLAGS} -I${with_mysql}\"\n     fi\n\n       save_LDFLAGS=$LDFLAGS\n       LDFLAGS=\"$LDFLAGS $LIB_MYSQL_DIR\"\n       AC_CHECK_LIB(mysqlclient, mysql_select_db,\n\t   AC_DEFINE(HAVE_MYSQL, [], [Do we have mysql support?]),\n           [AC_WARN([MySQL library mysqlclient does not work])\n\t    with_mysql=no])\n       LDFLAGS=$save_LDFLAGS;;\n         \nesac\nAC_SUBST(LIB_MYSQL)\n\ndnl PgSQL\nAC_ARG_WITH(pgsql,  [  --with-pgsql=PATH       use PostgreSQL from PATH ],\n  with_pgsql=$withval,\n  with_pgsql=$sql)\n\n# find location of library \n# presuing if one given then correct\nif test \"${with_pgsql}\" = \"yes\"; then\n  with_pgsql=notfound\n  for pgsqlloc in lib/pgsql lib pgsql/lib\n  do\n    if test -f ${prefix}/${pgsqlloc}/libpq.a; then\n      with_pgsql=\"${prefix}\"\n      break\n    elif test -f /usr/local/${pgsqlloc}/libpq.a; then\n      with_pgsql=\"/usr/local\"\n      break\n    elif test -f /usr/${pgsqlloc}/libpq.a; then\n      with_pgsql=\"/usr\"\n      break\n    fi\n  done\nfi\n\nLIB_PGSQL=\"\"\n\ncase \"$with_pgsql\" in\n    no) true;;\n    notfound) AC_WARN([PostgreSQL Library not found]); true;;\n    *)\n     if test -d ${with_pgsql}/lib/pgsql; then\n\tCMU_ADD_LIBPATH_TO(${with_pgsql}/lib/pgsql, LIB_PGSQL)\n     elif test -d ${with_pgsql}/pgsql/lib; then\n\tCMU_ADD_LIBPATH_TO(${with_pgsql}/pgsql/lib, LIB_PGSQL)\n     elif test -d ${with_pgsql}/lib; then\n\tCMU_ADD_LIBPATH_TO(${with_pgsql}/lib, LIB_PGSQL)\n     else\n\tCMU_ADD_LIBPATH_TO(${with_pgsql}, LIB_PGSQL)\n     fi\n\n     LIB_PGSQL_DIR=$LIB_PGSQL\n     LIB_PGSQL=\"$LIB_PGSQL -lpq\"\n\n     if test -d ${with_pgsql}/include/pgsql; then\n         CPPFLAGS=\"${CPPFLAGS} -I${with_pgsql}/include/pgsql\"\n     elif test -d ${with_pgsql}/pgsql/include; then\n         CPPFLAGS=\"${CPPFLAGS} -I${with_pgsql}/pgsql/include\"\n     elif test -d ${with_pgsql}/include; then\n         CPPFLAGS=\"${CPPFLAGS} -I${with_pgsql}/include\"\n     else\n         CPPFLAGS=\"${CPPFLAGS} -I${with_pgsql}\"\n     fi\n\n\n       save_LDFLAGS=$LDFLAGS\n       LDFLAGS=\"$LDFLAGS $LIB_PGSQL_DIR\"\n       AC_CHECK_LIB(pq, PQsetdbLogin, AC_DEFINE(HAVE_PGSQL,[],\n\t   [Do we have Postgres support?]),\n           [AC_WARN([PostgreSQL Library pq does not work])\n\t    with_pgsql=no])\n       LDFLAGS=$save_LDFLAGS;;\n         \nesac\nAC_SUBST(LIB_PGSQL)\n\ndnl SQLite\nAC_ARG_WITH(sqlite,  [  --with-sqlite=PATH       use SQLite from PATH ],\n  with_sqlite=$withval,\n  with_sqlite=$sql)\n\n# find location of library\n# presuing if one given then correct\nif test \"${with_sqlite}\" = \"yes\"; then\n  with_sqlite=notfound\n  for sqliteloc in lib\n  do\n    if test -f ${prefix}/${sqliteloc}/libsqlite.a; then\n      with_sqlite=\"${prefix}\"\n      break\n    elif test -f /usr/local/${sqliteloc}/libsqlite.a; then\n      with_sqlite=\"/usr/local\"\n      break\n    elif test -f /usr/${sqliteloc}/libsqlite.a; then\n      with_sqlite=\"/usr\"\n      break\n    fi\n  done\nfi\n\nLIB_SQLITE=\"\"\n\ncase \"$with_sqlite\" in\n    no) true;;\n    notfound) AC_WARN([SQLite Library not found]); true;;\n    *)\n     if test -d ${with_sqlite}/lib; then\n         LIB_SQLITE=\"-L${with_sqlite}/lib -R${with_sqlite}/lib\"\n     else\n         LIB_SQLITE=\"-L${with_sqlite} -R${with_sqlite}\"\n     fi\n\n     LIB_SQLITE_DIR=$LIB_SQLITE\n     LIB_SQLITE=\"$LIB_SQLITE -lsqlite\"\n\n     if test -d ${with_sqlite}/include; then\n         CPPFLAGS=\"${CPPFLAGS} -I${with_sqlite}/include\"\n     else\n         CPPFLAGS=\"${CPPFLAGS} -I${with_sqlite}\"\n     fi\n       AC_CHECK_LIB(sqlite, sqlite_open, AC_DEFINE(HAVE_SQLITE,[],\n\t   [Do we have SQLite support?]),\n           [AC_WARN([SQLite Library sqlite does not work])\n\t    with_sqlite=no], $LIB_SQLITE_DIR);;\n\nesac\nAC_SUBST(LIB_SQLITE)\n\ndnl SQLite3\nAC_ARG_WITH(sqlite3,  [  --with-sqlite3=PATH       use SQLite3 from PATH ],\n  with_sqlite3=$withval,\n  with_sqlite3=$sql)\n\n# find location of library\n# we assume that if one given then it is correct\nif test \"${with_sqlite3}\" = \"yes\"; then\n  with_sqlite3=notfound\n  for sqlite3loc in lib\n  do\n    if test -f ${prefix}/${sqlite3loc}/libsqlite3.a; then\n      with_sqlite3=\"${prefix}\"\n      break\n    elif test -f /usr/local/${sqlite3loc}/libsqlite3.a; then\n      with_sqlite3=\"/usr/local\"\n      break\n    elif test -f /usr/${sqlite3loc}/libsqlite3.a; then\n      with_sqlite3=\"/usr\"\n      break\n    fi\n  done\nfi\n\nLIB_SQLITE3=\"\"\n\ncase \"$with_sqlite3\" in\n    no) true;;\n    notfound) AC_WARN([SQLite3 Library not found]); true;;\n    *)\n     if test -d ${with_sqlite3}/lib; then\n         LIB_SQLITE3=\"-L${with_sqlite3}/lib -R${with_sqlite3}/lib\"\n     else\n         LIB_SQLITE3=\"-L${with_sqlite3} -R${with_sqlite3}\"\n     fi\n\n     LIB_SQLITE3_DIR=$LIB_SQLITE3\n     LIB_SQLITE3=\"$LIB_SQLITE3 -lsqlite3\"\n\n     if test -d ${with_sqlite3}/include; then\n         CPPFLAGS=\"${CPPFLAGS} -I${with_sqlite3}/include\"\n     else\n         CPPFLAGS=\"${CPPFLAGS} -I${with_sqlite3}\"\n     fi\n       AC_CHECK_LIB(sqlite3, sqlite3_open, AC_DEFINE(HAVE_SQLITE3,[],\n\t   [Do we have SQLite3 support?]),\n           [AC_WARN([SQLite3 Library sqlite3 does not work])\n\t    with_sqlite3=no], $LIB_SQLITE3_DIR);;\n\nesac\nAC_SUBST(LIB_SQLITE3)\n\nif test \"$sql\" = yes -a \"$with_pgsql\" = no -a \"$with_mysql\" = no -a \"$with_sqlite\" = no -a \"$with_sqlite3\" = no; then\n    AC_ERROR([--enable-sql chosen but neither Postgres nor MySQL nor SQLite nor SQLite3 found])\nfi\n\nif test \"$enable_shared\" = yes; then\n\tAC_DEFINE(DO_DLOPEN,[],[Should we build a shared plugin (via dlopen) library?])\nfi\n\ndnl LDAPDB\nAC_ARG_ENABLE(ldapdb, [  --enable-ldapdb         enable LDAPDB plugin [no] ],\n  ldapdb=$enableval,\n  ldapdb=no)\nAC_MSG_CHECKING(LDAPDB)\nif test \"$ldapdb\" != no; then\n    AC_MSG_RESULT(enabled)\n\n    if test \"$with_ldap\" = no; then\n        AC_MSG_ERROR([Cannot enable LDAPDB plugin: You need to specify --with-ldap])\n    fi\n\n    save_CPPFLAGS=$CPPFLAGS\n    save_LDFLAGS=$LDFLAGS\n\n    if test -d $with_ldap; then\n        CPPFLAGS=\"${CPPFLAGS} -I${with_ldap}/include\"\n        CMU_ADD_LIBPATH(${with_ldap}/lib)\n    fi\n\n    AC_CHECK_HEADERS(ldap.h lber.h)\n\n    if test $ac_cv_header_ldap_h = yes -a $ac_cv_header_lber_h = yes; then\n        CMU_OPENLDAP_API\n\n        if test \"$cmu_cv_openldap_api\" = yes; then\n            AC_CHECK_LIB(ldap, ldap_initialize, [ cmu_link_openldap=\"-lldap -llber\" ], [ cmu_link_openldap=no ],-llber)\n        fi\n    fi\n\n    if test \"$cmu_cv_openldap_api\" = no -o \"$cmu_link_openldap\" = no; then\n        AC_MSG_ERROR([Cannot enable LDAPDB plugin: Could not locate OpenLDAP])\n    else\n        CMU_OPENLDAP_COMPAT\n\n        if test \"$cmu_cv_openldap_compat\" = no; then\n            AC_MSG_ERROR([Cannot enable LDAPDB plugin: OpenLDAP library located but incompatible])\n        else\n            LIB_LDAP=$cmu_link_openldap\n            AC_SUBST(LIB_LDAP)\n\n            SASL_MECHS=\"$SASL_MECHS libldapdb.la\"\n            if test \"$enable_static\" = yes; then\n                SASL_STATIC_SRCS=\"$SASL_STATIC_SRCS \\$(top_srcdir)/plugins/ldapdb.c\"\n                SASL_STATIC_OBJS=\"$SASL_STATIC_OBJS ldapdb.o\"\n                AC_DEFINE(STATIC_LDAPDB,[],[Link ldapdb plugin Statically])\n            fi\n        fi\n    fi\n\n    if test \"$cmu_cv_openldap_compat\" != yes; then\n        CPPFLAGS=$save_CPPFLAGS\n        LDFLAGS=$save_LDFLAGS\n    fi\nelse\n    AC_MSG_RESULT(disabled)\nfi\n\nAC_SUBST(SASL_MECHS)\nAC_SUBST(SASL_STATIC_SRCS)\nAC_SUBST(SASL_STATIC_OBJS)\nAC_SUBST(SASL_STATIC_LIBS)\n\nAC_ARG_WITH(plugindir, [  --with-plugindir=DIR    set the directory where plugins will\n                          be found [[/usr/lib/sasl2]] ],\n  plugindir=$withval,\n  plugindir=/usr/lib/sasl2)\nAC_DEFINE_UNQUOTED(PLUGINDIR, \"$plugindir\", [Runtime plugin location])\nAC_SUBST(plugindir)\n\nAC_ARG_WITH(configdir, [   --with-configdir=DIR    set the directory where config files will\n                          be found [/usr/lib/sasl2] ],\n  configdir=$withval,\n  configdir=$plugindir:/etc/sasl2)\nAC_DEFINE_UNQUOTED(CONFIGDIR, \"$configdir\", [Runtime config file location])\nAC_SUBST(configdir)\n\ndnl look for rc4 libraries. we accept the CMU one or one from openSSL\nAC_ARG_WITH(rc4, [  --with-rc4              use internal rc4 routines [[yes]] ],\n\twith_rc4=$withval,\n\twith_rc4=yes)\n\nif test \"$with_rc4\" != no; then\n    AC_DEFINE(WITH_RC4,[],[Use internal RC4 implementation?])\nfi\n\nbuilding_for_macosx=no\ncase \"$host_os\" in\n        darwin*)\nAC_ARG_ENABLE(macos-framework, [  --disable-macos-framework       disable building and installing replacement SASL2 Framework for MacOS X-provided SASL Framework [[no]]],building_for_macosx=no,building_for_macosx=yes)\n        ;;\nesac\nAM_CONDITIONAL(MACOSX, test \"$building_for_macosx\" = yes)\n\ndnl dmalloc tests\nAC_MSG_CHECKING(for dmalloc library)\nAC_ARG_WITH(dmalloc, [  --with-dmalloc=DIR      with DMALLOC support (for test applications) [[no]] ],\n\twith_dmalloc=$withval,\n\twith_dmalloc=no)\n\nDMALLOC_LIBS=\"\"\n\nif test \"$with_dmalloc\" != \"no\"; then\n   if test \"$with_dmalloc\" = \"yes\"; then\n\twith_dmalloc=\"/usr/local\"\n   fi\n\n   if test -r \"$with_dmalloc/libdmalloc.a\"; then\n\tDMALLOC_LIBS=\"$with_dmalloc/libdmalloc.a\"\n\tAC_DEFINE(WITH_DMALLOC,[],[Linking against dmalloc?])\n\tAC_MSG_RESULT(yes)\n   elif test -r \"$with_dmalloc/lib/libdmalloc.a\"; then\n\tDMALLOC_LIBS=\"$with_dmalloc/lib/libdmalloc.a\"\n\tAC_DEFINE(WITH_DMALLOC,[],[Linking against dmalloc?])\n\tAC_MSG_RESULT(yes)\n   else\n\tAC_MSG_ERROR(cannot find dmalloc library, please check your installation.)\n   fi\nelse\n   AC_MSG_RESULT(no)\nfi\n\nAC_SUBST(DMALLOC_LIBS)\n\ndnl sfio tests\nAC_MSG_CHECKING(for sfio library)\nAC_ARG_WITH(sfio, [  --with-sfio=DIR         with SFIO support (for smtptest/libsfsasl) [[no]] ],\n\twith_sfio=$withval,\n\twith_sfio=no)\n\nif test \"$with_sfio\" != \"no\"; then\n   if test \"$with_sfio\" = \"yes\"; then\n\twith_sfio=\"/usr/local\"\n   fi\n\n   AC_DEFUN([SFIO_INC_CHK],\n\t[if test -r \"$with_sfio$1/sfio.h\"; then SFIO_DIR=$with_sfio;\n\t\t\t\t\t      SFIO_INC_DIR=$with_sfio$1])\n\n   AC_DEFUN([SFIO_LIB_CHK],[\n\t\tstr=\"$SFIO_DIR/$1/libsfio.*\"\n\t\tfor i in `echo $str`; do\n\t\t\tif test -r $i; then\n\t\t\t\tSFIO_LIBDIR=$SFIO_DIR/$1\n\t\t\t\tbreak 2\n\t\t\tfi\n\t\tdone\n\t\t])\n\n   SFIO_INC_CHK()\n   el[]SFIO_INC_CHK(/include)\n   el[]SFIO_INC_CHK(/include/sfio)\n   fi\n\n   if test -z \"$SFIO_DIR\"; then\n\tAC_MSG_ERROR(Cannot find sfio.h, Please check your SFIO installation.)\n   fi\n\n   SFIO_LIB_CHK(lib)\n   SFIO_LIB_CHK(lib/sfio)\n\n   if test -z \"$SFIO_LIBDIR\"; then\n\tAC_MSG_ERROR(Cannot find sfio library, Please check your SFIO installation.)\n   fi\n\n   SFIO_INC_FLAGS=\"-I$SFIO_INC_DIR\"\n   SFIO_LIB_FLAGS=\"-L$SFIO_LIBDIR -lsfio\"\n   SMTPTEST_PROGRAM=\"smtptest\"\n   SASL_UTIL_LIBS_EXTRA=libsfsasl2.la\n   SASL_UTIL_HEADERS_EXTRA=sfsasl.h\n\n   AC_MSG_RESULT(yes)\nelse\n   AC_MSG_RESULT(no)\n   SFIO_INC_FLAGS=\"\"\n   SFIO_LIB_FLAGS=\"\"\n   SMTPTEST_PROGRAM=\"\"\n   SASL_UTIL_LIBS_EXTRA=\"\"\n   SASL_UTIL_HEADERS_EXTRA=\"\"\nfi\n\nAC_SUBST(SFIO_INC_FLAGS)\nAC_SUBST(SFIO_LIB_FLAGS)\nAC_SUBST(SMTPTEST_PROGRAM)\nAC_SUBST(SASL_UTIL_LIBS_EXTRA)\nAC_SUBST(SASL_UTIL_HEADERS_EXTRA)\n\ndnl check for getsubopt\nsasl_cv_getsubopt=no\nAC_CHECK_FUNC(getsubopt, [AC_DEFINE(HAVE_GETSUBOPT,[],\n\t[do we have getsubopt()?])], [sasl_cv_getsubopt=yes])\nif test $sasl_cv_getsubopt = yes; then\n\tAC_LIBOBJ(getsubopt)\n\tGETSUBOPT=\"getsubopt.lo\"\nfi\nAC_SUBST(GETSUBOPT)\n\ndnl Check for snprintf\nsasl_cv_snprintf=no\nSNPRINTFOBJS=\"\"\nAC_CHECK_FUNC(snprintf, [AC_DEFINE(HAVE_SNPRINTF,[],[Does the system have snprintf()?])], [sasl_cv_snprintf=yes])\nAC_CHECK_FUNC(vsnprintf, [AC_DEFINE(HAVE_VSNPRINTF,[],[Does the system have vsnprintf()?])], [sasl_cv_snprintf=yes])\nif test $sasl_cv_snprintf = yes; then\n\tAC_LIBOBJ(snprintf)\n        SNPRINTFOBJS=\"snprintf.o\"\n        LTSNPRINTFOBJS=\"snprintf.lo\"\nfi\nAC_SUBST(SNPRINTFOBJS)\nAC_SUBST(LTSNPRINTFOBJS)\n\ndnl do we need to link in -lresolv?\nAC_CHECK_LIB(resolv, inet_aton)\n\ndnl Check for getaddrinfo\nGETADDRINFOOBJS=\"\"\nsasl_cv_getaddrinfo=yes\nIPv6_CHECK_FUNC(getaddrinfo, [IPv6_CHECK_FUNC(gai_strerror,\n                [AC_DEFINE(HAVE_GETADDRINFO,[],[Do we have a getaddrinfo() function?])\n                sasl_cv_getaddrinfo=no])])\nif test $sasl_cv_getaddrinfo = yes; then\n    AC_LIBOBJ(getaddrinfo)\n    GETADDRINFOOBJS=\"getaddrinfo.o\"\n    LTGETADDRINFOOBJS=\"getaddrinfo.lo\"\nfi\nAC_SUBST(GETADDRINFOOBJS)\nAC_SUBST(LTGETADDRINFOOBJS)\n\ndnl Check for getnameinfo\nGETNAMEINFOOBJS=\"\"\nsasl_cv_getnameinfo=no\nIPv6_CHECK_FUNC(getnameinfo,\n\t\t[AC_DEFINE(HAVE_GETNAMEINFO,[],[Do we have a getnameinfo() function?])], [sasl_cv_getnameinfo=yes])\nif test $sasl_cv_getnameinfo = yes; then\n\tAC_LIBOBJ(getnameinfo)\n        GETNAMEINFOOBJS=\"getnameinfo.o\"\n        LTGETNAMEINFOOBJS=\"getnameinfo.lo\"\nfi\nAC_SUBST(GETNAMEINFOOBJS)\nAC_SUBST(LTGETNAMEINFOOBJS)\n\nLTLIBOBJS=`echo \"$LIB@&t@OBJS\" | sed 's,\\.[[^.]]* ,.lo ,g;s,\\.[[^.]]*$,.lo,'`\nAC_SUBST(LTLIBOBJS)\n\nAC_C_CONST\nAC_C_INLINE\nAC_TYPE_MODE_T\nAC_TYPE_PID_T\nAC_TYPE_SIGNAL\n\nAC_HEADER_TIME\nAC_HEADER_STDC\nAC_HEADER_DIRENT\nAC_HEADER_SYS_WAIT\nAC_CHECK_HEADERS(des.h dlfcn.h fcntl.h limits.h malloc.h paths.h strings.h sys/file.h sys/time.h syslog.h unistd.h inttypes.h sys/uio.h sys/param.h sysexits.h stdarg.h varargs.h)\n\nIPv6_CHECK_SS_FAMILY()\nIPv6_CHECK_SA_LEN()\nIPv6_CHECK_SOCKLEN_T()\n\n#AC_FUNC_MEMCMP\n#AC_FUNC_VPRINTF\nAC_CHECK_FUNCS(gethostname getdomainname getpwnam getspnam gettimeofday inet_aton memcpy mkdir select socket strchr strdup strerror strspn strstr strtol jrand48 getpassphrase)\n\nif test $enable_cmulocal = yes; then\n    AC_WARN([enabling CMU local kludges])\n    AC_DEFINE(KRB4_IGNORE_IP_ADDRESS,[],[Ignore IP Address in Kerberos 4 tickets?])\n    AC_DEFINE_UNQUOTED(PREFER_MECH, \"KERBEROS_V4\", [Force a preferred mechanism])\nfi\n\nAC_EGREP_HEADER(sockaddr_storage, sys/socket.h, [\n\t\tAC_DEFINE(HAVE_STRUCT_SOCKADDR_STORAGE,[],[Do we have struct sockaddr_stroage?])])\n\nAC_SUBST(DIRS)\n\nAC_CONFIG_SUBDIRS(saslauthd)\n\nAH_TOP([\n/* acconfig.h - autoheader configuration input */\n/* \n * Copyright (c) 1998-2003 Carnegie Mellon University.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer. \n *\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in\n *    the documentation and/or other materials provided with the\n *    distribution.\n *\n * 3. The name \"Carnegie Mellon University\" must not be used to\n *    endorse or promote products derived from this software without\n *    prior written permission. For permission or any other legal\n *    details, please contact  \n *      Office of Technology Transfer\n *      Carnegie Mellon University\n *      5000 Forbes Avenue\n *      Pittsburgh, PA  15213-3890\n *      (412) 268-4387, fax: (412) 268-7395\n *      tech-transfer@andrew.cmu.edu\n *\n * 4. Redistributions of any form whatsoever must retain the following\n *    acknowledgment:\n *    \"This product includes software developed by Computing Services\n *     at Carnegie Mellon University (http://www.cmu.edu/computing/).\"\n *\n * CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO\n * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE\n * FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN\n * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING\n * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\n#ifndef CONFIG_H\n#define CONFIG_H\n])\n\nAH_BOTTOM([\n\n\n/* Create a struct iovec if we need one */\n#if !defined(_WIN32)\n#if !defined(HAVE_SYS_UIO_H)\n/* (win32 is handled in sasl.h) */\nstruct iovec {\n    char *iov_base;\n    long iov_len;\n};\n#else\n#include <sys/types.h>\n#include <sys/uio.h>\n#endif\n#endif\n\n/* location of the random number generator */\n#ifdef DEV_RANDOM\n#undef DEV_RANDOM\n#endif\n#define DEV_RANDOM SASL_DEV_RANDOM\n\n/* if we've got krb_get_err_txt, we might as well use it;\n   especially since krb_err_txt isn't in some newer distributions\n   (MIT Kerb for Mac 4 being a notable example). If we don't have\n   it, we fall back to the krb_err_txt array */\n#ifdef HAVE_KRB_GET_ERR_TEXT\n#define get_krb_err_txt krb_get_err_text\n#else\n#define get_krb_err_txt(X) (krb_err_txt[(X)])\n#endif\n\n/* Make Solaris happy... */\n#ifndef __EXTENSIONS__\n#define __EXTENSIONS__\n#endif\n\n/* Make Linux happy... */\n#ifndef _GNU_SOURCE\n#define _GNU_SOURCE\n#endif\n\n#ifndef HAVE___ATTRIBUTE__\n/* Can't use attributes... */\n#define __attribute__(foo)\n#endif\n\n#define SASL_PATH_ENV_VAR \"SASL_PATH\"\n#define SASL_CONF_PATH_ENV_VAR \"SASL_CONF_PATH\"\n\n#include <stdlib.h>\n#include <sys/types.h>\n#ifndef WIN32\n# include <sys/socket.h>\n# include <netdb.h>\n# include <netinet/in.h>\n# ifdef HAVE_SYS_PARAM_H\n#  include <sys/param.h>\n# endif\n#else /* WIN32 */\n# include <winsock2.h>\n#endif /* WIN32 */\n#include <string.h>\n\n#ifndef HAVE_SOCKLEN_T\ntypedef unsigned int socklen_t;\n#endif /* HAVE_SOCKLEN_T */\n\n#if !defined(HAVE_STRUCT_SOCKADDR_STORAGE) && !defined(WIN32)\n#define\t_SS_MAXSIZE\t128\t/* Implementation specific max size */\n#define\t_SS_PADSIZE\t(_SS_MAXSIZE - sizeof (struct sockaddr))\n\nstruct sockaddr_storage {\n\tstruct\tsockaddr ss_sa;\n\tchar\t\t__ss_pad2[_SS_PADSIZE];\n};\n# define ss_family ss_sa.sa_family\n#endif /* !HAVE_STRUCT_SOCKADDR_STORAGE */\n\n#ifndef AF_INET6\n/* Define it to something that should never appear */\n#define\tAF_INET6\tAF_MAX\n#endif\n\n#ifndef HAVE_GETADDRINFO\n#define\tgetaddrinfo\tsasl_getaddrinfo\n#define\tfreeaddrinfo\tsasl_freeaddrinfo\n#define\tgai_strerror\tsasl_gai_strerror\n#endif\n\n#ifndef HAVE_GETNAMEINFO\n#define\tgetnameinfo\tsasl_getnameinfo\n#endif\n\n#if !defined(HAVE_GETNAMEINFO) || !defined(HAVE_GETADDRINFO)\n#include \"gai.h\"\n#endif\n\n#ifndef AI_NUMERICHOST   /* support glibc 2.0.x */\n#define AI_NUMERICHOST  4\n#define NI_NUMERICHOST  2\n#define NI_NAMEREQD     4\n#define NI_NUMERICSERV  8\n#endif\n\n/* Defined in RFC 1035. max strlen is only 253 due to length bytes. */\n#ifndef MAXHOSTNAMELEN\n#define        MAXHOSTNAMELEN  255\n#endif\n\n#ifndef HAVE_SYSEXITS_H\n#include \"exits.h\"\n#else\n#include \"sysexits.h\"\n#endif\n\n/* Get the correct time.h */\n#if TIME_WITH_SYS_TIME\n# include <sys/time.h>\n# include <time.h>\n#else\n# if HAVE_SYS_TIME_H\n#  include <sys/time.h>\n# else\n#  include <time.h>\n# endif\n#endif\n\n#ifndef HIER_DELIMITER\n#define HIER_DELIMITER '/'\n#endif\n\n#ifdef WIN32\n#define SASL_ROOT_KEY \"SOFTWARE\\\\Carnegie Mellon\\\\Project Cyrus\\\\SASL Library\"\n#define SASL_PLUGIN_PATH_ATTR \"SearchPath\"\n#define SASL_CONF_PATH_ATTR \"ConfFile\"\n\n#include <windows.h>\ninline static unsigned int sleep(unsigned int seconds) {\n       Sleep(seconds * 1000);\n       return 0;\n}\n#endif\n\n#endif /* CONFIG_H */\n])\n\nAM_CONFIG_HEADER(config.h)\n\nAC_OUTPUT(Makefile\nlibsasl2.pc\ninclude/Makefile\nsasldb/Makefile\nplugins/Makefile\nlib/Makefile\nutils/Makefile\ndoc/Makefile\nsample/Makefile\njava/Makefile\njava/CyrusSasl/Makefile\njava/Test/Makefile\njava/javax/Makefile\njava/javax/security/Makefile\njava/javax/security/auth/Makefile\njava/javax/security/auth/callback/Makefile\npwcheck/Makefile\nman/Makefile)\n\necho Configuration Complete.  Type \\'make\\' to build.\n",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/config/libtool.m4": "## libtool.m4 - Configure libtool for the target system. -*-Shell-script-*-\n## Copyright (C) 1996-1999 Free Software Foundation, Inc.\n## Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n##\n## This program is free software; you can redistribute it and/or modify\n## it under the terms of the GNU General Public License as published by\n## the Free Software Foundation; either version 2 of the License, or\n## (at your option) any later version.\n##\n## This program is distributed in the hope that it will be useful, but\n## WITHOUT ANY WARRANTY; without even the implied warranty of\n## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n## General Public License for more details.\n##\n## You should have received a copy of the GNU General Public License\n## along with this program; if not, write to the Free Software\n## Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n##\n## As a special exception to the GNU General Public License, if you\n## distribute this file as part of a program that contains a\n## configuration script generated by Autoconf, you may include it under\n## the same distribution terms that you use for the rest of that program.\n\n# serial 40 AC_PROG_LIBTOOL\nAC_DEFUN([AC_PROG_LIBTOOL],\n[AC_REQUIRE([AC_LIBTOOL_SETUP])dnl\n\n# Save cache, so that ltconfig can load it\nAC_CACHE_SAVE\n\n# Actually configure libtool.  ac_aux_dir is where install-sh is found.\nCC=\"$CC\" CFLAGS=\"$CFLAGS\" CPPFLAGS=\"$CPPFLAGS\" \\\nLD=\"$LD\" LDFLAGS=\"$LDFLAGS\" LIBS=\"$LIBS\" \\\nLN_S=\"$LN_S\" NM=\"$NM\" RANLIB=\"$RANLIB\" \\\nDLLTOOL=\"$DLLTOOL\" AS=\"$AS\" OBJDUMP=\"$OBJDUMP\" \\\n${CONFIG_SHELL-/bin/sh} $ac_aux_dir/ltconfig --no-reexec \\\n$libtool_flags --no-verify $ac_aux_dir/ltmain.sh $lt_target \\\n|| AC_MSG_ERROR([libtool configure failed])\n\n# Reload cache, that may have been modified by ltconfig\nAC_CACHE_LOAD\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=\"$ac_aux_dir/ltconfig $ac_aux_dir/ltmain.sh\"\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\nAC_SUBST(LIBTOOL)dnl\n\n# Redirect the config.log output again, so that the ltconfig log is not\n# clobbered by the next message.\nexec 5>>./config.log\n])\n\nAC_DEFUN([AC_LIBTOOL_SETUP],\n[AC_PREREQ(2.13)dnl\nAC_REQUIRE([AC_ENABLE_SHARED])dnl\nAC_REQUIRE([AC_ENABLE_STATIC])dnl\nAC_REQUIRE([AC_ENABLE_FAST_INSTALL])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_REQUIRE([AC_PROG_RANLIB])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_PROG_LD])dnl\nAC_REQUIRE([AC_PROG_NM])dnl\nAC_REQUIRE([AC_PROG_LN_S])dnl\ndnl\n\ncase \"$target\" in\nNONE) lt_target=\"$host\" ;;\n*) lt_target=\"$target\" ;;\nesac\n\n# Check for any special flags to pass to ltconfig.\nlibtool_flags=\"--cache-file=$cache_file\"\ntest \"$enable_shared\" = no && libtool_flags=\"$libtool_flags --disable-shared\"\ntest \"$enable_static\" = no && libtool_flags=\"$libtool_flags --disable-static\"\ntest \"$enable_fast_install\" = no && libtool_flags=\"$libtool_flags --disable-fast-install\"\ntest \"$ac_cv_prog_gcc\" = yes && libtool_flags=\"$libtool_flags --with-gcc\"\ntest \"$ac_cv_prog_gnu_ld\" = yes && libtool_flags=\"$libtool_flags --with-gnu-ld\"\nifdef([AC_PROVIDE_AC_LIBTOOL_DLOPEN],\n[libtool_flags=\"$libtool_flags --enable-dlopen\"])\nifdef([AC_PROVIDE_AC_LIBTOOL_WIN32_DLL],\n[libtool_flags=\"$libtool_flags --enable-win32-dll\"])\nAC_ARG_ENABLE(libtool-lock,\n  [  --disable-libtool-lock  avoid locking (might break parallel builds)])\ntest \"x$enable_libtool_lock\" = xno && libtool_flags=\"$libtool_flags --disable-lock\"\ntest x\"$silent\" = xyes && libtool_flags=\"$libtool_flags --silent\"\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase \"$lt_target\" in\n*-*-irix6*)\n  # Find out which ABI we are using.\n  echo '[#]line __oline__ \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case \"`/usr/bin/file conftest.o`\" in\n    *32-bit*)\n      LD=\"${LD-ld} -32\"\n      ;;\n    *N32*)\n      LD=\"${LD-ld} -n32\"\n      ;;\n    *64-bit*)\n      LD=\"${LD-ld} -64\"\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=\"$CFLAGS\"\n  CFLAGS=\"$CFLAGS -belf\"\n  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n    [AC_TRY_LINK([],[],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])])\n  if test x\"$lt_cv_cc_needs_belf\" != x\"yes\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=\"$SAVE_CFLAGS\"\n  fi\n  ;;\n\nifdef([AC_PROVIDE_AC_LIBTOOL_WIN32_DLL],\n[*-*-cygwin* | *-*-mingw*)\n  AC_CHECK_TOOL(DLLTOOL, dlltool, false)\n  AC_CHECK_TOOL(AS, as, false)\n  AC_CHECK_TOOL(OBJDUMP, objdump, false)\n  ;;\n])\nesac\n])\n\n# AC_LIBTOOL_DLOPEN - enable checks for dlopen support\nAC_DEFUN([AC_LIBTOOL_DLOPEN], [AC_BEFORE([$0],[AC_LIBTOOL_SETUP])])\n\n# AC_LIBTOOL_WIN32_DLL - declare package support for building win32 dll's\nAC_DEFUN([AC_LIBTOOL_WIN32_DLL], [AC_BEFORE([$0], [AC_LIBTOOL_SETUP])])\n\n# AC_ENABLE_SHARED - implement the --enable-shared flag\n# Usage: AC_ENABLE_SHARED[(DEFAULT)]\n#   Where DEFAULT is either `yes' or `no'.  If omitted, it defaults to\n#   `yes'.\nAC_DEFUN([AC_ENABLE_SHARED], [dnl\ndefine([AC_ENABLE_SHARED_DEFAULT], ifelse($1, no, no, yes))dnl\nAC_ARG_ENABLE(shared,\nchangequote(<<, >>)dnl\n<<  --enable-shared[=PKGS]  build shared libraries [default=>>AC_ENABLE_SHARED_DEFAULT],\nchangequote([, ])dnl\n[p=${PACKAGE-default}\ncase \"$enableval\" in\nyes) enable_shared=yes ;;\nno) enable_shared=no ;;\n*)\n  enable_shared=no\n  # Look at the argument we got.  We use all the common list separators.\n  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:,\"\n  for pkg in $enableval; do\n    if test \"X$pkg\" = \"X$p\"; then\n      enable_shared=yes\n    fi\n  done\n  IFS=\"$ac_save_ifs\"\n  ;;\nesac],\nenable_shared=AC_ENABLE_SHARED_DEFAULT)dnl\n])\n\n# AC_DISABLE_SHARED - set the default shared flag to --disable-shared\nAC_DEFUN([AC_DISABLE_SHARED], [AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\nAC_ENABLE_SHARED(no)])\n\n# AC_ENABLE_STATIC - implement the --enable-static flag\n# Usage: AC_ENABLE_STATIC[(DEFAULT)]\n#   Where DEFAULT is either `yes' or `no'.  If omitted, it defaults to\n#   `yes'.\nAC_DEFUN([AC_ENABLE_STATIC], [dnl\ndefine([AC_ENABLE_STATIC_DEFAULT], ifelse($1, no, no, yes))dnl\nAC_ARG_ENABLE(static,\nchangequote(<<, >>)dnl\n<<  --enable-static[=PKGS]  build static libraries [default=>>AC_ENABLE_STATIC_DEFAULT],\nchangequote([, ])dnl\n[p=${PACKAGE-default}\ncase \"$enableval\" in\nyes) enable_static=yes ;;\nno) enable_static=no ;;\n*)\n  enable_static=no\n  # Look at the argument we got.  We use all the common list separators.\n  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:,\"\n  for pkg in $enableval; do\n    if test \"X$pkg\" = \"X$p\"; then\n      enable_static=yes\n    fi\n  done\n  IFS=\"$ac_save_ifs\"\n  ;;\nesac],\nenable_static=AC_ENABLE_STATIC_DEFAULT)dnl\n])\n\n# AC_DISABLE_STATIC - set the default static flag to --disable-static\nAC_DEFUN([AC_DISABLE_STATIC], [AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\nAC_ENABLE_STATIC(no)])\n\n\n# AC_ENABLE_FAST_INSTALL - implement the --enable-fast-install flag\n# Usage: AC_ENABLE_FAST_INSTALL[(DEFAULT)]\n#   Where DEFAULT is either `yes' or `no'.  If omitted, it defaults to\n#   `yes'.\nAC_DEFUN([AC_ENABLE_FAST_INSTALL], [dnl\ndefine([AC_ENABLE_FAST_INSTALL_DEFAULT], ifelse($1, no, no, yes))dnl\nAC_ARG_ENABLE(fast-install,\nchangequote(<<, >>)dnl\n<<  --enable-fast-install[=PKGS]  optimize for fast installation [default=>>AC_ENABLE_FAST_INSTALL_DEFAULT],\nchangequote([, ])dnl\n[p=${PACKAGE-default}\ncase \"$enableval\" in\nyes) enable_fast_install=yes ;;\nno) enable_fast_install=no ;;\n*)\n  enable_fast_install=no\n  # Look at the argument we got.  We use all the common list separators.\n  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:,\"\n  for pkg in $enableval; do\n    if test \"X$pkg\" = \"X$p\"; then\n      enable_fast_install=yes\n    fi\n  done\n  IFS=\"$ac_save_ifs\"\n  ;;\nesac],\nenable_fast_install=AC_ENABLE_FAST_INSTALL_DEFAULT)dnl\n])\n\n# AC_ENABLE_FAST_INSTALL - set the default to --disable-fast-install\nAC_DEFUN([AC_DISABLE_FAST_INSTALL], [AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\nAC_ENABLE_FAST_INSTALL(no)])\n\n# AC_PROG_LD - find the path to the GNU or non-GNU linker\nAC_DEFUN([AC_PROG_LD],\n[AC_ARG_WITH(gnu-ld,\n[  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]],\ntest \"$withval\" = no || with_gnu_ld=yes, with_gnu_ld=no)\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nac_prog=ld\nif test \"$ac_cv_prog_gcc\" = yes; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  AC_MSG_CHECKING([for ld used by GCC])\n  ac_prog=`($CC -print-prog-name=ld) 2>&5`\n  case \"$ac_prog\" in\n    # Accept absolute paths.\nchangequote(,)dnl\n    [\\\\/]* | [A-Za-z]:[\\\\/]*)\n      re_direlt='/[^/][^/]*/\\.\\./'\nchangequote([,])dnl\n      # Canonicalize the path of ld\n      ac_prog=`echo $ac_prog| sed 's%\\\\\\\\%/%g'`\n      while echo $ac_prog | grep \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`echo $ac_prog| sed \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=\"$ac_prog\"\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test \"$with_gnu_ld\" = yes; then\n  AC_MSG_CHECKING([for GNU ld])\nelse\n  AC_MSG_CHECKING([for non-GNU ld])\nfi\nAC_CACHE_VAL(ac_cv_path_LD,\n[if test -z \"$LD\"; then\n  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}${PATH_SEPARATOR-:}\"\n  for ac_dir in $PATH; do\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      ac_cv_path_LD=\"$ac_dir/$ac_prog\"\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some GNU ld's only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      if \"$ac_cv_path_LD\" -v 2>&1 < /dev/null | egrep '(GNU|with BFD)' > /dev/null; then\n\ttest \"$with_gnu_ld\" != no && break\n      else\n\ttest \"$with_gnu_ld\" != yes && break\n      fi\n    fi\n  done\n  IFS=\"$ac_save_ifs\"\nelse\n  ac_cv_path_LD=\"$LD\" # Let the user override the test with a path.\nfi])\nLD=\"$ac_cv_path_LD\"\nif test -n \"$LD\"; then\n  AC_MSG_RESULT($LD)\nelse\n  AC_MSG_RESULT(no)\nfi\ntest -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\nAC_PROG_LD_GNU\n])\n\nAC_DEFUN([AC_PROG_LD_GNU],\n[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], ac_cv_prog_gnu_ld,\n[# I'd rather use --version here, but apparently some GNU ld's only accept -v.\nif $LD -v 2>&1 </dev/null | egrep '(GNU|with BFD)' 1>&5; then\n  ac_cv_prog_gnu_ld=yes\nelse\n  ac_cv_prog_gnu_ld=no\nfi])\n])\n\n# AC_PROG_NM - find the path to a BSD-compatible name lister\nAC_DEFUN([AC_PROG_NM],\n[AC_MSG_CHECKING([for BSD-compatible nm])\nAC_CACHE_VAL(ac_cv_path_NM,\n[if test -n \"$NM\"; then\n  # Let the user override the test.\n  ac_cv_path_NM=\"$NM\"\nelse\n  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}${PATH_SEPARATOR-:}\"\n  for ac_dir in $PATH /usr/ccs/bin /usr/ucb /bin; do\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f $ac_dir/nm || test -f $ac_dir/nm$ac_exeext ; then\n      # Check to see if the nm accepts a BSD-compat flag.\n      # Adding the `sed 1q' prevents false positives on HP-UX, which says:\n      #   nm: unknown option \"B\" ignored\n      if ($ac_dir/nm -B /dev/null 2>&1 | sed '1q'; exit 0) | egrep /dev/null >/dev/null; then\n\tac_cv_path_NM=\"$ac_dir/nm -B\"\n\tbreak\n      elif ($ac_dir/nm -p /dev/null 2>&1 | sed '1q'; exit 0) | egrep /dev/null >/dev/null; then\n\tac_cv_path_NM=\"$ac_dir/nm -p\"\n\tbreak\n      else\n\tac_cv_path_NM=${ac_cv_path_NM=\"$ac_dir/nm\"} # keep the first match, but\n\tcontinue # so that we can try to find one that supports BSD flags\n      fi\n    fi\n  done\n  IFS=\"$ac_save_ifs\"\n  test -z \"$ac_cv_path_NM\" && ac_cv_path_NM=nm\nfi])\nNM=\"$ac_cv_path_NM\"\nAC_MSG_RESULT([$NM])\n])\n\n# AC_CHECK_LIBM - check for math library\nAC_DEFUN([AC_CHECK_LIBM],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nLIBM=\ncase \"$lt_target\" in\n*-*-beos* | *-*-cygwin*)\n  # These system don't have libm\n  ;;\n*-ncr-sysv4.3*)\n  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=\"-lmw\")\n  AC_CHECK_LIB(m, main, LIBM=\"$LIBM -lm\")\n  ;;\n*)\n  AC_CHECK_LIB(m, main, LIBM=\"-lm\")\n  ;;\nesac\n])\n\n# AC_LIBLTDL_CONVENIENCE[(dir)] - sets LIBLTDL to the link flags for\n# the libltdl convenience library, adds --enable-ltdl-convenience to\n# the configure arguments.  Note that LIBLTDL is not AC_SUBSTed, nor\n# is AC_CONFIG_SUBDIRS called.  If DIR is not provided, it is assumed\n# to be `${top_builddir}/libltdl'.  Make sure you start DIR with\n# '${top_builddir}/' (note the single quotes!) if your package is not\n# flat, and, if you're not using automake, define top_builddir as\n# appropriate in the Makefiles.\nAC_DEFUN([AC_LIBLTDL_CONVENIENCE], [AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\n  case \"$enable_ltdl_convenience\" in\n  no) AC_MSG_ERROR([this package needs a convenience libltdl]) ;;\n  \"\") enable_ltdl_convenience=yes\n      ac_configure_args=\"$ac_configure_args --enable-ltdl-convenience\" ;;\n  esac\n  LIBLTDL=ifelse($#,1,$1,['${top_builddir}/libltdl'])/libltdlc.la\n  INCLTDL=ifelse($#,1,-I$1,['-I${top_builddir}/libltdl'])\n])\n\n# AC_LIBLTDL_INSTALLABLE[(dir)] - sets LIBLTDL to the link flags for\n# the libltdl installable library, and adds --enable-ltdl-install to\n# the configure arguments.  Note that LIBLTDL is not AC_SUBSTed, nor\n# is AC_CONFIG_SUBDIRS called.  If DIR is not provided, it is assumed\n# to be `${top_builddir}/libltdl'.  Make sure you start DIR with\n# '${top_builddir}/' (note the single quotes!) if your package is not\n# flat, and, if you're not using automake, define top_builddir as\n# appropriate in the Makefiles.\n# In the future, this macro may have to be called after AC_PROG_LIBTOOL.\nAC_DEFUN([AC_LIBLTDL_INSTALLABLE], [AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\n  AC_CHECK_LIB(ltdl, main,\n  [test x\"$enable_ltdl_install\" != xyes && enable_ltdl_install=no],\n  [if test x\"$enable_ltdl_install\" = xno; then\n     AC_MSG_WARN([libltdl not installed, but installation disabled])\n   else\n     enable_ltdl_install=yes\n   fi\n  ])\n  if test x\"$enable_ltdl_install\" = x\"yes\"; then\n    ac_configure_args=\"$ac_configure_args --enable-ltdl-install\"\n    LIBLTDL=ifelse($#,1,$1,['${top_builddir}/libltdl'])/libltdl.la\n    INCLTDL=ifelse($#,1,-I$1,['-I${top_builddir}/libltdl'])\n  else\n    ac_configure_args=\"$ac_configure_args --enable-ltdl-install=no\"\n    LIBLTDL=\"-lltdl\"\n    INCLTDL=\n  fi\n])\n\ndnl old names\nAC_DEFUN([AM_PROG_LIBTOOL], [indir([AC_PROG_LIBTOOL])])dnl\nAC_DEFUN([AM_ENABLE_SHARED], [indir([AC_ENABLE_SHARED], $@)])dnl\nAC_DEFUN([AM_ENABLE_STATIC], [indir([AC_ENABLE_STATIC], $@)])dnl\nAC_DEFUN([AM_DISABLE_SHARED], [indir([AC_DISABLE_SHARED], $@)])dnl\nAC_DEFUN([AM_DISABLE_STATIC], [indir([AC_DISABLE_STATIC], $@)])dnl\nAC_DEFUN([AM_PROG_LD], [indir([AC_PROG_LD])])dnl\nAC_DEFUN([AM_PROG_NM], [indir([AC_PROG_NM])])dnl\n\ndnl This is just to silence aclocal about the macro not being used\nifelse([AC_DISABLE_FAST_INSTALL])dnl\n",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/config/ltmain.sh": "# ltmain.sh - Provide generalized library-building support services.\n# NOTE: Changing this file will not affect anything until you rerun ltconfig.\n#\n# Copyright (C) 1996-1999 Free Software Foundation, Inc.\n# Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# Check that we have a working $echo.\nif test \"X$1\" = X--no-reexec; then\n  # Discard the --no-reexec flag, and continue.\n  shift\nelif test \"X$1\" = X--fallback-echo; then\n  # Avoid inline document here, it may be left over\n  :\nelif test \"X`($echo '\\t') 2>/dev/null`\" = 'X\\t'; then\n  # Yippee, $echo works!\n  :\nelse\n  # Restart under the correct shell, and then maybe $echo will work.\n  exec $SHELL \"$0\" --no-reexec ${1+\"$@\"}\nfi\n\nif test \"X$1\" = X--fallback-echo; then\n  # used as fallback echo\n  shift\n  cat <<EOF\n$*\nEOF\n  exit 0\nfi\n\n# The name of this program.\nprogname=`$echo \"$0\" | sed 's%^.*/%%'`\nmodename=\"$progname\"\n\n# Constants.\nPROGRAM=ltmain.sh\nPACKAGE=libtool\nVERSION=1.3.5\nTIMESTAMP=\" (1.385.2.206 2000/05/27 11:12:27)\"\n\ndefault_mode=\nhelp=\"Try \\`$progname --help' for more information.\"\nmagic=\"%%%MAGIC variable%%%\"\nmkdir=\"mkdir\"\nmv=\"mv -f\"\nrm=\"rm -f\"\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed='sed -e 1s/^X//'\nsed_quote_subst='s/\\([\\\\`\\\\\"$\\\\\\\\]\\)/\\\\\\1/g'\n# test EBCDIC or ASCII\ncase `echo '' | od -x` in\n*15*) # EBCDIC based system\n  SP2NL='tr \\100 \\025'\n  NL2SP='tr \\025 \\100'\n  ;;\n*) # Assume ASCII based system\n  SP2NL='tr \\040 \\012'\n  NL2SP='tr \\015\\012 \\040\\040'\n  ;;\nesac\n\n# NLS nuisances.\n# Only set LANG and LC_ALL to C if already set.\n# These must not be set unconditionally because not all systems understand\n# e.g. LANG=C (notably SCO).\n# We save the old values to restore during execute mode.\nif test \"${LC_ALL+set}\" = set; then\n  save_LC_ALL=\"$LC_ALL\"; LC_ALL=C; export LC_ALL\nfi\nif test \"${LANG+set}\" = set; then\n  save_LANG=\"$LANG\"; LANG=C; export LANG\nfi\n\nif test \"$LTCONFIG_VERSION\" != \"$VERSION\"; then\n  echo \"$modename: ltconfig version \\`$LTCONFIG_VERSION' does not match $PROGRAM version \\`$VERSION'\" 1>&2\n  echo \"Fatal configuration error.  See the $PACKAGE docs for more information.\" 1>&2\n  exit 1\nfi\n\nif test \"$build_libtool_libs\" != yes && test \"$build_old_libs\" != yes; then\n  echo \"$modename: not configured to build any kind of library\" 1>&2\n  echo \"Fatal configuration error.  See the $PACKAGE docs for more information.\" 1>&2\n  exit 1\nfi\n\n# Global variables.\nmode=$default_mode\nnonopt=\nprev=\nprevopt=\nrun=\nshow=\"$echo\"\nshow_help=\nexecute_dlfiles=\nlo2o=\"s/\\\\.lo\\$/.${objext}/\"\no2lo=\"s/\\\\.${objext}\\$/.lo/\"\n\n# Parse our command line options once, thoroughly.\nwhile test $# -gt 0\ndo\n  arg=\"$1\"\n  shift\n\n  case \"$arg\" in\n  -*=*) optarg=`$echo \"X$arg\" | $Xsed -e 's/[-_a-zA-Z0-9]*=//'` ;;\n  *) optarg= ;;\n  esac\n\n  # If the previous option needs an argument, assign it.\n  if test -n \"$prev\"; then\n    case \"$prev\" in\n    execute_dlfiles)\n      eval \"$prev=\\\"\\$$prev \\$arg\\\"\"\n      ;;\n    *)\n      eval \"$prev=\\$arg\"\n      ;;\n    esac\n\n    prev=\n    prevopt=\n    continue\n  fi\n\n  # Have we seen a non-optional argument yet?\n  case \"$arg\" in\n  --help)\n    show_help=yes\n    ;;\n\n  --version)\n    echo \"$PROGRAM (GNU $PACKAGE) $VERSION$TIMESTAMP\"\n    exit 0\n    ;;\n\n  --config)\n    sed -e '1,/^### BEGIN LIBTOOL CONFIG/d' -e '/^### END LIBTOOL CONFIG/,$d' $0\n    exit 0\n    ;;\n\n  --debug)\n    echo \"$progname: enabling shell trace mode\"\n    set -x\n    ;;\n\n  --dry-run | -n)\n    run=:\n    ;;\n\n  --features)\n    echo \"host: $host\"\n    if test \"$build_libtool_libs\" = yes; then\n      echo \"enable shared libraries\"\n    else\n      echo \"disable shared libraries\"\n    fi\n    if test \"$build_old_libs\" = yes; then\n      echo \"enable static libraries\"\n    else\n      echo \"disable static libraries\"\n    fi\n    exit 0\n    ;;\n\n  --finish) mode=\"finish\" ;;\n\n  --mode) prevopt=\"--mode\" prev=mode ;;\n  --mode=*) mode=\"$optarg\" ;;\n\n  --quiet | --silent)\n    show=:\n    ;;\n\n  -dlopen)\n    prevopt=\"-dlopen\"\n    prev=execute_dlfiles\n    ;;\n\n  -*)\n    $echo \"$modename: unrecognized option \\`$arg'\" 1>&2\n    $echo \"$help\" 1>&2\n    exit 1\n    ;;\n\n  *)\n    nonopt=\"$arg\"\n    break\n    ;;\n  esac\ndone\n\nif test -n \"$prevopt\"; then\n  $echo \"$modename: option \\`$prevopt' requires an argument\" 1>&2\n  $echo \"$help\" 1>&2\n  exit 1\nfi\n\nif test -z \"$show_help\"; then\n\n  # Infer the operation mode.\n  if test -z \"$mode\"; then\n    case \"$nonopt\" in\n    *cc | *++ | gcc* | *-gcc*)\n      mode=link\n      for arg\n      do\n\tcase \"$arg\" in\n\t-c)\n\t   mode=compile\n\t   break\n\t   ;;\n\tesac\n      done\n      ;;\n    *db | *dbx | *strace | *truss)\n      mode=execute\n      ;;\n    *install*|cp|mv)\n      mode=install\n      ;;\n    *rm)\n      mode=uninstall\n      ;;\n    *)\n      # If we have no mode, but dlfiles were specified, then do execute mode.\n      test -n \"$execute_dlfiles\" && mode=execute\n\n      # Just use the default operation mode.\n      if test -z \"$mode\"; then\n\tif test -n \"$nonopt\"; then\n\t  $echo \"$modename: warning: cannot infer operation mode from \\`$nonopt'\" 1>&2\n\telse\n\t  $echo \"$modename: warning: cannot infer operation mode without MODE-ARGS\" 1>&2\n\tfi\n      fi\n      ;;\n    esac\n  fi\n\n  # Only execute mode is allowed to have -dlopen flags.\n  if test -n \"$execute_dlfiles\" && test \"$mode\" != execute; then\n    $echo \"$modename: unrecognized option \\`-dlopen'\" 1>&2\n    $echo \"$help\" 1>&2\n    exit 1\n  fi\n\n  # Change the help message to a mode-specific one.\n  generic_help=\"$help\"\n  help=\"Try \\`$modename --help --mode=$mode' for more information.\"\n\n  # These modes are in order of execution frequency so that they run quickly.\n  case \"$mode\" in\n  # libtool compile mode\n  compile)\n    modename=\"$modename: compile\"\n    # Get the compilation command and the source file.\n    base_compile=\n    lastarg=\n    srcfile=\"$nonopt\"\n    suppress_output=\n\n    user_target=no\n    for arg\n    do\n      # Accept any command-line options.\n      case \"$arg\" in\n      -o)\n\tif test \"$user_target\" != \"no\"; then\n\t  $echo \"$modename: you cannot specify \\`-o' more than once\" 1>&2\n\t  exit 1\n\tfi\n\tuser_target=next\n\t;;\n\n      -static)\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n      esac\n\n      case \"$user_target\" in\n      next)\n\t# The next one is the -o target name\n\tuser_target=yes\n\tcontinue\n\t;;\n      yes)\n\t# We got the output file\n\tuser_target=set\n\tlibobj=\"$arg\"\n\tcontinue\n\t;;\n      esac\n\n      # Accept the current argument as the source file.\n      lastarg=\"$srcfile\"\n      srcfile=\"$arg\"\n\n      # Aesthetically quote the previous argument.\n\n      # Backslashify any backslashes, double quotes, and dollar signs.\n      # These are the only characters that are still specially\n      # interpreted inside of double-quoted scrings.\n      lastarg=`$echo \"X$lastarg\" | $Xsed -e \"$sed_quote_subst\"`\n\n      # Double-quote args containing other shell metacharacters.\n      # Many Bourne shells cannot handle close brackets correctly in scan\n      # sets, so we specify it separately.\n      case \"$lastarg\" in\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*)\n\tlastarg=\"\\\"$lastarg\\\"\"\n\t;;\n      esac\n\n      # Add the previous argument to base_compile.\n      if test -z \"$base_compile\"; then\n\tbase_compile=\"$lastarg\"\n      else\n\tbase_compile=\"$base_compile $lastarg\"\n      fi\n    done\n\n    case \"$user_target\" in\n    set)\n      ;;\n    no)\n      # Get the name of the library object.\n      libobj=`$echo \"X$srcfile\" | $Xsed -e 's%^.*/%%'`\n      ;;\n    *)\n      $echo \"$modename: you must specify a target with \\`-o'\" 1>&2\n      exit 1\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    xform='[cCFSfmso]'\n    case \"$libobj\" in\n    *.ada) xform=ada ;;\n    *.adb) xform=adb ;;\n    *.ads) xform=ads ;;\n    *.asm) xform=asm ;;\n    *.c++) xform=c++ ;;\n    *.cc) xform=cc ;;\n    *.cpp) xform=cpp ;;\n    *.cxx) xform=cxx ;;\n    *.f90) xform=f90 ;;\n    *.for) xform=for ;;\n    esac\n\n    libobj=`$echo \"X$libobj\" | $Xsed -e \"s/\\.$xform$/.lo/\"`\n\n    case \"$libobj\" in\n    *.lo) obj=`$echo \"X$libobj\" | $Xsed -e \"$lo2o\"` ;;\n    *)\n      $echo \"$modename: cannot determine name of library object from \\`$libobj'\" 1>&2\n      exit 1\n      ;;\n    esac\n\n    if test -z \"$base_compile\"; then\n      $echo \"$modename: you must specify a compilation command\" 1>&2\n      $echo \"$help\" 1>&2\n      exit 1\n    fi\n\n    # Delete any leftover library objects.\n    if test \"$build_old_libs\" = yes; then\n      removelist=\"$obj $libobj\"\n    else\n      removelist=\"$libobj\"\n    fi\n\n    $run $rm $removelist\n    trap \"$run $rm $removelist; exit 1\" 1 2 15\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test \"$compiler_c_o\" = no; then\n      output_obj=`$echo \"X$srcfile\" | $Xsed -e 's%^.*/%%' -e 's%\\..*$%%'`.${objext}\n      lockfile=\"$output_obj.lock\"\n      removelist=\"$removelist $output_obj $lockfile\"\n      trap \"$run $rm $removelist; exit 1\" 1 2 15\n    else\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test \"$need_locks\" = yes; then\n      until ln \"$0\" \"$lockfile\" 2>/dev/null; do\n\t$show \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test \"$need_locks\" = warn; then\n      if test -f \"$lockfile\"; then\n\techo \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$run $rm $removelist\n\texit 1\n      fi\n      echo $srcfile > \"$lockfile\"\n    fi\n\n    if test -n \"$fix_srcfile_path\"; then\n      eval srcfile=\\\"$fix_srcfile_path\\\"\n    fi\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test \"$build_libtool_libs\" = yes; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      # All platforms use -DPIC, to notify preprocessed assembler code.\n      command=\"$base_compile $srcfile $pic_flag -DPIC\"\n      if test \"$build_old_libs\" = yes; then\n\tlo_libobj=\"$libobj\"\n\tdir=`$echo \"X$libobj\" | $Xsed -e 's%/[^/]*$%%'`\n\tif test \"X$dir\" = \"X$libobj\"; then\n\t  dir=\"$objdir\"\n\telse\n\t  dir=\"$dir/$objdir\"\n\tfi\n\tlibobj=\"$dir/\"`$echo \"X$libobj\" | $Xsed -e 's%^.*/%%'`\n\n\tif test -d \"$dir\"; then\n\t  $show \"$rm $libobj\"\n\t  $run $rm $libobj\n\telse\n\t  $show \"$mkdir $dir\"\n\t  $run $mkdir $dir\n\t  status=$?\n\t  if test $status -ne 0 && test ! -d $dir; then\n\t    exit $status\n\t  fi\n\tfi\n      fi\n      if test \"$compiler_o_lo\" = yes; then\n\toutput_obj=\"$libobj\"\n\tcommand=\"$command -o $output_obj\"\n      elif test \"$compiler_c_o\" = yes; then\n\toutput_obj=\"$obj\"\n\tcommand=\"$command -o $output_obj\"\n      fi\n\n      $run $rm \"$output_obj\"\n      $show \"$command\"\n      if $run eval \"$command\"; then :\n      else\n\ttest -n \"$output_obj\" && $run $rm $removelist\n\texit 1\n      fi\n\n      if test \"$need_locks\" = warn &&\n\t test x\"`cat $lockfile 2>/dev/null`\" != x\"$srcfile\"; then\n\techo \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$run $rm $removelist\n\texit 1\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test x\"$output_obj\" != x\"$libobj\"; then\n\t$show \"$mv $output_obj $libobj\"\n\tif $run $mv $output_obj $libobj; then :\n\telse\n\t  error=$?\n\t  $run $rm $removelist\n\t  exit $error\n\tfi\n      fi\n\n      # If we have no pic_flag, then copy the object into place and finish.\n      if test -z \"$pic_flag\" && test \"$build_old_libs\" = yes; then\n\t# Rename the .lo from within objdir to obj\n\tif test -f $obj; then\n\t  $show $rm $obj\n\t  $run $rm $obj\n\tfi\n\n\t$show \"$mv $libobj $obj\"\n\tif $run $mv $libobj $obj; then :\n\telse\n\t  error=$?\n\t  $run $rm $removelist\n\t  exit $error\n\tfi\n\n\txdir=`$echo \"X$obj\" | $Xsed -e 's%/[^/]*$%%'`\n\tif test \"X$xdir\" = \"X$obj\"; then\n\t  xdir=\".\"\n\telse\n\t  xdir=\"$xdir\"\n\tfi\n\tbaseobj=`$echo \"X$obj\" | $Xsed -e \"s%.*/%%\"`\n\tlibobj=`$echo \"X$baseobj\" | $Xsed -e \"$o2lo\"`\n\t# Now arrange that obj and lo_libobj become the same file\n\t$show \"(cd $xdir && $LN_S $baseobj $libobj)\"\n\tif $run eval '(cd $xdir && $LN_S $baseobj $libobj)'; then\n\t  exit 0\n\telse\n\t  error=$?\n\t  $run $rm $removelist\n\t  exit $error\n\tfi\n      fi\n\n      # Allow error messages only from the first compilation.\n      suppress_output=' >/dev/null 2>&1'\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test \"$build_old_libs\" = yes; then\n      command=\"$base_compile $srcfile\"\n      if test \"$compiler_c_o\" = yes; then\n\tcommand=\"$command -o $obj\"\n\toutput_obj=\"$obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      command=\"$command$suppress_output\"\n      $run $rm \"$output_obj\"\n      $show \"$command\"\n      if $run eval \"$command\"; then :\n      else\n\t$run $rm $removelist\n\texit 1\n      fi\n\n      if test \"$need_locks\" = warn &&\n\t test x\"`cat $lockfile 2>/dev/null`\" != x\"$srcfile\"; then\n\techo \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$run $rm $removelist\n\texit 1\n      fi\n\n      # Just move the object if needed\n      if test x\"$output_obj\" != x\"$obj\"; then\n\t$show \"$mv $output_obj $obj\"\n\tif $run $mv $output_obj $obj; then :\n\telse\n\t  error=$?\n\t  $run $rm $removelist\n\t  exit $error\n\tfi\n      fi\n\n      # Create an invalid libtool object if no PIC, so that we do not\n      # accidentally link it into a program.\n      if test \"$build_libtool_libs\" != yes; then\n\t$show \"echo timestamp > $libobj\"\n\t$run eval \"echo timestamp > \\$libobj\" || exit $?\n      else\n\t# Move the .lo from within objdir\n\t$show \"$mv $libobj $lo_libobj\"\n\tif $run $mv $libobj $lo_libobj; then :\n\telse\n\t  error=$?\n\t  $run $rm $removelist\n\t  exit $error\n\tfi\n      fi\n    fi\n\n    # Unlock the critical section if it was locked\n    if test \"$need_locks\" != no; then\n      $rm \"$lockfile\"\n    fi\n\n    exit 0\n    ;;\n\n  # libtool link mode\n  link)\n    modename=\"$modename: link\"\n    case \"$host\" in\n    *-*-cygwin* | *-*-mingw* | *-*-os2*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # which system we are compiling for in order to pass an extra\n      # flag for every libtool invokation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll which has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n\n      # This is a source program that is used to create dlls on Windows\n      # Don't remove nor modify the starting and closing comments\n# /* ltdll.c starts here */\n# #define WIN32_LEAN_AND_MEAN\n# #include <windows.h>\n# #undef WIN32_LEAN_AND_MEAN\n# #include <stdio.h>\n#\n# #ifndef __CYGWIN__\n# #  ifdef __CYGWIN32__\n# #    define __CYGWIN__ __CYGWIN32__\n# #  endif\n# #endif\n#\n# #ifdef __cplusplus\n# extern \"C\" {\n# #endif\n# BOOL APIENTRY DllMain (HINSTANCE hInst, DWORD reason, LPVOID reserved);\n# #ifdef __cplusplus\n# }\n# #endif\n#\n# #ifdef __CYGWIN__\n# #include <cygwin/cygwin_dll.h>\n# DECLARE_CYGWIN_DLL( DllMain );\n# #endif\n# HINSTANCE __hDllInstance_base;\n#\n# BOOL APIENTRY\n# DllMain (HINSTANCE hInst, DWORD reason, LPVOID reserved)\n# {\n#   __hDllInstance_base = hInst;\n#   return TRUE;\n# }\n# /* ltdll.c ends here */\n      # This is a source program that is used to create import libraries\n      # on Windows for dlls which lack them. Don't remove nor modify the\n      # starting and closing comments\n# /* impgen.c starts here */\n# /*   Copyright (C) 1999 Free Software Foundation, Inc.\n# \n#  This file is part of GNU libtool.\n# \n#  This program is free software; you can redistribute it and/or modify\n#  it under the terms of the GNU General Public License as published by\n#  the Free Software Foundation; either version 2 of the License, or\n#  (at your option) any later version.\n# \n#  This program is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#  GNU General Public License for more details.\n# \n#  You should have received a copy of the GNU General Public License\n#  along with this program; if not, write to the Free Software\n#  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n#  */\n# \n#  #include <stdio.h>\t\t/* for printf() */\n#  #include <unistd.h>\t\t/* for open(), lseek(), read() */\n#  #include <fcntl.h>\t\t/* for O_RDONLY, O_BINARY */\n#  #include <string.h>\t\t/* for strdup() */\n# \n#  static unsigned int\n#  pe_get16 (fd, offset)\n#       int fd;\n#       int offset;\n#  {\n#    unsigned char b[2];\n#    lseek (fd, offset, SEEK_SET);\n#    read (fd, b, 2);\n#    return b[0] + (b[1]<<8);\n#  }\n# \n#  static unsigned int\n#  pe_get32 (fd, offset)\n#      int fd;\n#      int offset;\n#  {\n#    unsigned char b[4];\n#    lseek (fd, offset, SEEK_SET);\n#    read (fd, b, 4);\n#    return b[0] + (b[1]<<8) + (b[2]<<16) + (b[3]<<24);\n#  }\n# \n#  static unsigned int\n#  pe_as32 (ptr)\n#       void *ptr;\n#  {\n#    unsigned char *b = ptr;\n#    return b[0] + (b[1]<<8) + (b[2]<<16) + (b[3]<<24);\n#  }\n# \n#  int\n#  main (argc, argv)\n#      int argc;\n#      char *argv[];\n#  {\n#      int dll;\n#      unsigned long pe_header_offset, opthdr_ofs, num_entries, i;\n#      unsigned long export_rva, export_size, nsections, secptr, expptr;\n#      unsigned long name_rvas, nexp;\n#      unsigned char *expdata, *erva;\n#      char *filename, *dll_name;\n# \n#      filename = argv[1];\n# \n#      dll = open(filename, O_RDONLY|O_BINARY);\n#      if (!dll)\n#  \treturn 1;\n# \n#      dll_name = filename;\n#    \n#      for (i=0; filename[i]; i++)\n#  \tif (filename[i] == '/' || filename[i] == '\\\\'  || filename[i] == ':')\n#  \t    dll_name = filename + i +1;\n# \n#      pe_header_offset = pe_get32 (dll, 0x3c);\n#      opthdr_ofs = pe_header_offset + 4 + 20;\n#      num_entries = pe_get32 (dll, opthdr_ofs + 92);\n# \n#      if (num_entries < 1) /* no exports */\n#  \treturn 1;\n# \n#      export_rva = pe_get32 (dll, opthdr_ofs + 96);\n#      export_size = pe_get32 (dll, opthdr_ofs + 100);\n#      nsections = pe_get16 (dll, pe_header_offset + 4 +2);\n#      secptr = (pe_header_offset + 4 + 20 +\n#  \t      pe_get16 (dll, pe_header_offset + 4 + 16));\n# \n#      expptr = 0;\n#      for (i = 0; i < nsections; i++)\n#      {\n#  \tchar sname[8];\n#  \tunsigned long secptr1 = secptr + 40 * i;\n#  \tunsigned long vaddr = pe_get32 (dll, secptr1 + 12);\n#  \tunsigned long vsize = pe_get32 (dll, secptr1 + 16);\n#  \tunsigned long fptr = pe_get32 (dll, secptr1 + 20);\n#  \tlseek(dll, secptr1, SEEK_SET);\n#  \tread(dll, sname, 8);\n#  \tif (vaddr <= export_rva && vaddr+vsize > export_rva)\n#  \t{\n#  \t    expptr = fptr + (export_rva - vaddr);\n#  \t    if (export_rva + export_size > vaddr + vsize)\n#  \t\texport_size = vsize - (export_rva - vaddr);\n#  \t    break;\n#  \t}\n#      }\n# \n#      expdata = (unsigned char*)malloc(export_size);\n#      lseek (dll, expptr, SEEK_SET);\n#      read (dll, expdata, export_size);\n#      erva = expdata - export_rva;\n# \n#      nexp = pe_as32 (expdata+24);\n#      name_rvas = pe_as32 (expdata+32);\n# \n#      printf (\"EXPORTS\\n\");\n#      for (i = 0; i<nexp; i++)\n#      {\n#  \tunsigned long name_rva = pe_as32 (erva+name_rvas+i*4);\n#  \tprintf (\"\\t%s @ %ld ;\\n\", erva+name_rva, 1+ i);\n#      }\n# \n#      return 0;\n#  }\n# /* impgen.c ends here */\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    compile_command=\"$nonopt\"\n    finalize_command=\"$nonopt\"\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    linkopts=\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval lib_search_path=\\`\\$echo \\\"X \\${$shlibpath_var}\\\" \\| \\$Xsed -e \\'s/:/ /g\\'\\`\n    else\n      lib_search_path=\n    fi\n    # now prepend the system-specific ones\n    eval lib_search_path=\\\"$sys_lib_search_path_spec\\$lib_search_path\\\"\n    eval sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\n    \n    avoid_version=no\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    link_against_libtool_libs=\n    ltlibs=\n    module=no\n    objs=\n    prefer_static_libs=no\n    preload=no\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case \"$arg\" in\n      -all-static | -static)\n\tif test \"X$arg\" = \"X-all-static\"; then\n\t  if test \"$build_libtool_libs\" = yes && test -z \"$link_static_flag\"; then\n\t    $echo \"$modename: warning: complete static linking is impossible in this configuration\" 1>&2\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\telse\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\tfi\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tprefer_static_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test $# -gt 0; do\n      arg=\"$1\"\n      shift\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase \"$prev\" in\n\toutput)\n\t  compile_command=\"$compile_command @OUTPUT@\"\n\t  finalize_command=\"$finalize_command @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase \"$prev\" in\n\tdlfiles|dlprefiles)\n\t  if test \"$preload\" = no; then\n\t    # Add the symbol object into the linking commands.\n\t    compile_command=\"$compile_command @SYMFILE@\"\n\t    finalize_command=\"$finalize_command @SYMFILE@\"\n\t    preload=yes\n\t  fi\n\t  case \"$arg\" in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test \"$dlself\" = no; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test \"$prev\" = dlprefiles; then\n\t      dlself=yes\n\t    elif test \"$prev\" = dlfiles && test \"$dlopen_self\" != yes; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test \"$prev\" = dlfiles; then\n\t      dlfiles=\"$dlfiles $arg\"\n\t    else\n\t      dlprefiles=\"$dlprefiles $arg\"\n\t    fi\n\t    prev=\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=\"$arg\"\n\t  if test ! -f \"$arg\"; then\n\t    $echo \"$modename: symbol file \\`$arg' does not exist\"\n\t    exit 1\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=\"-$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case \"$arg\" in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    $echo \"$modename: only absolute run-paths are allowed\" 1>&2\n\t    exit 1\n\t    ;;\n\t  esac\n\t  if test \"$prev\" = rpath; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) rpath=\"$rpath $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) xrpath=\"$xrpath $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi\n\n      prevarg=\"$arg\"\n\n      case \"$arg\" in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  compile_command=\"$compile_command $link_static_flag\"\n\t  finalize_command=\"$finalize_command $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\t$echo \"$modename: \\`-allow-undefined' is deprecated because it is the default\" 1>&2\n\tcontinue\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  $echo \"$modename: not more than one -exported-symbols argument allowed\"\n\t  exit 1\n\tfi\n\tif test \"X$arg\" = \"X-export-symbols\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -L*)\n\tdir=`$echo \"X$arg\" | $Xsed -e 's/^-L//'`\n\t# We need an absolute path.\n\tcase \"$dir\" in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  if test -z \"$absdir\"; then\n\t    $echo \"$modename: warning: cannot determine absolute directory name of \\`$dir'\" 1>&2\n\t    $echo \"$modename: passing it literally to the linker, although it might fail\" 1>&2\n\t    absdir=\"$dir\"\n\t  fi\n\t  dir=\"$absdir\"\n\t  ;;\n\tesac\n\tcase \" $deplibs \" in\n\t*\" $arg \"*) ;;\n\t*) deplibs=\"$deplibs $arg\";;\n\tesac\n\tcase \" $lib_search_path \" in\n\t*\" $dir \"*) ;;\n\t*) lib_search_path=\"$lib_search_path $dir\";;\n\tesac\n\tcase \"$host\" in\n\t*-*-cygwin* | *-*-mingw* | *-*-os2*)\n\t  dllsearchdir=`cd \"$dir\" && pwd || echo \"$dir\"`\n\t  case \":$dllsearchpath:\" in\n\t  ::) dllsearchpath=\"$dllsearchdir\";;\n\t  *\":$dllsearchdir:\"*) ;;\n\t  *) dllsearchpath=\"$dllsearchpath:$dllsearchdir\";;\n\t  esac\n\t  ;;\n\tesac\n\t;;\n\n      -l*)\n\tif test \"$arg\" = \"-lc\"; then\n\t  case \"$host\" in\n\t  *-*-cygwin* | *-*-mingw* | *-*-os2* | *-*-beos*)\n\t    # These systems don't actually have c library (as such)\n\t    continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    deplibs=\"$deplibs -framework System\"\n\t    continue\n\t    ;;\n\t  esac\n\telif test \"$arg\" = \"-lm\"; then\n\t  case \"$host\" in\n\t  *-*-cygwin* | *-*-beos*)\n\t    # These systems don't actually have math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody math library is in the System framework\n\t    deplibs=\"$deplibs -framework System\"\n\t    continue\n\t    ;;\n\t  esac\n\tfi\n\tdeplibs=\"$deplibs $arg\"\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tdir=`$echo \"X$arg\" | $Xsed -e 's/^-R//'`\n\t# We need an absolute path.\n\tcase \"$dir\" in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  $echo \"$modename: only absolute run-paths are allowed\" 1>&2\n\t  exit 1\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) xrpath=\"$xrpath $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -static)\n\t# If we have no pic_flag, then this is the same as -all-static.\n\tif test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t  compile_command=\"$compile_command $link_static_flag\"\n\t  finalize_command=\"$finalize_command $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n\n      # Some other compiler flag.\n      -* | +*)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\targ=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n\tcase \"$arg\" in\n\t*[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*)\n\t  arg=\"\\\"$arg\\\"\"\n\t  ;;\n\tesac\n\t;;\n\n      *.o | *.obj | *.a | *.lib)\n\t# A standard object.\n\tobjs=\"$objs $arg\"\n\t;;\n\n      *.lo)\n\t# A library object.\n\tif test \"$prev\" = dlfiles; then\n\t  dlfiles=\"$dlfiles $arg\"\n\t  if test \"$build_libtool_libs\" = yes && test \"$dlopen\" = yes; then\n\t    prev=\n\t    continue\n\t  else\n\t    # If libtool objects are unsupported, then we need to preload.\n\t    prev=dlprefiles\n\t  fi\n\tfi\n\n\tif test \"$prev\" = dlprefiles; then\n\t  # Preload the old-style object.\n\t  dlprefiles=\"$dlprefiles \"`$echo \"X$arg\" | $Xsed -e \"$lo2o\"`\n\t  prev=\n\tfi\n\tlibobjs=\"$libobjs $arg\"\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tdlname=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\n\t# Check to see that this really is a libtool archive.\n\tif (sed -e '2q' $arg | egrep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then :\n\telse\n\t  $echo \"$modename: \\`$arg' is not a valid libtool archive\" 1>&2\n\t  exit 1\n\tfi\n\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variable installed.\n\tinstalled=yes\n\n\t# Read the .la file\n\t# If there is no directory component, then add one.\n\tcase \"$arg\" in\n\t*/* | *\\\\*) . $arg ;;\n\t*) . ./$arg ;;\n\tesac\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tfor l in $old_library $library_names; do\n\t  linklib=\"$l\"\n\tdone\n\n\tif test -z \"$linklib\"; then\n\t  $echo \"$modename: cannot find name of link library for \\`$arg'\" 1>&2\n\t  exit 1\n\tfi\n\n\t# Find the relevant object directory and library name.\n\tname=`$echo \"X$arg\" | $Xsed -e 's%^.*/%%' -e 's/\\.la$//' -e 's/^lib//'`\n\n\tif test \"X$installed\" = Xyes; then\n\t  dir=\"$libdir\"\n\telse\n\t  dir=`$echo \"X$arg\" | $Xsed -e 's%/[^/]*$%%'`\n\t  if test \"X$dir\" = \"X$arg\"; then\n\t    dir=\"$objdir\"\n\t  else\n\t    dir=\"$dir/$objdir\"\n\t  fi\n\tfi\n\n\tif test -n \"$dependency_libs\"; then\n\t  # Extract -R and -L from dependency_libs\n\t  temp_deplibs=\n\t  for deplib in $dependency_libs; do\n\t    case \"$deplib\" in\n\t    -R*) temp_xrpath=`$echo \"X$deplib\" | $Xsed -e 's/^-R//'`\n\t\t case \" $rpath $xrpath \" in\n\t\t *\" $temp_xrpath \"*) ;;\n\t\t *) xrpath=\"$xrpath $temp_xrpath\";;\n\t\t esac;;\n\t    -L*) case \"$compile_command $temp_deplibs \" in\n\t\t *\" $deplib \"*) ;;\n\t\t *) temp_deplibs=\"$temp_deplibs $deplib\";;\n\t\t esac\n\t\t temp_dir=`$echo \"X$deplib\" | $Xsed -e 's/^-L//'`\n\t\t case \" $lib_search_path \" in\n\t\t *\" $temp_dir \"*) ;;\n\t\t *) lib_search_path=\"$lib_search_path $temp_dir\";;\n\t\t esac\n\t\t ;;\n\t    *) temp_deplibs=\"$temp_deplibs $deplib\";;\n\t    esac\n\t  done\n\t  dependency_libs=\"$temp_deplibs\"\n\tfi\n\n\tif test -z \"$libdir\"; then\n\t  # It is a libtool convenience library, so add in its objects.\n\t  convenience=\"$convenience $dir/$old_library\"\n\t  old_convenience=\"$old_convenience $dir/$old_library\"\n\t  deplibs=\"$deplibs$dependency_libs\"\n\t  compile_command=\"$compile_command $dir/$old_library$dependency_libs\"\n\t  finalize_command=\"$finalize_command $dir/$old_library$dependency_libs\"\n\t  continue\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test \"$prev\" = dlfiles; then\n\t  dlfiles=\"$dlfiles $arg\"\n\t  if test -z \"$dlname\" || test \"$dlopen\" != yes || test \"$build_libtool_libs\" = no; then\n\t    # If there is no dlname, no dlopen support or we're linking statically,\n\t    # we need to preload.\n\t    prev=dlprefiles\n\t  else\n\t    # We should not create a dependency on this library, but we\n\t    # may need any libraries it requires.\n\t    compile_command=\"$compile_command$dependency_libs\"\n\t    finalize_command=\"$finalize_command$dependency_libs\"\n\t    prev=\n\t    continue\n\t  fi\n\tfi\n\n\t# The library was specified with -dlpreopen.\n\tif test \"$prev\" = dlprefiles; then\n\t  # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t  # are required to link).\n\t  if test -n \"$old_library\"; then\n\t    dlprefiles=\"$dlprefiles $dir/$old_library\"\n\t  else\n\t    dlprefiles=\"$dlprefiles $dir/$linklib\"\n\t  fi\n\t  prev=\n\tfi\n\n\tif test -n \"$library_names\" &&\n\t   { test \"$prefer_static_libs\" = no || test -z \"$old_library\"; }; then\n\t  link_against_libtool_libs=\"$link_against_libtool_libs $arg\"\n\t  if test -n \"$shlibpath_var\"; then\n\t    # Make sure the rpath contains only unique directories.\n\t    case \"$temp_rpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) temp_rpath=\"$temp_rpath $dir\" ;;\n\t    esac\n\t  fi\n\n\t  # We need an absolute path.\n\t  case \"$dir\" in\n\t  [\\\\/] | [A-Za-z]:[\\\\/]*) absdir=\"$dir\" ;;\n\t  *)\n\t    absdir=`cd \"$dir\" && pwd`\n\t    if test -z \"$absdir\"; then\n\t      $echo \"$modename: warning: cannot determine absolute directory name of \\`$dir'\" 1>&2\n\t      $echo \"$modename: passing it literally to the linker, although it might fail\" 1>&2\n\t      absdir=\"$dir\"\n\t    fi\n\t    ;;\n\t  esac\n\t  \n\t  # This is the magic to use -rpath.\n\t  # Skip directories that are in the system default run-time\n\t  # search path, unless they have been requested with -R.\n\t  case \" $sys_lib_dlsearch_path \" in\n\t  *\" $absdir \"*) ;;\n\t  *)\n\t    case \"$compile_rpath \" in\n\t    *\" $absdir \"*) ;;\n\t    *) compile_rpath=\"$compile_rpath $absdir\" \n\t    esac\n\t    ;;\n\t  esac\n\n\t  case \" $sys_lib_dlsearch_path \" in\n\t  *\" $libdir \"*) ;;\n\t  *)\n\t    case \"$finalize_rpath \" in\n\t    *\" $libdir \"*) ;;\n\t    *) finalize_rpath=\"$finalize_rpath $libdir\"\n\t    esac\n\t    ;;\n\t  esac\n\n\t  lib_linked=yes\n\t  case \"$hardcode_action\" in\n\t  immediate | unsupported)\n\t    if test \"$hardcode_direct\" = no; then\n\t      compile_command=\"$compile_command $dir/$linklib\"\n\t      deplibs=\"$deplibs $dir/$linklib\"\n\t      case \"$host\" in\n\t      *-*-cygwin* | *-*-mingw* | *-*-os2*)\n\t\tdllsearchdir=`cd \"$dir\" && pwd || echo \"$dir\"`\n\t\tif test -n \"$dllsearchpath\"; then\n\t\t  dllsearchpath=\"$dllsearchpath:$dllsearchdir\"\n\t\telse\n\t\t  dllsearchpath=\"$dllsearchdir\"\n\t\tfi\n\t\t;;\n\t      esac\n\t    elif test \"$hardcode_minus_L\" = no; then\n\t      case \"$host\" in\n\t      *-*-sunos*)\n\t\tcompile_shlibpath=\"$compile_shlibpath$dir:\"\n\t\t;;\n\t      esac\n\t      case \"$compile_command \" in\n\t      *\" -L$dir \"*) ;;\n\t      *) compile_command=\"$compile_command -L$dir\";;\n\t      esac\n\t      compile_command=\"$compile_command -l$name\"\n\t      deplibs=\"$deplibs -L$dir -l$name\"\n\t    elif test \"$hardcode_shlibpath_var\" = no; then\n\t      case \":$compile_shlibpath:\" in\n\t      *\":$dir:\"*) ;;\n\t      *) compile_shlibpath=\"$compile_shlibpath$dir:\";;\n\t      esac\n\t      compile_command=\"$compile_command -l$name\"\n\t      deplibs=\"$deplibs -l$name\"\n\t    else\n\t      lib_linked=no\n\t    fi\n\t    ;;\n\n\t  relink)\n\t    if test \"$hardcode_direct\" = yes; then\n\t      compile_command=\"$compile_command $absdir/$linklib\"\n\t      deplibs=\"$deplibs $absdir/$linklib\"\n\t    elif test \"$hardcode_minus_L\" = yes; then\n\t      case \"$compile_command \" in\n\t      *\" -L$absdir \"*) ;;\n\t      *) compile_command=\"$compile_command -L$absdir\";;\n\t      esac\n\t      compile_command=\"$compile_command -l$name\"\n\t      deplibs=\"$deplibs -L$absdir -l$name\"\n\t    elif test \"$hardcode_shlibpath_var\" = yes; then\n\t      case \":$compile_shlibpath:\" in\n\t      *\":$absdir:\"*) ;;\n\t      *) compile_shlibpath=\"$compile_shlibpath$absdir:\";;\n\t      esac\n\t      compile_command=\"$compile_command -l$name\"\n\t      deplibs=\"$deplibs -l$name\"\n\t    else\n\t      lib_linked=no\n\t    fi\n\t    ;;\n\n\t  *)\n\t    lib_linked=no\n\t    ;;\n\t  esac\n\n\t  if test \"$lib_linked\" != yes; then\n\t    $echo \"$modename: configuration error: unsupported hardcode properties\"\n\t    exit 1\n\t  fi\n\n\t  # Finalize command for both is simple: just hardcode it.\n\t  if test \"$hardcode_direct\" = yes; then\n\t    finalize_command=\"$finalize_command $libdir/$linklib\"\n\t  elif test \"$hardcode_minus_L\" = yes; then\n\t    case \"$finalize_command \" in\n\t    *\" -L$libdir \"*) ;;\n\t    *) finalize_command=\"$finalize_command -L$libdir\";;\n\t    esac\n\t    finalize_command=\"$finalize_command -l$name\"\n\t  elif test \"$hardcode_shlibpath_var\" = yes; then\n\t    case \":$finalize_shlibpath:\" in\n\t    *\":$libdir:\"*) ;;\n\t    *) finalize_shlibpath=\"$finalize_shlibpath$libdir:\";;\n\t    esac\n\t    finalize_command=\"$finalize_command -l$name\"\n\t  else\n\t    # We cannot seem to hardcode it, guess we'll fake it.\n\t    case \"$finalize_command \" in\n\t    *\" -L$dir \"*) ;;\n\t    *) finalize_command=\"$finalize_command -L$libdir\";;\n\t    esac\n\t    finalize_command=\"$finalize_command -l$name\"\n\t  fi\n\telse\n\t  # Transform directly to old archives if we don't build new libraries.\n\t  if test -n \"$pic_flag\" && test -z \"$old_library\"; then\n\t    $echo \"$modename: cannot find static library for \\`$arg'\" 1>&2\n\t    exit 1\n\t  fi\n\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test \"$hardcode_direct\" != unsupported; then\n\t    test -n \"$old_library\" && linklib=\"$old_library\"\n\t    compile_command=\"$compile_command $dir/$linklib\"\n\t    finalize_command=\"$finalize_command $dir/$linklib\"\n\t  else\n\t    case \"$compile_command \" in\n\t    *\" -L$dir \"*) ;;\n\t    *) compile_command=\"$compile_command -L$dir\";;\n\t    esac\n\t    compile_command=\"$compile_command -l$name\"\n\t    case \"$finalize_command \" in\n\t    *\" -L$dir \"*) ;;\n\t    *) finalize_command=\"$finalize_command -L$dir\";;\n\t    esac\n\t    finalize_command=\"$finalize_command -l$name\"\n\t  fi\n\tfi\n\n\t# Add in any libraries that this one depends upon.\n\tcompile_command=\"$compile_command$dependency_libs\"\n\tfinalize_command=\"$finalize_command$dependency_libs\"\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\targ=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n\tcase \"$arg\" in\n\t*[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*)\n\t  arg=\"\\\"$arg\\\"\"\n\t  ;;\n\tesac\n\t;;\n      esac\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tcompile_command=\"$compile_command $arg\"\n\tfinalize_command=\"$finalize_command $arg\"\n      fi\n    done\n\n    if test -n \"$prev\"; then\n      $echo \"$modename: the \\`$prevarg' option requires an argument\" 1>&2\n      $echo \"$help\" 1>&2\n      exit 1\n    fi\n\n    if test \"$export_dynamic\" = yes && test -n \"$export_dynamic_flag_spec\"; then\n      eval arg=\\\"$export_dynamic_flag_spec\\\"\n      compile_command=\"$compile_command $arg\"\n      finalize_command=\"$finalize_command $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    outputname=`$echo \"X$output\" | $Xsed -e 's%^.*/%%'`\n    libobjs_save=\"$libobjs\"\n\n    case \"$output\" in\n    \"\")\n      $echo \"$modename: you must specify an output file\" 1>&2\n      $echo \"$help\" 1>&2\n      exit 1\n      ;;\n\n    *.a | *.lib)\n      if test -n \"$link_against_libtool_libs\"; then\n\t$echo \"$modename: error: cannot link libtool libraries into archives\" 1>&2\n\texit 1\n      fi\n\n      if test -n \"$deplibs\"; then\n\t$echo \"$modename: warning: \\`-l' and \\`-L' are ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\t$echo \"$modename: warning: \\`-dlopen' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$rpath\"; then\n\t$echo \"$modename: warning: \\`-rpath' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$xrpath\"; then\n\t$echo \"$modename: warning: \\`-R' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$vinfo\"; then\n\t$echo \"$modename: warning: \\`-version-info' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$release\"; then\n\t$echo \"$modename: warning: \\`-release' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t$echo \"$modename: warning: \\`-export-symbols' is ignored for archives\" 1>&2\n      fi\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=\"$output\"\n      ;;\n\n    *.la)\n      # Make sure we only generate libraries of the form `libNAME.la'.\n      case \"$outputname\" in\n      lib*)\n\tname=`$echo \"X$outputname\" | $Xsed -e 's/\\.la$//' -e 's/^lib//'`\n\teval libname=\\\"$libname_spec\\\"\n\t;;\n      *)\n\tif test \"$module\" = no; then\n\t  $echo \"$modename: libtool library \\`$output' must begin with \\`lib'\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit 1\n\tfi\n\tif test \"$need_lib_prefix\" != no; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  name=`$echo \"X$outputname\" | $Xsed -e 's/\\.la$//'`\n\t  eval libname=\\\"$libname_spec\\\"\n\telse\n\t  libname=`$echo \"X$outputname\" | $Xsed -e 's/\\.la$//'`\n\tfi\n\t;;\n      esac\n\n      output_objdir=`$echo \"X$output\" | $Xsed -e 's%/[^/]*$%%'`\n      if test \"X$output_objdir\" = \"X$output\"; then\n\toutput_objdir=\"$objdir\"\n      else\n\toutput_objdir=\"$output_objdir/$objdir\"\n      fi\n\n      if test -n \"$objs\"; then\n\t$echo \"$modename: cannot build libtool library \\`$output' from non-libtool objects:$objs\" 2>&1\n\texit 1\n      fi\n\n      # How the heck are we supposed to write a wrapper for a shared library?\n      if test -n \"$link_against_libtool_libs\"; then\n\t $echo \"$modename: error: cannot link shared libraries into libtool libraries\" 1>&2\n\t exit 1\n      fi\n\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\t$echo \"$modename: warning: \\`-dlopen' is ignored for libtool libraries\" 1>&2\n      fi\n\n      set dummy $rpath\n      if test $# -gt 2; then\n\t$echo \"$modename: warning: ignoring multiple \\`-rpath's for a libtool library\" 1>&2\n      fi\n      install_libdir=\"$2\"\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test \"$build_libtool_libs\" = yes; then\n\t  # Building a libtool convenience library.\n\t  libext=al\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\tdependency_libs=\"$deplibs\"\n\n\tif test -n \"$vinfo\"; then\n\t  $echo \"$modename: warning: \\`-version-info' is ignored for convenience libraries\" 1>&2\n\tfi\n\n\tif test -n \"$release\"; then\n\t  $echo \"$modename: warning: \\`-release' is ignored for convenience libraries\" 1>&2\n\tfi\n      else\n\n\t# Parse the version information argument.\n\tIFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS=':'\n\tset dummy $vinfo 0 0 0\n\tIFS=\"$save_ifs\"\n\n\tif test -n \"$8\"; then\n\t  $echo \"$modename: too many parameters to \\`-version-info'\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit 1\n\tfi\n\n\tcurrent=\"$2\"\n\trevision=\"$3\"\n\tage=\"$4\"\n\n\t# Check that each of the things are valid numbers.\n\tcase \"$current\" in\n\t0 | [1-9] | [1-9][0-9]*) ;;\n\t*)\n\t  $echo \"$modename: CURRENT \\`$current' is not a nonnegative integer\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit 1\n\t  ;;\n\tesac\n\n\tcase \"$revision\" in\n\t0 | [1-9] | [1-9][0-9]*) ;;\n\t*)\n\t  $echo \"$modename: REVISION \\`$revision' is not a nonnegative integer\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit 1\n\t  ;;\n\tesac\n\n\tcase \"$age\" in\n\t0 | [1-9] | [1-9][0-9]*) ;;\n\t*)\n\t  $echo \"$modename: AGE \\`$age' is not a nonnegative integer\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit 1\n\t  ;;\n\tesac\n\n\tif test $age -gt $current; then\n\t  $echo \"$modename: AGE \\`$age' is greater than the current interface number \\`$current'\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit 1\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase \"$version_type\" in\n\tnone) ;;\n\n\tirix)\n\t  major=`expr $current - $age + 1`\n\t  versuffix=\"$major.$revision\"\n\t  verstring=\"sgi$major.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test $loop != 0; do\n\t    iface=`expr $revision - $loop`\n\t    loop=`expr $loop - 1`\n\t    verstring=\"sgi$major.$iface:$verstring\"\n\t  done\n\t  ;;\n\n\tlinux)\n\t  major=.`expr $current - $age`\n\t  versuffix=\"$major.$age.$revision\"\n\t  ;;\n\n\tosf)\n\t  major=`expr $current - $age`\n\t  versuffix=\".$current.$age.$revision\"\n\t  verstring=\"$current.$age.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test $loop != 0; do\n\t    iface=`expr $current - $loop`\n\t    loop=`expr $loop - 1`\n\t    verstring=\"$verstring:${iface}.0\"\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  verstring=\"$verstring:${current}.0\"\n\t  ;;\n\n\tsunos)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\"\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\";\n\t  ;;\n\n\tfreebsd-elf)\n\t  major=\".$current\"\n\t  versuffix=\".$current\";\n\t  ;;\n\n\twindows)\n\t  # Like Linux, but with '-' rather than '.', since we only\n\t  # want one extension on Windows 95.\n\t  major=`expr $current - $age`\n\t  versuffix=\"-$major-$age-$revision\"\n\t  ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  major=`expr $current - $age`\n\t  versuffix=\".$major.$age.$revision\"\n\t  # Darwin ld doesn't like 0 for these options...\n\t  minor_current=`expr $current + 1`\n\t  verstring=\"-compatibility_version $major -current_version $major.$age.$revision\"\n\t  major=\".$major\"\n\t  ;;\n\n\t*)\n\t  $echo \"$modename: unknown library version type \\`$version_type'\" 1>&2\n\t  echo \"Fatal configuration error.  See the $PACKAGE docs for more information.\" 1>&2\n\t  exit 1\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  verstring=\"0.0\"\n\t  if test \"$need_version\" = no; then\n\t    versuffix=\n\t  else\n\t    versuffix=\".0.0\"\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test \"$avoid_version\" = yes && test \"$need_version\" = no; then\n\t  major=\n\t  versuffix=\n\t  verstring=\"\"\n\tfi\n\t\n\t# Check to see if the archive will have undefined symbols.\n\tif test \"$allow_undefined\" = yes; then\n\t  if test \"$allow_undefined_flag\" = unsupported; then\n\t    $echo \"$modename: warning: undefined symbols not allowed in $host shared libraries\" 1>&2\n\t    build_libtool_libs=no\n\t    build_old_libs=yes\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=\"$no_undefined_flag\"\n\tfi\n\n\tdependency_libs=\"$deplibs\"\n\tcase \"$host\" in\n\t*-*-cygwin* | *-*-mingw* | *-*-os2* | *-*-beos*)\n\t  # these systems don't actually have a c library (as such)!\n\t  ;;\n        *-*-rhapsody* | *-*-darwin1.[012])\n\t  # Rhapsody C library is in the System framework\n\t  deplibs=\"$deplibs -framework System\"\n\t  ;;\n\t*)\n\t  # Add libc to deplibs on all other systems.\n\t  deplibs=\"$deplibs -lc\"\n\t  ;;\n\tesac\n      fi\n\n      # Create the output directory, or remove our outputs if we need to.\n      if test -d $output_objdir; then\n\t$show \"${rm}r $output_objdir/$outputname $output_objdir/$libname.* $output_objdir/${libname}${release}.*\"\n\t$run ${rm}r $output_objdir/$outputname $output_objdir/$libname.* $output_objdir/${libname}${release}.*\n      else\n\t$show \"$mkdir $output_objdir\"\n\t$run $mkdir $output_objdir\n\tstatus=$?\n\tif test $status -ne 0 && test ! -d $output_objdir; then\n\t  exit $status\n\tfi\n      fi\n\n      # Now set the variables for building old libraries.\n      if test \"$build_old_libs\" = yes && test \"$build_libtool_libs\" != convenience ; then\n\toldlibs=\"$oldlibs $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$echo \"X$libobjs\" | $SP2NL | $Xsed -e '/\\.'${libext}'$/d' -e \"$lo2o\" | $NL2SP`\n      fi\n\n      if test \"$build_libtool_libs\" = yes; then\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\"\"\n\tversuffix=\"\"\n\tmajor=\"\"\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase \"$deplibs_check_method\" in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behaviour.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $rm conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $rm conftest\n\t  $CC -o conftest conftest.c $deplibs\n\t  if test $? -eq 0 ; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      name=\"`expr X$i : 'X-l\\(.*\\)'`\"\n\t      # If $name is empty we are operating on a -L argument.\n\t      if test \"$name\" != \"\" ; then\n\t\tlibname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t\tdeplib_matches=`eval \\\\$echo \\\"$library_names_spec\\\"`\n\t\tset dummy $deplib_matches\n\t\tdeplib_match=$2\n\t\tif test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t  newdeplibs=\"$newdeplibs $i\"\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  echo \"*** Warning: This library needs some functionality provided by $i.\"\n\t\t  echo \"*** I have the capability to make that library automatically link in when\"\n\t\t  echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t  echo \"*** shared version of the library, which you do not appear to have.\"\n\t\tfi\n\t      else\n\t\tnewdeplibs=\"$newdeplibs $i\"\n\t      fi\n\t    done\n\t  else\n\t    # Error occured in the first compile.  Let's try to salvage the situation:\n\t    # Compile a seperate program for each library.\n\t    for i in $deplibs; do\n\t      name=\"`expr X$i : 'X-l\\(.*\\)'`\"\n\t     # If $name is empty we are operating on a -L argument.\n\t      if test \"$name\" != \"\" ; then\n\t\t$rm conftest\n\t\t$CC -o conftest conftest.c $i\n\t\t# Did it work?\n\t\tif test $? -eq 0 ; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  libname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t\t  deplib_matches=`eval \\\\$echo \\\"$library_names_spec\\\"`\n\t\t  set dummy $deplib_matches\n\t\t  deplib_match=$2\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t    newdeplibs=\"$newdeplibs $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    echo\n\t\t    echo \"*** Warning: This library needs some functionality provided by $i.\"\n\t\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    echo \"*** shared version of the library, which you do not appear to have.\"\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  echo \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  echo \"***  make it link in!  You will probably need to install it or some\"\n\t\t  echo \"*** library that it depends on before this library will be fully\"\n\t\t  echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t      else\n\t\tnewdeplibs=\"$newdeplibs $i\"\n\t      fi\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method\n\t  file_magic_regex=\"`expr \\\"$deplibs_check_method\\\" : \\\"$2 \\(.*\\)\\\"`\"\n\t  for a_deplib in $deplibs; do\n\t    name=\"`expr X$a_deplib : 'X-l\\(.*\\)'`\"\n\t    # If $name is empty we are operating on a -L argument.\n\t    if test \"$name\" != \"\" ; then\n\t      libname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t      for i in $lib_search_path; do\n\t\t    potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t    for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null \\\n\t\t\t | grep \" -> \" >/dev/null; then\n\t\t\tcontinue \n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=\"$potent_lib\"\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | sed 's/.* -> //'`\n\t\t\tcase \"$potliblink\" in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=\"$potliblink\";;\n\t\t\t*) potlib=`$echo \"X$potlib\" | $Xsed -e 's,[^/]*$,,'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval $file_magic_cmd \\\"\\$potlib\\\" 2>/dev/null \\\n\t\t\t | sed 10q \\\n\t\t\t | egrep \"$file_magic_regex\" > /dev/null; then\n\t\t\tnewdeplibs=\"$newdeplibs $a_deplib\"\n\t\t\ta_deplib=\"\"\n\t\t\tbreak 2\n\t\t      fi\n\t\t    done\n\t      done\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\techo \"*** Warning: This library needs some functionality provided by $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have.\"\n\t      fi\n\t    else\n\t      # Add a -L argument.\n\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t    fi\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\"\"\n\t  if $echo \"X $deplibs\" | $Xsed -e 's/ -lc$//' \\\n\t       -e 's/ -[LR][^ ]*//g' -e 's/[ \t]//g' |\n\t     grep . >/dev/null; then\n\t    echo\n\t    if test \"X$deplibs_check_method\" = \"Xnone\"; then\n\t      echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t  fi\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tif test \"$droppeddeps\" = yes; then\n\t  if test \"$module\" = yes; then\n\t    echo\n\t    echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    echo \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    echo \"*** a static module, that should work as long as the dlopening\"\n\t    echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      echo\n\t      echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      echo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t      echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      echo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test \"$build_old_libs\" = no; then\n\t      oldlibs=\"$output_objdir/$libname.$libext\"\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    echo \"*** automatically added whenever a program is linked with this library\"\n\t    echo \"*** or is declared to -dlopen it.\"\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n      \n      # Test again, we may have decided not to build it any more\n      if test \"$build_libtool_libs\" = yes; then\n\t# Get the real and link names of the library.\n\teval library_names=\\\"$library_names_spec\\\"\n\tset dummy $library_names\n\trealname=\"$2\"\n\tshift; shift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval soname=\\\"$soname_spec\\\"\n\telse\n\t  soname=\"$realname\"\n\tfi\n\n\tlib=\"$output_objdir/$realname\"\n\tfor link\n\tdo\n\t  linknames=\"$linknames $link\"\n\tdone\n\n\t# Ensure that we have .o objects for linkers which dislike .lo\n\t# (e.g. aix) in case we are running --disable-static\n\tfor obj in $libobjs; do\n\t  xdir=`$echo \"X$obj\" | $Xsed -e 's%/[^/]*$%%'`\n\t  if test \"X$xdir\" = \"X$obj\"; then\n\t    xdir=\".\"\n\t  else\n\t    xdir=\"$xdir\"\n\t  fi\n\t  baseobj=`$echo \"X$obj\" | $Xsed -e 's%^.*/%%'`\n\t  oldobj=`$echo \"X$baseobj\" | $Xsed -e \"$lo2o\"`\n\t  if test ! -f $xdir/$oldobj; then\n\t    $show \"(cd $xdir && ${LN_S} $baseobj $oldobj)\"\n\t    $run eval '(cd $xdir && ${LN_S} $baseobj $oldobj)' || exit $?\n\t  fi\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$echo \"X$libobjs\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test \"$always_export_symbols\" = yes || test -n \"$export_symbols_regex\"; then\n\t    $show \"generating symbol list for \\`$libname.la'\"\n\t    export_symbols=\"$output_objdir/$libname.exp\"\n\t    $run $rm $export_symbols\n\t    eval cmds=\\\"$export_symbols_cmds\\\"\n\t    IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $cmds; do\n\t      IFS=\"$save_ifs\"\n\t      $show \"$cmd\"\n\t      $run eval \"$cmd\" || exit $?\n\t    done\n\t    IFS=\"$save_ifs\"\n\t    if test -n \"$export_symbols_regex\"; then\n\t      $show \"egrep -e \\\"$export_symbols_regex\\\" \\\"$export_symbols\\\" > \\\"${export_symbols}T\\\"\"\n\t      $run eval 'egrep -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      $show \"$mv \\\"${export_symbols}T\\\" \\\"$export_symbols\\\"\"\n\t      $run eval '$mv \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $run eval '$echo \"X$include_expsyms\" | $SP2NL >> \"$export_symbols\"'\n\tfi\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t  else\n\t    gentop=\"$output_objdir/${outputname}x\"\n\t    $show \"${rm}r $gentop\"\n\t    $run ${rm}r \"$gentop\"\n\t    $show \"mkdir $gentop\"\n\t    $run mkdir \"$gentop\"\n\t    status=$?\n\t    if test $status -ne 0 && test ! -d \"$gentop\"; then\n\t      exit $status\n\t    fi\n\t    generated=\"$generated $gentop\"\n\n\t    for xlib in $convenience; do\n\t      # Extract the objects.\n\t      case \"$xlib\" in\n\t      [\\\\/]* | [A-Za-z]:[\\\\/]*) xabs=\"$xlib\" ;;\n\t      *) xabs=`pwd`\"/$xlib\" ;;\n\t      esac\n\t      xlib=`$echo \"X$xlib\" | $Xsed -e 's%^.*/%%'`\n\t      xdir=\"$gentop/$xlib\"\n\n\t      $show \"${rm}r $xdir\"\n\t      $run ${rm}r \"$xdir\"\n\t      $show \"mkdir $xdir\"\n\t      $run mkdir \"$xdir\"\n\t      status=$?\n\t      if test $status -ne 0 && test ! -d \"$xdir\"; then\n\t\texit $status\n\t      fi\n\t      $show \"(cd $xdir && $AR x $xabs)\"\n\t      $run eval \"(cd \\$xdir && $AR x \\$xabs)\" || exit $?\n\n\t      libobjs=\"$libobjs \"`find $xdir -name \\*.o -print -o -name \\*.lo -print | $NL2SP`\n\t    done\n\t  fi\n\tfi\n\n\tif test \"$thread_safe\" = yes && test -n \"$thread_safe_flag_spec\"; then\n\t  eval flag=\\\"$thread_safe_flag_spec\\\"\n\t  linkopts=\"$linkopts $flag\"\n\tfi\n\n\t# Do each of the archive commands.\n\tif test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t  eval cmds=\\\"$archive_expsym_cmds\\\"\n\telse\n\t  if test \"x$verstring\" = \"x0.0\"; then\n\t    tmp_verstring=\n\t  else\n\t    tmp_verstring=\"$verstring\"\n\t  fi\n\t  eval cmds=\\\"$archive_cmds\\\"\n\tfi\n\tIFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=\"$save_ifs\"\n\t  $show \"$cmd\"\n\t  $run eval \"$cmd\" || exit $?\n\tdone\n\tIFS=\"$save_ifs\"\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    $show \"(cd $output_objdir && $rm $linkname && $LN_S $realname $linkname)\"\n\t    $run eval '(cd $output_objdir && $rm $linkname && $LN_S $realname $linkname)' || exit $?\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test \"$module\" = yes || test \"$export_dynamic\" = yes; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=\"$soname\"\n\tfi\n      fi\n      ;;\n\n    *.lo | *.o | *.obj)\n      if test -n \"$link_against_libtool_libs\"; then\n\t$echo \"$modename: error: cannot link libtool libraries into objects\" 1>&2\n\texit 1\n      fi\n\n      if test -n \"$deplibs\"; then\n\t$echo \"$modename: warning: \\`-l' and \\`-L' are ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\t$echo \"$modename: warning: \\`-dlopen' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$rpath\"; then\n\t$echo \"$modename: warning: \\`-rpath' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$xrpath\"; then\n\t$echo \"$modename: warning: \\`-R' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$vinfo\"; then\n\t$echo \"$modename: warning: \\`-version-info' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$release\"; then\n\t$echo \"$modename: warning: \\`-release' is ignored for objects\" 1>&2\n      fi\n\n      case \"$output\" in\n      *.lo)\n\tif test -n \"$objs\"; then\n\t  $echo \"$modename: cannot build library object \\`$output' from non-libtool objects\" 1>&2\n\t  exit 1\n\tfi\n\tlibobj=\"$output\"\n\tobj=`$echo \"X$output\" | $Xsed -e \"$lo2o\"`\n\t;;\n      *)\n\tlibobj=\n\tobj=\"$output\"\n\t;;\n      esac\n\n      # Delete the old objects.\n      $run $rm $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # reload_cmds runs $LD directly, so let us get rid of\n      # -Wl from whole_archive_flag_spec\n      wl= \n\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval reload_conv_objs=\\\"\\$reload_objs $whole_archive_flag_spec\\\"\n\telse\n\t  gentop=\"$output_objdir/${obj}x\"\n\t  $show \"${rm}r $gentop\"\n\t  $run ${rm}r \"$gentop\"\n\t  $show \"mkdir $gentop\"\n\t  $run mkdir \"$gentop\"\n\t  status=$?\n\t  if test $status -ne 0 && test ! -d \"$gentop\"; then\n\t    exit $status\n\t  fi\n\t  generated=\"$generated $gentop\"\n\n\t  for xlib in $convenience; do\n\t    # Extract the objects.\n\t    case \"$xlib\" in\n\t    [\\\\/]* | [A-Za-z]:[\\\\/]*) xabs=\"$xlib\" ;;\n\t    *) xabs=`pwd`\"/$xlib\" ;;\n\t    esac\n\t    xlib=`$echo \"X$xlib\" | $Xsed -e 's%^.*/%%'`\n\t    xdir=\"$gentop/$xlib\"\n\n\t    $show \"${rm}r $xdir\"\n\t    $run ${rm}r \"$xdir\"\n\t    $show \"mkdir $xdir\"\n\t    $run mkdir \"$xdir\"\n\t    status=$?\n\t    if test $status -ne 0 && test ! -d \"$xdir\"; then\n\t      exit $status\n\t    fi\n\t    $show \"(cd $xdir && $AR x $xabs)\"\n\t    $run eval \"(cd \\$xdir && $AR x \\$xabs)\" || exit $?\n\n\t    reload_conv_objs=\"$reload_objs \"`find $xdir -name \\*.o -print -o -name \\*.lo -print | $NL2SP`\n\t  done\n\tfi\n      fi\n\n      # Create the old-style object.\n      reload_objs=\"$objs \"`$echo \"X$libobjs\" | $SP2NL | $Xsed -e '/\\.'${libext}$'/d' -e '/\\.lib$/d' -e \"$lo2o\" | $NL2SP`\" $reload_conv_objs\"\n\n      output=\"$obj\"\n      eval cmds=\\\"$reload_cmds\\\"\n      IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n      for cmd in $cmds; do\n\tIFS=\"$save_ifs\"\n\t$show \"$cmd\"\n\t$run eval \"$cmd\" || exit $?\n      done\n      IFS=\"$save_ifs\"\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  $show \"${rm}r $gentop\"\n\t  $run ${rm}r $gentop\n\tfi\n\n\texit 0\n      fi\n\n      if test \"$build_libtool_libs\" != yes; then\n\tif test -n \"$gentop\"; then\n\t  $show \"${rm}r $gentop\"\n\t  $run ${rm}r $gentop\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t$show \"echo timestamp > $libobj\"\n\t$run eval \"echo timestamp > $libobj\" || exit $?\n\texit 0\n      fi\n\n      if test -n \"$pic_flag\"; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=\"$libobj\"\n\teval cmds=\\\"$reload_cmds\\\"\n\tIFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=\"$save_ifs\"\n\t  $show \"$cmd\"\n\t  $run eval \"$cmd\" || exit $?\n\tdone\n\tIFS=\"$save_ifs\"\n      else\n\t# Just create a symlink.\n\t$show $rm $libobj\n\t$run $rm $libobj\n\txdir=`$echo \"X$libobj\" | $Xsed -e 's%/[^/]*$%%'`\n\tif test \"X$xdir\" = \"X$libobj\"; then\n\t  xdir=\".\"\n\telse\n\t  xdir=\"$xdir\"\n\tfi\n\tbaseobj=`$echo \"X$libobj\" | $Xsed -e 's%^.*/%%'`\n\toldobj=`$echo \"X$baseobj\" | $Xsed -e \"$lo2o\"`\n\t$show \"(cd $xdir && $LN_S $oldobj $baseobj)\"\n\t$run eval '(cd $xdir && $LN_S $oldobj $baseobj)' || exit $?\n      fi\n\n      if test -n \"$gentop\"; then\n\t$show \"${rm}r $gentop\"\n\t$run ${rm}r $gentop\n      fi\n\n      exit 0\n      ;;\n\n    # Anything else should be a program.\n    *)\n      if test -n \"$vinfo\"; then\n\t$echo \"$modename: warning: \\`-version-info' is ignored for programs\" 1>&2\n      fi\n\n      if test -n \"$release\"; then\n\t$echo \"$modename: warning: \\`-release' is ignored for programs\" 1>&2\n      fi\n\n      if test \"$preload\" = yes; then\n\tif test \"$dlopen\" = unknown && test \"$dlopen_self\" = unknown &&\n\t   test \"$dlopen_self_static\" = unknown; then\n\t  $echo \"$modename: warning: \\`AC_LIBTOOL_DLOPEN' not used. Assuming no dlopen support.\"\n\tfi \n      fi\n    \n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$compile_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) compile_rpath=\"$compile_rpath $libdir\" ;;\n\t  esac\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_rpath=\"$finalize_rpath $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case \"$hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator\" in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\thardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    rpath=\"$rpath $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) perm_rpath=\"$perm_rpath $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      compile_rpath=\"$rpath\"\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case \"$hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator\" in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\thardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    rpath=\"$rpath $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_perm_rpath=\"$finalize_perm_rpath $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      finalize_rpath=\"$rpath\"\n\n      output_objdir=`$echo \"X$output\" | $Xsed -e 's%/[^/]*$%%'`\n      if test \"X$output_objdir\" = \"X$output\"; then\n\toutput_objdir=\"$objdir\"\n      else\n\toutput_objdir=\"$output_objdir/$objdir\"\n      fi\n\n      # Create the binary in the object directory, then wrap it.\n      if test ! -d $output_objdir; then\n\t$show \"$mkdir $output_objdir\"\n\t$run $mkdir $output_objdir\n\tstatus=$?\n\tif test $status -ne 0 && test ! -d $output_objdir; then\n\t  exit $status\n\tfi\n      fi\n\n      if test -n \"$libobjs\" && test \"$build_old_libs\" = yes; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$echo \"X$compile_command\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$echo \"X$finalize_command\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n      fi\n\n      dlsyms=\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tif test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\t  dlsyms=\"${outputname}S.c\"\n\telse\n\t  $echo \"$modename: not configured to extract global symbols from dlpreopened files\" 1>&2\n\tfi\n      fi\n\n      if test -n \"$dlsyms\"; then\n\tcase \"$dlsyms\" in\n\t\"\") ;;\n\t*.c)\n\t  # Discover the nlist of each of the dlfiles.\n\t  nlist=\"$output_objdir/${outputname}.nm\"\n\n\t  $show \"$rm $nlist ${nlist}S ${nlist}T\"\n\t  $run $rm \"$nlist\" \"${nlist}S\" \"${nlist}T\"\n\n\t  # Parse the name list into a source file.\n\t  $show \"creating $output_objdir/$dlsyms\"\n\n\t  test -z \"$run\" && $echo > \"$output_objdir/$dlsyms\" \"\\\n/* $dlsyms - symbol resolution table for \\`$outputname' dlsym emulation. */\n/* Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n/* Prevent the only kind of declaration conflicts we can make. */\n#define lt_preloaded_symbols some_other_symbol\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\t  if test \"$dlself\" = yes; then\n\t    $show \"generating symbol list for \\`$output'\"\n\n\t    test -z \"$run\" && $echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t    # Add our own program objects to the symbol list.\n\t    progfiles=`$echo \"X$objs\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n\t    for arg in $progfiles; do\n\t      $show \"extracting global C symbols from \\`$arg'\"\n\t      $run eval \"$NM $arg | $global_symbol_pipe >> '$nlist'\"\n\t    done\n\n\t    if test -n \"$exclude_expsyms\"; then\n\t      $run eval 'egrep -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T'\n\t      $run eval '$mv \"$nlist\"T \"$nlist\"'\n\t    fi\n\t    \n\t    if test -n \"$export_symbols_regex\"; then\n\t      $run eval 'egrep -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T'\n\t      $run eval '$mv \"$nlist\"T \"$nlist\"'\n\t    fi\n\n\t    # Prepare the list of exported symbols\n\t    if test -z \"$export_symbols\"; then\n\t      export_symbols=\"$output_objdir/$output.exp\"\n\t      $run $rm $export_symbols\n\t      $run eval \"sed -n -e '/^: @PROGRAM@$/d' -e 's/^.* \\(.*\\)$/\\1/p' \"'< \"$nlist\" > \"$export_symbols\"'\n\t    else\n\t      $run eval \"sed -e 's/\\([][.*^$]\\)/\\\\\\1/g' -e 's/^/ /' -e 's/$/$/'\"' < \"$export_symbols\" > \"$output_objdir/$output.exp\"'\n\t      $run eval 'grep -f \"$output_objdir/$output.exp\" < \"$nlist\" > \"$nlist\"T'\n\t      $run eval 'mv \"$nlist\"T \"$nlist\"'\n\t    fi\n\t  fi\n\n\t  for arg in $dlprefiles; do\n\t    $show \"extracting global C symbols from \\`$arg'\"\n\t    name=`echo \"$arg\" | sed -e 's%^.*/%%'`\n\t    $run eval 'echo \": $name \" >> \"$nlist\"'\n\t    $run eval \"$NM $arg | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -z \"$run\"; then\n\t    # Make sure we have at least an empty file.\n\t    test -f \"$nlist\" || : > \"$nlist\"\n\n\t    if test -n \"$exclude_expsyms\"; then\n\t      egrep -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t      $mv \"$nlist\"T \"$nlist\"\n\t    fi\n\n\t    # Try sorting and uniquifying the output.\n\t    if grep -v \"^: \" < \"$nlist\" | sort +2 | uniq > \"$nlist\"S; then\n\t      :\n\t    else\n\t      grep -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t    fi\n\n\t    if test -f \"$nlist\"S; then\n\t      eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$dlsyms\"'\n\t    else\n\t      echo '/* NONE */' >> \"$output_objdir/$dlsyms\"\n\t    fi\n\n\t    $echo >> \"$output_objdir/$dlsyms\" \"\\\n\n#undef lt_preloaded_symbols\n\n#if defined (__STDC__) && __STDC__\n# define lt_ptr_t void *\n#else\n# define lt_ptr_t char *\n# define const\n#endif\n\n/* The mapping between symbol names and symbols. */\nconst struct {\n  const char *name;\n  lt_ptr_t address;\n}\nlt_preloaded_symbols[] =\n{\\\n\"\n\n\t    sed -n -e 's/^: \\([^ ]*\\) $/  {\\\"\\1\\\", (lt_ptr_t) 0},/p' \\\n\t\t-e 's/^. \\([^ ]*\\) \\([^ ]*\\)$/  {\"\\2\", (lt_ptr_t) \\&\\2},/p' \\\n\t\t  < \"$nlist\" >> \"$output_objdir/$dlsyms\"\n\n\t    $echo >> \"$output_objdir/$dlsyms\" \"\\\n  {0, (lt_ptr_t) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t  fi\n\n\t  pic_flag_for_symtable=\n\t  case \"$host\" in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    case \"$compile_command \" in\n\t    *\" -static \"*) ;;\n\t    *) pic_flag_for_symtable=\" $pic_flag -DPIC -DFREEBSD_WORKAROUND\";;\n\t    esac;;\n\t  *-*-hpux*)\n\t    case \"$compile_command \" in\n\t    *\" -static \"*) ;;\n\t    *) pic_flag_for_symtable=\" $pic_flag -DPIC\";;\n\t    esac\n\t  esac\n\n\t  # Now compile the dynamic symbol file.\n\t  $show \"(cd $output_objdir && $CC -c$no_builtin_flag$pic_flag_for_symtable \\\"$dlsyms\\\")\"\n\t  $run eval '(cd $output_objdir && $CC -c$no_builtin_flag$pic_flag_for_symtable \"$dlsyms\")' || exit $?\n\n\t  # Clean up the generated files.\n\t  $show \"$rm $output_objdir/$dlsyms $nlist ${nlist}S ${nlist}T\"\n\t  $run $rm \"$output_objdir/$dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\"\n\n\t  # Transform the symbol file into the correct name.\n\t  compile_command=`$echo \"X$compile_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%\"`\n\t  finalize_command=`$echo \"X$finalize_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%\"`\n\t  ;;\n\t*)\n\t  $echo \"$modename: unknown suffix for \\`$dlsyms'\" 1>&2\n\t  exit 1\n\t  ;;\n\tesac\n      else\n\t# We keep going just in case the user didn't refer to\n\t# lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n\t# really was required.\n\n\t# Nullify the symbol file.\n\tcompile_command=`$echo \"X$compile_command\" | $Xsed -e \"s% @SYMFILE@%%\"`\n\tfinalize_command=`$echo \"X$finalize_command\" | $Xsed -e \"s% @SYMFILE@%%\"`\n      fi\n\n      if test -z \"$link_against_libtool_libs\" || test \"$build_libtool_libs\" != yes; then\n\t# Replace the output file specification.\n\tcompile_command=`$echo \"X$compile_command\" | $Xsed -e 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=\"$compile_command$compile_rpath\"\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\t$show \"$link_command\"\n\t$run eval \"$link_command\"\n\tstatus=$?\n\t\n\t# Delete the generated files.\n\tif test -n \"$dlsyms\"; then\n\t  $show \"$rm $output_objdir/${outputname}S.${objext}\"\n\t  $run $rm \"$output_objdir/${outputname}S.${objext}\"\n\tfi\n\n\texit $status\n      fi\n\n      if test -n \"$shlibpath_var\"; then\n\t# We should set the shlibpath_var\n\trpath=\n\tfor dir in $temp_rpath; do\n\t  case \"$dir\" in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*)\n\t    # Absolute path.\n\t    rpath=\"$rpath$dir:\"\n\t    ;;\n\t  *)\n\t    # Relative path: add a thisdir entry.\n\t    rpath=\"$rpath\\$thisdir/$dir:\"\n\t    ;;\n\t  esac\n\tdone\n\ttemp_rpath=\"$rpath\"\n      fi\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    rpath=\"$rpath$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    rpath=\"$rpath$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test \"$hardcode_action\" = relink; then\n\t# Fast installation is not supported\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\trelink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\t\n\t$echo \"$modename: warning: this platform does not like uninstalled shared libraries\" 1>&2\n\t$echo \"$modename: \\`$output' will be relinked during installation\" 1>&2\n      else\n\tif test \"$fast_install\" != no; then\n\t  link_command=\"$finalize_var$compile_command$finalize_rpath\"\n\t  if test \"$fast_install\" = yes; then\n\t    relink_command=`$echo \"X$compile_var$compile_command$compile_rpath\" | $Xsed -e 's%@OUTPUT@%\\$progdir/\\$file%g'`\n\t  else\n\t    # fast_install is set to needless\n\t    relink_command=\n\t  fi\n\telse\n\t  link_command=\"$compile_var$compile_command$compile_rpath\"\n\t  relink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\tfi\n      fi\n\n      # Replace the output file specification.\n      link_command=`$echo \"X$link_command\" | $Xsed -e 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n      \n      # Delete the old output files.\n      $run $rm $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      $show \"$link_command\"\n      $run eval \"$link_command\" || exit $?\n\n      # Now create the wrapper script.\n      $show \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\trelink_command=`$echo \"X$relink_command\" | $Xsed -e \"$sed_quote_subst\"`\n      fi\n\n      # Quote $echo for shipping.\n      if test \"X$echo\" = \"X$SHELL $0 --fallback-echo\"; then\n\tcase \"$0\" in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) qecho=\"$SHELL $0 --fallback-echo\";;\n\t*) qecho=\"$SHELL `pwd`/$0 --fallback-echo\";;\n\tesac\n\tqecho=`$echo \"X$qecho\" | $Xsed -e \"$sed_quote_subst\"`\n      else\n\tqecho=`$echo \"X$echo\" | $Xsed -e \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if our run command is non-null.\n      if test -z \"$run\"; then\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) output=`echo $output|sed 's,.exe$,,'` ;;\n\tesac\n\t$rm $output\n\ttrap \"$rm $output; exit 1\" 1 2 15\n\n\t$echo > $output \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed='sed -e 1s/^X//'\nsed_quote_subst='$sed_quote_subst'\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\nif test \\\"\\${CDPATH+set}\\\" = set; then CDPATH=:; export CDPATH; fi\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variable:\n  link_against_libtool_libs='$link_against_libtool_libs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$echo are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    echo=\\\"$qecho\\\"\n    file=\\\"\\$0\\\"\n    # Make sure echo works.\n    if test \\\"X\\$1\\\" = X--no-reexec; then\n      # Discard the --no-reexec flag, and continue.\n      shift\n    elif test \\\"X\\`(\\$echo '\\t') 2>/dev/null\\`\\\" = 'X\\t'; then\n      # Yippee, \\$echo works!\n      :\n    else\n      # Restart under the correct shell, and then maybe \\$echo will work.\n      exec $SHELL \\\"\\$0\\\" --no-reexec \\${1+\\\"\\$@\\\"}\n    fi\n  fi\\\n\"\n\t$echo >> $output \"\\\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$echo \\\"X\\$file\\\" | \\$Xsed -e 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | sed -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$echo \\\"X\\$file\\\" | \\$Xsed -e 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\/]* | [A-Za-z]:[\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$echo \\\"X\\$file\\\" | \\$Xsed -e 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | sed -n 's/.*-> //p'\\`\n  done\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test \"$fast_install\" = yes; then\n\t  echo >> $output \"\\\n  program=lt-'$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n  \n  if test ! -f \\\"\\$progdir/\\$program\\\" || \\\\\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | sed 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $mkdir \\\"\\$progdir\\\"\n    else\n      $rm \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  echo >> $output \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if (cd \\\"\\$thisdir\\\" && eval \\$relink_command); then :\n      else\n\t$rm \\\"\\$progdir/\\$file\\\"\n\texit 1\n      fi\n    fi\n\n    $mv \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $rm \\\"\\$progdir/\\$program\\\";\n      $mv \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $rm \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  echo >> $output \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\techo >> $output \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# Export our shlibpath_var if we have one.\n\tif test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $echo >> $output \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$echo \\\"X\\$$shlibpath_var\\\" | \\$Xsed -e 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t# fixup the dll searchpath if we need to.\n\tif test -n \"$dllsearchpath\"; then\n\t  $echo >> $output \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t$echo >> $output \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n\"\n\tcase $host in\n\t  # win32 systems need to use the prog path for dll\n\t  # lookup to work\n\t*-*-cygwin*)\n\t  $echo >> $output \"\\\n      exec \\$progdir/\\$program \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\n\t# Backslashes separate directories on plain windows\n\t*-*-mingw | *-*-os2*)\n\t  $echo >> $output \"\\\n      exec \\$progdir\\\\\\\\\\$program \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\n\t*)\n\t  $echo >> $output \"\\\n      # Export the path to the program.\n      PATH=\\\"\\$progdir:\\$PATH\\\"\n      export PATH\n\n      exec \\$program \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\tesac\n\t$echo >> $output \"\\\n      \\$echo \\\"\\$0: cannot exec \\$program \\${1+\\\"\\$@\\\"}\\\"\n      exit 1\n    fi\n  else\n    # The program doesn't exist.\n    \\$echo \\\"\\$0: error: \\$progdir/\\$program does not exist\\\" 1>&2\n    \\$echo \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    echo \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit 1\n  fi\nfi\\\n\"\n\tchmod +x $output\n      fi\n      exit 0\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      if test \"$build_libtool_libs\" = convenience; then\n\toldobjs=\"$libobjs_save\"\n\taddlibs=\"$convenience\"\n\tbuild_libtool_libs=no\n      else\n\tif test \"$build_libtool_libs\" = module; then\n\t  oldobjs=\"$libobjs_save\"\n\t  build_libtool_libs=no\n\telse\n\t  oldobjs=\"$objs \"`$echo \"X$libobjs_save\" | $SP2NL | $Xsed -e '/\\.'${libext}'$/d' -e '/\\.lib$/d' -e \"$lo2o\" | $NL2SP`\n\tfi\n\taddlibs=\"$old_convenience\"\n      fi\n\n      if test -n \"$addlibs\"; then\n\tgentop=\"$output_objdir/${outputname}x\"\n\t$show \"${rm}r $gentop\"\n\t$run ${rm}r \"$gentop\"\n\t$show \"mkdir $gentop\"\n\t$run mkdir \"$gentop\"\n\tstatus=$?\n\tif test $status -ne 0 && test ! -d \"$gentop\"; then\n\t  exit $status\n\tfi\n\tgenerated=\"$generated $gentop\"\n\t  \n\t# Add in members from convenience archives.\n\tfor xlib in $addlibs; do\n\t  # Extract the objects.\n\t  case \"$xlib\" in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) xabs=\"$xlib\" ;;\n\t  *) xabs=`pwd`\"/$xlib\" ;;\n\t  esac\n\t  xlib=`$echo \"X$xlib\" | $Xsed -e 's%^.*/%%'`\n\t  xdir=\"$gentop/$xlib\"\n\n\t  $show \"${rm}r $xdir\"\n\t  $run ${rm}r \"$xdir\"\n\t  $show \"mkdir $xdir\"\n\t  $run mkdir \"$xdir\"\n\t  status=$?\n\t  if test $status -ne 0 && test ! -d \"$xdir\"; then\n\t    exit $status\n\t  fi\n\t  $show \"(cd $xdir && $AR x $xabs)\"\n\t  $run eval \"(cd \\$xdir && $AR x \\$xabs)\" || exit $?\n\n\t  oldobjs=\"$oldobjs \"`find $xdir -name \\*.${objext} -print -o -name \\*.lo -print | $NL2SP`\n\tdone\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test \"$build_libtool_libs\" = yes; then\n\teval cmds=\\\"$old_archive_from_new_cmds\\\"\n      else\n\t# Ensure that we have .o objects in place in case we decided\n\t# not to build a shared library, and have fallen back to building\n\t# static libs even though --disable-static was passed!\n\tfor oldobj in $oldobjs; do\n\t  if test ! -f $oldobj; then\n\t    xdir=`$echo \"X$oldobj\" | $Xsed -e 's%/[^/]*$%%'`\n\t    if test \"X$xdir\" = \"X$oldobj\"; then\n\t      xdir=\".\"\n\t    else\n\t      xdir=\"$xdir\"\n\t    fi\n\t    baseobj=`$echo \"X$oldobj\" | $Xsed -e 's%^.*/%%'`\n\t    obj=`$echo \"X$baseobj\" | $Xsed -e \"$o2lo\"`\n\t    $show \"(cd $xdir && ${LN_S} $obj $baseobj)\"\n\t    $run eval '(cd $xdir && ${LN_S} $obj $baseobj)' || exit $?\n\t  fi\n\tdone\n\n\teval cmds=\\\"$old_archive_cmds\\\"\n      fi\n      IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n      for cmd in $cmds; do\n\tIFS=\"$save_ifs\"\n\t$show \"$cmd\"\n\t$run eval \"$cmd\" || exit $?\n      done\n      IFS=\"$save_ifs\"\n    done\n\n    if test -n \"$generated\"; then\n      $show \"${rm}r$generated\"\n      $run ${rm}r$generated\n    fi\n\n    # Now create the libtool archive.\n    case \"$output\" in\n    *.la)\n      old_library=\n      test \"$build_old_libs\" = yes && old_library=\"$libname.$libext\"\n      $show \"creating $output\"\n\n      if test -n \"$xrpath\"; then\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  temp_xrpath=\"$temp_xrpath -R$libdir\"\n\tdone\n\tdependency_libs=\"$temp_xrpath $dependency_libs\"\n      fi\n\n      # Only create the output if not a dry run.\n      if test -z \"$run\"; then\n\tfor installed in no yes; do\n\t  if test \"$installed\" = yes; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=\"$output_objdir/$outputname\"i\n\t  fi\n\t  $rm $output\n\t  $echo > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$dlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\\\n\"\n\tdone\n      fi\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      $show \"(cd $output_objdir && $rm $outputname && $LN_S ../$outputname $outputname)\"\n      $run eval \"(cd $output_objdir && $rm $outputname && $LN_S ../$outputname $outputname)\" || exit $?\n      ;;\n    esac\n    exit 0\n    ;;\n\n  # libtool install mode\n  install)\n    modename=\"$modename: install\"\n\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$nonopt\" = \"$SHELL\" || test \"$nonopt\" = /bin/sh; then\n      # Aesthetically quote it.\n      arg=`$echo \"X$nonopt\" | $Xsed -e \"$sed_quote_subst\"`\n      case \"$arg\" in\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*)\n\targ=\"\\\"$arg\\\"\"\n\t;;\n      esac\n      install_prog=\"$arg \"\n      arg=\"$1\"\n      shift\n    else\n      install_prog=\n      arg=\"$nonopt\"\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    arg=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n    case \"$arg\" in\n    *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*)\n      arg=\"\\\"$arg\\\"\"\n      ;;\n    esac\n    install_prog=\"$install_prog$arg\"\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=no\n    stripme=\n    for arg\n    do\n      if test -n \"$dest\"; then\n\tfiles=\"$files $dest\"\n\tdest=\"$arg\"\n\tcontinue\n      fi\n\n      case \"$arg\" in\n      -d) isdir=yes ;;\n      -f) prev=\"-f\" ;;\n      -g) prev=\"-g\" ;;\n      -m) prev=\"-m\" ;;\n      -o) prev=\"-o\" ;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*) ;;\n\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  prev=\n\telse\n\t  dest=\"$arg\"\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      arg=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n      case \"$arg\" in\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*)\n\targ=\"\\\"$arg\\\"\"\n\t;;\n      esac\n      install_prog=\"$install_prog $arg\"\n    done\n\n    if test -z \"$install_prog\"; then\n      $echo \"$modename: you must specify an install program\" 1>&2\n      $echo \"$help\" 1>&2\n      exit 1\n    fi\n\n    if test -n \"$prev\"; then\n      $echo \"$modename: the \\`$prev' option requires an argument\" 1>&2\n      $echo \"$help\" 1>&2\n      exit 1\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\t$echo \"$modename: no file or destination specified\" 1>&2\n      else\n\t$echo \"$modename: you must specify a destination\" 1>&2\n      fi\n      $echo \"$help\" 1>&2\n      exit 1\n    fi\n\n    # Strip any trailing slash from the destination.\n    dest=`$echo \"X$dest\" | $Xsed -e 's%/$%%'`\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=yes\n    if test \"$isdir\" = yes; then\n      destdir=\"$dest\"\n      destname=\n    else\n      destdir=`$echo \"X$dest\" | $Xsed -e 's%/[^/]*$%%'`\n      test \"X$destdir\" = \"X$dest\" && destdir=.\n      destname=`$echo \"X$dest\" | $Xsed -e 's%^.*/%%'`\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files\n      if test $# -gt 2; then\n\t$echo \"$modename: \\`$dest' is not a directory\" 1>&2\n\t$echo \"$help\" 1>&2\n\texit 1\n      fi\n    fi\n    case \"$destdir\" in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase \"$file\" in\n\t*.lo) ;;\n\t*)\n\t  $echo \"$modename: \\`$destdir' must be an absolute directory name\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit 1\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case \"$file\" in\n      *.a | *.lib)\n\t# Do the static libraries later.\n\tstaticlibs=\"$staticlibs $file\"\n\t;;\n\n      *.la)\n\t# Check to see that this really is a libtool archive.\n\tif (sed -e '2q' $file | egrep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then :\n\telse\n\t  $echo \"$modename: \\`$file' is not a valid libtool archive\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit 1\n\tfi\n\n\tlibrary_names=\n\told_library=\n\t# If there is no directory component, then add one.\n\tcase \"$file\" in\n\t*/* | *\\\\*) . $file ;;\n\t*) . ./$file ;;\n\tesac\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) current_libdirs=\"$current_libdirs $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) future_libdirs=\"$future_libdirs $libdir\" ;;\n\t  esac\n\tfi\n\n\tdir=\"`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`/\"\n\ttest \"X$dir\" = \"X$file/\" && dir=\n\tdir=\"$dir$objdir\"\n\n\t# See the names of the shared library.\n\tset dummy $library_names\n\tif test -n \"$2\"; then\n\t  realname=\"$2\"\n\t  shift\n\t  shift\n\n\t  # Install the shared library and build the symlinks.\n\t  $show \"$install_prog $dir/$realname $destdir/$realname\"\n\t  $run eval \"$install_prog $dir/$realname $destdir/$realname\" || exit $?\n\n\t  if test $# -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    for linkname\n\t    do\n\t      if test \"$linkname\" != \"$realname\"; then\n\t\t$show \"(cd $destdir && $rm $linkname && $LN_S $realname $linkname)\"\n\t\t$run eval \"(cd $destdir && $rm $linkname && $LN_S $realname $linkname)\"\n\t      fi\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=\"$destdir/$realname\"\n\t  eval cmds=\\\"$postinstall_cmds\\\"\n\t  IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n\t  for cmd in $cmds; do\n\t    IFS=\"$save_ifs\"\n\t    $show \"$cmd\"\n\t    $run eval \"$cmd\" || exit $?\n\t  done\n\t  IFS=\"$save_ifs\"\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tname=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\tinstname=\"$dir/$name\"i\n\t$show \"$install_prog $instname $destdir/$name\"\n\t$run eval \"$install_prog $instname $destdir/$name\" || exit $?\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && staticlibs=\"$staticlibs $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  destfile=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase \"$destfile\" in\n\t*.lo)\n\t  staticdest=`$echo \"X$destfile\" | $Xsed -e \"$lo2o\"`\n\t  ;;\n\t*.o | *.obj)\n\t  staticdest=\"$destfile\"\n\t  destfile=\n\t  ;;\n\t*)\n\t  $echo \"$modename: cannot copy a libtool object to \\`$destfile'\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit 1\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\tif test -n \"$destfile\"; then\n\t  $show \"$install_prog $file $destfile\"\n\t  $run eval \"$install_prog $file $destfile\" || exit $?\n\tfi\n\n\t# Install the old object if enabled.\n\tif test \"$build_old_libs\" = yes; then\n\t  # Deduce the name of the old-style object file.\n\t  staticobj=`$echo \"X$file\" | $Xsed -e \"$lo2o\"`\n\n\t  $show \"$install_prog $staticobj $staticdest\"\n\t  $run eval \"$install_prog \\$staticobj \\$staticdest\" || exit $?\n\tfi\n\texit 0\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  destfile=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# Do a test to see if this is really a libtool program.\n\tif (sed -e '4q' $file | egrep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t  link_against_libtool_libs=\n\t  relink_command=\n\n\t  # If there is no directory component, then add one.\n\t  case \"$file\" in\n\t  */* | *\\\\*) . $file ;;\n\t  *) . ./$file ;;\n\t  esac\n\n\t  # Check the variables that should have been set.\n\t  if test -z \"$link_against_libtool_libs\"; then\n\t    $echo \"$modename: invalid libtool wrapper script \\`$file'\" 1>&2\n\t    exit 1\n\t  fi\n\n\t  finalize=yes\n\t  for lib in $link_against_libtool_libs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      # If there is no directory component, then add one.\n\t      case \"$lib\" in\n\t      */* | *\\\\*) . $lib ;;\n\t      *) . ./$lib ;;\n\t      esac\n\t    fi\n\t    libfile=\"$libdir/`$echo \"X$lib\" | $Xsed -e 's%^.*/%%g'`\"\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      $echo \"$modename: warning: \\`$lib' has not been installed in \\`$libdir'\" 1>&2\n\t      finalize=no\n\t    fi\n\t  done\n\n\t  outputname=\n\t  if test \"$fast_install\" = no && test -n \"$relink_command\"; then\n\t    if test \"$finalize\" = yes && test -z \"$run\"; then\n\t      tmpdir=\"/tmp\"\n\t      test -n \"$TMPDIR\" && tmpdir=\"$TMPDIR\"\n\t      tmpdir=\"$tmpdir/libtool-$$\"\n\t      if $mkdir -p \"$tmpdir\" && chmod 700 \"$tmpdir\"; then :\n\t      else\n\t\t$echo \"$modename: error: cannot create temporary directory \\`$tmpdir'\" 1>&2\n\t\tcontinue\n\t      fi\n\t      outputname=\"$tmpdir/$file\"\n\t      # Replace the output file specification.\n\t      relink_command=`$echo \"X$relink_command\" | $Xsed -e 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t      $show \"$relink_command\"\n\t      if $run eval \"$relink_command\"; then :\n\t      else\n\t\t$echo \"$modename: error: relink \\`$file' with the above command before installing it\" 1>&2\n\t\t${rm}r \"$tmpdir\"\n\t\tcontinue\n\t      fi\n\t      file=\"$outputname\"\n\t    else\n\t      $echo \"$modename: warning: cannot relink \\`$file'\" 1>&2\n\t    fi\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$echo \"X$file\" | $Xsed -e \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t$show \"$install_prog$stripme $file $destfile\"\n\t$run eval \"$install_prog\\$stripme \\$file \\$destfile\" || exit $?\n\ttest -n \"$outputname\" && ${rm}r \"$tmpdir\"\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      name=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\n      # Set up the ranlib parameters.\n      oldlib=\"$destdir/$name\"\n\n      $show \"$install_prog $file $oldlib\"\n      $run eval \"$install_prog \\$file \\$oldlib\" || exit $?\n\n      # Do each command in the postinstall commands.\n      eval cmds=\\\"$old_postinstall_cmds\\\"\n      IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n      for cmd in $cmds; do\n\tIFS=\"$save_ifs\"\n\t$show \"$cmd\"\n\t$run eval \"$cmd\" || exit $?\n      done\n      IFS=\"$save_ifs\"\n    done\n\n    if test -n \"$future_libdirs\"; then\n      $echo \"$modename: warning: remember to run \\`$progname --finish$future_libdirs'\" 1>&2\n    fi\n\n    if test -n \"$current_libdirs\"; then\n      # Maybe just do a dry run.\n      test -n \"$run\" && current_libdirs=\" -n$current_libdirs\"\n      exec $SHELL $0 --finish$current_libdirs\n      exit 1\n    fi\n\n    exit 0\n    ;;\n\n  # libtool finish mode\n  finish)\n    modename=\"$modename: finish\"\n    libdirs=\"$nonopt\"\n    admincmds=\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for dir\n      do\n\tlibdirs=\"$libdirs $dir\"\n      done\n\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  eval cmds=\\\"$finish_cmds\\\"\n\t  IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n\t  for cmd in $cmds; do\n\t    IFS=\"$save_ifs\"\n\t    $show \"$cmd\"\n\t    $run eval \"$cmd\" || admincmds=\"$admincmds\n       $cmd\"\n\t  done\n\t  IFS=\"$save_ifs\"\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $run eval \"$cmds\" || admincmds=\"$admincmds\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    test \"$show\" = : && exit 0\n\n    echo \"----------------------------------------------------------------------\"\n    echo \"Libraries have been installed in:\"\n    for libdir in $libdirs; do\n      echo \"   $libdir\"\n    done\n    echo\n    echo \"If you ever happen to want to link against installed libraries\"\n    echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n    echo \"specify the full pathname of the library, or use \\`-LLIBDIR'\"\n    echo \"flag during linking and do at least one of the following:\"\n    if test -n \"$shlibpath_var\"; then\n      echo \"   - add LIBDIR to the \\`$shlibpath_var' environment variable\"\n      echo \"     during execution\"\n    fi\n    if test -n \"$runpath_var\"; then\n      echo \"   - add LIBDIR to the \\`$runpath_var' environment variable\"\n      echo \"     during linking\"\n    fi\n    if test -n \"$hardcode_libdir_flag_spec\"; then\n      libdir=LIBDIR\n      eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\n      echo \"   - use the \\`$flag' linker flag\"\n    fi\n    if test -n \"$admincmds\"; then\n      echo \"   - have your system administrator run these commands:$admincmds\"\n    fi\n    if test -f /etc/ld.so.conf; then\n      echo \"   - have your system administrator add LIBDIR to \\`/etc/ld.so.conf'\"\n    fi\n    echo\n    echo \"See any operating system documentation about shared libraries for\"\n    echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n    echo \"----------------------------------------------------------------------\"\n    exit 0\n    ;;\n\n  # libtool execute mode\n  execute)\n    modename=\"$modename: execute\"\n\n    # The first argument is the command name.\n    cmd=\"$nonopt\"\n    if test -z \"$cmd\"; then\n      $echo \"$modename: you must specify a COMMAND\" 1>&2\n      $echo \"$help\"\n      exit 1\n    fi\n\n    # Handle -dlopen flags immediately.\n    for file in $execute_dlfiles; do\n      if test ! -f \"$file\"; then\n\t$echo \"$modename: \\`$file' is not a file\" 1>&2\n\t$echo \"$help\" 1>&2\n\texit 1\n      fi\n\n      dir=\n      case \"$file\" in\n      *.la)\n\t# Check to see that this really is a libtool archive.\n\tif (sed -e '2q' $file | egrep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then :\n\telse\n\t  $echo \"$modename: \\`$lib' is not a valid libtool archive\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit 1\n\tfi\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\n\t# If there is no directory component, then add one.\n\tcase \"$file\" in\n\t*/* | *\\\\*) . $file ;;\n\t*) . ./$file ;;\n\tesac\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && $echo \"$modename: warning: \\`$file' was not linked with \\`-export-dynamic'\"\n\t  continue\n\tfi\n\n\tdir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`\n\ttest \"X$dir\" = \"X$file\" && dir=.\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  dir=\"$dir/$objdir\"\n\telse\n\t  $echo \"$modename: cannot find \\`$dlname' in \\`$dir' or \\`$dir/$objdir'\" 1>&2\n\t  exit 1\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tdir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`\n\ttest \"X$dir\" = \"X$file\" && dir=.\n\t;;\n\n      *)\n\t$echo \"$modename: warning \\`-dlopen' is ignored for non-libtool libraries and objects\" 1>&2\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=\"$absdir\"\n\n      # Now add the directory to shlibpath_var.\n      if eval \"test -z \\\"\\$$shlibpath_var\\\"\"; then\n\teval \"$shlibpath_var=\\\"\\$dir\\\"\"\n      else\n\teval \"$shlibpath_var=\\\"\\$dir:\\$$shlibpath_var\\\"\"\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=\"$magic\"\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case \"$file\" in\n      -*) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif (sed -e '4q' $file | egrep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t  # If there is no directory component, then add one.\n\t  case \"$file\" in\n\t  */* | *\\\\*) . $file ;;\n\t  *) . ./$file ;;\n\t  esac\n\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      file=`$echo \"X$file\" | $Xsed -e \"$sed_quote_subst\"`\n      args=\"$args \\\"$file\\\"\"\n    done\n\n    if test -z \"$run\"; then\n      if test -n \"$shlibpath_var\"; then\n        # Export the shlibpath_var.\n        eval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved enviroment variables\n      if test \"${save_LC_ALL+set}\" = set; then\n\tLC_ALL=\"$save_LC_ALL\"; export LC_ALL\n      fi\n      if test \"${save_LANG+set}\" = set; then\n\tLANG=\"$save_LANG\"; export LANG\n      fi\n\n      # Now actually exec the command.\n      eval \"exec \\$cmd$args\"\n\n      $echo \"$modename: cannot exec \\$cmd$args\"\n      exit 1\n    else\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n        eval \"\\$echo \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n        $echo \"export $shlibpath_var\"\n      fi\n      $echo \"$cmd$args\"\n      exit 0\n    fi\n    ;;\n\n  # libtool uninstall mode\n  uninstall)\n    modename=\"$modename: uninstall\"\n    rm=\"$nonopt\"\n    files=\n\n    for arg\n    do\n      case \"$arg\" in\n      -*) rm=\"$rm $arg\" ;;\n      *) files=\"$files $arg\" ;;\n      esac\n    done\n\n    if test -z \"$rm\"; then\n      $echo \"$modename: you must specify an RM program\" 1>&2\n      $echo \"$help\" 1>&2\n      exit 1\n    fi\n\n    for file in $files; do\n      dir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`\n      test \"X$dir\" = \"X$file\" && dir=.\n      name=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\n      rmfiles=\"$file\"\n\n      case \"$name\" in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif (sed -e '2q' $file | egrep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t  . $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    rmfiles=\"$rmfiles $dir/$n\"\n\t  done\n\t  test -n \"$old_library\" && rmfiles=\"$rmfiles $dir/$old_library\"\n\n\t  $show \"$rm $rmfiles\"\n\t  $run $rm $rmfiles\n\n\t  if test -n \"$library_names\"; then\n\t    # Do each command in the postuninstall commands.\n\t    eval cmds=\\\"$postuninstall_cmds\\\"\n\t    IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $cmds; do\n\t      IFS=\"$save_ifs\"\n\t      $show \"$cmd\"\n\t      $run eval \"$cmd\"\n\t    done\n\t    IFS=\"$save_ifs\"\n\t  fi\n\n\t  if test -n \"$old_library\"; then\n\t    # Do each command in the old_postuninstall commands.\n\t    eval cmds=\\\"$old_postuninstall_cmds\\\"\n\t    IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $cmds; do\n\t      IFS=\"$save_ifs\"\n\t      $show \"$cmd\"\n\t      $run eval \"$cmd\"\n\t    done\n\t    IFS=\"$save_ifs\"\n\t  fi\n\n\t  # FIXME: should reinstall the best remaining shared library.\n\tfi\n\t;;\n\n      *.lo)\n\tif test \"$build_old_libs\" = yes; then\n\t  oldobj=`$echo \"X$name\" | $Xsed -e \"$lo2o\"`\n\t  rmfiles=\"$rmfiles $dir/$oldobj\"\n\tfi\n\t$show \"$rm $rmfiles\"\n\t$run $rm $rmfiles\n\t;;\n\n      *)\n\t$show \"$rm $rmfiles\"\n\t$run $rm $rmfiles\n\t;;\n      esac\n    done\n    exit 0\n    ;;\n\n  \"\")\n    $echo \"$modename: you must specify a MODE\" 1>&2\n    $echo \"$generic_help\" 1>&2\n    exit 1\n    ;;\n  esac\n\n  $echo \"$modename: invalid operation mode \\`$mode'\" 1>&2\n  $echo \"$generic_help\" 1>&2\n  exit 1\nfi # test -z \"$show_help\"\n\n# We need to display help for each of the modes.\ncase \"$mode\" in\n\"\") $echo \\\n\"Usage: $modename [OPTION]... [MODE-ARG]...\n\nProvide generalized library-building support services.\n\n    --config          show all configuration variables\n    --debug           enable verbose shell tracing\n-n, --dry-run         display commands without modifying any files\n    --features        display basic configuration information and exit\n    --finish          same as \\`--mode=finish'\n    --help            display this help message and exit\n    --mode=MODE       use operation mode MODE [default=inferred from MODE-ARGS]\n    --quiet           same as \\`--silent'\n    --silent          don't print informational messages\n    --version         print version information\n\nMODE must be one of the following:\n\n      compile         compile a source file into a libtool object\n      execute         automatically set library path, then run a program\n      finish          complete the installation of libtool libraries\n      install         install libraries or executables\n      link            create a library or an executable\n      uninstall       remove libraries from an installed directory\n\nMODE-ARGS vary depending on the MODE.  Try \\`$modename --help --mode=MODE' for\na more detailed description of MODE.\"\n  exit 0\n  ;;\n\ncompile)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -static           always build a \\`.o' file suitable for static linking\n\nCOMPILE-COMMAND is a command to be used in creating a \\`standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix \\`.c' with the\nlibrary object suffix, \\`.lo'.\"\n  ;;\n\nexecute)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to \\`-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n  ;;\n\nfinish)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe \\`--dry-run' option if you just want to see what would be executed.\"\n  ;;\n\ninstall)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the \\`install' or \\`cp' program.\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n  ;;\n\nlink)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -dlopen FILE      \\`-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n\t\t    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n\t\t    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -static           do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n\t\t    specify library version info [each variable defaults to 0]\n\nAll other options (arguments beginning with \\`-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in \\`.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in \\`.la', then a libtool library is created,\nonly library objects (\\`.lo' files) may be specified, and \\`-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in \\`.a' or \\`.lib', then a standard library is created\nusing \\`ar' and \\`ranlib', or on Windows using \\`lib'.\n\nIf OUTPUT-FILE ends in \\`.lo' or \\`.${objext}', then a reloadable object file\nis created, otherwise an executable program is created.\"\n  ;;\n\nuninstall)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n  ;;\n\n*)\n  $echo \"$modename: invalid operation mode \\`$mode'\" 1>&2\n  $echo \"$help\" 1>&2\n  exit 1\n  ;;\nesac\n\necho\n$echo \"Try \\`$modename --help' for more information about other modes.\"\n\nexit 0\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/lib/windlopen.c": "/* windlopen.c--Windows dynamic loader interface\n * Ryan Troll\n * $Id: windlopen.c,v 1.17 2009/01/25 20:20:57 mel Exp $\n */\n/* \n * Copyright (c) 1998-2003 Carnegie Mellon University.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer. \n *\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in\n *    the documentation and/or other materials provided with the\n *    distribution.\n *\n * 3. The name \"Carnegie Mellon University\" must not be used to\n *    endorse or promote products derived from this software without\n *    prior written permission. For permission or any other legal\n *    details, please contact  \n *      Office of Technology Transfer\n *      Carnegie Mellon University\n *      5000 Forbes Avenue\n *      Pittsburgh, PA  15213-3890\n *      (412) 268-4387, fax: (412) 268-7395\n *      tech-transfer@andrew.cmu.edu\n *\n * 4. Redistributions of any form whatsoever must retain the following\n *    acknowledgment:\n *    \"This product includes software developed by Computing Services\n *     at Carnegie Mellon University (http://www.cmu.edu/computing/).\"\n *\n * CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO\n * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE\n * FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN\n * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING\n * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\n#include <stdio.h>\n#include <io.h>\n#include <sys/stat.h>\n\n#include <config.h>\n#include <sasl.h>\n#include \"saslint.h\"\n\n#define DLL_SUFFIX\t\".dll\"\n#define DLL_MASK\t\"*\" DLL_SUFFIX\n#define DLL_MASK_LEN\t5\n\nconst int _is_sasl_server_static = 0;\n\n/* : inefficient representation, but works */\ntypedef struct lib_list \n{\n    struct lib_list *next;\n    HMODULE library;\n} lib_list_t;\n\nstatic lib_list_t *lib_list_head = NULL;\n\nint _sasl_locate_entry(void *library,\n\t\t       const char *entryname,\n\t\t       void **entry_point) \n{\n    if(entryname == NULL) {\n\t_sasl_log(NULL, SASL_LOG_ERR,\n\t\t  \"no entryname in _sasl_locate_entry\");\n\treturn SASL_BADPARAM;\n    }\n\n    if(library == NULL) {\n\t_sasl_log(NULL, SASL_LOG_ERR,\n\t\t  \"no library in _sasl_locate_entry\");\n\treturn SASL_BADPARAM;\n    }\n\n    if(entry_point == NULL) {\n\t_sasl_log(NULL, SASL_LOG_ERR,\n\t\t  \"no entrypoint output pointer in _sasl_locate_entry\");\n\treturn SASL_BADPARAM;\n    }\n\n    *entry_point = GetProcAddress(library, entryname);\n\n    if (*entry_point == NULL) {\n#if 0 /* This message appears to confuse people */\n\t_sasl_log(NULL, SASL_LOG_DEBUG,\n\t\t  \"unable to get entry point %s: %s\", entryname,\n\t\t  GetLastError());\n#endif\n\treturn SASL_FAIL;\n    }\n\n    return SASL_OK;\n}\n\nstatic int _sasl_plugin_load(char *plugin, void *library,\n\t\t\t     const char *entryname,\n\t\t\t     int (*add_plugin)(const char *, void *)) \n{\n    void *entry_point;\n    int result;\n    \n    result = _sasl_locate_entry(library, entryname, &entry_point);\n    if(result == SASL_OK) {\n\tresult = add_plugin(plugin, entry_point);\n\tif(result != SASL_OK)\n\t    _sasl_log(NULL, SASL_LOG_DEBUG,\n\t\t      \"_sasl_plugin_load failed on %s for plugin: %s\\n\",\n\t\t      entryname, plugin);\n    }\n\n    return result;\n}\n\n/* loads a plugin library */\nint _sasl_get_plugin(const char *file,\n\t\t     const sasl_callback_t *verifyfile_cb,\n\t\t     void **libraryptr)\n{\n    int r = 0;\n    HINSTANCE library;\n    lib_list_t *newhead;\n    \n    r = ((sasl_verifyfile_t *)(verifyfile_cb->proc))\n\t\t    (verifyfile_cb->context, file, SASL_VRFY_PLUGIN);\n    if (r != SASL_OK) return r;\n\n    newhead = sasl_ALLOC(sizeof(lib_list_t));\n    if (!newhead) return SASL_NOMEM;\n\n    if (!(library = LoadLibrary (file))) {\n\t_sasl_log(NULL, SASL_LOG_ERR,\n\t\t  \"unable to LoadLibrary %s: %s\", file, GetLastError());\n\tsasl_FREE(newhead);\n\treturn SASL_FAIL;\n    }\n\n    newhead->library = library;\n    newhead->next = lib_list_head;\n    lib_list_head = newhead;\n\n    *libraryptr = library;\n    return SASL_OK;\n}\n\n/* undoes actions done by _sasl_get_plugin */\nvoid _sasl_remove_last_plugin()\n{\n    lib_list_t *last_plugin = lib_list_head;\n    lib_list_head = lib_list_head->next;\n    if (last_plugin->library) {\n\tFreeLibrary(last_plugin->library);\n    }\n    sasl_FREE(last_plugin);\n}\n\n/* gets the list of mechanisms */\nint _sasl_load_plugins(const add_plugin_list_t *entrypoints,\n\t\t       const sasl_callback_t *getpath_cb,\n\t\t       const sasl_callback_t *verifyfile_cb)\n{\n    int result;\n    char cur_dir[PATH_MAX], full_name[PATH_MAX+2], prefix[PATH_MAX+2];\n\t\t\t\t/* 1 for '\\\\' 1 for trailing '\\0' */\n    char * pattern;\n    char c;\n    int pos;\n    const char *path=NULL;\n    int position;\n    const add_plugin_list_t *cur_ep;\n    struct stat statbuf;\t\t/* filesystem entry information */\n    intptr_t fhandle;\t\t\t/* file handle for _findnext function */\n    struct _finddata_t finddata;\t/* data returned by _findnext() */\n    size_t prefix_len;\n\n    if (! entrypoints\n\t|| ! getpath_cb\n\t|| getpath_cb->id != SASL_CB_GETPATH\n\t|| ! getpath_cb->proc\n\t|| ! verifyfile_cb\n\t|| verifyfile_cb->id != SASL_CB_VERIFYFILE\n\t|| ! verifyfile_cb->proc)\n\treturn SASL_BADPARAM;\n\n    /* get the path to the plugins */\n    result = ((sasl_getpath_t *)(getpath_cb->proc))(getpath_cb->context,\n\t\t\t\t\t\t    &path);\n    if (result != SASL_OK) return result;\n    if (! path) return SASL_FAIL;\n\n    if (strlen(path) >= PATH_MAX) { /* no you can't buffer overrun */\n\treturn SASL_FAIL;\n    }\n\n    position=0;\n    do {\n\tpos=0;\n\tdo {\n\t    c=path[position];\n\t    position++;\n\t    cur_dir[pos]=c;\n\t    pos++;\n\t} while ((c!=PATHS_DELIMITER) && (c!=0));\n\tcur_dir[pos-1]='\\0';\n\n\n/* : check to make sure that a valid directory name was passed in */\n\tif (stat (cur_dir, &statbuf) < 0) {\n\t    continue;\n\t}\n\tif ((statbuf.st_mode & S_IFDIR) == 0) {\n\t    continue;\n\t}\n\n\tstrcpy (prefix, cur_dir);\n\tprefix_len = strlen (prefix);\n\n/* : Don't append trailing \\ unless required */\n\tif (prefix[prefix_len-1] != '\\\\') {\n\t    strcat (prefix,\"\\\\\");\n\t    prefix_len++;\n\t}\n\n\tpattern = prefix;\n\n/* : Check that we have enough space for \"*.dll\" */\n\tif ((prefix_len + DLL_MASK_LEN) > (sizeof(prefix) - 1)) {\n\t    _sasl_log(NULL, SASL_LOG_WARN, \"plugin search mask is too big\");\n            continue;\n\t}\n\n\tstrcat (prefix + prefix_len, \"*\" DLL_SUFFIX);\n\n        fhandle = _findfirst (pattern, &finddata);\n        if (fhandle == -1) {\t/* no matching files */\n            continue;\n        }\n\n/* : Truncate \"*.dll\" */\n\tprefix[prefix_len] = '\\0';\n\n\tdo {\n\t    size_t length;\n\t    void *library;\n\t    char *c;\n\t    char plugname[PATH_MAX];\n\t    int entries;\n\n\t    length = strlen(finddata.name);\n\t    if (length < 5) { /* At least <Ch>.dll */\n\t\tcontinue; /* can not possibly be what we're looking for */\n\t    }\n\n/* : Check for overflow */\n\t    if (length + prefix_len >= PATH_MAX) continue; /* too big */\n\n\t    if (stricmp(finddata.name + (length - strlen(DLL_SUFFIX)), DLL_SUFFIX) != 0) {\n\t\tcontinue;\n\t    }\n\n/* : Check that it is not a directory */\n\t    if ((finddata.attrib & _A_SUBDIR) == _A_SUBDIR) {\n\t\tcontinue;\n\t    }\n\n/* : Construct full name from prefix and name */\n\n\t    strcpy (full_name, prefix);\n\t    strcat (full_name, finddata.name);\n\t\t\n/* cut off .dll suffix -- this only need be approximate */\n\t    strcpy (plugname, finddata.name);\n\t    c = strrchr(plugname, '.');\n\t    if (c != NULL) *c = '\\0';\n\n\t    result = _sasl_get_plugin (full_name, verifyfile_cb, &library);\n\n\t    if (result != SASL_OK) {\n\t\tcontinue;\n\t    }\n\n\t    entries = 0;\n\t    for (cur_ep = entrypoints; cur_ep->entryname; cur_ep++) {\n\t\tresult = _sasl_plugin_load(plugname,\n\t\t\t\t\t   library,\n\t\t\t\t\t   cur_ep->entryname,\n\t\t\t\t\t   cur_ep->add_plugin);\n\t\tif (result == SASL_OK) {\n\t\t    ++entries;\n\t\t}\n\t\t/* If this fails, it's not the end of the world */\n\t    }\n\t    if (entries == 0) {\n\t\t_sasl_remove_last_plugin();\n\t    }\n\n\t} while (_findnext (fhandle, &finddata) == 0);\n\t\n\t_findclose (fhandle);\n\n    } while ((c!='=') && (c!=0));\n\n    return SASL_OK;\n}\n\nint\n_sasl_done_with_plugins(void)\n{\n    lib_list_t *libptr, *libptr_next;\n    \n    for(libptr = lib_list_head; libptr; libptr = libptr_next) {\n\tlibptr_next = libptr->next;\n\tif (libptr->library != NULL) {\n\t    FreeLibrary(libptr->library);\n\t}\n\tsasl_FREE(libptr);\n    }\n\n    lib_list_head = NULL;\n\n    return SASL_OK;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/lib/Makefile.am": "# Makefile.am for the SASL library\n# Rob Earhart\n# $Id: Makefile.am,v 1.88 2011/09/05 14:18:10 murch Exp $\n# Copyright (c) 2000 Carnegie Mellon University.  All rights reserved.\n#\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions\n# are met:\n#\n# 1. Redistributions of source code must retain the above copyright\n#    notice, this list of conditions and the following disclaimer. \n#\n# 2. Redistributions in binary form must reproduce the above copyright\n#    notice, this list of conditions and the following disclaimer in\n#    the documentation and/or other materials provided with the\n#    distribution.\n#\n# 3. The name \"Carnegie Mellon University\" must not be used to\n#    endorse or promote products derived from this software without\n#    prior written permission. For permission or any other legal\n#    details, please contact  \n#      Office of Technology Transfer\n#      Carnegie Mellon University\n#      5000 Forbes Avenue\n#      Pittsburgh, PA  15213-3890\n#      (412) 268-4387, fax: (412) 268-7395\n#      tech-transfer@andrew.cmu.edu\n#\n# 4. Redistributions of any form whatsoever must retain the following\n#    acknowledgment:\n#    \"This product includes software developed by Computing Services\n#     at Carnegie Mellon University (http://www.cmu.edu/computing/).\"\n#\n# CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO\n# THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n# AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE\n# FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN\n# AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING\n# OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n#\n\n# Library version info - here at the top, for sanity\n# See <http://www.gnu.org/software/libtool/manual/libtool.html#Versioning>\n# CURRENT:REVISION:AGE\nsasl_version = 3:0:0\n\nINCLUDES=-DLIBSASL_EXPORTS=1 -I$(top_srcdir)/include -I$(top_srcdir)/plugins -I$(top_builddir)/include -I$(top_srcdir)/sasldb\n\nEXTRA_DIST = windlopen.c staticopen.h NTMakefile\nEXTRA_LIBRARIES = libsasl2.a\nnoinst_LIBRARIES = @SASL_STATIC_LIBS@\nlibsasl2_a_SOURCES=\n\nBUILT_SOURCES = $(SASL_STATIC_SRCS)\n\ncommon_headers = saslint.h\ncommon_sources = auxprop.c canonusr.c checkpw.c client.c common.c config.c external.c md5.c saslutil.c server.c seterror.c dlopen.c ../plugins/plugin_common.c\n\nLTLIBOBJS = @LTLIBOBJS@\nLIBOBJS = @LIBOBJS@\nLIB_DOOR= @LIB_DOOR@\n\nlib_LTLIBRARIES = libsasl2.la\n\nlibsasl2_la_SOURCES = $(common_sources) $(common_headers)\nlibsasl2_la_LDFLAGS = -version-info $(sasl_version)\nlibsasl2_la_DEPENDENCIES = $(LTLIBOBJS)\nlibsasl2_la_LIBADD = $(LTLIBOBJS) $(SASL_DL_LIB) $(LIB_SOCKET) $(LIB_DOOR)\n\nif MACOSX\nframedir = /Library/Frameworks/SASL2.framework\ninstall-exec-hook:\n\t$(mkinstalldirs) $(framedir)/Versions/A\n\tln -fs $(libdir)/libsasl2.dylib $(framedir)/Versions/A/SASL2\n\tcd $(framedir) ; ln -fs Versions/A/SASL2 .\nelse\ninstall-exec-hook:\nendif\n\nlibsasl2.a: libsasl2.la $(SASL_STATIC_OBJS)\n\t@echo adding static plugins and dependencies\n\t$(AR) cru .libs/$@ $(SASL_STATIC_OBJS)\n\t@for i in ./libsasl2.la ../sasldb/libsasldb.la ../plugins/lib*.la; do \\\n\tif test ! -f $$i; then continue; fi; . $$i; \\\n\tfor j in $$dependency_libs foo; do \\\n\tcase $$j in foo) ;; \\\n\t-L*) for k in $$depdirs foo; do \\\n\t    if test $$k = $$j; then break; fi; done; \\\n\t  if test $$k = foo; then depdirs=\"$$depdirs $$j\"; fi ;; \\\n\t-l*) for k in $$deplibs foo; do \\\n\t    if test $$k = $$j; then break; fi; done; \\\n\t  if test $$k = foo; then deplibs=\"$$deplibs $$j\"; fi ;; \\\n\tesac; done; dependency_libs=\"\"; done; \\\n\tsed -e \"/^dependency_libs=/s%=.*%='$${depdirs}$${deplibs}'%\" \\\n\tlibsasl2.la >TMP.$$ && mv TMP.$$ libsasl2.la\n\trm -f $@\n\tln -s .libs/$@ $@\n\n$(SASL_STATIC_SRCS): linksrcs\n\nlinksrcs:\n\t-ln -s $(SASL_STATIC_SRCS) .\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/lib/dlopen.c": "/* dlopen.c--Unix dlopen() dynamic loader interface\n * Rob Siemborski\n * Rob Earhart\n * $Id: dlopen.c,v 1.52 2009/04/11 10:21:43 mel Exp $\n */\n/* \n * Copyright (c) 1998-2003 Carnegie Mellon University.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer. \n *\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in\n *    the documentation and/or other materials provided with the\n *    distribution.\n *\n * 3. The name \"Carnegie Mellon University\" must not be used to\n *    endorse or promote products derived from this software without\n *    prior written permission. For permission or any other legal\n *    details, please contact  \n *      Office of Technology Transfer\n *      Carnegie Mellon University\n *      5000 Forbes Avenue\n *      Pittsburgh, PA  15213-3890\n *      (412) 268-4387, fax: (412) 268-7395\n *      tech-transfer@andrew.cmu.edu\n *\n * 4. Redistributions of any form whatsoever must retain the following\n *    acknowledgment:\n *    \"This product includes software developed by Computing Services\n *     at Carnegie Mellon University (http://www.cmu.edu/computing/).\"\n *\n * CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO\n * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE\n * FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN\n * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING\n * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\n#include <config.h>\n#ifdef HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdlib.h>\n#include <errno.h>\n#include <stdio.h>\n#include <limits.h>\n\n#include <sasl.h>\n#include \"saslint.h\"\n\n#ifndef PIC\n#include <saslplug.h>\n#include \"staticopen.h\"\n#endif\n\n#ifdef DO_DLOPEN\n#if HAVE_DIRENT_H\n# include <dirent.h>\n# define NAMLEN(dirent) strlen((dirent)->d_name)\n#else /* HAVE_DIRENT_H */\n# define dirent direct\n# define NAMLEN(dirent) (dirent)->d_namlen\n# if HAVE_SYS_NDIR_H\n#  include <sys/ndir.h>\n# endif\n# if HAVE_SYS_DIR_H\n#  include <sys/dir.h>\n# endif\n# if HAVE_NDIR_H\n#  include <ndir.h>\n# endif\n#endif /* ! HAVE_DIRENT_H */\n\n#ifndef NAME_MAX\n# ifdef _POSIX_NAME_MAX\n#  define NAME_MAX _POSIX_NAME_MAX\n# else\n#  define NAME_MAX 16\n# endif\n#endif\n \n#if NAME_MAX < 8\n#  define NAME_MAX 8\n#endif\n\n#ifdef __hpux\n#ifndef HAVE_DLFCN_H\n#include <dl.h>\n\ntypedef shl_t * dll_handle;\ntypedef void * dll_func;\n\ndll_handle\ndlopen(char *fname, int mode)\n{\n    shl_t h = shl_load(fname, BIND_DEFERRED, 0L);\n    shl_t *hp = NULL;\n    \n    if (h) {\n\thp = (shl_t *)malloc(sizeof (shl_t));\n\tif (!hp) {\n\t    shl_unload(h);\n\t} else {\n\t    *hp = h;\n\t}\n    }\n\n    return (dll_handle)hp;\n}\n\nint\ndlclose(dll_handle hp)\n{\n    shl_t h;\n\n    if (hp != NULL) {\n\th = *((shl_t *)hp);\n\tfree(hp);\n\treturn shl_unload(h);\n    } else {\n\t/* Return error */\n\treturn -1;\n    }\n}\n\ndll_func\ndlsym(dll_handle h, char *n)\n{\n    dll_func handle;\n    \n    if (shl_findsym ((shl_t *)h, n, TYPE_PROCEDURE, &handle))\n\treturn NULL;\n    \n    return (dll_func)handle;\n}\n\nchar *dlerror()\n{\n    if (errno != 0) {\n\treturn strerror(errno);\n    }\n    return \"Generic shared library error\";\n}\n\n#endif /* HAVE_DLFCN_H */\n\n#ifdef __ia64\n#define SO_SUFFIX       \".so\"\n#else\n#define SO_SUFFIX\t\".sl\"\n#endif /* __ia64 */\n#elif defined(__APPLE__)\n#define SO_SUFFIX\t\".plugin\"\n#else /* __APPLE__ */\n#define SO_SUFFIX\t\".so\"\n#endif\n\n#define LA_SUFFIX       \".la\"\n\ntypedef struct lib_list \n{\n    struct lib_list *next;\n    void *library;\n} lib_list_t;\n\nstatic lib_list_t *lib_list_head = NULL;\n\n#endif /* DO_DLOPEN */\n\nint _sasl_locate_entry(void *library, const char *entryname,\n\t\t       void **entry_point) \n{\n#ifdef DO_DLOPEN\n/* note that we still check for known problem systems in\n * case we are cross-compiling */\n#if defined(DLSYM_NEEDS_UNDERSCORE) || (defined(__OpenBSD__) && !defined(__ELF__))\n    char adj_entryname[1024];\n#else\n#define adj_entryname entryname\n#endif\n\n    if(!entryname) {\n\t_sasl_log(NULL, SASL_LOG_ERR,\n\t\t  \"no entryname in _sasl_locate_entry\");\n\treturn SASL_BADPARAM;\n    }\n\n    if(!library) {\n\t_sasl_log(NULL, SASL_LOG_ERR,\n\t\t  \"no library in _sasl_locate_entry\");\n\treturn SASL_BADPARAM;\n    }\n\n    if(!entry_point) {\n\t_sasl_log(NULL, SASL_LOG_ERR,\n\t\t  \"no entrypoint output pointer in _sasl_locate_entry\");\n\treturn SASL_BADPARAM;\n    }\n\n#if defined(DLSYM_NEEDS_UNDERSCORE) || (defined(__OpenBSD__) && !defined(__ELF__))\n    snprintf(adj_entryname, sizeof adj_entryname, \"_%s\", entryname);\n#endif\n\n    *entry_point = NULL;\n    *entry_point = dlsym(library, adj_entryname);\n    if (*entry_point == NULL) {\n#if 0 /* This message appears to confuse people */\n\t_sasl_log(NULL, SASL_LOG_DEBUG,\n\t\t  \"unable to get entry point %s: %s\", adj_entryname,\n\t\t  dlerror());\n#endif\n\treturn SASL_FAIL;\n    }\n\n    return SASL_OK;\n#else\n    return SASL_FAIL;\n#endif /* DO_DLOPEN */\n}\n\n#ifdef DO_DLOPEN\n\nstatic int _sasl_plugin_load(char *plugin, void *library,\n\t\t\t     const char *entryname,\n\t\t\t     int (*add_plugin)(const char *, void *)) \n{\n    void *entry_point;\n    int result;\n    \n    result = _sasl_locate_entry(library, entryname, &entry_point);\n    if(result == SASL_OK) {\n\tresult = add_plugin(plugin, entry_point);\n\tif(result != SASL_OK)\n\t    _sasl_log(NULL, SASL_LOG_DEBUG,\n\t\t      \"_sasl_plugin_load failed on %s for plugin: %s\\n\",\n\t\t      entryname, plugin);\n    }\n\n    return result;\n}\n\n/* this returns the file to actually open.\n *  out should be a buffer of size PATH_MAX\n *  and may be the same as in. */\n\n/* We'll use a static buffer for speed unless someone complains */\n#define MAX_LINE 2048\n\nstatic int _parse_la(const char *prefix, const char *in, char *out) \n{\n    FILE *file;\n    size_t length;\n    char line[MAX_LINE];\n    char *ntmp = NULL;\n\n    if(!in || !out || !prefix || out == in) return SASL_BADPARAM;\n\n    /* Set this so we can detect failure */\n    *out = '\\0';\n\n    length = strlen(in);\n\n    if (strcmp(in + (length - strlen(LA_SUFFIX)), LA_SUFFIX)) {\n\tif(!strcmp(in + (length - strlen(SO_SUFFIX)),SO_SUFFIX)) {\n\t    /* check for a .la file */\n\t    strcpy(line, prefix);\n\t    strcat(line, in);\n\t    length = strlen(line);\n\t    *(line + (length - strlen(SO_SUFFIX))) = '\\0';\n\t    strcat(line, LA_SUFFIX);\n\t    file = fopen(line, \"r\");\n\t    if(file) {\n\t\t/* We'll get it on the .la open */\n\t\tfclose(file);\n\t\treturn SASL_FAIL;\n\t    }\n\t}\n\tstrcpy(out, prefix);\n\tstrcat(out, in);\n\treturn SASL_OK;\n    }\n\n    strcpy(line, prefix);\n    strcat(line, in);\n\n    file = fopen(line, \"r\");\n    if(!file) {\n\t_sasl_log(NULL, SASL_LOG_WARN,\n\t\t  \"unable to open LA file: %s\", line);\n\treturn SASL_FAIL;\n    }\n    \n    while(!feof(file)) {\n\tif(!fgets(line, MAX_LINE, file)) break;\n\tif(line[strlen(line) - 1] != '\\n') {\n\t    _sasl_log(NULL, SASL_LOG_WARN,\n\t\t      \"LA file has too long of a line: %s\", in);\n\t    return SASL_BUFOVER;\n\t}\n\tif(line[0] == '\\n' || line[0] == '#') continue;\n\tif(!strncmp(line, \"dlname=\", sizeof(\"dlname=\") - 1)) {\n\t    /* We found the line with the name in it */\n\t    char *end;\n\t    char *start;\n\t    size_t len;\n\t    end = strrchr(line, '\\'');\n\t    if(!end) continue;\n\t    start = &line[sizeof(\"dlname=\")-1];\n\t    len = strlen(start);\n\t    if(len > 3 && start[0] == '\\'') {\n\t\tntmp=&start[1];\n\t\t*end='\\0';\n\t\t/* Do we have dlname=\"\" ? */\n\t\tif(ntmp == end) {\n\t\t    _sasl_log(NULL, SASL_LOG_DEBUG,\n\t\t\t      \"dlname is empty in .la file: %s\", in);\n\t\t    return SASL_FAIL;\n\t\t}\n\t\tstrcpy(out, prefix);\n\t\tstrcat(out, ntmp);\n\t    }\n\t    break;\n\t}\n    }\n    if(ferror(file) || feof(file)) {\n\t_sasl_log(NULL, SASL_LOG_WARN,\n\t\t  \"Error reading .la: %s\\n\", in);\n\tfclose(file);\n\treturn SASL_FAIL;\n    }\n    fclose(file);\n\n    if(!(*out)) {\n\t_sasl_log(NULL, SASL_LOG_WARN,\n\t\t  \"Could not find a dlname line in .la file: %s\", in);\n\treturn SASL_FAIL;\n    }\n\n    return SASL_OK;\n}\n#endif /* DO_DLOPEN */\n\n/* loads a plugin library */\nint _sasl_get_plugin(const char *file,\n\t\t     const sasl_callback_t *verifyfile_cb,\n\t\t     void **libraryptr)\n{\n#ifdef DO_DLOPEN\n    int r = 0;\n    int flag;\n    void *library;\n    lib_list_t *newhead;\n    \n    r = ((sasl_verifyfile_t *)(verifyfile_cb->proc))\n\t\t    (verifyfile_cb->context, file, SASL_VRFY_PLUGIN);\n    if (r != SASL_OK) return r;\n\n#ifdef RTLD_NOW\n    flag = RTLD_NOW;\n#else\n    flag = 0;\n#endif\n\n    newhead = sasl_ALLOC(sizeof(lib_list_t));\n    if(!newhead) return SASL_NOMEM;\n\n    if (!(library = dlopen(file, flag))) {\n\t_sasl_log(NULL, SASL_LOG_ERR,\n\t\t  \"unable to dlopen %s: %s\", file, dlerror());\n\tsasl_FREE(newhead);\n\treturn SASL_FAIL;\n    }\n\n    newhead->library = library;\n    newhead->next = lib_list_head;\n    lib_list_head = newhead;\n\n    *libraryptr = library;\n    return SASL_OK;\n#else\n    return SASL_FAIL;\n#endif /* DO_DLOPEN */\n}\n\n/* gets the list of mechanisms */\nint _sasl_load_plugins(const add_plugin_list_t *entrypoints,\n\t\t       const sasl_callback_t *getpath_cb,\n\t\t       const sasl_callback_t *verifyfile_cb)\n{\n    int result;\n    const add_plugin_list_t *cur_ep;\n#ifdef DO_DLOPEN\n    char str[PATH_MAX], tmp[PATH_MAX+2], prefix[PATH_MAX+2];\n\t\t\t\t/* 1 for '/' 1 for trailing '\\0' */\n    char c;\n    int pos;\n    const char *path=NULL;\n    int position;\n    DIR *dp;\n    struct dirent *dir;\n#endif\n#ifndef PIC\n    add_plugin_t *add_plugin;\n    _sasl_plug_type type;\n    _sasl_plug_rec *p;\n#endif\n\n    if (! entrypoints\n\t|| ! getpath_cb\n\t|| getpath_cb->id != SASL_CB_GETPATH\n\t|| ! getpath_cb->proc\n\t|| ! verifyfile_cb\n\t|| verifyfile_cb->id != SASL_CB_VERIFYFILE\n\t|| ! verifyfile_cb->proc)\n\treturn SASL_BADPARAM;\n\n#ifndef PIC\n    /* do all the static plugins first */\n\n    for(cur_ep = entrypoints; cur_ep->entryname; cur_ep++) {\n\n\t/* What type of plugin are we looking for? */\n\tif(!strcmp(cur_ep->entryname, \"sasl_server_plug_init\")) {\n\t    type = SERVER;\n\t    add_plugin = (add_plugin_t *)sasl_server_add_plugin;\n\t} else if (!strcmp(cur_ep->entryname, \"sasl_client_plug_init\")) {\n\t    type = CLIENT;\n\t    add_plugin = (add_plugin_t *)sasl_client_add_plugin;\n\t} else if (!strcmp(cur_ep->entryname, \"sasl_auxprop_plug_init\")) {\n\t    type = AUXPROP;\n\t    add_plugin = (add_plugin_t *)sasl_auxprop_add_plugin;\n\t} else if (!strcmp(cur_ep->entryname, \"sasl_canonuser_init\")) {\n\t    type = CANONUSER;\n\t    add_plugin = (add_plugin_t *)sasl_canonuser_add_plugin;\n\t} else {\n\t    /* What are we looking for then? */\n\t    return SASL_FAIL;\n\t}\n\tfor (p=_sasl_static_plugins; p->type; p++) {\n\t    if(type == p->type)\n\t    \tresult = add_plugin(p->name, p->plug);\n\t}\n    }\n#endif /* !PIC */\n\n/* only do the following if:\n * \n * we support dlopen()\n *  AND we are not staticly compiled\n *      OR we are staticly compiled and TRY_DLOPEN_WHEN_STATIC is defined\n */\n#if defined(DO_DLOPEN) && (defined(PIC) || (!defined(PIC) && defined(TRY_DLOPEN_WHEN_STATIC)))\n    /* get the path to the plugins */\n    result = ((sasl_getpath_t *)(getpath_cb->proc))(getpath_cb->context,\n\t\t\t\t\t\t    &path);\n    if (result != SASL_OK) return result;\n    if (! path) return SASL_FAIL;\n\n    if (strlen(path) >= PATH_MAX) { /* no you can't buffer overrun */\n\treturn SASL_FAIL;\n    }\n\n    position=0;\n    do {\n\tpos=0;\n\tdo {\n\t    c=path[position];\n\t    position++;\n\t    str[pos]=c;\n\t    pos++;\n\t} while ((c!=':') && (c!='=') && (c!=0));\n\tstr[pos-1]='\\0';\n\n\tstrcpy(prefix,str);\n\tstrcat(prefix,\"/\");\n\n\tif ((dp=opendir(str)) !=NULL) /* ignore errors */    \n\t{\n\t    while ((dir=readdir(dp)) != NULL)\n\t    {\n\t\tsize_t length;\n\t\tvoid *library;\n\t\tchar *c;\n\t\tchar plugname[PATH_MAX];\n\t\tchar name[PATH_MAX];\n\n\t\tlength = NAMLEN(dir);\n\t\tif (length < 4) \n\t\t    continue; /* can not possibly be what we're looking for */\n\n\t\tif (length + pos>=PATH_MAX) continue; /* too big */\n\n\t\tif (strcmp(dir->d_name + (length - strlen(SO_SUFFIX)),\n\t\t\t   SO_SUFFIX)\n\t\t    && strcmp(dir->d_name + (length - strlen(LA_SUFFIX)),\n\t\t\t   LA_SUFFIX))\n\t\t    continue;\n\n\t\tmemcpy(name,dir->d_name,length);\n\t\tname[length]='\\0';\n\n\t\tresult = _parse_la(prefix, name, tmp);\n\t\tif(result != SASL_OK)\n\t\t    continue;\n\t\t\n\t\t/* skip \"lib\" and cut off suffix --\n\t\t   this only need be approximate */\n\t\tstrcpy(plugname, name + 3);\n\t\tc = strchr(plugname, (int)'.');\n\t\tif(c) *c = '\\0';\n\n\t\tresult = _sasl_get_plugin(tmp, verifyfile_cb, &library);\n\n\t\tif(result != SASL_OK)\n\t\t    continue;\n\n\t\tfor(cur_ep = entrypoints; cur_ep->entryname; cur_ep++) {\n\t\t\t_sasl_plugin_load(plugname, library, cur_ep->entryname,\n\t\t\t\t\t  cur_ep->add_plugin);\n\t\t\t/* If this fails, it's not the end of the world */\n\t\t}\n\t    }\n\n\t    closedir(dp);\n\t} else {\n\t    _sasl_log(NULL, SASL_LOG_DEBUG,\n\t\t      \"looking for plugins in '%s', failed to open directory, error: %s\",\n\t\t      str,\n\t\t      strerror(errno));\n\t}\n\n    } while ((c!='=') && (c!=0));\n#endif /* defined(DO_DLOPEN) && (!defined(PIC) || (defined(PIC) && defined(TRY_DLOPEN_WHEN_STATIC))) */\n\n    return SASL_OK;\n}\n\nint\n_sasl_done_with_plugins(void)\n{\n#ifdef DO_DLOPEN\n    lib_list_t *libptr, *libptr_next;\n    \n    for(libptr = lib_list_head; libptr; libptr = libptr_next) {\n\tlibptr_next = libptr->next;\n\tif(libptr->library)\n\t    dlclose(libptr->library);\n\tsasl_FREE(libptr);\n    }\n\n    lib_list_head = NULL;\n#endif /* DO_DLOPEN */\n    return SASL_OK;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/lib/saslint.h": "/* saslint.h - internal SASL library definitions\n * Rob Siemborski\n * Tim Martin\n * $Id: saslint.h,v 1.73 2011/09/01 14:12:53 mel Exp $\n */\n/* \n * Copyright (c) 1998-2003 Carnegie Mellon University.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer. \n *\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in\n *    the documentation and/or other materials provided with the\n *    distribution.\n *\n * 3. The name \"Carnegie Mellon University\" must not be used to\n *    endorse or promote products derived from this software without\n *    prior written permission. For permission or any other legal\n *    details, please contact  \n *      Office of Technology Transfer\n *      Carnegie Mellon University\n *      5000 Forbes Avenue\n *      Pittsburgh, PA  15213-3890\n *      (412) 268-4387, fax: (412) 268-7395\n *      tech-transfer@andrew.cmu.edu\n *\n * 4. Redistributions of any form whatsoever must retain the following\n *    acknowledgment:\n *    \"This product includes software developed by Computing Services\n *     at Carnegie Mellon University (http://www.cmu.edu/computing/).\"\n *\n * CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO\n * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE\n * FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN\n * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING\n * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\n#ifndef SASLINT_H\n#define SASLINT_H\n\n#include <config.h>\n#include \"sasl.h\"\n#include \"saslplug.h\"\n#include \"saslutil.h\"\n#include \"prop.h\"\n\n#ifndef INLINE\n#if defined (WIN32)\n/* Visual Studio: \"inline\" keyword is not available in C, only in C++ */\n#define INLINE __inline\n#else\n#define INLINE  inline\n#endif\n#endif\n\n/* #define'd constants */\n#define CANON_BUF_SIZE 1024\n\n/* Error Handling Foo */\n/* Helpful Hints:\n *  -Error strings are set as soon as possible (first function in stack trace\n *   with a pointer to the sasl_conn_t.\n *  -Error codes are set as late as possible (only in the sasl api functions),\n *   though \"as often as possible\" also comes to mind to ensure correctness\n *  -Errors from calls to _buf_alloc, _sasl_strdup, etc are assumed to be\n *   memory errors.\n *  -Only errors (error codes < SASL_OK) should be remembered\n */\n#define RETURN(conn, val) { if(conn && (val) < SASL_OK) \\\n                               (conn)->error_code = (val); \\\n                            return (val); }\n#define MEMERROR(conn) {\\\n    if(conn) sasl_seterror( (conn), 0, \\\n                   \"Out of Memory in \" __FILE__ \" near line %d\", __LINE__ ); \\\n    RETURN(conn, SASL_NOMEM) }\n#define PARAMERROR(conn) {\\\n    if(conn) sasl_seterror( (conn), SASL_NOLOG, \\\n                  \"Parameter error in \" __FILE__ \" near line %d\", __LINE__ ); \\\n    RETURN(conn, SASL_BADPARAM) }\n#define INTERROR(conn, val) {\\\n    if(conn) sasl_seterror( (conn), 0, \\\n                   \"Internal Error %d in \" __FILE__ \" near line %d\", (val),\\\n\t\t   __LINE__ ); \\\n    RETURN(conn, (val)) }\n\n#ifndef PATH_MAX\n# ifdef WIN32\n#  define PATH_MAX MAX_PATH\n# else\n#  ifdef _POSIX_PATH_MAX\n#   define PATH_MAX _POSIX_PATH_MAX\n#  else\n#   define PATH_MAX 1024         /* arbitrary; probably big enough.\n                                  * will probably only be 256+64 on\n                                  * pre-posix machines */\n#  endif /* _POSIX_PATH_MAX */\n# endif /* WIN32 */\n#endif\n\n/* : Define directory delimiter in SASL_PATH/SASL_CONF_PATH variables */\n#ifdef WIN32\n#define PATHS_DELIMITER\t';'\n#else\n#define PATHS_DELIMITER\t':'\n#endif\n\n/* Datatype Definitions */\ntypedef struct {\n  const sasl_callback_t *callbacks;\n  const char *appname;\n} sasl_global_callbacks_t;\n\ntypedef struct _sasl_external_properties \n{\n    sasl_ssf_t ssf;\n    char *auth_id;\n} _sasl_external_properties_t;\n\ntypedef struct sasl_string_list\n{\n    const char *d;\n    struct sasl_string_list *next;\n} sasl_string_list_t;\n\ntypedef struct buffer_info\n{ \n    char *data;\n    size_t curlen;\n    size_t reallen;\n} buffer_info_t;\n\ntypedef int add_plugin_t(const char *, void *);\n\ntypedef struct add_plugin_list \n{\n    const char *entryname;\n    add_plugin_t *add_plugin;\n} add_plugin_list_t;\n\nenum Sasl_conn_type { SASL_CONN_UNKNOWN = 0,\n\t\t      SASL_CONN_SERVER = 1,\n                      SASL_CONN_CLIENT = 2 };\n\nstruct sasl_conn {\n  enum Sasl_conn_type type;\n\n  void (*destroy_conn)(sasl_conn_t *); /* destroy function */\n\n  char *service;\n\n  unsigned int flags;  /* flags passed to sasl_*_new */\n\n  /* IP information.  A buffer of size 52 is adequate for this in its\n     longest format (see sasl.h) */\n  int got_ip_local, got_ip_remote;\n  char iplocalport[NI_MAXHOST + NI_MAXSERV];\n  char ipremoteport[NI_MAXHOST + NI_MAXSERV];\n\n  void *context;\n  sasl_out_params_t oparams;\n\n  sasl_security_properties_t props;\n  _sasl_external_properties_t external;\n\n  sasl_secret_t *secret;\n\n  int (*idle_hook)(sasl_conn_t *conn);\n  const sasl_callback_t *callbacks;\n  const sasl_global_callbacks_t *global_callbacks; /* global callbacks\n\t\t\t\t\t\t    * connection */\n  char *serverFQDN;\n\n  /* Pointers to memory that we are responsible for */\n  buffer_info_t *encode_buf;\n\n  int error_code;\n  char *error_buf, *errdetail_buf;\n  size_t error_buf_len, errdetail_buf_len;\n  char *mechlist_buf;\n  size_t mechlist_buf_len;\n\n  char *decode_buf;\n\n  char user_buf[CANON_BUF_SIZE+1], authid_buf[CANON_BUF_SIZE+1];\n\n  /* Allocated by sasl_encodev if the output contains multiple SASL packet. */\n  buffer_info_t multipacket_encoded_data;\n};\n\n/* Server Conn Type Information */\n\ntypedef struct mechanism\n{\n    server_sasl_mechanism_t m;\n    struct mechanism *next;\n} mechanism_t;\n\ntypedef struct mech_list {\n  const sasl_utils_t *utils;  /* gotten from plug_init */\n\n  void *mutex;            /* mutex for this data */ \n  mechanism_t *mech_list; /* list of loaded mechanisms */\n  int mech_length;        /* number of loaded mechanisms */\n} mech_list_t;\n\ntypedef struct context_list \n{\n    mechanism_t *mech;\n    void *context;     /* if NULL, this mech is disabled for this connection\n\t\t\t* otherwise, use this context instead of a call\n\t\t\t* to mech_new */\n    struct context_list *next;\n} context_list_t;\n\ntypedef struct sasl_server_conn {\n    sasl_conn_t base; /* parts common to server + client */\n\n    char *appname; /* application name buffer (for sparams) */\n    char *user_realm; /* domain the user authenticating is in */\n    int sent_last; /* Have we already done the last send? */\n    int authenticated;\n    mechanism_t *mech; /* mechanism trying to use */\n    sasl_server_params_t *sparams;\n    context_list_t *mech_contexts;\n    mechanism_t *mech_list; /* list of available mechanisms */\n    int mech_length;        /* number of available mechanisms */\n} sasl_server_conn_t;\n\n/* Client Conn Type Information */\n\ntypedef struct cmechanism\n{\n    client_sasl_mechanism_t m;\n    struct cmechanism *next;  \n} cmechanism_t;\n\ntypedef struct cmech_list {\n  const sasl_utils_t *utils; \n\n  void *mutex;            /* mutex for this data */ \n  cmechanism_t *mech_list; /* list of mechanisms */\n  int mech_length;       /* number of mechanisms */\n\n} cmech_list_t;\n\ntypedef struct sasl_client_conn {\n  sasl_conn_t base; /* parts common to server + client */\n\n  cmechanism_t *mech;\n  sasl_client_params_t *cparams;\n\n  char *clientFQDN;\n\n  cmechanism_t *mech_list; /* list of available mechanisms */\n  int mech_length;\t   /* number of available mechanisms */\n} sasl_client_conn_t;\n\ntypedef struct sasl_allocation_utils {\n  sasl_malloc_t *malloc;\n  sasl_calloc_t *calloc;\n  sasl_realloc_t *realloc;\n  sasl_free_t *free;\n} sasl_allocation_utils_t;\n\ntypedef struct sasl_mutex_utils {\n  sasl_mutex_alloc_t *alloc;\n  sasl_mutex_lock_t *lock;\n  sasl_mutex_unlock_t *unlock;\n  sasl_mutex_free_t *free;\n} sasl_mutex_utils_t;\n\ntypedef struct sasl_log_utils_s {\n  sasl_log_t *log;\n} sasl_log_utils_t;\n\ntypedef int sasl_plaintext_verifier(sasl_conn_t *conn,\n\t\t\t\t    const char *userid,\n\t\t\t\t    const char *passwd,\n\t\t\t\t    const char *service,\n\t\t\t\t    const char *user_realm);\n\nstruct sasl_verify_password_s {\n    char *name;\n    sasl_plaintext_verifier *verify;\n};\n\n/*\n * globals & constants\n */\n/*\n * common.c\n */\nLIBSASL_API const sasl_utils_t *sasl_global_utils;\n\nextern int (*_sasl_client_idle_hook)(sasl_conn_t *conn);\nextern int (*_sasl_server_idle_hook)(sasl_conn_t *conn);\n\n/* These return SASL_OK if we've actually finished cleanup, \n * SASL_NOTINIT if that part of the library isn't initialized, and\n * SASL_CONTINUE if we need to call them again */\nextern int (*_sasl_client_cleanup_hook)(void);\nextern int (*_sasl_server_cleanup_hook)(void);\n\nextern sasl_allocation_utils_t _sasl_allocation_utils;\nextern sasl_mutex_utils_t _sasl_mutex_utils;\nextern int _sasl_allocation_locked;\n\nvoid sasl_common_done(void);\n\nextern int _sasl_is_equal_mech(const char *req_mech,\n                               const char *plug_mech,\n                               size_t req_mech_len,\n                               int *plus);\n\n/*\n * checkpw.c\n */\nextern struct sasl_verify_password_s _sasl_verify_password[];\n\n/*\n * server.c\n */\n/* (this is a function call to ensure this is read-only to the outside) */\nextern int _is_sasl_server_active(void);\n\n/*\n * Allocation and Mutex utility macros\n */\n#define sasl_ALLOC(__size__) (_sasl_allocation_utils.malloc((__size__)))\n#define sasl_CALLOC(__nelem__, __size__) \\\n\t(_sasl_allocation_utils.calloc((__nelem__), (__size__)))\n#define sasl_REALLOC(__ptr__, __size__) \\\n\t(_sasl_allocation_utils.realloc((__ptr__), (__size__)))\n#define sasl_FREE(__ptr__) (_sasl_allocation_utils.free((__ptr__)))\n\n#define sasl_MUTEX_ALLOC() (_sasl_mutex_utils.alloc())\n#define sasl_MUTEX_LOCK(__mutex__) (_sasl_mutex_utils.lock((__mutex__)))\n#define sasl_MUTEX_UNLOCK(__mutex__) (_sasl_mutex_utils.unlock((__mutex__)))\n#define sasl_MUTEX_FREE(__mutex__) \\\n\t(_sasl_mutex_utils.free((__mutex__)))\n\n/* function prototypes */\n/*\n * dlopen.c and staticopen.c\n */\n/*\n * The differences here are:\n * _sasl_load_plugins loads all plugins from all files\n * _sasl_get_plugin loads the LIBRARY for an individual file\n * _sasl_done_with_plugins frees the LIBRARIES loaded by the above 2\n * _sasl_locate_entry locates an entrypoint in a given library\n */\nextern int _sasl_load_plugins(const add_plugin_list_t *entrypoints,\n\t\t\t       const sasl_callback_t *getpath_callback,\n\t\t\t       const sasl_callback_t *verifyfile_callback);\nextern int _sasl_get_plugin(const char *file,\n\t\t\t    const sasl_callback_t *verifyfile_cb,\n\t\t\t    void **libraryptr);\nextern int _sasl_locate_entry(void *library, const char *entryname,\n                              void **entry_point);\nextern int _sasl_done_with_plugins();\n\n/*\n * common.c\n */\nextern const sasl_callback_t *\n_sasl_find_getpath_callback(const sasl_callback_t *callbacks);\n\nextern const sasl_callback_t *\n_sasl_find_getconfpath_callback(const sasl_callback_t *callbacks);\n\nextern const sasl_callback_t *\n_sasl_find_verifyfile_callback(const sasl_callback_t *callbacks);\n\nextern int _sasl_common_init(sasl_global_callbacks_t *global_callbacks);\n\nextern int _sasl_conn_init(sasl_conn_t *conn,\n\t\t\t   const char *service,\n\t\t\t   unsigned int flags,\n\t\t\t   enum Sasl_conn_type type,\n\t\t\t   int (*idle_hook)(sasl_conn_t *conn),\n\t\t\t   const char *serverFQDN,\n\t\t\t   const char *iplocalport,\n\t\t\t   const char *ipremoteport,\n\t\t\t   const sasl_callback_t *callbacks,\n\t\t\t   const sasl_global_callbacks_t *global_callbacks);\nextern void _sasl_conn_dispose(sasl_conn_t *conn);\n\nextern sasl_utils_t *\n_sasl_alloc_utils(sasl_conn_t *conn,\n\t\t  sasl_global_callbacks_t *global_callbacks);\nextern int _sasl_free_utils(const sasl_utils_t ** utils);\n\nextern int\n_sasl_getcallback(sasl_conn_t * conn,\n\t\t  unsigned long callbackid,\n\t\t  sasl_callback_ft * pproc,\n\t\t  void **pcontext);\n\nextern void\n_sasl_log(sasl_conn_t *conn,\n\t  int level,\n\t  const char *fmt,\n\t  ...);\n\nvoid _sasl_get_errorbuf(sasl_conn_t *conn, char ***bufhdl, size_t **lenhdl);\nint _sasl_add_string(char **out, size_t *alloclen,\n\t\t     size_t *outlen, const char *add);\n\n/* More Generic Utilities in common.c */\nextern int _sasl_strdup(const char *in, char **out, size_t *outlen);\n\n/* Basically a conditional call to realloc(), if we need more */\nint _buf_alloc(char **rwbuf, size_t *curlen, size_t newlen);\n\n/* convert an iovec to a single buffer */\nint _iovec_to_buf(const struct iovec *vec,\n\t\t  unsigned numiov, buffer_info_t **output);\n\n/* Convert between string formats and sockaddr formats */\nint _sasl_iptostring(const struct sockaddr *addr, socklen_t addrlen,\n\t\t     char *out, unsigned outlen);\nint _sasl_ipfromstring(const char *addr, struct sockaddr *out,\n\t\t       socklen_t outlen);\n\n/*\n * external plugin (external.c)\n */\nint external_client_plug_init(const sasl_utils_t *utils,\n\t\t\t      int max_version,\n\t\t\t      int *out_version,\n\t\t\t      sasl_client_plug_t **pluglist,\n\t\t\t      int *plugcount);\nint external_server_plug_init(const sasl_utils_t *utils,\n\t\t\t      int max_version,\n\t\t\t      int *out_version,\n\t\t\t      sasl_server_plug_t **pluglist,\n\t\t\t      int *plugcount);\n\n/* Mech Listing Functions */\nint _sasl_build_mechlist(void);\nint _sasl_server_listmech(sasl_conn_t *conn,\n\t\t\t  const char *user,\n\t\t\t  const char *prefix,\n\t\t\t  const char *sep,\n\t\t\t  const char *suffix,\n\t\t\t  const char **result,\n\t\t\t  unsigned *plen,\n\t\t\t  int *pcount);\nint _sasl_client_listmech(sasl_conn_t *conn,\n\t\t\t  const char *prefix,\n\t\t\t  const char *sep,\n\t\t\t  const char *suffix,\n\t\t\t  const char **result,\n\t\t\t  unsigned *plen,\n\t\t\t  int *pcount);\n/* Just create a straight list of them */\nsasl_string_list_t *_sasl_client_mechs(void);\nsasl_string_list_t *_sasl_server_mechs(void);\n\n/*\n * config file declarations (config.c)\n */\nextern const char *sasl_config_getstring(const char *key,const char *def);\n\n/* checkpw.c */\n#ifdef DO_SASL_CHECKAPOP\nextern int _sasl_auxprop_verify_apop(sasl_conn_t *conn,\n\t\t\t\t     const char *userstr,\n\t\t\t\t     const char *challenge,\n\t\t\t\t     const char *response,\n\t\t\t\t     const char *user_realm);\n#endif /* DO_SASL_CHECKAPOP */\n\n/* Auxprop Plugin (sasldb.c) */\nextern int sasldb_auxprop_plug_init(const sasl_utils_t *utils,\n\t\t\t\t    int max_version,\n\t\t\t\t    int *out_version,\n\t\t\t\t    sasl_auxprop_plug_t **plug,\n\t\t\t\t    const char *plugname);\n\n/*\n * auxprop.c\n */\nextern int _sasl_auxprop_add_plugin(void *p, void *library);\nextern void _sasl_auxprop_free(void);\nextern int _sasl_auxprop_lookup(sasl_server_params_t *sparams,\n\t\t\t\t unsigned flags,\n\t\t\t\t const char *user, unsigned ulen);\n\n/*\n * canonusr.c\n */\nvoid _sasl_canonuser_free();\nextern int internal_canonuser_init(const sasl_utils_t *utils,\n\t\t\t\t   int max_version,\n\t\t\t\t   int *out_version,\n\t\t\t\t   sasl_canonuser_plug_t **plug,\n\t\t\t\t   const char *plugname);\nextern int _sasl_canon_user(sasl_conn_t *conn,\n\t\t\t    const char *user,\n\t\t\t    unsigned ulen,\n\t\t\t    unsigned flags,\n\t\t\t    sasl_out_params_t *oparams);\nint _sasl_canon_user_lookup (sasl_conn_t *conn,\n\t\t\t     const char *user,\n\t\t\t     unsigned ulen,\n\t\t\t     unsigned flags,\n\t\t\t     sasl_out_params_t *oparams);\n\n/*\n * saslutil.c\n */\nint get_fqhostname(\n  char *name,  \n  int namelen,\n  int abort_if_no_fqdn\n  );\n\n#endif /* SASLINT_H */\n",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/dlcompat-20010505/dlfcn.h": "/*\n * This file was modified by Christoph Pfisterer <cp@chrisp.de>\n * on Sat, May 5 2001. See the file \"ChangeLog\" for details of what\n * was changed.\n *\n *\n * Copyright (c) 1999 Apple Computer, Inc. All rights reserved.\n *\n * @APPLE_LICENSE_HEADER_START@\n * \n * Portions Copyright (c) 1999 Apple Computer, Inc.  All Rights\n * Reserved.  This file contains Original Code and/or Modifications of\n * Original Code as defined in and that are subject to the Apple Public\n * Source License Version 1.1 (the \"License\").  You may not use this file\n * except in compliance with the License.  Please obtain a copy of the\n * License at http://www.apple.com/publicsource and read it before using\n * this file.\n * \n * The Original Code and all software distributed under the License are\n * distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY KIND, EITHER\n * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,\n * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE OR NON- INFRINGEMENT.  Please see the\n * License for the specific language governing rights and limitations\n * under the License.\n * \n * @APPLE_LICENSE_HEADER_END@\n */\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\nextern void * dlopen(\n    const char *path,\n    int mode);\nextern void * dlsym(\n    void * handle,\n    const char *symbol);\nextern const char * dlerror(\n    void);\nextern int dlclose(\n    void * handle);\n\n#define RTLD_LAZY\t0x1\n#define RTLD_NOW\t0x2\n#define RTLD_LOCAL\t0x4\n#define RTLD_GLOBAL\t0x8\n#define RTLD_NOLOAD\t0x10\n#define RTLD_SHARED\t0x20\t/* not used, the default */\n#define RTLD_UNSHARED\t0x40\n#define RTLD_NODELETE\t0x80\n#define RTLD_LAZY_UNDEF\t0x100\n\n#ifdef __cplusplus\n}\n#endif\n",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/dlcompat-20010505/dlopen.c": "/*\n * This file was modified by Christoph Pfisterer <cp@chrisp.de>\n * on Tue, Jan 23 2001. See the file \"ChangeLog\" for details of what\n * was changed.\n *\n *\n * Copyright (c) 1999 Apple Computer, Inc. All rights reserved.\n *\n * @APPLE_LICENSE_HEADER_START@\n * \n * Portions Copyright (c) 1999 Apple Computer, Inc.  All Rights\n * Reserved.  This file contains Original Code and/or Modifications of\n * Original Code as defined in and that are subject to the Apple Public\n * Source License Version 1.1 (the \"License\").  You may not use this file\n * except in compliance with the License.  Please obtain a copy of the\n * License at http://www.apple.com/publicsource and read it before using\n * this file.\n * \n * The Original Code and all software distributed under the License are\n * distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY KIND, EITHER\n * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,\n * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE OR NON- INFRINGEMENT.  Please see the\n * License for the specific language governing rights and limitations\n * under the License.\n * \n * @APPLE_LICENSE_HEADER_END@\n */\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <errno.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <limits.h>\n#include \"mach-o/dyld.h\"\n#include \"dlfcn.h\"\n\n/*\n * debugging macros\n */\n#if DEBUG > 0\n#define DEBUG_PRINT(format) fprintf(stderr,(format));fflush(stderr)\n#define DEBUG_PRINT1(format,arg1) fprintf(stderr,(format),(arg1));\\\n  fflush(stderr)\n#define DEBUG_PRINT2(format,arg1,arg2) fprintf(stderr,(format),\\\n  (arg1),(arg2));fflush(stderr)\n#define DEBUG_PRINT3(format,arg1,arg2,arg3) fprintf(stderr,(format),\\\n  (arg1),(arg2),(arg3));fflush(stderr)\n#else\n#define DEBUG_PRINT(format) /**/\n#define DEBUG_PRINT1(format,arg1) /**/\n#define DEBUG_PRINT2(format,arg1,arg2) /**/\n#define DEBUG_PRINT3(format,arg1,arg2,arg3) /**/\n#undef DEBUG\n#endif\n\n/*\n * The structure of a dlopen() handle.\n */\nstruct dlopen_handle {\n    dev_t dev;\t\t/* the path's device and inode number from stat(2) */\n    ino_t ino; \n    int dlopen_mode;\t/* current dlopen mode for this handle */\n    int dlopen_count;\t/* number of times dlopen() called on this handle */\n    NSModule module;\t/* the NSModule returned by NSLinkModule() */\n    struct dlopen_handle *prev;\n    struct dlopen_handle *next;\n};\nstatic struct dlopen_handle *dlopen_handles = NULL;\nstatic const struct dlopen_handle main_program_handle = {NULL};\nstatic char *dlerror_pointer = NULL;\n\n/*\n * NSMakePrivateModulePublic() is not part of the public dyld API so we define\n * it here.  The internal dyld function pointer for\n * __dyld_NSMakePrivateModulePublic is returned so thats all that maters to get\n * the functionality need to implement the dlopen() interfaces.\n */\nstatic\nint\nNSMakePrivateModulePublic(\nNSModule module)\n{\n    static int (*p)(NSModule module) = NULL;\n\n\tif(p == NULL)\n\t    _dyld_func_lookup(\"__dyld_NSMakePrivateModulePublic\",\n\t\t\t      (unsigned long *)&p);\n\tif(p == NULL){\n#ifdef DEBUG\n\t    printf(\"_dyld_func_lookup of __dyld_NSMakePrivateModulePublic \"\n\t\t   \"failed\\n\");\n#endif\n\t    return(FALSE);\n\t}\n\treturn(p(module));\n}\n\n/*\n * helper routine: search for a named module in various locations\n */\nstatic\nint\n_dl_search_paths(\nconst char *filename,\nchar *pathbuf,\nstruct stat *stat_buf)\n{\n    const char *pathspec;\n    const char *element;\n    const char *p;\n    char *q;\n    char *pathbuf_end;\n    const char *envvars[] = {\n        \"$DYLD_LIBRARY_PATH\",\n        \"$LD_LIBRARY_PATH\",\n        \"/usr/lib:/lib\",\n        NULL };\n    int envvar_index;\n\n        pathbuf_end = pathbuf + PATH_MAX - 8;\n\n\tfor(envvar_index = 0; envvars[envvar_index]; envvar_index++){\n\t    if(envvars[envvar_index][0] == '$'){\n\t        pathspec = getenv(envvars[envvar_index]+1);\n\t    }\n\t    else {\n\t        pathspec = envvars[envvar_index];\n\t    }\n\n\t    if(pathspec != NULL){\n\t        element = pathspec;\n\t\twhile(*element){\n\t            /* extract path list element */\n\t\t    p = element;\n\t\t    q = pathbuf;\n\t\t    while(*p && *p != ':' && q < pathbuf_end)\n                        *q++ = *p++;\n\t\t    if(q == pathbuf){  /* empty element */\n\t\t        if(*p){\n\t\t            element = p+1;\n\t\t\t    continue;\n\t\t\t}\n\t\t\tbreak;\n\t\t    }\n\t\t    if (*p){\n\t\t        element = p+1;\n\t\t    }\n\t\t    else{\n\t\t        element = p;  /* this terminates the loop */\n\t\t    }\n\n\t\t    /* add slash if neccessary */\n\t\t    if(*(q-1) != '/' && q < pathbuf_end){\n\t\t        *q++ = '/';\n\t\t    }\n\n\t\t    /* append module name */\n\t\t    p = filename;\n\t\t    while(*p && q < pathbuf_end) *q++ = *p++;\n\t\t    *q++ = 0;\n\n\t\t    if(q >= pathbuf_end){\n\t\t        /* maybe add an error message here */\n\t\t        break;\n\t\t    }\n\n\t\t    if(stat(pathbuf, stat_buf) == 0){\n\t\t        return 0;\n\t\t    }\n\t\t}\n\t    }\n\t}\n\n\t/* we have searched everywhere, now we give up */\n\treturn -1;\n}\n\n/*\n * dlopen() the MacOS X version of the FreeBSD dlopen() interface.\n */\nvoid *\ndlopen(\nconst char *path,\nint mode)\n{\n    const char *module_path;\n    void *retval;\n    struct stat stat_buf;\n    NSObjectFileImage objectFileImage;\n    NSObjectFileImageReturnCode ofile_result_code;\n    NSModule module;\n    struct dlopen_handle *p;\n    unsigned long options;\n    NSSymbol NSSymbol;\n    void (*init)(void);\n    char pathbuf[PATH_MAX];\n\n        DEBUG_PRINT2(\"libdl: dlopen(%s,0x%x) -> \", path, (unsigned int)mode);\n\n\tdlerror_pointer = NULL;\n\t/*\n\t * A NULL path is to indicate the caller wants a handle for the\n\t * main program.\n \t */\n\tif(path == NULL){\n\t    retval = (void *)&main_program_handle;\n\t    DEBUG_PRINT1(\"main / %p\\n\", retval);\n\t    return(retval);\n\t}\n\n\t/* see if the path exists and if so get the device and inode number */\n\tif(stat(path, &stat_buf) == -1){\n\t    dlerror_pointer = strerror(errno);\n\n\t    if(path[0] == '/'){\n\t        DEBUG_PRINT1(\"ERROR (stat): %s\\n\", dlerror_pointer);\n\t        return(NULL);\n\t    }\n\n\t    /* search for the module in various places */\n\t    if(_dl_search_paths(path, pathbuf, &stat_buf)){\n\t        /* dlerror_pointer is unmodified */\n\t        DEBUG_PRINT1(\"ERROR (stat): %s\\n\", dlerror_pointer);\n\t        return(NULL);\n\t    }\n\t    DEBUG_PRINT1(\"found %s -> \", pathbuf);\n\t    module_path = pathbuf;\n\t    dlerror_pointer = NULL;\n\t}\n\telse{\n\t    module_path = path;\n\t}\n\n\t/*\n\t * If we don't want an unshared handle see if we already have a handle\n\t * for this path.\n\t */\n\tif((mode & RTLD_UNSHARED) != RTLD_UNSHARED){\n\t    p = dlopen_handles;\n\t    while(p != NULL){\n\t\tif(p->dev == stat_buf.st_dev && p->ino == stat_buf.st_ino){\n\t\t    /* skip unshared handles */\n\t\t    if((p->dlopen_mode & RTLD_UNSHARED) == RTLD_UNSHARED)\n\t\t\tcontinue;\n\t\t    /*\n\t\t     * We have already created a handle for this path.  The\n\t\t     * caller might be trying to promote an RTLD_LOCAL handle\n\t\t     * to a RTLD_GLOBAL.  Or just looking it up with\n\t\t     * RTLD_NOLOAD.\n\t\t     */\n\t\t    if((p->dlopen_mode & RTLD_LOCAL) == RTLD_LOCAL &&\n\t\t       (mode & RTLD_GLOBAL) == RTLD_GLOBAL){\n\t\t\t/* promote the handle */\n\t\t\tif(NSMakePrivateModulePublic(p->module) == TRUE){\n\t\t\t    p->dlopen_mode &= ~RTLD_LOCAL;\n\t\t\t    p->dlopen_mode |= RTLD_GLOBAL;\n\t\t\t    p->dlopen_count++;\n\t\t\t    DEBUG_PRINT1(\"%p\\n\", p);\n\t\t\t    return(p);\n\t\t\t}\n\t\t\telse{\n\t\t\t    dlerror_pointer = \"can't promote handle from \"\n\t\t\t\t\t      \"RTLD_LOCAL to RTLD_GLOBAL\";\n\t\t\t    DEBUG_PRINT1(\"ERROR: %s\\n\", dlerror_pointer);\n\t\t\t    return(NULL);\n\t\t\t}\n\t\t    }\n\t\t    p->dlopen_count++;\n\t\t    DEBUG_PRINT1(\"%p\\n\", p);\n\t\t    return(p);\n\t\t}\n\t\tp = p->next;\n\t    }\n\t}\n\t\n\t/*\n\t * We do not have a handle for this path if we were just trying to\n\t * look it up return NULL to indicate we don't have it.\n\t */\n\tif((mode & RTLD_NOLOAD) == RTLD_NOLOAD){\n\t    dlerror_pointer = \"no existing handle for path RTLD_NOLOAD test\";\n\t    DEBUG_PRINT1(\"ERROR: %s\\n\", dlerror_pointer);\n\t    return(NULL);\n\t}\n\n\t/* try to create an object file image from this path */\n\tofile_result_code = NSCreateObjectFileImageFromFile(module_path,\n\t\t\t\t\t\t\t    &objectFileImage);\n\tif(ofile_result_code != NSObjectFileImageSuccess){\n\t    switch(ofile_result_code){\n\t    case NSObjectFileImageFailure:\n\t\tdlerror_pointer = \"object file setup failure\";\n\t\tDEBUG_PRINT1(\"ERROR: %s\\n\", dlerror_pointer);\n\t\treturn(NULL);\n\t    case NSObjectFileImageInappropriateFile:\n\t\tdlerror_pointer = \"not a Mach-O MH_BUNDLE file type\";\n\t\tDEBUG_PRINT1(\"ERROR: %s\\n\", dlerror_pointer);\n\t\treturn(NULL);\n\t    case NSObjectFileImageArch:\n\t\tdlerror_pointer = \"no object for this architecture\";\n\t\tDEBUG_PRINT1(\"ERROR: %s\\n\", dlerror_pointer);\n\t\treturn(NULL);\n\t    case NSObjectFileImageFormat:\n\t\tdlerror_pointer = \"bad object file format\";\n\t\tDEBUG_PRINT1(\"ERROR: %s\\n\", dlerror_pointer);\n\t\treturn(NULL);\n\t    case NSObjectFileImageAccess:\n\t\tdlerror_pointer = \"can't read object file\";\n\t\tDEBUG_PRINT1(\"ERROR: %s\\n\", dlerror_pointer);\n\t\treturn(NULL);\n\t    default:\n\t\tdlerror_pointer = \"unknown error from \"\n\t\t\t\t  \"NSCreateObjectFileImageFromFile()\";\n\t\tDEBUG_PRINT1(\"ERROR: %s\\n\", dlerror_pointer);\n\t\treturn(NULL);\n\t    }\n\t}\n\n\t/* try to link in this object file image */\n\toptions = NSLINKMODULE_OPTION_PRIVATE;\n\tif((mode & RTLD_NOW) == RTLD_NOW)\n\t    options |= NSLINKMODULE_OPTION_BINDNOW;\n\tmodule = NSLinkModule(objectFileImage, module_path, options);\n\tNSDestroyObjectFileImage(objectFileImage) ;\n\tif(module == NULL){\n\t    dlerror_pointer = \"NSLinkModule() failed for dlopen()\";\n\t    DEBUG_PRINT1(\"ERROR: %s\\n\", dlerror_pointer);\n\t    return(NULL);\n\t}\n\n\t/*\n\t * If the handle is to be global promote the handle.  It is done this\n\t * way to avoid multiply defined symbols.\n\t */\n\tif((mode & RTLD_GLOBAL) == RTLD_GLOBAL){\n\t    if(NSMakePrivateModulePublic(module) == FALSE){\n\t\tdlerror_pointer = \"can't promote handle from RTLD_LOCAL to \"\n\t\t\t\t  \"RTLD_GLOBAL\";\n\t\tDEBUG_PRINT1(\"ERROR: %s\\n\", dlerror_pointer);\n\t\treturn(NULL);\n\t    }\n\t}\n\n\tp = malloc(sizeof(struct dlopen_handle));\n\tif(p == NULL){\n\t    dlerror_pointer = \"can't allocate memory for the dlopen handle\";\n\t    DEBUG_PRINT1(\"ERROR: %s\\n\", dlerror_pointer);\n\t    return(NULL);\n\t}\n\n\t/* fill in the handle */\n\tp->dev = stat_buf.st_dev;\n        p->ino = stat_buf.st_ino;\n\tif(mode & RTLD_GLOBAL)\n\t    p->dlopen_mode = RTLD_GLOBAL;\n\telse\n\t    p->dlopen_mode = RTLD_LOCAL;\n\tp->dlopen_mode |= (mode & RTLD_UNSHARED) |\n\t\t\t  (mode & RTLD_NODELETE) |\n\t\t\t  (mode & RTLD_LAZY_UNDEF);\n\tp->dlopen_count = 1;\n\tp->module = module;\n\tp->prev = NULL;\n\tp->next = dlopen_handles;\n\tif(dlopen_handles != NULL)\n\t    dlopen_handles->prev = p;\n\tdlopen_handles = p;\n\n\t/* call the init function if one exists */\n\tNSSymbol = NSLookupSymbolInModule(p->module, \"__init\");\n\tif(NSSymbol != NULL){\n\t    init = NSAddressOfSymbol(NSSymbol);\n\t    init();\n\t}\n\t\n\tDEBUG_PRINT1(\"%p\\n\", p);\n\treturn(p);\n}\n\n/*\n * dlsym() the MacOS X version of the FreeBSD dlopen() interface.\n */\nvoid *\ndlsym(\nvoid * handle,\nconst char *symbol)\n{\n    struct dlopen_handle *dlopen_handle, *p;\n    NSSymbol NSSymbol;\n    void *address;\n\n        DEBUG_PRINT2(\"libdl: dlsym(%p,%s) -> \", handle, symbol);\n\n\tdlopen_handle = (struct dlopen_handle *)handle;\n\n\t/*\n\t * If this is the handle for the main program do a global lookup.\n\t */\n\tif(dlopen_handle == (struct dlopen_handle *)&main_program_handle){\n\t    if(NSIsSymbolNameDefined(symbol) == TRUE){\n\t\tNSSymbol = NSLookupAndBindSymbol(symbol);\n\t\taddress = NSAddressOfSymbol(NSSymbol);\n\t\tdlerror_pointer = NULL;\n\t\tDEBUG_PRINT1(\"%p\\n\", address);\n\t\treturn(address);\n\t    }\n\t    else{\n\t\tdlerror_pointer = \"symbol not found\";\n\t\tDEBUG_PRINT1(\"ERROR: %s\\n\", dlerror_pointer);\n\t\treturn(NULL);\n\t    }\n\t}\n\n\t/*\n\t * Find this handle and do a lookup in just this module.\n\t */\n\tp = dlopen_handles;\n\twhile(p != NULL){\n\t    if(dlopen_handle == p){\n\t\tNSSymbol = NSLookupSymbolInModule(p->module, symbol);\n\t\tif(NSSymbol != NULL){\n\t\t    address = NSAddressOfSymbol(NSSymbol);\n\t\t    dlerror_pointer = NULL;\n\t\t    DEBUG_PRINT1(\"%p\\n\", address);\n\t\t    return(address);\n\t\t}\n\t\telse{\n\t\t    dlerror_pointer = \"symbol not found\";\n\t\t    DEBUG_PRINT1(\"ERROR: %s\\n\", dlerror_pointer);\n\t\t    return(NULL);\n\t\t}\n\t    }\n\t    p = p->next;\n\t}\n\n\tdlerror_pointer = \"bad handle passed to dlsym()\";\n\tDEBUG_PRINT1(\"ERROR: %s\\n\", dlerror_pointer);\n\treturn(NULL);\n}\n\n/*\n * dlerror() the MacOS X version of the FreeBSD dlopen() interface.\n */\nconst char *\ndlerror(\nvoid)\n{\n    const char *p;\n\n\tp = (const char *)dlerror_pointer;\n\tdlerror_pointer = NULL;\n\treturn(p);\n}\n\n/*\n * dlclose() the MacOS X version of the FreeBSD dlopen() interface.\n */\nint\ndlclose(\nvoid * handle)\n{\n    struct dlopen_handle *p, *q;\n    unsigned long options;\n    NSSymbol NSSymbol;\n    void (*fini)(void);\n\n        DEBUG_PRINT1(\"libdl: dlclose(%p) -> \", handle);\n\n\tdlerror_pointer = NULL;\n\tq = (struct dlopen_handle *)handle;\n\tp = dlopen_handles;\n\twhile(p != NULL){\n\t    if(p == q){\n\t\t/* if the dlopen() count is not zero we are done */\n\t\tp->dlopen_count--;\n\t\tif(p->dlopen_count != 0){\n\t\t    DEBUG_PRINT(\"OK\");\n\t\t    return(0);\n\t\t}\n\n\t\t/* call the fini function if one exists */\n\t\tNSSymbol = NSLookupSymbolInModule(p->module, \"__fini\");\n\t\tif(NSSymbol != NULL){\n\t\t    fini = NSAddressOfSymbol(NSSymbol);\n\t\t    fini();\n\t\t}\n\n\t\t/* unlink the module for this handle */\n\t\toptions = 0;\n\t\tif(p->dlopen_mode & RTLD_NODELETE)\n\t\t    options |= NSUNLINKMODULE_OPTION_KEEP_MEMORY_MAPPED;\n\t\tif(p->dlopen_mode & RTLD_LAZY_UNDEF)\n\t\t    options |= NSUNLINKMODULE_OPTION_RESET_LAZY_REFERENCES;\n\t\tif(NSUnLinkModule(p->module, options) == FALSE){\n\t\t    dlerror_pointer = \"NSUnLinkModule() failed for dlclose()\";\n\t\t    DEBUG_PRINT1(\"ERROR: %s\\n\", dlerror_pointer);\n\t\t    return(-1);\n\t\t}\n\t\tif(p->prev != NULL)\n\t\t    p->prev->next = p->next;\n\t\tif(p->next != NULL)\n\t\t    p->next->prev = p->prev;\n\t\tif(dlopen_handles == p)\n\t\t    dlopen_handles = p->next;\n\t\tfree(p);\n\t\tDEBUG_PRINT(\"OK\");\n\t\treturn(0);\n\t    }\n\t    p = p->next;\n\t}\n\tdlerror_pointer = \"invalid handle passed to dlclose()\";\n\tDEBUG_PRINT1(\"ERROR: %s\\n\", dlerror_pointer);\n\treturn(-1);\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/mac_lib/mac_monolithic_dlopen.c": "/* \n * Copyright (c) 1998-2003 Carnegie Mellon University.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer. \n *\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in\n *    the documentation and/or other materials provided with the\n *    distribution.\n *\n * 3. The name \"Carnegie Mellon University\" must not be used to\n *    endorse or promote products derived from this software without\n *    prior written permission. For permission or any other legal\n *    details, please contact  \n *      Office of Technology Transfer\n *      Carnegie Mellon University\n *      5000 Forbes Avenue\n *      Pittsburgh, PA  15213-3890\n *      (412) 268-4387, fax: (412) 268-7395\n *      tech-transfer@andrew.cmu.edu\n *\n * 4. Redistributions of any form whatsoever must retain the following\n *    acknowledgment:\n *    \"This product includes software developed by Computing Services\n *     at Carnegie Mellon University (http://www.cmu.edu/computing/).\"\n *\n * CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO\n * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE\n * FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN\n * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING\n * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n/* $Id: mac_monolithic_dlopen.c,v 1.3 2003/02/13 19:55:59 rjs3 Exp $ */\n\n#include <config.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sasl.h>\n#include \"saslint.h\"\n\n#include <sasl_plain_plugin_decl.h>\n#undef sasl_server_plug_init\n#undef sasl_client_plug_init\n\n#include <sasl_anonymous_plugin_decl.h>\n#undef sasl_server_plug_init\n#undef sasl_client_plug_init\n\n#include <sasl_cram_plugin_decl.h>\n#undef sasl_server_plug_init\n#undef sasl_client_plug_init\n\n#include <sasl_md5_plugin_decl.h>\n#undef sasl_server_plug_init\n#undef sasl_client_plug_init\n\n#include <sasl_scram_plugin_decl.h>\n#undef sasl_server_plug_init\n#undef sasl_client_plug_init\n\n#include <sasl_kerberos4_plugin_decl.h>\n#undef sasl_server_plug_init\n#undef sasl_client_plug_init\n\n#include <stdio.h>\n\n/* gets the list of mechanisms */\nint _sasl_get_mech_list(const char *entryname,\n\t\t\tconst sasl_callback_t *getpath_cb,\n\t\t\tconst sasl_callback_t *verifyfile_cb,\n\t\t\tint (*add_plugin)(void *,void *))\n{\n\tif(strcmp(entryname,\"sasl_client_plug_init\")==0) {\n\t\t(*add_plugin)(kerberos4_sasl_client_plug_init,(void*)1);\n\t\t(*add_plugin)(anonymous_sasl_client_plug_init,(void*)1);\n\t\t(*add_plugin)(cram_sasl_client_plug_init,(void*)1);\n\t\t(*add_plugin)(scram_sasl_client_plug_init,(void*)1);\n\t\t(*add_plugin)(md5_sasl_client_plug_init,(void*)1);\n\t\t(*add_plugin)(plain_sasl_client_plug_init,(void*)1);\n\t} else if(strcmp(entryname,\"sasl_server_plug_init\")==0) {\n\t\t(*add_plugin)(kerberos4_sasl_server_plug_init,(void*)1);\n\t\t(*add_plugin)(anonymous_sasl_server_plug_init,(void*)1);\n\t\t(*add_plugin)(cram_sasl_server_plug_init,(void*)1);\n\t\t(*add_plugin)(scram_sasl_server_plug_init,(void*)1);\n\t\t(*add_plugin)(md5_sasl_server_plug_init,(void*)1);\n\t\t(*add_plugin)(plain_sasl_server_plug_init,(void*)1);\n\t} else\n\t\treturn SASL_BADPARAM;\n\t\n  \treturn SASL_OK;\n}\n\nint _sasl_done_with_plugin(void *plugin)\n{\n  if (! plugin)\n    return SASL_BADPARAM;\n\n  return SASL_OK;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/mac_lib/mac_dyn_dlopen.c": "/*\n * load the sasl plugins\n * $Id: mac_dyn_dlopen.c,v 1.3 2003/02/13 19:55:59 rjs3 Exp $\n */\n/* \n * Copyright (c) 1998-2003 Carnegie Mellon University.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer. \n *\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in\n *    the documentation and/or other materials provided with the\n *    distribution.\n *\n * 3. The name \"Carnegie Mellon University\" must not be used to\n *    endorse or promote products derived from this software without\n *    prior written permission. For permission or any other legal\n *    details, please contact  \n *      Office of Technology Transfer\n *      Carnegie Mellon University\n *      5000 Forbes Avenue\n *      Pittsburgh, PA  15213-3890\n *      (412) 268-4387, fax: (412) 268-7395\n *      tech-transfer@andrew.cmu.edu\n *\n * 4. Redistributions of any form whatsoever must retain the following\n *    acknowledgment:\n *    \"This product includes software developed by Computing Services\n *     at Carnegie Mellon University (http://www.cmu.edu/computing/).\"\n *\n * CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO\n * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE\n * FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN\n * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING\n * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\n\n#include <config.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sasl.h>\n#include \"saslint.h\"\n\n#include <CodeFragments.h>\n#include <Errors.h>\n#include <Resources.h>\n#include <Strings.h>\n#include <Folders.h>\n\n#ifdef RUBBISH\n#include <FSpCompat.h>\n#endif\n\n/*\n * The following data structure defines the structure of a code fragment\n * resource.  We can cast the resource to be of this type to access\n * any fields we need to see.\n */\nstruct CfrgHeader {\n    long \tres1;\n    long \tres2;\n    long \tversion;\n    long \tres3;\n    long \tres4;\n    long \tfiller1;\n    long \tfiller2;\n    long \titemCount;\n    char\tarrayStart;\t/* Array of externalItems begins here. */\n};\ntypedef struct CfrgHeader CfrgHeader, *CfrgHeaderPtr, **CfrgHeaderPtrHand;\n\n/*\n * The below structure defines a cfrag item within the cfrag resource.\n */\nstruct CfrgItem {\n    OSType \tarchType;\n    long \tupdateLevel;\n    long\tcurrVersion;\n    long\toldDefVersion;\n    long\tappStackSize;\n    short\tappSubFolder;\n    char\tusage;\n    char\tlocation;\n    long\tcodeOffset;\n    long\tcodeLength;\n    long\tres1;\n    long\tres2;\n    short\titemSize;\n    Str255\tname;\t\t/* This is actually variable sized. */\n};\ntypedef struct CfrgItem CfrgItem;\n\n#ifndef TRUE\n#define TRUE 1\n#endif\n#ifndef FALSE\n#define FALSE 0\n#endif\n\n#if TARGET_API_MAC_CARBON\n#define SASL_PLUGIN_DIR \"\\p:sasl v2:carbon:biff\"\n#else\n#define SASL_PLUGIN_DIR \"\\p:sasl v2:biff\"\n#endif\n\ntypedef struct lib_list \n{\n    struct lib_list *next;\n    void *library;\n} lib_list_t;\n\nstatic lib_list_t *lib_list_head = NULL;\n\n/*\n * add the passed extension\n */\nint _macsasl_get_fsspec(FSSpec *fspec,\n\tvoid **libraryptr)\n{\n\tint rc;\n    CFragConnectionID connID;\n    Ptr dummy;\n    unsigned long offset = 0;\n    unsigned long length = kCFragGoesToEOF;\n    unsigned char package_name[255];\n   \tStr255 error_text;\n   \tlib_list_t *newhead;\n\n    newhead = sasl_ALLOC(sizeof(lib_list_t));\n    if(!newhead) return SASL_NOMEM;\n\n   \tpackage_name[0] = 0;\n    rc=GetDiskFragment(fspec,offset,length,package_name,\n\t    kLoadCFrag,&connID,&dummy,error_text);\n\tif(rc!=0) {\n\t\tsasl_FREE(newhead);\n\t\treturn rc;\n\t}\n\n    newhead->library = (void *)connID;\n    newhead->next = lib_list_head;\n    lib_list_head = newhead;\n\n    *libraryptr = (void *)connID;\n    return SASL_OK;\n}\n\nint _sasl_locate_entry(void *library, const char *entryname,\n\t\t       void **entry_point) \n{\n\tint result;\n#if TARGET_API_MAC_CARBON\n    char cstr[256];\n#endif\n\tStr255 pentry;\n    CFragSymbolClass symClass;\n    OSErr rc;\n\n    if(!entryname) {\n\treturn SASL_BADPARAM;\n    }\n\n    if(!library) {\n\treturn SASL_BADPARAM;\n    }\n\n    if(!entry_point) {\n\treturn SASL_BADPARAM;\n    }\n\n#if TARGET_API_MAC_CARBON\n\tstrcpy(cstr,entryname);\n    CopyCStringToPascal(cstr, pentry);\n#else\n\tstrcpy(pentry,entryname);\n    c2pstr(pentry);\n#endif\n\n    rc = FindSymbol((CFragConnectionID)library,pentry,entry_point, &symClass);\n    if ((rc!=noErr) || (symClass==kDataCFragSymbol))\n    \treturn SASL_FAIL;\n\n\treturn SASL_OK;\n}\n\nstatic int _sasl_plugin_load(char *plugin, void *library,\n\t\t\t     const char *entryname,\n\t\t\t     int (*add_plugin)(const char *, void *)) \n{\n    void *entry_point;\n    int result;\n    \n    result = _sasl_locate_entry(library, entryname, &entry_point);\n    if(result == SASL_OK) {\n\tresult = add_plugin(plugin, entry_point);\n//\tif(result != SASL_OK)\n//\t    _sasl_log(NULL, SASL_LOG_ERR,\n//\t\t      \"_sasl_plugin_load failed on %s for plugin: %s\\n\",\n//\t\t      entryname, plugin);\n    }\n\n    return result;\n}\n\n/*\n * does the passed string a occur and the end of string b?\n */\nint _macsasl_ends_in(char *a, char *b)\n{\n\tint alen=strlen(a);\n\tint blen=strlen(b);\n\tif(blen<alen)\n\t\treturn FALSE;\n\treturn (memcmp(a,b+(blen-alen),alen)==0);\n}\n\n/*\n * scan the passed directory loading sasl extensions\n */\nint _macsasl_find_extensions_in_dir(short vref,long dir_id,\n\tconst add_plugin_list_t *entrypoints)\n{\n\tCInfoPBRec cinfo;\n\tunsigned char aname[300];\n\tchar plugname[256];\n\tint findex=0;\n\tFSSpec a_plugin;\n\tlib_list_t *library;\n\tchar *c;\n\tconst add_plugin_list_t *cur_ep;\n\n\twhile(TRUE) {\n\t\tint os;\n\t\tmemset(&cinfo,0,sizeof(cinfo));\n\t\taname[0] = 0;\n\t\tcinfo.hFileInfo.ioVRefNum=vref;\n\t\tcinfo.hFileInfo.ioNamePtr=aname;\n\t\tcinfo.hFileInfo.ioFDirIndex=findex++;\n\t\tcinfo.hFileInfo.ioDirID=dir_id;\n\t\tos=PBGetCatInfo(&cinfo,FALSE);\n\t\tif(os!=0)\n\t\t\treturn SASL_OK;\n\t\taname[aname[0]+1] = 0;\n\n\t\t/* skip over non shlb files */\n\t\tif(!_macsasl_ends_in(\".shlb\",aname+1))\n\t\t\tcontinue;\n\t\tos=FSMakeFSSpec(vref,dir_id,aname,&a_plugin);\n\t\tif(os!=0)\n\t\t\tcontinue;\n\n\t\t/* skip \"lib\" and cut off suffix --\n\t\t   this only need be approximate */\n\t\tstrcpy(plugname, aname + 1);\n\t\tc = strchr(plugname, (int)'.');\n\t\tif(c) *c = '\\0';\n\n\t\tif (!_macsasl_get_fsspec(&a_plugin,&library))\n\t\t\tfor(cur_ep = entrypoints; cur_ep->entryname; cur_ep++) {\n\t\t\t\t_sasl_plugin_load(plugname, library, cur_ep->entryname,\n\t\t\t\t\t\t  cur_ep->add_plugin);\n\t\t\t\t/* If this fails, it's not the end of the world */\n\t\t\t}\n\t}\n\treturn SASL_OK;\n}\n\n/* gets the list of mechanisms */\nint _sasl_load_plugins(const add_plugin_list_t *entrypoints,\n\t\t\tconst sasl_callback_t *getpath_cb,\n\t\t\tconst sasl_callback_t *verifyfile_cb)\n{\n\tint rc;\n\tshort extensions_vref;\n\tlong extensions_dirid;\n\tFSSpec sasl_dir;\n\t/* find the extensions folder */\n\trc=FindFolder(kOnSystemDisk,kExtensionFolderType,FALSE,\n\t\t&extensions_vref,&extensions_dirid);\n\tif(rc!=0)\n\t\treturn SASL_BADPARAM;\n\trc=FSMakeFSSpec(extensions_vref,extensions_dirid,SASL_PLUGIN_DIR,&sasl_dir);\n\t/*\n\t * if a plugin named biff exits or not we really dont care\n\t * if it does get rc 0 if it does not get -43 (fnfErr)\n\t * if the sasl dir doesnt exist we get -120 (dirNFFErr)\n\t */\n\tif((rc!=0)&&(rc!=fnfErr))\n\t\treturn SASL_BADPARAM;\n\t/*\n\t * now extensions_vref is volume\n\t * sasl_dir.parID is dirid for sasl plugins folder\n\t */\n\t\n\treturn _macsasl_find_extensions_in_dir(extensions_vref,sasl_dir.parID,entrypoints);\n}\n\nint\n_sasl_done_with_plugins(void)\n{\n    lib_list_t *libptr, *libptr_next;\n    \n    for(libptr = lib_list_head; libptr; libptr = libptr_next) {\n\tlibptr_next = libptr->next;\n\tif(libptr->library)\n\t    CloseConnection((CFragConnectionID*)&libptr->library);\n\tsasl_FREE(libptr);\n    }\n\n    lib_list_head = NULL;\n\n    return SASL_OK;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/contrib/stripplus_canonuser.patch": "Index: configure.in\n===================================================================\nRCS file: /afs/andrew/system/cvs/src/sasl/configure.in,v\nretrieving revision 1.192\ndiff -u -r1.192 configure.in\n--- configure.in\t16 Mar 2004 21:52:01 -0000\t1.192\n+++ configure.in\t7 May 2004 17:17:03 -0000\n@@ -713,6 +713,23 @@\n \tAC_DEFINE(DO_DLOPEN,[],[Should we build a shared plugin (via dlopen) library?])\n fi\n \n+dnl STRIPPLUS\n+AC_ARG_ENABLE(stripplus, [  --enable-stripplus      enable STRIPPLUS user canonification [[no]] ],\n+  stripplus=$enableval,\n+  stripplus=no)\n+\n+AC_MSG_CHECKING(STRIPPLUS)\n+if test \"$stripplus\" != no; then\n+  AC_MSG_RESULT(enabled)\n+  SASL_MECHS=\"$SASL_MECHS libstripplus.la\"\n+  if test \"$enable_static\" = yes; then\n+    SASL_STATIC_OBJS=\"$SASL_STATIC_OBJS ../plugins/stripplus.o\"\n+    AC_DEFINE(STATIC_STRIPPLUS, [], [Link STRIPPLUS Staticly])\n+  fi\n+else\n+  AC_MSG_RESULT(disabled)\n+fi\n+\n AC_SUBST(SASL_MECHS)\n AC_SUBST(SASL_STATIC_OBJS)\n AC_SUBST(SASL_STATIC_LIBS)\nIndex: plugins/Makefile.am\n===================================================================\nRCS file: /afs/andrew/system/cvs/src/sasl/plugins/Makefile.am,v\nretrieving revision 1.70\ndiff -u -r1.70 Makefile.am\n--- plugins/Makefile.am\t9 Mar 2004 16:54:18 -0000\t1.70\n+++ plugins/Makefile.am\t7 May 2004 17:17:10 -0000\n@@ -58,6 +58,7 @@\n otp_version = 2:18:0\n sql_version = 2:18:0\n srp_version = 2:18:0\n+stripplus_version = 2:18:0\n \n INCLUDES=-I$(top_srcdir)/include -I$(top_srcdir)/lib -I$(top_srcdir)/sasldb -I$(top_builddir)/include\n AM_LDFLAGS = -module -export-dynamic -rpath $(plugindir)\n@@ -77,7 +78,7 @@\n sasl_LTLIBRARIES = @SASL_MECHS@\n EXTRA_LTLIBRARIES = libplain.la libanonymous.la libkerberos4.la libcrammd5.la \\\n \tlibgssapiv2.la libdigestmd5.la liblogin.la libsrp.la libotp.la \\\n-\tlibntlm.la libsasldb.la libsql.la\n+\tlibntlm.la libsasldb.la libsql.la libstripplus.la\n \n libplain_la_SOURCES = plain.c plain_init.c $(common_sources)\n libplain_la_LDFLAGS = -version-info $(plain_version)\n@@ -140,12 +141,18 @@\n libsql_la_DEPENDENCIES = $(COMPAT_OBJS)\n libsql_la_LIBADD = $(COMPAT_OBJS)\n \n+# Canonuser Plugins\n+libstripplus_la_SOURCES = stripplus.c stripplus_init.c $(common_sources)\n+libstripplus_la_LDFLAGS = -version-info $(stripplus_version)\n+libstripplus_la_DEPENDENCIES = $(COMPAT_OBJS)\n+libstripplus_la_LIBADD = $(COMPAT_OBJS)\n+\n \n # Instructions for making the _init files\n \n init_src=anonymous_init.c crammd5_init.c digestmd5_init.c gssapiv2_init.c \\\n kerberos4_init.c login_init.c plain_init.c srp_init.c otp_init.c ntlm_init.c \\\n-sasldb_init.c sql_init.c\n+sasldb_init.c sql_init.c stripplus_init.c\n \n \n CLEANFILES=$(init_src)\nIndex: plugins/makeinit.sh\n===================================================================\nRCS file: /afs/andrew/system/cvs/src/sasl/plugins/makeinit.sh,v\nretrieving revision 1.8\ndiff -u -r1.8 makeinit.sh\n--- plugins/makeinit.sh\t15 Jul 2003 17:38:59 -0000\t1.8\n+++ plugins/makeinit.sh\t7 May 2004 17:17:10 -0000\n@@ -87,3 +87,46 @@\n \" > ${mech}_init.c\n done\n \n+\n+for mech in stripplus ; do\n+\n+echo \"\n+#include <config.h>\n+\n+#include <string.h>\n+#include <stdlib.h>\n+#include <stdio.h>\n+#ifndef macintosh\n+#include <sys/stat.h>\n+#endif\n+#include <fcntl.h>\n+#include <assert.h>\n+\n+#include <sasl.h>\n+#include <saslplug.h>\n+#include <saslutil.h>\n+\n+#include \\\"plugin_common.h\\\"\n+\n+#ifdef WIN32\n+BOOL APIENTRY DllMain( HANDLE hModule, \n+                       DWORD  ul_reason_for_call, \n+                       LPVOID lpReserved\n+\t\t\t\t\t )\n+{\n+    switch (ul_reason_for_call)\n+\t{\n+\t\tcase DLL_PROCESS_ATTACH:\n+\t\tcase DLL_THREAD_ATTACH:\n+\t\tcase DLL_THREAD_DETACH:\n+\t\tcase DLL_PROCESS_DETACH:\n+\t\t\tbreak;\n+    }\n+    return TRUE;\n+}\n+#endif\n+\n+SASL_CANONUSER_PLUG_INIT( $mech )\n+\" > ${mech}_init.c\n+done\n+\nIndex: plugins/stripplus.c\n===================================================================\nRCS file: plugins/stripplus.c\ndiff -N plugins/stripplus.c\n--- /dev/null\t1 Jan 1970 00:00:00 -0000\n+++ plugins/stripplus.c\t7 May 2004 17:17:10 -0000\n@@ -0,0 +1,179 @@\n+/* stripplus.c - user canonicalization plugin which strips any plus content\n+ * Ken Murchison\n+ * $Id: stripplus_canonuser.patch,v 1.1 2004/05/07 17:26:57 ken3 Exp $\n+ */\n+/* \n+ * Copyright (c) 1998-2004 Carnegie Mellon University.  All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer. \n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The name \"Carnegie Mellon University\" must not be used to\n+ *    endorse or promote products derived from this software without\n+ *    prior written permission. For permission or any other legal\n+ *    details, please contact  \n+ *      Office of Technology Transfer\n+ *      Carnegie Mellon University\n+ *      5000 Forbes Avenue\n+ *      Pittsburgh, PA  15213-3890\n+ *      (412) 268-4387, fax: (412) 268-7395\n+ *      tech-transfer@andrew.cmu.edu\n+ *\n+ * 4. Redistributions of any form whatsoever must retain the following\n+ *    acknowledgment:\n+ *    \"This product includes software developed by Computing Services\n+ *     at Carnegie Mellon University (http://www.cmu.edu/computing/).\"\n+ *\n+ * CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO\n+ * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n+ * AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE\n+ * FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n+ * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN\n+ * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING\n+ * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n+ */\n+\n+#include <config.h>\n+#include <string.h>\n+#include <ctype.h>\n+#include <stdio.h>\n+\n+#include <sasl.h>\n+#include <saslplug.h>\n+\n+#ifdef MIN\n+#undef MIN\n+#endif\n+#define MIN(a,b) (((a) < (b))? (a):(b))\n+\n+/*\n+ * This plugin is a straight port of the INTERNAL canonuser plugin.\n+ * It functions identical to to INTERNAL, but also strips any +detail\n+ * in the auth[z]id.\n+ */\n+static int _canonuser_stripplus(const sasl_utils_t *utils,\n+\t\t\t\tconst char *user, unsigned ulen,\n+\t\t\t\tconst char *user_realm,\n+\t\t\t\tunsigned flags __attribute__((unused)),\n+\t\t\t\tchar *out_user,\n+\t\t\t\tunsigned out_umax, unsigned *out_ulen) \n+{\n+    unsigned i;\n+    char *in_buf, *userin, *p;\n+    const char *begin_u;\n+    size_t u_apprealm = 0;\n+\n+    if(!utils || !user) return SASL_BADPARAM;\n+\n+    in_buf = utils->malloc((ulen + 2) * sizeof(char));\n+    if(!in_buf) return SASL_NOMEM;\n+\n+    userin = in_buf;\n+\n+    memcpy(userin, user, ulen);\n+    userin[ulen] = '\\0';\n+    \n+    /* Strip User ID */\n+    for(i=0;isspace((int)userin[i]) && i<ulen;i++);\n+    begin_u = &(userin[i]);\n+    if(i>0) ulen -= i;\n+\n+    for(;ulen > 0 && isspace((int)begin_u[ulen-1]); ulen--);\n+    if(begin_u == &(userin[ulen])) {\n+\tutils->free(in_buf);\n+\tutils->seterror(utils->conn, 0, \"All-whitespace username.\");\n+\treturn SASL_FAIL;\n+    }\n+\n+    /* Need to append realm if necessary (see sasl.h) */\n+    if(user_realm && !strchr(user, '@')) {\n+\tu_apprealm = strlen(user_realm) + 1;\n+    }\n+\n+    /* Now Copy */\n+    memcpy(out_user, begin_u, MIN(ulen, out_umax));\n+    if(u_apprealm) {\n+\tif(ulen >= out_umax) return SASL_BUFOVER;\n+\tout_user[ulen] = '@';\n+\tmemcpy(&(out_user[ulen+1]), user_realm,\n+\t       MIN(u_apprealm-1, out_umax-ulen-1));\n+    }\n+    out_user[MIN(ulen + u_apprealm,out_umax)] = '\\0';\n+\n+    /* Strip any plus content */\n+    if ((p = strchr(out_user, '+'))) {\n+\tsize_t n = strcspn(p, \"@\");\n+\tmemmove(p, p+n, strlen(p+n)+1);\n+\tulen -= n;\n+    }\n+\n+    if(ulen + u_apprealm > out_umax) return SASL_BUFOVER;\n+\n+    if(out_ulen) *out_ulen = MIN(ulen + u_apprealm,out_umax);\n+    \n+    utils->free(in_buf);\n+    return SASL_OK;\n+}\n+\n+static int _cu_stripplus_server(void *glob_context __attribute__((unused)),\n+\t\t\t\tsasl_server_params_t *sparams,\n+\t\t\t\tconst char *user, unsigned ulen,\n+\t\t\t\tunsigned flags,\n+\t\t\t\tchar *out_user,\n+\t\t\t\tunsigned out_umax, unsigned *out_ulen) \n+{\n+    return _canonuser_stripplus(sparams->utils,\n+\t\t\t\tuser, ulen, sparams->user_realm,\n+\t\t\t\tflags, out_user, out_umax, out_ulen);\n+}\n+\n+static int _cu_stripplus_client(void *glob_context __attribute__((unused)),\n+\t\t\t\tsasl_client_params_t *cparams,\n+\t\t\t\tconst char *user, unsigned ulen,\n+\t\t\t\tunsigned flags,\n+\t\t\t\tchar *out_user,\n+\t\t\t\tunsigned out_umax, unsigned *out_ulen) \n+{\n+    return _canonuser_stripplus(cparams->utils,\n+\t\t\t\tuser, ulen, NULL,\n+\t\t\t\tflags, out_user, out_umax, out_ulen);\n+}\n+\n+static sasl_canonuser_plug_t canonuser_stripplus_plugin = {\n+        0, /* features */\n+\t0, /* spare */\n+\tNULL, /* glob_context */\n+\t\"STRIPPLUS\", /* name */\n+\tNULL, /* canon_user_free */\n+\t_cu_stripplus_server,\n+\t_cu_stripplus_client,\n+\tNULL,\n+\tNULL,\n+\tNULL\n+};\n+\n+int stripplus_canonuser_plug_init(const sasl_utils_t *utils __attribute__((unused)),\n+\t\t\t\t  int max_version,\n+\t\t\t\t  int *out_version,\n+\t\t\t\t  sasl_canonuser_plug_t **plug,\n+\t\t\t\t  const char *plugname __attribute__((unused))) \n+{\n+    if(!out_version || !plug) return SASL_BADPARAM;\n+\n+    if(max_version < SASL_CANONUSER_PLUG_VERSION) return SASL_BADVERS;\n+    \n+    *out_version = SASL_CANONUSER_PLUG_VERSION;\n+\n+    *plug = &canonuser_stripplus_plugin;\n+\n+    return SASL_OK;\n+}\n",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/contrib/cyrus-sasl-1.5.24-ltdl.patches": "diff -x ltcf-c.sh -x ltconfig -x ltmain.sh -x libltdl -x config.guess -x config.sub -x configure -x aclocal.m4 -x Makefile.in -uNr cyrus-sasl-1.5.24.orig/Makefile.am cyrus-sasl-1.5.24.new/Makefile.am\n--- cyrus-sasl-1.5.24.orig/Makefile.am\tFri Apr 28 19:16:11 2000\n+++ cyrus-sasl-1.5.24.new/Makefile.am\tTue Jul 17 12:41:06 2001\n@@ -58,7 +58,7 @@\n JAV =\n endif\n \n-SUBDIRS=include lib plugins utils doc man $(PWC) $(SAM) $(JAV)\n+SUBDIRS=include libltdl lib plugins utils doc man $(PWC) $(SAM) $(JAV)\n EXTRA_DIST=config cmulocal win32 testing.txt\n \n dist-hook:\ndiff -x ltcf-c.sh -x ltconfig -x ltmain.sh -x libltdl -x config.guess -x config.sub -x configure -x aclocal.m4 -x Makefile.in -uNr cyrus-sasl-1.5.24.orig/configure.in cyrus-sasl-1.5.24.new/configure.in\n--- cyrus-sasl-1.5.24.orig/configure.in\tFri Jul 21 04:35:01 2000\n+++ cyrus-sasl-1.5.24.new/configure.in\tTue Jul 17 13:20:18 2001\n@@ -71,8 +71,14 @@\n \n AM_DISABLE_STATIC\n \n+AC_LIBLTDL_INSTALLABLE\n+AC_SUBST(INCLTDL)\n+AC_SUBST(LIBLTDL)\n+AC_LIBTOOL_DLOPEN\n+\n CMU_PROG_LIBTOOL\n \n+\n if test \"$ac_cv_prog_gcc\" = yes; then\n   CFLAGS=\"-Wall -W ${CFLAGS}\"\n fi\n@@ -374,11 +380,11 @@\n   fi\n fi\n \n-\n-\n if test \"$with_des\" != no; then\n   AC_DEFINE(WITH_DES)\n-  LIB_DES=\"-ldes\"\n+  if test \"x$LIB_DES\" = x; then\n+    LIB_DES=\"-ldes\"\n+  fi\n fi\n \n AC_SUBST(LIB_DES)\n@@ -716,5 +722,7 @@\n fi\n \n AC_SUBST(DIRS)\n+\n+AC_CONFIG_SUBDIRS(libltdl)\n \n AC_OUTPUT(Makefile include/Makefile lib/Makefile plugins/Makefile utils/Makefile doc/Makefile sample/Makefile java/Makefile java/CyrusSasl/Makefile pwcheck/Makefile man/Makefile)\ndiff -x ltcf-c.sh -x ltconfig -x ltmain.sh -x libltdl -x config.guess -x config.sub -x configure -x aclocal.m4 -x Makefile.in -uNr cyrus-sasl-1.5.24.orig/lib/Makefile.am cyrus-sasl-1.5.24.new/lib/Makefile.am\n--- cyrus-sasl-1.5.24.orig/lib/Makefile.am\tFri Jul 21 04:35:02 2000\n+++ cyrus-sasl-1.5.24.new/lib/Makefile.am\tTue Jul 17 12:41:08 2001\n@@ -43,7 +43,10 @@\n # Library version info - here at the top, for sanity\n sasl_version = 8:8:1\n \n-INCLUDES=-I$(top_srcdir)/include\n+INCLTDL= @INCLTDL@\n+LIBLTDL= @LIBLTDL@\n+\n+INCLUDES=-I$(top_srcdir)/include $(INCLTDL)\n \n EXTRA_DIST = saslint.h windlopen.c\n \n@@ -53,5 +56,5 @@\n EXTRA_libsasl_la_SOURCES = db_none.c db_ndbm.c db_gdbm.c db_berkeley.c db_testw32.c\n libsasl_la_LDFLAGS = -version-info $(sasl_version)\n libsasl_la_DEPENDENCIES = $(SASL_DB_BACKEND) @LTLIBOBJS@\n-libsasl_la_LIBADD = @LTLIBOBJS@ $(SASL_DB_BACKEND) $(SASL_DB_LIB) $(SASL_DL_LIB) $(PLAIN_LIBS)\n+libsasl_la_LIBADD = @LTLIBOBJS@ $(LIBLTDL) $(SASL_DB_BACKEND) $(SASL_DB_LIB) $(SASL_DL_LIB) $(PLAIN_LIBS)\n # PLAIN_LIBS are linked in for sasl_checkpass\ndiff -x ltcf-c.sh -x ltconfig -x ltmain.sh -x libltdl -x config.guess -x config.sub -x configure -x aclocal.m4 -x Makefile.in -uNr cyrus-sasl-1.5.24.orig/lib/client.c cyrus-sasl-1.5.24.new/lib/client.c\n--- cyrus-sasl-1.5.24.orig/lib/client.c\tThu Apr  6 16:50:22 2000\n+++ cyrus-sasl-1.5.24.new/lib/client.c\tTue Jul 17 12:41:08 2001\n@@ -49,6 +49,7 @@\n #include <string.h>\n #include <sasl.h>\n #include <saslutil.h>\n+#include <ltdl.h>\n #include \"saslint.h\"\n \n static int\n@@ -218,7 +219,7 @@\n {\n   int version;\n   const sasl_client_plug_t *plug;\n-  void *library;\n+  lt_dlhandle library;\n \n   struct cmechanism *next;  \n } cmechanism_t;\n@@ -370,6 +371,10 @@\n \n   cmechlist->mech_list=NULL;\n   cmechlist->mech_length=0;\n+\n+  /* init libltdl */\n+  if (lt_dlinit() != 0)\n+    return SASL_FAIL;\n \n   add_plugin((void *) &external_client_init, NULL);\n \ndiff -x ltcf-c.sh -x ltconfig -x ltmain.sh -x libltdl -x config.guess -x config.sub -x configure -x aclocal.m4 -x Makefile.in -uNr cyrus-sasl-1.5.24.orig/lib/common.c cyrus-sasl-1.5.24.new/lib/common.c\n--- cyrus-sasl-1.5.24.orig/lib/common.c\tMon Jul 17 19:21:02 2000\n+++ cyrus-sasl-1.5.24.new/lib/common.c\tTue Jul 17 16:26:01 2001\n@@ -117,6 +117,11 @@\n   _sasl_mutex_utils.lock=l;\n   _sasl_mutex_utils.unlock=u;\n   _sasl_mutex_utils.dispose=d;\n+  /* XXX seb FIXME: add a call to lt_dlmutex_register() for libltdl.\n+     sasl_set_mutex args must surely be modified to add func ptr\n+     for libtool's callbacks SETERROR and GETERROR; n/l/u can \n+     certainly be reused for libtool's callbacks LOCK and UNLOCK.\n+     see (libtool.info) Thread Saftey in libltdl */\n }\n \n \ndiff -x ltcf-c.sh -x ltconfig -x ltmain.sh -x libltdl -x config.guess -x config.sub -x configure -x aclocal.m4 -x Makefile.in -uNr cyrus-sasl-1.5.24.orig/lib/dlopen.c cyrus-sasl-1.5.24.new/lib/dlopen.c\n--- cyrus-sasl-1.5.24.orig/lib/dlopen.c\tThu Mar  9 21:53:47 2000\n+++ cyrus-sasl-1.5.24.new/lib/dlopen.c\tTue Jul 17 12:45:35 2001\n@@ -50,6 +50,7 @@\n #include <limits.h>\n #include <sys/param.h>\n #include <sasl.h>\n+#include <ltdl.h>\n #include \"saslint.h\"\n \n #if HAVE_DIRENT_H\n@@ -91,61 +92,7 @@\n #  define NAME_MAX 8\n #endif\n \n-#ifdef __hpux\n-#include <dl.h>\n-\n-typedef shl_t dll_handle;\n-typedef void * dll_func;\n-\n-dll_handle\n-dlopen(char *fname, int mode)\n-{\n-    shl_t h = shl_load(fname, BIND_DEFERRED, 0L);\n-    shl_t *hp = NULL;\n-    \n-    if (h) {\n-\thp = (shl_t *)malloc(sizeof (shl_t));\n-\tif (!hp) {\n-\t    shl_unload(h);\n-\t} else {\n-\t    *hp = h;\n-\t}\n-    }\n-\n-    return (dll_handle)hp;\n-}\n-\n-int\n-dlclose(dll_handle h)\n-{\n-    shl_t hp = *((shl_t *)h);\n-    if (hp != NULL) free(hp);\n-    return shl_unload(h);\n-}\n-\n-dll_func\n-dlsym(dll_handle h, char *n)\n-{\n-    dll_func handle;\n-    \n-    if (shl_findsym ((shl_t *)h, n, TYPE_PROCEDURE, &handle))\n-\treturn NULL;\n-    \n-    return (dll_func)handle;\n-}\n-\n-char *dlerror()\n-{\n-    if (errno != 0) {\n-\treturn strerror(errno);\n-    }\n-    return \"Generic shared library error\";\n-}\n-\n-#define SO_SUFFIX\t\".sl\"\n-#else /* __hpux */\n-#define SO_SUFFIX\t\".so\"\n-#endif /* __hpux */\n+#define LA_SUFFIX\t\".la\"\n \n \n /* gets the list of mechanisms */\n@@ -159,11 +106,6 @@\n    * checks appropriately. */\n   int result;\n   char str[PATH_MAX], tmp[PATH_MAX+2], c, prefix[PATH_MAX+2]; /* 1 for '/' 1 for trailing '\\0' */\n-#if __OpenBSD__\n-  char adj_entryname[1024];\n-#else\n-#define adj_entryname entryname\n-#endif\n   int pos;\n   char *path=NULL;\n   int position;\n@@ -180,10 +122,6 @@\n       || ! add_plugin)\n     return SASL_BADPARAM;\n \n-#if __OpenBSD__\n-  snprintf(adj_entryname, sizeof adj_entryname, \"_%s\", entryname);\n-#endif\n-\n   /* get the path to the plugins */\n   result = ((sasl_getpath_t *)(getpath_cb->proc))(getpath_cb->context,\n \t\t\t\t\t\t  &path);\n@@ -214,10 +152,9 @@\n       while ((dir=readdir(dp)) != NULL)\n       {\n \tsize_t length;\n-\tvoid *library;\n-\tvoid *entry_point;\n+\tlt_dlhandle library;\n+\tlt_ptr entry_point;\n \tchar name[PATH_MAX];\n-\tint flag;\n \n \n \tlength = NAMLEN(dir);\n@@ -225,7 +162,7 @@\n \n \tif (length + pos>=PATH_MAX) continue; /* too big */\n \n-\tif (strcmp(dir->d_name + (length - 3), SO_SUFFIX)) continue;\n+\tif (strcmp(dir->d_name + (length - 3), LA_SUFFIX)) continue;\n \n \tmemcpy(name,dir->d_name,length);\n \tname[length]='\\0';\n@@ -243,28 +180,23 @@\n \t\n \tif (result != SASL_OK) return result;\n \t\n-#ifdef RTLD_NOW\n-\tflag = RTLD_NOW;\n-#else\n-\tflag = 0;\n-#endif\n-\tif (!(library = dlopen(tmp, flag))) {\n+\tif (!(library = lt_dlopen(tmp))) {\n \t    _sasl_log(NULL, SASL_LOG_ERR, NULL, 0, 0,\n-\t\t      \"unable to dlopen %s: %s\", tmp, dlerror());\n+\t\t      \"unable to lt_dlopen %s: %s\", tmp, lt_dlerror());\n \t    continue;\n \t}\n \tentry_point = NULL;\n-\tentry_point = dlsym(library, adj_entryname);\n+\tentry_point = lt_dlsym(library, entryname);\n \n \tif (entry_point == NULL) {\n \t  VL((\"can't get an entry point\\n\"));\n-\t  dlclose(library);\n+\t  lt_dlclose(library);\n \t  continue;\n \t}\n \n \tif ((*add_plugin)(entry_point, library) != SASL_OK) {\n \t  VL((\"add_plugin to list failed\\n\"));\n-\t  dlclose(library);\n+\t  lt_dlclose(library);\n \t  continue;\n \t}\n \tVL((\"added [%s] successfully\\n\",dir->d_name));\n@@ -281,12 +213,12 @@\n }\n \n int\n-_sasl_done_with_plugin(void *plugin)\n+_sasl_done_with_plugin(lt_dlhandle plugin)\n {\n   if (! plugin)\n     return SASL_BADPARAM;\n \n-  dlclose(plugin);\n+  lt_dlclose(plugin);\n \n   return SASL_OK;\n }\ndiff -x ltcf-c.sh -x ltconfig -x ltmain.sh -x libltdl -x config.guess -x config.sub -x configure -x aclocal.m4 -x Makefile.in -uNr cyrus-sasl-1.5.24.orig/lib/saslint.h cyrus-sasl-1.5.24.new/lib/saslint.h\n--- cyrus-sasl-1.5.24.orig/lib/saslint.h\tThu Apr  6 16:50:22 2000\n+++ cyrus-sasl-1.5.24.new/lib/saslint.h\tTue Jul 17 12:43:27 2001\n@@ -45,6 +45,7 @@\n #define SASLINT_H\n \n #include <config.h>\n+#include <ltdl.h>\n #include \"sasl.h\"\n #include \"saslplug.h\"\n \n@@ -61,7 +62,7 @@\n extern const sasl_callback_t *\n _sasl_find_verifyfile_callback(const sasl_callback_t *callbacks);\n \n-extern int _sasl_done_with_plugin(void *plugin);\n+extern int _sasl_done_with_plugin(lt_dlhandle plugin);\n \n extern void (*_sasl_client_cleanup_hook)(void);\n extern void (*_sasl_server_cleanup_hook)(void);\ndiff -x ltcf-c.sh -x ltconfig -x ltmain.sh -x libltdl -x config.guess -x config.sub -x configure -x aclocal.m4 -x Makefile.in -uNr cyrus-sasl-1.5.24.orig/lib/server.c cyrus-sasl-1.5.24.new/lib/server.c\n--- cyrus-sasl-1.5.24.orig/lib/server.c\tMon Aug 14 04:04:42 2000\n+++ cyrus-sasl-1.5.24.new/lib/server.c\tTue Jul 17 12:56:40 2001\n@@ -54,6 +54,7 @@\n #include <sys/stat.h>\n #include <fcntl.h>\n #include <string.h>\n+#include <ltdl.h>\n \n #define DEFAULT_PLAIN_MECHANISM \"sasldb\"\n \n@@ -238,7 +239,7 @@\n   int condition; /* set to SASL_NOUSER if no available users */\n   const sasl_server_plug_t *plug;\n   struct mechanism *next;\n-  void *library; /* this a pointer to shared library returned by dlopen \n+  lt_dlhandle library; /* this a pointer to shared library returned by dlopen \n \t\t    or some similar function on other platforms */\n } mechanism_t;\n \n@@ -668,6 +669,10 @@\n \n   /* check db */\n   ret = _sasl_server_check_db(vf);\n+\n+  /* init libltdl */\n+  if (lt_dlinit() != 0)\n+    return SASL_FAIL;\n \n   /* load plugins */\n   add_plugin((void *)&external_server_init, NULL);\n",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/saslauthd/config/ltmain.sh": "# ltmain.sh - Provide generalized library-building support services.\n# NOTE: Changing this file will not affect anything until you rerun ltconfig.\n#\n# Copyright (C) 1996-1999 Free Software Foundation, Inc.\n# Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# Check that we have a working $echo.\nif test \"X$1\" = X--no-reexec; then\n  # Discard the --no-reexec flag, and continue.\n  shift\nelif test \"X$1\" = X--fallback-echo; then\n  # Avoid inline document here, it may be left over\n  :\nelif test \"X`($echo '\\t') 2>/dev/null`\" = 'X\\t'; then\n  # Yippee, $echo works!\n  :\nelse\n  # Restart under the correct shell, and then maybe $echo will work.\n  exec $SHELL \"$0\" --no-reexec ${1+\"$@\"}\nfi\n\nif test \"X$1\" = X--fallback-echo; then\n  # used as fallback echo\n  shift\n  cat <<EOF\n$*\nEOF\n  exit 0\nfi\n\n# The name of this program.\nprogname=`$echo \"$0\" | sed 's%^.*/%%'`\nmodename=\"$progname\"\n\n# Constants.\nPROGRAM=ltmain.sh\nPACKAGE=libtool\nVERSION=1.3.5\nTIMESTAMP=\" (1.385.2.206 2000/05/27 11:12:27)\"\n\ndefault_mode=\nhelp=\"Try \\`$progname --help' for more information.\"\nmagic=\"%%%MAGIC variable%%%\"\nmkdir=\"mkdir\"\nmv=\"mv -f\"\nrm=\"rm -f\"\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed='sed -e 1s/^X//'\nsed_quote_subst='s/\\([\\\\`\\\\\"$\\\\\\\\]\\)/\\\\\\1/g'\n# test EBCDIC or ASCII\ncase `echo '' | od -x` in\n*15*) # EBCDIC based system\n  SP2NL='tr \\100 \\025'\n  NL2SP='tr \\025 \\100'\n  ;;\n*) # Assume ASCII based system\n  SP2NL='tr \\040 \\012'\n  NL2SP='tr \\015\\012 \\040\\040'\n  ;;\nesac\n\n# NLS nuisances.\n# Only set LANG and LC_ALL to C if already set.\n# These must not be set unconditionally because not all systems understand\n# e.g. LANG=C (notably SCO).\n# We save the old values to restore during execute mode.\nif test \"${LC_ALL+set}\" = set; then\n  save_LC_ALL=\"$LC_ALL\"; LC_ALL=C; export LC_ALL\nfi\nif test \"${LANG+set}\" = set; then\n  save_LANG=\"$LANG\"; LANG=C; export LANG\nfi\n\nif test \"$LTCONFIG_VERSION\" != \"$VERSION\"; then\n  echo \"$modename: ltconfig version \\`$LTCONFIG_VERSION' does not match $PROGRAM version \\`$VERSION'\" 1>&2\n  echo \"Fatal configuration error.  See the $PACKAGE docs for more information.\" 1>&2\n  exit 1\nfi\n\nif test \"$build_libtool_libs\" != yes && test \"$build_old_libs\" != yes; then\n  echo \"$modename: not configured to build any kind of library\" 1>&2\n  echo \"Fatal configuration error.  See the $PACKAGE docs for more information.\" 1>&2\n  exit 1\nfi\n\n# Global variables.\nmode=$default_mode\nnonopt=\nprev=\nprevopt=\nrun=\nshow=\"$echo\"\nshow_help=\nexecute_dlfiles=\nlo2o=\"s/\\\\.lo\\$/.${objext}/\"\no2lo=\"s/\\\\.${objext}\\$/.lo/\"\n\n# Parse our command line options once, thoroughly.\nwhile test $# -gt 0\ndo\n  arg=\"$1\"\n  shift\n\n  case \"$arg\" in\n  -*=*) optarg=`$echo \"X$arg\" | $Xsed -e 's/[-_a-zA-Z0-9]*=//'` ;;\n  *) optarg= ;;\n  esac\n\n  # If the previous option needs an argument, assign it.\n  if test -n \"$prev\"; then\n    case \"$prev\" in\n    execute_dlfiles)\n      eval \"$prev=\\\"\\$$prev \\$arg\\\"\"\n      ;;\n    *)\n      eval \"$prev=\\$arg\"\n      ;;\n    esac\n\n    prev=\n    prevopt=\n    continue\n  fi\n\n  # Have we seen a non-optional argument yet?\n  case \"$arg\" in\n  --help)\n    show_help=yes\n    ;;\n\n  --version)\n    echo \"$PROGRAM (GNU $PACKAGE) $VERSION$TIMESTAMP\"\n    exit 0\n    ;;\n\n  --config)\n    sed -e '1,/^### BEGIN LIBTOOL CONFIG/d' -e '/^### END LIBTOOL CONFIG/,$d' $0\n    exit 0\n    ;;\n\n  --debug)\n    echo \"$progname: enabling shell trace mode\"\n    set -x\n    ;;\n\n  --dry-run | -n)\n    run=:\n    ;;\n\n  --features)\n    echo \"host: $host\"\n    if test \"$build_libtool_libs\" = yes; then\n      echo \"enable shared libraries\"\n    else\n      echo \"disable shared libraries\"\n    fi\n    if test \"$build_old_libs\" = yes; then\n      echo \"enable static libraries\"\n    else\n      echo \"disable static libraries\"\n    fi\n    exit 0\n    ;;\n\n  --finish) mode=\"finish\" ;;\n\n  --mode) prevopt=\"--mode\" prev=mode ;;\n  --mode=*) mode=\"$optarg\" ;;\n\n  --quiet | --silent)\n    show=:\n    ;;\n\n  -dlopen)\n    prevopt=\"-dlopen\"\n    prev=execute_dlfiles\n    ;;\n\n  -*)\n    $echo \"$modename: unrecognized option \\`$arg'\" 1>&2\n    $echo \"$help\" 1>&2\n    exit 1\n    ;;\n\n  *)\n    nonopt=\"$arg\"\n    break\n    ;;\n  esac\ndone\n\nif test -n \"$prevopt\"; then\n  $echo \"$modename: option \\`$prevopt' requires an argument\" 1>&2\n  $echo \"$help\" 1>&2\n  exit 1\nfi\n\nif test -z \"$show_help\"; then\n\n  # Infer the operation mode.\n  if test -z \"$mode\"; then\n    case \"$nonopt\" in\n    *cc | *++ | gcc* | *-gcc*)\n      mode=link\n      for arg\n      do\n\tcase \"$arg\" in\n\t-c)\n\t   mode=compile\n\t   break\n\t   ;;\n\tesac\n      done\n      ;;\n    *db | *dbx | *strace | *truss)\n      mode=execute\n      ;;\n    *install*|cp|mv)\n      mode=install\n      ;;\n    *rm)\n      mode=uninstall\n      ;;\n    *)\n      # If we have no mode, but dlfiles were specified, then do execute mode.\n      test -n \"$execute_dlfiles\" && mode=execute\n\n      # Just use the default operation mode.\n      if test -z \"$mode\"; then\n\tif test -n \"$nonopt\"; then\n\t  $echo \"$modename: warning: cannot infer operation mode from \\`$nonopt'\" 1>&2\n\telse\n\t  $echo \"$modename: warning: cannot infer operation mode without MODE-ARGS\" 1>&2\n\tfi\n      fi\n      ;;\n    esac\n  fi\n\n  # Only execute mode is allowed to have -dlopen flags.\n  if test -n \"$execute_dlfiles\" && test \"$mode\" != execute; then\n    $echo \"$modename: unrecognized option \\`-dlopen'\" 1>&2\n    $echo \"$help\" 1>&2\n    exit 1\n  fi\n\n  # Change the help message to a mode-specific one.\n  generic_help=\"$help\"\n  help=\"Try \\`$modename --help --mode=$mode' for more information.\"\n\n  # These modes are in order of execution frequency so that they run quickly.\n  case \"$mode\" in\n  # libtool compile mode\n  compile)\n    modename=\"$modename: compile\"\n    # Get the compilation command and the source file.\n    base_compile=\n    lastarg=\n    srcfile=\"$nonopt\"\n    suppress_output=\n\n    user_target=no\n    for arg\n    do\n      # Accept any command-line options.\n      case \"$arg\" in\n      -o)\n\tif test \"$user_target\" != \"no\"; then\n\t  $echo \"$modename: you cannot specify \\`-o' more than once\" 1>&2\n\t  exit 1\n\tfi\n\tuser_target=next\n\t;;\n\n      -static)\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n      esac\n\n      case \"$user_target\" in\n      next)\n\t# The next one is the -o target name\n\tuser_target=yes\n\tcontinue\n\t;;\n      yes)\n\t# We got the output file\n\tuser_target=set\n\tlibobj=\"$arg\"\n\tcontinue\n\t;;\n      esac\n\n      # Accept the current argument as the source file.\n      lastarg=\"$srcfile\"\n      srcfile=\"$arg\"\n\n      # Aesthetically quote the previous argument.\n\n      # Backslashify any backslashes, double quotes, and dollar signs.\n      # These are the only characters that are still specially\n      # interpreted inside of double-quoted scrings.\n      lastarg=`$echo \"X$lastarg\" | $Xsed -e \"$sed_quote_subst\"`\n\n      # Double-quote args containing other shell metacharacters.\n      # Many Bourne shells cannot handle close brackets correctly in scan\n      # sets, so we specify it separately.\n      case \"$lastarg\" in\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*)\n\tlastarg=\"\\\"$lastarg\\\"\"\n\t;;\n      esac\n\n      # Add the previous argument to base_compile.\n      if test -z \"$base_compile\"; then\n\tbase_compile=\"$lastarg\"\n      else\n\tbase_compile=\"$base_compile $lastarg\"\n      fi\n    done\n\n    case \"$user_target\" in\n    set)\n      ;;\n    no)\n      # Get the name of the library object.\n      libobj=`$echo \"X$srcfile\" | $Xsed -e 's%^.*/%%'`\n      ;;\n    *)\n      $echo \"$modename: you must specify a target with \\`-o'\" 1>&2\n      exit 1\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    xform='[cCFSfmso]'\n    case \"$libobj\" in\n    *.ada) xform=ada ;;\n    *.adb) xform=adb ;;\n    *.ads) xform=ads ;;\n    *.asm) xform=asm ;;\n    *.c++) xform=c++ ;;\n    *.cc) xform=cc ;;\n    *.cpp) xform=cpp ;;\n    *.cxx) xform=cxx ;;\n    *.f90) xform=f90 ;;\n    *.for) xform=for ;;\n    esac\n\n    libobj=`$echo \"X$libobj\" | $Xsed -e \"s/\\.$xform$/.lo/\"`\n\n    case \"$libobj\" in\n    *.lo) obj=`$echo \"X$libobj\" | $Xsed -e \"$lo2o\"` ;;\n    *)\n      $echo \"$modename: cannot determine name of library object from \\`$libobj'\" 1>&2\n      exit 1\n      ;;\n    esac\n\n    if test -z \"$base_compile\"; then\n      $echo \"$modename: you must specify a compilation command\" 1>&2\n      $echo \"$help\" 1>&2\n      exit 1\n    fi\n\n    # Delete any leftover library objects.\n    if test \"$build_old_libs\" = yes; then\n      removelist=\"$obj $libobj\"\n    else\n      removelist=\"$libobj\"\n    fi\n\n    $run $rm $removelist\n    trap \"$run $rm $removelist; exit 1\" 1 2 15\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test \"$compiler_c_o\" = no; then\n      output_obj=`$echo \"X$srcfile\" | $Xsed -e 's%^.*/%%' -e 's%\\..*$%%'`.${objext}\n      lockfile=\"$output_obj.lock\"\n      removelist=\"$removelist $output_obj $lockfile\"\n      trap \"$run $rm $removelist; exit 1\" 1 2 15\n    else\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test \"$need_locks\" = yes; then\n      until ln \"$0\" \"$lockfile\" 2>/dev/null; do\n\t$show \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test \"$need_locks\" = warn; then\n      if test -f \"$lockfile\"; then\n\techo \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$run $rm $removelist\n\texit 1\n      fi\n      echo $srcfile > \"$lockfile\"\n    fi\n\n    if test -n \"$fix_srcfile_path\"; then\n      eval srcfile=\\\"$fix_srcfile_path\\\"\n    fi\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test \"$build_libtool_libs\" = yes; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      # All platforms use -DPIC, to notify preprocessed assembler code.\n      command=\"$base_compile $srcfile $pic_flag -DPIC\"\n      if test \"$build_old_libs\" = yes; then\n\tlo_libobj=\"$libobj\"\n\tdir=`$echo \"X$libobj\" | $Xsed -e 's%/[^/]*$%%'`\n\tif test \"X$dir\" = \"X$libobj\"; then\n\t  dir=\"$objdir\"\n\telse\n\t  dir=\"$dir/$objdir\"\n\tfi\n\tlibobj=\"$dir/\"`$echo \"X$libobj\" | $Xsed -e 's%^.*/%%'`\n\n\tif test -d \"$dir\"; then\n\t  $show \"$rm $libobj\"\n\t  $run $rm $libobj\n\telse\n\t  $show \"$mkdir $dir\"\n\t  $run $mkdir $dir\n\t  status=$?\n\t  if test $status -ne 0 && test ! -d $dir; then\n\t    exit $status\n\t  fi\n\tfi\n      fi\n      if test \"$compiler_o_lo\" = yes; then\n\toutput_obj=\"$libobj\"\n\tcommand=\"$command -o $output_obj\"\n      elif test \"$compiler_c_o\" = yes; then\n\toutput_obj=\"$obj\"\n\tcommand=\"$command -o $output_obj\"\n      fi\n\n      $run $rm \"$output_obj\"\n      $show \"$command\"\n      if $run eval \"$command\"; then :\n      else\n\ttest -n \"$output_obj\" && $run $rm $removelist\n\texit 1\n      fi\n\n      if test \"$need_locks\" = warn &&\n\t test x\"`cat $lockfile 2>/dev/null`\" != x\"$srcfile\"; then\n\techo \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$run $rm $removelist\n\texit 1\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test x\"$output_obj\" != x\"$libobj\"; then\n\t$show \"$mv $output_obj $libobj\"\n\tif $run $mv $output_obj $libobj; then :\n\telse\n\t  error=$?\n\t  $run $rm $removelist\n\t  exit $error\n\tfi\n      fi\n\n      # If we have no pic_flag, then copy the object into place and finish.\n      if test -z \"$pic_flag\" && test \"$build_old_libs\" = yes; then\n\t# Rename the .lo from within objdir to obj\n\tif test -f $obj; then\n\t  $show $rm $obj\n\t  $run $rm $obj\n\tfi\n\n\t$show \"$mv $libobj $obj\"\n\tif $run $mv $libobj $obj; then :\n\telse\n\t  error=$?\n\t  $run $rm $removelist\n\t  exit $error\n\tfi\n\n\txdir=`$echo \"X$obj\" | $Xsed -e 's%/[^/]*$%%'`\n\tif test \"X$xdir\" = \"X$obj\"; then\n\t  xdir=\".\"\n\telse\n\t  xdir=\"$xdir\"\n\tfi\n\tbaseobj=`$echo \"X$obj\" | $Xsed -e \"s%.*/%%\"`\n\tlibobj=`$echo \"X$baseobj\" | $Xsed -e \"$o2lo\"`\n\t# Now arrange that obj and lo_libobj become the same file\n\t$show \"(cd $xdir && $LN_S $baseobj $libobj)\"\n\tif $run eval '(cd $xdir && $LN_S $baseobj $libobj)'; then\n\t  exit 0\n\telse\n\t  error=$?\n\t  $run $rm $removelist\n\t  exit $error\n\tfi\n      fi\n\n      # Allow error messages only from the first compilation.\n      suppress_output=' >/dev/null 2>&1'\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test \"$build_old_libs\" = yes; then\n      command=\"$base_compile $srcfile\"\n      if test \"$compiler_c_o\" = yes; then\n\tcommand=\"$command -o $obj\"\n\toutput_obj=\"$obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      command=\"$command$suppress_output\"\n      $run $rm \"$output_obj\"\n      $show \"$command\"\n      if $run eval \"$command\"; then :\n      else\n\t$run $rm $removelist\n\texit 1\n      fi\n\n      if test \"$need_locks\" = warn &&\n\t test x\"`cat $lockfile 2>/dev/null`\" != x\"$srcfile\"; then\n\techo \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$run $rm $removelist\n\texit 1\n      fi\n\n      # Just move the object if needed\n      if test x\"$output_obj\" != x\"$obj\"; then\n\t$show \"$mv $output_obj $obj\"\n\tif $run $mv $output_obj $obj; then :\n\telse\n\t  error=$?\n\t  $run $rm $removelist\n\t  exit $error\n\tfi\n      fi\n\n      # Create an invalid libtool object if no PIC, so that we do not\n      # accidentally link it into a program.\n      if test \"$build_libtool_libs\" != yes; then\n\t$show \"echo timestamp > $libobj\"\n\t$run eval \"echo timestamp > \\$libobj\" || exit $?\n      else\n\t# Move the .lo from within objdir\n\t$show \"$mv $libobj $lo_libobj\"\n\tif $run $mv $libobj $lo_libobj; then :\n\telse\n\t  error=$?\n\t  $run $rm $removelist\n\t  exit $error\n\tfi\n      fi\n    fi\n\n    # Unlock the critical section if it was locked\n    if test \"$need_locks\" != no; then\n      $rm \"$lockfile\"\n    fi\n\n    exit 0\n    ;;\n\n  # libtool link mode\n  link)\n    modename=\"$modename: link\"\n    case \"$host\" in\n    *-*-cygwin* | *-*-mingw* | *-*-os2*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # which system we are compiling for in order to pass an extra\n      # flag for every libtool invokation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll which has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n\n      # This is a source program that is used to create dlls on Windows\n      # Don't remove nor modify the starting and closing comments\n# /* ltdll.c starts here */\n# #define WIN32_LEAN_AND_MEAN\n# #include <windows.h>\n# #undef WIN32_LEAN_AND_MEAN\n# #include <stdio.h>\n#\n# #ifndef __CYGWIN__\n# #  ifdef __CYGWIN32__\n# #    define __CYGWIN__ __CYGWIN32__\n# #  endif\n# #endif\n#\n# #ifdef __cplusplus\n# extern \"C\" {\n# #endif\n# BOOL APIENTRY DllMain (HINSTANCE hInst, DWORD reason, LPVOID reserved);\n# #ifdef __cplusplus\n# }\n# #endif\n#\n# #ifdef __CYGWIN__\n# #include <cygwin/cygwin_dll.h>\n# DECLARE_CYGWIN_DLL( DllMain );\n# #endif\n# HINSTANCE __hDllInstance_base;\n#\n# BOOL APIENTRY\n# DllMain (HINSTANCE hInst, DWORD reason, LPVOID reserved)\n# {\n#   __hDllInstance_base = hInst;\n#   return TRUE;\n# }\n# /* ltdll.c ends here */\n      # This is a source program that is used to create import libraries\n      # on Windows for dlls which lack them. Don't remove nor modify the\n      # starting and closing comments\n# /* impgen.c starts here */\n# /*   Copyright (C) 1999 Free Software Foundation, Inc.\n# \n#  This file is part of GNU libtool.\n# \n#  This program is free software; you can redistribute it and/or modify\n#  it under the terms of the GNU General Public License as published by\n#  the Free Software Foundation; either version 2 of the License, or\n#  (at your option) any later version.\n# \n#  This program is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#  GNU General Public License for more details.\n# \n#  You should have received a copy of the GNU General Public License\n#  along with this program; if not, write to the Free Software\n#  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n#  */\n# \n#  #include <stdio.h>\t\t/* for printf() */\n#  #include <unistd.h>\t\t/* for open(), lseek(), read() */\n#  #include <fcntl.h>\t\t/* for O_RDONLY, O_BINARY */\n#  #include <string.h>\t\t/* for strdup() */\n# \n#  static unsigned int\n#  pe_get16 (fd, offset)\n#       int fd;\n#       int offset;\n#  {\n#    unsigned char b[2];\n#    lseek (fd, offset, SEEK_SET);\n#    read (fd, b, 2);\n#    return b[0] + (b[1]<<8);\n#  }\n# \n#  static unsigned int\n#  pe_get32 (fd, offset)\n#      int fd;\n#      int offset;\n#  {\n#    unsigned char b[4];\n#    lseek (fd, offset, SEEK_SET);\n#    read (fd, b, 4);\n#    return b[0] + (b[1]<<8) + (b[2]<<16) + (b[3]<<24);\n#  }\n# \n#  static unsigned int\n#  pe_as32 (ptr)\n#       void *ptr;\n#  {\n#    unsigned char *b = ptr;\n#    return b[0] + (b[1]<<8) + (b[2]<<16) + (b[3]<<24);\n#  }\n# \n#  int\n#  main (argc, argv)\n#      int argc;\n#      char *argv[];\n#  {\n#      int dll;\n#      unsigned long pe_header_offset, opthdr_ofs, num_entries, i;\n#      unsigned long export_rva, export_size, nsections, secptr, expptr;\n#      unsigned long name_rvas, nexp;\n#      unsigned char *expdata, *erva;\n#      char *filename, *dll_name;\n# \n#      filename = argv[1];\n# \n#      dll = open(filename, O_RDONLY|O_BINARY);\n#      if (!dll)\n#  \treturn 1;\n# \n#      dll_name = filename;\n#    \n#      for (i=0; filename[i]; i++)\n#  \tif (filename[i] == '/' || filename[i] == '\\\\'  || filename[i] == ':')\n#  \t    dll_name = filename + i +1;\n# \n#      pe_header_offset = pe_get32 (dll, 0x3c);\n#      opthdr_ofs = pe_header_offset + 4 + 20;\n#      num_entries = pe_get32 (dll, opthdr_ofs + 92);\n# \n#      if (num_entries < 1) /* no exports */\n#  \treturn 1;\n# \n#      export_rva = pe_get32 (dll, opthdr_ofs + 96);\n#      export_size = pe_get32 (dll, opthdr_ofs + 100);\n#      nsections = pe_get16 (dll, pe_header_offset + 4 +2);\n#      secptr = (pe_header_offset + 4 + 20 +\n#  \t      pe_get16 (dll, pe_header_offset + 4 + 16));\n# \n#      expptr = 0;\n#      for (i = 0; i < nsections; i++)\n#      {\n#  \tchar sname[8];\n#  \tunsigned long secptr1 = secptr + 40 * i;\n#  \tunsigned long vaddr = pe_get32 (dll, secptr1 + 12);\n#  \tunsigned long vsize = pe_get32 (dll, secptr1 + 16);\n#  \tunsigned long fptr = pe_get32 (dll, secptr1 + 20);\n#  \tlseek(dll, secptr1, SEEK_SET);\n#  \tread(dll, sname, 8);\n#  \tif (vaddr <= export_rva && vaddr+vsize > export_rva)\n#  \t{\n#  \t    expptr = fptr + (export_rva - vaddr);\n#  \t    if (export_rva + export_size > vaddr + vsize)\n#  \t\texport_size = vsize - (export_rva - vaddr);\n#  \t    break;\n#  \t}\n#      }\n# \n#      expdata = (unsigned char*)malloc(export_size);\n#      lseek (dll, expptr, SEEK_SET);\n#      read (dll, expdata, export_size);\n#      erva = expdata - export_rva;\n# \n#      nexp = pe_as32 (expdata+24);\n#      name_rvas = pe_as32 (expdata+32);\n# \n#      printf (\"EXPORTS\\n\");\n#      for (i = 0; i<nexp; i++)\n#      {\n#  \tunsigned long name_rva = pe_as32 (erva+name_rvas+i*4);\n#  \tprintf (\"\\t%s @ %ld ;\\n\", erva+name_rva, 1+ i);\n#      }\n# \n#      return 0;\n#  }\n# /* impgen.c ends here */\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    compile_command=\"$nonopt\"\n    finalize_command=\"$nonopt\"\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    linkopts=\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval lib_search_path=\\`\\$echo \\\"X \\${$shlibpath_var}\\\" \\| \\$Xsed -e \\'s/:/ /g\\'\\`\n    else\n      lib_search_path=\n    fi\n    # now prepend the system-specific ones\n    eval lib_search_path=\\\"$sys_lib_search_path_spec\\$lib_search_path\\\"\n    eval sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\n    \n    avoid_version=no\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    link_against_libtool_libs=\n    ltlibs=\n    module=no\n    objs=\n    prefer_static_libs=no\n    preload=no\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case \"$arg\" in\n      -all-static | -static)\n\tif test \"X$arg\" = \"X-all-static\"; then\n\t  if test \"$build_libtool_libs\" = yes && test -z \"$link_static_flag\"; then\n\t    $echo \"$modename: warning: complete static linking is impossible in this configuration\" 1>&2\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\telse\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\tfi\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tprefer_static_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test $# -gt 0; do\n      arg=\"$1\"\n      shift\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase \"$prev\" in\n\toutput)\n\t  compile_command=\"$compile_command @OUTPUT@\"\n\t  finalize_command=\"$finalize_command @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase \"$prev\" in\n\tdlfiles|dlprefiles)\n\t  if test \"$preload\" = no; then\n\t    # Add the symbol object into the linking commands.\n\t    compile_command=\"$compile_command @SYMFILE@\"\n\t    finalize_command=\"$finalize_command @SYMFILE@\"\n\t    preload=yes\n\t  fi\n\t  case \"$arg\" in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test \"$dlself\" = no; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test \"$prev\" = dlprefiles; then\n\t      dlself=yes\n\t    elif test \"$prev\" = dlfiles && test \"$dlopen_self\" != yes; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test \"$prev\" = dlfiles; then\n\t      dlfiles=\"$dlfiles $arg\"\n\t    else\n\t      dlprefiles=\"$dlprefiles $arg\"\n\t    fi\n\t    prev=\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=\"$arg\"\n\t  if test ! -f \"$arg\"; then\n\t    $echo \"$modename: symbol file \\`$arg' does not exist\"\n\t    exit 1\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=\"-$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case \"$arg\" in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    $echo \"$modename: only absolute run-paths are allowed\" 1>&2\n\t    exit 1\n\t    ;;\n\t  esac\n\t  if test \"$prev\" = rpath; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) rpath=\"$rpath $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) xrpath=\"$xrpath $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi\n\n      prevarg=\"$arg\"\n\n      case \"$arg\" in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  compile_command=\"$compile_command $link_static_flag\"\n\t  finalize_command=\"$finalize_command $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\t$echo \"$modename: \\`-allow-undefined' is deprecated because it is the default\" 1>&2\n\tcontinue\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  $echo \"$modename: not more than one -exported-symbols argument allowed\"\n\t  exit 1\n\tfi\n\tif test \"X$arg\" = \"X-export-symbols\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -L*)\n\tdir=`$echo \"X$arg\" | $Xsed -e 's/^-L//'`\n\t# We need an absolute path.\n\tcase \"$dir\" in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  if test -z \"$absdir\"; then\n\t    $echo \"$modename: warning: cannot determine absolute directory name of \\`$dir'\" 1>&2\n\t    $echo \"$modename: passing it literally to the linker, although it might fail\" 1>&2\n\t    absdir=\"$dir\"\n\t  fi\n\t  dir=\"$absdir\"\n\t  ;;\n\tesac\n\tcase \" $deplibs \" in\n\t*\" $arg \"*) ;;\n\t*) deplibs=\"$deplibs $arg\";;\n\tesac\n\tcase \" $lib_search_path \" in\n\t*\" $dir \"*) ;;\n\t*) lib_search_path=\"$lib_search_path $dir\";;\n\tesac\n\tcase \"$host\" in\n\t*-*-cygwin* | *-*-mingw* | *-*-os2*)\n\t  dllsearchdir=`cd \"$dir\" && pwd || echo \"$dir\"`\n\t  case \":$dllsearchpath:\" in\n\t  ::) dllsearchpath=\"$dllsearchdir\";;\n\t  *\":$dllsearchdir:\"*) ;;\n\t  *) dllsearchpath=\"$dllsearchpath:$dllsearchdir\";;\n\t  esac\n\t  ;;\n\tesac\n\t;;\n\n      -l*)\n\tif test \"$arg\" = \"-lc\"; then\n\t  case \"$host\" in\n\t  *-*-cygwin* | *-*-mingw* | *-*-os2* | *-*-beos*)\n\t    # These systems don't actually have c library (as such)\n\t    continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    deplibs=\"$deplibs -framework System\"\n\t    continue\n\t    ;;\n\t  esac\n\telif test \"$arg\" = \"-lm\"; then\n\t  case \"$host\" in\n\t  *-*-cygwin* | *-*-beos*)\n\t    # These systems don't actually have math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody math library is in the System framework\n\t    deplibs=\"$deplibs -framework System\"\n\t    continue\n\t    ;;\n\t  esac\n\tfi\n\tdeplibs=\"$deplibs $arg\"\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tdir=`$echo \"X$arg\" | $Xsed -e 's/^-R//'`\n\t# We need an absolute path.\n\tcase \"$dir\" in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  $echo \"$modename: only absolute run-paths are allowed\" 1>&2\n\t  exit 1\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) xrpath=\"$xrpath $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -static)\n\t# If we have no pic_flag, then this is the same as -all-static.\n\tif test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t  compile_command=\"$compile_command $link_static_flag\"\n\t  finalize_command=\"$finalize_command $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n\n      # Some other compiler flag.\n      -* | +*)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\targ=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n\tcase \"$arg\" in\n\t*[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*)\n\t  arg=\"\\\"$arg\\\"\"\n\t  ;;\n\tesac\n\t;;\n\n      *.o | *.obj | *.a | *.lib)\n\t# A standard object.\n\tobjs=\"$objs $arg\"\n\t;;\n\n      *.lo)\n\t# A library object.\n\tif test \"$prev\" = dlfiles; then\n\t  dlfiles=\"$dlfiles $arg\"\n\t  if test \"$build_libtool_libs\" = yes && test \"$dlopen\" = yes; then\n\t    prev=\n\t    continue\n\t  else\n\t    # If libtool objects are unsupported, then we need to preload.\n\t    prev=dlprefiles\n\t  fi\n\tfi\n\n\tif test \"$prev\" = dlprefiles; then\n\t  # Preload the old-style object.\n\t  dlprefiles=\"$dlprefiles \"`$echo \"X$arg\" | $Xsed -e \"$lo2o\"`\n\t  prev=\n\tfi\n\tlibobjs=\"$libobjs $arg\"\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tdlname=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\n\t# Check to see that this really is a libtool archive.\n\tif (sed -e '2q' $arg | egrep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then :\n\telse\n\t  $echo \"$modename: \\`$arg' is not a valid libtool archive\" 1>&2\n\t  exit 1\n\tfi\n\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variable installed.\n\tinstalled=yes\n\n\t# Read the .la file\n\t# If there is no directory component, then add one.\n\tcase \"$arg\" in\n\t*/* | *\\\\*) . $arg ;;\n\t*) . ./$arg ;;\n\tesac\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tfor l in $old_library $library_names; do\n\t  linklib=\"$l\"\n\tdone\n\n\tif test -z \"$linklib\"; then\n\t  $echo \"$modename: cannot find name of link library for \\`$arg'\" 1>&2\n\t  exit 1\n\tfi\n\n\t# Find the relevant object directory and library name.\n\tname=`$echo \"X$arg\" | $Xsed -e 's%^.*/%%' -e 's/\\.la$//' -e 's/^lib//'`\n\n\tif test \"X$installed\" = Xyes; then\n\t  dir=\"$libdir\"\n\telse\n\t  dir=`$echo \"X$arg\" | $Xsed -e 's%/[^/]*$%%'`\n\t  if test \"X$dir\" = \"X$arg\"; then\n\t    dir=\"$objdir\"\n\t  else\n\t    dir=\"$dir/$objdir\"\n\t  fi\n\tfi\n\n\tif test -n \"$dependency_libs\"; then\n\t  # Extract -R and -L from dependency_libs\n\t  temp_deplibs=\n\t  for deplib in $dependency_libs; do\n\t    case \"$deplib\" in\n\t    -R*) temp_xrpath=`$echo \"X$deplib\" | $Xsed -e 's/^-R//'`\n\t\t case \" $rpath $xrpath \" in\n\t\t *\" $temp_xrpath \"*) ;;\n\t\t *) xrpath=\"$xrpath $temp_xrpath\";;\n\t\t esac;;\n\t    -L*) case \"$compile_command $temp_deplibs \" in\n\t\t *\" $deplib \"*) ;;\n\t\t *) temp_deplibs=\"$temp_deplibs $deplib\";;\n\t\t esac\n\t\t temp_dir=`$echo \"X$deplib\" | $Xsed -e 's/^-L//'`\n\t\t case \" $lib_search_path \" in\n\t\t *\" $temp_dir \"*) ;;\n\t\t *) lib_search_path=\"$lib_search_path $temp_dir\";;\n\t\t esac\n\t\t ;;\n\t    *) temp_deplibs=\"$temp_deplibs $deplib\";;\n\t    esac\n\t  done\n\t  dependency_libs=\"$temp_deplibs\"\n\tfi\n\n\tif test -z \"$libdir\"; then\n\t  # It is a libtool convenience library, so add in its objects.\n\t  convenience=\"$convenience $dir/$old_library\"\n\t  old_convenience=\"$old_convenience $dir/$old_library\"\n\t  deplibs=\"$deplibs$dependency_libs\"\n\t  compile_command=\"$compile_command $dir/$old_library$dependency_libs\"\n\t  finalize_command=\"$finalize_command $dir/$old_library$dependency_libs\"\n\t  continue\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test \"$prev\" = dlfiles; then\n\t  dlfiles=\"$dlfiles $arg\"\n\t  if test -z \"$dlname\" || test \"$dlopen\" != yes || test \"$build_libtool_libs\" = no; then\n\t    # If there is no dlname, no dlopen support or we're linking statically,\n\t    # we need to preload.\n\t    prev=dlprefiles\n\t  else\n\t    # We should not create a dependency on this library, but we\n\t    # may need any libraries it requires.\n\t    compile_command=\"$compile_command$dependency_libs\"\n\t    finalize_command=\"$finalize_command$dependency_libs\"\n\t    prev=\n\t    continue\n\t  fi\n\tfi\n\n\t# The library was specified with -dlpreopen.\n\tif test \"$prev\" = dlprefiles; then\n\t  # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t  # are required to link).\n\t  if test -n \"$old_library\"; then\n\t    dlprefiles=\"$dlprefiles $dir/$old_library\"\n\t  else\n\t    dlprefiles=\"$dlprefiles $dir/$linklib\"\n\t  fi\n\t  prev=\n\tfi\n\n\tif test -n \"$library_names\" &&\n\t   { test \"$prefer_static_libs\" = no || test -z \"$old_library\"; }; then\n\t  link_against_libtool_libs=\"$link_against_libtool_libs $arg\"\n\t  if test -n \"$shlibpath_var\"; then\n\t    # Make sure the rpath contains only unique directories.\n\t    case \"$temp_rpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) temp_rpath=\"$temp_rpath $dir\" ;;\n\t    esac\n\t  fi\n\n\t  # We need an absolute path.\n\t  case \"$dir\" in\n\t  [\\\\/] | [A-Za-z]:[\\\\/]*) absdir=\"$dir\" ;;\n\t  *)\n\t    absdir=`cd \"$dir\" && pwd`\n\t    if test -z \"$absdir\"; then\n\t      $echo \"$modename: warning: cannot determine absolute directory name of \\`$dir'\" 1>&2\n\t      $echo \"$modename: passing it literally to the linker, although it might fail\" 1>&2\n\t      absdir=\"$dir\"\n\t    fi\n\t    ;;\n\t  esac\n\t  \n\t  # This is the magic to use -rpath.\n\t  # Skip directories that are in the system default run-time\n\t  # search path, unless they have been requested with -R.\n\t  case \" $sys_lib_dlsearch_path \" in\n\t  *\" $absdir \"*) ;;\n\t  *)\n\t    case \"$compile_rpath \" in\n\t    *\" $absdir \"*) ;;\n\t    *) compile_rpath=\"$compile_rpath $absdir\" \n\t    esac\n\t    ;;\n\t  esac\n\n\t  case \" $sys_lib_dlsearch_path \" in\n\t  *\" $libdir \"*) ;;\n\t  *)\n\t    case \"$finalize_rpath \" in\n\t    *\" $libdir \"*) ;;\n\t    *) finalize_rpath=\"$finalize_rpath $libdir\"\n\t    esac\n\t    ;;\n\t  esac\n\n\t  lib_linked=yes\n\t  case \"$hardcode_action\" in\n\t  immediate | unsupported)\n\t    if test \"$hardcode_direct\" = no; then\n\t      compile_command=\"$compile_command $dir/$linklib\"\n\t      deplibs=\"$deplibs $dir/$linklib\"\n\t      case \"$host\" in\n\t      *-*-cygwin* | *-*-mingw* | *-*-os2*)\n\t\tdllsearchdir=`cd \"$dir\" && pwd || echo \"$dir\"`\n\t\tif test -n \"$dllsearchpath\"; then\n\t\t  dllsearchpath=\"$dllsearchpath:$dllsearchdir\"\n\t\telse\n\t\t  dllsearchpath=\"$dllsearchdir\"\n\t\tfi\n\t\t;;\n\t      esac\n\t    elif test \"$hardcode_minus_L\" = no; then\n\t      case \"$host\" in\n\t      *-*-sunos*)\n\t\tcompile_shlibpath=\"$compile_shlibpath$dir:\"\n\t\t;;\n\t      esac\n\t      case \"$compile_command \" in\n\t      *\" -L$dir \"*) ;;\n\t      *) compile_command=\"$compile_command -L$dir\";;\n\t      esac\n\t      compile_command=\"$compile_command -l$name\"\n\t      deplibs=\"$deplibs -L$dir -l$name\"\n\t    elif test \"$hardcode_shlibpath_var\" = no; then\n\t      case \":$compile_shlibpath:\" in\n\t      *\":$dir:\"*) ;;\n\t      *) compile_shlibpath=\"$compile_shlibpath$dir:\";;\n\t      esac\n\t      compile_command=\"$compile_command -l$name\"\n\t      deplibs=\"$deplibs -l$name\"\n\t    else\n\t      lib_linked=no\n\t    fi\n\t    ;;\n\n\t  relink)\n\t    if test \"$hardcode_direct\" = yes; then\n\t      compile_command=\"$compile_command $absdir/$linklib\"\n\t      deplibs=\"$deplibs $absdir/$linklib\"\n\t    elif test \"$hardcode_minus_L\" = yes; then\n\t      case \"$compile_command \" in\n\t      *\" -L$absdir \"*) ;;\n\t      *) compile_command=\"$compile_command -L$absdir\";;\n\t      esac\n\t      compile_command=\"$compile_command -l$name\"\n\t      deplibs=\"$deplibs -L$absdir -l$name\"\n\t    elif test \"$hardcode_shlibpath_var\" = yes; then\n\t      case \":$compile_shlibpath:\" in\n\t      *\":$absdir:\"*) ;;\n\t      *) compile_shlibpath=\"$compile_shlibpath$absdir:\";;\n\t      esac\n\t      compile_command=\"$compile_command -l$name\"\n\t      deplibs=\"$deplibs -l$name\"\n\t    else\n\t      lib_linked=no\n\t    fi\n\t    ;;\n\n\t  *)\n\t    lib_linked=no\n\t    ;;\n\t  esac\n\n\t  if test \"$lib_linked\" != yes; then\n\t    $echo \"$modename: configuration error: unsupported hardcode properties\"\n\t    exit 1\n\t  fi\n\n\t  # Finalize command for both is simple: just hardcode it.\n\t  if test \"$hardcode_direct\" = yes; then\n\t    finalize_command=\"$finalize_command $libdir/$linklib\"\n\t  elif test \"$hardcode_minus_L\" = yes; then\n\t    case \"$finalize_command \" in\n\t    *\" -L$libdir \"*) ;;\n\t    *) finalize_command=\"$finalize_command -L$libdir\";;\n\t    esac\n\t    finalize_command=\"$finalize_command -l$name\"\n\t  elif test \"$hardcode_shlibpath_var\" = yes; then\n\t    case \":$finalize_shlibpath:\" in\n\t    *\":$libdir:\"*) ;;\n\t    *) finalize_shlibpath=\"$finalize_shlibpath$libdir:\";;\n\t    esac\n\t    finalize_command=\"$finalize_command -l$name\"\n\t  else\n\t    # We cannot seem to hardcode it, guess we'll fake it.\n\t    case \"$finalize_command \" in\n\t    *\" -L$dir \"*) ;;\n\t    *) finalize_command=\"$finalize_command -L$libdir\";;\n\t    esac\n\t    finalize_command=\"$finalize_command -l$name\"\n\t  fi\n\telse\n\t  # Transform directly to old archives if we don't build new libraries.\n\t  if test -n \"$pic_flag\" && test -z \"$old_library\"; then\n\t    $echo \"$modename: cannot find static library for \\`$arg'\" 1>&2\n\t    exit 1\n\t  fi\n\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test \"$hardcode_direct\" != unsupported; then\n\t    test -n \"$old_library\" && linklib=\"$old_library\"\n\t    compile_command=\"$compile_command $dir/$linklib\"\n\t    finalize_command=\"$finalize_command $dir/$linklib\"\n\t  else\n\t    case \"$compile_command \" in\n\t    *\" -L$dir \"*) ;;\n\t    *) compile_command=\"$compile_command -L$dir\";;\n\t    esac\n\t    compile_command=\"$compile_command -l$name\"\n\t    case \"$finalize_command \" in\n\t    *\" -L$dir \"*) ;;\n\t    *) finalize_command=\"$finalize_command -L$dir\";;\n\t    esac\n\t    finalize_command=\"$finalize_command -l$name\"\n\t  fi\n\tfi\n\n\t# Add in any libraries that this one depends upon.\n\tcompile_command=\"$compile_command$dependency_libs\"\n\tfinalize_command=\"$finalize_command$dependency_libs\"\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\targ=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n\tcase \"$arg\" in\n\t*[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*)\n\t  arg=\"\\\"$arg\\\"\"\n\t  ;;\n\tesac\n\t;;\n      esac\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tcompile_command=\"$compile_command $arg\"\n\tfinalize_command=\"$finalize_command $arg\"\n      fi\n    done\n\n    if test -n \"$prev\"; then\n      $echo \"$modename: the \\`$prevarg' option requires an argument\" 1>&2\n      $echo \"$help\" 1>&2\n      exit 1\n    fi\n\n    if test \"$export_dynamic\" = yes && test -n \"$export_dynamic_flag_spec\"; then\n      eval arg=\\\"$export_dynamic_flag_spec\\\"\n      compile_command=\"$compile_command $arg\"\n      finalize_command=\"$finalize_command $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    outputname=`$echo \"X$output\" | $Xsed -e 's%^.*/%%'`\n    libobjs_save=\"$libobjs\"\n\n    case \"$output\" in\n    \"\")\n      $echo \"$modename: you must specify an output file\" 1>&2\n      $echo \"$help\" 1>&2\n      exit 1\n      ;;\n\n    *.a | *.lib)\n      if test -n \"$link_against_libtool_libs\"; then\n\t$echo \"$modename: error: cannot link libtool libraries into archives\" 1>&2\n\texit 1\n      fi\n\n      if test -n \"$deplibs\"; then\n\t$echo \"$modename: warning: \\`-l' and \\`-L' are ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\t$echo \"$modename: warning: \\`-dlopen' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$rpath\"; then\n\t$echo \"$modename: warning: \\`-rpath' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$xrpath\"; then\n\t$echo \"$modename: warning: \\`-R' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$vinfo\"; then\n\t$echo \"$modename: warning: \\`-version-info' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$release\"; then\n\t$echo \"$modename: warning: \\`-release' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t$echo \"$modename: warning: \\`-export-symbols' is ignored for archives\" 1>&2\n      fi\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=\"$output\"\n      ;;\n\n    *.la)\n      # Make sure we only generate libraries of the form `libNAME.la'.\n      case \"$outputname\" in\n      lib*)\n\tname=`$echo \"X$outputname\" | $Xsed -e 's/\\.la$//' -e 's/^lib//'`\n\teval libname=\\\"$libname_spec\\\"\n\t;;\n      *)\n\tif test \"$module\" = no; then\n\t  $echo \"$modename: libtool library \\`$output' must begin with \\`lib'\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit 1\n\tfi\n\tif test \"$need_lib_prefix\" != no; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  name=`$echo \"X$outputname\" | $Xsed -e 's/\\.la$//'`\n\t  eval libname=\\\"$libname_spec\\\"\n\telse\n\t  libname=`$echo \"X$outputname\" | $Xsed -e 's/\\.la$//'`\n\tfi\n\t;;\n      esac\n\n      output_objdir=`$echo \"X$output\" | $Xsed -e 's%/[^/]*$%%'`\n      if test \"X$output_objdir\" = \"X$output\"; then\n\toutput_objdir=\"$objdir\"\n      else\n\toutput_objdir=\"$output_objdir/$objdir\"\n      fi\n\n      if test -n \"$objs\"; then\n\t$echo \"$modename: cannot build libtool library \\`$output' from non-libtool objects:$objs\" 2>&1\n\texit 1\n      fi\n\n      # How the heck are we supposed to write a wrapper for a shared library?\n      if test -n \"$link_against_libtool_libs\"; then\n\t $echo \"$modename: error: cannot link shared libraries into libtool libraries\" 1>&2\n\t exit 1\n      fi\n\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\t$echo \"$modename: warning: \\`-dlopen' is ignored for libtool libraries\" 1>&2\n      fi\n\n      set dummy $rpath\n      if test $# -gt 2; then\n\t$echo \"$modename: warning: ignoring multiple \\`-rpath's for a libtool library\" 1>&2\n      fi\n      install_libdir=\"$2\"\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test \"$build_libtool_libs\" = yes; then\n\t  # Building a libtool convenience library.\n\t  libext=al\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\tdependency_libs=\"$deplibs\"\n\n\tif test -n \"$vinfo\"; then\n\t  $echo \"$modename: warning: \\`-version-info' is ignored for convenience libraries\" 1>&2\n\tfi\n\n\tif test -n \"$release\"; then\n\t  $echo \"$modename: warning: \\`-release' is ignored for convenience libraries\" 1>&2\n\tfi\n      else\n\n\t# Parse the version information argument.\n\tIFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS=':'\n\tset dummy $vinfo 0 0 0\n\tIFS=\"$save_ifs\"\n\n\tif test -n \"$8\"; then\n\t  $echo \"$modename: too many parameters to \\`-version-info'\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit 1\n\tfi\n\n\tcurrent=\"$2\"\n\trevision=\"$3\"\n\tage=\"$4\"\n\n\t# Check that each of the things are valid numbers.\n\tcase \"$current\" in\n\t0 | [1-9] | [1-9][0-9]*) ;;\n\t*)\n\t  $echo \"$modename: CURRENT \\`$current' is not a nonnegative integer\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit 1\n\t  ;;\n\tesac\n\n\tcase \"$revision\" in\n\t0 | [1-9] | [1-9][0-9]*) ;;\n\t*)\n\t  $echo \"$modename: REVISION \\`$revision' is not a nonnegative integer\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit 1\n\t  ;;\n\tesac\n\n\tcase \"$age\" in\n\t0 | [1-9] | [1-9][0-9]*) ;;\n\t*)\n\t  $echo \"$modename: AGE \\`$age' is not a nonnegative integer\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit 1\n\t  ;;\n\tesac\n\n\tif test $age -gt $current; then\n\t  $echo \"$modename: AGE \\`$age' is greater than the current interface number \\`$current'\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit 1\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase \"$version_type\" in\n\tnone) ;;\n\n\tirix)\n\t  major=`expr $current - $age + 1`\n\t  versuffix=\"$major.$revision\"\n\t  verstring=\"sgi$major.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test $loop != 0; do\n\t    iface=`expr $revision - $loop`\n\t    loop=`expr $loop - 1`\n\t    verstring=\"sgi$major.$iface:$verstring\"\n\t  done\n\t  ;;\n\n\tlinux)\n\t  major=.`expr $current - $age`\n\t  versuffix=\"$major.$age.$revision\"\n\t  ;;\n\n\tosf)\n\t  major=`expr $current - $age`\n\t  versuffix=\".$current.$age.$revision\"\n\t  verstring=\"$current.$age.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test $loop != 0; do\n\t    iface=`expr $current - $loop`\n\t    loop=`expr $loop - 1`\n\t    verstring=\"$verstring:${iface}.0\"\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  verstring=\"$verstring:${current}.0\"\n\t  ;;\n\n\tsunos)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\"\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\";\n\t  ;;\n\n\tfreebsd-elf)\n\t  major=\".$current\"\n\t  versuffix=\".$current\";\n\t  ;;\n\n\twindows)\n\t  # Like Linux, but with '-' rather than '.', since we only\n\t  # want one extension on Windows 95.\n\t  major=`expr $current - $age`\n\t  versuffix=\"-$major-$age-$revision\"\n\t  ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  major=.`expr $current - $age`\n\t  versuffix=\"$major.$age.$revision\"\n\t  # Darwin ld doesn't like 0 for these options...\n\t  minor_current=`expr $current + 1`\n\t  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n\t  ;;\n\n\t*)\n\t  $echo \"$modename: unknown library version type \\`$version_type'\" 1>&2\n\t  echo \"Fatal configuration error.  See the $PACKAGE docs for more information.\" 1>&2\n\t  exit 1\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  verstring=\"0.0\"\n\t  if test \"$need_version\" = no; then\n\t    versuffix=\n\t  else\n\t    versuffix=\".0.0\"\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test \"$avoid_version\" = yes && test \"$need_version\" = no; then\n\t  major=\n\t  versuffix=\n\t  verstring=\"\"\n\tfi\n\t\n\t# Check to see if the archive will have undefined symbols.\n\tif test \"$allow_undefined\" = yes; then\n\t  if test \"$allow_undefined_flag\" = unsupported; then\n\t    $echo \"$modename: warning: undefined symbols not allowed in $host shared libraries\" 1>&2\n\t    build_libtool_libs=no\n\t    build_old_libs=yes\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=\"$no_undefined_flag\"\n\tfi\n\n\tdependency_libs=\"$deplibs\"\n\tcase \"$host\" in\n\t*-*-cygwin* | *-*-mingw* | *-*-os2* | *-*-beos*)\n\t  # these systems don't actually have a c library (as such)!\n\t  ;;\n        *-*-rhapsody* | *-*-darwin1.[012])\n\t  # Rhapsody C library is in the System framework\n\t  deplibs=\"$deplibs -framework System\"\n\t  ;;\n\t*)\n\t  # Add libc to deplibs on all other systems.\n\t  deplibs=\"$deplibs -lc\"\n\t  ;;\n\tesac\n      fi\n\n      # Create the output directory, or remove our outputs if we need to.\n      if test -d $output_objdir; then\n\t$show \"${rm}r $output_objdir/$outputname $output_objdir/$libname.* $output_objdir/${libname}${release}.*\"\n\t$run ${rm}r $output_objdir/$outputname $output_objdir/$libname.* $output_objdir/${libname}${release}.*\n      else\n\t$show \"$mkdir $output_objdir\"\n\t$run $mkdir $output_objdir\n\tstatus=$?\n\tif test $status -ne 0 && test ! -d $output_objdir; then\n\t  exit $status\n\tfi\n      fi\n\n      # Now set the variables for building old libraries.\n      if test \"$build_old_libs\" = yes && test \"$build_libtool_libs\" != convenience ; then\n\toldlibs=\"$oldlibs $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$echo \"X$libobjs\" | $SP2NL | $Xsed -e '/\\.'${libext}'$/d' -e \"$lo2o\" | $NL2SP`\n      fi\n\n      if test \"$build_libtool_libs\" = yes; then\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\"\"\n\tversuffix=\"\"\n\tmajor=\"\"\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase \"$deplibs_check_method\" in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behaviour.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $rm conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $rm conftest\n\t  $CC -o conftest conftest.c $deplibs\n\t  if test $? -eq 0 ; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      name=\"`expr X$i : 'X-l\\(.*\\)'`\"\n\t      # If $name is empty we are operating on a -L argument.\n\t      if test \"$name\" != \"\" ; then\n\t\tlibname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t\tdeplib_matches=`eval \\\\$echo \\\"$library_names_spec\\\"`\n\t\tset dummy $deplib_matches\n\t\tdeplib_match=$2\n\t\tif test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t  newdeplibs=\"$newdeplibs $i\"\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  echo \"*** Warning: This library needs some functionality provided by $i.\"\n\t\t  echo \"*** I have the capability to make that library automatically link in when\"\n\t\t  echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t  echo \"*** shared version of the library, which you do not appear to have.\"\n\t\tfi\n\t      else\n\t\tnewdeplibs=\"$newdeplibs $i\"\n\t      fi\n\t    done\n\t  else\n\t    # Error occured in the first compile.  Let's try to salvage the situation:\n\t    # Compile a seperate program for each library.\n\t    for i in $deplibs; do\n\t      name=\"`expr X$i : 'X-l\\(.*\\)'`\"\n\t     # If $name is empty we are operating on a -L argument.\n\t      if test \"$name\" != \"\" ; then\n\t\t$rm conftest\n\t\t$CC -o conftest conftest.c $i\n\t\t# Did it work?\n\t\tif test $? -eq 0 ; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  libname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t\t  deplib_matches=`eval \\\\$echo \\\"$library_names_spec\\\"`\n\t\t  set dummy $deplib_matches\n\t\t  deplib_match=$2\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t    newdeplibs=\"$newdeplibs $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    echo\n\t\t    echo \"*** Warning: This library needs some functionality provided by $i.\"\n\t\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    echo \"*** shared version of the library, which you do not appear to have.\"\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  echo \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  echo \"***  make it link in!  You will probably need to install it or some\"\n\t\t  echo \"*** library that it depends on before this library will be fully\"\n\t\t  echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t      else\n\t\tnewdeplibs=\"$newdeplibs $i\"\n\t      fi\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method\n\t  file_magic_regex=\"`expr \\\"$deplibs_check_method\\\" : \\\"$2 \\(.*\\)\\\"`\"\n\t  for a_deplib in $deplibs; do\n\t    name=\"`expr X$a_deplib : 'X-l\\(.*\\)'`\"\n\t    # If $name is empty we are operating on a -L argument.\n\t    if test \"$name\" != \"\" ; then\n\t      libname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t      for i in $lib_search_path; do\n\t\t    potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t    for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null \\\n\t\t\t | grep \" -> \" >/dev/null; then\n\t\t\tcontinue \n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=\"$potent_lib\"\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | sed 's/.* -> //'`\n\t\t\tcase \"$potliblink\" in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=\"$potliblink\";;\n\t\t\t*) potlib=`$echo \"X$potlib\" | $Xsed -e 's,[^/]*$,,'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval $file_magic_cmd \\\"\\$potlib\\\" 2>/dev/null \\\n\t\t\t | sed 10q \\\n\t\t\t | egrep \"$file_magic_regex\" > /dev/null; then\n\t\t\tnewdeplibs=\"$newdeplibs $a_deplib\"\n\t\t\ta_deplib=\"\"\n\t\t\tbreak 2\n\t\t      fi\n\t\t    done\n\t      done\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\techo \"*** Warning: This library needs some functionality provided by $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have.\"\n\t      fi\n\t    else\n\t      # Add a -L argument.\n\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t    fi\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\"\"\n\t  if $echo \"X $deplibs\" | $Xsed -e 's/ -lc$//' \\\n\t       -e 's/ -[LR][^ ]*//g' -e 's/[ \t]//g' |\n\t     grep . >/dev/null; then\n\t    echo\n\t    if test \"X$deplibs_check_method\" = \"Xnone\"; then\n\t      echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t  fi\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tif test \"$droppeddeps\" = yes; then\n\t  if test \"$module\" = yes; then\n\t    echo\n\t    echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    echo \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    echo \"*** a static module, that should work as long as the dlopening\"\n\t    echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      echo\n\t      echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      echo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t      echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      echo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test \"$build_old_libs\" = no; then\n\t      oldlibs=\"$output_objdir/$libname.$libext\"\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    echo \"*** automatically added whenever a program is linked with this library\"\n\t    echo \"*** or is declared to -dlopen it.\"\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n      \n      # Test again, we may have decided not to build it any more\n      if test \"$build_libtool_libs\" = yes; then\n\t# Get the real and link names of the library.\n\teval library_names=\\\"$library_names_spec\\\"\n\tset dummy $library_names\n\trealname=\"$2\"\n\tshift; shift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval soname=\\\"$soname_spec\\\"\n\telse\n\t  soname=\"$realname\"\n\tfi\n\n\tlib=\"$output_objdir/$realname\"\n\tfor link\n\tdo\n\t  linknames=\"$linknames $link\"\n\tdone\n\n\t# Ensure that we have .o objects for linkers which dislike .lo\n\t# (e.g. aix) in case we are running --disable-static\n\tfor obj in $libobjs; do\n\t  xdir=`$echo \"X$obj\" | $Xsed -e 's%/[^/]*$%%'`\n\t  if test \"X$xdir\" = \"X$obj\"; then\n\t    xdir=\".\"\n\t  else\n\t    xdir=\"$xdir\"\n\t  fi\n\t  baseobj=`$echo \"X$obj\" | $Xsed -e 's%^.*/%%'`\n\t  oldobj=`$echo \"X$baseobj\" | $Xsed -e \"$lo2o\"`\n\t  if test ! -f $xdir/$oldobj; then\n\t    $show \"(cd $xdir && ${LN_S} $baseobj $oldobj)\"\n\t    $run eval '(cd $xdir && ${LN_S} $baseobj $oldobj)' || exit $?\n\t  fi\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$echo \"X$libobjs\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test \"$always_export_symbols\" = yes || test -n \"$export_symbols_regex\"; then\n\t    $show \"generating symbol list for \\`$libname.la'\"\n\t    export_symbols=\"$output_objdir/$libname.exp\"\n\t    $run $rm $export_symbols\n\t    eval cmds=\\\"$export_symbols_cmds\\\"\n\t    IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $cmds; do\n\t      IFS=\"$save_ifs\"\n\t      $show \"$cmd\"\n\t      $run eval \"$cmd\" || exit $?\n\t    done\n\t    IFS=\"$save_ifs\"\n\t    if test -n \"$export_symbols_regex\"; then\n\t      $show \"egrep -e \\\"$export_symbols_regex\\\" \\\"$export_symbols\\\" > \\\"${export_symbols}T\\\"\"\n\t      $run eval 'egrep -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      $show \"$mv \\\"${export_symbols}T\\\" \\\"$export_symbols\\\"\"\n\t      $run eval '$mv \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $run eval '$echo \"X$include_expsyms\" | $SP2NL >> \"$export_symbols\"'\n\tfi\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t  else\n\t    gentop=\"$output_objdir/${outputname}x\"\n\t    $show \"${rm}r $gentop\"\n\t    $run ${rm}r \"$gentop\"\n\t    $show \"mkdir $gentop\"\n\t    $run mkdir \"$gentop\"\n\t    status=$?\n\t    if test $status -ne 0 && test ! -d \"$gentop\"; then\n\t      exit $status\n\t    fi\n\t    generated=\"$generated $gentop\"\n\n\t    for xlib in $convenience; do\n\t      # Extract the objects.\n\t      case \"$xlib\" in\n\t      [\\\\/]* | [A-Za-z]:[\\\\/]*) xabs=\"$xlib\" ;;\n\t      *) xabs=`pwd`\"/$xlib\" ;;\n\t      esac\n\t      xlib=`$echo \"X$xlib\" | $Xsed -e 's%^.*/%%'`\n\t      xdir=\"$gentop/$xlib\"\n\n\t      $show \"${rm}r $xdir\"\n\t      $run ${rm}r \"$xdir\"\n\t      $show \"mkdir $xdir\"\n\t      $run mkdir \"$xdir\"\n\t      status=$?\n\t      if test $status -ne 0 && test ! -d \"$xdir\"; then\n\t\texit $status\n\t      fi\n\t      $show \"(cd $xdir && $AR x $xabs)\"\n\t      $run eval \"(cd \\$xdir && $AR x \\$xabs)\" || exit $?\n\n\t      libobjs=\"$libobjs \"`find $xdir -name \\*.o -print -o -name \\*.lo -print | $NL2SP`\n\t    done\n\t  fi\n\tfi\n\n\tif test \"$thread_safe\" = yes && test -n \"$thread_safe_flag_spec\"; then\n\t  eval flag=\\\"$thread_safe_flag_spec\\\"\n\t  linkopts=\"$linkopts $flag\"\n\tfi\n\n\t# Do each of the archive commands.\n\tif test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t  eval cmds=\\\"$archive_expsym_cmds\\\"\n\telse\n\t  eval cmds=\\\"$archive_cmds\\\"\n\tfi\n\tIFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=\"$save_ifs\"\n\t  $show \"$cmd\"\n\t  $run eval \"$cmd\" || exit $?\n\tdone\n\tIFS=\"$save_ifs\"\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    $show \"(cd $output_objdir && $rm $linkname && $LN_S $realname $linkname)\"\n\t    $run eval '(cd $output_objdir && $rm $linkname && $LN_S $realname $linkname)' || exit $?\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test \"$module\" = yes || test \"$export_dynamic\" = yes; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=\"$soname\"\n\tfi\n      fi\n      ;;\n\n    *.lo | *.o | *.obj)\n      if test -n \"$link_against_libtool_libs\"; then\n\t$echo \"$modename: error: cannot link libtool libraries into objects\" 1>&2\n\texit 1\n      fi\n\n      if test -n \"$deplibs\"; then\n\t$echo \"$modename: warning: \\`-l' and \\`-L' are ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\t$echo \"$modename: warning: \\`-dlopen' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$rpath\"; then\n\t$echo \"$modename: warning: \\`-rpath' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$xrpath\"; then\n\t$echo \"$modename: warning: \\`-R' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$vinfo\"; then\n\t$echo \"$modename: warning: \\`-version-info' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$release\"; then\n\t$echo \"$modename: warning: \\`-release' is ignored for objects\" 1>&2\n      fi\n\n      case \"$output\" in\n      *.lo)\n\tif test -n \"$objs\"; then\n\t  $echo \"$modename: cannot build library object \\`$output' from non-libtool objects\" 1>&2\n\t  exit 1\n\tfi\n\tlibobj=\"$output\"\n\tobj=`$echo \"X$output\" | $Xsed -e \"$lo2o\"`\n\t;;\n      *)\n\tlibobj=\n\tobj=\"$output\"\n\t;;\n      esac\n\n      # Delete the old objects.\n      $run $rm $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # reload_cmds runs $LD directly, so let us get rid of\n      # -Wl from whole_archive_flag_spec\n      wl= \n\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval reload_conv_objs=\\\"\\$reload_objs $whole_archive_flag_spec\\\"\n\telse\n\t  gentop=\"$output_objdir/${obj}x\"\n\t  $show \"${rm}r $gentop\"\n\t  $run ${rm}r \"$gentop\"\n\t  $show \"mkdir $gentop\"\n\t  $run mkdir \"$gentop\"\n\t  status=$?\n\t  if test $status -ne 0 && test ! -d \"$gentop\"; then\n\t    exit $status\n\t  fi\n\t  generated=\"$generated $gentop\"\n\n\t  for xlib in $convenience; do\n\t    # Extract the objects.\n\t    case \"$xlib\" in\n\t    [\\\\/]* | [A-Za-z]:[\\\\/]*) xabs=\"$xlib\" ;;\n\t    *) xabs=`pwd`\"/$xlib\" ;;\n\t    esac\n\t    xlib=`$echo \"X$xlib\" | $Xsed -e 's%^.*/%%'`\n\t    xdir=\"$gentop/$xlib\"\n\n\t    $show \"${rm}r $xdir\"\n\t    $run ${rm}r \"$xdir\"\n\t    $show \"mkdir $xdir\"\n\t    $run mkdir \"$xdir\"\n\t    status=$?\n\t    if test $status -ne 0 && test ! -d \"$xdir\"; then\n\t      exit $status\n\t    fi\n\t    $show \"(cd $xdir && $AR x $xabs)\"\n\t    $run eval \"(cd \\$xdir && $AR x \\$xabs)\" || exit $?\n\n\t    reload_conv_objs=\"$reload_objs \"`find $xdir -name \\*.o -print -o -name \\*.lo -print | $NL2SP`\n\t  done\n\tfi\n      fi\n\n      # Create the old-style object.\n      reload_objs=\"$objs \"`$echo \"X$libobjs\" | $SP2NL | $Xsed -e '/\\.'${libext}$'/d' -e '/\\.lib$/d' -e \"$lo2o\" | $NL2SP`\" $reload_conv_objs\"\n\n      output=\"$obj\"\n      eval cmds=\\\"$reload_cmds\\\"\n      IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n      for cmd in $cmds; do\n\tIFS=\"$save_ifs\"\n\t$show \"$cmd\"\n\t$run eval \"$cmd\" || exit $?\n      done\n      IFS=\"$save_ifs\"\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  $show \"${rm}r $gentop\"\n\t  $run ${rm}r $gentop\n\tfi\n\n\texit 0\n      fi\n\n      if test \"$build_libtool_libs\" != yes; then\n\tif test -n \"$gentop\"; then\n\t  $show \"${rm}r $gentop\"\n\t  $run ${rm}r $gentop\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t$show \"echo timestamp > $libobj\"\n\t$run eval \"echo timestamp > $libobj\" || exit $?\n\texit 0\n      fi\n\n      if test -n \"$pic_flag\"; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=\"$libobj\"\n\teval cmds=\\\"$reload_cmds\\\"\n\tIFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=\"$save_ifs\"\n\t  $show \"$cmd\"\n\t  $run eval \"$cmd\" || exit $?\n\tdone\n\tIFS=\"$save_ifs\"\n      else\n\t# Just create a symlink.\n\t$show $rm $libobj\n\t$run $rm $libobj\n\txdir=`$echo \"X$libobj\" | $Xsed -e 's%/[^/]*$%%'`\n\tif test \"X$xdir\" = \"X$libobj\"; then\n\t  xdir=\".\"\n\telse\n\t  xdir=\"$xdir\"\n\tfi\n\tbaseobj=`$echo \"X$libobj\" | $Xsed -e 's%^.*/%%'`\n\toldobj=`$echo \"X$baseobj\" | $Xsed -e \"$lo2o\"`\n\t$show \"(cd $xdir && $LN_S $oldobj $baseobj)\"\n\t$run eval '(cd $xdir && $LN_S $oldobj $baseobj)' || exit $?\n      fi\n\n      if test -n \"$gentop\"; then\n\t$show \"${rm}r $gentop\"\n\t$run ${rm}r $gentop\n      fi\n\n      exit 0\n      ;;\n\n    # Anything else should be a program.\n    *)\n      if test -n \"$vinfo\"; then\n\t$echo \"$modename: warning: \\`-version-info' is ignored for programs\" 1>&2\n      fi\n\n      if test -n \"$release\"; then\n\t$echo \"$modename: warning: \\`-release' is ignored for programs\" 1>&2\n      fi\n\n      if test \"$preload\" = yes; then\n\tif test \"$dlopen\" = unknown && test \"$dlopen_self\" = unknown &&\n\t   test \"$dlopen_self_static\" = unknown; then\n\t  $echo \"$modename: warning: \\`AC_LIBTOOL_DLOPEN' not used. Assuming no dlopen support.\"\n\tfi \n      fi\n    \n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$compile_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) compile_rpath=\"$compile_rpath $libdir\" ;;\n\t  esac\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_rpath=\"$finalize_rpath $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case \"$hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator\" in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\thardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    rpath=\"$rpath $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) perm_rpath=\"$perm_rpath $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      compile_rpath=\"$rpath\"\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case \"$hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator\" in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\thardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    rpath=\"$rpath $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_perm_rpath=\"$finalize_perm_rpath $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      finalize_rpath=\"$rpath\"\n\n      output_objdir=`$echo \"X$output\" | $Xsed -e 's%/[^/]*$%%'`\n      if test \"X$output_objdir\" = \"X$output\"; then\n\toutput_objdir=\"$objdir\"\n      else\n\toutput_objdir=\"$output_objdir/$objdir\"\n      fi\n\n      # Create the binary in the object directory, then wrap it.\n      if test ! -d $output_objdir; then\n\t$show \"$mkdir $output_objdir\"\n\t$run $mkdir $output_objdir\n\tstatus=$?\n\tif test $status -ne 0 && test ! -d $output_objdir; then\n\t  exit $status\n\tfi\n      fi\n\n      if test -n \"$libobjs\" && test \"$build_old_libs\" = yes; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$echo \"X$compile_command\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$echo \"X$finalize_command\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n      fi\n\n      dlsyms=\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tif test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\t  dlsyms=\"${outputname}S.c\"\n\telse\n\t  $echo \"$modename: not configured to extract global symbols from dlpreopened files\" 1>&2\n\tfi\n      fi\n\n      if test -n \"$dlsyms\"; then\n\tcase \"$dlsyms\" in\n\t\"\") ;;\n\t*.c)\n\t  # Discover the nlist of each of the dlfiles.\n\t  nlist=\"$output_objdir/${outputname}.nm\"\n\n\t  $show \"$rm $nlist ${nlist}S ${nlist}T\"\n\t  $run $rm \"$nlist\" \"${nlist}S\" \"${nlist}T\"\n\n\t  # Parse the name list into a source file.\n\t  $show \"creating $output_objdir/$dlsyms\"\n\n\t  test -z \"$run\" && $echo > \"$output_objdir/$dlsyms\" \"\\\n/* $dlsyms - symbol resolution table for \\`$outputname' dlsym emulation. */\n/* Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n/* Prevent the only kind of declaration conflicts we can make. */\n#define lt_preloaded_symbols some_other_symbol\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\t  if test \"$dlself\" = yes; then\n\t    $show \"generating symbol list for \\`$output'\"\n\n\t    test -z \"$run\" && $echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t    # Add our own program objects to the symbol list.\n\t    progfiles=`$echo \"X$objs\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n\t    for arg in $progfiles; do\n\t      $show \"extracting global C symbols from \\`$arg'\"\n\t      $run eval \"$NM $arg | $global_symbol_pipe >> '$nlist'\"\n\t    done\n\n\t    if test -n \"$exclude_expsyms\"; then\n\t      $run eval 'egrep -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T'\n\t      $run eval '$mv \"$nlist\"T \"$nlist\"'\n\t    fi\n\t    \n\t    if test -n \"$export_symbols_regex\"; then\n\t      $run eval 'egrep -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T'\n\t      $run eval '$mv \"$nlist\"T \"$nlist\"'\n\t    fi\n\n\t    # Prepare the list of exported symbols\n\t    if test -z \"$export_symbols\"; then\n\t      export_symbols=\"$output_objdir/$output.exp\"\n\t      $run $rm $export_symbols\n\t      $run eval \"sed -n -e '/^: @PROGRAM@$/d' -e 's/^.* \\(.*\\)$/\\1/p' \"'< \"$nlist\" > \"$export_symbols\"'\n\t    else\n\t      $run eval \"sed -e 's/\\([][.*^$]\\)/\\\\\\1/g' -e 's/^/ /' -e 's/$/$/'\"' < \"$export_symbols\" > \"$output_objdir/$output.exp\"'\n\t      $run eval 'grep -f \"$output_objdir/$output.exp\" < \"$nlist\" > \"$nlist\"T'\n\t      $run eval 'mv \"$nlist\"T \"$nlist\"'\n\t    fi\n\t  fi\n\n\t  for arg in $dlprefiles; do\n\t    $show \"extracting global C symbols from \\`$arg'\"\n\t    name=`echo \"$arg\" | sed -e 's%^.*/%%'`\n\t    $run eval 'echo \": $name \" >> \"$nlist\"'\n\t    $run eval \"$NM $arg | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -z \"$run\"; then\n\t    # Make sure we have at least an empty file.\n\t    test -f \"$nlist\" || : > \"$nlist\"\n\n\t    if test -n \"$exclude_expsyms\"; then\n\t      egrep -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t      $mv \"$nlist\"T \"$nlist\"\n\t    fi\n\n\t    # Try sorting and uniquifying the output.\n\t    if grep -v \"^: \" < \"$nlist\" | sort +2 | uniq > \"$nlist\"S; then\n\t      :\n\t    else\n\t      grep -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t    fi\n\n\t    if test -f \"$nlist\"S; then\n\t      eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$dlsyms\"'\n\t    else\n\t      echo '/* NONE */' >> \"$output_objdir/$dlsyms\"\n\t    fi\n\n\t    $echo >> \"$output_objdir/$dlsyms\" \"\\\n\n#undef lt_preloaded_symbols\n\n#if defined (__STDC__) && __STDC__\n# define lt_ptr_t void *\n#else\n# define lt_ptr_t char *\n# define const\n#endif\n\n/* The mapping between symbol names and symbols. */\nconst struct {\n  const char *name;\n  lt_ptr_t address;\n}\nlt_preloaded_symbols[] =\n{\\\n\"\n\n\t    sed -n -e 's/^: \\([^ ]*\\) $/  {\\\"\\1\\\", (lt_ptr_t) 0},/p' \\\n\t\t-e 's/^. \\([^ ]*\\) \\([^ ]*\\)$/  {\"\\2\", (lt_ptr_t) \\&\\2},/p' \\\n\t\t  < \"$nlist\" >> \"$output_objdir/$dlsyms\"\n\n\t    $echo >> \"$output_objdir/$dlsyms\" \"\\\n  {0, (lt_ptr_t) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t  fi\n\n\t  pic_flag_for_symtable=\n\t  case \"$host\" in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    case \"$compile_command \" in\n\t    *\" -static \"*) ;;\n\t    *) pic_flag_for_symtable=\" $pic_flag -DPIC -DFREEBSD_WORKAROUND\";;\n\t    esac;;\n\t  *-*-hpux*)\n\t    case \"$compile_command \" in\n\t    *\" -static \"*) ;;\n\t    *) pic_flag_for_symtable=\" $pic_flag -DPIC\";;\n\t    esac\n\t  esac\n\n\t  # Now compile the dynamic symbol file.\n\t  $show \"(cd $output_objdir && $CC -c$no_builtin_flag$pic_flag_for_symtable \\\"$dlsyms\\\")\"\n\t  $run eval '(cd $output_objdir && $CC -c$no_builtin_flag$pic_flag_for_symtable \"$dlsyms\")' || exit $?\n\n\t  # Clean up the generated files.\n\t  $show \"$rm $output_objdir/$dlsyms $nlist ${nlist}S ${nlist}T\"\n\t  $run $rm \"$output_objdir/$dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\"\n\n\t  # Transform the symbol file into the correct name.\n\t  compile_command=`$echo \"X$compile_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%\"`\n\t  finalize_command=`$echo \"X$finalize_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%\"`\n\t  ;;\n\t*)\n\t  $echo \"$modename: unknown suffix for \\`$dlsyms'\" 1>&2\n\t  exit 1\n\t  ;;\n\tesac\n      else\n\t# We keep going just in case the user didn't refer to\n\t# lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n\t# really was required.\n\n\t# Nullify the symbol file.\n\tcompile_command=`$echo \"X$compile_command\" | $Xsed -e \"s% @SYMFILE@%%\"`\n\tfinalize_command=`$echo \"X$finalize_command\" | $Xsed -e \"s% @SYMFILE@%%\"`\n      fi\n\n      if test -z \"$link_against_libtool_libs\" || test \"$build_libtool_libs\" != yes; then\n\t# Replace the output file specification.\n\tcompile_command=`$echo \"X$compile_command\" | $Xsed -e 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=\"$compile_command$compile_rpath\"\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\t$show \"$link_command\"\n\t$run eval \"$link_command\"\n\tstatus=$?\n\t\n\t# Delete the generated files.\n\tif test -n \"$dlsyms\"; then\n\t  $show \"$rm $output_objdir/${outputname}S.${objext}\"\n\t  $run $rm \"$output_objdir/${outputname}S.${objext}\"\n\tfi\n\n\texit $status\n      fi\n\n      if test -n \"$shlibpath_var\"; then\n\t# We should set the shlibpath_var\n\trpath=\n\tfor dir in $temp_rpath; do\n\t  case \"$dir\" in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*)\n\t    # Absolute path.\n\t    rpath=\"$rpath$dir:\"\n\t    ;;\n\t  *)\n\t    # Relative path: add a thisdir entry.\n\t    rpath=\"$rpath\\$thisdir/$dir:\"\n\t    ;;\n\t  esac\n\tdone\n\ttemp_rpath=\"$rpath\"\n      fi\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    rpath=\"$rpath$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    rpath=\"$rpath$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test \"$hardcode_action\" = relink; then\n\t# Fast installation is not supported\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\trelink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\t\n\t$echo \"$modename: warning: this platform does not like uninstalled shared libraries\" 1>&2\n\t$echo \"$modename: \\`$output' will be relinked during installation\" 1>&2\n      else\n\tif test \"$fast_install\" != no; then\n\t  link_command=\"$finalize_var$compile_command$finalize_rpath\"\n\t  if test \"$fast_install\" = yes; then\n\t    relink_command=`$echo \"X$compile_var$compile_command$compile_rpath\" | $Xsed -e 's%@OUTPUT@%\\$progdir/\\$file%g'`\n\t  else\n\t    # fast_install is set to needless\n\t    relink_command=\n\t  fi\n\telse\n\t  link_command=\"$compile_var$compile_command$compile_rpath\"\n\t  relink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\tfi\n      fi\n\n      # Replace the output file specification.\n      link_command=`$echo \"X$link_command\" | $Xsed -e 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n      \n      # Delete the old output files.\n      $run $rm $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      $show \"$link_command\"\n      $run eval \"$link_command\" || exit $?\n\n      # Now create the wrapper script.\n      $show \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\trelink_command=`$echo \"X$relink_command\" | $Xsed -e \"$sed_quote_subst\"`\n      fi\n\n      # Quote $echo for shipping.\n      if test \"X$echo\" = \"X$SHELL $0 --fallback-echo\"; then\n\tcase \"$0\" in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) qecho=\"$SHELL $0 --fallback-echo\";;\n\t*) qecho=\"$SHELL `pwd`/$0 --fallback-echo\";;\n\tesac\n\tqecho=`$echo \"X$qecho\" | $Xsed -e \"$sed_quote_subst\"`\n      else\n\tqecho=`$echo \"X$echo\" | $Xsed -e \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if our run command is non-null.\n      if test -z \"$run\"; then\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) output=`echo $output|sed 's,.exe$,,'` ;;\n\tesac\n\t$rm $output\n\ttrap \"$rm $output; exit 1\" 1 2 15\n\n\t$echo > $output \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed='sed -e 1s/^X//'\nsed_quote_subst='$sed_quote_subst'\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\nif test \\\"\\${CDPATH+set}\\\" = set; then CDPATH=:; export CDPATH; fi\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variable:\n  link_against_libtool_libs='$link_against_libtool_libs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$echo are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    echo=\\\"$qecho\\\"\n    file=\\\"\\$0\\\"\n    # Make sure echo works.\n    if test \\\"X\\$1\\\" = X--no-reexec; then\n      # Discard the --no-reexec flag, and continue.\n      shift\n    elif test \\\"X\\`(\\$echo '\\t') 2>/dev/null\\`\\\" = 'X\\t'; then\n      # Yippee, \\$echo works!\n      :\n    else\n      # Restart under the correct shell, and then maybe \\$echo will work.\n      exec $SHELL \\\"\\$0\\\" --no-reexec \\${1+\\\"\\$@\\\"}\n    fi\n  fi\\\n\"\n\t$echo >> $output \"\\\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$echo \\\"X\\$file\\\" | \\$Xsed -e 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | sed -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$echo \\\"X\\$file\\\" | \\$Xsed -e 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\/]* | [A-Za-z]:[\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$echo \\\"X\\$file\\\" | \\$Xsed -e 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | sed -n 's/.*-> //p'\\`\n  done\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test \"$fast_install\" = yes; then\n\t  echo >> $output \"\\\n  program=lt-'$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n  \n  if test ! -f \\\"\\$progdir/\\$program\\\" || \\\\\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | sed 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $mkdir \\\"\\$progdir\\\"\n    else\n      $rm \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  echo >> $output \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if (cd \\\"\\$thisdir\\\" && eval \\$relink_command); then :\n      else\n\t$rm \\\"\\$progdir/\\$file\\\"\n\texit 1\n      fi\n    fi\n\n    $mv \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $rm \\\"\\$progdir/\\$program\\\";\n      $mv \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $rm \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  echo >> $output \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\techo >> $output \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# Export our shlibpath_var if we have one.\n\tif test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $echo >> $output \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$echo \\\"X\\$$shlibpath_var\\\" | \\$Xsed -e 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t# fixup the dll searchpath if we need to.\n\tif test -n \"$dllsearchpath\"; then\n\t  $echo >> $output \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t$echo >> $output \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n\"\n\tcase $host in\n\t  # win32 systems need to use the prog path for dll\n\t  # lookup to work\n\t*-*-cygwin*)\n\t  $echo >> $output \"\\\n      exec \\$progdir/\\$program \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\n\t# Backslashes separate directories on plain windows\n\t*-*-mingw | *-*-os2*)\n\t  $echo >> $output \"\\\n      exec \\$progdir\\\\\\\\\\$program \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\n\t*)\n\t  $echo >> $output \"\\\n      # Export the path to the program.\n      PATH=\\\"\\$progdir:\\$PATH\\\"\n      export PATH\n\n      exec \\$program \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\tesac\n\t$echo >> $output \"\\\n      \\$echo \\\"\\$0: cannot exec \\$program \\${1+\\\"\\$@\\\"}\\\"\n      exit 1\n    fi\n  else\n    # The program doesn't exist.\n    \\$echo \\\"\\$0: error: \\$progdir/\\$program does not exist\\\" 1>&2\n    \\$echo \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    echo \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit 1\n  fi\nfi\\\n\"\n\tchmod +x $output\n      fi\n      exit 0\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      if test \"$build_libtool_libs\" = convenience; then\n\toldobjs=\"$libobjs_save\"\n\taddlibs=\"$convenience\"\n\tbuild_libtool_libs=no\n      else\n\tif test \"$build_libtool_libs\" = module; then\n\t  oldobjs=\"$libobjs_save\"\n\t  build_libtool_libs=no\n\telse\n\t  oldobjs=\"$objs \"`$echo \"X$libobjs_save\" | $SP2NL | $Xsed -e '/\\.'${libext}'$/d' -e '/\\.lib$/d' -e \"$lo2o\" | $NL2SP`\n\tfi\n\taddlibs=\"$old_convenience\"\n      fi\n\n      if test -n \"$addlibs\"; then\n\tgentop=\"$output_objdir/${outputname}x\"\n\t$show \"${rm}r $gentop\"\n\t$run ${rm}r \"$gentop\"\n\t$show \"mkdir $gentop\"\n\t$run mkdir \"$gentop\"\n\tstatus=$?\n\tif test $status -ne 0 && test ! -d \"$gentop\"; then\n\t  exit $status\n\tfi\n\tgenerated=\"$generated $gentop\"\n\t  \n\t# Add in members from convenience archives.\n\tfor xlib in $addlibs; do\n\t  # Extract the objects.\n\t  case \"$xlib\" in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) xabs=\"$xlib\" ;;\n\t  *) xabs=`pwd`\"/$xlib\" ;;\n\t  esac\n\t  xlib=`$echo \"X$xlib\" | $Xsed -e 's%^.*/%%'`\n\t  xdir=\"$gentop/$xlib\"\n\n\t  $show \"${rm}r $xdir\"\n\t  $run ${rm}r \"$xdir\"\n\t  $show \"mkdir $xdir\"\n\t  $run mkdir \"$xdir\"\n\t  status=$?\n\t  if test $status -ne 0 && test ! -d \"$xdir\"; then\n\t    exit $status\n\t  fi\n\t  $show \"(cd $xdir && $AR x $xabs)\"\n\t  $run eval \"(cd \\$xdir && $AR x \\$xabs)\" || exit $?\n\n\t  oldobjs=\"$oldobjs \"`find $xdir -name \\*.${objext} -print -o -name \\*.lo -print | $NL2SP`\n\tdone\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test \"$build_libtool_libs\" = yes; then\n\teval cmds=\\\"$old_archive_from_new_cmds\\\"\n      else\n\t# Ensure that we have .o objects in place in case we decided\n\t# not to build a shared library, and have fallen back to building\n\t# static libs even though --disable-static was passed!\n\tfor oldobj in $oldobjs; do\n\t  if test ! -f $oldobj; then\n\t    xdir=`$echo \"X$oldobj\" | $Xsed -e 's%/[^/]*$%%'`\n\t    if test \"X$xdir\" = \"X$oldobj\"; then\n\t      xdir=\".\"\n\t    else\n\t      xdir=\"$xdir\"\n\t    fi\n\t    baseobj=`$echo \"X$oldobj\" | $Xsed -e 's%^.*/%%'`\n\t    obj=`$echo \"X$baseobj\" | $Xsed -e \"$o2lo\"`\n\t    $show \"(cd $xdir && ${LN_S} $obj $baseobj)\"\n\t    $run eval '(cd $xdir && ${LN_S} $obj $baseobj)' || exit $?\n\t  fi\n\tdone\n\n\teval cmds=\\\"$old_archive_cmds\\\"\n      fi\n      IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n      for cmd in $cmds; do\n\tIFS=\"$save_ifs\"\n\t$show \"$cmd\"\n\t$run eval \"$cmd\" || exit $?\n      done\n      IFS=\"$save_ifs\"\n    done\n\n    if test -n \"$generated\"; then\n      $show \"${rm}r$generated\"\n      $run ${rm}r$generated\n    fi\n\n    # Now create the libtool archive.\n    case \"$output\" in\n    *.la)\n      old_library=\n      test \"$build_old_libs\" = yes && old_library=\"$libname.$libext\"\n      $show \"creating $output\"\n\n      if test -n \"$xrpath\"; then\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  temp_xrpath=\"$temp_xrpath -R$libdir\"\n\tdone\n\tdependency_libs=\"$temp_xrpath $dependency_libs\"\n      fi\n\n      # Only create the output if not a dry run.\n      if test -z \"$run\"; then\n\tfor installed in no yes; do\n\t  if test \"$installed\" = yes; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=\"$output_objdir/$outputname\"i\n\t  fi\n\t  $rm $output\n\t  $echo > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$dlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\\\n\"\n\tdone\n      fi\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      $show \"(cd $output_objdir && $rm $outputname && $LN_S ../$outputname $outputname)\"\n      $run eval \"(cd $output_objdir && $rm $outputname && $LN_S ../$outputname $outputname)\" || exit $?\n      ;;\n    esac\n    exit 0\n    ;;\n\n  # libtool install mode\n  install)\n    modename=\"$modename: install\"\n\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$nonopt\" = \"$SHELL\" || test \"$nonopt\" = /bin/sh; then\n      # Aesthetically quote it.\n      arg=`$echo \"X$nonopt\" | $Xsed -e \"$sed_quote_subst\"`\n      case \"$arg\" in\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*)\n\targ=\"\\\"$arg\\\"\"\n\t;;\n      esac\n      install_prog=\"$arg \"\n      arg=\"$1\"\n      shift\n    else\n      install_prog=\n      arg=\"$nonopt\"\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    arg=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n    case \"$arg\" in\n    *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*)\n      arg=\"\\\"$arg\\\"\"\n      ;;\n    esac\n    install_prog=\"$install_prog$arg\"\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=no\n    stripme=\n    for arg\n    do\n      if test -n \"$dest\"; then\n\tfiles=\"$files $dest\"\n\tdest=\"$arg\"\n\tcontinue\n      fi\n\n      case \"$arg\" in\n      -d) isdir=yes ;;\n      -f) prev=\"-f\" ;;\n      -g) prev=\"-g\" ;;\n      -m) prev=\"-m\" ;;\n      -o) prev=\"-o\" ;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*) ;;\n\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  prev=\n\telse\n\t  dest=\"$arg\"\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      arg=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n      case \"$arg\" in\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*)\n\targ=\"\\\"$arg\\\"\"\n\t;;\n      esac\n      install_prog=\"$install_prog $arg\"\n    done\n\n    if test -z \"$install_prog\"; then\n      $echo \"$modename: you must specify an install program\" 1>&2\n      $echo \"$help\" 1>&2\n      exit 1\n    fi\n\n    if test -n \"$prev\"; then\n      $echo \"$modename: the \\`$prev' option requires an argument\" 1>&2\n      $echo \"$help\" 1>&2\n      exit 1\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\t$echo \"$modename: no file or destination specified\" 1>&2\n      else\n\t$echo \"$modename: you must specify a destination\" 1>&2\n      fi\n      $echo \"$help\" 1>&2\n      exit 1\n    fi\n\n    # Strip any trailing slash from the destination.\n    dest=`$echo \"X$dest\" | $Xsed -e 's%/$%%'`\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=yes\n    if test \"$isdir\" = yes; then\n      destdir=\"$dest\"\n      destname=\n    else\n      destdir=`$echo \"X$dest\" | $Xsed -e 's%/[^/]*$%%'`\n      test \"X$destdir\" = \"X$dest\" && destdir=.\n      destname=`$echo \"X$dest\" | $Xsed -e 's%^.*/%%'`\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files\n      if test $# -gt 2; then\n\t$echo \"$modename: \\`$dest' is not a directory\" 1>&2\n\t$echo \"$help\" 1>&2\n\texit 1\n      fi\n    fi\n    case \"$destdir\" in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase \"$file\" in\n\t*.lo) ;;\n\t*)\n\t  $echo \"$modename: \\`$destdir' must be an absolute directory name\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit 1\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case \"$file\" in\n      *.a | *.lib)\n\t# Do the static libraries later.\n\tstaticlibs=\"$staticlibs $file\"\n\t;;\n\n      *.la)\n\t# Check to see that this really is a libtool archive.\n\tif (sed -e '2q' $file | egrep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then :\n\telse\n\t  $echo \"$modename: \\`$file' is not a valid libtool archive\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit 1\n\tfi\n\n\tlibrary_names=\n\told_library=\n\t# If there is no directory component, then add one.\n\tcase \"$file\" in\n\t*/* | *\\\\*) . $file ;;\n\t*) . ./$file ;;\n\tesac\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) current_libdirs=\"$current_libdirs $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) future_libdirs=\"$future_libdirs $libdir\" ;;\n\t  esac\n\tfi\n\n\tdir=\"`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`/\"\n\ttest \"X$dir\" = \"X$file/\" && dir=\n\tdir=\"$dir$objdir\"\n\n\t# See the names of the shared library.\n\tset dummy $library_names\n\tif test -n \"$2\"; then\n\t  realname=\"$2\"\n\t  shift\n\t  shift\n\n\t  # Install the shared library and build the symlinks.\n\t  $show \"$install_prog $dir/$realname $destdir/$realname\"\n\t  $run eval \"$install_prog $dir/$realname $destdir/$realname\" || exit $?\n\n\t  if test $# -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    for linkname\n\t    do\n\t      if test \"$linkname\" != \"$realname\"; then\n\t\t$show \"(cd $destdir && $rm $linkname && $LN_S $realname $linkname)\"\n\t\t$run eval \"(cd $destdir && $rm $linkname && $LN_S $realname $linkname)\"\n\t      fi\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=\"$destdir/$realname\"\n\t  eval cmds=\\\"$postinstall_cmds\\\"\n\t  IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n\t  for cmd in $cmds; do\n\t    IFS=\"$save_ifs\"\n\t    $show \"$cmd\"\n\t    $run eval \"$cmd\" || exit $?\n\t  done\n\t  IFS=\"$save_ifs\"\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tname=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\tinstname=\"$dir/$name\"i\n\t$show \"$install_prog $instname $destdir/$name\"\n\t$run eval \"$install_prog $instname $destdir/$name\" || exit $?\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && staticlibs=\"$staticlibs $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  destfile=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase \"$destfile\" in\n\t*.lo)\n\t  staticdest=`$echo \"X$destfile\" | $Xsed -e \"$lo2o\"`\n\t  ;;\n\t*.o | *.obj)\n\t  staticdest=\"$destfile\"\n\t  destfile=\n\t  ;;\n\t*)\n\t  $echo \"$modename: cannot copy a libtool object to \\`$destfile'\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit 1\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\tif test -n \"$destfile\"; then\n\t  $show \"$install_prog $file $destfile\"\n\t  $run eval \"$install_prog $file $destfile\" || exit $?\n\tfi\n\n\t# Install the old object if enabled.\n\tif test \"$build_old_libs\" = yes; then\n\t  # Deduce the name of the old-style object file.\n\t  staticobj=`$echo \"X$file\" | $Xsed -e \"$lo2o\"`\n\n\t  $show \"$install_prog $staticobj $staticdest\"\n\t  $run eval \"$install_prog \\$staticobj \\$staticdest\" || exit $?\n\tfi\n\texit 0\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  destfile=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# Do a test to see if this is really a libtool program.\n\tif (sed -e '4q' $file | egrep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t  link_against_libtool_libs=\n\t  relink_command=\n\n\t  # If there is no directory component, then add one.\n\t  case \"$file\" in\n\t  */* | *\\\\*) . $file ;;\n\t  *) . ./$file ;;\n\t  esac\n\n\t  # Check the variables that should have been set.\n\t  if test -z \"$link_against_libtool_libs\"; then\n\t    $echo \"$modename: invalid libtool wrapper script \\`$file'\" 1>&2\n\t    exit 1\n\t  fi\n\n\t  finalize=yes\n\t  for lib in $link_against_libtool_libs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      # If there is no directory component, then add one.\n\t      case \"$lib\" in\n\t      */* | *\\\\*) . $lib ;;\n\t      *) . ./$lib ;;\n\t      esac\n\t    fi\n\t    libfile=\"$libdir/`$echo \"X$lib\" | $Xsed -e 's%^.*/%%g'`\"\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      $echo \"$modename: warning: \\`$lib' has not been installed in \\`$libdir'\" 1>&2\n\t      finalize=no\n\t    fi\n\t  done\n\n\t  outputname=\n\t  if test \"$fast_install\" = no && test -n \"$relink_command\"; then\n\t    if test \"$finalize\" = yes && test -z \"$run\"; then\n\t      tmpdir=\"/tmp\"\n\t      test -n \"$TMPDIR\" && tmpdir=\"$TMPDIR\"\n\t      tmpdir=\"$tmpdir/libtool-$$\"\n\t      if $mkdir -p \"$tmpdir\" && chmod 700 \"$tmpdir\"; then :\n\t      else\n\t\t$echo \"$modename: error: cannot create temporary directory \\`$tmpdir'\" 1>&2\n\t\tcontinue\n\t      fi\n\t      outputname=\"$tmpdir/$file\"\n\t      # Replace the output file specification.\n\t      relink_command=`$echo \"X$relink_command\" | $Xsed -e 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t      $show \"$relink_command\"\n\t      if $run eval \"$relink_command\"; then :\n\t      else\n\t\t$echo \"$modename: error: relink \\`$file' with the above command before installing it\" 1>&2\n\t\t${rm}r \"$tmpdir\"\n\t\tcontinue\n\t      fi\n\t      file=\"$outputname\"\n\t    else\n\t      $echo \"$modename: warning: cannot relink \\`$file'\" 1>&2\n\t    fi\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$echo \"X$file\" | $Xsed -e \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t$show \"$install_prog$stripme $file $destfile\"\n\t$run eval \"$install_prog\\$stripme \\$file \\$destfile\" || exit $?\n\ttest -n \"$outputname\" && ${rm}r \"$tmpdir\"\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      name=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\n      # Set up the ranlib parameters.\n      oldlib=\"$destdir/$name\"\n\n      $show \"$install_prog $file $oldlib\"\n      $run eval \"$install_prog \\$file \\$oldlib\" || exit $?\n\n      # Do each command in the postinstall commands.\n      eval cmds=\\\"$old_postinstall_cmds\\\"\n      IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n      for cmd in $cmds; do\n\tIFS=\"$save_ifs\"\n\t$show \"$cmd\"\n\t$run eval \"$cmd\" || exit $?\n      done\n      IFS=\"$save_ifs\"\n    done\n\n    if test -n \"$future_libdirs\"; then\n      $echo \"$modename: warning: remember to run \\`$progname --finish$future_libdirs'\" 1>&2\n    fi\n\n    if test -n \"$current_libdirs\"; then\n      # Maybe just do a dry run.\n      test -n \"$run\" && current_libdirs=\" -n$current_libdirs\"\n      exec $SHELL $0 --finish$current_libdirs\n      exit 1\n    fi\n\n    exit 0\n    ;;\n\n  # libtool finish mode\n  finish)\n    modename=\"$modename: finish\"\n    libdirs=\"$nonopt\"\n    admincmds=\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for dir\n      do\n\tlibdirs=\"$libdirs $dir\"\n      done\n\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  eval cmds=\\\"$finish_cmds\\\"\n\t  IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n\t  for cmd in $cmds; do\n\t    IFS=\"$save_ifs\"\n\t    $show \"$cmd\"\n\t    $run eval \"$cmd\" || admincmds=\"$admincmds\n       $cmd\"\n\t  done\n\t  IFS=\"$save_ifs\"\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $run eval \"$cmds\" || admincmds=\"$admincmds\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    test \"$show\" = : && exit 0\n\n    echo \"----------------------------------------------------------------------\"\n    echo \"Libraries have been installed in:\"\n    for libdir in $libdirs; do\n      echo \"   $libdir\"\n    done\n    echo\n    echo \"If you ever happen to want to link against installed libraries\"\n    echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n    echo \"specify the full pathname of the library, or use \\`-LLIBDIR'\"\n    echo \"flag during linking and do at least one of the following:\"\n    if test -n \"$shlibpath_var\"; then\n      echo \"   - add LIBDIR to the \\`$shlibpath_var' environment variable\"\n      echo \"     during execution\"\n    fi\n    if test -n \"$runpath_var\"; then\n      echo \"   - add LIBDIR to the \\`$runpath_var' environment variable\"\n      echo \"     during linking\"\n    fi\n    if test -n \"$hardcode_libdir_flag_spec\"; then\n      libdir=LIBDIR\n      eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\n      echo \"   - use the \\`$flag' linker flag\"\n    fi\n    if test -n \"$admincmds\"; then\n      echo \"   - have your system administrator run these commands:$admincmds\"\n    fi\n    if test -f /etc/ld.so.conf; then\n      echo \"   - have your system administrator add LIBDIR to \\`/etc/ld.so.conf'\"\n    fi\n    echo\n    echo \"See any operating system documentation about shared libraries for\"\n    echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n    echo \"----------------------------------------------------------------------\"\n    exit 0\n    ;;\n\n  # libtool execute mode\n  execute)\n    modename=\"$modename: execute\"\n\n    # The first argument is the command name.\n    cmd=\"$nonopt\"\n    if test -z \"$cmd\"; then\n      $echo \"$modename: you must specify a COMMAND\" 1>&2\n      $echo \"$help\"\n      exit 1\n    fi\n\n    # Handle -dlopen flags immediately.\n    for file in $execute_dlfiles; do\n      if test ! -f \"$file\"; then\n\t$echo \"$modename: \\`$file' is not a file\" 1>&2\n\t$echo \"$help\" 1>&2\n\texit 1\n      fi\n\n      dir=\n      case \"$file\" in\n      *.la)\n\t# Check to see that this really is a libtool archive.\n\tif (sed -e '2q' $file | egrep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then :\n\telse\n\t  $echo \"$modename: \\`$lib' is not a valid libtool archive\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit 1\n\tfi\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\n\t# If there is no directory component, then add one.\n\tcase \"$file\" in\n\t*/* | *\\\\*) . $file ;;\n\t*) . ./$file ;;\n\tesac\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && $echo \"$modename: warning: \\`$file' was not linked with \\`-export-dynamic'\"\n\t  continue\n\tfi\n\n\tdir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`\n\ttest \"X$dir\" = \"X$file\" && dir=.\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  dir=\"$dir/$objdir\"\n\telse\n\t  $echo \"$modename: cannot find \\`$dlname' in \\`$dir' or \\`$dir/$objdir'\" 1>&2\n\t  exit 1\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tdir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`\n\ttest \"X$dir\" = \"X$file\" && dir=.\n\t;;\n\n      *)\n\t$echo \"$modename: warning \\`-dlopen' is ignored for non-libtool libraries and objects\" 1>&2\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=\"$absdir\"\n\n      # Now add the directory to shlibpath_var.\n      if eval \"test -z \\\"\\$$shlibpath_var\\\"\"; then\n\teval \"$shlibpath_var=\\\"\\$dir\\\"\"\n      else\n\teval \"$shlibpath_var=\\\"\\$dir:\\$$shlibpath_var\\\"\"\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=\"$magic\"\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case \"$file\" in\n      -*) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif (sed -e '4q' $file | egrep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t  # If there is no directory component, then add one.\n\t  case \"$file\" in\n\t  */* | *\\\\*) . $file ;;\n\t  *) . ./$file ;;\n\t  esac\n\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      file=`$echo \"X$file\" | $Xsed -e \"$sed_quote_subst\"`\n      args=\"$args \\\"$file\\\"\"\n    done\n\n    if test -z \"$run\"; then\n      if test -n \"$shlibpath_var\"; then\n        # Export the shlibpath_var.\n        eval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved enviroment variables\n      if test \"${save_LC_ALL+set}\" = set; then\n\tLC_ALL=\"$save_LC_ALL\"; export LC_ALL\n      fi\n      if test \"${save_LANG+set}\" = set; then\n\tLANG=\"$save_LANG\"; export LANG\n      fi\n\n      # Now actually exec the command.\n      eval \"exec \\$cmd$args\"\n\n      $echo \"$modename: cannot exec \\$cmd$args\"\n      exit 1\n    else\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n        eval \"\\$echo \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n        $echo \"export $shlibpath_var\"\n      fi\n      $echo \"$cmd$args\"\n      exit 0\n    fi\n    ;;\n\n  # libtool uninstall mode\n  uninstall)\n    modename=\"$modename: uninstall\"\n    rm=\"$nonopt\"\n    files=\n\n    for arg\n    do\n      case \"$arg\" in\n      -*) rm=\"$rm $arg\" ;;\n      *) files=\"$files $arg\" ;;\n      esac\n    done\n\n    if test -z \"$rm\"; then\n      $echo \"$modename: you must specify an RM program\" 1>&2\n      $echo \"$help\" 1>&2\n      exit 1\n    fi\n\n    for file in $files; do\n      dir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`\n      test \"X$dir\" = \"X$file\" && dir=.\n      name=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\n      rmfiles=\"$file\"\n\n      case \"$name\" in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif (sed -e '2q' $file | egrep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t  . $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    rmfiles=\"$rmfiles $dir/$n\"\n\t  done\n\t  test -n \"$old_library\" && rmfiles=\"$rmfiles $dir/$old_library\"\n\n\t  $show \"$rm $rmfiles\"\n\t  $run $rm $rmfiles\n\n\t  if test -n \"$library_names\"; then\n\t    # Do each command in the postuninstall commands.\n\t    eval cmds=\\\"$postuninstall_cmds\\\"\n\t    IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $cmds; do\n\t      IFS=\"$save_ifs\"\n\t      $show \"$cmd\"\n\t      $run eval \"$cmd\"\n\t    done\n\t    IFS=\"$save_ifs\"\n\t  fi\n\n\t  if test -n \"$old_library\"; then\n\t    # Do each command in the old_postuninstall commands.\n\t    eval cmds=\\\"$old_postuninstall_cmds\\\"\n\t    IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $cmds; do\n\t      IFS=\"$save_ifs\"\n\t      $show \"$cmd\"\n\t      $run eval \"$cmd\"\n\t    done\n\t    IFS=\"$save_ifs\"\n\t  fi\n\n\t  # FIXME: should reinstall the best remaining shared library.\n\tfi\n\t;;\n\n      *.lo)\n\tif test \"$build_old_libs\" = yes; then\n\t  oldobj=`$echo \"X$name\" | $Xsed -e \"$lo2o\"`\n\t  rmfiles=\"$rmfiles $dir/$oldobj\"\n\tfi\n\t$show \"$rm $rmfiles\"\n\t$run $rm $rmfiles\n\t;;\n\n      *)\n\t$show \"$rm $rmfiles\"\n\t$run $rm $rmfiles\n\t;;\n      esac\n    done\n    exit 0\n    ;;\n\n  \"\")\n    $echo \"$modename: you must specify a MODE\" 1>&2\n    $echo \"$generic_help\" 1>&2\n    exit 1\n    ;;\n  esac\n\n  $echo \"$modename: invalid operation mode \\`$mode'\" 1>&2\n  $echo \"$generic_help\" 1>&2\n  exit 1\nfi # test -z \"$show_help\"\n\n# We need to display help for each of the modes.\ncase \"$mode\" in\n\"\") $echo \\\n\"Usage: $modename [OPTION]... [MODE-ARG]...\n\nProvide generalized library-building support services.\n\n    --config          show all configuration variables\n    --debug           enable verbose shell tracing\n-n, --dry-run         display commands without modifying any files\n    --features        display basic configuration information and exit\n    --finish          same as \\`--mode=finish'\n    --help            display this help message and exit\n    --mode=MODE       use operation mode MODE [default=inferred from MODE-ARGS]\n    --quiet           same as \\`--silent'\n    --silent          don't print informational messages\n    --version         print version information\n\nMODE must be one of the following:\n\n      compile         compile a source file into a libtool object\n      execute         automatically set library path, then run a program\n      finish          complete the installation of libtool libraries\n      install         install libraries or executables\n      link            create a library or an executable\n      uninstall       remove libraries from an installed directory\n\nMODE-ARGS vary depending on the MODE.  Try \\`$modename --help --mode=MODE' for\na more detailed description of MODE.\"\n  exit 0\n  ;;\n\ncompile)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -static           always build a \\`.o' file suitable for static linking\n\nCOMPILE-COMMAND is a command to be used in creating a \\`standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix \\`.c' with the\nlibrary object suffix, \\`.lo'.\"\n  ;;\n\nexecute)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to \\`-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n  ;;\n\nfinish)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe \\`--dry-run' option if you just want to see what would be executed.\"\n  ;;\n\ninstall)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the \\`install' or \\`cp' program.\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n  ;;\n\nlink)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -dlopen FILE      \\`-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n\t\t    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n\t\t    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -static           do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n\t\t    specify library version info [each variable defaults to 0]\n\nAll other options (arguments beginning with \\`-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in \\`.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in \\`.la', then a libtool library is created,\nonly library objects (\\`.lo' files) may be specified, and \\`-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in \\`.a' or \\`.lib', then a standard library is created\nusing \\`ar' and \\`ranlib', or on Windows using \\`lib'.\n\nIf OUTPUT-FILE ends in \\`.lo' or \\`.${objext}', then a reloadable object file\nis created, otherwise an executable program is created.\"\n  ;;\n\nuninstall)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n  ;;\n\n*)\n  $echo \"$modename: invalid operation mode \\`$mode'\" 1>&2\n  $echo \"$help\" 1>&2\n  exit 1\n  ;;\nesac\n\necho\n$echo \"Try \\`$modename --help' for more information about other modes.\"\n\nexit 0\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/doc/plugprog.html": "<HTML><HEAD>\n<title>SASL Plugin Programmer's Guide</title>\n<!-- $Id: plugprog.html,v 1.6 2011/09/07 12:41:51 mel Exp $ -->\n</HEAD>\n<BODY>\n<h1>SASL Plugin Programmer's Guide</h1>\n\n<h3>NOTE: This is a work in progress. Any contributions would be\n<i>very</i> appreciated</h3>\n\n<ul><h2>Contents</h2>\n  <li><a href=\"#intro\">Introduction</a></li>\n  <ul>\n    <li><a href=\"#about_this_guide\">About this Guide</A></li>\n    <li><a href=\"#about_sasl\">What is SASL</A></li>\n  </ul>\n  <li><a href=\"#common\">Common Section</a></li>\n  <ul>\n    <li><a href=\"#overview\">Overview of Plugin Programming</a></li>\n    <li><a href=\"#sasl_utils_t\">Use of sasl_utils_t</a></li>\n    <li><a href=\"#error_reporting\">Error Reporting</a></li>\n    <li><a href=\"#memory\">Memory Allocation</a></li>\n    <li><a href=\"#cslssl\">Client Send First / Server Send Last</a></li>\n  </ul>\n  <li><a href=\"#client\">Client Plugins</a></li>\n  <li><a href=\"#server\">Server Plugins</a></li>\n  <li><a href=\"#canon_user\">User Canonicalization (canon_user) Plugins</a></li>\n  <li><a href=\"#auxprop\">Auxiliary Property (auxprop) Plugins</a></li>\n</ul>\n\n<a name=\"intro\"><h2>Introduction</h2></a>\n\n    <a name=\"about_this_guide\"><h3>About this Guide</h3></a>\n\n    <p>This guide gives a <i>very</i> brief overview on the things that one\n       needs to know to write a mechanism for the SASLv2 API (and thus\n       Cyrus SASLv2).  Note that this page is a brief overview <i>only</i>\n       and that the authoritative documentation are the header files\n       included in the SASL distribution.  If you have any questions, please\n       feel free to contact the Cyrus development team at\n       <a href=\"mailto:cyrus-bugs@andrew.cmu.edu\"><i>cyrus-bugs@andrew.cmu.edu\n\t</i></a> or the cyrus-sasl mailing list at\n       <a href=\"mailto:cyrus-sasl@andrew.cmu.edu\"><i>cyrus-sasl@andrew.cmu.edu\n\t</i></a>.</p>\n\n    <p>Please note that this guide is only intended for developers looking\n       to write mechanisms for the SASLv2 API, and that application programmers\n       should be reading <a href=\"programming.html\">this document</a> instead.\n    </p>\n   \n    <a name=\"about_sasl\"><h3>What is SASL?</h3></a>\n    <p>A description of SASL is covered in detail in the\n      <a href=\"programming.html\">programmer's guide</a>, which mechanism\n      developers should probably read first anyway to become familiar\n      with development using the SASL library.\n    </p>\n    \n<a name=\"common\"><h2>Common Section</h2></a>\n    <a name=\"overview\"><h3>Overview of Plugin Programming</h3></a>\n\n    <p>The basic idea behind programming plugins for Cyrus SASL rests in\n       the ability to dlopen a shared library.  Thus, all plugins should\n       be shared libraries.  It is recommended that they are libtool\n       libraries for portability reasons (Cyrus SASL parses .la files to\n       get the appropriate name to dlopen), but they can have an extention\n       of .so as well.</p>\n    <p>All plugins should live in the same directory\n       (generally /usr/lib/sasl2), which the glue code (that is, the interface\n       layer that sits between the plugins and the application) scans\n       when one of the init functions (sasl_server_init or sasl_client_init)\n       is called.  Cyrus SASL then attempts to open each library and\n       run an initialization function.  If the initialization function\n       succeeds, and the versions match, then the glue code determines\n       that the load was successful and the plugin is available for use.</p>\n    <p>There are serveral types of plugins (note that a given plugin library\n       may contain any or all of the following in combination, though\n       such a plugin would be a beast!):</p>\n    <ul>\n      <li><b>Mechanism Plugins</b> - These plugins implement mechanisms\n\tfor authentication, and are the majority of the plugins included\n\twith Cyrus SASL.  Generally implementing both a client and a server\n\tside they take care of the authentication process.</li>\n      <li><b>User Canonicalization Plugins</b> - These plugins enable differing\n\tways of canonicalizing authentication and authorization IDs.</li>\n      <li><b>Auxiliary Property Plugins</b> - These plugins allow auxilliary\n\tproperties about user accounts to be looked up, such as passwords.\n\tCyrus SASL includes a plugin to read sasldb files, for example.</li>\n    </ul>\n      \n    <a name=\"sasl_utils_t\"><h3>Use of sasl_utils_t</h3></a>\n\n    <p>Because of the way that shared library plugins are loaded for both\n       speed and namespace reasons, the symbol tables are not shared across\n       plugins.  Thus, the only interface that the plugin should assume it\n       has to the outside world is through the <tt>sasl_utils_t</tt> structure (or\n       through links that it specifically requires).  Likewise, the glue code\n       has no (and will use no) interface into the plugin other than the\n       contents of the structures that are passed back to it by the\n       initialization function.</p>\n    <p>This should be stressed again: do not assume you have access to any\n       functions except through links that your library explicitly makes\n       or through what is provided via the <tt>sasl_utils_t</tt> structure.</p>\n\n    <a name=\"error_reporting\"><h3>Error Reporting</h3></a>\n    <p>Error reporting is very important for failed authentication tracking\n       and helping to debug installations or authentication problems.  For\n       that reason, in addition to the standard SASL return codes, the\n       glue code provides an interface to its seterror function (via\n       <tt>sasl_utils_t</tt>).  This function sets detailed error information for\n       a given connection.</p>\n    <p><i>In order to ensure consistency of this information, it is the\n\tresponsibility of the deepest function with access to the sasl_conn_t\n\tmake the call to set the errdetail string.</i></p>\n\n    <a name=\"memory\"><h3>Memory Allocation</h3></a>\n    <p>Memory allocation in SASLv2 follows the simple paradigm that if you\n      allocate it, you free it.  This improves portability, and allows\n      for a large performance improvement over SASLv1.  To prevent memory\n      leaks (especially in the mechanism plugins), please ensure that you\n      follow this paradigm.</p>\n\n    <a name=\"cslssl\"><h3>Client Send First / Server Send Last</h3></a>\n    <p>Mechanism plugins used to have to worry about the situation\n      where they needed clients to send first (or server to send last), yet\n      the protocol did not support it.  Luckily, this is now handled by\n      the glue code, provided that the plugin declares the appropriate flags\n      in the structure returned by its init function.  Thus, the step functions\n      will not have to worry about these issues and can be implemented\n      knowing they will be called only when the application actually has\n      data for them and/or will allow them to send data.  These flags are as\n      follows:</p>\n    <ul>\n      <li><B>SASL_FEAT_WANT_CLIENT_FIRST</B>: The mechanism has the client\n\tside send first always.  (e.g. PLAIN)</li>\n      <li><B>SASL_FEAT_SERVER_FIRST</B>: The mechanism has the server side\n\tsend first always.  (e.g. CRAM-MD5)</li>\n    </ul>\n\n<p>If neither flag is set, the mechanism will handle the client-send\nfirst situation internally, because the client may or may not send\nfirst.  (e.g. DIGEST-MD5).  In this case, the plugin must\nintelligently check for the presence (or absence) of clientin/serverin\ndata.  Note that the optional client send-first is only possible when the\nprotocol permits an initial response.\n\n<p>The server send last situation is handled by the plugin intelligently\nsetting *serverout when the step function returns SASL_OK.  For mechanisms\nwhich never send last (e.g. PLAIN), *serverout must be set to NULL.  For\nmechanisms which always send last (e.g. DIGEST-MD5), *serverout must\npoint to the success data.  For mechanisms in which the server may or\nmay not send last (e.g. SRP), *serverout must be set accordingly.\n\n<a name=\"client\"><h2>Client Plugins</h2></a>\n    <p>Client-side mechanism plugins are generally included in the same\n       plugin with their <a href=\"#server\">server</a> counterpart, though\n       this is not a requirement.  They take care of the client-side of the\n       SASL negotiation.  For a simple example, see the ANONYMOUS plugin.</p>\n    <p>Client plugins must export <tt>sasl_client_plug_init</tt> which returns\n       a <tt>sasl_client_plug_t</tt> in order to load.  The structure has\n       several functional members and a global context (which applies to\n       all connections using the plugin).  The important ones are described\n       briefly here.</p>\n    <ul>\n      <li><b>mech_new</b> - Called at the beginning of each connection,\n\t(on a call to sasl_client_start),\n\tmech_new does mechanism-specific initialization, and if necessary\n\tallocates a connection context (which the glue code keeps track\n\tof for it).  mech_new does not actually send any data to the client,\n        it simply allocates the context.</li>\n      <li><b>mech_step</b> - Called from <tt>sasl_client_start</tt> and\n\t<tt>sasl_client_step</tt>, this function does the actual work of\n\tthe client\n\tside of the authentication.  If authentication is successful, it\n\tshould return SASL_OK, otherwise it should return a valid SASL\n\terror code (and call seterror).  This should also set up the\n        oparams structure before returning SASL_OK, including any\n        security layer information (in the way of callbacks).  Note\n        that as soon as the client has both the authentication and\n        authorization IDs, it MUST call the canon_user function provided\n        in its params structure (for both the authentication and\n\tauthorization IDs, with SASL_CU_AUTHID and SASL_CU_AUTHZID\n        respectively).</li>\n      <li><b>mech_dispose</b> - Called to dispose of a connection context.\n\tThis is only called when the connection will no longer be used\n        (e.g. when <tt>sasl_dispose</tt> is called)</li>\n      <li><b>mech_free</b> - Called when the sasl library is shutting down\n\t(by <tt>sasl_client_done/sasl_server_done/sasl_done</tt>).\n\tIntended to free any global state of the plugin.</li>\n    </ul>\n<a name=\"server\"><h2>Server Plugins</h2></a>\n    <p>Server-side mechanism plugins are generally included in the same\n       plugin with their <a href=\"#client\">client</a> counterpart, though\n       this is not a requirement.  They take care of the server-side of the\n       SASL negotiation, and are generally more complicated than their\n       client-side counterparts.  For a simple example, see the ANONYMOUS\n       plugin.</p>\n    <p>Server plugins must export <tt>sasl_server_plug_init</tt> which returns\n       a <tt>sasl_server_plug_t</tt> in order to load.  The structure has\n       several functional members and a global context (which applies to\n       all connections using the plugin).  The important ones are described\n       briefly here.</p>\n    <ul>\n      <li><b>mech_new</b> - Called at the beginning of each connection,\n\t(on a call to sasl_client_start),\n\tmech_new does mechanism-specific initialization, and if necessary\n\tallocates a connection context (which the glue code keeps track\n\tof for it).  mech_new does not actually send any data to the client,\n        it simply allocates the context.</li>\n      <li><b>mech_step</b> - Called from <tt>sasl_server_start</tt> and\n\t<tt>sasl_server_step</tt>, this function does the actual work of\n\tthe server\n\tside of the authentication.  If authentication is successful, it\n\tshould return SASL_OK, otherwise it should return a valid SASL\n\terror code (and call seterror).  This should also set up the\n        oparams structure before returning SASL_OK, including any\n        security layer information (in the way of callbacks and SSF\n\tinformation).  Also, as soon\n        as the mechanism has computed both the authentication and the\n        authorization IDs, it MUST call the canon_user function provided\n        in the server params structure (for both the authentication and\n\tauthorization IDs, with SASL_CU_AUTHID and SASL_CU_AUTHZID\n        respectively).  This action will also fill in its\n        propctx, so any auxiliary property <i>requests</i>\n        (for example, to lookup\n        the password) should be done before the request to canonicalize\n        the authentication id.  Authorization ID lookups do not occur until\n        after the plugin returns success to the SASL library.<p>\n\n        Before returning SASL_OK, <tt>mech_step</tt> must fill in the\n        oparams fields for which it is responsible, that is, <tt>doneflag</tt>\n        (set to 1 to indicate a complete exchange), <tt>maxoutbuf</tt>, or\n        the maximum output size it can do at once for a security layer,\n        <tt>mech_ssf</tt> or the supplied SSF of the security layer,\n        and <tt>encode</tt>, <tt>decode</tt>, <tt>encode_context</tt>,\n\tand <tt>decode_context</tt>,\n        which are what the glue code will call on calls to <tt>sasl_encode</tt>,\n\t<tt>sasl_encodev</tt>, and <tt>sasl_decode</tt>.</li>\n      <li><b>mech_dispose</b> - Called to dispose of a connection context.\n\tThis is only called when the connection will no longer be used\n        (e.g. when <tt>sasl_dispose</tt> is called)</li>\n      <li><b>mech_free</b> - Called when the sasl library is shutting down\n\t(by <tt>sasl_client_done/sasl_server_done/sasl_done</tt>).\n\tIntended to free any global state of the plugin.</li>\n      <li><b>setpass</b> - Called to set a user's password.  This allows\n\tmechanisms to support their own internal password or secret\n\tdatabase.</li>\n      <li><b>mech_avail</b> - Called by the first call to\n\t<tt>sasl_listmech</tt>,\n\tit checks to see if the mechanism is available for the given\n\tuser, and MAY allocate a connection context (thus avoiding\n\ta call to <tt>mech_new</tt>).  However it should not do this\n\twithout significant performance benefit as it forces the glue\n\tcode to keep track of extra contexts that may not be used.</li>\n    </ul>\n<a name=\"canon_user\"><h2>User Canonicalization (canon_user) Plugins</h2></a>\n    <p>User Canonicalization plugins allow for nonstandard ways of\n       canonicalizing the username.  They are subject to the following\n       requirements:</p>\n    <ul>\n      <li>They must copy their output into the provided output buffers.</li>\n      <li>The output buffers may be the same as the input buffers.</li>\n      <li>They must function for the case which is only an authentication\n\t  ID (flags == SASL_CU_AUTHID) or only an authorization ID\n\t  (flags == SASL_CU_AUTHZID) or both\n\t  (flags == SASL_CU_AUTHID | SASL_CU_AUTHZID)\n    </ul>\n    <p>User canonicalization plugins must export a <tt>sasl_canonuser_init</tt>\n       function which returns a <tt>sasl_canonuser_plug_t</tt> in order\n       to load successfully.  They must implement at least one of\n       the <tt>canon_user_client</tt> or <tt>canon_user_server</tt> members\n       of the <tt>sasl_canonuser_plug_t</tt>.  The INTERNAL canon_user plugin\n       that is inside of the glue code implements both in the same way.</p>\n<a name=\"auxprop\"><h2>Auxiliary Property (auxprop) Plugins</h2></a>\n    <p>Perhaps the most exciting addition in SASLv2, Auxprop plugins\n       allow for an easy way to perform password and secret lookups (as well\n       as other information needed for authentication and authorization)\n       from directory services, and in the same request allow the application\n       to receive properties that it needs to provide the service.\n    </p>\n    <p>Auxprop plugins need to export the <tt>sasl_auxprop_init</tt> function\n       and pass back a <tt>sasl_auxprop_plug_t</tt> in order to load\n       successfully.  The sasldb plugin included with the Cyrus SASL\n       distribution would be a good place to start.</p>\n    <p>Interfacing with property contexts is extremely well documented in\n       <tt>prop.h</tt> and so that is omitted here.  The only important\n       note is to be sure that you are using the interfaces provided\n       through the <tt>sasl_utils_t</tt> structure and not calling\n       the functions directly.</p>\n    <p>To successfully implement an auxprop plugin there is only one\n       required function to implement, that is the <tt>auxprop_lookup</tt>\n       member of the <tt>sasl_auxprop_plug_t</tt>.  This is called\n       just after canonicalization of the username, with the canonicalized\n       username.  It can then do whatever lookups are necessary for any\n       of the requested auxiliary properties.</p>\n</p>\n<hr>\nBack to the <A href=index.html>index</a>\n\n</body>\n</html>\n",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/doc/macosx.html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n<head>\n  <title>Building and Using Cyrus SASL on Mac OS X</title>\n<!-- $Id: macosx.html,v 1.6 2003/12/12 00:43:03 rbraun Exp $ -->\n</head>\n<body>\n<h1>Cyrus SASL v2 on Mac OS X (and 9)</h1>\n<p>The Cyrus SASL v2 distribution now supports Mac OS X, including\napplications written to Apple's Carbon and Cocoa interfaces, as well\nas the standard Unix-like API. It includes the following\ncomponents:</p>\n<ul>\n  <li>A port of the Unix SASL library, which lives in <tt>/usr/local/lib/libsasl2.dylib</tt>\n(or something like that) and\nwith plugins in <tt>/usr/lib/sasl</tt> (which should be a symlink to <tt>/usr/local/lib/sasl</tt>).\n  </li>\n  <li>A framework which lives in\n<tt>/Library/Frameworks/SASL2.framework</tt>, and allows the use of the\n<tt>-framework</tt> option to Apple's <tt>ld</tt>, or linking with the\nframework in Project Builder. This framework is in fact a wrapper for a\nsymlink to <tt>/usr/local/lib/libsasl2.dylib</tt> with the necessary\ninformation to recognize it as a framework. This is what we expect many\nCocoa and Carbon Mach-O applications will want to use, and the framework\nis required for CFBundle to work, which is used by the CFM glue library.\n</li>\n  <li>A CFM glue library (<tt>/Library/CFMSupport/SASL2GlueCFM</tt>) which\ncan be linked in by Carbon CFM applications, that uses CFBundle to bind\nthe framework and thus load the Unix-level library. It automatically loads\nthe important functions at <tt>sasl_client_init</tt> or\n<tt>sasl_server_init</tt> time; it also automatically makes sure memory\nallocation works if you're using the metrowerks malloc; if you're not,\n<tt>sasl_set_alloc</tt> works as usual. </li>\n  <li>A Carbon port of the existing CFM library for Mac OS 9. Note that\nthis could probably be modified fairly easily to work on OS X, but\nthere's not much point. The CFM glue layer to the Unix library\nsupports many more functions, including the entire server API; also,\nthe Unix implementation is mostly independent of Kerberos\nimplementation, while the Mac OS 9 Carbon port specifically requires\nMIT Kerberos for Macintosh 3.5 or later in order to get Kerberos\nsupport. The Mac OS 9 code implements only the client API, but this is\nmostly what is wanted from SASL on OS 9 anyway. </li>\n</ul>\n<p>If you are building a Carbon CFM application and intend it to run on\nboth OS 9 and OS X, you should link against the OS 9 Carbon SASL\nlibrary, since it exports fewer APIs (client side only, specifically)\nthan the OS X CFM glue. Your application should work seamlessly with\nboth libraries if you do this, despite the different implementations\nunderneath.</p>\n<p>If you need a Carbon CFM application to support server-side SASL\nfunctionality, you need to link against the <tt>SASL2GlueCFM</tt>\nlibrary, but be aware that your application will not run on OS 9.</p>\n<h2>Compiling and Using the Unix library</h2>\n\nThe Unix library is mostly ready to build on Mac OS X, but it does depend\non the <tt>dlcompat</tt> package in order to load its plugins.\n<tt>dlcompat-20010505</tt> is a relatively simple version known to work\nwith SASL; it is provided with the distribution in a tarball. You should\n<tt>make</tt> and <tt>make install</tt> the <tt>dlcompat</tt> library\n(which probably goes into <tt>/usr/local/lib/libdl.dylib</tt>) before\nattempting to <tt>./configure</tt> the SASL distribution itself. SASL will\nthen pretend it's a real Unix <tt>libdl</tt>, and link against it. \n\n<p>Since there are, at this point, newer and far more complex versions of\ndlcompat, you may prefer to use those instead if other software requires\ntheir functionality. The dlcompat homepage is located <a\nhref=\"http://www.opendarwin.org/projects/dlcompat/\">on the OpenDarwin\nsite.</a> Many users may want to install the <tt>/sw</tt> tree from <a\nhref=\"http://fink.sourceforge.net/\">the Fink project</a> to get this, as\nwell as possibly newer autotools and other software.<br> </p>\n\n<p>As of version 2.1.16, SASL uses and requires a recent version of GNU\nautotools (autoconf, automake, and libtool) to build its configuration scripts.\nIf you are building from GIT, you will need to have the autotools installed\non your system. The version included with all releases of the developer tools\nfor OS X 10.2.x is too old for this; if you aren't using OS X 10.3 or later,\nyou should upgrade to more recent patchlevels of these tools. The easiest way\nto do this is to <a href=\"http://fink.sourceforge.net/\">install the Fink\nenvironment</a> and then <tt>apt-get\ninstall autoconf2.5 automake1.7 libtool14</tt>.<br>\n</p>\n<p>Recent versions of SASL ship with Kerberos v4 disabled by default.\nIf you need Kerberos v4 for some reason, and you are using MIT Kerberos\nfor Macintosh 4.0 or later, you should <tt>./configure</tt> with\nthe added options <tt>\"--enable-krb4=/usr --without-openssl\n--disable-digest\"</tt> so that it finds the\ncorrect location for the header files, and does not use OpenSSL or\nbuild anything that depends on it (such as the digest-md5 plugin),\nsince OpenSSL provides its own DES routines which do not work with\nKerberos v4. <i>Please read the \"Known Problems\" section at the end of\nthis\ndocument for more information on this issue.<br>\n</i></p>\n<p>You must be root to make install, since <tt>/usr/local</tt> is only\nmodifiable by root. You need not enable the root account using\nNetInfo; the recommended (but underdocumented) method is to use\n<tt>sudo -s</tt> from the Terminal window when you are logged into an\nadministrator's account, and enter the password for that account. When\nbuilding on Mac OS X, <tt>make install</tt> will automatically add the\nframework to <tt>/Library/Frameworks</tt>.</p>\n<p>This does not build the CFM glue library. Building the CFM glue\nlibrary requires Metrowerks CodeWarrior Pro 6 or later (tested with\n6), and the files necessary to build it are in the\n<tt>mac/osx_cfm_glue</tt> folder.</p>\n<h2>Changes to the Unix library to make it work on OS X</h2>\n<p>This is provided for reference purposes only. The build system will\nautomatically take care of all of these issues when building on Darwin\nor Mac OS X.</p>\n<ul>\n  <li>The random code supports the preferred way to generate random\nnumbers in Darwin. (In SASL v2, it does this on all unix-like\nplatforms that lack jrand48). <i>Note that Mac OS X \"Jaguar\", version\n10.2,\nnow has the standard jrand48 function, and that SASL will use this\ninstead\nof the previous workaround.</i> </li>\n  <li>Symbols which are dlopened have an underscore prefixed. (This\nbehavior is detected by configure in SASL v2.) </li>\n  <li>Plugins are linked with the <tt>-module</tt> option to <tt>libtool</tt>,\nwhich causes the <tt>-bundle</tt> option to be\nsupplied to Apple's <tt>ld</tt>. (This is done on all platforms in\nSASL v2.) </li>\n  <li>The MD5 symbols are renamed to avoid library conflicts. This\nallows proper compilations against Heimdal and MIT's unix kerberos\ndistribution, and prevents crashes when linked against MIT Kerberos\nfor Macintosh (which also duplicates the symbols, but in a different\nway). Note that the MD5 symbols have local names on all platforms with\nSASL v2; this was only different in SASL v1. </li>\n  <li>MIT Kerberos for Macintosh 4.0 and later are fully supported. This\nwas accomplished by using <tt>krb_get_err_text</tt> if available and\nchecking for additional names for the krb4 libraries. </li> </ul>\n<h2>Changes to the Mac OS 9 projects to support Carbon</h2>\n<p><b><i>Please read these notes before you attempt to build SASL for OS 9\nCarbon!</i></b> </p> <ul>\n  <li><b>Important!</b> You must make sure that all files have their\ncorrect HFS filetype before starting to build this code! In\nparticular, all source and text files must be of type <tt>'TEXT'</tt>,\nwhich is not the default if you use the Mac OS X GIT client to check\nout the projects. If you run into this problem, you may want to use a\nutility such as FileTyper to recursively change the type on all\nfiles. CodeWarrior is less picky about the projects' filetypes, but\nsetting them to filetype <tt>'MMPr'</tt>, creator code <tt>'CWIE'</tt>\nmay be helpful in opening the projects from the Finder. Users on Mac OS\nX familiar with the Unix <tt>find</tt>\ncommand should be able to rig <tt>/Developer/Tools/SetFile</tt>\nto do this job as well. </li>\n  <li>Many of the important projects (for <tt>libdes</tt>, <tt>libsasl</tt>,\n    <tt>build_plugins</tt>, and the sample client <tt>sc_shlb</tt>)\nhave Carbon versions. </li>\n  <li>Plugins are loaded from a <tt>Carbon</tt> subfolder of the <tt>SASL\nv2</tt> folder in the Extensions folder. Plugins directly\nin\nthe <tt>SASL v2</tt> folder are considered to be for the Classic\nlibraries. </li>\n  <li>Note that when using the <tt>build_plugins</tt> project, you must\ngenerate the plugin init files using the <tt>makeinit.sh</tt> script in\nthe <tt>plugins</tt> directory. The easiest way to do this is to run the\nscript from a Unix shell, such as Mac OS X. You must then fix the\nfiletypes of the generated source files (see above). </li>\n  <li>There is a new folder in <tt>CommonKClient</tt> called <tt>mac_kclient3</tt>\nwhich contains code compatible with MIT's new <a\n href=\"http://web.mit.edu/macdev/Development/MITKerberos/MITKerberosLib/KClient/Documentation/index.html\">KClient\n3.0</a> API. This folder must be in your CodeWarrior access paths, the\nold <tt>mac_kclient</tt> folder must not, and it must precede the\nproject's main folder. </li>\n  <li>The kerberos4 plugin uses this new code. The kerberos4 plugin\nalso\nstatically links the Carbon <tt>libdes</tt>, and no other part of\nCarbon SASL uses <tt>libdes</tt> directly. <i>Your application should\n    <b>not</b> link against</i> <tt>libdes.shlb</tt> <i>under Carbon!</i>\n(It causes problems due to DES symbols also existing in the MIT\nKerberos library, which loads first.) </li>\n  <li>To build the projects, you should have the MIT Kerberos for\nMacintosh 3.5 installation disk images mounted, since the access paths\ninclude the absolute paths to the library directories from that\nimage. It's easier than you having to find the paths yourself, and\nsmaller than having to distribute the libraries with SASL. </li>\n</ul>\n<h2>Known Problems</h2>\n<ul>\n  <li>The Kerberos v4 headers bundled with Mac OS X (and Kerberos for\nMacintosh) are not compatible with OS X's OpenSSL headers. (Kerberos v4\nsupport is disabled by default.) If you actually need krb4 support, the\neasiest solution is to build without using OpenSSL's\n<tt>libcrypto</tt>. To do this, specify the <tt>--without-openssl</tt>\noption to <tt>configure</tt>. As of version 2.1.18, this automatically\ndisables using <tt>libcrypto</tt> for DES as well. You will probably\nalso need to specify <tt>--disable-digest</tt> since the digestmd5 plugin\ndoes not build against Kerberos v4's DES headers or library. Note that\nthis disables several features (digestmd5, NTLM, OTP) which require\nOpenSSL. If both Kerberos v4 and functionality that requires OpenSSL are\nneeded, it is probably possible to build the Kerberos v4 plugin against\nthe correct K4 DES libraries, and everything else against OpenSSL;\nhowever, we do not support that configuration.<br>\n  </li>\n  <li>Versions of Cyrus SASL prior to 2.1.14 with support for Carbon\nCFM applications on Mac OS X have a known bug involving the CFM glue\ncode (in <tt>mac/osx_cfm_glue</tt>). If <tt>sasl_done</tt> is called\nto unload the SASL library, and then one of the initialization\nfunctions (such as <tt>sasl_client_init</tt>) is called to\nreinitialize it from the same process, the application will crash. A\nfix for one obvious cause of this problem is included in 2.1.14;\nhowever, as of this writing, it has not been tested. It is possible\nthat other bugs in Cyrus SASL, or deficiencies in Apple's libraries,\nwill make this fix insufficient to resolve this issue. </li>\n</ul>\n</body>\n</html>\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/include/makemd5.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/krb4_sources/mk_priv.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/krb4_sources/lsb_addr_comp.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/krb4_sources/mk_auth.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/krb4_sources/rd_safe.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/krb4_sources/krb-protos.h",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/krb4_sources/mk_req.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/krb4_sources/rd_priv.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/krb4_sources/mk_safe.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/krb4_sources/rw.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/build_plugins/build_plugins.Carbon",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/kerberos_includes/krb-protos.h",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/sc_shlb/sc_shlb.Carbon",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/sc_shlb/sc_shlb.mono",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/CommonKClient/mac_kclient3/Headers/KerberosPreferences/KerberosPreferences.h",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/CommonKClient/mac_kclient3/Headers/KerberosSupport/ShlibDriver.h",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/CommonKClient/mac_kclient/KClient.h",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/CommonKClient/mac_kclient/KClient.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/CommonKClient/mac_kclient/KrbDriver.h",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/libdes/src/md4.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/libdes/src/sha.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/libdes/src/mdtest.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/libdes/src/passwd_dlg.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/libdes/src/md5.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/libdes/src/key_par.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/libdes/src/dllmain.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/libdes/src/passwd_dlg.h",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/libdes/src/passwd_dialog.res",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/libdes/src/md5.h",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/libdes/src/passwd_dialog.rc",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/libdes/src/sha.h",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/libdes/src/rnd_keys.c",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/libdes/src/passwd_dialog.aps",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/libdes/src/md4.h",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/libdes/libdes_ppc/libdes_ppc.Carbon",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/libsasl/libsasl.Carbon",
        "/tmp/vanessa/spack-stage/spack-stage-cyrus-sasl-2.1.26-av43465ngfbebfwbm7nitty7obfxku4v/spack-src/mac/osx_cfm_glue/cfmglue.proj"
    ],
    "total_files": 529
}