{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/plugins/include/vmdplugin.h": "/***************************************************************************\n *cr\n *cr            (C) Copyright 1995-2006 The Board of Trustees of the\n *cr                        University of Illinois\n *cr                         All Rights Reserved\n *cr\n ***************************************************************************/\n\n/***************************************************************************\n * RCS INFORMATION:\n *\n *      $RCSfile: vmdplugin.h,v $\n *      $Author: johns $       $Locker:  $             $State: Exp $\n *      $Revision: 1.34 $       $Date: 2018/05/02 03:12:56 $\n *\n ***************************************************************************/\n\n/** @file\n * This header must be included by every VMD plugin library.  It defines the\n * API for every plugin so that VMD can organize the plugins it finds.  \n */\n\n#ifndef VMD_PLUGIN_H\n#define VMD_PLUGIN_H\n\n\n/* \n * Preprocessor tricks to make it easier for us to redefine the names of\n * functions when building static plugins.\n */\n#if !defined(VMDPLUGIN)\n/** \n  * macro defining VMDPLUGIN if it hasn't already been set to the name of \n  * a static plugin that is being compiled.  This is the catch-all case.\n  */\n#define VMDPLUGIN vmdplugin\n#endif\n/** concatenation macro, joins args x and y together as a single string */\n#define xcat(x, y) cat(x, y)\n/** concatenation macro, joins args x and y together as a single string */\n#define cat(x, y) x ## y \n\n/*\n *  macros to correctly define plugin function names depending on whether \n *  the plugin is being compiled for static linkage or dynamic loading. \n *  When compiled for static linkage, each plugin needs to have unique\n *  function names for all of its entry points.  When compiled for dynamic\n *  loading, the plugins must name their entry points consistently so that\n *  the plugin loading mechanism can find the register, register_tcl, init,\n *  and fini routines via dlopen() or similar operating system interfaces.\n */\n/*@{*/\n/** Macro names entry points correctly for static linkage or dynamic loading */\n#define VMDPLUGIN_register     xcat(VMDPLUGIN, _register)\n#define VMDPLUGIN_register_tcl xcat(VMDPLUGIN, _register_tcl)\n#define VMDPLUGIN_init         xcat(VMDPLUGIN, _init)\n#define VMDPLUGIN_fini         xcat(VMDPLUGIN, _fini)\n/*@}*/\n\n\n/** \"WIN32\" is defined on both WIN32 and WIN64 platforms... */\n#if (defined(WIN32)) \n#define WIN32_LEAN_AND_MEAN\n#include <windows.h>\n\n#if !defined(STATIC_PLUGIN)\n#if defined(VMDPLUGIN_EXPORTS)\n/** \n *  Only define DllMain for plugins, not in VMD or in statically linked plugins\n *  VMDPLUGIN_EXPORTS is only defined when compiling dynamically loaded plugins\n */\nBOOL APIENTRY DllMain( HANDLE hModule,\n                       DWORD ul_reason_for_call,\n                       LPVOID lpReserved\n                     )\n{\n  return TRUE;\n}\n\n#define VMDPLUGIN_API __declspec(dllexport)\n#else\n#define VMDPLUGIN_API __declspec(dllimport)\n#endif /* VMDPLUGIN_EXPORTS */\n#else  /* ! STATIC_PLUGIN */\n#define VMDPLUGIN_API\n#endif /* ! STATIC_PLUGIN */\n#else\n/** If we're not compiling on Windows, then this macro is defined empty */\n#define VMDPLUGIN_API \n#endif\n\n/** define plugin linkage correctly for both C and C++ based plugins */\n#ifdef __cplusplus\n#define VMDPLUGIN_EXTERN extern \"C\" VMDPLUGIN_API\n#else\n#define VMDPLUGIN_EXTERN extern VMDPLUGIN_API\n#endif  /* __cplusplus */\n\n/* \n * Plugin API functions start here \n */\n\n\n/** \n * Init routine: called the first time the library is loaded by the \n * application and before any other API functions are referenced.\n * Return 0 on success.\n */\nVMDPLUGIN_EXTERN int VMDPLUGIN_init(void);\n\n/**\n * Macro for creating a struct header used in all plugin structures.\n * \n * This header should be placed at the top of every plugin API definition \n * so that it can be treated as a subtype of the base plugin type.\n *\n * abiversion: Defines the ABI for the base plugin type (not for other plugins)\n * type: A string descriptor of the plugin type.\n * name: A name for the plugin.\n * author: A string identifier, possibly including newlines.\n * Major and minor version.  \n * is_reentrant: Whether this library can be run concurrently with itself.\n */\n#define vmdplugin_HEAD \\\n  int abiversion; \\\n  const char *type; \\\n  const char *name; \\\n  const char *prettyname; \\\n  const char *author; \\\n  int majorv; \\\n  int minorv; \\\n  int is_reentrant; \n\n/** \n  * Typedef for generic plugin header, individual plugins can\n  * make their own structures as long as the header info remains \n  * the same as the generic plugin header, most easily done by \n  * using the vmdplugin_HEAD macro.\n  */\ntypedef struct {\n  vmdplugin_HEAD\n} vmdplugin_t;\n\n/**\n * Use this macro to initialize the abiversion member of each plugin\n */\n#define vmdplugin_ABIVERSION  18\n\n/*@{*/\n/** Use this macro to indicate a plugin's thread-safety at registration time */\n#define VMDPLUGIN_THREADUNSAFE 0\n#define VMDPLUGIN_THREADSAFE   1\n/*@}*/\n\n/*@{*/\n/** Error return code for use in the plugin registration and init functions */\n#define VMDPLUGIN_SUCCESS      0\n#define VMDPLUGIN_ERROR       -1\n/*@}*/\n\n/** \n * Function pointer typedef for register callback functions\n */\ntypedef int (*vmdplugin_register_cb)(void *, vmdplugin_t *);\n\n/**\n * Allow the library to register plugins with the application.\n * The callback should be called using the passed-in void pointer, which\n * should not be interpreted in any way by the library.  Each vmdplugin_t\n * pointer passed to the application should point to statically-allocated\n * or heap-allocated memory and should never be later modified by the plugin.\n * Applications must be permitted to retain only a copy of the the plugin\n * pointer, without making any deep copy of the items in the struct.\n */\nVMDPLUGIN_EXTERN int VMDPLUGIN_register(void *, vmdplugin_register_cb);\n\n/**\n * Allow the library to register Tcl extensions.  \n * This API is optional; if found by dlopen, it will be called after first\n * calling init and register.  \n */\nVMDPLUGIN_EXTERN int VMDPLUGIN_register_tcl(void *, void *tcl_interp, \n    vmdplugin_register_cb);\n\n/**\n * The Fini method is called when the application will no longer use \n * any plugins in the library.  \n */\nVMDPLUGIN_EXTERN int VMDPLUGIN_fini(void);\n\n#endif   /* VMD_PLUGIN_H */\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/psfgen/doc/psfgenflowchart.png",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/src/eabffunc.C",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/src/eabf2D.C",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/src/eabf1D.h",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/src/eabf.h",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/src/eabfTcl.C",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/src/eabf1D.C",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/src/eabf2D.h",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/src/eabffunc.h",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/REST2/equinpt.coor",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.13.coor",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.6.coor",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.6.vel",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.10.vel",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.10.coor",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.2.vel",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.9.coor",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.5.coor",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.8.vel",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.11.vel",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.5.vel",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.0.coor",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.9.vel",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.11.coor",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.2.coor",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.1.coor",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.15.vel",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.3.coor",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.4.coor",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.14.vel",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.8.coor",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.12.coor",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.14.coor",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.3.vel",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.13.vel",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.4.vel",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.12.vel",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.7.vel",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.1.vel",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.0.vel",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.7.coor",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/replica/umbrella/input/alanin.initial.15.coor",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/lib/abf/abf_script.tcl",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/.git/objects/pack/pack-f08900ccc71777254e87cbfd06823080a4d50055.pack",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/.git/objects/pack/pack-f08900ccc71777254e87cbfd06823080a4d50055.idx",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/plugins/molfile_plugin/src/periodic_table.h",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/namdcph_flowchart.png",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/namdcph_cycle.png",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/GaMD-scheme.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/shifting.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/namdcph_nemdmc_scheme.png",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/colvars_diagram.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/hybrid_sd_topology.png",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/softcore_lambda.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/namdcph_flowchart.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/ChargeGroupDiagram.png",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/overlap2.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/gridshift.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/amd_schematic.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/TI.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/overlap_dens3.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/MultipleQMDiagram.png",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/hybrid_qmmm_diagram.png",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/dual_top.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/pairlistdist.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/overlap_dens2.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/overlap1.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/overlap3.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/softcore_lambda.png",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/namdcph_cycle.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/fmaOn.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/OptionsDiagram.png",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/switching.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/overlap_dens1.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-namd-master-ks7fzm5quxk5mqraavuja46r5olgirb7/spack-src/ug/figures/QMMMBond_2bonds-01.png"
    ],
    "total_files": 1142
}