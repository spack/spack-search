{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-gtkorvo-dill-2.1-pealuzrntelra6wrcwufw4cprdwyblwh/spack-src/cmake/CreateLibtoolFile.cmake": "if (POLICY CMP0026)\n   cmake_policy(SET CMP0026 OLD)\nendif (POLICY CMP0026)\n\nMACRO(GET_TARGET_PROPERTY_WITH_DEFAULT _variable _target _property _default_value)\n   GET_TARGET_PROPERTY (${_variable} ${_target} ${_property})\n   IF (${_variable} MATCHES NOTFOUND)\n     SET (${_variable} ${_default_value})\n   ENDIF (${_variable} MATCHES NOTFOUND)\n ENDMACRO (GET_TARGET_PROPERTY_WITH_DEFAULT)\n \n MACRO(CREATE_LIBTOOL_FILE _target _install_DIR)\n   GET_TARGET_PROPERTY(_target_location ${_target} LOCATION)\n   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_static_lib ${_target} STATIC_LIB \"\")\n   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_dependency_libs ${_target} LT_DEPENDENCY_LIBS \"\")\n   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_current ${_target} LT_VERSION_CURRENT 0)\n   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_age ${_target} LT_VERSION_AGE 0)\n   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_revision ${_target} LT_VERSION_REVISION 0)\n   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_installed ${_target} LT_INSTALLED yes)\n   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_shouldnotlink ${_target} LT_SHOULDNOTLINK yes)\n   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_dlopen ${_target} LT_DLOPEN \"\")\n   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_dlpreopen ${_target} LT_DLPREOPEN \"\")\n   GET_FILENAME_COMPONENT(_laname ${_target_location} NAME_WE)\n   GET_FILENAME_COMPONENT(_soname ${_target_location} NAME)\n   SET(_laname ${PROJECT_BINARY_DIR}/${_laname}.la)\n   FILE(WRITE ${_laname} \"# ${_laname} - a libtool library file\\n\")\n   FILE(APPEND ${_laname} \"# Generated by CMake ${CMAKE_VERSION} (like GNU libtool)\\n\")\n   FILE(APPEND ${_laname} \"#\\n# Please DO NOT delete this file!\\n# It is necessary for linking the library with libtool.\\n\\n\" )\n   FILE(APPEND ${_laname} \"# The name that we can dlopen(3).\\n\")\n   FILE(APPEND ${_laname} \"dlname='${_soname}'\\n\\n\")\n   FILE(APPEND ${_laname} \"# Names of this library.\\n\")\n   FILE(APPEND ${_laname} \"library_names='${_soname}.${_target_current}.${_target_age}.${_target_revision} ${_soname}.${_target_current} ${_soname}'\\n\\n\")\n   FILE(APPEND ${_laname} \"# The name of the static archive.\\n\")\n   FILE(APPEND ${_laname} \"old_library='${_target_static_lib}'\\n\\n\")\n   FILE(APPEND ${_laname} \"# Linker flags that can not go in dependency_libs.\\n\")\n   FILE(APPEND ${_laname} \"inherited_linker_flags=' '\\n\\n\")\n   FILE(APPEND ${_laname} \"# Libraries that this one depends upon.\\n\")\n   FILE(APPEND ${_laname} \"dependency_libs='${_target_dependency_libs}'\\n\\n\")\n   FILE(APPEND ${_laname} \"# Names of additional weak libraries provided by this library\\n\")\n   FILE(APPEND ${_laname} \"weak_library_names=''\\n\\n\")\n   FILE(APPEND ${_laname} \"# Version information for ${_laname}.\\n\")\n   FILE(APPEND ${_laname} \"current=${_target_current}\\n\")\n   FILE(APPEND ${_laname} \"age=${_target_age}\\n\")\n   FILE(APPEND ${_laname} \"revision=${_target_revision}\\n\\n\")\n   FILE(APPEND ${_laname} \"# Is this an already installed library?\\n\")\n   FILE(APPEND ${_laname} \"installed=${_target_installed}\\n\\n\")\n   FILE(APPEND ${_laname} \"# Should we warn about portability when linking against -modules?\\n\")\n   FILE(APPEND ${_laname} \"shouldnotlink=${_target_shouldnotlink}\\n\\n\")\n   FILE(APPEND ${_laname} \"# Files to dlopen/dlpreopen\\n\")\n   FILE(APPEND ${_laname} \"dlopen='${_target_dlopen}'\\n\")\n   FILE(APPEND ${_laname} \"dlpreopen='${_target_dlpreopen}'\\n\\n\")\n   FILE(APPEND ${_laname} \"# Directory that this library needs to be installed in:\\n\")\n   FILE(APPEND ${_laname} \"libdir='${CMAKE_INSTALL_PREFIX}${_install_DIR}'\\n\")\n   INSTALL( FILES ${_laname} DESTINATION lib)\n ENDMACRO(CREATE_LIBTOOL_FILE)\n"
    },
    "skipped": [],
    "total_files": 77
}